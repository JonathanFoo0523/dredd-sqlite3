-- Time: 2024/06/09 02:50:42
-- Database: database29
-- Database version: 3.40.0
-- seed value: 2597773629
PRAGMA cache_size = 50000; -- 10ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4, +c5 REAL ); -- 1ms;
UPDATE rt0 SET (c4)=(0.37837168852915715) WHERE rt0.c2; -- 0ms;
REINDEX; -- 0ms;
ANALYZE rt0; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1666537918'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c5, c2)=(x'e61f', '-117022981', 0X47f5c016); -- 0ms;
UPDATE rt0 SET c3='1207287830'; -- 0ms;
PRAGMA auto_vacuum = FULL; -- 1ms;
UPDATE OR IGNORE rt0 SET (c0)=(NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c1, c5, c0) VALUES ('', NULL, NULL, '1207287830'), ('%*1Xea,', 0.7678144549288793, NULL, 0X49735792), (x'', '', NULL, 0.7092500881990145); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c4, c3, c1, c0, c2) VALUES (0.47104073617457354, -1700755691, '*I', '', '*I'); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c2, c5, c0) VALUES ('-1700755691', '', x'', CASE ((((x'f799')OR('U쀖M>')))OR(NULL))  WHEN ((NULL) NOT BETWEEN (NULL) AND ('')) THEN (NOT ('Bt')) ELSE NULL COLLATE NOCASE END); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c3) VALUES (x'', x''); -- 1ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (1.20728783E9); -- 0ms;
PRAGMA cell_size_check = true; -- 2ms;
UPDATE OR FAIL rt0 SET (c2)=(x'') WHERE rt0.c5; -- 0ms;
REINDEX; -- 0ms;
UPDATE rt0 SET (c3, c5)=(NULL, '-812535404'); -- 0ms;
VACUUM main; -- 1ms;
UPDATE OR IGNORE rt0 SET (c0, c5)=('', '1232295826') WHERE (((((((rt0.c5)OR(rt0.c1)))AND(rt0.c5))))>((((rt0.c1)==(rt0.c2))))); -- 1ms;
ANALYZE sqlite_master; -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT ALL (NULL IN ()) FROM rt0 WHERE ((-812535404 IN ())) ORDER BY CASE WHEN -1.17022981E8 THEN rt0.c2 END COLLATE NOCASE DESC; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=x'6bcb'; -- 0ms;
INSERT OR REPLACE INTO rt0(c3) VALUES (NULL), ('~L'), (''); -- 0ms;
UPDATE OR IGNORE rt0 SET (c4)=('0.7678144549288793') WHERE (x'd0dc' IN ((rt0.c3 IN (rt0.c0, rt0.c3)), ((rt0.c1)*(rt0.c0)))); -- 0ms;
UPDATE rt0 SET c2=-1313202165; -- 0ms;
UPDATE OR ABORT rt0 SET (c3)=(0.47104073617457354) WHERE ((NULL) ISNULL); -- 0ms;
INSERT OR REPLACE INTO rt0(c3, c0, c1) VALUES (NULL, '1519553450', '-1975662196'); -- 1ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (x''), (0.1670053397064829), (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c0, c4, c2, c1, c5) VALUES (x'', 0.29915631538164744, NULL, NULL, NULL); -- 0ms;
INSERT OR FAIL INTO rt0(c5, c0, c2) VALUES ('S讪hcUh_确U', 1.20728783E9, '-1313202165'); -- 1ms;
INSERT OR REPLACE INTO rt0 VALUES (0.5619398234126805, NULL, 0.46086344516994215, x'', x'', x''); -- 1ms;
UPDATE rt0 SET (c0, c0)=(x'', 0Xffffffff81a4f065); -- 0ms;
UPDATE OR ABORT rt0 SET (c3)=(0.8787144480793394); -- 0ms;
PRAGMA temp.legacy_file_format = false; -- 0ms;
UPDATE rt0 SET c2='-2119896987' WHERE ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)))AND(rt0.c2)))OR(((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))); -- 0ms;
DELETE FROM rt0 WHERE (((rt0.c1 IN (rt0.c5, 'G4'))) ISNULL); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=x'8567' WHERE CAST(rt0.c0 COLLATE NOCASE AS TEXT); -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c2, c4, c0) VALUES (NULL, -1.700755691E9, 0.8787144480793394, NULL), ('', 'w', NULL, 'jXdlgM'), ('502713167', NULL, NULL, 665963989); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (-2119896987); -- 0ms;
PRAGMA main.mmap_size; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c4, c3) VALUES (0.5625849526621636, x'fc40', '-1700755691'); -- 0ms;
INSERT OR FAIL INTO rt0(c5, c3, c2, c1, c0) VALUES (x'', '-117022981', x'7bab', NULL, NULL), ('-122535080', 0x27b1cdd5, '돺U-*C7C', 0.6875832392838332, 0Xffffffff824e29b0), (NULL, x'82b8', -7.97149074E8, NULL, 0.8787144480793394); -- 1ms;
INSERT OR IGNORE INTO rt0(c4, c3, c2, c1, c5) VALUES (NULL, 0Xffffffffb1ba200b, 'wSx', '1391275663', 0.7773982959933976), (NULL, 0.5086410268022732, x'', '-423742177', 0.2622970910877528), (0.4644626708948094, '1519553450', 0.651434301972012, '894080097', 0.042606330171052864), (x'', 'dL', 0.651434301972012, x'', 0.754302944503082), (NULL, x'5f17', x'', '', '1300889770'); -- 3ms;
INSERT OR IGNORE INTO rt0(c4, c1, c3, c5) VALUES (0.013282107911855023, 5.02713167E8, '1232295826', NULL); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c3=0.7816571398830047; -- 1ms;
COMMIT; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c5, c1, c3, c4) VALUES (0Xfffffffff9065efb, 0.9454316246265949, NULL, x''), (x'4a8b', 0.7678144549288793, -1.666537918E9, NULL), ('', -1.17022981E8, 0xffffffffcf91b194, 916764606); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c5) VALUES (x'', '-336981641', 970852933); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=NULL; -- 1ms;
INSERT OR ROLLBACK INTO rt0(c2, c1, c4) VALUES (NULL, x'', 0.853676416507331); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 1ms;
UPDATE OR IGNORE rt0 SET (c0, c3)=(NULL, -440412910) WHERE CASE WHEN ((rt0.c5) NOT BETWEEN (rt0.c2) AND (rt0.c3)) THEN (((NULL, rt0.c5, rt0.c4)) NOT BETWEEN ((rt0.c2, '-1610613863', rt0.c3)) AND ((-1.610613863E9, rt0.c5, rt0.c3))) ELSE ((((((((rt0.c2)OR(0.36019333694414635)))AND(rt0.c5)))OR(rt0.c5)))OR(rt0.c1)) END; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.checkpoint_fullfsync; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0, c3, c5) VALUES ('916764606', '浍蜕1\', 0.013282107911855023, 0.10646231159002706); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c4, c2, c5) VALUES ('-969665198', 0.367187379005406, 'z툭\rmtQNSU', NULL); -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c0, c3, c2) VALUES (0.8992190252915824, 'f', 0.01820602340207189, NULL), (x'', NULL, 'pJ', '-801590292'), (NULL, x'', '665963989', 0xffffffff8c36a126); -- 1ms;
UPDATE OR IGNORE rt0 SET (c3)=(x'9466') WHERE ((x'a2a6')<<(((rt0.c2)!=(rt0.c5)))); -- 0ms;
ANALYZE temp; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c3, c4, c1) VALUES (x'', x'', '8', 'zQU돬km'), (x'', x'', ((((CAST(-1.313202165E9 AS REAL))AND(x'')))OR(((x'')OR(0.7267043098335119)))), x'96ef'), (0.7092500881990145, LIKELIHOOD(DISTINCT 0.17869150295324732, 0.6608090010111398) COLLATE BINARY, NULL, '0.29915631538164744'); -- 1ms;
INSERT OR IGNORE INTO rt0(c4, c0, c1, c3, c2) VALUES (NULL, 0.20537382559455497, NULL, '-1949116498', 0.5625849526621636); -- 0ms;
INSERT OR REPLACE INTO rt0(c3, c2, c1, c0) VALUES (-1937253250, 0.365556031672684, x'', '''5>%h⍝'), ('-1050823918', NULL, 0.7091485050780193, NULL), ('-986760938', NULL, x'', '-1937253250'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
PRAGMA reverse_unordered_selects = false; -- 0ms;
UPDATE rt0 SET c4=x''; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=NULL, c0='' WHERE CAST(((((rt0.c3)OR(rt0.c0)))AND(rt0.c5)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c3, c0, c5) VALUES ('-601345151', 0.6432038394945979, '', 'G.}	Ki', x'c140'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
UPDATE OR FAIL rt0 SET c0=9.70852933E8 WHERE (~ (TRIM(DISTINCT rt0.c1, rt0.c5))); -- 1ms;
UPDATE OR IGNORE rt0 SET (c2)=('-457591617') WHERE rt0.c5; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 INSTEAD OF UPDATE ON v0 WHEN 'Ku' COLLATE BINARY BEGIN DELETE FROM rt0;END; -- 9ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA temp.busy_timeout = 10000; -- 0ms;
REINDEX; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
ROLLBACK TRANSACTION; -- 4ms;
ANALYZE; -- 4ms;
UPDATE OR IGNORE rt0 SET (c4)=('-1612867474'); -- 5ms;
INSERT OR ROLLBACK INTO rt0(c4) VALUES (x''), (-986760938), (0x49735792); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0, c3) VALUES (x'85cb', '-1700755691', 0.41956257230933325); -- 1ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
UPDATE rt0 SET c2=x'', c5='', c2=-111776331 WHERE CASE WHEN ((rt0.c4) NOTNULL) THEN (NOT (rt0.c3)) WHEN (rt0.c3 IN ()) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c5 END WHEN ((rt0.c3)|(rt0.c2)) THEN ((rt0.c5) IS FALSE) WHEN ((rt0.c0)AND(rt0.c1)) THEN json_quote(rt0.c4) WHEN ((rt0.c5)IS NOT(rt0.c1)) THEN HEX(DISTINCT rt0.c3) ELSE CAST(rt0.c2 AS TEXT) END; -- 0ms;
UPDATE rt0 SET c3=-84553476, c5='Sc97&Eq' WHERE (NOT (CAST(rt0.c0 AS REAL))); -- 0ms;
PRAGMA main.checkpoint_fullfsync = true; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c4)=('#A', NULL) WHERE ((CAST(rt0.c1 AS BLOB))>(rt0.c2 COLLATE RTRIM)); -- 1ms;
SELECT rtreecheck('rt0'); -- 0ms;
COMMIT; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0) VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c2, c5, c0) VALUES ('b\rᅷX%MfT', 0.7092500881990145, '1732465177'), (-423742177, '	3纄gv4힮', '-2108806736'), (0.365556031672684, x'ff62', 0X5a928baa); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2) VALUES (NULL); -- 0ms;
UPDATE rt0 SET c1=1.51955345E9 WHERE (+ ((0.754302944503082 IN (rt0.c2, rt0.c2)))); -- 0ms;
INSERT OR ABORT INTO rt0(c3, c0) VALUES ('-797149074', ''); -- 1ms;
INSERT OR IGNORE INTO rt0 VALUES ('1732465177', 'IT탼', NULL, '', x'', '0.367187379005406'); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'v0', ' sz=-2119896987 unordered noskipscan'); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=x''; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2072075836 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (0.7866251017498989); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c4)=('-19600037', -1267993940); -- 1ms;
UPDATE OR ROLLBACK rt0 SET c0=1207287830, c2=0xffffffffd58af5c6, c1=0.16565167319396645; -- 1ms;
UPDATE OR REPLACE rt0 SET c2=NULL; -- 5ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL rt0.c5, rt0.c1, rt0.c3, rt0.c2, rt0.c4, v0.c0 FROM rt0 CROSS JOIN v0 ON (((rt0.c4 IN ()))==(((rt0.c1)IS(x''))));
SELECT rt0.c5, rt0.c1, rt0.c3, rt0.c2, rt0.c4, v0.c0 FROM rt0 CROSS JOIN v0 ON (((rt0.c4 IN ()))=(((rt0.c1)IS(x'')))) WHERE ('0.9454316246265949') UNION ALL SELECT ALL rt0.c5, rt0.c1, rt0.c3, rt0.c2, rt0.c4, v0.c0 FROM rt0 CROSS JOIN v0 ON (((rt0.c4 IN ()))==(((rt0.c1)IS(x'')))) WHERE ((NOT ('0.9454316246265949'))) UNION ALL SELECT ALL rt0.c5, rt0.c1, rt0.c3, rt0.c2, rt0.c4, v0.c0 FROM rt0 CROSS JOIN v0 ON (((rt0.c4 IN ()))=(((rt0.c1)IS(x'')))) WHERE ((('0.9454316246265949') ISNULL));
SELECT ALL rt0.c5, rt0.c1, rt0.c3, rt0.c2, rt0.c4, v0.c0 FROM rt0 CROSS JOIN v0 ON (((rt0.c4 IN ()))==(((rt0.c1)IS(x''))));
SELECT DISTINCT v0.c0 FROM rt0, v0;
SELECT DISTINCT v0.c0 FROM rt0, v0 WHERE ((((- (rt0.c3)))%((+ (rt0.c5))))) UNION SELECT DISTINCT v0.c0 FROM rt0, v0 WHERE ((NOT ((((- (rt0.c3)))%((+ (rt0.c5))))))) UNION SELECT DISTINCT v0.c0 FROM rt0, v0 WHERE ((((((- (rt0.c3)))%((+ (rt0.c5))))) ISNULL));
SELECT DISTINCT v0.c0 FROM rt0, v0;
SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((rt0.c2 COLLATE RTRIM IN ((v0.c0 IN ()), UPPER(NULL)))) GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT ((rt0.c2 COLLATE RTRIM IN ((v0.c0 IN ()), UPPER(NULL)))))) GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((((rt0.c2 COLLATE RTRIM IN ((v0.c0 IN ()), UPPER(NULL)))) ISNULL)) GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c1;
SELECT ALL rt0.c5 FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c5))>((rt0.c4))) COLLATE NOCASE GROUP BY rt0.c5;
SELECT ALL rt0.c5 FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c5))>((rt0.c4))) COLLATE NOCASE GROUP BY rt0.c5 HAVING ((TOTAL(MAX(SUM(AVG(COUNT(*)))))) NOT BETWEEN (COUNT(*)) AND (((GROUP_CONCAT(MIN(TOTAL(rt0.c3)))) NOT NULL))) UNION ALL SELECT ALL rt0.c5 FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c5))>((rt0.c4))) COLLATE NOCASE GROUP BY rt0.c5 HAVING (NOT (((TOTAL(MAX(SUM(AVG(COUNT(*)))))) NOT BETWEEN (COUNT(*)) AND (((GROUP_CONCAT(MIN(TOTAL(rt0.c3)))) NOT NULL))))) UNION ALL SELECT ALL rt0.c5 FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c5))>((rt0.c4))) COLLATE NOCASE GROUP BY rt0.c5 HAVING ((((TOTAL(MAX(SUM(AVG(COUNT(*)))))) NOT BETWEEN (COUNT(*)) AND (((GROUP_CONCAT(MIN(TOTAL(rt0.c3)))) NOT NULL)))) ISNULL);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON TRIM(((rt0.c5)||(rt0.c5)));
SELECT * FROM rt0 CROSS JOIN v0 ON TRIM(((rt0.c5)||(rt0.c5))) WHERE (highlight(CASE rt0.c3  WHEN x'8cd0' THEN NULL END, (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))), rt0.c1, ((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))) UNION ALL SELECT * FROM rt0 CROSS JOIN v0 ON TRIM(((rt0.c5)||(rt0.c5))) WHERE ((NOT (highlight(CASE rt0.c3  WHEN x'8cd0' THEN NULL END, (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))), rt0.c1, ((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))))) UNION ALL SELECT * FROM rt0 CROSS JOIN v0 ON TRIM(((rt0.c5)||(rt0.c5))) WHERE (((highlight(CASE rt0.c3  WHEN x'8cd0' THEN NULL END, (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))), rt0.c1, ((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))) ISNULL));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON TRIM(((rt0.c5)||(rt0.c5)));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c5, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c5, rt0.c3, rt0.c0;
SELECT rt0.c2, rt0.c5, rt0.c3, rt0.c0 FROM rt0 WHERE ((~ ('-1986316935'))) GROUP BY rt0.c2, rt0.c5, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c5, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT ((~ ('-1986316935'))))) GROUP BY rt0.c2, rt0.c5, rt0.c3, rt0.c0 UNION SELECT rt0.c2, rt0.c5, rt0.c3, rt0.c0 FROM rt0 WHERE ((((~ ('-1986316935'))) ISNULL)) GROUP BY rt0.c2, rt0.c5, rt0.c3, rt0.c0;
SELECT rt0.c2, rt0.c5, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c5, rt0.c3, rt0.c0;
SELECT rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3 HAVING rt0.c4 UNION ALL SELECT rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3 HAVING (NOT (rt0.c4)) UNION ALL SELECT ALL rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3 HAVING ((rt0.c4) ISNULL);
SELECT rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3 HAVING rt0.c4 UNION ALL SELECT rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3 HAVING (NOT (rt0.c4)) UNION ALL SELECT ALL rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3 HAVING ((rt0.c4) ISNULL);
SELECT rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ('-336981641') UNION ALL SELECT * FROM v0 WHERE ((NOT ('-336981641'))) UNION ALL SELECT * FROM v0 WHERE ((('-336981641') ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((rt0.c4)<<(v0.c0)) IN ())) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((rt0.c4)<<(v0.c0)) IN ())))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((rt0.c4)<<(v0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM v0, rt0 WHERE (CASE ((rt0.c0)<>(rt0.c4))  WHEN (((NULL))!=((rt0.c1))) THEN ((v0.c0)-(rt0.c0)) END) GROUP BY rt0.c4, rt0.c0 UNION SELECT rt0.c4, rt0.c0 FROM v0, rt0 WHERE ((NOT (CASE ((rt0.c0)!=(rt0.c4))  WHEN (((NULL))<>((rt0.c1))) THEN ((v0.c0)-(rt0.c0)) END))) GROUP BY rt0.c4, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c0 FROM v0, rt0 WHERE (((CASE ((rt0.c0)!=(rt0.c4))  WHEN (((NULL))!=((rt0.c1))) THEN ((v0.c0)-(rt0.c0)) END) ISNULL)) GROUP BY rt0.c4, rt0.c0;
SELECT rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1 HAVING (((COUNT(rt0.c0)))<((COUNT(*)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((((COUNT(rt0.c0)))<((COUNT(*)))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1 HAVING (((((COUNT(rt0.c0)))<((COUNT(*))))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1 HAVING (((COUNT(rt0.c0)))<((COUNT(*)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((((COUNT(rt0.c0)))<((COUNT(*)))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1 HAVING (((((COUNT(rt0.c0)))<((COUNT(*))))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c4 FROM rt0, v0;
SELECT rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c4 FROM rt0, v0 WHERE ((((rt0.c0)) NOT BETWEEN (((- (rt0.c0)))) AND ((x'')))) UNION ALL SELECT ALL rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c4 FROM rt0, v0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN (((- (rt0.c0)))) AND ((x'')))))) UNION ALL SELECT rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c4 FROM rt0, v0 WHERE ((((((rt0.c0)) NOT BETWEEN (((- (rt0.c0)))) AND ((x'')))) ISNULL));
SELECT ALL rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c4 FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c5 FROM rt0, v0 GROUP BY rt0.c5;
SELECT rt0.c5 FROM rt0, v0 WHERE (NULL COLLATE RTRIM) GROUP BY rt0.c5 UNION SELECT rt0.c5 FROM rt0, v0 WHERE ((NOT (NULL COLLATE RTRIM))) GROUP BY rt0.c5 UNION SELECT rt0.c5 FROM rt0, v0 WHERE (((NULL COLLATE RTRIM) ISNULL)) GROUP BY rt0.c5;
SELECT ALL rt0.c5 FROM rt0, v0 GROUP BY rt0.c5;
SELECT ALL rt0.c5, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c5, rt0.c0, rt0.c1;
SELECT ALL rt0.c5, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c5, rt0.c0, rt0.c1 HAVING x'b5c9' UNION ALL SELECT rt0.c5, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c5, rt0.c0, rt0.c1 HAVING (NOT (x'b5c9')) UNION ALL SELECT ALL rt0.c5, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c5, rt0.c0, rt0.c1 HAVING ((x'b5c9') ISNULL);
SELECT ALL rt0.c5, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c5, rt0.c0, rt0.c1;
SELECT ALL rt0.c5, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c5, rt0.c0, rt0.c1 HAVING x'b5c9' UNION ALL SELECT rt0.c5, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c5, rt0.c0, rt0.c1 HAVING (NOT (x'b5c9')) UNION ALL SELECT ALL rt0.c5, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c5, rt0.c0, rt0.c1 HAVING ((x'b5c9') ISNULL);
SELECT ALL rt0.c5, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c5, rt0.c0, rt0.c1;
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE ((~ (((rt0.c3) NOT NULL)))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT ((~ (((rt0.c3) NOT NULL)))))) UNION ALL SELECT * FROM v0, rt0 WHERE ((((~ (((rt0.c3) NOT NULL)))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((NOT (IFNULL(DISTINCT rt0.c1, x'')))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((NOT (IFNULL(DISTINCT rt0.c1, x'')))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((NOT (IFNULL(DISTINCT rt0.c1, x'')))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c3, rt0.c5, rt0.c2, rt0.c4 FROM rt0, v0 NOT INDEXED GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c3, rt0.c5, rt0.c2, rt0.c4;
SELECT rt0.c1, v0.c0, rt0.c0, rt0.c3, rt0.c5, rt0.c2, rt0.c4 FROM rt0, v0 WHERE (CAST((- (rt0.c3)) AS INTEGER)) GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c3, rt0.c5, rt0.c2, rt0.c4 UNION SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c3, rt0.c5, rt0.c2, rt0.c4 FROM rt0, v0 WHERE ((NOT (CAST((- (rt0.c3)) AS INTEGER)))) GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c3, rt0.c5, rt0.c2, rt0.c4 UNION SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c3, rt0.c5, rt0.c2, rt0.c4 FROM rt0, v0 WHERE (((CAST((- (rt0.c3)) AS INTEGER)) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c3, rt0.c5, rt0.c2, rt0.c4;
SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c3, rt0.c5, rt0.c2, rt0.c4 FROM rt0, v0 NOT INDEXED GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c3, rt0.c5, rt0.c2, rt0.c4;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(TOTAL(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(TOTAL(v0.c0))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c4, rt0.c3 FROM v0, rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c4, rt0.c3 FROM v0, rt0 WHERE ((NOT (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c4, rt0.c3 FROM v0, rt0 WHERE ((NOT ((NOT (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c4, rt0.c3 FROM v0, rt0 WHERE ((((NOT (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END))) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c4, rt0.c3 FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM) IS TRUE)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0 COLLATE RTRIM) IS TRUE)))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0 COLLATE RTRIM) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (MAX(v0.c0, ((((v0.c0)OR(v0.c0)))AND(v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (MAX(v0.c0, ((((v0.c0)OR(v0.c0)))AND(v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((MAX(v0.c0, ((((v0.c0)OR(v0.c0)))AND(v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3;
SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING TRIM(GROUP_CONCAT(rt0.c4), TOTAL(TOTAL(GROUP_CONCAT(AVG(rt0.c3))))) COLLATE BINARY UNION ALL SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING (NOT (TRIM(GROUP_CONCAT(rt0.c4), TOTAL(TOTAL(GROUP_CONCAT(AVG(rt0.c3))))) COLLATE BINARY)) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING ((TRIM(GROUP_CONCAT(rt0.c4), TOTAL(TOTAL(GROUP_CONCAT(AVG(rt0.c3))))) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c4, rt0.c5, rt0.c1, rt0.c3 FROM v0, rt0;
SELECT ALL rt0.c4, rt0.c5, rt0.c1, rt0.c3 FROM v0, rt0 WHERE (((((((v0.c0) NOTNULL))AND((NOT (rt0.c5)))))OR(rt0.c2 COLLATE BINARY))) UNION ALL SELECT rt0.c4, rt0.c5, rt0.c1, rt0.c3 FROM v0, rt0 WHERE ((NOT (((((((v0.c0) NOTNULL))AND((NOT (rt0.c5)))))OR(rt0.c2 COLLATE BINARY))))) UNION ALL SELECT rt0.c4, rt0.c5, rt0.c1, rt0.c3 FROM v0, rt0 WHERE (((((((((v0.c0) NOTNULL))AND((NOT (rt0.c5)))))OR(rt0.c2 COLLATE BINARY))) ISNULL));
SELECT ALL rt0.c4, rt0.c5, rt0.c1, rt0.c3 FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE ((v0.c0)<=(v0.c0))  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 ELSE CAST(v0.c0 AS NUMERIC) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE ((v0.c0)<=(v0.c0))  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 ELSE CAST(v0.c0 AS NUMERIC) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE ((v0.c0)<=(v0.c0))  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 ELSE CAST(v0.c0 AS NUMERIC) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c4 FROM v0, rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM v0, rt0 WHERE ((+ (CAST(rt0.c5 AS BLOB)))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM v0, rt0 WHERE ((NOT ((+ (CAST(rt0.c5 AS BLOB)))))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM v0, rt0 WHERE ((((+ (CAST(rt0.c5 AS BLOB)))) ISNULL)) GROUP BY rt0.c4;
SELECT rt0.c4 FROM v0, rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(x'') UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(x''))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(x'')) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(x'') UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(x''))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(x'')) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c5, rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0;
SELECT rt0.c5, rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE ((rt0.c2 IN ())) UNION ALL SELECT ALL rt0.c5, rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT ((rt0.c2 IN ())))) UNION ALL SELECT rt0.c5, rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE ((((rt0.c2 IN ())) ISNULL));
SELECT rt0.c5, rt0.c1, rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON ((rt0.c2 COLLATE RTRIM) NOT NULL);
SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON ((rt0.c2 COLLATE RTRIM) NOT NULL) WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4)))OR(v0.c0)))AND(CAST(rt0.c3 AS BLOB)))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON ((rt0.c2 COLLATE RTRIM) NOT NULL) WHERE ((NOT (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4)))OR(v0.c0)))AND(CAST(rt0.c3 AS BLOB)))))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON ((rt0.c2 COLLATE RTRIM) NOT NULL) WHERE (((((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4)))OR(v0.c0)))AND(CAST(rt0.c3 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON ((rt0.c2 COLLATE RTRIM) NOT NULL);
SELECT ALL rt0.c5, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c5, rt0.c1, rt0.c0, rt0.c3, rt0.c2;
SELECT rt0.c5, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE (((rt0.c0)*(rt0.c2)) COLLATE RTRIM) GROUP BY rt0.c5, rt0.c1, rt0.c0, rt0.c3, rt0.c2 UNION SELECT rt0.c5, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c0)*(rt0.c2)) COLLATE RTRIM))) GROUP BY rt0.c5, rt0.c1, rt0.c0, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c5, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE (((((rt0.c0)*(rt0.c2)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c5, rt0.c1, rt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c5, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c5, rt0.c1, rt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c4 FROM v0 CROSS JOIN rt0 ON '-122535080' GROUP BY rt0.c4;
SELECT rt0.c4 FROM v0 CROSS JOIN rt0 ON '-122535080' GROUP BY rt0.c4 HAVING AVG((AVG(MAX(COUNT(COUNT(*)))) IN ())) UNION ALL SELECT ALL rt0.c4 FROM v0 CROSS JOIN rt0 ON '-122535080' GROUP BY rt0.c4 HAVING (NOT (AVG((AVG(MAX(COUNT(COUNT(*)))) IN ())))) UNION ALL SELECT ALL rt0.c4 FROM v0 CROSS JOIN rt0 ON '-122535080' GROUP BY rt0.c4 HAVING ((AVG((AVG(MAX(COUNT(COUNT(*)))) IN ()))) ISNULL);
SELECT ALL rt0.c4 FROM v0 CROSS JOIN rt0 ON '-122535080' GROUP BY rt0.c4;
SELECT rt0.c4 FROM v0 CROSS JOIN rt0 ON '-122535080' GROUP BY rt0.c4 HAVING AVG((AVG(MAX(COUNT(COUNT(*)))) IN ())) UNION ALL SELECT ALL rt0.c4 FROM v0 CROSS JOIN rt0 ON '-122535080' GROUP BY rt0.c4 HAVING (NOT (AVG((AVG(MAX(COUNT(COUNT(*)))) IN ())))) UNION ALL SELECT ALL rt0.c4 FROM v0 CROSS JOIN rt0 ON '-122535080' GROUP BY rt0.c4 HAVING ((AVG((AVG(MAX(COUNT(COUNT(*)))) IN ()))) ISNULL);
SELECT ALL rt0.c4 FROM v0 CROSS JOIN rt0 ON '-122535080' GROUP BY rt0.c4;
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (((rt0.c4 IN (rt0.c4)) IN ())) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c4 IN (rt0.c4)) IN ())))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((((rt0.c4 IN (rt0.c4)) IN ())) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c4 COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c4 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c4 COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c5 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c5;
SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c5 FROM rt0, v0 WHERE (((((rt0.c4, rt0.c2, rt0.c2))<>((rt0.c4, '1391275663', rt0.c4))) IN ())) GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c5 UNION SELECT rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c5 FROM rt0, v0 WHERE ((NOT (((((rt0.c4, rt0.c2, rt0.c2))<>((rt0.c4, '1391275663', rt0.c4))) IN ())))) GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c5 UNION SELECT rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c5 FROM rt0, v0 WHERE (((((((rt0.c4, rt0.c2, rt0.c2))<>((rt0.c4, '1391275663', rt0.c4))) IN ())) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c5;
SELECT rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c5 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c5;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING CAST(CASE rt0.c0  WHEN GROUP_CONCAT(rt0.c5) THEN MIN(COUNT(*)) END AS TEXT) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (CAST(CASE rt0.c0  WHEN GROUP_CONCAT(rt0.c5) THEN MIN(COUNT(*)) END AS TEXT))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((CAST(CASE rt0.c0  WHEN GROUP_CONCAT(rt0.c5) THEN MIN(COUNT(*)) END AS TEXT)) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2) IS FALSE) IN ())) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c2) IS FALSE) IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c2) IS FALSE) IN ())) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c5, rt0.c2, rt0.c0, v0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0, v0;
SELECT DISTINCT rt0.c5, rt0.c2, rt0.c0, v0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0, v0 WHERE ((((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))||((rt0.c0 IN ('S讪hcUh_确U', 0.996776390209582))))) UNION SELECT DISTINCT rt0.c5, rt0.c2, rt0.c0, v0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0, v0 WHERE ((NOT ((((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))||((rt0.c0 IN ('S讪hcUh_确U', 0.996776390209582))))))) UNION SELECT DISTINCT rt0.c5, rt0.c2, rt0.c0, v0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0, v0 WHERE ((((((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))||((rt0.c0 IN ('S讪hcUh_确U', 0.996776390209582))))) ISNULL));
SELECT DISTINCT rt0.c5, rt0.c2, rt0.c0, v0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0, v0;
SELECT ALL rt0.c0, rt0.c4, rt0.c5, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c5, rt0.c3;
SELECT ALL rt0.c0, rt0.c4, rt0.c5, rt0.c3 FROM v0, rt0 WHERE (((((((((((((rt0.c1)AND(v0.c0)))AND(rt0.c1)))OR(CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END)))OR(rt0.c0)))AND((1124378805 IN ()))))OR(((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c5))))) GROUP BY rt0.c0, rt0.c4, rt0.c5, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c5, rt0.c3 FROM v0, rt0 WHERE ((NOT (((((((((((((rt0.c1)AND(v0.c0)))AND(rt0.c1)))OR(CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END)))OR(rt0.c0)))AND((1124378805 IN ()))))OR(((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c5))))))) GROUP BY rt0.c0, rt0.c4, rt0.c5, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c5, rt0.c3 FROM v0, rt0 WHERE (((((((((((((((rt0.c1)AND(v0.c0)))AND(rt0.c1)))OR(CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END)))OR(rt0.c0)))AND((1124378805 IN ()))))OR(((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c5))))) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c5, rt0.c3;
SELECT ALL rt0.c0, rt0.c4, rt0.c5, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c5, rt0.c3;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((AVG(v0.c0)) IS FALSE))OR(SUM(v0.c0))))AND(((((MIN(v0.c0))AND('729120639')))OR(TOTAL(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((((AVG(v0.c0)) IS FALSE))OR(SUM(v0.c0))))AND(((((MIN(v0.c0))AND('729120639')))OR(TOTAL(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((AVG(v0.c0)) IS FALSE))OR(SUM(v0.c0))))AND(((((MIN(v0.c0))AND('729120639')))OR(TOTAL(v0.c0)))))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((AVG(v0.c0)) IS FALSE))OR(SUM(v0.c0))))AND(((((MIN(v0.c0))AND('729120639')))OR(TOTAL(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((((AVG(v0.c0)) IS FALSE))OR(SUM(v0.c0))))AND(((((MIN(v0.c0))AND('729120639')))OR(TOTAL(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((AVG(v0.c0)) IS FALSE))OR(SUM(v0.c0))))AND(((((MIN(v0.c0))AND('729120639')))OR(TOTAL(v0.c0)))))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((('oF+g')OR(json_array_length(v0.c0))))AND(((((v0.c0)OR(v0.c0)))OR(-1937253250))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((('oF+g')OR(json_array_length(v0.c0))))AND(((((v0.c0)OR(v0.c0)))OR(-1937253250))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((('oF+g')OR(json_array_length(v0.c0))))AND(((((v0.c0)OR(v0.c0)))OR(-1937253250))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (NULL) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0 WHERE ((NOT ((((rt0.c5, rt0.c5, rt0.c2))<((rt0.c1, rt0.c1, x'')))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM v0, rt0 WHERE ((NOT ((NOT ((((rt0.c5, rt0.c5, rt0.c2))<((rt0.c1, rt0.c1, x'')))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM v0, rt0 WHERE ((((NOT ((((rt0.c5, rt0.c5, rt0.c2))<((rt0.c1, rt0.c1, x'')))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((MIN(v0.c0)) NOT BETWEEN (v0.c0) AND (v0.c0)))>((((v0.c0))>((AVG(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((MIN(v0.c0)) NOT BETWEEN (v0.c0) AND (v0.c0)))>((((v0.c0))>((AVG(v0.c0)))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((MIN(v0.c0)) NOT BETWEEN (v0.c0) AND (v0.c0)))>((((v0.c0))>((AVG(v0.c0))))))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((MIN(v0.c0)) NOT BETWEEN (v0.c0) AND (v0.c0)))>((((v0.c0))>((AVG(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((MIN(v0.c0)) NOT BETWEEN (v0.c0) AND (v0.c0)))>((((v0.c0))>((AVG(v0.c0)))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((MIN(v0.c0)) NOT BETWEEN (v0.c0) AND (v0.c0)))>((((v0.c0))>((AVG(v0.c0))))))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CASE CAST(v0.c0 AS INTEGER)  WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0)LIKE(v0.c0)) ELSE v0.c0 COLLATE NOCASE END) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE CAST(v0.c0 AS INTEGER)  WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0)LIKE(v0.c0)) ELSE v0.c0 COLLATE NOCASE END))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CASE CAST(v0.c0 AS INTEGER)  WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0)LIKE(v0.c0)) ELSE v0.c0 COLLATE NOCASE END) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0 NOT INDEXED;
SELECT DISTINCT * FROM v0 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST(v0.c0 AS NUMERIC) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0 NOT INDEXED;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST((((v0.c0, v0.c0, '')) BETWEEN ((v0.c0, NULL, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) AS BLOB)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST((((v0.c0, v0.c0, '')) BETWEEN ((v0.c0, NULL, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) AS BLOB)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST((((v0.c0, v0.c0, '')) BETWEEN ((v0.c0, NULL, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) AS BLOB)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c0, rt0.c5 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c5;
SELECT ALL rt0.c2, rt0.c0, rt0.c5 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c5 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c5 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c5 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c5 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c5 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c5 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c5;
SELECT ALL rt0.c2, rt0.c0, rt0.c5 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c5 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c5 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c5 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c5 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c5 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c5 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c5;
SELECT ALL MIN((((- (rt0.c1)))*(0X26cdf073))) FROM v0, rt0;
SELECT * FROM v0 NATURAL JOIN rt0;
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((+ (((((rt0.c1)AND(rt0.c5)))AND(rt0.c5))))) UNION ALL SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((NOT ((+ (((((rt0.c1)AND(rt0.c5)))AND(rt0.c5))))))) UNION ALL SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((((+ (((((rt0.c1)AND(rt0.c5)))AND(rt0.c5))))) ISNULL));
SELECT * FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c5, rt0.c2, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c5, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((- ((rt0.c3 IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c5, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((NOT ((- ((rt0.c3 IN ())))))) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c5, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((((- ((rt0.c3 IN ())))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c5, rt0.c2, v0.c0 FROM v0, rt0;
SELECT ALL rt0.c0, rt0.c3, rt0.c5, rt0.c1, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c5, rt0.c1, rt0.c2, v0.c0, rt0.c4;
SELECT ALL rt0.c0, rt0.c3, rt0.c5, rt0.c1, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 WHERE (((((rt0.c3)IS NOT(rt0.c5))) NOT BETWEEN (((rt0.c4)&(rt0.c3))) AND (CAST(0.42742996964116364 AS INTEGER)))) GROUP BY rt0.c0, rt0.c3, rt0.c5, rt0.c1, rt0.c2, v0.c0, rt0.c4 UNION SELECT rt0.c0, rt0.c3, rt0.c5, rt0.c1, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 WHERE ((NOT (((((rt0.c3)IS NOT(rt0.c5))) NOT BETWEEN (((rt0.c4)&(rt0.c3))) AND (CAST(0.42742996964116364 AS INTEGER)))))) GROUP BY rt0.c0, rt0.c3, rt0.c5, rt0.c1, rt0.c2, v0.c0, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c5, rt0.c1, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 WHERE (((((((rt0.c3)IS NOT(rt0.c5))) NOT BETWEEN (((rt0.c4)&(rt0.c3))) AND (CAST(0.42742996964116364 AS INTEGER)))) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c5, rt0.c1, rt0.c2, v0.c0, rt0.c4;
SELECT ALL rt0.c0, rt0.c3, rt0.c5, rt0.c1, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c5, rt0.c1, rt0.c2, v0.c0, rt0.c4;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING COUNT(((COUNT(MAX(AVG(TOTAL(MIN(v0.c0))))))<<(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(((COUNT(MAX(AVG(TOTAL(MIN(v0.c0))))))<<(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(((COUNT(MAX(AVG(TOTAL(MIN(v0.c0))))))<<(v0.c0)))) ISNULL);
SELECT ALL v0.c0, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0;
SELECT ALL v0.c0, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0 WHERE (LIKELY(DISTINCT ((((rt0.c2)OR(rt0.c0)))OR('Z(wY')))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((NOT (LIKELY(DISTINCT ((((rt0.c2)OR(rt0.c0)))OR('Z(wY')))))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0 WHERE (((LIKELY(DISTINCT ((((rt0.c2)OR(rt0.c0)))OR('Z(wY')))) ISNULL));
SELECT ALL v0.c0, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c2, rt0.c4, rt0.c0, rt0.c3, rt0.c5 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c4, rt0.c0, rt0.c3, rt0.c5 FROM rt0 WHERE (((((rt0.c4)=(0.832919036303331)))<<(CASE -1e500  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN x'' WHEN rt0.c4 THEN rt0.c0 END))) UNION SELECT DISTINCT rt0.c2, rt0.c4, rt0.c0, rt0.c3, rt0.c5 FROM rt0 WHERE ((NOT (((((rt0.c4)=(0.832919036303331)))<<(CASE -1e500  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN x'' WHEN rt0.c4 THEN rt0.c0 END))))) UNION SELECT DISTINCT rt0.c2, rt0.c4, rt0.c0, rt0.c3, rt0.c5 FROM rt0 WHERE (((((((rt0.c4)==(0.832919036303331)))<<(CASE -1e500  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN x'' WHEN rt0.c4 THEN rt0.c0 END))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c4, rt0.c0, rt0.c3, rt0.c5 FROM rt0;
SELECT ALL rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c5, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c5, rt0.c1;
SELECT rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c5, rt0.c1 FROM rt0 WHERE (CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (x'')) THEN ((((rt0.c5)AND(rt0.c3)))OR(rt0.c1)) END) GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c5, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c5, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (x'')) THEN ((((rt0.c5)AND(rt0.c3)))OR(rt0.c1)) END))) GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c5, rt0.c1 UNION SELECT rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c5, rt0.c1 FROM rt0 WHERE (((CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (x'')) THEN ((((rt0.c5)AND(rt0.c3)))OR(rt0.c1)) END) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c5, rt0.c1;
SELECT ALL rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c5, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c5, rt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(rt0.c1))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((NOT (COUNT(rt0.c1))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((NOT (COUNT(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(rt0.c1))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((NOT (COUNT(rt0.c1))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((NOT (COUNT(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c3, rt0.c0, rt0.c5, v0.c0 FROM v0, rt0;
SELECT rt0.c3, rt0.c0, rt0.c5, v0.c0 FROM v0, rt0 WHERE (CASE CASE v0.c0  WHEN rt0.c5 THEN '-625178731' WHEN v0.c0 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c4 END  WHEN CASE 'Sc97&Eq'  WHEN rt0.c1 THEN NULL END THEN CASE WHEN rt0.c4 THEN 0.20708535345166001 ELSE v0.c0 END WHEN (rt0.c4 IN ()) THEN ((((rt0.c3)AND(rt0.c5)))OR(rt0.c5)) WHEN CAST('놔' AS TEXT) THEN (((v0.c0))<((rt0.c3))) END) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c5, v0.c0 FROM v0, rt0 WHERE ((NOT (CASE CASE v0.c0  WHEN rt0.c5 THEN '-625178731' WHEN v0.c0 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c4 END  WHEN CASE 'Sc97&Eq'  WHEN rt0.c1 THEN NULL END THEN CASE WHEN rt0.c4 THEN 0.20708535345166001 ELSE v0.c0 END WHEN (rt0.c4 IN ()) THEN ((((rt0.c3)AND(rt0.c5)))OR(rt0.c5)) WHEN CAST('놔' AS TEXT) THEN (((v0.c0))<((rt0.c3))) END))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c5, v0.c0 FROM v0, rt0 WHERE (((CASE CASE v0.c0  WHEN rt0.c5 THEN '-625178731' WHEN v0.c0 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c4 END  WHEN CASE 'Sc97&Eq'  WHEN rt0.c1 THEN NULL END THEN CASE WHEN rt0.c4 THEN 0.20708535345166001 ELSE v0.c0 END WHEN (rt0.c4 IN ()) THEN ((((rt0.c3)AND(rt0.c5)))OR(rt0.c5)) WHEN CAST('놔' AS TEXT) THEN (((v0.c0))<((rt0.c3))) END) ISNULL));
SELECT ALL rt0.c3, rt0.c0, rt0.c5, v0.c0 FROM v0, rt0;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON (((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)) IN (rt0.c2, (((rt0.c5)) NOT BETWEEN ((v0.c0)) AND ((0.3674126468191733)))));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON (((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)) IN (rt0.c2, (((rt0.c5)) NOT BETWEEN ((v0.c0)) AND ((0.3674126468191733))))) WHERE (((((rt0.c5)IS(rt0.c4)))IS NOT(((NULL)<<(231366482))))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON (((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)) IN (rt0.c2, (((rt0.c5)) NOT BETWEEN ((v0.c0)) AND ((0.3674126468191733))))) WHERE ((NOT (((((rt0.c5)IS(rt0.c4)))IS NOT(((NULL)<<(231366482))))))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON (((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)) IN (rt0.c2, (((rt0.c5)) NOT BETWEEN ((v0.c0)) AND ((0.3674126468191733))))) WHERE (((((((rt0.c5)IS(rt0.c4)))IS NOT(((NULL)<<(231366482))))) ISNULL));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON (((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)) IN (rt0.c2, (((rt0.c5)) NOT BETWEEN ((v0.c0)) AND ((0.3674126468191733)))));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE WHEN v0.c0 COLLATE RTRIM THEN v0.c0 END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN v0.c0 COLLATE RTRIM THEN v0.c0 END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 COLLATE RTRIM THEN v0.c0 END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c0 HAVING SUM((((COUNT(AVG(rt0.c1))))!=((rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c0 HAVING (NOT (SUM((((COUNT(AVG(rt0.c1))))!=((rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c0 HAVING ((SUM((((COUNT(AVG(rt0.c1))))<>((rt0.c0))))) ISNULL);
SELECT * FROM v0 NATURAL JOIN rt0;
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((rt0.c2 COLLATE RTRIM)<(HEX(rt0.c0)))) UNION ALL SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((NOT (((rt0.c2 COLLATE RTRIM)<(HEX(rt0.c0)))))) UNION ALL SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((((rt0.c2 COLLATE RTRIM)<(HEX(rt0.c0)))) ISNULL));
SELECT * FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))OR((NOT (v0.c0)))))OR((v0.c0 IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))OR((NOT (v0.c0)))))OR((v0.c0 IN ())))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))OR((NOT (v0.c0)))))OR((v0.c0 IN ())))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c1, rt0.c5 FROM rt0 GROUP BY rt0.c1, rt0.c5;
SELECT ALL rt0.c1, rt0.c5 FROM rt0 WHERE (IFNULL((((rt0.c1))<((rt0.c3))), (rt0.c2 IN (-6.25178731E8)))) GROUP BY rt0.c1, rt0.c5 UNION SELECT rt0.c1, rt0.c5 FROM rt0 WHERE ((NOT (IFNULL((((rt0.c1))<((rt0.c3))), (rt0.c2 IN (-6.25178731E8)))))) GROUP BY rt0.c1, rt0.c5 UNION SELECT rt0.c1, rt0.c5 FROM rt0 WHERE (((IFNULL((((rt0.c1))<((rt0.c3))), (rt0.c2 IN (-6.25178731E8)))) ISNULL)) GROUP BY rt0.c1, rt0.c5;
SELECT ALL rt0.c1, rt0.c5 FROM rt0 GROUP BY rt0.c1, rt0.c5;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c5 FROM v0 INNER JOIN rt0 ON ((JULIANDAY(rt0.c5, rt0.c2, rt0.c4, rt0.c0, rt0.c5))||(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c1 END)) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c5;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c5 FROM v0 INNER JOIN rt0 ON ((JULIANDAY(rt0.c5, rt0.c2, rt0.c4, rt0.c0, rt0.c5))||(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c1 END)) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c5 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c5 FROM v0 INNER JOIN rt0 ON ((JULIANDAY(rt0.c5, rt0.c2, rt0.c4, rt0.c0, rt0.c5))||(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c1 END)) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c5 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c5 FROM v0 INNER JOIN rt0 ON ((JULIANDAY(rt0.c5, rt0.c2, rt0.c4, rt0.c0, rt0.c5))||(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c1 END)) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c5 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c5 FROM v0 INNER JOIN rt0 ON ((JULIANDAY(rt0.c5, rt0.c2, rt0.c4, rt0.c0, rt0.c5))||(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c1 END)) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c5;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c5 FROM v0 INNER JOIN rt0 ON ((JULIANDAY(rt0.c5, rt0.c2, rt0.c4, rt0.c0, rt0.c5))||(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c1 END)) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c5 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c5 FROM v0 INNER JOIN rt0 ON ((JULIANDAY(rt0.c5, rt0.c2, rt0.c4, rt0.c0, rt0.c5))||(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c1 END)) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c5 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c5 FROM v0 INNER JOIN rt0 ON ((JULIANDAY(rt0.c5, rt0.c2, rt0.c4, rt0.c0, rt0.c5))||(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c1 END)) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c5 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c5 FROM v0 INNER JOIN rt0 ON ((JULIANDAY(rt0.c5, rt0.c2, rt0.c4, rt0.c0, rt0.c5))||(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c1 END)) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c5;
SELECT rt0.c0, rt0.c5, rt0.c1, rt0.c3, v0.c0, rt0.c2 FROM v0, rt0;
SELECT rt0.c0, rt0.c5, rt0.c1, rt0.c3, v0.c0, rt0.c2 FROM v0, rt0 WHERE (((NULL)<=((v0.c0 IN (v0.c0))))) UNION ALL SELECT rt0.c0, rt0.c5, rt0.c1, rt0.c3, v0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (((NULL)<=((v0.c0 IN (v0.c0))))))) UNION ALL SELECT ALL rt0.c0, rt0.c5, rt0.c1, rt0.c3, v0.c0, rt0.c2 FROM v0, rt0 WHERE (((((NULL)<=((v0.c0 IN (v0.c0))))) ISNULL));
SELECT rt0.c0, rt0.c5, rt0.c1, rt0.c3, v0.c0, rt0.c2 FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c0 COLLATE BINARY) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0 COLLATE BINARY))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0 COLLATE BINARY) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0;
SELECT rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0 HAVING ((((COUNT(*))OR((rt0.c5 IN (rt0.c0, rt0.c3)))))OR(COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0 HAVING (NOT (((((COUNT(*))OR((rt0.c5 IN (rt0.c0, rt0.c3)))))OR(COUNT(*))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0 HAVING ((((((COUNT(*))OR((rt0.c5 IN (rt0.c0, rt0.c3)))))OR(COUNT(*)))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0;
SELECT rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0 HAVING ((((COUNT(*))OR((rt0.c5 IN (rt0.c0, rt0.c3)))))OR(COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0 HAVING (NOT (((((COUNT(*))OR((rt0.c5 IN (rt0.c0, rt0.c3)))))OR(COUNT(*))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0 HAVING ((((((COUNT(*))OR((rt0.c5 IN (rt0.c0, rt0.c3)))))OR(COUNT(*)))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((- (v0.c0)) IN (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((- (v0.c0)) IN (v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((- (v0.c0)) IN (v0.c0))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 END)) AND ((((rt0.c0) BETWEEN (rt0.c3) AND ('&-讪rgLG')))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c0)) BETWEEN ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 END)) AND ((((rt0.c0) BETWEEN (rt0.c3) AND ('&-讪rgLG')))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 END)) AND ((((rt0.c0) BETWEEN (rt0.c3) AND ('&-讪rgLG')))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 WHERE (CASE ((((rt0.c5)AND(rt0.c2)))AND(rt0.c1))  WHEN ((rt0.c5) BETWEEN (rt0.c2) AND (rt0.c2)) THEN GLOB(rt0.c2, rt0.c2) END) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE ((NOT (CASE ((((rt0.c5)AND(rt0.c2)))AND(rt0.c1))  WHEN ((rt0.c5) BETWEEN (rt0.c2) AND (rt0.c2)) THEN GLOB(rt0.c2, rt0.c2) END))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 WHERE (((CASE ((((rt0.c5)AND(rt0.c2)))AND(rt0.c1))  WHEN ((rt0.c5) BETWEEN (rt0.c2) AND (rt0.c2)) THEN GLOB(rt0.c2, rt0.c2) END) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c3) IS TRUE)) NOT BETWEEN (((rt0.c0)/(rt0.c4))) AND ('( vSꙂ+9]'))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c3) IS TRUE)) NOT BETWEEN (((rt0.c0)/(rt0.c4))) AND ('( vSꙂ+9]'))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c3) IS TRUE)) NOT BETWEEN (((rt0.c0)/(rt0.c4))) AND ('( vSꙂ+9]'))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE (CAST(rt0.c5 COLLATE RTRIM AS REAL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 UNION SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (CAST(rt0.c5 COLLATE RTRIM AS REAL)))) GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 UNION SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE (((CAST(rt0.c5 COLLATE RTRIM AS REAL)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT rt0.c2, v0.c0, rt0.c1, rt0.c5, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c5, rt0.c4;
SELECT rt0.c2, v0.c0, rt0.c1, rt0.c5, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c5, rt0.c4 HAVING MAX(CAST(AVG(v0.c0) AS NUMERIC)) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c1, rt0.c5, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c5, rt0.c4 HAVING (NOT (MAX(CAST(AVG(v0.c0) AS NUMERIC)))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c1, rt0.c5, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c5, rt0.c4 HAVING ((MAX(CAST(AVG(v0.c0) AS NUMERIC))) ISNULL);
SELECT ALL rt0.c2, v0.c0, rt0.c5, rt0.c0, rt0.c1 FROM rt0, v0;
SELECT ALL rt0.c2, v0.c0, rt0.c5, rt0.c0, rt0.c1 FROM rt0, v0 WHERE (rt0.c1) UNION ALL SELECT rt0.c2, v0.c0, rt0.c5, rt0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c5, rt0.c0, rt0.c1 FROM rt0, v0 WHERE (((rt0.c1) ISNULL));
SELECT ALL rt0.c2, v0.c0, rt0.c5, rt0.c0, rt0.c1 FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((+ (v0.c0)))*(CAST(v0.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((+ (v0.c0)))*(CAST(v0.c0 AS BLOB)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((+ (v0.c0)))*(CAST(v0.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c4 FROM v0, rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM v0, rt0 WHERE ((rt0.c3 IN ()) COLLATE BINARY) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM v0, rt0 WHERE ((NOT ((rt0.c3 IN ()) COLLATE BINARY))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM v0, rt0 WHERE ((((rt0.c3 IN ()) COLLATE BINARY) ISNULL)) GROUP BY rt0.c4;
SELECT rt0.c4 FROM v0, rt0 GROUP BY rt0.c4;
SELECT ALL v0.c0, rt0.c3 FROM rt0 CROSS JOIN v0 ON ((((((v0.c0)AND(rt0.c0)))OR('-1387643922'))) IS TRUE) GROUP BY v0.c0, rt0.c3;
SELECT v0.c0, rt0.c3 FROM rt0 CROSS JOIN v0 ON ((((((v0.c0)AND(rt0.c0)))OR('-1387643922'))) IS TRUE) GROUP BY v0.c0, rt0.c3 HAVING COUNT(AVG(rt0.c2)) UNION ALL SELECT v0.c0, rt0.c3 FROM rt0 CROSS JOIN v0 ON ((((((v0.c0)AND(rt0.c0)))OR('-1387643922'))) IS TRUE) GROUP BY v0.c0, rt0.c3 HAVING (NOT (COUNT(AVG(rt0.c2)))) UNION ALL SELECT ALL v0.c0, rt0.c3 FROM rt0 CROSS JOIN v0 ON ((((((v0.c0)AND(rt0.c0)))OR('-1387643922'))) IS TRUE) GROUP BY v0.c0, rt0.c3 HAVING ((COUNT(AVG(rt0.c2))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (IFNULL((+ (0.36635828710109064)), CASE WHEN NULL THEN 0xffffffffa8534955 END)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (IFNULL((+ (0.36635828710109064)), CASE WHEN NULL THEN 0Xffffffffa8534955 END)))) UNION ALL SELECT * FROM v0 WHERE (((IFNULL((+ (0.36635828710109064)), CASE WHEN NULL THEN 0Xffffffffa8534955 END)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (INSTR(x'' COLLATE NOCASE, CAST(v0.c0 AS NUMERIC))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (INSTR(x'' COLLATE NOCASE, CAST(v0.c0 AS NUMERIC))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((INSTR(x'' COLLATE NOCASE, CAST(v0.c0 AS NUMERIC))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c5, rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 NOT INDEXED GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c5, rt0.c4, rt0.c0, rt0.c1;
SELECT rt0.c3, rt0.c2, v0.c0, rt0.c5, rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 WHERE (((((rt0.c2 IN ())))>=(((((rt0.c4)) NOT BETWEEN ((NULL)) AND ((v0.c0))))))) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c5, rt0.c4, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c5, rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (((((rt0.c2 IN ())))>=(((((rt0.c4)) NOT BETWEEN ((NULL)) AND ((v0.c0))))))))) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c5, rt0.c4, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c5, rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 WHERE (((((((rt0.c2 IN ())))>=(((((rt0.c4)) NOT BETWEEN ((NULL)) AND ((v0.c0))))))) ISNULL)) GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c5, rt0.c4, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c5, rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 NOT INDEXED GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c5, rt0.c4, rt0.c0, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((v0.c0)) BETWEEN ((MAX(v0.c0))) AND ((v0.c0))))/(v0.c0 COLLATE BINARY)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((((v0.c0)) BETWEEN ((MAX(v0.c0))) AND ((v0.c0))))/(v0.c0 COLLATE BINARY)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((((v0.c0)) BETWEEN ((MAX(v0.c0))) AND ((v0.c0))))/(v0.c0 COLLATE BINARY))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((v0.c0)) BETWEEN ((MAX(v0.c0))) AND ((v0.c0))))/(v0.c0 COLLATE BINARY)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((((v0.c0)) BETWEEN ((MAX(v0.c0))) AND ((v0.c0))))/(v0.c0 COLLATE BINARY)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((((v0.c0)) BETWEEN ((MAX(v0.c0))) AND ((v0.c0))))/(v0.c0 COLLATE BINARY))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((- ((v0.c0 IN ())))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((- ((v0.c0 IN ())))))) UNION ALL SELECT * FROM v0 WHERE ((((- ((v0.c0 IN ())))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (HEX(DISTINCT (rt0.c3 IN (v0.c0)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (HEX(DISTINCT (rt0.c3 IN (v0.c0)))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((HEX(DISTINCT (rt0.c3 IN (v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, rt0 WHERE (CASE (((rt0.c0))<>((rt0.c1)))  WHEN ((((0xffffffff8bd2d7ae)OR(rt0.c2)))AND(v0.c0)) THEN (((rt0.c4))>((rt0.c4))) WHEN ((rt0.c3)<('izꖿ\nzefp~')) THEN rt0.c3 COLLATE RTRIM WHEN CASE x''  WHEN rt0.c1 THEN rt0.c1 END THEN CAST(rt0.c1 AS REAL) ELSE (rt0.c5 IN ()) END) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM v0, rt0 WHERE ((NOT (CASE (((rt0.c0))!=((rt0.c1)))  WHEN ((((0xffffffff8bd2d7ae)OR(rt0.c2)))AND(v0.c0)) THEN (((rt0.c4))>((rt0.c4))) WHEN ((rt0.c3)<('izꖿ\nzefp~')) THEN rt0.c3 COLLATE RTRIM WHEN CASE x''  WHEN rt0.c1 THEN rt0.c1 END THEN CAST(rt0.c1 AS REAL) ELSE (rt0.c5 IN ()) END))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM v0, rt0 WHERE (((CASE (((rt0.c0))<>((rt0.c1)))  WHEN ((((0Xffffffff8bd2d7ae)OR(rt0.c2)))AND(v0.c0)) THEN (((rt0.c4))>((rt0.c4))) WHEN ((rt0.c3)<('izꖿ\nzefp~')) THEN rt0.c3 COLLATE RTRIM WHEN CASE x''  WHEN rt0.c1 THEN rt0.c1 END THEN CAST(rt0.c1 AS REAL) ELSE (rt0.c5 IN ()) END) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT rt0.c3, rt0.c5, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c5, v0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt0.c5, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c5, v0.c0, rt0.c1, rt0.c2 HAVING ((((-424895196)&(GROUP_CONCAT(rt0.c4))))AND(((TOTAL(rt0.c1))>(rt0.c2)))) UNION ALL SELECT rt0.c3, rt0.c5, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c5, v0.c0, rt0.c1, rt0.c2 HAVING (NOT (((((-424895196)&(GROUP_CONCAT(rt0.c4))))AND(((TOTAL(rt0.c1))>(rt0.c2)))))) UNION ALL SELECT ALL rt0.c3, rt0.c5, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c5, v0.c0, rt0.c1, rt0.c2 HAVING ((((((-424895196)&(GROUP_CONCAT(rt0.c4))))AND(((TOTAL(rt0.c1))>(rt0.c2))))) ISNULL);
SELECT rt0.c3, rt0.c5, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c5, v0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt0.c5, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c5, v0.c0, rt0.c1, rt0.c2 HAVING ((((-424895196)&(GROUP_CONCAT(rt0.c4))))AND(((TOTAL(rt0.c1))>(rt0.c2)))) UNION ALL SELECT rt0.c3, rt0.c5, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c5, v0.c0, rt0.c1, rt0.c2 HAVING (NOT (((((-424895196)&(GROUP_CONCAT(rt0.c4))))AND(((TOTAL(rt0.c1))>(rt0.c2)))))) UNION ALL SELECT ALL rt0.c3, rt0.c5, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c5, v0.c0, rt0.c1, rt0.c2 HAVING ((((((-424895196)&(GROUP_CONCAT(rt0.c4))))AND(((TOTAL(rt0.c1))>(rt0.c2))))) ISNULL);
SELECT rt0.c3, rt0.c5, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c5, v0.c0, rt0.c1, rt0.c2;
SELECT ALL v0.c0 FROM rt0, v0;
SELECT ALL v0.c0 FROM rt0, v0 WHERE (CASE WHEN (+ (rt0.c3)) THEN (((rt0.c4))==((x'95d5'))) WHEN ((rt0.c5) BETWEEN (rt0.c2) AND (v0.c0)) THEN ((rt0.c2)>(rt0.c1)) WHEN ((rt0.c4) NOT BETWEEN (rt0.c5) AND (rt0.c4)) THEN CASE rt0.c5  WHEN 0.996776390209582 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN v0.c0 ELSE rt0.c4 END ELSE ((v0.c0)+(v0.c0)) END) UNION ALL SELECT ALL v0.c0 FROM rt0, v0 WHERE ((NOT (CASE WHEN (+ (rt0.c3)) THEN (((rt0.c4))=((x'95d5'))) WHEN ((rt0.c5) BETWEEN (rt0.c2) AND (v0.c0)) THEN ((rt0.c2)>(rt0.c1)) WHEN ((rt0.c4) NOT BETWEEN (rt0.c5) AND (rt0.c4)) THEN CASE rt0.c5  WHEN 0.996776390209582 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN v0.c0 ELSE rt0.c4 END ELSE ((v0.c0)+(v0.c0)) END))) UNION ALL SELECT v0.c0 FROM rt0, v0 WHERE (((CASE WHEN (+ (rt0.c3)) THEN (((rt0.c4))==((x'95d5'))) WHEN ((rt0.c5) BETWEEN (rt0.c2) AND (v0.c0)) THEN ((rt0.c2)>(rt0.c1)) WHEN ((rt0.c4) NOT BETWEEN (rt0.c5) AND (rt0.c4)) THEN CASE rt0.c5  WHEN 0.996776390209582 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN v0.c0 ELSE rt0.c4 END ELSE ((v0.c0)+(v0.c0)) END) ISNULL));
SELECT ALL v0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c2 IN ()) IN (rt0.c5 COLLATE NOCASE));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c2 IN ()) IN (rt0.c5 COLLATE NOCASE)) WHERE (CASE WHEN (((rt0.c0)) BETWEEN ((0X639c235d)) AND ((rt0.c3))) THEN (rt0.c3 IN ()) END) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c2 IN ()) IN (rt0.c5 COLLATE NOCASE)) WHERE ((NOT (CASE WHEN (((rt0.c0)) BETWEEN ((0X639c235d)) AND ((rt0.c3))) THEN (rt0.c3 IN ()) END))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c2 IN ()) IN (rt0.c5 COLLATE NOCASE)) WHERE (((CASE WHEN (((rt0.c0)) BETWEEN ((0X639c235d)) AND ((rt0.c3))) THEN (rt0.c3 IN ()) END) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c2 IN ()) IN (rt0.c5 COLLATE NOCASE));
SELECT rt0.c5, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c5, rt0.c1, rt0.c4;
SELECT rt0.c5, rt0.c1, rt0.c4 FROM rt0 WHERE (((((rt0.c2)OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))OR(((rt0.c2)%(rt0.c3))))) GROUP BY rt0.c5, rt0.c1, rt0.c4 UNION SELECT rt0.c5, rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT (((((rt0.c2)OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))OR(((rt0.c2)%(rt0.c3))))))) GROUP BY rt0.c5, rt0.c1, rt0.c4 UNION SELECT rt0.c5, rt0.c1, rt0.c4 FROM rt0 WHERE (((((((rt0.c2)OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))OR(((rt0.c2)%(rt0.c3))))) ISNULL)) GROUP BY rt0.c5, rt0.c1, rt0.c4;
SELECT rt0.c5, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c5, rt0.c1, rt0.c4;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(CASE WHEN v0.c0 THEN v0.c0 WHEN COUNT(*) THEN COUNT(*) WHEN SUM(MAX(SUM(MIN(MAX(MIN(AVG('0.41956257230933325'))))))) THEN SUM(v0.c0) ELSE v0.c0 END) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(CASE WHEN v0.c0 THEN v0.c0 WHEN COUNT(*) THEN COUNT(*) WHEN SUM(MAX(SUM(MIN(MAX(MIN(AVG('0.41956257230933325'))))))) THEN SUM(v0.c0) ELSE v0.c0 END))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(CASE WHEN v0.c0 THEN v0.c0 WHEN COUNT(*) THEN COUNT(*) WHEN SUM(MAX(SUM(MIN(MAX(MIN(AVG('0.41956257230933325'))))))) THEN SUM(v0.c0) ELSE v0.c0 END)) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (TRIM(rt0.c5 COLLATE RTRIM)) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (TRIM(rt0.c5 COLLATE RTRIM)))) UNION ALL SELECT * FROM rt0, v0 WHERE (((TRIM(rt0.c5 COLLATE RTRIM)) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((- (rt0.c2))) IS FALSE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((- (rt0.c2))) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((- (rt0.c2))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0, v0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) IS FALSE)) GROUP BY rt0.c3, rt0.c1 UNION SELECT rt0.c3, rt0.c1 FROM rt0, v0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) IS FALSE)))) GROUP BY rt0.c3, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c1 FROM rt0, v0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) IS FALSE)) ISNULL)) GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1;
SELECT v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c5 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c5;
SELECT ALL v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c5 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c5 HAVING TOTAL(CAST(rt0.c5 AS INTEGER)) UNION ALL SELECT v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c5 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c5 HAVING (NOT (TOTAL(CAST(rt0.c5 AS INTEGER)))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c5 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c5 HAVING ((TOTAL(CAST(rt0.c5 AS INTEGER))) ISNULL);
SELECT v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c5 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c5;
SELECT ALL v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c5 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c5 HAVING TOTAL(CAST(rt0.c5 AS INTEGER)) UNION ALL SELECT v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c5 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c5 HAVING (NOT (TOTAL(CAST(rt0.c5 AS INTEGER)))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c5 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c5 HAVING ((TOTAL(CAST(rt0.c5 AS INTEGER))) ISNULL);
SELECT v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c5 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c5;
SELECT MIN(CASE CAST(x'' AS BLOB)  WHEN ((rt0.c2)AND(rt0.c3)) THEN (rt0.c3 IN ()) WHEN (+ (rt0.c4)) THEN SQLITE_COMPILEOPTION_GET(v0.c0) WHEN x'' THEN v0.c0 COLLATE RTRIM ELSE ((rt0.c1)=(rt0.c1)) END) FROM v0, rt0 ORDER BY v0.c0 DESC, ((((rt0.c2)-(rt0.c1)))IS NOT(CAST(rt0.c1 AS INTEGER))) ASC;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0 WHERE (rt0.c5) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, v0 WHERE ((NOT (rt0.c5))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0 WHERE (((rt0.c5) ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((CAST(rt0.c3 AS INTEGER))<(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((CAST(rt0.c3 AS INTEGER))<(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((CAST(rt0.c3 AS INTEGER))<(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c2, rt0.c1, rt0.c5 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c5;
SELECT rt0.c2, rt0.c1, rt0.c5 FROM rt0 WHERE (x'') GROUP BY rt0.c2, rt0.c1, rt0.c5 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c5 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c2, rt0.c1, rt0.c5 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c5 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c5;
SELECT ALL rt0.c2, rt0.c1, rt0.c5 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c5;
SELECT rt0.c5, rt0.c1 FROM rt0 GROUP BY rt0.c5, rt0.c1;
SELECT ALL rt0.c5, rt0.c1 FROM rt0 GROUP BY rt0.c5, rt0.c1 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT rt0.c5, rt0.c1 FROM rt0 GROUP BY rt0.c5, rt0.c1 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT rt0.c5, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c5, rt0.c1 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT rt0.c5, v0.c0, rt0.c2 FROM v0, rt0;
SELECT ALL rt0.c5, v0.c0, rt0.c2 FROM v0, rt0 WHERE ((~ ('[B~oB>(D9'))) UNION ALL SELECT rt0.c5, v0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT ((~ ('[B~oB>(D9'))))) UNION ALL SELECT ALL rt0.c5, v0.c0, rt0.c2 FROM v0, rt0 WHERE ((((~ ('[B~oB>(D9'))) ISNULL));
SELECT rt0.c5, v0.c0, rt0.c2 FROM v0, rt0;
SELECT DISTINCT v0.c0, rt0.c5, rt0.c3, rt0.c2 FROM v0, rt0;
SELECT DISTINCT v0.c0, rt0.c5, rt0.c3, rt0.c2 FROM v0, rt0 WHERE ((((rt0.c3)%(rt0.c4)) IN ())) UNION SELECT DISTINCT v0.c0, rt0.c5, rt0.c3, rt0.c2 FROM v0, rt0 WHERE ((NOT ((((rt0.c3)%(rt0.c4)) IN ())))) UNION SELECT DISTINCT v0.c0, rt0.c5, rt0.c3, rt0.c2 FROM v0, rt0 WHERE ((((((rt0.c3)%(rt0.c4)) IN ())) ISNULL));
SELECT DISTINCT v0.c0, rt0.c5, rt0.c3, rt0.c2 FROM v0, rt0;
SELECT rt0.c2, rt0.c4, v0.c0, rt0.c3 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c3;
SELECT rt0.c2, rt0.c4, v0.c0, rt0.c3 FROM rt0 NATURAL JOIN v0 WHERE (CAST(((((rt0.c4)AND(rt0.c3)))AND(rt0.c0)) AS INTEGER)) GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c3 UNION SELECT rt0.c2, rt0.c4, v0.c0, rt0.c3 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (CAST(((((rt0.c4)AND(rt0.c3)))AND(rt0.c0)) AS INTEGER)))) GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c3 UNION SELECT rt0.c2, rt0.c4, v0.c0, rt0.c3 FROM rt0 NATURAL JOIN v0 WHERE (((CAST(((((rt0.c4)AND(rt0.c3)))AND(rt0.c0)) AS INTEGER)) ISNULL)) GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c3;
SELECT rt0.c2, rt0.c4, v0.c0, rt0.c3 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c3;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)) BETWEEN (((- (v0.c0)))) AND ((HEX(DISTINCT v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN (((- (v0.c0)))) AND ((HEX(DISTINCT v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)) BETWEEN (((- (v0.c0)))) AND ((HEX(DISTINCT v0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0)*(v0.c0)) IN ())) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)*(v0.c0)) IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0)*(v0.c0)) IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN (v0.c0 COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN (v0.c0 COLLATE RTRIM))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN (v0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING CAST(MIN(rt0.c2) AS TEXT) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING (NOT (CAST(MIN(rt0.c2) AS TEXT))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING ((CAST(MIN(rt0.c2) AS TEXT)) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING CAST(MIN(rt0.c2) AS TEXT) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING (NOT (CAST(MIN(rt0.c2) AS TEXT))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING ((CAST(MIN(rt0.c2) AS TEXT)) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c5, rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0;
SELECT rt0.c5, rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE (((((0.5625849526621636)|(rt0.c5))) BETWEEN (rt0.c0) AND (rt0.c0))) UNION ALL SELECT rt0.c5, rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (((((0.5625849526621636)|(rt0.c5))) BETWEEN (rt0.c0) AND (rt0.c0))))) UNION ALL SELECT ALL rt0.c5, rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE (((((((0.5625849526621636)|(rt0.c5))) BETWEEN (rt0.c0) AND (rt0.c0))) ISNULL));
SELECT rt0.c5, rt0.c4, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c5, rt0.c0, rt0.c4, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c5, rt0.c0, rt0.c4, v0.c0 FROM rt0, v0 WHERE ((((rt0.c1)) NOT BETWEEN ((NULLIF(rt0.c1, rt0.c0))) AND ((CAST(x'' AS INTEGER))))) UNION SELECT DISTINCT rt0.c1, rt0.c5, rt0.c0, rt0.c4, v0.c0 FROM rt0, v0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((NULLIF(rt0.c1, rt0.c0))) AND ((CAST(x'' AS INTEGER))))))) UNION SELECT DISTINCT rt0.c1, rt0.c5, rt0.c0, rt0.c4, v0.c0 FROM rt0, v0 WHERE ((((((rt0.c1)) NOT BETWEEN ((NULLIF(rt0.c1, rt0.c0))) AND ((CAST(x'' AS INTEGER))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c5, rt0.c0, rt0.c4, v0.c0 FROM rt0, v0;
SELECT rt0.c0, rt0.c4, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON (((- (rt0.c3))) IS TRUE) GROUP BY rt0.c0, rt0.c4, rt0.c2;
SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON (((- (rt0.c3))) IS TRUE) WHERE ((((((rt0.c4)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c3)))) NOTNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON (((- (rt0.c3))) IS TRUE) WHERE ((NOT ((((((rt0.c4)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c3)))) NOTNULL)))) GROUP BY rt0.c0, rt0.c4, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON (((- (rt0.c3))) IS TRUE) WHERE ((((((((rt0.c4)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c3)))) NOTNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c2;
SELECT rt0.c0, rt0.c4, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON (((- (rt0.c3))) IS TRUE) GROUP BY rt0.c0, rt0.c4, rt0.c2;
SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c4 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c4;
SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c4 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c4 HAVING CASE ((((GROUP_CONCAT(rt0.c1))OR(rt0.c2)))AND(rt0.c0))  WHEN MAX(rt0.c3) THEN (+ (v0.c0)) END UNION ALL SELECT rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c4 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c4 HAVING (NOT (CASE ((((GROUP_CONCAT(rt0.c1))OR(rt0.c2)))AND(rt0.c0))  WHEN MAX(rt0.c3) THEN (+ (v0.c0)) END)) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c4 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c4 HAVING ((CASE ((((GROUP_CONCAT(rt0.c1))OR(rt0.c2)))AND(rt0.c0))  WHEN MAX(rt0.c3) THEN (+ (v0.c0)) END) ISNULL);
SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c4 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c4;
SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c4 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c4 HAVING CASE ((((GROUP_CONCAT(rt0.c1))OR(rt0.c2)))AND(rt0.c0))  WHEN MAX(rt0.c3) THEN (+ (v0.c0)) END UNION ALL SELECT rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c4 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c4 HAVING (NOT (CASE ((((GROUP_CONCAT(rt0.c1))OR(rt0.c2)))AND(rt0.c0))  WHEN MAX(rt0.c3) THEN (+ (v0.c0)) END)) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c4 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c4 HAVING ((CASE ((((GROUP_CONCAT(rt0.c1))OR(rt0.c2)))AND(rt0.c0))  WHEN MAX(rt0.c3) THEN (+ (v0.c0)) END) ISNULL);
SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c4 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c4;
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (rt0.c4) UNION ALL SELECT ALL * FROM v0 NOT INDEXED, rt0 WHERE ((NOT (rt0.c4))) UNION ALL SELECT * FROM v0, rt0 WHERE (((rt0.c4) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((((rt0.c0)) BETWEEN ((LIKELY(rt0.c0))) AND (((v0.c0 IN (rt0.c4)))))) UNION SELECT DISTINCT * FROM v0, rt0 NOT INDEXED WHERE ((NOT ((((rt0.c0)) BETWEEN ((LIKELY(rt0.c0))) AND (((v0.c0 IN (rt0.c4)))))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((((rt0.c0)) BETWEEN ((LIKELY(rt0.c0))) AND (((v0.c0 IN (rt0.c4)))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (json_patch(v0.c0 COLLATE RTRIM, (v0.c0 IN (v0.c0)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (json_patch(v0.c0 COLLATE RTRIM, (v0.c0 IN (v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((json_patch(v0.c0 COLLATE RTRIM, (v0.c0 IN (v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c5, rt0.c2 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c5, rt0.c2;
SELECT rt0.c4, rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c5, rt0.c2 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c5, rt0.c2 HAVING SUM((TOTAL(SUM(NULL)) IN ())) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c5, rt0.c2 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c5, rt0.c2 HAVING (NOT (SUM((TOTAL(SUM(NULL)) IN ())))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c5, rt0.c2 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c5, rt0.c2 HAVING ((SUM((TOTAL(SUM(NULL)) IN ()))) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c5, rt0.c2 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c5, rt0.c2;
SELECT rt0.c4, rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c5, rt0.c2 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c5, rt0.c2 HAVING SUM((TOTAL(SUM(NULL)) IN ())) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c5, rt0.c2 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c5, rt0.c2 HAVING (NOT (SUM((TOTAL(SUM(NULL)) IN ())))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c5, rt0.c2 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c5, rt0.c2 HAVING ((SUM((TOTAL(SUM(NULL)) IN ()))) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c5, rt0.c2 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c3, v0.c0, rt0.c5, rt0.c2;
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (TRIM(DISTINCT (- (rt0.c3)))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (TRIM(DISTINCT (- (rt0.c3)))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((TRIM(DISTINCT (- (rt0.c3)))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((~ (v0.c0))) BETWEEN ((NOT (rt0.c5))) AND (((rt0.c3) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((~ (v0.c0))) BETWEEN ((NOT (rt0.c5))) AND (((rt0.c3) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((~ (v0.c0))) BETWEEN ((NOT (rt0.c5))) AND (((rt0.c3) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((UNLIKELY(DISTINCT v0.c0) IN ())) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((UNLIKELY(DISTINCT v0.c0) IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((UNLIKELY(DISTINCT v0.c0) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c3, rt0.c5, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, rt0.c5, rt0.c1;
SELECT rt0.c3, rt0.c5, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, rt0.c5, rt0.c1 HAVING ((rt0.c1)+(CAST(rt0.c2 AS REAL))) UNION ALL SELECT rt0.c3, rt0.c5, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, rt0.c5, rt0.c1 HAVING (NOT (((rt0.c1)+(CAST(rt0.c2 AS REAL))))) UNION ALL SELECT rt0.c3, rt0.c5, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, rt0.c5, rt0.c1 HAVING ((((rt0.c1)+(CAST(rt0.c2 AS REAL)))) ISNULL);
SELECT rt0.c3, rt0.c5, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, rt0.c5, rt0.c1;
SELECT rt0.c3, rt0.c5, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, rt0.c5, rt0.c1 HAVING ((rt0.c1)+(CAST(rt0.c2 AS REAL))) UNION ALL SELECT rt0.c3, rt0.c5, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, rt0.c5, rt0.c1 HAVING (NOT (((rt0.c1)+(CAST(rt0.c2 AS REAL))))) UNION ALL SELECT rt0.c3, rt0.c5, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, rt0.c5, rt0.c1 HAVING ((((rt0.c1)+(CAST(rt0.c2 AS REAL)))) ISNULL);
SELECT rt0.c3, rt0.c5, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, rt0.c5, rt0.c1;
SELECT TOTAL(((((0.17922606141986908) IS FALSE))>>(0.2870267787213))) FROM v0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((NOT (CAST(rt0.c5 AS TEXT)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((NOT (CAST(rt0.c5 AS TEXT)))))) UNION ALL SELECT * FROM rt0 WHERE ((((NOT (CAST(rt0.c5 AS TEXT)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c5 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c5;
SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c5 FROM rt0 WHERE (((((x'') NOT BETWEEN (rt0.c3) AND (rt0.c0)))-((((rt0.c0, rt0.c4, rt0.c2))<((rt0.c4, rt0.c3, rt0.c0)))))) GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c5 UNION SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c5 FROM rt0 WHERE ((NOT (((((x'') NOT BETWEEN (rt0.c3) AND (rt0.c0)))-((((rt0.c0, rt0.c4, rt0.c2))<((rt0.c4, rt0.c3, rt0.c0)))))))) GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c5 UNION SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c5 FROM rt0 WHERE (((((((x'') NOT BETWEEN (rt0.c3) AND (rt0.c0)))-((((rt0.c0, rt0.c4, rt0.c2))<((rt0.c4, rt0.c3, rt0.c0)))))) ISNULL)) GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c5;
SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c5 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c5;
SELECT rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4 HAVING (((TOTAL(AVG(rt0.c2))))<((SUM(rt0.c4)))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4 HAVING (NOT ((((TOTAL(AVG(rt0.c2))))<((SUM(rt0.c4)))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4 HAVING (((((TOTAL(AVG(rt0.c2))))<((SUM(rt0.c4))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((SQLITE_COMPILEOPTION_GET(v0.c0)) IS TRUE)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((SQLITE_COMPILEOPTION_GET(v0.c0)) IS TRUE)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((SQLITE_COMPILEOPTION_GET(v0.c0)) IS TRUE)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0, v0;
SELECT DISTINCT rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0, v0 WHERE (0.42742996964116364) UNION SELECT DISTINCT rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0, v0 WHERE ((NOT (0.42742996964116364))) UNION SELECT DISTINCT rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0, v0 WHERE (((0.42742996964116364) ISNULL));
SELECT DISTINCT rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0))) NOT NULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0)AND(v0.c0)))OR(v0.c0))) NOT NULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((v0.c0)AND(v0.c0)))OR(v0.c0))) NOT NULL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c4 HAVING ((((((((CAST(SUM(rt0.c1) AS TEXT))OR(AVG(v0.c0))))AND(GROUP_CONCAT(AVG(AVG(rt0.c3))))))OR(COUNT(MIN(rt0.c4)))))AND(((NULL) BETWEEN (COUNT(rt0.c5)) AND (rt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c4 HAVING (NOT (((((((((CAST(SUM(rt0.c1) AS TEXT))OR(AVG(v0.c0))))AND(GROUP_CONCAT(AVG(AVG(rt0.c3))))))OR(COUNT(MIN(rt0.c4)))))AND(((NULL) BETWEEN (COUNT(rt0.c5)) AND (rt0.c2)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, rt0.c4 HAVING ((((((((((CAST(SUM(rt0.c1) AS TEXT))OR(AVG(v0.c0))))AND(GROUP_CONCAT(AVG(AVG(rt0.c3))))))OR(COUNT(MIN(rt0.c4)))))AND(((NULL) BETWEEN (COUNT(rt0.c5)) AND (rt0.c2))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((CAST(rt0.c3 AS NUMERIC), ((rt0.c1) NOTNULL), rt0.c5))==(((NOT (rt0.c1)), (rt0.c0 IN ()), NULL COLLATE RTRIM)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((CAST(rt0.c3 AS NUMERIC), ((rt0.c1) NOTNULL), rt0.c5))==(((NOT (rt0.c1)), (rt0.c0 IN ()), NULL COLLATE RTRIM)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((CAST(rt0.c3 AS NUMERIC), ((rt0.c1) NOTNULL), rt0.c5))==(((NOT (rt0.c1)), (rt0.c0 IN ()), NULL COLLATE RTRIM)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c5, rt0.c4 FROM v0, rt0;
SELECT DISTINCT rt0.c5, rt0.c4 FROM v0, rt0 WHERE ((((rt0.c4)) NOT BETWEEN ((CAST(rt0.c5 AS REAL))) AND ((((((((((v0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))))) UNION SELECT DISTINCT rt0.c5, rt0.c4 FROM v0, rt0 WHERE ((NOT ((((rt0.c4)) NOT BETWEEN ((CAST(rt0.c5 AS REAL))) AND ((((((((((v0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))))))) UNION SELECT DISTINCT rt0.c5, rt0.c4 FROM v0, rt0 WHERE ((((((rt0.c4)) NOT BETWEEN ((CAST(rt0.c5 AS REAL))) AND ((((((((((v0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))))) ISNULL));
SELECT DISTINCT rt0.c5, rt0.c4 FROM v0, rt0;
SELECT rt0.c4, rt0.c3, rt0.c5, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c5, rt0.c0, rt0.c1, rt0.c2, v0.c0;
SELECT rt0.c4, rt0.c3, rt0.c5, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 WHERE (CASE SQLITE_COMPILEOPTION_USED(rt0.c1)  WHEN CAST(rt0.c5 AS BLOB) THEN ((x'9881')>=(rt0.c4)) WHEN (rt0.c1 IN ()) THEN CASE x''  WHEN rt0.c0 THEN rt0.c1 ELSE v0.c0 END WHEN (+ (rt0.c4)) THEN ((rt0.c2)-(rt0.c0)) ELSE ((rt0.c0)OR(rt0.c4)) END) GROUP BY rt0.c4, rt0.c3, rt0.c5, rt0.c0, rt0.c1, rt0.c2, v0.c0 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c5, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((NOT (CASE SQLITE_COMPILEOPTION_USED(rt0.c1)  WHEN CAST(rt0.c5 AS BLOB) THEN ((x'9881')>=(rt0.c4)) WHEN (rt0.c1 IN ()) THEN CASE x''  WHEN rt0.c0 THEN rt0.c1 ELSE v0.c0 END WHEN (+ (rt0.c4)) THEN ((rt0.c2)-(rt0.c0)) ELSE ((rt0.c0)OR(rt0.c4)) END))) GROUP BY rt0.c4, rt0.c3, rt0.c5, rt0.c0, rt0.c1, rt0.c2, v0.c0 UNION SELECT rt0.c4, rt0.c3, rt0.c5, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 WHERE (((CASE SQLITE_COMPILEOPTION_USED(rt0.c1)  WHEN CAST(rt0.c5 AS BLOB) THEN ((x'9881')>=(rt0.c4)) WHEN (rt0.c1 IN ()) THEN CASE x''  WHEN rt0.c0 THEN rt0.c1 ELSE v0.c0 END WHEN (+ (rt0.c4)) THEN ((rt0.c2)-(rt0.c0)) ELSE ((rt0.c0)OR(rt0.c4)) END) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c5, rt0.c0, rt0.c1, rt0.c2, v0.c0;
SELECT rt0.c4, rt0.c3, rt0.c5, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c5, rt0.c0, rt0.c1, rt0.c2, v0.c0;
SELECT rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4 HAVING MIN(MAX(MAX(rt0.c1))) UNION ALL SELECT rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4 HAVING (NOT (MIN(MAX(MAX(rt0.c1))))) UNION ALL SELECT rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4 HAVING ((MIN(MAX(MAX(rt0.c1)))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((((v0.c0)OR(('\r' IN ()))))AND(0.7267043098335119))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((v0.c0)OR(('\r' IN ()))))AND(0.7267043098335119))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((v0.c0)OR(('\r' IN ()))))AND(0.7267043098335119))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c5 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c5 FROM rt0 WHERE (CAST(rt0.c4 COLLATE BINARY AS REAL)) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c5 FROM rt0 WHERE ((NOT (CAST(rt0.c4 COLLATE BINARY AS REAL)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c5 FROM rt0 WHERE (((CAST(rt0.c4 COLLATE BINARY AS REAL)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c5 FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((+ (v0.c0)))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0)==(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((((+ (v0.c0)))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0)==(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((((+ (v0.c0)))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0)==(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1, v0.c0;
SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1, v0.c0 HAVING AVG(AVG(MIN(TOTAL(COUNT(AVG(v0.c0)))))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1, v0.c0 HAVING (NOT (AVG(AVG(MIN(TOTAL(COUNT(AVG(v0.c0)))))))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1, v0.c0 HAVING ((AVG(AVG(MIN(TOTAL(COUNT(AVG(v0.c0))))))) ISNULL);
SELECT ALL rt0.c2, v0.c0, rt0.c5 FROM v0, rt0;
SELECT rt0.c2, v0.c0, rt0.c5 FROM v0, rt0 WHERE ((((((((((((rt0.c2, rt0.c5, rt0.c0))>=((v0.c0, rt0.c3, rt0.c2))))AND((+ (rt0.c0)))))AND(CASE WHEN rt0.c5 THEN rt0.c2 ELSE v0.c0 END)))OR(CASE WHEN rt0.c5 THEN rt0.c4 END)))OR(((rt0.c5) BETWEEN (rt0.c2) AND (rt0.c3))))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c5 FROM v0, rt0 WHERE ((NOT ((((((((((((rt0.c2, rt0.c5, rt0.c0))>=((v0.c0, rt0.c3, rt0.c2))))AND((+ (rt0.c0)))))AND(CASE WHEN rt0.c5 THEN rt0.c2 ELSE v0.c0 END)))OR(CASE WHEN rt0.c5 THEN rt0.c4 END)))OR(((rt0.c5) BETWEEN (rt0.c2) AND (rt0.c3))))))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c5 FROM v0, rt0 WHERE ((((((((((((((rt0.c2, rt0.c5, rt0.c0))>=((v0.c0, rt0.c3, rt0.c2))))AND((+ (rt0.c0)))))AND(CASE WHEN rt0.c5 THEN rt0.c2 ELSE v0.c0 END)))OR(CASE WHEN rt0.c5 THEN rt0.c4 END)))OR(((rt0.c5) BETWEEN (rt0.c2) AND (rt0.c3))))) ISNULL));
SELECT ALL rt0.c2, v0.c0, rt0.c5 FROM v0, rt0;
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON COALESCE(DISTINCT CAST(rt0.c4 AS REAL), rt0.c0);
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON COALESCE(DISTINCT CAST(rt0.c4 AS REAL), rt0.c0) WHERE (CAST(((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)) AS BLOB)) UNION SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON COALESCE(DISTINCT CAST(rt0.c4 AS REAL), rt0.c0) WHERE ((NOT (CAST(((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)) AS BLOB)))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON COALESCE(DISTINCT CAST(rt0.c4 AS REAL), rt0.c0) WHERE (((CAST(((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON COALESCE(DISTINCT CAST(rt0.c4 AS REAL), rt0.c0);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((x'1515a0c5') IS FALSE) COLLATE BINARY) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((x'1515a0c5') IS FALSE) COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((x'1515a0c5') IS FALSE) COLLATE BINARY) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c5, rt0.c2, rt0.c1, rt0.c4, v0.c0, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON 0.6432038394945979 GROUP BY rt0.c5, rt0.c2, rt0.c1, rt0.c4, v0.c0, rt0.c0;
SELECT rt0.c5, rt0.c2, rt0.c1, rt0.c4, v0.c0, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON 0.6432038394945979 GROUP BY rt0.c5, rt0.c2, rt0.c1, rt0.c4, v0.c0, rt0.c0 HAVING SUM(COUNT(rt0.c3)) UNION ALL SELECT rt0.c5, rt0.c2, rt0.c1, rt0.c4, v0.c0, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON 0.6432038394945979 GROUP BY rt0.c5, rt0.c2, rt0.c1, rt0.c4, v0.c0, rt0.c0 HAVING (NOT (SUM(COUNT(rt0.c3)))) UNION ALL SELECT ALL rt0.c5, rt0.c2, rt0.c1, rt0.c4, v0.c0, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON 0.6432038394945979 GROUP BY rt0.c5, rt0.c2, rt0.c1, rt0.c4, v0.c0, rt0.c0 HAVING ((SUM(COUNT(rt0.c3))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (LIKELIHOOD(DISTINCT (- (rt0.c3)), 0.268358427353961)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (LIKELIHOOD(DISTINCT (- (rt0.c3)), 0.268358427353961)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((LIKELIHOOD(DISTINCT (- (rt0.c3)), 0.268358427353961)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c5, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c5, rt0.c4 FROM rt0 WHERE (NULL COLLATE RTRIM) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c5, rt0.c4 FROM rt0 WHERE ((NOT (NULL COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c5, rt0.c4 FROM rt0 WHERE (((NULL COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c5, rt0.c4 FROM rt0;
SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c5, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c5, v0.c0, rt0.c2;
SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c5, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((+ ((~ (rt0.c3))))) GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c5, v0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c5, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT ((+ ((~ (rt0.c3))))))) GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c5, v0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c5, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((((+ ((~ (rt0.c3))))) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c5, v0.c0, rt0.c2;
SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c5, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c5, v0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c5, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c5, rt0.c1, rt0.c4;
SELECT rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c5, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c5, rt0.c1, rt0.c4 HAVING COUNT(COUNT(*)) UNION ALL SELECT rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c5, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c5, rt0.c1, rt0.c4 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c5, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c5, rt0.c1, rt0.c4 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (NULL) UNION ALL SELECT * FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c5 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c5 FROM rt0 WHERE ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (0.7221032843135521)) IN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) UNION SELECT DISTINCT rt0.c2, rt0.c5 FROM rt0 WHERE ((NOT ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (0.7221032843135521)) IN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))))) UNION SELECT DISTINCT rt0.c2, rt0.c5 FROM rt0 WHERE ((((((rt0.c3) NOT BETWEEN (rt0.c4) AND (0.7221032843135521)) IN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c5 FROM rt0;
SELECT v0.c0, rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c3;
SELECT ALL v0.c0, rt0.c0, rt0.c3 FROM v0, rt0 WHERE (TYPEOF(DISTINCT ((rt0.c5) BETWEEN (rt0.c5) AND (rt0.c2)))) GROUP BY v0.c0, rt0.c0, rt0.c3 UNION SELECT v0.c0, rt0.c0, rt0.c3 FROM v0, rt0 WHERE ((NOT (TYPEOF(DISTINCT ((rt0.c5) BETWEEN (rt0.c5) AND (rt0.c2)))))) GROUP BY v0.c0, rt0.c0, rt0.c3 UNION SELECT ALL v0.c0, rt0.c0, rt0.c3 FROM v0, rt0 WHERE (((TYPEOF(DISTINCT ((rt0.c5) BETWEEN (rt0.c5) AND (rt0.c2)))) ISNULL)) GROUP BY v0.c0, rt0.c0, rt0.c3;
SELECT v0.c0, rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, v0.c0, rt0.c5, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c5, rt0.c0;
SELECT rt0.c1, v0.c0, rt0.c5, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c5, rt0.c0 HAVING NULL UNION ALL SELECT rt0.c1, v0.c0, rt0.c5, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c5, rt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c5, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c5, rt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c1, v0.c0, rt0.c5, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c5, rt0.c0;
SELECT rt0.c1, v0.c0, rt0.c5, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c5, rt0.c0 HAVING NULL UNION ALL SELECT rt0.c1, v0.c0, rt0.c5, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c5, rt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c5, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c5, rt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c1, v0.c0, rt0.c5, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c5, rt0.c0;
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((CAST(rt0.c2 AS TEXT)) BETWEEN (json_type(rt0.c0)) AND (((rt0.c2) ISNULL)))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (((CAST(rt0.c2 AS TEXT)) BETWEEN (json_type(rt0.c0)) AND (((rt0.c2) ISNULL)))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((((CAST(rt0.c2 AS TEXT)) BETWEEN (json_type(rt0.c0)) AND (((rt0.c2) ISNULL)))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c3)<=(rt0.c5))) IS TRUE);
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c3)<=(rt0.c5))) IS TRUE) WHERE (CASE WHEN v0.c0 THEN v0.c0 WHEN rt0.c4 THEN x'' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN '0.853676416507331' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END COLLATE NOCASE) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, v0.c0 FROM v0 NOT INDEXED LEFT OUTER JOIN rt0 ON ((((rt0.c3)<=(rt0.c5))) IS TRUE) WHERE ((NOT (CASE WHEN v0.c0 THEN v0.c0 WHEN rt0.c4 THEN x'' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN '0.853676416507331' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c3)<=(rt0.c5))) IS TRUE) WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN rt0.c4 THEN x'' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN '0.853676416507331' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c3)<=(rt0.c5))) IS TRUE);
SELECT ALL v0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c5 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c5;
SELECT v0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c5 FROM v0, rt0 WHERE (((((CASE rt0.c5  WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c3 THEN NULL END)AND(CAST('~L' AS BLOB))))OR(((rt0.c4)>(rt0.c5))))) GROUP BY v0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c5 UNION SELECT v0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c5 FROM v0, rt0 WHERE ((NOT (((((CASE rt0.c5  WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c3 THEN NULL END)AND(CAST('~L' AS BLOB))))OR(((rt0.c4)>(rt0.c5))))))) GROUP BY v0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c5 UNION SELECT v0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c5 FROM v0, rt0 WHERE (((((((CASE rt0.c5  WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c3 THEN NULL END)AND(CAST('~L' AS BLOB))))OR(((rt0.c4)>(rt0.c5))))) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c5;
SELECT ALL v0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c5 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c5;
SELECT ALL rt0.c1, rt0.c5, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c5, rt0.c3;
SELECT rt0.c1, rt0.c5, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c5, rt0.c3 HAVING CASE WHEN COUNT(v0.c0) THEN COUNT(rt0.c0) ELSE CAST(SUM(MAX(MIN(v0.c0))) AS NUMERIC) END UNION ALL SELECT ALL rt0.c1, rt0.c5, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c5, rt0.c3 HAVING (NOT (CASE WHEN COUNT(v0.c0) THEN COUNT(rt0.c0) ELSE CAST(SUM(MAX(MIN(v0.c0))) AS NUMERIC) END)) UNION ALL SELECT ALL rt0.c1, rt0.c5, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c5, rt0.c3 HAVING ((CASE WHEN COUNT(v0.c0) THEN COUNT(rt0.c0) ELSE CAST(SUM(MAX(MIN(v0.c0))) AS NUMERIC) END) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (rt0.c2) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM rt0, v0 WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c5 WHEN v0.c0 THEN rt0.c5 WHEN rt0.c3 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN rt0.c3 THEN v0.c0 ELSE rt0.c0 END)=((((rt0.c2)) BETWEEN ((rt0.c5)) AND ((rt0.c1)))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((CASE WHEN rt0.c4 THEN rt0.c5 WHEN v0.c0 THEN rt0.c5 WHEN rt0.c3 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN rt0.c3 THEN v0.c0 ELSE rt0.c0 END)==((((rt0.c2)) BETWEEN ((rt0.c5)) AND ((rt0.c1)))))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((CASE WHEN rt0.c4 THEN rt0.c5 WHEN v0.c0 THEN rt0.c5 WHEN rt0.c3 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN rt0.c3 THEN v0.c0 ELSE rt0.c0 END)=((((rt0.c2)) BETWEEN ((rt0.c5)) AND ((rt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT v0.c0, rt0.c3, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON (- ((rt0.c3 IN (NULL)))) GROUP BY v0.c0, rt0.c3, rt0.c4;
SELECT ALL v0.c0, rt0.c3, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON (- ((rt0.c3 IN (NULL)))) WHERE (((rt0.c2)>>(CAST(rt0.c3 AS INTEGER)))) GROUP BY v0.c0, rt0.c3, rt0.c4 UNION SELECT v0.c0, rt0.c3, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON (- ((rt0.c3 IN (NULL)))) WHERE ((NOT (((rt0.c2)>>(CAST(rt0.c3 AS INTEGER)))))) GROUP BY v0.c0, rt0.c3, rt0.c4 UNION SELECT ALL v0.c0, rt0.c3, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON (- ((rt0.c3 IN (NULL)))) WHERE (((((rt0.c2)>>(CAST(rt0.c3 AS INTEGER)))) ISNULL)) GROUP BY v0.c0, rt0.c3, rt0.c4;
SELECT v0.c0, rt0.c3, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON (- ((rt0.c3 IN (NULL)))) GROUP BY v0.c0, rt0.c3, rt0.c4;
SELECT rt0.c2, v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON CASE WHEN x'' THEN ((((((((rt0.c5)AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c4)))AND(rt0.c4)) ELSE ((v0.c0) ISNULL) END GROUP BY rt0.c2, v0.c0, rt0.c1;
SELECT rt0.c2, v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON CASE WHEN x'' THEN ((((((((rt0.c5)AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c4)))AND(rt0.c4)) ELSE ((v0.c0) ISNULL) END GROUP BY rt0.c2, v0.c0, rt0.c1 HAVING TOTAL(MAX(MIN(SUM('595976724')))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON CASE WHEN x'' THEN ((((((((rt0.c5)AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c4)))AND(rt0.c4)) ELSE ((v0.c0) ISNULL) END GROUP BY rt0.c2, v0.c0, rt0.c1 HAVING (NOT (TOTAL(MAX(MIN(SUM('595976724')))))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON CASE WHEN x'' THEN ((((((((rt0.c5)AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c4)))AND(rt0.c4)) ELSE ((v0.c0) ISNULL) END GROUP BY rt0.c2, v0.c0, rt0.c1 HAVING ((TOTAL(MAX(MIN(SUM('595976724'))))) ISNULL);
SELECT MIN(CASE WHEN -1078814680 THEN (0Xfffffffff8b24358 IN ()) ELSE LIKELY(DISTINCT rt0.c2) END) FROM v0, rt0 ORDER BY CASE ((((rt0.c0)AND(rt0.c5)))OR(rt0.c2))  WHEN (rt0.c2 IN ()) THEN (NOT (rt0.c2)) ELSE x'1f3dae8c' COLLATE RTRIM END, (((rt0.c1)) NOT BETWEEN (((((rt0.c2)) NOT BETWEEN ((0.9003689026492288)) AND ((rt0.c0))))) AND ((CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c4 THEN '' END))) DESC  NULLS LAST, SQLITE_COMPILEOPTION_GET(v0.c0);
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 ELSE v0.c0 END) BETWEEN (((rt0.c0)LIKE(v0.c0))) AND ((+ (NULL))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 ELSE v0.c0 END) BETWEEN (((rt0.c0)LIKE(v0.c0))) AND ((+ (NULL))))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 ELSE v0.c0 END) BETWEEN (((rt0.c0)LIKE(v0.c0))) AND ((+ (NULL))))) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((0Xffffffffb6ac53d2)AND(rt0.c5))) ISNULL)) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((0Xffffffffb6ac53d2)AND(rt0.c5))) ISNULL)))) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((0xffffffffb6ac53d2)AND(rt0.c5))) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c3, rt0.c0, rt0.c5 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c5;
SELECT ALL rt0.c3, rt0.c0, rt0.c5 FROM rt0 WHERE (CASE WHEN ((0.8354343119444955) IS TRUE) THEN CAST(rt0.c1 AS TEXT) ELSE CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END END) GROUP BY rt0.c3, rt0.c0, rt0.c5 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c5 FROM rt0 WHERE ((NOT (CASE WHEN ((0.8354343119444955) IS TRUE) THEN CAST(rt0.c1 AS TEXT) ELSE CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END END))) GROUP BY rt0.c3, rt0.c0, rt0.c5 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c5 FROM rt0 WHERE (((CASE WHEN ((0.8354343119444955) IS TRUE) THEN CAST(rt0.c1 AS TEXT) ELSE CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END END) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c5;
SELECT ALL rt0.c3, rt0.c0, rt0.c5 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c5;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE WHEN (~ (v0.c0)) THEN COUNT(COUNT(*)) WHEN ((((v0.c0)AND(v0.c0)))OR(TOTAL(TOTAL(v0.c0)))) THEN ((MAX(MAX(v0.c0)))<('709638588')) WHEN AVG(SUM(SUM(v0.c0))) THEN CASE WHEN TOTAL(COUNT(*)) THEN COUNT(COUNT(GROUP_CONCAT(AVG(v0.c0)))) END END UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE WHEN (~ (v0.c0)) THEN COUNT(COUNT(*)) WHEN ((((v0.c0)AND(v0.c0)))OR(TOTAL(TOTAL(v0.c0)))) THEN ((MAX(MAX(v0.c0)))<('709638588')) WHEN AVG(SUM(SUM(v0.c0))) THEN CASE WHEN TOTAL(COUNT(*)) THEN COUNT(COUNT(GROUP_CONCAT(AVG(v0.c0)))) END END)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE WHEN (~ (v0.c0)) THEN COUNT(COUNT(*)) WHEN ((((v0.c0)AND(v0.c0)))OR(TOTAL(TOTAL(v0.c0)))) THEN ((MAX(MAX(v0.c0)))<('709638588')) WHEN AVG(SUM(SUM(v0.c0))) THEN CASE WHEN TOTAL(COUNT(*)) THEN COUNT(COUNT(GROUP_CONCAT(AVG(v0.c0)))) END END) ISNULL);
SELECT rt0.c5, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM v0, rt0;
SELECT ALL rt0.c5, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM v0, rt0 WHERE (((((rt0.c5) NOT NULL)) NOTNULL)) UNION ALL SELECT rt0.c5, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM v0, rt0 WHERE ((NOT (((((rt0.c5) NOT NULL)) NOTNULL)))) UNION ALL SELECT ALL rt0.c5, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM v0, rt0 WHERE (((((((rt0.c5) NOT NULL)) NOTNULL)) ISNULL));
SELECT rt0.c5, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (0.4505373652549234) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (0.4505373652549234))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((0.4505373652549234) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c5, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c5, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c5, rt0.c2, rt0.c1 FROM rt0 WHERE (IFNULL(DISTINCT ((rt0.c4) NOTNULL), (+ ('')))) GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c5, rt0.c2, rt0.c1 UNION SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c5, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (IFNULL(DISTINCT ((rt0.c4) NOTNULL), (+ ('')))))) GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c5, rt0.c2, rt0.c1 UNION SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c5, rt0.c2, rt0.c1 FROM rt0 WHERE (((IFNULL(DISTINCT ((rt0.c4) NOTNULL), (+ ('')))) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c5, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c5, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c5, rt0.c2, rt0.c1;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING CASE WHEN (~ (NULL)) THEN (((AVG(COUNT(*)), SUM(TOTAL(MIN(rt0.c5))), COUNT(TOTAL('668917438')), NULL, MIN(AVG(MAX(rt0.c2))))) NOT BETWEEN ((rt0.c4, GROUP_CONCAT(rt0.c2), MAX(rt0.c4), rt0.c3, MIN(rt0.c4))) AND ((AVG(rt0.c4), rt0.c3, SUM(rt0.c2), rt0.c1, rt0.c1))) END UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (CASE WHEN (~ (NULL)) THEN (((AVG(COUNT(*)), SUM(TOTAL(MIN(rt0.c5))), COUNT(TOTAL('668917438')), NULL, MIN(AVG(MAX(rt0.c2))))) NOT BETWEEN ((rt0.c4, GROUP_CONCAT(rt0.c2), MAX(rt0.c4), rt0.c3, MIN(rt0.c4))) AND ((AVG(rt0.c4), rt0.c3, SUM(rt0.c2), rt0.c1, rt0.c1))) END)) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((CASE WHEN (~ (NULL)) THEN (((AVG(COUNT(*)), SUM(TOTAL(MIN(rt0.c5))), COUNT(TOTAL('668917438')), NULL, MIN(AVG(MAX(rt0.c2))))) NOT BETWEEN ((rt0.c4, GROUP_CONCAT(rt0.c2), MAX(rt0.c4), rt0.c3, MIN(rt0.c4))) AND ((AVG(rt0.c4), rt0.c3, SUM(rt0.c2), rt0.c1, rt0.c1))) END) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((CASE 0.36635828710109064  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN (CAST(v0.c0 AS TEXT)))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((CASE 0.36635828710109064  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN (CAST(v0.c0 AS TEXT)))))) UNION ALL SELECT * FROM v0 WHERE ((((CASE 0.36635828710109064  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN (CAST(v0.c0 AS TEXT)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0) IS TRUE))<<(((v0.c0) NOT BETWEEN (v0.c0) AND ('1671177053'))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) IS TRUE))<<(((v0.c0) NOT BETWEEN (v0.c0) AND ('1671177053'))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0) IS TRUE))<<(((v0.c0) NOT BETWEEN (v0.c0) AND ('1671177053'))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c3 FROM v0, rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM v0, rt0 WHERE (((((((((((rt0.c5) NOT BETWEEN (rt0.c1) AND (rt0.c5)))OR((rt0.c2 IN ()))))OR(x'')))AND(((rt0.c3)>(rt0.c0)))))OR(CASE v0.c0  WHEN '-1483224573' THEN rt0.c4 END))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM v0, rt0 WHERE ((NOT (((((((((((rt0.c5) NOT BETWEEN (rt0.c1) AND (rt0.c5)))OR((rt0.c2 IN ()))))OR(x'')))AND(((rt0.c3)>(rt0.c0)))))OR(CASE v0.c0  WHEN '-1483224573' THEN rt0.c4 END))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM v0, rt0 WHERE (((((((((((((rt0.c5) NOT BETWEEN (rt0.c1) AND (rt0.c5)))OR((rt0.c2 IN ()))))OR(x'')))AND(((rt0.c3)>(rt0.c0)))))OR(CASE v0.c0  WHEN '-1483224573' THEN rt0.c4 END))) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM v0, rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING HEX(DISTINCT MAX(COUNT(rt0.c4))) COLLATE BINARY UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (HEX(DISTINCT MAX(COUNT(rt0.c4))) COLLATE BINARY)) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((HEX(DISTINCT MAX(COUNT(rt0.c4))) COLLATE BINARY) ISNULL);
SELECT rt0.c3, rt0.c4, v0.c0, rt0.c0 FROM v0, rt0;
SELECT ALL rt0.c3, rt0.c4, v0.c0, rt0.c0 FROM v0, rt0 WHERE ((((rt0.c1)>=(rt0.c4)) IN ())) UNION ALL SELECT ALL rt0.c3, rt0.c4, v0.c0, rt0.c0 FROM v0, rt0 WHERE ((NOT ((((rt0.c1)>=(rt0.c4)) IN ())))) UNION ALL SELECT ALL rt0.c3, rt0.c4, v0.c0, rt0.c0 FROM v0, rt0 WHERE ((((((rt0.c1)>=(rt0.c4)) IN ())) ISNULL));
SELECT rt0.c3, rt0.c4, v0.c0, rt0.c0 FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((('754566233' COLLATE NOCASE) BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((('754566233' COLLATE NOCASE) BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((('754566233' COLLATE NOCASE) BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c5, rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM v0 INNER JOIN rt0 ON ((LOWER(rt0.c0))>((rt0.c5 IN ()))) GROUP BY rt0.c5, rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0;
SELECT rt0.c5, rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM v0 INNER JOIN rt0 ON ((LOWER(rt0.c0))>((rt0.c5 IN ()))) WHERE (((ABS(rt0.c4))+(rt0.c4))) GROUP BY rt0.c5, rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0 UNION SELECT rt0.c5, rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM v0 INNER JOIN rt0 ON ((LOWER(rt0.c0))>((rt0.c5 IN ()))) WHERE ((NOT (((ABS(rt0.c4))+(rt0.c4))))) GROUP BY rt0.c5, rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0 UNION SELECT rt0.c5, rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM v0 INNER JOIN rt0 ON ((LOWER(rt0.c0))>((rt0.c5 IN ()))) WHERE (((((ABS(rt0.c4))+(rt0.c4))) ISNULL)) GROUP BY rt0.c5, rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0;
SELECT ALL rt0.c5, rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM v0 INNER JOIN rt0 ON ((LOWER(rt0.c0))>((rt0.c5 IN ()))) GROUP BY rt0.c5, rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0;
SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((((rt0.c4)AND(rt0.c3)))OR(x''))) NOTNULL) GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((((rt0.c4)AND(rt0.c3)))OR(x''))) NOTNULL) GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(SUM(MAX(rt0.c4))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((((rt0.c4)AND(rt0.c3)))OR(x''))) NOTNULL) GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(SUM(MAX(rt0.c4))))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((((rt0.c4)AND(rt0.c3)))OR(x''))) NOTNULL) GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(SUM(MAX(rt0.c4)))) ISNULL);
SELECT rt0.c3 FROM v0, rt0;
SELECT ALL rt0.c3 FROM v0, rt0 WHERE ((((NOT (rt0.c3))) NOT NULL)) UNION ALL SELECT rt0.c3 FROM v0, rt0 WHERE ((NOT ((((NOT (rt0.c3))) NOT NULL)))) UNION ALL SELECT rt0.c3 FROM v0, rt0 WHERE ((((((NOT (rt0.c3))) NOT NULL)) ISNULL));
SELECT rt0.c3 FROM v0, rt0;
SELECT DISTINCT rt0.c3, rt0.c5, rt0.c4, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c5, rt0.c4, rt0.c1 FROM rt0 WHERE (CASE ((rt0.c4) IS FALSE)  WHEN json_array_length(rt0.c0, rt0.c1) THEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0)) END) UNION SELECT DISTINCT rt0.c3, rt0.c5, rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT (CASE ((rt0.c4) IS FALSE)  WHEN json_array_length(rt0.c0, rt0.c1) THEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0)) END))) UNION SELECT DISTINCT rt0.c3, rt0.c5, rt0.c4, rt0.c1 FROM rt0 WHERE (((CASE ((rt0.c4) IS FALSE)  WHEN json_array_length(rt0.c0, rt0.c1) THEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0)) END) ISNULL));
SELECT ALL rt0.c5, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c5, rt0.c3, rt0.c4, rt0.c1, rt0.c2;
SELECT rt0.c5, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c4)%(((rt0.c5)GLOB(rt0.c5))))) GROUP BY rt0.c5, rt0.c3, rt0.c4, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c5, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c4)%(((rt0.c5)GLOB(rt0.c5))))))) GROUP BY rt0.c5, rt0.c3, rt0.c4, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c5, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c4)%(((rt0.c5)GLOB(rt0.c5))))) ISNULL)) GROUP BY rt0.c5, rt0.c3, rt0.c4, rt0.c1, rt0.c2;
SELECT ALL rt0.c5, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c5, rt0.c3, rt0.c4, rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c5, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, rt0.c5, rt0.c3, rt0.c4;
SELECT rt0.c2, rt0.c5, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, rt0.c5, rt0.c3, rt0.c4 HAVING SUM(COUNT(rt0.c3)) UNION ALL SELECT ALL rt0.c2, rt0.c5, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, rt0.c5, rt0.c3, rt0.c4 HAVING (NOT (SUM(COUNT(rt0.c3)))) UNION ALL SELECT rt0.c2, rt0.c5, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, rt0.c5, rt0.c3, rt0.c4 HAVING ((SUM(COUNT(rt0.c3))) ISNULL);
SELECT rt0.c5, rt0.c0 FROM rt0, v0;
SELECT ALL rt0.c5, rt0.c0 FROM rt0, v0 WHERE (x'') UNION ALL SELECT ALL rt0.c5, rt0.c0 FROM rt0, v0 WHERE ((NOT (x''))) UNION ALL SELECT ALL rt0.c5, rt0.c0 FROM rt0, v0 WHERE (((x'') ISNULL));
SELECT rt0.c5, rt0.c0 FROM rt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c3, v0.c0, rt0.c0, rt0.c5 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c5;
SELECT rt0.c3, v0.c0, rt0.c0, rt0.c5 FROM rt0, v0 WHERE (LIKELIHOOD((rt0.c5 IN (rt0.c2, rt0.c1)), 0.6412353512533931)) GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c5 UNION SELECT rt0.c3, v0.c0, rt0.c0, rt0.c5 FROM rt0, v0 WHERE ((NOT (LIKELIHOOD((rt0.c5 IN (rt0.c2, rt0.c1)), 0.6412353512533931)))) GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c5 UNION SELECT ALL rt0.c3, v0.c0, rt0.c0, rt0.c5 FROM rt0, v0 WHERE (((LIKELIHOOD((rt0.c5 IN (rt0.c2, rt0.c1)), 0.6412353512533931)) ISNULL)) GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c5;
SELECT rt0.c3, v0.c0, rt0.c0, rt0.c5 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c5;
SELECT ALL v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, rt0 GROUP BY v0.c0 HAVING (~ (((MAX(TOTAL(rt0.c0))) NOT BETWEEN (rt0.c4) AND (rt0.c4)))) UNION ALL SELECT v0.c0 FROM v0, rt0 GROUP BY v0.c0 HAVING (NOT ((~ (((MAX(TOTAL(rt0.c0))) NOT BETWEEN (rt0.c4) AND (rt0.c4)))))) UNION ALL SELECT v0.c0 FROM v0, rt0 GROUP BY v0.c0 HAVING (((~ (((MAX(TOTAL(rt0.c0))) NOT BETWEEN (rt0.c4) AND (rt0.c4))))) ISNULL);
SELECT ALL TOTAL(((rt0.c4)GLOB(rt0.c2)) COLLATE BINARY) FROM rt0 ORDER BY ((NULL COLLATE BINARY)|(((rt0.c1) ISNULL))), NULLIF(DISTINCT 0Xffffffff8bd2d7ae, 0.5451615935540932) DESC;
SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM rt0, v0;
SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM rt0, v0 WHERE (v0.c0) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM rt0, v0 WHERE (((v0.c0) ISNULL));
SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON CASE WHEN ((rt0.c5)<<(rt0.c2)) THEN CASE WHEN rt0.c1 THEN v0.c0 END ELSE ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)) END;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON CASE WHEN ((rt0.c5)<<(rt0.c2)) THEN CASE WHEN rt0.c1 THEN v0.c0 END ELSE ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)) END WHERE ((((rt0.c5, rt0.c5, rt0.c0)) NOT BETWEEN ((rt0.c5 COLLATE NOCASE, TRIM(rt0.c5, rt0.c0), ((rt0.c2)>=(v0.c0)))) AND ((COALESCE(rt0.c1, rt0.c5, v0.c0, v0.c0), ((((rt0.c4)AND(rt0.c4)))AND(rt0.c0)), 0X26cdf073)))) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON CASE WHEN ((rt0.c5)<<(rt0.c2)) THEN CASE WHEN rt0.c1 THEN v0.c0 END ELSE ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)) END WHERE ((NOT ((((rt0.c5, rt0.c5, rt0.c0)) NOT BETWEEN ((rt0.c5 COLLATE NOCASE, TRIM(rt0.c5, rt0.c0), ((rt0.c2)>=(v0.c0)))) AND ((COALESCE(rt0.c1, rt0.c5, v0.c0, v0.c0), ((((rt0.c4)AND(rt0.c4)))AND(rt0.c0)), 0X26cdf073)))))) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON CASE WHEN ((rt0.c5)<<(rt0.c2)) THEN CASE WHEN rt0.c1 THEN v0.c0 END ELSE ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)) END WHERE ((((((rt0.c5, rt0.c5, rt0.c0)) NOT BETWEEN ((rt0.c5 COLLATE NOCASE, TRIM(rt0.c5, rt0.c0), ((rt0.c2)>=(v0.c0)))) AND ((COALESCE(rt0.c1, rt0.c5, v0.c0, v0.c0), ((((rt0.c4)AND(rt0.c4)))AND(rt0.c0)), 0x26cdf073)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON CASE WHEN ((rt0.c5)<<(rt0.c2)) THEN CASE WHEN rt0.c1 THEN v0.c0 END ELSE ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)) END;
SELECT ALL rt0.c0, rt0.c5, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c5, rt0.c1;
SELECT ALL rt0.c0, rt0.c5, rt0.c1 FROM rt0 WHERE ('') GROUP BY rt0.c0, rt0.c5, rt0.c1 UNION SELECT rt0.c0, rt0.c5, rt0.c1 FROM rt0 WHERE ((NOT (''))) GROUP BY rt0.c0, rt0.c5, rt0.c1 UNION SELECT rt0.c0, rt0.c5, rt0.c1 FROM rt0 WHERE ((('') ISNULL)) GROUP BY rt0.c0, rt0.c5, rt0.c1;
SELECT ALL rt0.c0, rt0.c5, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c5, rt0.c1;
SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0 INNER JOIN v0 ON (((v0.c0, rt0.c4, 1671177053)) NOT BETWEEN (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))), ((v0.c0)GLOB(rt0.c0)), (- (rt0.c4)))) AND ((rt0.c3, ((((((((v0.c0)AND(rt0.c5)))AND(rt0.c5)))OR(rt0.c5)))OR(rt0.c4)), CASE WHEN v0.c0 THEN rt0.c5 ELSE rt0.c2 END))) GROUP BY rt0.c3, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0 INNER JOIN v0 ON (((v0.c0, rt0.c4, 1671177053)) NOT BETWEEN (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))), ((v0.c0)GLOB(rt0.c0)), (- (rt0.c4)))) AND ((rt0.c3, ((((((((v0.c0)AND(rt0.c5)))AND(rt0.c5)))OR(rt0.c5)))OR(rt0.c4)), CASE WHEN v0.c0 THEN rt0.c5 ELSE rt0.c2 END))) GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING MAX(CASE SUM(GROUP_CONCAT(v0.c0))  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN COUNT(*) WHEN GROUP_CONCAT(COUNT(rt0.c4)) THEN COUNT(*) ELSE rt0.c4 END) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0 INNER JOIN v0 ON (((v0.c0, rt0.c4, 1671177053)) NOT BETWEEN (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))), ((v0.c0)GLOB(rt0.c0)), (- (rt0.c4)))) AND ((rt0.c3, ((((((((v0.c0)AND(rt0.c5)))AND(rt0.c5)))OR(rt0.c5)))OR(rt0.c4)), CASE WHEN v0.c0 THEN rt0.c5 ELSE rt0.c2 END))) GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING (NOT (MAX(CASE SUM(GROUP_CONCAT(v0.c0))  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN COUNT(*) WHEN GROUP_CONCAT(COUNT(rt0.c4)) THEN COUNT(*) ELSE rt0.c4 END))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c4 FROM rt0 INNER JOIN v0 ON (((v0.c0, rt0.c4, 1671177053)) NOT BETWEEN (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))), ((v0.c0)GLOB(rt0.c0)), (- (rt0.c4)))) AND ((rt0.c3, ((((((((v0.c0)AND(rt0.c5)))AND(rt0.c5)))OR(rt0.c5)))OR(rt0.c4)), CASE WHEN v0.c0 THEN rt0.c5 ELSE rt0.c2 END))) GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING ((MAX(CASE SUM(GROUP_CONCAT(v0.c0))  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN COUNT(*) WHEN GROUP_CONCAT(COUNT(rt0.c4)) THEN COUNT(*) ELSE rt0.c4 END)) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (LOWER(((v0.c0)!=(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (LOWER(((v0.c0)<>(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((LOWER(((v0.c0)<>(v0.c0)))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0)<<(v0.c0)))OR(CAST(v0.c0 AS INTEGER))))AND('-801590292'))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((v0.c0)<<(v0.c0)))OR(CAST(v0.c0 AS INTEGER))))AND('-801590292'))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((((v0.c0)<<(v0.c0)))OR(CAST(v0.c0 AS INTEGER))))AND('-801590292'))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c5, rt0.c2 FROM rt0 INNER JOIN v0 ON ((((rt0.c4)/(v0.c0)))%(rt0.c4)) GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c5, rt0.c2;
SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c5, rt0.c2 FROM rt0 INNER JOIN v0 ON ((((rt0.c4)/(v0.c0)))%(rt0.c4)) WHERE (LIKELIHOOD(((rt0.c5) IS TRUE), 0.5693269495581712)) GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c5, rt0.c2 UNION SELECT rt0.c4, rt0.c3, rt0.c1, rt0.c5, rt0.c2 FROM rt0 INNER JOIN v0 ON ((((rt0.c4)/(v0.c0)))%(rt0.c4)) WHERE ((NOT (LIKELIHOOD(((rt0.c5) IS TRUE), 0.5693269495581712)))) GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c5, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c5, rt0.c2 FROM rt0 INNER JOIN v0 ON ((((rt0.c4)/(v0.c0)))%(rt0.c4)) WHERE (((LIKELIHOOD(((rt0.c5) IS TRUE), 0.5693269495581712)) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c5, rt0.c2;
SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c5, rt0.c2 FROM rt0 INNER JOIN v0 ON ((((rt0.c4)/(v0.c0)))%(rt0.c4)) GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c5, rt0.c2;
SELECT ALL rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c0;
SELECT rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c0 HAVING (- ((AVG(AVG(rt0.c5)) IN (x'')))) UNION ALL SELECT rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c0 HAVING (NOT ((- ((AVG(AVG(rt0.c5)) IN (x'')))))) UNION ALL SELECT ALL rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c0 HAVING (((- ((AVG(AVG(rt0.c5)) IN (x''))))) ISNULL);
SELECT TOTAL(((((v0.c0)OR(v0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (((v0.c0) BETWEEN (x'') AND (v0.c0))))) FROM v0 ORDER BY (~ (v0.c0 COLLATE RTRIM)) DESC, ((CAST(v0.c0 AS INTEGER))OR((((v0.c0))>((v0.c0))))) DESC  NULLS FIRST;
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (6.68917438E8) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (6.68917438E8))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((6.68917438E8) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0;
SELECT ALL rt0.c2, v0.c0, rt0.c4, rt0.c3 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c3)OR(LOWER(rt0.c0))))OR(rt0.c4 COLLATE BINARY)) GROUP BY rt0.c2, v0.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c2, v0.c0, rt0.c4, rt0.c3 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c3)OR(LOWER(rt0.c0))))OR(rt0.c4 COLLATE BINARY)) WHERE (((((((((((v0.c0)>(0.3178393826704595)))OR(((rt0.c1)-(rt0.c4)))))OR(((((x'')OR(v0.c0)))AND(v0.c0)))))OR((~ (rt0.c5)))))AND((((rt0.c2)) BETWEEN (('665963989')) AND ((0Xffffffffad4a3bee)))))) GROUP BY rt0.c2, v0.c0, rt0.c4, rt0.c3 UNION SELECT rt0.c2, v0.c0, rt0.c4, rt0.c3 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c3)OR(LOWER(rt0.c0))))OR(rt0.c4 COLLATE BINARY)) WHERE ((NOT (((((((((((v0.c0)>(0.3178393826704595)))OR(((rt0.c1)-(rt0.c4)))))OR(((((x'')OR(v0.c0)))AND(v0.c0)))))OR((~ (rt0.c5)))))AND((((rt0.c2)) BETWEEN (('665963989')) AND ((0xffffffffad4a3bee)))))))) GROUP BY rt0.c2, v0.c0, rt0.c4, rt0.c3 UNION SELECT rt0.c2, v0.c0, rt0.c4, rt0.c3 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c3)OR(LOWER(rt0.c0))))OR(rt0.c4 COLLATE BINARY)) WHERE (((((((((((((v0.c0)>(0.3178393826704595)))OR(((rt0.c1)-(rt0.c4)))))OR(((((x'')OR(v0.c0)))AND(v0.c0)))))OR((~ (rt0.c5)))))AND((((rt0.c2)) BETWEEN (('665963989')) AND ((0Xffffffffad4a3bee)))))) ISNULL)) GROUP BY rt0.c2, v0.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c2, v0.c0, rt0.c4, rt0.c3 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c3)OR(LOWER(rt0.c0))))OR(rt0.c4 COLLATE BINARY)) GROUP BY rt0.c2, v0.c0, rt0.c4, rt0.c3;
SELECT rt0.c0, v0.c0, rt0.c1, rt0.c5, rt0.c2, rt0.c4, rt0.c3 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c5, rt0.c2, rt0.c4, rt0.c3;
SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c5, rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c5, rt0.c2, rt0.c4, rt0.c3 HAVING LIKELIHOOD(DISTINCT (((rt0.c5, rt0.c0, rt0.c3)) BETWEEN ((GROUP_CONCAT(rt0.c5), COUNT(*), TOTAL(rt0.c1))) AND ((NULL, v0.c0, rt0.c2))), 0.042200675162107903) UNION ALL SELECT rt0.c0, v0.c0, rt0.c1, rt0.c5, rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c5, rt0.c2, rt0.c4, rt0.c3 HAVING (NOT (LIKELIHOOD(DISTINCT (((rt0.c5, rt0.c0, rt0.c3)) BETWEEN ((GROUP_CONCAT(rt0.c5), COUNT(*), TOTAL(rt0.c1))) AND ((NULL, v0.c0, rt0.c2))), 0.042200675162107903))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c5, rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c5, rt0.c2, rt0.c4, rt0.c3 HAVING ((LIKELIHOOD(DISTINCT (((rt0.c5, rt0.c0, rt0.c3)) BETWEEN ((GROUP_CONCAT(rt0.c5), COUNT(*), TOTAL(rt0.c1))) AND ((NULL, v0.c0, rt0.c2))), 0.042200675162107903)) ISNULL);
SELECT rt0.c0, v0.c0, rt0.c1, rt0.c5, rt0.c2, rt0.c4, rt0.c3 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c5, rt0.c2, rt0.c4, rt0.c3;
SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c5, rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c5, rt0.c2, rt0.c4, rt0.c3 HAVING LIKELIHOOD(DISTINCT (((rt0.c5, rt0.c0, rt0.c3)) BETWEEN ((GROUP_CONCAT(rt0.c5), COUNT(*), TOTAL(rt0.c1))) AND ((NULL, v0.c0, rt0.c2))), 0.042200675162107903) UNION ALL SELECT rt0.c0, v0.c0, rt0.c1, rt0.c5, rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c5, rt0.c2, rt0.c4, rt0.c3 HAVING (NOT (LIKELIHOOD(DISTINCT (((rt0.c5, rt0.c0, rt0.c3)) BETWEEN ((GROUP_CONCAT(rt0.c5), COUNT(*), TOTAL(rt0.c1))) AND ((NULL, v0.c0, rt0.c2))), 0.042200675162107903))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c5, rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c5, rt0.c2, rt0.c4, rt0.c3 HAVING ((LIKELIHOOD(DISTINCT (((rt0.c5, rt0.c0, rt0.c3)) BETWEEN ((GROUP_CONCAT(rt0.c5), COUNT(*), TOTAL(rt0.c1))) AND ((NULL, v0.c0, rt0.c2))), 0.042200675162107903)) ISNULL);
SELECT rt0.c0, v0.c0, rt0.c1, rt0.c5, rt0.c2, rt0.c4, rt0.c3 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c5, rt0.c2, rt0.c4, rt0.c3;
SELECT ALL v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0;
SELECT v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 WHERE ((~ ((rt0.c4 IN (0.3900821906708897))))) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 WHERE ((NOT ((~ ((rt0.c4 IN (0.3900821906708897))))))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 WHERE ((((~ ((rt0.c4 IN (0.3900821906708897))))) ISNULL));
SELECT ALL v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((LIKELIHOOD(DISTINCT v0.c0, 0.6892662194733206))%(((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((LIKELIHOOD(DISTINCT v0.c0, 0.6892662194733206))%(((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((LIKELIHOOD(DISTINCT v0.c0, 0.6892662194733206))%(((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2, rt0.c5 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2, rt0.c5;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2, rt0.c5 FROM rt0 WHERE (IFNULL(rt0.c1, rt0.c4) COLLATE NOCASE) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2, rt0.c5 UNION SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2, rt0.c5 FROM rt0 WHERE ((NOT (IFNULL(rt0.c1, rt0.c4) COLLATE NOCASE))) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2, rt0.c5 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2, rt0.c5 FROM rt0 WHERE (((IFNULL(rt0.c1, rt0.c4) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2, rt0.c5;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2, rt0.c5 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2, rt0.c5;
SELECT rt0.c1, rt0.c3, rt0.c5, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c5, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, rt0.c5, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c5, rt0.c2 HAVING ((((rt0.c1)AND(SUM(TOTAL(rt0.c3)))))AND(TOTAL(SUM(COUNT(*))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c5, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c5, rt0.c2 HAVING (NOT (((((rt0.c1)AND(SUM(TOTAL(rt0.c3)))))AND(TOTAL(SUM(COUNT(*))))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c5, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c5, rt0.c2 HAVING ((((((rt0.c1)AND(SUM(TOTAL(rt0.c3)))))AND(TOTAL(SUM(COUNT(*)))))) ISNULL);
SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c5 FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c3, rt0.c2, rt0.c4)) NOT BETWEEN ((v0.c0, rt0.c4, -9.86760938E8)) AND ((rt0.c5, v0.c0, rt0.c4)))) NOT NULL);
SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c5 FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c3, rt0.c2, rt0.c4)) NOT BETWEEN ((v0.c0, rt0.c4, -9.86760938E8)) AND ((rt0.c5, v0.c0, rt0.c4)))) NOT NULL) WHERE (x'4645') UNION ALL SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c5 FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c3, rt0.c2, rt0.c4)) NOT BETWEEN ((v0.c0, rt0.c4, -9.86760938E8)) AND ((rt0.c5, v0.c0, rt0.c4)))) NOT NULL) WHERE ((NOT (x'4645'))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c5 FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c3, rt0.c2, rt0.c4)) NOT BETWEEN ((v0.c0, rt0.c4, -9.86760938E8)) AND ((rt0.c5, v0.c0, rt0.c4)))) NOT NULL) WHERE (((x'4645') ISNULL));
SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c5 FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c3, rt0.c2, rt0.c4)) NOT BETWEEN ((v0.c0, rt0.c4, -9.86760938E8)) AND ((rt0.c5, v0.c0, rt0.c4)))) NOT NULL);
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 NOT INDEXED WHERE (((v0.c0 COLLATE RTRIM) BETWEEN (json_array(9.16764606E8, v0.c0, x'33f1', v0.c0, v0.c0, v0.c0)) AND (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE RTRIM) BETWEEN (json_array(9.16764606E8, v0.c0, x'33f1', v0.c0, v0.c0, v0.c0)) AND (v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE RTRIM) BETWEEN (json_array(9.16764606E8, v0.c0, x'33f1', v0.c0, v0.c0, v0.c0)) AND (v0.c0))) ISNULL));
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((TOTAL_CHANGES() IN (((rt0.c2) IS FALSE)))) GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((TOTAL_CHANGES() IN (((rt0.c2) IS FALSE)))))) GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((TOTAL_CHANGES() IN (((rt0.c2) IS FALSE)))) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0)*(MIN(v0.c0))))%(v0.c0 COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((v0.c0)*(MIN(v0.c0))))%(v0.c0 COLLATE NOCASE)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((v0.c0)*(MIN(v0.c0))))%(v0.c0 COLLATE NOCASE))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0)*(MIN(v0.c0))))%(v0.c0 COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((v0.c0)*(MIN(v0.c0))))%(v0.c0 COLLATE NOCASE)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((v0.c0)*(MIN(v0.c0))))%(v0.c0 COLLATE NOCASE))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT MIN(((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN ('') AND (CASE WHEN rt0.c1 THEN rt0.c1 END))) FROM rt0, v0 ORDER BY CAST((rt0.c3 IN ()) AS TEXT);
SELECT rt0.c5, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM rt0 NOT INDEXED CROSS JOIN v0 ON ((LIKELIHOOD(DISTINCT v0.c0, 0.556657409003656))*(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3))));
SELECT ALL rt0.c5, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM rt0 CROSS JOIN v0 ON ((LIKELIHOOD(DISTINCT v0.c0, 0.556657409003656))*(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)))) WHERE ((x'' COLLATE NOCASE IN ())) UNION ALL SELECT rt0.c5, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM rt0 CROSS JOIN v0 ON ((LIKELIHOOD(DISTINCT v0.c0, 0.556657409003656))*(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)))) WHERE ((NOT ((x'' COLLATE NOCASE IN ())))) UNION ALL SELECT ALL rt0.c5, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM rt0 CROSS JOIN v0 ON ((LIKELIHOOD(DISTINCT v0.c0, 0.556657409003656))*(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)))) WHERE ((((x'' COLLATE NOCASE IN ())) ISNULL));
SELECT rt0.c5, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM rt0 NOT INDEXED CROSS JOIN v0 ON ((LIKELIHOOD(DISTINCT v0.c0, 0.556657409003656))*(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3))));
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c3 FROM rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c3 FROM rt0, v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(x''))) BETWEEN (((rt0.c1) BETWEEN (rt0.c3) AND (v0.c0))) AND ('0.754302944503082'))) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c3 FROM rt0, v0 WHERE ((NOT (((((((v0.c0)OR(v0.c0)))AND(x''))) BETWEEN (((rt0.c1) BETWEEN (rt0.c3) AND (v0.c0))) AND ('0.754302944503082'))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c3 FROM rt0, v0 WHERE (((((((((v0.c0)OR(v0.c0)))AND(x''))) BETWEEN (((rt0.c1) BETWEEN (rt0.c3) AND (v0.c0))) AND ('0.754302944503082'))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c3 FROM rt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) NOT NULL) COLLATE BINARY) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0) NOT NULL) COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0) NOT NULL) COLLATE BINARY) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c3;
SELECT ALL rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c3 HAVING ((('0.7866251017498989')) NOT BETWEEN ((AVG(rt0.c0))) AND ((rt0.c0))) UNION ALL SELECT ALL rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c3 HAVING (NOT (((('0.7866251017498989')) NOT BETWEEN ((AVG(rt0.c0))) AND ((rt0.c0))))) UNION ALL SELECT rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c3 HAVING ((((('0.7866251017498989')) NOT BETWEEN ((AVG(rt0.c0))) AND ((rt0.c0)))) ISNULL);
SELECT ALL rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c3;
SELECT ALL rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c3 HAVING ((('0.7866251017498989')) NOT BETWEEN ((AVG(rt0.c0))) AND ((rt0.c0))) UNION ALL SELECT ALL rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c3 HAVING (NOT (((('0.7866251017498989')) NOT BETWEEN ((AVG(rt0.c0))) AND ((rt0.c0))))) UNION ALL SELECT rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c3 HAVING ((((('0.7866251017498989')) NOT BETWEEN ((AVG(rt0.c0))) AND ((rt0.c0)))) ISNULL);
SELECT ALL rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c3;
SELECT rt0.c5 FROM v0 NATURAL JOIN rt0;
SELECT rt0.c5 FROM v0 NATURAL JOIN rt0 WHERE (JULIANDAY(CAST(rt0.c5 AS TEXT), ((rt0.c2)IS NOT(rt0.c2)), (rt0.c1 IN ()))) UNION ALL SELECT rt0.c5 FROM v0 NATURAL JOIN rt0 WHERE ((NOT (JULIANDAY(CAST(rt0.c5 AS TEXT), ((rt0.c2)IS NOT(rt0.c2)), (rt0.c1 IN ()))))) UNION ALL SELECT rt0.c5 FROM v0 NATURAL JOIN rt0 WHERE (((JULIANDAY(CAST(rt0.c5 AS TEXT), ((rt0.c2)IS NOT(rt0.c2)), (rt0.c1 IN ()))) ISNULL));
SELECT rt0.c5 FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) END) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) END))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) END) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((+ (((v0.c0)==(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((+ (((v0.c0)=(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((+ (((v0.c0)==(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c4, rt0.c0, rt0.c5, rt0.c2, rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c5, rt0.c2, rt0.c1, v0.c0, rt0.c3;
SELECT rt0.c4, rt0.c0, rt0.c5, rt0.c2, rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c5, rt0.c2, rt0.c1, v0.c0, rt0.c3 HAVING TOTAL(MIN(rt0.c2)) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c5, rt0.c2, rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c5, rt0.c2, rt0.c1, v0.c0, rt0.c3 HAVING (NOT (TOTAL(MIN(rt0.c2)))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c5, rt0.c2, rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c5, rt0.c2, rt0.c1, v0.c0, rt0.c3 HAVING ((TOTAL(MIN(rt0.c2))) ISNULL);
SELECT * FROM v0 NATURAL JOIN rt0;
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (CAST(((rt0.c5) NOT NULL) AS REAL)) UNION ALL SELECT * FROM v0 NATURAL JOIN rt0 WHERE ((NOT (CAST(((rt0.c5) NOT NULL) AS REAL)))) UNION ALL SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((CAST(((rt0.c5) NOT NULL) AS REAL)) ISNULL));
SELECT * FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((- (v0.c0)))-(v0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((- (v0.c0)))-(v0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((- (v0.c0)))-(v0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)>(v0.c0)) IN ())) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)>(v0.c0)) IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)>(v0.c0)) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c4, rt0.c1;
SELECT rt0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c4, rt0.c1 HAVING (NOT (CAST(rt0.c4 AS TEXT))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c4, rt0.c1 HAVING (NOT ((NOT (CAST(rt0.c4 AS TEXT))))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c4, rt0.c1 HAVING (((NOT (CAST(rt0.c4 AS TEXT)))) ISNULL);
SELECT ALL rt0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c4, rt0.c1;
SELECT rt0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c4, rt0.c1 HAVING (NOT (CAST(rt0.c4 AS TEXT))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c4, rt0.c1 HAVING (NOT ((NOT (CAST(rt0.c4 AS TEXT))))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c4, rt0.c1 HAVING (((NOT (CAST(rt0.c4 AS TEXT)))) ISNULL);
SELECT ALL rt0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c4, rt0.c1;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 COLLATE RTRIM THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE v0.c0 END) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CASE v0.c0  WHEN v0.c0 COLLATE RTRIM THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE v0.c0 END))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 COLLATE RTRIM THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE v0.c0 END) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0 NOT INDEXED;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c3) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT * FROM rt0 NOT INDEXED;
SELECT ALL rt0.c0, rt0.c5, v0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c5, v0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c5, v0.c0, rt0.c3 FROM v0, rt0 WHERE ((((((rt0.c1)IS NOT(rt0.c1))))<=(((rt0.c1 IN ()))))) GROUP BY rt0.c0, rt0.c5, v0.c0, rt0.c3 UNION SELECT rt0.c0, rt0.c5, v0.c0, rt0.c3 FROM v0, rt0 WHERE ((NOT ((((((rt0.c1)IS NOT(rt0.c1))))<=(((rt0.c1 IN ()))))))) GROUP BY rt0.c0, rt0.c5, v0.c0, rt0.c3 UNION SELECT rt0.c0, rt0.c5, v0.c0, rt0.c3 FROM v0, rt0 WHERE ((((((((rt0.c1)IS NOT(rt0.c1))))<=(((rt0.c1 IN ()))))) ISNULL)) GROUP BY rt0.c0, rt0.c5, v0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c5, v0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c5, v0.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c5, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c5, rt0.c1, rt0.c3, rt0.c0, rt0.c2;
SELECT rt0.c4, rt0.c5, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c5, rt0.c1, rt0.c3, rt0.c0, rt0.c2 HAVING ((((((((MIN(rt0.c1))AND(AVG(rt0.c4))))AND(rt0.c1)))AND(((((AVG(rt0.c4))AND(rt0.c1)))AND(rt0.c0)))))AND(TOTAL(',#'))) UNION ALL SELECT ALL rt0.c4, rt0.c5, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c5, rt0.c1, rt0.c3, rt0.c0, rt0.c2 HAVING (NOT (((((((((MIN(rt0.c1))AND(AVG(rt0.c4))))AND(rt0.c1)))AND(((((AVG(rt0.c4))AND(rt0.c1)))AND(rt0.c0)))))AND(TOTAL(',#'))))) UNION ALL SELECT rt0.c4, rt0.c5, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c5, rt0.c1, rt0.c3, rt0.c0, rt0.c2 HAVING ((((((((((MIN(rt0.c1))AND(AVG(rt0.c4))))AND(rt0.c1)))AND(((((AVG(rt0.c4))AND(rt0.c1)))AND(rt0.c0)))))AND(TOTAL(',#')))) ISNULL);
SELECT ALL rt0.c4, rt0.c5, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c5, rt0.c1, rt0.c3, rt0.c0, rt0.c2;
SELECT rt0.c4, rt0.c5, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c5, rt0.c1, rt0.c3, rt0.c0, rt0.c2 HAVING ((((((((MIN(rt0.c1))AND(AVG(rt0.c4))))AND(rt0.c1)))AND(((((AVG(rt0.c4))AND(rt0.c1)))AND(rt0.c0)))))AND(TOTAL(',#'))) UNION ALL SELECT ALL rt0.c4, rt0.c5, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c5, rt0.c1, rt0.c3, rt0.c0, rt0.c2 HAVING (NOT (((((((((MIN(rt0.c1))AND(AVG(rt0.c4))))AND(rt0.c1)))AND(((((AVG(rt0.c4))AND(rt0.c1)))AND(rt0.c0)))))AND(TOTAL(',#'))))) UNION ALL SELECT rt0.c4, rt0.c5, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c5, rt0.c1, rt0.c3, rt0.c0, rt0.c2 HAVING ((((((((((MIN(rt0.c1))AND(AVG(rt0.c4))))AND(rt0.c1)))AND(((((AVG(rt0.c4))AND(rt0.c1)))AND(rt0.c0)))))AND(TOTAL(',#')))) ISNULL);
SELECT ALL rt0.c4, rt0.c5, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c5, rt0.c1, rt0.c3, rt0.c0, rt0.c2;
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((CASE rt0.c1  WHEN '-1573907222' THEN rt0.c2 END)<(rt0.c3 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (((CASE rt0.c1  WHEN '-1573907222' THEN rt0.c2 END)<(rt0.c3 COLLATE RTRIM))))) UNION ALL SELECT * FROM v0, rt0 WHERE (((((CASE rt0.c1  WHEN '-1573907222' THEN rt0.c2 END)<(rt0.c3 COLLATE RTRIM))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c4) NOTNULL) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c4) NOTNULL) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c4) NOTNULL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 NOT INDEXED WHERE ((((((0x2cf9c459)) BETWEEN ((v0.c0)) AND ((x'5b9b')))) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) AND ((v0.c0 IN (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((((0X2cf9c459)) BETWEEN ((v0.c0)) AND ((x'5b9b')))) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) AND ((v0.c0 IN (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((((0x2cf9c459)) BETWEEN ((v0.c0)) AND ((x'5b9b')))) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) AND ((v0.c0 IN (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c4 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4;
SELECT ALL rt0.c2, rt0.c4 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT SUM(CASE WHEN (((rt0.c2)) NOT BETWEEN (('')) AND ((rt0.c2))) THEN ((v0.c0)*(rt0.c1)) ELSE ((rt0.c2) IS TRUE) END) FROM rt0, v0 ORDER BY LIKELIHOOD(DISTINCT NULL COLLATE RTRIM, 0.36367224510428664);
SELECT rt0.c4, rt0.c2, v0.c0 FROM v0, rt0;
SELECT rt0.c4, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c4 END IN (((v0.c0)AND(rt0.c1))))) UNION ALL SELECT ALL rt0.c4, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((NOT ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c4 END IN (((v0.c0)AND(rt0.c1))))))) UNION ALL SELECT rt0.c4, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c4 END IN (((v0.c0)AND(rt0.c1))))) ISNULL));
SELECT rt0.c4, rt0.c2, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4 FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4 FROM v0, rt0 WHERE (((TRIM(v0.c0, rt0.c3))<<(CAST(rt0.c5 AS BLOB)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4 FROM v0, rt0 WHERE ((NOT (((TRIM(v0.c0, rt0.c3))<<(CAST(rt0.c5 AS BLOB)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4 FROM v0, rt0 WHERE (((((TRIM(v0.c0, rt0.c3))<<(CAST(rt0.c5 AS BLOB)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4 FROM v0, rt0;
SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c5, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c5, rt0.c1, v0.c0, rt0.c2;
SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c5, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((CAST(rt0.c5 AS TEXT) IN ())) GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c5, rt0.c1, v0.c0, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c5, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT ((CAST(rt0.c5 AS TEXT) IN ())))) GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c5, rt0.c1, v0.c0, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c5, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((((CAST(rt0.c5 AS TEXT) IN ())) ISNULL)) GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c5, rt0.c1, v0.c0, rt0.c2;
SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c5, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c5, rt0.c1, v0.c0, rt0.c2;
SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c0 HAVING (MAX(COUNT(*)) IN ()) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c0 HAVING (NOT ((MAX(COUNT(*)) IN ()))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c0 HAVING (((MAX(COUNT(*)) IN ())) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c0 HAVING (MAX(COUNT(*)) IN ()) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c0 HAVING (NOT ((MAX(COUNT(*)) IN ()))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c0 HAVING (((MAX(COUNT(*)) IN ())) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (json_array(((rt0.c5) IS FALSE), (((rt0.c3, rt0.c1, NULL)) BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c3, rt0.c3, rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (json_array(((rt0.c5) IS FALSE), (((rt0.c3, rt0.c1, NULL)) BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c3, rt0.c3, rt0.c0))))))) UNION ALL SELECT * FROM rt0 WHERE (((json_array(((rt0.c5) IS FALSE), (((rt0.c3, rt0.c1, NULL)) BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c3, rt0.c3, rt0.c0))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON ((LIKELIHOOD(rt0.c5, 0.9423680166460874))<(((rt0.c3)<=(rt0.c4))));
SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON ((LIKELIHOOD(rt0.c5, 0.9423680166460874))<(((rt0.c3)<=(rt0.c4)))) WHERE (((x'')||((NOT (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON ((LIKELIHOOD(rt0.c5, 0.9423680166460874))<(((rt0.c3)<=(rt0.c4)))) WHERE ((NOT (((x'')||((NOT (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON ((LIKELIHOOD(rt0.c5, 0.9423680166460874))<(((rt0.c3)<=(rt0.c4)))) WHERE (((((x'')||((NOT (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON ((LIKELIHOOD(rt0.c5, 0.9423680166460874))<(((rt0.c3)<=(rt0.c4))));
SELECT ALL rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, v0.c0;
SELECT ALL rt0.c4, v0.c0 FROM rt0, v0 WHERE (rt0.c1) GROUP BY rt0.c4, v0.c0 UNION SELECT ALL rt0.c4, v0.c0 FROM rt0, v0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c4, v0.c0 UNION SELECT ALL rt0.c4, v0.c0 FROM rt0, v0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c4, v0.c0;
SELECT ALL rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, v0.c0;
SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING TOTAL(AVG(COUNT(*))) UNION ALL SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING (NOT (TOTAL(AVG(COUNT(*))))) UNION ALL SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING ((TOTAL(AVG(COUNT(*)))) ISNULL);
SELECT rt0.c0, v0.c0, rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON CAST(((rt0.c5)&(rt0.c1)) AS NUMERIC);
SELECT ALL rt0.c0, v0.c0, rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON CAST(((rt0.c5)&(rt0.c1)) AS NUMERIC) WHERE ((((0.09721983602355644))==((CASE WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c4 THEN 0.20944826905828273 WHEN rt0.c4 THEN 0.8266448247469792 ELSE rt0.c2 END)))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON CAST(((rt0.c5)&(rt0.c1)) AS NUMERIC) WHERE ((NOT ((((0.09721983602355644))=((CASE WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c4 THEN 0.20944826905828273 WHEN rt0.c4 THEN 0.8266448247469792 ELSE rt0.c2 END)))))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON CAST(((rt0.c5)&(rt0.c1)) AS NUMERIC) WHERE ((((((0.09721983602355644))==((CASE WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c4 THEN 0.20944826905828273 WHEN rt0.c4 THEN 0.8266448247469792 ELSE rt0.c2 END)))) ISNULL));
SELECT rt0.c0, v0.c0, rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON CAST(((rt0.c5)&(rt0.c1)) AS NUMERIC);
SELECT DISTINCT v0.c0, rt0.c1, rt0.c4, rt0.c0, rt0.c5 FROM rt0, v0;
SELECT DISTINCT v0.c0, rt0.c1, rt0.c4, rt0.c0, rt0.c5 FROM rt0, v0 WHERE ((((rt0.c5, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2 COLLATE BINARY, -2119896987, (rt0.c2 IN ()))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END, CAST('665963989' AS INTEGER), x'7bd3')))) UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c4, rt0.c0, rt0.c5 FROM rt0, v0 WHERE ((NOT ((((rt0.c5, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2 COLLATE BINARY, -2119896987, (rt0.c2 IN ()))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END, CAST('665963989' AS INTEGER), x'7bd3')))))) UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c4, rt0.c0, rt0.c5 FROM rt0, v0 WHERE ((((((rt0.c5, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2 COLLATE BINARY, -2119896987, (rt0.c2 IN ()))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END, CAST('665963989' AS INTEGER), x'7bd3')))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c1, rt0.c4, rt0.c0, rt0.c5 FROM rt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (LOWER(v0.c0 COLLATE BINARY)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (LOWER(v0.c0 COLLATE BINARY)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((LOWER(v0.c0 COLLATE BINARY)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2 HAVING ((SUM(TOTAL(rt0.c4)))!=(((SUM(0.10555826450120398)) NOT BETWEEN (rt0.c2) AND (AVG(rt0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2 HAVING (NOT (((SUM(TOTAL(rt0.c4)))!=(((SUM(0.10555826450120398)) NOT BETWEEN (rt0.c2) AND (AVG(rt0.c0))))))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2 HAVING ((((SUM(TOTAL(rt0.c4)))<>(((SUM(0.10555826450120398)) NOT BETWEEN (rt0.c2) AND (AVG(rt0.c0)))))) ISNULL);
SELECT ALL MAX(rt0.c4) FROM rt0 ORDER BY NULL DESC  NULLS FIRST, ABS((- (rt0.c0)));
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (CASE WHEN ((rt0.c5)IS NOT(rt0.c1)) THEN ((rt0.c5)>>(rt0.c1)) WHEN ((((rt0.c2)OR(rt0.c2)))AND(-424895196)) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c4)) WHEN x'' THEN (((rt0.c1, rt0.c1, rt0.c3))>=((rt0.c3, rt0.c2, v0.c0))) ELSE IFNULL(DISTINCT rt0.c2, rt0.c2) END) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (CASE WHEN ((rt0.c5)IS NOT(rt0.c1)) THEN ((rt0.c5)>>(rt0.c1)) WHEN ((((rt0.c2)OR(rt0.c2)))AND(-424895196)) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c4)) WHEN x'' THEN (((rt0.c1, rt0.c1, rt0.c3))>=((rt0.c3, rt0.c2, v0.c0))) ELSE IFNULL(DISTINCT rt0.c2, rt0.c2) END))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((CASE WHEN ((rt0.c5)IS NOT(rt0.c1)) THEN ((rt0.c5)>>(rt0.c1)) WHEN ((((rt0.c2)OR(rt0.c2)))AND(-424895196)) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c4)) WHEN x'' THEN (((rt0.c1, rt0.c1, rt0.c3))>=((rt0.c3, rt0.c2, v0.c0))) ELSE IFNULL(DISTINCT rt0.c2, rt0.c2) END) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((ABS(rt0.c3) IN ())) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((ABS(rt0.c3) IN ())))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((ABS(rt0.c3) IN ())) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0 NATURAL JOIN rt0 WHERE (rt0.c2) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM v0 NATURAL JOIN rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM v0 NATURAL JOIN rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(CASE WHEN COUNT(COUNT(*)) THEN GROUP_CONCAT(SUM(SUM(v0.c0))) END) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(CASE WHEN COUNT(COUNT(*)) THEN GROUP_CONCAT(SUM(SUM(v0.c0))) END))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(CASE WHEN COUNT(COUNT(*)) THEN GROUP_CONCAT(SUM(SUM(v0.c0))) END)) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(((((v0.c0)OR('-712313402')))OR(v0.c0)) AS BLOB)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(((((v0.c0)OR('-712313402')))OR(v0.c0)) AS BLOB)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CAST(((((v0.c0)OR('-712313402')))OR(v0.c0)) AS BLOB)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((((((((rt0.c2)AND(v0.c0)))OR(v0.c0)))OR(rt0.c2)))OR(rt0.c3))) NOT NULL)) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((((((((rt0.c2)AND(v0.c0)))OR(v0.c0)))OR(rt0.c2)))OR(rt0.c3))) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((((((((rt0.c2)AND(v0.c0)))OR(v0.c0)))OR(rt0.c2)))OR(rt0.c3))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4;
SELECT ALL rt0.c1, rt0.c4 FROM rt0, v0 WHERE ((((+ (rt0.c3))) IS TRUE)) GROUP BY rt0.c1, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c4 FROM rt0, v0 WHERE ((NOT ((((+ (rt0.c3))) IS TRUE)))) GROUP BY rt0.c1, rt0.c4 UNION SELECT rt0.c1, rt0.c4 FROM rt0, v0 WHERE ((((((+ (rt0.c3))) IS TRUE)) ISNULL)) GROUP BY rt0.c1, rt0.c4;
SELECT ALL rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((COUNT(*))) BETWEEN ((v0.c0)) AND (((~ (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((COUNT(*))) BETWEEN ((v0.c0)) AND (((~ (v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((COUNT(*))) BETWEEN ((v0.c0)) AND (((~ (v0.c0)))))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((COUNT(*))) BETWEEN ((v0.c0)) AND (((~ (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((COUNT(*))) BETWEEN ((v0.c0)) AND (((~ (v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((COUNT(*))) BETWEEN ((v0.c0)) AND (((~ (v0.c0)))))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE ((((NULL IN (v0.c0, rt0.c4))) NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND ((+ (rt0.c3))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT ((((NULL IN (v0.c0, rt0.c4))) NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND ((+ (rt0.c3))))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((((((NULL IN (v0.c0, rt0.c4))) NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND ((+ (rt0.c3))))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (rt0.c4) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (rt0.c4))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((rt0.c4) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, rt0 WHERE (((((rt0.c4) IS FALSE)) NOT NULL)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM v0, rt0 WHERE ((NOT (((((rt0.c4) IS FALSE)) NOT NULL)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM v0, rt0 WHERE (((((((rt0.c4) IS FALSE)) NOT NULL)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE WHEN v0.c0 THEN v0.c0 END)GLOB(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((CASE WHEN v0.c0 THEN v0.c0 END)GLOB(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((CASE WHEN v0.c0 THEN v0.c0 END)GLOB(v0.c0))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE WHEN v0.c0 THEN v0.c0 END)GLOB(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((CASE WHEN v0.c0 THEN v0.c0 END)GLOB(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((CASE WHEN v0.c0 THEN v0.c0 END)GLOB(v0.c0))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))))AND(((v0.c0)>=(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))))AND(((v0.c0)>=(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))))AND(((v0.c0)>=(v0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE (json_array_length(rt0.c0 COLLATE NOCASE)) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (json_array_length(rt0.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE (((json_array_length(rt0.c0 COLLATE NOCASE)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM rt0;
SELECT rt0.c5, rt0.c0 FROM v0, rt0 GROUP BY rt0.c5, rt0.c0;
SELECT ALL rt0.c5, rt0.c0 FROM v0, rt0 WHERE (CAST((- (rt0.c2)) AS NUMERIC)) GROUP BY rt0.c5, rt0.c0 UNION SELECT rt0.c5, rt0.c0 FROM v0, rt0 WHERE ((NOT (CAST((- (rt0.c2)) AS NUMERIC)))) GROUP BY rt0.c5, rt0.c0 UNION SELECT rt0.c5, rt0.c0 FROM v0, rt0 WHERE (((CAST((- (rt0.c2)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c5, rt0.c0;
SELECT rt0.c5, rt0.c0 FROM v0, rt0 GROUP BY rt0.c5, rt0.c0;
SELECT rt0.c1, rt0.c5, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c5, rt0.c3;
SELECT rt0.c1, rt0.c5, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c5, rt0.c3 HAVING ('0.4617914200267391' IN ()) UNION ALL SELECT ALL rt0.c1, rt0.c5, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c5, rt0.c3 HAVING (NOT (('0.4617914200267391' IN ()))) UNION ALL SELECT rt0.c1, rt0.c5, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c5, rt0.c3 HAVING ((('0.4617914200267391' IN ())) ISNULL);
SELECT rt0.c1, rt0.c5, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c5, rt0.c3;
SELECT rt0.c1, rt0.c5, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c5, rt0.c3 HAVING ('0.4617914200267391' IN ()) UNION ALL SELECT ALL rt0.c1, rt0.c5, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c5, rt0.c3 HAVING (NOT (('0.4617914200267391' IN ()))) UNION ALL SELECT rt0.c1, rt0.c5, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c5, rt0.c3 HAVING ((('0.4617914200267391' IN ())) ISNULL);
SELECT rt0.c1, rt0.c5, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c5, rt0.c3;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ((- (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ((- (v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ((- (v0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c5, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c5, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE (QUOTE(TRIM(DISTINCT rt0.c3))) UNION SELECT DISTINCT rt0.c5, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT (QUOTE(TRIM(DISTINCT rt0.c3))))) UNION SELECT DISTINCT rt0.c5, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE (((QUOTE(TRIM(DISTINCT rt0.c3))) ISNULL));
SELECT DISTINCT rt0.c5, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.22994107486671522 ELSE v0.c0 END) NOT NULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.22994107486671522 ELSE v0.c0 END) NOT NULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.22994107486671522 ELSE v0.c0 END) NOT NULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c5 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c5;
SELECT rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c5 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c5 HAVING CAST(AVG(COUNT(*)) AS TEXT) UNION ALL SELECT rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c5 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c5 HAVING (NOT (CAST(AVG(COUNT(*)) AS TEXT))) UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c5 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c5 HAVING ((CAST(AVG(COUNT(*)) AS TEXT)) ISNULL);
SELECT SUM(((v0.c0)/(CAST(v0.c0 AS REAL)))) FROM v0;
SELECT ALL rt0.c4, rt0.c3 FROM rt0;
SELECT rt0.c4, rt0.c3 FROM rt0 WHERE ('') UNION ALL SELECT ALL rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT (''))) UNION ALL SELECT rt0.c4, rt0.c3 FROM rt0 WHERE ((('') ISNULL));
SELECT ALL rt0.c4, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c5 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c5 FROM rt0 WHERE (((CAST(0.5491683985980549 AS NUMERIC)) NOT BETWEEN (((rt0.c1)LIKE(rt0.c4))) AND (rt0.c1))) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c5 FROM rt0 WHERE ((NOT (((CAST(0.5491683985980549 AS NUMERIC)) NOT BETWEEN (((rt0.c1)LIKE(rt0.c4))) AND (rt0.c1))))) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c5 FROM rt0 WHERE (((((CAST(0.5491683985980549 AS NUMERIC)) NOT BETWEEN (((rt0.c1)LIKE(rt0.c4))) AND (rt0.c1))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c5 FROM rt0;
SELECT ALL rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4;
SELECT ALL rt0.c3, rt0.c4 FROM rt0 WHERE (LOWER(((rt0.c4)IS NOT(rt0.c1)))) GROUP BY rt0.c3, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (LOWER(((rt0.c4)IS NOT(rt0.c1)))))) GROUP BY rt0.c3, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c4 FROM rt0 WHERE (((LOWER(((rt0.c4)IS NOT(rt0.c1)))) ISNULL)) GROUP BY rt0.c3, rt0.c4;
SELECT ALL rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c3, rt0.c0, rt0.c5 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c5;
SELECT ALL rt0.c3, rt0.c0, rt0.c5 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c5 HAVING (SUM(GROUP_CONCAT(rt0.c1)) IN ()) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c5 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c5 HAVING (NOT ((SUM(GROUP_CONCAT(rt0.c1)) IN ()))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c5 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c5 HAVING (((SUM(GROUP_CONCAT(rt0.c1)) IN ())) ISNULL);
SELECT rt0.c3, rt0.c0, rt0.c5 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c5;
SELECT ALL rt0.c3, rt0.c0, rt0.c5 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c5 HAVING (SUM(GROUP_CONCAT(rt0.c1)) IN ()) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c5 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c5 HAVING (NOT ((SUM(GROUP_CONCAT(rt0.c1)) IN ()))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c5 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c5 HAVING (((SUM(GROUP_CONCAT(rt0.c1)) IN ())) ISNULL);
SELECT rt0.c3, rt0.c0, rt0.c5 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c5;
SELECT rt0.c2, rt0.c3, rt0.c4, v0.c0, rt0.c5, rt0.c0, rt0.c1 FROM v0, rt0;
SELECT rt0.c2, rt0.c3, rt0.c4, v0.c0, rt0.c5, rt0.c0, rt0.c1 FROM v0, rt0 WHERE (((rt0.c2 COLLATE RTRIM)GLOB(((rt0.c1) IS TRUE)))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c4, v0.c0, rt0.c5, rt0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (((rt0.c2 COLLATE RTRIM)GLOB(((rt0.c1) IS TRUE)))))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c4, v0.c0, rt0.c5, rt0.c0, rt0.c1 FROM v0, rt0 WHERE (((((rt0.c2 COLLATE RTRIM)GLOB(((rt0.c1) IS TRUE)))) ISNULL));
SELECT rt0.c2, rt0.c3, rt0.c4, v0.c0, rt0.c5, rt0.c0, rt0.c1 FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (TRIM(CAST(rt0.c1 AS NUMERIC), (rt0.c1 IN ()))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (TRIM(CAST(rt0.c1 AS NUMERIC), (rt0.c1 IN ()))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((TRIM(CAST(rt0.c1 AS NUMERIC), (rt0.c1 IN ()))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c3, rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c5 FROM v0 INNER JOIN rt0 ON (+ (((rt0.c5) IS FALSE))) GROUP BY rt0.c3, rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c5;
SELECT rt0.c3, rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c5 FROM v0 INNER JOIN rt0 ON (+ (((rt0.c5) IS FALSE))) WHERE (UNLIKELY(CASE WHEN rt0.c0 THEN rt0.c0 END)) GROUP BY rt0.c3, rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c5 UNION SELECT rt0.c3, rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c5 FROM v0 INNER JOIN rt0 ON (+ (((rt0.c5) IS FALSE))) WHERE ((NOT (UNLIKELY(CASE WHEN rt0.c0 THEN rt0.c0 END)))) GROUP BY rt0.c3, rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c5 UNION SELECT ALL rt0.c3, rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c5 FROM v0 INNER JOIN rt0 ON (+ (((rt0.c5) IS FALSE))) WHERE (((UNLIKELY(CASE WHEN rt0.c0 THEN rt0.c0 END)) ISNULL)) GROUP BY rt0.c3, rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c5;
SELECT ALL rt0.c3, rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c5 FROM v0 INNER JOIN rt0 ON (+ (((rt0.c5) IS FALSE))) GROUP BY rt0.c3, rt0.c4, v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c5;
SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c0, rt0.c2;
SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c0, rt0.c2 HAVING TOTAL(AVG(TOTAL(x'5945'))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c0, rt0.c2 HAVING (NOT (TOTAL(AVG(TOTAL(x'5945'))))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c0, rt0.c2 HAVING ((TOTAL(AVG(TOTAL(x'5945')))) ISNULL);
SELECT rt0.c0, rt0.c4, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((MAX(rt0.c2, 0.6064420185298103))AND(CAST(rt0.c0 AS TEXT))))AND((((NULL))==((rt0.c3)))));
SELECT rt0.c0, rt0.c4, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((MAX(rt0.c2, 0.6064420185298103))AND(CAST(rt0.c0 AS TEXT))))AND((((NULL))=((rt0.c3))))) WHERE ((('c笴)')<((((NULL)) BETWEEN ((rt0.c4)) AND ((v0.c0)))))) UNION ALL SELECT rt0.c0, rt0.c4, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((MAX(rt0.c2, 0.6064420185298103))AND(CAST(rt0.c0 AS TEXT))))AND((((NULL))==((rt0.c3))))) WHERE ((NOT ((('c笴)')<((((NULL)) BETWEEN ((rt0.c4)) AND ((v0.c0)))))))) UNION ALL SELECT ALL rt0.c0, rt0.c4, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((MAX(rt0.c2, 0.6064420185298103))AND(CAST(rt0.c0 AS TEXT))))AND((((NULL))==((rt0.c3))))) WHERE ((((('c笴)')<((((NULL)) BETWEEN ((rt0.c4)) AND ((v0.c0)))))) ISNULL));
SELECT rt0.c0, rt0.c4, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((((MAX(rt0.c2, 0.6064420185298103))AND(CAST(rt0.c0 AS TEXT))))AND((((NULL))==((rt0.c3)))));
SELECT DISTINCT rt0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c0 FROM v0, rt0 WHERE (CASE WHEN ((v0.c0)|(rt0.c2)) THEN MAX(v0.c0, rt0.c0, rt0.c2, v0.c0) WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c1) IS FALSE) WHEN (+ (rt0.c3)) THEN ((rt0.c2)LIKE(rt0.c1)) END) UNION SELECT DISTINCT rt0.c0 FROM v0, rt0 WHERE ((NOT (CASE WHEN ((v0.c0)|(rt0.c2)) THEN MAX(v0.c0, rt0.c0, rt0.c2, v0.c0) WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c1) IS FALSE) WHEN (+ (rt0.c3)) THEN ((rt0.c2)LIKE(rt0.c1)) END))) UNION SELECT DISTINCT rt0.c0 FROM v0, rt0 WHERE (((CASE WHEN ((v0.c0)|(rt0.c2)) THEN MAX(v0.c0, rt0.c0, rt0.c2, v0.c0) WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c1) IS FALSE) WHEN (+ (rt0.c3)) THEN ((rt0.c2)LIKE(rt0.c1)) END) ISNULL));
SELECT DISTINCT rt0.c0 FROM v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0)|(v0.c0)) COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0)|(v0.c0)) COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0)|(v0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING CAST(GROUP_CONCAT(COUNT(*)) AS TEXT) UNION ALL SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING (NOT (CAST(GROUP_CONCAT(COUNT(*)) AS TEXT))) UNION ALL SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING ((CAST(GROUP_CONCAT(COUNT(*)) AS TEXT)) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c5, rt0.c2 FROM v0, rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c5, rt0.c2 FROM v0, rt0 WHERE (x'' COLLATE BINARY) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c5, rt0.c2 FROM v0, rt0 WHERE ((NOT (x'' COLLATE BINARY))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c5, rt0.c2 FROM v0, rt0 WHERE (((x'' COLLATE BINARY) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c5, rt0.c2 FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS TEXT)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST(v0.c0 COLLATE RTRIM AS TEXT)))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST(v0.c0 COLLATE RTRIM AS TEXT)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 NOT INDEXED WHERE (CAST(((v0.c0)>=(v0.c0)) AS INTEGER)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0)>=(v0.c0)) AS INTEGER)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST(((v0.c0)>=(v0.c0)) AS INTEGER)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c5, v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c5, v0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, rt0.c5, v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c5, v0.c0, rt0.c0, rt0.c1 HAVING (((COUNT(rt0.c3)))<=((AVG(GROUP_CONCAT(rt0.c4))))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c5, v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c5, v0.c0, rt0.c0, rt0.c1 HAVING (NOT ((((COUNT(rt0.c3)))<=((AVG(GROUP_CONCAT(rt0.c4))))))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c5, v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c5, v0.c0, rt0.c0, rt0.c1 HAVING (((((COUNT(rt0.c3)))<=((AVG(GROUP_CONCAT(rt0.c4)))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0 COLLATE BINARY) NOT BETWEEN ((v0.c0 IN ())) AND (((NULL)IS('960785397'))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE BINARY) NOT BETWEEN ((v0.c0 IN ())) AND (((NULL)IS('960785397'))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE BINARY) NOT BETWEEN ((v0.c0 IN ())) AND (((NULL)IS('960785397'))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0))) IS FALSE)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0)AND(v0.c0)))AND(v0.c0))) IS FALSE)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((v0.c0)AND(v0.c0)))AND(v0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0 FROM v0, rt0 WHERE (0.7909250579641465) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0 UNION SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0 FROM v0, rt0 WHERE ((NOT (0.7909250579641465))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0 UNION SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0 FROM v0, rt0 WHERE (((0.7909250579641465) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0;
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0;
SELECT ALL rt0.c5, rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c5, rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2;
SELECT rt0.c5, rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c5, rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2 HAVING MIN(GROUP_CONCAT(rt0.c1)) UNION ALL SELECT rt0.c5, rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c5, rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2 HAVING (NOT (MIN(GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT rt0.c5, rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c5, rt0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2 HAVING ((MIN(GROUP_CONCAT(rt0.c1))) ISNULL);
SELECT SUM(('' IN ())) FROM rt0, v0;
SELECT ALL rt0.c0 FROM rt0, v0;
SELECT rt0.c0 FROM rt0, v0 WHERE (CASE WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c5)) ELSE ((rt0.c3)|(rt0.c2)) END) UNION ALL SELECT rt0.c0 FROM rt0, v0 WHERE ((NOT (CASE WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c5)) ELSE ((rt0.c3)|(rt0.c2)) END))) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0 WHERE (((CASE WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c5)) ELSE ((rt0.c3)|(rt0.c2)) END) ISNULL));
SELECT ALL rt0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((+ ((+ (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((+ ((+ (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((+ ((+ (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c4, rt0.c5, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c5, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c4, rt0.c5, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((CAST(rt0.c0 AS BLOB) IN ())) GROUP BY rt0.c4, rt0.c5, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c5, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((CAST(rt0.c0 AS BLOB) IN ())))) GROUP BY rt0.c4, rt0.c5, rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c4, rt0.c5, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((CAST(rt0.c0 AS BLOB) IN ())) ISNULL)) GROUP BY rt0.c4, rt0.c5, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c4, rt0.c5, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c5, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c5 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c5;
SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c5 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c5 HAVING ((((MIN(rt0.c2))AND(MAX(MAX(rt0.c0)))))OR(AVG(AVG(rt0.c5)))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c5 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c5 HAVING (NOT (((((MIN(rt0.c2))AND(MAX(MAX(rt0.c0)))))OR(AVG(AVG(rt0.c5)))))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c5 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c5 HAVING ((((((MIN(rt0.c2))AND(MAX(MAX(rt0.c0)))))OR(AVG(AVG(rt0.c5))))) ISNULL);
SELECT * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (rt0.c3) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (rt0.c3))) UNION ALL SELECT * FROM rt0, v0 WHERE (((rt0.c3) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE ((((((((rt0.c0))!=((rt0.c2))))AND(CAST(rt0.c2 AS REAL))))OR((~ (rt0.c1))))) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT ((((((((rt0.c0))!=((rt0.c2))))AND(CAST(rt0.c2 AS REAL))))OR((~ (rt0.c1))))))) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE ((((((((((rt0.c0))!=((rt0.c2))))AND(CAST(rt0.c2 AS REAL))))OR((~ (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0;
SELECT rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3;
SELECT ALL rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0 WHERE (((((rt0.c1)>=(rt0.c4)))||(((rt0.c1)+(rt0.c3))))) GROUP BY rt0.c2, rt0.c4, rt0.c3 UNION SELECT rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0 WHERE ((NOT (((((rt0.c1)>=(rt0.c4)))||(((rt0.c1)+(rt0.c3))))))) GROUP BY rt0.c2, rt0.c4, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0 WHERE (((((((rt0.c1)>=(rt0.c4)))||(((rt0.c1)+(rt0.c3))))) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c3;
SELECT rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3;
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0)==(v0.c0)))) AND ((CAST(v0.c0 AS TEXT))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((((v0.c0)=(v0.c0)))) AND ((CAST(v0.c0 AS TEXT))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((((v0.c0)) BETWEEN ((((v0.c0)=(v0.c0)))) AND ((CAST(v0.c0 AS TEXT))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON CAST((- (rt0.c2)) AS REAL);
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON CAST((- (rt0.c2)) AS REAL) WHERE (NULLIF(((rt0.c5)OR(rt0.c2)), (((rt0.c5)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON CAST((- (rt0.c2)) AS REAL) WHERE ((NOT (NULLIF(((rt0.c5)OR(rt0.c2)), (((rt0.c5)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON CAST((- (rt0.c2)) AS REAL) WHERE (((NULLIF(((rt0.c5)OR(rt0.c2)), (((rt0.c5)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON CAST((- (rt0.c2)) AS REAL);
SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3;
SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0 WHERE (NULL) GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 UNION SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0 WHERE ((NOT (NULL))) GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 UNION SELECT v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0 WHERE (((NULL) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3;
SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c3;
SELECT ALL rt0.c5, rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c5)IS NOT(rt0.c0))) ISNULL) GROUP BY rt0.c5, rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c4;
SELECT rt0.c5, rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c5)IS NOT(rt0.c0))) ISNULL) GROUP BY rt0.c5, rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c4 HAVING AVG(TOTAL(TOTAL(rt0.c5))) UNION ALL SELECT rt0.c5, rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c5)IS NOT(rt0.c0))) ISNULL) GROUP BY rt0.c5, rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c4 HAVING (NOT (AVG(TOTAL(TOTAL(rt0.c5))))) UNION ALL SELECT rt0.c5, rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c5)IS NOT(rt0.c0))) ISNULL) GROUP BY rt0.c5, rt0.c0, rt0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c4 HAVING ((AVG(TOTAL(TOTAL(rt0.c5)))) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (((((LOWER(rt0.c0))OR((((rt0.c3, x'', v0.c0)) NOT BETWEEN (('-19600037', rt0.c5, NULL)) AND ((rt0.c0, rt0.c0, rt0.c5))))))OR(((rt0.c4) NOT NULL)))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (((((LOWER(rt0.c0))OR((((rt0.c3, x'', v0.c0)) NOT BETWEEN (('-19600037', rt0.c5, NULL)) AND ((rt0.c0, rt0.c0, rt0.c5))))))OR(((rt0.c4) NOT NULL)))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((((((LOWER(rt0.c0))OR((((rt0.c3, x'', v0.c0)) NOT BETWEEN (('-19600037', rt0.c5, NULL)) AND ((rt0.c0, rt0.c0, rt0.c5))))))OR(((rt0.c4) NOT NULL)))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c3)OR(rt0.c1)))AND(rt0.c4)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c3)OR(rt0.c1)))AND(rt0.c4)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c3)OR(rt0.c1)))AND(rt0.c4)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) ISNULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) ISNULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) ISNULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c5, rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c5, rt0.c0, rt0.c1, rt0.c4, rt0.c3;
SELECT ALL rt0.c5, rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c5, rt0.c0, rt0.c1, rt0.c4, rt0.c3 HAVING AVG(CAST(GROUP_CONCAT(rt0.c3) AS TEXT)) UNION ALL SELECT rt0.c5, rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c5, rt0.c0, rt0.c1, rt0.c4, rt0.c3 HAVING (NOT (AVG(CAST(GROUP_CONCAT(rt0.c3) AS TEXT)))) UNION ALL SELECT rt0.c5, rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c5, rt0.c0, rt0.c1, rt0.c4, rt0.c3 HAVING ((AVG(CAST(GROUP_CONCAT(rt0.c3) AS TEXT))) ISNULL);
SELECT * FROM rt0 NATURAL JOIN v0;
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (((rt0.c2) ISNULL)) UNION ALL SELECT * FROM rt0 NATURAL JOIN v0 WHERE ((NOT (((rt0.c2) ISNULL)))) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (((((rt0.c2) ISNULL)) ISNULL));
SELECT * FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c5))) NOT BETWEEN (0.663553218983376) AND (CAST(rt0.c1 AS TEXT)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c5))) NOT BETWEEN (0.663553218983376) AND (CAST(rt0.c1 AS TEXT)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c5))) NOT BETWEEN (0.663553218983376) AND (CAST(rt0.c1 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c5, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c5, v0.c0, rt0.c2;
SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c5, v0.c0, rt0.c2 FROM rt0, v0 WHERE (rt0.c2 COLLATE RTRIM) GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c5, v0.c0, rt0.c2 UNION SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c5, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT (rt0.c2 COLLATE RTRIM))) GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c5, v0.c0, rt0.c2 UNION SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c5, v0.c0, rt0.c2 FROM rt0, v0 WHERE (((rt0.c2 COLLATE RTRIM) ISNULL)) GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c5, v0.c0, rt0.c2;
SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c5, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c5, v0.c0, rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE WHEN ((((COUNT(*))AND(GROUP_CONCAT(MAX(MAX(v0.c0))))))OR(MAX(v0.c0))) THEN MIN(AVG(TOTAL(COUNT(MAX(AVG(TOTAL(v0.c0))))))) END UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE WHEN ((((COUNT(*))AND(GROUP_CONCAT(MAX(MAX(v0.c0))))))OR(MAX(v0.c0))) THEN MIN(AVG(TOTAL(COUNT(MAX(AVG(TOTAL(v0.c0))))))) END)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE WHEN ((((COUNT(*))AND(GROUP_CONCAT(MAX(MAX(v0.c0))))))OR(MAX(v0.c0))) THEN MIN(AVG(TOTAL(COUNT(MAX(AVG(TOTAL(v0.c0))))))) END) ISNULL);
SELECT rt0.c2, rt0.c4 FROM rt0 NATURAL JOIN v0;
SELECT ALL rt0.c2, rt0.c4 FROM rt0 NATURAL JOIN v0 WHERE (rt0.c3) UNION ALL SELECT rt0.c2, rt0.c4 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (rt0.c3))) UNION ALL SELECT rt0.c2, rt0.c4 FROM rt0 NATURAL JOIN v0 WHERE (((rt0.c3) ISNULL));
SELECT rt0.c2, rt0.c4 FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT rt0.c4, rt0.c5, rt0.c3, rt0.c2, rt0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c4, rt0.c5, rt0.c3, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((~ (',b-ᐎw!ॾ'))) UNION SELECT DISTINCT rt0.c4, rt0.c5, rt0.c3, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((NOT ((~ (',b-ᐎw!ॾ'))))) UNION SELECT DISTINCT rt0.c4, rt0.c5, rt0.c3, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((((~ (',b-ᐎw!ॾ'))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c5, rt0.c3, rt0.c2, rt0.c1 FROM rt0, v0;
SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c5, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c5, rt0.c4, rt0.c1;
SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c5, rt0.c4, rt0.c1 FROM rt0 WHERE (((((((((((rt0.c5)OR(0.6502975198487241)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c4))) BETWEEN (((rt0.c0)<<(rt0.c3))) AND (((((rt0.c0)OR(rt0.c0)))OR(rt0.c5))))) GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c5, rt0.c4, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c5, rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT (((((((((((rt0.c5)OR(0.6502975198487241)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c4))) BETWEEN (((rt0.c0)<<(rt0.c3))) AND (((((rt0.c0)OR(rt0.c0)))OR(rt0.c5))))))) GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c5, rt0.c4, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c5, rt0.c4, rt0.c1 FROM rt0 WHERE (((((((((((((rt0.c5)OR(0.6502975198487241)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c4))) BETWEEN (((rt0.c0)<<(rt0.c3))) AND (((((rt0.c0)OR(rt0.c0)))OR(rt0.c5))))) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c5, rt0.c4, rt0.c1;
SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c5, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c5, rt0.c4, rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(TOTAL(TOTAL(COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(TOTAL(TOTAL(COUNT(*)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(TOTAL(TOTAL(COUNT(*))))) ISNULL);
SELECT rt0.c4, rt0.c3, rt0.c1, rt0.c5, rt0.c2 FROM rt0;
SELECT rt0.c4, rt0.c3, rt0.c1, rt0.c5, rt0.c2 FROM rt0 WHERE ((((('1124378805')AND((('-122535080') BETWEEN (rt0.c2) AND (rt0.c3)))))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 END))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c1, rt0.c5, rt0.c2 FROM rt0 WHERE ((NOT ((((('1124378805')AND((('-122535080') BETWEEN (rt0.c2) AND (rt0.c3)))))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 END))))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt0.c5, rt0.c2 FROM rt0 WHERE ((((((('1124378805')AND((('-122535080') BETWEEN (rt0.c2) AND (rt0.c3)))))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 END))) ISNULL));
SELECT rt0.c4, rt0.c3, rt0.c1, rt0.c5, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c3) BETWEEN (rt0.c4) AND (v0.c0)) COLLATE NOCASE;
SELECT DISTINCT rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c3) BETWEEN (rt0.c4) AND (v0.c0)) COLLATE NOCASE WHERE (0.8787144480793394) UNION SELECT DISTINCT rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c3) BETWEEN (rt0.c4) AND (v0.c0)) COLLATE NOCASE WHERE ((NOT (0.8787144480793394))) UNION SELECT DISTINCT rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c3) BETWEEN (rt0.c4) AND (v0.c0)) COLLATE NOCASE WHERE (((0.8787144480793394) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c3) BETWEEN (rt0.c4) AND (v0.c0)) COLLATE NOCASE;
SELECT rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 WHERE ((((((rt0.c0, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c5, rt0.c5)) AND ((v0.c0, rt0.c2, rt0.c2))))>=((((v0.c0, rt0.c5, x''))!=((rt0.c5, NULL, rt0.c0)))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT ((((((rt0.c0, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c5, rt0.c5)) AND ((v0.c0, rt0.c2, rt0.c2))))>=((((v0.c0, rt0.c5, x''))<>((rt0.c5, NULL, rt0.c0)))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 WHERE ((((((((rt0.c0, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c5, rt0.c5)) AND ((v0.c0, rt0.c2, rt0.c2))))>=((((v0.c0, rt0.c5, x''))<>((rt0.c5, NULL, rt0.c0)))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, v0.c0;
SELECT ALL rt0.c1, rt0.c0, v0.c0 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c1, rt0.c0, v0.c0 HAVING (((COUNT(*)) IS FALSE) IN ()) UNION ALL SELECT ALL rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, v0.c0 HAVING (NOT ((((COUNT(*)) IS FALSE) IN ()))) UNION ALL SELECT rt0.c1, rt0.c0, v0.c0 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c1, rt0.c0, v0.c0 HAVING (((((COUNT(*)) IS FALSE) IN ())) ISNULL);
SELECT ALL rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, v0.c0;
SELECT ALL rt0.c1, rt0.c0, v0.c0 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c1, rt0.c0, v0.c0 HAVING (((COUNT(*)) IS FALSE) IN ()) UNION ALL SELECT ALL rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, v0.c0 HAVING (NOT ((((COUNT(*)) IS FALSE) IN ()))) UNION ALL SELECT rt0.c1, rt0.c0, v0.c0 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c1, rt0.c0, v0.c0 HAVING (((((COUNT(*)) IS FALSE) IN ())) ISNULL);
SELECT ALL rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, v0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) NOTNULL)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0) NOTNULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) NOTNULL)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON (((+ (v0.c0)))||(((v0.c0)<=(rt0.c2))));
SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON (((+ (v0.c0)))||(((v0.c0)<=(rt0.c2)))) WHERE (LENGTH(rt0.c1)) UNION SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON (((+ (v0.c0)))||(((v0.c0)<=(rt0.c2)))) WHERE ((NOT (LENGTH(rt0.c1)))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON (((+ (v0.c0)))||(((v0.c0)<=(rt0.c2)))) WHERE (((LENGTH(rt0.c1)) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON (((+ (v0.c0)))||(((v0.c0)<=(rt0.c2))));
SELECT v0.c0, rt0.c3 FROM rt0 CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((rt0.c5 COLLATE NOCASE)) AND ((v0.c0 COLLATE RTRIM))) GROUP BY v0.c0, rt0.c3;
SELECT ALL v0.c0, rt0.c3 FROM rt0 CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((rt0.c5 COLLATE NOCASE)) AND ((v0.c0 COLLATE RTRIM))) WHERE ((~ (CAST(rt0.c1 AS INTEGER)))) GROUP BY v0.c0, rt0.c3 UNION SELECT v0.c0, rt0.c3 FROM rt0 CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((rt0.c5 COLLATE NOCASE)) AND ((v0.c0 COLLATE RTRIM))) WHERE ((NOT ((~ (CAST(rt0.c1 AS INTEGER)))))) GROUP BY v0.c0, rt0.c3 UNION SELECT ALL v0.c0, rt0.c3 FROM rt0 CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((rt0.c5 COLLATE NOCASE)) AND ((v0.c0 COLLATE RTRIM))) WHERE ((((~ (CAST(rt0.c1 AS INTEGER)))) ISNULL)) GROUP BY v0.c0, rt0.c3;
SELECT v0.c0, rt0.c3 FROM rt0 CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((rt0.c5 COLLATE NOCASE)) AND ((v0.c0 COLLATE RTRIM))) GROUP BY v0.c0, rt0.c3;
SELECT rt0.c3, rt0.c5, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c5, rt0.c0;
SELECT rt0.c3, rt0.c5, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c5, rt0.c0 HAVING MIN(COUNT(COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c5, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c5, rt0.c0 HAVING (NOT (MIN(COUNT(COUNT(*))))) UNION ALL SELECT rt0.c3, rt0.c5, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c5, rt0.c0 HAVING ((MIN(COUNT(COUNT(*)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (NULLIF((+ (rt0.c1)), rt0.c0 COLLATE NOCASE)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (NULLIF((+ (rt0.c1)), rt0.c0 COLLATE NOCASE)))) UNION ALL SELECT * FROM rt0 WHERE (((NULLIF((+ (rt0.c1)), rt0.c0 COLLATE NOCASE)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS REAL)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST(v0.c0 COLLATE NOCASE AS REAL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST(v0.c0 COLLATE NOCASE AS REAL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c5, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c5, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c5, rt0.c3 FROM rt0 WHERE ((((rt0.c4)) NOT BETWEEN ((((rt0.c1)*(rt0.c0)))) AND ((((rt0.c3) ISNULL))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c5, rt0.c3 UNION SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c5, rt0.c3 FROM rt0 WHERE ((NOT ((((rt0.c4)) NOT BETWEEN ((((rt0.c1)*(rt0.c0)))) AND ((((rt0.c3) ISNULL))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c5, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c5, rt0.c3 FROM rt0 WHERE ((((((rt0.c4)) NOT BETWEEN ((((rt0.c1)*(rt0.c0)))) AND ((((rt0.c3) ISNULL))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c5, rt0.c3;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c5, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c5, rt0.c3;
SELECT ALL rt0.c5, rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c5, rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c2, rt0.c1;
SELECT rt0.c5, rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c5, rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c2, rt0.c1 HAVING SUM(GROUP_CONCAT(rt0.c4)) UNION ALL SELECT ALL rt0.c5, rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c5, rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c2, rt0.c1 HAVING (NOT (SUM(GROUP_CONCAT(rt0.c4)))) UNION ALL SELECT ALL rt0.c5, rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c5, rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c2, rt0.c1 HAVING ((SUM(GROUP_CONCAT(rt0.c4))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ('1544002558') UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ('1544002558'))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((('1544002558') ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0, v0 WHERE (((rt0.c0)%((rt0.c0 IN ())))) UNION SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((NOT (((rt0.c0)%((rt0.c0 IN ())))))) UNION SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0, v0 WHERE (((((rt0.c0)%((rt0.c0 IN ())))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0, v0;
SELECT rt0.c3, v0.c0, rt0.c5, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c5, rt0.c2;
SELECT rt0.c3, v0.c0, rt0.c5, rt0.c2 FROM v0, rt0 WHERE (json_remove((((rt0.c1))<=((v0.c0))), ((rt0.c3)|(rt0.c2)))) GROUP BY rt0.c3, v0.c0, rt0.c5, rt0.c2 UNION SELECT rt0.c3, v0.c0, rt0.c5, rt0.c2 FROM v0, rt0 WHERE ((NOT (json_remove((((rt0.c1))<=((v0.c0))), ((rt0.c3)|(rt0.c2)))))) GROUP BY rt0.c3, v0.c0, rt0.c5, rt0.c2 UNION SELECT rt0.c3, v0.c0, rt0.c5, rt0.c2 FROM v0, rt0 WHERE (((json_remove((((rt0.c1))<=((v0.c0))), ((rt0.c3)|(rt0.c2)))) ISNULL)) GROUP BY rt0.c3, v0.c0, rt0.c5, rt0.c2;
SELECT rt0.c3, v0.c0, rt0.c5, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c5, rt0.c2;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c5 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c5;
SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c5 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c5 HAVING AVG(SUM(GROUP_CONCAT(COUNT(MIN(rt0.c3))))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c5 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c5 HAVING (NOT (AVG(SUM(GROUP_CONCAT(COUNT(MIN(rt0.c3))))))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c5 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c5 HAVING ((AVG(SUM(GROUP_CONCAT(COUNT(MIN(rt0.c3)))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((x''))=((rt0.c2)))) IS FALSE)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((x''))==((rt0.c2)))) IS FALSE)))) UNION ALL SELECT * FROM rt0 WHERE ((((((((x''))=((rt0.c2)))) IS FALSE)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c4 FROM rt0 WHERE (0.651434301972012) UNION SELECT DISTINCT rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT (0.651434301972012))) UNION SELECT DISTINCT rt0.c1, rt0.c4 FROM rt0 WHERE (((0.651434301972012) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c4 FROM rt0;
SELECT ALL rt0.c2, rt0.c5, v0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c5, v0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c5, v0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM v0, rt0 WHERE (0.6780728130213941) GROUP BY rt0.c2, rt0.c5, v0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c5, v0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM v0, rt0 WHERE ((NOT (0.6780728130213941))) GROUP BY rt0.c2, rt0.c5, v0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3 UNION SELECT rt0.c2, rt0.c5, v0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM v0, rt0 WHERE (((0.6780728130213941) ISNULL)) GROUP BY rt0.c2, rt0.c5, v0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c5, v0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c5, v0.c0, rt0.c4, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(CAST(v0.c0 AS NUMERIC)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(CAST(v0.c0 AS NUMERIC)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(CAST(v0.c0 AS NUMERIC))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(CAST(v0.c0 AS NUMERIC)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(CAST(v0.c0 AS NUMERIC)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(CAST(v0.c0 AS NUMERIC))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c5, rt0.c4, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c5, rt0.c4, rt0.c2 FROM rt0 WHERE (rt0.c3) UNION ALL SELECT ALL rt0.c0, rt0.c5, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c3))) UNION ALL SELECT ALL rt0.c0, rt0.c5, rt0.c4, rt0.c2 FROM rt0 WHERE (((rt0.c3) ISNULL));
SELECT ALL rt0.c0, rt0.c5, rt0.c4, rt0.c2 FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((0Xffffffffff7709b6)) NOT BETWEEN ((((('1744847471', 'B9X', v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((0xffffffffff7709b6)) NOT BETWEEN ((((('1744847471', 'B9X', v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((0xffffffffff7709b6)) NOT BETWEEN ((((('1744847471', 'B9X', v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c5, rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c5, rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c5, rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c5 ELSE rt0.c3 END COLLATE RTRIM COLLATE NOCASE) GROUP BY rt0.c5, rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c5, rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c1 THEN rt0.c5 ELSE rt0.c3 END COLLATE RTRIM COLLATE NOCASE))) GROUP BY rt0.c5, rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c5, rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c5 ELSE rt0.c3 END COLLATE RTRIM COLLATE NOCASE) ISNULL)) GROUP BY rt0.c5, rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c5, rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c5, rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((v0.c0)AND(((v0.c0) IS FALSE)))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((v0.c0)AND(((v0.c0) IS FALSE)))))) UNION ALL SELECT * FROM v0 WHERE (((((v0.c0)AND(((v0.c0) IS FALSE)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (+ (v0.c0)) WHEN LIKELY(v0.c0) THEN CASE WHEN v0.c0 THEN 0.3380744106076211 ELSE v0.c0 END WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) END) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (+ (v0.c0)) WHEN LIKELY(v0.c0) THEN CASE WHEN v0.c0 THEN 0.3380744106076211 ELSE v0.c0 END WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) END))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (+ (v0.c0)) WHEN LIKELY(v0.c0) THEN CASE WHEN v0.c0 THEN 0.3380744106076211 ELSE v0.c0 END WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) END) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (0.530660101471389) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (0.530660101471389))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((0.530660101471389) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c5, rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c5, rt0.c2, rt0.c3, rt0.c1;
SELECT ALL rt0.c5, rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c5, rt0.c2, rt0.c3, rt0.c1 HAVING COUNT(COUNT(rt0.c4)) UNION ALL SELECT ALL rt0.c5, rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c5, rt0.c2, rt0.c3, rt0.c1 HAVING (NOT (COUNT(COUNT(rt0.c4)))) UNION ALL SELECT rt0.c5, rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c5, rt0.c2, rt0.c3, rt0.c1 HAVING ((COUNT(COUNT(rt0.c4))) ISNULL);
SELECT ALL rt0.c3, rt0.c5, rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0 FROM rt0, v0;
SELECT ALL rt0.c3, rt0.c5, rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 WHERE (((((CASE rt0.c4  WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c5 END)OR(((((x'')OR(rt0.c2)))OR(rt0.c1)))))OR(((((rt0.c5)AND(v0.c0)))OR(v0.c0))))) UNION ALL SELECT ALL rt0.c3, rt0.c5, rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 WHERE ((NOT (((((CASE rt0.c4  WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c5 END)OR(((((x'')OR(rt0.c2)))OR(rt0.c1)))))OR(((((rt0.c5)AND(v0.c0)))OR(v0.c0))))))) UNION ALL SELECT rt0.c3, rt0.c5, rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 WHERE (((((((CASE rt0.c4  WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c5 END)OR(((((x'')OR(rt0.c2)))OR(rt0.c1)))))OR(((((rt0.c5)AND(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT ALL rt0.c3, rt0.c5, rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c4 FROM rt0 WHERE ((((rt0.c2 IN ()))<(CASE WHEN rt0.c4 THEN '' ELSE rt0.c0 END))) UNION SELECT DISTINCT rt0.c4 FROM rt0 WHERE ((NOT ((((rt0.c2 IN ()))<(CASE WHEN rt0.c4 THEN '' ELSE rt0.c0 END))))) UNION SELECT DISTINCT rt0.c4 FROM rt0 WHERE ((((((rt0.c2 IN ()))<(CASE WHEN rt0.c4 THEN '' ELSE rt0.c0 END))) ISNULL));
SELECT DISTINCT rt0.c4 FROM rt0;
SELECT rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2;
SELECT ALL rt0.c4, rt0.c2 FROM rt0 WHERE (CAST(CAST(rt0.c3 AS REAL) AS NUMERIC)) GROUP BY rt0.c4, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c3 AS REAL) AS NUMERIC)))) GROUP BY rt0.c4, rt0.c2 UNION SELECT rt0.c4, rt0.c2 FROM rt0 WHERE (((CAST(CAST(rt0.c3 AS REAL) AS NUMERIC)) ISNULL)) GROUP BY rt0.c4, rt0.c2;
SELECT rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c5, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c5, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c5, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c5, rt0.c3 HAVING ((((AVG(COUNT(rt0.c2)))*(rt0.c0))) NOT BETWEEN (GROUP_CONCAT(MIN(rt0.c0))) AND (GROUP_CONCAT(rt0.c4))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c5, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c5, rt0.c3 HAVING (NOT (((((AVG(COUNT(rt0.c2)))*(rt0.c0))) NOT BETWEEN (GROUP_CONCAT(MIN(rt0.c0))) AND (GROUP_CONCAT(rt0.c4))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c5, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c5, rt0.c3 HAVING ((((((AVG(COUNT(rt0.c2)))*(rt0.c0))) NOT BETWEEN (GROUP_CONCAT(MIN(rt0.c0))) AND (GROUP_CONCAT(rt0.c4)))) ISNULL);
SELECT rt0.c2, rt0.c5, v0.c0, rt0.c0, rt0.c3 FROM v0, rt0;
SELECT ALL rt0.c2, rt0.c5, v0.c0, rt0.c0, rt0.c3 FROM v0, rt0 WHERE ((((((((rt0.c0)OR(rt0.c4)))AND(rt0.c0)), (v0.c0 IN ()), (rt0.c2 IN ()), ((rt0.c3)LIKE('137825847')), ((rt0.c5)OR(rt0.c0))))=((((rt0.c0)IS(rt0.c0)), ((rt0.c0)>=(rt0.c5)), ABS(rt0.c4), (((rt0.c3, rt0.c3, rt0.c5)) BETWEEN ((rt0.c5, rt0.c3, rt0.c3)) AND ((rt0.c0, rt0.c5, rt0.c1))), ((rt0.c2)>=(rt0.c5)))))) UNION ALL SELECT rt0.c2, rt0.c5, v0.c0, rt0.c0, rt0.c3 FROM v0, rt0 WHERE ((NOT ((((((((rt0.c0)OR(rt0.c4)))AND(rt0.c0)), (v0.c0 IN ()), (rt0.c2 IN ()), ((rt0.c3)LIKE('137825847')), ((rt0.c5)OR(rt0.c0))))==((((rt0.c0)IS(rt0.c0)), ((rt0.c0)>=(rt0.c5)), ABS(rt0.c4), (((rt0.c3, rt0.c3, rt0.c5)) BETWEEN ((rt0.c5, rt0.c3, rt0.c3)) AND ((rt0.c0, rt0.c5, rt0.c1))), ((rt0.c2)>=(rt0.c5)))))))) UNION ALL SELECT ALL rt0.c2, rt0.c5, v0.c0, rt0.c0, rt0.c3 FROM v0, rt0 WHERE ((((((((((rt0.c0)OR(rt0.c4)))AND(rt0.c0)), (v0.c0 IN ()), (rt0.c2 IN ()), ((rt0.c3)LIKE('137825847')), ((rt0.c5)OR(rt0.c0))))=((((rt0.c0)IS(rt0.c0)), ((rt0.c0)>=(rt0.c5)), ABS(rt0.c4), (((rt0.c3, rt0.c3, rt0.c5)) BETWEEN ((rt0.c5, rt0.c3, rt0.c3)) AND ((rt0.c0, rt0.c5, rt0.c1))), ((rt0.c2)>=(rt0.c5)))))) ISNULL));
SELECT rt0.c2, rt0.c5, v0.c0, rt0.c0, rt0.c3 FROM v0, rt0;
SELECT DISTINCT v0.c0, rt0.c1 FROM v0, rt0;
SELECT DISTINCT v0.c0, rt0.c1 FROM v0, rt0 WHERE ('0.3178393826704595') UNION SELECT DISTINCT v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT ('0.3178393826704595'))) UNION SELECT DISTINCT v0.c0, rt0.c1 FROM v0, rt0 WHERE ((('0.3178393826704595') ISNULL));
SELECT DISTINCT v0.c0, rt0.c1 FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0 IN ()) IN ())) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0 IN ()) IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0 IN ()) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c4, rt0.c0, rt0.c5, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c5, v0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c4, rt0.c0, rt0.c5, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c5, v0.c0, rt0.c2, rt0.c3 HAVING COUNT(*) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c5, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c5, v0.c0, rt0.c2, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c5, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c5, v0.c0, rt0.c2, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c4, rt0.c0, rt0.c5, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c5, v0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c4, rt0.c0, rt0.c5, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c5, v0.c0, rt0.c2, rt0.c3 HAVING COUNT(*) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c5, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c5, v0.c0, rt0.c2, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c5, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c5, v0.c0, rt0.c2, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c4, rt0.c0, rt0.c5, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c5, v0.c0, rt0.c2, rt0.c3;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (CASE WHEN ((NULL)<=(v0.c0)) THEN ((v0.c0) NOT NULL) WHEN (+ (v0.c0)) THEN ((v0.c0) ISNULL) WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END END) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (CASE WHEN ((NULL)<=(v0.c0)) THEN ((v0.c0) NOT NULL) WHEN (+ (v0.c0)) THEN ((v0.c0) ISNULL) WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END END))) UNION ALL SELECT * FROM v0 WHERE (((CASE WHEN ((NULL)<=(v0.c0)) THEN ((v0.c0) NOT NULL) WHEN (+ (v0.c0)) THEN ((v0.c0) ISNULL) WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END END) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c5, rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c0, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON CASE ((((rt0.c3)OR(v0.c0)))AND(rt0.c4))  WHEN ((v0.c0)>(rt0.c0)) THEN CAST('|N' AS TEXT) ELSE COALESCE(rt0.c2, rt0.c5) END;
SELECT DISTINCT rt0.c5, rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c0, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON CASE ((((rt0.c3)OR(v0.c0)))AND(rt0.c4))  WHEN ((v0.c0)>(rt0.c0)) THEN CAST('|N' AS TEXT) ELSE COALESCE(rt0.c2, rt0.c5) END WHERE (((((v0.c0)OR(rt0.c3)))AND(v0.c0)) COLLATE BINARY) UNION SELECT DISTINCT rt0.c5, rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c0, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON CASE ((((rt0.c3)OR(v0.c0)))AND(rt0.c4))  WHEN ((v0.c0)>(rt0.c0)) THEN CAST('|N' AS TEXT) ELSE COALESCE(rt0.c2, rt0.c5) END WHERE ((NOT (((((v0.c0)OR(rt0.c3)))AND(v0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c5, rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c0, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON CASE ((((rt0.c3)OR(v0.c0)))AND(rt0.c4))  WHEN ((v0.c0)>(rt0.c0)) THEN CAST('|N' AS TEXT) ELSE COALESCE(rt0.c2, rt0.c5) END WHERE (((((((v0.c0)OR(rt0.c3)))AND(v0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c5, rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c0, rt0.c4 FROM v0 FULL OUTER JOIN rt0 ON CASE ((((rt0.c3)OR(v0.c0)))AND(rt0.c4))  WHEN ((v0.c0)>(rt0.c0)) THEN CAST('|N' AS TEXT) ELSE COALESCE(rt0.c2, rt0.c5) END;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((((rt0.c0 IN (rt0.c5, rt0.c5, 0X4367d22d))) NOTNULL)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0 IN (rt0.c5, rt0.c5, 0x4367d22d))) NOTNULL)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((((rt0.c0 IN (rt0.c5, rt0.c5, 0X4367d22d))) NOTNULL)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE AVG(v0.c0)  WHEN ((v0.c0) IS FALSE) THEN ((GROUP_CONCAT(COUNT(SUM(COUNT(COUNT(MAX(SUM(COUNT(v0.c0))))))))) BETWEEN (COUNT(v0.c0)) AND (NULL)) END UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE AVG(v0.c0)  WHEN ((v0.c0) IS FALSE) THEN ((GROUP_CONCAT(COUNT(SUM(COUNT(COUNT(MAX(SUM(COUNT(v0.c0))))))))) BETWEEN (COUNT(v0.c0)) AND (NULL)) END)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE AVG(v0.c0)  WHEN ((v0.c0) IS FALSE) THEN ((GROUP_CONCAT(COUNT(SUM(COUNT(COUNT(MAX(SUM(COUNT(v0.c0))))))))) BETWEEN (COUNT(v0.c0)) AND (NULL)) END) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0 NOT INDEXED, v0 WHERE (rt0.c2) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM rt0, v0 WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0 WHERE (((rt0.c3)-(rt0.c3)) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0 WHERE ((NOT (((rt0.c3)-(rt0.c3)) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0 WHERE (((((rt0.c3)-(rt0.c3)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0 COLLATE NOCASE) BETWEEN (0xffffffffbbdc30c4) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE NOCASE) BETWEEN (0Xffffffffbbdc30c4) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE NOCASE) BETWEEN (0xffffffffbbdc30c4) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL MIN(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) FROM v0;
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((~ (v0.c0)) IN ())) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (((~ (v0.c0)) IN ())))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((((~ (v0.c0)) IN ())) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT rt0.c3, rt0.c2 FROM v0 NOT INDEXED, rt0;
SELECT DISTINCT rt0.c3, rt0.c2 FROM v0, rt0 WHERE (CASE WHEN rt0.c3 THEN v0.c0 END COLLATE NOCASE) UNION SELECT DISTINCT rt0.c3, rt0.c2 FROM v0, rt0 WHERE ((NOT (CASE WHEN rt0.c3 THEN v0.c0 END COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c3, rt0.c2 FROM v0, rt0 NOT INDEXED WHERE (((CASE WHEN rt0.c3 THEN v0.c0 END COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2 FROM v0 NOT INDEXED, rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c5, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c5, rt0.c3;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c5, rt0.c3 FROM rt0, v0 WHERE (DATETIME(NULL, CAST(rt0.c3 AS BLOB), ((((rt0.c0)OR(v0.c0)))AND(0.28060500443940695)))) GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c5, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c5, rt0.c3 FROM rt0, v0 WHERE ((NOT (DATETIME(NULL, CAST(rt0.c3 AS BLOB), ((((rt0.c0)OR(v0.c0)))AND(0.28060500443940695)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c5, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c5, rt0.c3 FROM rt0, v0 WHERE (((DATETIME(NULL, CAST(rt0.c3 AS BLOB), ((((rt0.c0)OR(v0.c0)))AND(0.28060500443940695)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c5, rt0.c3;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c5, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c5, rt0.c3;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(COUNT(*)))>=(GROUP_CONCAT(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((COUNT(COUNT(*)))>=(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((COUNT(COUNT(*)))>=(GROUP_CONCAT(v0.c0)))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ('-1058847834') UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ('-1058847834'))) UNION ALL SELECT * FROM v0 WHERE ((('-1058847834') ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((CAST(rt0.c5 AS INTEGER)) IS TRUE)) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((CAST(rt0.c5 AS INTEGER)) IS TRUE)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((CAST(rt0.c5 AS INTEGER)) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE (((((((((((((CAST(rt0.c4 AS BLOB))AND(((rt0.c0)OR(rt0.c3)))))OR(rt0.c3)))AND(LOWER(DISTINCT rt0.c3))))AND(rt0.c4 COLLATE RTRIM)))OR(((rt0.c2)>=(rt0.c4)))))AND((((rt0.c0)) NOT BETWEEN ((148284539)) AND ((rt0.c3)))))) GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (((((((((((((CAST(rt0.c4 AS BLOB))AND(((rt0.c0)OR(rt0.c3)))))OR(rt0.c3)))AND(LOWER(DISTINCT rt0.c3))))AND(rt0.c4 COLLATE RTRIM)))OR(((rt0.c2)>=(rt0.c4)))))AND((((rt0.c0)) NOT BETWEEN ((148284539)) AND ((rt0.c3)))))))) GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE (((((((((((((((CAST(rt0.c4 AS BLOB))AND(((rt0.c0)OR(rt0.c3)))))OR(rt0.c3)))AND(LOWER(DISTINCT rt0.c3))))AND(rt0.c4 COLLATE RTRIM)))OR(((rt0.c2)>=(rt0.c4)))))AND((((rt0.c0)) NOT BETWEEN ((148284539)) AND ((rt0.c3)))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2;
SELECT ALL rt0.c4, rt0.c5, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c5, rt0.c2, rt0.c1, v0.c0;
SELECT rt0.c4, rt0.c5, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c5, rt0.c2, rt0.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c4, rt0.c5, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c5, rt0.c2, rt0.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c4, rt0.c5, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c5, rt0.c2, rt0.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c4, rt0.c5, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c5, rt0.c2, rt0.c1, v0.c0;
SELECT rt0.c4, rt0.c5, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c5, rt0.c2, rt0.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c4, rt0.c5, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c5, rt0.c2, rt0.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c4, rt0.c5, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c5, rt0.c2, rt0.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c4, rt0.c5, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c5, rt0.c2, rt0.c1, v0.c0;
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE ((((rt0.c1, 0.5311908810330206, rt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM, CASE WHEN rt0.c4 THEN x'a215' END, ((NULL)IS NOT(rt0.c0)))) AND ((((rt0.c2)>>('Sy')), (rt0.c0 IN (rt0.c2)), CHANGES())))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT ((((rt0.c1, 0.5311908810330206, rt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM, CASE WHEN rt0.c4 THEN x'a215' END, ((NULL)IS NOT(rt0.c0)))) AND ((((rt0.c2)>>('Sy')), (rt0.c0 IN (rt0.c2)), CHANGES())))))) UNION ALL SELECT * FROM v0, rt0 WHERE ((((((rt0.c1, 0.5311908810330206, rt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM, CASE WHEN rt0.c4 THEN x'a215' END, ((NULL)IS NOT(rt0.c0)))) AND ((((rt0.c2)>>('Sy')), (rt0.c0 IN (rt0.c2)), CHANGES())))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT rt0.c5 FROM v0, rt0;
SELECT DISTINCT rt0.c5 FROM v0, rt0 WHERE (CASE (rt0.c0 IN ())  WHEN TYPEOF(DISTINCT rt0.c5) THEN v0.c0 COLLATE RTRIM END) UNION SELECT DISTINCT rt0.c5 FROM v0, rt0 WHERE ((NOT (CASE (rt0.c0 IN ())  WHEN TYPEOF(DISTINCT rt0.c5) THEN v0.c0 COLLATE RTRIM END))) UNION SELECT DISTINCT rt0.c5 FROM v0, rt0 WHERE (((CASE (rt0.c0 IN ())  WHEN TYPEOF(DISTINCT rt0.c5) THEN v0.c0 COLLATE RTRIM END) ISNULL));
SELECT DISTINCT rt0.c5 FROM v0, rt0;
SELECT ALL rt0.c3, rt0.c5 FROM rt0 GROUP BY rt0.c3, rt0.c5;
SELECT rt0.c3, rt0.c5 FROM rt0 WHERE (rt0.c3) GROUP BY rt0.c3, rt0.c5 UNION SELECT ALL rt0.c3, rt0.c5 FROM rt0 WHERE ((NOT (rt0.c3))) GROUP BY rt0.c3, rt0.c5 UNION SELECT rt0.c3, rt0.c5 FROM rt0 WHERE (((rt0.c3) ISNULL)) GROUP BY rt0.c3, rt0.c5;
SELECT ALL rt0.c3, rt0.c5 FROM rt0 GROUP BY rt0.c3, rt0.c5;
SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING COUNT(((GROUP_CONCAT(rt0.c3))>=(COUNT(*)))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING (NOT (COUNT(((GROUP_CONCAT(rt0.c3))>=(COUNT(*)))))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING ((COUNT(((GROUP_CONCAT(rt0.c3))>=(COUNT(*))))) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (LTRIM(((rt0.c0) ISNULL), ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (LTRIM(((rt0.c0) ISNULL), ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)))))) UNION ALL SELECT * FROM v0, rt0 WHERE (((LTRIM(((rt0.c0) ISNULL), ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)))) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) BETWEEN (((v0.c0)GLOB(v0.c0))) AND (((v0.c0)<(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) BETWEEN (((v0.c0)GLOB(v0.c0))) AND (((v0.c0)<(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) BETWEEN (((v0.c0)GLOB(v0.c0))) AND (((v0.c0)<(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c1)) IN ())) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c1)) IN ())))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c1)) IN ())) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, v0.c0, rt0.c5, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c5, rt0.c4, rt0.c0;
SELECT rt0.c1, v0.c0, rt0.c5, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c5, rt0.c4, rt0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c5, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c5, rt0.c4, rt0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c5, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c5, rt0.c4, rt0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(((v0.c0) NOTNULL))))OR(((v0.c0) BETWEEN (v0.c0) AND ('1371465259'))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(((v0.c0) NOTNULL))))OR(((v0.c0) BETWEEN (v0.c0) AND ('1371465259'))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(((v0.c0) NOTNULL))))OR(((v0.c0) BETWEEN (v0.c0) AND ('1371465259'))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE ((((((rt0.c2))!=((NULL)))) BETWEEN (((rt0.c5)IS(rt0.c2))) AND (rt0.c3))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT ((((((rt0.c2))<>((NULL)))) BETWEEN (((rt0.c5)IS(rt0.c2))) AND (rt0.c3))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE ((((((((rt0.c2))<>((NULL)))) BETWEEN (((rt0.c5)IS(rt0.c2))) AND (rt0.c3))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0;
SELECT ALL rt0.c1, rt0.c5, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c5, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c5, rt0.c3, rt0.c2 FROM rt0 WHERE ((- (rt0.c0))) GROUP BY rt0.c1, rt0.c5, rt0.c3, rt0.c2 UNION SELECT rt0.c1, rt0.c5, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT ((- (rt0.c0))))) GROUP BY rt0.c1, rt0.c5, rt0.c3, rt0.c2 UNION SELECT rt0.c1, rt0.c5, rt0.c3, rt0.c2 FROM rt0 WHERE ((((- (rt0.c0))) ISNULL)) GROUP BY rt0.c1, rt0.c5, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c5, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c5, rt0.c3, rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(((v0.c0) NOT BETWEEN (SUM(NULL)) AND (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(((v0.c0) NOT BETWEEN (SUM(NULL)) AND (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(((v0.c0) NOT BETWEEN (SUM(NULL)) AND (v0.c0)))) ISNULL);
SELECT rt0.c5, rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM rt0 NATURAL JOIN v0;
SELECT ALL rt0.c5, rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM rt0 NATURAL JOIN v0 WHERE (((((rt0.c2)+(rt0.c3))) NOT BETWEEN (x'') AND (CAST(rt0.c2 AS REAL)))) UNION ALL SELECT ALL rt0.c5, rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (((((rt0.c2)+(rt0.c3))) NOT BETWEEN (x'') AND (CAST(rt0.c2 AS REAL)))))) UNION ALL SELECT rt0.c5, rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM rt0 NATURAL JOIN v0 WHERE (((((((rt0.c2)+(rt0.c3))) NOT BETWEEN (x'') AND (CAST(rt0.c2 AS REAL)))) ISNULL));
SELECT rt0.c5, rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((NULL)<=(rt0.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((NULL)<=(rt0.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((NULL)<=(rt0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c3, rt0.c5 FROM rt0 CROSS JOIN v0 ON CASE 0X13255d4b  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c5 END COLLATE RTRIM COLLATE BINARY GROUP BY rt0.c1, rt0.c3, rt0.c5;
SELECT rt0.c1, rt0.c3, rt0.c5 FROM rt0 CROSS JOIN v0 ON CASE 0x13255d4b  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c5 END COLLATE RTRIM COLLATE BINARY WHERE ((CAST(rt0.c5 AS REAL) IN ())) GROUP BY rt0.c1, rt0.c3, rt0.c5 UNION SELECT rt0.c1, rt0.c3, rt0.c5 FROM rt0 CROSS JOIN v0 ON CASE 0x13255d4b  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c5 END COLLATE RTRIM COLLATE BINARY WHERE ((NOT ((CAST(rt0.c5 AS REAL) IN ())))) GROUP BY rt0.c1, rt0.c3, rt0.c5 UNION SELECT rt0.c1, rt0.c3, rt0.c5 FROM rt0 CROSS JOIN v0 ON CASE 0x13255d4b  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c5 END COLLATE RTRIM COLLATE BINARY WHERE ((((CAST(rt0.c5 AS REAL) IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c5;
SELECT ALL rt0.c1, rt0.c3, rt0.c5 FROM rt0 CROSS JOIN v0 ON CASE 0X13255d4b  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c5 END COLLATE RTRIM COLLATE BINARY GROUP BY rt0.c1, rt0.c3, rt0.c5;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(v0.c0 AS REAL)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(v0.c0 AS REAL)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS REAL)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c5, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c5, v0.c0 FROM rt0, v0 WHERE (((((rt0.c2) IS TRUE)) ISNULL)) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c5, v0.c0 FROM rt0, v0 WHERE ((NOT (((((rt0.c2) IS TRUE)) ISNULL)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c5, v0.c0 FROM rt0, v0 WHERE (((((((rt0.c2) IS TRUE)) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt0.c5, v0.c0 FROM rt0, v0;
SELECT ALL v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt0 WHERE (LOWER((rt0.c2 IN ()))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, rt0 WHERE ((NOT (LOWER((rt0.c2 IN ()))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, rt0 WHERE (((LOWER((rt0.c2 IN ()))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((MAX(v0.c0)) NOT NULL)) ISNULL) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((MAX(v0.c0)) NOT NULL)) ISNULL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((MAX(v0.c0)) NOT NULL)) ISNULL)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((MAX(v0.c0)) NOT NULL)) ISNULL) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((MAX(v0.c0)) NOT NULL)) ISNULL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((MAX(v0.c0)) NOT NULL)) ISNULL)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c0 COLLATE NOCASE)=(CASE WHEN rt0.c4 THEN rt0.c4 ELSE v0.c0 END))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (((rt0.c0 COLLATE NOCASE)==(CASE WHEN rt0.c4 THEN rt0.c4 ELSE v0.c0 END))))) UNION ALL SELECT * FROM rt0, v0 WHERE (((((rt0.c0 COLLATE NOCASE)==(CASE WHEN rt0.c4 THEN rt0.c4 ELSE v0.c0 END))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ('-1583265005') UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ('-1583265005'))) UNION SELECT DISTINCT * FROM v0 WHERE ((('-1583265005') ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (LIKE((rt0.c2 IN ()), rt0.c3 COLLATE NOCASE, 'q')) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (LIKE((rt0.c2 IN ()), rt0.c3 COLLATE NOCASE, 'q')))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((LIKE((rt0.c2 IN ()), rt0.c3 COLLATE NOCASE, 'q')) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((x'', (NOT (v0.c0)), MIN(COUNT(*)) COLLATE RTRIM))==((GROUP_CONCAT(v0.c0), GROUP_CONCAT(v0.c0), '1737051736' COLLATE NOCASE))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((x'', (NOT (v0.c0)), MIN(COUNT(*)) COLLATE RTRIM))==((GROUP_CONCAT(v0.c0), GROUP_CONCAT(v0.c0), '1737051736' COLLATE NOCASE))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((x'', (NOT (v0.c0)), MIN(COUNT(*)) COLLATE RTRIM))==((GROUP_CONCAT(v0.c0), GROUP_CONCAT(v0.c0), '1737051736' COLLATE NOCASE)))) ISNULL);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((CASE WHEN rt0.c5 THEN v0.c0 END)) AND (((rt0.c0 IN ('ꄦxq*qz', rt0.c1)))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((CASE WHEN rt0.c5 THEN v0.c0 END)) AND (((rt0.c0 IN ('ꄦxq*qz', rt0.c1))))) WHERE (((rt0.c2 COLLATE BINARY)!=(rt0.c0))) UNION ALL SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((CASE WHEN rt0.c5 THEN v0.c0 END)) AND (((rt0.c0 IN ('ꄦxq*qz', rt0.c1))))) WHERE ((NOT (((rt0.c2 COLLATE BINARY)<>(rt0.c0))))) UNION ALL SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((CASE WHEN rt0.c5 THEN v0.c0 END)) AND (((rt0.c0 IN ('ꄦxq*qz', rt0.c1))))) WHERE (((((rt0.c2 COLLATE BINARY)<>(rt0.c0))) ISNULL));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((CASE WHEN rt0.c5 THEN v0.c0 END)) AND (((rt0.c0 IN ('ꄦxq*qz', rt0.c1)))));
SELECT DISTINCT * FROM rt0 NOT INDEXED;
SELECT DISTINCT * FROM rt0 WHERE (CAST(CAST(rt0.c4 AS REAL) AS TEXT)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c4 AS REAL) AS TEXT)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(CAST(rt0.c4 AS REAL) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0 NOT INDEXED;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0) NOT BETWEEN ('1474353775') AND (v0.c0))) NOT BETWEEN (((v0.c0) IS FALSE)) AND (((((((((v0.c0)AND(x'')))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) NOT BETWEEN ('1474353775') AND (v0.c0))) NOT BETWEEN (((v0.c0) IS FALSE)) AND (((((((((v0.c0)AND(x'')))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0) NOT BETWEEN ('1474353775') AND (v0.c0))) NOT BETWEEN (((v0.c0) IS FALSE)) AND (((((((((v0.c0)AND(x'')))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c4 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c4;
SELECT rt0.c0, rt0.c4 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c4 HAVING SUM(TOTAL(rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c4 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c4 HAVING (NOT (SUM(TOTAL(rt0.c0)))) UNION ALL SELECT rt0.c0, rt0.c4 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c4 HAVING ((SUM(TOTAL(rt0.c0))) ISNULL);
SELECT rt0.c3 FROM rt0;
SELECT rt0.c3 FROM rt0 WHERE ((CAST(rt0.c4 AS REAL) IN ())) UNION ALL SELECT rt0.c3 FROM rt0 WHERE ((NOT ((CAST(rt0.c4 AS REAL) IN ())))) UNION ALL SELECT rt0.c3 FROM rt0 WHERE ((((CAST(rt0.c4 AS REAL) IN ())) ISNULL));
SELECT rt0.c3 FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (LAST_INSERT_ROWID()) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (LAST_INSERT_ROWID()))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((LAST_INSERT_ROWID()) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0, rt0.c0, rt0.c4, rt0.c5, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c1) ISNULL)) NOT NULL) GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c5, rt0.c2;
SELECT v0.c0, rt0.c0, rt0.c4, rt0.c5, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c1) ISNULL)) NOT NULL) WHERE (TRIM((+ (v0.c0)))) GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c5, rt0.c2 UNION SELECT v0.c0, rt0.c0, rt0.c4, rt0.c5, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c1) ISNULL)) NOT NULL) WHERE ((NOT (TRIM((+ (v0.c0)))))) GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c5, rt0.c2 UNION SELECT ALL v0.c0, rt0.c0, rt0.c4, rt0.c5, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c1) ISNULL)) NOT NULL) WHERE (((TRIM((+ (v0.c0)))) ISNULL)) GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c5, rt0.c2;
SELECT ALL v0.c0, rt0.c0, rt0.c4, rt0.c5, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c1) ISNULL)) NOT NULL) GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c5, rt0.c2;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING CAST(SUM(COUNT(*)) AS INTEGER) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (CAST(SUM(COUNT(*)) AS INTEGER))) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((CAST(SUM(COUNT(*)) AS INTEGER)) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c5 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c5 FROM rt0 WHERE (NULL) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c5 FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c5 FROM rt0 WHERE (((NULL) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c5 FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST((((v0.c0)) NOT BETWEEN ((0.016689921477829217)) AND ((v0.c0))) AS TEXT)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST((((v0.c0)) NOT BETWEEN ((0.016689921477829217)) AND ((v0.c0))) AS TEXT)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST((((v0.c0)) NOT BETWEEN ((0.016689921477829217)) AND ((v0.c0))) AS TEXT)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0))!=((v0.c0)))) NOT NULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0))<>((v0.c0)))) NOT NULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((((v0.c0))<>((v0.c0)))) NOT NULL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c3, rt0.c5, rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c4 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c3, rt0.c5, rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c4;
SELECT rt0.c3, rt0.c5, rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c4 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c3, rt0.c5, rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c4 HAVING (((((v0.c0)) BETWEEN ((NULL)) AND ((AVG(COUNT(*))))))<((rt0.c3 IN (COUNT(*))))) UNION ALL SELECT rt0.c3, rt0.c5, rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c4 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c3, rt0.c5, rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c4 HAVING (NOT ((((((v0.c0)) BETWEEN ((NULL)) AND ((AVG(COUNT(*))))))<((rt0.c3 IN (COUNT(*))))))) UNION ALL SELECT ALL rt0.c3, rt0.c5, rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c4 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c3, rt0.c5, rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c4 HAVING (((((((v0.c0)) BETWEEN ((NULL)) AND ((AVG(COUNT(*))))))<((rt0.c3 IN (COUNT(*)))))) ISNULL);
SELECT rt0.c5, rt0.c2, rt0.c3, rt0.c4 FROM rt0, v0;
SELECT ALL rt0.c5, rt0.c2, rt0.c3, rt0.c4 FROM rt0 NOT INDEXED, v0 WHERE (((((rt0.c5)-(rt0.c3))) NOTNULL)) UNION ALL SELECT ALL rt0.c5, rt0.c2, rt0.c3, rt0.c4 FROM rt0, v0 WHERE ((NOT (((((rt0.c5)-(rt0.c3))) NOTNULL)))) UNION ALL SELECT rt0.c5, rt0.c2, rt0.c3, rt0.c4 FROM rt0, v0 WHERE (((((((rt0.c5)-(rt0.c3))) NOTNULL)) ISNULL));
SELECT rt0.c5, rt0.c2, rt0.c3, rt0.c4 FROM rt0, v0;
SELECT DISTINCT rt0.c5, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM v0 INNER JOIN rt0 ON CAST(rt0.c3 AS INTEGER);
SELECT DISTINCT rt0.c5, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM v0 INNER JOIN rt0 ON CAST(rt0.c3 AS INTEGER) WHERE ((((((rt0.c3, rt0.c2, rt0.c5, rt0.c1, NULL)) BETWEEN ((rt0.c1, rt0.c2, rt0.c3, rt0.c5, rt0.c0)) AND ((rt0.c2, v0.c0, rt0.c3, '1124378805', rt0.c1))))+(rt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c5, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM v0 INNER JOIN rt0 ON CAST(rt0.c3 AS INTEGER) WHERE ((NOT ((((((rt0.c3, rt0.c2, rt0.c5, rt0.c1, NULL)) BETWEEN ((rt0.c1, rt0.c2, rt0.c3, rt0.c5, rt0.c0)) AND ((rt0.c2, v0.c0, rt0.c3, '1124378805', rt0.c1))))+(rt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT rt0.c5, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM v0 INNER JOIN rt0 ON CAST(rt0.c3 AS INTEGER) WHERE ((((((((rt0.c3, rt0.c2, rt0.c5, rt0.c1, NULL)) BETWEEN ((rt0.c1, rt0.c2, rt0.c3, rt0.c5, rt0.c0)) AND ((rt0.c2, v0.c0, rt0.c3, '1124378805', rt0.c1))))+(rt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt0.c5, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM v0 INNER JOIN rt0 ON CAST(rt0.c3 AS INTEGER);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0)>>(x''))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0)>>(x''))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)>>(x''))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c2, v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON CAST(rt0.c1 COLLATE BINARY AS BLOB) GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2, v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON CAST(rt0.c1 COLLATE BINARY AS BLOB) GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, v0.c0 HAVING GROUP_CONCAT(((TOTAL(rt0.c2))>>(COUNT(*)))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c2, v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON CAST(rt0.c1 COLLATE BINARY AS BLOB) GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, v0.c0 HAVING (NOT (GROUP_CONCAT(((TOTAL(rt0.c2))>>(COUNT(*)))))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2, v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON CAST(rt0.c1 COLLATE BINARY AS BLOB) GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, v0.c0 HAVING ((GROUP_CONCAT(((TOTAL(rt0.c2))>>(COUNT(*))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (HEX(x'9915')) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (HEX(x'9915')))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((HEX(x'9915')) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((x'85e1bcc0') IS FALSE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((x'85e1bcc0') IS FALSE)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((x'85e1bcc0') IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c2 FROM rt0, v0 WHERE (CAST(((0.6422391360860814) NOT BETWEEN (rt0.c2) AND (rt0.c5)) AS BLOB)) GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c2 UNION SELECT rt0.c1, rt0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c2 FROM rt0, v0 WHERE ((NOT (CAST(((0.6422391360860814) NOT BETWEEN (rt0.c2) AND (rt0.c5)) AS BLOB)))) GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c2 UNION SELECT rt0.c1, rt0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c2 FROM rt0, v0 WHERE (((CAST(((0.6422391360860814) NOT BETWEEN (rt0.c2) AND (rt0.c5)) AS BLOB)) ISNULL)) GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c2;
SELECT ALL rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4;
SELECT ALL rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4 HAVING ((((COUNT(MAX(AVG(MIN(rt0.c5)))))AND(((AVG(rt0.c1))>(AVG(rt0.c3))))))AND(COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4 HAVING (NOT (((((COUNT(MAX(AVG(MIN(rt0.c5)))))AND(((AVG(rt0.c1))>(AVG(rt0.c3))))))AND(COUNT(*))))) UNION ALL SELECT rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4 HAVING ((((((COUNT(MAX(AVG(MIN(rt0.c5)))))AND(((AVG(rt0.c1))>(AVG(rt0.c3))))))AND(COUNT(*)))) ISNULL);
SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c1) NOTNULL) IN (((((rt0.c1)AND(rt0.c5)))AND(rt0.c2))));
SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c1) NOTNULL) IN (((((rt0.c1)AND(rt0.c5)))AND(rt0.c2)))) WHERE (UNLIKELY(1.130877485E9)) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c1) NOTNULL) IN (((((rt0.c1)AND(rt0.c5)))AND(rt0.c2)))) WHERE ((NOT (UNLIKELY(1.130877485E9)))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c1) NOTNULL) IN (((((rt0.c1)AND(rt0.c5)))AND(rt0.c2)))) WHERE (((UNLIKELY(1.130877485E9)) ISNULL));
SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c1) NOTNULL) IN (((((rt0.c1)AND(rt0.c5)))AND(rt0.c2))));
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((0.3859900338507378)OR(((rt0.c2)*(rt0.c0)))))AND(0.8038373127563093))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((0.3859900338507378)OR(((rt0.c2)*(rt0.c0)))))AND(0.8038373127563093))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((0.3859900338507378)OR(((rt0.c2)*(rt0.c0)))))AND(0.8038373127563093))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c5, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c5, rt0.c0, rt0.c4, rt0.c2, rt0.c3;
SELECT ALL rt0.c5, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS INTEGER)) GROUP BY rt0.c5, rt0.c0, rt0.c4, rt0.c2, rt0.c3 UNION SELECT rt0.c5, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (CAST(rt0.c1 COLLATE RTRIM AS INTEGER)))) GROUP BY rt0.c5, rt0.c0, rt0.c4, rt0.c2, rt0.c3 UNION SELECT rt0.c5, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE (((CAST(rt0.c1 COLLATE RTRIM AS INTEGER)) ISNULL)) GROUP BY rt0.c5, rt0.c0, rt0.c4, rt0.c2, rt0.c3;
SELECT ALL rt0.c5, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c5, rt0.c0, rt0.c4, rt0.c2, rt0.c3;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(AVG(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(AVG(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(AVG(v0.c0))) ISNULL);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (rt0.c3 COLLATE BINARY IN ((((rt0.c4))<>((v0.c0)))));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (rt0.c3 COLLATE BINARY IN ((((rt0.c4))!=((v0.c0))))) WHERE (((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3))) IS FALSE)) ORDER BY ((((v0.c0)!=(rt0.c1)))IS(((rt0.c5) BETWEEN (0.04474305431273018) AND (rt0.c5)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON (rt0.c3 COLLATE BINARY IN ((((rt0.c4))<>((v0.c0))))) WHERE ((NOT (((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3))) IS FALSE)))) ORDER BY ((((v0.c0)!=(rt0.c1)))IS(((rt0.c5) BETWEEN (0.04474305431273018) AND (rt0.c5)))) ASC  NULLS LAST;
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (rt0.c3 COLLATE BINARY IN ((((rt0.c4))!=((v0.c0))))) WHERE (((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3))) IS FALSE)) ISNULL)) ORDER BY ((((v0.c0)<>(rt0.c1)))IS(((rt0.c5) BETWEEN (0.04474305431273018) AND (rt0.c5)))) ASC  NULLS LAST;
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (rt0.c3 COLLATE BINARY IN ((((rt0.c4))<>((v0.c0)))));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC))GLOB((((v0.c0, '-336981641', v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((CAST(v0.c0 AS NUMERIC))GLOB((((v0.c0, '-336981641', v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))))) UNION SELECT DISTINCT * FROM v0 NOT INDEXED WHERE (((((CAST(v0.c0 AS NUMERIC))GLOB((((v0.c0, '-336981641', v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c3, rt0.c5, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON UPPER(((rt0.c2)||(v0.c0))) GROUP BY rt0.c3, rt0.c5, rt0.c4;
SELECT rt0.c3, rt0.c5, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON UPPER(((rt0.c2)||(v0.c0))) WHERE ((rt0.c3 IN ()) COLLATE RTRIM) GROUP BY rt0.c3, rt0.c5, rt0.c4 UNION SELECT rt0.c3, rt0.c5, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON UPPER(((rt0.c2)||(v0.c0))) WHERE ((NOT ((rt0.c3 IN ()) COLLATE RTRIM))) GROUP BY rt0.c3, rt0.c5, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c5, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON UPPER(((rt0.c2)||(v0.c0))) WHERE ((((rt0.c3 IN ()) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c3, rt0.c5, rt0.c4;
SELECT rt0.c3, rt0.c5, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON UPPER(((rt0.c2)||(v0.c0))) GROUP BY rt0.c3, rt0.c5, rt0.c4;
SELECT ALL rt0.c1, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c3 HAVING TOTAL(TOTAL(rt0.c2)) UNION ALL SELECT rt0.c1, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c3 HAVING (NOT (TOTAL(TOTAL(rt0.c2)))) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c3 HAVING ((TOTAL(TOTAL(rt0.c2))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (CAST(((v0.c0) NOTNULL) AS TEXT)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (CAST(((v0.c0) NOTNULL) AS TEXT)))) UNION ALL SELECT * FROM v0 WHERE (((CAST(((v0.c0) NOTNULL) AS TEXT)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0, (v0.c0 IN ()), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS NUMERIC), '994496181'))<=((((v0.c0) IS TRUE), CAST(v0.c0 AS NUMERIC), v0.c0, ((NULL)>>(v0.c0)), (v0.c0 IN (v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0, (v0.c0 IN ()), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS NUMERIC), '994496181'))<=((((v0.c0) IS TRUE), CAST(v0.c0 AS NUMERIC), v0.c0, ((NULL)>>(v0.c0)), (v0.c0 IN (v0.c0)))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0, (v0.c0 IN ()), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS NUMERIC), '994496181'))<=((((v0.c0) IS TRUE), CAST(v0.c0 AS NUMERIC), v0.c0, ((NULL)>>(v0.c0)), (v0.c0 IN (v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c0, rt0.c5, rt0.c4, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c5, rt0.c4, rt0.c1;
SELECT ALL rt0.c0, rt0.c5, rt0.c4, rt0.c1 FROM v0, rt0 WHERE ((+ (CAST(rt0.c0 AS REAL)))) GROUP BY rt0.c0, rt0.c5, rt0.c4, rt0.c1 UNION SELECT rt0.c0, rt0.c5, rt0.c4, rt0.c1 FROM v0, rt0 WHERE ((NOT ((+ (CAST(rt0.c0 AS REAL)))))) GROUP BY rt0.c0, rt0.c5, rt0.c4, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c5, rt0.c4, rt0.c1 FROM v0, rt0 WHERE ((((+ (CAST(rt0.c0 AS REAL)))) ISNULL)) GROUP BY rt0.c0, rt0.c5, rt0.c4, rt0.c1;
SELECT ALL rt0.c0, rt0.c5, rt0.c4, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c5, rt0.c4, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4;
SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4 HAVING MIN(GROUP_CONCAT(TOTAL(GROUP_CONCAT(rt0.c3)))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4 HAVING (NOT (MIN(GROUP_CONCAT(TOTAL(GROUP_CONCAT(rt0.c3)))))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4 HAVING ((MIN(GROUP_CONCAT(TOTAL(GROUP_CONCAT(rt0.c3))))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c5 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c5 FROM rt0 WHERE (((((rt0.c5) NOT NULL)) IS FALSE)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c5 FROM rt0 WHERE ((NOT (((((rt0.c5) NOT NULL)) IS FALSE)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c5 FROM rt0 WHERE (((((((rt0.c5) NOT NULL)) IS FALSE)) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c5 FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE WHEN (v0.c0 IN (v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE 0.12306102402678176 END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN (v0.c0 IN (v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE 0.12306102402678176 END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE WHEN (v0.c0 IN (v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE 0.12306102402678176 END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) ISNULL))>((((v0.c0, v0.c0, v0.c0))=(('''V*', v0.c0, v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) ISNULL))>((((v0.c0, v0.c0, v0.c0))==(('''V*', v0.c0, v0.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0) ISNULL))>((((v0.c0, v0.c0, v0.c0))=(('''V*', v0.c0, v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c5, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c5, rt0.c2, rt0.c4;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c5, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c5, rt0.c2, rt0.c4 HAVING (((((- (GROUP_CONCAT(SUM(MIN(SUM(rt0.c5)))))))OR(SUM(rt0.c0))))AND(SUM(rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c5, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c5, rt0.c2, rt0.c4 HAVING (NOT ((((((- (GROUP_CONCAT(SUM(MIN(SUM(rt0.c5)))))))OR(SUM(rt0.c0))))AND(SUM(rt0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c5, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c5, rt0.c2, rt0.c4 HAVING (((((((- (GROUP_CONCAT(SUM(MIN(SUM(rt0.c5)))))))OR(SUM(rt0.c0))))AND(SUM(rt0.c0)))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c2)))GLOB(CAST(rt0.c3 AS REAL)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((+ (rt0.c2)))GLOB(CAST(rt0.c3 AS REAL)))))) UNION ALL SELECT * FROM rt0 WHERE ((((((+ (rt0.c2)))GLOB(CAST(rt0.c3 AS REAL)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN v0 WHERE (CASE rt0.c5 COLLATE NOCASE  WHEN (rt0.c3 IN (rt0.c5, rt0.c0)) THEN rt0.c1 ELSE CAST(rt0.c3 AS REAL) END) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN v0 WHERE ((NOT (CASE rt0.c5 COLLATE NOCASE  WHEN (rt0.c3 IN (rt0.c5, rt0.c0)) THEN rt0.c1 ELSE CAST(rt0.c3 AS REAL) END))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN v0 WHERE (((CASE rt0.c5 COLLATE NOCASE  WHEN (rt0.c3 IN (rt0.c5, rt0.c0)) THEN rt0.c1 ELSE CAST(rt0.c3 AS REAL) END) ISNULL));
SELECT DISTINCT * FROM rt0 NATURAL JOIN v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0))<=((v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0))<=((v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0))<=((v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1 HAVING v0.c0 UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1 HAVING ((v0.c0) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1 HAVING v0.c0 UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1 HAVING ((v0.c0) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((((v0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((((v0.c0) ISNULL))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((((v0.c0) ISNULL))))))) UNION ALL SELECT * FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((((v0.c0) ISNULL))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c3 FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT rt0.c3 FROM rt0 NATURAL JOIN v0 WHERE (CASE rt0.c3 COLLATE NOCASE  WHEN (- (rt0.c0)) THEN rt0.c4 ELSE ((rt0.c5)IS NOT(rt0.c4)) END) UNION SELECT DISTINCT rt0.c3 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (CASE rt0.c3 COLLATE NOCASE  WHEN (- (rt0.c0)) THEN rt0.c4 ELSE ((rt0.c5)IS NOT(rt0.c4)) END))) UNION SELECT DISTINCT rt0.c3 FROM rt0 NATURAL JOIN v0 WHERE (((CASE rt0.c3 COLLATE NOCASE  WHEN (- (rt0.c0)) THEN rt0.c4 ELSE ((rt0.c5)IS NOT(rt0.c4)) END) ISNULL));
SELECT DISTINCT rt0.c3 FROM rt0 NATURAL JOIN v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(v0.c0 COLLATE BINARY AS NUMERIC)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(v0.c0 COLLATE BINARY AS NUMERIC)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST(v0.c0 COLLATE BINARY AS NUMERIC)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0 HAVING NULL UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0 HAVING NULL UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((+ (CAST(v0.c0 AS INTEGER)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((+ (CAST(v0.c0 AS INTEGER)))))) UNION ALL SELECT * FROM v0 WHERE ((((+ (CAST(v0.c0 AS INTEGER)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ('1429379167') UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ('1429379167'))) UNION SELECT DISTINCT * FROM v0 WHERE ((('1429379167') ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c1;
SELECT rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM rt0 WHERE (((((rt0.c2) NOT NULL)) NOT BETWEEN ('3~') AND (((((rt0.c3)AND(rt0.c4)))AND(rt0.c1))))) GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2) NOT NULL)) NOT BETWEEN ('3~') AND (((((rt0.c3)AND(rt0.c4)))AND(rt0.c1))))))) GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM rt0 WHERE (((((((rt0.c2) NOT NULL)) NOT BETWEEN ('3~') AND (((((rt0.c3)AND(rt0.c4)))AND(rt0.c1))))) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c1;
SELECT rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c1;
SELECT rt0.c3 FROM rt0 CROSS JOIN v0 ON (((((rt0.c0))==((rt0.c5)))) IS TRUE) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 CROSS JOIN v0 ON (((((rt0.c0))==((rt0.c5)))) IS TRUE) GROUP BY rt0.c3 HAVING AVG(SUBSTR(MAX(GROUP_CONCAT(TOTAL(rt0.c2))), MIN(GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT rt0.c3 FROM rt0 CROSS JOIN v0 ON (((((rt0.c0))==((rt0.c5)))) IS TRUE) GROUP BY rt0.c3 HAVING (NOT (AVG(SUBSTR(MAX(GROUP_CONCAT(TOTAL(rt0.c2))), MIN(GROUP_CONCAT(rt0.c1)))))) UNION ALL SELECT ALL rt0.c3 FROM rt0 CROSS JOIN v0 ON (((((rt0.c0))==((rt0.c5)))) IS TRUE) GROUP BY rt0.c3 HAVING ((AVG(SUBSTR(MAX(GROUP_CONCAT(TOTAL(rt0.c2))), MIN(GROUP_CONCAT(rt0.c1))))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0)<<(v0.c0)))) AND ((((NULL)=(v0.c0)))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((((v0.c0)<<(v0.c0)))) AND ((((NULL)==(v0.c0)))))))) UNION ALL SELECT * FROM v0 WHERE ((((((v0.c0)) BETWEEN ((((v0.c0)<<(v0.c0)))) AND ((((NULL)=(v0.c0)))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c2, rt0.c5, rt0.c4, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c5, rt0.c4, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 WHERE ('-1642990959') UNION SELECT DISTINCT rt0.c2, rt0.c5, rt0.c4, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 WHERE ((NOT ('-1642990959'))) UNION SELECT DISTINCT rt0.c2, rt0.c5, rt0.c4, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 WHERE ((('-1642990959') ISNULL));
SELECT DISTINCT rt0.c2, rt0.c5, rt0.c4, rt0.c3, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0;
SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c3 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c3 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c3;
SELECT rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4;
SELECT rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4 HAVING LIKELY(GROUP_CONCAT(SUM(rt0.c3))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4 HAVING (NOT (LIKELY(GROUP_CONCAT(SUM(rt0.c3))))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4 HAVING ((LIKELY(GROUP_CONCAT(SUM(rt0.c3)))) ISNULL);
SELECT MAX(((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ('-969665198') AND (LIKELIHOOD(v0.c0, 0.6981410166334252)))) FROM v0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((NOT (rt0.c2)))>>(((rt0.c3) ISNULL)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((NOT (rt0.c2)))>>(((rt0.c3) ISNULL)))))) UNION ALL SELECT * FROM rt0 WHERE ((((((NOT (rt0.c2)))>>(((rt0.c3) ISNULL)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (CAST(((rt0.c0)IS NOT(v0.c0)) AS REAL)) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (CAST(((rt0.c0)IS NOT(v0.c0)) AS REAL)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((CAST(((rt0.c0)IS NOT(v0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT v0.c0, rt0.c5, rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c5, rt0.c4, rt0.c1;
SELECT ALL v0.c0, rt0.c5, rt0.c4, rt0.c1 FROM rt0, v0 WHERE (CAST((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))) AS INTEGER)) GROUP BY v0.c0, rt0.c5, rt0.c4, rt0.c1 UNION SELECT v0.c0, rt0.c5, rt0.c4, rt0.c1 FROM rt0, v0 WHERE ((NOT (CAST((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))) AS INTEGER)))) GROUP BY v0.c0, rt0.c5, rt0.c4, rt0.c1 UNION SELECT v0.c0, rt0.c5, rt0.c4, rt0.c1 FROM rt0, v0 WHERE (((CAST((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))) AS INTEGER)) ISNULL)) GROUP BY v0.c0, rt0.c5, rt0.c4, rt0.c1;
SELECT v0.c0, rt0.c5, rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c5, rt0.c4, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(CASE v0.c0  WHEN GROUP_CONCAT(COUNT(v0.c0)) THEN AVG(v0.c0) ELSE AVG(SUM(v0.c0)) END AS TEXT) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(CASE v0.c0  WHEN GROUP_CONCAT(COUNT(v0.c0)) THEN AVG(v0.c0) ELSE AVG(SUM(v0.c0)) END AS TEXT))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(CASE v0.c0  WHEN GROUP_CONCAT(COUNT(v0.c0)) THEN AVG(v0.c0) ELSE AVG(SUM(v0.c0)) END AS TEXT)) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0)LIKE(rt0.c5)) IN (0.5733531025391615))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT ((((rt0.c0)LIKE(rt0.c5)) IN (0.5733531025391615))))) UNION ALL SELECT * FROM v0, rt0 WHERE ((((((rt0.c0)LIKE(rt0.c5)) IN (0.5733531025391615))) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((v0.c0 IN ()) COLLATE BINARY) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((v0.c0 IN ()) COLLATE BINARY))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0 IN ()) COLLATE BINARY) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c3 FROM v0, rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM v0, rt0 WHERE (rt0.c2 COLLATE NOCASE) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM v0 NOT INDEXED, rt0 WHERE ((NOT (rt0.c2 COLLATE NOCASE))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM v0, rt0 WHERE (((rt0.c2 COLLATE NOCASE) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM v0, rt0 GROUP BY rt0.c3;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(CASE WHEN v0.c0 THEN v0.c0 ELSE AVG(AVG(v0.c0)) END) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(CASE WHEN v0.c0 THEN v0.c0 ELSE AVG(AVG(v0.c0)) END))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(CASE WHEN v0.c0 THEN v0.c0 ELSE AVG(AVG(v0.c0)) END)) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (SQLITE_SOURCE_ID()) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (SQLITE_SOURCE_ID()))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((SQLITE_SOURCE_ID()) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c4, rt0.c5, rt0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c4, rt0.c5, rt0.c0 FROM v0, rt0 WHERE ((((((((((rt0.c1 IN ()))OR(rt0.c1)))AND(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR((((rt0.c1, 'uI', v0.c0)) BETWEEN ((rt0.c3, 0.38717439519458496, rt0.c4)) AND ((rt0.c0, rt0.c0, rt0.c3))))))AND((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c4, rt0.c5, rt0.c0 FROM v0, rt0 WHERE ((NOT ((((((((((rt0.c1 IN ()))OR(rt0.c1)))AND(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR((((rt0.c1, 'uI', v0.c0)) BETWEEN ((rt0.c3, 0.38717439519458496, rt0.c4)) AND ((rt0.c0, rt0.c0, rt0.c3))))))AND((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c4, rt0.c5, rt0.c0 FROM v0, rt0 WHERE ((((((((((((rt0.c1 IN ()))OR(rt0.c1)))AND(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR((((rt0.c1, 'uI', v0.c0)) BETWEEN ((rt0.c3, 0.38717439519458496, rt0.c4)) AND ((rt0.c0, rt0.c0, rt0.c3))))))AND((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c4, rt0.c5, rt0.c0 FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0)<<(v0.c0)))>=((~ (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)<<(v0.c0)))>=((~ (v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)<<(v0.c0)))>=((~ (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c5, rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c5, rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c5, rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c5, rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4 HAVING (rt0.c3 IN ()) COLLATE RTRIM UNION ALL SELECT rt0.c5, rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c5, rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4 HAVING (NOT ((rt0.c3 IN ()) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c5, rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c5, rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4 HAVING (((rt0.c3 IN ()) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c5, rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c5, rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c5, rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c5, rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4 HAVING (rt0.c3 IN ()) COLLATE RTRIM UNION ALL SELECT rt0.c5, rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c5, rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4 HAVING (NOT ((rt0.c3 IN ()) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c5, rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c5, rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4 HAVING (((rt0.c3 IN ()) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c5, rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c5, rt0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c4;
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c5) IS TRUE))<(ROUND(rt0.c0, rt0.c1)))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (((((rt0.c5) IS TRUE))<(ROUND(rt0.c0, rt0.c1)))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((((((rt0.c5) IS TRUE))<(ROUND(rt0.c0, rt0.c1)))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 WHERE (rt0.c4) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 WHERE ((NOT (rt0.c4))) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 WHERE (((rt0.c4) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM v0, rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c5 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c5;
SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c5 FROM rt0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN ((rt0.c2)=(rt0.c0)) WHEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 WHEN 1348406179 THEN rt0.c2 ELSE rt0.c4 END THEN UNLIKELY(DISTINCT rt0.c5) WHEN (rt0.c2 IN ()) THEN rt0.c3 COLLATE BINARY ELSE CASE rt0.c5  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END END) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c5 UNION SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c5 FROM rt0 WHERE ((NOT (CASE WHEN (rt0.c1 IN ()) THEN ((rt0.c2)==(rt0.c0)) WHEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 WHEN 1348406179 THEN rt0.c2 ELSE rt0.c4 END THEN UNLIKELY(DISTINCT rt0.c5) WHEN (rt0.c2 IN ()) THEN rt0.c3 COLLATE BINARY ELSE CASE rt0.c5  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END END))) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c5 UNION SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c5 FROM rt0 WHERE (((CASE WHEN (rt0.c1 IN ()) THEN ((rt0.c2)=(rt0.c0)) WHEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 WHEN 1348406179 THEN rt0.c2 ELSE rt0.c4 END THEN UNLIKELY(DISTINCT rt0.c5) WHEN (rt0.c2 IN ()) THEN rt0.c3 COLLATE BINARY ELSE CASE rt0.c5  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END END) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c5;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c5 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c5;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(v0.c0)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(v0.c0)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c5, rt0.c1 FROM rt0;
SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c5, rt0.c1 FROM rt0 WHERE ((((((NOT (rt0.c2)))OR(((((rt0.c2)OR(rt0.c3)))AND(rt0.c4)))))AND(rt0.c0))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c5, rt0.c1 FROM rt0 WHERE ((NOT ((((((NOT (rt0.c2)))OR(((((rt0.c2)OR(rt0.c3)))AND(rt0.c4)))))AND(rt0.c0))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c5, rt0.c1 FROM rt0 WHERE ((((((((NOT (rt0.c2)))OR(((((rt0.c2)OR(rt0.c3)))AND(rt0.c4)))))AND(rt0.c0))) ISNULL));
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c5, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0)>>(((v0.c0)GLOB(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0)>>(((v0.c0)GLOB(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)>>(((v0.c0)GLOB(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((CAST(v0.c0 AS TEXT)))=(((+ (v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((CAST(v0.c0 AS TEXT)))=(((+ (v0.c0)))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((CAST(v0.c0 AS TEXT)))==(((+ (v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING CASE WHEN AVG(rt0.c1) THEN COUNT(*) WHEN TOTAL('1676584293') THEN ((NULL)>>(rt0.c3)) WHEN MIN(rt0.c2) THEN rt0.c0 WHEN (MIN(MIN(rt0.c0)) IN (MAX(rt0.c2))) THEN COUNT(*) WHEN TOTAL(GROUP_CONCAT(rt0.c0)) THEN rt0.c3 END UNION ALL SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (NOT (CASE WHEN AVG(rt0.c1) THEN COUNT(*) WHEN TOTAL('1676584293') THEN ((NULL)>>(rt0.c3)) WHEN MIN(rt0.c2) THEN rt0.c0 WHEN (MIN(MIN(rt0.c0)) IN (MAX(rt0.c2))) THEN COUNT(*) WHEN TOTAL(GROUP_CONCAT(rt0.c0)) THEN rt0.c3 END)) UNION ALL SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING ((CASE WHEN AVG(rt0.c1) THEN COUNT(*) WHEN TOTAL('1676584293') THEN ((NULL)>>(rt0.c3)) WHEN MIN(rt0.c2) THEN rt0.c0 WHEN (MIN(MIN(rt0.c0)) IN (MAX(rt0.c2))) THEN COUNT(*) WHEN TOTAL(GROUP_CONCAT(rt0.c0)) THEN rt0.c3 END) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (rt0.c1) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((rt0.c1) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((CAST(v0.c0 AS INTEGER)) ISNULL)) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((CAST(v0.c0 AS INTEGER)) ISNULL)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((CAST(v0.c0 AS INTEGER)) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c5, rt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c0 FROM v0, rt0 GROUP BY rt0.c5, rt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c0;
SELECT ALL rt0.c5, rt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c0 FROM v0, rt0 WHERE (TRIM(rt0.c2) COLLATE BINARY) GROUP BY rt0.c5, rt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c0 UNION SELECT ALL rt0.c5, rt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c0 FROM v0, rt0 WHERE ((NOT (TRIM(rt0.c2) COLLATE BINARY))) GROUP BY rt0.c5, rt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c0 UNION SELECT ALL rt0.c5, rt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c0 FROM v0, rt0 WHERE (((TRIM(rt0.c2) COLLATE BINARY) ISNULL)) GROUP BY rt0.c5, rt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c0;
SELECT rt0.c5, rt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c0 FROM v0, rt0 GROUP BY rt0.c5, rt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((v0.c0) IS TRUE) COLLATE BINARY) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((v0.c0) IS TRUE) COLLATE BINARY))) UNION ALL SELECT * FROM v0 WHERE (((((v0.c0) IS TRUE) COLLATE BINARY) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON ((((((((rt0.c1)OR(rt0.c5)))AND('2113232247')))AND(NULL)))AND(UNLIKELY(rt0.c2)));
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON ((((((((rt0.c1)OR(rt0.c5)))AND('2113232247')))AND(NULL)))AND(UNLIKELY(rt0.c2))) WHERE ((+ (UPPER(DISTINCT rt0.c2)))) UNION SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON ((((((((rt0.c1)OR(rt0.c5)))AND('2113232247')))AND(NULL)))AND(UNLIKELY(rt0.c2))) WHERE ((NOT ((+ (UPPER(DISTINCT rt0.c2)))))) UNION SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON ((((((((rt0.c1)OR(rt0.c5)))AND('2113232247')))AND(NULL)))AND(UNLIKELY(rt0.c2))) WHERE ((((+ (UPPER(DISTINCT rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON ((((((((rt0.c1)OR(rt0.c5)))AND('2113232247')))AND(NULL)))AND(UNLIKELY(rt0.c2)));
SELECT v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 WHERE (((NULL) NOT BETWEEN (rt0.c5) AND (CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN v0.c0 WHEN rt0.c5 THEN rt0.c4 ELSE rt0.c2 END))) GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1, rt0.c0 UNION SELECT v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 WHERE ((NOT (((NULL) NOT BETWEEN (rt0.c5) AND (CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN v0.c0 WHEN rt0.c5 THEN rt0.c4 ELSE rt0.c2 END))))) GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 WHERE (((((NULL) NOT BETWEEN (rt0.c5) AND (CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN v0.c0 WHEN rt0.c5 THEN rt0.c4 ELSE rt0.c2 END))) ISNULL)) GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c5 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c5;
SELECT rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c5 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c5 HAVING json_insert(SUM(AVG(rt0.c0)), MAX(MAX(rt0.c3)), GROUP_CONCAT(SUM(TOTAL(SUM(rt0.c5))))) UNION ALL SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c5 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c5 HAVING (NOT (json_insert(SUM(AVG(rt0.c0)), MAX(MAX(rt0.c3)), GROUP_CONCAT(SUM(TOTAL(SUM(rt0.c5))))))) UNION ALL SELECT rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c5 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c5 HAVING ((json_insert(SUM(AVG(rt0.c0)), MAX(MAX(rt0.c3)), GROUP_CONCAT(SUM(TOTAL(SUM(rt0.c5)))))) ISNULL);
SELECT ALL TOTAL(LIKELY(v0.c0)) FROM v0;
SELECT ALL rt0.c1, rt0.c5, rt0.c0 FROM v0, rt0;
SELECT ALL rt0.c1, rt0.c5, rt0.c0 FROM v0, rt0 WHERE (CAST(((rt0.c3) ISNULL) AS REAL)) UNION ALL SELECT rt0.c1, rt0.c5, rt0.c0 FROM v0, rt0 WHERE ((NOT (CAST(((rt0.c3) ISNULL) AS REAL)))) UNION ALL SELECT rt0.c1, rt0.c5, rt0.c0 FROM v0, rt0 WHERE (((CAST(((rt0.c3) ISNULL) AS REAL)) ISNULL));
SELECT ALL rt0.c1, rt0.c5, rt0.c0 FROM v0, rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((rt0.c5) NOT BETWEEN ('-1452615314') AND (rt0.c1)))GLOB(rt0.c0))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((rt0.c5) NOT BETWEEN ('-1452615314') AND (rt0.c1)))GLOB(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((rt0.c5) NOT BETWEEN ('-1452615314') AND (rt0.c1)))GLOB(rt0.c0))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c0, v0.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c3, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c0, v0.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c3, rt0.c2 FROM rt0, v0 WHERE (rt0.c0) GROUP BY rt0.c0, v0.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c0, v0.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c3, rt0.c2 FROM rt0, v0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c0, v0.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c0, v0.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c3, rt0.c2 FROM rt0, v0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c0, v0.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c0, v0.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c3, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c3, rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN((+ (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN((+ (v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN((+ (v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN((+ (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN((+ (v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN((+ (v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON LTRIM(CASE rt0.c0  WHEN rt0.c1 THEN x'8d2e6c6f' END, ((rt0.c5)/(rt0.c2)));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON LTRIM(CASE rt0.c0  WHEN rt0.c1 THEN x'8d2e6c6f' END, ((rt0.c5)/(rt0.c2))) WHERE ((+ ((NOT (rt0.c5))))) UNION ALL SELECT * FROM v0 LEFT OUTER JOIN rt0 ON LTRIM(CASE rt0.c0  WHEN rt0.c1 THEN x'8d2e6c6f' END, ((rt0.c5)/(rt0.c2))) WHERE ((NOT ((+ ((NOT (rt0.c5))))))) UNION ALL SELECT * FROM v0 LEFT OUTER JOIN rt0 ON LTRIM(CASE rt0.c0  WHEN rt0.c1 THEN x'8d2e6c6f' END, ((rt0.c5)/(rt0.c2))) WHERE ((((+ ((NOT (rt0.c5))))) ISNULL));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON LTRIM(CASE rt0.c0  WHEN rt0.c1 THEN x'8d2e6c6f' END, ((rt0.c5)/(rt0.c2)));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c5, rt0.c4, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c5, rt0.c4, rt0.c2 FROM rt0 WHERE (((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0))) BETWEEN (rt0.c0) AND (((rt0.c0)+(rt0.c0))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c5, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0))) BETWEEN (rt0.c0) AND (((rt0.c0)+(rt0.c0))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c5, rt0.c4, rt0.c2 FROM rt0 WHERE (((((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0))) BETWEEN (rt0.c0) AND (((rt0.c0)+(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c5, rt0.c4, rt0.c2 FROM rt0;
SELECT rt0.c3 FROM v0, rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM v0, rt0 WHERE (rt0.c1) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM v0, rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM v0, rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM v0, rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0;
SELECT ALL rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0 HAVING AVG(COUNT(v0.c0)) UNION ALL SELECT rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0 HAVING (NOT (AVG(COUNT(v0.c0)))) UNION ALL SELECT ALL rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0 HAVING ((AVG(COUNT(v0.c0))) ISNULL);
SELECT v0.c0, rt0.c1 FROM rt0, v0;
SELECT v0.c0, rt0.c1 FROM rt0, v0 WHERE (x'') UNION ALL SELECT v0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (x''))) UNION ALL SELECT v0.c0, rt0.c1 FROM rt0, v0 WHERE (((x'') ISNULL));
SELECT v0.c0, rt0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c3, rt0.c4, v0.c0, rt0.c5 FROM rt0, v0;
SELECT DISTINCT rt0.c3, rt0.c4, v0.c0, rt0.c5 FROM rt0, v0 WHERE (COALESCE(NULL, ((rt0.c5) IS FALSE), ((v0.c0)IS NOT(rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN x'e5c0' WHEN rt0.c2 THEN rt0.c5 END)) UNION SELECT DISTINCT rt0.c3, rt0.c4, v0.c0, rt0.c5 FROM rt0, v0 WHERE ((NOT (COALESCE(NULL, ((rt0.c5) IS FALSE), ((v0.c0)IS NOT(rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN x'e5c0' WHEN rt0.c2 THEN rt0.c5 END)))) UNION SELECT DISTINCT rt0.c3, rt0.c4, v0.c0, rt0.c5 FROM rt0, v0 WHERE (((COALESCE(NULL, ((rt0.c5) IS FALSE), ((v0.c0)IS NOT(rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN x'e5c0' WHEN rt0.c2 THEN rt0.c5 END)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4, v0.c0, rt0.c5 FROM rt0, v0;
SELECT rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c5, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c5, rt0.c0;
SELECT rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c5, rt0.c0 FROM rt0, v0 WHERE (MAX(x'', x'', rt0.c2 COLLATE BINARY, CAST(rt0.c3 AS REAL))) GROUP BY rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c5, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c5, rt0.c0 FROM rt0, v0 WHERE ((NOT (MAX(x'', x'', rt0.c2 COLLATE BINARY, CAST(rt0.c3 AS REAL))))) GROUP BY rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c5, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c5, rt0.c0 FROM rt0, v0 WHERE (((MAX(x'', x'', rt0.c2 COLLATE BINARY, CAST(rt0.c3 AS REAL))) ISNULL)) GROUP BY rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c5, rt0.c0;
SELECT rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c5, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c5, rt0.c0;
SELECT rt0.c1, rt0.c4, rt0.c0 FROM rt0 CROSS JOIN v0 ON rt0.c2 GROUP BY rt0.c1, rt0.c4, rt0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM rt0 CROSS JOIN v0 ON rt0.c2 GROUP BY rt0.c1, rt0.c4, rt0.c0 HAVING (CAST(GROUP_CONCAT(TOTAL(SUM(rt0.c3))) AS INTEGER) IN ()) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM rt0 CROSS JOIN v0 ON rt0.c2 GROUP BY rt0.c1, rt0.c4, rt0.c0 HAVING (NOT ((CAST(GROUP_CONCAT(TOTAL(SUM(rt0.c3))) AS INTEGER) IN ()))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM rt0 CROSS JOIN v0 ON rt0.c2 GROUP BY rt0.c1, rt0.c4, rt0.c0 HAVING (((CAST(GROUP_CONCAT(TOTAL(SUM(rt0.c3))) AS INTEGER) IN ())) ISNULL);
SELECT rt0.c1, rt0.c4, rt0.c0 FROM rt0 CROSS JOIN v0 ON rt0.c2 GROUP BY rt0.c1, rt0.c4, rt0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM rt0 CROSS JOIN v0 ON rt0.c2 GROUP BY rt0.c1, rt0.c4, rt0.c0 HAVING (CAST(GROUP_CONCAT(TOTAL(SUM(rt0.c3))) AS INTEGER) IN ()) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM rt0 CROSS JOIN v0 ON rt0.c2 GROUP BY rt0.c1, rt0.c4, rt0.c0 HAVING (NOT ((CAST(GROUP_CONCAT(TOTAL(SUM(rt0.c3))) AS INTEGER) IN ()))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM rt0 CROSS JOIN v0 ON rt0.c2 GROUP BY rt0.c1, rt0.c4, rt0.c0 HAVING (((CAST(GROUP_CONCAT(TOTAL(SUM(rt0.c3))) AS INTEGER) IN ())) ISNULL);
SELECT rt0.c1, rt0.c4, rt0.c0 FROM rt0 CROSS JOIN v0 ON rt0.c2 GROUP BY rt0.c1, rt0.c4, rt0.c0;
SELECT MAX(SQLITE_COMPILEOPTION_USED((- (0.943491136085041)))) FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))==((((v0.c0))>=((v0.c0))))) ASC  NULLS LAST, (((((((((((v0.c0))!=((v0.c0))))OR(COALESCE('', v0.c0, v0.c0, '1926243006'))))OR((0.19008929262802832 IN ()))))OR(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR('-0.0')))AND(v0.c0)))))OR((v0.c0 IN ()))) DESC;
SELECT ALL rt0.c0, rt0.c5, rt0.c2, rt0.c3, rt0.c4, v0.c0, rt0.c1 FROM v0, rt0;
SELECT rt0.c0, rt0.c5, rt0.c2, rt0.c3, rt0.c4, v0.c0, rt0.c1 FROM v0, rt0 WHERE (((rt0.c4 COLLATE NOCASE) BETWEEN (((rt0.c5)IS(v0.c0))) AND (((v0.c0) IS FALSE)))) UNION ALL SELECT ALL rt0.c0, rt0.c5, rt0.c2, rt0.c3, rt0.c4, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (((rt0.c4 COLLATE NOCASE) BETWEEN (((rt0.c5)IS(v0.c0))) AND (((v0.c0) IS FALSE)))))) UNION ALL SELECT rt0.c0, rt0.c5, rt0.c2, rt0.c3, rt0.c4, v0.c0, rt0.c1 FROM v0, rt0 WHERE (((((rt0.c4 COLLATE NOCASE) BETWEEN (((rt0.c5)IS(v0.c0))) AND (((v0.c0) IS FALSE)))) ISNULL));
SELECT ALL rt0.c0, rt0.c5, rt0.c2, rt0.c3, rt0.c4, v0.c0, rt0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c3, rt0.c4, v0.c0, rt0.c1, rt0.c5 FROM v0, rt0;
SELECT DISTINCT rt0.c3, rt0.c4, v0.c0, rt0.c1, rt0.c5 FROM v0, rt0 WHERE (CAST(CAST('Bt' AS REAL) AS NUMERIC)) UNION SELECT DISTINCT rt0.c3, rt0.c4, v0.c0, rt0.c1, rt0.c5 FROM v0, rt0 WHERE ((NOT (CAST(CAST('Bt' AS REAL) AS NUMERIC)))) UNION SELECT DISTINCT rt0.c3, rt0.c4, v0.c0, rt0.c1, rt0.c5 FROM v0, rt0 WHERE (((CAST(CAST('Bt' AS REAL) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4, v0.c0, rt0.c1, rt0.c5 FROM v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0)|(v0.c0)))<(CASE WHEN v0.c0 THEN v0.c0 END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)|(v0.c0)))<(CASE WHEN v0.c0 THEN v0.c0 END))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)|(v0.c0)))<(CASE WHEN v0.c0 THEN v0.c0 END))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c3, rt0.c5, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c3, rt0.c5, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c3, rt0.c5, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c3, rt0.c5, rt0.c2 HAVING ((MAX(SUM(AVG(v0.c0))))OR(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c3, rt0.c5, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c3, rt0.c5, rt0.c2 HAVING (NOT (((MAX(SUM(AVG(v0.c0))))OR(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c3, rt0.c5, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c3, rt0.c5, rt0.c2 HAVING ((((MAX(SUM(AVG(v0.c0))))OR(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 NOT INDEXED WHERE (((RTRIM(rt0.c0)) IS TRUE)) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((RTRIM(rt0.c0)) IS TRUE)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((RTRIM(rt0.c0)) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT v0.c0, rt0.c0, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON ((IFNULL(DISTINCT v0.c0, rt0.c5))/(TRIM(rt0.c5))) GROUP BY v0.c0, rt0.c0, rt0.c3;
SELECT v0.c0, rt0.c0, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON ((IFNULL(DISTINCT v0.c0, rt0.c5))/(TRIM(rt0.c5))) WHERE (((rt0.c2 IN (rt0.c3)) IN ())) GROUP BY v0.c0, rt0.c0, rt0.c3 UNION SELECT v0.c0, rt0.c0, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON ((IFNULL(DISTINCT v0.c0, rt0.c5))/(TRIM(rt0.c5))) WHERE ((NOT (((rt0.c2 IN (rt0.c3)) IN ())))) GROUP BY v0.c0, rt0.c0, rt0.c3 UNION SELECT v0.c0, rt0.c0, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON ((IFNULL(DISTINCT v0.c0, rt0.c5))/(TRIM(rt0.c5))) WHERE (((((rt0.c2 IN (rt0.c3)) IN ())) ISNULL)) GROUP BY v0.c0, rt0.c0, rt0.c3;
SELECT v0.c0, rt0.c0, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON ((IFNULL(DISTINCT v0.c0, rt0.c5))/(TRIM(rt0.c5))) GROUP BY v0.c0, rt0.c0, rt0.c3;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(NULL) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(NULL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(NULL)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(NULL) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(NULL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(NULL)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (0.6298115182290998) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (0.6298115182290998))) UNION ALL SELECT * FROM rt0, v0 WHERE (((0.6298115182290998) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c3) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0, v0 WHERE ((((((rt0.c2))!=((rt0.c4))))+((~ (v0.c0))))) GROUP BY rt0.c3, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c1 FROM rt0, v0 WHERE ((NOT ((((((rt0.c2))!=((rt0.c4))))+((~ (v0.c0))))))) GROUP BY rt0.c3, rt0.c1 UNION SELECT rt0.c3, rt0.c1 FROM rt0, v0 WHERE ((((((((rt0.c2))<>((rt0.c4))))+((~ (v0.c0))))) ISNULL)) GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1;
SELECT v0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c4;
SELECT ALL v0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c4 HAVING (MIN(rt0.c3) IN (((rt0.c0) NOT NULL))) UNION ALL SELECT v0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c4 HAVING (NOT ((MIN(rt0.c3) IN (((rt0.c0) NOT NULL))))) UNION ALL SELECT v0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c4 HAVING (((MIN(rt0.c3) IN (((rt0.c0) NOT NULL)))) ISNULL);
SELECT v0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c4;
SELECT ALL v0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c4 HAVING (MIN(rt0.c3) IN (((rt0.c0) NOT NULL))) UNION ALL SELECT v0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c4 HAVING (NOT ((MIN(rt0.c3) IN (((rt0.c0) NOT NULL))))) UNION ALL SELECT v0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c4 HAVING (((MIN(rt0.c3) IN (((rt0.c0) NOT NULL)))) ISNULL);
SELECT v0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c4;
SELECT rt0.c3 FROM rt0;
SELECT rt0.c3 FROM rt0 WHERE ((((((rt0.c0)<<(rt0.c0)), ((rt0.c2)-('1207287830')), ((rt0.c5)+(rt0.c2))))<=((CASE WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c0 END, LTRIM(rt0.c3, rt0.c1), ((rt0.c3) ISNULL))))) UNION ALL SELECT ALL rt0.c3 FROM rt0 WHERE ((NOT ((((((rt0.c0)<<(rt0.c0)), ((rt0.c2)-('1207287830')), ((rt0.c5)+(rt0.c2))))<=((CASE WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c0 END, LTRIM(rt0.c3, rt0.c1), ((rt0.c3) ISNULL))))))) UNION ALL SELECT ALL rt0.c3 FROM rt0 WHERE ((((((((rt0.c0)<<(rt0.c0)), ((rt0.c2)-('1207287830')), ((rt0.c5)+(rt0.c2))))<=((CASE WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c0 END, LTRIM(rt0.c3, rt0.c1), ((rt0.c3) ISNULL))))) ISNULL));
SELECT rt0.c3 FROM rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c5, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c5, rt0.c2, rt0.c4, rt0.c0, rt0.c3;
SELECT rt0.c5, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE ((((((NOT (rt0.c4)))AND(json_insert(rt0.c4, rt0.c3, rt0.c1))))AND(((rt0.c3) IS FALSE)))) GROUP BY rt0.c5, rt0.c2, rt0.c4, rt0.c0, rt0.c3 UNION SELECT rt0.c5, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT ((((((NOT (rt0.c4)))AND(json_insert(rt0.c4, rt0.c3, rt0.c1))))AND(((rt0.c3) IS FALSE)))))) GROUP BY rt0.c5, rt0.c2, rt0.c4, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c5, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE ((((((((NOT (rt0.c4)))AND(json_insert(rt0.c4, rt0.c3, rt0.c1))))AND(((rt0.c3) IS FALSE)))) ISNULL)) GROUP BY rt0.c5, rt0.c2, rt0.c4, rt0.c0, rt0.c3;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING CASE GROUP_CONCAT(rt0.c3)  WHEN ((rt0.c0) BETWEEN (AVG(rt0.c4)) AND (rt0.c4)) THEN (((COUNT(rt0.c0), rt0.c1, rt0.c4, GROUP_CONCAT(rt0.c4), rt0.c5)) NOT BETWEEN ((TOTAL(MAX(rt0.c3)), GROUP_CONCAT(COUNT(*)), rt0.c0, MAX(TOTAL(rt0.c2)), rt0.c4)) AND ((MAX(rt0.c5), rt0.c2, x'', MAX(rt0.c5), rt0.c1))) WHEN SUM(rt0.c3) THEN AVG(GROUP_CONCAT(rt0.c1)) WHEN MIN(SUM(rt0.c0)) THEN CASE MIN(rt0.c4)  WHEN rt0.c4 THEN COUNT(*) END END UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (CASE GROUP_CONCAT(rt0.c3)  WHEN ((rt0.c0) BETWEEN (AVG(rt0.c4)) AND (rt0.c4)) THEN (((COUNT(rt0.c0), rt0.c1, rt0.c4, GROUP_CONCAT(rt0.c4), rt0.c5)) NOT BETWEEN ((TOTAL(MAX(rt0.c3)), GROUP_CONCAT(COUNT(*)), rt0.c0, MAX(TOTAL(rt0.c2)), rt0.c4)) AND ((MAX(rt0.c5), rt0.c2, x'', MAX(rt0.c5), rt0.c1))) WHEN SUM(rt0.c3) THEN AVG(GROUP_CONCAT(rt0.c1)) WHEN MIN(SUM(rt0.c0)) THEN CASE MIN(rt0.c4)  WHEN rt0.c4 THEN COUNT(*) END END)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((CASE GROUP_CONCAT(rt0.c3)  WHEN ((rt0.c0) BETWEEN (AVG(rt0.c4)) AND (rt0.c4)) THEN (((COUNT(rt0.c0), rt0.c1, rt0.c4, GROUP_CONCAT(rt0.c4), rt0.c5)) NOT BETWEEN ((TOTAL(MAX(rt0.c3)), GROUP_CONCAT(COUNT(*)), rt0.c0, MAX(TOTAL(rt0.c2)), rt0.c4)) AND ((MAX(rt0.c5), rt0.c2, x'', MAX(rt0.c5), rt0.c1))) WHEN SUM(rt0.c3) THEN AVG(GROUP_CONCAT(rt0.c1)) WHEN MIN(SUM(rt0.c0)) THEN CASE MIN(rt0.c4)  WHEN rt0.c4 THEN COUNT(*) END END) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (x'') UNION ALL SELECT * FROM v0 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM v0 WHERE (((x'') ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((CASE rt0.c2  WHEN 0.996776390209582 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c3 END) IS TRUE)) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((CASE rt0.c2  WHEN 0.996776390209582 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c3 END) IS TRUE)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((CASE rt0.c2  WHEN 0.996776390209582 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c3 END) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c1, rt0.c5, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c5, rt0.c0;
SELECT ALL rt0.c1, rt0.c5, rt0.c0 FROM rt0 WHERE (NULL) GROUP BY rt0.c1, rt0.c5, rt0.c0 UNION SELECT rt0.c1, rt0.c5, rt0.c0 FROM rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c1, rt0.c5, rt0.c0 UNION SELECT rt0.c1, rt0.c5, rt0.c0 FROM rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c1, rt0.c5, rt0.c0;
SELECT ALL rt0.c1, rt0.c5, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c5, rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT rt0.c2, v0.c0, rt0.c0 FROM rt0, v0;
SELECT rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 WHERE (0.7380072012253173) UNION ALL SELECT rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 WHERE ((NOT (0.7380072012253173))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 WHERE (((0.7380072012253173) ISNULL));
SELECT rt0.c2, v0.c0, rt0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c5 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c5;
SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c5 FROM v0, rt0 WHERE (((((NOT (0.3085191280654158))))<>((rt0.c2 COLLATE BINARY)))) GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c5 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c5 FROM v0, rt0 WHERE ((NOT (((((NOT (0.3085191280654158))))!=((rt0.c2 COLLATE BINARY)))))) GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c5 UNION SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c5 FROM v0, rt0 WHERE (((((((NOT (0.3085191280654158))))!=((rt0.c2 COLLATE BINARY)))) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c5;
SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c5 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c5;
SELECT ALL rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, v0.c0;
SELECT ALL rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, v0.c0 HAVING NULL UNION ALL SELECT rt0.c2, rt0.c4, v0.c0 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c2, rt0.c4, v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, v0.c0 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, v0.c0;
SELECT ALL rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, v0.c0 HAVING NULL UNION ALL SELECT rt0.c2, rt0.c4, v0.c0 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c2, rt0.c4, v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, v0.c0 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, v0.c0;
SELECT rt0.c4, rt0.c0 FROM v0, rt0;
SELECT rt0.c4, rt0.c0 FROM v0, rt0 WHERE (((NULL IN ()) IN (((rt0.c0)IS(rt0.c4))))) UNION ALL SELECT rt0.c4, rt0.c0 FROM v0, rt0 WHERE ((NOT (((NULL IN ()) IN (((rt0.c0)IS(rt0.c4))))))) UNION ALL SELECT rt0.c4, rt0.c0 FROM v0, rt0 WHERE (((((NULL IN ()) IN (((rt0.c0)IS(rt0.c4))))) ISNULL));
SELECT rt0.c4, rt0.c0 FROM v0, rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((rt0.c4 COLLATE RTRIM))>=((((rt0.c0)>>(-1254863166)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((rt0.c4 COLLATE RTRIM))>=((((rt0.c0)>>(-1254863166)))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((rt0.c4 COLLATE RTRIM))>=((((rt0.c0)>>(-1254863166)))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c4, rt0.c5, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c5, rt0.c3, rt0.c2;
SELECT rt0.c4, rt0.c5, rt0.c3, rt0.c2 FROM rt0 WHERE ((- (LIKELY(rt0.c2)))) GROUP BY rt0.c4, rt0.c5, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c5, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT ((- (LIKELY(rt0.c2)))))) GROUP BY rt0.c4, rt0.c5, rt0.c3, rt0.c2 UNION SELECT rt0.c4, rt0.c5, rt0.c3, rt0.c2 FROM rt0 WHERE ((((- (LIKELY(rt0.c2)))) ISNULL)) GROUP BY rt0.c4, rt0.c5, rt0.c3, rt0.c2;
SELECT ALL rt0.c4, rt0.c5, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c5, rt0.c3, rt0.c2;
SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0 HAVING v0.c0 UNION ALL SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0 HAVING v0.c0 UNION ALL SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0;
SELECT ALL v0.c0 FROM v0, rt0;
SELECT ALL v0.c0 FROM v0, rt0 WHERE ((((- (rt0.c0))) IS TRUE)) UNION ALL SELECT v0.c0 FROM v0, rt0 WHERE ((NOT ((((- (rt0.c0))) IS TRUE)))) UNION ALL SELECT v0.c0 FROM v0, rt0 WHERE ((((((- (rt0.c0))) IS TRUE)) ISNULL));
SELECT ALL v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c5, rt0.c2, rt0.c4, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c5, rt0.c2, rt0.c4, v0.c0 FROM rt0, v0 WHERE ((NOT (((rt0.c3)==(rt0.c3))))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c5, rt0.c2, rt0.c4, v0.c0 FROM rt0, v0 WHERE ((NOT ((NOT (((rt0.c3)==(rt0.c3))))))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c5, rt0.c2, rt0.c4, v0.c0 FROM rt0, v0 WHERE ((((NOT (((rt0.c3)==(rt0.c3))))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c5, rt0.c2, rt0.c4, v0.c0 FROM rt0, v0;
SELECT rt0.c1, rt0.c4, v0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c3;
SELECT rt0.c1, rt0.c4, v0.c0, rt0.c3 FROM v0, rt0 WHERE (json_valid(((rt0.c5)OR(rt0.c0)))) GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c3 UNION SELECT rt0.c1, rt0.c4, v0.c0, rt0.c3 FROM v0, rt0 WHERE ((NOT (json_valid(((rt0.c5)OR(rt0.c0)))))) GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c3 UNION SELECT rt0.c1, rt0.c4, v0.c0, rt0.c3 FROM v0, rt0 WHERE (((json_valid(((rt0.c5)OR(rt0.c0)))) ISNULL)) GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c3;
SELECT rt0.c1, rt0.c4, v0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c1, rt0.c5, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1, rt0.c5, rt0.c4, rt0.c3;
SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1, rt0.c5, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1, rt0.c5, rt0.c4, rt0.c3 HAVING ((((LOWER(COUNT(rt0.c2)))OR(COUNT(*) COLLATE BINARY)))OR(AVG(v0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c1, rt0.c5, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1, rt0.c5, rt0.c4, rt0.c3 HAVING (NOT (((((LOWER(COUNT(rt0.c2)))OR(COUNT(*) COLLATE BINARY)))OR(AVG(v0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c1, rt0.c5, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1, rt0.c5, rt0.c4, rt0.c3 HAVING ((((((LOWER(COUNT(rt0.c2)))OR(COUNT(*) COLLATE BINARY)))OR(AVG(v0.c0)))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c1, rt0.c5, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1, rt0.c5, rt0.c4, rt0.c3;
SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1, rt0.c5, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1, rt0.c5, rt0.c4, rt0.c3 HAVING ((((LOWER(COUNT(rt0.c2)))OR(COUNT(*) COLLATE BINARY)))OR(AVG(v0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c1, rt0.c5, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1, rt0.c5, rt0.c4, rt0.c3 HAVING (NOT (((((LOWER(COUNT(rt0.c2)))OR(COUNT(*) COLLATE BINARY)))OR(AVG(v0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c1, rt0.c5, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1, rt0.c5, rt0.c4, rt0.c3 HAVING ((((((LOWER(COUNT(rt0.c2)))OR(COUNT(*) COLLATE BINARY)))OR(AVG(v0.c0)))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c1, rt0.c5, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1, rt0.c5, rt0.c4, rt0.c3;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((+ (0.01820602340207189))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((+ (0.01820602340207189))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((+ (0.01820602340207189))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN ((((x'8e41834d'))<>((v0.c0)))) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0 IN ())) NOT BETWEEN ((((x'8e41834d'))<>((v0.c0)))) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0 IN ())) NOT BETWEEN ((((x'8e41834d'))!=((v0.c0)))) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((PRINTF(v0.c0, NULL, v0.c0))<(CAST(0.9726454125361356 AS BLOB)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((PRINTF(v0.c0, NULL, v0.c0))<(CAST(0.9726454125361356 AS BLOB)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((PRINTF(v0.c0, NULL, v0.c0))<(CAST(0.9726454125361356 AS BLOB)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c5, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c5, rt0.c3;
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c5, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c5, rt0.c3 HAVING GROUP_CONCAT(((rt0.c2) NOT NULL)) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c5, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c5, rt0.c3 HAVING (NOT (GROUP_CONCAT(((rt0.c2) NOT NULL)))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c5, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c5, rt0.c3 HAVING ((GROUP_CONCAT(((rt0.c2) NOT NULL))) ISNULL);
SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c5, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c5, rt0.c3;
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c5, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c5, rt0.c3 HAVING GROUP_CONCAT(((rt0.c2) NOT NULL)) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c5, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c5, rt0.c3 HAVING (NOT (GROUP_CONCAT(((rt0.c2) NOT NULL)))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c5, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c5, rt0.c3 HAVING ((GROUP_CONCAT(((rt0.c2) NOT NULL))) ISNULL);
SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c5, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c5, rt0.c3;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((v0.c0 IN (v0.c0)) IN ())) UNION ALL SELECT * FROM v0 WHERE ((NOT (((v0.c0 IN (v0.c0)) IN ())))) UNION ALL SELECT * FROM v0 WHERE (((((v0.c0 IN (v0.c0)) IN ())) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0))>((v0.c0))) COLLATE BINARY) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0))>((v0.c0))) COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0))>((v0.c0))) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN LTRIM(v0.c0) ELSE v0.c0 END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE WHEN v0.c0 COLLATE BINARY THEN LTRIM(v0.c0) ELSE v0.c0 END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 COLLATE BINARY THEN LTRIM(v0.c0) ELSE v0.c0 END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c4;
SELECT rt0.c1, rt0.c0, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c4 HAVING AVG(COUNT(*)) COLLATE NOCASE UNION ALL SELECT rt0.c1, rt0.c0, v0.c0, rt0.c4 FROM v0, rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c4 HAVING (NOT (AVG(COUNT(*)) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c4 HAVING ((AVG(COUNT(*)) COLLATE NOCASE) ISNULL);
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (ABS(DISTINCT CAST(rt0.c3 AS TEXT))) ORDER BY ((((rt0.c1)IS(rt0.c0))) IS FALSE)  NULLS LAST, ((CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 ELSE v0.c0 END) ISNULL), ((CAST(v0.c0 AS INTEGER))=(v0.c0)) ASC  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE ((NOT (ABS(DISTINCT CAST(rt0.c3 AS TEXT))))) ORDER BY ((((rt0.c1)IS(rt0.c0))) IS FALSE)  NULLS LAST, ((CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 ELSE v0.c0 END) ISNULL), ((CAST(v0.c0 AS INTEGER))=(v0.c0)) ASC  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE (((ABS(DISTINCT CAST(rt0.c3 AS TEXT))) ISNULL)) ORDER BY ((((rt0.c1)IS(rt0.c0))) IS FALSE)  NULLS LAST, ((CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 ELSE v0.c0 END) ISNULL), ((CAST(v0.c0 AS INTEGER))=(v0.c0)) ASC  NULLS FIRST;
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((rt0.c5)<<(x''))) NOT BETWEEN (((v0.c0) BETWEEN ('n') AND (rt0.c2))) AND (CASE WHEN rt0.c5 THEN rt0.c3 WHEN NULL THEN rt0.c5 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((rt0.c5)<<(x''))) NOT BETWEEN (((v0.c0) BETWEEN ('n') AND (rt0.c2))) AND (CASE WHEN rt0.c5 THEN rt0.c3 WHEN NULL THEN rt0.c5 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((rt0.c5)<<(x''))) NOT BETWEEN (((v0.c0) BETWEEN ('n') AND (rt0.c2))) AND (CASE WHEN rt0.c5 THEN rt0.c3 WHEN NULL THEN rt0.c5 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((('' COLLATE RTRIM)AND((v0.c0 IN ()))))AND(-1.7976931348623157E308))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((('' COLLATE RTRIM)AND((v0.c0 IN ()))))AND(-1.7976931348623157E308))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((('' COLLATE RTRIM)AND((v0.c0 IN ()))))AND(-1.7976931348623157E308))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c5, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c5, rt0.c4, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c5, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c5, rt0.c4, rt0.c0 HAVING GROUP_CONCAT(CAST(COUNT(GROUP_CONCAT(rt0.c1)) AS NUMERIC)) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c5, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c5, rt0.c4, rt0.c0 HAVING (NOT (GROUP_CONCAT(CAST(COUNT(GROUP_CONCAT(rt0.c1)) AS NUMERIC)))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c5, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c5, rt0.c4, rt0.c0 HAVING ((GROUP_CONCAT(CAST(COUNT(GROUP_CONCAT(rt0.c1)) AS NUMERIC))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c5, rt0.c3, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c5, rt0.c3, rt0.c0 FROM rt0 WHERE ((((rt0.c4)) BETWEEN ((TRIM(rt0.c1))) AND (((rt0.c4 IN (rt0.c2)))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c5, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c4)) BETWEEN ((TRIM(rt0.c1))) AND (((rt0.c4 IN (rt0.c2)))))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c5, rt0.c3, rt0.c0 FROM rt0 WHERE ((((((rt0.c4)) BETWEEN ((TRIM(rt0.c1))) AND (((rt0.c4 IN (rt0.c2)))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c5, rt0.c3, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c2, rt0.c5 FROM rt0, v0 GROUP BY rt0.c2, rt0.c5;
SELECT ALL rt0.c2, rt0.c5 FROM rt0, v0 WHERE (CAST(2.09857433E9 AS NUMERIC)) GROUP BY rt0.c2, rt0.c5 UNION SELECT ALL rt0.c2, rt0.c5 FROM rt0, v0 WHERE ((NOT (CAST(2.09857433E9 AS NUMERIC)))) GROUP BY rt0.c2, rt0.c5 UNION SELECT ALL rt0.c2, rt0.c5 FROM rt0, v0 WHERE (((CAST(2.09857433E9 AS NUMERIC)) ISNULL)) GROUP BY rt0.c2, rt0.c5;
SELECT ALL rt0.c2, rt0.c5 FROM rt0, v0 GROUP BY rt0.c2, rt0.c5;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING TOTAL((((rt0.c2)) BETWEEN ((GROUP_CONCAT(MIN(MIN(MAX(rt0.c2)))))) AND ((rt0.c5)))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT (TOTAL((((rt0.c2)) BETWEEN ((GROUP_CONCAT(MIN(MIN(MAX(rt0.c2)))))) AND ((rt0.c5)))))) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING ((TOTAL((((rt0.c2)) BETWEEN ((GROUP_CONCAT(MIN(MIN(MAX(rt0.c2)))))) AND ((rt0.c5))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS NUMERIC))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND((v0.c0 IN ())))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((CAST(v0.c0 AS NUMERIC))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND((v0.c0 IN ())))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((CAST(v0.c0 AS NUMERIC))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND((v0.c0 IN ())))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((((rt0.c3)AND(rt0.c5)))OR(rt0.c5)))>(ABS(DISTINCT x'')))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((((rt0.c3)AND(rt0.c5)))OR(rt0.c5)))>(ABS(DISTINCT x'')))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((((rt0.c3)AND(rt0.c5)))OR(rt0.c5)))>(ABS(DISTINCT x'')))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c0, rt0.c4, rt0.c2, rt0.c5, v0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c5, v0.c0, rt0.c3;
SELECT rt0.c0, rt0.c4, rt0.c2, rt0.c5, v0.c0, rt0.c3 FROM v0, rt0 WHERE (((TRIM(DISTINCT rt0.c2, rt0.c3))IS NOT(rt0.c5))) GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c5, v0.c0, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c2, rt0.c5, v0.c0, rt0.c3 FROM v0, rt0 WHERE ((NOT (((TRIM(DISTINCT rt0.c2, rt0.c3))IS NOT(rt0.c5))))) GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c5, v0.c0, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c2, rt0.c5, v0.c0, rt0.c3 FROM v0, rt0 WHERE (((((TRIM(DISTINCT rt0.c2, rt0.c3))IS NOT(rt0.c5))) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c5, v0.c0, rt0.c3;
SELECT rt0.c0, rt0.c4, rt0.c2, rt0.c5, v0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2, rt0.c5, v0.c0, rt0.c3;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING AVG(MAX(rt0.c1)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (AVG(MAX(rt0.c1)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((AVG(MAX(rt0.c1))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c5, rt0.c3, rt0.c1, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0;
SELECT DISTINCT rt0.c5, rt0.c3, rt0.c1, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 WHERE (((((LOWER(rt0.c5))OR((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))))AND(CASE v0.c0  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END))) UNION SELECT DISTINCT rt0.c5, rt0.c3, rt0.c1, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 WHERE ((NOT (((((LOWER(rt0.c5))OR((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))))AND(CASE v0.c0  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END))))) UNION SELECT DISTINCT rt0.c5, rt0.c3, rt0.c1, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 WHERE (((((((LOWER(rt0.c5))OR((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))))AND(CASE v0.c0  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END))) ISNULL));
SELECT DISTINCT rt0.c5, rt0.c3, rt0.c1, rt0.c2, v0.c0, rt0.c4 FROM rt0, v0;
SELECT rt0.c1, rt0.c2, rt0.c5 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c5;
SELECT ALL rt0.c1, rt0.c2, rt0.c5 FROM rt0 WHERE ((('^bb	')GLOB(CAST(rt0.c4 AS NUMERIC)))) GROUP BY rt0.c1, rt0.c2, rt0.c5 UNION SELECT rt0.c1, rt0.c2, rt0.c5 FROM rt0 WHERE ((NOT ((('^bb	')GLOB(CAST(rt0.c4 AS NUMERIC)))))) GROUP BY rt0.c1, rt0.c2, rt0.c5 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c5 FROM rt0 WHERE ((((('^bb	')GLOB(CAST(rt0.c4 AS NUMERIC)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c5;
SELECT rt0.c1, rt0.c2, rt0.c5 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c5;
SELECT rt0.c0, v0.c0, rt0.c5, rt0.c4, rt0.c1, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON CASE CASE v0.c0  WHEN rt0.c4 THEN rt0.c2 END  WHEN (~ (rt0.c2)) THEN MAX(rt0.c2, v0.c0) ELSE CAST(rt0.c4 AS BLOB) END GROUP BY rt0.c0, v0.c0, rt0.c5, rt0.c4, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, v0.c0, rt0.c5, rt0.c4, rt0.c1, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON CASE CASE v0.c0  WHEN rt0.c4 THEN rt0.c2 END  WHEN (~ (rt0.c2)) THEN MAX(rt0.c2, v0.c0) ELSE CAST(rt0.c4 AS BLOB) END GROUP BY rt0.c0, v0.c0, rt0.c5, rt0.c4, rt0.c1, rt0.c2 HAVING ((MIN(COUNT(MAX(rt0.c5)))) NOT BETWEEN (COUNT(GROUP_CONCAT(v0.c0))) AND (TOTAL(rt0.c4))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c5, rt0.c4, rt0.c1, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON CASE CASE v0.c0  WHEN rt0.c4 THEN rt0.c2 END  WHEN (~ (rt0.c2)) THEN MAX(rt0.c2, v0.c0) ELSE CAST(rt0.c4 AS BLOB) END GROUP BY rt0.c0, v0.c0, rt0.c5, rt0.c4, rt0.c1, rt0.c2 HAVING (NOT (((MIN(COUNT(MAX(rt0.c5)))) NOT BETWEEN (COUNT(GROUP_CONCAT(v0.c0))) AND (TOTAL(rt0.c4))))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c5, rt0.c4, rt0.c1, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON CASE CASE v0.c0  WHEN rt0.c4 THEN rt0.c2 END  WHEN (~ (rt0.c2)) THEN MAX(rt0.c2, v0.c0) ELSE CAST(rt0.c4 AS BLOB) END GROUP BY rt0.c0, v0.c0, rt0.c5, rt0.c4, rt0.c1, rt0.c2 HAVING ((((MIN(COUNT(MAX(rt0.c5)))) NOT BETWEEN (COUNT(GROUP_CONCAT(v0.c0))) AND (TOTAL(rt0.c4)))) ISNULL);
SELECT * FROM v0 CROSS JOIN rt0 ON ((((rt0.c1) NOT NULL)) NOTNULL);
SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((((rt0.c1) NOT NULL)) NOTNULL) WHERE ((- (CAST(rt0.c0 AS REAL)))) UNION ALL SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((((rt0.c1) NOT NULL)) NOTNULL) WHERE ((NOT ((- (CAST(rt0.c0 AS REAL)))))) UNION ALL SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((((rt0.c1) NOT NULL)) NOTNULL) WHERE ((((- (CAST(rt0.c0 AS REAL)))) ISNULL));
SELECT * FROM v0 CROSS JOIN rt0 ON ((((rt0.c1) NOT NULL)) NOTNULL);
SELECT DISTINCT rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c5, rt0.c3, rt0.c0 FROM v0 NOT INDEXED, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c5, rt0.c3, rt0.c0 FROM v0, rt0 WHERE (TRIM(1.224808367E9)) UNION SELECT DISTINCT rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c5, rt0.c3, rt0.c0 FROM v0, rt0 WHERE ((NOT (TRIM(1.224808367E9)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c5, rt0.c3, rt0.c0 FROM v0, rt0 WHERE (((TRIM(1.224808367E9)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c5, rt0.c3, rt0.c0 FROM v0 NOT INDEXED, rt0;
SELECT rt0.c5 FROM rt0, v0 GROUP BY rt0.c5;
SELECT ALL rt0.c5 FROM rt0, v0 WHERE (CAST(((rt0.c3)*(rt0.c4)) AS REAL)) GROUP BY rt0.c5 UNION SELECT ALL rt0.c5 FROM rt0, v0 WHERE ((NOT (CAST(((rt0.c3)*(rt0.c4)) AS REAL)))) GROUP BY rt0.c5 UNION SELECT ALL rt0.c5 FROM rt0, v0 NOT INDEXED WHERE (((CAST(((rt0.c3)*(rt0.c4)) AS REAL)) ISNULL)) GROUP BY rt0.c5;
SELECT rt0.c5 FROM rt0, v0 GROUP BY rt0.c5;
SELECT rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3;
SELECT rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3 HAVING MIN(MAX(AVG(rt0.c4))) UNION ALL SELECT rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3 HAVING (NOT (MIN(MAX(AVG(rt0.c4))))) UNION ALL SELECT ALL rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3 HAVING ((MIN(MAX(AVG(rt0.c4)))) ISNULL);
SELECT rt0.c3 FROM v0, rt0;
SELECT ALL rt0.c3 FROM v0, rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN CASE rt0.c4  WHEN rt0.c5 THEN rt0.c1 ELSE rt0.c3 END WHEN ((rt0.c4) IS TRUE) THEN ((v0.c0) BETWEEN (v0.c0) AND (rt0.c2)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)) THEN ((rt0.c1) IS TRUE) WHEN ((rt0.c2)GLOB(rt0.c4)) THEN rt0.c2 WHEN (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((NULL))) THEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c5 WHEN v0.c0 THEN rt0.c5 END END) UNION ALL SELECT rt0.c3 FROM v0, rt0 WHERE ((NOT (CASE WHEN (rt0.c0 IN ()) THEN CASE rt0.c4  WHEN rt0.c5 THEN rt0.c1 ELSE rt0.c3 END WHEN ((rt0.c4) IS TRUE) THEN ((v0.c0) BETWEEN (v0.c0) AND (rt0.c2)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)) THEN ((rt0.c1) IS TRUE) WHEN ((rt0.c2)GLOB(rt0.c4)) THEN rt0.c2 WHEN (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((NULL))) THEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c5 WHEN v0.c0 THEN rt0.c5 END END))) UNION ALL SELECT rt0.c3 FROM v0, rt0 WHERE (((CASE WHEN (rt0.c0 IN ()) THEN CASE rt0.c4  WHEN rt0.c5 THEN rt0.c1 ELSE rt0.c3 END WHEN ((rt0.c4) IS TRUE) THEN ((v0.c0) BETWEEN (v0.c0) AND (rt0.c2)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)) THEN ((rt0.c1) IS TRUE) WHEN ((rt0.c2)GLOB(rt0.c4)) THEN rt0.c2 WHEN (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((NULL))) THEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c5 WHEN v0.c0 THEN rt0.c5 END END) ISNULL));
SELECT rt0.c3 FROM v0, rt0;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c1 AS TEXT) THEN (rt0.c4 IN (rt0.c2, rt0.c2)) END;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c1 AS TEXT) THEN (rt0.c4 IN (rt0.c2, rt0.c2)) END WHERE (TRIM(DISTINCT 0.5386128581967942)) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c1 AS TEXT) THEN (rt0.c4 IN (rt0.c2, rt0.c2)) END WHERE ((NOT (TRIM(DISTINCT 0.5386128581967942)))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c1 AS TEXT) THEN (rt0.c4 IN (rt0.c2, rt0.c2)) END WHERE (((TRIM(DISTINCT 0.5386128581967942)) ISNULL));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c1 AS TEXT) THEN (rt0.c4 IN (rt0.c2, rt0.c2)) END;
SELECT rt0.c4, rt0.c2, v0.c0, rt0.c5, rt0.c0, rt0.c1, rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON LENGTH(((((rt0.c2)AND(rt0.c4)))AND(v0.c0))) GROUP BY rt0.c4, rt0.c2, v0.c0, rt0.c5, rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c4, rt0.c2, v0.c0, rt0.c5, rt0.c0, rt0.c1, rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON LENGTH(((((rt0.c2)AND(rt0.c4)))AND(v0.c0))) WHERE (((TRIM(DISTINCT rt0.c0, rt0.c1)) NOTNULL)) GROUP BY rt0.c4, rt0.c2, v0.c0, rt0.c5, rt0.c0, rt0.c1, rt0.c3 UNION SELECT rt0.c4, rt0.c2, v0.c0, rt0.c5, rt0.c0, rt0.c1, rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON LENGTH(((((rt0.c2)AND(rt0.c4)))AND(v0.c0))) WHERE ((NOT (((TRIM(DISTINCT rt0.c0, rt0.c1)) NOTNULL)))) GROUP BY rt0.c4, rt0.c2, v0.c0, rt0.c5, rt0.c0, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c2, v0.c0, rt0.c5, rt0.c0, rt0.c1, rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON LENGTH(((((rt0.c2)AND(rt0.c4)))AND(v0.c0))) WHERE (((((TRIM(DISTINCT rt0.c0, rt0.c1)) NOTNULL)) ISNULL)) GROUP BY rt0.c4, rt0.c2, v0.c0, rt0.c5, rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c4, rt0.c2, v0.c0, rt0.c5, rt0.c0, rt0.c1, rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON LENGTH(((((rt0.c2)AND(rt0.c4)))AND(v0.c0))) GROUP BY rt0.c4, rt0.c2, v0.c0, rt0.c5, rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c5, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c5, rt0.c3;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c5, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c5, rt0.c3 HAVING MAX(COUNT(rt0.c5)) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c5, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c5, rt0.c3 HAVING (NOT (MAX(COUNT(rt0.c5)))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c5, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c5, rt0.c3 HAVING ((MAX(COUNT(rt0.c5))) ISNULL);
SELECT ALL TOTAL(((rt0.c1)<>(rt0.c2))) FROM rt0 ORDER BY (((rt0.c1 IN ()))LIKE(rt0.c3 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0, rt0.c4, rt0.c1, rt0.c3 FROM v0, rt0;
SELECT DISTINCT v0.c0, rt0.c4, rt0.c1, rt0.c3 FROM v0, rt0 WHERE (((((((rt0.c4)AND(rt0.c1)))OR(v0.c0)))==(rt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0, rt0.c4, rt0.c1, rt0.c3 FROM v0, rt0 WHERE ((NOT (((((((rt0.c4)AND(rt0.c1)))OR(v0.c0)))==(rt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT v0.c0, rt0.c4, rt0.c1, rt0.c3 FROM v0, rt0 WHERE (((((((((rt0.c4)AND(rt0.c1)))OR(v0.c0)))==(rt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c4, rt0.c1, rt0.c3 FROM v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL) COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0) ISNULL) COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) ISNULL) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c4, rt0.c1, rt0.c0, rt0.c5 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c5;
SELECT rt0.c4, rt0.c1, rt0.c0, rt0.c5 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c5 HAVING MIN(((COUNT(MIN(rt0.c1)))>>(COUNT(GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c5 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c5 HAVING (NOT (MIN(((COUNT(MIN(rt0.c1)))>>(COUNT(GROUP_CONCAT(rt0.c0))))))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c5 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c5 HAVING ((MIN(((COUNT(MIN(rt0.c1)))>>(COUNT(GROUP_CONCAT(rt0.c0)))))) ISNULL);
SELECT ALL v0.c0 FROM v0, rt0;
SELECT ALL v0.c0 FROM v0, rt0 WHERE (rt0.c5) UNION ALL SELECT v0.c0 FROM v0, rt0 WHERE ((NOT (rt0.c5))) UNION ALL SELECT ALL v0.c0 FROM v0, rt0 WHERE (((rt0.c5) ISNULL));
SELECT ALL v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, rt0.c5, v0.c0, rt0.c3 FROM rt0, v0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, rt0.c5, v0.c0, rt0.c3 FROM rt0, v0 WHERE (((rt0.c5 COLLATE NOCASE)<(MIN(NULL, rt0.c4)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, rt0.c5, v0.c0, rt0.c3 FROM rt0, v0 WHERE ((NOT (((rt0.c5 COLLATE NOCASE)<(MIN(NULL, rt0.c4)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, rt0.c5, v0.c0, rt0.c3 FROM rt0, v0 WHERE (((((rt0.c5 COLLATE NOCASE)<(MIN(NULL, rt0.c4)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4, rt0.c5, v0.c0, rt0.c3 FROM rt0, v0;
SELECT rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4;
SELECT ALL rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c3 THEN rt0.c0 END))) GROUP BY rt0.c1, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT ((NOT (CASE WHEN rt0.c3 THEN rt0.c0 END))))) GROUP BY rt0.c1, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c4 FROM rt0 WHERE ((((NOT (CASE WHEN rt0.c3 THEN rt0.c0 END))) ISNULL)) GROUP BY rt0.c1, rt0.c4;
SELECT rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(((v0.c0)*(MIN(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(((v0.c0)*(MIN(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(((v0.c0)*(MIN(v0.c0))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c1) NOTNULL)) IS TRUE)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c1) NOTNULL)) IS TRUE)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c1) NOTNULL)) IS TRUE)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c0)LIKE(rt0.c3)) AS TEXT)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((rt0.c0)LIKE(rt0.c3)) AS TEXT)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((rt0.c0)LIKE(rt0.c3)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)/(v0.c0)) IN ())) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)/(v0.c0)) IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)/(v0.c0)) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) NOT NULL) COLLATE BINARY UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((v0.c0) NOT NULL) COLLATE BINARY)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0) NOT NULL) COLLATE BINARY) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) NOT NULL) COLLATE BINARY UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((v0.c0) NOT NULL) COLLATE BINARY)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0) NOT NULL) COLLATE BINARY) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (CASE (~ (v0.c0))  WHEN CAST(rt0.c2 AS NUMERIC) THEN (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))) END) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (CASE (~ (v0.c0))  WHEN CAST(rt0.c2 AS NUMERIC) THEN (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))) END))) UNION ALL SELECT * FROM rt0, v0 WHERE (((CASE (~ (v0.c0))  WHEN CAST(rt0.c2 AS NUMERIC) THEN (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))) END) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE RTRIM COLLATE BINARY) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST(v0.c0 AS NUMERIC) COLLATE RTRIM COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC) COLLATE RTRIM COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0, rt0.c5 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0, rt0.c5;
SELECT ALL rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0, rt0.c5 FROM v0, rt0 WHERE (rt0.c1) GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0, rt0.c5 UNION SELECT rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0, rt0.c5 FROM v0, rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0, rt0.c5 UNION SELECT rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0, rt0.c5 FROM v0, rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0, rt0.c5;
SELECT ALL rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0, rt0.c5 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0, rt0.c5;
SELECT rt0.c5, rt0.c1, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM v0 CROSS JOIN rt0 ON (~ (((((rt0.c5)AND(rt0.c5)))OR(rt0.c1)))) GROUP BY rt0.c5, rt0.c1, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c5, rt0.c1, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM v0 CROSS JOIN rt0 ON (~ (((((rt0.c5)AND(rt0.c5)))OR(rt0.c1)))) GROUP BY rt0.c5, rt0.c1, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING AVG(SUM(TOTAL(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT ALL rt0.c5, rt0.c1, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM v0 CROSS JOIN rt0 ON (~ (((((rt0.c5)AND(rt0.c5)))OR(rt0.c1)))) GROUP BY rt0.c5, rt0.c1, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING (NOT (AVG(SUM(TOTAL(GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT ALL rt0.c5, rt0.c1, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM v0 CROSS JOIN rt0 ON (~ (((((rt0.c5)AND(rt0.c5)))OR(rt0.c1)))) GROUP BY rt0.c5, rt0.c1, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING ((AVG(SUM(TOTAL(GROUP_CONCAT(COUNT(*)))))) ISNULL);
SELECT ALL rt0.c5, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c5, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE (json_extract((((rt0.c3))!=((rt0.c3))), (NOT (rt0.c5)))) UNION ALL SELECT ALL rt0.c5, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (json_extract((((rt0.c3))<>((rt0.c3))), (NOT (rt0.c5)))))) UNION ALL SELECT ALL rt0.c5, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE (((json_extract((((rt0.c3))<>((rt0.c3))), (NOT (rt0.c5)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((+ (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((+ (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((+ (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (~ ((NOT (v0.c0)))) GROUP BY v0.c0;
SELECT v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (~ ((NOT (v0.c0)))) WHERE ((('-977895804')<((rt0.c4 IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (~ ((NOT (v0.c0)))) WHERE ((NOT ((('-977895804')<((rt0.c4 IN ())))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (~ ((NOT (v0.c0)))) WHERE ((((('-977895804')<((rt0.c4 IN ())))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (~ ((NOT (v0.c0)))) GROUP BY v0.c0;
SELECT rt0.c0, rt0.c5, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c5, rt0.c2;
SELECT rt0.c0, rt0.c5, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c5, rt0.c2 HAVING MIN(SUM(MIN(rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c5, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c5, rt0.c2 HAVING (NOT (MIN(SUM(MIN(rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c5, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c5, rt0.c2 HAVING ((MIN(SUM(MIN(rt0.c0)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(((((NULL)AND(rt0.c2)))OR(rt0.c4)) AS NUMERIC)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(((((NULL)AND(rt0.c2)))OR(rt0.c4)) AS NUMERIC)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(((((NULL)AND(rt0.c2)))OR(rt0.c4)) AS NUMERIC)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ('2.') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ('2.'))) UNION SELECT DISTINCT * FROM rt0 WHERE ((('2.') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c3, rt0.c5, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c5, rt0.c2;
SELECT ALL rt0.c3, rt0.c5, rt0.c2 FROM rt0 WHERE (CAST(CAST(rt0.c3 AS TEXT) AS BLOB)) GROUP BY rt0.c3, rt0.c5, rt0.c2 UNION SELECT rt0.c3, rt0.c5, rt0.c2 FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c3 AS TEXT) AS BLOB)))) GROUP BY rt0.c3, rt0.c5, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c5, rt0.c2 FROM rt0 WHERE (((CAST(CAST(rt0.c3 AS TEXT) AS BLOB)) ISNULL)) GROUP BY rt0.c3, rt0.c5, rt0.c2;
SELECT ALL rt0.c3, rt0.c5, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c5, rt0.c2;
SELECT ALL rt0.c0, rt0.c2, rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c4, v0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c4, v0.c0, rt0.c3 HAVING ((CAST(AVG(rt0.c1) AS NUMERIC))>(((((rt0.c1)AND(rt0.c2)))OR(v0.c0)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c4, v0.c0, rt0.c3 HAVING (NOT (((CAST(AVG(rt0.c1) AS NUMERIC))>(((((rt0.c1)AND(rt0.c2)))OR(v0.c0)))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c4, v0.c0, rt0.c3 HAVING ((((CAST(AVG(rt0.c1) AS NUMERIC))>(((((rt0.c1)AND(rt0.c2)))OR(v0.c0))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c4, v0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c4, v0.c0, rt0.c3 HAVING ((CAST(AVG(rt0.c1) AS NUMERIC))>(((((rt0.c1)AND(rt0.c2)))OR(v0.c0)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c4, v0.c0, rt0.c3 HAVING (NOT (((CAST(AVG(rt0.c1) AS NUMERIC))>(((((rt0.c1)AND(rt0.c2)))OR(v0.c0)))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c4, v0.c0, rt0.c3 HAVING ((((CAST(AVG(rt0.c1) AS NUMERIC))>(((((rt0.c1)AND(rt0.c2)))OR(v0.c0))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c4, v0.c0, rt0.c3;
SELECT ALL TOTAL(CASE WHEN (((x'6c04'))<((v0.c0))) THEN v0.c0 COLLATE BINARY END) FROM v0;
SELECT ALL rt0.c2 FROM rt0 NATURAL JOIN v0;
SELECT ALL rt0.c2 FROM rt0 NATURAL JOIN v0 WHERE ((((((rt0.c1, 0.367187379005406, rt0.c4))==((rt0.c5, rt0.c5, rt0.c0)))) NOT NULL)) UNION ALL SELECT rt0.c2 FROM rt0 NATURAL JOIN v0 WHERE ((NOT ((((((rt0.c1, 0.367187379005406, rt0.c4))=((rt0.c5, rt0.c5, rt0.c0)))) NOT NULL)))) UNION ALL SELECT rt0.c2 FROM rt0 NATURAL JOIN v0 WHERE ((((((((rt0.c1, 0.367187379005406, rt0.c4))==((rt0.c5, rt0.c5, rt0.c0)))) NOT NULL)) ISNULL));
SELECT ALL rt0.c2 FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE (CASE ((rt0.c0)<>(rt0.c0))  WHEN rt0.c0 COLLATE RTRIM THEN -250134390 WHEN CASE WHEN rt0.c5 THEN rt0.c4 ELSE rt0.c1 END THEN CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END WHEN NULL THEN ((rt0.c0) ISNULL) ELSE ((rt0.c3)IS(rt0.c1)) END) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT (CASE ((rt0.c0)!=(rt0.c0))  WHEN rt0.c0 COLLATE RTRIM THEN -250134390 WHEN CASE WHEN rt0.c5 THEN rt0.c4 ELSE rt0.c1 END THEN CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END WHEN NULL THEN ((rt0.c0) ISNULL) ELSE ((rt0.c3)IS(rt0.c1)) END))) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE (((CASE ((rt0.c0)!=(rt0.c0))  WHEN rt0.c0 COLLATE RTRIM THEN -250134390 WHEN CASE WHEN rt0.c5 THEN rt0.c4 ELSE rt0.c1 END THEN CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END WHEN NULL THEN ((rt0.c0) ISNULL) ELSE ((rt0.c3)IS(rt0.c1)) END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4;
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0, v0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN 0.884127814606384 END)>>(((rt0.c0)*(x'4df0'))))) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0, v0 WHERE ((NOT (((CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN 0.884127814606384 END)>>(((rt0.c0)*(x'4df0'))))))) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0, v0 WHERE (((((CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN 0.884127814606384 END)>>(((rt0.c0)*(x'4df0'))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4;
SELECT rt0.c4, rt0.c3, rt0.c5, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c5, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c4, rt0.c3, rt0.c5, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c5, rt0.c1, rt0.c0, rt0.c2 HAVING TOTAL((((COUNT(*), TOTAL(1.232295826E9), rt0.c2))!=((COUNT(COUNT(rt0.c0)), rt0.c0, rt0.c1)))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c5, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c5, rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (TOTAL((((COUNT(*), TOTAL(1.232295826E9), rt0.c2))<>((COUNT(COUNT(rt0.c0)), rt0.c0, rt0.c1)))))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c5, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c5, rt0.c1, rt0.c0, rt0.c2 HAVING ((TOTAL((((COUNT(*), TOTAL(1.232295826E9), rt0.c2))<>((COUNT(COUNT(rt0.c0)), rt0.c0, rt0.c1))))) ISNULL);
SELECT ALL v0.c0, rt0.c0, rt0.c5, rt0.c1 FROM v0, rt0;
SELECT v0.c0, rt0.c0, rt0.c5, rt0.c1 FROM v0, rt0 WHERE (((((x'')OR(x'42051dab')))OR(rt0.c0)) COLLATE RTRIM) UNION ALL SELECT v0.c0, rt0.c0, rt0.c5, rt0.c1 FROM v0, rt0 WHERE ((NOT (((((x'')OR(x'42051dab')))OR(rt0.c0)) COLLATE RTRIM))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c5, rt0.c1 FROM v0, rt0 WHERE (((((((x'')OR(x'42051dab')))OR(rt0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL v0.c0, rt0.c0, rt0.c5, rt0.c1 FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0) NOT NULL))AND(x'')))AND(((((x'')AND(v0.c0)))AND(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0) NOT NULL))AND(x'')))AND(((((x'')AND(v0.c0)))AND(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((v0.c0) NOT NULL))AND(x'')))AND(((((x'')AND(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0)AND(x'c66b')))IS NOT(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)AND(x'c66b')))IS NOT(((((v0.c0)AND(v0.c0)))AND(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)AND(x'c66b')))IS NOT(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, v0.c0, rt0.c5, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c5, rt0.c4, rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c2, v0.c0, rt0.c5, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c5, rt0.c4, rt0.c0, rt0.c1, rt0.c3 HAVING ((((AVG(MAX(SUM(rt0.c3))))OR(((TOTAL(COUNT(*))) BETWEEN (COUNT(*)) AND (MIN(rt0.c3))))))AND(((rt0.c4)>(1.124378805E9)))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c5, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c5, rt0.c4, rt0.c0, rt0.c1, rt0.c3 HAVING (NOT (((((AVG(MAX(SUM(rt0.c3))))OR(((TOTAL(COUNT(*))) BETWEEN (COUNT(*)) AND (MIN(rt0.c3))))))AND(((rt0.c4)>(1.124378805E9)))))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c5, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c5, rt0.c4, rt0.c0, rt0.c1, rt0.c3 HAVING ((((((AVG(MAX(SUM(rt0.c3))))OR(((TOTAL(COUNT(*))) BETWEEN (COUNT(*)) AND (MIN(rt0.c3))))))AND(((rt0.c4)>(1.124378805E9))))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (STRFTIME(((v0.c0) ISNULL), (v0.c0 IN ()), ((v0.c0) ISNULL))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (STRFTIME(((v0.c0) ISNULL), (v0.c0 IN ()), ((v0.c0) ISNULL))))) UNION ALL SELECT * FROM v0 WHERE (((STRFTIME(((v0.c0) ISNULL), (v0.c0 IN ()), ((v0.c0) ISNULL))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((((NULL))<(((~ (rt0.c0)))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((((NULL))<(((~ (rt0.c0)))))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((((NULL))<(((~ (rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c5, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c5, rt0.c0, rt0.c4;
SELECT rt0.c5, rt0.c0, rt0.c4 FROM rt0 WHERE (((((rt0.c4)==(rt0.c4)))>(NULLIF(rt0.c3, rt0.c5)))) GROUP BY rt0.c5, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c5, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT (((((rt0.c4)==(rt0.c4)))>(NULLIF(rt0.c3, rt0.c5)))))) GROUP BY rt0.c5, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c5, rt0.c0, rt0.c4 FROM rt0 WHERE (((((((rt0.c4)=(rt0.c4)))>(NULLIF(rt0.c3, rt0.c5)))) ISNULL)) GROUP BY rt0.c5, rt0.c0, rt0.c4;
SELECT ALL rt0.c5, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c5, rt0.c0, rt0.c4;
SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c5, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c5, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c5, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c5, rt0.c1 HAVING ((((rt0.c5) BETWEEN (SUM(MAX(rt0.c5))) AND (COUNT(0.5408879082574143)))) ISNULL) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c4, rt0.c5, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c5, rt0.c1 HAVING (NOT (((((rt0.c5) BETWEEN (SUM(MAX(rt0.c5))) AND (COUNT(0.5408879082574143)))) ISNULL))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c4, rt0.c5, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c5, rt0.c1 HAVING ((((((rt0.c5) BETWEEN (SUM(MAX(rt0.c5))) AND (COUNT(0.5408879082574143)))) ISNULL)) ISNULL);
SELECT ALL TOTAL(x'') FROM v0, rt0;
SELECT rt0.c1, rt0.c2, rt0.c5 FROM v0, rt0;
SELECT rt0.c1, rt0.c2, rt0.c5 FROM v0, rt0 WHERE (0.27359967669658913) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c5 FROM v0, rt0 WHERE ((NOT (0.27359967669658913))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c5 FROM v0, rt0 WHERE (((0.27359967669658913) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c5 FROM v0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((((((rt0.c5 IN (rt0.c2)))AND(rt0.c0 COLLATE NOCASE)))OR(((rt0.c0) IS TRUE))))AND(CASE 2098574330  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END)))OR(rt0.c3))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((((((rt0.c5 IN (rt0.c2)))AND(rt0.c0 COLLATE NOCASE)))OR(((rt0.c0) IS TRUE))))AND(CASE 2098574330  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END)))OR(rt0.c3))))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE ((((((((((((rt0.c5 IN (rt0.c2)))AND(rt0.c0 COLLATE NOCASE)))OR(((rt0.c0) IS TRUE))))AND(CASE 2098574330  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END)))OR(rt0.c3))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (json_patch((+ (v0.c0)), ((v0.c0) IS FALSE))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (json_patch((+ (v0.c0)), ((v0.c0) IS FALSE))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((json_patch((+ (v0.c0)), ((v0.c0) IS FALSE))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT rt0.c1, rt0.c3, rt0.c5, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON MAX(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c5 WHEN v0.c0 THEN rt0.c2 END, (rt0.c4 IN ()));
SELECT ALL rt0.c1, rt0.c3, rt0.c5, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON MAX(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c5 WHEN v0.c0 THEN rt0.c2 END, (rt0.c4 IN ())) WHERE (((((rt0.c5) ISNULL))/(CAST(v0.c0 AS TEXT)))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c5, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON MAX(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c5 WHEN v0.c0 THEN rt0.c2 END, (rt0.c4 IN ())) WHERE ((NOT (((((rt0.c5) ISNULL))/(CAST(v0.c0 AS TEXT)))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c5, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON MAX(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c5 WHEN v0.c0 THEN rt0.c2 END, (rt0.c4 IN ())) WHERE (((((((rt0.c5) ISNULL))/(CAST(v0.c0 AS TEXT)))) ISNULL));
SELECT rt0.c1, rt0.c3, rt0.c5, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON MAX(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c5 WHEN v0.c0 THEN rt0.c2 END, (rt0.c4 IN ()));
SELECT DISTINCT rt0.c3, rt0.c5, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c5, rt0.c2 FROM rt0 WHERE ((rt0.c4 IN (rt0.c1, rt0.c2)) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c3, rt0.c5, rt0.c2 FROM rt0 WHERE ((NOT ((rt0.c4 IN (rt0.c1, rt0.c2)) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c3, rt0.c5, rt0.c2 FROM rt0 WHERE ((((rt0.c4 IN (rt0.c1, rt0.c2)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c5, rt0.c2 FROM rt0;
SELECT rt0.c5, rt0.c4, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c5, rt0.c4, rt0.c2;
SELECT rt0.c5, rt0.c4, rt0.c2 FROM rt0 WHERE (x'') GROUP BY rt0.c5, rt0.c4, rt0.c2 UNION SELECT ALL rt0.c5, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c5, rt0.c4, rt0.c2 UNION SELECT rt0.c5, rt0.c4, rt0.c2 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c5, rt0.c4, rt0.c2;
SELECT rt0.c5, rt0.c4, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c5, rt0.c4, rt0.c2;
SELECT rt0.c0, rt0.c5, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c5, rt0.c2, v0.c0, rt0.c4;
SELECT rt0.c0, rt0.c5, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c5, rt0.c2, v0.c0, rt0.c4 HAVING AVG(COUNT(*)) UNION ALL SELECT rt0.c0, rt0.c5, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c5, rt0.c2, v0.c0, rt0.c4 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT rt0.c0, rt0.c5, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c5, rt0.c2, v0.c0, rt0.c4 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1) IS TRUE))OR((((-1.59742911E8)) NOT BETWEEN ((rt0.c2)) AND ((x''))))))AND(((rt0.c2)%(rt0.c5))));
SELECT rt0.c0, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1) IS TRUE))OR((((-1.59742911E8)) NOT BETWEEN ((rt0.c2)) AND ((x''))))))AND(((rt0.c2)%(rt0.c5)))) WHERE ((CASE WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c5 END IN ())) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1) IS TRUE))OR((((-1.59742911E8)) NOT BETWEEN ((rt0.c2)) AND ((x''))))))AND(((rt0.c2)%(rt0.c5)))) WHERE ((NOT ((CASE WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c5 END IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1) IS TRUE))OR((((-1.59742911E8)) NOT BETWEEN ((rt0.c2)) AND ((x''))))))AND(((rt0.c2)%(rt0.c5)))) WHERE ((((CASE WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c5 END IN ())) ISNULL));
SELECT rt0.c0, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1) IS TRUE))OR((((-1.59742911E8)) NOT BETWEEN ((rt0.c2)) AND ((x''))))))AND(((rt0.c2)%(rt0.c5))));
SELECT DISTINCT rt0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c0 FROM v0, rt0 WHERE (x'') UNION SELECT DISTINCT rt0.c0 FROM v0, rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c0 FROM v0, rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c0 FROM v0, rt0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE ('-1794378788') GROUP BY rt0.c3, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ('-1794378788'))) GROUP BY rt0.c3, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE ((('-1794378788') ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1;
