-- Time: 2024/06/13 04:26:08
-- Database: database46
-- Database version: 3.40.0
-- seed value: 1808723846
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)OR(x'')))AND('')))OR((+ ('')))))OR(x'')))AND('')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1593274417 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1084581081 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'' AS NUMERIC) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')%(0x7de0486d))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1724407356 0 sz=1724407356 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(2.111850605E9 AS NUMERIC))GLOB(x'' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)||(x'8e61')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=539188964 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2147200423'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=539188964 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((highlight(NULL, 0.6209874207020635, x'60ae', NULL))IS((((0.3873885349438587)) BETWEEN ((-33812609)) AND (('2098789574'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(CAST('' AS REAL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x'', '0.3873885349438587', '1092116802')) BETWEEN ((0.6043375773850991, NULL, '')) AND ((0.20783985029076302, 0.9222370277189393, NULL))) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=2098789574'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-260674343 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((862975444)AND(NULL)))AND(5.39188964E8)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-33812609'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-85100532'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1951334650 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1218392829' COLLATE RTRIM) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'f3c4')) NOT BETWEEN ((((((2.147200423E9)OR(NULL)))AND(x'fa80')))) AND ((NULL COLLATE BINARY))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1598628322 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1278586253')!=(NULL))) NOT BETWEEN (NULL) AND (CASE WHEN 0.37886833499559847 THEN x'' ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1084581081 sz=-1806238182 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (''))) BETWEEN (((x'')<<('0.9222370277189393'))) AND (CASE WHEN 0.6209874207020635 THEN 0Xfffffffff45aca30 WHEN 0.5633557436904307 THEN '' WHEN NULL THEN x'' ELSE x'f8ed' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('16116991')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '52731610 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '675324853 sz=1724407356 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-299357576 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('-2071202173' AS INTEGER) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LOWER(DISTINCT 0.10043666760591796) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x26de1e07)) NOT BETWEEN ((('122933022' IN ()))) AND ((((((x'')AND(NULL)))OR(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (~ (0.6619161135083549))  WHEN ((0.3337562876577711)>=(NULL)) THEN (NOT (0.5912188312749058)) WHEN x'' THEN ((NULL)+(0.3245937973697208)) WHEN CASE NULL  WHEN x'a3ae' THEN NULL END THEN CASE NULL  WHEN x'' THEN x'5e19' WHEN -1925154606 THEN -1.925154606E9 WHEN x'' THEN x'' END ELSE ((((x'a644')AND(0.5466370773221818)))OR('-1925154606')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1434113769 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 28000838  WHEN '-85100532' THEN '0.3873885349438587' ELSE x'' END)!=((('1357658443')AND(0.10043666760591796)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=690284619 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-2039039310 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.7420322313946756 THEN NULL END)OR((~ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-2039039310 sz=-1 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6209874207020635)AND(0.1944564171346541)))AND('|*Z')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'a4691b22'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-79839903 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '13388670 sz=1357658443 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-653554173 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULLIF(DISTINCT 0.06760293629347458, x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=862975444'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2147200423 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1806238182'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xffffffffed12ba00)) NOT BETWEEN (('-27147764')) AND ((x'bd9a'))) COLLATE RTRIM COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('3%')>(x'61c1')))OR('')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1370577393 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1746151454 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-2039039310'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1484235170 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1598628322 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2147200423'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=738863452 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN NULL THEN 0.8894215717054138 END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1357658443 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('-79839903') BETWEEN (NULL) AND (NULL))  WHEN LIKE('862975444', x'') THEN ((((x'')AND('[*[k')))AND('cL')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5642144196810353, x'', '')) BETWEEN (((+ (0Xffffffff82f3b3f9)), (NOT ('')), (((0.009514252305634519))>=((x''))))) AND ((CASE WHEN 0.792572243267564 THEN 0.49878190965753433 WHEN NULL THEN 0.5294881400267306 WHEN '' THEN NULL ELSE NULL END, (~ ('738863452')), CAST('4J平7LR' AS TEXT)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-653976158 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x'6da3')) BETWEEN ((x'')) AND ((NULL))) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7201397904545673)<>('56*%'))) NOT BETWEEN ((+ (-1.925154606E9))) AND (((('鶈')) BETWEEN (('-701233776')) AND ((x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ROUND(NULL, 0xffffffffe33ade04)) NOT BETWEEN (((('', x'b887', 0.28642661191976804))>((0.8889275174266029, '', 0x746265ed)))) AND ((+ ('1671524679')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE ']\nW'  WHEN -2.99357576E8 THEN -1581696831 WHEN x'' THEN x'' WHEN 0.49878190965753433 THEN x'526a' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-72701027 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=880928654'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '675324853'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1678459861 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 1875721976 sz=1250070835 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER('0.28642661191976804')) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-923184657 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2111850605 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1418440293 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1484235170 sz=402819877 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1084581081 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('' AS INTEGER) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-85100532 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5642144196810353) BETWEEN ('-1273584152') AND (0.8126837148762974)))==((('?sVt') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('?Z') NOT BETWEEN (NULL) AND (x'')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('䇗H')) BETWEEN ((0X6fd60735)) AND (('1121840442')))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('1973001608' AS REAL))AND(CAST('1582878586' AS REAL))))AND(0.06760293629347458)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((TRIM('y?s4x*', x'')))>((TRIM('1357658443', 0.5466370773221818)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(DISTINCT ((x'a158')LIKE(NULL))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '675324853 0 sz=1092116802'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=539188964 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1250070835 sz=-1136744777'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('\,/<')&(x''))) NOT BETWEEN (((((((((-72811515)OR('9	ሳ*')))OR('1504941524')))AND(x'62b1')))OR(NULL))) AND ((0.10043666760591796 IN ()))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1375275205'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('I쯶WmrfD')|(NULL))))>=((((-923184657)IS(''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1160076953'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2107645914 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) BETWEEN (('1504941524')) AND (('405354374'))))GLOB((('') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) BETWEEN ((NULL)) AND ((NULL))))GLOB(CASE 0.5492979333220448  WHEN x'' THEN NULL ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('T?n' IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '427308832 -1678459861 sz=-1970575116 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=2133829674 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=402819877 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=52731610 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (1382739565)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-40461928') ISNULL)))>(((0.3109438613105464 IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x'', -1.581696831E9, ''))>((x'', x'7970', '233116723'))) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2147200423'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '233116723 sz=-680260416 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1088139883 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-389456607'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-226433066'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=919407284 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN 0.20783985029076302 THEN x'abc9' END) BETWEEN ((0.12687664149529854 IN (0.5642144196810353))) AND (((0.3702312722572594)IS NOT('-1434113769')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE BINARY IN (UPPER(DISTINCT '-1434113769'))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1504941524 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((((((NULL)AND('Pi K')))AND(NULL)))AND(NULL)))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('.gCM-'))) BETWEEN (0xffffffff97ebd7e2) AND (((NULL)IS('-1640510474')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOTNULL)) BETWEEN (((0.5055745243675955) IS TRUE)) AND ('-1249689888')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-309607931 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-33812609 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((((((('1501352013')AND(NULL)))AND(0.6365329612594962)))AND('')))OR(x'')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_type((NOT (1.876297525E9))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.5944400458737484)AND(0.5071401699829736 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1659624754 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((('0.06760293629347458')IS('L%?Q᱇NR'))))>((((NULL) NOT BETWEEN (x'd8ed') AND ('2098789574'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT 0.6099177162157988, (((-1640510474, x'', 0.004764762237167264))<=((x'', NULL, 0.6785878727921087)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('') ISNULL))OR('')))AND((~ (x'a1fb')))))OR(json_object(0.45766740445126886, '?Z'))))AND(x'')); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'0bd7' AS TEXT)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SUBSTR((~ ('1582878586')), (('-923184657') NOTNULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1952605677 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0 sz=52731610 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'58378782'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-124988166')) NOT BETWEEN ((LTRIM(-1.659624754E9))) AND ((NULL COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2133829674 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 -481263237 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-481263237 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-762705546') BETWEEN (NULL) AND (NULL))) NOT BETWEEN (UNLIKELY(690284619)) AND ((NULL IN ('eeJ%}q')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'W^'  WHEN NULL THEN x'' ELSE -3.09607931E8 END)==(((((((((1.121840442E9)AND('4J平7LR')))OR('[*[k')))OR('+>-姹ꉻw뛵Oq')))AND('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1946176400 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-467021962'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE LAST_INSERT_ROWID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1581604467'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-943625616) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND((('bgXZJWz|n') BETWEEN (0.6619161135083549) AND (0xffffffffb96314b1)))))AND((('b)f(d') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1331895520 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=8034080 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-958006028'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1771862570 sz=-1626718587 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)/(UPPER('1951334650'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((0.6209874207020635 IN ()) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.2471506608458286)*(x'')))OR((((NULL))>(('n41>\ཿ뱠~'))))))OR((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.21614198927096195)IS('LOT5㵴c}.'))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=2025776926'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1807393698 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN x'aef5' THEN 0.3662746919697567 END COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=13388670 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-79839903 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (0x3249eda) AND ('_#'))) NOT BETWEEN (CASE NULL  WHEN NULL THEN '%J' ELSE NULL END) AND (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.1944564171346541)IS((('0.6043375773850991')!=(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=122933022 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-317539840')AND(x'')))OR(NULL)))|(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1875721976'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1986165737'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE WHEN '1310496698' THEN '-923184657' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE x''  WHEN 0X476e0750 THEN '-943625616' ELSE '1393506116' END THEN ('n41>\ཿ뱠~' IN ('-27147764')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '81796705'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-167804181 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.06760293629347458 THEN (('')<<(NULL)) ELSE (('2147200423') BETWEEN (0.755623479533623) AND (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '_#'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-317539840 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.2505985693283431) IS FALSE))OR(((0.6043375773850991) ISNULL))))OR(((('0g'))<((x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=13388670 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1535897106 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=427308832'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1464577575 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2093248876'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2039039310 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=8034080 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=880928654'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) ISNULL) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-980130473'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1133489768 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=445063562 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '\,/<' THEN 'T?n' WHEN x'' THEN NULL WHEN x'' THEN NULL ELSE NULL END) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((((('1466606203')) BETWEEN ((0.1528520668343476)) AND ((NULL))))) AND ((((((',GnLPR9|')OR('1581604467')))AND('136112781'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-317539840'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-416863177'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN (x'')))<=(TRIM(NULL, ''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 1496042258 sz=-1066068759'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -1678459861 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((-6.53976158E8))<=((x'86d2'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS REAL))IS(((x'')>>('716541387')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' COLLATE RTRIM IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.05270168450138424)GLOB(0.3702312722572594)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1875721976 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('0.7201397904545673') BETWEEN (NULL) AND (1.084581081E9)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1266797792 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1683263245 sz=-226433066 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1331895520 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-799541187 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1531134818'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=336153856 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1696378344 sz=-877263594 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1347432401 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1108182359 709095700 sz=-182189700 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE 0X2aea5ae6; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1466606203 sz=566565406 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=5319057'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1358989109 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT CAST('' AS NUMERIC), (('௡LD+렀_t^]')-(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1875721976 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'2d7a')AND(0.34716470197234495)))OR(NULL)))<<(5.39188964E8 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1592002986 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1256817264') NOT BETWEEN (1.519522355E9) AND (9.51861719E8))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=609527046 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1726170632 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1088139883'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(LIKELY(DISTINCT 0.7997155393009803) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('_GTfRb!lc') NOT BETWEEN ('[q}4MlX') AND (0.15192190173016962)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1768070563 13388670 sz=-975836359'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((678572388 IN (0Xffffffffee860274))) NOT BETWEEN ((((-7.2811515E7, NULL, '1147666331'))>(('1724407356', 0.1383990619387726, 0.3575031863556579)))) AND ((- ('655029088')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1959718569 sz=1106123847 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2107645914'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=370732366 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2107645914 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1107642750 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1581604467 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CHANGES()  WHEN LTRIM(1.121840442E9, 0Xfffffffffaed780c) THEN CASE -491256863  WHEN x'' THEN 1519522355 ELSE NULL END ELSE x'' COLLATE NOCASE END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1438048631 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-328345064'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (x'')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-701233776'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '759483276 sz=-16427853 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('' COLLATE NOCASE)AND(1039915453)))OR('-60115131' COLLATE RTRIM)))AND(ABS(0.05270168450138424))))AND(CAST(x'0a42' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1812265095'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_type(('lot5㵴c}.' IN ())); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '|*Z'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')-(0.4559912591915223)), 0.13800533144281713 COLLATE NOCASE, ((((((((x'')OR(0.9419482285258046)))AND(x'')))AND(x'')))AND(NULL)), (NOT ('쨰wzu6')), ((NULL)IS NOT('-1418440293'))))>=(((((NULL, 0xfffffffffba8fc05, NULL))<((NULL, 0.48939529156516515, 'NV'))), CASE x''  WHEN 1709224223 THEN 0.03293648195275101 ELSE x'' END, CASE 0.9774445765203595  WHEN '' THEN NULL ELSE NULL END, CASE 'b<'  WHEN x'' THEN '600-eH' ELSE NULL END, CASE NULL  WHEN 0.5495307648130315 THEN 0.7461490736010256 END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1051772188 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.2550319971006769)GLOB(x''))  WHEN 0.4618603335731488 COLLATE RTRIM THEN (- ('0n5Z')) WHEN GLOB(x'b7c2', x'bdcd') THEN (('-1640510474') BETWEEN (x'') AND (x'22b64fe2')) WHEN ((0.7057176170976958)||(NULL)) THEN (('')LIKE(NULL)) ELSE (~ ('?z')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1906352620 sz=2107645914'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE highlight('-653976158' COLLATE NOCASE, ((NULL)OR('453249897')), ((x'00e3a00a')>>(x'')), x''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_type(((('p&', '-260674343', 0.6209874207020635))<(('i/F⻮sc', x'', NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL COLLATE NOCASE)AND(((((((((NULL)OR('+')))OR('')))AND(NULL)))AND(0.5071401699829736)))))OR((('B)F(D')>=(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NULL IN ())  WHEN ((NULL) NOTNULL) THEN x'' WHEN TRIM(x'') THEN CASE 0.8059624138608215  WHEN 0.004764762237167264 THEN -701233776 WHEN '' THEN '-272969369' WHEN '' THEN x'' WHEN NULL THEN NULL WHEN '-1249689888' THEN x'e1d3' ELSE NULL END WHEN (((x'')) BETWEEN (('')) AND ((0.006603312209608414))) THEN ((0Xffffffffbb07d294) IS TRUE) WHEN (x'' IN (x'c52e', NULL)) THEN ((-7.9839903E7)*(NULL)) WHEN ((((((((x'')OR(1577202237)))OR(0.6854953147720562)))AND(x'')))AND('6Rh(9D')) THEN (('600-eH')<>('')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=52731610 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')IS(0.25439854094018766)))+(((x'') NOT BETWEEN (0.3245937973697208) AND (1618506213)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((x'492d')AND('')))OR(NULL)) AS TEXT); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '754064433 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '690284619 0 sz=1669798334 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (1.671524679E9 IN ()) THEN (NOT (x'')) WHEN ((x'') BETWEEN ('Ph') AND (NULL)) THEN (NOT (x'')) WHEN (((x'')) BETWEEN ((5.273161E7)) AND ((NULL))) THEN ((NULL) ISNULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(NULL, x''))<=(NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1724407356 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1742292026 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.3886319647368063)) NOT BETWEEN ((0xffffffffa1088fcf)) AND ((NULL)))))<(((- (0.6805885187234657))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-467021962'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 'C2cMC4E'  WHEN 0.5495307648130315 THEN x'' WHEN x'' THEN '' WHEN NULL THEN '1218392829' END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 969188652 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN '1X' THEN 2147200423 END)-((- (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LIKELY(DISTINCT 0xffffffffa95104d4) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=16116991 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1324874978 sz=1907708702 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-923184657 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '447009269 sz=1952605677 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1924434170 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-33812609 sz=28000838'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1329965961 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-990809482 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=122933022 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1127983231 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.011256603667741505 IN ()) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('0.3337562876577711') BETWEEN (0.9810054870585899) AND (0.9359806329956782)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-487728993'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1219648994 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1951334650 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 2 sz=919407284 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (x'dfd9') AND (NULL))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-757931516 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-779614466 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-309607931 sz=335785347 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=2015510745 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('TC5t')>>(x'')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-762705546 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'GF7P'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1598628322 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '310576007 sz=-1976215355 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1435301560 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1636441559 sz=-384326139 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ROUND(CAST(0xffffffffe8c95d21 AS TEXT), (('')|('-1806238182'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE UNICODE(0.7187141862703903)  WHEN '1466606203' COLLATE BINARY THEN (+ (x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.3109438613105464') NOT NULL))-(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=652090887'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(x'7b06')))OR('')))%((((('L3|w{]]')OR('1382739565')))OR(0.5751693422031464)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-581169719 sz=-757792013'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') IS TRUE) COLLATE BINARY COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x2840a3b5; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1080593947 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2117438607'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-389456607 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=1375275205 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=13388670 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-124299149 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-389456607 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-7.57931516E8)) BETWEEN ((0x2c0a295c)) AND ((x''))))%((((NULL, 0.6805885187234657, 0X51f908c5)) BETWEEN ((0Xffffffffee282a78, NULL, 0.8889275174266029)) AND (('0.3886319647368063', '304962549', 0.27987726738741403))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1321146874 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(rtreenode(NULL, 'l䄮~g5\ze')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((NULL)AND('KhZY''AYb')))AND(x'')))AND('')))OR(0.34497129818282046)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1316952488'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1370094931'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1138066109 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-2043847458)!=(UPPER(DISTINCT 0.1528520668343476))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2124659597 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-2039039310 sz=919407284 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'')%(' }7>-%'))  WHEN (((0.1528520668343476)) BETWEEN ((' ')) AND ((x''))) THEN NULL ELSE ((((NULL)OR('y-^k')))OR('b)f(d')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1867623242'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0x753cf1e)|('-1233100955')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('&￿1y6a')OR('-467021962')))OR(''))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 sz=-1032067391 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.8385122297194093) IS FALSE))OR((((-429097609))>=((NULL))))))AND(LIKE('t㕖*k\oD', 0xde51433))))OR((+ (0.02106397221966383)))))AND(((((0xffffffffce839c4f)OR(0.3981128476500938)))OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) NOT BETWEEN ((-1434113769)) AND ((x'')))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE NULL  WHEN '1106123847' THEN 0.3126448219723075 WHEN 0.1528520668343476 THEN 'U\syY뽏<' WHEN 'E|m' THEN '' WHEN '' THEN x'' WHEN -1367356218 THEN NULL ELSE 0.7100604861262196 END)OR(x'' COLLATE NOCASE)))OR(('Ib' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-762705546 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1401998363'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (x'' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1175538005 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('䇗H')))|(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1147020209 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1916837583 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1831791511'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('B숅O')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2147200423 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.3575031863556579', x'', 1788085926)) BETWEEN (((~ ('')), ((((((((NULL)AND(x'')))OR(x'')))OR(x'')))AND('1724407356')), (397936816 IN (NULL)))) AND ((((x'')<(0.14757153503793585)), IFNULL(-1496225068, x'3f2b5617'), CASE WHEN 0.31013811817597736 THEN NULL END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((((((((0.9419482285258046)OR('-1273584152')))AND(0.9810054870585899)))OR(0.06760293629347458)))AND(0xffffffffc1eb5842)))OR('')))AND(0.0722213557979069)))AND(CASE 0.9536597759966401  WHEN '0.9359806329956782' THEN '' WHEN x'' THEN NULL WHEN 0.20053494604566546 THEN 1.22933022E8 END)))OR(((NULL)>>(NULL)))))OR((+ ('-72811515')))))AND(((x'')LIKE('-1056922025')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2076409995 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1925154606 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1855295955')>>('1534183281')))OR(LIKELIHOOD(x'', 0.715471015245713))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=455511770'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1984544984'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.026963179873435994) NOT BETWEEN ('-1184688975') AND (x''))) NOT BETWEEN (CASE 1.084581081E9  WHEN NULL THEN '' ELSE -6.80260416E8 END) AND (((0.3767420043083609) BETWEEN (0) AND (0xffffffffffe25079)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(x'', CAST('v,T''' AS INTEGER)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-33812609 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '347242387 sz=992782169 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=227938550 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('}w6r' AS INTEGER))>>(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((''))>((x'')))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN COALESCE(DISTINCT 0.3886319647368063, 0.8471461574519499) THEN ('i]' IN ('~<6I<棿}y')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE PRINTF((((('-1170207342')OR(0.34497129818282046)))AND(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1534273853 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1184688975 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'df97')-('1789915578')))AND(((x'')<=(NULL)))))AND((('675324853') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1116306920 -1249689888 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('-722448909') NOTNULL))/((~ (0x7914f67f)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1593274417 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') BETWEEN ('~1PH\o,z') AND ('-222414743'))) BETWEEN (((NULL)>=(x'b0e5bd34'))) AND ((('/Ryi') NOT BETWEEN (0x5c76f14b) AND ('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1096776768 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((+ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1218392829 0 sz=-482681340'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_object(CAST('z_Hd' AS INTEGER), LIKELIHOOD(DISTINCT 0.418807903595364, 0.36093268316587446), CASE WHEN 0.8974448245346867 THEN NULL ELSE '862975444' END, ((-226433066) ISNULL), ((((((((x'')OR(NULL)))OR(NULL)))OR('1148241613')))OR(0xffffffffb0386316)), (((0.5642144196810353))>((1283759)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-173500598 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1370577393 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.5083187407221055) NOT BETWEEN ('') AND (NULL))))=((NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1648830061 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2111850605 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'cd8b')) BETWEEN (((((4.05354374E8)) NOT BETWEEN ((x'')) AND (('1519522355'))))) AND ((IFNULL('%2', 0.1178161943102839)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1250070835'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((8034080.0) BETWEEN ('') AND (''))))>(((((x''))<(('t9,[Z?VA')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=942126582 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT NULL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=-33812609 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0Xffffffffe78f8cf3 AS REAL) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1600182098 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1581696831'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1856618372 -746382295 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN x'' THEN '-680260416' ELSE x'' END THEN 0.666161952621937 ELSE ((((2147200423)OR(0.8899903985615556)))OR(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1707146318 -963706346 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((~ (0.3450050942528029)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-457870064 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-72701027 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'c1aa')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.25397256465395135)+('EJ\n3')))/(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1422767938'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=16116991'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(CASE WHEN '1688023833' THEN 0.4371664725107398 WHEN 0xffffffffb3ca5273 THEN '' WHEN x'' THEN NULL WHEN '-943625616' THEN '1208418395' WHEN x'' THEN NULL ELSE '+' END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((982456755)) BETWEEN ((0.24060289702699666)) AND (('1676289899'))))AND(((1.724407356E9) NOT BETWEEN ('-1349437628') AND (x'')))))OR((NULL IN (x'3ff1')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1136744777 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'11c0' AS BLOB) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1469223946'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2144732450 sz=1667309350 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '45		i' COLLATE NOCASE THEN CAST(NULL AS TEXT) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-545091674 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8404896329223446 COLLATE BINARY)OR(((52731610) BETWEEN (0.5294881400267306) AND ('738863452')))))OR(0.5944400458737484)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((NULL))<=((NULL)))  WHEN CASE WHEN '-1453113172' THEN '1437927184' END THEN ((0.5053988911946092)AND('9jW')) WHEN LENGTH(x'') THEN ((('-27147764')) BETWEEN ((NULL)) AND ((''))) WHEN CAST(x'ac17' AS TEXT) THEN CASE WHEN NULL THEN x'b2e0' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2132572948 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(DISTINCT LIKELIHOOD(0.8251191761835732, 0.5305272571254683)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-2097957895' COLLATE BINARY IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(CASE x''  WHEN x'' THEN 0.03293648195275101 END, ((x'5a10') BETWEEN (NULL) AND (''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -2127952581 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (HEX(264328418) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1875721976'))<>((-1.33189552E9))) IN (0.4544559870382098 COLLATE RTRIM, x'3720' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((4.02819877E8) NOT BETWEEN (NULL) AND (0xffffffff922c4f88)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=647662716 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF((((('0.3109438613105464')AND('-1106127169')))AND('1218392829'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-612339642 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1946176400'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1053253296 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 1951334650 sz=-1278586253 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '427308832 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.23294254459055852)OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-641905550'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=916698869'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN '' THEN '' WHEN '''' THEN x'5b1c' WHEN 0x1fdb40aa THEN '-2053173575' END) BETWEEN ((- (1582878586))) AND ((('-1331895520') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '210686084 sz=1493755668 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-549324948 -72701027 sz=881760580 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('6.JBPꦄ친&')/(0x26de1e07))))<=(('' COLLATE RTRIM))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((0.12904406598924056)AND(NULL)))OR(NULL)))OR(NULL)))AND(NULL)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1977837514 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1384028961 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('t?n')AND('145227621')))OR(0.18724651811878934)))>=(((('U|Pgrjꮝ_5'))>=(('Oc'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('3U{䇗1\n'))<(('kk'))))AND(('c9''}LkUT8' IN ()))))AND(((((NULL)OR(1.504941524E9)))OR(NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-723989213 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1154838540'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('*쫰r4vO0<') BETWEEN (NULL) AND ('%hqlk')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '52731610 0 sz=1084581081 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1047024763 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)|(0Xffffffff8d4078d2)) THEN (+ ('321398861')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(UPPER(DISTINCT '') AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-260674343 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(x'')))OR(NULL)))*((('')<<(x'3b34')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOTNULL)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1631153541'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-40461928'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1750544461 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1940996572 sz=98624530'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.9222370277189393)<(x'')) THEN (('&￿1y6a')|(947968229)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1331895520 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')IS('')))IS(NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1414287699'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)IS NOT(NULL)))>(('0.12687664149529854' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1106123847 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1822515303 sz=-124988166 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-900290293 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) BETWEEN ((0.3270045004783322)) AND (('')))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-946318245 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('쐯b' AS NUMERIC) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('1973001608') BETWEEN (x'') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1167305271 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(DISTINCT NULL, 0.573941556033477))/(CASE WHEN x'' THEN 'n41>\ཿ뱠~' WHEN x'' THEN 0xffffffffe3fd16f4 WHEN 'f*jtꎵb' THEN '-1418440293' ELSE 0.8373409843520602 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1689366255 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('-565479259'))!=((x''))) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1662601222 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-653554173 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-531008782 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('兕甉', x'', x'3d72d730'))<((NULL, NULL, 0X4a70dd47))) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)+(''))) BETWEEN ((x'' IN ())) AND ((((NULL)) NOT BETWEEN ((0X3ad661e4)) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((-1.925154606E9) NOT NULL) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1109169939 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1164122039 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS TRUE)) BETWEEN (STRFTIME(x'', 0.87319009517902, 0.24684497117797266, x'93c3', NULL, NULL, NULL)) AND ((NOT (4.27308832E8)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT ('-1144911347')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '720626835 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=295573997 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1582878586 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '316721840 sz=-1568561626 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(NULL) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT '-72701027' COLLATE BINARY); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1382765623 sz=1187253714 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2132553323 0 sz=183093366'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN 0.1796801457077113 ELSE -1581696831 END) NOT BETWEEN ((0.8854878008934519 IN ())) AND ('' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE 0xffffffffaa852917  WHEN '' THEN 'T?N' WHEN 0x6aa99039 THEN 'Hc)0?X' WHEN '-85100532' THEN x'' ELSE '1671524679' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ (1735341926)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('937288344')OR(x'')))OR(NULL)))OR(x'c88c')))AND('0.21614198927096195'))) NOT BETWEEN (('241088798' IN ())) AND (((x'f687ed45') NOT BETWEEN ('') AND (0.12905645891247342)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)>=('')) COLLATE BINARY; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-299357576 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7474361889061216) NOT BETWEEN ('-865041225') AND (0.07113058789699045)))||(((('28000838'))!=((0.26538665679911244))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.5492979333220448)IS(2133829674)))AND(CASE ''  WHEN 1937241535 THEN NULL WHEN 'ﮰNa|ak~' THEN x'cfed' WHEN '1092116802' THEN 0xffffffff8c740c10 ELSE 0X65d2042 END)))AND('2C')))OR(CASE WHEN NULL THEN '' ELSE -1.593274417E9 END)))OR(((((((((NULL)AND(0.5103432018494464)))OR(0.27987726738741403)))OR(x'')))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('~1PH\o,z') IS FALSE) THEN (-2.26433066E8 IN ()) ELSE ((((0Xffffffffa84f45b8)OR(NULL)))OR(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL IN (0X60179df9)), (('-1331895520') NOT NULL), CASE '-1210197461'  WHEN 'c9''}LkUT8' THEN x'ff88' ELSE x'' END))>=((x'', CAST('8\r#_' AS NUMERIC), (x'fc48' IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)>>('1198404385')) COLLATE BINARY COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) NOT BETWEEN (('')) AND ((x''))))GLOB(((((NULL)OR(NULL)))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1907927260 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0xffffffffbad64f25)OR('923837161')), '-1336608042', '8034080' COLLATE NOCASE))!=((((NULL)<('')), ((1466606203) NOTNULL), (('-1249689888') NOTNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1099810324'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-960274119' IN ()))AND((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1975356453'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER((((0.44090915695275323))<=((0.9810054870585899)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -87550805 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-389456607 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-608746282 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6854953147720562) ISNULL)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1598628322 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6168429799272145) IS FALSE)) BETWEEN (CAST(0.8651267304262744 AS BLOB)) AND ((('-')<>(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(CAST(0xffffffffb4800581 AS NUMERIC)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(x'1c09'))OR(NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ROUND(0.38766341100318646, x'') THEN ((x'7ee49ff0a7f1')<=(NULL)) ELSE ((((0x2153457b)OR(NULL)))AND(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL(DISTINCT x'', NULL)) BETWEEN ((((''))==((x'')))) AND (((x'f6e2')+('-2071202173')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((1183314438) BETWEEN ('1256461518') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1350279140 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST('' AS TEXT)  WHEN (- ('{|')) THEN ('-1925154606' IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=403035067 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.8823286637435741 THEN 'I쯶WmrfD' ELSE '0.45766740445126886' END COLLATE NOCASE COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1864326860'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE TRIM((x'' IN ())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('YelU')AND(NULL)))AND(x'fe92')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=1480328556 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2098265930 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1085366339 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-33812609'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 2.098789574E9 COLLATE RTRIM THEN NULL COLLATE BINARY WHEN (('') NOT BETWEEN (NULL) AND ('-1273584152')) THEN (((x'36e7', x'', -196040754))<=((x'', 0.14147101613075574, ''))) WHEN ('295734413' IN ('-1960500444')) THEN NULL ELSE (('') NOTNULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((x'', x'', -487539323))>((0X5c4fd014, NULL, '1519522355'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.05746249135536907) NOT BETWEEN (',	') AND ('0.3873885349438587')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE GLOB(((x'')&(x'')), (- ('951861719'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=1506998206 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2098789574'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'') NOT BETWEEN ('\r9]싼]') AND (1049643680))))==((UNLIKELY(-1.593274417E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'0f9d5b71')) NOT BETWEEN ((0.3150650648351758)) AND ((''))))AND(LTRIM('', NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_USED(NULL COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((0Xffffffffd72125a9)) AND ((x'1910'))) COLLATE RTRIM COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_patch(HEX('-70490921'), TRIM(DISTINCT NULL, x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT BETWEEN (0.9813422710737606) AND (NULL)))>=(TRIM('y', '-317539840'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7693268492911911 COLLATE NOCASE) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'0e4a' IN ('E s')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=608001081'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL COLLATE RTRIM)AND(((9.16698869E8) NOT NULL))))OR(((x'')>('0.1528520668343476')))))OR((('-1593274417') IS FALSE))))OR((((0.34716470197234495)) NOT BETWEEN ((NULL)) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=357892046 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-467021962 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=47907600 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1762118629 sz=-1139425294 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SUBSTR(2143506240, ((((NULL)AND(x'')))OR('0.24060289702699666'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((''))==(('-1678459861'))))*(((NULL)<=('2098789574')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1876297525'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE NULL  WHEN x'' THEN 0.6078080247899853 ELSE -1581696831 END))>((LIKELY(DISTINCT 0xffffffffed12ba00)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('啃4^,y^', x'', '\n3츲3')) NOT BETWEEN ((0.163674238545221 COLLATE NOCASE, TRIM(DISTINCT NULL), (((('-1462440791')AND(NULL)))AND(x'7554845b')))) AND (((- (x'')), ('兕甉' IN ()), '' COLLATE NOCASE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT (x'e983' IN (x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('0.9222370277189393') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1084522810'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1856249753 sz=1504941524 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=9223372036854775807 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=1106123847 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 -1520252933 sz=2111850605 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1417236432 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-482681340')>=(-481263237)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1504941524 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('-1e500'))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'')OR(0.1911076785300252)))AND(0.4844040370264353)))OR((('0.13800533144281713')/(NULL)))))OR(((((((((NULL)AND(NULL)))AND(0.25982830792030376)))AND(NULL)))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=675324853 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((0.21646780757486872, -317539840, NULL)) BETWEEN ((x'ec95', x'231167d7', x'')) AND ((x'', 'l', '-395122623'))))OR(((NULL)>('1011025018')))))AND(0.7436374043286341 COLLATE RTRIM)))AND((((-1.418440293E9, 'Q{', ''))<=((x'', 0Xfffffffff45aca30, 1883949352))))))OR(CAST(NULL AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.2711650095000816; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.8385122297194093) BETWEEN ('0.13800533144281713') AND (0.8801380692733088)))OR((+ (0.31013811817597736)))))AND(((x'')<=(NULL)))))AND((NULL IN (0.9972141922959711, 0.5228003239173755)))))AND(CAST(1.504941524E9 AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0x6ea538cb)AND(1703556531)))OR(NULL))) BETWEEN ((('PU첱''.')+('{g68\nz'))) AND (x'0b71')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1466606203'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.3702312722572594 COLLATE BINARY COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
ANALYZE; -- 1ms;
ANALYZE; -- 0ms;
INSERT OR REPLACE INTO rt0(c1) VALUES (0.009514252305634519), (NULL), (x''); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES (''); -- 0ms;
END TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(0X341ed7d); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE rt0 SET c0=x'0b13' WHERE ((((-74010365) IS FALSE)) ISNULL); -- 0ms;
PRAGMA journal_mode; -- 0ms;
UPDATE OR IGNORE rt0 SET c1='爤%RP8L6', c0=0.0722213557979069 WHERE ((LIKELIHOOD(DISTINCT rt0.c2, 0.04595931020203203))*(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))); -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
END TRANSACTION; -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT NTILE(CASE WHEN rt0.c1 THEN rt0.c0 COLLATE NOCASE END) OVER () FROM rt0 WHERE ((((((x'9cbb') IS FALSE), x'' COLLATE NOCASE, ((0.24785141897413732)-('892718305'))))<((CASE WHEN '1084581081' THEN 0.8365266775271306 WHEN NULL THEN '[q}4mlx' WHEN 4.02819877E8 THEN x'' END, CAST('bC闔-' AS NUMERIC), CAST(NULL AS NUMERIC))))) GROUP BY ((((((((((rt0.c0)>=(rt0.c0)))OR(rt0.c0)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))AND(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)), ((rt0.c0 COLLATE BINARY) NOT NULL), ((rt0.c1 IN ()) IN ()); -- 1ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(x'') WHERE ((((((rt0.c1, rt0.c1, rt0.c2))<>((rt0.c0, rt0.c2, rt0.c1)))))<=(((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))); -- 0ms;
PRAGMA locking_mode; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (x'3706'), (''), ('S/d'); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
COMMIT; -- 0ms;
PRAGMA temp.ignore_check_constraints; -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
PRAGMA main.locking_mode = NORMAL; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR ABORT rt0 SET (c0)=(NULL); -- 0ms;
UPDATE rt0 SET (c2, c2)=(x'', NULL) WHERE (NOT (CAST(rt0.c1 AS NUMERIC))); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.auto_vacuum = FULL; -- 0ms;
INSERT OR FAIL INTO rt0(c2) VALUES ('-1331895520'); -- 0ms;
INSERT OR REPLACE INTO rt0(c0) VALUES (0.45616256469592786); -- 1ms;
PRAGMA temp.soft_heap_limit; -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 1ms;
ANALYZE; -- 0ms;
COMMIT; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.threads; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE rt0 SET (c1)=('-1859444681') WHERE CASE ((rt0.c0)=(rt0.c0))  WHEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END THEN (((rt0.c0))!=((rt0.c1))) WHEN GLOB(rt0.c0, rt0.c1) THEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN (rt0.c2 IN ()) ELSE rt0.c0 COLLATE RTRIM END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.defer_foreign_keys = false; -- 0ms;
ANALYZE temp; -- 0ms;
VACUUM temp; -- 0ms;
ANALYZE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c0='', c1=NULL WHERE (+ (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA cell_size_check = false; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=x'' WHERE (((rt0.c0)>=(x'')) IN (rt0.c2, (rt0.c0 IN (rt0.c1)))); -- 1ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (CASE WHEN (((v0.c0))<((v0.c0))) THEN ((v0.c0) NOT NULL) ELSE ((((((((v0.c0)OR(v0.c0)))AND(0.14776730312824626)))OR(v0.c0)))OR(v0.c0)) END) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (CASE WHEN (((v0.c0))<((v0.c0))) THEN ((v0.c0) NOT NULL) ELSE ((((((((v0.c0)OR(v0.c0)))AND(0.14776730312824626)))OR(v0.c0)))OR(v0.c0)) END))) UNION ALL SELECT ALL * FROM v0 WHERE (((CASE WHEN (((v0.c0))<((v0.c0))) THEN ((v0.c0) NOT NULL) ELSE ((((((((v0.c0)OR(v0.c0)))AND(0.14776730312824626)))OR(v0.c0)))OR(v0.c0)) END) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS REAL)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST(v0.c0 COLLATE RTRIM AS REAL)))) UNION SELECT DISTINCT * FROM v0 NOT INDEXED WHERE (((CAST(v0.c0 COLLATE RTRIM AS REAL)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 CROSS JOIN v0 ON (- (v0.c0)) COLLATE BINARY COLLATE RTRIM GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 CROSS JOIN v0 ON (- (v0.c0)) COLLATE BINARY COLLATE RTRIM WHERE (((((rt0.c1)<<(rt0.c0))) NOT NULL)) GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 CROSS JOIN v0 ON (- (v0.c0)) COLLATE BINARY COLLATE RTRIM WHERE ((NOT (((((rt0.c1)<<(rt0.c0))) NOT NULL)))) GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 NOT INDEXED CROSS JOIN v0 ON (- (v0.c0)) COLLATE BINARY COLLATE RTRIM WHERE (((((((rt0.c1)<<(rt0.c0))) NOT NULL)) ISNULL)) GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 CROSS JOIN v0 ON (- (v0.c0)) COLLATE BINARY COLLATE RTRIM GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c0, v0.c0 FROM rt0 CROSS JOIN v0 ON CAST(rt0.c1 AS REAL) GROUP BY rt0.c2, rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c0, v0.c0 FROM rt0 CROSS JOIN v0 ON CAST(rt0.c1 AS REAL) GROUP BY rt0.c2, rt0.c0, v0.c0 HAVING MIN(((v0.c0) ISNULL)) UNION ALL SELECT ALL rt0.c2, rt0.c0, v0.c0 FROM rt0 CROSS JOIN v0 ON CAST(rt0.c1 AS REAL) GROUP BY rt0.c2, rt0.c0, v0.c0 HAVING (NOT (MIN(((v0.c0) ISNULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, v0.c0 FROM rt0 CROSS JOIN v0 ON CAST(rt0.c1 AS REAL) GROUP BY rt0.c2, rt0.c0, v0.c0 HAVING ((MIN(((v0.c0) ISNULL))) ISNULL);
SELECT rt0.c2, rt0.c0, v0.c0 FROM rt0 CROSS JOIN v0 ON CAST(rt0.c1 AS REAL) GROUP BY rt0.c2, rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c0, v0.c0 FROM rt0 CROSS JOIN v0 ON CAST(rt0.c1 AS REAL) GROUP BY rt0.c2, rt0.c0, v0.c0 HAVING MIN(((v0.c0) ISNULL)) UNION ALL SELECT ALL rt0.c2, rt0.c0, v0.c0 FROM rt0 CROSS JOIN v0 ON CAST(rt0.c1 AS REAL) GROUP BY rt0.c2, rt0.c0, v0.c0 HAVING (NOT (MIN(((v0.c0) ISNULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, v0.c0 FROM rt0 CROSS JOIN v0 ON CAST(rt0.c1 AS REAL) GROUP BY rt0.c2, rt0.c0, v0.c0 HAVING ((MIN(((v0.c0) ISNULL))) ISNULL);
SELECT rt0.c2, rt0.c0, v0.c0 FROM rt0 CROSS JOIN v0 ON CAST(rt0.c1 AS REAL) GROUP BY rt0.c2, rt0.c0, v0.c0;
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (CAST(((rt0.c2)LIKE(rt0.c1)) AS BLOB)) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (CAST(((rt0.c2)LIKE(rt0.c1)) AS BLOB)))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((CAST(((rt0.c2)LIKE(rt0.c1)) AS BLOB)) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1)/(rt0.c1)) IN (((rt0.c1)|(rt0.c2)), ((('X_1\r')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c1)/(rt0.c1)) IN (((rt0.c1)|(rt0.c2)), ((('X_1\r')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1)/(rt0.c1)) IN (((rt0.c1)|(rt0.c2)), ((('X_1\r')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, v0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 WHERE (((rt0.c1 COLLATE NOCASE)+(((rt0.c0) IS TRUE)))) GROUP BY rt0.c0, rt0.c1, rt0.c2, v0.c0 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((NOT (((rt0.c1 COLLATE NOCASE)+(((rt0.c0) IS TRUE)))))) GROUP BY rt0.c0, rt0.c1, rt0.c2, v0.c0 UNION SELECT rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 WHERE (((((rt0.c1 COLLATE NOCASE)+(((rt0.c0) IS TRUE)))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, v0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, v0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING MIN(((SUM(AVG(GROUP_CONCAT(SUM(x'')))))OR(rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MIN(((SUM(AVG(GROUP_CONCAT(SUM(x'')))))OR(rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MIN(((SUM(AVG(GROUP_CONCAT(SUM(x'')))))OR(rt0.c1)))) ISNULL);
SELECT ALL MAX(((UNICODE(rt0.c2)) BETWEEN (((rt0.c2)==(v0.c0))) AND (((v0.c0) BETWEEN (v0.c0) AND (rt0.c0))))) FROM rt0, v0 ORDER BY CASE x''  WHEN -9223372036854775808 THEN NULL ELSE rt0.c1 END ASC;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c2 FROM v0, rt0 WHERE ((((((v0.c0, v0.c0, '916698869')) NOT BETWEEN ((rt0.c0, NULL, rt0.c2)) AND ((x'706c', x'', rt0.c2)))) NOT NULL)) UNION SELECT DISTINCT rt0.c2 FROM v0, rt0 WHERE ((NOT ((((((v0.c0, v0.c0, '916698869')) NOT BETWEEN ((rt0.c0, NULL, rt0.c2)) AND ((x'706c', x'', rt0.c2)))) NOT NULL)))) UNION SELECT DISTINCT rt0.c2 FROM v0, rt0 WHERE ((((((((v0.c0, v0.c0, '916698869')) NOT BETWEEN ((rt0.c0, NULL, rt0.c2)) AND ((x'706c', x'', rt0.c2)))) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c2 FROM v0, rt0;
SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, v0 WHERE (rt0.c2) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, v0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, v0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(AVG(GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(AVG(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(AVG(GROUP_CONCAT(COUNT(*))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CAST('-361538199' AS REAL)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CAST('-361538199' AS REAL)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CAST('-361538199' AS REAL)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE WHEN ABS(DISTINCT v0.c0) THEN ((v0.c0)+(v0.c0)) ELSE ((((v0.c0)AND(v0.c0)))AND(v0.c0)) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN ABS(DISTINCT v0.c0) THEN ((v0.c0)+(v0.c0)) ELSE ((((v0.c0)AND(v0.c0)))AND(v0.c0)) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE WHEN ABS(DISTINCT v0.c0) THEN ((v0.c0)+(v0.c0)) ELSE ((((v0.c0)AND(v0.c0)))AND(v0.c0)) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE (((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) COLLATE NOCASE) GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) COLLATE NOCASE))) GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE (((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(MAX(TOTAL(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(MAX(TOTAL(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(MAX(TOTAL(v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (NULLIF(v0.c0 COLLATE RTRIM, v0.c0)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (NULLIF(v0.c0 COLLATE RTRIM, v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((NULLIF(v0.c0 COLLATE RTRIM, v0.c0)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((((((((((+ (v0.c0)))OR((NOT (rt0.c0)))))OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))AND(((rt0.c0)!=(rt0.c1)))))OR(((rt0.c1) IS FALSE)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((((((((((+ (v0.c0)))OR((NOT (rt0.c0)))))OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))AND(((rt0.c0)!=(rt0.c1)))))OR(((rt0.c1) IS FALSE)))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((((((((((+ (v0.c0)))OR((NOT (rt0.c0)))))OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))AND(((rt0.c0)<>(rt0.c1)))))OR(((rt0.c1) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL v0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c1;
SELECT ALL v0.c0, rt0.c1 FROM v0, rt0 WHERE (LIKELY(DISTINCT ((rt0.c1)||(rt0.c0)))) GROUP BY v0.c0, rt0.c1 UNION SELECT ALL v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (LIKELY(DISTINCT ((rt0.c1)||(rt0.c0)))))) GROUP BY v0.c0, rt0.c1 UNION SELECT v0.c0, rt0.c1 FROM v0, rt0 WHERE (((LIKELY(DISTINCT ((rt0.c1)||(rt0.c0)))) ISNULL)) GROUP BY v0.c0, rt0.c1;
SELECT ALL v0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) COLLATE BINARY UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*) COLLATE BINARY)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*) COLLATE BINARY) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) COLLATE BINARY UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*) COLLATE BINARY)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*) COLLATE BINARY) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0;
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE (CASE '1807942707'  WHEN CAST(v0.c0 AS NUMERIC) THEN (((('-800766511')AND(v0.c0)))AND(v0.c0)) END) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE ((NOT (CASE '1807942707'  WHEN CAST(v0.c0 AS NUMERIC) THEN (((('-800766511')AND(v0.c0)))AND(v0.c0)) END))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE (((CASE '1807942707'  WHEN CAST(v0.c0 AS NUMERIC) THEN (((('-800766511')AND(v0.c0)))AND(v0.c0)) END) ISNULL));
SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2)>=(rt0.c1))))>=((CAST(rt0.c1 AS TEXT))))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE ((NOT ((((((rt0.c2)>=(rt0.c1))))>=((CAST(rt0.c1 AS TEXT))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c2)>=(rt0.c1))))>=((CAST(rt0.c1 AS TEXT))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON rt0.c0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON rt0.c0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN x'' THEN v0.c0 ELSE rt0.c1 END IN ())) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON rt0.c0 WHERE ((NOT ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN x'' THEN v0.c0 ELSE rt0.c1 END IN ())))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON rt0.c0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN x'' THEN v0.c0 ELSE rt0.c1 END IN ())) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON rt0.c0 GROUP BY rt0.c2;
SELECT ALL rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, v0.c0;
SELECT ALL rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, v0.c0 HAVING (CAST(rt0.c1 AS BLOB) IN ()) UNION ALL SELECT rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, v0.c0 HAVING (NOT ((CAST(rt0.c1 AS BLOB) IN ()))) UNION ALL SELECT rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, v0.c0 HAVING (((CAST(rt0.c1 AS BLOB) IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, v0.c0;
SELECT ALL rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, v0.c0 HAVING (CAST(rt0.c1 AS BLOB) IN ()) UNION ALL SELECT rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, v0.c0 HAVING (NOT ((CAST(rt0.c1 AS BLOB) IN ()))) UNION ALL SELECT rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, v0.c0 HAVING (((CAST(rt0.c1 AS BLOB) IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, v0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (CAST((((v0.c0))<=((v0.c0))) AS NUMERIC)) UNION ALL SELECT * FROM v0 WHERE ((NOT (CAST((((v0.c0))<=((v0.c0))) AS NUMERIC)))) UNION ALL SELECT ALL * FROM v0 WHERE (((CAST((((v0.c0))<=((v0.c0))) AS NUMERIC)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 WHERE ((((rt0.c2) NOT NULL) IN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), LIKELY(DISTINCT NULL)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 WHERE ((NOT ((((rt0.c2) NOT NULL) IN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), LIKELY(DISTINCT NULL)))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 WHERE ((((((rt0.c2) NOT NULL) IN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), LIKELY(DISTINCT NULL)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM rt0, v0;
SELECT rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((CASE rt0.c1  WHEN '0.3662746919697567' THEN v0.c0 END IN ())) GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((NOT ((CASE rt0.c1  WHEN '0.3662746919697567' THEN v0.c0 END IN ())))) GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((((CASE rt0.c1  WHEN '0.3662746919697567' THEN v0.c0 END IN ())) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (CASE WHEN AVG(AVG(COUNT(*))) THEN rt0.c0 ELSE rt0.c1 END IN (CAST(rt0.c1 AS NUMERIC), SUM(rt0.c0), ((SUM(rt0.c1)) NOT NULL))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((CASE WHEN AVG(AVG(COUNT(*))) THEN rt0.c0 ELSE rt0.c1 END IN (CAST(rt0.c1 AS NUMERIC), SUM(rt0.c0), ((SUM(rt0.c1)) NOT NULL))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((CASE WHEN AVG(AVG(COUNT(*))) THEN rt0.c0 ELSE rt0.c1 END IN (CAST(rt0.c1 AS NUMERIC), SUM(rt0.c0), ((SUM(rt0.c1)) NOT NULL)))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0;
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 WHERE (((SQLITE_VERSION())IS NOT(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END))) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 WHERE ((NOT (((SQLITE_VERSION())IS NOT(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 WHERE (((((SQLITE_VERSION())IS NOT(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c2 FROM v0, rt0 WHERE (((((rt0.c2)OR(x'7e28')))OR(rt0.c1)) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2 FROM v0, rt0 WHERE ((NOT (((((rt0.c2)OR(x'7e28')))OR(rt0.c1)) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2 FROM v0, rt0 WHERE (((((((rt0.c2)OR(x'7e28')))OR(rt0.c1)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2 FROM v0, rt0;
SELECT rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM v0, rt0 WHERE (LIKE(((((((((v0.c0)OR(v0.c0)))AND(NULL)))AND(rt0.c2)))AND(v0.c0)), ((rt0.c1)+(rt0.c1)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM v0, rt0 WHERE ((NOT (LIKE(((((((((v0.c0)OR(v0.c0)))AND(NULL)))AND(rt0.c2)))AND(v0.c0)), ((rt0.c1)+(rt0.c1)))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM v0, rt0 WHERE (((LIKE(((((((((v0.c0)OR(v0.c0)))AND(NULL)))AND(rt0.c2)))AND(v0.c0)), ((rt0.c1)+(rt0.c1)))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE WHEN SUM(v0.c0) THEN MIN(MIN(x'')) WHEN SUM(v0.c0) THEN COUNT(*) COLLATE BINARY WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN COUNT(*) WHEN TOTAL(v0.c0) THEN MAX(COUNT(v0.c0)) ELSE TOTAL(v0.c0) END THEN (((AVG(v0.c0), v0.c0, v0.c0))==((v0.c0, COUNT(*), v0.c0))) END UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE WHEN SUM(v0.c0) THEN MIN(MIN(x'')) WHEN SUM(v0.c0) THEN COUNT(*) COLLATE BINARY WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN COUNT(*) WHEN TOTAL(v0.c0) THEN MAX(COUNT(v0.c0)) ELSE TOTAL(v0.c0) END THEN (((AVG(v0.c0), v0.c0, v0.c0))==((v0.c0, COUNT(*), v0.c0))) END)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE WHEN SUM(v0.c0) THEN MIN(MIN(x'')) WHEN SUM(v0.c0) THEN COUNT(*) COLLATE BINARY WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN COUNT(*) WHEN TOTAL(v0.c0) THEN MAX(COUNT(v0.c0)) ELSE TOTAL(v0.c0) END THEN (((AVG(v0.c0), v0.c0, v0.c0))=((v0.c0, COUNT(*), v0.c0))) END) ISNULL);
SELECT ALL TOTAL(SQLITE_VERSION()) FROM rt0, v0;
SELECT ALL rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (((rt0.c0) NOT NULL) COLLATE RTRIM COLLATE RTRIM) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c0) NOT NULL) COLLATE RTRIM COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((((rt0.c0) NOT NULL) COLLATE RTRIM COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((NULL)/(DATETIME(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((NULL)/(DATETIME(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((NULL)/(DATETIME(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0, rt0 WHERE ((('225205705') BETWEEN (((v0.c0)!=(rt0.c2))) AND (((((((((rt0.c0)AND(v0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM v0, rt0 WHERE ((NOT ((('225205705') BETWEEN (((v0.c0)!=(rt0.c2))) AND (((((((((rt0.c0)AND(v0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM v0, rt0 WHERE ((((('225205705') BETWEEN (((v0.c0)!=(rt0.c2))) AND (((((((((rt0.c0)AND(v0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING TOTAL(MAX(rt0.c0)) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (NOT (TOTAL(MAX(rt0.c0)))) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING ((TOTAL(MAX(rt0.c0))) ISNULL);
SELECT rt0.c1, v0.c0, rt0.c0 FROM v0, rt0;
SELECT ALL rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 WHERE (CAST(((v0.c0) NOT NULL) AS NUMERIC)) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 WHERE ((NOT (CAST(((v0.c0) NOT NULL) AS NUMERIC)))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 WHERE (((CAST(((v0.c0) NOT NULL) AS NUMERIC)) ISNULL));
SELECT rt0.c1, v0.c0, rt0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c0, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c0, v0.c0 FROM v0, rt0 WHERE (((v0.c0 IN ()) IN ())) UNION SELECT DISTINCT rt0.c0, v0.c0 FROM v0, rt0 WHERE ((NOT (((v0.c0 IN ()) IN ())))) UNION SELECT DISTINCT rt0.c0, v0.c0 FROM v0, rt0 WHERE (((((v0.c0 IN ()) IN ())) ISNULL));
SELECT DISTINCT rt0.c0, v0.c0 FROM v0, rt0;
SELECT rt0.c2, v0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 END) AND (rt0.c2 COLLATE RTRIM)) GROUP BY rt0.c2, v0.c0, rt0.c1;
SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 END) AND (rt0.c2 COLLATE RTRIM)) WHERE ((((+ (rt0.c1))) IS FALSE)) GROUP BY rt0.c2, v0.c0, rt0.c1 UNION SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 END) AND (rt0.c2 COLLATE RTRIM)) WHERE ((NOT ((((+ (rt0.c1))) IS FALSE)))) GROUP BY rt0.c2, v0.c0, rt0.c1 UNION SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 END) AND (rt0.c2 COLLATE RTRIM)) WHERE ((((((+ (rt0.c1))) IS FALSE)) ISNULL)) GROUP BY rt0.c2, v0.c0, rt0.c1;
SELECT rt0.c2, v0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 END) AND (rt0.c2 COLLATE RTRIM)) GROUP BY rt0.c2, v0.c0, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT((- (MIN(SUM(MAX(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT((- (MIN(SUM(MAX(v0.c0)))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT((- (MIN(SUM(MAX(v0.c0))))))) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (((((rt0.c0)>=(rt0.c1)))LIKE((+ (rt0.c2))))) ORDER BY (+ (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS FIRST, (rt0.c0 COLLATE RTRIM IN ()) ASC, x'f069' DESC  NULLS FIRST;
SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0)>=(rt0.c1)))LIKE((+ (rt0.c2))))))) ORDER BY (+ (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS FIRST, (rt0.c0 COLLATE RTRIM IN ()) ASC, x'f069' DESC  NULLS FIRST;
SELECT ALL rt0.c1 FROM rt0 WHERE (((((((rt0.c0)>=(rt0.c1)))LIKE((+ (rt0.c2))))) ISNULL)) ORDER BY (+ (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS FIRST, (rt0.c0 COLLATE RTRIM IN ()) ASC, x'f069' DESC  NULLS FIRST;
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0 WHERE ((NOT (((NULL)AND(rt0.c2))))) UNION SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0 WHERE ((NOT ((NOT (((NULL)AND(rt0.c2))))))) UNION SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0 WHERE ((((NOT (((NULL)AND(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((('-46787397') BETWEEN (v0.c0) AND (v0.c0)))OR(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((((('-46787397') BETWEEN (v0.c0) AND (v0.c0)))OR(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((((('-46787397') BETWEEN (v0.c0) AND (v0.c0)))OR(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2;
SELECT v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING ((COUNT(*)) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt0.c1)<(v0.c0)))) UNION ALL SELECT v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING (NOT (((COUNT(*)) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt0.c1)<(v0.c0)))))) UNION ALL SELECT ALL v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING ((((COUNT(*)) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt0.c1)<(v0.c0))))) ISNULL);
SELECT v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2;
SELECT v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING ((COUNT(*)) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt0.c1)<(v0.c0)))) UNION ALL SELECT v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING (NOT (((COUNT(*)) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt0.c1)<(v0.c0)))))) UNION ALL SELECT ALL v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING ((((COUNT(*)) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt0.c1)<(v0.c0))))) ISNULL);
SELECT v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2;
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ())) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT ((CAST(v0.c0 AS NUMERIC) IN ())))) UNION ALL SELECT * FROM v0, rt0 WHERE ((((CAST(v0.c0 AS NUMERIC) IN ())) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, v0 WHERE (((((rt0.c1)OR(rt0.c2)))AND(CASE WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c0 END))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, v0 WHERE ((NOT (((((rt0.c1)OR(rt0.c2)))AND(CASE WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c0 END))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, v0 WHERE (((((((rt0.c1)OR(rt0.c2)))AND(CASE WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c0 END))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0 HAVING (GROUP_CONCAT(rt0.c2) IN ()) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0 HAVING (NOT ((GROUP_CONCAT(rt0.c2) IN ()))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0 HAVING (((GROUP_CONCAT(rt0.c2) IN ())) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0 HAVING (GROUP_CONCAT(rt0.c2) IN ()) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0 HAVING (NOT ((GROUP_CONCAT(rt0.c2) IN ()))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0 HAVING (((GROUP_CONCAT(rt0.c2) IN ())) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0;
SELECT ALL SUM(((rt0.c1 COLLATE RTRIM)AND((v0.c0 IN (rt0.c1))))) FROM rt0, v0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END AS REAL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END AS REAL)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END AS REAL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN ((((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(NULL)))OR(rt0.c0)) THEN CAST('-1611002451' AS REAL) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN ((((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(NULL)))OR(rt0.c0)) THEN CAST('-1611002451' AS REAL) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN ((((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(NULL)))OR(rt0.c0)) THEN CAST('-1611002451' AS REAL) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (NULL) AND (v0.c0)) THEN (v0.c0 IN ()) WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0)<(v0.c0)) WHEN v0.c0 THEN CAST(v0.c0 AS REAL) WHEN 0Xffffffff8e53f9ca THEN (((v0.c0, v0.c0, v0.c0))<((-2056146090, v0.c0, NULL))) WHEN ('-1640510474' IN ()) THEN (v0.c0 IN ()) ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE WHEN ((v0.c0) NOT BETWEEN (NULL) AND (v0.c0)) THEN (v0.c0 IN ()) WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0)<(v0.c0)) WHEN v0.c0 THEN CAST(v0.c0 AS REAL) WHEN 0xffffffff8e53f9ca THEN (((v0.c0, v0.c0, v0.c0))<((-2056146090, v0.c0, NULL))) WHEN ('-1640510474' IN ()) THEN (v0.c0 IN ()) ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CASE WHEN ((v0.c0) NOT BETWEEN (NULL) AND (v0.c0)) THEN (v0.c0 IN ()) WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0)<(v0.c0)) WHEN v0.c0 THEN CAST(v0.c0 AS REAL) WHEN 0Xffffffff8e53f9ca THEN (((v0.c0, v0.c0, v0.c0))<((-2056146090, v0.c0, NULL))) WHEN ('-1640510474' IN ()) THEN (v0.c0 IN ()) ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING TOTAL(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING ((TOTAL(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT v0.c0, rt0.c2, rt0.c1 FROM rt0, v0;
SELECT v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0))))>=((((rt0.c1) IS TRUE))))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((NOT ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0))))>=((((rt0.c1) IS TRUE))))))) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0))))>=((((rt0.c1) IS TRUE))))) ISNULL));
SELECT v0.c0, rt0.c2, rt0.c1 FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 NOT INDEXED WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (UNLIKELY(((rt0.c2) ISNULL))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (UNLIKELY(((rt0.c2) ISNULL))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((UNLIKELY(((rt0.c2) ISNULL))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c2, v0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c2, v0.c0 HAVING DATETIME('-40461928', AVG(GROUP_CONCAT(rt0.c2)), ((v0.c0) BETWEEN (COUNT(*)) AND (COUNT(SUM(AVG(rt0.c2)))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c2, v0.c0 HAVING (NOT (DATETIME('-40461928', AVG(GROUP_CONCAT(rt0.c2)), ((v0.c0) BETWEEN (COUNT(*)) AND (COUNT(SUM(AVG(rt0.c2)))))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c2, v0.c0 HAVING ((DATETIME('-40461928', AVG(GROUP_CONCAT(rt0.c2)), ((v0.c0) BETWEEN (COUNT(*)) AND (COUNT(SUM(AVG(rt0.c2))))))) ISNULL);
SELECT TOTAL(LOWER(DISTINCT ((((rt0.c2)OR(v0.c0)))OR(rt0.c1)))) FROM rt0, v0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c2 AS REAL)) ISNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS REAL)) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c2 AS REAL)) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, v0.c0;
SELECT ALL rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((((((((((((rt0.c0, rt0.c2, rt0.c2))=((rt0.c1, rt0.c2, rt0.c1))))AND(((rt0.c2)-(rt0.c1)))))OR(((rt0.c0)GLOB(x'')))))AND((- (rt0.c0)))))AND((((v0.c0, rt0.c1, '&AGL'))>=((rt0.c1, rt0.c2, rt0.c2)))))) GROUP BY rt0.c2, rt0.c1, v0.c0 UNION SELECT rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 NOT INDEXED WHERE ((NOT ((((((((((((rt0.c0, rt0.c2, rt0.c2))==((rt0.c1, rt0.c2, rt0.c1))))AND(((rt0.c2)-(rt0.c1)))))OR(((rt0.c0)GLOB(x'')))))AND((- (rt0.c0)))))AND((((v0.c0, rt0.c1, '&AGL'))>=((rt0.c1, rt0.c2, rt0.c2)))))))) GROUP BY rt0.c2, rt0.c1, v0.c0 UNION SELECT rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((((((((((((((rt0.c0, rt0.c2, rt0.c2))==((rt0.c1, rt0.c2, rt0.c1))))AND(((rt0.c2)-(rt0.c1)))))OR(((rt0.c0)GLOB(x'')))))AND((- (rt0.c0)))))AND((((v0.c0, rt0.c1, '&AGL'))>=((rt0.c1, rt0.c2, rt0.c2)))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, v0.c0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((- (CAST(rt0.c1 AS NUMERIC)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((- (CAST(rt0.c1 AS NUMERIC)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((- (CAST(rt0.c1 AS NUMERIC)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c2)OR(NULL)))AND(rt0.c2 COLLATE RTRIM)))OR((rt0.c2 IN ())))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c2)OR(NULL)))AND(rt0.c2 COLLATE RTRIM)))OR((rt0.c2 IN ())))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((rt0.c2)OR(NULL)))AND(rt0.c2 COLLATE RTRIM)))OR((rt0.c2 IN ())))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, v0.c0;
SELECT ALL rt0.c0, v0.c0 FROM rt0, v0 WHERE ((((IFNULL(rt0.c0, rt0.c2), v0.c0 COLLATE NOCASE, 0.03415102347820276))<=((0.9359820212555705, (((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c0))), (((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN (('', rt0.c2, rt0.c1)) AND ((rt0.c0, v0.c0, rt0.c1))))))) GROUP BY rt0.c0, v0.c0 UNION SELECT rt0.c0, v0.c0 FROM rt0, v0 WHERE ((NOT ((((IFNULL(rt0.c0, rt0.c2), v0.c0 COLLATE NOCASE, 0.03415102347820276))<=((0.9359820212555705, (((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c0))), (((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN (('', rt0.c2, rt0.c1)) AND ((rt0.c0, v0.c0, rt0.c1))))))))) GROUP BY rt0.c0, v0.c0 UNION SELECT rt0.c0, v0.c0 FROM rt0, v0 WHERE ((((((IFNULL(rt0.c0, rt0.c2), v0.c0 COLLATE NOCASE, 0.03415102347820276))<=((0.9359820212555705, (((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c0))), (((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN (('', rt0.c2, rt0.c1)) AND ((rt0.c0, v0.c0, rt0.c1))))))) ISNULL)) GROUP BY rt0.c0, v0.c0;
SELECT ALL rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(MIN(TOTAL(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((NOT (COUNT(MIN(TOTAL(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((NOT (COUNT(MIN(TOTAL(v0.c0)))))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM v0, rt0;
SELECT rt0.c0, rt0.c1 FROM v0, rt0 WHERE (((((rt0.c2)>(rt0.c1))) BETWEEN (CASE WHEN v0.c0 THEN rt0.c0 END) AND (((rt0.c0)==(rt0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (((((rt0.c2)>(rt0.c1))) BETWEEN (CASE WHEN v0.c0 THEN rt0.c0 END) AND (((rt0.c0)=(rt0.c0))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM v0, rt0 WHERE (((((((rt0.c2)>(rt0.c1))) BETWEEN (CASE WHEN v0.c0 THEN rt0.c0 END) AND (((rt0.c0)==(rt0.c0))))) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((~ (0.7456652726020889)) COLLATE BINARY) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((~ (0.7456652726020889)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0 WHERE ((((~ (0.7456652726020889)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 INNER JOIN v0 ON CASE WHEN (NOT (rt0.c0)) THEN ((((rt0.c2)AND(rt0.c1)))AND(v0.c0)) WHEN ((v0.c0) IS TRUE) THEN CAST(rt0.c2 AS BLOB) WHEN '-1428448353' THEN CAST(v0.c0 AS INTEGER) ELSE (rt0.c0 IN ()) END GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 INNER JOIN v0 ON CASE WHEN (NOT (rt0.c0)) THEN ((((rt0.c2)AND(rt0.c1)))AND(v0.c0)) WHEN ((v0.c0) IS TRUE) THEN CAST(rt0.c2 AS BLOB) WHEN '-1428448353' THEN CAST(v0.c0 AS INTEGER) ELSE (rt0.c0 IN ()) END WHERE (CAST(rt0.c2 AS INTEGER)) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 INNER JOIN v0 ON CASE WHEN (NOT (rt0.c0)) THEN ((((rt0.c2)AND(rt0.c1)))AND(v0.c0)) WHEN ((v0.c0) IS TRUE) THEN CAST(rt0.c2 AS BLOB) WHEN '-1428448353' THEN CAST(v0.c0 AS INTEGER) ELSE (rt0.c0 IN ()) END WHERE ((NOT (CAST(rt0.c2 AS INTEGER)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 INNER JOIN v0 ON CASE WHEN (NOT (rt0.c0)) THEN ((((rt0.c2)AND(rt0.c1)))AND(v0.c0)) WHEN ((v0.c0) IS TRUE) THEN CAST(rt0.c2 AS BLOB) WHEN '-1428448353' THEN CAST(v0.c0 AS INTEGER) ELSE (rt0.c0 IN ()) END WHERE (((CAST(rt0.c2 AS INTEGER)) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 INNER JOIN v0 ON CASE WHEN (NOT (rt0.c0)) THEN ((((rt0.c2)AND(rt0.c1)))AND(v0.c0)) WHEN ((v0.c0) IS TRUE) THEN CAST(rt0.c2 AS BLOB) WHEN '-1428448353' THEN CAST(v0.c0 AS INTEGER) ELSE (rt0.c0 IN ()) END GROUP BY rt0.c1, rt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(((COUNT(*)) ISNULL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(((COUNT(*)) ISNULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(((COUNT(*)) ISNULL))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ('1582878586') UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ('1582878586'))) UNION ALL SELECT ALL * FROM v0 WHERE ((('1582878586') ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((v0.c0)<(v0.c0)))))AND(PRINTF(v0.c0, v0.c0, v0.c0)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((v0.c0)<(v0.c0)))))AND(PRINTF(v0.c0, v0.c0, v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((v0.c0)<(v0.c0)))))AND(PRINTF(v0.c0, v0.c0, v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) NOT BETWEEN ((NOT (rt0.c0))) AND (((rt0.c1)-(rt0.c1))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE BINARY) NOT BETWEEN ((NOT (rt0.c0))) AND (((rt0.c1)-(rt0.c1))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c2 COLLATE BINARY) NOT BETWEEN ((NOT (rt0.c0))) AND (((rt0.c1)-(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2;
SELECT rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2 HAVING AVG(((rt0.c0)&(rt0.c0))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2 HAVING (NOT (AVG(((rt0.c0)&(rt0.c0))))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2 HAVING ((AVG(((rt0.c0)&(rt0.c0)))) ISNULL);
SELECT ALL rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2;
SELECT rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2 HAVING AVG(((rt0.c0)&(rt0.c0))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2 HAVING (NOT (AVG(((rt0.c0)&(rt0.c0))))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2 HAVING ((AVG(((rt0.c0)&(rt0.c0)))) ISNULL);
SELECT ALL rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (0.07222905050916417) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (0.07222905050916417))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((0.07222905050916417) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON '1537819782';
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON '1537819782' WHERE (((((((((v0.c0)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(x'')) COLLATE BINARY) UNION SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON '1537819782' WHERE ((NOT (((((((((v0.c0)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(x'')) COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON '1537819782' WHERE (((((((((((v0.c0)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(x'')) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON '1537819782';
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((LENGTH(v0.c0))>=(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((LENGTH(v0.c0))>=(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((LENGTH(v0.c0))>=(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM rt0 NOT INDEXED, v0 GROUP BY v0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (rt0.c1) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST((((v0.c0, x'1740', v0.c0))>((v0.c0, v0.c0, v0.c0))) AS TEXT)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST((((v0.c0, x'1740', v0.c0))>((v0.c0, v0.c0, v0.c0))) AS TEXT)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST((((v0.c0, x'1740', v0.c0))>((v0.c0, v0.c0, v0.c0))) AS TEXT)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON (v0.c0 IN ()) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON (v0.c0 IN ()) WHERE (rt0.c0) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON (v0.c0 IN ()) WHERE ((NOT (rt0.c0))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON (v0.c0 IN ()) WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON (v0.c0 IN ()) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON 0.17106541707530531 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON 0.17106541707530531 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((MIN(rt0.c0)) NOT NULL) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED RIGHT OUTER JOIN v0 ON 0.17106541707530531 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((MIN(rt0.c0)) NOT NULL))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON 0.17106541707530531 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((MIN(rt0.c0)) NOT NULL)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON 0.17106541707530531 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON 0.17106541707530531 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((MIN(rt0.c0)) NOT NULL) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED RIGHT OUTER JOIN v0 ON 0.17106541707530531 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((MIN(rt0.c0)) NOT NULL))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON 0.17106541707530531 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((MIN(rt0.c0)) NOT NULL)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON 0.17106541707530531 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN (('1250070835')) AND ((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN (('1250070835')) AND ((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN (('1250070835')) AND ((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM v0, rt0 WHERE (((v0.c0)>=(CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 END))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((NOT (((v0.c0)>=(CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 END))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM v0, rt0 WHERE (((((v0.c0)>=(CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 END))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM v0, rt0;
SELECT v0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c2;
SELECT v0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE (rt0.c1) GROUP BY v0.c0, rt0.c1, rt0.c2 UNION SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((NOT (rt0.c1))) GROUP BY v0.c0, rt0.c1, rt0.c2 UNION SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c2;
SELECT v0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c2;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING SUM(SUM(MAX(SUM(rt0.c0)))) UNION ALL SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING (NOT (SUM(SUM(MAX(SUM(rt0.c0)))))) UNION ALL SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING ((SUM(SUM(MAX(SUM(rt0.c0))))) ISNULL);
SELECT ALL TOTAL((((+ (rt0.c2)))AND(((rt0.c2) IS FALSE)))) FROM rt0 ORDER BY (~ ('1918472665'))  NULLS FIRST, GLOB(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c0)<>(rt0.c1))), CASE WHEN rt0.c1 COLLATE BINARY THEN rt0.c0 WHEN ((rt0.c2)/(rt0.c1)) THEN ((rt0.c0) ISNULL) WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) THEN (rt0.c1 IN ()) END  NULLS LAST;
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c2 IN ())) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END) AND ((NOT (NULL))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT ((((rt0.c2 IN ())) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END) AND ((NOT (NULL))))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((((rt0.c2 IN ())) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END) AND ((NOT (NULL))))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON ((((CAST(v0.c0 AS BLOB))AND(CAST(rt0.c0 AS TEXT))))AND(rt0.c2 COLLATE BINARY));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON ((((CAST(v0.c0 AS BLOB))AND(CAST(rt0.c0 AS TEXT))))AND(rt0.c2 COLLATE BINARY)) WHERE (((((rt0.c2) NOTNULL)) NOT NULL)) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON ((((CAST(v0.c0 AS BLOB))AND(CAST(rt0.c0 AS TEXT))))AND(rt0.c2 COLLATE BINARY)) WHERE ((NOT (((((rt0.c2) NOTNULL)) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON ((((CAST(v0.c0 AS BLOB))AND(CAST(rt0.c0 AS TEXT))))AND(rt0.c2 COLLATE BINARY)) WHERE (((((((rt0.c2) NOTNULL)) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON ((((CAST(v0.c0 AS BLOB))AND(CAST(rt0.c0 AS TEXT))))AND(rt0.c2 COLLATE BINARY));
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0 WHERE (((rt0.c2) NOTNULL)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM v0, rt0 WHERE ((NOT (((rt0.c2) NOTNULL)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM v0, rt0 WHERE (((((rt0.c2) NOTNULL)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING AVG(COUNT(rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (AVG(COUNT(rt0.c1)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((AVG(COUNT(rt0.c1))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (x'fc81') AND (v0.c0)))) AND ((v0.c0)))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (x'fc81') AND (v0.c0)))) AND ((v0.c0)))))) UNION ALL SELECT * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (x'fc81') AND (v0.c0)))) AND ((v0.c0)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))) IN ())) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))) IN ())))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c2 AS BLOB))AND(UPPER(rt0.c1))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((CAST(rt0.c2 AS BLOB))AND(UPPER(rt0.c1))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((CAST(rt0.c2 AS BLOB))AND(UPPER(rt0.c1))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING TOTAL(SUM(rt0.c1)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (TOTAL(SUM(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((TOTAL(SUM(rt0.c1))) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE ((((((((((((((rt0.c1 IN ()))AND(0.004764762237167264)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND (('-31145757'))))))OR(((rt0.c1) IS FALSE))))OR(((rt0.c0) IS FALSE))))AND(((rt0.c2)<=(rt0.c2)))))OR((rt0.c0 IN ())))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT ((((((((((((((rt0.c1 IN ()))AND(0.004764762237167264)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND (('-31145757'))))))OR(((rt0.c1) IS FALSE))))OR(((rt0.c0) IS FALSE))))AND(((rt0.c2)<=(rt0.c2)))))OR((rt0.c0 IN ())))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((((((((((((((rt0.c1 IN ()))AND(0.004764762237167264)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND (('-31145757'))))))OR(((rt0.c1) IS FALSE))))OR(((rt0.c0) IS FALSE))))AND(((rt0.c2)<=(rt0.c2)))))OR((rt0.c0 IN ())))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c2 FROM v0, rt0 WHERE (TRIM(DISTINCT CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END, (+ (rt0.c0)))) UNION SELECT DISTINCT rt0.c2 FROM v0, rt0 WHERE ((NOT (TRIM(DISTINCT CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END, (+ (rt0.c0)))))) UNION SELECT DISTINCT rt0.c2 FROM v0, rt0 WHERE (((TRIM(DISTINCT CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END, (+ (rt0.c0)))) ISNULL));
SELECT DISTINCT rt0.c2 FROM v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ('-923184657') GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ('-923184657'))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((('-923184657') ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0 HAVING TOTAL((('1695760622') NOT BETWEEN (MAX(COUNT(MAX(v0.c0)))) AND (MIN(MIN(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (TOTAL((('1695760622') NOT BETWEEN (MAX(COUNT(MAX(v0.c0)))) AND (MIN(MIN(rt0.c1))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0 HAVING ((TOTAL((('1695760622') NOT BETWEEN (MAX(COUNT(MAX(v0.c0)))) AND (MIN(MIN(rt0.c1)))))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c1)IS(rt0.c0)))) AND ((LOWER(DISTINCT rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((((rt0.c1)IS(rt0.c0)))) AND ((LOWER(DISTINCT rt0.c1))))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((((rt0.c1)IS(rt0.c0)))) AND ((LOWER(DISTINCT rt0.c1))))) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (0.39859691254025587 COLLATE RTRIM) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (0.39859691254025587 COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((0.39859691254025587 COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE NOCASE)AND(((v0.c0) NOT NULL))))AND(CAST(v0.c0 AS INTEGER)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0 COLLATE NOCASE)AND(((v0.c0) NOT NULL))))AND(CAST(v0.c0 AS INTEGER)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0 COLLATE NOCASE)AND(((v0.c0) NOT NULL))))AND(CAST(v0.c0 AS INTEGER)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(SUM(TOTAL(MIN(v0.c0))) AS TEXT)) BETWEEN (GROUP_CONCAT(v0.c0)) AND (MIN(COUNT(*)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((CAST(SUM(TOTAL(MIN(v0.c0))) AS TEXT)) BETWEEN (GROUP_CONCAT(v0.c0)) AND (MIN(COUNT(*)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((CAST(SUM(TOTAL(MIN(v0.c0))) AS TEXT)) BETWEEN (GROUP_CONCAT(v0.c0)) AND (MIN(COUNT(*))))) ISNULL);
SELECT ALL rt0.c0, v0.c0 FROM rt0, v0;
SELECT rt0.c0, v0.c0 FROM rt0, v0 WHERE (rt0.c0) UNION ALL SELECT rt0.c0, v0.c0 FROM rt0, v0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL rt0.c0, v0.c0 FROM rt0, v0 WHERE (((rt0.c0) ISNULL));
SELECT ALL rt0.c0, v0.c0 FROM rt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((NOT (v0.c0)) IN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE x'11b2' END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((NOT (v0.c0)) IN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE x'11b2' END))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((NOT (v0.c0)) IN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE x'11b2' END))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (rt0.c0 IN ()) GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (rt0.c0 IN ()) WHERE ((NOT (NULL))) GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0 UNION SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (rt0.c0 IN ()) WHERE ((NOT ((NOT (NULL))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (rt0.c0 IN ()) WHERE ((((NOT (NULL))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON (rt0.c0 IN ()) GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING MIN(GROUP_CONCAT(SUM(COUNT(AVG(AVG(COUNT(COUNT(rt0.c2)))))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MIN(GROUP_CONCAT(SUM(COUNT(AVG(AVG(COUNT(COUNT(rt0.c2)))))))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((MIN(GROUP_CONCAT(SUM(COUNT(AVG(AVG(COUNT(COUNT(rt0.c2))))))))) ISNULL);
SELECT v0.c0, rt0.c2 FROM rt0, v0;
SELECT v0.c0, rt0.c2 FROM rt0, v0 WHERE ('') UNION ALL SELECT v0.c0, rt0.c2 FROM rt0, v0 NOT INDEXED WHERE ((NOT (''))) UNION ALL SELECT ALL v0.c0, rt0.c2 FROM rt0, v0 WHERE ((('') ISNULL));
SELECT v0.c0, rt0.c2 FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST(v0.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((NOT (CAST(v0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((NOT (CAST(v0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((-313649010) ISNULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((-313649010) ISNULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((-313649010) ISNULL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(v0.c0)) NOTNULL) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((GROUP_CONCAT(v0.c0)) NOTNULL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((GROUP_CONCAT(v0.c0)) NOTNULL)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(v0.c0)) NOTNULL) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((GROUP_CONCAT(v0.c0)) NOTNULL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((GROUP_CONCAT(v0.c0)) NOTNULL)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS INTEGER) COLLATE BINARY) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(rt0.c2 AS INTEGER) COLLATE BINARY))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(rt0.c2 AS INTEGER) COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0)AND(x'')))AND(v0.c0))) NOT BETWEEN (((v0.c0)/(v0.c0))) AND (CAST(v0.c0 AS NUMERIC)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0)AND(x'')))AND(v0.c0))) NOT BETWEEN (((v0.c0)/(v0.c0))) AND (CAST(v0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((v0.c0)AND(x'')))AND(v0.c0))) NOT BETWEEN (((v0.c0)/(v0.c0))) AND (CAST(v0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((((0.9626883499123542) NOTNULL))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((((0.9626883499123542) NOTNULL))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((((0.9626883499123542) NOTNULL))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0;
SELECT ALL rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0 HAVING AVG(COUNT(AVG(v0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0 HAVING (NOT (AVG(COUNT(AVG(v0.c0))))) UNION ALL SELECT rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0 HAVING ((AVG(COUNT(AVG(v0.c0)))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (CAST('?>l7%&um-' AS REAL)) UNION ALL SELECT * FROM v0 WHERE ((NOT (CAST('?>l7%&um-' AS REAL)))) UNION ALL SELECT * FROM v0 WHERE (((CAST('?>l7%&um-' AS REAL)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((~ (CASE -124988166  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((~ (CASE -124988166  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((~ (CASE -124988166  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON ((((((rt0.c1) NOT NULL))OR(((v0.c0) IS TRUE))))AND(v0.c0 COLLATE RTRIM)) GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON ((((((rt0.c1) NOT NULL))OR(((v0.c0) IS TRUE))))AND(v0.c0 COLLATE RTRIM)) WHERE ((((((((rt0.c0)AND(rt0.c0)))OR(v0.c0))))>=((((rt0.c1)*(rt0.c1)))))) GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON ((((((rt0.c1) NOT NULL))OR(((v0.c0) IS TRUE))))AND(v0.c0 COLLATE RTRIM)) WHERE ((NOT ((((((((rt0.c0)AND(rt0.c0)))OR(v0.c0))))>=((((rt0.c1)*(rt0.c1)))))))) GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON ((((((rt0.c1) NOT NULL))OR(((v0.c0) IS TRUE))))AND(v0.c0 COLLATE RTRIM)) WHERE ((((((((((rt0.c0)AND(rt0.c0)))OR(v0.c0))))>=((((rt0.c1)*(rt0.c1)))))) ISNULL)) GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON ((((((rt0.c1) NOT NULL))OR(((v0.c0) IS TRUE))))AND(v0.c0 COLLATE RTRIM)) GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c1;
SELECT v0.c0, rt0.c0 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c0, rt0.c0;
SELECT ALL v0.c0, rt0.c0 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c0, rt0.c0 HAVING MAX(TOTAL(MIN(v0.c0))) UNION ALL SELECT ALL v0.c0, rt0.c0 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c0, rt0.c0 HAVING (NOT (MAX(TOTAL(MIN(v0.c0))))) UNION ALL SELECT v0.c0, rt0.c0 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c0, rt0.c0 HAVING ((MAX(TOTAL(MIN(v0.c0)))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (CAST((+ (v0.c0)) AS TEXT)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (CAST((+ (v0.c0)) AS TEXT)))) UNION ALL SELECT * FROM v0 WHERE (((CAST((+ (v0.c0)) AS TEXT)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((NOT (v0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0 WHERE ((((NOT (v0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (rt0.c2))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE NOCASE) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (rt0.c2))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c2 COLLATE NOCASE) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (rt0.c2))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0;
SELECT rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0 HAVING (COUNT(AVG(COUNT(*))) IN (AVG(rt0.c1))) UNION ALL SELECT rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0 HAVING (NOT ((COUNT(AVG(COUNT(*))) IN (AVG(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0 HAVING (((COUNT(AVG(COUNT(*))) IN (AVG(rt0.c1)))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c1) NOT NULL))|(((rt0.c0)&(rt0.c0))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1) NOT NULL))|(((rt0.c0)&(rt0.c0))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c1) NOT NULL))|(((rt0.c0)&(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0;
SELECT rt0.c1, v0.c0 FROM v0, rt0 WHERE ((+ (NULL))) GROUP BY rt0.c1, v0.c0 UNION SELECT rt0.c1, v0.c0 FROM v0, rt0 WHERE ((NOT ((+ (NULL))))) GROUP BY rt0.c1, v0.c0 UNION SELECT ALL rt0.c1, v0.c0 FROM v0, rt0 WHERE ((((+ (NULL))) ISNULL)) GROUP BY rt0.c1, v0.c0;
SELECT rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0;
SELECT ALL rt0.c2 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING (AVG('') IN ()) UNION ALL SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING (NOT ((AVG('') IN ()))) UNION ALL SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING (((AVG('') IN ())) ISNULL);
SELECT ALL rt0.c2 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING (AVG('') IN ()) UNION ALL SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING (NOT ((AVG('') IN ()))) UNION ALL SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING (((AVG('') IN ())) ISNULL);
SELECT ALL rt0.c2 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (highlight(CAST(rt0.c2 AS REAL), x'', ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), MIN(rt0.c0, rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (highlight(CAST(rt0.c2 AS REAL), x'', ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), MIN(rt0.c0, rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((highlight(CAST(rt0.c2 AS REAL), x'', ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), MIN(rt0.c0, rt0.c0))) ISNULL));
SELECT DISTINCT * FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM v0 NATURAL JOIN rt0 WHERE ((~ (rt0.c1))) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN rt0 WHERE ((NOT ((~ (rt0.c1))))) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN rt0 WHERE ((((~ (rt0.c1))) ISNULL));
SELECT DISTINCT * FROM v0 NATURAL JOIN rt0;
SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c2;
SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE (0.7997155393009803) GROUP BY v0.c0, rt0.c1, rt0.c2 UNION SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE ((NOT (0.7997155393009803))) GROUP BY v0.c0, rt0.c1, rt0.c2 UNION SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE (((0.7997155393009803) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c2;
SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2 HAVING GROUP_CONCAT(MIN(rt0.c1)) UNION ALL SELECT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(MIN(rt0.c1)))) UNION ALL SELECT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2 HAVING ((GROUP_CONCAT(MIN(rt0.c1))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((((LIKELY(DISTINCT v0.c0))OR(((v0.c0)AND(x'')))))AND((((v0.c0, '1531899046', 0.25594673089411135))<=(('', v0.c0, v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((((LIKELY(DISTINCT v0.c0))OR(((v0.c0)AND(x'')))))AND((((v0.c0, '1531899046', 0.25594673089411135))<=(('', v0.c0, v0.c0)))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((((LIKELY(DISTINCT v0.c0))OR(((v0.c0)AND(x'')))))AND((((v0.c0, '1531899046', 0.25594673089411135))<=(('', v0.c0, v0.c0)))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0))>((v0.c0))) COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0))>((v0.c0))) COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0))>((v0.c0))) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(MAX(v0.c0))) NOT BETWEEN (COUNT(GROUP_CONCAT(GROUP_CONCAT(MIN(GROUP_CONCAT(COUNT(*))))))) AND (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((TOTAL(MAX(v0.c0))) NOT BETWEEN (COUNT(GROUP_CONCAT(GROUP_CONCAT(MIN(GROUP_CONCAT(COUNT(*))))))) AND (COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((TOTAL(MAX(v0.c0))) NOT BETWEEN (COUNT(GROUP_CONCAT(GROUP_CONCAT(MIN(GROUP_CONCAT(COUNT(*))))))) AND (COUNT(*)))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (TRIM(DISTINCT rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (TRIM(DISTINCT rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((TRIM(DISTINCT rt0.c1)) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE (((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))GLOB(v0.c0 COLLATE NOCASE))) GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((NOT (((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))GLOB(v0.c0 COLLATE NOCASE))))) GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE (((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))GLOB(v0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING MIN(CAST(rt0.c2 AS INTEGER)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MIN(CAST(rt0.c2 AS INTEGER)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MIN(CAST(rt0.c2 AS INTEGER))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING MIN(CAST(rt0.c2 AS INTEGER)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MIN(CAST(rt0.c2 AS INTEGER)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MIN(CAST(rt0.c2 AS INTEGER))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CASE CASE WHEN v0.c0 THEN v0.c0 END  WHEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) THEN 0xf73b1d2 WHEN (- ('-1678459861')) THEN ((((((((NULL)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) WHEN CAST(v0.c0 AS REAL) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN '-1678459861' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CASE CASE WHEN v0.c0 THEN v0.c0 END  WHEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) THEN 0xf73b1d2 WHEN (- ('-1678459861')) THEN ((((((((NULL)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) WHEN CAST(v0.c0 AS REAL) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN '-1678459861' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CASE CASE WHEN v0.c0 THEN v0.c0 END  WHEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) THEN 0xf73b1d2 WHEN (- ('-1678459861')) THEN ((((((((NULL)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) WHEN CAST(v0.c0 AS REAL) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN '-1678459861' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((NOT (v0.c0))) NOT BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c0))) AND (((v0.c0)IS(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((NOT (v0.c0))) NOT BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c0))) AND (((v0.c0)IS(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((NOT (v0.c0))) NOT BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c0))) AND (((v0.c0)IS(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS REAL)) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST((rt0.c2 IN ()) AS REAL)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST((rt0.c2 IN ()) AS REAL)) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING MIN((((GROUP_CONCAT(rt0.c0), MIN(TOTAL(GROUP_CONCAT(rt0.c2))), rt0.c0)) BETWEEN ((rt0.c1, TOTAL(rt0.c0), NULL)) AND ((MIN(GROUP_CONCAT(0.026963179873435994)), '', rt0.c0)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MIN((((GROUP_CONCAT(rt0.c0), MIN(TOTAL(GROUP_CONCAT(rt0.c2))), rt0.c0)) BETWEEN ((rt0.c1, TOTAL(rt0.c0), NULL)) AND ((MIN(GROUP_CONCAT(0.026963179873435994)), '', rt0.c0)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((MIN((((GROUP_CONCAT(rt0.c0), MIN(TOTAL(GROUP_CONCAT(rt0.c2))), rt0.c0)) BETWEEN ((rt0.c1, TOTAL(rt0.c0), NULL)) AND ((MIN(GROUP_CONCAT(0.026963179873435994)), '', rt0.c0))))) ISNULL);
SELECT rt0.c1, v0.c0 FROM v0, rt0;
SELECT ALL rt0.c1, v0.c0 FROM v0, rt0 WHERE (((v0.c0) IS TRUE)) UNION ALL SELECT rt0.c1, v0.c0 FROM v0, rt0 WHERE ((NOT (((v0.c0) IS TRUE)))) UNION ALL SELECT rt0.c1, v0.c0 FROM v0, rt0 WHERE (((((v0.c0) IS TRUE)) ISNULL));
SELECT rt0.c1, v0.c0 FROM v0, rt0;
SELECT DISTINCT v0.c0, rt0.c2, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((((((((v0.c0)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)) IN ((rt0.c0 IN (rt0.c0)), ((((rt0.c1)OR(0.46810144803809894)))OR(rt0.c2))));
SELECT DISTINCT v0.c0, rt0.c2, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((((((((v0.c0)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)) IN ((rt0.c0 IN (rt0.c0)), ((((rt0.c1)OR(0.46810144803809894)))OR(rt0.c2)))) WHERE ((('-2039039310') BETWEEN (rt0.c1 COLLATE RTRIM) AND (v0.c0))) UNION SELECT DISTINCT v0.c0, rt0.c2, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((((((((v0.c0)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)) IN ((rt0.c0 IN (rt0.c0)), ((((rt0.c1)OR(0.46810144803809894)))OR(rt0.c2)))) WHERE ((NOT ((('-2039039310') BETWEEN (rt0.c1 COLLATE RTRIM) AND (v0.c0))))) UNION SELECT DISTINCT v0.c0, rt0.c2, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((((((((v0.c0)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)) IN ((rt0.c0 IN (rt0.c0)), ((((rt0.c1)OR(0.46810144803809894)))OR(rt0.c2)))) WHERE ((((('-2039039310') BETWEEN (rt0.c1 COLLATE RTRIM) AND (v0.c0))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c2, rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((((((((v0.c0)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)) IN ((rt0.c0 IN (rt0.c0)), ((((rt0.c1)OR(0.46810144803809894)))OR(rt0.c2))));
SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM rt0 CROSS JOIN v0 ON (((rt0.c2))>((COALESCE(rt0.c0, rt0.c2, rt0.c1, -2.097957895E9)))) GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT rt0.c2, v0.c0, rt0.c0 FROM rt0 CROSS JOIN v0 ON (((rt0.c2))>((COALESCE(rt0.c0, rt0.c2, rt0.c1, -2.097957895E9)))) WHERE (CASE ((rt0.c0)<(v0.c0))  WHEN LOWER(rt0.c1) THEN (((v0.c0, rt0.c0, NULL)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c0, v0.c0, rt0.c0))) END) GROUP BY rt0.c2, v0.c0, rt0.c0 UNION SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM rt0 CROSS JOIN v0 ON (((rt0.c2))>((COALESCE(rt0.c0, rt0.c2, rt0.c1, -2.097957895E9)))) WHERE ((NOT (CASE ((rt0.c0)<(v0.c0))  WHEN LOWER(rt0.c1) THEN (((v0.c0, rt0.c0, NULL)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c0, v0.c0, rt0.c0))) END))) GROUP BY rt0.c2, v0.c0, rt0.c0 UNION SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM rt0 CROSS JOIN v0 ON (((rt0.c2))>((COALESCE(rt0.c0, rt0.c2, rt0.c1, -2.097957895E9)))) WHERE (((CASE ((rt0.c0)<(v0.c0))  WHEN LOWER(rt0.c1) THEN (((v0.c0, rt0.c0, NULL)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c0, v0.c0, rt0.c0))) END) ISNULL)) GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM rt0 CROSS JOIN v0 ON (((rt0.c2))>((COALESCE(rt0.c0, rt0.c2, rt0.c1, -2.097957895E9)))) GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT rt0.c2 FROM rt0 INNER JOIN v0 ON rt0.c2 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 INNER JOIN v0 ON rt0.c2 GROUP BY rt0.c2 HAVING (((MAX(AVG(rt0.c0)), MIN(GROUP_CONCAT(AVG(rt0.c0))), GROUP_CONCAT(TOTAL(TOTAL(rt0.c2)))))!=((AVG(MAX(MIN(MIN(rt0.c2)))), TOTAL(rt0.c2), GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 INNER JOIN v0 ON rt0.c2 GROUP BY rt0.c2 HAVING (NOT ((((MAX(AVG(rt0.c0)), MIN(GROUP_CONCAT(AVG(rt0.c0))), GROUP_CONCAT(TOTAL(TOTAL(rt0.c2)))))!=((AVG(MAX(MIN(MIN(rt0.c2)))), TOTAL(rt0.c2), GROUP_CONCAT(rt0.c2)))))) UNION ALL SELECT rt0.c2 FROM rt0 INNER JOIN v0 ON rt0.c2 GROUP BY rt0.c2 HAVING (((((MAX(AVG(rt0.c0)), MIN(GROUP_CONCAT(AVG(rt0.c0))), GROUP_CONCAT(TOTAL(TOTAL(rt0.c2)))))<>((AVG(MAX(MIN(MIN(rt0.c2)))), TOTAL(rt0.c2), GROUP_CONCAT(rt0.c2))))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((+ (v0.c0))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((+ (v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((((+ (v0.c0))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((- (rt0.c2))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (((rt0.c2) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((- (rt0.c2))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (((rt0.c2) IS FALSE)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((- (rt0.c2))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (((rt0.c2) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 WHERE (((((CAST(rt0.c1 AS BLOB))OR(rt0.c0)))AND(rt0.c2))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 WHERE ((NOT (((((CAST(rt0.c1 AS BLOB))OR(rt0.c0)))AND(rt0.c2))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 WHERE (((((((CAST(rt0.c1 AS BLOB))OR(rt0.c0)))AND(rt0.c2))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2 HAVING ((SUM(v0.c0)) NOT BETWEEN (CAST(AVG(TOTAL(GROUP_CONCAT(rt0.c0))) AS BLOB)) AND (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (((SUM(v0.c0)) NOT BETWEEN (CAST(AVG(TOTAL(GROUP_CONCAT(rt0.c0))) AS BLOB)) AND (COUNT(*))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2 HAVING ((((SUM(v0.c0)) NOT BETWEEN (CAST(AVG(TOTAL(GROUP_CONCAT(rt0.c0))) AS BLOB)) AND (COUNT(*)))) ISNULL);
SELECT rt0.c2 FROM v0, rt0;
SELECT ALL rt0.c2 FROM v0, rt0 WHERE (CASE (((rt0.c1))<=((rt0.c0)))  WHEN rt0.c2 COLLATE RTRIM THEN CAST(v0.c0 AS REAL) END) UNION ALL SELECT rt0.c2 FROM v0, rt0 WHERE ((NOT (CASE (((rt0.c1))<=((rt0.c0)))  WHEN rt0.c2 COLLATE RTRIM THEN CAST(v0.c0 AS REAL) END))) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 WHERE (((CASE (((rt0.c1))<=((rt0.c0)))  WHEN rt0.c2 COLLATE RTRIM THEN CAST(v0.c0 AS REAL) END) ISNULL));
SELECT rt0.c2 FROM v0, rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((CAST(rt0.c0 AS TEXT))>>(((rt0.c1)+(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((CAST(rt0.c0 AS TEXT))>>(((rt0.c1)+(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((CAST(rt0.c0 AS TEXT))>>(((rt0.c1)+(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 WHERE ('233116723') GROUP BY rt0.c2, rt0.c0, v0.c0 UNION SELECT ALL rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 WHERE ((NOT ('233116723'))) GROUP BY rt0.c2, rt0.c0, v0.c0 UNION SELECT ALL rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 WHERE ((('233116723') ISNULL)) GROUP BY rt0.c2, rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((v0.c0)<=(NULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((NOT (((v0.c0)<=(NULL)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((NOT (((v0.c0)<=(NULL))))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((v0.c0)<=(NULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((NOT (((v0.c0)<=(NULL)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((NOT (((v0.c0)<=(NULL))))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (LIKELIHOOD(DISTINCT ((0.7865783502754282)<>(v0.c0)), 0.08310141647549985)) UNION ALL SELECT * FROM v0 WHERE ((NOT (LIKELIHOOD(DISTINCT ((0.7865783502754282)!=(v0.c0)), 0.08310141647549985)))) UNION ALL SELECT ALL * FROM v0 WHERE (((LIKELIHOOD(DISTINCT ((0.7865783502754282)!=(v0.c0)), 0.08310141647549985)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c1, rt0.c2, v0.c0 FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c1, rt0.c2, v0.c0 FROM v0 NATURAL JOIN rt0 WHERE (CASE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN ((rt0.c0)<=(rt0.c0)) THEN CASE WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END END) UNION SELECT DISTINCT rt0.c1, rt0.c2, v0.c0 FROM v0 NATURAL JOIN rt0 WHERE ((NOT (CASE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN ((rt0.c0)<=(rt0.c0)) THEN CASE WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END END))) UNION SELECT DISTINCT rt0.c1, rt0.c2, v0.c0 FROM v0 NATURAL JOIN rt0 WHERE (((CASE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN ((rt0.c0)<=(rt0.c0)) THEN CASE WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, v0.c0 FROM v0 NATURAL JOIN rt0;
SELECT ALL rt0.c2, v0.c0 FROM rt0 NOT INDEXED, v0 GROUP BY rt0.c2, v0.c0;
SELECT ALL rt0.c2, v0.c0 FROM rt0, v0 WHERE (((CAST(rt0.c1 AS INTEGER)) IS TRUE)) GROUP BY rt0.c2, v0.c0 UNION SELECT rt0.c2, v0.c0 FROM rt0, v0 WHERE ((NOT (((CAST(rt0.c1 AS INTEGER)) IS TRUE)))) GROUP BY rt0.c2, v0.c0 UNION SELECT ALL rt0.c2, v0.c0 FROM rt0, v0 WHERE (((((CAST(rt0.c1 AS INTEGER)) IS TRUE)) ISNULL)) GROUP BY rt0.c2, v0.c0;
SELECT ALL rt0.c2, v0.c0 FROM rt0 NOT INDEXED, v0 GROUP BY rt0.c2, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((CASE WHEN v0.c0 THEN '-1032736491' END IN ())) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((CASE WHEN v0.c0 THEN '-1032736491' END IN ())))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((CASE WHEN v0.c0 THEN '-1032736491' END IN ())) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 WHERE (((((rt0.c0)||(rt0.c1)))==((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c0)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 WHERE ((NOT (((((rt0.c0)||(rt0.c1)))=((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c0)))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 WHERE (((((((rt0.c0)||(rt0.c1)))=((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON ((((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))OR((((v0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0))))))OR(v0.c0)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON ((((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))OR((((v0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0))))))OR(v0.c0)) WHERE (((- (rt0.c2)) IN (rt0.c2, ((rt0.c1)>(v0.c0))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON ((((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))OR((((v0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0))))))OR(v0.c0)) WHERE ((NOT (((- (rt0.c2)) IN (rt0.c2, ((rt0.c1)>(v0.c0))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON ((((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))OR((((v0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0))))))OR(v0.c0)) WHERE (((((- (rt0.c2)) IN (rt0.c2, ((rt0.c1)>(v0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON ((((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))OR((((v0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0))))))OR(v0.c0)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING ((((MAX(SUM(v0.c0)))-(GROUP_CONCAT(GROUP_CONCAT(v0.c0))))) IS FALSE) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING (NOT (((((MAX(SUM(v0.c0)))-(GROUP_CONCAT(GROUP_CONCAT(v0.c0))))) IS FALSE))) UNION ALL SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING ((((((MAX(SUM(v0.c0)))-(GROUP_CONCAT(GROUP_CONCAT(v0.c0))))) IS FALSE)) ISNULL);
SELECT rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON (rt0.c0 COLLATE NOCASE IN ());
SELECT rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON (rt0.c0 COLLATE NOCASE IN ()) WHERE ((- (rt0.c1 COLLATE RTRIM))) UNION ALL SELECT rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON (rt0.c0 COLLATE NOCASE IN ()) WHERE ((NOT ((- (rt0.c1 COLLATE RTRIM))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON (rt0.c0 COLLATE NOCASE IN ()) WHERE ((((- (rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON (rt0.c0 COLLATE NOCASE IN ());
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c2)*(rt0.c0)))) AND ((CAST(rt0.c1 AS REAL))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((((rt0.c2)*(rt0.c0)))) AND ((CAST(rt0.c1 AS REAL))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((((rt0.c2)*(rt0.c0)))) AND ((CAST(rt0.c1 AS REAL))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0;
SELECT rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((((((rt0.c0, x'', rt0.c1))>((NULL, v0.c0, rt0.c1)))) NOT NULL)) GROUP BY rt0.c1, rt0.c2, v0.c0 UNION SELECT ALL rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((NOT ((((((rt0.c0, x'', rt0.c1))>((NULL, v0.c0, rt0.c1)))) NOT NULL)))) GROUP BY rt0.c1, rt0.c2, v0.c0 UNION SELECT rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((((((((rt0.c0, x'', rt0.c1))>((NULL, v0.c0, rt0.c1)))) NOT NULL)) ISNULL)) GROUP BY rt0.c1, rt0.c2, v0.c0;
SELECT ALL rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0 HAVING COUNT(((rt0.c0)LIKE(rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0 HAVING (NOT (COUNT(((rt0.c0)LIKE(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0 HAVING ((COUNT(((rt0.c0)LIKE(rt0.c0)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0 HAVING COUNT(((rt0.c0)LIKE(rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0 HAVING (NOT (COUNT(((rt0.c0)LIKE(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0 HAVING ((COUNT(((rt0.c0)LIKE(rt0.c0)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((+ ((((122933022, rt0.c2, rt0.c0))<=((v0.c0, rt0.c1, '')))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((+ ((((122933022, rt0.c2, rt0.c0))<=((v0.c0, rt0.c1, '')))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((+ ((((122933022, rt0.c2, rt0.c0))<=((v0.c0, rt0.c1, '')))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(SUM(AVG(TOTAL(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(SUM(AVG(TOTAL(GROUP_CONCAT(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(SUM(AVG(TOTAL(GROUP_CONCAT(v0.c0)))))) ISNULL);
SELECT v0.c0 FROM v0 NOT INDEXED;
SELECT ALL v0.c0 FROM v0 WHERE ((- (0x2be7b070))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((- (0x2be7b070))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((- (0X2be7b070))) ISNULL));
SELECT v0.c0 FROM v0 NOT INDEXED;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((((rt0.c0)||(NULL)), (((rt0.c1))>((v0.c0))), COALESCE(rt0.c0, rt0.c1, rt0.c2, 0.42751977071715996)))>=((((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)), CAST(rt0.c1 AS TEXT), ((v0.c0)<<(rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((((rt0.c0)||(NULL)), (((rt0.c1))>((v0.c0))), COALESCE(rt0.c0, rt0.c1, rt0.c2, 0.42751977071715996)))>=((((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)), CAST(rt0.c1 AS TEXT), ((v0.c0)<<(rt0.c0)))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((((rt0.c0)||(NULL)), (((rt0.c1))>((v0.c0))), COALESCE(rt0.c0, rt0.c1, rt0.c2, 0.42751977071715996)))>=((((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)), CAST(rt0.c1 AS TEXT), ((v0.c0)<<(rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0, v0 WHERE (LIKELIHOOD(((((((((0xffffffffae7da998)OR(v0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(v0.c0)), 0.8097698518596588)) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (LIKELIHOOD(((((((((0Xffffffffae7da998)OR(v0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(v0.c0)), 0.8097698518596588)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0, v0 WHERE (((LIKELIHOOD(((((((((0Xffffffffae7da998)OR(v0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(v0.c0)), 0.8097698518596588)) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING (((((COUNT(SUM(rt0.c2)))) BETWEEN ((0.6917508547747686)) AND ((rt0.c1)))) BETWEEN (TOTAL(AVG(MIN(rt0.c0)))) AND (COUNT(rt0.c1))) UNION ALL SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING (NOT ((((((COUNT(SUM(rt0.c2)))) BETWEEN ((0.6917508547747686)) AND ((rt0.c1)))) BETWEEN (TOTAL(AVG(MIN(rt0.c0)))) AND (COUNT(rt0.c1))))) UNION ALL SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING (((((((COUNT(SUM(rt0.c2)))) BETWEEN ((0.6917508547747686)) AND ((rt0.c1)))) BETWEEN (TOTAL(AVG(MIN(rt0.c0)))) AND (COUNT(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c1) NOT NULL)) NOTNULL)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c1) NOT NULL)) NOTNULL)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c1) NOT NULL)) NOTNULL)) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0, v0 WHERE (('-1273584152' IN ())) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (('-1273584152' IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0, v0 WHERE (((('-1273584152' IN ())) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0, v0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((x'8376')OR(((rt0.c0)IS(x''))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((x'8376')OR(((rt0.c0)IS(x''))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((x'8376')OR(((rt0.c0)IS(x''))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0 HAVING MAX(TOTAL(COUNT(SUM(SUM(COUNT(*)))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0 HAVING (NOT (MAX(TOTAL(COUNT(SUM(SUM(COUNT(*)))))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0 HAVING ((MAX(TOTAL(COUNT(SUM(SUM(COUNT(*))))))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c0) IS TRUE))LIKE(((rt0.c0) NOT NULL)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0) IS TRUE))LIKE(((rt0.c0) NOT NULL)))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c0) IS TRUE))LIKE(((rt0.c0) NOT NULL)))) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c0)>>(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c0)>>(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0)>>(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 WHERE (TYPEOF(rt0.c0)) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT (TYPEOF(rt0.c0)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 WHERE (((TYPEOF(rt0.c0)) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((UPPER(rt0.c2))%(SUM(MAX(AVG(SUM(MAX(TOTAL(SUM(MAX(rt0.c0)))))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (((UPPER(rt0.c2))%(SUM(MAX(AVG(SUM(MAX(TOTAL(SUM(MAX(rt0.c0)))))))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((((UPPER(rt0.c2))%(SUM(MAX(AVG(SUM(MAX(TOTAL(SUM(MAX(rt0.c0))))))))))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((v0.c0) BETWEEN ('') AND (v0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((v0.c0) BETWEEN ('') AND (v0.c0)) COLLATE RTRIM))) UNION ALL SELECT * FROM v0 WHERE (((((v0.c0) BETWEEN ('') AND (v0.c0)) COLLATE RTRIM) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c2 FROM rt0, v0 WHERE (((rt0.c2)&(rt0.c1)) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2 FROM rt0, v0 WHERE ((NOT (((rt0.c2)&(rt0.c1)) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2 FROM rt0, v0 WHERE (((((rt0.c2)&(rt0.c1)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0, v0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c2)<>(rt0.c0)))*(NULLIF(rt0.c0, rt0.c0)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2)<>(rt0.c0)))*(NULLIF(rt0.c0, rt0.c0)))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c2)<>(rt0.c0)))*(NULLIF(rt0.c0, rt0.c0)))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING CASE ((((rt0.c0)OR(rt0.c0)))OR(SUM(GROUP_CONCAT(MAX('233116723')))))  WHEN MAX(TOTAL(COUNT(rt0.c2))) THEN TOTAL(AVG(MAX(rt0.c2))) WHEN AVG(rt0.c1) THEN ((('', 'tKﳆ,磒', COUNT(rt0.c0))) NOT BETWEEN ((TOTAL(rt0.c2), rt0.c0, AVG(MIN(MIN(TOTAL(MAX(MIN(SUM(MAX(MIN(AVG(rt0.c1)))))))))))) AND ((rt0.c2, rt0.c2, rt0.c0))) WHEN ((MIN(COUNT(rt0.c0))) BETWEEN (rt0.c2) AND (SUM(SUM(rt0.c2)))) THEN (- (COUNT(*))) ELSE AVG(rt0.c2) END UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (CASE ((((rt0.c0)OR(rt0.c0)))OR(SUM(GROUP_CONCAT(MAX('233116723')))))  WHEN MAX(TOTAL(COUNT(rt0.c2))) THEN TOTAL(AVG(MAX(rt0.c2))) WHEN AVG(rt0.c1) THEN ((('', 'tKﳆ,磒', COUNT(rt0.c0))) NOT BETWEEN ((TOTAL(rt0.c2), rt0.c0, AVG(MIN(MIN(TOTAL(MAX(MIN(SUM(MAX(MIN(AVG(rt0.c1)))))))))))) AND ((rt0.c2, rt0.c2, rt0.c0))) WHEN ((MIN(COUNT(rt0.c0))) BETWEEN (rt0.c2) AND (SUM(SUM(rt0.c2)))) THEN (- (COUNT(*))) ELSE AVG(rt0.c2) END)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((CASE ((((rt0.c0)OR(rt0.c0)))OR(SUM(GROUP_CONCAT(MAX('233116723')))))  WHEN MAX(TOTAL(COUNT(rt0.c2))) THEN TOTAL(AVG(MAX(rt0.c2))) WHEN AVG(rt0.c1) THEN ((('', 'tKﳆ,磒', COUNT(rt0.c0))) NOT BETWEEN ((TOTAL(rt0.c2), rt0.c0, AVG(MIN(MIN(TOTAL(MAX(MIN(SUM(MAX(MIN(AVG(rt0.c1)))))))))))) AND ((rt0.c2, rt0.c2, rt0.c0))) WHEN ((MIN(COUNT(rt0.c0))) BETWEEN (rt0.c2) AND (SUM(SUM(rt0.c2)))) THEN (- (COUNT(*))) ELSE AVG(rt0.c2) END) ISNULL);
SELECT TOTAL('-1593274417') FROM v0, rt0 ORDER BY CAST(v0.c0 AS TEXT) ASC  NULLS FIRST;
SELECT ALL rt0.c2 FROM rt0, v0;
SELECT ALL rt0.c2 FROM rt0, v0 WHERE (CAST(rt0.c2 COLLATE RTRIM AS REAL)) UNION ALL SELECT rt0.c2 FROM rt0, v0 WHERE ((NOT (CAST(rt0.c2 COLLATE RTRIM AS REAL)))) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0 WHERE (((CAST(rt0.c2 COLLATE RTRIM AS REAL)) ISNULL));
SELECT ALL rt0.c2 FROM rt0, v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ())) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ())))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ())) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c2, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON CASE UNLIKELY(rt0.c1)  WHEN (NOT (rt0.c1)) THEN ((((rt0.c0)AND(v0.c0)))OR(v0.c0)) WHEN rt0.c2 COLLATE NOCASE THEN rt0.c2 WHEN rt0.c2 THEN ((((rt0.c1)OR(x'')))AND(rt0.c2)) ELSE (((('䤡|z~')OR(v0.c0)))AND(rt0.c2)) END GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON CASE UNLIKELY(rt0.c1)  WHEN (NOT (rt0.c1)) THEN ((((rt0.c0)AND(v0.c0)))OR(v0.c0)) WHEN rt0.c2 COLLATE NOCASE THEN rt0.c2 WHEN rt0.c2 THEN ((((rt0.c1)OR(x'')))AND(rt0.c2)) ELSE (((('䤡|z~')OR(v0.c0)))AND(rt0.c2)) END WHERE (((rt0.c2 COLLATE NOCASE)-(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON CASE UNLIKELY(rt0.c1)  WHEN (NOT (rt0.c1)) THEN ((((rt0.c0)AND(v0.c0)))OR(v0.c0)) WHEN rt0.c2 COLLATE NOCASE THEN rt0.c2 WHEN rt0.c2 THEN ((((rt0.c1)OR(x'')))AND(rt0.c2)) ELSE (((('䤡|z~')OR(v0.c0)))AND(rt0.c2)) END WHERE ((NOT (((rt0.c2 COLLATE NOCASE)-(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON CASE UNLIKELY(rt0.c1)  WHEN (NOT (rt0.c1)) THEN ((((rt0.c0)AND(v0.c0)))OR(v0.c0)) WHEN rt0.c2 COLLATE NOCASE THEN rt0.c2 WHEN rt0.c2 THEN ((((rt0.c1)OR(x'')))AND(rt0.c2)) ELSE (((('䤡|z~')OR(v0.c0)))AND(rt0.c2)) END WHERE (((((rt0.c2 COLLATE NOCASE)-(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON CASE UNLIKELY(rt0.c1)  WHEN (NOT (rt0.c1)) THEN ((((rt0.c0)AND(v0.c0)))OR(v0.c0)) WHEN rt0.c2 COLLATE NOCASE THEN rt0.c2 WHEN rt0.c2 THEN ((((rt0.c1)OR(x'')))AND(rt0.c2)) ELSE (((('䤡|z~')OR(v0.c0)))AND(rt0.c2)) END GROUP BY rt0.c2, rt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) NOT BETWEEN (MIN(v0.c0)) AND (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((COUNT(*)) NOT BETWEEN (MIN(v0.c0)) AND (COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((COUNT(*)) NOT BETWEEN (MIN(v0.c0)) AND (COUNT(*)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) NOT BETWEEN (MIN(v0.c0)) AND (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((COUNT(*)) NOT BETWEEN (MIN(v0.c0)) AND (COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((COUNT(*)) NOT BETWEEN (MIN(v0.c0)) AND (COUNT(*)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1, v0.c0 FROM v0, rt0;
SELECT rt0.c1, v0.c0 FROM v0, rt0 WHERE (UPPER(DISTINCT rt0.c2)) UNION ALL SELECT ALL rt0.c1, v0.c0 FROM v0, rt0 WHERE ((NOT (UPPER(DISTINCT rt0.c2)))) UNION ALL SELECT ALL rt0.c1, v0.c0 FROM v0, rt0 WHERE (((UPPER(DISTINCT rt0.c2)) ISNULL));
SELECT rt0.c1, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c1, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c1, v0.c0 FROM v0, rt0 WHERE ((NOT (CASE rt0.c1  WHEN '-1184688975' THEN rt0.c0 END))) UNION SELECT DISTINCT rt0.c1, v0.c0 FROM v0, rt0 WHERE ((NOT ((NOT (CASE rt0.c1  WHEN '-1184688975' THEN rt0.c0 END))))) UNION SELECT DISTINCT rt0.c1, v0.c0 FROM v0, rt0 WHERE ((((NOT (CASE rt0.c1  WHEN '-1184688975' THEN rt0.c0 END))) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0 FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(v0.c0 AS INTEGER) COLLATE BINARY) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(v0.c0 AS INTEGER) COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS INTEGER) COLLATE BINARY) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (((rt0.c0)||(MIN(NULL))) IN (GROUP_CONCAT(COUNT(COUNT(rt0.c0))), COUNT(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT ((((rt0.c0)||(MIN(NULL))) IN (GROUP_CONCAT(COUNT(COUNT(rt0.c0))), COUNT(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (((((rt0.c0)||(MIN(NULL))) IN (GROUP_CONCAT(COUNT(COUNT(rt0.c0))), COUNT(rt0.c1)))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((NOT ((v0.c0 IN ())))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((NOT ((v0.c0 IN ())))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((NOT ((v0.c0 IN ())))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)AND((~ (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)AND((~ (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)AND((~ (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) NOT NULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS BLOB)) NOT NULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS BLOB)) NOT NULL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((AVG('1724407356') COLLATE RTRIM)OR(((rt0.c1)LIKE(rt0.c0)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((AVG('1724407356') COLLATE RTRIM)OR(((rt0.c1)LIKE(rt0.c0)))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((AVG('1724407356') COLLATE RTRIM)OR(((rt0.c1)LIKE(rt0.c0))))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((AVG('1724407356') COLLATE RTRIM)OR(((rt0.c1)LIKE(rt0.c0)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((AVG('1724407356') COLLATE RTRIM)OR(((rt0.c1)LIKE(rt0.c0)))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((AVG('1724407356') COLLATE RTRIM)OR(((rt0.c1)LIKE(rt0.c0))))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0 COLLATE RTRIM) NOT NULL)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE RTRIM) NOT NULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE RTRIM) NOT NULL)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2 IN ()))||(((rt0.c2)AND(v0.c0))));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2 IN ()))||(((rt0.c2)AND(v0.c0)))) WHERE (((((v0.c0)!=(v0.c0)))!=(v0.c0))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2 IN ()))||(((rt0.c2)AND(v0.c0)))) WHERE ((NOT (((((v0.c0)<>(v0.c0)))<>(v0.c0))))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2 IN ()))||(((rt0.c2)AND(v0.c0)))) WHERE (((((((v0.c0)!=(v0.c0)))!=(v0.c0))) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2 IN ()))||(((rt0.c2)AND(v0.c0))));
SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0 NATURAL JOIN v0 WHERE ('n41>\ཿ뱠~') GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0 NATURAL JOIN v0 WHERE ((NOT ('n41>\ཿ뱠~'))) GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0 NATURAL JOIN v0 WHERE ((('n41>\ཿ뱠~') ISNULL)) GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING TOTAL((~ (MIN(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (TOTAL((~ (MIN(GROUP_CONCAT(COUNT(*)))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((TOTAL((~ (MIN(GROUP_CONCAT(COUNT(*))))))) ISNULL);
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((load_extension(v0.c0, rt0.c0))&((rt0.c2 IN ())));
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((load_extension(v0.c0, rt0.c0))&((rt0.c2 IN ()))) WHERE (((('405354374' IN ())) IS FALSE)) UNION ALL SELECT ALL * FROM rt0 INNER JOIN v0 ON ((load_extension(v0.c0, rt0.c0))&((rt0.c2 IN ()))) WHERE ((NOT (((('405354374' IN ())) IS FALSE)))) UNION ALL SELECT * FROM rt0 INNER JOIN v0 ON ((load_extension(v0.c0, rt0.c0))&((rt0.c2 IN ()))) WHERE (((((('405354374' IN ())) IS FALSE)) ISNULL));
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((load_extension(v0.c0, rt0.c0))&((rt0.c2 IN ())));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0, v0 WHERE ((- ((rt0.c2 IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM rt0, v0 WHERE ((NOT ((- ((rt0.c2 IN ())))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM rt0, v0 WHERE ((((- ((rt0.c2 IN ())))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0 HAVING CAST(COUNT(rt0.c0) AS REAL) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (CAST(COUNT(rt0.c0) AS REAL))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 NOT INDEXED, v0 GROUP BY rt0.c2, rt0.c0 HAVING ((CAST(COUNT(rt0.c0) AS REAL)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0 HAVING CAST(COUNT(rt0.c0) AS REAL) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (CAST(COUNT(rt0.c0) AS REAL))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 NOT INDEXED, v0 GROUP BY rt0.c2, rt0.c0 HAVING ((CAST(COUNT(rt0.c0) AS REAL)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL v0.c0, rt0.c0, rt0.c1 FROM v0, rt0;
SELECT v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 WHERE (v0.c0) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (v0.c0))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 WHERE (((v0.c0) ISNULL));
SELECT ALL v0.c0, rt0.c0, rt0.c1 FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (0.9419482285258046) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (0.9419482285258046))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((0.9419482285258046) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0 IN (0xffffffffc50c4605)) IN ())) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0 IN (0xffffffffc50c4605)) IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0 IN (0xffffffffc50c4605)) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING MIN(((TOTAL('405354374')) NOT NULL)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MIN(((TOTAL('405354374')) NOT NULL)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MIN(((TOTAL('405354374')) NOT NULL))) ISNULL);
SELECT rt0.c1, v0.c0, rt0.c2 FROM v0, rt0;
SELECT ALL rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))OR(x'')))AND(TYPEOF(DISTINCT rt0.c2)))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))OR(x'')))AND(TYPEOF(DISTINCT rt0.c2)))))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 WHERE (((((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))OR(x'')))AND(TYPEOF(DISTINCT rt0.c2)))) ISNULL));
SELECT rt0.c1, v0.c0, rt0.c2 FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0)|(v0.c0)) IN ((v0.c0 IN ()), ROUND(v0.c0, v0.c0)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)|(v0.c0)) IN ((v0.c0 IN ()), ROUND(v0.c0, v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0)|(v0.c0)) IN ((v0.c0 IN ()), ROUND(v0.c0, v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((('\/೫U5nO\/')<((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((('\/೫U5nO\/')<((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((('\/೫U5nO\/')<((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING CASE LIKELIHOOD(rt0.c2, 0.2474883008863168)  WHEN AVG(rt0.c2) THEN (MAX(rt0.c0) IN ()) WHEN ((((rt0.c0)OR(AVG(MIN(COUNT(*))))))OR(rt0.c1)) THEN SUM(MIN(rt0.c2)) WHEN MAX(GROUP_CONCAT(TOTAL(SUM(SUM(COUNT(*)))))) THEN SUM(COUNT(AVG(GROUP_CONCAT(rt0.c1)))) ELSE COUNT(MAX(COUNT(*))) END UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (CASE LIKELIHOOD(rt0.c2, 0.2474883008863168)  WHEN AVG(rt0.c2) THEN (MAX(rt0.c0) IN ()) WHEN ((((rt0.c0)OR(AVG(MIN(COUNT(*))))))OR(rt0.c1)) THEN SUM(MIN(rt0.c2)) WHEN MAX(GROUP_CONCAT(TOTAL(SUM(SUM(COUNT(*)))))) THEN SUM(COUNT(AVG(GROUP_CONCAT(rt0.c1)))) ELSE COUNT(MAX(COUNT(*))) END)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((CASE LIKELIHOOD(rt0.c2, 0.2474883008863168)  WHEN AVG(rt0.c2) THEN (MAX(rt0.c0) IN ()) WHEN ((((rt0.c0)OR(AVG(MIN(COUNT(*))))))OR(rt0.c1)) THEN SUM(MIN(rt0.c2)) WHEN MAX(GROUP_CONCAT(TOTAL(SUM(SUM(COUNT(*)))))) THEN SUM(COUNT(AVG(GROUP_CONCAT(rt0.c1)))) ELSE COUNT(MAX(COUNT(*))) END) ISNULL);
SELECT SUM((((((rt0.c0, rt0.c2, NULL))>((rt0.c1, rt0.c2, rt0.c2))))&(((((((((rt0.c1)AND(rt0.c0)))AND('-2031351949')))OR(rt0.c1)))AND(rt0.c2))))) FROM rt0 ORDER BY LIKE(CAST(rt0.c0 AS INTEGER), ((rt0.c1) IS TRUE), '1') DESC, (((((rt0.c2)) NOT BETWEEN (('')) AND ((rt0.c0))))LIKE(x'5da3'));
SELECT * FROM v0 INNER JOIN rt0 ON '445211709';
SELECT * FROM v0 INNER JOIN rt0 ON '445211709' WHERE (((((rt0.c2)==(rt0.c2)))>=((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) UNION ALL SELECT ALL * FROM v0 INNER JOIN rt0 ON '445211709' WHERE ((NOT (((((rt0.c2)==(rt0.c2)))>=((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))))) UNION ALL SELECT ALL * FROM v0 INNER JOIN rt0 ON '445211709' WHERE (((((((rt0.c2)=(rt0.c2)))>=((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) ISNULL));
SELECT * FROM v0 INNER JOIN rt0 ON '445211709';
SELECT DISTINCT * FROM v0 NOT INDEXED;
SELECT DISTINCT * FROM v0 WHERE (CAST(((v0.c0) BETWEEN (NULL) AND (v0.c0)) AS NUMERIC)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST(((v0.c0) BETWEEN (NULL) AND (v0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST(((v0.c0) BETWEEN (NULL) AND (v0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM v0 NOT INDEXED;
SELECT ALL rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0;
SELECT ALL rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((('-911349618')>=(rt0.c1)) COLLATE RTRIM) GROUP BY rt0.c1, rt0.c2, v0.c0 UNION SELECT rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((NOT ((('-911349618')>=(rt0.c1)) COLLATE RTRIM))) GROUP BY rt0.c1, rt0.c2, v0.c0 UNION SELECT ALL rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((((('-911349618')>=(rt0.c1)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1, rt0.c2, v0.c0;
SELECT ALL rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0;
SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING rt0.c0 UNION ALL SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING ((rt0.c0) ISNULL);
SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING rt0.c0 UNION ALL SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING ((rt0.c0) ISNULL);
SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0;
SELECT ALL MAX((((rt0.c2, rt0.c2, v0.c0)) NOT BETWEEN (((rt0.c0 IN ()), ((rt0.c0)|(rt0.c0)), x'9c9e')) AND (((((((((('x-Infinitys%j')OR(rt0.c0)))OR(rt0.c0)))AND(NULL)))AND(rt0.c0)), GLOB(rt0.c0, v0.c0), ((rt0.c0)>>(v0.c0)))))) FROM v0, rt0 ORDER BY NULLIF(((rt0.c1)&(v0.c0)), ((x'') BETWEEN (rt0.c0) AND (v0.c0))) ASC;
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((~ (rt0.c1 COLLATE NOCASE))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((~ (rt0.c1 COLLATE NOCASE))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((~ (rt0.c1 COLLATE NOCASE))) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((rt0.c2)<<(rt0.c2)) IN (rt0.c2))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2)<<(rt0.c2)) IN (rt0.c2))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((((rt0.c2)<<(rt0.c2)) IN (rt0.c2))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 NATURAL JOIN v0 WHERE (rt0.c1) GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (rt0.c1))) GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 NATURAL JOIN v0 WHERE (((rt0.c1) ISNULL)) GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING rt0.c0 UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING rt0.c0 UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)!=((NOT (rt0.c0))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE BINARY)!=((NOT (rt0.c0))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((((rt0.c2 COLLATE BINARY)!=((NOT (rt0.c0))))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (('2zafgOra' IN (((v0.c0)>(rt0.c2))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (('2zafgOra' IN (((v0.c0)>(rt0.c2))))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((('2zafgOra' IN (((v0.c0)>(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 WHERE (((rt0.c0) NOT NULL)) GROUP BY v0.c0, rt0.c1, rt0.c0 UNION SELECT v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 WHERE ((NOT (((rt0.c0) NOT NULL)))) GROUP BY v0.c0, rt0.c1, rt0.c0 UNION SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 WHERE (((((rt0.c0) NOT NULL)) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING SUM(MAX(SUM(AVG(AVG(MAX(rt0.c2)))))) UNION ALL SELECT ALL rt0.c0 FROM v0, rt0 NOT INDEXED GROUP BY rt0.c0 HAVING (NOT (SUM(MAX(SUM(AVG(AVG(MAX(rt0.c2)))))))) UNION ALL SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING ((SUM(MAX(SUM(AVG(AVG(MAX(rt0.c2))))))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL) COLLATE NOCASE COLLATE RTRIM) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1) ISNULL) COLLATE NOCASE COLLATE RTRIM))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c1) ISNULL) COLLATE NOCASE COLLATE RTRIM) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE RTRIM) GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1 UNION SELECT v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((NOT (CAST(v0.c0 AS NUMERIC) COLLATE RTRIM))) GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE (((CAST(v0.c0 AS NUMERIC) COLLATE RTRIM) ISNULL)) GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING ((((COUNT(*)) NOT BETWEEN (SUM(COUNT(*))) AND (COUNT(rt0.c2)))) ISNULL) UNION ALL SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING (NOT (((((COUNT(*)) NOT BETWEEN (SUM(COUNT(*))) AND (COUNT(rt0.c2)))) ISNULL))) UNION ALL SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING ((((((COUNT(*)) NOT BETWEEN (SUM(COUNT(*))) AND (COUNT(rt0.c2)))) ISNULL)) ISNULL);
SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0;
SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((~ (((v0.c0) NOTNULL)))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((NOT ((~ (((v0.c0) NOTNULL)))))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((((~ (((v0.c0) NOTNULL)))) ISNULL));
SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((rt0.c2)+(0.12687664149529854)))IS NOT(((rt0.c2)<>(v0.c0))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((rt0.c2)+(0.12687664149529854)))IS NOT(((rt0.c2)!=(v0.c0))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((rt0.c2)+(0.12687664149529854)))IS NOT(((rt0.c2)<>(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((('n>')AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(MIN(rt0.c1, rt0.c2, rt0.c0, rt0.c1)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((('n>')AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(MIN(rt0.c1, rt0.c2, rt0.c0, rt0.c1)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((((((('n>')AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(MIN(rt0.c1, rt0.c2, rt0.c0, rt0.c1)))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(v0.c0)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(v0.c0)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 NOT INDEXED;
SELECT v0.c0 FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL v0.c0 FROM v0 NOT INDEXED;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (x'41d71ffa') UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (x'41d71ffa'))) UNION SELECT DISTINCT * FROM v0 WHERE (((x'41d71ffa') ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c1 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0 NATURAL JOIN rt0 WHERE ((NOT ((~ (rt0.c0))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM v0 NATURAL JOIN rt0 WHERE ((NOT ((NOT ((~ (rt0.c0))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM v0 NATURAL JOIN rt0 WHERE ((((NOT ((~ (rt0.c0))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0;
SELECT ALL rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT rt0.c2 FROM rt0, v0;
SELECT ALL rt0.c2 FROM rt0, v0 WHERE (CASE ((('', rt0.c0, v0.c0)) BETWEEN ((rt0.c1, v0.c0, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c0)))  WHEN CASE rt0.c2  WHEN v0.c0 THEN x'd6e8' ELSE rt0.c1 END THEN ((((v0.c0)AND(rt0.c2)))AND(rt0.c2)) END) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0 WHERE ((NOT (CASE ((('', rt0.c0, v0.c0)) BETWEEN ((rt0.c1, v0.c0, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c0)))  WHEN CASE rt0.c2  WHEN v0.c0 THEN x'd6e8' ELSE rt0.c1 END THEN ((((v0.c0)AND(rt0.c2)))AND(rt0.c2)) END))) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0 WHERE (((CASE ((('', rt0.c0, v0.c0)) BETWEEN ((rt0.c1, v0.c0, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c0)))  WHEN CASE rt0.c2  WHEN v0.c0 THEN x'd6e8' ELSE rt0.c1 END THEN ((((v0.c0)AND(rt0.c2)))AND(rt0.c2)) END) ISNULL));
SELECT rt0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c0 FROM v0, rt0 NOT INDEXED WHERE (0.4641896866521982) UNION SELECT DISTINCT rt0.c0 FROM v0, rt0 WHERE ((NOT (0.4641896866521982))) UNION SELECT DISTINCT rt0.c0 FROM v0, rt0 WHERE (((0.4641896866521982) ISNULL));
SELECT DISTINCT rt0.c0 FROM v0, rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (CAST(((rt0.c0) ISNULL) AS BLOB)) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST(((rt0.c0) ISNULL) AS BLOB)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(((rt0.c0) ISNULL) AS BLOB)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((v0.c0, v0.c0, AVG('1914626704'))) BETWEEN ((GROUP_CONCAT(GROUP_CONCAT(v0.c0)), SUM(MAX(v0.c0)), TOTAL(MAX(v0.c0)))) AND ((((COUNT(TOTAL(MIN(MIN(v0.c0))))) NOT BETWEEN (v0.c0) AND (v0.c0)), '1581604467', COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((v0.c0, v0.c0, AVG('1914626704'))) BETWEEN ((GROUP_CONCAT(GROUP_CONCAT(v0.c0)), SUM(MAX(v0.c0)), TOTAL(MAX(v0.c0)))) AND ((((COUNT(TOTAL(MIN(MIN(v0.c0))))) NOT BETWEEN (v0.c0) AND (v0.c0)), '1581604467', COUNT(*)))))) UNION ALL SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING (((((v0.c0, v0.c0, AVG('1914626704'))) BETWEEN ((GROUP_CONCAT(GROUP_CONCAT(v0.c0)), SUM(MAX(v0.c0)), TOTAL(MAX(v0.c0)))) AND ((((COUNT(TOTAL(MIN(MIN(v0.c0))))) NOT BETWEEN (v0.c0) AND (v0.c0)), '1581604467', COUNT(*))))) ISNULL);
SELECT ALL rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM v0, rt0;
SELECT rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM v0, rt0 WHERE (('1691583256' IN ())) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((NOT (('1691583256' IN ())))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM v0, rt0 WHERE (((('1691583256' IN ())) ISNULL));
SELECT ALL rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 WHERE (((rt0.c1)>=(rt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 WHERE ((NOT (((rt0.c1)>=(rt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 WHERE (((((rt0.c1)>=(rt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0;
SELECT v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1;
SELECT v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 WHERE ((((x'')) BETWEEN ((CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 END)) AND ((load_extension(v0.c0, v0.c0))))) GROUP BY v0.c0, rt0.c0, rt0.c1 UNION SELECT ALL v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT ((((x'')) BETWEEN ((CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 END)) AND ((load_extension(v0.c0, v0.c0))))))) GROUP BY v0.c0, rt0.c0, rt0.c1 UNION SELECT ALL v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 WHERE ((((((x'')) BETWEEN ((CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 END)) AND ((load_extension(v0.c0, v0.c0))))) ISNULL)) GROUP BY v0.c0, rt0.c0, rt0.c1;
SELECT v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(MIN(COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(MIN(COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(MIN(COUNT(*)))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((- ((+ (v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((- ((+ (v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((- ((+ (v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c1, rt0.c2, v0.c0 FROM v0 CROSS JOIN rt0 ON (- (rt0.c2)) GROUP BY rt0.c1, rt0.c2, v0.c0;
SELECT rt0.c1, rt0.c2, v0.c0 FROM v0 CROSS JOIN rt0 ON (- (rt0.c2)) WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))>(((v0.c0)IS NOT(rt0.c1))))) GROUP BY rt0.c1, rt0.c2, v0.c0 UNION SELECT ALL rt0.c1, rt0.c2, v0.c0 FROM v0 CROSS JOIN rt0 ON (- (rt0.c2)) WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))>(((v0.c0)IS NOT(rt0.c1))))))) GROUP BY rt0.c1, rt0.c2, v0.c0 UNION SELECT rt0.c1, rt0.c2, v0.c0 FROM v0 CROSS JOIN rt0 ON (- (rt0.c2)) WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))>(((v0.c0)IS NOT(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, v0.c0;
SELECT rt0.c1, rt0.c2, v0.c0 FROM v0 CROSS JOIN rt0 ON (- (rt0.c2)) GROUP BY rt0.c1, rt0.c2, v0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING MAX(SUM(AVG(COUNT(COUNT(v0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MAX(SUM(AVG(COUNT(COUNT(v0.c0))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((MAX(SUM(AVG(COUNT(COUNT(v0.c0)))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0)-(rt0.c2)) AS NUMERIC)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST(((rt0.c0)-(rt0.c2)) AS NUMERIC)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(((rt0.c0)-(rt0.c2)) AS NUMERIC)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((x'')|(((rt0.c1) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((x'')|(((rt0.c1) IS FALSE)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((x'')|(((rt0.c1) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON CASE WHEN LOWER(v0.c0) THEN (((rt0.c0))>=((rt0.c2))) ELSE ((rt0.c2)>>(rt0.c0)) END GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON CASE WHEN LOWER(v0.c0) THEN (((rt0.c0))>=((rt0.c2))) ELSE ((rt0.c2)>>(rt0.c0)) END WHERE (((((NOT (rt0.c1)), ((rt0.c0)==(rt0.c1)), rt0.c2 COLLATE BINARY, ABS(v0.c0), rt0.c2 COLLATE NOCASE))>((0.6225655820227153 COLLATE BINARY, v0.c0, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)), rt0.c1, NULL)))) GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0 UNION SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON CASE WHEN LOWER(v0.c0) THEN (((rt0.c0))>=((rt0.c2))) ELSE ((rt0.c2)>>(rt0.c0)) END WHERE ((NOT (((((NOT (rt0.c1)), ((rt0.c0)==(rt0.c1)), rt0.c2 COLLATE BINARY, ABS(v0.c0), rt0.c2 COLLATE NOCASE))>((0.6225655820227153 COLLATE BINARY, v0.c0, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)), rt0.c1, NULL)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON CASE WHEN LOWER(v0.c0) THEN (((rt0.c0))>=((rt0.c2))) ELSE ((rt0.c2)>>(rt0.c0)) END WHERE (((((((NOT (rt0.c1)), ((rt0.c0)==(rt0.c1)), rt0.c2 COLLATE BINARY, ABS(v0.c0), rt0.c2 COLLATE NOCASE))>((0.6225655820227153 COLLATE BINARY, v0.c0, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)), rt0.c1, NULL)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON CASE WHEN LOWER(v0.c0) THEN (((rt0.c0))>=((rt0.c2))) ELSE ((rt0.c2)>>(rt0.c0)) END GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0;
SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING AVG(TOTAL(SUM(GROUP_CONCAT(COUNT(MAX(GROUP_CONCAT(rt0.c2))))))) UNION ALL SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING (NOT (AVG(TOTAL(SUM(GROUP_CONCAT(COUNT(MAX(GROUP_CONCAT(rt0.c2))))))))) UNION ALL SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING ((AVG(TOTAL(SUM(GROUP_CONCAT(COUNT(MAX(GROUP_CONCAT(rt0.c2)))))))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((v0.c0 COLLATE BINARY) BETWEEN (((v0.c0)GLOB(rt0.c0))) AND (rt0.c0 COLLATE NOCASE));
SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((v0.c0 COLLATE BINARY) BETWEEN (((v0.c0)GLOB(rt0.c0))) AND (rt0.c0 COLLATE NOCASE)) WHERE ((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0))))AND(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))AND((rt0.c1 IN (rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((v0.c0 COLLATE BINARY) BETWEEN (((v0.c0)GLOB(rt0.c0))) AND (rt0.c0 COLLATE NOCASE)) WHERE ((NOT ((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0))))AND(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))AND((rt0.c1 IN (rt0.c0))))))) UNION ALL SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((v0.c0 COLLATE BINARY) BETWEEN (((v0.c0)GLOB(rt0.c0))) AND (rt0.c0 COLLATE NOCASE)) WHERE ((((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0))))AND(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))AND((rt0.c1 IN (rt0.c0))))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((v0.c0 COLLATE BINARY) BETWEEN (((v0.c0)GLOB(rt0.c0))) AND (rt0.c0 COLLATE NOCASE));
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (SQLITE_VERSION() COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (SQLITE_VERSION() COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((SQLITE_VERSION() COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))<>(MAX(rt0.c2, rt0.c2)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))<>(MAX(rt0.c2, rt0.c2)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))<>(MAX(rt0.c2, rt0.c2)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING ((rt0.c0)>>(rt0.c1)) UNION ALL SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING (NOT (((rt0.c0)>>(rt0.c1)))) UNION ALL SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING ((((rt0.c0)>>(rt0.c1))) ISNULL);
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING ((rt0.c0)>>(rt0.c1)) UNION ALL SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING (NOT (((rt0.c0)>>(rt0.c1)))) UNION ALL SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING ((((rt0.c0)>>(rt0.c1))) ISNULL);
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((IFNULL(DISTINCT v0.c0, v0.c0)) BETWEEN (((v0.c0)%(v0.c0))) AND (CAST(v0.c0 AS NUMERIC)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((IFNULL(DISTINCT v0.c0, v0.c0)) BETWEEN (((v0.c0)%(v0.c0))) AND (CAST(v0.c0 AS NUMERIC)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((IFNULL(DISTINCT v0.c0, v0.c0)) BETWEEN (((v0.c0)%(v0.c0))) AND (CAST(v0.c0 AS NUMERIC)))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 NOT INDEXED WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c0))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (CAST('-317539840' AS BLOB)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0)OR(v0.c0)))OR(v0.c0))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (CAST('-317539840' AS BLOB)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))OR(v0.c0))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (CAST('-317539840' AS BLOB)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM v0, rt0 WHERE (json_quote(IFNULL(rt0.c1, rt0.c1))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (json_quote(IFNULL(rt0.c1, rt0.c1))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM v0, rt0 WHERE (((json_quote(IFNULL(rt0.c1, rt0.c1))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(SUM(COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(SUM(COUNT(*))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(SUM(COUNT(*)))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (load_extension(((((NULL)OR(v0.c0)))AND(v0.c0)), x'')) UNION ALL SELECT * FROM v0 NOT INDEXED WHERE ((NOT (load_extension(((((NULL)OR(v0.c0)))AND(v0.c0)), x'')))) UNION ALL SELECT * FROM v0 WHERE (((load_extension(((((NULL)OR(v0.c0)))AND(v0.c0)), x'')) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 NOT INDEXED WHERE (((rt0.c2)>=(((rt0.c2) IS TRUE)))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c2)>=(((rt0.c2) IS TRUE)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 NOT INDEXED WHERE (((((rt0.c2)>=(((rt0.c2) IS TRUE)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 WHERE (CAST((- (rt0.c0)) AS BLOB)) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (CAST((- (rt0.c0)) AS BLOB)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 WHERE (((CAST((- (rt0.c0)) AS BLOB)) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT)) ISNULL)) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS TEXT)) ISNULL)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c1 AS TEXT)) ISNULL)) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c1, v0.c0 FROM v0, rt0 WHERE (HEX(DISTINCT ((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) UNION SELECT DISTINCT rt0.c1, v0.c0 FROM v0, rt0 WHERE ((NOT (HEX(DISTINCT ((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) UNION SELECT DISTINCT rt0.c1, v0.c0 FROM v0, rt0 WHERE (((HEX(DISTINCT ((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0 FROM v0, rt0;
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 WHERE ((+ (rt0.c2))) GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT ((+ (rt0.c2))))) GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 WHERE ((((+ (rt0.c2))) ISNULL)) GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING CASE WHEN CAST(MAX(rt0.c1) AS BLOB) THEN COUNT(*) ELSE MIN(rt0.c1) END UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (CASE WHEN CAST(MAX(rt0.c1) AS BLOB) THEN COUNT(*) ELSE MIN(rt0.c1) END)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((CASE WHEN CAST(MAX(rt0.c1) AS BLOB) THEN COUNT(*) ELSE MIN(rt0.c1) END) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING CASE WHEN CAST(MAX(rt0.c1) AS BLOB) THEN COUNT(*) ELSE MIN(rt0.c1) END UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (CASE WHEN CAST(MAX(rt0.c1) AS BLOB) THEN COUNT(*) ELSE MIN(rt0.c1) END)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((CASE WHEN CAST(MAX(rt0.c1) AS BLOB) THEN COUNT(*) ELSE MIN(rt0.c1) END) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL SUM((((v0.c0, '[~', 0.006603312209608414)) NOT BETWEEN ((((((v0.c0)AND(v0.c0)))OR(v0.c0)), ((((NULL)OR(v0.c0)))AND(v0.c0)), v0.c0 COLLATE BINARY)) AND ((NULLIF(v0.c0, v0.c0), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CAST(x'e151' AS TEXT))))) FROM v0 ORDER BY CAST((v0.c0 IN ()) AS NUMERIC), v0.c0 ASC  NULLS LAST;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER))IS((+ (rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS INTEGER))IS((+ (rt0.c0))))))) UNION ALL SELECT * FROM rt0 WHERE (((((CAST(rt0.c1 AS INTEGER))IS((+ (rt0.c0))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0) IS TRUE)) NOT NULL)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) IS TRUE)) NOT NULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0) IS TRUE)) NOT NULL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (CAST('' AS BLOB)) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CAST('' AS BLOB)))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST('' AS BLOB)) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((rt0.c0) BETWEEN (NULLIF(rt0.c1, TOTAL(rt0.c0))) AND (COUNT(rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (((rt0.c0) BETWEEN (NULLIF(rt0.c1, TOTAL(rt0.c0))) AND (COUNT(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((rt0.c0) BETWEEN (NULLIF(rt0.c1, TOTAL(rt0.c0))) AND (COUNT(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((rt0.c0) BETWEEN (NULLIF(rt0.c1, TOTAL(rt0.c0))) AND (COUNT(rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (((rt0.c0) BETWEEN (NULLIF(rt0.c1, TOTAL(rt0.c0))) AND (COUNT(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((rt0.c0) BETWEEN (NULLIF(rt0.c1, TOTAL(rt0.c0))) AND (COUNT(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0 FROM rt0, v0;
SELECT ALL rt0.c0 FROM rt0, v0 WHERE (CAST(load_extension(rt0.c2, v0.c0) AS INTEGER)) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0 WHERE ((NOT (CAST(load_extension(rt0.c2, v0.c0) AS INTEGER)))) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0 WHERE (((CAST(load_extension(rt0.c2, v0.c0) AS INTEGER)) ISNULL));
SELECT rt0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((('-309607931')LIKE(v0.c0)))&((- (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((('-309607931')LIKE(v0.c0)))&((- (v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((('-309607931')LIKE(v0.c0)))&((- (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c1 HAVING MIN(rt0.c0) UNION ALL SELECT rt0.c1 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c1 HAVING (NOT (MIN(rt0.c0))) UNION ALL SELECT ALL rt0.c1 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c1 HAVING ((MIN(rt0.c0)) ISNULL);
SELECT ALL rt0.c1 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c1 HAVING MIN(rt0.c0) UNION ALL SELECT rt0.c1 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c1 HAVING (NOT (MIN(rt0.c0))) UNION ALL SELECT ALL rt0.c1 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c1 HAVING ((MIN(rt0.c0)) ISNULL);
SELECT ALL rt0.c1 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c1;
SELECT * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (CASE ((rt0.c2) IS FALSE)  WHEN ((((rt0.c0)AND(v0.c0)))AND(rt0.c1)) THEN (rt0.c0 IN ()) ELSE (((rt0.c1))<((0.9222370277189393))) END) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (CASE ((rt0.c2) IS FALSE)  WHEN ((((rt0.c0)AND(v0.c0)))AND(rt0.c1)) THEN (rt0.c0 IN ()) ELSE (((rt0.c1))<((0.9222370277189393))) END))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((CASE ((rt0.c2) IS FALSE)  WHEN ((((rt0.c0)AND(v0.c0)))AND(rt0.c1)) THEN (rt0.c0 IN ()) ELSE (((rt0.c1))<((0.9222370277189393))) END) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL) COLLATE NOCASE) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1) ISNULL) COLLATE NOCASE))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((rt0.c1) ISNULL) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING SUM(MAX(rt0.c0) COLLATE BINARY) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING (NOT (SUM(MAX(rt0.c0) COLLATE BINARY))) UNION ALL SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING ((SUM(MAX(rt0.c0) COLLATE BINARY)) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1)%(rt0.c0)))AND(((rt0.c0) NOTNULL))))AND((((('0.14757153503793585')AND(rt0.c2)))AND(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((rt0.c1)%(rt0.c0)))AND(((rt0.c0) NOTNULL))))AND((((('0.14757153503793585')AND(rt0.c2)))AND(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c1)%(rt0.c0)))AND(((rt0.c0) NOTNULL))))AND((((('0.14757153503793585')AND(rt0.c2)))AND(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (LIKELY(TRIM(DISTINCT rt0.c1))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (LIKELY(TRIM(DISTINCT rt0.c1))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((LIKELY(TRIM(DISTINCT rt0.c1))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING 'cꍺc>xw' UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ('cꍺc>xw')) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (('cꍺc>xw') ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING 'cꍺc>xw' UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ('cꍺc>xw')) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (('cꍺc>xw') ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (1193740601) UNION ALL SELECT * FROM rt0 WHERE ((NOT (1193740601))) UNION ALL SELECT ALL * FROM rt0 WHERE (((1193740601) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((+ (CAST(v0.c0 AS REAL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((+ (CAST(v0.c0 AS REAL)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((+ (CAST(v0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0 COLLATE BINARY) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0 COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c0 COLLATE BINARY) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c0 IN ()))!=(LTRIM(rt0.c1, rt0.c0)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0 IN ()))!=(LTRIM(rt0.c1, rt0.c0)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c0 IN ()))<>(LTRIM(rt0.c1, rt0.c0)))) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)), MAX(v0.c0, v0.c0), ((v0.c0)<=(v0.c0)))) AND ((v0.c0 COLLATE RTRIM, ((((0.6043375773850991)OR(v0.c0)))OR(v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)), MAX(v0.c0, v0.c0), ((v0.c0)<=(v0.c0)))) AND ((v0.c0 COLLATE RTRIM, ((((0.6043375773850991)OR(v0.c0)))OR(v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)), MAX(v0.c0, v0.c0), ((v0.c0)<=(v0.c0)))) AND ((v0.c0 COLLATE RTRIM, ((((0.6043375773850991)OR(v0.c0)))OR(v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 'Qd' THEN '+A~Iꉻr' END) BETWEEN (((v0.c0) NOTNULL)) AND (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 'Qd' THEN '+A~Iꉻr' END) BETWEEN (((v0.c0) NOTNULL)) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 'Qd' THEN '+A~Iꉻr' END) BETWEEN (((v0.c0) NOTNULL)) AND (v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING AVG(TOTAL(rt0.c0)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (AVG(TOTAL(rt0.c0)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((AVG(TOTAL(rt0.c0))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((NULL)) BETWEEN ((rt0.c0)) AND ((0.5642144196810353)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((NULL)) BETWEEN ((rt0.c0)) AND ((0.5642144196810353)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((((NULL)) BETWEEN ((rt0.c0)) AND ((0.5642144196810353)))) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON CASE ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2))  WHEN (rt0.c1 IN (rt0.c0)) THEN ((((x'')AND(x'')))AND('1399010169')) END;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON CASE ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2))  WHEN (rt0.c1 IN (rt0.c0)) THEN ((((x'')AND(x'')))AND('1399010169')) END WHERE (((rt0.c0)OR(ABS(v0.c0)))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON CASE ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2))  WHEN (rt0.c1 IN (rt0.c0)) THEN ((((x'')AND(x'')))AND('1399010169')) END WHERE ((NOT (((rt0.c0)OR(ABS(v0.c0)))))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON CASE ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2))  WHEN (rt0.c1 IN (rt0.c0)) THEN ((((x'')AND(x'')))AND('1399010169')) END WHERE (((((rt0.c0)OR(ABS(v0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON CASE ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2))  WHEN (rt0.c1 IN (rt0.c0)) THEN ((((x'')AND(x'')))AND('1399010169')) END;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((- ((~ (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((- ((~ (v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((- ((~ (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT((~ (COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT((~ (COUNT(*)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT((~ (COUNT(*))))) ISNULL);
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON ((GLOB(v0.c0, v0.c0)) IS TRUE);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((GLOB(v0.c0, v0.c0)) IS TRUE) WHERE ((((rt0.c1)) NOT BETWEEN (('*''' COLLATE NOCASE)) AND ((rt0.c0)))) UNION ALL SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((GLOB(v0.c0, v0.c0)) IS TRUE) WHERE ((NOT ((((rt0.c1)) NOT BETWEEN (('*''' COLLATE NOCASE)) AND ((rt0.c0)))))) UNION ALL SELECT * FROM v0 LEFT OUTER JOIN rt0 ON ((GLOB(v0.c0, v0.c0)) IS TRUE) WHERE ((((((rt0.c1)) NOT BETWEEN (('*''' COLLATE NOCASE)) AND ((rt0.c0)))) ISNULL));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON ((GLOB(v0.c0, v0.c0)) IS TRUE);
SELECT DISTINCT rt0.c1 FROM rt0 NOT INDEXED;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((rt0.c1) ISNULL) IN (((rt0.c2)<(rt0.c1))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 NOT INDEXED WHERE ((NOT ((((rt0.c1) ISNULL) IN (((rt0.c2)<(rt0.c1))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((((rt0.c1) ISNULL) IN (((rt0.c2)<(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0 NOT INDEXED;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST(v0.c0 AS TEXT) COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(v0.c0 AS TEXT) COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS TEXT) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((SUM(x''), ((AVG(rt0.c1)) ISNULL), rt0.c2))>=((MIN(rt0.c2), CASE WHEN rt0.c0 THEN MAX(rt0.c2) WHEN SUM(rt0.c2) THEN GROUP_CONCAT(rt0.c0) WHEN rt0.c2 THEN SUM(MAX(rt0.c0)) ELSE MIN(rt0.c2) END, GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((((SUM(x''), ((AVG(rt0.c1)) ISNULL), rt0.c2))>=((MIN(rt0.c2), CASE WHEN rt0.c0 THEN MAX(rt0.c2) WHEN SUM(rt0.c2) THEN GROUP_CONCAT(rt0.c0) WHEN rt0.c2 THEN SUM(MAX(rt0.c0)) ELSE MIN(rt0.c2) END, GROUP_CONCAT(rt0.c1)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((SUM(x''), ((AVG(rt0.c1)) ISNULL), rt0.c2))>=((MIN(rt0.c2), CASE WHEN rt0.c0 THEN MAX(rt0.c2) WHEN SUM(rt0.c2) THEN GROUP_CONCAT(rt0.c0) WHEN rt0.c2 THEN SUM(MAX(rt0.c0)) ELSE MIN(rt0.c2) END, GROUP_CONCAT(rt0.c1))))) ISNULL);
SELECT ALL TOTAL(TYPEOF(DISTINCT ((rt0.c2) IS TRUE))) FROM rt0, v0 ORDER BY '-1543871248' ASC;
SELECT * FROM v0 NOT INDEXED;
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))>(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((v0.c0 IN ()))>(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE ((((((v0.c0 IN ()))>(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT * FROM v0 NOT INDEXED;
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON ((((x'') NOT BETWEEN (rt0.c1) AND (rt0.c2)))%(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))));
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON ((((x'') NOT BETWEEN (rt0.c1) AND (rt0.c2)))%(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) WHERE (((UPPER(rt0.c2))&(((rt0.c0)!=(rt0.c0))))) UNION SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON ((((x'') NOT BETWEEN (rt0.c1) AND (rt0.c2)))%(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) WHERE ((NOT (((UPPER(rt0.c2))&(((rt0.c0)!=(rt0.c0))))))) UNION SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON ((((x'') NOT BETWEEN (rt0.c1) AND (rt0.c2)))%(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) WHERE (((((UPPER(rt0.c2))&(((rt0.c0)!=(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON ((((x'') NOT BETWEEN (rt0.c1) AND (rt0.c2)))%(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))));
SELECT ALL rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, v0.c0;
SELECT ALL rt0.c0, v0.c0 FROM rt0, v0 WHERE (('1370577393' IN (((rt0.c1)-(rt0.c1))))) GROUP BY rt0.c0, v0.c0 UNION SELECT rt0.c0, v0.c0 FROM rt0, v0 WHERE ((NOT (('1370577393' IN (((rt0.c1)-(rt0.c1))))))) GROUP BY rt0.c0, v0.c0 UNION SELECT ALL rt0.c0, v0.c0 FROM rt0, v0 WHERE (((('1370577393' IN (((rt0.c1)-(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, v0.c0;
SELECT ALL rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((COUNT(v0.c0))) BETWEEN ((v0.c0 COLLATE NOCASE)) AND (((((SUM(MAX(v0.c0)))) BETWEEN ((v0.c0)) AND ((MAX(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((COUNT(v0.c0))) BETWEEN ((v0.c0 COLLATE NOCASE)) AND (((((SUM(MAX(v0.c0)))) BETWEEN ((v0.c0)) AND ((MAX(v0.c0))))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((COUNT(v0.c0))) BETWEEN ((v0.c0 COLLATE NOCASE)) AND (((((SUM(MAX(v0.c0)))) BETWEEN ((v0.c0)) AND ((MAX(v0.c0)))))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((-1539003844)%(rt0.c0)) IN ((rt0.c1 IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((-1539003844)%(rt0.c0)) IN ((rt0.c1 IN ())))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((-1539003844)%(rt0.c0)) IN ((rt0.c1 IN ())))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (CAST(((((rt0.c2)AND(x'')))AND(rt0.c0)) AS TEXT)) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST(((((rt0.c2)AND(x'')))AND(rt0.c0)) AS TEXT)))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(((((rt0.c2)AND(x'')))AND(rt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0 WHERE (CASE WHEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 ELSE '뵡!W1b㙄' END THEN (rt0.c0 IN ()) WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2)>(v0.c0)) WHEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) THEN (- ('')) ELSE IFNULL(rt0.c1, v0.c0) END) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM v0, rt0 WHERE ((NOT (CASE WHEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 ELSE '뵡!W1b㙄' END THEN (rt0.c0 IN ()) WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2)>(v0.c0)) WHEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) THEN (- ('')) ELSE IFNULL(rt0.c1, v0.c0) END))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM v0, rt0 WHERE (((CASE WHEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 ELSE '뵡!W1b㙄' END THEN (rt0.c0 IN ()) WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2)>(v0.c0)) WHEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) THEN (- ('')) ELSE IFNULL(rt0.c1, v0.c0) END) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING IFNULL(((AVG(GROUP_CONCAT(SUM(0.5495307648130315)))) NOTNULL), TOTAL(rt0.c2)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (IFNULL(((AVG(GROUP_CONCAT(SUM(0.5495307648130315)))) NOTNULL), TOTAL(rt0.c2)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((IFNULL(((AVG(GROUP_CONCAT(SUM(0.5495307648130315)))) NOTNULL), TOTAL(rt0.c2))) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (CAST(CAST(0.41740951782929003 AS TEXT) AS REAL)) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (CAST(CAST(0.41740951782929003 AS TEXT) AS REAL)))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((CAST(CAST(0.41740951782929003 AS TEXT) AS REAL)) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (CASE (rt0.c1 IN ())  WHEN (- (rt0.c2)) THEN x'' ELSE (NOT (rt0.c1)) END) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (CASE (rt0.c1 IN ())  WHEN (- (rt0.c2)) THEN x'' ELSE (NOT (rt0.c1)) END))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((CASE (rt0.c1 IN ())  WHEN (- (rt0.c2)) THEN x'' ELSE (NOT (rt0.c1)) END) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((+ ((rt0.c0 IN (rt0.c1))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((+ ((rt0.c0 IN (rt0.c1))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((+ ((rt0.c0 IN (rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (((LIKELIHOOD(DISTINCT NULL, 0.32383303930934426)) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (rt0.c2))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (((LIKELIHOOD(DISTINCT NULL, 0.32383303930934426)) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (rt0.c2))))) UNION ALL SELECT * FROM rt0, v0 WHERE (((((LIKELIHOOD(DISTINCT NULL, 0.32383303930934426)) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (rt0.c2))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((((x'bd6f')<<(-1e500)))AND((- (rt0.c0)))))AND((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, 'wj'))))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (x'')))))AND(((rt0.c1)<(rt0.c0))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((((((((x'bd6f')<<(-1e500)))AND((- (rt0.c0)))))AND((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, 'wj'))))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (x'')))))AND(((rt0.c1)<(rt0.c0))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((((((x'bd6f')<<(-1e500)))AND((- (rt0.c0)))))AND((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, 'wj'))))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (x'')))))AND(((rt0.c1)<(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c0)||(rt0.c2)))==(((rt0.c1)GLOB(rt0.c0)))) GROUP BY rt0.c1, v0.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c0)||(rt0.c2)))=(((rt0.c1)GLOB(rt0.c0)))) WHERE ((((('xr')AND(CAST(rt0.c2 AS REAL))))OR(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) GROUP BY rt0.c1, v0.c0, rt0.c2, rt0.c0 UNION SELECT rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c0)||(rt0.c2)))=(((rt0.c1)GLOB(rt0.c0)))) WHERE ((NOT ((((('xr')AND(CAST(rt0.c2 AS REAL))))OR(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1))))))) GROUP BY rt0.c1, v0.c0, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c0)||(rt0.c2)))==(((rt0.c1)GLOB(rt0.c0)))) WHERE ((((((('xr')AND(CAST(rt0.c2 AS REAL))))OR(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c2, rt0.c0;
SELECT rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c0)||(rt0.c2)))==(((rt0.c1)GLOB(rt0.c0)))) GROUP BY rt0.c1, v0.c0, rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0 HAVING COUNT(COUNT(GROUP_CONCAT(COUNT(AVG(SUM(AVG(x'1010b73c'))))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0 HAVING (NOT (COUNT(COUNT(GROUP_CONCAT(COUNT(AVG(SUM(AVG(x'1010b73c'))))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0 HAVING ((COUNT(COUNT(GROUP_CONCAT(COUNT(AVG(SUM(AVG(x'1010b73c')))))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c1) ISNULL))||(((0.18545322978954193) NOT NULL)))) ORDER BY TRIM(DISTINCT (rt0.c2 IN ())) DESC, CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) AS TEXT) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((NOT (((((rt0.c1) ISNULL))||(((0.18545322978954193) NOT NULL)))))) ORDER BY TRIM(DISTINCT (rt0.c2 IN ())) DESC, CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) AS TEXT) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (((((((rt0.c1) ISNULL))||(((0.18545322978954193) NOT NULL)))) ISNULL)) ORDER BY TRIM(DISTINCT (rt0.c2 IN ())) DESC, CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) AS TEXT) ASC  NULLS LAST;
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON (('q *?#''') BETWEEN ((~ (NULL))) AND ((- (''))));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON (('q *?#''') BETWEEN ((~ (NULL))) AND ((- ('')))) WHERE (CAST(((rt0.c0)<(v0.c0)) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON (('q *?#''') BETWEEN ((~ (NULL))) AND ((- ('')))) WHERE ((NOT (CAST(((rt0.c0)<(v0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON (('q *?#''') BETWEEN ((~ (NULL))) AND ((- ('')))) WHERE (((CAST(((rt0.c0)<(v0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON (('q *?#''') BETWEEN ((~ (NULL))) AND ((- (''))));
SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 WHERE (ROUND(rt0.c0, NULL) COLLATE BINARY) GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 WHERE ((NOT (ROUND(rt0.c0, NULL) COLLATE BINARY))) GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0 UNION SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 WHERE (((ROUND(rt0.c0, NULL) COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING MAX(((rt0.c0) IS FALSE)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (MAX(((rt0.c0) IS FALSE)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((MAX(((rt0.c0) IS FALSE))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING MAX(((rt0.c0) IS FALSE)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (MAX(((rt0.c0) IS FALSE)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((MAX(((rt0.c0) IS FALSE))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (rt0.c0) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (TOTAL_CHANGES()) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (TOTAL_CHANGES()))) UNION SELECT DISTINCT * FROM rt0 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (CAST((NOT (rt0.c2)) AS BLOB)) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CAST((NOT (rt0.c2)) AS BLOB)))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST((NOT (rt0.c2)) AS BLOB)) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((load_extension(v0.c0, v0.c0)) NOTNULL)) UNION ALL SELECT * FROM v0 WHERE ((NOT (((load_extension(v0.c0, v0.c0)) NOTNULL)))) UNION ALL SELECT * FROM v0 WHERE (((((load_extension(v0.c0, v0.c0)) NOTNULL)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END) NOT NULL);
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END) NOT NULL) WHERE ((NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END) NOT NULL) WHERE ((NOT ((NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END) NOT NULL) WHERE ((((NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END) NOT NULL);
SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0 WHERE ((NOT (json_array_length(rt0.c2)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM v0, rt0 WHERE ((NOT ((NOT (json_array_length(rt0.c2)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM v0, rt0 WHERE ((((NOT (json_array_length(rt0.c2)))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING COUNT(TOTAL(COUNT(*))) COLLATE NOCASE UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(TOTAL(COUNT(*))) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(TOTAL(COUNT(*))) COLLATE NOCASE) ISNULL);
SELECT ALL MIN(((rt0.c2 COLLATE RTRIM)<(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) FROM v0, rt0 ORDER BY ((TYPEOF(rt0.c2)) IS FALSE);
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE ((rt0.c2 IN ())) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT ((rt0.c2 IN ())))) UNION ALL SELECT * FROM v0, rt0 WHERE ((((rt0.c2 IN ())) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (json_valid((v0.c0 IN ()))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (json_valid((v0.c0 IN ()))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((json_valid((v0.c0 IN ()))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((LIKELIHOOD(rt0.c1, 0.13803982540179927) IN ())) GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((NOT ((LIKELIHOOD(rt0.c1, 0.13803982540179927) IN ())))) GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1 UNION SELECT v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((((LIKELIHOOD(rt0.c1, 0.13803982540179927) IN ())) ISNULL)) GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0;
SELECT rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0 HAVING AVG(CAST(TOTAL(SUM(rt0.c0)) AS NUMERIC)) UNION ALL SELECT ALL rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0 HAVING (NOT (AVG(CAST(TOTAL(SUM(rt0.c0)) AS NUMERIC)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0 HAVING ((AVG(CAST(TOTAL(SUM(rt0.c0)) AS NUMERIC))) ISNULL);
SELECT ALL rt0.c0 FROM v0 NATURAL JOIN rt0;
SELECT rt0.c0 FROM v0 NATURAL JOIN rt0 WHERE (((rt0.c1)>=(rt0.c1)) COLLATE BINARY) UNION ALL SELECT rt0.c0 FROM v0 NATURAL JOIN rt0 WHERE ((NOT (((rt0.c1)>=(rt0.c1)) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c0 FROM v0 NATURAL JOIN rt0 WHERE (((((rt0.c1)>=(rt0.c1)) COLLATE BINARY) ISNULL));
SELECT ALL rt0.c0 FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0)OR(rt0.c2))))>(((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c2, '%j궧	+', rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c0)OR(rt0.c2))))>(((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c2, '%j궧	+', rt0.c0))))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c0)OR(rt0.c2))))>(((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c2, '%j궧	+', rt0.c0))))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING SUM((rt0.c0 IN ())) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (SUM((rt0.c0 IN ())))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((SUM((rt0.c0 IN ()))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING SUM((rt0.c0 IN ())) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (SUM((rt0.c0 IN ())))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((SUM((rt0.c0 IN ()))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0 INNER JOIN rt0 ON CASE WHEN '916698869' THEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)) END;
SELECT rt0.c1 FROM v0 INNER JOIN rt0 ON CASE WHEN '916698869' THEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)) END WHERE ('19194917') UNION ALL SELECT rt0.c1 FROM v0 INNER JOIN rt0 ON CASE WHEN '916698869' THEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)) END WHERE ((NOT ('19194917'))) UNION ALL SELECT rt0.c1 FROM v0 INNER JOIN rt0 ON CASE WHEN '916698869' THEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)) END WHERE ((('19194917') ISNULL));
SELECT rt0.c1 FROM v0 INNER JOIN rt0 ON CASE WHEN '916698869' THEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)) END;
SELECT DISTINCT rt0.c2, v0.c0 FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c2, v0.c0 FROM v0 NATURAL JOIN rt0 WHERE (((NULL)&('1451898241'))) UNION SELECT DISTINCT rt0.c2, v0.c0 FROM v0 NATURAL JOIN rt0 WHERE ((NOT (((NULL)&('1451898241'))))) UNION SELECT DISTINCT rt0.c2, v0.c0 FROM v0 NATURAL JOIN rt0 WHERE (((((NULL)&('1451898241'))) ISNULL));
SELECT DISTINCT rt0.c2, v0.c0 FROM v0 NATURAL JOIN rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 NOT INDEXED WHERE (((rt0.c1)<(rt0.c0 COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 WHERE ((NOT (((rt0.c1)<(rt0.c0 COLLATE RTRIM))))) GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0 UNION SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 WHERE (((((rt0.c1)<(rt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0;
SELECT ALL v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2;
SELECT v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2 HAVING ((AVG(rt0.c1)) NOT NULL) UNION ALL SELECT v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2 HAVING (NOT (((AVG(rt0.c1)) NOT NULL))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2 HAVING ((((AVG(rt0.c1)) NOT NULL)) ISNULL);
SELECT ALL v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2;
SELECT v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2 HAVING ((AVG(rt0.c1)) NOT NULL) UNION ALL SELECT v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2 HAVING (NOT (((AVG(rt0.c1)) NOT NULL))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2 HAVING ((((AVG(rt0.c1)) NOT NULL)) ISNULL);
SELECT ALL v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(x'' AS TEXT)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(x'' AS TEXT)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CAST(x'' AS TEXT)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (HEX('8034080')) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (HEX('8034080')))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((HEX('8034080')) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((NULL) BETWEEN (rt0.c2) AND (rt0.c0))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((NOT (((NULL) BETWEEN (rt0.c2) AND (rt0.c0))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((NOT (((NULL) BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0;
SELECT ALL rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0 HAVING DATETIME(TOTAL(GROUP_CONCAT(rt0.c1)), v0.c0, GROUP_CONCAT(rt0.c1), rt0.c0, v0.c0) COLLATE BINARY UNION ALL SELECT ALL rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0 HAVING (NOT (DATETIME(TOTAL(GROUP_CONCAT(rt0.c1)), v0.c0, GROUP_CONCAT(rt0.c1), rt0.c0, v0.c0) COLLATE BINARY)) UNION ALL SELECT rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0 HAVING ((DATETIME(TOTAL(GROUP_CONCAT(rt0.c1)), v0.c0, GROUP_CONCAT(rt0.c1), rt0.c0, v0.c0) COLLATE BINARY) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN 0.22638892093766394 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END THEN (rt0.c0 IN ()) WHEN (~ (rt0.c2)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((rt0.c2)-(0.5143806709939049)) THEN (rt0.c2 IN (rt0.c1, rt0.c1)) ELSE '' END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN 0.22638892093766394 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END THEN (rt0.c0 IN ()) WHEN (~ (rt0.c2)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((rt0.c2)-(0.5143806709939049)) THEN (rt0.c2 IN (rt0.c1, rt0.c1)) ELSE '' END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN 0.22638892093766394 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END THEN (rt0.c0 IN ()) WHEN (~ (rt0.c2)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((rt0.c2)-(0.5143806709939049)) THEN (rt0.c2 IN (rt0.c1, rt0.c1)) ELSE '' END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((((+ (rt0.c2))) BETWEEN (((rt0.c1) NOT NULL)) AND ((v0.c0 IN ())))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((((+ (rt0.c2))) BETWEEN (((rt0.c1) NOT NULL)) AND ((v0.c0 IN ())))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((((+ (rt0.c2))) BETWEEN (((rt0.c1) NOT NULL)) AND ((v0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((TYPEOF(v0.c0)))>((((v0.c0)OR(v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((TYPEOF(v0.c0)))>((((v0.c0)OR(v0.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((TYPEOF(v0.c0)))>((((v0.c0)OR(v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rt0.c1) AND (SUM(rt0.c2))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rt0.c1) AND (SUM(rt0.c2))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rt0.c1) AND (SUM(rt0.c2)))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rt0.c1) AND (SUM(rt0.c2))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rt0.c1) AND (SUM(rt0.c2))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rt0.c1) AND (SUM(rt0.c2)))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (rt0.c1) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))<(((v0.c0)>=(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))<(((v0.c0)>=(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))<(((v0.c0)>=(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c2) BETWEEN ('780936961') AND (rt0.c1))) BETWEEN ((+ (rt0.c1))) AND (((rt0.c0)>(rt0.c0)))) GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c2) BETWEEN ('780936961') AND (rt0.c1))) BETWEEN ((+ (rt0.c1))) AND (((rt0.c0)>(rt0.c0)))) WHERE (((((rt0.c1)OR(CAST(rt0.c2 AS TEXT))))AND(x''))) GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c2) BETWEEN ('780936961') AND (rt0.c1))) BETWEEN ((+ (rt0.c1))) AND (((rt0.c0)>(rt0.c0)))) WHERE ((NOT (((((rt0.c1)OR(CAST(rt0.c2 AS TEXT))))AND(x''))))) GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c2) BETWEEN ('780936961') AND (rt0.c1))) BETWEEN ((+ (rt0.c1))) AND (((rt0.c0)>(rt0.c0)))) WHERE (((((((rt0.c1)OR(CAST(rt0.c2 AS TEXT))))AND(x''))) ISNULL)) GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c2) BETWEEN ('780936961') AND (rt0.c1))) BETWEEN ((+ (rt0.c1))) AND (((rt0.c0)>(rt0.c0)))) GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL * FROM rt0 CROSS JOIN v0 ON (((rt0.c2, v0.c0, x'')) NOT BETWEEN ((CAST(rt0.c1 AS NUMERIC), ((v0.c0) NOT NULL), (((rt0.c2))<((rt0.c0))))) AND ((((((rt0.c1)OR(rt0.c2)))OR(0.5421312062732783)), ((rt0.c0) IS FALSE), CAST(rt0.c0 AS REAL))));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON (((rt0.c2, v0.c0, x'')) NOT BETWEEN ((CAST(rt0.c1 AS NUMERIC), ((v0.c0) NOT NULL), (((rt0.c2))<((rt0.c0))))) AND ((((((rt0.c1)OR(rt0.c2)))OR(0.5421312062732783)), ((rt0.c0) IS FALSE), CAST(rt0.c0 AS REAL)))) WHERE (NULLIF(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)), NULL)) UNION ALL SELECT * FROM rt0 CROSS JOIN v0 ON (((rt0.c2, v0.c0, x'')) NOT BETWEEN ((CAST(rt0.c1 AS NUMERIC), ((v0.c0) NOT NULL), (((rt0.c2))<((rt0.c0))))) AND ((((((rt0.c1)OR(rt0.c2)))OR(0.5421312062732783)), ((rt0.c0) IS FALSE), CAST(rt0.c0 AS REAL)))) WHERE ((NOT (NULLIF(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)), NULL)))) UNION ALL SELECT * FROM rt0 CROSS JOIN v0 ON (((rt0.c2, v0.c0, x'')) NOT BETWEEN ((CAST(rt0.c1 AS NUMERIC), ((v0.c0) NOT NULL), (((rt0.c2))<((rt0.c0))))) AND ((((((rt0.c1)OR(rt0.c2)))OR(0.5421312062732783)), ((rt0.c0) IS FALSE), CAST(rt0.c0 AS REAL)))) WHERE (((NULLIF(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)), NULL)) ISNULL));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON (((rt0.c2, v0.c0, x'')) NOT BETWEEN ((CAST(rt0.c1 AS NUMERIC), ((v0.c0) NOT NULL), (((rt0.c2))<((rt0.c0))))) AND ((((((rt0.c1)OR(rt0.c2)))OR(0.5421312062732783)), ((rt0.c0) IS FALSE), CAST(rt0.c0 AS REAL))));
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c1)==(rt0.c1)) THEN -858175160 WHEN NULL THEN ((rt0.c2)!=(NULL)) WHEN (((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN CAST(rt0.c1 AS BLOB) WHEN (rt0.c1 IN (rt0.c1)) THEN rt0.c1 COLLATE BINARY WHEN CASE rt0.c0  WHEN 0.10090971777434088 THEN rt0.c0 ELSE rt0.c1 END THEN CAST(rt0.c2 AS BLOB) ELSE ((v0.c0)&(rt0.c1)) END;
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c1)==(rt0.c1)) THEN -858175160 WHEN NULL THEN ((rt0.c2)!=(NULL)) WHEN (((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN CAST(rt0.c1 AS BLOB) WHEN (rt0.c1 IN (rt0.c1)) THEN rt0.c1 COLLATE BINARY WHEN CASE rt0.c0  WHEN 0.10090971777434088 THEN rt0.c0 ELSE rt0.c1 END THEN CAST(rt0.c2 AS BLOB) ELSE ((v0.c0)&(rt0.c1)) END WHERE ((((rt0.c0 IN ()))IS(((((v0.c0)AND(rt0.c0)))OR(rt0.c2))))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c1)==(rt0.c1)) THEN -858175160 WHEN NULL THEN ((rt0.c2)!=(NULL)) WHEN (((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN CAST(rt0.c1 AS BLOB) WHEN (rt0.c1 IN (rt0.c1)) THEN rt0.c1 COLLATE BINARY WHEN CASE rt0.c0  WHEN 0.10090971777434088 THEN rt0.c0 ELSE rt0.c1 END THEN CAST(rt0.c2 AS BLOB) ELSE ((v0.c0)&(rt0.c1)) END WHERE ((NOT ((((rt0.c0 IN ()))IS(((((v0.c0)AND(rt0.c0)))OR(rt0.c2))))))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c1)=(rt0.c1)) THEN -858175160 WHEN NULL THEN ((rt0.c2)!=(NULL)) WHEN (((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN CAST(rt0.c1 AS BLOB) WHEN (rt0.c1 IN (rt0.c1)) THEN rt0.c1 COLLATE BINARY WHEN CASE rt0.c0  WHEN 0.10090971777434088 THEN rt0.c0 ELSE rt0.c1 END THEN CAST(rt0.c2 AS BLOB) ELSE ((v0.c0)&(rt0.c1)) END WHERE ((((((rt0.c0 IN ()))IS(((((v0.c0)AND(rt0.c0)))OR(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c1)==(rt0.c1)) THEN -858175160 WHEN NULL THEN ((rt0.c2)!=(NULL)) WHEN (((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN CAST(rt0.c1 AS BLOB) WHEN (rt0.c1 IN (rt0.c1)) THEN rt0.c1 COLLATE BINARY WHEN CASE rt0.c0  WHEN 0.10090971777434088 THEN rt0.c0 ELSE rt0.c1 END THEN CAST(rt0.c2 AS BLOB) ELSE ((v0.c0)&(rt0.c1)) END;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 NOT INDEXED WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING SUM(CAST(v0.c0 AS REAL)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (SUM(CAST(v0.c0 AS REAL)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((SUM(CAST(v0.c0 AS REAL))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING SUM(CAST(v0.c0 AS REAL)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (SUM(CAST(v0.c0 AS REAL)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((SUM(CAST(v0.c0 AS REAL))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON ((((rt0.c1)||(v0.c0)))&(rt0.c0 COLLATE RTRIM));
SELECT rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON ((((rt0.c1)||(v0.c0)))&(rt0.c0 COLLATE RTRIM)) WHERE (CAST(rt0.c0 AS REAL)) UNION ALL SELECT rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON ((((rt0.c1)||(v0.c0)))&(rt0.c0 COLLATE RTRIM)) WHERE ((NOT (CAST(rt0.c0 AS REAL)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON ((((rt0.c1)||(v0.c0)))&(rt0.c0 COLLATE RTRIM)) WHERE (((CAST(rt0.c0 AS REAL)) ISNULL));
SELECT rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON ((((rt0.c1)||(v0.c0)))&(rt0.c0 COLLATE RTRIM));
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((ABS(DISTINCT rt0.c2) IN (((((rt0.c2)AND(rt0.c0)))AND(v0.c0)), rt0.c2))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((ABS(DISTINCT rt0.c2) IN (((((rt0.c2)AND(rt0.c0)))AND(v0.c0)), rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((ABS(DISTINCT rt0.c2) IN (((((rt0.c2)AND(rt0.c0)))AND(v0.c0)), rt0.c2))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, v0.c0;
SELECT ALL rt0.c0, v0.c0 FROM v0, rt0 WHERE ('Pi K') GROUP BY rt0.c0, v0.c0 UNION SELECT rt0.c0, v0.c0 FROM v0, rt0 WHERE ((NOT ('Pi K'))) GROUP BY rt0.c0, v0.c0 UNION SELECT ALL rt0.c0, v0.c0 FROM v0, rt0 WHERE ((('Pi K') ISNULL)) GROUP BY rt0.c0, v0.c0;
SELECT rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, v0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING '112725899' UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT ('112725899')) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (('112725899') ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING '112725899' UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT ('112725899')) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (('112725899') ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT v0.c0, rt0.c1 FROM rt0, v0;
SELECT v0.c0, rt0.c1 FROM rt0, v0 WHERE ((('')||(((rt0.c1)AND('	腼'))))) UNION ALL SELECT v0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT ((('')||(((rt0.c1)AND('	腼'))))))) UNION ALL SELECT ALL v0.c0, rt0.c1 FROM rt0, v0 WHERE ((((('')||(((rt0.c1)AND('	腼'))))) ISNULL));
SELECT v0.c0, rt0.c1 FROM rt0, v0;
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON ((SUBSTR(rt0.c1, rt0.c2)) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND ((('')IS NOT(rt0.c1))));
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON ((SUBSTR(rt0.c1, rt0.c2)) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND ((('')IS NOT(rt0.c1)))) WHERE ('') UNION SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON ((SUBSTR(rt0.c1, rt0.c2)) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND ((('')IS NOT(rt0.c1)))) WHERE ((NOT (''))) UNION SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON ((SUBSTR(rt0.c1, rt0.c2)) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND ((('')IS NOT(rt0.c1)))) WHERE ((('') ISNULL));
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON ((SUBSTR(rt0.c1, rt0.c2)) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND ((('')IS NOT(rt0.c1))));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c2)<=(rt0.c1)) IN ())) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2)<=(rt0.c1)) IN ())))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c2)<=(rt0.c1)) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(((v0.c0) ISNULL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(((v0.c0) ISNULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(((v0.c0) ISNULL))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(((v0.c0) ISNULL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(((v0.c0) ISNULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(((v0.c0) ISNULL))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0, rt0.c1 FROM rt0, v0;
SELECT rt0.c0, rt0.c1 FROM rt0, v0 WHERE (CASE rt0.c0  WHEN HEX(DISTINCT rt0.c2) THEN rt0.c0 COLLATE RTRIM END) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (CASE rt0.c0  WHEN HEX(DISTINCT rt0.c2) THEN rt0.c0 COLLATE RTRIM END))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, v0 WHERE (((CASE rt0.c0  WHEN HEX(DISTINCT rt0.c2) THEN rt0.c0 COLLATE RTRIM END) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 WHERE (((v0.c0) IS FALSE)) UNION SELECT DISTINCT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (((v0.c0) IS FALSE)))) UNION SELECT DISTINCT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 WHERE (((((v0.c0) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN v0.c0 COLLATE BINARY THEN CASE v0.c0  WHEN v0.c0 THEN 0.8262265388573716 END ELSE v0.c0 END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN v0.c0 COLLATE BINARY THEN CASE v0.c0  WHEN v0.c0 THEN 0.8262265388573716 END ELSE v0.c0 END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN v0.c0 COLLATE BINARY THEN CASE v0.c0  WHEN v0.c0 THEN 0.8262265388573716 END ELSE v0.c0 END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING UNLIKELY(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (UNLIKELY(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((UNLIKELY(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING UNLIKELY(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (UNLIKELY(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((UNLIKELY(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1 FROM v0, rt0;
SELECT rt0.c1 FROM v0, rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (v0.c0))) NOTNULL)) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c1) AND (v0.c0))) NOTNULL)))) UNION ALL SELECT rt0.c1 FROM v0, rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c1) AND (v0.c0))) NOTNULL)) ISNULL));
SELECT ALL rt0.c1 FROM v0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) ISNULL))/(((rt0.c1) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0) ISNULL))/(((rt0.c1) NOT NULL)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0) ISNULL))/(((rt0.c1) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST((~ (v0.c0)) AS NUMERIC)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST((~ (v0.c0)) AS NUMERIC)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST((~ (v0.c0)) AS NUMERIC)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0 HAVING MIN(((v0.c0)||(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 NOT INDEXED, v0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (MIN(((v0.c0)||(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0 HAVING ((MIN(((v0.c0)||(rt0.c1)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0 HAVING MIN(((v0.c0)||(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 NOT INDEXED, v0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (MIN(((v0.c0)||(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0 HAVING ((MIN(((v0.c0)||(rt0.c1)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL MIN(CAST((~ (v0.c0)) AS TEXT)) FROM v0;
SELECT ALL rt0.c0 FROM rt0, v0;
SELECT rt0.c0 FROM rt0, v0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (v0.c0) AND (0.6441270797214143))) AND (((1.370577393E9) BETWEEN (rt0.c1) AND (rt0.c0))))) UNION ALL SELECT rt0.c0 FROM rt0, v0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (v0.c0) AND (0.6441270797214143))) AND (((1.370577393E9) BETWEEN (rt0.c1) AND (rt0.c0))))))) UNION ALL SELECT rt0.c0 FROM rt0, v0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (v0.c0) AND (0.6441270797214143))) AND (((1.370577393E9) BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL));
SELECT ALL rt0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (TRIM(DISTINCT NULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (TRIM(DISTINCT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((TRIM(DISTINCT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((((rt0.c2))>((rt0.c1)))) NOT NULL) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((((((rt0.c2))>((rt0.c1)))) NOT NULL))) UNION ALL SELECT rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0 HAVING (((((((rt0.c2))>((rt0.c1)))) NOT NULL)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((((rt0.c2))>((rt0.c1)))) NOT NULL) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((((((rt0.c2))>((rt0.c1)))) NOT NULL))) UNION ALL SELECT rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0 HAVING (((((((rt0.c2))>((rt0.c1)))) NOT NULL)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL SUM(IFNULL(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c0)<<(rt0.c1)))) FROM rt0 ORDER BY CASE 'C2CMC4E'  WHEN SUBSTR(rt0.c1, rt0.c1) THEN (+ (rt0.c0)) END ASC;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((0.024040257816591915 COLLATE RTRIM) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c2)OR(rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((0.024040257816591915 COLLATE RTRIM) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c2)OR(rt0.c0))))))) UNION ALL SELECT * FROM rt0 WHERE (((((0.024040257816591915 COLLATE RTRIM) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c2)OR(rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((((rt0.c2))=((rt0.c0))))>(((rt0.c1) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((((rt0.c2))==((rt0.c0))))>(((rt0.c1) NOTNULL)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((((rt0.c2))==((rt0.c0))))>(((rt0.c1) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 WHERE (LIKE(TRIM(rt0.c1), CAST(rt0.c1 AS BLOB), 'Z')) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (LIKE(TRIM(rt0.c1), CAST(rt0.c1 AS BLOB), 'Z')))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 WHERE (((LIKE(TRIM(rt0.c1), CAST(rt0.c1 AS BLOB), 'Z')) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT v0.c0, rt0.c1, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c1, rt0.c2, v0.c0)) NOT BETWEEN (((rt0.c1 IN ()), ((rt0.c1)>=(rt0.c1)), ((rt0.c2) NOT NULL))) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END, CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, v0.c0))) GROUP BY v0.c0, rt0.c1, rt0.c2;
SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c1, rt0.c2, v0.c0)) NOT BETWEEN (((rt0.c1 IN ()), ((rt0.c1)>=(rt0.c1)), ((rt0.c2) NOT NULL))) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END, CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, v0.c0))) GROUP BY v0.c0, rt0.c1, rt0.c2 HAVING ((((GROUP_CONCAT(rt0.c0)) BETWEEN (rt0.c2) AND (COUNT(*)))) NOT BETWEEN (CASE WHEN v0.c0 THEN NULL END) AND (SUM(v0.c0))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c1, rt0.c2, v0.c0)) NOT BETWEEN (((rt0.c1 IN ()), ((rt0.c1)>=(rt0.c1)), ((rt0.c2) NOT NULL))) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END, CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, v0.c0))) GROUP BY v0.c0, rt0.c1, rt0.c2 HAVING (NOT (((((GROUP_CONCAT(rt0.c0)) BETWEEN (rt0.c2) AND (COUNT(*)))) NOT BETWEEN (CASE WHEN v0.c0 THEN NULL END) AND (SUM(v0.c0))))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c1, rt0.c2, v0.c0)) NOT BETWEEN (((rt0.c1 IN ()), ((rt0.c1)>=(rt0.c1)), ((rt0.c2) NOT NULL))) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END, CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, v0.c0))) GROUP BY v0.c0, rt0.c1, rt0.c2 HAVING ((((((GROUP_CONCAT(rt0.c0)) BETWEEN (rt0.c2) AND (COUNT(*)))) NOT BETWEEN (CASE WHEN v0.c0 THEN NULL END) AND (SUM(v0.c0)))) ISNULL);
SELECT v0.c0, rt0.c1, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c1, rt0.c2, v0.c0)) NOT BETWEEN (((rt0.c1 IN ()), ((rt0.c1)>=(rt0.c1)), ((rt0.c2) NOT NULL))) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END, CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, v0.c0))) GROUP BY v0.c0, rt0.c1, rt0.c2;
SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c1, rt0.c2, v0.c0)) NOT BETWEEN (((rt0.c1 IN ()), ((rt0.c1)>=(rt0.c1)), ((rt0.c2) NOT NULL))) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END, CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, v0.c0))) GROUP BY v0.c0, rt0.c1, rt0.c2 HAVING ((((GROUP_CONCAT(rt0.c0)) BETWEEN (rt0.c2) AND (COUNT(*)))) NOT BETWEEN (CASE WHEN v0.c0 THEN NULL END) AND (SUM(v0.c0))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c1, rt0.c2, v0.c0)) NOT BETWEEN (((rt0.c1 IN ()), ((rt0.c1)>=(rt0.c1)), ((rt0.c2) NOT NULL))) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END, CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, v0.c0))) GROUP BY v0.c0, rt0.c1, rt0.c2 HAVING (NOT (((((GROUP_CONCAT(rt0.c0)) BETWEEN (rt0.c2) AND (COUNT(*)))) NOT BETWEEN (CASE WHEN v0.c0 THEN NULL END) AND (SUM(v0.c0))))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c1, rt0.c2, v0.c0)) NOT BETWEEN (((rt0.c1 IN ()), ((rt0.c1)>=(rt0.c1)), ((rt0.c2) NOT NULL))) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END, CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, v0.c0))) GROUP BY v0.c0, rt0.c1, rt0.c2 HAVING ((((((GROUP_CONCAT(rt0.c0)) BETWEEN (rt0.c2) AND (COUNT(*)))) NOT BETWEEN (CASE WHEN v0.c0 THEN NULL END) AND (SUM(v0.c0)))) ISNULL);
SELECT v0.c0, rt0.c1, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c1, rt0.c2, v0.c0)) NOT BETWEEN (((rt0.c1 IN ()), ((rt0.c1)>=(rt0.c1)), ((rt0.c2) NOT NULL))) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END, CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, v0.c0))) GROUP BY v0.c0, rt0.c1, rt0.c2;
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (CASE WHEN rt0.c2 THEN CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 ELSE x'' END ELSE ((((((((v0.c0)AND('-906871338')))OR(rt0.c1)))AND(rt0.c0)))AND(v0.c0)) END) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 ELSE x'' END ELSE ((((((((v0.c0)AND('-906871338')))OR(rt0.c1)))AND(rt0.c0)))AND(v0.c0)) END))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((CASE WHEN rt0.c2 THEN CASE rt0.c1  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 ELSE x'' END ELSE ((((((((v0.c0)AND('-906871338')))OR(rt0.c1)))AND(rt0.c0)))AND(v0.c0)) END) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY)||(((rt0.c0) NOT NULL)));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY)||(((rt0.c0) NOT NULL))) WHERE (rt0.c2) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY)||(((rt0.c0) NOT NULL))) WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY)||(((rt0.c0) NOT NULL))) WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY)||(((rt0.c0) NOT NULL)));
SELECT rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM rt0 INNER JOIN v0 ON ((((((((json_valid(v0.c0))AND(0.1801134548945279)))AND((v0.c0 IN ()))))OR(x'a0f9')))AND(CAST(rt0.c0 AS INTEGER))) GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM rt0 INNER JOIN v0 ON ((((((((json_valid(v0.c0))AND(0.1801134548945279)))AND((v0.c0 IN ()))))OR(x'a0f9')))AND(CAST(rt0.c0 AS INTEGER))) WHERE (CAST(((0X59343f85) ISNULL) AS NUMERIC)) GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM rt0 INNER JOIN v0 ON ((((((((json_valid(v0.c0))AND(0.1801134548945279)))AND((v0.c0 IN ()))))OR(x'a0f9')))AND(CAST(rt0.c0 AS INTEGER))) WHERE ((NOT (CAST(((0x59343f85) ISNULL) AS NUMERIC)))) GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM rt0 INNER JOIN v0 ON ((((((((json_valid(v0.c0))AND(0.1801134548945279)))AND((v0.c0 IN ()))))OR(x'a0f9')))AND(CAST(rt0.c0 AS INTEGER))) WHERE (((CAST(((0X59343f85) ISNULL) AS NUMERIC)) ISNULL)) GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM rt0 INNER JOIN v0 ON ((((((((json_valid(v0.c0))AND(0.1801134548945279)))AND((v0.c0 IN ()))))OR(x'a0f9')))AND(CAST(rt0.c0 AS INTEGER))) GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING GROUP_CONCAT(MAX(rt0.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(MAX(rt0.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(MAX(rt0.c0))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (x'') UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (x''))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((x'') ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 WHERE (((CAST(v0.c0 AS BLOB)) ISNULL)) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((NOT (((CAST(v0.c0 AS BLOB)) ISNULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 WHERE (((((CAST(v0.c0 AS BLOB)) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((+ (CASE WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((NOT ((+ (CASE WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((((+ (CASE WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING MIN(COUNT(TOTAL(COUNT(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING (NOT (MIN(COUNT(TOTAL(COUNT(rt0.c1)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING ((MIN(COUNT(TOTAL(COUNT(rt0.c1))))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((HEX(DISTINCT v0.c0))) AND (((v0.c0 IN ()))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((HEX(DISTINCT v0.c0))) AND (((v0.c0 IN ()))))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((HEX(DISTINCT v0.c0))) AND (((v0.c0 IN ()))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0 WHERE (((((((((((v0.c0)>=(v0.c0)))AND(NULLIF(DISTINCT rt0.c0, v0.c0))))OR(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))AND(rt0.c1)))AND(206037805))) UNION SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0 WHERE ((NOT (((((((((((v0.c0)>=(v0.c0)))AND(NULLIF(DISTINCT rt0.c0, v0.c0))))OR(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))AND(rt0.c1)))AND(206037805))))) UNION SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0 WHERE (((((((((((((v0.c0)>=(v0.c0)))AND(NULLIF(DISTINCT rt0.c0, v0.c0))))OR(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))AND(rt0.c1)))AND(206037805))) ISNULL));
SELECT DISTINCT rt0.c2, v0.c0 FROM rt0, v0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((rt0.c0 IN ())) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((rt0.c0 IN ())))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c0 IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING (MIN(-1.24988166E8) IN ()) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((MIN(-1.24988166E8) IN ()))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING (((MIN(-1.24988166E8) IN ())) ISNULL);
SELECT v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING (MIN(-1.24988166E8) IN ()) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((MIN(-1.24988166E8) IN ()))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING (((MIN(-1.24988166E8) IN ())) ISNULL);
SELECT v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((LOWER(DISTINCT v0.c0), v0.c0, (((0.5017765312100025, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))) AND (((- (v0.c0)), ((v0.c0) NOTNULL), v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((LOWER(DISTINCT v0.c0), v0.c0, (((0.5017765312100025, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))) AND (((- (v0.c0)), ((v0.c0) NOTNULL), v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((LOWER(DISTINCT v0.c0), v0.c0, (((0.5017765312100025, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))) AND (((- (v0.c0)), ((v0.c0) NOTNULL), v0.c0)))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON CAST((rt0.c0 IN (NULL, rt0.c0)) AS INTEGER);
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON CAST((rt0.c0 IN (NULL, rt0.c0)) AS INTEGER) WHERE (UPPER(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON CAST((rt0.c0 IN (NULL, rt0.c0)) AS INTEGER) WHERE ((NOT (UPPER(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON CAST((rt0.c0 IN (NULL, rt0.c0)) AS INTEGER) WHERE (((UPPER(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON CAST((rt0.c0 IN (NULL, rt0.c0)) AS INTEGER);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((- (((rt0.c2) NOT NULL)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((- (((rt0.c2) NOT NULL)))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((- (((rt0.c2) NOT NULL)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING MAX(rt0.c0) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (MAX(rt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((MAX(rt0.c0)) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING MAX(rt0.c0) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (MAX(rt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((MAX(rt0.c0)) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c0) BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) AND (((((rt0.c1)AND(v0.c0)))OR(rt0.c0))))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (((rt0.c0) BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) AND (((((rt0.c1)AND(v0.c0)))OR(rt0.c0))))))) UNION ALL SELECT * FROM v0, rt0 WHERE (((((rt0.c0) BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) AND (((((rt0.c1)AND(v0.c0)))OR(rt0.c0))))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT rt0.c0, v0.c0, rt0.c2 FROM v0 CROSS JOIN rt0 ON ((0.4643352276474423 COLLATE NOCASE) BETWEEN (0Xffffffff851141c0) AND (((rt0.c1) IS FALSE)));
SELECT DISTINCT rt0.c0, v0.c0, rt0.c2 FROM v0 CROSS JOIN rt0 ON ((0.4643352276474423 COLLATE NOCASE) BETWEEN (0xffffffff851141c0) AND (((rt0.c1) IS FALSE))) WHERE ((~ (((rt0.c2)<>(rt0.c2))))) UNION SELECT DISTINCT rt0.c0, v0.c0, rt0.c2 FROM v0 CROSS JOIN rt0 ON ((0.4643352276474423 COLLATE NOCASE) BETWEEN (0xffffffff851141c0) AND (((rt0.c1) IS FALSE))) WHERE ((NOT ((~ (((rt0.c2)<>(rt0.c2))))))) UNION SELECT DISTINCT rt0.c0, v0.c0, rt0.c2 FROM v0 CROSS JOIN rt0 ON ((0.4643352276474423 COLLATE NOCASE) BETWEEN (0xffffffff851141c0) AND (((rt0.c1) IS FALSE))) WHERE ((((~ (((rt0.c2)<>(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0, v0.c0, rt0.c2 FROM v0 CROSS JOIN rt0 ON ((0.4643352276474423 COLLATE NOCASE) BETWEEN (0Xffffffff851141c0) AND (((rt0.c1) IS FALSE)));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST(DATETIME(v0.c0, v0.c0, v0.c0) AS NUMERIC)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(DATETIME(v0.c0, v0.c0, v0.c0) AS NUMERIC)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST(DATETIME(v0.c0, v0.c0, v0.c0) AS NUMERIC)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 NOT INDEXED GROUP BY v0.c0, rt0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2 HAVING MAX(MIN(rt0.c1)) UNION ALL SELECT v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2 HAVING (NOT (MAX(MIN(rt0.c1)))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2 HAVING ((MAX(MIN(rt0.c1))) ISNULL);
SELECT MAX(((((((((v0.c0)AND((v0.c0 IN ()))))AND(LOWER(''))))AND('862975444')))AND(v0.c0))) FROM v0;
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE ((((+ (rt0.c2))) IS FALSE)) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT ((((+ (rt0.c2))) IS FALSE)))) UNION ALL SELECT * FROM v0, rt0 WHERE ((((((+ (rt0.c2))) IS FALSE)) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT rt0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c1 FROM rt0, v0 WHERE (((rt0.c0 COLLATE RTRIM) BETWEEN ((+ (rt0.c2))) AND (CAST(rt0.c2 AS TEXT)))) UNION SELECT DISTINCT rt0.c1 FROM rt0, v0 NOT INDEXED WHERE ((NOT (((rt0.c0 COLLATE RTRIM) BETWEEN ((+ (rt0.c2))) AND (CAST(rt0.c2 AS TEXT)))))) UNION SELECT DISTINCT rt0.c1 FROM rt0, v0 WHERE (((((rt0.c0 COLLATE RTRIM) BETWEEN ((+ (rt0.c2))) AND (CAST(rt0.c2 AS TEXT)))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0;
SELECT rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0 HAVING AVG(rt0.c1 COLLATE NOCASE) UNION ALL SELECT ALL rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0 HAVING (NOT (AVG(rt0.c1 COLLATE NOCASE))) UNION ALL SELECT rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0 HAVING ((AVG(rt0.c1 COLLATE NOCASE)) ISNULL);
SELECT ALL rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0;
SELECT rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0 HAVING AVG(rt0.c1 COLLATE NOCASE) UNION ALL SELECT ALL rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0 HAVING (NOT (AVG(rt0.c1 COLLATE NOCASE))) UNION ALL SELECT rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0 HAVING ((AVG(rt0.c1 COLLATE NOCASE)) ISNULL);
SELECT ALL rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((((NOT (v0.c0))) NOT BETWEEN (ROUND(v0.c0, v0.c0)) AND (json_extract(v0.c0, v0.c0)))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((NOT (v0.c0))) NOT BETWEEN (ROUND(v0.c0, v0.c0)) AND (json_extract(v0.c0, v0.c0)))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((NOT (v0.c0))) NOT BETWEEN (ROUND(v0.c0, v0.c0)) AND (json_extract(v0.c0, v0.c0)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (UPPER(CASE rt0.c2  WHEN rt0.c0 THEN x'e58e3164' END)) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (UPPER(CASE rt0.c2  WHEN rt0.c0 THEN x'e58e3164' END)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((UPPER(CASE rt0.c2  WHEN rt0.c0 THEN x'e58e3164' END)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 WHERE ((NOT (((((v0.c0)OR(rt0.c0)))OR(v0.c0))))) GROUP BY v0.c0, rt0.c1, rt0.c0 UNION SELECT v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 WHERE ((NOT ((NOT (((((v0.c0)OR(rt0.c0)))OR(v0.c0))))))) GROUP BY v0.c0, rt0.c1, rt0.c0 UNION SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 WHERE ((((NOT (((((v0.c0)OR(rt0.c0)))OR(v0.c0))))) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING MIN((- (-1.184688975E9))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING (NOT (MIN((- (-1.184688975E9))))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING ((MIN((- (-1.184688975E9)))) ISNULL);
SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING MIN((- (-1.184688975E9))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING (NOT (MIN((- (-1.184688975E9))))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING ((MIN((- (-1.184688975E9)))) ISNULL);
SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((+ (CAST(v0.c0 AS BLOB)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((+ (CAST(v0.c0 AS BLOB)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((+ (CAST(v0.c0 AS BLOB)))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))OR((v0.c0 IN ()))))OR(TRIM(v0.c0)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))OR((v0.c0 IN ()))))OR(TRIM(v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))OR((v0.c0 IN ()))))OR(TRIM(v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c1 FROM rt0 INNER JOIN v0 ON CAST(((0.4560342265771905)>>(x'')) AS INTEGER) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 INNER JOIN v0 ON CAST(((0.4560342265771905)>>(x'')) AS INTEGER) WHERE (((((v0.c0)-(0.6403001124425218)))||(CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 INNER JOIN v0 ON CAST(((0.4560342265771905)>>(x'')) AS INTEGER) WHERE ((NOT (((((v0.c0)-(0.6403001124425218)))||(CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 INNER JOIN v0 ON CAST(((0.4560342265771905)>>(x'')) AS INTEGER) WHERE (((((((v0.c0)-(0.6403001124425218)))||(CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 INNER JOIN v0 ON CAST(((0.4560342265771905)>>(x'')) AS INTEGER) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c1 HAVING CAST(COUNT(0.418807903595364) AS BLOB) UNION ALL SELECT rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c1 HAVING (NOT (CAST(COUNT(0.418807903595364) AS BLOB))) UNION ALL SELECT ALL rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c1 HAVING ((CAST(COUNT(0.418807903595364) AS BLOB)) ISNULL);
SELECT ALL rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c1 HAVING CAST(COUNT(0.418807903595364) AS BLOB) UNION ALL SELECT rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c1 HAVING (NOT (CAST(COUNT(0.418807903595364) AS BLOB))) UNION ALL SELECT ALL rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c1 HAVING ((CAST(COUNT(0.418807903595364) AS BLOB)) ISNULL);
SELECT ALL rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c1;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)IS(v0.c0)))) AND ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((((v0.c0)IS(v0.c0)))) AND ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((((v0.c0)IS(v0.c0)))) AND ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END)*((- (rt0.c2))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END)*((- (rt0.c2))))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END)*((- (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 WHERE (((v0.c0 COLLATE RTRIM)>=(((rt0.c1)GLOB(rt0.c0))))) GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 WHERE ((NOT (((v0.c0 COLLATE RTRIM)>=(((rt0.c1)GLOB(rt0.c0))))))) GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 WHERE (((((v0.c0 COLLATE RTRIM)>=(((rt0.c1)GLOB(rt0.c0))))) ISNULL)) GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 CROSS JOIN v0 ON (((~ (rt0.c1)))==((('u~7pBn>')GLOB(rt0.c0))));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 CROSS JOIN v0 ON (((~ (rt0.c1)))==((('u~7pBn>')GLOB(rt0.c0)))) WHERE (((NULL COLLATE RTRIM) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((rt0.c2) ISNULL)))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 CROSS JOIN v0 ON (((~ (rt0.c1)))==((('u~7pBn>')GLOB(rt0.c0)))) WHERE ((NOT (((NULL COLLATE RTRIM) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((rt0.c2) ISNULL)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 CROSS JOIN v0 ON (((~ (rt0.c1)))==((('u~7pBn>')GLOB(rt0.c0)))) WHERE (((((NULL COLLATE RTRIM) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((rt0.c2) ISNULL)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 CROSS JOIN v0 ON (((~ (rt0.c1)))==((('u~7pBn>')GLOB(rt0.c0))));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (0.5598794128098538) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (0.5598794128098538))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((0.5598794128098538) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON rt0.c2 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON rt0.c2 GROUP BY rt0.c1 HAVING GROUP_CONCAT(COUNT(rt0.c1)) UNION ALL SELECT ALL rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON rt0.c2 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(COUNT(rt0.c1)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON rt0.c2 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(COUNT(rt0.c1))) ISNULL);
SELECT ALL SUM(((CAST(v0.c0 AS NUMERIC)) IS FALSE)) FROM v0 ORDER BY CASE WHEN ((v0.c0)>=(v0.c0)) THEN ((v0.c0)==(v0.c0)) END DESC;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (-1970575116) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (-1970575116))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((-1970575116) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((NULL)%(v0.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((NULL)%(v0.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((NULL)%(v0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))%(((v0.c0)*(x''))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))%(((v0.c0)*(x''))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))%(((v0.c0)*(x''))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING CASE WHEN ((rt0.c1)<(TOTAL(rt0.c0))) THEN COUNT(rt0.c1) ELSE CAST(rt0.c0 AS INTEGER) END UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (CASE WHEN ((rt0.c1)<(TOTAL(rt0.c0))) THEN COUNT(rt0.c1) ELSE CAST(rt0.c0 AS INTEGER) END)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((CASE WHEN ((rt0.c1)<(TOTAL(rt0.c0))) THEN COUNT(rt0.c1) ELSE CAST(rt0.c0 AS INTEGER) END) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING CASE WHEN ((rt0.c1)<(TOTAL(rt0.c0))) THEN COUNT(rt0.c1) ELSE CAST(rt0.c0 AS INTEGER) END UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (CASE WHEN ((rt0.c1)<(TOTAL(rt0.c0))) THEN COUNT(rt0.c1) ELSE CAST(rt0.c0 AS INTEGER) END)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((CASE WHEN ((rt0.c1)<(TOTAL(rt0.c0))) THEN COUNT(rt0.c1) ELSE CAST(rt0.c0 AS INTEGER) END) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END)=((NOT (0.5495307648130315))))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END)=((NOT (0.5495307648130315))))))) UNION ALL SELECT * FROM v0, rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END)==((NOT (0.5495307648130315))))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c1) NOT NULL))AND(((rt0.c2)+(rt0.c0)))))OR(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(x'')))AND(x''))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((((rt0.c1) NOT NULL))AND(((rt0.c2)+(rt0.c0)))))OR(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(x'')))AND(x''))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((((rt0.c1) NOT NULL))AND(((rt0.c2)+(rt0.c0)))))OR(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(x'')))AND(x''))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST(((((v0.c0)OR(v0.c0)))OR(v0.c0)) AS REAL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(((((v0.c0)OR(v0.c0)))OR(v0.c0)) AS REAL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST(((((v0.c0)OR(v0.c0)))OR(v0.c0)) AS REAL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING MIN(COUNT(*)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL MAX(((v0.c0)/(rt0.c1)) COLLATE RTRIM) FROM v0, rt0 ORDER BY CASE WHEN NULL THEN CASE WHEN v0.c0 THEN rt0.c0 END ELSE ((((v0.c0)AND(rt0.c2)))AND(rt0.c1)) END;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))OR('-')))AND(v0.c0)))OR(v0.c0)))IS NOT(LIKELIHOOD(v0.c0, 0.06518265229466236)))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((((((((v0.c0)OR(v0.c0)))OR('-')))AND(v0.c0)))OR(v0.c0)))IS NOT(LIKELIHOOD(v0.c0, 0.06518265229466236)))))) UNION ALL SELECT * FROM v0 WHERE (((((((((((((v0.c0)OR(v0.c0)))OR('-')))AND(v0.c0)))OR(v0.c0)))IS NOT(LIKELIHOOD(v0.c0, 0.06518265229466236)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)OR(0.07172160088372037)))OR(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((NOT (((((v0.c0)OR(0.07172160088372037)))OR(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((NOT (((((v0.c0)OR(0.07172160088372037)))OR(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING ((((((((COUNT(MAX(TOTAL(rt0.c0))))AND('0.9359806329956782')))OR(GROUP_CONCAT(rt0.c2))))OR((rt0.c0 IN (rt0.c2)))))OR(COUNT(*))) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING (NOT (((((((((COUNT(MAX(TOTAL(rt0.c0))))AND('0.9359806329956782')))OR(GROUP_CONCAT(rt0.c2))))OR((rt0.c0 IN (rt0.c2)))))OR(COUNT(*))))) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING ((((((((((COUNT(MAX(TOTAL(rt0.c0))))AND('0.9359806329956782')))OR(GROUP_CONCAT(rt0.c2))))OR((rt0.c0 IN (rt0.c2)))))OR(COUNT(*)))) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (DATETIME('0.2471506608458286' COLLATE BINARY, ((rt0.c2)>(v0.c0)), (x'' IN (rt0.c2)), TRIM(DISTINCT rt0.c2), rt0.c2 COLLATE BINARY)) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (DATETIME('0.2471506608458286' COLLATE BINARY, ((rt0.c2)>(v0.c0)), (x'' IN (rt0.c2)), TRIM(DISTINCT rt0.c2), rt0.c2 COLLATE BINARY)))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((DATETIME('0.2471506608458286' COLLATE BINARY, ((rt0.c2)>(v0.c0)), (x'' IN (rt0.c2)), TRIM(DISTINCT rt0.c2), rt0.c2 COLLATE BINARY)) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (LIKE((rt0.c0 IN ()), rt0.c1)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (LIKE((rt0.c0 IN ()), rt0.c1)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((LIKE((rt0.c0 IN ()), rt0.c1)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((~ (rt0.c0))) NOT NULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((~ (rt0.c0))) NOT NULL)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((~ (rt0.c0))) NOT NULL)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING MAX((rt0.c1 IN ())) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (MAX((rt0.c1 IN ())))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((MAX((rt0.c1 IN ()))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING MAX((rt0.c1 IN ())) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (MAX((rt0.c1 IN ())))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((MAX((rt0.c1 IN ()))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) NOTNULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE RTRIM) NOTNULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c2 COLLATE RTRIM) NOTNULL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c2 FROM rt0, v0 WHERE (((json_insert(v0.c0, rt0.c0, rt0.c1))<(CASE rt0.c2  WHEN NULL THEN v0.c0 END))) UNION SELECT DISTINCT rt0.c2 FROM rt0, v0 WHERE ((NOT (((json_insert(v0.c0, rt0.c0, rt0.c1))<(CASE rt0.c2  WHEN NULL THEN v0.c0 END))))) UNION SELECT DISTINCT rt0.c2 FROM rt0, v0 WHERE (((((json_insert(v0.c0, rt0.c0, rt0.c1))<(CASE rt0.c2  WHEN NULL THEN v0.c0 END))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0, v0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 WHERE (((json_remove(rt0.c1, rt0.c1))=(NULL))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 WHERE ((NOT (((json_remove(rt0.c1, rt0.c1))==(NULL))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0, v0 WHERE (((((json_remove(rt0.c1, rt0.c1))==(NULL))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING GROUP_CONCAT(MAX(MIN(COUNT(*)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(MAX(MIN(COUNT(*)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(MAX(MIN(COUNT(*))))) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (((LIKE(rt0.c2, v0.c0))-(LIKELIHOOD(v0.c0, 0.6904585220457707)))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (((LIKE(rt0.c2, v0.c0))-(LIKELIHOOD(v0.c0, 0.6904585220457707)))))) UNION ALL SELECT * FROM v0, rt0 WHERE (((((LIKE(rt0.c2, v0.c0))-(LIKELIHOOD(v0.c0, 0.6904585220457707)))) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((~ (rt0.c1)) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT ((~ (rt0.c1)) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((((~ (rt0.c1)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0;
SELECT rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0;
SELECT rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 WHERE (x'') GROUP BY rt0.c1, rt0.c2, v0.c0 UNION SELECT rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 WHERE ((NOT (x''))) GROUP BY rt0.c1, rt0.c2, v0.c0 UNION SELECT ALL rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 WHERE (((x'') ISNULL)) GROUP BY rt0.c1, rt0.c2, v0.c0;
SELECT rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(GROUP_CONCAT(GROUP_CONCAT(v0.c0))) COLLATE NOCASE UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(GROUP_CONCAT(GROUP_CONCAT(v0.c0))) COLLATE NOCASE)) UNION ALL SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING ((SUM(GROUP_CONCAT(GROUP_CONCAT(v0.c0))) COLLATE NOCASE) ISNULL);
SELECT TOTAL((- ((((rt0.c1, rt0.c0, rt0.c1))==(('-1278586253', rt0.c1, rt0.c2)))))) FROM rt0 ORDER BY (((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)) IN ()) DESC;
SELECT * FROM rt0 FULL OUTER JOIN v0 ON CASE rt0.c1  WHEN ((rt0.c1)<(v0.c0)) THEN v0.c0 WHEN rt0.c2 THEN (rt0.c1 IN (rt0.c2, x'')) WHEN ((rt0.c0)&(rt0.c1)) THEN ((rt0.c1)||(rt0.c0)) ELSE (((rt0.c0, rt0.c1, v0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((v0.c0, v0.c0, rt0.c1))) END;
SELECT * FROM rt0 FULL OUTER JOIN v0 ON CASE rt0.c1  WHEN ((rt0.c1)<(v0.c0)) THEN v0.c0 WHEN rt0.c2 THEN (rt0.c1 IN (rt0.c2, x'')) WHEN ((rt0.c0)&(rt0.c1)) THEN ((rt0.c1)||(rt0.c0)) ELSE (((rt0.c0, rt0.c1, v0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((v0.c0, v0.c0, rt0.c1))) END WHERE (((json_valid(rt0.c2)) NOTNULL)) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN v0 ON CASE rt0.c1  WHEN ((rt0.c1)<(v0.c0)) THEN v0.c0 WHEN rt0.c2 THEN (rt0.c1 IN (rt0.c2, x'')) WHEN ((rt0.c0)&(rt0.c1)) THEN ((rt0.c1)||(rt0.c0)) ELSE (((rt0.c0, rt0.c1, v0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((v0.c0, v0.c0, rt0.c1))) END WHERE ((NOT (((json_valid(rt0.c2)) NOTNULL)))) UNION ALL SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON CASE rt0.c1  WHEN ((rt0.c1)<(v0.c0)) THEN v0.c0 WHEN rt0.c2 THEN (rt0.c1 IN (rt0.c2, x'')) WHEN ((rt0.c0)&(rt0.c1)) THEN ((rt0.c1)||(rt0.c0)) ELSE (((rt0.c0, rt0.c1, v0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((v0.c0, v0.c0, rt0.c1))) END WHERE (((((json_valid(rt0.c2)) NOTNULL)) ISNULL));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON CASE rt0.c1  WHEN ((rt0.c1)<(v0.c0)) THEN v0.c0 WHEN rt0.c2 THEN (rt0.c1 IN (rt0.c2, x'')) WHEN ((rt0.c0)&(rt0.c1)) THEN ((rt0.c1)||(rt0.c0)) ELSE (((rt0.c0, rt0.c1, v0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((v0.c0, v0.c0, rt0.c1))) END;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((IFNULL(v0.c0, v0.c0)) ISNULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((IFNULL(v0.c0, v0.c0)) ISNULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((IFNULL(v0.c0, v0.c0)) ISNULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((+ (LOWER(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((+ (LOWER(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((+ (LOWER(v0.c0)))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (CASE (NOT (rt0.c2))  WHEN x'535e' THEN CASE v0.c0  WHEN rt0.c1 THEN v0.c0 ELSE rt0.c1 END ELSE rt0.c0 END) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (CASE (NOT (rt0.c2))  WHEN x'535e' THEN CASE v0.c0  WHEN rt0.c1 THEN v0.c0 ELSE rt0.c1 END ELSE rt0.c0 END))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((CASE (NOT (rt0.c2))  WHEN x'535e' THEN CASE v0.c0  WHEN rt0.c1 THEN v0.c0 ELSE rt0.c1 END ELSE rt0.c0 END) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((((rt0.c2)OR('')))AND('1991320865')))) AND ((((rt0.c2) ISNULL))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0)) BETWEEN ((((((rt0.c2)OR('')))AND('1991320865')))) AND ((((rt0.c2) ISNULL))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((((((rt0.c2)OR('')))AND('1991320865')))) AND ((((rt0.c2) ISNULL))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(GROUP_CONCAT(0.4446910223228586)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(0.4446910223228586)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(GROUP_CONCAT(0.4446910223228586))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((NOT (v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((NOT (v0.c0))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c2 FROM v0, rt0 WHERE (IFNULL(DISTINCT (- (v0.c0)), TRIM(v0.c0, rt0.c2))) UNION SELECT DISTINCT rt0.c2 FROM v0, rt0 WHERE ((NOT (IFNULL(DISTINCT (- (v0.c0)), TRIM(v0.c0, rt0.c2))))) UNION SELECT DISTINCT rt0.c2 FROM v0, rt0 WHERE (((IFNULL(DISTINCT (- (v0.c0)), TRIM(v0.c0, rt0.c2))) ISNULL));
SELECT DISTINCT rt0.c2 FROM v0, rt0;
SELECT rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM rt0, v0 WHERE ((((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((TRIM(DISTINCT rt0.c0), ((((rt0.c0)AND(v0.c0)))OR(v0.c0)), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((((rt0.c1)<<(rt0.c1)), (((v0.c0, rt0.c0, rt0.c0))<=((v0.c0, v0.c0, v0.c0))), (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, v0.c0)) AND ((rt0.c0, rt0.c2, v0.c0))))))) GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM rt0, v0 WHERE ((NOT ((((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((TRIM(DISTINCT rt0.c0), ((((rt0.c0)AND(v0.c0)))OR(v0.c0)), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((((rt0.c1)<<(rt0.c1)), (((v0.c0, rt0.c0, rt0.c0))<=((v0.c0, v0.c0, v0.c0))), (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, v0.c0)) AND ((rt0.c0, rt0.c2, v0.c0))))))))) GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c0 UNION SELECT rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM rt0, v0 WHERE ((((((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((TRIM(DISTINCT rt0.c0), ((((rt0.c0)AND(v0.c0)))OR(v0.c0)), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((((rt0.c1)<<(rt0.c1)), (((v0.c0, rt0.c0, rt0.c0))<=((v0.c0, v0.c0, v0.c0))), (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, v0.c0)) AND ((rt0.c0, rt0.c2, v0.c0))))))) ISNULL)) GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(MIN(COUNT(rt0.c1))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(MIN(COUNT(rt0.c1))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(MIN(COUNT(rt0.c1)))) ISNULL);
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE ((((rt0.c2)) NOT BETWEEN ((((((((((((((rt0.c2)AND(rt0.c2)))OR('')))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(v0.c0)))) AND ((ROUND(v0.c0, rt0.c2))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((((((((((((((rt0.c2)AND(rt0.c2)))OR('')))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(v0.c0)))) AND ((ROUND(v0.c0, rt0.c2))))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((((((rt0.c2)) NOT BETWEEN ((((((((((((((rt0.c2)AND(rt0.c2)))OR('')))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(v0.c0)))) AND ((ROUND(v0.c0, rt0.c2))))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (- ((rt0.c1 IN (rt0.c2))));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (- ((rt0.c1 IN (rt0.c2)))) WHERE ((((~ (rt0.c1))) IS FALSE)) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (- ((rt0.c1 IN (rt0.c2)))) WHERE ((NOT ((((~ (rt0.c1))) IS FALSE)))) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (- ((rt0.c1 IN (rt0.c2)))) WHERE ((((((~ (rt0.c1))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (- ((rt0.c1 IN (rt0.c2))));
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (CASE ((rt0.c0) IS FALSE)  WHEN ((rt0.c0) ISNULL) THEN (NOT (rt0.c2)) WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) THEN ((rt0.c1) IS TRUE) WHEN rt0.c2 THEN (((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, NULL)) AND ((rt0.c0, rt0.c2, rt0.c0))) ELSE CAST(rt0.c2 AS BLOB) END) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CASE ((rt0.c0) IS FALSE)  WHEN ((rt0.c0) ISNULL) THEN (NOT (rt0.c2)) WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) THEN ((rt0.c1) IS TRUE) WHEN rt0.c2 THEN (((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, NULL)) AND ((rt0.c0, rt0.c2, rt0.c0))) ELSE CAST(rt0.c2 AS BLOB) END))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE ((rt0.c0) IS FALSE)  WHEN ((rt0.c0) ISNULL) THEN (NOT (rt0.c2)) WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) THEN ((rt0.c1) IS TRUE) WHEN rt0.c2 THEN (((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, NULL)) AND ((rt0.c0, rt0.c2, rt0.c0))) ELSE CAST(rt0.c2 AS BLOB) END) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c2;
SELECT rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c2 HAVING (((MIN(rt0.c2)))<=((MAX(GROUP_CONCAT(MAX(AVG(TOTAL(AVG(x''))))))))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c2 HAVING (NOT ((((MIN(rt0.c2)))<=((MAX(GROUP_CONCAT(MAX(AVG(TOTAL(AVG(x''))))))))))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c2 HAVING (((((MIN(rt0.c2)))<=((MAX(GROUP_CONCAT(MAX(AVG(TOTAL(AVG(x'')))))))))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (x'') UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM v0 WHERE (((x'') ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (CASE ((rt0.c1) NOTNULL)  WHEN CAST(rt0.c2 AS REAL) THEN (NULL IN ()) END) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (CASE ((rt0.c1) NOTNULL)  WHEN CAST(rt0.c2 AS REAL) THEN (NULL IN ()) END))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((CASE ((rt0.c1) NOTNULL)  WHEN CAST(rt0.c2 AS REAL) THEN (NULL IN ()) END) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) IS FALSE) COLLATE RTRIM) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0) IS FALSE) COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0) IS FALSE) COLLATE RTRIM) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING MAX(COUNT(*)) UNION ALL SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END) NOTNULL)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 END) NOTNULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 END) NOTNULL)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c1, rt0.c2, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 WHERE (((DATETIME(rt0.c1, rt0.c1, v0.c0, rt0.c1, '-109491571')) NOTNULL)) UNION SELECT DISTINCT rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((NOT (((DATETIME(rt0.c1, rt0.c1, v0.c0, rt0.c1, '-109491571')) NOTNULL)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 WHERE (((((DATETIME(rt0.c1, rt0.c1, v0.c0, rt0.c1, '-109491571')) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, v0.c0 FROM v0, rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (CASE UPPER(rt0.c1)  WHEN ((rt0.c0)LIKE(rt0.c0)) THEN rt0.c2 COLLATE BINARY WHEN (rt0.c1 IN ()) THEN ((rt0.c1)>(rt0.c0)) WHEN CASE 0.06713383553514196  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END END) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE UPPER(rt0.c1)  WHEN ((rt0.c0)LIKE(rt0.c0)) THEN rt0.c2 COLLATE BINARY WHEN (rt0.c1 IN ()) THEN ((rt0.c1)>(rt0.c0)) WHEN CASE 0.06713383553514196  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END END))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE UPPER(rt0.c1)  WHEN ((rt0.c0)LIKE(rt0.c0)) THEN rt0.c2 COLLATE BINARY WHEN (rt0.c1 IN ()) THEN ((rt0.c1)>(rt0.c0)) WHEN CASE 0.06713383553514196  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END END) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0;
SELECT ALL rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0 HAVING MIN((((AVG(rt0.c1)))<((rt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0 HAVING (NOT (MIN((((AVG(rt0.c1)))<((rt0.c0)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0 HAVING ((MIN((((AVG(rt0.c1)))<((rt0.c0))))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (CAST(CASE WHEN 0.9689792338028705 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS NUMERIC)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (CAST(CASE WHEN 0.9689792338028705 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS NUMERIC)))) UNION ALL SELECT ALL * FROM v0 WHERE (((CAST(CASE WHEN 0.9689792338028705 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS NUMERIC)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((((rt0.c2)+(rt0.c1)))) AND ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((((rt0.c2)+(rt0.c1)))) AND ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((((rt0.c2)+(rt0.c1)))) AND ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((((rt0.c2)+(rt0.c1)))) AND ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) WHERE (((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((((rt0.c2)+(rt0.c1)))) AND ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)GLOB(CAST(rt0.c0 AS NUMERIC)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE BINARY)GLOB(CAST(rt0.c0 AS NUMERIC)))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY)GLOB(CAST(rt0.c0 AS NUMERIC)))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c2, rt0.c0 HAVING GROUP_CONCAT(SUM(MIN(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(SUM(MIN(GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(SUM(MIN(GROUP_CONCAT(COUNT(*)))))) ISNULL);
SELECT ALL rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE ((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))<>((((rt0.c2) IS FALSE))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))!=((((rt0.c2) IS FALSE))))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))<>((((rt0.c2) IS FALSE))))) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((~ (LIKELY(v0.c0)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((~ (LIKELY(v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((~ (LIKELY(v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((((((rt0.c0)IS(rt0.c0)))AND((((rt0.c0))>=(('fgf홬'))))))AND((((rt0.c0))<=(('')))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c0)IS(rt0.c0)))AND((((rt0.c0))>=(('fgf홬'))))))AND((((rt0.c0))<=(('')))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((((((rt0.c0)IS(rt0.c0)))AND((((rt0.c0))>=(('fgf홬'))))))AND((((rt0.c0))<=(('')))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING MIN((+ (GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING (NOT (MIN((+ (GROUP_CONCAT(rt0.c1)))))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING ((MIN((+ (GROUP_CONCAT(rt0.c1))))) ISNULL);
SELECT ALL * FROM rt0 INNER JOIN v0 ON (((rt0.c1)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)));
SELECT * FROM rt0 INNER JOIN v0 ON (((rt0.c1)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END))) WHERE (LTRIM(rt0.c2, rt0.c0) COLLATE BINARY) UNION ALL SELECT ALL * FROM rt0 INNER JOIN v0 ON (((rt0.c1)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END))) WHERE ((NOT (LTRIM(rt0.c2, rt0.c0) COLLATE BINARY))) UNION ALL SELECT * FROM rt0 INNER JOIN v0 ON (((rt0.c1)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END))) WHERE (((LTRIM(rt0.c2, rt0.c0) COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt0 INNER JOIN v0 ON (((rt0.c1)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE 0.009514252305634519  WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN ((x'') IS FALSE) WHEN '613478436' THEN 'v.' WHEN CASE WHEN 0.29565179068073755 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)<=(v0.c0)) END) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE 0.009514252305634519  WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN ((x'') IS FALSE) WHEN '613478436' THEN 'v.' WHEN CASE WHEN 0.29565179068073755 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)<=(v0.c0)) END))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE 0.009514252305634519  WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN ((x'') IS FALSE) WHEN '613478436' THEN 'v.' WHEN CASE WHEN 0.29565179068073755 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)<=(v0.c0)) END) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c1;
SELECT v0.c0, rt0.c1 FROM v0, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND ((((rt0.c0))<((rt0.c2)))))) GROUP BY v0.c0, rt0.c1 UNION SELECT v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND ((((rt0.c0))<((rt0.c2)))))))) GROUP BY v0.c0, rt0.c1 UNION SELECT v0.c0, rt0.c1 FROM v0, rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND ((((rt0.c0))<((rt0.c2)))))) ISNULL)) GROUP BY v0.c0, rt0.c1;
SELECT ALL v0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((((v0.c0) IS TRUE))LIKE((((rt0.c2))>((rt0.c0))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((((v0.c0) IS TRUE))LIKE((((rt0.c2))>((rt0.c0))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0 HAVING ((((rt0.c1) IS FALSE))LIKE(MAX(MAX(COUNT(COUNT(rt0.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((((v0.c0) IS TRUE))LIKE((((rt0.c2))>((rt0.c0))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0 HAVING (NOT (((((rt0.c1) IS FALSE))LIKE(MAX(MAX(COUNT(COUNT(rt0.c0)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((((v0.c0) IS TRUE))LIKE((((rt0.c2))>((rt0.c0))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0 HAVING ((((((rt0.c1) IS FALSE))LIKE(MAX(MAX(COUNT(COUNT(rt0.c0))))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c0) NOT NULL)  WHEN (rt0.c2 IN ()) THEN '' WHEN CASE rt0.c1  WHEN rt0.c1 THEN 0.5431527525389366 END THEN ((rt0.c1)>>(rt0.c0)) WHEN ((rt0.c0)<<(0.25397256465395135)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END WHEN ((rt0.c2)||(rt0.c1)) THEN ((rt0.c2)<>(rt0.c2)) WHEN LIKE(rt0.c2, rt0.c0, 'I') THEN CAST(rt0.c1 AS BLOB) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE ((rt0.c0) NOT NULL)  WHEN (rt0.c2 IN ()) THEN '' WHEN CASE rt0.c1  WHEN rt0.c1 THEN 0.5431527525389366 END THEN ((rt0.c1)>>(rt0.c0)) WHEN ((rt0.c0)<<(0.25397256465395135)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END WHEN ((rt0.c2)||(rt0.c1)) THEN ((rt0.c2)<>(rt0.c2)) WHEN LIKE(rt0.c2, rt0.c0, 'I') THEN CAST(rt0.c1 AS BLOB) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE ((rt0.c0) NOT NULL)  WHEN (rt0.c2 IN ()) THEN '' WHEN CASE rt0.c1  WHEN rt0.c1 THEN 0.5431527525389366 END THEN ((rt0.c1)>>(rt0.c0)) WHEN ((rt0.c0)<<(0.25397256465395135)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END WHEN ((rt0.c2)||(rt0.c1)) THEN ((rt0.c2)!=(rt0.c2)) WHEN LIKE(rt0.c2, rt0.c0, 'I') THEN CAST(rt0.c1 AS BLOB) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((~ ((rt0.c2 IN ())))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((~ ((rt0.c2 IN ())))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((~ ((rt0.c2 IN ())))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0;
SELECT ALL rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 WHERE (((((rt0.c2)<(v0.c0)))IS((rt0.c1 IN (rt0.c2))))) GROUP BY rt0.c0, rt0.c2, v0.c0 UNION SELECT rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((NOT (((((rt0.c2)<(v0.c0)))IS((rt0.c1 IN (rt0.c2))))))) GROUP BY rt0.c0, rt0.c2, v0.c0 UNION SELECT rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 WHERE (((((((rt0.c2)<(v0.c0)))IS((rt0.c1 IN (rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(x'') UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(x''))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(x'')) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(x'') UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(x''))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(x'')) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0 NATURAL JOIN rt0;
SELECT v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0 NATURAL JOIN rt0 WHERE ((((COALESCE(DISTINCT v0.c0, v0.c0)))>=((((((0.8946407929358937)OR(rt0.c2)))OR(v0.c0)))))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0 NATURAL JOIN rt0 WHERE ((NOT ((((COALESCE(DISTINCT v0.c0, v0.c0)))>=((((((0.8946407929358937)OR(rt0.c2)))OR(v0.c0)))))))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0 NATURAL JOIN rt0 WHERE ((((((COALESCE(DISTINCT v0.c0, v0.c0)))>=((((((0.8946407929358937)OR(rt0.c2)))OR(v0.c0)))))) ISNULL));
SELECT v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM v0, rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM v0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM v0, rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, v0 WHERE (CAST(((rt0.c1) ISNULL) AS REAL)) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (CAST(((rt0.c1) ISNULL) AS REAL)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0, v0 WHERE (((CAST(((rt0.c1) ISNULL) AS REAL)) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((COUNT(*)))>((TOTAL(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((COUNT(*)))>((TOTAL(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((COUNT(*)))>((TOTAL(v0.c0))))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((COUNT(*)))>((TOTAL(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((COUNT(*)))>((TOTAL(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((COUNT(*)))>((TOTAL(v0.c0))))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (SQLITE_COMPILEOPTION_USED(((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (SQLITE_COMPILEOPTION_USED(((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))))) UNION ALL SELECT * FROM rt0, v0 WHERE (((SQLITE_COMPILEOPTION_USED(((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0)+(v0.c0)), LOWER(v0.c0), CAST(v0.c0 AS NUMERIC)))>((CASE x''  WHEN v0.c0 THEN v0.c0 END, v0.c0, v0.c0)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0)+(v0.c0)), LOWER(v0.c0), CAST(v0.c0 AS NUMERIC)))>((CASE x''  WHEN v0.c0 THEN v0.c0 END, v0.c0, v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((((v0.c0)+(v0.c0)), LOWER(v0.c0), CAST(v0.c0 AS NUMERIC)))>((CASE x''  WHEN v0.c0 THEN v0.c0 END, v0.c0, v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) IS FALSE)) IS FALSE)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) IS FALSE)) IS FALSE)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0) IS FALSE)) IS FALSE)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(AVG(MAX(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(AVG(MAX(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(AVG(MAX(v0.c0)))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((((~ (v0.c0)))GLOB(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((~ (v0.c0)))GLOB(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((~ (v0.c0)))GLOB(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0, rt0.c2 FROM rt0 INNER JOIN v0 ON (((v0.c0 IN ()))>=((+ (rt0.c0))));
SELECT DISTINCT v0.c0, rt0.c2 FROM rt0 INNER JOIN v0 ON (((v0.c0 IN ()))>=((+ (rt0.c0)))) WHERE (TYPEOF(DISTINCT ((((rt0.c1)OR(rt0.c1)))OR(v0.c0)))) UNION SELECT DISTINCT v0.c0, rt0.c2 FROM rt0 INNER JOIN v0 ON (((v0.c0 IN ()))>=((+ (rt0.c0)))) WHERE ((NOT (TYPEOF(DISTINCT ((((rt0.c1)OR(rt0.c1)))OR(v0.c0)))))) UNION SELECT DISTINCT v0.c0, rt0.c2 FROM rt0 INNER JOIN v0 ON (((v0.c0 IN ()))>=((+ (rt0.c0)))) WHERE (((TYPEOF(DISTINCT ((((rt0.c1)OR(rt0.c1)))OR(v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c2 FROM rt0 INNER JOIN v0 ON (((v0.c0 IN ()))>=((+ (rt0.c0))));
SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 WHERE (TRIM((rt0.c0 IN ()))) GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 WHERE ((NOT (TRIM((rt0.c0 IN ()))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 WHERE (((TRIM((rt0.c0 IN ()))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0;
SELECT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2 HAVING ((v0.c0)%(COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2 HAVING (NOT (((v0.c0)%(COUNT(*))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2 HAVING ((((v0.c0)%(COUNT(*)))) ISNULL);
SELECT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2 HAVING ((v0.c0)%(COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2 HAVING (NOT (((v0.c0)%(COUNT(*))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2 HAVING ((((v0.c0)%(COUNT(*)))) ISNULL);
SELECT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (LOWER(CAST(0.37886833499559847 AS BLOB))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (LOWER(CAST(0.37886833499559847 AS BLOB))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((LOWER(CAST(0.37886833499559847 AS BLOB))) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM v0 NOT INDEXED INNER JOIN rt0 ON ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))) IS FALSE);
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))) IS FALSE) WHERE (((rt0.c2 IN (rt0.c2)) IN ())) UNION SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))) IS FALSE) WHERE ((NOT (((rt0.c2 IN (rt0.c2)) IN ())))) UNION SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))) IS FALSE) WHERE (((((rt0.c2 IN (rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT * FROM v0 NOT INDEXED INNER JOIN rt0 ON ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))) IS FALSE);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (x'0601') GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (x'0601'))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((x'0601') ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2 HAVING TOTAL(MIN(v0.c0)) UNION ALL SELECT v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2 HAVING (NOT (TOTAL(MIN(v0.c0)))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2 HAVING ((TOTAL(MIN(v0.c0))) ISNULL);
SELECT SUM(0xffffffff8a240857) FROM rt0 ORDER BY 0.5726865707583494 COLLATE BINARY;
SELECT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((0.4083675192356683) IS FALSE))>=((((''))<((rt0.c1)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((0.4083675192356683) IS FALSE))>=((((''))<((rt0.c1)))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((((((0.4083675192356683) IS FALSE))>=((((''))<((rt0.c1)))))) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((CAST(v0.c0 AS NUMERIC)))<>(((((v0.c0, x'', v0.c0))==((v0.c0, v0.c0, v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((CAST(v0.c0 AS NUMERIC)))!=(((((v0.c0, x'', v0.c0))=((v0.c0, v0.c0, v0.c0))))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((CAST(v0.c0 AS NUMERIC)))<>(((((v0.c0, x'', v0.c0))==((v0.c0, v0.c0, v0.c0))))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, rt0 WHERE (((((((((((rt0.c2)<=(rt0.c0)))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((rt0.c1) ISNULL))))AND(TRIM(v0.c0))))AND(((((v0.c0)OR(rt0.c0)))OR(v0.c0))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM v0, rt0 WHERE ((NOT (((((((((((rt0.c2)<=(rt0.c0)))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((rt0.c1) ISNULL))))AND(TRIM(v0.c0))))AND(((((v0.c0)OR(rt0.c0)))OR(v0.c0))))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM v0, rt0 WHERE (((((((((((((rt0.c2)<=(rt0.c0)))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((rt0.c1) ISNULL))))AND(TRIM(v0.c0))))AND(((((v0.c0)OR(rt0.c0)))OR(v0.c0))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((((COUNT(*), x'', COUNT('28000838')))>((rt0.c2, rt0.c0, rt0.c1))))OR(MAX(SUM(TOTAL(GROUP_CONCAT(rt0.c1)))))))AND(0x66c85e3c)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((((((((COUNT(*), x'', COUNT('28000838')))>((rt0.c2, rt0.c0, rt0.c1))))OR(MAX(SUM(TOTAL(GROUP_CONCAT(rt0.c1)))))))AND(0x66c85e3c)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((((((COUNT(*), x'', COUNT('28000838')))>((rt0.c2, rt0.c0, rt0.c1))))OR(MAX(SUM(TOTAL(GROUP_CONCAT(rt0.c1)))))))AND(0x66c85e3c))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (x'') UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (x''))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((x'') ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM rt0 CROSS JOIN v0 ON (~ (0x489f32fd));
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM rt0 CROSS JOIN v0 ON (~ (0X489f32fd)) WHERE (((((CAST(v0.c0 AS INTEGER))OR(((rt0.c1)-(rt0.c1)))))OR((rt0.c0 IN ())))) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM rt0 CROSS JOIN v0 ON (~ (0x489f32fd)) WHERE ((NOT (((((CAST(v0.c0 AS INTEGER))OR(((rt0.c1)-(rt0.c1)))))OR((rt0.c0 IN ())))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM rt0 CROSS JOIN v0 ON (~ (0x489f32fd)) WHERE (((((((CAST(v0.c0 AS INTEGER))OR(((rt0.c1)-(rt0.c1)))))OR((rt0.c0 IN ())))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM rt0 CROSS JOIN v0 ON (~ (0x489f32fd));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((TRIM(v0.c0, v0.c0))%(TYPEOF(DISTINCT v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((TRIM(v0.c0, v0.c0))%(TYPEOF(DISTINCT v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((TRIM(v0.c0, v0.c0))%(TYPEOF(DISTINCT v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0, v0 NOT INDEXED GROUP BY v0.c0 HAVING (MAX(MAX(MIN(GROUP_CONCAT(rt0.c1)))) IN (TOTAL(rt0.c2), (((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) UNION ALL SELECT v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING (NOT ((MAX(MAX(MIN(GROUP_CONCAT(rt0.c1)))) IN (TOTAL(rt0.c2), (((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))) UNION ALL SELECT v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING (((MAX(MAX(MIN(GROUP_CONCAT(rt0.c1)))) IN (TOTAL(rt0.c2), (((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c2 COLLATE BINARY))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((NOT (rt0.c2 COLLATE BINARY))))) UNION ALL SELECT * FROM rt0 WHERE ((((NOT (rt0.c2 COLLATE BINARY))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((((rt0.c1)OR(v0.c0)))AND(rt0.c1))) NOT NULL)) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((((rt0.c1)OR(v0.c0)))AND(rt0.c1))) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((((rt0.c1)OR(v0.c0)))AND(rt0.c1))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((x'e74d') NOT NULL)) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((x'e74d') NOT NULL)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((x'e74d') NOT NULL)) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING LIKELIHOOD(SUM(TOTAL(x'')), 0.35689537089283363) UNION ALL SELECT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING (NOT (LIKELIHOOD(SUM(TOTAL(x'')), 0.35689537089283363))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING ((LIKELIHOOD(SUM(TOTAL(x'')), 0.35689537089283363)) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 WHERE (SQLITE_VERSION()) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 WHERE ((NOT (SQLITE_VERSION()))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 WHERE (((SQLITE_VERSION()) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c1, v0.c0, rt0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c1, v0.c0, rt0.c0 FROM rt0, v0 WHERE (((rt0.c1)|(((v0.c0) NOT NULL)))) UNION SELECT DISTINCT rt0.c1, v0.c0, rt0.c0 FROM rt0, v0 WHERE ((NOT (((rt0.c1)|(((v0.c0) NOT NULL)))))) UNION SELECT DISTINCT rt0.c1, v0.c0, rt0.c0 FROM rt0, v0 WHERE (((((rt0.c1)|(((v0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0, rt0.c0 FROM rt0, v0;
SELECT v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt0 WHERE ((rt0.c0 COLLATE NOCASE IN ())) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, rt0 WHERE ((NOT ((rt0.c0 COLLATE NOCASE IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, rt0 WHERE ((((rt0.c0 COLLATE NOCASE IN ())) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING MAX(CASE rt0.c2  WHEN MAX(AVG(SUM('-1516224332'))) THEN x'' ELSE GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(MAX(rt0.c1)))) END) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MAX(CASE rt0.c2  WHEN MAX(AVG(SUM('-1516224332'))) THEN x'' ELSE GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(MAX(rt0.c1)))) END))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((MAX(CASE rt0.c2  WHEN MAX(AVG(SUM('-1516224332'))) THEN x'' ELSE GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(MAX(rt0.c1)))) END)) ISNULL);
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (LOWER(DISTINCT ((rt0.c0)IS(v0.c0)))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (LOWER(DISTINCT ((rt0.c0)IS(v0.c0)))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((LOWER(DISTINCT ((rt0.c0)IS(v0.c0)))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON CAST((NOT (rt0.c1)) AS BLOB);
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON CAST((NOT (rt0.c1)) AS BLOB) WHERE ((~ (v0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON CAST((NOT (rt0.c1)) AS BLOB) WHERE ((NOT ((~ (v0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON CAST((NOT (rt0.c1)) AS BLOB) WHERE ((((~ (v0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON CAST((NOT (rt0.c1)) AS BLOB);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN ((((v0.c0))<=((v0.c0)))) AND ((v0.c0 IN (v0.c0, v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN ((((v0.c0))<=((v0.c0)))) AND ((v0.c0 IN (v0.c0, v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN ((((v0.c0))<=((v0.c0)))) AND ((v0.c0 IN (v0.c0, v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((MAX(AVG(v0.c0)))/(COUNT(*))))<<(COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((MAX(AVG(v0.c0)))/(COUNT(*))))<<(COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((MAX(AVG(v0.c0)))/(COUNT(*))))<<(COUNT(*)))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CAST(((v0.c0)>=(v0.c0)) AS REAL)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0)>=(v0.c0)) AS REAL)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CAST(((v0.c0)>=(v0.c0)) AS REAL)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CAST(((rt0.c2) BETWEEN ('-1046688189') AND (rt0.c0)) AS REAL)) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST(((rt0.c2) BETWEEN ('-1046688189') AND (rt0.c0)) AS REAL)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(((rt0.c2) BETWEEN ('-1046688189') AND (rt0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 NOT INDEXED WHERE ((((v0.c0 IN ())) BETWEEN (((v0.c0)%(v0.c0))) AND (((v0.c0)>>(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN ())) BETWEEN (((v0.c0)%(v0.c0))) AND (((v0.c0)>>(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0 IN ())) BETWEEN (((v0.c0)%(v0.c0))) AND (((v0.c0)>>(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c0;
SELECT ALL rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 NOT INDEXED GROUP BY rt0.c1, v0.c0, rt0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT MAX(json((((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2))))) FROM rt0;
SELECT ALL * FROM v0 INNER JOIN rt0 ON ((((((v0.c0)>>(rt0.c2)))OR(((v0.c0) IS FALSE))))AND(((NULL) NOT BETWEEN (0.2550319971006769) AND (rt0.c2))));
SELECT * FROM v0 INNER JOIN rt0 ON ((((((v0.c0)>>(rt0.c2)))OR(((v0.c0) IS FALSE))))AND(((NULL) NOT BETWEEN (0.2550319971006769) AND (rt0.c2)))) WHERE (HEX(((((v0.c0)AND(x'c79e')))AND(rt0.c2)))) UNION ALL SELECT ALL * FROM v0 INNER JOIN rt0 ON ((((((v0.c0)>>(rt0.c2)))OR(((v0.c0) IS FALSE))))AND(((NULL) NOT BETWEEN (0.2550319971006769) AND (rt0.c2)))) WHERE ((NOT (HEX(((((v0.c0)AND(x'c79e')))AND(rt0.c2)))))) UNION ALL SELECT ALL * FROM v0 INNER JOIN rt0 ON ((((((v0.c0)>>(rt0.c2)))OR(((v0.c0) IS FALSE))))AND(((NULL) NOT BETWEEN (0.2550319971006769) AND (rt0.c2)))) WHERE (((HEX(((((v0.c0)AND(x'c79e')))AND(rt0.c2)))) ISNULL));
SELECT ALL * FROM v0 INNER JOIN rt0 ON ((((((v0.c0)>>(rt0.c2)))OR(((v0.c0) IS FALSE))))AND(((NULL) NOT BETWEEN (0.2550319971006769) AND (rt0.c2))));
SELECT DISTINCT v0.c0, rt0.c2 FROM v0, rt0;
SELECT DISTINCT v0.c0, rt0.c2 FROM v0, rt0 WHERE (((((GLOB(rt0.c0, rt0.c2))AND(1993948271)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1))))) UNION SELECT DISTINCT v0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (((((GLOB(rt0.c0, rt0.c2))AND(1993948271)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1))))))) UNION SELECT DISTINCT v0.c0, rt0.c2 FROM v0, rt0 WHERE (((((((GLOB(rt0.c0, rt0.c2))AND(1993948271)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c2 FROM v0, rt0;
SELECT rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2;
SELECT rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 WHERE ((((x'') IS TRUE) IN ())) GROUP BY rt0.c0, v0.c0, rt0.c2 UNION SELECT ALL rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT ((((x'') IS TRUE) IN ())))) GROUP BY rt0.c0, v0.c0, rt0.c2 UNION SELECT rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 WHERE ((((((x'') IS TRUE) IN ())) ISNULL)) GROUP BY rt0.c0, v0.c0, rt0.c2;
SELECT rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2;
SELECT rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING COUNT(CAST(MIN(v0.c0) AS REAL)) UNION ALL SELECT rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(CAST(MIN(v0.c0) AS REAL)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(CAST(MIN(v0.c0) AS REAL))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((((CAST(v0.c0 AS INTEGER)))==((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((CAST(v0.c0 AS INTEGER)))==((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((CAST(v0.c0 AS INTEGER)))=((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((LIKELIHOOD(v0.c0, 0.38067278537773896)) BETWEEN (NULL) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((LIKELIHOOD(v0.c0, 0.38067278537773896)) BETWEEN (NULL) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((LIKELIHOOD(v0.c0, 0.38067278537773896)) BETWEEN (NULL) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0;
SELECT ALL rt0.c2, v0.c0 FROM v0, rt0 WHERE (((((rt0.c2)-(v0.c0)))LIKE((('') ISNULL)))) GROUP BY rt0.c2, v0.c0 UNION SELECT rt0.c2, v0.c0 FROM v0, rt0 WHERE ((NOT (((((rt0.c2)-(v0.c0)))LIKE((('') ISNULL)))))) GROUP BY rt0.c2, v0.c0 UNION SELECT ALL rt0.c2, v0.c0 FROM v0, rt0 WHERE (((((((rt0.c2)-(v0.c0)))LIKE((('') ISNULL)))) ISNULL)) GROUP BY rt0.c2, v0.c0;
SELECT rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING AVG(COUNT(rt0.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (AVG(COUNT(rt0.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((AVG(COUNT(rt0.c0))) ISNULL);
SELECT rt0.c2, rt0.c0, v0.c0 FROM rt0 INNER JOIN v0 ON ((x'' COLLATE NOCASE)<(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END));
SELECT rt0.c2, rt0.c0, v0.c0 FROM rt0 INNER JOIN v0 ON ((x'' COLLATE NOCASE)<(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) WHERE ((+ (CAST(x'' AS INTEGER)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, v0.c0 FROM rt0 INNER JOIN v0 ON ((x'' COLLATE NOCASE)<(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) WHERE ((NOT ((+ (CAST(x'' AS INTEGER)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, v0.c0 FROM rt0 INNER JOIN v0 ON ((x'' COLLATE NOCASE)<(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) WHERE ((((+ (CAST(x'' AS INTEGER)))) ISNULL));
SELECT rt0.c2, rt0.c0, v0.c0 FROM rt0 INNER JOIN v0 ON ((x'' COLLATE NOCASE)<(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOTNULL)) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE NOCASE) NOTNULL)))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((rt0.c2 COLLATE NOCASE) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((('俢''4Sv&8F')OR(v0.c0)))AND(v0.c0)))<<(((v0.c0) NOTNULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((((('俢''4Sv&8F')OR(v0.c0)))AND(v0.c0)))<<(((v0.c0) NOTNULL)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((((('俢''4Sv&8F')OR(v0.c0)))AND(v0.c0)))<<(((v0.c0) NOTNULL)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((MIN(rt0.c2))AND((rt0.c0 IN ()))))OR(((((TOTAL(GROUP_CONCAT(AVG(COUNT(*)))))OR(MIN(GROUP_CONCAT(rt0.c1)))))AND(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((((MIN(rt0.c2))AND((rt0.c0 IN ()))))OR(((((TOTAL(GROUP_CONCAT(AVG(COUNT(*)))))OR(MIN(GROUP_CONCAT(rt0.c1)))))AND(GROUP_CONCAT(COUNT(*)))))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((((MIN(rt0.c2))AND((rt0.c0 IN ()))))OR(((((TOTAL(GROUP_CONCAT(AVG(COUNT(*)))))OR(MIN(GROUP_CONCAT(rt0.c1)))))AND(GROUP_CONCAT(COUNT(*))))))) ISNULL);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((UNLIKELY(DISTINCT x'd6af'))||(json_patch(rt0.c1, NULL)));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((UNLIKELY(DISTINCT x'd6af'))||(json_patch(rt0.c1, NULL))) WHERE (0.5431763014028423) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((UNLIKELY(DISTINCT x'd6af'))||(json_patch(rt0.c1, NULL))) WHERE ((NOT (0.5431763014028423))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((UNLIKELY(DISTINCT x'd6af'))||(json_patch(rt0.c1, NULL))) WHERE (((0.5431763014028423) ISNULL));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((UNLIKELY(DISTINCT x'd6af'))||(json_patch(rt0.c1, NULL)));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON '䇗,';
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON '䇗,' WHERE (((((((x'')) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))), rt0.c2 COLLATE RTRIM, ABS(DISTINCT v0.c0)))!=((((rt0.c1)*(rt0.c2)), (rt0.c0 IN (rt0.c1)), rt0.c2 COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON '䇗,' WHERE ((NOT (((((((x'')) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))), rt0.c2 COLLATE RTRIM, ABS(DISTINCT v0.c0)))!=((((rt0.c1)*(rt0.c2)), (rt0.c0 IN (rt0.c1)), rt0.c2 COLLATE NOCASE)))))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON '䇗,' WHERE (((((((((x'')) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))), rt0.c2 COLLATE RTRIM, ABS(DISTINCT v0.c0)))!=((((rt0.c1)*(rt0.c2)), (rt0.c0 IN (rt0.c1)), rt0.c2 COLLATE NOCASE)))) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON '䇗,';
SELECT ALL v0.c0 FROM rt0 INNER JOIN v0 ON ((((v0.c0)OR(rt0.c1)))<=(((rt0.c2)IS(0.3340529240406742)))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0 INNER JOIN v0 ON ((((v0.c0)OR(rt0.c1)))<=(((rt0.c2)IS(0.3340529240406742)))) WHERE ((((rt0.c1 IN ())) NOT NULL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM rt0 INNER JOIN v0 ON ((((v0.c0)OR(rt0.c1)))<=(((rt0.c2)IS(0.3340529240406742)))) WHERE ((NOT ((((rt0.c1 IN ())) NOT NULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM rt0 INNER JOIN v0 ON ((((v0.c0)OR(rt0.c1)))<=(((rt0.c2)IS(0.3340529240406742)))) WHERE ((((((rt0.c1 IN ())) NOT NULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0 INNER JOIN v0 ON ((((v0.c0)OR(rt0.c1)))<=(((rt0.c2)IS(0.3340529240406742)))) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((MAX(MIN(v0.c0)), MAX(v0.c0), AVG(COUNT(v0.c0))))>=((((v0.c0) ISNULL), (MAX(v0.c0) IN ()), STRFTIME(TOTAL(v0.c0), MIN(MAX(MIN(x''))), v0.c0, AVG(v0.c0), MIN(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((MAX(MIN(v0.c0)), MAX(v0.c0), AVG(COUNT(v0.c0))))>=((((v0.c0) ISNULL), (MAX(v0.c0) IN ()), STRFTIME(TOTAL(v0.c0), MIN(MAX(MIN(x''))), v0.c0, AVG(v0.c0), MIN(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((MAX(MIN(v0.c0)), MAX(v0.c0), AVG(COUNT(v0.c0))))>=((((v0.c0) ISNULL), (MAX(v0.c0) IN ()), STRFTIME(TOTAL(v0.c0), MIN(MAX(MIN(x''))), v0.c0, AVG(v0.c0), MIN(v0.c0)))))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((0.24025228438549873 IN (((v0.c0) IS FALSE), ((v0.c0)>(v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((0.24025228438549873 IN (((v0.c0) IS FALSE), ((v0.c0)>(v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE ((((0.24025228438549873 IN (((v0.c0) IS FALSE), ((v0.c0)>(v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c1 FROM rt0, v0 WHERE (CAST(rt0.c1 AS INTEGER) COLLATE BINARY) UNION SELECT DISTINCT rt0.c1 FROM rt0, v0 WHERE ((NOT (CAST(rt0.c1 AS INTEGER) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1 FROM rt0, v0 WHERE (((CAST(rt0.c1 AS INTEGER) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0, v0;
SELECT rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, v0.c0;
SELECT ALL rt0.c0, v0.c0 FROM v0, rt0 WHERE (((((rt0.c1)-(v0.c0)))LIKE(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))) GROUP BY rt0.c0, v0.c0 UNION SELECT rt0.c0, v0.c0 FROM v0, rt0 WHERE ((NOT (((((rt0.c1)-(v0.c0)))LIKE(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))))) GROUP BY rt0.c0, v0.c0 UNION SELECT rt0.c0, v0.c0 FROM v0, rt0 WHERE (((((((rt0.c1)-(v0.c0)))LIKE(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))) ISNULL)) GROUP BY rt0.c0, v0.c0;
SELECT rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, v0.c0;
SELECT ALL v0.c0, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c0, rt0.c2;
SELECT v0.c0, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT v0.c0, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c0, rt0.c2;
SELECT v0.c0, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT v0.c0, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c0, rt0.c2;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (0.8438390789859362) UNION ALL SELECT * FROM v0 WHERE ((NOT (0.8438390789859362))) UNION ALL SELECT * FROM v0 WHERE (((0.8438390789859362) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (ROUND(((rt0.c1)-(rt0.c1)), x'')) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (ROUND(((rt0.c1)-(rt0.c1)), x'')))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((ROUND(((rt0.c1)-(rt0.c1)), x'')) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((NOT (v0.c0)))=(v0.c0 COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((NOT (v0.c0)))=(v0.c0 COLLATE BINARY))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((NOT (v0.c0)))=(v0.c0 COLLATE BINARY))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1, rt0.c2, v0.c0 FROM rt0, v0;
SELECT ALL rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 WHERE (((((rt0.c2)IS(rt0.c2)))<=(((v0.c0)=(v0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 WHERE ((NOT (((((rt0.c2)IS(rt0.c2)))<=(((v0.c0)==(v0.c0))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 WHERE (((((((rt0.c2)IS(rt0.c2)))<=(((v0.c0)==(v0.c0))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, v0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((NOT ((+ (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((NOT ((+ (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((NOT ((+ (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, v0.c0, rt0.c0 FROM rt0 CROSS JOIN v0 ON (((~ (rt0.c0))) IS TRUE) GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM rt0 CROSS JOIN v0 ON (((~ (rt0.c0))) IS TRUE) WHERE (HEX(((rt0.c1)&(rt0.c2)))) GROUP BY rt0.c2, v0.c0, rt0.c0 UNION SELECT rt0.c2, v0.c0, rt0.c0 FROM rt0 CROSS JOIN v0 ON (((~ (rt0.c0))) IS TRUE) WHERE ((NOT (HEX(((rt0.c1)&(rt0.c2)))))) GROUP BY rt0.c2, v0.c0, rt0.c0 UNION SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM rt0 CROSS JOIN v0 ON (((~ (rt0.c0))) IS TRUE) WHERE (((HEX(((rt0.c1)&(rt0.c2)))) ISNULL)) GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT rt0.c2, v0.c0, rt0.c0 FROM rt0 CROSS JOIN v0 ON (((~ (rt0.c0))) IS TRUE) GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON (((- (v0.c0))) BETWEEN ((((rt0.c1))>((rt0.c0)))) AND ((+ (rt0.c0)))) GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON (((- (v0.c0))) BETWEEN ((((rt0.c1))>((rt0.c0)))) AND ((+ (rt0.c0)))) GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c2 HAVING NULLIF(DISTINCT ((((((((MIN(MIN(COUNT(*))))AND(rt0.c1)))AND(MIN(AVG(rt0.c0)))))OR(rt0.c2)))AND(rt0.c2)), LOWER(TOTAL(SUM(COUNT(*))))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON (((- (v0.c0))) BETWEEN ((((rt0.c1))>((rt0.c0)))) AND ((+ (rt0.c0)))) GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c2 HAVING (NOT (NULLIF(DISTINCT ((((((((MIN(MIN(COUNT(*))))AND(rt0.c1)))AND(MIN(AVG(rt0.c0)))))OR(rt0.c2)))AND(rt0.c2)), LOWER(TOTAL(SUM(COUNT(*))))))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON (((- (v0.c0))) BETWEEN ((((rt0.c1))>((rt0.c0)))) AND ((+ (rt0.c0)))) GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c2 HAVING ((NULLIF(DISTINCT ((((((((MIN(MIN(COUNT(*))))AND(rt0.c1)))AND(MIN(AVG(rt0.c0)))))OR(rt0.c2)))AND(rt0.c2)), LOWER(TOTAL(SUM(COUNT(*)))))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (TRIM(rt0.c1)) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (TRIM(rt0.c1)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((TRIM(rt0.c1)) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((LENGTH(v0.c0)))<((CASE WHEN v0.c0 THEN rt0.c0 END)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((LENGTH(v0.c0)))<((CASE WHEN v0.c0 THEN rt0.c0 END)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((LENGTH(v0.c0)))<((CASE WHEN v0.c0 THEN rt0.c0 END)))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 WHERE (UPPER(DISTINCT v0.c0)) GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT (UPPER(DISTINCT v0.c0)))) GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 WHERE (((UPPER(DISTINCT v0.c0)) ISNULL)) GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2;
SELECT rt0.c2 FROM v0 INNER JOIN rt0 ON '' GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0 INNER JOIN rt0 ON '' GROUP BY rt0.c2 HAVING SUM(MAX(TOTAL(COUNT(MAX(v0.c0))))) UNION ALL SELECT ALL rt0.c2 FROM v0 INNER JOIN rt0 ON '' GROUP BY rt0.c2 HAVING (NOT (SUM(MAX(TOTAL(COUNT(MAX(v0.c0))))))) UNION ALL SELECT ALL rt0.c2 FROM v0 INNER JOIN rt0 ON '' GROUP BY rt0.c2 HAVING ((SUM(MAX(TOTAL(COUNT(MAX(v0.c0)))))) ISNULL);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL) WHERE (CASE (- (v0.c0))  WHEN ((v0.c0)AND(rt0.c2)) THEN (((rt0.c1))<((rt0.c2))) WHEN CASE rt0.c1  WHEN rt0.c0 THEN v0.c0 END THEN ((rt0.c0) ISNULL) WHEN ((((v0.c0)AND('1598628322')))AND(rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) END) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL) WHERE ((NOT (CASE (- (v0.c0))  WHEN ((v0.c0)AND(rt0.c2)) THEN (((rt0.c1))<((rt0.c2))) WHEN CASE rt0.c1  WHEN rt0.c0 THEN v0.c0 END THEN ((rt0.c0) ISNULL) WHEN ((((v0.c0)AND('1598628322')))AND(rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) END))) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL) WHERE (((CASE (- (v0.c0))  WHEN ((v0.c0)AND(rt0.c2)) THEN (((rt0.c1))<((rt0.c2))) WHEN CASE rt0.c1  WHEN rt0.c0 THEN v0.c0 END THEN ((rt0.c0) ISNULL) WHEN ((((v0.c0)AND('1598628322')))AND(rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) END) ISNULL));
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL);
SELECT DISTINCT rt0.c2, rt0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM v0, rt0 WHERE (((((v0.c0)||(rt0.c2))) NOT BETWEEN (((rt0.c0)OR(rt0.c2))) AND (((rt0.c2)=(rt0.c2))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((NOT (((((v0.c0)||(rt0.c2))) NOT BETWEEN (((rt0.c0)OR(rt0.c2))) AND (((rt0.c2)==(rt0.c2))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM v0, rt0 WHERE (((((((v0.c0)||(rt0.c2))) NOT BETWEEN (((rt0.c0)OR(rt0.c2))) AND (((rt0.c2)==(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM v0, rt0;
SELECT rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0;
SELECT rt0.c1, v0.c0 FROM rt0, v0 WHERE (((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM COLLATE NOCASE) GROUP BY rt0.c1, v0.c0 UNION SELECT ALL rt0.c1, v0.c0 FROM rt0, v0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM COLLATE NOCASE))) GROUP BY rt0.c1, v0.c0 UNION SELECT rt0.c1, v0.c0 FROM rt0, v0 WHERE (((((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1, v0.c0;
SELECT rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(SUM(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(SUM(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(SUM(v0.c0))) ISNULL);
SELECT ALL v0.c0, rt0.c2, rt0.c1 FROM rt0, v0;
SELECT v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE (CAST(((rt0.c2) IS FALSE) AS INTEGER)) UNION ALL SELECT v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((NOT (CAST(((rt0.c2) IS FALSE) AS INTEGER)))) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE (((CAST(((rt0.c2) IS FALSE) AS INTEGER)) ISNULL));
SELECT ALL v0.c0, rt0.c2, rt0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c1 FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c1 FROM v0 NATURAL JOIN rt0 WHERE (((SQLITE_SOURCE_ID())LIKE(-675942888))) UNION SELECT DISTINCT rt0.c1 FROM v0 NATURAL JOIN rt0 WHERE ((NOT (((SQLITE_SOURCE_ID())LIKE(-675942888))))) UNION SELECT DISTINCT rt0.c1 FROM v0 NATURAL JOIN rt0 WHERE (((((SQLITE_SOURCE_ID())LIKE(-675942888))) ISNULL));
SELECT DISTINCT rt0.c1 FROM v0 NATURAL JOIN rt0;
SELECT ALL v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c0;
SELECT v0.c0, rt0.c0 FROM v0, rt0 WHERE (CASE ((rt0.c2)>(rt0.c2))  WHEN rt0.c2 THEN CAST('-2097957895' AS REAL) WHEN CAST(rt0.c0 AS TEXT) THEN (+ (rt0.c2)) WHEN '' THEN (- (rt0.c0)) ELSE ((v0.c0)IS(rt0.c2)) END) GROUP BY v0.c0, rt0.c0 UNION SELECT ALL v0.c0, rt0.c0 FROM v0, rt0 WHERE ((NOT (CASE ((rt0.c2)>(rt0.c2))  WHEN rt0.c2 THEN CAST('-2097957895' AS REAL) WHEN CAST(rt0.c0 AS TEXT) THEN (+ (rt0.c2)) WHEN '' THEN (- (rt0.c0)) ELSE ((v0.c0)IS(rt0.c2)) END))) GROUP BY v0.c0, rt0.c0 UNION SELECT ALL v0.c0, rt0.c0 FROM v0, rt0 WHERE (((CASE ((rt0.c2)>(rt0.c2))  WHEN rt0.c2 THEN CAST('-2097957895' AS REAL) WHEN CAST(rt0.c0 AS TEXT) THEN (+ (rt0.c2)) WHEN '' THEN (- (rt0.c0)) ELSE ((v0.c0)IS(rt0.c2)) END) ISNULL)) GROUP BY v0.c0, rt0.c0;
SELECT ALL v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING NULLIF(DISTINCT AVG(SUM(SUM(AVG(rt0.c1)))), SUM(rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (NULLIF(DISTINCT AVG(SUM(SUM(AVG(rt0.c1)))), SUM(rt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((NULLIF(DISTINCT AVG(SUM(SUM(AVG(rt0.c1)))), SUM(rt0.c1))) ISNULL);
SELECT MAX(((((((rt0.c1)*('-310271183')))AND(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)))AND(0.09272498023190523))) FROM rt0, v0;
SELECT ALL rt0.c1 FROM v0 NATURAL JOIN rt0;
SELECT rt0.c1 FROM v0 NATURAL JOIN rt0 WHERE (ABS(rt0.c0)) UNION ALL SELECT rt0.c1 FROM v0 NATURAL JOIN rt0 WHERE ((NOT (ABS(rt0.c0)))) UNION ALL SELECT rt0.c1 FROM v0 NATURAL JOIN rt0 WHERE (((ABS(rt0.c0)) ISNULL));
SELECT ALL rt0.c1 FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c1 FROM v0, rt0 WHERE ((((((+ (rt0.c1)))AND((1.357658443E9 IN (rt0.c0, rt0.c0)))))OR(('' IN ())))) UNION SELECT DISTINCT rt0.c1 FROM v0, rt0 WHERE ((NOT ((((((+ (rt0.c1)))AND((1.357658443E9 IN (rt0.c0, rt0.c0)))))OR(('' IN ())))))) UNION SELECT DISTINCT rt0.c1 FROM v0, rt0 WHERE ((((((((+ (rt0.c1)))AND((1.357658443E9 IN (rt0.c0, rt0.c0)))))OR(('' IN ())))) ISNULL));
SELECT DISTINCT rt0.c1 FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0 IN ()))OR(UPPER(DISTINCT v0.c0))))OR(x'b4b9'))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0 IN ()))OR(UPPER(DISTINCT v0.c0))))OR(x'b4b9'))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((((v0.c0 IN ()))OR(UPPER(DISTINCT v0.c0))))OR(x'b4b9'))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ABS(DISTINCT ((rt0.c0) NOT NULL)) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ABS(DISTINCT ((rt0.c0) NOT NULL)) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING MIN(MAX(TOTAL(v0.c0)), (((COUNT(AVG(MAX(COUNT(*)))), x'945b', rt0.c2, '951043277', COUNT(SUM(rt0.c1)))) BETWEEN ((v0.c0, SUM(AVG(rt0.c2)), v0.c0, rt0.c0, GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(TOTAL(rt0.c2)))))) AND ((v0.c0, v0.c0, rt0.c0, rt0.c1, COUNT(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ABS(DISTINCT ((rt0.c0) NOT NULL)) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING (NOT (MIN(MAX(TOTAL(v0.c0)), (((COUNT(AVG(MAX(COUNT(*)))), x'945b', rt0.c2, '951043277', COUNT(SUM(rt0.c1)))) BETWEEN ((v0.c0, SUM(AVG(rt0.c2)), v0.c0, rt0.c0, GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(TOTAL(rt0.c2)))))) AND ((v0.c0, v0.c0, rt0.c0, rt0.c1, COUNT(rt0.c0))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ABS(DISTINCT ((rt0.c0) NOT NULL)) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING ((MIN(MAX(TOTAL(v0.c0)), (((COUNT(AVG(MAX(COUNT(*)))), x'945b', rt0.c2, '951043277', COUNT(SUM(rt0.c1)))) BETWEEN ((v0.c0, SUM(AVG(rt0.c2)), v0.c0, rt0.c0, GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(TOTAL(rt0.c2)))))) AND ((v0.c0, v0.c0, rt0.c0, rt0.c1, COUNT(rt0.c0)))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (LIKELY(DISTINCT CASE WHEN rt0.c0 THEN rt0.c2 END)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (LIKELY(DISTINCT CASE WHEN rt0.c0 THEN rt0.c2 END)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((LIKELY(DISTINCT CASE WHEN rt0.c0 THEN rt0.c2 END)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE 0.4910352935818795  WHEN '-2039039310' THEN v0.c0 COLLATE RTRIM ELSE (- (v0.c0)) END) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE 0.4910352935818795  WHEN '-2039039310' THEN v0.c0 COLLATE RTRIM ELSE (- (v0.c0)) END))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE 0.4910352935818795  WHEN '-2039039310' THEN v0.c0 COLLATE RTRIM ELSE (- (v0.c0)) END) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0 COLLATE RTRIM) BETWEEN (((v0.c0) IS TRUE)) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE RTRIM) BETWEEN (((v0.c0) IS TRUE)) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE RTRIM) BETWEEN (((v0.c0) IS TRUE)) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN((((v0.c0))<((TOTAL(COUNT(*)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN((((v0.c0))<((TOTAL(COUNT(*)))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN((((v0.c0))<((TOTAL(COUNT(*))))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((- (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(x''))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((- (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(x''))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((- (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(x''))))) ISNULL));
SELECT v0.c0 FROM v0;
