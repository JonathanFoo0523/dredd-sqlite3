-- Time: 2024/06/09 03:44:18
-- Database: database6
-- Database version: 3.40.0
-- seed value: 4098867906
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 1ms;
UPDATE OR FAIL vt0 SET c0=x'', c0='	)c', c0=0.21076434232185393; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
DROP TABLE vt0; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.secure_delete = true; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
INSERT OR FAIL INTO rt1(c0, c2, c1) VALUES ('', NULL, x''), (x'6c78', 0xffffffff899a79f0, '-1986364944'), (0.4412076385622562, 0xffffffffb339b1d9, -1.986364944E9); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c0) VALUES (x''), (COALESCE((('-1288064551') NOTNULL), CAST(-1.986364944E9 AS TEXT))), ('*!72{⹀'); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c2) VALUES ('1791801636', x''), (NULL, '157142950'), (1791801636, -1.288064551E9); -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE rt1 SET c1=NULL; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR FAIL rt1 SET c2='jO', c1=NULL; -- 1ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA temp.cache_size; -- 0ms;
INSERT OR REPLACE INTO rt1(c1, c0) VALUES (x'', '~PPB~U'); -- 0ms;
INSERT OR ABORT INTO rt1(c1, c0) VALUES (NULL, NULL); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA cache_size = 0; -- 0ms;
INSERT OR FAIL INTO rt1(c2) VALUES (-346411456), (0.1891687681053773), (x''); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c0) VALUES (NULL, x'f8ed'); -- 0ms;
PRAGMA temp.default_cache_size; -- 0ms;
END; -- 1ms;
PRAGMA main.journal_mode; -- 0ms;
REINDEX; -- 0ms;
COMMIT; -- 0ms;
REINDEX NOCASE; -- 0ms;
UPDATE OR ROLLBACK rt1 SET c1=x'' WHERE LOWER(DISTINCT ((NULL)%(rt1.c0))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=157142950 unordered noskipscan'); -- 0ms;
UPDATE OR IGNORE rt1 SET (c0)=(x'') WHERE (((((rt1.c1) BETWEEN (rt1.c0) AND ('-1986364944'))))<=(((NOT (rt1.c2))))); -- 1ms;
REINDEX; -- 0ms;
PRAGMA temp.auto_vacuum; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt1(c1) VALUES (0.4747536482235549); -- 0ms;
UPDATE OR IGNORE rt1 SET c1='-1986364944' WHERE ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END) NOT BETWEEN (CASE NULL  WHEN rt1.c2 THEN rt1.c0 ELSE 0.4747536482235549 END) AND (rt1.c0 COLLATE RTRIM)); -- 1ms;
ANALYZE; -- 0ms;
INSERT OR REPLACE INTO rt1(c1, c0) VALUES (NULL, NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c2=0X95dcfa6 WHERE ((((rt1.c2) NOT NULL)) BETWEEN (((((((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c0))) AND (MIN(NULL, rt1.c1, rt1.c0, rt1.c1))); -- 1ms;
PRAGMA main.soft_heap_limit = 4308803942363892519; -- 1ms;
PRAGMA main.legacy_file_format; -- 0ms;
PRAGMA busy_timeout = 10000; -- 0ms;
UPDATE OR IGNORE rt1 SET c2=0.24675958641818563, c2=0.6387970479317224 WHERE (((rt1.c0) IS TRUE) IN ()); -- 0ms;
END; -- 0ms;
PRAGMA main.ignore_check_constraints; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
UPDATE OR IGNORE rt1 SET c0='뇙'; -- 0ms;
PRAGMA temp.default_cache_size = -978638236; -- 1ms;
UPDATE OR IGNORE rt1 SET (c0)=(''); -- 1ms;
REINDEX BINARY; -- 0ms;
PRAGMA main.recursive_triggers = false; -- 0ms;
REINDEX  rt1; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA cache_spill; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR ABORT INTO rt1 VALUES (0.5488241591009408, '-346411456', 0Xffffffff8be078f9); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c2, c1) VALUES (NULL, x''); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1 UNINDEXED, prefix=760); -- 1ms;
INSERT OR ROLLBACK INTO rt1(c1) VALUES (x''), (x''), (848365610); -- 1ms;
INSERT OR FAIL INTO rt1(c0) VALUES (0.7019115276635772); -- 1ms;
INSERT OR ROLLBACK INTO rt1(c2, c1) VALUES (NULL, ''); -- 0ms;
PRAGMA main.secure_delete = true; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c2=0.8005812004553817, c2=0.798637727661293, c0='324716724'; -- 0ms;
UPDATE OR IGNORE rt1 SET (c1)=(''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS REAL))<<(0.7019115276635772)); -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 TEXT ); -- 0ms;
CREATE INDEX IF NOT EXISTS i31 ON t0(((CAST(c0 AS TEXT)) NOT BETWEEN (CASE WHEN c0 THEN c0 WHEN c0 THEN c0 WHEN c0 THEN c0 ELSE c0 END) AND (CAST(c0 AS BLOB)))) WHERE (((c0)) BETWEEN (((- (0xffffffffb339b1d9)))) AND ((CAST(c0 AS INTEGER)))); -- 0ms;
END TRANSACTION; -- 0ms;
CREATE INDEX i98 ON t0((((0.7458828364709004))<=((((((c0)OR(c0)))AND(c0))))) COLLATE NOCASE DESC) WHERE (- (load_extension(c0))); -- 0ms;
CREATE INDEX IF NOT EXISTS i66 ON t0(x'0d96'); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c0, c1) VALUES ('~PPB~U', x''); -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.9934377719181503); -- 1ms;
UPDATE OR IGNORE t0 SET c0=NULL, c0='MOu貟\rXA', c0=NULL; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN 617758939 WHEN rt1.c0 THEN rt1.c1 END) NOT BETWEEN (((rt1.c2)==(rt1.c0))) AND (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN 617758939 WHEN rt1.c0 THEN rt1.c1 END) NOT BETWEEN (((rt1.c2)==(rt1.c0))) AND (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN 617758939 WHEN rt1.c0 THEN rt1.c1 END) NOT BETWEEN (((rt1.c2)=(rt1.c0))) AND (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (CASE CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END  WHEN rt1.c0 THEN x'' COLLATE BINARY WHEN ((rt1.c1) NOT NULL) THEN UNLIKELY(rt1.c2) WHEN CAST(rt1.c1 AS REAL) THEN ((rt1.c1) BETWEEN (NULL) AND (rt1.c1)) ELSE rt1.c1 END) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (CASE CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END  WHEN rt1.c0 THEN x'' COLLATE BINARY WHEN ((rt1.c1) NOT NULL) THEN UNLIKELY(rt1.c2) WHEN CAST(rt1.c1 AS REAL) THEN ((rt1.c1) BETWEEN (NULL) AND (rt1.c1)) ELSE rt1.c1 END))) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (((CASE CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END  WHEN rt1.c0 THEN x'' COLLATE BINARY WHEN ((rt1.c1) NOT NULL) THEN UNLIKELY(rt1.c2) WHEN CAST(rt1.c1 AS REAL) THEN ((rt1.c1) BETWEEN (NULL) AND (rt1.c1)) ELSE rt1.c1 END) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT ALL rt1.c1, rt1.c0 FROM t0 RIGHT OUTER JOIN rt1 ON NULL GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM t0 RIGHT OUTER JOIN rt1 ON NULL WHERE (((((((rt1.c2)AND(rt1.c1)))OR(rt1.c0)))+(((rt1.c1) BETWEEN (rt1.c1) AND (t0.c0))))) GROUP BY rt1.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c0 FROM t0 RIGHT OUTER JOIN rt1 ON NULL WHERE ((NOT (((((((rt1.c2)AND(rt1.c1)))OR(rt1.c0)))+(((rt1.c1) BETWEEN (rt1.c1) AND (t0.c0))))))) GROUP BY rt1.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c0 FROM t0 RIGHT OUTER JOIN rt1 ON NULL WHERE (((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c0)))+(((rt1.c1) BETWEEN (rt1.c1) AND (t0.c0))))) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM t0 RIGHT OUTER JOIN rt1 ON NULL GROUP BY rt1.c1, rt1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((t0.c0))<=((t0.c0)))) IS FALSE) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((((t0.c0))<=((t0.c0)))) IS FALSE))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((((t0.c0))<=((t0.c0)))) IS FALSE)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((t0.c0))<=((t0.c0)))) IS FALSE) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((((t0.c0))<=((t0.c0)))) IS FALSE))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((((t0.c0))<=((t0.c0)))) IS FALSE)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t0, rt1;
SELECT * FROM t0, rt1 WHERE (((((((((CASE rt1.c0  WHEN t0.c0 THEN 0.646585756107312 WHEN t0.c0 THEN rt1.c0 WHEN t0.c0 THEN rt1.c0 ELSE t0.c0 END)OR((((rt1.c2))!=((rt1.c0))))))OR(((rt1.c0) NOT NULL))))AND(CASE WHEN rt1.c0 THEN NULL ELSE rt1.c2 END)))OR(TYPEOF(rt1.c1)))) ORDER BY rt1.c0  NULLS LAST, ((((((((((rt1.c0)AND(0Xffffffffb339b1d9)))AND(t0.c0)))AND(rt1.c1)))AND(rt1.c0))) NOT BETWEEN (((x'')GLOB(x''))) AND (((rt1.c2)||(t0.c0)))) ASC, NULL  NULLS FIRST, IFNULL(ABS(DISTINCT rt1.c2), '&nx8^튡lX') ASC;
SELECT * FROM t0, rt1 WHERE ((NOT (((((((((CASE rt1.c0  WHEN t0.c0 THEN 0.646585756107312 WHEN t0.c0 THEN rt1.c0 WHEN t0.c0 THEN rt1.c0 ELSE t0.c0 END)OR((((rt1.c2))<>((rt1.c0))))))OR(((rt1.c0) NOT NULL))))AND(CASE WHEN rt1.c0 THEN NULL ELSE rt1.c2 END)))OR(TYPEOF(rt1.c1)))))) ORDER BY rt1.c0  NULLS LAST, ((((((((((rt1.c0)AND(0xffffffffb339b1d9)))AND(t0.c0)))AND(rt1.c1)))AND(rt1.c0))) NOT BETWEEN (((x'')GLOB(x''))) AND (((rt1.c2)||(t0.c0)))) ASC, NULL  NULLS FIRST, IFNULL(ABS(DISTINCT rt1.c2), '&nx8^튡lX') ASC;
SELECT * FROM t0, rt1 WHERE (((((((((((CASE rt1.c0  WHEN t0.c0 THEN 0.646585756107312 WHEN t0.c0 THEN rt1.c0 WHEN t0.c0 THEN rt1.c0 ELSE t0.c0 END)OR((((rt1.c2))<>((rt1.c0))))))OR(((rt1.c0) NOT NULL))))AND(CASE WHEN rt1.c0 THEN NULL ELSE rt1.c2 END)))OR(TYPEOF(rt1.c1)))) ISNULL)) ORDER BY rt1.c0  NULLS LAST, ((((((((((rt1.c0)AND(0Xffffffffb339b1d9)))AND(t0.c0)))AND(rt1.c1)))AND(rt1.c0))) NOT BETWEEN (((x'')GLOB(x''))) AND (((rt1.c2)||(t0.c0)))) ASC, NULL  NULLS FIRST, IFNULL(ABS(DISTINCT rt1.c2), '&nx8^튡lX') ASC;
SELECT * FROM t0, rt1;
SELECT DISTINCT rt1.c1, t0.c0, rt1.c2, rt1.c0 FROM rt1, t0;
SELECT DISTINCT rt1.c1, t0.c0, rt1.c2, rt1.c0 FROM rt1, t0 WHERE ((rt1.c2 IN ())) UNION SELECT DISTINCT rt1.c1, t0.c0, rt1.c2, rt1.c0 FROM rt1, t0 WHERE ((NOT ((rt1.c2 IN ())))) UNION SELECT DISTINCT rt1.c1, t0.c0, rt1.c2, rt1.c0 FROM rt1, t0 WHERE ((((rt1.c2 IN ())) ISNULL));
SELECT DISTINCT rt1.c1, t0.c0, rt1.c2, rt1.c0 FROM rt1, t0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1 WHERE (HEX(((((t0.c0)AND(rt1.c1)))AND(rt1.c1)))) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1 WHERE ((NOT (HEX(((((t0.c0)AND(rt1.c1)))AND(rt1.c1)))))) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1 WHERE (((HEX(((((t0.c0)AND(rt1.c1)))AND(rt1.c1)))) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING COUNT(MAX(AVG(rt1.c1))) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING (NOT (COUNT(MAX(AVG(rt1.c1))))) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING ((COUNT(MAX(AVG(rt1.c1)))) ISNULL);
SELECT ALL * FROM t0, rt1;
SELECT * FROM t0, rt1 WHERE (LIKE(x'', ((rt1.c2)>(rt1.c0)), '^')) UNION ALL SELECT ALL * FROM t0, rt1 WHERE ((NOT (LIKE(x'', ((rt1.c2)>(rt1.c0)), '^')))) UNION ALL SELECT ALL * FROM t0, rt1 WHERE (((LIKE(x'', ((rt1.c2)>(rt1.c0)), '^')) ISNULL));
SELECT ALL * FROM t0, rt1;
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE (NULL) UNION SELECT DISTINCT * FROM rt1 NOT INDEXED, t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((rt1.c0 COLLATE RTRIM IN ())) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT ((rt1.c0 COLLATE RTRIM IN ())))) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((((rt1.c0 COLLATE RTRIM IN ())) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING UPPER(((AVG(-1580260607))<<(GROUP_CONCAT(MAX(rt1.c1))))) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (UPPER(((AVG(-1580260607))<<(GROUP_CONCAT(MAX(rt1.c1))))))) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((UPPER(((AVG(-1580260607))<<(GROUP_CONCAT(MAX(rt1.c1)))))) ISNULL);
SELECT * FROM rt1, t0;
SELECT ALL * FROM rt1, t0 WHERE ('') UNION ALL SELECT * FROM rt1, t0 WHERE ((NOT (''))) UNION ALL SELECT ALL * FROM rt1, t0 WHERE ((('') ISNULL));
SELECT * FROM rt1, t0;
SELECT DISTINCT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0;
SELECT DISTINCT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0 WHERE (NULL) UNION SELECT DISTINCT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 WHERE (rt1.c2) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE ((NOT (rt1.c2))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE (((rt1.c2) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1, t0.c0 FROM rt1 INNER JOIN t0 ON ((x'') BETWEEN (((((((((rt1.c1)AND(rt1.c2)))OR(t0.c0)))OR(rt1.c1)))AND(rt1.c0))) AND (((rt1.c1) NOT NULL))) GROUP BY rt1.c2, rt1.c0, rt1.c1, t0.c0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1, t0.c0 FROM rt1 INNER JOIN t0 ON ((x'') BETWEEN (((((((((rt1.c1)AND(rt1.c2)))OR(t0.c0)))OR(rt1.c1)))AND(rt1.c0))) AND (((rt1.c1) NOT NULL))) GROUP BY rt1.c2, rt1.c0, rt1.c1, t0.c0 HAVING ((COUNT(*))+(rt1.c0)) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1, t0.c0 FROM rt1 INNER JOIN t0 ON ((x'') BETWEEN (((((((((rt1.c1)AND(rt1.c2)))OR(t0.c0)))OR(rt1.c1)))AND(rt1.c0))) AND (((rt1.c1) NOT NULL))) GROUP BY rt1.c2, rt1.c0, rt1.c1, t0.c0 HAVING (NOT (((COUNT(*))+(rt1.c0)))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1, t0.c0 FROM rt1 INNER JOIN t0 ON ((x'') BETWEEN (((((((((rt1.c1)AND(rt1.c2)))OR(t0.c0)))OR(rt1.c1)))AND(rt1.c0))) AND (((rt1.c1) NOT NULL))) GROUP BY rt1.c2, rt1.c0, rt1.c1, t0.c0 HAVING ((((COUNT(*))+(rt1.c0))) ISNULL);
SELECT rt1.c2, rt1.c0, rt1.c1, t0.c0 FROM rt1 INNER JOIN t0 ON ((x'') BETWEEN (((((((((rt1.c1)AND(rt1.c2)))OR(t0.c0)))OR(rt1.c1)))AND(rt1.c0))) AND (((rt1.c1) NOT NULL))) GROUP BY rt1.c2, rt1.c0, rt1.c1, t0.c0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1, t0.c0 FROM rt1 INNER JOIN t0 ON ((x'') BETWEEN (((((((((rt1.c1)AND(rt1.c2)))OR(t0.c0)))OR(rt1.c1)))AND(rt1.c0))) AND (((rt1.c1) NOT NULL))) GROUP BY rt1.c2, rt1.c0, rt1.c1, t0.c0 HAVING ((COUNT(*))+(rt1.c0)) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1, t0.c0 FROM rt1 INNER JOIN t0 ON ((x'') BETWEEN (((((((((rt1.c1)AND(rt1.c2)))OR(t0.c0)))OR(rt1.c1)))AND(rt1.c0))) AND (((rt1.c1) NOT NULL))) GROUP BY rt1.c2, rt1.c0, rt1.c1, t0.c0 HAVING (NOT (((COUNT(*))+(rt1.c0)))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1, t0.c0 FROM rt1 INNER JOIN t0 ON ((x'') BETWEEN (((((((((rt1.c1)AND(rt1.c2)))OR(t0.c0)))OR(rt1.c1)))AND(rt1.c0))) AND (((rt1.c1) NOT NULL))) GROUP BY rt1.c2, rt1.c0, rt1.c1, t0.c0 HAVING ((((COUNT(*))+(rt1.c0))) ISNULL);
SELECT rt1.c2, rt1.c0, rt1.c1, t0.c0 FROM rt1 INNER JOIN t0 ON ((x'') BETWEEN (((((((((rt1.c1)AND(rt1.c2)))OR(t0.c0)))OR(rt1.c1)))AND(rt1.c0))) AND (((rt1.c1) NOT NULL))) GROUP BY rt1.c2, rt1.c0, rt1.c1, t0.c0;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (((0xffffffffa1cf2301)IS(t0.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((0Xffffffffa1cf2301)IS(t0.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM t0 WHERE (((((0xffffffffa1cf2301)IS(t0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((((rt1.c2 IN ())) IS FALSE)) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT ((((rt1.c2 IN ())) IS FALSE)))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((((((rt1.c2 IN ())) IS FALSE)) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT ALL rt1.c1, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM rt1, t0 WHERE (((((((((((t0.c0)<=(rt1.c0)))AND(rt1.c2 COLLATE RTRIM)))AND(rt1.c1)))OR((0X6e838e3a IN (rt1.c0)))))AND((rt1.c1 IN ())))) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM rt1, t0 WHERE ((NOT (((((((((((t0.c0)<=(rt1.c0)))AND(rt1.c2 COLLATE RTRIM)))AND(rt1.c1)))OR((0X6e838e3a IN (rt1.c0)))))AND((rt1.c1 IN ())))))) GROUP BY rt1.c1, rt1.c2 UNION SELECT rt1.c1, rt1.c2 FROM rt1, t0 WHERE (((((((((((((t0.c0)<=(rt1.c0)))AND(rt1.c2 COLLATE RTRIM)))AND(rt1.c1)))OR((0X6e838e3a IN (rt1.c0)))))AND((rt1.c1 IN ())))) ISNULL)) GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c0, t0.c0;
SELECT rt1.c1, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c0, t0.c0 HAVING TOTAL(COUNT(rt1.c0)) UNION ALL SELECT rt1.c1, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c0, t0.c0 HAVING (NOT (TOTAL(COUNT(rt1.c0)))) UNION ALL SELECT ALL rt1.c1, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c0, t0.c0 HAVING ((TOTAL(COUNT(rt1.c0))) ISNULL);
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1))) IS TRUE)) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1))) IS TRUE)))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1))) IS TRUE)) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (((((rt1.c0)IS(t0.c0))) BETWEEN (PRINTF(rt1.c0, t0.c0, rt1.c2, rt1.c0, rt1.c1)) AND (NULLIF(rt1.c1, rt1.c0)))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (((((rt1.c0)IS(t0.c0))) BETWEEN (PRINTF(rt1.c0, t0.c0, rt1.c2, rt1.c0, rt1.c1)) AND (NULLIF(rt1.c1, rt1.c0)))))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((((((rt1.c0)IS(t0.c0))) BETWEEN (PRINTF(rt1.c0, t0.c0, rt1.c2, rt1.c0, rt1.c1)) AND (NULLIF(rt1.c1, rt1.c0)))) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c0, t0.c0;
SELECT rt1.c0, t0.c0 FROM t0, rt1 NOT INDEXED WHERE ((((rt1.c2)) BETWEEN ((((rt1.c2) IS TRUE))) AND ((((('r!'))==((t0.c0))))))) GROUP BY rt1.c0, t0.c0 UNION SELECT ALL rt1.c0, t0.c0 FROM t0, rt1 WHERE ((NOT ((((rt1.c2)) BETWEEN ((((rt1.c2) IS TRUE))) AND ((((('r!'))==((t0.c0))))))))) GROUP BY rt1.c0, t0.c0 UNION SELECT rt1.c0, t0.c0 FROM t0, rt1 WHERE ((((((rt1.c2)) BETWEEN ((((rt1.c2) IS TRUE))) AND ((((('r!'))=((t0.c0))))))) ISNULL)) GROUP BY rt1.c0, t0.c0;
SELECT rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c0, t0.c0;
SELECT ALL rt1.c1 FROM rt1, t0 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1, t0 GROUP BY rt1.c1 HAVING ((((((((((((COUNT(COUNT(rt1.c2)))OR(((rt1.c1)>>(rt1.c1)))))OR(MIN(rt1.c2))))AND(AVG(MIN(GROUP_CONCAT(t0.c0))))))OR(((((((((TOTAL(SUM(TOTAL(rt1.c1))))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(MIN(COUNT(t0.c0)))))))AND(COUNT(rt1.c0))))OR(MAX(t0.c0))) UNION ALL SELECT ALL rt1.c1 FROM rt1, t0 GROUP BY rt1.c1 HAVING (NOT (((((((((((((COUNT(COUNT(rt1.c2)))OR(((rt1.c1)>>(rt1.c1)))))OR(MIN(rt1.c2))))AND(AVG(MIN(GROUP_CONCAT(t0.c0))))))OR(((((((((TOTAL(SUM(TOTAL(rt1.c1))))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(MIN(COUNT(t0.c0)))))))AND(COUNT(rt1.c0))))OR(MAX(t0.c0))))) UNION ALL SELECT ALL rt1.c1 FROM rt1, t0 GROUP BY rt1.c1 HAVING ((((((((((((((COUNT(COUNT(rt1.c2)))OR(((rt1.c1)>>(rt1.c1)))))OR(MIN(rt1.c2))))AND(AVG(MIN(GROUP_CONCAT(t0.c0))))))OR(((((((((TOTAL(SUM(TOTAL(rt1.c1))))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(MIN(COUNT(t0.c0)))))))AND(COUNT(rt1.c0))))OR(MAX(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0)) BETWEEN (((+ (t0.c0)))) AND (((t0.c0 IN (t0.c0, t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) BETWEEN (((+ (t0.c0)))) AND (((t0.c0 IN (t0.c0, t0.c0)))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0)) BETWEEN (((+ (t0.c0)))) AND (((t0.c0 IN (t0.c0, t0.c0)))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT rt1.c2 FROM t0 INNER JOIN rt1 ON (((rt1.c2) IS FALSE) IN (((rt1.c1) IS TRUE), CAST(t0.c0 AS TEXT)));
SELECT DISTINCT rt1.c2 FROM t0 INNER JOIN rt1 ON (((rt1.c2) IS FALSE) IN (((rt1.c1) IS TRUE), CAST(t0.c0 AS TEXT))) WHERE (((CAST(rt1.c2 AS TEXT)) BETWEEN (LOWER(t0.c0)) AND (((rt1.c0)GLOB(rt1.c1))))) UNION SELECT DISTINCT rt1.c2 FROM t0 INNER JOIN rt1 ON (((rt1.c2) IS FALSE) IN (((rt1.c1) IS TRUE), CAST(t0.c0 AS TEXT))) WHERE ((NOT (((CAST(rt1.c2 AS TEXT)) BETWEEN (LOWER(t0.c0)) AND (((rt1.c0)GLOB(rt1.c1))))))) UNION SELECT DISTINCT rt1.c2 FROM t0 INNER JOIN rt1 ON (((rt1.c2) IS FALSE) IN (((rt1.c1) IS TRUE), CAST(t0.c0 AS TEXT))) WHERE (((((CAST(rt1.c2 AS TEXT)) BETWEEN (LOWER(t0.c0)) AND (((rt1.c0)GLOB(rt1.c1))))) ISNULL));
SELECT DISTINCT rt1.c2 FROM t0 INNER JOIN rt1 ON (((rt1.c2) IS FALSE) IN (((rt1.c1) IS TRUE), CAST(t0.c0 AS TEXT)));
SELECT ALL rt1.c1, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, t0.c0;
SELECT ALL rt1.c1, t0.c0 FROM t0, rt1 WHERE (((t0.c0) NOT BETWEEN (NULL COLLATE NOCASE) AND (SQLITE_COMPILEOPTION_GET(rt1.c1)))) GROUP BY rt1.c1, t0.c0 UNION SELECT ALL rt1.c1, t0.c0 FROM t0, rt1 WHERE ((NOT (((t0.c0) NOT BETWEEN (NULL COLLATE NOCASE) AND (SQLITE_COMPILEOPTION_GET(rt1.c1)))))) GROUP BY rt1.c1, t0.c0 UNION SELECT ALL rt1.c1, t0.c0 FROM t0, rt1 WHERE (((((t0.c0) NOT BETWEEN (NULL COLLATE NOCASE) AND (SQLITE_COMPILEOPTION_GET(rt1.c1)))) ISNULL)) GROUP BY rt1.c1, t0.c0;
SELECT ALL rt1.c1, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, t0.c0;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING TYPEOF(GROUP_CONCAT(MAX(rt1.c1))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (TYPEOF(GROUP_CONCAT(MAX(rt1.c1))))) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((TYPEOF(GROUP_CONCAT(MAX(rt1.c1)))) ISNULL);
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON ((rt1.c2)<>(((t0.c0) ISNULL)));
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON ((rt1.c2)!=(((t0.c0) ISNULL))) WHERE (UPPER(DISTINCT rt1.c1) COLLATE RTRIM) UNION ALL SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON ((rt1.c2)!=(((t0.c0) ISNULL))) WHERE ((NOT (UPPER(DISTINCT rt1.c1) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON ((rt1.c2)<>(((t0.c0) ISNULL))) WHERE (((UPPER(DISTINCT rt1.c1) COLLATE RTRIM) ISNULL));
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON ((rt1.c2)<>(((t0.c0) ISNULL)));
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1, t0;
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1, t0 WHERE ((((rt1.c0 IN ())) NOT NULL)) UNION SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1, t0 WHERE ((NOT ((((rt1.c0 IN ())) NOT NULL)))) UNION SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1, t0 WHERE ((((((rt1.c0 IN ())) NOT NULL)) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0 COLLATE NOCASE) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0 COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((t0.c0 COLLATE NOCASE) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2 HAVING TOTAL(((rt1.c2) IS FALSE)) UNION ALL SELECT rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2 HAVING (NOT (TOTAL(((rt1.c2) IS FALSE)))) UNION ALL SELECT rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2 HAVING ((TOTAL(((rt1.c2) IS FALSE))) ISNULL);
SELECT rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2 HAVING TOTAL(((rt1.c2) IS FALSE)) UNION ALL SELECT rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2 HAVING (NOT (TOTAL(((rt1.c2) IS FALSE)))) UNION ALL SELECT rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2 HAVING ((TOTAL(((rt1.c2) IS FALSE))) ISNULL);
SELECT rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (CAST(NULL AS REAL)) UNION ALL SELECT * FROM t0 WHERE ((NOT (CAST(NULL AS REAL)))) UNION ALL SELECT ALL * FROM t0 WHERE (((CAST(NULL AS REAL)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c0 FROM t0, rt1;
SELECT DISTINCT t0.c0 FROM t0, rt1 WHERE (((CAST(t0.c0 AS INTEGER))<<(((rt1.c0) IS FALSE)))) UNION SELECT DISTINCT t0.c0 FROM t0, rt1 WHERE ((NOT (((CAST(t0.c0 AS INTEGER))<<(((rt1.c0) IS FALSE)))))) UNION SELECT DISTINCT t0.c0 FROM t0, rt1 WHERE (((((CAST(t0.c0 AS INTEGER))<<(((rt1.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, rt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((((0X18fdaec7)&(t0.c0)))OR(t0.c0)))AND(CAST(t0.c0 AS BLOB)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((((0X18fdaec7)&(t0.c0)))OR(t0.c0)))AND(CAST(t0.c0 AS BLOB)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((((0X18fdaec7)&(t0.c0)))OR(t0.c0)))AND(CAST(t0.c0 AS BLOB)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING SUM(rt1.c1 COLLATE BINARY) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (SUM(rt1.c1 COLLATE BINARY))) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((SUM(rt1.c1 COLLATE BINARY)) ISNULL);
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING SUM(rt1.c1 COLLATE BINARY) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (SUM(rt1.c1 COLLATE BINARY))) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((SUM(rt1.c1 COLLATE BINARY)) ISNULL);
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (((((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)))GLOB(((rt1.c2)<<(rt1.c2))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)))GLOB(((rt1.c2)<<(rt1.c2))))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)))GLOB(((rt1.c2)<<(rt1.c2))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((rt1.c1 IN (rt1.c2)) IN ())) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((rt1.c1 IN (rt1.c2)) IN ())))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c1 IN (rt1.c2)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c0;
SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c0 HAVING GROUP_CONCAT(MAX(rt1.c1)) UNION ALL SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c0 HAVING (NOT (GROUP_CONCAT(MAX(rt1.c1)))) UNION ALL SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c0 HAVING ((GROUP_CONCAT(MAX(rt1.c1))) ISNULL);
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((((rt1.c2)<=(rt1.c2)) IN ())) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT ((((rt1.c2)<=(rt1.c2)) IN ())))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((((((rt1.c2)<=(rt1.c2)) IN ())) ISNULL));
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt1 ON (((LIKELIHOOD(DISTINCT rt1.c2, 0.33624022416502075), ((rt1.c2) NOTNULL), (t0.c0 IN ())))>((((rt1.c1)OR(rt1.c1)), ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)), ((rt1.c0)<<(NULL)))));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt1 ON (((LIKELIHOOD(DISTINCT rt1.c2, 0.33624022416502075), ((rt1.c2) NOTNULL), (t0.c0 IN ())))>((((rt1.c1)OR(rt1.c1)), ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)), ((rt1.c0)<<(NULL))))) WHERE (rt1.c0) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt1 ON (((LIKELIHOOD(DISTINCT rt1.c2, 0.33624022416502075), ((rt1.c2) NOTNULL), (t0.c0 IN ())))>((((rt1.c1)OR(rt1.c1)), ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)), ((rt1.c0)<<(NULL))))) WHERE ((NOT (rt1.c0))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt1 ON (((LIKELIHOOD(DISTINCT rt1.c2, 0.33624022416502075), ((rt1.c2) NOTNULL), (t0.c0 IN ())))>((((rt1.c1)OR(rt1.c1)), ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)), ((rt1.c0)<<(NULL))))) WHERE (((rt1.c0) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt1 ON (((LIKELIHOOD(DISTINCT rt1.c2, 0.33624022416502075), ((rt1.c2) NOTNULL), (t0.c0 IN ())))>((((rt1.c1)OR(rt1.c1)), ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)), ((rt1.c0)<<(NULL)))));
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((+ (((rt1.c1)%(rt1.c0))))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT ((+ (((rt1.c1)%(rt1.c0))))))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((((+ (((rt1.c1)%(rt1.c0))))) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((CAST(rt1.c1 AS REAL))-((- (MAX(COUNT(*)))))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (((CAST(rt1.c1 AS REAL))-((- (MAX(COUNT(*)))))))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((((CAST(rt1.c1 AS REAL))-((- (MAX(COUNT(*))))))) ISNULL);
SELECT ALL rt1.c0 FROM rt1;
SELECT rt1.c0 FROM rt1 WHERE (rt1.c0) UNION ALL SELECT ALL rt1.c0 FROM rt1 WHERE ((NOT (rt1.c0))) UNION ALL SELECT rt1.c0 FROM rt1 WHERE (((rt1.c0) ISNULL));
SELECT ALL rt1.c0 FROM rt1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (UPPER(DISTINCT rt1.c1)) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (UPPER(DISTINCT rt1.c1)))) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((UPPER(DISTINCT rt1.c1)) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT t0.c0 FROM rt1, t0 INDEXED BY i31 GROUP BY t0.c0;
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (((rt1.c0) ISNULL) COLLATE NOCASE) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((rt1.c0) ISNULL) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((rt1.c0) ISNULL) COLLATE NOCASE) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt1.c2 FROM t0, rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM t0, rt1 WHERE (((((rt1.c2)/(rt1.c1)))||(((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c0))))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM t0, rt1 WHERE ((NOT (((((rt1.c2)/(rt1.c1)))||(((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c0))))))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM t0, rt1 WHERE (((((((rt1.c2)/(rt1.c1)))||(((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c0))))) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM t0, rt1 GROUP BY rt1.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(((t0.c0) NOTNULL)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(((t0.c0) NOTNULL)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(((t0.c0) NOTNULL))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(((t0.c0) NOTNULL)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(((t0.c0) NOTNULL)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(((t0.c0) NOTNULL))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t0, rt1;
SELECT ALL * FROM t0, rt1 WHERE (rt1.c0) UNION ALL SELECT * FROM t0, rt1 WHERE ((NOT (rt1.c0))) UNION ALL SELECT ALL * FROM t0, rt1 WHERE (((rt1.c0) ISNULL));
SELECT * FROM t0, rt1;
SELECT DISTINCT rt1.c2, rt1.c1 FROM t0 LEFT OUTER JOIN rt1 ON ((((rt1.c2)GLOB(rt1.c2)))%(((x'b03d')==(rt1.c0))));
SELECT DISTINCT rt1.c2, rt1.c1 FROM t0 LEFT OUTER JOIN rt1 ON ((((rt1.c2)GLOB(rt1.c2)))%(((x'b03d')=(rt1.c0)))) WHERE (((x'') NOT BETWEEN (((rt1.c1)>(NULL))) AND (t0.c0))) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM t0 LEFT OUTER JOIN rt1 ON ((((rt1.c2)GLOB(rt1.c2)))%(((x'b03d')=(rt1.c0)))) WHERE ((NOT (((x'') NOT BETWEEN (((rt1.c1)>(NULL))) AND (t0.c0))))) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM t0 LEFT OUTER JOIN rt1 ON ((((rt1.c2)GLOB(rt1.c2)))%(((x'b03d')==(rt1.c0)))) WHERE (((((x'') NOT BETWEEN (((rt1.c1)>(NULL))) AND (t0.c0))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1 FROM t0 LEFT OUTER JOIN rt1 ON ((((rt1.c2)GLOB(rt1.c2)))%(((x'b03d')==(rt1.c0))));
SELECT t0.c0, rt1.c1, rt1.c0 FROM rt1 FULL OUTER JOIN t0 ON CASE WHEN ((rt1.c2) NOTNULL) THEN NULL WHEN IFNULL(rt1.c1, rt1.c2) THEN ((rt1.c1)%(rt1.c0)) WHEN CASE WHEN '0.984736515036829' THEN rt1.c1 END THEN ((x'') IS FALSE) WHEN ((t0.c0) IS TRUE) THEN (rt1.c2 IN (rt1.c1, rt1.c1)) WHEN rt1.c1 COLLATE RTRIM THEN CAST(rt1.c0 AS TEXT) ELSE CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END END GROUP BY t0.c0, rt1.c1, rt1.c0;
SELECT ALL t0.c0, rt1.c1, rt1.c0 FROM rt1 FULL OUTER JOIN t0 ON CASE WHEN ((rt1.c2) NOTNULL) THEN NULL WHEN IFNULL(rt1.c1, rt1.c2) THEN ((rt1.c1)%(rt1.c0)) WHEN CASE WHEN '0.984736515036829' THEN rt1.c1 END THEN ((x'') IS FALSE) WHEN ((t0.c0) IS TRUE) THEN (rt1.c2 IN (rt1.c1, rt1.c1)) WHEN rt1.c1 COLLATE RTRIM THEN CAST(rt1.c0 AS TEXT) ELSE CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END END WHERE ((((((rt1.c1) NOT NULL)))=(((- (rt1.c1)))))) GROUP BY t0.c0, rt1.c1, rt1.c0 UNION SELECT t0.c0, rt1.c1, rt1.c0 FROM rt1 FULL OUTER JOIN t0 ON CASE WHEN ((rt1.c2) NOTNULL) THEN NULL WHEN IFNULL(rt1.c1, rt1.c2) THEN ((rt1.c1)%(rt1.c0)) WHEN CASE WHEN '0.984736515036829' THEN rt1.c1 END THEN ((x'') IS FALSE) WHEN ((t0.c0) IS TRUE) THEN (rt1.c2 IN (rt1.c1, rt1.c1)) WHEN rt1.c1 COLLATE RTRIM THEN CAST(rt1.c0 AS TEXT) ELSE CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END END WHERE ((NOT ((((((rt1.c1) NOT NULL)))==(((- (rt1.c1)))))))) GROUP BY t0.c0, rt1.c1, rt1.c0 UNION SELECT ALL t0.c0, rt1.c1, rt1.c0 FROM rt1 FULL OUTER JOIN t0 ON CASE WHEN ((rt1.c2) NOTNULL) THEN NULL WHEN IFNULL(rt1.c1, rt1.c2) THEN ((rt1.c1)%(rt1.c0)) WHEN CASE WHEN '0.984736515036829' THEN rt1.c1 END THEN ((x'') IS FALSE) WHEN ((t0.c0) IS TRUE) THEN (rt1.c2 IN (rt1.c1, rt1.c1)) WHEN rt1.c1 COLLATE RTRIM THEN CAST(rt1.c0 AS TEXT) ELSE CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END END WHERE ((((((((rt1.c1) NOT NULL)))=(((- (rt1.c1)))))) ISNULL)) GROUP BY t0.c0, rt1.c1, rt1.c0;
SELECT t0.c0, rt1.c1, rt1.c0 FROM rt1 FULL OUTER JOIN t0 ON CASE WHEN ((rt1.c2) NOTNULL) THEN NULL WHEN IFNULL(rt1.c1, rt1.c2) THEN ((rt1.c1)%(rt1.c0)) WHEN CASE WHEN '0.984736515036829' THEN rt1.c1 END THEN ((x'') IS FALSE) WHEN ((t0.c0) IS TRUE) THEN (rt1.c2 IN (rt1.c1, rt1.c1)) WHEN rt1.c1 COLLATE RTRIM THEN CAST(rt1.c0 AS TEXT) ELSE CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END END GROUP BY t0.c0, rt1.c1, rt1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (+ (MAX(SUM(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((+ (MAX(SUM(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((+ (MAX(SUM(t0.c0))))) ISNULL);
SELECT rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM rt1, t0;
SELECT rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM rt1, t0 WHERE ((((((t0.c0)OR(rt1.c2))))!=((t0.c0 COLLATE RTRIM)))) UNION ALL SELECT rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM rt1, t0 WHERE ((NOT ((((((t0.c0)OR(rt1.c2))))!=((t0.c0 COLLATE RTRIM)))))) UNION ALL SELECT rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM rt1, t0 WHERE ((((((((t0.c0)OR(rt1.c2))))!=((t0.c0 COLLATE RTRIM)))) ISNULL));
SELECT rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE (((rt1.c2 IN ()) IN (CAST(0.3178670816185737 AS TEXT), ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT (((rt1.c2 IN ()) IN (CAST(0.3178670816185737 AS TEXT), ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0))))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE (((((rt1.c2 IN ()) IN (CAST(0.3178670816185737 AS TEXT), ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT ALL rt1.c1 FROM t0 LEFT OUTER JOIN rt1 ON (- ((t0.c0 IN (rt1.c2)))) GROUP BY rt1.c1;
SELECT rt1.c1 FROM t0 LEFT OUTER JOIN rt1 ON (- ((t0.c0 IN (rt1.c2)))) WHERE (((t0.c0) BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE BINARY) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM t0 LEFT OUTER JOIN rt1 ON (- ((t0.c0 IN (rt1.c2)))) WHERE ((NOT (((t0.c0) BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE BINARY))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM t0 LEFT OUTER JOIN rt1 ON (- ((t0.c0 IN (rt1.c2)))) WHERE (((((t0.c0) BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE BINARY) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM t0 LEFT OUTER JOIN rt1 ON (- ((t0.c0 IN (rt1.c2)))) GROUP BY rt1.c1;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((((MIN(rt1.c2))OR(MAX(rt1.c1))))AND(TOTAL(rt1.c0))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (((((MIN(rt1.c2))OR(MAX(rt1.c1))))AND(TOTAL(rt1.c0))))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((((((MIN(rt1.c2))OR(MAX(rt1.c1))))AND(TOTAL(rt1.c0)))) ISNULL);
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((((MIN(rt1.c2))OR(MAX(rt1.c1))))AND(TOTAL(rt1.c0))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (((((MIN(rt1.c2))OR(MAX(rt1.c1))))AND(TOTAL(rt1.c0))))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((((((MIN(rt1.c2))OR(MAX(rt1.c1))))AND(TOTAL(rt1.c0)))) ISNULL);
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL MAX(((CASE rt1.c0  WHEN rt1.c1 THEN t0.c0 ELSE rt1.c0 END)<<((t0.c0 IN ())))) FROM t0, rt1 ORDER BY ((((t0.c0)-(rt1.c2)))||(rt1.c2)) DESC;
SELECT ALL rt1.c0, t0.c0 FROM t0 LEFT OUTER JOIN rt1 ON (NOT (((((t0.c0)AND(rt1.c1)))OR(rt1.c0))));
SELECT rt1.c0, t0.c0 FROM t0 LEFT OUTER JOIN rt1 ON (NOT (((((t0.c0)AND(rt1.c1)))OR(rt1.c0)))) WHERE (((rt1.c1 COLLATE BINARY)AND(((((rt1.c0)OR(t0.c0)))OR(t0.c0))))) UNION ALL SELECT ALL rt1.c0, t0.c0 FROM t0 LEFT OUTER JOIN rt1 ON (NOT (((((t0.c0)AND(rt1.c1)))OR(rt1.c0)))) WHERE ((NOT (((rt1.c1 COLLATE BINARY)AND(((((rt1.c0)OR(t0.c0)))OR(t0.c0))))))) UNION ALL SELECT ALL rt1.c0, t0.c0 FROM t0 LEFT OUTER JOIN rt1 ON (NOT (((((t0.c0)AND(rt1.c1)))OR(rt1.c0)))) WHERE (((((rt1.c1 COLLATE BINARY)AND(((((rt1.c0)OR(t0.c0)))OR(t0.c0))))) ISNULL));
SELECT ALL rt1.c0, t0.c0 FROM t0 LEFT OUTER JOIN rt1 ON (NOT (((((t0.c0)AND(rt1.c1)))OR(rt1.c0))));
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0)+(t0.c0)))==(CASE WHEN x'' THEN t0.c0 END))) UNION SELECT DISTINCT t0.c0 FROM t0 NOT INDEXED WHERE ((NOT (((((t0.c0)+(t0.c0)))==(CASE WHEN x'' THEN t0.c0 END))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0)+(t0.c0)))=(CASE WHEN x'' THEN t0.c0 END))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1, t0 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1, t0 WHERE (((t0.c0)*(rt1.c2)) COLLATE BINARY) GROUP BY rt1.c2, rt1.c0 UNION SELECT rt1.c2, rt1.c0 FROM rt1, t0 WHERE ((NOT (((t0.c0)*(rt1.c2)) COLLATE BINARY))) GROUP BY rt1.c2, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c0 FROM rt1, t0 WHERE (((((t0.c0)*(rt1.c2)) COLLATE BINARY) ISNULL)) GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1, t0 GROUP BY rt1.c2, rt1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(CASE t0.c0  WHEN GROUP_CONCAT(t0.c0) THEN MAX(TOTAL(t0.c0)) WHEN SUM(MAX(t0.c0)) THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(CASE t0.c0  WHEN GROUP_CONCAT(t0.c0) THEN MAX(TOTAL(t0.c0)) WHEN SUM(MAX(t0.c0)) THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(CASE t0.c0  WHEN GROUP_CONCAT(t0.c0) THEN MAX(TOTAL(t0.c0)) WHEN SUM(MAX(t0.c0)) THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ISNULL);
SELECT rt1.c1, rt1.c0 FROM t0 FULL OUTER JOIN rt1 ON ((rt1.c0) BETWEEN (LOWER(rt1.c1)) AND (((rt1.c0) IS TRUE)));
SELECT rt1.c1, rt1.c0 FROM t0 FULL OUTER JOIN rt1 ON ((rt1.c0) BETWEEN (LOWER(rt1.c1)) AND (((rt1.c0) IS TRUE))) WHERE (CASE ((rt1.c1)=(rt1.c1))  WHEN (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) THEN rt1.c1 WHEN x'c7bd' THEN ((rt1.c1)>(t0.c0)) WHEN CHAR(rt1.c1, rt1.c1, t0.c0) THEN CAST(rt1.c1 AS BLOB) END) UNION ALL SELECT rt1.c1, rt1.c0 FROM t0 FULL OUTER JOIN rt1 ON ((rt1.c0) BETWEEN (LOWER(rt1.c1)) AND (((rt1.c0) IS TRUE))) WHERE ((NOT (CASE ((rt1.c1)==(rt1.c1))  WHEN (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) THEN rt1.c1 WHEN x'c7bd' THEN ((rt1.c1)>(t0.c0)) WHEN CHAR(rt1.c1, rt1.c1, t0.c0) THEN CAST(rt1.c1 AS BLOB) END))) UNION ALL SELECT rt1.c1, rt1.c0 FROM t0 FULL OUTER JOIN rt1 ON ((rt1.c0) BETWEEN (LOWER(rt1.c1)) AND (((rt1.c0) IS TRUE))) WHERE (((CASE ((rt1.c1)=(rt1.c1))  WHEN (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) THEN rt1.c1 WHEN x'c7bd' THEN ((rt1.c1)>(t0.c0)) WHEN CHAR(rt1.c1, rt1.c1, t0.c0) THEN CAST(rt1.c1 AS BLOB) END) ISNULL));
SELECT rt1.c1, rt1.c0 FROM t0 FULL OUTER JOIN rt1 ON ((rt1.c0) BETWEEN (LOWER(rt1.c1)) AND (((rt1.c0) IS TRUE)));
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (COALESCE(t0.c0, IFNULL(t0.c0, t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (COALESCE(t0.c0, IFNULL(t0.c0, t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((COALESCE(t0.c0, IFNULL(t0.c0, t0.c0))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (x'6027') GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (x'6027'))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((x'6027') ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((((((((((((SUM(TOTAL(rt1.c1)))OR(COUNT(rt1.c2))))OR(COUNT(*))))OR((- (0.7019115276635772)))))OR(TOTAL(rt1.c2))))OR(MIN(COUNT(*)))))AND((((rt1.c2)) NOT BETWEEN ((SUM(rt1.c2))) AND ((rt1.c1))))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (((((((((((((SUM(TOTAL(rt1.c1)))OR(COUNT(rt1.c2))))OR(COUNT(*))))OR((- (0.7019115276635772)))))OR(TOTAL(rt1.c2))))OR(MIN(COUNT(*)))))AND((((rt1.c2)) NOT BETWEEN ((SUM(rt1.c2))) AND ((rt1.c1))))))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((((((((((((((SUM(TOTAL(rt1.c1)))OR(COUNT(rt1.c2))))OR(COUNT(*))))OR((- (0.7019115276635772)))))OR(TOTAL(rt1.c2))))OR(MIN(COUNT(*)))))AND((((rt1.c2)) NOT BETWEEN ((SUM(rt1.c2))) AND ((rt1.c1)))))) ISNULL);
SELECT * FROM t0, rt1;
SELECT * FROM t0, rt1 WHERE ((((json_patch(rt1.c0, t0.c0), rt1.c1 COLLATE RTRIM, (((rt1.c1, t0.c0, rt1.c0)) BETWEEN ((NULL, '~ppb~u', rt1.c1)) AND ((t0.c0, rt1.c2, rt1.c2)))))<=((t0.c0, CASE WHEN rt1.c0 THEN t0.c0 END, (+ (rt1.c2)))))) UNION ALL SELECT * FROM t0, rt1 WHERE ((NOT ((((json_patch(rt1.c0, t0.c0), rt1.c1 COLLATE RTRIM, (((rt1.c1, t0.c0, rt1.c0)) BETWEEN ((NULL, '~ppb~u', rt1.c1)) AND ((t0.c0, rt1.c2, rt1.c2)))))<=((t0.c0, CASE WHEN rt1.c0 THEN t0.c0 END, (+ (rt1.c2)))))))) UNION ALL SELECT ALL * FROM t0, rt1 WHERE ((((((json_patch(rt1.c0, t0.c0), rt1.c1 COLLATE RTRIM, (((rt1.c1, t0.c0, rt1.c0)) BETWEEN ((NULL, '~ppb~u', rt1.c1)) AND ((t0.c0, rt1.c2, rt1.c2)))))<=((t0.c0, CASE WHEN rt1.c0 THEN t0.c0 END, (+ (rt1.c2)))))) ISNULL));
SELECT * FROM t0, rt1;
SELECT DISTINCT rt1.c1, rt1.c0 FROM t0, rt1;
SELECT DISTINCT rt1.c1, rt1.c0 FROM t0, rt1 WHERE (((((rt1.c1 IN (0.43135425595473886))))<=((0.2583454527657152)))) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM t0, rt1 WHERE ((NOT (((((rt1.c1 IN (0.43135425595473886))))<=((0.2583454527657152)))))) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM t0, rt1 WHERE (((((((rt1.c1 IN (0.43135425595473886))))<=((0.2583454527657152)))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0 FROM t0, rt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (0.4704926250603305) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (0.4704926250603305))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((0.4704926250603305) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (AVG(TOTAL(GROUP_CONCAT(t0.c0))) IN ()) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((AVG(TOTAL(GROUP_CONCAT(t0.c0))) IN ()))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((AVG(TOTAL(GROUP_CONCAT(t0.c0))) IN ())) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (AVG(TOTAL(GROUP_CONCAT(t0.c0))) IN ()) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((AVG(TOTAL(GROUP_CONCAT(t0.c0))) IN ()))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((AVG(TOTAL(GROUP_CONCAT(t0.c0))) IN ())) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM t0, rt1;
SELECT * FROM t0, rt1 WHERE (((rt1.c2 COLLATE RTRIM)-(t0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM t0, rt1 WHERE ((NOT (((rt1.c2 COLLATE RTRIM)-(t0.c0 COLLATE NOCASE))))) UNION ALL SELECT * FROM t0, rt1 WHERE (((((rt1.c2 COLLATE RTRIM)-(t0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM t0, rt1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((NULL)OR(t0.c0)))OR(t0.c0))) BETWEEN (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))) AND ((+ (t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((((NULL)OR(t0.c0)))OR(t0.c0))) BETWEEN (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))) AND ((+ (t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((((NULL)OR(t0.c0)))OR(t0.c0))) BETWEEN (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))) AND ((+ (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt1.c0, t0.c0 FROM rt1, t0 GROUP BY rt1.c0, t0.c0;
SELECT rt1.c0, t0.c0 FROM rt1, t0 WHERE ((((rt1.c0 IN ('-1736350915'))) ISNULL)) GROUP BY rt1.c0, t0.c0 UNION SELECT ALL rt1.c0, t0.c0 FROM rt1, t0 WHERE ((NOT ((((rt1.c0 IN ('-1736350915'))) ISNULL)))) GROUP BY rt1.c0, t0.c0 UNION SELECT ALL rt1.c0, t0.c0 FROM rt1, t0 WHERE ((((((rt1.c0 IN ('-1736350915'))) ISNULL)) ISNULL)) GROUP BY rt1.c0, t0.c0;
SELECT ALL rt1.c0, t0.c0 FROM rt1, t0 GROUP BY rt1.c0, t0.c0;
SELECT ALL t0.c0, rt1.c2 FROM rt1 CROSS JOIN t0 ON IFNULL(rt1.c0 COLLATE BINARY, (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))) GROUP BY t0.c0, rt1.c2;
SELECT ALL t0.c0, rt1.c2 FROM rt1 CROSS JOIN t0 ON IFNULL(rt1.c0 COLLATE BINARY, (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))) GROUP BY t0.c0, rt1.c2 HAVING NULL UNION ALL SELECT ALL t0.c0, rt1.c2 FROM rt1 CROSS JOIN t0 ON IFNULL(rt1.c0 COLLATE BINARY, (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))) GROUP BY t0.c0, rt1.c2 HAVING (NOT (NULL)) UNION ALL SELECT t0.c0, rt1.c2 FROM rt1 CROSS JOIN t0 ON IFNULL(rt1.c0 COLLATE BINARY, (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))) GROUP BY t0.c0, rt1.c2 HAVING ((NULL) ISNULL);
SELECT ALL t0.c0, rt1.c2 FROM rt1 CROSS JOIN t0 ON IFNULL(rt1.c0 COLLATE BINARY, (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))) GROUP BY t0.c0, rt1.c2;
SELECT ALL t0.c0, rt1.c2 FROM rt1 CROSS JOIN t0 ON IFNULL(rt1.c0 COLLATE BINARY, (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))) GROUP BY t0.c0, rt1.c2 HAVING NULL UNION ALL SELECT ALL t0.c0, rt1.c2 FROM rt1 CROSS JOIN t0 ON IFNULL(rt1.c0 COLLATE BINARY, (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))) GROUP BY t0.c0, rt1.c2 HAVING (NOT (NULL)) UNION ALL SELECT t0.c0, rt1.c2 FROM rt1 CROSS JOIN t0 ON IFNULL(rt1.c0 COLLATE BINARY, (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))) GROUP BY t0.c0, rt1.c2 HAVING ((NULL) ISNULL);
SELECT ALL t0.c0, rt1.c2 FROM rt1 CROSS JOIN t0 ON IFNULL(rt1.c0 COLLATE BINARY, (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))) GROUP BY t0.c0, rt1.c2;
SELECT MIN(((((((((rt1.c1)AND((((rt1.c0, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c1, rt1.c0, rt1.c0)) AND ((rt1.c1, rt1.c2, t0.c0))))))AND(UNLIKELY(DISTINCT rt1.c0))))OR(((((t0.c0)AND(rt1.c2)))OR(rt1.c1)))))AND(((rt1.c0) IS FALSE)))) FROM t0, rt1;
SELECT ALL rt1.c2 FROM rt1, t0;
SELECT ALL rt1.c2 FROM rt1, t0 WHERE (((rt1.c1)<(rt1.c0)) COLLATE BINARY) UNION ALL SELECT ALL rt1.c2 FROM rt1, t0 WHERE ((NOT (((rt1.c1)<(rt1.c0)) COLLATE BINARY))) UNION ALL SELECT ALL rt1.c2 FROM rt1, t0 WHERE (((((rt1.c1)<(rt1.c0)) COLLATE BINARY) ISNULL));
SELECT ALL rt1.c2 FROM rt1, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(CASE WHEN x'' THEN t0.c0 WHEN t0.c0 THEN '828355946' WHEN t0.c0 THEN t0.c0 END AS REAL)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(CASE WHEN x'' THEN t0.c0 WHEN t0.c0 THEN '828355946' WHEN t0.c0 THEN t0.c0 END AS REAL)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(CASE WHEN x'' THEN t0.c0 WHEN t0.c0 THEN '828355946' WHEN t0.c0 THEN t0.c0 END AS REAL)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 WHERE (((rt1.c0)<(x''))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE ((NOT (((rt1.c0)<(x''))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE (((((rt1.c0)<(x''))) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(MAX(NULL)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(MAX(NULL)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(MAX(NULL))) ISNULL);
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (((((rt1.c0) ISNULL))+(CAST(rt1.c0 AS NUMERIC)))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((((rt1.c0) ISNULL))+(CAST(rt1.c0 AS NUMERIC)))))) UNION ALL SELECT * FROM rt1 WHERE (((((((rt1.c0) ISNULL))+(CAST(rt1.c0 AS NUMERIC)))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c0, t0.c0, rt1.c2, rt1.c1 FROM t0, rt1;
SELECT DISTINCT rt1.c0, t0.c0, rt1.c2, rt1.c1 FROM t0, rt1 WHERE (rt1.c0) UNION SELECT DISTINCT rt1.c0, t0.c0, rt1.c2, rt1.c1 FROM t0, rt1 WHERE ((NOT (rt1.c0))) UNION SELECT DISTINCT rt1.c0, t0.c0, rt1.c2, rt1.c1 FROM t0, rt1 WHERE (((rt1.c0) ISNULL));
SELECT DISTINCT rt1.c0, t0.c0, rt1.c2, rt1.c1 FROM t0, rt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((((NULL))<>(('n'))))+(0.08009900724068209))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((((NULL))<>(('n'))))+(0.08009900724068209))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((((NULL))<>(('n'))))+(0.08009900724068209))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING MIN(GROUP_CONCAT(MAX(x'27ca'))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (MIN(GROUP_CONCAT(MAX(x'27ca'))))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((MIN(GROUP_CONCAT(MAX(x'27ca')))) ISNULL);
SELECT t0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN t0 ON ((((t0.c0)IS NOT('4|'))) NOT NULL);
SELECT t0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN t0 ON ((((t0.c0)IS NOT('4|'))) NOT NULL) WHERE (((((rt1.c0)OR(rt1.c0 COLLATE RTRIM)))OR(((rt1.c1) IS FALSE)))) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN t0 ON ((((t0.c0)IS NOT('4|'))) NOT NULL) WHERE ((NOT (((((rt1.c0)OR(rt1.c0 COLLATE RTRIM)))OR(((rt1.c1) IS FALSE)))))) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN t0 ON ((((t0.c0)IS NOT('4|'))) NOT NULL) WHERE (((((((rt1.c0)OR(rt1.c0 COLLATE RTRIM)))OR(((rt1.c1) IS FALSE)))) ISNULL));
SELECT t0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN t0 ON ((((t0.c0)IS NOT('4|'))) NOT NULL);
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE (rt1.c0) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT (rt1.c0))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE (((rt1.c0) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT rt1.c1 FROM t0 CROSS JOIN rt1 ON (+ ((~ (rt1.c0)))) GROUP BY rt1.c1;
SELECT rt1.c1 FROM t0 CROSS JOIN rt1 ON (+ ((~ (rt1.c0)))) WHERE ((((+ (rt1.c1)))=(NULL))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM t0 CROSS JOIN rt1 ON (+ ((~ (rt1.c0)))) WHERE ((NOT ((((+ (rt1.c1)))=(NULL))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM t0 CROSS JOIN rt1 ON (+ ((~ (rt1.c0)))) WHERE ((((((+ (rt1.c1)))==(NULL))) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM t0 CROSS JOIN rt1 ON (+ ((~ (rt1.c0)))) GROUP BY rt1.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING '(u' UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ('(u')) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (('(u') ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING '(u' UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ('(u')) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (('(u') ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c0, rt1.c1, t0.c0 FROM t0, rt1;
SELECT rt1.c0, rt1.c1, t0.c0 FROM t0, rt1 WHERE (t0.c0) UNION ALL SELECT rt1.c0, rt1.c1, t0.c0 FROM t0, rt1 WHERE ((NOT (t0.c0))) UNION ALL SELECT rt1.c0, rt1.c1, t0.c0 FROM t0, rt1 WHERE (((t0.c0) ISNULL));
SELECT rt1.c0, rt1.c1, t0.c0 FROM t0, rt1;
SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON ((((t0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)))LIKE(((rt1.c0)-(rt1.c0))));
SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON ((((t0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)))LIKE(((rt1.c0)-(rt1.c0)))) WHERE (CAST(-9.78638236E8 AS NUMERIC)) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON ((((t0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)))LIKE(((rt1.c0)-(rt1.c0)))) WHERE ((NOT (CAST(-9.78638236E8 AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON ((((t0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)))LIKE(((rt1.c0)-(rt1.c0)))) WHERE (((CAST(-9.78638236E8 AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON ((((t0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)))LIKE(((rt1.c0)-(rt1.c0))));
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((~ (0.7170069391055952))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((~ (0.7170069391055952))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((~ (0.7170069391055952))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM t0, rt1 GROUP BY rt1.c1 HAVING GROUP_CONCAT(TOTAL(rt1.c2)) UNION ALL SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1 HAVING (NOT (GROUP_CONCAT(TOTAL(rt1.c2)))) UNION ALL SELECT rt1.c1 FROM t0, rt1 GROUP BY rt1.c1 HAVING ((GROUP_CONCAT(TOTAL(rt1.c2))) ISNULL);
SELECT t0.c0, rt1.c1, rt1.c0, rt1.c2 FROM rt1, t0;
SELECT ALL t0.c0, rt1.c1, rt1.c0, rt1.c2 FROM rt1, t0 WHERE ((((rt1.c0)) NOT BETWEEN ((x'' COLLATE RTRIM)) AND ((CASE 0x5ad75181  WHEN rt1.c1 THEN 4.19278535E8 WHEN 0Xffffffffd98f6fa7 THEN rt1.c0 WHEN rt1.c0 THEN t0.c0 END)))) UNION ALL SELECT ALL t0.c0, rt1.c1, rt1.c0, rt1.c2 FROM rt1, t0 WHERE ((NOT ((((rt1.c0)) NOT BETWEEN ((x'' COLLATE RTRIM)) AND ((CASE 0X5ad75181  WHEN rt1.c1 THEN 4.19278535E8 WHEN 0xffffffffd98f6fa7 THEN rt1.c0 WHEN rt1.c0 THEN t0.c0 END)))))) UNION ALL SELECT ALL t0.c0, rt1.c1, rt1.c0, rt1.c2 FROM rt1, t0 WHERE ((((((rt1.c0)) NOT BETWEEN ((x'' COLLATE RTRIM)) AND ((CASE 0X5ad75181  WHEN rt1.c1 THEN 4.19278535E8 WHEN 0xffffffffd98f6fa7 THEN rt1.c0 WHEN rt1.c0 THEN t0.c0 END)))) ISNULL));
SELECT t0.c0, rt1.c1, rt1.c0, rt1.c2 FROM rt1, t0;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (((rt1.c0) IS FALSE)) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (((rt1.c0) IS FALSE)))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((((rt1.c0) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM t0, rt1 WHERE (CAST(x'2911' AS NUMERIC)) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM t0, rt1 WHERE ((NOT (CAST(x'2911' AS NUMERIC)))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM t0, rt1 WHERE (((CAST(x'2911' AS NUMERIC)) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING COUNT(((rt1.c0)LIKE(rt1.c0))) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT (COUNT(((rt1.c0)LIKE(rt1.c0))))) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((COUNT(((rt1.c0)LIKE(rt1.c0)))) ISNULL);
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING COUNT(((rt1.c0)LIKE(rt1.c0))) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT (COUNT(((rt1.c0)LIKE(rt1.c0))))) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((COUNT(((rt1.c0)LIKE(rt1.c0)))) ISNULL);
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT MIN((((+ (t0.c0)))<((((NULL, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, 0.48219481130522557, t0.c0, t0.c0)))))) FROM t0 ORDER BY ((((t0.c0)/('191246507'))) NOTNULL) ASC;
SELECT ALL * FROM rt1, t0;
SELECT ALL * FROM rt1, t0 WHERE (((rt1.c1)&(rt1.c1)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt1, t0 WHERE ((NOT (((rt1.c1)&(rt1.c1)) COLLATE NOCASE))) UNION ALL SELECT * FROM rt1, t0 WHERE (((((rt1.c1)&(rt1.c1)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt1, t0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (rt1.c1) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT * FROM rt1 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))))>=(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))))>=(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))))>=(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt1.c1, rt1.c0, t0.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c0, t0.c0;
SELECT ALL rt1.c1, rt1.c0, t0.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c0, t0.c0 HAVING COUNT(CAST(TOTAL(t0.c0) AS NUMERIC)) UNION ALL SELECT ALL rt1.c1, rt1.c0, t0.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c0, t0.c0 HAVING (NOT (COUNT(CAST(TOTAL(t0.c0) AS NUMERIC)))) UNION ALL SELECT rt1.c1, rt1.c0, t0.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c0, t0.c0 HAVING ((COUNT(CAST(TOTAL(t0.c0) AS NUMERIC))) ISNULL);
SELECT ALL MAX((((0.204789891493659))>((((t0.c0) ISNULL))))) FROM rt1, t0 ORDER BY ((LTRIM(t0.c0, t0.c0))==((rt1.c0 IN (rt1.c2))))  NULLS FIRST;
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((CAST('^q' AS INTEGER) IN ())) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((CAST('^q' AS INTEGER) IN ())))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((CAST('^q' AS INTEGER) IN ())) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((+ (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((+ (t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((+ (t0.c0))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM rt1 RIGHT OUTER JOIN t0 ON ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)) COLLATE BINARY GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0;
SELECT rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM rt1 RIGHT OUTER JOIN t0 ON ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)) COLLATE BINARY WHERE ((((NOT (rt1.c1))) IS TRUE)) GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0 UNION SELECT rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM rt1 RIGHT OUTER JOIN t0 ON ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)) COLLATE BINARY WHERE ((NOT ((((NOT (rt1.c1))) IS TRUE)))) GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0 UNION SELECT rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM rt1 RIGHT OUTER JOIN t0 ON ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)) COLLATE BINARY WHERE ((((((NOT (rt1.c1))) IS TRUE)) ISNULL)) GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM rt1 RIGHT OUTER JOIN t0 ON ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)) COLLATE BINARY GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0;
SELECT ALL rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY rt1.c2, rt1.c1 HAVING ((TOTAL(rt1.c0)) ISNULL) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (((TOTAL(rt1.c0)) ISNULL))) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY rt1.c2, rt1.c1 HAVING ((((TOTAL(rt1.c0)) ISNULL)) ISNULL);
SELECT ALL rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY rt1.c2, rt1.c1 HAVING ((TOTAL(rt1.c0)) ISNULL) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (((TOTAL(rt1.c0)) ISNULL))) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY rt1.c2, rt1.c1 HAVING ((((TOTAL(rt1.c0)) ISNULL)) ISNULL);
SELECT ALL rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY rt1.c2, rt1.c1;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0) IS FALSE)) NOT BETWEEN (t0.c0) AND (((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) IS FALSE)) NOT BETWEEN (t0.c0) AND (((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((((t0.c0) IS FALSE)) NOT BETWEEN (t0.c0) AND (((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, t0.c0 FROM t0, rt1;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, t0.c0 FROM t0, rt1 WHERE (x'a4fc') UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, t0.c0 FROM t0, rt1 WHERE ((NOT (x'a4fc'))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, t0.c0 FROM t0, rt1 WHERE (((x'a4fc') ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, t0.c0 FROM t0, rt1;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((((rt1.c2) NOT NULL))) AND ((((rt1.c2)<<(rt1.c1)))))) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT ((((rt1.c1)) BETWEEN ((((rt1.c2) NOT NULL))) AND ((((rt1.c2)<<(rt1.c1)))))))) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE ((((((rt1.c1)) BETWEEN ((((rt1.c2) NOT NULL))) AND ((((rt1.c2)<<(rt1.c1)))))) ISNULL)) GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING MAX((SUM(rt1.c1) IN (COUNT(*), MAX(rt1.c0)))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (MAX((SUM(rt1.c1) IN (COUNT(*), MAX(rt1.c0)))))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((MAX((SUM(rt1.c1) IN (COUNT(*), MAX(rt1.c0))))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((t0.c0)||(t0.c0)) COLLATE BINARY) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((t0.c0)||(t0.c0)) COLLATE BINARY))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((t0.c0)||(t0.c0)) COLLATE BINARY) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c0 FROM rt1 WHERE ('f⩤5c킰!b)_' COLLATE RTRIM) UNION SELECT DISTINCT rt1.c0 FROM rt1 WHERE ((NOT ('f⩤5c킰!b)_' COLLATE RTRIM))) UNION SELECT DISTINCT rt1.c0 FROM rt1 WHERE ((('f⩤5c킰!b)_' COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt1.c0 FROM rt1;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 WHERE ((((rt1.c1) NOT NULL) IN (CASE WHEN rt1.c1 THEN rt1.c0 END))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT ((((rt1.c1) NOT NULL) IN (CASE WHEN rt1.c1 THEN rt1.c0 END))))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE ((((((rt1.c1) NOT NULL) IN (CASE WHEN rt1.c1 THEN rt1.c0 END))) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING TRIM(SUM(rt1.c0)) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (TRIM(SUM(rt1.c0)))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING ((TRIM(SUM(rt1.c0))) ISNULL);
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING TRIM(SUM(rt1.c0)) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (TRIM(SUM(rt1.c0)))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING ((TRIM(SUM(rt1.c0))) ISNULL);
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (CAST(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END AS INTEGER)) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (CAST(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END AS INTEGER)))) UNION ALL SELECT * FROM rt1 WHERE (((CAST(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END AS INTEGER)) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1 WHERE (CAST((+ (rt1.c1)) AS INTEGER)) UNION SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (CAST((+ (rt1.c1)) AS INTEGER)))) UNION SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1 WHERE (((CAST((+ (rt1.c1)) AS INTEGER)) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1;
SELECT rt1.c2, t0.c0, rt1.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0, rt1.c0;
SELECT ALL rt1.c2, t0.c0, rt1.c0 FROM rt1, t0 WHERE (t0.c0) GROUP BY rt1.c2, t0.c0, rt1.c0 UNION SELECT ALL rt1.c2, t0.c0, rt1.c0 FROM rt1, t0 WHERE ((NOT (t0.c0))) GROUP BY rt1.c2, t0.c0, rt1.c0 UNION SELECT rt1.c2, t0.c0, rt1.c0 FROM rt1, t0 WHERE (((t0.c0) ISNULL)) GROUP BY rt1.c2, t0.c0, rt1.c0;
SELECT rt1.c2, t0.c0, rt1.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0, rt1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT((~ (t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT((~ (t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT((~ (t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT((~ (t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT((~ (t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT((~ (t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((NOT ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((NOT ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((- (rt1.c0))) NOT BETWEEN (((rt1.c0)<(rt1.c2))) AND (rt1.c1))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((- (rt1.c0))) NOT BETWEEN (((rt1.c0)<(rt1.c2))) AND (rt1.c1))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((- (rt1.c0))) NOT BETWEEN (((rt1.c0)<(rt1.c2))) AND (rt1.c1))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c2, rt1.c0, t0.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, t0.c0, rt1.c1 FROM t0, rt1 WHERE ((((rt1.c2) NOT BETWEEN (rt1.c2) AND ('qz')) IN (CASE WHEN rt1.c0 THEN t0.c0 END))) GROUP BY rt1.c2, rt1.c0, t0.c0, rt1.c1 UNION SELECT rt1.c2, rt1.c0, t0.c0, rt1.c1 FROM t0, rt1 WHERE ((NOT ((((rt1.c2) NOT BETWEEN (rt1.c2) AND ('qz')) IN (CASE WHEN rt1.c0 THEN t0.c0 END))))) GROUP BY rt1.c2, rt1.c0, t0.c0, rt1.c1 UNION SELECT rt1.c2, rt1.c0, t0.c0, rt1.c1 FROM t0, rt1 WHERE ((((((rt1.c2) NOT BETWEEN (rt1.c2) AND ('qz')) IN (CASE WHEN rt1.c0 THEN t0.c0 END))) ISNULL)) GROUP BY rt1.c2, rt1.c0, t0.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, t0.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c0, rt1.c1;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING GROUP_CONCAT(MAX(0.3767274928215545)) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING (NOT (GROUP_CONCAT(MAX(0.3767274928215545)))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING ((GROUP_CONCAT(MAX(0.3767274928215545))) ISNULL);
SELECT ALL * FROM rt1 INNER JOIN t0 ON CASE WHEN ((((rt1.c0)OR(t0.c0)))OR(rt1.c2)) THEN ((t0.c0) NOTNULL) WHEN ((t0.c0) IS TRUE) THEN (rt1.c2 IN ()) WHEN rt1.c2 THEN CASE WHEN rt1.c2 THEN NULL WHEN rt1.c2 THEN t0.c0 WHEN rt1.c1 THEN 0.43135425595473886 WHEN rt1.c1 THEN NULL WHEN t0.c0 THEN rt1.c1 ELSE NULL END ELSE (- (t0.c0)) END;
SELECT ALL * FROM rt1 INNER JOIN t0 ON CASE WHEN ((((rt1.c0)OR(t0.c0)))OR(rt1.c2)) THEN ((t0.c0) NOTNULL) WHEN ((t0.c0) IS TRUE) THEN (rt1.c2 IN ()) WHEN rt1.c2 THEN CASE WHEN rt1.c2 THEN NULL WHEN rt1.c2 THEN t0.c0 WHEN rt1.c1 THEN 0.43135425595473886 WHEN rt1.c1 THEN NULL WHEN t0.c0 THEN rt1.c1 ELSE NULL END ELSE (- (t0.c0)) END WHERE ((~ (((6.17758939E8)==(rt1.c2))))) UNION ALL SELECT ALL * FROM rt1 INNER JOIN t0 ON CASE WHEN ((((rt1.c0)OR(t0.c0)))OR(rt1.c2)) THEN ((t0.c0) NOTNULL) WHEN ((t0.c0) IS TRUE) THEN (rt1.c2 IN ()) WHEN rt1.c2 THEN CASE WHEN rt1.c2 THEN NULL WHEN rt1.c2 THEN t0.c0 WHEN rt1.c1 THEN 0.43135425595473886 WHEN rt1.c1 THEN NULL WHEN t0.c0 THEN rt1.c1 ELSE NULL END ELSE (- (t0.c0)) END WHERE ((NOT ((~ (((6.17758939E8)=(rt1.c2))))))) UNION ALL SELECT ALL * FROM rt1 INNER JOIN t0 ON CASE WHEN ((((rt1.c0)OR(t0.c0)))OR(rt1.c2)) THEN ((t0.c0) NOTNULL) WHEN ((t0.c0) IS TRUE) THEN (rt1.c2 IN ()) WHEN rt1.c2 THEN CASE WHEN rt1.c2 THEN NULL WHEN rt1.c2 THEN t0.c0 WHEN rt1.c1 THEN 0.43135425595473886 WHEN rt1.c1 THEN NULL WHEN t0.c0 THEN rt1.c1 ELSE NULL END ELSE (- (t0.c0)) END WHERE ((((~ (((6.17758939E8)=(rt1.c2))))) ISNULL));
SELECT ALL * FROM rt1 INNER JOIN t0 ON CASE WHEN ((((rt1.c0)OR(t0.c0)))OR(rt1.c2)) THEN ((t0.c0) NOTNULL) WHEN ((t0.c0) IS TRUE) THEN (rt1.c2 IN ()) WHEN rt1.c2 THEN CASE WHEN rt1.c2 THEN NULL WHEN rt1.c2 THEN t0.c0 WHEN rt1.c1 THEN 0.43135425595473886 WHEN rt1.c1 THEN NULL WHEN t0.c0 THEN rt1.c1 ELSE NULL END ELSE (- (t0.c0)) END;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c0)GLOB(rt1.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((rt1.c0)GLOB(rt1.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c0)GLOB(rt1.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 WHERE (((rt1.c2)||(rt1.c1)) COLLATE BINARY) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT (((rt1.c2)||(rt1.c1)) COLLATE BINARY))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE (((((rt1.c2)||(rt1.c1)) COLLATE BINARY) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM t0, rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM t0, rt1 GROUP BY rt1.c2 HAVING GROUP_CONCAT(((((COUNT(0Xffffffff8be078f9))OR(TOTAL(MAX(rt1.c2)))))AND(rt1.c1))) UNION ALL SELECT ALL rt1.c2 FROM t0, rt1 GROUP BY rt1.c2 HAVING (NOT (GROUP_CONCAT(((((COUNT(0Xffffffff8be078f9))OR(TOTAL(MAX(rt1.c2)))))AND(rt1.c1))))) UNION ALL SELECT ALL rt1.c2 FROM t0, rt1 GROUP BY rt1.c2 HAVING ((GROUP_CONCAT(((((COUNT(0xffffffff8be078f9))OR(TOTAL(MAX(rt1.c2)))))AND(rt1.c1)))) ISNULL);
SELECT * FROM rt1, t0;
SELECT ALL * FROM rt1, t0 WHERE (rt1.c0) UNION ALL SELECT ALL * FROM rt1, t0 WHERE ((NOT (rt1.c0))) UNION ALL SELECT ALL * FROM rt1, t0 WHERE (((rt1.c0) ISNULL));
SELECT * FROM rt1, t0;
SELECT DISTINCT rt1.c1 FROM t0, rt1;
SELECT DISTINCT rt1.c1 FROM t0, rt1 WHERE (x'') UNION SELECT DISTINCT rt1.c1 FROM t0, rt1 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt1.c1 FROM t0, rt1 WHERE (((x'') ISNULL));
SELECT DISTINCT rt1.c1 FROM t0, rt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM t0 CROSS JOIN rt1 ON ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c0)))AND(((0.931204495467945)*(t0.c0)))))AND((- (rt1.c0)))) GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c2;
SELECT t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM t0 CROSS JOIN rt1 ON ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c0)))AND(((0.931204495467945)*(t0.c0)))))AND((- (rt1.c0)))) GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING (MIN(MAX(rt1.c1)) IN ()) UNION ALL SELECT t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM t0 CROSS JOIN rt1 ON ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c0)))AND(((0.931204495467945)*(t0.c0)))))AND((- (rt1.c0)))) GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING (NOT ((MIN(MAX(rt1.c1)) IN ()))) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM t0 CROSS JOIN rt1 ON ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c0)))AND(((0.931204495467945)*(t0.c0)))))AND((- (rt1.c0)))) GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING (((MIN(MAX(rt1.c1)) IN ())) ISNULL);
SELECT ALL t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM t0 CROSS JOIN rt1 ON ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c0)))AND(((0.931204495467945)*(t0.c0)))))AND((- (rt1.c0)))) GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c2;
SELECT t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM t0 CROSS JOIN rt1 ON ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c0)))AND(((0.931204495467945)*(t0.c0)))))AND((- (rt1.c0)))) GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING (MIN(MAX(rt1.c1)) IN ()) UNION ALL SELECT t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM t0 CROSS JOIN rt1 ON ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c0)))AND(((0.931204495467945)*(t0.c0)))))AND((- (rt1.c0)))) GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING (NOT ((MIN(MAX(rt1.c1)) IN ()))) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM t0 CROSS JOIN rt1 ON ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c0)))AND(((0.931204495467945)*(t0.c0)))))AND((- (rt1.c0)))) GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING (((MIN(MAX(rt1.c1)) IN ())) ISNULL);
SELECT ALL t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM t0 CROSS JOIN rt1 ON ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c0)))AND(((0.931204495467945)*(t0.c0)))))AND((- (rt1.c0)))) GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c2;
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST('' AS INTEGER)) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (CAST('' AS INTEGER)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((CAST('' AS INTEGER)) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c2 FROM rt1 WHERE (1590302594) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE ((NOT (1590302594))) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE (((1590302594) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ('-748667955') GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ('-748667955'))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((('-748667955') ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING ((AVG(rt1.c1))GLOB(TOTAL(TOTAL(COUNT(*))))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING (NOT (((AVG(rt1.c1))GLOB(TOTAL(TOTAL(COUNT(*))))))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING ((((AVG(rt1.c1))GLOB(TOTAL(TOTAL(COUNT(*)))))) ISNULL);
SELECT ALL * FROM rt1 NATURAL JOIN t0;
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (rt1.c1) UNION ALL SELECT ALL * FROM rt1 NATURAL JOIN t0 WHERE ((NOT (rt1.c1))) UNION ALL SELECT ALL * FROM rt1 NATURAL JOIN t0 WHERE (((rt1.c1) ISNULL));
SELECT ALL * FROM rt1 NATURAL JOIN t0;
SELECT DISTINCT rt1.c1, t0.c0, rt1.c2, rt1.c0 FROM rt1, t0;
SELECT DISTINCT rt1.c1, t0.c0, rt1.c2, rt1.c0 FROM rt1, t0 WHERE ((((((rt1.c0))<((t0.c0)))) NOT BETWEEN (((rt1.c1)-(t0.c0))) AND (((rt1.c1)>=(t0.c0))))) UNION SELECT DISTINCT rt1.c1, t0.c0, rt1.c2, rt1.c0 FROM rt1, t0 WHERE ((NOT ((((((rt1.c0))<((t0.c0)))) NOT BETWEEN (((rt1.c1)-(t0.c0))) AND (((rt1.c1)>=(t0.c0))))))) UNION SELECT DISTINCT rt1.c1, t0.c0, rt1.c2, rt1.c0 FROM rt1, t0 WHERE ((((((((rt1.c0))<((t0.c0)))) NOT BETWEEN (((rt1.c1)-(t0.c0))) AND (((rt1.c1)>=(t0.c0))))) ISNULL));
SELECT DISTINCT rt1.c1, t0.c0, rt1.c2, rt1.c0 FROM rt1, t0;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((- (rt1.c0)) COLLATE RTRIM) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT ((- (rt1.c0)) COLLATE RTRIM))) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((((- (rt1.c0)) COLLATE RTRIM) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(TOTAL(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(TOTAL(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(TOTAL(t0.c0))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0 IN ())) NOT BETWEEN ((t0.c0 IN ())) AND (IFNULL(t0.c0, t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0 IN ())) NOT BETWEEN ((t0.c0 IN ())) AND (IFNULL(t0.c0, t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((((t0.c0 IN ())) NOT BETWEEN ((t0.c0 IN ())) AND (IFNULL(t0.c0, t0.c0)))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0 CROSS JOIN rt1 ON ((((rt1.c0 COLLATE NOCASE)AND(CASE x''  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)))AND(((rt1.c1)AND(t0.c0))));
SELECT DISTINCT * FROM t0 CROSS JOIN rt1 ON ((((rt1.c0 COLLATE NOCASE)AND(CASE x''  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)))AND(((rt1.c1)AND(t0.c0)))) WHERE (CAST((~ (t0.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM t0 CROSS JOIN rt1 ON ((((rt1.c0 COLLATE NOCASE)AND(CASE x''  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)))AND(((rt1.c1)AND(t0.c0)))) WHERE ((NOT (CAST((~ (t0.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN rt1 ON ((((rt1.c0 COLLATE NOCASE)AND(CASE x''  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)))AND(((rt1.c1)AND(t0.c0)))) WHERE (((CAST((~ (t0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN rt1 ON ((((rt1.c0 COLLATE NOCASE)AND(CASE x''  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)))AND(((rt1.c1)AND(t0.c0))));
SELECT rt1.c2 FROM rt1, t0 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1, t0 WHERE (TYPEOF(DISTINCT LIKELY(rt1.c0))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1, t0 WHERE ((NOT (TYPEOF(DISTINCT LIKELY(rt1.c0))))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1, t0 WHERE (((TYPEOF(DISTINCT LIKELY(rt1.c0))) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1, t0 GROUP BY rt1.c2;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING CASE AVG(rt1.c0)  WHEN COUNT(*) THEN AVG(MIN(AVG(rt1.c1))) ELSE ((rt1.c1)GLOB(MAX(rt1.c2))) END UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (CASE AVG(rt1.c0)  WHEN COUNT(*) THEN AVG(MIN(AVG(rt1.c1))) ELSE ((rt1.c1)GLOB(MAX(rt1.c2))) END)) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((CASE AVG(rt1.c0)  WHEN COUNT(*) THEN AVG(MIN(AVG(rt1.c1))) ELSE ((rt1.c1)GLOB(MAX(rt1.c2))) END) ISNULL);
SELECT ALL rt1.c1 FROM rt1 CROSS JOIN t0 ON (((rt1.c0)) BETWEEN ((CAST(rt1.c0 AS REAL))) AND ((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT rt1.c1 FROM rt1 CROSS JOIN t0 ON (((rt1.c0)) BETWEEN ((CAST(rt1.c0 AS REAL))) AND ((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2))))) WHERE (x'') UNION ALL SELECT rt1.c1 FROM rt1 CROSS JOIN t0 ON (((rt1.c0)) BETWEEN ((CAST(rt1.c0 AS REAL))) AND ((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2))))) WHERE ((NOT (x''))) UNION ALL SELECT ALL rt1.c1 FROM rt1 CROSS JOIN t0 ON (((rt1.c0)) BETWEEN ((CAST(rt1.c0 AS REAL))) AND ((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2))))) WHERE (((x'') ISNULL));
SELECT ALL rt1.c1 FROM rt1 CROSS JOIN t0 ON (((rt1.c0)) BETWEEN ((CAST(rt1.c0 AS REAL))) AND ((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT DISTINCT t0.c0, rt1.c1 FROM t0 CROSS JOIN rt1 ON CAST(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN '1727791571' THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 END AS INTEGER);
SELECT DISTINCT t0.c0, rt1.c1 FROM t0 CROSS JOIN rt1 ON CAST(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN '1727791571' THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 END AS INTEGER) WHERE (((t0.c0) IS TRUE)) UNION SELECT DISTINCT t0.c0, rt1.c1 FROM t0 CROSS JOIN rt1 ON CAST(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN '1727791571' THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 END AS INTEGER) WHERE ((NOT (((t0.c0) IS TRUE)))) UNION SELECT DISTINCT t0.c0, rt1.c1 FROM t0 CROSS JOIN rt1 ON CAST(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN '1727791571' THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 END AS INTEGER) WHERE (((((t0.c0) IS TRUE)) ISNULL));
SELECT DISTINCT t0.c0, rt1.c1 FROM t0 CROSS JOIN rt1 ON CAST(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN '1727791571' THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 END AS INTEGER);
SELECT rt1.c2 FROM rt1, t0 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1, t0 WHERE (IFNULL(0.881062551519071, x'5359')) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1, t0 WHERE ((NOT (IFNULL(0.881062551519071, x'5359')))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1, t0 WHERE (((IFNULL(0.881062551519071, x'5359')) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1, t0 GROUP BY rt1.c2;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING (GROUP_CONCAT(SUM(rt1.c2)) IN (AVG(0.5111802891181537))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING (NOT ((GROUP_CONCAT(SUM(rt1.c2)) IN (AVG(0.5111802891181537))))) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING (((GROUP_CONCAT(SUM(rt1.c2)) IN (AVG(0.5111802891181537)))) ISNULL);
SELECT t0.c0, rt1.c1, rt1.c0 FROM rt1, t0;
SELECT t0.c0, rt1.c1, rt1.c0 FROM rt1, t0 WHERE (CAST(((rt1.c0)>(rt1.c2)) AS NUMERIC)) ORDER BY (((rt1.c0, rt1.c2, rt1.c0))=((rt1.c0, rt1.c2, rt1.c0))) COLLATE RTRIM  NULLS FIRST;
SELECT t0.c0, rt1.c1, rt1.c0 FROM rt1, t0 WHERE ((NOT (CAST(((rt1.c0)>(rt1.c2)) AS NUMERIC)))) ORDER BY (((rt1.c0, rt1.c2, rt1.c0))=((rt1.c0, rt1.c2, rt1.c0))) COLLATE RTRIM  NULLS FIRST;
SELECT ALL t0.c0, rt1.c1, rt1.c0 FROM rt1, t0 WHERE (((CAST(((rt1.c0)>(rt1.c2)) AS NUMERIC)) ISNULL)) ORDER BY (((rt1.c0, rt1.c2, rt1.c0))=((rt1.c0, rt1.c2, rt1.c0))) COLLATE RTRIM  NULLS FIRST;
SELECT t0.c0, rt1.c1, rt1.c0 FROM rt1, t0;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (rt1.c2) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT ALL t0.c0, rt1.c0, rt1.c1 FROM t0 NOT INDEXED, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1;
SELECT ALL t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 WHERE (((((NULL)-(t0.c0)))=(((((rt1.c2)OR(rt1.c0)))AND(rt1.c1))))) GROUP BY t0.c0, rt1.c0, rt1.c1 UNION SELECT t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 WHERE ((NOT (((((NULL)-(t0.c0)))==(((((rt1.c2)OR(rt1.c0)))AND(rt1.c1))))))) GROUP BY t0.c0, rt1.c0, rt1.c1 UNION SELECT ALL t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 WHERE (((((((NULL)-(t0.c0)))=(((((rt1.c2)OR(rt1.c0)))AND(rt1.c1))))) ISNULL)) GROUP BY t0.c0, rt1.c0, rt1.c1;
SELECT ALL t0.c0, rt1.c0, rt1.c1 FROM t0 NOT INDEXED, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1;
SELECT rt1.c0, t0.c0, rt1.c2 FROM rt1 INDEXED BY i31, t0 GROUP BY rt1.c0, t0.c0, rt1.c2;
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE ((~ (x''))) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((~ (x''))))) UNION ALL SELECT * FROM rt1 WHERE ((((~ (x''))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((('1590302594')IS(rt1.c1)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((('1590302594')IS(rt1.c1)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((('1590302594')IS(rt1.c1)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE ((t0.c0)<=(0.25238464236676506))  WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN ((((425952264)OR(t0.c0)))AND(t0.c0)) WHEN (~ (t0.c0)) THEN CAST(t0.c0 AS NUMERIC) WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0)<(t0.c0)) ELSE CASE x''  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0xffffffff94eb4cd3 END END) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE ((t0.c0)<=(0.25238464236676506))  WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN ((((425952264)OR(t0.c0)))AND(t0.c0)) WHEN (~ (t0.c0)) THEN CAST(t0.c0 AS NUMERIC) WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0)<(t0.c0)) ELSE CASE x''  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0Xffffffff94eb4cd3 END END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CASE ((t0.c0)<=(0.25238464236676506))  WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN ((((425952264)OR(t0.c0)))AND(t0.c0)) WHEN (~ (t0.c0)) THEN CAST(t0.c0 AS NUMERIC) WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0)<(t0.c0)) ELSE CASE x''  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0xffffffff94eb4cd3 END END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT * FROM rt1, t0;
SELECT * FROM rt1, t0 WHERE (((((t0.c0)OR(0.9545398112484889)))OR('-619289647')) COLLATE NOCASE) UNION ALL SELECT * FROM rt1, t0 WHERE ((NOT (((((t0.c0)OR(0.9545398112484889)))OR('-619289647')) COLLATE NOCASE))) UNION ALL SELECT * FROM rt1, t0 WHERE (((((((t0.c0)OR(0.9545398112484889)))OR('-619289647')) COLLATE NOCASE) ISNULL));
SELECT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))>>(SUBSTR(rt1.c2, rt1.c0)))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))>>(SUBSTR(rt1.c2, rt1.c0)))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))>>(SUBSTR(rt1.c2, rt1.c0)))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM t0 LEFT OUTER JOIN rt1 ON ((t0.c0)GLOB(rt1.c1)) COLLATE RTRIM GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM t0 LEFT OUTER JOIN rt1 ON ((t0.c0)GLOB(rt1.c1)) COLLATE RTRIM WHERE (CAST((rt1.c2 IN ()) AS BLOB)) GROUP BY rt1.c0, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM t0 LEFT OUTER JOIN rt1 ON ((t0.c0)GLOB(rt1.c1)) COLLATE RTRIM WHERE ((NOT (CAST((rt1.c2 IN ()) AS BLOB)))) GROUP BY rt1.c0, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM t0 LEFT OUTER JOIN rt1 ON ((t0.c0)GLOB(rt1.c1)) COLLATE RTRIM WHERE (((CAST((rt1.c2 IN ()) AS BLOB)) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM t0 LEFT OUTER JOIN rt1 ON ((t0.c0)GLOB(rt1.c1)) COLLATE RTRIM GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(AVG('848365610')) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(AVG('848365610')))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(AVG('848365610'))) ISNULL);
SELECT * FROM rt1 NOT INDEXED RIGHT OUTER JOIN t0 ON CASE WHEN ((((((((((((((((t0.c0)AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c1)))AND(t0.c0)))AND(t0.c0)))AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c0)) THEN rt1.c0 WHEN ((rt1.c1) IS FALSE) THEN CASE WHEN 0Xffffffffd3603bcd THEN t0.c0 END WHEN ((('-1948223239')) NOT BETWEEN ((t0.c0)) AND ((rt1.c2))) THEN rt1.c2 COLLATE BINARY ELSE (((rt1.c0, '1483105899', '1411785621'))>=((rt1.c2, rt1.c0, rt1.c2))) END;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN t0 ON CASE WHEN ((((((((((((((((t0.c0)AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c1)))AND(t0.c0)))AND(t0.c0)))AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c0)) THEN rt1.c0 WHEN ((rt1.c1) IS FALSE) THEN CASE WHEN 0Xffffffffd3603bcd THEN t0.c0 END WHEN ((('-1948223239')) NOT BETWEEN ((t0.c0)) AND ((rt1.c2))) THEN rt1.c2 COLLATE BINARY ELSE (((rt1.c0, '1483105899', '1411785621'))>=((rt1.c2, rt1.c0, rt1.c2))) END WHERE ((((NOT (rt1.c0))) BETWEEN (MAX(rt1.c2, rt1.c1)) AND (((0.33728250703033424) NOT NULL)))) UNION ALL SELECT * FROM rt1 RIGHT OUTER JOIN t0 ON CASE WHEN ((((((((((((((((t0.c0)AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c1)))AND(t0.c0)))AND(t0.c0)))AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c0)) THEN rt1.c0 WHEN ((rt1.c1) IS FALSE) THEN CASE WHEN 0xffffffffd3603bcd THEN t0.c0 END WHEN ((('-1948223239')) NOT BETWEEN ((t0.c0)) AND ((rt1.c2))) THEN rt1.c2 COLLATE BINARY ELSE (((rt1.c0, '1483105899', '1411785621'))>=((rt1.c2, rt1.c0, rt1.c2))) END WHERE ((NOT ((((NOT (rt1.c0))) BETWEEN (MAX(rt1.c2, rt1.c1)) AND (((0.33728250703033424) NOT NULL)))))) UNION ALL SELECT ALL * FROM rt1 RIGHT OUTER JOIN t0 ON CASE WHEN ((((((((((((((((t0.c0)AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c1)))AND(t0.c0)))AND(t0.c0)))AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c0)) THEN rt1.c0 WHEN ((rt1.c1) IS FALSE) THEN CASE WHEN 0xffffffffd3603bcd THEN t0.c0 END WHEN ((('-1948223239')) NOT BETWEEN ((t0.c0)) AND ((rt1.c2))) THEN rt1.c2 COLLATE BINARY ELSE (((rt1.c0, '1483105899', '1411785621'))>=((rt1.c2, rt1.c0, rt1.c2))) END WHERE ((((((NOT (rt1.c0))) BETWEEN (MAX(rt1.c2, rt1.c1)) AND (((0.33728250703033424) NOT NULL)))) ISNULL));
SELECT * FROM rt1 NOT INDEXED RIGHT OUTER JOIN t0 ON CASE WHEN ((((((((((((((((t0.c0)AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c1)))AND(t0.c0)))AND(t0.c0)))AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c0)) THEN rt1.c0 WHEN ((rt1.c1) IS FALSE) THEN CASE WHEN 0Xffffffffd3603bcd THEN t0.c0 END WHEN ((('-1948223239')) NOT BETWEEN ((t0.c0)) AND ((rt1.c2))) THEN rt1.c2 COLLATE BINARY ELSE (((rt1.c0, '1483105899', '1411785621'))>=((rt1.c2, rt1.c0, rt1.c2))) END;
SELECT DISTINCT rt1.c0 FROM t0, rt1;
SELECT DISTINCT rt1.c0 FROM t0, rt1 WHERE (CASE (~ (0.16551876983916458))  WHEN (+ (rt1.c0)) THEN IFNULL(rt1.c1, rt1.c1) WHEN (rt1.c0 IN (t0.c0)) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN ((rt1.c1)<=(rt1.c2)) THEN 'x嵥' END) UNION SELECT DISTINCT rt1.c0 FROM t0, rt1 WHERE ((NOT (CASE (~ (0.16551876983916458))  WHEN (+ (rt1.c0)) THEN IFNULL(rt1.c1, rt1.c1) WHEN (rt1.c0 IN (t0.c0)) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN ((rt1.c1)<=(rt1.c2)) THEN 'x嵥' END))) UNION SELECT DISTINCT rt1.c0 FROM t0, rt1 WHERE (((CASE (~ (0.16551876983916458))  WHEN (+ (rt1.c0)) THEN IFNULL(rt1.c1, rt1.c1) WHEN (rt1.c0 IN (t0.c0)) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN ((rt1.c1)<=(rt1.c2)) THEN 'x嵥' END) ISNULL));
SELECT DISTINCT rt1.c0 FROM t0, rt1;
SELECT ALL t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c2;
SELECT t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1, t0 WHERE (CAST(((rt1.c2)AND('')) AS REAL)) GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c2 UNION SELECT t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1, t0 WHERE ((NOT (CAST(((rt1.c2)AND('')) AS REAL)))) GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c2 UNION SELECT ALL t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1, t0 WHERE (((CAST(((rt1.c2)AND('')) AS REAL)) ISNULL)) GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c2;
SELECT ALL t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1 HAVING COUNT(AVG(GROUP_CONCAT(MIN(rt1.c0)))) UNION ALL SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1 HAVING (NOT (COUNT(AVG(GROUP_CONCAT(MIN(rt1.c0)))))) UNION ALL SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1 HAVING ((COUNT(AVG(GROUP_CONCAT(MIN(rt1.c0))))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (UPPER(DISTINCT CASE t0.c0  WHEN x'' THEN t0.c0 ELSE t0.c0 END)) UNION ALL SELECT * FROM t0 WHERE ((NOT (UPPER(DISTINCT CASE t0.c0  WHEN x'' THEN t0.c0 ELSE t0.c0 END)))) UNION ALL SELECT * FROM t0 WHERE (((UPPER(DISTINCT CASE t0.c0  WHEN x'' THEN t0.c0 ELSE t0.c0 END)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0 NOT INDEXED, rt1 WHERE ((NOT ((NOT (rt1.c2))))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT ((NOT ((NOT (rt1.c2))))))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((((NOT ((NOT (rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE ((t0.c0)LIKE(t0.c0))  WHEN 8.4836561E8 THEN (t0.c0 IN ()) ELSE 0xffffffffd98f6fa7 COLLATE BINARY END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CASE ((t0.c0)LIKE(t0.c0))  WHEN 8.4836561E8 THEN (t0.c0 IN ()) ELSE 0xffffffffd98f6fa7 COLLATE BINARY END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CASE ((t0.c0)LIKE(t0.c0))  WHEN 8.4836561E8 THEN (t0.c0 IN ()) ELSE 0xffffffffd98f6fa7 COLLATE BINARY END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((((COUNT(*))AND(COUNT(*))))OR((((rt1.c1)) NOT BETWEEN ((AVG(rt1.c2))) AND (('{xW'))))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (((((COUNT(*))AND(COUNT(*))))OR((((rt1.c1)) NOT BETWEEN ((AVG(rt1.c2))) AND (('{xW'))))))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((((((COUNT(*))AND(COUNT(*))))OR((((rt1.c1)) NOT BETWEEN ((AVG(rt1.c2))) AND (('{xW')))))) ISNULL);
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((((COUNT(*))AND(COUNT(*))))OR((((rt1.c1)) NOT BETWEEN ((AVG(rt1.c2))) AND (('{xW'))))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (((((COUNT(*))AND(COUNT(*))))OR((((rt1.c1)) NOT BETWEEN ((AVG(rt1.c2))) AND (('{xW'))))))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((((((COUNT(*))AND(COUNT(*))))OR((((rt1.c1)) NOT BETWEEN ((AVG(rt1.c2))) AND (('{xW')))))) ISNULL);
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((((t0.c0)!=(t0.c0)))GLOB(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c0)<>(t0.c0)))GLOB(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((t0.c0)<>(t0.c0)))GLOB(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE ((CAST(rt1.c0 AS INTEGER) IN (rt1.c2, ((rt1.c0)!=(rt1.c0))))) UNION SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT ((CAST(rt1.c0 AS INTEGER) IN (rt1.c2, ((rt1.c0)<>(rt1.c0))))))) UNION SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE ((((CAST(rt1.c0 AS INTEGER) IN (rt1.c2, ((rt1.c0)<>(rt1.c0))))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ('9~(o6wr' COLLATE RTRIM) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ('9~(o6wr' COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((('9~(o6wr' COLLATE RTRIM) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt1.c0, rt1.c2, t0.c0 FROM t0 RIGHT OUTER JOIN rt1 ON CASE WHEN ((rt1.c0) NOTNULL) THEN json_extract(rt1.c2, rt1.c2, 0xffffffffe3575738, rt1.c1) ELSE ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)) END GROUP BY rt1.c0, rt1.c2, t0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST(0.2471927633591927 AS INTEGER)) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(0.2471927633591927 AS INTEGER)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((CAST(0.2471927633591927 AS INTEGER)) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((NOT (rt1.c1))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))) AND (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 END))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((NOT (rt1.c1))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))) AND (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 END))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((NOT (rt1.c1))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))) AND (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE (((rt1.c2)>=(rt1.c2 COLLATE RTRIM))) GROUP BY rt1.c2, rt1.c0 UNION SELECT rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (((rt1.c2)>=(rt1.c2 COLLATE RTRIM))))) GROUP BY rt1.c2, rt1.c0 UNION SELECT rt1.c2, rt1.c0 FROM rt1 WHERE (((((rt1.c2)>=(rt1.c2 COLLATE RTRIM))) ISNULL)) GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL t0.c0, rt1.c0, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c1;
SELECT t0.c0, rt1.c0, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c1 HAVING ((AVG(COUNT(*)))/(COUNT(rt1.c1))) UNION ALL SELECT t0.c0, rt1.c0, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c1 HAVING (NOT (((AVG(COUNT(*)))/(COUNT(rt1.c1))))) UNION ALL SELECT t0.c0, rt1.c0, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c1 HAVING ((((AVG(COUNT(*)))/(COUNT(rt1.c1)))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((t0.c0)LIKE(t0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((t0.c0)LIKE(t0.c0)) COLLATE RTRIM))) UNION ALL SELECT * FROM t0 WHERE (((((t0.c0)LIKE(t0.c0)) COLLATE RTRIM) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM rt1 NATURAL JOIN t0;
SELECT DISTINCT * FROM rt1 NATURAL JOIN t0 WHERE ((- (HEX(rt1.c0)))) UNION SELECT DISTINCT * FROM rt1 NATURAL JOIN t0 WHERE ((NOT ((- (HEX(rt1.c0)))))) UNION SELECT DISTINCT * FROM rt1 NATURAL JOIN t0 WHERE ((((- (HEX(rt1.c0)))) ISNULL));
SELECT DISTINCT * FROM rt1 NATURAL JOIN t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (NULLIF('', (~ (t0.c0)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (NULLIF('', (~ (t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((NULLIF('', (~ (t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt1.c1, rt1.c2, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c0;
SELECT rt1.c1, rt1.c2, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c0 HAVING ((((((rt1.c0)AND(COUNT(SUM(rt1.c0)))))AND(SUM(AVG(t0.c0))))) IS FALSE) UNION ALL SELECT ALL rt1.c1, rt1.c2, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c0 HAVING (NOT (((((((rt1.c0)AND(COUNT(SUM(rt1.c0)))))AND(SUM(AVG(t0.c0))))) IS FALSE))) UNION ALL SELECT rt1.c1, rt1.c2, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c0 HAVING ((((((((rt1.c0)AND(COUNT(SUM(rt1.c0)))))AND(SUM(AVG(t0.c0))))) IS FALSE)) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((t0.c0 IN (t0.c0)) IN ())) UNION ALL SELECT * FROM t0 WHERE ((NOT (((t0.c0 IN (t0.c0)) IN ())))) UNION ALL SELECT ALL * FROM t0 WHERE (((((t0.c0 IN (t0.c0)) IN ())) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((NULL COLLATE RTRIM) BETWEEN (SUBSTR(t0.c0, t0.c0)) AND (((((((((x'bd49')AND(t0.c0)))AND(0Xffffffffe783ce6e)))AND(t0.c0)))AND(t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((NULL COLLATE RTRIM) BETWEEN (SUBSTR(t0.c0, t0.c0)) AND (((((((((x'bd49')AND(t0.c0)))AND(0xffffffffe783ce6e)))AND(t0.c0)))AND(t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((NULL COLLATE RTRIM) BETWEEN (SUBSTR(t0.c0, t0.c0)) AND (((((((((x'bd49')AND(t0.c0)))AND(0xffffffffe783ce6e)))AND(t0.c0)))AND(t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1;
SELECT ALL t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 WHERE (CAST(((rt1.c0)|(rt1.c1)) AS TEXT)) GROUP BY t0.c0, rt1.c0, rt1.c1 UNION SELECT t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 WHERE ((NOT (CAST(((rt1.c0)|(rt1.c1)) AS TEXT)))) GROUP BY t0.c0, rt1.c0, rt1.c1 UNION SELECT t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 WHERE (((CAST(((rt1.c0)|(rt1.c1)) AS TEXT)) ISNULL)) GROUP BY t0.c0, rt1.c0, rt1.c1;
SELECT ALL t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL MIN(((((((-6.44911193E8)=(rt1.c2)))OR(LIKELIHOOD(DISTINCT rt1.c0, 0.7622187043428389))))AND(rt1.c0 COLLATE RTRIM))) FROM rt1, t0 ORDER BY ((CAST(rt1.c2 AS NUMERIC)) IS TRUE);
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((((rt1.c1) BETWEEN (x'') AND (rt1.c1)))) AND (((('ndV4+c?&')|(rt1.c0)))))) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT ((((rt1.c1)) BETWEEN ((((rt1.c1) BETWEEN (x'') AND (rt1.c1)))) AND (((('ndV4+c?&')|(rt1.c0)))))))) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((((((rt1.c1)) BETWEEN ((((rt1.c1) BETWEEN (x'') AND (rt1.c1)))) AND (((('ndV4+c?&')|(rt1.c0)))))) ISNULL));
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CAST(x'' AS INTEGER)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CAST(x'' AS INTEGER)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CAST(x'' AS INTEGER)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt1.c0, rt1.c2, t0.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c0, rt1.c2, t0.c0, rt1.c1;
SELECT rt1.c0, rt1.c2, t0.c0, rt1.c1 FROM t0, rt1 WHERE (CAST((rt1.c0 IN ()) AS NUMERIC)) GROUP BY rt1.c0, rt1.c2, t0.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c2, t0.c0, rt1.c1 FROM t0, rt1 WHERE ((NOT (CAST((rt1.c0 IN ()) AS NUMERIC)))) GROUP BY rt1.c0, rt1.c2, t0.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c2, t0.c0, rt1.c1 FROM t0, rt1 WHERE (((CAST((rt1.c0 IN ()) AS NUMERIC)) ISNULL)) GROUP BY rt1.c0, rt1.c2, t0.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, t0.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c0, rt1.c2, t0.c0, rt1.c1;
SELECT t0.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 GROUP BY t0.c0, rt1.c1, rt1.c2, rt1.c0;
SELECT t0.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 GROUP BY t0.c0, rt1.c1, rt1.c2, rt1.c0 HAVING MAX(SUM(COUNT(*))) UNION ALL SELECT ALL t0.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 GROUP BY t0.c0, rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (MAX(SUM(COUNT(*))))) UNION ALL SELECT t0.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 GROUP BY t0.c0, rt1.c1, rt1.c2, rt1.c0 HAVING ((MAX(SUM(COUNT(*)))) ISNULL);
SELECT ALL t0.c0, rt1.c2, rt1.c1 FROM t0, rt1;
SELECT t0.c0, rt1.c2, rt1.c1 FROM t0, rt1 WHERE ((- (json_quote(t0.c0)))) UNION ALL SELECT t0.c0, rt1.c2, rt1.c1 FROM t0, rt1 WHERE ((NOT ((- (json_quote(t0.c0)))))) UNION ALL SELECT t0.c0, rt1.c2, rt1.c1 FROM t0, rt1 WHERE ((((- (json_quote(t0.c0)))) ISNULL));
SELECT ALL t0.c0, rt1.c2, rt1.c1 FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (((((CAST(rt1.c0 AS INTEGER))OR(COALESCE(DISTINCT '', rt1.c2, rt1.c1, rt1.c2, rt1.c2, rt1.c0))))OR(((rt1.c0) IS TRUE)))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (((((CAST(rt1.c0 AS INTEGER))OR(COALESCE(DISTINCT '', rt1.c2, rt1.c1, rt1.c2, rt1.c2, rt1.c0))))OR(((rt1.c0) IS TRUE)))))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((((((CAST(rt1.c0 AS INTEGER))OR(COALESCE(DISTINCT '', rt1.c2, rt1.c1, rt1.c2, rt1.c2, rt1.c0))))OR(((rt1.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (GLOB(((t0.c0) ISNULL), ((t0.c0)>(t0.c0)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (GLOB(((t0.c0) ISNULL), ((t0.c0)>(t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((GLOB(((t0.c0) ISNULL), ((t0.c0)>(t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c1, rt1.c0, rt1.c2, t0.c0 FROM t0 NATURAL JOIN rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, t0.c0;
SELECT rt1.c1, rt1.c0, rt1.c2, t0.c0 FROM t0 NATURAL JOIN rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, t0.c0 HAVING ((((rt1.c0) BETWEEN (MAX(SUM(rt1.c0))) AND (MAX(rt1.c0)))) IS TRUE) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2, t0.c0 FROM t0 NATURAL JOIN rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, t0.c0 HAVING (NOT (((((rt1.c0) BETWEEN (MAX(SUM(rt1.c0))) AND (MAX(rt1.c0)))) IS TRUE))) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2, t0.c0 FROM t0 NATURAL JOIN rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, t0.c0 HAVING ((((((rt1.c0) BETWEEN (MAX(SUM(rt1.c0))) AND (MAX(rt1.c0)))) IS TRUE)) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (NULL) UNION ALL SELECT * FROM t0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM t0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)))AND(t0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT (((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)))AND(t0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE (((((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)))AND(t0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM rt1 WHERE (((rt1.c0 COLLATE RTRIM) NOT BETWEEN (((((rt1.c1)AND(rt1.c1)))AND(rt1.c1))) AND (((rt1.c0) NOT NULL)))) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (((rt1.c0 COLLATE RTRIM) NOT BETWEEN (((((rt1.c1)AND(rt1.c1)))AND(rt1.c1))) AND (((rt1.c0) NOT NULL)))))) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE (((((rt1.c0 COLLATE RTRIM) NOT BETWEEN (((((rt1.c1)AND(rt1.c1)))AND(rt1.c1))) AND (((rt1.c0) NOT NULL)))) ISNULL)) GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT rt1.c1 FROM rt1, t0;
SELECT rt1.c1 FROM rt1, t0 WHERE (rt1.c2) UNION ALL SELECT rt1.c1 FROM rt1, t0 WHERE ((NOT (rt1.c2))) UNION ALL SELECT ALL rt1.c1 FROM rt1, t0 WHERE (((rt1.c2) ISNULL));
SELECT rt1.c1 FROM rt1, t0;
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1 WHERE (LENGTH(((rt1.c2)&(rt1.c0)))) UNION SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (LENGTH(((rt1.c2)&(rt1.c0)))))) UNION SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1 WHERE (((LENGTH(((rt1.c2)&(rt1.c0)))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1;
SELECT t0.c0, rt1.c0 FROM t0, rt1 GROUP BY t0.c0, rt1.c0;
SELECT t0.c0, rt1.c0 FROM t0, rt1 WHERE (CASE WHEN CASE rt1.c0  WHEN NULL THEN rt1.c0 ELSE rt1.c1 END THEN CAST(t0.c0 AS INTEGER) WHEN (((rt1.c2))>((rt1.c1))) THEN (((t0.c0, rt1.c2, rt1.c2, rt1.c0, rt1.c1, rt1.c2, rt1.c1))<((rt1.c2, NULL, '-1588342111', rt1.c0, rt1.c1, rt1.c2, 1e500))) WHEN ((rt1.c1) IS FALSE) THEN (rt1.c1 IN ()) WHEN (('') NOT BETWEEN (t0.c0) AND (rt1.c0)) THEN LIKE(rt1.c0, t0.c0) WHEN ((rt1.c2)>>(0Xb6630ab)) THEN (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((t0.c0))) ELSE ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)) END) GROUP BY t0.c0, rt1.c0 UNION SELECT t0.c0, rt1.c0 FROM t0, rt1 WHERE ((NOT (CASE WHEN CASE rt1.c0  WHEN NULL THEN rt1.c0 ELSE rt1.c1 END THEN CAST(t0.c0 AS INTEGER) WHEN (((rt1.c2))>((rt1.c1))) THEN (((t0.c0, rt1.c2, rt1.c2, rt1.c0, rt1.c1, rt1.c2, rt1.c1))<((rt1.c2, NULL, '-1588342111', rt1.c0, rt1.c1, rt1.c2, 1e500))) WHEN ((rt1.c1) IS FALSE) THEN (rt1.c1 IN ()) WHEN (('') NOT BETWEEN (t0.c0) AND (rt1.c0)) THEN LIKE(rt1.c0, t0.c0) WHEN ((rt1.c2)>>(0xb6630ab)) THEN (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((t0.c0))) ELSE ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)) END))) GROUP BY t0.c0, rt1.c0 UNION SELECT ALL t0.c0, rt1.c0 FROM t0, rt1 WHERE (((CASE WHEN CASE rt1.c0  WHEN NULL THEN rt1.c0 ELSE rt1.c1 END THEN CAST(t0.c0 AS INTEGER) WHEN (((rt1.c2))>((rt1.c1))) THEN (((t0.c0, rt1.c2, rt1.c2, rt1.c0, rt1.c1, rt1.c2, rt1.c1))<((rt1.c2, NULL, '-1588342111', rt1.c0, rt1.c1, rt1.c2, 1e500))) WHEN ((rt1.c1) IS FALSE) THEN (rt1.c1 IN ()) WHEN (('') NOT BETWEEN (t0.c0) AND (rt1.c0)) THEN LIKE(rt1.c0, t0.c0) WHEN ((rt1.c2)>>(0xb6630ab)) THEN (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((t0.c0))) ELSE ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)) END) ISNULL)) GROUP BY t0.c0, rt1.c0;
SELECT t0.c0, rt1.c0 FROM t0, rt1 GROUP BY t0.c0, rt1.c0;
SELECT ALL rt1.c1, t0.c0, rt1.c2 FROM rt1 LEFT OUTER JOIN t0 ON (rt1.c2 IN ()) GROUP BY rt1.c1, t0.c0, rt1.c2;
SELECT rt1.c1, t0.c0, rt1.c2 FROM rt1 LEFT OUTER JOIN t0 ON (rt1.c2 IN ()) GROUP BY rt1.c1, t0.c0, rt1.c2 HAVING MAX(COUNT(*)) UNION ALL SELECT rt1.c1, t0.c0, rt1.c2 FROM rt1 LEFT OUTER JOIN t0 ON (rt1.c2 IN ()) GROUP BY rt1.c1, t0.c0, rt1.c2 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL rt1.c1, t0.c0, rt1.c2 FROM rt1 LEFT OUTER JOIN t0 ON (rt1.c2 IN ()) GROUP BY rt1.c1, t0.c0, rt1.c2 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL rt1.c1, rt1.c2 FROM rt1;
SELECT rt1.c1, rt1.c2 FROM rt1 NOT INDEXED WHERE (rt1.c1) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (rt1.c1))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE (((rt1.c1) ISNULL));
SELECT ALL rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((rt1.c0 COLLATE BINARY IN ())) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((rt1.c0 COLLATE BINARY IN ())))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c0 COLLATE BINARY IN ())) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c2 FROM rt1, t0 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1, t0 WHERE ((NOT (CAST(rt1.c1 AS TEXT)))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1, t0 WHERE ((NOT ((NOT (CAST(rt1.c1 AS TEXT)))))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1, t0 WHERE ((((NOT (CAST(rt1.c1 AS TEXT)))) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1, t0 GROUP BY rt1.c2;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (+ (x'')) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT ((+ (x'')))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (((+ (x''))) ISNULL);
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (+ (x'')) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT ((+ (x'')))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (((+ (x''))) ISNULL);
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2 FROM rt1;
SELECT rt1.c2 FROM rt1 WHERE ((((rt1.c2 IN ()))&((+ (rt1.c2))))) UNION ALL SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT ((((rt1.c2 IN ()))&((+ (rt1.c2))))))) UNION ALL SELECT rt1.c2 FROM rt1 WHERE ((((((rt1.c2 IN ()))&((+ (rt1.c2))))) ISNULL));
SELECT rt1.c2 FROM rt1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(t0.c0)))OR(((t0.c0) IS TRUE))))AND(t0.c0 COLLATE NOCASE)))OR(t0.c0 COLLATE BINARY))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(t0.c0)))OR(((t0.c0) IS TRUE))))AND(t0.c0 COLLATE NOCASE)))OR(t0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(t0.c0)))OR(((t0.c0) IS TRUE))))AND(t0.c0 COLLATE NOCASE)))OR(t0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT rt1.c2, rt1.c0, t0.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c2, rt1.c0, t0.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, t0.c0, rt1.c1 FROM rt1, t0 WHERE ((((t0.c0 IN ())) NOT BETWEEN ((rt1.c2 IN (rt1.c0, rt1.c0))) AND ((NOT (t0.c0))))) GROUP BY rt1.c2, rt1.c0, t0.c0, rt1.c1 UNION SELECT rt1.c2, rt1.c0, t0.c0, rt1.c1 FROM rt1, t0 NOT INDEXED WHERE ((NOT ((((t0.c0 IN ())) NOT BETWEEN ((rt1.c2 IN (rt1.c0, rt1.c0))) AND ((NOT (t0.c0))))))) GROUP BY rt1.c2, rt1.c0, t0.c0, rt1.c1 UNION SELECT rt1.c2, rt1.c0, t0.c0, rt1.c1 FROM rt1, t0 WHERE ((((((t0.c0 IN ())) NOT BETWEEN ((rt1.c2 IN (rt1.c0, rt1.c0))) AND ((NOT (t0.c0))))) ISNULL)) GROUP BY rt1.c2, rt1.c0, t0.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, t0.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c2, rt1.c0, t0.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1 HAVING MAX(GROUP_CONCAT(COUNT(*))) UNION ALL SELECT rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (MAX(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((MAX(GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((NOT (CAST(t0.c0 AS INTEGER)))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((NOT (CAST(t0.c0 AS INTEGER)))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((NOT (CAST(t0.c0 AS INTEGER)))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2 FROM rt1, t0;
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2 FROM rt1, t0 WHERE ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE rt1.c1 END IN ())) UNION SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2 FROM rt1, t0 WHERE ((NOT ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE rt1.c1 END IN ())))) UNION SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2 FROM rt1, t0 WHERE ((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE rt1.c1 END IN ())) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1, rt1.c2 FROM rt1, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE WHEN t0.c0 COLLATE BINARY THEN (((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))) ELSE (+ (t0.c0)) END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CASE WHEN t0.c0 COLLATE BINARY THEN (((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))) ELSE (+ (t0.c0)) END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CASE WHEN t0.c0 COLLATE BINARY THEN (((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))) ELSE (+ (t0.c0)) END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c0, rt1.c2;
SELECT ALL t0.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c0, rt1.c2 HAVING MAX(TOTAL('m|Lb')) UNION ALL SELECT ALL t0.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c0, rt1.c2 HAVING (NOT (MAX(TOTAL('m|Lb')))) UNION ALL SELECT t0.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c0, rt1.c2 HAVING ((MAX(TOTAL('m|Lb'))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((CASE WHEN t0.c0 THEN '+)v' ELSE t0.c0 END)) AND ((t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((CASE WHEN t0.c0 THEN '+)v' ELSE t0.c0 END)) AND ((t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((CASE WHEN t0.c0 THEN '+)v' ELSE t0.c0 END)) AND ((t0.c0)))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE (((CASE WHEN rt1.c1 THEN rt1.c2 END)*((~ (0.25238464236676506))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT (((CASE WHEN rt1.c1 THEN rt1.c2 END)*((~ (0.25238464236676506))))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE (((((CASE WHEN rt1.c1 THEN rt1.c2 END)*((~ (0.25238464236676506))))) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((((((rt1.c0, rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c2, rt1.c0)) AND ((NULL, rt1.c0, rt1.c2)))) IS FALSE)) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT ((((((rt1.c0, rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c2, rt1.c0)) AND ((NULL, rt1.c0, rt1.c2)))) IS FALSE)))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((((((((rt1.c0, rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c2, rt1.c0)) AND ((NULL, rt1.c0, rt1.c2)))) IS FALSE)) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0, t0.c0 FROM rt1 LEFT OUTER JOIN t0 ON ((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)))>=(x'')) GROUP BY rt1.c2, rt1.c0, t0.c0;
SELECT rt1.c2, rt1.c0, t0.c0 FROM rt1 LEFT OUTER JOIN t0 ON ((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)))>=(x'')) GROUP BY rt1.c2, rt1.c0, t0.c0 HAVING rt1.c2 UNION ALL SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM rt1 LEFT OUTER JOIN t0 ON ((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)))>=(x'')) GROUP BY rt1.c2, rt1.c0, t0.c0 HAVING (NOT (rt1.c2)) UNION ALL SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM rt1 LEFT OUTER JOIN t0 ON ((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)))>=(x'')) GROUP BY rt1.c2, rt1.c0, t0.c0 HAVING ((rt1.c2) ISNULL);
SELECT rt1.c2, rt1.c0, t0.c0 FROM rt1 LEFT OUTER JOIN t0 ON ((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)))>=(x'')) GROUP BY rt1.c2, rt1.c0, t0.c0;
SELECT rt1.c2, rt1.c0, t0.c0 FROM rt1 LEFT OUTER JOIN t0 ON ((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)))>=(x'')) GROUP BY rt1.c2, rt1.c0, t0.c0 HAVING rt1.c2 UNION ALL SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM rt1 LEFT OUTER JOIN t0 ON ((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)))>=(x'')) GROUP BY rt1.c2, rt1.c0, t0.c0 HAVING (NOT (rt1.c2)) UNION ALL SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM rt1 LEFT OUTER JOIN t0 ON ((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)))>=(x'')) GROUP BY rt1.c2, rt1.c0, t0.c0 HAVING ((rt1.c2) ISNULL);
SELECT rt1.c2, rt1.c0, t0.c0 FROM rt1 LEFT OUTER JOIN t0 ON ((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)))>=(x'')) GROUP BY rt1.c2, rt1.c0, t0.c0;
SELECT rt1.c0 FROM t0 INNER JOIN rt1 ON rt1.c2;
SELECT ALL rt1.c0 FROM t0 INNER JOIN rt1 ON rt1.c2 WHERE ((((rt1.c0, rt1.c2, rt1.c2)) BETWEEN ((rt1.c1, rt1.c0, rt1.c1)) AND ((rt1.c0, rt1.c1, rt1.c0))) COLLATE BINARY) UNION ALL SELECT ALL rt1.c0 FROM t0 INNER JOIN rt1 ON rt1.c2 WHERE ((NOT ((((rt1.c0, rt1.c2, rt1.c2)) BETWEEN ((rt1.c1, rt1.c0, rt1.c1)) AND ((rt1.c0, rt1.c1, rt1.c0))) COLLATE BINARY))) UNION ALL SELECT rt1.c0 FROM t0 INNER JOIN rt1 ON rt1.c2 WHERE ((((((rt1.c0, rt1.c2, rt1.c2)) BETWEEN ((rt1.c1, rt1.c0, rt1.c1)) AND ((rt1.c0, rt1.c1, rt1.c0))) COLLATE BINARY) ISNULL));
SELECT rt1.c0 FROM t0 INNER JOIN rt1 ON rt1.c2;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((TYPEOF('1085919955'))<<(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((TYPEOF('1085919955'))<<(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((TYPEOF('1085919955'))<<(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0) BETWEEN (x'') AND (t0.c0)) IN (CAST(t0.c0 AS NUMERIC)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0) BETWEEN (x'') AND (t0.c0)) IN (CAST(t0.c0 AS NUMERIC)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((t0.c0) BETWEEN (x'') AND (t0.c0)) IN (CAST(t0.c0 AS NUMERIC)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING CASE GROUP_CONCAT(MAX(rt1.c0))  WHEN AVG(rt1.c1) THEN AVG(rt1.c2) WHEN ((rt1.c2) NOT BETWEEN (SUM(x'')) AND ('')) THEN MAX(COUNT(*)) WHEN COUNT(rt1.c2) THEN ((rt1.c0)>(rt1.c2)) WHEN rt1.c1 THEN 0.9621776848443212 WHEN rt1.c0 COLLATE RTRIM THEN MIN(SUM(SUM(rt1.c1))) ELSE AVG(rt1.c0) END UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (CASE GROUP_CONCAT(MAX(rt1.c0))  WHEN AVG(rt1.c1) THEN AVG(rt1.c2) WHEN ((rt1.c2) NOT BETWEEN (SUM(x'')) AND ('')) THEN MAX(COUNT(*)) WHEN COUNT(rt1.c2) THEN ((rt1.c0)>(rt1.c2)) WHEN rt1.c1 THEN 0.9621776848443212 WHEN rt1.c0 COLLATE RTRIM THEN MIN(SUM(SUM(rt1.c1))) ELSE AVG(rt1.c0) END)) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((CASE GROUP_CONCAT(MAX(rt1.c0))  WHEN AVG(rt1.c1) THEN AVG(rt1.c2) WHEN ((rt1.c2) NOT BETWEEN (SUM(x'')) AND ('')) THEN MAX(COUNT(*)) WHEN COUNT(rt1.c2) THEN ((rt1.c0)>(rt1.c2)) WHEN rt1.c1 THEN 0.9621776848443212 WHEN rt1.c0 COLLATE RTRIM THEN MIN(SUM(SUM(rt1.c1))) ELSE AVG(rt1.c0) END) ISNULL);
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((((((rt1.c1))<=((rt1.c1)))) IS FALSE)) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT ((((((rt1.c1))<=((rt1.c1)))) IS FALSE)))) UNION ALL SELECT * FROM rt1 WHERE ((((((((rt1.c1))<=((rt1.c1)))) IS FALSE)) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (((((((((((((UNLIKELY(rt1.c0))OR(((((rt1.c1)AND(rt1.c2)))OR(rt1.c0)))))AND(((((t0.c0)AND(rt1.c1)))OR(rt1.c2)))))OR((((rt1.c2))>=((rt1.c2))))))OR(((rt1.c1)LIKE(rt1.c1)))))OR((((rt1.c0))>=((rt1.c0))))))AND((- (t0.c0))))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (((((((((((((UNLIKELY(rt1.c0))OR(((((rt1.c1)AND(rt1.c2)))OR(rt1.c0)))))AND(((((t0.c0)AND(rt1.c1)))OR(rt1.c2)))))OR((((rt1.c2))>=((rt1.c2))))))OR(((rt1.c1)LIKE(rt1.c1)))))OR((((rt1.c0))>=((rt1.c0))))))AND((- (t0.c0))))))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((((((((((((((UNLIKELY(rt1.c0))OR(((((rt1.c1)AND(rt1.c2)))OR(rt1.c0)))))AND(((((t0.c0)AND(rt1.c1)))OR(rt1.c2)))))OR((((rt1.c2))>=((rt1.c2))))))OR(((rt1.c1)LIKE(rt1.c1)))))OR((((rt1.c0))>=((rt1.c0))))))AND((- (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 FULL OUTER JOIN t0 ON (((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))) BETWEEN (CAST(rt1.c1 AS NUMERIC)) AND (CAST(rt1.c0 AS BLOB))) GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 FULL OUTER JOIN t0 ON (((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))) BETWEEN (CAST(rt1.c1 AS NUMERIC)) AND (CAST(rt1.c0 AS BLOB))) WHERE (0.28079291850264854) GROUP BY rt1.c0, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 FULL OUTER JOIN t0 ON (((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))) BETWEEN (CAST(rt1.c1 AS NUMERIC)) AND (CAST(rt1.c0 AS BLOB))) WHERE ((NOT (0.28079291850264854))) GROUP BY rt1.c0, rt1.c1, rt1.c2 UNION SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 FULL OUTER JOIN t0 ON (((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))) BETWEEN (CAST(rt1.c1 AS NUMERIC)) AND (CAST(rt1.c0 AS BLOB))) WHERE (((0.28079291850264854) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 FULL OUTER JOIN t0 ON (((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))) BETWEEN (CAST(rt1.c1 AS NUMERIC)) AND (CAST(rt1.c0 AS BLOB))) GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, t0.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, t0.c0, rt1.c1;
SELECT rt1.c0, t0.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, t0.c0, rt1.c1 HAVING TOTAL(((rt1.c2) BETWEEN (0.931204495467945) AND (rt1.c0))) UNION ALL SELECT rt1.c0, t0.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, t0.c0, rt1.c1 HAVING (NOT (TOTAL(((rt1.c2) BETWEEN (0.931204495467945) AND (rt1.c0))))) UNION ALL SELECT rt1.c0, t0.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, t0.c0, rt1.c1 HAVING ((TOTAL(((rt1.c2) BETWEEN (0.931204495467945) AND (rt1.c0)))) ISNULL);
SELECT rt1.c0, t0.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, t0.c0, rt1.c1;
SELECT rt1.c0, t0.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, t0.c0, rt1.c1 HAVING TOTAL(((rt1.c2) BETWEEN (0.931204495467945) AND (rt1.c0))) UNION ALL SELECT rt1.c0, t0.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, t0.c0, rt1.c1 HAVING (NOT (TOTAL(((rt1.c2) BETWEEN (0.931204495467945) AND (rt1.c0))))) UNION ALL SELECT rt1.c0, t0.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, t0.c0, rt1.c1 HAVING ((TOTAL(((rt1.c2) BETWEEN (0.931204495467945) AND (rt1.c0)))) ISNULL);
SELECT rt1.c0, t0.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, t0.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0 FROM t0, rt1 INDEXED BY i31;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(x'' AS TEXT)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(x'' AS TEXT)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(x'' AS TEXT)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt1.c2 FROM t0 FULL OUTER JOIN rt1 ON ((((x'd443')OR(x'')))AND((((rt1.c0))<=((rt1.c2))))) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM t0 FULL OUTER JOIN rt1 ON ((((x'd443')OR(x'')))AND((((rt1.c0))<=((rt1.c2))))) WHERE ((((NOT (rt1.c2))) NOT NULL)) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM t0 FULL OUTER JOIN rt1 ON ((((x'd443')OR(x'')))AND((((rt1.c0))<=((rt1.c2))))) WHERE ((NOT ((((NOT (rt1.c2))) NOT NULL)))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM t0 FULL OUTER JOIN rt1 ON ((((x'd443')OR(x'')))AND((((rt1.c0))<=((rt1.c2))))) WHERE ((((((NOT (rt1.c2))) NOT NULL)) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM t0 FULL OUTER JOIN rt1 ON ((((x'd443')OR(x'')))AND((((rt1.c0))<=((rt1.c2))))) GROUP BY rt1.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CASE t0.c0  WHEN 0.7084119456513797 THEN MAX(t0.c0) WHEN CAST(t0.c0 AS REAL) THEN TOTAL(t0.c0) WHEN t0.c0 THEN COUNT(*) ELSE SUM(TOTAL(t0.c0)) END UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CASE t0.c0  WHEN 0.7084119456513797 THEN MAX(t0.c0) WHEN CAST(t0.c0 AS REAL) THEN TOTAL(t0.c0) WHEN t0.c0 THEN COUNT(*) ELSE SUM(TOTAL(t0.c0)) END)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE t0.c0  WHEN 0.7084119456513797 THEN MAX(t0.c0) WHEN CAST(t0.c0 AS REAL) THEN TOTAL(t0.c0) WHEN t0.c0 THEN COUNT(*) ELSE SUM(TOTAL(t0.c0)) END) ISNULL);
SELECT rt1.c1 FROM t0 CROSS JOIN rt1 ON CAST(((rt1.c0) IS FALSE) AS TEXT);
SELECT ALL rt1.c1 FROM t0 CROSS JOIN rt1 ON CAST(((rt1.c0) IS FALSE) AS TEXT) WHERE ((((t0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) IN ())) UNION ALL SELECT rt1.c1 FROM t0 CROSS JOIN rt1 ON CAST(((rt1.c0) IS FALSE) AS TEXT) WHERE ((NOT ((((t0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) IN ())))) UNION ALL SELECT rt1.c1 FROM t0 CROSS JOIN rt1 ON CAST(((rt1.c0) IS FALSE) AS TEXT) WHERE ((((((t0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) IN ())) ISNULL));
SELECT rt1.c1 FROM t0 CROSS JOIN rt1 ON CAST(((rt1.c0) IS FALSE) AS TEXT);
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((x'efaa')/((((t0.c0))<=((t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((x'efaa')/((((t0.c0))<=((t0.c0)))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((x'efaa')/((((t0.c0))<=((t0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((- (json_extract(t0.c0, t0.c0, t0.c0, t0.c0)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((- (json_extract(t0.c0, t0.c0, t0.c0, t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((- (json_extract(t0.c0, t0.c0, t0.c0, t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING AVG(CASE WHEN MAX(COUNT(*)) THEN MIN(MAX(COUNT(*))) END) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (AVG(CASE WHEN MAX(COUNT(*)) THEN MIN(MAX(COUNT(*))) END))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((AVG(CASE WHEN MAX(COUNT(*)) THEN MIN(MAX(COUNT(*))) END)) ISNULL);
SELECT rt1.c0, rt1.c2 FROM t0, rt1;
SELECT rt1.c0, rt1.c2 FROM t0, rt1 WHERE (((((x'')==(rt1.c1)))/(((rt1.c2) NOTNULL)))) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM t0, rt1 WHERE ((NOT (((((x'')==(rt1.c1)))/(((rt1.c2) NOTNULL)))))) UNION ALL SELECT rt1.c0, rt1.c2 FROM t0, rt1 WHERE (((((((x'')=(rt1.c1)))/(((rt1.c2) NOTNULL)))) ISNULL));
SELECT rt1.c0, rt1.c2 FROM t0, rt1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CAST(CAST(t0.c0 AS TEXT) AS INTEGER)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(CAST(t0.c0 AS TEXT) AS INTEGER)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST(CAST(t0.c0 AS TEXT) AS INTEGER)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1;
SELECT ALL t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1 HAVING TOTAL(((('')) BETWEEN ((rt1.c1)) AND ((rt1.c0)))) UNION ALL SELECT t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1 HAVING (NOT (TOTAL(((('')) BETWEEN ((rt1.c1)) AND ((rt1.c0)))))) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1 HAVING ((TOTAL(((('')) BETWEEN ((rt1.c1)) AND ((rt1.c0))))) ISNULL);
SELECT ALL t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1;
SELECT ALL t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1 HAVING TOTAL(((('')) BETWEEN ((rt1.c1)) AND ((rt1.c0)))) UNION ALL SELECT t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1 HAVING (NOT (TOTAL(((('')) BETWEEN ((rt1.c1)) AND ((rt1.c0)))))) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1 HAVING ((TOTAL(((('')) BETWEEN ((rt1.c1)) AND ((rt1.c0))))) ISNULL);
SELECT ALL t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1;
SELECT rt1.c2, t0.c0, rt1.c1 FROM t0, rt1;
SELECT ALL rt1.c2, t0.c0, rt1.c1 FROM t0, rt1 WHERE (CAST(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) AS NUMERIC)) UNION ALL SELECT rt1.c2, t0.c0, rt1.c1 FROM t0, rt1 WHERE ((NOT (CAST(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) AS NUMERIC)))) UNION ALL SELECT rt1.c2, t0.c0, rt1.c1 FROM t0, rt1 WHERE (((CAST(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) AS NUMERIC)) ISNULL));
SELECT rt1.c2, t0.c0, rt1.c1 FROM t0, rt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) NOTNULL))<(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0) NOTNULL))<(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0) NOTNULL))<(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((TYPEOF(rt1.c0)) BETWEEN (COUNT(*)) AND (CASE rt1.c0  WHEN rt1.c2 THEN MIN(rt1.c0) WHEN SUM(TOTAL(MIN(TOTAL(MIN(NULL))))) THEN MIN(TOTAL(SUM(MAX('x嵥')))) WHEN AVG(rt1.c0) THEN MIN(rt1.c1) END)) UNION ALL SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT (((TYPEOF(rt1.c0)) BETWEEN (COUNT(*)) AND (CASE rt1.c0  WHEN rt1.c2 THEN MIN(rt1.c0) WHEN SUM(TOTAL(MIN(TOTAL(MIN(NULL))))) THEN MIN(TOTAL(SUM(MAX('x嵥')))) WHEN AVG(rt1.c0) THEN MIN(rt1.c1) END)))) UNION ALL SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((((TYPEOF(rt1.c0)) BETWEEN (COUNT(*)) AND (CASE rt1.c0  WHEN rt1.c2 THEN MIN(rt1.c0) WHEN SUM(TOTAL(MIN(TOTAL(MIN(NULL))))) THEN MIN(TOTAL(SUM(MAX('x嵥')))) WHEN AVG(rt1.c0) THEN MIN(rt1.c1) END))) ISNULL);
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (LTRIM((rt1.c2 IN (rt1.c2)), ((rt1.c0)=(rt1.c2)))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (LTRIM((rt1.c2 IN (rt1.c2)), ((rt1.c0)==(rt1.c2)))))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((LTRIM((rt1.c2 IN (rt1.c2)), ((rt1.c0)=(rt1.c2)))) ISNULL));
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (rt1.c2) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT * FROM rt1 WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c2 FROM rt1, t0 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1, t0 WHERE ((((rt1.c2 IN ())) BETWEEN ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) AND ((((t0.c0, rt1.c1, t0.c0))>=((rt1.c1, rt1.c0, rt1.c2)))))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1, t0 WHERE ((NOT ((((rt1.c2 IN ())) BETWEEN ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) AND ((((t0.c0, rt1.c1, t0.c0))>=((rt1.c1, rt1.c0, rt1.c2)))))))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1, t0 WHERE ((((((rt1.c2 IN ())) BETWEEN ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) AND ((((t0.c0, rt1.c1, t0.c0))>=((rt1.c1, rt1.c0, rt1.c2)))))) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1, t0 GROUP BY rt1.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (CAST(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN 0.7170069391055952 END AS NUMERIC)) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (CAST(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN 0.7170069391055952 END AS NUMERIC)))) UNION ALL SELECT ALL * FROM rt1 WHERE (((CAST(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN 0.7170069391055952 END AS NUMERIC)) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((0x32d73b07)OR(NULL)))OR(((rt1.c0)>(rt1.c1))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT (((((0X32d73b07)OR(NULL)))OR(((rt1.c0)>(rt1.c1))))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE (((((((0x32d73b07)OR(NULL)))OR(((rt1.c0)>(rt1.c1))))) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (0.4692974992085026) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (0.4692974992085026))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((0.4692974992085026) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c2;
SELECT ALL t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING CAST(((((((((((((MIN(SUM(rt1.c2)))AND(rt1.c0)))OR(GROUP_CONCAT(rt1.c1))))AND(MAX(t0.c0))))OR(MIN(COUNT(*)))))AND(MAX(t0.c0))))AND(rt1.c2)) AS REAL) UNION ALL SELECT t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (CAST(((((((((((((MIN(SUM(rt1.c2)))AND(rt1.c0)))OR(GROUP_CONCAT(rt1.c1))))AND(MAX(t0.c0))))OR(MIN(COUNT(*)))))AND(MAX(t0.c0))))AND(rt1.c2)) AS REAL))) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING ((CAST(((((((((((((MIN(SUM(rt1.c2)))AND(rt1.c0)))OR(GROUP_CONCAT(rt1.c1))))AND(MAX(t0.c0))))OR(MIN(COUNT(*)))))AND(MAX(t0.c0))))AND(rt1.c2)) AS REAL)) ISNULL);
SELECT * FROM rt1, t0;
SELECT * FROM rt1, t0 WHERE (rt1.c2 COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt1, t0 WHERE ((NOT (rt1.c2 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt1, t0 WHERE (((rt1.c2 COLLATE NOCASE) ISNULL));
SELECT * FROM rt1, t0;
SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1, t0;
SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1 NOT INDEXED, t0 WHERE (t0.c0) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1, t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1, t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1, t0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 WHERE ((CASE WHEN '-1742638192' THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END IN ())) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE ((NOT ((CASE WHEN '-1742638192' THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END IN ())))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE ((((CASE WHEN '-1742638192' THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END IN ())) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM t0, rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM t0, rt1 GROUP BY rt1.c0 HAVING AVG(COUNT(t0.c0)) COLLATE NOCASE UNION ALL SELECT rt1.c0 FROM t0, rt1 GROUP BY rt1.c0 HAVING (NOT (AVG(COUNT(t0.c0)) COLLATE NOCASE)) UNION ALL SELECT ALL rt1.c0 FROM t0, rt1 GROUP BY rt1.c0 HAVING ((AVG(COUNT(t0.c0)) COLLATE NOCASE) ISNULL);
SELECT ALL t0.c0, rt1.c0 FROM t0, rt1;
SELECT ALL t0.c0, rt1.c0 FROM t0, rt1 WHERE (CAST(t0.c0 COLLATE BINARY AS INTEGER)) UNION ALL SELECT ALL t0.c0, rt1.c0 FROM t0, rt1 WHERE ((NOT (CAST(t0.c0 COLLATE BINARY AS INTEGER)))) UNION ALL SELECT t0.c0, rt1.c0 FROM t0, rt1 WHERE (((CAST(t0.c0 COLLATE BINARY AS INTEGER)) ISNULL));
SELECT ALL t0.c0, rt1.c0 FROM t0, rt1;
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c1 FROM rt1 WHERE (GLOB(((NULL) IS TRUE), rt1.c2)) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE ((NOT (GLOB(((NULL) IS TRUE), rt1.c2)))) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE (((GLOB(((NULL) IS TRUE), rt1.c2)) ISNULL));
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM t0, rt1 WHERE ((x'dfab' IN ())) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM t0, rt1 WHERE ((NOT ((x'dfab' IN ())))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM t0, rt1 WHERE ((((x'dfab' IN ())) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT ALL t0.c0, rt1.c0, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c1;
SELECT ALL t0.c0, rt1.c0, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c1 HAVING (((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((COUNT(SUM(rt1.c1))))) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c1 HAVING (NOT ((((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((COUNT(SUM(rt1.c1))))))) UNION ALL SELECT t0.c0, rt1.c0, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c1 HAVING (((((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((COUNT(SUM(rt1.c1)))))) ISNULL);
SELECT * FROM rt1, t0;
SELECT * FROM rt1, t0 WHERE (((CAST(t0.c0 AS NUMERIC)) IS FALSE)) UNION ALL SELECT * FROM rt1, t0 WHERE ((NOT (((CAST(t0.c0 AS NUMERIC)) IS FALSE)))) UNION ALL SELECT ALL * FROM rt1, t0 WHERE (((((CAST(t0.c0 AS NUMERIC)) IS FALSE)) ISNULL));
SELECT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE ((('+)V')*(((((rt1.c2)OR('1598773946')))OR(rt1.c2))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT ((('+)V')*(((((rt1.c2)OR('1598773946')))OR(rt1.c2))))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((((('+)V')*(((((rt1.c2)OR('1598773946')))OR(rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT ALL rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM t0, rt1 WHERE ((((t0.c0, rt1.c0, rt1.c2)) BETWEEN ((((rt1.c2)AND(t0.c0)), '63126769', ((t0.c0)<>(rt1.c1)))) AND ((rt1.c0 COLLATE BINARY, UPPER(DISTINCT rt1.c0), ((rt1.c1) BETWEEN (NULL) AND (rt1.c0)))))) GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM t0, rt1 WHERE ((NOT ((((t0.c0, rt1.c0, rt1.c2)) BETWEEN ((((rt1.c2)AND(t0.c0)), '63126769', ((t0.c0)!=(rt1.c1)))) AND ((rt1.c0 COLLATE BINARY, UPPER(DISTINCT rt1.c0), ((rt1.c1) BETWEEN (NULL) AND (rt1.c0)))))))) GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0 UNION SELECT rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM t0, rt1 WHERE ((((((t0.c0, rt1.c0, rt1.c2)) BETWEEN ((((rt1.c2)AND(t0.c0)), '63126769', ((t0.c0)!=(rt1.c1)))) AND ((rt1.c0 COLLATE BINARY, UPPER(DISTINCT rt1.c0), ((rt1.c1) BETWEEN (NULL) AND (rt1.c0)))))) ISNULL)) GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0;
SELECT rt1.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, rt1.c1 HAVING CASE ((rt1.c0)IS NOT(AVG(rt1.c2)))  WHEN ((COUNT(*)) NOT BETWEEN ('n6+tkp') AND (t0.c0)) THEN SUM(NULL) WHEN (~ (rt1.c0)) THEN (SUM(rt1.c0) IN ()) WHEN COUNT(AVG(t0.c0)) THEN AVG(GROUP_CONCAT(MIN(rt1.c1))) END UNION ALL SELECT rt1.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (CASE ((rt1.c0)IS NOT(AVG(rt1.c2)))  WHEN ((COUNT(*)) NOT BETWEEN ('n6+tkp') AND (t0.c0)) THEN SUM(NULL) WHEN (~ (rt1.c0)) THEN (SUM(rt1.c0) IN ()) WHEN COUNT(AVG(t0.c0)) THEN AVG(GROUP_CONCAT(MIN(rt1.c1))) END)) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, rt1.c1 HAVING ((CASE ((rt1.c0)IS NOT(AVG(rt1.c2)))  WHEN ((COUNT(*)) NOT BETWEEN ('n6+tkp') AND (t0.c0)) THEN SUM(NULL) WHEN (~ (rt1.c0)) THEN (SUM(rt1.c0) IN ()) WHEN COUNT(AVG(t0.c0)) THEN AVG(GROUP_CONCAT(MIN(rt1.c1))) END) ISNULL);
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (0.008532460587333146 COLLATE BINARY) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (0.008532460587333146 COLLATE BINARY))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (((0.008532460587333146 COLLATE BINARY) ISNULL));
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM t0 INNER JOIN rt1 ON ((((((((((((t0.c0)AND(rt1.c1)))AND(t0.c0)))OR(t0.c0)))AND(rt1.c1)))OR(json_remove(t0.c0, rt1.c1))))OR((t0.c0 IN ())));
SELECT DISTINCT rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM t0 INNER JOIN rt1 ON ((((((((((((t0.c0)AND(rt1.c1)))AND(t0.c0)))OR(t0.c0)))AND(rt1.c1)))OR(json_remove(t0.c0, rt1.c1))))OR((t0.c0 IN ()))) WHERE (CAST(rt1.c0 AS REAL) COLLATE RTRIM) UNION SELECT DISTINCT rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM t0 INNER JOIN rt1 ON ((((((((((((t0.c0)AND(rt1.c1)))AND(t0.c0)))OR(t0.c0)))AND(rt1.c1)))OR(json_remove(t0.c0, rt1.c1))))OR((t0.c0 IN ()))) WHERE ((NOT (CAST(rt1.c0 AS REAL) COLLATE RTRIM))) UNION SELECT DISTINCT rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM t0 INNER JOIN rt1 ON ((((((((((((t0.c0)AND(rt1.c1)))AND(t0.c0)))OR(t0.c0)))AND(rt1.c1)))OR(json_remove(t0.c0, rt1.c1))))OR((t0.c0 IN ()))) WHERE (((CAST(rt1.c0 AS REAL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM t0 INNER JOIN rt1 ON ((((((((((((t0.c0)AND(rt1.c1)))AND(t0.c0)))OR(t0.c0)))AND(rt1.c1)))OR(json_remove(t0.c0, rt1.c1))))OR((t0.c0 IN ())));
SELECT ALL rt1.c1 FROM rt1, t0 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1, t0 WHERE (LIKELY(DISTINCT ((rt1.c1)+(rt1.c0)))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1, t0 WHERE ((NOT (LIKELY(DISTINCT ((rt1.c1)+(rt1.c0)))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1, t0 WHERE (((LIKELY(DISTINCT ((rt1.c1)+(rt1.c0)))) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1, t0 GROUP BY rt1.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(TOTAL(MIN(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(TOTAL(MIN(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(TOTAL(MIN(t0.c0)))) ISNULL);
SELECT ALL rt1.c1, rt1.c2 FROM t0 FULL OUTER JOIN rt1 ON (- (((rt1.c2)||(rt1.c2))));
SELECT rt1.c1, rt1.c2 FROM t0 FULL OUTER JOIN rt1 ON (- (((rt1.c2)||(rt1.c2)))) WHERE (DATETIME(((rt1.c1) NOT NULL), t0.c0 COLLATE BINARY, (NOT (rt1.c2)), rt1.c2, ((rt1.c0) IS FALSE))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM t0 FULL OUTER JOIN rt1 ON (- (((rt1.c2)||(rt1.c2)))) WHERE ((NOT (DATETIME(((rt1.c1) NOT NULL), t0.c0 COLLATE BINARY, (NOT (rt1.c2)), rt1.c2, ((rt1.c0) IS FALSE))))) UNION ALL SELECT rt1.c1, rt1.c2 FROM t0 FULL OUTER JOIN rt1 ON (- (((rt1.c2)||(rt1.c2)))) WHERE (((DATETIME(((rt1.c1) NOT NULL), t0.c0 COLLATE BINARY, (NOT (rt1.c2)), rt1.c2, ((rt1.c0) IS FALSE))) ISNULL));
SELECT ALL rt1.c1, rt1.c2 FROM t0 FULL OUTER JOIN rt1 ON (- (((rt1.c2)||(rt1.c2))));
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0, t0.c0 FROM t0, rt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0, t0.c0 FROM t0, rt1 WHERE (HEX(DISTINCT ((t0.c0)>=(rt1.c0)))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0, t0.c0 FROM t0, rt1 WHERE ((NOT (HEX(DISTINCT ((t0.c0)>=(rt1.c0)))))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0, t0.c0 FROM t0, rt1 WHERE (((HEX(DISTINCT ((t0.c0)>=(rt1.c0)))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0, t0.c0 FROM t0, rt1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 WHERE (load_extension(CAST(x'' AS BLOB), ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)))) GROUP BY rt1.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (load_extension(CAST(x'' AS BLOB), ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))) GROUP BY rt1.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE (((load_extension(CAST(x'' AS BLOB), ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)))) ISNULL)) GROUP BY rt1.c0, rt1.c1;
SELECT t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1;
SELECT t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1 HAVING '-281740115' UNION ALL SELECT ALL t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1 HAVING (NOT ('-281740115')) UNION ALL SELECT ALL t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1 HAVING (('-281740115') ISNULL);
SELECT t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1;
SELECT t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1 HAVING '-281740115' UNION ALL SELECT ALL t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1 HAVING (NOT ('-281740115')) UNION ALL SELECT ALL t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1 HAVING (('-281740115') ISNULL);
SELECT t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1;
SELECT MAX(((((rt1.c1)&(t0.c0))) NOTNULL)) FROM rt1, t0 ORDER BY (((~ (rt1.c1))) BETWEEN (IFNULL(DISTINCT rt1.c2, rt1.c2)) AND (((((rt1.c0)OR(0.5263126057839939)))OR(t0.c0)))) DESC  NULLS FIRST, rt1.c0 DESC;
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((((0Xffffffffed63b224, ((t0.c0)%(t0.c0)), t0.c0 COLLATE NOCASE))==(((t0.c0 IN (t0.c0)), ((t0.c0) NOT NULL), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((0xffffffffed63b224, ((t0.c0)%(t0.c0)), t0.c0 COLLATE NOCASE))==(((t0.c0 IN (t0.c0)), ((t0.c0) NOT NULL), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((0Xffffffffed63b224, ((t0.c0)%(t0.c0)), t0.c0 COLLATE NOCASE))==(((t0.c0 IN (t0.c0)), ((t0.c0) NOT NULL), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0, rt1.c1 FROM t0, rt1;
SELECT DISTINCT t0.c0, rt1.c1 FROM t0, rt1 WHERE (CAST(t0.c0 AS NUMERIC) COLLATE NOCASE) UNION SELECT DISTINCT t0.c0, rt1.c1 FROM t0, rt1 WHERE ((NOT (CAST(t0.c0 AS NUMERIC) COLLATE NOCASE))) UNION SELECT DISTINCT t0.c0, rt1.c1 FROM t0, rt1 WHERE (((CAST(t0.c0 AS NUMERIC) COLLATE NOCASE) ISNULL));
SELECT DISTINCT t0.c0, rt1.c1 FROM t0, rt1;
SELECT ALL rt1.c0 FROM t0, rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM t0, rt1 WHERE (CAST((((rt1.c2))>=((rt1.c0))) AS INTEGER)) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM t0 NOT INDEXED, rt1 WHERE ((NOT (CAST((((rt1.c2))>=((rt1.c0))) AS INTEGER)))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM t0, rt1 WHERE (((CAST((((rt1.c2))>=((rt1.c0))) AS INTEGER)) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM t0, rt1 GROUP BY rt1.c0;
SELECT rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((SUM(SUM(rt1.c1)))>>(COUNT(rt1.c1))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (((SUM(SUM(rt1.c1)))>>(COUNT(rt1.c1))))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((((SUM(SUM(rt1.c1)))>>(COUNT(rt1.c1)))) ISNULL);
SELECT ALL rt1.c2, rt1.c0 FROM rt1;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE (((CAST(rt1.c1 AS TEXT))/(((rt1.c1)|(rt1.c1))))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (((CAST(rt1.c1 AS TEXT))/(((rt1.c1)|(rt1.c1))))))) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1 WHERE (((((CAST(rt1.c1 AS TEXT))/(((rt1.c1)|(rt1.c1))))) ISNULL));
SELECT ALL rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (CASE CASE WHEN t0.c0 THEN t0.c0 END  WHEN ((-619289647)&(rt1.c0)) THEN ((t0.c0)IS NOT(t0.c0)) WHEN UPPER(DISTINCT t0.c0) THEN ((rt1.c2)!=(rt1.c0)) WHEN rt1.c0 THEN (((rt1.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE (t0.c0 IN ()) END) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (CASE CASE WHEN t0.c0 THEN t0.c0 END  WHEN ((-619289647)&(rt1.c0)) THEN ((t0.c0)IS NOT(t0.c0)) WHEN UPPER(DISTINCT t0.c0) THEN ((rt1.c2)!=(rt1.c0)) WHEN rt1.c0 THEN (((rt1.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE (t0.c0 IN ()) END))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((CASE CASE WHEN t0.c0 THEN t0.c0 END  WHEN ((-619289647)&(rt1.c0)) THEN ((t0.c0)IS NOT(t0.c0)) WHEN UPPER(DISTINCT t0.c0) THEN ((rt1.c2)<>(rt1.c0)) WHEN rt1.c0 THEN (((rt1.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE (t0.c0 IN ()) END) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((((t0.c0))<((''))))) AND (((~ (t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN (((((t0.c0))<((''))))) AND (((~ (t0.c0)))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN (((((t0.c0))<((''))))) AND (((~ (t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING NULLIF(CASE WHEN t0.c0 THEN t0.c0 WHEN TOTAL(t0.c0) THEN MIN(SUM(t0.c0)) WHEN GROUP_CONCAT(t0.c0) THEN SUM(t0.c0) END, (AVG(AVG(t0.c0)) IN (t0.c0, t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (NULLIF(CASE WHEN t0.c0 THEN t0.c0 WHEN TOTAL(t0.c0) THEN MIN(SUM(t0.c0)) WHEN GROUP_CONCAT(t0.c0) THEN SUM(t0.c0) END, (AVG(AVG(t0.c0)) IN (t0.c0, t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((NULLIF(CASE WHEN t0.c0 THEN t0.c0 WHEN TOTAL(t0.c0) THEN MIN(SUM(t0.c0)) WHEN GROUP_CONCAT(t0.c0) THEN SUM(t0.c0) END, (AVG(AVG(t0.c0)) IN (t0.c0, t0.c0)))) ISNULL);
SELECT * FROM t0, rt1;
SELECT * FROM t0, rt1 WHERE (((rt1.c0) BETWEEN (CASE rt1.c2  WHEN t0.c0 THEN NULL ELSE t0.c0 END) AND (CAST('0.8866099288156725' AS NUMERIC)))) UNION ALL SELECT ALL * FROM t0, rt1 WHERE ((NOT (((rt1.c0) BETWEEN (CASE rt1.c2  WHEN t0.c0 THEN NULL ELSE t0.c0 END) AND (CAST('0.8866099288156725' AS NUMERIC)))))) UNION ALL SELECT ALL * FROM t0, rt1 WHERE (((((rt1.c0) BETWEEN (CASE rt1.c2  WHEN t0.c0 THEN NULL ELSE t0.c0 END) AND (CAST('0.8866099288156725' AS NUMERIC)))) ISNULL));
SELECT * FROM t0, rt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)AND(t0.c0 COLLATE RTRIM)))AND(t0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0)AND(t0.c0 COLLATE RTRIM)))AND(t0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)AND(t0.c0 COLLATE RTRIM)))AND(t0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1, t0 WHERE (((CAST('617758939' AS NUMERIC))>((((rt1.c2)) NOT BETWEEN ((t0.c0)) AND ((rt1.c0)))))) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1, t0 WHERE ((NOT (((CAST('617758939' AS NUMERIC))>((((rt1.c2)) NOT BETWEEN ((t0.c0)) AND ((rt1.c0)))))))) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1, t0 WHERE (((((CAST('617758939' AS NUMERIC))>((((rt1.c2)) NOT BETWEEN ((t0.c0)) AND ((rt1.c0)))))) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (~ (SUM(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((~ (SUM(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((~ (SUM(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (~ (SUM(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((~ (SUM(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((~ (SUM(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c0 COLLATE RTRIM AS TEXT)) UNION ALL SELECT * FROM rt1 WHERE ((NOT (CAST(rt1.c0 COLLATE RTRIM AS TEXT)))) UNION ALL SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c0 COLLATE RTRIM AS TEXT)) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN CASE t0.c0  WHEN t0.c0 THEN NULL END THEN (((t0.c0)) NOT BETWEEN ((NULL)) AND ((t0.c0))) ELSE TRIM(DISTINCT t0.c0) END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE WHEN CASE t0.c0  WHEN t0.c0 THEN NULL END THEN (((t0.c0)) NOT BETWEEN ((NULL)) AND ((t0.c0))) ELSE TRIM(DISTINCT t0.c0) END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN CASE t0.c0  WHEN t0.c0 THEN NULL END THEN (((t0.c0)) NOT BETWEEN ((NULL)) AND ((t0.c0))) ELSE TRIM(DISTINCT t0.c0) END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM t0, rt1 WHERE ((((((t0.c0))<=((rt1.c1))))IS NOT(((rt1.c2)<=(rt1.c1))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM t0, rt1 WHERE ((NOT ((((((t0.c0))<=((rt1.c1))))IS NOT(((rt1.c2)<=(rt1.c1))))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM t0, rt1 WHERE ((((((((t0.c0))<=((rt1.c1))))IS NOT(((rt1.c2)<=(rt1.c1))))) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT rt1.c1, rt1.c0, t0.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, rt1.c0, t0.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, t0.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, rt1.c0, t0.c0, rt1.c2 HAVING ((MAX(rt1.c2))/(TOTAL(AVG(SUM(rt1.c2))))) UNION ALL SELECT ALL rt1.c1, rt1.c0, t0.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, rt1.c0, t0.c0, rt1.c2 HAVING (NOT (((MAX(rt1.c2))/(TOTAL(AVG(SUM(rt1.c2))))))) UNION ALL SELECT ALL rt1.c1, rt1.c0, t0.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, rt1.c0, t0.c0, rt1.c2 HAVING ((((MAX(rt1.c2))/(TOTAL(AVG(SUM(rt1.c2)))))) ISNULL);
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)) COLLATE BINARY) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)) COLLATE BINARY) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (LIKELY(rt1.c2)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (LIKELY(rt1.c2)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((LIKELY(rt1.c2)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c2 FROM rt1, t0 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1, t0 WHERE (CAST(x'' AS TEXT)) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1, t0 WHERE ((NOT (CAST(x'' AS TEXT)))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1, t0 WHERE (((CAST(x'' AS TEXT)) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1, t0 GROUP BY rt1.c2;
SELECT rt1.c1, rt1.c2, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c0;
SELECT rt1.c1, rt1.c2, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c0 HAVING AVG(rt1.c0) UNION ALL SELECT rt1.c1, rt1.c2, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c0 HAVING (NOT (AVG(rt1.c0))) UNION ALL SELECT ALL rt1.c1, rt1.c2, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c0 HAVING ((AVG(rt1.c0)) ISNULL);
SELECT rt1.c1, rt1.c2, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c0;
SELECT rt1.c1, rt1.c2, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c0 HAVING AVG(rt1.c0) UNION ALL SELECT rt1.c1, rt1.c2, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c0 HAVING (NOT (AVG(rt1.c0))) UNION ALL SELECT ALL rt1.c1, rt1.c2, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c0 HAVING ((AVG(rt1.c0)) ISNULL);
SELECT rt1.c1, rt1.c2, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c0;
SELECT rt1.c1 FROM rt1;
SELECT rt1.c1 FROM rt1 WHERE ((((((rt1.c1))<>((rt1.c1)))) IS TRUE)) UNION ALL SELECT ALL rt1.c1 FROM rt1 WHERE ((NOT ((((((rt1.c1))<>((rt1.c1)))) IS TRUE)))) UNION ALL SELECT rt1.c1 FROM rt1 WHERE ((((((((rt1.c1))<>((rt1.c1)))) IS TRUE)) ISNULL));
SELECT rt1.c1 FROM rt1;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (((((((((CASE WHEN rt1.c0 THEN rt1.c0 END)OR((((rt1.c1, rt1.c0, t0.c0)) NOT BETWEEN ((rt1.c1, rt1.c0, t0.c0)) AND ((x'', t0.c0, rt1.c1))))))AND(rt1.c1)))OR(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)))))OR(((rt1.c2) NOTNULL)))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (((((((((CASE WHEN rt1.c0 THEN rt1.c0 END)OR((((rt1.c1, rt1.c0, t0.c0)) NOT BETWEEN ((rt1.c1, rt1.c0, t0.c0)) AND ((x'', t0.c0, rt1.c1))))))AND(rt1.c1)))OR(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)))))OR(((rt1.c2) NOTNULL)))))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((((((((((CASE WHEN rt1.c0 THEN rt1.c0 END)OR((((rt1.c1, rt1.c0, t0.c0)) NOT BETWEEN ((rt1.c1, rt1.c0, t0.c0)) AND ((x'', t0.c0, rt1.c1))))))AND(rt1.c1)))OR(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)))))OR(((rt1.c2) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT ALL rt1.c0, rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c0, rt1.c2, t0.c0;
SELECT ALL rt1.c0, rt1.c2, t0.c0 FROM rt1, t0 WHERE (json_array(CAST(rt1.c2 AS REAL), rt1.c2 COLLATE NOCASE, UPPER(t0.c0), ((((rt1.c0)OR(NULL)))AND(t0.c0)))) GROUP BY rt1.c0, rt1.c2, t0.c0 UNION SELECT rt1.c0, rt1.c2, t0.c0 FROM rt1, t0 WHERE ((NOT (json_array(CAST(rt1.c2 AS REAL), rt1.c2 COLLATE NOCASE, UPPER(t0.c0), ((((rt1.c0)OR(NULL)))AND(t0.c0)))))) GROUP BY rt1.c0, rt1.c2, t0.c0 UNION SELECT ALL rt1.c0, rt1.c2, t0.c0 FROM rt1, t0 WHERE (((json_array(CAST(rt1.c2 AS REAL), rt1.c2 COLLATE NOCASE, UPPER(t0.c0), ((((rt1.c0)OR(NULL)))AND(t0.c0)))) ISNULL)) GROUP BY rt1.c0, rt1.c2, t0.c0;
SELECT ALL rt1.c0, rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c0, rt1.c2, t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(((MIN(SUM(GROUP_CONCAT(NULL))))-(COUNT(*)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(((MIN(SUM(GROUP_CONCAT(NULL))))-(COUNT(*)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(((MIN(SUM(GROUP_CONCAT(NULL))))-(COUNT(*))))) ISNULL);
SELECT ALL * FROM rt1, t0;
SELECT ALL * FROM rt1, t0 WHERE (COALESCE(DISTINCT CAST(rt1.c2 AS INTEGER), ((((rt1.c2)OR(t0.c0)))AND(rt1.c1)))) UNION ALL SELECT * FROM rt1, t0 WHERE ((NOT (COALESCE(DISTINCT CAST(rt1.c2 AS INTEGER), ((((rt1.c2)OR(t0.c0)))AND(rt1.c1)))))) UNION ALL SELECT * FROM rt1, t0 WHERE (((COALESCE(DISTINCT CAST(rt1.c2 AS INTEGER), ((((rt1.c2)OR(t0.c0)))AND(rt1.c1)))) ISNULL));
SELECT ALL * FROM rt1, t0;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (CASE ((rt1.c1)=(rt1.c2))  WHEN 0.803962224647695 THEN ((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)) ELSE 1.545066226E9 END) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (CASE ((rt1.c1)==(rt1.c2))  WHEN 0.803962224647695 THEN ((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)) ELSE 1.545066226E9 END))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((CASE ((rt1.c1)==(rt1.c2))  WHEN 0.803962224647695 THEN ((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)) ELSE 1.545066226E9 END) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c0;
SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 WHERE (((+ (rt1.c0)) IN ())) GROUP BY rt1.c2, rt1.c0, t0.c0 UNION SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 WHERE ((NOT (((+ (rt1.c0)) IN ())))) GROUP BY rt1.c2, rt1.c0, t0.c0 UNION SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 WHERE (((((+ (rt1.c0)) IN ())) ISNULL)) GROUP BY rt1.c2, rt1.c0, t0.c0;
SELECT rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c0;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING UNLIKELY(TOTAL(COUNT(*))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT (UNLIKELY(TOTAL(COUNT(*))))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((UNLIKELY(TOTAL(COUNT(*)))) ISNULL);
SELECT ALL rt1.c2, rt1.c1 FROM t0, rt1;
SELECT ALL rt1.c2, rt1.c1 FROM t0, rt1 WHERE (rt1.c2) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM t0, rt1 WHERE ((NOT (rt1.c2))) UNION ALL SELECT rt1.c2, rt1.c1 FROM t0, rt1 WHERE (((rt1.c2) ISNULL));
SELECT ALL rt1.c2, rt1.c1 FROM t0, rt1;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (rt1.c1) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CAST((+ (t0.c0)) AS REAL)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CAST((+ (t0.c0)) AS REAL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST((+ (t0.c0)) AS REAL)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING SUM(TOTAL(COUNT(*))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING (NOT (SUM(TOTAL(COUNT(*))))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING ((SUM(TOTAL(COUNT(*)))) ISNULL);
SELECT ALL t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0;
SELECT ALL t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0 WHERE (((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))) IN ())) UNION ALL SELECT ALL t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0 WHERE ((NOT (((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))) IN ())))) UNION ALL SELECT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0 WHERE (((((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))) IN ())) ISNULL));
SELECT ALL t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((rt1.c0)%(rt1.c1)))IS(rt1.c2))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT (((((rt1.c0)%(rt1.c1)))IS(rt1.c2))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE (((((((rt1.c0)%(rt1.c1)))IS(rt1.c2))) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT ALL rt1.c2, rt1.c1, t0.c0, rt1.c0 FROM rt1, t0 GROUP BY rt1.c2, rt1.c1, t0.c0, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, t0.c0, rt1.c0 FROM rt1, t0 WHERE (((CAST(rt1.c1 AS TEXT))%(((rt1.c1)/(rt1.c0))))) GROUP BY rt1.c2, rt1.c1, t0.c0, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c1, t0.c0, rt1.c0 FROM rt1, t0 WHERE ((NOT (((CAST(rt1.c1 AS TEXT))%(((rt1.c1)/(rt1.c0))))))) GROUP BY rt1.c2, rt1.c1, t0.c0, rt1.c0 UNION SELECT rt1.c2, rt1.c1, t0.c0, rt1.c0 FROM rt1, t0 WHERE (((((CAST(rt1.c1 AS TEXT))%(((rt1.c1)/(rt1.c0))))) ISNULL)) GROUP BY rt1.c2, rt1.c1, t0.c0, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, t0.c0, rt1.c0 FROM rt1, t0 GROUP BY rt1.c2, rt1.c1, t0.c0, rt1.c0;
SELECT rt1.c2 FROM t0, rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM t0, rt1 GROUP BY rt1.c2 HAVING SUM(MAX(SUM(TOTAL(GROUP_CONCAT(MIN(rt1.c1)))))) UNION ALL SELECT rt1.c2 FROM t0, rt1 GROUP BY rt1.c2 HAVING (NOT (SUM(MAX(SUM(TOTAL(GROUP_CONCAT(MIN(rt1.c1)))))))) UNION ALL SELECT ALL rt1.c2 FROM t0, rt1 GROUP BY rt1.c2 HAVING ((SUM(MAX(SUM(TOTAL(GROUP_CONCAT(MIN(rt1.c1))))))) ISNULL);
SELECT ALL rt1.c0 FROM rt1, t0 INDEXED BY i66;
SELECT rt1.c0 FROM rt1, t0 INDEXED BY i66 WHERE (((((rt1.c1) ISNULL))+(-568051827))) UNION ALL SELECT rt1.c0 FROM rt1, t0 INDEXED BY i66 WHERE ((NOT (((((rt1.c1) ISNULL))+(-568051827))))) UNION ALL SELECT rt1.c0 FROM rt1, t0 INDEXED BY i66 WHERE (((((((rt1.c1) ISNULL))+(-568051827))) ISNULL));
SELECT ALL rt1.c0 FROM rt1, t0 INDEXED BY i66;
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE (((rt1.c1) BETWEEN (rt1.c2 COLLATE BINARY) AND ((rt1.c0 IN ())))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT (((rt1.c1) BETWEEN (rt1.c2 COLLATE BINARY) AND ((rt1.c0 IN ())))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE (((((rt1.c1) BETWEEN (rt1.c2 COLLATE BINARY) AND ((rt1.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c1, rt1.c2;
SELECT t0.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c1, rt1.c2 HAVING (((SUM(rt1.c0)))=((((AVG(rt1.c2)) IS FALSE)))) UNION ALL SELECT t0.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c1, rt1.c2 HAVING (NOT ((((SUM(rt1.c0)))=((((AVG(rt1.c2)) IS FALSE)))))) UNION ALL SELECT t0.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c1, rt1.c2 HAVING (((((SUM(rt1.c0)))==((((AVG(rt1.c2)) IS FALSE))))) ISNULL);
SELECT ALL t0.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c1, rt1.c2;
SELECT t0.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c1, rt1.c2 HAVING (((SUM(rt1.c0)))=((((AVG(rt1.c2)) IS FALSE)))) UNION ALL SELECT t0.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c1, rt1.c2 HAVING (NOT ((((SUM(rt1.c0)))=((((AVG(rt1.c2)) IS FALSE)))))) UNION ALL SELECT t0.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c1, rt1.c2 HAVING (((((SUM(rt1.c0)))==((((AVG(rt1.c2)) IS FALSE))))) ISNULL);
SELECT ALL t0.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1, t0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1, t0 WHERE (((((((rt1.c0)AND(rt1.c1)))AND('m|'))) NOT BETWEEN (CAST(rt1.c1 AS REAL)) AND (rt1.c2 COLLATE NOCASE))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1, t0 WHERE ((NOT (((((((rt1.c0)AND(rt1.c1)))AND('m|'))) NOT BETWEEN (CAST(rt1.c1 AS REAL)) AND (rt1.c2 COLLATE NOCASE))))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1, t0 WHERE (((((((((rt1.c0)AND(rt1.c1)))AND('m|'))) NOT BETWEEN (CAST(rt1.c1 AS REAL)) AND (rt1.c2 COLLATE NOCASE))) ISNULL));
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (json((- (t0.c0)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (json((- (t0.c0)))))) UNION SELECT DISTINCT * FROM t0 NOT INDEXED WHERE (((json((- (t0.c0)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)||(t0.c0 COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)||(t0.c0 COLLATE RTRIM))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)||(t0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING MIN(MIN(GROUP_CONCAT(GROUP_CONCAT(MAX(GROUP_CONCAT(NULL)))))) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (MIN(MIN(GROUP_CONCAT(GROUP_CONCAT(MAX(GROUP_CONCAT(NULL)))))))) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((MIN(MIN(GROUP_CONCAT(GROUP_CONCAT(MAX(GROUP_CONCAT(NULL))))))) ISNULL);
SELECT ALL TOTAL(CAST(rt1.c0 COLLATE BINARY AS TEXT)) FROM rt1;
SELECT ALL * FROM rt1, t0;
SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c1, t0.c0, rt1.c0, rt1.c0, rt1.c1, rt1.c1, rt1.c1)) NOT BETWEEN (((~ (rt1.c2)), ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)), TRIM(rt1.c0, t0.c0), CASE WHEN rt1.c1 THEN rt1.c1 END, CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN t0.c0 WHEN rt1.c0 THEN 8.28355946E8 ELSE t0.c0 END, (((rt1.c2))==((rt1.c2))), CASE WHEN t0.c0 THEN rt1.c1 WHEN t0.c0 THEN t0.c0 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END)) AND (((+ (rt1.c1)), ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)), (((t0.c0, rt1.c2, rt1.c0))<(('0.24675958641818563', t0.c0, rt1.c2))), 0.7124809063158466, rt1.c2, ((rt1.c1) BETWEEN (rt1.c2) AND (t0.c0)), ((((((((rt1.c2)OR(rt1.c1)))AND(t0.c0)))AND(rt1.c0)))OR(rt1.c0)))))) UNION ALL SELECT ALL * FROM rt1, t0 WHERE ((NOT ((((rt1.c1, t0.c0, rt1.c0, rt1.c0, rt1.c1, rt1.c1, rt1.c1)) NOT BETWEEN (((~ (rt1.c2)), ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)), TRIM(rt1.c0, t0.c0), CASE WHEN rt1.c1 THEN rt1.c1 END, CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN t0.c0 WHEN rt1.c0 THEN 8.28355946E8 ELSE t0.c0 END, (((rt1.c2))=((rt1.c2))), CASE WHEN t0.c0 THEN rt1.c1 WHEN t0.c0 THEN t0.c0 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END)) AND (((+ (rt1.c1)), ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)), (((t0.c0, rt1.c2, rt1.c0))<(('0.24675958641818563', t0.c0, rt1.c2))), 0.7124809063158466, rt1.c2, ((rt1.c1) BETWEEN (rt1.c2) AND (t0.c0)), ((((((((rt1.c2)OR(rt1.c1)))AND(t0.c0)))AND(rt1.c0)))OR(rt1.c0)))))))) UNION ALL SELECT * FROM rt1, t0 WHERE ((((((rt1.c1, t0.c0, rt1.c0, rt1.c0, rt1.c1, rt1.c1, rt1.c1)) NOT BETWEEN (((~ (rt1.c2)), ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)), TRIM(rt1.c0, t0.c0), CASE WHEN rt1.c1 THEN rt1.c1 END, CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN t0.c0 WHEN rt1.c0 THEN 8.28355946E8 ELSE t0.c0 END, (((rt1.c2))=((rt1.c2))), CASE WHEN t0.c0 THEN rt1.c1 WHEN t0.c0 THEN t0.c0 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END)) AND (((+ (rt1.c1)), ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)), (((t0.c0, rt1.c2, rt1.c0))<(('0.24675958641818563', t0.c0, rt1.c2))), 0.7124809063158466, rt1.c2, ((rt1.c1) BETWEEN (rt1.c2) AND (t0.c0)), ((((((((rt1.c2)OR(rt1.c1)))AND(t0.c0)))AND(rt1.c0)))OR(rt1.c0)))))) ISNULL));
SELECT ALL * FROM rt1, t0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CAST((~ (rt1.c2)) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CAST((~ (rt1.c2)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CAST((~ (rt1.c2)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c1 FROM rt1, t0 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1, t0 WHERE ((rt1.c2 IN ()) COLLATE NOCASE) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1, t0 WHERE ((NOT ((rt1.c2 IN ()) COLLATE NOCASE))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1, t0 WHERE ((((rt1.c2 IN ()) COLLATE NOCASE) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1, t0 GROUP BY rt1.c1;
SELECT t0.c0, rt1.c2 FROM t0 FULL OUTER JOIN rt1 ON LIKELY(DISTINCT TYPEOF(DISTINCT rt1.c2)) GROUP BY t0.c0, rt1.c2;
SELECT t0.c0, rt1.c2 FROM t0 FULL OUTER JOIN rt1 ON LIKELY(DISTINCT TYPEOF(DISTINCT rt1.c2)) GROUP BY t0.c0, rt1.c2 HAVING (((+ (COUNT(*))))IS NOT(TOTAL(COUNT(rt1.c1)))) UNION ALL SELECT t0.c0, rt1.c2 FROM t0 FULL OUTER JOIN rt1 ON LIKELY(DISTINCT TYPEOF(DISTINCT rt1.c2)) GROUP BY t0.c0, rt1.c2 HAVING (NOT ((((+ (COUNT(*))))IS NOT(TOTAL(COUNT(rt1.c1)))))) UNION ALL SELECT t0.c0, rt1.c2 FROM t0 FULL OUTER JOIN rt1 ON LIKELY(DISTINCT TYPEOF(DISTINCT rt1.c2)) GROUP BY t0.c0, rt1.c2 HAVING (((((+ (COUNT(*))))IS NOT(TOTAL(COUNT(rt1.c1))))) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE ((NOT ((((NULL)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2)))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT ((NOT ((((NULL)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2)))))))) UNION ALL SELECT * FROM rt1 WHERE ((((NOT ((((NULL)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2)))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((- ('&J'))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT ((- ('&J'))))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((((- ('&J'))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT ALL rt1.c1, rt1.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1, t0 WHERE (t0.c0) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1, t0 WHERE ((NOT (t0.c0))) GROUP BY rt1.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c0 FROM rt1, t0 WHERE (((t0.c0) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING AVG(0X50ca3058) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING (NOT (AVG(0X50ca3058))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING ((AVG(0x50ca3058)) ISNULL);
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING AVG(0X50ca3058) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING (NOT (AVG(0X50ca3058))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING ((AVG(0x50ca3058)) ISNULL);
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT t0.c0, rt1.c1, rt1.c0, rt1.c2 FROM t0, rt1;
SELECT t0.c0, rt1.c1, rt1.c0, rt1.c2 FROM t0, rt1 WHERE (CAST(rt1.c0 AS BLOB)) UNION ALL SELECT t0.c0, rt1.c1, rt1.c0, rt1.c2 FROM t0, rt1 WHERE ((NOT (CAST(rt1.c0 AS BLOB)))) UNION ALL SELECT t0.c0, rt1.c1, rt1.c0, rt1.c2 FROM t0, rt1 WHERE (((CAST(rt1.c0 AS BLOB)) ISNULL));
SELECT t0.c0, rt1.c1, rt1.c0, rt1.c2 FROM t0, rt1;
SELECT DISTINCT rt1.c1, t0.c0, rt1.c0, rt1.c2 FROM t0, rt1;
SELECT DISTINCT rt1.c1, t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 WHERE (((((rt1.c1)OR(t0.c0)))OR(rt1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT rt1.c1, t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 WHERE ((NOT (((((rt1.c1)OR(t0.c0)))OR(rt1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT rt1.c1, t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 WHERE (((((((rt1.c1)OR(t0.c0)))OR(rt1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt1.c1, t0.c0, rt1.c0, rt1.c2 FROM t0, rt1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN t0 ON TRIM(t0.c0) COLLATE RTRIM GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN t0 ON TRIM(t0.c0) COLLATE RTRIM WHERE ((((+ (rt1.c1)))AND(t0.c0 COLLATE BINARY))) GROUP BY rt1.c2, rt1.c0, rt1.c1 UNION SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN t0 ON TRIM(t0.c0) COLLATE RTRIM WHERE ((NOT ((((+ (rt1.c1)))AND(t0.c0 COLLATE BINARY))))) GROUP BY rt1.c2, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN t0 ON TRIM(t0.c0) COLLATE RTRIM WHERE ((((((+ (rt1.c1)))AND(t0.c0 COLLATE BINARY))) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN t0 ON TRIM(t0.c0) COLLATE RTRIM GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1, rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c0, rt1.c1, rt1.c2, t0.c0;
SELECT rt1.c0, rt1.c1, rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c0, rt1.c1, rt1.c2, t0.c0 HAVING (CAST(t0.c0 AS BLOB) IN ()) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c0, rt1.c1, rt1.c2, t0.c0 HAVING (NOT ((CAST(t0.c0 AS BLOB) IN ()))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c0, rt1.c1, rt1.c2, t0.c0 HAVING (((CAST(t0.c0 AS BLOB) IN ())) ISNULL);
SELECT ALL rt1.c0, rt1.c1, rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c0, rt1.c1, rt1.c2, t0.c0;
SELECT rt1.c0, rt1.c1, rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c0, rt1.c1, rt1.c2, t0.c0 HAVING (CAST(t0.c0 AS BLOB) IN ()) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c0, rt1.c1, rt1.c2, t0.c0 HAVING (NOT ((CAST(t0.c0 AS BLOB) IN ()))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c0, rt1.c1, rt1.c2, t0.c0 HAVING (((CAST(t0.c0 AS BLOB) IN ())) ISNULL);
SELECT ALL rt1.c0, rt1.c1, rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c0, rt1.c1, rt1.c2, t0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (x'6b650fe0') UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (x'6b650fe0'))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((x'6b650fe0') ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (((+ (rt1.c2)) IN ())) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (((+ (rt1.c2)) IN ())))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((((+ (rt1.c2)) IN ())) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))) IS FALSE)) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))) IS FALSE)))) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))) IS FALSE)) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c2, rt1.c1, t0.c0, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1, t0.c0, rt1.c0;
SELECT rt1.c2, rt1.c1, t0.c0, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1, t0.c0, rt1.c0 HAVING '1935051935' UNION ALL SELECT ALL rt1.c2, rt1.c1, t0.c0, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1, t0.c0, rt1.c0 HAVING (NOT ('1935051935')) UNION ALL SELECT rt1.c2, rt1.c1, t0.c0, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1, t0.c0, rt1.c0 HAVING (('1935051935') ISNULL);
SELECT ALL rt1.c2, rt1.c1, t0.c0, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1, t0.c0, rt1.c0;
SELECT rt1.c2, rt1.c1, t0.c0, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1, t0.c0, rt1.c0 HAVING '1935051935' UNION ALL SELECT ALL rt1.c2, rt1.c1, t0.c0, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1, t0.c0, rt1.c0 HAVING (NOT ('1935051935')) UNION ALL SELECT rt1.c2, rt1.c1, t0.c0, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1, t0.c0, rt1.c0 HAVING (('1935051935') ISNULL);
SELECT ALL rt1.c2, rt1.c1, t0.c0, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1, t0.c0, rt1.c0;
SELECT * FROM rt1 CROSS JOIN t0 ON (((0Xffffffff899a79f0))>=(((((rt1.c2))>=((t0.c0))))));
SELECT * FROM rt1 CROSS JOIN t0 ON (((0xffffffff899a79f0))>=(((((rt1.c2))>=((t0.c0)))))) WHERE (((~ (rt1.c1)) IN ())) UNION ALL SELECT * FROM rt1 CROSS JOIN t0 ON (((0Xffffffff899a79f0))>=(((((rt1.c2))>=((t0.c0)))))) WHERE ((NOT (((~ (rt1.c1)) IN ())))) UNION ALL SELECT * FROM rt1 CROSS JOIN t0 ON (((0Xffffffff899a79f0))>=(((((rt1.c2))>=((t0.c0)))))) WHERE (((((~ (rt1.c1)) IN ())) ISNULL));
SELECT * FROM rt1 CROSS JOIN t0 ON (((0Xffffffff899a79f0))>=(((((rt1.c2))>=((t0.c0))))));
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CAST(((0.4360012206109235)%(rt1.c1)) AS TEXT)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CAST(((0.4360012206109235)%(rt1.c1)) AS TEXT)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CAST(((0.4360012206109235)%(rt1.c1)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL t0.c0, rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c2, rt1.c1;
SELECT ALL t0.c0, rt1.c2, rt1.c1 FROM rt1, t0 WHERE (((((t0.c0)IS NOT(rt1.c0))) NOT BETWEEN (((t0.c0)/(t0.c0))) AND (DATETIME(rt1.c1, t0.c0, rt1.c0)))) GROUP BY t0.c0, rt1.c2, rt1.c1 UNION SELECT ALL t0.c0, rt1.c2, rt1.c1 FROM rt1, t0 WHERE ((NOT (((((t0.c0)IS NOT(rt1.c0))) NOT BETWEEN (((t0.c0)/(t0.c0))) AND (DATETIME(rt1.c1, t0.c0, rt1.c0)))))) GROUP BY t0.c0, rt1.c2, rt1.c1 UNION SELECT t0.c0, rt1.c2, rt1.c1 FROM rt1, t0 WHERE (((((((t0.c0)IS NOT(rt1.c0))) NOT BETWEEN (((t0.c0)/(t0.c0))) AND (DATETIME(rt1.c1, t0.c0, rt1.c0)))) ISNULL)) GROUP BY t0.c0, rt1.c2, rt1.c1;
SELECT ALL t0.c0, rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0;
SELECT ALL rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0 HAVING MAX(((rt1.c2) IS TRUE)) UNION ALL SELECT ALL rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0 HAVING (NOT (MAX(((rt1.c2) IS TRUE)))) UNION ALL SELECT rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0 HAVING ((MAX(((rt1.c2) IS TRUE))) ISNULL);
SELECT ALL rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0;
SELECT ALL rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0 HAVING MAX(((rt1.c2) IS TRUE)) UNION ALL SELECT ALL rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0 HAVING (NOT (MAX(((rt1.c2) IS TRUE)))) UNION ALL SELECT rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0 HAVING ((MAX(((rt1.c2) IS TRUE))) ISNULL);
SELECT ALL rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0;
SELECT rt1.c2, rt1.c1, t0.c0 FROM rt1, t0;
SELECT ALL rt1.c2, rt1.c1, t0.c0 FROM rt1, t0 WHERE ((((NOT (rt1.c1))) NOT NULL)) UNION ALL SELECT rt1.c2, rt1.c1, t0.c0 FROM rt1, t0 WHERE ((NOT ((((NOT (rt1.c1))) NOT NULL)))) UNION ALL SELECT ALL rt1.c2, rt1.c1, t0.c0 FROM rt1, t0 WHERE ((((((NOT (rt1.c1))) NOT NULL)) ISNULL));
SELECT rt1.c2, rt1.c1, t0.c0 FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 NOT INDEXED;
SELECT DISTINCT * FROM rt1, t0 WHERE ((- ((rt1.c2 IN (rt1.c1))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT ((- ((rt1.c2 IN (rt1.c1))))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((((- ((rt1.c2 IN (rt1.c1))))) ISNULL));
SELECT DISTINCT * FROM rt1, t0 NOT INDEXED;
SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM t0, rt1 WHERE (CASE (~ (t0.c0))  WHEN CAST(rt1.c0 AS NUMERIC) THEN (~ (t0.c0)) END) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM t0, rt1 WHERE ((NOT (CASE (~ (t0.c0))  WHEN CAST(rt1.c0 AS NUMERIC) THEN (~ (t0.c0)) END))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM t0, rt1 WHERE (((CASE (~ (t0.c0))  WHEN CAST(rt1.c0 AS NUMERIC) THEN (~ (t0.c0)) END) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(COUNT(*)) COLLATE RTRIM UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(COUNT(*)) COLLATE RTRIM)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(COUNT(*)) COLLATE RTRIM) ISNULL);
SELECT * FROM rt1, t0;
SELECT ALL * FROM rt1, t0 WHERE ((((((rt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))GLOB(((rt1.c2)>>(t0.c0))))) UNION ALL SELECT * FROM rt1, t0 WHERE ((NOT ((((((rt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))GLOB(((rt1.c2)>>(t0.c0))))))) UNION ALL SELECT ALL * FROM rt1, t0 WHERE ((((((((rt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))GLOB(((rt1.c2)>>(t0.c0))))) ISNULL));
SELECT * FROM rt1, t0;
SELECT DISTINCT t0.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0;
SELECT DISTINCT t0.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 WHERE (rt1.c2) UNION SELECT DISTINCT t0.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT t0.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT t0.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0;
SELECT rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM t0, rt1 WHERE (TYPEOF(CAST(rt1.c2 AS REAL))) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM t0, rt1 WHERE ((NOT (TYPEOF(CAST(rt1.c2 AS REAL))))) GROUP BY rt1.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c2 FROM t0, rt1 WHERE (((TYPEOF(CAST(rt1.c2 AS REAL))) ISNULL)) GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c2;
SELECT t0.c0, rt1.c1, rt1.c0, rt1.c2 FROM t0 NATURAL JOIN rt1 GROUP BY t0.c0, rt1.c1, rt1.c0, rt1.c2;
SELECT ALL t0.c0, rt1.c1, rt1.c0, rt1.c2 FROM t0 NATURAL JOIN rt1 GROUP BY t0.c0, rt1.c1, rt1.c0, rt1.c2 HAVING (- (AVG(rt1.c2))) UNION ALL SELECT ALL t0.c0, rt1.c1, rt1.c0, rt1.c2 FROM t0 NATURAL JOIN rt1 GROUP BY t0.c0, rt1.c1, rt1.c0, rt1.c2 HAVING (NOT ((- (AVG(rt1.c2))))) UNION ALL SELECT t0.c0, rt1.c1, rt1.c0, rt1.c2 FROM t0 NATURAL JOIN rt1 GROUP BY t0.c0, rt1.c1, rt1.c0, rt1.c2 HAVING (((- (AVG(rt1.c2)))) ISNULL);
SELECT t0.c0, rt1.c1, rt1.c0, rt1.c2 FROM t0 NATURAL JOIN rt1 GROUP BY t0.c0, rt1.c1, rt1.c0, rt1.c2;
SELECT ALL t0.c0, rt1.c1, rt1.c0, rt1.c2 FROM t0 NATURAL JOIN rt1 GROUP BY t0.c0, rt1.c1, rt1.c0, rt1.c2 HAVING (- (AVG(rt1.c2))) UNION ALL SELECT ALL t0.c0, rt1.c1, rt1.c0, rt1.c2 FROM t0 NATURAL JOIN rt1 GROUP BY t0.c0, rt1.c1, rt1.c0, rt1.c2 HAVING (NOT ((- (AVG(rt1.c2))))) UNION ALL SELECT t0.c0, rt1.c1, rt1.c0, rt1.c2 FROM t0 NATURAL JOIN rt1 GROUP BY t0.c0, rt1.c1, rt1.c0, rt1.c2 HAVING (((- (AVG(rt1.c2)))) ISNULL);
SELECT t0.c0, rt1.c1, rt1.c0, rt1.c2 FROM t0 NATURAL JOIN rt1 GROUP BY t0.c0, rt1.c1, rt1.c0, rt1.c2;
SELECT ALL t0.c0 FROM t0, rt1;
SELECT ALL t0.c0 FROM t0, rt1 WHERE ((((+ (rt1.c2)))!=(((rt1.c2)+(rt1.c2))))) UNION ALL SELECT t0.c0 FROM t0, rt1 WHERE ((NOT ((((+ (rt1.c2)))!=(((rt1.c2)+(rt1.c2))))))) UNION ALL SELECT ALL t0.c0 FROM t0, rt1 WHERE ((((((+ (rt1.c2)))!=(((rt1.c2)+(rt1.c2))))) ISNULL));
SELECT ALL t0.c0 FROM t0, rt1;
SELECT DISTINCT rt1.c1, rt1.c2, t0.c0 FROM t0, rt1;
SELECT DISTINCT rt1.c1, rt1.c2, t0.c0 FROM t0, rt1 WHERE (((((NOT (t0.c0)), CASE t0.c0  WHEN rt1.c2 THEN x'a951' END, ((rt1.c1) NOTNULL)))<=((((((t0.c0)OR(rt1.c2)))AND(t0.c0)), ((rt1.c0)IS NOT(rt1.c1)), MAX(rt1.c2, rt1.c0))))) UNION SELECT DISTINCT rt1.c1, rt1.c2, t0.c0 FROM t0, rt1 WHERE ((NOT (((((NOT (t0.c0)), CASE t0.c0  WHEN rt1.c2 THEN x'a951' END, ((rt1.c1) NOTNULL)))<=((((((t0.c0)OR(rt1.c2)))AND(t0.c0)), ((rt1.c0)IS NOT(rt1.c1)), MAX(rt1.c2, rt1.c0))))))) UNION SELECT DISTINCT rt1.c1, rt1.c2, t0.c0 FROM t0, rt1 WHERE (((((((NOT (t0.c0)), CASE t0.c0  WHEN rt1.c2 THEN x'a951' END, ((rt1.c1) NOTNULL)))<=((((((t0.c0)OR(rt1.c2)))AND(t0.c0)), ((rt1.c0)IS NOT(rt1.c1)), MAX(rt1.c2, rt1.c0))))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, t0.c0 FROM t0, rt1;
SELECT t0.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 GROUP BY t0.c0, rt1.c1, rt1.c2, rt1.c0;
SELECT t0.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 WHERE ((((0.7957546135459391))<=((rt1.c1 COLLATE RTRIM)))) GROUP BY t0.c0, rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL t0.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 NOT INDEXED WHERE ((NOT ((((0.7957546135459391))<=((rt1.c1 COLLATE RTRIM)))))) GROUP BY t0.c0, rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL t0.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 WHERE ((((((0.7957546135459391))<=((rt1.c1 COLLATE RTRIM)))) ISNULL)) GROUP BY t0.c0, rt1.c1, rt1.c2, rt1.c0;
SELECT t0.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 GROUP BY t0.c0, rt1.c1, rt1.c2, rt1.c0;
SELECT ALL t0.c0, rt1.c0 FROM rt1, t0 GROUP BY t0.c0, rt1.c0;
SELECT t0.c0, rt1.c0 FROM rt1, t0 GROUP BY t0.c0, rt1.c0 HAVING AVG(MAX(MAX(COUNT(*)))) UNION ALL SELECT t0.c0, rt1.c0 FROM rt1, t0 GROUP BY t0.c0, rt1.c0 HAVING (NOT (AVG(MAX(MAX(COUNT(*)))))) UNION ALL SELECT t0.c0, rt1.c0 FROM rt1, t0 GROUP BY t0.c0, rt1.c0 HAVING ((AVG(MAX(MAX(COUNT(*))))) ISNULL);
SELECT rt1.c2 FROM rt1, t0;
SELECT rt1.c2 FROM rt1, t0 WHERE ((((t0.c0 COLLATE BINARY, rt1.c1, (rt1.c0 IN (rt1.c2))))>((((rt1.c2)&(rt1.c0)), 'Rhqp[软ᒷDQ', CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN '-1180656137' THEN rt1.c0 ELSE rt1.c0 END)))) UNION ALL SELECT rt1.c2 FROM rt1, t0 WHERE ((NOT ((((t0.c0 COLLATE BINARY, rt1.c1, (rt1.c0 IN (rt1.c2))))>((((rt1.c2)&(rt1.c0)), 'Rhqp[软ᒷDQ', CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN '-1180656137' THEN rt1.c0 ELSE rt1.c0 END)))))) UNION ALL SELECT ALL rt1.c2 FROM rt1, t0 WHERE ((((((t0.c0 COLLATE BINARY, rt1.c1, (rt1.c0 IN (rt1.c2))))>((((rt1.c2)&(rt1.c0)), 'Rhqp[软ᒷDQ', CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN '-1180656137' THEN rt1.c0 ELSE rt1.c0 END)))) ISNULL));
SELECT rt1.c2 FROM rt1, t0;
SELECT DISTINCT t0.c0 FROM rt1 FULL OUTER JOIN t0 ON ((((NULL) BETWEEN (rt1.c0) AND (rt1.c1)))*(ABS(DISTINCT t0.c0)));
SELECT DISTINCT t0.c0 FROM rt1 FULL OUTER JOIN t0 ON ((((NULL) BETWEEN (rt1.c0) AND (rt1.c1)))*(ABS(DISTINCT t0.c0))) WHERE (((rt1.c2)GLOB(rt1.c1)) COLLATE BINARY) UNION SELECT DISTINCT t0.c0 FROM rt1 FULL OUTER JOIN t0 ON ((((NULL) BETWEEN (rt1.c0) AND (rt1.c1)))*(ABS(DISTINCT t0.c0))) WHERE ((NOT (((rt1.c2)GLOB(rt1.c1)) COLLATE BINARY))) UNION SELECT DISTINCT t0.c0 FROM rt1 FULL OUTER JOIN t0 ON ((((NULL) BETWEEN (rt1.c0) AND (rt1.c1)))*(ABS(DISTINCT t0.c0))) WHERE (((((rt1.c2)GLOB(rt1.c1)) COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c0 FROM rt1 FULL OUTER JOIN t0 ON ((((NULL) BETWEEN (rt1.c0) AND (rt1.c1)))*(ABS(DISTINCT t0.c0)));
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 WHERE (TRIM(DISTINCT CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 WHEN NULL THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 ELSE 'w9' END, rt1.c0 COLLATE RTRIM)) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT (TRIM(DISTINCT CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 WHEN NULL THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 ELSE 'w9' END, rt1.c0 COLLATE RTRIM)))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE (((TRIM(DISTINCT CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 WHEN NULL THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 ELSE 'w9' END, rt1.c0 COLLATE RTRIM)) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1;
SELECT MIN(CASE WHEN 0.5200716236487104 THEN ((((rt1.c1)AND(t0.c0)))AND(rt1.c1)) END) FROM t0, rt1;
SELECT * FROM rt1, t0;
SELECT * FROM rt1, t0 WHERE ((((rt1.c2)) NOT BETWEEN ((CAST(rt1.c2 AS NUMERIC))) AND ((((((rt1.c1)OR(t0.c0)))OR(t0.c0)))))) UNION ALL SELECT ALL * FROM rt1, t0 WHERE ((NOT ((((rt1.c2)) NOT BETWEEN ((CAST(rt1.c2 AS NUMERIC))) AND ((((((rt1.c1)OR(t0.c0)))OR(t0.c0)))))))) UNION ALL SELECT ALL * FROM rt1, t0 WHERE ((((((rt1.c2)) NOT BETWEEN ((CAST(rt1.c2 AS NUMERIC))) AND ((((((rt1.c1)OR(t0.c0)))OR(t0.c0)))))) ISNULL));
SELECT * FROM rt1, t0;
SELECT DISTINCT t0.c0, rt1.c1, rt1.c0 FROM rt1, t0;
SELECT DISTINCT t0.c0, rt1.c1, rt1.c0 FROM rt1, t0 WHERE ((((~ (t0.c0))) ISNULL)) UNION SELECT DISTINCT t0.c0, rt1.c1, rt1.c0 FROM rt1, t0 WHERE ((NOT ((((~ (t0.c0))) ISNULL)))) UNION SELECT DISTINCT t0.c0, rt1.c1, rt1.c0 FROM rt1, t0 WHERE ((((((~ (t0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT t0.c0, rt1.c1, rt1.c0 FROM rt1, t0;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (-297680980 COLLATE RTRIM) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (-297680980 COLLATE RTRIM))) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((-297680980 COLLATE RTRIM) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((((LIKELIHOOD(rt1.c1, 0.06745245457853699))OR((((rt1.c2))==((SUM(rt1.c0)))))))OR(AVG(rt1.c2))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (((((LIKELIHOOD(rt1.c1, 0.06745245457853699))OR((((rt1.c2))=((SUM(rt1.c0)))))))OR(AVG(rt1.c2))))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((((((LIKELIHOOD(rt1.c1, 0.06745245457853699))OR((((rt1.c2))==((SUM(rt1.c0)))))))OR(AVG(rt1.c2)))) ISNULL);
SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((((LIKELIHOOD(rt1.c1, 0.06745245457853699))OR((((rt1.c2))==((SUM(rt1.c0)))))))OR(AVG(rt1.c2))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (((((LIKELIHOOD(rt1.c1, 0.06745245457853699))OR((((rt1.c2))=((SUM(rt1.c0)))))))OR(AVG(rt1.c2))))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((((((LIKELIHOOD(rt1.c1, 0.06745245457853699))OR((((rt1.c2))==((SUM(rt1.c0)))))))OR(AVG(rt1.c2)))) ISNULL);
SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL t0.c0, rt1.c1 FROM t0, rt1;
SELECT ALL t0.c0, rt1.c1 FROM t0, rt1 WHERE (rt1.c1) UNION ALL SELECT ALL t0.c0, rt1.c1 FROM t0, rt1 WHERE ((NOT (rt1.c1))) UNION ALL SELECT t0.c0, rt1.c1 FROM t0, rt1 WHERE (((rt1.c1) ISNULL));
SELECT ALL t0.c0, rt1.c1 FROM t0, rt1;
SELECT DISTINCT rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1, t0;
SELECT DISTINCT rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1, t0 WHERE (((((((((((((rt1.c2 COLLATE RTRIM)AND((rt1.c0 IN ()))))OR(CAST(rt1.c0 AS NUMERIC))))AND(((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))))OR(t0.c0 COLLATE BINARY)))AND(IFNULL(rt1.c1, x''))))OR(x''))) UNION SELECT DISTINCT rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1, t0 WHERE ((NOT (((((((((((((rt1.c2 COLLATE RTRIM)AND((rt1.c0 IN ()))))OR(CAST(rt1.c0 AS NUMERIC))))AND(((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))))OR(t0.c0 COLLATE BINARY)))AND(IFNULL(rt1.c1, x''))))OR(x''))))) UNION SELECT DISTINCT rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1, t0 WHERE (((((((((((((((rt1.c2 COLLATE RTRIM)AND((rt1.c0 IN ()))))OR(CAST(rt1.c0 AS NUMERIC))))AND(((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))))OR(t0.c0 COLLATE BINARY)))AND(IFNULL(rt1.c1, x''))))OR(x''))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) ISNULL)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) ISNULL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) ISNULL)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c2;
SELECT ALL t0.c0, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c2 HAVING CASE ((TOTAL(t0.c0)) BETWEEN (SUM(SUM(rt1.c1))) AND (AVG(rt1.c1)))  WHEN COUNT(rt1.c0) THEN SUM(rt1.c0) WHEN TOTAL(rt1.c2) THEN rt1.c0 WHEN AVG(MAX(MIN(rt1.c2))) THEN CAST(MAX(SUM(GROUP_CONCAT(COUNT(*)))) AS NUMERIC) ELSE CASE WHEN MIN(MIN(AVG(MIN(COUNT(*))))) THEN t0.c0 END END UNION ALL SELECT t0.c0, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c2 HAVING (NOT (CASE ((TOTAL(t0.c0)) BETWEEN (SUM(SUM(rt1.c1))) AND (AVG(rt1.c1)))  WHEN COUNT(rt1.c0) THEN SUM(rt1.c0) WHEN TOTAL(rt1.c2) THEN rt1.c0 WHEN AVG(MAX(MIN(rt1.c2))) THEN CAST(MAX(SUM(GROUP_CONCAT(COUNT(*)))) AS NUMERIC) ELSE CASE WHEN MIN(MIN(AVG(MIN(COUNT(*))))) THEN t0.c0 END END)) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c2 HAVING ((CASE ((TOTAL(t0.c0)) BETWEEN (SUM(SUM(rt1.c1))) AND (AVG(rt1.c1)))  WHEN COUNT(rt1.c0) THEN SUM(rt1.c0) WHEN TOTAL(rt1.c2) THEN rt1.c0 WHEN AVG(MAX(MIN(rt1.c2))) THEN CAST(MAX(SUM(GROUP_CONCAT(COUNT(*)))) AS NUMERIC) ELSE CASE WHEN MIN(MIN(AVG(MIN(COUNT(*))))) THEN t0.c0 END END) ISNULL);
SELECT SUM((((((rt1.c2, rt1.c0, t0.c0))<((x'', t0.c0, NULL)))) BETWEEN (CASE rt1.c1  WHEN t0.c0 THEN rt1.c0 END) AND (CAST(rt1.c0 AS TEXT)))) FROM rt1, t0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)) IN ())) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)) IN ())))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)) IN ())) ISNULL));
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) ISNULL))GLOB(CASE NULL  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0) ISNULL))GLOB(CASE NULL  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0) ISNULL))GLOB(CASE NULL  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 WHERE ((0.28079291850264854 IN ())) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT ((0.28079291850264854 IN ())))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE ((((0.28079291850264854 IN ())) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2, t0.c0 FROM rt1 INDEXED BY i31, t0 GROUP BY rt1.c2, t0.c0;
SELECT * FROM rt1, t0;
SELECT ALL * FROM rt1, t0 WHERE (((((((t0.c0)OR(rt1.c1)))AND(rt1.c1)))>=(((((rt1.c0)AND(t0.c0)))AND(rt1.c2))))) UNION ALL SELECT * FROM rt1, t0 WHERE ((NOT (((((((t0.c0)OR(rt1.c1)))AND(rt1.c1)))>=(((((rt1.c0)AND(t0.c0)))AND(rt1.c2))))))) UNION ALL SELECT * FROM rt1, t0 WHERE (((((((((t0.c0)OR(rt1.c1)))AND(rt1.c1)))>=(((((rt1.c0)AND(t0.c0)))AND(rt1.c2))))) ISNULL));
SELECT * FROM rt1, t0;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (CASE WHEN rt1.c1 COLLATE RTRIM THEN CAST(rt1.c2 AS TEXT) END) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (CASE WHEN rt1.c1 COLLATE RTRIM THEN CAST(rt1.c2 AS TEXT) END))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((CASE WHEN rt1.c1 COLLATE RTRIM THEN CAST(rt1.c2 AS TEXT) END) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 WHERE (rt1.c2) GROUP BY rt1.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (rt1.c2))) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1 WHERE (((rt1.c2) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING HEX(DISTINCT t0.c0 COLLATE NOCASE) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (HEX(DISTINCT t0.c0 COLLATE NOCASE))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((HEX(DISTINCT t0.c0 COLLATE NOCASE)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING HEX(DISTINCT t0.c0 COLLATE NOCASE) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (HEX(DISTINCT t0.c0 COLLATE NOCASE))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((HEX(DISTINCT t0.c0 COLLATE NOCASE)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (x'') UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (x''))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((x'') ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON LIKELY(CAST(rt1.c0 AS BLOB));
SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON LIKELY(CAST(rt1.c0 AS BLOB)) WHERE (CASE WHEN '63126769' THEN '-1018847298' END) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON LIKELY(CAST(rt1.c0 AS BLOB)) WHERE ((NOT (CASE WHEN '63126769' THEN '-1018847298' END))) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON LIKELY(CAST(rt1.c0 AS BLOB)) WHERE (((CASE WHEN '63126769' THEN '-1018847298' END) ISNULL));
SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON LIKELY(CAST(rt1.c0 AS BLOB));
SELECT ALL rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2;
SELECT rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1, t0 WHERE (((((((((((rt1.c2)OR('-964600447')))AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c2))) BETWEEN (((t0.c0)&(rt1.c1))) AND (((rt1.c1)IS(t0.c0))))) GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1, t0 WHERE ((NOT (((((((((((rt1.c2)OR('-964600447')))AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c2))) BETWEEN (((t0.c0)&(rt1.c1))) AND (((rt1.c1)IS(t0.c0))))))) GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1, t0 WHERE (((((((((((((rt1.c2)OR('-964600447')))AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c2))) BETWEEN (((t0.c0)&(rt1.c1))) AND (((rt1.c1)IS(t0.c0))))) ISNULL)) GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2;
SELECT rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM t0, rt1 GROUP BY rt1.c1 HAVING ((MAX(rt1.c2))/(TOTAL(MIN(rt1.c0)))) UNION ALL SELECT rt1.c1 FROM t0, rt1 GROUP BY rt1.c1 HAVING (NOT (((MAX(rt1.c2))/(TOTAL(MIN(rt1.c0)))))) UNION ALL SELECT rt1.c1 FROM t0, rt1 GROUP BY rt1.c1 HAVING ((((MAX(rt1.c2))/(TOTAL(MIN(rt1.c0))))) ISNULL);
SELECT rt1.c1, t0.c0 FROM rt1 INNER JOIN t0 ON ((((rt1.c2) NOT NULL)) IS FALSE);
SELECT ALL rt1.c1, t0.c0 FROM rt1 INNER JOIN t0 ON ((((rt1.c2) NOT NULL)) IS FALSE) WHERE (((rt1.c2 COLLATE BINARY) NOT BETWEEN (((x'')IS(rt1.c2))) AND (((rt1.c1)=(0.2900684361822399))))) UNION ALL SELECT ALL rt1.c1, t0.c0 FROM rt1 INNER JOIN t0 ON ((((rt1.c2) NOT NULL)) IS FALSE) WHERE ((NOT (((rt1.c2 COLLATE BINARY) NOT BETWEEN (((x'')IS(rt1.c2))) AND (((rt1.c1)==(0.2900684361822399))))))) UNION ALL SELECT ALL rt1.c1, t0.c0 FROM rt1 INNER JOIN t0 ON ((((rt1.c2) NOT NULL)) IS FALSE) WHERE (((((rt1.c2 COLLATE BINARY) NOT BETWEEN (((x'')IS(rt1.c2))) AND (((rt1.c1)==(0.2900684361822399))))) ISNULL));
SELECT rt1.c1, t0.c0 FROM rt1 INNER JOIN t0 ON ((((rt1.c2) NOT NULL)) IS FALSE);
SELECT DISTINCT rt1.c0 FROM t0, rt1;
SELECT DISTINCT rt1.c0 FROM t0, rt1 WHERE (UNLIKELY(rt1.c1)) UNION SELECT DISTINCT rt1.c0 FROM t0, rt1 WHERE ((NOT (UNLIKELY(rt1.c1)))) UNION SELECT DISTINCT rt1.c0 FROM t0, rt1 WHERE (((UNLIKELY(rt1.c1)) ISNULL));
SELECT DISTINCT rt1.c0 FROM t0, rt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN -1679945599 THEN t0.c0 WHEN 0.11599905139421918 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOTNULL)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((CASE WHEN t0.c0 THEN t0.c0 WHEN -1679945599 THEN t0.c0 WHEN 0.11599905139421918 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOTNULL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN -1679945599 THEN t0.c0 WHEN 0.11599905139421918 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOTNULL)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c2, rt1.c1;
SELECT t0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c2, rt1.c1 HAVING TOTAL(t0.c0) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c2, rt1.c1 HAVING (NOT (TOTAL(t0.c0))) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c2, rt1.c1 HAVING ((TOTAL(t0.c0)) ISNULL);
SELECT ALL t0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c2, rt1.c1;
SELECT t0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c2, rt1.c1 HAVING TOTAL(t0.c0) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c2, rt1.c1 HAVING (NOT (TOTAL(t0.c0))) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c2, rt1.c1 HAVING ((TOTAL(t0.c0)) ISNULL);
SELECT ALL t0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c2 FROM rt1;
SELECT ALL rt1.c2 FROM rt1 WHERE (((rt1.c0)+(rt1.c2)) COLLATE RTRIM) UNION ALL SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT (((rt1.c0)+(rt1.c2)) COLLATE RTRIM))) UNION ALL SELECT rt1.c2 FROM rt1 WHERE (((((rt1.c0)+(rt1.c2)) COLLATE RTRIM) ISNULL));
SELECT ALL rt1.c2 FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (NULL) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c0 FROM rt1, t0 INDEXED BY i66 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, t0 INDEXED BY i66 WHERE (((rt1.c2)=(rt1.c0)) COLLATE NOCASE) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1, t0 INDEXED BY i66 WHERE ((NOT (((rt1.c2)==(rt1.c0)) COLLATE NOCASE))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1, t0 INDEXED BY i66 WHERE (((((rt1.c2)==(rt1.c0)) COLLATE NOCASE) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, t0 INDEXED BY i66 GROUP BY rt1.c0;
SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c0;
SELECT rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c0;
SELECT rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c0;
SELECT rt1.c2, rt1.c0, t0.c0 FROM t0 INNER JOIN rt1 ON LIKELY((((rt1.c2))=((rt1.c2))));
SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM t0 INNER JOIN rt1 ON LIKELY((((rt1.c2))==((rt1.c2)))) WHERE ('' COLLATE BINARY) UNION ALL SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM t0 INNER JOIN rt1 ON LIKELY((((rt1.c2))=((rt1.c2)))) WHERE ((NOT ('' COLLATE BINARY))) UNION ALL SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM t0 INNER JOIN rt1 ON LIKELY((((rt1.c2))==((rt1.c2)))) WHERE ((('' COLLATE BINARY) ISNULL));
SELECT rt1.c2, rt1.c0, t0.c0 FROM t0 INNER JOIN rt1 ON LIKELY((((rt1.c2))=((rt1.c2))));
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CASE WHEN UNLIKELY(t0.c0) THEN t0.c0 ELSE (t0.c0 IN (t0.c0, t0.c0)) END) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CASE WHEN UNLIKELY(t0.c0) THEN t0.c0 ELSE (t0.c0 IN (t0.c0, t0.c0)) END))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CASE WHEN UNLIKELY(t0.c0) THEN t0.c0 ELSE (t0.c0 IN (t0.c0, t0.c0)) END) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 WHERE ((((SQLITE_COMPILEOPTION_GET(rt1.c2), rt1.c2, (((rt1.c1))==((rt1.c0)))))>=((((rt1.c2)-(rt1.c2)), ((rt1.c2)<=(rt1.c0)), (- (rt1.c2)))))) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT ((((SQLITE_COMPILEOPTION_GET(rt1.c2), rt1.c2, (((rt1.c1))==((rt1.c0)))))>=((((rt1.c2)-(rt1.c2)), ((rt1.c2)<=(rt1.c0)), (- (rt1.c2)))))))) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1 WHERE ((((((SQLITE_COMPILEOPTION_GET(rt1.c2), rt1.c2, (((rt1.c1))=((rt1.c0)))))>=((((rt1.c2)-(rt1.c2)), ((rt1.c2)<=(rt1.c0)), (- (rt1.c2)))))) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL t0.c0 FROM t0 NATURAL JOIN rt1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 NATURAL JOIN rt1 GROUP BY t0.c0 HAVING MIN(SUM(TOTAL(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 NATURAL JOIN rt1 GROUP BY t0.c0 HAVING (NOT (MIN(SUM(TOTAL(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 NATURAL JOIN rt1 GROUP BY t0.c0 HAVING ((MIN(SUM(TOTAL(t0.c0)))) ISNULL);
SELECT rt1.c1, rt1.c0 FROM rt1;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 WHERE (NULL) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (NULL))) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 WHERE (((NULL) ISNULL));
SELECT rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE (((((rt1.c0)<(rt1.c0))) IS FALSE)) GROUP BY rt1.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (((((rt1.c0)<(rt1.c0))) IS FALSE)))) GROUP BY rt1.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c1 FROM rt1 WHERE (((((((rt1.c0)<(rt1.c0))) IS FALSE)) ISNULL)) GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((((COUNT(*))IS NOT(COUNT(t0.c0)))) IS TRUE) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (((((COUNT(*))IS NOT(COUNT(t0.c0)))) IS TRUE))) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((((((COUNT(*))IS NOT(COUNT(t0.c0)))) IS TRUE)) ISNULL);
SELECT ALL rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((((COUNT(*))IS NOT(COUNT(t0.c0)))) IS TRUE) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (((((COUNT(*))IS NOT(COUNT(t0.c0)))) IS TRUE))) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((((((COUNT(*))IS NOT(COUNT(t0.c0)))) IS TRUE)) ISNULL);
SELECT ALL rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0;
SELECT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0 WHERE (CASE WHEN ((rt1.c0)||(rt1.c0)) THEN ((t0.c0) NOT NULL) WHEN (t0.c0 IN ()) THEN CAST(rt1.c2 AS TEXT) WHEN (((rt1.c2))>=((rt1.c1))) THEN ((rt1.c2)AND(t0.c0)) WHEN t0.c0 THEN (((t0.c0, rt1.c0, rt1.c0)) BETWEEN ((rt1.c1, rt1.c0, t0.c0)) AND ((rt1.c2, rt1.c0, rt1.c1))) WHEN 0.5308519975878205 THEN rt1.c0 COLLATE RTRIM ELSE ((rt1.c2) NOT NULL) END) UNION ALL SELECT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0 WHERE ((NOT (CASE WHEN ((rt1.c0)||(rt1.c0)) THEN ((t0.c0) NOT NULL) WHEN (t0.c0 IN ()) THEN CAST(rt1.c2 AS TEXT) WHEN (((rt1.c2))>=((rt1.c1))) THEN ((rt1.c2)AND(t0.c0)) WHEN t0.c0 THEN (((t0.c0, rt1.c0, rt1.c0)) BETWEEN ((rt1.c1, rt1.c0, t0.c0)) AND ((rt1.c2, rt1.c0, rt1.c1))) WHEN 0.5308519975878205 THEN rt1.c0 COLLATE RTRIM ELSE ((rt1.c2) NOT NULL) END))) UNION ALL SELECT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0 WHERE (((CASE WHEN ((rt1.c0)||(rt1.c0)) THEN ((t0.c0) NOT NULL) WHEN (t0.c0 IN ()) THEN CAST(rt1.c2 AS TEXT) WHEN (((rt1.c2))>=((rt1.c1))) THEN ((rt1.c2)AND(t0.c0)) WHEN t0.c0 THEN (((t0.c0, rt1.c0, rt1.c0)) BETWEEN ((rt1.c1, rt1.c0, t0.c0)) AND ((rt1.c2, rt1.c0, rt1.c1))) WHEN 0.5308519975878205 THEN rt1.c0 COLLATE RTRIM ELSE ((rt1.c2) NOT NULL) END) ISNULL));
SELECT ALL t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((('') ISNULL) IN ((((t0.c0, t0.c0, t0.c0))!=((-2.136283929E9, t0.c0, t0.c0))), (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((('') ISNULL) IN ((((t0.c0, t0.c0, t0.c0))!=((-2.136283929E9, t0.c0, t0.c0))), (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((('') ISNULL) IN ((((t0.c0, t0.c0, t0.c0))!=((-2.136283929E9, t0.c0, t0.c0))), (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM rt1, t0 WHERE (((((0.25944210609909346)*(rt1.c2))) NOTNULL)) GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1 UNION SELECT rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM rt1, t0 WHERE ((NOT (((((0.25944210609909346)*(rt1.c2))) NOTNULL)))) GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM rt1, t0 WHERE (((((((0.25944210609909346)*(rt1.c2))) NOTNULL)) ISNULL)) GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(COUNT(*)) COLLATE NOCASE UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(COUNT(*)) COLLATE NOCASE)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(COUNT(*)) COLLATE NOCASE) ISNULL);
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (((((~ (rt1.c2)), x'2310', (('')<(rt1.c0))))<>((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END, (rt1.c1 IN ()), LOWER(rt1.c1))))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((((~ (rt1.c2)), x'2310', (('')<(rt1.c0))))!=((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END, (rt1.c1 IN ()), LOWER(rt1.c1))))))) UNION ALL SELECT * FROM rt1 WHERE (((((((~ (rt1.c2)), x'2310', (('')<(rt1.c0))))<>((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END, (rt1.c1 IN ()), LOWER(rt1.c1))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0))<>((LIKELIHOOD('0.984736515036829', 0.9031598783454987))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c0))!=((LIKELIHOOD('0.984736515036829', 0.9031598783454987))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0))<>((LIKELIHOOD('0.984736515036829', 0.9031598783454987))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0, rt1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, rt1 WHERE (((((CASE WHEN rt1.c1 THEN t0.c0 ELSE rt1.c0 END)AND(((t0.c0)>=(rt1.c2)))))AND(x''))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, rt1 WHERE ((NOT (((((CASE WHEN rt1.c1 THEN t0.c0 ELSE rt1.c0 END)AND(((t0.c0)>=(rt1.c2)))))AND(x''))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, rt1 WHERE (((((((CASE WHEN rt1.c1 THEN t0.c0 ELSE rt1.c0 END)AND(((t0.c0)>=(rt1.c2)))))AND(x''))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, rt1 GROUP BY t0.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (((COUNT(MAX(rt1.c0))))<((COUNT(SUM(rt1.c1))))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT ((((COUNT(MAX(rt1.c0))))<((COUNT(SUM(rt1.c1))))))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (((((COUNT(MAX(rt1.c0))))<((COUNT(SUM(rt1.c1)))))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND ((0xffffffffcff9a8ea)))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND ((0Xffffffffcff9a8ea)))))) UNION ALL SELECT * FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND ((0Xffffffffcff9a8ea)))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1;
SELECT DISTINCT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1 WHERE (((rt1.c2 COLLATE BINARY)GLOB(((-81073959) NOT BETWEEN (rt1.c2) AND (rt1.c2))))) UNION SELECT DISTINCT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1 WHERE ((NOT (((rt1.c2 COLLATE BINARY)GLOB(((-81073959) NOT BETWEEN (rt1.c2) AND (rt1.c2))))))) UNION SELECT DISTINCT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1 WHERE (((((rt1.c2 COLLATE BINARY)GLOB(((-81073959) NOT BETWEEN (rt1.c2) AND (rt1.c2))))) ISNULL));
SELECT DISTINCT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1;
SELECT rt1.c2, rt1.c0 FROM rt1 FULL OUTER JOIN t0 ON 'qVQ囉jbo' GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM rt1 FULL OUTER JOIN t0 ON 'qVQ囉jbo' WHERE (rt1.c0) GROUP BY rt1.c2, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c0 FROM rt1 FULL OUTER JOIN t0 ON 'qVQ囉jbo' WHERE ((NOT (rt1.c0))) GROUP BY rt1.c2, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c0 FROM rt1 FULL OUTER JOIN t0 ON 'qVQ囉jbo' WHERE (((rt1.c0) ISNULL)) GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM rt1 FULL OUTER JOIN t0 ON 'qVQ囉jbo' GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c0, t0.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, t0.c0, rt1.c1;
SELECT ALL rt1.c0, t0.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, t0.c0, rt1.c1 HAVING MAX(rt1.c1) UNION ALL SELECT ALL rt1.c0, t0.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, t0.c0, rt1.c1 HAVING (NOT (MAX(rt1.c1))) UNION ALL SELECT rt1.c0, t0.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, t0.c0, rt1.c1 HAVING ((MAX(rt1.c1)) ISNULL);
SELECT ALL rt1.c0, t0.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, t0.c0, rt1.c1;
SELECT ALL rt1.c0, t0.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, t0.c0, rt1.c1 HAVING MAX(rt1.c1) UNION ALL SELECT ALL rt1.c0, t0.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, t0.c0, rt1.c1 HAVING (NOT (MAX(rt1.c1))) UNION ALL SELECT rt1.c0, t0.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, t0.c0, rt1.c1 HAVING ((MAX(rt1.c1)) ISNULL);
SELECT ALL rt1.c0, t0.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, t0.c0, rt1.c1;
SELECT ALL rt1.c1, rt1.c2 FROM rt1;
SELECT rt1.c1, rt1.c2 FROM rt1 WHERE (((((((rt1.c0)OR(NULL)))AND(rt1.c2)))>(((rt1.c1) IS TRUE)))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (((((((rt1.c0)OR(NULL)))AND(rt1.c2)))>(((rt1.c1) IS TRUE)))))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE (((((((((rt1.c0)OR(NULL)))AND(rt1.c2)))>(((rt1.c1) IS TRUE)))) ISNULL));
SELECT ALL rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c0, t0.c0, rt1.c2, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON ((rt1.c0 COLLATE RTRIM) BETWEEN ((((t0.c0))<=((rt1.c0)))) AND (((rt1.c1)==(rt1.c1))));
SELECT DISTINCT rt1.c0, t0.c0, rt1.c2, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON ((rt1.c0 COLLATE RTRIM) BETWEEN ((((t0.c0))<=((rt1.c0)))) AND (((rt1.c1)=(rt1.c1)))) WHERE (((NULL) BETWEEN ('435560445') AND (NULL)) COLLATE RTRIM) UNION SELECT DISTINCT rt1.c0, t0.c0, rt1.c2, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON ((rt1.c0 COLLATE RTRIM) BETWEEN ((((t0.c0))<=((rt1.c0)))) AND (((rt1.c1)==(rt1.c1)))) WHERE ((NOT (((NULL) BETWEEN ('435560445') AND (NULL)) COLLATE RTRIM))) UNION SELECT DISTINCT rt1.c0, t0.c0, rt1.c2, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON ((rt1.c0 COLLATE RTRIM) BETWEEN ((((t0.c0))<=((rt1.c0)))) AND (((rt1.c1)=(rt1.c1)))) WHERE (((((NULL) BETWEEN ('435560445') AND (NULL)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt1.c0, t0.c0, rt1.c2, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON ((rt1.c0 COLLATE RTRIM) BETWEEN ((((t0.c0))<=((rt1.c0)))) AND (((rt1.c1)==(rt1.c1))));
SELECT rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM t0, rt1 WHERE (72077926) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM t0, rt1 WHERE ((NOT (72077926))) GROUP BY rt1.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c2 FROM t0, rt1 WHERE (((72077926) ISNULL)) GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE t0.c0  WHEN COUNT(AVG(SUM(t0.c0))) THEN t0.c0 END) NOT BETWEEN (LIKELY(GROUP_CONCAT(MAX('-480815304')))) AND (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((CASE t0.c0  WHEN COUNT(AVG(SUM(t0.c0))) THEN t0.c0 END) NOT BETWEEN (LIKELY(GROUP_CONCAT(MAX('-480815304')))) AND (COUNT(*))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((CASE t0.c0  WHEN COUNT(AVG(SUM(t0.c0))) THEN t0.c0 END) NOT BETWEEN (LIKELY(GROUP_CONCAT(MAX('-480815304')))) AND (COUNT(*)))) ISNULL);
SELECT * FROM rt1, t0;
SELECT * FROM rt1, t0 WHERE (rt1.c1) UNION ALL SELECT * FROM rt1, t0 WHERE ((NOT (rt1.c1))) UNION ALL SELECT * FROM rt1, t0 WHERE (((rt1.c1) ISNULL));
SELECT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 NOT INDEXED WHERE (((CAST(rt1.c2 AS REAL)) NOT BETWEEN (((rt1.c2)+('	bH5#ꣷ꾺Hg'))) AND ((~ (rt1.c1))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((CAST(rt1.c2 AS REAL)) NOT BETWEEN (((rt1.c2)+('	bH5#ꣷ꾺Hg'))) AND ((~ (rt1.c1))))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((CAST(rt1.c2 AS REAL)) NOT BETWEEN (((rt1.c2)+('	bH5#ꣷ꾺Hg'))) AND ((~ (rt1.c1))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) COLLATE RTRIM) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM rt1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM rt1, t0 GROUP BY t0.c0 HAVING (COUNT(rt1.c2) IN (MAX(MAX(MIN(MAX(TOTAL(t0.c0))))))) UNION ALL SELECT t0.c0 FROM rt1, t0 GROUP BY t0.c0 HAVING (NOT ((COUNT(rt1.c2) IN (MAX(MAX(MIN(MAX(TOTAL(t0.c0))))))))) UNION ALL SELECT ALL t0.c0 FROM rt1, t0 GROUP BY t0.c0 HAVING (((COUNT(rt1.c2) IN (MAX(MAX(MIN(MAX(TOTAL(t0.c0)))))))) ISNULL);
SELECT ALL * FROM rt1, t0;
SELECT * FROM rt1, t0 WHERE (0.18004011634800043) UNION ALL SELECT * FROM rt1, t0 WHERE ((NOT (0.18004011634800043))) UNION ALL SELECT * FROM rt1, t0 WHERE (((0.18004011634800043) ISNULL));
SELECT ALL * FROM rt1, t0;
SELECT DISTINCT rt1.c0, t0.c0, rt1.c2 FROM rt1 LEFT OUTER JOIN t0 ON ((((((rt1.c1)AND(rt1.c1)))OR(rt1.c1))) ISNULL);
SELECT DISTINCT rt1.c0, t0.c0, rt1.c2 FROM rt1 LEFT OUTER JOIN t0 ON ((((((rt1.c1)AND(rt1.c1)))OR(rt1.c1))) ISNULL) WHERE ((((rt1.c0, '0.8630880678065277', rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c0, rt1.c0)) AND ((rt1.c1, rt1.c2, t0.c0))) COLLATE RTRIM) UNION SELECT DISTINCT rt1.c0, t0.c0, rt1.c2 FROM rt1 LEFT OUTER JOIN t0 ON ((((((rt1.c1)AND(rt1.c1)))OR(rt1.c1))) ISNULL) WHERE ((NOT ((((rt1.c0, '0.8630880678065277', rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c0, rt1.c0)) AND ((rt1.c1, rt1.c2, t0.c0))) COLLATE RTRIM))) UNION SELECT DISTINCT rt1.c0, t0.c0, rt1.c2 FROM rt1 LEFT OUTER JOIN t0 ON ((((((rt1.c1)AND(rt1.c1)))OR(rt1.c1))) ISNULL) WHERE ((((((rt1.c0, '0.8630880678065277', rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c0, rt1.c0)) AND ((rt1.c1, rt1.c2, t0.c0))) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt1.c0, t0.c0, rt1.c2 FROM rt1 LEFT OUTER JOIN t0 ON ((((((rt1.c1)AND(rt1.c1)))OR(rt1.c1))) ISNULL);
SELECT ALL rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM rt1 RIGHT OUTER JOIN t0 ON ((((rt1.c1 COLLATE RTRIM)OR((rt1.c2 IN ()))))OR(((t0.c0) NOT BETWEEN (rt1.c2) AND (t0.c0)))) GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0;
SELECT rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM rt1 RIGHT OUTER JOIN t0 ON ((((rt1.c1 COLLATE RTRIM)OR((rt1.c2 IN ()))))OR(((t0.c0) NOT BETWEEN (rt1.c2) AND (t0.c0)))) WHERE (((((rt1.c1)%(rt1.c2))) IS TRUE)) GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM rt1 RIGHT OUTER JOIN t0 ON ((((rt1.c1 COLLATE RTRIM)OR((rt1.c2 IN ()))))OR(((t0.c0) NOT BETWEEN (rt1.c2) AND (t0.c0)))) WHERE ((NOT (((((rt1.c1)%(rt1.c2))) IS TRUE)))) GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0 UNION SELECT rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM rt1 RIGHT OUTER JOIN t0 ON ((((rt1.c1 COLLATE RTRIM)OR((rt1.c2 IN ()))))OR(((t0.c0) NOT BETWEEN (rt1.c2) AND (t0.c0)))) WHERE (((((((rt1.c1)%(rt1.c2))) IS TRUE)) ISNULL)) GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM rt1 RIGHT OUTER JOIN t0 ON ((((rt1.c1 COLLATE RTRIM)OR((rt1.c2 IN ()))))OR(((t0.c0) NOT BETWEEN (rt1.c2) AND (t0.c0)))) GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(TOTAL(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(TOTAL(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(TOTAL(t0.c0))) ISNULL);
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (CASE WHEN (NOT (rt1.c1)) THEN x'' WHEN COALESCE(DISTINCT rt1.c1, rt1.c0, rt1.c1, rt1.c2, rt1.c2, rt1.c1) THEN (rt1.c0 IN ()) WHEN ((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)) THEN CASE rt1.c2  WHEN NULL THEN rt1.c2 WHEN rt1.c1 THEN x'e002' WHEN rt1.c2 THEN 1515694036 END ELSE ((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)) END) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (CASE WHEN (NOT (rt1.c1)) THEN x'' WHEN COALESCE(DISTINCT rt1.c1, rt1.c0, rt1.c1, rt1.c2, rt1.c2, rt1.c1) THEN (rt1.c0 IN ()) WHEN ((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)) THEN CASE rt1.c2  WHEN NULL THEN rt1.c2 WHEN rt1.c1 THEN x'e002' WHEN rt1.c2 THEN 1515694036 END ELSE ((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)) END))) UNION ALL SELECT ALL * FROM rt1 WHERE (((CASE WHEN (NOT (rt1.c1)) THEN x'' WHEN COALESCE(DISTINCT rt1.c1, rt1.c0, rt1.c1, rt1.c2, rt1.c2, rt1.c1) THEN (rt1.c0 IN ()) WHEN ((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)) THEN CASE rt1.c2  WHEN NULL THEN rt1.c2 WHEN rt1.c1 THEN x'e002' WHEN rt1.c2 THEN 1515694036 END ELSE ((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)) END) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM t0 FULL OUTER JOIN rt1 ON (- (rt1.c2)) COLLATE BINARY;
SELECT DISTINCT t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM t0 FULL OUTER JOIN rt1 ON (- (rt1.c2)) COLLATE BINARY WHERE ('756672644' COLLATE NOCASE) UNION SELECT DISTINCT t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM t0 FULL OUTER JOIN rt1 ON (- (rt1.c2)) COLLATE BINARY WHERE ((NOT ('756672644' COLLATE NOCASE))) UNION SELECT DISTINCT t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM t0 FULL OUTER JOIN rt1 ON (- (rt1.c2)) COLLATE BINARY WHERE ((('756672644' COLLATE NOCASE) ISNULL));
SELECT DISTINCT t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM t0 FULL OUTER JOIN rt1 ON (- (rt1.c2)) COLLATE BINARY;
SELECT ALL rt1.c2, rt1.c0, rt1.c1, t0.c0 FROM t0 INNER JOIN rt1 ON CASE WHEN t0.c0 THEN rt1.c2 ELSE rt1.c2 END COLLATE NOCASE GROUP BY rt1.c2, rt1.c0, rt1.c1, t0.c0;
SELECT rt1.c2, rt1.c0, rt1.c1, t0.c0 FROM t0 INNER JOIN rt1 ON CASE WHEN t0.c0 THEN rt1.c2 ELSE rt1.c2 END COLLATE NOCASE WHERE ((NOT ((- (rt1.c1))))) GROUP BY rt1.c2, rt1.c0, rt1.c1, t0.c0 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c1, t0.c0 FROM t0 INNER JOIN rt1 ON CASE WHEN t0.c0 THEN rt1.c2 ELSE rt1.c2 END COLLATE NOCASE WHERE ((NOT ((NOT ((- (rt1.c1))))))) GROUP BY rt1.c2, rt1.c0, rt1.c1, t0.c0 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c1, t0.c0 FROM t0 INNER JOIN rt1 ON CASE WHEN t0.c0 THEN rt1.c2 ELSE rt1.c2 END COLLATE NOCASE WHERE ((((NOT ((- (rt1.c1))))) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c1, t0.c0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1, t0.c0 FROM t0 INNER JOIN rt1 ON CASE WHEN t0.c0 THEN rt1.c2 ELSE rt1.c2 END COLLATE NOCASE GROUP BY rt1.c2, rt1.c0, rt1.c1, t0.c0;
SELECT ALL rt1.c2, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((MIN(SUM(MAX(rt1.c2)))) IS TRUE) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (((MIN(SUM(MAX(rt1.c2)))) IS TRUE))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((((MIN(SUM(MAX(rt1.c2)))) IS TRUE)) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((t0.c0) NOT BETWEEN (((t0.c0) NOT NULL)) AND (UNLIKELY(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((t0.c0) NOT BETWEEN (((t0.c0) NOT NULL)) AND (UNLIKELY(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0) NOT BETWEEN (((t0.c0) NOT NULL)) AND (UNLIKELY(t0.c0)))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE ((((t0.c0)OR(t0.c0)))AND(t0.c0))  WHEN ((t0.c0)<=(t0.c0)) THEN ((((1.971572197E9)OR(t0.c0)))AND(t0.c0)) ELSE (t0.c0 IN ()) END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE ((((t0.c0)OR(t0.c0)))AND(t0.c0))  WHEN ((t0.c0)<=(t0.c0)) THEN ((((1.971572197E9)OR(t0.c0)))AND(t0.c0)) ELSE (t0.c0 IN ()) END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE ((((t0.c0)OR(t0.c0)))AND(t0.c0))  WHEN ((t0.c0)<=(t0.c0)) THEN ((((1.971572197E9)OR(t0.c0)))AND(t0.c0)) ELSE (t0.c0 IN ()) END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 CROSS JOIN t0 ON (((rt1.c0)>=(rt1.c1)) IN ()) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 CROSS JOIN t0 ON (((rt1.c0)>=(rt1.c1)) IN ()) GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING TOTAL(AVG(rt1.c0)) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 CROSS JOIN t0 ON (((rt1.c0)>=(rt1.c1)) IN ()) GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (TOTAL(AVG(rt1.c0)))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 CROSS JOIN t0 ON (((rt1.c0)>=(rt1.c1)) IN ()) GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((TOTAL(AVG(rt1.c0))) ISNULL);
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (((((rt1.c2)||(rt1.c0))) IS TRUE)) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((((rt1.c2)||(rt1.c0))) IS TRUE)))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((((rt1.c2)||(rt1.c0))) IS TRUE)) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((UNLIKELY(DISTINCT t0.c0)) NOT BETWEEN ((t0.c0 IN ())) AND ((t0.c0 IN (t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((UNLIKELY(DISTINCT t0.c0)) NOT BETWEEN ((t0.c0 IN ())) AND ((t0.c0 IN (t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((UNLIKELY(DISTINCT t0.c0)) NOT BETWEEN ((t0.c0 IN ())) AND ((t0.c0 IN (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 WHERE (((NULL) BETWEEN (rt1.c2) AND (TRIM(DISTINCT rt1.c2)))) GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 WHERE ((NOT (((NULL) BETWEEN (rt1.c2) AND (TRIM(DISTINCT rt1.c2)))))) GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 NOT INDEXED WHERE (((((NULL) BETWEEN (rt1.c2) AND (TRIM(DISTINCT rt1.c2)))) ISNULL)) GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2;
SELECT ALL rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0;
SELECT ALL rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0 HAVING GROUP_CONCAT(t0.c0) UNION ALL SELECT ALL rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0 HAVING (NOT (GROUP_CONCAT(t0.c0))) UNION ALL SELECT rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0 HAVING ((GROUP_CONCAT(t0.c0)) ISNULL);
SELECT ALL rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0;
SELECT ALL rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0 HAVING GROUP_CONCAT(t0.c0) UNION ALL SELECT ALL rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0 HAVING (NOT (GROUP_CONCAT(t0.c0))) UNION ALL SELECT rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0 HAVING ((GROUP_CONCAT(t0.c0)) ISNULL);
SELECT ALL rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0;
SELECT ALL rt1.c1 FROM t0, rt1;
SELECT ALL rt1.c1 FROM t0, rt1 WHERE ((((((((t0.c0, t0.c0, t0.c0, t0.c0, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c0, rt1.c0, rt1.c0, t0.c0)) AND ((t0.c0, t0.c0, rt1.c0, rt1.c1, rt1.c2))))OR(rt1.c1 COLLATE BINARY)))AND(rt1.c2 COLLATE NOCASE))) UNION ALL SELECT ALL rt1.c1 FROM t0, rt1 WHERE ((NOT ((((((((t0.c0, t0.c0, t0.c0, t0.c0, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c0, rt1.c0, rt1.c0, t0.c0)) AND ((t0.c0, t0.c0, rt1.c0, rt1.c1, rt1.c2))))OR(rt1.c1 COLLATE BINARY)))AND(rt1.c2 COLLATE NOCASE))))) UNION ALL SELECT rt1.c1 FROM t0, rt1 WHERE ((((((((((t0.c0, t0.c0, t0.c0, t0.c0, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c0, rt1.c0, rt1.c0, t0.c0)) AND ((t0.c0, t0.c0, rt1.c0, rt1.c1, rt1.c2))))OR(rt1.c1 COLLATE BINARY)))AND(rt1.c2 COLLATE NOCASE))) ISNULL));
SELECT ALL rt1.c1 FROM t0, rt1;
SELECT DISTINCT rt1.c1, t0.c0, rt1.c2 FROM t0, rt1;
SELECT DISTINCT rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 WHERE (((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))<<(LIKELY(DISTINCT rt1.c1)))) UNION SELECT DISTINCT rt1.c1, t0.c0, rt1.c2 FROM t0 NOT INDEXED, rt1 WHERE ((NOT (((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))<<(LIKELY(DISTINCT rt1.c1)))))) UNION SELECT DISTINCT rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 WHERE (((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))<<(LIKELY(DISTINCT rt1.c1)))) ISNULL));
SELECT DISTINCT rt1.c1, t0.c0, rt1.c2 FROM t0, rt1;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM t0 CROSS JOIN rt1 ON ((((((rt1.c2)<(rt1.c0)))OR(((rt1.c2)AND(rt1.c1)))))AND('-1657275258')) GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM t0 CROSS JOIN rt1 ON ((((((rt1.c2)<(rt1.c0)))OR(((rt1.c2)AND(rt1.c1)))))AND('-1657275258')) WHERE (((((rt1.c0)IS(x'')))OR((rt1.c0 IN (rt1.c2))))) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM t0 CROSS JOIN rt1 ON ((((((rt1.c2)<(rt1.c0)))OR(((rt1.c2)AND(rt1.c1)))))AND('-1657275258')) WHERE ((NOT (((((rt1.c0)IS(x'')))OR((rt1.c0 IN (rt1.c2))))))) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT rt1.c2, rt1.c1, rt1.c0 FROM t0 CROSS JOIN rt1 ON ((((((rt1.c2)<(rt1.c0)))OR(((rt1.c2)AND(rt1.c1)))))AND('-1657275258')) WHERE (((((((rt1.c0)IS(x'')))OR((rt1.c0 IN (rt1.c2))))) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM t0 CROSS JOIN rt1 ON ((((((rt1.c2)<(rt1.c0)))OR(((rt1.c2)AND(rt1.c1)))))AND('-1657275258')) GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((((((SUM(GROUP_CONCAT(rt1.c0))) NOT BETWEEN (GROUP_CONCAT(rt1.c2)) AND (rt1.c2)))AND((((rt1.c0))!=((GROUP_CONCAT(TOTAL(rt1.c0))))))))AND(GROUP_CONCAT(GROUP_CONCAT(rt1.c0)))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (((((((SUM(GROUP_CONCAT(rt1.c0))) NOT BETWEEN (GROUP_CONCAT(rt1.c2)) AND (rt1.c2)))AND((((rt1.c0))<>((GROUP_CONCAT(TOTAL(rt1.c0))))))))AND(GROUP_CONCAT(GROUP_CONCAT(rt1.c0)))))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((((((((SUM(GROUP_CONCAT(rt1.c0))) NOT BETWEEN (GROUP_CONCAT(rt1.c2)) AND (rt1.c2)))AND((((rt1.c0))<>((GROUP_CONCAT(TOTAL(rt1.c0))))))))AND(GROUP_CONCAT(GROUP_CONCAT(rt1.c0))))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE ((((((((((t0.c0 IN ()))AND((NOT (t0.c0)))))AND(t0.c0 COLLATE NOCASE)))OR(((t0.c0) IS FALSE))))OR((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((((((((t0.c0 IN ()))AND((NOT (t0.c0)))))AND(t0.c0 COLLATE NOCASE)))OR(((t0.c0) IS FALSE))))OR((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((((((((t0.c0 IN ()))AND((NOT (t0.c0)))))AND(t0.c0 COLLATE NOCASE)))OR(((t0.c0) IS FALSE))))OR((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1 WHERE (CAST((+ (rt1.c1)) AS REAL)) UNION SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (CAST((+ (rt1.c1)) AS REAL)))) UNION SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1 WHERE (((CAST((+ (rt1.c1)) AS REAL)) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((t0.c0 COLLATE NOCASE IN ())) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((t0.c0 COLLATE NOCASE IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((t0.c0 COLLATE NOCASE IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(TOTAL(AVG(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(TOTAL(AVG(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(TOTAL(AVG(t0.c0)))) ISNULL);
SELECT ALL * FROM t0, rt1;
SELECT ALL * FROM t0, rt1 WHERE (NULLIF(((((((((rt1.c0)AND('|S')))AND(t0.c0)))AND(rt1.c1)))OR(t0.c0)), (rt1.c0 IN ()))) UNION ALL SELECT * FROM t0, rt1 WHERE ((NOT (NULLIF(((((((((rt1.c0)AND('|S')))AND(t0.c0)))AND(rt1.c1)))OR(t0.c0)), (rt1.c0 IN ()))))) UNION ALL SELECT * FROM t0, rt1 WHERE (((NULLIF(((((((((rt1.c0)AND('|S')))AND(t0.c0)))AND(rt1.c1)))OR(t0.c0)), (rt1.c0 IN ()))) ISNULL));
SELECT ALL * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (((((rt1.c0)-(t0.c0))) BETWEEN (ROUND(rt1.c1, t0.c0)) AND (LAST_INSERT_ROWID()))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (((((rt1.c0)-(t0.c0))) BETWEEN (ROUND(rt1.c1, t0.c0)) AND (LAST_INSERT_ROWID()))))) UNION SELECT DISTINCT * FROM t0 NOT INDEXED, rt1 WHERE (((((((rt1.c0)-(t0.c0))) BETWEEN (ROUND(rt1.c1, t0.c0)) AND (LAST_INSERT_ROWID()))) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((- (t0.c0))) NOTNULL)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((- (t0.c0))) NOTNULL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((- (t0.c0))) NOTNULL)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c2 FROM rt1, t0 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1, t0 GROUP BY rt1.c2 HAVING ((CASE rt1.c2  WHEN MAX(COUNT(COUNT(*))) THEN GROUP_CONCAT(rt1.c1) ELSE SUM(COUNT(*)) END) NOTNULL) UNION ALL SELECT rt1.c2 FROM rt1, t0 GROUP BY rt1.c2 HAVING (NOT (((CASE rt1.c2  WHEN MAX(COUNT(COUNT(*))) THEN GROUP_CONCAT(rt1.c1) ELSE SUM(COUNT(*)) END) NOTNULL))) UNION ALL SELECT ALL rt1.c2 FROM rt1, t0 GROUP BY rt1.c2 HAVING ((((CASE rt1.c2  WHEN MAX(COUNT(COUNT(*))) THEN GROUP_CONCAT(rt1.c1) ELSE SUM(COUNT(*)) END) NOTNULL)) ISNULL);
SELECT ALL MIN(((((0.9906662147085641) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND ((('-531167018')!=(t0.c0))))) FROM t0;
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (((((((((CAST(rt1.c0 AS BLOB))AND(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))))OR((rt1.c2 IN ()))))AND(((rt1.c0)IS(rt1.c2)))))AND(((rt1.c1)GLOB(rt1.c0))))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((((((((CAST(rt1.c0 AS BLOB))AND(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))))OR((rt1.c2 IN ()))))AND(((rt1.c0)IS(rt1.c2)))))AND(((rt1.c1)GLOB(rt1.c0))))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((((((((CAST(rt1.c0 AS BLOB))AND(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))))OR((rt1.c2 IN ()))))AND(((rt1.c0)IS(rt1.c2)))))AND(((rt1.c1)GLOB(rt1.c0))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((((rt1.c1)AND(rt1.c2)))AND(t0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT (((((((rt1.c1)AND(rt1.c2)))AND(t0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE (((((((((rt1.c1)AND(rt1.c2)))AND(t0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2;
SELECT rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 WHERE ((((((rt1.c2))>=((rt1.c1)))) IS FALSE)) GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 WHERE ((NOT ((((((rt1.c2))>=((rt1.c1)))) IS FALSE)))) GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 WHERE ((((((((rt1.c2))>=((rt1.c1)))) IS FALSE)) ISNULL)) GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2;
SELECT rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING SUM(((TOTAL(0.01965050919861111)) NOT BETWEEN (GROUP_CONCAT(rt1.c0)) AND (rt1.c1))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT (SUM(((TOTAL(0.01965050919861111)) NOT BETWEEN (GROUP_CONCAT(rt1.c0)) AND (rt1.c1))))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((SUM(((TOTAL(0.01965050919861111)) NOT BETWEEN (GROUP_CONCAT(rt1.c0)) AND (rt1.c1)))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (TYPEOF(t0.c0) COLLATE RTRIM) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (TYPEOF(t0.c0) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM t0 WHERE (((TYPEOF(t0.c0) COLLATE RTRIM) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)&(t0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0)&(t0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM t0 NOT INDEXED WHERE (((((((t0.c0)&(t0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt1.c1, rt1.c0, t0.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, rt1.c0, t0.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, t0.c0, rt1.c2 FROM rt1, t0 WHERE ((((rt1.c2)) BETWEEN ((0.2621616435251958)) AND ((((rt1.c2)+(rt1.c0)))))) GROUP BY rt1.c1, rt1.c0, t0.c0, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c0, t0.c0, rt1.c2 FROM rt1, t0 WHERE ((NOT ((((rt1.c2)) BETWEEN ((0.2621616435251958)) AND ((((rt1.c2)+(rt1.c0)))))))) GROUP BY rt1.c1, rt1.c0, t0.c0, rt1.c2 UNION SELECT rt1.c1, rt1.c0, t0.c0, rt1.c2 FROM rt1, t0 WHERE ((((((rt1.c2)) BETWEEN ((0.2621616435251958)) AND ((((rt1.c2)+(rt1.c0)))))) ISNULL)) GROUP BY rt1.c1, rt1.c0, t0.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, t0.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, rt1.c0, t0.c0, rt1.c2;
SELECT t0.c0, rt1.c2, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c1;
SELECT t0.c0, rt1.c2, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c1 HAVING (MAX(GROUP_CONCAT(rt1.c2)) IN ()) UNION ALL SELECT t0.c0, rt1.c2, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c1 HAVING (NOT ((MAX(GROUP_CONCAT(rt1.c2)) IN ()))) UNION ALL SELECT t0.c0, rt1.c2, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c1 HAVING (((MAX(GROUP_CONCAT(rt1.c2)) IN ())) ISNULL);
SELECT t0.c0, rt1.c2, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c1;
SELECT t0.c0, rt1.c2, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c1 HAVING (MAX(GROUP_CONCAT(rt1.c2)) IN ()) UNION ALL SELECT t0.c0, rt1.c2, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c1 HAVING (NOT ((MAX(GROUP_CONCAT(rt1.c2)) IN ()))) UNION ALL SELECT t0.c0, rt1.c2, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c1 HAVING (((MAX(GROUP_CONCAT(rt1.c2)) IN ())) ISNULL);
SELECT t0.c0, rt1.c2, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c0, t0.c0 FROM rt1 RIGHT OUTER JOIN t0 ON ((rt1.c2 IN ()) IN ());
SELECT rt1.c2, rt1.c0, t0.c0 FROM rt1 RIGHT OUTER JOIN t0 ON ((rt1.c2 IN ()) IN ()) WHERE (0Xffffffffffffffff COLLATE BINARY) UNION ALL SELECT rt1.c2, rt1.c0, t0.c0 FROM rt1 RIGHT OUTER JOIN t0 ON ((rt1.c2 IN ()) IN ()) WHERE ((NOT (0Xffffffffffffffff COLLATE BINARY))) UNION ALL SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM rt1 RIGHT OUTER JOIN t0 ON ((rt1.c2 IN ()) IN ()) WHERE (((0Xffffffffffffffff COLLATE BINARY) ISNULL));
SELECT rt1.c2, rt1.c0, t0.c0 FROM rt1 RIGHT OUTER JOIN t0 ON ((rt1.c2 IN ()) IN ());
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT (((rt1.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT ((NOT (((rt1.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((((NOT (((rt1.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT t0.c0, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c1;
SELECT t0.c0, rt1.c1 FROM rt1, t0 WHERE ((((rt1.c2) NOT BETWEEN (t0.c0) AND (rt1.c0)) IN ())) GROUP BY t0.c0, rt1.c1 UNION SELECT t0.c0, rt1.c1 FROM rt1, t0 WHERE ((NOT ((((rt1.c2) NOT BETWEEN (t0.c0) AND (rt1.c0)) IN ())))) GROUP BY t0.c0, rt1.c1 UNION SELECT ALL t0.c0, rt1.c1 FROM rt1, t0 WHERE ((((((rt1.c2) NOT BETWEEN (t0.c0) AND (rt1.c0)) IN ())) ISNULL)) GROUP BY t0.c0, rt1.c1;
SELECT t0.c0, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c0 FROM rt1;
SELECT rt1.c0 FROM rt1 WHERE (((((((0.24220834865468155)OR(rt1.c2)))OR(rt1.c0))) NOT BETWEEN ((rt1.c1 IN ())) AND (CAST(rt1.c2 AS NUMERIC)))) UNION ALL SELECT ALL rt1.c0 FROM rt1 WHERE ((NOT (((((((0.24220834865468155)OR(rt1.c2)))OR(rt1.c0))) NOT BETWEEN ((rt1.c1 IN ())) AND (CAST(rt1.c2 AS NUMERIC)))))) UNION ALL SELECT ALL rt1.c0 FROM rt1 WHERE (((((((((0.24220834865468155)OR(rt1.c2)))OR(rt1.c0))) NOT BETWEEN ((rt1.c1 IN ())) AND (CAST(rt1.c2 AS NUMERIC)))) ISNULL));
SELECT rt1.c0 FROM rt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) ISNULL))IS NOT(((t0.c0)>=(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0) ISNULL))IS NOT(((t0.c0)>=(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0) ISNULL))IS NOT(((t0.c0)>=(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt1.c1, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM rt1, t0 WHERE (CASE ((x'0b72')|(t0.c0))  WHEN ((rt1.c1) ISNULL) THEN t0.c0 ELSE (rt1.c0 IN ()) END) GROUP BY rt1.c1, rt1.c2 UNION SELECT rt1.c1, rt1.c2 FROM rt1, t0 WHERE ((NOT (CASE ((x'0b72')|(t0.c0))  WHEN ((rt1.c1) ISNULL) THEN t0.c0 ELSE (rt1.c0 IN ()) END))) GROUP BY rt1.c1, rt1.c2 UNION SELECT rt1.c1, rt1.c2 FROM rt1, t0 WHERE (((CASE ((x'0b72')|(t0.c0))  WHEN ((rt1.c1) ISNULL) THEN t0.c0 ELSE (rt1.c0 IN ()) END) ISNULL)) GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c0 FROM t0, rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM t0, rt1 GROUP BY rt1.c0 HAVING (((rt1.c0, COUNT(*), GROUP_CONCAT(SUM(MAX(rt1.c0))))) BETWEEN ((((((MAX(COUNT(*)))AND(t0.c0)))AND(COUNT(''))), NULL COLLATE NOCASE, rt1.c2)) AND ((MAX(rt1.c1), ((MIN(rt1.c1)) NOT NULL), SUM(t0.c0)))) UNION ALL SELECT ALL rt1.c0 FROM t0, rt1 GROUP BY rt1.c0 HAVING (NOT ((((rt1.c0, COUNT(*), GROUP_CONCAT(SUM(MAX(rt1.c0))))) BETWEEN ((((((MAX(COUNT(*)))AND(t0.c0)))AND(COUNT(''))), NULL COLLATE NOCASE, rt1.c2)) AND ((MAX(rt1.c1), ((MIN(rt1.c1)) NOT NULL), SUM(t0.c0)))))) UNION ALL SELECT rt1.c0 FROM t0, rt1 GROUP BY rt1.c0 HAVING (((((rt1.c0, COUNT(*), GROUP_CONCAT(SUM(MAX(rt1.c0))))) BETWEEN ((((((MAX(COUNT(*)))AND(t0.c0)))AND(COUNT(''))), NULL COLLATE NOCASE, rt1.c2)) AND ((MAX(rt1.c1), ((MIN(rt1.c1)) NOT NULL), SUM(t0.c0))))) ISNULL);
SELECT rt1.c2, rt1.c0 FROM rt1;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE (((CASE rt1.c1  WHEN '-1588342111' THEN rt1.c2 ELSE rt1.c0 END)<<(((rt1.c1)<>(rt1.c2))))) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (((CASE rt1.c1  WHEN '-1588342111' THEN rt1.c2 ELSE rt1.c0 END)<<(((rt1.c1)!=(rt1.c2))))))) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1 WHERE (((((CASE rt1.c1  WHEN '-1588342111' THEN rt1.c2 ELSE rt1.c0 END)<<(((rt1.c1)<>(rt1.c2))))) ISNULL));
SELECT rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0) ISNULL))AND(t0.c0)))OR(CASE WHEN t0.c0 THEN x'3932' END))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((((t0.c0) ISNULL))AND(t0.c0)))OR(CASE WHEN t0.c0 THEN x'3932' END))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c0) ISNULL))AND(t0.c0)))OR(CASE WHEN t0.c0 THEN x'3932' END))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE (((((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)))OR(((rt1.c0)%(rt1.c0)))))AND((((rt1.c1, rt1.c2, rt1.c1))!=((rt1.c0, rt1.c2, rt1.c0)))))) GROUP BY rt1.c1, rt1.c2 UNION SELECT rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (((((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)))OR(((rt1.c0)%(rt1.c0)))))AND((((rt1.c1, rt1.c2, rt1.c1))<>((rt1.c0, rt1.c2, rt1.c0)))))))) GROUP BY rt1.c1, rt1.c2 UNION SELECT rt1.c1, rt1.c2 FROM rt1 WHERE (((((((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)))OR(((rt1.c0)%(rt1.c0)))))AND((((rt1.c1, rt1.c2, rt1.c1))!=((rt1.c0, rt1.c2, rt1.c0)))))) ISNULL)) GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT t0.c0, rt1.c2, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c0, rt1.c1;
SELECT ALL t0.c0, rt1.c2, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c0, rt1.c1 HAVING ((COUNT(rt1.c0))GLOB(GROUP_CONCAT(t0.c0))) UNION ALL SELECT ALL t0.c0, rt1.c2, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c0, rt1.c1 HAVING (NOT (((COUNT(rt1.c0))GLOB(GROUP_CONCAT(t0.c0))))) UNION ALL SELECT t0.c0, rt1.c2, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c0, rt1.c1 HAVING ((((COUNT(rt1.c0))GLOB(GROUP_CONCAT(t0.c0)))) ISNULL);
SELECT t0.c0, rt1.c2, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c0, rt1.c1;
SELECT ALL t0.c0, rt1.c2, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c0, rt1.c1 HAVING ((COUNT(rt1.c0))GLOB(GROUP_CONCAT(t0.c0))) UNION ALL SELECT ALL t0.c0, rt1.c2, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c0, rt1.c1 HAVING (NOT (((COUNT(rt1.c0))GLOB(GROUP_CONCAT(t0.c0))))) UNION ALL SELECT t0.c0, rt1.c2, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c0, rt1.c1 HAVING ((((COUNT(rt1.c0))GLOB(GROUP_CONCAT(t0.c0)))) ISNULL);
SELECT t0.c0, rt1.c2, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c1, rt1.c0 FROM rt1;
SELECT rt1.c1, rt1.c0 FROM rt1 WHERE ((((- (rt1.c0)))OR(((((0X72041226)OR(rt1.c1)))AND(rt1.c0))))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT ((((- (rt1.c0)))OR(((((0X72041226)OR(rt1.c1)))AND(rt1.c0))))))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 WHERE ((((((- (rt1.c0)))OR(((((0X72041226)OR(rt1.c1)))AND(rt1.c0))))) ISNULL));
SELECT ALL rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c0, t0.c0, rt1.c2 FROM rt1, t0;
SELECT DISTINCT rt1.c0, t0.c0, rt1.c2 FROM rt1, t0 WHERE (CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN ((rt1.c0)GLOB(rt1.c1)) END) UNION SELECT DISTINCT rt1.c0, t0.c0, rt1.c2 FROM rt1, t0 WHERE ((NOT (CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN ((rt1.c0)GLOB(rt1.c1)) END))) UNION SELECT DISTINCT rt1.c0, t0.c0, rt1.c2 FROM rt1, t0 WHERE (((CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN ((rt1.c0)GLOB(rt1.c1)) END) ISNULL));
SELECT DISTINCT rt1.c0, t0.c0, rt1.c2 FROM rt1, t0;
SELECT ALL t0.c0, rt1.c2 FROM rt1 FULL OUTER JOIN t0 ON rt1.c2 GROUP BY t0.c0, rt1.c2;
SELECT t0.c0, rt1.c2 FROM rt1 FULL OUTER JOIN t0 ON rt1.c2 WHERE ((((t0.c0)|(rt1.c0)) IN ())) GROUP BY t0.c0, rt1.c2 UNION SELECT t0.c0, rt1.c2 FROM rt1 FULL OUTER JOIN t0 ON rt1.c2 WHERE ((NOT ((((t0.c0)|(rt1.c0)) IN ())))) GROUP BY t0.c0, rt1.c2 UNION SELECT ALL t0.c0, rt1.c2 FROM rt1 FULL OUTER JOIN t0 ON rt1.c2 WHERE ((((((t0.c0)|(rt1.c0)) IN ())) ISNULL)) GROUP BY t0.c0, rt1.c2;
SELECT ALL t0.c0, rt1.c2 FROM rt1 FULL OUTER JOIN t0 ON rt1.c2 GROUP BY t0.c0, rt1.c2;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING json_insert(TYPEOF(MAX(rt1.c2)), ((COUNT(TOTAL(COUNT(SUM(COUNT(TOTAL(SUM(rt1.c1))))))))OR(MIN(rt1.c0))), MIN(-774767555)) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (json_insert(TYPEOF(MAX(rt1.c2)), ((COUNT(TOTAL(COUNT(SUM(COUNT(TOTAL(SUM(rt1.c1))))))))OR(MIN(rt1.c0))), MIN(-774767555)))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((json_insert(TYPEOF(MAX(rt1.c2)), ((COUNT(TOTAL(COUNT(SUM(COUNT(TOTAL(SUM(rt1.c1))))))))OR(MIN(rt1.c0))), MIN(-774767555))) ISNULL);
SELECT rt1.c0, t0.c0, rt1.c2 FROM t0, rt1;
SELECT ALL rt1.c0, t0.c0, rt1.c2 FROM t0, rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)))>=((rt1.c0 IN ())))) UNION ALL SELECT ALL rt1.c0, t0.c0, rt1.c2 FROM t0, rt1 WHERE ((NOT (((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)))>=((rt1.c0 IN ())))))) UNION ALL SELECT ALL rt1.c0, t0.c0, rt1.c2 FROM t0, rt1 WHERE (((((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)))>=((rt1.c0 IN ())))) ISNULL));
SELECT rt1.c0, t0.c0, rt1.c2 FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (((rt1.c0)<(t0.c0))))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT ((NOT (((rt1.c0)<(t0.c0))))))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((((NOT (((rt1.c0)<(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 WHERE (CAST(IFNULL(rt1.c0, rt1.c2) AS TEXT)) GROUP BY rt1.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (CAST(IFNULL(rt1.c0, rt1.c2) AS TEXT)))) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE (((CAST(IFNULL(rt1.c0, rt1.c2) AS TEXT)) ISNULL)) GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1;
SELECT t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1 HAVING SUM(GROUP_CONCAT(MAX(t0.c0))) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1 HAVING (NOT (SUM(GROUP_CONCAT(MAX(t0.c0))))) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1 HAVING ((SUM(GROUP_CONCAT(MAX(t0.c0)))) ISNULL);
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT ((NOT (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0))))))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((((NOT (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) ISNULL));
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (rt1.c1) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT * FROM rt1 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c2 FROM t0, rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM t0, rt1 WHERE (CASE CAST(rt1.c0 AS BLOB)  WHEN ((rt1.c0)IS(rt1.c1)) THEN TYPEOF(DISTINCT rt1.c0) ELSE CASE rt1.c1  WHEN rt1.c2 THEN x'59de' END END) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM t0, rt1 WHERE ((NOT (CASE CAST(rt1.c0 AS BLOB)  WHEN ((rt1.c0)IS(rt1.c1)) THEN TYPEOF(DISTINCT rt1.c0) ELSE CASE rt1.c1  WHEN rt1.c2 THEN x'59de' END END))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM t0, rt1 WHERE (((CASE CAST(rt1.c0 AS BLOB)  WHEN ((rt1.c0)IS(rt1.c1)) THEN TYPEOF(DISTINCT rt1.c0) ELSE CASE rt1.c1  WHEN rt1.c2 THEN x'59de' END END) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM t0, rt1 GROUP BY rt1.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(SUM(GROUP_CONCAT(AVG(t0.c0))))) IS FALSE) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((COUNT(SUM(GROUP_CONCAT(AVG(t0.c0))))) IS FALSE))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((COUNT(SUM(GROUP_CONCAT(AVG(t0.c0))))) IS FALSE)) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))>>(CAST(t0.c0 AS TEXT)))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))>>(CAST(t0.c0 AS TEXT)))))) UNION ALL SELECT * FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))>>(CAST(t0.c0 AS TEXT)))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0, rt1.c1, rt1.c2 FROM rt1, t0;
SELECT DISTINCT t0.c0, rt1.c1, rt1.c2 FROM rt1, t0 WHERE ((((('0.5885103069163323')AND(((t0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))OR(((t0.c0)+(rt1.c1))))) UNION SELECT DISTINCT t0.c0, rt1.c1, rt1.c2 FROM rt1, t0 WHERE ((NOT ((((('0.5885103069163323')AND(((t0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))OR(((t0.c0)+(rt1.c1))))))) UNION SELECT DISTINCT t0.c0, rt1.c1, rt1.c2 FROM rt1, t0 WHERE ((((((('0.5885103069163323')AND(((t0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))OR(((t0.c0)+(rt1.c1))))) ISNULL));
SELECT DISTINCT t0.c0, rt1.c1, rt1.c2 FROM rt1, t0;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE ((((((rt1.c1 IN ()))OR(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)))AND('A_y\rAj4\3'))) GROUP BY rt1.c0, rt1.c1, rt1.c2 UNION SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT ((((((rt1.c1 IN ()))OR(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)))AND('A_y\rAj4\3'))))) GROUP BY rt1.c0, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE ((((((((rt1.c1 IN ()))OR(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)))AND('A_y\rAj4\3'))) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (CAST(CAST(rt1.c0 AS INTEGER) AS INTEGER)) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (CAST(CAST(rt1.c0 AS INTEGER) AS INTEGER)))) UNION ALL SELECT * FROM rt1 WHERE (((CAST(CAST(rt1.c0 AS INTEGER) AS INTEGER)) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (CAST(((rt1.c2)/(rt1.c1)) AS TEXT)) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (CAST(((rt1.c2)/(rt1.c1)) AS TEXT)))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((CAST(((rt1.c2)/(rt1.c1)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT ((+ (rt1.c2))))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT ((NOT ((+ (rt1.c2))))))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((((NOT ((+ (rt1.c2))))) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING CASE NULL  WHEN COUNT(*) THEN ((rt1.c1) NOT BETWEEN (COUNT(rt1.c2)) AND (COUNT(*))) END UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT (CASE NULL  WHEN COUNT(*) THEN ((rt1.c1) NOT BETWEEN (COUNT(rt1.c2)) AND (COUNT(*))) END)) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((CASE NULL  WHEN COUNT(*) THEN ((rt1.c1) NOT BETWEEN (COUNT(rt1.c2)) AND (COUNT(*))) END) ISNULL);
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING CASE NULL  WHEN COUNT(*) THEN ((rt1.c1) NOT BETWEEN (COUNT(rt1.c2)) AND (COUNT(*))) END UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT (CASE NULL  WHEN COUNT(*) THEN ((rt1.c1) NOT BETWEEN (COUNT(rt1.c2)) AND (COUNT(*))) END)) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((CASE NULL  WHEN COUNT(*) THEN ((rt1.c1) NOT BETWEEN (COUNT(rt1.c2)) AND (COUNT(*))) END) ISNULL);
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL SUM((((')r['))<((((rt1.c2) ISNULL))))) FROM rt1 ORDER BY ((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)))<=('1369292116')) ASC;
SELECT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0;
SELECT ALL t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0 WHERE (((((rt1.c2)IS(rt1.c0))) NOT BETWEEN ((((rt1.c0, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c0, t0.c0, t0.c0)) AND ((rt1.c1, rt1.c0, rt1.c2)))) AND (((t0.c0)<=(rt1.c1))))) UNION ALL SELECT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0 WHERE ((NOT (((((rt1.c2)IS(rt1.c0))) NOT BETWEEN ((((rt1.c0, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c0, t0.c0, t0.c0)) AND ((rt1.c1, rt1.c0, rt1.c2)))) AND (((t0.c0)<=(rt1.c1))))))) UNION ALL SELECT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0 WHERE (((((((rt1.c2)IS(rt1.c0))) NOT BETWEEN ((((rt1.c0, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c0, t0.c0, t0.c0)) AND ((rt1.c1, rt1.c0, rt1.c2)))) AND (((t0.c0)<=(rt1.c1))))) ISNULL));
SELECT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0;
SELECT DISTINCT rt1.c1 FROM t0, rt1;
SELECT DISTINCT rt1.c1 FROM t0, rt1 WHERE (rt1.c1) UNION SELECT DISTINCT rt1.c1 FROM t0, rt1 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT rt1.c1 FROM t0, rt1 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT rt1.c1 FROM t0, rt1;
SELECT rt1.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1, t0 WHERE (((rt1.c0 COLLATE BINARY)AND(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1))))) GROUP BY rt1.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c1 FROM rt1, t0 WHERE ((NOT (((rt1.c0 COLLATE BINARY)AND(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1))))))) GROUP BY rt1.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c1 FROM rt1, t0 WHERE (((((rt1.c0 COLLATE BINARY)AND(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1))))) ISNULL)) GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING AVG((((rt1.c2))>=((COUNT(COUNT(rt1.c2)))))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING (NOT (AVG((((rt1.c2))>=((COUNT(COUNT(rt1.c2)))))))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING ((AVG((((rt1.c2))>=((COUNT(COUNT(rt1.c2))))))) ISNULL);
SELECT ALL t0.c0, rt1.c0 FROM rt1, t0;
SELECT t0.c0, rt1.c0 FROM rt1, t0 WHERE (CAST(((((rt1.c0)OR(rt1.c1)))AND(2128007344)) AS INTEGER)) UNION ALL SELECT t0.c0, rt1.c0 FROM rt1, t0 WHERE ((NOT (CAST(((((rt1.c0)OR(rt1.c1)))AND(2128007344)) AS INTEGER)))) UNION ALL SELECT t0.c0, rt1.c0 FROM rt1, t0 WHERE (((CAST(((((rt1.c0)OR(rt1.c1)))AND(2128007344)) AS INTEGER)) ISNULL));
SELECT ALL t0.c0, rt1.c0 FROM rt1, t0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c0)IS NOT('Wje~O#|')))=(((((rt1.c1)AND(rt1.c1)))AND(rt1.c0))))) UNION SELECT DISTINCT * FROM rt1 NOT INDEXED WHERE ((NOT (((((rt1.c0)IS NOT('Wje~O#|')))=(((((rt1.c1)AND(rt1.c1)))AND(rt1.c0))))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c0)IS NOT('Wje~O#|')))==(((((rt1.c1)AND(rt1.c1)))AND(rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c1 FROM rt1, t0 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1, t0 WHERE (rt1.c1) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1, t0 WHERE ((NOT (rt1.c1))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1, t0 WHERE (((rt1.c1) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1, t0 GROUP BY rt1.c1;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING SUM(((TOTAL(rt1.c1))%(rt1.c2))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (SUM(((TOTAL(rt1.c1))%(rt1.c2))))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((SUM(((TOTAL(rt1.c1))%(rt1.c2)))) ISNULL);
SELECT ALL rt1.c2, rt1.c0, rt1.c1, t0.c0 FROM rt1, t0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1, t0.c0 FROM rt1, t0 WHERE (((((t0.c0)>>(rt1.c2)))LIKE(UPPER(rt1.c0)))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1, t0.c0 FROM rt1, t0 WHERE ((NOT (((((t0.c0)>>(rt1.c2)))LIKE(UPPER(rt1.c0)))))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1, t0.c0 FROM rt1, t0 WHERE (((((((t0.c0)>>(rt1.c2)))LIKE(UPPER(rt1.c0)))) ISNULL));
SELECT ALL rt1.c2, rt1.c0, rt1.c1, t0.c0 FROM rt1, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (INSTR(((t0.c0)LIKE(t0.c0)), t0.c0 COLLATE BINARY)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (INSTR(((t0.c0)LIKE(t0.c0)), t0.c0 COLLATE BINARY)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((INSTR(((t0.c0)LIKE(t0.c0)), t0.c0 COLLATE BINARY)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (((TOTAL(0.13146463799989516)) BETWEEN (COUNT(rt1.c2)) AND (SUM(COUNT(*)))) IN ()) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT ((((TOTAL(0.13146463799989516)) BETWEEN (COUNT(rt1.c2)) AND (SUM(COUNT(*)))) IN ()))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (((((TOTAL(0.13146463799989516)) BETWEEN (COUNT(rt1.c2)) AND (SUM(COUNT(*)))) IN ())) ISNULL);
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (((TOTAL(0.13146463799989516)) BETWEEN (COUNT(rt1.c2)) AND (SUM(COUNT(*)))) IN ()) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT ((((TOTAL(0.13146463799989516)) BETWEEN (COUNT(rt1.c2)) AND (SUM(COUNT(*)))) IN ()))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (((((TOTAL(0.13146463799989516)) BETWEEN (COUNT(rt1.c2)) AND (SUM(COUNT(*)))) IN ())) ISNULL);
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL * FROM t0, rt1;
SELECT * FROM t0, rt1 WHERE ((((t0.c0 COLLATE RTRIM))<=(((rt1.c2 IN (rt1.c2)))))) UNION ALL SELECT * FROM t0, rt1 WHERE ((NOT ((((t0.c0 COLLATE RTRIM))<=(((rt1.c2 IN (rt1.c2)))))))) UNION ALL SELECT * FROM t0, rt1 WHERE ((((((t0.c0 COLLATE RTRIM))<=(((rt1.c2 IN (rt1.c2)))))) ISNULL));
SELECT ALL * FROM t0, rt1;
SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON HEX(DISTINCT rt1.c0) COLLATE BINARY;
SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON HEX(DISTINCT rt1.c0) COLLATE BINARY WHERE ('Wk') UNION SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON HEX(DISTINCT rt1.c0) COLLATE BINARY WHERE ((NOT ('Wk'))) UNION SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON HEX(DISTINCT rt1.c0) COLLATE BINARY WHERE ((('Wk') ISNULL));
SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON HEX(DISTINCT rt1.c0) COLLATE BINARY;
SELECT ALL rt1.c1, rt1.c0, t0.c0 FROM t0 RIGHT OUTER JOIN rt1 ON CASE WHEN x'' THEN LIKE(rt1.c2, t0.c0) ELSE CAST(0.3975569863103019 AS INTEGER) END GROUP BY rt1.c1, rt1.c0, t0.c0;
SELECT rt1.c1, rt1.c0, t0.c0 FROM t0 RIGHT OUTER JOIN rt1 ON CASE WHEN x'' THEN LIKE(rt1.c2, t0.c0) ELSE CAST(0.3975569863103019 AS INTEGER) END WHERE ((((t0.c0 IN (rt1.c2))) BETWEEN (((((rt1.c1)OR(rt1.c0)))AND(rt1.c1))) AND (((rt1.c1) IS FALSE)))) GROUP BY rt1.c1, rt1.c0, t0.c0 UNION SELECT rt1.c1, rt1.c0, t0.c0 FROM t0 RIGHT OUTER JOIN rt1 ON CASE WHEN x'' THEN LIKE(rt1.c2, t0.c0) ELSE CAST(0.3975569863103019 AS INTEGER) END WHERE ((NOT ((((t0.c0 IN (rt1.c2))) BETWEEN (((((rt1.c1)OR(rt1.c0)))AND(rt1.c1))) AND (((rt1.c1) IS FALSE)))))) GROUP BY rt1.c1, rt1.c0, t0.c0 UNION SELECT ALL rt1.c1, rt1.c0, t0.c0 FROM t0 NOT INDEXED RIGHT OUTER JOIN rt1 ON CASE WHEN x'' THEN LIKE(rt1.c2, t0.c0) ELSE CAST(0.3975569863103019 AS INTEGER) END WHERE ((((((t0.c0 IN (rt1.c2))) BETWEEN (((((rt1.c1)OR(rt1.c0)))AND(rt1.c1))) AND (((rt1.c1) IS FALSE)))) ISNULL)) GROUP BY rt1.c1, rt1.c0, t0.c0;
SELECT ALL rt1.c1, rt1.c0, t0.c0 FROM t0 RIGHT OUTER JOIN rt1 ON CASE WHEN x'' THEN LIKE(rt1.c2, t0.c0) ELSE CAST(0.3975569863103019 AS INTEGER) END GROUP BY rt1.c1, rt1.c0, t0.c0;
SELECT ALL t0.c0, rt1.c0 FROM t0 FULL OUTER JOIN rt1 ON CASE ((((rt1.c0)AND(rt1.c1)))OR(rt1.c1))  WHEN CASE rt1.c1  WHEN '' THEN rt1.c1 WHEN t0.c0 THEN rt1.c0 WHEN 0x6cac30e9 THEN rt1.c2 END THEN NULL ELSE ((rt1.c0) NOT NULL) END GROUP BY t0.c0, rt1.c0;
SELECT t0.c0, rt1.c0 FROM t0 FULL OUTER JOIN rt1 ON CASE ((((rt1.c0)AND(rt1.c1)))OR(rt1.c1))  WHEN CASE rt1.c1  WHEN '' THEN rt1.c1 WHEN t0.c0 THEN rt1.c0 WHEN 0X6cac30e9 THEN rt1.c2 END THEN NULL ELSE ((rt1.c0) NOT NULL) END GROUP BY t0.c0, rt1.c0 HAVING ((((rt1.c0)<(AVG(NULL))))*(MAX(MIN(rt1.c0)))) UNION ALL SELECT t0.c0, rt1.c0 FROM t0 FULL OUTER JOIN rt1 ON CASE ((((rt1.c0)AND(rt1.c1)))OR(rt1.c1))  WHEN CASE rt1.c1  WHEN '' THEN rt1.c1 WHEN t0.c0 THEN rt1.c0 WHEN 0X6cac30e9 THEN rt1.c2 END THEN NULL ELSE ((rt1.c0) NOT NULL) END GROUP BY t0.c0, rt1.c0 HAVING (NOT (((((rt1.c0)<(AVG(NULL))))*(MAX(MIN(rt1.c0)))))) UNION ALL SELECT t0.c0, rt1.c0 FROM t0 FULL OUTER JOIN rt1 ON CASE ((((rt1.c0)AND(rt1.c1)))OR(rt1.c1))  WHEN CASE rt1.c1  WHEN '' THEN rt1.c1 WHEN t0.c0 THEN rt1.c0 WHEN 0X6cac30e9 THEN rt1.c2 END THEN NULL ELSE ((rt1.c0) NOT NULL) END GROUP BY t0.c0, rt1.c0 HAVING ((((((rt1.c0)<(AVG(NULL))))*(MAX(MIN(rt1.c0))))) ISNULL);
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE ((((((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c1))))<=((rt1.c2)))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT ((((((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c1))))<=((rt1.c2)))))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE ((((((((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c1))))<=((rt1.c2)))) ISNULL));
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (CAST(((rt1.c1)<<(rt1.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (CAST(((rt1.c1)<<(rt1.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((CAST(((rt1.c1)<<(rt1.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE (CASE ((rt1.c1)<=(rt1.c2))  WHEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c0)) THEN ((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)) END) GROUP BY rt1.c1, rt1.c2 UNION SELECT rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (CASE ((rt1.c1)<=(rt1.c2))  WHEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c0)) THEN ((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)) END))) GROUP BY rt1.c1, rt1.c2 UNION SELECT rt1.c1, rt1.c2 FROM rt1 WHERE (((CASE ((rt1.c1)<=(rt1.c2))  WHEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c0)) THEN ((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)) END) ISNULL)) GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL t0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 CROSS JOIN t0 ON (~ (((t0.c0)IS(t0.c0)))) GROUP BY t0.c0, rt1.c0, rt1.c2, rt1.c1;
SELECT t0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 CROSS JOIN t0 ON (~ (((t0.c0)IS(t0.c0)))) GROUP BY t0.c0, rt1.c0, rt1.c2, rt1.c1 HAVING MIN(AVG(t0.c0)) UNION ALL SELECT t0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 CROSS JOIN t0 ON (~ (((t0.c0)IS(t0.c0)))) GROUP BY t0.c0, rt1.c0, rt1.c2, rt1.c1 HAVING (NOT (MIN(AVG(t0.c0)))) UNION ALL SELECT t0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 CROSS JOIN t0 ON (~ (((t0.c0)IS(t0.c0)))) GROUP BY t0.c0, rt1.c0, rt1.c2, rt1.c1 HAVING ((MIN(AVG(t0.c0))) ISNULL);
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (('}' IN (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (('}' IN (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))))))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (((('}' IN (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))))) ISNULL));
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt1 ON ((((((((rt1.c1)AND((- (8.52966151E8)))))OR(CASE WHEN rt1.c2 THEN t0.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END)))OR(((rt1.c2) BETWEEN (rt1.c0) AND (t0.c0)))))OR((((rt1.c2, rt1.c0, rt1.c2))>((x'', rt1.c2, rt1.c1)))));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt1 ON ((((((((rt1.c1)AND((- (8.52966151E8)))))OR(CASE WHEN rt1.c2 THEN t0.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END)))OR(((rt1.c2) BETWEEN (rt1.c0) AND (t0.c0)))))OR((((rt1.c2, rt1.c0, rt1.c2))>((x'', rt1.c2, rt1.c1))))) WHERE ((((rt1.c2, ((rt1.c0)<('''+x痠')), ((rt1.c0) BETWEEN (rt1.c2) AND (t0.c0))))<>((NULL, (rt1.c0 IN ()), ((t0.c0) IS TRUE))))) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt1 ON ((((((((rt1.c1)AND((- (8.52966151E8)))))OR(CASE WHEN rt1.c2 THEN t0.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END)))OR(((rt1.c2) BETWEEN (rt1.c0) AND (t0.c0)))))OR((((rt1.c2, rt1.c0, rt1.c2))>((x'', rt1.c2, rt1.c1))))) WHERE ((NOT ((((rt1.c2, ((rt1.c0)<('''+x痠')), ((rt1.c0) BETWEEN (rt1.c2) AND (t0.c0))))<>((NULL, (rt1.c0 IN ()), ((t0.c0) IS TRUE))))))) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt1 ON ((((((((rt1.c1)AND((- (8.52966151E8)))))OR(CASE WHEN rt1.c2 THEN t0.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END)))OR(((rt1.c2) BETWEEN (rt1.c0) AND (t0.c0)))))OR((((rt1.c2, rt1.c0, rt1.c2))>((x'', rt1.c2, rt1.c1))))) WHERE ((((((rt1.c2, ((rt1.c0)<('''+x痠')), ((rt1.c0) BETWEEN (rt1.c2) AND (t0.c0))))!=((NULL, (rt1.c0 IN ()), ((t0.c0) IS TRUE))))) ISNULL));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt1 ON ((((((((rt1.c1)AND((- (8.52966151E8)))))OR(CASE WHEN rt1.c2 THEN t0.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END)))OR(((rt1.c2) BETWEEN (rt1.c0) AND (t0.c0)))))OR((((rt1.c2, rt1.c0, rt1.c2))>((x'', rt1.c2, rt1.c1)))));
SELECT rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c0;
SELECT rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 WHERE (((rt1.c1 COLLATE BINARY)<<(((rt1.c0)/(rt1.c2))))) GROUP BY rt1.c2, rt1.c0, t0.c0 UNION SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 WHERE ((NOT (((rt1.c1 COLLATE BINARY)<<(((rt1.c0)/(rt1.c2))))))) GROUP BY rt1.c2, rt1.c0, t0.c0 UNION SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 WHERE (((((rt1.c1 COLLATE BINARY)<<(((rt1.c0)/(rt1.c2))))) ISNULL)) GROUP BY rt1.c2, rt1.c0, t0.c0;
SELECT rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c0;
SELECT ALL rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM t0 LEFT OUTER JOIN rt1 ON CASE rt1.c2  WHEN rt1.c0 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM t0 LEFT OUTER JOIN rt1 ON CASE rt1.c2  WHEN rt1.c0 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0 HAVING ((((AVG(AVG(rt1.c1)))OR(SUM(t0.c0))))AND(SUM(rt1.c0))) COLLATE RTRIM UNION ALL SELECT rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM t0 LEFT OUTER JOIN rt1 ON CASE rt1.c2  WHEN rt1.c0 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0 HAVING (NOT (((((AVG(AVG(rt1.c1)))OR(SUM(t0.c0))))AND(SUM(rt1.c0))) COLLATE RTRIM)) UNION ALL SELECT rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM t0 LEFT OUTER JOIN rt1 ON CASE rt1.c2  WHEN rt1.c0 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0 HAVING ((((((AVG(AVG(rt1.c1)))OR(SUM(t0.c0))))AND(SUM(rt1.c0))) COLLATE RTRIM) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0) NOT NULL)) NOT BETWEEN (((t0.c0) IS TRUE)) AND (CAST(t0.c0 AS TEXT)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) NOT NULL)) NOT BETWEEN (((t0.c0) IS TRUE)) AND (CAST(t0.c0 AS TEXT)))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((((t0.c0) NOT NULL)) NOT BETWEEN (((t0.c0) IS TRUE)) AND (CAST(t0.c0 AS TEXT)))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(((x'')%(t0.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(((x'')%(t0.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(((x'')%(t0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt1.c0, rt1.c2, t0.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c0, rt1.c2, t0.c0, rt1.c1;
SELECT rt1.c0, rt1.c2, t0.c0, rt1.c1 FROM t0, rt1 WHERE ((((('-404143545')OR((~ (rt1.c1)))))OR(((rt1.c1)+(t0.c0))))) GROUP BY rt1.c0, rt1.c2, t0.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c2, t0.c0, rt1.c1 FROM t0, rt1 WHERE ((NOT ((((('-404143545')OR((~ (rt1.c1)))))OR(((rt1.c1)+(t0.c0))))))) GROUP BY rt1.c0, rt1.c2, t0.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c2, t0.c0, rt1.c1 FROM t0, rt1 WHERE ((((((('-404143545')OR((~ (rt1.c1)))))OR(((rt1.c1)+(t0.c0))))) ISNULL)) GROUP BY rt1.c0, rt1.c2, t0.c0, rt1.c1;
SELECT rt1.c0, rt1.c2, t0.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c0, rt1.c2, t0.c0, rt1.c1;
SELECT ALL rt1.c0, t0.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, t0.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, t0.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, t0.c0, rt1.c1, rt1.c2 HAVING ((COUNT(*)) NOT NULL) UNION ALL SELECT rt1.c0, t0.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, t0.c0, rt1.c1, rt1.c2 HAVING (NOT (((COUNT(*)) NOT NULL))) UNION ALL SELECT ALL rt1.c0, t0.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, t0.c0, rt1.c1, rt1.c2 HAVING ((((COUNT(*)) NOT NULL)) ISNULL);
SELECT ALL rt1.c0, t0.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, t0.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, t0.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, t0.c0, rt1.c1, rt1.c2 HAVING ((COUNT(*)) NOT NULL) UNION ALL SELECT rt1.c0, t0.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, t0.c0, rt1.c1, rt1.c2 HAVING (NOT (((COUNT(*)) NOT NULL))) UNION ALL SELECT ALL rt1.c0, t0.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, t0.c0, rt1.c1, rt1.c2 HAVING ((((COUNT(*)) NOT NULL)) ISNULL);
SELECT ALL rt1.c0, t0.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, t0.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM rt1, t0;
SELECT rt1.c2, rt1.c0, t0.c0 FROM rt1, t0 WHERE ((SQLITE_SOURCE_ID() IN (((rt1.c1) NOT NULL), ((t0.c0) ISNULL)))) UNION ALL SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM rt1, t0 WHERE ((NOT ((SQLITE_SOURCE_ID() IN (((rt1.c1) NOT NULL), ((t0.c0) ISNULL)))))) UNION ALL SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM rt1, t0 WHERE ((((SQLITE_SOURCE_ID() IN (((rt1.c1) NOT NULL), ((t0.c0) ISNULL)))) ISNULL));
SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM rt1, t0;
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c2 FROM rt1 WHERE (((rt1.c2)GLOB(((rt1.c0)-(rt1.c2))))) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE ((NOT (((rt1.c2)GLOB(((rt1.c0)-(rt1.c2))))))) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE (((((rt1.c2)GLOB(((rt1.c0)-(rt1.c2))))) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT rt1.c0, t0.c0 FROM rt1, t0 GROUP BY rt1.c0, t0.c0;
SELECT ALL rt1.c0, t0.c0 FROM rt1, t0 WHERE (((((((t0.c0)AND(rt1.c2)))OR(t0.c0))) ISNULL)) GROUP BY rt1.c0, t0.c0 UNION SELECT rt1.c0, t0.c0 FROM rt1, t0 WHERE ((NOT (((((((t0.c0)AND(rt1.c2)))OR(t0.c0))) ISNULL)))) GROUP BY rt1.c0, t0.c0 UNION SELECT ALL rt1.c0, t0.c0 FROM rt1, t0 WHERE (((((((((t0.c0)AND(rt1.c2)))OR(t0.c0))) ISNULL)) ISNULL)) GROUP BY rt1.c0, t0.c0;
SELECT rt1.c0, t0.c0 FROM rt1, t0 GROUP BY rt1.c0, t0.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING MAX(MAX(AVG(rt1.c2))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (MAX(MAX(AVG(rt1.c2))))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((MAX(MAX(AVG(rt1.c2)))) ISNULL);
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (((',m')==(CASE WHEN rt1.c2 THEN rt1.c1 END))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((',m')==(CASE WHEN rt1.c2 THEN rt1.c1 END))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((',m')=(CASE WHEN rt1.c2 THEN rt1.c1 END))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT t0.c0 FROM rt1, t0;
SELECT DISTINCT t0.c0 FROM rt1, t0 WHERE (((((((rt1.c2)<(rt1.c0)))OR(((rt1.c2) ISNULL))))OR(((t0.c0)>(rt1.c2))))) UNION SELECT DISTINCT t0.c0 FROM rt1, t0 WHERE ((NOT (((((((rt1.c2)<(rt1.c0)))OR(((rt1.c2) ISNULL))))OR(((t0.c0)>(rt1.c2))))))) UNION SELECT DISTINCT t0.c0 FROM rt1, t0 WHERE (((((((((rt1.c2)<(rt1.c0)))OR(((rt1.c2) ISNULL))))OR(((t0.c0)>(rt1.c2))))) ISNULL));
SELECT DISTINCT t0.c0 FROM rt1, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((~ (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((~ (t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((~ (t0.c0))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(SUM(t0.c0) AS REAL) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(SUM(t0.c0) AS REAL))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(SUM(t0.c0) AS REAL)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(SUM(t0.c0) AS REAL) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(SUM(t0.c0) AS REAL))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(SUM(t0.c0) AS REAL)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT MAX(0.5200716236487104) FROM t0;
SELECT ALL * FROM t0 FULL OUTER JOIN rt1 ON (+ (((rt1.c0) BETWEEN (t0.c0) AND (rt1.c1))));
SELECT ALL * FROM t0 FULL OUTER JOIN rt1 ON (+ (((rt1.c0) BETWEEN (t0.c0) AND (rt1.c1)))) WHERE (((rt1.c1)>(((rt1.c2)-(t0.c0))))) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN rt1 ON (+ (((rt1.c0) BETWEEN (t0.c0) AND (rt1.c1)))) WHERE ((NOT (((rt1.c1)>(((rt1.c2)-(t0.c0))))))) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN rt1 ON (+ (((rt1.c0) BETWEEN (t0.c0) AND (rt1.c1)))) WHERE (((((rt1.c1)>(((rt1.c2)-(t0.c0))))) ISNULL));
SELECT ALL * FROM t0 FULL OUTER JOIN rt1 ON (+ (((rt1.c0) BETWEEN (t0.c0) AND (rt1.c1))));
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((~ (rt1.c1)))+(load_extension(rt1.c1)))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((~ (rt1.c1)))+(load_extension(rt1.c1)))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((~ (rt1.c1)))+(load_extension(rt1.c1)))) ISNULL));
SELECT ALL rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM rt1 NATURAL JOIN t0 GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM rt1 NATURAL JOIN t0 WHERE (((((((((((rt1.c2)>>(rt1.c2)))OR(CAST(rt1.c0 AS NUMERIC))))OR(((rt1.c2)-(t0.c0)))))AND(LOWER(rt1.c0))))OR(x'3ce1'))) GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM rt1 NATURAL JOIN t0 WHERE ((NOT (((((((((((rt1.c2)>>(rt1.c2)))OR(CAST(rt1.c0 AS NUMERIC))))OR(((rt1.c2)-(t0.c0)))))AND(LOWER(rt1.c0))))OR(x'3ce1'))))) GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM rt1 NATURAL JOIN t0 WHERE (((((((((((((rt1.c2)>>(rt1.c2)))OR(CAST(rt1.c0 AS NUMERIC))))OR(((rt1.c2)-(t0.c0)))))AND(LOWER(rt1.c0))))OR(x'3ce1'))) ISNULL)) GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM rt1 NATURAL JOIN t0 GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c1, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1, t0.c0;
SELECT rt1.c2, rt1.c1, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1, t0.c0 HAVING CAST(GROUP_CONCAT(AVG(0x4050ad1b)) AS TEXT) UNION ALL SELECT ALL rt1.c2, rt1.c1, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1, t0.c0 HAVING (NOT (CAST(GROUP_CONCAT(AVG(0x4050ad1b)) AS TEXT))) UNION ALL SELECT ALL rt1.c2, rt1.c1, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1, t0.c0 HAVING ((CAST(GROUP_CONCAT(AVG(0X4050ad1b)) AS TEXT)) ISNULL);
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((((((((rt1.c2))<=((x''))))AND(((((rt1.c0)AND(rt1.c2)))OR(rt1.c2)))))AND(((rt1.c2) NOT NULL)))) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((((((((rt1.c2))<=((x''))))AND(((((rt1.c0)AND(rt1.c2)))OR(rt1.c2)))))AND(((rt1.c2) NOT NULL)))))) UNION ALL SELECT * FROM rt1 WHERE ((((((((((rt1.c2))<=((x''))))AND(((((rt1.c0)AND(rt1.c2)))OR(rt1.c2)))))AND(((rt1.c2) NOT NULL)))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((t0.c0)AND(rt1.c2 COLLATE BINARY)))AND((((t0.c0, rt1.c2, rt1.c2))<((rt1.c1, rt1.c2, '-1116974987')))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT (((((t0.c0)AND(rt1.c2 COLLATE BINARY)))AND((((t0.c0, rt1.c2, rt1.c2))<((rt1.c1, rt1.c2, '-1116974987')))))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE (((((((t0.c0)AND(rt1.c2 COLLATE BINARY)))AND((((t0.c0, rt1.c2, rt1.c2))<((rt1.c1, rt1.c2, '-1116974987')))))) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 WHERE (CASE WHEN ((rt1.c2) NOTNULL) THEN rt1.c2 COLLATE NOCASE WHEN rt1.c0 COLLATE NOCASE THEN LOWER(DISTINCT rt1.c2) WHEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)) THEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c2))) END) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE ((NOT (CASE WHEN ((rt1.c2) NOTNULL) THEN rt1.c2 COLLATE NOCASE WHEN rt1.c0 COLLATE NOCASE THEN LOWER(DISTINCT rt1.c2) WHEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)) THEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c2))) END))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE (((CASE WHEN ((rt1.c2) NOTNULL) THEN rt1.c2 COLLATE NOCASE WHEN rt1.c0 COLLATE NOCASE THEN LOWER(DISTINCT rt1.c2) WHEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)) THEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c2))) END) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c2 FROM rt1 INNER JOIN t0 ON ((((((rt1.c1)OR(rt1.c0)))OR(rt1.c2)))<(CASE WHEN t0.c0 THEN t0.c0 ELSE rt1.c2 END)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 INNER JOIN t0 ON ((((((rt1.c1)OR(rt1.c0)))OR(rt1.c2)))<(CASE WHEN t0.c0 THEN t0.c0 ELSE rt1.c2 END)) GROUP BY rt1.c2 HAVING ((t0.c0 COLLATE NOCASE)>(((MAX(COUNT(*)))<(t0.c0)))) UNION ALL SELECT ALL rt1.c2 FROM rt1 INNER JOIN t0 ON ((((((rt1.c1)OR(rt1.c0)))OR(rt1.c2)))<(CASE WHEN t0.c0 THEN t0.c0 ELSE rt1.c2 END)) GROUP BY rt1.c2 HAVING (NOT (((t0.c0 COLLATE NOCASE)>(((MAX(COUNT(*)))<(t0.c0)))))) UNION ALL SELECT ALL rt1.c2 FROM rt1 INNER JOIN t0 ON ((((((rt1.c1)OR(rt1.c0)))OR(rt1.c2)))<(CASE WHEN t0.c0 THEN t0.c0 ELSE rt1.c2 END)) GROUP BY rt1.c2 HAVING ((((t0.c0 COLLATE NOCASE)>(((MAX(COUNT(*)))<(t0.c0))))) ISNULL);
SELECT ALL * FROM t0, rt1;
SELECT * FROM t0, rt1 WHERE (rt1.c2) UNION ALL SELECT * FROM t0, rt1 WHERE ((NOT (rt1.c2))) UNION ALL SELECT * FROM t0, rt1 WHERE (((rt1.c2) ISNULL));
SELECT ALL * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE ((((((0xffffffffb614bcf1, rt1.c0, t0.c0, rt1.c2, rt1.c2))>((rt1.c0, rt1.c2, rt1.c2, t0.c0, rt1.c2)))) NOT NULL)) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT ((((((0Xffffffffb614bcf1, rt1.c0, t0.c0, rt1.c2, rt1.c2))>((rt1.c0, rt1.c2, rt1.c2, t0.c0, rt1.c2)))) NOT NULL)))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((((((((0xffffffffb614bcf1, rt1.c0, t0.c0, rt1.c2, rt1.c2))>((rt1.c0, rt1.c2, rt1.c2, t0.c0, rt1.c2)))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((LIKELY(t0.c0)) NOTNULL)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((LIKELY(t0.c0)) NOTNULL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((LIKELY(t0.c0)) NOTNULL)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, rt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, rt1 GROUP BY t0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(rt1.c0)) UNION ALL SELECT ALL t0.c0 FROM t0, rt1 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(rt1.c0)))) UNION ALL SELECT t0.c0 FROM t0, rt1 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(rt1.c0))) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE ((((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))OR(((((rt1.c1)OR(rt1.c1)))OR(rt1.c2))))) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))OR(((((rt1.c1)OR(rt1.c1)))OR(rt1.c2))))))) UNION ALL SELECT * FROM rt1 WHERE ((((((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))OR(((((rt1.c1)OR(rt1.c1)))OR(rt1.c2))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0 FROM t0, rt1;
SELECT DISTINCT rt1.c1, rt1.c0 FROM t0, rt1 WHERE (((((rt1.c2)||(rt1.c0)))*((t0.c0 IN ())))) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM t0, rt1 WHERE ((NOT (((((rt1.c2)||(rt1.c0)))*((t0.c0 IN ())))))) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM t0, rt1 WHERE (((((((rt1.c2)||(rt1.c0)))*((t0.c0 IN ())))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0 FROM t0, rt1;
SELECT ALL rt1.c0, t0.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, t0.c0, rt1.c2;
SELECT ALL rt1.c0, t0.c0, rt1.c2 FROM t0, rt1 WHERE (((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c2)) COLLATE RTRIM) GROUP BY rt1.c0, t0.c0, rt1.c2 UNION SELECT ALL rt1.c0, t0.c0, rt1.c2 FROM t0, rt1 WHERE ((NOT (((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c2)) COLLATE RTRIM))) GROUP BY rt1.c0, t0.c0, rt1.c2 UNION SELECT rt1.c0, t0.c0, rt1.c2 FROM t0, rt1 WHERE (((((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c2)) COLLATE RTRIM) ISNULL)) GROUP BY rt1.c0, t0.c0, rt1.c2;
SELECT ALL rt1.c0, t0.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, t0.c0, rt1.c2;
SELECT ALL rt1.c2, t0.c0, rt1.c1, rt1.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, t0.c0, rt1.c1, rt1.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0, rt1.c1, rt1.c0 HAVING SUM(MIN(rt1.c1)) UNION ALL SELECT rt1.c2, t0.c0, rt1.c1, rt1.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0, rt1.c1, rt1.c0 HAVING (NOT (SUM(MIN(rt1.c1)))) UNION ALL SELECT rt1.c2, t0.c0, rt1.c1, rt1.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0, rt1.c1, rt1.c0 HAVING ((SUM(MIN(rt1.c1))) ISNULL);
SELECT ALL * FROM t0, rt1;
SELECT * FROM t0, rt1 WHERE ((((x'' IN ())) BETWEEN (CAST('JK൅?8' AS BLOB)) AND (CASE rt1.c0  WHEN rt1.c0 THEN t0.c0 WHEN t0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 ELSE t0.c0 END))) UNION ALL SELECT ALL * FROM t0, rt1 WHERE ((NOT ((((x'' IN ())) BETWEEN (CAST('JK൅?8' AS BLOB)) AND (CASE rt1.c0  WHEN rt1.c0 THEN t0.c0 WHEN t0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 ELSE t0.c0 END))))) UNION ALL SELECT ALL * FROM t0, rt1 WHERE ((((((x'' IN ())) BETWEEN (CAST('JK൅?8' AS BLOB)) AND (CASE rt1.c0  WHEN rt1.c0 THEN t0.c0 WHEN t0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 ELSE t0.c0 END))) ISNULL));
SELECT ALL * FROM t0, rt1;
SELECT DISTINCT * FROM t0 CROSS JOIN rt1 ON t0.c0;
SELECT DISTINCT * FROM t0 CROSS JOIN rt1 ON t0.c0 WHERE ('2007919526') UNION SELECT DISTINCT * FROM t0 CROSS JOIN rt1 ON t0.c0 WHERE ((NOT ('2007919526'))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN rt1 ON t0.c0 WHERE ((('2007919526') ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN rt1 ON t0.c0;
SELECT rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM rt1, t0 WHERE (((CASE rt1.c2  WHEN rt1.c2 THEN t0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN t0.c0 THEN t0.c0 END)OR(((rt1.c1)IS NOT(rt1.c2))))) GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1 UNION SELECT rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM rt1, t0 WHERE ((NOT (((CASE rt1.c2  WHEN rt1.c2 THEN t0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN t0.c0 THEN t0.c0 END)OR(((rt1.c1)IS NOT(rt1.c2))))))) GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM rt1, t0 WHERE (((((CASE rt1.c2  WHEN rt1.c2 THEN t0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN t0.c0 THEN t0.c0 END)OR(((rt1.c1)IS NOT(rt1.c2))))) ISNULL)) GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1;
SELECT rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT rt1.c2 FROM rt1, t0;
SELECT DISTINCT rt1.c2 FROM rt1, t0 WHERE (rt1.c2) UNION SELECT DISTINCT rt1.c2 FROM rt1, t0 WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT rt1.c2 FROM rt1, t0 WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1, t0;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 WHERE (((rt1.c1) BETWEEN (rt1.c2) AND ('321099555')) COLLATE NOCASE) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT (((rt1.c1) BETWEEN (rt1.c2) AND ('321099555')) COLLATE NOCASE))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c2) AND ('321099555')) COLLATE NOCASE) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(TOTAL(t0.c0))) COLLATE BINARY UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(TOTAL(t0.c0))) COLLATE BINARY)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(TOTAL(t0.c0))) COLLATE BINARY) ISNULL);
SELECT ALL rt1.c2 FROM rt1, t0;
SELECT rt1.c2 FROM rt1, t0 WHERE ((((rt1.c2, rt1.c0, rt1.c1)) NOT BETWEEN ((-1196214179, CAST(t0.c0 AS BLOB), CAST(rt1.c0 AS BLOB))) AND ((((rt1.c1) NOTNULL), ((((rt1.c0)OR(t0.c0)))OR(t0.c0)), (NOT (rt1.c1)))))) UNION ALL SELECT ALL rt1.c2 FROM rt1, t0 WHERE ((NOT ((((rt1.c2, rt1.c0, rt1.c1)) NOT BETWEEN ((-1196214179, CAST(t0.c0 AS BLOB), CAST(rt1.c0 AS BLOB))) AND ((((rt1.c1) NOTNULL), ((((rt1.c0)OR(t0.c0)))OR(t0.c0)), (NOT (rt1.c1)))))))) UNION ALL SELECT ALL rt1.c2 FROM rt1, t0 WHERE ((((((rt1.c2, rt1.c0, rt1.c1)) NOT BETWEEN ((-1196214179, CAST(t0.c0 AS BLOB), CAST(rt1.c0 AS BLOB))) AND ((((rt1.c1) NOTNULL), ((((rt1.c0)OR(t0.c0)))OR(t0.c0)), (NOT (rt1.c1)))))) ISNULL));
SELECT ALL rt1.c2 FROM rt1, t0;
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE (((rt1.c1 COLLATE BINARY) IS TRUE)) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (((rt1.c1 COLLATE BINARY) IS TRUE)))) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE (((((rt1.c1 COLLATE BINARY) IS TRUE)) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1;
SELECT rt1.c0 FROM rt1, t0 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, t0 WHERE ((((+ (rt1.c1)))+(HEX(DISTINCT rt1.c1)))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1, t0 WHERE ((NOT ((((+ (rt1.c1)))+(HEX(DISTINCT rt1.c1)))))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1, t0 WHERE ((((((+ (rt1.c1)))+(HEX(DISTINCT rt1.c1)))) ISNULL)) GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1, t0 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1, t0 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, t0 GROUP BY rt1.c0 HAVING (NOT (SUM(MAX(COUNT(*))))) UNION ALL SELECT ALL rt1.c0 FROM rt1, t0 GROUP BY rt1.c0 HAVING (NOT ((NOT (SUM(MAX(COUNT(*))))))) UNION ALL SELECT ALL rt1.c0 FROM rt1, t0 GROUP BY rt1.c0 HAVING (((NOT (SUM(MAX(COUNT(*)))))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((- ((t0.c0 IN (t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((- ((t0.c0 IN (t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((- ((t0.c0 IN (t0.c0))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (rt1.c1) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT * FROM rt1 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c1, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c0, t0.c0;
SELECT ALL rt1.c1, rt1.c0, t0.c0 FROM t0, rt1 WHERE (rt1.c0) GROUP BY rt1.c1, rt1.c0, t0.c0 UNION SELECT ALL rt1.c1, rt1.c0, t0.c0 FROM t0, rt1 WHERE ((NOT (rt1.c0))) GROUP BY rt1.c1, rt1.c0, t0.c0 UNION SELECT ALL rt1.c1, rt1.c0, t0.c0 FROM t0, rt1 WHERE (((rt1.c0) ISNULL)) GROUP BY rt1.c1, rt1.c0, t0.c0;
SELECT rt1.c1, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c0, t0.c0;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING TOTAL(MIN(MIN(rt1.c1))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (TOTAL(MIN(MIN(rt1.c1))))) UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((TOTAL(MIN(MIN(rt1.c1)))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0)OR(load_extension(t0.c0, t0.c0))))AND(t0.c0 COLLATE RTRIM))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)OR(load_extension(t0.c0, t0.c0))))AND(t0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0)OR(load_extension(t0.c0, t0.c0))))AND(t0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN (NOT (t0.c0)) THEN t0.c0 COLLATE BINARY ELSE t0.c0 COLLATE RTRIM END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE WHEN (NOT (t0.c0)) THEN t0.c0 COLLATE BINARY ELSE t0.c0 COLLATE RTRIM END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN (NOT (t0.c0)) THEN t0.c0 COLLATE BINARY ELSE t0.c0 COLLATE RTRIM END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 CROSS JOIN t0 ON (((t0.c0)) NOT BETWEEN ((((rt1.c1) NOT NULL))) AND ((TRIM(rt1.c1)))) GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 CROSS JOIN t0 ON (((t0.c0)) NOT BETWEEN ((((rt1.c1) NOT NULL))) AND ((TRIM(rt1.c1)))) WHERE (rt1.c1) GROUP BY rt1.c0, rt1.c1, rt1.c2 UNION SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 CROSS JOIN t0 ON (((t0.c0)) NOT BETWEEN ((((rt1.c1) NOT NULL))) AND ((TRIM(rt1.c1)))) WHERE ((NOT (rt1.c1))) GROUP BY rt1.c0, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 CROSS JOIN t0 ON (((t0.c0)) NOT BETWEEN ((((rt1.c1) NOT NULL))) AND ((TRIM(rt1.c1)))) WHERE (((rt1.c1) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 CROSS JOIN t0 ON (((t0.c0)) NOT BETWEEN ((((rt1.c1) NOT NULL))) AND ((TRIM(rt1.c1)))) GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c1, t0.c0 FROM rt1 RIGHT OUTER JOIN t0 ON (((rt1.c2)) BETWEEN ((rt1.c2 COLLATE NOCASE)) AND ((CAST(rt1.c1 AS INTEGER)))) GROUP BY rt1.c1, t0.c0;
SELECT rt1.c1, t0.c0 FROM rt1 RIGHT OUTER JOIN t0 ON (((rt1.c2)) BETWEEN ((rt1.c2 COLLATE NOCASE)) AND ((CAST(rt1.c1 AS INTEGER)))) GROUP BY rt1.c1, t0.c0 HAVING (((AVG(COUNT(t0.c0)) IN ())) NOT BETWEEN (AVG(rt1.c2)) AND (GROUP_CONCAT(t0.c0))) UNION ALL SELECT rt1.c1, t0.c0 FROM rt1 RIGHT OUTER JOIN t0 ON (((rt1.c2)) BETWEEN ((rt1.c2 COLLATE NOCASE)) AND ((CAST(rt1.c1 AS INTEGER)))) GROUP BY rt1.c1, t0.c0 HAVING (NOT ((((AVG(COUNT(t0.c0)) IN ())) NOT BETWEEN (AVG(rt1.c2)) AND (GROUP_CONCAT(t0.c0))))) UNION ALL SELECT ALL rt1.c1, t0.c0 FROM rt1 RIGHT OUTER JOIN t0 ON (((rt1.c2)) BETWEEN ((rt1.c2 COLLATE NOCASE)) AND ((CAST(rt1.c1 AS INTEGER)))) GROUP BY rt1.c1, t0.c0 HAVING (((((AVG(COUNT(t0.c0)) IN ())) NOT BETWEEN (AVG(rt1.c2)) AND (GROUP_CONCAT(t0.c0)))) ISNULL);
SELECT ALL rt1.c1, t0.c0 FROM rt1 RIGHT OUTER JOIN t0 ON (((rt1.c2)) BETWEEN ((rt1.c2 COLLATE NOCASE)) AND ((CAST(rt1.c1 AS INTEGER)))) GROUP BY rt1.c1, t0.c0;
SELECT rt1.c1, t0.c0 FROM rt1 RIGHT OUTER JOIN t0 ON (((rt1.c2)) BETWEEN ((rt1.c2 COLLATE NOCASE)) AND ((CAST(rt1.c1 AS INTEGER)))) GROUP BY rt1.c1, t0.c0 HAVING (((AVG(COUNT(t0.c0)) IN ())) NOT BETWEEN (AVG(rt1.c2)) AND (GROUP_CONCAT(t0.c0))) UNION ALL SELECT rt1.c1, t0.c0 FROM rt1 RIGHT OUTER JOIN t0 ON (((rt1.c2)) BETWEEN ((rt1.c2 COLLATE NOCASE)) AND ((CAST(rt1.c1 AS INTEGER)))) GROUP BY rt1.c1, t0.c0 HAVING (NOT ((((AVG(COUNT(t0.c0)) IN ())) NOT BETWEEN (AVG(rt1.c2)) AND (GROUP_CONCAT(t0.c0))))) UNION ALL SELECT ALL rt1.c1, t0.c0 FROM rt1 RIGHT OUTER JOIN t0 ON (((rt1.c2)) BETWEEN ((rt1.c2 COLLATE NOCASE)) AND ((CAST(rt1.c1 AS INTEGER)))) GROUP BY rt1.c1, t0.c0 HAVING (((((AVG(COUNT(t0.c0)) IN ())) NOT BETWEEN (AVG(rt1.c2)) AND (GROUP_CONCAT(t0.c0)))) ISNULL);
SELECT ALL rt1.c1, t0.c0 FROM rt1 RIGHT OUTER JOIN t0 ON (((rt1.c2)) BETWEEN ((rt1.c2 COLLATE NOCASE)) AND ((CAST(rt1.c1 AS INTEGER)))) GROUP BY rt1.c1, t0.c0;
SELECT ALL * FROM t0, rt1;
SELECT * FROM t0, rt1 WHERE (((((rt1.c2)=(rt1.c1))) ISNULL)) UNION ALL SELECT ALL * FROM t0, rt1 WHERE ((NOT (((((rt1.c2)=(rt1.c1))) ISNULL)))) UNION ALL SELECT * FROM t0, rt1 WHERE (((((((rt1.c2)=(rt1.c1))) ISNULL)) ISNULL));
SELECT ALL * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (CASE WHEN '' THEN ((rt1.c2)IS NOT(rt1.c2)) WHEN LIKELIHOOD(t0.c0, 0.8476517887917945) THEN CASE t0.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END WHEN ((t0.c0)LIKE(t0.c0)) THEN ((t0.c0)+(rt1.c1)) ELSE (rt1.c1 IN ()) END) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (CASE WHEN '' THEN ((rt1.c2)IS NOT(rt1.c2)) WHEN LIKELIHOOD(t0.c0, 0.8476517887917945) THEN CASE t0.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END WHEN ((t0.c0)LIKE(t0.c0)) THEN ((t0.c0)+(rt1.c1)) ELSE (rt1.c1 IN ()) END))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((CASE WHEN '' THEN ((rt1.c2)IS NOT(rt1.c2)) WHEN LIKELIHOOD(t0.c0, 0.8476517887917945) THEN CASE t0.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END WHEN ((t0.c0)LIKE(t0.c0)) THEN ((t0.c0)+(rt1.c1)) ELSE (rt1.c1 IN ()) END) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c0 END) IS TRUE)) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (((CASE WHEN rt1.c0 THEN rt1.c0 END) IS TRUE)))) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((((CASE WHEN rt1.c0 THEN rt1.c0 END) IS TRUE)) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1;
SELECT rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1 HAVING (((- (MIN(TOTAL(COUNT(*))))))|(GROUP_CONCAT(AVG(COUNT(SUM(rt1.c2)))))) UNION ALL SELECT rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1 HAVING (NOT ((((- (MIN(TOTAL(COUNT(*))))))|(GROUP_CONCAT(AVG(COUNT(SUM(rt1.c2)))))))) UNION ALL SELECT ALL rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1 HAVING (((((- (MIN(TOTAL(COUNT(*))))))|(GROUP_CONCAT(AVG(COUNT(SUM(rt1.c2))))))) ISNULL);
SELECT rt1.c1 FROM t0, rt1;
SELECT rt1.c1 FROM t0, rt1 WHERE ((((t0.c0)IS(rt1.c2)) IN (CASE WHEN rt1.c0 THEN rt1.c2 WHEN t0.c0 THEN rt1.c2 WHEN rt1.c1 THEN t0.c0 END))) UNION ALL SELECT ALL rt1.c1 FROM t0, rt1 WHERE ((NOT ((((t0.c0)IS(rt1.c2)) IN (CASE WHEN rt1.c0 THEN rt1.c2 WHEN t0.c0 THEN rt1.c2 WHEN rt1.c1 THEN t0.c0 END))))) UNION ALL SELECT ALL rt1.c1 FROM t0, rt1 WHERE ((((((t0.c0)IS(rt1.c2)) IN (CASE WHEN rt1.c0 THEN rt1.c2 WHEN t0.c0 THEN rt1.c2 WHEN rt1.c1 THEN t0.c0 END))) ISNULL));
SELECT rt1.c1 FROM t0, rt1;
SELECT DISTINCT * FROM rt1, t0 NOT INDEXED;
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((rt1.c1 IN ()))OR(CAST(t0.c0 AS TEXT))))AND(((t0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT ((((((rt1.c1 IN ()))OR(CAST(t0.c0 AS TEXT))))AND(((t0.c0) NOT NULL)))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((((((((rt1.c1 IN ()))OR(CAST(t0.c0 AS TEXT))))AND(((t0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM rt1, t0 NOT INDEXED;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (rt1.c2) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (rt1.c2))) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((rt1.c2) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL t0.c0 FROM rt1 NATURAL JOIN t0 GROUP BY t0.c0;
SELECT t0.c0 FROM rt1 NATURAL JOIN t0 GROUP BY t0.c0 HAVING MAX(MAX(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(rt1.c2))))) UNION ALL SELECT t0.c0 FROM rt1 NATURAL JOIN t0 GROUP BY t0.c0 HAVING (NOT (MAX(MAX(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(rt1.c2))))))) UNION ALL SELECT t0.c0 FROM rt1 NATURAL JOIN t0 GROUP BY t0.c0 HAVING ((MAX(MAX(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(rt1.c2)))))) ISNULL);
SELECT SUM((((rt1.c2)) NOT BETWEEN ((((((rt1.c1)AND(rt1.c1)))OR(rt1.c0)))) AND ((((rt1.c2) NOT NULL))))) FROM rt1;
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (CASE ((rt1.c1) NOT NULL)  WHEN 0.5951791328032343 THEN CAST(rt1.c0 AS REAL) WHEN (rt1.c1 IN ()) THEN ((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)) WHEN (+ ('zn')) THEN rt1.c0 END) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (CASE ((rt1.c1) NOT NULL)  WHEN 0.5951791328032343 THEN CAST(rt1.c0 AS REAL) WHEN (rt1.c1 IN ()) THEN ((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)) WHEN (+ ('zn')) THEN rt1.c0 END))) UNION ALL SELECT ALL * FROM rt1 WHERE (((CASE ((rt1.c1) NOT NULL)  WHEN 0.5951791328032343 THEN CAST(rt1.c0 AS REAL) WHEN (rt1.c1 IN ()) THEN ((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)) WHEN (+ ('zn')) THEN rt1.c0 END) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CAST(rt1.c2 AS BLOB) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CAST(rt1.c2 AS BLOB) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CAST(rt1.c2 AS BLOB) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE ((((((rt1.c1) BETWEEN (1.854115386E9) AND (rt1.c0))))>(((rt1.c1 IN (rt1.c0)))))) GROUP BY rt1.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT ((((((rt1.c1) BETWEEN (1.854115386E9) AND (rt1.c0))))>(((rt1.c1 IN (rt1.c0)))))))) GROUP BY rt1.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c1 FROM rt1 WHERE ((((((((rt1.c1) BETWEEN (1.854115386E9) AND (rt1.c0))))>(((rt1.c1 IN (rt1.c0)))))) ISNULL)) GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c2 FROM rt1, t0 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1, t0 GROUP BY rt1.c2 HAVING AVG(json_patch(TOTAL(rt1.c0), TOTAL(MIN(GROUP_CONCAT(AVG(rt1.c0)))))) UNION ALL SELECT rt1.c2 FROM rt1, t0 GROUP BY rt1.c2 HAVING (NOT (AVG(json_patch(TOTAL(rt1.c0), TOTAL(MIN(GROUP_CONCAT(AVG(rt1.c0)))))))) UNION ALL SELECT ALL rt1.c2 FROM rt1, t0 GROUP BY rt1.c2 HAVING ((AVG(json_patch(TOTAL(rt1.c0), TOTAL(MIN(GROUP_CONCAT(AVG(rt1.c0))))))) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (((rt1.c0)||(CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN 0.2894083591060068 WHEN rt1.c1 THEN rt1.c2 ELSE 2025281132 END))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((rt1.c0)||(CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN 0.2894083591060068 WHEN rt1.c1 THEN rt1.c2 ELSE 2025281132 END))))) UNION ALL SELECT * FROM rt1 WHERE (((((rt1.c0)||(CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN 0.2894083591060068 WHEN rt1.c1 THEN rt1.c2 ELSE 2025281132 END))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (1175434176) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (1175434176))) UNION SELECT DISTINCT * FROM rt1 WHERE (((1175434176) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM t0, rt1 WHERE (CASE rt1.c0  WHEN ((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)) THEN ((rt1.c0) BETWEEN (rt1.c1) AND (t0.c0)) ELSE ((rt1.c2)|(rt1.c1)) END) GROUP BY rt1.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c1 FROM t0, rt1 WHERE ((NOT (CASE rt1.c0  WHEN ((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)) THEN ((rt1.c0) BETWEEN (rt1.c1) AND (t0.c0)) ELSE ((rt1.c2)|(rt1.c1)) END))) GROUP BY rt1.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c1 FROM t0, rt1 WHERE (((CASE rt1.c0  WHEN ((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)) THEN ((rt1.c0) BETWEEN (rt1.c1) AND (t0.c0)) ELSE ((rt1.c2)|(rt1.c1)) END) ISNULL)) GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(AVG(SUM(TOTAL(AVG(MIN(MIN(MIN(COUNT(*))))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(AVG(SUM(TOTAL(AVG(MIN(MIN(MIN(COUNT(*))))))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(AVG(SUM(TOTAL(AVG(MIN(MIN(MIN(COUNT(*)))))))))) ISNULL);
SELECT rt1.c2, rt1.c0 FROM rt1;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE (((rt1.c2) ISNULL)) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (((rt1.c2) ISNULL)))) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1 WHERE (((((rt1.c2) ISNULL)) ISNULL));
SELECT rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) ISNULL)) IS FALSE)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0) ISNULL)) IS FALSE)))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0) ISNULL)) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(CAST(t0.c0 AS INTEGER))))OR(t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(CAST(t0.c0 AS INTEGER))))OR(t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(CAST(t0.c0 AS INTEGER))))OR(t0.c0))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(CAST(AVG(t0.c0) AS BLOB) AS INTEGER) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(CAST(AVG(t0.c0) AS BLOB) AS INTEGER))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(CAST(AVG(t0.c0) AS BLOB) AS INTEGER)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(CAST(AVG(t0.c0) AS BLOB) AS INTEGER) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(CAST(AVG(t0.c0) AS BLOB) AS INTEGER))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(CAST(AVG(t0.c0) AS BLOB) AS INTEGER)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((t0.c0 IN ())) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((t0.c0 IN ())))) UNION ALL SELECT * FROM t0 WHERE ((((t0.c0 IN ())) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1 WHERE (CASE WHEN ((((rt1.c1)AND(0Xffffffff9e32b055)))OR(rt1.c0)) THEN ((rt1.c1) IS FALSE) WHEN ((rt1.c0) ISNULL) THEN rt1.c0 COLLATE BINARY WHEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) THEN rt1.c1 COLLATE RTRIM ELSE ((rt1.c1)<<(rt1.c1)) END) UNION SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (CASE WHEN ((((rt1.c1)AND(0Xffffffff9e32b055)))OR(rt1.c0)) THEN ((rt1.c1) IS FALSE) WHEN ((rt1.c0) ISNULL) THEN rt1.c0 COLLATE BINARY WHEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) THEN rt1.c1 COLLATE RTRIM ELSE ((rt1.c1)<<(rt1.c1)) END))) UNION SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1 WHERE (((CASE WHEN ((((rt1.c1)AND(0Xffffffff9e32b055)))OR(rt1.c0)) THEN ((rt1.c1) IS FALSE) WHEN ((rt1.c0) ISNULL) THEN rt1.c0 COLLATE BINARY WHEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) THEN rt1.c1 COLLATE RTRIM ELSE ((rt1.c1)<<(rt1.c1)) END) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1;
SELECT t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1;
SELECT ALL t0.c0, rt1.c1 FROM t0, rt1 WHERE (CASE WHEN CAST(rt1.c0 AS TEXT) THEN (~ (rt1.c2)) WHEN ((((rt1.c1)OR(t0.c0)))OR(rt1.c0)) THEN (+ (NULL)) WHEN ((rt1.c1) NOT NULL) THEN x'15ba' END) GROUP BY t0.c0, rt1.c1 UNION SELECT ALL t0.c0, rt1.c1 FROM t0, rt1 WHERE ((NOT (CASE WHEN CAST(rt1.c0 AS TEXT) THEN (~ (rt1.c2)) WHEN ((((rt1.c1)OR(t0.c0)))OR(rt1.c0)) THEN (+ (NULL)) WHEN ((rt1.c1) NOT NULL) THEN x'15ba' END))) GROUP BY t0.c0, rt1.c1 UNION SELECT ALL t0.c0, rt1.c1 FROM t0, rt1 WHERE (((CASE WHEN CAST(rt1.c0 AS TEXT) THEN (~ (rt1.c2)) WHEN ((((rt1.c1)OR(t0.c0)))OR(rt1.c0)) THEN (+ (NULL)) WHEN ((rt1.c1) NOT NULL) THEN x'15ba' END) ISNULL)) GROUP BY t0.c0, rt1.c1;
SELECT t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING CAST((((rt1.c2)) NOT BETWEEN ((SUM(rt1.c1))) AND ((COUNT(*)))) AS REAL) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING (NOT (CAST((((rt1.c2)) NOT BETWEEN ((SUM(rt1.c1))) AND ((COUNT(*)))) AS REAL))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING ((CAST((((rt1.c2)) NOT BETWEEN ((SUM(rt1.c1))) AND ((COUNT(*)))) AS REAL)) ISNULL);
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING CAST((((rt1.c2)) NOT BETWEEN ((SUM(rt1.c1))) AND ((COUNT(*)))) AS REAL) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING (NOT (CAST((((rt1.c2)) NOT BETWEEN ((SUM(rt1.c1))) AND ((COUNT(*)))) AS REAL))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING ((CAST((((rt1.c2)) NOT BETWEEN ((SUM(rt1.c1))) AND ((COUNT(*)))) AS REAL)) ISNULL);
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL TOTAL(((NOT (rt1.c1)) IN ())) FROM rt1;
SELECT * FROM rt1, t0;
SELECT ALL * FROM rt1, t0 WHERE (CAST(((((rt1.c1)OR(rt1.c1)))OR(t0.c0)) AS NUMERIC)) UNION ALL SELECT * FROM rt1, t0 WHERE ((NOT (CAST(((((rt1.c1)OR(rt1.c1)))OR(t0.c0)) AS NUMERIC)))) UNION ALL SELECT * FROM rt1, t0 WHERE (((CAST(((((rt1.c1)OR(rt1.c1)))OR(t0.c0)) AS NUMERIC)) ISNULL));
SELECT * FROM rt1, t0;
SELECT DISTINCT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1;
SELECT DISTINCT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1 WHERE (((((0xffffffff80a81227) NOT BETWEEN (rt1.c2) AND (t0.c0)))!=((~ (t0.c0))))) UNION SELECT DISTINCT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1 WHERE ((NOT (((((0Xffffffff80a81227) NOT BETWEEN (rt1.c2) AND (t0.c0)))<>((~ (t0.c0))))))) UNION SELECT DISTINCT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1 WHERE (((((((0xffffffff80a81227) NOT BETWEEN (rt1.c2) AND (t0.c0)))<>((~ (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1;
SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM t0, rt1 WHERE (((CASE WHEN t0.c0 THEN rt1.c1 END) IS FALSE)) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM t0, rt1 WHERE ((NOT (((CASE WHEN t0.c0 THEN rt1.c1 END) IS FALSE)))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM t0, rt1 WHERE (((((CASE WHEN t0.c0 THEN rt1.c1 END) IS FALSE)) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING UPPER(rt1.c1) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING (NOT (UPPER(rt1.c1))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING ((UPPER(rt1.c1)) ISNULL);
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING UPPER(rt1.c1) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING (NOT (UPPER(rt1.c1))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING ((UPPER(rt1.c1)) ISNULL);
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT * FROM t0 FULL OUTER JOIN rt1 ON (CASE WHEN '0.4360012206109235' THEN rt1.c2 ELSE t0.c0 END IN ());
SELECT * FROM t0 FULL OUTER JOIN rt1 ON (CASE WHEN '0.4360012206109235' THEN rt1.c2 ELSE t0.c0 END IN ()) WHERE ((~ ((~ (rt1.c0))))) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN rt1 ON (CASE WHEN '0.4360012206109235' THEN rt1.c2 ELSE t0.c0 END IN ()) WHERE ((NOT ((~ ((~ (rt1.c0))))))) UNION ALL SELECT * FROM t0 FULL OUTER JOIN rt1 ON (CASE WHEN '0.4360012206109235' THEN rt1.c2 ELSE t0.c0 END IN ()) WHERE ((((~ ((~ (rt1.c0))))) ISNULL));
SELECT * FROM t0 FULL OUTER JOIN rt1 ON (CASE WHEN '0.4360012206109235' THEN rt1.c2 ELSE t0.c0 END IN ());
SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1 WHERE (((((rt1.c0 IN ()), json_patch(rt1.c1, rt1.c2), ((((rt1.c1)AND(rt1.c1)))OR(rt1.c0))))==((CAST(rt1.c0 AS BLOB), ((rt1.c2) ISNULL), (rt1.c0 IN ()))))) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (((((rt1.c0 IN ()), json_patch(rt1.c1, rt1.c2), ((((rt1.c1)AND(rt1.c1)))OR(rt1.c0))))=((CAST(rt1.c0 AS BLOB), ((rt1.c2) ISNULL), (rt1.c0 IN ()))))))) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1 WHERE (((((((rt1.c0 IN ()), json_patch(rt1.c1, rt1.c2), ((((rt1.c1)AND(rt1.c1)))OR(rt1.c0))))==((CAST(rt1.c0 AS BLOB), ((rt1.c2) ISNULL), (rt1.c0 IN ()))))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((~ (((t0.c0) NOTNULL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((~ (((t0.c0) NOTNULL)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((~ (((t0.c0) NOTNULL)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) ORDER BY CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE BINARY  NULLS FIRST;
SELECT * FROM t0 WHERE ((NOT (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM))) ORDER BY CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE BINARY  NULLS FIRST;
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) ISNULL)) ORDER BY CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE BINARY  NULLS FIRST;
SELECT * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((CAST(t0.c0 AS REAL) IN ())) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((CAST(t0.c0 AS REAL) IN ())))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((CAST(t0.c0 AS REAL) IN ())) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CAST((('mpXU') ISNULL) AS INTEGER)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST((('mpXU') ISNULL) AS INTEGER)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST((('mpXU') ISNULL) AS INTEGER)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING COUNT(*) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING COUNT(*) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT * FROM t0 INDEXED BY i66, rt1;
SELECT ALL * FROM t0 INDEXED BY i66, rt1 WHERE ((((((rt1.c2)OR(NULL)))OR(rt1.c1)) IN ())) UNION ALL SELECT * FROM t0 INDEXED BY i66, rt1 WHERE ((NOT ((((((rt1.c2)OR(NULL)))OR(rt1.c1)) IN ())))) UNION ALL SELECT * FROM t0 INDEXED BY i66, rt1 WHERE ((((((((rt1.c2)OR(NULL)))OR(rt1.c1)) IN ())) ISNULL));
SELECT * FROM t0 INDEXED BY i66, rt1;
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((rt1.c1) NOTNULL)) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (((rt1.c1) NOTNULL)))) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((((rt1.c1) NOTNULL)) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 RIGHT OUTER JOIN t0 ON CAST(((((rt1.c1)OR(rt1.c1)))OR('1502615239')) AS NUMERIC) GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 RIGHT OUTER JOIN t0 ON CAST(((((rt1.c1)OR(rt1.c1)))OR('1502615239')) AS NUMERIC) WHERE (((rt1.c2 COLLATE BINARY) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 RIGHT OUTER JOIN t0 ON CAST(((((rt1.c1)OR(rt1.c1)))OR('1502615239')) AS NUMERIC) WHERE ((NOT (((rt1.c2 COLLATE BINARY) ISNULL)))) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 RIGHT OUTER JOIN t0 ON CAST(((((rt1.c1)OR(rt1.c1)))OR('1502615239')) AS NUMERIC) WHERE (((((rt1.c2 COLLATE BINARY) ISNULL)) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 RIGHT OUTER JOIN t0 ON CAST(((((rt1.c1)OR(rt1.c1)))OR('1502615239')) AS NUMERIC) GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0;
SELECT rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0 HAVING (TOTAL(rt1.c2) IN ()) UNION ALL SELECT rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0 HAVING (NOT ((TOTAL(rt1.c2) IN ()))) UNION ALL SELECT ALL rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0 HAVING (((TOTAL(rt1.c2) IN ())) ISNULL);
SELECT rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0;
SELECT rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0 HAVING (TOTAL(rt1.c2) IN ()) UNION ALL SELECT rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0 HAVING (NOT ((TOTAL(rt1.c2) IN ()))) UNION ALL SELECT ALL rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0 HAVING (((TOTAL(rt1.c2) IN ())) ISNULL);
SELECT rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0;
SELECT rt1.c1, rt1.c0 FROM rt1;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 WHERE (((((rt1.c2)=(rt1.c2))) IS TRUE)) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (((((rt1.c2)=(rt1.c2))) IS TRUE)))) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 WHERE (((((((rt1.c2)=(rt1.c2))) IS TRUE)) ISNULL));
SELECT rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((+ (CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN 0.18004011634800043 THEN rt1.c2 END))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((+ (CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN 0.18004011634800043 THEN rt1.c2 END))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((+ (CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN 0.18004011634800043 THEN rt1.c2 END))) ISNULL));
SELECT DISTINCT * FROM rt1;
