-- Time: 2024/06/12 06:08:30
-- Database: database85
-- Database version: 3.40.0
-- seed value: 3332424885
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INT ); -- 1ms;
UPDATE OR IGNORE t0 SET (c0)=(x'') WHERE (~ (((((t0.c0)AND(t0.c0)))OR(t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET c0='-349505271' WHERE ((load_extension(t0.c0)) ISNULL); -- 0ms;
UPDATE t0 SET c0=NULL WHERE ((((t0.c0) NOTNULL))&(((t0.c0)LIKE(t0.c0)))); -- 0ms;
PRAGMA default_cache_size; -- 0ms;
VACUUM temp; -- 0ms;
CREATE INDEX IF NOT EXISTS i96 ON t0(((CASE c0  WHEN c0 THEN c0 WHEN c0 THEN c0 WHEN c0 THEN 0.8760360851269918 WHEN c0 THEN c0 WHEN c0 THEN c0 ELSE 0.9794720914170213 END) BETWEEN ('') AND (CAST(c0 AS NUMERIC))) COLLATE RTRIM ASC) WHERE GLOB(((c0)LIKE(c0)), TYPEOF(c0)); -- 0ms;
CREATE UNIQUE INDEX i27 ON t0(CASE WHEN '1663278993' THEN ((((c0)AND(c0)))OR(c0)) ELSE (c0 IN ()) END DESC) WHERE ((((c0)AND(c0)))AND(c0)) COLLATE NOCASE; -- 1ms;
REINDEX; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE t0 SET (c0)=(0.2470893096223057); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'' WHERE CASE WHEN t0.c0 COLLATE RTRIM THEN (~ (t0.c0)) WHEN ((2115137026) NOTNULL) THEN CAST(t0.c0 AS TEXT) WHEN CAST(t0.c0 AS BLOB) THEN ((t0.c0) IS FALSE) ELSE t0.c0 END; -- 0ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT ALL COUNT(((t0.c0) ISNULL)) OVER () FROM t0; -- 0ms;
UPDATE OR FAIL t0 SET c0=0X221ca62e; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x''; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.370039119441102) WHERE ((((t0.c0)<<(t0.c0))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x10f50e16) BETWEEN (726263816) AND ((('\o') BETWEEN ('0#') AND (NULL)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.04973716938809969) WHERE (- (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))); -- 0ms;
PRAGMA temp.journal_mode; -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=0.9794720914170213, c0=x''; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0, c0)=('284495382', NULL, x'') WHERE CAST((~ (t0.c0)) AS BLOB); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (''), (2.84495382E8), (NULL); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (0.6811331587726118); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0x10f50e16); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL t0 SET c0=x'', c0='!''t텬O*tKU'; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'' WHERE (((NOT (t0.c0))) IS FALSE); -- 0ms;
ANALYZE; -- 0ms;
VACUUM; -- 1ms;
UPDATE t0 SET (c0)=('284495382'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i58 ON t0(((c0)>>(c0)) COLLATE RTRIM DESC) WHERE c0; -- 0ms;
PRAGMA temp.cache_spill = -7961919368503875304; -- 0ms;
UPDATE t0 SET c0=NULL WHERE ((NULL) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND ((- (t0.c0)))); -- 0ms;
PRAGMA main.journal_mode; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6195119822281437) BETWEEN (x'') AND (NULL)))|((((('284495382')AND(0x7eb45411)))OR('9')))); -- 0ms;
UPDATE OR ABORT t0 SET (c0)=(-1.424895636E9) WHERE ((CAST(t0.c0 AS REAL))+((+ (t0.c0)))); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.26933730598369654); -- 0ms;
ANALYZE t0; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i63 ON t0((~ (c0 COLLATE RTRIM)) ASC) WHERE CAST(LIKELY(DISTINCT c0) AS NUMERIC); -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
ANALYZE; -- 0ms;
COMMIT; -- 1ms;
UPDATE OR ABORT t0 SET c0='2115137026' WHERE ((x'')=(CAST(t0.c0 AS NUMERIC))); -- 0ms;
UPDATE t0 SET (c0)=('1425398419') WHERE ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))<<(CAST(t0.c0 AS REAL))); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL), (NULL), (x''); -- 0ms;
UPDATE t0 SET (c0)=(NULL) WHERE ((((t0.c0)+(t0.c0)))IS NOT(t0.c0)); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0x345df5b4), ('j'), (x'') ON CONFLICT(c0) DO NOTHING; -- 0ms;
INSERT OR REPLACE INTO rt0(c1) VALUES (''); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=0X10f50e16, c2=x'' WHERE (((((- (rt0.c1)))AND((- (rt0.c1)))))OR((((rt0.c2, 'VU5U(', rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c2, '롤W'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i27', '1425398419 sz=1661911346 unordered noskipscan'); -- 0ms;
ROLLBACK TRANSACTION; -- 3ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ABORT t0 SET c0='Ud'; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c90; -- 1ms;
UPDATE OR IGNORE rt0 SET c1=NULL, c0=473128686 WHERE ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))<<((+ (rt0.c2)))); -- 0ms;
UPDATE OR IGNORE t0 SET c90='-1378336431', c90='bh', c90='1376606866' WHERE (~ ((- (t0.c90)))); -- 0ms;
REINDEX i63; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(NULL) WHERE ((((rt0.c0)*(rt0.c2))) NOT NULL); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES ('') ON CONFLICT(c90) DO NOTHING; -- 1ms;
INSERT OR IGNORE INTO t0 VALUES ('-354294832'); -- 0ms;
DROP VIEW v0; -- 0ms;
REINDEX; -- 0ms;
UPDATE rt0 SET c0='(*b庣i*'; -- 0ms;
UPDATE OR IGNORE rt0 SET c1='j'; -- 0ms;
DROP INDEX "i63"; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rt0.c2 FROM rt0 INNER JOIN t0 ON CASE WHEN CASE WHEN rt0.c1 THEN NULL ELSE rt0.c0 END THEN QUOTE(rt0.c2) END;
SELECT ALL rt0.c2 FROM rt0 INNER JOIN t0 ON CASE WHEN CASE WHEN rt0.c1 THEN NULL ELSE rt0.c0 END THEN QUOTE(rt0.c2) END WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (NULL))) UNION ALL SELECT rt0.c2 FROM rt0 INNER JOIN t0 ON CASE WHEN CASE WHEN rt0.c1 THEN NULL ELSE rt0.c0 END THEN QUOTE(rt0.c2) END WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (NULL))))) UNION ALL SELECT rt0.c2 FROM rt0 INNER JOIN t0 ON CASE WHEN CASE WHEN rt0.c1 THEN NULL ELSE rt0.c0 END THEN QUOTE(rt0.c2) END WHERE (((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (NULL))) ISNULL));
SELECT rt0.c2 FROM rt0 INNER JOIN t0 ON CASE WHEN CASE WHEN rt0.c1 THEN NULL ELSE rt0.c0 END THEN QUOTE(rt0.c2) END;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c0 IN ())) BETWEEN ((+ (rt0.c0))) AND (CAST(rt0.c1 AS BLOB)));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c0 IN ())) BETWEEN ((+ (rt0.c0))) AND (CAST(rt0.c1 AS BLOB))) WHERE (TRIM((NOT (rt0.c1)), TYPEOF(rt0.c1))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c0 IN ())) BETWEEN ((+ (rt0.c0))) AND (CAST(rt0.c1 AS BLOB))) WHERE ((NOT (TRIM((NOT (rt0.c1)), TYPEOF(rt0.c1))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c0 IN ())) BETWEEN ((+ (rt0.c0))) AND (CAST(rt0.c1 AS BLOB))) WHERE (((TRIM((NOT (rt0.c1)), TYPEOF(rt0.c1))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c0 IN ())) BETWEEN ((+ (rt0.c0))) AND (CAST(rt0.c1 AS BLOB)));
SELECT rt0.c1, t0.c90, rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c1, t0.c90, rt0.c2, rt0.c0;
SELECT rt0.c1, t0.c90, rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN t0 WHERE (9223372036854775807) GROUP BY rt0.c1, t0.c90, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, t0.c90, rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN t0 WHERE ((NOT (9223372036854775807))) GROUP BY rt0.c1, t0.c90, rt0.c2, rt0.c0 UNION SELECT rt0.c1, t0.c90, rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN t0 WHERE (((9223372036854775807) ISNULL)) GROUP BY rt0.c1, t0.c90, rt0.c2, rt0.c0;
SELECT rt0.c1, t0.c90, rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c1, t0.c90, rt0.c2, rt0.c0;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING COUNT(NULL) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (COUNT(NULL))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((COUNT(NULL)) ISNULL);
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING COUNT(NULL) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (COUNT(NULL))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((COUNT(NULL)) ISNULL);
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0;
SELECT t0.c90 FROM t0 WHERE (((((t0.c90)+(t0.c90))) NOTNULL)) UNION ALL SELECT t0.c90 FROM t0 WHERE ((NOT (((((t0.c90)+(t0.c90))) NOTNULL)))) UNION ALL SELECT ALL t0.c90 FROM t0 WHERE (((((((t0.c90)+(t0.c90))) NOTNULL)) ISNULL));
SELECT t0.c90 FROM t0;
SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON ((((t0.c90)AND(t0.c90)))>=(CASE NULL  WHEN rt0.c2 THEN rt0.c1 END));
SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON ((((t0.c90)AND(t0.c90)))>=(CASE NULL  WHEN rt0.c2 THEN rt0.c1 END)) WHERE (((((((((((((((((301874867)AND(t0.c90)))OR(t0.c90)))OR(t0.c90 COLLATE RTRIM)))AND(((((t0.c90)AND(rt0.c2)))AND(t0.c90)))))OR(((rt0.c0) NOT NULL))))OR(NULLIF(t0.c90, t0.c90))))OR((NOT (rt0.c2)))))OR(CHANGES()))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON ((((t0.c90)AND(t0.c90)))>=(CASE NULL  WHEN rt0.c2 THEN rt0.c1 END)) WHERE ((NOT (((((((((((((((((301874867)AND(t0.c90)))OR(t0.c90)))OR(t0.c90 COLLATE RTRIM)))AND(((((t0.c90)AND(rt0.c2)))AND(t0.c90)))))OR(((rt0.c0) NOT NULL))))OR(NULLIF(t0.c90, t0.c90))))OR((NOT (rt0.c2)))))OR(CHANGES()))))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON ((((t0.c90)AND(t0.c90)))>=(CASE NULL  WHEN rt0.c2 THEN rt0.c1 END)) WHERE (((((((((((((((((((301874867)AND(t0.c90)))OR(t0.c90)))OR(t0.c90 COLLATE RTRIM)))AND(((((t0.c90)AND(rt0.c2)))AND(t0.c90)))))OR(((rt0.c0) NOT NULL))))OR(NULLIF(t0.c90, t0.c90))))OR((NOT (rt0.c2)))))OR(CHANGES()))) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON ((((t0.c90)AND(t0.c90)))>=(CASE NULL  WHEN rt0.c2 THEN rt0.c1 END));
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 WHERE (CASE ((t0.c90) IS FALSE)  WHEN ((((t0.c90)OR(t0.c90)))AND(-2.098874268E9)) THEN t0.c90 COLLATE RTRIM END) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE ((NOT (CASE ((t0.c90) IS FALSE)  WHEN ((((t0.c90)OR(t0.c90)))AND(-2.098874268E9)) THEN t0.c90 COLLATE RTRIM END))) GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM t0 WHERE (((CASE ((t0.c90) IS FALSE)  WHEN ((((t0.c90)OR(t0.c90)))AND(-2.098874268E9)) THEN t0.c90 COLLATE RTRIM END) ISNULL)) GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL rt0.c1, rt0.c2, t0.c90, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, t0.c90, rt0.c0;
SELECT rt0.c1, rt0.c2, t0.c90, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, t0.c90, rt0.c0 HAVING CAST(0Xffffffffa83527a7 AS TEXT) UNION ALL SELECT ALL rt0.c1, rt0.c2, t0.c90, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, t0.c90, rt0.c0 HAVING (NOT (CAST(0Xffffffffa83527a7 AS TEXT))) UNION ALL SELECT rt0.c1, rt0.c2, t0.c90, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, t0.c90, rt0.c0 HAVING ((CAST(0xffffffffa83527a7 AS TEXT)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, t0.c90, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, t0.c90, rt0.c0;
SELECT rt0.c1, rt0.c2, t0.c90, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, t0.c90, rt0.c0 HAVING CAST(0Xffffffffa83527a7 AS TEXT) UNION ALL SELECT ALL rt0.c1, rt0.c2, t0.c90, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, t0.c90, rt0.c0 HAVING (NOT (CAST(0Xffffffffa83527a7 AS TEXT))) UNION ALL SELECT rt0.c1, rt0.c2, t0.c90, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, t0.c90, rt0.c0 HAVING ((CAST(0xffffffffa83527a7 AS TEXT)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, t0.c90, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, t0.c90, rt0.c0;
SELECT ALL * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE (((((((('284495382')AND(rt0.c1)))OR(t0.c90)), ((((((((t0.c90)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))AND(t0.c90)), CAST(rt0.c1 AS NUMERIC)))==((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)), ((rt0.c2)<<(rt0.c0)), ROUND(rt0.c1, t0.c90))))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (((((((('284495382')AND(rt0.c1)))OR(t0.c90)), ((((((((t0.c90)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))AND(t0.c90)), CAST(rt0.c1 AS NUMERIC)))==((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)), ((rt0.c2)<<(rt0.c0)), ROUND(rt0.c1, t0.c90))))))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE (((((((((('284495382')AND(rt0.c1)))OR(t0.c90)), ((((((((t0.c90)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))AND(t0.c90)), CAST(rt0.c1 AS NUMERIC)))=((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)), ((rt0.c2)<<(rt0.c0)), ROUND(rt0.c1, t0.c90))))) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c90) BETWEEN (t0.c90) AND (t0.c90)))AND('J')))OR((t0.c90 IN (t0.c90, t0.c90, t0.c90))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((((t0.c90) BETWEEN (t0.c90) AND (t0.c90)))AND('J')))OR((t0.c90 IN (t0.c90, t0.c90, t0.c90))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c90) BETWEEN (t0.c90) AND (t0.c90)))AND('J')))OR((t0.c90 IN (t0.c90, t0.c90, t0.c90))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c90 FROM t0, rt0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0, rt0 WHERE (((CAST(rt0.c1 AS TEXT))*(rt0.c1 COLLATE RTRIM))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0, rt0 WHERE ((NOT (((CAST(rt0.c1 AS TEXT))*(rt0.c1 COLLATE RTRIM))))) GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM t0, rt0 WHERE (((((CAST(rt0.c1 AS TEXT))*(rt0.c1 COLLATE RTRIM))) ISNULL)) GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0, rt0 GROUP BY t0.c90;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE (((1.64060835E8) IS FALSE)) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (((1.64060835E8) IS FALSE)))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((((1.64060835E8) IS FALSE)) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c90) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c90))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c90) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c1)IS NOT(rt0.c1)))>((rt0.c0 IN ())))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c1)IS NOT(rt0.c1)))>((rt0.c0 IN ())))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c1)IS NOT(rt0.c1)))>((rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((CASE '702411270'  WHEN MAX(AVG(0.5466141745896729)) THEN COUNT(x'') WHEN rt0.c1 THEN SUM(COUNT(*)) WHEN rt0.c2 THEN TOTAL(rt0.c0) END)>=(CASE COUNT(*)  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((CASE '702411270'  WHEN MAX(AVG(0.5466141745896729)) THEN COUNT(x'') WHEN rt0.c1 THEN SUM(COUNT(*)) WHEN rt0.c2 THEN TOTAL(rt0.c0) END)>=(CASE COUNT(*)  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((CASE '702411270'  WHEN MAX(AVG(0.5466141745896729)) THEN COUNT(x'') WHEN rt0.c1 THEN SUM(COUNT(*)) WHEN rt0.c2 THEN TOTAL(rt0.c0) END)>=(CASE COUNT(*)  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN ())) BETWEEN (((rt0.c0) NOT NULL)) AND (((((rt0.c1)OR(rt0.c0)))AND(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c1 IN ())) BETWEEN (((rt0.c0) NOT NULL)) AND (((((rt0.c1)OR(rt0.c0)))AND(rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c1 IN ())) BETWEEN (((rt0.c0) NOT NULL)) AND (((((rt0.c1)OR(rt0.c0)))AND(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON LIKELY(DISTINCT UPPER(DISTINCT rt0.c1));
SELECT DISTINCT rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON LIKELY(DISTINCT UPPER(DISTINCT rt0.c1)) WHERE (t0.c90) UNION SELECT DISTINCT rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON LIKELY(DISTINCT UPPER(DISTINCT rt0.c1)) WHERE ((NOT (t0.c90))) UNION SELECT DISTINCT rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON LIKELY(DISTINCT UPPER(DISTINCT rt0.c1)) WHERE (((t0.c90) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON LIKELY(DISTINCT UPPER(DISTINCT rt0.c1));
SELECT ALL t0.c90 FROM t0, rt0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0, rt0 WHERE (((rt0.c1)<<(rt0.c1)) COLLATE BINARY) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0, rt0 WHERE ((NOT (((rt0.c1)<<(rt0.c1)) COLLATE BINARY))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0, rt0 WHERE (((((rt0.c1)<<(rt0.c1)) COLLATE BINARY) ISNULL)) GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0, rt0 GROUP BY t0.c90;
SELECT ALL rt0.c1, rt0.c0, t0.c90, rt0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c2 AS TEXT) COLLATE BINARY COLLATE RTRIM GROUP BY rt0.c1, rt0.c0, t0.c90, rt0.c2;
SELECT rt0.c1, rt0.c0, t0.c90, rt0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c2 AS TEXT) COLLATE BINARY COLLATE RTRIM GROUP BY rt0.c1, rt0.c0, t0.c90, rt0.c2 HAVING ((AVG(MIN(SUM(rt0.c2)))) IS FALSE) COLLATE RTRIM UNION ALL SELECT ALL rt0.c1, rt0.c0, t0.c90, rt0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c2 AS TEXT) COLLATE BINARY COLLATE RTRIM GROUP BY rt0.c1, rt0.c0, t0.c90, rt0.c2 HAVING (NOT (((AVG(MIN(SUM(rt0.c2)))) IS FALSE) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c1, rt0.c0, t0.c90, rt0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c2 AS TEXT) COLLATE BINARY COLLATE RTRIM GROUP BY rt0.c1, rt0.c0, t0.c90, rt0.c2 HAVING ((((AVG(MIN(SUM(rt0.c2)))) IS FALSE) COLLATE RTRIM) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (CHANGES() COLLATE RTRIM) UNION ALL SELECT * FROM t0 WHERE ((NOT (CHANGES() COLLATE RTRIM))) UNION ALL SELECT * FROM t0 WHERE (((CHANGES() COLLATE RTRIM) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((- (rt0.c1 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((- (rt0.c1 COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((- (rt0.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((~ (((rt0.c0)LIKE(rt0.c2))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((NOT ((~ (((rt0.c0)LIKE(rt0.c2))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((((~ (((rt0.c0)LIKE(rt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING MIN(AVG(TOTAL(t0.c90))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (MIN(AVG(TOTAL(t0.c90))))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((MIN(AVG(TOTAL(t0.c90)))) ISNULL);
SELECT t0.c90, rt0.c1, rt0.c0 FROM t0, rt0;
SELECT t0.c90, rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((((rt0.c2 IN ())) ISNULL)) UNION ALL SELECT t0.c90, rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((NOT ((((rt0.c2 IN ())) ISNULL)))) UNION ALL SELECT ALL t0.c90, rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((((((rt0.c2 IN ())) ISNULL)) ISNULL));
SELECT t0.c90, rt0.c1, rt0.c0 FROM t0, rt0;
SELECT DISTINCT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM t0, rt0;
SELECT DISTINCT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM t0, rt0 WHERE (CAST(((t0.c90) BETWEEN (rt0.c1) AND (rt0.c0)) AS NUMERIC)) UNION SELECT DISTINCT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((NOT (CAST(((t0.c90) BETWEEN (rt0.c1) AND (rt0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM t0, rt0 WHERE (((CAST(((t0.c90) BETWEEN (rt0.c1) AND (rt0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM t0, rt0;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 WHERE (t0.c90) GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM t0 WHERE ((NOT (t0.c90))) GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM t0 WHERE (((t0.c90) ISNULL)) GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING AVG(TOTAL(TOTAL(t0.c90))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (AVG(TOTAL(TOTAL(t0.c90))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((AVG(TOTAL(TOTAL(t0.c90)))) ISNULL);
SELECT * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE (((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))IS(CAST(rt0.c2 AS REAL)))) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))IS(CAST(rt0.c2 AS REAL)))))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))IS(CAST(rt0.c2 AS REAL)))) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (((((rt0.c1) IS TRUE)) IS TRUE)) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (((((rt0.c1) IS TRUE)) IS TRUE)))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((((((rt0.c1) IS TRUE)) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT rt0.c2, rt0.c0, t0.c90 FROM t0 LEFT OUTER JOIN rt0 ON (((-1384316678 IN ()))&(CASE WHEN t0.c90 THEN t0.c90 END)) GROUP BY rt0.c2, rt0.c0, t0.c90;
SELECT rt0.c2, rt0.c0, t0.c90 FROM t0 LEFT OUTER JOIN rt0 ON (((-1384316678 IN ()))&(CASE WHEN t0.c90 THEN t0.c90 END)) WHERE (((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(904951880)))OR(t0.c90))) BETWEEN (((t0.c90)>=(rt0.c0))) AND ((rt0.c1 IN ('185235283'))))) GROUP BY rt0.c2, rt0.c0, t0.c90 UNION SELECT rt0.c2, rt0.c0, t0.c90 FROM t0 LEFT OUTER JOIN rt0 ON (((-1384316678 IN ()))&(CASE WHEN t0.c90 THEN t0.c90 END)) WHERE ((NOT (((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(904951880)))OR(t0.c90))) BETWEEN (((t0.c90)>=(rt0.c0))) AND ((rt0.c1 IN ('185235283'))))))) GROUP BY rt0.c2, rt0.c0, t0.c90 UNION SELECT rt0.c2, rt0.c0, t0.c90 FROM t0 LEFT OUTER JOIN rt0 ON (((-1384316678 IN ()))&(CASE WHEN t0.c90 THEN t0.c90 END)) WHERE (((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(904951880)))OR(t0.c90))) BETWEEN (((t0.c90)>=(rt0.c0))) AND ((rt0.c1 IN ('185235283'))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, t0.c90;
SELECT rt0.c2, rt0.c0, t0.c90 FROM t0 LEFT OUTER JOIN rt0 ON (((-1384316678 IN ()))&(CASE WHEN t0.c90 THEN t0.c90 END)) GROUP BY rt0.c2, rt0.c0, t0.c90;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (CAST(rt0.c0 AS TEXT) IN (((AVG(MIN(GROUP_CONCAT(COUNT(MAX(rt0.c0)))))) NOT BETWEEN (MAX(AVG(rt0.c1))) AND (COUNT(rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ((CAST(rt0.c0 AS TEXT) IN (((AVG(MIN(GROUP_CONCAT(COUNT(MAX(rt0.c0)))))) NOT BETWEEN (MAX(AVG(rt0.c1))) AND (COUNT(rt0.c0))))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((CAST(rt0.c0 AS TEXT) IN (((AVG(MIN(GROUP_CONCAT(COUNT(MAX(rt0.c0)))))) NOT BETWEEN (MAX(AVG(rt0.c1))) AND (COUNT(rt0.c0)))))) ISNULL);
SELECT ALL t0.c90 FROM t0;
SELECT ALL t0.c90 FROM t0 WHERE (t0.c90) UNION ALL SELECT ALL t0.c90 FROM t0 WHERE ((NOT (t0.c90))) UNION ALL SELECT ALL t0.c90 FROM t0 WHERE (((t0.c90) ISNULL));
SELECT ALL t0.c90 FROM t0;
SELECT DISTINCT t0.c90, rt0.c0, rt0.c1, rt0.c2 FROM rt0 NATURAL JOIN t0;
SELECT DISTINCT t0.c90, rt0.c0, rt0.c1, rt0.c2 FROM rt0 NATURAL JOIN t0 WHERE ((~ ((((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) UNION SELECT DISTINCT t0.c90, rt0.c0, rt0.c1, rt0.c2 FROM rt0 NATURAL JOIN t0 WHERE ((NOT ((~ ((((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))))) UNION SELECT DISTINCT t0.c90, rt0.c0, rt0.c1, rt0.c2 FROM rt0 NATURAL JOIN t0 WHERE ((((~ ((((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ISNULL));
SELECT DISTINCT t0.c90, rt0.c0, rt0.c1, rt0.c2 FROM rt0 NATURAL JOIN t0;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 WHERE ((~ ('0.2800906405512197' COLLATE RTRIM))) GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM t0 WHERE ((NOT ((~ ('0.2800906405512197' COLLATE RTRIM))))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE ((((~ ('0.2800906405512197' COLLATE RTRIM))) ISNULL)) GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((MAX(t0.c90))AND((((TOTAL(MAX(MAX(TOTAL(t0.c90)))), NULL, COUNT(t0.c90))) BETWEEN ((t0.c90, MAX(AVG(t0.c90)), '')) AND ((TOTAL(SUM(TOTAL(GROUP_CONCAT(AVG(x'61cd'))))), MIN(SUM(GROUP_CONCAT(SUM(t0.c90)))), GROUP_CONCAT(t0.c90)))))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (((MAX(t0.c90))AND((((TOTAL(MAX(MAX(TOTAL(t0.c90)))), NULL, COUNT(t0.c90))) BETWEEN ((t0.c90, MAX(AVG(t0.c90)), '')) AND ((TOTAL(SUM(TOTAL(GROUP_CONCAT(AVG(x'61cd'))))), MIN(SUM(GROUP_CONCAT(SUM(t0.c90)))), GROUP_CONCAT(t0.c90)))))))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((((MAX(t0.c90))AND((((TOTAL(MAX(MAX(TOTAL(t0.c90)))), NULL, COUNT(t0.c90))) BETWEEN ((t0.c90, MAX(AVG(t0.c90)), '')) AND ((TOTAL(SUM(TOTAL(GROUP_CONCAT(AVG(x'61cd'))))), MIN(SUM(GROUP_CONCAT(SUM(t0.c90)))), GROUP_CONCAT(t0.c90))))))) ISNULL);
SELECT t0.c90 FROM t0;
SELECT ALL t0.c90 FROM t0 WHERE ((((((t0.c90))>=((t0.c90)))) NOT BETWEEN (((((t0.c90)AND(t0.c90)))AND(t0.c90))) AND ((- (t0.c90))))) UNION ALL SELECT ALL t0.c90 FROM t0 WHERE ((NOT ((((((t0.c90))>=((t0.c90)))) NOT BETWEEN (((((t0.c90)AND(t0.c90)))AND(t0.c90))) AND ((- (t0.c90))))))) UNION ALL SELECT t0.c90 FROM t0 WHERE ((((((((t0.c90))>=((t0.c90)))) NOT BETWEEN (((((t0.c90)AND(t0.c90)))AND(t0.c90))) AND ((- (t0.c90))))) ISNULL));
SELECT t0.c90 FROM t0;
SELECT DISTINCT * FROM rt0 INDEXED BY i58, t0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((((((((((((((rt0.c2)==(rt0.c0)))AND(CAST(rt0.c1 AS REAL))))OR((NOT (rt0.c0)))))AND(((rt0.c1)>=(NULL)))))OR(((0.5740810930018996) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c2)>=(rt0.c0)))))OR(((x'8d088425')&(rt0.c2))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((((((((((((((rt0.c2)==(rt0.c0)))AND(CAST(rt0.c1 AS REAL))))OR((NOT (rt0.c0)))))AND(((rt0.c1)>=(NULL)))))OR(((0.5740810930018996) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c2)>=(rt0.c0)))))OR(((x'8d088425')&(rt0.c2))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((((((((((((((rt0.c2)=(rt0.c0)))AND(CAST(rt0.c1 AS REAL))))OR((NOT (rt0.c0)))))AND(((rt0.c1)>=(NULL)))))OR(((0.5740810930018996) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c2)>=(rt0.c0)))))OR(((x'8d088425')&(rt0.c2))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1 HAVING SUM(TOTAL(AVG(rt0.c2))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (SUM(TOTAL(AVG(rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1 HAVING ((SUM(TOTAL(AVG(rt0.c2)))) ISNULL);
SELECT ALL rt0.c2 FROM rt0, t0;
SELECT ALL rt0.c2 FROM rt0, t0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE RTRIM) ORDER BY (((- (rt0.c1)))<=(rt0.c2)) ASC, ((((rt0.c2) IS FALSE))LIKE(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE x'' END)) DESC  NULLS LAST;
SELECT ALL rt0.c2 FROM rt0, t0 WHERE ((NOT (CAST(rt0.c0 AS INTEGER) COLLATE RTRIM))) ORDER BY (((- (rt0.c1)))<=(rt0.c2)) ASC, ((((rt0.c2) IS FALSE))LIKE(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE x'' END)) DESC  NULLS LAST;
SELECT rt0.c2 FROM rt0, t0 WHERE (((CAST(rt0.c0 AS INTEGER) COLLATE RTRIM) ISNULL)) ORDER BY (((- (rt0.c1)))<=(rt0.c2)) ASC, ((((rt0.c2) IS FALSE))LIKE(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE x'' END)) DESC  NULLS LAST;
SELECT ALL rt0.c2 FROM rt0, t0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (NULL) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 WHERE ((((t0.c90)) BETWEEN ((t0.c90)) AND ((((((t0.c90)OR(t0.c90)))AND(t0.c90)))))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE ((NOT ((((t0.c90)) BETWEEN ((t0.c90)) AND ((((((t0.c90)OR(t0.c90)))AND(t0.c90)))))))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE ((((((t0.c90)) BETWEEN ((t0.c90)) AND ((((((t0.c90)OR(t0.c90)))AND(t0.c90)))))) ISNULL)) GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING AVG(COUNT(rt0.c2)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (AVG(COUNT(rt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((AVG(COUNT(rt0.c2))) ISNULL);
SELECT * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE (((CASE rt0.c1  WHEN NULL THEN t0.c90 ELSE t0.c90 END) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND ((rt0.c2 IN (rt0.c1))))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (((CASE rt0.c1  WHEN NULL THEN t0.c90 ELSE t0.c90 END) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND ((rt0.c2 IN (rt0.c1))))))) UNION ALL SELECT * FROM t0, rt0 WHERE (((((CASE rt0.c1  WHEN NULL THEN t0.c90 ELSE t0.c90 END) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND ((rt0.c2 IN (rt0.c1))))) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((NULL)&(rt0.c1))) BETWEEN (rt0.c1) AND (rt0.c2 COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((((NULL)&(rt0.c1))) BETWEEN (rt0.c1) AND (rt0.c2 COLLATE RTRIM))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((((NULL)&(rt0.c1))) BETWEEN (rt0.c1) AND (rt0.c2 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 WHERE (((((((((((t0.c90)GLOB(t0.c90)))OR((NOT (t0.c90)))))OR(LOWER(DISTINCT t0.c90))))AND(CAST(t0.c90 AS TEXT))))AND(t0.c90 COLLATE NOCASE))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE ((NOT (((((((((((t0.c90)GLOB(t0.c90)))OR((NOT (t0.c90)))))OR(LOWER(DISTINCT t0.c90))))AND(CAST(t0.c90 AS TEXT))))AND(t0.c90 COLLATE NOCASE))))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE (((((((((((((t0.c90)GLOB(t0.c90)))OR((NOT (t0.c90)))))OR(LOWER(DISTINCT t0.c90))))AND(CAST(t0.c90 AS TEXT))))AND(t0.c90 COLLATE NOCASE))) ISNULL)) GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((MIN(GROUP_CONCAT(t0.c90)))-(MIN(GROUP_CONCAT(t0.c90)))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (((MIN(GROUP_CONCAT(t0.c90)))-(MIN(GROUP_CONCAT(t0.c90)))))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((((MIN(GROUP_CONCAT(t0.c90)))-(MIN(GROUP_CONCAT(t0.c90))))) ISNULL);
SELECT MIN((((rt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS TEXT))) AND (((((rt0.c0))==((rt0.c1))))))) FROM rt0, t0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((+ ((rt0.c0 IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((+ ((rt0.c0 IN ())))))) UNION ALL SELECT * FROM rt0 WHERE ((((+ ((rt0.c0 IN ())))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN t0.c90 THEN t0.c90 END)<<(UNLIKELY(x'')))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((CASE WHEN t0.c90 THEN t0.c90 END)<<(UNLIKELY(x'')))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((CASE WHEN t0.c90 THEN t0.c90 END)<<(UNLIKELY(x'')))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 WHERE ((t0.c90 IN (t0.c90, t0.c90)) COLLATE RTRIM) GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM t0 WHERE ((NOT ((t0.c90 IN (t0.c90, t0.c90)) COLLATE RTRIM))) GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM t0 WHERE ((((t0.c90 IN (t0.c90, t0.c90)) COLLATE RTRIM) ISNULL)) GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE (SQLITE_SOURCE_ID()) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (SQLITE_SOURCE_ID()))) UNION ALL SELECT * FROM t0, rt0 WHERE (((SQLITE_SOURCE_ID()) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (CASE WHEN ((rt0.c0) NOTNULL) THEN CAST(rt0.c0 AS TEXT) ELSE CAST(t0.c90 AS BLOB) END) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (CASE WHEN ((rt0.c0) NOTNULL) THEN CAST(rt0.c0 AS TEXT) ELSE CAST(t0.c90 AS BLOB) END))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((CASE WHEN ((rt0.c0) NOTNULL) THEN CAST(rt0.c0 AS TEXT) ELSE CAST(t0.c90 AS BLOB) END) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (CASE WHEN CAST(rt0.c0 AS BLOB) THEN (((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, NULL, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c1))) ELSE rt0.c0 COLLATE RTRIM END) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN CAST(rt0.c0 AS BLOB) THEN (((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, NULL, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c1))) ELSE rt0.c0 COLLATE RTRIM END))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((CASE WHEN CAST(rt0.c0 AS BLOB) THEN (((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, NULL, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c1))) ELSE rt0.c0 COLLATE RTRIM END) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING COUNT((- (MAX(GROUP_CONCAT(''))))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (COUNT((- (MAX(GROUP_CONCAT(''))))))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((COUNT((- (MAX(GROUP_CONCAT('')))))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, t0.c90 FROM rt0 CROSS JOIN t0 ON json_quote(rt0.c2);
SELECT rt0.c0, rt0.c1, t0.c90 FROM rt0 CROSS JOIN t0 ON json_quote(rt0.c2) WHERE (296889632) UNION ALL SELECT ALL rt0.c0, rt0.c1, t0.c90 FROM rt0 CROSS JOIN t0 ON json_quote(rt0.c2) WHERE ((NOT (296889632))) UNION ALL SELECT rt0.c0, rt0.c1, t0.c90 FROM rt0 CROSS JOIN t0 ON json_quote(rt0.c2) WHERE (((296889632) ISNULL));
SELECT ALL rt0.c0, rt0.c1, t0.c90 FROM rt0 CROSS JOIN t0 ON json_quote(rt0.c2);
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c2, NULL))) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c2, NULL))) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c2, NULL))) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, t0.c90, rt0.c1, rt0.c0 FROM t0 CROSS JOIN rt0 ON t0.c90 GROUP BY rt0.c2, t0.c90, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, t0.c90, rt0.c1, rt0.c0 FROM t0 CROSS JOIN rt0 ON t0.c90 WHERE ((((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))OR(((t0.c90)+(t0.c90)))))OR(CAST(rt0.c0 AS BLOB)))) GROUP BY rt0.c2, t0.c90, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, t0.c90, rt0.c1, rt0.c0 FROM t0 CROSS JOIN rt0 ON t0.c90 WHERE ((NOT ((((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))OR(((t0.c90)+(t0.c90)))))OR(CAST(rt0.c0 AS BLOB)))))) GROUP BY rt0.c2, t0.c90, rt0.c1, rt0.c0 UNION SELECT rt0.c2, t0.c90, rt0.c1, rt0.c0 FROM t0 CROSS JOIN rt0 ON t0.c90 WHERE ((((((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))OR(((t0.c90)+(t0.c90)))))OR(CAST(rt0.c0 AS BLOB)))) ISNULL)) GROUP BY rt0.c2, t0.c90, rt0.c1, rt0.c0;
SELECT rt0.c2, t0.c90, rt0.c1, rt0.c0 FROM t0 CROSS JOIN rt0 ON t0.c90 GROUP BY rt0.c2, t0.c90, rt0.c1, rt0.c0;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (- (COUNT(MIN(MIN(MIN(GROUP_CONCAT(GROUP_CONCAT(t0.c90)))))))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT ((- (COUNT(MIN(MIN(MIN(GROUP_CONCAT(GROUP_CONCAT(t0.c90)))))))))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (((- (COUNT(MIN(MIN(MIN(GROUP_CONCAT(GROUP_CONCAT(t0.c90))))))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((rt0.c2 COLLATE BINARY)AND(((rt0.c0) NOT NULL))))OR(((rt0.c0)==(rt0.c1)))))AND(rt0.c1)))OR((((rt0.c0, rt0.c1, '3k')) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((((rt0.c2 COLLATE BINARY)AND(((rt0.c0) NOT NULL))))OR(((rt0.c0)=(rt0.c1)))))AND(rt0.c1)))OR((((rt0.c0, rt0.c1, '3k')) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c0)))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((((rt0.c2 COLLATE BINARY)AND(((rt0.c0) NOT NULL))))OR(((rt0.c0)==(rt0.c1)))))AND(rt0.c1)))OR((((rt0.c0, rt0.c1, '3k')) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c0)))))) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2 FROM t0, rt0;
SELECT DISTINCT rt0.c2 FROM t0, rt0 WHERE ((+ ((- (t0.c90))))) UNION SELECT DISTINCT rt0.c2 FROM t0, rt0 WHERE ((NOT ((+ ((- (t0.c90))))))) UNION SELECT DISTINCT rt0.c2 FROM t0, rt0 WHERE ((((+ ((- (t0.c90))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM t0, rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0 WHERE (CASE rt0.c1  WHEN ROUND(rt0.c0, rt0.c2) THEN CAST(rt0.c0 AS TEXT) ELSE CAST(rt0.c2 AS BLOB) END) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((NOT (CASE rt0.c1  WHEN ROUND(rt0.c0, rt0.c2) THEN CAST(rt0.c0 AS TEXT) ELSE CAST(rt0.c2 AS BLOB) END))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0 WHERE (((CASE rt0.c1  WHEN ROUND(rt0.c0, rt0.c2) THEN CAST(rt0.c0 AS TEXT) ELSE CAST(rt0.c2 AS BLOB) END) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c2, t0.c90, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, t0.c90, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, t0.c90, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, t0.c90, rt0.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL rt0.c1, rt0.c2, t0.c90, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, t0.c90, rt0.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT rt0.c1, rt0.c2, t0.c90, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, t0.c90, rt0.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(1.032242665E9 AS NUMERIC))&(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((CAST(1.032242665E9 AS NUMERIC))&(rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((CAST(1.032242665E9 AS NUMERIC))&(rt0.c2))) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (((((rt0.c0)<<(rt0.c2))) BETWEEN (((rt0.c1) NOT BETWEEN (0.9354423964871249) AND (rt0.c1))) AND (rt0.c2))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (((((rt0.c0)<<(rt0.c2))) BETWEEN (((rt0.c1) NOT BETWEEN (0.9354423964871249) AND (rt0.c1))) AND (rt0.c2))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((((((rt0.c0)<<(rt0.c2))) BETWEEN (((rt0.c1) NOT BETWEEN (0.9354423964871249) AND (rt0.c1))) AND (rt0.c2))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 WHERE ((- (json_remove(t0.c90, t0.c90, t0.c90, t0.c90)))) GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM t0 WHERE ((NOT ((- (json_remove(t0.c90, t0.c90, t0.c90, t0.c90)))))) GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM t0 WHERE ((((- (json_remove(t0.c90, t0.c90, t0.c90, t0.c90)))) ISNULL)) GROUP BY t0.c90;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING CAST(TOTAL(rt0.c2) AS NUMERIC) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (CAST(TOTAL(rt0.c2) AS NUMERIC))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((CAST(TOTAL(rt0.c2) AS NUMERIC)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING CAST(TOTAL(rt0.c2) AS NUMERIC) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (CAST(TOTAL(rt0.c2) AS NUMERIC))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((CAST(TOTAL(rt0.c2) AS NUMERIC)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c0 FROM rt0, t0;
SELECT rt0.c0 FROM rt0, t0 WHERE (((t0.c90)OR(rt0.c0 COLLATE RTRIM))) UNION ALL SELECT rt0.c0 FROM rt0, t0 WHERE ((NOT (((t0.c90)OR(rt0.c0 COLLATE RTRIM))))) UNION ALL SELECT rt0.c0 FROM rt0, t0 WHERE (((((t0.c90)OR(rt0.c0 COLLATE RTRIM))) ISNULL));
SELECT rt0.c0 FROM rt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c90 IN (t0.c90)))&(CASE t0.c90  WHEN t0.c90 THEN t0.c90 END))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c90 IN (t0.c90)))&(CASE t0.c90  WHEN t0.c90 THEN t0.c90 END))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c90 IN (t0.c90)))&(CASE t0.c90  WHEN t0.c90 THEN t0.c90 END))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c1, rt0.c0, t0.c90 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, t0.c90;
SELECT ALL rt0.c1, rt0.c0, t0.c90 FROM t0, rt0 WHERE ((NOT (((0.13502296666507219)OR(rt0.c1))))) GROUP BY rt0.c1, rt0.c0, t0.c90 UNION SELECT ALL rt0.c1, rt0.c0, t0.c90 FROM t0, rt0 WHERE ((NOT ((NOT (((0.13502296666507219)OR(rt0.c1))))))) GROUP BY rt0.c1, rt0.c0, t0.c90 UNION SELECT ALL rt0.c1, rt0.c0, t0.c90 FROM t0, rt0 WHERE ((((NOT (((0.13502296666507219)OR(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, t0.c90;
SELECT ALL rt0.c1, rt0.c0, t0.c90 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, t0.c90;
SELECT t0.c90, rt0.c1 FROM t0, rt0 GROUP BY t0.c90, rt0.c1;
SELECT t0.c90, rt0.c1 FROM t0, rt0 GROUP BY t0.c90, rt0.c1 HAVING MAX((~ (MIN(rt0.c0)))) UNION ALL SELECT ALL t0.c90, rt0.c1 FROM t0, rt0 GROUP BY t0.c90, rt0.c1 HAVING (NOT (MAX((~ (MIN(rt0.c0)))))) UNION ALL SELECT ALL t0.c90, rt0.c1 FROM t0, rt0 GROUP BY t0.c90, rt0.c1 HAVING ((MAX((~ (MIN(rt0.c0))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (TYPEOF(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (TYPEOF(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((TYPEOF(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT t0.c90 FROM t0;
SELECT DISTINCT t0.c90 FROM t0 WHERE (((HEX('%?')) ISNULL)) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE ((NOT (((HEX('%?')) ISNULL)))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE (((((HEX('%?')) ISNULL)) ISNULL));
SELECT DISTINCT t0.c90 FROM t0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0, t0 WHERE (((rt0.c2) IS TRUE)) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0, t0 WHERE ((NOT (((rt0.c2) IS TRUE)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0, t0 WHERE (((((rt0.c2) IS TRUE)) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING COUNT(MIN(GROUP_CONCAT(AVG(t0.c90)))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (COUNT(MIN(GROUP_CONCAT(AVG(t0.c90)))))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((COUNT(MIN(GROUP_CONCAT(AVG(t0.c90))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1)|('(*b庣i*')) THEN (((rt0.c0, rt0.c2, rt0.c2))=((rt0.c1, rt0.c2, rt0.c0))) WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END THEN ((((((((rt0.c0)AND(rt0.c1)))OR(NULL)))AND(rt0.c1)))OR(rt0.c0)) WHEN rt0.c0 THEN (rt0.c1 IN ()) END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c1)|('(*b庣i*')) THEN (((rt0.c0, rt0.c2, rt0.c2))==((rt0.c1, rt0.c2, rt0.c0))) WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END THEN ((((((((rt0.c0)AND(rt0.c1)))OR(NULL)))AND(rt0.c1)))OR(rt0.c0)) WHEN rt0.c0 THEN (rt0.c1 IN ()) END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE WHEN ((rt0.c1)|('(*b庣i*')) THEN (((rt0.c0, rt0.c2, rt0.c2))==((rt0.c1, rt0.c2, rt0.c0))) WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END THEN ((((((((rt0.c0)AND(rt0.c1)))OR(NULL)))AND(rt0.c1)))OR(rt0.c0)) WHEN rt0.c0 THEN (rt0.c1 IN ()) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0 FROM t0, rt0;
SELECT DISTINCT rt0.c0 FROM t0, rt0 WHERE ((((rt0.c0 IN (0.6811331587726118, NULL)))>=(rt0.c1 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c0 FROM t0, rt0 WHERE ((NOT ((((rt0.c0 IN (0.6811331587726118, NULL)))>=(rt0.c1 COLLATE NOCASE))))) UNION SELECT DISTINCT rt0.c0 FROM t0, rt0 WHERE ((((((rt0.c0 IN (0.6811331587726118, NULL)))>=(rt0.c1 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt0.c0 FROM t0, rt0;
SELECT ALL rt0.c1 FROM t0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM t0, rt0 WHERE (((((rt0.c2) NOT NULL))>>((('GO') BETWEEN (t0.c90) AND (rt0.c2))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM t0, rt0 WHERE ((NOT (((((rt0.c2) NOT NULL))>>((('GO') BETWEEN (t0.c90) AND (rt0.c2))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM t0, rt0 WHERE (((((((rt0.c2) NOT NULL))>>((('GO') BETWEEN (t0.c90) AND (rt0.c2))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM t0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING NULL UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((NULL) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING NULL UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((NULL) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL t0.c90, rt0.c1 FROM rt0 INNER JOIN t0 ON ((((rt0.c0) IS FALSE)) NOTNULL);
SELECT ALL t0.c90, rt0.c1 FROM rt0 INNER JOIN t0 ON ((((rt0.c0) IS FALSE)) NOTNULL) WHERE (((TRIM(DISTINCT rt0.c1, 0.370039119441102)) BETWEEN (((((1638864210)OR(rt0.c1)))AND(rt0.c1))) AND (rt0.c1 COLLATE NOCASE))) UNION ALL SELECT t0.c90, rt0.c1 FROM rt0 NOT INDEXED INNER JOIN t0 ON ((((rt0.c0) IS FALSE)) NOTNULL) WHERE ((NOT (((TRIM(DISTINCT rt0.c1, 0.370039119441102)) BETWEEN (((((1638864210)OR(rt0.c1)))AND(rt0.c1))) AND (rt0.c1 COLLATE NOCASE))))) UNION ALL SELECT ALL t0.c90, rt0.c1 FROM rt0 INNER JOIN t0 ON ((((rt0.c0) IS FALSE)) NOTNULL) WHERE (((((TRIM(DISTINCT rt0.c1, 0.370039119441102)) BETWEEN (((((1638864210)OR(rt0.c1)))AND(rt0.c1))) AND (rt0.c1 COLLATE NOCASE))) ISNULL));
SELECT ALL t0.c90, rt0.c1 FROM rt0 INNER JOIN t0 ON ((((rt0.c0) IS FALSE)) NOTNULL);
SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON ((LAST_INSERT_ROWID())%(NULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON ((LAST_INSERT_ROWID())%(NULL)) WHERE (0.6772920720479051) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON ((LAST_INSERT_ROWID())%(NULL)) WHERE ((NOT (0.6772920720479051))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON ((LAST_INSERT_ROWID())%(NULL)) WHERE (((0.6772920720479051) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON ((LAST_INSERT_ROWID())%(NULL));
SELECT rt0.c1, t0.c90, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, t0.c90, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, t0.c90, rt0.c0, rt0.c2 FROM t0, rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c1) AND (t0.c90)))OR(CAST(rt0.c1 AS INTEGER))))OR('-1298080959'))) GROUP BY rt0.c1, t0.c90, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, t0.c90, rt0.c0, rt0.c2 FROM t0, rt0 WHERE ((NOT (((((((rt0.c0) BETWEEN (rt0.c1) AND (t0.c90)))OR(CAST(rt0.c1 AS INTEGER))))OR('-1298080959'))))) GROUP BY rt0.c1, t0.c90, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, t0.c90, rt0.c0, rt0.c2 FROM t0, rt0 WHERE (((((((((rt0.c0) BETWEEN (rt0.c1) AND (t0.c90)))OR(CAST(rt0.c1 AS INTEGER))))OR('-1298080959'))) ISNULL)) GROUP BY rt0.c1, t0.c90, rt0.c0, rt0.c2;
SELECT rt0.c1, t0.c90, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, t0.c90, rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, t0.c90 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c90;
SELECT rt0.c0, rt0.c1, rt0.c2, t0.c90 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c90 HAVING MAX(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, t0.c90 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c90 HAVING (NOT (MAX(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, t0.c90 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c90 HAVING ((MAX(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c1)%(t0.c90)))>=((t0.c90 IN ())));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c1)%(t0.c90)))>=((t0.c90 IN ()))) WHERE (NULL) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c1)%(t0.c90)))>=((t0.c90 IN ()))) WHERE ((NOT (NULL))) UNION ALL SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c1)%(t0.c90)))>=((t0.c90 IN ()))) WHERE (((NULL) ISNULL));
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c1)%(t0.c90)))>=((t0.c90 IN ())));
SELECT DISTINCT t0.c90, rt0.c1 FROM t0, rt0;
SELECT DISTINCT t0.c90, rt0.c1 FROM t0, rt0 NOT INDEXED WHERE (rt0.c0) UNION SELECT DISTINCT t0.c90, rt0.c1 FROM t0, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT t0.c90, rt0.c1 FROM t0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT t0.c90, rt0.c1 FROM t0, rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (((rt0.c2, NULL, COUNT(*))) NOT BETWEEN ((AVG(t0.c90), SUM(rt0.c2), COUNT(rt0.c1))) AND ((CASE WHEN t0.c90 THEN MIN(COUNT(*)) END, COUNT(*), '5d' COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ((((rt0.c2, NULL, COUNT(*))) NOT BETWEEN ((AVG(t0.c90), SUM(rt0.c2), COUNT(rt0.c1))) AND ((CASE WHEN t0.c90 THEN MIN(COUNT(*)) END, COUNT(*), '5d' COLLATE RTRIM))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (((((rt0.c2, NULL, COUNT(*))) NOT BETWEEN ((AVG(t0.c90), SUM(rt0.c2), COUNT(rt0.c1))) AND ((CASE WHEN t0.c90 THEN MIN(COUNT(*)) END, COUNT(*), '5d' COLLATE RTRIM)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (QUOTE(json_valid(rt0.c2))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (QUOTE(json_valid(rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE (((QUOTE(json_valid(rt0.c2))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT t0.c90, rt0.c0 FROM rt0, t0;
SELECT DISTINCT t0.c90, rt0.c0 FROM rt0, t0 WHERE (CAST((((rt0.c2, rt0.c1, rt0.c0, rt0.c0, rt0.c2))<=((t0.c90, rt0.c2, t0.c90, rt0.c0, rt0.c2))) AS REAL)) UNION SELECT DISTINCT t0.c90, rt0.c0 FROM rt0, t0 WHERE ((NOT (CAST((((rt0.c2, rt0.c1, rt0.c0, rt0.c0, rt0.c2))<=((t0.c90, rt0.c2, t0.c90, rt0.c0, rt0.c2))) AS REAL)))) UNION SELECT DISTINCT t0.c90, rt0.c0 FROM rt0, t0 WHERE (((CAST((((rt0.c2, rt0.c1, rt0.c0, rt0.c0, rt0.c2))<=((t0.c90, rt0.c2, t0.c90, rt0.c0, rt0.c2))) AS REAL)) ISNULL));
SELECT DISTINCT t0.c90, rt0.c0 FROM rt0, t0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))|(LIKELY(DISTINCT rt0.c2)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))|(LIKELY(DISTINCT rt0.c2)))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))|(LIKELY(DISTINCT rt0.c2)))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING GROUP_CONCAT(TRIM(MAX(MAX(t0.c90)), COUNT(*))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (GROUP_CONCAT(TRIM(MAX(MAX(t0.c90)), COUNT(*))))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((GROUP_CONCAT(TRIM(MAX(MAX(t0.c90)), COUNT(*)))) ISNULL);
SELECT t0.c90 FROM t0, rt0;
SELECT t0.c90 FROM t0, rt0 WHERE (rt0.c0 COLLATE RTRIM) UNION ALL SELECT t0.c90 FROM t0, rt0 WHERE ((NOT (rt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL t0.c90 FROM t0, rt0 WHERE (((rt0.c0 COLLATE RTRIM) ISNULL));
SELECT t0.c90 FROM t0, rt0;
SELECT DISTINCT t0.c90 FROM t0;
SELECT DISTINCT t0.c90 FROM t0 WHERE ((((+ (t0.c90)))||(((t0.c90)/('?9'))))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE ((NOT ((((+ (t0.c90)))||(((t0.c90)/('?9'))))))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE ((((((+ (t0.c90)))||(((t0.c90)/('?9'))))) ISNULL));
SELECT DISTINCT t0.c90 FROM t0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (CAST(1661911346 COLLATE BINARY AS TEXT)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CAST(1661911346 COLLATE BINARY AS TEXT)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((CAST(1661911346 COLLATE BINARY AS TEXT)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING x'' UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (x'')) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((x'') ISNULL);
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING x'' UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (x'')) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((x'') ISNULL);
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0;
SELECT ALL t0.c90 FROM t0 WHERE (CASE CAST(t0.c90 AS REAL)  WHEN MAX(t0.c90, t0.c90) THEN MAX(t0.c90, t0.c90) END) UNION ALL SELECT t0.c90 FROM t0 WHERE ((NOT (CASE CAST(t0.c90 AS REAL)  WHEN MAX(t0.c90, t0.c90) THEN MAX(t0.c90, t0.c90) END))) UNION ALL SELECT t0.c90 FROM t0 WHERE (((CASE CAST(t0.c90 AS REAL)  WHEN MAX(t0.c90, t0.c90) THEN MAX(t0.c90, t0.c90) END) ISNULL));
SELECT t0.c90 FROM t0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, t0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT BETWEEN (CASE t0.c90  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN t0.c90 WHEN rt0.c1 THEN rt0.c0 ELSE '' END) AND ((rt0.c2 IN ())))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, t0 WHERE ((NOT ((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT BETWEEN (CASE t0.c90  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN t0.c90 WHEN rt0.c1 THEN rt0.c0 ELSE '' END) AND ((rt0.c2 IN ())))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, t0 WHERE ((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT BETWEEN (CASE t0.c90  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN t0.c90 WHEN rt0.c1 THEN rt0.c0 ELSE '' END) AND ((rt0.c2 IN ())))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, t0;
SELECT ALL rt0.c0, rt0.c1, t0.c90 FROM rt0 CROSS JOIN t0 ON ((((t0.c90 COLLATE NOCASE)AND(((NULL) NOT BETWEEN (x'') AND (rt0.c2)))))AND(((rt0.c0)>>(rt0.c0)))) GROUP BY rt0.c0, rt0.c1, t0.c90;
SELECT rt0.c0, rt0.c1, t0.c90 FROM rt0 CROSS JOIN t0 ON ((((t0.c90 COLLATE NOCASE)AND(((NULL) NOT BETWEEN (x'') AND (rt0.c2)))))AND(((rt0.c0)>>(rt0.c0)))) WHERE (((json_array(rt0.c0, rt0.c0)) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c1))) AND (((rt0.c1) BETWEEN (-6.6628314E7) AND (t0.c90))))) GROUP BY rt0.c0, rt0.c1, t0.c90 UNION SELECT ALL rt0.c0, rt0.c1, t0.c90 FROM rt0 CROSS JOIN t0 ON ((((t0.c90 COLLATE NOCASE)AND(((NULL) NOT BETWEEN (x'') AND (rt0.c2)))))AND(((rt0.c0)>>(rt0.c0)))) WHERE ((NOT (((json_array(rt0.c0, rt0.c0)) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c1))) AND (((rt0.c1) BETWEEN (-6.6628314E7) AND (t0.c90))))))) GROUP BY rt0.c0, rt0.c1, t0.c90 UNION SELECT rt0.c0, rt0.c1, t0.c90 FROM rt0 CROSS JOIN t0 ON ((((t0.c90 COLLATE NOCASE)AND(((NULL) NOT BETWEEN (x'') AND (rt0.c2)))))AND(((rt0.c0)>>(rt0.c0)))) WHERE (((((json_array(rt0.c0, rt0.c0)) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c1))) AND (((rt0.c1) BETWEEN (-6.6628314E7) AND (t0.c90))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, t0.c90;
SELECT ALL rt0.c0, rt0.c1, t0.c90 FROM rt0 CROSS JOIN t0 ON ((((t0.c90 COLLATE NOCASE)AND(((NULL) NOT BETWEEN (x'') AND (rt0.c2)))))AND(((rt0.c0)>>(rt0.c0)))) GROUP BY rt0.c0, rt0.c1, t0.c90;
SELECT rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING CAST(GROUP_CONCAT(MAX(GROUP_CONCAT(GROUP_CONCAT('-1424895636')))) AS NUMERIC) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (CAST(GROUP_CONCAT(MAX(GROUP_CONCAT(GROUP_CONCAT('-1424895636')))) AS NUMERIC))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((CAST(GROUP_CONCAT(MAX(GROUP_CONCAT(GROUP_CONCAT('-1424895636')))) AS NUMERIC)) ISNULL);
SELECT t0.c90 FROM t0;
SELECT ALL t0.c90 FROM t0 WHERE (CASE WHEN (((t0.c90)) BETWEEN ((t0.c90)) AND ((t0.c90))) THEN ((t0.c90)<=(t0.c90)) WHEN 0.7932672489721468 THEN (t0.c90 IN ()) WHEN DATETIME(t0.c90, 0.31945146692626414, t0.c90, t0.c90, t0.c90) THEN (((t0.c90, t0.c90, x'')) NOT BETWEEN ((t0.c90, t0.c90, t0.c90)) AND ((t0.c90, t0.c90, t0.c90))) WHEN ((((t0.c90)OR(t0.c90)))AND(t0.c90)) THEN ((t0.c90)IS NOT(t0.c90)) WHEN (~ (t0.c90)) THEN ((((t0.c90)OR(t0.c90)))OR(t0.c90)) ELSE ((t0.c90) IS FALSE) END) UNION ALL SELECT t0.c90 FROM t0 WHERE ((NOT (CASE WHEN (((t0.c90)) BETWEEN ((t0.c90)) AND ((t0.c90))) THEN ((t0.c90)<=(t0.c90)) WHEN 0.7932672489721468 THEN (t0.c90 IN ()) WHEN DATETIME(t0.c90, 0.31945146692626414, t0.c90, t0.c90, t0.c90) THEN (((t0.c90, t0.c90, x'')) NOT BETWEEN ((t0.c90, t0.c90, t0.c90)) AND ((t0.c90, t0.c90, t0.c90))) WHEN ((((t0.c90)OR(t0.c90)))AND(t0.c90)) THEN ((t0.c90)IS NOT(t0.c90)) WHEN (~ (t0.c90)) THEN ((((t0.c90)OR(t0.c90)))OR(t0.c90)) ELSE ((t0.c90) IS FALSE) END))) UNION ALL SELECT ALL t0.c90 FROM t0 WHERE (((CASE WHEN (((t0.c90)) BETWEEN ((t0.c90)) AND ((t0.c90))) THEN ((t0.c90)<=(t0.c90)) WHEN 0.7932672489721468 THEN (t0.c90 IN ()) WHEN DATETIME(t0.c90, 0.31945146692626414, t0.c90, t0.c90, t0.c90) THEN (((t0.c90, t0.c90, x'')) NOT BETWEEN ((t0.c90, t0.c90, t0.c90)) AND ((t0.c90, t0.c90, t0.c90))) WHEN ((((t0.c90)OR(t0.c90)))AND(t0.c90)) THEN ((t0.c90)IS NOT(t0.c90)) WHEN (~ (t0.c90)) THEN ((((t0.c90)OR(t0.c90)))OR(t0.c90)) ELSE ((t0.c90) IS FALSE) END) ISNULL));
SELECT t0.c90 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST((NOT (t0.c90)) AS BLOB)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST((NOT (t0.c90)) AS BLOB)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST((NOT (t0.c90)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((1.661911346E9)*(rt0.c0))) BETWEEN (rt0.c0) AND (rt0.c1 COLLATE NOCASE))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((1.661911346E9)*(rt0.c0))) BETWEEN (rt0.c0) AND (rt0.c1 COLLATE NOCASE))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((1.661911346E9)*(rt0.c0))) BETWEEN (rt0.c0) AND (rt0.c1 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, t0.c90 FROM t0, rt0 GROUP BY rt0.c1, t0.c90;
SELECT ALL rt0.c1, t0.c90 FROM t0, rt0 GROUP BY rt0.c1, t0.c90 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, t0.c90 FROM t0, rt0 GROUP BY rt0.c1, t0.c90 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, t0.c90 FROM t0, rt0 GROUP BY rt0.c1, t0.c90 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, t0.c90 FROM t0, rt0 GROUP BY rt0.c1, t0.c90;
SELECT ALL rt0.c1, t0.c90 FROM t0, rt0 GROUP BY rt0.c1, t0.c90 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, t0.c90 FROM t0, rt0 GROUP BY rt0.c1, t0.c90 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, t0.c90 FROM t0, rt0 GROUP BY rt0.c1, t0.c90 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, t0.c90 FROM t0, rt0 GROUP BY rt0.c1, t0.c90;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (x'c481') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (x'c481'))) UNION ALL SELECT ALL * FROM rt0 WHERE (((x'c481') ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c1)&(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c1)&(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c1)&(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM t0 CROSS JOIN rt0 ON json_patch(rt0.c2 COLLATE RTRIM, (rt0.c0 IN ())) GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0 CROSS JOIN rt0 ON json_patch(rt0.c2 COLLATE RTRIM, (rt0.c0 IN ())) WHERE (TRIM(rtreenode(t0.c90, rt0.c2))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM t0 CROSS JOIN rt0 ON json_patch(rt0.c2 COLLATE RTRIM, (rt0.c0 IN ())) WHERE ((NOT (TRIM(rtreenode(t0.c90, rt0.c2))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM t0 CROSS JOIN rt0 ON json_patch(rt0.c2 COLLATE RTRIM, (rt0.c0 IN ())) WHERE (((TRIM(rtreenode(t0.c90, rt0.c2))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0 CROSS JOIN rt0 ON json_patch(rt0.c2 COLLATE RTRIM, (rt0.c0 IN ())) GROUP BY rt0.c2;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((GROUP_CONCAT(t0.c90))*(MIN(MIN(t0.c90)) COLLATE RTRIM)) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (((GROUP_CONCAT(t0.c90))*(MIN(MIN(t0.c90)) COLLATE RTRIM)))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((((GROUP_CONCAT(t0.c90))*(MIN(MIN(t0.c90)) COLLATE RTRIM))) ISNULL);
SELECT * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE ((('0.9794720914170213') BETWEEN (rt0.c0) AND (t0.c90 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT ((('0.9794720914170213') BETWEEN (rt0.c0) AND (t0.c90 COLLATE NOCASE))))) UNION ALL SELECT * FROM t0, rt0 WHERE ((((('0.9794720914170213') BETWEEN (rt0.c0) AND (t0.c90 COLLATE NOCASE))) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE ((((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, NULL)) AND ((NULL, t0.c90, '')))) NOTNULL)) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT ((((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, NULL)) AND ((NULL, t0.c90, '')))) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((((((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, NULL)) AND ((NULL, t0.c90, '')))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 WHERE (CAST(((rt0.c2)=(0.955294322118149)) AS REAL)) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 WHERE ((NOT (CAST(((rt0.c2)=(0.955294322118149)) AS REAL)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 WHERE (((CAST(((rt0.c2)=(0.955294322118149)) AS REAL)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL t0.c90, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON ((((t0.c90) IS TRUE)) NOTNULL) GROUP BY t0.c90, rt0.c2;
SELECT t0.c90, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON ((((t0.c90) IS TRUE)) NOTNULL) GROUP BY t0.c90, rt0.c2 HAVING CAST(((COUNT(*))>>(rt0.c0)) AS TEXT) UNION ALL SELECT ALL t0.c90, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON ((((t0.c90) IS TRUE)) NOTNULL) GROUP BY t0.c90, rt0.c2 HAVING (NOT (CAST(((COUNT(*))>>(rt0.c0)) AS TEXT))) UNION ALL SELECT ALL t0.c90, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON ((((t0.c90) IS TRUE)) NOTNULL) GROUP BY t0.c90, rt0.c2 HAVING ((CAST(((COUNT(*))>>(rt0.c0)) AS TEXT)) ISNULL);
SELECT ALL t0.c90, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON ((((t0.c90) IS TRUE)) NOTNULL) GROUP BY t0.c90, rt0.c2;
SELECT t0.c90, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON ((((t0.c90) IS TRUE)) NOTNULL) GROUP BY t0.c90, rt0.c2 HAVING CAST(((COUNT(*))>>(rt0.c0)) AS TEXT) UNION ALL SELECT ALL t0.c90, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON ((((t0.c90) IS TRUE)) NOTNULL) GROUP BY t0.c90, rt0.c2 HAVING (NOT (CAST(((COUNT(*))>>(rt0.c0)) AS TEXT))) UNION ALL SELECT ALL t0.c90, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON ((((t0.c90) IS TRUE)) NOTNULL) GROUP BY t0.c90, rt0.c2 HAVING ((CAST(((COUNT(*))>>(rt0.c0)) AS TEXT)) ISNULL);
SELECT ALL t0.c90, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON ((((t0.c90) IS TRUE)) NOTNULL) GROUP BY t0.c90, rt0.c2;
SELECT ALL * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE ((((t0.c90 IN ()))==(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT ((((t0.c90 IN ()))==(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((((((t0.c90 IN ()))==(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT t0.c90, rt0.c1, rt0.c0 FROM t0 CROSS JOIN rt0 ON ((((((rt0.c2)OR(rt0.c0)))AND(t0.c90)))+((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))));
SELECT DISTINCT t0.c90, rt0.c1, rt0.c0 FROM t0 CROSS JOIN rt0 ON ((((((rt0.c2)OR(rt0.c0)))AND(t0.c90)))+((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) WHERE (CAST((((rt0.c1, t0.c90, t0.c90)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, t0.c90, rt0.c0))) AS REAL)) UNION SELECT DISTINCT t0.c90, rt0.c1, rt0.c0 FROM t0 CROSS JOIN rt0 ON ((((((rt0.c2)OR(rt0.c0)))AND(t0.c90)))+((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) WHERE ((NOT (CAST((((rt0.c1, t0.c90, t0.c90)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, t0.c90, rt0.c0))) AS REAL)))) UNION SELECT DISTINCT t0.c90, rt0.c1, rt0.c0 FROM t0 CROSS JOIN rt0 ON ((((((rt0.c2)OR(rt0.c0)))AND(t0.c90)))+((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) WHERE (((CAST((((rt0.c1, t0.c90, t0.c90)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, t0.c90, rt0.c0))) AS REAL)) ISNULL));
SELECT DISTINCT t0.c90, rt0.c1, rt0.c0 FROM t0 CROSS JOIN rt0 ON ((((((rt0.c2)OR(rt0.c0)))AND(t0.c90)))+((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN t0 WHERE ((((((x'')) NOT BETWEEN ((t0.c90)) AND ((rt0.c1))))OR((rt0.c1 IN (t0.c90))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN t0 WHERE ((NOT ((((((x'')) NOT BETWEEN ((t0.c90)) AND ((rt0.c1))))OR((rt0.c1 IN (t0.c90))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN t0 WHERE ((((((((x'')) NOT BETWEEN ((t0.c90)) AND ((rt0.c1))))OR((rt0.c1 IN (t0.c90))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING MAX(GROUP_CONCAT(t0.c90)) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (MAX(GROUP_CONCAT(t0.c90)))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((MAX(GROUP_CONCAT(t0.c90))) ISNULL);
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (((((((t0.c90, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((t0.c90, t0.c90, rt0.c1))))OR(rt0.c1 COLLATE BINARY)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c90))));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (((((((t0.c90, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((t0.c90, t0.c90, rt0.c1))))OR(rt0.c1 COLLATE BINARY)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c90)))) WHERE (((NULLIF(rt0.c1, ',]'))+(((t0.c90)<=(rt0.c2))))) UNION ALL SELECT * FROM t0 FULL OUTER JOIN rt0 ON (((((((t0.c90, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((t0.c90, t0.c90, rt0.c1))))OR(rt0.c1 COLLATE BINARY)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c90)))) WHERE ((NOT (((NULLIF(rt0.c1, ',]'))+(((t0.c90)<=(rt0.c2))))))) UNION ALL SELECT * FROM t0 FULL OUTER JOIN rt0 ON (((((((t0.c90, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((t0.c90, t0.c90, rt0.c1))))OR(rt0.c1 COLLATE BINARY)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c90)))) WHERE (((((NULLIF(rt0.c1, ',]'))+(((t0.c90)<=(rt0.c2))))) ISNULL));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (((((((t0.c90, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((t0.c90, t0.c90, rt0.c1))))OR(rt0.c1 COLLATE BINARY)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c90))));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c90) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c90))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c90) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 WHERE (((((rt0.c1)<(t0.c90)))GLOB(((rt0.c2)|(t0.c90))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((NOT (((((rt0.c1)<(t0.c90)))GLOB(((rt0.c2)|(t0.c90))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 WHERE (((((((rt0.c1)<(t0.c90)))GLOB(((rt0.c2)|(t0.c90))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c2, t0.c90, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c90, rt0.c0;
SELECT rt0.c2, t0.c90, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c90, rt0.c0 HAVING MAX(SUM('-1825448686')) UNION ALL SELECT rt0.c2, t0.c90, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c90, rt0.c0 HAVING (NOT (MAX(SUM('-1825448686')))) UNION ALL SELECT rt0.c2, t0.c90, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c90, rt0.c0 HAVING ((MAX(SUM('-1825448686'))) ISNULL);
SELECT ALL t0.c90, rt0.c2, rt0.c0 FROM t0, rt0;
SELECT t0.c90, rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((((t0.c90, rt0.c0, 0.04355161516370387)) NOT BETWEEN ((t0.c90, CAST(rt0.c1 AS REAL), ((rt0.c2) BETWEEN (t0.c90) AND (rt0.c2)))) AND ((((rt0.c0)=('FALSE')), ((0.8873864211228631)GLOB(rt0.c0)), ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))))) UNION ALL SELECT t0.c90, rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((NOT ((((t0.c90, rt0.c0, 0.04355161516370387)) NOT BETWEEN ((t0.c90, CAST(rt0.c1 AS REAL), ((rt0.c2) BETWEEN (t0.c90) AND (rt0.c2)))) AND ((((rt0.c0)=('FALSE')), ((0.8873864211228631)GLOB(rt0.c0)), ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))))))) UNION ALL SELECT t0.c90, rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((((((t0.c90, rt0.c0, 0.04355161516370387)) NOT BETWEEN ((t0.c90, CAST(rt0.c1 AS REAL), ((rt0.c2) BETWEEN (t0.c90) AND (rt0.c2)))) AND ((((rt0.c0)=('FALSE')), ((0.8873864211228631)GLOB(rt0.c0)), ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))))) ISNULL));
SELECT ALL t0.c90, rt0.c2, rt0.c0 FROM t0, rt0;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)>>(rt0.c0))) NOTNULL);
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)>>(rt0.c0))) NOTNULL) WHERE (((((rt0.c0)IS NOT('805780823')))IS NOT(SQLITE_COMPILEOPTION_GET(rt0.c1)))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)>>(rt0.c0))) NOTNULL) WHERE ((NOT (((((rt0.c0)IS NOT('805780823')))IS NOT(SQLITE_COMPILEOPTION_GET(rt0.c1)))))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)>>(rt0.c0))) NOTNULL) WHERE (((((((rt0.c0)IS NOT('805780823')))IS NOT(SQLITE_COMPILEOPTION_GET(rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)>>(rt0.c0))) NOTNULL);
SELECT ALL t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c90, rt0.c2, rt0.c1, rt0.c0;
SELECT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 WHERE (NULLIF((((rt0.c2))<>((NULL))), ((-588051621)||(rt0.c2)))) GROUP BY t0.c90, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((NOT (NULLIF((((rt0.c2))!=((NULL))), ((-588051621)||(rt0.c2)))))) GROUP BY t0.c90, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 WHERE (((NULLIF((((rt0.c2))!=((NULL))), ((-588051621)||(rt0.c2)))) ISNULL)) GROUP BY t0.c90, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c90, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING COUNT(*) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING COUNT(*) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE (((rtreenode(rt0.c2, t0.c90))IS NOT(TRIM(DISTINCT 'ZQ', rt0.c2)))) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (((rtreenode(rt0.c2, t0.c90))IS NOT(TRIM(DISTINCT 'ZQ', rt0.c2)))))) UNION ALL SELECT * FROM rt0, t0 WHERE (((((rtreenode(rt0.c2, t0.c90))IS NOT(TRIM(DISTINCT 'ZQ', rt0.c2)))) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED(CASE WHEN rt0.c0 THEN rt0.c1 END)) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (SQLITE_COMPILEOPTION_USED(CASE WHEN rt0.c0 THEN rt0.c1 END)))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((SQLITE_COMPILEOPTION_USED(CASE WHEN rt0.c0 THEN rt0.c1 END)) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((rt0.c2 IN ()) COLLATE BINARY))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c2 IN ()) COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((((t0.c90)*(rt0.c0))) IS FALSE) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((((t0.c90)*(rt0.c0))) IS FALSE) GROUP BY rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(COUNT(rt0.c2)))!=(load_extension(TOTAL(MAX(AVG(COUNT(*))))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((((t0.c90)*(rt0.c0))) IS FALSE) GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((GROUP_CONCAT(COUNT(rt0.c2)))!=(load_extension(TOTAL(MAX(AVG(COUNT(*))))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((((t0.c90)*(rt0.c0))) IS FALSE) GROUP BY rt0.c2, rt0.c0 HAVING ((((GROUP_CONCAT(COUNT(rt0.c2)))!=(load_extension(TOTAL(MAX(AVG(COUNT(*)))))))) ISNULL);
SELECT ALL rt0.c2 FROM rt0, t0;
SELECT ALL rt0.c2 FROM rt0, t0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END)IS NOT(((t0.c90)<=(rt0.c2))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, t0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END)IS NOT(((t0.c90)<=(rt0.c2))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, t0 WHERE (((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END)IS NOT(((t0.c90)<=(rt0.c2))))) ISNULL));
SELECT ALL rt0.c2 FROM rt0, t0;
SELECT DISTINCT t0.c90 FROM t0;
SELECT DISTINCT t0.c90 FROM t0 WHERE ((((- (t0.c90)))>(((t0.c90) NOT BETWEEN (t0.c90) AND (t0.c90))))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE ((NOT ((((- (t0.c90)))>(((t0.c90) NOT BETWEEN (t0.c90) AND (t0.c90))))))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE ((((((- (t0.c90)))>(((t0.c90) NOT BETWEEN (t0.c90) AND (t0.c90))))) ISNULL));
SELECT DISTINCT t0.c90 FROM t0;
SELECT rt0.c0, rt0.c1 FROM rt0 NOT INDEXED, t0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0, t0 WHERE (((((t0.c90)GLOB(rt0.c2))) BETWEEN ((('i,U')*(t0.c90))) AND (rt0.c1 COLLATE RTRIM))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0, t0 WHERE ((NOT (((((t0.c90)GLOB(rt0.c2))) BETWEEN ((('i,U')*(t0.c90))) AND (rt0.c1 COLLATE RTRIM))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0, t0 WHERE (((((((t0.c90)GLOB(rt0.c2))) BETWEEN ((('i,U')*(t0.c90))) AND (rt0.c1 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 NOT INDEXED, t0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING SUM(TOTAL(TOTAL(COUNT(*))) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (SUM(TOTAL(TOTAL(COUNT(*))) COLLATE NOCASE))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((SUM(TOTAL(TOTAL(COUNT(*))) COLLATE NOCASE)) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ('j[rKT') UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ('j[rKT'))) UNION ALL SELECT * FROM t0 WHERE ((('j[rKT') ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c90 FROM t0;
SELECT DISTINCT t0.c90 FROM t0 WHERE (((((CAST(t0.c90 AS REAL))AND(TYPEOF(DISTINCT t0.c90))))AND(t0.c90 COLLATE RTRIM))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE ((NOT (((((CAST(t0.c90 AS REAL))AND(TYPEOF(DISTINCT t0.c90))))AND(t0.c90 COLLATE RTRIM))))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE (((((((CAST(t0.c90 AS REAL))AND(TYPEOF(DISTINCT t0.c90))))AND(t0.c90 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT t0.c90 FROM t0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((+ ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND (('805780823')))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((+ ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND (('805780823')))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((+ ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND (('805780823')))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c1 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c1 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c1 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c1 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c1 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c1 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c1 GROUP BY rt0.c0;
SELECT ALL * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE ((- (((((rt0.c0)OR(rt0.c1)))AND(rt0.c0))))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT ((- (((((rt0.c0)OR(rt0.c1)))AND(rt0.c0))))))) UNION ALL SELECT * FROM rt0, t0 WHERE ((((- (((((rt0.c0)OR(rt0.c1)))AND(rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, t0.c90 FROM t0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, t0.c90 FROM t0, rt0 WHERE (t0.c90) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, t0.c90 FROM t0, rt0 WHERE ((NOT (t0.c90))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, t0.c90 FROM t0, rt0 WHERE (((t0.c90) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, t0.c90 FROM t0, rt0;
SELECT ALL rt0.c1, t0.c90, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c90, rt0.c0;
SELECT rt0.c1, t0.c90, rt0.c0 FROM rt0, t0 WHERE (((JULIANDAY(rt0.c1, rt0.c2, rt0.c1, x'', x'', rt0.c1, t0.c90))<<(CAST(rt0.c2 AS INTEGER)))) GROUP BY rt0.c1, t0.c90, rt0.c0 UNION SELECT rt0.c1, t0.c90, rt0.c0 FROM rt0, t0 WHERE ((NOT (((JULIANDAY(rt0.c1, rt0.c2, rt0.c1, x'', x'', rt0.c1, t0.c90))<<(CAST(rt0.c2 AS INTEGER)))))) GROUP BY rt0.c1, t0.c90, rt0.c0 UNION SELECT ALL rt0.c1, t0.c90, rt0.c0 FROM rt0, t0 WHERE (((((JULIANDAY(rt0.c1, rt0.c2, rt0.c1, x'', x'', rt0.c1, t0.c90))<<(CAST(rt0.c2 AS INTEGER)))) ISNULL)) GROUP BY rt0.c1, t0.c90, rt0.c0;
SELECT ALL rt0.c1, t0.c90, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c90, rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING SUM(SQLITE_COMPILEOPTION_USED(rt0.c1)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (SUM(SQLITE_COMPILEOPTION_USED(rt0.c1)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((SUM(SQLITE_COMPILEOPTION_USED(rt0.c1))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING SUM(SQLITE_COMPILEOPTION_USED(rt0.c1)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (SUM(SQLITE_COMPILEOPTION_USED(rt0.c1)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((SUM(SQLITE_COMPILEOPTION_USED(rt0.c1))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM t0, rt0;
SELECT ALL rt0.c0 FROM t0, rt0 WHERE (rt0.c1 COLLATE NOCASE) UNION ALL SELECT ALL rt0.c0 FROM t0, rt0 WHERE ((NOT (rt0.c1 COLLATE NOCASE))) UNION ALL SELECT rt0.c0 FROM t0, rt0 WHERE (((rt0.c1 COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c0 FROM t0, rt0;
SELECT DISTINCT t0.c90 FROM t0, rt0;
SELECT DISTINCT t0.c90 FROM t0, rt0 WHERE ((+ ((- (rt0.c0))))) UNION SELECT DISTINCT t0.c90 FROM t0, rt0 WHERE ((NOT ((+ ((- (rt0.c0))))))) UNION SELECT DISTINCT t0.c90 FROM t0, rt0 WHERE ((((+ ((- (rt0.c0))))) ISNULL));
SELECT DISTINCT t0.c90 FROM t0, rt0;
SELECT ALL t0.c90 FROM rt0 CROSS JOIN t0 ON CAST(rt0.c2 COLLATE NOCASE AS NUMERIC) GROUP BY t0.c90;
SELECT t0.c90 FROM rt0 CROSS JOIN t0 ON CAST(rt0.c2 COLLATE NOCASE AS NUMERIC) WHERE (((((rt0.c2)IS(rt0.c0))) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (((t0.c90)LIKE(rt0.c0))))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM rt0 CROSS JOIN t0 ON CAST(rt0.c2 COLLATE NOCASE AS NUMERIC) WHERE ((NOT (((((rt0.c2)IS(rt0.c0))) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (((t0.c90)LIKE(rt0.c0))))))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM rt0 CROSS JOIN t0 ON CAST(rt0.c2 COLLATE NOCASE AS NUMERIC) WHERE (((((((rt0.c2)IS(rt0.c0))) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (((t0.c90)LIKE(rt0.c0))))) ISNULL)) GROUP BY t0.c90;
SELECT ALL t0.c90 FROM rt0 CROSS JOIN t0 ON CAST(rt0.c2 COLLATE NOCASE AS NUMERIC) GROUP BY t0.c90;
SELECT rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1 HAVING MAX(SUM(rt0.c2)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MAX(SUM(rt0.c2)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1 HAVING ((MAX(SUM(rt0.c2))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((GLOB(rt0.c0, rt0.c2))>>((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((GLOB(rt0.c0, rt0.c2))>>((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((GLOB(rt0.c0, rt0.c2))>>((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((CAST(rt0.c0 AS TEXT)) NOTNULL)) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((CAST(rt0.c0 AS TEXT)) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((CAST(rt0.c0 AS TEXT)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 WHERE ('}q3鶈BH뾌q') GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM t0 WHERE ((NOT ('}q3鶈BH뾌q'))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE ((('}q3鶈BH뾌q') ISNULL)) GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM t0, rt0 GROUP BY rt0.c0 HAVING AVG(SUM(t0.c90)) UNION ALL SELECT ALL rt0.c0 FROM t0, rt0 GROUP BY rt0.c0 HAVING (NOT (AVG(SUM(t0.c90)))) UNION ALL SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0 HAVING ((AVG(SUM(t0.c90))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((CAST(t0.c90 AS TEXT) IN ())) UNION ALL SELECT * FROM t0 WHERE ((NOT ((CAST(t0.c90 AS TEXT) IN ())))) UNION ALL SELECT ALL * FROM t0 WHERE ((((CAST(t0.c90 AS TEXT) IN ())) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c90 FROM t0;
SELECT DISTINCT t0.c90 FROM t0 WHERE (((((t0.c90)<=(t0.c90))) BETWEEN (((((t0.c90)AND(t0.c90)))AND(t0.c90))) AND (((t0.c90) NOT NULL)))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE ((NOT (((((t0.c90)<=(t0.c90))) BETWEEN (((((t0.c90)AND(t0.c90)))AND(t0.c90))) AND (((t0.c90) NOT NULL)))))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE (((((((t0.c90)<=(t0.c90))) BETWEEN (((((t0.c90)AND(t0.c90)))AND(t0.c90))) AND (((t0.c90) NOT NULL)))) ISNULL));
SELECT DISTINCT t0.c90 FROM t0;
SELECT rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, t0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))<=(((rt0.c1) NOT NULL)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0, t0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))<=(((rt0.c1) NOT NULL)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0, t0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))<=(((rt0.c1) NOT NULL)))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL t0.c90, rt0.c1 FROM rt0, t0 GROUP BY t0.c90, rt0.c1;
SELECT t0.c90, rt0.c1 FROM rt0, t0 GROUP BY t0.c90, rt0.c1 HAVING CAST(TOTAL(rt0.c2) AS INTEGER) UNION ALL SELECT t0.c90, rt0.c1 FROM rt0, t0 GROUP BY t0.c90, rt0.c1 HAVING (NOT (CAST(TOTAL(rt0.c2) AS INTEGER))) UNION ALL SELECT ALL t0.c90, rt0.c1 FROM rt0, t0 GROUP BY t0.c90, rt0.c1 HAVING ((CAST(TOTAL(rt0.c2) AS INTEGER)) ISNULL);
SELECT ALL t0.c90, rt0.c1 FROM rt0, t0 GROUP BY t0.c90, rt0.c1;
SELECT t0.c90, rt0.c1 FROM rt0, t0 GROUP BY t0.c90, rt0.c1 HAVING CAST(TOTAL(rt0.c2) AS INTEGER) UNION ALL SELECT t0.c90, rt0.c1 FROM rt0, t0 GROUP BY t0.c90, rt0.c1 HAVING (NOT (CAST(TOTAL(rt0.c2) AS INTEGER))) UNION ALL SELECT ALL t0.c90, rt0.c1 FROM rt0, t0 GROUP BY t0.c90, rt0.c1 HAVING ((CAST(TOTAL(rt0.c2) AS INTEGER)) ISNULL);
SELECT ALL t0.c90, rt0.c1 FROM rt0, t0 GROUP BY t0.c90, rt0.c1;
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c2 END) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) AND ((((rt0.c0, rt0.c1, rt0.c2))>=((rt0.c2, rt0.c2, rt0.c2)))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c2 END) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) AND ((((rt0.c0, rt0.c1, rt0.c2))>=((rt0.c2, rt0.c2, rt0.c2)))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c2 END) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) AND ((((rt0.c0, rt0.c1, rt0.c2))>=((rt0.c2, rt0.c2, rt0.c2)))))) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT t0.c90, rt0.c1 FROM rt0, t0;
SELECT DISTINCT t0.c90, rt0.c1 FROM rt0, t0 WHERE (CASE -1.424895636E9  WHEN (t0.c90 IN ()) THEN ((t0.c90) NOT BETWEEN (x'') AND (rt0.c0)) ELSE (t0.c90 IN ()) END) UNION SELECT DISTINCT t0.c90, rt0.c1 FROM rt0, t0 WHERE ((NOT (CASE -1.424895636E9  WHEN (t0.c90 IN ()) THEN ((t0.c90) NOT BETWEEN (x'') AND (rt0.c0)) ELSE (t0.c90 IN ()) END))) UNION SELECT DISTINCT t0.c90, rt0.c1 FROM rt0, t0 WHERE (((CASE -1.424895636E9  WHEN (t0.c90 IN ()) THEN ((t0.c90) NOT BETWEEN (x'') AND (rt0.c0)) ELSE (t0.c90 IN ()) END) ISNULL));
SELECT DISTINCT t0.c90, rt0.c1 FROM rt0, t0;
SELECT ALL t0.c90 FROM t0 INDEXED BY i58 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING (TOTAL(t0.c90) IN ((NOT (t0.c90)), ((t0.c90)IS(TOTAL(GROUP_CONCAT(COUNT(t0.c90))))))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT ((TOTAL(t0.c90) IN ((NOT (t0.c90)), ((t0.c90)IS(TOTAL(GROUP_CONCAT(COUNT(t0.c90))))))))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (((TOTAL(t0.c90) IN ((NOT (t0.c90)), ((t0.c90)IS(TOTAL(GROUP_CONCAT(COUNT(t0.c90)))))))) ISNULL);
SELECT ALL * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE ('_C') UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT ('_C'))) UNION ALL SELECT * FROM t0, rt0 WHERE ((('_C') ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c90) NOT BETWEEN (t0.c90) AND (t0.c90)))>=(((t0.c90) NOT BETWEEN ('589338802') AND (t0.c90))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c90) NOT BETWEEN (t0.c90) AND (t0.c90)))>=(((t0.c90) NOT BETWEEN ('589338802') AND (t0.c90))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c90) NOT BETWEEN (t0.c90) AND (t0.c90)))>=(((t0.c90) NOT BETWEEN ('589338802') AND (t0.c90))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c1, t0.c90, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, t0.c90, rt0.c2;
SELECT ALL rt0.c1, t0.c90, rt0.c2 FROM t0, rt0 WHERE (CASE WHEN SQLITE_COMPILEOPTION_GET(rt0.c1) THEN ((rt0.c0) IS FALSE) ELSE x'' END) GROUP BY rt0.c1, t0.c90, rt0.c2 UNION SELECT ALL rt0.c1, t0.c90, rt0.c2 FROM t0, rt0 WHERE ((NOT (CASE WHEN SQLITE_COMPILEOPTION_GET(rt0.c1) THEN ((rt0.c0) IS FALSE) ELSE x'' END))) GROUP BY rt0.c1, t0.c90, rt0.c2 UNION SELECT rt0.c1, t0.c90, rt0.c2 FROM t0, rt0 WHERE (((CASE WHEN SQLITE_COMPILEOPTION_GET(rt0.c1) THEN ((rt0.c0) IS FALSE) ELSE x'' END) ISNULL)) GROUP BY rt0.c1, t0.c90, rt0.c2;
SELECT ALL rt0.c1, t0.c90, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, t0.c90, rt0.c2;
SELECT rt0.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON CASE (((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((t0.c90, t0.c90, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c2)))  WHEN NULL THEN x'' END GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON CASE (((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((t0.c90, t0.c90, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c2)))  WHEN NULL THEN x'' END GROUP BY rt0.c1, rt0.c0 HAVING ((((GROUP_CONCAT(SUM(COUNT(*))))AND((~ (rt0.c2)))))AND(((rt0.c0)/(rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON CASE (((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((t0.c90, t0.c90, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c2)))  WHEN NULL THEN x'' END GROUP BY rt0.c1, rt0.c0 HAVING (NOT (((((GROUP_CONCAT(SUM(COUNT(*))))AND((~ (rt0.c2)))))AND(((rt0.c0)/(rt0.c0)))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON CASE (((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((t0.c90, t0.c90, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c2)))  WHEN NULL THEN x'' END GROUP BY rt0.c1, rt0.c0 HAVING ((((((GROUP_CONCAT(SUM(COUNT(*))))AND((~ (rt0.c2)))))AND(((rt0.c0)/(rt0.c0))))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 CROSS JOIN t0 ON ((((-6.6628314E7)OR((+ (rt0.c0)))))AND(rt0.c0 COLLATE RTRIM));
SELECT ALL rt0.c1 FROM rt0 CROSS JOIN t0 ON ((((-6.6628314E7)OR((+ (rt0.c0)))))AND(rt0.c0 COLLATE RTRIM)) WHERE (((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))<=(((rt0.c2)LIKE(t0.c90))))) UNION ALL SELECT rt0.c1 FROM rt0 CROSS JOIN t0 ON ((((-6.6628314E7)OR((+ (rt0.c0)))))AND(rt0.c0 COLLATE RTRIM)) WHERE ((NOT (((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))<=(((rt0.c2)LIKE(t0.c90))))))) UNION ALL SELECT rt0.c1 FROM rt0 CROSS JOIN t0 ON ((((-6.6628314E7)OR((+ (rt0.c0)))))AND(rt0.c0 COLLATE RTRIM)) WHERE (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))<=(((rt0.c2)LIKE(t0.c90))))) ISNULL));
SELECT ALL rt0.c1 FROM rt0 CROSS JOIN t0 ON ((((-6.6628314E7)OR((+ (rt0.c0)))))AND(rt0.c0 COLLATE RTRIM));
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((((((((t0.c90 COLLATE RTRIM)OR(CAST(rt0.c1 AS NUMERIC))))OR((+ (rt0.c0)))))AND(CAST(rt0.c1 AS NUMERIC))))AND((t0.c90 IN (rt0.c0, rt0.c0))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((((((((t0.c90 COLLATE RTRIM)OR(CAST(rt0.c1 AS NUMERIC))))OR((+ (rt0.c0)))))AND(CAST(rt0.c1 AS NUMERIC))))AND((t0.c90 IN (rt0.c0, rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((((((((t0.c90 COLLATE RTRIM)OR(CAST(rt0.c1 AS NUMERIC))))OR((+ (rt0.c0)))))AND(CAST(rt0.c1 AS NUMERIC))))AND((t0.c90 IN (rt0.c0, rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c0 GROUP BY rt0.c0, rt0.c2 HAVING COUNT(((AVG(rt0.c2))AND(rt0.c2))) UNION ALL SELECT rt0.c0, rt0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (COUNT(((AVG(rt0.c2))AND(rt0.c2))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT(((AVG(rt0.c2))AND(rt0.c2)))) ISNULL);
SELECT * FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c2) BETWEEN (t0.c90) AND (rt0.c2)) IN ());
SELECT * FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c2) BETWEEN (t0.c90) AND (rt0.c2)) IN ()) WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (t0.c90))) NOT BETWEEN ((+ (rt0.c0))) AND ((- (rt0.c2))))) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c2) BETWEEN (t0.c90) AND (rt0.c2)) IN ()) WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c1) AND (t0.c90))) NOT BETWEEN ((+ (rt0.c0))) AND ((- (rt0.c2))))))) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c2) BETWEEN (t0.c90) AND (rt0.c2)) IN ()) WHERE (((((((rt0.c1) BETWEEN (rt0.c1) AND (t0.c90))) NOT BETWEEN ((+ (rt0.c0))) AND ((- (rt0.c2))))) ISNULL));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c2) BETWEEN (t0.c90) AND (rt0.c2)) IN ());
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ('g1B5黌V	') UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ('g1B5黌V	'))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((('g1B5黌V	') ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT rt0.c0, rt0.c2, t0.c90 FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN (+ (rt0.c2)) THEN CASE 2.053773779E9  WHEN rt0.c1 THEN t0.c90 ELSE rt0.c2 END ELSE rt0.c1 END GROUP BY rt0.c0, rt0.c2, t0.c90;
SELECT rt0.c0, rt0.c2, t0.c90 FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN (+ (rt0.c2)) THEN CASE 2.053773779E9  WHEN rt0.c1 THEN t0.c90 ELSE rt0.c2 END ELSE rt0.c1 END WHERE ((TRIM(rt0.c1) IN (((t0.c90)LIKE(rt0.c2))))) GROUP BY rt0.c0, rt0.c2, t0.c90 UNION SELECT rt0.c0, rt0.c2, t0.c90 FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN (+ (rt0.c2)) THEN CASE 2.053773779E9  WHEN rt0.c1 THEN t0.c90 ELSE rt0.c2 END ELSE rt0.c1 END WHERE ((NOT ((TRIM(rt0.c1) IN (((t0.c90)LIKE(rt0.c2))))))) GROUP BY rt0.c0, rt0.c2, t0.c90 UNION SELECT rt0.c0, rt0.c2, t0.c90 FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN (+ (rt0.c2)) THEN CASE 2.053773779E9  WHEN rt0.c1 THEN t0.c90 ELSE rt0.c2 END ELSE rt0.c1 END WHERE ((((TRIM(rt0.c1) IN (((t0.c90)LIKE(rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, t0.c90;
SELECT rt0.c0, rt0.c2, t0.c90 FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN (+ (rt0.c2)) THEN CASE 2.053773779E9  WHEN rt0.c1 THEN t0.c90 ELSE rt0.c2 END ELSE rt0.c1 END GROUP BY rt0.c0, rt0.c2, t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL t0.c90 FROM t0, rt0;
SELECT t0.c90 FROM t0, rt0 WHERE (LOWER(rt0.c1 COLLATE NOCASE)) UNION ALL SELECT ALL t0.c90 FROM t0, rt0 WHERE ((NOT (LOWER(rt0.c1 COLLATE NOCASE)))) UNION ALL SELECT ALL t0.c90 FROM t0, rt0 WHERE (((LOWER(rt0.c1 COLLATE NOCASE)) ISNULL));
SELECT ALL t0.c90 FROM t0, rt0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (CASE rt0.c1  WHEN t0.c90 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) AND (UNLIKELY(rt0.c1)));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (CASE rt0.c1  WHEN t0.c90 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) AND (UNLIKELY(rt0.c1))) WHERE ((((((((('572302894')AND((((x'0959'))!=((NULL))))))AND(((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))))OR(NULLIF(rt0.c2, rt0.c1))))OR(-209543476))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (CASE rt0.c1  WHEN t0.c90 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) AND (UNLIKELY(rt0.c1))) WHERE ((NOT ((((((((('572302894')AND((((x'0959'))<>((NULL))))))AND(((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))))OR(NULLIF(rt0.c2, rt0.c1))))OR(-209543476))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (CASE rt0.c1  WHEN t0.c90 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) AND (UNLIKELY(rt0.c1))) WHERE ((((((((((('572302894')AND((((x'0959'))<>((NULL))))))AND(((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))))OR(NULLIF(rt0.c2, rt0.c1))))OR(-209543476))) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (CASE rt0.c1  WHEN t0.c90 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) AND (UNLIKELY(rt0.c1)));
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c0))>((rt0.c2)))))<=((json_patch(rt0.c1, rt0.c2))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c0))>((rt0.c2)))))<=((json_patch(rt0.c1, rt0.c2))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((rt0.c0))>((rt0.c2)))))<=((json_patch(rt0.c1, rt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0 HAVING TOTAL(((COUNT(*)) ISNULL)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (TOTAL(((COUNT(*)) ISNULL)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0 HAVING ((TOTAL(((COUNT(*)) ISNULL))) ISNULL);
SELECT ALL MIN(UNLIKELY(((rt0.c1)<=(rt0.c2)))) FROM rt0 ORDER BY CASE WHEN ((rt0.c1)GLOB(rt0.c2)) THEN ((rt0.c1) ISNULL) WHEN ((rt0.c2)&(rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN ((((0.5199862945312311)AND(rt0.c1)))AND(rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) END  NULLS LAST;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (CAST(t0.c90 AS REAL) COLLATE BINARY) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CAST(t0.c90 AS REAL) COLLATE BINARY))) UNION ALL SELECT * FROM t0 WHERE (((CAST(t0.c90 AS REAL) COLLATE BINARY) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2)LIKE(rt0.c2)) AS INTEGER);
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2)LIKE(rt0.c2)) AS INTEGER) WHERE ('1758050973') UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2)LIKE(rt0.c2)) AS INTEGER) WHERE ((NOT ('1758050973'))) UNION SELECT DISTINCT * FROM t0 NOT INDEXED RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2)LIKE(rt0.c2)) AS INTEGER) WHERE ((('1758050973') ISNULL));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2)LIKE(rt0.c2)) AS INTEGER);
SELECT ALL rt0.c2, rt0.c0, rt0.c1, t0.c90 FROM t0 INNER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))) AND ((CASE rt0.c1  WHEN ',]' THEN t0.c90 END))) GROUP BY rt0.c2, rt0.c0, rt0.c1, t0.c90;
SELECT rt0.c2, rt0.c0, rt0.c1, t0.c90 FROM t0 INNER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))) AND ((CASE rt0.c1  WHEN ',]' THEN t0.c90 END))) WHERE (']G&~ꁢ]j?]') GROUP BY rt0.c2, rt0.c0, rt0.c1, t0.c90 UNION SELECT rt0.c2, rt0.c0, rt0.c1, t0.c90 FROM t0 INNER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))) AND ((CASE rt0.c1  WHEN ',]' THEN t0.c90 END))) WHERE ((NOT (']G&~ꁢ]j?]'))) GROUP BY rt0.c2, rt0.c0, rt0.c1, t0.c90 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, t0.c90 FROM t0 INNER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))) AND ((CASE rt0.c1  WHEN ',]' THEN t0.c90 END))) WHERE (((']G&~ꁢ]j?]') ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, t0.c90;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, t0.c90 FROM t0 INNER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))) AND ((CASE rt0.c1  WHEN ',]' THEN t0.c90 END))) GROUP BY rt0.c2, rt0.c0, rt0.c1, t0.c90;
SELECT t0.c90, rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY t0.c90, rt0.c2, rt0.c1;
SELECT t0.c90, rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY t0.c90, rt0.c2, rt0.c1 HAVING COUNT((rt0.c2 IN (t0.c90, rt0.c1))) UNION ALL SELECT t0.c90, rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY t0.c90, rt0.c2, rt0.c1 HAVING (NOT (COUNT((rt0.c2 IN (t0.c90, rt0.c1))))) UNION ALL SELECT t0.c90, rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY t0.c90, rt0.c2, rt0.c1 HAVING ((COUNT((rt0.c2 IN (t0.c90, rt0.c1)))) ISNULL);
SELECT t0.c90, rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY t0.c90, rt0.c2, rt0.c1;
SELECT t0.c90, rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY t0.c90, rt0.c2, rt0.c1 HAVING COUNT((rt0.c2 IN (t0.c90, rt0.c1))) UNION ALL SELECT t0.c90, rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY t0.c90, rt0.c2, rt0.c1 HAVING (NOT (COUNT((rt0.c2 IN (t0.c90, rt0.c1))))) UNION ALL SELECT t0.c90, rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY t0.c90, rt0.c2, rt0.c1 HAVING ((COUNT((rt0.c2 IN (t0.c90, rt0.c1)))) ISNULL);
SELECT t0.c90, rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY t0.c90, rt0.c2, rt0.c1;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))>>(rt0.c1 COLLATE RTRIM))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))>>(rt0.c1 COLLATE RTRIM))))) UNION ALL SELECT * FROM rt0 WHERE (((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))>>(rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((((((((t0.c90 IN ()))AND(((t0.c90)*(t0.c90)))))OR(((t0.c90)%(t0.c90)))))AND(CAST(t0.c90 AS INTEGER))))OR(NULL))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((((((((t0.c90 IN ()))AND(((t0.c90)*(t0.c90)))))OR(((t0.c90)%(t0.c90)))))AND(CAST(t0.c90 AS INTEGER))))OR(NULL))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((((((((t0.c90 IN ()))AND(((t0.c90)*(t0.c90)))))OR(((t0.c90)%(t0.c90)))))AND(CAST(t0.c90 AS INTEGER))))OR(NULL))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c0, rt0.c1, t0.c90, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1, t0.c90, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, t0.c90, rt0.c2 FROM rt0, t0 WHERE (CASE WHEN (((t0.c90, x'', t0.c90)) NOT BETWEEN ((t0.c90, rt0.c0, t0.c90)) AND ((rt0.c1, t0.c90, rt0.c2))) THEN (~ (rt0.c1)) END) GROUP BY rt0.c0, rt0.c1, t0.c90, rt0.c2 UNION SELECT rt0.c0, rt0.c1, t0.c90, rt0.c2 FROM rt0, t0 WHERE ((NOT (CASE WHEN (((t0.c90, x'', t0.c90)) NOT BETWEEN ((t0.c90, rt0.c0, t0.c90)) AND ((rt0.c1, t0.c90, rt0.c2))) THEN (~ (rt0.c1)) END))) GROUP BY rt0.c0, rt0.c1, t0.c90, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, t0.c90, rt0.c2 FROM rt0, t0 WHERE (((CASE WHEN (((t0.c90, x'', t0.c90)) NOT BETWEEN ((t0.c90, rt0.c0, t0.c90)) AND ((rt0.c1, t0.c90, rt0.c2))) THEN (~ (rt0.c1)) END) ISNULL)) GROUP BY rt0.c0, rt0.c1, t0.c90, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, t0.c90, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1, t0.c90, rt0.c2;
SELECT t0.c90, rt0.c0 FROM t0, rt0 GROUP BY t0.c90, rt0.c0;
SELECT ALL t0.c90, rt0.c0 FROM t0, rt0 GROUP BY t0.c90, rt0.c0 HAVING COUNT(SUM(GROUP_CONCAT(rt0.c0))) UNION ALL SELECT ALL t0.c90, rt0.c0 FROM t0, rt0 GROUP BY t0.c90, rt0.c0 HAVING (NOT (COUNT(SUM(GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT t0.c90, rt0.c0 FROM t0 NOT INDEXED, rt0 GROUP BY t0.c90, rt0.c0 HAVING ((COUNT(SUM(GROUP_CONCAT(rt0.c0)))) ISNULL);
SELECT ALL rt0.c1 FROM rt0, t0;
SELECT rt0.c1 FROM rt0, t0 WHERE ('') UNION ALL SELECT ALL rt0.c1 FROM rt0, t0 WHERE ((NOT (''))) UNION ALL SELECT rt0.c1 FROM rt0, t0 WHERE ((('') ISNULL));
SELECT ALL rt0.c1 FROM rt0, t0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0, t0 INDEXED BY i58;
SELECT t0.c90, rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY t0.c90, rt0.c2, rt0.c1;
SELECT t0.c90, rt0.c2, rt0.c1 FROM t0, rt0 WHERE (((((rt0.c1 COLLATE RTRIM)AND((NOT (rt0.c2)))))AND(((rt0.c1) IS TRUE)))) GROUP BY t0.c90, rt0.c2, rt0.c1 UNION SELECT t0.c90, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((NOT (((((rt0.c1 COLLATE RTRIM)AND((NOT (rt0.c2)))))AND(((rt0.c1) IS TRUE)))))) GROUP BY t0.c90, rt0.c2, rt0.c1 UNION SELECT t0.c90, rt0.c2, rt0.c1 FROM t0, rt0 WHERE (((((((rt0.c1 COLLATE RTRIM)AND((NOT (rt0.c2)))))AND(((rt0.c1) IS TRUE)))) ISNULL)) GROUP BY t0.c90, rt0.c2, rt0.c1;
SELECT t0.c90, rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY t0.c90, rt0.c2, rt0.c1;
SELECT rt0.c0, t0.c90, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, t0.c90, rt0.c1;
SELECT ALL rt0.c0, t0.c90, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, t0.c90, rt0.c1 HAVING TOTAL(((rt0.c1) BETWEEN (rt0.c0) AND (SUM(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT ALL rt0.c0, t0.c90, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, t0.c90, rt0.c1 HAVING (NOT (TOTAL(((rt0.c1) BETWEEN (rt0.c0) AND (SUM(GROUP_CONCAT(COUNT(*)))))))) UNION ALL SELECT rt0.c0, t0.c90, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, t0.c90, rt0.c1 HAVING ((TOTAL(((rt0.c1) BETWEEN (rt0.c0) AND (SUM(GROUP_CONCAT(COUNT(*))))))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (TRIM(DISTINCT t0.c90)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (TRIM(DISTINCT t0.c90)))) UNION ALL SELECT ALL * FROM t0 NOT INDEXED WHERE (((TRIM(DISTINCT t0.c90)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt0.c1, rt0.c0, t0.c90 FROM t0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, t0.c90 FROM t0 NOT INDEXED, rt0 WHERE (CAST(t0.c90 COLLATE NOCASE AS REAL)) UNION SELECT DISTINCT rt0.c1, rt0.c0, t0.c90 FROM t0, rt0 WHERE ((NOT (CAST(t0.c90 COLLATE NOCASE AS REAL)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, t0.c90 FROM t0, rt0 WHERE (((CAST(t0.c90 COLLATE NOCASE AS REAL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, t0.c90 FROM t0, rt0;
SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, t0 WHERE ((((SQLITE_SOURCE_ID()))>((((rt0.c0) NOT NULL))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, t0 WHERE ((NOT ((((SQLITE_SOURCE_ID()))>((((rt0.c0) NOT NULL))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, t0 WHERE ((((((SQLITE_SOURCE_ID()))>((((rt0.c0) NOT NULL))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING SUM(CAST(t0.c90 AS INTEGER)) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (SUM(CAST(t0.c90 AS INTEGER)))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((SUM(CAST(t0.c90 AS INTEGER))) ISNULL);
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING SUM(CAST(t0.c90 AS INTEGER)) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (SUM(CAST(t0.c90 AS INTEGER)))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((SUM(CAST(t0.c90 AS INTEGER))) ISNULL);
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c1) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT t0.c90 FROM t0;
SELECT DISTINCT t0.c90 FROM t0 WHERE (((((t0.c90) IS TRUE)) BETWEEN (t0.c90 COLLATE BINARY) AND ((((t0.c90, t0.c90, t0.c90))<((t0.c90, t0.c90, t0.c90)))))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE ((NOT (((((t0.c90) IS TRUE)) BETWEEN (t0.c90 COLLATE BINARY) AND ((((t0.c90, t0.c90, t0.c90))<((t0.c90, t0.c90, t0.c90)))))))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE (((((((t0.c90) IS TRUE)) BETWEEN (t0.c90 COLLATE BINARY) AND ((((t0.c90, t0.c90, t0.c90))<((t0.c90, t0.c90, t0.c90)))))) ISNULL));
SELECT DISTINCT t0.c90 FROM t0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (IFNULL(((rt0.c0) IS FALSE), CAST(rt0.c1 AS TEXT))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (IFNULL(((rt0.c0) IS FALSE), CAST(rt0.c1 AS TEXT))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((IFNULL(((rt0.c0) IS FALSE), CAST(rt0.c1 AS TEXT))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, t0.c90 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c1, t0.c90;
SELECT rt0.c1, t0.c90 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c1, t0.c90 HAVING '0.8760360851269918' UNION ALL SELECT ALL rt0.c1, t0.c90 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c1, t0.c90 HAVING (NOT ('0.8760360851269918')) UNION ALL SELECT rt0.c1, t0.c90 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c1, t0.c90 HAVING (('0.8760360851269918') ISNULL);
SELECT rt0.c1, t0.c90 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c1, t0.c90;
SELECT rt0.c1, t0.c90 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c1, t0.c90 HAVING '0.8760360851269918' UNION ALL SELECT ALL rt0.c1, t0.c90 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c1, t0.c90 HAVING (NOT ('0.8760360851269918')) UNION ALL SELECT rt0.c1, t0.c90 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c1, t0.c90 HAVING (('0.8760360851269918') ISNULL);
SELECT rt0.c1, t0.c90 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c1, t0.c90;
SELECT rt0.c0, t0.c90, rt0.c2, rt0.c1 FROM rt0, t0;
SELECT ALL rt0.c0, t0.c90, rt0.c2, rt0.c1 FROM rt0, t0 WHERE (CASE (t0.c90 IN (t0.c90))  WHEN ((rt0.c2) NOTNULL) THEN t0.c90 ELSE ((((((((rt0.c1)OR(t0.c90)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)) END) UNION ALL SELECT ALL rt0.c0, t0.c90, rt0.c2, rt0.c1 FROM rt0, t0 WHERE ((NOT (CASE (t0.c90 IN (t0.c90))  WHEN ((rt0.c2) NOTNULL) THEN t0.c90 ELSE ((((((((rt0.c1)OR(t0.c90)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)) END))) UNION ALL SELECT rt0.c0, t0.c90, rt0.c2, rt0.c1 FROM rt0, t0 WHERE (((CASE (t0.c90 IN (t0.c90))  WHEN ((rt0.c2) NOTNULL) THEN t0.c90 ELSE ((((((((rt0.c1)OR(t0.c90)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)) END) ISNULL));
SELECT rt0.c0, t0.c90, rt0.c2, rt0.c1 FROM rt0, t0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN t0 WHERE ((~ (((rt0.c1)/(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN t0 WHERE ((NOT ((~ (((rt0.c1)/(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN t0 WHERE ((((~ (((rt0.c1)/(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0 NATURAL JOIN t0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((((((rt0.c2))<((t0.c90)))) IS TRUE)) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((NOT ((((((rt0.c2))<((t0.c90)))) IS TRUE)))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((((((((rt0.c2))<((t0.c90)))) IS TRUE)) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MIN(COUNT(MAX(rt0.c1))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MIN(COUNT(MAX(rt0.c1))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MIN(COUNT(MAX(rt0.c1)))) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) IN ())) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) IN ())) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (RTRIM(((rt0.c1) ISNULL))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (RTRIM(((rt0.c1) ISNULL))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((RTRIM(((rt0.c1) ISNULL))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((((~ (t0.c90)))<(CASE WHEN t0.c90 THEN rt0.c2 WHEN rt0.c0 THEN t0.c90 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((NOT ((((~ (t0.c90)))<(CASE WHEN t0.c90 THEN rt0.c2 WHEN rt0.c0 THEN t0.c90 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((((((~ (t0.c90)))<(CASE WHEN t0.c90 THEN rt0.c2 WHEN rt0.c0 THEN t0.c90 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(((MIN(rt0.c2))%(COUNT(*)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(((MIN(rt0.c2))%(COUNT(*)))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(((MIN(rt0.c2))%(COUNT(*))))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((((((((((((t0.c90)OR(t0.c90)))AND(t0.c90)))AND(t0.c90)))OR(0.05661137922249271)), CAST(x'' AS INTEGER), ((t0.c90)=(t0.c90))))>((((((((((t0.c90)OR(t0.c90)))AND(t0.c90)))AND(t0.c90)))AND('')), ((t0.c90) IS FALSE), UNLIKELY(t0.c90))))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((((((((((t0.c90)OR(t0.c90)))AND(t0.c90)))AND(t0.c90)))OR(0.05661137922249271)), CAST(x'' AS INTEGER), ((t0.c90)=(t0.c90))))>((((((((((t0.c90)OR(t0.c90)))AND(t0.c90)))AND(t0.c90)))AND('')), ((t0.c90) IS FALSE), UNLIKELY(t0.c90))))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((((((((((t0.c90)OR(t0.c90)))AND(t0.c90)))AND(t0.c90)))OR(0.05661137922249271)), CAST(x'' AS INTEGER), ((t0.c90)=(t0.c90))))>((((((((((t0.c90)OR(t0.c90)))AND(t0.c90)))AND(t0.c90)))AND('')), ((t0.c90) IS FALSE), UNLIKELY(t0.c90))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c90 FROM t0;
SELECT DISTINCT t0.c90 FROM t0 WHERE (((UNLIKELY(DISTINCT t0.c90))OR((((t0.c90, t0.c90, t0.c90)) NOT BETWEEN ((t0.c90, t0.c90, 0.8317471615154961)) AND ((t0.c90, t0.c90, t0.c90)))))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE ((NOT (((UNLIKELY(DISTINCT t0.c90))OR((((t0.c90, t0.c90, t0.c90)) NOT BETWEEN ((t0.c90, t0.c90, 0.8317471615154961)) AND ((t0.c90, t0.c90, t0.c90)))))))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE (((((UNLIKELY(DISTINCT t0.c90))OR((((t0.c90, t0.c90, t0.c90)) NOT BETWEEN ((t0.c90, t0.c90, 0.8317471615154961)) AND ((t0.c90, t0.c90, t0.c90)))))) ISNULL));
SELECT DISTINCT t0.c90 FROM t0;
SELECT rt0.c0, rt0.c2, t0.c90, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2, t0.c90, rt0.c1;
SELECT rt0.c0, rt0.c2, t0.c90, rt0.c1 FROM t0, rt0 WHERE (((((((rt0.c2)GLOB(rt0.c0)))AND((((t0.c90)) NOT BETWEEN ((-1.106373191E9)) AND ((rt0.c0))))))OR(((t0.c90)-(t0.c90))))) GROUP BY rt0.c0, rt0.c2, t0.c90, rt0.c1 UNION SELECT rt0.c0, rt0.c2, t0.c90, rt0.c1 FROM t0, rt0 WHERE ((NOT (((((((rt0.c2)GLOB(rt0.c0)))AND((((t0.c90)) NOT BETWEEN ((-1.106373191E9)) AND ((rt0.c0))))))OR(((t0.c90)-(t0.c90))))))) GROUP BY rt0.c0, rt0.c2, t0.c90, rt0.c1 UNION SELECT rt0.c0, rt0.c2, t0.c90, rt0.c1 FROM t0, rt0 WHERE (((((((((rt0.c2)GLOB(rt0.c0)))AND((((t0.c90)) NOT BETWEEN ((-1.106373191E9)) AND ((rt0.c0))))))OR(((t0.c90)-(t0.c90))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, t0.c90, rt0.c1;
SELECT rt0.c0, rt0.c2, t0.c90, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2, t0.c90, rt0.c1;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING CAST(GROUP_CONCAT(rt0.c1) AS NUMERIC) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (CAST(GROUP_CONCAT(rt0.c1) AS NUMERIC))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((CAST(GROUP_CONCAT(rt0.c1) AS NUMERIC)) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING CAST(GROUP_CONCAT(rt0.c1) AS NUMERIC) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (CAST(GROUP_CONCAT(rt0.c1) AS NUMERIC))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((CAST(GROUP_CONCAT(rt0.c1) AS NUMERIC)) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((((((((('-636603028' COLLATE NOCASE)OR(CASE t0.c90  WHEN t0.c90 THEN t0.c90 WHEN -164765328 THEN t0.c90 WHEN t0.c90 THEN x'' END)))AND(((((((((((((t0.c90)OR(t0.c90)))AND(t0.c90)))AND(t0.c90)))AND('舶n')))OR(t0.c90)))OR(t0.c90)))))AND((~ (t0.c90)))))OR(CASE t0.c90  WHEN t0.c90 THEN t0.c90 WHEN t0.c90 THEN t0.c90 WHEN t0.c90 THEN t0.c90 END))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((((((('-636603028' COLLATE NOCASE)OR(CASE t0.c90  WHEN t0.c90 THEN t0.c90 WHEN -164765328 THEN t0.c90 WHEN t0.c90 THEN x'' END)))AND(((((((((((((t0.c90)OR(t0.c90)))AND(t0.c90)))AND(t0.c90)))AND('舶n')))OR(t0.c90)))OR(t0.c90)))))AND((~ (t0.c90)))))OR(CASE t0.c90  WHEN t0.c90 THEN t0.c90 WHEN t0.c90 THEN t0.c90 WHEN t0.c90 THEN t0.c90 END))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((((((('-636603028' COLLATE NOCASE)OR(CASE t0.c90  WHEN t0.c90 THEN t0.c90 WHEN -164765328 THEN t0.c90 WHEN t0.c90 THEN x'' END)))AND(((((((((((((t0.c90)OR(t0.c90)))AND(t0.c90)))AND(t0.c90)))AND('舶n')))OR(t0.c90)))OR(t0.c90)))))AND((~ (t0.c90)))))OR(CASE t0.c90  WHEN t0.c90 THEN t0.c90 WHEN t0.c90 THEN t0.c90 WHEN t0.c90 THEN t0.c90 END))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (NULLIF(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)), (t0.c90 IN ()))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (NULLIF(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)), (t0.c90 IN ()))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((NULLIF(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)), (t0.c90 IN ()))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT rt0.c1, t0.c90, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, t0.c90, rt0.c2;
SELECT rt0.c1, t0.c90, rt0.c2 FROM t0, rt0 WHERE ((- (rt0.c1 COLLATE RTRIM))) GROUP BY rt0.c1, t0.c90, rt0.c2 UNION SELECT ALL rt0.c1, t0.c90, rt0.c2 FROM t0, rt0 WHERE ((NOT ((- (rt0.c1 COLLATE RTRIM))))) GROUP BY rt0.c1, t0.c90, rt0.c2 UNION SELECT rt0.c1, t0.c90, rt0.c2 FROM t0, rt0 WHERE ((((- (rt0.c1 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c1, t0.c90, rt0.c2;
SELECT rt0.c1, t0.c90, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, t0.c90, rt0.c2;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((((0.2498815490972488))<=((rt0.c0))))-(AVG(COUNT(COUNT(*))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((((((0.2498815490972488))<=((rt0.c0))))-(AVG(COUNT(COUNT(*))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((((((0.2498815490972488))<=((rt0.c0))))-(AVG(COUNT(COUNT(*)))))) ISNULL);
SELECT rt0.c1, rt0.c0, t0.c90, rt0.c2 FROM t0, rt0;
SELECT rt0.c1, rt0.c0, t0.c90, rt0.c2 FROM t0, rt0 WHERE (((NULL COLLATE RTRIM)>(((rt0.c1)%(t0.c90))))) UNION ALL SELECT rt0.c1, rt0.c0, t0.c90, rt0.c2 FROM t0, rt0 WHERE ((NOT (((NULL COLLATE RTRIM)>(((rt0.c1)%(t0.c90))))))) UNION ALL SELECT rt0.c1, rt0.c0, t0.c90, rt0.c2 FROM t0, rt0 WHERE (((((NULL COLLATE RTRIM)>(((rt0.c1)%(t0.c90))))) ISNULL));
SELECT rt0.c1, rt0.c0, t0.c90, rt0.c2 FROM t0, rt0;
SELECT DISTINCT t0.c90 FROM t0;
SELECT DISTINCT t0.c90 FROM t0 WHERE (((((UPPER(t0.c90))OR(((t0.c90) ISNULL))))OR(CAST(t0.c90 AS REAL)))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE ((NOT (((((UPPER(t0.c90))OR(((t0.c90) ISNULL))))OR(CAST(t0.c90 AS REAL)))))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE (((((((UPPER(t0.c90))OR(((t0.c90) ISNULL))))OR(CAST(t0.c90 AS REAL)))) ISNULL));
SELECT DISTINCT t0.c90 FROM t0;
SELECT rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, t0 WHERE ((((((t0.c90)<(x'a9a6091e'))))>=(((x'' IN ()))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0, t0 WHERE ((NOT ((((((t0.c90)<(x'a9a6091e'))))>=(((x'' IN ()))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0, t0 WHERE ((((((((t0.c90)<(x'a9a6091e'))))>=(((x'' IN ()))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c1, t0.c90, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c90, rt0.c0;
SELECT rt0.c1, t0.c90, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c90, rt0.c0 HAVING GROUP_CONCAT(AVG(rt0.c2)) UNION ALL SELECT ALL rt0.c1, t0.c90, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c90, rt0.c0 HAVING (NOT (GROUP_CONCAT(AVG(rt0.c2)))) UNION ALL SELECT rt0.c1, t0.c90, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c90, rt0.c0 HAVING ((GROUP_CONCAT(AVG(rt0.c2))) ISNULL);
SELECT ALL t0.c90, rt0.c0, rt0.c2 FROM t0 CROSS JOIN rt0 ON rt0.c2;
SELECT ALL t0.c90, rt0.c0, rt0.c2 FROM t0 CROSS JOIN rt0 ON rt0.c2 WHERE (rt0.c0) UNION ALL SELECT t0.c90, rt0.c0, rt0.c2 FROM t0 CROSS JOIN rt0 ON rt0.c2 WHERE ((NOT (rt0.c0))) UNION ALL SELECT t0.c90, rt0.c0, rt0.c2 FROM t0 CROSS JOIN rt0 ON rt0.c2 WHERE (((rt0.c0) ISNULL));
SELECT ALL t0.c90, rt0.c0, rt0.c2 FROM t0 CROSS JOIN rt0 ON rt0.c2;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (TYPEOF(DISTINCT 1148412294)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (TYPEOF(DISTINCT 1148412294)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((TYPEOF(DISTINCT 1148412294)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 WHERE ((- (((((t0.c90)AND(t0.c90)))OR(382562985))))) GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM t0 WHERE ((NOT ((- (((((t0.c90)AND(t0.c90)))OR(382562985))))))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE ((((- (((((t0.c90)AND(t0.c90)))OR(382562985))))) ISNULL)) GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MAX(((TOTAL(x'')) ISNULL)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MAX(((TOTAL(x'')) ISNULL)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MAX(((TOTAL(x'')) ISNULL))) ISNULL);
SELECT ALL SUM(((IFNULL(rt0.c0, t0.c90)) BETWEEN ((rt0.c1 IN ())) AND (CASE WHEN rt0.c0 THEN rt0.c1 WHEN 'g1B5黌V	' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE t0.c90 END))) FROM rt0, t0;
SELECT t0.c90 FROM t0;
SELECT ALL t0.c90 FROM t0 WHERE (((((((((((((CASE t0.c90  WHEN t0.c90 THEN t0.c90 END)OR(((t0.c90)%(t0.c90)))))OR(((((((((t0.c90)AND(t0.c90)))OR(t0.c90)))AND(t0.c90)))OR(t0.c90)))))AND(LOWER(t0.c90))))AND((t0.c90 IN ()))))AND(((t0.c90) ISNULL))))OR(TRIM(DISTINCT t0.c90)))) UNION ALL SELECT ALL t0.c90 FROM t0 WHERE ((NOT (((((((((((((CASE t0.c90  WHEN t0.c90 THEN t0.c90 END)OR(((t0.c90)%(t0.c90)))))OR(((((((((t0.c90)AND(t0.c90)))OR(t0.c90)))AND(t0.c90)))OR(t0.c90)))))AND(LOWER(t0.c90))))AND((t0.c90 IN ()))))AND(((t0.c90) ISNULL))))OR(TRIM(DISTINCT t0.c90)))))) UNION ALL SELECT t0.c90 FROM t0 WHERE (((((((((((((((CASE t0.c90  WHEN t0.c90 THEN t0.c90 END)OR(((t0.c90)%(t0.c90)))))OR(((((((((t0.c90)AND(t0.c90)))OR(t0.c90)))AND(t0.c90)))OR(t0.c90)))))AND(LOWER(t0.c90))))AND((t0.c90 IN ()))))AND(((t0.c90) ISNULL))))OR(TRIM(DISTINCT t0.c90)))) ISNULL));
SELECT t0.c90 FROM t0;
SELECT DISTINCT t0.c90 FROM t0;
SELECT DISTINCT t0.c90 FROM t0 WHERE (((json_valid(t0.c90)) NOT BETWEEN (t0.c90) AND (CAST(t0.c90 AS REAL)))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE ((NOT (((json_valid(t0.c90)) NOT BETWEEN (t0.c90) AND (CAST(t0.c90 AS REAL)))))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE (((((json_valid(t0.c90)) NOT BETWEEN (t0.c90) AND (CAST(t0.c90 AS REAL)))) ISNULL));
SELECT DISTINCT t0.c90 FROM t0;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 WHERE (CASE WHEN (~ (0.4157733845537719)) THEN (((t0.c90)) BETWEEN ((t0.c90)) AND ((t0.c90))) END) GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM t0 WHERE ((NOT (CASE WHEN (~ (0.4157733845537719)) THEN (((t0.c90)) BETWEEN ((t0.c90)) AND ((t0.c90))) END))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE (((CASE WHEN (~ (0.4157733845537719)) THEN (((t0.c90)) BETWEEN ((t0.c90)) AND ((t0.c90))) END) ISNULL)) GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (((- (GROUP_CONCAT(GROUP_CONCAT(MIN(rt0.c1))))))>(COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT ((((- (GROUP_CONCAT(GROUP_CONCAT(MIN(rt0.c1))))))>(COUNT(*))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (((((- (GROUP_CONCAT(GROUP_CONCAT(MIN(rt0.c1))))))>(COUNT(*)))) ISNULL);
SELECT rt0.c1 FROM rt0, t0;
SELECT rt0.c1 FROM rt0, t0 WHERE (((load_extension(rt0.c1, rt0.c1)) NOT BETWEEN (((t0.c90)*(rt0.c1))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) UNION ALL SELECT rt0.c1 FROM rt0, t0 WHERE ((NOT (((load_extension(rt0.c1, rt0.c1)) NOT BETWEEN (((t0.c90)*(rt0.c1))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))))) UNION ALL SELECT rt0.c1 FROM rt0, t0 WHERE (((((load_extension(rt0.c1, rt0.c1)) NOT BETWEEN (((t0.c90)*(rt0.c1))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL));
SELECT rt0.c1 FROM rt0, t0;
SELECT DISTINCT t0.c90 FROM t0;
SELECT DISTINCT t0.c90 FROM t0 WHERE (((((STRFTIME(t0.c90, t0.c90, t0.c90))AND((+ (t0.c90)))))AND(((t0.c90)>(t0.c90))))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE ((NOT (((((STRFTIME(t0.c90, t0.c90, t0.c90))AND((+ (t0.c90)))))AND(((t0.c90)>(t0.c90))))))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE (((((((STRFTIME(t0.c90, t0.c90, t0.c90))AND((+ (t0.c90)))))AND(((t0.c90)>(t0.c90))))) ISNULL));
SELECT DISTINCT t0.c90 FROM t0;
SELECT ALL t0.c90 FROM rt0, t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM rt0, t0 WHERE ((+ (TYPEOF(DISTINCT rt0.c0)))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM rt0, t0 WHERE ((NOT ((+ (TYPEOF(DISTINCT rt0.c0)))))) GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM rt0, t0 WHERE ((((+ (TYPEOF(DISTINCT rt0.c0)))) ISNULL)) GROUP BY t0.c90;
SELECT ALL t0.c90 FROM rt0, t0 GROUP BY t0.c90;
SELECT t0.c90, rt0.c2 FROM t0 INNER JOIN rt0 ON CASE (~ (rt0.c2))  WHEN ((rt0.c1) ISNULL) THEN rt0.c2 ELSE NULLIF(rt0.c2, rt0.c1) END GROUP BY t0.c90, rt0.c2;
SELECT ALL t0.c90, rt0.c2 FROM t0 INNER JOIN rt0 ON CASE (~ (rt0.c2))  WHEN ((rt0.c1) ISNULL) THEN rt0.c2 ELSE NULLIF(rt0.c2, rt0.c1) END GROUP BY t0.c90, rt0.c2 HAVING GROUP_CONCAT(SUM(MIN(TOTAL(GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT ALL t0.c90, rt0.c2 FROM t0 INNER JOIN rt0 ON CASE (~ (rt0.c2))  WHEN ((rt0.c1) ISNULL) THEN rt0.c2 ELSE NULLIF(rt0.c2, rt0.c1) END GROUP BY t0.c90, rt0.c2 HAVING (NOT (GROUP_CONCAT(SUM(MIN(TOTAL(GROUP_CONCAT(rt0.c1))))))) UNION ALL SELECT t0.c90, rt0.c2 FROM t0 INNER JOIN rt0 ON CASE (~ (rt0.c2))  WHEN ((rt0.c1) ISNULL) THEN rt0.c2 ELSE NULLIF(rt0.c2, rt0.c1) END GROUP BY t0.c90, rt0.c2 HAVING ((GROUP_CONCAT(SUM(MIN(TOTAL(GROUP_CONCAT(rt0.c1)))))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE ((((t0.c90)) NOT BETWEEN ((((t0.c90)==(t0.c90)))) AND (((- (t0.c90)))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((t0.c90)) NOT BETWEEN ((((t0.c90)=(t0.c90)))) AND (((- (t0.c90)))))))) UNION ALL SELECT * FROM t0 WHERE ((((((t0.c90)) NOT BETWEEN ((((t0.c90)==(t0.c90)))) AND (((- (t0.c90)))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (((((((rt0.c0)*(rt0.c2)))AND(((rt0.c0)!=(rt0.c0)))))OR(((t0.c90) NOT NULL)))) UNION SELECT DISTINCT * FROM t0, rt0 NOT INDEXED WHERE ((NOT (((((((rt0.c0)*(rt0.c2)))AND(((rt0.c0)<>(rt0.c0)))))OR(((t0.c90) NOT NULL)))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((((((((rt0.c0)*(rt0.c2)))AND(((rt0.c0)!=(rt0.c0)))))OR(((t0.c90) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt0.c0 FROM t0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM t0, rt0 WHERE (x'') GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM t0, rt0 WHERE ((NOT (x''))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM t0, rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM t0, rt0 GROUP BY rt0.c0;
SELECT rt0.c1, t0.c90, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON ((rt0.c1)==((~ (rt0.c2)))) GROUP BY rt0.c1, t0.c90, rt0.c0;
SELECT rt0.c1, t0.c90, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON ((rt0.c1)==((~ (rt0.c2)))) GROUP BY rt0.c1, t0.c90, rt0.c0 HAVING TYPEOF(DISTINCT MIN(rt0.c2)) UNION ALL SELECT ALL rt0.c1, t0.c90, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON ((rt0.c1)=((~ (rt0.c2)))) GROUP BY rt0.c1, t0.c90, rt0.c0 HAVING (NOT (TYPEOF(DISTINCT MIN(rt0.c2)))) UNION ALL SELECT ALL rt0.c1, t0.c90, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON ((rt0.c1)=((~ (rt0.c2)))) GROUP BY rt0.c1, t0.c90, rt0.c0 HAVING ((TYPEOF(DISTINCT MIN(rt0.c2))) ISNULL);
SELECT rt0.c1, t0.c90, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON ((rt0.c1)==((~ (rt0.c2)))) GROUP BY rt0.c1, t0.c90, rt0.c0;
SELECT rt0.c1, t0.c90, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON ((rt0.c1)==((~ (rt0.c2)))) GROUP BY rt0.c1, t0.c90, rt0.c0 HAVING TYPEOF(DISTINCT MIN(rt0.c2)) UNION ALL SELECT ALL rt0.c1, t0.c90, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON ((rt0.c1)=((~ (rt0.c2)))) GROUP BY rt0.c1, t0.c90, rt0.c0 HAVING (NOT (TYPEOF(DISTINCT MIN(rt0.c2)))) UNION ALL SELECT ALL rt0.c1, t0.c90, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON ((rt0.c1)=((~ (rt0.c2)))) GROUP BY rt0.c1, t0.c90, rt0.c0 HAVING ((TYPEOF(DISTINCT MIN(rt0.c2))) ISNULL);
SELECT rt0.c1, t0.c90, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON ((rt0.c1)==((~ (rt0.c2)))) GROUP BY rt0.c1, t0.c90, rt0.c0;
SELECT rt0.c1, rt0.c0, t0.c90, rt0.c2 FROM t0, rt0;
SELECT rt0.c1, rt0.c0, t0.c90, rt0.c2 FROM t0 NOT INDEXED, rt0 WHERE (((rt0.c2) IS FALSE)) UNION ALL SELECT rt0.c1, rt0.c0, t0.c90, rt0.c2 FROM t0, rt0 WHERE ((NOT (((rt0.c2) IS FALSE)))) UNION ALL SELECT rt0.c1, rt0.c0, t0.c90, rt0.c2 FROM t0, rt0 WHERE (((((rt0.c2) IS FALSE)) ISNULL));
SELECT rt0.c1, rt0.c0, t0.c90, rt0.c2 FROM t0, rt0;
SELECT DISTINCT t0.c90 FROM t0;
SELECT DISTINCT t0.c90 FROM t0 WHERE (0.5601122754894148) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE ((NOT (0.5601122754894148))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE (((0.5601122754894148) ISNULL));
SELECT DISTINCT t0.c90 FROM t0;
SELECT ALL t0.c90, rt0.c2 FROM t0, rt0 GROUP BY t0.c90, rt0.c2;
SELECT ALL t0.c90, rt0.c2 FROM t0, rt0 WHERE (CASE rt0.c0  WHEN rt0.c1 THEN CAST(rt0.c0 AS NUMERIC) WHEN IFNULL(rt0.c0, rt0.c0) THEN (- (rt0.c1)) WHEN highlight(rt0.c1, rt0.c2, rt0.c0, rt0.c0) THEN t0.c90 COLLATE NOCASE ELSE ((rt0.c0) NOTNULL) END) GROUP BY t0.c90, rt0.c2 UNION SELECT ALL t0.c90, rt0.c2 FROM t0, rt0 WHERE ((NOT (CASE rt0.c0  WHEN rt0.c1 THEN CAST(rt0.c0 AS NUMERIC) WHEN IFNULL(rt0.c0, rt0.c0) THEN (- (rt0.c1)) WHEN highlight(rt0.c1, rt0.c2, rt0.c0, rt0.c0) THEN t0.c90 COLLATE NOCASE ELSE ((rt0.c0) NOTNULL) END))) GROUP BY t0.c90, rt0.c2 UNION SELECT t0.c90, rt0.c2 FROM t0, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN CAST(rt0.c0 AS NUMERIC) WHEN IFNULL(rt0.c0, rt0.c0) THEN (- (rt0.c1)) WHEN highlight(rt0.c1, rt0.c2, rt0.c0, rt0.c0) THEN t0.c90 COLLATE NOCASE ELSE ((rt0.c0) NOTNULL) END) ISNULL)) GROUP BY t0.c90, rt0.c2;
SELECT ALL t0.c90, rt0.c2 FROM t0, rt0 GROUP BY t0.c90, rt0.c2;
SELECT ALL rt0.c1, t0.c90, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c90, rt0.c2, rt0.c0;
SELECT rt0.c1, t0.c90, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c90, rt0.c2, rt0.c0 HAVING MAX(t0.c90 COLLATE RTRIM) UNION ALL SELECT rt0.c1, t0.c90, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c90, rt0.c2, rt0.c0 HAVING (NOT (MAX(t0.c90 COLLATE RTRIM))) UNION ALL SELECT rt0.c1, t0.c90, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c90, rt0.c2, rt0.c0 HAVING ((MAX(t0.c90 COLLATE RTRIM)) ISNULL);
SELECT ALL rt0.c1, t0.c90, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c90, rt0.c2, rt0.c0;
SELECT rt0.c1, t0.c90, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c90, rt0.c2, rt0.c0 HAVING MAX(t0.c90 COLLATE RTRIM) UNION ALL SELECT rt0.c1, t0.c90, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c90, rt0.c2, rt0.c0 HAVING (NOT (MAX(t0.c90 COLLATE RTRIM))) UNION ALL SELECT rt0.c1, t0.c90, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c90, rt0.c2, rt0.c0 HAVING ((MAX(t0.c90 COLLATE RTRIM)) ISNULL);
SELECT ALL rt0.c1, t0.c90, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c90, rt0.c2, rt0.c0;
SELECT ALL TOTAL(((((t0.c90) NOT BETWEEN (NULL) AND (rt0.c2))) IS FALSE)) FROM rt0, t0 ORDER BY ((((((((CASE WHEN rt0.c0 THEN x'21ed' ELSE rt0.c1 END)AND((NULL IN ()))))AND(((rt0.c0)<=(rt0.c0)))))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((rt0.c2) NOTNULL)))  NULLS LAST;
SELECT t0.c90 FROM t0;
SELECT t0.c90 FROM t0 WHERE ((+ (((NULL)!=(t0.c90))))) UNION ALL SELECT ALL t0.c90 FROM t0 WHERE ((NOT ((+ (((NULL)!=(t0.c90))))))) UNION ALL SELECT ALL t0.c90 FROM t0 WHERE ((((+ (((NULL)!=(t0.c90))))) ISNULL));
SELECT t0.c90 FROM t0;
SELECT DISTINCT rt0.c1, rt0.c2, t0.c90, rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON ABS((rt0.c2 IN ()));
SELECT DISTINCT rt0.c1, rt0.c2, t0.c90, rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON ABS((rt0.c2 IN ())) WHERE ((UPPER(DISTINCT rt0.c2) IN ())) UNION SELECT DISTINCT rt0.c1, rt0.c2, t0.c90, rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON ABS((rt0.c2 IN ())) WHERE ((NOT ((UPPER(DISTINCT rt0.c2) IN ())))) UNION SELECT DISTINCT rt0.c1, rt0.c2, t0.c90, rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON ABS((rt0.c2 IN ())) WHERE ((((UPPER(DISTINCT rt0.c2) IN ())) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, t0.c90, rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON ABS((rt0.c2 IN ()));
SELECT t0.c90, rt0.c0, rt0.c1 FROM t0 INNER JOIN rt0 ON ((((((((load_extension(rt0.c0))OR(t0.c90)))OR((rt0.c1 IN ()))))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) GROUP BY t0.c90, rt0.c0, rt0.c1;
SELECT ALL t0.c90, rt0.c0, rt0.c1 FROM t0 INNER JOIN rt0 ON ((((((((load_extension(rt0.c0))OR(t0.c90)))OR((rt0.c1 IN ()))))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) WHERE (CAST(CAST(rt0.c0 AS INTEGER) AS NUMERIC)) GROUP BY t0.c90, rt0.c0, rt0.c1 UNION SELECT ALL t0.c90, rt0.c0, rt0.c1 FROM t0 INNER JOIN rt0 ON ((((((((load_extension(rt0.c0))OR(t0.c90)))OR((rt0.c1 IN ()))))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) WHERE ((NOT (CAST(CAST(rt0.c0 AS INTEGER) AS NUMERIC)))) GROUP BY t0.c90, rt0.c0, rt0.c1 UNION SELECT ALL t0.c90, rt0.c0, rt0.c1 FROM t0 INNER JOIN rt0 ON ((((((((load_extension(rt0.c0))OR(t0.c90)))OR((rt0.c1 IN ()))))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) WHERE (((CAST(CAST(rt0.c0 AS INTEGER) AS NUMERIC)) ISNULL)) GROUP BY t0.c90, rt0.c0, rt0.c1;
SELECT t0.c90, rt0.c0, rt0.c1 FROM t0 INNER JOIN rt0 ON ((((((((load_extension(rt0.c0))OR(t0.c90)))OR((rt0.c1 IN ()))))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) GROUP BY t0.c90, rt0.c0, rt0.c1;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING TOTAL((MAX(t0.c90) IN ())) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (TOTAL((MAX(t0.c90) IN ())))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((TOTAL((MAX(t0.c90) IN ()))) ISNULL);
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING TOTAL((MAX(t0.c90) IN ())) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (TOTAL((MAX(t0.c90) IN ())))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((TOTAL((MAX(t0.c90) IN ()))) ISNULL);
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOTNULL)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOTNULL)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOTNULL)) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM t0, rt0;
SELECT DISTINCT rt0.c2 FROM t0, rt0 WHERE (((((rt0.c2)|(rt0.c0)))OR(((rt0.c1)<<(rt0.c2))))) UNION SELECT DISTINCT rt0.c2 FROM t0, rt0 WHERE ((NOT (((((rt0.c2)|(rt0.c0)))OR(((rt0.c1)<<(rt0.c2))))))) UNION SELECT DISTINCT rt0.c2 FROM t0, rt0 WHERE (((((((rt0.c2)|(rt0.c0)))OR(((rt0.c1)<<(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM t0, rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((~ (rt0.c2))) BETWEEN (((((((((rt0.c2)OR(NULL)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0))) AND (rt0.c1))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((~ (rt0.c2))) BETWEEN (((((((((rt0.c2)OR(NULL)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0))) AND (rt0.c1))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((((~ (rt0.c2))) BETWEEN (((((((((rt0.c2)OR(NULL)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0))) AND (rt0.c1))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING TOTAL((((t0.c90, t0.c90, t0.c90, x'efe2', MAX(''))) BETWEEN ((-1187936943, t0.c90, COUNT(*), NULL, t0.c90)) AND ((t0.c90, SUM(t0.c90), COUNT(*), t0.c90, t0.c90)))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (TOTAL((((t0.c90, t0.c90, t0.c90, x'efe2', MAX(''))) BETWEEN ((-1187936943, t0.c90, COUNT(*), NULL, t0.c90)) AND ((t0.c90, SUM(t0.c90), COUNT(*), t0.c90, t0.c90)))))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((TOTAL((((t0.c90, t0.c90, t0.c90, x'efe2', MAX(''))) BETWEEN ((-1187936943, t0.c90, COUNT(*), NULL, t0.c90)) AND ((t0.c90, SUM(t0.c90), COUNT(*), t0.c90, t0.c90))))) ISNULL);
SELECT t0.c90, rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c1 COLLATE BINARY;
SELECT t0.c90, rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c1 COLLATE BINARY WHERE ((((rt0.c0 IN ()))GLOB(CAST(t0.c90 AS TEXT)))) UNION ALL SELECT ALL t0.c90, rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c1 COLLATE BINARY WHERE ((NOT ((((rt0.c0 IN ()))GLOB(CAST(t0.c90 AS TEXT)))))) UNION ALL SELECT t0.c90, rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c1 COLLATE BINARY WHERE ((((((rt0.c0 IN ()))GLOB(CAST(t0.c90 AS TEXT)))) ISNULL));
SELECT t0.c90, rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c1 COLLATE BINARY;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2))>((rt0.c0))) IN (((rt0.c1) NOTNULL), ((rt0.c2) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2))>((rt0.c0))) IN (((rt0.c1) NOTNULL), ((rt0.c2) NOT NULL)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2))>((rt0.c0))) IN (((rt0.c1) NOTNULL), ((rt0.c2) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 WHERE (t0.c90) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE ((NOT (t0.c90))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE (((t0.c90) ISNULL)) GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT rt0.c1 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c1 HAVING COALESCE((~ (MAX(rt0.c2))), COUNT(SUM(COUNT(t0.c90))), (+ (t0.c90)), TOTAL(t0.c90)) UNION ALL SELECT rt0.c1 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c1 HAVING (NOT (COALESCE((~ (MAX(rt0.c2))), COUNT(SUM(COUNT(t0.c90))), (+ (t0.c90)), TOTAL(t0.c90)))) UNION ALL SELECT rt0.c1 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c1 HAVING ((COALESCE((~ (MAX(rt0.c2))), COUNT(SUM(COUNT(t0.c90))), (+ (t0.c90)), TOTAL(t0.c90))) ISNULL);
SELECT t0.c90, rt0.c2, rt0.c0, rt0.c1 FROM rt0, t0;
SELECT ALL t0.c90, rt0.c2, rt0.c0, rt0.c1 FROM rt0, t0 WHERE (((((CASE rt0.c0  WHEN t0.c90 THEN rt0.c1 END)AND(((rt0.c2) IS TRUE))))AND(503986246))) UNION ALL SELECT t0.c90, rt0.c2, rt0.c0, rt0.c1 FROM rt0, t0 WHERE ((NOT (((((CASE rt0.c0  WHEN t0.c90 THEN rt0.c1 END)AND(((rt0.c2) IS TRUE))))AND(503986246))))) UNION ALL SELECT ALL t0.c90, rt0.c2, rt0.c0, rt0.c1 FROM rt0, t0 WHERE (((((((CASE rt0.c0  WHEN t0.c90 THEN rt0.c1 END)AND(((rt0.c2) IS TRUE))))AND(503986246))) ISNULL));
SELECT t0.c90, rt0.c2, rt0.c0, rt0.c1 FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((((rt0.c1) IS TRUE))LIKE((((t0.c90, rt0.c2, rt0.c0)) BETWEEN ((t0.c90, rt0.c2, rt0.c2)) AND ((t0.c90, t0.c90, t0.c90)))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((((rt0.c1) IS TRUE))LIKE((((t0.c90, rt0.c2, rt0.c0)) BETWEEN ((t0.c90, rt0.c2, rt0.c2)) AND ((t0.c90, t0.c90, t0.c90)))))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((((rt0.c1) IS TRUE))LIKE((((t0.c90, rt0.c2, rt0.c0)) BETWEEN ((t0.c90, rt0.c2, rt0.c2)) AND ((t0.c90, t0.c90, t0.c90)))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON (((((t0.c90))>((rt0.c0))))>=((rt0.c0 IN ()))) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON (((((t0.c90))>((rt0.c0))))>=((rt0.c0 IN ()))) WHERE (rt0.c1) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON (((((t0.c90))>((rt0.c0))))>=((rt0.c0 IN ()))) WHERE ((NOT (rt0.c1))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON (((((t0.c90))>((rt0.c0))))>=((rt0.c0 IN ()))) WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON (((((t0.c90))>((rt0.c0))))>=((rt0.c0 IN ()))) GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING SUM(GROUP_CONCAT(GROUP_CONCAT(rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (SUM(GROUP_CONCAT(GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((SUM(GROUP_CONCAT(GROUP_CONCAT(rt0.c1)))) ISNULL);
SELECT * FROM t0 CROSS JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))>>(rt0.c0));
SELECT ALL * FROM t0 CROSS JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))>>(rt0.c0)) WHERE (((((t0.c90)!=(rt0.c0))) NOT NULL)) UNION ALL SELECT * FROM t0 CROSS JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))>>(rt0.c0)) WHERE ((NOT (((((t0.c90)<>(rt0.c0))) NOT NULL)))) UNION ALL SELECT * FROM t0 CROSS JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))>>(rt0.c0)) WHERE (((((((t0.c90)!=(rt0.c0))) NOT NULL)) ISNULL));
SELECT * FROM t0 CROSS JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))>>(rt0.c0));
SELECT DISTINCT rt0.c2, t0.c90, rt0.c1 FROM rt0 CROSS JOIN t0 ON rt0.c0;
SELECT DISTINCT rt0.c2, t0.c90, rt0.c1 FROM rt0 CROSS JOIN t0 ON rt0.c0 WHERE ((((x'')) BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) AND (((((rt0.c0))=((rt0.c0))))))) UNION SELECT DISTINCT rt0.c2, t0.c90, rt0.c1 FROM rt0 CROSS JOIN t0 ON rt0.c0 WHERE ((NOT ((((x'')) BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) AND (((((rt0.c0))=((rt0.c0))))))))) UNION SELECT DISTINCT rt0.c2, t0.c90, rt0.c1 FROM rt0 CROSS JOIN t0 ON rt0.c0 WHERE ((((((x'')) BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) AND (((((rt0.c0))==((rt0.c0))))))) ISNULL));
SELECT DISTINCT rt0.c2, t0.c90, rt0.c1 FROM rt0 CROSS JOIN t0 ON rt0.c0;
SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, t0 WHERE (HEX((-1.106373191E9 IN ()))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, t0 WHERE ((NOT (HEX((-1.106373191E9 IN ()))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, t0 WHERE (((HEX((-1.106373191E9 IN ()))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING COUNT(*) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING COUNT(*) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM)<>(rt0.c1));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM)<>(rt0.c1)) WHERE (('' IN ())) UNION ALL SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM)<>(rt0.c1)) WHERE ((NOT (('' IN ())))) UNION ALL SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM)!=(rt0.c1)) WHERE (((('' IN ())) ISNULL));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM)<>(rt0.c1));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c90)>>('726263816')))GLOB(t0.c90 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c90)>>('726263816')))GLOB(t0.c90 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c90)>>('726263816')))GLOB(t0.c90 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (((rt0.c1)IS(rt0.c2))) AND (((rt0.c1)+(rt0.c1))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (((rt0.c1)IS(rt0.c2))) AND (((rt0.c1)+(rt0.c1))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (((rt0.c1)IS(rt0.c2))) AND (((rt0.c1)+(rt0.c1))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c2 HAVING ((MIN(MAX(t0.c90))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (TOTAL(rt0.c0))) UNION ALL SELECT rt0.c2 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c2 HAVING (NOT (((MIN(MAX(t0.c90))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (TOTAL(rt0.c0))))) UNION ALL SELECT ALL rt0.c2 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c2 HAVING ((((MIN(MAX(t0.c90))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (TOTAL(rt0.c0)))) ISNULL);
SELECT rt0.c2 FROM t0, rt0;
SELECT ALL rt0.c2 FROM t0, rt0 WHERE (CAST(CASE t0.c90  WHEN x'1300e0f6' THEN rt0.c1 END AS NUMERIC)) UNION ALL SELECT ALL rt0.c2 FROM t0, rt0 WHERE ((NOT (CAST(CASE t0.c90  WHEN x'1300e0f6' THEN rt0.c1 END AS NUMERIC)))) UNION ALL SELECT ALL rt0.c2 FROM t0, rt0 WHERE (((CAST(CASE t0.c90  WHEN x'1300e0f6' THEN rt0.c1 END AS NUMERIC)) ISNULL));
SELECT rt0.c2 FROM t0, rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((((((t0.c90)AND(rt0.c1)))OR(rt0.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((((((t0.c90)AND(rt0.c1)))OR(rt0.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((((((t0.c90)AND(rt0.c1)))OR(rt0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((((NULL)>(rt0.c1))) BETWEEN (((0.7250410528313214) ISNULL)) AND ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((((NULL)>(rt0.c1))) BETWEEN (((0.7250410528313214) ISNULL)) AND ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((((NULL)>(rt0.c1))) BETWEEN (((0.7250410528313214) ISNULL)) AND ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1 HAVING AVG(SUM(rt0.c1)) UNION ALL SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1 HAVING (NOT (AVG(SUM(rt0.c1)))) UNION ALL SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1 HAVING ((AVG(SUM(rt0.c1))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (t0.c90) UNION ALL SELECT * FROM t0 WHERE ((NOT (t0.c90))) UNION ALL SELECT * FROM t0 WHERE (((t0.c90) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c90 FROM t0;
SELECT DISTINCT t0.c90 FROM t0 WHERE (t0.c90) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE ((NOT (t0.c90))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE (((t0.c90) ISNULL));
SELECT DISTINCT t0.c90 FROM t0;
SELECT rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, t0 WHERE (CAST(((t0.c90)IS NOT(t0.c90)) AS REAL)) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((NOT (CAST(((t0.c90)IS NOT(t0.c90)) AS REAL)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0, t0 WHERE (((CAST(((t0.c90)IS NOT(t0.c90)) AS REAL)) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, t0 GROUP BY rt0.c1 HAVING (x'25f6410c' IN ()) UNION ALL SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1 HAVING (NOT ((x'25f6410c' IN ()))) UNION ALL SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1 HAVING (((x'25f6410c' IN ())) ISNULL);
SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, t0 GROUP BY rt0.c1 HAVING (x'25f6410c' IN ()) UNION ALL SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1 HAVING (NOT ((x'25f6410c' IN ()))) UNION ALL SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1 HAVING (((x'25f6410c' IN ())) ISNULL);
SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE (CAST(((t0.c90)/(t0.c90)) AS NUMERIC)) UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT (CAST(((t0.c90)/(t0.c90)) AS NUMERIC)))) UNION ALL SELECT * FROM t0, rt0 WHERE (((CAST(((t0.c90)/(t0.c90)) AS NUMERIC)) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c90 IN ()))AND((((t0.c90))<>(('v+#yvv'))))))OR(((t0.c90)>=(301874867))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((((t0.c90 IN ()))AND((((t0.c90))<>(('v+#yvv'))))))OR(((t0.c90)>=(301874867))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c90 IN ()))AND((((t0.c90))!=(('v+#yvv'))))))OR(((t0.c90)>=(301874867))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2))) ISNULL)) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1 IN (rt0.c2))) ISNULL)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c1 IN (rt0.c2))) ISNULL)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c1, t0.c90, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c0 IN (rt0.c1, rt0.c0))) IS FALSE) GROUP BY rt0.c1, t0.c90, rt0.c0;
SELECT rt0.c1, t0.c90, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c0 IN (rt0.c1, rt0.c0))) IS FALSE) GROUP BY rt0.c1, t0.c90, rt0.c0 HAVING (- (AVG(t0.c90))) UNION ALL SELECT rt0.c1, t0.c90, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c0 IN (rt0.c1, rt0.c0))) IS FALSE) GROUP BY rt0.c1, t0.c90, rt0.c0 HAVING (NOT ((- (AVG(t0.c90))))) UNION ALL SELECT rt0.c1, t0.c90, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c0 IN (rt0.c1, rt0.c0))) IS FALSE) GROUP BY rt0.c1, t0.c90, rt0.c0 HAVING (((- (AVG(t0.c90)))) ISNULL);
SELECT rt0.c1, t0.c90, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c0 IN (rt0.c1, rt0.c0))) IS FALSE) GROUP BY rt0.c1, t0.c90, rt0.c0;
SELECT rt0.c1, t0.c90, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c0 IN (rt0.c1, rt0.c0))) IS FALSE) GROUP BY rt0.c1, t0.c90, rt0.c0 HAVING (- (AVG(t0.c90))) UNION ALL SELECT rt0.c1, t0.c90, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c0 IN (rt0.c1, rt0.c0))) IS FALSE) GROUP BY rt0.c1, t0.c90, rt0.c0 HAVING (NOT ((- (AVG(t0.c90))))) UNION ALL SELECT rt0.c1, t0.c90, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c0 IN (rt0.c1, rt0.c0))) IS FALSE) GROUP BY rt0.c1, t0.c90, rt0.c0 HAVING (((- (AVG(t0.c90)))) ISNULL);
SELECT rt0.c1, t0.c90, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c0 IN (rt0.c1, rt0.c0))) IS FALSE) GROUP BY rt0.c1, t0.c90, rt0.c0;
SELECT ALL rt0.c0 FROM rt0 NOT INDEXED, t0;
SELECT ALL rt0.c0 FROM rt0, t0 WHERE ((NULL IN ())) UNION ALL SELECT rt0.c0 FROM rt0, t0 WHERE ((NOT ((NULL IN ())))) UNION ALL SELECT rt0.c0 FROM rt0, t0 WHERE ((((NULL IN ())) ISNULL));
SELECT ALL rt0.c0 FROM rt0 NOT INDEXED, t0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c2 COLLATE RTRIM) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2 COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL t0.c90, rt0.c0 FROM t0, rt0 GROUP BY t0.c90, rt0.c0;
SELECT ALL t0.c90, rt0.c0 FROM t0, rt0 WHERE ((((~ (rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND ((rt0.c2 IN ())))) GROUP BY t0.c90, rt0.c0 UNION SELECT t0.c90, rt0.c0 FROM t0, rt0 WHERE ((NOT ((((~ (rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND ((rt0.c2 IN ())))))) GROUP BY t0.c90, rt0.c0 UNION SELECT ALL t0.c90, rt0.c0 FROM t0, rt0 WHERE ((((((~ (rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND ((rt0.c2 IN ())))) ISNULL)) GROUP BY t0.c90, rt0.c0;
SELECT ALL t0.c90, rt0.c0 FROM t0, rt0 GROUP BY t0.c90, rt0.c0;
SELECT rt0.c0, rt0.c1, t0.c90, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, t0.c90, rt0.c2;
SELECT rt0.c0, rt0.c1, t0.c90, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, t0.c90, rt0.c2 HAVING TOTAL(MIN(rt0.c2)) UNION ALL SELECT rt0.c0, rt0.c1, t0.c90, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, t0.c90, rt0.c2 HAVING (NOT (TOTAL(MIN(rt0.c2)))) UNION ALL SELECT rt0.c0, rt0.c1, t0.c90, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, t0.c90, rt0.c2 HAVING ((TOTAL(MIN(rt0.c2))) ISNULL);
SELECT rt0.c2 FROM rt0, t0;
SELECT ALL rt0.c2 FROM rt0, t0 WHERE ((((((NULL) BETWEEN (0.07164904733788813) AND (t0.c90))))<(('')))) UNION ALL SELECT ALL rt0.c2 FROM rt0, t0 WHERE ((NOT ((((((NULL) BETWEEN (0.07164904733788813) AND (t0.c90))))<(('')))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, t0 WHERE ((((((((NULL) BETWEEN (0.07164904733788813) AND (t0.c90))))<(('')))) ISNULL));
SELECT rt0.c2 FROM rt0, t0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (t0.c90) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (t0.c90))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((t0.c90) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 WHERE (((((t0.c90 IN ('0.7871096309918297', t0.c90)), ((t0.c90) NOTNULL), NULL))==((((((((((t0.c90)AND(t0.c90)))AND(t0.c90)))AND(t0.c90)))OR(t0.c90)), t0.c90, (t0.c90 IN (t0.c90, t0.c90)))))) GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM t0 WHERE ((NOT (((((t0.c90 IN ('0.7871096309918297', t0.c90)), ((t0.c90) NOTNULL), NULL))=((((((((((t0.c90)AND(t0.c90)))AND(t0.c90)))AND(t0.c90)))OR(t0.c90)), t0.c90, (t0.c90 IN (t0.c90, t0.c90)))))))) GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM t0 WHERE (((((((t0.c90 IN ('0.7871096309918297', t0.c90)), ((t0.c90) NOTNULL), NULL))==((((((((((t0.c90)AND(t0.c90)))AND(t0.c90)))AND(t0.c90)))OR(t0.c90)), t0.c90, (t0.c90 IN (t0.c90, t0.c90)))))) ISNULL)) GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING SUM(MAX(rt0.c1)) COLLATE RTRIM UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (SUM(MAX(rt0.c1)) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((SUM(MAX(rt0.c1)) COLLATE RTRIM) ISNULL);
SELECT * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE ((- ((- (rt0.c2))))) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT ((- ((- (rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((((- ((- (rt0.c2))))) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT t0.c90 FROM t0;
SELECT DISTINCT t0.c90 FROM t0 WHERE (CASE t0.c90 COLLATE RTRIM  WHEN ((t0.c90) IS FALSE) THEN CAST(t0.c90 AS NUMERIC) END) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE ((NOT (CASE t0.c90 COLLATE RTRIM  WHEN ((t0.c90) IS FALSE) THEN CAST(t0.c90 AS NUMERIC) END))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE (((CASE t0.c90 COLLATE RTRIM  WHEN ((t0.c90) IS FALSE) THEN CAST(t0.c90 AS NUMERIC) END) ISNULL));
SELECT DISTINCT t0.c90 FROM t0;
SELECT ALL rt0.c0 FROM t0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM t0, rt0 WHERE (((t0.c90) NOTNULL) COLLATE BINARY) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM t0, rt0 WHERE ((NOT (((t0.c90) NOTNULL) COLLATE BINARY))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM t0, rt0 WHERE (((((t0.c90) NOTNULL) COLLATE BINARY) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM t0, rt0 GROUP BY rt0.c0;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING SUM(GROUP_CONCAT('')) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (SUM(GROUP_CONCAT('')))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((SUM(GROUP_CONCAT(''))) ISNULL);
SELECT ALL rt0.c1, t0.c90, rt0.c2 FROM rt0, t0;
SELECT rt0.c1, t0.c90, rt0.c2 FROM rt0, t0 WHERE ((((- (rt0.c0)))&(((rt0.c2)==(t0.c90))))) UNION ALL SELECT rt0.c1, t0.c90, rt0.c2 FROM rt0, t0 WHERE ((NOT ((((- (rt0.c0)))&(((rt0.c2)=(t0.c90))))))) UNION ALL SELECT ALL rt0.c1, t0.c90, rt0.c2 FROM rt0, t0 WHERE ((((((- (rt0.c0)))&(((rt0.c2)==(t0.c90))))) ISNULL));
SELECT ALL rt0.c1, t0.c90, rt0.c2 FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE ((- (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT ((- (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((((- (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 WHERE (((((((((((t0.c90)AND(t0.c90)))OR(t0.c90)))OR(t0.c90)))AND(t0.c90)))<=(((t0.c90) ISNULL)))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE ((NOT (((((((((((t0.c90)AND(t0.c90)))OR(t0.c90)))OR(t0.c90)))AND(t0.c90)))<=(((t0.c90) ISNULL)))))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE (((((((((((((t0.c90)AND(t0.c90)))OR(t0.c90)))OR(t0.c90)))AND(t0.c90)))<=(((t0.c90) ISNULL)))) ISNULL)) GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE (((rt0.c1)|(x'')) COLLATE NOCASE) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (((rt0.c1)|(x'')) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((((rt0.c1)|(x'')) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT rt0.c2 FROM rt0 CROSS JOIN t0 ON ((((((rt0.c1)OR(t0.c90)))AND(rt0.c1))) BETWEEN ((((NULL))>=((t0.c90)))) AND (t0.c90 COLLATE NOCASE));
SELECT DISTINCT rt0.c2 FROM rt0 CROSS JOIN t0 ON ((((((rt0.c1)OR(t0.c90)))AND(rt0.c1))) BETWEEN ((((NULL))>=((t0.c90)))) AND (t0.c90 COLLATE NOCASE)) WHERE (x'') UNION SELECT DISTINCT rt0.c2 FROM rt0 CROSS JOIN t0 ON ((((((rt0.c1)OR(t0.c90)))AND(rt0.c1))) BETWEEN ((((NULL))>=((t0.c90)))) AND (t0.c90 COLLATE NOCASE)) WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c2 FROM rt0 CROSS JOIN t0 ON ((((((rt0.c1)OR(t0.c90)))AND(rt0.c1))) BETWEEN ((((NULL))>=((t0.c90)))) AND (t0.c90 COLLATE NOCASE)) WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0 CROSS JOIN t0 ON ((((((rt0.c1)OR(t0.c90)))AND(rt0.c1))) BETWEEN ((((NULL))>=((t0.c90)))) AND (t0.c90 COLLATE NOCASE));
SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 WHERE (CASE WHEN ((t0.c90)-(rt0.c2)) THEN rt0.c0 END) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((NOT (CASE WHEN ((t0.c90)-(rt0.c2)) THEN rt0.c0 END))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 WHERE (((CASE WHEN ((t0.c90)-(rt0.c2)) THEN rt0.c0 END) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING GROUP_CONCAT(GROUP_CONCAT(AVG(t0.c90))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(AVG(t0.c90))))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((GROUP_CONCAT(GROUP_CONCAT(AVG(t0.c90)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (x'') UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (x''))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((x'') ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, t0.c90 FROM rt0, t0;
SELECT DISTINCT rt0.c1, rt0.c0, t0.c90 FROM rt0, t0 WHERE (((((('p<')OR(rt0.c2)))AND(rt0.c0)) IN ())) UNION SELECT DISTINCT rt0.c1, rt0.c0, t0.c90 FROM rt0, t0 WHERE ((NOT (((((('p<')OR(rt0.c2)))AND(rt0.c0)) IN ())))) UNION SELECT DISTINCT rt0.c1, rt0.c0, t0.c90 FROM rt0, t0 WHERE (((((((('p<')OR(rt0.c2)))AND(rt0.c0)) IN ())) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, t0.c90 FROM rt0, t0;
SELECT ALL rt0.c0, rt0.c2, t0.c90, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2, t0.c90, rt0.c1;
SELECT rt0.c0, rt0.c2, t0.c90, rt0.c1 FROM t0, rt0 WHERE (CAST((rt0.c1 IN (t0.c90)) AS INTEGER)) GROUP BY rt0.c0, rt0.c2, t0.c90, rt0.c1 UNION SELECT rt0.c0, rt0.c2, t0.c90, rt0.c1 FROM t0, rt0 WHERE ((NOT (CAST((rt0.c1 IN (t0.c90)) AS INTEGER)))) GROUP BY rt0.c0, rt0.c2, t0.c90, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, t0.c90, rt0.c1 FROM t0, rt0 WHERE (((CAST((rt0.c1 IN (t0.c90)) AS INTEGER)) ISNULL)) GROUP BY rt0.c0, rt0.c2, t0.c90, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, t0.c90, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2, t0.c90, rt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (((rt0.c0, GROUP_CONCAT(rt0.c1), COUNT(rt0.c1))) BETWEEN ((AVG(rt0.c0), rt0.c1, AVG(MIN(rt0.c1)))) AND ((GROUP_CONCAT(TOTAL(rt0.c2)), MIN(AVG(rt0.c0)), rt0.c2))) COLLATE RTRIM UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT ((((rt0.c0, GROUP_CONCAT(rt0.c1), COUNT(rt0.c1))) BETWEEN ((AVG(rt0.c0), rt0.c1, AVG(MIN(rt0.c1)))) AND ((GROUP_CONCAT(TOTAL(rt0.c2)), MIN(AVG(rt0.c0)), rt0.c2))) COLLATE RTRIM)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (((((rt0.c0, GROUP_CONCAT(rt0.c1), COUNT(rt0.c1))) BETWEEN ((AVG(rt0.c0), rt0.c1, AVG(MIN(rt0.c1)))) AND ((GROUP_CONCAT(TOTAL(rt0.c2)), MIN(AVG(rt0.c0)), rt0.c2))) COLLATE RTRIM) ISNULL);
SELECT rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON x'';
SELECT rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON x'' WHERE ('E') UNION ALL SELECT ALL rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON x'' WHERE ((NOT ('E'))) UNION ALL SELECT rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON x'' WHERE ((('E') ISNULL));
SELECT rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON x'';
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 NOT INDEXED WHERE (((((t0.c90) BETWEEN (NULL) AND (t0.c90)))%(((t0.c90)LIKE(t0.c90))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c90) BETWEEN (NULL) AND (t0.c90)))%(((t0.c90)LIKE(t0.c90))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c90) BETWEEN (NULL) AND (t0.c90)))%(((t0.c90)LIKE(t0.c90))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT))AND(((rt0.c2) ISNULL)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS TEXT))AND(((rt0.c2) ISNULL)))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c1 AS TEXT))AND(((rt0.c2) ISNULL)))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (('1645470291')<>(CAST(rt0.c0 AS NUMERIC))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((('1645470291')<>(CAST(rt0.c0 AS NUMERIC))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((('1645470291')!=(CAST(rt0.c0 AS NUMERIC)))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (('1645470291')<>(CAST(rt0.c0 AS NUMERIC))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((('1645470291')<>(CAST(rt0.c0 AS NUMERIC))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((('1645470291')!=(CAST(rt0.c0 AS NUMERIC)))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL t0.c90 FROM t0;
SELECT t0.c90 FROM t0 WHERE (UNICODE(t0.c90 COLLATE BINARY)) UNION ALL SELECT ALL t0.c90 FROM t0 WHERE ((NOT (UNICODE(t0.c90 COLLATE BINARY)))) UNION ALL SELECT t0.c90 FROM t0 WHERE (((UNICODE(t0.c90 COLLATE BINARY)) ISNULL));
SELECT ALL t0.c90 FROM t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END) NOT BETWEEN (ABS(DISTINCT rt0.c0)) AND (((rt0.c1)OR(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END) NOT BETWEEN (ABS(DISTINCT rt0.c0)) AND (((rt0.c1)OR(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END) NOT BETWEEN (ABS(DISTINCT rt0.c0)) AND (((rt0.c1)OR(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 WHERE (((((t0.c90)AND(t0.c90))) ISNULL)) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE ((NOT (((((t0.c90)AND(t0.c90))) ISNULL)))) GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM t0 WHERE (((((((t0.c90)AND(t0.c90))) ISNULL)) ISNULL)) GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c90, rt0.c1, rt0.c2;
SELECT ALL t0.c90, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c90, rt0.c1, rt0.c2 HAVING COUNT(TOTAL(SUM(COUNT(*)))) UNION ALL SELECT t0.c90, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c90, rt0.c1, rt0.c2 HAVING (NOT (COUNT(TOTAL(SUM(COUNT(*)))))) UNION ALL SELECT t0.c90, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c90, rt0.c1, rt0.c2 HAVING ((COUNT(TOTAL(SUM(COUNT(*))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((NOT (rt0.c0))) BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (CAST(rt0.c0 AS REAL)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((NOT (rt0.c0))) BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (CAST(rt0.c0 AS REAL)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((NOT (rt0.c0))) BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (CAST(rt0.c0 AS REAL)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (t0.c90) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (t0.c90))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((t0.c90) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1 COLLATE BINARY, (NOT (rt0.c0)), rt0.c0 COLLATE NOCASE)) AND (((t0.c90 IN ()), (rt0.c1 IN ()), CASE rt0.c2  WHEN rt0.c0 THEN NULL WHEN t0.c90 THEN t0.c90 WHEN rt0.c2 THEN rt0.c0 END)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((NOT ((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1 COLLATE BINARY, (NOT (rt0.c0)), rt0.c0 COLLATE NOCASE)) AND (((t0.c90 IN ()), (rt0.c1 IN ()), CASE rt0.c2  WHEN rt0.c0 THEN NULL WHEN t0.c90 THEN t0.c90 WHEN rt0.c2 THEN rt0.c0 END)))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1 COLLATE BINARY, (NOT (rt0.c0)), rt0.c0 COLLATE NOCASE)) AND (((t0.c90 IN ()), (rt0.c1 IN ()), CASE rt0.c2  WHEN rt0.c0 THEN NULL WHEN t0.c90 THEN t0.c90 WHEN rt0.c2 THEN rt0.c0 END)))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MIN(MIN(rt0.c1)) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MIN(MIN(rt0.c1)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MIN(MIN(rt0.c1))) ISNULL);
SELECT ALL t0.c90 FROM t0;
SELECT t0.c90 FROM t0 WHERE (CASE WHEN ((t0.c90)<=(t0.c90)) THEN CAST(t0.c90 AS REAL) WHEN t0.c90 COLLATE BINARY THEN CASE t0.c90  WHEN t0.c90 THEN '' WHEN t0.c90 THEN t0.c90 WHEN t0.c90 THEN t0.c90 END WHEN t0.c90 COLLATE NOCASE THEN ((t0.c90)>(t0.c90)) ELSE ((t0.c90)OR(t0.c90)) END) UNION ALL SELECT t0.c90 FROM t0 WHERE ((NOT (CASE WHEN ((t0.c90)<=(t0.c90)) THEN CAST(t0.c90 AS REAL) WHEN t0.c90 COLLATE BINARY THEN CASE t0.c90  WHEN t0.c90 THEN '' WHEN t0.c90 THEN t0.c90 WHEN t0.c90 THEN t0.c90 END WHEN t0.c90 COLLATE NOCASE THEN ((t0.c90)>(t0.c90)) ELSE ((t0.c90)OR(t0.c90)) END))) UNION ALL SELECT t0.c90 FROM t0 WHERE (((CASE WHEN ((t0.c90)<=(t0.c90)) THEN CAST(t0.c90 AS REAL) WHEN t0.c90 COLLATE BINARY THEN CASE t0.c90  WHEN t0.c90 THEN '' WHEN t0.c90 THEN t0.c90 WHEN t0.c90 THEN t0.c90 END WHEN t0.c90 COLLATE NOCASE THEN ((t0.c90)>(t0.c90)) ELSE ((t0.c90)OR(t0.c90)) END) ISNULL));
SELECT ALL t0.c90 FROM t0;
SELECT DISTINCT rt0.c1, t0.c90 FROM rt0, t0;
SELECT DISTINCT rt0.c1, t0.c90 FROM rt0, t0 WHERE ((((((rt0.c0, rt0.c1, rt0.c2))<>((rt0.c0, t0.c90, rt0.c2))))IS NOT(((rt0.c1)LIKE(rt0.c2))))) UNION SELECT DISTINCT rt0.c1, t0.c90 FROM rt0, t0 WHERE ((NOT ((((((rt0.c0, rt0.c1, rt0.c2))!=((rt0.c0, t0.c90, rt0.c2))))IS NOT(((rt0.c1)LIKE(rt0.c2))))))) UNION SELECT DISTINCT rt0.c1, t0.c90 FROM rt0, t0 WHERE ((((((((rt0.c0, rt0.c1, rt0.c2))<>((rt0.c0, t0.c90, rt0.c2))))IS NOT(((rt0.c1)LIKE(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1, t0.c90 FROM rt0, t0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((('')OR(((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))))AND(((rt0.c0) ISNULL)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((('')OR(((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))))AND(((rt0.c0) ISNULL)))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((('')OR(((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))))AND(((rt0.c0) ISNULL)))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING MIN(((TOTAL(COUNT(*)))=(SUM(t0.c90)))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (MIN(((TOTAL(COUNT(*)))=(SUM(t0.c90)))))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((MIN(((TOTAL(COUNT(*)))==(SUM(t0.c90))))) ISNULL);
SELECT t0.c90 FROM t0;
SELECT t0.c90 FROM t0 WHERE (0.6195119822281437) UNION ALL SELECT ALL t0.c90 FROM t0 WHERE ((NOT (0.6195119822281437))) UNION ALL SELECT t0.c90 FROM t0 WHERE (((0.6195119822281437) ISNULL));
SELECT t0.c90 FROM t0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((((rt0.c1) BETWEEN ('473128686') AND (rt0.c0))) BETWEEN (SQLITE_COMPILEOPTION_GET(t0.c90)) AND (rt0.c1))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((((rt0.c1) BETWEEN ('473128686') AND (rt0.c0))) BETWEEN (SQLITE_COMPILEOPTION_GET(t0.c90)) AND (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((((rt0.c1) BETWEEN ('473128686') AND (rt0.c0))) BETWEEN (SQLITE_COMPILEOPTION_GET(t0.c90)) AND (rt0.c1))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c0)OR(((rt0.c1) NOTNULL))))AND(164060835))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0)OR(((rt0.c1) NOTNULL))))AND(164060835))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c0)OR(((rt0.c1) NOTNULL))))AND(164060835))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING t0.c90 UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (t0.c90)) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((t0.c90) ISNULL);
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING t0.c90 UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (t0.c90)) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((t0.c90) ISNULL);
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((((((rt0.c0)AND(-1.039017337E9)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)) IN (rt0.c1 COLLATE BINARY, CAST(rt0.c0 AS TEXT)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((((((((rt0.c0)AND(-1.039017337E9)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)) IN (rt0.c1 COLLATE BINARY, CAST(rt0.c0 AS TEXT)))))) UNION ALL SELECT * FROM rt0 WHERE ((((((((((((rt0.c0)AND(-1.039017337E9)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)) IN (rt0.c1 COLLATE BINARY, CAST(rt0.c0 AS TEXT)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((((((rt0.c1, rt0.c2, t0.c90))<((NULL, rt0.c0, t0.c90))), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((NULL) NOTNULL)))>=(((rt0.c2 IN ()), rt0.c0, CAST(rt0.c1 AS TEXT))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((((((rt0.c1, rt0.c2, t0.c90))<((NULL, rt0.c0, t0.c90))), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((NULL) NOTNULL)))>=(((rt0.c2 IN ()), rt0.c0, CAST(rt0.c1 AS TEXT))))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((((((rt0.c1, rt0.c2, t0.c90))<((NULL, rt0.c0, t0.c90))), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((NULL) NOTNULL)))>=(((rt0.c2 IN ()), rt0.c0, CAST(rt0.c1 AS TEXT))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 WHERE (((t0.c90)<(0.18715233155229838))) GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM t0 WHERE ((NOT (((t0.c90)<(0.18715233155229838))))) GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM t0 WHERE (((((t0.c90)<(0.18715233155229838))) ISNULL)) GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)) COLLATE NOCASE UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)) COLLATE NOCASE) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)) COLLATE NOCASE UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)) COLLATE NOCASE) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL MIN(json_remove(((((((((rt0.c1)AND(rt0.c1)))OR(NULL)))AND(rt0.c1)))OR('#wvJ')), ((rt0.c2) NOT NULL))) FROM rt0 ORDER BY rt0.c0 DESC;
SELECT ALL rt0.c2 FROM rt0 NATURAL JOIN t0;
SELECT ALL rt0.c2 FROM rt0 NATURAL JOIN t0 WHERE ((((~ (rt0.c1))) BETWEEN (((((t0.c90)AND(rt0.c0)))AND(rt0.c1))) AND (t0.c90))) UNION ALL SELECT ALL rt0.c2 FROM rt0 NOT INDEXED NATURAL JOIN t0 WHERE ((NOT ((((~ (rt0.c1))) BETWEEN (((((t0.c90)AND(rt0.c0)))AND(rt0.c1))) AND (t0.c90))))) UNION ALL SELECT rt0.c2 FROM rt0 NATURAL JOIN t0 WHERE ((((((~ (rt0.c1))) BETWEEN (((((t0.c90)AND(rt0.c0)))AND(rt0.c1))) AND (t0.c90))) ISNULL));
SELECT ALL rt0.c2 FROM rt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c0)OR(0.5044537651668598)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(CAST(rt0.c1 AS TEXT)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((((rt0.c0)OR(0.5044537651668598)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(CAST(rt0.c1 AS TEXT)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((((rt0.c0)OR(0.5044537651668598)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(CAST(rt0.c1 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 WHERE (t0.c90) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 NOT INDEXED WHERE ((NOT (t0.c90))) GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM t0 WHERE (((t0.c90) ISNULL)) GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING MAX(0.5044537651668598) COLLATE NOCASE UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (MAX(0.5044537651668598) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((MAX(0.5044537651668598) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING MAX(0.5044537651668598) COLLATE NOCASE UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (MAX(0.5044537651668598) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((MAX(0.5044537651668598) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT t0.c90 FROM t0;
SELECT ALL t0.c90 FROM t0 WHERE (((((((t0.c90)AND(t0.c90)))AND(t0.c90)))%(((0.9738782612519956) BETWEEN (t0.c90) AND (t0.c90))))) UNION ALL SELECT ALL t0.c90 FROM t0 WHERE ((NOT (((((((t0.c90)AND(t0.c90)))AND(t0.c90)))%(((0.9738782612519956) BETWEEN (t0.c90) AND (t0.c90))))))) UNION ALL SELECT t0.c90 FROM t0 WHERE (((((((((t0.c90)AND(t0.c90)))AND(t0.c90)))%(((0.9738782612519956) BETWEEN (t0.c90) AND (t0.c90))))) ISNULL));
SELECT t0.c90 FROM t0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM)/(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE RTRIM)/(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c2 COLLATE RTRIM)/(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2 HAVING LIKELY(DISTINCT (+ (COUNT(COUNT(*))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (LIKELY(DISTINCT (+ (COUNT(COUNT(*))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2 HAVING ((LIKELY(DISTINCT (+ (COUNT(COUNT(*)))))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c1) ISNULL), NULL, rt0.c1 COLLATE NOCASE))>((CAST(rt0.c1 AS NUMERIC), (rt0.c0 IN ()), (~ (rt0.c2)))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c1) ISNULL), NULL, rt0.c1 COLLATE NOCASE))>((CAST(rt0.c1 AS NUMERIC), (rt0.c0 IN ()), (~ (rt0.c2)))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((((rt0.c1) ISNULL), NULL, rt0.c1 COLLATE NOCASE))>((CAST(rt0.c1 AS NUMERIC), (rt0.c0 IN ()), (~ (rt0.c2)))))) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, t0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, t0 WHERE (((CAST('o73r' AS INTEGER))||(((t0.c90) NOT NULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((NOT (((CAST('o73r' AS INTEGER))||(((t0.c90) NOT NULL)))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, t0 WHERE (((((CAST('o73r' AS INTEGER))||(((t0.c90) NOT NULL)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, t0;
SELECT t0.c90, rt0.c1, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON HEX(DISTINCT json_array(rt0.c2, t0.c90)) GROUP BY t0.c90, rt0.c1, rt0.c2;
SELECT ALL t0.c90, rt0.c1, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON HEX(DISTINCT json_array(rt0.c2, t0.c90)) WHERE (rt0.c2) GROUP BY t0.c90, rt0.c1, rt0.c2 UNION SELECT ALL t0.c90, rt0.c1, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON HEX(DISTINCT json_array(rt0.c2, t0.c90)) WHERE ((NOT (rt0.c2))) GROUP BY t0.c90, rt0.c1, rt0.c2 UNION SELECT ALL t0.c90, rt0.c1, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON HEX(DISTINCT json_array(rt0.c2, t0.c90)) WHERE (((rt0.c2) ISNULL)) GROUP BY t0.c90, rt0.c1, rt0.c2;
SELECT t0.c90, rt0.c1, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON HEX(DISTINCT json_array(rt0.c2, t0.c90)) GROUP BY t0.c90, rt0.c1, rt0.c2;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING COUNT(*) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING COUNT(*) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 WHERE (((((rt0.c2)OR(rt0.c2)))AND(t0.c90)) COLLATE BINARY) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 WHERE ((NOT (((((rt0.c2)OR(rt0.c2)))AND(t0.c90)) COLLATE BINARY))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 WHERE (((((((rt0.c2)OR(rt0.c2)))AND(t0.c90)) COLLATE BINARY) ISNULL));
SELECT rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE ((CAST(t0.c90 AS TEXT) IN ())) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT ((CAST(t0.c90 AS TEXT) IN ())))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((((CAST(t0.c90 AS TEXT) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (LOWER(rt0.c1) COLLATE NOCASE) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (LOWER(rt0.c1) COLLATE NOCASE))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((LOWER(rt0.c1) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING SUM(SUM(t0.c90)) UNION ALL SELECT rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING (NOT (SUM(SUM(t0.c90)))) UNION ALL SELECT rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING ((SUM(SUM(t0.c90))) ISNULL);
SELECT ALL * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE (((((rt0.c2)<<(rt0.c2)))IS NOT(rt0.c1 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT (((((rt0.c2)<<(rt0.c2)))IS NOT(rt0.c1 COLLATE RTRIM))))) UNION ALL SELECT * FROM rt0, t0 WHERE (((((((rt0.c2)<<(rt0.c2)))IS NOT(rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END) IS FALSE)) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, 0.45394156617678716, rt0.c0))) IN ((rt0.c2 IN ())))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, 0.45394156617678716, rt0.c0))) IN ((rt0.c2 IN ())))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, 0.45394156617678716, rt0.c0))) IN ((rt0.c2 IN ())))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT t0.c90, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c90, rt0.c2, rt0.c0;
SELECT ALL t0.c90, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c90, rt0.c2, rt0.c0 HAVING COUNT(AVG(COUNT(*))) UNION ALL SELECT t0.c90, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c90, rt0.c2, rt0.c0 HAVING (NOT (COUNT(AVG(COUNT(*))))) UNION ALL SELECT t0.c90, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c90, rt0.c2, rt0.c0 HAVING ((COUNT(AVG(COUNT(*)))) ISNULL);
SELECT ALL SUM(1.439460094E9 COLLATE NOCASE) FROM rt0, t0 ORDER BY rt0.c1  NULLS LAST, rt0.c1  NULLS LAST;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((- (((rt0.c2) IS TRUE)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((- (((rt0.c2) IS TRUE)))))) UNION ALL SELECT * FROM rt0 WHERE ((((- (((rt0.c2) IS TRUE)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT t0.c90 FROM t0;
SELECT DISTINCT t0.c90 FROM t0 WHERE (CAST(((t0.c90)>=(t0.c90)) AS REAL)) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE ((NOT (CAST(((t0.c90)>=(t0.c90)) AS REAL)))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE (((CAST(((t0.c90)>=(t0.c90)) AS REAL)) ISNULL));
SELECT DISTINCT t0.c90 FROM t0;
SELECT rt0.c2, rt0.c1, rt0.c0, t0.c90 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c90;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, t0.c90 FROM t0, rt0 WHERE ((- ((((t0.c90))>=((t0.c90)))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c90 UNION SELECT rt0.c2, rt0.c1, rt0.c0, t0.c90 FROM t0, rt0 WHERE ((NOT ((- ((((t0.c90))>=((t0.c90)))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c90 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, t0.c90 FROM t0, rt0 WHERE ((((- ((((t0.c90))>=((t0.c90)))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c90;
SELECT rt0.c2, rt0.c1, rt0.c0, t0.c90 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c90;
SELECT rt0.c1, rt0.c2, t0.c90 FROM t0 INNER JOIN rt0 ON ((((t0.c90 COLLATE BINARY)OR((t0.c90 IN ()))))OR(rt0.c2 COLLATE NOCASE)) GROUP BY rt0.c1, rt0.c2, t0.c90;
SELECT rt0.c1, rt0.c2, t0.c90 FROM t0 INNER JOIN rt0 ON ((((t0.c90 COLLATE BINARY)OR((t0.c90 IN ()))))OR(rt0.c2 COLLATE NOCASE)) GROUP BY rt0.c1, rt0.c2, t0.c90 HAVING CASE COUNT(*)  WHEN GROUP_CONCAT(SUM(rt0.c0)) THEN ((rt0.c1)<<(SUM(COUNT(t0.c90)))) WHEN MAX(rt0.c0) THEN TOTAL(rt0.c0) WHEN AVG(rt0.c1) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (t0.c90)) END UNION ALL SELECT rt0.c1, rt0.c2, t0.c90 FROM t0 INNER JOIN rt0 ON ((((t0.c90 COLLATE BINARY)OR((t0.c90 IN ()))))OR(rt0.c2 COLLATE NOCASE)) GROUP BY rt0.c1, rt0.c2, t0.c90 HAVING (NOT (CASE COUNT(*)  WHEN GROUP_CONCAT(SUM(rt0.c0)) THEN ((rt0.c1)<<(SUM(COUNT(t0.c90)))) WHEN MAX(rt0.c0) THEN TOTAL(rt0.c0) WHEN AVG(rt0.c1) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (t0.c90)) END)) UNION ALL SELECT ALL rt0.c1, rt0.c2, t0.c90 FROM t0 NOT INDEXED INNER JOIN rt0 ON ((((t0.c90 COLLATE BINARY)OR((t0.c90 IN ()))))OR(rt0.c2 COLLATE NOCASE)) GROUP BY rt0.c1, rt0.c2, t0.c90 HAVING ((CASE COUNT(*)  WHEN GROUP_CONCAT(SUM(rt0.c0)) THEN ((rt0.c1)<<(SUM(COUNT(t0.c90)))) WHEN MAX(rt0.c0) THEN TOTAL(rt0.c0) WHEN AVG(rt0.c1) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (t0.c90)) END) ISNULL);
SELECT rt0.c2, t0.c90, rt0.c0 FROM t0, rt0;
SELECT ALL rt0.c2, t0.c90, rt0.c0 FROM t0, rt0 WHERE (((CAST(rt0.c2 AS NUMERIC))IS NOT(NULL))) UNION ALL SELECT rt0.c2, t0.c90, rt0.c0 FROM t0, rt0 WHERE ((NOT (((CAST(rt0.c2 AS NUMERIC))IS NOT(NULL))))) UNION ALL SELECT ALL rt0.c2, t0.c90, rt0.c0 FROM t0, rt0 WHERE (((((CAST(rt0.c2 AS NUMERIC))IS NOT(NULL))) ISNULL));
SELECT rt0.c2, t0.c90, rt0.c0 FROM t0, rt0;
SELECT DISTINCT t0.c90 FROM t0;
SELECT DISTINCT t0.c90 FROM t0 WHERE ((((((((((((t0.c90, t0.c90, t0.c90)) NOT BETWEEN ((t0.c90, t0.c90, t0.c90)) AND ((t0.c90, t0.c90, t0.c90))))OR(((t0.c90) NOT NULL))))AND(t0.c90)))AND(((t0.c90)<=(t0.c90)))))AND(((t0.c90)=(t0.c90))))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE ((NOT ((((((((((((t0.c90, t0.c90, t0.c90)) NOT BETWEEN ((t0.c90, t0.c90, t0.c90)) AND ((t0.c90, t0.c90, t0.c90))))OR(((t0.c90) NOT NULL))))AND(t0.c90)))AND(((t0.c90)<=(t0.c90)))))AND(((t0.c90)==(t0.c90))))))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE ((((((((((((((t0.c90, t0.c90, t0.c90)) NOT BETWEEN ((t0.c90, t0.c90, t0.c90)) AND ((t0.c90, t0.c90, t0.c90))))OR(((t0.c90) NOT NULL))))AND(t0.c90)))AND(((t0.c90)<=(t0.c90)))))AND(((t0.c90)==(t0.c90))))) ISNULL));
SELECT DISTINCT t0.c90 FROM t0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 WHERE (rt0.c0) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING MIN(MIN(MIN(COUNT(GROUP_CONCAT(t0.c90))))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (MIN(MIN(MIN(COUNT(GROUP_CONCAT(t0.c90))))))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((MIN(MIN(MIN(COUNT(GROUP_CONCAT(t0.c90)))))) ISNULL);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c2;
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE (((((t0.c90) BETWEEN (rt0.c0) AND (rt0.c0)))AND(x'c4b9'))) UNION ALL SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE ((NOT (((((t0.c90) BETWEEN (rt0.c0) AND (rt0.c0)))AND(x'c4b9'))))) UNION ALL SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE (((((((t0.c90) BETWEEN (rt0.c0) AND (rt0.c0)))AND(x'c4b9'))) ISNULL));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c2;
SELECT DISTINCT t0.c90, rt0.c2 FROM rt0, t0;
SELECT DISTINCT t0.c90, rt0.c2 FROM rt0, t0 WHERE (((((rt0.c0) NOT BETWEEN (NULL) AND (t0.c90))) NOT NULL)) UNION SELECT DISTINCT t0.c90, rt0.c2 FROM rt0, t0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (NULL) AND (t0.c90))) NOT NULL)))) UNION SELECT DISTINCT t0.c90, rt0.c2 FROM rt0, t0 WHERE (((((((rt0.c0) NOT BETWEEN (NULL) AND (t0.c90))) NOT NULL)) ISNULL));
SELECT DISTINCT t0.c90, rt0.c2 FROM rt0, t0;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 WHERE (CASE t0.c90  WHEN (~ (t0.c90)) THEN (t0.c90 IN ()) WHEN ((t0.c90)/(t0.c90)) THEN CASE t0.c90  WHEN t0.c90 THEN t0.c90 END WHEN (- (t0.c90)) THEN CASE WHEN t0.c90 THEN t0.c90 END WHEN CAST(t0.c90 AS NUMERIC) THEN ((((t0.c90)AND(t0.c90)))OR(t0.c90)) WHEN ((t0.c90) NOT BETWEEN (t0.c90) AND (t0.c90)) THEN t0.c90 COLLATE NOCASE END) GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM t0 WHERE ((NOT (CASE t0.c90  WHEN (~ (t0.c90)) THEN (t0.c90 IN ()) WHEN ((t0.c90)/(t0.c90)) THEN CASE t0.c90  WHEN t0.c90 THEN t0.c90 END WHEN (- (t0.c90)) THEN CASE WHEN t0.c90 THEN t0.c90 END WHEN CAST(t0.c90 AS NUMERIC) THEN ((((t0.c90)AND(t0.c90)))OR(t0.c90)) WHEN ((t0.c90) NOT BETWEEN (t0.c90) AND (t0.c90)) THEN t0.c90 COLLATE NOCASE END))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE (((CASE t0.c90  WHEN (~ (t0.c90)) THEN (t0.c90 IN ()) WHEN ((t0.c90)/(t0.c90)) THEN CASE t0.c90  WHEN t0.c90 THEN t0.c90 END WHEN (- (t0.c90)) THEN CASE WHEN t0.c90 THEN t0.c90 END WHEN CAST(t0.c90 AS NUMERIC) THEN ((((t0.c90)AND(t0.c90)))OR(t0.c90)) WHEN ((t0.c90) NOT BETWEEN (t0.c90) AND (t0.c90)) THEN t0.c90 COLLATE NOCASE END) ISNULL)) GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((((((t0.c90)OR(t0.c90)))AND(COUNT(t0.c90))))>=(TOTAL(t0.c90))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (((((((t0.c90)OR(t0.c90)))AND(COUNT(t0.c90))))>=(TOTAL(t0.c90))))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((((((((t0.c90)OR(t0.c90)))AND(COUNT(t0.c90))))>=(TOTAL(t0.c90)))) ISNULL);
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((((((t0.c90)OR(t0.c90)))AND(COUNT(t0.c90))))>=(TOTAL(t0.c90))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (((((((t0.c90)OR(t0.c90)))AND(COUNT(t0.c90))))>=(TOTAL(t0.c90))))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((((((((t0.c90)OR(t0.c90)))AND(COUNT(t0.c90))))>=(TOTAL(t0.c90)))) ISNULL);
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE (CHANGES() COLLATE NOCASE COLLATE BINARY) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (CHANGES() COLLATE NOCASE COLLATE BINARY))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE (((CHANGES() COLLATE NOCASE COLLATE BINARY) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT t0.c90, rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN t0;
SELECT DISTINCT t0.c90, rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN t0 WHERE (rt0.c1) UNION SELECT DISTINCT t0.c90, rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN t0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT t0.c90, rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN t0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT t0.c90, rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN t0;
SELECT rt0.c1, t0.c90, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, t0.c90, rt0.c0, rt0.c2;
SELECT rt0.c1, t0.c90, rt0.c0, rt0.c2 FROM t0, rt0 WHERE (DATETIME(((('894518067'))>((t0.c90))), (((rt0.c2))<((rt0.c1))), CAST(t0.c90 AS BLOB))) GROUP BY rt0.c1, t0.c90, rt0.c0, rt0.c2 UNION SELECT rt0.c1, t0.c90, rt0.c0, rt0.c2 FROM t0, rt0 WHERE ((NOT (DATETIME(((('894518067'))>((t0.c90))), (((rt0.c2))<((rt0.c1))), CAST(t0.c90 AS BLOB))))) GROUP BY rt0.c1, t0.c90, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, t0.c90, rt0.c0, rt0.c2 FROM t0, rt0 WHERE (((DATETIME(((('894518067'))>((t0.c90))), (((rt0.c2))<((rt0.c1))), CAST(t0.c90 AS BLOB))) ISNULL)) GROUP BY rt0.c1, t0.c90, rt0.c0, rt0.c2;
SELECT rt0.c1, t0.c90, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, t0.c90, rt0.c0, rt0.c2;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING GROUP_CONCAT(GROUP_CONCAT(t0.c90)) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(t0.c90)))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((GROUP_CONCAT(GROUP_CONCAT(t0.c90))) ISNULL);
SELECT ALL t0.c90 FROM t0;
SELECT ALL t0.c90 FROM t0 WHERE (((((((t0.c90)<=(t0.c90)))AND(ABS(t0.c90))))AND(((t0.c90)=(t0.c90))))) UNION ALL SELECT t0.c90 FROM t0 WHERE ((NOT (((((((t0.c90)<=(t0.c90)))AND(ABS(t0.c90))))AND(((t0.c90)==(t0.c90))))))) UNION ALL SELECT ALL t0.c90 FROM t0 WHERE (((((((((t0.c90)<=(t0.c90)))AND(ABS(t0.c90))))AND(((t0.c90)==(t0.c90))))) ISNULL));
SELECT ALL t0.c90 FROM t0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c0) IS FALSE))GLOB(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) IS FALSE))GLOB(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c0) IS FALSE))GLOB(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL t0.c90, rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY t0.c90, rt0.c2, rt0.c1;
SELECT t0.c90, rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY t0.c90, rt0.c2, rt0.c1 HAVING TOTAL(SUM(AVG(rt0.c1))) UNION ALL SELECT t0.c90, rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY t0.c90, rt0.c2, rt0.c1 HAVING (NOT (TOTAL(SUM(AVG(rt0.c1))))) UNION ALL SELECT ALL t0.c90, rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY t0.c90, rt0.c2, rt0.c1 HAVING ((TOTAL(SUM(AVG(rt0.c1)))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((+ (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((+ (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))))) UNION ALL SELECT * FROM rt0 WHERE ((((+ (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c2) BETWEEN (t0.c90) AND (rt0.c1))) NOT BETWEEN (t0.c90) AND (((rt0.c0)!=(rt0.c0))));
SELECT DISTINCT * FROM rt0 NOT INDEXED FULL OUTER JOIN t0 ON ((((rt0.c2) BETWEEN (t0.c90) AND (rt0.c1))) NOT BETWEEN (t0.c90) AND (((rt0.c0)!=(rt0.c0)))) WHERE ((((((('-1560397256')!=(rt0.c0)))OR(((((((((rt0.c2)OR(rt0.c2)))OR(NULL)))AND(t0.c90)))AND(rt0.c0)))))OR(((t0.c90) NOT BETWEEN (rt0.c0) AND (t0.c90))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c2) BETWEEN (t0.c90) AND (rt0.c1))) NOT BETWEEN (t0.c90) AND (((rt0.c0)!=(rt0.c0)))) WHERE ((NOT ((((((('-1560397256')!=(rt0.c0)))OR(((((((((rt0.c2)OR(rt0.c2)))OR(NULL)))AND(t0.c90)))AND(rt0.c0)))))OR(((t0.c90) NOT BETWEEN (rt0.c0) AND (t0.c90))))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c2) BETWEEN (t0.c90) AND (rt0.c1))) NOT BETWEEN (t0.c90) AND (((rt0.c0)!=(rt0.c0)))) WHERE ((((((((('-1560397256')!=(rt0.c0)))OR(((((((((rt0.c2)OR(rt0.c2)))OR(NULL)))AND(t0.c90)))AND(rt0.c0)))))OR(((t0.c90) NOT BETWEEN (rt0.c0) AND (t0.c90))))) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c2) BETWEEN (t0.c90) AND (rt0.c1))) NOT BETWEEN (t0.c90) AND (((rt0.c0)!=(rt0.c0))));
SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, t0 WHERE (TYPEOF(((rt0.c1)GLOB(rt0.c2)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, t0 WHERE ((NOT (TYPEOF(((rt0.c1)GLOB(rt0.c2)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, t0 WHERE (((TYPEOF(((rt0.c1)GLOB(rt0.c2)))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (TOTAL(rt0.c0) IN ()) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((TOTAL(rt0.c0) IN ()))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((TOTAL(rt0.c0) IN ())) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (TOTAL(rt0.c0) IN ()) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((TOTAL(rt0.c0) IN ()))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((TOTAL(rt0.c0) IN ())) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE BINARY) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c90) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c90))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c90) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)), ((rt0.c0)=(rt0.c2)), (rt0.c0 IN ()))) AND ((((rt0.c2)==(rt0.c0)), 0X77360c71, rt0.c2)))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)), ((rt0.c0)=(rt0.c2)), (rt0.c0 IN ()))) AND ((((rt0.c2)==(rt0.c0)), 0x77360c71, rt0.c2)))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)), ((rt0.c0)==(rt0.c2)), (rt0.c0 IN ()))) AND ((((rt0.c2)=(rt0.c0)), 0X77360c71, rt0.c2)))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2 FROM t0 FULL OUTER JOIN rt0 ON (((((- (t0.c90)))AND(((rt0.c1)<(t0.c90)))))OR('-258469657')) GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0 FULL OUTER JOIN rt0 ON (((((- (t0.c90)))AND(((rt0.c1)<(t0.c90)))))OR('-258469657')) GROUP BY rt0.c2 HAVING CASE rt0.c2  WHEN TOTAL(COUNT(GROUP_CONCAT(SUM(MIN(rt0.c1))))) THEN rt0.c2 END COLLATE BINARY UNION ALL SELECT rt0.c2 FROM t0 FULL OUTER JOIN rt0 ON (((((- (t0.c90)))AND(((rt0.c1)<(t0.c90)))))OR('-258469657')) GROUP BY rt0.c2 HAVING (NOT (CASE rt0.c2  WHEN TOTAL(COUNT(GROUP_CONCAT(SUM(MIN(rt0.c1))))) THEN rt0.c2 END COLLATE BINARY)) UNION ALL SELECT rt0.c2 FROM t0 FULL OUTER JOIN rt0 ON (((((- (t0.c90)))AND(((rt0.c1)<(t0.c90)))))OR('-258469657')) GROUP BY rt0.c2 HAVING ((CASE rt0.c2  WHEN TOTAL(COUNT(GROUP_CONCAT(SUM(MIN(rt0.c1))))) THEN rt0.c2 END COLLATE BINARY) ISNULL);
SELECT t0.c90 FROM t0;
SELECT t0.c90 FROM t0 WHERE ((((~ (t0.c90)))*(t0.c90 COLLATE RTRIM))) UNION ALL SELECT t0.c90 FROM t0 WHERE ((NOT ((((~ (t0.c90)))*(t0.c90 COLLATE RTRIM))))) UNION ALL SELECT ALL t0.c90 FROM t0 WHERE ((((((~ (t0.c90)))*(t0.c90 COLLATE RTRIM))) ISNULL));
SELECT t0.c90 FROM t0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ((('1128851854')>=('1376606866'))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ((('1128851854')>=('1376606866'))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((((('1128851854')>=('1376606866'))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 WHERE (((((t0.c90) IS FALSE)) NOT BETWEEN ('(*bxi*') AND (CASE WHEN t0.c90 THEN t0.c90 END))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE ((NOT (((((t0.c90) IS FALSE)) NOT BETWEEN ('(*bxi*') AND (CASE WHEN t0.c90 THEN t0.c90 END))))) GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM t0 WHERE (((((((t0.c90) IS FALSE)) NOT BETWEEN ('(*bxi*') AND (CASE WHEN t0.c90 THEN t0.c90 END))) ISNULL)) GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c90, rt0.c2, rt0.c1, rt0.c0;
SELECT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c90, rt0.c2, rt0.c1, rt0.c0 HAVING 'GW' UNION ALL SELECT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c90, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ('GW')) UNION ALL SELECT ALL t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c90, rt0.c2, rt0.c1, rt0.c0 HAVING (('GW') ISNULL);
SELECT ALL t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c90, rt0.c2, rt0.c1, rt0.c0;
SELECT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c90, rt0.c2, rt0.c1, rt0.c0 HAVING 'GW' UNION ALL SELECT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c90, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ('GW')) UNION ALL SELECT ALL t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c90, rt0.c2, rt0.c1, rt0.c0 HAVING (('GW') ISNULL);
SELECT ALL t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c90, rt0.c2, rt0.c1, rt0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) AS NUMERIC)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) AS NUMERIC)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) AS NUMERIC)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (HEX((((rt0.c2))<=((rt0.c1))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (HEX((((rt0.c2))<=((rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((HEX((((rt0.c2))<=((rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT ALL rt0.c1, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON rt0.c1 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON rt0.c1 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))<(rt0.c1 COLLATE NOCASE))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON rt0.c1 WHERE ((NOT (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))<(rt0.c1 COLLATE NOCASE))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON rt0.c1 WHERE (((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))<(rt0.c1 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON rt0.c1 GROUP BY rt0.c1, rt0.c2;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING CAST(((AVG(t0.c90))<=(COUNT(*))) AS INTEGER) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (CAST(((AVG(t0.c90))<=(COUNT(*))) AS INTEGER))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((CAST(((AVG(t0.c90))<=(COUNT(*))) AS INTEGER)) ISNULL);
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING CAST(((AVG(t0.c90))<=(COUNT(*))) AS INTEGER) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (CAST(((AVG(t0.c90))<=(COUNT(*))) AS INTEGER))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((CAST(((AVG(t0.c90))<=(COUNT(*))) AS INTEGER)) ISNULL);
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE ((((((t0.c90, t0.c90, rt0.c1, t0.c90, t0.c90))>((rt0.c0, t0.c90, t0.c90, t0.c90, t0.c90))))||((rt0.c2 IN ())))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT ((((((t0.c90, t0.c90, rt0.c1, t0.c90, t0.c90))>((rt0.c0, t0.c90, t0.c90, t0.c90, t0.c90))))||((rt0.c2 IN ())))))) UNION ALL SELECT * FROM t0, rt0 WHERE ((((((((t0.c90, t0.c90, rt0.c1, t0.c90, t0.c90))>((rt0.c0, t0.c90, t0.c90, t0.c90, t0.c90))))||((rt0.c2 IN ())))) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (LIKE(rt0.c2, ((rt0.c2)>=(rt0.c1)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (LIKE(rt0.c2, ((rt0.c2)>=(rt0.c1)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((LIKE(rt0.c2, ((rt0.c2)>=(rt0.c1)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, t0.c90, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, t0.c90, rt0.c1;
SELECT rt0.c2, t0.c90, rt0.c1 FROM rt0, t0 WHERE (NULL) GROUP BY rt0.c2, t0.c90, rt0.c1 UNION SELECT ALL rt0.c2, t0.c90, rt0.c1 FROM rt0, t0 WHERE ((NOT (NULL))) GROUP BY rt0.c2, t0.c90, rt0.c1 UNION SELECT rt0.c2, t0.c90, rt0.c1 FROM rt0, t0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c2, t0.c90, rt0.c1;
SELECT ALL rt0.c2, t0.c90, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, t0.c90, rt0.c1;
SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0 FROM rt0, t0 NOT INDEXED GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0 FROM rt0, t0 NOT INDEXED GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0;
SELECT * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE ((~ (((((rt0.c2)AND(x'')))OR(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT ((~ (((((rt0.c2)AND(x'')))OR(rt0.c2))))))) UNION ALL SELECT * FROM rt0, t0 WHERE ((((~ (((((rt0.c2)AND(x'')))OR(rt0.c2))))) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON ((((((((CAST(t0.c90 AS NUMERIC))OR((((t0.c90)) NOT BETWEEN ((rt0.c1)) AND (('L5dn^''v3Q'))))))OR(x'')))AND(t0.c90)))AND(NULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON ((((((((CAST(t0.c90 AS NUMERIC))OR((((t0.c90)) NOT BETWEEN ((rt0.c1)) AND (('L5dn^''v3Q'))))))OR(x'')))AND(t0.c90)))AND(NULL)) WHERE (((t0.c90)AND(CAST(rt0.c2 AS TEXT)))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON ((((((((CAST(t0.c90 AS NUMERIC))OR((((t0.c90)) NOT BETWEEN ((rt0.c1)) AND (('L5dn^''v3Q'))))))OR(x'')))AND(t0.c90)))AND(NULL)) WHERE ((NOT (((t0.c90)AND(CAST(rt0.c2 AS TEXT)))))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON ((((((((CAST(t0.c90 AS NUMERIC))OR((((t0.c90)) NOT BETWEEN ((rt0.c1)) AND (('L5dn^''v3Q'))))))OR(x'')))AND(t0.c90)))AND(NULL)) WHERE (((((t0.c90)AND(CAST(rt0.c2 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON ((((((((CAST(t0.c90 AS NUMERIC))OR((((t0.c90)) NOT BETWEEN ((rt0.c1)) AND (('L5dn^''v3Q'))))))OR(x'')))AND(t0.c90)))AND(NULL));
SELECT ALL rt0.c1, rt0.c0, t0.c90 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c1, rt0.c0, t0.c90;
SELECT ALL rt0.c1, rt0.c0, t0.c90 FROM rt0 NATURAL JOIN t0 WHERE (((((((rt0.c0) BETWEEN (rt0.c2) AND (t0.c90)))OR(rt0.c1 COLLATE RTRIM)))OR(((t0.c90) BETWEEN (rt0.c2) AND (rt0.c0))))) GROUP BY rt0.c1, rt0.c0, t0.c90 UNION SELECT rt0.c1, rt0.c0, t0.c90 FROM rt0 NATURAL JOIN t0 WHERE ((NOT (((((((rt0.c0) BETWEEN (rt0.c2) AND (t0.c90)))OR(rt0.c1 COLLATE RTRIM)))OR(((t0.c90) BETWEEN (rt0.c2) AND (rt0.c0))))))) GROUP BY rt0.c1, rt0.c0, t0.c90 UNION SELECT rt0.c1, rt0.c0, t0.c90 FROM rt0 NATURAL JOIN t0 WHERE (((((((((rt0.c0) BETWEEN (rt0.c2) AND (t0.c90)))OR(rt0.c1 COLLATE RTRIM)))OR(((t0.c90) BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, t0.c90;
SELECT ALL rt0.c1, rt0.c0, t0.c90 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c1, rt0.c0, t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING CASE WHEN COUNT(*) THEN GROUP_CONCAT(TOTAL(t0.c90)) END UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (CASE WHEN COUNT(*) THEN GROUP_CONCAT(TOTAL(t0.c90)) END)) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((CASE WHEN COUNT(*) THEN GROUP_CONCAT(TOTAL(t0.c90)) END) ISNULL);
SELECT t0.c90 FROM t0;
SELECT ALL t0.c90 FROM t0 WHERE (CAST((((t0.c90, t0.c90, t0.c90))=((t0.c90, t0.c90, t0.c90))) AS TEXT)) UNION ALL SELECT t0.c90 FROM t0 WHERE ((NOT (CAST((((t0.c90, t0.c90, t0.c90))==((t0.c90, t0.c90, t0.c90))) AS TEXT)))) UNION ALL SELECT ALL t0.c90 FROM t0 WHERE (((CAST((((t0.c90, t0.c90, t0.c90))==((t0.c90, t0.c90, t0.c90))) AS TEXT)) ISNULL));
SELECT t0.c90 FROM t0;
SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON ((((((((((((((t0.c90)IS NOT(t0.c90)))OR(0.7335666193380089)))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)))OR((((((((('-1641664050')AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))))OR(rt0.c1)))OR(NULLIF(DISTINCT t0.c90, rt0.c2))))AND((NOT (rt0.c2))));
SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON ((((((((((((((t0.c90)IS NOT(t0.c90)))OR(0.7335666193380089)))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)))OR((((((((('-1641664050')AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))))OR(rt0.c1)))OR(NULLIF(DISTINCT t0.c90, rt0.c2))))AND((NOT (rt0.c2)))) WHERE (load_extension(CASE WHEN rt0.c0 THEN t0.c90 END)) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON ((((((((((((((t0.c90)IS NOT(t0.c90)))OR(0.7335666193380089)))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)))OR((((((((('-1641664050')AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))))OR(rt0.c1)))OR(NULLIF(DISTINCT t0.c90, rt0.c2))))AND((NOT (rt0.c2)))) WHERE ((NOT (load_extension(CASE WHEN rt0.c0 THEN t0.c90 END)))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON ((((((((((((((t0.c90)IS NOT(t0.c90)))OR(0.7335666193380089)))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)))OR((((((((('-1641664050')AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))))OR(rt0.c1)))OR(NULLIF(DISTINCT t0.c90, rt0.c2))))AND((NOT (rt0.c2)))) WHERE (((load_extension(CASE WHEN rt0.c0 THEN t0.c90 END)) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON ((((((((((((((t0.c90)IS NOT(t0.c90)))OR(0.7335666193380089)))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)))OR((((((((('-1641664050')AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))))OR(rt0.c1)))OR(NULLIF(DISTINCT t0.c90, rt0.c2))))AND((NOT (rt0.c2))));
SELECT ALL rt0.c2, t0.c90, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c90, rt0.c1;
SELECT rt0.c2, t0.c90, rt0.c1 FROM t0, rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN (TYPEOF(rt0.c0)) AND (HEX(DISTINCT t0.c90)))) GROUP BY rt0.c2, t0.c90, rt0.c1 UNION SELECT ALL rt0.c2, t0.c90, rt0.c1 FROM t0, rt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN (TYPEOF(rt0.c0)) AND (HEX(DISTINCT t0.c90)))))) GROUP BY rt0.c2, t0.c90, rt0.c1 UNION SELECT rt0.c2, t0.c90, rt0.c1 FROM t0, rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN (TYPEOF(rt0.c0)) AND (HEX(DISTINCT t0.c90)))) ISNULL)) GROUP BY rt0.c2, t0.c90, rt0.c1;
SELECT ALL rt0.c2, t0.c90, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c90, rt0.c1;
SELECT ALL rt0.c2 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c2 HAVING MAX(TOTAL(SUM(rt0.c1))) UNION ALL SELECT rt0.c2 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c2 HAVING (NOT (MAX(TOTAL(SUM(rt0.c1))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c2 HAVING ((MAX(TOTAL(SUM(rt0.c1)))) ISNULL);
SELECT ALL rt0.c2 FROM rt0, t0;
SELECT ALL rt0.c2 FROM rt0, t0 WHERE ((((- (rt0.c2)))>=((t0.c90 IN ())))) UNION ALL SELECT rt0.c2 FROM rt0, t0 WHERE ((NOT ((((- (rt0.c2)))>=((t0.c90 IN ())))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, t0 WHERE ((((((- (rt0.c2)))>=((t0.c90 IN ())))) ISNULL));
SELECT ALL rt0.c2 FROM rt0, t0;
SELECT DISTINCT t0.c90 FROM t0;
SELECT DISTINCT t0.c90 FROM t0 WHERE (((CASE t0.c90  WHEN t0.c90 THEN t0.c90 END) NOT BETWEEN (((t0.c90) ISNULL)) AND (CAST(t0.c90 AS TEXT)))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE ((NOT (((CASE t0.c90  WHEN t0.c90 THEN t0.c90 END) NOT BETWEEN (((t0.c90) ISNULL)) AND (CAST(t0.c90 AS TEXT)))))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE (((((CASE t0.c90  WHEN t0.c90 THEN t0.c90 END) NOT BETWEEN (((t0.c90) ISNULL)) AND (CAST(t0.c90 AS TEXT)))) ISNULL));
SELECT DISTINCT t0.c90 FROM t0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c1))>((CAST(rt0.c1 AS TEXT))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1))>((CAST(rt0.c1 AS TEXT))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c1))>((CAST(rt0.c1 AS TEXT))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON ((((((((((((t0.c90)AND(t0.c90)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)) COLLATE RTRIM GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON ((((((((((((t0.c90)AND(t0.c90)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)) COLLATE RTRIM GROUP BY rt0.c1 HAVING AVG(TOTAL(SUM(t0.c90))) UNION ALL SELECT ALL rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON ((((((((((((t0.c90)AND(t0.c90)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)) COLLATE RTRIM GROUP BY rt0.c1 HAVING (NOT (AVG(TOTAL(SUM(t0.c90))))) UNION ALL SELECT ALL rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON ((((((((((((t0.c90)AND(t0.c90)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)) COLLATE RTRIM GROUP BY rt0.c1 HAVING ((AVG(TOTAL(SUM(t0.c90)))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c0))<((rt0.c0)))) BETWEEN (x'') AND (CAST(0.48227211451309826 AS INTEGER)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c0))<((rt0.c0)))) BETWEEN (x'') AND (CAST(0.48227211451309826 AS INTEGER)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((rt0.c0))<((rt0.c0)))) BETWEEN (x'') AND (CAST(0.48227211451309826 AS INTEGER)))) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (((('0.18715233155229838')%(rt0.c2)))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (((('0.18715233155229838')%(rt0.c2)))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (((('0.18715233155229838')%(rt0.c2)))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c0) BETWEEN (rt0.c1) AND ('0.40403236363870554'))) NOT BETWEEN ('382562985') AND (((rt0.c2)-(t0.c90)))) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c0) BETWEEN (rt0.c1) AND ('0.40403236363870554'))) NOT BETWEEN ('382562985') AND (((rt0.c2)-(t0.c90)))) GROUP BY rt0.c0 HAVING (+ (NULL)) UNION ALL SELECT rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c0) BETWEEN (rt0.c1) AND ('0.40403236363870554'))) NOT BETWEEN ('382562985') AND (((rt0.c2)-(t0.c90)))) GROUP BY rt0.c0 HAVING (NOT ((+ (NULL)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c0) BETWEEN (rt0.c1) AND ('0.40403236363870554'))) NOT BETWEEN ('382562985') AND (((rt0.c2)-(t0.c90)))) GROUP BY rt0.c0 HAVING (((+ (NULL))) ISNULL);
SELECT rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c0) BETWEEN (rt0.c1) AND ('0.40403236363870554'))) NOT BETWEEN ('382562985') AND (((rt0.c2)-(t0.c90)))) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c0) BETWEEN (rt0.c1) AND ('0.40403236363870554'))) NOT BETWEEN ('382562985') AND (((rt0.c2)-(t0.c90)))) GROUP BY rt0.c0 HAVING (+ (NULL)) UNION ALL SELECT rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c0) BETWEEN (rt0.c1) AND ('0.40403236363870554'))) NOT BETWEEN ('382562985') AND (((rt0.c2)-(t0.c90)))) GROUP BY rt0.c0 HAVING (NOT ((+ (NULL)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c0) BETWEEN (rt0.c1) AND ('0.40403236363870554'))) NOT BETWEEN ('382562985') AND (((rt0.c2)-(t0.c90)))) GROUP BY rt0.c0 HAVING (((+ (NULL))) ISNULL);
SELECT rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c0) BETWEEN (rt0.c1) AND ('0.40403236363870554'))) NOT BETWEEN ('382562985') AND (((rt0.c2)-(t0.c90)))) GROUP BY rt0.c0;
SELECT SUM(((COALESCE(rt0.c2, rt0.c2)) BETWEEN (((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))) AND ((NOT (rt0.c1))))) FROM rt0 NOT INDEXED;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (t0.c90 COLLATE RTRIM) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (t0.c90 COLLATE RTRIM))) UNION ALL SELECT * FROM t0 WHERE (((t0.c90 COLLATE RTRIM) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((GLOB(-1515879668, rt0.c1)) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((GLOB(-1515879668, rt0.c1)) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((GLOB(-1515879668, rt0.c1)) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT rt0.c2, t0.c90, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c90, rt0.c1;
SELECT rt0.c2, t0.c90, rt0.c1 FROM t0, rt0 WHERE ((((((((x'a0ac', rt0.c2, t0.c90))<>((rt0.c2, rt0.c0, '0.9352451379523099'))))AND(IFNULL(t0.c90, rt0.c1))))AND(CASE t0.c90  WHEN NULL THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE t0.c90 END))) GROUP BY rt0.c2, t0.c90, rt0.c1 UNION SELECT ALL rt0.c2, t0.c90, rt0.c1 FROM t0, rt0 WHERE ((NOT ((((((((x'a0ac', rt0.c2, t0.c90))<>((rt0.c2, rt0.c0, '0.9352451379523099'))))AND(IFNULL(t0.c90, rt0.c1))))AND(CASE t0.c90  WHEN NULL THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE t0.c90 END))))) GROUP BY rt0.c2, t0.c90, rt0.c1 UNION SELECT ALL rt0.c2, t0.c90, rt0.c1 FROM t0, rt0 WHERE ((((((((((x'a0ac', rt0.c2, t0.c90))<>((rt0.c2, rt0.c0, '0.9352451379523099'))))AND(IFNULL(t0.c90, rt0.c1))))AND(CASE t0.c90  WHEN NULL THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE t0.c90 END))) ISNULL)) GROUP BY rt0.c2, t0.c90, rt0.c1;
SELECT rt0.c2, t0.c90, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c90, rt0.c1;
SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING CASE MIN(AVG(COUNT(MIN(rt0.c0))))  WHEN TOTAL('2067783470') THEN SUM(SUM(MIN(TOTAL(rt0.c1)))) END UNION ALL SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING (NOT (CASE MIN(AVG(COUNT(MIN(rt0.c0))))  WHEN TOTAL('2067783470') THEN SUM(SUM(MIN(TOTAL(rt0.c1)))) END)) UNION ALL SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING ((CASE MIN(AVG(COUNT(MIN(rt0.c0))))  WHEN TOTAL('2067783470') THEN SUM(SUM(MIN(TOTAL(rt0.c1)))) END) ISNULL);
SELECT MIN(((CASE WHEN rt0.c1 THEN rt0.c0 END)/(((t0.c90)>=(rt0.c0))))) FROM rt0, t0 ORDER BY rt0.c0 DESC;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c0 IN ())) NOT NULL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c0 IN ())) NOT NULL)))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c0 IN ())) NOT NULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM t0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM t0, rt0 WHERE (NULLIF(DISTINCT rt0.c2, rt0.c2) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((NOT (NULLIF(DISTINCT rt0.c2, rt0.c2) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM t0, rt0 WHERE (((NULLIF(DISTINCT rt0.c2, rt0.c2) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM t0, rt0;
SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM t0, rt0 WHERE (t0.c90) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM t0, rt0 NOT INDEXED WHERE ((NOT (t0.c90))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM t0, rt0 WHERE (((t0.c90) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(*))>>(SUM(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (((COUNT(*))>>(SUM(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((COUNT(*))>>(SUM(rt0.c1)))) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(*))>>(SUM(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (((COUNT(*))>>(SUM(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((COUNT(*))>>(SUM(rt0.c1)))) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c0)))||(((t0.c90) NOT BETWEEN (rt0.c2) AND (t0.c90))));
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c0)))||(((t0.c90) NOT BETWEEN (rt0.c2) AND (t0.c90)))) WHERE (((((t0.c90) NOT BETWEEN (t0.c90) AND (rt0.c0)))AND(((x'')LIKE(t0.c90))))) UNION ALL SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c0)))||(((t0.c90) NOT BETWEEN (rt0.c2) AND (t0.c90)))) WHERE ((NOT (((((t0.c90) NOT BETWEEN (t0.c90) AND (rt0.c0)))AND(((x'')LIKE(t0.c90))))))) UNION ALL SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c0)))||(((t0.c90) NOT BETWEEN (rt0.c2) AND (t0.c90)))) WHERE (((((((t0.c90) NOT BETWEEN (t0.c90) AND (rt0.c0)))AND(((x'')LIKE(t0.c90))))) ISNULL));
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c0)))||(((t0.c90) NOT BETWEEN (rt0.c2) AND (t0.c90))));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2)) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((NOT (rt0.c2)) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((NOT (rt0.c2)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM t0, rt0 WHERE (CASE CAST(rt0.c0 AS TEXT)  WHEN (((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((NULL, t0.c90, rt0.c0)) AND ((rt0.c2, t0.c90, rt0.c1))) THEN ((rt0.c0) IS TRUE) ELSE ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(t0.c90)))OR(rt0.c0)) END) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM t0, rt0 WHERE ((NOT (CASE CAST(rt0.c0 AS TEXT)  WHEN (((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((NULL, t0.c90, rt0.c0)) AND ((rt0.c2, t0.c90, rt0.c1))) THEN ((rt0.c0) IS TRUE) ELSE ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(t0.c90)))OR(rt0.c0)) END))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM t0, rt0 WHERE (((CASE CAST(rt0.c0 AS TEXT)  WHEN (((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((NULL, t0.c90, rt0.c0)) AND ((rt0.c2, t0.c90, rt0.c1))) THEN ((rt0.c0) IS TRUE) ELSE ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(t0.c90)))OR(rt0.c0)) END) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING AVG(COUNT(*)) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL t0.c90 FROM t0, rt0;
SELECT ALL t0.c90 FROM t0, rt0 WHERE (((((rt0.c2) IS TRUE))*(t0.c90))) UNION ALL SELECT ALL t0.c90 FROM t0, rt0 WHERE ((NOT (((((rt0.c2) IS TRUE))*(t0.c90))))) UNION ALL SELECT t0.c90 FROM t0, rt0 WHERE (((((((rt0.c2) IS TRUE))*(t0.c90))) ISNULL));
SELECT ALL t0.c90 FROM t0, rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((rt0.c1 IN ())) NOTNULL)) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1 IN ())) NOTNULL)))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((rt0.c1 IN ())) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c1 END IN ())) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((CASE WHEN rt0.c1 THEN rt0.c1 END IN ())))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c1 END IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON (NOT (((t0.c90)!=(t0.c90)))) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON (NOT (((t0.c90)<>(t0.c90)))) GROUP BY rt0.c2 HAVING ((SUM(TOTAL(SUM(rt0.c2))))IS(SUM(rt0.c2))) UNION ALL SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON (NOT (((t0.c90)!=(t0.c90)))) GROUP BY rt0.c2 HAVING (NOT (((SUM(TOTAL(SUM(rt0.c2))))IS(SUM(rt0.c2))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON (NOT (((t0.c90)<>(t0.c90)))) GROUP BY rt0.c2 HAVING ((((SUM(TOTAL(SUM(rt0.c2))))IS(SUM(rt0.c2)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c90 FROM rt0, t0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c90 FROM rt0, t0 WHERE (((CAST(rt0.c0 AS TEXT))LIKE((((rt0.c2))==((rt0.c1)))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, t0.c90 FROM rt0, t0 WHERE ((NOT (((CAST(rt0.c0 AS TEXT))LIKE((((rt0.c2))==((rt0.c1)))))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, t0.c90 FROM rt0, t0 WHERE (((((CAST(rt0.c0 AS TEXT))LIKE((((rt0.c2))==((rt0.c1)))))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c90 FROM rt0, t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1)|(((((rt0.c1)OR(rt0.c0)))AND(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1)|(((((rt0.c1)OR(rt0.c0)))AND(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)|(((((rt0.c1)OR(rt0.c0)))AND(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, t0.c90, rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c90, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, t0.c90, rt0.c1, rt0.c2 FROM rt0, t0 WHERE ((+ (LIKELIHOOD(rt0.c2, 0.2003871248303133)))) GROUP BY rt0.c0, t0.c90, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, t0.c90, rt0.c1, rt0.c2 FROM rt0, t0 WHERE ((NOT ((+ (LIKELIHOOD(rt0.c2, 0.2003871248303133)))))) GROUP BY rt0.c0, t0.c90, rt0.c1, rt0.c2 UNION SELECT rt0.c0, t0.c90, rt0.c1, rt0.c2 FROM rt0, t0 WHERE ((((+ (LIKELIHOOD(rt0.c2, 0.2003871248303133)))) ISNULL)) GROUP BY rt0.c0, t0.c90, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, t0.c90, rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c90, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING MIN(MIN(GROUP_CONCAT(rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (MIN(MIN(GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((MIN(MIN(GROUP_CONCAT(rt0.c1)))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM t0, rt0 NOT INDEXED;
SELECT rt0.c2, rt0.c0 FROM t0, rt0 WHERE (rt0.c1) UNION ALL SELECT rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM t0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT rt0.c2, rt0.c0 FROM t0, rt0 NOT INDEXED;
SELECT DISTINCT rt0.c1, rt0.c0 FROM t0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((((((rt0.c2) NOTNULL)))>=(((rt0.c2 IN ()))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((NOT ((((((rt0.c2) NOTNULL)))>=(((rt0.c2 IN ()))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((((((((rt0.c2) NOTNULL)))>=(((rt0.c2 IN ()))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM t0, rt0;
SELECT rt0.c1 FROM t0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM t0, rt0 WHERE (((((rt0.c0) ISNULL))||(rt0.c1 COLLATE NOCASE))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM t0, rt0 WHERE ((NOT (((((rt0.c0) ISNULL))||(rt0.c1 COLLATE NOCASE))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM t0, rt0 WHERE (((((((rt0.c0) ISNULL))||(rt0.c1 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM t0, rt0 GROUP BY rt0.c1;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING AVG(((TOTAL(MIN(MAX(COUNT(t0.c90)))))-(MIN(TOTAL(MAX(MIN(t0.c90))))))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (AVG(((TOTAL(MIN(MAX(COUNT(t0.c90)))))-(MIN(TOTAL(MAX(MIN(t0.c90))))))))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((AVG(((TOTAL(MIN(MAX(COUNT(t0.c90)))))-(MIN(TOTAL(MAX(MIN(t0.c90)))))))) ISNULL);
SELECT t0.c90 FROM t0;
SELECT t0.c90 FROM t0 WHERE (CAST(t0.c90 AS BLOB) COLLATE NOCASE) UNION ALL SELECT ALL t0.c90 FROM t0 WHERE ((NOT (CAST(t0.c90 AS BLOB) COLLATE NOCASE))) UNION ALL SELECT ALL t0.c90 FROM t0 WHERE (((CAST(t0.c90 AS BLOB) COLLATE NOCASE) ISNULL));
SELECT t0.c90 FROM t0;
SELECT DISTINCT rt0.c0, rt0.c1, t0.c90 FROM rt0, t0;
SELECT DISTINCT rt0.c0, rt0.c1, t0.c90 FROM rt0, t0 WHERE (CASE (+ (rt0.c2))  WHEN (+ (rt0.c2)) THEN (NOT (t0.c90)) WHEN (((t0.c90, rt0.c1, rt0.c0))==((NULL, rt0.c2, t0.c90))) THEN CASE rt0.c1  WHEN t0.c90 THEN NULL END WHEN ((rt0.c0)&(rt0.c1)) THEN rt0.c0 COLLATE RTRIM END) UNION SELECT DISTINCT rt0.c0, rt0.c1, t0.c90 FROM rt0, t0 WHERE ((NOT (CASE (+ (rt0.c2))  WHEN (+ (rt0.c2)) THEN (NOT (t0.c90)) WHEN (((t0.c90, rt0.c1, rt0.c0))==((NULL, rt0.c2, t0.c90))) THEN CASE rt0.c1  WHEN t0.c90 THEN NULL END WHEN ((rt0.c0)&(rt0.c1)) THEN rt0.c0 COLLATE RTRIM END))) UNION SELECT DISTINCT rt0.c0, rt0.c1, t0.c90 FROM rt0, t0 WHERE (((CASE (+ (rt0.c2))  WHEN (+ (rt0.c2)) THEN (NOT (t0.c90)) WHEN (((t0.c90, rt0.c1, rt0.c0))=((NULL, rt0.c2, t0.c90))) THEN CASE rt0.c1  WHEN t0.c90 THEN NULL END WHEN ((rt0.c0)&(rt0.c1)) THEN rt0.c0 COLLATE RTRIM END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, t0.c90 FROM rt0, t0;
SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM t0, rt0 WHERE (t0.c90) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM t0, rt0 WHERE ((NOT (t0.c90))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM t0, rt0 WHERE (((t0.c90) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING SUM(t0.c90) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (SUM(t0.c90))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((SUM(t0.c90)) ISNULL);
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING SUM(t0.c90) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (SUM(t0.c90))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((SUM(t0.c90)) ISNULL);
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE ((+ (((((x'5a29')AND(rt0.c2)))OR(t0.c90))))) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT ((+ (((((x'5a29')AND(rt0.c2)))OR(t0.c90))))))) UNION ALL SELECT * FROM rt0, t0 WHERE ((((+ (((((x'5a29')AND(rt0.c2)))OR(t0.c90))))) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT t0.c90 FROM t0;
SELECT DISTINCT t0.c90 FROM t0 WHERE (((t0.c90 COLLATE NOCASE)&(0.6480657307499871))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE ((NOT (((t0.c90 COLLATE NOCASE)&(0.6480657307499871))))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE (((((t0.c90 COLLATE NOCASE)&(0.6480657307499871))) ISNULL));
SELECT DISTINCT t0.c90 FROM t0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c90 FROM t0 FULL OUTER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (x'f48e') AND (rt0.c0))) BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (t0.c90))) AND (rt0.c1 COLLATE RTRIM)) GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c90;
SELECT rt0.c1, rt0.c0, rt0.c2, t0.c90 FROM t0 FULL OUTER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (x'f48e') AND (rt0.c0))) BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (t0.c90))) AND (rt0.c1 COLLATE RTRIM)) WHERE (((((((-1849224061)>>(rt0.c1)))AND(((rt0.c2)%(rt0.c0)))))OR(((t0.c90) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c90 UNION SELECT rt0.c1, rt0.c0, rt0.c2, t0.c90 FROM t0 FULL OUTER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (x'f48e') AND (rt0.c0))) BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (t0.c90))) AND (rt0.c1 COLLATE RTRIM)) WHERE ((NOT (((((((-1849224061)>>(rt0.c1)))AND(((rt0.c2)%(rt0.c0)))))OR(((t0.c90) NOT BETWEEN (rt0.c1) AND (rt0.c2))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c90 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c90 FROM t0 FULL OUTER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (x'f48e') AND (rt0.c0))) BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (t0.c90))) AND (rt0.c1 COLLATE RTRIM)) WHERE (((((((((-1849224061)>>(rt0.c1)))AND(((rt0.c2)%(rt0.c0)))))OR(((t0.c90) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c90;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c90 FROM t0 FULL OUTER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (x'f48e') AND (rt0.c0))) BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (t0.c90))) AND (rt0.c1 COLLATE RTRIM)) GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c90;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING CAST(((GROUP_CONCAT(TOTAL(rt0.c1))) NOT BETWEEN (rt0.c2) AND (rt0.c1)) AS NUMERIC) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (CAST(((GROUP_CONCAT(TOTAL(rt0.c1))) NOT BETWEEN (rt0.c2) AND (rt0.c1)) AS NUMERIC))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CAST(((GROUP_CONCAT(TOTAL(rt0.c1))) NOT BETWEEN (rt0.c2) AND (rt0.c1)) AS NUMERIC)) ISNULL);
SELECT MIN(json_array_length(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), (rt0.c2 IN (rt0.c0, rt0.c0)))) FROM rt0 ORDER BY ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))<<(rt0.c1 COLLATE BINARY)) DESC;
SELECT rt0.c0, rt0.c1, t0.c90, rt0.c2 FROM rt0, t0;
SELECT ALL rt0.c0, rt0.c1, t0.c90, rt0.c2 FROM rt0, t0 WHERE ((((((rt0.c1 IN (rt0.c1, rt0.c2)))AND(((rt0.c1)<>(rt0.c2)))))AND((+ (t0.c90))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, t0.c90, rt0.c2 FROM rt0, t0 WHERE ((NOT ((((((rt0.c1 IN (rt0.c1, rt0.c2)))AND(((rt0.c1)<>(rt0.c2)))))AND((+ (t0.c90))))))) UNION ALL SELECT rt0.c0, rt0.c1, t0.c90, rt0.c2 FROM rt0, t0 WHERE ((((((((rt0.c1 IN (rt0.c1, rt0.c2)))AND(((rt0.c1)!=(rt0.c2)))))AND((+ (t0.c90))))) ISNULL));
SELECT rt0.c0, rt0.c1, t0.c90, rt0.c2 FROM rt0, t0;
SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON ((((rt0.c0, t0.c90, rt0.c2))<((rt0.c2, rt0.c0, x''))) IN ());
SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON ((((rt0.c0, t0.c90, rt0.c2))<((rt0.c2, rt0.c0, x''))) IN ()) WHERE (((((rt0.c0) NOT NULL))IS(((rt0.c2)&(0Xffffffff92c178e5))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON ((((rt0.c0, t0.c90, rt0.c2))<((rt0.c2, rt0.c0, x''))) IN ()) WHERE ((NOT (((((rt0.c0) NOT NULL))IS(((rt0.c2)&(0xffffffff92c178e5))))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON ((((rt0.c0, t0.c90, rt0.c2))<((rt0.c2, rt0.c0, x''))) IN ()) WHERE (((((((rt0.c0) NOT NULL))IS(((rt0.c2)&(0Xffffffff92c178e5))))) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON ((((rt0.c0, t0.c90, rt0.c2))<((rt0.c2, rt0.c0, x''))) IN ());
SELECT rt0.c0, t0.c90, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, t0.c90, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, t0.c90, rt0.c1, rt0.c2 FROM t0, rt0 WHERE (((((rt0.c0) NOT BETWEEN (t0.c90) AND (rt0.c0))) NOT NULL)) GROUP BY rt0.c0, t0.c90, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, t0.c90, rt0.c1, rt0.c2 FROM t0, rt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (t0.c90) AND (rt0.c0))) NOT NULL)))) GROUP BY rt0.c0, t0.c90, rt0.c1, rt0.c2 UNION SELECT rt0.c0, t0.c90, rt0.c1, rt0.c2 FROM t0, rt0 WHERE (((((((rt0.c0) NOT BETWEEN (t0.c90) AND (rt0.c0))) NOT NULL)) ISNULL)) GROUP BY rt0.c0, t0.c90, rt0.c1, rt0.c2;
SELECT rt0.c0, t0.c90, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, t0.c90, rt0.c1, rt0.c2;
SELECT t0.c90, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c90, rt0.c1, rt0.c2;
SELECT t0.c90, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c90, rt0.c1, rt0.c2 HAVING COUNT(TOTAL(COUNT(t0.c90))) UNION ALL SELECT t0.c90, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c90, rt0.c1, rt0.c2 HAVING (NOT (COUNT(TOTAL(COUNT(t0.c90))))) UNION ALL SELECT t0.c90, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c90, rt0.c1, rt0.c2 HAVING ((COUNT(TOTAL(COUNT(t0.c90)))) ISNULL);
SELECT rt0.c0, t0.c90, rt0.c1 FROM rt0, t0;
SELECT ALL rt0.c0, t0.c90, rt0.c1 FROM rt0, t0 WHERE (CAST(rt0.c1 COLLATE BINARY AS REAL)) UNION ALL SELECT ALL rt0.c0, t0.c90, rt0.c1 FROM rt0, t0 WHERE ((NOT (CAST(rt0.c1 COLLATE BINARY AS REAL)))) UNION ALL SELECT rt0.c0, t0.c90, rt0.c1 FROM rt0, t0 WHERE (((CAST(rt0.c1 COLLATE BINARY AS REAL)) ISNULL));
SELECT rt0.c0, t0.c90, rt0.c1 FROM rt0, t0;
SELECT DISTINCT rt0.c2, t0.c90, rt0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c2, t0.c90, rt0.c0 FROM rt0, t0 WHERE (((NULL)*(rt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2, t0.c90, rt0.c0 FROM rt0, t0 WHERE ((NOT (((NULL)*(rt0.c2 COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c2, t0.c90, rt0.c0 FROM rt0, t0 WHERE (((((NULL)*(rt0.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c2, t0.c90, rt0.c0 FROM rt0, t0;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 WHERE (CAST(t0.c90 AS REAL) COLLATE BINARY) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE ((NOT (CAST(t0.c90 AS REAL) COLLATE BINARY))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE (((CAST(t0.c90 AS REAL) COLLATE BINARY) ISNULL)) GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM rt0, t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM rt0, t0 GROUP BY t0.c90 HAVING (AVG(t0.c90) IN (CAST(rt0.c2 AS BLOB))) UNION ALL SELECT ALL t0.c90 FROM rt0, t0 GROUP BY t0.c90 HAVING (NOT ((AVG(t0.c90) IN (CAST(rt0.c2 AS BLOB))))) UNION ALL SELECT t0.c90 FROM rt0, t0 GROUP BY t0.c90 HAVING (((AVG(t0.c90) IN (CAST(rt0.c2 AS BLOB)))) ISNULL);
SELECT ALL t0.c90 FROM rt0, t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM rt0, t0 GROUP BY t0.c90 HAVING (AVG(t0.c90) IN (CAST(rt0.c2 AS BLOB))) UNION ALL SELECT ALL t0.c90 FROM rt0, t0 GROUP BY t0.c90 HAVING (NOT ((AVG(t0.c90) IN (CAST(rt0.c2 AS BLOB))))) UNION ALL SELECT t0.c90 FROM rt0, t0 GROUP BY t0.c90 HAVING (((AVG(t0.c90) IN (CAST(rt0.c2 AS BLOB)))) ISNULL);
SELECT ALL t0.c90 FROM rt0, t0 GROUP BY t0.c90;
SELECT * FROM rt0 INNER JOIN t0 ON (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))||(((t0.c90)GLOB(x''))));
SELECT ALL * FROM rt0 INNER JOIN t0 ON (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))||(((t0.c90)GLOB(x'')))) WHERE (CAST(((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c0)) AS REAL)) UNION ALL SELECT * FROM rt0 INNER JOIN t0 ON (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))||(((t0.c90)GLOB(x'')))) WHERE ((NOT (CAST(((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c0)) AS REAL)))) UNION ALL SELECT * FROM rt0 INNER JOIN t0 ON (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))||(((t0.c90)GLOB(x'')))) WHERE (((CAST(((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c0)) AS REAL)) ISNULL));
SELECT * FROM rt0 INNER JOIN t0 ON (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))||(((t0.c90)GLOB(x''))));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN t0.c90 THEN t0.c90 COLLATE RTRIM ELSE CASE WHEN t0.c90 THEN t0.c90 WHEN t0.c90 THEN t0.c90 WHEN t0.c90 THEN t0.c90 END END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE WHEN t0.c90 THEN t0.c90 COLLATE RTRIM ELSE CASE WHEN t0.c90 THEN t0.c90 WHEN t0.c90 THEN t0.c90 WHEN t0.c90 THEN t0.c90 END END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN t0.c90 THEN t0.c90 COLLATE RTRIM ELSE CASE WHEN t0.c90 THEN t0.c90 WHEN t0.c90 THEN t0.c90 WHEN t0.c90 THEN t0.c90 END END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c1)>=(rt0.c0)) IN ())) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1)>=(rt0.c0)) IN ())))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c1)>=(rt0.c0)) IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c2, t0.c90 FROM t0, rt0 GROUP BY rt0.c2, t0.c90;
SELECT ALL rt0.c2, t0.c90 FROM t0, rt0 GROUP BY rt0.c2, t0.c90 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL rt0.c2, t0.c90 FROM t0, rt0 GROUP BY rt0.c2, t0.c90 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT rt0.c2, t0.c90 FROM t0, rt0 GROUP BY rt0.c2, t0.c90 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT t0.c90, rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0;
SELECT ALL t0.c90, rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0 WHERE (x'') UNION ALL SELECT t0.c90, rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0 WHERE ((NOT (x''))) UNION ALL SELECT t0.c90, rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0 WHERE (((x'') ISNULL));
SELECT t0.c90, rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(LOWER(t0.c90) AS TEXT)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(LOWER(t0.c90) AS TEXT)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(LOWER(t0.c90) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 WHERE (((t0.c90) NOTNULL)) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE ((NOT (((t0.c90) NOTNULL)))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE (((((t0.c90) NOTNULL)) ISNULL)) GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING MIN(MIN(GROUP_CONCAT(t0.c90))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (MIN(MIN(GROUP_CONCAT(t0.c90))))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((MIN(MIN(GROUP_CONCAT(t0.c90)))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM t0, rt0;
SELECT rt0.c0, rt0.c2 FROM t0, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (((rt0.c1) ISNULL)) AND (CASE WHEN t0.c90 THEN NULL END))) UNION ALL SELECT rt0.c0, rt0.c2 FROM t0, rt0 WHERE ((NOT (((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (((rt0.c1) ISNULL)) AND (CASE WHEN t0.c90 THEN NULL END))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM t0, rt0 WHERE (((((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (((rt0.c1) ISNULL)) AND (CASE WHEN t0.c90 THEN NULL END))) ISNULL));
SELECT rt0.c0, rt0.c2 FROM t0, rt0;
SELECT DISTINCT rt0.c1 FROM t0, rt0;
SELECT DISTINCT rt0.c1 FROM t0, rt0 WHERE (((rt0.c1 IN ()) IN ())) UNION SELECT DISTINCT rt0.c1 FROM t0, rt0 WHERE ((NOT (((rt0.c1 IN ()) IN ())))) UNION SELECT DISTINCT rt0.c1 FROM t0, rt0 WHERE (((((rt0.c1 IN ()) IN ())) ISNULL));
SELECT DISTINCT rt0.c1 FROM t0, rt0;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 WHERE ((~ (((t0.c90)%(t0.c90))))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE ((NOT ((~ (((t0.c90)%(t0.c90))))))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE ((((~ (((t0.c90)%(t0.c90))))) ISNULL)) GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM rt0, t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM rt0, t0 GROUP BY t0.c90 HAVING GROUP_CONCAT(GROUP_CONCAT(COUNT(AVG(rt0.c1))) COLLATE RTRIM) UNION ALL SELECT t0.c90 FROM rt0, t0 GROUP BY t0.c90 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(COUNT(AVG(rt0.c1))) COLLATE RTRIM))) UNION ALL SELECT ALL t0.c90 FROM rt0, t0 GROUP BY t0.c90 HAVING ((GROUP_CONCAT(GROUP_CONCAT(COUNT(AVG(rt0.c1))) COLLATE RTRIM)) ISNULL);
SELECT rt0.c2 FROM t0, rt0;
SELECT ALL rt0.c2 FROM t0, rt0 WHERE (COALESCE(0X62752da1, t0.c90) COLLATE BINARY) UNION ALL SELECT rt0.c2 FROM t0, rt0 WHERE ((NOT (COALESCE(0x62752da1, t0.c90) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c2 FROM t0, rt0 WHERE (((COALESCE(0X62752da1, t0.c90) COLLATE BINARY) ISNULL));
SELECT rt0.c2 FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (((t0.c90)<<(rt0.c1)) COLLATE BINARY) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (((t0.c90)<<(rt0.c1)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((((t0.c90)<<(rt0.c1)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt0.c2, rt0.c1, t0.c90 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c90;
SELECT rt0.c2, rt0.c1, t0.c90 FROM rt0, t0 WHERE ((- (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) GROUP BY rt0.c2, rt0.c1, t0.c90 UNION SELECT ALL rt0.c2, rt0.c1, t0.c90 FROM rt0, t0 WHERE ((NOT ((- (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))))) GROUP BY rt0.c2, rt0.c1, t0.c90 UNION SELECT ALL rt0.c2, rt0.c1, t0.c90 FROM rt0, t0 WHERE ((((- (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, t0.c90;
SELECT ALL rt0.c2, rt0.c1, t0.c90 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c90;
SELECT ALL t0.c90, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c90, rt0.c0, rt0.c1;
SELECT ALL t0.c90, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c90, rt0.c0, rt0.c1 HAVING ((((((((MAX(AVG(MIN(rt0.c1))))AND(GROUP_CONCAT(MAX(MAX(MIN(rt0.c0)))))))OR(TOTAL(GROUP_CONCAT(rt0.c2)))))OR(COUNT(SUM(rt0.c0)) COLLATE BINARY)))AND(COUNT(*))) UNION ALL SELECT ALL t0.c90, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c90, rt0.c0, rt0.c1 HAVING (NOT (((((((((MAX(AVG(MIN(rt0.c1))))AND(GROUP_CONCAT(MAX(MAX(MIN(rt0.c0)))))))OR(TOTAL(GROUP_CONCAT(rt0.c2)))))OR(COUNT(SUM(rt0.c0)) COLLATE BINARY)))AND(COUNT(*))))) UNION ALL SELECT ALL t0.c90, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c90, rt0.c0, rt0.c1 HAVING ((((((((((MAX(AVG(MIN(rt0.c1))))AND(GROUP_CONCAT(MAX(MAX(MIN(rt0.c0)))))))OR(TOTAL(GROUP_CONCAT(rt0.c2)))))OR(COUNT(SUM(rt0.c0)) COLLATE BINARY)))AND(COUNT(*)))) ISNULL);
SELECT ALL SUM(('395620630' IN ())) FROM rt0;
SELECT ALL t0.c90 FROM t0;
SELECT t0.c90 FROM t0 WHERE (t0.c90) UNION ALL SELECT t0.c90 FROM t0 WHERE ((NOT (t0.c90))) UNION ALL SELECT ALL t0.c90 FROM t0 WHERE (((t0.c90) ISNULL));
SELECT ALL t0.c90 FROM t0;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt0 ON UPPER(DISTINCT rt0.c0 COLLATE BINARY);
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt0 ON UPPER(DISTINCT rt0.c0 COLLATE BINARY) WHERE (SQLITE_VERSION()) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt0 ON UPPER(DISTINCT rt0.c0 COLLATE BINARY) WHERE ((NOT (SQLITE_VERSION()))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt0 ON UPPER(DISTINCT rt0.c0 COLLATE BINARY) WHERE (((SQLITE_VERSION()) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt0 ON UPPER(DISTINCT rt0.c0 COLLATE BINARY);
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 WHERE ((((0xfffffffff6378c78, t0.c90, t0.c90)) NOT BETWEEN (((((t0.c90)) NOT BETWEEN ((t0.c90)) AND ((t0.c90))), NULL COLLATE NOCASE, ((((((((t0.c90)AND(t0.c90)))OR(t0.c90)))OR(1.872194626E9)))OR(t0.c90)))) AND ((((t0.c90) ISNULL), 1.85235283E8, ((t0.c90) NOT NULL))))) GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM t0 WHERE ((NOT ((((0xfffffffff6378c78, t0.c90, t0.c90)) NOT BETWEEN (((((t0.c90)) NOT BETWEEN ((t0.c90)) AND ((t0.c90))), NULL COLLATE NOCASE, ((((((((t0.c90)AND(t0.c90)))OR(t0.c90)))OR(1.872194626E9)))OR(t0.c90)))) AND ((((t0.c90) ISNULL), 1.85235283E8, ((t0.c90) NOT NULL))))))) GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM t0 WHERE ((((((0xfffffffff6378c78, t0.c90, t0.c90)) NOT BETWEEN (((((t0.c90)) NOT BETWEEN ((t0.c90)) AND ((t0.c90))), NULL COLLATE NOCASE, ((((((((t0.c90)AND(t0.c90)))OR(t0.c90)))OR(1.872194626E9)))OR(t0.c90)))) AND ((((t0.c90) ISNULL), 1.85235283E8, ((t0.c90) NOT NULL))))) ISNULL)) GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING SUM(COUNT(COUNT(COUNT(*)))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (SUM(COUNT(COUNT(COUNT(*)))))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((SUM(COUNT(COUNT(COUNT(*))))) ISNULL);
SELECT MAX(rt0.c2) FROM t0, rt0 ORDER BY (NOT (CAST(5.03986246E8 AS NUMERIC)));
SELECT * FROM rt0 NATURAL JOIN t0;
SELECT * FROM rt0 NATURAL JOIN t0 WHERE (' F!#qiw' COLLATE RTRIM) UNION ALL SELECT * FROM rt0 NATURAL JOIN t0 WHERE ((NOT (' F!#qiw' COLLATE RTRIM))) UNION ALL SELECT * FROM rt0 NATURAL JOIN t0 WHERE (((' F!#qiw' COLLATE RTRIM) ISNULL));
SELECT * FROM rt0 NATURAL JOIN t0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (0.5486480304226314) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (0.5486480304226314))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((0.5486480304226314) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 WHERE (rt0.c0) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING GROUP_CONCAT(AVG(COUNT(*))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (GROUP_CONCAT(AVG(COUNT(*))))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((GROUP_CONCAT(AVG(COUNT(*)))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((x'f59d')IS NOT(CAST(t0.c90 AS TEXT)))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((x'f59d')IS NOT(CAST(t0.c90 AS TEXT)))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((x'f59d')IS NOT(CAST(t0.c90 AS TEXT)))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (x'') UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM t0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, t0 WHERE (CAST(CASE rt0.c1  WHEN t0.c90 THEN rt0.c1 END AS TEXT)) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0, t0 WHERE ((NOT (CAST(CASE rt0.c1  WHEN t0.c90 THEN rt0.c1 END AS TEXT)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0, t0 WHERE (((CAST(CASE rt0.c1  WHEN t0.c90 THEN rt0.c1 END AS TEXT)) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c2, t0.c90, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, t0.c90, rt0.c1;
SELECT ALL rt0.c2, t0.c90, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, t0.c90, rt0.c1 HAVING AVG(LOWER(rt0.c0)) UNION ALL SELECT rt0.c2, t0.c90, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, t0.c90, rt0.c1 HAVING (NOT (AVG(LOWER(rt0.c0)))) UNION ALL SELECT rt0.c2, t0.c90, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, t0.c90, rt0.c1 HAVING ((AVG(LOWER(rt0.c0))) ISNULL);
SELECT ALL rt0.c2, t0.c90, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, t0.c90, rt0.c1;
SELECT ALL rt0.c2, t0.c90, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, t0.c90, rt0.c1 HAVING AVG(LOWER(rt0.c0)) UNION ALL SELECT rt0.c2, t0.c90, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, t0.c90, rt0.c1 HAVING (NOT (AVG(LOWER(rt0.c0)))) UNION ALL SELECT rt0.c2, t0.c90, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, t0.c90, rt0.c1 HAVING ((AVG(LOWER(rt0.c0))) ISNULL);
SELECT ALL rt0.c2, t0.c90, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, t0.c90, rt0.c1;
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c1)>=(rt0.c1))) BETWEEN (rt0.c0) AND (NULL COLLATE BINARY))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1)>=(rt0.c1))) BETWEEN (rt0.c0) AND (NULL COLLATE BINARY))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c1)>=(rt0.c1))) BETWEEN (rt0.c0) AND (NULL COLLATE BINARY))) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT t0.c90, rt0.c0, rt0.c2, rt0.c1 FROM t0 CROSS JOIN rt0 ON x'';
SELECT DISTINCT t0.c90, rt0.c0, rt0.c2, rt0.c1 FROM t0 CROSS JOIN rt0 ON x'' WHERE (x'' COLLATE BINARY) UNION SELECT DISTINCT t0.c90, rt0.c0, rt0.c2, rt0.c1 FROM t0 CROSS JOIN rt0 ON x'' WHERE ((NOT (x'' COLLATE BINARY))) UNION SELECT DISTINCT t0.c90, rt0.c0, rt0.c2, rt0.c1 FROM t0 CROSS JOIN rt0 ON x'' WHERE (((x'' COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c90, rt0.c0, rt0.c2, rt0.c1 FROM t0 CROSS JOIN rt0 ON x'';
SELECT rt0.c1, rt0.c0, rt0.c2, t0.c90 FROM rt0 INDEXED BY i58 INNER JOIN t0 ON ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))<<(0.5927948142031645)) GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c90;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING LIKELIHOOD(((COUNT(rt0.c2)) NOT BETWEEN (rt0.c0) AND (rt0.c0)), 0.552999404093185) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (LIKELIHOOD(((COUNT(rt0.c2)) NOT BETWEEN (rt0.c0) AND (rt0.c0)), 0.552999404093185))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((LIKELIHOOD(((COUNT(rt0.c2)) NOT BETWEEN (rt0.c0) AND (rt0.c0)), 0.552999404093185)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING LIKELIHOOD(((COUNT(rt0.c2)) NOT BETWEEN (rt0.c0) AND (rt0.c0)), 0.552999404093185) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (LIKELIHOOD(((COUNT(rt0.c2)) NOT BETWEEN (rt0.c0) AND (rt0.c0)), 0.552999404093185))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((LIKELIHOOD(((COUNT(rt0.c2)) NOT BETWEEN (rt0.c0) AND (rt0.c0)), 0.552999404093185)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM t0 FULL OUTER JOIN rt0 ON rt0.c1;
SELECT ALL rt0.c1, rt0.c2 FROM t0 FULL OUTER JOIN rt0 ON rt0.c1 WHERE (((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))LIKE(((((((((x'')OR(t0.c90)))OR(t0.c90)))OR(rt0.c0)))OR(x'0cb8'))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM t0 FULL OUTER JOIN rt0 ON rt0.c1 WHERE ((NOT (((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))LIKE(((((((((x'')OR(t0.c90)))OR(t0.c90)))OR(rt0.c0)))OR(x'0cb8'))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM t0 FULL OUTER JOIN rt0 ON rt0.c1 WHERE (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))LIKE(((((((((x'')OR(t0.c90)))OR(t0.c90)))OR(rt0.c0)))OR(x'0cb8'))))) ISNULL));
SELECT rt0.c1, rt0.c2 FROM t0 FULL OUTER JOIN rt0 ON rt0.c1;
SELECT DISTINCT rt0.c1, rt0.c0, t0.c90 FROM rt0, t0;
SELECT DISTINCT rt0.c1, rt0.c0, t0.c90 FROM rt0, t0 WHERE (NULL) UNION SELECT DISTINCT rt0.c1, rt0.c0, t0.c90 FROM rt0, t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c1, rt0.c0, t0.c90 FROM rt0, t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, t0.c90 FROM rt0, t0;
SELECT rt0.c2, rt0.c1, t0.c90 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c90;
SELECT ALL rt0.c2, rt0.c1, t0.c90 FROM t0, rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c0) IS FALSE))) AND (((t0.c90 IN (t0.c90, 860144466)))))) GROUP BY rt0.c2, rt0.c1, t0.c90 UNION SELECT rt0.c2, rt0.c1, t0.c90 FROM t0, rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((((rt0.c0) IS FALSE))) AND (((t0.c90 IN (t0.c90, 860144466)))))))) GROUP BY rt0.c2, rt0.c1, t0.c90 UNION SELECT ALL rt0.c2, rt0.c1, t0.c90 FROM t0, rt0 WHERE ((((((rt0.c1)) BETWEEN ((((rt0.c0) IS FALSE))) AND (((t0.c90 IN (t0.c90, 860144466)))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, t0.c90;
SELECT rt0.c2, rt0.c1, t0.c90 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c90;
SELECT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN (((~ (rt0.c0)))) AND ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1))))) GROUP BY t0.c90, rt0.c2, rt0.c1, rt0.c0;
SELECT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN (((~ (rt0.c0)))) AND ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1))))) GROUP BY t0.c90, rt0.c2, rt0.c1, rt0.c0 HAVING COALESCE(DISTINCT (GROUP_CONCAT(GROUP_CONCAT(rt0.c1)) IN ()), MAX(t0.c90)) UNION ALL SELECT ALL t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN (((~ (rt0.c0)))) AND ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1))))) GROUP BY t0.c90, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (COALESCE(DISTINCT (GROUP_CONCAT(GROUP_CONCAT(rt0.c1)) IN ()), MAX(t0.c90)))) UNION ALL SELECT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN (((~ (rt0.c0)))) AND ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1))))) GROUP BY t0.c90, rt0.c2, rt0.c1, rt0.c0 HAVING ((COALESCE(DISTINCT (GROUP_CONCAT(GROUP_CONCAT(rt0.c1)) IN ()), MAX(t0.c90))) ISNULL);
SELECT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN (((~ (rt0.c0)))) AND ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1))))) GROUP BY t0.c90, rt0.c2, rt0.c1, rt0.c0;
SELECT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN (((~ (rt0.c0)))) AND ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1))))) GROUP BY t0.c90, rt0.c2, rt0.c1, rt0.c0 HAVING COALESCE(DISTINCT (GROUP_CONCAT(GROUP_CONCAT(rt0.c1)) IN ()), MAX(t0.c90)) UNION ALL SELECT ALL t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN (((~ (rt0.c0)))) AND ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1))))) GROUP BY t0.c90, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (COALESCE(DISTINCT (GROUP_CONCAT(GROUP_CONCAT(rt0.c1)) IN ()), MAX(t0.c90)))) UNION ALL SELECT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN (((~ (rt0.c0)))) AND ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1))))) GROUP BY t0.c90, rt0.c2, rt0.c1, rt0.c0 HAVING ((COALESCE(DISTINCT (GROUP_CONCAT(GROUP_CONCAT(rt0.c1)) IN ()), MAX(t0.c90))) ISNULL);
SELECT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN (((~ (rt0.c0)))) AND ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1))))) GROUP BY t0.c90, rt0.c2, rt0.c1, rt0.c0;
SELECT t0.c90 FROM t0;
SELECT t0.c90 FROM t0 WHERE (((t0.c90 COLLATE NOCASE) NOT BETWEEN (((t0.c90)-(t0.c90))) AND ((((t0.c90)) BETWEEN ((t0.c90)) AND ((t0.c90)))))) UNION ALL SELECT ALL t0.c90 FROM t0 WHERE ((NOT (((t0.c90 COLLATE NOCASE) NOT BETWEEN (((t0.c90)-(t0.c90))) AND ((((t0.c90)) BETWEEN ((t0.c90)) AND ((t0.c90)))))))) UNION ALL SELECT ALL t0.c90 FROM t0 WHERE (((((t0.c90 COLLATE NOCASE) NOT BETWEEN (((t0.c90)-(t0.c90))) AND ((((t0.c90)) BETWEEN ((t0.c90)) AND ((t0.c90)))))) ISNULL));
SELECT t0.c90 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (LIKELY(DISTINCT ((t0.c90) NOTNULL))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (LIKELY(DISTINCT ((t0.c90) NOTNULL))))) UNION SELECT DISTINCT * FROM t0 WHERE (((LIKELY(DISTINCT ((t0.c90) NOTNULL))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON rt0.c0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON rt0.c0 WHERE ('Ct0,~m') GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON rt0.c0 WHERE ((NOT ('Ct0,~m'))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON rt0.c0 WHERE ((('Ct0,~m') ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON rt0.c0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING TOTAL(TOTAL(rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (TOTAL(TOTAL(rt0.c1)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((TOTAL(TOTAL(rt0.c1))) ISNULL);
SELECT ALL t0.c90 FROM t0;
SELECT t0.c90 FROM t0 WHERE (((((t0.c90)<(NULL)))|(CASE WHEN t0.c90 THEN t0.c90 END))) UNION ALL SELECT ALL t0.c90 FROM t0 WHERE ((NOT (((((t0.c90)<(NULL)))|(CASE WHEN t0.c90 THEN t0.c90 END))))) UNION ALL SELECT t0.c90 FROM t0 WHERE (((((((t0.c90)<(NULL)))|(CASE WHEN t0.c90 THEN t0.c90 END))) ISNULL));
SELECT ALL t0.c90 FROM t0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM t0 CROSS JOIN rt0 ON rt0.c2;
SELECT DISTINCT rt0.c0, rt0.c1 FROM t0 CROSS JOIN rt0 ON rt0.c2 WHERE (t0.c90) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM t0 CROSS JOIN rt0 ON rt0.c2 WHERE ((NOT (t0.c90))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM t0 CROSS JOIN rt0 ON rt0.c2 WHERE (((t0.c90) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM t0 CROSS JOIN rt0 ON rt0.c2;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 WHERE (((((0xffffffffa3d75a64))<((t0.c90))) IN (t0.c90))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE ((NOT (((((0xffffffffa3d75a64))<((t0.c90))) IN (t0.c90))))) GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM t0 WHERE (((((((0xffffffffa3d75a64))<((t0.c90))) IN (t0.c90))) ISNULL)) GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL rt0.c2 FROM t0 CROSS JOIN rt0 ON 0.1893894095291132 GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0 CROSS JOIN rt0 ON 0.1893894095291132 GROUP BY rt0.c2 HAVING AVG((COUNT(t0.c90) IN (rt0.c2, rt0.c2))) UNION ALL SELECT ALL rt0.c2 FROM t0 CROSS JOIN rt0 ON 0.1893894095291132 GROUP BY rt0.c2 HAVING (NOT (AVG((COUNT(t0.c90) IN (rt0.c2, rt0.c2))))) UNION ALL SELECT ALL rt0.c2 FROM t0 CROSS JOIN rt0 ON 0.1893894095291132 GROUP BY rt0.c2 HAVING ((AVG((COUNT(t0.c90) IN (rt0.c2, rt0.c2)))) ISNULL);
SELECT SUM((((rt0.c2 IN (rt0.c1, 0.7090353615217794)))IS((((t0.c90)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) FROM rt0, t0 ORDER BY ((rt0.c1) NOT BETWEEN (((((((((t0.c90)OR(t0.c90)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2))) AND (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST, CASE WHEN NULL THEN SQLITE_COMPILEOPTION_USED(rt0.c0) END  NULLS FIRST;
SELECT ALL rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (((((rt0.c0)<=(rt0.c0))) NOTNULL)) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0)<=(rt0.c0))) NOTNULL)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((((((rt0.c0)<=(rt0.c0))) NOTNULL)) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT t0.c90 FROM t0;
SELECT DISTINCT t0.c90 FROM t0 WHERE (((((t0.c90)IS NOT(t0.c90))) NOT BETWEEN ((NOT (t0.c90))) AND (CASE WHEN x'' THEN t0.c90 ELSE t0.c90 END))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE ((NOT (((((t0.c90)IS NOT(t0.c90))) NOT BETWEEN ((NOT (t0.c90))) AND (CASE WHEN x'' THEN t0.c90 ELSE t0.c90 END))))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE (((((((t0.c90)IS NOT(t0.c90))) NOT BETWEEN ((NOT (t0.c90))) AND (CASE WHEN x'' THEN t0.c90 ELSE t0.c90 END))) ISNULL));
SELECT DISTINCT t0.c90 FROM t0;
SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM t0, rt0 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN x'' ELSE UPPER(rt0.c0) END) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM t0, rt0 WHERE ((NOT (CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN x'' ELSE UPPER(rt0.c0) END))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM t0, rt0 WHERE (((CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN x'' ELSE UPPER(rt0.c0) END) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((((((((((((CAST(t0.c90 AS BLOB))AND(((MIN(-753878538))LIKE(COUNT(COUNT(MIN(GROUP_CONCAT(0.2501866683990108)))))))))AND(0.13502296666507219)))AND(MAX(TOTAL(COUNT(*))))))AND(t0.c90)))OR((((t0.c90))>=((t0.c90))))))AND(COUNT(*))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (((((((((((((CAST(t0.c90 AS BLOB))AND(((MIN(-753878538))LIKE(COUNT(COUNT(MIN(GROUP_CONCAT(0.2501866683990108)))))))))AND(0.13502296666507219)))AND(MAX(TOTAL(COUNT(*))))))AND(t0.c90)))OR((((t0.c90))>=((t0.c90))))))AND(COUNT(*))))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((((((((((((((CAST(t0.c90 AS BLOB))AND(((MIN(-753878538))LIKE(COUNT(COUNT(MIN(GROUP_CONCAT(0.2501866683990108)))))))))AND(0.13502296666507219)))AND(MAX(TOTAL(COUNT(*))))))AND(t0.c90)))OR((((t0.c90))>=((t0.c90))))))AND(COUNT(*)))) ISNULL);
SELECT rt0.c1, t0.c90, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED, t0;
SELECT ALL rt0.c1, t0.c90, rt0.c2, rt0.c0 FROM rt0, t0 WHERE (0xffffffff962a40be) UNION ALL SELECT ALL rt0.c1, t0.c90, rt0.c2, rt0.c0 FROM rt0, t0 WHERE ((NOT (0xffffffff962a40be))) UNION ALL SELECT rt0.c1, t0.c90, rt0.c2, rt0.c0 FROM rt0, t0 WHERE (((0xffffffff962a40be) ISNULL));
SELECT rt0.c1, t0.c90, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((x'', t0.c90, t0.c90))>=((t0.c90, t0.c90, '6931180'))) IN ())) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((x'', t0.c90, t0.c90))>=((t0.c90, t0.c90, '6931180'))) IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((x'', t0.c90, t0.c90))>=((t0.c90, t0.c90, '6931180'))) IN ())) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 WHERE (t0.c90) GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM t0 WHERE ((NOT (t0.c90))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE (((t0.c90) ISNULL)) GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT rt0.c0, rt0.c1, t0.c90 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1, t0.c90;
SELECT rt0.c0, rt0.c1, t0.c90 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1, t0.c90 HAVING ((((((((IFNULL(DISTINCT GROUP_CONCAT(COUNT(t0.c90)), rt0.c2))AND((t0.c90 IN (rt0.c0)))))OR(TOTAL(AVG(MIN(rt0.c1))))))AND(COUNT(*))))AND(rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c1, t0.c90 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1, t0.c90 HAVING (NOT (((((((((IFNULL(DISTINCT GROUP_CONCAT(COUNT(t0.c90)), rt0.c2))AND((t0.c90 IN (rt0.c0)))))OR(TOTAL(AVG(MIN(rt0.c1))))))AND(COUNT(*))))AND(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, t0.c90 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1, t0.c90 HAVING ((((((((((IFNULL(DISTINCT GROUP_CONCAT(COUNT(t0.c90)), rt0.c2))AND((t0.c90 IN (rt0.c0)))))OR(TOTAL(AVG(MIN(rt0.c1))))))AND(COUNT(*))))AND(rt0.c0))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((((t0.c90)IS NOT(t0.c90)))||(((((t0.c90)AND(t0.c90)))AND(t0.c90))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c90)IS NOT(t0.c90)))||(((((t0.c90)AND(t0.c90)))AND(t0.c90))))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((t0.c90)IS NOT(t0.c90)))||(((((t0.c90)AND(t0.c90)))AND(t0.c90))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c90 FROM rt0, t0;
SELECT DISTINCT t0.c90 FROM rt0, t0 WHERE (SQLITE_SOURCE_ID()) UNION SELECT DISTINCT t0.c90 FROM rt0, t0 WHERE ((NOT (SQLITE_SOURCE_ID()))) UNION SELECT DISTINCT t0.c90 FROM rt0, t0 WHERE (((SQLITE_SOURCE_ID()) ISNULL));
SELECT DISTINCT t0.c90 FROM rt0, t0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((((((rt0.c1))==((rt0.c2))))OR(((((((((rt0.c0)OR(0.43789102617714026)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))))OR(rt0.c1 COLLATE RTRIM))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((((((rt0.c1))=((rt0.c2))))OR(((((((((rt0.c0)OR(0.43789102617714026)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))))OR(rt0.c1 COLLATE RTRIM))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((((((((rt0.c1))==((rt0.c2))))OR(((((((((rt0.c0)OR(0.43789102617714026)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))))OR(rt0.c1 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((('-1560397256', GROUP_CONCAT(x''), rt0.c0)) BETWEEN ((AVG(SUM(MAX(COUNT(*)))), COUNT(*), MIN(rt0.c0))) AND (((((COUNT(*), COUNT(*), MAX(rt0.c1)))<=((rt0.c2, rt0.c1, COUNT(*)))), MAX(AVG(MIN(NULL))), (((rt0.c0, AVG(GROUP_CONCAT(rt0.c0)), TOTAL(TOTAL(rt0.c1)))) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((GROUP_CONCAT(rt0.c2), rt0.c2, 0.3836029571626324)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((('-1560397256', GROUP_CONCAT(x''), rt0.c0)) BETWEEN ((AVG(SUM(MAX(COUNT(*)))), COUNT(*), MIN(rt0.c0))) AND (((((COUNT(*), COUNT(*), MAX(rt0.c1)))<=((rt0.c2, rt0.c1, COUNT(*)))), MAX(AVG(MIN(NULL))), (((rt0.c0, AVG(GROUP_CONCAT(rt0.c0)), TOTAL(TOTAL(rt0.c1)))) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((GROUP_CONCAT(rt0.c2), rt0.c2, 0.3836029571626324)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((('-1560397256', GROUP_CONCAT(x''), rt0.c0)) BETWEEN ((AVG(SUM(MAX(COUNT(*)))), COUNT(*), MIN(rt0.c0))) AND (((((COUNT(*), COUNT(*), MAX(rt0.c1)))<=((rt0.c2, rt0.c1, COUNT(*)))), MAX(AVG(MIN(NULL))), (((rt0.c0, AVG(GROUP_CONCAT(rt0.c0)), TOTAL(TOTAL(rt0.c1)))) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((GROUP_CONCAT(rt0.c2), rt0.c2, 0.3836029571626324))))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (CAST(rt0.c0 AS TEXT) COLLATE RTRIM) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS TEXT) COLLATE RTRIM))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((x'')IS NOT(rt0.c1)))OR(rt0.c0)))OR((+ (rt0.c2))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((x'')IS NOT(rt0.c1)))OR(rt0.c0)))OR((+ (rt0.c2))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((x'')IS NOT(rt0.c1)))OR(rt0.c0)))OR((+ (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT t0.c90, rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY t0.c90, rt0.c2, rt0.c1;
SELECT t0.c90, rt0.c2, rt0.c1 FROM t0, rt0 WHERE (TRIM(CASE WHEN t0.c90 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c90 THEN rt0.c2 END)) GROUP BY t0.c90, rt0.c2, rt0.c1 UNION SELECT t0.c90, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((NOT (TRIM(CASE WHEN t0.c90 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c90 THEN rt0.c2 END)))) GROUP BY t0.c90, rt0.c2, rt0.c1 UNION SELECT t0.c90, rt0.c2, rt0.c1 FROM t0, rt0 WHERE (((TRIM(CASE WHEN t0.c90 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c90 THEN rt0.c2 END)) ISNULL)) GROUP BY t0.c90, rt0.c2, rt0.c1;
SELECT t0.c90, rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY t0.c90, rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1 HAVING 0.9432810169519251 UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (0.9432810169519251)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1 HAVING ((0.9432810169519251) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1 HAVING 0.9432810169519251 UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (0.9432810169519251)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1 HAVING ((0.9432810169519251) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c0 FROM rt0, t0 INDEXED BY i58;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((rt0.c2)<(rt0.c2)) IN (((rt0.c0) IS FALSE)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2)<(rt0.c2)) IN (((rt0.c0) IS FALSE)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((rt0.c2)<(rt0.c2)) IN (((rt0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (ABS(-2095818481)) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (ABS(-2095818481)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((ABS(-2095818481)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON t0.c90 GROUP BY rt0.c1;
SELECT rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON t0.c90 GROUP BY rt0.c1 HAVING COUNT(COUNT(rt0.c2)) UNION ALL SELECT rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON t0.c90 GROUP BY rt0.c1 HAVING (NOT (COUNT(COUNT(rt0.c2)))) UNION ALL SELECT rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON t0.c90 GROUP BY rt0.c1 HAVING ((COUNT(COUNT(rt0.c2))) ISNULL);
SELECT ALL rt0.c1, t0.c90, rt0.c2, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((NULL)) AND ((TIME(rt0.c0, rt0.c0, t0.c90, rt0.c1, rt0.c2))));
SELECT ALL rt0.c1, t0.c90, rt0.c2, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((NULL)) AND ((TIME(rt0.c0, rt0.c0, t0.c90, rt0.c1, rt0.c2)))) WHERE ((((rt0.c0)|(NULL)) IN (((((rt0.c0)AND(1.64060835E8)))AND(rt0.c0))))) UNION ALL SELECT rt0.c1, t0.c90, rt0.c2, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((NULL)) AND ((TIME(rt0.c0, rt0.c0, t0.c90, rt0.c1, rt0.c2)))) WHERE ((NOT ((((rt0.c0)|(NULL)) IN (((((rt0.c0)AND(1.64060835E8)))AND(rt0.c0))))))) UNION ALL SELECT rt0.c1, t0.c90, rt0.c2, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((NULL)) AND ((TIME(rt0.c0, rt0.c0, t0.c90, rt0.c1, rt0.c2)))) WHERE ((((((rt0.c0)|(NULL)) IN (((((rt0.c0)AND(1.64060835E8)))AND(rt0.c0))))) ISNULL));
SELECT ALL rt0.c1, t0.c90, rt0.c2, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((NULL)) AND ((TIME(rt0.c0, rt0.c0, t0.c90, rt0.c1, rt0.c2))));
SELECT DISTINCT t0.c90 FROM t0;
SELECT DISTINCT t0.c90 FROM t0 WHERE (t0.c90) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE ((NOT (t0.c90))) UNION SELECT DISTINCT t0.c90 FROM t0 NOT INDEXED WHERE (((t0.c90) ISNULL));
SELECT DISTINCT t0.c90 FROM t0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((rt0.c2 IN ())) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((rt0.c2 IN ())))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c2 IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING MIN(rt0.c2 COLLATE BINARY) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (MIN(rt0.c2 COLLATE BINARY))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((MIN(rt0.c2 COLLATE BINARY)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING MIN(rt0.c2 COLLATE BINARY) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (MIN(rt0.c2 COLLATE BINARY))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((MIN(rt0.c2 COLLATE BINARY)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((CAST(rt0.c1 AS BLOB) IN (CAST(rt0.c0 AS INTEGER)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((CAST(rt0.c1 AS BLOB) IN (CAST(rt0.c0 AS INTEGER)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((CAST(rt0.c1 AS BLOB) IN (CAST(rt0.c0 AS INTEGER)))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((t0.c90)&(t0.c90))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c90)&(t0.c90))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((t0.c90)&(t0.c90))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 WHERE (((((((t0.c90)OR(t0.c90)))AND(t0.c90))) NOT BETWEEN (((((t0.c90)OR(t0.c90)))AND(NULL))) AND ((+ (t0.c90))))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE ((NOT (((((((t0.c90)OR(t0.c90)))AND(t0.c90))) NOT BETWEEN (((((t0.c90)OR(t0.c90)))AND(NULL))) AND ((+ (t0.c90))))))) GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM t0 WHERE (((((((((t0.c90)OR(t0.c90)))AND(t0.c90))) NOT BETWEEN (((((t0.c90)OR(t0.c90)))AND(NULL))) AND ((+ (t0.c90))))) ISNULL)) GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((json_valid(rt0.c0)) NOT BETWEEN ((+ (TOTAL(rt0.c0)))) AND (MAX(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (((json_valid(rt0.c0)) NOT BETWEEN ((+ (TOTAL(rt0.c0)))) AND (MAX(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((((json_valid(rt0.c0)) NOT BETWEEN ((+ (TOTAL(rt0.c0)))) AND (MAX(rt0.c1)))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((json_valid(rt0.c0)) NOT BETWEEN ((+ (TOTAL(rt0.c0)))) AND (MAX(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (((json_valid(rt0.c0)) NOT BETWEEN ((+ (TOTAL(rt0.c0)))) AND (MAX(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((((json_valid(rt0.c0)) NOT BETWEEN ((+ (TOTAL(rt0.c0)))) AND (MAX(rt0.c1)))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (CAST((((rt0.c1))<=((rt0.c1))) AS BLOB)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST((((rt0.c1))<=((rt0.c1))) AS BLOB)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST((((rt0.c1))<=((rt0.c1))) AS BLOB)) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(rt0.c0 AS TEXT) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS TEXT) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING MAX(((COUNT(*)) NOT BETWEEN (t0.c90) AND (t0.c90))) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (MAX(((COUNT(*)) NOT BETWEEN (t0.c90) AND (t0.c90))))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((MAX(((COUNT(*)) NOT BETWEEN (t0.c90) AND (t0.c90)))) ISNULL);
SELECT ALL * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE (CAST(rt0.c2 AS BLOB) COLLATE BINARY) UNION ALL SELECT ALL * FROM rt0, t0 NOT INDEXED WHERE ((NOT (CAST(rt0.c2 AS BLOB) COLLATE BINARY))) UNION ALL SELECT * FROM rt0, t0 WHERE (((CAST(rt0.c2 AS BLOB) COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN '894518067' THEN rt0.c1 END)IS(NULL))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN '894518067' THEN rt0.c1 END)IS(NULL))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN '894518067' THEN rt0.c1 END)IS(NULL))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0, t0 WHERE (((rt0.c1)<(rt0.c1)) COLLATE RTRIM) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0, t0 WHERE ((NOT (((rt0.c1)<(rt0.c1)) COLLATE RTRIM))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0, t0 WHERE (((((rt0.c1)<(rt0.c1)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING TOTAL(((rt0.c1) NOTNULL)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (TOTAL(((rt0.c1) NOTNULL)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((TOTAL(((rt0.c1) NOTNULL))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING TOTAL(((rt0.c1) NOTNULL)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (TOTAL(((rt0.c1) NOTNULL)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((TOTAL(((rt0.c1) NOTNULL))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM t0 NOT INDEXED, rt0;
SELECT rt0.c1 FROM t0, rt0 WHERE ((t0.c90 IN (rt0.c0)) COLLATE RTRIM) UNION ALL SELECT rt0.c1 FROM t0, rt0 WHERE ((NOT ((t0.c90 IN (rt0.c0)) COLLATE RTRIM))) UNION ALL SELECT rt0.c1 FROM t0, rt0 WHERE ((((t0.c90 IN (rt0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c1 FROM t0 NOT INDEXED, rt0;
SELECT DISTINCT rt0.c0 FROM t0, rt0;
SELECT DISTINCT rt0.c0 FROM t0, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (t0.c90)))+(PRINTF(NULL)))) UNION SELECT DISTINCT rt0.c0 FROM t0, rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c2) AND (t0.c90)))+(PRINTF(NULL)))))) UNION SELECT DISTINCT rt0.c0 FROM t0, rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c2) AND (t0.c90)))+(PRINTF(NULL)))) ISNULL));
SELECT DISTINCT rt0.c0 FROM t0, rt0;
SELECT ALL rt0.c1, rt0.c0, t0.c90, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c0, t0.c90, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, t0.c90, rt0.c2 FROM rt0, t0 WHERE (((rt0.c1)-(((NULL) NOT BETWEEN (0xffffffffc107ecef) AND (rt0.c2))))) GROUP BY rt0.c1, rt0.c0, t0.c90, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, t0.c90, rt0.c2 FROM rt0, t0 WHERE ((NOT (((rt0.c1)-(((NULL) NOT BETWEEN (0Xffffffffc107ecef) AND (rt0.c2))))))) GROUP BY rt0.c1, rt0.c0, t0.c90, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, t0.c90, rt0.c2 FROM rt0, t0 WHERE (((((rt0.c1)-(((NULL) NOT BETWEEN (0xffffffffc107ecef) AND (rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, t0.c90, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, t0.c90, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c0, t0.c90, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(rt0.c0))LIKE(MAX(GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((GROUP_CONCAT(rt0.c0))LIKE(MAX(GROUP_CONCAT(rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((GROUP_CONCAT(rt0.c0))LIKE(MAX(GROUP_CONCAT(rt0.c2))))) ISNULL);
SELECT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON (((((t0.c90))<>((t0.c90))))GLOB(((rt0.c2) ISNULL)));
SELECT ALL t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON (((((t0.c90))<>((t0.c90))))GLOB(((rt0.c2) ISNULL))) WHERE (((((t0.c90) IS FALSE))||(NULL))) UNION ALL SELECT ALL t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON (((((t0.c90))!=((t0.c90))))GLOB(((rt0.c2) ISNULL))) WHERE ((NOT (((((t0.c90) IS FALSE))||(NULL))))) UNION ALL SELECT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON (((((t0.c90))<>((t0.c90))))GLOB(((rt0.c2) ISNULL))) WHERE (((((((t0.c90) IS FALSE))||(NULL))) ISNULL));
SELECT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON (((((t0.c90))<>((t0.c90))))GLOB(((rt0.c2) ISNULL)));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((json_quote(t0.c90))&(((t0.c90)<>(t0.c90))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((json_quote(t0.c90))&(((t0.c90)!=(t0.c90))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((json_quote(t0.c90))&(((t0.c90)<>(t0.c90))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c90, rt0.c0, rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY t0.c90, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL t0.c90, rt0.c0, rt0.c2, rt0.c1 FROM rt0, t0 WHERE ((- (((t0.c90) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) GROUP BY t0.c90, rt0.c0, rt0.c2, rt0.c1 UNION SELECT t0.c90, rt0.c0, rt0.c2, rt0.c1 FROM rt0, t0 WHERE ((NOT ((- (((t0.c90) NOT BETWEEN (rt0.c0) AND (rt0.c0))))))) GROUP BY t0.c90, rt0.c0, rt0.c2, rt0.c1 UNION SELECT t0.c90, rt0.c0, rt0.c2, rt0.c1 FROM rt0, t0 WHERE ((((- (((t0.c90) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ISNULL)) GROUP BY t0.c90, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL t0.c90, rt0.c0, rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY t0.c90, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((((NOT (x'6eb3')))AND(CAST(COUNT(*) AS INTEGER))))OR(MIN(rt0.c2))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ((((((NOT (x'6eb3')))AND(CAST(COUNT(*) AS INTEGER))))OR(MIN(rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((((((NOT (x'6eb3')))AND(CAST(COUNT(*) AS INTEGER))))OR(MIN(rt0.c2)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((((NOT (x'6eb3')))AND(CAST(COUNT(*) AS INTEGER))))OR(MIN(rt0.c2))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ((((((NOT (x'6eb3')))AND(CAST(COUNT(*) AS INTEGER))))OR(MIN(rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((((((NOT (x'6eb3')))AND(CAST(COUNT(*) AS INTEGER))))OR(MIN(rt0.c2)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT MIN(NULL) FROM t0;
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (UPPER(rt0.c0) IN ());
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (UPPER(rt0.c0) IN ()) WHERE ((((+ (rt0.c0)))/(((rt0.c0) BETWEEN (rt0.c0) AND (t0.c90))))) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (UPPER(rt0.c0) IN ()) WHERE ((NOT ((((+ (rt0.c0)))/(((rt0.c0) BETWEEN (rt0.c0) AND (t0.c90))))))) UNION ALL SELECT * FROM t0 FULL OUTER JOIN rt0 ON (UPPER(rt0.c0) IN ()) WHERE ((((((+ (rt0.c0)))/(((rt0.c0) BETWEEN (rt0.c0) AND (t0.c90))))) ISNULL));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (UPPER(rt0.c0) IN ());
SELECT DISTINCT rt0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c0 FROM rt0, t0 WHERE ('') UNION SELECT DISTINCT rt0.c0 FROM rt0, t0 WHERE ((NOT (''))) UNION SELECT DISTINCT rt0.c0 FROM rt0, t0 WHERE ((('') ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, t0;
SELECT rt0.c1 FROM t0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM t0, rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN t0.c90 THEN t0.c90 WHEN rt0.c2 THEN rt0.c2 END)AND(((rt0.c2)<<(rt0.c2)))))OR(t0.c90))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM t0, rt0 WHERE ((NOT (((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN t0.c90 THEN t0.c90 WHEN rt0.c2 THEN rt0.c2 END)AND(((rt0.c2)<<(rt0.c2)))))OR(t0.c90))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM t0, rt0 WHERE (((((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN t0.c90 THEN t0.c90 WHEN rt0.c2 THEN rt0.c2 END)AND(((rt0.c2)<<(rt0.c2)))))OR(t0.c90))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM t0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING MAX(((((((((rt0.c0)AND(GROUP_CONCAT(TOTAL(rt0.c0)))))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (MAX(((((((((rt0.c0)AND(GROUP_CONCAT(TOTAL(rt0.c0)))))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((MAX(((((((((rt0.c0)AND(GROUP_CONCAT(TOTAL(rt0.c0)))))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c1) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((('2067524166')OR(((t0.c90)/(t0.c90))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((('2067524166')OR(((t0.c90)/(t0.c90))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((('2067524166')OR(((t0.c90)/(t0.c90))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS TEXT)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (CAST(rt0.c1 COLLATE NOCASE AS TEXT)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((CAST(rt0.c1 COLLATE NOCASE AS TEXT)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING COUNT((t0.c90 IN ())) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (COUNT((t0.c90 IN ())))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((COUNT((t0.c90 IN ()))) ISNULL);
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING COUNT((t0.c90 IN ())) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (COUNT((t0.c90 IN ())))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((COUNT((t0.c90 IN ()))) ISNULL);
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))) AND (((((rt0.c1))<>((NULL))))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((((((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))) AND (((((rt0.c1))!=((NULL))))))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((((((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))) AND (((((rt0.c1))!=((NULL))))))) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) BETWEEN ((((rt0.c2))<((rt0.c2)))) AND (((rt0.c2)LIKE(rt0.c2))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS INTEGER)) BETWEEN ((((rt0.c2))<((rt0.c2)))) AND (((rt0.c2)LIKE(rt0.c2))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c0 AS INTEGER)) BETWEEN ((((rt0.c2))<((rt0.c2)))) AND (((rt0.c2)LIKE(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON ((((x'fabfece4')>=(rt0.c2)))|(CASE rt0.c1  WHEN t0.c90 THEN rt0.c0 ELSE t0.c90 END)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON ((((x'fabfece4')>=(rt0.c2)))|(CASE rt0.c1  WHEN t0.c90 THEN rt0.c0 ELSE t0.c90 END)) WHERE (((((rt0.c0 COLLATE RTRIM)OR((rt0.c0 IN ()))))AND(NULL))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON ((((x'fabfece4')>=(rt0.c2)))|(CASE rt0.c1  WHEN t0.c90 THEN rt0.c0 ELSE t0.c90 END)) WHERE ((NOT (((((rt0.c0 COLLATE RTRIM)OR((rt0.c0 IN ()))))AND(NULL))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON ((((x'fabfece4')>=(rt0.c2)))|(CASE rt0.c1  WHEN t0.c90 THEN rt0.c0 ELSE t0.c90 END)) WHERE (((((((rt0.c0 COLLATE RTRIM)OR((rt0.c0 IN ()))))AND(NULL))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON ((((x'fabfece4')>=(rt0.c2)))|(CASE rt0.c1  WHEN t0.c90 THEN rt0.c0 ELSE t0.c90 END)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MIN(CAST(rt0.c2 AS TEXT)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MIN(CAST(rt0.c2 AS TEXT)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MIN(CAST(rt0.c2 AS TEXT))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MIN(CAST(rt0.c2 AS TEXT)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MIN(CAST(rt0.c2 AS TEXT)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MIN(CAST(rt0.c2 AS TEXT))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL t0.c90 FROM t0;
SELECT t0.c90 FROM t0 WHERE (t0.c90) UNION ALL SELECT ALL t0.c90 FROM t0 WHERE ((NOT (t0.c90))) UNION ALL SELECT ALL t0.c90 FROM t0 WHERE (((t0.c90) ISNULL));
SELECT ALL t0.c90 FROM t0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (CASE WHEN (- (x'e43f2a10')) THEN ((rt0.c1) IS FALSE) WHEN ((rt0.c1)>(t0.c90)) THEN t0.c90 WHEN (NOT (rt0.c2)) THEN (t0.c90 IN ()) END) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (CASE WHEN (- (x'e43f2a10')) THEN ((rt0.c1) IS FALSE) WHEN ((rt0.c1)>(t0.c90)) THEN t0.c90 WHEN (NOT (rt0.c2)) THEN (t0.c90 IN ()) END))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((CASE WHEN (- (x'e43f2a10')) THEN ((rt0.c1) IS FALSE) WHEN ((rt0.c1)>(t0.c90)) THEN t0.c90 WHEN (NOT (rt0.c2)) THEN (t0.c90 IN ()) END) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt0.c0, t0.c90, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, t0.c90, rt0.c2;
SELECT ALL rt0.c0, t0.c90, rt0.c2 FROM t0, rt0 WHERE (0.3434344814024659) GROUP BY rt0.c0, t0.c90, rt0.c2 UNION SELECT rt0.c0, t0.c90, rt0.c2 FROM t0, rt0 WHERE ((NOT (0.3434344814024659))) GROUP BY rt0.c0, t0.c90, rt0.c2 UNION SELECT ALL rt0.c0, t0.c90, rt0.c2 FROM t0, rt0 WHERE (((0.3434344814024659) ISNULL)) GROUP BY rt0.c0, t0.c90, rt0.c2;
SELECT ALL rt0.c0, t0.c90, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, t0.c90, rt0.c2;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING (((((MIN(MAX(MIN(NULL))))) BETWEEN ((TOTAL(t0.c90))) AND ((AVG(t0.c90))))) BETWEEN (((AVG(t0.c90))/(t0.c90))) AND (CASE WHEN t0.c90 THEN t0.c90 ELSE t0.c90 END)) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT ((((((MIN(MAX(MIN(NULL))))) BETWEEN ((TOTAL(t0.c90))) AND ((AVG(t0.c90))))) BETWEEN (((AVG(t0.c90))/(t0.c90))) AND (CASE WHEN t0.c90 THEN t0.c90 ELSE t0.c90 END)))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING (((((((MIN(MAX(MIN(NULL))))) BETWEEN ((TOTAL(t0.c90))) AND ((AVG(t0.c90))))) BETWEEN (((AVG(t0.c90))/(t0.c90))) AND (CASE WHEN t0.c90 THEN t0.c90 ELSE t0.c90 END))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0;
SELECT rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))AND((~ (x'')))))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((NOT ((((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))AND((~ (x'')))))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((((((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))AND((~ (x'')))))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0;
SELECT DISTINCT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON ((LIKELIHOOD(DISTINCT rt0.c2, 0.21436601351839646)) BETWEEN ((~ (x''))) AND ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))));
SELECT DISTINCT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON ((LIKELIHOOD(DISTINCT rt0.c2, 0.21436601351839646)) BETWEEN ((~ (x''))) AND ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) WHERE (CASE ((t0.c90) NOT BETWEEN (rt0.c1) AND (t0.c90))  WHEN ((((rt0.c2)AND(rt0.c0)))AND(t0.c90)) THEN ((((((((t0.c90)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)) ELSE (NOT (rt0.c0)) END) UNION SELECT DISTINCT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON ((LIKELIHOOD(DISTINCT rt0.c2, 0.21436601351839646)) BETWEEN ((~ (x''))) AND ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) WHERE ((NOT (CASE ((t0.c90) NOT BETWEEN (rt0.c1) AND (t0.c90))  WHEN ((((rt0.c2)AND(rt0.c0)))AND(t0.c90)) THEN ((((((((t0.c90)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)) ELSE (NOT (rt0.c0)) END))) UNION SELECT DISTINCT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON ((LIKELIHOOD(DISTINCT rt0.c2, 0.21436601351839646)) BETWEEN ((~ (x''))) AND ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) WHERE (((CASE ((t0.c90) NOT BETWEEN (rt0.c1) AND (t0.c90))  WHEN ((((rt0.c2)AND(rt0.c0)))AND(t0.c90)) THEN ((((((((t0.c90)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)) ELSE (NOT (rt0.c0)) END) ISNULL));
SELECT DISTINCT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON ((LIKELIHOOD(DISTINCT rt0.c2, 0.21436601351839646)) BETWEEN ((~ (x''))) AND ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (((((rt0.c1)OR(rt0.c0)))AND(0X5a156abc))) AND (((rt0.c0)LIKE(rt0.c1))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0 IN ())) NOT BETWEEN (((((rt0.c1)OR(rt0.c0)))AND(0x5a156abc))) AND (((rt0.c0)LIKE(rt0.c1))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c0 IN ())) NOT BETWEEN (((((rt0.c1)OR(rt0.c0)))AND(0x5a156abc))) AND (((rt0.c0)LIKE(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((COUNT(rt0.c0))) NOT BETWEEN ((TOTAL(rt0.c0) COLLATE NOCASE)) AND ((MAX(rt0.c2)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((((COUNT(rt0.c0))) NOT BETWEEN ((TOTAL(rt0.c0) COLLATE NOCASE)) AND ((MAX(rt0.c2)))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((((COUNT(rt0.c0))) NOT BETWEEN ((TOTAL(rt0.c0) COLLATE NOCASE)) AND ((MAX(rt0.c2))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((COUNT(rt0.c0))) NOT BETWEEN ((TOTAL(rt0.c0) COLLATE NOCASE)) AND ((MAX(rt0.c2)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((((COUNT(rt0.c0))) NOT BETWEEN ((TOTAL(rt0.c0) COLLATE NOCASE)) AND ((MAX(rt0.c2)))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((((COUNT(rt0.c0))) NOT BETWEEN ((TOTAL(rt0.c0) COLLATE NOCASE)) AND ((MAX(rt0.c2))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (t0.c90) UNION ALL SELECT * FROM t0 WHERE ((NOT (t0.c90))) UNION ALL SELECT ALL * FROM t0 WHERE (((t0.c90) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c90 FROM t0;
SELECT DISTINCT t0.c90 FROM t0 WHERE ((((((((((t0.c90 IN (t0.c90)))OR(((t0.c90)LIKE(t0.c90)))))AND((+ (t0.c90)))))AND(CASE t0.c90  WHEN t0.c90 THEN t0.c90 WHEN t0.c90 THEN NULL WHEN t0.c90 THEN t0.c90 ELSE t0.c90 END)))OR(((t0.c90)>>(t0.c90))))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE ((NOT ((((((((((t0.c90 IN (t0.c90)))OR(((t0.c90)LIKE(t0.c90)))))AND((+ (t0.c90)))))AND(CASE t0.c90  WHEN t0.c90 THEN t0.c90 WHEN t0.c90 THEN NULL WHEN t0.c90 THEN t0.c90 ELSE t0.c90 END)))OR(((t0.c90)>>(t0.c90))))))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE ((((((((((((t0.c90 IN (t0.c90)))OR(((t0.c90)LIKE(t0.c90)))))AND((+ (t0.c90)))))AND(CASE t0.c90  WHEN t0.c90 THEN t0.c90 WHEN t0.c90 THEN NULL WHEN t0.c90 THEN t0.c90 ELSE t0.c90 END)))OR(((t0.c90)>>(t0.c90))))) ISNULL));
SELECT DISTINCT t0.c90 FROM t0;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 WHERE (CAST(t0.c90 COLLATE NOCASE AS TEXT)) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE ((NOT (CAST(t0.c90 COLLATE NOCASE AS TEXT)))) GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM t0 WHERE (((CAST(t0.c90 COLLATE NOCASE AS TEXT)) ISNULL)) GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING AVG(CAST(COUNT(*) AS BLOB)) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (AVG(CAST(COUNT(*) AS BLOB)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((AVG(CAST(COUNT(*) AS BLOB))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (CASE highlight(t0.c90, t0.c90, '''XR>l!Xk+', t0.c90)  WHEN (t0.c90 IN (t0.c90)) THEN x'db78' COLLATE RTRIM END) UNION ALL SELECT * FROM t0 WHERE ((NOT (CASE highlight(t0.c90, t0.c90, '''XR>l!Xk+', t0.c90)  WHEN (t0.c90 IN (t0.c90)) THEN x'db78' COLLATE RTRIM END))) UNION ALL SELECT * FROM t0 WHERE (((CASE highlight(t0.c90, t0.c90, '''XR>l!Xk+', t0.c90)  WHEN (t0.c90 IN (t0.c90)) THEN x'db78' COLLATE RTRIM END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((((((LIKELY(DISTINCT t0.c90))OR(CAST(x'' AS TEXT))))OR((~ (t0.c90)))))AND((+ (t0.c90)))))AND(((t0.c90)<(t0.c90))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((((((LIKELY(DISTINCT t0.c90))OR(CAST(x'' AS TEXT))))OR((~ (t0.c90)))))AND((+ (t0.c90)))))AND(((t0.c90)<(t0.c90))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((((((LIKELY(DISTINCT t0.c90))OR(CAST(x'' AS TEXT))))OR((~ (t0.c90)))))AND((+ (t0.c90)))))AND(((t0.c90)<(t0.c90))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (LIKELY(((rt0.c2) NOTNULL))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (LIKELY(((rt0.c2) NOTNULL))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((LIKELY(((rt0.c2) NOTNULL))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, t0.c90 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c90;
SELECT rt0.c2, rt0.c1, t0.c90 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c90 HAVING 0x717bead5 UNION ALL SELECT ALL rt0.c2, rt0.c1, t0.c90 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c90 HAVING (NOT (0x717bead5)) UNION ALL SELECT rt0.c2, rt0.c1, t0.c90 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c90 HAVING ((0x717bead5) ISNULL);
SELECT ALL rt0.c2, rt0.c1, t0.c90 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c90;
SELECT rt0.c2, rt0.c1, t0.c90 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c90 HAVING 0x717bead5 UNION ALL SELECT ALL rt0.c2, rt0.c1, t0.c90 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c90 HAVING (NOT (0x717bead5)) UNION ALL SELECT rt0.c2, rt0.c1, t0.c90 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c90 HAVING ((0x717bead5) ISNULL);
SELECT ALL rt0.c2, rt0.c1, t0.c90 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c90;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (NULL) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM t0 WHERE (((NULL) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (CASE WHEN CASE rt0.c2  WHEN t0.c90 THEN rt0.c0 END THEN (- (t0.c90)) ELSE UPPER(DISTINCT rt0.c0) END) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (CASE WHEN CASE rt0.c2  WHEN t0.c90 THEN rt0.c0 END THEN (- (t0.c90)) ELSE UPPER(DISTINCT rt0.c0) END))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((CASE WHEN CASE rt0.c2  WHEN t0.c90 THEN rt0.c0 END THEN (- (t0.c90)) ELSE UPPER(DISTINCT rt0.c0) END) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c90 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c90;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c90 FROM rt0 NATURAL JOIN t0 WHERE (((((rt0.c2)OR(CASE rt0.c0  WHEN rt0.c2 THEN t0.c90 END)))OR(((rt0.c2)<=(rt0.c1))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c90 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c90 FROM rt0 NATURAL JOIN t0 WHERE ((NOT (((((rt0.c2)OR(CASE rt0.c0  WHEN rt0.c2 THEN t0.c90 END)))OR(((rt0.c2)<=(rt0.c1))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c90 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c90 FROM rt0 NATURAL JOIN t0 WHERE (((((((rt0.c2)OR(CASE rt0.c0  WHEN rt0.c2 THEN t0.c90 END)))OR(((rt0.c2)<=(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c90;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c90 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c90;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((CAST(COUNT(*) AS REAL))<(((GROUP_CONCAT(TOTAL(MIN(GROUP_CONCAT(MIN(MAX(rt0.c2)))))))+(GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((CAST(COUNT(*) AS REAL))<(((GROUP_CONCAT(TOTAL(MIN(GROUP_CONCAT(MIN(MAX(rt0.c2)))))))+(GROUP_CONCAT(rt0.c0))))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((CAST(COUNT(*) AS REAL))<(((GROUP_CONCAT(TOTAL(MIN(GROUP_CONCAT(MIN(MAX(rt0.c2)))))))+(GROUP_CONCAT(rt0.c0)))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c1) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON ((CAST(NULL AS INTEGER))OR(rt0.c1 COLLATE BINARY));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON ((CAST(NULL AS INTEGER))OR(rt0.c1 COLLATE BINARY)) WHERE (((rt0.c0)IS NOT('롤W')) COLLATE RTRIM) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON ((CAST(NULL AS INTEGER))OR(rt0.c1 COLLATE BINARY)) WHERE ((NOT (((rt0.c0)IS NOT('롤W')) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON ((CAST(NULL AS INTEGER))OR(rt0.c1 COLLATE BINARY)) WHERE (((((rt0.c0)IS NOT('롤W')) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON ((CAST(NULL AS INTEGER))OR(rt0.c1 COLLATE BINARY));
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (CASE ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN (rt0.c1 IN ()) THEN ((rt0.c1) NOT BETWEEN (0.31683603965308427) AND (rt0.c0)) END) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CASE ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN (rt0.c1 IN ()) THEN ((rt0.c1) NOT BETWEEN (0.31683603965308427) AND (rt0.c0)) END))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((CASE ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN (rt0.c1 IN ()) THEN ((rt0.c1) NOT BETWEEN (0.31683603965308427) AND (rt0.c0)) END) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((SUM(GROUP_CONCAT(rt0.c0))) ISNULL)) NOT BETWEEN (GROUP_CONCAT(rt0.c1)) AND (MAX(COUNT(TOTAL(rt0.c0))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((((SUM(GROUP_CONCAT(rt0.c0))) ISNULL)) NOT BETWEEN (GROUP_CONCAT(rt0.c1)) AND (MAX(COUNT(TOTAL(rt0.c0))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((((SUM(GROUP_CONCAT(rt0.c0))) ISNULL)) NOT BETWEEN (GROUP_CONCAT(rt0.c1)) AND (MAX(COUNT(TOTAL(rt0.c0)))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CASE WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((((((((rt0.c0)AND(NULL)))OR('1128851854')))OR(rt0.c2)))OR(rt0.c0)) THEN (((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((x'e651', rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2))) WHEN ((((rt0.c1)AND(rt0.c2)))OR('')) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (8.94518067E8)) WHEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN (rt0.c2 IN ()) END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((((((((rt0.c0)AND(NULL)))OR('1128851854')))OR(rt0.c2)))OR(rt0.c0)) THEN (((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((x'e651', rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2))) WHEN ((((rt0.c1)AND(rt0.c2)))OR('')) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (8.94518067E8)) WHEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN (rt0.c2 IN ()) END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((((((((rt0.c0)AND(NULL)))OR('1128851854')))OR(rt0.c2)))OR(rt0.c0)) THEN (((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((x'e651', rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2))) WHEN ((((rt0.c1)AND(rt0.c2)))OR('')) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (8.94518067E8)) WHEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN (rt0.c2 IN ()) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0 WHERE (((((((((((((((t0.c90)IS NOT(rt0.c2)))AND(((rt0.c2)&(t0.c90)))))OR((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))))OR(x'')))AND(CAST(rt0.c2 AS TEXT))))AND(t0.c90)))AND((rt0.c1 IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((NOT (((((((((((((((t0.c90)IS NOT(rt0.c2)))AND(((rt0.c2)&(t0.c90)))))OR((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))))OR(x'')))AND(CAST(rt0.c2 AS TEXT))))AND(t0.c90)))AND((rt0.c1 IN ())))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0 WHERE (((((((((((((((((t0.c90)IS NOT(rt0.c2)))AND(((rt0.c2)&(t0.c90)))))OR((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))))OR(x'')))AND(CAST(rt0.c2 AS TEXT))))AND(t0.c90)))AND((rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0;
SELECT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c90, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 WHERE (CAST(NULLIF(DISTINCT rt0.c1, rt0.c0) AS NUMERIC)) GROUP BY t0.c90, rt0.c2, rt0.c1, rt0.c0 UNION SELECT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((NOT (CAST(NULLIF(DISTINCT rt0.c1, rt0.c0) AS NUMERIC)))) GROUP BY t0.c90, rt0.c2, rt0.c1, rt0.c0 UNION SELECT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 WHERE (((CAST(NULLIF(DISTINCT rt0.c1, rt0.c0) AS NUMERIC)) ISNULL)) GROUP BY t0.c90, rt0.c2, rt0.c1, rt0.c0;
SELECT t0.c90, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c90, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING CASE ((NULL)+(t0.c90))  WHEN ((t0.c90)<<(-7.4883309E7)) THEN (((GROUP_CONCAT(AVG(SUM(t0.c90))))) BETWEEN ((t0.c90)) AND ((t0.c90))) ELSE SUM(AVG(t0.c90)) END UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (CASE ((NULL)+(t0.c90))  WHEN ((t0.c90)<<(-7.4883309E7)) THEN (((GROUP_CONCAT(AVG(SUM(t0.c90))))) BETWEEN ((t0.c90)) AND ((t0.c90))) ELSE SUM(AVG(t0.c90)) END)) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((CASE ((NULL)+(t0.c90))  WHEN ((t0.c90)<<(-7.4883309E7)) THEN (((GROUP_CONCAT(AVG(SUM(t0.c90))))) BETWEEN ((t0.c90)) AND ((t0.c90))) ELSE SUM(AVG(t0.c90)) END) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (CAST((0.3779266258798969 IN (0.5145925656556307, rt0.c1)) AS TEXT)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST((0.3779266258798969 IN (0.5145925656556307, rt0.c1)) AS TEXT)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST((0.3779266258798969 IN (0.5145925656556307, rt0.c1)) AS TEXT)) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT t0.c90 FROM t0;
SELECT DISTINCT t0.c90 FROM t0 WHERE ((t0.c90 IN (((t0.c90) NOTNULL)))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE ((NOT ((t0.c90 IN (((t0.c90) NOTNULL)))))) UNION SELECT DISTINCT t0.c90 FROM t0 WHERE ((((t0.c90 IN (((t0.c90) NOTNULL)))) ISNULL));
SELECT DISTINCT t0.c90 FROM t0;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 WHERE ((((t0.c90) NOT BETWEEN (t0.c90) AND (t0.c90)) IN (((((t0.c90)AND(t0.c90)))AND(t0.c90)), ((t0.c90) NOTNULL)))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE ((NOT ((((t0.c90) NOT BETWEEN (t0.c90) AND (t0.c90)) IN (((((t0.c90)AND(t0.c90)))AND(t0.c90)), ((t0.c90) NOTNULL)))))) GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM t0 WHERE ((((((t0.c90) NOT BETWEEN (t0.c90) AND (t0.c90)) IN (((((t0.c90)AND(t0.c90)))AND(t0.c90)), ((t0.c90) NOTNULL)))) ISNULL)) GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90, rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY t0.c90, rt0.c0, rt0.c1, rt0.c2;
SELECT t0.c90, rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY t0.c90, rt0.c0, rt0.c1, rt0.c2 HAVING AVG(LENGTH(TOTAL(GROUP_CONCAT(t0.c90)))) UNION ALL SELECT ALL t0.c90, rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY t0.c90, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (AVG(LENGTH(TOTAL(GROUP_CONCAT(t0.c90)))))) UNION ALL SELECT t0.c90, rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY t0.c90, rt0.c0, rt0.c1, rt0.c2 HAVING ((AVG(LENGTH(TOTAL(GROUP_CONCAT(t0.c90))))) ISNULL);
SELECT ALL rt0.c0, t0.c90 FROM rt0, t0;
SELECT ALL rt0.c0, t0.c90 FROM rt0, t0 WHERE (MAX(rt0.c2, UNLIKELY(DISTINCT rt0.c2))) UNION ALL SELECT rt0.c0, t0.c90 FROM rt0, t0 WHERE ((NOT (MAX(rt0.c2, UNLIKELY(DISTINCT rt0.c2))))) UNION ALL SELECT ALL rt0.c0, t0.c90 FROM rt0, t0 WHERE (((MAX(rt0.c2, UNLIKELY(DISTINCT rt0.c2))) ISNULL));
SELECT ALL rt0.c0, t0.c90 FROM rt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c90) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c90))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c90) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 WHERE (CAST(t0.c90 AS INTEGER)) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE ((NOT (CAST(t0.c90 AS INTEGER)))) GROUP BY t0.c90 UNION SELECT ALL t0.c90 FROM t0 WHERE (((CAST(t0.c90 AS INTEGER)) ISNULL)) GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0 HAVING ((MAX(1.465538479E9)) BETWEEN (GROUP_CONCAT(NULL)) AND (GROUP_CONCAT(t0.c90))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((MAX(1.465538479E9)) BETWEEN (GROUP_CONCAT(NULL)) AND (GROUP_CONCAT(t0.c90))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0 HAVING ((((MAX(1.465538479E9)) BETWEEN (GROUP_CONCAT(NULL)) AND (GROUP_CONCAT(t0.c90)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0 HAVING ((MAX(1.465538479E9)) BETWEEN (GROUP_CONCAT(NULL)) AND (GROUP_CONCAT(t0.c90))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((MAX(1.465538479E9)) BETWEEN (GROUP_CONCAT(NULL)) AND (GROUP_CONCAT(t0.c90))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0 HAVING ((((MAX(1.465538479E9)) BETWEEN (GROUP_CONCAT(NULL)) AND (GROUP_CONCAT(t0.c90)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0;
SELECT t0.c90, rt0.c2, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON ((CASE -5.88051621E8  WHEN t0.c90 THEN rt0.c0 END)%(0.8873864211228631));
SELECT ALL t0.c90, rt0.c2, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON ((CASE -5.88051621E8  WHEN t0.c90 THEN rt0.c0 END)%(0.8873864211228631)) WHERE ((((NOT (rt0.c1)))<<((- (rt0.c2))))) UNION ALL SELECT t0.c90, rt0.c2, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON ((CASE -5.88051621E8  WHEN t0.c90 THEN rt0.c0 END)%(0.8873864211228631)) WHERE ((NOT ((((NOT (rt0.c1)))<<((- (rt0.c2))))))) UNION ALL SELECT t0.c90, rt0.c2, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON ((CASE -5.88051621E8  WHEN t0.c90 THEN rt0.c0 END)%(0.8873864211228631)) WHERE ((((((NOT (rt0.c1)))<<((- (rt0.c2))))) ISNULL));
SELECT t0.c90, rt0.c2, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON ((CASE -5.88051621E8  WHEN t0.c90 THEN rt0.c0 END)%(0.8873864211228631));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((- (((t0.c90)IS NOT(t0.c90))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((- (((t0.c90)IS NOT(t0.c90))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((- (((t0.c90)IS NOT(t0.c90))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 WHERE (rt0.c1) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING TOTAL(GROUP_CONCAT(rt0.c2)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (TOTAL(GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((TOTAL(GROUP_CONCAT(rt0.c2))) ISNULL);
SELECT * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE (((('Ng', rt0.c1, rt0.c0)) BETWEEN ((((rt0.c1)=(rt0.c1)), ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)), (~ (t0.c90)))) AND (('舶n', rt0.c0 COLLATE RTRIM, CAST(rt0.c1 AS BLOB))))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT (((('Ng', rt0.c1, rt0.c0)) BETWEEN ((((rt0.c1)=(rt0.c1)), ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)), (~ (t0.c90)))) AND (('舶n', rt0.c0 COLLATE RTRIM, CAST(rt0.c1 AS BLOB))))))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((((('Ng', rt0.c1, rt0.c0)) BETWEEN ((((rt0.c1)=(rt0.c1)), ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)), (~ (t0.c90)))) AND (('舶n', rt0.c0 COLLATE RTRIM, CAST(rt0.c1 AS BLOB))))) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c2))>((rt0.c2)))) BETWEEN (((rt0.c1)|(rt0.c2))) AND (((rt0.c1) NOT BETWEEN (0X3c2794b0) AND (rt0.c1))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c2))>((rt0.c2)))) BETWEEN (((rt0.c1)|(rt0.c2))) AND (((rt0.c1) NOT BETWEEN (0x3c2794b0) AND (rt0.c1))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((((((((rt0.c2))>((rt0.c2)))) BETWEEN (((rt0.c1)|(rt0.c2))) AND (((rt0.c1) NOT BETWEEN (0X3c2794b0) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 WHERE ((((t0.c90 IN ()))>(CASE t0.c90  WHEN t0.c90 THEN x'e56c' ELSE t0.c90 END))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE ((NOT ((((t0.c90 IN ()))>(CASE t0.c90  WHEN t0.c90 THEN x'e56c' ELSE t0.c90 END))))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM t0 WHERE ((((((t0.c90 IN ()))>(CASE t0.c90  WHEN t0.c90 THEN x'e56c' ELSE t0.c90 END))) ISNULL)) GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING TOTAL(MIN(x'')) UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (TOTAL(MIN(x'')))) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((TOTAL(MIN(x''))) ISNULL);
SELECT SUM((rt0.c2 IN ((rt0.c2 IN ())))) FROM rt0, t0;
SELECT * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE (((rt0.c1)<=(rt0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT (((rt0.c1)<=(rt0.c0)) COLLATE RTRIM))) UNION ALL SELECT * FROM rt0, t0 WHERE (((((rt0.c1)<=(rt0.c0)) COLLATE RTRIM) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, t0.c90 FROM rt0 LEFT OUTER JOIN t0 ON ((((t0.c90)OR(rt0.c1))) NOT BETWEEN (((t0.c90) IS TRUE)) AND (SQLITE_SOURCE_ID()));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, t0.c90 FROM rt0 LEFT OUTER JOIN t0 ON ((((t0.c90)OR(rt0.c1))) NOT BETWEEN (((t0.c90) IS TRUE)) AND (SQLITE_SOURCE_ID())) WHERE (x'') UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, t0.c90 FROM rt0 LEFT OUTER JOIN t0 ON ((((t0.c90)OR(rt0.c1))) NOT BETWEEN (((t0.c90) IS TRUE)) AND (SQLITE_SOURCE_ID())) WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, t0.c90 FROM rt0 LEFT OUTER JOIN t0 ON ((((t0.c90)OR(rt0.c1))) NOT BETWEEN (((t0.c90) IS TRUE)) AND (SQLITE_SOURCE_ID())) WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, t0.c90 FROM rt0 LEFT OUTER JOIN t0 ON ((((t0.c90)OR(rt0.c1))) NOT BETWEEN (((t0.c90) IS TRUE)) AND (SQLITE_SOURCE_ID()));
SELECT ALL rt0.c2, t0.c90 FROM t0, rt0 GROUP BY rt0.c2, t0.c90;
SELECT rt0.c2, t0.c90 FROM t0, rt0 WHERE (CASE WHEN CAST(0.1170021017742654 AS BLOB) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c90))) WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)) THEN (rt0.c2 IN ()) WHEN rt0.c1 THEN ((t0.c90) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END) GROUP BY rt0.c2, t0.c90 UNION SELECT rt0.c2, t0.c90 FROM t0, rt0 WHERE ((NOT (CASE WHEN CAST(0.1170021017742654 AS BLOB) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c90))) WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)) THEN (rt0.c2 IN ()) WHEN rt0.c1 THEN ((t0.c90) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END))) GROUP BY rt0.c2, t0.c90 UNION SELECT rt0.c2, t0.c90 FROM t0, rt0 WHERE (((CASE WHEN CAST(0.1170021017742654 AS BLOB) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c90))) WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)) THEN (rt0.c2 IN ()) WHEN rt0.c1 THEN ((t0.c90) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END) ISNULL)) GROUP BY rt0.c2, t0.c90;
SELECT ALL rt0.c2, t0.c90 FROM t0, rt0 GROUP BY rt0.c2, t0.c90;
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING t0.c90 UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (t0.c90)) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((t0.c90) ISNULL);
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING t0.c90 UNION ALL SELECT t0.c90 FROM t0 GROUP BY t0.c90 HAVING (NOT (t0.c90)) UNION ALL SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90 HAVING ((t0.c90) ISNULL);
SELECT ALL t0.c90 FROM t0 GROUP BY t0.c90;
SELECT ALL * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 NOT INDEXED WHERE (((NULL)>=(rt0.c1)) COLLATE RTRIM) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (((NULL)>=(rt0.c1)) COLLATE RTRIM))) UNION ALL SELECT * FROM rt0, t0 WHERE (((((NULL)>=(rt0.c1)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0, t0 WHERE (CASE WHEN t0.c90 THEN rt0.c1 END COLLATE RTRIM) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((NOT (CASE WHEN t0.c90 THEN rt0.c1 END COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0, t0 WHERE (((CASE WHEN t0.c90 THEN rt0.c1 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0, t0;
SELECT t0.c90 FROM rt0, t0 GROUP BY t0.c90;
SELECT ALL t0.c90 FROM rt0, t0 WHERE (((((x''))!=((rt0.c1))) IN ())) GROUP BY t0.c90 UNION SELECT t0.c90 FROM rt0, t0 WHERE ((NOT (((((x''))<>((rt0.c1))) IN ())))) GROUP BY t0.c90 UNION SELECT t0.c90 FROM rt0, t0 WHERE (((((((x''))<>((rt0.c1))) IN ())) ISNULL)) GROUP BY t0.c90;
SELECT t0.c90 FROM rt0, t0 GROUP BY t0.c90;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING SUM(GROUP_CONCAT(MIN(0.08752411357311163))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (SUM(GROUP_CONCAT(MIN(0.08752411357311163))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((SUM(GROUP_CONCAT(MIN(0.08752411357311163)))) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))!=('453919747'));
SELECT ALL rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))!=('453919747')) WHERE (((((CAST(rt0.c2 AS NUMERIC))OR((~ (rt0.c2)))))AND(((t0.c90) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))!=('453919747')) WHERE ((NOT (((((CAST(rt0.c2 AS NUMERIC))OR((~ (rt0.c2)))))AND(((t0.c90) NOT BETWEEN (rt0.c0) AND (rt0.c1))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))<>('453919747')) WHERE (((((((CAST(rt0.c2 AS NUMERIC))OR((~ (rt0.c2)))))AND(((t0.c90) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))!=('453919747'));
SELECT DISTINCT * FROM t0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM t0 NATURAL JOIN rt0 WHERE (((((((((rt0.c0 COLLATE BINARY)AND(((t0.c90) NOTNULL))))AND(((NULL) BETWEEN (t0.c90) AND (rt0.c1)))))OR(((rt0.c0)||(x'3073')))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN rt0 WHERE ((NOT (((((((((rt0.c0 COLLATE BINARY)AND(((t0.c90) NOTNULL))))AND(((NULL) BETWEEN (t0.c90) AND (rt0.c1)))))OR(((rt0.c0)||(x'3073')))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))))) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN rt0 WHERE (((((((((((rt0.c0 COLLATE BINARY)AND(((t0.c90) NOTNULL))))AND(((NULL) BETWEEN (t0.c90) AND (rt0.c1)))))OR(((rt0.c0)||(x'3073')))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM t0 NATURAL JOIN rt0;
SELECT rt0.c2, rt0.c0 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM t0 NATURAL JOIN rt0 WHERE (((t0.c90)%(0xffffffffa80ba7f7)) COLLATE NOCASE COLLATE RTRIM) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM t0 NATURAL JOIN rt0 WHERE ((NOT (((t0.c90)%(0xffffffffa80ba7f7)) COLLATE NOCASE COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM t0 NATURAL JOIN rt0 WHERE (((((t0.c90)%(0xffffffffa80ba7f7)) COLLATE NOCASE COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c0;
