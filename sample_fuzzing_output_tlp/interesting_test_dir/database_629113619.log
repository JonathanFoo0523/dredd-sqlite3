-- Time: 2024/06/09 19:08:25
-- Database: database19
-- Database version: 3.40.0
-- seed value: 629113619
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 1ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0, c1); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=1'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT OR ABORT INTO rt0 VALUES ('', NULL, 'h'); -- 1ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (NULL); -- 0ms;
END; -- 0ms;
PRAGMA temp.locking_mode = NORMAL; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (0.035260635599236645); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (''), ('1951037127'), (x''), (NULL), (0.4981749451684151), (x''), (x''); -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 14); -- 1ms;
UPDATE OR IGNORE rt0 SET c2=x'317a'; -- 0ms;
INSERT OR REPLACE INTO vt1(c1) VALUES (x''); -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR IGNORE vt1 SET c1=x'' WHERE (((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)) IN ()); -- 1ms;
INSERT OR ABORT INTO vt1(c1, c0) VALUES (x'', '0.035260635599236645'); -- 0ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-1599957931 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1326923150 sz=1013323501 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1308048867 0 sz=441703050'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1.32692315E9)|('-724431620')) COLLATE NOCASE; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1191446101'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'68b0')OR('c>')))=(((NULL) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1951037127 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '1305483355' COLLATE BINARY THEN (('1308048867') NOT BETWEEN ('') AND (NULL)) WHEN ((0.23393624088566123)>>('1305483355')) THEN CHAR(NULL) WHEN (('C棞') NOT BETWEEN (x'') AND (0xffffffffcc04186b)) THEN ((((((((0.035260635599236645)AND(x'1e30')))AND('-872146837')))OR(x'')))AND(x'')) ELSE CASE 0.8897559761755212  WHEN '1305483355' THEN x'' WHEN x'' THEN NULL WHEN 0.6141702109655207 THEN NULL END END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('4೼(#BO{'))<=((NULL)))))>((CAST(x'274b' AS BLOB)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'36ac5fd3') NOT NULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1599957931 sz=270567796 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1326923150 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((((x'')AND(NULL)))AND('-872146837')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=87077131 unordered noskipscan'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '1681025371 -1070202909 sz=-306616098'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.8042482305554477)+(0.2967879101237717)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-252414009'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-872146837 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_valid((('1013323501')<(x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1308048867' COLLATE NOCASE, ((((((((x'')AND(0x4df73de3)))AND(NULL)))OR('krp1_')))AND('X#S+h[r')), CAST('-872146837' AS TEXT)))<((((0.9477600496966854) NOT NULL), (((0.5956347087697964)) BETWEEN ((x'')) AND ((NULL))), LIKE(NULL, -192910301, 'h')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'')==(x'')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=246001708'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 sz=1951037127 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '812379372'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=247710466 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-28338672 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-28338672 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=427504073 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.4490219759050359 COLLATE RTRIM) BETWEEN ((('-28338672')IS NOT(x''))) AND (((NULL) BETWEEN ('-1326923150') AND ('246001708')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (json_patch(0.2551678569615077, 0.8897559761755212) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((x'19c4')OR(0.8897559761755212)))AND(0.6141702109655207)) THEN NULL ELSE (NOT (0x1a53da8a)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 441703050; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '47321566 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((-1.070202909E9) NOT BETWEEN (NULL) AND (NULL)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN x'8e7be55b' THEN NULL ELSE NULL END AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=356577460 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x'')))OR((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 -1356792942 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((270567796)<=(x'')) THEN UPPER('81660950') ELSE (~ (0.21169097676478854)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1262034650' IN ('-475039036')))IS(0.5652441228236516)); -- 3ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.31513347197976505) BETWEEN (0.5263826432591093) AND (NULL)) THEN (x'' IN (x'4ea5')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('Io<勤|\nE') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1928379017'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-116451901 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')>=(x'')))AND(CASE WHEN '-475039036' THEN 4.4170305E8 ELSE x'' END)))OR(CASE WHEN 0.131979471730014 THEN NULL WHEN -1262034650 THEN 0X1a53da8a WHEN 'WwUiMFC' THEN x'' ELSE 'KdXPjI+' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-340141911 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x628619f5; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1308048867 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('' AS TEXT) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHAR('1681025371'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((NULL, '0.8897559761755212', '1613223316')) NOT BETWEEN (('', '1566501895', NULL)) AND (('', '	!nG\', NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=714940944 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM)||(((NULL)||(x'')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-872146837'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('')) BETWEEN ((0.8897559761755212)) AND ((0.15816146951563315))) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1329219210 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=825723954'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((GLOB(x'eeb6', 'h棞!_5嶺q∐q'))+(CASE 0.03648784538124672  WHEN 'ࣃ0b!<]㖠bW' THEN x'ccba' WHEN 'OH㷣T' THEN 0.3835231691843698 WHEN '' THEN x'' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.23393624088566123)+((+ ('2056617977')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (x'2ec8')))GLOB(((NULL) BETWEEN (x'7e7c') AND (0.9477600496966854)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(1890726042 COLLATE BINARY AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE 0.5087108571779897  WHEN x'61f4c740' THEN '゚sq' END)OR(((x'') IS FALSE))))OR(((((((((0xffffffffcb796099)OR(NULL)))OR(x'')))AND('')))AND(0.2703412528362722)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 1167761392'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1417404765 0 sz=1566501895 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((((0.6395494350464185))<=((0.12809801835850065))))OR(x'' COLLATE BINARY)))AND(NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1963424953 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=81660950 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-252414009 sz=-475039036 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('cF') NOTNULL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('998220979')<('81660950')))AND((-1825843547 IN ()))))AND((('1059161217')!=(0.02969191039199881)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1013323501 -1417404765 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=595597650'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE TRIM(2.70567796E8)  WHEN (('Qz2') NOT BETWEEN (x'') AND (0x69e6ff14)) THEN TRIM(DISTINCT NULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'3396')) BETWEEN ((9.98220979E8)) AND ((NULL)))))<=((json_array_length(NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((~ (NULL)), ((0.6141702109655207)LIKE('0.03648784538124672')), ((x'807d') BETWEEN (NULL) AND (NULL))))==((CASE '㖠Pꋛ炥g'  WHEN x'59c0' THEN '䕊\n' WHEN '-340141911' THEN '-1356792942' WHEN NULL THEN 0.31513347197976505 ELSE 103859647 END, ((0.9043383364896309) BETWEEN (NULL) AND (x'')), ((((-1.32692315E9)OR(x'b287')))AND(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=247710466 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-944928125 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '103859647 0 sz=742212455'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-128790730'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.18067322836165844  WHEN 0.5652441228236516 THEN 0.21169097676478854 WHEN 0xfffffffff8f6d1ee THEN 0x73a9993f WHEN -1656975187 THEN 0.9291858834396146 ELSE '660694132' END)<('-403062338' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_valid(0); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((((0.0038839270806877435)OR(NULL)))OR(0.007857228671622085)))OR('1167761392')))OR('S+')))AND(((((((((0.8130699493090929)AND(NULL)))AND('>')))OR('ki	^k~''')))AND(1052014295)))))OR((NULL IN ('*ZUe[', 0.18067322836165844)))))AND(((0Xffffffff8300cd89) BETWEEN (0.8435063821874663) AND ('714940944')))))AND(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1804886013 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1703885668 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((x'') NOT NULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((1308048867)<<(x'')))OR(((x'') BETWEEN ('708403997') AND (x'')))))AND((((((((('횈1')AND('*y*AK')))OR(x'')))AND(-1.32921921E9)))AND(0X60e0fff1)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x'f32b'))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-2057137686 0 sz=825723954 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) BETWEEN ((NULL)) AND ((-1601448064))))>=(((((((((x'')OR('943738135')))AND('812379372')))OR('843001536')))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((-1.2879073E8)OR('S+')))OR(x'604794ce')))AND(0X5b5aad9d)))OR(x''))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=775823439'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) BETWEEN (NULL) AND (''))  WHEN CASE WHEN 0.5652441228236516 THEN x'9212' WHEN NULL THEN x'' WHEN 0X6b945ffd THEN 'Nb''8' ELSE 1.963424953E9 END THEN x'' COLLATE RTRIM ELSE CAST(0.9344683354614179 AS TEXT) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))OR((('-1326923150')|(0.8655149565370593)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('S') NOTNULL)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1984321727 sz=775823439 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1410943149 sz=775823439 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN 870700917 THEN '1826020578' WHEN 'UE)X	' THEN 'o\,t-GDJ' WHEN 0.18067322836165844 THEN NULL END THEN (('W|mX''') IS TRUE) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1513791366'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffe27552b7) BETWEEN ('') AND ('-1352508390'))) BETWEEN (0.3014226591305662) AND (((NULL)<<('52Ci9e?')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ROUND(-363226926, 0.6756585778157573) THEN CASE 0x4dd0185b  WHEN 0.37672759669963474 THEN '' END WHEN (('441703050') NOT BETWEEN ('') AND ('-881237863')) THEN ((0.9405020554599862)IS(NULL)) WHEN CASE '1625358321'  WHEN NULL THEN 0.9477600496966854 ELSE '708403997' END THEN ((('Io<勤|\nE'))=(('324500617'))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8130699493090929 IN (NULL, x''))) BETWEEN (CAST(0xffffffffebb9d8a9 AS NUMERIC)) AND (CAST('G>)A꒳' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1599957931 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '87077131 sz=825723954 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1530487025 0 sz=1814773016 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('+' COLLATE RTRIM)<=(CASE WHEN NULL THEN '-363226926' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (+ (NULL)) THEN ((0.8314946626385341) ISNULL) WHEN CASE WHEN '4z鞑߿N]i8' THEN '-775803397' WHEN 0.0038839270806877435 THEN 858255461 WHEN '-1799185499' THEN '''t\rYNX(Jq)5' ELSE 0.6054622239032305 END THEN (('1103890627') NOT BETWEEN (x'') AND (0.9344683354614179)) WHEN (((x'fb4f'))>((x'a8ba'))) THEN (('982449707')AND('-1062310140')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS(x'c28c')) NOT BETWEEN ((('5V/Ugp\r') BETWEEN (x'') AND ('870700917'))) AND (CASE WHEN '' THEN 0.5775610936983833 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1248825774 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=441703050 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1222019834 sz=-192910301 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1497182182'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.3014226591305662 AS BLOB))<<((- (x'5ee6')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x'8903'  WHEN NULL THEN 0x325ffe81 END)>(((NULL)IS NOT('2056617977')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-116451901 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=246001708'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (CAST('-363226926' AS TEXT) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'' COLLATE RTRIM)OR(((x'e2ab09e0')LIKE(0.3401014481650475)))))AND(x'' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=392229125'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)|('-727034271')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 716252918 sz=1928884351 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL)&(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '845151873 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((1530487025 IN ('-1928379017')))AND(((0.9720863674475195)|(NULL)))))OR((((-1326923150, NULL, '.a<aSSkάK')) NOT BETWEEN (('-872146837', '-878158043', -1.601448064E9)) AND ((NULL, 0.3835231691843698, x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')LIKE(x'0ddf')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL)>(0.858611313928777))  WHEN CAST(NULL AS NUMERIC) THEN ((x'') BETWEEN ('t+Y&y2') AND (0.4981749451684151)) WHEN load_extension(x'', x'') THEN CASE x'cc5a'  WHEN NULL THEN '1951037127' WHEN -128790730 THEN 0xfffffffffc8e6a96 WHEN 0x7423834b THEN 'cM]%0\nH5' ELSE 0Xffffffff932bd6a5 END WHEN NULL COLLATE NOCASE THEN CAST('VoVe||VCf' AS BLOB) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS NUMERIC) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE) NOT BETWEEN ((NULL IN ())) AND (((x'')IS NOT(0.715716805720292)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 -1484676272 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1652955637 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE BINARY)-(RTRIM(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1217629250 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=998220979 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 sz=-1089539896 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (('PK6q#h' IN (0.31513347197976505)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-312804144 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE '-814052837'  WHEN 0.23393624088566123 THEN x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4160325 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1613223316'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1225519552 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-775803397') BETWEEN (NULL) AND ('1963424953')))AND((((NULL)) BETWEEN ((x'79ca')) AND ((0.3145852471928793))))))OR('1566501895' COLLATE BINARY)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE UPPER(((0.8912068435716803)|('476677449'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '943738135' COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULLIF(DISTINCT 0.49031506285035587, 0xffffffffb9050257) THEN ((NULL) NOTNULL) WHEN CAST(1.625358321E9 AS INTEGER) THEN ((NULL) BETWEEN (0xffffffffda91dfb4) AND ('1612082833')) WHEN (NULL IN ()) THEN ((0Xffffffffc189959a) BETWEEN (NULL) AND (NULL)) WHEN CASE WHEN '1347423529' THEN x'' ELSE '-1062310140' END THEN (('-1039281772') NOT BETWEEN ('') AND (x'')) WHEN ('\rZஎ9' IN ('K')) THEN CASE WHEN -1.2879073E8 THEN x'' WHEN 'b' THEN NULL WHEN '0.21169097676478854' THEN 'g*e<-' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=-514539670 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)AND(x'')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((((((0.9442756758806081)AND(x'')))OR(NULL)))OR(x'')))AND('246001708')))AND(x'')))AND(x'')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1477409479 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE INSTR(x'', -3.63226926E8)  WHEN ((NULL) NOT NULL) THEN (NULL IN ('')) ELSE ((-881237863)IS NOT('')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.858611313928777)LIKE('cLg햔U(Jz'))) BETWEEN ((NOT (x'6674'))) AND ((('-128790730') NOT BETWEEN (x'') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(CAST(x'4939' AS BLOB))))AND(CAST('1289234164' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('0.8897559761755212'))) NOT BETWEEN (((x'') NOT BETWEEN (0.37672759669963474) AND (NULL))) AND ('J')); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '-1572421007 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=637634662 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'211c') NOT BETWEEN ((+ (-111011431))) AND (((((0.8197772216497546)AND(NULL)))AND(0X38b240b5)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-9223372036854775808') IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)+(0.44637324127579026)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1984709962 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '-1799185499 4 sz=-1070202909 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '653159322 -1601448064 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))%((((0Xffffffffe8df298b))<=((x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '2 sz=-1262034650 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=144986248 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1867203108 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '1613223316 sz=773169828'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-544052233'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((x'') BETWEEN (80654027) AND ('&g^i')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1.814773016E9) NOTNULL)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')|(0.8849305773045624))) BETWEEN ((((NULL))>((x'')))) AND (CAST('b83}5XO' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1062310140'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-28338672 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1810541673'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY(0.4226040506275046))&((((((((('1826020578')OR('')))AND(x'')))OR('Qk')))OR(0Xffffffff856291ea)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-250285074 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8130699493090929)&(NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1826020578 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (((~ ('')))) AND ((INSTR(NULL, NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.30016338178592195 COLLATE NOCASE)||((~ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-281937 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 sz=-1994495742 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST('81660950' AS INTEGER)  WHEN ((x'719c')LIKE('-1649096095')) THEN (((0.18067322836165844)) NOT BETWEEN ((1652955637)) AND ((x'd051'))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '4 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'1d4e')AND(8.166095E7)))OR(x'31c4')))/('775823439')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1191446101 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1497182182 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1497182182 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1936933714 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN 'k' THEN x'' WHEN NULL THEN 478316421 WHEN x'589e' THEN 0.25004973517696516 ELSE -2097099383 END AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '2002119487 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 sz=1808996247 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1826020578 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5395126994655945))>=((0.8560190729142616))) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) BETWEEN (NULL) AND (0.37672759669963474)))AND(CASE -1.601448064E9  WHEN 0.5338658309819101 THEN 0.1767260927881228 ELSE '' END)))OR((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 469647340 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=676104668'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((((NULL)AND(0.7377428706964486)))OR(x'')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)<<('-1083621527')) IN (NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=693073927 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (621212037)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '2075118890' THEN 0.40385318701940365 END)&(CAST(0.6395494350464185 AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1433405432 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '2 0 sz=1785451224 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 942120143 THEN NULL END)-((((0.1136852638904674)) NOT BETWEEN (('YP')) AND ((8.25723954E8))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -320429040'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0.2795564951416146) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((9.82449707E8)<>(NULL)))OR((('F/')<(x'd64f')))))OR((('')>('/I襴')))))OR(((1096461845) BETWEEN (NULL) AND ('*r5oKC륶')))))AND((0.3724013347494781 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=2116430656'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1497182182 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1199077360 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1940494655 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN (((+ ('1681025371')))) AND ((TRIM('70495604', NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1305483355 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(NULL AS INTEGER) THEN CAST(0.6258449207109382 AS TEXT) WHEN LTRIM('', x'58e9') THEN CASE 0.6277652120706457  WHEN NULL THEN x'35c3' END WHEN TRIM(NULL) THEN (x'3e41' IN ()) ELSE (NOT (0.09930810030574322)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -2117439124 sz=-724431620'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(0.09930810030574322) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'c99a93c2')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1921213651 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT (('')<=(''))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(NULL)))AND('-1050470660')))||(((x'')GLOB(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1542596420 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1329219210 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'ea8cde473cff')|(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL)))-(((NULL) NOT BETWEEN (0.3401014481650475) AND (-1262034650)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '4 sz=246001708 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'ecda')OR('')))OR(x'')))AND(x'327e')))AND('708403997')))<>(((NULL)%(0.005464822622950893)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS REAL) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 270567796 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL) BETWEEN (x'') AND (x'433f')) THEN NULL ELSE CASE NULL  WHEN '\npTF>#]3' THEN '0.715716805720292' WHEN x'931e' THEN NULL WHEN NULL THEN x'' ELSE x'' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-875459307 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1871131512 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1236443365') NOT BETWEEN ('714940944') AND (0xffffffffb1e7d0f2))) NOT BETWEEN (NULL COLLATE BINARY) AND (((x'49d8') NOT BETWEEN (0.4494829434350468) AND ('-111049703')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1995013348'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-412222500') NOT BETWEEN (0.4226040506275046) AND (x''))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1450471287 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=-881237863 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER((~ ('e>gDsO.y'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 2 sz=-881237863 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-615385109 0 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=405374495 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '2 823325687 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-475039036'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '2 0 sz=845151873 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-1343423394'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1059161217 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-2097099383)) BETWEEN ((('1167761392' IN (x'95cb')))) AND ((json_array_length(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1537309406 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1719310332 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((1625358321)-(x'')))GLOB(((0.9998129015104439)/(x'33a75320')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1.601448064E9 COLLATE RTRIM) BETWEEN ((('H<')LIKE(0.46434544449687565))) AND ((('-881237863')||(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN (((((('')OR('825723954')))OR(0xffffffffdbc66cd4)))) AND ((NULL COLLATE RTRIM))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 sz=-724431620'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0X5bed7778)<('510747812')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-559490803 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 2076490551'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=825723954 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=675335393 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM) BETWEEN (x'' COLLATE NOCASE) AND ((NULL IN (-8.81237863E8, '1826020578')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '1867020837 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1932721328'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LENGTH(((0x2d617a57) BETWEEN (0.4976865262588873) AND ('-2057137686'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '-602637232 1248825774 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-1699677662 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0.6429835391990052)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.09930810030574322) IS TRUE) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1070202909')AND(660724027)))OR(NULL))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=-270991077 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=930088959'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'a48bae53'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xffffffffedb968de; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-922379719 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1137035632 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY)<((('VoVe|bVCf') BETWEEN ('') AND (7.75823439E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1786810203 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'NZdPAst'  WHEN x'' THEN 0.8352545295131443 END) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1305483355 951264530 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LTRIM('')) NOT BETWEEN ((+ ('1189584972'))) AND (LIKELIHOOD('-245728923', 0.5738706548783892))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=943854949 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1825843547 sz=1483444012'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1530487025 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')||(NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)|(NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x3c6616ed)AND(CASE x'5cc0'  WHEN x'0808' THEN 0.8955880278033247 ELSE '-2020201461' END)))OR((NOT (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOTNULL))||((('') NOT BETWEEN (NULL) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '1 87077131 sz=1129281781'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1544714110 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '992343980 sz=-872146837'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (1103890627)))|(-727933784)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.029842624001988005)!=(x'c506')))/(((x'') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(((((0Xffffffff8d0f4577)OR(x'')))AND('>.'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '-1356792942'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 sz=356577460 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=636685661 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (- (NULL))  WHEN ((x'0765')+(x'')) THEN (((NULL, 0Xffffffffc6193e31, NULL))<=((x'', '1963424953', 0.9226537307449426))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X6b762829) IS TRUE)) NOT BETWEEN (IFNULL(x'a3e2ec19', 0.1700810473358172)) AND ((('')<=(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('8x')>('196173186')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((1009525645))>=((x'')))))<((CAST('-1825843547' AS TEXT)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('216051283')OR(x'')))AND('')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=296336007 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(CASE WHEN NULL THEN x'8acb' ELSE x'' END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('1613223316')/('-1444160322')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'cbb3')AND(0.02969191039199881)))AND(NULL)) IN (((0.6466532557554794)*('838239455')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 sz=1208450455 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '392229125 -1656816660 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=595597650 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1970867041 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(rtreenode('{qlC', x'b28f') AS BLOB); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2056617977 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-886301315 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '47321566'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT 'g!9v(H蚭', x'0698') COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (0.28577115928109054)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1112173040 -1519943933'); -- 7ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-128790730 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=392229125'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1059161217'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0X6cab045c)))|(0x14c6a50c)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1305483355 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_type(json_quote(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1342255172'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '717163928 sz=-1555938259 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(CAST(NULL AS TEXT)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '1914284522 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1064073114 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1062310140'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 0 sz=-903214707 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((356577460)) BETWEEN ((-1799185499)) AND ((0.8560190729142616))))==((((x'5c88', 'ࠗtv㖠', 0.8955880278033247))!=((-1.7976931348623157E308, x'', x'2ad8'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 26401204 sz=619862098'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-881237863'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.5059968472581962)*(NULL)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '593953502 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1703885668'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.28316359682125647  WHEN '-724431620' THEN x'6e07d49ecf2e' ELSE NULL END)|(((((0.81543595784783)OR(x'7e2d')))OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((NULL IN (0xffffffffc54e3eff)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('+')))IS NOT(UNLIKELY(DISTINCT 0.5045863821208579))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN (0.05209329882175273)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('~Y[?UP㙃' IN ('-1326923150')))OR(((((1701754205)AND(x'')))OR('xa?!7塶_K')))))OR(((NULL) NOT BETWEEN ('') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((((((('47321566')AND(x'')))OR(x'')))OR(5.17511057E8)))AND(0.1907853734741194)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '478501464 sz=1068565605 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE x''  WHEN x'' THEN x'' END AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'e002')>('%')) IN ((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-231762872 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 sz=-376370010 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')>>(NULL)) IN (UNLIKELY(x'd860'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1394202255 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('j?' AS TEXT) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=845151873'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('h<')AND(0.17044757729695603)))OR(NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=-311737525 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=998220979 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' COLLATE BINARY AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '595597650 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1461311635 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1989472869 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-595780329 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2041145807 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '35233219 sz=1111713615 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'9f7d')AND('W|mX''')))<=(json_array_length(NULL, NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') BETWEEN ('812379372') AND (441703050)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2101502613'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=1308048867'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-921086013 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=457364605 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0 sz=-278472525 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '1963424953 -363226926 sz=-1047603486 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=402572738'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '1050467881'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE WHEN 0Xffffffffedb968de THEN NULL ELSE x'aa40' END))>=((NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('982449707' COLLATE NOCASE AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-2057137686 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-909633094 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (LOWER(DISTINCT NULL) IN (0.6841679014217132)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('?큨cAW!U%' COLLATE NOCASE AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1853876197'); -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1079947522 sz=-1195954524 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1435186495 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-183628977')AND('0.1136852638904674')))AND('mk')))&((('1613223316')GLOB(7.08403997E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-118042130 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1256052187 sz=982449707 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '460538955'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.39736583465003195))!=((x''))) COLLATE NOCASE; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1746290541 sz=-1 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 sz=-1329219210'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 sz=-1786810203 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-511836274 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-468797835'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.16156059716087523) BETWEEN (x'') AND ('-1406352360')))OR((((('')OR(NULL)))AND(x'be6e')))))AND(((x'0064')&(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE JULIANDAY((((((((('356577460')AND(0.7280784747739234)))OR('0.44637324127579026')))OR('H<')))AND(x'')), ((x'')LIKE('')), ((((((((-1984321727)OR(NULL)))OR('h棞!_5嶺q∐q')))OR('-1799185499')))AND('-590495788'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1188054251 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'b104' IN (0.15816146951563315)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=841902616 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '1359054669 sz=-912184574 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '1868688113' THEN NULL WHEN (('') IS FALSE) THEN (0.5695295370581525 IN (NULL)) WHEN (('1059161217') IS TRUE) THEN ((NULL) NOT BETWEEN (0.38865117369308744) AND (-34454437)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'' AS INTEGER) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=3143733 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1574217552'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(((x'63ac')/(0.858611313928777)))))OR(CASE WHEN NULL THEN 'PLP\' WHEN NULL THEN 0.8380588908411951 WHEN x'' THEN x'4d27' ELSE 'b83}5xo' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' IN ()) IN ((((('-1601448064')OR('')))AND('-792728439')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1072572737 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') NOT NULL) COLLATE RTRIM; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=-1311251835 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', '', '-1917358129')) NOT BETWEEN (((~ (x'8bbd')), ((NULL)&(0.09619770995630939)), (+ ('F*')))) AND (((- (NULL)), ((('')) BETWEEN (('930088959')) AND (('1479607401'))), UNLIKELY('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=-499264052 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '-1353485168' COLLATE RTRIM  WHEN ((NULL) NOT BETWEEN ('-1984321727') AND (x'')) THEN ((x'') BETWEEN (x'') AND ('g!')) ELSE 660694132 COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2057137686'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.6644852052343577, '', 0Xffffffffd1c22dfb, x'', x'88a9'))<>((x'554d', x'', '603719516', NULL, '0.23393624088566123'))))+(x'' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=597111457'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (0Xffffffff97d703b2) AND (NULL))) BETWEEN ((- (NULL))) AND (((0.3413020294929692) IS FALSE))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-363226926'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=1248825774'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-779750991 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'e823')/(0.9060647276072716 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((x'ca36')*(NULL)), CAST('-458894896' AS NUMERIC), ('1248825774' IN ()), CAST(x'' AS INTEGER)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')OR(((NULL)<(NULL)))))OR(CASE WHEN NULL THEN 0.6277652120706457 ELSE -3.06616098E8 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-1789773004, x'', NULL))>((0.9469739262184401, NULL, x''))))*('')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5196827566300164)!=(0.07261318785864734)))GLOB((x'c9fc' IN (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=87077131'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=708403997'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '-1513791366 sz=995352887 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1552953343'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-943156109 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1359335136 0 sz=700990916 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1110220704'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '-1070202909 2 sz=246001708'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1081823834 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1404505269 -488696492 sz=-1362925597 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1464226466 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'2e4d'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '283559034 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=478356780 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1652955637 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('211078760') ISNULL))>=((((('825723954')OR(NULL)))OR(0.7287790573908512)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1413376805'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x630c5bf; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('td^NEk#sZ', 643399764, 5.9559765E8)) BETWEEN ((8.7077131E7, '1530487025', x'eaf4')) AND (('-1191446101', NULL, x'')))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1712655189 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '871370959 sz=1451905812 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffffc1567206)*('k媝k[E')))=(((0.8054406883199003) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(1248825774 AS BLOB)) NOT BETWEEN (CASE 0.8736292771675501  WHEN 'FALSE' THEN 0Xffffffff857cca72 END) AND ((((8.70700917E8)) BETWEEN (('0.5196827566300164')) AND ((0.07047703622369139))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=761147641'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=845151873 unordered noskipscan'); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 929132273 sz=53845163 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9344683354614179; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('f'))<((0.7346258186972906)))))<=(((('uGk,9')>=(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=742212455 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=1013323501 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-63154615'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-113063317 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=998220979 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1352508390 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('*CG+' AS REAL) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 sz=-1218863519 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=9223372036854775807 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-403062338 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=2055925959 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((NULL IN (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1593229032 sz=-1085985825 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 sz=1093269168'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('*똖r	G]')+(x'')))/((- (x'f979')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ((NULL)<=(NULL)), CAST(x'' AS BLOB)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '' THEN '' END COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-2020394097 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0x7fffffffffffffff) IS TRUE) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=566941320'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1547723698 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL))>=((0xec3c302))) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN NULL END) BETWEEN (CAST('' AS REAL)) AND (((2109777454) NOT BETWEEN ('47321566') AND ('켶**p')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1776746260 sz=507750684 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE ''  WHEN NULL THEN NULL ELSE '8x' END)||((- (0.6258449207109382)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=87077131 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-2097099383')>(x'')) IN ((NULL IN (0.6758085473776552)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1234240026 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT ((0xffffffff89592ce6) BETWEEN (NULL) AND (x'f7f1')), (NULL IN (x'eba3'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=804438231 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1297249604'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 0 sz=133791123'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=386213788 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '729394386 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST('-1072542252' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL) NOT BETWEEN (0.369467381686596) AND (x'')))OR(((NULL)IS NOT(x'')))))AND(CAST(x'' AS REAL))))OR(CAST(NULL AS BLOB))))AND(highlight(0.8023586699814971, x'', -1554149727, 0x51c5ac43))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '554962133 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=2094081793'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'79f5')LIKE(0.17513552896968365)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1417404765 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1557517605 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')) NOT BETWEEN ((NULL)) AND ((1442516623)))))>(((~ (0Xffffffffdd81c7d4))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) NOTNULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffff856291ea)>>(x''))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '1415846037 0 sz=799874487 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((('')) NOT BETWEEN (('270567796')) AND ((x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '4'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-682972250 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2097099383 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)>(-1.799185499E9)))OR(((0.1297048505312839) BETWEEN (x'0c18') AND (NULL)))))OR(((((((((NULL)OR('ja')))AND(1.77674626E9)))AND(NULL)))OR(x'c34d')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=1982742549 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1786810203 sz=-403062338 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1251985998 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1046123451 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS TEXT))||((((x'6997', x'2428', 752222619)) NOT BETWEEN ((x'', -1603616645, 0.47311156023228407)) AND ((NULL, '', 'aOak'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 -706954433'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1017941859 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT QUOTE(x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')|(0.30540441451756317)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('81660950') NOT NULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '1681062294 sz=374352216'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1746482617 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((998220979 IN ()))AND(((('YP')) NOT BETWEEN ((0.1676128687003703)) AND ((NULL))))))AND(CAST(NULL AS BLOB))))OR(0xffffffffe40c6ac9 COLLATE NOCASE)))OR(((((NULL)AND('103859647')))AND('~y[?up㙃')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1378267774 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1821084962' IN (0.05997715794680969)), ((NULL) NOT NULL), (((NULL)) BETWEEN (('-1191446101')) AND ((-184574248)))))==((('r䣶' IN ()), CAST('870700917' AS BLOB), ((NULL) NOT BETWEEN (0.18060742938203267) AND (0.8584717964861768))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '914935744 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xfffffffff0ea4346 COLLATE BINARY, (- (x'')), ((((0.23139408792079508)OR(0Xffffffffe7f9c1be)))OR('켶**P')), (((((((('0.9469739262184401')OR('yj|o滲	''U')))OR('c')))OR(0xffffffffbda2571e)))AND(NULL)), (NULL IN ())))<((((NULL) BETWEEN ('{') AND (-1390253257)), (('J') IS TRUE), x'', 'mk' COLLATE RTRIM, json_quote(x'a7c4')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((CASE 1962304974  WHEN x'9eaa' THEN NULL ELSE NULL END)) AND ((0.8365087127159727 COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '4 sz=-944928125 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((('yhx')||(NULL)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (~ (1947772390)) THEN (((NULL, x'', NULL)) NOT BETWEEN ((0X459cc738, 0.4603771026016005, NULL)) AND ((x'', x'', 'YK1'))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -447657700 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-454290557 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' COLLATE RTRIM THEN (((('0.007857228671622085')OR(x'')))OR(NULL)) ELSE NULL COLLATE NOCASE END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1680845140 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '47321566 sz=1598224710'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('0.9060647276072716' IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-433469116 sz=1013323501 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1530487025')+(NULL)))<<((('458898753') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1967618830'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '1075447526 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '588993252 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1786935019'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_GET(((NULL) NOT BETWEEN (x'a890') AND (NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((0X509ee9f)) AND (((~ (0xffffffff979ba1b5))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=804952876 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-861732422'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT 0.12831478553969877, NULL)) NOT BETWEEN ((('-1356485636')|(x''))) AND (CAST('246001708' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1809186076'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=439134615 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=-1222019834'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 sz=247710466'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1238094973'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1536265947 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') ISNULL))&(CAST(0.7387457492383459 AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('O꒨0	_M') IS TRUE)))>=((0.7300498350191228))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1024202223 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
PRAGMA main.locking_mode = EXCLUSIVE; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0xffffffffc0ae6f04, -551968286); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (1.826020578E9, 0.11529585437733991), (x'', 0.131979471730014), (0.6750267845384533, x'2703544c'); -- 0ms;
UPDATE OR IGNORE vt1 SET c1=0.0038839270806877435, c1=NULL WHERE (((x'' IN ())) BETWEEN (CASE WHEN vt1.c1 THEN vt1.c1 WHEN 0.9015167066038694 THEN vt1.c0 WHEN x'' THEN vt1.c1 END) AND (vt1.c0)); -- 4ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES ('0.39736583465003195', x''); -- 0ms;
PRAGMA defer_foreign_keys = false; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1424912955); -- 1ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (x'17fe', '~dn'), ('SM', NULL), ('i', '	~h얿9FM'); -- 5ms;
UPDATE OR IGNORE vt1 SET c1=x''; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (0.732912967288395, NULL); -- 0ms;
PRAGMA threads = 107673446583789814; -- 0ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
END; -- 0ms;
COMMIT; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('')+(x'')))); -- 0ms;
ANALYZE rt0; -- 0ms;
UPDATE OR IGNORE vt1 SET c1=x'', c0=NULL; -- 1ms;
PRAGMA foreign_keys = true; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1(c1) VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO rt0(c1) VALUES (''); -- 0ms;
PRAGMA cache_size = 0; -- 0ms;
PRAGMA temp.ignore_check_constraints = true; -- 0ms;
END; -- 0ms;
UPDATE rt0 SET c2=NULL; -- 0ms;
PRAGMA temp.threads = 6357723361210687039; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE rt0 SET (c2, c0)=(1.951037127E9, '1408433234') WHERE (- ((0.03207084957177353 IN ()))); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR REPLACE INTO vt1(c1, c0) VALUES (-539950762, x''); -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 13); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1824286901 unordered'); -- 1ms;
REINDEX  vt1; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('-2016917339'); -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c0)=('%'); -- 0ms;
UPDATE OR ABORT rt0 SET (c2)=(NULL) WHERE UPPER(((rt0.c0) NOTNULL)); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2, c0) VALUES (x'', 0.6229094121456622, 'fh*'), (0X4b04494d, 0.8918792376110897, '681267499'), (x'', 0.6448909023082547, -1.513791366E9); -- 0ms;
PRAGMA cache_spill; -- 0ms;
UPDATE rt0 SET c1=NULL; -- 0ms;
INSERT OR IGNORE INTO vt1(c1) VALUES ('-753531164'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0, c0)=(NULL, 0.7048026699541221, 'Imt\nPx'); -- 0ms;
UPDATE OR ROLLBACK vt1 SET c1=8.43001536E8, c0=NULL WHERE NULL; -- 0ms;
UPDATE OR REPLACE rt0 SET c2=NULL WHERE ((CAST(rt0.c0 AS INTEGER)) BETWEEN (((rt0.c1)<<(rt0.c2))) AND ((NULL IN (rt0.c1)))); -- 0ms;
INSERT OR REPLACE INTO vt1(c0, c1) VALUES ('324500617', 0.6340858862490402); -- 0ms;
REINDEX; -- 0ms;
PRAGMA cache_size = -7475028925739806513; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
UPDATE OR ROLLBACK vt1 SET c0='1653725097', c1=NULL; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 13); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2) VALUES (x'8a24'); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR REPLACE INTO vt1(c1) VALUES (NULL), ('998220979'), (0.07174980561327038); -- 0ms;
UPDATE OR IGNORE vt1 SET (c1)=('1681025371') WHERE (((vt1.c1)) BETWEEN ((0.03194794674641677)) AND ((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0))))); -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR ABORT INTO rt0 VALUES (IFNULL((- ('-1649637238')), (x'' IN ('8S'))), -1632975980, 0.5652441228236516); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
END; -- 0ms;
PRAGMA temp.optimize; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1308695817); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=15'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 4); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
UPDATE OR REPLACE vt1 SET c0='-1070202909'; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1(c1) VALUES (NULL), ('1116874215'), (x'93a8'), ('1613223316'), (NULL); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''); -- 0ms;
REINDEX; -- 0ms;
PRAGMA short_column_names; -- 0ms;
UPDATE rt0 SET c1=0.34621800767622546 WHERE (((rt0.c2)GLOB('4d9BO ')) IN ((NOT (rt0.c2)), ((rt0.c2)-(x'')))); -- 0ms;
INSERT OR IGNORE INTO vt1(c0, c1) VALUES ('81660950', 0.38564065767417155); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=('1532669341') WHERE ((CASE WHEN rt0.c1 THEN rt0.c0 END)&(CHANGES())); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=9'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (0.623463674893404, 0.37672759669963474), (x'009f', 0.5687282274002671), (6.60694132E8, -1315501839); -- 2ms;
SELECT rtreecheck('rt0'); -- 0ms;
PRAGMA main.reverse_unordered_selects = false; -- 0ms;
PRAGMA main.reverse_unordered_selects = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE vt1 SET c1=0.8444510990449031; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1)AND(rt0.c0)))LIKE(rt0.c2 COLLATE NOCASE));
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1)AND(rt0.c0)))LIKE(rt0.c2 COLLATE NOCASE)) WHERE (rt0.c2 COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1)AND(rt0.c0)))LIKE(rt0.c2 COLLATE NOCASE)) WHERE ((NOT (rt0.c2 COLLATE NOCASE))) UNION ALL SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1)AND(rt0.c0)))LIKE(rt0.c2 COLLATE NOCASE)) WHERE (((rt0.c2 COLLATE NOCASE) ISNULL));
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1)AND(rt0.c0)))LIKE(rt0.c2 COLLATE NOCASE));
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END, CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN '87077131' WHEN vt1.c1 THEN vt1.c0 END, CASE vt1.c1  WHEN x'' THEN NULL WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)) AND (((+ (vt1.c0)), (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))), IFNULL(vt1.c1, vt1.c0))))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END, CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN '87077131' WHEN vt1.c1 THEN vt1.c0 END, CASE vt1.c1  WHEN x'' THEN NULL WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)) AND (((+ (vt1.c0)), (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))), IFNULL(vt1.c1, vt1.c0))))))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END, CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN '87077131' WHEN vt1.c1 THEN vt1.c0 END, CASE vt1.c1  WHEN x'' THEN NULL WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)) AND (((+ (vt1.c0)), (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))), IFNULL(vt1.c1, vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)+(CAST(rt0.c0 AS INTEGER)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE NOCASE)+(CAST(rt0.c0 AS INTEGER)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((rt0.c1 COLLATE NOCASE)+(CAST(rt0.c0 AS INTEGER)))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT vt1.c1, rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c1, rt0.c2, vt1.c0, rt0.c0;
SELECT vt1.c1, rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c1, rt0.c2, vt1.c0, rt0.c0 HAVING (NOT (AVG(AVG(TOTAL(rt0.c0))))) UNION ALL SELECT vt1.c1, rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c1, rt0.c2, vt1.c0, rt0.c0 HAVING (NOT ((NOT (AVG(AVG(TOTAL(rt0.c0))))))) UNION ALL SELECT ALL vt1.c1, rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c1, rt0.c2, vt1.c0, rt0.c0 HAVING (((NOT (AVG(AVG(TOTAL(rt0.c0)))))) ISNULL);
SELECT ALL * FROM vt1, rt0;
SELECT ALL * FROM vt1 NOT INDEXED, rt0 WHERE (((0.063191704804056)>=(((((vt1.c1)AND(vt1.c0)))OR(rt0.c1))))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (((0.063191704804056)>=(((((vt1.c1)AND(vt1.c0)))OR(rt0.c1))))))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((((0.063191704804056)>=(((((vt1.c1)AND(vt1.c0)))OR(rt0.c1))))) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c1 FROM vt1 WHERE (LIKELY(DISTINCT (vt1.c1 IN ()))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((NOT (LIKELY(DISTINCT (vt1.c1 IN ()))))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE (((LIKELY(DISTINCT (vt1.c1 IN ()))) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (0.41094373763395964))) GROUP BY rt0.c0, vt1.c0 UNION SELECT rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((NOT (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (0.41094373763395964))))) GROUP BY rt0.c0, vt1.c0 UNION SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (((((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (0.41094373763395964))) ISNULL)) GROUP BY rt0.c0, vt1.c0;
SELECT rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (COUNT(*) IN (MAX(vt1.c0), MAX(vt1.c0))) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT ((COUNT(*) IN (MAX(vt1.c0), MAX(vt1.c0))))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (((COUNT(*) IN (MAX(vt1.c0), MAX(vt1.c0)))) ISNULL);
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (COUNT(*) IN (MAX(vt1.c0), MAX(vt1.c0))) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT ((COUNT(*) IN (MAX(vt1.c0), MAX(vt1.c0))))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (((COUNT(*) IN (MAX(vt1.c0), MAX(vt1.c0)))) ISNULL);
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt1.c1 FROM vt1, rt0;
SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt1.c1 FROM vt1, rt0 WHERE ((~ (-1513791366))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt1.c1 FROM vt1, rt0 WHERE ((NOT ((~ (-1513791366))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt1.c1 FROM vt1, rt0 WHERE ((((~ (-1513791366))) ISNULL));
SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0, vt1.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, vt1.c1, vt1.c0, rt0.c2 FROM rt0 INNER JOIN vt1 ON ((((('b9bs')+('*CG+'))))<=((0x73a9993f COLLATE BINARY)));
SELECT DISTINCT rt0.c0, rt0.c1, vt1.c1, vt1.c0, rt0.c2 FROM rt0 INNER JOIN vt1 ON ((((('b9bs')+('*CG+'))))<=((0X73a9993f COLLATE BINARY))) WHERE ((((vt1.c1)) BETWEEN (((((('-1329219210')OR(rt0.c1)))AND(rt0.c1)))) AND ((LENGTH(vt1.c1))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt1.c1, vt1.c0, rt0.c2 FROM rt0 INNER JOIN vt1 ON ((((('b9bs')+('*CG+'))))<=((0X73a9993f COLLATE BINARY))) WHERE ((NOT ((((vt1.c1)) BETWEEN (((((('-1329219210')OR(rt0.c1)))AND(rt0.c1)))) AND ((LENGTH(vt1.c1))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt1.c1, vt1.c0, rt0.c2 FROM rt0 INNER JOIN vt1 ON ((((('b9bs')+('*CG+'))))<=((0X73a9993f COLLATE BINARY))) WHERE ((((((vt1.c1)) BETWEEN (((((('-1329219210')OR(rt0.c1)))AND(rt0.c1)))) AND ((LENGTH(vt1.c1))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, vt1.c1, vt1.c0, rt0.c2 FROM rt0 INNER JOIN vt1 ON ((((('b9bs')+('*CG+'))))<=((0x73a9993f COLLATE BINARY)));
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 WHERE (((0X744a76c7) BETWEEN (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))) AND (((vt1.c0)>=(vt1.c1))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((NOT (((0X744a76c7) BETWEEN (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))) AND (((vt1.c0)>=(vt1.c1))))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE (((((0X744a76c7) BETWEEN (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))) AND (((vt1.c0)>=(vt1.c1))))) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1, rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON CAST((((rt0.c1, vt1.c1, rt0.c0, vt1.c1, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1, vt1.c1, vt1.c1)) AND ((rt0.c1, vt1.c1, rt0.c2, vt1.c0, vt1.c0))) AS NUMERIC) GROUP BY vt1.c1, rt0.c2, rt0.c0, rt0.c1, vt1.c0;
SELECT vt1.c1, rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON CAST((((rt0.c1, vt1.c1, rt0.c0, vt1.c1, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1, vt1.c1, vt1.c1)) AND ((rt0.c1, vt1.c1, rt0.c2, vt1.c0, vt1.c0))) AS NUMERIC) GROUP BY vt1.c1, rt0.c2, rt0.c0, rt0.c1, vt1.c0 HAVING GROUP_CONCAT(SUM(vt1.c0)) UNION ALL SELECT vt1.c1, rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0 NOT INDEXED LEFT OUTER JOIN vt1 ON CAST((((rt0.c1, vt1.c1, rt0.c0, vt1.c1, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1, vt1.c1, vt1.c1)) AND ((rt0.c1, vt1.c1, rt0.c2, vt1.c0, vt1.c0))) AS NUMERIC) GROUP BY vt1.c1, rt0.c2, rt0.c0, rt0.c1, vt1.c0 HAVING (NOT (GROUP_CONCAT(SUM(vt1.c0)))) UNION ALL SELECT vt1.c1, rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON CAST((((rt0.c1, vt1.c1, rt0.c0, vt1.c1, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1, vt1.c1, vt1.c1)) AND ((rt0.c1, vt1.c1, rt0.c2, vt1.c0, vt1.c0))) AS NUMERIC) GROUP BY vt1.c1, rt0.c2, rt0.c0, rt0.c1, vt1.c0 HAVING ((GROUP_CONCAT(SUM(vt1.c0))) ISNULL);
SELECT TOTAL(((CASE rt0.c2  WHEN rt0.c0 THEN x'fd72' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)>=(NULL COLLATE BINARY))) FROM rt0 ORDER BY ((LIKE(rt0.c1, rt0.c2)) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (rt0.c0))  NULLS LAST, 0.4133709628038674  NULLS LAST;
SELECT ALL * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (UPPER(DISTINCT ((rt0.c2)>(rt0.c0)))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (UPPER(DISTINCT ((rt0.c2)>(rt0.c0)))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((UPPER(DISTINCT ((rt0.c2)>(rt0.c0)))) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (CAST(rt0.c0 AS REAL) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS REAL) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((CAST(rt0.c0 AS REAL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL vt1.c1, rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM vt1 FULL OUTER JOIN rt0 ON (-82808784 IN ((vt1.c0 IN ()))) GROUP BY vt1.c1, rt0.c0, rt0.c2, rt0.c1, vt1.c0;
SELECT vt1.c1, rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM vt1 FULL OUTER JOIN rt0 ON (-82808784 IN ((vt1.c0 IN ()))) WHERE (((((rt0.c0)AND(rt0.c2)))OR(vt1.c1)) COLLATE RTRIM) GROUP BY vt1.c1, rt0.c0, rt0.c2, rt0.c1, vt1.c0 UNION SELECT ALL vt1.c1, rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM vt1 FULL OUTER JOIN rt0 ON (-82808784 IN ((vt1.c0 IN ()))) WHERE ((NOT (((((rt0.c0)AND(rt0.c2)))OR(vt1.c1)) COLLATE RTRIM))) GROUP BY vt1.c1, rt0.c0, rt0.c2, rt0.c1, vt1.c0 UNION SELECT ALL vt1.c1, rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM vt1 FULL OUTER JOIN rt0 ON (-82808784 IN ((vt1.c0 IN ()))) WHERE (((((((rt0.c0)AND(rt0.c2)))OR(vt1.c1)) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c1, rt0.c0, rt0.c2, rt0.c1, vt1.c0;
SELECT ALL vt1.c1, rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM vt1 FULL OUTER JOIN rt0 ON (-82808784 IN ((vt1.c0 IN ()))) GROUP BY vt1.c1, rt0.c0, rt0.c2, rt0.c1, vt1.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c0, vt1.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0, vt1.c1;
SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c0, vt1.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0, vt1.c1 HAVING ((((((((((COUNT(vt1.c1)) BETWEEN (MIN(rt0.c2)) AND (rt0.c2)))AND(CASE WHEN rt0.c1 THEN rt0.c2 END)))OR(('I{IP' IN ()))))AND(MIN(MAX(AVG(NULL))))))OR(MAX(vt1.c0))) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c0, vt1.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0, vt1.c1 HAVING (NOT (((((((((((COUNT(vt1.c1)) BETWEEN (MIN(rt0.c2)) AND (rt0.c2)))AND(CASE WHEN rt0.c1 THEN rt0.c2 END)))OR(('I{IP' IN ()))))AND(MIN(MAX(AVG(NULL))))))OR(MAX(vt1.c0))))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0, vt1.c1 FROM rt0, vt1 NOT INDEXED GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0, vt1.c1 HAVING ((((((((((((COUNT(vt1.c1)) BETWEEN (MIN(rt0.c2)) AND (rt0.c2)))AND(CASE WHEN rt0.c1 THEN rt0.c2 END)))OR(('I{IP' IN ()))))AND(MIN(MAX(AVG(NULL))))))OR(MAX(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (0.6869168300870236) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (0.6869168300870236))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((0.6869168300870236) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN ((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))) AND (('')))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT ((((vt1.c1)) NOT BETWEEN ((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))) AND (('')))))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((((((vt1.c1)) NOT BETWEEN ((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))) AND (('')))) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((CAST(rt0.c2 AS NUMERIC))AND(rt0.c1 COLLATE BINARY)))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))AND((rt0.c1 IN (rt0.c1, rt0.c2)))))AND((+ (rt0.c2))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((((((CAST(rt0.c2 AS NUMERIC))AND(rt0.c1 COLLATE BINARY)))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))AND((rt0.c1 IN (rt0.c1, rt0.c2)))))AND((+ (rt0.c2))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((((CAST(rt0.c2 AS NUMERIC))AND(rt0.c1 COLLATE BINARY)))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))AND((rt0.c1 IN (rt0.c1, rt0.c2)))))AND((+ (rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING (+ (vt1.c1 COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING (NOT ((+ (vt1.c1 COLLATE RTRIM)))) UNION ALL SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING (((+ (vt1.c1 COLLATE RTRIM))) ISNULL);
SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING (+ (vt1.c1 COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING (NOT ((+ (vt1.c1 COLLATE RTRIM)))) UNION ALL SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING (((+ (vt1.c1 COLLATE RTRIM))) ISNULL);
SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT vt1.c1, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0;
SELECT ALL vt1.c1, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE ((((~ (vt1.c0))) NOT BETWEEN ((rt0.c1 IN (NULL, vt1.c1))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) UNION ALL SELECT ALL vt1.c1, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE ((NOT ((((~ (vt1.c0))) NOT BETWEEN ((rt0.c1 IN (NULL, vt1.c1))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))))) UNION ALL SELECT vt1.c1, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE ((((((~ (vt1.c0))) NOT BETWEEN ((rt0.c1 IN (NULL, vt1.c1))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ISNULL));
SELECT vt1.c1, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, vt1.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON ((HEX(DISTINCT rt0.c2)) BETWEEN ((((vt1.c0, rt0.c2, rt0.c2))==((vt1.c0, rt0.c1, rt0.c1)))) AND (((vt1.c1)<(vt1.c0))));
SELECT DISTINCT rt0.c1, vt1.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON ((HEX(DISTINCT rt0.c2)) BETWEEN ((((vt1.c0, rt0.c2, rt0.c2))==((vt1.c0, rt0.c1, rt0.c1)))) AND (((vt1.c1)<(vt1.c0)))) WHERE ((((((rt0.c0) IS TRUE)))>(((NOT (rt0.c0)))))) UNION SELECT DISTINCT rt0.c1, vt1.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON ((HEX(DISTINCT rt0.c2)) BETWEEN ((((vt1.c0, rt0.c2, rt0.c2))=((vt1.c0, rt0.c1, rt0.c1)))) AND (((vt1.c1)<(vt1.c0)))) WHERE ((NOT ((((((rt0.c0) IS TRUE)))>(((NOT (rt0.c0)))))))) UNION SELECT DISTINCT rt0.c1, vt1.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON ((HEX(DISTINCT rt0.c2)) BETWEEN ((((vt1.c0, rt0.c2, rt0.c2))==((vt1.c0, rt0.c1, rt0.c1)))) AND (((vt1.c1)<(vt1.c0)))) WHERE ((((((((rt0.c0) IS TRUE)))>(((NOT (rt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c1, vt1.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON ((HEX(DISTINCT rt0.c2)) BETWEEN ((((vt1.c0, rt0.c2, rt0.c2))==((vt1.c0, rt0.c1, rt0.c1)))) AND (((vt1.c1)<(vt1.c0))));
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE rt0.c1  WHEN 'o醇yV' THEN rt0.c2 ELSE rt0.c0 END) NOTNULL)) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((CASE rt0.c1  WHEN 'o醇yV' THEN rt0.c2 ELSE rt0.c0 END) NOTNULL)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((CASE rt0.c1  WHEN 'o醇yV' THEN rt0.c2 ELSE rt0.c0 END) NOTNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0;
SELECT ALL rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0 HAVING CASE WHEN ((((rt0.c0)AND(MAX(SUM(SUM(MAX(MAX(MIN(AVG(rt0.c1))))))))))OR(GROUP_CONCAT(rt0.c1))) THEN SUM(MAX(TOTAL(COUNT(rt0.c0)))) END UNION ALL SELECT ALL rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0 HAVING (NOT (CASE WHEN ((((rt0.c0)AND(MAX(SUM(SUM(MAX(MAX(MIN(AVG(rt0.c1))))))))))OR(GROUP_CONCAT(rt0.c1))) THEN SUM(MAX(TOTAL(COUNT(rt0.c0)))) END)) UNION ALL SELECT ALL rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0 HAVING ((CASE WHEN ((((rt0.c0)AND(MAX(SUM(SUM(MAX(MAX(MIN(AVG(rt0.c1))))))))))OR(GROUP_CONCAT(rt0.c1))) THEN SUM(MAX(TOTAL(COUNT(rt0.c0)))) END) ISNULL);
SELECT MIN((ROUND(vt1.c1, vt1.c0) IN (((((vt1.c1)OR(vt1.c1)))OR(vt1.c1)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))))) FROM vt1 ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))) ISNULL)  NULLS LAST;
SELECT * FROM rt0, vt1;
SELECT * FROM rt0, vt1 NOT INDEXED WHERE (LOWER(rt0.c1)) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (LOWER(rt0.c1)))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((LOWER(rt0.c1)) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (CAST(((rt0.c0)OR(rt0.c2)) AS BLOB)) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((NOT (CAST(((rt0.c0)OR(rt0.c2)) AS BLOB)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (((CAST(((rt0.c0)OR(rt0.c2)) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0)!=(rt0.c1))) IS FALSE)) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0)!=(rt0.c1))) IS FALSE)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c0)!=(rt0.c1))) IS FALSE)) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL vt1.c1, vt1.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON ((CASE vt1.c1  WHEN vt1.c0 THEN rt0.c1 END)IS('395112775')) GROUP BY vt1.c1, vt1.c0, rt0.c1;
SELECT vt1.c1, vt1.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON ((CASE vt1.c1  WHEN vt1.c0 THEN rt0.c1 END)IS('395112775')) GROUP BY vt1.c1, vt1.c0, rt0.c1 HAVING rt0.c0 UNION ALL SELECT ALL vt1.c1, vt1.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON ((CASE vt1.c1  WHEN vt1.c0 THEN rt0.c1 END)IS('395112775')) GROUP BY vt1.c1, vt1.c0, rt0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL vt1.c1, vt1.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON ((CASE vt1.c1  WHEN vt1.c0 THEN rt0.c1 END)IS('395112775')) GROUP BY vt1.c1, vt1.c0, rt0.c1 HAVING ((rt0.c0) ISNULL);
SELECT ALL vt1.c1, vt1.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON ((CASE vt1.c1  WHEN vt1.c0 THEN rt0.c1 END)IS('395112775')) GROUP BY vt1.c1, vt1.c0, rt0.c1;
SELECT vt1.c1, vt1.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON ((CASE vt1.c1  WHEN vt1.c0 THEN rt0.c1 END)IS('395112775')) GROUP BY vt1.c1, vt1.c0, rt0.c1 HAVING rt0.c0 UNION ALL SELECT ALL vt1.c1, vt1.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON ((CASE vt1.c1  WHEN vt1.c0 THEN rt0.c1 END)IS('395112775')) GROUP BY vt1.c1, vt1.c0, rt0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL vt1.c1, vt1.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON ((CASE vt1.c1  WHEN vt1.c0 THEN rt0.c1 END)IS('395112775')) GROUP BY vt1.c1, vt1.c0, rt0.c1 HAVING ((rt0.c0) ISNULL);
SELECT ALL vt1.c1, vt1.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON ((CASE vt1.c1  WHEN vt1.c0 THEN rt0.c1 END)IS('395112775')) GROUP BY vt1.c1, vt1.c0, rt0.c1;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (0.5263826432591093) UNION ALL SELECT * FROM rt0 WHERE ((NOT (0.5263826432591093))) UNION ALL SELECT * FROM rt0 WHERE (((0.5263826432591093) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (IFNULL(DISTINCT (rt0.c1 IN ()), CASE vt1.c0  WHEN vt1.c1 THEN rt0.c1 WHEN '-199447899' THEN vt1.c1 WHEN '87077131' THEN vt1.c1 WHEN 0.9539673340111233 THEN vt1.c1 WHEN rt0.c2 THEN vt1.c1 END)) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (IFNULL(DISTINCT (rt0.c1 IN ()), CASE vt1.c0  WHEN vt1.c1 THEN rt0.c1 WHEN '-199447899' THEN vt1.c1 WHEN '87077131' THEN vt1.c1 WHEN 0.9539673340111233 THEN vt1.c1 WHEN rt0.c2 THEN vt1.c1 END)))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((IFNULL(DISTINCT (rt0.c1 IN ()), CASE vt1.c0  WHEN vt1.c1 THEN rt0.c1 WHEN '-199447899' THEN vt1.c1 WHEN '87077131' THEN vt1.c1 WHEN 0.9539673340111233 THEN vt1.c1 WHEN rt0.c2 THEN vt1.c1 END)) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((~ (rt0.c0)) IN (((rt0.c0) IS FALSE), ((rt0.c2)||(rt0.c2))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((~ (rt0.c0)) IN (((rt0.c0) IS FALSE), ((rt0.c2)||(rt0.c2))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((~ (rt0.c0)) IN (((rt0.c0) IS FALSE), ((rt0.c2)||(rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(vt1.c1) COLLATE NOCASE) BETWEEN (MAX(vt1.c1)) AND (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((GROUP_CONCAT(vt1.c1) COLLATE NOCASE) BETWEEN (MAX(vt1.c1)) AND (COUNT(*))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((GROUP_CONCAT(vt1.c1) COLLATE NOCASE) BETWEEN (MAX(vt1.c1)) AND (COUNT(*)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(vt1.c1) COLLATE NOCASE) BETWEEN (MAX(vt1.c1)) AND (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((GROUP_CONCAT(vt1.c1) COLLATE NOCASE) BETWEEN (MAX(vt1.c1)) AND (COUNT(*))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((GROUP_CONCAT(vt1.c1) COLLATE NOCASE) BETWEEN (MAX(vt1.c1)) AND (COUNT(*)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (HEX(DISTINCT (+ (rt0.c2)))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (HEX(DISTINCT (+ (rt0.c2)))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((HEX(DISTINCT (+ (rt0.c2)))) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(DISTINCT NULLIF(DISTINCT rt0.c0, rt0.c2), 0.8880127509019716);
SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(DISTINCT NULLIF(DISTINCT rt0.c0, rt0.c2), 0.8880127509019716) WHERE ((((rt0.c1)) BETWEEN ((((rt0.c2)>=(NULL)))) AND ((CAST(vt1.c0 AS INTEGER))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(DISTINCT NULLIF(DISTINCT rt0.c0, rt0.c2), 0.8880127509019716) WHERE ((NOT ((((rt0.c1)) BETWEEN ((((rt0.c2)>=(NULL)))) AND ((CAST(vt1.c0 AS INTEGER))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(DISTINCT NULLIF(DISTINCT rt0.c0, rt0.c2), 0.8880127509019716) WHERE ((((((rt0.c1)) BETWEEN ((((rt0.c2)>=(NULL)))) AND ((CAST(vt1.c0 AS INTEGER))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(DISTINCT NULLIF(DISTINCT rt0.c0, rt0.c2), 0.8880127509019716);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c1, '2K')))))==((vt1.c1)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c1, '2K')))))==((vt1.c1)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c1, '2K')))))=((vt1.c1)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2 HAVING MIN(COUNT('0Cn')) UNION ALL SELECT rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MIN(COUNT('0Cn')))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((MIN(COUNT('0Cn'))) ISNULL);
SELECT ALL * FROM rt0, vt1 NOT INDEXED;
SELECT * FROM rt0, vt1 WHERE (json_insert((vt1.c1 IN ()), vt1.c1 COLLATE BINARY, ((vt1.c0)<>(rt0.c0)))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (json_insert((vt1.c1 IN ()), vt1.c1 COLLATE BINARY, ((vt1.c0)<>(rt0.c0)))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((json_insert((vt1.c1 IN ()), vt1.c1 COLLATE BINARY, ((vt1.c0)!=(rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((rt0.c2)=((('246001708')<>(vt1.c1))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((rt0.c2)=((('246001708')<>(vt1.c1))))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((rt0.c2)==((('246001708')<>(vt1.c1))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (CAST(((rt0.c1)<>(0.24039715693919284)) AS BLOB)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CAST(((rt0.c1)!=(0.24039715693919284)) AS BLOB)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((CAST(((rt0.c1)!=(0.24039715693919284)) AS BLOB)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1;
SELECT rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1 HAVING ((GROUP_CONCAT(vt1.c0)) IS TRUE) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1 HAVING (NOT (((GROUP_CONCAT(vt1.c0)) IS TRUE))) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1 HAVING ((((GROUP_CONCAT(vt1.c0)) IS TRUE)) ISNULL);
SELECT ALL rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1;
SELECT rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1 HAVING ((GROUP_CONCAT(vt1.c0)) IS TRUE) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1 HAVING (NOT (((GROUP_CONCAT(vt1.c0)) IS TRUE))) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1 HAVING ((((GROUP_CONCAT(vt1.c0)) IS TRUE)) ISNULL);
SELECT ALL rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt1;
SELECT ALL rt0.c1 FROM rt0, vt1 NOT INDEXED WHERE (CASE ((rt0.c2) NOTNULL)  WHEN CASE WHEN vt1.c1 THEN vt1.c1 END THEN ((vt1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN ((rt0.c1)<>(rt0.c1)) THEN (~ (vt1.c1)) WHEN RTRIM(rt0.c0) THEN CAST(vt1.c1 AS NUMERIC) END) UNION ALL SELECT rt0.c1 FROM rt0, vt1 WHERE ((NOT (CASE ((rt0.c2) NOTNULL)  WHEN CASE WHEN vt1.c1 THEN vt1.c1 END THEN ((vt1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN ((rt0.c1)<>(rt0.c1)) THEN (~ (vt1.c1)) WHEN RTRIM(rt0.c0) THEN CAST(vt1.c1 AS NUMERIC) END))) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt1 WHERE (((CASE ((rt0.c2) NOTNULL)  WHEN CASE WHEN vt1.c1 THEN vt1.c1 END THEN ((vt1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN ((rt0.c1)<>(rt0.c1)) THEN (~ (vt1.c1)) WHEN RTRIM(rt0.c0) THEN CAST(vt1.c1 AS NUMERIC) END) ISNULL));
SELECT ALL rt0.c1 FROM rt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (LIKELY(DISTINCT vt1.c1)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (LIKELY(DISTINCT vt1.c1)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((LIKELY(DISTINCT vt1.c1)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))AND((rt0.c2 IN (rt0.c2)))))AND(((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))))OR(IFNULL(DISTINCT rt0.c0, rt0.c2))))OR(((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))AND((rt0.c2 IN (rt0.c2)))))AND(((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))))OR(IFNULL(DISTINCT rt0.c0, rt0.c2))))OR(((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))AND((rt0.c2 IN (rt0.c2)))))AND(((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))))OR(IFNULL(DISTINCT rt0.c0, rt0.c2))))OR(((((rt0.c0)OR(rt0.c1)))AND(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(AVG(GROUP_CONCAT(rt0.c1))))=(SUM(SUM(AVG(SUM(rt0.c1)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (((COUNT(AVG(GROUP_CONCAT(rt0.c1))))=(SUM(SUM(AVG(SUM(rt0.c1)))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((((COUNT(AVG(GROUP_CONCAT(rt0.c1))))==(SUM(SUM(AVG(SUM(rt0.c1))))))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (TIME((('rQ*')IS NOT(rt0.c0)), (+ (rt0.c0)), ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), ('?!' IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (TIME((('rQ*')IS NOT(rt0.c0)), (+ (rt0.c0)), ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), ('?!' IN ()))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((TIME((('rQ*')IS NOT(rt0.c0)), (+ (rt0.c0)), ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), ('?!' IN ()))) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE (((((((0.2752346449651948)OR(vt1.c1)))OR(vt1.c1)))/(((vt1.c0) NOTNULL)))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (((((((0.2752346449651948)OR(vt1.c1)))OR(vt1.c1)))/(((vt1.c0) NOTNULL)))))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE (((((((((0.2752346449651948)OR(vt1.c1)))OR(vt1.c1)))/(((vt1.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN (((((vt1.c1, vt1.c0, vt1.c0))<>((vt1.c1, '竍b', vt1.c1))))) AND ((CAST(vt1.c1 AS BLOB))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT ((((vt1.c1)) NOT BETWEEN (((((vt1.c1, vt1.c0, vt1.c0))!=((vt1.c1, '竍b', vt1.c1))))) AND ((CAST(vt1.c1 AS BLOB))))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((((((vt1.c1)) NOT BETWEEN (((((vt1.c1, vt1.c0, vt1.c0))!=((vt1.c1, '竍b', vt1.c1))))) AND ((CAST(vt1.c1 AS BLOB))))) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT * FROM vt1 NATURAL JOIN rt0;
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE (((CASE rt0.c1  WHEN vt1.c1 THEN rt0.c1 END)/(((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0))))) UNION ALL SELECT * FROM vt1 NATURAL JOIN rt0 WHERE ((NOT (((CASE rt0.c1  WHEN vt1.c1 THEN rt0.c1 END)/(((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0))))))) UNION ALL SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (((((CASE rt0.c1  WHEN vt1.c1 THEN rt0.c1 END)/(((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0))))) ISNULL));
SELECT * FROM vt1 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c1, 0.8955880278033247, vt1.c1, vt1.c1, '-495627593')) NOT BETWEEN ((vt1.c1, vt1.c1, vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c0, vt1.c1, vt1.c0, vt1.c1))) IN ())) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c1, 0.8955880278033247, vt1.c1, vt1.c1, '-495627593')) NOT BETWEEN ((vt1.c1, vt1.c1, vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c0, vt1.c1, vt1.c0, vt1.c1))) IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c1, 0.8955880278033247, vt1.c1, vt1.c1, '-495627593')) NOT BETWEEN ((vt1.c1, vt1.c1, vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c0, vt1.c1, vt1.c0, vt1.c1))) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((rt0.c2 COLLATE BINARY IN ())) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((rt0.c2 COLLATE BINARY IN ())))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c2 COLLATE BINARY IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING ((((rt0.c1) NOTNULL))>>(COUNT(*))) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING (NOT (((((rt0.c1) NOTNULL))>>(COUNT(*))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING ((((((rt0.c1) NOTNULL))>>(COUNT(*)))) ISNULL);
SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING ((((rt0.c1) NOTNULL))>>(COUNT(*))) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING (NOT (((((rt0.c1) NOTNULL))>>(COUNT(*))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING ((((((rt0.c1) NOTNULL))>>(COUNT(*)))) ISNULL);
SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT ALL vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0;
SELECT ALL vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE ((((rt0.c0 IN ()))>>(rt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE ((NOT ((((rt0.c0 IN ()))>>(rt0.c0 COLLATE NOCASE))))) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE ((((((rt0.c0 IN ()))>>(rt0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((- (rt0.c2)) IN ())) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((- (rt0.c2)) IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((- (rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM vt1, rt0 WHERE (((((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)))OR((rt0.c2 IN (rt0.c1, rt0.c0))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM vt1, rt0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)))OR((rt0.c2 IN (rt0.c1, rt0.c0))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM vt1, rt0 WHERE (((((((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)))OR((rt0.c2 IN (rt0.c1, rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (SUM(GROUP_CONCAT(rt0.c2)) IN (IFNULL(GROUP_CONCAT(rt0.c2), SUM(rt0.c1)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((SUM(GROUP_CONCAT(rt0.c2)) IN (IFNULL(GROUP_CONCAT(rt0.c2), SUM(rt0.c1)))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((SUM(GROUP_CONCAT(rt0.c2)) IN (IFNULL(GROUP_CONCAT(rt0.c2), SUM(rt0.c1))))) ISNULL);
SELECT ALL TOTAL(CASE rt0.c0  WHEN x'eab6a82a' THEN ((rt0.c2)*(NULL)) WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c0)-(rt0.c2)) WHEN rt0.c0 THEN ((0.948476574298895) IS TRUE) END) FROM vt1, rt0 ORDER BY ((NULL)==(vt1.c1)) COLLATE RTRIM  NULLS LAST, (((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)) IN (-1.417404765E9))  NULLS LAST;
SELECT ALL * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE (((((((((vt1.c0)AND(CAST(vt1.c1 AS REAL))))AND(TYPEOF(DISTINCT 'Pr'))))AND(((rt0.c2) NOTNULL))))AND((rt0.c1 IN ())))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (((((((((vt1.c0)AND(CAST(vt1.c1 AS REAL))))AND(TYPEOF(DISTINCT 'Pr'))))AND(((rt0.c2) NOTNULL))))AND((rt0.c1 IN ())))))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((((((((((vt1.c0)AND(CAST(vt1.c1 AS REAL))))AND(TYPEOF(DISTINCT 'Pr'))))AND(((rt0.c2) NOTNULL))))AND((rt0.c1 IN ())))) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (NULL) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT vt1.c0, vt1.c1 FROM rt0 LEFT OUTER JOIN vt1 ON (- (vt1.c0)) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM rt0 LEFT OUTER JOIN vt1 ON (- (vt1.c0)) WHERE ((((((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((vt1.c0, '-485755415', vt1.c1)) AND ((vt1.c1, rt0.c0, rt0.c0))))AND((vt1.c0 IN (rt0.c2, vt1.c1, x'')))))OR(((rt0.c0) IS TRUE)))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM rt0 LEFT OUTER JOIN vt1 ON (- (vt1.c0)) WHERE ((NOT ((((((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((vt1.c0, '-485755415', vt1.c1)) AND ((vt1.c1, rt0.c0, rt0.c0))))AND((vt1.c0 IN (rt0.c2, vt1.c1, x'')))))OR(((rt0.c0) IS TRUE)))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM rt0 LEFT OUTER JOIN vt1 ON (- (vt1.c0)) WHERE ((((((((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((vt1.c0, '-485755415', vt1.c1)) AND ((vt1.c1, rt0.c0, rt0.c0))))AND((vt1.c0 IN (rt0.c2, vt1.c1, x'')))))OR(((rt0.c0) IS TRUE)))) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM rt0 LEFT OUTER JOIN vt1 ON (- (vt1.c0)) GROUP BY vt1.c0, vt1.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING x'' UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (x'')) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((x'') ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING x'' UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (x'')) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((x'') ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1;
SELECT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ('-0.0') UNION ALL SELECT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((NOT ('-0.0'))) UNION ALL SELECT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((('-0.0') ISNULL));
SELECT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((0.6356613652030056)|((rt0.c2 IN (rt0.c1))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((0.6356613652030056)|((rt0.c2 IN (rt0.c1))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((0.6356613652030056)|((rt0.c2 IN (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((json(vt1.c1))>=(CASE WHEN vt1.c0 THEN vt1.c1 END))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (((json(vt1.c1))>=(CASE WHEN vt1.c0 THEN vt1.c1 END))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (((((json(vt1.c1))>=(CASE WHEN vt1.c0 THEN vt1.c1 END))) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING vt1.c0 UNION ALL SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING (NOT (vt1.c0)) UNION ALL SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING ((vt1.c0) ISNULL);
SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING vt1.c0 UNION ALL SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING (NOT (vt1.c0)) UNION ALL SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING ((vt1.c0) ISNULL);
SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT rt0.c0, vt1.c0, vt1.c1 FROM vt1 NOT INDEXED, rt0;
SELECT ALL rt0.c0, vt1.c0, vt1.c1 FROM vt1, rt0 WHERE (vt1.c0) UNION ALL SELECT ALL rt0.c0, vt1.c0, vt1.c1 FROM vt1, rt0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL rt0.c0, vt1.c0, vt1.c1 FROM vt1, rt0 WHERE (((vt1.c0) ISNULL));
SELECT rt0.c0, vt1.c0, vt1.c1 FROM vt1 NOT INDEXED, rt0;
SELECT DISTINCT rt0.c2, vt1.c1, rt0.c0 FROM rt0 NATURAL JOIN vt1;
SELECT DISTINCT rt0.c2, vt1.c1, rt0.c0 FROM rt0 NATURAL JOIN vt1 WHERE (TRIM(DISTINCT CAST(vt1.c1 AS BLOB), CASE vt1.c0  WHEN rt0.c0 THEN x'453f' ELSE 0.20440668434141684 END)) UNION SELECT DISTINCT rt0.c2, vt1.c1, rt0.c0 FROM rt0 NATURAL JOIN vt1 WHERE ((NOT (TRIM(DISTINCT CAST(vt1.c1 AS BLOB), CASE vt1.c0  WHEN rt0.c0 THEN x'453f' ELSE 0.20440668434141684 END)))) UNION SELECT DISTINCT rt0.c2, vt1.c1, rt0.c0 FROM rt0 NATURAL JOIN vt1 WHERE (((TRIM(DISTINCT CAST(vt1.c1 AS BLOB), CASE vt1.c0  WHEN rt0.c0 THEN x'453f' ELSE 0.20440668434141684 END)) ISNULL));
SELECT DISTINCT rt0.c2, vt1.c1, rt0.c0 FROM rt0 NATURAL JOIN vt1;
SELECT vt1.c0, vt1.c1, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, vt1.c1, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, vt1.c1, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE (TYPEOF(vt1.c1)) GROUP BY vt1.c0, vt1.c1, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL vt1.c0, vt1.c1, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (TYPEOF(vt1.c1)))) GROUP BY vt1.c0, vt1.c1, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL vt1.c0, vt1.c1, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE (((TYPEOF(vt1.c1)) ISNULL)) GROUP BY vt1.c0, vt1.c1, rt0.c1, rt0.c0, rt0.c2;
SELECT vt1.c0, vt1.c1, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, vt1.c1, rt0.c1, rt0.c0, rt0.c2;
SELECT vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2;
SELECT vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2 HAVING COUNT((((rt0.c1))>=((AVG(AVG(MAX(vt1.c0))))))) UNION ALL SELECT vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2 HAVING (NOT (COUNT((((rt0.c1))>=((AVG(AVG(MAX(vt1.c0))))))))) UNION ALL SELECT vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2 HAVING ((COUNT((((rt0.c1))>=((AVG(AVG(MAX(vt1.c0)))))))) ISNULL);
SELECT ALL rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((+ (rt0.c0))) BETWEEN ((+ (rt0.c0))) AND (((rt0.c1) NOTNULL)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((+ (rt0.c0))) BETWEEN ((+ (rt0.c0))) AND (((rt0.c1) NOTNULL)))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((((((+ (rt0.c0))) BETWEEN ((+ (rt0.c0))) AND (((rt0.c1) NOTNULL)))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((INSTR(rt0.c0, x'') IN ())) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((INSTR(rt0.c0, x'') IN ())))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((INSTR(rt0.c0, x'') IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((rt0.c2 IN ((~ (rt0.c1))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((rt0.c2 IN ((~ (rt0.c1))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((rt0.c2 IN ((~ (rt0.c1))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING CAST('M}n(9w' AS BLOB) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (CAST('M}n(9w' AS BLOB))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((CAST('M}n(9w' AS BLOB)) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING CAST('M}n(9w' AS BLOB) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (CAST('M}n(9w' AS BLOB))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((CAST('M}n(9w' AS BLOB)) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((((rt0.c1 IN ()), (((rt0.c0))<((rt0.c1))), ROUND(rt0.c1, rt0.c2)))=((rt0.c1 COLLATE NOCASE, 0.5462709320019905, rtreenode(rt0.c1, NULL))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1 IN ()), (((rt0.c0))<((rt0.c1))), ROUND(rt0.c1, rt0.c2)))==((rt0.c1 COLLATE NOCASE, 0.5462709320019905, rtreenode(rt0.c1, NULL))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((((((rt0.c1 IN ()), (((rt0.c0))<((rt0.c1))), ROUND(rt0.c1, rt0.c2)))==((rt0.c1 COLLATE NOCASE, 0.5462709320019905, rtreenode(rt0.c1, NULL))))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 NOT INDEXED WHERE (((((((vt1.c1)/(vt1.c1)))OR(vt1.c0 COLLATE NOCASE)))AND(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c1)/(vt1.c1)))OR(vt1.c0 COLLATE NOCASE)))AND(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((vt1.c1)/(vt1.c1)))OR(vt1.c0 COLLATE NOCASE)))AND(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (CASE (rt0.c1 IN ())  WHEN CAST(rt0.c0 AS INTEGER) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) ELSE CASE rt0.c2  WHEN rt0.c1 THEN 0x28de709e END END) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE (rt0.c1 IN ())  WHEN CAST(rt0.c0 AS INTEGER) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) ELSE CASE rt0.c2  WHEN rt0.c1 THEN 0x28de709e END END))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE (rt0.c1 IN ())  WHEN CAST(rt0.c0 AS INTEGER) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) ELSE CASE rt0.c2  WHEN rt0.c1 THEN 0X28de709e END END) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0 HAVING MIN(vt1.c1) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0 HAVING (NOT (MIN(vt1.c1))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0 HAVING ((MIN(vt1.c1)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0 HAVING MIN(vt1.c1) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0 HAVING (NOT (MIN(vt1.c1))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0 HAVING ((MIN(vt1.c1)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0;
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c1 FROM vt1 WHERE (CASE WHEN CASE 0.6924899892682744  WHEN vt1.c0 THEN vt1.c0 ELSE 0.7257055345607539 END THEN vt1.c0 COLLATE NOCASE END) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((NOT (CASE WHEN CASE 0.6924899892682744  WHEN vt1.c0 THEN vt1.c0 ELSE 0.7257055345607539 END THEN vt1.c0 COLLATE NOCASE END))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE (((CASE WHEN CASE 0.6924899892682744  WHEN vt1.c0 THEN vt1.c0 ELSE 0.7257055345607539 END THEN vt1.c0 COLLATE NOCASE END) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (x'ece0e6d6') GROUP BY rt0.c0, vt1.c0 UNION SELECT ALL rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((NOT (x'ece0e6d6'))) GROUP BY rt0.c0, vt1.c0 UNION SELECT ALL rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (((x'ece0e6d6') ISNULL)) GROUP BY rt0.c0, vt1.c0;
SELECT rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING COUNT(AVG(GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING (NOT (COUNT(AVG(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING ((COUNT(AVG(GROUP_CONCAT(COUNT(*))))) ISNULL);
SELECT SUM(((((((((((rt0.c1)LIKE(rt0.c2)))AND(((rt0.c1) IS FALSE))))OR((NOT (rt0.c0)))))AND((- (rt0.c0)))))OR(LIKELIHOOD(DISTINCT rt0.c2, 0.9453425185864659)))) FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (x'') UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (x''))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((x'') ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE (((((vt1.c1)>(vt1.c1)))GLOB(CASE WHEN x'10c6' THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 END))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (((((vt1.c1)>(vt1.c1)))GLOB(CASE WHEN x'10c6' THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 END))))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE (((((((vt1.c1)>(vt1.c1)))GLOB(CASE WHEN x'10c6' THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 END))) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c0)-(rt0.c0)), ((x'') NOTNULL))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (NULLIF(DISTINCT ((rt0.c0)-(rt0.c0)), ((x'') NOTNULL))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((NULLIF(DISTINCT ((rt0.c0)-(rt0.c0)), ((x'') NOTNULL))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CASE WHEN (((vt1.c0, 0.6132650444544685, rt0.c0, rt0.c1, rt0.c0))>((rt0.c2, rt0.c1, rt0.c1, vt1.c0, vt1.c1))) THEN CAST(rt0.c1 AS NUMERIC) ELSE ((((((((vt1.c0)OR(rt0.c1)))AND(vt1.c1)))AND(vt1.c1)))AND(rt0.c2)) END GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CASE WHEN (((vt1.c0, 0.6132650444544685, rt0.c0, rt0.c1, rt0.c0))>((rt0.c2, rt0.c1, rt0.c1, vt1.c0, vt1.c1))) THEN CAST(rt0.c1 AS NUMERIC) ELSE ((((((((vt1.c0)OR(rt0.c1)))AND(vt1.c1)))AND(vt1.c1)))AND(rt0.c2)) END GROUP BY rt0.c0 HAVING ((AVG(rt0.c2)) ISNULL) UNION ALL SELECT ALL rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CASE WHEN (((vt1.c0, 0.6132650444544685, rt0.c0, rt0.c1, rt0.c0))>((rt0.c2, rt0.c1, rt0.c1, vt1.c0, vt1.c1))) THEN CAST(rt0.c1 AS NUMERIC) ELSE ((((((((vt1.c0)OR(rt0.c1)))AND(vt1.c1)))AND(vt1.c1)))AND(rt0.c2)) END GROUP BY rt0.c0 HAVING (NOT (((AVG(rt0.c2)) ISNULL))) UNION ALL SELECT rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CASE WHEN (((vt1.c0, 0.6132650444544685, rt0.c0, rt0.c1, rt0.c0))>((rt0.c2, rt0.c1, rt0.c1, vt1.c0, vt1.c1))) THEN CAST(rt0.c1 AS NUMERIC) ELSE ((((((((vt1.c0)OR(rt0.c1)))AND(vt1.c1)))AND(vt1.c1)))AND(rt0.c2)) END GROUP BY rt0.c0 HAVING ((((AVG(rt0.c2)) ISNULL)) ISNULL);
SELECT rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CASE WHEN (((vt1.c0, 0.6132650444544685, rt0.c0, rt0.c1, rt0.c0))>((rt0.c2, rt0.c1, rt0.c1, vt1.c0, vt1.c1))) THEN CAST(rt0.c1 AS NUMERIC) ELSE ((((((((vt1.c0)OR(rt0.c1)))AND(vt1.c1)))AND(vt1.c1)))AND(rt0.c2)) END GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CASE WHEN (((vt1.c0, 0.6132650444544685, rt0.c0, rt0.c1, rt0.c0))>((rt0.c2, rt0.c1, rt0.c1, vt1.c0, vt1.c1))) THEN CAST(rt0.c1 AS NUMERIC) ELSE ((((((((vt1.c0)OR(rt0.c1)))AND(vt1.c1)))AND(vt1.c1)))AND(rt0.c2)) END GROUP BY rt0.c0 HAVING ((AVG(rt0.c2)) ISNULL) UNION ALL SELECT ALL rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CASE WHEN (((vt1.c0, 0.6132650444544685, rt0.c0, rt0.c1, rt0.c0))>((rt0.c2, rt0.c1, rt0.c1, vt1.c0, vt1.c1))) THEN CAST(rt0.c1 AS NUMERIC) ELSE ((((((((vt1.c0)OR(rt0.c1)))AND(vt1.c1)))AND(vt1.c1)))AND(rt0.c2)) END GROUP BY rt0.c0 HAVING (NOT (((AVG(rt0.c2)) ISNULL))) UNION ALL SELECT rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CASE WHEN (((vt1.c0, 0.6132650444544685, rt0.c0, rt0.c1, rt0.c0))>((rt0.c2, rt0.c1, rt0.c1, vt1.c0, vt1.c1))) THEN CAST(rt0.c1 AS NUMERIC) ELSE ((((((((vt1.c0)OR(rt0.c1)))AND(vt1.c1)))AND(vt1.c1)))AND(rt0.c2)) END GROUP BY rt0.c0 HAVING ((((AVG(rt0.c2)) ISNULL)) ISNULL);
SELECT rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CASE WHEN (((vt1.c0, 0.6132650444544685, rt0.c0, rt0.c1, rt0.c0))>((rt0.c2, rt0.c1, rt0.c1, vt1.c0, vt1.c1))) THEN CAST(rt0.c1 AS NUMERIC) ELSE ((((((((vt1.c0)OR(rt0.c1)))AND(vt1.c1)))AND(vt1.c1)))AND(rt0.c2)) END GROUP BY rt0.c0;
SELECT * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c1)AND(rt0.c0))) NOT BETWEEN (((((rt0.c0)AND(NULL)))AND(rt0.c1))) AND (vt1.c1 COLLATE NOCASE))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (((((rt0.c1)AND(rt0.c0))) NOT BETWEEN (((((rt0.c0)AND(NULL)))AND(rt0.c1))) AND (vt1.c1 COLLATE NOCASE))))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((((((rt0.c1)AND(rt0.c0))) NOT BETWEEN (((((rt0.c0)AND(NULL)))AND(rt0.c1))) AND (vt1.c1 COLLATE NOCASE))) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))-(((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))-(((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))-(((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, vt1.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c1, rt0.c0, rt0.c2, vt1.c0;
SELECT rt0.c1, vt1.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 WHERE (NULL) GROUP BY rt0.c1, vt1.c1, rt0.c0, rt0.c2, vt1.c0 UNION SELECT rt0.c1, vt1.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 WHERE ((NOT (NULL))) GROUP BY rt0.c1, vt1.c1, rt0.c0, rt0.c2, vt1.c0 UNION SELECT ALL rt0.c1, vt1.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 WHERE (((NULL) ISNULL)) GROUP BY rt0.c1, vt1.c1, rt0.c0, rt0.c2, vt1.c0;
SELECT ALL rt0.c1, vt1.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c1, rt0.c0, rt0.c2, vt1.c0;
SELECT ALL vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON ((CAST(rt0.c2 AS REAL))!=(vt1.c1)) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2;
SELECT vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON ((CAST(rt0.c2 AS REAL))<>(vt1.c1)) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 HAVING ((NULL) BETWEEN ((~ (SUM(vt1.c1)))) AND (((AVG(NULL)) ISNULL))) UNION ALL SELECT vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON ((CAST(rt0.c2 AS REAL))!=(vt1.c1)) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 HAVING (NOT (((NULL) BETWEEN ((~ (SUM(vt1.c1)))) AND (((AVG(NULL)) ISNULL))))) UNION ALL SELECT ALL vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON ((CAST(rt0.c2 AS REAL))!=(vt1.c1)) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 HAVING ((((NULL) BETWEEN ((~ (SUM(vt1.c1)))) AND (((AVG(NULL)) ISNULL)))) ISNULL);
SELECT ALL vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON ((CAST(rt0.c2 AS REAL))!=(vt1.c1)) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2;
SELECT vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON ((CAST(rt0.c2 AS REAL))<>(vt1.c1)) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 HAVING ((NULL) BETWEEN ((~ (SUM(vt1.c1)))) AND (((AVG(NULL)) ISNULL))) UNION ALL SELECT vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON ((CAST(rt0.c2 AS REAL))!=(vt1.c1)) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 HAVING (NOT (((NULL) BETWEEN ((~ (SUM(vt1.c1)))) AND (((AVG(NULL)) ISNULL))))) UNION ALL SELECT ALL vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON ((CAST(rt0.c2 AS REAL))!=(vt1.c1)) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 HAVING ((((NULL) BETWEEN ((~ (SUM(vt1.c1)))) AND (((AVG(NULL)) ISNULL)))) ISNULL);
SELECT ALL vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON ((CAST(rt0.c2 AS REAL))!=(vt1.c1)) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2;
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON -4.03062338E8;
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON -4.03062338E8 WHERE (((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)) COLLATE BINARY COLLATE BINARY) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN vt1 ON -4.03062338E8 WHERE ((NOT (((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)) COLLATE BINARY COLLATE BINARY))) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN vt1 ON -4.03062338E8 WHERE (((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)) COLLATE BINARY COLLATE BINARY) ISNULL));
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON -4.03062338E8;
SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON (~ (((vt1.c0)<>(vt1.c0))));
SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON (~ (((vt1.c0)!=(vt1.c0)))) WHERE (x'') UNION SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON (~ (((vt1.c0)<>(vt1.c0)))) WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON (~ (((vt1.c0)<>(vt1.c0)))) WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON (~ (((vt1.c0)<>(vt1.c0))));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c0) NOTNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c0) NOTNULL)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c0) NOTNULL)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((COUNT(rt0.c1), COUNT(*), MAX(rt0.c2))) BETWEEN ((((TOTAL(rt0.c0)) NOT BETWEEN (MAX(rt0.c1)) AND (MAX(MAX(COUNT(SUM(SUM(GROUP_CONCAT(COUNT(COUNT(*)))))))))), x'', ((((((((rt0.c2)AND(MIN(MIN(rt0.c1)))))AND(SUM(COUNT(GROUP_CONCAT(rt0.c1))))))OR(COUNT(*))))AND(rt0.c0)))) AND ((GROUP_CONCAT(rt0.c2), (rt0.c0 IN ()), MIN(AVG(0xffffffffc38f1a37))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT ((((COUNT(rt0.c1), COUNT(*), MAX(rt0.c2))) BETWEEN ((((TOTAL(rt0.c0)) NOT BETWEEN (MAX(rt0.c1)) AND (MAX(MAX(COUNT(SUM(SUM(GROUP_CONCAT(COUNT(COUNT(*)))))))))), x'', ((((((((rt0.c2)AND(MIN(MIN(rt0.c1)))))AND(SUM(COUNT(GROUP_CONCAT(rt0.c1))))))OR(COUNT(*))))AND(rt0.c0)))) AND ((GROUP_CONCAT(rt0.c2), (rt0.c0 IN ()), MIN(AVG(0xffffffffc38f1a37))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((((COUNT(rt0.c1), COUNT(*), MAX(rt0.c2))) BETWEEN ((((TOTAL(rt0.c0)) NOT BETWEEN (MAX(rt0.c1)) AND (MAX(MAX(COUNT(SUM(SUM(GROUP_CONCAT(COUNT(COUNT(*)))))))))), x'', ((((((((rt0.c2)AND(MIN(MIN(rt0.c1)))))AND(SUM(COUNT(GROUP_CONCAT(rt0.c1))))))OR(COUNT(*))))AND(rt0.c0)))) AND ((GROUP_CONCAT(rt0.c2), (rt0.c0 IN ()), MIN(AVG(0Xffffffffc38f1a37)))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((vt1.c1) IS TRUE) COLLATE RTRIM) ORDER BY ((vt1.c1 IN ()) IN ());
SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c1) IS TRUE) COLLATE RTRIM))) ORDER BY ((vt1.c1 IN ()) IN ());
SELECT * FROM vt1 WHERE (((((vt1.c1) IS TRUE) COLLATE RTRIM) ISNULL)) ORDER BY ((vt1.c1 IN ()) IN ());
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((((rt0.c1)&(rt0.c2)) IN ((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1)))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((((rt0.c1)&(rt0.c2)) IN ((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1)))))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((((rt0.c1)&(rt0.c2)) IN ((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL vt1.c1, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN vt1 GROUP BY vt1.c1, rt0.c2, rt0.c1;
SELECT vt1.c1, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN vt1 WHERE ((((rt0.c2 IN ()))>=((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) GROUP BY vt1.c1, rt0.c2, rt0.c1 UNION SELECT vt1.c1, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN vt1 WHERE ((NOT ((((rt0.c2 IN ()))>=((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))))) GROUP BY vt1.c1, rt0.c2, rt0.c1 UNION SELECT ALL vt1.c1, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN vt1 WHERE ((((((rt0.c2 IN ()))>=((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ISNULL)) GROUP BY vt1.c1, rt0.c2, rt0.c1;
SELECT ALL vt1.c1, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN vt1 GROUP BY vt1.c1, rt0.c2, rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0 HAVING MAX(((MIN(COUNT(*)))/(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(((MIN(COUNT(*)))/(GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(((MIN(COUNT(*)))/(GROUP_CONCAT(COUNT(*)))))) ISNULL);
SELECT ALL * FROM vt1, rt0;
SELECT ALL * FROM vt1 NOT INDEXED, rt0 WHERE (rt0.c2) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c1 END IN (rt0.c1 COLLATE NOCASE, ((rt0.c1) IS FALSE)));
SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c1 END IN (rt0.c1 COLLATE NOCASE, ((rt0.c1) IS FALSE))) WHERE (CASE ((vt1.c1) NOTNULL)  WHEN UNLIKELY(DISTINCT vt1.c1) THEN ((rt0.c1) NOTNULL) ELSE UPPER(DISTINCT rt0.c0) END) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c1 END IN (rt0.c1 COLLATE NOCASE, ((rt0.c1) IS FALSE))) WHERE ((NOT (CASE ((vt1.c1) NOTNULL)  WHEN UNLIKELY(DISTINCT vt1.c1) THEN ((rt0.c1) NOTNULL) ELSE UPPER(DISTINCT rt0.c0) END))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c1 END IN (rt0.c1 COLLATE NOCASE, ((rt0.c1) IS FALSE))) WHERE (((CASE ((vt1.c1) NOTNULL)  WHEN UNLIKELY(DISTINCT vt1.c1) THEN ((rt0.c1) NOTNULL) ELSE UPPER(DISTINCT rt0.c0) END) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c1 END IN (rt0.c1 COLLATE NOCASE, ((rt0.c1) IS FALSE)));
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0;
SELECT rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0 HAVING TOTAL(SUM(COUNT(GROUP_CONCAT(rt0.c0))) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0 HAVING (NOT (TOTAL(SUM(COUNT(GROUP_CONCAT(rt0.c0))) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0 HAVING ((TOTAL(SUM(COUNT(GROUP_CONCAT(rt0.c0))) COLLATE NOCASE)) ISNULL);
SELECT ALL vt1.c0, rt0.c2, rt0.c1, vt1.c1 FROM vt1, rt0;
SELECT vt1.c0, rt0.c2, rt0.c1, vt1.c1 FROM vt1, rt0 WHERE (INSTR((((vt1.c1))>=((vt1.c1))), LOWER(DISTINCT rt0.c2))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c1, vt1.c1 FROM vt1, rt0 WHERE ((NOT (INSTR((((vt1.c1))>=((vt1.c1))), LOWER(DISTINCT rt0.c2))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c1, vt1.c1 FROM vt1, rt0 WHERE (((INSTR((((vt1.c1))>=((vt1.c1))), LOWER(DISTINCT rt0.c2))) ISNULL));
SELECT ALL vt1.c0, rt0.c2, rt0.c1, vt1.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, vt1.c1 FROM vt1 FULL OUTER JOIN rt0 ON LIKELIHOOD((+ (vt1.c1)), 0.9513805748723675);
SELECT DISTINCT rt0.c2, vt1.c1 FROM vt1 FULL OUTER JOIN rt0 ON LIKELIHOOD((+ (vt1.c1)), 0.9513805748723675) WHERE (json_array_length(CAST(vt1.c1 AS BLOB))) UNION SELECT DISTINCT rt0.c2, vt1.c1 FROM vt1 FULL OUTER JOIN rt0 ON LIKELIHOOD((+ (vt1.c1)), 0.9513805748723675) WHERE ((NOT (json_array_length(CAST(vt1.c1 AS BLOB))))) UNION SELECT DISTINCT rt0.c2, vt1.c1 FROM vt1 FULL OUTER JOIN rt0 ON LIKELIHOOD((+ (vt1.c1)), 0.9513805748723675) WHERE (((json_array_length(CAST(vt1.c1 AS BLOB))) ISNULL));
SELECT DISTINCT rt0.c2, vt1.c1 FROM vt1 FULL OUTER JOIN rt0 ON LIKELIHOOD((+ (vt1.c1)), 0.9513805748723675);
SELECT ALL vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2;
SELECT vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (((((rt0.c1 COLLATE NOCASE)AND(IFNULL(rt0.c0, rt0.c1))))AND(x''))) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((NOT (((((rt0.c1 COLLATE NOCASE)AND(IFNULL(rt0.c0, rt0.c1))))AND(x''))))) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 UNION SELECT vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (((((((rt0.c1 COLLATE NOCASE)AND(IFNULL(rt0.c0, rt0.c1))))AND(x''))) ISNULL)) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2;
SELECT ALL rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON (- (rt0.c2)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON (- (rt0.c2)) GROUP BY rt0.c1 HAVING LTRIM(MIN(SUM(rt0.c2)), TOTAL(SUM(rt0.c0))) UNION ALL SELECT ALL rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON (- (rt0.c2)) GROUP BY rt0.c1 HAVING (NOT (LTRIM(MIN(SUM(rt0.c2)), TOTAL(SUM(rt0.c0))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON (- (rt0.c2)) GROUP BY rt0.c1 HAVING ((LTRIM(MIN(SUM(rt0.c2)), TOTAL(SUM(rt0.c0)))) ISNULL);
SELECT ALL rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((rt0.c0)AND(vt1.c1)))AND(rt0.c0)))OR(((((rt0.c2)OR(rt0.c0)))OR('\<')))))OR(((((x'')AND(rt0.c2)))AND(vt1.c0))));
SELECT ALL rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((rt0.c0)AND(vt1.c1)))AND(rt0.c0)))OR(((((rt0.c2)OR(rt0.c0)))OR('\<')))))OR(((((x'')AND(rt0.c2)))AND(vt1.c0)))) WHERE (((NULL) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (vt1.c1 COLLATE BINARY))) UNION ALL SELECT rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((rt0.c0)AND(vt1.c1)))AND(rt0.c0)))OR(((((rt0.c2)OR(rt0.c0)))OR('\<')))))OR(((((x'')AND(rt0.c2)))AND(vt1.c0)))) WHERE ((NOT (((NULL) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (vt1.c1 COLLATE BINARY))))) UNION ALL SELECT rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((rt0.c0)AND(vt1.c1)))AND(rt0.c0)))OR(((((rt0.c2)OR(rt0.c0)))OR('\<')))))OR(((((x'')AND(rt0.c2)))AND(vt1.c0)))) WHERE (((((NULL) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (vt1.c1 COLLATE BINARY))) ISNULL));
SELECT ALL rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((rt0.c0)AND(vt1.c1)))AND(rt0.c0)))OR(((((rt0.c2)OR(rt0.c0)))OR('\<')))))OR(((((x'')AND(rt0.c2)))AND(vt1.c0))));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c2 IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((rt0.c2 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2 IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c1, vt1.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c1, vt1.c0;
SELECT rt0.c2, rt0.c1, vt1.c1, vt1.c0 FROM rt0, vt1 WHERE (CAST(0.0051480282785497655 AS REAL)) GROUP BY rt0.c2, rt0.c1, vt1.c1, vt1.c0 UNION SELECT ALL rt0.c2, rt0.c1, vt1.c1, vt1.c0 FROM rt0, vt1 WHERE ((NOT (CAST(0.0051480282785497655 AS REAL)))) GROUP BY rt0.c2, rt0.c1, vt1.c1, vt1.c0 UNION SELECT ALL rt0.c2, rt0.c1, vt1.c1, vt1.c0 FROM rt0, vt1 WHERE (((CAST(0.0051480282785497655 AS REAL)) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt1.c1, vt1.c0;
SELECT rt0.c2, rt0.c1, vt1.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c1, vt1.c0;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((COUNT(*))<<(COUNT(MAX(vt1.c1)))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (((COUNT(*))<<(COUNT(MAX(vt1.c1)))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((((COUNT(*))<<(COUNT(MAX(vt1.c1))))) ISNULL);
SELECT * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE ((((('0.5956347087697964')AND(0.9313020703239435)))|(((rt0.c0)>(rt0.c2))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT ((((('0.5956347087697964')AND(0.9313020703239435)))|(((rt0.c0)>(rt0.c2))))))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((((((('0.5956347087697964')AND(0.9313020703239435)))|(((rt0.c0)>(rt0.c2))))) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((((json_insert(vt1.c0, rt0.c2, rt0.c2, vt1.c1, rt0.c0), rt0.c1 COLLATE NOCASE, ((vt1.c1) IS FALSE), LAST_INSERT_ROWID(), NULL))==((((vt1.c1)AND(vt1.c0)), 0x3b9809e0, CAST(rt0.c0 AS INTEGER), (((vt1.c1))>((vt1.c1))), (NOT (vt1.c1)))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((((json_insert(vt1.c0, rt0.c2, rt0.c2, vt1.c1, rt0.c0), rt0.c1 COLLATE NOCASE, ((vt1.c1) IS FALSE), LAST_INSERT_ROWID(), NULL))=((((vt1.c1)AND(vt1.c0)), 0x3b9809e0, CAST(rt0.c0 AS INTEGER), (((vt1.c1))>((vt1.c1))), (NOT (vt1.c1)))))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((((json_insert(vt1.c0, rt0.c2, rt0.c2, vt1.c1, rt0.c0), rt0.c1 COLLATE NOCASE, ((vt1.c1) IS FALSE), LAST_INSERT_ROWID(), NULL))=((((vt1.c1)AND(vt1.c0)), 0x3b9809e0, CAST(rt0.c0 AS INTEGER), (((vt1.c1))>((vt1.c1))), (NOT (vt1.c1)))))) ISNULL));
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (LTRIM(CASE ''  WHEN vt1.c0 THEN vt1.c0 END)) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (LTRIM(CASE ''  WHEN vt1.c0 THEN vt1.c0 END)))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((LTRIM(CASE ''  WHEN vt1.c0 THEN vt1.c0 END)) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING GROUP_CONCAT(UPPER(DISTINCT rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(UPPER(DISTINCT rt0.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(UPPER(DISTINCT rt0.c1))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING GROUP_CONCAT(UPPER(DISTINCT rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(UPPER(DISTINCT rt0.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(UPPER(DISTINCT rt0.c1))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c2, vt1.c1, rt0.c0 FROM vt1, rt0;
SELECT ALL vt1.c0, rt0.c2, vt1.c1, rt0.c0 FROM vt1, rt0 WHERE (TRIM(rt0.c1, CAST(vt1.c0 AS TEXT))) UNION ALL SELECT ALL vt1.c0, rt0.c2, vt1.c1, rt0.c0 FROM vt1, rt0 WHERE ((NOT (TRIM(rt0.c1, CAST(vt1.c0 AS TEXT))))) UNION ALL SELECT vt1.c0, rt0.c2, vt1.c1, rt0.c0 FROM vt1, rt0 WHERE (((TRIM(rt0.c1, CAST(vt1.c0 AS TEXT))) ISNULL));
SELECT ALL vt1.c0, rt0.c2, vt1.c1, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt1.c1 FROM rt0 LEFT OUTER JOIN vt1 ON vt1.c0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt1.c1 FROM rt0 LEFT OUTER JOIN vt1 ON vt1.c0 WHERE (CAST(CAST(rt0.c0 AS INTEGER) AS BLOB)) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt1.c1 FROM rt0 LEFT OUTER JOIN vt1 ON vt1.c0 WHERE ((NOT (CAST(CAST(rt0.c0 AS INTEGER) AS BLOB)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt1.c1 FROM rt0 LEFT OUTER JOIN vt1 ON vt1.c0 WHERE (((CAST(CAST(rt0.c0 AS INTEGER) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt1.c1 FROM rt0 LEFT OUTER JOIN vt1 ON vt1.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING TOTAL('~D㴘5~X') UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (TOTAL('~D㴘5~X'))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((TOTAL('~D㴘5~X')) ISNULL);
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING TOTAL('~D㴘5~X') UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (TOTAL('~D㴘5~X'))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((TOTAL('~D㴘5~X')) ISNULL);
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c0, vt1.c1 FROM rt0, vt1 NOT INDEXED;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt1.c0, vt1.c1 FROM rt0, vt1 WHERE (CAST(((vt1.c1)<(rt0.c0)) AS REAL)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c0, vt1.c1 FROM rt0, vt1 WHERE ((NOT (CAST(((vt1.c1)<(rt0.c0)) AS REAL)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c0, vt1.c1 FROM rt0, vt1 WHERE (((CAST(((vt1.c1)<(rt0.c0)) AS REAL)) ISNULL));
SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c0, vt1.c1 FROM rt0, vt1 NOT INDEXED;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((0.5977566504661089)) BETWEEN ((((vt1.c1) NOT NULL))) AND ((vt1.c0 COLLATE BINARY)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((0.5977566504661089)) BETWEEN ((((vt1.c1) NOT NULL))) AND ((vt1.c0 COLLATE BINARY)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((0.5977566504661089)) BETWEEN ((((vt1.c1) NOT NULL))) AND ((vt1.c0 COLLATE BINARY)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (0x51c278a8) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (0x51c278a8))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((0X51c278a8) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING TOTAL(COUNT(rt0.c2)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (TOTAL(COUNT(rt0.c2)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((TOTAL(COUNT(rt0.c2))) ISNULL);
SELECT ALL MIN(CAST(CAST(rt0.c0 AS REAL) AS REAL)) FROM rt0 ORDER BY ((((((rt0.c0) IS TRUE))AND(CAST(rt0.c0 AS BLOB))))AND(CAST(rt0.c1 AS TEXT))), x'5e2a'  NULLS LAST, CAST(CAST(rt0.c2 AS INTEGER) AS TEXT) ASC, ((((((rt0.c2)LIKE(rt0.c0)))OR((rt0.c0 IN (rt0.c1)))))AND(rt0.c1 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (x'') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM rt0 WHERE (((x'') ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS BLOB)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST(vt1.c0 COLLATE RTRIM AS BLOB)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST(vt1.c0 COLLATE RTRIM AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((+ (vt1.c0 COLLATE NOCASE))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((+ (vt1.c0 COLLATE NOCASE))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((((+ (vt1.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL rt0.c1, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c1;
SELECT ALL rt0.c1, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c1 HAVING TOTAL(MAX(rt0.c1)) COLLATE NOCASE UNION ALL SELECT ALL rt0.c1, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c1 HAVING (NOT (TOTAL(MAX(rt0.c1)) COLLATE NOCASE)) UNION ALL SELECT rt0.c1, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c1 HAVING ((TOTAL(MAX(rt0.c1)) COLLATE NOCASE) ISNULL);
SELECT * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c2) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c2) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0, vt1.c1, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0, vt1.c1, rt0.c2 FROM vt1, rt0 WHERE (((((vt1.c0) IS FALSE)) BETWEEN (((((rt0.c1)AND(rt0.c0)))OR(0.007857228671622085))) AND (((rt0.c1)IS NOT(rt0.c1))))) UNION SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0, vt1.c1, rt0.c2 FROM vt1, rt0 WHERE ((NOT (((((vt1.c0) IS FALSE)) BETWEEN (((((rt0.c1)AND(rt0.c0)))OR(0.007857228671622085))) AND (((rt0.c1)IS NOT(rt0.c1))))))) UNION SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0, vt1.c1, rt0.c2 FROM vt1, rt0 WHERE (((((((vt1.c0) IS FALSE)) BETWEEN (((((rt0.c1)AND(rt0.c0)))OR(0.007857228671622085))) AND (((rt0.c1)IS NOT(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0, vt1.c1, rt0.c2 FROM vt1, rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c2))))<>((+ (rt0.c1))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c2))))<>((+ (rt0.c1))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c2))))!=((+ (rt0.c1))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (((((AVG(vt1.c0))) NOT BETWEEN (('')) AND ((COUNT(vt1.c1))))) BETWEEN (vt1.c1) AND (TOTAL(TOTAL(AVG(vt1.c0))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT ((((((AVG(vt1.c0))) NOT BETWEEN (('')) AND ((COUNT(vt1.c1))))) BETWEEN (vt1.c1) AND (TOTAL(TOTAL(AVG(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (((((((AVG(vt1.c0))) NOT BETWEEN (('')) AND ((COUNT(vt1.c1))))) BETWEEN (vt1.c1) AND (TOTAL(TOTAL(AVG(vt1.c0)))))) ISNULL);
SELECT rt0.c0, vt1.c1, rt0.c2 FROM vt1, rt0;
SELECT rt0.c0, vt1.c1, rt0.c2 FROM vt1, rt0 WHERE (NULLIF(DISTINCT rt0.c1, rt0.c2) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c0, vt1.c1, rt0.c2 FROM vt1, rt0 WHERE ((NOT (NULLIF(DISTINCT rt0.c1, rt0.c2) COLLATE RTRIM))) UNION ALL SELECT rt0.c0, vt1.c1, rt0.c2 FROM vt1, rt0 WHERE (((NULLIF(DISTINCT rt0.c1, rt0.c2) COLLATE RTRIM) ISNULL));
SELECT rt0.c0, vt1.c1, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((0.7775105652449926, x'', CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END))>((STRFTIME(vt1.c1, vt1.c0, vt1.c0), vt1.c1 COLLATE RTRIM, (((vt1.c0))<((vt1.c1))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((0.7775105652449926, x'', CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END))>((STRFTIME(vt1.c1, vt1.c0, vt1.c0), vt1.c1 COLLATE RTRIM, (((vt1.c0))<((vt1.c1))))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((0.7775105652449926, x'', CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END))>((STRFTIME(vt1.c1, vt1.c0, vt1.c0), vt1.c1 COLLATE RTRIM, (((vt1.c0))<((vt1.c1))))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c1, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON rt0.c1 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON rt0.c1 WHERE (((((vt1.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0))) ISNULL)) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON rt0.c1 WHERE ((NOT (((((vt1.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0))) ISNULL)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON rt0.c1 WHERE (((((((vt1.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0))) ISNULL)) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON rt0.c1 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((rt0.c1)-(COUNT(TOTAL(GROUP_CONCAT(MIN(rt0.c1)))))))<<(((rt0.c0)LIKE(SUM(rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (((((rt0.c1)-(COUNT(TOTAL(GROUP_CONCAT(MIN(rt0.c1)))))))<<(((rt0.c0)LIKE(SUM(rt0.c2))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((((rt0.c1)-(COUNT(TOTAL(GROUP_CONCAT(MIN(rt0.c1)))))))<<(((rt0.c0)LIKE(SUM(rt0.c2)))))) ISNULL);
SELECT vt1.c1, rt0.c0 FROM rt0, vt1;
SELECT ALL vt1.c1, rt0.c0 FROM rt0, vt1 WHERE (rt0.c0) UNION ALL SELECT vt1.c1, rt0.c0 FROM rt0, vt1 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL vt1.c1, rt0.c0 FROM rt0, vt1 WHERE (((rt0.c0) ISNULL));
SELECT vt1.c1, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (0X36bde8ba) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (0x36bde8ba))) UNION SELECT DISTINCT * FROM rt0 WHERE (((0x36bde8ba) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, vt1.c1, rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c1, rt0.c2, vt1.c0;
SELECT ALL rt0.c0, vt1.c1, rt0.c2, vt1.c0 FROM rt0, vt1 WHERE (((((((rt0.c1) NOT NULL))AND(CAST(rt0.c1 AS INTEGER))))OR(CAST(0.08768635090151444 AS BLOB)))) GROUP BY rt0.c0, vt1.c1, rt0.c2, vt1.c0 UNION SELECT ALL rt0.c0, vt1.c1, rt0.c2, vt1.c0 FROM rt0, vt1 WHERE ((NOT (((((((rt0.c1) NOT NULL))AND(CAST(rt0.c1 AS INTEGER))))OR(CAST(0.08768635090151444 AS BLOB)))))) GROUP BY rt0.c0, vt1.c1, rt0.c2, vt1.c0 UNION SELECT ALL rt0.c0, vt1.c1, rt0.c2, vt1.c0 FROM rt0, vt1 WHERE (((((((((rt0.c1) NOT NULL))AND(CAST(rt0.c1 AS INTEGER))))OR(CAST(0.08768635090151444 AS BLOB)))) ISNULL)) GROUP BY rt0.c0, vt1.c1, rt0.c2, vt1.c0;
SELECT ALL rt0.c0, vt1.c1, rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c1, rt0.c2, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING SUM(TOTAL(vt1.c1)) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (SUM(TOTAL(vt1.c1)))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((SUM(TOTAL(vt1.c1))) ISNULL);
SELECT ALL * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE ((((NOT (rt0.c2))) ISNULL)) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT ((((NOT (rt0.c2))) ISNULL)))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((((((NOT (rt0.c2))) ISNULL)) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE ((((rt0.c1)/(vt1.c1)) IN (((((((((rt0.c1)AND(x'')))OR(vt1.c0)))AND(x'')))OR(vt1.c1))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT ((((rt0.c1)/(vt1.c1)) IN (((((((((rt0.c1)AND(x'')))OR(vt1.c0)))AND(x'')))OR(vt1.c1))))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((((((rt0.c1)/(vt1.c1)) IN (((((((((rt0.c1)AND(x'')))OR(vt1.c0)))AND(x'')))OR(vt1.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (-1417404765 COLLATE BINARY) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (-1417404765 COLLATE BINARY))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((-1417404765 COLLATE BINARY) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING NULL UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (NULL)) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((NULL) ISNULL);
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING NULL UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (NULL)) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((NULL) ISNULL);
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1;
SELECT vt1.c1, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))AND(((rt0.c0)<(rt0.c1))))) UNION ALL SELECT vt1.c1, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))AND(((rt0.c0)<(rt0.c1))))))) UNION ALL SELECT ALL vt1.c1, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE (((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))AND(((rt0.c0)<(rt0.c1))))) ISNULL));
SELECT ALL vt1.c1, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((- (vt1.c0)) IN ())) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((- (vt1.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((- (vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c0 IN (rt0.c2)), ((rt0.c1) NOTNULL), ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0))))!=((NULL, ROUND(rt0.c0, ''), (+ ('1777339168')))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0 IN (rt0.c2)), ((rt0.c1) NOTNULL), ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0))))<>((NULL, ROUND(rt0.c0, ''), (+ ('1777339168')))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c0 IN (rt0.c2)), ((rt0.c1) NOTNULL), ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0))))!=((NULL, ROUND(rt0.c0, ''), (+ ('1777339168')))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL MAX(vt1.c1) FROM vt1;
SELECT * FROM rt0 NATURAL JOIN vt1;
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (rt0.c2) UNION ALL SELECT * FROM rt0 NATURAL JOIN vt1 WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (((rt0.c2) ISNULL));
SELECT * FROM rt0 NATURAL JOIN vt1;
SELECT DISTINCT rt0.c1, vt1.c1, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c1, vt1.c1, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE (((TYPEOF(x'8562'))<<((vt1.c1 IN (vt1.c1, rt0.c0))))) UNION SELECT DISTINCT rt0.c1, vt1.c1, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 NOT INDEXED WHERE ((NOT (((TYPEOF(x'8562'))<<((vt1.c1 IN (vt1.c1, rt0.c0))))))) UNION SELECT DISTINCT rt0.c1, vt1.c1, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE (((((TYPEOF(x'8562'))<<((vt1.c1 IN (vt1.c1, rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1, vt1.c1, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1;
SELECT ALL vt1.c1 FROM rt0, vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM rt0, vt1 WHERE (CAST(0.2584132516566905 AS REAL) COLLATE RTRIM) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM rt0, vt1 WHERE ((NOT (CAST(0.2584132516566905 AS REAL) COLLATE RTRIM))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM rt0, vt1 WHERE (((CAST(0.2584132516566905 AS REAL) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM rt0, vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 NOT INDEXED GROUP BY vt1.c0, vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 NOT INDEXED GROUP BY vt1.c0, vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (json_remove(LTRIM('-1825843547', rt0.c0), CAST(rt0.c0 AS REAL), UPPER(rt0.c2), 3.5657746E8)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (json_remove(LTRIM('-1825843547', rt0.c0), CAST(rt0.c0 AS REAL), UPPER(rt0.c2), 3.5657746E8)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((json_remove(LTRIM('-1825843547', rt0.c0), CAST(rt0.c0 AS REAL), UPPER(rt0.c2), 3.5657746E8)) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((((rt0.c0)&(x''))) BETWEEN ((((rt0.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))) AND (CAST(rt0.c0 AS REAL)))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((((rt0.c0)&(x''))) BETWEEN ((((rt0.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))) AND (CAST(rt0.c0 AS REAL)))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((((rt0.c0)&(x''))) BETWEEN ((((rt0.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))) AND (CAST(rt0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((((+ (rt0.c0))) BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) AND (((rt0.c2) IS TRUE)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((NOT ((((+ (rt0.c0))) BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) AND (((rt0.c2) IS TRUE)))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((((((+ (rt0.c0))) BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) AND (((rt0.c2) IS TRUE)))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING AVG(CASE rt0.c1  WHEN rt0.c2 THEN COUNT(*) END) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (AVG(CASE rt0.c1  WHEN rt0.c2 THEN COUNT(*) END))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((AVG(CASE rt0.c1  WHEN rt0.c2 THEN COUNT(*) END)) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (CAST(((((vt1.c1)AND(x'')))AND(vt1.c1)) AS REAL)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CAST(((((vt1.c1)AND(x'')))AND(vt1.c1)) AS REAL)))) UNION ALL SELECT * FROM vt1 WHERE (((CAST(((((vt1.c1)AND(x'')))AND(vt1.c1)) AS REAL)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, vt1.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c1, rt0.c0;
SELECT ALL rt0.c2, vt1.c1, rt0.c0 FROM vt1, rt0 WHERE ((('n\') NOTNULL)) GROUP BY rt0.c2, vt1.c1, rt0.c0 UNION SELECT rt0.c2, vt1.c1, rt0.c0 FROM vt1, rt0 WHERE ((NOT ((('n\') NOTNULL)))) GROUP BY rt0.c2, vt1.c1, rt0.c0 UNION SELECT rt0.c2, vt1.c1, rt0.c0 FROM vt1, rt0 WHERE ((((('n\') NOTNULL)) ISNULL)) GROUP BY rt0.c2, vt1.c1, rt0.c0;
SELECT rt0.c2, vt1.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((((0.22899502991782328) NOT BETWEEN (rt0.c0) AND (rt0.c2)))>=(((vt1.c0)|(rt0.c1)))) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((((0.22899502991782328) NOT BETWEEN (rt0.c0) AND (rt0.c2)))>=(((vt1.c0)|(rt0.c1)))) GROUP BY rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((((0.22899502991782328) NOT BETWEEN (rt0.c0) AND (rt0.c2)))>=(((vt1.c0)|(rt0.c1)))) GROUP BY rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((((0.22899502991782328) NOT BETWEEN (rt0.c0) AND (rt0.c2)))>=(((vt1.c0)|(rt0.c1)))) GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((((0.22899502991782328) NOT BETWEEN (rt0.c0) AND (rt0.c2)))>=(((vt1.c0)|(rt0.c1)))) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((((0.22899502991782328) NOT BETWEEN (rt0.c0) AND (rt0.c2)))>=(((vt1.c0)|(rt0.c1)))) GROUP BY rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((((0.22899502991782328) NOT BETWEEN (rt0.c0) AND (rt0.c2)))>=(((vt1.c0)|(rt0.c1)))) GROUP BY rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((((0.22899502991782328) NOT BETWEEN (rt0.c0) AND (rt0.c2)))>=(((vt1.c0)|(rt0.c1)))) GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((((0.22899502991782328) NOT BETWEEN (rt0.c0) AND (rt0.c2)))>=(((vt1.c0)|(rt0.c1)))) GROUP BY rt0.c1, rt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (0X33e5d775) UNION ALL SELECT * FROM rt0 WHERE ((NOT (0X33e5d775))) UNION ALL SELECT ALL * FROM rt0 WHERE (((0x33e5d775) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c0 FROM vt1, rt0 WHERE (((((0.8091682462085199)AND(vt1.c1 COLLATE NOCASE)))AND(JULIANDAY(rt0.c2, vt1.c1, rt0.c2)))) UNION SELECT DISTINCT rt0.c0 FROM vt1, rt0 WHERE ((NOT (((((0.8091682462085199)AND(vt1.c1 COLLATE NOCASE)))AND(JULIANDAY(rt0.c2, vt1.c1, rt0.c2)))))) UNION SELECT DISTINCT rt0.c0 FROM vt1, rt0 WHERE (((((((0.8091682462085199)AND(vt1.c1 COLLATE NOCASE)))AND(JULIANDAY(rt0.c2, vt1.c1, rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c0 FROM vt1, rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END END) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END END))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END END) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c1;
SELECT rt0.c2, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c1 HAVING COUNT(((vt1.c0)IS(rt0.c1))) UNION ALL SELECT rt0.c2, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c1 HAVING (NOT (COUNT(((vt1.c0)IS(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c1 HAVING ((COUNT(((vt1.c0)IS(rt0.c1)))) ISNULL);
SELECT rt0.c2, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c1;
SELECT rt0.c2, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c1 HAVING COUNT(((vt1.c0)IS(rt0.c1))) UNION ALL SELECT rt0.c2, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c1 HAVING (NOT (COUNT(((vt1.c0)IS(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c1 HAVING ((COUNT(((vt1.c0)IS(rt0.c1)))) ISNULL);
SELECT rt0.c2, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c1;
SELECT ALL TOTAL(rt0.c0) FROM vt1, rt0;
SELECT vt1.c1 FROM vt1;
SELECT vt1.c1 FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT vt1.c1 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT vt1.c1 FROM vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((- (rt0.c0)))!=(((rt0.c2)/(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((- (rt0.c0)))<>(((rt0.c2)/(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((- (rt0.c0)))!=(((rt0.c2)/(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, vt1.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON LIKE(((((((((((((vt1.c1)AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)), rt0.c0) GROUP BY rt0.c0, vt1.c1, rt0.c2;
SELECT rt0.c0, vt1.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON LIKE(((((((((((((vt1.c1)AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)), rt0.c0) WHERE (vt1.c1) GROUP BY rt0.c0, vt1.c1, rt0.c2 UNION SELECT ALL rt0.c0, vt1.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON LIKE(((((((((((((vt1.c1)AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)), rt0.c0) WHERE ((NOT (vt1.c1))) GROUP BY rt0.c0, vt1.c1, rt0.c2 UNION SELECT ALL rt0.c0, vt1.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON LIKE(((((((((((((vt1.c1)AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)), rt0.c0) WHERE (((vt1.c1) ISNULL)) GROUP BY rt0.c0, vt1.c1, rt0.c2;
SELECT ALL rt0.c0, vt1.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON LIKE(((((((((((((vt1.c1)AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)), rt0.c0) GROUP BY rt0.c0, vt1.c1, rt0.c2;
SELECT rt0.c1, vt1.c1 FROM rt0 CROSS JOIN vt1 ON (((((rt0.c1)<(vt1.c1))))<=((CAST(vt1.c1 AS TEXT)))) GROUP BY rt0.c1, vt1.c1;
SELECT rt0.c1, vt1.c1 FROM rt0 CROSS JOIN vt1 ON (((((rt0.c1)<(vt1.c1))))<=((CAST(vt1.c1 AS TEXT)))) GROUP BY rt0.c1, vt1.c1 HAVING ((((AVG(SUM(rt0.c2))) NOT BETWEEN (vt1.c1) AND (rt0.c1)))<>(((COUNT(*))GLOB(MIN(MIN(AVG(rt0.c0))))))) UNION ALL SELECT rt0.c1, vt1.c1 FROM rt0 CROSS JOIN vt1 ON (((((rt0.c1)<(vt1.c1))))<=((CAST(vt1.c1 AS TEXT)))) GROUP BY rt0.c1, vt1.c1 HAVING (NOT (((((AVG(SUM(rt0.c2))) NOT BETWEEN (vt1.c1) AND (rt0.c1)))<>(((COUNT(*))GLOB(MIN(MIN(AVG(rt0.c0))))))))) UNION ALL SELECT rt0.c1, vt1.c1 FROM rt0 CROSS JOIN vt1 ON (((((rt0.c1)<(vt1.c1))))<=((CAST(vt1.c1 AS TEXT)))) GROUP BY rt0.c1, vt1.c1 HAVING ((((((AVG(SUM(rt0.c2))) NOT BETWEEN (vt1.c1) AND (rt0.c1)))!=(((COUNT(*))GLOB(MIN(MIN(AVG(rt0.c0)))))))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (CAST(rt0.c1 AS REAL) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CAST(rt0.c1 AS REAL) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c1 AS REAL) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON ((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(((vt1.c0)GLOB(rt0.c1)))))OR((NOT (vt1.c1))));
SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON ((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(((vt1.c0)GLOB(rt0.c1)))))OR((NOT (vt1.c1)))) WHERE (((rt0.c1)<((vt1.c1 IN (rt0.c0, rt0.c1))))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON ((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(((vt1.c0)GLOB(rt0.c1)))))OR((NOT (vt1.c1)))) WHERE ((NOT (((rt0.c1)<((vt1.c1 IN (rt0.c0, rt0.c1))))))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON ((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(((vt1.c0)GLOB(rt0.c1)))))OR((NOT (vt1.c1)))) WHERE (((((rt0.c1)<((vt1.c1 IN (rt0.c0, rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON ((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(((vt1.c0)GLOB(rt0.c1)))))OR((NOT (vt1.c1))));
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 HAVING GROUP_CONCAT(vt1.c0) COLLATE BINARY UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM vt1 NOT INDEXED, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 HAVING (NOT (GROUP_CONCAT(vt1.c0) COLLATE BINARY)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 HAVING ((GROUP_CONCAT(vt1.c0) COLLATE BINARY) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 HAVING GROUP_CONCAT(vt1.c0) COLLATE BINARY UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM vt1 NOT INDEXED, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 HAVING (NOT (GROUP_CONCAT(vt1.c0) COLLATE BINARY)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 HAVING ((GROUP_CONCAT(vt1.c0) COLLATE BINARY) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c1, vt1.c0;
SELECT ALL * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (((((((((vt1.c0)AND(((vt1.c0)%(vt1.c1)))))AND((rt0.c0 IN ()))))OR(PRINTF(vt1.c1, vt1.c0, rt0.c1, vt1.c1, rt0.c1))))AND(((((vt1.c0)OR(rt0.c1)))AND(vt1.c1))))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (((((((((vt1.c0)AND(((vt1.c0)%(vt1.c1)))))AND((rt0.c0 IN ()))))OR(PRINTF(vt1.c1, vt1.c0, rt0.c1, vt1.c1, rt0.c1))))AND(((((vt1.c0)OR(rt0.c1)))AND(vt1.c1))))))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((((((((((vt1.c0)AND(((vt1.c0)%(vt1.c1)))))AND((rt0.c0 IN ()))))OR(PRINTF(vt1.c1, vt1.c0, rt0.c1, vt1.c1, rt0.c1))))AND(((((vt1.c0)OR(rt0.c1)))AND(vt1.c1))))) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT rt0.c1, vt1.c1, vt1.c0, rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON (rt0.c1 IN ()) COLLATE NOCASE;
SELECT DISTINCT rt0.c1, vt1.c1, vt1.c0, rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON (rt0.c1 IN ()) COLLATE NOCASE WHERE ((((CASE ''  WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END))>(((((vt1.c1))>((rt0.c1))))))) UNION SELECT DISTINCT rt0.c1, vt1.c1, vt1.c0, rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON (rt0.c1 IN ()) COLLATE NOCASE WHERE ((NOT ((((CASE ''  WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END))>(((((vt1.c1))>((rt0.c1))))))))) UNION SELECT DISTINCT rt0.c1, vt1.c1, vt1.c0, rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON (rt0.c1 IN ()) COLLATE NOCASE WHERE ((((((CASE ''  WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END))>(((((vt1.c1))>((rt0.c1))))))) ISNULL));
SELECT DISTINCT rt0.c1, vt1.c1, vt1.c0, rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON (rt0.c1 IN ()) COLLATE NOCASE;
SELECT ALL rt0.c1, vt1.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c1, rt0.c2;
SELECT ALL rt0.c1, vt1.c1, rt0.c2 FROM rt0, vt1 WHERE (rt0.c0 COLLATE NOCASE COLLATE RTRIM) GROUP BY rt0.c1, vt1.c1, rt0.c2 UNION SELECT rt0.c1, vt1.c1, rt0.c2 FROM rt0, vt1 WHERE ((NOT (rt0.c0 COLLATE NOCASE COLLATE RTRIM))) GROUP BY rt0.c1, vt1.c1, rt0.c2 UNION SELECT rt0.c1, vt1.c1, rt0.c2 FROM rt0, vt1 WHERE (((rt0.c0 COLLATE NOCASE COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1, vt1.c1, rt0.c2;
SELECT ALL rt0.c1, vt1.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c1, rt0.c2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((rt0.c2)%(SUM(TOTAL(TOTAL(rt0.c0)))))) NOT BETWEEN (AVG(rt0.c1)) AND (rt0.c0)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((((rt0.c2)%(SUM(TOTAL(TOTAL(rt0.c0)))))) NOT BETWEEN (AVG(rt0.c1)) AND (rt0.c0)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((((rt0.c2)%(SUM(TOTAL(TOTAL(rt0.c0)))))) NOT BETWEEN (AVG(rt0.c1)) AND (rt0.c0))) ISNULL);
SELECT MIN(((((rt0.c0)LIKE(vt1.c0))) IS FALSE)) FROM vt1, rt0;
SELECT ALL rt0.c2 FROM rt0, vt1;
SELECT rt0.c2 FROM rt0, vt1 WHERE ('%') UNION ALL SELECT rt0.c2 FROM rt0, vt1 WHERE ((NOT ('%'))) UNION ALL SELECT rt0.c2 FROM rt0, vt1 WHERE ((('%') ISNULL));
SELECT ALL rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((0.25150480798409536)>=(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((0.25150480798409536)>=(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((0.25150480798409536)>=(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2;
SELECT vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (((((rt0.c1)||(vt1.c0))) ISNULL)) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 UNION SELECT vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((NOT (((((rt0.c1)||(vt1.c0))) ISNULL)))) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (((((((rt0.c1)||(vt1.c0))) ISNULL)) ISNULL)) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2;
SELECT vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c1, rt0.c1, vt1.c0, rt0.c2;
SELECT rt0.c0, vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c1, rt0.c1, vt1.c0, rt0.c2 HAVING TOTAL(((vt1.c0) IS FALSE)) UNION ALL SELECT ALL rt0.c0, vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c1, rt0.c1, vt1.c0, rt0.c2 HAVING (NOT (TOTAL(((vt1.c0) IS FALSE)))) UNION ALL SELECT rt0.c0, vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c1, rt0.c1, vt1.c0, rt0.c2 HAVING ((TOTAL(((vt1.c0) IS FALSE))) ISNULL);
SELECT ALL rt0.c0, vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c1, rt0.c1, vt1.c0, rt0.c2;
SELECT rt0.c0, vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c1, rt0.c1, vt1.c0, rt0.c2 HAVING TOTAL(((vt1.c0) IS FALSE)) UNION ALL SELECT ALL rt0.c0, vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c1, rt0.c1, vt1.c0, rt0.c2 HAVING (NOT (TOTAL(((vt1.c0) IS FALSE)))) UNION ALL SELECT rt0.c0, vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c1, rt0.c1, vt1.c0, rt0.c2 HAVING ((TOTAL(((vt1.c0) IS FALSE))) ISNULL);
SELECT ALL rt0.c0, vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c1, rt0.c1, vt1.c0, rt0.c2;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (0.2947218186897216) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (0.2947218186897216))) UNION ALL SELECT * FROM rt0 WHERE (((0.2947218186897216) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 NOT INDEXED WHERE (((((~ (rt0.c1))))=((((rt0.c0)GLOB(rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (((((~ (rt0.c1))))==((((rt0.c0)GLOB(rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((((((~ (rt0.c1))))=((((rt0.c0)GLOB(rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c1 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c1 FROM rt0, vt1 WHERE ((((((NULL, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c2, vt1.c0, NULL))))||(((rt0.c2) IS TRUE)))) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c1 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c1 FROM rt0, vt1 WHERE ((NOT ((((((NULL, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c2, vt1.c0, NULL))))||(((rt0.c2) IS TRUE)))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c1 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c1 FROM rt0, vt1 WHERE ((((((((NULL, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c2, vt1.c0, NULL))))||(((rt0.c2) IS TRUE)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c1 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM rt0, vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM rt0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM rt0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM rt0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, vt1.c1 FROM rt0, vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM rt0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM rt0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM rt0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, vt1.c1 FROM rt0, vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c1 FROM vt1;
SELECT ALL vt1.c1 FROM vt1 WHERE (((((vt1.c0, vt1.c0, vt1.c0, NULL, vt1.c0))==((vt1.c1, vt1.c0, vt1.c1, vt1.c1, vt1.c1))) IN ())) UNION ALL SELECT vt1.c1 FROM vt1 WHERE ((NOT (((((vt1.c0, vt1.c0, vt1.c0, NULL, vt1.c0))=((vt1.c1, vt1.c0, vt1.c1, vt1.c1, vt1.c1))) IN ())))) UNION ALL SELECT ALL vt1.c1 FROM vt1 WHERE (((((((vt1.c0, vt1.c0, vt1.c0, NULL, vt1.c0))==((vt1.c1, vt1.c0, vt1.c1, vt1.c1, vt1.c1))) IN ())) ISNULL));
SELECT ALL vt1.c1 FROM vt1;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c1)>>(((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1)>>(((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c1)>>(((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (((vt1.c1)IS(vt1.c0))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c1)IS(vt1.c0))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (((((vt1.c1)IS(vt1.c0))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((((CASE WHEN rt0.c1 THEN NULL END)AND(((rt0.c1)LIKE(vt1.c1)))))AND((((rt0.c0, rt0.c0, rt0.c1, vt1.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, rt0.c2, vt1.c1, rt0.c0)) AND ((rt0.c0, rt0.c0, '-1329219210', rt0.c2, vt1.c1))))) GROUP BY vt1.c1, rt0.c1;
SELECT vt1.c1, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((((CASE WHEN rt0.c1 THEN NULL END)AND(((rt0.c1)LIKE(vt1.c1)))))AND((((rt0.c0, rt0.c0, rt0.c1, vt1.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, rt0.c2, vt1.c1, rt0.c0)) AND ((rt0.c0, rt0.c0, '-1329219210', rt0.c2, vt1.c1))))) GROUP BY vt1.c1, rt0.c1 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL vt1.c1, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((((CASE WHEN rt0.c1 THEN NULL END)AND(((rt0.c1)LIKE(vt1.c1)))))AND((((rt0.c0, rt0.c0, rt0.c1, vt1.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, rt0.c2, vt1.c1, rt0.c0)) AND ((rt0.c0, rt0.c0, '-1329219210', rt0.c2, vt1.c1))))) GROUP BY vt1.c1, rt0.c1 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT vt1.c1, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((((CASE WHEN rt0.c1 THEN NULL END)AND(((rt0.c1)LIKE(vt1.c1)))))AND((((rt0.c0, rt0.c0, rt0.c1, vt1.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, rt0.c2, vt1.c1, rt0.c0)) AND ((rt0.c0, rt0.c0, '-1329219210', rt0.c2, vt1.c1))))) GROUP BY vt1.c1, rt0.c1 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT vt1.c1 FROM vt1 NOT INDEXED;
SELECT ALL vt1.c1 FROM vt1 WHERE (((x'') BETWEEN ((~ (vt1.c1))) AND (CASE WHEN vt1.c0 THEN vt1.c1 END))) UNION ALL SELECT vt1.c1 FROM vt1 WHERE ((NOT (((x'') BETWEEN ((~ (vt1.c1))) AND (CASE WHEN vt1.c0 THEN vt1.c1 END))))) UNION ALL SELECT vt1.c1 FROM vt1 WHERE (((((x'') BETWEEN ((~ (vt1.c1))) AND (CASE WHEN vt1.c0 THEN vt1.c1 END))) ISNULL));
SELECT vt1.c1 FROM vt1 NOT INDEXED;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((+ (vt1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((+ (vt1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((+ (vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0 COLLATE BINARY, ((vt1.c0)+(vt1.c1)), (NOT (vt1.c0)), vt1.c1 COLLATE BINARY, CAST(vt1.c0 AS INTEGER)))>((CAST(vt1.c0 AS BLOB), ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)), '9U}Vd8 ', CAST(vt1.c1 AS REAL), vt1.c1 COLLATE NOCASE)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 COLLATE BINARY, ((vt1.c0)+(vt1.c1)), (NOT (vt1.c0)), vt1.c1 COLLATE BINARY, CAST(vt1.c0 AS INTEGER)))>((CAST(vt1.c0 AS BLOB), ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)), '9U}Vd8 ', CAST(vt1.c1 AS REAL), vt1.c1 COLLATE NOCASE)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0 COLLATE BINARY, ((vt1.c0)+(vt1.c1)), (NOT (vt1.c0)), vt1.c1 COLLATE BINARY, CAST(vt1.c0 AS INTEGER)))>((CAST(vt1.c0 AS BLOB), ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)), '9U}Vd8 ', CAST(vt1.c1 AS REAL), vt1.c1 COLLATE NOCASE)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING CASE CAST(rt0.c2 AS REAL)  WHEN ((((MIN(rt0.c2))OR(TOTAL(GROUP_CONCAT(SUM(COUNT(COUNT(GROUP_CONCAT(rt0.c0)))))))))AND(SUM(COUNT(rt0.c0)))) THEN MIN(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(rt0.c0)))) ELSE GROUP_CONCAT(COUNT(rt0.c1)) END UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (CASE CAST(rt0.c2 AS REAL)  WHEN ((((MIN(rt0.c2))OR(TOTAL(GROUP_CONCAT(SUM(COUNT(COUNT(GROUP_CONCAT(rt0.c0)))))))))AND(SUM(COUNT(rt0.c0)))) THEN MIN(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(rt0.c0)))) ELSE GROUP_CONCAT(COUNT(rt0.c1)) END)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CASE CAST(rt0.c2 AS REAL)  WHEN ((((MIN(rt0.c2))OR(TOTAL(GROUP_CONCAT(SUM(COUNT(COUNT(GROUP_CONCAT(rt0.c0)))))))))AND(SUM(COUNT(rt0.c0)))) THEN MIN(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(rt0.c0)))) ELSE GROUP_CONCAT(COUNT(rt0.c1)) END) ISNULL);
SELECT ALL vt1.c1, rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0;
SELECT ALL vt1.c1, rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((- (((vt1.c0)<=(vt1.c0))))) UNION ALL SELECT ALL vt1.c1, rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((NOT ((- (((vt1.c0)<=(vt1.c0))))))) UNION ALL SELECT ALL vt1.c1, rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((((- (((vt1.c0)<=(vt1.c0))))) ISNULL));
SELECT ALL vt1.c1, rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((0.44964859547847913 IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((0.44964859547847913 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((0.44964859547847913 IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt1.c0 FROM rt0 INNER JOIN vt1 ON ((((((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)))OR(((vt1.c0)IS(vt1.c0)))))AND(CASE WHEN vt1.c0 THEN vt1.c1 ELSE rt0.c0 END)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0 INNER JOIN vt1 ON ((((((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)))OR(((vt1.c0)IS(vt1.c0)))))AND(CASE WHEN vt1.c0 THEN vt1.c1 ELSE rt0.c0 END)) WHERE (CAST(RTRIM(rt0.c0) AS BLOB)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM rt0 INNER JOIN vt1 ON ((((((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)))OR(((vt1.c0)IS(vt1.c0)))))AND(CASE WHEN vt1.c0 THEN vt1.c1 ELSE rt0.c0 END)) WHERE ((NOT (CAST(RTRIM(rt0.c0) AS BLOB)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM rt0 INNER JOIN vt1 ON ((((((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)))OR(((vt1.c0)IS(vt1.c0)))))AND(CASE WHEN vt1.c0 THEN vt1.c1 ELSE rt0.c0 END)) WHERE (((CAST(RTRIM(rt0.c0) AS BLOB)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0 INNER JOIN vt1 ON ((((((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)))OR(((vt1.c0)IS(vt1.c0)))))AND(CASE WHEN vt1.c0 THEN vt1.c1 ELSE rt0.c0 END)) GROUP BY vt1.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING CAST(MIN(TOTAL(rt0.c0)) AS REAL) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (CAST(MIN(TOTAL(rt0.c0)) AS REAL))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((CAST(MIN(TOTAL(rt0.c0)) AS REAL)) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 END) NOT NULL)) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 END) NOT NULL)))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 END) NOT NULL)) ISNULL));
SELECT ALL vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c1 FROM vt1 WHERE (((NULL)|(vt1.c1)) COLLATE BINARY) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((NOT (((NULL)|(vt1.c1)) COLLATE BINARY))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE (((((NULL)|(vt1.c1)) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (CAST((+ (rt0.c2)) AS NUMERIC)) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST((+ (rt0.c2)) AS NUMERIC)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST((+ (rt0.c2)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (((MIN(vt1.c0)))>=((((SUM(TOTAL(TOTAL(vt1.c1))))IS NOT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT ((((MIN(vt1.c0)))>=((((SUM(TOTAL(TOTAL(vt1.c1))))IS NOT(vt1.c0))))))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (((((MIN(vt1.c0)))>=((((SUM(TOTAL(TOTAL(vt1.c1))))IS NOT(vt1.c0)))))) ISNULL);
SELECT ALL * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE ((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE BINARY) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE BINARY))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END)>=(rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END)>=(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END)>=(rt0.c1))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt1.c1, vt1.c0;
SELECT rt0.c0, rt0.c1, vt1.c1, vt1.c0 FROM vt1, rt0 WHERE (NULLIF(DISTINCT rt0.c0, vt1.c0) COLLATE BINARY) GROUP BY rt0.c0, rt0.c1, vt1.c1, vt1.c0 UNION SELECT rt0.c0, rt0.c1, vt1.c1, vt1.c0 FROM vt1, rt0 WHERE ((NOT (NULLIF(DISTINCT rt0.c0, vt1.c0) COLLATE BINARY))) GROUP BY rt0.c0, rt0.c1, vt1.c1, vt1.c0 UNION SELECT rt0.c0, rt0.c1, vt1.c1, vt1.c0 FROM vt1, rt0 WHERE (((NULLIF(DISTINCT rt0.c0, vt1.c0) COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt1.c1, vt1.c0;
SELECT rt0.c0, rt0.c1, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt1.c1, vt1.c0;
SELECT rt0.c1, rt0.c2, vt1.c1 FROM rt0 LEFT OUTER JOIN vt1 ON SQLITE_VERSION() GROUP BY rt0.c1, rt0.c2, vt1.c1;
SELECT ALL rt0.c1, rt0.c2, vt1.c1 FROM rt0 LEFT OUTER JOIN vt1 ON SQLITE_VERSION() GROUP BY rt0.c1, rt0.c2, vt1.c1 HAVING MIN(((MAX(MIN(COUNT(*))))==(rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c2, vt1.c1 FROM rt0 LEFT OUTER JOIN vt1 ON SQLITE_VERSION() GROUP BY rt0.c1, rt0.c2, vt1.c1 HAVING (NOT (MIN(((MAX(MIN(COUNT(*))))==(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c2, vt1.c1 FROM rt0 LEFT OUTER JOIN vt1 ON SQLITE_VERSION() GROUP BY rt0.c1, rt0.c2, vt1.c1 HAVING ((MIN(((MAX(MIN(COUNT(*))))=(rt0.c0)))) ISNULL);
SELECT SUM(vt1.c0) FROM vt1 ORDER BY ((((vt1.c0)AND((~ (vt1.c1)))))AND(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))  NULLS FIRST;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c2) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, vt1.c1, vt1.c0, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT rt0.c0, vt1.c1, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (((((((rt0.c1)AND(vt1.c0)))AND(103859647)))GLOB((('CfGꚻ)') IS FALSE)))) UNION SELECT DISTINCT rt0.c0, vt1.c1, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT (((((((rt0.c1)AND(vt1.c0)))AND(103859647)))GLOB((('CfGꚻ)') IS FALSE)))))) UNION SELECT DISTINCT rt0.c0, vt1.c1, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (((((((((rt0.c1)AND(vt1.c0)))AND(103859647)))GLOB((('CfGꚻ)') IS FALSE)))) ISNULL));
SELECT DISTINCT rt0.c0, vt1.c1, vt1.c0, rt0.c1 FROM rt0, vt1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((('0.8314946626385341') NOT NULL)) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((('0.8314946626385341') NOT NULL)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 NOT INDEXED WHERE ((((('0.8314946626385341') NOT NULL)) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c2, vt1.c1, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c1, vt1.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, vt1.c1, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c1, vt1.c0, rt0.c0, rt0.c1 HAVING MIN(MIN(rt0.c2)) UNION ALL SELECT ALL rt0.c2, vt1.c1, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c1, vt1.c0, rt0.c0, rt0.c1 HAVING (NOT (MIN(MIN(rt0.c2)))) UNION ALL SELECT rt0.c2, vt1.c1, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c1, vt1.c0, rt0.c0, rt0.c1 HAVING ((MIN(MIN(rt0.c2))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((+ (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((+ (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((+ (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((+ (x'3ce6'))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((+ (x'3ce6'))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((+ (x'3ce6'))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, vt1.c0, vt1.c1, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, vt1.c1, rt0.c1;
SELECT rt0.c2, vt1.c0, vt1.c1, rt0.c1 FROM vt1, rt0 WHERE ((((CAST(vt1.c1 AS TEXT)))=(('-340141911')))) GROUP BY rt0.c2, vt1.c0, vt1.c1, rt0.c1 UNION SELECT rt0.c2, vt1.c0, vt1.c1, rt0.c1 FROM vt1, rt0 WHERE ((NOT ((((CAST(vt1.c1 AS TEXT)))=(('-340141911')))))) GROUP BY rt0.c2, vt1.c0, vt1.c1, rt0.c1 UNION SELECT ALL rt0.c2, vt1.c0, vt1.c1, rt0.c1 FROM vt1, rt0 WHERE ((((((CAST(vt1.c1 AS TEXT)))=(('-340141911')))) ISNULL)) GROUP BY rt0.c2, vt1.c0, vt1.c1, rt0.c1;
SELECT rt0.c2, vt1.c0, vt1.c1, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, vt1.c1, rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING CAST(CASE rt0.c0  WHEN MAX(rt0.c1) THEN '1566501895' END AS TEXT) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (CAST(CASE rt0.c0  WHEN MAX(rt0.c1) THEN '1566501895' END AS TEXT))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((CAST(CASE rt0.c0  WHEN MAX(rt0.c1) THEN '1566501895' END AS TEXT)) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING CAST(CASE rt0.c0  WHEN MAX(rt0.c1) THEN '1566501895' END AS TEXT) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (CAST(CASE rt0.c0  WHEN MAX(rt0.c1) THEN '1566501895' END AS TEXT))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((CAST(CASE rt0.c0  WHEN MAX(rt0.c1) THEN '1566501895' END AS TEXT)) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0, vt1.c0, vt1.c1, rt0.c2, rt0.c1 FROM vt1, rt0;
SELECT rt0.c0, vt1.c0, vt1.c1, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((+ (((rt0.c1) NOT NULL)))) UNION ALL SELECT ALL rt0.c0, vt1.c0, vt1.c1, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((NOT ((+ (((rt0.c1) NOT NULL)))))) UNION ALL SELECT rt0.c0, vt1.c0, vt1.c1, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((((+ (((rt0.c1) NOT NULL)))) ISNULL));
SELECT ALL rt0.c0, vt1.c0, vt1.c1, rt0.c2, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((json_patch(vt1.c0, 0X6c2b3d18)) NOT BETWEEN ((vt1.c0 IN (rt0.c1))) AND (NULL))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((json_patch(vt1.c0, 0X6c2b3d18)) NOT BETWEEN ((vt1.c0 IN (rt0.c1))) AND (NULL))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((json_patch(vt1.c0, 0x6c2b3d18)) NOT BETWEEN ((vt1.c0 IN (rt0.c1))) AND (NULL))) ISNULL));
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 WHERE (NULL) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT (NULL))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE (((NULL) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING COUNT(COUNT(TOTAL('i'))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (COUNT(COUNT(TOTAL('i'))))) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((COUNT(COUNT(TOTAL('i')))) ISNULL);
SELECT ALL * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c1) ISNULL)) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (((rt0.c1) ISNULL)))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((((rt0.c1) ISNULL)) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (UPPER(rt0.c2 COLLATE RTRIM)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (UPPER(rt0.c2 COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((UPPER(rt0.c2 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((((rt0.c0)>=(rt0.c1)))&(((rt0.c0)!=(rt0.c2))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0)>=(rt0.c1)))&(((rt0.c0)<>(rt0.c2))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((((rt0.c0)>=(rt0.c1)))&(((rt0.c0)<>(rt0.c2))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL vt1.c0, rt0.c0, rt0.c2, vt1.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2, vt1.c1;
SELECT vt1.c0, rt0.c0, rt0.c2, vt1.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2, vt1.c1 HAVING ((CAST(vt1.c1 AS REAL)) BETWEEN (MAX(TOTAL(GROUP_CONCAT(vt1.c1)))) AND (CAST(SUM(AVG('Q(')) AS INTEGER))) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c2, vt1.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2, vt1.c1 HAVING (NOT (((CAST(vt1.c1 AS REAL)) BETWEEN (MAX(TOTAL(GROUP_CONCAT(vt1.c1)))) AND (CAST(SUM(AVG('Q(')) AS INTEGER))))) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c2, vt1.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2, vt1.c1 HAVING ((((CAST(vt1.c1 AS REAL)) BETWEEN (MAX(TOTAL(GROUP_CONCAT(vt1.c1)))) AND (CAST(SUM(AVG('Q(')) AS INTEGER)))) ISNULL);
SELECT rt0.c0, rt0.c2, vt1.c1 FROM vt1, rt0;
SELECT rt0.c0, rt0.c2, vt1.c1 FROM vt1, rt0 WHERE ((((+ ('')))IS NOT(((rt0.c2)>(rt0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c1 FROM vt1, rt0 WHERE ((NOT ((((+ ('')))IS NOT(((rt0.c2)>(rt0.c0))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c1 FROM vt1, rt0 WHERE ((((((+ ('')))IS NOT(((rt0.c2)>(rt0.c0))))) ISNULL));
SELECT rt0.c0, rt0.c2, vt1.c1 FROM vt1, rt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (CAST(ABS(vt1.c1) AS TEXT)) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (CAST(ABS(vt1.c1) AS TEXT)))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((CAST(ABS(vt1.c1) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT rt0.c0, vt1.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(rt0.c0, 0.13645122827052547) GROUP BY rt0.c0, vt1.c1;
SELECT rt0.c0, vt1.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(rt0.c0, 0.13645122827052547) WHERE (CAST(((((rt0.c0)AND(vt1.c0)))AND('[]')) AS BLOB)) GROUP BY rt0.c0, vt1.c1 UNION SELECT ALL rt0.c0, vt1.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(rt0.c0, 0.13645122827052547) WHERE ((NOT (CAST(((((rt0.c0)AND(vt1.c0)))AND('[]')) AS BLOB)))) GROUP BY rt0.c0, vt1.c1 UNION SELECT rt0.c0, vt1.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(rt0.c0, 0.13645122827052547) WHERE (((CAST(((((rt0.c0)AND(vt1.c0)))AND('[]')) AS BLOB)) ISNULL)) GROUP BY rt0.c0, vt1.c1;
SELECT rt0.c0, vt1.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(rt0.c0, 0.13645122827052547) GROUP BY rt0.c0, vt1.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c1 COLLATE BINARY THEN (((vt1.c1)) NOT BETWEEN ((x'')) AND ((vt1.c0))) END) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CASE WHEN vt1.c1 COLLATE BINARY THEN (((vt1.c1)) NOT BETWEEN ((x'')) AND ((vt1.c0))) END))) UNION ALL SELECT * FROM vt1 WHERE (((CASE WHEN vt1.c1 COLLATE BINARY THEN (((vt1.c1)) NOT BETWEEN ((x'')) AND ((vt1.c0))) END) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt0.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c0 FROM rt0, vt1 WHERE ('A\rCf*|v') UNION SELECT DISTINCT rt0.c0 FROM rt0, vt1 WHERE ((NOT ('A\rCf*|v'))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt1 WHERE ((('A\rCf*|v') ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, vt1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))!=((((vt1.c0, vt1.c1, -1070202909))>=((vt1.c1, vt1.c1, vt1.c1)))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))<>((((vt1.c0, vt1.c1, -1070202909))>=((vt1.c1, vt1.c1, vt1.c1)))))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))<>((((vt1.c0, vt1.c1, -1070202909))>=((vt1.c1, vt1.c1, vt1.c1)))))) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MIN(((rt0.c2) ISNULL)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MIN(((rt0.c2) ISNULL)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MIN(((rt0.c2) ISNULL))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MIN(((rt0.c2) ISNULL)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MIN(((rt0.c2) ISNULL)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MIN(((rt0.c2) ISNULL))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1;
SELECT rt0.c2, rt0.c0, vt1.c0 FROM rt0 NOT INDEXED, vt1 WHERE ((vt1.c0 IN (((vt1.c0)>(0Xffffffff91e09ac3))))) UNION ALL SELECT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((NOT ((vt1.c0 IN (((vt1.c0)>(0Xffffffff91e09ac3))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((((vt1.c0 IN (((vt1.c0)>(0xffffffff91e09ac3))))) ISNULL));
SELECT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE BINARY COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE BINARY COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE BINARY COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CASE WHEN rt0.c1 COLLATE RTRIM THEN ((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))AND(NULL)))OR(rt0.c1)) END) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c1 COLLATE RTRIM THEN ((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))AND(NULL)))OR(rt0.c1)) END))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE WHEN rt0.c1 COLLATE RTRIM THEN ((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))AND(NULL)))OR(rt0.c1)) END) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0;
SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0 HAVING TOTAL(((rt0.c2) BETWEEN (MIN(rt0.c1)) AND (vt1.c1))) UNION ALL SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0 HAVING (NOT (TOTAL(((rt0.c2) BETWEEN (MIN(rt0.c1)) AND (vt1.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0 HAVING ((TOTAL(((rt0.c2) BETWEEN (MIN(rt0.c1)) AND (vt1.c1)))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (CASE WHEN (('<Y')IS NOT(rt0.c0)) THEN rt0.c2 ELSE ((((rt0.c2)OR(rt0.c1)))OR(NULL)) END) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN (('<Y')IS NOT(rt0.c0)) THEN rt0.c2 ELSE ((((rt0.c2)OR(rt0.c1)))OR(NULL)) END))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE WHEN (('<Y')IS NOT(rt0.c0)) THEN rt0.c2 ELSE ((((rt0.c2)OR(rt0.c1)))OR(NULL)) END) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON (((vt1.c0, rt0.c0, vt1.c0)) BETWEEN (((- (rt0.c0)), ((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR('0.31513347197976505')))) AND ((rt0.c1, CAST(rt0.c0 AS TEXT), ((rt0.c1)AND(vt1.c0)))));
SELECT DISTINCT vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON (((vt1.c0, rt0.c0, vt1.c0)) BETWEEN (((- (rt0.c0)), ((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR('0.31513347197976505')))) AND ((rt0.c1, CAST(rt0.c0 AS TEXT), ((rt0.c1)AND(vt1.c0))))) WHERE (((((vt1.c0) ISNULL))LIKE(vt1.c0 COLLATE BINARY))) UNION SELECT DISTINCT vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON (((vt1.c0, rt0.c0, vt1.c0)) BETWEEN (((- (rt0.c0)), ((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR('0.31513347197976505')))) AND ((rt0.c1, CAST(rt0.c0 AS TEXT), ((rt0.c1)AND(vt1.c0))))) WHERE ((NOT (((((vt1.c0) ISNULL))LIKE(vt1.c0 COLLATE BINARY))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON (((vt1.c0, rt0.c0, vt1.c0)) BETWEEN (((- (rt0.c0)), ((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR('0.31513347197976505')))) AND ((rt0.c1, CAST(rt0.c0 AS TEXT), ((rt0.c1)AND(vt1.c0))))) WHERE (((((((vt1.c0) ISNULL))LIKE(vt1.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON (((vt1.c0, rt0.c0, vt1.c0)) BETWEEN (((- (rt0.c0)), ((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR('0.31513347197976505')))) AND ((rt0.c1, CAST(rt0.c0 AS TEXT), ((rt0.c1)AND(vt1.c0)))));
SELECT ALL rt0.c1, vt1.c1, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, vt1.c1, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((((+ (vt1.c0))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END) AND (((rt0.c0)AND(rt0.c2))))) GROUP BY rt0.c1, vt1.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, vt1.c1, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((NOT ((((+ (vt1.c0))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END) AND (((rt0.c0)AND(rt0.c2))))))) GROUP BY rt0.c1, vt1.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, vt1.c1, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((((((+ (vt1.c0))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END) AND (((rt0.c0)AND(rt0.c2))))) ISNULL)) GROUP BY rt0.c1, vt1.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt1.c1, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c1, rt0.c2, rt0.c0;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((TOTAL(COUNT(vt1.c0)))||(CASE vt1.c0  WHEN vt1.c1 THEN MIN(vt1.c0) ELSE vt1.c1 END)) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (((TOTAL(COUNT(vt1.c0)))||(CASE vt1.c0  WHEN vt1.c1 THEN MIN(vt1.c0) ELSE vt1.c1 END)))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((((TOTAL(COUNT(vt1.c0)))||(CASE vt1.c0  WHEN vt1.c1 THEN MIN(vt1.c0) ELSE vt1.c1 END))) ISNULL);
SELECT ALL rt0.c0, vt1.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c0 IN ())))<=((NULL)));
SELECT rt0.c0, vt1.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c0 IN ())))<=((NULL))) WHERE ((- (CASE vt1.c1  WHEN rt0.c2 THEN vt1.c0 WHEN 0xffffffffcbf0432a THEN vt1.c0 WHEN rt0.c0 THEN vt1.c1 END))) UNION ALL SELECT ALL rt0.c0, vt1.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c0 IN ())))<=((NULL))) WHERE ((NOT ((- (CASE vt1.c1  WHEN rt0.c2 THEN vt1.c0 WHEN 0Xffffffffcbf0432a THEN vt1.c0 WHEN rt0.c0 THEN vt1.c1 END))))) UNION ALL SELECT ALL rt0.c0, vt1.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c0 IN ())))<=((NULL))) WHERE ((((- (CASE vt1.c1  WHEN rt0.c2 THEN vt1.c0 WHEN 0xffffffffcbf0432a THEN vt1.c0 WHEN rt0.c0 THEN vt1.c1 END))) ISNULL));
SELECT ALL rt0.c0, vt1.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c0 IN ())))<=((NULL)));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)GLOB(rt0.c1))) NOT BETWEEN (((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))) AND (0.7028452848254763))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1)GLOB(rt0.c1))) NOT BETWEEN (((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))) AND (0.7028452848254763))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1)GLOB(rt0.c1))) NOT BETWEEN (((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))) AND (0.7028452848254763))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<>((vt1.c1 COLLATE RTRIM)))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<>((vt1.c1 COLLATE RTRIM)))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<>((vt1.c1 COLLATE RTRIM)))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING MAX(GROUP_CONCAT(vt1.c1)) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (MAX(GROUP_CONCAT(vt1.c1)))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((MAX(GROUP_CONCAT(vt1.c1))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)GLOB(NULL))))>(((rt0.c2 IN ()))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((rt0.c0)GLOB(NULL))))>(((rt0.c2 IN ()))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((((rt0.c0)GLOB(NULL))))>(((rt0.c2 IN ()))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c1 FROM vt1 WHERE (0.44637324127579026) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((NOT (0.44637324127579026))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE (((0.44637324127579026) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT ALL vt1.c1 FROM rt0, vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM rt0, vt1 WHERE (0X33e5d775 COLLATE NOCASE) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM rt0, vt1 WHERE ((NOT (0x33e5d775 COLLATE NOCASE))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM rt0, vt1 WHERE (((0X33e5d775 COLLATE NOCASE) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM rt0, vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, rt0.c0;
SELECT ALL vt1.c1, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, rt0.c0 HAVING rt0.c1 UNION ALL SELECT vt1.c1, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT vt1.c1, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT ALL vt1.c1, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, rt0.c0;
SELECT ALL vt1.c1, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, rt0.c0 HAVING rt0.c1 UNION ALL SELECT vt1.c1, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT vt1.c1, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT ALL vt1.c1, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, rt0.c0;
SELECT vt1.c1 FROM vt1;
SELECT ALL vt1.c1 FROM vt1 WHERE (CAST(vt1.c1 AS INTEGER) COLLATE NOCASE) UNION ALL SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT (CAST(vt1.c1 AS INTEGER) COLLATE NOCASE))) UNION ALL SELECT ALL vt1.c1 FROM vt1 WHERE (((CAST(vt1.c1 AS INTEGER) COLLATE NOCASE) ISNULL));
SELECT vt1.c1 FROM vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE ((~ (UNICODE(vt1.c1)))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT ((~ (UNICODE(vt1.c1)))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((((~ (UNICODE(vt1.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT vt1.c1, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON ((((((((rt0.c0)OR(('-1329219210' IN (rt0.c2)))))AND((((vt1.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, vt1.c1, rt0.c2)) AND ((vt1.c1, vt1.c1, rt0.c2))))))AND(rt0.c0 COLLATE RTRIM)))AND(((vt1.c0)>>(rt0.c1)))) GROUP BY vt1.c1, rt0.c2;
SELECT ALL vt1.c1, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON ((((((((rt0.c0)OR(('-1329219210' IN (rt0.c2)))))AND((((vt1.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, vt1.c1, rt0.c2)) AND ((vt1.c1, vt1.c1, rt0.c2))))))AND(rt0.c0 COLLATE RTRIM)))AND(((vt1.c0)>>(rt0.c1)))) WHERE (((((vt1.c0)IS NOT(rt0.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND ((((vt1.c0))>((vt1.c1)))))) GROUP BY vt1.c1, rt0.c2 UNION SELECT ALL vt1.c1, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON ((((((((rt0.c0)OR(('-1329219210' IN (rt0.c2)))))AND((((vt1.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, vt1.c1, rt0.c2)) AND ((vt1.c1, vt1.c1, rt0.c2))))))AND(rt0.c0 COLLATE RTRIM)))AND(((vt1.c0)>>(rt0.c1)))) WHERE ((NOT (((((vt1.c0)IS NOT(rt0.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND ((((vt1.c0))>((vt1.c1)))))))) GROUP BY vt1.c1, rt0.c2 UNION SELECT ALL vt1.c1, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON ((((((((rt0.c0)OR(('-1329219210' IN (rt0.c2)))))AND((((vt1.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, vt1.c1, rt0.c2)) AND ((vt1.c1, vt1.c1, rt0.c2))))))AND(rt0.c0 COLLATE RTRIM)))AND(((vt1.c0)>>(rt0.c1)))) WHERE (((((((vt1.c0)IS NOT(rt0.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND ((((vt1.c0))>((vt1.c1)))))) ISNULL)) GROUP BY vt1.c1, rt0.c2;
SELECT vt1.c1, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON ((((((((rt0.c0)OR(('-1329219210' IN (rt0.c2)))))AND((((vt1.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, vt1.c1, rt0.c2)) AND ((vt1.c1, vt1.c1, rt0.c2))))))AND(rt0.c0 COLLATE RTRIM)))AND(((vt1.c0)>>(rt0.c1)))) GROUP BY vt1.c1, rt0.c2;
SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c1, vt1.c0 FROM vt1 FULL OUTER JOIN rt0 ON rt0.c1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c1, vt1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c1, vt1.c0 FROM vt1 FULL OUTER JOIN rt0 ON rt0.c1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c1, vt1.c0 FROM vt1 FULL OUTER JOIN rt0 ON rt0.c1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c1, vt1.c0 FROM vt1 FULL OUTER JOIN rt0 ON rt0.c1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c1, vt1.c0 FROM vt1 FULL OUTER JOIN rt0 ON rt0.c1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c1, vt1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c1, vt1.c0 FROM vt1 FULL OUTER JOIN rt0 ON rt0.c1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c1, vt1.c0 FROM vt1 FULL OUTER JOIN rt0 ON rt0.c1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c1, vt1.c0 FROM vt1 FULL OUTER JOIN rt0 ON rt0.c1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c1, vt1.c0 FROM vt1 FULL OUTER JOIN rt0 ON rt0.c1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c1, vt1.c0;
SELECT MIN(((((((rt0.c1)AND(0Xfffffffffdd8442a)))AND(rt0.c0)))=((((vt1.c1))>((vt1.c0)))))) FROM vt1, rt0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c0)<=(NULL))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((+ (((rt0.c0)<=(NULL))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((+ (((rt0.c0)<=(NULL))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (HEX(DISTINCT vt1.c1)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (HEX(DISTINCT vt1.c1)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((HEX(DISTINCT vt1.c1)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0, vt1.c1, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, vt1.c1, rt0.c1;
SELECT vt1.c0, vt1.c1, rt0.c1 FROM vt1, rt0 WHERE (((((rt0.c1)|(rt0.c0))) NOTNULL)) GROUP BY vt1.c0, vt1.c1, rt0.c1 UNION SELECT ALL vt1.c0, vt1.c1, rt0.c1 FROM vt1, rt0 WHERE ((NOT (((((rt0.c1)|(rt0.c0))) NOTNULL)))) GROUP BY vt1.c0, vt1.c1, rt0.c1 UNION SELECT ALL vt1.c0, vt1.c1, rt0.c1 FROM vt1, rt0 WHERE (((((((rt0.c1)|(rt0.c0))) NOTNULL)) ISNULL)) GROUP BY vt1.c0, vt1.c1, rt0.c1;
SELECT vt1.c0, vt1.c1, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, vt1.c1, rt0.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((AVG(AVG(MIN(vt1.c0))))*((MAX(AVG(COUNT(TOTAL(NULL)))) IN (AVG(vt1.c0))))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (((AVG(AVG(MIN(vt1.c0))))*((MAX(AVG(COUNT(TOTAL(NULL)))) IN (AVG(vt1.c0))))))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((((AVG(AVG(MIN(vt1.c0))))*((MAX(AVG(COUNT(TOTAL(NULL)))) IN (AVG(vt1.c0)))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM))) UNION ALL SELECT * FROM rt0 NOT INDEXED WHERE (((CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM) NOT NULL)) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (((vt1.c0 COLLATE RTRIM) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((((vt1.c0 COLLATE RTRIM) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c0 IN (rt0.c2)), TYPEOF(rt0.c2), CASE WHEN rt0.c2 THEN x'' ELSE rt0.c1 END))>((rt0.c0, ((rt0.c2)>(rt0.c2)), rt0.c1)))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0 IN (rt0.c2)), TYPEOF(rt0.c2), CASE WHEN rt0.c2 THEN x'' ELSE rt0.c1 END))>((rt0.c0, ((rt0.c2)>(rt0.c2)), rt0.c1)))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c0 IN (rt0.c2)), TYPEOF(rt0.c2), CASE WHEN rt0.c2 THEN x'' ELSE rt0.c1 END))>((rt0.c0, ((rt0.c2)>(rt0.c2)), rt0.c1)))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (((TRIM(rt0.c1))<>((~ (NULL))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (((TRIM(rt0.c1))<>((~ (NULL))))))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((((TRIM(rt0.c1))!=((~ (NULL))))) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON (rt0.c2 IN ());
SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON (rt0.c2 IN ()) WHERE ((((0.8209766795492528 IN (rt0.c0, rt0.c0))) BETWEEN (CAST('-1799185499' AS BLOB)) AND (0.2967879101237717))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON (rt0.c2 IN ()) WHERE ((NOT ((((0.8209766795492528 IN (rt0.c0, rt0.c0))) BETWEEN (CAST('-1799185499' AS BLOB)) AND (0.2967879101237717))))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON (rt0.c2 IN ()) WHERE ((((((0.8209766795492528 IN (rt0.c0, rt0.c0))) BETWEEN (CAST('-1799185499' AS BLOB)) AND (0.2967879101237717))) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON (rt0.c2 IN ());
SELECT ALL vt1.c0, rt0.c2, vt1.c1 FROM rt0 LEFT OUTER JOIN vt1 ON CAST((((vt1.c0))==((rt0.c2))) AS REAL) GROUP BY vt1.c0, rt0.c2, vt1.c1;
SELECT vt1.c0, rt0.c2, vt1.c1 FROM rt0 LEFT OUTER JOIN vt1 ON CAST((((vt1.c0))==((rt0.c2))) AS REAL) WHERE ((CAST(rt0.c0 AS TEXT) IN ())) GROUP BY vt1.c0, rt0.c2, vt1.c1 UNION SELECT ALL vt1.c0, rt0.c2, vt1.c1 FROM rt0 LEFT OUTER JOIN vt1 ON CAST((((vt1.c0))=((rt0.c2))) AS REAL) WHERE ((NOT ((CAST(rt0.c0 AS TEXT) IN ())))) GROUP BY vt1.c0, rt0.c2, vt1.c1 UNION SELECT vt1.c0, rt0.c2, vt1.c1 FROM rt0 LEFT OUTER JOIN vt1 ON CAST((((vt1.c0))==((rt0.c2))) AS REAL) WHERE ((((CAST(rt0.c0 AS TEXT) IN ())) ISNULL)) GROUP BY vt1.c0, rt0.c2, vt1.c1;
SELECT ALL vt1.c0, rt0.c2, vt1.c1 FROM rt0 LEFT OUTER JOIN vt1 ON CAST((((vt1.c0))==((rt0.c2))) AS REAL) GROUP BY vt1.c0, rt0.c2, vt1.c1;
SELECT rt0.c1 FROM vt1 CROSS JOIN rt0 ON (('0.8655149565370593') IS FALSE) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1 CROSS JOIN rt0 ON (('0.8655149565370593') IS FALSE) GROUP BY rt0.c1 HAVING SUM(SUM(COUNT(*))) UNION ALL SELECT rt0.c1 FROM vt1 CROSS JOIN rt0 ON (('0.8655149565370593') IS FALSE) GROUP BY rt0.c1 HAVING (NOT (SUM(SUM(COUNT(*))))) UNION ALL SELECT ALL rt0.c1 FROM vt1 CROSS JOIN rt0 ON (('0.8655149565370593') IS FALSE) GROUP BY rt0.c1 HAVING ((SUM(SUM(COUNT(*)))) ISNULL);
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE ((((vt1.c0 IN ())) BETWEEN (CASE vt1.c1  WHEN rt0.c2 THEN rt0.c1 END) AND (vt1.c1 COLLATE BINARY))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT ((((vt1.c0 IN ())) BETWEEN (CASE vt1.c1  WHEN rt0.c2 THEN rt0.c1 END) AND (vt1.c1 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((((((vt1.c0 IN ())) BETWEEN (CASE vt1.c1  WHEN rt0.c2 THEN rt0.c1 END) AND (vt1.c1 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT NULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE NOCASE) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0 COLLATE NOCASE) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((('/}鎦ZFdY1')IS NOT(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT ((('/}鎦ZFdY1')IS NOT(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((((('/}鎦ZFdY1')IS NOT(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL vt1.c1 FROM vt1;
SELECT ALL vt1.c1 FROM vt1 WHERE (CAST(vt1.c0 AS TEXT) COLLATE BINARY) UNION ALL SELECT vt1.c1 FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS TEXT) COLLATE BINARY))) UNION ALL SELECT vt1.c1 FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT) COLLATE BINARY) ISNULL));
SELECT ALL vt1.c1 FROM vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((((vt1.c1) IS TRUE) IN ())) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((((vt1.c1) IS TRUE) IN ())))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((((vt1.c1) IS TRUE) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt1 WHERE ((NOT ((vt1.c0 IN ()) COLLATE RTRIM))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt1 WHERE ((((vt1.c0 IN ()) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT vt1.c0, rt0.c2, vt1.c1, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, vt1.c1, rt0.c1;
SELECT vt1.c0, rt0.c2, vt1.c1, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, vt1.c1, rt0.c1 HAVING '270567796' UNION ALL SELECT ALL vt1.c0, rt0.c2, vt1.c1, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, vt1.c1, rt0.c1 HAVING (NOT ('270567796')) UNION ALL SELECT ALL vt1.c0, rt0.c2, vt1.c1, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, vt1.c1, rt0.c1 HAVING (('270567796') ISNULL);
SELECT vt1.c0, rt0.c2, vt1.c1, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, vt1.c1, rt0.c1;
SELECT vt1.c0, rt0.c2, vt1.c1, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, vt1.c1, rt0.c1 HAVING '270567796' UNION ALL SELECT ALL vt1.c0, rt0.c2, vt1.c1, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, vt1.c1, rt0.c1 HAVING (NOT ('270567796')) UNION ALL SELECT ALL vt1.c0, rt0.c2, vt1.c1, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, vt1.c1, rt0.c1 HAVING (('270567796') ISNULL);
SELECT vt1.c0, rt0.c2, vt1.c1, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, vt1.c1, rt0.c1;
SELECT rt0.c0 FROM vt1, rt0;
SELECT ALL rt0.c0 FROM vt1, rt0 WHERE (((rt0.c0)<(rt0.c1)) COLLATE BINARY) UNION ALL SELECT ALL rt0.c0 FROM vt1, rt0 WHERE ((NOT (((rt0.c0)<(rt0.c1)) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c0 FROM vt1, rt0 WHERE (((((rt0.c0)<(rt0.c1)) COLLATE BINARY) ISNULL));
SELECT rt0.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c1 COLLATE NOCASE)) AND (((((rt0.c2, rt0.c0, rt0.c0))>=((rt0.c2, rt0.c1, rt0.c1))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((rt0.c1 COLLATE NOCASE)) AND (((((rt0.c2, rt0.c0, rt0.c0))>=((rt0.c2, rt0.c1, rt0.c1))))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c1 COLLATE NOCASE)) AND (((((rt0.c2, rt0.c0, rt0.c0))>=((rt0.c2, rt0.c1, rt0.c1))))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 WHERE ((~ (LIKELY(vt1.c1)))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((NOT ((~ (LIKELY(vt1.c1)))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((((~ (LIKELY(vt1.c1)))) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING CASE MIN(TOTAL(NULL))  WHEN SUM(MAX(MIN(rt0.c2))) THEN rt0.c2 END UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (CASE MIN(TOTAL(NULL))  WHEN SUM(MAX(MIN(rt0.c2))) THEN rt0.c2 END)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((CASE MIN(TOTAL(NULL))  WHEN SUM(MAX(MIN(rt0.c2))) THEN rt0.c2 END) ISNULL);
SELECT ALL vt1.c0, rt0.c1 FROM rt0, vt1;
SELECT ALL vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (((((((((((vt1.c1)<<(rt0.c0)))OR(((rt0.c2) IS TRUE))))OR(((rt0.c1) IS TRUE))))AND(CASE WHEN 0.7280784747739234 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 END)))AND(CAST(rt0.c2 AS REAL)))) UNION ALL SELECT vt1.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT (((((((((((vt1.c1)<<(rt0.c0)))OR(((rt0.c2) IS TRUE))))OR(((rt0.c1) IS TRUE))))AND(CASE WHEN 0.7280784747739234 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 END)))AND(CAST(rt0.c2 AS REAL)))))) UNION ALL SELECT ALL vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (((((((((((((vt1.c1)<<(rt0.c0)))OR(((rt0.c2) IS TRUE))))OR(((rt0.c1) IS TRUE))))AND(CASE WHEN 0.7280784747739234 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 END)))AND(CAST(rt0.c2 AS REAL)))) ISNULL));
SELECT ALL vt1.c0, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE rt0.c2  WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE rt0.c2  WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE rt0.c2  WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (((((((x'')OR(vt1.c0)))OR(vt1.c0)))GLOB(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (((((((x'')OR(vt1.c0)))OR(vt1.c0)))GLOB(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (((((((((x'')OR(vt1.c0)))OR(vt1.c0)))GLOB(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c0, rt0.c0, vt1.c1, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON ((((((((x'9c5a')OR(((rt0.c0) IS TRUE))))AND(CAST(rt0.c2 AS BLOB))))OR((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))))OR((('270567796')!=(rt0.c2)))) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1;
SELECT vt1.c0, rt0.c0, vt1.c1, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON ((((((((x'9c5a')OR(((rt0.c0) IS TRUE))))AND(CAST(rt0.c2 AS BLOB))))OR((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))))OR((('270567796')!=(rt0.c2)))) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1 HAVING MAX(SUM(MAX(NULL))) UNION ALL SELECT ALL vt1.c0, rt0.c0, vt1.c1, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON ((((((((x'9c5a')OR(((rt0.c0) IS TRUE))))AND(CAST(rt0.c2 AS BLOB))))OR((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))))OR((('270567796')<>(rt0.c2)))) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1 HAVING (NOT (MAX(SUM(MAX(NULL))))) UNION ALL SELECT vt1.c0, rt0.c0, vt1.c1, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON ((((((((x'9c5a')OR(((rt0.c0) IS TRUE))))AND(CAST(rt0.c2 AS BLOB))))OR((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))))OR((('270567796')!=(rt0.c2)))) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c1 HAVING ((MAX(SUM(MAX(NULL)))) ISNULL);
SELECT vt1.c0, vt1.c1 FROM vt1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((((((vt1.c0))>((vt1.c0)))) IS FALSE)) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT ((((((vt1.c0))>((vt1.c0)))) IS FALSE)))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((((((((vt1.c0))>((vt1.c0)))) IS FALSE)) ISNULL));
SELECT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON vt1.c0;
SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON vt1.c0 WHERE ((((((rt0.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((rt0.c1, vt1.c1, rt0.c1)) AND ((rt0.c0, vt1.c0, rt0.c2)))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND ((- (rt0.c1))))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON vt1.c0 WHERE ((NOT ((((((rt0.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((rt0.c1, vt1.c1, rt0.c1)) AND ((rt0.c0, vt1.c0, rt0.c2)))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND ((- (rt0.c1))))))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON vt1.c0 WHERE ((((((((rt0.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((rt0.c1, vt1.c1, rt0.c1)) AND ((rt0.c0, vt1.c0, rt0.c2)))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND ((- (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON vt1.c0;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 WHERE ((- (vt1.c1)) COLLATE NOCASE) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT ((- (vt1.c1)) COLLATE NOCASE))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((((- (vt1.c1)) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT rt0.c1, vt1.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c1, rt0.c2, vt1.c0, rt0.c0;
SELECT ALL rt0.c1, vt1.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c1, rt0.c2, vt1.c0, rt0.c0 HAVING SUM(MIN(vt1.c0)) UNION ALL SELECT ALL rt0.c1, vt1.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c1, rt0.c2, vt1.c0, rt0.c0 HAVING (NOT (SUM(MIN(vt1.c0)))) UNION ALL SELECT ALL rt0.c1, vt1.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c1, rt0.c2, vt1.c0, rt0.c0 HAVING ((SUM(MIN(vt1.c0))) ISNULL);
SELECT rt0.c1 FROM vt1, rt0;
SELECT ALL rt0.c1 FROM vt1, rt0 WHERE ((+ (((vt1.c0)<(rt0.c0))))) UNION ALL SELECT rt0.c1 FROM vt1, rt0 WHERE ((NOT ((+ (((vt1.c0)<(rt0.c0))))))) UNION ALL SELECT ALL rt0.c1 FROM vt1, rt0 WHERE ((((+ (((vt1.c0)<(rt0.c0))))) ISNULL));
SELECT rt0.c1 FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (CAST((((vt1.c1))=((vt1.c1))) AS REAL)) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (CAST((((vt1.c1))=((vt1.c1))) AS REAL)))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((CAST((((vt1.c1))=((vt1.c1))) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT rt0.c1, rt0.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c0 GROUP BY rt0.c1, rt0.c0, vt1.c1;
SELECT rt0.c1, rt0.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c0 WHERE (UPPER(((rt0.c2)<=(rt0.c1)))) GROUP BY rt0.c1, rt0.c0, vt1.c1 UNION SELECT rt0.c1, rt0.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c0 WHERE ((NOT (UPPER(((rt0.c2)<=(rt0.c1)))))) GROUP BY rt0.c1, rt0.c0, vt1.c1 UNION SELECT rt0.c1, rt0.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c0 WHERE (((UPPER(((rt0.c2)<=(rt0.c1)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt1.c1;
SELECT rt0.c1, rt0.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c0 GROUP BY rt0.c1, rt0.c0, vt1.c1;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (COUNT(*) IN ()) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (COUNT(*) IN ()) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1 FROM rt0, vt1;
SELECT ALL rt0.c1 FROM rt0, vt1 NOT INDEXED WHERE (0.31395892429805783) UNION ALL SELECT rt0.c1 FROM rt0, vt1 WHERE ((NOT (0.31395892429805783))) UNION ALL SELECT rt0.c1 FROM rt0, vt1 WHERE (((0.31395892429805783) ISNULL));
SELECT ALL rt0.c1 FROM rt0, vt1;
SELECT DISTINCT vt1.c1, rt0.c1, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT vt1.c1, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (rt0.c2) UNION SELECT DISTINCT vt1.c1, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT vt1.c1, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT vt1.c1, rt0.c1, rt0.c2 FROM rt0, vt1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 WHERE (CAST((vt1.c1 IN (vt1.c1)) AS TEXT)) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((NOT (CAST((vt1.c1 IN (vt1.c1)) AS TEXT)))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE (((CAST((vt1.c1 IN (vt1.c1)) AS TEXT)) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL rt0.c0, vt1.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c2 GROUP BY rt0.c0, vt1.c0, vt1.c1, rt0.c1, rt0.c2;
SELECT rt0.c0, vt1.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c2 GROUP BY rt0.c0, vt1.c0, vt1.c1, rt0.c1, rt0.c2 HAVING CAST(COUNT(rt0.c0) AS NUMERIC) UNION ALL SELECT rt0.c0, vt1.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c2 GROUP BY rt0.c0, vt1.c0, vt1.c1, rt0.c1, rt0.c2 HAVING (NOT (CAST(COUNT(rt0.c0) AS NUMERIC))) UNION ALL SELECT ALL rt0.c0, vt1.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c2 GROUP BY rt0.c0, vt1.c0, vt1.c1, rt0.c1, rt0.c2 HAVING ((CAST(COUNT(rt0.c0) AS NUMERIC)) ISNULL);
SELECT ALL rt0.c0, vt1.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c2 GROUP BY rt0.c0, vt1.c0, vt1.c1, rt0.c1, rt0.c2;
SELECT rt0.c0, vt1.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c2 GROUP BY rt0.c0, vt1.c0, vt1.c1, rt0.c1, rt0.c2 HAVING CAST(COUNT(rt0.c0) AS NUMERIC) UNION ALL SELECT rt0.c0, vt1.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c2 GROUP BY rt0.c0, vt1.c0, vt1.c1, rt0.c1, rt0.c2 HAVING (NOT (CAST(COUNT(rt0.c0) AS NUMERIC))) UNION ALL SELECT ALL rt0.c0, vt1.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c2 GROUP BY rt0.c0, vt1.c0, vt1.c1, rt0.c1, rt0.c2 HAVING ((CAST(COUNT(rt0.c0) AS NUMERIC)) ISNULL);
SELECT ALL rt0.c0, vt1.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c2 GROUP BY rt0.c0, vt1.c0, vt1.c1, rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0;
SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((((vt1.c0)) BETWEEN ((((rt0.c2) NOTNULL))) AND (((+ (vt1.c1)))))) UNION ALL SELECT rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((NOT ((((vt1.c0)) BETWEEN ((((rt0.c2) NOTNULL))) AND (((+ (vt1.c1)))))))) UNION ALL SELECT rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((((((vt1.c0)) BETWEEN ((((rt0.c2) NOTNULL))) AND (((+ (vt1.c1)))))) ISNULL));
SELECT rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT vt1.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((((((((vt1.c0)OR(vt1.c0)))OR(rt0.c0)))AND(((x'37f9')GLOB(rt0.c0)))))AND(((((rt0.c0)OR(rt0.c0)))OR(vt1.c1))));
SELECT DISTINCT vt1.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((((((((vt1.c0)OR(vt1.c0)))OR(rt0.c0)))AND(((x'37f9')GLOB(rt0.c0)))))AND(((((rt0.c0)OR(rt0.c0)))OR(vt1.c1)))) WHERE (((((vt1.c1)-(rt0.c0)))==(((rt0.c0)OR(rt0.c0))))) UNION SELECT DISTINCT vt1.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((((((((vt1.c0)OR(vt1.c0)))OR(rt0.c0)))AND(((x'37f9')GLOB(rt0.c0)))))AND(((((rt0.c0)OR(rt0.c0)))OR(vt1.c1)))) WHERE ((NOT (((((vt1.c1)-(rt0.c0)))==(((rt0.c0)OR(rt0.c0))))))) UNION SELECT DISTINCT vt1.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((((((((vt1.c0)OR(vt1.c0)))OR(rt0.c0)))AND(((x'37f9')GLOB(rt0.c0)))))AND(((((rt0.c0)OR(rt0.c0)))OR(vt1.c1)))) WHERE (((((((vt1.c1)-(rt0.c0)))==(((rt0.c0)OR(rt0.c0))))) ISNULL));
SELECT DISTINCT vt1.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((((((((vt1.c0)OR(vt1.c0)))OR(rt0.c0)))AND(((x'37f9')GLOB(rt0.c0)))))AND(((((rt0.c0)OR(rt0.c0)))OR(vt1.c1))));
SELECT ALL vt1.c1 FROM vt1, rt0 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, rt0 WHERE ((SUBSTR(rt0.c1, vt1.c1) IN ())) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1, rt0 WHERE ((NOT ((SUBSTR(rt0.c1, vt1.c1) IN ())))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1, rt0 WHERE ((((SUBSTR(rt0.c1, vt1.c1) IN ())) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, rt0 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1, rt0 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, rt0 GROUP BY vt1.c1 HAVING CAST(((AVG(MIN(GROUP_CONCAT(rt0.c2)))) NOT BETWEEN (rt0.c0) AND (vt1.c0)) AS REAL) UNION ALL SELECT ALL vt1.c1 FROM vt1, rt0 GROUP BY vt1.c1 HAVING (NOT (CAST(((AVG(MIN(GROUP_CONCAT(rt0.c2)))) NOT BETWEEN (rt0.c0) AND (vt1.c0)) AS REAL))) UNION ALL SELECT vt1.c1 FROM vt1, rt0 GROUP BY vt1.c1 HAVING ((CAST(((AVG(MIN(GROUP_CONCAT(rt0.c2)))) NOT BETWEEN (rt0.c0) AND (vt1.c0)) AS REAL)) ISNULL);
SELECT vt1.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON ((x'' COLLATE NOCASE)LIKE(((0x7ca8c984)<<(vt1.c1))));
SELECT ALL vt1.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON ((x'' COLLATE NOCASE)LIKE(((0x7ca8c984)<<(vt1.c1)))) WHERE ((((rt0.c2, rt0.c2, rt0.c1))>=((vt1.c0, vt1.c0, rt0.c1))) COLLATE BINARY) UNION ALL SELECT ALL vt1.c1 FROM vt1 NOT INDEXED RIGHT OUTER JOIN rt0 ON ((x'' COLLATE NOCASE)LIKE(((0X7ca8c984)<<(vt1.c1)))) WHERE ((NOT ((((rt0.c2, rt0.c2, rt0.c1))>=((vt1.c0, vt1.c0, rt0.c1))) COLLATE BINARY))) UNION ALL SELECT vt1.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON ((x'' COLLATE NOCASE)LIKE(((0X7ca8c984)<<(vt1.c1)))) WHERE ((((((rt0.c2, rt0.c2, rt0.c1))>=((vt1.c0, vt1.c0, rt0.c1))) COLLATE BINARY) ISNULL));
SELECT vt1.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON ((x'' COLLATE NOCASE)LIKE(((0x7ca8c984)<<(vt1.c1))));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (COALESCE(rt0.c0 COLLATE NOCASE, ((rt0.c1)>(rt0.c2)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (COALESCE(rt0.c0 COLLATE NOCASE, ((rt0.c1)>(rt0.c2)))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((COALESCE(rt0.c0 COLLATE NOCASE, ((rt0.c1)>(rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE BINARY) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE BINARY))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE BINARY) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL rt0.c1, vt1.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c1, rt0.c0;
SELECT rt0.c1, vt1.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c1, rt0.c0 HAVING ((MIN(SUM(COUNT(GROUP_CONCAT(vt1.c0))), MIN(TOTAL(rt0.c2)))) BETWEEN (MIN(SUM(vt1.c0)) COLLATE RTRIM) AND (((rt0.c1)OR(TOTAL(COUNT(SUM(vt1.c0))))))) UNION ALL SELECT ALL rt0.c1, vt1.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c1, rt0.c0 HAVING (NOT (((MIN(SUM(COUNT(GROUP_CONCAT(vt1.c0))), MIN(TOTAL(rt0.c2)))) BETWEEN (MIN(SUM(vt1.c0)) COLLATE RTRIM) AND (((rt0.c1)OR(TOTAL(COUNT(SUM(vt1.c0))))))))) UNION ALL SELECT ALL rt0.c1, vt1.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c1, rt0.c0 HAVING ((((MIN(SUM(COUNT(GROUP_CONCAT(vt1.c0))), MIN(TOTAL(rt0.c2)))) BETWEEN (MIN(SUM(vt1.c0)) COLLATE RTRIM) AND (((rt0.c1)OR(TOTAL(COUNT(SUM(vt1.c0)))))))) ISNULL);
SELECT * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM)||((vt1.c1 IN (vt1.c1, rt0.c2, vt1.c0))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (((vt1.c0 COLLATE RTRIM)||((vt1.c1 IN (vt1.c1, rt0.c2, vt1.c0))))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c0 COLLATE RTRIM)||((vt1.c1 IN (vt1.c1, rt0.c2, vt1.c0))))) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (CAST(0.8955880278033247 COLLATE NOCASE AS INTEGER)) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (CAST(0.8955880278033247 COLLATE NOCASE AS INTEGER)))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((CAST(0.8955880278033247 COLLATE NOCASE AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, vt1.c1, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, vt1.c1, vt1.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt1.c1, vt1.c0, rt0.c2 FROM vt1, rt0 NOT INDEXED WHERE ((((vt1.c1, x'', vt1.c1)) NOT BETWEEN ((rt0.c0, ((((((((vt1.c0)OR(rt0.c1)))OR(vt1.c0)))OR(rt0.c0)))AND(vt1.c0)), CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c2 END)) AND (('788040546', '-1897477699' COLLATE BINARY, ((rt0.c1)GLOB(vt1.c0)))))) GROUP BY rt0.c1, rt0.c0, vt1.c1, vt1.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, vt1.c1, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT ((((vt1.c1, x'', vt1.c1)) NOT BETWEEN ((rt0.c0, ((((((((vt1.c0)OR(rt0.c1)))OR(vt1.c0)))OR(rt0.c0)))AND(vt1.c0)), CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c2 END)) AND (('788040546', '-1897477699' COLLATE BINARY, ((rt0.c1)GLOB(vt1.c0)))))))) GROUP BY rt0.c1, rt0.c0, vt1.c1, vt1.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, vt1.c1, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((((((vt1.c1, x'', vt1.c1)) NOT BETWEEN ((rt0.c0, ((((((((vt1.c0)OR(rt0.c1)))OR(vt1.c0)))OR(rt0.c0)))AND(vt1.c0)), CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c2 END)) AND (('788040546', '-1897477699' COLLATE BINARY, ((rt0.c1)GLOB(vt1.c0)))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt1.c1, vt1.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt1.c1, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, vt1.c1, vt1.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt1 WHERE (rt0.c2) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt1 WHERE (((rt0.c2) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0) NOTNULL) IN ());
SELECT DISTINCT vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0) NOTNULL) IN ()) WHERE (((vt1.c0 IN (rt0.c1)) IN ())) UNION SELECT DISTINCT vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0) NOTNULL) IN ()) WHERE ((NOT (((vt1.c0 IN (rt0.c1)) IN ())))) UNION SELECT DISTINCT vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0) NOTNULL) IN ()) WHERE (((((vt1.c0 IN (rt0.c1)) IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0) NOTNULL) IN ());
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((((((vt1.c0))=((vt1.c0))))<>(vt1.c0 COLLATE BINARY))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0))=((vt1.c0))))<>(vt1.c0 COLLATE BINARY))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((((((((vt1.c0))=((vt1.c0))))!=(vt1.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING GROUP_CONCAT(CAST(MIN(TOTAL(COUNT(rt0.c0))) AS BLOB)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(CAST(MIN(TOTAL(COUNT(rt0.c0))) AS BLOB)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(CAST(MIN(TOTAL(COUNT(rt0.c0))) AS BLOB))) ISNULL);
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE ((('1804886013') BETWEEN (((((rt0.c2)OR(rt0.c0)))AND(vt1.c0))) AND (vt1.c0 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT ((('1804886013') BETWEEN (((((rt0.c2)OR(rt0.c0)))AND(vt1.c0))) AND (vt1.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((((('1804886013') BETWEEN (((((rt0.c2)OR(rt0.c0)))AND(vt1.c0))) AND (vt1.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CASE WHEN NULL THEN 'yR婛Z' END) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CASE WHEN NULL THEN 'yR婛Z' END))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CASE WHEN NULL THEN 'yR婛Z' END) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))*(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))*(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))*(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING MIN(COUNT(MAX(COUNT(*)))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (MIN(COUNT(MAX(COUNT(*)))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((MIN(COUNT(MAX(COUNT(*))))) ISNULL);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((TRIM(DISTINCT rt0.c2, vt1.c1)) NOT NULL);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((TRIM(DISTINCT rt0.c2, vt1.c1)) NOT NULL) WHERE (('7+J睙s]b' IN ())) UNION ALL SELECT * FROM rt0 INNER JOIN vt1 ON ((TRIM(DISTINCT rt0.c2, vt1.c1)) NOT NULL) WHERE ((NOT (('7+J睙s]b' IN ())))) UNION ALL SELECT * FROM rt0 INNER JOIN vt1 ON ((TRIM(DISTINCT rt0.c2, vt1.c1)) NOT NULL) WHERE (((('7+J睙s]b' IN ())) ISNULL));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((TRIM(DISTINCT rt0.c2, vt1.c1)) NOT NULL);
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (0x69e6ff14) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (0X69e6ff14))) UNION SELECT DISTINCT * FROM rt0 WHERE (((0X69e6ff14) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (LIKE(CASE WHEN vt1.c0 THEN 0.9622887004206495 ELSE vt1.c0 END, vt1.c0 COLLATE RTRIM)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (LIKE(CASE WHEN vt1.c0 THEN 0.9622887004206495 ELSE vt1.c0 END, vt1.c0 COLLATE RTRIM)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((LIKE(CASE WHEN vt1.c0 THEN 0.9622887004206495 ELSE vt1.c0 END, vt1.c0 COLLATE RTRIM)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING TOTAL(CASE WHEN AVG(rt0.c0) THEN COUNT(rt0.c1) END) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (TOTAL(CASE WHEN AVG(rt0.c0) THEN COUNT(rt0.c1) END))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((TOTAL(CASE WHEN AVG(rt0.c0) THEN COUNT(rt0.c1) END)) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (MAX(CAST(rt0.c0 AS INTEGER), ((0.305329316433527) IS TRUE), ((NULL)*(rt0.c0)), COALESCE(rt0.c0, rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (MAX(CAST(rt0.c0 AS INTEGER), ((0.305329316433527) IS TRUE), ((NULL)*(rt0.c0)), COALESCE(rt0.c0, rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((MAX(CAST(rt0.c0 AS INTEGER), ((0.305329316433527) IS TRUE), ((NULL)*(rt0.c0)), COALESCE(rt0.c0, rt0.c1))) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt1 WHERE (CAST((NOT (vt1.c0)) AS REAL)) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT (CAST((NOT (vt1.c0)) AS REAL)))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt1 WHERE (((CAST((NOT (vt1.c0)) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((NULLIF(vt1.c1, vt1.c0))AND((((vt1.c1, 0.2786647038183334, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c1, '419947493', vt1.c0))))))OR(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((NULLIF(vt1.c1, vt1.c0))AND((((vt1.c1, 0.2786647038183334, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c1, '419947493', vt1.c0))))))OR(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((NULLIF(vt1.c1, vt1.c0))AND((((vt1.c1, 0.2786647038183334, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c1, '419947493', vt1.c0))))))OR(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c1, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, vt1.c1;
SELECT rt0.c2, vt1.c0, rt0.c1, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, vt1.c1 HAVING (GROUP_CONCAT(rt0.c2) IN ()) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c1, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, vt1.c1 HAVING (NOT ((GROUP_CONCAT(rt0.c2) IN ()))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c1, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, vt1.c1 HAVING (((GROUP_CONCAT(rt0.c2) IN ())) ISNULL);
SELECT ALL rt0.c2, vt1.c0, rt0.c1, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, vt1.c1;
SELECT rt0.c2, vt1.c0, rt0.c1, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, vt1.c1 HAVING (GROUP_CONCAT(rt0.c2) IN ()) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c1, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, vt1.c1 HAVING (NOT ((GROUP_CONCAT(rt0.c2) IN ()))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c1, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, vt1.c1 HAVING (((GROUP_CONCAT(rt0.c2) IN ())) ISNULL);
SELECT ALL rt0.c2, vt1.c0, rt0.c1, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, vt1.c1;
SELECT vt1.c1 FROM vt1;
SELECT vt1.c1 FROM vt1 WHERE (CAST(vt1.c1 COLLATE BINARY AS REAL)) UNION ALL SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT (CAST(vt1.c1 COLLATE BINARY AS REAL)))) UNION ALL SELECT ALL vt1.c1 FROM vt1 WHERE (((CAST(vt1.c1 COLLATE BINARY AS REAL)) ISNULL));
SELECT vt1.c1 FROM vt1;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 CROSS JOIN vt1 ON ((NULL)=(((rt0.c0)GLOB(vt1.c1))));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 CROSS JOIN vt1 ON ((NULL)=(((rt0.c0)GLOB(vt1.c1)))) WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))IS(((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 CROSS JOIN vt1 ON ((NULL)=(((rt0.c0)GLOB(vt1.c1)))) WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))IS(((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 CROSS JOIN vt1 ON ((NULL)=(((rt0.c0)GLOB(vt1.c1)))) WHERE (((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))IS(((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 CROSS JOIN vt1 ON ((NULL)=(((rt0.c0)GLOB(vt1.c1))));
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ('1308048867') GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT ('1308048867'))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((('1308048867') ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((SUM(rt0.c1) COLLATE RTRIM) NOTNULL) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((SUM(rt0.c1) COLLATE RTRIM) NOTNULL))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((SUM(rt0.c1) COLLATE RTRIM) NOTNULL)) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((SUM(rt0.c1) COLLATE RTRIM) NOTNULL) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((SUM(rt0.c1) COLLATE RTRIM) NOTNULL))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((SUM(rt0.c1) COLLATE RTRIM) NOTNULL)) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE (load_extension(((vt1.c0)<=(rt0.c0)), ((rt0.c0)/(vt1.c1)))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (load_extension(((vt1.c0)<=(rt0.c0)), ((rt0.c0)/(vt1.c1)))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE (((load_extension(((vt1.c0)<=(rt0.c0)), ((rt0.c0)/(vt1.c1)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (UPPER(DISTINCT rt0.c1) COLLATE NOCASE) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (UPPER(DISTINCT rt0.c1) COLLATE NOCASE))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((UPPER(DISTINCT rt0.c1) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING COUNT(MIN(AVG(AVG(vt1.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (COUNT(MIN(AVG(AVG(vt1.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((COUNT(MIN(AVG(AVG(vt1.c0))))) ISNULL);
SELECT TOTAL((~ (rt0.c2 COLLATE BINARY))) FROM rt0, vt1 ORDER BY NULL  NULLS LAST, CASE WHEN ((rt0.c1)<<(rt0.c2)) THEN (+ (vt1.c1)) ELSE rt0.c1 END ASC;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON (((vt1.c0)GLOB(vt1.c1)) IN ());
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON (((vt1.c0)GLOB(vt1.c1)) IN ()) WHERE (0.5059968472581962) UNION ALL SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((vt1.c0)GLOB(vt1.c1)) IN ()) WHERE ((NOT (0.5059968472581962))) UNION ALL SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON (((vt1.c0)GLOB(vt1.c1)) IN ()) WHERE (((0.5059968472581962) ISNULL));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON (((vt1.c0)GLOB(vt1.c1)) IN ());
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (json_object((vt1.c1 IN (vt1.c0)), ((0xffffffffd4d20cfc)*(x'75be')), ((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c1)), CAST(rt0.c1 AS REAL))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (json_object((vt1.c1 IN (vt1.c0)), ((0Xffffffffd4d20cfc)*(x'75be')), ((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c1)), CAST(rt0.c1 AS REAL))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((json_object((vt1.c1 IN (vt1.c0)), ((0Xffffffffd4d20cfc)*(x'75be')), ((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c1)), CAST(rt0.c1 AS REAL))) ISNULL));
SELECT rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON (((vt1.c0 COLLATE NOCASE))=((((((rt0.c1)AND(rt0.c0)))AND(vt1.c0))))) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON (((vt1.c0 COLLATE NOCASE))=((((((rt0.c1)AND(rt0.c0)))AND(vt1.c0))))) WHERE (MIN(((rt0.c0)=(rt0.c2)), ((rt0.c2) ISNULL), (rt0.c1 IN ()), (NOT (vt1.c1)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON (((vt1.c0 COLLATE NOCASE))==((((((rt0.c1)AND(rt0.c0)))AND(vt1.c0))))) WHERE ((NOT (MIN(((rt0.c0)==(rt0.c2)), ((rt0.c2) ISNULL), (rt0.c1 IN ()), (NOT (vt1.c1)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON (((vt1.c0 COLLATE NOCASE))==((((((rt0.c1)AND(rt0.c0)))AND(vt1.c0))))) WHERE (((MIN(((rt0.c0)==(rt0.c2)), ((rt0.c2) ISNULL), (rt0.c1 IN ()), (NOT (vt1.c1)))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON (((vt1.c0 COLLATE NOCASE))=((((((rt0.c1)AND(rt0.c0)))AND(vt1.c0))))) GROUP BY rt0.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING COUNT(COUNT(vt1.c0)) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (COUNT(COUNT(vt1.c0)))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((COUNT(COUNT(vt1.c0))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt1;
SELECT rt0.c1, rt0.c0 FROM rt0, vt1 WHERE (NULL) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0, vt1 WHERE ((NOT (NULL))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0, vt1 WHERE (((NULL) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c2 IN ()) IN ())) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2 IN ()) IN ())))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c2 IN ()) IN ())) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (NULL) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (NULL))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((NULL) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) BETWEEN ((- (rt0.c2))) AND (rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE NOCASE) BETWEEN ((- (rt0.c2))) AND (rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c2 COLLATE NOCASE) BETWEEN ((- (rt0.c2))) AND (rt0.c1))) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt1 WHERE (((((vt1.c0)GLOB(vt1.c1)))<=('-1497182182'))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN vt1 WHERE ((NOT (((((vt1.c0)GLOB(vt1.c1)))<=('-1497182182'))))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN vt1 WHERE (((((((vt1.c0)GLOB(vt1.c1)))<=('-1497182182'))) ISNULL));
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt1;
SELECT vt1.c1, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c2, vt1.c0, rt0.c1;
SELECT vt1.c1, rt0.c2, vt1.c0, rt0.c1 FROM rt0 NOT INDEXED, vt1 WHERE (CASE WHEN (NOT (rt0.c2)) THEN vt1.c1 WHEN (~ (rt0.c2)) THEN ((x'')LIKE(vt1.c0)) WHEN rt0.c1 THEN ((vt1.c1)GLOB(rt0.c0)) ELSE ((rt0.c0)!=(rt0.c0)) END) GROUP BY vt1.c1, rt0.c2, vt1.c0, rt0.c1 UNION SELECT vt1.c1, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT (CASE WHEN (NOT (rt0.c2)) THEN vt1.c1 WHEN (~ (rt0.c2)) THEN ((x'')LIKE(vt1.c0)) WHEN rt0.c1 THEN ((vt1.c1)GLOB(rt0.c0)) ELSE ((rt0.c0)<>(rt0.c0)) END))) GROUP BY vt1.c1, rt0.c2, vt1.c0, rt0.c1 UNION SELECT vt1.c1, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (((CASE WHEN (NOT (rt0.c2)) THEN vt1.c1 WHEN (~ (rt0.c2)) THEN ((x'')LIKE(vt1.c0)) WHEN rt0.c1 THEN ((vt1.c1)GLOB(rt0.c0)) ELSE ((rt0.c0)<>(rt0.c0)) END) ISNULL)) GROUP BY vt1.c1, rt0.c2, vt1.c0, rt0.c1;
SELECT vt1.c1, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c2, vt1.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING CAST(MIN(TOTAL(rt0.c2)) AS TEXT) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (CAST(MIN(TOTAL(rt0.c2)) AS TEXT))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((CAST(MIN(TOTAL(rt0.c2)) AS TEXT)) ISNULL);
SELECT MIN(x'c16d') FROM vt1;
SELECT vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0;
SELECT vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (rt0.c1) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (((rt0.c1) ISNULL));
SELECT vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (vt1.c1 COLLATE BINARY) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c1 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1 WHERE (((vt1.c1 COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c2, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c1;
SELECT ALL rt0.c2, vt1.c1 FROM vt1, rt0 WHERE ((((vt1.c0 IN ()))<<('247710466'))) GROUP BY rt0.c2, vt1.c1 UNION SELECT rt0.c2, vt1.c1 FROM vt1, rt0 WHERE ((NOT ((((vt1.c0 IN ()))<<('247710466'))))) GROUP BY rt0.c2, vt1.c1 UNION SELECT rt0.c2, vt1.c1 FROM vt1, rt0 WHERE ((((((vt1.c0 IN ()))<<('247710466'))) ISNULL)) GROUP BY rt0.c2, vt1.c1;
SELECT rt0.c2, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c1;
SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1 HAVING CASE WHEN rt0.c0 THEN COUNT(TOTAL(rt0.c2)) ELSE MAX(TOTAL(vt1.c0)) COLLATE BINARY END UNION ALL SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1 HAVING (NOT (CASE WHEN rt0.c0 THEN COUNT(TOTAL(rt0.c2)) ELSE MAX(TOTAL(vt1.c0)) COLLATE BINARY END)) UNION ALL SELECT vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1 HAVING ((CASE WHEN rt0.c0 THEN COUNT(TOTAL(rt0.c2)) ELSE MAX(TOTAL(vt1.c0)) COLLATE BINARY END) ISNULL);
SELECT SUM((((vt1.c1)%(rt0.c2)) IN ())) FROM rt0, vt1 ORDER BY ((((rt0.c1 COLLATE RTRIM)OR(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))AND(vt1.c0)))AND(NULL)))))AND(CASE WHEN rt0.c2 THEN 246001708 ELSE vt1.c0 END)) DESC  NULLS FIRST;
SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0;
SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (((CASE WHEN vt1.c0 THEN vt1.c1 END) BETWEEN ('') AND (((rt0.c2)==(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt1.c1 END) BETWEEN ('') AND (((rt0.c2)==(rt0.c1))))))) UNION ALL SELECT rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c1 END) BETWEEN ('') AND (((rt0.c2)==(rt0.c1))))) ISNULL));
SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON ((x'')<>(vt1.c0));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON ((x'')!=(vt1.c0)) WHERE (CASE WHEN '' THEN ((vt1.c1)IS(vt1.c0)) WHEN 843001536 COLLATE BINARY THEN rt0.c1 COLLATE NOCASE WHEN (NOT (vt1.c0)) THEN ((((rt0.c1)OR(vt1.c0)))AND(vt1.c0)) END) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON ((x'')!=(vt1.c0)) WHERE ((NOT (CASE WHEN '' THEN ((vt1.c1)IS(vt1.c0)) WHEN 843001536 COLLATE BINARY THEN rt0.c1 COLLATE NOCASE WHEN (NOT (vt1.c0)) THEN ((((rt0.c1)OR(vt1.c0)))AND(vt1.c0)) END))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON ((x'')!=(vt1.c0)) WHERE (((CASE WHEN '' THEN ((vt1.c1)IS(vt1.c0)) WHEN 843001536 COLLATE BINARY THEN rt0.c1 COLLATE NOCASE WHEN (NOT (vt1.c0)) THEN ((((rt0.c1)OR(vt1.c0)))AND(vt1.c0)) END) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON ((x'')<>(vt1.c0));
SELECT ALL rt0.c0, vt1.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c1, rt0.c2;
SELECT rt0.c0, vt1.c1, rt0.c2 FROM vt1, rt0 WHERE (CASE WHEN ((((((((rt0.c0)AND(rt0.c2)))OR(vt1.c0)))OR(rt0.c0)))OR(rt0.c1)) THEN LTRIM(rt0.c2, rt0.c0) END) GROUP BY rt0.c0, vt1.c1, rt0.c2 UNION SELECT rt0.c0, vt1.c1, rt0.c2 FROM vt1, rt0 WHERE ((NOT (CASE WHEN ((((((((rt0.c0)AND(rt0.c2)))OR(vt1.c0)))OR(rt0.c0)))OR(rt0.c1)) THEN LTRIM(rt0.c2, rt0.c0) END))) GROUP BY rt0.c0, vt1.c1, rt0.c2 UNION SELECT ALL rt0.c0, vt1.c1, rt0.c2 FROM vt1, rt0 WHERE (((CASE WHEN ((((((((rt0.c0)AND(rt0.c2)))OR(vt1.c0)))OR(rt0.c0)))OR(rt0.c1)) THEN LTRIM(rt0.c2, rt0.c0) END) ISNULL)) GROUP BY rt0.c0, vt1.c1, rt0.c2;
SELECT ALL rt0.c0, vt1.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c1, rt0.c2;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (((vt1.c0, AVG(SUM(vt1.c1)), vt1.c1)) BETWEEN (((~ (TOTAL(vt1.c1))), COUNT(vt1.c1), ((((((((vt1.c0)AND(COUNT(MAX(GROUP_CONCAT(TOTAL(COUNT(vt1.c1))))))))OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))) AND ((CASE WHEN TOTAL(1.826020578E9) THEN vt1.c0 ELSE COUNT(*) END, ((vt1.c0) IS FALSE), COUNT(vt1.c1)))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT ((((vt1.c0, AVG(SUM(vt1.c1)), vt1.c1)) BETWEEN (((~ (TOTAL(vt1.c1))), COUNT(vt1.c1), ((((((((vt1.c0)AND(COUNT(MAX(GROUP_CONCAT(TOTAL(COUNT(vt1.c1))))))))OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))) AND ((CASE WHEN TOTAL(1.826020578E9) THEN vt1.c0 ELSE COUNT(*) END, ((vt1.c0) IS FALSE), COUNT(vt1.c1)))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (((((vt1.c0, AVG(SUM(vt1.c1)), vt1.c1)) BETWEEN (((~ (TOTAL(vt1.c1))), COUNT(vt1.c1), ((((((((vt1.c0)AND(COUNT(MAX(GROUP_CONCAT(TOTAL(COUNT(vt1.c1))))))))OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))) AND ((CASE WHEN TOTAL(1.826020578E9) THEN vt1.c0 ELSE COUNT(*) END, ((vt1.c0) IS FALSE), COUNT(vt1.c1))))) ISNULL);
SELECT MAX(((0.7559457582483653 COLLATE RTRIM)+(rt0.c0))) FROM rt0 ORDER BY (~ (((rt0.c1)GLOB(rt0.c2))))  NULLS FIRST;
SELECT ALL vt1.c1, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0;
SELECT ALL vt1.c1, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE (((((rt0.c0)+(vt1.c1))) ISNULL)) UNION ALL SELECT vt1.c1, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE ((NOT (((((rt0.c0)+(vt1.c1))) ISNULL)))) UNION ALL SELECT vt1.c1, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE (((((((rt0.c0)+(vt1.c1))) ISNULL)) ISNULL));
SELECT ALL vt1.c1, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) NOT NULL)) BETWEEN (IFNULL(DISTINCT rt0.c2, rt0.c0)) AND ((- (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0) NOT NULL)) BETWEEN (IFNULL(DISTINCT rt0.c2, rt0.c0)) AND ((- (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0) NOT NULL)) BETWEEN (IFNULL(DISTINCT rt0.c2, rt0.c0)) AND ((- (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT vt1.c1 FROM vt1, rt0 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, rt0 GROUP BY vt1.c1 HAVING COUNT(MIN(AVG('X#S+h[r'))) UNION ALL SELECT ALL vt1.c1 FROM vt1, rt0 GROUP BY vt1.c1 HAVING (NOT (COUNT(MIN(AVG('X#S+h[r'))))) UNION ALL SELECT vt1.c1 FROM vt1, rt0 GROUP BY vt1.c1 HAVING ((COUNT(MIN(AVG('X#S+h[r')))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON (- (CASE WHEN vt1.c0 THEN rt0.c2 END));
SELECT rt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON (- (CASE WHEN vt1.c0 THEN rt0.c2 END)) WHERE (((((x'9c26')OR(NULL COLLATE NOCASE)))AND(rt0.c2))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON (- (CASE WHEN vt1.c0 THEN rt0.c2 END)) WHERE ((NOT (((((x'9c26')OR(NULL COLLATE NOCASE)))AND(rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON (- (CASE WHEN vt1.c0 THEN rt0.c2 END)) WHERE (((((((x'9c26')OR(NULL COLLATE NOCASE)))AND(rt0.c2))) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON (- (CASE WHEN vt1.c0 THEN rt0.c2 END));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0)) BETWEEN (((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))) AND ((((((vt1.c0)AND(vt1.c0)))OR(NULL)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN (((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))) AND ((((((vt1.c0)AND(vt1.c0)))OR(NULL)))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) BETWEEN (((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))) AND ((((((vt1.c0)AND(vt1.c0)))OR(NULL)))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE ((((- (rt0.c1)))/(((vt1.c0)&(NULL))))) GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE ((NOT ((((- (rt0.c1)))/(((vt1.c0)&(NULL))))))) GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE ((((((- (rt0.c1)))/(((vt1.c0)&(NULL))))) ISNULL)) GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c0, rt0.c2, vt1.c0, vt1.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0, vt1.c1;
SELECT ALL rt0.c0, rt0.c2, vt1.c0, vt1.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0, vt1.c1 HAVING COUNT(MIN(TOTAL(rt0.c2))) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0, vt1.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0, vt1.c1 HAVING (NOT (COUNT(MIN(TOTAL(rt0.c2))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0, vt1.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0, vt1.c1 HAVING ((COUNT(MIN(TOTAL(rt0.c2)))) ISNULL);
SELECT ALL * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE (CASE WHEN 0.14376943358343597 THEN ((rt0.c0)>>('/')) END) UNION ALL SELECT * FROM vt1, rt0 NOT INDEXED WHERE ((NOT (CASE WHEN 0.14376943358343597 THEN ((rt0.c0)>>('/')) END))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE (((CASE WHEN 0.14376943358343597 THEN ((rt0.c0)>>('/')) END) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((((vt1.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((((vt1.c1) NOTNULL), ((((((((vt1.c1)OR(rt0.c0)))OR(1242900732)))AND(rt0.c2)))AND(vt1.c0)), rt0.c0)) AND ((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)), ((vt1.c0)GLOB(rt0.c1)), (NOT (vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((((vt1.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((((vt1.c1) NOTNULL), ((((((((vt1.c1)OR(rt0.c0)))OR(1242900732)))AND(rt0.c2)))AND(vt1.c0)), rt0.c0)) AND ((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)), ((vt1.c0)GLOB(rt0.c1)), (NOT (vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((((vt1.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((((vt1.c1) NOTNULL), ((((((((vt1.c1)OR(rt0.c0)))OR(1242900732)))AND(rt0.c2)))AND(vt1.c0)), rt0.c0)) AND ((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)), ((vt1.c0)GLOB(rt0.c1)), (NOT (vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1, rt0 WHERE ((((rt0.c0)) BETWEEN (('ߊ2')) AND ((((((rt0.c1)AND(rt0.c0)))OR(vt1.c1)))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1, rt0 WHERE ((NOT ((((rt0.c0)) BETWEEN (('ߊ2')) AND ((((((rt0.c1)AND(rt0.c0)))OR(vt1.c1)))))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1, rt0 WHERE ((((((rt0.c0)) BETWEEN (('ߊ2')) AND ((((((rt0.c1)AND(rt0.c0)))OR(vt1.c1)))))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY vt1.c1, vt1.c0;
SELECT rt0.c2, vt1.c0, rt0.c1, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, vt1.c1;
SELECT ALL rt0.c2, vt1.c0, rt0.c1, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, vt1.c1 HAVING COUNT(MIN(rt0.c1)) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c1, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, vt1.c1 HAVING (NOT (COUNT(MIN(rt0.c1)))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c1, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, vt1.c1 HAVING ((COUNT(MIN(rt0.c1))) ISNULL);
SELECT ALL rt0.c0 FROM vt1, rt0;
SELECT rt0.c0 FROM vt1, rt0 WHERE (((((rt0.c1)|(rt0.c1)))==(CAST(vt1.c0 AS REAL)))) UNION ALL SELECT rt0.c0 FROM vt1, rt0 WHERE ((NOT (((((rt0.c1)|(rt0.c1)))=(CAST(vt1.c0 AS REAL)))))) UNION ALL SELECT rt0.c0 FROM vt1, rt0 WHERE (((((((rt0.c1)|(rt0.c1)))=(CAST(vt1.c0 AS REAL)))) ISNULL));
SELECT ALL rt0.c0 FROM vt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN 0.8521070916203594 THEN '1764115486' END) NOT BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) AND (CAST(rt0.c2 AS REAL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN 0.8521070916203594 THEN '1764115486' END) NOT BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) AND (CAST(rt0.c2 AS REAL)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN 0.8521070916203594 THEN '1764115486' END) NOT BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) AND (CAST(rt0.c2 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt1.c1 FROM vt1, rt0 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, rt0 WHERE (CAST(CASE vt1.c0  WHEN rt0.c2 THEN vt1.c1 WHEN vt1.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END AS NUMERIC)) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1, rt0 WHERE ((NOT (CAST(CASE vt1.c0  WHEN rt0.c2 THEN vt1.c1 WHEN vt1.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END AS NUMERIC)))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1, rt0 WHERE (((CAST(CASE vt1.c0  WHEN rt0.c2 THEN vt1.c1 WHEN vt1.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END AS NUMERIC)) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1, rt0 GROUP BY vt1.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING SUM(MIN(rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (SUM(MIN(rt0.c0)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((SUM(MIN(rt0.c0))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CHAR(((((vt1.c0)OR(vt1.c0)))AND(x'258e')))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CHAR(((((vt1.c0)OR(vt1.c0)))AND(x'258e')))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CHAR(((((vt1.c0)OR(vt1.c0)))AND(x'258e')))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt0.c1, rt0.c0, vt1.c1, vt1.c0, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c1, rt0.c0, vt1.c1, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE (((vt1.c0)<=(rt0.c2)) COLLATE BINARY) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt1.c1, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT (((vt1.c0)<=(rt0.c2)) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt1.c1, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE (((((vt1.c0)<=(rt0.c2)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, vt1.c1, vt1.c0, rt0.c2 FROM rt0, vt1;
SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt1 WHERE (((rt0.c2) NOT BETWEEN ((+ (vt1.c1))) AND ((((rt0.c2, rt0.c1, vt1.c0)) NOT BETWEEN ((NULL, vt1.c1, vt1.c1)) AND ((vt1.c0, rt0.c0, vt1.c0)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt1 WHERE ((NOT (((rt0.c2) NOT BETWEEN ((+ (vt1.c1))) AND ((((rt0.c2, rt0.c1, vt1.c0)) NOT BETWEEN ((NULL, vt1.c1, vt1.c1)) AND ((vt1.c0, rt0.c0, vt1.c0)))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt1 WHERE (((((rt0.c2) NOT BETWEEN ((+ (vt1.c1))) AND ((((rt0.c2, rt0.c1, vt1.c0)) NOT BETWEEN ((NULL, vt1.c1, vt1.c1)) AND ((vt1.c0, rt0.c0, vt1.c0)))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING COUNT(GROUP_CONCAT(vt1.c1)) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (COUNT(GROUP_CONCAT(vt1.c1)))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((COUNT(GROUP_CONCAT(vt1.c1))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (-1984321727) UNION ALL SELECT * FROM rt0 WHERE ((NOT (-1984321727))) UNION ALL SELECT * FROM rt0 WHERE (((-1984321727) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt1 NOT INDEXED;
SELECT DISTINCT * FROM vt1 WHERE ((~ (QUOTE(vt1.c1)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((~ (QUOTE(vt1.c1)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((~ (QUOTE(vt1.c1)))) ISNULL));
SELECT DISTINCT * FROM vt1 NOT INDEXED;
SELECT rt0.c0, vt1.c0, rt0.c1, vt1.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, vt1.c1, rt0.c2;
SELECT ALL rt0.c0, vt1.c0, rt0.c1, vt1.c1, rt0.c2 FROM rt0, vt1 WHERE (((((((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c2)))AND(((rt0.c1)IS NOT(vt1.c1)))))OR(rt0.c1 COLLATE RTRIM))) GROUP BY rt0.c0, vt1.c0, rt0.c1, vt1.c1, rt0.c2 UNION SELECT ALL rt0.c0, vt1.c0, rt0.c1, vt1.c1, rt0.c2 FROM rt0, vt1 WHERE ((NOT (((((((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c2)))AND(((rt0.c1)IS NOT(vt1.c1)))))OR(rt0.c1 COLLATE RTRIM))))) GROUP BY rt0.c0, vt1.c0, rt0.c1, vt1.c1, rt0.c2 UNION SELECT rt0.c0, vt1.c0, rt0.c1, vt1.c1, rt0.c2 FROM rt0, vt1 WHERE (((((((((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c2)))AND(((rt0.c1)IS NOT(vt1.c1)))))OR(rt0.c1 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c0, vt1.c0, rt0.c1, vt1.c1, rt0.c2;
SELECT rt0.c0, vt1.c0, rt0.c1, vt1.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, vt1.c1, rt0.c2;
SELECT ALL rt0.c1, vt1.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt1.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c1, vt1.c0, rt0.c2, rt0.c0 HAVING ((((0.8174687901049321)AND(rt0.c0)))OR(((COUNT(MAX(rt0.c0)))-(rt0.c0)))) UNION ALL SELECT ALL rt0.c1, vt1.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c1, vt1.c0, rt0.c2, rt0.c0 HAVING (NOT (((((0.8174687901049321)AND(rt0.c0)))OR(((COUNT(MAX(rt0.c0)))-(rt0.c0)))))) UNION ALL SELECT ALL rt0.c1, vt1.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c1, vt1.c0, rt0.c2, rt0.c0 HAVING ((((((0.8174687901049321)AND(rt0.c0)))OR(((COUNT(MAX(rt0.c0)))-(rt0.c0))))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((((rt0.c0)|(x''))))==(((rt0.c2 IN (rt0.c0)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c0)|(x''))))=(((rt0.c2 IN (rt0.c0)))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((((((((rt0.c0)|(x''))))==(((rt0.c2 IN (rt0.c0)))))) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (((((vt1.c1)LIKE(vt1.c1)))<((((x'', rt0.c1, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, rt0.c1)) AND (('O!NT\n\', 'xo', vt1.c1)))))) UNION SELECT DISTINCT rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((NOT (((((vt1.c1)LIKE(vt1.c1)))<((((x'', rt0.c1, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, rt0.c1)) AND (('O!NT\n\', 'xo', vt1.c1)))))))) UNION SELECT DISTINCT rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (((((((vt1.c1)LIKE(vt1.c1)))<((((x'', rt0.c1, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, rt0.c1)) AND (('O!NT\n\', 'xo', vt1.c1)))))) ISNULL));
SELECT DISTINCT rt0.c0, vt1.c0 FROM rt0, vt1;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (((vt1.c1) NOT BETWEEN ((vt1.c1 IN (vt1.c0))) AND ((+ (vt1.c0))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c1) NOT BETWEEN ((vt1.c1 IN (vt1.c0))) AND ((+ (vt1.c0))))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (((((vt1.c1) NOT BETWEEN ((vt1.c1 IN (vt1.c0))) AND ((+ (vt1.c0))))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2;
SELECT ALL vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2 HAVING NULL UNION ALL SELECT vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2 HAVING ((NULL) ISNULL);
SELECT ALL vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2;
SELECT ALL vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2 HAVING NULL UNION ALL SELECT vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2 HAVING ((NULL) ISNULL);
SELECT ALL vt1.c1, rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c2;
SELECT ALL TOTAL(((((((((((vt1.c1) NOTNULL))AND(vt1.c0)))OR((- (vt1.c1)))))AND(((x'') NOTNULL))))AND((((vt1.c1, vt1.c1, vt1.c0)) BETWEEN ((vt1.c1, vt1.c1, vt1.c0)) AND ((vt1.c0, vt1.c1, vt1.c1)))))) FROM vt1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((((((rt0.c2 IN ()))AND(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))))AND((~ (rt0.c2)))))AND((- (rt0.c1)))))OR(CAST(rt0.c0 AS INTEGER)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((((((((rt0.c2 IN ()))AND(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))))AND((~ (rt0.c2)))))AND((- (rt0.c1)))))OR(CAST(rt0.c0 AS INTEGER)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((((((((rt0.c2 IN ()))AND(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))))AND((~ (rt0.c2)))))AND((- (rt0.c1)))))OR(CAST(rt0.c0 AS INTEGER)))) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c1 FROM vt1 FULL OUTER JOIN rt0 ON QUOTE(CASE WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END);
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c1 FROM vt1 FULL OUTER JOIN rt0 ON QUOTE(CASE WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END) WHERE (CAST(HEX(rt0.c2) AS INTEGER)) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt1.c1 FROM vt1 FULL OUTER JOIN rt0 ON QUOTE(CASE WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END) WHERE ((NOT (CAST(HEX(rt0.c2) AS INTEGER)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt1.c1 FROM vt1 FULL OUTER JOIN rt0 ON QUOTE(CASE WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END) WHERE (((CAST(HEX(rt0.c2) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c1 FROM vt1 FULL OUTER JOIN rt0 ON QUOTE(CASE WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (CASE WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE ((((0.8868352188010252)OR(rt0.c2)))AND(rt0.c1)) END) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE ((((0.8868352188010252)OR(rt0.c2)))AND(rt0.c1)) END))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((CASE WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE ((((0.8868352188010252)OR(rt0.c2)))AND(rt0.c1)) END) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c1;
SELECT rt0.c2, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c1 HAVING NULL UNION ALL SELECT ALL rt0.c2, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c1 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c2, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c1 HAVING ((NULL) ISNULL);
SELECT rt0.c2, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c1;
SELECT rt0.c2, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c1 HAVING NULL UNION ALL SELECT ALL rt0.c2, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c1 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c2, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c1 HAVING ((NULL) ISNULL);
SELECT rt0.c2, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c1;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((((((+ (vt1.c0)))AND(((vt1.c1)IS NOT(vt1.c0)))))AND(vt1.c0))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((((((+ (vt1.c0)))AND(((vt1.c1)IS NOT(vt1.c0)))))AND(vt1.c0))))) UNION ALL SELECT * FROM vt1 WHERE ((((((((+ (vt1.c0)))AND(((vt1.c1)IS NOT(vt1.c0)))))AND(vt1.c0))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((json_extract(rt0.c1, rt0.c1)) IS FALSE)) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((json_extract(rt0.c1, rt0.c1)) IS FALSE)))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((json_extract(rt0.c1, rt0.c1)) IS FALSE)) ISNULL));
SELECT ALL vt1.c1, rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c2, rt0.c0, rt0.c1, vt1.c0;
SELECT ALL vt1.c1, rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))LIKE(((vt1.c1)-(rt0.c1))))) GROUP BY vt1.c1, rt0.c2, rt0.c0, rt0.c1, vt1.c0 UNION SELECT ALL vt1.c1, rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))LIKE(((vt1.c1)-(rt0.c1))))))) GROUP BY vt1.c1, rt0.c2, rt0.c0, rt0.c1, vt1.c0 UNION SELECT ALL vt1.c1, rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))LIKE(((vt1.c1)-(rt0.c1))))) ISNULL)) GROUP BY vt1.c1, rt0.c2, rt0.c0, rt0.c1, vt1.c0;
SELECT ALL vt1.c1, rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c2, rt0.c0, rt0.c1, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, vt1.c1 FROM vt1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (CASE vt1.c1  WHEN ((vt1.c0)<=(vt1.c0)) THEN (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1))) WHEN (vt1.c1 IN ()) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) WHEN CASE -340141911  WHEN vt1.c0 THEN vt1.c1 END THEN ((vt1.c1)LIKE(-944928125)) END) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (CASE vt1.c1  WHEN ((vt1.c0)<=(vt1.c0)) THEN (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1))) WHEN (vt1.c1 IN ()) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) WHEN CASE -340141911  WHEN vt1.c0 THEN vt1.c1 END THEN ((vt1.c1)LIKE(-944928125)) END))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((CASE vt1.c1  WHEN ((vt1.c0)<=(vt1.c0)) THEN (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1))) WHEN (vt1.c1 IN ()) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) WHEN CASE -340141911  WHEN vt1.c0 THEN vt1.c1 END THEN ((vt1.c1)LIKE(-944928125)) END) ISNULL));
SELECT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (ABS(LTRIM('~Q', vt1.c1))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (ABS(LTRIM('~Q', vt1.c1))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((ABS(LTRIM('~Q', vt1.c1))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c2, vt1.c1 FROM rt0 INNER JOIN vt1 ON rt0.c0 GROUP BY rt0.c2, vt1.c1;
SELECT ALL rt0.c2, vt1.c1 FROM rt0 INNER JOIN vt1 ON rt0.c0 WHERE (((rt0.c0 COLLATE RTRIM) NOT BETWEEN ((('-417082814') NOT BETWEEN (rt0.c0) AND (vt1.c1))) AND ((~ (0.8380588908411951))))) GROUP BY rt0.c2, vt1.c1 UNION SELECT rt0.c2, vt1.c1 FROM rt0 INNER JOIN vt1 ON rt0.c0 WHERE ((NOT (((rt0.c0 COLLATE RTRIM) NOT BETWEEN ((('-417082814') NOT BETWEEN (rt0.c0) AND (vt1.c1))) AND ((~ (0.8380588908411951))))))) GROUP BY rt0.c2, vt1.c1 UNION SELECT rt0.c2, vt1.c1 FROM rt0 INNER JOIN vt1 ON rt0.c0 WHERE (((((rt0.c0 COLLATE RTRIM) NOT BETWEEN ((('-417082814') NOT BETWEEN (rt0.c0) AND (vt1.c1))) AND ((~ (0.8380588908411951))))) ISNULL)) GROUP BY rt0.c2, vt1.c1;
SELECT rt0.c2, vt1.c1 FROM rt0 INNER JOIN vt1 ON rt0.c0 GROUP BY rt0.c2, vt1.c1;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING load_extension(CAST(rt0.c1 AS REAL)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (load_extension(CAST(rt0.c1 AS REAL)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((load_extension(CAST(rt0.c1 AS REAL))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c1)<>(rt0.c1)))LIKE(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1)<>(rt0.c1)))LIKE(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c1)!=(rt0.c1)))LIKE(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END))) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, vt1.c0 FROM vt1, rt0 WHERE (((rt0.c1)<=(CAST(vt1.c1 AS TEXT)))) UNION SELECT DISTINCT rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((NOT (((rt0.c1)<=(CAST(vt1.c1 AS TEXT)))))) UNION SELECT DISTINCT rt0.c1, vt1.c0 FROM vt1, rt0 WHERE (((((rt0.c1)<=(CAST(vt1.c1 AS TEXT)))) ISNULL));
SELECT DISTINCT rt0.c1, vt1.c0 FROM vt1, rt0;
SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE (CASE rt0.c0  WHEN vt1.c0 COLLATE RTRIM THEN TYPEOF(0x5b8f91e6) ELSE ((((1056783890)OR(rt0.c1)))AND(rt0.c2)) END) GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT (CASE rt0.c0  WHEN vt1.c0 COLLATE RTRIM THEN TYPEOF(0X5b8f91e6) ELSE ((((1056783890)OR(rt0.c1)))AND(rt0.c2)) END))) GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE (((CASE rt0.c0  WHEN vt1.c0 COLLATE RTRIM THEN TYPEOF(0X5b8f91e6) ELSE ((((1056783890)OR(rt0.c1)))AND(rt0.c2)) END) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2;
SELECT ALL vt1.c1, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c2;
SELECT vt1.c1, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c2 HAVING MAX(COUNT(AVG(MAX(GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT vt1.c1, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c2 HAVING (NOT (MAX(COUNT(AVG(MAX(GROUP_CONCAT(rt0.c2))))))) UNION ALL SELECT ALL vt1.c1, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c2 HAVING ((MAX(COUNT(AVG(MAX(GROUP_CONCAT(rt0.c2)))))) ISNULL);
SELECT vt1.c0, rt0.c2, vt1.c1, rt0.c0 FROM rt0, vt1;
SELECT ALL vt1.c0, rt0.c2, vt1.c1, rt0.c0 FROM rt0, vt1 WHERE ((((vt1.c1)AND(rt0.c1)) IN ())) UNION ALL SELECT ALL vt1.c0, rt0.c2, vt1.c1, rt0.c0 FROM rt0, vt1 WHERE ((NOT ((((vt1.c1)AND(rt0.c1)) IN ())))) UNION ALL SELECT ALL vt1.c0, rt0.c2, vt1.c1, rt0.c0 FROM rt0, vt1 WHERE ((((((vt1.c1)AND(rt0.c1)) IN ())) ISNULL));
SELECT vt1.c0, rt0.c2, vt1.c1, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((((vt1.c0)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND (((- (vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND (((- (vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((((vt1.c0)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND (((- (vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (CAST(json_array_length(rt0.c2, rt0.c1) AS BLOB)) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST(json_array_length(rt0.c2, rt0.c1) AS BLOB)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(json_array_length(rt0.c2, rt0.c1) AS BLOB)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE WHEN 0X325ffe81 COLLATE NOCASE THEN SUM(COUNT(*)) END UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE WHEN 0x325ffe81 COLLATE NOCASE THEN SUM(COUNT(*)) END)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE WHEN 0x325ffe81 COLLATE NOCASE THEN SUM(COUNT(*)) END) ISNULL);
SELECT * FROM vt1 NATURAL JOIN rt0;
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (CASE ((0.43375127587909657)IS(vt1.c1))  WHEN (rt0.c1 IN ()) THEN ((vt1.c1)!=(rt0.c1)) ELSE 'p漄' COLLATE BINARY END) UNION ALL SELECT * FROM vt1 NATURAL JOIN rt0 WHERE ((NOT (CASE ((0.43375127587909657)IS(vt1.c1))  WHEN (rt0.c1 IN ()) THEN ((vt1.c1)!=(rt0.c1)) ELSE 'p漄' COLLATE BINARY END))) UNION ALL SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (((CASE ((0.43375127587909657)IS(vt1.c1))  WHEN (rt0.c1 IN ()) THEN ((vt1.c1)!=(rt0.c1)) ELSE 'p漄' COLLATE BINARY END) ISNULL));
SELECT * FROM vt1 NATURAL JOIN rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN ((((rt0.c1)OR(0.6405326858032547)))AND(rt0.c0)) THEN ((rt0.c1)*(rt0.c2)) ELSE (rt0.c0 IN ()) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN ((((rt0.c1)OR(0.6405326858032547)))AND(rt0.c0)) THEN ((rt0.c1)*(rt0.c2)) ELSE (rt0.c0 IN ()) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN ((((rt0.c1)OR(0.6405326858032547)))AND(rt0.c0)) THEN ((rt0.c1)*(rt0.c2)) ELSE (rt0.c0 IN ()) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE (2072799399) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((NOT (2072799399))) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE (((2072799399) ISNULL)) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL vt1.c1, rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c0, rt0.c2;
SELECT vt1.c1, rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c0, rt0.c2 HAVING ((((x'7542')&(vt1.c0))) IS FALSE) UNION ALL SELECT ALL vt1.c1, rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c0, rt0.c2 HAVING (NOT (((((x'7542')&(vt1.c0))) IS FALSE))) UNION ALL SELECT vt1.c1, rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c0, rt0.c2 HAVING ((((((x'7542')&(vt1.c0))) IS FALSE)) ISNULL);
SELECT ALL vt1.c1, rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c0, rt0.c2;
SELECT vt1.c1, rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c0, rt0.c2 HAVING ((((x'7542')&(vt1.c0))) IS FALSE) UNION ALL SELECT ALL vt1.c1, rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c0, rt0.c2 HAVING (NOT (((((x'7542')&(vt1.c0))) IS FALSE))) UNION ALL SELECT vt1.c1, rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c0, rt0.c2 HAVING ((((((x'7542')&(vt1.c0))) IS FALSE)) ISNULL);
SELECT ALL vt1.c1, rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, vt1.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0;
SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) NOT NULL)) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) NOT NULL)))) UNION ALL SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) NOT NULL)) ISNULL));
SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2))) IS TRUE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2))) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt1 WHERE ((CASE vt1.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END IN ())) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt1 WHERE ((NOT ((CASE vt1.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END IN ())))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt1 WHERE ((((CASE vt1.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END IN ())) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2 HAVING GROUP_CONCAT(CAST(COUNT(*) AS NUMERIC)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(CAST(COUNT(*) AS NUMERIC)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(CAST(COUNT(*) AS NUMERIC))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((~ (CAST(rt0.c0 AS TEXT)))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((~ (CAST(rt0.c0 AS TEXT)))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((~ (CAST(rt0.c0 AS TEXT)))) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE (((((vt1.c1)>=(vt1.c1))) BETWEEN (NULL) AND (((('start of year')) BETWEEN ((vt1.c1)) AND ((rt0.c1)))))) UNION SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((NOT (((((vt1.c1)>=(vt1.c1))) BETWEEN (NULL) AND (((('start of year')) BETWEEN ((vt1.c1)) AND ((rt0.c1)))))))) UNION SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE (((((((vt1.c1)>=(vt1.c1))) BETWEEN (NULL) AND (((('start of year')) BETWEEN ((vt1.c1)) AND ((rt0.c1)))))) ISNULL));
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1;
SELECT rt0.c1, rt0.c2, vt1.c0, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0, vt1.c1;
SELECT ALL rt0.c1, rt0.c2, vt1.c0, vt1.c1 FROM vt1, rt0 WHERE ((((((rt0.c2))=((rt0.c0))))GLOB(rt0.c0))) GROUP BY rt0.c1, rt0.c2, vt1.c0, vt1.c1 UNION SELECT ALL rt0.c1, rt0.c2, vt1.c0, vt1.c1 FROM vt1, rt0 WHERE ((NOT ((((((rt0.c2))==((rt0.c0))))GLOB(rt0.c0))))) GROUP BY rt0.c1, rt0.c2, vt1.c0, vt1.c1 UNION SELECT ALL rt0.c1, rt0.c2, vt1.c0, vt1.c1 FROM vt1, rt0 WHERE ((((((((rt0.c2))=((rt0.c0))))GLOB(rt0.c0))) ISNULL)) GROUP BY rt0.c1, rt0.c2, vt1.c0, vt1.c1;
SELECT rt0.c1, rt0.c2, vt1.c0, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0, vt1.c1;
SELECT rt0.c2, rt0.c0, vt1.c1, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c1, rt0.c1, vt1.c0;
SELECT rt0.c2, rt0.c0, vt1.c1, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c1, rt0.c1, vt1.c0 HAVING COUNT(MAX(TOTAL(rt0.c0))) UNION ALL SELECT rt0.c2, rt0.c0, vt1.c1, rt0.c1, vt1.c0 FROM rt0, vt1 NOT INDEXED GROUP BY rt0.c2, rt0.c0, vt1.c1, rt0.c1, vt1.c0 HAVING (NOT (COUNT(MAX(TOTAL(rt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c1, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c1, rt0.c1, vt1.c0 HAVING ((COUNT(MAX(TOTAL(rt0.c0)))) ISNULL);
SELECT rt0.c2, vt1.c1, rt0.c0, rt0.c1 FROM rt0, vt1;
SELECT rt0.c2, vt1.c1, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE ((- ((((rt0.c0))!=((rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, vt1.c1, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT ((- ((((rt0.c0))!=((rt0.c0)))))))) UNION ALL SELECT rt0.c2, vt1.c1, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE ((((- ((((rt0.c0))!=((rt0.c0)))))) ISNULL));
SELECT rt0.c2, vt1.c1, rt0.c0, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c1 FROM vt1 WHERE (((vt1.c0)<=(0.7905091361548274))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((NOT (((vt1.c0)<=(0.7905091361548274))))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE (((((vt1.c0)<=(0.7905091361548274))) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((+ (rt0.c1))))>((((rt0.c2)+(rt0.c2)))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((+ (rt0.c1))))>((((rt0.c2)+(rt0.c2)))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((+ (rt0.c1))))>((((rt0.c2)+(rt0.c2)))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c1, rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c2, vt1.c0, rt0.c0, rt0.c1;
SELECT ALL vt1.c1, rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c2, vt1.c0, rt0.c0, rt0.c1 HAVING ((((GROUP_CONCAT(rt0.c2))OR((((COUNT(COUNT(COUNT(*))))) NOT BETWEEN ((rt0.c2)) AND ((COUNT(*)))))))OR(((((COUNT(*))OR(vt1.c1)))AND(rt0.c2)))) UNION ALL SELECT ALL vt1.c1, rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c2, vt1.c0, rt0.c0, rt0.c1 HAVING (NOT (((((GROUP_CONCAT(rt0.c2))OR((((COUNT(COUNT(COUNT(*))))) NOT BETWEEN ((rt0.c2)) AND ((COUNT(*)))))))OR(((((COUNT(*))OR(vt1.c1)))AND(rt0.c2)))))) UNION ALL SELECT vt1.c1, rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c2, vt1.c0, rt0.c0, rt0.c1 HAVING ((((((GROUP_CONCAT(rt0.c2))OR((((COUNT(COUNT(COUNT(*))))) NOT BETWEEN ((rt0.c2)) AND ((COUNT(*)))))))OR(((((COUNT(*))OR(vt1.c1)))AND(rt0.c2))))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1 FULL OUTER JOIN rt0 ON ((vt1.c1) NOTNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1 FULL OUTER JOIN rt0 ON ((vt1.c1) NOTNULL) WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)-(((vt1.c1) IS TRUE)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1 FULL OUTER JOIN rt0 ON ((vt1.c1) NOTNULL) WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)-(((vt1.c1) IS TRUE)))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1 FULL OUTER JOIN rt0 ON ((vt1.c1) NOTNULL) WHERE (((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)-(((vt1.c1) IS TRUE)))) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1 FULL OUTER JOIN rt0 ON ((vt1.c1) NOTNULL);
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((((- (vt1.c0))) NOTNULL)) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 NOT INDEXED WHERE ((NOT ((((- (vt1.c0))) NOTNULL)))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((((((- (vt1.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS NUMERIC)) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST((rt0.c0 IN ()) AS NUMERIC)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST((rt0.c0 IN ()) AS NUMERIC)) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING MIN(((SUM(COUNT(MAX(rt0.c2))))+(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MIN(((SUM(COUNT(MAX(rt0.c2))))+(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((MIN(((SUM(COUNT(MAX(rt0.c2))))+(rt0.c2)))) ISNULL);
SELECT ALL SUM((((vt1.c0))>=((NULL)))) FROM vt1, rt0 ORDER BY ((((rt0.c1) NOT BETWEEN (vt1.c1) AND (rt0.c2)))/(CAST(vt1.c1 AS INTEGER)));
SELECT * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE (CASE WHEN ((x'4f51')GLOB(rt0.c2)) THEN -434583607 COLLATE NOCASE ELSE ((rt0.c2)IS NOT(rt0.c0)) END) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (CASE WHEN ((x'4f51')GLOB(rt0.c2)) THEN -434583607 COLLATE NOCASE ELSE ((rt0.c2)IS NOT(rt0.c0)) END))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((CASE WHEN ((x'4f51')GLOB(rt0.c2)) THEN -434583607 COLLATE NOCASE ELSE ((rt0.c2)IS NOT(rt0.c0)) END) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT rt0.c2, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c2, vt1.c0 FROM rt0, vt1 WHERE (CAST(vt1.c0 AS INTEGER)) UNION SELECT DISTINCT rt0.c2, vt1.c0 FROM rt0, vt1 WHERE ((NOT (CAST(vt1.c0 AS INTEGER)))) UNION SELECT DISTINCT rt0.c2, vt1.c0 FROM rt0, vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c2, vt1.c0 FROM rt0, vt1;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0, vt1.c1;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0, vt1.c1 FROM vt1, rt0 WHERE (LIKELIHOOD(DISTINCT rt0.c0, 0.5436554782452989)) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0, vt1.c1 UNION SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0, vt1.c1 FROM vt1, rt0 WHERE ((NOT (LIKELIHOOD(DISTINCT rt0.c0, 0.5436554782452989)))) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0, vt1.c1 UNION SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0, vt1.c1 FROM vt1, rt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c0, 0.5436554782452989)) ISNULL)) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0, vt1.c1;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0, vt1.c1;
SELECT vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1 HAVING TOTAL('') UNION ALL SELECT vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1 HAVING (NOT (TOTAL(''))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1 HAVING ((TOTAL('')) ISNULL);
SELECT vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1 HAVING TOTAL('') UNION ALL SELECT vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1 HAVING (NOT (TOTAL(''))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1 HAVING ((TOTAL('')) ISNULL);
SELECT vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((('KG')AND(CAST(rt0.c0 AS INTEGER)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((('KG')AND(CAST(rt0.c0 AS INTEGER)))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((('KG')AND(CAST(rt0.c0 AS INTEGER)))) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT vt1.c1, rt0.c1, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT vt1.c1, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c1)), CASE WHEN rt0.c2 THEN rt0.c0 END, rt0.c2)) AND ((TRIM(rt0.c0), ((((vt1.c1)AND(vt1.c0)))OR(rt0.c1)), ((vt1.c1) IS FALSE))))) UNION SELECT DISTINCT vt1.c1, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((NOT ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c1)), CASE WHEN rt0.c2 THEN rt0.c0 END, rt0.c2)) AND ((TRIM(rt0.c0), ((((vt1.c1)AND(vt1.c0)))OR(rt0.c1)), ((vt1.c1) IS FALSE))))))) UNION SELECT DISTINCT vt1.c1, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c1)), CASE WHEN rt0.c2 THEN rt0.c0 END, rt0.c2)) AND ((TRIM(rt0.c0), ((((vt1.c1)AND(vt1.c0)))OR(rt0.c1)), ((vt1.c1) IS FALSE))))) ISNULL));
SELECT DISTINCT vt1.c1, rt0.c1, rt0.c2 FROM vt1, rt0;
SELECT ALL vt1.c0, rt0.c0, vt1.c1, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c2, rt0.c1;
SELECT vt1.c0, rt0.c0, vt1.c1, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE (TRIM(DISTINCT ((vt1.c1)%(rt0.c0)))) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c2, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c0, vt1.c1, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((NOT (TRIM(DISTINCT ((vt1.c1)%(rt0.c0)))))) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c2, rt0.c1 UNION SELECT vt1.c0, rt0.c0, vt1.c1, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE (((TRIM(DISTINCT ((vt1.c1)%(rt0.c0)))) ISNULL)) GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c2, rt0.c1;
SELECT ALL vt1.c0, rt0.c0, vt1.c1, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, vt1.c1, rt0.c2, rt0.c1;
SELECT ALL rt0.c2, vt1.c1, rt0.c1, rt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)+(rt0.c0)) IN ()) GROUP BY rt0.c2, vt1.c1, rt0.c1, rt0.c0, vt1.c0;
SELECT rt0.c2, vt1.c1, rt0.c1, rt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)+(rt0.c0)) IN ()) GROUP BY rt0.c2, vt1.c1, rt0.c1, rt0.c0, vt1.c0 HAVING SUM(MAX(rt0.c0)) UNION ALL SELECT ALL rt0.c2, vt1.c1, rt0.c1, rt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)+(rt0.c0)) IN ()) GROUP BY rt0.c2, vt1.c1, rt0.c1, rt0.c0, vt1.c0 HAVING (NOT (SUM(MAX(rt0.c0)))) UNION ALL SELECT ALL rt0.c2, vt1.c1, rt0.c1, rt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)+(rt0.c0)) IN ()) GROUP BY rt0.c2, vt1.c1, rt0.c1, rt0.c0, vt1.c0 HAVING ((SUM(MAX(rt0.c0))) ISNULL);
SELECT vt1.c1 FROM vt1;
SELECT ALL vt1.c1 FROM vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS TEXT)) UNION ALL SELECT vt1.c1 FROM vt1 WHERE ((NOT (CAST(vt1.c0 COLLATE NOCASE AS TEXT)))) UNION ALL SELECT ALL vt1.c1 FROM vt1 WHERE (((CAST(vt1.c0 COLLATE NOCASE AS TEXT)) ISNULL));
SELECT vt1.c1 FROM vt1;
SELECT DISTINCT rt0.c1, vt1.c1, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c1, vt1.c1, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c1, vt1.c1, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c1, vt1.c1, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c1, vt1.c1, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1;
SELECT vt1.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c1, vt1.c0, rt0.c2;
SELECT ALL vt1.c1, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((((rt0.c0)) BETWEEN (((NOT (rt0.c2)))) AND ((rt0.c1 COLLATE RTRIM)))) GROUP BY vt1.c1, vt1.c0, rt0.c2 UNION SELECT ALL vt1.c1, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT ((((rt0.c0)) BETWEEN (((NOT (rt0.c2)))) AND ((rt0.c1 COLLATE RTRIM)))))) GROUP BY vt1.c1, vt1.c0, rt0.c2 UNION SELECT ALL vt1.c1, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((((((rt0.c0)) BETWEEN (((NOT (rt0.c2)))) AND ((rt0.c1 COLLATE RTRIM)))) ISNULL)) GROUP BY vt1.c1, vt1.c0, rt0.c2;
SELECT vt1.c1, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c1, vt1.c0, rt0.c2;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING vt1.c0 COLLATE NOCASE UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (vt1.c0 COLLATE NOCASE)) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((vt1.c0 COLLATE NOCASE) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING vt1.c0 COLLATE NOCASE UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (vt1.c0 COLLATE NOCASE)) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((vt1.c0 COLLATE NOCASE) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1)))))!=((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1)))))!=((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1)))))!=((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt1, rt0 WHERE ((((rt0.c1)=(rt0.c1)) IN ('81660950', NULL COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM vt1, rt0 WHERE ((NOT ((((rt0.c1)=(rt0.c1)) IN ('81660950', NULL COLLATE RTRIM))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM vt1, rt0 WHERE ((((((rt0.c1)=(rt0.c1)) IN ('81660950', NULL COLLATE RTRIM))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt1, rt0;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END IN ())) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END IN ())))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END IN ())) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COALESCE(rt0.c2, GROUP_CONCAT(TOTAL(rt0.c1))))+(COUNT(*))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((COALESCE(rt0.c2, GROUP_CONCAT(TOTAL(rt0.c1))))+(COUNT(*))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((COALESCE(rt0.c2, GROUP_CONCAT(TOTAL(rt0.c1))))+(COUNT(*)))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))))!=((vt1.c0)))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))))<>((vt1.c0)))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))))!=((vt1.c0)))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((((((vt1.c0 IN ()))OR(((rt0.c2) IS FALSE))))OR(-1350766034))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((((((vt1.c0 IN ()))OR(((rt0.c2) IS FALSE))))OR(-1350766034))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((((((vt1.c0 IN ()))OR(((rt0.c2) IS FALSE))))OR(-1350766034))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT vt1.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, vt1.c1, rt0.c1, rt0.c2;
SELECT vt1.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((((((vt1.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0)))) NOTNULL)) GROUP BY vt1.c0, vt1.c1, rt0.c1, rt0.c2 UNION SELECT vt1.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((NOT ((((((vt1.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0)))) NOTNULL)))) GROUP BY vt1.c0, vt1.c1, rt0.c1, rt0.c2 UNION SELECT ALL vt1.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((((((((vt1.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0)))) NOTNULL)) ISNULL)) GROUP BY vt1.c0, vt1.c1, rt0.c1, rt0.c2;
SELECT vt1.c0, vt1.c1, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, vt1.c1, rt0.c1, rt0.c2;
SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2 HAVING (((rt0.c1)) BETWEEN ((((COUNT(*)) BETWEEN (AVG(TOTAL(MIN(vt1.c0)))) AND (rt0.c1)))) AND ((MAX(MAX(rt0.c2))))) UNION ALL SELECT rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2 HAVING (NOT ((((rt0.c1)) BETWEEN ((((COUNT(*)) BETWEEN (AVG(TOTAL(MIN(vt1.c0)))) AND (rt0.c1)))) AND ((MAX(MAX(rt0.c2))))))) UNION ALL SELECT rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2 HAVING (((((rt0.c1)) BETWEEN ((((COUNT(*)) BETWEEN (AVG(TOTAL(MIN(vt1.c0)))) AND (rt0.c1)))) AND ((MAX(MAX(rt0.c2)))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (CASE CAST(rt0.c2 AS REAL)  WHEN rt0.c0 THEN CAST(rt0.c1 AS REAL) ELSE rt0.c0 END) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE CAST(rt0.c2 AS REAL)  WHEN rt0.c0 THEN CAST(rt0.c1 AS REAL) ELSE rt0.c0 END))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE CAST(rt0.c2 AS REAL)  WHEN rt0.c0 THEN CAST(rt0.c1 AS REAL) ELSE rt0.c0 END) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (LIKELY((- (vt1.c0)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (LIKELY((- (vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((LIKELY((- (vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c2, vt1.c1, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c1, rt0.c0, vt1.c0;
SELECT rt0.c2, vt1.c1, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((- (((((vt1.c1)AND(vt1.c0)))OR(rt0.c1))))) GROUP BY rt0.c2, vt1.c1, rt0.c0, vt1.c0 UNION SELECT rt0.c2, vt1.c1, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((NOT ((- (((((vt1.c1)AND(vt1.c0)))OR(rt0.c1))))))) GROUP BY rt0.c2, vt1.c1, rt0.c0, vt1.c0 UNION SELECT ALL rt0.c2, vt1.c1, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((((- (((((vt1.c1)AND(vt1.c0)))OR(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, vt1.c1, rt0.c0, vt1.c0;
SELECT rt0.c2, vt1.c1, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c1, rt0.c0, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING SUM(((((MAX(vt1.c1))AND(vt1.c0)))OR(vt1.c1))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (SUM(((((MAX(vt1.c1))AND(vt1.c0)))OR(vt1.c1))))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((SUM(((((MAX(vt1.c1))AND(vt1.c0)))OR(vt1.c1)))) ISNULL);
SELECT MIN(((((NOT (rt0.c2))))>=((ABS(DISTINCT rt0.c2))))) FROM rt0 ORDER BY ((((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))AND(((('J,')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(rt0.c1 COLLATE BINARY)))OR(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)))AND(CAST(rt0.c1 AS INTEGER))) ASC, (+ ((NOT (rt0.c2)))) ASC  NULLS FIRST;
SELECT vt1.c1 FROM vt1, rt0;
SELECT vt1.c1 FROM vt1, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((NULL)) AND (((rt0.c0 IN ()))))) UNION ALL SELECT ALL vt1.c1 FROM vt1, rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((NULL)) AND (((rt0.c0 IN ()))))))) UNION ALL SELECT vt1.c1 FROM vt1, rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((NULL)) AND (((rt0.c0 IN ()))))) ISNULL));
SELECT vt1.c1 FROM vt1, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((~ (HEX(0.10696228818081555)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((~ (HEX(0.10696228818081555)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((~ (HEX(0.10696228818081555)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c0, vt1.c0, rt0.c1, vt1.c1, rt0.c2 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c0, vt1.c0, rt0.c1, vt1.c1, rt0.c2;
SELECT rt0.c0, vt1.c0, rt0.c1, vt1.c1, rt0.c2 FROM vt1 NATURAL JOIN rt0 WHERE (((((((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)AND((~ (rt0.c0)))))AND(UNICODE(rt0.c1))))AND((NOT (vt1.c0)))))OR('714940944'))) GROUP BY rt0.c0, vt1.c0, rt0.c1, vt1.c1, rt0.c2 UNION SELECT rt0.c0, vt1.c0, rt0.c1, vt1.c1, rt0.c2 FROM vt1 NATURAL JOIN rt0 WHERE ((NOT (((((((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)AND((~ (rt0.c0)))))AND(UNICODE(rt0.c1))))AND((NOT (vt1.c0)))))OR('714940944'))))) GROUP BY rt0.c0, vt1.c0, rt0.c1, vt1.c1, rt0.c2 UNION SELECT rt0.c0, vt1.c0, rt0.c1, vt1.c1, rt0.c2 FROM vt1 NATURAL JOIN rt0 WHERE (((((((((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)AND((~ (rt0.c0)))))AND(UNICODE(rt0.c1))))AND((NOT (vt1.c0)))))OR('714940944'))) ISNULL)) GROUP BY rt0.c0, vt1.c0, rt0.c1, vt1.c1, rt0.c2;
SELECT rt0.c0, vt1.c0, rt0.c1, vt1.c1, rt0.c2 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c0, vt1.c0, rt0.c1, vt1.c1, rt0.c2;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT * FROM rt0 CROSS JOIN vt1 ON ((CASE rt0.c1  WHEN x'' THEN rt0.c1 WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c1 END) ISNULL);
SELECT * FROM rt0 CROSS JOIN vt1 ON ((CASE rt0.c1  WHEN x'' THEN rt0.c1 WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c1 END) ISNULL) WHERE ((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN 'T+Y&Y2' ELSE rt0.c0 END, ((rt0.c0) NOT NULL), '0.15816146951563315')) AND ((rt0.c1 COLLATE BINARY, ((vt1.c1)*(rt0.c0)), (((NULL, vt1.c0, vt1.c1)) NOT BETWEEN ((0.09930810030574322, rt0.c0, 0.3648417011864352)) AND ((rt0.c2, vt1.c0, rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 CROSS JOIN vt1 ON ((CASE rt0.c1  WHEN x'' THEN rt0.c1 WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c1 END) ISNULL) WHERE ((NOT ((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN 'T+Y&Y2' ELSE rt0.c0 END, ((rt0.c0) NOT NULL), '0.15816146951563315')) AND ((rt0.c1 COLLATE BINARY, ((vt1.c1)*(rt0.c0)), (((NULL, vt1.c0, vt1.c1)) NOT BETWEEN ((0.09930810030574322, rt0.c0, 0.3648417011864352)) AND ((rt0.c2, vt1.c0, rt0.c2))))))))) UNION ALL SELECT * FROM rt0 CROSS JOIN vt1 ON ((CASE rt0.c1  WHEN x'' THEN rt0.c1 WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c1 END) ISNULL) WHERE ((((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN 'T+Y&Y2' ELSE rt0.c0 END, ((rt0.c0) NOT NULL), '0.15816146951563315')) AND ((rt0.c1 COLLATE BINARY, ((vt1.c1)*(rt0.c0)), (((NULL, vt1.c0, vt1.c1)) NOT BETWEEN ((0.09930810030574322, rt0.c0, 0.3648417011864352)) AND ((rt0.c2, vt1.c0, rt0.c2))))))) ISNULL));
SELECT * FROM rt0 CROSS JOIN vt1 ON ((CASE rt0.c1  WHEN x'' THEN rt0.c1 WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c1 END) ISNULL);
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0)=(0.8560190729142616)) AS TEXT)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0)==(0.8560190729142616)) AS TEXT)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0)=(0.8560190729142616)) AS TEXT)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ()))GLOB(((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 IN ()))GLOB(((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0))))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN ()))GLOB(((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0))))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((((((vt1.c1)OR(vt1.c1)))OR(rt0.c0)))OR((vt1.c1 IN (vt1.c0)))))AND(CASE '1532669341'  WHEN rt0.c2 THEN vt1.c1 END)))AND(0.1700810473358172)))AND(((rt0.c0) NOTNULL))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c1;
SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((((((vt1.c1)OR(vt1.c1)))OR(rt0.c0)))OR((vt1.c1 IN (vt1.c0)))))AND(CASE '1532669341'  WHEN rt0.c2 THEN vt1.c1 END)))AND(0.1700810473358172)))AND(((rt0.c0) NOTNULL))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c1 HAVING AVG(((((GROUP_CONCAT(rt0.c1))AND(rt0.c0)))OR(rt0.c1))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt1.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((((((vt1.c1)OR(vt1.c1)))OR(rt0.c0)))OR((vt1.c1 IN (vt1.c0)))))AND(CASE '1532669341'  WHEN rt0.c2 THEN vt1.c1 END)))AND(0.1700810473358172)))AND(((rt0.c0) NOTNULL))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c1 HAVING (NOT (AVG(((((GROUP_CONCAT(rt0.c1))AND(rt0.c0)))OR(rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((((((vt1.c1)OR(vt1.c1)))OR(rt0.c0)))OR((vt1.c1 IN (vt1.c0)))))AND(CASE '1532669341'  WHEN rt0.c2 THEN vt1.c1 END)))AND(0.1700810473358172)))AND(((rt0.c0) NOTNULL))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c1 HAVING ((AVG(((((GROUP_CONCAT(rt0.c1))AND(rt0.c0)))OR(rt0.c1)))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))) IS FALSE)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))) IS FALSE)))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))) IS FALSE)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((CASE WHEN vt1.c1 THEN vt1.c0 END)) AND (((vt1.c1 IN ()))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((vt1.c1)) BETWEEN ((CASE WHEN vt1.c1 THEN vt1.c0 END)) AND (((vt1.c1 IN ()))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c1)) BETWEEN ((CASE WHEN vt1.c1 THEN vt1.c0 END)) AND (((vt1.c1 IN ()))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0)>=(rt0.c2))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) AND (rt0.c0))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0)>=(rt0.c2))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) AND (rt0.c0))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c0)>=(rt0.c2))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) AND (rt0.c0))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING COUNT(COUNT(*)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE ((((x'' IN ())) BETWEEN (((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c1))) AND (vt1.c0))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((((x'' IN ())) BETWEEN (((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c1))) AND (vt1.c0))))) UNION ALL SELECT * FROM vt1 WHERE ((((((x'' IN ())) BETWEEN (((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c1))) AND (vt1.c0))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (vt1.c1) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (vt1.c1))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (((vt1.c1) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING TOTAL((((MIN(SUM(SUM('-1329219210'))), MAX(vt1.c0), vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c1)) AND ((COUNT(SUM(TOTAL(SUM(AVG(vt1.c1))))), SUM('247710466'), vt1.c0)))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (TOTAL((((MIN(SUM(SUM('-1329219210'))), MAX(vt1.c0), vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c1)) AND ((COUNT(SUM(TOTAL(SUM(AVG(vt1.c1))))), SUM('247710466'), vt1.c0)))))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((TOTAL((((MIN(SUM(SUM('-1329219210'))), MAX(vt1.c0), vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c1)) AND ((COUNT(SUM(TOTAL(SUM(AVG(vt1.c1))))), SUM('247710466'), vt1.c0))))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (vt1.c1) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c1))) UNION ALL SELECT * FROM vt1 WHERE (((vt1.c1) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((CASE WHEN rt0.c0 THEN rt0.c0 END IN (LIKELY(DISTINCT rt0.c2)))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((CASE WHEN rt0.c0 THEN rt0.c0 END IN (LIKELY(DISTINCT rt0.c2)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((((CASE WHEN rt0.c0 THEN rt0.c0 END IN (LIKELY(DISTINCT rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1;
SELECT vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (((rt0.c1) BETWEEN (CASE rt0.c2  WHEN vt1.c1 THEN rt0.c2 END) AND (((((rt0.c2)OR(rt0.c1)))OR(rt0.c2))))) GROUP BY vt1.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT (((rt0.c1) BETWEEN (CASE rt0.c2  WHEN vt1.c1 THEN rt0.c2 END) AND (((((rt0.c2)OR(rt0.c1)))OR(rt0.c2))))))) GROUP BY vt1.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (((((rt0.c1) BETWEEN (CASE rt0.c2  WHEN vt1.c1 THEN rt0.c2 END) AND (((((rt0.c2)OR(rt0.c1)))OR(rt0.c2))))) ISNULL)) GROUP BY vt1.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((MAX(vt1.c0))<=(AVG(vt1.c0))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (((MAX(vt1.c0))<=(AVG(vt1.c0))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((((MAX(vt1.c0))<=(AVG(vt1.c0)))) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((MAX(vt1.c0))<=(AVG(vt1.c0))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (((MAX(vt1.c0))<=(AVG(vt1.c0))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((((MAX(vt1.c0))<=(AVG(vt1.c0)))) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL MIN(CAST(CAST(rt0.c0 AS INTEGER) AS BLOB)) FROM vt1, rt0 ORDER BY (((vt1.c1 IN ())) BETWEEN (((rt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))) AND (CASE '-1645190408'  WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END)) ASC, ((((vt1.c0 COLLATE NOCASE)AND(((((vt1.c0)AND(rt0.c0)))AND(rt0.c0)))))OR(rt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (vt1.c0) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (CASE vt1.c1  WHEN 0.2758235521695267 THEN rt0.c2 END COLLATE BINARY) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (CASE vt1.c1  WHEN 0.2758235521695267 THEN rt0.c2 END COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((CASE vt1.c1  WHEN 0.2758235521695267 THEN rt0.c2 END COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED WHERE (CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))  WHEN (rt0.c1 IN (x'')) THEN rt0.c2 END) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))  WHEN (rt0.c1 IN (x'')) THEN rt0.c2 END))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))  WHEN (rt0.c1 IN (x'')) THEN rt0.c2 END) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((((((TOTAL(rt0.c1))OR(AVG(SUM(GROUP_CONCAT(TOTAL(MIN(rt0.c0))))))))OR(((MAX(SUM(AVG(MIN(GROUP_CONCAT(rt0.c1)))))) BETWEEN ('1394559793') AND (AVG(SUM(COUNT(*))))))))OR((((MAX(COUNT(0.6429835391990052)))) BETWEEN ((MIN(SUM(-486961793)))) AND ((GROUP_CONCAT(rt0.c2)))))))AND(MIN(rt0.c0))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((((((((TOTAL(rt0.c1))OR(AVG(SUM(GROUP_CONCAT(TOTAL(MIN(rt0.c0))))))))OR(((MAX(SUM(AVG(MIN(GROUP_CONCAT(rt0.c1)))))) BETWEEN ('1394559793') AND (AVG(SUM(COUNT(*))))))))OR((((MAX(COUNT(0.6429835391990052)))) BETWEEN ((MIN(SUM(-486961793)))) AND ((GROUP_CONCAT(rt0.c2)))))))AND(MIN(rt0.c0))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((((((((TOTAL(rt0.c1))OR(AVG(SUM(GROUP_CONCAT(TOTAL(MIN(rt0.c0))))))))OR(((MAX(SUM(AVG(MIN(GROUP_CONCAT(rt0.c1)))))) BETWEEN ('1394559793') AND (AVG(SUM(COUNT(*))))))))OR((((MAX(COUNT(0.6429835391990052)))) BETWEEN ((MIN(SUM(-486961793)))) AND ((GROUP_CONCAT(rt0.c2)))))))AND(MIN(rt0.c0)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL)))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (CASE ((rt0.c0)>>(vt1.c0))  WHEN TYPEOF('1954396914') THEN ((rt0.c1) BETWEEN (vt1.c1) AND (x'')) END) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (CASE ((rt0.c0)>>(vt1.c0))  WHEN TYPEOF('1954396914') THEN ((rt0.c1) BETWEEN (vt1.c1) AND (x'')) END))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((CASE ((rt0.c0)>>(vt1.c0))  WHEN TYPEOF('1954396914') THEN ((rt0.c1) BETWEEN (vt1.c1) AND (x'')) END) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))  WHEN ((vt1.c1)*(vt1.c1)) THEN ((vt1.c0)GLOB(0.26070833563110585)) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))  WHEN ((vt1.c1)*(vt1.c1)) THEN ((vt1.c0)GLOB(0.26070833563110585)) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))  WHEN ((vt1.c1)*(vt1.c1)) THEN ((vt1.c0)GLOB(0.26070833563110585)) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0, vt1.c1 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c1;
SELECT rt0.c0, vt1.c1 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c1 HAVING SUM(SUM(SUM(rt0.c1))) UNION ALL SELECT ALL rt0.c0, vt1.c1 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c1 HAVING (NOT (SUM(SUM(SUM(rt0.c1))))) UNION ALL SELECT ALL rt0.c0, vt1.c1 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c1 HAVING ((SUM(SUM(SUM(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0, vt1.c0, vt1.c1, rt0.c2 FROM vt1 INNER JOIN rt0 ON ((x'c94f')OR(((rt0.c0)||(rt0.c1))));
SELECT rt0.c0, vt1.c0, vt1.c1, rt0.c2 FROM vt1 INNER JOIN rt0 ON ((x'c94f')OR(((rt0.c0)||(rt0.c1)))) WHERE (CAST(-1215420055 AS NUMERIC) COLLATE BINARY) UNION ALL SELECT ALL rt0.c0, vt1.c0, vt1.c1, rt0.c2 FROM vt1 INNER JOIN rt0 ON ((x'c94f')OR(((rt0.c0)||(rt0.c1)))) WHERE ((NOT (CAST(-1215420055 AS NUMERIC) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c0, vt1.c0, vt1.c1, rt0.c2 FROM vt1 INNER JOIN rt0 ON ((x'c94f')OR(((rt0.c0)||(rt0.c1)))) WHERE (((CAST(-1215420055 AS NUMERIC) COLLATE BINARY) ISNULL));
SELECT ALL rt0.c0, vt1.c0, vt1.c1, rt0.c2 FROM vt1 INNER JOIN rt0 ON ((x'c94f')OR(((rt0.c0)||(rt0.c1))));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c2 IN ())) NOT BETWEEN (((0.7167730516141868)-(-1e500))) AND (x''))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2 IN ())) NOT BETWEEN (((0.7167730516141868)-(-1e500))) AND (x''))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c2 IN ())) NOT BETWEEN (((0.7167730516141868)-(-1e500))) AND (x''))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE (vt1.c1) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE ((NOT (vt1.c1))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE (((vt1.c1) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt1.c1, rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, rt0.c2, vt1.c0;
SELECT vt1.c1, rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, rt0.c2, vt1.c0 HAVING ((((NULL)OR(SUM(rt0.c0))))AND(SUM(MIN(rt0.c2)))) UNION ALL SELECT ALL vt1.c1, rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, rt0.c2, vt1.c0 HAVING (NOT (((((NULL)OR(SUM(rt0.c0))))AND(SUM(MIN(rt0.c2)))))) UNION ALL SELECT vt1.c1, rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c1, rt0.c2, vt1.c0 HAVING ((((((NULL)OR(SUM(rt0.c0))))AND(SUM(MIN(rt0.c2))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ('0.44637324127579026') UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ('0.44637324127579026'))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((('0.44637324127579026') ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0, vt1.c1, vt1.c0)) BETWEEN ((((vt1.c0) NOT NULL), vt1.c1, vt1.c0)) AND ((CAST(vt1.c0 AS NUMERIC), ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)), vt1.c0)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c1, vt1.c0)) BETWEEN ((((vt1.c0) NOT NULL), vt1.c1, vt1.c0)) AND ((CAST(vt1.c0 AS NUMERIC), ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)), vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0, vt1.c1, vt1.c0)) BETWEEN ((((vt1.c0) NOT NULL), vt1.c1, vt1.c0)) AND ((CAST(vt1.c0 AS NUMERIC), ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)), vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 WHERE (CAST(vt1.c1 AS TEXT)) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((NOT (CAST(vt1.c1 AS TEXT)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 WHERE (((CAST(vt1.c1 AS TEXT)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c1 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c0)OR(rt0.c0)))AND('闆/￣ᡫ'))) BETWEEN (((NULL) BETWEEN (rt0.c2) AND (vt1.c0))) AND (((-1687432492) BETWEEN (0x6027d594) AND (rt0.c0)))) GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c1;
SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c1 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c0)OR(rt0.c0)))AND('闆/￣ᡫ'))) BETWEEN (((NULL) BETWEEN (rt0.c2) AND (vt1.c0))) AND (((-1687432492) BETWEEN (0X6027d594) AND (rt0.c0)))) GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c1 HAVING SUM(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c1 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c0)OR(rt0.c0)))AND('闆/￣ᡫ'))) BETWEEN (((NULL) BETWEEN (rt0.c2) AND (vt1.c0))) AND (((-1687432492) BETWEEN (0X6027d594) AND (rt0.c0)))) GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c1 HAVING (NOT (SUM(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c1 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c0)OR(rt0.c0)))AND('闆/￣ᡫ'))) BETWEEN (((NULL) BETWEEN (rt0.c2) AND (vt1.c0))) AND (((-1687432492) BETWEEN (0X6027d594) AND (rt0.c0)))) GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c1 HAVING ((SUM(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) ISNULL);
SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c1 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c0)OR(rt0.c0)))AND('闆/￣ᡫ'))) BETWEEN (((NULL) BETWEEN (rt0.c2) AND (vt1.c0))) AND (((-1687432492) BETWEEN (0x6027d594) AND (rt0.c0)))) GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c1;
SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c1 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c0)OR(rt0.c0)))AND('闆/￣ᡫ'))) BETWEEN (((NULL) BETWEEN (rt0.c2) AND (vt1.c0))) AND (((-1687432492) BETWEEN (0X6027d594) AND (rt0.c0)))) GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c1 HAVING SUM(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c1 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c0)OR(rt0.c0)))AND('闆/￣ᡫ'))) BETWEEN (((NULL) BETWEEN (rt0.c2) AND (vt1.c0))) AND (((-1687432492) BETWEEN (0X6027d594) AND (rt0.c0)))) GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c1 HAVING (NOT (SUM(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c1 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c0)OR(rt0.c0)))AND('闆/￣ᡫ'))) BETWEEN (((NULL) BETWEEN (rt0.c2) AND (vt1.c0))) AND (((-1687432492) BETWEEN (0X6027d594) AND (rt0.c0)))) GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c1 HAVING ((SUM(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) ISNULL);
SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c1 FROM vt1 INNER JOIN rt0 ON ((((((rt0.c0)OR(rt0.c0)))AND('闆/￣ᡫ'))) BETWEEN (((NULL) BETWEEN (rt0.c2) AND (vt1.c0))) AND (((-1687432492) BETWEEN (0x6027d594) AND (rt0.c0)))) GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2, vt1.c1;
SELECT * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (((((((((((((UNLIKELY(vt1.c0))OR(CASE WHEN rt0.c0 THEN vt1.c1 ELSE 0.32288052028381886 END)))AND(((rt0.c2)>>(rt0.c1)))))OR((rt0.c1 IN (rt0.c0, vt1.c1)))))OR('5i?')))OR((NOT (rt0.c1)))))AND(rt0.c2 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (((((((((((((UNLIKELY(vt1.c0))OR(CASE WHEN rt0.c0 THEN vt1.c1 ELSE 0.32288052028381886 END)))AND(((rt0.c2)>>(rt0.c1)))))OR((rt0.c1 IN (rt0.c0, vt1.c1)))))OR('5i?')))OR((NOT (rt0.c1)))))AND(rt0.c2 COLLATE NOCASE))))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((((((((((((((UNLIKELY(vt1.c0))OR(CASE WHEN rt0.c0 THEN vt1.c1 ELSE 0.32288052028381886 END)))AND(((rt0.c2)>>(rt0.c1)))))OR((rt0.c1 IN (rt0.c0, vt1.c1)))))OR('5i?')))OR((NOT (rt0.c1)))))AND(rt0.c2 COLLATE NOCASE))) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c1, vt1.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c1, rt0.c0;
SELECT rt0.c1, vt1.c1, rt0.c0 FROM rt0, vt1 WHERE ((NOT (((((rt0.c0)OR(vt1.c1)))AND(vt1.c0))))) GROUP BY rt0.c1, vt1.c1, rt0.c0 UNION SELECT ALL rt0.c1, vt1.c1, rt0.c0 FROM rt0, vt1 WHERE ((NOT ((NOT (((((rt0.c0)OR(vt1.c1)))AND(vt1.c0))))))) GROUP BY rt0.c1, vt1.c1, rt0.c0 UNION SELECT ALL rt0.c1, vt1.c1, rt0.c0 FROM rt0, vt1 WHERE ((((NOT (((((rt0.c0)OR(vt1.c1)))AND(vt1.c0))))) ISNULL)) GROUP BY rt0.c1, vt1.c1, rt0.c0;
SELECT rt0.c1, vt1.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c1, rt0.c0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING AVG(GROUP_CONCAT(COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (AVG(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((AVG(GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT vt1.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0;
SELECT ALL vt1.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE (1.03859647E8) UNION ALL SELECT ALL vt1.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((NOT (1.03859647E8))) UNION ALL SELECT vt1.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE (((1.03859647E8) ISNULL));
SELECT vt1.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c1 FROM vt1 WHERE (TYPEOF(vt1.c0)) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((NOT (TYPEOF(vt1.c0)))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE (((TYPEOF(vt1.c0)) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt1 WHERE ('G>)A꒳' COLLATE BINARY) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt1 WHERE ((NOT ('G>)A꒳' COLLATE BINARY))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, vt1 WHERE ((('G>)A꒳' COLLATE BINARY) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MIN(rt0.c2) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MIN(rt0.c2))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MIN(rt0.c2)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MIN(rt0.c2) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MIN(rt0.c2))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MIN(rt0.c2)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL * FROM rt0 NOT INDEXED;
SELECT ALL * FROM rt0 WHERE (((rt0.c1)>(x'')) COLLATE BINARY) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c1)>(x'')) COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c1)>(x'')) COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt0 NOT INDEXED;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (DATETIME(rt0.c1, ((rt0.c1)OR(rt0.c1)), (((('1167761392')OR(rt0.c2)))AND(vt1.c0)))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (DATETIME(rt0.c1, ((rt0.c1)OR(rt0.c1)), (((('1167761392')OR(rt0.c2)))AND(vt1.c0)))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((DATETIME(rt0.c1, ((rt0.c1)OR(rt0.c1)), (((('1167761392')OR(rt0.c2)))AND(vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (CAST((rt0.c1 IN ()) AS NUMERIC)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CAST((rt0.c1 IN ()) AS NUMERIC)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((CAST((rt0.c1 IN ()) AS NUMERIC)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING CASE WHEN CAST(COUNT(*) AS BLOB) THEN rt0.c2 END UNION ALL SELECT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING (NOT (CASE WHEN CAST(COUNT(*) AS BLOB) THEN rt0.c2 END)) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING ((CASE WHEN CAST(COUNT(*) AS BLOB) THEN rt0.c2 END) ISNULL);
SELECT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING CASE WHEN CAST(COUNT(*) AS BLOB) THEN rt0.c2 END UNION ALL SELECT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING (NOT (CASE WHEN CAST(COUNT(*) AS BLOB) THEN rt0.c2 END)) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING ((CASE WHEN CAST(COUNT(*) AS BLOB) THEN rt0.c2 END) ISNULL);
SELECT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0;
SELECT * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE ((~ (((vt1.c1) ISNULL)))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT ((~ (((vt1.c1) ISNULL)))))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((((~ (((vt1.c1) ISNULL)))) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE ((~ ((((0.4599130802286321, rt0.c1, rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, vt1.c1, vt1.c0, 0.5087108571779897, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c1, vt1.c1, vt1.c1)))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT ((~ ((((0.4599130802286321, rt0.c1, rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, vt1.c1, vt1.c0, 0.5087108571779897, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c1, vt1.c1, vt1.c1)))))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((((~ ((((0.4599130802286321, rt0.c1, rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, vt1.c1, vt1.c0, 0.5087108571779897, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c1, vt1.c1, vt1.c1)))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((((x'')GLOB(rt0.c1))) NOTNULL)) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((((x'')GLOB(rt0.c1))) NOTNULL)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((((((x'')GLOB(rt0.c1))) NOTNULL)) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0 HAVING AVG(LIKE(COUNT(rt0.c0), rt0.c2)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0 HAVING (NOT (AVG(LIKE(COUNT(rt0.c0), rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c1, vt1.c0 HAVING ((AVG(LIKE(COUNT(rt0.c0), rt0.c2))) ISNULL);
SELECT ALL * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE (CASE 0xffffffffdc83bf3b  WHEN (NOT (rt0.c2)) THEN 0.9477600496966854 WHEN ((vt1.c1)AND(vt1.c0)) THEN rt0.c2 WHEN rt0.c1 THEN CAST(rt0.c2 AS TEXT) END) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (CASE 0Xffffffffdc83bf3b  WHEN (NOT (rt0.c2)) THEN 0.9477600496966854 WHEN ((vt1.c1)AND(vt1.c0)) THEN rt0.c2 WHEN rt0.c1 THEN CAST(rt0.c2 AS TEXT) END))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((CASE 0xffffffffdc83bf3b  WHEN (NOT (rt0.c2)) THEN 0.9477600496966854 WHEN ((vt1.c1)AND(vt1.c0)) THEN rt0.c2 WHEN rt0.c1 THEN CAST(rt0.c2 AS TEXT) END) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, vt1.c1, vt1.c0 FROM vt1 INNER JOIN rt0 ON CASE WHEN ((x'') BETWEEN (rt0.c0) AND (NULL)) THEN x'' END;
SELECT DISTINCT rt0.c1, rt0.c2, vt1.c1, vt1.c0 FROM vt1 INNER JOIN rt0 ON CASE WHEN ((x'') BETWEEN (rt0.c0) AND (NULL)) THEN x'' END WHERE ((- ((NOT (rt0.c1))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt1.c1, vt1.c0 FROM vt1 NOT INDEXED INNER JOIN rt0 ON CASE WHEN ((x'') BETWEEN (rt0.c0) AND (NULL)) THEN x'' END WHERE ((NOT ((- ((NOT (rt0.c1))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt1.c1, vt1.c0 FROM vt1 INNER JOIN rt0 ON CASE WHEN ((x'') BETWEEN (rt0.c0) AND (NULL)) THEN x'' END WHERE ((((- ((NOT (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, vt1.c1, vt1.c0 FROM vt1 INNER JOIN rt0 ON CASE WHEN ((x'') BETWEEN (rt0.c0) AND (NULL)) THEN x'' END;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 WHERE (((((((((vt1.c0 COLLATE NOCASE)AND((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((858416009))))))OR(((vt1.c1)-(vt1.c1)))))AND(((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)))))OR((('') ISNULL)))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT (((((((((vt1.c0 COLLATE NOCASE)AND((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((858416009))))))OR(((vt1.c1)-(vt1.c1)))))AND(((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)))))OR((('') ISNULL)))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE (((((((((((vt1.c0 COLLATE NOCASE)AND((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((858416009))))))OR(((vt1.c1)-(vt1.c1)))))AND(((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)))))OR((('') ISNULL)))) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING SUM(((rt0.c0)<=(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (SUM(((rt0.c0)<=(COUNT(*)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((SUM(((rt0.c0)<=(COUNT(*))))) ISNULL);
SELECT * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (((CASE rt0.c0  WHEN x'1f97' THEN rt0.c1 END) NOTNULL)) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (((CASE rt0.c0  WHEN x'1f97' THEN rt0.c1 END) NOTNULL)))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((((CASE rt0.c0  WHEN x'1f97' THEN rt0.c1 END) NOTNULL)) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE ((vt1.c0)+(vt1.c1))  WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(0.5660068281458757)) THEN NULL WHEN CAST(vt1.c1 AS REAL) THEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END WHEN ((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)) THEN vt1.c1 COLLATE RTRIM END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE ((vt1.c0)+(vt1.c1))  WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(0.5660068281458757)) THEN NULL WHEN CAST(vt1.c1 AS REAL) THEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END WHEN ((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)) THEN vt1.c1 COLLATE RTRIM END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE ((vt1.c0)+(vt1.c1))  WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(0.5660068281458757)) THEN NULL WHEN CAST(vt1.c1 AS REAL) THEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END WHEN ((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)) THEN vt1.c1 COLLATE RTRIM END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c1, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c2, rt0.c0, rt0.c1;
SELECT vt1.c1, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c2, rt0.c0, rt0.c1 HAVING COUNT(AVG(AVG(COUNT(MAX(COUNT(*))))) COLLATE RTRIM) UNION ALL SELECT ALL vt1.c1, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (COUNT(AVG(AVG(COUNT(MAX(COUNT(*))))) COLLATE RTRIM))) UNION ALL SELECT vt1.c1, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c2, rt0.c0, rt0.c1 HAVING ((COUNT(AVG(AVG(COUNT(MAX(COUNT(*))))) COLLATE RTRIM)) ISNULL);
SELECT ALL vt1.c1, rt0.c2, vt1.c0 FROM vt1, rt0;
SELECT vt1.c1, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c0)) IN ())) UNION ALL SELECT vt1.c1, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE ((NOT ((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c0)) IN ())))) UNION ALL SELECT vt1.c1, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c0)) IN ())) ISNULL));
SELECT ALL vt1.c1, rt0.c2, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c2 FROM rt0, vt1 WHERE (((((HEX(rt0.c0))OR(((rt0.c0)||(rt0.c0)))))AND((rt0.c2 IN ())))) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt1 WHERE ((NOT (((((HEX(rt0.c0))OR(((rt0.c0)||(rt0.c0)))))AND((rt0.c2 IN ())))))) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt1 WHERE (((((((HEX(rt0.c0))OR(((rt0.c0)||(rt0.c0)))))AND((rt0.c2 IN ())))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0, vt1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (((NOT (vt1.c0)) IN ())) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (((NOT (vt1.c0)) IN ())))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((((NOT (vt1.c0)) IN ())) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING TOTAL(COUNT(MAX('-702902469'))) UNION ALL SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING (NOT (TOTAL(COUNT(MAX('-702902469'))))) UNION ALL SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING ((TOTAL(COUNT(MAX('-702902469')))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN ('324345589') AND (rt0.c1))) BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c0)) AND (((rt0.c2) IS FALSE)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN ('324345589') AND (rt0.c1))) BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c0)) AND (((rt0.c2) IS FALSE)))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c1) NOT BETWEEN ('324345589') AND (rt0.c1))) BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c0)) AND (((rt0.c2) IS FALSE)))) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT vt1.c1, rt0.c1, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (((rt0.c0) BETWEEN ('-1248308076') AND (rt0.c2)) IN ());
SELECT DISTINCT vt1.c1, rt0.c1, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (((rt0.c0) BETWEEN ('-1248308076') AND (rt0.c2)) IN ()) WHERE (((((((rt0.c1) NOT NULL))OR(((((0.44100388945917757)AND(vt1.c0)))OR(rt0.c1)))))AND(rt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT vt1.c1, rt0.c1, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (((rt0.c0) BETWEEN ('-1248308076') AND (rt0.c2)) IN ()) WHERE ((NOT (((((((rt0.c1) NOT NULL))OR(((((0.44100388945917757)AND(vt1.c0)))OR(rt0.c1)))))AND(rt0.c2 COLLATE BINARY))))) UNION SELECT DISTINCT vt1.c1, rt0.c1, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (((rt0.c0) BETWEEN ('-1248308076') AND (rt0.c2)) IN ()) WHERE (((((((((rt0.c1) NOT NULL))OR(((((0.44100388945917757)AND(vt1.c0)))OR(rt0.c1)))))AND(rt0.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt1.c1, rt0.c1, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (((rt0.c0) BETWEEN ('-1248308076') AND (rt0.c2)) IN ());
SELECT ALL vt1.c0, rt0.c0, rt0.c1, vt1.c1, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1, vt1.c1, rt0.c2;
SELECT vt1.c0, rt0.c0, rt0.c1, vt1.c1, rt0.c2 FROM vt1, rt0 WHERE (((json(vt1.c1))IS(rt0.c1))) GROUP BY vt1.c0, rt0.c0, rt0.c1, vt1.c1, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c1, vt1.c1, rt0.c2 FROM vt1, rt0 WHERE ((NOT (((json(vt1.c1))IS(rt0.c1))))) GROUP BY vt1.c0, rt0.c0, rt0.c1, vt1.c1, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c1, vt1.c1, rt0.c2 FROM vt1, rt0 WHERE (((((json(vt1.c1))IS(rt0.c1))) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c1, vt1.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c0, rt0.c1, vt1.c1, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1, vt1.c1, rt0.c2;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((vt1.c0)LIKE((vt1.c1 IN ()))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (((vt1.c0)LIKE((vt1.c1 IN ()))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((((vt1.c0)LIKE((vt1.c1 IN ())))) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((vt1.c0)LIKE((vt1.c1 IN ()))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (((vt1.c0)LIKE((vt1.c1 IN ()))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((((vt1.c0)LIKE((vt1.c1 IN ())))) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL rt0.c2, vt1.c1 FROM vt1, rt0;
SELECT rt0.c2, vt1.c1 FROM vt1, rt0 WHERE ((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN (((((rt0.c0)OR(NULL)))AND(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, vt1.c1 FROM vt1, rt0 WHERE ((NOT ((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN (((((rt0.c0)OR(NULL)))AND(rt0.c1))))))) UNION ALL SELECT rt0.c2, vt1.c1 FROM vt1, rt0 WHERE ((((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN (((((rt0.c0)OR(NULL)))AND(rt0.c1))))) ISNULL));
SELECT ALL rt0.c2, vt1.c1 FROM vt1, rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (('-1184647800' IN ())) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (('-1184647800' IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((('-1184647800' IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c1) IS TRUE)))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((NOT (((vt1.c1) IS TRUE)))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((((NOT (((vt1.c1) IS TRUE)))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL rt0.c0, vt1.c1, vt1.c0, rt0.c2, rt0.c1 FROM vt1 INNER JOIN rt0 ON ((- (vt1.c0)) IN ()) GROUP BY rt0.c0, vt1.c1, vt1.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, vt1.c1, vt1.c0, rt0.c2, rt0.c1 FROM vt1 INNER JOIN rt0 ON ((- (vt1.c0)) IN ()) GROUP BY rt0.c0, vt1.c1, vt1.c0, rt0.c2, rt0.c1 HAVING CAST(CASE WHEN rt0.c2 THEN COUNT(*) WHEN COUNT(MAX(rt0.c1)) THEN rt0.c0 WHEN rt0.c2 THEN '-1152501684' ELSE TOTAL(AVG(SUM(COUNT(rt0.c1)))) END AS TEXT) UNION ALL SELECT ALL rt0.c0, vt1.c1, vt1.c0, rt0.c2, rt0.c1 FROM vt1 INNER JOIN rt0 ON ((- (vt1.c0)) IN ()) GROUP BY rt0.c0, vt1.c1, vt1.c0, rt0.c2, rt0.c1 HAVING (NOT (CAST(CASE WHEN rt0.c2 THEN COUNT(*) WHEN COUNT(MAX(rt0.c1)) THEN rt0.c0 WHEN rt0.c2 THEN '-1152501684' ELSE TOTAL(AVG(SUM(COUNT(rt0.c1)))) END AS TEXT))) UNION ALL SELECT rt0.c0, vt1.c1, vt1.c0, rt0.c2, rt0.c1 FROM vt1 INNER JOIN rt0 ON ((- (vt1.c0)) IN ()) GROUP BY rt0.c0, vt1.c1, vt1.c0, rt0.c2, rt0.c1 HAVING ((CAST(CASE WHEN rt0.c2 THEN COUNT(*) WHEN COUNT(MAX(rt0.c1)) THEN rt0.c0 WHEN rt0.c2 THEN '-1152501684' ELSE TOTAL(AVG(SUM(COUNT(rt0.c1)))) END AS TEXT)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM vt1, rt0;
SELECT ALL rt0.c2, rt0.c0 FROM vt1, rt0 WHERE (CAST(rt0.c0 AS TEXT) COLLATE NOCASE) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((NOT (CAST(rt0.c0 AS TEXT) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM vt1, rt0 WHERE (((CAST(rt0.c0 AS TEXT) COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON (((('-1352508390')>=(rt0.c2))) BETWEEN ((((vt1.c1))!=((rt0.c1)))) AND (vt1.c0));
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON (((('-1352508390')>=(rt0.c2))) BETWEEN ((((vt1.c1))<>((rt0.c1)))) AND (vt1.c0)) WHERE (CAST('⒭.' AS BLOB)) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON (((('-1352508390')>=(rt0.c2))) BETWEEN ((((vt1.c1))!=((rt0.c1)))) AND (vt1.c0)) WHERE ((NOT (CAST('⒭.' AS BLOB)))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON (((('-1352508390')>=(rt0.c2))) BETWEEN ((((vt1.c1))<>((rt0.c1)))) AND (vt1.c0)) WHERE (((CAST('⒭.' AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON (((('-1352508390')>=(rt0.c2))) BETWEEN ((((vt1.c1))!=((rt0.c1)))) AND (vt1.c0));
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((((((vt1.c0)%(vt1.c0)), ((vt1.c0)<(vt1.c0)), ((((vt1.c0)OR(vt1.c1)))OR(vt1.c0))))<((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)), vt1.c0, CAST(vt1.c1 AS NUMERIC))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT ((((((vt1.c0)%(vt1.c0)), ((vt1.c0)<(vt1.c0)), ((((vt1.c0)OR(vt1.c1)))OR(vt1.c0))))<((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)), vt1.c0, CAST(vt1.c1 AS NUMERIC))))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((((((((vt1.c0)%(vt1.c0)), ((vt1.c0)<(vt1.c0)), ((((vt1.c0)OR(vt1.c1)))OR(vt1.c0))))<((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)), vt1.c0, CAST(vt1.c1 AS NUMERIC))))) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING AVG(((((((((GROUP_CONCAT(TOTAL(COUNT(COUNT(rt0.c2)))))AND(COUNT(*))))AND(TOTAL(SUM(SUM(vt1.c1))))))AND(rt0.c1)))OR(vt1.c0))) UNION ALL SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING (NOT (AVG(((((((((GROUP_CONCAT(TOTAL(COUNT(COUNT(rt0.c2)))))AND(COUNT(*))))AND(TOTAL(SUM(SUM(vt1.c1))))))AND(rt0.c1)))OR(vt1.c0))))) UNION ALL SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING ((AVG(((((((((GROUP_CONCAT(TOTAL(COUNT(COUNT(rt0.c2)))))AND(COUNT(*))))AND(TOTAL(SUM(SUM(vt1.c1))))))AND(rt0.c1)))OR(vt1.c0)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c2)<=(((rt0.c0) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c2)<=(((rt0.c0) NOT NULL)))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c2)<=(((rt0.c0) NOT NULL)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c1 FROM vt1 WHERE (((((vt1.c0)OR(vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((NOT (((((vt1.c0)OR(vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))))))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))))) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT vt1.c1, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c2, rt0.c1;
SELECT vt1.c1, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((('Lt0v' COLLATE NOCASE) NOTNULL)) GROUP BY vt1.c1, rt0.c2, rt0.c1 UNION SELECT vt1.c1, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((NOT ((('Lt0v' COLLATE NOCASE) NOTNULL)))) GROUP BY vt1.c1, rt0.c2, rt0.c1 UNION SELECT vt1.c1, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((((('Lt0v' COLLATE NOCASE) NOTNULL)) ISNULL)) GROUP BY vt1.c1, rt0.c2, rt0.c1;
SELECT vt1.c1, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c2, rt0.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING LIKELY(GROUP_CONCAT(vt1.c1)) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (LIKELY(GROUP_CONCAT(vt1.c1)))) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((LIKELY(GROUP_CONCAT(vt1.c1))) ISNULL);
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING LIKELY(GROUP_CONCAT(vt1.c1)) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (LIKELY(GROUP_CONCAT(vt1.c1)))) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((LIKELY(GROUP_CONCAT(vt1.c1))) ISNULL);
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL rt0.c1, rt0.c2, vt1.c1, vt1.c0, rt0.c0 FROM rt0, vt1;
SELECT ALL rt0.c1, rt0.c2, vt1.c1, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE (vt1.c1) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt1.c1, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((NOT (vt1.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt1.c1, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE (((vt1.c1) ISNULL));
SELECT ALL rt0.c1, rt0.c2, vt1.c1, vt1.c0, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c1)OR(vt1.c0))) ISNULL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c1)OR(vt1.c0))) ISNULL)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c1)OR(vt1.c0))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((+ (rt0.c0))) IS TRUE)) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((+ (rt0.c0))) IS TRUE)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((+ (rt0.c0))) IS TRUE)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt1.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (+ ((NULL IN (rt0.c2)))) GROUP BY vt1.c0, rt0.c0;
SELECT vt1.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (+ ((NULL IN (rt0.c2)))) GROUP BY vt1.c0, rt0.c0 HAVING (((vt1.c0)!=(rt0.c2)) IN ()) UNION ALL SELECT ALL vt1.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (+ ((NULL IN (rt0.c2)))) GROUP BY vt1.c0, rt0.c0 HAVING (NOT ((((vt1.c0)<>(rt0.c2)) IN ()))) UNION ALL SELECT ALL vt1.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (+ ((NULL IN (rt0.c2)))) GROUP BY vt1.c0, rt0.c0 HAVING (((((vt1.c0)<>(rt0.c2)) IN ())) ISNULL);
SELECT ALL vt1.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (+ ((NULL IN (rt0.c2)))) GROUP BY vt1.c0, rt0.c0;
SELECT vt1.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (+ ((NULL IN (rt0.c2)))) GROUP BY vt1.c0, rt0.c0 HAVING (((vt1.c0)!=(rt0.c2)) IN ()) UNION ALL SELECT ALL vt1.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (+ ((NULL IN (rt0.c2)))) GROUP BY vt1.c0, rt0.c0 HAVING (NOT ((((vt1.c0)<>(rt0.c2)) IN ()))) UNION ALL SELECT ALL vt1.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (+ ((NULL IN (rt0.c2)))) GROUP BY vt1.c0, rt0.c0 HAVING (((((vt1.c0)<>(rt0.c2)) IN ())) ISNULL);
SELECT ALL vt1.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (+ ((NULL IN (rt0.c2)))) GROUP BY vt1.c0, rt0.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))=(CASE WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))==(CASE WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))==(CASE WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c1, rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN vt1;
SELECT DISTINCT vt1.c1, rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN vt1 WHERE (((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0))) BETWEEN ((NOT (rt0.c2))) AND ((NOT (rt0.c2))))) UNION SELECT DISTINCT vt1.c1, rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN vt1 WHERE ((NOT (((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0))) BETWEEN ((NOT (rt0.c2))) AND ((NOT (rt0.c2))))))) UNION SELECT DISTINCT vt1.c1, rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN vt1 WHERE (((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0))) BETWEEN ((NOT (rt0.c2))) AND ((NOT (rt0.c2))))) ISNULL));
SELECT DISTINCT vt1.c1, rt0.c1, rt0.c0 FROM rt0 NATURAL JOIN vt1;
SELECT rt0.c2, vt1.c1, vt1.c0, rt0.c1, rt0.c0 FROM vt1 CROSS JOIN rt0 ON json_extract(CAST(NULL AS INTEGER), CASE WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c0 THEN rt0.c0 WHEN x'18c9' THEN rt0.c1 WHEN vt1.c1 THEN rt0.c2 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END) GROUP BY rt0.c2, vt1.c1, vt1.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, vt1.c1, vt1.c0, rt0.c1, rt0.c0 FROM vt1 CROSS JOIN rt0 ON json_extract(CAST(NULL AS INTEGER), CASE WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c0 THEN rt0.c0 WHEN x'18c9' THEN rt0.c1 WHEN vt1.c1 THEN rt0.c2 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END) WHERE ((- (rt0.c2 COLLATE BINARY))) GROUP BY rt0.c2, vt1.c1, vt1.c0, rt0.c1, rt0.c0 UNION SELECT rt0.c2, vt1.c1, vt1.c0, rt0.c1, rt0.c0 FROM vt1 CROSS JOIN rt0 ON json_extract(CAST(NULL AS INTEGER), CASE WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c0 THEN rt0.c0 WHEN x'18c9' THEN rt0.c1 WHEN vt1.c1 THEN rt0.c2 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END) WHERE ((NOT ((- (rt0.c2 COLLATE BINARY))))) GROUP BY rt0.c2, vt1.c1, vt1.c0, rt0.c1, rt0.c0 UNION SELECT rt0.c2, vt1.c1, vt1.c0, rt0.c1, rt0.c0 FROM vt1 CROSS JOIN rt0 ON json_extract(CAST(NULL AS INTEGER), CASE WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c0 THEN rt0.c0 WHEN x'18c9' THEN rt0.c1 WHEN vt1.c1 THEN rt0.c2 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END) WHERE ((((- (rt0.c2 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c2, vt1.c1, vt1.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, vt1.c1, vt1.c0, rt0.c1, rt0.c0 FROM vt1 CROSS JOIN rt0 ON json_extract(CAST(NULL AS INTEGER), CASE WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c0 THEN rt0.c0 WHEN x'18c9' THEN rt0.c1 WHEN vt1.c1 THEN rt0.c2 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END) GROUP BY rt0.c2, vt1.c1, vt1.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c1, vt1.c0 FROM vt1 INNER JOIN rt0 ON ((+ (rt0.c0)) IN ()) GROUP BY rt0.c1, vt1.c0;
SELECT rt0.c1, vt1.c0 FROM vt1 INNER JOIN rt0 ON ((+ (rt0.c0)) IN ()) GROUP BY rt0.c1, vt1.c0 HAVING GROUP_CONCAT('') UNION ALL SELECT rt0.c1, vt1.c0 FROM vt1 INNER JOIN rt0 ON ((+ (rt0.c0)) IN ()) GROUP BY rt0.c1, vt1.c0 HAVING (NOT (GROUP_CONCAT(''))) UNION ALL SELECT ALL rt0.c1, vt1.c0 FROM vt1 INNER JOIN rt0 ON ((+ (rt0.c0)) IN ()) GROUP BY rt0.c1, vt1.c0 HAVING ((GROUP_CONCAT('')) ISNULL);
SELECT ALL rt0.c1, vt1.c0 FROM vt1 INNER JOIN rt0 ON ((+ (rt0.c0)) IN ()) GROUP BY rt0.c1, vt1.c0;
SELECT rt0.c1, vt1.c0 FROM vt1 INNER JOIN rt0 ON ((+ (rt0.c0)) IN ()) GROUP BY rt0.c1, vt1.c0 HAVING GROUP_CONCAT('') UNION ALL SELECT rt0.c1, vt1.c0 FROM vt1 INNER JOIN rt0 ON ((+ (rt0.c0)) IN ()) GROUP BY rt0.c1, vt1.c0 HAVING (NOT (GROUP_CONCAT(''))) UNION ALL SELECT ALL rt0.c1, vt1.c0 FROM vt1 INNER JOIN rt0 ON ((+ (rt0.c0)) IN ()) GROUP BY rt0.c1, vt1.c0 HAVING ((GROUP_CONCAT('')) ISNULL);
SELECT ALL rt0.c1, vt1.c0 FROM vt1 INNER JOIN rt0 ON ((+ (rt0.c0)) IN ()) GROUP BY rt0.c1, vt1.c0;
SELECT * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (((((('')AND(rt0.c1)))AND(vt1.c0)) IN ())) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (((((('')AND(rt0.c1)))AND(vt1.c0)) IN ())))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((((((('')AND(rt0.c1)))AND(vt1.c0)) IN ())) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON (~ (((vt1.c0)>(vt1.c0))));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON (~ (((vt1.c0)>(vt1.c0)))) WHERE (json((((rt0.c2))==((rt0.c0))))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON (~ (((vt1.c0)>(vt1.c0)))) WHERE ((NOT (json((((rt0.c2))==((rt0.c0))))))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON (~ (((vt1.c0)>(vt1.c0)))) WHERE (((json((((rt0.c2))==((rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON (~ (((vt1.c0)>(vt1.c0))));
SELECT vt1.c1, rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt1.c1, rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE ((((x'3f5f')) BETWEEN ((((rt0.c1)||(vt1.c0)))) AND (((- (vt1.c1)))))) GROUP BY vt1.c1, rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL vt1.c1, rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT ((((x'3f5f')) BETWEEN ((((rt0.c1)||(vt1.c0)))) AND (((- (vt1.c1)))))))) GROUP BY vt1.c1, rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL vt1.c1, rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE ((((((x'3f5f')) BETWEEN ((((rt0.c1)||(vt1.c0)))) AND (((- (vt1.c1)))))) ISNULL)) GROUP BY vt1.c1, rt0.c2, rt0.c0, rt0.c1;
SELECT vt1.c1, rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c1, rt0.c2, rt0.c0, rt0.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING CASE SUM(vt1.c0)  WHEN ((GROUP_CONCAT(vt1.c1)) NOT BETWEEN (SUM(MIN(AVG(AVG(GROUP_CONCAT(vt1.c0)))))) AND (GROUP_CONCAT(vt1.c0))) THEN COUNT(*) ELSE ((MIN(vt1.c0))GLOB(MIN(x''))) END UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (CASE SUM(vt1.c0)  WHEN ((GROUP_CONCAT(vt1.c1)) NOT BETWEEN (SUM(MIN(AVG(AVG(GROUP_CONCAT(vt1.c0)))))) AND (GROUP_CONCAT(vt1.c0))) THEN COUNT(*) ELSE ((MIN(vt1.c0))GLOB(MIN(x''))) END)) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((CASE SUM(vt1.c0)  WHEN ((GROUP_CONCAT(vt1.c1)) NOT BETWEEN (SUM(MIN(AVG(AVG(GROUP_CONCAT(vt1.c0)))))) AND (GROUP_CONCAT(vt1.c0))) THEN COUNT(*) ELSE ((MIN(vt1.c0))GLOB(MIN(x''))) END) ISNULL);
SELECT rt0.c2, rt0.c1 FROM vt1 NATURAL JOIN rt0;
SELECT rt0.c2, rt0.c1 FROM vt1 NATURAL JOIN rt0 WHERE ((('+DH_-z') NOT BETWEEN (((vt1.c1) ISNULL)) AND (rt0.c1 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM vt1 NATURAL JOIN rt0 WHERE ((NOT ((('+DH_-z') NOT BETWEEN (((vt1.c1) ISNULL)) AND (rt0.c1 COLLATE NOCASE))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM vt1 NATURAL JOIN rt0 WHERE ((((('+DH_-z') NOT BETWEEN (((vt1.c1) ISNULL)) AND (rt0.c1 COLLATE NOCASE))) ISNULL));
SELECT rt0.c2, rt0.c1 FROM vt1 NATURAL JOIN rt0;
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((((((((((~ (vt1.c1)))OR(((vt1.c1)%(vt1.c1)))))AND(json(vt1.c0))))AND(CAST(vt1.c1 AS BLOB))))OR(((((vt1.c1)AND(vt1.c1)))OR(vt1.c0))))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((NOT ((((((((((~ (vt1.c1)))OR(((vt1.c1)%(vt1.c1)))))AND(json(vt1.c0))))AND(CAST(vt1.c1 AS BLOB))))OR(((((vt1.c1)AND(vt1.c1)))OR(vt1.c0))))))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((((((((((((~ (vt1.c1)))OR(((vt1.c1)%(vt1.c1)))))AND(json(vt1.c0))))AND(CAST(vt1.c1 AS BLOB))))OR(((((vt1.c1)AND(vt1.c1)))OR(vt1.c0))))) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))AND(CAST(rt0.c1 AS NUMERIC))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))AND(CAST(rt0.c1 AS NUMERIC))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))AND(CAST(rt0.c1 AS NUMERIC))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING RTRIM(GROUP_CONCAT(vt1.c1)) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (RTRIM(GROUP_CONCAT(vt1.c1)))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((RTRIM(GROUP_CONCAT(vt1.c1))) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING RTRIM(GROUP_CONCAT(vt1.c1)) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (RTRIM(GROUP_CONCAT(vt1.c1)))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((RTRIM(GROUP_CONCAT(vt1.c1))) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (CAST(CAST(rt0.c1 AS TEXT) AS BLOB)) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c1 AS TEXT) AS BLOB)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((CAST(CAST(rt0.c1 AS TEXT) AS BLOB)) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (((((((rt0.c1)AND(rt0.c2)))OR(((rt0.c1)<=(vt1.c0)))))OR((~ (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (((((((rt0.c1)AND(rt0.c2)))OR(((rt0.c1)<=(vt1.c0)))))OR((~ (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((((((((rt0.c1)AND(rt0.c2)))OR(((rt0.c1)<=(vt1.c0)))))OR((~ (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))|(((((rt0.c2)AND(rt0.c2)))AND(rt0.c1))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))|(((((rt0.c2)AND(rt0.c2)))AND(rt0.c1))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))|(((((rt0.c2)AND(rt0.c2)))AND(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt1.c1, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c1, rt0.c0, vt1.c0;
SELECT rt0.c1, vt1.c1, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c1, rt0.c0, vt1.c0 HAVING TOTAL(GROUP_CONCAT(MAX(SUM(COUNT(*))))) UNION ALL SELECT ALL rt0.c1, vt1.c1, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c1, rt0.c0, vt1.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(MAX(SUM(COUNT(*))))))) UNION ALL SELECT rt0.c1, vt1.c1, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c1, rt0.c0, vt1.c0 HAVING ((TOTAL(GROUP_CONCAT(MAX(SUM(COUNT(*)))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(CAST(0xffffffffdb0d8f94 AS INTEGER) AS REAL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST(CAST(0xffffffffdb0d8f94 AS INTEGER) AS REAL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(CAST(0xffffffffdb0d8f94 AS INTEGER) AS REAL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0)<=(vt1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)<=(vt1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0)<=(vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((((rt0.c1))<=((CAST(rt0.c2 AS BLOB))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1))<=((CAST(rt0.c2 AS BLOB))))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((((((rt0.c1))<=((CAST(rt0.c2 AS BLOB))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(MIN(vt1.c1)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(MIN(vt1.c1)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(MIN(vt1.c1))) ISNULL);
SELECT ALL * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE ((rt0.c0 IN ()) COLLATE BINARY) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT ((rt0.c0 IN ()) COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c0 IN ()) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (vt1.c1) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c1))) UNION SELECT DISTINCT * FROM vt1 WHERE (((vt1.c1) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (SQLITE_SOURCE_ID()) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (SQLITE_SOURCE_ID()))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((SQLITE_SOURCE_ID()) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING GROUP_CONCAT(MIN(rt0.c1)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (GROUP_CONCAT(MIN(rt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((GROUP_CONCAT(MIN(rt0.c1))) ISNULL);
SELECT * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c2 IN ()))IS((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((0x6cd6dce2)))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT ((((rt0.c2 IN ()))IS((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((0X6cd6dce2)))))))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((((((rt0.c2 IN ()))IS((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((0x6cd6dce2)))))) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((((vt1.c1)<(NULL)) IN (((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((((vt1.c1)<(NULL)) IN (((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((((vt1.c1)<(NULL)) IN (((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 WHERE ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) IN ())) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((NOT ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) IN ())))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) IN ())) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(SUM(GROUP_CONCAT(COUNT(TOTAL(rt0.c0)))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(SUM(GROUP_CONCAT(COUNT(TOTAL(rt0.c0)))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(SUM(GROUP_CONCAT(COUNT(TOTAL(rt0.c0))))))) ISNULL);
SELECT * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE ((~ (CASE WHEN vt1.c1 THEN rt0.c0 END))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT ((~ (CASE WHEN vt1.c1 THEN rt0.c0 END))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((((~ (CASE WHEN vt1.c1 THEN rt0.c0 END))) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((((((('2056617977')OR(rt0.c2)))OR(NULL))))<((0.8849305773045624)))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((((((('2056617977')OR(rt0.c2)))OR(NULL))))<((0.8849305773045624)))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((((((('2056617977')OR(rt0.c2)))OR(NULL))))<((0.8849305773045624)))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM)IS NOT(DATETIME(rt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c2)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE RTRIM)IS NOT(DATETIME(rt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c2)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((rt0.c2 COLLATE RTRIM)IS NOT(DATETIME(rt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c2)))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING CHANGES() UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (CHANGES())) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((CHANGES()) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING CHANGES() UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (CHANGES())) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((CHANGES()) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL MAX(rt0.c1) FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0;
SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (rt0.c2) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (((rt0.c2) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1)GLOB(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((NOT (((rt0.c1)GLOB(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((NOT (((rt0.c1)GLOB(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, vt1.c1, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) NOTNULL) GROUP BY rt0.c1, vt1.c1, vt1.c0;
SELECT ALL rt0.c1, vt1.c1, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) NOTNULL) WHERE (((((rt0.c2)>=(rt0.c2))) NOT NULL)) GROUP BY rt0.c1, vt1.c1, vt1.c0 UNION SELECT ALL rt0.c1, vt1.c1, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) NOTNULL) WHERE ((NOT (((((rt0.c2)>=(rt0.c2))) NOT NULL)))) GROUP BY rt0.c1, vt1.c1, vt1.c0 UNION SELECT ALL rt0.c1, vt1.c1, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) NOTNULL) WHERE (((((((rt0.c2)>=(rt0.c2))) NOT NULL)) ISNULL)) GROUP BY rt0.c1, vt1.c1, vt1.c0;
SELECT rt0.c1, vt1.c1, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) NOTNULL) GROUP BY rt0.c1, vt1.c1, vt1.c0;
SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING ((CAST(MAX(vt1.c1) AS INTEGER)) NOT NULL) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING (NOT (((CAST(MAX(vt1.c1) AS INTEGER)) NOT NULL))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING ((((CAST(MAX(vt1.c1) AS INTEGER)) NOT NULL)) ISNULL);
SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING ((CAST(MAX(vt1.c1) AS INTEGER)) NOT NULL) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING (NOT (((CAST(MAX(vt1.c1) AS INTEGER)) NOT NULL))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING ((((CAST(MAX(vt1.c1) AS INTEGER)) NOT NULL)) ISNULL);
SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) BETWEEN (rt0.c0 COLLATE NOCASE) AND (NULL))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS BLOB)) BETWEEN (rt0.c0 COLLATE NOCASE) AND (NULL))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c0 AS BLOB)) BETWEEN (rt0.c0 COLLATE NOCASE) AND (NULL))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((NOT (rt0.c1))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((((NOT (rt0.c1))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ())) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ())))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ())) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 HAVING CAST(rt0.c1 COLLATE BINARY AS REAL) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 HAVING (NOT (CAST(rt0.c1 COLLATE BINARY AS REAL))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 HAVING ((CAST(rt0.c1 COLLATE BINARY AS REAL)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 HAVING CAST(rt0.c1 COLLATE BINARY AS REAL) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 HAVING (NOT (CAST(rt0.c1 COLLATE BINARY AS REAL))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 HAVING ((CAST(rt0.c1 COLLATE BINARY AS REAL)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE (((((~ (rt0.c2)), rt0.c0 COLLATE RTRIM, ((rt0.c2)>=(rt0.c2))))>=((((rt0.c0)&(rt0.c2)), IFNULL(DISTINCT rt0.c1, vt1.c1), rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((NOT (((((~ (rt0.c2)), rt0.c0 COLLATE RTRIM, ((rt0.c2)>=(rt0.c2))))>=((((rt0.c0)&(rt0.c2)), IFNULL(DISTINCT rt0.c1, vt1.c1), rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE (((((((~ (rt0.c2)), rt0.c0 COLLATE RTRIM, ((rt0.c2)>=(rt0.c2))))>=((((rt0.c0)&(rt0.c2)), IFNULL(DISTINCT rt0.c1, vt1.c1), rt0.c0)))) ISNULL));
SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END) IS FALSE)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END) IS FALSE)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)))OR(((vt1.c1) ISNULL))))AND(((vt1.c0)-(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)))OR(((vt1.c1) ISNULL))))AND(((vt1.c0)-(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)))OR(((vt1.c1) ISNULL))))AND(((vt1.c0)-(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING 0X1efcc4a9 UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (0X1efcc4a9)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((0x1efcc4a9) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING 0X1efcc4a9 UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (0X1efcc4a9)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((0x1efcc4a9) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (CASE vt1.c1  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN (vt1.c0 IN ()) ELSE vt1.c0 COLLATE BINARY END) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CASE vt1.c1  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN (vt1.c0 IN ()) ELSE vt1.c0 COLLATE BINARY END))) UNION ALL SELECT * FROM vt1 WHERE (((CASE vt1.c1  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN (vt1.c0 IN ()) ELSE vt1.c0 COLLATE BINARY END) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE (vt1.c0) UNION SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1;
SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (+ (LAST_INSERT_ROWID())) GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0;
SELECT rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (+ (LAST_INSERT_ROWID())) WHERE ((((rt0.c2 IN (rt0.c2))) BETWEEN (((rt0.c2) IS FALSE)) AND (((rt0.c2) NOT BETWEEN ('0.3724013347494781') AND (vt1.c0))))) GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (+ (LAST_INSERT_ROWID())) WHERE ((NOT ((((rt0.c2 IN (rt0.c2))) BETWEEN (((rt0.c2) IS FALSE)) AND (((rt0.c2) NOT BETWEEN ('0.3724013347494781') AND (vt1.c0))))))) GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0 UNION SELECT rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (+ (LAST_INSERT_ROWID())) WHERE ((((((rt0.c2 IN (rt0.c2))) BETWEEN (((rt0.c2) IS FALSE)) AND (((rt0.c2) NOT BETWEEN ('0.3724013347494781') AND (vt1.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (+ (LAST_INSERT_ROWID())) GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0;
SELECT vt1.c1, rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c2, rt0.c1, vt1.c0, rt0.c0;
SELECT ALL vt1.c1, rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c2, rt0.c1, vt1.c0, rt0.c0 HAVING SUM(CAST(rt0.c1 AS NUMERIC)) UNION ALL SELECT ALL vt1.c1, rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c2, rt0.c1, vt1.c0, rt0.c0 HAVING (NOT (SUM(CAST(rt0.c1 AS NUMERIC)))) UNION ALL SELECT ALL vt1.c1, rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c2, rt0.c1, vt1.c0, rt0.c0 HAVING ((SUM(CAST(rt0.c1 AS NUMERIC))) ISNULL);
SELECT vt1.c1, rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c2, rt0.c1, vt1.c0, rt0.c0;
SELECT ALL vt1.c1, rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c2, rt0.c1, vt1.c0, rt0.c0 HAVING SUM(CAST(rt0.c1 AS NUMERIC)) UNION ALL SELECT ALL vt1.c1, rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c2, rt0.c1, vt1.c0, rt0.c0 HAVING (NOT (SUM(CAST(rt0.c1 AS NUMERIC)))) UNION ALL SELECT ALL vt1.c1, rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c2, rt0.c1, vt1.c0, rt0.c0 HAVING ((SUM(CAST(rt0.c1 AS NUMERIC))) ISNULL);
SELECT vt1.c1, rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c1, rt0.c2, rt0.c1, vt1.c0, rt0.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((0.9256744129178095)<(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((0.9256744129178095)<(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((0.9256744129178095)<(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c2, rt0.c0, vt1.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt1.c1 FROM vt1, rt0 WHERE (((rt0.c2)GLOB(vt1.c1)) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt1.c1 FROM vt1, rt0 WHERE ((NOT (((rt0.c2)GLOB(vt1.c1)) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt1.c1 FROM vt1, rt0 WHERE (((((rt0.c2)GLOB(vt1.c1)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, vt1.c1 FROM vt1, rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (MIN(rt0.c2, rt0.c2) COLLATE RTRIM) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (MIN(rt0.c2, rt0.c2) COLLATE RTRIM))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((MIN(rt0.c2, rt0.c2) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c2, vt1.c0, rt0.c0, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c0, vt1.c1;
SELECT ALL rt0.c2, vt1.c0, rt0.c0, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c0, vt1.c1 HAVING AVG(COUNT(*)) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c0, vt1.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c0, vt1.c1 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c0, vt1.c1 FROM vt1, rt0 NOT INDEXED GROUP BY rt0.c2, vt1.c0, rt0.c0, vt1.c1 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL MIN((~ (x'')) COLLATE BINARY) FROM rt0, vt1;
SELECT ALL rt0.c0 FROM vt1, rt0;
SELECT rt0.c0 FROM vt1, rt0 WHERE (UNLIKELY(((rt0.c0)&(rt0.c1)))) UNION ALL SELECT ALL rt0.c0 FROM vt1, rt0 WHERE ((NOT (UNLIKELY(((rt0.c0)&(rt0.c1)))))) UNION ALL SELECT ALL rt0.c0 FROM vt1, rt0 WHERE (((UNLIKELY(((rt0.c0)&(rt0.c1)))) ISNULL));
SELECT ALL rt0.c0 FROM vt1, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST(((vt1.c1)&(vt1.c0)) AS BLOB)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST(((vt1.c1)&(vt1.c0)) AS BLOB)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST(((vt1.c1)&(vt1.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM vt1, rt0 WHERE (CASE WHEN (+ (vt1.c1)) THEN ((((rt0.c2)AND(x'')))OR(vt1.c1)) END) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((NOT (CASE WHEN (+ (vt1.c1)) THEN ((((rt0.c2)AND(x'')))OR(vt1.c1)) END))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM vt1, rt0 WHERE (((CASE WHEN (+ (vt1.c1)) THEN ((((rt0.c2)AND(x'')))OR(vt1.c1)) END) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((SUM(SUM(rt0.c1))) BETWEEN (MAX(rt0.c1)) AND (CAST(rt0.c2 AS TEXT))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((SUM(SUM(rt0.c1))) BETWEEN (MAX(rt0.c1)) AND (CAST(rt0.c2 AS TEXT))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((SUM(SUM(rt0.c1))) BETWEEN (MAX(rt0.c1)) AND (CAST(rt0.c2 AS TEXT)))) ISNULL);
SELECT ALL rt0.c2 FROM rt0, vt1;
SELECT rt0.c2 FROM rt0, vt1 WHERE (CASE WHEN vt1.c1 THEN rt0.c0 COLLATE BINARY ELSE ((vt1.c0)>>(rt0.c0)) END) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1 WHERE ((NOT (CASE WHEN vt1.c1 THEN rt0.c0 COLLATE BINARY ELSE ((vt1.c0)>>(rt0.c0)) END))) UNION ALL SELECT rt0.c2 FROM rt0, vt1 WHERE (((CASE WHEN vt1.c1 THEN rt0.c0 COLLATE BINARY ELSE ((vt1.c0)>>(rt0.c0)) END) ISNULL));
SELECT ALL rt0.c2 FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (((((vt1.c0)&(vt1.c1))) IS TRUE)) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (((((vt1.c0)&(vt1.c1))) IS TRUE)))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((((((vt1.c0)&(vt1.c1))) IS TRUE)) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1, vt1.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1, vt1.c1;
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1, vt1.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1, vt1.c1 HAVING GROUP_CONCAT(CAST(rt0.c0 AS NUMERIC)) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1, vt1.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1, vt1.c1 HAVING (NOT (GROUP_CONCAT(CAST(rt0.c0 AS NUMERIC)))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1, vt1.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1, vt1.c1 HAVING ((GROUP_CONCAT(CAST(rt0.c0 AS NUMERIC))) ISNULL);
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1, vt1.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1, vt1.c1;
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1, vt1.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1, vt1.c1 HAVING GROUP_CONCAT(CAST(rt0.c0 AS NUMERIC)) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1, vt1.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1, vt1.c1 HAVING (NOT (GROUP_CONCAT(CAST(rt0.c0 AS NUMERIC)))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1, vt1.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1, vt1.c1 HAVING ((GROUP_CONCAT(CAST(rt0.c0 AS NUMERIC))) ISNULL);
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1, vt1.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1, vt1.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0 COLLATE NOCASE)OR(rt0.c1)))OR(CAST(rt0.c2 AS REAL)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0 COLLATE NOCASE)OR(rt0.c1)))OR(CAST(rt0.c2 AS REAL)))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c0 COLLATE NOCASE)OR(rt0.c1)))OR(CAST(rt0.c2 AS REAL)))) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
