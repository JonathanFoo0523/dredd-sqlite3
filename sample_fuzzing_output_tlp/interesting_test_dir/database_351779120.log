-- Time: 2024/06/11 11:11:49
-- Database: database20
-- Database version: 3.40.0
-- seed value: 351779120
PRAGMA cache_size = 50000; -- 11ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
INSERT OR IGNORE INTO rt0(c2) VALUES ('416503498'), ('416503498'), (x''); -- 0ms;
PRAGMA temp.cell_size_check = false; -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 1ms;
ANALYZE; -- 0ms;
ANALYZE; -- 1ms;
REINDEX; -- 0ms;
ANALYZE; -- 1ms;
UPDATE rt0 SET (c0, c1)=(x'9010', x''); -- 1ms;
UPDATE OR IGNORE rt0 SET (c1)=('416503498') WHERE CAST(GLOB(rt0.c2, NULL) AS NUMERIC); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX BINARY; -- 0ms;
PRAGMA soft_heap_limit = 416503498; -- 2ms;
REINDEX; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=''; -- 0ms;
ANALYZE; -- 0ms;
END; -- 0ms;
ANALYZE; -- 10ms;
INSERT OR REPLACE INTO rt0(c0) VALUES (''), ('1781574539'), ('~R'); -- 5ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (x'', '', 0Xffffffff9bf6a300), (1781574539, '1e500', 0.041753592499925385), (x'0fde', '-1678335232', x''); -- 0ms;
REINDEX RTRIM; -- 0ms;
UPDATE OR IGNORE rt0 SET c2='/}', c2=NULL; -- 1ms;
INSERT OR REPLACE INTO rt0(c2, c0) VALUES (0.705198693452854, NULL); -- 2ms;
PRAGMA mmap_size = 4182428444309728801; -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
PRAGMA main.foreign_keys; -- 0ms;
PRAGMA main.locking_mode = NORMAL; -- 0ms;
PRAGMA automatic_index; -- 0ms;
END; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE TEMP VIEW v0(c0) AS SELECT ALL ((((rt0.c2)AND((('2104199147')IS NOT(rt0.c0)))))AND(HEX(DISTINCT rt0.c1))) FROM rt0 WHERE (((((((((((0.041753592499925385) NOTNULL))AND((((0.4230513509175877)) NOT BETWEEN ((4.16503498E8)) AND ((0.8329253885332181))))))OR(CASE '-628763747'  WHEN '*%H(lI' THEN 'X\穕v' END)))AND(((x'81d6') NOT BETWEEN (x'') AND (0.7022982496869111)))))OR(x'7a8d'))); -- 1ms;
UPDATE OR IGNORE rt0 SET c1='70017189' WHERE 0Xffffffff9cbe5492; -- 0ms;
REINDEX BINARY; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (0.4230513509175877, x'', x''); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr2 INSTEAD OF UPDATE OF c0 ON v0 BEGIN UPDATE rt0 SET (c0, c2, c1)=('', x'', 0.14780056117621887);END; -- 0ms;
REINDEX  rt0; -- 0ms;
ANALYZE; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((+ (rt0.c2))) NOT NULL)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((+ (rt0.c2))) NOT NULL)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((((+ (rt0.c2))) NOT NULL)) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (json_object(NULL, ((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)), (rt0.c2 IN ()), ((rt0.c1) IS FALSE))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (json_object(NULL, ((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)), (rt0.c2 IN ()), ((rt0.c1) IS FALSE))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((json_object(NULL, ((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)), (rt0.c2 IN ()), ((rt0.c1) IS FALSE))) ISNULL));
SELECT rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 WHERE (rt0.c1) GROUP BY rt0.c0, v0.c0, rt0.c1 UNION SELECT rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c0, v0.c0, rt0.c1 UNION SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT SUM(((((((x'')AND(v0.c0)))AND(rt0.c1))) NOTNULL)) FROM rt0, v0 ORDER BY '-1445729954';
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (-1.445729954E9) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (-1.445729954E9))) UNION ALL SELECT * FROM v0, rt0 WHERE (((-1.445729954E9) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((((+ (rt0.c1))) IS FALSE)) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((((+ (rt0.c1))) IS FALSE)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((((+ (rt0.c1))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (ABS(DISTINCT (((v0.c0))<=((v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (ABS(DISTINCT (((v0.c0))<=((v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((ABS(DISTINCT (((v0.c0))<=((v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING COUNT(((((rt0.c1)OR(v0.c0)))OR(SUM(rt0.c2)))) UNION ALL SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (NOT (COUNT(((((rt0.c1)OR(v0.c0)))OR(SUM(rt0.c2)))))) UNION ALL SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING ((COUNT(((((rt0.c1)OR(v0.c0)))OR(SUM(rt0.c2))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) IS FALSE))>=(((rt0.c0)==(rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c2) IS FALSE))>=(((rt0.c0)=(rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c2) IS FALSE))>=(((rt0.c0)==(rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((NULL)OR(v0.c0)))<(v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((NULL)OR(v0.c0)))<(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((NULL)OR(v0.c0)))<(v0.c0))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c2 FROM rt0, v0 WHERE (ABS(((rt0.c2)<=(rt0.c0)))) GROUP BY v0.c0, rt0.c2 UNION SELECT v0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT (ABS(((rt0.c2)<=(rt0.c0)))))) GROUP BY v0.c0, rt0.c2 UNION SELECT v0.c0, rt0.c2 FROM rt0, v0 WHERE (((ABS(((rt0.c2)<=(rt0.c0)))) ISNULL)) GROUP BY v0.c0, rt0.c2;
SELECT v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2;
SELECT rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c1 HAVING ((SUM(AVG(GROUP_CONCAT(AVG(rt0.c1)))))>(CAST(rt0.c0 AS INTEGER))) UNION ALL SELECT rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c1 HAVING (NOT (((SUM(AVG(GROUP_CONCAT(AVG(rt0.c1)))))>(CAST(rt0.c0 AS INTEGER))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c1 HAVING ((((SUM(AVG(GROUP_CONCAT(AVG(rt0.c1)))))>(CAST(rt0.c0 AS INTEGER)))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 WHERE (((CAST(v0.c0 AS TEXT))|('콱2S\r咒''KR'))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 WHERE ((NOT (((CAST(v0.c0 AS TEXT))|('콱2S\r咒''KR'))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 WHERE (((((CAST(v0.c0 AS TEXT))|('콱2S\r咒''KR'))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 NOT INDEXED WHERE (((((((v0.c0)/(rt0.c2)))AND(((rt0.c2)=(rt0.c0)))))OR(((rt0.c1)<<(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((((v0.c0)/(rt0.c2)))AND(((rt0.c2)==(rt0.c0)))))OR(((rt0.c1)<<(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((((v0.c0)/(rt0.c2)))AND(((rt0.c2)=(rt0.c0)))))OR(((rt0.c1)<<(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ('-503894006') GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ('-503894006'))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((('-503894006') ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING 'T&' UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT ('T&')) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (('T&') ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING 'T&' UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT ('T&')) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (('T&') ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT * FROM v0 NOT INDEXED, rt0;
SELECT * FROM v0, rt0 WHERE ('EX') UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT ('EX'))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((('EX') ISNULL));
SELECT * FROM v0 NOT INDEXED, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2 IN ()))=((((rt0.c2))>=((rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2 IN ()))==((((rt0.c2))>=((rt0.c1)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2 IN ()))==((((rt0.c2))>=((rt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c2)))AND(NULL)))|(rt0.c1 COLLATE NOCASE))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c2)AND(rt0.c2)))AND(NULL)))|(rt0.c1 COLLATE NOCASE))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((rt0.c2)AND(rt0.c2)))AND(NULL)))|(rt0.c1 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((((v0.c0)AND(v0.c0)))AND(rt0.c0)) IN ()) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((((((v0.c0)AND(v0.c0)))AND(rt0.c0)) IN ()))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((((((v0.c0)AND(v0.c0)))AND(rt0.c0)) IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((((v0.c0)AND(v0.c0)))AND(rt0.c0)) IN ()) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((((((v0.c0)AND(v0.c0)))AND(rt0.c0)) IN ()))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((((((v0.c0)AND(v0.c0)))AND(rt0.c0)) IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE ((((((((((((rt0.c0))<=((v0.c0))))AND(((v0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))AND(ROUND(v0.c0, ''))))AND(rt0.c2)))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT ((((((((((((rt0.c0))<=((v0.c0))))AND(((v0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))AND(ROUND(v0.c0, ''))))AND(rt0.c2)))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((((((((((((((rt0.c0))<=((v0.c0))))AND(((v0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))AND(ROUND(v0.c0, ''))))AND(rt0.c2)))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT rt0.c1, v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (('1378766313')!=((+ (-1.545547919E9))));
SELECT DISTINCT rt0.c1, v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (('1378766313')<>((+ (-1.545547919E9)))) WHERE ('rsok' COLLATE BINARY) UNION SELECT DISTINCT rt0.c1, v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (('1378766313')!=((+ (-1.545547919E9)))) WHERE ((NOT ('rsok' COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1, v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (('1378766313')<>((+ (-1.545547919E9)))) WHERE ((('rsok' COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (('1378766313')!=((+ (-1.545547919E9))));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0 COLLATE RTRIM) IS FALSE)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE RTRIM) IS FALSE)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE RTRIM) IS FALSE)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0, v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON ((((NULL)!=(v0.c0)))*('AW洩')) GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON ((((NULL)<>(v0.c0)))*('AW洩')) GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING ((((((((CASE SUM(COUNT(*))  WHEN TOTAL(AVG(COUNT(*))) THEN MIN(v0.c0) END)AND(AVG(''))))AND((MAX(rt0.c2) IN ()))))AND(GROUP_CONCAT(rt0.c2))))AND(COUNT(AVG(rt0.c1)))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON ((((NULL)<>(v0.c0)))*('AW洩')) GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING (NOT (((((((((CASE SUM(COUNT(*))  WHEN TOTAL(AVG(COUNT(*))) THEN MIN(v0.c0) END)AND(AVG(''))))AND((MAX(rt0.c2) IN ()))))AND(GROUP_CONCAT(rt0.c2))))AND(COUNT(AVG(rt0.c1)))))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON ((((NULL)!=(v0.c0)))*('AW洩')) GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING ((((((((((CASE SUM(COUNT(*))  WHEN TOTAL(AVG(COUNT(*))) THEN MIN(v0.c0) END)AND(AVG(''))))AND((MAX(rt0.c2) IN ()))))AND(GROUP_CONCAT(rt0.c2))))AND(COUNT(AVG(rt0.c1))))) ISNULL);
SELECT rt0.c0, v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON ((((NULL)!=(v0.c0)))*('AW洩')) GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON ((((NULL)<>(v0.c0)))*('AW洩')) GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING ((((((((CASE SUM(COUNT(*))  WHEN TOTAL(AVG(COUNT(*))) THEN MIN(v0.c0) END)AND(AVG(''))))AND((MAX(rt0.c2) IN ()))))AND(GROUP_CONCAT(rt0.c2))))AND(COUNT(AVG(rt0.c1)))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON ((((NULL)<>(v0.c0)))*('AW洩')) GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING (NOT (((((((((CASE SUM(COUNT(*))  WHEN TOTAL(AVG(COUNT(*))) THEN MIN(v0.c0) END)AND(AVG(''))))AND((MAX(rt0.c2) IN ()))))AND(GROUP_CONCAT(rt0.c2))))AND(COUNT(AVG(rt0.c1)))))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON ((((NULL)!=(v0.c0)))*('AW洩')) GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING ((((((((((CASE SUM(COUNT(*))  WHEN TOTAL(AVG(COUNT(*))) THEN MIN(v0.c0) END)AND(AVG(''))))AND((MAX(rt0.c2) IN ()))))AND(GROUP_CONCAT(rt0.c2))))AND(COUNT(AVG(rt0.c1))))) ISNULL);
SELECT rt0.c0, v0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON ((((NULL)!=(v0.c0)))*('AW洩')) GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))*((((rt0.c2))<=((rt0.c2)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))*((((rt0.c2))<=((rt0.c2)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))*((((rt0.c2))<=((rt0.c2)))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) AND (((v0.c0) BETWEEN (0.9723722088184469) AND (v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS BLOB)) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) AND (((v0.c0) BETWEEN (0.9723722088184469) AND (v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS BLOB)) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) AND (((v0.c0) BETWEEN (0.9723722088184469) AND (v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON rt0.c1 COLLATE NOCASE GROUP BY v0.c0, rt0.c1;
SELECT ALL v0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON rt0.c1 COLLATE NOCASE WHERE ((((~ (rt0.c2))) IS FALSE)) GROUP BY v0.c0, rt0.c1 UNION SELECT v0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON rt0.c1 COLLATE NOCASE WHERE ((NOT ((((~ (rt0.c2))) IS FALSE)))) GROUP BY v0.c0, rt0.c1 UNION SELECT ALL v0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON rt0.c1 COLLATE NOCASE WHERE ((((((~ (rt0.c2))) IS FALSE)) ISNULL)) GROUP BY v0.c0, rt0.c1;
SELECT v0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON rt0.c1 COLLATE NOCASE GROUP BY v0.c0, rt0.c1;
SELECT v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING AVG(SUM(rt0.c0)) UNION ALL SELECT v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (AVG(SUM(rt0.c0)))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((AVG(SUM(rt0.c0))) ISNULL);
SELECT v0.c0 FROM rt0, v0;
SELECT ALL v0.c0 FROM rt0, v0 WHERE (x'416e2c5c') UNION ALL SELECT ALL v0.c0 FROM rt0, v0 WHERE ((NOT (x'416e2c5c'))) UNION ALL SELECT ALL v0.c0 FROM rt0, v0 WHERE (((x'416e2c5c') ISNULL));
SELECT v0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (CAST(rt0.c0 AS REAL) COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (CAST(rt0.c0 AS REAL) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((CAST(rt0.c0 AS REAL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 INNER JOIN v0 ON ((((rt0.c2)-('}Fꈓ')))>=(((rt0.c0) BETWEEN (rt0.c2) AND (v0.c0)))) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 INNER JOIN v0 ON ((((rt0.c2)-('}Fꈓ')))>=(((rt0.c0) BETWEEN (rt0.c2) AND (v0.c0)))) WHERE (CASE WHEN ((rt0.c1) BETWEEN (0.3039493081114609) AND (v0.c0)) THEN LIKELIHOOD(DISTINCT rt0.c0, 0.17190771289441897) ELSE (((v0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, v0.c0, v0.c0, rt0.c0)) AND ((rt0.c2, NULL, rt0.c1, rt0.c1, rt0.c2))) END) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 INNER JOIN v0 ON ((((rt0.c2)-('}Fꈓ')))>=(((rt0.c0) BETWEEN (rt0.c2) AND (v0.c0)))) WHERE ((NOT (CASE WHEN ((rt0.c1) BETWEEN (0.3039493081114609) AND (v0.c0)) THEN LIKELIHOOD(DISTINCT rt0.c0, 0.17190771289441897) ELSE (((v0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, v0.c0, v0.c0, rt0.c0)) AND ((rt0.c2, NULL, rt0.c1, rt0.c1, rt0.c2))) END))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 INNER JOIN v0 ON ((((rt0.c2)-('}Fꈓ')))>=(((rt0.c0) BETWEEN (rt0.c2) AND (v0.c0)))) WHERE (((CASE WHEN ((rt0.c1) BETWEEN (0.3039493081114609) AND (v0.c0)) THEN LIKELIHOOD(DISTINCT rt0.c0, 0.17190771289441897) ELSE (((v0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, v0.c0, v0.c0, rt0.c0)) AND ((rt0.c2, NULL, rt0.c1, rt0.c1, rt0.c2))) END) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 INNER JOIN v0 ON ((((rt0.c2)-('}Fꈓ')))>=(((rt0.c0) BETWEEN (rt0.c2) AND (v0.c0)))) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((rt0.c2, '-503894006', MAX(MAX(SUM(AVG(MAX(SUM(MAX(rt0.c1))))))))) BETWEEN ((SUM(x''), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE TOTAL(rt0.c2) END, (((AVG(rt0.c0)))<((x''))))) AND ((TYPEOF(AVG(rt0.c1)), ((COUNT(rt0.c0)) BETWEEN (rt0.c0) AND (SUM(MIN(SUM(MIN(rt0.c2)))))), MIN(TOTAL(rt0.c1))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((((rt0.c2, '-503894006', MAX(MAX(SUM(AVG(MAX(SUM(MAX(rt0.c1))))))))) BETWEEN ((SUM(x''), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE TOTAL(rt0.c2) END, (((AVG(rt0.c0)))<((x''))))) AND ((TYPEOF(AVG(rt0.c1)), ((COUNT(rt0.c0)) BETWEEN (rt0.c0) AND (SUM(MIN(SUM(MIN(rt0.c2)))))), MIN(TOTAL(rt0.c1))))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((rt0.c2, '-503894006', MAX(MAX(SUM(AVG(MAX(SUM(MAX(rt0.c1))))))))) BETWEEN ((SUM(x''), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE TOTAL(rt0.c2) END, (((AVG(rt0.c0)))<((x''))))) AND ((TYPEOF(AVG(rt0.c1)), ((COUNT(rt0.c0)) BETWEEN (rt0.c0) AND (SUM(MIN(SUM(MIN(rt0.c2)))))), MIN(TOTAL(rt0.c1)))))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((((v0.c0)&(v0.c0)))IS NOT(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((v0.c0)&(v0.c0)))IS NOT(((((v0.c0)AND(v0.c0)))AND(v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c0)&(v0.c0)))IS NOT(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)) THEN ((((((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(v0.c0)) WHEN ((v0.c0)AND(rt0.c2)) THEN ((NULL) NOT BETWEEN (rt0.c2) AND (v0.c0)) WHEN (NOT (rt0.c1)) THEN rt0.c1 END) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (CASE WHEN ((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)) THEN ((((((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(v0.c0)) WHEN ((v0.c0)AND(rt0.c2)) THEN ((NULL) NOT BETWEEN (rt0.c2) AND (v0.c0)) WHEN (NOT (rt0.c1)) THEN rt0.c1 END))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((CASE WHEN ((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)) THEN ((((((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(v0.c0)) WHEN ((v0.c0)AND(rt0.c2)) THEN ((NULL) NOT BETWEEN (rt0.c2) AND (v0.c0)) WHEN (NOT (rt0.c1)) THEN rt0.c1 END) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((((+ (rt0.c0))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c0) ISNULL)))) GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((NOT ((((+ (rt0.c0))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c0) ISNULL)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0 UNION SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((((((+ (rt0.c0))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c0) ISNULL)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING MAX(TOTAL(rt0.c0)) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING (NOT (MAX(TOTAL(rt0.c0)))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING ((MAX(TOTAL(rt0.c0))) ISNULL);
SELECT ALL MAX(((((NULL, rt0.c1, rt0.c0))<((rt0.c0, rt0.c2, NULL))) IN ())) FROM rt0 ORDER BY ((LIKELIHOOD(DISTINCT rt0.c1, 0.7675487918678726))>=(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS LAST;
SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON 0.8912319828138985;
SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON 0.8912319828138985 WHERE (((rt0.c1 COLLATE RTRIM) IS TRUE)) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON 0.8912319828138985 WHERE ((NOT (((rt0.c1 COLLATE RTRIM) IS TRUE)))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON 0.8912319828138985 WHERE (((((rt0.c1 COLLATE RTRIM) IS TRUE)) ISNULL));
SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON 0.8912319828138985;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((IFNULL(rt0.c1, rt0.c2)) NOTNULL)) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((IFNULL(rt0.c1, rt0.c2)) NOTNULL)))) UNION SELECT DISTINCT * FROM v0, rt0 NOT INDEXED WHERE (((((IFNULL(rt0.c1, rt0.c2)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM v0, rt0 WHERE (rt0.c0) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM v0, rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(((COUNT(*))>=(AVG(AVG(MAX(COUNT(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(((COUNT(*))>=(AVG(AVG(MAX(COUNT(v0.c0))))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(((COUNT(*))>=(AVG(AVG(MAX(COUNT(v0.c0)))))))) ISNULL);
SELECT v0.c0, rt0.c2, rt0.c1 FROM rt0, v0;
SELECT ALL v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE (UNICODE(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((NOT (UNICODE(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE (((UNICODE(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) ISNULL));
SELECT v0.c0, rt0.c2, rt0.c1 FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE ((v0.c0) ISNULL)  WHEN v0.c0 THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE ((v0.c0) ISNULL)  WHEN v0.c0 THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE ((v0.c0) ISNULL)  WHEN v0.c0 THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, v0 WHERE (((((rt0.c0)-(rt0.c1)))<<(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN '-320688824' WHEN rt0.c2 THEN v0.c0 END))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, v0 WHERE ((NOT (((((rt0.c0)-(rt0.c1)))<<(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN '-320688824' WHEN rt0.c2 THEN v0.c0 END))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, v0 WHERE (((((((rt0.c0)-(rt0.c1)))<<(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN '-320688824' WHEN rt0.c2 THEN v0.c0 END))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0 HAVING SUM(LTRIM(v0.c0, v0.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0 HAVING (NOT (SUM(LTRIM(v0.c0, v0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0 HAVING ((SUM(LTRIM(v0.c0, v0.c0))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0 HAVING SUM(LTRIM(v0.c0, v0.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0 HAVING (NOT (SUM(LTRIM(v0.c0, v0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0 HAVING ((SUM(LTRIM(v0.c0, v0.c0))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (-1282628536)))<((v0.c0 IN (v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (-1282628536)))<((v0.c0 IN (v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (-1282628536)))<((v0.c0 IN (v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 WHERE (CAST(((rt0.c2) IS TRUE) AS INTEGER)) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 WHERE ((NOT (CAST(((rt0.c2) IS TRUE) AS INTEGER)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 WHERE (((CAST(((rt0.c2) IS TRUE) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING GROUP_CONCAT(v0.c0) UNION ALL SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(v0.c0))) UNION ALL SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(v0.c0)) ISNULL);
SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING GROUP_CONCAT(v0.c0) UNION ALL SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(v0.c0))) UNION ALL SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(v0.c0)) ISNULL);
SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(0.8912319828138985)))AND(v0.c0 COLLATE RTRIM))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((((v0.c0)AND(v0.c0)))OR(0.8912319828138985)))AND(v0.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM v0 WHERE (((((((((v0.c0)AND(v0.c0)))OR(0.8912319828138985)))AND(v0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS TRUE)) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS TRUE)))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c1 GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c1 WHERE (json_array_length(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c1 WHERE ((NOT (json_array_length(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c1 WHERE (((json_array_length(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c1 GROUP BY rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(MIN(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(MIN(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(MIN(v0.c0))) ISNULL);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON x'';
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON x'' WHERE ((~ (((rt0.c2) IS TRUE)))) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN v0 ON x'' WHERE ((NOT ((~ (((rt0.c2) IS TRUE)))))) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN v0 ON x'' WHERE ((((~ (((rt0.c2) IS TRUE)))) ISNULL));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON x'';
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0 NOT INDEXED, v0 WHERE (((rt0.c1) NOT BETWEEN (((NULL)/(rt0.c0))) AND (LTRIM(v0.c0, rt0.c2)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (((NULL)/(rt0.c0))) AND (LTRIM(v0.c0, rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((rt0.c1) NOT BETWEEN (((NULL)/(rt0.c0))) AND (LTRIM(v0.c0, rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0 WHERE (((((rt0.c0)*(rt0.c1)))||(''))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM v0, rt0 WHERE ((NOT (((((rt0.c0)*(rt0.c1)))||(''))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM v0, rt0 WHERE (((((((rt0.c0)*(rt0.c1)))||(''))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0 HAVING MIN(SUM(rt0.c0)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0 HAVING (NOT (MIN(SUM(rt0.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0 HAVING ((MIN(SUM(rt0.c0))) ISNULL);
SELECT rt0.c1, v0.c0 FROM rt0, v0;
SELECT ALL rt0.c1, v0.c0 FROM rt0, v0 WHERE (((CAST(v0.c0 AS NUMERIC)) NOT NULL)) UNION ALL SELECT rt0.c1, v0.c0 FROM rt0, v0 WHERE ((NOT (((CAST(v0.c0 AS NUMERIC)) NOT NULL)))) UNION ALL SELECT rt0.c1, v0.c0 FROM rt0, v0 WHERE (((((CAST(v0.c0 AS NUMERIC)) NOT NULL)) ISNULL));
SELECT rt0.c1, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c2, rt0.c0, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON '236185456';
SELECT DISTINCT rt0.c2, rt0.c0, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON '236185456' WHERE (CASE ((x'') BETWEEN (v0.c0) AND (v0.c0))  WHEN ((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) THEN (('')<>(v0.c0)) ELSE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 END END) UNION SELECT DISTINCT rt0.c2, rt0.c0, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON '236185456' WHERE ((NOT (CASE ((x'') BETWEEN (v0.c0) AND (v0.c0))  WHEN ((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) THEN (('')!=(v0.c0)) ELSE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 END END))) UNION SELECT DISTINCT rt0.c2, rt0.c0, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON '236185456' WHERE (((CASE ((x'') BETWEEN (v0.c0) AND (v0.c0))  WHEN ((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) THEN (('')<>(v0.c0)) ELSE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 END END) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON '236185456';
SELECT ALL rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 NATURAL JOIN v0 WHERE ((- (CAST('953895418' AS BLOB)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 NATURAL JOIN v0 WHERE ((NOT ((- (CAST('953895418' AS BLOB)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 NATURAL JOIN v0 WHERE ((((- (CAST('953895418' AS BLOB)))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((AVG(0.9637527851138903)) IS TRUE) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((AVG(0.9637527851138903)) IS TRUE))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((AVG(0.9637527851138903)) IS TRUE)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((AVG(0.9637527851138903)) IS TRUE) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((AVG(0.9637527851138903)) IS TRUE))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((AVG(0.9637527851138903)) IS TRUE)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT * FROM v0, rt0 NOT INDEXED;
SELECT ALL * FROM v0, rt0 WHERE (((((((((rt0.c0)AND(v0.c0)))OR(v0.c0)))AND(NULL)))OR(rt0.c1)) COLLATE NOCASE COLLATE RTRIM) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (((((((((rt0.c0)AND(v0.c0)))OR(v0.c0)))AND(NULL)))OR(rt0.c1)) COLLATE NOCASE COLLATE RTRIM))) UNION ALL SELECT * FROM v0, rt0 WHERE (((((((((((rt0.c0)AND(v0.c0)))OR(v0.c0)))AND(NULL)))OR(rt0.c1)) COLLATE NOCASE COLLATE RTRIM) ISNULL));
SELECT * FROM v0, rt0 NOT INDEXED;
SELECT DISTINCT rt0.c1 FROM rt0 NOT INDEXED;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (CHAR(INSTR(rt0.c0, rt0.c1))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (CHAR(INSTR(rt0.c0, rt0.c1))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((CHAR(INSTR(rt0.c0, rt0.c1))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0 NOT INDEXED;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ('') GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (''))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((('') ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, v0 NOT INDEXED GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2 HAVING CAST(rt0.c1 COLLATE RTRIM AS REAL) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (CAST(rt0.c1 COLLATE RTRIM AS REAL))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2 HAVING ((CAST(rt0.c1 COLLATE RTRIM AS REAL)) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0, v0 NOT INDEXED GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2 HAVING CAST(rt0.c1 COLLATE RTRIM AS REAL) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (CAST(rt0.c1 COLLATE RTRIM AS REAL))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2 HAVING ((CAST(rt0.c1 COLLATE RTRIM AS REAL)) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0, v0 NOT INDEXED GROUP BY rt0.c1, rt0.c2;
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c2))>(((v0.c0 IN ()))))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT ((((rt0.c2))>(((v0.c0 IN ()))))))) UNION ALL SELECT * FROM v0, rt0 WHERE ((((((rt0.c2))>(((v0.c0 IN ()))))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) NOT NULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(((v0.c0)*(x'')))))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(((v0.c0)*(x'')))))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(((v0.c0)*(x'')))))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c1;
SELECT ALL v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c1 HAVING ((MIN(COUNT(*)))IS NOT(((rt0.c1)<=(GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c1 HAVING (NOT (((MIN(COUNT(*)))IS NOT(((rt0.c1)<=(GROUP_CONCAT(rt0.c2))))))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c1 HAVING ((((MIN(COUNT(*)))IS NOT(((rt0.c1)<=(GROUP_CONCAT(rt0.c2)))))) ISNULL);
SELECT SUM(((rt0.c1)<>(x'4ce6')) COLLATE BINARY COLLATE NOCASE) FROM rt0 ORDER BY rt0.c0 ASC, (CAST(rt0.c0 AS REAL) IN ());
SELECT rt0.c2, v0.c0, rt0.c1 FROM v0, rt0;
SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 WHERE (((rt0.c0 IN ()) IN ())) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (((rt0.c0 IN ()) IN ())))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 WHERE (((((rt0.c0 IN ()) IN ())) ISNULL));
SELECT rt0.c2, v0.c0, rt0.c1 FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE UPPER(v0.c0)  WHEN v0.c0 THEN ((v0.c0)LIKE(v0.c0)) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE UPPER(v0.c0)  WHEN v0.c0 THEN ((v0.c0)LIKE(v0.c0)) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE UPPER(v0.c0)  WHEN v0.c0 THEN ((v0.c0)LIKE(v0.c0)) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) AND (((NOT (rt0.c2)))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) AND (((NOT (rt0.c2)))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) AND (((NOT (rt0.c2)))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL v0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((CAST(rt0.c1 AS INTEGER)) NOT NULL) GROUP BY v0.c0, rt0.c1;
SELECT v0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((CAST(rt0.c1 AS INTEGER)) NOT NULL) GROUP BY v0.c0, rt0.c1 HAVING MIN(SUM(rt0.c0)) UNION ALL SELECT ALL v0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((CAST(rt0.c1 AS INTEGER)) NOT NULL) GROUP BY v0.c0, rt0.c1 HAVING (NOT (MIN(SUM(rt0.c0)))) UNION ALL SELECT v0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((CAST(rt0.c1 AS INTEGER)) NOT NULL) GROUP BY v0.c0, rt0.c1 HAVING ((MIN(SUM(rt0.c0))) ISNULL);
SELECT ALL SUM(0Xffffffffb3860699) FROM v0 ORDER BY CAST((~ (v0.c0)) AS TEXT)  NULLS FIRST;
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (CAST(CAST(rt0.c2 AS BLOB) AS INTEGER)) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (CAST(CAST(rt0.c2 AS BLOB) AS INTEGER)))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((CAST(CAST(rt0.c2 AS BLOB) AS INTEGER)) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((TRIM(DISTINCT rt0.c2, rt0.c2))OR((+ (rt0.c0)))))AND(NULLIF(DISTINCT rt0.c0, rt0.c1))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))OR(((rt0.c0) NOT NULL)))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((((((TRIM(DISTINCT rt0.c2, rt0.c2))OR((+ (rt0.c0)))))AND(NULLIF(DISTINCT rt0.c0, rt0.c1))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))OR(((rt0.c0) NOT NULL)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((((TRIM(DISTINCT rt0.c2, rt0.c2))OR((+ (rt0.c0)))))AND(NULLIF(DISTINCT rt0.c0, rt0.c1))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))OR(((rt0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 WHERE (CAST((- (v0.c0)) AS REAL)) GROUP BY v0.c0, rt0.c1, rt0.c0 UNION SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 WHERE ((NOT (CAST((- (v0.c0)) AS REAL)))) GROUP BY v0.c0, rt0.c1, rt0.c0 UNION SELECT v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 WHERE (((CAST((- (v0.c0)) AS REAL)) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((+ (rt0.c0))) BETWEEN (((rt0.c0) IS TRUE)) AND (((0.8446972468489974) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((+ (rt0.c0))) BETWEEN (((rt0.c0) IS TRUE)) AND (((0.8446972468489974) NOT NULL)))))) UNION ALL SELECT * FROM rt0 WHERE ((((((+ (rt0.c0))) BETWEEN (((rt0.c0) IS TRUE)) AND (((0.8446972468489974) NOT NULL)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c1 IN (rt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((rt0.c1 IN (rt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((- (((v0.c0) BETWEEN (rt0.c2) AND (v0.c0))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((NOT ((- (((v0.c0) BETWEEN (rt0.c2) AND (v0.c0))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((((- (((v0.c0) BETWEEN (rt0.c2) AND (v0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT v0.c0, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c0;
SELECT ALL v0.c0, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c0 HAVING ((MIN(MIN(rt0.c0)))||(rt0.c2)) COLLATE NOCASE UNION ALL SELECT v0.c0, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c0 HAVING (NOT (((MIN(MIN(rt0.c0)))||(rt0.c2)) COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c0 HAVING ((((MIN(MIN(rt0.c0)))||(rt0.c2)) COLLATE NOCASE) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (v0.c0) UNION ALL SELECT * FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0, rt0.c0 FROM v0, rt0;
SELECT DISTINCT v0.c0, rt0.c0 FROM v0, rt0 WHERE (((LIKELY(v0.c0))=(TYPEOF(DISTINCT v0.c0)))) UNION SELECT DISTINCT v0.c0, rt0.c0 FROM v0, rt0 WHERE ((NOT (((LIKELY(v0.c0))=(TYPEOF(DISTINCT v0.c0)))))) UNION SELECT DISTINCT v0.c0, rt0.c0 FROM v0, rt0 WHERE (((((LIKELY(v0.c0))=(TYPEOF(DISTINCT v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c0 FROM v0, rt0;
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0 WHERE ((- (((rt0.c2)==(v0.c0))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM v0, rt0 WHERE ((NOT ((- (((rt0.c2)==(v0.c0))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM v0, rt0 WHERE ((((- (((rt0.c2)==(v0.c0))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c0 HAVING MAX(((SUM(TOTAL(v0.c0)))>=(rt0.c0))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c0 HAVING (NOT (MAX(((SUM(TOTAL(v0.c0)))>=(rt0.c0))))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c1, rt0.c0 HAVING ((MAX(((SUM(TOTAL(v0.c0)))>=(rt0.c0)))) ISNULL);
SELECT * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (COALESCE(DISTINCT rt0.c1 COLLATE RTRIM, ABS(DISTINCT rt0.c0))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (COALESCE(DISTINCT rt0.c1 COLLATE RTRIM, ABS(DISTINCT rt0.c0))))) UNION ALL SELECT * FROM rt0, v0 WHERE (((COALESCE(DISTINCT rt0.c1 COLLATE RTRIM, ABS(DISTINCT rt0.c0))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (LIKELIHOOD(DISTINCT v0.c0, 0.4912690543870716) COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (LIKELIHOOD(DISTINCT v0.c0, 0.4912690543870716) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0 WHERE (((LIKELIHOOD(DISTINCT v0.c0, 0.4912690543870716) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM rt0, v0 WHERE (((((rt0.c0)<<(rt0.c0)))&(((rt0.c2) BETWEEN ('') AND (rt0.c0))))) GROUP BY v0.c0, rt0.c1, rt0.c0 UNION SELECT v0.c0, rt0.c1, rt0.c0 FROM rt0, v0 WHERE ((NOT (((((rt0.c0)<<(rt0.c0)))&(((rt0.c2) BETWEEN ('') AND (rt0.c0))))))) GROUP BY v0.c0, rt0.c1, rt0.c0 UNION SELECT v0.c0, rt0.c1, rt0.c0 FROM rt0, v0 WHERE (((((((rt0.c0)<<(rt0.c0)))&(((rt0.c2) BETWEEN ('') AND (rt0.c0))))) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (~ (COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((~ (COUNT(*))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((~ (COUNT(*)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (~ (COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((~ (COUNT(*))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((~ (COUNT(*)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL MAX(((((((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(rt0.c0 COLLATE NOCASE)))OR(((x'') BETWEEN (rt0.c1) AND (rt0.c2))))) FROM v0, rt0 ORDER BY (((rt0.c0) NOT NULL) IN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (NULL))))  NULLS FIRST;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((NULL IN ()) IN ())) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((NULL IN ()) IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((NULL IN ()) IN ())) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 NOT INDEXED WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0 IN (v0.c0, v0.c0))))=((HEX(DISTINCT '1291952403'))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0 IN (v0.c0, v0.c0))))=((HEX(DISTINCT '1291952403'))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0 IN (v0.c0, v0.c0))))=((HEX(DISTINCT '1291952403'))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING GROUP_CONCAT(((rt0.c0)*(SUM(MAX(MAX(COUNT(rt0.c2))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(((rt0.c0)*(SUM(MAX(MAX(COUNT(rt0.c2))))))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(((rt0.c0)*(SUM(MAX(MAX(COUNT(rt0.c2)))))))) ISNULL);
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END)) AND (((rt0.c2 IN ()))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END)) AND (((rt0.c2 IN ()))))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END)) AND (((rt0.c2 IN ()))))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT rt0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c2 FROM rt0, v0 WHERE ((v0.c0 IN (rt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2 FROM rt0, v0 WHERE ((NOT ((v0.c0 IN (rt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2 FROM rt0, v0 WHERE ((((v0.c0 IN (rt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN ' ]Z|)k6^' END)AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN ' ]Z|)k6^' END)AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((CASE WHEN v0.c0 THEN ' ]Z|)k6^' END)AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING 'V' UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ('V')) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (('V') ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING 'V' UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ('V')) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (('V') ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT MAX((((rt0.c1 COLLATE BINARY))<=((CASE WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)))) FROM v0, rt0 ORDER BY CASE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c0))  WHEN ((rt0.c2) IS TRUE) THEN (((rt0.c1, rt0.c2, rt0.c1))>=((v0.c0, rt0.c1, rt0.c1))) WHEN ((v0.c0) IS FALSE) THEN ((rt0.c2) NOTNULL) WHEN rt0.c1 COLLATE RTRIM THEN rt0.c1 ELSE ((v0.c0)||(v0.c0)) END ASC  NULLS LAST, ((v0.c0)LIKE(0X4ca3262e)) COLLATE BINARY  NULLS FIRST;
SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0;
SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 WHERE (((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE v0.c0 END)AND(((v0.c0) BETWEEN (v0.c0) AND (rt0.c1)))))AND(((rt0.c1)!=(v0.c0))))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 WHERE ((NOT (((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE v0.c0 END)AND(((v0.c0) BETWEEN (v0.c0) AND (rt0.c1)))))AND(((rt0.c1)<>(v0.c0))))))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 WHERE (((((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE v0.c0 END)AND(((v0.c0) BETWEEN (v0.c0) AND (rt0.c1)))))AND(((rt0.c1)<>(v0.c0))))) ISNULL));
SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((- (((v0.c0)<(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((- (((v0.c0)<(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((- (((v0.c0)<(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 WHERE ((((rt0.c1 IN ()))||(rt0.c0 COLLATE BINARY))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 WHERE ((NOT ((((rt0.c1 IN ()))||(rt0.c0 COLLATE BINARY))))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 UNION SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 WHERE ((((((rt0.c1 IN ()))||(rt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0;
SELECT ALL rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c2;
SELECT ALL rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c2 HAVING COUNT(MAX(rt0.c0)) UNION ALL SELECT rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c2 HAVING (NOT (COUNT(MAX(rt0.c0)))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c2 HAVING ((COUNT(MAX(rt0.c0))) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE ((((((rt0.c1, rt0.c2, rt0.c2))<((rt0.c1, rt0.c2, rt0.c0)))) IS TRUE)) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT ((((((rt0.c1, rt0.c2, rt0.c2))<((rt0.c1, rt0.c2, rt0.c0)))) IS TRUE)))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((((((rt0.c1, rt0.c2, rt0.c2))<((rt0.c1, rt0.c2, rt0.c0)))) IS TRUE)) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((LOWER(DISTINCT rt0.c1)) NOT BETWEEN (rt0.c0) AND (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((LOWER(DISTINCT rt0.c1)) NOT BETWEEN (rt0.c0) AND (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((LOWER(DISTINCT rt0.c1)) NOT BETWEEN (rt0.c0) AND (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NULL IN ())) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((NULL IN ())))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((NULL IN ())) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((((((GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(rt0.c0))))OR(((rt0.c1)|(rt0.c1)))))OR(TOTAL(rt0.c0))))AND(CASE rt0.c2  WHEN SUM(rt0.c0) THEN SUM(x'') END)))OR(GROUP_CONCAT(COUNT(GROUP_CONCAT(SUM(GROUP_CONCAT(rt0.c1))))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((((((((GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(rt0.c0))))OR(((rt0.c1)|(rt0.c1)))))OR(TOTAL(rt0.c0))))AND(CASE rt0.c2  WHEN SUM(rt0.c0) THEN SUM(x'') END)))OR(GROUP_CONCAT(COUNT(GROUP_CONCAT(SUM(GROUP_CONCAT(rt0.c1))))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((((((((GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(rt0.c0))))OR(((rt0.c1)|(rt0.c1)))))OR(TOTAL(rt0.c0))))AND(CASE rt0.c2  WHEN SUM(rt0.c0) THEN SUM(x'') END)))OR(GROUP_CONCAT(COUNT(GROUP_CONCAT(SUM(GROUP_CONCAT(rt0.c1)))))))) ISNULL);
SELECT * FROM v0 CROSS JOIN rt0 ON (((v0.c0, rt0.c2, rt0.c1)) BETWEEN ((((v0.c0)/(rt0.c2)), CAST(0.52536629050961 AS INTEGER), PRINTF(v0.c0))) AND ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)), x'', CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END)));
SELECT * FROM v0 NOT INDEXED CROSS JOIN rt0 ON (((v0.c0, rt0.c2, rt0.c1)) BETWEEN ((((v0.c0)/(rt0.c2)), CAST(0.52536629050961 AS INTEGER), PRINTF(v0.c0))) AND ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)), x'', CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END))) WHERE (TRIM(rt0.c0) COLLATE BINARY) UNION ALL SELECT ALL * FROM v0 CROSS JOIN rt0 ON (((v0.c0, rt0.c2, rt0.c1)) BETWEEN ((((v0.c0)/(rt0.c2)), CAST(0.52536629050961 AS INTEGER), PRINTF(v0.c0))) AND ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)), x'', CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END))) WHERE ((NOT (TRIM(rt0.c0) COLLATE BINARY))) UNION ALL SELECT * FROM v0 CROSS JOIN rt0 ON (((v0.c0, rt0.c2, rt0.c1)) BETWEEN ((((v0.c0)/(rt0.c2)), CAST(0.52536629050961 AS INTEGER), PRINTF(v0.c0))) AND ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)), x'', CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END))) WHERE (((TRIM(rt0.c0) COLLATE BINARY) ISNULL));
SELECT * FROM v0 CROSS JOIN rt0 ON (((v0.c0, rt0.c2, rt0.c1)) BETWEEN ((((v0.c0)/(rt0.c2)), CAST(0.52536629050961 AS INTEGER), PRINTF(v0.c0))) AND ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)), x'', CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END)));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT))LIKE(((rt0.c2)+(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS TEXT))LIKE(((rt0.c2)+(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c1 AS TEXT))LIKE(((rt0.c2)+(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c2, rt0.c2, rt0.c0))==((rt0.c1, rt0.c1, rt0.c1))))IS(((rt0.c2)>(rt0.c2))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c2, rt0.c2, rt0.c0))==((rt0.c1, rt0.c1, rt0.c1))))IS(((rt0.c2)>(rt0.c2))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((rt0.c2, rt0.c2, rt0.c0))==((rt0.c1, rt0.c1, rt0.c1))))IS(((rt0.c2)>(rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING 0.67815319733506 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (0.67815319733506)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((0.67815319733506) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING 0.67815319733506 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (0.67815319733506)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((0.67815319733506) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (v0.c0) UNION ALL SELECT * FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((rt0.c1 IN ()) IN ())) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((rt0.c1 IN ()) IN ())))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((rt0.c1 IN ()) IN ())) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (x'') GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (x''))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((x'') ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(COUNT(COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(COUNT(COUNT(*))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(COUNT(COUNT(*)))) ISNULL);
SELECT rt0.c0 FROM rt0, v0;
SELECT ALL rt0.c0 FROM rt0, v0 WHERE (((CAST(rt0.c1 AS INTEGER)) BETWEEN (((rt0.c0) NOT NULL)) AND ((rt0.c2 IN ())))) UNION ALL SELECT ALL rt0.c0 FROM rt0 NOT INDEXED, v0 WHERE ((NOT (((CAST(rt0.c1 AS INTEGER)) BETWEEN (((rt0.c0) NOT NULL)) AND ((rt0.c2 IN ())))))) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0 WHERE (((((CAST(rt0.c1 AS INTEGER)) BETWEEN (((rt0.c0) NOT NULL)) AND ((rt0.c2 IN ())))) ISNULL));
SELECT rt0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c0, v0.c0, rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 WHERE (((((((((rt0.c1)AND(rt0.c2)))OR(0.3105321694729547)))OR((rt0.c0 IN ()))))AND(v0.c0))) UNION SELECT DISTINCT rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (((((((((rt0.c1)AND(rt0.c2)))OR(0.3105321694729547)))OR((rt0.c0 IN ()))))AND(v0.c0))))) UNION SELECT DISTINCT rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 WHERE (((((((((((rt0.c1)AND(rt0.c2)))OR(0.3105321694729547)))OR((rt0.c0 IN ()))))AND(v0.c0))) ISNULL));
SELECT DISTINCT rt0.c0, v0.c0, rt0.c2 FROM v0, rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(((rt0.c2)/(rt0.c2)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(((rt0.c2)/(rt0.c2)))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((SQLITE_COMPILEOPTION_GET(((rt0.c2)/(rt0.c2)))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c1, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0;
SELECT ALL rt0.c1, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0 HAVING MAX(((TOTAL(v0.c0)) NOT BETWEEN (rt0.c0) AND (SUM(SUM(TOTAL(rt0.c2)))))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0 HAVING (NOT (MAX(((TOTAL(v0.c0)) NOT BETWEEN (rt0.c0) AND (SUM(SUM(TOTAL(rt0.c2)))))))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0 HAVING ((MAX(((TOTAL(v0.c0)) NOT BETWEEN (rt0.c0) AND (SUM(SUM(TOTAL(rt0.c2))))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(v0.c0 AS REAL)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(v0.c0 AS REAL)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS REAL)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((NULL IN ())) BETWEEN (((v0.c0) NOT NULL)) AND (((((v0.c0)OR(v0.c0)))AND(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((NULL IN ())) BETWEEN (((v0.c0) NOT NULL)) AND (((((v0.c0)OR(v0.c0)))AND(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((NULL IN ())) BETWEEN (((v0.c0) NOT NULL)) AND (((((v0.c0)OR(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, v0 WHERE (TRIM(DISTINCT json_array(v0.c0, v0.c0))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (TRIM(DISTINCT json_array(v0.c0, v0.c0))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0, v0 WHERE (((TRIM(DISTINCT json_array(v0.c0, v0.c0))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) BETWEEN (((v0.c0)IS NOT(COUNT(*)))) AND (SUM(COUNT(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((COUNT(*)) BETWEEN (((v0.c0)IS NOT(COUNT(*)))) AND (SUM(COUNT(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((COUNT(*)) BETWEEN (((v0.c0)IS NOT(COUNT(*)))) AND (SUM(COUNT(v0.c0))))) ISNULL);
SELECT rt0.c0 FROM v0, rt0;
SELECT ALL rt0.c0 FROM v0, rt0 WHERE (-750421469) UNION ALL SELECT ALL rt0.c0 FROM v0, rt0 WHERE ((NOT (-750421469))) UNION ALL SELECT rt0.c0 FROM v0, rt0 WHERE (((-750421469) ISNULL));
SELECT rt0.c0 FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((UPPER(v0.c0)) IS TRUE)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((UPPER(v0.c0)) IS TRUE)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((UPPER(v0.c0)) IS TRUE)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING SUM(CAST(rt0.c2 AS NUMERIC)) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING (NOT (SUM(CAST(rt0.c2 AS NUMERIC)))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING ((SUM(CAST(rt0.c2 AS NUMERIC))) ISNULL);
SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING SUM(CAST(rt0.c2 AS NUMERIC)) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING (NOT (SUM(CAST(rt0.c2 AS NUMERIC)))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING ((SUM(CAST(rt0.c2 AS NUMERIC))) ISNULL);
SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT SUM((((v0.c0) IS FALSE) IN ())) FROM v0, rt0 ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))>>(((0.17217992817713001) BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS LAST;
SELECT rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON v0.c0 COLLATE NOCASE;
SELECT rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON v0.c0 COLLATE NOCASE WHERE (v0.c0 COLLATE NOCASE) UNION ALL SELECT rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON v0.c0 COLLATE NOCASE WHERE ((NOT (v0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON v0.c0 COLLATE NOCASE WHERE (((v0.c0 COLLATE NOCASE) ISNULL));
SELECT rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON v0.c0 COLLATE NOCASE;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((CAST(NULL AS TEXT))OR(((v0.c0) IS FALSE))))AND(v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((CAST(NULL AS TEXT))OR(((v0.c0) IS FALSE))))AND(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((CAST(NULL AS TEXT))OR(((v0.c0) IS FALSE))))AND(v0.c0))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CASE WHEN ((rt0.c0) ISNULL) THEN x'' END) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c0) ISNULL) THEN x'' END))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE WHEN ((rt0.c0) ISNULL) THEN x'' END) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0 HAVING CASE WHEN rt0.c1 THEN SUM(rt0.c1) WHEN COUNT(COUNT(AVG(rt0.c2))) THEN AVG(COUNT(rt0.c2)) WHEN MIN(NULL) THEN rt0.c0 END UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0 HAVING (NOT (CASE WHEN rt0.c1 THEN SUM(rt0.c1) WHEN COUNT(COUNT(AVG(rt0.c2))) THEN AVG(COUNT(rt0.c2)) WHEN MIN(NULL) THEN rt0.c0 END)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0 HAVING ((CASE WHEN rt0.c1 THEN SUM(rt0.c1) WHEN COUNT(COUNT(AVG(rt0.c2))) THEN AVG(COUNT(rt0.c2)) WHEN MIN(NULL) THEN rt0.c0 END) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (-860543689) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (-860543689))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((-860543689) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)), rt0.c1, TRIM(DISTINCT rt0.c0, rt0.c0)))>(((- (rt0.c0)), ((rt0.c1)AND(rt0.c2)), ((rt0.c0) BETWEEN (x'') AND (rt0.c2)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)), rt0.c1, TRIM(DISTINCT rt0.c0, rt0.c0)))>(((- (rt0.c0)), ((rt0.c1)AND(rt0.c2)), ((rt0.c0) BETWEEN (x'') AND (rt0.c2)))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)), rt0.c1, TRIM(DISTINCT rt0.c0, rt0.c0)))>(((- (rt0.c0)), ((rt0.c1)AND(rt0.c2)), ((rt0.c0) BETWEEN (x'') AND (rt0.c2)))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR(CAST(rt0.c0 AS REAL))))OR(NULLIF(DISTINCT rt0.c1, v0.c0)))) GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR(CAST(rt0.c0 AS REAL))))OR(NULLIF(DISTINCT rt0.c1, v0.c0)))))) GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2 UNION SELECT rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR(CAST(rt0.c0 AS REAL))))OR(NULLIF(DISTINCT rt0.c1, v0.c0)))) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2;
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(v0.c0)) IS FALSE) UNION ALL SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((GROUP_CONCAT(v0.c0)) IS FALSE))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING ((((GROUP_CONCAT(v0.c0)) IS FALSE)) ISNULL);
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(v0.c0)) IS FALSE) UNION ALL SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((GROUP_CONCAT(v0.c0)) IS FALSE))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING ((((GROUP_CONCAT(v0.c0)) IS FALSE)) ISNULL);
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT * FROM v0;
SELECT ALL * FROM v0 NOT INDEXED WHERE (((v0.c0)%(v0.c0)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((v0.c0)%(v0.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM v0 WHERE (((((v0.c0)%(v0.c0)) COLLATE NOCASE) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((TRIM(v0.c0), COALESCE(v0.c0, v0.c0), CAST(v0.c0 AS BLOB))) AND ((DATE(v0.c0, v0.c0, v0.c0), ((x'')IS NOT(v0.c0)), ((v0.c0) NOTNULL))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((TRIM(v0.c0), COALESCE(v0.c0, v0.c0), CAST(v0.c0 AS BLOB))) AND ((DATE(v0.c0, v0.c0, v0.c0), ((x'')IS NOT(v0.c0)), ((v0.c0) NOTNULL))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((TRIM(v0.c0), COALESCE(v0.c0, v0.c0), CAST(v0.c0 AS BLOB))) AND ((DATE(v0.c0, v0.c0, v0.c0), ((x'')IS NOT(v0.c0)), ((v0.c0) NOTNULL))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (CAST(rt0.c0 COLLATE NOCASE AS BLOB)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (CAST(rt0.c0 COLLATE NOCASE AS BLOB)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((CAST(rt0.c0 COLLATE NOCASE AS BLOB)) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING TOTAL(TYPEOF(rt0.c0)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (TOTAL(TYPEOF(rt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((TOTAL(TYPEOF(rt0.c0))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING TOTAL(TYPEOF(rt0.c0)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (TOTAL(TYPEOF(rt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((TOTAL(TYPEOF(rt0.c0))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, v0.c0 FROM v0 NOT INDEXED, rt0;
SELECT ALL rt0.c2, v0.c0 FROM v0, rt0 WHERE ((((CAST(rt0.c1 AS NUMERIC)))<=((v0.c0)))) UNION ALL SELECT ALL rt0.c2, v0.c0 FROM v0, rt0 WHERE ((NOT ((((CAST(rt0.c1 AS NUMERIC)))<=((v0.c0)))))) UNION ALL SELECT rt0.c2, v0.c0 FROM v0, rt0 WHERE ((((((CAST(rt0.c1 AS NUMERIC)))<=((v0.c0)))) ISNULL));
SELECT ALL rt0.c2, v0.c0 FROM v0 NOT INDEXED, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN ((rt0.c1) NOT NULL) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN (rt0.c1 IN ()) THEN ((rt0.c1) NOT NULL) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN (rt0.c1 IN ()) THEN ((rt0.c1) NOT NULL) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE WHEN CAST(v0.c0 AS BLOB) THEN (v0.c0 IN (v0.c0, v0.c0, v0.c0)) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE WHEN CAST(v0.c0 AS BLOB) THEN (v0.c0 IN (v0.c0, v0.c0, v0.c0)) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN CAST(v0.c0 AS BLOB) THEN (v0.c0 IN (v0.c0, v0.c0, v0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING CASE WHEN SUM(rt0.c0) THEN AVG(rt0.c2) ELSE rt0.c2 END COLLATE NOCASE UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING (NOT (CASE WHEN SUM(rt0.c0) THEN AVG(rt0.c2) ELSE rt0.c2 END COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING ((CASE WHEN SUM(rt0.c0) THEN AVG(rt0.c2) ELSE rt0.c2 END COLLATE NOCASE) ISNULL);
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING CASE WHEN SUM(rt0.c0) THEN AVG(rt0.c2) ELSE rt0.c2 END COLLATE NOCASE UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING (NOT (CASE WHEN SUM(rt0.c0) THEN AVG(rt0.c2) ELSE rt0.c2 END COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING ((CASE WHEN SUM(rt0.c0) THEN AVG(rt0.c2) ELSE rt0.c2 END COLLATE NOCASE) ISNULL);
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c2, rt0.c1, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON CAST(((rt0.c2) NOT NULL) AS NUMERIC) GROUP BY rt0.c2, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c1, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON CAST(((rt0.c2) NOT NULL) AS NUMERIC) WHERE (UPPER(0.6577537984084063)) GROUP BY rt0.c2, rt0.c1, v0.c0 UNION SELECT ALL rt0.c2, rt0.c1, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON CAST(((rt0.c2) NOT NULL) AS NUMERIC) WHERE ((NOT (UPPER(0.6577537984084063)))) GROUP BY rt0.c2, rt0.c1, v0.c0 UNION SELECT ALL rt0.c2, rt0.c1, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON CAST(((rt0.c2) NOT NULL) AS NUMERIC) WHERE (((UPPER(0.6577537984084063)) ISNULL)) GROUP BY rt0.c2, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c1, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON CAST(((rt0.c2) NOT NULL) AS NUMERIC) GROUP BY rt0.c2, rt0.c1, v0.c0;
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING rt0.c2 UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING rt0.c2 UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) NOTNULL)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) NOTNULL)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) NOTNULL)) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN (((v0.c0 IN ()), (v0.c0 IN ()), v0.c0 COLLATE BINARY)) AND (((+ (v0.c0)), (NOT ('203961033')), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN (((v0.c0 IN ()), (v0.c0 IN ()), v0.c0 COLLATE BINARY)) AND (((+ (v0.c0)), (NOT ('203961033')), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN (((v0.c0 IN ()), (v0.c0 IN ()), v0.c0 COLLATE BINARY)) AND (((+ (v0.c0)), (NOT ('203961033')), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((((NOT (rt0.c2)))<>('6083556670953355432'))) GROUP BY rt0.c0, rt0.c2, v0.c0 UNION SELECT ALL rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((NOT ((((NOT (rt0.c2)))!=('6083556670953355432'))))) GROUP BY rt0.c0, rt0.c2, v0.c0 UNION SELECT rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((((((NOT (rt0.c2)))!=('6083556670953355432'))) ISNULL)) GROUP BY rt0.c0, rt0.c2, v0.c0;
SELECT ALL rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0;
SELECT v0.c0, rt0.c2, rt0.c0 FROM rt0 INNER JOIN v0 ON ((((((v0.c0)>=(rt0.c1)))AND((rt0.c2 IN ()))))AND(HEX(DISTINCT rt0.c2))) GROUP BY v0.c0, rt0.c2, rt0.c0;
SELECT ALL v0.c0, rt0.c2, rt0.c0 FROM rt0 INNER JOIN v0 ON ((((((v0.c0)>=(rt0.c1)))AND((rt0.c2 IN ()))))AND(HEX(DISTINCT rt0.c2))) GROUP BY v0.c0, rt0.c2, rt0.c0 HAVING ((((((((((GROUP_CONCAT(rt0.c2)) NOT BETWEEN (AVG(v0.c0)) AND (rt0.c1)))AND(SUM(GROUP_CONCAT(GROUP_CONCAT(TOTAL(MAX(rt0.c0))))))))AND(((((COUNT(rt0.c0))AND(v0.c0)))AND(v0.c0)))))OR(v0.c0)))OR(rt0.c2)) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c0 FROM rt0 INNER JOIN v0 ON ((((((v0.c0)>=(rt0.c1)))AND((rt0.c2 IN ()))))AND(HEX(DISTINCT rt0.c2))) GROUP BY v0.c0, rt0.c2, rt0.c0 HAVING (NOT (((((((((((GROUP_CONCAT(rt0.c2)) NOT BETWEEN (AVG(v0.c0)) AND (rt0.c1)))AND(SUM(GROUP_CONCAT(GROUP_CONCAT(TOTAL(MAX(rt0.c0))))))))AND(((((COUNT(rt0.c0))AND(v0.c0)))AND(v0.c0)))))OR(v0.c0)))OR(rt0.c2)))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c0 FROM rt0 INNER JOIN v0 ON ((((((v0.c0)>=(rt0.c1)))AND((rt0.c2 IN ()))))AND(HEX(DISTINCT rt0.c2))) GROUP BY v0.c0, rt0.c2, rt0.c0 HAVING ((((((((((((GROUP_CONCAT(rt0.c2)) NOT BETWEEN (AVG(v0.c0)) AND (rt0.c1)))AND(SUM(GROUP_CONCAT(GROUP_CONCAT(TOTAL(MAX(rt0.c0))))))))AND(((((COUNT(rt0.c0))AND(v0.c0)))AND(v0.c0)))))OR(v0.c0)))OR(rt0.c2))) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 NOT INDEXED WHERE ((+ (('0.8195028758315626' IN (rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((+ (('0.8195028758315626' IN (rt0.c0))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((+ (('0.8195028758315626' IN (rt0.c0))))) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((0.34643373005435096)&(rt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((0.34643373005435096)&(rt0.c2 COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((0.34643373005435096)&(rt0.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, v0 WHERE (((NULLIF(DISTINCT v0.c0, rt0.c2)) NOTNULL)) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0, v0 WHERE ((NOT (((NULLIF(DISTINCT v0.c0, rt0.c2)) NOTNULL)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0, v0 WHERE (((((NULLIF(DISTINCT v0.c0, rt0.c2)) NOTNULL)) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(TOTAL(v0.c0)))<<(MAX(SUM(TOTAL(SUM(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((AVG(TOTAL(v0.c0)))<<(MAX(SUM(TOTAL(SUM(v0.c0)))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((AVG(TOTAL(v0.c0)))<<(MAX(SUM(TOTAL(SUM(v0.c0))))))) ISNULL);
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)!=(((x'2440') BETWEEN (rt0.c1) AND (NULL))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)!=(((x'2440') BETWEEN (rt0.c1) AND (NULL))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)<>(((x'2440') BETWEEN (rt0.c1) AND (NULL))))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON (- ((rt0.c0 IN ())));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON (- ((rt0.c0 IN ()))) WHERE (TRIM(DISTINCT rt0.c0, v0.c0) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON (- ((rt0.c0 IN ()))) WHERE ((NOT (TRIM(DISTINCT rt0.c0, v0.c0) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON (- ((rt0.c0 IN ()))) WHERE (((TRIM(DISTINCT rt0.c0, v0.c0) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON (- ((rt0.c0 IN ())));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c2 AS REAL))+(COALESCE(rt0.c1, rt0.c2, rt0.c1, rt0.c0)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS REAL))+(COALESCE(rt0.c1, rt0.c2, rt0.c1, rt0.c0)))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c2 AS REAL))+(COALESCE(rt0.c1, rt0.c2, rt0.c1, rt0.c0)))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, v0.c0;
SELECT ALL rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, v0.c0 HAVING SUBSTR(rt0.c2, MAX(rt0.c1)) COLLATE BINARY UNION ALL SELECT rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, v0.c0 HAVING (NOT (SUBSTR(rt0.c2, MAX(rt0.c1)) COLLATE BINARY)) UNION ALL SELECT rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, v0.c0 HAVING ((SUBSTR(rt0.c2, MAX(rt0.c1)) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, v0.c0;
SELECT ALL rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, v0.c0 HAVING SUBSTR(rt0.c2, MAX(rt0.c1)) COLLATE BINARY UNION ALL SELECT rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, v0.c0 HAVING (NOT (SUBSTR(rt0.c2, MAX(rt0.c1)) COLLATE BINARY)) UNION ALL SELECT rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, v0.c0 HAVING ((SUBSTR(rt0.c2, MAX(rt0.c1)) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, v0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((NULL)>=((NOT (rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((NULL)>=((NOT (rt0.c0))))))) UNION ALL SELECT * FROM rt0 WHERE (((((NULL)>=((NOT (rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c0 FROM v0, rt0 WHERE (CASE WHEN ((rt0.c1)*(v0.c0)) THEN x'' COLLATE BINARY ELSE ((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(0X43e1765)))AND(v0.c0)))AND(rt0.c0)) END) UNION SELECT DISTINCT rt0.c0 FROM v0, rt0 WHERE ((NOT (CASE WHEN ((rt0.c1)*(v0.c0)) THEN x'' COLLATE BINARY ELSE ((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(0X43e1765)))AND(v0.c0)))AND(rt0.c0)) END))) UNION SELECT DISTINCT rt0.c0 FROM v0, rt0 WHERE (((CASE WHEN ((rt0.c1)*(v0.c0)) THEN x'' COLLATE BINARY ELSE ((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(0X43e1765)))AND(v0.c0)))AND(rt0.c0)) END) ISNULL));
SELECT DISTINCT rt0.c0 FROM v0, rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON UPPER(DISTINCT rt0.c1 COLLATE NOCASE) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON UPPER(DISTINCT rt0.c1 COLLATE NOCASE) WHERE (CAST(((v0.c0)GLOB(rt0.c0)) AS INTEGER)) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON UPPER(DISTINCT rt0.c1 COLLATE NOCASE) WHERE ((NOT (CAST(((v0.c0)GLOB(rt0.c0)) AS INTEGER)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON UPPER(DISTINCT rt0.c1 COLLATE NOCASE) WHERE (((CAST(((v0.c0)GLOB(rt0.c0)) AS INTEGER)) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON UPPER(DISTINCT rt0.c1 COLLATE NOCASE) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING AVG(AVG(GROUP_CONCAT(v0.c0))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (AVG(AVG(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((AVG(AVG(GROUP_CONCAT(v0.c0)))) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (TYPEOF(CAST(v0.c0 AS INTEGER))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (TYPEOF(CAST(v0.c0 AS INTEGER))))) UNION ALL SELECT * FROM v0, rt0 WHERE (((TYPEOF(CAST(v0.c0 AS INTEGER))) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((((((((rt0.c0) IS TRUE))AND((((('1459124353')OR(rt0.c2)))OR(rt0.c1)))))AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c2)))AND(LOWER(DISTINCT rt0.c1)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((((((((((rt0.c0) IS TRUE))AND((((('1459124353')OR(rt0.c2)))OR(rt0.c1)))))AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c2)))AND(LOWER(DISTINCT rt0.c1)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((((((((((rt0.c0) IS TRUE))AND((((('1459124353')OR(rt0.c2)))OR(rt0.c1)))))AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c2)))AND(LOWER(DISTINCT rt0.c1)))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))>>(rt0.c1))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))>>(rt0.c1))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))>>(rt0.c1))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(((0X23531008)/(COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(((0x23531008)/(COUNT(*)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(((0x23531008)/(COUNT(*))))) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c0)GLOB(((rt0.c2) IS FALSE)))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (((rt0.c0)GLOB(((rt0.c2) IS FALSE)))))) UNION ALL SELECT * FROM v0, rt0 WHERE (((((rt0.c0)GLOB(((rt0.c2) IS FALSE)))) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)AND(rt0.c1 COLLATE NOCASE)))AND(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)AND(rt0.c1 COLLATE NOCASE)))AND(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)AND(rt0.c1 COLLATE NOCASE)))AND(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((~ (NULL))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((~ (NULL))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((~ (NULL))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MAX((((SUM(0.17217992817713001), COUNT(*), rt0.c2))<>((rt0.c2, rt0.c2, rt0.c0)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MAX((((SUM(0.17217992817713001), COUNT(*), rt0.c2))<>((rt0.c2, rt0.c2, rt0.c0)))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MAX((((SUM(0.17217992817713001), COUNT(*), rt0.c2))!=((rt0.c2, rt0.c2, rt0.c0))))) ISNULL);
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE ((((((rt0.c0))>((rt0.c0))))LIKE(((rt0.c2) IS TRUE)))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT ((((((rt0.c0))>((rt0.c0))))LIKE(((rt0.c2) IS TRUE)))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((((((((rt0.c0))>((rt0.c0))))LIKE(((rt0.c2) IS TRUE)))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((~ (rt0.c2))) UNION SELECT DISTINCT rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT ((~ (rt0.c2))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((((~ (rt0.c2))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((('-1678335232')<=(((v0.c0)IS(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((('-1678335232')<=(((v0.c0)IS(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((('-1678335232')<=(((v0.c0)IS(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0 HAVING GROUP_CONCAT(((rt0.c2)>=(rt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (GROUP_CONCAT(((rt0.c2)>=(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0 HAVING ((GROUP_CONCAT(((rt0.c2)>=(rt0.c0)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0 HAVING GROUP_CONCAT(((rt0.c2)>=(rt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (GROUP_CONCAT(((rt0.c2)>=(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0 HAVING ((GROUP_CONCAT(((rt0.c2)>=(rt0.c0)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((((((((rt0.c1)OR(v0.c0)))OR(rt0.c0)))AND(v0.c0 COLLATE RTRIM)))AND(((0.756484040142555)GLOB(rt0.c1))))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (((((((((rt0.c1)OR(v0.c0)))OR(rt0.c0)))AND(v0.c0 COLLATE RTRIM)))AND(((0.756484040142555)GLOB(rt0.c1))))))) UNION ALL SELECT * FROM v0, rt0 WHERE (((((((((((rt0.c1)OR(v0.c0)))OR(rt0.c0)))AND(v0.c0 COLLATE RTRIM)))AND(((0.756484040142555)GLOB(rt0.c1))))) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((NULL)) BETWEEN ((((v0.c0)|(v0.c0)))) AND ((((x'3278')*(v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((NULL)) BETWEEN ((((v0.c0)|(v0.c0)))) AND ((((x'3278')*(v0.c0)))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((NULL)) BETWEEN ((((v0.c0)|(v0.c0)))) AND ((((x'3278')*(v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((rt0.c0)IS(rt0.c2))) IS FALSE)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0)IS(rt0.c2))) IS FALSE)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((((rt0.c0)IS(rt0.c2))) IS FALSE)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING SUM(CASE WHEN AVG(rt0.c0) THEN SUM(TOTAL(MIN(COUNT(*)))) END) UNION ALL SELECT rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (SUM(CASE WHEN AVG(rt0.c0) THEN SUM(TOTAL(MIN(COUNT(*)))) END))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((SUM(CASE WHEN AVG(rt0.c0) THEN SUM(TOTAL(MIN(COUNT(*)))) END)) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2 COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((NOT (rt0.c2 COLLATE RTRIM))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((NOT (rt0.c2 COLLATE RTRIM))) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON CAST((rt0.c0 IN (v0.c0)) AS NUMERIC);
SELECT DISTINCT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON CAST((rt0.c0 IN (v0.c0)) AS NUMERIC) WHERE (CASE CAST(rt0.c0 AS TEXT)  WHEN '' THEN CAST(rt0.c2 AS INTEGER) WHEN ((NULL)>=(v0.c0)) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))) WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c1) IS TRUE) END) UNION SELECT DISTINCT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON CAST((rt0.c0 IN (v0.c0)) AS NUMERIC) WHERE ((NOT (CASE CAST(rt0.c0 AS TEXT)  WHEN '' THEN CAST(rt0.c2 AS INTEGER) WHEN ((NULL)>=(v0.c0)) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))) WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c1) IS TRUE) END))) UNION SELECT DISTINCT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON CAST((rt0.c0 IN (v0.c0)) AS NUMERIC) WHERE (((CASE CAST(rt0.c0 AS TEXT)  WHEN '' THEN CAST(rt0.c2 AS INTEGER) WHEN ((NULL)>=(v0.c0)) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))) WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c1) IS TRUE) END) ISNULL));
SELECT DISTINCT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON CAST((rt0.c0 IN (v0.c0)) AS NUMERIC);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((~ (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((~ (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((~ (v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((((((((((CAST(COUNT(*) AS INTEGER))OR((((COUNT(*), MAX(rt0.c1), rt0.c2)) NOT BETWEEN ((rt0.c0, COUNT(*), COUNT(MAX(rt0.c2)))) AND ((rt0.c0, rt0.c2, rt0.c1))))))OR((~ (rt0.c0)))))OR(TOTAL(rt0.c0))))OR(TOTAL(TOTAL(rt0.c1)))))OR(MIN(AVG('')))))OR(COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (((((((((((((CAST(COUNT(*) AS INTEGER))OR((((COUNT(*), MAX(rt0.c1), rt0.c2)) NOT BETWEEN ((rt0.c0, COUNT(*), COUNT(MAX(rt0.c2)))) AND ((rt0.c0, rt0.c2, rt0.c1))))))OR((~ (rt0.c0)))))OR(TOTAL(rt0.c0))))OR(TOTAL(TOTAL(rt0.c1)))))OR(MIN(AVG('')))))OR(COUNT(*))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((((((((((((CAST(COUNT(*) AS INTEGER))OR((((COUNT(*), MAX(rt0.c1), rt0.c2)) NOT BETWEEN ((rt0.c0, COUNT(*), COUNT(MAX(rt0.c2)))) AND ((rt0.c0, rt0.c2, rt0.c1))))))OR((~ (rt0.c0)))))OR(TOTAL(rt0.c0))))OR(TOTAL(TOTAL(rt0.c1)))))OR(MIN(AVG('')))))OR(COUNT(*)))) ISNULL);
SELECT rt0.c1, v0.c0 FROM rt0, v0;
SELECT ALL rt0.c1, v0.c0 FROM rt0, v0 WHERE ((((((v0.c0)) BETWEEN ((-1641822128)) AND ((rt0.c2)))) NOT NULL)) UNION ALL SELECT ALL rt0.c1, v0.c0 FROM rt0, v0 WHERE ((NOT ((((((v0.c0)) BETWEEN ((-1641822128)) AND ((rt0.c2)))) NOT NULL)))) UNION ALL SELECT ALL rt0.c1, v0.c0 FROM rt0, v0 WHERE ((((((((v0.c0)) BETWEEN ((-1641822128)) AND ((rt0.c2)))) NOT NULL)) ISNULL));
SELECT rt0.c1, v0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((UNICODE(rt0.c2)) NOT NULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((UNICODE(rt0.c2)) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((UNICODE(rt0.c2)) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN rt0.c0 COLLATE BINARY THEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)) WHEN NULL THEN (v0.c0 IN ()) WHEN CAST(rt0.c1 AS TEXT) THEN CASE rt0.c2  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN NULL END ELSE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0)) END GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN rt0.c0 COLLATE BINARY THEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)) WHEN NULL THEN (v0.c0 IN ()) WHEN CAST(rt0.c1 AS TEXT) THEN CASE rt0.c2  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN NULL END ELSE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0)) END WHERE (rt0.c1) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN rt0.c0 COLLATE BINARY THEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)) WHEN NULL THEN (v0.c0 IN ()) WHEN CAST(rt0.c1 AS TEXT) THEN CASE rt0.c2  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN NULL END ELSE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0)) END WHERE ((NOT (rt0.c1))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN rt0.c0 COLLATE BINARY THEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)) WHEN NULL THEN (v0.c0 IN ()) WHEN CAST(rt0.c1 AS TEXT) THEN CASE rt0.c2  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN NULL END ELSE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0)) END WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN rt0.c0 COLLATE BINARY THEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)) WHEN NULL THEN (v0.c0 IN ()) WHEN CAST(rt0.c1 AS TEXT) THEN CASE rt0.c2  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN NULL END ELSE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0)) END GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING GROUP_CONCAT(AVG(GROUP_CONCAT(MAX(rt0.c2)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(AVG(GROUP_CONCAT(MAX(rt0.c2)))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(AVG(GROUP_CONCAT(MAX(rt0.c2))))) ISNULL);
SELECT rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM v0, rt0;
SELECT rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 WHERE (((((rt0.c0)AND(v0.c0)))OR(((rt0.c2)||(v0.c0))))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 WHERE ((NOT (((((rt0.c0)AND(v0.c0)))OR(((rt0.c2)||(v0.c0))))))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 WHERE (((((((rt0.c0)AND(v0.c0)))OR(((rt0.c2)||(v0.c0))))) ISNULL));
SELECT rt0.c2, v0.c0, rt0.c1, rt0.c0 FROM v0, rt0;
SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0;
SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 WHERE (STRFTIME(((rt0.c0) IS TRUE), (+ (rt0.c0)), ((v0.c0)-(rt0.c2)))) UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((NOT (STRFTIME(((rt0.c0) IS TRUE), (+ (rt0.c0)), ((v0.c0)-(rt0.c2)))))) UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 WHERE (((STRFTIME(((rt0.c0) IS TRUE), (+ (rt0.c0)), ((v0.c0)-(rt0.c2)))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0;
SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 WHERE (CAST(NULL AS TEXT)) GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 WHERE ((NOT (CAST(NULL AS TEXT)))) GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 WHERE (((CAST(NULL AS TEXT)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING TOTAL(TOTAL(COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (TOTAL(TOTAL(COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((TOTAL(TOTAL(COUNT(*)))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (json_remove(0.6018374016900976, v0.c0) COLLATE NOCASE) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (json_remove(0.6018374016900976, v0.c0) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM v0 WHERE (((json_remove(0.6018374016900976, v0.c0) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) NOTNULL))<=(CAST('' AS INTEGER)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0) NOTNULL))<=(CAST('' AS INTEGER)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0) NOTNULL))<=(CAST('' AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))OR((rt0.c2 IN ()))))OR(rt0.c2)))AND(LIKELY(DISTINCT rt0.c2))))AND(((NULL) ISNULL)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))OR((rt0.c2 IN ()))))OR(rt0.c2)))AND(LIKELY(DISTINCT rt0.c2))))AND(((NULL) ISNULL)))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((((((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))OR((rt0.c2 IN ()))))OR(rt0.c2)))AND(LIKELY(DISTINCT rt0.c2))))AND(((NULL) ISNULL)))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, v0.c0;
SELECT ALL rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, v0.c0 HAVING TOTAL(CAST(rt0.c1 AS NUMERIC)) UNION ALL SELECT rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, v0.c0 HAVING (NOT (TOTAL(CAST(rt0.c1 AS NUMERIC)))) UNION ALL SELECT ALL rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, v0.c0 HAVING ((TOTAL(CAST(rt0.c1 AS NUMERIC))) ISNULL);
SELECT ALL rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, v0.c0;
SELECT ALL rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, v0.c0 HAVING TOTAL(CAST(rt0.c1 AS NUMERIC)) UNION ALL SELECT rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, v0.c0 HAVING (NOT (TOTAL(CAST(rt0.c1 AS NUMERIC)))) UNION ALL SELECT ALL rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, v0.c0 HAVING ((TOTAL(CAST(rt0.c1 AS NUMERIC))) ISNULL);
SELECT ALL rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, v0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 NOT INDEXED;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((((rt0.c0)AND(rt0.c2)))AND(x'')))AND(rt0.c2)))OR(rt0.c2)))IS(rt0.c0 COLLATE RTRIM))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((((((((rt0.c0)AND(rt0.c2)))AND(x'')))AND(rt0.c2)))OR(rt0.c2)))IS(rt0.c0 COLLATE RTRIM))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((((((rt0.c0)AND(rt0.c2)))AND(x'')))AND(rt0.c2)))OR(rt0.c2)))IS(rt0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0 NOT INDEXED;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1 IN ()))>>(((rt0.c2)>>(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c1 IN ()))>>(((rt0.c2)>>(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1 IN ()))>>(((rt0.c2)>>(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON v0.c0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON v0.c0 WHERE (CASE WHEN (NOT (v0.c0)) THEN -1.260908501E9 ELSE rt0.c1 COLLATE NOCASE END) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON v0.c0 WHERE ((NOT (CASE WHEN (NOT (v0.c0)) THEN -1.260908501E9 ELSE rt0.c1 COLLATE NOCASE END))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON v0.c0 WHERE (((CASE WHEN (NOT (v0.c0)) THEN -1.260908501E9 ELSE rt0.c1 COLLATE NOCASE END) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON v0.c0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(((MIN(COUNT(*))) NOT BETWEEN (rt0.c2) AND (rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(((MIN(COUNT(*))) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(((MIN(COUNT(*))) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c1) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (x'') UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0 NATURAL JOIN rt0 WHERE (v0.c0) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM v0 NATURAL JOIN rt0 WHERE ((NOT (v0.c0))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM v0 NATURAL JOIN rt0 WHERE (((v0.c0) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((NOT (TOTAL(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((NOT (TOTAL(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((NOT (TOTAL(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((NOT (TOTAL(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c0)*(rt0.c2))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN rt0.c2 ELSE ((rt0.c2)*('203961033')) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE ((rt0.c0)*(rt0.c2))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN rt0.c2 ELSE ((rt0.c2)*('203961033')) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE ((rt0.c0)*(rt0.c2))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN rt0.c2 ELSE ((rt0.c2)*('203961033')) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, v0.c0 FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c2, v0.c0 FROM v0 NATURAL JOIN rt0 WHERE ((TRIM(rt0.c0) IN ())) UNION SELECT DISTINCT rt0.c2, v0.c0 FROM v0 NATURAL JOIN rt0 WHERE ((NOT ((TRIM(rt0.c0) IN ())))) UNION SELECT DISTINCT rt0.c2, v0.c0 FROM v0 NATURAL JOIN rt0 WHERE ((((TRIM(rt0.c0) IN ())) ISNULL));
SELECT DISTINCT rt0.c2, v0.c0 FROM v0 NATURAL JOIN rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((((- (rt0.c0))) NOTNULL)) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((- (rt0.c0))) NOTNULL)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((((((- (rt0.c0))) NOTNULL)) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c0)-('?QEi')))<<(UNLIKELY(rt0.c1)))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (((((rt0.c0)-('?QEi')))<<(UNLIKELY(rt0.c1)))))) UNION ALL SELECT * FROM v0, rt0 WHERE (((((((rt0.c0)-('?QEi')))<<(UNLIKELY(rt0.c1)))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 WHERE ((((rt0.c2 IN (rt0.c1)))<=((NOT (rt0.c0))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 WHERE ((NOT ((((rt0.c2 IN (rt0.c1)))<=((NOT (rt0.c0))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 WHERE ((((((rt0.c2 IN (rt0.c1)))<=((NOT (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0)>>(CAST(v0.c0 AS NUMERIC)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0)>>(CAST(v0.c0 AS NUMERIC)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0)>>(CAST(v0.c0 AS NUMERIC)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(v0.c0 COLLATE BINARY) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(v0.c0 COLLATE BINARY))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(v0.c0 COLLATE BINARY)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(v0.c0 COLLATE BINARY) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(v0.c0 COLLATE BINARY))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(v0.c0 COLLATE BINARY)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT MAX((((rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)) AND (('-202427252')))) FROM v0, rt0 ORDER BY (((((rt0.c0)|(rt0.c1)), (((rt0.c1, rt0.c1, v0.c0))>((rt0.c1, rt0.c0, rt0.c1))), ((NULL) NOT NULL)))>((v0.c0, (((v0.c0, v0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, 0.5426800015681356, NULL)) AND ((rt0.c1, v0.c0, v0.c0))), ((((rt0.c0)AND(rt0.c2)))OR(rt0.c0))))) ASC  NULLS FIRST;
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (CASE WHEN ((((rt0.c1)AND(rt0.c1)))AND(v0.c0)) THEN ((rt0.c0) ISNULL) END) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (CASE WHEN ((((rt0.c1)AND(rt0.c1)))AND(v0.c0)) THEN ((rt0.c0) ISNULL) END))) UNION ALL SELECT * FROM rt0, v0 WHERE (((CASE WHEN ((((rt0.c1)AND(rt0.c1)))AND(v0.c0)) THEN ((rt0.c0) ISNULL) END) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((- (((v0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((- (((v0.c0) NOT NULL)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((- (((v0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CHAR(v0.c0)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CHAR(v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CHAR(v0.c0)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING MAX(rt0.c0 COLLATE NOCASE) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MAX(rt0.c0 COLLATE NOCASE))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MAX(rt0.c0 COLLATE NOCASE)) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING MAX(rt0.c0 COLLATE NOCASE) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MAX(rt0.c0 COLLATE NOCASE))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MAX(rt0.c0 COLLATE NOCASE)) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE ((((((rt0.c0))!=((rt0.c0))))+((((rt0.c2))>((rt0.c0)))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT ((((((rt0.c0))<>((rt0.c0))))+((((rt0.c2))>((rt0.c0)))))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((((((rt0.c0))!=((rt0.c0))))+((((rt0.c2))>((rt0.c0)))))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM v0 NATURAL JOIN rt0 WHERE ((('-1277058095')<(CAST(rt0.c2 AS TEXT)))) UNION SELECT DISTINCT rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM v0 NATURAL JOIN rt0 WHERE ((NOT ((('-1277058095')<(CAST(rt0.c2 AS TEXT)))))) UNION SELECT DISTINCT rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM v0 NOT INDEXED NATURAL JOIN rt0 WHERE ((((('-1277058095')<(CAST(rt0.c2 AS TEXT)))) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM v0 NATURAL JOIN rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((~ ((((rt0.c0, rt0.c2, rt0.c1))<=((rt0.c0, rt0.c2, rt0.c2)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((~ ((((rt0.c0, rt0.c2, rt0.c1))<=((rt0.c0, rt0.c2, rt0.c2)))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((~ ((((rt0.c0, rt0.c2, rt0.c1))<=((rt0.c0, rt0.c2, rt0.c2)))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (~ (rt0.c1)) UNION ALL SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (NOT ((~ (rt0.c1)))) UNION ALL SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (((~ (rt0.c1))) ISNULL);
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (~ (rt0.c1)) UNION ALL SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (NOT ((~ (rt0.c1)))) UNION ALL SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (((~ (rt0.c1))) ISNULL);
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT ALL rt0.c0 FROM rt0 CROSS JOIN v0 ON ((v0.c0) IS FALSE) COLLATE RTRIM;
SELECT rt0.c0 FROM rt0 CROSS JOIN v0 ON ((v0.c0) IS FALSE) COLLATE RTRIM WHERE (((NULL COLLATE BINARY)*(rt0.c2 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0 FROM rt0 CROSS JOIN v0 ON ((v0.c0) IS FALSE) COLLATE RTRIM WHERE ((NOT (((NULL COLLATE BINARY)*(rt0.c2 COLLATE NOCASE))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 CROSS JOIN v0 ON ((v0.c0) IS FALSE) COLLATE RTRIM WHERE (((((NULL COLLATE BINARY)*(rt0.c2 COLLATE NOCASE))) ISNULL));
SELECT ALL rt0.c0 FROM rt0 CROSS JOIN v0 ON ((v0.c0) IS FALSE) COLLATE RTRIM;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((- (TRIM(rt0.c0, rt0.c0)))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((- (TRIM(rt0.c0, rt0.c0)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((- (TRIM(rt0.c0, rt0.c0)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST('k+0NV8' AS NUMERIC)) NOT BETWEEN (2.36185456E8) AND ((((rt0.c1, rt0.c1, rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c0, rt0.c1, rt0.c0)))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((CAST('k+0NV8' AS NUMERIC)) NOT BETWEEN (2.36185456E8) AND ((((rt0.c1, rt0.c1, rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c0, rt0.c1, rt0.c0)))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((CAST('k+0NV8' AS NUMERIC)) NOT BETWEEN (2.36185456E8) AND ((((rt0.c1, rt0.c1, rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c0, rt0.c1, rt0.c0)))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT v0.c0 FROM rt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING NULL UNION ALL SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING ((NULL) ISNULL);
SELECT v0.c0 FROM rt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING NULL UNION ALL SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING ((NULL) ISNULL);
SELECT v0.c0 FROM rt0, v0 GROUP BY v0.c0;
SELECT ALL TOTAL(CASE WHEN CAST(rt0.c1 AS TEXT) THEN rt0.c2 COLLATE RTRIM WHEN CAST(rt0.c0 AS NUMERIC) THEN CAST('725508522' AS BLOB) WHEN ((v0.c0) BETWEEN (rt0.c2) AND (NULL)) THEN v0.c0 COLLATE NOCASE ELSE (v0.c0 IN ()) END) FROM v0, rt0 ORDER BY rt0.c2, ((((json_remove(rt0.c1, v0.c0))OR((~ (rt0.c1)))))OR((+ (v0.c0))));
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (rt0.c1) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (0.3281150562884325) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (0.3281150562884325))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((0.3281150562884325) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c2)<=(x'')))OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2)<=(x'')))OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c2)<=(x'')))OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING SUM(SUM(TOTAL(rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (SUM(SUM(TOTAL(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((SUM(SUM(TOTAL(rt0.c0)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) IS TRUE)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE RTRIM) IS TRUE)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM) IS TRUE)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0)IS(rt0.c1))))>((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c0)IS(rt0.c1))))>((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c0)IS(rt0.c1))))>((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0 WHERE ((((+ (rt0.c1))) NOT BETWEEN (((v0.c0)+(rt0.c2))) AND (rt0.c2 COLLATE RTRIM))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM v0, rt0 WHERE ((NOT ((((+ (rt0.c1))) NOT BETWEEN (((v0.c0)+(rt0.c2))) AND (rt0.c2 COLLATE RTRIM))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM v0, rt0 WHERE ((((((+ (rt0.c1))) NOT BETWEEN (((v0.c0)+(rt0.c2))) AND (rt0.c2 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0 HAVING rt0.c1 COLLATE RTRIM UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0 HAVING (NOT (rt0.c1 COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0 HAVING ((rt0.c1 COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0 HAVING rt0.c1 COLLATE RTRIM UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0 HAVING (NOT (rt0.c1 COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0 HAVING ((rt0.c1 COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0;
SELECT SUM(CAST(((v0.c0)>(v0.c0)) AS BLOB)) FROM v0 ORDER BY CASE (v0.c0 IN ())  WHEN ((v0.c0) ISNULL) THEN (v0.c0 IN ()) ELSE (((v0.c0, 0.22776352647777753, '909183483', v0.c0, v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))) END DESC;
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE ((+ (((v0.c0) IS FALSE)))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT ((+ (((v0.c0) IS FALSE)))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((((+ (((v0.c0) IS FALSE)))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((- ((~ (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((- ((~ (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((- ((~ (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0))==((v0.c0)))) IS TRUE)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0))=((v0.c0)))) IS TRUE)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((((v0.c0))=((v0.c0)))) IS TRUE)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((x''))<>((v0.c0))) COLLATE RTRIM) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((x''))!=((v0.c0))) COLLATE RTRIM))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((x''))<>((v0.c0))) COLLATE RTRIM) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 WHERE (-1.260908501E9) GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (-1.260908501E9))) GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 WHERE (((-1.260908501E9) ISNULL)) GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (json(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (json(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((json(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c1 FROM v0, rt0 WHERE ((CASE v0.c0  WHEN x'8fe5' THEN rt0.c1 WHEN x'' THEN '-4760691' WHEN rt0.c0 THEN rt0.c0 END IN ())) UNION SELECT DISTINCT rt0.c1 FROM v0, rt0 WHERE ((NOT ((CASE v0.c0  WHEN x'8fe5' THEN rt0.c1 WHEN x'' THEN '-4760691' WHEN rt0.c0 THEN rt0.c0 END IN ())))) UNION SELECT DISTINCT rt0.c1 FROM v0, rt0 WHERE ((((CASE v0.c0  WHEN x'8fe5' THEN rt0.c1 WHEN x'' THEN '-4760691' WHEN rt0.c0 THEN rt0.c0 END IN ())) ISNULL));
SELECT DISTINCT rt0.c1 FROM v0, rt0;
SELECT ALL v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt0 WHERE (((('4a' IN ()))IS NOT(((rt0.c2)&(rt0.c2))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, rt0 WHERE ((NOT (((('4a' IN ()))IS NOT(((rt0.c2)&(rt0.c2))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, rt0 WHERE (((((('4a' IN ()))IS NOT(((rt0.c2)&(rt0.c2))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING -793243777 UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (-793243777)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((-793243777) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING -793243777 UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (-793243777)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((-793243777) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1))!=((rt0.c0)))) NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((rt0.c1))!=((rt0.c0)))) NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((((rt0.c1))<>((rt0.c0)))) NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((+ (((v0.c0)=(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((+ (((v0.c0)==(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((+ (((v0.c0)==(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, (rt0.c1 IN ()), NULL)) AND ((((rt0.c0)OR(rt0.c2)), rt0.c2 COLLATE RTRIM, (((rt0.c0, rt0.c0, rt0.c2))<((rt0.c2, rt0.c2, rt0.c2))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, (rt0.c1 IN ()), NULL)) AND ((((rt0.c0)OR(rt0.c2)), rt0.c2 COLLATE RTRIM, (((rt0.c0, rt0.c0, rt0.c2))<((rt0.c2, rt0.c2, rt0.c2))))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, (rt0.c1 IN ()), NULL)) AND ((((rt0.c0)OR(rt0.c2)), rt0.c2 COLLATE RTRIM, (((rt0.c0, rt0.c0, rt0.c2))<((rt0.c2, rt0.c2, rt0.c2))))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2;
SELECT ALL rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2;
SELECT ALL rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0;
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE (((((rt0.c0) NOT NULL)) NOTNULL)) UNION ALL SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((NOT (((((rt0.c0) NOT NULL)) NOTNULL)))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE (((((((rt0.c0) NOT NULL)) NOTNULL)) ISNULL));
SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((0.5118199683519609) BETWEEN ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) AND ((-0.0 IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((0.5118199683519609) BETWEEN ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) AND ((-0.0 IN ())))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((0.5118199683519609) BETWEEN ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) AND ((-0.0 IN ())))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (TIME(COALESCE(rt0.c1, 0.4230513509175877, rt0.c0, rt0.c2), rt0.c1, (rt0.c2 IN ()))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (TIME(COALESCE(rt0.c1, 0.4230513509175877, rt0.c0, rt0.c2), rt0.c1, (rt0.c2 IN ()))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((TIME(COALESCE(rt0.c1, 0.4230513509175877, rt0.c0, rt0.c2), rt0.c1, (rt0.c2 IN ()))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING COUNT(TOTAL(rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (COUNT(TOTAL(rt0.c1)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT(TOTAL(rt0.c1))) ISNULL);
SELECT ALL v0.c0 FROM v0 NOT INDEXED;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE NOCASE)AND(v0.c0 COLLATE RTRIM)))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0 COLLATE NOCASE)AND(v0.c0 COLLATE RTRIM)))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0 COLLATE NOCASE)AND(v0.c0 COLLATE RTRIM)))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM v0 NOT INDEXED;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((HEX(rt0.c2) IN ())) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((HEX(rt0.c2) IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((HEX(rt0.c2) IN ())) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (CAST((((rt0.c1, 0.3281150562884325, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c2))) AS INTEGER)) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST((((rt0.c1, 0.3281150562884325, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c2))) AS INTEGER)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST((((rt0.c1, 0.3281150562884325, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c2))) AS INTEGER)) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0 HAVING v0.c0 UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0 HAVING v0.c0 UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0;
SELECT rt0.c2, rt0.c0 FROM rt0, v0 WHERE (((((v0.c0)OR(rt0.c2)))OR(rt0.c1)) COLLATE NOCASE COLLATE NOCASE) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, v0 WHERE ((NOT (((((v0.c0)OR(rt0.c2)))OR(rt0.c1)) COLLATE NOCASE COLLATE NOCASE))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, v0 WHERE (((((((v0.c0)OR(rt0.c2)))OR(rt0.c1)) COLLATE NOCASE COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c2 END, (+ (NULL)), rt0.c0))!=((((v0.c0) NOT BETWEEN (NULL) AND (rt0.c0)), v0.c0, (v0.c0 IN (rt0.c2)))))) UNION SELECT DISTINCT rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE ((NOT ((((CASE WHEN rt0.c2 THEN rt0.c2 END, (+ (NULL)), rt0.c0))!=((((v0.c0) NOT BETWEEN (NULL) AND (rt0.c0)), v0.c0, (v0.c0 IN (rt0.c2)))))))) UNION SELECT DISTINCT rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE ((((((CASE WHEN rt0.c2 THEN rt0.c2 END, (+ (NULL)), rt0.c0))<>((((v0.c0) NOT BETWEEN (NULL) AND (rt0.c0)), v0.c0, (v0.c0 IN (rt0.c2)))))) ISNULL));
SELECT DISTINCT rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM rt0, v0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c2)GLOB(x'')))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)))AND(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c2)GLOB(x'')))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)))AND(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((rt0.c2)GLOB(x'')))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)))AND(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((0.13034804426158864)=(v0.c0)) IN ()) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((0.13034804426158864)==(v0.c0)) IN ()))) UNION ALL SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING (((((0.13034804426158864)=(v0.c0)) IN ())) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((0.13034804426158864)=(v0.c0)) IN ()) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((0.13034804426158864)==(v0.c0)) IN ()))) UNION ALL SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING (((((0.13034804426158864)=(v0.c0)) IN ())) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (((CAST(rt0.c0 AS BLOB)) NOTNULL)) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (((CAST(rt0.c0 AS BLOB)) NOTNULL)))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((((CAST(rt0.c0 AS BLOB)) NOTNULL)) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (LIKELIHOOD(v0.c0, 0.8538188997610447)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (LIKELIHOOD(v0.c0, 0.8538188997610447)))) UNION SELECT DISTINCT * FROM v0 WHERE (((LIKELIHOOD(v0.c0, 0.8538188997610447)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 WHERE (((load_extension(v0.c0, v0.c0)) NOTNULL)) GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2 UNION SELECT rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT (((load_extension(v0.c0, v0.c0)) NOTNULL)))) GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2 UNION SELECT rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 WHERE (((((load_extension(v0.c0, v0.c0)) NOTNULL)) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c0, rt0.c2;
SELECT v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2 HAVING COUNT(rt0.c1 COLLATE NOCASE) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2 HAVING (NOT (COUNT(rt0.c1 COLLATE NOCASE))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2 HAVING ((COUNT(rt0.c1 COLLATE NOCASE)) ISNULL);
SELECT v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2 HAVING COUNT(rt0.c1 COLLATE NOCASE) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2 HAVING (NOT (COUNT(rt0.c1 COLLATE NOCASE))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2 HAVING ((COUNT(rt0.c1 COLLATE NOCASE)) ISNULL);
SELECT v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c1 AS TEXT) IN (CASE rt0.c1  WHEN '' THEN rt0.c0 ELSE rt0.c0 END, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((CAST(rt0.c1 AS TEXT) IN (CASE rt0.c1  WHEN '' THEN rt0.c0 ELSE rt0.c0 END, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((CAST(rt0.c1 AS TEXT) IN (CASE rt0.c1  WHEN '' THEN rt0.c0 ELSE rt0.c0 END, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) AND ((v0.c0 COLLATE BINARY)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) AND ((v0.c0 COLLATE BINARY)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) AND ((v0.c0 COLLATE BINARY)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE (CAST(TRIM(DISTINCT '-146993009') AS INTEGER)) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE ((NOT (CAST(TRIM(DISTINCT '-146993009') AS INTEGER)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 WHERE (((CAST(TRIM(DISTINCT '-146993009') AS INTEGER)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, v0.c0 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c0, v0.c0;
SELECT ALL rt0.c1, rt0.c0, v0.c0 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c0, v0.c0 HAVING TOTAL(rt0.c1) COLLATE BINARY UNION ALL SELECT ALL rt0.c1, rt0.c0, v0.c0 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c0, v0.c0 HAVING (NOT (TOTAL(rt0.c1) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c1, rt0.c0, v0.c0 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c0, v0.c0 HAVING ((TOTAL(rt0.c1) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c1, rt0.c0, v0.c0 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c0, v0.c0;
SELECT ALL rt0.c1, rt0.c0, v0.c0 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c0, v0.c0 HAVING TOTAL(rt0.c1) COLLATE BINARY UNION ALL SELECT ALL rt0.c1, rt0.c0, v0.c0 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c0, v0.c0 HAVING (NOT (TOTAL(rt0.c1) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c1, rt0.c0, v0.c0 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c0, v0.c0 HAVING ((TOTAL(rt0.c1) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c1, rt0.c0, v0.c0 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c0, v0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0)<=(v0.c0))) NOTNULL)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)<=(v0.c0))) NOTNULL)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)<=(v0.c0))) NOTNULL)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0)) BETWEEN (((+ (v0.c0)))) AND ((x'')))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN (((+ (v0.c0)))) AND ((x'')))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0)) BETWEEN (((+ (v0.c0)))) AND ((x'')))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 WHERE (((((((((((v0.c0) NOT NULL))OR(rt0.c0 COLLATE NOCASE)))OR((~ (rt0.c0)))))OR(HEX(rt0.c1))))AND(NULL))) GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 WHERE ((NOT (((((((((((v0.c0) NOT NULL))OR(rt0.c0 COLLATE NOCASE)))OR((~ (rt0.c0)))))OR(HEX(rt0.c1))))AND(NULL))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 WHERE (((((((((((((v0.c0) NOT NULL))OR(rt0.c0 COLLATE NOCASE)))OR((~ (rt0.c0)))))OR(HEX(rt0.c1))))AND(NULL))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(((v0.c0)AND(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(((v0.c0)AND(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(((v0.c0)AND(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(((v0.c0)AND(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(((v0.c0)AND(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(((v0.c0)AND(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 WHERE (IFNULL(((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)), ((rt0.c1)&(rt0.c1)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 WHERE ((NOT (IFNULL(((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)), ((rt0.c1)&(rt0.c1)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 WHERE (((IFNULL(((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)), ((rt0.c1)&(rt0.c1)))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM v0, rt0 WHERE (CASE LIKELY(DISTINCT v0.c0)  WHEN ((v0.c0) IS TRUE) THEN (- (rt0.c2)) WHEN rt0.c1 THEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) WHEN ((rt0.c2) IS TRUE) THEN ((rt0.c2) IS FALSE) ELSE (rt0.c0 IN ()) END) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM v0, rt0 WHERE ((NOT (CASE LIKELY(DISTINCT v0.c0)  WHEN ((v0.c0) IS TRUE) THEN (- (rt0.c2)) WHEN rt0.c1 THEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) WHEN ((rt0.c2) IS TRUE) THEN ((rt0.c2) IS FALSE) ELSE (rt0.c0 IN ()) END))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM v0, rt0 WHERE (((CASE LIKELY(DISTINCT v0.c0)  WHEN ((v0.c0) IS TRUE) THEN (- (rt0.c2)) WHEN rt0.c1 THEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) WHEN ((rt0.c2) IS TRUE) THEN ((rt0.c2) IS FALSE) ELSE (rt0.c0 IN ()) END) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(SUM(v0.c0)))GLOB(AVG(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((MAX(SUM(v0.c0)))GLOB(AVG(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((MAX(SUM(v0.c0)))GLOB(AVG(v0.c0)))) ISNULL);
SELECT v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0;
SELECT ALL v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (((NULL) IS TRUE)) UNION ALL SELECT v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (((NULL) IS TRUE)))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (((((NULL) IS TRUE)) ISNULL));
SELECT v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c2 FROM v0, rt0 WHERE ((((- (rt0.c0))) BETWEEN (NULL) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0))))) UNION SELECT DISTINCT rt0.c2 FROM v0, rt0 WHERE ((NOT ((((- (rt0.c0))) BETWEEN (NULL) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT rt0.c2 FROM v0, rt0 WHERE ((((((- (rt0.c0))) BETWEEN (NULL) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((('0.23659715474143272'))=((v0.c0)))) BETWEEN ((NOT (v0.c0))) AND ((v0.c0 IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((('0.23659715474143272'))==((v0.c0)))) BETWEEN ((NOT (v0.c0))) AND ((v0.c0 IN ())))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((('0.23659715474143272'))==((v0.c0)))) BETWEEN ((NOT (v0.c0))) AND ((v0.c0 IN ())))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING ((((v0.c0)/(1.459124353E9))) NOTNULL) UNION ALL SELECT ALL v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING (NOT (((((v0.c0)/(1.459124353E9))) NOTNULL))) UNION ALL SELECT ALL v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING ((((((v0.c0)/(1.459124353E9))) NOTNULL)) ISNULL);
SELECT v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING ((((v0.c0)/(1.459124353E9))) NOTNULL) UNION ALL SELECT ALL v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING (NOT (((((v0.c0)/(1.459124353E9))) NOTNULL))) UNION ALL SELECT ALL v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING ((((((v0.c0)/(1.459124353E9))) NOTNULL)) ISNULL);
SELECT v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2;
SELECT v0.c0 FROM v0 FULL OUTER JOIN rt0 ON NULL;
SELECT v0.c0 FROM v0 FULL OUTER JOIN rt0 ON NULL WHERE ((((((rt0.c2))<=((rt0.c0)))) BETWEEN (CAST(v0.c0 AS BLOB)) AND (((v0.c0)=(rt0.c1))))) UNION ALL SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN rt0 ON NULL WHERE ((NOT ((((((rt0.c2))<=((rt0.c0)))) BETWEEN (CAST(v0.c0 AS BLOB)) AND (((v0.c0)==(rt0.c1))))))) UNION ALL SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN rt0 ON NULL WHERE ((((((((rt0.c2))<=((rt0.c0)))) BETWEEN (CAST(v0.c0 AS BLOB)) AND (((v0.c0)=(rt0.c1))))) ISNULL));
SELECT v0.c0 FROM v0 FULL OUTER JOIN rt0 ON NULL;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END AS REAL)) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END AS REAL)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END AS REAL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 WHERE (((((NOT (rt0.c2)), ((v0.c0)||(rt0.c0)), rt0.c1))<=((((rt0.c1)OR(rt0.c1)), LTRIM(rt0.c1, v0.c0), ((rt0.c2) NOTNULL))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 WHERE ((NOT (((((NOT (rt0.c2)), ((v0.c0)||(rt0.c0)), rt0.c1))<=((((rt0.c1)OR(rt0.c1)), LTRIM(rt0.c1, v0.c0), ((rt0.c2) NOTNULL))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 WHERE (((((((NOT (rt0.c2)), ((v0.c0)||(rt0.c0)), rt0.c1))<=((((rt0.c1)OR(rt0.c1)), LTRIM(rt0.c1, v0.c0), ((rt0.c2) NOTNULL))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MAX(MAX(TOTAL(SUM(rt0.c2))))) NOT BETWEEN (LIKELIHOOD(DISTINCT GROUP_CONCAT(rt0.c1), 0.9678901926782857)) AND (TOTAL(rt0.c2))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((MAX(MAX(TOTAL(SUM(rt0.c2))))) NOT BETWEEN (LIKELIHOOD(DISTINCT GROUP_CONCAT(rt0.c1), 0.9678901926782857)) AND (TOTAL(rt0.c2))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((MAX(MAX(TOTAL(SUM(rt0.c2))))) NOT BETWEEN (LIKELIHOOD(DISTINCT GROUP_CONCAT(rt0.c1), 0.9678901926782857)) AND (TOTAL(rt0.c2)))) ISNULL);
SELECT ALL SUM(CASE WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c0 END) FROM rt0 ORDER BY (((((~ (rt0.c2)))AND(((rt0.c0) IS TRUE))))AND(rt0.c0))  NULLS LAST, LIKELY(TRIM(rt0.c1, rt0.c0)) ASC  NULLS FIRST;
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c0)<<(v0.c0)) COLLATE NOCASE;
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c0)<<(v0.c0)) COLLATE NOCASE WHERE (CASE WHEN (v0.c0 IN ()) THEN ((rt0.c1)<=(rt0.c1)) WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c1)=('0.34643373005435096')) WHEN rt0.c1 THEN 0X1a4cfba9 WHEN ((rt0.c2)<=('-43153251')) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END WHEN (- (v0.c0)) THEN ((rt0.c2) NOTNULL) ELSE ((rt0.c2) IS FALSE) END) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c0)<<(v0.c0)) COLLATE NOCASE WHERE ((NOT (CASE WHEN (v0.c0 IN ()) THEN ((rt0.c1)<=(rt0.c1)) WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c1)=('0.34643373005435096')) WHEN rt0.c1 THEN 0x1a4cfba9 WHEN ((rt0.c2)<=('-43153251')) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END WHEN (- (v0.c0)) THEN ((rt0.c2) NOTNULL) ELSE ((rt0.c2) IS FALSE) END))) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c0)<<(v0.c0)) COLLATE NOCASE WHERE (((CASE WHEN (v0.c0 IN ()) THEN ((rt0.c1)<=(rt0.c1)) WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c1)=('0.34643373005435096')) WHEN rt0.c1 THEN 0X1a4cfba9 WHEN ((rt0.c2)<=('-43153251')) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END WHEN (- (v0.c0)) THEN ((rt0.c2) NOTNULL) ELSE ((rt0.c2) IS FALSE) END) ISNULL));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c0)<<(v0.c0)) COLLATE NOCASE;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS BLOB)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(rt0.c0 COLLATE BINARY AS BLOB)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c0 COLLATE BINARY AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((UPPER(DISTINCT NULL)) IS TRUE)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((UPPER(DISTINCT NULL)) IS TRUE)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((UPPER(DISTINCT NULL)) IS TRUE)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(v0.c0 COLLATE NOCASE) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(v0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(v0.c0 COLLATE NOCASE)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(v0.c0 COLLATE NOCASE) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(v0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(v0.c0 COLLATE NOCASE)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((0X2b3e61aa)<<(NULL))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((0x2b3e61aa)<<(NULL))))) UNION ALL SELECT * FROM v0 WHERE (((((0X2b3e61aa)<<(NULL))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS REAL)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS REAL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS REAL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0 COLLATE RTRIM) NOT BETWEEN (((x'd091')==(v0.c0))) AND (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE RTRIM) NOT BETWEEN (((x'd091')==(v0.c0))) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE RTRIM) NOT BETWEEN (((x'd091')==(v0.c0))) AND (v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(HEX(MAX(v0.c0)) AS TEXT) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(HEX(MAX(v0.c0)) AS TEXT))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(HEX(MAX(v0.c0)) AS TEXT)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(HEX(MAX(v0.c0)) AS TEXT) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(HEX(MAX(v0.c0)) AS TEXT))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(HEX(MAX(v0.c0)) AS TEXT)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN ((NULL) IS TRUE) THEN ((rt0.c2)<=(rt0.c2)) ELSE rt0.c2 END) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (CASE WHEN ((NULL) IS TRUE) THEN ((rt0.c2)<=(rt0.c2)) ELSE rt0.c2 END))) UNION ALL SELECT * FROM rt0, v0 WHERE (((CASE WHEN ((NULL) IS TRUE) THEN ((rt0.c2)<=(rt0.c2)) ELSE rt0.c2 END) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (CHANGES() COLLATE BINARY COLLATE NOCASE) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (CHANGES() COLLATE BINARY COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CHANGES() COLLATE BINARY COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (~ (((((v0.c0)AND(rt0.c2)))OR(-4760691.0)))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0;
SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (~ (((((v0.c0)AND(rt0.c2)))OR(-4760691.0)))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (~ (((((v0.c0)AND(rt0.c2)))OR(-4760691.0)))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (~ (((((v0.c0)AND(rt0.c2)))OR(-4760691.0)))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (~ (((((v0.c0)AND(rt0.c2)))OR(-4760691.0)))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0;
SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (~ (((((v0.c0)AND(rt0.c2)))OR(-4760691.0)))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (~ (((((v0.c0)AND(rt0.c2)))OR(-4760691.0)))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (~ (((((v0.c0)AND(rt0.c2)))OR(-4760691.0)))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (~ (((((v0.c0)AND(rt0.c2)))OR(-4760691.0)))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0;
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE ('I%KTE&pf졐') UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT ('I%KTE&pf졐'))) UNION ALL SELECT * FROM rt0, v0 WHERE ((('I%KTE&pf졐') ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT v0.c0 FROM rt0, v0;
SELECT DISTINCT v0.c0 FROM rt0, v0 WHERE (json_insert(((NULL) NOT BETWEEN (rt0.c2) AND (v0.c0)), (v0.c0 IN ()), CAST(rt0.c2 AS INTEGER), (NOT (rt0.c1)), (((rt0.c0, v0.c0, rt0.c2))>=((v0.c0, '0.5118199683519609', rt0.c0))))) UNION SELECT DISTINCT v0.c0 FROM rt0, v0 WHERE ((NOT (json_insert(((NULL) NOT BETWEEN (rt0.c2) AND (v0.c0)), (v0.c0 IN ()), CAST(rt0.c2 AS INTEGER), (NOT (rt0.c1)), (((rt0.c0, v0.c0, rt0.c2))>=((v0.c0, '0.5118199683519609', rt0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM rt0, v0 WHERE (((json_insert(((NULL) NOT BETWEEN (rt0.c2) AND (v0.c0)), (v0.c0 IN ()), CAST(rt0.c2 AS INTEGER), (NOT (rt0.c1)), (((rt0.c0, v0.c0, rt0.c2))>=((v0.c0, '0.5118199683519609', rt0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM rt0, v0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c1) NOTNULL) COLLATE RTRIM) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c1) NOTNULL) COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c1) NOTNULL) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((COUNT(SUM(rt0.c2))))<((rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ((((COUNT(SUM(rt0.c2))))<((rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((((COUNT(SUM(rt0.c2))))<((rt0.c0)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((LAST_INSERT_ROWID())<>(CAST(rt0.c1 AS TEXT)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((LAST_INSERT_ROWID())!=(CAST(rt0.c1 AS TEXT)))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((LAST_INSERT_ROWID())<>(CAST(rt0.c1 AS TEXT)))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (LOWER(DISTINCT MIN(rt0.c1, rt0.c1))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (LOWER(DISTINCT MIN(rt0.c1, rt0.c1))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((LOWER(DISTINCT MIN(rt0.c1, rt0.c1))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((((rt0.c0)<(rt0.c2))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND (CAST(rt0.c1 AS TEXT)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0)<(rt0.c2))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND (CAST(rt0.c1 AS TEXT)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((((rt0.c0)<(rt0.c2))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND (CAST(rt0.c1 AS TEXT)))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0 HAVING MIN(((v0.c0)>=(v0.c0))) UNION ALL SELECT rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0 HAVING (NOT (MIN(((v0.c0)>=(v0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0 HAVING ((MIN(((v0.c0)>=(v0.c0)))) ISNULL);
SELECT rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0 HAVING MIN(((v0.c0)>=(v0.c0))) UNION ALL SELECT rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0 HAVING (NOT (MIN(((v0.c0)>=(v0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0 HAVING ((MIN(((v0.c0)>=(v0.c0)))) ISNULL);
SELECT rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (0.05064138585458544) UNION ALL SELECT * FROM v0 WHERE ((NOT (0.05064138585458544))) UNION ALL SELECT ALL * FROM v0 WHERE (((0.05064138585458544) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((- (rt0.c2)) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((- (rt0.c2)) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((- (rt0.c2)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((+ ((+ (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((+ ((+ (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((+ ((+ (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(((((((((v0.c0)AND(v0.c0)))AND(SUM(v0.c0))))AND(TOTAL('l'))))AND(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(((((((((v0.c0)AND(v0.c0)))AND(SUM(v0.c0))))AND(TOTAL('l'))))AND(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(((((((((v0.c0)AND(v0.c0)))AND(SUM(v0.c0))))AND(TOTAL('l'))))AND(v0.c0)))) ISNULL);
SELECT rt0.c1 FROM v0 LEFT OUTER JOIN rt0 ON x'';
SELECT rt0.c1 FROM v0 LEFT OUTER JOIN rt0 ON x'' WHERE ((((rt0.c0)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)) AND ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))))) UNION ALL SELECT rt0.c1 FROM v0 LEFT OUTER JOIN rt0 ON x'' WHERE ((NOT ((((rt0.c0)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)) AND ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))))))) UNION ALL SELECT rt0.c1 FROM v0 LEFT OUTER JOIN rt0 ON x'' WHERE ((((((rt0.c0)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)) AND ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))))) ISNULL));
SELECT rt0.c1 FROM v0 LEFT OUTER JOIN rt0 ON x'';
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (JULIANDAY('' COLLATE RTRIM, (+ (v0.c0)), CAST('1406910806' AS REAL))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (JULIANDAY('' COLLATE RTRIM, (+ (v0.c0)), CAST('1406910806' AS REAL))))) UNION SELECT DISTINCT * FROM v0 WHERE (((JULIANDAY('' COLLATE RTRIM, (+ (v0.c0)), CAST('1406910806' AS REAL))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (rt0.c1) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM rt0, v0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END)GLOB(-578928770))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 END)GLOB(-578928770))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 END)GLOB(-578928770))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((((5.92646152E8)OR(rt0.c1)))AND(((NULL)GLOB(rt0.c2))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((5.92646152E8)OR(rt0.c1)))AND(((NULL)GLOB(rt0.c2))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((((5.92646152E8)OR(rt0.c1)))AND(((NULL)GLOB(rt0.c2))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((~ (TRIM(rt0.c0, rt0.c1)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((~ (TRIM(rt0.c0, rt0.c1)))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((((~ (TRIM(rt0.c0, rt0.c1)))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 WHERE (((((((rt0.c1)OR(v0.c0)))AND('g')))OR(''))) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 WHERE ((NOT (((((((rt0.c1)OR(v0.c0)))AND('g')))OR(''))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 WHERE (((((((((rt0.c1)OR(v0.c0)))AND('g')))OR(''))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0 FROM rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END AS REAL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END AS REAL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END AS REAL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT MIN(((((rt0.c1)>>(rt0.c2))) NOT NULL)) FROM rt0, v0 ORDER BY ((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)) COLLATE NOCASE ASC, CASE WHEN ((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN load_extension(rt0.c1) WHEN (((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN json_patch(rt0.c1, 0xffffffffc8b32277) WHEN QUOTE(NULL) THEN DATETIME(rt0.c1, v0.c0, rt0.c1) END;
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE ('790555927') UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT ('790555927'))) UNION ALL SELECT * FROM v0, rt0 WHERE ((('790555927') ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON UPPER(rt0.c1 COLLATE BINARY);
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON UPPER(rt0.c1 COLLATE BINARY) WHERE (v0.c0) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON UPPER(rt0.c1 COLLATE BINARY) WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON UPPER(rt0.c1 COLLATE BINARY) WHERE (((v0.c0) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON UPPER(rt0.c1 COLLATE BINARY);
SELECT rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c1) ISNULL))&((('-628763747')||(rt0.c0)))) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c1) ISNULL))&((('-628763747')||(rt0.c0)))) WHERE ((((NOT (v0.c0))) BETWEEN ((+ (rt0.c1))) AND ((rt0.c1 IN ())))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c1) ISNULL))&((('-628763747')||(rt0.c0)))) WHERE ((NOT ((((NOT (v0.c0))) BETWEEN ((+ (rt0.c1))) AND ((rt0.c1 IN ())))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c1) ISNULL))&((('-628763747')||(rt0.c0)))) WHERE ((((((NOT (v0.c0))) BETWEEN ((+ (rt0.c1))) AND ((rt0.c1 IN ())))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c1) ISNULL))&((('-628763747')||(rt0.c0)))) GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((rt0.c2) NOT NULL) IN (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((((rt0.c2) NOT NULL) IN (COUNT(*))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((((rt0.c2) NOT NULL) IN (COUNT(*)))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((rt0.c2) NOT NULL) IN (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((((rt0.c2) NOT NULL) IN (COUNT(*))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((((rt0.c2) NOT NULL) IN (COUNT(*)))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT v0.c0 FROM v0, rt0;
SELECT v0.c0 FROM v0, rt0 WHERE ((+ (((rt0.c2) NOTNULL)))) UNION ALL SELECT ALL v0.c0 FROM v0, rt0 WHERE ((NOT ((+ (((rt0.c2) NOTNULL)))))) UNION ALL SELECT v0.c0 FROM v0, rt0 WHERE ((((+ (((rt0.c2) NOTNULL)))) ISNULL));
SELECT v0.c0 FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((+ ((~ (rt0.c0))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((+ ((~ (rt0.c0))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((+ ((~ (rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(MIN(MIN(v0.c0)) COLLATE NOCASE) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(MIN(MIN(v0.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(MIN(MIN(v0.c0)) COLLATE NOCASE)) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (SQLITE_VERSION()) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (SQLITE_VERSION()))) UNION ALL SELECT * FROM rt0, v0 WHERE (((SQLITE_VERSION()) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 WHERE (((((v0.c0) IS TRUE))=(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) GROUP BY rt0.c0, v0.c0, rt0.c1 UNION SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (((((v0.c0) IS TRUE))==(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))))) GROUP BY rt0.c0, v0.c0, rt0.c1 UNION SELECT rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 WHERE (((((((v0.c0) IS TRUE))=(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING TOTAL((rt0.c0 IN ())) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (TOTAL((rt0.c0 IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((TOTAL((rt0.c0 IN ()))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING TOTAL((rt0.c0 IN ())) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (TOTAL((rt0.c0 IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((TOTAL((rt0.c0 IN ()))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE ((NOT ('J[c৻ '))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT ((NOT ('J[c৻ '))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((NOT ('J[c৻ '))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON GLOB((NULL IN ()), ((((((((v0.c0)AND(v0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)));
SELECT DISTINCT rt0.c1, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON GLOB((NULL IN ()), ((((((((v0.c0)AND(v0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2))) WHERE (0Xffffffffb864ddd3) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON GLOB((NULL IN ()), ((((((((v0.c0)AND(v0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2))) WHERE ((NOT (0xffffffffb864ddd3))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON GLOB((NULL IN ()), ((((((((v0.c0)AND(v0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2))) WHERE (((0xffffffffb864ddd3) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON GLOB((NULL IN ()), ((((((((v0.c0)AND(v0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)));
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)>>(((rt0.c1)<=(rt0.c2))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE NOCASE)>>(((rt0.c1)<=(rt0.c2))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c0 COLLATE NOCASE)>>(((rt0.c1)<=(rt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(CASE COUNT(v0.c0)  WHEN v0.c0 THEN v0.c0 ELSE -1260908501 END) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(CASE COUNT(v0.c0)  WHEN v0.c0 THEN v0.c0 ELSE -1260908501 END))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(CASE COUNT(v0.c0)  WHEN v0.c0 THEN v0.c0 ELSE -1260908501 END)) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c0) IS FALSE) IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0) IS FALSE) IN ())))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c0) IS FALSE) IN ())) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((((rt0.c1)+(v0.c0)))OR(v0.c0)))AND((rt0.c1 IN (v0.c0))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((((rt0.c1)+(v0.c0)))OR(v0.c0)))AND((rt0.c1 IN (v0.c0))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((((rt0.c1)+(v0.c0)))OR(v0.c0)))AND((rt0.c1 IN (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON (((((((((rt0.c2)AND(rt0.c0)))AND(v0.c0)))AND(rt0.c1)))OR(v0.c0)) IN (((v0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), v0.c0)) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON (((((((((rt0.c2)AND(rt0.c0)))AND(v0.c0)))AND(rt0.c1)))OR(v0.c0)) IN (((v0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), v0.c0)) WHERE ((((+ (rt0.c2)))|(v0.c0))) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1 UNION SELECT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON (((((((((rt0.c2)AND(rt0.c0)))AND(v0.c0)))AND(rt0.c1)))OR(v0.c0)) IN (((v0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), v0.c0)) WHERE ((NOT ((((+ (rt0.c2)))|(v0.c0))))) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON (((((((((rt0.c2)AND(rt0.c0)))AND(v0.c0)))AND(rt0.c1)))OR(v0.c0)) IN (((v0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), v0.c0)) WHERE ((((((+ (rt0.c2)))|(v0.c0))) ISNULL)) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON (((((((((rt0.c2)AND(rt0.c0)))AND(v0.c0)))AND(rt0.c1)))OR(v0.c0)) IN (((v0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), v0.c0)) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE ((NOT (rt0.c1)) COLLATE NOCASE) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT ((NOT (rt0.c1)) COLLATE NOCASE))) UNION ALL SELECT * FROM v0, rt0 WHERE ((((NOT (rt0.c1)) COLLATE NOCASE) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((rt0.c0 IN ())) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((rt0.c0 IN ())))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c0 IN ())) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING MAX(AVG(COUNT(*))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (MAX(AVG(COUNT(*))))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING ((MAX(AVG(COUNT(*)))) ISNULL);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON CASE WHEN (rt0.c0 IN ()) THEN (NOT (rt0.c1)) ELSE (((v0.c0, v0.c0, rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, v0.c0, v0.c0, rt0.c2, v0.c0)) AND ((x'', rt0.c2, v0.c0, v0.c0, v0.c0))) END;
SELECT * FROM rt0 CROSS JOIN v0 ON CASE WHEN (rt0.c0 IN ()) THEN (NOT (rt0.c1)) ELSE (((v0.c0, v0.c0, rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, v0.c0, v0.c0, rt0.c2, v0.c0)) AND ((x'', rt0.c2, v0.c0, v0.c0, v0.c0))) END WHERE (CAST(((NULL)<>(rt0.c0)) AS BLOB)) UNION ALL SELECT ALL * FROM rt0 CROSS JOIN v0 ON CASE WHEN (rt0.c0 IN ()) THEN (NOT (rt0.c1)) ELSE (((v0.c0, v0.c0, rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, v0.c0, v0.c0, rt0.c2, v0.c0)) AND ((x'', rt0.c2, v0.c0, v0.c0, v0.c0))) END WHERE ((NOT (CAST(((NULL)!=(rt0.c0)) AS BLOB)))) UNION ALL SELECT * FROM rt0 CROSS JOIN v0 ON CASE WHEN (rt0.c0 IN ()) THEN (NOT (rt0.c1)) ELSE (((v0.c0, v0.c0, rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, v0.c0, v0.c0, rt0.c2, v0.c0)) AND ((x'', rt0.c2, v0.c0, v0.c0, v0.c0))) END WHERE (((CAST(((NULL)<>(rt0.c0)) AS BLOB)) ISNULL));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON CASE WHEN (rt0.c0 IN ()) THEN (NOT (rt0.c1)) ELSE (((v0.c0, v0.c0, rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, v0.c0, v0.c0, rt0.c2, v0.c0)) AND ((x'', rt0.c2, v0.c0, v0.c0, v0.c0))) END;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((NULL IN ())) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((NULL IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((NULL IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0 IN ()))AND(CAST(v0.c0 AS BLOB))))AND(CASE WHEN v0.c0 THEN v0.c0 END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0 IN ()))AND(CAST(v0.c0 AS BLOB))))AND(CASE WHEN v0.c0 THEN v0.c0 END))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((((v0.c0 IN ()))AND(CAST(v0.c0 AS BLOB))))AND(CASE WHEN v0.c0 THEN v0.c0 END))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0 HAVING v0.c0 UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0 HAVING ((v0.c0) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0 HAVING v0.c0 UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0 HAVING ((v0.c0) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0;
SELECT * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE ((- (CASE rt0.c0  WHEN v0.c0 THEN rt0.c2 END))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT ((- (CASE rt0.c0  WHEN v0.c0 THEN rt0.c2 END))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((- (CASE rt0.c0  WHEN v0.c0 THEN rt0.c2 END))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2) NOT NULL))<>(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2) NOT NULL))<>(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2) NOT NULL))!=(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM rt0, v0 WHERE (((((rt0.c0) IS TRUE)) NOTNULL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM rt0, v0 WHERE ((NOT (((((rt0.c0) IS TRUE)) NOTNULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM rt0, v0 WHERE (((((((rt0.c0) IS TRUE)) NOTNULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) BETWEEN (MAX(0.34695982884121246)) AND (GROUP_CONCAT(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((v0.c0) BETWEEN (MAX(0.34695982884121246)) AND (GROUP_CONCAT(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0) BETWEEN (MAX(0.34695982884121246)) AND (GROUP_CONCAT(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) BETWEEN (MAX(0.34695982884121246)) AND (GROUP_CONCAT(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((v0.c0) BETWEEN (MAX(0.34695982884121246)) AND (GROUP_CONCAT(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0) BETWEEN (MAX(0.34695982884121246)) AND (GROUP_CONCAT(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((((rt0.c2 IN ()))AND(CAST(rt0.c2 AS NUMERIC))))OR((- (rt0.c0)))))OR(((rt0.c1)IS NOT(rt0.c2)))))AND(CAST(rt0.c0 AS INTEGER)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((((((rt0.c2 IN ()))AND(CAST(rt0.c2 AS NUMERIC))))OR((- (rt0.c0)))))OR(((rt0.c1)IS NOT(rt0.c2)))))AND(CAST(rt0.c0 AS INTEGER)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((((((rt0.c2 IN ()))AND(CAST(rt0.c2 AS NUMERIC))))OR((- (rt0.c0)))))OR(((rt0.c1)IS NOT(rt0.c2)))))AND(CAST(rt0.c0 AS INTEGER)))) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (TOTAL_CHANGES()) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (TOTAL_CHANGES()))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) IN ((~ (rt0.c2))))) GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) IN ((~ (rt0.c2))))))) GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) IN ((~ (rt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TRIM(((AVG(v0.c0))<(AVG(v0.c0))), CAST(v0.c0 AS NUMERIC)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TRIM(((AVG(v0.c0))<(AVG(v0.c0))), CAST(v0.c0 AS NUMERIC)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TRIM(((AVG(v0.c0))<(AVG(v0.c0))), CAST(v0.c0 AS NUMERIC))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TRIM(((AVG(v0.c0))<(AVG(v0.c0))), CAST(v0.c0 AS NUMERIC)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TRIM(((AVG(v0.c0))<(AVG(v0.c0))), CAST(v0.c0 AS NUMERIC)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TRIM(((AVG(v0.c0))<(AVG(v0.c0))), CAST(v0.c0 AS NUMERIC))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)AND(v0.c0)))IS NOT(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN '0u' THEN v0.c0 ELSE v0.c0 END))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)AND(v0.c0)))IS NOT(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN '0u' THEN v0.c0 ELSE v0.c0 END))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))IS NOT(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN '0u' THEN v0.c0 ELSE v0.c0 END))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0)>>(v0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0)>>(v0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)>>(v0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN 1345871869 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) AND ((v0.c0 COLLATE BINARY)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN 1345871869 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) AND ((v0.c0 COLLATE BINARY)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN 1345871869 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) AND ((v0.c0 COLLATE BINARY)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING SUM(v0.c0 COLLATE BINARY) UNION ALL SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING (NOT (SUM(v0.c0 COLLATE BINARY))) UNION ALL SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING ((SUM(v0.c0 COLLATE BINARY)) ISNULL);
SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING SUM(v0.c0 COLLATE BINARY) UNION ALL SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING (NOT (SUM(v0.c0 COLLATE BINARY))) UNION ALL SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING ((SUM(v0.c0 COLLATE BINARY)) ISNULL);
SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((CASE v0.c0  WHEN 0.7088519318597177 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)>>(((v0.c0)==(x'175c'))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN 0.7088519318597177 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)>>(((v0.c0)=(x'175c'))))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((CASE v0.c0  WHEN 0.7088519318597177 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)>>(((v0.c0)=(x'175c'))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN 0.7500676385624974 THEN rt0.c0 ELSE rt0.c1 END)AND(((rt0.c2)/(rt0.c1)))))AND(rt0.c0 COLLATE BINARY)))AND(rt0.c2 COLLATE BINARY)))OR(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN 0.7500676385624974 THEN rt0.c0 ELSE rt0.c1 END)AND(((rt0.c2)/(rt0.c1)))))AND(rt0.c0 COLLATE BINARY)))AND(rt0.c2 COLLATE BINARY)))OR(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN 0.7500676385624974 THEN rt0.c0 ELSE rt0.c1 END)AND(((rt0.c2)/(rt0.c1)))))AND(rt0.c0 COLLATE BINARY)))AND(rt0.c2 COLLATE BINARY)))OR(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt0 WHERE ((NOT (LTRIM(rt0.c1, rt0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, rt0 WHERE ((NOT ((NOT (LTRIM(rt0.c1, rt0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, rt0 WHERE ((((NOT (LTRIM(rt0.c1, rt0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT ALL v0.c0, rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c2, x'', CASE WHEN x'327a' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END))<>(((~ (rt0.c1)), ((rt0.c0)>>(v0.c0)), ROUND(rt0.c0, rt0.c0)))) GROUP BY v0.c0, rt0.c0;
SELECT v0.c0, rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c2, x'', CASE WHEN x'327a' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END))!=(((~ (rt0.c1)), ((rt0.c0)>>(v0.c0)), ROUND(rt0.c0, rt0.c0)))) GROUP BY v0.c0, rt0.c0 HAVING AVG((MAX(rt0.c2) IN ())) UNION ALL SELECT v0.c0, rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c2, x'', CASE WHEN x'327a' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END))!=(((~ (rt0.c1)), ((rt0.c0)>>(v0.c0)), ROUND(rt0.c0, rt0.c0)))) GROUP BY v0.c0, rt0.c0 HAVING (NOT (AVG((MAX(rt0.c2) IN ())))) UNION ALL SELECT ALL v0.c0, rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c2, x'', CASE WHEN x'327a' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END))!=(((~ (rt0.c1)), ((rt0.c0)>>(v0.c0)), ROUND(rt0.c0, rt0.c0)))) GROUP BY v0.c0, rt0.c0 HAVING ((AVG((MAX(rt0.c2) IN ()))) ISNULL);
SELECT ALL v0.c0, rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c2, x'', CASE WHEN x'327a' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END))<>(((~ (rt0.c1)), ((rt0.c0)>>(v0.c0)), ROUND(rt0.c0, rt0.c0)))) GROUP BY v0.c0, rt0.c0;
SELECT v0.c0, rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c2, x'', CASE WHEN x'327a' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END))!=(((~ (rt0.c1)), ((rt0.c0)>>(v0.c0)), ROUND(rt0.c0, rt0.c0)))) GROUP BY v0.c0, rt0.c0 HAVING AVG((MAX(rt0.c2) IN ())) UNION ALL SELECT v0.c0, rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c2, x'', CASE WHEN x'327a' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END))!=(((~ (rt0.c1)), ((rt0.c0)>>(v0.c0)), ROUND(rt0.c0, rt0.c0)))) GROUP BY v0.c0, rt0.c0 HAVING (NOT (AVG((MAX(rt0.c2) IN ())))) UNION ALL SELECT ALL v0.c0, rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c2, x'', CASE WHEN x'327a' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END))!=(((~ (rt0.c1)), ((rt0.c0)>>(v0.c0)), ROUND(rt0.c0, rt0.c0)))) GROUP BY v0.c0, rt0.c0 HAVING ((AVG((MAX(rt0.c2) IN ()))) ISNULL);
SELECT ALL v0.c0, rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c2, x'', CASE WHEN x'327a' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END))<>(((~ (rt0.c1)), ((rt0.c0)>>(v0.c0)), ROUND(rt0.c0, rt0.c0)))) GROUP BY v0.c0, rt0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c2) IS FALSE)) NOT BETWEEN (((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c2) IS FALSE)) NOT BETWEEN (((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c2) IS FALSE)) NOT BETWEEN (((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((+ (DATE(rt0.c2, rt0.c0, rt0.c1)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((+ (DATE(rt0.c2, rt0.c0, rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((+ (DATE(rt0.c2, rt0.c0, rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE CAST(v0.c0 AS NUMERIC)  WHEN (NULL IN ()) THEN CAST(v0.c0 AS NUMERIC) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE CAST(v0.c0 AS NUMERIC)  WHEN (NULL IN ()) THEN CAST(v0.c0 AS NUMERIC) END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CASE CAST(v0.c0 AS NUMERIC)  WHEN (NULL IN ()) THEN CAST(v0.c0 AS NUMERIC) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(COUNT(v0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(COUNT(v0.c0)) COLLATE RTRIM))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(COUNT(v0.c0)) COLLATE RTRIM)) ISNULL);
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN CAST(rt0.c0 AS REAL) THEN CAST(rt0.c0 AS INTEGER) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))) THEN ((rt0.c1)%('-484110246')) WHEN ((v0.c0)GLOB(rt0.c2)) THEN (+ ('592646152')) ELSE ((((rt0.c2)OR(NULL)))AND(rt0.c1)) END) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (CASE WHEN CAST(rt0.c0 AS REAL) THEN CAST(rt0.c0 AS INTEGER) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))) THEN ((rt0.c1)%('-484110246')) WHEN ((v0.c0)GLOB(rt0.c2)) THEN (+ ('592646152')) ELSE ((((rt0.c2)OR(NULL)))AND(rt0.c1)) END))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((CASE WHEN CAST(rt0.c0 AS REAL) THEN CAST(rt0.c0 AS INTEGER) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))) THEN ((rt0.c1)%('-484110246')) WHEN ((v0.c0)GLOB(rt0.c2)) THEN (+ ('592646152')) ELSE ((((rt0.c2)OR(NULL)))AND(rt0.c1)) END) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)) IN ())) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)) IN ())))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)) IN ())) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ('}9aga') GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ('}9aga'))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((('}9aga') ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING CAST(TOTAL(COUNT(MAX(v0.c0))) AS NUMERIC) UNION ALL SELECT rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (CAST(TOTAL(COUNT(MAX(v0.c0))) AS NUMERIC))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((CAST(TOTAL(COUNT(MAX(v0.c0))) AS NUMERIC)) ISNULL);
SELECT rt0.c1 FROM v0, rt0;
SELECT rt0.c1 FROM v0, rt0 WHERE (NULL) UNION ALL SELECT rt0.c1 FROM v0, rt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 WHERE (((NULL) ISNULL));
SELECT rt0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c2 FROM rt0, v0 WHERE (CAST(rt0.c1 AS TEXT) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2 FROM rt0, v0 WHERE ((NOT (CAST(rt0.c1 AS TEXT) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2 FROM rt0, v0 WHERE (((CAST(rt0.c1 AS TEXT) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0, v0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 WHERE (((((v0.c0 COLLATE NOCASE)AND(((rt0.c0) BETWEEN (NULL) AND (v0.c0)))))AND(v0.c0))) GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 WHERE ((NOT (((((v0.c0 COLLATE NOCASE)AND(((rt0.c0) BETWEEN (NULL) AND (v0.c0)))))AND(v0.c0))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 WHERE (((((((v0.c0 COLLATE NOCASE)AND(((rt0.c0) BETWEEN (NULL) AND (v0.c0)))))AND(v0.c0))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0;
SELECT ALL rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c1 HAVING (COUNT(*) IN ()) COLLATE NOCASE UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c1 HAVING (NOT ((COUNT(*) IN ()) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c1 HAVING (((COUNT(*) IN ()) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c1 HAVING (COUNT(*) IN ()) COLLATE NOCASE UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c1 HAVING (NOT ((COUNT(*) IN ()) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c1 HAVING (((COUNT(*) IN ()) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c1;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (SQLITE_COMPILEOPTION_USED(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))) UNION ALL SELECT * FROM rt0 WHERE (((SQLITE_COMPILEOPTION_USED(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 WHERE (NULL) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0;
SELECT ALL rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c2;
SELECT rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT (((rt0.c0) IS FALSE)))) GROUP BY rt0.c0, v0.c0, rt0.c2 UNION SELECT rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT ((NOT (((rt0.c0) IS FALSE)))))) GROUP BY rt0.c0, v0.c0, rt0.c2 UNION SELECT rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((((NOT (((rt0.c0) IS FALSE)))) ISNULL)) GROUP BY rt0.c0, v0.c0, rt0.c2;
SELECT ALL rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0 HAVING (((rt0.c1)) BETWEEN ((MAX(rt0.c0))) AND ((MIN(rt0.c2)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0 HAVING (NOT ((((rt0.c1)) BETWEEN ((MAX(rt0.c0))) AND ((MIN(rt0.c2)))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0 HAVING (((((rt0.c1)) BETWEEN ((MAX(rt0.c0))) AND ((MIN(rt0.c2))))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0 HAVING (((rt0.c1)) BETWEEN ((MAX(rt0.c0))) AND ((MIN(rt0.c2)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0 HAVING (NOT ((((rt0.c1)) BETWEEN ((MAX(rt0.c0))) AND ((MIN(rt0.c2)))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0 HAVING (((((rt0.c1)) BETWEEN ((MAX(rt0.c0))) AND ((MIN(rt0.c2))))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0;
SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0;
SELECT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 WHERE ((((rt0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN rt0.c2 END)) AND ((CASE v0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 END)))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN rt0.c2 END)) AND ((CASE v0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 END)))))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0 WHERE ((((((rt0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN rt0.c2 END)) AND ((CASE v0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 END)))) ISNULL));
SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON LIKELY((rt0.c1 IN ()));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON LIKELY((rt0.c1 IN ())) WHERE ((((((((rt0.c0)OR(v0.c0)))AND(v0.c0)), 0.013521252038277809, ((rt0.c0)LIKE(rt0.c1))))!=(('865326235', ((((NULL)OR(rt0.c0)))AND(NULL)), ((rt0.c1)IS(v0.c0)))))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON LIKELY((rt0.c1 IN ())) WHERE ((NOT ((((((((rt0.c0)OR(v0.c0)))AND(v0.c0)), 0.013521252038277809, ((rt0.c0)LIKE(rt0.c1))))<>(('865326235', ((((NULL)OR(rt0.c0)))AND(NULL)), ((rt0.c1)IS(v0.c0)))))))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON LIKELY((rt0.c1 IN ())) WHERE ((((((((((rt0.c0)OR(v0.c0)))AND(v0.c0)), 0.013521252038277809, ((rt0.c0)LIKE(rt0.c1))))<>(('865326235', ((((NULL)OR(rt0.c0)))AND(NULL)), ((rt0.c1)IS(v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON LIKELY((rt0.c1 IN ()));
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ('-1201349165') GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ('-1201349165'))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((('-1201349165') ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((v0.c0)OR(v0.c0)))OR(v0.c0)) IN ()) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((((v0.c0)OR(v0.c0)))OR(v0.c0)) IN ()))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((((v0.c0)OR(v0.c0)))OR(v0.c0)) IN ())) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((v0.c0)OR(v0.c0)))OR(v0.c0)) IN ()) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((((v0.c0)OR(v0.c0)))OR(v0.c0)) IN ()))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((((v0.c0)OR(v0.c0)))OR(v0.c0)) IN ())) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE ((((v0.c0 IN ())) IS FALSE)) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT ((((v0.c0 IN ())) IS FALSE)))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((((((v0.c0 IN ())) IS FALSE)) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c2 FROM v0, rt0 WHERE (((((rt0.c2)&(rt0.c2)))LIKE(((v0.c0) ISNULL)))) UNION SELECT DISTINCT rt0.c2 FROM v0, rt0 WHERE ((NOT (((((rt0.c2)&(rt0.c2)))LIKE(((v0.c0) ISNULL)))))) UNION SELECT DISTINCT rt0.c2 FROM v0, rt0 WHERE (((((((rt0.c2)&(rt0.c2)))LIKE(((v0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT rt0.c2 FROM v0, rt0;
SELECT ALL rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0;
SELECT ALL rt0.c2, v0.c0 FROM rt0, v0 WHERE ((- ((~ (rt0.c0))))) GROUP BY rt0.c2, v0.c0 UNION SELECT rt0.c2, v0.c0 FROM rt0, v0 WHERE ((NOT ((- ((~ (rt0.c0))))))) GROUP BY rt0.c2, v0.c0 UNION SELECT ALL rt0.c2, v0.c0 FROM rt0, v0 WHERE ((((- ((~ (rt0.c0))))) ISNULL)) GROUP BY rt0.c2, v0.c0;
SELECT ALL rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(v0.c0))-(((((MAX(v0.c0))OR(SUM(v0.c0))))AND(AVG(MAX(GROUP_CONCAT(MAX(v0.c0)))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((GROUP_CONCAT(v0.c0))-(((((MAX(v0.c0))OR(SUM(v0.c0))))AND(AVG(MAX(GROUP_CONCAT(MAX(v0.c0)))))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((GROUP_CONCAT(v0.c0))-(((((MAX(v0.c0))OR(SUM(v0.c0))))AND(AVG(MAX(GROUP_CONCAT(MAX(v0.c0))))))))) ISNULL);
SELECT ALL SUM(CAST(v0.c0 COLLATE RTRIM AS INTEGER)) FROM v0, rt0 ORDER BY ((v0.c0)LIKE(rt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0)+(v0.c0)))==(CASE WHEN v0.c0 THEN v0.c0 END))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)+(v0.c0)))=(CASE WHEN v0.c0 THEN v0.c0 END))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)+(v0.c0)))==(CASE WHEN v0.c0 THEN v0.c0 END))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((NOT (9.09183483E8))) IS FALSE)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((NOT (9.09183483E8))) IS FALSE)))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((NOT (9.09183483E8))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((~ (rt0.c0)) IN ())) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((~ (rt0.c0)) IN ())))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((~ (rt0.c0)) IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING json_array(((v0.c0) NOT BETWEEN (v0.c0) AND (AVG(rt0.c2))), ((COUNT(*))<=(AVG(COUNT(*))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (json_array(((v0.c0) NOT BETWEEN (v0.c0) AND (AVG(rt0.c2))), ((COUNT(*))<=(AVG(COUNT(*))))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((json_array(((v0.c0) NOT BETWEEN (v0.c0) AND (AVG(rt0.c2))), ((COUNT(*))<=(AVG(COUNT(*)))))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((((v0.c0)) BETWEEN ((TYPEOF(DISTINCT v0.c0))) AND ((NULL)))) UNION ALL SELECT * FROM v0 NOT INDEXED WHERE ((NOT ((((v0.c0)) BETWEEN ((TYPEOF(DISTINCT v0.c0))) AND ((NULL)))))) UNION ALL SELECT * FROM v0 WHERE ((((((v0.c0)) BETWEEN ((TYPEOF(DISTINCT v0.c0))) AND ((NULL)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2 IN ()))LIKE(((rt0.c2) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2 IN ()))LIKE(((rt0.c2) NOT NULL)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2 IN ()))LIKE(((rt0.c2) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((+ (rt0.c2))) AND (((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((+ (rt0.c2))) AND (((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c1))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((+ (rt0.c2))) AND (((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 INNER JOIN v0 ON (+ (0.08203239221133451 COLLATE RTRIM)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 INNER JOIN v0 ON (+ (0.08203239221133451 COLLATE RTRIM)) GROUP BY rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 INNER JOIN v0 ON (+ (0.08203239221133451 COLLATE RTRIM)) GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 INNER JOIN v0 ON (+ (0.08203239221133451 COLLATE RTRIM)) GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 INNER JOIN v0 ON (+ (0.08203239221133451 COLLATE RTRIM)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 INNER JOIN v0 ON (+ (0.08203239221133451 COLLATE RTRIM)) GROUP BY rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 INNER JOIN v0 ON (+ (0.08203239221133451 COLLATE RTRIM)) GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 INNER JOIN v0 ON (+ (0.08203239221133451 COLLATE RTRIM)) GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 INNER JOIN v0 ON (+ (0.08203239221133451 COLLATE RTRIM)) GROUP BY rt0.c2, rt0.c1;
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (((((SQLITE_COMPILEOPTION_GET(rt0.c1))OR(CAST(v0.c0 AS TEXT))))OR((+ (rt0.c1))))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (((((SQLITE_COMPILEOPTION_GET(rt0.c1))OR(CAST(v0.c0 AS TEXT))))OR((+ (rt0.c1))))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((((((SQLITE_COMPILEOPTION_GET(rt0.c1))OR(CAST(v0.c0 AS TEXT))))OR((+ (rt0.c1))))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((('痥''t') BETWEEN (((v0.c0) ISNULL)) AND (JULIANDAY(v0.c0, v0.c0, v0.c0)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((('痥''t') BETWEEN (((v0.c0) ISNULL)) AND (JULIANDAY(v0.c0, v0.c0, v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((('痥''t') BETWEEN (((v0.c0) ISNULL)) AND (JULIANDAY(v0.c0, v0.c0, v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 WHERE ((NOT ((NOT (rt0.c0))))) GROUP BY v0.c0, rt0.c1, rt0.c0 UNION SELECT v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 WHERE ((NOT ((NOT ((NOT (rt0.c0))))))) GROUP BY v0.c0, rt0.c1, rt0.c0 UNION SELECT v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 WHERE ((((NOT ((NOT (rt0.c0))))) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(((SUM(v0.c0))>>(MAX(v0.c0))) AS INTEGER) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(((SUM(v0.c0))>>(MAX(v0.c0))) AS INTEGER))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(((SUM(v0.c0))>>(MAX(v0.c0))) AS INTEGER)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(((SUM(v0.c0))>>(MAX(v0.c0))) AS INTEGER) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(((SUM(v0.c0))>>(MAX(v0.c0))) AS INTEGER))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(((SUM(v0.c0))>>(MAX(v0.c0))) AS INTEGER)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((SQLITE_COMPILEOPTION_GET(v0.c0)) NOT BETWEEN ((v0.c0 IN ())) AND (CASE WHEN v0.c0 THEN v0.c0 END))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((SQLITE_COMPILEOPTION_GET(v0.c0)) NOT BETWEEN ((v0.c0 IN ())) AND (CASE WHEN v0.c0 THEN v0.c0 END))))) UNION ALL SELECT * FROM v0 WHERE (((((SQLITE_COMPILEOPTION_GET(v0.c0)) NOT BETWEEN ((v0.c0 IN ())) AND (CASE WHEN v0.c0 THEN v0.c0 END))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((x'') ISNULL)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((x'') ISNULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((x'') ISNULL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c0)*(rt0.c1))) IS TRUE)) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0)*(rt0.c1))) IS TRUE)))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c0)*(rt0.c1))) IS TRUE)) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c2;
SELECT ALL rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c2 HAVING MAX(COUNT(MAX(rt0.c1))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c2 HAVING (NOT (MAX(COUNT(MAX(rt0.c1))))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c2 HAVING ((MAX(COUNT(MAX(rt0.c1)))) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE ((+ (NULL))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT ((+ (NULL))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((+ (NULL))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((('0.9637527851138903') NOT NULL))*('348080578'))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((((('0.9637527851138903') NOT NULL))*('348080578'))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((('0.9637527851138903') NOT NULL))*('348080578'))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c1;
SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((((rt0.c0 IN ()))>(CAST(rt0.c2 AS TEXT)))) GROUP BY rt0.c2, v0.c0, rt0.c1 UNION SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT ((((rt0.c0 IN ()))>(CAST(rt0.c2 AS TEXT)))))) GROUP BY rt0.c2, v0.c0, rt0.c1 UNION SELECT rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((((((rt0.c0 IN ()))>(CAST(rt0.c2 AS TEXT)))) ISNULL)) GROUP BY rt0.c2, v0.c0, rt0.c1;
SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT((+ (MAX(COUNT(*))))) UNION ALL SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING (NOT (COUNT((+ (MAX(COUNT(*))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT((+ (MAX(COUNT(*)))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END)+(((v0.c0)<=(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 END)+(((v0.c0)<=(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 END)+(((v0.c0)<=(v0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (CAST(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS TEXT)) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (CAST(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS TEXT)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((CAST(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)<<(v0.c0)))OR(0.5043549364819748)))OR(CASE v0.c0  WHEN '-927784329' THEN v0.c0 END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0)<<(v0.c0)))OR(0.5043549364819748)))OR(CASE v0.c0  WHEN '-927784329' THEN v0.c0 END))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((((v0.c0)<<(v0.c0)))OR(0.5043549364819748)))OR(CASE v0.c0  WHEN '-927784329' THEN v0.c0 END))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0 FROM rt0 INNER JOIN v0 ON CAST(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) AS REAL) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 INNER JOIN v0 ON CAST(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) AS REAL) GROUP BY rt0.c0 HAVING SUM(TOTAL(COUNT(*))) UNION ALL SELECT rt0.c0 FROM rt0 INNER JOIN v0 ON CAST(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) AS REAL) GROUP BY rt0.c0 HAVING (NOT (SUM(TOTAL(COUNT(*))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 INNER JOIN v0 ON CAST(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) AS REAL) GROUP BY rt0.c0 HAVING ((SUM(TOTAL(COUNT(*)))) ISNULL);
SELECT * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (rt0.c1) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM rt0, v0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN -530510620 ELSE rt0.c0 END)||(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN -530510620 ELSE rt0.c0 END)||(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN -530510620 ELSE rt0.c0 END)||(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (((- (rt0.c1)))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (((- (rt0.c1)))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (((- (rt0.c1)))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING GROUP_CONCAT(AVG(rt0.c0)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(AVG(rt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(AVG(rt0.c0))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((NOT ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((NOT ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (TRIM(DISTINCT ((rt0.c1)<(rt0.c1)))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (TRIM(DISTINCT ((rt0.c1)<(rt0.c1)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((TRIM(DISTINCT ((rt0.c1)<(rt0.c1)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((((rtreenode(rt0.c2, '1533082569')))<=((NULL)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rtreenode(rt0.c2, '1533082569')))<=((NULL)))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rtreenode(rt0.c2, '1533082569')))<=((NULL)))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(((MAX(MAX(v0.c0))) BETWEEN (SUM(v0.c0)) AND (GROUP_CONCAT(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(((MAX(MAX(v0.c0))) BETWEEN (SUM(v0.c0)) AND (GROUP_CONCAT(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(((MAX(MAX(v0.c0))) BETWEEN (SUM(v0.c0)) AND (GROUP_CONCAT(v0.c0))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((CAST(x'' AS NUMERIC)) NOT BETWEEN (NULL) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((CAST(x'' AS NUMERIC)) NOT BETWEEN (NULL) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((CAST(x'' AS NUMERIC)) NOT BETWEEN (NULL) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST(v0.c0 COLLATE BINARY AS INTEGER)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST(v0.c0 COLLATE BINARY AS INTEGER)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST(v0.c0 COLLATE BINARY AS INTEGER)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (CASE (v0.c0 IN ())  WHEN rt0.c1 COLLATE NOCASE THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 END END) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (CASE (v0.c0 IN ())  WHEN rt0.c1 COLLATE NOCASE THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 END END))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (((CASE (v0.c0 IN ())  WHEN rt0.c1 COLLATE NOCASE THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 END END) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING GROUP_CONCAT((~ (rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT((~ (rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT((~ (rt0.c0)))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING GROUP_CONCAT((~ (rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT((~ (rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT((~ (rt0.c0)))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 NOT INDEXED WHERE ((((((v0.c0) NOT BETWEEN (v0.c0) AND (x'05522a56')), (NOT (v0.c0)), 0Xffffffff9ebd9add))>=((((v0.c0)IS(v0.c0)), CAST(v0.c0 AS BLOB), CASE WHEN '1394241091' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (x'05522a56')), (NOT (v0.c0)), 0xffffffff9ebd9add))>=((((v0.c0)IS(v0.c0)), CAST(v0.c0 AS BLOB), CASE WHEN '1394241091' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((((((v0.c0) NOT BETWEEN (v0.c0) AND (x'05522a56')), (NOT (v0.c0)), 0Xffffffff9ebd9add))>=((((v0.c0)IS(v0.c0)), CAST(v0.c0 AS BLOB), CASE WHEN '1394241091' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (CASE ((rt0.c0)==(v0.c0))  WHEN (((rt0.c1))>((rt0.c0))) THEN ((((((((((((0.717274214651133)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(v0.c0)))AND(rt0.c0)))OR(rt0.c1)) WHEN v0.c0 THEN rt0.c0 WHEN ((rt0.c2)%(rt0.c0)) THEN NULL END) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (CASE ((rt0.c0)==(v0.c0))  WHEN (((rt0.c1))>((rt0.c0))) THEN ((((((((((((0.717274214651133)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(v0.c0)))AND(rt0.c0)))OR(rt0.c1)) WHEN v0.c0 THEN rt0.c0 WHEN ((rt0.c2)%(rt0.c0)) THEN NULL END))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((CASE ((rt0.c0)=(v0.c0))  WHEN (((rt0.c1))>((rt0.c0))) THEN ((((((((((((0.717274214651133)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(v0.c0)))AND(rt0.c0)))OR(rt0.c1)) WHEN v0.c0 THEN rt0.c0 WHEN ((rt0.c2)%(rt0.c0)) THEN NULL END) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN v0 WHERE (((((((((((rt0.c0)<<(v0.c0)))AND(((NULL)==(v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))AND(((rt0.c0)&(rt0.c0)))))AND(((v0.c0) IS FALSE)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (((((((((((rt0.c0)<<(v0.c0)))AND(((NULL)=(v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))AND(((rt0.c0)&(rt0.c0)))))AND(((v0.c0) IS FALSE)))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN v0 WHERE (((((((((((((rt0.c0)<<(v0.c0)))AND(((NULL)=(v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))AND(((rt0.c0)&(rt0.c0)))))AND(((v0.c0) IS FALSE)))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c2, rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(SUM(GROUP_CONCAT(COUNT(0.40289914243378744))) AS TEXT) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(SUM(GROUP_CONCAT(COUNT(0.40289914243378744))) AS TEXT))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(SUM(GROUP_CONCAT(COUNT(0.40289914243378744))) AS TEXT)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0;
SELECT rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 WHERE (CAST(((rt0.c1)IS NOT(x'58d6')) AS TEXT)) UNION ALL SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT (CAST(((rt0.c1)IS NOT(x'58d6')) AS TEXT)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 WHERE (((CAST(((rt0.c1)IS NOT(x'58d6')) AS TEXT)) ISNULL));
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (CASE WHEN (rt0.c2 IN (rt0.c1)) THEN MIN(rt0.c0, rt0.c2) ELSE LIKELIHOOD(DISTINCT -1.66524811E9, 0.920606256669223) END) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN (rt0.c2 IN (rt0.c1)) THEN MIN(rt0.c0, rt0.c2) ELSE LIKELIHOOD(DISTINCT -1.66524811E9, 0.920606256669223) END))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE WHEN (rt0.c2 IN (rt0.c1)) THEN MIN(rt0.c0, rt0.c2) ELSE LIKELIHOOD(DISTINCT -1.66524811E9, 0.920606256669223) END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((~ (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((~ (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((~ (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(MIN(COUNT(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(MIN(COUNT(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(MIN(COUNT(v0.c0)))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((v0.c0)IS(((v0.c0) NOT NULL)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((v0.c0)IS(((v0.c0) NOT NULL)))))) UNION ALL SELECT * FROM v0 WHERE (((((v0.c0)IS(((v0.c0) NOT NULL)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c0, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((rt0.c2)<>(rt0.c2)) COLLATE BINARY GROUP BY rt0.c0, v0.c0;
SELECT ALL rt0.c0, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((rt0.c2)<>(rt0.c2)) COLLATE BINARY WHERE (((((NULL)AND((((rt0.c0))==((x''))))))AND(''))) GROUP BY rt0.c0, v0.c0 UNION SELECT ALL rt0.c0, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((rt0.c2)!=(rt0.c2)) COLLATE BINARY WHERE ((NOT (((((NULL)AND((((rt0.c0))==((x''))))))AND(''))))) GROUP BY rt0.c0, v0.c0 UNION SELECT ALL rt0.c0, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((rt0.c2)<>(rt0.c2)) COLLATE BINARY WHERE (((((((NULL)AND((((rt0.c0))=((x''))))))AND(''))) ISNULL)) GROUP BY rt0.c0, v0.c0;
SELECT ALL rt0.c0, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((rt0.c2)<>(rt0.c2)) COLLATE BINARY GROUP BY rt0.c0, v0.c0;
SELECT rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON CASE v0.c0 COLLATE RTRIM  WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) THEN (NOT (v0.c0)) ELSE ((rt0.c2)+(rt0.c1)) END GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON CASE v0.c0 COLLATE RTRIM  WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) THEN (NOT (v0.c0)) ELSE ((rt0.c2)+(rt0.c1)) END GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c2 HAVING ((CASE WHEN SUM(rt0.c1) THEN 203961033 WHEN MIN(SUM(COUNT(*))) THEN GROUP_CONCAT(MAX(rt0.c2)) WHEN rt0.c2 THEN SUM(rt0.c0) END) NOTNULL) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON CASE v0.c0 COLLATE RTRIM  WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) THEN (NOT (v0.c0)) ELSE ((rt0.c2)+(rt0.c1)) END GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c2 HAVING (NOT (((CASE WHEN SUM(rt0.c1) THEN 203961033 WHEN MIN(SUM(COUNT(*))) THEN GROUP_CONCAT(MAX(rt0.c2)) WHEN rt0.c2 THEN SUM(rt0.c0) END) NOTNULL))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c2 FROM v0 FULL OUTER JOIN rt0 ON CASE v0.c0 COLLATE RTRIM  WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) THEN (NOT (v0.c0)) ELSE ((rt0.c2)+(rt0.c1)) END GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c2 HAVING ((((CASE WHEN SUM(rt0.c1) THEN 203961033 WHEN MIN(SUM(COUNT(*))) THEN GROUP_CONCAT(MAX(rt0.c2)) WHEN rt0.c2 THEN SUM(rt0.c0) END) NOTNULL)) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) COLLATE RTRIM) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) COLLATE RTRIM))) UNION ALL SELECT * FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) COLLATE RTRIM) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c2 FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT rt0.c2 FROM rt0 NATURAL JOIN v0 WHERE ((((~ (rt0.c0)))<=((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 NATURAL JOIN v0 WHERE ((NOT ((((~ (rt0.c0)))<=((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 NATURAL JOIN v0 WHERE ((((((~ (rt0.c0)))<=((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0 NATURAL JOIN v0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c0 IN (rt0.c0)))<=((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c2)))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0 IN (rt0.c0)))<=((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c2)))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c0 IN (rt0.c0)))<=((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c2)))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(((AVG(COUNT(v0.c0)))<(SUM(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(((AVG(COUNT(v0.c0)))<(SUM(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(((AVG(COUNT(v0.c0)))<(SUM(v0.c0))))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (((- (rt0.c1)) IN ((NOT (rt0.c0))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((- (rt0.c1)) IN ((NOT (rt0.c0))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((((- (rt0.c1)) IN ((NOT (rt0.c0))))) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END IN ()) GROUP BY v0.c0;
SELECT v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END IN ()) WHERE (rt0.c2) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END IN ()) WHERE ((NOT (rt0.c2))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END IN ()) WHERE (((rt0.c2) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END IN ()) GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING MAX(rt0.c0 COLLATE RTRIM) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MAX(rt0.c0 COLLATE RTRIM))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((MAX(rt0.c0 COLLATE RTRIM)) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING MAX(rt0.c0 COLLATE RTRIM) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MAX(rt0.c0 COLLATE RTRIM))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((MAX(rt0.c0 COLLATE RTRIM)) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (CASE WHEN rt0.c2 THEN v0.c0 END COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt0, v0 NOT INDEXED WHERE ((NOT (CASE WHEN rt0.c2 THEN v0.c0 END COLLATE RTRIM))) UNION ALL SELECT * FROM rt0, v0 WHERE (((CASE WHEN rt0.c2 THEN v0.c0 END COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM v0 CROSS JOIN rt0 ON NULL;
SELECT DISTINCT rt0.c2, rt0.c0 FROM v0 CROSS JOIN rt0 ON NULL WHERE ((NOT (((('-1559990064'))>=((-43153251)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM v0 CROSS JOIN rt0 ON NULL WHERE ((NOT ((NOT (((('-1559990064'))>=((-43153251)))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM v0 CROSS JOIN rt0 ON NULL WHERE ((((NOT (((('-1559990064'))>=((-43153251)))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM v0 CROSS JOIN rt0 ON NULL;
SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 WHERE (NULL) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1 UNION SELECT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1 UNION SELECT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c1 AS BLOB) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c1 AS BLOB) GROUP BY rt0.c1, rt0.c2 HAVING MIN(UPPER(MIN(rt0.c2))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c1 AS BLOB) GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MIN(UPPER(MIN(rt0.c2))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c1 AS BLOB) GROUP BY rt0.c1, rt0.c2 HAVING ((MIN(UPPER(MIN(rt0.c2)))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((((((v0.c0) ISNULL), ((v0.c0)IS NOT(v0.c0)), ((v0.c0)>=(v0.c0))))<(((('3#') NOT BETWEEN (v0.c0) AND (v0.c0)), (v0.c0 IN ()), 'CY]S~OR,ﺥ' COLLATE NOCASE)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((((v0.c0) ISNULL), ((v0.c0)IS NOT(v0.c0)), ((v0.c0)>=(v0.c0))))<(((('3#') NOT BETWEEN (v0.c0) AND (v0.c0)), (v0.c0 IN ()), 'CY]S~OR,ﺥ' COLLATE NOCASE)))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((((v0.c0) ISNULL), ((v0.c0)IS NOT(v0.c0)), ((v0.c0)>=(v0.c0))))<(((('3#') NOT BETWEEN (v0.c0) AND (v0.c0)), (v0.c0 IN ()), 'CY]S~OR,ﺥ' COLLATE NOCASE)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 WHEN '1378766313' THEN rt0.c1 END)AND(((v0.c0)-(rt0.c0)))))OR((- (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 WHEN '1378766313' THEN rt0.c1 END)AND(((v0.c0)-(rt0.c0)))))OR((- (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 WHEN '1378766313' THEN rt0.c1 END)AND(((v0.c0)-(rt0.c0)))))OR((- (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((- (NULL)) COLLATE NOCASE) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT ((- (NULL)) COLLATE NOCASE))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((((- (NULL)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c0;
SELECT v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c0 HAVING ((((((((0xffffffffa30470d0)OR(((TOTAL(rt0.c0))&(v0.c0)))))OR(AVG(MAX(rt0.c1)))))OR(CAST(AVG(MIN(SUM(COUNT(*)))) AS TEXT))))OR(((rt0.c0)<=(rt0.c2)))) UNION ALL SELECT ALL v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c0 HAVING (NOT (((((((((0Xffffffffa30470d0)OR(((TOTAL(rt0.c0))&(v0.c0)))))OR(AVG(MAX(rt0.c1)))))OR(CAST(AVG(MIN(SUM(COUNT(*)))) AS TEXT))))OR(((rt0.c0)<=(rt0.c2)))))) UNION ALL SELECT ALL v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c0 HAVING ((((((((((0xffffffffa30470d0)OR(((TOTAL(rt0.c0))&(v0.c0)))))OR(AVG(MAX(rt0.c1)))))OR(CAST(AVG(MIN(SUM(COUNT(*)))) AS TEXT))))OR(((rt0.c0)<=(rt0.c2))))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c2)IS NOT(rt0.c0)))LIKE(rt0.c1 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2)IS NOT(rt0.c0)))LIKE(rt0.c1 COLLATE NOCASE))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c2)IS NOT(rt0.c0)))LIKE(rt0.c1 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 WHERE (((((rt0.c0)IS NOT(rt0.c1))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0 UNION SELECT rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((NOT (((((rt0.c0)IS NOT(rt0.c1))) ISNULL)))) GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0 UNION SELECT rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 WHERE (((((((rt0.c0)IS NOT(rt0.c1))) ISNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(((AVG(v0.c0)) BETWEEN (COUNT(COUNT(v0.c0))) AND (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(((AVG(v0.c0)) BETWEEN (COUNT(COUNT(v0.c0))) AND (v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(((AVG(v0.c0)) BETWEEN (COUNT(COUNT(v0.c0))) AND (v0.c0)))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN (((rt0.c0 IN (rt0.c1)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN '0.2321059533264237' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt0.c1 END, x'')) AND ((CASE NULL  WHEN rt0.c0 THEN rt0.c0 WHEN 0.29835550559883806 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END, (((rt0.c0))<=((rt0.c1))), ((rt0.c0)OR(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN (((rt0.c0 IN (rt0.c1)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN '0.2321059533264237' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt0.c1 END, x'')) AND ((CASE NULL  WHEN rt0.c0 THEN rt0.c0 WHEN 0.29835550559883806 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END, (((rt0.c0))<=((rt0.c1))), ((rt0.c0)OR(rt0.c0)))))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN (((rt0.c0 IN (rt0.c1)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN '0.2321059533264237' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt0.c1 END, x'')) AND ((CASE NULL  WHEN rt0.c0 THEN rt0.c0 WHEN 0.29835550559883806 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END, (((rt0.c0))<=((rt0.c1))), ((rt0.c0)OR(rt0.c0)))))) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON ((((CASE WHEN '1526055684' THEN rt0.c2 ELSE rt0.c1 END)OR((+ (rt0.c0)))))OR(rt0.c0 COLLATE NOCASE));
SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON ((((CASE WHEN '1526055684' THEN rt0.c2 ELSE rt0.c1 END)OR((+ (rt0.c0)))))OR(rt0.c0 COLLATE NOCASE)) WHERE (CASE WHEN 0xffffffffc43ec326 THEN (+ (v0.c0)) WHEN (((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((v0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c1))) THEN rt0.c0 WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND (('492584595'))) THEN ((v0.c0) NOT NULL) ELSE (~ (rt0.c1)) END) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON ((((CASE WHEN '1526055684' THEN rt0.c2 ELSE rt0.c1 END)OR((+ (rt0.c0)))))OR(rt0.c0 COLLATE NOCASE)) WHERE ((NOT (CASE WHEN 0xffffffffc43ec326 THEN (+ (v0.c0)) WHEN (((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((v0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c1))) THEN rt0.c0 WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND (('492584595'))) THEN ((v0.c0) NOT NULL) ELSE (~ (rt0.c1)) END))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON ((((CASE WHEN '1526055684' THEN rt0.c2 ELSE rt0.c1 END)OR((+ (rt0.c0)))))OR(rt0.c0 COLLATE NOCASE)) WHERE (((CASE WHEN 0xffffffffc43ec326 THEN (+ (v0.c0)) WHEN (((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((v0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c1))) THEN rt0.c0 WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND (('492584595'))) THEN ((v0.c0) NOT NULL) ELSE (~ (rt0.c1)) END) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON ((((CASE WHEN '1526055684' THEN rt0.c2 ELSE rt0.c1 END)OR((+ (rt0.c0)))))OR(rt0.c0 COLLATE NOCASE));
SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c1, rt0.c0 FROM rt0, v0 WHERE (rt0.c0) GROUP BY v0.c0, rt0.c1, rt0.c0 UNION SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM rt0, v0 WHERE ((NOT (rt0.c0))) GROUP BY v0.c0, rt0.c1, rt0.c0 UNION SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM rt0, v0 WHERE (((rt0.c0) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING COUNT(*) COLLATE BINARY UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (COUNT(*) COLLATE BINARY)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((COUNT(*) COLLATE BINARY) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING COUNT(*) COLLATE BINARY UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (COUNT(*) COLLATE BINARY)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((COUNT(*) COLLATE BINARY) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CAST((+ (v0.c0)) AS NUMERIC)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST((+ (v0.c0)) AS NUMERIC)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CAST((+ (v0.c0)) AS NUMERIC)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE DATETIME(rt0.c1, rt0.c0, rt0.c0, rt0.c1, rt0.c2)  WHEN ((rt0.c2) ISNULL) THEN ((rt0.c1)<<(rt0.c0)) WHEN (rt0.c0 IN ()) THEN CASE WHEN rt0.c1 THEN rt0.c1 END WHEN ((rt0.c0)%('')) THEN ((rt0.c1)GLOB(rt0.c1)) ELSE CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE DATETIME(rt0.c1, rt0.c0, rt0.c0, rt0.c1, rt0.c2)  WHEN ((rt0.c2) ISNULL) THEN ((rt0.c1)<<(rt0.c0)) WHEN (rt0.c0 IN ()) THEN CASE WHEN rt0.c1 THEN rt0.c1 END WHEN ((rt0.c0)%('')) THEN ((rt0.c1)GLOB(rt0.c1)) ELSE CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE DATETIME(rt0.c1, rt0.c0, rt0.c0, rt0.c1, rt0.c2)  WHEN ((rt0.c2) ISNULL) THEN ((rt0.c1)<<(rt0.c0)) WHEN (rt0.c0 IN ()) THEN CASE WHEN rt0.c1 THEN rt0.c1 END WHEN ((rt0.c0)%('')) THEN ((rt0.c1)GLOB(rt0.c1)) ELSE CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((rt0.c0)|(rt0.c1)) COLLATE NOCASE) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c0)|(rt0.c1)) COLLATE NOCASE))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((rt0.c0)|(rt0.c1)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT v0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON CAST(v0.c0 AS REAL) GROUP BY v0.c0, rt0.c0;
SELECT v0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON CAST(v0.c0 AS REAL) GROUP BY v0.c0, rt0.c0 HAVING SUM(((rt0.c0)|(x''))) UNION ALL SELECT v0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON CAST(v0.c0 AS REAL) GROUP BY v0.c0, rt0.c0 HAVING (NOT (SUM(((rt0.c0)|(x''))))) UNION ALL SELECT ALL v0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON CAST(v0.c0 AS REAL) GROUP BY v0.c0, rt0.c0 HAVING ((SUM(((rt0.c0)|(x'')))) ISNULL);
SELECT v0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON CAST(v0.c0 AS REAL) GROUP BY v0.c0, rt0.c0;
SELECT v0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON CAST(v0.c0 AS REAL) GROUP BY v0.c0, rt0.c0 HAVING SUM(((rt0.c0)|(x''))) UNION ALL SELECT v0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON CAST(v0.c0 AS REAL) GROUP BY v0.c0, rt0.c0 HAVING (NOT (SUM(((rt0.c0)|(x''))))) UNION ALL SELECT ALL v0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON CAST(v0.c0 AS REAL) GROUP BY v0.c0, rt0.c0 HAVING ((SUM(((rt0.c0)|(x'')))) ISNULL);
SELECT v0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON CAST(v0.c0 AS REAL) GROUP BY v0.c0, rt0.c0;
SELECT ALL v0.c0, rt0.c0 FROM rt0, v0;
SELECT v0.c0, rt0.c0 FROM rt0, v0 WHERE (((CAST(rt0.c0 AS INTEGER)) NOTNULL)) UNION ALL SELECT v0.c0, rt0.c0 FROM rt0, v0 WHERE ((NOT (((CAST(rt0.c0 AS INTEGER)) NOTNULL)))) UNION ALL SELECT ALL v0.c0, rt0.c0 FROM rt0, v0 WHERE (((((CAST(rt0.c0 AS INTEGER)) NOTNULL)) ISNULL));
SELECT ALL v0.c0, rt0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c0, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c0, v0.c0 FROM rt0, v0 WHERE ((('2104199147') ISNULL)) UNION SELECT DISTINCT rt0.c0, v0.c0 FROM rt0, v0 WHERE ((NOT ((('2104199147') ISNULL)))) UNION SELECT DISTINCT rt0.c0, v0.c0 FROM rt0, v0 WHERE ((((('2104199147') ISNULL)) ISNULL));
SELECT DISTINCT rt0.c0, v0.c0 FROM rt0, v0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c2, rt0.c1, rt0.c1, rt0.c1, rt0.c2)) BETWEEN (((((rt0.c0, rt0.c2, rt0.c0))==((rt0.c2, rt0.c1, rt0.c1))), (rt0.c2 IN ()), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END, (+ (rt0.c1)), (rt0.c1 IN ()))) AND ((CAST(rt0.c0 AS TEXT), (- ('{')), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, CAST(rt0.c1 AS BLOB), rt0.c0 COLLATE RTRIM)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c1, rt0.c1, rt0.c1, rt0.c2)) BETWEEN (((((rt0.c0, rt0.c2, rt0.c0))=((rt0.c2, rt0.c1, rt0.c1))), (rt0.c2 IN ()), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END, (+ (rt0.c1)), (rt0.c1 IN ()))) AND ((CAST(rt0.c0 AS TEXT), (- ('{')), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, CAST(rt0.c1 AS BLOB), rt0.c0 COLLATE RTRIM)))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c1, rt0.c1, rt0.c2)) BETWEEN (((((rt0.c0, rt0.c2, rt0.c0))=((rt0.c2, rt0.c1, rt0.c1))), (rt0.c2 IN ()), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END, (+ (rt0.c1)), (rt0.c1 IN ()))) AND ((CAST(rt0.c0 AS TEXT), (- ('{')), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, CAST(rt0.c1 AS BLOB), rt0.c0 COLLATE RTRIM)))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c1, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0;
SELECT ALL rt0.c1, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0 HAVING ((((MAX(GROUP_CONCAT(AVG('-1716850774'))))GLOB(COUNT(SUM(rt0.c2)))))+((NOT (SUM(GROUP_CONCAT(rt0.c0)))))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0 HAVING (NOT (((((MAX(GROUP_CONCAT(AVG('-1716850774'))))GLOB(COUNT(SUM(rt0.c2)))))+((NOT (SUM(GROUP_CONCAT(rt0.c0)))))))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c0 HAVING ((((((MAX(GROUP_CONCAT(AVG('-1716850774'))))GLOB(COUNT(SUM(rt0.c2)))))+((NOT (SUM(GROUP_CONCAT(rt0.c0))))))) ISNULL);
SELECT * FROM rt0 NATURAL JOIN v0;
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (((((((rt0.c0, v0.c0, rt0.c2)) BETWEEN ((v0.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0))), rt0.c1, ((v0.c0) IS FALSE)))<=((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)), ((rt0.c2)>>(v0.c0)), '~R')))) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE ((NOT (((((((rt0.c0, v0.c0, rt0.c2)) BETWEEN ((v0.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0))), rt0.c1, ((v0.c0) IS FALSE)))<=((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)), ((rt0.c2)>>(v0.c0)), '~R')))))) UNION ALL SELECT * FROM rt0 NATURAL JOIN v0 WHERE (((((((((rt0.c0, v0.c0, rt0.c2)) BETWEEN ((v0.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0))), rt0.c1, ((v0.c0) IS FALSE)))<=((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)), ((rt0.c2)>>(v0.c0)), '~R')))) ISNULL));
SELECT * FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (CASE (~ (rt0.c0))  WHEN SQLITE_COMPILEOPTION_USED(v0.c0) THEN ((rt0.c0)AND(rt0.c1)) END) UNION SELECT DISTINCT * FROM v0 NOT INDEXED, rt0 WHERE ((NOT (CASE (~ (rt0.c0))  WHEN SQLITE_COMPILEOPTION_USED(v0.c0) THEN ((rt0.c0)AND(rt0.c1)) END))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((CASE (~ (rt0.c0))  WHEN SQLITE_COMPILEOPTION_USED(v0.c0) THEN ((rt0.c0)AND(rt0.c1)) END) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(CAST(v0.c0 AS NUMERIC) AS TEXT)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(CAST(v0.c0 AS NUMERIC) AS TEXT)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST(CAST(v0.c0 AS NUMERIC) AS TEXT)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING SUM(AVG(rt0.c1)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (SUM(AVG(rt0.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((SUM(AVG(rt0.c1))) ISNULL);
SELECT * FROM rt0 CROSS JOIN v0 ON 0.6655601675840642;
SELECT * FROM rt0 CROSS JOIN v0 ON 0.6655601675840642 WHERE ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END IN ((rt0.c1 IN ()), ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))))) UNION ALL SELECT * FROM rt0 CROSS JOIN v0 ON 0.6655601675840642 WHERE ((NOT ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END IN ((rt0.c1 IN ()), ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))))))) UNION ALL SELECT * FROM rt0 CROSS JOIN v0 ON 0.6655601675840642 WHERE ((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END IN ((rt0.c1 IN ()), ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))))) ISNULL));
SELECT * FROM rt0 CROSS JOIN v0 ON 0.6655601675840642;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((v0.c0)AND(v0.c0)))<<((rt0.c1 IN ())))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((v0.c0)AND(v0.c0)))<<((rt0.c1 IN ())))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((v0.c0)AND(v0.c0)))<<((rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((NOT (v0.c0))) BETWEEN (INSTR(v0.c0, v0.c0)) AND ((((v0.c0))>((v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((NOT (v0.c0))) BETWEEN (INSTR(v0.c0, v0.c0)) AND ((((v0.c0))>((v0.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((NOT (v0.c0))) BETWEEN (INSTR(v0.c0, v0.c0)) AND ((((v0.c0))>((v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (TOTAL(rt0.c0) IN (AVG(AVG(GROUP_CONCAT(AVG(rt0.c2)))), TOTAL(rt0.c0))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((TOTAL(rt0.c0) IN (AVG(AVG(GROUP_CONCAT(AVG(rt0.c2)))), TOTAL(rt0.c0))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((TOTAL(rt0.c0) IN (AVG(AVG(GROUP_CONCAT(AVG(rt0.c2)))), TOTAL(rt0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (0.846194417622386) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (0.846194417622386))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((0.846194417622386) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c1 FROM rt0, v0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c1 FROM rt0, v0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c1 FROM rt0, v0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0, v0;
SELECT v0.c0 FROM rt0 INNER JOIN v0 ON ((((((v0.c0)AND(rt0.c2)))OR(rt0.c2))) ISNULL) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0 INNER JOIN v0 ON ((((((v0.c0)AND(rt0.c2)))OR(rt0.c2))) ISNULL) WHERE (((CAST(NULL AS NUMERIC)) NOTNULL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM rt0 INNER JOIN v0 ON ((((((v0.c0)AND(rt0.c2)))OR(rt0.c2))) ISNULL) WHERE ((NOT (((CAST(NULL AS NUMERIC)) NOTNULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM rt0 INNER JOIN v0 ON ((((((v0.c0)AND(rt0.c2)))OR(rt0.c2))) ISNULL) WHERE (((((CAST(NULL AS NUMERIC)) NOTNULL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM rt0 INNER JOIN v0 ON ((((((v0.c0)AND(rt0.c2)))OR(rt0.c2))) ISNULL) GROUP BY v0.c0;
SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING ((((COUNT(*))&(COUNT(NULL))))<=(COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING (NOT (((((COUNT(*))&(COUNT(NULL))))<=(COUNT(*))))) UNION ALL SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING ((((((COUNT(*))&(COUNT(NULL))))<=(COUNT(*)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING ((((COUNT(*))&(COUNT(NULL))))<=(COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING (NOT (((((COUNT(*))&(COUNT(NULL))))<=(COUNT(*))))) UNION ALL SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING ((((((COUNT(*))&(COUNT(NULL))))<=(COUNT(*)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (x'') UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (x''))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((x'') ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0, rt0 WHERE ((((0Xffffffffcdba4b5d))=((rt0.c1))) COLLATE RTRIM COLLATE RTRIM) UNION SELECT DISTINCT v0.c0 FROM v0, rt0 WHERE ((NOT ((((0xffffffffcdba4b5d))==((rt0.c1))) COLLATE RTRIM COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0 FROM v0, rt0 WHERE ((((((0Xffffffffcdba4b5d))=((rt0.c1))) COLLATE RTRIM COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, rt0;
SELECT rt0.c0, rt0.c1 FROM v0 CROSS JOIN rt0 ON (((rt0.c2 IN ())) BETWEEN ((rt0.c1 IN ())) AND (ROUND(rt0.c2, rt0.c1))) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM v0 CROSS JOIN rt0 ON (((rt0.c2 IN ())) BETWEEN ((rt0.c1 IN ())) AND (ROUND(rt0.c2, rt0.c1))) WHERE (((((rt0.c2)AND((rt0.c0 IN ()))))OR(LIKELIHOOD(v0.c0, 0.18456546760458792)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM v0 CROSS JOIN rt0 ON (((rt0.c2 IN ())) BETWEEN ((rt0.c1 IN ())) AND (ROUND(rt0.c2, rt0.c1))) WHERE ((NOT (((((rt0.c2)AND((rt0.c0 IN ()))))OR(LIKELIHOOD(v0.c0, 0.18456546760458792)))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM v0 CROSS JOIN rt0 ON (((rt0.c2 IN ())) BETWEEN ((rt0.c1 IN ())) AND (ROUND(rt0.c2, rt0.c1))) WHERE (((((((rt0.c2)AND((rt0.c0 IN ()))))OR(LIKELIHOOD(v0.c0, 0.18456546760458792)))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM v0 CROSS JOIN rt0 ON (((rt0.c2 IN ())) BETWEEN ((rt0.c1 IN ())) AND (ROUND(rt0.c2, rt0.c1))) GROUP BY rt0.c0, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(MIN(SUM(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(MIN(SUM(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(MIN(SUM(v0.c0)))) ISNULL);
SELECT ALL MIN(v0.c0) FROM v0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (x'7daa') UNION ALL SELECT * FROM rt0 WHERE ((NOT (x'7daa'))) UNION ALL SELECT ALL * FROM rt0 WHERE (((x'7daa') ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((CAST(rt0.c0 AS BLOB))||(((rt0.c2)==(NULL))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((CAST(rt0.c0 AS BLOB))||(((rt0.c2)=(NULL))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((CAST(rt0.c0 AS BLOB))||(((rt0.c2)=(NULL))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (LOWER(((((((((0.8745173341068262)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (LOWER(((((((((0.8745173341068262)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((LOWER(((((((((0.8745173341068262)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING COUNT(GROUP_CONCAT(MAX(rt0.c2))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(GROUP_CONCAT(MAX(rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(GROUP_CONCAT(MAX(rt0.c2)))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (((((((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END)AND((- (rt0.c1)))))OR(((rt0.c0)*(rt0.c2)))))AND((rt0.c2 IN ()))))OR(((rt0.c2) IS FALSE)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END)AND((- (rt0.c1)))))OR(((rt0.c0)*(rt0.c2)))))AND((rt0.c2 IN ()))))OR(((rt0.c2) IS FALSE)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((((((((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END)AND((- (rt0.c1)))))OR(((rt0.c0)*(rt0.c2)))))AND((rt0.c2 IN ()))))OR(((rt0.c2) IS FALSE)))) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((UNLIKELY(DISTINCT v0.c0))+(((((v0.c0)AND(v0.c0)))AND(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((UNLIKELY(DISTINCT v0.c0))+(((((v0.c0)AND(v0.c0)))AND(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((UNLIKELY(DISTINCT v0.c0))+(((((v0.c0)AND(v0.c0)))AND(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (0.7593453908898669) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (0.7593453908898669))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((0.7593453908898669) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING AVG(((MAX(0.23659715474143272))|(v0.c0))) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING (NOT (AVG(((MAX(0.23659715474143272))|(v0.c0))))) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0 NOT INDEXED GROUP BY rt0.c0 HAVING ((AVG(((MAX(0.23659715474143272))|(v0.c0)))) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END AS REAL)) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END AS REAL)))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END AS REAL)) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 WHERE (((CAST(rt0.c0 AS REAL)) IS FALSE)) UNION SELECT DISTINCT rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT (((CAST(rt0.c0 AS REAL)) IS FALSE)))) UNION SELECT DISTINCT rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 WHERE (((((CAST(rt0.c0 AS REAL)) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0, rt0.c0, rt0.c2 FROM rt0, v0;
SELECT ALL v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2;
SELECT v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) IN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE NULL END))) GROUP BY v0.c0, rt0.c0, rt0.c2 UNION SELECT ALL v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT ((((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) IN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE NULL END))))) GROUP BY v0.c0, rt0.c0, rt0.c2 UNION SELECT ALL v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((((((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) IN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE NULL END))) ISNULL)) GROUP BY v0.c0, rt0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING MIN(COUNT('1930872989')) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (MIN(COUNT('1930872989')))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((MIN(COUNT('1930872989'))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)) BETWEEN ((((((v0.c0)AND(v0.c0)))OR(v0.c0)))) AND ((NULL)))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((((((v0.c0)AND(v0.c0)))OR(v0.c0)))) AND ((NULL)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)) BETWEEN ((((((v0.c0)AND(v0.c0)))OR(v0.c0)))) AND ((NULL)))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0, rt0 WHERE (((rt0.c2)OR(rt0.c1)) COLLATE RTRIM) UNION SELECT DISTINCT v0.c0 FROM v0, rt0 WHERE ((NOT (((rt0.c2)OR(rt0.c1)) COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0 FROM v0, rt0 WHERE (((((rt0.c2)OR(rt0.c1)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, rt0;
SELECT ALL v0.c0, rt0.c2 FROM rt0 CROSS JOIN v0 ON LIKELIHOOD(((rt0.c1) NOT BETWEEN (x'7e046d2e') AND (rt0.c1)), 0.9904256644492032) GROUP BY v0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c2 FROM rt0 CROSS JOIN v0 ON LIKELIHOOD(((rt0.c1) NOT BETWEEN (x'7e046d2e') AND (rt0.c1)), 0.9904256644492032) WHERE (((((((rt0.c1)OR(v0.c0)))AND(rt0.c0)))&((- (v0.c0))))) GROUP BY v0.c0, rt0.c2 UNION SELECT v0.c0, rt0.c2 FROM rt0 CROSS JOIN v0 ON LIKELIHOOD(((rt0.c1) NOT BETWEEN (x'7e046d2e') AND (rt0.c1)), 0.9904256644492032) WHERE ((NOT (((((((rt0.c1)OR(v0.c0)))AND(rt0.c0)))&((- (v0.c0))))))) GROUP BY v0.c0, rt0.c2 UNION SELECT v0.c0, rt0.c2 FROM rt0 CROSS JOIN v0 ON LIKELIHOOD(((rt0.c1) NOT BETWEEN (x'7e046d2e') AND (rt0.c1)), 0.9904256644492032) WHERE (((((((((rt0.c1)OR(v0.c0)))AND(rt0.c0)))&((- (v0.c0))))) ISNULL)) GROUP BY v0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c2 FROM rt0 CROSS JOIN v0 ON LIKELIHOOD(((rt0.c1) NOT BETWEEN (x'7e046d2e') AND (rt0.c1)), 0.9904256644492032) GROUP BY v0.c0, rt0.c2;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING ((rt0.c0 COLLATE NOCASE)%(AVG(MAX(MIN(COUNT(COUNT(MIN(rt0.c0)))))))) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING (NOT (((rt0.c0 COLLATE NOCASE)%(AVG(MAX(MIN(COUNT(COUNT(MIN(rt0.c0)))))))))) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING ((((rt0.c0 COLLATE NOCASE)%(AVG(MAX(MIN(COUNT(COUNT(MIN(rt0.c0))))))))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((+ ((NOT (v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((+ ((NOT (v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE ((((+ ((NOT (v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c2 FROM v0 INNER JOIN rt0 ON ((TIME(rt0.c0, v0.c0, v0.c0)) NOT BETWEEN (((rt0.c2)>>(rt0.c1))) AND (rt0.c2 COLLATE NOCASE));
SELECT DISTINCT rt0.c2 FROM v0 INNER JOIN rt0 ON ((TIME(rt0.c0, v0.c0, v0.c0)) NOT BETWEEN (((rt0.c2)>>(rt0.c1))) AND (rt0.c2 COLLATE NOCASE)) WHERE ((~ (CAST(NULL AS TEXT)))) UNION SELECT DISTINCT rt0.c2 FROM v0 INNER JOIN rt0 ON ((TIME(rt0.c0, v0.c0, v0.c0)) NOT BETWEEN (((rt0.c2)>>(rt0.c1))) AND (rt0.c2 COLLATE NOCASE)) WHERE ((NOT ((~ (CAST(NULL AS TEXT)))))) UNION SELECT DISTINCT rt0.c2 FROM v0 INNER JOIN rt0 ON ((TIME(rt0.c0, v0.c0, v0.c0)) NOT BETWEEN (((rt0.c2)>>(rt0.c1))) AND (rt0.c2 COLLATE NOCASE)) WHERE ((((~ (CAST(NULL AS TEXT)))) ISNULL));
SELECT DISTINCT rt0.c2 FROM v0 INNER JOIN rt0 ON ((TIME(rt0.c0, v0.c0, v0.c0)) NOT BETWEEN (((rt0.c2)>>(rt0.c1))) AND (rt0.c2 COLLATE NOCASE));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((~ (v0.c0)))-(STRFTIME(v0.c0, v0.c0, NULL, v0.c0, v0.c0)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((~ (v0.c0)))-(STRFTIME(v0.c0, v0.c0, NULL, v0.c0, v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((~ (v0.c0)))-(STRFTIME(v0.c0, v0.c0, NULL, v0.c0, v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(COUNT(SUM(MAX(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(COUNT(SUM(MAX(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(COUNT(SUM(MAX(v0.c0))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)OR(v0.c0)))AND(v0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)OR(v0.c0)))AND(v0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0)) COLLATE RTRIM) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (highlight(((rt0.c0)>=(rt0.c2)), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)), IFNULL(rt0.c2, rt0.c0), ((((((((rt0.c0)AND(rt0.c1)))OR(0.5791635273643642)))AND(rt0.c2)))AND(rt0.c1)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (highlight(((rt0.c0)>=(rt0.c2)), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)), IFNULL(rt0.c2, rt0.c0), ((((((((rt0.c0)AND(rt0.c1)))OR(0.5791635273643642)))AND(rt0.c2)))AND(rt0.c1)))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((highlight(((rt0.c0)>=(rt0.c2)), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)), IFNULL(rt0.c2, rt0.c0), ((((((((rt0.c0)AND(rt0.c1)))OR(0.5791635273643642)))AND(rt0.c2)))AND(rt0.c1)))) ISNULL));
SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0 WHERE (((((0.9027868183425656)|(rt0.c0)))%(x''))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM v0, rt0 WHERE ((NOT (((((0.9027868183425656)|(rt0.c0)))%(x''))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM v0, rt0 WHERE (((((((0.9027868183425656)|(rt0.c0)))%(x''))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0 HAVING ((AVG(rt0.c1)) NOT BETWEEN ((((rt0.c0, MAX(MAX(1e500)), COUNT(*))) NOT BETWEEN ((rt0.c0, rt0.c0, v0.c0)) AND ((COUNT(*), COUNT(rt0.c1), MAX(v0.c0))))) AND (TOTAL(rt0.c2) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0 HAVING (NOT (((AVG(rt0.c1)) NOT BETWEEN ((((rt0.c0, MAX(MAX(1e500)), COUNT(*))) NOT BETWEEN ((rt0.c0, rt0.c0, v0.c0)) AND ((COUNT(*), COUNT(rt0.c1), MAX(v0.c0))))) AND (TOTAL(rt0.c2) COLLATE RTRIM)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0 HAVING ((((AVG(rt0.c1)) NOT BETWEEN ((((rt0.c0, MAX(MAX(1e500)), COUNT(*))) NOT BETWEEN ((rt0.c0, rt0.c0, v0.c0)) AND ((COUNT(*), COUNT(rt0.c1), MAX(v0.c0))))) AND (TOTAL(rt0.c2) COLLATE RTRIM))) ISNULL);
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(IFNULL(-1545547919, rt0.c2))))AND(rt0.c2))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(IFNULL(-1545547919, rt0.c2))))AND(rt0.c2))))) UNION ALL SELECT * FROM rt0, v0 NOT INDEXED WHERE (((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(IFNULL(-1545547919, rt0.c2))))AND(rt0.c2))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)<((+ (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE BINARY)<((+ (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY)<((+ (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND ((CASE rt0.c1  WHEN ']\n' THEN rt0.c0 END))) GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND ((CASE rt0.c1  WHEN ']\n' THEN rt0.c0 END))) WHERE ((NOT (rt0.c1)) COLLATE BINARY) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND ((CASE rt0.c1  WHEN ']\n' THEN rt0.c0 END))) WHERE ((NOT ((NOT (rt0.c1)) COLLATE BINARY))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND ((CASE rt0.c1  WHEN ']\n' THEN rt0.c0 END))) WHERE ((((NOT (rt0.c1)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND ((CASE rt0.c1  WHEN ']\n' THEN rt0.c0 END))) GROUP BY rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(SUM(GROUP_CONCAT(SUM(SUM(AVG(GROUP_CONCAT(SUM(AVG(MIN(v0.c0)))))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(SUM(GROUP_CONCAT(SUM(SUM(AVG(GROUP_CONCAT(SUM(AVG(MIN(v0.c0)))))))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(SUM(GROUP_CONCAT(SUM(SUM(AVG(GROUP_CONCAT(SUM(AVG(MIN(v0.c0))))))))))) ISNULL);
SELECT * FROM rt0 NATURAL JOIN v0;
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (((x'')GLOB(CASE WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c2 END))) UNION ALL SELECT * FROM rt0 NATURAL JOIN v0 WHERE ((NOT (((x'')GLOB(CASE WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c2 END))))) UNION ALL SELECT * FROM rt0 NATURAL JOIN v0 WHERE (((((x'')GLOB(CASE WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c2 END))) ISNULL));
SELECT * FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON ((((v0.c0)IS NOT(rt0.c1))) IS TRUE);
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON ((((v0.c0)IS NOT(rt0.c1))) IS TRUE) WHERE ((((rt0.c0)OR(v0.c0)) IN (((rt0.c1)LIKE(v0.c0)), ('441252777' IN ())))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON ((((v0.c0)IS NOT(rt0.c1))) IS TRUE) WHERE ((NOT ((((rt0.c0)OR(v0.c0)) IN (((rt0.c1)LIKE(v0.c0)), ('441252777' IN ())))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON ((((v0.c0)IS NOT(rt0.c1))) IS TRUE) WHERE ((((((rt0.c0)OR(v0.c0)) IN (((rt0.c1)LIKE(v0.c0)), ('441252777' IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON ((((v0.c0)IS NOT(rt0.c1))) IS TRUE);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))>>((((rt0.c0))==((rt0.c2)))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))>>((((rt0.c0))=((rt0.c2)))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))>>((((rt0.c0))=((rt0.c2)))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c0, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c1, rt0.c0 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c0, rt0.c1, rt0.c0 HAVING AVG(AVG(GROUP_CONCAT(rt0.c2))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c0 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c0, rt0.c1, rt0.c0 HAVING (NOT (AVG(AVG(GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c0 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c0, rt0.c1, rt0.c0 HAVING ((AVG(AVG(GROUP_CONCAT(rt0.c2)))) ISNULL);
SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0;
SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))AND(v0.c0)) ELSE rt0.c0 COLLATE NOCASE END) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 WHERE ((NOT (CASE WHEN (rt0.c2 IN ()) THEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))AND(v0.c0)) ELSE rt0.c0 COLLATE NOCASE END))) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 WHERE (((CASE WHEN (rt0.c2 IN ()) THEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))AND(v0.c0)) ELSE rt0.c0 COLLATE NOCASE END) ISNULL));
SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ('457102343') UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ('457102343'))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((('457102343') ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE PRINTF(v0.c0)  WHEN (NOT (v0.c0)) THEN (((v0.c0))>((v0.c0))) ELSE (((v0.c0))<((v0.c0))) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE PRINTF(v0.c0)  WHEN (NOT (v0.c0)) THEN (((v0.c0))>((v0.c0))) ELSE (((v0.c0))<((v0.c0))) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE PRINTF(v0.c0)  WHEN (NOT (v0.c0)) THEN (((v0.c0))>((v0.c0))) ELSE (((v0.c0))<((v0.c0))) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING GROUP_CONCAT((NOT (GROUP_CONCAT(GROUP_CONCAT(MIN(SUM(rt0.c2))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (GROUP_CONCAT((NOT (GROUP_CONCAT(GROUP_CONCAT(MIN(SUM(rt0.c2))))))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((GROUP_CONCAT((NOT (GROUP_CONCAT(GROUP_CONCAT(MIN(SUM(rt0.c2)))))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END AS BLOB)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END AS BLOB)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END AS BLOB)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 0.47778526014515044 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(UNLIKELY(DISTINCT v0.c0))))AND(v0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 0.47778526014515044 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(UNLIKELY(DISTINCT v0.c0))))AND(v0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 0.47778526014515044 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(UNLIKELY(DISTINCT v0.c0))))AND(v0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, v0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) IS FALSE)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, v0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) IS FALSE)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, v0 WHERE (((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) IS FALSE)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (CAST((((rt0.c0, rt0.c1, rt0.c0))<((rt0.c1, '930296801', rt0.c0))) AS REAL)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST((((rt0.c0, rt0.c1, rt0.c0))<((rt0.c1, '930296801', rt0.c0))) AS REAL)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST((((rt0.c0, rt0.c1, rt0.c0))<((rt0.c1, '930296801', rt0.c0))) AS REAL)) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (LTRIM(x'', ((rt0.c0)||(rt0.c2)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (LTRIM(x'', ((rt0.c0)||(rt0.c2)))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((LTRIM(x'', ((rt0.c0)||(rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0 WHERE (load_extension(v0.c0, rt0.c1) COLLATE NOCASE) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM v0, rt0 WHERE ((NOT (load_extension(v0.c0, rt0.c1) COLLATE NOCASE))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM v0, rt0 WHERE (((load_extension(v0.c0, rt0.c1) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c2, rt0.c0 HAVING (((((MIN(MAX(SUM(MAX(rt0.c2))))) IS TRUE), COUNT(*), COUNT(*)))!=((SUM(GROUP_CONCAT(rt0.c0)), (GROUP_CONCAT(rt0.c1) IN ()), SUM(rt0.c2)))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c2, rt0.c0 HAVING (NOT ((((((MIN(MAX(SUM(MAX(rt0.c2))))) IS TRUE), COUNT(*), COUNT(*)))<>((SUM(GROUP_CONCAT(rt0.c0)), (GROUP_CONCAT(rt0.c1) IN ()), SUM(rt0.c2)))))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c2, rt0.c0 HAVING (((((((MIN(MAX(SUM(MAX(rt0.c2))))) IS TRUE), COUNT(*), COUNT(*)))!=((SUM(GROUP_CONCAT(rt0.c0)), (GROUP_CONCAT(rt0.c1) IN ()), SUM(rt0.c2))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (HEX(DISTINCT CAST(rt0.c1 AS TEXT))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (HEX(DISTINCT CAST(rt0.c1 AS TEXT))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((HEX(DISTINCT CAST(rt0.c1 AS TEXT))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c0 FROM rt0, v0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c0 FROM rt0, v0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c0 FROM rt0, v0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, v0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((x'')AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))))AND(((rt0.c2)>(rt0.c2))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((x'')AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))))AND(((rt0.c2)>(rt0.c2))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((((x'')AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))))AND(((rt0.c2)>(rt0.c2))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2 HAVING MIN(COUNT(GROUP_CONCAT(MIN(rt0.c0)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MIN(COUNT(GROUP_CONCAT(MIN(rt0.c0)))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2 HAVING ((MIN(COUNT(GROUP_CONCAT(MIN(rt0.c0))))) ISNULL);
SELECT ALL SUM(((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))>=(''))) FROM v0 ORDER BY ((v0.c0)IS NOT(v0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE ((((((((rt0.c2))>((rt0.c2))))OR(((rt0.c2) NOT BETWEEN (v0.c0) AND (x'')))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT ((((((((rt0.c2))>((rt0.c2))))OR(((rt0.c2) NOT BETWEEN (v0.c0) AND (x'')))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END))))) UNION ALL SELECT * FROM v0, rt0 WHERE ((((((((((rt0.c2))>((rt0.c2))))OR(((rt0.c2) NOT BETWEEN (v0.c0) AND (x'')))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END))) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE (((((v0.c0)>(''))) BETWEEN ((~ ('X%6m褄'))) AND (rt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((NOT (((((v0.c0)>(''))) BETWEEN ((~ ('X%6m褄'))) AND (rt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE (((((((v0.c0)>(''))) BETWEEN ((~ ('X%6m褄'))) AND (rt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE CAST(v0.c0 AS REAL)  WHEN ((v0.c0)GLOB(v0.c0)) THEN CAST(v0.c0 AS BLOB) ELSE v0.c0 END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE CAST(v0.c0 AS REAL)  WHEN ((v0.c0)GLOB(v0.c0)) THEN CAST(v0.c0 AS BLOB) ELSE v0.c0 END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CASE CAST(v0.c0 AS REAL)  WHEN ((v0.c0)GLOB(v0.c0)) THEN CAST(v0.c0 AS BLOB) ELSE v0.c0 END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c0;
SELECT ALL v0.c0, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c0 HAVING ((((rt0.c2)%(rt0.c1))) BETWEEN ((((COUNT(*))) BETWEEN ((rt0.c2)) AND ((v0.c0)))) AND (((rt0.c0)<(SUM(rt0.c2))))) UNION ALL SELECT ALL v0.c0, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c0 HAVING (NOT (((((rt0.c2)%(rt0.c1))) BETWEEN ((((COUNT(*))) BETWEEN ((rt0.c2)) AND ((v0.c0)))) AND (((rt0.c0)<(SUM(rt0.c2))))))) UNION ALL SELECT ALL v0.c0, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c0 HAVING ((((((rt0.c2)%(rt0.c1))) BETWEEN ((((COUNT(*))) BETWEEN ((rt0.c2)) AND ((v0.c0)))) AND (((rt0.c0)<(SUM(rt0.c2)))))) ISNULL);
SELECT ALL v0.c0, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c0;
SELECT ALL v0.c0, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c0 HAVING ((((rt0.c2)%(rt0.c1))) BETWEEN ((((COUNT(*))) BETWEEN ((rt0.c2)) AND ((v0.c0)))) AND (((rt0.c0)<(SUM(rt0.c2))))) UNION ALL SELECT ALL v0.c0, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c0 HAVING (NOT (((((rt0.c2)%(rt0.c1))) BETWEEN ((((COUNT(*))) BETWEEN ((rt0.c2)) AND ((v0.c0)))) AND (((rt0.c0)<(SUM(rt0.c2))))))) UNION ALL SELECT ALL v0.c0, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c0 HAVING ((((((rt0.c2)%(rt0.c1))) BETWEEN ((((COUNT(*))) BETWEEN ((rt0.c2)) AND ((v0.c0)))) AND (((rt0.c0)<(SUM(rt0.c2)))))) ISNULL);
SELECT ALL v0.c0, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((~ (v0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((~ (v0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((~ (v0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((- (((rt0.c0)|(rt0.c0))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((- (((rt0.c0)|(rt0.c0))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((- (((rt0.c0)|(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, v0 WHERE (0.2078970369922114) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, v0 WHERE ((NOT (0.2078970369922114))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, v0 WHERE (((0.2078970369922114) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING SUM(COUNT(rt0.c0)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (SUM(COUNT(rt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((SUM(COUNT(rt0.c0))) ISNULL);
SELECT ALL v0.c0 FROM v0, rt0;
SELECT v0.c0 FROM v0, rt0 WHERE ((CASE WHEN 0.041753592499925385 THEN v0.c0 END IN (v0.c0 COLLATE BINARY))) UNION ALL SELECT v0.c0 FROM v0, rt0 WHERE ((NOT ((CASE WHEN 0.041753592499925385 THEN v0.c0 END IN (v0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL v0.c0 FROM v0, rt0 WHERE ((((CASE WHEN 0.041753592499925385 THEN v0.c0 END IN (v0.c0 COLLATE BINARY))) ISNULL));
SELECT ALL v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c1 FROM v0, rt0 WHERE (((CAST(rt0.c2 AS INTEGER))%(((rt0.c2)<(rt0.c0))))) UNION SELECT DISTINCT rt0.c1 FROM v0, rt0 WHERE ((NOT (((CAST(rt0.c2 AS INTEGER))%(((rt0.c2)<(rt0.c0))))))) UNION SELECT DISTINCT rt0.c1 FROM v0, rt0 WHERE (((((CAST(rt0.c2 AS INTEGER))%(((rt0.c2)<(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS INTEGER)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS INTEGER)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS INTEGER)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM rt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING TOTAL(SUM(rt0.c0)) UNION ALL SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(SUM(rt0.c0)))) UNION ALL SELECT v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING ((TOTAL(SUM(rt0.c0))) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (CAST((rt0.c0 IN ()) AS TEXT)) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (CAST((rt0.c0 IN ()) AS TEXT)))) UNION ALL SELECT * FROM rt0, v0 WHERE (((CAST((rt0.c0 IN ()) AS TEXT)) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((- ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((- ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0)))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((- ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN NULL ELSE rt0.c1 END))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN NULL ELSE rt0.c1 END))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN NULL ELSE rt0.c1 END))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING SUM((+ (rt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (SUM((+ (rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((SUM((+ (rt0.c0)))) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING SUM((+ (rt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (SUM((+ (rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((SUM((+ (rt0.c0)))) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL MIN(((rt0.c2 COLLATE BINARY)<<(rt0.c0 COLLATE BINARY))) FROM rt0 ORDER BY (((rt0.c0, x'5d37', rt0.c2)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB), (- (rt0.c1)), rt0.c1)) AND ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END, rt0.c1, ((rt0.c2)|(rt0.c1))))), CAST(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) AS REAL)  NULLS FIRST, SQLITE_COMPILEOPTION_GET(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END);
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT ((v0.c0 IN ()) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((((v0.c0 IN ()) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))*(''))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))*(''))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))*(''))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (CASE ((rt0.c2) IS FALSE)  WHEN rt0.c0 COLLATE NOCASE THEN '' END) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CASE ((rt0.c2) IS FALSE)  WHEN rt0.c0 COLLATE NOCASE THEN '' END))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE ((rt0.c2) IS FALSE)  WHEN rt0.c0 COLLATE NOCASE THEN '' END) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(TOTAL(MAX(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(TOTAL(MAX(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(TOTAL(MAX(v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN ((v0.c0)>>(v0.c0)) ELSE CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'39e1' ELSE v0.c0 END END) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN (v0.c0 IN ()) THEN ((v0.c0)>>(v0.c0)) ELSE CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'39e1' ELSE v0.c0 END END))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN (v0.c0 IN ()) THEN ((v0.c0)>>(v0.c0)) ELSE CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'39e1' ELSE v0.c0 END END) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((CAST(v0.c0 AS BLOB) IN ())) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((CAST(v0.c0 AS BLOB) IN ())))) UNION SELECT DISTINCT * FROM v0 WHERE ((((CAST(v0.c0 AS BLOB) IN ())) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c0) NOT BETWEEN ('0.4745582690548886') AND (rt0.c1))))<=(((rt0.c0 IN (rt0.c1)))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c0) NOT BETWEEN ('0.4745582690548886') AND (rt0.c1))))<=(((rt0.c0 IN (rt0.c1)))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((((((rt0.c0) NOT BETWEEN ('0.4745582690548886') AND (rt0.c1))))<=(((rt0.c0 IN (rt0.c1)))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(COUNT(*) AS BLOB) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(COUNT(*) AS BLOB))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(COUNT(*) AS BLOB)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(COUNT(*) AS BLOB) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(COUNT(*) AS BLOB))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(COUNT(*) AS BLOB)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN ((v0.c0) BETWEEN (v0.c0) AND ('0.825935224407565')) WHEN (NOT (v0.c0)) THEN NULL COLLATE NOCASE WHEN ((v0.c0)IS(v0.c0)) THEN 0.8123903987501295 END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN (v0.c0 IN ()) THEN ((v0.c0) BETWEEN (v0.c0) AND ('0.825935224407565')) WHEN (NOT (v0.c0)) THEN NULL COLLATE NOCASE WHEN ((v0.c0)IS(v0.c0)) THEN 0.8123903987501295 END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE WHEN (v0.c0 IN ()) THEN ((v0.c0) BETWEEN (v0.c0) AND ('0.825935224407565')) WHEN (NOT (v0.c0)) THEN NULL COLLATE NOCASE WHEN ((v0.c0)IS(v0.c0)) THEN 0.8123903987501295 END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c2 AS INTEGER))==((((rt0.c2, rt0.c0, rt0.c1))<=((rt0.c2, rt0.c2, 0.20630760869859144)))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS INTEGER))==((((rt0.c2, rt0.c0, rt0.c1))<=((rt0.c2, rt0.c2, 0.20630760869859144)))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((CAST(rt0.c2 AS INTEGER))==((((rt0.c2, rt0.c0, rt0.c1))<=((rt0.c2, rt0.c2, 0.20630760869859144)))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(AVG(MAX(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(AVG(MAX(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(AVG(MAX(v0.c0)))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (CAST((- (v0.c0)) AS BLOB)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (CAST((- (v0.c0)) AS BLOB)))) UNION ALL SELECT ALL * FROM v0 WHERE (((CAST((- (v0.c0)) AS BLOB)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) IN (((rt0.c1)/(rt0.c2)), (1323952554 IN ())))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) IN (((rt0.c1)/(rt0.c2)), (1323952554 IN ())))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) IN (((rt0.c1)/(rt0.c2)), (1323952554 IN ())))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))LIKE(((rt0.c1)%(rt0.c1))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))LIKE(((rt0.c1)%(rt0.c1))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))LIKE(((rt0.c1)%(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING MAX((((rt0.c0, rt0.c1, rt0.c0))<=((SUM(GROUP_CONCAT(AVG(rt0.c1))), rt0.c0, rt0.c2)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MAX((((rt0.c0, rt0.c1, rt0.c0))<=((SUM(GROUP_CONCAT(AVG(rt0.c1))), rt0.c0, rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((MAX((((rt0.c0, rt0.c1, rt0.c0))<=((SUM(GROUP_CONCAT(AVG(rt0.c1))), rt0.c0, rt0.c2))))) ISNULL);
SELECT SUM('-903486319') FROM rt0, v0 ORDER BY v0.c0  NULLS LAST;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((((NOT (rt0.c1))) IS FALSE)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((NOT ((((NOT (rt0.c1))) IS FALSE)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((((((NOT (rt0.c1))) IS FALSE)) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c1)GLOB(rt0.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((rt0.c1)GLOB(rt0.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((rt0.c1)GLOB(rt0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0;
