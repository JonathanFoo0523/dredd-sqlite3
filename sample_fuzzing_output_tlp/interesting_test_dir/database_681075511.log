-- Time: 2024/06/10 02:56:20
-- Database: database11
-- Database version: 3.40.0
-- seed value: 681075511
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0); -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
PRAGMA main.stats; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt0 SET c2='-1491735216' WHERE ((((rt0.c1) IS TRUE)) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) AND ((x'' IN ()))); -- 0ms;
PRAGMA main.busy_timeout; -- 0ms;
COMMIT TRANSACTION; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 4); -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
PRAGMA temp.cache_spill = true; -- 1ms;
UPDATE OR REPLACE vt1 SET (c0)=(NULL); -- 0ms;
DELETE FROM rt0; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 521622781); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '22262'); -- 4ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
VACUUM; -- 1ms;
PRAGMA secure_delete; -- 1ms;
PRAGMA temp.legacy_file_format = false; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(x'f47c'); -- 0ms;
UPDATE OR IGNORE rt0 SET c1='' WHERE COALESCE(DISTINCT 0.38067598505901756, rt0.c2, rt0.c2, rt0.c1) COLLATE RTRIM; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt0 SET (c0)=('1096663555'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1630725970); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA temp.busy_timeout; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA mmap_size = 6624072153136830772; -- 0ms;
UPDATE OR ABORT rt0 SET c0=x'' WHERE ((((rt0.c0)<<(rt0.c2)))>=(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))); -- 0ms;
PRAGMA checkpoint_fullfsync = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.mmap_size = -4703106629432067364; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
PRAGMA main.automatic_index; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE vt1 SET (c0, c0)=(NULL, '-926357495'); -- 0ms;
REINDEX  rt0; -- 1ms;
END TRANSACTION; -- 0ms;
PRAGMA cache_spill = false; -- 0ms;
PRAGMA application_id = 6188490249242706176; -- 0ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
PRAGMA main.mmap_size = 7084774777365669073; -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
UPDATE rt0 SET c0='-1476568835'; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '21685'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '1910'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '31043'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1708054664); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '43003'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1156433654); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 7); -- 1ms;
INSERT INTO vt1(vt1) VALUES('merge=1186221630,4');\n; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(''); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0X46b44e3e, c0=NULL; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE vt1 SET (c0)=(0.9724320043220531); -- 0ms;
UPDATE OR ABORT rt0 SET (c0)=(NULL) WHERE ((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)OR(rt0.c0 COLLATE RTRIM)))OR(((rt0.c1) NOTNULL))); -- 0ms;
PRAGMA cache_spill = 8311887366191623489; -- 0ms;
UPDATE OR REPLACE vt1 SET (c0)=(NULL) WHERE (+ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1646488450,4');\n; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE ((~ ((((0.7447032366382981)) BETWEEN ((rt0.c2)) AND ((vt1.c0)))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT ((~ ((((0.7447032366382981)) BETWEEN ((rt0.c2)) AND ((vt1.c0)))))))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((((~ ((((0.7447032366382981)) BETWEEN ((rt0.c2)) AND ((vt1.c0)))))) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT rt0.c2, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON COALESCE((- (rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)));
SELECT DISTINCT rt0.c2, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON COALESCE((- (rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) WHERE ((((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1)) IN (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))) UNION SELECT DISTINCT rt0.c2, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON COALESCE((- (rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) WHERE ((NOT ((((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1)) IN (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))))) UNION SELECT DISTINCT rt0.c2, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON COALESCE((- (rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) WHERE ((((((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1)) IN (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))) ISNULL));
SELECT DISTINCT rt0.c2, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON COALESCE((- (rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)));
SELECT rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (0x415dc203) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((NOT (0x415dc203))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (((0x415dc203) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) COLLATE RTRIM UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*) COLLATE RTRIM)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*) COLLATE RTRIM) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) COLLATE RTRIM UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*) COLLATE RTRIM)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*) COLLATE RTRIM) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (((~ (rt0.c0)) IN ())) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (((~ (rt0.c0)) IN ())))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((((~ (rt0.c0)) IN ())) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((((((('-2054600181')AND(((rt0.c2)-(rt0.c1)))))AND(rt0.c1)))AND(((rt0.c0) IS TRUE))))OR(NULL))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT ((((((((('-2054600181')AND(((rt0.c2)-(rt0.c1)))))AND(rt0.c1)))AND(((rt0.c0) IS TRUE))))OR(NULL))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((((((((('-2054600181')AND(((rt0.c2)-(rt0.c1)))))AND(rt0.c1)))AND(((rt0.c0) IS TRUE))))OR(NULL))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((((- (rt0.c1)))<<(LIKELY(DISTINCT vt1.c0)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((NOT ((((- (rt0.c1)))<<(LIKELY(DISTINCT vt1.c0)))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((((((- (rt0.c1)))<<(LIKELY(DISTINCT vt1.c0)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING UPPER(DISTINCT MAX(COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (UPPER(DISTINCT MAX(COUNT(*))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((UPPER(DISTINCT MAX(COUNT(*)))) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0, vt1;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt1 WHERE (((((((rt0.c2) BETWEEN (vt1.c0) AND (vt1.c0)))AND((('-1971588925')*(rt0.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt1 WHERE ((NOT (((((((rt0.c2) BETWEEN (vt1.c0) AND (vt1.c0)))AND((('-1971588925')*(rt0.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0, vt1 WHERE (((((((((rt0.c2) BETWEEN (vt1.c0) AND (vt1.c0)))AND((('-1971588925')*(rt0.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE ((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((NULL, ((rt0.c1)&(rt0.c1)), CASE WHEN 'wFg2Ud殂' THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 WHEN '1186221630' THEN rt0.c2 END)) AND (((NOT (0.38636819617792606)), (+ (vt1.c0)), CASE WHEN rt0.c0 THEN rt0.c1 END)))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT ((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((NULL, ((rt0.c1)&(rt0.c1)), CASE WHEN 'wFg2Ud殂' THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 WHEN '1186221630' THEN rt0.c2 END)) AND (((NOT (0.38636819617792606)), (+ (vt1.c0)), CASE WHEN rt0.c0 THEN rt0.c1 END)))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((NULL, ((rt0.c1)&(rt0.c1)), CASE WHEN 'wFg2Ud殂' THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 WHEN '1186221630' THEN rt0.c2 END)) AND (((NOT (0.38636819617792606)), (+ (vt1.c0)), CASE WHEN rt0.c0 THEN rt0.c1 END)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (((vt1.c0)>(HEX(DISTINCT rt0.c0)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((NOT (((vt1.c0)>(HEX(DISTINCT rt0.c0)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (((((vt1.c0)>(HEX(DISTINCT rt0.c0)))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(AVG(COUNT(x''))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(AVG(COUNT(x''))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(AVG(COUNT(x'')))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END  WHEN (- (rt0.c0)) THEN ((rt0.c2) IS TRUE) ELSE json_object(rt0.c1, '') END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END  WHEN (- (rt0.c0)) THEN ((rt0.c2) IS TRUE) ELSE json_object(rt0.c1, '') END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END  WHEN (- (rt0.c0)) THEN ((rt0.c2) IS TRUE) ELSE json_object(rt0.c1, '') END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c0 FROM rt0, vt1 WHERE (CASE '1646488450'  WHEN rt0.c2 THEN ((rt0.c1)<(rt0.c2)) END) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt1 WHERE ((NOT (CASE '1646488450'  WHEN rt0.c2 THEN ((rt0.c1)<(rt0.c2)) END))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt1 WHERE (((CASE '1646488450'  WHEN rt0.c2 THEN ((rt0.c1)<(rt0.c2)) END) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, vt1;
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt1 WHERE (CHANGES()) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt1 WHERE ((NOT (CHANGES()))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt1 WHERE (((CHANGES()) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT ALL rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING AVG(MAX('-1476568835')) UNION ALL SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING (NOT (AVG(MAX('-1476568835')))) UNION ALL SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING ((AVG(MAX('-1476568835'))) ISNULL);
SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0;
SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE (CHAR(rt0.c0)) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((NOT (CHAR(rt0.c0)))) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE (((CHAR(rt0.c0)) ISNULL));
SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON x'';
SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON x'' WHERE ((NOT (0.9063382247602112))) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON x'' WHERE ((NOT ((NOT (0.9063382247602112))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON x'' WHERE ((((NOT (0.9063382247602112))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON x'';
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<<(json_type(vt1.c0)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<<(json_type(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<<(json_type(vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((AVG(rt0.c1)) NOTNULL) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((AVG(rt0.c1)) NOTNULL))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((AVG(rt0.c1)) NOTNULL)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((AVG(rt0.c1)) NOTNULL) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((AVG(rt0.c1)) NOTNULL))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((AVG(rt0.c1)) NOTNULL)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT * FROM rt0 INNER JOIN vt1 ON (((rt0.c0)) NOT BETWEEN ((json_array_length(rt0.c2))) AND ((CAST(rt0.c2 AS REAL))));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON (((rt0.c0)) NOT BETWEEN ((json_array_length(rt0.c2))) AND ((CAST(rt0.c2 AS REAL)))) WHERE ((((((((rt0.c0))<((rt0.c2))))AND(((vt1.c0)IS NOT(rt0.c0)))))OR(CASE vt1.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END))) UNION ALL SELECT * FROM rt0 INNER JOIN vt1 ON (((rt0.c0)) NOT BETWEEN ((json_array_length(rt0.c2))) AND ((CAST(rt0.c2 AS REAL)))) WHERE ((NOT ((((((((rt0.c0))<((rt0.c2))))AND(((vt1.c0)IS NOT(rt0.c0)))))OR(CASE vt1.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END))))) UNION ALL SELECT * FROM rt0 INNER JOIN vt1 ON (((rt0.c0)) NOT BETWEEN ((json_array_length(rt0.c2))) AND ((CAST(rt0.c2 AS REAL)))) WHERE ((((((((((rt0.c0))<((rt0.c2))))AND(((vt1.c0)IS NOT(rt0.c0)))))OR(CASE vt1.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END))) ISNULL));
SELECT * FROM rt0 INNER JOIN vt1 ON (((rt0.c0)) NOT BETWEEN ((json_array_length(rt0.c2))) AND ((CAST(rt0.c2 AS REAL))));
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON CAST(LIKELY(rt0.c2) AS INTEGER) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON CAST(LIKELY(rt0.c2) AS INTEGER) WHERE (UPPER(DISTINCT CAST('嚜HG0' AS NUMERIC))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON CAST(LIKELY(rt0.c2) AS INTEGER) WHERE ((NOT (UPPER(DISTINCT CAST('嚜HG0' AS NUMERIC))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON CAST(LIKELY(rt0.c2) AS INTEGER) WHERE (((UPPER(DISTINCT CAST('嚜HG0' AS NUMERIC))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON CAST(LIKELY(rt0.c2) AS INTEGER) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt1 INNER JOIN rt0 ON rt0.c0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt1 INNER JOIN rt0 ON rt0.c0 GROUP BY rt0.c2, rt0.c0 HAVING MAX((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, SUM(rt0.c2), SUM(SUM(COUNT(*))))) AND ((COUNT(vt1.c0), MIN(TOTAL(MAX('0.38067598505901756'))), rt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM vt1 INNER JOIN rt0 ON rt0.c0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MAX((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, SUM(rt0.c2), SUM(SUM(COUNT(*))))) AND ((COUNT(vt1.c0), MIN(TOTAL(MAX('0.38067598505901756'))), rt0.c1)))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt1 INNER JOIN rt0 ON rt0.c0 GROUP BY rt0.c2, rt0.c0 HAVING ((MAX((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, SUM(rt0.c2), SUM(SUM(COUNT(*))))) AND ((COUNT(vt1.c0), MIN(TOTAL(MAX('0.38067598505901756'))), rt0.c1))))) ISNULL);
SELECT ALL MIN(CASE WHEN rt0.c0 COLLATE NOCASE THEN ((NULL)+(rt0.c1)) ELSE ((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)) END) FROM vt1, rt0 ORDER BY ((((((rt0.c0)-(rt0.c0)))OR(CAST(rt0.c2 AS REAL))))AND(vt1.c0))  NULLS FIRST, ((CAST(rt0.c1 AS NUMERIC)) NOTNULL) ASC  NULLS LAST;
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((NOT (rt0.c2)))>>(TRIM(rt0.c2, rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((NOT (rt0.c2)))>>(TRIM(rt0.c2, rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((((NOT (rt0.c2)))>>(TRIM(rt0.c2, rt0.c0)))) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE;
SELECT DISTINCT rt0.c1, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE WHERE (((((rt0.c2)<(vt1.c0))) NOT BETWEEN ('1186221630' COLLATE NOCASE) AND (CASE WHEN rt0.c0 THEN 0.5114851855755622 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE WHERE ((NOT (((((rt0.c2)<(vt1.c0))) NOT BETWEEN ('1186221630' COLLATE NOCASE) AND (CASE WHEN rt0.c0 THEN 0.5114851855755622 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE WHERE (((((((rt0.c2)<(vt1.c0))) NOT BETWEEN ('1186221630' COLLATE NOCASE) AND (CASE WHEN rt0.c0 THEN 0.5114851855755622 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((+ (json_remove(vt1.c0, vt1.c0)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((+ (json_remove(vt1.c0, vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((+ (json_remove(vt1.c0, vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1 HAVING MAX(((AVG(x'9312'))<=(rt0.c2))) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1 HAVING (NOT (MAX(((AVG(x'9312'))<=(rt0.c2))))) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1 HAVING ((MAX(((AVG(x'9312'))<=(rt0.c2)))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (LIKE(-279343258, vt1.c0 COLLATE NOCASE, '\')) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (LIKE(-279343258, vt1.c0 COLLATE NOCASE, '\')))) UNION ALL SELECT ALL * FROM vt1 WHERE (((LIKE(-279343258, vt1.c0 COLLATE NOCASE, '\')) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt0.c1, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, vt1.c0 FROM vt1, rt0 WHERE (INSTR(x'e34b', ((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))) UNION SELECT DISTINCT rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((NOT (INSTR(x'e34b', ((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))))) UNION SELECT DISTINCT rt0.c1, vt1.c0 FROM vt1, rt0 WHERE (((INSTR(x'e34b', ((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c1, vt1.c0 FROM vt1, rt0;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 WHERE (((((vt1.c0)||(vt1.c0))) NOT BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(rt0.c2))) AND (CASE rt0.c2  WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt1 WHERE ((NOT (((((vt1.c0)||(vt1.c0))) NOT BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(rt0.c2))) AND (CASE rt0.c2  WHEN vt1.c0 THEN vt1.c0 END))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt1 WHERE (((((((vt1.c0)||(vt1.c0))) NOT BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(rt0.c2))) AND (CASE rt0.c2  WHEN vt1.c0 THEN vt1.c0 END))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT rt0.c0, vt1.c0, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)))OR(0.04154989830130751 COLLATE BINARY)))AND((('')>>(rt0.c1)))) GROUP BY rt0.c0, vt1.c0, rt0.c1;
SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)))OR(0.04154989830130751 COLLATE BINARY)))AND((('')>>(rt0.c1)))) GROUP BY rt0.c0, vt1.c0, rt0.c1 HAVING CAST(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN GROUP_CONCAT(vt1.c0) WHEN NULL THEN rt0.c0 ELSE COUNT(*) END AS BLOB) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)))OR(0.04154989830130751 COLLATE BINARY)))AND((('')>>(rt0.c1)))) GROUP BY rt0.c0, vt1.c0, rt0.c1 HAVING (NOT (CAST(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN GROUP_CONCAT(vt1.c0) WHEN NULL THEN rt0.c0 ELSE COUNT(*) END AS BLOB))) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)))OR(0.04154989830130751 COLLATE BINARY)))AND((('')>>(rt0.c1)))) GROUP BY rt0.c0, vt1.c0, rt0.c1 HAVING ((CAST(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN GROUP_CONCAT(vt1.c0) WHEN NULL THEN rt0.c0 ELSE COUNT(*) END AS BLOB)) ISNULL);
SELECT rt0.c0, vt1.c0, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)))OR(0.04154989830130751 COLLATE BINARY)))AND((('')>>(rt0.c1)))) GROUP BY rt0.c0, vt1.c0, rt0.c1;
SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)))OR(0.04154989830130751 COLLATE BINARY)))AND((('')>>(rt0.c1)))) GROUP BY rt0.c0, vt1.c0, rt0.c1 HAVING CAST(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN GROUP_CONCAT(vt1.c0) WHEN NULL THEN rt0.c0 ELSE COUNT(*) END AS BLOB) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)))OR(0.04154989830130751 COLLATE BINARY)))AND((('')>>(rt0.c1)))) GROUP BY rt0.c0, vt1.c0, rt0.c1 HAVING (NOT (CAST(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN GROUP_CONCAT(vt1.c0) WHEN NULL THEN rt0.c0 ELSE COUNT(*) END AS BLOB))) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)))OR(0.04154989830130751 COLLATE BINARY)))AND((('')>>(rt0.c1)))) GROUP BY rt0.c0, vt1.c0, rt0.c1 HAVING ((CAST(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN GROUP_CONCAT(vt1.c0) WHEN NULL THEN rt0.c0 ELSE COUNT(*) END AS BLOB)) ISNULL);
SELECT rt0.c0, vt1.c0, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)))OR(0.04154989830130751 COLLATE BINARY)))AND((('')>>(rt0.c1)))) GROUP BY rt0.c0, vt1.c0, rt0.c1;
SELECT ALL SUM((((vt1.c0 IN (vt1.c0)))>>(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) FROM vt1;
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((('* 8', rt0.c1, rt0.c2, -1833120972, rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM, rt0.c2, rt0.c0 COLLATE RTRIM, ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) AND (((NOT (rt0.c2)), (rt0.c1 IN ()), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)), rt0.c2, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((('* 8', rt0.c1, rt0.c2, -1833120972, rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM, rt0.c2, rt0.c0 COLLATE RTRIM, ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) AND (((NOT (rt0.c2)), (rt0.c1 IN ()), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)), rt0.c2, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((('* 8', rt0.c1, rt0.c2, -1833120972, rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM, rt0.c2, rt0.c0 COLLATE RTRIM, ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) AND (((NOT (rt0.c2)), (rt0.c1 IN ()), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)), rt0.c2, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))))) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (x'') UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (x''))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((x'') ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1, rt0 NOT INDEXED WHERE (CAST((rt0.c1 IN (rt0.c1)) AS INTEGER)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt1, rt0 WHERE ((NOT (CAST((rt0.c1 IN (rt0.c1)) AS INTEGER)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt1, rt0 WHERE (((CAST((rt0.c1 IN (rt0.c1)) AS INTEGER)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (CASE ((rt0.c2)OR(vt1.c0))  WHEN CASE WHEN rt0.c0 THEN rt0.c1 END THEN (((rt0.c0))>((rt0.c1))) END) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (CASE ((rt0.c2)OR(vt1.c0))  WHEN CASE WHEN rt0.c0 THEN rt0.c1 END THEN (((rt0.c0))>((rt0.c1))) END))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((CASE ((rt0.c2)OR(vt1.c0))  WHEN CASE WHEN rt0.c0 THEN rt0.c1 END THEN (((rt0.c0))>((rt0.c1))) END) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1)OR(x'')))AND(NULL))) NOT BETWEEN (rt0.c0) AND ((rt0.c2 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((rt0.c1)OR(x'')))AND(NULL))) NOT BETWEEN (rt0.c0) AND ((rt0.c2 IN ())))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c1)OR(x'')))AND(NULL))) NOT BETWEEN (rt0.c0) AND ((rt0.c2 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)<(vt1.c0))) ISNULL)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)<(vt1.c0))) ISNULL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0)<(vt1.c0))) ISNULL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((('sMG')) BETWEEN ((rt0.c2)) AND ((TOTAL(COUNT(TOTAL(COUNT(rt0.c2))))))) COLLATE NOCASE UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((('sMG')) BETWEEN ((rt0.c2)) AND ((TOTAL(COUNT(TOTAL(COUNT(rt0.c2))))))) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((('sMG')) BETWEEN ((rt0.c2)) AND ((TOTAL(COUNT(TOTAL(COUNT(rt0.c2))))))) COLLATE NOCASE) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c1) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ('1691829120') AND (((rt0.c0) BETWEEN (rt0.c1) AND (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ('1691829120') AND (((rt0.c0) BETWEEN (rt0.c1) AND (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ('1691829120') AND (((rt0.c0) BETWEEN (rt0.c1) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) BETWEEN ('') AND (vt1.c0)))OR((+ (vt1.c0)))))OR(vt1.c0 COLLATE NOCASE))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0) BETWEEN ('') AND (vt1.c0)))OR((+ (vt1.c0)))))OR(vt1.c0 COLLATE NOCASE))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((vt1.c0) BETWEEN ('') AND (vt1.c0)))OR((+ (vt1.c0)))))OR(vt1.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(vt1.c0)) NOT BETWEEN (MAX(vt1.c0)) AND (TOTAL(AVG(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((MIN(vt1.c0)) NOT BETWEEN (MAX(vt1.c0)) AND (TOTAL(AVG(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MIN(vt1.c0)) NOT BETWEEN (MAX(vt1.c0)) AND (TOTAL(AVG(vt1.c0))))) ISNULL);
SELECT rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1;
SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((((rt0.c2 IN (vt1.c0, '0.38636819617792606'))) NOT NULL)) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((NOT ((((rt0.c2 IN (vt1.c0, '0.38636819617792606'))) NOT NULL)))) UNION ALL SELECT rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((((((rt0.c2 IN (vt1.c0, '0.38636819617792606'))) NOT NULL)) ISNULL));
SELECT rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS BLOB)) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST(rt0.c2 COLLATE BINARY AS BLOB)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(rt0.c2 COLLATE BINARY AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE ((((rt0.c0)) BETWEEN (((+ (rt0.c0)))) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))))) GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE ((NOT ((((rt0.c0)) BETWEEN (((+ (rt0.c0)))) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))))))) GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE ((((((rt0.c0)) BETWEEN (((+ (rt0.c0)))) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))))) ISNULL)) GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING AVG(MAX(TOTAL(rt0.c2))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (AVG(MAX(TOTAL(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((AVG(MAX(TOTAL(rt0.c2)))) ISNULL);
SELECT ALL * FROM vt1 INNER JOIN rt0 ON rt0.c0;
SELECT ALL * FROM vt1 INNER JOIN rt0 ON rt0.c0 WHERE (vt1.c0) UNION ALL SELECT * FROM vt1 INNER JOIN rt0 ON rt0.c0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM vt1 INNER JOIN rt0 ON rt0.c0 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM vt1 INNER JOIN rt0 ON rt0.c0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (CASE CAST(rt0.c1 AS TEXT)  WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN x'c358' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END THEN (((rt0.c1))<>((rt0.c0))) END) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (CASE CAST(rt0.c1 AS TEXT)  WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN x'c358' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END THEN (((rt0.c1))<>((rt0.c0))) END))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((CASE CAST(rt0.c1 AS TEXT)  WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN x'c358' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END THEN (((rt0.c1))!=((rt0.c0))) END) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (((((rt0.c2) ISNULL))!=(CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c0 END))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c0 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((NOT (((((rt0.c2) ISNULL))<>(CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c0 END))))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c0 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (((((((rt0.c2) ISNULL))!=(CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c0 END))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(((COUNT(AVG(GROUP_CONCAT(vt1.c0))))==(MIN(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(((COUNT(AVG(GROUP_CONCAT(vt1.c0))))=(MIN(GROUP_CONCAT(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(((COUNT(AVG(GROUP_CONCAT(vt1.c0))))=(MIN(GROUP_CONCAT(vt1.c0)))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (1876238633) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (1876238633))) UNION ALL SELECT * FROM rt0 WHERE (((1876238633) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (CASE WHEN ((rt0.c1)AND(rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE '1987466995' END WHEN ((((0.13472578070561292)OR(rt0.c0)))OR(rt0.c1)) THEN rt0.c2 WHEN (rt0.c2 IN ()) THEN ((rt0.c1)<<(rt0.c2)) END) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c1)AND(rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE '1987466995' END WHEN ((((0.13472578070561292)OR(rt0.c0)))OR(rt0.c1)) THEN rt0.c2 WHEN (rt0.c2 IN ()) THEN ((rt0.c1)<<(rt0.c2)) END))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE WHEN ((rt0.c1)AND(rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE '1987466995' END WHEN ((((0.13472578070561292)OR(rt0.c0)))OR(rt0.c1)) THEN rt0.c2 WHEN (rt0.c2 IN ()) THEN ((rt0.c1)<<(rt0.c2)) END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MAX(COUNT(rt0.c0)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MAX(COUNT(rt0.c0)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MAX(COUNT(rt0.c0))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (CASE vt1.c0 COLLATE NOCASE  WHEN vt1.c0 COLLATE RTRIM THEN vt1.c0 COLLATE NOCASE ELSE ((vt1.c0)/(vt1.c0)) END) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CASE vt1.c0 COLLATE NOCASE  WHEN vt1.c0 COLLATE RTRIM THEN vt1.c0 COLLATE NOCASE ELSE ((vt1.c0)/(vt1.c0)) END))) UNION ALL SELECT * FROM vt1 WHERE (((CASE vt1.c0 COLLATE NOCASE  WHEN vt1.c0 COLLATE RTRIM THEN vt1.c0 COLLATE NOCASE ELSE ((vt1.c0)/(vt1.c0)) END) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) NOTNULL) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1) NOTNULL) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) NOTNULL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((0.9456394454661602 IN ())) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((NOT ((0.9456394454661602 IN ())))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((((0.9456394454661602 IN ())) ISNULL)) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0;
SELECT vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0 HAVING (((vt1.c0, rt0.c1, rt0.c0)) BETWEEN ((GROUP_CONCAT(GROUP_CONCAT(MAX(COUNT(TOTAL(vt1.c0))))), MIN(rt0.c0), ((((rt0.c0)AND(SUM(rt0.c1))))AND(rt0.c0)))) AND ((((SUM(SUM(vt1.c0))) NOT NULL), (~ (MAX(rt0.c0))), GROUP_CONCAT(COUNT(SUM(SUM(rt0.c2))))))) UNION ALL SELECT vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0 HAVING (NOT ((((vt1.c0, rt0.c1, rt0.c0)) BETWEEN ((GROUP_CONCAT(GROUP_CONCAT(MAX(COUNT(TOTAL(vt1.c0))))), MIN(rt0.c0), ((((rt0.c0)AND(SUM(rt0.c1))))AND(rt0.c0)))) AND ((((SUM(SUM(vt1.c0))) NOT NULL), (~ (MAX(rt0.c0))), GROUP_CONCAT(COUNT(SUM(SUM(rt0.c2))))))))) UNION ALL SELECT vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0 HAVING (((((vt1.c0, rt0.c1, rt0.c0)) BETWEEN ((GROUP_CONCAT(GROUP_CONCAT(MAX(COUNT(TOTAL(vt1.c0))))), MIN(rt0.c0), ((((rt0.c0)AND(SUM(rt0.c1))))AND(rt0.c0)))) AND ((((SUM(SUM(vt1.c0))) NOT NULL), (~ (MAX(rt0.c0))), GROUP_CONCAT(COUNT(SUM(SUM(rt0.c2)))))))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0;
SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((((NULL, '-2054600181', (((rt0.c2, rt0.c2, rt0.c0, vt1.c0, NULL)) NOT BETWEEN ((rt0.c1, rt0.c2, 'c%t)PA', rt0.c0, vt1.c0)) AND ((rt0.c0, rt0.c2, vt1.c0, rt0.c0, rt0.c2)))))==(((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt1.c0))), vt1.c0 COLLATE BINARY, CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)))) UNION ALL SELECT rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((NOT ((((NULL, '-2054600181', (((rt0.c2, rt0.c2, rt0.c0, vt1.c0, NULL)) NOT BETWEEN ((rt0.c1, rt0.c2, 'c%t)PA', rt0.c0, vt1.c0)) AND ((rt0.c0, rt0.c2, vt1.c0, rt0.c0, rt0.c2)))))==(((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt1.c0))), vt1.c0 COLLATE BINARY, CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((((((NULL, '-2054600181', (((rt0.c2, rt0.c2, rt0.c0, vt1.c0, NULL)) NOT BETWEEN ((rt0.c1, rt0.c2, 'c%t)PA', rt0.c0, vt1.c0)) AND ((rt0.c0, rt0.c2, vt1.c0, rt0.c0, rt0.c2)))))=(((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt1.c0))), vt1.c0 COLLATE BINARY, CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)))) ISNULL));
SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c0 FROM rt0, vt1 WHERE (CAST((rt0.c1 IN ()) AS BLOB)) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt1 WHERE ((NOT (CAST((rt0.c1 IN ()) AS BLOB)))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt1 WHERE (((CAST((rt0.c1 IN ()) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, vt1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((((((rt0.c0))<((rt0.c0)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((NOT ((((((rt0.c0))<((rt0.c0)))) ISNULL)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((((((((rt0.c0))<((rt0.c0)))) ISNULL)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MAX(rt0.c1))*(((rt0.c0) NOTNULL))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((MAX(rt0.c1))*(((rt0.c0) NOTNULL))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((MAX(rt0.c1))*(((rt0.c0) NOTNULL)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MAX(rt0.c1))*(((rt0.c0) NOTNULL))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((MAX(rt0.c1))*(((rt0.c0) NOTNULL))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((MAX(rt0.c1))*(((rt0.c0) NOTNULL)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE ((('-1233497624')!=(rt0.c2 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT ((('-1233497624')<>(rt0.c2 COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((((('-1233497624')!=(rt0.c2 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS INTEGER)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST((rt0.c0 IN ()) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST((rt0.c0 IN ()) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))<=((((vt1.c0) IS TRUE))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))<=((((vt1.c0) IS TRUE))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))<=((((vt1.c0) IS TRUE))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING HEX(DISTINCT COUNT(SUM(SUM(rt0.c0)))) UNION ALL SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING (NOT (HEX(DISTINCT COUNT(SUM(SUM(rt0.c0)))))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING ((HEX(DISTINCT COUNT(SUM(SUM(rt0.c0))))) ISNULL);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c0, rt0.c1, '*now)')) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, vt1.c0, rt0.c2))))<=(CAST(0.33311273487317716 AS BLOB)));
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c0, rt0.c1, '*now)')) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, vt1.c0, rt0.c2))))<=(CAST(0.33311273487317716 AS BLOB))) WHERE (((((((rt0.c0) IS FALSE))AND(((rt0.c0) ISNULL))))AND((((rt0.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND (('Xu', rt0.c1, rt0.c2)))))) UNION ALL SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c0, rt0.c1, '*now)')) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, vt1.c0, rt0.c2))))<=(CAST(0.33311273487317716 AS BLOB))) WHERE ((NOT (((((((rt0.c0) IS FALSE))AND(((rt0.c0) ISNULL))))AND((((rt0.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND (('Xu', rt0.c1, rt0.c2)))))))) UNION ALL SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c0, rt0.c1, '*now)')) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, vt1.c0, rt0.c2))))<=(CAST(0.33311273487317716 AS BLOB))) WHERE (((((((((rt0.c0) IS FALSE))AND(((rt0.c0) ISNULL))))AND((((rt0.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND (('Xu', rt0.c1, rt0.c2)))))) ISNULL));
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c0, rt0.c1, '*now)')) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, vt1.c0, rt0.c2))))<=(CAST(0.33311273487317716 AS BLOB)));
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, 'wFg2Ud殂'))) THEN (('') BETWEEN (vt1.c0) AND (vt1.c0)) ELSE CAST(vt1.c0 AS BLOB) END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, 'wFg2Ud殂'))) THEN (('') BETWEEN (vt1.c0) AND (vt1.c0)) ELSE CAST(vt1.c0 AS BLOB) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, 'wFg2Ud殂'))) THEN (('') BETWEEN (vt1.c0) AND (vt1.c0)) ELSE CAST(vt1.c0 AS BLOB) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((NOT (x'9e35')) IN ()) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((NOT (x'9e35')) IN ()))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((NOT (x'9e35')) IN ())) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((NOT (x'9e35')) IN ()) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((NOT (x'9e35')) IN ()))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((NOT (x'9e35')) IN ())) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (TRIM(DISTINCT (rt0.c1 IN ()), rt0.c2 COLLATE NOCASE)) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (TRIM(DISTINCT (rt0.c1 IN ()), rt0.c2 COLLATE NOCASE)))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((TRIM(DISTINCT (rt0.c1 IN ()), rt0.c2 COLLATE NOCASE)) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT vt1.c0, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (x'' COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (x'' COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (((x'' COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c1 FROM vt1, rt0;
SELECT ALL rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0;
SELECT rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (((((LOWER(vt1.c0))OR(((rt0.c2)OR(rt0.c0)))))OR(rt0.c0))) GROUP BY rt0.c1, rt0.c0, vt1.c0 UNION SELECT rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt1 NOT INDEXED WHERE ((NOT (((((LOWER(vt1.c0))OR(((rt0.c2)OR(rt0.c0)))))OR(rt0.c0))))) GROUP BY rt0.c1, rt0.c0, vt1.c0 UNION SELECT ALL rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (((((((LOWER(vt1.c0))OR(((rt0.c2)OR(rt0.c0)))))OR(rt0.c0))) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt1.c0;
SELECT ALL rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING highlight(UNLIKELY(AVG(vt1.c0)), ((AVG(COUNT(TOTAL(vt1.c0)))) NOT BETWEEN (vt1.c0) AND (GROUP_CONCAT(vt1.c0))), ((((AVG(COUNT(vt1.c0)))OR(vt1.c0)))AND(AVG(vt1.c0))), LAST_INSERT_ROWID()) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (highlight(UNLIKELY(AVG(vt1.c0)), ((AVG(COUNT(TOTAL(vt1.c0)))) NOT BETWEEN (vt1.c0) AND (GROUP_CONCAT(vt1.c0))), ((((AVG(COUNT(vt1.c0)))OR(vt1.c0)))AND(AVG(vt1.c0))), LAST_INSERT_ROWID()))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((highlight(UNLIKELY(AVG(vt1.c0)), ((AVG(COUNT(TOTAL(vt1.c0)))) NOT BETWEEN (vt1.c0) AND (GROUP_CONCAT(vt1.c0))), ((((AVG(COUNT(vt1.c0)))OR(vt1.c0)))AND(AVG(vt1.c0))), LAST_INSERT_ROWID())) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((NOT ((vt1.c0 IN ())))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((NOT ((vt1.c0 IN ())))))) UNION ALL SELECT * FROM vt1 WHERE ((((NOT ((vt1.c0 IN ())))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE ((((+ (rt0.c0)))GLOB(rt0.c2))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT ((((+ (rt0.c0)))GLOB(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((((((+ (rt0.c0)))GLOB(rt0.c2))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt1, rt0 WHERE (((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 ELSE vt1.c0 END) AND (((rt0.c0)OR(rt0.c0))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 ELSE vt1.c0 END) AND (((rt0.c0)OR(rt0.c0))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM vt1, rt0 WHERE (((((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 ELSE vt1.c0 END) AND (((rt0.c0)OR(rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1 HAVING SUM(COUNT(AVG(GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT ALL vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1 HAVING (NOT (SUM(COUNT(AVG(GROUP_CONCAT(rt0.c2)))))) UNION ALL SELECT ALL vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1 HAVING ((SUM(COUNT(AVG(GROUP_CONCAT(rt0.c2))))) ISNULL);
SELECT * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE (SQLITE_SOURCE_ID()) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (SQLITE_SOURCE_ID()))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((SQLITE_SOURCE_ID()) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE (((rt0.c2)-(rt0.c2)) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (((rt0.c2)-(rt0.c2)) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE (((((rt0.c2)-(rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0;
SELECT ALL vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0;
SELECT ALL vt1.c0, rt0.c0 FROM vt1, rt0 WHERE (((rt0.c1)OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) GROUP BY vt1.c0, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((NOT (((rt0.c1)OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))))) GROUP BY vt1.c0, rt0.c0 UNION SELECT vt1.c0, rt0.c0 FROM vt1, rt0 WHERE (((((rt0.c1)OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ISNULL)) GROUP BY vt1.c0, rt0.c0;
SELECT ALL vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0;
SELECT ALL vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0;
SELECT vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0 HAVING SUM(MAX(rt0.c0)) UNION ALL SELECT vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0 HAVING (NOT (SUM(MAX(rt0.c0)))) UNION ALL SELECT vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0 HAVING ((SUM(MAX(rt0.c0))) ISNULL);
SELECT ALL TOTAL(((((CASE vt1.c0  WHEN rt0.c0 THEN 0.8299270919517855 ELSE vt1.c0 END)OR(TYPEOF(vt1.c0))))AND(CASE WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN '335449701' THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 ELSE vt1.c0 END))) FROM rt0, vt1;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)<=(vt1.c0 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE NOCASE)<=(vt1.c0 COLLATE NOCASE))))) UNION ALL SELECT * FROM vt1 WHERE (((((vt1.c0 COLLATE NOCASE)<=(vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((- ((vt1.c0 IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((- ((vt1.c0 IN ())))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((- ((vt1.c0 IN ())))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE (CASE WHEN (vt1.c0 IN ()) THEN HEX(vt1.c0) END) GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT (CASE WHEN (vt1.c0 IN ()) THEN HEX(vt1.c0) END))) GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE (((CASE WHEN (vt1.c0 IN ()) THEN HEX(vt1.c0) END) ISNULL)) GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT MAX(0Xffffffff911989f2) FROM vt1 ORDER BY vt1.c0  NULLS FIRST;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (0X6d03f8ba) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (0X6d03f8ba))) UNION ALL SELECT * FROM vt1 WHERE (((0x6d03f8ba) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((SUBSTR(vt1.c0, vt1.c0))<>((vt1.c0 IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((SUBSTR(vt1.c0, vt1.c0))<>((vt1.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((SUBSTR(vt1.c0, vt1.c0))!=((vt1.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0, rt0.c1 FROM vt1 FULL OUTER JOIN rt0 ON CAST(((rt0.c1) NOT NULL) AS NUMERIC) GROUP BY vt1.c0, rt0.c1;
SELECT vt1.c0, rt0.c1 FROM vt1 FULL OUTER JOIN rt0 ON CAST(((rt0.c1) NOT NULL) AS NUMERIC) WHERE ((((((((rt0.c0))<=((rt0.c0))))OR(((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))))AND(rt0.c1 COLLATE BINARY))) GROUP BY vt1.c0, rt0.c1 UNION SELECT vt1.c0, rt0.c1 FROM vt1 FULL OUTER JOIN rt0 ON CAST(((rt0.c1) NOT NULL) AS NUMERIC) WHERE ((NOT ((((((((rt0.c0))<=((rt0.c0))))OR(((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))))AND(rt0.c1 COLLATE BINARY))))) GROUP BY vt1.c0, rt0.c1 UNION SELECT vt1.c0, rt0.c1 FROM vt1 NOT INDEXED FULL OUTER JOIN rt0 ON CAST(((rt0.c1) NOT NULL) AS NUMERIC) WHERE ((((((((((rt0.c0))<=((rt0.c0))))OR(((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))))AND(rt0.c1 COLLATE BINARY))) ISNULL)) GROUP BY vt1.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c1 FROM vt1 FULL OUTER JOIN rt0 ON CAST(((rt0.c1) NOT NULL) AS NUMERIC) GROUP BY vt1.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING GROUP_CONCAT(((rt0.c0) NOT BETWEEN (x'') AND (GROUP_CONCAT(SUM(COUNT(rt0.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(((rt0.c0) NOT BETWEEN (x'') AND (GROUP_CONCAT(SUM(COUNT(rt0.c0)))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(((rt0.c0) NOT BETWEEN (x'') AND (GROUP_CONCAT(SUM(COUNT(rt0.c0))))))) ISNULL);
SELECT MIN(NULLIF(DISTINCT rt0.c0, (NOT (rt0.c2)))) FROM rt0, vt1 ORDER BY ((CAST('' AS REAL)) NOT BETWEEN (rt0.c1) AND (((rt0.c0)/(rt0.c2))))  NULLS LAST;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c0)LIKE(vt1.c0)))) AND ((((((((((rt0.c2)OR(rt0.c2)))OR(vt1.c0)))AND(vt1.c0)))AND(rt0.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT ((((rt0.c1)) BETWEEN ((((rt0.c0)LIKE(vt1.c0)))) AND ((((((((((rt0.c2)OR(rt0.c2)))OR(vt1.c0)))AND(vt1.c0)))AND(rt0.c0)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((((((rt0.c1)) BETWEEN ((((rt0.c0)LIKE(vt1.c0)))) AND ((((((((((rt0.c2)OR(rt0.c2)))OR(vt1.c0)))AND(vt1.c0)))AND(rt0.c0)))))) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE ((rt0.c2)>=(rt0.c0))  WHEN rt0.c1 COLLATE NOCASE THEN (~ (rt0.c2)) WHEN ((rt0.c1)GLOB(rt0.c1)) THEN rt0.c0 WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((('-1444073577', rt0.c1, rt0.c0))=((rt0.c1, rt0.c0, rt0.c0))) ELSE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE ((rt0.c2)>=(rt0.c0))  WHEN rt0.c1 COLLATE NOCASE THEN (~ (rt0.c2)) WHEN ((rt0.c1)GLOB(rt0.c1)) THEN rt0.c0 WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((('-1444073577', rt0.c1, rt0.c0))=((rt0.c1, rt0.c0, rt0.c0))) ELSE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE ((rt0.c2)>=(rt0.c0))  WHEN rt0.c1 COLLATE NOCASE THEN (~ (rt0.c2)) WHEN ((rt0.c1)GLOB(rt0.c1)) THEN rt0.c0 WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((('-1444073577', rt0.c1, rt0.c0))==((rt0.c1, rt0.c0, rt0.c0))) ELSE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2;
SELECT ALL rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE) GROUP BY rt0.c1, vt1.c0, rt0.c2 UNION SELECT rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE))) GROUP BY rt0.c1, vt1.c0, rt0.c2 UNION SELECT ALL rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1, vt1.c0, rt0.c2;
SELECT rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING SUM(GROUP_CONCAT(GROUP_CONCAT(MIN(rt0.c0)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (SUM(GROUP_CONCAT(GROUP_CONCAT(MIN(rt0.c0)))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((SUM(GROUP_CONCAT(GROUP_CONCAT(MIN(rt0.c0))))) ISNULL);
SELECT * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (CAST(ROUND(vt1.c0, rt0.c2) AS BLOB)) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (CAST(ROUND(vt1.c0, rt0.c2) AS BLOB)))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((CAST(ROUND(vt1.c0, rt0.c2) AS BLOB)) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (((TRIM(DISTINCT rt0.c0, rt0.c1))&(((vt1.c0)+(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (((TRIM(DISTINCT rt0.c0, rt0.c1))&(((vt1.c0)+(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((((TRIM(DISTINCT rt0.c0, rt0.c1))&(((vt1.c0)+(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING TOTAL(TRIM(MAX(COUNT(*)), MAX(AVG(COUNT(COUNT(GROUP_CONCAT(SUM(AVG(COUNT(COUNT(GROUP_CONCAT(COUNT(AVG(SUM(rt0.c2))))))))))))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (TOTAL(TRIM(MAX(COUNT(*)), MAX(AVG(COUNT(COUNT(GROUP_CONCAT(SUM(AVG(COUNT(COUNT(GROUP_CONCAT(COUNT(AVG(SUM(rt0.c2))))))))))))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((TOTAL(TRIM(MAX(COUNT(*)), MAX(AVG(COUNT(COUNT(GROUP_CONCAT(SUM(AVG(COUNT(COUNT(GROUP_CONCAT(COUNT(AVG(SUM(rt0.c2)))))))))))))))) ISNULL);
SELECT rt0.c2 FROM rt0, vt1;
SELECT ALL rt0.c2 FROM rt0, vt1 WHERE (IFNULL(((vt1.c0)>>('-279343258')), '559303611')) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1 WHERE ((NOT (IFNULL(((vt1.c0)>>('-279343258')), '559303611')))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1 WHERE (((IFNULL(((vt1.c0)>>('-279343258')), '559303611')) ISNULL));
SELECT rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (CASE WHEN CAST(0.5316938955540818 AS NUMERIC) THEN ((((rt0.c1)OR('0.9602129024823359')))AND(rt0.c2)) ELSE LIKELY(rt0.c0) END) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN CAST(0.5316938955540818 AS NUMERIC) THEN ((((rt0.c1)OR('0.9602129024823359')))AND(rt0.c2)) ELSE LIKELY(rt0.c0) END))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE WHEN CAST(0.5316938955540818 AS NUMERIC) THEN ((((rt0.c1)OR('0.9602129024823359')))AND(rt0.c2)) ELSE LIKELY(rt0.c0) END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt1 WHERE (NULL) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt1 WHERE ((NOT (NULL))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt1 WHERE (((NULL) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0;
SELECT rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0;
SELECT rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0;
SELECT TOTAL(((vt1.c0) IS FALSE) COLLATE RTRIM COLLATE BINARY) FROM vt1;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (COALESCE(((rt0.c1) IS FALSE), (rt0.c1 IN ()))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (COALESCE(((rt0.c1) IS FALSE), (rt0.c1 IN ()))))) UNION ALL SELECT * FROM rt0 WHERE (((COALESCE(((rt0.c1) IS FALSE), (rt0.c1 IN ()))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (1.876238633E9) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (1.876238633E9))) UNION SELECT DISTINCT * FROM rt0 WHERE (((1.876238633E9) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((COUNT(GROUP_CONCAT(MIN(SUM(SUM(rt0.c2))))))|(rt0.c2)))+(rt0.c1)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((((COUNT(GROUP_CONCAT(MIN(SUM(SUM(rt0.c2))))))|(rt0.c2)))+(rt0.c1)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((((COUNT(GROUP_CONCAT(MIN(SUM(SUM(rt0.c2))))))|(rt0.c2)))+(rt0.c1))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c1)||(rt0.c2)) COLLATE BINARY) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c1)||(rt0.c2)) COLLATE BINARY))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c1)||(rt0.c2)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ('') UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (''))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((('') ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c1)+(rt0.c0)))AND(CAST(rt0.c2 AS REAL))))AND(((rt0.c1) IS TRUE)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c1)+(rt0.c0)))AND(CAST(rt0.c2 AS REAL))))AND(((rt0.c1) IS TRUE)))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((rt0.c1)+(rt0.c0)))AND(CAST(rt0.c2 AS REAL))))AND(((rt0.c1) IS TRUE)))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING AVG(((MAX(SUM(TOTAL(TOTAL(rt0.c1))))) IS FALSE)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (AVG(((MAX(SUM(TOTAL(TOTAL(rt0.c1))))) IS FALSE)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((AVG(((MAX(SUM(TOTAL(TOTAL(rt0.c1))))) IS FALSE))) ISNULL);
SELECT MIN(((rt0.c0 COLLATE NOCASE) IS TRUE)) FROM rt0, vt1 ORDER BY (((rt0.c2)) BETWEEN ((CAST(-2054600181 AS INTEGER))) AND (('-1430208052'))) DESC  NULLS LAST;
SELECT ALL rt0.c1, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (+ (((((rt0.c2)OR(NULL)))AND('1876238633'))));
SELECT rt0.c1, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (+ (((((rt0.c2)OR(NULL)))AND('1876238633')))) WHERE ((~ (((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0))))) UNION ALL SELECT ALL rt0.c1, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (+ (((((rt0.c2)OR(NULL)))AND('1876238633')))) WHERE ((NOT ((~ (((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0))))))) UNION ALL SELECT rt0.c1, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (+ (((((rt0.c2)OR(NULL)))AND('1876238633')))) WHERE ((((~ (((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0))))) ISNULL));
SELECT ALL rt0.c1, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (+ (((((rt0.c2)OR(NULL)))AND('1876238633'))));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c1)GLOB(NULL)) AS INTEGER)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((rt0.c1)GLOB(NULL)) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((rt0.c1)GLOB(NULL)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, vt1.c0, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY) BETWEEN (rt0.c1) AND (((rt0.c2)>(rt0.c2)))) GROUP BY rt0.c0, vt1.c0, rt0.c2;
SELECT rt0.c0, vt1.c0, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY) BETWEEN (rt0.c1) AND (((rt0.c2)>(rt0.c2)))) WHERE (CAST(((((rt0.c0)OR(vt1.c0)))AND(rt0.c0)) AS BLOB)) GROUP BY rt0.c0, vt1.c0, rt0.c2 UNION SELECT rt0.c0, vt1.c0, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY) BETWEEN (rt0.c1) AND (((rt0.c2)>(rt0.c2)))) WHERE ((NOT (CAST(((((rt0.c0)OR(vt1.c0)))AND(rt0.c0)) AS BLOB)))) GROUP BY rt0.c0, vt1.c0, rt0.c2 UNION SELECT ALL rt0.c0, vt1.c0, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY) BETWEEN (rt0.c1) AND (((rt0.c2)>(rt0.c2)))) WHERE (((CAST(((((rt0.c0)OR(vt1.c0)))AND(rt0.c0)) AS BLOB)) ISNULL)) GROUP BY rt0.c0, vt1.c0, rt0.c2;
SELECT ALL rt0.c0, vt1.c0, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY) BETWEEN (rt0.c1) AND (((rt0.c2)>(rt0.c2)))) GROUP BY rt0.c0, vt1.c0, rt0.c2;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING TOTAL(SUM(GROUP_CONCAT(TOTAL(SUM(SUM(COUNT(*))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (TOTAL(SUM(GROUP_CONCAT(TOTAL(SUM(SUM(COUNT(*))))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((TOTAL(SUM(GROUP_CONCAT(TOTAL(SUM(SUM(COUNT(*)))))))) ISNULL);
SELECT TOTAL(CAST(((rt0.c2)<<(rt0.c1)) AS REAL)) FROM rt0;
SELECT * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE (vt1.c0) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((+ (CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 END))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((NOT ((+ (CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 END))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((((+ (CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 END))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, vt1;
SELECT ALL rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON (((((rt0.c0)OR(vt1.c0)))OR(rt0.c2)) IN ()) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON (((((rt0.c0)OR(vt1.c0)))OR(rt0.c2)) IN ()) WHERE ((NOT (((rt0.c1) NOT NULL)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON (((((rt0.c0)OR(vt1.c0)))OR(rt0.c2)) IN ()) WHERE ((NOT ((NOT (((rt0.c1) NOT NULL)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON (((((rt0.c0)OR(vt1.c0)))OR(rt0.c2)) IN ()) WHERE ((((NOT (((rt0.c1) NOT NULL)))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON (((((rt0.c0)OR(vt1.c0)))OR(rt0.c2)) IN ()) GROUP BY rt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TYPEOF(CASE vt1.c0  WHEN AVG(MAX(vt1.c0)) THEN vt1.c0 WHEN MIN(vt1.c0) THEN NULL WHEN 0x3c79c57e THEN vt1.c0 END) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TYPEOF(CASE vt1.c0  WHEN AVG(MAX(vt1.c0)) THEN vt1.c0 WHEN MIN(vt1.c0) THEN NULL WHEN 0X3c79c57e THEN vt1.c0 END))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TYPEOF(CASE vt1.c0  WHEN AVG(MAX(vt1.c0)) THEN vt1.c0 WHEN MIN(vt1.c0) THEN NULL WHEN 0x3c79c57e THEN vt1.c0 END)) ISNULL);
SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1;
SELECT vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE (CAST(((rt0.c2)AND(rt0.c2)) AS BLOB)) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT (CAST(((rt0.c2)AND(rt0.c2)) AS BLOB)))) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE (((CAST(((rt0.c2)AND(rt0.c2)) AS BLOB)) ISNULL));
SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt1 ON CAST(((((rt0.c1)OR(vt1.c0)))AND(rt0.c0)) AS INTEGER) GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt1 ON CAST(((((rt0.c1)OR(vt1.c0)))AND(rt0.c0)) AS INTEGER) GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2 HAVING AVG(((((((((GROUP_CONCAT(rt0.c0))OR(COUNT(MAX(AVG(rt0.c0))))))OR(TOTAL(COUNT(rt0.c0)))))AND(COUNT(rt0.c2))))OR(MIN(rt0.c2)))) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt1 ON CAST(((((rt0.c1)OR(vt1.c0)))AND(rt0.c0)) AS INTEGER) GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2 HAVING (NOT (AVG(((((((((GROUP_CONCAT(rt0.c0))OR(COUNT(MAX(AVG(rt0.c0))))))OR(TOTAL(COUNT(rt0.c0)))))AND(COUNT(rt0.c2))))OR(MIN(rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt1 ON CAST(((((rt0.c1)OR(vt1.c0)))AND(rt0.c0)) AS INTEGER) GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2 HAVING ((AVG(((((((((GROUP_CONCAT(rt0.c0))OR(COUNT(MAX(AVG(rt0.c0))))))OR(TOTAL(COUNT(rt0.c0)))))AND(COUNT(rt0.c2))))OR(MIN(rt0.c2))))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0))>(('3G\naA')))) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND (DATETIME(vt1.c0, x'', 1828976826, vt1.c0, vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0))>(('3G\naA')))) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND (DATETIME(vt1.c0, x'', 1828976826, vt1.c0, vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((vt1.c0))>(('3G\naA')))) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND (DATETIME(vt1.c0, x'', 1828976826, vt1.c0, vt1.c0)))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (0.9411636781478249) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((NOT (0.9411636781478249))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (((0.9411636781478249) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE (JULIANDAY(((rt0.c2)&(rt0.c1)), ((rt0.c2)<(rt0.c1)), (- (-279343258)))) GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2 UNION SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (JULIANDAY(((rt0.c2)&(rt0.c1)), ((rt0.c2)<(rt0.c1)), (- (-279343258)))))) GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE (((JULIANDAY(((rt0.c2)&(rt0.c1)), ((rt0.c2)<(rt0.c1)), (- (-279343258)))) ISNULL)) GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING x'' UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (x'')) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((x'') ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING x'' UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (x'')) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((x'') ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (CASE WHEN ((vt1.c0) IS FALSE) THEN (~ (vt1.c0)) ELSE (('') ISNULL) END) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (CASE WHEN ((vt1.c0) IS FALSE) THEN (~ (vt1.c0)) ELSE (('') ISNULL) END))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((CASE WHEN ((vt1.c0) IS FALSE) THEN (~ (vt1.c0)) ELSE (('') ISNULL) END) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((CAST(rt0.c2 AS TEXT), LIKELIHOOD(rt0.c0, 0.5226729005282885), (((x'', rt0.c1, rt0.c2))<=(('\I资nU', rt0.c1, rt0.c1))))) AND ((HEX(DISTINCT rt0.c0), ((rt0.c1)|(rt0.c2)), rt0.c2)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT ((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((CAST(rt0.c2 AS TEXT), LIKELIHOOD(rt0.c0, 0.5226729005282885), (((x'', rt0.c1, rt0.c2))<=(('\I资nU', rt0.c1, rt0.c1))))) AND ((HEX(DISTINCT rt0.c0), ((rt0.c1)|(rt0.c2)), rt0.c2)))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((CAST(rt0.c2 AS TEXT), LIKELIHOOD(rt0.c0, 0.5226729005282885), (((x'', rt0.c1, rt0.c2))<=(('\I资nU', rt0.c1, rt0.c1))))) AND ((HEX(DISTINCT rt0.c0), ((rt0.c1)|(rt0.c2)), rt0.c2)))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING AVG(LIKELY(COUNT(TOTAL(rt0.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (AVG(LIKELY(COUNT(TOTAL(rt0.c1)))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((AVG(LIKELY(COUNT(TOTAL(rt0.c1))))) ISNULL);
SELECT ALL rt0.c0 FROM vt1, rt0;
SELECT rt0.c0 FROM vt1, rt0 WHERE (((CAST(vt1.c0 AS NUMERIC))&(rt0.c2))) UNION ALL SELECT ALL rt0.c0 FROM vt1, rt0 WHERE ((NOT (((CAST(vt1.c0 AS NUMERIC))&(rt0.c2))))) UNION ALL SELECT ALL rt0.c0 FROM vt1, rt0 WHERE (((((CAST(vt1.c0 AS NUMERIC))&(rt0.c2))) ISNULL));
SELECT ALL rt0.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt1, rt0 WHERE (((CAST(rt0.c2 AS TEXT))LIKE((NOT (vt1.c0))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM vt1, rt0 WHERE ((NOT (((CAST(rt0.c2 AS TEXT))LIKE((NOT (vt1.c0))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM vt1, rt0 WHERE (((((CAST(rt0.c2 AS TEXT))LIKE((NOT (vt1.c0))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM vt1, rt0;
SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt1.c0;
SELECT rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE (IFNULL(((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))AND('')))AND('')))OR(rt0.c2)))AND(rt0.c0)), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) GROUP BY rt0.c0, rt0.c1, vt1.c0 UNION SELECT rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((NOT (IFNULL(((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))AND('')))AND('')))OR(rt0.c2)))AND(rt0.c0)), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))) GROUP BY rt0.c0, rt0.c1, vt1.c0 UNION SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE (((IFNULL(((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))AND('')))AND('')))OR(rt0.c2)))AND(rt0.c0)), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt1.c0;
SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt1.c0;
SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING GROUP_CONCAT(((MIN(MIN(rt0.c0)))&(GROUP_CONCAT(GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT(((MIN(MIN(rt0.c0)))&(GROUP_CONCAT(GROUP_CONCAT(rt0.c2))))))) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING ((GROUP_CONCAT(((MIN(MIN(rt0.c0)))&(GROUP_CONCAT(GROUP_CONCAT(rt0.c2)))))) ISNULL);
SELECT ALL MIN((- (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END))) FROM rt0;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))))!=((vt1.c0 IN (vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))))<>((vt1.c0 IN (vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0))))<>((vt1.c0 IN (vt1.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT vt1.c0, rt0.c0 FROM rt0, vt1 WHERE (((vt1.c0 IN ()) IN ())) UNION SELECT DISTINCT vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((NOT (((vt1.c0 IN ()) IN ())))) UNION SELECT DISTINCT vt1.c0, rt0.c0 FROM rt0, vt1 WHERE (((((vt1.c0 IN ()) IN ())) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c0 FROM rt0, vt1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((+ (0.7447032366382981))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((+ (0.7447032366382981))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 NOT INDEXED WHERE ((((+ (0.7447032366382981))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING AVG(TOTAL(SUM(rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (AVG(TOTAL(SUM(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((AVG(TOTAL(SUM(rt0.c1)))) ISNULL);
SELECT ALL * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE ((~ (CAST(rt0.c2 AS BLOB)))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT ((~ (CAST(rt0.c2 AS BLOB)))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((((~ (CAST(rt0.c2 AS BLOB)))) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS REAL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST((vt1.c0 IN ()) AS REAL)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST((vt1.c0 IN ()) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0;
SELECT rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (((((vt1.c0)+(rt0.c0))) BETWEEN (((rt0.c2) NOTNULL)) AND ((vt1.c0 IN ())))) GROUP BY rt0.c1, rt0.c0, vt1.c0 UNION SELECT rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((NOT (((((vt1.c0)+(rt0.c0))) BETWEEN (((rt0.c2) NOTNULL)) AND ((vt1.c0 IN ())))))) GROUP BY rt0.c1, rt0.c0, vt1.c0 UNION SELECT rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (((((((vt1.c0)+(rt0.c0))) BETWEEN (((rt0.c2) NOTNULL)) AND ((vt1.c0 IN ())))) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt1.c0;
SELECT rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0;
SELECT rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0;
SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0 HAVING '1917867676' UNION ALL SELECT rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0 HAVING (NOT ('1917867676')) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0 HAVING (('1917867676') ISNULL);
SELECT rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0;
SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0 HAVING '1917867676' UNION ALL SELECT rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0 HAVING (NOT ('1917867676')) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0 HAVING (('1917867676') ISNULL);
SELECT rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0;
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (TRIM(LOWER(DISTINCT rt0.c0), CAST(rt0.c2 AS TEXT))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (TRIM(LOWER(DISTINCT rt0.c0), CAST(rt0.c2 AS TEXT))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((TRIM(LOWER(DISTINCT rt0.c0), CAST(rt0.c2 AS TEXT))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)GLOB(vt1.c0)))GLOB((~ (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0)GLOB(vt1.c0)))GLOB((~ (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)GLOB(vt1.c0)))GLOB((~ (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt1, rt0 WHERE (vt1.c0) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt1, rt0 WHERE ((NOT (vt1.c0))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt1, rt0 WHERE (((vt1.c0) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(COUNT(GROUP_CONCAT(SUM(MIN(vt1.c0))))))LIKE(COUNT(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((MAX(COUNT(GROUP_CONCAT(SUM(MIN(vt1.c0))))))LIKE(COUNT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MAX(COUNT(GROUP_CONCAT(SUM(MIN(vt1.c0))))))LIKE(COUNT(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN NULL THEN vt1.c0 END AS NUMERIC)) UNION ALL SELECT vt1.c0 FROM vt1 NOT INDEXED WHERE ((NOT (CAST(CASE vt1.c0  WHEN NULL THEN vt1.c0 END AS NUMERIC)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(CASE vt1.c0  WHEN NULL THEN vt1.c0 END AS NUMERIC)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((rt0.c0 COLLATE RTRIM)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((rt0.c0 COLLATE RTRIM)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((rt0.c0 COLLATE RTRIM)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE ((CAST(rt0.c2 AS REAL) IN ((rt0.c1 IN ())))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT ((CAST(rt0.c2 AS REAL) IN ((rt0.c1 IN ())))))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((((CAST(rt0.c2 AS REAL) IN ((rt0.c1 IN ())))) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((+ (vt1.c0)) IN ())) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((+ (vt1.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((+ (vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, rt0 WHERE (load_extension(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(rt0.c2)))OR(NULL)), ((rt0.c1) IS FALSE))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt1, rt0 WHERE ((NOT (load_extension(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(rt0.c2)))OR(NULL)), ((rt0.c1) IS FALSE))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt1, rt0 WHERE (((load_extension(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(rt0.c2)))OR(NULL)), ((rt0.c1) IS FALSE))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0;
SELECT ALL rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0;
SELECT ALL rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)>>(vt1.c0)))||(NULL))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((vt1.c0)>>(vt1.c0)))||(NULL))))) UNION ALL SELECT * FROM vt1 WHERE (((((((vt1.c0)>>(vt1.c0)))||(NULL))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0)IS NOT(vt1.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((vt1.c0)IS NOT(vt1.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((((((((rt0.c2 IN ()))AND((((rt0.c1))<>((rt0.c0))))))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END)))AND(TRIM('-1971588925'))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((((((((rt0.c2 IN ()))AND((((rt0.c1))!=((rt0.c0))))))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END)))AND(TRIM('-1971588925'))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((((((((((rt0.c2 IN ()))AND((((rt0.c1))<>((rt0.c0))))))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END)))AND(TRIM('-1971588925'))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1 HAVING COUNT(MAX(vt1.c0)) UNION ALL SELECT rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1 HAVING (NOT (COUNT(MAX(vt1.c0)))) UNION ALL SELECT rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1 HAVING ((COUNT(MAX(vt1.c0))) ISNULL);
SELECT ALL * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE (CASE (NOT (rt0.c1))  WHEN LOWER(DISTINCT NULL) THEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)) WHEN ((((((((rt0.c0)OR(rt0.c2)))AND('-856972464')))AND(vt1.c0)))OR(rt0.c1)) THEN CAST(rt0.c0 AS TEXT) WHEN ((((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(NULL)))OR(rt0.c1)))AND(rt0.c0)) THEN vt1.c0 COLLATE NOCASE END) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (CASE (NOT (rt0.c1))  WHEN LOWER(DISTINCT NULL) THEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)) WHEN ((((((((rt0.c0)OR(rt0.c2)))AND('-856972464')))AND(vt1.c0)))OR(rt0.c1)) THEN CAST(rt0.c0 AS TEXT) WHEN ((((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(NULL)))OR(rt0.c1)))AND(rt0.c0)) THEN vt1.c0 COLLATE NOCASE END))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((CASE (NOT (rt0.c1))  WHEN LOWER(DISTINCT NULL) THEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)) WHEN ((((((((rt0.c0)OR(rt0.c2)))AND('-856972464')))AND(vt1.c0)))OR(rt0.c1)) THEN CAST(rt0.c0 AS TEXT) WHEN ((((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(NULL)))OR(rt0.c1)))AND(rt0.c0)) THEN vt1.c0 COLLATE NOCASE END) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ('a') UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((NOT ('a'))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((('a') ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM vt1, rt0;
SELECT ALL rt0.c1, rt0.c2, vt1.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0;
SELECT rt0.c1, rt0.c2, vt1.c0 FROM vt1 NATURAL JOIN rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS REAL)) GROUP BY rt0.c1, rt0.c2, vt1.c0 UNION SELECT rt0.c1, rt0.c2, vt1.c0 FROM vt1 NATURAL JOIN rt0 WHERE ((NOT (CAST(rt0.c0 COLLATE BINARY AS REAL)))) GROUP BY rt0.c1, rt0.c2, vt1.c0 UNION SELECT rt0.c1, rt0.c2, vt1.c0 FROM vt1 NATURAL JOIN rt0 WHERE (((CAST(rt0.c0 COLLATE BINARY AS REAL)) ISNULL)) GROUP BY rt0.c1, rt0.c2, vt1.c0;
SELECT ALL rt0.c1, rt0.c2, vt1.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(SUM(NULL)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(SUM(NULL)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(SUM(NULL))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)&(((vt1.c0) BETWEEN (vt1.c0) AND ('^r'))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)&(((vt1.c0) BETWEEN (vt1.c0) AND ('^r'))))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)&(((vt1.c0) BETWEEN (vt1.c0) AND ('^r'))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((((- (rt0.c0))) ISNULL)) UNION SELECT DISTINCT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((NOT ((((- (rt0.c0))) ISNULL)))) UNION SELECT DISTINCT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((((((- (rt0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE (LIKELY(DISTINCT CAST(rt0.c2 AS INTEGER))) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE ((NOT (LIKELY(DISTINCT CAST(rt0.c2 AS INTEGER))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE (((LIKELY(DISTINCT CAST(rt0.c2 AS INTEGER))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING AVG(((((rt0.c1)AND(0.28771645527929424)))OR(SUM(0.5983347070810683)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (AVG(((((rt0.c1)AND(0.28771645527929424)))OR(SUM(0.5983347070810683)))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((AVG(((((rt0.c1)AND(0.28771645527929424)))OR(SUM(0.5983347070810683))))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((NULL) ISNULL))=(rt0.c1 COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((NULL) ISNULL))=(rt0.c1 COLLATE RTRIM))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((NULL) ISNULL))=(rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE vt1.c0  WHEN ((vt1.c0)%(vt1.c0)) THEN vt1.c0 COLLATE RTRIM WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '' END WHEN ((vt1.c0)<=(vt1.c0)) THEN ((vt1.c0)-(vt1.c0)) END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE vt1.c0  WHEN ((vt1.c0)%(vt1.c0)) THEN vt1.c0 COLLATE RTRIM WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '' END WHEN ((vt1.c0)<=(vt1.c0)) THEN ((vt1.c0)-(vt1.c0)) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE vt1.c0  WHEN ((vt1.c0)%(vt1.c0)) THEN vt1.c0 COLLATE RTRIM WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '' END WHEN ((vt1.c0)<=(vt1.c0)) THEN ((vt1.c0)-(vt1.c0)) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((((rt0.c1))>=((SUM(SUM(rt0.c1))))))IS NOT(MIN(rt0.c0))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((((((rt0.c1))>=((SUM(SUM(rt0.c1))))))IS NOT(MIN(rt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((((((rt0.c1))>=((SUM(SUM(rt0.c1))))))IS NOT(MIN(rt0.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((+ (((vt1.c0) NOT NULL)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((+ (((vt1.c0) NOT NULL)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((+ (((vt1.c0) NOT NULL)))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((x'' IN ()))<(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((x'' IN ()))<(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((x'' IN ()))<(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((- ('')) COLLATE RTRIM) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((- ('')) COLLATE RTRIM))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((- ('')) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING CASE WHEN vt1.c0 THEN SUM(SUM(rt0.c1)) END UNION ALL SELECT rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING (NOT (CASE WHEN vt1.c0 THEN SUM(SUM(rt0.c1)) END)) UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING ((CASE WHEN vt1.c0 THEN SUM(SUM(rt0.c1)) END) ISNULL);
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE ((~ (CAST(rt0.c1 AS REAL)))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT ((~ (CAST(rt0.c1 AS REAL)))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((((~ (CAST(rt0.c1 AS REAL)))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0, vt1.c0))) NOTNULL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 IN (vt1.c0, vt1.c0))) NOTNULL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN (vt1.c0, vt1.c0))) NOTNULL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL vt1.c0, rt0.c0 FROM vt1, rt0;
SELECT ALL vt1.c0, rt0.c0 FROM vt1 NOT INDEXED, rt0 WHERE (TRIM(DISTINCT 0.5245725653922507, CAST(rt0.c2 AS TEXT))) UNION ALL SELECT ALL vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((NOT (TRIM(DISTINCT 0.5245725653922507, CAST(rt0.c2 AS TEXT))))) UNION ALL SELECT vt1.c0, rt0.c0 FROM vt1, rt0 WHERE (((TRIM(DISTINCT 0.5245725653922507, CAST(rt0.c2 AS TEXT))) ISNULL));
SELECT ALL vt1.c0, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE (- (NULL))  WHEN NULL THEN (~ (rt0.c0)) ELSE ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE (- (NULL))  WHEN NULL THEN (~ (rt0.c0)) ELSE ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE (- (NULL))  WHEN NULL THEN (~ (rt0.c0)) ELSE ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (CAST(rt0.c1 AS BLOB)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (CAST(rt0.c1 AS BLOB)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(((vt1.c0) NOT BETWEEN (TOTAL(vt1.c0)) AND (vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(((vt1.c0) NOT BETWEEN (TOTAL(vt1.c0)) AND (vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(((vt1.c0) NOT BETWEEN (TOTAL(vt1.c0)) AND (vt1.c0)))) ISNULL);
SELECT ALL rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (CASE vt1.c0 COLLATE NOCASE  WHEN ((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)) THEN NULLIF(DISTINCT NULL, rt0.c0) END) UNION ALL SELECT rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((NOT (CASE vt1.c0 COLLATE NOCASE  WHEN ((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)) THEN NULLIF(DISTINCT NULL, rt0.c0) END))) UNION ALL SELECT rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (((CASE vt1.c0 COLLATE NOCASE  WHEN ((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)) THEN NULLIF(DISTINCT NULL, rt0.c0) END) ISNULL));
SELECT ALL rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 NOT INDEXED;
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE (CASE WHEN ((vt1.c0) NOTNULL) THEN ((rt0.c1) NOT BETWEEN (vt1.c0) AND ('1014613374')) END) UNION SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((NOT (CASE WHEN ((vt1.c0) NOTNULL) THEN ((rt0.c1) NOT BETWEEN (vt1.c0) AND ('1014613374')) END))) UNION SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE (((CASE WHEN ((vt1.c0) NOTNULL) THEN ((rt0.c1) NOT BETWEEN (vt1.c0) AND ('1014613374')) END) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 NOT INDEXED;
SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt1 WHERE ((rt0.c2 IN ()) COLLATE RTRIM) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt1 WHERE ((NOT ((rt0.c2 IN ()) COLLATE RTRIM))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt1 WHERE ((((rt0.c2 IN ()) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING LOWER(rt0.c2 COLLATE RTRIM) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING (NOT (LOWER(rt0.c2 COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING ((LOWER(rt0.c2 COLLATE RTRIM)) ISNULL);
SELECT vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING LOWER(rt0.c2 COLLATE RTRIM) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING (NOT (LOWER(rt0.c2 COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING ((LOWER(rt0.c2 COLLATE RTRIM)) ISNULL);
SELECT vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((INSTR(vt1.c0, vt1.c0) IN ())) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((INSTR(vt1.c0, vt1.c0) IN ())))) UNION ALL SELECT * FROM vt1 WHERE ((((INSTR(vt1.c0, vt1.c0) IN ())) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (')''<2D') GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (')''<2D'))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((')''<2D') ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(MAX(AVG(TOTAL(SUM(AVG(GROUP_CONCAT(TOTAL(GROUP_CONCAT(vt1.c0))))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(MAX(AVG(TOTAL(SUM(AVG(GROUP_CONCAT(TOTAL(GROUP_CONCAT(vt1.c0))))))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(MAX(AVG(TOTAL(SUM(AVG(GROUP_CONCAT(TOTAL(GROUP_CONCAT(vt1.c0)))))))))) ISNULL);
SELECT ALL SUM(((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) IS TRUE)) FROM rt0 ORDER BY ((((NULL, rt0.c0, rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0, rt0.c2, rt0.c0)) AND (('', rt0.c1, NULL, rt0.c0, rt0.c2))) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c1 IN ()))%(LIKELY(rt0.c2)))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT ((((rt0.c1 IN ()))%(LIKELY(rt0.c2)))))) UNION ALL SELECT ALL * FROM vt1, rt0 NOT INDEXED WHERE ((((((rt0.c1 IN ()))%(LIKELY(rt0.c2)))) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ('1691829120') UNION SELECT DISTINCT rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((NOT ('1691829120'))) UNION SELECT DISTINCT rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((('1691829120') ISNULL));
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (vt1.c0) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (vt1.c0))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (((vt1.c0) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0) IS FALSE)))=((((vt1.c0)<(x'')))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0) IS FALSE)))=((((vt1.c0)<(x'')))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((vt1.c0) IS FALSE)))==((((vt1.c0)<(x'')))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (x'') UNION SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1;
SELECT rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0;
SELECT ALL rt0.c2, vt1.c0 FROM vt1, rt0 WHERE (rt0.c2) GROUP BY rt0.c2, vt1.c0 UNION SELECT rt0.c2, vt1.c0 FROM vt1, rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2, vt1.c0 UNION SELECT rt0.c2, vt1.c0 FROM vt1, rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2, vt1.c0;
SELECT rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((COUNT(AVG(GROUP_CONCAT(TOTAL(AVG(TOTAL(COUNT(*))))))))|(rt0.c2)) IN ()) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT ((((COUNT(AVG(GROUP_CONCAT(TOTAL(AVG(TOTAL(COUNT(*))))))))|(rt0.c2)) IN ()))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((((COUNT(AVG(GROUP_CONCAT(TOTAL(AVG(TOTAL(COUNT(*))))))))|(rt0.c2)) IN ())) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((COUNT(AVG(GROUP_CONCAT(TOTAL(AVG(TOTAL(COUNT(*))))))))|(rt0.c2)) IN ()) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT ((((COUNT(AVG(GROUP_CONCAT(TOTAL(AVG(TOTAL(COUNT(*))))))))|(rt0.c2)) IN ()))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((((COUNT(AVG(GROUP_CONCAT(TOTAL(AVG(TOTAL(COUNT(*))))))))|(rt0.c2)) IN ())) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((((0xf424199, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))<>(CAST(vt1.c0 AS INTEGER)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((0Xf424199, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))<>(CAST(vt1.c0 AS INTEGER)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((0Xf424199, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))!=(CAST(vt1.c0 AS INTEGER)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0)!=(vt1.c0)))) AND (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((((vt1.c0)!=(vt1.c0)))) AND (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((((vt1.c0)<>(vt1.c0)))) AND (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) IS TRUE)) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) IS TRUE)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) IS TRUE)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING LIKE(MAX(x'0d4c'), GROUP_CONCAT(rt0.c2), '	') COLLATE BINARY UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING (NOT (LIKE(MAX(x'0d4c'), GROUP_CONCAT(rt0.c2), '	') COLLATE BINARY)) UNION ALL SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING ((LIKE(MAX(x'0d4c'), GROUP_CONCAT(rt0.c2), '	') COLLATE BINARY) ISNULL);
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING LIKE(MAX(x'0d4c'), GROUP_CONCAT(rt0.c2), '	') COLLATE BINARY UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING (NOT (LIKE(MAX(x'0d4c'), GROUP_CONCAT(rt0.c2), '	') COLLATE BINARY)) UNION ALL SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING ((LIKE(MAX(x'0d4c'), GROUP_CONCAT(rt0.c2), '	') COLLATE BINARY) ISNULL);
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT vt1.c0 FROM rt0, vt1;
SELECT vt1.c0 FROM rt0, vt1 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (QUOTE(rt0.c0)) AND (((vt1.c0)>(rt0.c2))))) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt1 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (QUOTE(rt0.c0)) AND (((vt1.c0)>(rt0.c2))))))) UNION ALL SELECT vt1.c0 FROM rt0, vt1 WHERE (((((CASE rt0.c1  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (QUOTE(rt0.c0)) AND (((vt1.c0)>(rt0.c2))))) ISNULL));
SELECT vt1.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c1 FROM rt0 CROSS JOIN vt1 ON ((CASE WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END)&(rt0.c1));
SELECT DISTINCT rt0.c1 FROM rt0 CROSS JOIN vt1 ON ((CASE WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END)&(rt0.c1)) WHERE (((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT rt0.c1 FROM rt0 CROSS JOIN vt1 ON ((CASE WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END)&(rt0.c1)) WHERE ((NOT (((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1 FROM rt0 CROSS JOIN vt1 ON ((CASE WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END)&(rt0.c1)) WHERE (((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0 CROSS JOIN vt1 ON ((CASE WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END)&(rt0.c1));
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN 0.6916483635617656 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN 1369304575 THEN rt0.c2 END COLLATE NOCASE) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN 0.6916483635617656 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN 1369304575 THEN rt0.c2 END COLLATE NOCASE))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN 0.6916483635617656 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN 1369304575 THEN rt0.c2 END COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((((((GROUP_CONCAT(AVG(vt1.c0)))OR(GROUP_CONCAT(SUM(vt1.c0)))))OR(MIN(GROUP_CONCAT(MAX(COUNT(*)))))))AND(vt1.c0)))AND(vt1.c0)))/(GROUP_CONCAT(GROUP_CONCAT(MIN(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((((((((GROUP_CONCAT(AVG(vt1.c0)))OR(GROUP_CONCAT(SUM(vt1.c0)))))OR(MIN(GROUP_CONCAT(MAX(COUNT(*)))))))AND(vt1.c0)))AND(vt1.c0)))/(GROUP_CONCAT(GROUP_CONCAT(MIN(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((((((((GROUP_CONCAT(AVG(vt1.c0)))OR(GROUP_CONCAT(SUM(vt1.c0)))))OR(MIN(GROUP_CONCAT(MAX(COUNT(*)))))))AND(vt1.c0)))AND(vt1.c0)))/(GROUP_CONCAT(GROUP_CONCAT(MIN(vt1.c0)))))) ISNULL);
SELECT ALL MIN(((rt0.c0) IS TRUE) COLLATE RTRIM) FROM rt0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((0.6999651573065905)GLOB(rt0.c2)) COLLATE NOCASE) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((0.6999651573065905)GLOB(rt0.c2)) COLLATE NOCASE))) UNION ALL SELECT * FROM rt0 WHERE (((((0.6999651573065905)GLOB(rt0.c2)) COLLATE NOCASE) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE (x'') UNION SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1;
SELECT ALL rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0;
SELECT ALL rt0.c2, vt1.c0 FROM rt0, vt1 WHERE (((vt1.c0 IN (x'')) IN ())) GROUP BY rt0.c2, vt1.c0 UNION SELECT rt0.c2, vt1.c0 FROM rt0, vt1 WHERE ((NOT (((vt1.c0 IN (x'')) IN ())))) GROUP BY rt0.c2, vt1.c0 UNION SELECT ALL rt0.c2, vt1.c0 FROM rt0, vt1 WHERE (((((vt1.c0 IN (x'')) IN ())) ISNULL)) GROUP BY rt0.c2, vt1.c0;
SELECT ALL rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX((+ (vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX((+ (vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX((+ (vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX((+ (vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX((+ (vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX((+ (vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2 FROM rt0, vt1;
SELECT ALL rt0.c2 FROM rt0, vt1 WHERE (((((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0))) BETWEEN (((vt1.c0) IS TRUE)) AND ((- (rt0.c2))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0))) BETWEEN (((vt1.c0) IS TRUE)) AND ((- (rt0.c2))))))) UNION ALL SELECT rt0.c2 FROM rt0, vt1 WHERE (((((((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0))) BETWEEN (((vt1.c0) IS TRUE)) AND ((- (rt0.c2))))) ISNULL));
SELECT ALL rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (CASE WHEN ((NULL)<(rt0.c1)) THEN json_extract(rt0.c0, rt0.c2, '', rt0.c0) ELSE ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)) END) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN ((NULL)<(rt0.c1)) THEN json_extract(rt0.c0, rt0.c2, '', rt0.c0) ELSE ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)) END))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((CASE WHEN ((NULL)<(rt0.c1)) THEN json_extract(rt0.c0, rt0.c2, '', rt0.c0) ELSE ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)) END) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((0.8357745682726235)+(NULL)))<<(vt1.c0 COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((0.8357745682726235)+(NULL)))<<(vt1.c0 COLLATE RTRIM))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((0.8357745682726235)+(NULL)))<<(vt1.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING MAX(COUNT(rt0.c0)) UNION ALL SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING (NOT (MAX(COUNT(rt0.c0)))) UNION ALL SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING ((MAX(COUNT(rt0.c0))) ISNULL);
SELECT ALL * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE (CAST(((vt1.c0)<(rt0.c1)) AS TEXT)) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (CAST(((vt1.c0)<(rt0.c1)) AS TEXT)))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((CAST(((vt1.c0)<(rt0.c1)) AS TEXT)) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT vt1.c0 FROM vt1, rt0;
SELECT DISTINCT vt1.c0 FROM vt1, rt0 WHERE (CASE WHEN ((((((((((((vt1.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)) THEN LTRIM(vt1.c0, vt1.c0) WHEN ((rt0.c1)/(vt1.c0)) THEN CAST(x'8d94' AS NUMERIC) WHEN CAST(rt0.c2 AS INTEGER) THEN CASE WHEN vt1.c0 THEN rt0.c1 END ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) END) UNION SELECT DISTINCT vt1.c0 FROM vt1, rt0 WHERE ((NOT (CASE WHEN ((((((((((((vt1.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)) THEN LTRIM(vt1.c0, vt1.c0) WHEN ((rt0.c1)/(vt1.c0)) THEN CAST(x'8d94' AS NUMERIC) WHEN CAST(rt0.c2 AS INTEGER) THEN CASE WHEN vt1.c0 THEN rt0.c1 END ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) END))) UNION SELECT DISTINCT vt1.c0 FROM vt1, rt0 WHERE (((CASE WHEN ((((((((((((vt1.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)) THEN LTRIM(vt1.c0, vt1.c0) WHEN ((rt0.c1)/(vt1.c0)) THEN CAST(x'8d94' AS NUMERIC) WHEN CAST(rt0.c2 AS INTEGER) THEN CASE WHEN vt1.c0 THEN rt0.c1 END ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (json_insert(((1186221630)&(rt0.c2)), ((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)), CAST(rt0.c0 AS INTEGER))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (json_insert(((1186221630)&(rt0.c2)), ((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)), CAST(rt0.c0 AS INTEGER))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((json_insert(((1186221630)&(rt0.c2)), ((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)), CAST(rt0.c0 AS INTEGER))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(COUNT(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(COUNT(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(COUNT(vt1.c0))) ISNULL);
SELECT vt1.c0 FROM rt0, vt1;
SELECT vt1.c0 FROM rt0, vt1 WHERE (CAST(rt0.c2 AS TEXT)) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt1 WHERE ((NOT (CAST(rt0.c2 AS TEXT)))) UNION ALL SELECT vt1.c0 FROM rt0, vt1 WHERE (((CAST(rt0.c2 AS TEXT)) ISNULL));
SELECT vt1.c0 FROM rt0, vt1;
SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (((rt0.c1)/(vt1.c0)) IN ());
SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (((rt0.c1)/(vt1.c0)) IN ()) WHERE (CAST(((rt0.c2)*(vt1.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (((rt0.c1)/(vt1.c0)) IN ()) WHERE ((NOT (CAST(((rt0.c2)*(vt1.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (((rt0.c1)/(vt1.c0)) IN ()) WHERE (((CAST(((rt0.c2)*(vt1.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (((rt0.c1)/(vt1.c0)) IN ());
SELECT vt1.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON vt1.c0 GROUP BY vt1.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON vt1.c0 WHERE (((vt1.c0) NOT NULL)) GROUP BY vt1.c0, rt0.c2 UNION SELECT vt1.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON vt1.c0 WHERE ((NOT (((vt1.c0) NOT NULL)))) GROUP BY vt1.c0, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON vt1.c0 WHERE (((((vt1.c0) NOT NULL)) ISNULL)) GROUP BY vt1.c0, rt0.c2;
SELECT vt1.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON vt1.c0 GROUP BY vt1.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING '' UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ('')) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (('') ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING '' UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ('')) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (('') ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((IFNULL(rt0.c0, rt0.c1)) ISNULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((IFNULL(rt0.c0, rt0.c1)) ISNULL)))) UNION ALL SELECT * FROM rt0 WHERE (((((IFNULL(rt0.c0, rt0.c1)) ISNULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ('829783549') UNION SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((NOT ('829783549'))) UNION SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((('829783549') ISNULL));
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (CASE WHEN (- (rt0.c2)) THEN (((rt0.c1))<>((x''))) ELSE (rt0.c1 IN (rt0.c0)) END) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN (- (rt0.c2)) THEN (((rt0.c1))<>((x''))) ELSE (rt0.c1 IN (rt0.c0)) END))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE WHEN (- (rt0.c2)) THEN (((rt0.c1))!=((x''))) ELSE (rt0.c1 IN (rt0.c0)) END) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c1) BETWEEN (rt0.c1) AND (vt1.c0)) IN ()) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0;
SELECT rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c1) BETWEEN (rt0.c1) AND (vt1.c0)) IN ()) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0 HAVING AVG(NULL) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c1) BETWEEN (rt0.c1) AND (vt1.c0)) IN ()) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0 HAVING (NOT (AVG(NULL))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c1) BETWEEN (rt0.c1) AND (vt1.c0)) IN ()) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0 HAVING ((AVG(NULL)) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c1) BETWEEN (rt0.c1) AND (vt1.c0)) IN ()) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0;
SELECT rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c1) BETWEEN (rt0.c1) AND (vt1.c0)) IN ()) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0 HAVING AVG(NULL) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c1) BETWEEN (rt0.c1) AND (vt1.c0)) IN ()) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0 HAVING (NOT (AVG(NULL))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c1) BETWEEN (rt0.c1) AND (vt1.c0)) IN ()) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0 HAVING ((AVG(NULL)) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c1) BETWEEN (rt0.c1) AND (vt1.c0)) IN ()) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0;
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE ((~ (rt0.c1 COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT ((~ (rt0.c1 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((((~ (rt0.c1 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE ((+ (CAST(rt0.c1 AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED, vt1 WHERE ((NOT ((+ (CAST(rt0.c1 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((((+ (CAST(rt0.c1 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0;
SELECT rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (TRIM(rt0.c2 COLLATE BINARY, '1369304575' COLLATE RTRIM)) GROUP BY rt0.c1, vt1.c0 UNION SELECT rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((NOT (TRIM(rt0.c2 COLLATE BINARY, '1369304575' COLLATE RTRIM)))) GROUP BY rt0.c1, vt1.c0 UNION SELECT rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (((TRIM(rt0.c2 COLLATE BINARY, '1369304575' COLLATE RTRIM)) ISNULL)) GROUP BY rt0.c1, vt1.c0;
SELECT rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0 HAVING TOTAL(COALESCE(GROUP_CONCAT(-455804711), rt0.c1, AVG(COUNT(*)), rt0.c0)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0 HAVING (NOT (TOTAL(COALESCE(GROUP_CONCAT(-455804711), rt0.c1, AVG(COUNT(*)), rt0.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0 HAVING ((TOTAL(COALESCE(GROUP_CONCAT(-455804711), rt0.c1, AVG(COUNT(*)), rt0.c0))) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT ((NOT (rt0.c0))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((((NOT (rt0.c0))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS INTEGER)) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((NOT (CAST(CAST(rt0.c1 AS BLOB) AS INTEGER)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE (((CAST(CAST(rt0.c1 AS BLOB) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (' g') GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (' g'))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((' g') ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((NOT (AVG(COUNT(*)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((NOT (AVG(COUNT(*))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (0.5961919771209345) UNION ALL SELECT * FROM rt0 WHERE ((NOT (0.5961919771209345))) UNION ALL SELECT ALL * FROM rt0 WHERE (((0.5961919771209345) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS BLOB)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST((vt1.c0 IN ()) AS BLOB)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST((vt1.c0 IN ()) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)<(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 NOT INDEXED WHERE ((NOT (((rt0.c0 COLLATE NOCASE)<(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((rt0.c0 COLLATE NOCASE)<(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1;
SELECT rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((- ((vt1.c0 IN (rt0.c0))))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((NOT ((- ((vt1.c0 IN (rt0.c0))))))) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((((- ((vt1.c0 IN (rt0.c0))))) ISNULL));
SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0)>(vt1.c0)))-(vt1.c0 COLLATE BINARY))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)>(vt1.c0)))-(vt1.c0 COLLATE BINARY))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)>(vt1.c0)))-(vt1.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE (CAST(rt0.c2 COLLATE RTRIM AS TEXT)) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (CAST(rt0.c2 COLLATE RTRIM AS TEXT)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE (((CAST(rt0.c2 COLLATE RTRIM AS TEXT)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING AVG((MIN(rt0.c0) IN ())) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (AVG((MIN(rt0.c0) IN ())))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((AVG((MIN(rt0.c0) IN ()))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING AVG((MIN(rt0.c0) IN ())) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (AVG((MIN(rt0.c0) IN ())))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((AVG((MIN(rt0.c0) IN ()))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE ((((((rt0.c1)+(rt0.c0))))>((((2.61144668E8) ISNULL))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c1)+(rt0.c0))))>((((2.61144668E8) ISNULL))))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((((((((rt0.c1)+(rt0.c0))))>((((2.61144668E8) ISNULL))))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c1 FROM vt1, rt0 WHERE ((NOT ((('0.6916483635617656')&(rt0.c1))))) UNION SELECT DISTINCT rt0.c1 FROM vt1, rt0 WHERE ((NOT ((NOT ((('0.6916483635617656')&(rt0.c1))))))) UNION SELECT DISTINCT rt0.c1 FROM vt1, rt0 WHERE ((((NOT ((('0.6916483635617656')&(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM vt1, rt0;
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt1 FULL OUTER JOIN rt0 ON rt0.c2 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt1 FULL OUTER JOIN rt0 ON rt0.c2 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt1 FULL OUTER JOIN rt0 ON rt0.c2 WHERE ((NOT (((vt1.c0) ISNULL)))) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt1 FULL OUTER JOIN rt0 ON rt0.c2 WHERE (((((vt1.c0) ISNULL)) ISNULL)) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt1 FULL OUTER JOIN rt0 ON rt0.c2 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c0 FROM rt0 INNER JOIN vt1 ON NULL GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 INNER JOIN vt1 ON NULL GROUP BY rt0.c0 HAVING (TOTAL(rt0.c0) IN ()) UNION ALL SELECT ALL rt0.c0 FROM rt0 INNER JOIN vt1 ON NULL GROUP BY rt0.c0 HAVING (NOT ((TOTAL(rt0.c0) IN ()))) UNION ALL SELECT rt0.c0 FROM rt0 INNER JOIN vt1 ON NULL GROUP BY rt0.c0 HAVING (((TOTAL(rt0.c0) IN ())) ISNULL);
SELECT ALL rt0.c0 FROM rt0 INNER JOIN vt1 ON NULL GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 INNER JOIN vt1 ON NULL GROUP BY rt0.c0 HAVING (TOTAL(rt0.c0) IN ()) UNION ALL SELECT ALL rt0.c0 FROM rt0 INNER JOIN vt1 ON NULL GROUP BY rt0.c0 HAVING (NOT ((TOTAL(rt0.c0) IN ()))) UNION ALL SELECT rt0.c0 FROM rt0 INNER JOIN vt1 ON NULL GROUP BY rt0.c0 HAVING (((TOTAL(rt0.c0) IN ())) ISNULL);
SELECT ALL rt0.c0 FROM rt0 INNER JOIN vt1 ON NULL GROUP BY rt0.c0;
SELECT ALL * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE (((UNICODE(vt1.c0)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (CAST(rt0.c1 AS BLOB)))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (((UNICODE(vt1.c0)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (CAST(rt0.c1 AS BLOB)))))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((((UNICODE(vt1.c0)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (CAST(rt0.c1 AS BLOB)))) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((~ (((rt0.c0)<=(rt0.c1))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 NOT INDEXED WHERE ((NOT ((~ (((rt0.c0)<=(rt0.c1))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 NOT INDEXED WHERE ((((~ (((rt0.c0)<=(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN ((vt1.c0 IN ('h'))) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN ((vt1.c0 IN ('h'))) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN ((vt1.c0 IN ('h'))) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(COUNT(GROUP_CONCAT(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(COUNT(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(COUNT(GROUP_CONCAT(vt1.c0)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM vt1 CROSS JOIN rt0 ON ((rt0.c2 COLLATE BINARY) BETWEEN (LIKELY(DISTINCT vt1.c0)) AND (rt0.c2 COLLATE BINARY));
SELECT rt0.c1, rt0.c0 FROM vt1 CROSS JOIN rt0 ON ((rt0.c2 COLLATE BINARY) BETWEEN (LIKELY(DISTINCT vt1.c0)) AND (rt0.c2 COLLATE BINARY)) WHERE (LOWER(x'')) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt1 CROSS JOIN rt0 ON ((rt0.c2 COLLATE BINARY) BETWEEN (LIKELY(DISTINCT vt1.c0)) AND (rt0.c2 COLLATE BINARY)) WHERE ((NOT (LOWER(x'')))) UNION ALL SELECT rt0.c1, rt0.c0 FROM vt1 CROSS JOIN rt0 ON ((rt0.c2 COLLATE BINARY) BETWEEN (LIKELY(DISTINCT vt1.c0)) AND (rt0.c2 COLLATE BINARY)) WHERE (((LOWER(x'')) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM vt1 CROSS JOIN rt0 ON ((rt0.c2 COLLATE BINARY) BETWEEN (LIKELY(DISTINCT vt1.c0)) AND (rt0.c2 COLLATE BINARY));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (((('', '261144668', rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, CASE WHEN vt1.c0 THEN NULL END, UNLIKELY(rt0.c2), (rt0.c1 IN ()), CAST(rt0.c0 AS INTEGER))) AND ((((((vt1.c0)OR(rt0.c1)))AND(vt1.c0)), ((rt0.c2)AND(rt0.c2)), ((vt1.c0) IS FALSE), (((rt0.c0))<((rt0.c2))), (rt0.c0 IN ()))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((NOT (((('', '261144668', rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, CASE WHEN vt1.c0 THEN NULL END, UNLIKELY(rt0.c2), (rt0.c1 IN ()), CAST(rt0.c0 AS INTEGER))) AND ((((((vt1.c0)OR(rt0.c1)))AND(vt1.c0)), ((rt0.c2)AND(rt0.c2)), ((vt1.c0) IS FALSE), (((rt0.c0))<((rt0.c2))), (rt0.c0 IN ()))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (((((('', '261144668', rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, CASE WHEN vt1.c0 THEN NULL END, UNLIKELY(rt0.c2), (rt0.c1 IN ()), CAST(rt0.c0 AS INTEGER))) AND ((((((vt1.c0)OR(rt0.c1)))AND(vt1.c0)), ((rt0.c2)AND(rt0.c2)), ((vt1.c0) IS FALSE), (((rt0.c0))<((rt0.c2))), (rt0.c0 IN ()))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0;
SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (NULL) GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(((((MAX(MAX(GROUP_CONCAT(vt1.c0))))OR(vt1.c0)))OR(MAX(COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(((((MAX(MAX(GROUP_CONCAT(vt1.c0))))OR(vt1.c0)))OR(MAX(COUNT(*))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(((((MAX(MAX(GROUP_CONCAT(vt1.c0))))OR(vt1.c0)))OR(MAX(COUNT(*)))))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (UNLIKELY(vt1.c0)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (UNLIKELY(vt1.c0)))) UNION ALL SELECT * FROM vt1 WHERE (((UNLIKELY(vt1.c0)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt1.c0, rt0.c1 FROM rt0 NATURAL JOIN vt1;
SELECT DISTINCT vt1.c0, rt0.c1 FROM rt0 NATURAL JOIN vt1 WHERE (CAST(rt0.c0 AS NUMERIC)) UNION SELECT DISTINCT vt1.c0, rt0.c1 FROM rt0 NATURAL JOIN vt1 WHERE ((NOT (CAST(rt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT vt1.c0, rt0.c1 FROM rt0 NATURAL JOIN vt1 WHERE (((CAST(rt0.c0 AS NUMERIC)) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c1 FROM rt0 NATURAL JOIN vt1;
SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0 NATURAL JOIN vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0 NATURAL JOIN vt1 WHERE ((- ((((rt0.c2))<((rt0.c1)))))) GROUP BY vt1.c0, rt0.c1, rt0.c2 UNION SELECT vt1.c0, rt0.c1, rt0.c2 FROM rt0 NATURAL JOIN vt1 WHERE ((NOT ((- ((((rt0.c2))<((rt0.c1)))))))) GROUP BY vt1.c0, rt0.c1, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0 NATURAL JOIN vt1 WHERE ((((- ((((rt0.c2))<((rt0.c1)))))) ISNULL)) GROUP BY vt1.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0 NATURAL JOIN vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2 HAVING 0xffffffffbc74079a UNION ALL SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (0xffffffffbc74079a)) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2 HAVING ((0xffffffffbc74079a) ISNULL);
SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2 HAVING 0xffffffffbc74079a UNION ALL SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (0xffffffffbc74079a)) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2 HAVING ((0xffffffffbc74079a) ISNULL);
SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (((rt0.c1) IS FALSE) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (((rt0.c1) IS FALSE) COLLATE NOCASE))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((((rt0.c1) IS FALSE) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c2 IN (rt0.c2, rt0.c1)))<=(((rt0.c1)+(rt0.c2))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2 IN (rt0.c2, rt0.c1)))<=(((rt0.c1)+(rt0.c2))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c2, rt0.c1)))<=(((rt0.c1)+(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (NULL) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2;
SELECT vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2;
SELECT vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((((rt0.c0)&('%{D訕')), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END, (((rt0.c0))<((rt0.c1))))) AND ((((rt0.c2)!=(rt0.c1)), HEX(x'c8d232a2'), (rt0.c1 IN (rt0.c0, rt0.c1, rt0.c1)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((((rt0.c0)&('%{D訕')), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END, (((rt0.c0))<((rt0.c1))))) AND ((((rt0.c2)<>(rt0.c1)), HEX(x'c8d232a2'), (rt0.c1 IN (rt0.c0, rt0.c1, rt0.c1)))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((((rt0.c0)&('%{D訕')), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END, (((rt0.c0))<((rt0.c1))))) AND ((((rt0.c2)<>(rt0.c1)), HEX(x'c8d232a2'), (rt0.c1 IN (rt0.c0, rt0.c1, rt0.c1)))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (DATETIME(((rt0.c0)<<(rt0.c2)), 0.1789356855233949, ((rt0.c1) NOT BETWEEN ('0.7789227872036856') AND (rt0.c1)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (DATETIME(((rt0.c0)<<(rt0.c2)), 0.1789356855233949, ((rt0.c1) NOT BETWEEN ('0.7789227872036856') AND (rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((DATETIME(((rt0.c0)<<(rt0.c2)), 0.1789356855233949, ((rt0.c1) NOT BETWEEN ('0.7789227872036856') AND (rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((+ (((rt0.c0)<(rt0.c0))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((+ (((rt0.c0)<(rt0.c0))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((+ (((rt0.c0)<(rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c2 IN (rt0.c0)) IN ((~ (rt0.c1)), ((((rt0.c1)OR(0.9456394454661602)))AND(rt0.c2)))) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c2 IN (rt0.c0)) IN ((~ (rt0.c1)), ((((rt0.c1)OR(0.9456394454661602)))AND(rt0.c2)))) GROUP BY vt1.c0 HAVING CAST((((rt0.c1, MIN(vt1.c0), GROUP_CONCAT(rt0.c1), rt0.c0, vt1.c0))>=((TOTAL(rt0.c1), rt0.c1, rt0.c2, vt1.c0, rt0.c0))) AS TEXT) UNION ALL SELECT ALL vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c2 IN (rt0.c0)) IN ((~ (rt0.c1)), ((((rt0.c1)OR(0.9456394454661602)))AND(rt0.c2)))) GROUP BY vt1.c0 HAVING (NOT (CAST((((rt0.c1, MIN(vt1.c0), GROUP_CONCAT(rt0.c1), rt0.c0, vt1.c0))>=((TOTAL(rt0.c1), rt0.c1, rt0.c2, vt1.c0, rt0.c0))) AS TEXT))) UNION ALL SELECT vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c2 IN (rt0.c0)) IN ((~ (rt0.c1)), ((((rt0.c1)OR(0.9456394454661602)))AND(rt0.c2)))) GROUP BY vt1.c0 HAVING ((CAST((((rt0.c1, MIN(vt1.c0), GROUP_CONCAT(rt0.c1), rt0.c0, vt1.c0))>=((TOTAL(rt0.c1), rt0.c1, rt0.c2, vt1.c0, rt0.c0))) AS TEXT)) ISNULL);
SELECT ALL vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c2 IN (rt0.c0)) IN ((~ (rt0.c1)), ((((rt0.c1)OR(0.9456394454661602)))AND(rt0.c2)))) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c2 IN (rt0.c0)) IN ((~ (rt0.c1)), ((((rt0.c1)OR(0.9456394454661602)))AND(rt0.c2)))) GROUP BY vt1.c0 HAVING CAST((((rt0.c1, MIN(vt1.c0), GROUP_CONCAT(rt0.c1), rt0.c0, vt1.c0))>=((TOTAL(rt0.c1), rt0.c1, rt0.c2, vt1.c0, rt0.c0))) AS TEXT) UNION ALL SELECT ALL vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c2 IN (rt0.c0)) IN ((~ (rt0.c1)), ((((rt0.c1)OR(0.9456394454661602)))AND(rt0.c2)))) GROUP BY vt1.c0 HAVING (NOT (CAST((((rt0.c1, MIN(vt1.c0), GROUP_CONCAT(rt0.c1), rt0.c0, vt1.c0))>=((TOTAL(rt0.c1), rt0.c1, rt0.c2, vt1.c0, rt0.c0))) AS TEXT))) UNION ALL SELECT vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c2 IN (rt0.c0)) IN ((~ (rt0.c1)), ((((rt0.c1)OR(0.9456394454661602)))AND(rt0.c2)))) GROUP BY vt1.c0 HAVING ((CAST((((rt0.c1, MIN(vt1.c0), GROUP_CONCAT(rt0.c1), rt0.c0, vt1.c0))>=((TOTAL(rt0.c1), rt0.c1, rt0.c2, vt1.c0, rt0.c0))) AS TEXT)) ISNULL);
SELECT ALL vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c2 IN (rt0.c0)) IN ((~ (rt0.c1)), ((((rt0.c1)OR(0.9456394454661602)))AND(rt0.c2)))) GROUP BY vt1.c0;
SELECT * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (CASE WHEN ((rt0.c1) ISNULL) THEN (~ (vt1.c0)) END) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (CASE WHEN ((rt0.c1) ISNULL) THEN (~ (vt1.c0)) END))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((CASE WHEN ((rt0.c1) ISNULL) THEN (~ (vt1.c0)) END) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))OR(0.9796965245171994))) IS TRUE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))OR(0.9796965245171994))) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))OR(0.9796965245171994))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS REAL))<(((((((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)))OR(vt1.c0)))AND(rt0.c2)))) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS REAL))<(((((((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)))OR(vt1.c0)))AND(rt0.c2)))) WHERE (ABS(CAST(vt1.c0 AS TEXT))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS REAL))<(((((((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)))OR(vt1.c0)))AND(rt0.c2)))) WHERE ((NOT (ABS(CAST(vt1.c0 AS TEXT))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS REAL))<(((((((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)))OR(vt1.c0)))AND(rt0.c2)))) WHERE (((ABS(CAST(vt1.c0 AS TEXT))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS REAL))<(((((((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)))OR(vt1.c0)))AND(rt0.c2)))) GROUP BY rt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST((~ (vt1.c0)) AS TEXT) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST((~ (vt1.c0)) AS TEXT))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST((~ (vt1.c0)) AS TEXT)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST((~ (vt1.c0)) AS TEXT) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST((~ (vt1.c0)) AS TEXT))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST((~ (vt1.c0)) AS TEXT)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (((((CASE WHEN vt1.c0 THEN rt0.c2 END)AND(LOWER(DISTINCT rt0.c1))))OR(((rt0.c2)*(rt0.c0))))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (((((CASE WHEN vt1.c0 THEN rt0.c2 END)AND(LOWER(DISTINCT rt0.c1))))OR(((rt0.c2)*(rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((((((CASE WHEN vt1.c0 THEN rt0.c2 END)AND(LOWER(DISTINCT rt0.c1))))OR(((rt0.c2)*(rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0 COLLATE NOCASE)))AND(NULL)))AND(CASE vt1.c0  WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)))AND(json_array_length(vt1.c0, vt1.c0)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0 COLLATE NOCASE)))AND(NULL)))AND(CASE vt1.c0  WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)))AND(json_array_length(vt1.c0, vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0 COLLATE NOCASE)))AND(NULL)))AND(CASE vt1.c0  WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)))AND(json_array_length(vt1.c0, vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((((((rt0.c0) NOTNULL)))>(((vt1.c0 IN (vt1.c0)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((NOT ((((((rt0.c0) NOTNULL)))>(((vt1.c0 IN (vt1.c0)))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((((((((rt0.c0) NOTNULL)))>(((vt1.c0 IN (vt1.c0)))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING AVG(SUM(rt0.c0)) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING (NOT (AVG(SUM(rt0.c0)))) UNION ALL SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2 HAVING ((AVG(SUM(rt0.c0))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (CAST(((vt1.c0)LIKE(vt1.c0)) AS INTEGER)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CAST(((vt1.c0)LIKE(vt1.c0)) AS INTEGER)))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CAST(((vt1.c0)LIKE(vt1.c0)) AS INTEGER)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((((((rt0.c2 IN ()))OR((((vt1.c0))<((rt0.c1))))))OR((((rt0.c1, rt0.c1, rt0.c1, rt0.c1, vt1.c0))>=((rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt1.c0)))))) UNION SELECT DISTINCT vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT ((((((rt0.c2 IN ()))OR((((vt1.c0))<((rt0.c1))))))OR((((rt0.c1, rt0.c1, rt0.c1, rt0.c1, vt1.c0))>=((rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt1.c0)))))))) UNION SELECT DISTINCT vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((((((((rt0.c2 IN ()))OR((((vt1.c0))<((rt0.c1))))))OR((((rt0.c1, rt0.c1, rt0.c1, rt0.c1, vt1.c0))>=((rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt1.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c2 FROM vt1, rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((- (rt0.c0)) COLLATE BINARY) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((- (rt0.c0)) COLLATE BINARY))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((- (rt0.c0)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(MAX(vt1.c0))) NOT BETWEEN (((((vt1.c0)AND(MIN(AVG(0.14757174076287094)))))AND(vt1.c0))) AND (((((AVG(vt1.c0))AND(vt1.c0)))AND(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT(MAX(vt1.c0))) NOT BETWEEN (((((vt1.c0)AND(MIN(AVG(0.14757174076287094)))))AND(vt1.c0))) AND (((((AVG(vt1.c0))AND(vt1.c0)))AND(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(MAX(vt1.c0))) NOT BETWEEN (((((vt1.c0)AND(MIN(AVG(0.14757174076287094)))))AND(vt1.c0))) AND (((((AVG(vt1.c0))AND(vt1.c0)))AND(vt1.c0))))) ISNULL);
SELECT vt1.c0, rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((NULL)<<(rt0.c2)) COLLATE BINARY;
SELECT vt1.c0, rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((NULL)<<(rt0.c2)) COLLATE BINARY WHERE ((((- (rt0.c1))) BETWEEN (((rt0.c0) NOT NULL)) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((NULL)<<(rt0.c2)) COLLATE BINARY WHERE ((NOT ((((- (rt0.c1))) BETWEEN (((rt0.c0) NOT NULL)) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((NULL)<<(rt0.c2)) COLLATE BINARY WHERE ((((((- (rt0.c1))) BETWEEN (((rt0.c0) NOT NULL)) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL));
SELECT vt1.c0, rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((NULL)<<(rt0.c2)) COLLATE BINARY;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (((vt1.c0) IS TRUE) COLLATE RTRIM) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((NOT (((vt1.c0) IS TRUE) COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (((((vt1.c0) IS TRUE) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON (((- (rt0.c1))) ISNULL) GROUP BY rt0.c1, vt1.c0, rt0.c2;
SELECT rt0.c1, vt1.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON (((- (rt0.c1))) ISNULL) GROUP BY rt0.c1, vt1.c0, rt0.c2 HAVING ((CAST(AVG(rt0.c1) AS BLOB))=((((SUM(vt1.c0)))>((MAX(rt0.c2)))))) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON (((- (rt0.c1))) ISNULL) GROUP BY rt0.c1, vt1.c0, rt0.c2 HAVING (NOT (((CAST(AVG(rt0.c1) AS BLOB))==((((SUM(vt1.c0)))>((MAX(rt0.c2)))))))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON (((- (rt0.c1))) ISNULL) GROUP BY rt0.c1, vt1.c0, rt0.c2 HAVING ((((CAST(AVG(rt0.c1) AS BLOB))=((((SUM(vt1.c0)))>((MAX(rt0.c2))))))) ISNULL);
SELECT ALL rt0.c1, vt1.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON (((- (rt0.c1))) ISNULL) GROUP BY rt0.c1, vt1.c0, rt0.c2;
SELECT rt0.c1, vt1.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON (((- (rt0.c1))) ISNULL) GROUP BY rt0.c1, vt1.c0, rt0.c2 HAVING ((CAST(AVG(rt0.c1) AS BLOB))=((((SUM(vt1.c0)))>((MAX(rt0.c2)))))) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON (((- (rt0.c1))) ISNULL) GROUP BY rt0.c1, vt1.c0, rt0.c2 HAVING (NOT (((CAST(AVG(rt0.c1) AS BLOB))==((((SUM(vt1.c0)))>((MAX(rt0.c2)))))))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON (((- (rt0.c1))) ISNULL) GROUP BY rt0.c1, vt1.c0, rt0.c2 HAVING ((((CAST(AVG(rt0.c1) AS BLOB))=((((SUM(vt1.c0)))>((MAX(rt0.c2))))))) ISNULL);
SELECT ALL rt0.c1, vt1.c0, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON (((- (rt0.c1))) ISNULL) GROUP BY rt0.c1, vt1.c0, rt0.c2;
SELECT ALL SUM((NOT (rt0.c1)) COLLATE NOCASE) FROM rt0;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((NULL)AND(rt0.c0)))OR(rt0.c0))) BETWEEN ('1790835910' COLLATE BINARY) AND (CAST(x'' AS REAL)))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((((NULL)AND(rt0.c0)))OR(rt0.c0))) BETWEEN ('1790835910' COLLATE BINARY) AND (CAST(x'' AS REAL)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((NULL)AND(rt0.c0)))OR(rt0.c0))) BETWEEN ('1790835910' COLLATE BINARY) AND (CAST(x'' AS REAL)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c1)*((((rt0.c0, rt0.c1, '-1051443703'))<=((rt0.c1, rt0.c0, rt0.c1)))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c1)*((((rt0.c0, rt0.c1, '-1051443703'))<=((rt0.c1, rt0.c0, rt0.c1)))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c1)*((((rt0.c0, rt0.c1, '-1051443703'))<=((rt0.c1, rt0.c0, rt0.c1)))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (rt0.c2 IN (MIN(x''), ((SUM(SUM(rt0.c0))) BETWEEN (COUNT(*)) AND (rt0.c0)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((rt0.c2 IN (MIN(x''), ((SUM(SUM(rt0.c0))) BETWEEN (COUNT(*)) AND (rt0.c0)))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((rt0.c2 IN (MIN(x''), ((SUM(SUM(rt0.c0))) BETWEEN (COUNT(*)) AND (rt0.c0))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((STRFTIME(rt0.c1, rt0.c0, rt0.c2))>=(CAST(rt0.c0 AS INTEGER)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((STRFTIME(rt0.c1, rt0.c0, rt0.c2))>=(CAST(rt0.c0 AS INTEGER)))))) UNION ALL SELECT * FROM rt0 WHERE (((((STRFTIME(rt0.c1, rt0.c0, rt0.c2))>=(CAST(rt0.c0 AS INTEGER)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (PRINTF(((rt0.c1)<<(rt0.c1)))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (PRINTF(((rt0.c1)<<(rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((PRINTF(((rt0.c1)<<(rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c1) NOT BETWEEN (0.9456394454661602) AND (rt0.c0)) COLLATE NOCASE) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (0.9456394454661602) AND (rt0.c0)) COLLATE NOCASE))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (0.9456394454661602) AND (rt0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0;
SELECT ALL rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0 HAVING MAX(LIKE(vt1.c0, SUM(AVG(vt1.c0)), '-')) UNION ALL SELECT rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0 HAVING (NOT (MAX(LIKE(vt1.c0, SUM(AVG(vt1.c0)), '-')))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0 HAVING ((MAX(LIKE(vt1.c0, SUM(AVG(vt1.c0)), '-'))) ISNULL);
SELECT ALL * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE (0Xffffffff97d1d395) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (0Xffffffff97d1d395))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((0xffffffff97d1d395) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt1 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt1 NATURAL JOIN rt0 WHERE (0xfffffffff7cd4ddd) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM vt1 NATURAL JOIN rt0 WHERE ((NOT (0xfffffffff7cd4ddd))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM vt1 NATURAL JOIN rt0 WHERE (((0Xfffffffff7cd4ddd) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt1 NATURAL JOIN rt0;
SELECT ALL rt0.c2, rt0.c1 FROM vt1 CROSS JOIN rt0 ON json_type(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM vt1 CROSS JOIN rt0 ON json_type(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) WHERE (((((((((((((rt0.c1)OR(rt0.c0)))OR(vt1.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(0.7439575214416616))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM vt1 CROSS JOIN rt0 ON json_type(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) WHERE ((NOT (((((((((((((rt0.c1)OR(rt0.c0)))OR(vt1.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(0.7439575214416616))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM vt1 CROSS JOIN rt0 ON json_type(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) WHERE (((((((((((((((rt0.c1)OR(rt0.c0)))OR(vt1.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(0.7439575214416616))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM vt1 CROSS JOIN rt0 ON json_type(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) GROUP BY rt0.c2, rt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING HEX(DISTINCT SUM(COUNT(COUNT(*)))) UNION ALL SELECT vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0 HAVING (NOT (HEX(DISTINCT SUM(COUNT(COUNT(*)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((HEX(DISTINCT SUM(COUNT(COUNT(*))))) ISNULL);
SELECT * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) BETWEEN (((rt0.c2)+(vt1.c0))) AND (((rt0.c2) ISNULL)))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT ((((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) BETWEEN (((rt0.c2)+(vt1.c0))) AND (((rt0.c2) ISNULL)))))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((((((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) BETWEEN (((rt0.c2)+(vt1.c0))) AND (((rt0.c2) ISNULL)))) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((~ ((rt0.c0 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((~ ((rt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((~ ((rt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 WHERE ((((rt0.c1)) BETWEEN (((+ (vt1.c0)))) AND ((((rt0.c2)<=(rt0.c0)))))) GROUP BY vt1.c0, rt0.c1 UNION SELECT vt1.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN (((+ (vt1.c0)))) AND ((((rt0.c2)<=(rt0.c0)))))))) GROUP BY vt1.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 WHERE ((((((rt0.c1)) BETWEEN (((+ (vt1.c0)))) AND ((((rt0.c2)<=(rt0.c0)))))) ISNULL)) GROUP BY vt1.c0, rt0.c1;
SELECT vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(((vt1.c0) NOT BETWEEN (AVG(GROUP_CONCAT(vt1.c0))) AND (vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(((vt1.c0) NOT BETWEEN (AVG(GROUP_CONCAT(vt1.c0))) AND (vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(((vt1.c0) NOT BETWEEN (AVG(GROUP_CONCAT(vt1.c0))) AND (vt1.c0)))) ISNULL);
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (((CAST(vt1.c0 AS TEXT))LIKE(((vt1.c0)*(rt0.c0))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (((CAST(vt1.c0 AS TEXT))LIKE(((vt1.c0)*(rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((((CAST(vt1.c0 AS TEXT))LIKE(((vt1.c0)*(rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0)-(vt1.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((vt1.c0)-(vt1.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)-(vt1.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM)) AND (('335449701' COLLATE RTRIM)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM)) AND (('335449701' COLLATE RTRIM)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM)) AND (('335449701' COLLATE RTRIM)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING NULLIF(DISTINCT GROUP_CONCAT(rt0.c1), COUNT(COUNT(*))) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING (NOT (NULLIF(DISTINCT GROUP_CONCAT(rt0.c1), COUNT(COUNT(*))))) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING ((NULLIF(DISTINCT GROUP_CONCAT(rt0.c1), COUNT(COUNT(*)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((-1475308119)) AND ((((NULL) NOTNULL))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((-1475308119)) AND ((((NULL) NOTNULL))))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((-1475308119)) AND ((((NULL) NOTNULL))))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c2 FROM rt0, vt1 WHERE ((((NULL)!=(rt0.c2)) IN ())) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt1 WHERE ((NOT ((((NULL)!=(rt0.c2)) IN ())))) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt1 WHERE ((((((NULL)<>(rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0, vt1;
SELECT rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt1 WHERE (x'' COLLATE RTRIM COLLATE NOCASE) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT (x'' COLLATE RTRIM COLLATE NOCASE))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt1 WHERE (((x'' COLLATE RTRIM COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING AVG((AVG(TOTAL(rt0.c0)) IN ())) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (AVG((AVG(TOTAL(rt0.c0)) IN ())))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((AVG((AVG(TOTAL(rt0.c0)) IN ()))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING AVG((AVG(TOTAL(rt0.c0)) IN ())) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (AVG((AVG(TOTAL(rt0.c0)) IN ())))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((AVG((AVG(TOTAL(rt0.c0)) IN ()))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1 FROM rt0 INNER JOIN vt1 ON ((((vt1.c0)GLOB(rt0.c0))) NOT BETWEEN ((- (rt0.c1))) AND (vt1.c0 COLLATE BINARY));
SELECT ALL rt0.c1 FROM rt0 INNER JOIN vt1 ON ((((vt1.c0)GLOB(rt0.c0))) NOT BETWEEN ((- (rt0.c1))) AND (vt1.c0 COLLATE BINARY)) WHERE (((CAST(rt0.c2 AS INTEGER))==(((((vt1.c0)OR(vt1.c0)))OR(rt0.c0))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 INNER JOIN vt1 ON ((((vt1.c0)GLOB(rt0.c0))) NOT BETWEEN ((- (rt0.c1))) AND (vt1.c0 COLLATE BINARY)) WHERE ((NOT (((CAST(rt0.c2 AS INTEGER))==(((((vt1.c0)OR(vt1.c0)))OR(rt0.c0))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 INNER JOIN vt1 ON ((((vt1.c0)GLOB(rt0.c0))) NOT BETWEEN ((- (rt0.c1))) AND (vt1.c0 COLLATE BINARY)) WHERE (((((CAST(rt0.c2 AS INTEGER))=(((((vt1.c0)OR(vt1.c0)))OR(rt0.c0))))) ISNULL));
SELECT ALL rt0.c1 FROM rt0 INNER JOIN vt1 ON ((((vt1.c0)GLOB(rt0.c0))) NOT BETWEEN ((- (rt0.c1))) AND (vt1.c0 COLLATE BINARY));
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((CAST(rt0.c0 AS REAL))AND((- (rt0.c1)))))OR(((rt0.c2) NOT NULL))))AND(NULL)))AND(572628713))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((((CAST(rt0.c0 AS REAL))AND((- (rt0.c1)))))OR(((rt0.c2) NOT NULL))))AND(NULL)))AND(572628713))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((((CAST(rt0.c0 AS REAL))AND((- (rt0.c1)))))OR(((rt0.c2) NOT NULL))))AND(NULL)))AND(572628713))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING MIN(COUNT(rt0.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (MIN(COUNT(rt0.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((MIN(COUNT(rt0.c0))) ISNULL);
SELECT ALL SUM(vt1.c0) FROM vt1 ORDER BY CASE WHEN vt1.c0 COLLATE RTRIM THEN ((('256000409', vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) WHEN 0.09524549292229911 THEN CAST(vt1.c0 AS REAL) WHEN CAST(vt1.c0 AS BLOB) THEN (((vt1.c0))<=((vt1.c0))) ELSE 2.55101461E8 END ASC;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CAST(ABS(2132706595) AS INTEGER)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CAST(ABS(2132706595) AS INTEGER)))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CAST(ABS(2132706595) AS INTEGER)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0 IN (vt1.c0, vt1.c0)) IN ())) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((vt1.c0 IN (vt1.c0, vt1.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0 IN (vt1.c0, vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (CASE ((rt0.c2)AND(rt0.c0))  WHEN (rt0.c0 IN (rt0.c1)) THEN UPPER(rt0.c1) WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c0) NOT NULL) WHEN NULL THEN (((rt0.c0)) NOT BETWEEN (('&1l')) AND ((rt0.c1))) WHEN (~ (rt0.c2)) THEN CAST(rt0.c2 AS REAL) WHEN rt0.c0 THEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)) WHEN (NOT (rt0.c1)) THEN (('0.7439575214416616')-(rt0.c1)) WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c0)<>(rt0.c1)) END) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CASE ((rt0.c2)AND(rt0.c0))  WHEN (rt0.c0 IN (rt0.c1)) THEN UPPER(rt0.c1) WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c0) NOT NULL) WHEN NULL THEN (((rt0.c0)) NOT BETWEEN (('&1l')) AND ((rt0.c1))) WHEN (~ (rt0.c2)) THEN CAST(rt0.c2 AS REAL) WHEN rt0.c0 THEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)) WHEN (NOT (rt0.c1)) THEN (('0.7439575214416616')-(rt0.c1)) WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c0)!=(rt0.c1)) END))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((CASE ((rt0.c2)AND(rt0.c0))  WHEN (rt0.c0 IN (rt0.c1)) THEN UPPER(rt0.c1) WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c0) NOT NULL) WHEN NULL THEN (((rt0.c0)) NOT BETWEEN (('&1l')) AND ((rt0.c1))) WHEN (~ (rt0.c2)) THEN CAST(rt0.c2 AS REAL) WHEN rt0.c0 THEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)) WHEN (NOT (rt0.c1)) THEN (('0.7439575214416616')-(rt0.c1)) WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c0)!=(rt0.c1)) END) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(SUM(AVG(COUNT(MAX(NULL))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(SUM(AVG(COUNT(MAX(NULL))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(SUM(AVG(COUNT(MAX(NULL)))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) ISNULL))IS NOT(CASE WHEN x'' THEN 0.5444191243003155 WHEN vt1.c0 THEN '-1740945702' WHEN vt1.c0 THEN vt1.c0 ELSE NULL END))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((vt1.c0) ISNULL))IS NOT(CASE WHEN x'' THEN 0.5444191243003155 WHEN vt1.c0 THEN '-1740945702' WHEN vt1.c0 THEN vt1.c0 ELSE NULL END))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((vt1.c0) ISNULL))IS NOT(CASE WHEN x'' THEN 0.5444191243003155 WHEN vt1.c0 THEN '-1740945702' WHEN vt1.c0 THEN vt1.c0 ELSE NULL END))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))<<((vt1.c0 IN ())))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))<<((vt1.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))<<((vt1.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((((((rt0.c0) ISNULL)))<((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)))) GROUP BY vt1.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((NOT ((((((rt0.c0) ISNULL)))<((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)))))) GROUP BY vt1.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((((((((rt0.c0) ISNULL)))<((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)))) ISNULL)) GROUP BY vt1.c0, rt0.c2, rt0.c1;
SELECT vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) IS FALSE) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT(*)) IS FALSE))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(*)) IS FALSE)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) IS FALSE) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT(*)) IS FALSE))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(*)) IS FALSE)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((x'') NOT BETWEEN (((((rt0.c1)OR(rt0.c0)))AND(rt0.c0))) AND (((rt0.c2)IS(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((x'') NOT BETWEEN (((((rt0.c1)OR(rt0.c0)))AND(rt0.c0))) AND (((rt0.c2)IS(rt0.c0))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((x'') NOT BETWEEN (((((rt0.c1)OR(rt0.c0)))AND(rt0.c0))) AND (((rt0.c2)IS(rt0.c0))))) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0)=(vt1.c0)))<=(vt1.c0 COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)==(vt1.c0)))<=(vt1.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)==(vt1.c0)))<=(vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))+(((vt1.c0)&(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS TEXT))+(((vt1.c0)&(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c0 AS TEXT))+(((vt1.c0)&(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))AND(((rt0.c0) NOT NULL))))OR((x'cff5' IN ()))))OR(CAST(rt0.c0 AS TEXT))))AND(((rt0.c2)>(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))AND(((rt0.c0) NOT NULL))))OR((x'cff5' IN ()))))OR(CAST(rt0.c0 AS TEXT))))AND(((rt0.c2)>(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))AND(((rt0.c0) NOT NULL))))OR((x'cff5' IN ()))))OR(CAST(rt0.c0 AS TEXT))))AND(((rt0.c2)>(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0 CROSS JOIN vt1 ON ((((((rt0.c1)OR(rt0.c0)))AND(vt1.c0)))GLOB(CAST(rt0.c1 AS REAL))) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0 CROSS JOIN vt1 ON ((((((rt0.c1)OR(rt0.c0)))AND(vt1.c0)))GLOB(CAST(rt0.c1 AS REAL))) WHERE (CAST((rt0.c1 IN ()) AS INTEGER)) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0 CROSS JOIN vt1 ON ((((((rt0.c1)OR(rt0.c0)))AND(vt1.c0)))GLOB(CAST(rt0.c1 AS REAL))) WHERE ((NOT (CAST((rt0.c1 IN ()) AS INTEGER)))) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0 UNION SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0 CROSS JOIN vt1 ON ((((((rt0.c1)OR(rt0.c0)))AND(vt1.c0)))GLOB(CAST(rt0.c1 AS REAL))) WHERE (((CAST((rt0.c1 IN ()) AS INTEGER)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0 CROSS JOIN vt1 ON ((((((rt0.c1)OR(rt0.c0)))AND(vt1.c0)))GLOB(CAST(rt0.c1 AS REAL))) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(MAX(rt0.c2)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(MAX(rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(MAX(rt0.c2))) ISNULL);
SELECT * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c0) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((rt0.c0) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (LIKELY(rt0.c2)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (LIKELY(rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (LIKELY(rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0;
SELECT rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((NOT ((+ (rt0.c0))))) GROUP BY rt0.c1, vt1.c0 UNION SELECT rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((NOT ((NOT ((+ (rt0.c0))))))) GROUP BY rt0.c1, vt1.c0 UNION SELECT rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((((NOT ((+ (rt0.c0))))) ISNULL)) GROUP BY rt0.c1, vt1.c0;
SELECT ALL rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING (((COUNT(rt0.c1) COLLATE BINARY))=((rt0.c0))) UNION ALL SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING (NOT ((((COUNT(rt0.c1) COLLATE BINARY))==((rt0.c0))))) UNION ALL SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING (((((COUNT(rt0.c1) COLLATE BINARY))=((rt0.c0)))) ISNULL);
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING (((COUNT(rt0.c1) COLLATE BINARY))=((rt0.c0))) UNION ALL SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING (NOT ((((COUNT(rt0.c1) COLLATE BINARY))==((rt0.c0))))) UNION ALL SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING (((((COUNT(rt0.c1) COLLATE BINARY))=((rt0.c0)))) ISNULL);
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt1.c0)IS NOT('')))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((((vt1.c0)IS NOT('')))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((((vt1.c0)IS NOT('')))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (-9.26357495E8) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (-9.26357495E8))) UNION SELECT DISTINCT * FROM vt1 WHERE (((-9.26357495E8) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ('') GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (''))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((('') ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING RTRIM(COUNT(*)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (RTRIM(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((RTRIM(COUNT(*))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING RTRIM(COUNT(*)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (RTRIM(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((RTRIM(COUNT(*))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (rt0.c1 IN ());
SELECT rt0.c2, rt0.c1, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (rt0.c1 IN ()) WHERE (NULL) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (rt0.c1 IN ()) WHERE ((NOT (NULL))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (rt0.c1 IN ()) WHERE (((NULL) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (rt0.c1 IN ());
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((0.11140879524673275) ISNULL)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((0.11140879524673275) ISNULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((0.11140879524673275) ISNULL)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER))||(((vt1.c0)<=(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS INTEGER))||(((vt1.c0)<=(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c0 AS INTEGER))||(((vt1.c0)<=(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING COUNT(((rt0.c2)-(rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (COUNT(((rt0.c2)-(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((COUNT(((rt0.c2)-(rt0.c1)))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING COUNT(((rt0.c2)-(rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (COUNT(((rt0.c2)-(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((COUNT(((rt0.c2)-(rt0.c1)))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c0 COLLATE RTRIM) IS FALSE)) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (((rt0.c0 COLLATE RTRIM) IS FALSE)))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((((rt0.c0 COLLATE RTRIM) IS FALSE)) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((TRIM(rt0.c1) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((TRIM(rt0.c1) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((TRIM(rt0.c1) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((~ (vt1.c0)))>>(((vt1.c0)!=(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((~ (vt1.c0)))>>(((vt1.c0)!=(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((~ (vt1.c0)))>>(((vt1.c0)!=(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0;
SELECT rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (rt0.c0 COLLATE BINARY) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (rt0.c0 COLLATE BINARY))) UNION ALL SELECT rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (((rt0.c0 COLLATE BINARY) ISNULL));
SELECT ALL rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON x'';
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON x'' WHERE ((+ (0.2581760507239963 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON x'' WHERE ((NOT ((+ (0.2581760507239963 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON x'' WHERE ((((+ (0.2581760507239963 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON x'';
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0, vt1 WHERE (((NULL)<((- (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM rt0, vt1 WHERE ((NOT (((NULL)<((- (vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM rt0, vt1 WHERE (((((NULL)<((- (vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0 HAVING UPPER(MAX(rt0.c2)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (UPPER(MAX(rt0.c2)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((UPPER(MAX(rt0.c2))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0 HAVING UPPER(MAX(rt0.c2)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (UPPER(MAX(rt0.c2)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((UPPER(MAX(rt0.c2))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT MIN(rt0.c2) FROM rt0, vt1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (x'9f7d') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (x'9f7d'))) UNION ALL SELECT * FROM rt0 WHERE (((x'9f7d') ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (COALESCE(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE x'e65c' END, rt0.c1)) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (COALESCE(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE x'e65c' END, rt0.c1)))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((COALESCE(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE x'e65c' END, rt0.c1)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((COUNT(MAX(GROUP_CONCAT(rt0.c0)))))>((CASE WHEN COUNT(*) THEN AVG(MAX(rt0.c2)) WHEN GROUP_CONCAT(SUM(TOTAL(COUNT(*)))) THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((((COUNT(MAX(GROUP_CONCAT(rt0.c0)))))>((CASE WHEN COUNT(*) THEN AVG(MAX(rt0.c2)) WHEN GROUP_CONCAT(SUM(TOTAL(COUNT(*)))) THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((((COUNT(MAX(GROUP_CONCAT(rt0.c0)))))>((CASE WHEN COUNT(*) THEN AVG(MAX(rt0.c2)) WHEN GROUP_CONCAT(SUM(TOTAL(COUNT(*)))) THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((- (rt0.c2)))IS NOT((- (rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((- (rt0.c2)))IS NOT((- (rt0.c1))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((((- (rt0.c2)))IS NOT((- (rt0.c1))))) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (((vt1.c0)<>(rt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((NOT (((vt1.c0)<>(rt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (((((vt1.c0)<>(rt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c0 IN ())) BETWEEN (CAST(rt0.c1 AS TEXT)) AND ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((NULL)))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0 IN ())) BETWEEN (CAST(rt0.c1 AS TEXT)) AND ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((NULL)))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c0 IN ())) BETWEEN (CAST(rt0.c1 AS TEXT)) AND ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((NULL)))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((SUM(rt0.c1)) NOT BETWEEN (COUNT(GROUP_CONCAT(MAX(rt0.c2)))) AND (rt0.c1)) COLLATE NOCASE UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((SUM(rt0.c1)) NOT BETWEEN (COUNT(GROUP_CONCAT(MAX(rt0.c2)))) AND (rt0.c1)) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((SUM(rt0.c1)) NOT BETWEEN (COUNT(GROUP_CONCAT(MAX(rt0.c2)))) AND (rt0.c1)) COLLATE NOCASE) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN (~ (rt0.c1)) END) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN (rt0.c2 IN ()) THEN (~ (rt0.c1)) END))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE WHEN (rt0.c2 IN ()) THEN (~ (rt0.c1)) END) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((('t')/(rt0.c2)) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT ((('t')/(rt0.c2)) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((('t')/(rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c0 FROM rt0 CROSS JOIN vt1 ON (((~ (rt0.c2))) BETWEEN (((rt0.c1)OR(''))) AND (x'')) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 CROSS JOIN vt1 ON (((~ (rt0.c2))) BETWEEN (((rt0.c1)OR(''))) AND (x'')) WHERE (((CAST(vt1.c0 AS BLOB))=(rt0.c2 COLLATE BINARY))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 CROSS JOIN vt1 ON (((~ (rt0.c2))) BETWEEN (((rt0.c1)OR(''))) AND (x'')) WHERE ((NOT (((CAST(vt1.c0 AS BLOB))==(rt0.c2 COLLATE BINARY))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 CROSS JOIN vt1 ON (((~ (rt0.c2))) BETWEEN (((rt0.c1)OR(''))) AND (x'')) WHERE (((((CAST(vt1.c0 AS BLOB))=(rt0.c2 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 CROSS JOIN vt1 ON (((~ (rt0.c2))) BETWEEN (((rt0.c1)OR(''))) AND (x'')) GROUP BY rt0.c0;
SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0 HAVING MIN(TOTAL(COUNT(SUM(MIN(rt0.c2))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MIN(TOTAL(COUNT(SUM(MIN(rt0.c2))))))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((MIN(TOTAL(COUNT(SUM(MIN(rt0.c2)))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c1)))AND(0.5921606910769931)))<(CAST(rt0.c2 AS BLOB)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((rt0.c0)OR(rt0.c1)))AND(0.5921606910769931)))<(CAST(rt0.c2 AS BLOB)))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((rt0.c0)OR(rt0.c1)))AND(0.5921606910769931)))<(CAST(rt0.c2 AS BLOB)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((vt1.c0 COLLATE BINARY IN ())) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((vt1.c0 COLLATE BINARY IN ())))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((vt1.c0 COLLATE BINARY IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE (LIKELIHOOD(LIKE(rt0.c2, rt0.c1), 0.8219961920891085)) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT (LIKELIHOOD(LIKE(rt0.c2, rt0.c1), 0.8219961920891085)))) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE (((LIKELIHOOD(LIKE(rt0.c2, rt0.c1), 0.8219961920891085)) ISNULL)) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0;
SELECT rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0 HAVING COUNT(COUNT(MAX(AVG(SUM(COUNT(rt0.c2)))))) UNION ALL SELECT ALL rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0 HAVING (NOT (COUNT(COUNT(MAX(AVG(SUM(COUNT(rt0.c2)))))))) UNION ALL SELECT rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0 HAVING ((COUNT(COUNT(MAX(AVG(SUM(COUNT(rt0.c2))))))) ISNULL);
SELECT * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE ('a&\n/6') UNION ALL SELECT * FROM rt0, vt1 NOT INDEXED WHERE ((NOT ('a&\n/6'))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((('a&\n/6') ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON CASE WHEN ((((vt1.c0)OR(rt0.c0)))OR(rt0.c2)) THEN CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END WHEN ((rt0.c0)>(rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0)) WHEN ((rt0.c1)<=(rt0.c2)) THEN CASE rt0.c0  WHEN vt1.c0 THEN 0.5916158350560501 END END;
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON CASE WHEN ((((vt1.c0)OR(rt0.c0)))OR(rt0.c2)) THEN CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END WHEN ((rt0.c0)>(rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0)) WHEN ((rt0.c1)<=(rt0.c2)) THEN CASE rt0.c0  WHEN vt1.c0 THEN 0.5916158350560501 END END WHERE (UPPER(((vt1.c0)%(rt0.c1)))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON CASE WHEN ((((vt1.c0)OR(rt0.c0)))OR(rt0.c2)) THEN CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END WHEN ((rt0.c0)>(rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0)) WHEN ((rt0.c1)<=(rt0.c2)) THEN CASE rt0.c0  WHEN vt1.c0 THEN 0.5916158350560501 END END WHERE ((NOT (UPPER(((vt1.c0)%(rt0.c1)))))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON CASE WHEN ((((vt1.c0)OR(rt0.c0)))OR(rt0.c2)) THEN CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END WHEN ((rt0.c0)>(rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0)) WHEN ((rt0.c1)<=(rt0.c2)) THEN CASE rt0.c0  WHEN vt1.c0 THEN 0.5916158350560501 END END WHERE (((UPPER(((vt1.c0)%(rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON CASE WHEN ((((vt1.c0)OR(rt0.c0)))OR(rt0.c2)) THEN CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END WHEN ((rt0.c0)>(rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0)) WHEN ((rt0.c1)<=(rt0.c2)) THEN CASE rt0.c0  WHEN vt1.c0 THEN 0.5916158350560501 END END;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0))) BETWEEN (((((vt1.c0)AND(0.41740836499679335)))OR(vt1.c0))) AND (ABS(vt1.c0)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 IN (vt1.c0))) BETWEEN (((((vt1.c0)AND(0.41740836499679335)))OR(vt1.c0))) AND (ABS(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN (vt1.c0))) BETWEEN (((((vt1.c0)AND(0.41740836499679335)))OR(vt1.c0))) AND (ABS(vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING CASE WHEN AVG(MAX(COUNT(COUNT(*)))) THEN TOTAL(vt1.c0) END UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (CASE WHEN AVG(MAX(COUNT(COUNT(*)))) THEN TOTAL(vt1.c0) END)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((CASE WHEN AVG(MAX(COUNT(COUNT(*)))) THEN TOTAL(vt1.c0) END) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(NULL AS BLOB)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST(NULL AS BLOB)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(NULL AS BLOB)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((+ (rt0.c0)) COLLATE BINARY) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((+ (rt0.c0)) COLLATE BINARY))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((((+ (rt0.c0)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2 HAVING rt0.c0 UNION ALL SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2 HAVING ((rt0.c0) ISNULL);
SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2 HAVING rt0.c0 UNION ALL SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2 HAVING ((rt0.c0) ISNULL);
SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (LOWER(DISTINCT (- (vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (LOWER(DISTINCT (- (vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((LOWER(DISTINCT (- (vt1.c0)))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS REAL)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST((vt1.c0 IN ()) AS REAL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST((vt1.c0 IN ()) AS REAL)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 NOT INDEXED WHERE (0.6312127085997853) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt1 WHERE ((NOT (0.6312127085997853))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt1 WHERE (((0.6312127085997853) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MAX(MAX(TOTAL(rt0.c1))) COLLATE RTRIM UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MAX(MAX(TOTAL(rt0.c1))) COLLATE RTRIM)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MAX(MAX(TOTAL(rt0.c1))) COLLATE RTRIM) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CASE ((-1629266970)/(vt1.c0))  WHEN json_valid(vt1.c0) THEN (vt1.c0 IN (vt1.c0)) ELSE ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) END) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CASE ((-1629266970)/(vt1.c0))  WHEN json_valid(vt1.c0) THEN (vt1.c0 IN (vt1.c0)) ELSE ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) END))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CASE ((-1629266970)/(vt1.c0))  WHEN json_valid(vt1.c0) THEN (vt1.c0 IN (vt1.c0)) ELSE ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) END) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1))>=((vt1.c0))) IN ());
SELECT DISTINCT rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1))>=((vt1.c0))) IN ()) WHERE (((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((((((((rt0.c1)OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2))) AND (CAST(rt0.c0 AS INTEGER)))) UNION SELECT DISTINCT rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1))>=((vt1.c0))) IN ()) WHERE ((NOT (((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((((((((rt0.c1)OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2))) AND (CAST(rt0.c0 AS INTEGER)))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1))>=((vt1.c0))) IN ()) WHERE (((((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((((((((rt0.c1)OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2))) AND (CAST(rt0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1))>=((vt1.c0))) IN ());
SELECT rt0.c2, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((CAST(rt0.c0 AS NUMERIC))<(((rt0.c1)*(vt1.c0)))) GROUP BY rt0.c2, vt1.c0;
SELECT rt0.c2, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((CAST(rt0.c0 AS NUMERIC))<(((rt0.c1)*(vt1.c0)))) WHERE ((((rt0.c0)) BETWEEN ((((((rt0.c1)OR(x'')))OR(rt0.c2)))) AND ((((((((((rt0.c2)AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c1)))))) GROUP BY rt0.c2, vt1.c0 UNION SELECT ALL rt0.c2, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((CAST(rt0.c0 AS NUMERIC))<(((rt0.c1)*(vt1.c0)))) WHERE ((NOT ((((rt0.c0)) BETWEEN ((((((rt0.c1)OR(x'')))OR(rt0.c2)))) AND ((((((((((rt0.c2)AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c1)))))))) GROUP BY rt0.c2, vt1.c0 UNION SELECT ALL rt0.c2, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((CAST(rt0.c0 AS NUMERIC))<(((rt0.c1)*(vt1.c0)))) WHERE ((((((rt0.c0)) BETWEEN ((((((rt0.c1)OR(x'')))OR(rt0.c2)))) AND ((((((((((rt0.c2)AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c1)))))) ISNULL)) GROUP BY rt0.c2, vt1.c0;
SELECT rt0.c2, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((CAST(rt0.c0 AS NUMERIC))<(((rt0.c1)*(vt1.c0)))) GROUP BY rt0.c2, vt1.c0;
SELECT ALL rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING ((MIN(rt0.c1))<(((rt0.c0) BETWEEN (vt1.c0) AND (AVG(AVG(GROUP_CONCAT(SUM(COUNT(*))))))))) UNION ALL SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING (NOT (((MIN(rt0.c1))<(((rt0.c0) BETWEEN (vt1.c0) AND (AVG(AVG(GROUP_CONCAT(SUM(COUNT(*))))))))))) UNION ALL SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING ((((MIN(rt0.c1))<(((rt0.c0) BETWEEN (vt1.c0) AND (AVG(AVG(GROUP_CONCAT(SUM(COUNT(*)))))))))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0, rt0.c1 FROM vt1 CROSS JOIN rt0 ON CAST(CAST('627056355' AS NUMERIC) AS INTEGER);
SELECT DISTINCT vt1.c0, rt0.c1 FROM vt1 CROSS JOIN rt0 ON CAST(CAST('627056355' AS NUMERIC) AS INTEGER) WHERE ((0.6597454781586658 IN ())) UNION SELECT DISTINCT vt1.c0, rt0.c1 FROM vt1 CROSS JOIN rt0 ON CAST(CAST('627056355' AS NUMERIC) AS INTEGER) WHERE ((NOT ((0.6597454781586658 IN ())))) UNION SELECT DISTINCT vt1.c0, rt0.c1 FROM vt1 CROSS JOIN rt0 ON CAST(CAST('627056355' AS NUMERIC) AS INTEGER) WHERE ((((0.6597454781586658 IN ())) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c1 FROM vt1 CROSS JOIN rt0 ON CAST(CAST('627056355' AS NUMERIC) AS INTEGER);
SELECT rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((((vt1.c0) ISNULL) IN ((+ (rt0.c2)), (((rt0.c0, rt0.c2, 0.6060217955046161, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, '1063130800', NULL, rt0.c2)) AND ((vt1.c0, vt1.c0, rt0.c0, vt1.c0, '1')))))) GROUP BY rt0.c0, vt1.c0 UNION SELECT rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((NOT ((((vt1.c0) ISNULL) IN ((+ (rt0.c2)), (((rt0.c0, rt0.c2, 0.6060217955046161, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, '1063130800', NULL, rt0.c2)) AND ((vt1.c0, vt1.c0, rt0.c0, vt1.c0, '1')))))))) GROUP BY rt0.c0, vt1.c0 UNION SELECT rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((((((vt1.c0) ISNULL) IN ((+ (rt0.c2)), (((rt0.c0, rt0.c2, 0.6060217955046161, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, '1063130800', NULL, rt0.c2)) AND ((vt1.c0, vt1.c0, rt0.c0, vt1.c0, '1')))))) ISNULL)) GROUP BY rt0.c0, vt1.c0;
SELECT rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((MAX(GROUP_CONCAT('vH4'))) NOTNULL) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (((MAX(GROUP_CONCAT('vH4'))) NOTNULL))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((MAX(GROUP_CONCAT('vH4'))) NOTNULL)) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (rt0.c0) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (NULL) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((rt0.c2 COLLATE RTRIM IN ())) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((NOT ((rt0.c2 COLLATE RTRIM IN ())))) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((((rt0.c2 COLLATE RTRIM IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2;
SELECT vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING ((CAST(GROUP_CONCAT(TOTAL(GROUP_CONCAT(TOTAL(rt0.c2)))) AS TEXT)) BETWEEN (SUM(rt0.c2)) AND (AVG(MIN(TOTAL(vt1.c0))))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING (NOT (((CAST(GROUP_CONCAT(TOTAL(GROUP_CONCAT(TOTAL(rt0.c2)))) AS TEXT)) BETWEEN (SUM(rt0.c2)) AND (AVG(MIN(TOTAL(vt1.c0))))))) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING ((((CAST(GROUP_CONCAT(TOTAL(GROUP_CONCAT(TOTAL(rt0.c2)))) AS TEXT)) BETWEEN (SUM(rt0.c2)) AND (AVG(MIN(TOTAL(vt1.c0)))))) ISNULL);
SELECT ALL MIN(((UPPER(NULL)) NOT BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) FROM vt1;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 END IN ())) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((CASE WHEN vt1.c0 THEN vt1.c0 END IN ())))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((CASE WHEN vt1.c0 THEN vt1.c0 END IN ())) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c0 IN ()))/(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0 IN ()))/(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c0 IN ()))/(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((+ (x'aafe')))GLOB(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((+ (x'aafe')))GLOB(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((+ (x'aafe')))GLOB(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON rt0.c1 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON rt0.c1 GROUP BY rt0.c0 HAVING MIN((NOT (vt1.c0))) UNION ALL SELECT rt0.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON rt0.c1 GROUP BY rt0.c0 HAVING (NOT (MIN((NOT (vt1.c0))))) UNION ALL SELECT rt0.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON rt0.c1 GROUP BY rt0.c0 HAVING ((MIN((NOT (vt1.c0)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON rt0.c1 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON rt0.c1 GROUP BY rt0.c0 HAVING MIN((NOT (vt1.c0))) UNION ALL SELECT rt0.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON rt0.c1 GROUP BY rt0.c0 HAVING (NOT (MIN((NOT (vt1.c0))))) UNION ALL SELECT rt0.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON rt0.c1 GROUP BY rt0.c0 HAVING ((MIN((NOT (vt1.c0)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON rt0.c1 GROUP BY rt0.c0;
SELECT * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE (((((rt0.c2)IS NOT(rt0.c1))) BETWEEN (((rt0.c2)IS NOT(rt0.c0))) AND (((rt0.c0)<<(rt0.c2))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (((((rt0.c2)IS NOT(rt0.c1))) BETWEEN (((rt0.c2)IS NOT(rt0.c0))) AND (((rt0.c0)<<(rt0.c2))))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE (((((((rt0.c2)IS NOT(rt0.c1))) BETWEEN (((rt0.c2)IS NOT(rt0.c0))) AND (((rt0.c0)<<(rt0.c2))))) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE (((rt0.c0)LIKE(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c0)LIKE(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)LIKE(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c2 AS REAL))<(((0.7617048191816937) BETWEEN (rt0.c0) AND (rt0.c1))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS REAL))<(((0.7617048191816937) BETWEEN (rt0.c0) AND (rt0.c1))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((CAST(rt0.c2 AS REAL))<(((0.7617048191816937) BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING SUM((rt0.c2 IN (GROUP_CONCAT(0x1d74484)))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING (NOT (SUM((rt0.c2 IN (GROUP_CONCAT(0X1d74484)))))) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING ((SUM((rt0.c2 IN (GROUP_CONCAT(0X1d74484))))) ISNULL);
SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0;
SELECT vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (CASE WHEN ((rt0.c1) NOTNULL) THEN rt0.c1 WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c0)<<(rt0.c1)) WHEN CAST(rt0.c1 AS INTEGER) THEN ((vt1.c0)|(rt0.c1)) END) UNION ALL SELECT vt1.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (CASE WHEN ((rt0.c1) NOTNULL) THEN rt0.c1 WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c0)<<(rt0.c1)) WHEN CAST(rt0.c1 AS INTEGER) THEN ((vt1.c0)|(rt0.c1)) END))) UNION ALL SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (((CASE WHEN ((rt0.c1) NOTNULL) THEN rt0.c1 WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c0)<<(rt0.c1)) WHEN CAST(rt0.c1 AS INTEGER) THEN ((vt1.c0)|(rt0.c1)) END) ISNULL));
SELECT ALL vt1.c0, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 NOT INDEXED WHERE (((((rt0.c2) NOTNULL))<=(TYPEOF(DISTINCT rt0.c0)))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (((((rt0.c2) NOTNULL))<=(TYPEOF(DISTINCT rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((((((rt0.c2) NOTNULL))<=(TYPEOF(DISTINCT rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT vt1.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON (((~ (vt1.c0)))|((((rt0.c2))=((rt0.c0))))) GROUP BY vt1.c0, rt0.c1, rt0.c0;
SELECT vt1.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON (((~ (vt1.c0)))|((((rt0.c2))==((rt0.c0))))) WHERE (((((vt1.c0)<<(rt0.c2)))/(TRIM(rt0.c1)))) GROUP BY vt1.c0, rt0.c1, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON (((~ (vt1.c0)))|((((rt0.c2))==((rt0.c0))))) WHERE ((NOT (((((vt1.c0)<<(rt0.c2)))/(TRIM(rt0.c1)))))) GROUP BY vt1.c0, rt0.c1, rt0.c0 UNION SELECT vt1.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON (((~ (vt1.c0)))|((((rt0.c2))=((rt0.c0))))) WHERE (((((((vt1.c0)<<(rt0.c2)))/(TRIM(rt0.c1)))) ISNULL)) GROUP BY vt1.c0, rt0.c1, rt0.c0;
SELECT vt1.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON (((~ (vt1.c0)))|((((rt0.c2))=((rt0.c0))))) GROUP BY vt1.c0, rt0.c1, rt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(COUNT(SUM(vt1.c0)) COLLATE NOCASE) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(COUNT(SUM(vt1.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(COUNT(SUM(vt1.c0)) COLLATE NOCASE)) ISNULL);
SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0;
SELECT rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((((rt0.c0, '-787339486', rt0.c2)) NOT BETWEEN (((((rt0.c0))==((rt0.c1))), (rt0.c0 IN ()), ((rt0.c0)|(0.39663215992811374)))) AND ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END, (rt0.c0 IN ()), ((rt0.c0)>=(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((NOT ((((rt0.c0, '-787339486', rt0.c2)) NOT BETWEEN (((((rt0.c0))==((rt0.c1))), (rt0.c0 IN ()), ((rt0.c0)|(0.39663215992811374)))) AND ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END, (rt0.c0 IN ()), ((rt0.c0)>=(rt0.c0)))))))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((((((rt0.c0, '-787339486', rt0.c2)) NOT BETWEEN (((((rt0.c0))=((rt0.c1))), (rt0.c0 IN ()), ((rt0.c0)|(0.39663215992811374)))) AND ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END, (rt0.c0 IN ()), ((rt0.c0)>=(rt0.c0)))))) ISNULL));
SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (CASE WHEN CAST(vt1.c0 AS REAL) THEN CASE WHEN rt0.c0 THEN 0.06758484157496447 END ELSE '-1051443703' END) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (CASE WHEN CAST(vt1.c0 AS REAL) THEN CASE WHEN rt0.c0 THEN 0.06758484157496447 END ELSE '-1051443703' END))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((CASE WHEN CAST(vt1.c0 AS REAL) THEN CASE WHEN rt0.c0 THEN 0.06758484157496447 END ELSE '-1051443703' END) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0 CROSS JOIN vt1 ON (((((((((~ (vt1.c0)))OR(((rt0.c2) NOTNULL))))AND(((rt0.c0)IS NOT(rt0.c2)))))AND(((rt0.c0) IS FALSE))))AND(x'')) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0 CROSS JOIN vt1 ON (((((((((~ (vt1.c0)))OR(((rt0.c2) NOTNULL))))AND(((rt0.c0)IS NOT(rt0.c2)))))AND(((rt0.c0) IS FALSE))))AND(x'')) WHERE ((((vt1.c0)) BETWEEN ((IFNULL(DISTINCT rt0.c1, vt1.c0))) AND ((((((rt0.c1)OR(rt0.c2)))AND(x'')))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0 CROSS JOIN vt1 ON (((((((((~ (vt1.c0)))OR(((rt0.c2) NOTNULL))))AND(((rt0.c0)IS NOT(rt0.c2)))))AND(((rt0.c0) IS FALSE))))AND(x'')) WHERE ((NOT ((((vt1.c0)) BETWEEN ((IFNULL(DISTINCT rt0.c1, vt1.c0))) AND ((((((rt0.c1)OR(rt0.c2)))AND(x'')))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0 CROSS JOIN vt1 ON (((((((((~ (vt1.c0)))OR(((rt0.c2) NOTNULL))))AND(((rt0.c0)IS NOT(rt0.c2)))))AND(((rt0.c0) IS FALSE))))AND(x'')) WHERE ((((((vt1.c0)) BETWEEN ((IFNULL(DISTINCT rt0.c1, vt1.c0))) AND ((((((rt0.c1)OR(rt0.c2)))AND(x'')))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0 CROSS JOIN vt1 ON (((((((((~ (vt1.c0)))OR(((rt0.c2) NOTNULL))))AND(((rt0.c0)IS NOT(rt0.c2)))))AND(((rt0.c0) IS FALSE))))AND(x'')) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0;
SELECT ALL rt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON ((((rt0.c1, rt0.c0, vt1.c0))==((rt0.c1, vt1.c0, vt1.c0))) IN ()) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON ((((rt0.c1, rt0.c0, vt1.c0))==((rt0.c1, vt1.c0, vt1.c0))) IN ()) GROUP BY rt0.c0, rt0.c1 HAVING '' UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON ((((rt0.c1, rt0.c0, vt1.c0))==((rt0.c1, vt1.c0, vt1.c0))) IN ()) GROUP BY rt0.c0, rt0.c1 HAVING (NOT ('')) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON ((((rt0.c1, rt0.c0, vt1.c0))==((rt0.c1, vt1.c0, vt1.c0))) IN ()) GROUP BY rt0.c0, rt0.c1 HAVING (('') ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON ((((rt0.c1, rt0.c0, vt1.c0))==((rt0.c1, vt1.c0, vt1.c0))) IN ()) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON ((((rt0.c1, rt0.c0, vt1.c0))==((rt0.c1, vt1.c0, vt1.c0))) IN ()) GROUP BY rt0.c0, rt0.c1 HAVING '' UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON ((((rt0.c1, rt0.c0, vt1.c0))==((rt0.c1, vt1.c0, vt1.c0))) IN ()) GROUP BY rt0.c0, rt0.c1 HAVING (NOT ('')) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON ((((rt0.c1, rt0.c0, vt1.c0))==((rt0.c1, vt1.c0, vt1.c0))) IN ()) GROUP BY rt0.c0, rt0.c1 HAVING (('') ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON ((((rt0.c1, rt0.c0, vt1.c0))==((rt0.c1, vt1.c0, vt1.c0))) IN ()) GROUP BY rt0.c0, rt0.c1;
SELECT ALL MIN((- (CAST(rt0.c0 AS REAL)))) FROM rt0 ORDER BY CASE (rt0.c0 IN ())  WHEN ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)) THEN (((rt0.c0))>((rt0.c1))) WHEN (rt0.c1 IN ()) THEN ((rt0.c2)/(rt0.c1)) WHEN ((rt0.c1)LIKE(rt0.c0)) THEN CAST(rt0.c2 AS BLOB) END  NULLS LAST, (- (rt0.c0)) DESC  NULLS FIRST;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN (TRIM(DISTINCT NULL, vt1.c0)) AND (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE NOCASE) BETWEEN (TRIM(DISTINCT NULL, vt1.c0)) AND (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((vt1.c0 COLLATE NOCASE) BETWEEN (TRIM(DISTINCT NULL, vt1.c0)) AND (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))=(CAST('0.18020118440426947' AS TEXT)))) GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0 UNION SELECT rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1 NOT INDEXED, rt0 WHERE ((NOT ((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))==(CAST('0.18020118440426947' AS TEXT)))))) GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0 UNION SELECT rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))=(CAST('0.18020118440426947' AS TEXT)))) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0;
SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c1)!=(rt0.c2)) THEN rt0.c1 COLLATE NOCASE WHEN rt0.c2 THEN (- (vt1.c0)) WHEN CAST(x'0e5a' AS BLOB) THEN -309397233 WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN '[)mIv' WHEN rt0.c0 THEN ROUND(vt1.c0, x'') END GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c1)!=(rt0.c2)) THEN rt0.c1 COLLATE NOCASE WHEN rt0.c2 THEN (- (vt1.c0)) WHEN CAST(x'0e5a' AS BLOB) THEN -309397233 WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN '[)mIv' WHEN rt0.c0 THEN ROUND(vt1.c0, x'') END GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING ((TOTAL(SUM(rt0.c0)))<(COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c1)<>(rt0.c2)) THEN rt0.c1 COLLATE NOCASE WHEN rt0.c2 THEN (- (vt1.c0)) WHEN CAST(x'0e5a' AS BLOB) THEN -309397233 WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN '[)mIv' WHEN rt0.c0 THEN ROUND(vt1.c0, x'') END GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING (NOT (((TOTAL(SUM(rt0.c0)))<(COUNT(*))))) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c1)<>(rt0.c2)) THEN rt0.c1 COLLATE NOCASE WHEN rt0.c2 THEN (- (vt1.c0)) WHEN CAST(x'0e5a' AS BLOB) THEN -309397233 WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN '[)mIv' WHEN rt0.c0 THEN ROUND(vt1.c0, x'') END GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING ((((TOTAL(SUM(rt0.c0)))<(COUNT(*)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt1 ON CASE rt0.c2 COLLATE NOCASE  WHEN ((rt0.c1)AND(rt0.c2)) THEN (vt1.c0 IN (rt0.c2)) WHEN ((rt0.c2)==(rt0.c2)) THEN rt0.c0 WHEN (rt0.c1 IN ()) THEN (NOT (vt1.c0)) END;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt1 ON CASE rt0.c2 COLLATE NOCASE  WHEN ((rt0.c1)AND(rt0.c2)) THEN (vt1.c0 IN (rt0.c2)) WHEN ((rt0.c2)==(rt0.c2)) THEN rt0.c0 WHEN (rt0.c1 IN ()) THEN (NOT (vt1.c0)) END WHERE (((CAST(rt0.c0 AS REAL))IS((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt1 ON CASE rt0.c2 COLLATE NOCASE  WHEN ((rt0.c1)AND(rt0.c2)) THEN (vt1.c0 IN (rt0.c2)) WHEN ((rt0.c2)=(rt0.c2)) THEN rt0.c0 WHEN (rt0.c1 IN ()) THEN (NOT (vt1.c0)) END WHERE ((NOT (((CAST(rt0.c0 AS REAL))IS((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt1 ON CASE rt0.c2 COLLATE NOCASE  WHEN ((rt0.c1)AND(rt0.c2)) THEN (vt1.c0 IN (rt0.c2)) WHEN ((rt0.c2)=(rt0.c2)) THEN rt0.c0 WHEN (rt0.c1 IN ()) THEN (NOT (vt1.c0)) END WHERE (((((CAST(rt0.c0 AS REAL))IS((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt1 ON CASE rt0.c2 COLLATE NOCASE  WHEN ((rt0.c1)AND(rt0.c2)) THEN (vt1.c0 IN (rt0.c2)) WHEN ((rt0.c2)==(rt0.c2)) THEN rt0.c0 WHEN (rt0.c1 IN ()) THEN (NOT (vt1.c0)) END;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0;
SELECT rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING MIN(((rt0.c0) NOT NULL)) UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING (NOT (MIN(((rt0.c0) NOT NULL)))) UNION ALL SELECT rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING ((MIN(((rt0.c0) NOT NULL))) ISNULL);
SELECT rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0;
SELECT rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING MIN(((rt0.c0) NOT NULL)) UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING (NOT (MIN(((rt0.c0) NOT NULL)))) UNION ALL SELECT rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING ((MIN(((rt0.c0) NOT NULL))) ISNULL);
SELECT rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0;
SELECT MAX(((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))OR(CASE rt0.c0  WHEN '1545332468' THEN rt0.c1 ELSE vt1.c0 END)))OR(((rt0.c2)IS NOT(rt0.c1))))) FROM rt0, vt1 ORDER BY ((((5.48196506E8)-(rt0.c0)))>(((rt0.c0)-(vt1.c0)))) ASC;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c2)>>(((rt0.c1) IS FALSE)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2)>>(((rt0.c1) IS FALSE)))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c2)>>(((rt0.c1) IS FALSE)))) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((x'')AND(x'')))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((x'')AND(x'')))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((x'')AND(x'')))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt1 WHERE (((((((-1111097843)AND(rt0.c2)))AND(rt0.c2))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (json_array(vt1.c0, rt0.c0, rt0.c0, rt0.c1)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt1 WHERE ((NOT (((((((-1111097843)AND(rt0.c2)))AND(rt0.c2))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (json_array(vt1.c0, rt0.c0, rt0.c0, rt0.c1)))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt1 WHERE (((((((((-1111097843)AND(rt0.c2)))AND(rt0.c2))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (json_array(vt1.c0, rt0.c0, rt0.c0, rt0.c1)))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING ((((TOTAL(COUNT(vt1.c0)))>(SUM(COUNT(rt0.c1))))) BETWEEN (IFNULL(x'', rt0.c2)) AND (((((((((x'')AND(MIN(COUNT(*)))))OR(SUM(SUM(MAX(COUNT(COUNT(COUNT(rt0.c0)))))))))AND(AVG(TOTAL(SUM(rt0.c2))))))AND(0.031036905568999074)))) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING (NOT (((((TOTAL(COUNT(vt1.c0)))>(SUM(COUNT(rt0.c1))))) BETWEEN (IFNULL(x'', rt0.c2)) AND (((((((((x'')AND(MIN(COUNT(*)))))OR(SUM(SUM(MAX(COUNT(COUNT(COUNT(rt0.c0)))))))))AND(AVG(TOTAL(SUM(rt0.c2))))))AND(0.031036905568999074)))))) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING ((((((TOTAL(COUNT(vt1.c0)))>(SUM(COUNT(rt0.c1))))) BETWEEN (IFNULL(x'', rt0.c2)) AND (((((((((x'')AND(MIN(COUNT(*)))))OR(SUM(SUM(MAX(COUNT(COUNT(COUNT(rt0.c0)))))))))AND(AVG(TOTAL(SUM(rt0.c2))))))AND(0.031036905568999074))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) NOT NULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE BINARY) NOT NULL)))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c2 COLLATE BINARY) NOT NULL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0) NOTNULL) AS NUMERIC)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0) NOTNULL) AS NUMERIC)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0) NOTNULL) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0;
SELECT rt0.c1, vt1.c0 FROM vt1, rt0 WHERE (CAST((NOT (rt0.c0)) AS NUMERIC)) GROUP BY rt0.c1, vt1.c0 UNION SELECT ALL rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((NOT (CAST((NOT (rt0.c0)) AS NUMERIC)))) GROUP BY rt0.c1, vt1.c0 UNION SELECT ALL rt0.c1, vt1.c0 FROM vt1, rt0 WHERE (((CAST((NOT (rt0.c0)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c1, vt1.c0;
SELECT ALL rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0;
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(NULL) UNION ALL SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(NULL))) UNION ALL SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(NULL)) ISNULL);
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(NULL) UNION ALL SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(NULL))) UNION ALL SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(NULL)) ISNULL);
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (rt0.c1) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c1) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((~ (((((rt0.c2)OR(vt1.c0)))AND(0.8215442168179228))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((~ (((((rt0.c2)OR(vt1.c0)))AND(0.8215442168179228))))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((~ (((((rt0.c2)OR(vt1.c0)))AND(0.8215442168179228))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt1 WHERE (rt0.c2 COLLATE NOCASE) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt1 WHERE ((NOT (rt0.c2 COLLATE NOCASE))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt1 WHERE (((rt0.c2 COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING DATETIME(COUNT(*), (((rt0.c0))>((SUM(MAX(SUM(rt0.c0)))))), ((rt0.c1)GLOB(SUM(rt0.c2)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (DATETIME(COUNT(*), (((rt0.c0))>((SUM(MAX(SUM(rt0.c0)))))), ((rt0.c1)GLOB(SUM(rt0.c2)))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((DATETIME(COUNT(*), (((rt0.c0))>((SUM(MAX(SUM(rt0.c0)))))), ((rt0.c1)GLOB(SUM(rt0.c2))))) ISNULL);
SELECT SUM(vt1.c0) FROM vt1;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(((vt1.c0)!=(NULL)))))AND(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(((vt1.c0)<>(NULL)))))AND(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(((vt1.c0)!=(NULL)))))AND(vt1.c0))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE ((((((rt0.c1) IS FALSE), ((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0)), SUBSTR('-692241010', rt0.c2)))<((vt1.c0, ((rt0.c2)IS(vt1.c0)), rt0.c0 COLLATE BINARY)))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT ((((((rt0.c1) IS FALSE), ((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0)), SUBSTR('-692241010', rt0.c2)))<((vt1.c0, ((rt0.c2)IS(vt1.c0)), rt0.c0 COLLATE BINARY)))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((((((((rt0.c1) IS FALSE), ((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0)), SUBSTR('-692241010', rt0.c2)))<((vt1.c0, ((rt0.c2)IS(vt1.c0)), rt0.c0 COLLATE BINARY)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((((NOT (vt1.c0)))AND(CAST(vt1.c0 AS BLOB))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR(((((vt1.c0)AND(vt1.c0)))AND(0.40722725911954183)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((((((NOT (vt1.c0)))AND(CAST(vt1.c0 AS BLOB))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR(((((vt1.c0)AND(vt1.c0)))AND(0.40722725911954183)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((((((NOT (vt1.c0)))AND(CAST(vt1.c0 AS BLOB))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR(((((vt1.c0)AND(vt1.c0)))AND(0.40722725911954183)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1 INNER JOIN rt0 ON ((((vt1.c0))==((rt0.c1))) IN (((rt0.c2)==(vt1.c0)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1 INNER JOIN rt0 ON ((((vt1.c0))=((rt0.c1))) IN (((rt0.c2)==(vt1.c0)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 HAVING ((CASE WHEN rt0.c0 THEN MAX(rt0.c1) END)AND(((vt1.c0) IS FALSE))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1 INNER JOIN rt0 ON ((((vt1.c0))==((rt0.c1))) IN (((rt0.c2)==(vt1.c0)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 HAVING (NOT (((CASE WHEN rt0.c0 THEN MAX(rt0.c1) END)AND(((vt1.c0) IS FALSE))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1 INNER JOIN rt0 ON ((((vt1.c0))=((rt0.c1))) IN (((rt0.c2)=(vt1.c0)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 HAVING ((((CASE WHEN rt0.c0 THEN MAX(rt0.c1) END)AND(((vt1.c0) IS FALSE)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1 INNER JOIN rt0 ON ((((vt1.c0))==((rt0.c1))) IN (((rt0.c2)==(vt1.c0)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1 INNER JOIN rt0 ON ((((vt1.c0))=((rt0.c1))) IN (((rt0.c2)==(vt1.c0)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 HAVING ((CASE WHEN rt0.c0 THEN MAX(rt0.c1) END)AND(((vt1.c0) IS FALSE))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1 INNER JOIN rt0 ON ((((vt1.c0))==((rt0.c1))) IN (((rt0.c2)==(vt1.c0)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 HAVING (NOT (((CASE WHEN rt0.c0 THEN MAX(rt0.c1) END)AND(((vt1.c0) IS FALSE))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1 INNER JOIN rt0 ON ((((vt1.c0))=((rt0.c1))) IN (((rt0.c2)=(vt1.c0)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 HAVING ((((CASE WHEN rt0.c0 THEN MAX(rt0.c1) END)AND(((vt1.c0) IS FALSE)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1 INNER JOIN rt0 ON ((((vt1.c0))==((rt0.c1))) IN (((rt0.c2)==(vt1.c0)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)) IN ());
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)) IN ()) WHERE ((((((rt0.c2))!=((rt0.c2))))<<(CAST(rt0.c2 AS INTEGER)))) UNION ALL SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)) IN ()) WHERE ((NOT ((((((rt0.c2))!=((rt0.c2))))<<(CAST(rt0.c2 AS INTEGER)))))) UNION ALL SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)) IN ()) WHERE ((((((((rt0.c2))!=((rt0.c2))))<<(CAST(rt0.c2 AS INTEGER)))) ISNULL));
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)) IN ());
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((+ (vt1.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((+ (vt1.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((+ (vt1.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((NULL) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))) AND ((rt0.c1 IN ())))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((NULL) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))) AND ((rt0.c1 IN ())))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((NULL) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))) AND ((rt0.c1 IN ())))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING TOTAL(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(SUM(GROUP_CONCAT(TOTAL(rt0.c0))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (TOTAL(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(SUM(GROUP_CONCAT(TOTAL(rt0.c0))))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((TOTAL(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(SUM(GROUP_CONCAT(TOTAL(rt0.c0)))))))) ISNULL);
SELECT ALL MAX(((((((((TRIM(DISTINCT rt0.c1))OR(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))AND((+ (rt0.c0)))))OR(rt0.c0 COLLATE BINARY)))OR(vt1.c0))) FROM vt1, rt0;
SELECT ALL rt0.c1 FROM rt0, vt1;
SELECT rt0.c1 FROM rt0, vt1 WHERE (((((rt0.c1)>=(vt1.c0))) IS FALSE)) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt1 WHERE ((NOT (((((rt0.c1)>=(vt1.c0))) IS FALSE)))) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt1 WHERE (((((((rt0.c1)>=(vt1.c0))) IS FALSE)) ISNULL));
SELECT ALL rt0.c1 FROM rt0, vt1;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (json_type(((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (json_type(((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((json_type(((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE (vt1.c0 IN ())  WHEN ((vt1.c0)+(vt1.c0)) THEN ((vt1.c0)<(vt1.c0)) ELSE ABS(vt1.c0) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE (vt1.c0 IN ())  WHEN ((vt1.c0)+(vt1.c0)) THEN ((vt1.c0)<(vt1.c0)) ELSE ABS(vt1.c0) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE (vt1.c0 IN ())  WHEN ((vt1.c0)+(vt1.c0)) THEN ((vt1.c0)<(vt1.c0)) ELSE ABS(vt1.c0) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY vt1.c0 HAVING ((((((((MIN(AVG(COUNT(COUNT(rt0.c1)))))AND(MIN(rt0.c0) COLLATE RTRIM)))AND(((TOTAL(rt0.c1)) BETWEEN (rt0.c2) AND (COUNT(*))))))AND(LTRIM(TOTAL(AVG(vt1.c0))))))OR(CAST(rt0.c1 AS NUMERIC))) UNION ALL SELECT vt1.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY vt1.c0 HAVING (NOT (((((((((MIN(AVG(COUNT(COUNT(rt0.c1)))))AND(MIN(rt0.c0) COLLATE RTRIM)))AND(((TOTAL(rt0.c1)) BETWEEN (rt0.c2) AND (COUNT(*))))))AND(LTRIM(TOTAL(AVG(vt1.c0))))))OR(CAST(rt0.c1 AS NUMERIC))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY vt1.c0 HAVING ((((((((((MIN(AVG(COUNT(COUNT(rt0.c1)))))AND(MIN(rt0.c0) COLLATE RTRIM)))AND(((TOTAL(rt0.c1)) BETWEEN (rt0.c2) AND (COUNT(*))))))AND(LTRIM(TOTAL(AVG(vt1.c0))))))OR(CAST(rt0.c1 AS NUMERIC)))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) IS TRUE))AND(((vt1.c0) IS FALSE)))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((vt1.c0) IS TRUE))AND(((vt1.c0) IS FALSE)))))) UNION ALL SELECT * FROM vt1 WHERE (((((((vt1.c0) IS TRUE))AND(((vt1.c0) IS FALSE)))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (TRIM(DISTINCT CASE vt1.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c1)==(rt0.c0)))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (TRIM(DISTINCT CASE vt1.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c1)=(rt0.c0)))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((TRIM(DISTINCT CASE vt1.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c1)=(rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c1 IN ())) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (CAST(rt0.c2 AS INTEGER)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1 IN ())) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (CAST(rt0.c2 AS INTEGER)))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c1 IN ())) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (CAST(rt0.c2 AS INTEGER)))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0 COLLATE BINARY)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((NOT (vt1.c0 COLLATE BINARY)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((NOT (vt1.c0 COLLATE BINARY))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0 COLLATE BINARY)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((NOT (vt1.c0 COLLATE BINARY)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((NOT (vt1.c0 COLLATE BINARY))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE (((((rt0.c2)||(rt0.c2))) IS FALSE)) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((NOT (((((rt0.c2)||(rt0.c2))) IS FALSE)))) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE (((((((rt0.c2)||(rt0.c2))) IS FALSE)) ISNULL));
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c0) IS FALSE) IN ())) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0) IS FALSE) IN ())))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c0) IS FALSE) IN ())) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 0.14184420848424073 THEN vt1.c0 WHEN 0.4346361824723749 THEN vt1.c0 ELSE vt1.c0 END)AND((- (vt1.c0)))))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 0.14184420848424073 THEN vt1.c0 WHEN 0.4346361824723749 THEN vt1.c0 ELSE vt1.c0 END)AND((- (vt1.c0)))))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 0.14184420848424073 THEN vt1.c0 WHEN 0.4346361824723749 THEN vt1.c0 ELSE vt1.c0 END)AND((- (vt1.c0)))))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(COUNT(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(COUNT(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(COUNT(vt1.c0))) ISNULL);
SELECT * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (((((rt0.c2)<>(vt1.c0))) IS TRUE)) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (((((rt0.c2)<>(vt1.c0))) IS TRUE)))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((((((rt0.c2)<>(vt1.c0))) IS TRUE)) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0)<<(rt0.c1)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c0)<<(rt0.c1)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)<<(rt0.c1)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c0)+(rt0.c2)))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))OR((-787339486 IN ())))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c0)+(rt0.c2)))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))OR((-787339486 IN ())))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((rt0.c0)+(rt0.c2)))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))OR((-787339486 IN ())))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((~ (vt1.c0)))!=(AVG(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((~ (vt1.c0)))!=(AVG(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((~ (vt1.c0)))<>(AVG(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((~ (vt1.c0)))!=(AVG(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((~ (vt1.c0)))!=(AVG(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((~ (vt1.c0)))<>(AVG(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1;
SELECT ALL vt1.c0 FROM rt0, vt1 WHERE (CAST((((rt0.c2, vt1.c0, rt0.c1, x'db9c', NULL, vt1.c0, rt0.c2)) BETWEEN ((rt0.c0, vt1.c0, rt0.c1, rt0.c2, vt1.c0, vt1.c0, rt0.c1)) AND ((rt0.c2, rt0.c0, vt1.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c0))) AS BLOB)) UNION ALL SELECT vt1.c0 FROM rt0, vt1 WHERE ((NOT (CAST((((rt0.c2, vt1.c0, rt0.c1, x'db9c', NULL, vt1.c0, rt0.c2)) BETWEEN ((rt0.c0, vt1.c0, rt0.c1, rt0.c2, vt1.c0, vt1.c0, rt0.c1)) AND ((rt0.c2, rt0.c0, vt1.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c0))) AS BLOB)))) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt1 WHERE (((CAST((((rt0.c2, vt1.c0, rt0.c1, x'db9c', NULL, vt1.c0, rt0.c2)) BETWEEN ((rt0.c0, vt1.c0, rt0.c1, rt0.c2, vt1.c0, vt1.c0, rt0.c1)) AND ((rt0.c2, rt0.c0, vt1.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c0))) AS BLOB)) ISNULL));
SELECT ALL vt1.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (((((rt0.c2 COLLATE BINARY)OR(((rt0.c0)/(rt0.c2)))))OR(rt0.c2))) UNION SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (((((rt0.c2 COLLATE BINARY)OR(((rt0.c0)/(rt0.c2)))))OR(rt0.c2))))) UNION SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (((((((rt0.c2 COLLATE BINARY)OR(((rt0.c0)/(rt0.c2)))))OR(rt0.c2))) ISNULL));
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)OR(vt1.c0)))OR(NULL))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((NOT (((((vt1.c0)OR(vt1.c0)))OR(NULL))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((NOT (((((vt1.c0)OR(vt1.c0)))OR(NULL))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((vt1.c0 IN ()))<(COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((vt1.c0 IN ()))<(COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((vt1.c0 IN ()))<(COUNT(*)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((vt1.c0 IN ()))<(COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((vt1.c0 IN ()))<(COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((vt1.c0 IN ()))<(COUNT(*)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (x'') UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (x''))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((x'') ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE ((((x''))!=((rt0.c1)))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT ((((x''))!=((rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((((((x''))!=((rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (x'') AND (rt0.c2))) NOT BETWEEN ((rt0.c2 IN (rt0.c2))) AND (((rt0.c2)<<(rt0.c1))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (x'') AND (rt0.c2))) NOT BETWEEN ((rt0.c2 IN (rt0.c2))) AND (((rt0.c2)<<(rt0.c1))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (x'') AND (rt0.c2))) NOT BETWEEN ((rt0.c2 IN (rt0.c2))) AND (((rt0.c2)<<(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1 HAVING MAX(((rt0.c2)/(MIN(TOTAL(GROUP_CONCAT(MIN(MIN(rt0.c2)))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1 HAVING (NOT (MAX(((rt0.c2)/(MIN(TOTAL(GROUP_CONCAT(MIN(MIN(rt0.c2)))))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1 HAVING ((MAX(((rt0.c2)/(MIN(TOTAL(GROUP_CONCAT(MIN(MIN(rt0.c2))))))))) ISNULL);
SELECT * FROM rt0, vt1 NOT INDEXED;
SELECT * FROM rt0, vt1 WHERE (((('-1343441209'))<=((((vt1.c0) IS TRUE))))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (((('-1343441209'))<=((((vt1.c0) IS TRUE))))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((((('-1343441209'))<=((((vt1.c0) IS TRUE))))) ISNULL));
SELECT * FROM rt0, vt1 NOT INDEXED;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((((((rt0.c1)-(rt0.c1))))<>((((rt0.c0) IS FALSE))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((((((rt0.c1)-(rt0.c1))))!=((((rt0.c0) IS FALSE))))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((((((rt0.c1)-(rt0.c1))))!=((((rt0.c0) IS FALSE))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((~ (((0.46849276581026866)IS(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((~ (((0.46849276581026866)IS(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((~ (((0.46849276581026866)IS(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((CAST(AVG(rt0.c1) AS NUMERIC))|(SUM(rt0.c2))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((CAST(AVG(rt0.c1) AS NUMERIC))|(SUM(rt0.c2))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((CAST(AVG(rt0.c1) AS NUMERIC))|(SUM(rt0.c2)))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((CAST(AVG(rt0.c1) AS NUMERIC))|(SUM(rt0.c2))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((CAST(AVG(rt0.c1) AS NUMERIC))|(SUM(rt0.c2))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((CAST(AVG(rt0.c1) AS NUMERIC))|(SUM(rt0.c2)))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT ((+ (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT ((NOT ((+ (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((((NOT ((+ (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((((CAST(rt0.c0 AS TEXT)))<((CAST(NULL AS NUMERIC))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((NOT ((((CAST(rt0.c0 AS TEXT)))<((CAST(NULL AS NUMERIC))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((((((CAST(rt0.c0 AS TEXT)))<((CAST(NULL AS NUMERIC))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt1 WHERE (CAST(CAST(rt0.c0 AS INTEGER) AS TEXT)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT (CAST(CAST(rt0.c0 AS INTEGER) AS TEXT)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, vt1 WHERE (((CAST(CAST(rt0.c0 AS INTEGER) AS TEXT)) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0 FROM rt0 NATURAL JOIN vt1;
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0 FROM rt0 NATURAL JOIN vt1 WHERE (((((vt1.c0) NOTNULL)) BETWEEN ((~ (vt1.c0))) AND (COALESCE(DISTINCT '', rt0.c0, rt0.c2, rt0.c0, 'W)Ecg-{hG', vt1.c0)))) UNION SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0 FROM rt0 NATURAL JOIN vt1 WHERE ((NOT (((((vt1.c0) NOTNULL)) BETWEEN ((~ (vt1.c0))) AND (COALESCE(DISTINCT '', rt0.c0, rt0.c2, rt0.c0, 'W)Ecg-{hG', vt1.c0)))))) UNION SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0 FROM rt0 NATURAL JOIN vt1 WHERE (((((((vt1.c0) NOTNULL)) BETWEEN ((~ (vt1.c0))) AND (COALESCE(DISTINCT '', rt0.c0, rt0.c2, rt0.c0, 'W)Ecg-{hG', vt1.c0)))) ISNULL));
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0 FROM rt0 NATURAL JOIN vt1;
SELECT ALL rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1, rt0 WHERE (TYPEOF(DISTINCT ((((vt1.c0)AND(rt0.c1)))OR(vt1.c0)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt1, rt0 WHERE ((NOT (TYPEOF(DISTINCT ((((vt1.c0)AND(rt0.c1)))OR(vt1.c0)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt1, rt0 WHERE (((TYPEOF(DISTINCT ((((vt1.c0)AND(rt0.c1)))OR(vt1.c0)))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING MAX(COUNT(GROUP_CONCAT(rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (MAX(COUNT(GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((MAX(COUNT(GROUP_CONCAT(rt0.c0)))) ISNULL);
SELECT * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE ((((SQLITE_VERSION()))=((((rt0.c2) IS TRUE))))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT ((((SQLITE_VERSION()))=((((rt0.c2) IS TRUE))))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((((((SQLITE_VERSION()))=((((rt0.c2) IS TRUE))))) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((rt0.c1))>((rt0.c1))) COLLATE BINARY) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1))>((rt0.c1))) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((rt0.c1))>((rt0.c1))) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0;
SELECT rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (((((rt0.c0)<>(0xffffffff911989f2))) BETWEEN ((+ (rt0.c1))) AND (((rt0.c2)%(rt0.c0))))) GROUP BY rt0.c0, vt1.c0 UNION SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((NOT (((((rt0.c0)<>(0Xffffffff911989f2))) BETWEEN ((+ (rt0.c1))) AND (((rt0.c2)%(rt0.c0))))))) GROUP BY rt0.c0, vt1.c0 UNION SELECT rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (((((((rt0.c0)<>(0xffffffff911989f2))) BETWEEN ((+ (rt0.c1))) AND (((rt0.c2)%(rt0.c0))))) ISNULL)) GROUP BY rt0.c0, vt1.c0;
SELECT rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2 HAVING COUNT(COUNT(rt0.c0)) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2 HAVING (NOT (COUNT(COUNT(rt0.c0)))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2 HAVING ((COUNT(COUNT(rt0.c0))) ISNULL);
SELECT ALL * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE (CASE ((0.04154989830130751)/(vt1.c0))  WHEN ((rt0.c1)>(rt0.c0)) THEN ((rt0.c2) NOTNULL) WHEN (((rt0.c1))<>(('261144668'))) THEN (- (rt0.c0)) WHEN CASE vt1.c0  WHEN rt0.c1 THEN 192409343 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END THEN rt0.c2 ELSE LOWER(DISTINCT rt0.c1) END) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (CASE ((0.04154989830130751)/(vt1.c0))  WHEN ((rt0.c1)>(rt0.c0)) THEN ((rt0.c2) NOTNULL) WHEN (((rt0.c1))!=(('261144668'))) THEN (- (rt0.c0)) WHEN CASE vt1.c0  WHEN rt0.c1 THEN 192409343 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END THEN rt0.c2 ELSE LOWER(DISTINCT rt0.c1) END))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((CASE ((0.04154989830130751)/(vt1.c0))  WHEN ((rt0.c1)>(rt0.c0)) THEN ((rt0.c2) NOTNULL) WHEN (((rt0.c1))!=(('261144668'))) THEN (- (rt0.c0)) WHEN CASE vt1.c0  WHEN rt0.c1 THEN 192409343 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END THEN rt0.c2 ELSE LOWER(DISTINCT rt0.c1) END) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (CASE WHEN CAST(vt1.c0 AS INTEGER) THEN UNLIKELY(DISTINCT vt1.c0) WHEN ((rt0.c2)OR(rt0.c0)) THEN ((((((((vt1.c0)AND('61Kr7휄5x')))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)) WHEN ((rt0.c1)GLOB(rt0.c1)) THEN rt0.c2 END) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((NOT (CASE WHEN CAST(vt1.c0 AS INTEGER) THEN UNLIKELY(DISTINCT vt1.c0) WHEN ((rt0.c2)OR(rt0.c0)) THEN ((((((((vt1.c0)AND('61Kr7휄5x')))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)) WHEN ((rt0.c1)GLOB(rt0.c1)) THEN rt0.c2 END))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (((CASE WHEN CAST(vt1.c0 AS INTEGER) THEN UNLIKELY(DISTINCT vt1.c0) WHEN ((rt0.c2)OR(rt0.c0)) THEN ((((((((vt1.c0)AND('61Kr7휄5x')))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)) WHEN ((rt0.c1)GLOB(rt0.c1)) THEN rt0.c2 END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, vt1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c2)<<(0.3908269982979258)) IN ((rt0.c2 IN ()), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2)<<(0.3908269982979258)) IN ((rt0.c2 IN ()), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c2)<<(0.3908269982979258)) IN ((rt0.c2 IN ()), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(MIN(MAX(COUNT(*)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(MIN(MAX(COUNT(*)))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(MIN(MAX(COUNT(*))))) ISNULL);
SELECT * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE ((((- (vt1.c0)))-(LIKELIHOOD(DISTINCT vt1.c0, 0.5129481394947909)))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT ((((- (vt1.c0)))-(LIKELIHOOD(DISTINCT vt1.c0, 0.5129481394947909)))))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((((((- (vt1.c0)))-(LIKELIHOOD(DISTINCT vt1.c0, 0.5129481394947909)))) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE LIKELY(vt1.c0)  WHEN ((vt1.c0)%(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt1.c0 COLLATE BINARY THEN (vt1.c0 IN ()) WHEN vt1.c0 THEN vt1.c0 ELSE x'0585' END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE LIKELY(vt1.c0)  WHEN ((vt1.c0)%(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt1.c0 COLLATE BINARY THEN (vt1.c0 IN ()) WHEN vt1.c0 THEN vt1.c0 ELSE x'0585' END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE LIKELY(vt1.c0)  WHEN ((vt1.c0)%(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt1.c0 COLLATE BINARY THEN (vt1.c0 IN ()) WHEN vt1.c0 THEN vt1.c0 ELSE x'0585' END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0;
SELECT ALL vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((((('0.11259112109590541')OR(('-1558690230' IN ()))))AND(ABS(DISTINCT rt0.c0)))) GROUP BY vt1.c0, rt0.c2, rt0.c0 UNION SELECT vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((NOT ((((('0.11259112109590541')OR(('-1558690230' IN ()))))AND(ABS(DISTINCT rt0.c0)))))) GROUP BY vt1.c0, rt0.c2, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((((((('0.11259112109590541')OR(('-1558690230' IN ()))))AND(ABS(DISTINCT rt0.c0)))) ISNULL)) GROUP BY vt1.c0, rt0.c2, rt0.c0;
SELECT ALL vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MAX(MAX(MIN(rt0.c2))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MAX(MAX(MIN(rt0.c2))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MAX(MAX(MIN(rt0.c2)))) ISNULL);
SELECT ALL MIN(((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))IS NOT(CAST(rt0.c1 AS INTEGER)))) FROM rt0 ORDER BY ((((x'76a6')||(rt0.c1))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) AND (CAST(rt0.c2 AS REAL))) ASC;
SELECT ALL * FROM rt0 NATURAL JOIN vt1;
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (TRIM(vt1.c0 COLLATE NOCASE)) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE ((NOT (TRIM(vt1.c0 COLLATE NOCASE)))) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (((TRIM(vt1.c0 COLLATE NOCASE)) ISNULL));
SELECT ALL * FROM rt0 NATURAL JOIN vt1;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))LIKE(CAST(rt0.c1 AS NUMERIC)))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))LIKE(CAST(rt0.c1 AS NUMERIC)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))LIKE(CAST(rt0.c1 AS NUMERIC)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2, vt1.c0, rt0.c0 FROM vt1 NOT INDEXED, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c0;
SELECT rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((((+ (vt1.c0)))GLOB(((rt0.c0)IS(rt0.c2))))) GROUP BY rt0.c2, vt1.c0, rt0.c0 UNION SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((NOT ((((+ (vt1.c0)))GLOB(((rt0.c0)IS(rt0.c2))))))) GROUP BY rt0.c2, vt1.c0, rt0.c0 UNION SELECT rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((((((+ (vt1.c0)))GLOB(((rt0.c0)IS(rt0.c2))))) ISNULL)) GROUP BY rt0.c2, vt1.c0, rt0.c0;
SELECT rt0.c2, vt1.c0, rt0.c0 FROM vt1 NOT INDEXED, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING json_quote(((((((((vt1.c0)OR(MIN(vt1.c0))))AND(vt1.c0)))AND(AVG(MIN(TOTAL(vt1.c0))))))AND(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (json_quote(((((((((vt1.c0)OR(MIN(vt1.c0))))AND(vt1.c0)))AND(AVG(MIN(TOTAL(vt1.c0))))))AND(GROUP_CONCAT(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((json_quote(((((((((vt1.c0)OR(MIN(vt1.c0))))AND(vt1.c0)))AND(AVG(MIN(TOTAL(vt1.c0))))))AND(GROUP_CONCAT(vt1.c0))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1;
SELECT rt0.c2, rt0.c0 FROM rt0, vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END) BETWEEN ((NOT (rt0.c1))) AND (((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((NOT (((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END) BETWEEN ((NOT (rt0.c1))) AND (((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END) BETWEEN ((NOT (rt0.c1))) AND (((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))))) ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1)||(rt0.c0))))>(((rt0.c2 IN (rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c1)||(rt0.c0))))>(((rt0.c2 IN (rt0.c0)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c1)||(rt0.c0))))>(((rt0.c2 IN (rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (vt1.c0) GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1 NOT INDEXED, rt0 WHERE ((NOT (vt1.c0))) GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (((vt1.c0) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0 HAVING MIN(((((vt1.c0)AND(vt1.c0)))AND(AVG(COUNT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(((((vt1.c0)AND(vt1.c0)))AND(AVG(COUNT(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(((((vt1.c0)AND(vt1.c0)))AND(AVG(COUNT(vt1.c0)))))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1;
SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (((((rt0.c2)/(rt0.c1)))>=((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0)))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((NOT (((((rt0.c2)/(rt0.c1)))>=((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0)))))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (((((((rt0.c2)/(rt0.c1)))>=((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0)))))) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((+ (CAST(rt0.c1 AS REAL)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((+ (CAST(rt0.c1 AS REAL)))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((+ (CAST(rt0.c1 AS REAL)))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING TOTAL(GROUP_CONCAT(rt0.c2)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (TOTAL(GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((TOTAL(GROUP_CONCAT(rt0.c2))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ())) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ())))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ())) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (CASE WHEN rt0.c2 THEN ((vt1.c0)-(rt0.c0)) WHEN (((rt0.c1, rt0.c1, vt1.c0)) BETWEEN (('-516142222', rt0.c0, rt0.c1)) AND ((rt0.c1, vt1.c0, rt0.c1))) THEN (~ (rt0.c1)) WHEN ((rt0.c2)%(rt0.c2)) THEN ((((rt0.c2)AND('1140899485')))AND(rt0.c1)) ELSE CASE WHEN rt0.c2 THEN '3像Ahb' ELSE rt0.c2 END END) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (CASE WHEN rt0.c2 THEN ((vt1.c0)-(rt0.c0)) WHEN (((rt0.c1, rt0.c1, vt1.c0)) BETWEEN (('-516142222', rt0.c0, rt0.c1)) AND ((rt0.c1, vt1.c0, rt0.c1))) THEN (~ (rt0.c1)) WHEN ((rt0.c2)%(rt0.c2)) THEN ((((rt0.c2)AND('1140899485')))AND(rt0.c1)) ELSE CASE WHEN rt0.c2 THEN '3像Ahb' ELSE rt0.c2 END END))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((CASE WHEN rt0.c2 THEN ((vt1.c0)-(rt0.c0)) WHEN (((rt0.c1, rt0.c1, vt1.c0)) BETWEEN (('-516142222', rt0.c0, rt0.c1)) AND ((rt0.c1, vt1.c0, rt0.c1))) THEN (~ (rt0.c1)) WHEN ((rt0.c2)%(rt0.c2)) THEN ((((rt0.c2)AND('1140899485')))AND(rt0.c1)) ELSE CASE WHEN rt0.c2 THEN '3像Ahb' ELSE rt0.c2 END END) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (CASE WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END ELSE '-758268720' END) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END ELSE '-758268720' END))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END ELSE '-758268720' END) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((MIN(vt1.c0)))>(((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((COUNT(SUM(vt1.c0)), TOTAL(GROUP_CONCAT(COUNT(vt1.c0))), MIN(vt1.c0))) AND ((MAX(AVG(vt1.c0)), NULL, TOTAL(AVG(AVG(TOTAL(vt1.c0)))))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((MIN(vt1.c0)))>(((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((COUNT(SUM(vt1.c0)), TOTAL(GROUP_CONCAT(COUNT(vt1.c0))), MIN(vt1.c0))) AND ((MAX(AVG(vt1.c0)), NULL, TOTAL(AVG(AVG(TOTAL(vt1.c0)))))))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((MIN(vt1.c0)))>(((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((COUNT(SUM(vt1.c0)), TOTAL(GROUP_CONCAT(COUNT(vt1.c0))), MIN(vt1.c0))) AND ((MAX(AVG(vt1.c0)), NULL, TOTAL(AVG(AVG(TOTAL(vt1.c0))))))))))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))>((vt1.c0)))) IS FALSE)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((((((vt1.c0))>((vt1.c0)))) IS FALSE)))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((((((vt1.c0))>((vt1.c0)))) IS FALSE)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (CASE LIKELIHOOD(rt0.c1, 0.33031690811548586)  WHEN (~ (rt0.c2)) THEN ((rt0.c0)<(rt0.c0)) WHEN (rt0.c1 IN ()) THEN CAST(rt0.c1 AS INTEGER) WHEN ((rt0.c0) ISNULL) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((0.9116574093840419))) END) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (CASE LIKELIHOOD(rt0.c1, 0.33031690811548586)  WHEN (~ (rt0.c2)) THEN ((rt0.c0)<(rt0.c0)) WHEN (rt0.c1 IN ()) THEN CAST(rt0.c1 AS INTEGER) WHEN ((rt0.c0) ISNULL) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((0.9116574093840419))) END))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((CASE LIKELIHOOD(rt0.c1, 0.33031690811548586)  WHEN (~ (rt0.c2)) THEN ((rt0.c0)<(rt0.c0)) WHEN (rt0.c1 IN ()) THEN CAST(rt0.c1 AS INTEGER) WHEN ((rt0.c0) ISNULL) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((0.9116574093840419))) END) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0;
SELECT ALL vt1.c0, rt0.c0 FROM rt0, vt1 WHERE (CASE WHEN (- (rt0.c2)) THEN (+ (vt1.c0)) WHEN ((rt0.c2)<(vt1.c0)) THEN rt0.c1 WHEN CAST(rt0.c2 AS TEXT) THEN (~ (rt0.c1)) ELSE ((rt0.c2)<<(rt0.c2)) END) GROUP BY vt1.c0, rt0.c0 UNION SELECT vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((NOT (CASE WHEN (- (rt0.c2)) THEN (+ (vt1.c0)) WHEN ((rt0.c2)<(vt1.c0)) THEN rt0.c1 WHEN CAST(rt0.c2 AS TEXT) THEN (~ (rt0.c1)) ELSE ((rt0.c2)<<(rt0.c2)) END))) GROUP BY vt1.c0, rt0.c0 UNION SELECT vt1.c0, rt0.c0 FROM rt0, vt1 WHERE (((CASE WHEN (- (rt0.c2)) THEN (+ (vt1.c0)) WHEN ((rt0.c2)<(vt1.c0)) THEN rt0.c1 WHEN CAST(rt0.c2 AS TEXT) THEN (~ (rt0.c1)) ELSE ((rt0.c2)<<(rt0.c2)) END) ISNULL)) GROUP BY vt1.c0, rt0.c0;
SELECT ALL vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING UPPER('1589365885') UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (UPPER('1589365885'))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((UPPER('1589365885')) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING UPPER('1589365885') UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (UPPER('1589365885'))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((UPPER('1589365885')) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL SUM(((((rt0.c1)-(rt0.c0)))>>(((((rt0.c1)AND(vt1.c0)))OR(rt0.c2))))) FROM rt0, vt1 ORDER BY (((rt0.c1)|(rt0.c0)) IN (((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)AND(0.5200562118359829)))AND(NULL)) COLLATE RTRIM) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((vt1.c0)AND(0.5200562118359829)))AND(NULL)) COLLATE RTRIM))) UNION ALL SELECT * FROM vt1 WHERE (((((((vt1.c0)AND(0.5200562118359829)))AND(NULL)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))IS NOT((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, x'')) AND ((vt1.c0, vt1.c0, vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))IS NOT((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, x'')) AND ((vt1.c0, vt1.c0, vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))IS NOT((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, x'')) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0;
SELECT rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((~ ('')) COLLATE RTRIM) GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0 UNION SELECT rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((NOT ((~ ('')) COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0 UNION SELECT rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((((~ ('')) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0;
SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((vt1.c0 COLLATE RTRIM IN ())) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((vt1.c0 COLLATE RTRIM IN ())))) UNION ALL SELECT * FROM vt1 WHERE ((((vt1.c0 COLLATE RTRIM IN ())) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN (('^fylDyx32')) AND ((rt0.c0)))) NOT NULL)) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c2)) NOT BETWEEN (('^fylDyx32')) AND ((rt0.c0)))) NOT NULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((rt0.c2)) NOT BETWEEN (('^fylDyx32')) AND ((rt0.c0)))) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (NULLIF(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), '\n)tY')) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (NULLIF(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), '\n)tY')))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 NOT INDEXED WHERE (((NULLIF(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), '\n)tY')) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((rt0.c2) IS FALSE) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((rt0.c2) IS FALSE))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((rt0.c2) IS FALSE)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((rt0.c2) IS FALSE) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((rt0.c2) IS FALSE))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((rt0.c2) IS FALSE)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT vt1.c0 FROM rt0, vt1;
SELECT vt1.c0 FROM rt0, vt1 WHERE (CAST((- (rt0.c2)) AS REAL)) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt1 WHERE ((NOT (CAST((- (rt0.c2)) AS REAL)))) UNION ALL SELECT vt1.c0 FROM rt0, vt1 WHERE (((CAST((- (rt0.c2)) AS REAL)) ISNULL));
SELECT vt1.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((COALESCE(rt0.c1, rt0.c1)) NOT BETWEEN (x'' COLLATE NOCASE) AND (rt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((COALESCE(rt0.c1, rt0.c1)) NOT BETWEEN (x'' COLLATE NOCASE) AND (rt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((COALESCE(rt0.c1, rt0.c1)) NOT BETWEEN (x'' COLLATE NOCASE) AND (rt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (CASE ((rt0.c0) NOTNULL)  WHEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)) THEN ((rt0.c1) NOTNULL) WHEN (rt0.c1 IN ()) THEN rt0.c2 WHEN (~ (rt0.c2)) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) ELSE ((rt0.c1) IS FALSE) END) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE ((rt0.c0) NOTNULL)  WHEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)) THEN ((rt0.c1) NOTNULL) WHEN (rt0.c1 IN ()) THEN rt0.c2 WHEN (~ (rt0.c2)) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) ELSE ((rt0.c1) IS FALSE) END))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE ((rt0.c0) NOTNULL)  WHEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)) THEN ((rt0.c1) NOTNULL) WHEN (rt0.c1 IN ()) THEN rt0.c2 WHEN (~ (rt0.c2)) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) ELSE ((rt0.c1) IS FALSE) END) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0 HAVING TYPEOF(((rt0.c0) NOTNULL)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0 HAVING (NOT (TYPEOF(((rt0.c0) NOTNULL)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0 HAVING ((TYPEOF(((rt0.c0) NOTNULL))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0 HAVING TYPEOF(((rt0.c0) NOTNULL)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0 HAVING (NOT (TYPEOF(((rt0.c0) NOTNULL)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0 HAVING ((TYPEOF(((rt0.c0) NOTNULL))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0;
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c0)==(rt0.c1))) BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) AND ((- (rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0)==(rt0.c1))) BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) AND ((- (rt0.c1))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c0)==(rt0.c1))) BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) AND ((- (rt0.c1))))) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c0 FROM vt1, rt0 WHERE (((('1806268596')) NOT BETWEEN (((vt1.c0 IN ()))) AND ((CAST(vt1.c0 AS REAL))))) UNION SELECT DISTINCT rt0.c0 FROM vt1, rt0 WHERE ((NOT (((('1806268596')) NOT BETWEEN (((vt1.c0 IN ()))) AND ((CAST(vt1.c0 AS REAL))))))) UNION SELECT DISTINCT rt0.c0 FROM vt1, rt0 WHERE (((((('1806268596')) NOT BETWEEN (((vt1.c0 IN ()))) AND ((CAST(vt1.c0 AS REAL))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM vt1, rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (NULL) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (NULL))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((NULL) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MAX((rt0.c0 IN (rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MAX((rt0.c0 IN (rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MAX((rt0.c0 IN (rt0.c1)))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MAX((rt0.c0 IN (rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MAX((rt0.c0 IN (rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MAX((rt0.c0 IN (rt0.c1)))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (((NULLIF(DISTINCT rt0.c1, rt0.c1)) NOT BETWEEN ((- (vt1.c0))) AND (((((rt0.c1)OR(vt1.c0)))OR(rt0.c1))))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (((NULLIF(DISTINCT rt0.c1, rt0.c1)) NOT BETWEEN ((- (vt1.c0))) AND (((((rt0.c1)OR(vt1.c0)))OR(rt0.c1))))))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((((NULLIF(DISTINCT rt0.c1, rt0.c1)) NOT BETWEEN ((- (vt1.c0))) AND (((((rt0.c1)OR(vt1.c0)))OR(rt0.c1))))) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>((NOT (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>((NOT (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>((NOT (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (CAST(CAST(rt0.c2 AS TEXT) AS TEXT)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c2 AS TEXT) AS TEXT)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((CAST(CAST(rt0.c2 AS TEXT) AS TEXT)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING CAST((- (COUNT(*))) AS REAL) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (CAST((- (COUNT(*))) AS REAL))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((CAST((- (COUNT(*))) AS REAL)) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING CAST((- (COUNT(*))) AS REAL) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (CAST((- (COUNT(*))) AS REAL))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((CAST((- (COUNT(*))) AS REAL)) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT TOTAL(((0.03835153677786707)IS NOT(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END))) FROM rt0 ORDER BY CASE ((rt0.c0)!=(NULL))  WHEN json_patch(2076400696, rt0.c1) THEN NULL END  NULLS FIRST;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((~ (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((~ (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((~ (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((- (CAST(rt0.c2 AS INTEGER)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT ((- (CAST(rt0.c2 AS INTEGER)))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((- (CAST(rt0.c2 AS INTEGER)))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt1 NOT INDEXED, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (x'') GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (x''))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt1 NOT INDEXED, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(AVG(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(AVG(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(AVG(vt1.c0))) ISNULL);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(((((((((rt0.c0)AND(rt0.c1)))AND(0.4140548252434435)))OR('')))AND(vt1.c0)) AS BLOB);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(((((((((rt0.c0)AND(rt0.c1)))AND(0.4140548252434435)))OR('')))AND(vt1.c0)) AS BLOB) WHERE (((((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1)))OR(IFNULL(DISTINCT rt0.c1, rt0.c2)))) UNION ALL SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(((((((((rt0.c0)AND(rt0.c1)))AND(0.4140548252434435)))OR('')))AND(vt1.c0)) AS BLOB) WHERE ((NOT (((((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1)))OR(IFNULL(DISTINCT rt0.c1, rt0.c2)))))) UNION ALL SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(((((((((rt0.c0)AND(rt0.c1)))AND(0.4140548252434435)))OR('')))AND(vt1.c0)) AS BLOB) WHERE (((((((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1)))OR(IFNULL(DISTINCT rt0.c1, rt0.c2)))) ISNULL));
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(((((((((rt0.c0)AND(rt0.c1)))AND(0.4140548252434435)))OR('')))AND(vt1.c0)) AS BLOB);
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((- (vt1.c0)) IN ())) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((- (vt1.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((- (vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))<>((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))<>((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))!=((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2 HAVING SUBSTR(((MAX(MIN(rt0.c2)))<<(GROUP_CONCAT(rt0.c1))), 0.24723337266500367) UNION ALL SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2 HAVING (NOT (SUBSTR(((MAX(MIN(rt0.c2)))<<(GROUP_CONCAT(rt0.c1))), 0.24723337266500367))) UNION ALL SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2 HAVING ((SUBSTR(((MAX(MIN(rt0.c2)))<<(GROUP_CONCAT(rt0.c1))), 0.24723337266500367)) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((CHANGES()))>=(((((vt1.c0))>=((vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((CHANGES()))>=(((((vt1.c0))>=((vt1.c0))))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((((CHANGES()))>=(((((vt1.c0))>=((vt1.c0))))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (((x'')-((('읭ꂂ_h)(.~')IS NOT(rt0.c1))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((NOT (((x'')-((('읭ꂂ_h)(.~')IS NOT(rt0.c1))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (((((x'')-((('읭ꂂ_h)(.~')IS NOT(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (IFNULL(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), rt0.c0)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (IFNULL(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), rt0.c0)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((IFNULL(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), rt0.c0)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON ((((rt0.c1)IS(vt1.c0))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) AND ((rt0.c1 IN ()))) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON ((((rt0.c1)IS(vt1.c0))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) AND ((rt0.c1 IN ()))) GROUP BY rt0.c0, rt0.c1 HAVING GROUP_CONCAT(SUM(COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON ((((rt0.c1)IS(vt1.c0))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) AND ((rt0.c1 IN ()))) GROUP BY rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(SUM(COUNT(*))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON ((((rt0.c1)IS(vt1.c0))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) AND ((rt0.c1 IN ()))) GROUP BY rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(SUM(COUNT(*)))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (- (((rt0.c0)==(rt0.c1))));
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (- (((rt0.c0)=(rt0.c1)))) WHERE (CAST(rt0.c0 AS TEXT)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (- (((rt0.c0)=(rt0.c1)))) WHERE ((NOT (CAST(rt0.c0 AS TEXT)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (- (((rt0.c0)==(rt0.c1)))) WHERE (((CAST(rt0.c0 AS TEXT)) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (- (((rt0.c0)==(rt0.c1))));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ('-1175323347') UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ('-1175323347'))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((('-1175323347') ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 WHERE ((((- ('Z4')))IS(((((((((rt0.c2)OR(vt1.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT ((((- ('Z4')))IS(((((((((rt0.c2)OR(vt1.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0, vt1 WHERE ((((((- ('Z4')))IS(((((((((rt0.c2)OR(vt1.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, vt1.c0, rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (~ (rt0.c1)) GROUP BY rt0.c0, vt1.c0, rt0.c1;
SELECT rt0.c0, vt1.c0, rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (~ (rt0.c1)) GROUP BY rt0.c0, vt1.c0, rt0.c1 HAVING CASE TOTAL(rt0.c0)  WHEN ((((MIN(rt0.c1))AND(AVG(vt1.c0))))OR(rt0.c1)) THEN COUNT(*) END UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (~ (rt0.c1)) GROUP BY rt0.c0, vt1.c0, rt0.c1 HAVING (NOT (CASE TOTAL(rt0.c0)  WHEN ((((MIN(rt0.c1))AND(AVG(vt1.c0))))OR(rt0.c1)) THEN COUNT(*) END)) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (~ (rt0.c1)) GROUP BY rt0.c0, vt1.c0, rt0.c1 HAVING ((CASE TOTAL(rt0.c0)  WHEN ((((MIN(rt0.c1))AND(AVG(vt1.c0))))OR(rt0.c1)) THEN COUNT(*) END) ISNULL);
SELECT rt0.c0, vt1.c0, rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (~ (rt0.c1)) GROUP BY rt0.c0, vt1.c0, rt0.c1;
SELECT rt0.c0, vt1.c0, rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (~ (rt0.c1)) GROUP BY rt0.c0, vt1.c0, rt0.c1 HAVING CASE TOTAL(rt0.c0)  WHEN ((((MIN(rt0.c1))AND(AVG(vt1.c0))))OR(rt0.c1)) THEN COUNT(*) END UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (~ (rt0.c1)) GROUP BY rt0.c0, vt1.c0, rt0.c1 HAVING (NOT (CASE TOTAL(rt0.c0)  WHEN ((((MIN(rt0.c1))AND(AVG(vt1.c0))))OR(rt0.c1)) THEN COUNT(*) END)) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (~ (rt0.c1)) GROUP BY rt0.c0, vt1.c0, rt0.c1 HAVING ((CASE TOTAL(rt0.c0)  WHEN ((((MIN(rt0.c1))AND(AVG(vt1.c0))))OR(rt0.c1)) THEN COUNT(*) END) ISNULL);
SELECT rt0.c0, vt1.c0, rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (~ (rt0.c1)) GROUP BY rt0.c0, vt1.c0, rt0.c1;
SELECT * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE (((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(((rt0.c0)/(rt0.c0)))))OR(((rt0.c1)/(0Xffffffffbe7edee2)))))AND(rt0.c2)))AND(((rt0.c0)>>(rt0.c2))))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(((rt0.c0)/(rt0.c0)))))OR(((rt0.c1)/(0Xffffffffbe7edee2)))))AND(rt0.c2)))AND(((rt0.c0)>>(rt0.c2))))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE (((((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(((rt0.c0)/(rt0.c0)))))OR(((rt0.c1)/(0Xffffffffbe7edee2)))))AND(rt0.c2)))AND(((rt0.c0)>>(rt0.c2))))) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST((+ (vt1.c0)) AS BLOB)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST((+ (vt1.c0)) AS BLOB)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST((+ (vt1.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c2 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2 HAVING MAX(COUNT(*)) UNION ALL SELECT rt0.c2 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT rt0.c2 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0) BETWEEN ('381003945') AND (vt1.c0)) IN (vt1.c0, ((vt1.c0)&(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0) BETWEEN ('381003945') AND (vt1.c0)) IN (vt1.c0, ((vt1.c0)&(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0) BETWEEN ('381003945') AND (vt1.c0)) IN (vt1.c0, ((vt1.c0)&(vt1.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((NOT (rt0.c2 COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((NOT (rt0.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND('')))AND((((vt1.c0))<((vt1.c0))))))OR((vt1.c0 IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((((vt1.c0)AND(vt1.c0)))AND('')))AND((((vt1.c0))<((vt1.c0))))))OR((vt1.c0 IN ())))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND('')))AND((((vt1.c0))<((vt1.c0))))))OR((vt1.c0 IN ())))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(COUNT(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(COUNT(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(COUNT(vt1.c0))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS TEXT)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c1 AS BLOB) AS TEXT)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(CAST(rt0.c1 AS BLOB) AS TEXT)) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM vt1, rt0 WHERE (CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 END COLLATE BINARY) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((NOT (CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 END COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM vt1, rt0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 END COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM vt1, rt0;
SELECT rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, rt0 WHERE ((~ (vt1.c0)) COLLATE BINARY) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt1, rt0 WHERE ((NOT ((~ (vt1.c0)) COLLATE BINARY))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt1, rt0 WHERE ((((~ (vt1.c0)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((COUNT(*))) NOT BETWEEN ((SUM(rt0.c0))) AND ((MIN(rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((((COUNT(*))) NOT BETWEEN ((SUM(rt0.c0))) AND ((MIN(rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((((COUNT(*))) NOT BETWEEN ((SUM(rt0.c0))) AND ((MIN(rt0.c2))))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((COUNT(*))) NOT BETWEEN ((SUM(rt0.c0))) AND ((MIN(rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((((COUNT(*))) NOT BETWEEN ((SUM(rt0.c0))) AND ((MIN(rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((((COUNT(*))) NOT BETWEEN ((SUM(rt0.c0))) AND ((MIN(rt0.c2))))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON (((((('310058920')) BETWEEN ((vt1.c0)) AND ((rt0.c1))), ((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)), (- (vt1.c0)), (rt0.c0 IN ()), ((0X6e78b146)<<(rt0.c0))))!=(('', (((NULL))>((vt1.c0))), CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END, ((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)), ((rt0.c2)<>(rt0.c2)))));
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((((('310058920')) BETWEEN ((vt1.c0)) AND ((rt0.c1))), ((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)), (- (vt1.c0)), (rt0.c0 IN ()), ((0x6e78b146)<<(rt0.c0))))!=(('', (((NULL))>((vt1.c0))), CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END, ((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)), ((rt0.c2)<>(rt0.c2))))) WHERE (((NULL) IS TRUE)) UNION ALL SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((((('310058920')) BETWEEN ((vt1.c0)) AND ((rt0.c1))), ((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)), (- (vt1.c0)), (rt0.c0 IN ()), ((0x6e78b146)<<(rt0.c0))))!=(('', (((NULL))>((vt1.c0))), CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END, ((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)), ((rt0.c2)!=(rt0.c2))))) WHERE ((NOT (((NULL) IS TRUE)))) UNION ALL SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON (((((('310058920')) BETWEEN ((vt1.c0)) AND ((rt0.c1))), ((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)), (- (vt1.c0)), (rt0.c0 IN ()), ((0X6e78b146)<<(rt0.c0))))!=(('', (((NULL))>((vt1.c0))), CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END, ((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)), ((rt0.c2)!=(rt0.c2))))) WHERE (((((NULL) IS TRUE)) ISNULL));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON (((((('310058920')) BETWEEN ((vt1.c0)) AND ((rt0.c1))), ((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)), (- (vt1.c0)), (rt0.c0 IN ()), ((0X6e78b146)<<(rt0.c0))))!=(('', (((NULL))>((vt1.c0))), CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END, ((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)), ((rt0.c2)<>(rt0.c2)))));
SELECT DISTINCT * FROM vt1 NOT INDEXED;
SELECT DISTINCT * FROM vt1 WHERE (((0.36523946234276716)>(CAST(vt1.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((0.36523946234276716)>(CAST(vt1.c0 AS BLOB)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((0.36523946234276716)>(CAST(vt1.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM vt1 NOT INDEXED;
SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON CAST(((((rt0.c1)OR(vt1.c0)))AND(rt0.c1)) AS NUMERIC) GROUP BY vt1.c0, rt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON CAST(((((rt0.c1)OR(vt1.c0)))AND(rt0.c1)) AS NUMERIC) WHERE (((((((vt1.c0) IS TRUE))AND(rt0.c1 COLLATE NOCASE)))OR(((rt0.c0) NOTNULL)))) GROUP BY vt1.c0, rt0.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON CAST(((((rt0.c1)OR(vt1.c0)))AND(rt0.c1)) AS NUMERIC) WHERE ((NOT (((((((vt1.c0) IS TRUE))AND(rt0.c1 COLLATE NOCASE)))OR(((rt0.c0) NOTNULL)))))) GROUP BY vt1.c0, rt0.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON CAST(((((rt0.c1)OR(vt1.c0)))AND(rt0.c1)) AS NUMERIC) WHERE (((((((((vt1.c0) IS TRUE))AND(rt0.c1 COLLATE NOCASE)))OR(((rt0.c0) NOTNULL)))) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON CAST(((((rt0.c1)OR(vt1.c0)))AND(rt0.c1)) AS NUMERIC) GROUP BY vt1.c0, rt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2;
SELECT vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING LOWER(AVG(AVG(vt1.c0))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING (NOT (LOWER(AVG(AVG(vt1.c0))))) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING ((LOWER(AVG(AVG(vt1.c0)))) ISNULL);
SELECT MIN(CASE '-679941071' COLLATE BINARY  WHEN (vt1.c0 IN (vt1.c0)) THEN (vt1.c0 IN ()) ELSE '' END) FROM vt1;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (TRIM(DISTINCT (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), ((rt0.c2)IS(rt0.c0)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (TRIM(DISTINCT (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), ((rt0.c2)IS(rt0.c0)))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((TRIM(DISTINCT (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), ((rt0.c2)IS(rt0.c0)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1 NATURAL JOIN rt0 WHERE ((((+ (rt0.c2)))<(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1 NATURAL JOIN rt0 WHERE ((NOT ((((+ (rt0.c2)))<(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1 NATURAL JOIN rt0 WHERE ((((((+ (rt0.c2)))<(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1 NATURAL JOIN rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS REAL)) ISNULL)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS REAL)) ISNULL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c0 AS REAL)) ISNULL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(COUNT(MAX(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(COUNT(MAX(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(COUNT(MAX(vt1.c0)))) ISNULL);
SELECT ALL * FROM vt1 NATURAL JOIN rt0;
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (rt0.c2) UNION ALL SELECT * FROM vt1 NATURAL JOIN rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM vt1 NATURAL JOIN rt0;
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE (CASE CHANGES()  WHEN ((rt0.c1)IS NOT(vt1.c0)) THEN vt1.c0 END) UNION SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE ((NOT (CASE CHANGES()  WHEN ((rt0.c1)IS NOT(vt1.c0)) THEN vt1.c0 END))) UNION SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE (((CASE CHANGES()  WHEN ((rt0.c1)IS NOT(vt1.c0)) THEN vt1.c0 END) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((+ (((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((+ (((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((+ (((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0) NOT NULL))>>(((MAX(SUM(vt1.c0))) ISNULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((vt1.c0) NOT NULL))>>(((MAX(SUM(vt1.c0))) ISNULL))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c0) NOT NULL))>>(((MAX(SUM(vt1.c0))) ISNULL)))) ISNULL);
SELECT ALL vt1.c0 FROM rt0, vt1;
SELECT vt1.c0 FROM rt0, vt1 WHERE ((((rt0.c0) NOT BETWEEN (rt0.c0) AND ('996462648')) IN ())) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt1 WHERE ((NOT ((((rt0.c0) NOT BETWEEN (rt0.c0) AND ('996462648')) IN ())))) UNION ALL SELECT vt1.c0 FROM rt0, vt1 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND ('996462648')) IN ())) ISNULL));
SELECT ALL vt1.c0 FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST((+ (rt0.c1)) AS REAL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST((+ (rt0.c1)) AS REAL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST((+ (rt0.c1)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((CAST(rt0.c1 AS REAL))+((~ (rt0.c0))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS REAL))+((~ (rt0.c0))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((CAST(rt0.c1 AS REAL))+((~ (rt0.c0))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(vt1.c0 COLLATE NOCASE) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(vt1.c0 COLLATE NOCASE))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(vt1.c0 COLLATE NOCASE)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(vt1.c0 COLLATE NOCASE) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(vt1.c0 COLLATE NOCASE))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(vt1.c0 COLLATE NOCASE)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
