-- Time: 2024/06/09 16:14:19
-- Database: database24
-- Database version: 3.40.0
-- seed value: 4056651924
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL), (-1170495362), (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '19332'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA temp.auto_vacuum = INCREMENTAL; -- 3ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('420096222'), (NULL), (x''); -- 1ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('%/plHc1X'); -- 1ms;
UPDATE OR FAIL vt0 SET c0='420096222' WHERE vt0.c0; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-530010927,3');\n; -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=-1,13');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '56787'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX; -- 0ms;
PRAGMA secure_delete; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '50162'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
UPDATE OR REPLACE vt0 SET (c0)=(0.47835834843073544) WHERE '%/plHc1X'; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=NULL, c0=NULL WHERE (((vt0.c0 IN ())) IS TRUE); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=-1170495362,14');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '63465'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '43529'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=177642029,3');\n; -- 0ms;
PRAGMA temp.ignore_check_constraints; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('420096222'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.38167742272495286); -- 1ms;
REINDEX; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '29125'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA integrity_check; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1477172383); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '43560'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1790874930); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=11'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1592545540); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '35400'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=34188956,6');\n; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('1585890943'); -- 0ms;
PRAGMA temp.reverse_unordered_selects = true; -- 1ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2084687324); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=10'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=14'); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (0x190a28de); -- 0ms;
PRAGMA auto_vacuum = NONE; -- 0ms;
PRAGMA locking_mode; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (x''); -- 0ms;
CREATE TEMP VIEW v0(c0) AS SELECT NULL FROM vt0 WHERE ((((((((((x'5a38')AND(0.790529989850375)))AND('ks)-')))AND(0.7905932401088285)))AND('')) IN ())); -- 1ms;
PRAGMA main.legacy_file_format = true; -- 0ms;
ANALYZE v0; -- 1ms;
COMMIT; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA busy_timeout; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '22643'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1650963245);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '40561'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1647852136);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES (x'e23c275f'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '44517'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1277410725); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 12); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1320494676);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '60278'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '46471'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2094408557); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=2103654571,4');\n; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 14); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=34188956,8');\n; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(PRINTF(vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(PRINTF(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((SQLITE_COMPILEOPTION_GET(PRINTF(vt0.c0))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST((- (vt0.c0)) AS INTEGER)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST((- (vt0.c0)) AS INTEGER)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST((- (vt0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE WHEN ((v0.c0) NOTNULL) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((NULL))) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN ((v0.c0) NOTNULL) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((NULL))) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN ((v0.c0) NOTNULL) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((NULL))) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (MIN(vt0.c0) IN ()) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT ((MIN(vt0.c0) IN ()))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (((MIN(vt0.c0) IN ())) ISNULL);
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (MIN(vt0.c0) IN ()) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT ((MIN(vt0.c0) IN ()))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (((MIN(vt0.c0) IN ())) ISNULL);
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0, v0;
SELECT vt0.c0 FROM vt0, v0 WHERE (x'c7ef') UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT (x'c7ef'))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((x'c7ef') ISNULL));
SELECT vt0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (CAST('^.' AS TEXT)) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (CAST('^.' AS TEXT)))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((CAST('^.' AS TEXT)) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0 IN ()))>(v0.c0 COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN ()))>(v0.c0 COLLATE NOCASE))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0 IN ()))>(v0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0, vt0.c0 HAVING ((((((SUM(AVG(COUNT(v0.c0)))))<((COUNT(*))))))<=((((MIN(vt0.c0)) NOT BETWEEN (MAX(COUNT(*))) AND (v0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (((((((SUM(AVG(COUNT(v0.c0)))))<((COUNT(*))))))<=((((MIN(vt0.c0)) NOT BETWEEN (MAX(COUNT(*))) AND (v0.c0))))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0, vt0.c0 HAVING ((((((((SUM(AVG(COUNT(v0.c0)))))<((COUNT(*))))))<=((((MIN(vt0.c0)) NOT BETWEEN (MAX(COUNT(*))) AND (v0.c0)))))) ISNULL);
SELECT ALL vt0.c0 FROM v0, vt0;
SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((vt0.c0) IS TRUE)) UNION ALL SELECT vt0.c0 FROM v0, vt0 WHERE ((NOT (((vt0.c0) IS TRUE)))) UNION ALL SELECT vt0.c0 FROM v0, vt0 WHERE (((((vt0.c0) IS TRUE)) ISNULL));
SELECT ALL vt0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (0.11038020238488178) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (0.11038020238488178))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((0.11038020238488178) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0 NOT INDEXED, vt0 WHERE ((v0.c0 IN ())) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT ((v0.c0 IN ())))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((v0.c0 IN ())) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(COUNT(SUM(MAX(MIN(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(SUM(MAX(MIN(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(COUNT(SUM(MAX(MIN(vt0.c0)))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CHAR(vt0.c0))==(CAST(vt0.c0 AS BLOB)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CHAR(vt0.c0))=(CAST(vt0.c0 AS BLOB)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((CHAR(vt0.c0))==(CAST(vt0.c0 AS BLOB)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON CASE 0.2355598096461422  WHEN ((vt0.c0) NOTNULL) THEN v0.c0 END;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON CASE 0.2355598096461422  WHEN ((vt0.c0) NOTNULL) THEN v0.c0 END WHERE ((((v0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((((((((((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))AND(NULL)))AND(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON CASE 0.2355598096461422  WHEN ((vt0.c0) NOTNULL) THEN v0.c0 END WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((((((((((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))AND(NULL)))AND(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON CASE 0.2355598096461422  WHEN ((vt0.c0) NOTNULL) THEN v0.c0 END WHERE ((((((v0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((((((((((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))AND(NULL)))AND(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON CASE 0.2355598096461422  WHEN ((vt0.c0) NOTNULL) THEN v0.c0 END;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0)!=(vt0.c0)) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)<>(vt0.c0)) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)!=(vt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(COUNT(MAX(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(COUNT(MAX(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(COUNT(MAX(vt0.c0)))) ISNULL);
SELECT ALL * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (CAST((+ (vt0.c0)) AS NUMERIC)) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT (CAST((+ (vt0.c0)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE (((CAST((+ (vt0.c0)) AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST(((v0.c0)-(v0.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST(((v0.c0)-(v0.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST(((v0.c0)-(v0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS NUMERIC)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE NOCASE AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((CAST(vt0.c0 COLLATE NOCASE AS NUMERIC)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((((v0.c0)AND(COUNT(*))))OR(((COUNT(v0.c0)) ISNULL))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0 NOT INDEXED, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (((((v0.c0)AND(COUNT(*))))OR(((COUNT(v0.c0)) ISNULL))))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((((((v0.c0)AND(COUNT(*))))OR(((COUNT(v0.c0)) ISNULL)))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((((v0.c0)AND(COUNT(*))))OR(((COUNT(v0.c0)) ISNULL))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0 NOT INDEXED, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (((((v0.c0)AND(COUNT(*))))OR(((COUNT(v0.c0)) ISNULL))))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((((((v0.c0)AND(COUNT(*))))OR(((COUNT(v0.c0)) ISNULL)))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((LIKELY(DISTINCT vt0.c0)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0))<=((vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((LIKELY(DISTINCT vt0.c0)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0))<=((vt0.c0)))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((LIKELY(DISTINCT vt0.c0)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0))<=((vt0.c0)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((- (v0.c0)) IN ())) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((- (v0.c0)) IN ())))) UNION SELECT DISTINCT * FROM v0 WHERE (((((- (v0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM vt0 INNER JOIN v0 ON ((vt0.c0) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))) AND (CAST(v0.c0 AS TEXT))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0 INNER JOIN v0 ON ((vt0.c0) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))) AND (CAST(v0.c0 AS TEXT))) WHERE (CAST(((vt0.c0)||(vt0.c0)) AS INTEGER)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0 INNER JOIN v0 ON ((vt0.c0) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))) AND (CAST(v0.c0 AS TEXT))) WHERE ((NOT (CAST(((vt0.c0)||(vt0.c0)) AS INTEGER)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0 INNER JOIN v0 ON ((vt0.c0) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))) AND (CAST(v0.c0 AS TEXT))) WHERE (((CAST(((vt0.c0)||(vt0.c0)) AS INTEGER)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0 INNER JOIN v0 ON ((vt0.c0) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))) AND (CAST(v0.c0 AS TEXT))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(COUNT(v0.c0) COLLATE RTRIM) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(COUNT(v0.c0) COLLATE RTRIM))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(COUNT(v0.c0) COLLATE RTRIM)) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN LOWER(vt0.c0) THEN CASE 0x5e86c67f  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 4.20096222E8 WHEN -1585929879 THEN vt0.c0 ELSE vt0.c0 END END) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN LOWER(vt0.c0) THEN CASE 0x5e86c67f  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 4.20096222E8 WHEN -1585929879 THEN vt0.c0 ELSE vt0.c0 END END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN LOWER(vt0.c0) THEN CASE 0X5e86c67f  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 4.20096222E8 WHEN -1585929879 THEN vt0.c0 ELSE vt0.c0 END END) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE (vt0.c0) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>(((vt0.c0)IS(NULL))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>(((vt0.c0)IS(NULL))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>(((vt0.c0)IS(NULL))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(vt0.c0)) BETWEEN (((vt0.c0) IS TRUE)) AND (((((MIN(AVG(COUNT(*))))AND(TOTAL(COUNT(*)))))AND(COUNT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MIN(vt0.c0)) BETWEEN (((vt0.c0) IS TRUE)) AND (((((MIN(AVG(COUNT(*))))AND(TOTAL(COUNT(*)))))AND(COUNT(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MIN(vt0.c0)) BETWEEN (((vt0.c0) IS TRUE)) AND (((((MIN(AVG(COUNT(*))))AND(TOTAL(COUNT(*)))))AND(COUNT(vt0.c0)))))) ISNULL);
SELECT ALL SUM((- (((v0.c0)<<(v0.c0))))) FROM v0;
SELECT vt0.c0, v0.c0 FROM vt0, v0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE (LOWER(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (LOWER(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((LOWER(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ISNULL));
SELECT vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY ELSE CAST(vt0.c0 AS TEXT) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY ELSE CAST(vt0.c0 AS TEXT) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY ELSE CAST(vt0.c0 AS TEXT) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), 0.9316230563839256)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (LIKELIHOOD(DISTINCT ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), 0.9316230563839256)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((LIKELIHOOD(DISTINCT ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), 0.9316230563839256)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(CAST(v0.c0 AS TEXT)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(CAST(v0.c0 AS TEXT)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(CAST(v0.c0 AS TEXT))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(CAST(v0.c0 AS TEXT)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(CAST(v0.c0 AS TEXT)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(CAST(v0.c0 AS TEXT))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)))IS(UNLIKELY(x'0578')))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((~ (vt0.c0)))IS(UNLIKELY(x'0578')))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((~ (vt0.c0)))IS(UNLIKELY(x'0578')))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE ((vt0.c0)*(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE (- (vt0.c0)) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE ((vt0.c0)*(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE (- (vt0.c0)) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE ((vt0.c0)*(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE (- (vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE (((v0.c0) NOT BETWEEN (((v0.c0) IS TRUE)) AND ((((vt0.c0, NULL, v0.c0))=((v0.c0, vt0.c0, vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((NOT (((v0.c0) NOT BETWEEN (((v0.c0) IS TRUE)) AND ((((vt0.c0, NULL, v0.c0))=((v0.c0, vt0.c0, vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE (((((v0.c0) NOT BETWEEN (((v0.c0) IS TRUE)) AND ((((vt0.c0, NULL, v0.c0))==((v0.c0, vt0.c0, vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(SUM(AVG(MAX(vt0.c0)))))+((((vt0.c0)) NOT BETWEEN ((COUNT(SUM(vt0.c0)))) AND ((GROUP_CONCAT(GROUP_CONCAT(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(SUM(AVG(MAX(vt0.c0)))))+((((vt0.c0)) NOT BETWEEN ((COUNT(SUM(vt0.c0)))) AND ((GROUP_CONCAT(GROUP_CONCAT(vt0.c0))))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(SUM(AVG(MAX(vt0.c0)))))+((((vt0.c0)) NOT BETWEEN ((COUNT(SUM(vt0.c0)))) AND ((GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((('-1704111445') IS TRUE)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((('-1704111445') IS TRUE)))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((('-1704111445') IS TRUE)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON (((v0.c0) IS FALSE) IN ());
SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON (((v0.c0) IS FALSE) IN ()) WHERE ((INSTR(v0.c0, vt0.c0) IN ())) UNION SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON (((v0.c0) IS FALSE) IN ()) WHERE ((NOT ((INSTR(v0.c0, vt0.c0) IN ())))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON (((v0.c0) IS FALSE) IN ()) WHERE ((((INSTR(v0.c0, vt0.c0) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON (((v0.c0) IS FALSE) IN ());
SELECT ALL vt0.c0, v0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 NATURAL JOIN v0 WHERE (((CASE WHEN v0.c0 THEN vt0.c0 ELSE x'' END) NOTNULL)) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0 NATURAL JOIN v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN vt0.c0 ELSE x'' END) NOTNULL)))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0 NATURAL JOIN v0 WHERE (((((CASE WHEN v0.c0 THEN vt0.c0 ELSE x'' END) NOTNULL)) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((((((((((((((v0.c0 IN ()))OR(json_extract(v0.c0, -1647852136, v0.c0, v0.c0, -1.585929879E9, v0.c0))))AND(v0.c0 COLLATE BINARY)))OR(((v0.c0)>>(v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((v0.c0)<=(v0.c0)))))AND(((((((((0X39b1cc9a)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((((((((((((v0.c0 IN ()))OR(json_extract(v0.c0, -1647852136, v0.c0, v0.c0, -1.585929879E9, v0.c0))))AND(v0.c0 COLLATE BINARY)))OR(((v0.c0)>>(v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((v0.c0)<=(v0.c0)))))AND(((((((((0X39b1cc9a)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((((((((((((v0.c0 IN ()))OR(json_extract(v0.c0, -1647852136, v0.c0, v0.c0, -1.585929879E9, v0.c0))))AND(v0.c0 COLLATE BINARY)))OR(((v0.c0)>>(v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((v0.c0)<=(v0.c0)))))AND(((((((((0X39b1cc9a)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (177642029) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (177642029))) UNION SELECT DISTINCT * FROM v0 WHERE (((177642029) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE ((v0.c0) IS FALSE)  WHEN (v0.c0 IN ()) THEN (v0.c0 IN (v0.c0)) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE ((v0.c0) IS FALSE)  WHEN (v0.c0 IN ()) THEN (v0.c0 IN (v0.c0)) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE ((v0.c0) IS FALSE)  WHEN (v0.c0 IN ()) THEN (v0.c0 IN (v0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE WHEN MAX(v0.c0) THEN CAST(v0.c0 AS NUMERIC) END UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE WHEN MAX(v0.c0) THEN CAST(v0.c0 AS NUMERIC) END)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE WHEN MAX(v0.c0) THEN CAST(v0.c0 AS NUMERIC) END) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE WHEN MAX(v0.c0) THEN CAST(v0.c0 AS NUMERIC) END UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE WHEN MAX(v0.c0) THEN CAST(v0.c0 AS NUMERIC) END)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE WHEN MAX(v0.c0) THEN CAST(v0.c0 AS NUMERIC) END) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((CHAR(v0.c0))<(((((NULL)AND(v0.c0)))AND(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((CHAR(v0.c0))<(((((NULL)AND(v0.c0)))AND(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((CHAR(v0.c0))<(((((NULL)AND(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (((-70834651)AND(CASE WHEN vt0.c0 THEN vt0.c0 END))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (((-70834651)AND(CASE WHEN vt0.c0 THEN vt0.c0 END))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((((-70834651)AND(CASE WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((COUNT(*)) NOTNULL) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*)) NOTNULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((((COUNT(*)) NOTNULL)) ISNULL);
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((COUNT(*)) NOTNULL) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*)) NOTNULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((((COUNT(*)) NOTNULL)) ISNULL);
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT * FROM v0 NOT INDEXED, vt0;
SELECT * FROM v0, vt0 WHERE (0.286560562460604) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT (0.286560562460604))) UNION ALL SELECT * FROM v0, vt0 WHERE (((0.286560562460604) ISNULL));
SELECT * FROM v0 NOT INDEXED, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN DATETIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, NULL) ELSE ((vt0.c0)LIKE(vt0.c0)) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN DATETIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, NULL) ELSE ((vt0.c0)LIKE(vt0.c0)) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN DATETIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, NULL) ELSE ((vt0.c0)LIKE(vt0.c0)) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((((((v0.c0)<=(vt0.c0)))OR(((vt0.c0)>('r')))))OR(((vt0.c0)%(x'')))) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((((((v0.c0)<=(vt0.c0)))OR(((vt0.c0)>('r')))))OR(((vt0.c0)%(x'')))) WHERE (CASE ((v0.c0) ISNULL)  WHEN ((vt0.c0)<>(0Xffffffffe7adccf2)) THEN (v0.c0 IN ()) END) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((((((v0.c0)<=(vt0.c0)))OR(((vt0.c0)>('r')))))OR(((vt0.c0)%(x'')))) WHERE ((NOT (CASE ((v0.c0) ISNULL)  WHEN ((vt0.c0)!=(0xffffffffe7adccf2)) THEN (v0.c0 IN ()) END))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((((((v0.c0)<=(vt0.c0)))OR(((vt0.c0)>('r')))))OR(((vt0.c0)%(x'')))) WHERE (((CASE ((v0.c0) ISNULL)  WHEN ((vt0.c0)<>(0xffffffffe7adccf2)) THEN (v0.c0 IN ()) END) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((((((v0.c0)<=(vt0.c0)))OR(((vt0.c0)>('r')))))OR(((vt0.c0)%(x'')))) GROUP BY vt0.c0, v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((MAX(v0.c0))*(CAST(GROUP_CONCAT(TOTAL(v0.c0)) AS INTEGER))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (((MAX(v0.c0))*(CAST(GROUP_CONCAT(TOTAL(v0.c0)) AS INTEGER))))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((((MAX(v0.c0))*(CAST(GROUP_CONCAT(TOTAL(v0.c0)) AS INTEGER)))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (TYPEOF(((v0.c0)<<(v0.c0)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (TYPEOF(((v0.c0)<<(v0.c0)))))) UNION ALL SELECT ALL * FROM v0 WHERE (((TYPEOF(((v0.c0)<<(v0.c0)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (LTRIM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (LTRIM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((LTRIM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)OR(v0.c0)))OR(ABS(DISTINCT v0.c0))))AND(TIME(v0.c0, v0.c0, v0.c0))))AND(((((v0.c0)AND(v0.c0)))OR(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)OR(v0.c0)))OR(ABS(DISTINCT v0.c0))))AND(TIME(v0.c0, v0.c0, v0.c0))))AND(((((v0.c0)AND(v0.c0)))OR(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)OR(v0.c0)))OR(ABS(DISTINCT v0.c0))))AND(TIME(v0.c0, v0.c0, v0.c0))))AND(((((v0.c0)AND(v0.c0)))OR(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(TOTAL(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(TOTAL(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(TOTAL(vt0.c0))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((((((CAST(vt0.c0 AS TEXT))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))))AND((+ (vt0.c0)))))OR(((v0.c0)IS('503235525')))))OR(CAST(0.4426355014886606 AS BLOB)))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (((((((((CAST(vt0.c0 AS TEXT))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))))AND((+ (vt0.c0)))))OR(((v0.c0)IS('503235525')))))OR(CAST(0.4426355014886606 AS BLOB)))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((((((((CAST(vt0.c0 AS TEXT))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))))AND((+ (vt0.c0)))))OR(((v0.c0)IS('503235525')))))OR(CAST(0.4426355014886606 AS BLOB)))) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (x'81a0') UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (x'81a0'))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((x'81a0') ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 WHERE (CASE WHEN (NOT (vt0.c0)) THEN LOWER(DISTINCT vt0.c0) ELSE (((v0.c0, vt0.c0, v0.c0))<=((v0.c0, v0.c0, vt0.c0))) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE ((NOT (CASE WHEN (NOT (vt0.c0)) THEN LOWER(DISTINCT vt0.c0) ELSE (((v0.c0, vt0.c0, v0.c0))<=((v0.c0, v0.c0, vt0.c0))) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((CASE WHEN (NOT (vt0.c0)) THEN LOWER(DISTINCT vt0.c0) ELSE (((v0.c0, vt0.c0, v0.c0))<=((v0.c0, v0.c0, vt0.c0))) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON ((((((v0.c0) NOTNULL))AND((- (vt0.c0)))))AND(TYPEOF(vt0.c0))) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON ((((((v0.c0) NOTNULL))AND((- (vt0.c0)))))AND(TYPEOF(vt0.c0))) GROUP BY v0.c0, vt0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON ((((((v0.c0) NOTNULL))AND((- (vt0.c0)))))AND(TYPEOF(vt0.c0))) GROUP BY v0.c0, vt0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON ((((((v0.c0) NOTNULL))AND((- (vt0.c0)))))AND(TYPEOF(vt0.c0))) GROUP BY v0.c0, vt0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON ((((((v0.c0) NOTNULL))AND((- (vt0.c0)))))AND(TYPEOF(vt0.c0))) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON ((((((v0.c0) NOTNULL))AND((- (vt0.c0)))))AND(TYPEOF(vt0.c0))) GROUP BY v0.c0, vt0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON ((((((v0.c0) NOTNULL))AND((- (vt0.c0)))))AND(TYPEOF(vt0.c0))) GROUP BY v0.c0, vt0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON ((((((v0.c0) NOTNULL))AND((- (vt0.c0)))))AND(TYPEOF(vt0.c0))) GROUP BY v0.c0, vt0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON ((((((v0.c0) NOTNULL))AND((- (vt0.c0)))))AND(TYPEOF(vt0.c0))) GROUP BY v0.c0, vt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((1605320669 IN ())) NOTNULL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((1605320669 IN ())) NOTNULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((1605320669 IN ())) NOTNULL)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((v0.c0) IS TRUE) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((v0.c0) IS TRUE) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((v0.c0) IS TRUE) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (NULL) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (NULL))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((NULL) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0, v0.c0 HAVING v0.c0 UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0, v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0, v0.c0 HAVING v0.c0 UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0, v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0, v0.c0;
SELECT v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON json_type((vt0.c0 IN (vt0.c0)));
SELECT v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON json_type((vt0.c0 IN (vt0.c0))) WHERE ((~ (CAST(vt0.c0 AS TEXT)))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON json_type((vt0.c0 IN (vt0.c0))) WHERE ((NOT ((~ (CAST(vt0.c0 AS TEXT)))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON json_type((vt0.c0 IN (vt0.c0))) WHERE ((((~ (CAST(vt0.c0 AS TEXT)))) ISNULL));
SELECT v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON json_type((vt0.c0 IN (vt0.c0)));
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE (((vt0.c0)GLOB((~ (NULL))))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((NOT (((vt0.c0)GLOB((~ (NULL))))))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE (((((vt0.c0)GLOB((~ (NULL))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (vt0.c0) AND (vt0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((NOT (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC)) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(SUM(COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(SUM(COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(SUM(COUNT(*)))) ISNULL);
SELECT vt0.c0, v0.c0 FROM v0, vt0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ('-806206301') UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT ('-806206301'))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((('-806206301') ISNULL));
SELECT vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(CAST(v0.c0 AS REAL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(CAST(v0.c0 AS REAL)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(CAST(v0.c0 AS REAL))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(CAST(v0.c0 AS REAL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(CAST(v0.c0 AS REAL)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(CAST(v0.c0 AS REAL))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))<>(((NOT ('ks)-')))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))!=(((NOT ('ks)-')))))))) UNION ALL SELECT * FROM v0 WHERE ((((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))<>(((NOT ('ks)-')))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ('Q\n^9N[K-8') UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT ('Q\n^9N[K-8'))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((('Q\n^9N[K-8') ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))%(CASE WHEN NULL THEN v0.c0 END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))%(CASE WHEN NULL THEN v0.c0 END))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))%(CASE WHEN NULL THEN v0.c0 END))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0 IN (vt0.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND ((vt0.c0 IN ()))) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0 IN (vt0.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND ((vt0.c0 IN ()))) GROUP BY vt0.c0, v0.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0 IN (vt0.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND ((vt0.c0 IN ()))) GROUP BY vt0.c0, v0.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0 IN (vt0.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND ((vt0.c0 IN ()))) GROUP BY vt0.c0, v0.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE (0.5522817970187044) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (0.5522817970187044))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((0.5522817970187044) ISNULL));
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) IS TRUE) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) IS TRUE) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) IS TRUE) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((((((((((v0.c0, v0.c0, 1221970910, vt0.c0, 'Ev3)iX‟'))<>((v0.c0, v0.c0, 'Ev3)iX‟', vt0.c0, v0.c0))))AND(((v0.c0)GLOB(vt0.c0)))))OR(CASE 669738448  WHEN vt0.c0 THEN 'P' END)))OR(v0.c0 COLLATE NOCASE)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND ('0.5522817970187044')))) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((((((((((v0.c0, v0.c0, 1221970910, vt0.c0, 'Ev3)iX‟'))<>((v0.c0, v0.c0, 'Ev3)iX‟', vt0.c0, v0.c0))))AND(((v0.c0)GLOB(vt0.c0)))))OR(CASE 669738448  WHEN vt0.c0 THEN 'P' END)))OR(v0.c0 COLLATE NOCASE)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND ('0.5522817970187044')))) GROUP BY v0.c0, vt0.c0 HAVING '' UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((((((((((v0.c0, v0.c0, 1221970910, vt0.c0, 'Ev3)iX‟'))<>((v0.c0, v0.c0, 'Ev3)iX‟', vt0.c0, v0.c0))))AND(((v0.c0)GLOB(vt0.c0)))))OR(CASE 669738448  WHEN vt0.c0 THEN 'P' END)))OR(v0.c0 COLLATE NOCASE)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND ('0.5522817970187044')))) GROUP BY v0.c0, vt0.c0 HAVING (NOT ('')) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((((((((((v0.c0, v0.c0, 1221970910, vt0.c0, 'Ev3)iX‟'))!=((v0.c0, v0.c0, 'Ev3)iX‟', vt0.c0, v0.c0))))AND(((v0.c0)GLOB(vt0.c0)))))OR(CASE 669738448  WHEN vt0.c0 THEN 'P' END)))OR(v0.c0 COLLATE NOCASE)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND ('0.5522817970187044')))) GROUP BY v0.c0, vt0.c0 HAVING (('') ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((((((((((v0.c0, v0.c0, 1221970910, vt0.c0, 'Ev3)iX‟'))<>((v0.c0, v0.c0, 'Ev3)iX‟', vt0.c0, v0.c0))))AND(((v0.c0)GLOB(vt0.c0)))))OR(CASE 669738448  WHEN vt0.c0 THEN 'P' END)))OR(v0.c0 COLLATE NOCASE)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND ('0.5522817970187044')))) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((((((((((v0.c0, v0.c0, 1221970910, vt0.c0, 'Ev3)iX‟'))<>((v0.c0, v0.c0, 'Ev3)iX‟', vt0.c0, v0.c0))))AND(((v0.c0)GLOB(vt0.c0)))))OR(CASE 669738448  WHEN vt0.c0 THEN 'P' END)))OR(v0.c0 COLLATE NOCASE)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND ('0.5522817970187044')))) GROUP BY v0.c0, vt0.c0 HAVING '' UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((((((((((v0.c0, v0.c0, 1221970910, vt0.c0, 'Ev3)iX‟'))<>((v0.c0, v0.c0, 'Ev3)iX‟', vt0.c0, v0.c0))))AND(((v0.c0)GLOB(vt0.c0)))))OR(CASE 669738448  WHEN vt0.c0 THEN 'P' END)))OR(v0.c0 COLLATE NOCASE)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND ('0.5522817970187044')))) GROUP BY v0.c0, vt0.c0 HAVING (NOT ('')) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((((((((((v0.c0, v0.c0, 1221970910, vt0.c0, 'Ev3)iX‟'))!=((v0.c0, v0.c0, 'Ev3)iX‟', vt0.c0, v0.c0))))AND(((v0.c0)GLOB(vt0.c0)))))OR(CASE 669738448  WHEN vt0.c0 THEN 'P' END)))OR(v0.c0 COLLATE NOCASE)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND ('0.5522817970187044')))) GROUP BY v0.c0, vt0.c0 HAVING (('') ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((((((((((v0.c0, v0.c0, 1221970910, vt0.c0, 'Ev3)iX‟'))<>((v0.c0, v0.c0, 'Ev3)iX‟', vt0.c0, v0.c0))))AND(((v0.c0)GLOB(vt0.c0)))))OR(CASE 669738448  WHEN vt0.c0 THEN 'P' END)))OR(v0.c0 COLLATE NOCASE)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND ('0.5522817970187044')))) GROUP BY v0.c0, vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((LIKELY(DISTINCT vt0.c0))OR(((vt0.c0) ISNULL))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((LIKELY(DISTINCT vt0.c0))OR(((vt0.c0) ISNULL))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((LIKELY(DISTINCT vt0.c0))OR(((vt0.c0) ISNULL))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0)<<(v0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0)<<(v0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)<<(v0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE (vt0.c0) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (vt0.c0))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING MIN(MAX(AVG(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (MIN(MAX(AVG(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((MIN(MAX(AVG(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((-1.780960364E9) BETWEEN (v0.c0) AND (v0.c0)))LIKE(((((((((((((((((v0.c0)AND('gDOsde\r왿')))AND('685024532')))AND(1482506516)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((-1.780960364E9) BETWEEN (v0.c0) AND (v0.c0)))LIKE(((((((((((((((((v0.c0)AND('gDOsde\r왿')))AND('685024532')))AND(1482506516)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((-1.780960364E9) BETWEEN (v0.c0) AND (v0.c0)))LIKE(((((((((((((((((v0.c0)AND('gDOsde\r왿')))AND('685024532')))AND(1482506516)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON CAST(NULL AS BLOB);
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON CAST(NULL AS BLOB) WHERE (((IFNULL(vt0.c0, v0.c0))<(((v0.c0)IS(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON CAST(NULL AS BLOB) WHERE ((NOT (((IFNULL(vt0.c0, v0.c0))<(((v0.c0)IS(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON CAST(NULL AS BLOB) WHERE (((((IFNULL(vt0.c0, v0.c0))<(((v0.c0)IS(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON CAST(NULL AS BLOB);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(COUNT(*) COLLATE BINARY) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(COUNT(*) COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(COUNT(*) COLLATE BINARY)) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (x'9365') UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (x'9365'))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((x'9365') ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS REAL) COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS REAL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)>(v0.c0))) BETWEEN ('\n ]Uz' COLLATE RTRIM) AND (CASE v0.c0  WHEN NULL THEN v0.c0 ELSE x'' END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)>(v0.c0))) BETWEEN ('\n ]Uz' COLLATE RTRIM) AND (CASE v0.c0  WHEN NULL THEN v0.c0 ELSE x'' END))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)>(v0.c0))) BETWEEN ('\n ]Uz' COLLATE RTRIM) AND (CASE v0.c0  WHEN NULL THEN v0.c0 ELSE x'' END))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((GROUP_CONCAT(vt0.c0))OR(SUM(COUNT(vt0.c0)))))OR(COUNT(TOTAL(AVG(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((GROUP_CONCAT(vt0.c0))OR(SUM(COUNT(vt0.c0)))))OR(COUNT(TOTAL(AVG(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((GROUP_CONCAT(vt0.c0))OR(SUM(COUNT(vt0.c0)))))OR(COUNT(TOTAL(AVG(vt0.c0)))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (CAST(v0.c0 AS TEXT)))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (CAST(v0.c0 AS TEXT)))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (CAST(v0.c0 AS TEXT)))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT vt0.c0, v0.c0 FROM v0 FULL OUTER JOIN vt0 ON TRIM(DISTINCT TYPEOF(DISTINCT NULL), ((v0.c0)<<(v0.c0))) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0 FULL OUTER JOIN vt0 ON TRIM(DISTINCT TYPEOF(DISTINCT NULL), ((v0.c0)<<(v0.c0))) GROUP BY vt0.c0, v0.c0 HAVING SUM(MAX(MAX(AVG(MIN(COUNT(COUNT(COUNT(AVG(COUNT(v0.c0)))))))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0 FULL OUTER JOIN vt0 ON TRIM(DISTINCT TYPEOF(DISTINCT NULL), ((v0.c0)<<(v0.c0))) GROUP BY vt0.c0, v0.c0 HAVING (NOT (SUM(MAX(MAX(AVG(MIN(COUNT(COUNT(COUNT(AVG(COUNT(v0.c0)))))))))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0 FULL OUTER JOIN vt0 ON TRIM(DISTINCT TYPEOF(DISTINCT NULL), ((v0.c0)<<(v0.c0))) GROUP BY vt0.c0, v0.c0 HAVING ((SUM(MAX(MAX(AVG(MIN(COUNT(COUNT(COUNT(AVG(COUNT(v0.c0))))))))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT NULL))/(CAST(vt0.c0 AS NUMERIC)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT NULL))/(CAST(vt0.c0 AS NUMERIC)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT NULL))/(CAST(vt0.c0 AS NUMERIC)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ('') UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (''))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((('') ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (vt0.c0) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (vt0.c0))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((vt0.c0) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(vt0.c0)) NOTNULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(vt0.c0)) NOTNULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(vt0.c0)) NOTNULL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(vt0.c0)) NOTNULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(vt0.c0)) NOTNULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(vt0.c0)) NOTNULL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (((((vt0.c0))=((v0.c0))))&(CAST(vt0.c0 AS BLOB)));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON (((((vt0.c0))==((v0.c0))))&(CAST(vt0.c0 AS BLOB))) WHERE ((- (((v0.c0) IS TRUE)))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN v0 ON (((((vt0.c0))==((v0.c0))))&(CAST(vt0.c0 AS BLOB))) WHERE ((NOT ((- (((v0.c0) IS TRUE)))))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN v0 ON (((((vt0.c0))=((v0.c0))))&(CAST(vt0.c0 AS BLOB))) WHERE ((((- (((v0.c0) IS TRUE)))) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (((((vt0.c0))=((v0.c0))))&(CAST(vt0.c0 AS BLOB)));
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((((v0.c0) NOTNULL) IN ())) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((NOT ((((v0.c0) NOTNULL) IN ())))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((((((v0.c0) NOTNULL) IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 WHERE ((((vt0.c0)) BETWEEN ((((((((((v0.c0)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))) AND ((((v0.c0) NOTNULL))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((((((((v0.c0)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))) AND ((((v0.c0) NOTNULL))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE ((((((vt0.c0)) BETWEEN ((((((((((v0.c0)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))) AND ((((v0.c0) NOTNULL))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE WHEN MIN(v0.c0) THEN ((((v0.c0)AND(COUNT(*))))AND(COUNT(v0.c0))) WHEN ((COUNT(v0.c0))==('')) THEN COUNT(*) WHEN SUM(MAX(MAX(AVG(COUNT(MIN(COUNT(*))))))) THEN COUNT(*) END UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE WHEN MIN(v0.c0) THEN ((((v0.c0)AND(COUNT(*))))AND(COUNT(v0.c0))) WHEN ((COUNT(v0.c0))==('')) THEN COUNT(*) WHEN SUM(MAX(MAX(AVG(COUNT(MIN(COUNT(*))))))) THEN COUNT(*) END)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE WHEN MIN(v0.c0) THEN ((((v0.c0)AND(COUNT(*))))AND(COUNT(v0.c0))) WHEN ((COUNT(v0.c0))=('')) THEN COUNT(*) WHEN SUM(MAX(MAX(AVG(COUNT(MIN(COUNT(*))))))) THEN COUNT(*) END) ISNULL);
SELECT v0.c0 FROM vt0, v0;
SELECT ALL v0.c0 FROM vt0, v0 WHERE (((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END)*(((vt0.c0)%('963553307'))))) UNION ALL SELECT v0.c0 FROM vt0, v0 WHERE ((NOT (((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END)*(((vt0.c0)%('963553307'))))))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 WHERE (((((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END)*(((vt0.c0)%('963553307'))))) ISNULL));
SELECT v0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((~ (((vt0.c0)IS(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((~ (((vt0.c0)IS(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((~ (((vt0.c0)IS(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(MIN(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(MIN(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(MIN(v0.c0))) ISNULL);
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (((CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END)|(CAST(v0.c0 AS REAL)))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT (((CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END)|(CAST(v0.c0 AS REAL)))))) UNION ALL SELECT * FROM v0, vt0 WHERE (((((CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END)|(CAST(v0.c0 AS REAL)))) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0) BETWEEN (x'') AND (v0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0) BETWEEN (x'') AND (v0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) BETWEEN (x'') AND (v0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0 FROM vt0 NOT INDEXED, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((((((((((((v0.c0)AND(NULL)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c0))))<((v0.c0 COLLATE BINARY)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT ((((((((((((v0.c0)AND(NULL)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c0))))<((v0.c0 COLLATE BINARY)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE ((((((((((((((v0.c0)AND(NULL)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c0))))<((v0.c0 COLLATE BINARY)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED, v0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING NULL UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((NULL) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING NULL UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((NULL) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((v0.c0 COLLATE BINARY)||((+ (v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((v0.c0 COLLATE BINARY)||((+ (v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE (((((v0.c0 COLLATE BINARY)||((+ (v0.c0))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(SQLITE_VERSION() AS BLOB)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(SQLITE_VERSION() AS BLOB)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST(SQLITE_VERSION() AS BLOB)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING TOTAL(MIN(TOTAL(AVG(SUM(v0.c0))))) COLLATE RTRIM UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (TOTAL(MIN(TOTAL(AVG(SUM(v0.c0))))) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((TOTAL(MIN(TOTAL(AVG(SUM(v0.c0))))) COLLATE RTRIM) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)LIKE(vt0.c0)) IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)LIKE(vt0.c0)) IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)LIKE(vt0.c0)) IN ())) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)|(vt0.c0))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (CASE WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)|(vt0.c0))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (CASE WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)|(vt0.c0))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (CASE WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 WHERE (CAST(((v0.c0) NOTNULL) AS INTEGER)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT (CAST(((v0.c0) NOTNULL) AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((CAST(((v0.c0) NOTNULL) AS INTEGER)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(((v0.c0) NOT NULL)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(((v0.c0) NOT NULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(((v0.c0) NOT NULL))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(((v0.c0) NOT NULL)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(((v0.c0) NOT NULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(((v0.c0) NOT NULL))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((0.3601380540372573)OR(CAST(0Xffffffff9a6d52ab AS NUMERIC))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.16942319229752578 END)))AND(vt0.c0 COLLATE RTRIM)))OR(CAST(vt0.c0 AS REAL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((0.3601380540372573)OR(CAST(0xffffffff9a6d52ab AS NUMERIC))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.16942319229752578 END)))AND(vt0.c0 COLLATE RTRIM)))OR(CAST(vt0.c0 AS REAL)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((0.3601380540372573)OR(CAST(0Xffffffff9a6d52ab AS NUMERIC))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.16942319229752578 END)))AND(vt0.c0 COLLATE RTRIM)))OR(CAST(vt0.c0 AS REAL)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((((((DATETIME(v0.c0, v0.c0, vt0.c0))OR((- (v0.c0)))))OR(LIKE(v0.c0, v0.c0, '-'))))AND('(e[r{U7S')))OR(0.3601380540372573))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((((((((DATETIME(v0.c0, v0.c0, vt0.c0))OR((- (v0.c0)))))OR(LIKE(v0.c0, v0.c0, '-'))))AND('(e[r{U7S')))OR(0.3601380540372573))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((((((((DATETIME(v0.c0, v0.c0, vt0.c0))OR((- (v0.c0)))))OR(LIKE(v0.c0, v0.c0, '-'))))AND('(e[r{U7S')))OR(0.3601380540372573))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT v0.c0 FROM v0 CROSS JOIN vt0 ON ABS(DISTINCT v0.c0) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 CROSS JOIN vt0 ON ABS(DISTINCT v0.c0) WHERE (-8.28308092E8) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 CROSS JOIN vt0 ON ABS(DISTINCT v0.c0) WHERE ((NOT (-8.28308092E8))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 CROSS JOIN vt0 ON ABS(DISTINCT v0.c0) WHERE (((-8.28308092E8) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 CROSS JOIN vt0 ON ABS(DISTINCT v0.c0) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((MIN(SUM(v0.c0)))) BETWEEN ((MIN(v0.c0))) AND ((v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((MIN(SUM(v0.c0)))) BETWEEN ((MIN(v0.c0))) AND ((v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((MIN(SUM(v0.c0)))) BETWEEN ((MIN(v0.c0))) AND ((v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM vt0, v0;
SELECT v0.c0 FROM vt0, v0 WHERE (((ABS(DISTINCT vt0.c0)) IS TRUE)) UNION ALL SELECT v0.c0 FROM vt0, v0 WHERE ((NOT (((ABS(DISTINCT vt0.c0)) IS TRUE)))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 WHERE (((((ABS(DISTINCT vt0.c0)) IS TRUE)) ISNULL));
SELECT ALL v0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))LIKE(((((v0.c0)AND(vt0.c0)))OR(v0.c0))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (((CAST(vt0.c0 AS NUMERIC))LIKE(((((v0.c0)AND(vt0.c0)))OR(v0.c0))))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))LIKE(((((v0.c0)AND(vt0.c0)))OR(v0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((+ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((+ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((+ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(LIKELY(DISTINCT COUNT(MIN(COUNT(MIN(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(LIKELY(DISTINCT COUNT(MIN(COUNT(MIN(vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(LIKELY(DISTINCT COUNT(MIN(COUNT(MIN(vt0.c0))))))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))LIKE(((((0.07068386148096062)OR(vt0.c0)))OR(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))LIKE(((((0.07068386148096062)OR(vt0.c0)))OR(vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))LIKE(((((0.07068386148096062)OR(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((- (CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((NOT ((- (CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((((- (CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((+ (v0.c0))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (NULL))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT ((((+ (v0.c0))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (NULL))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((((+ (v0.c0))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (NULL))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON x'' GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON x'' GROUP BY v0.c0, vt0.c0 HAVING TOTAL(TOTAL(vt0.c0)) UNION ALL SELECT v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON x'' GROUP BY v0.c0, vt0.c0 HAVING (NOT (TOTAL(TOTAL(vt0.c0)))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON x'' GROUP BY v0.c0, vt0.c0 HAVING ((TOTAL(TOTAL(vt0.c0))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((((((v0.c0 IN ()))AND(((v0.c0)=(v0.c0)))))OR(v0.c0 COLLATE BINARY))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((((v0.c0 IN ()))AND(((v0.c0)=(v0.c0)))))OR(v0.c0 COLLATE BINARY))))) UNION ALL SELECT * FROM v0 WHERE ((((((((v0.c0 IN ()))AND(((v0.c0)=(v0.c0)))))OR(v0.c0 COLLATE BINARY))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (0.13143938914153042) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (0.13143938914153042))) UNION SELECT DISTINCT * FROM v0 WHERE (((0.13143938914153042) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (json_type(((vt0.c0) IS TRUE))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (json_type(((vt0.c0) IS TRUE))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((json_type(((vt0.c0) IS TRUE))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((('lp6/Prqh嬋') ISNULL)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((('lp6/Prqh嬋') ISNULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((('lp6/Prqh嬋') ISNULL)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((- (v0.c0))) IS TRUE)) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT ((((- (v0.c0))) IS TRUE)))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((((- (v0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((((((LIKELIHOOD(DISTINCT v0.c0, 0.02687677871963512))AND(((((v0.c0)AND(x'adaf')))OR(v0.c0)))))AND(((v0.c0)!=(v0.c0)))))AND(((v0.c0)/(v0.c0)))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((((LIKELIHOOD(DISTINCT v0.c0, 0.02687677871963512))AND(((((v0.c0)AND(x'adaf')))OR(v0.c0)))))AND(((v0.c0)!=(v0.c0)))))AND(((v0.c0)/(v0.c0)))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((((LIKELIHOOD(DISTINCT v0.c0, 0.02687677871963512))AND(((((v0.c0)AND(x'adaf')))OR(v0.c0)))))AND(((v0.c0)!=(v0.c0)))))AND(((v0.c0)/(v0.c0)))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((AVG(vt0.c0))&(GROUP_CONCAT(SUM(v0.c0)))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (((AVG(vt0.c0))&(GROUP_CONCAT(SUM(v0.c0)))))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((((AVG(vt0.c0))&(GROUP_CONCAT(SUM(v0.c0))))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)IS(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)IS(((((v0.c0)OR(v0.c0)))OR(v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)IS(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((IFNULL(DISTINCT v0.c0, NULL) IN ())) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((IFNULL(DISTINCT v0.c0, NULL) IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((IFNULL(DISTINCT v0.c0, NULL) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((GROUP_CONCAT(AVG(vt0.c0))) BETWEEN (AVG(MIN(AVG(TOTAL(vt0.c0))))) AND (vt0.c0))) IS TRUE) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((GROUP_CONCAT(AVG(vt0.c0))) BETWEEN (AVG(MIN(AVG(TOTAL(vt0.c0))))) AND (vt0.c0))) IS TRUE))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((GROUP_CONCAT(AVG(vt0.c0))) BETWEEN (AVG(MIN(AVG(TOTAL(vt0.c0))))) AND (vt0.c0))) IS TRUE)) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON (v0.c0 IN ()) COLLATE NOCASE;
SELECT v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON (v0.c0 IN ()) COLLATE NOCASE WHERE (((CAST('Ev3)iX‟' AS BLOB)) IS TRUE)) UNION ALL SELECT v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON (v0.c0 IN ()) COLLATE NOCASE WHERE ((NOT (((CAST('Ev3)iX‟' AS BLOB)) IS TRUE)))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON (v0.c0 IN ()) COLLATE NOCASE WHERE (((((CAST('Ev3)iX‟' AS BLOB)) IS TRUE)) ISNULL));
SELECT ALL v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON (v0.c0 IN ()) COLLATE NOCASE;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((- (''))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((- (''))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((- (''))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0 FROM vt0 CROSS JOIN v0 ON ((LOWER(DISTINCT vt0.c0))<(((vt0.c0) IS FALSE))) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 CROSS JOIN v0 ON ((LOWER(DISTINCT vt0.c0))<(((vt0.c0) IS FALSE))) WHERE (((((((vt0.c0)AND(vt0.c0)))AND(''))) IS FALSE)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0 CROSS JOIN v0 ON ((LOWER(DISTINCT vt0.c0))<(((vt0.c0) IS FALSE))) WHERE ((NOT (((((((vt0.c0)AND(vt0.c0)))AND(''))) IS FALSE)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0 CROSS JOIN v0 ON ((LOWER(DISTINCT vt0.c0))<(((vt0.c0) IS FALSE))) WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(''))) IS FALSE)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0 CROSS JOIN v0 ON ((LOWER(DISTINCT vt0.c0))<(((vt0.c0) IS FALSE))) GROUP BY v0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING AVG(COUNT(*) COLLATE BINARY) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (AVG(COUNT(*) COLLATE BINARY))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((AVG(COUNT(*) COLLATE BINARY)) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)OR((vt0.c0 IN (vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0 COLLATE NOCASE)OR((vt0.c0 IN (vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0 COLLATE NOCASE)OR((vt0.c0 IN (vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((0Xffffffffe7adccf2 IN (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((0Xffffffffe7adccf2 IN (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((0Xffffffffe7adccf2 IN (vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (vt0.c0) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (vt0.c0))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING MIN(MIN(v0.c0)) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (MIN(MIN(v0.c0)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((MIN(MIN(v0.c0))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED WHERE ((CAST(vt0.c0 AS TEXT) IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((CAST(vt0.c0 AS TEXT) IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((CAST(vt0.c0 AS TEXT) IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (x'') GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (x''))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((x'') ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING CAST(SUM(vt0.c0) AS TEXT) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (CAST(SUM(vt0.c0) AS TEXT))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((CAST(SUM(vt0.c0) AS TEXT)) ISNULL);
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING CAST(SUM(vt0.c0) AS TEXT) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (CAST(SUM(vt0.c0) AS TEXT))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((CAST(SUM(vt0.c0) AS TEXT)) ISNULL);
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT MIN(NULL) FROM v0 ORDER BY ((((((((((v0.c0) IS TRUE))OR(((v0.c0)-(v0.c0)))))OR(x'')))AND(JULIANDAY(v0.c0, v0.c0, v0.c0))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ((((v0.c0, vt0.c0, '-674849340')) NOT BETWEEN ((((((((((v0.c0)AND(x'f570')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), TOTAL_CHANGES(), (((v0.c0, v0.c0, v0.c0))<((vt0.c0, vt0.c0, v0.c0))))) AND ((x'd1ba', '-1170495362', ((v0.c0)<>(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT ((((v0.c0, vt0.c0, '-674849340')) NOT BETWEEN ((((((((((v0.c0)AND(x'f570')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), TOTAL_CHANGES(), (((v0.c0, v0.c0, v0.c0))<((vt0.c0, vt0.c0, v0.c0))))) AND ((x'd1ba', '-1170495362', ((v0.c0)!=(vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((((((v0.c0, vt0.c0, '-674849340')) NOT BETWEEN ((((((((((v0.c0)AND(x'f570')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), TOTAL_CHANGES(), (((v0.c0, v0.c0, v0.c0))<((vt0.c0, vt0.c0, v0.c0))))) AND ((x'd1ba', '-1170495362', ((v0.c0)<>(vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((((((((((x'' COLLATE NOCASE)OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE 0.942777995286109 END)))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))AND((0xffffffffe77f5c71 IN ()))))AND(x'5ad4' COLLATE RTRIM)))OR(((v0.c0)<(v0.c0)))))OR((v0.c0 IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((((((((((x'' COLLATE NOCASE)OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE 0.942777995286109 END)))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))AND((0Xffffffffe77f5c71 IN ()))))AND(x'5ad4' COLLATE RTRIM)))OR(((v0.c0)<(v0.c0)))))OR((v0.c0 IN ())))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((((((((((x'' COLLATE NOCASE)OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE 0.942777995286109 END)))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))AND((0xffffffffe77f5c71 IN ()))))AND(x'5ad4' COLLATE RTRIM)))OR(((v0.c0)<(v0.c0)))))OR((v0.c0 IN ())))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 NOT INDEXED WHERE (CASE WHEN vt0.c0 THEN x'7a82' ELSE vt0.c0 END COLLATE BINARY) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN x'7a82' ELSE vt0.c0 END COLLATE BINARY))) UNION ALL SELECT * FROM v0, vt0 WHERE (((CASE WHEN vt0.c0 THEN x'7a82' ELSE vt0.c0 END COLLATE BINARY) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE (x'') UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE (NULL) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT (NULL))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING TRIM(DISTINCT AVG(v0.c0)) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (TRIM(DISTINCT AVG(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((TRIM(DISTINCT AVG(v0.c0))) ISNULL);
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING TRIM(DISTINCT AVG(v0.c0)) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (TRIM(DISTINCT AVG(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((TRIM(DISTINCT AVG(v0.c0))) ISNULL);
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CASE x'' COLLATE NOCASE  WHEN ((v0.c0) IS TRUE) THEN ((v0.c0)%(v0.c0)) END) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE x'' COLLATE NOCASE  WHEN ((v0.c0) IS TRUE) THEN ((v0.c0)%(v0.c0)) END))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CASE x'' COLLATE NOCASE  WHEN ((v0.c0) IS TRUE) THEN ((v0.c0)%(v0.c0)) END) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON CASE ((v0.c0)AND(v0.c0))  WHEN ((0.6041422337728193) BETWEEN (vt0.c0) AND (v0.c0)) THEN v0.c0 ELSE ((v0.c0)==(v0.c0)) END;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON CASE ((v0.c0)AND(v0.c0))  WHEN ((0.6041422337728193) BETWEEN (vt0.c0) AND (v0.c0)) THEN v0.c0 ELSE ((v0.c0)=(v0.c0)) END WHERE ((NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON CASE ((v0.c0)AND(v0.c0))  WHEN ((0.6041422337728193) BETWEEN (vt0.c0) AND (v0.c0)) THEN v0.c0 ELSE ((v0.c0)==(v0.c0)) END WHERE ((NOT ((NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON CASE ((v0.c0)AND(v0.c0))  WHEN ((0.6041422337728193) BETWEEN (vt0.c0) AND (v0.c0)) THEN v0.c0 ELSE ((v0.c0)==(v0.c0)) END WHERE ((((NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON CASE ((v0.c0)AND(v0.c0))  WHEN ((0.6041422337728193) BETWEEN (vt0.c0) AND (v0.c0)) THEN v0.c0 ELSE ((v0.c0)==(v0.c0)) END;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) AND ((CASE WHEN v0.c0 THEN x'' ELSE v0.c0 END)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) AND ((CASE WHEN v0.c0 THEN x'' ELSE v0.c0 END)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) AND ((CASE WHEN v0.c0 THEN x'' ELSE v0.c0 END)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(SUM(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(SUM(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(SUM(v0.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)AND((NOT (vt0.c0)))))AND((NULL IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)AND((NOT (vt0.c0)))))AND((NULL IN ())))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)AND((NOT (vt0.c0)))))AND((NULL IN ())))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN v0 ON (((~ (vt0.c0))) NOT BETWEEN (v0.c0) AND ((- (vt0.c0))));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN v0 ON (((~ (vt0.c0))) NOT BETWEEN (v0.c0) AND ((- (vt0.c0)))) WHERE (x'') UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN v0 ON (((~ (vt0.c0))) NOT BETWEEN (v0.c0) AND ((- (vt0.c0)))) WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN v0 ON (((~ (vt0.c0))) NOT BETWEEN (v0.c0) AND ((- (vt0.c0)))) WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN v0 ON (((~ (vt0.c0))) NOT BETWEEN (v0.c0) AND ((- (vt0.c0))));
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 WHERE (SQLITE_SOURCE_ID()) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((NOT (SQLITE_SOURCE_ID()))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((SQLITE_SOURCE_ID()) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(COUNT(*) COLLATE BINARY) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(COUNT(*) COLLATE BINARY))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(COUNT(*) COLLATE BINARY)) ISNULL);
SELECT v0.c0 FROM v0 NOT INDEXED;
SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0) NOTNULL))OR((- (v0.c0)))))OR(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0) NOTNULL))OR((- (v0.c0)))))OR(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((((v0.c0) NOTNULL))OR((- (v0.c0)))))OR(v0.c0))) ISNULL));
SELECT v0.c0 FROM v0 NOT INDEXED;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)<<(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(v0.c0)), v0.c0, (v0.c0 IN (v0.c0))))<>(((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), (((v0.c0, v0.c0, NULL, v0.c0, v0.c0))<>((v0.c0, v0.c0, 529954922, v0.c0, v0.c0))), ((((0.16771152205461093)AND(v0.c0)))AND(v0.c0)), (- (v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 0.2522529410565628 THEN v0.c0 ELSE v0.c0 END)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)<<(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(v0.c0)), v0.c0, (v0.c0 IN (v0.c0))))<>(((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), (((v0.c0, v0.c0, NULL, v0.c0, v0.c0))!=((v0.c0, v0.c0, 529954922, v0.c0, v0.c0))), ((((0.16771152205461093)AND(v0.c0)))AND(v0.c0)), (- (v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 0.2522529410565628 THEN v0.c0 ELSE v0.c0 END)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)<<(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(v0.c0)), v0.c0, (v0.c0 IN (v0.c0))))!=(((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), (((v0.c0, v0.c0, NULL, v0.c0, v0.c0))<>((v0.c0, v0.c0, 529954922, v0.c0, v0.c0))), ((((0.16771152205461093)AND(v0.c0)))AND(v0.c0)), (- (v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 0.2522529410565628 THEN v0.c0 ELSE v0.c0 END)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE ((CAST(v0.c0 AS TEXT) IN ())) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((NOT ((CAST(v0.c0 AS TEXT) IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE ((((CAST(v0.c0 AS TEXT) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING MIN(MAX(vt0.c0)) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (MIN(MAX(vt0.c0)))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 NOT INDEXED GROUP BY vt0.c0, v0.c0 HAVING ((MIN(MAX(vt0.c0))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ())) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((CAST(vt0.c0 AS TEXT) IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((((CAST(vt0.c0 AS TEXT) IN ())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0 COLLATE BINARY))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((NOT (v0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((NOT (v0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)<(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)<(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)<(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON (NOT (((vt0.c0)AND(v0.c0)))) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON (NOT (((vt0.c0)AND(v0.c0)))) GROUP BY v0.c0, vt0.c0 HAVING SUM(GROUP_CONCAT(v0.c0)) COLLATE NOCASE UNION ALL SELECT v0.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON (NOT (((vt0.c0)AND(v0.c0)))) GROUP BY v0.c0, vt0.c0 HAVING (NOT (SUM(GROUP_CONCAT(v0.c0)) COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON (NOT (((vt0.c0)AND(v0.c0)))) GROUP BY v0.c0, vt0.c0 HAVING ((SUM(GROUP_CONCAT(v0.c0)) COLLATE NOCASE) ISNULL);
SELECT v0.c0, vt0.c0 FROM vt0, v0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((CASE vt0.c0  WHEN x'' THEN v0.c0 ELSE v0.c0 END) BETWEEN (vt0.c0 COLLATE BINARY) AND ((- (NULL))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (((CASE vt0.c0  WHEN x'' THEN v0.c0 ELSE v0.c0 END) BETWEEN (vt0.c0 COLLATE BINARY) AND ((- (NULL))))))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((CASE vt0.c0  WHEN x'' THEN v0.c0 ELSE v0.c0 END) BETWEEN (vt0.c0 COLLATE BINARY) AND ((- (NULL))))) ISNULL));
SELECT v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt0 ON (((((vt0.c0 IN (vt0.c0, vt0.c0)))AND(((((x'1cb3eba7')AND(v0.c0)))AND(v0.c0)))))OR(NULL));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt0 ON (((((vt0.c0 IN (vt0.c0, vt0.c0)))AND(((((x'1cb3eba7')AND(v0.c0)))AND(v0.c0)))))OR(NULL)) WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt0 ON (((((vt0.c0 IN (vt0.c0, vt0.c0)))AND(((((x'1cb3eba7')AND(v0.c0)))AND(v0.c0)))))OR(NULL)) WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt0 ON (((((vt0.c0 IN (vt0.c0, vt0.c0)))AND(((((x'1cb3eba7')AND(v0.c0)))AND(v0.c0)))))OR(NULL)) WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt0 ON (((((vt0.c0 IN (vt0.c0, vt0.c0)))AND(((((x'1cb3eba7')AND(v0.c0)))AND(v0.c0)))))OR(NULL));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CHAR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CHAR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CHAR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(v0.c0))*(GROUP_CONCAT(x''))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((TOTAL(v0.c0))*(GROUP_CONCAT(x''))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((TOTAL(v0.c0))*(GROUP_CONCAT(x'')))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(v0.c0))*(GROUP_CONCAT(x''))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((TOTAL(v0.c0))*(GROUP_CONCAT(x''))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((TOTAL(v0.c0))*(GROUP_CONCAT(x'')))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM v0, vt0;
SELECT vt0.c0 FROM v0, vt0 WHERE (NULL) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((NOT (NULL))) UNION ALL SELECT vt0.c0 FROM v0, vt0 WHERE (((NULL) ISNULL));
SELECT vt0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ('-2102595599') UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ('-2102595599'))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE ((('-2102595599') ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)<>(v0.c0)) IN (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)<>(v0.c0)) IN (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0)!=(v0.c0)) IN (v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(MIN(TOTAL(MAX(AVG(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(MIN(TOTAL(MAX(AVG(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(MIN(TOTAL(MAX(AVG(v0.c0)))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ('<A!z') UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ('<A!z'))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((('<A!z') ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE (vt0.c0) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((json_remove(vt0.c0, v0.c0)) NOT NULL)) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (((json_remove(vt0.c0, v0.c0)) NOT NULL)))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((json_remove(vt0.c0, v0.c0)) NOT NULL)) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(MIN(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(MIN(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(MIN(vt0.c0))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(((x'')<=(vt0.c0)) AS NUMERIC)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST(((x'')<=(vt0.c0)) AS NUMERIC)))) UNION ALL SELECT * FROM vt0 WHERE (((CAST(((x'')<=(vt0.c0)) AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ((((v0.c0 IN ()))>(UPPER(vt0.c0)))) UNION SELECT DISTINCT * FROM vt0, v0 NOT INDEXED WHERE ((NOT ((((v0.c0 IN ()))>(UPPER(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((((((v0.c0 IN ()))>(UPPER(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)OR((vt0.c0 IN ()))))AND((+ (vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))))AND(vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((((vt0.c0)OR((vt0.c0 IN ()))))AND((+ (vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))))AND(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0)OR((vt0.c0 IN ()))))AND((+ (vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))))AND(vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0 COLLATE RTRIM)OR((((MIN(TOTAL(MIN(TOTAL(MAX(vt0.c0)))))))<((AVG(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((vt0.c0 COLLATE RTRIM)OR((((MIN(TOTAL(MIN(TOTAL(MAX(vt0.c0)))))))<((AVG(vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0 COLLATE RTRIM)OR((((MIN(TOTAL(MIN(TOTAL(MAX(vt0.c0)))))))<((AVG(vt0.c0))))))) ISNULL);
SELECT ALL MAX(CASE (v0.c0 IN ())  WHEN ((v0.c0) IS TRUE) THEN (v0.c0 IN (v0.c0, 0.4018562780827284)) WHEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN v0.c0 COLLATE RTRIM THEN CAST(v0.c0 AS INTEGER) END) FROM v0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((NOT (v0.c0))))<((LIKELY(DISTINCT v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((((NOT (v0.c0))))<((LIKELY(DISTINCT v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((NOT (v0.c0))))<((LIKELY(DISTINCT v0.c0))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (HEX(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE '-505235549' END)) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (HEX(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE '-505235549' END)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((HEX(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE '-505235549' END)) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)||(((vt0.c0) ISNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)||(((vt0.c0) ISNULL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)||(((vt0.c0) ISNULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(TOTAL(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(TOTAL(v0.c0))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0)))) NOT NULL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0)))) NOT NULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))) NOT NULL)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>(((vt0.c0) ISNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>(((vt0.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>(((vt0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((0.5486284197246081) IS FALSE)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((0.5486284197246081) IS FALSE)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((0.5486284197246081) IS FALSE)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(((v0.c0)<<(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(((v0.c0)<<(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(((v0.c0)<<(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(((v0.c0)<<(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(((v0.c0)<<(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(((v0.c0)<<(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM vt0 CROSS JOIN v0 ON (((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))))>(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN 0.7686183754631333 THEN v0.c0 ELSE vt0.c0 END));
SELECT * FROM vt0 CROSS JOIN v0 ON (((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))))>(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN 0.7686183754631333 THEN v0.c0 ELSE vt0.c0 END)) WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0)GLOB(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN v0 ON (((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))))>(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN 0.7686183754631333 THEN v0.c0 ELSE vt0.c0 END)) WHERE ((NOT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0)GLOB(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN v0 ON (((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))))>(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN 0.7686183754631333 THEN v0.c0 ELSE vt0.c0 END)) WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0)GLOB(vt0.c0))))) ISNULL));
SELECT * FROM vt0 CROSS JOIN v0 ON (((((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))))>(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN 0.7686183754631333 THEN v0.c0 ELSE vt0.c0 END));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'' END IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'' END IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'' END IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((v0.c0)=(v0.c0))) ISNULL)) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (((((v0.c0)=(v0.c0))) ISNULL)))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((((v0.c0)=(v0.c0))) ISNULL)) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(MAX(v0.c0) COLLATE NOCASE) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(MAX(v0.c0) COLLATE NOCASE))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(MAX(v0.c0) COLLATE NOCASE)) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((v0.c0)>=(vt0.c0))) NOT NULL)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (((((v0.c0)>=(vt0.c0))) NOT NULL)))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((((v0.c0)>=(vt0.c0))) NOT NULL)) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((- (vt0.c0))) BETWEEN (((vt0.c0) ISNULL)) AND ((NOT (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((- (vt0.c0))) BETWEEN (((vt0.c0) ISNULL)) AND ((NOT (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((- (vt0.c0))) BETWEEN (((vt0.c0) ISNULL)) AND ((NOT (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0)<=(v0.c0)))LIKE(GROUP_CONCAT(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((v0.c0)<=(v0.c0)))LIKE(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((v0.c0)<=(v0.c0)))LIKE(GROUP_CONCAT(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0)<=(v0.c0)))LIKE(GROUP_CONCAT(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((v0.c0)<=(v0.c0)))LIKE(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((v0.c0)<=(v0.c0)))LIKE(GROUP_CONCAT(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((v0.c0)>>(v0.c0)) COLLATE NOCASE) UNION ALL SELECT * FROM v0 WHERE ((NOT (((v0.c0)>>(v0.c0)) COLLATE NOCASE))) UNION ALL SELECT * FROM v0 WHERE (((((v0.c0)>>(v0.c0)) COLLATE NOCASE) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE (((LOWER(0.8514533846145816)) NOT BETWEEN (load_extension(vt0.c0, v0.c0)) AND (v0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((NOT (((LOWER(0.8514533846145816)) NOT BETWEEN (load_extension(vt0.c0, v0.c0)) AND (v0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE (((((LOWER(0.8514533846145816)) NOT BETWEEN (load_extension(vt0.c0, v0.c0)) AND (v0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), (v0.c0 IN ()), NULL)) AND ((v0.c0 COLLATE NOCASE, (- (v0.c0)), (v0.c0 IN ()))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) BETWEEN (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), (v0.c0 IN ()), NULL)) AND ((v0.c0 COLLATE NOCASE, (- (v0.c0)), (v0.c0 IN ()))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) BETWEEN (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), (v0.c0 IN ()), NULL)) AND ((v0.c0 COLLATE NOCASE, (- (v0.c0)), (v0.c0 IN ()))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (- (TOTAL(MIN(SUM(MAX(vt0.c0)))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT ((- (TOTAL(MIN(SUM(MAX(vt0.c0)))))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (((- (TOTAL(MIN(SUM(MAX(vt0.c0))))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0)+(vt0.c0)))AND((((vt0.c0))>=((vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0)+(vt0.c0)))AND((((vt0.c0))>=((vt0.c0)))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)+(vt0.c0)))AND((((vt0.c0))>=((vt0.c0)))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (x'c361') UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (x'c361'))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((x'c361') ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=((((vt0.c0) ISNULL)))) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=((((vt0.c0) ISNULL)))) WHERE ((NOT ((- ('9]मt雉WZ'))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=((((vt0.c0) ISNULL)))) WHERE ((NOT ((NOT ((- ('9]मt雉WZ'))))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=((((vt0.c0) ISNULL)))) WHERE ((((NOT ((- ('9]मt雉WZ'))))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=((((vt0.c0) ISNULL)))) GROUP BY vt0.c0, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0)*(COUNT(COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((v0.c0)*(COUNT(COUNT(*)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0)*(COUNT(COUNT(*))))) ISNULL);
SELECT v0.c0 FROM vt0, v0;
SELECT v0.c0 FROM vt0, v0 NOT INDEXED WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))OR(x'')))OR(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))) UNION ALL SELECT v0.c0 FROM vt0, v0 WHERE ((NOT (((((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))OR(x'')))OR(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))))) UNION ALL SELECT v0.c0 FROM vt0, v0 WHERE (((((((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))OR(x'')))OR(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT v0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM v0 INNER JOIN vt0 ON DATETIME(((vt0.c0) NOTNULL), (v0.c0 IN ()), v0.c0);
SELECT DISTINCT v0.c0 FROM v0 INNER JOIN vt0 ON DATETIME(((vt0.c0) NOTNULL), (v0.c0 IN ()), v0.c0) WHERE ((((vt0.c0 IN ())) NOTNULL)) UNION SELECT DISTINCT v0.c0 FROM v0 INNER JOIN vt0 ON DATETIME(((vt0.c0) NOTNULL), (v0.c0 IN ()), v0.c0) WHERE ((NOT ((((vt0.c0 IN ())) NOTNULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 INNER JOIN vt0 ON DATETIME(((vt0.c0) NOTNULL), (v0.c0 IN ()), v0.c0) WHERE ((((((vt0.c0 IN ())) NOTNULL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0 INNER JOIN vt0 ON DATETIME(((vt0.c0) NOTNULL), (v0.c0 IN ()), v0.c0);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '-1954677039' END, SQLITE_COMPILEOPTION_GET(vt0.c0), NULL))=((((vt0.c0) NOTNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS INTEGER))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '-1954677039' END, SQLITE_COMPILEOPTION_GET(vt0.c0), NULL))=((((vt0.c0) NOTNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS INTEGER))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '-1954677039' END, SQLITE_COMPILEOPTION_GET(vt0.c0), NULL))=((((vt0.c0) NOTNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS INTEGER))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(CAST(vt0.c0 AS INTEGER) AS REAL)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(CAST(vt0.c0 AS INTEGER) AS REAL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(CAST(vt0.c0 AS INTEGER) AS REAL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((((vt0.c0)<(v0.c0)))AND((((vt0.c0, v0.c0, v0.c0, v0.c0, v0.c0))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, v0.c0))))))AND((v0.c0 IN ())))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (((((((vt0.c0)<(v0.c0)))AND((((vt0.c0, v0.c0, v0.c0, v0.c0, v0.c0))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, v0.c0))))))AND((v0.c0 IN ())))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((((((vt0.c0)<(v0.c0)))AND((((vt0.c0, v0.c0, v0.c0, v0.c0, v0.c0))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, v0.c0))))))AND((v0.c0 IN ())))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(MIN(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(MIN(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(MIN(v0.c0))) ISNULL);
SELECT TOTAL(((((v0.c0) NOT NULL)) NOT BETWEEN (((v0.c0) ISNULL)) AND (vt0.c0 COLLATE NOCASE))) FROM v0, vt0 ORDER BY ((vt0.c0)>=(((NULL) NOTNULL))) ASC, (((v0.c0 IN ())) BETWEEN ((+ (vt0.c0))) AND (v0.c0)), (((((x'bbf4') ISNULL)))<(((~ (vt0.c0))))) DESC;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (DATE(TRIM(DISTINCT vt0.c0), ((('r')) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (((vt0.c0))<>((vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (DATE(TRIM(DISTINCT vt0.c0), ((('r')) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (((vt0.c0))<>((vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((DATE(TRIM(DISTINCT vt0.c0), ((('r')) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (((vt0.c0))!=((vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (NULLIF(vt0.c0, v0.c0)) AND (((vt0.c0)<=(v0.c0))));
SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (NULLIF(vt0.c0, v0.c0)) AND (((vt0.c0)<=(v0.c0)))) WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (NULLIF(vt0.c0, v0.c0)) AND (((vt0.c0)<=(v0.c0)))) WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (NULLIF(vt0.c0, v0.c0)) AND (((vt0.c0)<=(v0.c0)))) WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (NULLIF(vt0.c0, v0.c0)) AND (((vt0.c0)<=(v0.c0))));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(0X4cc8a894 AS TEXT)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(0X4cc8a894 AS TEXT)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(0x4cc8a894 AS TEXT)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON v0.c0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON v0.c0 GROUP BY v0.c0, vt0.c0 HAVING (CAST(MAX(vt0.c0) AS TEXT) IN (((v0.c0)/(AVG(vt0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON v0.c0 GROUP BY v0.c0, vt0.c0 HAVING (NOT ((CAST(MAX(vt0.c0) AS TEXT) IN (((v0.c0)/(AVG(vt0.c0))))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON v0.c0 GROUP BY v0.c0, vt0.c0 HAVING (((CAST(MAX(vt0.c0) AS TEXT) IN (((v0.c0)/(AVG(vt0.c0)))))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON v0.c0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON v0.c0 GROUP BY v0.c0, vt0.c0 HAVING (CAST(MAX(vt0.c0) AS TEXT) IN (((v0.c0)/(AVG(vt0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON v0.c0 GROUP BY v0.c0, vt0.c0 HAVING (NOT ((CAST(MAX(vt0.c0) AS TEXT) IN (((v0.c0)/(AVG(vt0.c0))))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON v0.c0 GROUP BY v0.c0, vt0.c0 HAVING (((CAST(MAX(vt0.c0) AS TEXT) IN (((v0.c0)/(AVG(vt0.c0)))))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON v0.c0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (ROUND(((v0.c0) NOT NULL), (NOT (v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (ROUND(((v0.c0) NOT NULL), (NOT (v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((ROUND(((v0.c0) NOT NULL), (NOT (v0.c0)))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (INSTR(((vt0.c0)/(vt0.c0)), vt0.c0 COLLATE BINARY)) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE ((NOT (INSTR(((vt0.c0)/(vt0.c0)), vt0.c0 COLLATE BINARY)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((INSTR(((vt0.c0)/(vt0.c0)), vt0.c0 COLLATE BINARY)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 WHERE (CASE v0.c0  WHEN (vt0.c0 IN (v0.c0, vt0.c0)) THEN (((v0.c0))>=((vt0.c0))) ELSE (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, vt0.c0))) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE ((NOT (CASE v0.c0  WHEN (vt0.c0 IN (v0.c0, vt0.c0)) THEN (((v0.c0))>=((vt0.c0))) ELSE (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, vt0.c0))) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE (((CASE v0.c0  WHEN (vt0.c0 IN (v0.c0, vt0.c0)) THEN (((v0.c0))>=((vt0.c0))) ELSE (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, vt0.c0))) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(MAX(GROUP_CONCAT(SUM(v0.c0))) AS REAL) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(MAX(GROUP_CONCAT(SUM(v0.c0))) AS REAL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(MAX(GROUP_CONCAT(SUM(v0.c0))) AS REAL)) ISNULL);
SELECT v0.c0, vt0.c0 FROM v0, vt0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (TYPEOF(DISTINCT NULL)) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (TYPEOF(DISTINCT NULL)))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE (((TYPEOF(DISTINCT NULL)) ISNULL));
SELECT v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) AS INTEGER)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) AS INTEGER)))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0 IN (NULL)))OR(LIKELY(v0.c0)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN (NULL)))OR(LIKELY(v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0 IN (NULL)))OR(LIKELY(v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((CAST(vt0.c0 AS NUMERIC))AND((- (v0.c0)))))AND(((vt0.c0) BETWEEN (0.7893250115955489) AND (v0.c0))));
SELECT ALL vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((CAST(vt0.c0 AS NUMERIC))AND((- (v0.c0)))))AND(((vt0.c0) BETWEEN (0.7893250115955489) AND (v0.c0)))) WHERE (((UPPER(DISTINCT v0.c0)) NOT BETWEEN ((v0.c0 IN ())) AND ((NULL IN ())))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((CAST(vt0.c0 AS NUMERIC))AND((- (v0.c0)))))AND(((vt0.c0) BETWEEN (0.7893250115955489) AND (v0.c0)))) WHERE ((NOT (((UPPER(DISTINCT v0.c0)) NOT BETWEEN ((v0.c0 IN ())) AND ((NULL IN ())))))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((CAST(vt0.c0 AS NUMERIC))AND((- (v0.c0)))))AND(((vt0.c0) BETWEEN (0.7893250115955489) AND (v0.c0)))) WHERE (((((UPPER(DISTINCT v0.c0)) NOT BETWEEN ((v0.c0 IN ())) AND ((NULL IN ())))) ISNULL));
SELECT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((CAST(vt0.c0 AS NUMERIC))AND((- (v0.c0)))))AND(((vt0.c0) BETWEEN (0.7893250115955489) AND (v0.c0))));
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 WHERE (CASE ((0Xffffffffd71e8313) IS FALSE)  WHEN ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) END) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 WHERE ((NOT (CASE ((0xffffffffd71e8313) IS FALSE)  WHEN ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) END))) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 WHERE (((CASE ((0Xffffffffd71e8313) IS FALSE)  WHEN ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 WHERE (0.7677989840513315) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE ((NOT (0.7677989840513315))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((0.7677989840513315) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0, vt0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE (((((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))AND(v0.c0))) BETWEEN (((v0.c0)+(v0.c0))) AND (0.5386773250882092))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 WHERE ((NOT (((((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))AND(v0.c0))) BETWEEN (((v0.c0)+(v0.c0))) AND (0.5386773250882092))))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 WHERE (((((((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))AND(v0.c0))) BETWEEN (((v0.c0)+(v0.c0))) AND (0.5386773250882092))) ISNULL));
SELECT ALL v0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 WHERE (((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))=(v0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))==(v0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 WHERE (((((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))==(v0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING -105748528 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (-105748528)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((-105748528) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING -105748528 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (-105748528)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((-105748528) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (0X24c1d002) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT (0X24c1d002))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE (((0x24c1d002) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM) ISNULL)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0 COLLATE RTRIM) ISNULL)))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0 COLLATE RTRIM) ISNULL)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (vt0.c0) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (vt0.c0))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((vt0.c0) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM((((vt0.c0))>((COUNT(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM((((vt0.c0))>((COUNT(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM((((vt0.c0))>((COUNT(vt0.c0)))))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((~ (CASE 0xfffffffffef91c0f  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT ((~ (CASE 0xfffffffffef91c0f  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((~ (CASE 0xfffffffffef91c0f  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((+ (((v0.c0) IS FALSE)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((+ (((v0.c0) IS FALSE)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((+ (((v0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0)))/(CASE vt0.c0  WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)>>(vt0.c0)))/(CASE vt0.c0  WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)>>(vt0.c0)))/(CASE vt0.c0  WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(json_patch(GROUP_CONCAT(GROUP_CONCAT(MIN(MIN(x'')))), COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(json_patch(GROUP_CONCAT(GROUP_CONCAT(MIN(MIN(x'')))), COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(json_patch(GROUP_CONCAT(GROUP_CONCAT(MIN(MIN(x'')))), COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS REAL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS REAL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS REAL)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (TYPEOF(DISTINCT -4.08040206E8) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (TYPEOF(DISTINCT -4.08040206E8) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 WHERE (((TYPEOF(DISTINCT -4.08040206E8) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE v0.c0 COLLATE RTRIM  WHEN CAST(v0.c0 AS INTEGER) THEN (~ (v0.c0)) WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((v0.c0)IS(v0.c0)) THEN ((v0.c0) IS FALSE) ELSE ((v0.c0) NOT BETWEEN (-7.0834651E7) AND (v0.c0)) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE v0.c0 COLLATE RTRIM  WHEN CAST(v0.c0 AS INTEGER) THEN (~ (v0.c0)) WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((v0.c0)IS(v0.c0)) THEN ((v0.c0) IS FALSE) ELSE ((v0.c0) NOT BETWEEN (-7.0834651E7) AND (v0.c0)) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE v0.c0 COLLATE RTRIM  WHEN CAST(v0.c0 AS INTEGER) THEN (~ (v0.c0)) WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((v0.c0)IS(v0.c0)) THEN ((v0.c0) IS FALSE) ELSE ((v0.c0) NOT BETWEEN (-7.0834651E7) AND (v0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0, v0.c0 HAVING COUNT(GROUP_CONCAT(MAX(v0.c0))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(MAX(v0.c0))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0, v0.c0 HAVING ((COUNT(GROUP_CONCAT(MAX(v0.c0)))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0)!=(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((+ (((vt0.c0)!=(vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE ((((+ (((vt0.c0)<>(vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((((CASE '-1320494676'  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END))>=(((~ (vt0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((NOT ((((CASE '-1320494676'  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END))>=(((~ (vt0.c0)))))))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((((((CASE '-1320494676'  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END))>=(((~ (vt0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ('xP') GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT ('xP'))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((('xP') ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON CAST(v0.c0 COLLATE RTRIM AS TEXT) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON CAST(v0.c0 COLLATE RTRIM AS TEXT) GROUP BY v0.c0, vt0.c0 HAVING (~ ((v0.c0 IN ()))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON CAST(v0.c0 COLLATE RTRIM AS TEXT) GROUP BY v0.c0, vt0.c0 HAVING (NOT ((~ ((v0.c0 IN ()))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON CAST(v0.c0 COLLATE RTRIM AS TEXT) GROUP BY v0.c0, vt0.c0 HAVING (((~ ((v0.c0 IN ())))) ISNULL);
SELECT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON CAST(v0.c0 COLLATE RTRIM AS TEXT) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON CAST(v0.c0 COLLATE RTRIM AS TEXT) GROUP BY v0.c0, vt0.c0 HAVING (~ ((v0.c0 IN ()))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON CAST(v0.c0 COLLATE RTRIM AS TEXT) GROUP BY v0.c0, vt0.c0 HAVING (NOT ((~ ((v0.c0 IN ()))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON CAST(v0.c0 COLLATE RTRIM AS TEXT) GROUP BY v0.c0, vt0.c0 HAVING (((~ ((v0.c0 IN ())))) ISNULL);
SELECT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON CAST(v0.c0 COLLATE RTRIM AS TEXT) GROUP BY v0.c0, vt0.c0;
SELECT SUM(CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS BLOB)) FROM v0, vt0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0)!=(v0.c0))) NOT BETWEEN ((((v0.c0))=((v0.c0)))) AND ((v0.c0 IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)!=(v0.c0))) NOT BETWEEN ((((v0.c0))=((v0.c0)))) AND ((v0.c0 IN ())))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0)<>(v0.c0))) NOT BETWEEN ((((v0.c0))==((v0.c0)))) AND ((v0.c0 IN ())))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))||(vt0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((NOT ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))||(vt0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))||(vt0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))) NOT NULL)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))) NOT NULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))) NOT NULL)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE (json(((v0.c0)IS NOT('-17228785')))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (json(((v0.c0)IS NOT('-17228785')))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((json(((v0.c0)IS NOT('-17228785')))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) NOTNULL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOTNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (((SUM(MIN('-1170495362')), MIN(GROUP_CONCAT(AVG(COUNT(TOTAL(vt0.c0))))), vt0.c0)) BETWEEN ((COUNT(*), (~ (COUNT(vt0.c0))), AVG(AVG(0.04929945675041647)))) AND ((vt0.c0, ((v0.c0) NOTNULL), COUNT(SUM(v0.c0))))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT ((((SUM(MIN('-1170495362')), MIN(GROUP_CONCAT(AVG(COUNT(TOTAL(vt0.c0))))), vt0.c0)) BETWEEN ((COUNT(*), (~ (COUNT(vt0.c0))), AVG(AVG(0.04929945675041647)))) AND ((vt0.c0, ((v0.c0) NOTNULL), COUNT(SUM(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (((((SUM(MIN('-1170495362')), MIN(GROUP_CONCAT(AVG(COUNT(TOTAL(vt0.c0))))), vt0.c0)) BETWEEN ((COUNT(*), (~ (COUNT(vt0.c0))), AVG(AVG(0.04929945675041647)))) AND ((vt0.c0, ((v0.c0) NOTNULL), COUNT(SUM(v0.c0)))))) ISNULL);
SELECT ALL TOTAL(LTRIM(((v0.c0) NOTNULL))) FROM v0, vt0;
SELECT v0.c0 FROM v0 NOT INDEXED;
SELECT ALL v0.c0 FROM v0 WHERE ((((~ (NULL))) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE NULL END) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((((~ (NULL))) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE NULL END) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((~ (NULL))) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE NULL END) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT v0.c0 FROM v0 NOT INDEXED;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 NOT INDEXED;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((json_insert(vt0.c0, vt0.c0, vt0.c0))OR(vt0.c0 COLLATE NOCASE)))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (((((json_insert(vt0.c0, vt0.c0, vt0.c0))OR(vt0.c0 COLLATE NOCASE)))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0))))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((((json_insert(vt0.c0, vt0.c0, vt0.c0))OR(vt0.c0 COLLATE NOCASE)))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 NOT INDEXED;
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0)>>(v0.c0)) IN ())) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)>>(v0.c0)) IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)>>(v0.c0)) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING CAST(CASE WHEN GROUP_CONCAT(vt0.c0) THEN COUNT(TOTAL(AVG(MAX(MIN(x'cfb0'))))) ELSE vt0.c0 END AS TEXT) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (CAST(CASE WHEN GROUP_CONCAT(vt0.c0) THEN COUNT(TOTAL(AVG(MAX(MIN(x'cfb0'))))) ELSE vt0.c0 END AS TEXT))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((CAST(CASE WHEN GROUP_CONCAT(vt0.c0) THEN COUNT(TOTAL(AVG(MAX(MIN(x'cfb0'))))) ELSE vt0.c0 END AS TEXT)) ISNULL);
SELECT ALL MAX(CAST(v0.c0 AS TEXT)) FROM v0, vt0;
SELECT ALL * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE ('1057054063') UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT ('1057054063'))) UNION ALL SELECT * FROM vt0, v0 WHERE ((('1057054063') ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((CAST(v0.c0 AS BLOB))AND(v0.c0)))AND(CAST(v0.c0 AS TEXT)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((((CAST(v0.c0 AS BLOB))AND(v0.c0)))AND(CAST(v0.c0 AS TEXT)))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((((CAST(v0.c0 AS BLOB))AND(v0.c0)))AND(CAST(v0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE (((((vt0.c0)&(v0.c0))) ISNULL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((NOT (((((vt0.c0)&(v0.c0))) ISNULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE (((((((vt0.c0)&(v0.c0))) ISNULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((v0.c0, '뿆j', v0.c0)) BETWEEN ((TOTAL(GROUP_CONCAT(v0.c0)), '1057054063', AVG(v0.c0))) AND ((AVG(v0.c0), CASE WHEN v0.c0 THEN v0.c0 END, MIN(COUNT(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((v0.c0, '뿆j', v0.c0)) BETWEEN ((TOTAL(GROUP_CONCAT(v0.c0)), '1057054063', AVG(v0.c0))) AND ((AVG(v0.c0), CASE WHEN v0.c0 THEN v0.c0 END, MIN(COUNT(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((v0.c0, '뿆j', v0.c0)) BETWEEN ((TOTAL(GROUP_CONCAT(v0.c0)), '1057054063', AVG(v0.c0))) AND ((AVG(v0.c0), CASE WHEN v0.c0 THEN v0.c0 END, MIN(COUNT(v0.c0)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)>(vt0.c0)))<('1869949993'))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)>(vt0.c0)))<('1869949993'))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)>(vt0.c0)))<('1869949993'))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0 COLLATE NOCASE)<=(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0 COLLATE NOCASE)<=(((((v0.c0)OR(v0.c0)))AND(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0 COLLATE NOCASE)<=(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0 FROM v0 INNER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM)!=(NULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0 INNER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM)<>(NULL)) WHERE (CAST(UPPER(DISTINCT v0.c0) AS REAL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0 INNER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM)!=(NULL)) WHERE ((NOT (CAST(UPPER(DISTINCT v0.c0) AS REAL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0 INNER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM)<>(NULL)) WHERE (((CAST(UPPER(DISTINCT v0.c0) AS REAL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 INNER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM)!=(NULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (+ (MIN(MIN(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((+ (MIN(MIN(COUNT(*))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((+ (MIN(MIN(COUNT(*)))))) ISNULL);
SELECT vt0.c0 FROM v0, vt0;
SELECT ALL vt0.c0 FROM v0, vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))OR(v0.c0)) AS REAL)) UNION ALL SELECT vt0.c0 FROM v0, vt0 WHERE ((NOT (CAST(((((vt0.c0)OR(vt0.c0)))OR(v0.c0)) AS REAL)))) UNION ALL SELECT vt0.c0 FROM v0, vt0 WHERE (((CAST(((((vt0.c0)OR(vt0.c0)))OR(v0.c0)) AS REAL)) ISNULL));
SELECT vt0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (((SQLITE_VERSION())GLOB(v0.c0))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (((SQLITE_VERSION())GLOB(v0.c0))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((((SQLITE_VERSION())GLOB(v0.c0))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (('0.5481499954809951') BETWEEN (vt0.c0 COLLATE BINARY) AND (json_extract(vt0.c0, v0.c0))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (('0.5481499954809951') BETWEEN (vt0.c0 COLLATE BINARY) AND (json_extract(vt0.c0, v0.c0))) WHERE ((~ (LAST_INSERT_ROWID()))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (('0.5481499954809951') BETWEEN (vt0.c0 COLLATE BINARY) AND (json_extract(vt0.c0, v0.c0))) WHERE ((NOT ((~ (LAST_INSERT_ROWID()))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (('0.5481499954809951') BETWEEN (vt0.c0 COLLATE BINARY) AND (json_extract(vt0.c0, v0.c0))) WHERE ((((~ (LAST_INSERT_ROWID()))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (('0.5481499954809951') BETWEEN (vt0.c0 COLLATE BINARY) AND (json_extract(vt0.c0, v0.c0))) GROUP BY vt0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING GROUP_CONCAT(((GROUP_CONCAT(SUM(v0.c0)))>>(vt0.c0))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(((GROUP_CONCAT(SUM(v0.c0)))>>(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((GROUP_CONCAT(((GROUP_CONCAT(SUM(v0.c0)))>>(vt0.c0)))) ISNULL);
SELECT ALL MAX((- (((vt0.c0) IS FALSE)))) FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) NOTNULL)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) NOTNULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOTNULL)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) NOTNULL) COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOTNULL) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (+ (((((((((MIN(v0.c0))OR(COUNT(v0.c0))))AND(MAX(vt0.c0))))AND(AVG(v0.c0))))AND(GROUP_CONCAT(TOTAL(v0.c0)))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT ((+ (((((((((MIN(v0.c0))OR(COUNT(v0.c0))))AND(MAX(vt0.c0))))AND(AVG(v0.c0))))AND(GROUP_CONCAT(TOTAL(v0.c0)))))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (((+ (((((((((MIN(v0.c0))OR(COUNT(v0.c0))))AND(MAX(vt0.c0))))AND(AVG(v0.c0))))AND(GROUP_CONCAT(TOTAL(v0.c0))))))) ISNULL);
SELECT ALL v0.c0 FROM v0, vt0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE (((((v0.c0)*(vt0.c0)))||((((('_[ᙠ^')AND(vt0.c0)))AND(vt0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 WHERE ((NOT (((((v0.c0)*(vt0.c0)))||((((('_[ᙠ^')AND(vt0.c0)))AND(vt0.c0))))))) UNION ALL SELECT v0.c0 FROM v0, vt0 WHERE (((((((v0.c0)*(vt0.c0)))||((((('_[ᙠ^')AND(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR('')))|((NOT (v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR('')))|((NOT (v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR('')))|((NOT (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 WHERE ((((((v0.c0))<=((vt0.c0)))) NOT BETWEEN (((v0.c0) IS TRUE)) AND ('1983bi'))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((NOT ((((((v0.c0))<=((vt0.c0)))) NOT BETWEEN (((v0.c0) IS TRUE)) AND ('1983bi'))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((((((((v0.c0))<=((vt0.c0)))) NOT BETWEEN (((v0.c0) IS TRUE)) AND ('1983bi'))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0 INNER JOIN v0 ON (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))OR(((vt0.c0)<<(v0.c0)))))OR((- ('-1389560334')))) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 INNER JOIN v0 ON (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))OR(((vt0.c0)<<(v0.c0)))))OR((- ('-1389560334')))) GROUP BY vt0.c0, v0.c0 HAVING CASE ((((vt0.c0)OR(v0.c0)))OR(SUM(v0.c0)))  WHEN COUNT('') THEN TOTAL(v0.c0) ELSE SUM(MAX(COUNT(vt0.c0))) END UNION ALL SELECT vt0.c0, v0.c0 FROM vt0 INNER JOIN v0 ON (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))OR(((vt0.c0)<<(v0.c0)))))OR((- ('-1389560334')))) GROUP BY vt0.c0, v0.c0 HAVING (NOT (CASE ((((vt0.c0)OR(v0.c0)))OR(SUM(v0.c0)))  WHEN COUNT('') THEN TOTAL(v0.c0) ELSE SUM(MAX(COUNT(vt0.c0))) END)) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0 INNER JOIN v0 ON (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))OR(((vt0.c0)<<(v0.c0)))))OR((- ('-1389560334')))) GROUP BY vt0.c0, v0.c0 HAVING ((CASE ((((vt0.c0)OR(v0.c0)))OR(SUM(v0.c0)))  WHEN COUNT('') THEN TOTAL(v0.c0) ELSE SUM(MAX(COUNT(vt0.c0))) END) ISNULL);
SELECT v0.c0 FROM v0 NATURAL JOIN vt0;
SELECT v0.c0 FROM v0 NATURAL JOIN vt0 WHERE (v0.c0) UNION ALL SELECT v0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((NOT (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 NATURAL JOIN vt0 WHERE (((v0.c0) ISNULL));
SELECT v0.c0 FROM v0 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE (CAST(TOTAL_CHANGES() AS TEXT)) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (CAST(TOTAL_CHANGES() AS TEXT)))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((CAST(TOTAL_CHANGES() AS TEXT)) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END IN ())) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT ((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END IN ())))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END IN ())) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(MIN(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(MIN(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(MIN(vt0.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (0.5899023824851626) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (0.5899023824851626))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((0.5899023824851626) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((STRFTIME(vt0.c0, vt0.c0, -1875799762, NULL, v0.c0))*(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((STRFTIME(vt0.c0, vt0.c0, -1875799762, NULL, v0.c0))*(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((STRFTIME(vt0.c0, vt0.c0, -1875799762, NULL, v0.c0))*(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)*(vt0.c0)))*(CAST(vt0.c0 AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)*(vt0.c0)))*(CAST(vt0.c0 AS INTEGER)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)*(vt0.c0)))*(CAST(vt0.c0 AS INTEGER)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT((+ (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT((+ (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT((+ (vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT((+ (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT((+ (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT((+ (vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (((x'')<=(v0.c0))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (((x'')<=(v0.c0))))) UNION ALL SELECT * FROM vt0, v0 WHERE (((((x'')<=(v0.c0))) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) IS TRUE))))OR(vt0.c0 COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) IS TRUE))))OR(vt0.c0 COLLATE BINARY))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) IS TRUE))))OR(vt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (~ (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((~ (v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((~ (v0.c0))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (~ (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((~ (v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((~ (v0.c0))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((json_array(v0.c0, v0.c0) IN ())) UNION ALL SELECT * FROM v0 WHERE ((NOT ((json_array(v0.c0, v0.c0) IN ())))) UNION ALL SELECT * FROM v0 WHERE ((((json_array(v0.c0, v0.c0) IN ())) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT vt0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE (((((v0.c0)<(v0.c0)))&(CAST(vt0.c0 AS INTEGER)))) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE ((NOT (((((v0.c0)<(v0.c0)))&(CAST(vt0.c0 AS INTEGER)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE (((((((v0.c0)<(v0.c0)))&(CAST(vt0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, v0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((- ((vt0.c0 IN ())))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT ((- ((vt0.c0 IN ())))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((- ((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(GROUP_CONCAT('OE_fWq ') AS BLOB)) BETWEEN (((MIN(GROUP_CONCAT(MAX(MAX(vt0.c0)))))<(vt0.c0))) AND (MIN(SUM(AVG(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((CAST(GROUP_CONCAT('OE_fWq ') AS BLOB)) BETWEEN (((MIN(GROUP_CONCAT(MAX(MAX(vt0.c0)))))<(vt0.c0))) AND (MIN(SUM(AVG(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((CAST(GROUP_CONCAT('OE_fWq ') AS BLOB)) BETWEEN (((MIN(GROUP_CONCAT(MAX(MAX(vt0.c0)))))<(vt0.c0))) AND (MIN(SUM(AVG(vt0.c0)))))) ISNULL);
SELECT ALL * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE ((((- (v0.c0)))LIKE(((vt0.c0)<(vt0.c0))))) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT ((((- (v0.c0)))LIKE(((vt0.c0)<(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((((((- (v0.c0)))LIKE(((vt0.c0)<(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (NULL) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON CAST(((x'e98aaeb7')=(vt0.c0)) AS REAL) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON CAST(((x'e98aaeb7')=(vt0.c0)) AS REAL) WHERE (CASE ((vt0.c0) IS FALSE)  WHEN CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (v0.c0 IN ()) ELSE (vt0.c0 IN ()) END) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON CAST(((x'e98aaeb7')==(vt0.c0)) AS REAL) WHERE ((NOT (CASE ((vt0.c0) IS FALSE)  WHEN CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (v0.c0 IN ()) ELSE (vt0.c0 IN ()) END))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON CAST(((x'e98aaeb7')=(vt0.c0)) AS REAL) WHERE (((CASE ((vt0.c0) IS FALSE)  WHEN CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (v0.c0 IN ()) ELSE (vt0.c0 IN ()) END) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON CAST(((x'e98aaeb7')=(vt0.c0)) AS REAL) GROUP BY v0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((CAST(v0.c0 AS BLOB))=(CASE WHEN vt0.c0 THEN v0.c0 END))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (((CAST(v0.c0 AS BLOB))==(CASE WHEN vt0.c0 THEN v0.c0 END))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((CAST(v0.c0 AS BLOB))==(CASE WHEN vt0.c0 THEN v0.c0 END))) ISNULL));
SELECT v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (UPPER(v0.c0) COLLATE RTRIM) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (UPPER(v0.c0) COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((UPPER(v0.c0) COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0)-(vt0.c0)) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)-(vt0.c0)) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)-(vt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING 0.016667658891789894 UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (0.016667658891789894)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((0.016667658891789894) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING 0.016667658891789894 UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (0.016667658891789894)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((0.016667658891789894) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0)&(v0.c0))) ISNULL)) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT (((((vt0.c0)&(v0.c0))) ISNULL)))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE (((((((vt0.c0)&(v0.c0))) ISNULL)) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (x'') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (x''))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((x'') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0, vt0.c0 HAVING ((((SUM(v0.c0)))==((vt0.c0))) IN (((v0.c0)>=(v0.c0)), ((COUNT(*)) NOT BETWEEN (v0.c0) AND (1.56228069E9)))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (((((SUM(v0.c0)))==((vt0.c0))) IN (((v0.c0)>=(v0.c0)), ((COUNT(*)) NOT BETWEEN (v0.c0) AND (1.56228069E9)))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0, vt0.c0 HAVING ((((((SUM(v0.c0)))=((vt0.c0))) IN (((v0.c0)>=(v0.c0)), ((COUNT(*)) NOT BETWEEN (v0.c0) AND (1.56228069E9))))) ISNULL);
SELECT v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0, vt0.c0 HAVING ((((SUM(v0.c0)))==((vt0.c0))) IN (((v0.c0)>=(v0.c0)), ((COUNT(*)) NOT BETWEEN (v0.c0) AND (1.56228069E9)))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (((((SUM(v0.c0)))==((vt0.c0))) IN (((v0.c0)>=(v0.c0)), ((COUNT(*)) NOT BETWEEN (v0.c0) AND (1.56228069E9)))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0, vt0.c0 HAVING ((((((SUM(v0.c0)))=((vt0.c0))) IN (((v0.c0)>=(v0.c0)), ((COUNT(*)) NOT BETWEEN (v0.c0) AND (1.56228069E9))))) ISNULL);
SELECT v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (CAST((~ (v0.c0)) AS BLOB)) UNION ALL SELECT * FROM v0 WHERE ((NOT (CAST((~ (v0.c0)) AS BLOB)))) UNION ALL SELECT * FROM v0 WHERE (((CAST((~ (v0.c0)) AS BLOB)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END) BETWEEN ((((v0.c0))<((vt0.c0)))) AND (((vt0.c0)/(0.40566909018746167))));
SELECT DISTINCT vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END) BETWEEN ((((v0.c0))<((vt0.c0)))) AND (((vt0.c0)/(0.40566909018746167)))) WHERE (v0.c0) UNION SELECT DISTINCT vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END) BETWEEN ((((v0.c0))<((vt0.c0)))) AND (((vt0.c0)/(0.40566909018746167)))) WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END) BETWEEN ((((v0.c0))<((vt0.c0)))) AND (((vt0.c0)/(0.40566909018746167)))) WHERE (((v0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END) BETWEEN ((((v0.c0))<((vt0.c0)))) AND (((vt0.c0)/(0.40566909018746167))));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 ELSE vt0.c0 END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 ELSE vt0.c0 END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 ELSE vt0.c0 END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(CAST(vt0.c0 AS REAL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(CAST(vt0.c0 AS REAL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(CAST(vt0.c0 AS REAL))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(CAST(vt0.c0 AS REAL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(CAST(vt0.c0 AS REAL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(CAST(vt0.c0 AS REAL))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0 NATURAL JOIN v0;
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (((('6锨p-N', TYPEOF(DISTINCT vt0.c0), CAST(0xffffffffd7c69dc4 AS REAL)))>((((vt0.c0)>>(v0.c0)), (~ (v0.c0)), json_array_length(vt0.c0, v0.c0))))) UNION ALL SELECT * FROM vt0 NATURAL JOIN v0 WHERE ((NOT (((('6锨p-N', TYPEOF(DISTINCT vt0.c0), CAST(0Xffffffffd7c69dc4 AS REAL)))>((((vt0.c0)>>(v0.c0)), (~ (v0.c0)), json_array_length(vt0.c0, v0.c0))))))) UNION ALL SELECT * FROM vt0 NATURAL JOIN v0 WHERE (((((('6锨p-N', TYPEOF(DISTINCT vt0.c0), CAST(0Xffffffffd7c69dc4 AS REAL)))>((((vt0.c0)>>(v0.c0)), (~ (v0.c0)), json_array_length(vt0.c0, v0.c0))))) ISNULL));
SELECT * FROM vt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN (NULL))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT ((CAST(vt0.c0 AS NUMERIC) IN (NULL))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((((CAST(vt0.c0 AS NUMERIC) IN (NULL))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))==(((vt0.c0) ISNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))==(((vt0.c0) ISNULL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))=(((vt0.c0) ISNULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING LIKELY(DISTINCT COUNT(vt0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (LIKELY(DISTINCT COUNT(vt0.c0)))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((LIKELY(DISTINCT COUNT(vt0.c0))) ISNULL);
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING LIKELY(DISTINCT COUNT(vt0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (LIKELY(DISTINCT COUNT(vt0.c0)))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((LIKELY(DISTINCT COUNT(vt0.c0))) ISNULL);
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE ((((((v0.c0))>=((NULL)))) BETWEEN (((((vt0.c0)OR('')))OR(vt0.c0))) AND (TRIM(DISTINCT v0.c0)))) UNION ALL SELECT ALL * FROM v0, vt0 NOT INDEXED WHERE ((NOT ((((((v0.c0))>=((NULL)))) BETWEEN (((((vt0.c0)OR('')))OR(vt0.c0))) AND (TRIM(DISTINCT v0.c0)))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((((((((v0.c0))>=((NULL)))) BETWEEN (((((vt0.c0)OR('')))OR(vt0.c0))) AND (TRIM(DISTINCT v0.c0)))) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c0 COLLATE BINARY COLLATE BINARY) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0 COLLATE BINARY COLLATE BINARY))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0 COLLATE BINARY COLLATE BINARY) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END AS BLOB)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((NOT (CAST(CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END AS BLOB)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE (((CAST(CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END AS BLOB)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) BETWEEN (CAST(MAX(MAX(v0.c0)) AS BLOB)) AND (((('1445642182', TOTAL(TOTAL('')), v0.c0, MAX(TOTAL(v0.c0)), AVG(v0.c0))) NOT BETWEEN ((v0.c0, GROUP_CONCAT(COUNT(*)), SUM(AVG(MAX(NULL))), v0.c0, GROUP_CONCAT(GROUP_CONCAT(NULL)))) AND ((SUM(0.18521761534995385), SUM(v0.c0), v0.c0, COUNT(*), AVG(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((COUNT(*)) BETWEEN (CAST(MAX(MAX(v0.c0)) AS BLOB)) AND (((('1445642182', TOTAL(TOTAL('')), v0.c0, MAX(TOTAL(v0.c0)), AVG(v0.c0))) NOT BETWEEN ((v0.c0, GROUP_CONCAT(COUNT(*)), SUM(AVG(MAX(NULL))), v0.c0, GROUP_CONCAT(GROUP_CONCAT(NULL)))) AND ((SUM(0.18521761534995385), SUM(v0.c0), v0.c0, COUNT(*), AVG(v0.c0)))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((COUNT(*)) BETWEEN (CAST(MAX(MAX(v0.c0)) AS BLOB)) AND (((('1445642182', TOTAL(TOTAL('')), v0.c0, MAX(TOTAL(v0.c0)), AVG(v0.c0))) NOT BETWEEN ((v0.c0, GROUP_CONCAT(COUNT(*)), SUM(AVG(MAX(NULL))), v0.c0, GROUP_CONCAT(GROUP_CONCAT(NULL)))) AND ((SUM(0.18521761534995385), SUM(v0.c0), v0.c0, COUNT(*), AVG(v0.c0))))))) ISNULL);
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE ((0.3949901442650029) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN v0.c0 THEN ((v0.c0) NOT BETWEEN ('-1106185109') AND (v0.c0)) WHEN (NOT (v0.c0)) THEN v0.c0 WHEN TIME(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0) THEN v0.c0 COLLATE BINARY ELSE CAST(v0.c0 AS BLOB) END) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE ((0.3949901442650029) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN v0.c0 THEN ((v0.c0) NOT BETWEEN ('-1106185109') AND (v0.c0)) WHEN (NOT (v0.c0)) THEN v0.c0 WHEN TIME(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0) THEN v0.c0 COLLATE BINARY ELSE CAST(v0.c0 AS BLOB) END))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE ((0.3949901442650029) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN v0.c0 THEN ((v0.c0) NOT BETWEEN ('-1106185109') AND (v0.c0)) WHEN (NOT (v0.c0)) THEN v0.c0 WHEN TIME(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0) THEN v0.c0 COLLATE BINARY ELSE CAST(v0.c0 AS BLOB) END) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((~ (v0.c0)))%(((((vt0.c0)OR(NULL)))OR(vt0.c0))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT ((((~ (v0.c0)))%(((((vt0.c0)OR(NULL)))OR(vt0.c0))))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((((~ (v0.c0)))%(((((vt0.c0)OR(NULL)))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT TOTAL((vt0.c0 IN (v0.c0, v0.c0)) COLLATE NOCASE) FROM vt0, v0;
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON DATETIME(v0.c0, vt0.c0, v0.c0, vt0.c0, vt0.c0) COLLATE RTRIM;
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON DATETIME(v0.c0, vt0.c0, v0.c0, vt0.c0, vt0.c0) COLLATE RTRIM WHERE (vt0.c0) UNION ALL SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON DATETIME(v0.c0, vt0.c0, v0.c0, vt0.c0, vt0.c0) COLLATE RTRIM WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON DATETIME(v0.c0, vt0.c0, v0.c0, vt0.c0, vt0.c0) COLLATE RTRIM WHERE (((vt0.c0) ISNULL));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON DATETIME(v0.c0, vt0.c0, v0.c0, vt0.c0, vt0.c0) COLLATE RTRIM;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0))) BETWEEN (DATETIME(vt0.c0, vt0.c0, vt0.c0)) AND (((vt0.c0)>(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)<=(vt0.c0))) BETWEEN (DATETIME(vt0.c0, vt0.c0, vt0.c0)) AND (((vt0.c0)>(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)<=(vt0.c0))) BETWEEN (DATETIME(vt0.c0, vt0.c0, vt0.c0)) AND (((vt0.c0)>(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0, '514875832', -7.0834651E7)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))OR(vt0.c0)))AND(x'')), (('1887528924')||(vt0.c0)), vt0.c0)) AND (((((vt0.c0))==((x''))), UPPER(DISTINCT vt0.c0), ((vt0.c0) NOTNULL))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0, '514875832', -7.0834651E7)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))OR(vt0.c0)))AND(x'')), (('1887528924')||(vt0.c0)), vt0.c0)) AND (((((vt0.c0))==((x''))), UPPER(DISTINCT vt0.c0), ((vt0.c0) NOTNULL))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0, '514875832', -7.0834651E7)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))OR(vt0.c0)))AND(x'')), (('1887528924')||(vt0.c0)), vt0.c0)) AND (((((vt0.c0))==((x''))), UPPER(DISTINCT vt0.c0), ((vt0.c0) NOTNULL))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON (((v0.c0) BETWEEN ('	+') AND (vt0.c0)) IN ());
SELECT ALL vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON (((v0.c0) BETWEEN ('	+') AND (vt0.c0)) IN ()) WHERE ((((vt0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND (((((vt0.c0))<((vt0.c0))))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON (((v0.c0) BETWEEN ('	+') AND (vt0.c0)) IN ()) WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND (((((vt0.c0))<((vt0.c0))))))))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON (((v0.c0) BETWEEN ('	+') AND (vt0.c0)) IN ()) WHERE ((((((vt0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND (((((vt0.c0))<((vt0.c0))))))) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON (((v0.c0) BETWEEN ('	+') AND (vt0.c0)) IN ());
SELECT DISTINCT vt0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(AVG(GROUP_CONCAT(vt0.c0)) AS REAL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(AVG(GROUP_CONCAT(vt0.c0)) AS REAL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(AVG(GROUP_CONCAT(vt0.c0)) AS REAL)) ISNULL);
SELECT ALL TOTAL(((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)) FROM vt0, v0 ORDER BY CASE (- (v0.c0))  WHEN NULL THEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((0.4025791938835619))) WHEN HEX(v0.c0) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) WHEN ((v0.c0)>(v0.c0)) THEN ((vt0.c0)!=(vt0.c0)) ELSE (((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) END DESC;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN 1445642182 WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN 0.4015029437041683 END) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN 1445642182 WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN 0.4015029437041683 END))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN 1445642182 WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN 0.4015029437041683 END) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ('-1') GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ('-1'))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((('-1') ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING GROUP_CONCAT(SUM(vt0.c0)) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(SUM(vt0.c0)))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((GROUP_CONCAT(SUM(vt0.c0))) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, v0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (CASE ((v0.c0) IS FALSE)  WHEN v0.c0 THEN (((vt0.c0))>=((v0.c0))) END) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (CASE ((v0.c0) IS FALSE)  WHEN v0.c0 THEN (((vt0.c0))>=((v0.c0))) END))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((CASE ((v0.c0) IS FALSE)  WHEN v0.c0 THEN (((vt0.c0))>=((v0.c0))) END) ISNULL));
SELECT vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)IS NOT('')))&(vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)IS NOT('')))&(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)IS NOT('')))&(vt0.c0))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0 COLLATE RTRIM)>((NULL IN (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE RTRIM)>((NULL IN (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)>((NULL IN (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (+ (SUM(v0.c0))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT ((+ (SUM(v0.c0))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (((+ (SUM(v0.c0)))) ISNULL);
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (+ (SUM(v0.c0))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT ((+ (SUM(v0.c0))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (((+ (SUM(v0.c0)))) ISNULL);
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS REAL) END) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS REAL) END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS REAL) END) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN v0 ON TRIM((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))));
SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN v0 ON TRIM((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) WHERE (TRIM(vt0.c0 COLLATE NOCASE)) UNION SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN v0 ON TRIM((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) WHERE ((NOT (TRIM(vt0.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN v0 ON TRIM((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) WHERE (((TRIM(vt0.c0 COLLATE NOCASE)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN v0 ON TRIM((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))));
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((LTRIM(v0.c0, v0.c0))<=(0x70ba2fef))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE ((NOT (((LTRIM(v0.c0, v0.c0))<=(0X70ba2fef))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((((LTRIM(v0.c0, v0.c0))<=(0x70ba2fef))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(((((((((v0.c0)OR(TOTAL(SUM(AVG(TOTAL(v0.c0)))))))OR(TOTAL(COUNT(*)))))OR(NULL)))AND(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(((((((((v0.c0)OR(TOTAL(SUM(AVG(TOTAL(v0.c0)))))))OR(TOTAL(COUNT(*)))))OR(NULL)))AND(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(((((((((v0.c0)OR(TOTAL(SUM(AVG(TOTAL(v0.c0)))))))OR(TOTAL(COUNT(*)))))OR(NULL)))AND(v0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((NULL)) AND ((x'')))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((NULL)) AND ((x'')))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((NULL)) AND ((x'')))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN v0 WHERE (((((v0.c0 IN ())))>=((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN v0 WHERE ((NOT (((((v0.c0 IN ())))>=((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN v0 WHERE (((((((v0.c0 IN ())))>=((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0 NATURAL JOIN v0;
SELECT v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN x'24be' THEN (vt0.c0 IN ()) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN x'24be' THEN (vt0.c0 IN ()) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END WHERE (json(((v0.c0) IS FALSE))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN x'24be' THEN (vt0.c0 IN ()) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END WHERE ((NOT (json(((v0.c0) IS FALSE))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN x'24be' THEN (vt0.c0 IN ()) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END WHERE (((json(((v0.c0) IS FALSE))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN x'24be' THEN (vt0.c0 IN ()) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END GROUP BY v0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) NOT NULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(vt0.c0)) NOT NULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(vt0.c0)) NOT NULL)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) NOT NULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(vt0.c0)) NOT NULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(vt0.c0)) NOT NULL)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE (x'') UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT (x''))) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE (((x'') ISNULL));
SELECT ALL vt0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((vt0.c0 IN ())))>=((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (((((vt0.c0 IN ())))>=((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((((vt0.c0 IN ())))>=((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((x'')OR(((vt0.c0)|(vt0.c0)))))AND(((0.0895468975090371)/(0.735615839580271))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((x'')OR(((vt0.c0)|(vt0.c0)))))AND(((0.0895468975090371)/(0.735615839580271))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((x'')OR(((vt0.c0)|(vt0.c0)))))AND(((0.0895468975090371)/(0.735615839580271))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(((GROUP_CONCAT(vt0.c0))GLOB(AVG(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(((GROUP_CONCAT(vt0.c0))GLOB(AVG(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(((GROUP_CONCAT(vt0.c0))GLOB(AVG(vt0.c0))))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (CASE WHEN 867635184 THEN (('Hb3	-y^2') BETWEEN (v0.c0) AND (v0.c0)) END) UNION ALL SELECT * FROM v0 WHERE ((NOT (CASE WHEN 867635184 THEN (('Hb3	-y^2') BETWEEN (v0.c0) AND (v0.c0)) END))) UNION ALL SELECT * FROM v0 WHERE (((CASE WHEN 867635184 THEN (('Hb3	-y^2') BETWEEN (v0.c0) AND (v0.c0)) END) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))-((((v0.c0))<=((0.07068386148096062)))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (((((((((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))-((((v0.c0))<=((0.07068386148096062)))))))) UNION SELECT DISTINCT * FROM v0, vt0 NOT INDEXED WHERE (((((((((((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))-((((v0.c0))<=((0.07068386148096062)))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (LIKELIHOOD(TIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0), 0.4246913355428774)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (LIKELIHOOD(TIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0), 0.4246913355428774)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((LIKELIHOOD(TIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0), 0.4246913355428774)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) BETWEEN (MIN(GROUP_CONCAT(v0.c0))) AND (MAX(AVG(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((COUNT(*)) BETWEEN (MIN(GROUP_CONCAT(v0.c0))) AND (MAX(AVG(GROUP_CONCAT(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((COUNT(*)) BETWEEN (MIN(GROUP_CONCAT(v0.c0))) AND (MAX(AVG(GROUP_CONCAT(v0.c0)))))) ISNULL);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CAST(CAST('&' AS TEXT) AS TEXT);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CAST(CAST('&' AS TEXT) AS TEXT) WHERE (v0.c0) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN v0 ON CAST(CAST('&' AS TEXT) AS TEXT) WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN v0 ON CAST(CAST('&' AS TEXT) AS TEXT) WHERE (((v0.c0) ISNULL));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CAST(CAST('&' AS TEXT) AS TEXT);
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST((v0.c0 IN (v0.c0)) AS NUMERIC)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST((v0.c0 IN (v0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST((v0.c0 IN (v0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((v0.c0 IN ())) BETWEEN (vt0.c0) AND (vt0.c0 COLLATE NOCASE))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT ((((v0.c0 IN ())) BETWEEN (vt0.c0) AND (vt0.c0 COLLATE NOCASE))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((((v0.c0 IN ())) BETWEEN (vt0.c0) AND (vt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((((((NULL)OR(GROUP_CONCAT(vt0.c0))))AND(SUM(AVG(vt0.c0)))))<(AVG(MAX(x'')))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (((((((NULL)OR(GROUP_CONCAT(vt0.c0))))AND(SUM(AVG(vt0.c0)))))<(AVG(MAX(x'')))))) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((((((((NULL)OR(GROUP_CONCAT(vt0.c0))))AND(SUM(AVG(vt0.c0)))))<(AVG(MAX(x''))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((NOT (vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((NOT (vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION ALL SELECT * FROM vt0 WHERE (((((NOT (vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((0.3588292713790797 COLLATE BINARY) BETWEEN ((v0.c0 IN (vt0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((0.3588292713790797 COLLATE BINARY) BETWEEN ((v0.c0 IN (vt0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((0.3588292713790797 COLLATE BINARY) BETWEEN ((v0.c0 IN (vt0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0)%((((vt0.c0))<=((vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)%((((vt0.c0))<=((vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)%((((vt0.c0))<=((vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(MIN(vt0.c0)))) NOT BETWEEN ((vt0.c0)) AND ((TOTAL(GROUP_CONCAT(AVG(vt0.c0)))))) IN (TOTAL(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((COUNT(MIN(vt0.c0)))) NOT BETWEEN ((vt0.c0)) AND ((TOTAL(GROUP_CONCAT(AVG(vt0.c0)))))) IN (TOTAL(GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((COUNT(MIN(vt0.c0)))) NOT BETWEEN ((vt0.c0)) AND ((TOTAL(GROUP_CONCAT(AVG(vt0.c0)))))) IN (TOTAL(GROUP_CONCAT(COUNT(*)))))) ISNULL);
SELECT vt0.c0 FROM v0 INNER JOIN vt0 ON CASE (NOT (v0.c0))  WHEN ((vt0.c0)>>('0.5441574849066663')) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(v0.c0)) END;
SELECT ALL vt0.c0 FROM v0 INNER JOIN vt0 ON CASE (NOT (v0.c0))  WHEN ((vt0.c0)>>('0.5441574849066663')) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(v0.c0)) END WHERE (CAST('' AS TEXT)) UNION ALL SELECT vt0.c0 FROM v0 INNER JOIN vt0 ON CASE (NOT (v0.c0))  WHEN ((vt0.c0)>>('0.5441574849066663')) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(v0.c0)) END WHERE ((NOT (CAST('' AS TEXT)))) UNION ALL SELECT vt0.c0 FROM v0 INNER JOIN vt0 ON CASE (NOT (v0.c0))  WHEN ((vt0.c0)>>('0.5441574849066663')) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(v0.c0)) END WHERE (((CAST('' AS TEXT)) ISNULL));
SELECT vt0.c0 FROM v0 INNER JOIN vt0 ON CASE (NOT (v0.c0))  WHEN ((vt0.c0)>>('0.5441574849066663')) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(v0.c0)) END;
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((- (vt0.c0))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((NOT ((- (vt0.c0))))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((((- (vt0.c0))) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (NULL COLLATE RTRIM) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (NULL COLLATE RTRIM))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((NULL COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(v0.c0)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(v0.c0)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))GLOB(CAST(v0.c0 AS NUMERIC)))) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))GLOB(CAST(v0.c0 AS NUMERIC)))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))GLOB(CAST(v0.c0 AS NUMERIC)))) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((vt0.c0)!=(v0.c0))) BETWEEN (IFNULL(DISTINCT 0xffffffffce984a9b, v0.c0)) AND (((v0.c0)<=(v0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((((vt0.c0)<>(v0.c0))) BETWEEN (IFNULL(DISTINCT 0xffffffffce984a9b, v0.c0)) AND (((v0.c0)<=(v0.c0))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((((vt0.c0)<>(v0.c0))) BETWEEN (IFNULL(DISTINCT 0xffffffffce984a9b, v0.c0)) AND (((v0.c0)<=(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL v0.c0 FROM vt0 INNER JOIN v0 ON ((((v0.c0 IN (v0.c0))))<=((CAST(v0.c0 AS BLOB)))) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 INNER JOIN v0 ON ((((v0.c0 IN (v0.c0))))<=((CAST(v0.c0 AS BLOB)))) WHERE ((TRIM(DISTINCT vt0.c0, v0.c0) IN ())) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0 INNER JOIN v0 ON ((((v0.c0 IN (v0.c0))))<=((CAST(v0.c0 AS BLOB)))) WHERE ((NOT ((TRIM(DISTINCT vt0.c0, v0.c0) IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0 INNER JOIN v0 ON ((((v0.c0 IN (v0.c0))))<=((CAST(v0.c0 AS BLOB)))) WHERE ((((TRIM(DISTINCT vt0.c0, v0.c0) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0 INNER JOIN v0 ON ((((v0.c0 IN (v0.c0))))<=((CAST(v0.c0 AS BLOB)))) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING TRIM(DISTINCT x'', COUNT(AVG(COUNT(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (TRIM(DISTINCT x'', COUNT(AVG(COUNT(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((TRIM(DISTINCT x'', COUNT(AVG(COUNT(v0.c0))))) ISNULL);
SELECT ALL * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE ((((v0.c0)IS NOT(vt0.c0)) IN ())) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT ((((v0.c0)IS NOT(vt0.c0)) IN ())))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((((((v0.c0)IS NOT(vt0.c0)) IN ())) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (((((vt0.c0)OR(((vt0.c0)%(vt0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (((((vt0.c0)OR(((vt0.c0)%(vt0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((((((vt0.c0)OR(((vt0.c0)%(vt0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST((v0.c0 IN ()) AS NUMERIC)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CAST((v0.c0 IN ()) AS NUMERIC)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST((v0.c0 IN ()) AS NUMERIC)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(((vt0.c0) ISNULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(((vt0.c0) ISNULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(((vt0.c0) ISNULL))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(((vt0.c0) ISNULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(((vt0.c0) ISNULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(((vt0.c0) ISNULL))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE RTRIM) IS FALSE)) UNION ALL SELECT * FROM v0 WHERE ((NOT (((v0.c0 COLLATE RTRIM) IS FALSE)))) UNION ALL SELECT ALL * FROM v0 WHERE (((((v0.c0 COLLATE RTRIM) IS FALSE)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (CAST(vt0.c0 AS TEXT) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((CAST(vt0.c0 AS TEXT) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (json(((vt0.c0)IS(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (json(((vt0.c0)IS(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((json(((vt0.c0)IS(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT TOTAL(((((((v0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN (((vt0.c0)>(vt0.c0))) AND (vt0.c0))) FROM vt0, v0 ORDER BY ((NOT (v0.c0)) IN ())  NULLS FIRST;
SELECT ALL * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (((((vt0.c0))==((vt0.c0))) IN ())) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT (((((vt0.c0))=((vt0.c0))) IN ())))) UNION ALL SELECT * FROM vt0, v0 WHERE (((((((vt0.c0))=((vt0.c0))) IN ())) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ((~ (((v0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT ((~ (((v0.c0) NOT NULL)))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((((~ (((v0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((((vt0.c0)<(MAX(COUNT(*)))))LIKE(SUM(TOTAL(MIN(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (((((vt0.c0)<(MAX(COUNT(*)))))LIKE(SUM(TOTAL(MIN(vt0.c0))))))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((((((vt0.c0)<(MAX(COUNT(*)))))LIKE(SUM(TOTAL(MIN(vt0.c0)))))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (v0.c0) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((v0.c0) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0 IN ()) IN (x''))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0 IN ()) IN (x''))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0 IN ()) IN (x''))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((((((((((((v0.c0 COLLATE NOCASE)OR((~ (v0.c0)))))OR((v0.c0 IN ()))))AND(((((v0.c0)AND(NULL)))OR(vt0.c0)))))AND('-95540636')))OR(SQLITE_COMPILEOPTION_GET(vt0.c0))))AND(((vt0.c0)<=(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE ((NOT (((((((((((((v0.c0 COLLATE NOCASE)OR((~ (v0.c0)))))OR((v0.c0 IN ()))))AND(((((v0.c0)AND(NULL)))OR(vt0.c0)))))AND('-95540636')))OR(SQLITE_COMPILEOPTION_GET(vt0.c0))))AND(((vt0.c0)<=(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((((((((((((((v0.c0 COLLATE NOCASE)OR((~ (v0.c0)))))OR((v0.c0 IN ()))))AND(((((v0.c0)AND(NULL)))OR(vt0.c0)))))AND('-95540636')))OR(SQLITE_COMPILEOPTION_GET(vt0.c0))))AND(((vt0.c0)<=(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING 1062939019 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (1062939019)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((1062939019) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING 1062939019 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (1062939019)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((1062939019) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((v0.c0 COLLATE RTRIM IN ())) UNION ALL SELECT * FROM v0 WHERE ((NOT ((v0.c0 COLLATE RTRIM IN ())))) UNION ALL SELECT * FROM v0 WHERE ((((v0.c0 COLLATE RTRIM IN ())) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT vt0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE (NULL) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((COALESCE(v0.c0, v0.c0))AND(HEX(DISTINCT v0.c0))))AND(LIKE(v0.c0, '-1641725913', 'l')))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((COALESCE(v0.c0, v0.c0))AND(HEX(DISTINCT v0.c0))))AND(LIKE(v0.c0, '-1641725913', 'l')))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((COALESCE(v0.c0, v0.c0))AND(HEX(DISTINCT v0.c0))))AND(LIKE(v0.c0, '-1641725913', 'l')))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0)IS NOT(AVG(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((vt0.c0)IS NOT(AVG(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0)IS NOT(AVG(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0)IS NOT(AVG(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((vt0.c0)IS NOT(AVG(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0)IS NOT(AVG(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL SUM((-1e500 IN ())) FROM v0, vt0 ORDER BY (- (((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST, HEX(DISTINCT TRIM(DISTINCT v0.c0))  NULLS LAST;
SELECT ALL * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE ((LIKELIHOOD(vt0.c0, 0.4756672647005026) IN ())) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT ((LIKELIHOOD(vt0.c0, 0.4756672647005026) IN ())))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((((LIKELIHOOD(vt0.c0, 0.4756672647005026) IN ())) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0, '', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((NULL COLLATE BINARY, (~ (vt0.c0)), ((vt0.c0)/(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0, '', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((NULL COLLATE BINARY, (~ (vt0.c0)), ((vt0.c0)/(vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0, '', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((NULL COLLATE BINARY, (~ (vt0.c0)), ((vt0.c0)/(vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 CROSS JOIN v0 ON CAST(LIKELY(DISTINCT vt0.c0) AS NUMERIC) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN v0 ON CAST(LIKELY(DISTINCT vt0.c0) AS NUMERIC) WHERE (CAST(v0.c0 COLLATE BINARY AS TEXT)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 CROSS JOIN v0 ON CAST(LIKELY(DISTINCT vt0.c0) AS NUMERIC) WHERE ((NOT (CAST(v0.c0 COLLATE BINARY AS TEXT)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 CROSS JOIN v0 ON CAST(LIKELY(DISTINCT vt0.c0) AS NUMERIC) WHERE (((CAST(v0.c0 COLLATE BINARY AS TEXT)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 CROSS JOIN v0 ON CAST(LIKELY(DISTINCT vt0.c0) AS NUMERIC) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT((v0.c0 IN ())) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT((v0.c0 IN ())))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT((v0.c0 IN ()))) ISNULL);
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT((v0.c0 IN ())) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT((v0.c0 IN ())))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT((v0.c0 IN ()))) ISNULL);
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE ((0.8468692819163764 IN ())) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT ((0.8468692819163764 IN ())))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((((0.8468692819163764 IN ())) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0 IN (v0.c0, '')))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))OR((('24')>>('-]ShB3gx篴'))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0 IN (v0.c0, '')))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))OR((('24')>>('-]ShB3gx篴'))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((((v0.c0 IN (v0.c0, '')))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))OR((('24')>>('-]ShB3gx篴'))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)) AND ((UNLIKELY(v0.c0))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)) AND ((UNLIKELY(v0.c0))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)) AND ((UNLIKELY(v0.c0))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT SUM(CASE WHEN ((vt0.c0)/(vt0.c0)) THEN (((vt0.c0))>((0.2674950209841904))) END) FROM vt0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ((((vt0.c0, v0.c0, x'')) BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT ((vt0.c0 COLLATE NOCASE IN ((((vt0.c0, v0.c0, x'')) BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((vt0.c0 COLLATE NOCASE IN ((((vt0.c0, v0.c0, x'')) BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ISNULL));
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE (((CAST(vt0.c0 AS BLOB))||((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE ((NOT (((CAST(vt0.c0 AS BLOB))||((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE (((((CAST(vt0.c0 AS BLOB))||((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((NULL) ISNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((NULL) ISNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(((x'')IS NOT(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(((x'')IS NOT(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(((x'')IS NOT(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(((x'')IS NOT(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(((x'')IS NOT(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(((x'')IS NOT(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))LIKE(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)GLOB(vt0.c0)))LIKE(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)GLOB(vt0.c0)))LIKE(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (LIKE(((v0.c0) IS FALSE), ((((v0.c0)AND(v0.c0)))AND(v0.c0)), 'a')) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (LIKE(((v0.c0) IS FALSE), ((((v0.c0)AND(v0.c0)))AND(v0.c0)), 'a')))) UNION SELECT DISTINCT * FROM v0 WHERE (((LIKE(((v0.c0) IS FALSE), ((((v0.c0)AND(v0.c0)))AND(v0.c0)), 'a')) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((~ (v0.c0 COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((~ (v0.c0 COLLATE BINARY))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((~ (v0.c0 COLLATE BINARY))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(((SUM(vt0.c0))!=(TOTAL(MAX(MAX(MIN(MIN(vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(((SUM(vt0.c0))!=(TOTAL(MAX(MAX(MIN(MIN(vt0.c0)))))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(((SUM(vt0.c0))<>(TOTAL(MAX(MAX(MIN(MIN(vt0.c0))))))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0)))GLOB(x'ca8a' COLLATE BINARY))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0)AND(v0.c0)))OR(v0.c0)))GLOB(x'ca8a' COLLATE BINARY))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))GLOB(x'ca8a' COLLATE BINARY))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (((((vt0.c0)IS(v0.c0))) BETWEEN (vt0.c0) AND (v0.c0))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (((((vt0.c0)IS(v0.c0))) BETWEEN (vt0.c0) AND (v0.c0))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((((((vt0.c0)IS(v0.c0))) BETWEEN (vt0.c0) AND (v0.c0))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END) IS TRUE)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END) IS TRUE)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END) IS TRUE)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (CASE WHEN GROUP_CONCAT(vt0.c0) THEN AVG(SUM(TOTAL(vt0.c0))) END IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((CASE WHEN GROUP_CONCAT(vt0.c0) THEN AVG(SUM(TOTAL(vt0.c0))) END IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((CASE WHEN GROUP_CONCAT(vt0.c0) THEN AVG(SUM(TOTAL(vt0.c0))) END IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (CASE WHEN GROUP_CONCAT(vt0.c0) THEN AVG(SUM(TOTAL(vt0.c0))) END IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((CASE WHEN GROUP_CONCAT(vt0.c0) THEN AVG(SUM(TOTAL(vt0.c0))) END IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((CASE WHEN GROUP_CONCAT(vt0.c0) THEN AVG(SUM(TOTAL(vt0.c0))) END IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0 INNER JOIN v0 ON ((((vt0.c0)AND(vt0.c0)))AND((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT * FROM vt0 INNER JOIN v0 ON ((((vt0.c0)AND(vt0.c0)))AND((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE (((CAST(0.155421188335651 AS BLOB)) ISNULL)) UNION ALL SELECT ALL * FROM vt0 INNER JOIN v0 ON ((((vt0.c0)AND(vt0.c0)))AND((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE ((NOT (((CAST(0.155421188335651 AS BLOB)) ISNULL)))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN v0 ON ((((vt0.c0)AND(vt0.c0)))AND((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE (((((CAST(0.155421188335651 AS BLOB)) ISNULL)) ISNULL));
SELECT * FROM vt0 INNER JOIN v0 ON ((((vt0.c0)AND(vt0.c0)))AND((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))|((vt0.c0 IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS TEXT))|((vt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT))|((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (LIKELIHOOD(vt0.c0, 0.6328558379915423)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (LIKELIHOOD(vt0.c0, 0.6328558379915423)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((LIKELIHOOD(vt0.c0, 0.6328558379915423)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (~ (((((((((vt0.c0)AND(GROUP_CONCAT(AVG(COUNT(*))))))OR(v0.c0)))AND(v0.c0)))AND(SUM(AVG(v0.c0)))))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT ((~ (((((((((vt0.c0)AND(GROUP_CONCAT(AVG(COUNT(*))))))OR(v0.c0)))AND(v0.c0)))AND(SUM(AVG(v0.c0)))))))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (((~ (((((((((vt0.c0)AND(GROUP_CONCAT(AVG(COUNT(*))))))OR(v0.c0)))AND(v0.c0)))AND(SUM(AVG(v0.c0))))))) ISNULL);
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())))) UNION ALL SELECT * FROM vt0, v0 WHERE (((((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((CAST(v0.c0 AS INTEGER))OR(CASE 1593641118  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(UNLIKELY(vt0.c0)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((((CAST(v0.c0 AS INTEGER))OR(CASE 1593641118  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(UNLIKELY(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((((CAST(v0.c0 AS INTEGER))OR(CASE 1593641118  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(UNLIKELY(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT vt0.c0 FROM v0 CROSS JOIN vt0 ON ((CAST(v0.c0 AS TEXT))>>(v0.c0)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0 CROSS JOIN vt0 ON ((CAST(v0.c0 AS TEXT))>>(v0.c0)) WHERE (((((0.5881118533250159)LIKE(vt0.c0)))=(0.08525123003511459))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0 CROSS JOIN vt0 ON ((CAST(v0.c0 AS TEXT))>>(v0.c0)) WHERE ((NOT (((((0.5881118533250159)LIKE(vt0.c0)))=(0.08525123003511459))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0 CROSS JOIN vt0 ON ((CAST(v0.c0 AS TEXT))>>(v0.c0)) WHERE (((((((0.5881118533250159)LIKE(vt0.c0)))==(0.08525123003511459))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0 CROSS JOIN vt0 ON ((CAST(v0.c0 AS TEXT))>>(v0.c0)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(MIN(SUM(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(MIN(SUM(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(MIN(SUM(vt0.c0)))) ISNULL);
SELECT * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE ((((+ (vt0.c0)))<=(v0.c0))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT ((((+ (vt0.c0)))<=(v0.c0))))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((((((+ (vt0.c0)))<=(v0.c0))) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON TRIM(x'e070');
SELECT DISTINCT vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON TRIM(x'e070') WHERE (((TYPEOF(vt0.c0)) NOT BETWEEN (((((v0.c0)OR(vt0.c0)))AND(v0.c0))) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON TRIM(x'e070') WHERE ((NOT (((TYPEOF(vt0.c0)) NOT BETWEEN (((((v0.c0)OR(vt0.c0)))AND(v0.c0))) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON TRIM(x'e070') WHERE (((((TYPEOF(vt0.c0)) NOT BETWEEN (((((v0.c0)OR(vt0.c0)))AND(v0.c0))) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON TRIM(x'e070');
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ()))>(CAST(vt0.c0 AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ()))>(CAST(vt0.c0 AS INTEGER)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ()))>(CAST(vt0.c0 AS INTEGER)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(AVG(AVG(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(AVG(AVG(COUNT(*)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(AVG(AVG(COUNT(*))))) ISNULL);
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((PRINTF(vt0.c0, v0.c0, v0.c0))>=(IFNULL(vt0.c0, vt0.c0)));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((PRINTF(vt0.c0, v0.c0, v0.c0))>=(IFNULL(vt0.c0, vt0.c0))) WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS TRUE)) UNION ALL SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((PRINTF(vt0.c0, v0.c0, v0.c0))>=(IFNULL(vt0.c0, vt0.c0))) WHERE ((NOT (((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS TRUE)))) UNION ALL SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((PRINTF(vt0.c0, v0.c0, v0.c0))>=(IFNULL(vt0.c0, vt0.c0))) WHERE (((((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS TRUE)) ISNULL));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((PRINTF(vt0.c0, v0.c0, v0.c0))>=(IFNULL(vt0.c0, vt0.c0)));
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(CAST(v0.c0 AS INTEGER))))OR((+ (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((NOT (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(CAST(v0.c0 AS INTEGER))))OR((+ (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(CAST(v0.c0 AS INTEGER))))OR((+ (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((TYPEOF('')) IS FALSE)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((TYPEOF('')) IS FALSE)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((TYPEOF('')) IS FALSE)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING SUM(MAX(v0.c0)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (SUM(MAX(v0.c0)))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((SUM(MAX(v0.c0))) ISNULL);
SELECT TOTAL(NULL) FROM v0, vt0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)<=(v0.c0)) END) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)<=(v0.c0)) END))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)<=(v0.c0)) END) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (((vt0.c0) IS TRUE)))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT ((NOT (((vt0.c0) IS TRUE)))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((NOT (((vt0.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE (~ (vt0.c0))  WHEN ((0x364341b1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE CAST(vt0.c0 AS TEXT) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE (~ (vt0.c0))  WHEN ((0X364341b1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE CAST(vt0.c0 AS TEXT) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE (~ (vt0.c0))  WHEN ((0x364341b1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE CAST(vt0.c0 AS TEXT) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING TOTAL(SUM(v0.c0)) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (TOTAL(SUM(v0.c0)))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((TOTAL(SUM(v0.c0))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST((~ (vt0.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST((~ (vt0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CAST((((vt0.c0, vt0.c0, '')) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0))) AS INTEGER) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CAST((((vt0.c0, vt0.c0, '')) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0))) AS INTEGER) WHERE ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ())) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CAST((((vt0.c0, vt0.c0, '')) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0))) AS INTEGER) WHERE ((NOT ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ())))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CAST((((vt0.c0, vt0.c0, '')) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0))) AS INTEGER) WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ())) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CAST((((vt0.c0, vt0.c0, '')) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0))) AS INTEGER) GROUP BY v0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING TOTAL(AVG(MIN(v0.c0))) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(AVG(MIN(v0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((TOTAL(AVG(MIN(v0.c0)))) ISNULL);
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (((CASE WHEN vt0.c0 THEN v0.c0 WHEN '824012865' THEN vt0.c0 WHEN vt0.c0 THEN 'ﹱY''*T)q.\n' WHEN ' )' THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END) IS FALSE)) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN v0.c0 WHEN '824012865' THEN vt0.c0 WHEN vt0.c0 THEN 'ﹱY''*T)q.\n' WHEN ' )' THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END) IS FALSE)))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((((CASE WHEN vt0.c0 THEN v0.c0 WHEN '824012865' THEN vt0.c0 WHEN vt0.c0 THEN 'ﹱY''*T)q.\n' WHEN ' )' THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END) IS FALSE)) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT ((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)&(vt0.c0)))IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)&(vt0.c0)))IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)&(vt0.c0)))IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(UNLIKELY(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(UNLIKELY(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(UNLIKELY(v0.c0))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(UNLIKELY(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(UNLIKELY(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(UNLIKELY(v0.c0))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON (('-411083663') BETWEEN (v0.c0) AND (((((((((v0.c0)AND(NULL)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (('-411083663') BETWEEN (v0.c0) AND (((((((((v0.c0)AND(NULL)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))) WHERE ((((vt0.c0) NOTNULL) IN ())) UNION ALL SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON (('-411083663') BETWEEN (v0.c0) AND (((((((((v0.c0)AND(NULL)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))) WHERE ((NOT ((((vt0.c0) NOTNULL) IN ())))) UNION ALL SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON (('-411083663') BETWEEN (v0.c0) AND (((((((((v0.c0)AND(NULL)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))) WHERE ((((((vt0.c0) NOTNULL) IN ())) ISNULL));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON (('-411083663') BETWEEN (v0.c0) AND (((((((((v0.c0)AND(NULL)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0))));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (x'') UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS NUMERIC)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM('') UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(''))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM('')) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM('') UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(''))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM('')) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, x'0eaefd18', 0X5f84fd90)) AND ((v0.c0, v0.c0, v0.c0)))) NOT BETWEEN (((v0.c0) ISNULL)) AND (v0.c0))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, x'0eaefd18', 0X5f84fd90)) AND ((v0.c0, v0.c0, v0.c0)))) NOT BETWEEN (((v0.c0) ISNULL)) AND (v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, x'0eaefd18', 0X5f84fd90)) AND ((v0.c0, v0.c0, v0.c0)))) NOT BETWEEN (((v0.c0) ISNULL)) AND (v0.c0))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((0.21759566971581723)<=(((v0.c0) IS FALSE)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((0.21759566971581723)<=(((v0.c0) IS FALSE)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((0.21759566971581723)<=(((v0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 WHERE (CASE WHEN ((v0.c0) IS FALSE) THEN ((v0.c0) IS TRUE) ELSE (~ (vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT (CASE WHEN ((v0.c0) IS FALSE) THEN ((v0.c0) IS TRUE) ELSE (~ (vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((CASE WHEN ((v0.c0) IS FALSE) THEN ((v0.c0) IS TRUE) ELSE (~ (vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING SUM((+ (v0.c0))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0 NOT INDEXED, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (SUM((+ (v0.c0))))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((SUM((+ (v0.c0)))) ISNULL);
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING SUM((+ (v0.c0))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0 NOT INDEXED, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (SUM((+ (v0.c0))))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((SUM((+ (v0.c0)))) ISNULL);
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))||((- (vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS NUMERIC))||((- (vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))||((- (vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)*(vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((vt0.c0)*(vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((((vt0.c0)*(vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING SUM(((TOTAL(MAX(vt0.c0)))OR(MAX(vt0.c0)))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (SUM(((TOTAL(MAX(vt0.c0)))OR(MAX(vt0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((SUM(((TOTAL(MAX(vt0.c0)))OR(MAX(vt0.c0))))) ISNULL);
SELECT v0.c0 FROM v0 NATURAL JOIN vt0;
SELECT v0.c0 FROM v0 NATURAL JOIN vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM) UNION ALL SELECT ALL v0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((NOT (CAST(vt0.c0 AS TEXT) COLLATE RTRIM))) UNION ALL SELECT ALL v0.c0 FROM v0 NATURAL JOIN vt0 WHERE (((CAST(vt0.c0 AS TEXT) COLLATE RTRIM) ISNULL));
SELECT v0.c0 FROM v0 NATURAL JOIN vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (-1704111445) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (-1704111445))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((-1704111445) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (TRIM(DISTINCT vt0.c0) COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (TRIM(DISTINCT vt0.c0) COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((TRIM(DISTINCT vt0.c0) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((vt0.c0 IN ())) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((vt0.c0 IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((((vt0.c0 IN ())) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (((((((((((((((NULL) ISNULL))AND(0.22839537916450225)))OR(((v0.c0) IS TRUE))))OR(v0.c0)))AND(((vt0.c0)LIKE(v0.c0)))))AND(COALESCE(vt0.c0, vt0.c0))))AND(((-1890377825)IS(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((NOT (((((((((((((((NULL) ISNULL))AND(0.22839537916450225)))OR(((v0.c0) IS TRUE))))OR(v0.c0)))AND(((vt0.c0)LIKE(v0.c0)))))AND(COALESCE(vt0.c0, vt0.c0))))AND(((-1890377825)IS(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (((((((((((((((((NULL) ISNULL))AND(0.22839537916450225)))OR(((v0.c0) IS TRUE))))OR(v0.c0)))AND(((vt0.c0)LIKE(v0.c0)))))AND(COALESCE(vt0.c0, vt0.c0))))AND(((-1890377825)IS(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((x'')-(v0.c0 COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((x'')-(v0.c0 COLLATE NOCASE))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((x'')-(v0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING AVG(CAST(vt0.c0 AS INTEGER)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (AVG(CAST(vt0.c0 AS INTEGER)))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((AVG(CAST(vt0.c0 AS INTEGER))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING AVG(CAST(vt0.c0 AS INTEGER)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (AVG(CAST(vt0.c0 AS INTEGER)))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((AVG(CAST(vt0.c0 AS INTEGER))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((LIKELIHOOD(vt0.c0, 0.018315077954683567) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((LIKELIHOOD(vt0.c0, 0.018315077954683567) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((((LIKELIHOOD(vt0.c0, 0.018315077954683567) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))IS NOT(vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))IS NOT(vt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))IS NOT(vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((((v0.c0 COLLATE RTRIM))<=((((((v0.c0)OR(v0.c0)))OR(v0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE ((NOT ((((v0.c0 COLLATE RTRIM))<=((((((v0.c0)OR(v0.c0)))OR(v0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((((((v0.c0 COLLATE RTRIM))<=((((((v0.c0)OR(v0.c0)))OR(v0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((MAX(TOTAL(SUM(vt0.c0))))>=(((MIN(v0.c0))||(COUNT(*))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (((MAX(TOTAL(SUM(vt0.c0))))>=(((MIN(v0.c0))||(COUNT(*))))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((((MAX(TOTAL(SUM(vt0.c0))))>=(((MIN(v0.c0))||(COUNT(*)))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((CAST('M_篴l' AS BLOB) IN ())) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((CAST('M_篴l' AS BLOB) IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((CAST('M_篴l' AS BLOB) IN ())) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)OR(v0.c0)), ((((v0.c0)OR(v0.c0)))AND(v0.c0))))<=((v0.c0 COLLATE BINARY, '472791768', NULL COLLATE BINARY)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)OR(v0.c0)), ((((v0.c0)OR(v0.c0)))AND(v0.c0))))<=((v0.c0 COLLATE BINARY, '472791768', NULL COLLATE BINARY)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)OR(v0.c0)), ((((v0.c0)OR(v0.c0)))AND(v0.c0))))<=((v0.c0 COLLATE BINARY, '472791768', NULL COLLATE BINARY)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON ((vt0.c0)>(vt0.c0)) COLLATE NOCASE GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON ((vt0.c0)>(vt0.c0)) COLLATE NOCASE GROUP BY v0.c0, vt0.c0 HAVING CASE ((v0.c0)>=(vt0.c0))  WHEN ((SUM(COUNT(MAX(v0.c0))))<(MAX(COUNT(*)))) THEN AVG(MAX(vt0.c0)) ELSE (+ (v0.c0)) END UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON ((vt0.c0)>(vt0.c0)) COLLATE NOCASE GROUP BY v0.c0, vt0.c0 HAVING (NOT (CASE ((v0.c0)>=(vt0.c0))  WHEN ((SUM(COUNT(MAX(v0.c0))))<(MAX(COUNT(*)))) THEN AVG(MAX(vt0.c0)) ELSE (+ (v0.c0)) END)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON ((vt0.c0)>(vt0.c0)) COLLATE NOCASE GROUP BY v0.c0, vt0.c0 HAVING ((CASE ((v0.c0)>=(vt0.c0))  WHEN ((SUM(COUNT(MAX(v0.c0))))<(MAX(COUNT(*)))) THEN AVG(MAX(vt0.c0)) ELSE (+ (v0.c0)) END) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0))<=((vt0.c0))) IN ((vt0.c0 IN (vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0))<=((vt0.c0))) IN ((vt0.c0 IN (vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0))<=((vt0.c0))) IN ((vt0.c0 IN (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN ((vt0.c0)<=(v0.c0)) THEN (- (vt0.c0)) WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN (((vt0.c0, v0.c0, vt0.c0))==((v0.c0, v0.c0, v0.c0))) WHEN ((v0.c0)IS NOT(vt0.c0)) THEN NULL ELSE vt0.c0 END;
SELECT DISTINCT vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN ((vt0.c0)<=(v0.c0)) THEN (- (vt0.c0)) WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN (((vt0.c0, v0.c0, vt0.c0))=((v0.c0, v0.c0, v0.c0))) WHEN ((v0.c0)IS NOT(vt0.c0)) THEN NULL ELSE vt0.c0 END WHERE (v0.c0 COLLATE NOCASE) UNION SELECT DISTINCT vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN ((vt0.c0)<=(v0.c0)) THEN (- (vt0.c0)) WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN (((vt0.c0, v0.c0, vt0.c0))=((v0.c0, v0.c0, v0.c0))) WHEN ((v0.c0)IS NOT(vt0.c0)) THEN NULL ELSE vt0.c0 END WHERE ((NOT (v0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN ((vt0.c0)<=(v0.c0)) THEN (- (vt0.c0)) WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN (((vt0.c0, v0.c0, vt0.c0))=((v0.c0, v0.c0, v0.c0))) WHEN ((v0.c0)IS NOT(vt0.c0)) THEN NULL ELSE vt0.c0 END WHERE (((v0.c0 COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN ((vt0.c0)<=(v0.c0)) THEN (- (vt0.c0)) WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN (((vt0.c0, v0.c0, vt0.c0))==((v0.c0, v0.c0, v0.c0))) WHEN ((v0.c0)IS NOT(vt0.c0)) THEN NULL ELSE vt0.c0 END;
SELECT ALL v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON x'' GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON x'' WHERE (((((v0.c0) NOT NULL))LIKE((NOT (vt0.c0))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON x'' WHERE ((NOT (((((v0.c0) NOT NULL))LIKE((NOT (vt0.c0))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON x'' WHERE (((((((v0.c0) NOT NULL))LIKE((NOT (vt0.c0))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON x'' GROUP BY v0.c0, vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((COUNT(v0.c0)))>((v0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((COUNT(v0.c0)))>((v0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((COUNT(v0.c0)))>((v0.c0 COLLATE RTRIM)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((COUNT(v0.c0)))>((v0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((COUNT(v0.c0)))>((v0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((COUNT(v0.c0)))>((v0.c0 COLLATE RTRIM)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (v0.c0) UNION ALL SELECT * FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)IS NOT(((vt0.c0)>=(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE)IS NOT(((vt0.c0)>=(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)IS NOT(((vt0.c0)>=(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (NULL) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING 1798450731 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (1798450731)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((1798450731) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING 1798450731 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (1798450731)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((1798450731) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) ISNULL)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS INTEGER)) ISNULL)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER)) ISNULL)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((('-1971872696' IN ()))>=(((v0.c0) BETWEEN (x'6135f56d') AND (v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((('-1971872696' IN ()))>=(((v0.c0) BETWEEN (x'6135f56d') AND (v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((('-1971872696' IN ()))>=(((v0.c0) BETWEEN (x'6135f56d') AND (v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (0Xc6d40c8) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (0Xc6d40c8))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((0xc6d40c8) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING TOTAL(MAX(vt0.c0)) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(MAX(vt0.c0)))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((TOTAL(MAX(vt0.c0))) ISNULL);
SELECT v0.c0 FROM vt0, v0;
SELECT v0.c0 FROM vt0, v0 WHERE (vt0.c0) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 WHERE (((vt0.c0) ISNULL));
SELECT v0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (NULL) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM v0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 WHERE (((((((v0.c0)OR(v0.c0)))OR(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((NOT (((((((v0.c0)OR(v0.c0)))OR(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE (((((((((v0.c0)OR(v0.c0)))OR(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING MIN(MAX(v0.c0)) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (MIN(MAX(v0.c0)))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((MIN(MAX(v0.c0))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CAST(((v0.c0)LIKE(v0.c0)) AS REAL)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0)LIKE(v0.c0)) AS REAL)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CAST(((v0.c0)LIKE(v0.c0)) AS REAL)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(((SUM(v0.c0))>>(TOTAL(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(((SUM(v0.c0))>>(TOTAL(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(((SUM(v0.c0))>>(TOTAL(v0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((('')>>(vt0.c0)), load_extension(vt0.c0), (~ (vt0.c0))))>((((vt0.c0)>=(vt0.c0)), CASE WHEN '367928616' THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 'j_d]' END, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((('')>>(vt0.c0)), load_extension(vt0.c0), (~ (vt0.c0))))>((((vt0.c0)>=(vt0.c0)), CASE WHEN '367928616' THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 'j_d]' END, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((('')>>(vt0.c0)), load_extension(vt0.c0), (~ (vt0.c0))))>((((vt0.c0)>=(vt0.c0)), CASE WHEN '367928616' THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 'j_d]' END, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ('616681474' COLLATE NOCASE COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT ('616681474' COLLATE NOCASE COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((('616681474' COLLATE NOCASE COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) IN (CAST(vt0.c0 AS REAL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) IN (CAST(vt0.c0 AS REAL)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) IN (CAST(vt0.c0 AS REAL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(((((MAX(vt0.c0))AND(vt0.c0)))OR(TOTAL(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(((((MAX(vt0.c0))AND(vt0.c0)))OR(TOTAL(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(((((MAX(vt0.c0))AND(vt0.c0)))OR(TOTAL(vt0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS TEXT)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS TEXT)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS TEXT)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0) NOT NULL) COLLATE RTRIM COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0) NOT NULL) COLLATE RTRIM COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) NOT NULL) COLLATE RTRIM COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0))==((vt0.c0))) ELSE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE (vt0.c0 IN ())  WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0))==((vt0.c0))) ELSE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE (vt0.c0 IN ())  WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0))==((vt0.c0))) ELSE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY v0.c0, vt0.c0 HAVING SUBSTR((- (v0.c0)), AVG(v0.c0)) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (SUBSTR((- (v0.c0)), AVG(v0.c0)))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY v0.c0, vt0.c0 HAVING ((SUBSTR((- (v0.c0)), AVG(v0.c0))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY v0.c0, vt0.c0 HAVING SUBSTR((- (v0.c0)), AVG(v0.c0)) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (SUBSTR((- (v0.c0)), AVG(v0.c0)))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY v0.c0, vt0.c0 HAVING ((SUBSTR((- (v0.c0)), AVG(v0.c0))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((((('-828880229') NOTNULL))GLOB(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((('-828880229') NOTNULL))GLOB(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((('-828880229') NOTNULL))GLOB(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN (- (vt0.c0)) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 COLLATE NOCASE THEN (- (vt0.c0)) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN vt0.c0 COLLATE NOCASE THEN (- (vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END AS TEXT)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END AS TEXT)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END AS TEXT)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING MIN(((0X1816462c)+(vt0.c0))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (MIN(((0X1816462c)+(vt0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((MIN(((0X1816462c)+(vt0.c0)))) ISNULL);
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING MIN(((0X1816462c)+(vt0.c0))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (MIN(((0X1816462c)+(vt0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((MIN(((0X1816462c)+(vt0.c0)))) ISNULL);
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (LIKELIHOOD(vt0.c0, 0.4893574951153432) COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (LIKELIHOOD(vt0.c0, 0.4893574951153432) COLLATE NOCASE))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((LIKELIHOOD(vt0.c0, 0.4893574951153432) COLLATE NOCASE) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 END IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((CASE WHEN vt0.c0 THEN vt0.c0 END IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 END IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0)*(((v0.c0) NOT NULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0)*(((v0.c0) NOT NULL)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)*(((v0.c0) NOT NULL)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(AVG(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(AVG(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(AVG(v0.c0))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0)))|(NULL))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((NOT (vt0.c0)))|(NULL))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((NOT (vt0.c0)))|(NULL))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0) IS TRUE) IN (json_array_length(vt0.c0), ((x'')!=(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0) IS TRUE) IN (json_array_length(vt0.c0), ((x'')<>(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0) IS TRUE) IN (json_array_length(vt0.c0), ((x'')<>(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((NOT (vt0.c0)))GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.6508663377764474))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((NOT (vt0.c0)))GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.6508663377764474))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((NOT (vt0.c0)))GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.6508663377764474))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((CAST(vt0.c0 AS INTEGER))<>(MIN(AVG(COUNT(*))) COLLATE RTRIM)) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (((CAST(vt0.c0 AS INTEGER))<>(MIN(AVG(COUNT(*))) COLLATE RTRIM)))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((((CAST(vt0.c0 AS INTEGER))!=(MIN(AVG(COUNT(*))) COLLATE RTRIM))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (CAST(CAST(v0.c0 AS REAL) AS REAL)) UNION ALL SELECT * FROM v0 WHERE ((NOT (CAST(CAST(v0.c0 AS REAL) AS REAL)))) UNION ALL SELECT * FROM v0 WHERE (((CAST(CAST(v0.c0 AS REAL) AS REAL)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((((((((v0.c0))=((v0.c0))))AND(NULL)))AND(json_quote(vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((NOT ((((((((v0.c0))==((v0.c0))))AND(NULL)))AND(json_quote(vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((((((((((v0.c0))=((v0.c0))))AND(NULL)))AND(json_quote(vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON 0.8795278382986481 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON 0.8795278382986481 WHERE ((((((((((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))AND(((vt0.c0) NOT BETWEEN ('1983BI') AND (v0.c0)))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))OR(((((NULL)AND(vt0.c0)))AND(v0.c0)))))OR(((vt0.c0)-(v0.c0))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON 0.8795278382986481 WHERE ((NOT ((((((((((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))AND(((vt0.c0) NOT BETWEEN ('1983BI') AND (v0.c0)))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))OR(((((NULL)AND(vt0.c0)))AND(v0.c0)))))OR(((vt0.c0)-(v0.c0))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON 0.8795278382986481 WHERE ((((((((((((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))AND(((vt0.c0) NOT BETWEEN ('1983BI') AND (v0.c0)))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))OR(((((NULL)AND(vt0.c0)))AND(v0.c0)))))OR(((vt0.c0)-(v0.c0))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON 0.8795278382986481 GROUP BY v0.c0, vt0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING COUNT(NULL) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (COUNT(NULL))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((COUNT(NULL)) ISNULL);
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING COUNT(NULL) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (COUNT(NULL))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((COUNT(NULL)) ISNULL);
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL v0.c0 FROM vt0, v0;
SELECT ALL v0.c0 FROM vt0, v0 WHERE (((UNLIKELY(v0.c0)) BETWEEN ((((vt0.c0)) BETWEEN (('-1038529174')) AND ((v0.c0)))) AND (((((vt0.c0)OR(vt0.c0)))AND(v0.c0))))) UNION ALL SELECT v0.c0 FROM vt0, v0 WHERE ((NOT (((UNLIKELY(v0.c0)) BETWEEN ((((vt0.c0)) BETWEEN (('-1038529174')) AND ((v0.c0)))) AND (((((vt0.c0)OR(vt0.c0)))AND(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 WHERE (((((UNLIKELY(v0.c0)) BETWEEN ((((vt0.c0)) BETWEEN (('-1038529174')) AND ((v0.c0)))) AND (((((vt0.c0)OR(vt0.c0)))AND(v0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((CAST(vt0.c0 AS TEXT))<<(((vt0.c0)<=(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((CAST(vt0.c0 AS TEXT))<<(((vt0.c0)<=(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((CAST(vt0.c0 AS TEXT))<<(((vt0.c0)<=(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (-2.102595599E9 COLLATE RTRIM) AND (((v0.c0)IS('0.31304533305207516'))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (-2.102595599E9 COLLATE RTRIM) AND (((v0.c0)IS('0.31304533305207516'))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (-2.102595599E9 COLLATE RTRIM) AND (((v0.c0)IS('0.31304533305207516'))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE (v0.c0) ORDER BY v0.c0 DESC;
SELECT ALL * FROM vt0, v0 WHERE ((NOT (v0.c0))) ORDER BY v0.c0 DESC;
SELECT ALL * FROM vt0, v0 WHERE (((v0.c0) ISNULL)) ORDER BY v0.c0 DESC;
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS REAL), ((vt0.c0) NOTNULL), '34188956')) AND ((vt0.c0, ((vt0.c0) NOT NULL), ((8.24012865E8)<(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS REAL), ((vt0.c0) NOTNULL), '34188956')) AND ((vt0.c0, ((vt0.c0) NOT NULL), ((8.24012865E8)<(vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS REAL), ((vt0.c0) NOTNULL), '34188956')) AND ((vt0.c0, ((vt0.c0) NOT NULL), ((8.24012865E8)<(vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((~ (v0.c0)) IN (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END, (((x'')) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (((~ (v0.c0)) IN (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END, (((x'')) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((~ (v0.c0)) IN (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END, (((x'')) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(CASE WHEN SUM(v0.c0) THEN MIN(MIN(COUNT(v0.c0))) END) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(CASE WHEN SUM(v0.c0) THEN MIN(MIN(COUNT(v0.c0))) END))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(CASE WHEN SUM(v0.c0) THEN MIN(MIN(COUNT(v0.c0))) END)) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (0.1213030982132498) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (0.1213030982132498))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((0.1213030982132498) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((- ((((vt0.c0))<=((vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((- ((((vt0.c0))<=((vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((- ((((vt0.c0))<=((vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((((vt0.c0) ISNULL)) BETWEEN (((vt0.c0) IS TRUE)) AND ('-449521875'))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE ((NOT (((((vt0.c0) ISNULL)) BETWEEN (((vt0.c0) IS TRUE)) AND ('-449521875'))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((((((vt0.c0) ISNULL)) BETWEEN (((vt0.c0) IS TRUE)) AND ('-449521875'))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING TOTAL(((v0.c0) IS FALSE)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (TOTAL(((v0.c0) IS FALSE)))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((TOTAL(((v0.c0) IS FALSE))) ISNULL);
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING TOTAL(((v0.c0) IS FALSE)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (TOTAL(((v0.c0) IS FALSE)))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((TOTAL(((v0.c0) IS FALSE))) ISNULL);
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT ((NOT (v0.c0))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((NOT (v0.c0))) ISNULL));
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)&(((vt0.c0) NOT BETWEEN (0X7763369) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)&(((vt0.c0) NOT BETWEEN (0X7763369) AND (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)&(((vt0.c0) NOT BETWEEN (0X7763369) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ('6锨p-n') GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT ('6锨p-n'))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((('6锨p-n') ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>>(v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>>(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>>(v0.c0))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM vt0 INNER JOIN v0 ON ((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 INNER JOIN v0 ON ((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE WHERE (CASE ((v0.c0) IS TRUE)  WHEN CAST(v0.c0 AS TEXT) THEN ((vt0.c0) IS FALSE) ELSE LIKELIHOOD(DISTINCT v0.c0, 0.24801026970734574) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0 INNER JOIN v0 ON ((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE WHERE ((NOT (CASE ((v0.c0) IS TRUE)  WHEN CAST(v0.c0 AS TEXT) THEN ((vt0.c0) IS FALSE) ELSE LIKELIHOOD(DISTINCT v0.c0, 0.24801026970734574) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0 INNER JOIN v0 ON ((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE WHERE (((CASE ((v0.c0) IS TRUE)  WHEN CAST(v0.c0 AS TEXT) THEN ((vt0.c0) IS FALSE) ELSE LIKELIHOOD(DISTINCT v0.c0, 0.24801026970734574) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 INNER JOIN v0 ON ((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((((v0.c0)<<(v0.c0)))>(v0.c0)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((((v0.c0)<<(v0.c0)))>(v0.c0)) GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((((v0.c0)<<(v0.c0)))>(v0.c0)) GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((((v0.c0)<<(v0.c0)))>(v0.c0)) GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((((v0.c0)<<(v0.c0)))>(v0.c0)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((((v0.c0)<<(v0.c0)))>(v0.c0)) GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((((v0.c0)<<(v0.c0)))>(v0.c0)) GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((((v0.c0)<<(v0.c0)))>(v0.c0)) GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((((v0.c0)<<(v0.c0)))>(v0.c0)) GROUP BY vt0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((vt0.c0) IS TRUE))GLOB((vt0.c0 IN (vt0.c0, v0.c0))))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (((((vt0.c0) IS TRUE))GLOB((vt0.c0 IN (vt0.c0, v0.c0))))))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((((vt0.c0) IS TRUE))GLOB((vt0.c0 IN (vt0.c0, v0.c0))))) ISNULL));
SELECT vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((-1.585929879E9 IN ())) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((-1.585929879E9 IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((-1.585929879E9 IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (vt0.c0) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (vt0.c0))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((vt0.c0) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT('0.26222117381369525')) BETWEEN (vt0.c0) AND (COUNT(MAX(vt0.c0))))) BETWEEN (COUNT(*)) AND (((vt0.c0) BETWEEN (COUNT(*)) AND (GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((COUNT('0.26222117381369525')) BETWEEN (vt0.c0) AND (COUNT(MAX(vt0.c0))))) BETWEEN (COUNT(*)) AND (((vt0.c0) BETWEEN (COUNT(*)) AND (GROUP_CONCAT(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((COUNT('0.26222117381369525')) BETWEEN (vt0.c0) AND (COUNT(MAX(vt0.c0))))) BETWEEN (COUNT(*)) AND (((vt0.c0) BETWEEN (COUNT(*)) AND (GROUP_CONCAT(vt0.c0)))))) ISNULL);
SELECT ALL SUM((CAST(v0.c0 AS TEXT) IN ())) FROM v0;
SELECT ALL vt0.c0 FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE (UPPER(DISTINCT (+ (vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT (UPPER(DISTINCT (+ (vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((UPPER(DISTINCT (+ (vt0.c0)))) ISNULL));
SELECT ALL vt0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))&(((((((((((((v0.c0)OR(vt0.c0)))AND('-1650963245')))OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))&(((((((((((((v0.c0)OR(vt0.c0)))AND('-1650963245')))OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))&(((((((((((((v0.c0)OR(vt0.c0)))AND('-1650963245')))OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0) NOTNULL) COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0) NOTNULL) COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) NOTNULL) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(v0.c0)) BETWEEN (AVG(v0.c0)) AND (((v0.c0)-(COUNT(*))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((MAX(v0.c0)) BETWEEN (AVG(v0.c0)) AND (((v0.c0)-(COUNT(*))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((MAX(v0.c0)) BETWEEN (AVG(v0.c0)) AND (((v0.c0)-(COUNT(*)))))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(v0.c0)) BETWEEN (AVG(v0.c0)) AND (((v0.c0)-(COUNT(*))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((MAX(v0.c0)) BETWEEN (AVG(v0.c0)) AND (((v0.c0)-(COUNT(*))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((MAX(v0.c0)) BETWEEN (AVG(v0.c0)) AND (((v0.c0)-(COUNT(*)))))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (v0.c0) UNION ALL SELECT * FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((+ (v0.c0))) IS FALSE)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((+ (v0.c0))) IS FALSE)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((+ (v0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0))))/(((vt0.c0)*(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0))<=((vt0.c0))))/(((vt0.c0)*(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0))<=((vt0.c0))))/(((vt0.c0)*(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING CAST(COUNT(v0.c0) AS NUMERIC) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (CAST(COUNT(v0.c0) AS NUMERIC))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((CAST(COUNT(v0.c0) AS NUMERIC)) ISNULL);
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING CAST(COUNT(v0.c0) AS NUMERIC) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (CAST(COUNT(v0.c0) AS NUMERIC))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((CAST(COUNT(v0.c0) AS NUMERIC)) ISNULL);
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (vt0.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (((((vt0.c0) ISNULL)) NOT BETWEEN (vt0.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((((vt0.c0) ISNULL)) NOT BETWEEN (vt0.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0))==((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.6931817138752338 ELSE v0.c0 END)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0))=((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.6931817138752338 ELSE v0.c0 END)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0))=((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.6931817138752338 ELSE v0.c0 END)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 END) IS TRUE)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 END) IS TRUE)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 END) IS TRUE)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING GROUP_CONCAT((NOT (v0.c0))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (GROUP_CONCAT((NOT (v0.c0))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((GROUP_CONCAT((NOT (v0.c0)))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING GROUP_CONCAT((NOT (v0.c0))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (GROUP_CONCAT((NOT (v0.c0))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((GROUP_CONCAT((NOT (v0.c0)))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL v0.c0 FROM v0 CROSS JOIN vt0 ON ((((('') IS FALSE)))>=((((((((((((((vt0.c0)AND(vt0.c0)))AND('|/')))AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))));
SELECT v0.c0 FROM v0 CROSS JOIN vt0 ON ((((('') IS FALSE)))>=((((((((((((((vt0.c0)AND(vt0.c0)))AND('|/')))AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0))))) WHERE ((((0.9480615116590956)) BETWEEN ((((vt0.c0)<<(v0.c0)))) AND ((-123676072)))) UNION ALL SELECT v0.c0 FROM v0 CROSS JOIN vt0 ON ((((('') IS FALSE)))>=((((((((((((((vt0.c0)AND(vt0.c0)))AND('|/')))AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0))))) WHERE ((NOT ((((0.9480615116590956)) BETWEEN ((((vt0.c0)<<(v0.c0)))) AND ((-123676072)))))) UNION ALL SELECT v0.c0 FROM v0 CROSS JOIN vt0 ON ((((('') IS FALSE)))>=((((((((((((((vt0.c0)AND(vt0.c0)))AND('|/')))AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0))))) WHERE ((((((0.9480615116590956)) BETWEEN ((((vt0.c0)<<(v0.c0)))) AND ((-123676072)))) ISNULL));
SELECT ALL v0.c0 FROM v0 CROSS JOIN vt0 ON ((((('') IS FALSE)))>=((((((((((((((vt0.c0)AND(vt0.c0)))AND('|/')))AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))));
