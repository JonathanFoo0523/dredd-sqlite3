-- Time: 2024/06/10 02:38:10
-- Database: database12
-- Database version: 3.40.0
-- seed value: 1943921512
PRAGMA cache_size = 50000; -- 14ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 1ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, c1 UNINDEXED, matchinfo=fts3); -- 0ms;
INSERT OR IGNORE INTO vt1(c1) VALUES (0.7761139741214488); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (x'af51', 0Xfffffffff696932f); -- 0ms;
UPDATE OR IGNORE vt1 SET c1=0.5225939604903039 WHERE 'V~9/%,de'; -- 0ms;
PRAGMA cell_size_check = false; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 959841118); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '54630'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
INSERT OR FAIL INTO vt0(c1, c0) VALUES (x'7e8f', '-157904081'), ('-2044280161', ''), (0.9703154288254611, '0.7761139741214488'), (x'2fb5', -2044280161), (0x51a7fcfc, NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '1694'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('-2092226209', NULL); -- 1ms;
REINDEX  vt1; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1, c0, c0)=(1095487607, NULL, 0.31015410577822056); -- 3ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 0); -- 0ms;
ANALYZE vt0; -- 1ms;
PRAGMA main.journal_size_limit = 3633447641138290435; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x'e851', -991089562); -- 1ms;
UPDATE OR IGNORE vt1 SET (c0)=('*aMT_U_]') WHERE (load_extension(vt1.c0, vt1.c0) IN ()); -- 0ms;
INSERT OR ABORT INTO vt1(c0, c1) VALUES (-862922171, x'4836'), ('㋇Hq6', '*AMT_U_]'), (NULL, NULL), (0.31015410577822056, 425766857), ('', ''); -- 0ms;
PRAGMA main.checkpoint_fullfsync; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt1(c1) VALUES (x'5cb3'); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=NULL; -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 0ms;
REINDEX  vt0; -- 0ms;
PRAGMA main.default_cache_size = -613418625; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'' WHERE (((((((vt0.c1, vt0.c1, vt0.c0))<=((vt0.c0, vt0.c1, vt0.c0))))AND((~ (NULL)))))OR((NOT (vt0.c1)))); -- 0ms;
INSERT OR IGNORE INTO vt1(c1, c0) VALUES (0.7274660752662803, x'60a0'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c1)=('-531954782'); -- 1ms;
PRAGMA incremental_vacuum(-967761694); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 524360895); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
INSERT INTO vt1(vt1) VALUES('automerge=12'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''), (0.7761139741214488), (x'e69d'); -- 0ms;
UPDATE OR FAIL vt0 SET c0='D|Y', c1='', c0=x'' WHERE '0.31015410577822056'; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
PRAGMA cache_size; -- 0ms;
INSERT OR REPLACE INTO vt1(c1) VALUES (0.8798270251275091), (0.9888242262393804), ('-1845690940'); -- 0ms;
INSERT OR REPLACE INTO vt1(c0, c1) VALUES (-1.048415914E9, x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
UPDATE vt0 SET (c0)=('-531954782'); -- 1ms;
UPDATE OR IGNORE vt0 SET c1=NULL; -- 1ms;
PRAGMA integrity_check; -- 0ms;
END TRANSACTION; -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT OR ABORT INTO vt0(c1, c0) VALUES (x'98fe', CAST(((0.8461352407721326)&(-2.092226209E9)) AS TEXT)); -- 0ms;
UPDATE OR REPLACE vt1 SET (c0)=('-157904081'); -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES ('o{'); -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (0x414bd077, x''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1940496008'); -- 0ms;
UPDATE OR IGNORE vt1 SET c1=0Xffffffffe04b03a2; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (x'b8f3', '-613418625'), ('0.9703154288254611', NULL), ('TRUE', '辟)jcPdQ'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ANALYZE; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES (0xffffffff8626c29f), (NULL), ('minutesEo憤'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (0.4267750555796579); -- 0ms;
PRAGMA main.mmap_size = 7192752342732453632; -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES ('Uh\nf1v'), (NULL), ('-1964601441'); -- 0ms;
PRAGMA foreign_keys; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1) VALUES ('-1048415914'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c1=x''; -- 0ms;
INSERT OR FAIL INTO vt1(c1, c0) VALUES (-531954782, 0.7505799245222806), (x'5588', 0.034271018361501815), (0Xffffffffe3b07c33, NULL); -- 0ms;
UPDATE OR IGNORE vt1 SET (c1, c1)=(x'', '105275812') WHERE x''; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (1.369963772E9), (x'2b0b'), (''), (NULL), (-5.31954782E8); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((105275812) BETWEEN (x'5c2a') AND ('-830694552')))GLOB((('A~﵅\r')-(NULL)))); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE vt1 SET (c1)=('1369963772') WHERE ((vt1.c0)IS(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END)); -- 0ms;
UPDATE OR REPLACE vt0 SET c1=x''; -- 1ms;
UPDATE OR IGNORE vt0 SET c1=x'' WHERE (((vt0.c1 IN (x''))) IS FALSE); -- 0ms;
UPDATE OR IGNORE vt1 SET c1=0.7274660752662803; -- 1ms;
INSERT OR ROLLBACK INTO vt1(c1) VALUES (x''); -- 0ms;
ANALYZE; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 REAL ); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)OR('Uh\nf1v')))OR('QQv	')))OR(NULL)))AND(x''))) NOT BETWEEN (NULLIF(DISTINCT 0.9703154288254611, x'5934e405')) AND (CAST(NULL AS INTEGER))); -- 3ms;
END TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL vt1.c1, t0.c0, vt1.c0 FROM t0, vt0, vt1;
SELECT ALL vt1.c1, t0.c0, vt1.c0 FROM t0, vt0, vt1 WHERE (((((((vt0.c0))<((t0.c0)))))>((CAST(vt0.c1 AS NUMERIC))))) UNION ALL SELECT vt1.c1, t0.c0, vt1.c0 FROM t0, vt0 NOT INDEXED, vt1 WHERE ((NOT (((((((vt0.c0))<((t0.c0)))))>((CAST(vt0.c1 AS NUMERIC))))))) UNION ALL SELECT vt1.c1, t0.c0, vt1.c0 FROM t0, vt0, vt1 WHERE (((((((((vt0.c0))<((t0.c0)))))>((CAST(vt0.c1 AS NUMERIC))))) ISNULL));
SELECT ALL vt1.c1, t0.c0, vt1.c0 FROM t0, vt0, vt1;
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c1, vt1.c0 FROM vt0 CROSS JOIN vt1 ON (+ ((vt1.c1 IN (vt0.c1))));
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c1, vt1.c0 FROM vt0 CROSS JOIN vt1 ON (+ ((vt1.c1 IN (vt0.c1)))) WHERE (CAST((- (vt0.c0)) AS REAL)) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt1.c1, vt1.c0 FROM vt0 CROSS JOIN vt1 ON (+ ((vt1.c1 IN (vt0.c1)))) WHERE ((NOT (CAST((- (vt0.c0)) AS REAL)))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt1.c1, vt1.c0 FROM vt0 CROSS JOIN vt1 ON (+ ((vt1.c1 IN (vt0.c1)))) WHERE (((CAST((- (vt0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c1, vt1.c0 FROM vt0 CROSS JOIN vt1 ON (+ ((vt1.c1 IN (vt0.c1))));
SELECT vt1.c1, t0.c0, vt1.c0, vt0.c1, vt0.c0 FROM t0, vt1 NOT INDEXED CROSS JOIN vt0 ON ((CASE WHEN 'Uh\nf1v' THEN t0.c0 END) IS FALSE) GROUP BY vt1.c1, t0.c0, vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c1, t0.c0, vt1.c0, vt0.c1, vt0.c0 FROM t0, vt1 CROSS JOIN vt0 ON ((CASE WHEN 'Uh\nf1v' THEN t0.c0 END) IS FALSE) WHERE ((((vt0.c1, vt1.c1, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS NUMERIC), ((t0.c0) NOT NULL), (vt1.c1 IN (vt0.c1)))) AND ((((vt1.c1) BETWEEN ('') AND (vt0.c1)), NULL, NULL)))) GROUP BY vt1.c1, t0.c0, vt1.c0, vt0.c1, vt0.c0 UNION SELECT ALL vt1.c1, t0.c0, vt1.c0, vt0.c1, vt0.c0 FROM t0, vt1 CROSS JOIN vt0 ON ((CASE WHEN 'Uh\nf1v' THEN t0.c0 END) IS FALSE) WHERE ((NOT ((((vt0.c1, vt1.c1, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS NUMERIC), ((t0.c0) NOT NULL), (vt1.c1 IN (vt0.c1)))) AND ((((vt1.c1) BETWEEN ('') AND (vt0.c1)), NULL, NULL)))))) GROUP BY vt1.c1, t0.c0, vt1.c0, vt0.c1, vt0.c0 UNION SELECT ALL vt1.c1, t0.c0, vt1.c0, vt0.c1, vt0.c0 FROM t0, vt1 CROSS JOIN vt0 ON ((CASE WHEN 'Uh\nf1v' THEN t0.c0 END) IS FALSE) WHERE ((((((vt0.c1, vt1.c1, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS NUMERIC), ((t0.c0) NOT NULL), (vt1.c1 IN (vt0.c1)))) AND ((((vt1.c1) BETWEEN ('') AND (vt0.c1)), NULL, NULL)))) ISNULL)) GROUP BY vt1.c1, t0.c0, vt1.c0, vt0.c1, vt0.c0;
SELECT vt1.c1, t0.c0, vt1.c0, vt0.c1, vt0.c0 FROM t0, vt1 NOT INDEXED CROSS JOIN vt0 ON ((CASE WHEN 'Uh\nf1v' THEN t0.c0 END) IS FALSE) GROUP BY vt1.c1, t0.c0, vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c0 FROM t0 FULL OUTER JOIN vt0 ON (((vt1.c0 IN ()))<>((vt1.c1 IN ()))) INNER JOIN vt1 ON 0.565730433440453 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0 FULL OUTER JOIN vt0 ON (((vt1.c0 IN ()))!=((vt1.c1 IN ()))) INNER JOIN vt1 ON 0.565730433440453 GROUP BY vt1.c0 HAVING GROUP_CONCAT((+ (vt0.c0))) UNION ALL SELECT ALL vt1.c0 FROM t0 FULL OUTER JOIN vt0 ON (((vt1.c0 IN ()))<>((vt1.c1 IN ()))) INNER JOIN vt1 ON 0.565730433440453 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT((+ (vt0.c0))))) UNION ALL SELECT ALL vt1.c0 FROM t0 FULL OUTER JOIN vt0 ON (((vt1.c0 IN ()))<>((vt1.c1 IN ()))) INNER JOIN vt1 ON 0.565730433440453 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT((+ (vt0.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM t0 FULL OUTER JOIN vt0 ON (((vt1.c0 IN ()))<>((vt1.c1 IN ()))) INNER JOIN vt1 ON 0.565730433440453 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0 FULL OUTER JOIN vt0 ON (((vt1.c0 IN ()))!=((vt1.c1 IN ()))) INNER JOIN vt1 ON 0.565730433440453 GROUP BY vt1.c0 HAVING GROUP_CONCAT((+ (vt0.c0))) UNION ALL SELECT ALL vt1.c0 FROM t0 FULL OUTER JOIN vt0 ON (((vt1.c0 IN ()))<>((vt1.c1 IN ()))) INNER JOIN vt1 ON 0.565730433440453 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT((+ (vt0.c0))))) UNION ALL SELECT ALL vt1.c0 FROM t0 FULL OUTER JOIN vt0 ON (((vt1.c0 IN ()))<>((vt1.c1 IN ()))) INNER JOIN vt1 ON 0.565730433440453 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT((+ (vt0.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM t0 FULL OUTER JOIN vt0 ON (((vt1.c0 IN ()))<>((vt1.c1 IN ()))) INNER JOIN vt1 ON 0.565730433440453 GROUP BY vt1.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c1 IN (vt0.c0)))*(((vt0.c1)<=(vt0.c1))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c1 IN (vt0.c0)))*(((vt0.c1)<=(vt0.c1))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c1 IN (vt0.c0)))*(((vt0.c1)<=(vt0.c1))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, t0, vt1;
SELECT DISTINCT * FROM vt0, t0, vt1 WHERE ((- (NULL))) UNION SELECT DISTINCT * FROM vt0, t0, vt1 WHERE ((NOT ((- (NULL))))) UNION SELECT DISTINCT * FROM vt0, t0, vt1 WHERE ((((- (NULL))) ISNULL));
SELECT DISTINCT * FROM vt0, t0, vt1;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (((((- (vt1.c1))))>=(((vt1.c1 IN ()))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (((((- (vt1.c1))))>=(((vt1.c1 IN ()))))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (((((((- (vt1.c1))))>=(((vt1.c1 IN ()))))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(vt0.c1 COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(vt0.c1 COLLATE RTRIM))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c1 COLLATE RTRIM)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(vt0.c1 COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(vt0.c1 COLLATE RTRIM))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c1 COLLATE RTRIM)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM t0, vt1;
SELECT * FROM t0, vt1 WHERE (((vt1.c1)!=(((vt1.c0) BETWEEN (0.31015410577822056) AND (t0.c0))))) UNION ALL SELECT ALL * FROM t0, vt1 WHERE ((NOT (((vt1.c1)<>(((vt1.c0) BETWEEN (0.31015410577822056) AND (t0.c0))))))) UNION ALL SELECT * FROM t0, vt1 WHERE (((((vt1.c1)!=(((vt1.c0) BETWEEN (0.31015410577822056) AND (t0.c0))))) ISNULL));
SELECT ALL * FROM t0, vt1;
SELECT DISTINCT t0.c0, vt1.c1 FROM vt1, t0;
SELECT DISTINCT t0.c0, vt1.c1 FROM vt1, t0 WHERE ((((t0.c0)IS(vt1.c0)) IN (0.2065143444490265, '-1845690940'))) UNION SELECT DISTINCT t0.c0, vt1.c1 FROM vt1, t0 WHERE ((NOT ((((t0.c0)IS(vt1.c0)) IN (0.2065143444490265, '-1845690940'))))) UNION SELECT DISTINCT t0.c0, vt1.c1 FROM vt1, t0 WHERE ((((((t0.c0)IS(vt1.c0)) IN (0.2065143444490265, '-1845690940'))) ISNULL));
SELECT DISTINCT t0.c0, vt1.c1 FROM vt1, t0;
SELECT ALL vt0.c1 FROM vt1 NOT INDEXED CROSS JOIN t0 ON ((((vt1.c1)OR(vt0.c1)))OR(vt0.c1)) COLLATE BINARY LEFT OUTER JOIN vt0 ON (vt0.c1 IN (vt0.c1)) COLLATE NOCASE GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt1 CROSS JOIN t0 ON ((((vt1.c1)OR(vt0.c1)))OR(vt0.c1)) COLLATE BINARY LEFT OUTER JOIN vt0 ON (vt0.c1 IN (vt0.c1)) COLLATE NOCASE WHERE (((((((vt1.c0)AND(vt0.c0)))OR(vt1.c1))) BETWEEN (((vt1.c1)+(''))) AND ((((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((t0.c0)))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt1 CROSS JOIN t0 ON ((((vt1.c1)OR(vt0.c1)))OR(vt0.c1)) COLLATE BINARY LEFT OUTER JOIN vt0 ON (vt0.c1 IN (vt0.c1)) COLLATE NOCASE WHERE ((NOT (((((((vt1.c0)AND(vt0.c0)))OR(vt1.c1))) BETWEEN (((vt1.c1)+(''))) AND ((((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((t0.c0)))))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt1 CROSS JOIN t0 ON ((((vt1.c1)OR(vt0.c1)))OR(vt0.c1)) COLLATE BINARY LEFT OUTER JOIN vt0 ON (vt0.c1 IN (vt0.c1)) COLLATE NOCASE WHERE (((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c1))) BETWEEN (((vt1.c1)+(''))) AND ((((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((t0.c0)))))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1 NOT INDEXED CROSS JOIN t0 ON ((((vt1.c1)OR(vt0.c1)))OR(vt0.c1)) COLLATE BINARY LEFT OUTER JOIN vt0 ON (vt0.c1 IN (vt0.c1)) COLLATE NOCASE GROUP BY vt0.c1;
SELECT vt1.c0, t0.c0, vt1.c1, vt0.c0 FROM vt1, vt0, t0 NOT INDEXED GROUP BY vt1.c0, t0.c0, vt1.c1, vt0.c0;
SELECT ALL vt1.c0, t0.c0, vt1.c1, vt0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0, vt1.c1, vt0.c0 HAVING GROUP_CONCAT(MAX(vt1.c0)) UNION ALL SELECT ALL vt1.c0, t0.c0, vt1.c1, vt0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0, vt1.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT(MAX(vt1.c0)))) UNION ALL SELECT ALL vt1.c0, t0.c0, vt1.c1, vt0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0, vt1.c1, vt0.c0 HAVING ((GROUP_CONCAT(MAX(vt1.c0))) ISNULL);
SELECT * FROM vt0, t0, vt1;
SELECT ALL * FROM vt0 NOT INDEXED, t0, vt1 WHERE (-8.62922171E8) UNION ALL SELECT * FROM vt0, t0, vt1 WHERE ((NOT (-8.62922171E8))) UNION ALL SELECT * FROM vt0, t0, vt1 WHERE (((-8.62922171E8) ISNULL));
SELECT * FROM vt0, t0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CASE ((vt1.c1) IS TRUE)  WHEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) THEN vt1.c0 WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)<<(vt1.c1)) WHEN ((vt1.c1)>(vt1.c1)) THEN vt1.c0 COLLATE BINARY END) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CASE ((vt1.c1) IS TRUE)  WHEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) THEN vt1.c0 WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)<<(vt1.c1)) WHEN ((vt1.c1)>(vt1.c1)) THEN vt1.c0 COLLATE BINARY END))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CASE ((vt1.c1) IS TRUE)  WHEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) THEN vt1.c0 WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)<<(vt1.c1)) WHEN ((vt1.c1)>(vt1.c1)) THEN vt1.c0 COLLATE BINARY END) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT t0.c0, vt1.c1, vt0.c1, vt1.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON NULL COLLATE BINARY CROSS JOIN vt1 ON CASE (vt1.c0 IN (vt0.c1))  WHEN ((vt0.c1)&(vt1.c1)) THEN ((vt1.c1)IS(vt1.c0)) END GROUP BY t0.c0, vt1.c1, vt0.c1, vt1.c0, vt0.c0;
SELECT t0.c0, vt1.c1, vt0.c1, vt1.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON NULL COLLATE BINARY CROSS JOIN vt1 ON CASE (vt1.c0 IN (vt0.c1))  WHEN ((vt0.c1)&(vt1.c1)) THEN ((vt1.c1)IS(vt1.c0)) END WHERE ((CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN vt1.c0 WHEN vt0.c1 THEN NULL END IN (((vt0.c0) NOT BETWEEN (vt1.c1) AND (t0.c0))))) GROUP BY t0.c0, vt1.c1, vt0.c1, vt1.c0, vt0.c0 UNION SELECT ALL t0.c0, vt1.c1, vt0.c1, vt1.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON NULL COLLATE BINARY CROSS JOIN vt1 ON CASE (vt1.c0 IN (vt0.c1))  WHEN ((vt0.c1)&(vt1.c1)) THEN ((vt1.c1)IS(vt1.c0)) END WHERE ((NOT ((CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN vt1.c0 WHEN vt0.c1 THEN NULL END IN (((vt0.c0) NOT BETWEEN (vt1.c1) AND (t0.c0))))))) GROUP BY t0.c0, vt1.c1, vt0.c1, vt1.c0, vt0.c0 UNION SELECT t0.c0, vt1.c1, vt0.c1, vt1.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON NULL COLLATE BINARY CROSS JOIN vt1 ON CASE (vt1.c0 IN (vt0.c1))  WHEN ((vt0.c1)&(vt1.c1)) THEN ((vt1.c1)IS(vt1.c0)) END WHERE ((((CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN vt1.c0 WHEN vt0.c1 THEN NULL END IN (((vt0.c0) NOT BETWEEN (vt1.c1) AND (t0.c0))))) ISNULL)) GROUP BY t0.c0, vt1.c1, vt0.c1, vt1.c0, vt0.c0;
SELECT t0.c0, vt1.c1, vt0.c1, vt1.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON NULL COLLATE BINARY CROSS JOIN vt1 ON CASE (vt1.c0 IN (vt0.c1))  WHEN ((vt0.c1)&(vt1.c1)) THEN ((vt1.c1)IS(vt1.c0)) END GROUP BY t0.c0, vt1.c1, vt0.c1, vt1.c0, vt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CASE CAST(t0.c0 AS INTEGER)  WHEN ((COUNT(*)) NOT BETWEEN (SUM(COUNT(*))) AND (t0.c0)) THEN COUNT(*) END UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CASE CAST(t0.c0 AS INTEGER)  WHEN ((COUNT(*)) NOT BETWEEN (SUM(COUNT(*))) AND (t0.c0)) THEN COUNT(*) END)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE CAST(t0.c0 AS INTEGER)  WHEN ((COUNT(*)) NOT BETWEEN (SUM(COUNT(*))) AND (t0.c0)) THEN COUNT(*) END) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c1) NOT NULL) THEN (- (vt1.c1)) END) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CASE WHEN ((vt1.c1) NOT NULL) THEN (- (vt1.c1)) END))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CASE WHEN ((vt1.c1) NOT NULL) THEN (- (vt1.c1)) END) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1, vt0 INNER JOIN t0 ON ((CAST(vt1.c0 AS TEXT))LIKE(((vt0.c1)<(vt1.c1))));
SELECT DISTINCT * FROM vt1, vt0 INNER JOIN t0 ON ((CAST(vt1.c0 AS TEXT))LIKE(((vt0.c1)<(vt1.c1)))) WHERE (((vt1.c1) NOT NULL) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt1, vt0 INNER JOIN t0 ON ((CAST(vt1.c0 AS TEXT))LIKE(((vt0.c1)<(vt1.c1)))) WHERE ((NOT (((vt1.c1) NOT NULL) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1, vt0 INNER JOIN t0 ON ((CAST(vt1.c0 AS TEXT))LIKE(((vt0.c1)<(vt1.c1)))) WHERE (((((vt1.c1) NOT NULL) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt1, vt0 INNER JOIN t0 ON ((CAST(vt1.c0 AS TEXT))LIKE(((vt0.c1)<(vt1.c1))));
SELECT ALL vt0.c0, t0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((((t0.c0)OR(vt1.c0)))AND(x'')))|((- (t0.c0)))) GROUP BY vt0.c0, t0.c0, vt1.c0, vt0.c1, vt1.c1;
SELECT vt0.c0, t0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((((t0.c0)OR(vt1.c0)))AND(x'')))|((- (t0.c0)))) WHERE (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) COLLATE RTRIM) GROUP BY vt0.c0, t0.c0, vt1.c0, vt0.c1, vt1.c1 UNION SELECT ALL vt0.c0, t0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((((t0.c0)OR(vt1.c0)))AND(x'')))|((- (t0.c0)))) WHERE ((NOT (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) COLLATE RTRIM))) GROUP BY vt0.c0, t0.c0, vt1.c0, vt0.c1, vt1.c1 UNION SELECT ALL vt0.c0, t0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((((t0.c0)OR(vt1.c0)))AND(x'')))|((- (t0.c0)))) WHERE (((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, t0.c0, vt1.c0, vt0.c1, vt1.c1;
SELECT ALL vt0.c0, t0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((((t0.c0)OR(vt1.c0)))AND(x'')))|((- (t0.c0)))) GROUP BY vt0.c0, t0.c0, vt1.c0, vt0.c1, vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((COUNT(MAX(vt1.c1)))<(COUNT(*))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (((COUNT(MAX(vt1.c1)))<(COUNT(*))))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((((COUNT(MAX(vt1.c1)))<(COUNT(*)))) ISNULL);
SELECT * FROM vt0, vt1, t0;
SELECT ALL * FROM vt0, vt1, t0 WHERE (']1,[kFV' COLLATE BINARY) UNION ALL SELECT * FROM vt0, vt1, t0 WHERE ((NOT (']1,[kFV' COLLATE BINARY))) UNION ALL SELECT * FROM vt0, vt1, t0 WHERE (((']1,[kFV' COLLATE BINARY) ISNULL));
SELECT * FROM vt0, vt1, t0;
SELECT DISTINCT * FROM t0, vt0, vt1;
SELECT DISTINCT * FROM t0, vt0, vt1 WHERE (vt1.c1) UNION SELECT DISTINCT * FROM t0, vt0, vt1 WHERE ((NOT (vt1.c1))) UNION SELECT DISTINCT * FROM t0, vt0, vt1 WHERE (((vt1.c1) ISNULL));
SELECT DISTINCT * FROM t0, vt0, vt1;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (RTRIM(UNICODE(vt1.c1))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 NOT INDEXED WHERE ((NOT (RTRIM(UNICODE(vt1.c1))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (((RTRIM(UNICODE(vt1.c1))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN t0 ON ((((t0.c0) NOT NULL)) IS FALSE) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN t0 ON ((((t0.c0) NOT NULL)) IS FALSE) GROUP BY vt1.c0 HAVING ((((vt0.c0)) NOT BETWEEN ((COUNT(vt1.c1))) AND ((vt0.c1))) IN (GROUP_CONCAT(vt1.c0) COLLATE RTRIM)) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN t0 ON ((((t0.c0) NOT NULL)) IS FALSE) GROUP BY vt1.c0 HAVING (NOT (((((vt0.c0)) NOT BETWEEN ((COUNT(vt1.c1))) AND ((vt0.c1))) IN (GROUP_CONCAT(vt1.c0) COLLATE RTRIM)))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN t0 ON ((((t0.c0) NOT NULL)) IS FALSE) GROUP BY vt1.c0 HAVING ((((((vt0.c0)) NOT BETWEEN ((COUNT(vt1.c1))) AND ((vt0.c1))) IN (GROUP_CONCAT(vt1.c0) COLLATE RTRIM))) ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN t0 ON ((((t0.c0) NOT NULL)) IS FALSE) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN t0 ON ((((t0.c0) NOT NULL)) IS FALSE) GROUP BY vt1.c0 HAVING ((((vt0.c0)) NOT BETWEEN ((COUNT(vt1.c1))) AND ((vt0.c1))) IN (GROUP_CONCAT(vt1.c0) COLLATE RTRIM)) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN t0 ON ((((t0.c0) NOT NULL)) IS FALSE) GROUP BY vt1.c0 HAVING (NOT (((((vt0.c0)) NOT BETWEEN ((COUNT(vt1.c1))) AND ((vt0.c1))) IN (GROUP_CONCAT(vt1.c0) COLLATE RTRIM)))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN t0 ON ((((t0.c0) NOT NULL)) IS FALSE) GROUP BY vt1.c0 HAVING ((((((vt0.c0)) NOT BETWEEN ((COUNT(vt1.c1))) AND ((vt0.c1))) IN (GROUP_CONCAT(vt1.c0) COLLATE RTRIM))) ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN t0 ON ((((t0.c0) NOT NULL)) IS FALSE) GROUP BY vt1.c0;
SELECT ALL * FROM t0, vt0, vt1;
SELECT * FROM t0, vt0, vt1 WHERE (((STRFTIME(vt0.c1, vt0.c1, vt1.c0, vt1.c0, vt1.c1))OR((((vt0.c1))<((vt1.c1)))))) UNION ALL SELECT ALL * FROM t0, vt0, vt1 WHERE ((NOT (((STRFTIME(vt0.c1, vt0.c1, vt1.c0, vt1.c0, vt1.c1))OR((((vt0.c1))<((vt1.c1)))))))) UNION ALL SELECT * FROM t0, vt0, vt1 WHERE (((((STRFTIME(vt0.c1, vt0.c1, vt1.c0, vt1.c0, vt1.c1))OR((((vt0.c1))<((vt1.c1)))))) ISNULL));
SELECT ALL * FROM t0, vt0, vt1;
SELECT DISTINCT * FROM vt1 INNER JOIN t0 ON ((((vt1.c0)&(vt1.c1))) NOT BETWEEN (((t0.c0)IS(t0.c0))) AND (((((t0.c0)AND(vt1.c0)))AND(vt1.c0)))) FULL OUTER JOIN vt0 ON (NOT (((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1))));
SELECT DISTINCT * FROM vt1 INNER JOIN t0 ON ((((vt1.c0)&(vt1.c1))) NOT BETWEEN (((t0.c0)IS(t0.c0))) AND (((((t0.c0)AND(vt1.c0)))AND(vt1.c0)))) FULL OUTER JOIN vt0 ON (NOT (((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1)))) WHERE (CASE ROUND(t0.c0, t0.c0)  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND ('1869931661')) WHEN vt0.c0 THEN ((vt1.c1)>(vt0.c1)) WHEN ((vt1.c1)!=(vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE CAST(vt1.c1 AS REAL) END) UNION SELECT DISTINCT * FROM vt1 INNER JOIN t0 ON ((((vt1.c0)&(vt1.c1))) NOT BETWEEN (((t0.c0)IS(t0.c0))) AND (((((t0.c0)AND(vt1.c0)))AND(vt1.c0)))) FULL OUTER JOIN vt0 ON (NOT (((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1)))) WHERE ((NOT (CASE ROUND(t0.c0, t0.c0)  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND ('1869931661')) WHEN vt0.c0 THEN ((vt1.c1)>(vt0.c1)) WHEN ((vt1.c1)!=(vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE CAST(vt1.c1 AS REAL) END))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN t0 ON ((((vt1.c0)&(vt1.c1))) NOT BETWEEN (((t0.c0)IS(t0.c0))) AND (((((t0.c0)AND(vt1.c0)))AND(vt1.c0)))) FULL OUTER JOIN vt0 ON (NOT (((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1)))) WHERE (((CASE ROUND(t0.c0, t0.c0)  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND ('1869931661')) WHEN vt0.c0 THEN ((vt1.c1)>(vt0.c1)) WHEN ((vt1.c1)!=(vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE CAST(vt1.c1 AS REAL) END) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN t0 ON ((((vt1.c0)&(vt1.c1))) NOT BETWEEN (((t0.c0)IS(t0.c0))) AND (((((t0.c0)AND(vt1.c0)))AND(vt1.c0)))) FULL OUTER JOIN vt0 ON (NOT (((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1))));
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0) BETWEEN (x'253b') AND ('u_')))>>(t0.c0 COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) BETWEEN (x'253b') AND ('u_')))>>(t0.c0 COLLATE NOCASE))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((t0.c0) BETWEEN (x'253b') AND ('u_')))>>(t0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt1.c0, vt1.c1, vt0.c0, t0.c0, vt0.c1 FROM t0, vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0, t0.c0, vt0.c1;
SELECT ALL vt1.c0, vt1.c1, vt0.c0, t0.c0, vt0.c1 FROM t0, vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0, t0.c0, vt0.c1 HAVING CAST(COUNT(*) AS TEXT) UNION ALL SELECT ALL vt1.c0, vt1.c1, vt0.c0, t0.c0, vt0.c1 FROM t0, vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0, t0.c0, vt0.c1 HAVING (NOT (CAST(COUNT(*) AS TEXT))) UNION ALL SELECT vt1.c0, vt1.c1, vt0.c0, t0.c0, vt0.c1 FROM t0, vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0, t0.c0, vt0.c1 HAVING ((CAST(COUNT(*) AS TEXT)) ISNULL);
SELECT ALL vt1.c0, vt1.c1, vt0.c0, t0.c0, vt0.c1 FROM t0, vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0, t0.c0, vt0.c1;
SELECT ALL vt1.c0, vt1.c1, vt0.c0, t0.c0, vt0.c1 FROM t0, vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0, t0.c0, vt0.c1 HAVING CAST(COUNT(*) AS TEXT) UNION ALL SELECT ALL vt1.c0, vt1.c1, vt0.c0, t0.c0, vt0.c1 FROM t0, vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0, t0.c0, vt0.c1 HAVING (NOT (CAST(COUNT(*) AS TEXT))) UNION ALL SELECT vt1.c0, vt1.c1, vt0.c0, t0.c0, vt0.c1 FROM t0, vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0, t0.c0, vt0.c1 HAVING ((CAST(COUNT(*) AS TEXT)) ISNULL);
SELECT ALL vt1.c0, vt1.c1, vt0.c0, t0.c0, vt0.c1 FROM t0, vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0, t0.c0, vt0.c1;
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((t0.c0 IN ()) IN ())) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((t0.c0 IN ()) IN ())))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((t0.c0 IN ()) IN ())) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (json(((t0.c0)IS(t0.c0)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (json(((t0.c0)IS(t0.c0)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((json(((t0.c0)IS(t0.c0)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 WHERE ((- (vt0.c0)) COLLATE NOCASE) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt0 WHERE ((NOT ((- (vt0.c0)) COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, vt0 WHERE ((((- (vt0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT t0.c0, vt1.c1, vt0.c0 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (((vt1.c1))<>((vt1.c1))) COLLATE BINARY GROUP BY t0.c0, vt1.c1, vt0.c0;
SELECT t0.c0, vt1.c1, vt0.c0 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (((vt1.c1))<>((vt1.c1))) COLLATE BINARY GROUP BY t0.c0, vt1.c1, vt0.c0 HAVING SUM(TOTAL(COUNT(*))) UNION ALL SELECT ALL t0.c0, vt1.c1, vt0.c0 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (((vt1.c1))<>((vt1.c1))) COLLATE BINARY GROUP BY t0.c0, vt1.c1, vt0.c0 HAVING (NOT (SUM(TOTAL(COUNT(*))))) UNION ALL SELECT ALL t0.c0, vt1.c1, vt0.c0 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (((vt1.c1))<>((vt1.c1))) COLLATE BINARY GROUP BY t0.c0, vt1.c1, vt0.c0 HAVING ((SUM(TOTAL(COUNT(*)))) ISNULL);
SELECT vt1.c1, t0.c0, vt1.c0 FROM t0, vt1, vt0;
SELECT vt1.c1, t0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE ((- ((- (t0.c0))))) UNION ALL SELECT ALL vt1.c1, t0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE ((NOT ((- ((- (t0.c0))))))) UNION ALL SELECT vt1.c1, t0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE ((((- ((- (t0.c0))))) ISNULL));
SELECT vt1.c1, t0.c0, vt1.c0 FROM t0, vt1, vt0;
SELECT DISTINCT * FROM t0, vt1, vt0;
SELECT DISTINCT * FROM t0, vt1, vt0 WHERE ((((((((vt1.c1, vt0.c1, vt0.c0)) BETWEEN ((vt1.c0, -108821361, t0.c0)) AND ((vt1.c0, vt1.c1, t0.c0))))AND(vt0.c1 COLLATE BINARY)))OR((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT * FROM t0, vt1, vt0 WHERE ((NOT ((((((((vt1.c1, vt0.c1, vt0.c0)) BETWEEN ((vt1.c0, -108821361, t0.c0)) AND ((vt1.c0, vt1.c1, t0.c0))))AND(vt0.c1 COLLATE BINARY)))OR((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT * FROM t0, vt1, vt0 WHERE ((((((((((vt1.c1, vt0.c1, vt0.c0)) BETWEEN ((vt1.c0, -108821361, t0.c0)) AND ((vt1.c0, vt1.c1, t0.c0))))AND(vt0.c1 COLLATE BINARY)))OR((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0, vt1, vt0;
SELECT vt0.c0, vt0.c1 FROM vt1, vt0, t0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt1, vt0, t0 WHERE (IFNULL(((('', vt0.c1, vt1.c1)) BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((vt0.c1, vt1.c0, vt0.c0))), ((t0.c0)>(vt1.c0)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt1, vt0, t0 WHERE ((NOT (IFNULL(((('', vt0.c1, vt1.c1)) BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((vt0.c1, vt1.c0, vt0.c0))), ((t0.c0)>(vt1.c0)))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt1, vt0, t0 WHERE (((IFNULL(((('', vt0.c1, vt1.c1)) BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((vt0.c1, vt1.c0, vt0.c0))), ((t0.c0)>(vt1.c0)))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt1, vt0, t0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c1, vt0.c0;
SELECT t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING ((GROUP_CONCAT(AVG(vt0.c1))) NOT NULL) UNION ALL SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING (NOT (((GROUP_CONCAT(AVG(vt0.c1))) NOT NULL))) UNION ALL SELECT t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING ((((GROUP_CONCAT(AVG(vt0.c1))) NOT NULL)) ISNULL);
SELECT vt1.c1, t0.c0 FROM vt1, t0;
SELECT vt1.c1, t0.c0 FROM vt1, t0 WHERE (((((((t0.c0) NOT NULL))OR(LIKELY(vt1.c1))))OR(((vt1.c1) IS TRUE)))) UNION ALL SELECT vt1.c1, t0.c0 FROM vt1, t0 WHERE ((NOT (((((((t0.c0) NOT NULL))OR(LIKELY(vt1.c1))))OR(((vt1.c1) IS TRUE)))))) UNION ALL SELECT vt1.c1, t0.c0 FROM vt1, t0 WHERE (((((((((t0.c0) NOT NULL))OR(LIKELY(vt1.c1))))OR(((vt1.c1) IS TRUE)))) ISNULL));
SELECT vt1.c1, t0.c0 FROM vt1, t0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c1) IS TRUE))%(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c1) IS TRUE))%(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c1) IS TRUE))%(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt1.c1, vt0.c1, vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON CAST(((vt0.c0)<<('P7\n+Yj')) AS BLOB) LEFT OUTER JOIN t0 ON CASE (((vt0.c0, vt1.c1, vt0.c0))<((vt0.c1, t0.c0, vt1.c0)))  WHEN (('533517757')<(t0.c0)) THEN vt0.c0 COLLATE NOCASE END GROUP BY vt1.c1, vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt1.c1, vt0.c1, vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON CAST(((vt0.c0)<<('P7\n+Yj')) AS BLOB) LEFT OUTER JOIN t0 ON CASE (((vt0.c0, vt1.c1, vt0.c0))<((vt0.c1, t0.c0, vt1.c0)))  WHEN (('533517757')<(t0.c0)) THEN vt0.c0 COLLATE NOCASE END WHERE (CAST(((vt1.c0) ISNULL) AS TEXT)) GROUP BY vt1.c1, vt0.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt1.c1, vt0.c1, vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON CAST(((vt0.c0)<<('P7\n+Yj')) AS BLOB) LEFT OUTER JOIN t0 ON CASE (((vt0.c0, vt1.c1, vt0.c0))<((vt0.c1, t0.c0, vt1.c0)))  WHEN (('533517757')<(t0.c0)) THEN vt0.c0 COLLATE NOCASE END WHERE ((NOT (CAST(((vt1.c0) ISNULL) AS TEXT)))) GROUP BY vt1.c1, vt0.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt1.c1, vt0.c1, vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON CAST(((vt0.c0)<<('P7\n+Yj')) AS BLOB) LEFT OUTER JOIN t0 ON CASE (((vt0.c0, vt1.c1, vt0.c0))<((vt0.c1, t0.c0, vt1.c0)))  WHEN (('533517757')<(t0.c0)) THEN vt0.c0 COLLATE NOCASE END WHERE (((CAST(((vt1.c0) ISNULL) AS TEXT)) ISNULL)) GROUP BY vt1.c1, vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt1.c1, vt0.c1, vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON CAST(((vt0.c0)<<('P7\n+Yj')) AS BLOB) LEFT OUTER JOIN t0 ON CASE (((vt0.c0, vt1.c1, vt0.c0))<((vt0.c1, t0.c0, vt1.c0)))  WHEN (('533517757')<(t0.c0)) THEN vt0.c0 COLLATE NOCASE END GROUP BY vt1.c1, vt0.c1, vt0.c0, vt1.c0;
SELECT vt1.c1 FROM t0 INNER JOIN vt1 ON ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)OR(NULLIF(DISTINCT '609893553', vt1.c0))))OR(vt1.c0 COLLATE RTRIM)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM t0 INNER JOIN vt1 ON ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)OR(NULLIF(DISTINCT '609893553', vt1.c0))))OR(vt1.c0 COLLATE RTRIM)) GROUP BY vt1.c1 HAVING SUM(t0.c0) UNION ALL SELECT ALL vt1.c1 FROM t0 INNER JOIN vt1 ON ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)OR(NULLIF(DISTINCT '609893553', vt1.c0))))OR(vt1.c0 COLLATE RTRIM)) GROUP BY vt1.c1 HAVING (NOT (SUM(t0.c0))) UNION ALL SELECT ALL vt1.c1 FROM t0 INNER JOIN vt1 ON ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)OR(NULLIF(DISTINCT '609893553', vt1.c0))))OR(vt1.c0 COLLATE RTRIM)) GROUP BY vt1.c1 HAVING ((SUM(t0.c0)) ISNULL);
SELECT vt1.c1 FROM t0 INNER JOIN vt1 ON ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)OR(NULLIF(DISTINCT '609893553', vt1.c0))))OR(vt1.c0 COLLATE RTRIM)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM t0 INNER JOIN vt1 ON ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)OR(NULLIF(DISTINCT '609893553', vt1.c0))))OR(vt1.c0 COLLATE RTRIM)) GROUP BY vt1.c1 HAVING SUM(t0.c0) UNION ALL SELECT ALL vt1.c1 FROM t0 INNER JOIN vt1 ON ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)OR(NULLIF(DISTINCT '609893553', vt1.c0))))OR(vt1.c0 COLLATE RTRIM)) GROUP BY vt1.c1 HAVING (NOT (SUM(t0.c0))) UNION ALL SELECT ALL vt1.c1 FROM t0 INNER JOIN vt1 ON ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)OR(NULLIF(DISTINCT '609893553', vt1.c0))))OR(vt1.c0 COLLATE RTRIM)) GROUP BY vt1.c1 HAVING ((SUM(t0.c0)) ISNULL);
SELECT vt1.c1 FROM t0 INNER JOIN vt1 ON ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)OR(NULLIF(DISTINCT '609893553', vt1.c0))))OR(vt1.c0 COLLATE RTRIM)) GROUP BY vt1.c1;
SELECT vt0.c0, t0.c0, vt0.c1, vt1.c1 FROM t0 INNER JOIN vt1 ON CASE WHEN vt0.c0 THEN ((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c1)))OR(vt0.c0)))AND(vt0.c1)) WHEN CAST(vt0.c1 AS TEXT) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)) WHEN (- (vt0.c0)) THEN ((((vt1.c0)OR(vt0.c1)))AND(vt0.c0)) END CROSS JOIN vt0 ON (((NULL)LIKE(t0.c0)) IN ());
SELECT ALL vt0.c0, t0.c0, vt0.c1, vt1.c1 FROM t0 INNER JOIN vt1 ON CASE WHEN vt0.c0 THEN ((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c1)))OR(vt0.c0)))AND(vt0.c1)) WHEN CAST(vt0.c1 AS TEXT) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)) WHEN (- (vt0.c0)) THEN ((((vt1.c0)OR(vt0.c1)))AND(vt0.c0)) END CROSS JOIN vt0 ON (((NULL)LIKE(t0.c0)) IN ()) WHERE (CAST(((vt0.c0)LIKE(vt0.c1)) AS REAL)) UNION ALL SELECT ALL vt0.c0, t0.c0, vt0.c1, vt1.c1 FROM t0 INNER JOIN vt1 ON CASE WHEN vt0.c0 THEN ((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c1)))OR(vt0.c0)))AND(vt0.c1)) WHEN CAST(vt0.c1 AS TEXT) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)) WHEN (- (vt0.c0)) THEN ((((vt1.c0)OR(vt0.c1)))AND(vt0.c0)) END CROSS JOIN vt0 ON (((NULL)LIKE(t0.c0)) IN ()) WHERE ((NOT (CAST(((vt0.c0)LIKE(vt0.c1)) AS REAL)))) UNION ALL SELECT ALL vt0.c0, t0.c0, vt0.c1, vt1.c1 FROM t0 INNER JOIN vt1 ON CASE WHEN vt0.c0 THEN ((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c1)))OR(vt0.c0)))AND(vt0.c1)) WHEN CAST(vt0.c1 AS TEXT) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)) WHEN (- (vt0.c0)) THEN ((((vt1.c0)OR(vt0.c1)))AND(vt0.c0)) END CROSS JOIN vt0 ON (((NULL)LIKE(t0.c0)) IN ()) WHERE (((CAST(((vt0.c0)LIKE(vt0.c1)) AS REAL)) ISNULL));
SELECT vt0.c0, t0.c0, vt0.c1, vt1.c1 FROM t0 INNER JOIN vt1 ON CASE WHEN vt0.c0 THEN ((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c1)))OR(vt0.c0)))AND(vt0.c1)) WHEN CAST(vt0.c1 AS TEXT) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)) WHEN (- (vt0.c0)) THEN ((((vt1.c0)OR(vt0.c1)))AND(vt0.c0)) END CROSS JOIN vt0 ON (((NULL)LIKE(t0.c0)) IN ());
SELECT DISTINCT vt1.c0, t0.c0, vt1.c1 FROM vt1, t0;
SELECT DISTINCT vt1.c0, t0.c0, vt1.c1 FROM vt1, t0 WHERE ((((t0.c0)) BETWEEN ((CAST(t0.c0 AS INTEGER))) AND (((+ (vt1.c0)))))) UNION SELECT DISTINCT vt1.c0, t0.c0, vt1.c1 FROM vt1, t0 NOT INDEXED WHERE ((NOT ((((t0.c0)) BETWEEN ((CAST(t0.c0 AS INTEGER))) AND (((+ (vt1.c0)))))))) UNION SELECT DISTINCT vt1.c0, t0.c0, vt1.c1 FROM vt1, t0 WHERE ((((((t0.c0)) BETWEEN ((CAST(t0.c0 AS INTEGER))) AND (((+ (vt1.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0, vt1.c1 FROM vt1, t0;
SELECT ALL vt0.c0, vt0.c1, t0.c0 FROM vt0 INNER JOIN t0 ON (((t0.c0)*(vt0.c1)) IN ((t0.c0 IN ()))) GROUP BY vt0.c0, vt0.c1, t0.c0;
SELECT ALL vt0.c0, vt0.c1, t0.c0 FROM vt0 INNER JOIN t0 ON (((t0.c0)*(vt0.c1)) IN ((t0.c0 IN ()))) WHERE (TRIM(vt0.c1 COLLATE BINARY, ((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) GROUP BY vt0.c0, vt0.c1, t0.c0 UNION SELECT vt0.c0, vt0.c1, t0.c0 FROM vt0 INNER JOIN t0 ON (((t0.c0)*(vt0.c1)) IN ((t0.c0 IN ()))) WHERE ((NOT (TRIM(vt0.c1 COLLATE BINARY, ((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))) GROUP BY vt0.c0, vt0.c1, t0.c0 UNION SELECT vt0.c0, vt0.c1, t0.c0 FROM vt0 INNER JOIN t0 ON (((t0.c0)*(vt0.c1)) IN ((t0.c0 IN ()))) WHERE (((TRIM(vt0.c1 COLLATE BINARY, ((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ISNULL)) GROUP BY vt0.c0, vt0.c1, t0.c0;
SELECT ALL vt0.c0, vt0.c1, t0.c0 FROM vt0 INNER JOIN t0 ON (((t0.c0)*(vt0.c1)) IN ((t0.c0 IN ()))) GROUP BY vt0.c0, vt0.c1, t0.c0;
SELECT ALL vt1.c0, vt1.c1 FROM t0, vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM t0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING CASE MAX(t0.c0)  WHEN ((SUM(COUNT(vt1.c0))) NOT BETWEEN (COUNT(vt1.c1)) AND (MIN(vt1.c0))) THEN LIKELIHOOD(DISTINCT AVG(AVG(t0.c0)), 0.7940152830470467) WHEN CAST(t0.c0 AS REAL) THEN COUNT(t0.c0) WHEN vt1.c0 THEN ((NULL) BETWEEN (t0.c0) AND (vt1.c0)) END UNION ALL SELECT vt1.c0, vt1.c1 FROM t0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (CASE MAX(t0.c0)  WHEN ((SUM(COUNT(vt1.c0))) NOT BETWEEN (COUNT(vt1.c1)) AND (MIN(vt1.c0))) THEN LIKELIHOOD(DISTINCT AVG(AVG(t0.c0)), 0.7940152830470467) WHEN CAST(t0.c0 AS REAL) THEN COUNT(t0.c0) WHEN vt1.c0 THEN ((NULL) BETWEEN (t0.c0) AND (vt1.c0)) END)) UNION ALL SELECT vt1.c0, vt1.c1 FROM t0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((CASE MAX(t0.c0)  WHEN ((SUM(COUNT(vt1.c0))) NOT BETWEEN (COUNT(vt1.c1)) AND (MIN(vt1.c0))) THEN LIKELIHOOD(DISTINCT AVG(AVG(t0.c0)), 0.7940152830470467) WHEN CAST(t0.c0 AS REAL) THEN COUNT(t0.c0) WHEN vt1.c0 THEN ((NULL) BETWEEN (t0.c0) AND (vt1.c0)) END) ISNULL);
SELECT vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE ((~ (((vt0.c1) NOT BETWEEN (vt0.c0) AND ('-862922171'))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT ((~ (((vt0.c1) NOT BETWEEN (vt0.c0) AND ('-862922171'))))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((((~ (((vt0.c1) NOT BETWEEN (vt0.c0) AND ('-862922171'))))) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT * FROM t0, vt1, vt0;
SELECT DISTINCT * FROM t0, vt1, vt0 WHERE (((('t7<*i鍵kn')) NOT BETWEEN (((((0.35889855978057084)) NOT BETWEEN ((vt0.c0)) AND (('1369963772'))))) AND ((NULL)))) UNION SELECT DISTINCT * FROM t0, vt1, vt0 WHERE ((NOT (((('t7<*i鍵kn')) NOT BETWEEN (((((0.35889855978057084)) NOT BETWEEN ((vt0.c0)) AND (('1369963772'))))) AND ((NULL)))))) UNION SELECT DISTINCT * FROM t0, vt1, vt0 WHERE (((((('t7<*i鍵kn')) NOT BETWEEN (((((0.35889855978057084)) NOT BETWEEN ((vt0.c0)) AND (('1369963772'))))) AND ((NULL)))) ISNULL));
SELECT DISTINCT * FROM t0, vt1, vt0;
SELECT vt1.c0, t0.c0, vt1.c1, vt0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, t0.c0, vt1.c1, vt0.c0;
SELECT vt1.c0, t0.c0, vt1.c1, vt0.c0 FROM t0, vt0, vt1 WHERE (((CAST(vt0.c0 AS TEXT)) NOT NULL)) GROUP BY vt1.c0, t0.c0, vt1.c1, vt0.c0 UNION SELECT ALL vt1.c0, t0.c0, vt1.c1, vt0.c0 FROM t0, vt0, vt1 WHERE ((NOT (((CAST(vt0.c0 AS TEXT)) NOT NULL)))) GROUP BY vt1.c0, t0.c0, vt1.c1, vt0.c0 UNION SELECT vt1.c0, t0.c0, vt1.c1, vt0.c0 FROM t0, vt0, vt1 WHERE (((((CAST(vt0.c0 AS TEXT)) NOT NULL)) ISNULL)) GROUP BY vt1.c0, t0.c0, vt1.c1, vt0.c0;
SELECT vt1.c0, t0.c0, vt1.c1, vt0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, t0.c0, vt1.c1, vt0.c0;
SELECT vt1.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((((MAX(vt1.c0))AND(vt0.c1)))>>((((COUNT(AVG(vt0.c1))))==((MIN(vt0.c0)))))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (((((MAX(vt1.c0))AND(vt0.c1)))>>((((COUNT(AVG(vt0.c1))))=((MIN(vt0.c0)))))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((((((MAX(vt1.c0))AND(vt0.c1)))>>((((COUNT(AVG(vt0.c1))))=((MIN(vt0.c0))))))) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1;
SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (((0.6859665432725651) IS TRUE)) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (((0.6859665432725651) IS TRUE)))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (((((0.6859665432725651) IS TRUE)) ISNULL));
SELECT ALL vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN t0 ON ((((vt0.c1) ISNULL))<(CAST(vt1.c1 AS TEXT)));
SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN t0 ON ((((vt0.c1) ISNULL))<(CAST(vt1.c1 AS TEXT))) WHERE ((((vt1.c0)) NOT BETWEEN ((IFNULL(vt1.c1, t0.c0))) AND ((x'')))) UNION SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN t0 ON ((((vt0.c1) ISNULL))<(CAST(vt1.c1 AS TEXT))) WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((IFNULL(vt1.c1, t0.c0))) AND ((x'')))))) UNION SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN t0 ON ((((vt0.c1) ISNULL))<(CAST(vt1.c1 AS TEXT))) WHERE ((((((vt1.c0)) NOT BETWEEN ((IFNULL(vt1.c1, t0.c0))) AND ((x'')))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN t0 ON ((((vt0.c1) ISNULL))<(CAST(vt1.c1 AS TEXT)));
SELECT ALL vt1.c1, t0.c0 FROM vt1, t0 GROUP BY vt1.c1, t0.c0;
SELECT ALL vt1.c1, t0.c0 FROM vt1, t0 WHERE (((vt1.c1) NOT NULL)) GROUP BY vt1.c1, t0.c0 UNION SELECT vt1.c1, t0.c0 FROM vt1, t0 WHERE ((NOT (((vt1.c1) NOT NULL)))) GROUP BY vt1.c1, t0.c0 UNION SELECT ALL vt1.c1, t0.c0 FROM vt1, t0 WHERE (((((vt1.c1) NOT NULL)) ISNULL)) GROUP BY vt1.c1, t0.c0;
SELECT ALL vt1.c1, t0.c0 FROM vt1, t0 GROUP BY vt1.c1, t0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((json_array_length(COUNT(vt0.c1), vt0.c0))>=(SUM(MAX(vt0.c1)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((json_array_length(COUNT(vt0.c1), vt0.c0))>=(SUM(MAX(vt0.c1)))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((json_array_length(COUNT(vt0.c1), vt0.c0))>=(SUM(MAX(vt0.c1))))) ISNULL);
SELECT SUM(json_array(vt1.c1 COLLATE NOCASE, UNLIKELY(vt1.c1))) FROM vt0, vt1, t0;
SELECT ALL * FROM vt1, vt0, t0;
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0))) NOT BETWEEN (((((((((vt0.c1)OR(vt1.c1)))OR(t0.c0)))OR(vt0.c1)))AND(t0.c0))) AND (HEX(DISTINCT vt1.c0)))) UNION ALL SELECT * FROM vt1, vt0, t0 WHERE ((NOT (((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0))) NOT BETWEEN (((((((((vt0.c1)OR(vt1.c1)))OR(t0.c0)))OR(vt0.c1)))AND(t0.c0))) AND (HEX(DISTINCT vt1.c0)))))) UNION ALL SELECT ALL * FROM vt1, vt0, t0 WHERE (((((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0))) NOT BETWEEN (((((((((vt0.c1)OR(vt1.c1)))OR(t0.c0)))OR(vt0.c1)))AND(t0.c0))) AND (HEX(DISTINCT vt1.c0)))) ISNULL));
SELECT ALL * FROM vt1, vt0, t0;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((~ (((vt1.c1)==('401642357'))))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((~ (((vt1.c1)==('401642357'))))))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((((~ (((vt1.c1)=('401642357'))))) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT vt1.c1, vt1.c0 FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((t0.c0 COLLATE BINARY)AND(((vt1.c1)IS NOT(vt0.c0)))))OR(t0.c0)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((t0.c0 COLLATE BINARY)AND(((vt1.c1)IS NOT(vt0.c0)))))OR(t0.c0)) WHERE (((((((t0.c0)AND(vt0.c0)))AND(vt0.c1)))IS(CASE vt0.c1  WHEN 0.36403060959266187 THEN vt0.c1 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE 0.36506937897653813 END))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((t0.c0 COLLATE BINARY)AND(((vt1.c1)IS NOT(vt0.c0)))))OR(t0.c0)) WHERE ((NOT (((((((t0.c0)AND(vt0.c0)))AND(vt0.c1)))IS(CASE vt0.c1  WHEN 0.36403060959266187 THEN vt0.c1 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE 0.36506937897653813 END))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((t0.c0 COLLATE BINARY)AND(((vt1.c1)IS NOT(vt0.c0)))))OR(t0.c0)) WHERE (((((((((t0.c0)AND(vt0.c0)))AND(vt0.c1)))IS(CASE vt0.c1  WHEN 0.36403060959266187 THEN vt0.c1 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE 0.36506937897653813 END))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((t0.c0 COLLATE BINARY)AND(((vt1.c1)IS NOT(vt0.c0)))))OR(t0.c0)) GROUP BY vt1.c1, vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(((vt0.c0) BETWEEN (COUNT(*)) AND (TOTAL(MIN(MAX(COUNT(*))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(((vt0.c0) BETWEEN (COUNT(*)) AND (TOTAL(MIN(MAX(COUNT(*))))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(((vt0.c0) BETWEEN (COUNT(*)) AND (TOTAL(MIN(MAX(COUNT(*)))))))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((t0.c0 COLLATE BINARY)LIKE(0.7560176000924154))) UNION ALL SELECT t0.c0 FROM t0 NOT INDEXED WHERE ((NOT (((t0.c0 COLLATE BINARY)LIKE(0.7560176000924154))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0 COLLATE BINARY)LIKE(0.7560176000924154))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((vt1.c1) NOTNULL))OR(vt0.c0 COLLATE RTRIM)))OR(((((((((((((((((vt1.c0)OR(vt1.c1)))AND(vt0.c1)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c1)))AND(vt1.c1)))OR('% 5j&o]')))OR(vt1.c1))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (((((((vt1.c1) NOTNULL))OR(vt0.c0 COLLATE RTRIM)))OR(((((((((((((((((vt1.c0)OR(vt1.c1)))AND(vt0.c1)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c1)))AND(vt1.c1)))OR('% 5j&o]')))OR(vt1.c1))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((((vt1.c1) NOTNULL))OR(vt0.c0 COLLATE RTRIM)))OR(((((((((((((((((vt1.c0)OR(vt1.c1)))AND(vt0.c1)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c1)))AND(vt1.c1)))OR('% 5j&o]')))OR(vt1.c1))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0)%(t0.c0)))&(((NULL)+(t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)%(t0.c0)))&(((NULL)+(t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0)%(t0.c0)))&(((NULL)+(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CASE WHEN (((GROUP_CONCAT(MAX(t0.c0)), t0.c0, TOTAL(GROUP_CONCAT(t0.c0)))) NOT BETWEEN ((MAX(COUNT(AVG(t0.c0))), t0.c0, COUNT(SUM(SUM(t0.c0))))) AND ((t0.c0, MAX(t0.c0), t0.c0))) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE COUNT(MAX(t0.c0)) END UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CASE WHEN (((GROUP_CONCAT(MAX(t0.c0)), t0.c0, TOTAL(GROUP_CONCAT(t0.c0)))) NOT BETWEEN ((MAX(COUNT(AVG(t0.c0))), t0.c0, COUNT(SUM(SUM(t0.c0))))) AND ((t0.c0, MAX(t0.c0), t0.c0))) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE COUNT(MAX(t0.c0)) END)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE WHEN (((GROUP_CONCAT(MAX(t0.c0)), t0.c0, TOTAL(GROUP_CONCAT(t0.c0)))) NOT BETWEEN ((MAX(COUNT(AVG(t0.c0))), t0.c0, COUNT(SUM(SUM(t0.c0))))) AND ((t0.c0, MAX(t0.c0), t0.c0))) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE COUNT(MAX(t0.c0)) END) ISNULL);
SELECT vt1.c1 FROM vt1;
SELECT vt1.c1 FROM vt1 WHERE (vt1.c1) UNION ALL SELECT vt1.c1 FROM vt1 WHERE ((NOT (vt1.c1))) UNION ALL SELECT vt1.c1 FROM vt1 WHERE (((vt1.c1) ISNULL));
SELECT vt1.c1 FROM vt1;
SELECT DISTINCT * FROM vt1, t0, vt0;
SELECT DISTINCT * FROM vt1, t0, vt0 WHERE ((+ (vt0.c1 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1, t0, vt0 WHERE ((NOT ((+ (vt0.c1 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM vt1, t0, vt0 WHERE ((((+ (vt0.c1 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM vt1, t0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 END) IS TRUE)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c1 THEN vt0.c1 END) IS TRUE)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((CASE WHEN vt0.c1 THEN vt0.c1 END) IS TRUE)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(SUM(MAX(TOTAL(vt0.c1)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(SUM(MAX(TOTAL(vt0.c1)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(SUM(MAX(TOTAL(vt0.c1))))) ISNULL);
SELECT ALL MIN('676558687') FROM t0 ORDER BY ((((t0.c0 IN ())))<>((((t0.c0) ISNULL))))  NULLS LAST, ((((t0.c0)AND(t0.c0))) IS TRUE) ASC  NULLS FIRST, ((ABS(DISTINCT t0.c0))+(((t0.c0)<>(t0.c0))));
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (0xffffffff9f14b6a2) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (0Xffffffff9f14b6a2))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((0Xffffffff9f14b6a2) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE t0.c0 END)) AND ((CAST(t0.c0 AS BLOB))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((CASE WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE t0.c0 END)) AND ((CAST(t0.c0 AS BLOB))))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((((((vt0.c0)) BETWEEN ((CASE WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE t0.c0 END)) AND ((CAST(t0.c0 AS BLOB))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ('0.5225939604903039') GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ('0.5225939604903039'))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((('0.5225939604903039') ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 FULL OUTER JOIN t0 ON 1458981311 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 FULL OUTER JOIN t0 ON 1458981311 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING COUNT('p{BRWd') UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 FULL OUTER JOIN t0 ON 1458981311 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING (NOT (COUNT('p{BRWd'))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 FULL OUTER JOIN t0 ON 1458981311 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING ((COUNT('p{BRWd')) ISNULL);
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 FULL OUTER JOIN t0 ON 1458981311 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 FULL OUTER JOIN t0 ON 1458981311 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING COUNT('p{BRWd') UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 FULL OUTER JOIN t0 ON 1458981311 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING (NOT (COUNT('p{BRWd'))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 FULL OUTER JOIN t0 ON 1458981311 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING ((COUNT('p{BRWd')) ISNULL);
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 FULL OUTER JOIN t0 ON 1458981311 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0 IN ())) IS TRUE)) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0 IN ())) IS TRUE)))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((((t0.c0 IN ())) IS TRUE)) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM vt1, t0;
SELECT DISTINCT t0.c0 FROM vt1, t0 WHERE ((- ((t0.c0 IN ())))) UNION SELECT DISTINCT t0.c0 FROM vt1, t0 WHERE ((NOT ((- ((t0.c0 IN ())))))) UNION SELECT DISTINCT t0.c0 FROM vt1, t0 WHERE ((((- ((t0.c0 IN ())))) ISNULL));
SELECT DISTINCT t0.c0 FROM vt1, t0;
SELECT vt1.c0, t0.c0, vt1.c1 FROM vt1 NOT INDEXED, t0 GROUP BY vt1.c0, t0.c0, vt1.c1;
SELECT vt1.c0, t0.c0, vt1.c1 FROM vt1, t0 WHERE (((((t0.c0)>=(vt1.c0)))IS(((vt1.c0) NOT NULL)))) GROUP BY vt1.c0, t0.c0, vt1.c1 UNION SELECT ALL vt1.c0, t0.c0, vt1.c1 FROM vt1, t0 WHERE ((NOT (((((t0.c0)>=(vt1.c0)))IS(((vt1.c0) NOT NULL)))))) GROUP BY vt1.c0, t0.c0, vt1.c1 UNION SELECT ALL vt1.c0, t0.c0, vt1.c1 FROM vt1, t0 WHERE (((((((t0.c0)>=(vt1.c0)))IS(((vt1.c0) NOT NULL)))) ISNULL)) GROUP BY vt1.c0, t0.c0, vt1.c1;
SELECT vt1.c0, t0.c0, vt1.c1 FROM vt1 NOT INDEXED, t0 GROUP BY vt1.c0, t0.c0, vt1.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))<=(vt1.c0))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))<=(vt1.c0))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))<=(vt1.c0))) ISNULL));
SELECT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, vt0 LEFT OUTER JOIN t0 ON (((vt0.c1)) BETWEEN ((((((((((vt1.c0)OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(t0.c0)))) AND (((('') IS TRUE))));
SELECT DISTINCT * FROM vt1, vt0 LEFT OUTER JOIN t0 ON (((vt0.c1)) BETWEEN ((((((((((vt1.c0)OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(t0.c0)))) AND (((('') IS TRUE)))) WHERE (((((vt0.c0)LIKE(vt1.c1)))>>(((t0.c0)LIKE(t0.c0))))) UNION SELECT DISTINCT * FROM vt1, vt0 LEFT OUTER JOIN t0 ON (((vt0.c1)) BETWEEN ((((((((((vt1.c0)OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(t0.c0)))) AND (((('') IS TRUE)))) WHERE ((NOT (((((vt0.c0)LIKE(vt1.c1)))>>(((t0.c0)LIKE(t0.c0))))))) UNION SELECT DISTINCT * FROM vt1, vt0 LEFT OUTER JOIN t0 ON (((vt0.c1)) BETWEEN ((((((((((vt1.c0)OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(t0.c0)))) AND (((('') IS TRUE)))) WHERE (((((((vt0.c0)LIKE(vt1.c1)))>>(((t0.c0)LIKE(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0 LEFT OUTER JOIN t0 ON (((vt0.c1)) BETWEEN ((((((((((vt1.c0)OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(t0.c0)))) AND (((('') IS TRUE))));
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c1) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c1))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((vt1.c1) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE ((vt0.c1)OR(x''))  WHEN ((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0)) THEN NULL END LEFT OUTER JOIN t0 ON ((((t0.c0) NOTNULL))%(((((vt1.c0)OR(vt0.c0)))OR(t0.c0))));
SELECT * FROM vt1 CROSS JOIN vt0 ON CASE ((vt0.c1)OR(x''))  WHEN ((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0)) THEN NULL END LEFT OUTER JOIN t0 ON ((((t0.c0) NOTNULL))%(((((vt1.c0)OR(vt0.c0)))OR(t0.c0)))) WHERE ('F') UNION ALL SELECT * FROM vt1 CROSS JOIN vt0 ON CASE ((vt0.c1)OR(x''))  WHEN ((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0)) THEN NULL END LEFT OUTER JOIN t0 ON ((((t0.c0) NOTNULL))%(((((vt1.c0)OR(vt0.c0)))OR(t0.c0)))) WHERE ((NOT ('F'))) UNION ALL SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE ((vt0.c1)OR(x''))  WHEN ((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0)) THEN NULL END LEFT OUTER JOIN t0 ON ((((t0.c0) NOTNULL))%(((((vt1.c0)OR(vt0.c0)))OR(t0.c0)))) WHERE ((('F') ISNULL));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE ((vt0.c1)OR(x''))  WHEN ((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0)) THEN NULL END LEFT OUTER JOIN t0 ON ((((t0.c0) NOTNULL))%(((((vt1.c0)OR(vt0.c0)))OR(t0.c0))));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt0 ON (((~ (vt0.c1))) ISNULL);
SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt0 ON (((~ (vt0.c1))) ISNULL) WHERE (((((t0.c0, vt0.c1, vt0.c1)) BETWEEN ((-39690862, NULL, t0.c0)) AND ((vt0.c0, t0.c0, vt0.c0))) IN ())) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt0 ON (((~ (vt0.c1))) ISNULL) WHERE ((NOT (((((t0.c0, vt0.c1, vt0.c1)) BETWEEN ((-39690862, NULL, t0.c0)) AND ((vt0.c0, t0.c0, vt0.c0))) IN ())))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt0 ON (((~ (vt0.c1))) ISNULL) WHERE (((((((t0.c0, vt0.c1, vt0.c1)) BETWEEN ((-39690862, NULL, t0.c0)) AND ((vt0.c0, t0.c0, vt0.c0))) IN ())) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt0 ON (((~ (vt0.c1))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 NOT INDEXED WHERE (((CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(AVG(COUNT(TOTAL(MIN(TOTAL(MIN(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(AVG(COUNT(TOTAL(MIN(TOTAL(MIN(vt1.c0))))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(AVG(COUNT(TOTAL(MIN(TOTAL(MIN(vt1.c0)))))))) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))) IN ())) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))) IN ())))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))) IN ())) ISNULL));
SELECT ALL vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON x'' CROSS JOIN t0 ON NULLIF(DISTINCT vt0.c0, vt0.c0) COLLATE RTRIM;
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON x'' CROSS JOIN t0 ON NULLIF(DISTINCT vt0.c0, vt0.c0) COLLATE RTRIM WHERE (('E	I~' IN ())) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON x'' CROSS JOIN t0 ON NULLIF(DISTINCT vt0.c0, vt0.c0) COLLATE RTRIM WHERE ((NOT (('E	I~' IN ())))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON x'' CROSS JOIN t0 ON NULLIF(DISTINCT vt0.c0, vt0.c0) COLLATE RTRIM WHERE (((('E	I~' IN ())) ISNULL));
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON x'' CROSS JOIN t0 ON NULLIF(DISTINCT vt0.c0, vt0.c0) COLLATE RTRIM;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c1, vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c1, vt1.c0;
SELECT ALL vt0.c1, vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c1, vt1.c0 HAVING MAX(SUM(COUNT(MAX(vt0.c0)))) UNION ALL SELECT vt0.c1, vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c1, vt1.c0 HAVING (NOT (MAX(SUM(COUNT(MAX(vt0.c0)))))) UNION ALL SELECT vt0.c1, vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c1, vt1.c0 HAVING ((MAX(SUM(COUNT(MAX(vt0.c0))))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((t0.c0)<(CASE WHEN t0.c0 THEN t0.c0 WHEN x'05f1' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((t0.c0)<(CASE WHEN t0.c0 THEN t0.c0 WHEN x'05f1' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((t0.c0)<(CASE WHEN t0.c0 THEN t0.c0 WHEN x'05f1' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (((vt1.c1)<(vt1.c0))))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT ((NOT (((vt1.c1)<(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((((NOT (((vt1.c1)<(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((vt0.c1, x'', vt0.c0, vt0.c1, x'')) NOT BETWEEN ((CAST(vt0.c0 AS TEXT), (vt0.c0 IN ()), ((vt0.c1)<(NULL)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), MIN(vt0.c0, vt0.c0, vt0.c0, vt0.c1))) AND (((((NULL))<((vt0.c0))), ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)), vt0.c1 COLLATE NOCASE, ((vt0.c1)*(vt0.c1)), CAST(vt0.c0 AS INTEGER))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c1, x'', vt0.c0, vt0.c1, x'')) NOT BETWEEN ((CAST(vt0.c0 AS TEXT), (vt0.c0 IN ()), ((vt0.c1)<(NULL)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), MIN(vt0.c0, vt0.c0, vt0.c0, vt0.c1))) AND (((((NULL))<((vt0.c0))), ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)), vt0.c1 COLLATE NOCASE, ((vt0.c1)*(vt0.c1)), CAST(vt0.c0 AS INTEGER))))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((((vt0.c1, x'', vt0.c0, vt0.c1, x'')) NOT BETWEEN ((CAST(vt0.c0 AS TEXT), (vt0.c0 IN ()), ((vt0.c1)<(NULL)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), MIN(vt0.c0, vt0.c0, vt0.c0, vt0.c1))) AND (((((NULL))<((vt0.c0))), ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)), vt0.c1 COLLATE NOCASE, ((vt0.c1)*(vt0.c1)), CAST(vt0.c0 AS INTEGER))))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(MAX(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(MAX(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(MAX(t0.c0))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))) THEN CAST(vt0.c0 AS INTEGER) END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE WHEN (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))) THEN CAST(vt0.c0 AS INTEGER) END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE WHEN (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))) THEN CAST(vt0.c0 AS INTEGER) END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((NOT (vt0.c1))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt0.c0) IS TRUE)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((((NOT (vt0.c1))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt0.c0) IS TRUE)))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((NOT (vt0.c1))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt0.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (((((vt1.c1)<<(vt1.c1)))>=(x''))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c1)<<(vt1.c1)))>=(x''))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (((((((vt1.c1)<<(vt1.c1)))>=(x''))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING COUNT(GROUP_CONCAT(AVG(GROUP_CONCAT(SUM(vt1.c1))))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (COUNT(GROUP_CONCAT(AVG(GROUP_CONCAT(SUM(vt1.c1))))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((COUNT(GROUP_CONCAT(AVG(GROUP_CONCAT(SUM(vt1.c1)))))) ISNULL);
SELECT MAX((((((t0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t0.c0, t0.c0, vt0.c0)) AND (('', vt0.c0, vt0.c1)))) NOTNULL)) FROM t0, vt0;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON CAST(((t0.c0) BETWEEN (vt0.c1) AND (0x36dd4561)) AS NUMERIC) CROSS JOIN vt0 ON ((COALESCE(vt1.c0, vt0.c1, x'fd0c', vt1.c1))OR(-1230337869));
SELECT DISTINCT * FROM vt0, vt1, t0;
SELECT DISTINCT * FROM vt0, vt1, t0 WHERE (((((vt1.c1) ISNULL))AND(((((((((vt1.c0)AND(vt1.c0)))AND(0.9750273437774599)))OR(vt0.c0)))OR(vt1.c1))))) UNION SELECT DISTINCT * FROM vt0, vt1, t0 WHERE ((NOT (((((vt1.c1) ISNULL))AND(((((((((vt1.c0)AND(vt1.c0)))AND(0.9750273437774599)))OR(vt0.c0)))OR(vt1.c1))))))) UNION SELECT DISTINCT * FROM vt0, vt1, t0 WHERE (((((((vt1.c1) ISNULL))AND(((((((((vt1.c0)AND(vt1.c0)))AND(0.9750273437774599)))OR(vt0.c0)))OR(vt1.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, t0;
SELECT ALL vt1.c0, vt0.c1 FROM vt1 CROSS JOIN t0 ON (+ ((vt1.c1 IN (vt0.c0)))) CROSS JOIN vt0 ON LIKE(-1.048415914E9, (vt1.c1 IN ())) GROUP BY vt1.c0, vt0.c1;
SELECT vt1.c0, vt0.c1 FROM vt1 CROSS JOIN t0 ON (+ ((vt1.c1 IN (vt0.c0)))) CROSS JOIN vt0 ON LIKE(-1.048415914E9, (vt1.c1 IN ())) WHERE ((((vt0.c1, vt0.c1, vt1.c1)) BETWEEN (((vt1.c1 IN (vt1.c1)), ABS(vt1.c1), t0.c0 COLLATE RTRIM)) AND ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)), ((vt1.c0)<(vt0.c1)), (- (vt1.c0)))))) GROUP BY vt1.c0, vt0.c1 UNION SELECT ALL vt1.c0, vt0.c1 FROM vt1 CROSS JOIN t0 ON (+ ((vt1.c1 IN (vt0.c0)))) CROSS JOIN vt0 ON LIKE(-1.048415914E9, (vt1.c1 IN ())) WHERE ((NOT ((((vt0.c1, vt0.c1, vt1.c1)) BETWEEN (((vt1.c1 IN (vt1.c1)), ABS(vt1.c1), t0.c0 COLLATE RTRIM)) AND ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)), ((vt1.c0)<(vt0.c1)), (- (vt1.c0)))))))) GROUP BY vt1.c0, vt0.c1 UNION SELECT ALL vt1.c0, vt0.c1 FROM vt1 CROSS JOIN t0 ON (+ ((vt1.c1 IN (vt0.c0)))) CROSS JOIN vt0 ON LIKE(-1.048415914E9, (vt1.c1 IN ())) WHERE ((((((vt0.c1, vt0.c1, vt1.c1)) BETWEEN (((vt1.c1 IN (vt1.c1)), ABS(vt1.c1), t0.c0 COLLATE RTRIM)) AND ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)), ((vt1.c0)<(vt0.c1)), (- (vt1.c0)))))) ISNULL)) GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1 FROM vt1 CROSS JOIN t0 ON (+ ((vt1.c1 IN (vt0.c0)))) CROSS JOIN vt0 ON LIKE(-1.048415914E9, (vt1.c1 IN ())) GROUP BY vt1.c0, vt0.c1;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING MIN(AVG(vt1.c1)) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(AVG(vt1.c1)))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((MIN(AVG(vt1.c1))) ISNULL);
SELECT ALL * FROM vt0, vt1, t0;
SELECT ALL * FROM vt0, vt1, t0 WHERE (((((((((((vt1.c1) IS FALSE))AND((((0x76f0adb4)) BETWEEN ((t0.c0)) AND ((vt0.c0))))))AND(CAST(vt1.c1 AS INTEGER))))OR(json_extract(vt0.c1, NULL, vt0.c1, vt1.c0))))AND(NULL))) UNION ALL SELECT ALL * FROM vt0, vt1, t0 WHERE ((NOT (((((((((((vt1.c1) IS FALSE))AND((((0x76f0adb4)) BETWEEN ((t0.c0)) AND ((vt0.c0))))))AND(CAST(vt1.c1 AS INTEGER))))OR(json_extract(vt0.c1, NULL, vt0.c1, vt1.c0))))AND(NULL))))) UNION ALL SELECT * FROM vt0, vt1, t0 WHERE (((((((((((((vt1.c1) IS FALSE))AND((((0X76f0adb4)) BETWEEN ((t0.c0)) AND ((vt0.c0))))))AND(CAST(vt1.c1 AS INTEGER))))OR(json_extract(vt0.c1, NULL, vt0.c1, vt1.c0))))AND(NULL))) ISNULL));
SELECT ALL * FROM vt0, vt1, t0;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE (CAST((('⥟Bq\rV4Y!{') NOT BETWEEN (vt1.c0) AND (vt1.c1)) AS TEXT)) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (CAST((('⥟Bq\rV4Y!{') NOT BETWEEN (vt1.c0) AND (vt1.c1)) AS TEXT)))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE (((CAST((('⥟Bq\rV4Y!{') NOT BETWEEN (vt1.c0) AND (vt1.c1)) AS TEXT)) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE ((((((((((vt1.c1 IN ()))AND((((t0.c0)) NOT BETWEEN ((vt1.c1)) AND ((t0.c0))))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)))))AND(((vt1.c0) NOT BETWEEN (-4.79667824E8) AND (0X55213ce3)))))OR(((vt1.c1)||(vt1.c1))))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT ((((((((((vt1.c1 IN ()))AND((((t0.c0)) NOT BETWEEN ((vt1.c1)) AND ((t0.c0))))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)))))AND(((vt1.c0) NOT BETWEEN (-4.79667824E8) AND (0x55213ce3)))))OR(((vt1.c1)||(vt1.c1))))))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE ((((((((((((vt1.c1 IN ()))AND((((t0.c0)) NOT BETWEEN ((vt1.c1)) AND ((t0.c0))))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)))))AND(((vt1.c0) NOT BETWEEN (-4.79667824E8) AND (0x55213ce3)))))OR(((vt1.c1)||(vt1.c1))))) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CASE ((((t0.c0)OR(GROUP_CONCAT(MAX(t0.c0)))))OR(MAX(t0.c0)))  WHEN (NOT (MIN(t0.c0))) THEN AVG(t0.c0) WHEN MIN(COUNT(*)) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE GROUP_CONCAT(TOTAL(t0.c0)) END WHEN ((t0.c0)IS(t0.c0)) THEN t0.c0 END UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CASE ((((t0.c0)OR(GROUP_CONCAT(MAX(t0.c0)))))OR(MAX(t0.c0)))  WHEN (NOT (MIN(t0.c0))) THEN AVG(t0.c0) WHEN MIN(COUNT(*)) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE GROUP_CONCAT(TOTAL(t0.c0)) END WHEN ((t0.c0)IS(t0.c0)) THEN t0.c0 END)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE ((((t0.c0)OR(GROUP_CONCAT(MAX(t0.c0)))))OR(MAX(t0.c0)))  WHEN (NOT (MIN(t0.c0))) THEN AVG(t0.c0) WHEN MIN(COUNT(*)) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE GROUP_CONCAT(TOTAL(t0.c0)) END WHEN ((t0.c0)IS(t0.c0)) THEN t0.c0 END) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((('1076043258')<<(vt0.c1))) NOT NULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((('1076043258')<<(vt0.c1))) NOT NULL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((('1076043258')<<(vt0.c1))) NOT NULL)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c0, vt1.c1, t0.c0, vt0.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN vt0 ON CASE vt1.c0  WHEN ((x'') BETWEEN (vt1.c1) AND (vt0.c0)) THEN vt0.c1 END INNER JOIN t0 ON IFNULL(((vt1.c0)-(vt1.c0)), (((t0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c1))));
SELECT DISTINCT vt1.c0, vt1.c1, t0.c0, vt0.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN vt0 ON CASE vt1.c0  WHEN ((x'') BETWEEN (vt1.c1) AND (vt0.c0)) THEN vt0.c1 END INNER JOIN t0 ON IFNULL(((vt1.c0)-(vt1.c0)), (((t0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c1)))) WHERE (CASE ((vt1.c1)>=(vt1.c0))  WHEN LIKELY(t0.c0) THEN (vt1.c1 IN ()) WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt1.c0) ISNULL) WHEN (NULL IN ()) THEN CAST(t0.c0 AS REAL) ELSE CAST(vt0.c1 AS NUMERIC) END) UNION SELECT DISTINCT vt1.c0, vt1.c1, t0.c0, vt0.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN vt0 ON CASE vt1.c0  WHEN ((x'') BETWEEN (vt1.c1) AND (vt0.c0)) THEN vt0.c1 END INNER JOIN t0 ON IFNULL(((vt1.c0)-(vt1.c0)), (((t0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c1)))) WHERE ((NOT (CASE ((vt1.c1)>=(vt1.c0))  WHEN LIKELY(t0.c0) THEN (vt1.c1 IN ()) WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt1.c0) ISNULL) WHEN (NULL IN ()) THEN CAST(t0.c0 AS REAL) ELSE CAST(vt0.c1 AS NUMERIC) END))) UNION SELECT DISTINCT vt1.c0, vt1.c1, t0.c0, vt0.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN vt0 ON CASE vt1.c0  WHEN ((x'') BETWEEN (vt1.c1) AND (vt0.c0)) THEN vt0.c1 END INNER JOIN t0 ON IFNULL(((vt1.c0)-(vt1.c0)), (((t0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c1)))) WHERE (((CASE ((vt1.c1)>=(vt1.c0))  WHEN LIKELY(t0.c0) THEN (vt1.c1 IN ()) WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt1.c0) ISNULL) WHEN (NULL IN ()) THEN CAST(t0.c0 AS REAL) ELSE CAST(vt0.c1 AS NUMERIC) END) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1, t0.c0, vt0.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN vt0 ON CASE vt1.c0  WHEN ((x'') BETWEEN (vt1.c1) AND (vt0.c0)) THEN vt0.c1 END INNER JOIN t0 ON IFNULL(((vt1.c0)-(vt1.c0)), (((t0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c1))));
SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM t0, vt0 FULL OUTER JOIN vt1 ON (((CAST(vt0.c0 AS NUMERIC), LIKELY(DISTINCT vt1.c0), (vt1.c0 IN ())))>((CAST(vt0.c0 AS TEXT), ((vt1.c0)=(t0.c0)), t0.c0 COLLATE NOCASE))) GROUP BY t0.c0, vt1.c0, vt0.c0;
SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM t0, vt0 FULL OUTER JOIN vt1 ON (((CAST(vt0.c0 AS NUMERIC), LIKELY(DISTINCT vt1.c0), (vt1.c0 IN ())))>((CAST(vt0.c0 AS TEXT), ((vt1.c0)==(t0.c0)), t0.c0 COLLATE NOCASE))) WHERE (LIKELIHOOD(DISTINCT CAST(t0.c0 AS BLOB), 0.6353398060750869)) GROUP BY t0.c0, vt1.c0, vt0.c0 UNION SELECT t0.c0, vt1.c0, vt0.c0 FROM t0, vt0 FULL OUTER JOIN vt1 ON (((CAST(vt0.c0 AS NUMERIC), LIKELY(DISTINCT vt1.c0), (vt1.c0 IN ())))>((CAST(vt0.c0 AS TEXT), ((vt1.c0)==(t0.c0)), t0.c0 COLLATE NOCASE))) WHERE ((NOT (LIKELIHOOD(DISTINCT CAST(t0.c0 AS BLOB), 0.6353398060750869)))) GROUP BY t0.c0, vt1.c0, vt0.c0 UNION SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM t0, vt0 FULL OUTER JOIN vt1 ON (((CAST(vt0.c0 AS NUMERIC), LIKELY(DISTINCT vt1.c0), (vt1.c0 IN ())))>((CAST(vt0.c0 AS TEXT), ((vt1.c0)=(t0.c0)), t0.c0 COLLATE NOCASE))) WHERE (((LIKELIHOOD(DISTINCT CAST(t0.c0 AS BLOB), 0.6353398060750869)) ISNULL)) GROUP BY t0.c0, vt1.c0, vt0.c0;
SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM t0, vt0 FULL OUTER JOIN vt1 ON (((CAST(vt0.c0 AS NUMERIC), LIKELY(DISTINCT vt1.c0), (vt1.c0 IN ())))>((CAST(vt0.c0 AS TEXT), ((vt1.c0)=(t0.c0)), t0.c0 COLLATE NOCASE))) GROUP BY t0.c0, vt1.c0, vt0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING TOTAL(SUM(vt0.c0)) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (TOTAL(SUM(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING ((TOTAL(SUM(vt0.c0))) ISNULL);
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON TIME(x'7dc6', CASE WHEN t0.c0 THEN x'' ELSE vt1.c0 END, (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))));
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON TIME(x'7dc6', CASE WHEN t0.c0 THEN x'' ELSE vt1.c0 END, (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1)))) WHERE (-1.230337869E9) UNION ALL SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON TIME(x'7dc6', CASE WHEN t0.c0 THEN x'' ELSE vt1.c0 END, (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1)))) WHERE ((NOT (-1.230337869E9))) UNION ALL SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON TIME(x'7dc6', CASE WHEN t0.c0 THEN x'' ELSE vt1.c0 END, (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1)))) WHERE (((-1.230337869E9) ISNULL));
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON TIME(x'7dc6', CASE WHEN t0.c0 THEN x'' ELSE vt1.c0 END, (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))));
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((json_insert(t0.c0, t0.c0, t0.c0))OR(t0.c0)))AND(((t0.c0)<(t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((json_insert(t0.c0, t0.c0, t0.c0))OR(t0.c0)))AND(((t0.c0)<(t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((json_insert(t0.c0, t0.c0, t0.c0))OR(t0.c0)))AND(((t0.c0)<(t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((- ((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((- ((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((- ((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT t0.c0 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((CAST(t0.c0 AS INTEGER)) NOT NULL) GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((CAST(t0.c0 AS INTEGER)) NOT NULL) GROUP BY t0.c0 HAVING MAX(MIN(vt1.c1)) UNION ALL SELECT ALL t0.c0 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((CAST(t0.c0 AS INTEGER)) NOT NULL) GROUP BY t0.c0 HAVING (NOT (MAX(MIN(vt1.c1)))) UNION ALL SELECT ALL t0.c0 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((CAST(t0.c0 AS INTEGER)) NOT NULL) GROUP BY t0.c0 HAVING ((MAX(MIN(vt1.c1))) ISNULL);
SELECT ALL * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE (x'56fa') UNION ALL SELECT * FROM t0, vt0 NOT INDEXED WHERE ((NOT (x'56fa'))) UNION ALL SELECT * FROM t0, vt0 WHERE (((x'56fa') ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0)OR((((t0.c0))<((t0.c0)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c0)OR((((t0.c0))<((t0.c0)))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)OR((((t0.c0))<((t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c1, vt1.c0, t0.c0, vt0.c0, vt1.c1 FROM vt0, vt1 CROSS JOIN t0 ON (((vt1.c1 IN ()))LIKE(CAST(vt0.c0 AS BLOB))) GROUP BY vt0.c1, vt1.c0, t0.c0, vt0.c0, vt1.c1;
SELECT vt0.c1, vt1.c0, t0.c0, vt0.c0, vt1.c1 FROM vt0, vt1 CROSS JOIN t0 ON (((vt1.c1 IN ()))LIKE(CAST(vt0.c0 AS BLOB))) WHERE ((CAST(t0.c0 AS REAL) IN (((vt0.c0) NOTNULL), CASE vt1.c1  WHEN vt0.c0 THEN vt0.c0 END))) GROUP BY vt0.c1, vt1.c0, t0.c0, vt0.c0, vt1.c1 UNION SELECT vt0.c1, vt1.c0, t0.c0, vt0.c0, vt1.c1 FROM vt0, vt1 CROSS JOIN t0 ON (((vt1.c1 IN ()))LIKE(CAST(vt0.c0 AS BLOB))) WHERE ((NOT ((CAST(t0.c0 AS REAL) IN (((vt0.c0) NOTNULL), CASE vt1.c1  WHEN vt0.c0 THEN vt0.c0 END))))) GROUP BY vt0.c1, vt1.c0, t0.c0, vt0.c0, vt1.c1 UNION SELECT vt0.c1, vt1.c0, t0.c0, vt0.c0, vt1.c1 FROM vt0, vt1 CROSS JOIN t0 ON (((vt1.c1 IN ()))LIKE(CAST(vt0.c0 AS BLOB))) WHERE ((((CAST(t0.c0 AS REAL) IN (((vt0.c0) NOTNULL), CASE vt1.c1  WHEN vt0.c0 THEN vt0.c0 END))) ISNULL)) GROUP BY vt0.c1, vt1.c0, t0.c0, vt0.c0, vt1.c1;
SELECT vt0.c1, vt1.c0, t0.c0, vt0.c0, vt1.c1 FROM vt0, vt1 CROSS JOIN t0 ON (((vt1.c1 IN ()))LIKE(CAST(vt0.c0 AS BLOB))) GROUP BY vt0.c1, vt1.c0, t0.c0, vt0.c0, vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (~ (COUNT(*))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT ((~ (COUNT(*))))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (((~ (COUNT(*)))) ISNULL);
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (~ (COUNT(*))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT ((~ (COUNT(*))))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (((~ (COUNT(*)))) ISNULL);
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((NOT ((((vt1.c1, -8.62922171E8, vt1.c1)) BETWEEN ((vt1.c1, vt1.c1, vt1.c1)) AND ((vt1.c0, vt1.c1, '1304285031')))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((NOT ((((vt1.c1, -8.62922171E8, vt1.c1)) BETWEEN ((vt1.c1, vt1.c1, vt1.c1)) AND ((vt1.c0, vt1.c1, '1304285031')))))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((NOT ((((vt1.c1, -8.62922171E8, vt1.c1)) BETWEEN ((vt1.c1, vt1.c1, vt1.c1)) AND ((vt1.c0, vt1.c1, '1304285031')))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0) NOT BETWEEN (NULL) AND (x'')) IN ()) CROSS JOIN t0 ON ((CASE WHEN t0.c0 THEN vt1.c0 END)+((((t0.c0, t0.c0, vt1.c0))=((vt1.c1, vt1.c0, vt1.c1)))));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0) NOT BETWEEN (NULL) AND (x'')) IN ()) CROSS JOIN t0 ON ((CASE WHEN t0.c0 THEN vt1.c0 END)+((((t0.c0, t0.c0, vt1.c0))==((vt1.c1, vt1.c0, vt1.c1))))) WHERE (CAST(((((vt1.c1)AND(t0.c0)))AND(vt1.c1)) AS TEXT)) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0) NOT BETWEEN (NULL) AND (x'')) IN ()) CROSS JOIN t0 ON ((CASE WHEN t0.c0 THEN vt1.c0 END)+((((t0.c0, t0.c0, vt1.c0))=((vt1.c1, vt1.c0, vt1.c1))))) WHERE ((NOT (CAST(((((vt1.c1)AND(t0.c0)))AND(vt1.c1)) AS TEXT)))) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0) NOT BETWEEN (NULL) AND (x'')) IN ()) CROSS JOIN t0 ON ((CASE WHEN t0.c0 THEN vt1.c0 END)+((((t0.c0, t0.c0, vt1.c0))==((vt1.c1, vt1.c0, vt1.c1))))) WHERE (((CAST(((((vt1.c1)AND(t0.c0)))AND(vt1.c1)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0) NOT BETWEEN (NULL) AND (x'')) IN ()) CROSS JOIN t0 ON ((CASE WHEN t0.c0 THEN vt1.c0 END)+((((t0.c0, t0.c0, vt1.c0))=((vt1.c1, vt1.c0, vt1.c1)))));
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((t0.c0)*(t0.c0))) NOT BETWEEN (IFNULL(DISTINCT vt0.c0, vt0.c0)) AND ((((vt0.c1))<=((t0.c0)))))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (((((t0.c0)*(t0.c0))) NOT BETWEEN (IFNULL(DISTINCT vt0.c0, vt0.c0)) AND ((((vt0.c1))<=((t0.c0)))))))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((((t0.c0)*(t0.c0))) NOT BETWEEN (IFNULL(DISTINCT vt0.c0, vt0.c0)) AND ((((vt0.c1))<=((t0.c0)))))) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL vt0.c1, t0.c0, vt1.c1 FROM vt1, vt0 INNER JOIN t0 ON CASE WHEN (- (vt0.c1)) THEN ((((vt0.c1)OR(vt1.c0)))OR(vt1.c1)) ELSE CASE WHEN vt1.c0 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN vt0.c1 ELSE vt1.c0 END END GROUP BY vt0.c1, t0.c0, vt1.c1;
SELECT ALL vt0.c1, t0.c0, vt1.c1 FROM vt1, vt0 INNER JOIN t0 ON CASE WHEN (- (vt0.c1)) THEN ((((vt0.c1)OR(vt1.c0)))OR(vt1.c1)) ELSE CASE WHEN vt1.c0 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN vt0.c1 ELSE vt1.c0 END END GROUP BY vt0.c1, t0.c0, vt1.c1 HAVING GROUP_CONCAT(TOTAL(AVG(COUNT(*)))) UNION ALL SELECT vt0.c1, t0.c0, vt1.c1 FROM vt1, vt0 INNER JOIN t0 ON CASE WHEN (- (vt0.c1)) THEN ((((vt0.c1)OR(vt1.c0)))OR(vt1.c1)) ELSE CASE WHEN vt1.c0 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN vt0.c1 ELSE vt1.c0 END END GROUP BY vt0.c1, t0.c0, vt1.c1 HAVING (NOT (GROUP_CONCAT(TOTAL(AVG(COUNT(*)))))) UNION ALL SELECT ALL vt0.c1, t0.c0, vt1.c1 FROM vt1, vt0 INNER JOIN t0 ON CASE WHEN (- (vt0.c1)) THEN ((((vt0.c1)OR(vt1.c0)))OR(vt1.c1)) ELSE CASE WHEN vt1.c0 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN vt0.c1 ELSE vt1.c0 END END GROUP BY vt0.c1, t0.c0, vt1.c1 HAVING ((GROUP_CONCAT(TOTAL(AVG(COUNT(*))))) ISNULL);
SELECT ALL MAX(CASE (((vt1.c1))<((vt1.c1)))  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (NULL)) THEN ((((vt1.c0)AND(vt1.c0)))AND(NULL)) ELSE ((vt1.c0) NOT NULL) END) FROM vt1;
SELECT ALL t0.c0, vt1.c0, vt1.c1 FROM vt0, t0, vt1;
SELECT ALL t0.c0, vt1.c0, vt1.c1 FROM vt0, t0, vt1 WHERE (((((((((((((0.6477044530487934)AND(t0.c0)))OR(x'')))AND(((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))))OR(((vt1.c1)==(vt0.c0)))))OR(t0.c0)))AND(((((vt1.c0)OR(vt0.c1)))AND(x'414a'))))) UNION ALL SELECT t0.c0, vt1.c0, vt1.c1 FROM vt0, t0, vt1 WHERE ((NOT (((((((((((((0.6477044530487934)AND(t0.c0)))OR(x'')))AND(((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))))OR(((vt1.c1)==(vt0.c0)))))OR(t0.c0)))AND(((((vt1.c0)OR(vt0.c1)))AND(x'414a'))))))) UNION ALL SELECT ALL t0.c0, vt1.c0, vt1.c1 FROM vt0, t0, vt1 WHERE (((((((((((((((0.6477044530487934)AND(t0.c0)))OR(x'')))AND(((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))))OR(((vt1.c1)==(vt0.c0)))))OR(t0.c0)))AND(((((vt1.c0)OR(vt0.c1)))AND(x'414a'))))) ISNULL));
SELECT ALL t0.c0, vt1.c0, vt1.c1 FROM vt0, t0, vt1;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (0.4053900601697975) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (0.4053900601697975))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((0.4053900601697975) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT t0.c0, vt1.c0 FROM t0, vt0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0 NOT INDEXED, vt0, vt1 WHERE (json_array(((vt1.c0)>(vt1.c1)), x'938f')) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM t0, vt0, vt1 WHERE ((NOT (json_array(((vt1.c0)>(vt1.c1)), x'938f')))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM t0, vt0, vt1 WHERE (((json_array(((vt1.c0)>(vt1.c1)), x'938f')) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT ALL vt1.c0, vt1.c1, vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0, vt0.c1;
SELECT vt1.c0, vt1.c1, vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0, vt0.c1 HAVING (~ ('')) UNION ALL SELECT vt1.c0, vt1.c1, vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0, vt0.c1 HAVING (NOT ((~ ('')))) UNION ALL SELECT vt1.c0, vt1.c1, vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0, vt0.c1 HAVING (((~ (''))) ISNULL);
SELECT ALL vt1.c0, vt1.c1, vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0, vt0.c1;
SELECT vt1.c0, vt1.c1, vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0, vt0.c1 HAVING (~ ('')) UNION ALL SELECT vt1.c0, vt1.c1, vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0, vt0.c1 HAVING (NOT ((~ ('')))) UNION ALL SELECT vt1.c0, vt1.c1, vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0, vt0.c1 HAVING (((~ (''))) ISNULL);
SELECT ALL vt1.c0, vt1.c1, vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt1.c1, vt0.c0, vt0.c1;
SELECT * FROM t0 INNER JOIN vt0 ON ((CAST(t0.c0 AS BLOB))>>(vt0.c1 COLLATE NOCASE)) LEFT OUTER JOIN vt1 ON ((((((((((((((vt1.c1)OR('0.6065659759087628')))OR(vt0.c0)))AND(vt0.c1)))OR(t0.c0)))OR(x'')))AND(vt0.c1)))>(0.7070153233217527));
SELECT ALL * FROM t0 NOT INDEXED INNER JOIN vt0 ON ((CAST(t0.c0 AS BLOB))>>(vt0.c1 COLLATE NOCASE)) LEFT OUTER JOIN vt1 ON ((((((((((((((vt1.c1)OR('0.6065659759087628')))OR(vt0.c0)))AND(vt0.c1)))OR(t0.c0)))OR(x'')))AND(vt0.c1)))>(0.7070153233217527)) WHERE (LOWER('K/0U')) UNION ALL SELECT ALL * FROM t0 INNER JOIN vt0 ON ((CAST(t0.c0 AS BLOB))>>(vt0.c1 COLLATE NOCASE)) LEFT OUTER JOIN vt1 ON ((((((((((((((vt1.c1)OR('0.6065659759087628')))OR(vt0.c0)))AND(vt0.c1)))OR(t0.c0)))OR(x'')))AND(vt0.c1)))>(0.7070153233217527)) WHERE ((NOT (LOWER('K/0U')))) UNION ALL SELECT * FROM t0 INNER JOIN vt0 ON ((CAST(t0.c0 AS BLOB))>>(vt0.c1 COLLATE NOCASE)) LEFT OUTER JOIN vt1 ON ((((((((((((((vt1.c1)OR('0.6065659759087628')))OR(vt0.c0)))AND(vt0.c1)))OR(t0.c0)))OR(x'')))AND(vt0.c1)))>(0.7070153233217527)) WHERE (((LOWER('K/0U')) ISNULL));
SELECT * FROM t0 INNER JOIN vt0 ON ((CAST(t0.c0 AS BLOB))>>(vt0.c1 COLLATE NOCASE)) LEFT OUTER JOIN vt1 ON ((((((((((((((vt1.c1)OR('0.6065659759087628')))OR(vt0.c0)))AND(vt0.c1)))OR(t0.c0)))OR(x'')))AND(vt0.c1)))>(0.7070153233217527));
SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM t0, vt0 WHERE ((CASE vt0.c0  WHEN vt0.c1 THEN t0.c0 END IN (((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)), CAST(vt0.c1 AS INTEGER)))) UNION SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT ((CASE vt0.c0  WHEN vt0.c1 THEN t0.c0 END IN (((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)), CAST(vt0.c1 AS INTEGER)))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM t0, vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c1 THEN t0.c0 END IN (((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)), CAST(vt0.c1 AS INTEGER)))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM t0, vt0;
SELECT vt0.c1, t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, CAST(t0.c0 AS REAL), IFNULL(vt0.c0, t0.c0))) AND ((TOTAL_CHANGES(), (((vt0.c1))<=((t0.c0))), ((vt0.c0)OR(t0.c0))))) GROUP BY vt0.c1, t0.c0, vt0.c0;
SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, CAST(t0.c0 AS REAL), IFNULL(vt0.c0, t0.c0))) AND ((TOTAL_CHANGES(), (((vt0.c1))<=((t0.c0))), ((vt0.c0)OR(t0.c0))))) WHERE (((((t0.c0)>(vt0.c1)))-((NOT (t0.c0))))) GROUP BY vt0.c1, t0.c0, vt0.c0 UNION SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, CAST(t0.c0 AS REAL), IFNULL(vt0.c0, t0.c0))) AND ((TOTAL_CHANGES(), (((vt0.c1))<=((t0.c0))), ((vt0.c0)OR(t0.c0))))) WHERE ((NOT (((((t0.c0)>(vt0.c1)))-((NOT (t0.c0))))))) GROUP BY vt0.c1, t0.c0, vt0.c0 UNION SELECT vt0.c1, t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, CAST(t0.c0 AS REAL), IFNULL(vt0.c0, t0.c0))) AND ((TOTAL_CHANGES(), (((vt0.c1))<=((t0.c0))), ((vt0.c0)OR(t0.c0))))) WHERE (((((((t0.c0)>(vt0.c1)))-((NOT (t0.c0))))) ISNULL)) GROUP BY vt0.c1, t0.c0, vt0.c0;
SELECT vt0.c1, t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, CAST(t0.c0 AS REAL), IFNULL(vt0.c0, t0.c0))) AND ((TOTAL_CHANGES(), (((vt0.c1))<=((t0.c0))), ((vt0.c0)OR(t0.c0))))) GROUP BY vt0.c1, t0.c0, vt0.c0;
SELECT vt0.c1, t0.c0, vt1.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c1, t0.c0, vt1.c0, vt0.c0;
SELECT vt0.c1, t0.c0, vt1.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c1, t0.c0, vt1.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, t0.c0, vt1.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c1, t0.c0, vt1.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, t0.c0, vt1.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c1, t0.c0, vt1.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, t0.c0, vt1.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c1, t0.c0, vt1.c0, vt0.c0;
SELECT vt0.c1, t0.c0, vt1.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c1, t0.c0, vt1.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, t0.c0, vt1.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c1, t0.c0, vt1.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, t0.c0, vt1.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c1, t0.c0, vt1.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, t0.c0, vt1.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c1, t0.c0, vt1.c0, vt0.c0;
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST((((vt0.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c0, vt0.c0)) AND ((NULL, vt0.c1, vt0.c1))) AS REAL) INNER JOIN t0 ON ((((t0.c0) NOT NULL)) NOT NULL);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST((((vt0.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c0, vt0.c0)) AND ((NULL, vt0.c1, vt0.c1))) AS REAL) INNER JOIN t0 ON ((((t0.c0) NOT NULL)) NOT NULL) WHERE (CAST(CAST(vt0.c1 AS TEXT) AS BLOB)) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST((((vt0.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c0, vt0.c0)) AND ((NULL, vt0.c1, vt0.c1))) AS REAL) INNER JOIN t0 ON ((((t0.c0) NOT NULL)) NOT NULL) WHERE ((NOT (CAST(CAST(vt0.c1 AS TEXT) AS BLOB)))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST((((vt0.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c0, vt0.c0)) AND ((NULL, vt0.c1, vt0.c1))) AS REAL) INNER JOIN t0 ON ((((t0.c0) NOT NULL)) NOT NULL) WHERE (((CAST(CAST(vt0.c1 AS TEXT) AS BLOB)) ISNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST((((vt0.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c0, vt0.c0)) AND ((NULL, vt0.c1, vt0.c1))) AS REAL) INNER JOIN t0 ON ((((t0.c0) NOT NULL)) NOT NULL);
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((~ ((+ (t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((~ ((+ (t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((~ ((+ (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0 WHERE (((((vt0.c0)==(t0.c0))) IS TRUE)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t0 WHERE ((NOT (((((vt0.c0)=(t0.c0))) IS TRUE)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t0 WHERE (((((((vt0.c0)=(t0.c0))) IS TRUE)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL * FROM vt0, t0, vt1;
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((('-1005754100')OR(((t0.c0)||(vt1.c0)))))AND(((((((((vt0.c1)AND(t0.c0)))OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c0))))) UNION ALL SELECT * FROM vt0, t0, vt1 WHERE ((NOT ((((('-1005754100')OR(((t0.c0)||(vt1.c0)))))AND(((((((((vt0.c1)AND(t0.c0)))OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c0))))))) UNION ALL SELECT * FROM vt0, t0, vt1 WHERE ((((((('-1005754100')OR(((t0.c0)||(vt1.c0)))))AND(((((((((vt0.c1)AND(t0.c0)))OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0, t0, vt1;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (LIKELY(vt0.c0 COLLATE NOCASE)) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (LIKELY(vt0.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((LIKELY(vt0.c0 COLLATE NOCASE)) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT vt0.c1, t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((((((((vt0.c0)AND(0x27c87512 COLLATE BINARY)))AND(TRIM(DISTINCT vt0.c1))))AND((((vt0.c0, vt1.c0, vt0.c1))<((vt0.c1, vt0.c0, vt0.c0))))))AND(((vt0.c1)-(0.433402305393364)))) FULL OUTER JOIN vt1 ON (((vt1.c0, t0.c0, t0.c0)) BETWEEN ((CAST(vt0.c1 AS REAL), ((vt0.c1) NOTNULL), 0X76f0adb4)) AND ((((((t0.c0)AND(vt1.c0)))AND(t0.c0)), ((((((((vt1.c0)OR(vt1.c0)))OR(t0.c0)))OR(vt0.c0)))AND(vt0.c1)), x''))) GROUP BY vt0.c1, t0.c0;
SELECT ALL t0.c0, vt0.c1, vt0.c0, vt1.c1 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c1, vt0.c0, vt1.c1;
SELECT t0.c0, vt0.c1, vt0.c0, vt1.c1 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c1, vt0.c0, vt1.c1 HAVING CAST(COUNT(*) AS REAL) UNION ALL SELECT ALL t0.c0, vt0.c1, vt0.c0, vt1.c1 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c1, vt0.c0, vt1.c1 HAVING (NOT (CAST(COUNT(*) AS REAL))) UNION ALL SELECT t0.c0, vt0.c1, vt0.c0, vt1.c1 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c1, vt0.c0, vt1.c1 HAVING ((CAST(COUNT(*) AS REAL)) ISNULL);
SELECT ALL t0.c0, vt0.c1, vt0.c0, vt1.c1 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c1, vt0.c0, vt1.c1;
SELECT t0.c0, vt0.c1, vt0.c0, vt1.c1 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c1, vt0.c0, vt1.c1 HAVING CAST(COUNT(*) AS REAL) UNION ALL SELECT ALL t0.c0, vt0.c1, vt0.c0, vt1.c1 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c1, vt0.c0, vt1.c1 HAVING (NOT (CAST(COUNT(*) AS REAL))) UNION ALL SELECT t0.c0, vt0.c1, vt0.c0, vt1.c1 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c1, vt0.c0, vt1.c1 HAVING ((CAST(COUNT(*) AS REAL)) ISNULL);
SELECT ALL t0.c0, vt0.c1, vt0.c0, vt1.c1 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c1, vt0.c0, vt1.c1;
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (NOT (vt1.c0)) COLLATE RTRIM CROSS JOIN vt1 ON ((vt1.c1)LIKE(vt0.c0)) COLLATE RTRIM;
SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM t0, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM t0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM t0, vt0;
SELECT vt0.c1 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 NATURAL JOIN t0 WHERE (IFNULL(vt0.c1, vt0.c1) COLLATE BINARY) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 NATURAL JOIN t0 WHERE ((NOT (IFNULL(vt0.c1, vt0.c1) COLLATE BINARY))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 NATURAL JOIN t0 WHERE (((IFNULL(vt0.c1, vt0.c1) COLLATE BINARY) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c1;
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt0 CROSS JOIN t0 ON '-88271185' LEFT OUTER JOIN vt1 ON CASE WHEN (vt1.c0 IN ()) THEN ((vt0.c0)+(vt0.c1)) ELSE x'' END GROUP BY vt1.c0, vt1.c1, vt0.c0;
SELECT vt1.c0, vt1.c1, vt0.c0 FROM vt0 CROSS JOIN t0 ON '-88271185' LEFT OUTER JOIN vt1 ON CASE WHEN (vt1.c0 IN ()) THEN ((vt0.c0)+(vt0.c1)) ELSE x'' END GROUP BY vt1.c0, vt1.c1, vt0.c0 HAVING SUM(MAX(COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt0 CROSS JOIN t0 ON '-88271185' LEFT OUTER JOIN vt1 ON CASE WHEN (vt1.c0 IN ()) THEN ((vt0.c0)+(vt0.c1)) ELSE x'' END GROUP BY vt1.c0, vt1.c1, vt0.c0 HAVING (NOT (SUM(MAX(COUNT(*))))) UNION ALL SELECT ALL vt1.c0, vt1.c1, vt0.c0 FROM vt0 CROSS JOIN t0 ON '-88271185' LEFT OUTER JOIN vt1 ON CASE WHEN (vt1.c0 IN ()) THEN ((vt0.c0)+(vt0.c1)) ELSE x'' END GROUP BY vt1.c0, vt1.c1, vt0.c0 HAVING ((SUM(MAX(COUNT(*)))) ISNULL);
SELECT MIN((((x'' IN ()))<>((vt1.c1 IN ())))) FROM vt1;
SELECT ALL vt0.c1 FROM vt0, t0;
SELECT vt0.c1 FROM vt0, t0 WHERE ((((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1)) IN ())) UNION ALL SELECT vt0.c1 FROM vt0, t0 WHERE ((NOT ((((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1)) IN ())))) UNION ALL SELECT vt0.c1 FROM vt0, t0 WHERE ((((((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1)) IN ())) ISNULL));
SELECT ALL vt0.c1 FROM vt0, t0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, t0, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, t0, vt0 WHERE (CAST((t0.c0 IN ()) AS NUMERIC)) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, t0, vt0 WHERE ((NOT (CAST((t0.c0 IN ()) AS NUMERIC)))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, t0, vt0 WHERE (((CAST((t0.c0 IN ()) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, t0, vt0;
SELECT vt1.c0, vt1.c1 FROM vt1, t0 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1, t0 WHERE (t0.c0) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1, t0 WHERE ((NOT (t0.c0))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1, t0 WHERE (((t0.c0) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1, t0 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt0.c1 FROM vt0 CROSS JOIN vt1 ON LIKELY(NULL) GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1 FROM vt0 CROSS JOIN vt1 ON LIKELY(NULL) GROUP BY vt1.c0, vt0.c1 HAVING ((COUNT(GROUP_CONCAT(vt1.c1)))IS(((vt0.c0) BETWEEN (vt0.c0) AND (MIN(GROUP_CONCAT(AVG(vt0.c1))))))) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt0 CROSS JOIN vt1 ON LIKELY(NULL) GROUP BY vt1.c0, vt0.c1 HAVING (NOT (((COUNT(GROUP_CONCAT(vt1.c1)))IS(((vt0.c0) BETWEEN (vt0.c0) AND (MIN(GROUP_CONCAT(AVG(vt0.c1))))))))) UNION ALL SELECT ALL vt1.c0, vt0.c1 FROM vt0 CROSS JOIN vt1 ON LIKELY(NULL) GROUP BY vt1.c0, vt0.c1 HAVING ((((COUNT(GROUP_CONCAT(vt1.c1)))IS(((vt0.c0) BETWEEN (vt0.c0) AND (MIN(GROUP_CONCAT(AVG(vt0.c1)))))))) ISNULL);
SELECT ALL TOTAL(((t0.c0 COLLATE RTRIM)-((((t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0)))))) FROM t0;
SELECT * FROM t0, vt1;
SELECT * FROM t0, vt1 WHERE ((- (CAST(t0.c0 AS NUMERIC)))) UNION ALL SELECT * FROM t0, vt1 WHERE ((NOT ((- (CAST(t0.c0 AS NUMERIC)))))) UNION ALL SELECT * FROM t0, vt1 WHERE ((((- (CAST(t0.c0 AS NUMERIC)))) ISNULL));
SELECT * FROM t0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c1)>=(vt1.c1)))IS((vt1.c0 IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c1)>=(vt1.c1)))IS((vt1.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c1)>=(vt1.c1)))IS((vt1.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL t0.c0, vt1.c1, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((((NOT (vt1.c0))))=((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE vt1.c1 END))) GROUP BY t0.c0, vt1.c1, vt1.c0;
SELECT t0.c0, vt1.c1, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((((NOT (vt1.c0))))==((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE vt1.c1 END))) WHERE (t0.c0) GROUP BY t0.c0, vt1.c1, vt1.c0 UNION SELECT t0.c0, vt1.c1, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((((NOT (vt1.c0))))=((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE vt1.c1 END))) WHERE ((NOT (t0.c0))) GROUP BY t0.c0, vt1.c1, vt1.c0 UNION SELECT t0.c0, vt1.c1, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((((NOT (vt1.c0))))=((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE vt1.c1 END))) WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0, vt1.c1, vt1.c0;
SELECT ALL t0.c0, vt1.c1, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((((NOT (vt1.c0))))=((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE vt1.c1 END))) GROUP BY t0.c0, vt1.c1, vt1.c0;
SELECT ALL vt0.c1, t0.c0, vt1.c1, vt0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c1, t0.c0, vt1.c1, vt0.c0;
SELECT ALL vt0.c1, t0.c0, vt1.c1, vt0.c0 FROM vt0, vt1 NOT INDEXED, t0 GROUP BY vt0.c1, t0.c0, vt1.c1, vt0.c0 HAVING MIN(((vt1.c0) BETWEEN (AVG(t0.c0)) AND (COUNT(vt1.c0)))) UNION ALL SELECT vt0.c1, t0.c0, vt1.c1, vt0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c1, t0.c0, vt1.c1, vt0.c0 HAVING (NOT (MIN(((vt1.c0) BETWEEN (AVG(t0.c0)) AND (COUNT(vt1.c0)))))) UNION ALL SELECT vt0.c1, t0.c0, vt1.c1, vt0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c1, t0.c0, vt1.c1, vt0.c0 HAVING ((MIN(((vt1.c0) BETWEEN (AVG(t0.c0)) AND (COUNT(vt1.c0))))) ISNULL);
SELECT * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (x'') UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((x'') ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (json_extract(CAST(vt1.c1 AS REAL), NULL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (json_extract(CAST(vt1.c1 AS REAL), NULL)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((json_extract(CAST(vt1.c1 AS REAL), NULL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c0, vt0.c1, t0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0, vt1.c0;
SELECT vt0.c0, vt0.c1, t0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE ((((vt0.c1))>=(((~ (vt1.c0)))))) GROUP BY vt0.c0, vt0.c1, t0.c0, vt1.c0 UNION SELECT vt0.c0, vt0.c1, t0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE ((NOT ((((vt0.c1))>=(((~ (vt1.c0)))))))) GROUP BY vt0.c0, vt0.c1, t0.c0, vt1.c0 UNION SELECT vt0.c0, vt0.c1, t0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE ((((((vt0.c1))>=(((~ (vt1.c0)))))) ISNULL)) GROUP BY vt0.c0, vt0.c1, t0.c0, vt1.c0;
SELECT vt0.c0, vt0.c1, t0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0, vt1.c0;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0 FROM vt0 RIGHT OUTER JOIN t0 ON NULL INNER JOIN vt1 ON ((((((((((((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0)))OR(CAST(vt0.c1 AS TEXT))))AND(((vt1.c1)LIKE(vt0.c1)))))AND((vt1.c1 IN ()))))AND(LENGTH(vt0.c0))))AND(0.9661891541618184)))AND(((vt1.c0)IS(vt0.c0))));
SELECT ALL vt1.c0 FROM vt0 RIGHT OUTER JOIN t0 ON NULL INNER JOIN vt1 ON ((((((((((((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0)))OR(CAST(vt0.c1 AS TEXT))))AND(((vt1.c1)LIKE(vt0.c1)))))AND((vt1.c1 IN ()))))AND(LENGTH(vt0.c0))))AND(0.9661891541618184)))AND(((vt1.c0)IS(vt0.c0)))) WHERE (0.112267584618989) UNION ALL SELECT ALL vt1.c0 FROM vt0 RIGHT OUTER JOIN t0 ON NULL INNER JOIN vt1 ON ((((((((((((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0)))OR(CAST(vt0.c1 AS TEXT))))AND(((vt1.c1)LIKE(vt0.c1)))))AND((vt1.c1 IN ()))))AND(LENGTH(vt0.c0))))AND(0.9661891541618184)))AND(((vt1.c0)IS(vt0.c0)))) WHERE ((NOT (0.112267584618989))) UNION ALL SELECT ALL vt1.c0 FROM vt0 RIGHT OUTER JOIN t0 ON NULL INNER JOIN vt1 ON ((((((((((((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0)))OR(CAST(vt0.c1 AS TEXT))))AND(((vt1.c1)LIKE(vt0.c1)))))AND((vt1.c1 IN ()))))AND(LENGTH(vt0.c0))))AND(0.9661891541618184)))AND(((vt1.c0)IS(vt0.c0)))) WHERE (((0.112267584618989) ISNULL));
SELECT vt1.c0 FROM vt0 RIGHT OUTER JOIN t0 ON NULL INNER JOIN vt1 ON ((((((((((((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0)))OR(CAST(vt0.c1 AS TEXT))))AND(((vt1.c1)LIKE(vt0.c1)))))AND((vt1.c1 IN ()))))AND(LENGTH(vt0.c0))))AND(0.9661891541618184)))AND(((vt1.c0)IS(vt0.c0))));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (0.819558560354289) AND (((((vt0.c0)AND(0Xdbcabf1)))AND(vt0.c0))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (0.819558560354289) AND (((((vt0.c0)AND(0xdbcabf1)))AND(vt0.c0))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (0.819558560354289) AND (((((vt0.c0)AND(0Xdbcabf1)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((UPPER(t0.c0) IN ())) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((UPPER(t0.c0) IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((UPPER(t0.c0) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING COUNT(*) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING COUNT(*) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0))) ISNULL);
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0))) ISNULL) WHERE (((((((vt0.c1) IS TRUE))AND((- (vt1.c1)))))OR((vt0.c1 IN ())))) UNION ALL SELECT * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0))) ISNULL) WHERE ((NOT (((((((vt0.c1) IS TRUE))AND((- (vt1.c1)))))OR((vt0.c1 IN ())))))) UNION ALL SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0))) ISNULL) WHERE (((((((((vt0.c1) IS TRUE))AND((- (vt1.c1)))))OR((vt0.c1 IN ())))) ISNULL));
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0))) ISNULL);
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((((~ (NULL)))>>(((((vt1.c1)AND(vt1.c0)))OR('X嶒'))))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT ((((~ (NULL)))>>(((((vt1.c1)AND(vt1.c0)))OR('X嶒'))))))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((((((~ (NULL)))>>(((((vt1.c1)AND(vt1.c0)))OR('X嶒'))))) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT ALL t0.c0, vt1.c0 FROM vt1, vt0, t0 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, vt0, t0 WHERE ((((t0.c0) BETWEEN (t0.c0) AND (vt1.c1)) IN (CAST(t0.c0 AS REAL)))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt1, vt0, t0 WHERE ((NOT ((((t0.c0) BETWEEN (t0.c0) AND (vt1.c1)) IN (CAST(t0.c0 AS REAL)))))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt1, vt0, t0 WHERE ((((((t0.c0) BETWEEN (t0.c0) AND (vt1.c1)) IN (CAST(t0.c0 AS REAL)))) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, vt0, t0 GROUP BY t0.c0, vt1.c0;
SELECT vt0.c1, t0.c0, vt0.c0, vt1.c1, vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON TYPEOF(DISTINCT ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))) LEFT OUTER JOIN t0 ON CASE WHEN ((vt0.c1) BETWEEN ('') AND (t0.c0)) THEN ((t0.c0) BETWEEN (vt1.c1) AND (t0.c0)) END GROUP BY vt0.c1, t0.c0, vt0.c0, vt1.c1, vt1.c0;
SELECT vt0.c1, t0.c0, vt0.c0, vt1.c1, vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON TYPEOF(DISTINCT ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))) LEFT OUTER JOIN t0 ON CASE WHEN ((vt0.c1) BETWEEN ('') AND (t0.c0)) THEN ((t0.c0) BETWEEN (vt1.c1) AND (t0.c0)) END GROUP BY vt0.c1, t0.c0, vt0.c0, vt1.c1, vt1.c0 HAVING CASE WHEN COUNT(*) THEN vt0.c1 WHEN MIN(MAX(MAX(SUM(vt0.c1)))) THEN MAX(vt1.c1) WHEN ((GROUP_CONCAT(COUNT(*))) BETWEEN (vt1.c1) AND (GROUP_CONCAT(vt0.c1))) THEN GROUP_CONCAT(GROUP_CONCAT(COUNT(*))) ELSE COUNT(*) END UNION ALL SELECT vt0.c1, t0.c0, vt0.c0, vt1.c1, vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON TYPEOF(DISTINCT ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))) LEFT OUTER JOIN t0 ON CASE WHEN ((vt0.c1) BETWEEN ('') AND (t0.c0)) THEN ((t0.c0) BETWEEN (vt1.c1) AND (t0.c0)) END GROUP BY vt0.c1, t0.c0, vt0.c0, vt1.c1, vt1.c0 HAVING (NOT (CASE WHEN COUNT(*) THEN vt0.c1 WHEN MIN(MAX(MAX(SUM(vt0.c1)))) THEN MAX(vt1.c1) WHEN ((GROUP_CONCAT(COUNT(*))) BETWEEN (vt1.c1) AND (GROUP_CONCAT(vt0.c1))) THEN GROUP_CONCAT(GROUP_CONCAT(COUNT(*))) ELSE COUNT(*) END)) UNION ALL SELECT vt0.c1, t0.c0, vt0.c0, vt1.c1, vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON TYPEOF(DISTINCT ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))) LEFT OUTER JOIN t0 ON CASE WHEN ((vt0.c1) BETWEEN ('') AND (t0.c0)) THEN ((t0.c0) BETWEEN (vt1.c1) AND (t0.c0)) END GROUP BY vt0.c1, t0.c0, vt0.c0, vt1.c1, vt1.c0 HAVING ((CASE WHEN COUNT(*) THEN vt0.c1 WHEN MIN(MAX(MAX(SUM(vt0.c1)))) THEN MAX(vt1.c1) WHEN ((GROUP_CONCAT(COUNT(*))) BETWEEN (vt1.c1) AND (GROUP_CONCAT(vt0.c1))) THEN GROUP_CONCAT(GROUP_CONCAT(COUNT(*))) ELSE COUNT(*) END) ISNULL);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c0 COLLATE NOCASE))>=((((t0.c0) NOTNULL)))) INNER JOIN vt1 ON vt1.c0;
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c0 COLLATE NOCASE))>=((((t0.c0) NOTNULL)))) INNER JOIN vt1 ON vt1.c0 WHERE ((((vt0.c1 IN ())) BETWEEN (CAST(vt1.c1 AS REAL)) AND (((vt0.c0)<<(vt0.c1))))) UNION ALL SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c0 COLLATE NOCASE))>=((((t0.c0) NOTNULL)))) INNER JOIN vt1 ON vt1.c0 WHERE ((NOT ((((vt0.c1 IN ())) BETWEEN (CAST(vt1.c1 AS REAL)) AND (((vt0.c0)<<(vt0.c1))))))) UNION ALL SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c0 COLLATE NOCASE))>=((((t0.c0) NOTNULL)))) INNER JOIN vt1 ON vt1.c0 WHERE ((((((vt0.c1 IN ())) BETWEEN (CAST(vt1.c1 AS REAL)) AND (((vt0.c0)<<(vt0.c1))))) ISNULL));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c0 COLLATE NOCASE))>=((((t0.c0) NOTNULL)))) INNER JOIN vt1 ON vt1.c0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((+ (((t0.c0)>=(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((+ (((t0.c0)>=(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 NOT INDEXED WHERE ((((+ (((t0.c0)>=(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS REAL)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST((vt1.c0 IN (vt1.c0)) AS REAL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CAST((vt1.c0 IN (vt1.c0)) AS REAL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c0, vt1.c0, vt1.c1 FROM t0, vt1 GROUP BY t0.c0, vt1.c0, vt1.c1;
SELECT ALL t0.c0, vt1.c0, vt1.c1 FROM t0, vt1 GROUP BY t0.c0, vt1.c0, vt1.c1 HAVING COUNT((- (MIN(GROUP_CONCAT(vt1.c1))))) UNION ALL SELECT ALL t0.c0, vt1.c0, vt1.c1 FROM t0, vt1 GROUP BY t0.c0, vt1.c0, vt1.c1 HAVING (NOT (COUNT((- (MIN(GROUP_CONCAT(vt1.c1))))))) UNION ALL SELECT ALL t0.c0, vt1.c0, vt1.c1 FROM t0, vt1 GROUP BY t0.c0, vt1.c0, vt1.c1 HAVING ((COUNT((- (MIN(GROUP_CONCAT(vt1.c1)))))) ISNULL);
SELECT vt1.c1, t0.c0, vt1.c0 FROM t0, vt1;
SELECT vt1.c1, t0.c0, vt1.c0 FROM t0, vt1 WHERE ((((vt1.c0 IN ()))<<(vt1.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c1, t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT ((((vt1.c0 IN ()))<<(vt1.c0 COLLATE RTRIM))))) UNION ALL SELECT vt1.c1, t0.c0, vt1.c0 FROM t0, vt1 WHERE ((((((vt1.c0 IN ()))<<(vt1.c0 COLLATE RTRIM))) ISNULL));
SELECT vt1.c1, t0.c0, vt1.c0 FROM t0, vt1;
SELECT DISTINCT vt1.c1 FROM t0, vt1, vt0;
SELECT DISTINCT vt1.c1 FROM t0, vt1, vt0 WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c1 FROM t0, vt1, vt0 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c1 FROM t0, vt1, vt0 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c1 FROM t0, vt1, vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (CAST(((vt0.c1) NOTNULL) AS REAL)) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CAST(((vt0.c1) NOTNULL) AS REAL)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST(((vt0.c1) NOTNULL) AS REAL)) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(GROUP_CONCAT(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(GROUP_CONCAT(t0.c0))) ISNULL);
SELECT MAX(0X41482e99) FROM t0, vt0;
SELECT * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE ((('辟)jcPdQ') ISNULL)) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT ((('辟)jcPdQ') ISNULL)))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((((('辟)jcPdQ') ISNULL)) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt0.c1, t0.c0, vt1.c0 FROM vt0, vt1, t0;
SELECT DISTINCT vt0.c0, vt0.c1, t0.c0, vt1.c0 FROM vt0, vt1, t0 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS BLOB)) UNION SELECT DISTINCT vt0.c0, vt0.c1, t0.c0, vt1.c0 FROM vt0, vt1, t0 WHERE ((NOT (CAST(CAST(vt1.c0 AS BLOB) AS BLOB)))) UNION SELECT DISTINCT vt0.c0, vt0.c1, t0.c0, vt1.c0 FROM vt0, vt1, t0 WHERE (((CAST(CAST(vt1.c0 AS BLOB) AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, t0.c0, vt1.c0 FROM vt0, vt1, t0;
SELECT vt0.c0, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, t0 WHERE (((((((((((vt0.c0)AND('-166700157')))AND(NULL)))AND(vt0.c1)))AND(-1.997497594E9))) IS TRUE)) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0, t0 WHERE ((NOT (((((((((((vt0.c0)AND('-166700157')))AND(NULL)))AND(vt0.c1)))AND(-1.997497594E9))) IS TRUE)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0, t0 WHERE (((((((((((((vt0.c0)AND('-166700157')))AND(NULL)))AND(vt0.c1)))AND(-1.997497594E9))) IS TRUE)) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, vt0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(MAX(AVG(MIN(AVG(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(MAX(AVG(MIN(AVG(t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(MAX(AVG(MIN(AVG(t0.c0)))))) ISNULL);
SELECT MAX(CAST(((vt1.c1) IS TRUE) AS TEXT)) FROM vt0, vt1 NOT INDEXED, t0 ORDER BY NULLIF(DISTINCT CASE vt1.c1  WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN '-1041998645' WHEN vt0.c0 THEN vt1.c0 END, 1674305954) DESC, ((CASE WHEN t0.c0 THEN vt1.c1 WHEN vt0.c1 THEN t0.c0 WHEN vt1.c0 THEN vt0.c0 END) NOT BETWEEN ((- (vt1.c0))) AND ((NOT (vt0.c0)))) ASC  NULLS LAST;
SELECT * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE (((NULL) BETWEEN ((NOT (vt1.c0))) AND (((vt0.c0)IS NOT(vt0.c0))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (((NULL) BETWEEN ((NOT (vt1.c0))) AND (((vt0.c0)IS NOT(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((((NULL) BETWEEN ((NOT (vt1.c0))) AND (((vt0.c0)IS NOT(vt0.c0))))) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN t0 ON (((vt1.c0) IS FALSE) IN ());
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN t0 ON (((vt1.c0) IS FALSE) IN ()) WHERE (CASE CASE t0.c0  WHEN vt1.c0 THEN 0.2065143444490265 ELSE vt1.c0 END  WHEN (- (vt1.c0)) THEN TOTAL_CHANGES() ELSE (x'' IN (t0.c0)) END) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN t0 ON (((vt1.c0) IS FALSE) IN ()) WHERE ((NOT (CASE CASE t0.c0  WHEN vt1.c0 THEN 0.2065143444490265 ELSE vt1.c0 END  WHEN (- (vt1.c0)) THEN TOTAL_CHANGES() ELSE (x'' IN (t0.c0)) END))) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN t0 ON (((vt1.c0) IS FALSE) IN ()) WHERE (((CASE CASE t0.c0  WHEN vt1.c0 THEN 0.2065143444490265 ELSE vt1.c0 END  WHEN (- (vt1.c0)) THEN TOTAL_CHANGES() ELSE (x'' IN (t0.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN t0 ON (((vt1.c0) IS FALSE) IN ());
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) ISNULL)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) ISNULL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) ISNULL)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c1, vt1.c1, vt1.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c1, vt1.c1, vt1.c0, vt0.c0;
SELECT ALL vt0.c1, vt1.c1, vt1.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c1, vt1.c1, vt1.c0, vt0.c0 HAVING MAX(AVG(TOTAL(MAX(MAX(vt1.c1))))) UNION ALL SELECT vt0.c1, vt1.c1, vt1.c0, vt0.c0 FROM vt0, vt1 NOT INDEXED, t0 GROUP BY vt0.c1, vt1.c1, vt1.c0, vt0.c0 HAVING (NOT (MAX(AVG(TOTAL(MAX(MAX(vt1.c1))))))) UNION ALL SELECT vt0.c1, vt1.c1, vt1.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c1, vt1.c1, vt1.c0, vt0.c0 HAVING ((MAX(AVG(TOTAL(MAX(MAX(vt1.c1)))))) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1;
SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((CAST(vt1.c0 AS TEXT))) AND ((vt1.c1 COLLATE RTRIM)))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c1)) BETWEEN ((CAST(vt1.c0 AS TEXT))) AND ((vt1.c1 COLLATE RTRIM)))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((((((vt1.c1)) BETWEEN ((CAST(vt1.c0 AS TEXT))) AND ((vt1.c1 COLLATE RTRIM)))) ISNULL));
SELECT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON (+ (vt0.c0)) COLLATE BINARY;
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON (+ (vt0.c0)) COLLATE BINARY WHERE ((((NOT (vt0.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON (+ (vt0.c0)) COLLATE BINARY WHERE ((NOT ((((NOT (vt0.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON (+ (vt0.c0)) COLLATE BINARY WHERE ((((((NOT (vt0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON (+ (vt0.c0)) COLLATE BINARY;
SELECT ALL vt1.c1, vt0.c0, vt0.c1 FROM vt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON ((NOT (vt1.c1)) IN ()) INNER JOIN t0 ON ((CASE vt1.c1  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)<>(((vt1.c0)==(0.0840286145068655)))) GROUP BY vt1.c1, vt0.c0, vt0.c1;
SELECT vt1.c1, vt0.c0, vt0.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON ((NOT (vt1.c1)) IN ()) INNER JOIN t0 ON ((CASE vt1.c1  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)<>(((vt1.c0)=(0.0840286145068655)))) WHERE (CAST((~ (x'')) AS INTEGER)) GROUP BY vt1.c1, vt0.c0, vt0.c1 UNION SELECT vt1.c1, vt0.c0, vt0.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON ((NOT (vt1.c1)) IN ()) INNER JOIN t0 ON ((CASE vt1.c1  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)!=(((vt1.c0)==(0.0840286145068655)))) WHERE ((NOT (CAST((~ (x'')) AS INTEGER)))) GROUP BY vt1.c1, vt0.c0, vt0.c1 UNION SELECT vt1.c1, vt0.c0, vt0.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON ((NOT (vt1.c1)) IN ()) INNER JOIN t0 ON ((CASE vt1.c1  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)!=(((vt1.c0)==(0.0840286145068655)))) WHERE (((CAST((~ (x'')) AS INTEGER)) ISNULL)) GROUP BY vt1.c1, vt0.c0, vt0.c1;
SELECT ALL vt1.c1, vt0.c0, vt0.c1 FROM vt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON ((NOT (vt1.c1)) IN ()) INNER JOIN t0 ON ((CASE vt1.c1  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)<>(((vt1.c0)==(0.0840286145068655)))) GROUP BY vt1.c1, vt0.c0, vt0.c1;
SELECT vt1.c1, vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 FULL OUTER JOIN t0 ON (+ (((((((((t0.c0)OR('-613418625')))AND(vt1.c0)))AND(t0.c0)))OR(t0.c0)))) GROUP BY vt1.c1, vt0.c1, vt1.c0, vt0.c0;
SELECT ALL vt1.c1, vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 NOT INDEXED FULL OUTER JOIN t0 ON (+ (((((((((t0.c0)OR('-613418625')))AND(vt1.c0)))AND(t0.c0)))OR(t0.c0)))) GROUP BY vt1.c1, vt0.c1, vt1.c0, vt0.c0 HAVING (((~ (COUNT(*)))) IS FALSE) UNION ALL SELECT ALL vt1.c1, vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 FULL OUTER JOIN t0 ON (+ (((((((((t0.c0)OR('-613418625')))AND(vt1.c0)))AND(t0.c0)))OR(t0.c0)))) GROUP BY vt1.c1, vt0.c1, vt1.c0, vt0.c0 HAVING (NOT ((((~ (COUNT(*)))) IS FALSE))) UNION ALL SELECT vt1.c1, vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 FULL OUTER JOIN t0 ON (+ (((((((((t0.c0)OR('-613418625')))AND(vt1.c0)))AND(t0.c0)))OR(t0.c0)))) GROUP BY vt1.c1, vt0.c1, vt1.c0, vt0.c0 HAVING (((((~ (COUNT(*)))) IS FALSE)) ISNULL);
SELECT vt1.c1, vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 FULL OUTER JOIN t0 ON (+ (((((((((t0.c0)OR('-613418625')))AND(vt1.c0)))AND(t0.c0)))OR(t0.c0)))) GROUP BY vt1.c1, vt0.c1, vt1.c0, vt0.c0;
SELECT ALL vt1.c1, vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 NOT INDEXED FULL OUTER JOIN t0 ON (+ (((((((((t0.c0)OR('-613418625')))AND(vt1.c0)))AND(t0.c0)))OR(t0.c0)))) GROUP BY vt1.c1, vt0.c1, vt1.c0, vt0.c0 HAVING (((~ (COUNT(*)))) IS FALSE) UNION ALL SELECT ALL vt1.c1, vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 FULL OUTER JOIN t0 ON (+ (((((((((t0.c0)OR('-613418625')))AND(vt1.c0)))AND(t0.c0)))OR(t0.c0)))) GROUP BY vt1.c1, vt0.c1, vt1.c0, vt0.c0 HAVING (NOT ((((~ (COUNT(*)))) IS FALSE))) UNION ALL SELECT vt1.c1, vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 FULL OUTER JOIN t0 ON (+ (((((((((t0.c0)OR('-613418625')))AND(vt1.c0)))AND(t0.c0)))OR(t0.c0)))) GROUP BY vt1.c1, vt0.c1, vt1.c0, vt0.c0 HAVING (((((~ (COUNT(*)))) IS FALSE)) ISNULL);
SELECT vt1.c1, vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 FULL OUTER JOIN t0 ON (+ (((((((((t0.c0)OR('-613418625')))AND(vt1.c0)))AND(t0.c0)))OR(t0.c0)))) GROUP BY vt1.c1, vt0.c1, vt1.c0, vt0.c0;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())))) UNION ALL SELECT * FROM t0 WHERE ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c0, vt1.c1 FROM vt1, t0;
SELECT DISTINCT t0.c0, vt1.c1 FROM vt1, t0 WHERE (load_extension(vt1.c1, t0.c0) COLLATE BINARY) UNION SELECT DISTINCT t0.c0, vt1.c1 FROM vt1, t0 WHERE ((NOT (load_extension(vt1.c1, t0.c0) COLLATE BINARY))) UNION SELECT DISTINCT t0.c0, vt1.c1 FROM vt1, t0 WHERE (((load_extension(vt1.c1, t0.c0) COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c0, vt1.c1 FROM vt1, t0;
SELECT ALL vt1.c0, t0.c0, vt0.c0, vt0.c1 FROM t0, vt1 FULL OUTER JOIN vt0 ON (((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1)))) NOT BETWEEN (((vt1.c1)LIKE(vt1.c0))) AND (CASE WHEN t0.c0 THEN 0.7560176000924154 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c0 END)) GROUP BY vt1.c0, t0.c0, vt0.c0, vt0.c1;
SELECT ALL vt1.c0, t0.c0, vt0.c0, vt0.c1 FROM t0, vt1 FULL OUTER JOIN vt0 ON (((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1)))) NOT BETWEEN (((vt1.c1)LIKE(vt1.c0))) AND (CASE WHEN t0.c0 THEN 0.7560176000924154 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c0 END)) WHERE ((((((vt1.c1)<(vt1.c0))))>=((vt0.c0 COLLATE NOCASE)))) GROUP BY vt1.c0, t0.c0, vt0.c0, vt0.c1 UNION SELECT vt1.c0, t0.c0, vt0.c0, vt0.c1 FROM t0, vt1 FULL OUTER JOIN vt0 ON (((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1)))) NOT BETWEEN (((vt1.c1)LIKE(vt1.c0))) AND (CASE WHEN t0.c0 THEN 0.7560176000924154 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c0 END)) WHERE ((NOT ((((((vt1.c1)<(vt1.c0))))>=((vt0.c0 COLLATE NOCASE)))))) GROUP BY vt1.c0, t0.c0, vt0.c0, vt0.c1 UNION SELECT ALL vt1.c0, t0.c0, vt0.c0, vt0.c1 FROM t0, vt1 FULL OUTER JOIN vt0 ON (((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1)))) NOT BETWEEN (((vt1.c1)LIKE(vt1.c0))) AND (CASE WHEN t0.c0 THEN 0.7560176000924154 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c0 END)) WHERE ((((((((vt1.c1)<(vt1.c0))))>=((vt0.c0 COLLATE NOCASE)))) ISNULL)) GROUP BY vt1.c0, t0.c0, vt0.c0, vt0.c1;
SELECT ALL vt1.c0, t0.c0, vt0.c0, vt0.c1 FROM t0, vt1 FULL OUTER JOIN vt0 ON (((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1)))) NOT BETWEEN (((vt1.c1)LIKE(vt1.c0))) AND (CASE WHEN t0.c0 THEN 0.7560176000924154 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c0 END)) GROUP BY vt1.c0, t0.c0, vt0.c0, vt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(SUM(vt0.c0))) BETWEEN (-1.28087758E9) AND (TOTAL(vt0.c1))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MIN(SUM(vt0.c0))) BETWEEN (-1.28087758E9) AND (TOTAL(vt0.c1))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MIN(SUM(vt0.c0))) BETWEEN (-1.28087758E9) AND (TOTAL(vt0.c1)))) ISNULL);
SELECT vt1.c1 FROM vt1, t0;
SELECT vt1.c1 FROM vt1, t0 WHERE (-1.473170745E9) UNION ALL SELECT ALL vt1.c1 FROM vt1, t0 WHERE ((NOT (-1.473170745E9))) UNION ALL SELECT vt1.c1 FROM vt1, t0 WHERE (((-1.473170745E9) ISNULL));
SELECT vt1.c1 FROM vt1, t0;
SELECT DISTINCT vt0.c1, t0.c0, vt0.c0, vt1.c0, vt1.c1 FROM t0, vt0, vt1;
SELECT DISTINCT vt0.c1, t0.c0, vt0.c0, vt1.c0, vt1.c1 FROM t0, vt0, vt1 WHERE (((vt0.c1 COLLATE BINARY)AND(vt1.c1 COLLATE BINARY))) UNION SELECT DISTINCT vt0.c1, t0.c0, vt0.c0, vt1.c0, vt1.c1 FROM t0, vt0, vt1 WHERE ((NOT (((vt0.c1 COLLATE BINARY)AND(vt1.c1 COLLATE BINARY))))) UNION SELECT DISTINCT vt0.c1, t0.c0, vt0.c0, vt1.c0, vt1.c1 FROM t0, vt0, vt1 WHERE (((((vt0.c1 COLLATE BINARY)AND(vt1.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt0.c1, t0.c0, vt0.c0, vt1.c0, vt1.c1 FROM t0, vt0, vt1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((DATETIME(vt0.c0, vt0.c1, vt0.c1))>>('1257920243'))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((DATETIME(vt0.c0, vt0.c1, vt0.c1))>>('1257920243'))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((DATETIME(vt0.c0, vt0.c1, vt0.c1))>>('1257920243'))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((SUM(t0.c0))AND(CAST(t0.c0 AS BLOB))))AND(PRINTF(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((SUM(t0.c0))AND(CAST(t0.c0 AS BLOB))))AND(PRINTF(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((SUM(t0.c0))AND(CAST(t0.c0 AS BLOB))))AND(PRINTF(t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((SUM(t0.c0))AND(CAST(t0.c0 AS BLOB))))AND(PRINTF(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((SUM(t0.c0))AND(CAST(t0.c0 AS BLOB))))AND(PRINTF(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((SUM(t0.c0))AND(CAST(t0.c0 AS BLOB))))AND(PRINTF(t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS REAL)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS REAL)))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS REAL)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0, t0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0, t0, vt1 WHERE (((((vt0.c1)=(vt0.c1))) NOT BETWEEN ((- (vt1.c0))) AND (vt0.c1 COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0, vt1 WHERE ((NOT (((((vt0.c1)=(vt0.c1))) NOT BETWEEN ((- (vt1.c0))) AND (vt0.c1 COLLATE NOCASE))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0, vt1 WHERE (((((((vt0.c1)=(vt0.c1))) NOT BETWEEN ((- (vt1.c0))) AND (vt0.c1 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, t0, vt1;
SELECT ALL vt1.c0, vt0.c1, t0.c0, vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c1)AND(vt1.c0)))AND(t0.c0)))OR(vt0.c1)))OR(vt0.c0)))|(((vt0.c1) IS TRUE))) INNER JOIN vt1 ON (((- (vt0.c1)))OR(((NULL)!=(vt1.c0)))) GROUP BY vt1.c0, vt0.c1, t0.c0, vt0.c0;
SELECT vt0.c0, vt0.c1, t0.c0, vt1.c1, vt1.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, vt0.c1, t0.c0, vt1.c1, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, t0.c0, vt1.c1, vt1.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, vt0.c1, t0.c0, vt1.c1, vt1.c0 HAVING SQLITE_COMPILEOPTION_GET(TOTAL(vt1.c0)) UNION ALL SELECT ALL vt0.c0, vt0.c1, t0.c0, vt1.c1, vt1.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, vt0.c1, t0.c0, vt1.c1, vt1.c0 HAVING (NOT (SQLITE_COMPILEOPTION_GET(TOTAL(vt1.c0)))) UNION ALL SELECT ALL vt0.c0, vt0.c1, t0.c0, vt1.c1, vt1.c0 FROM t0, vt0, vt1 NOT INDEXED GROUP BY vt0.c0, vt0.c1, t0.c0, vt1.c1, vt1.c0 HAVING ((SQLITE_COMPILEOPTION_GET(TOTAL(vt1.c0))) ISNULL);
SELECT vt0.c0, vt0.c1, t0.c0, vt1.c1, vt1.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, vt0.c1, t0.c0, vt1.c1, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, t0.c0, vt1.c1, vt1.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, vt0.c1, t0.c0, vt1.c1, vt1.c0 HAVING SQLITE_COMPILEOPTION_GET(TOTAL(vt1.c0)) UNION ALL SELECT ALL vt0.c0, vt0.c1, t0.c0, vt1.c1, vt1.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, vt0.c1, t0.c0, vt1.c1, vt1.c0 HAVING (NOT (SQLITE_COMPILEOPTION_GET(TOTAL(vt1.c0)))) UNION ALL SELECT ALL vt0.c0, vt0.c1, t0.c0, vt1.c1, vt1.c0 FROM t0, vt0, vt1 NOT INDEXED GROUP BY vt0.c0, vt0.c1, t0.c0, vt1.c1, vt1.c0 HAVING ((SQLITE_COMPILEOPTION_GET(TOTAL(vt1.c0))) ISNULL);
SELECT vt0.c0, vt0.c1, t0.c0, vt1.c1, vt1.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, vt0.c1, t0.c0, vt1.c1, vt1.c0;
SELECT ALL * FROM vt1, t0;
SELECT ALL * FROM vt1, t0 WHERE (((CAST(NULL AS BLOB)) BETWEEN (vt1.c0 COLLATE RTRIM) AND (CASE WHEN vt1.c1 THEN vt1.c1 END))) UNION ALL SELECT * FROM vt1, t0 NOT INDEXED WHERE ((NOT (((CAST(NULL AS BLOB)) BETWEEN (vt1.c0 COLLATE RTRIM) AND (CASE WHEN vt1.c1 THEN vt1.c1 END))))) UNION ALL SELECT ALL * FROM vt1, t0 WHERE (((((CAST(NULL AS BLOB)) BETWEEN (vt1.c0 COLLATE RTRIM) AND (CASE WHEN vt1.c1 THEN vt1.c1 END))) ISNULL));
SELECT ALL * FROM vt1, t0;
SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON (((((vt0.c0))==((x'a1ee'))))LIKE((vt0.c1 IN ())));
SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON (((((vt0.c0))==((x'a1ee'))))LIKE((vt0.c1 IN ()))) WHERE ((- (0.4632153415945278))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON (((((vt0.c0))==((x'a1ee'))))LIKE((vt0.c1 IN ()))) WHERE ((NOT ((- (0.4632153415945278))))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON (((((vt0.c0))==((x'a1ee'))))LIKE((vt0.c1 IN ()))) WHERE ((((- (0.4632153415945278))) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON (((((vt0.c0))==((x'a1ee'))))LIKE((vt0.c1 IN ())));
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ('7N嬑') GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ('7N嬑'))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((('7N嬑') ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c1 FROM vt0 INNER JOIN vt1 ON (- (((vt1.c1)<(vt0.c0)))) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 INNER JOIN vt1 ON (- (((vt1.c1)<(vt0.c0)))) GROUP BY vt0.c1 HAVING CAST(vt1.c0 COLLATE BINARY AS INTEGER) UNION ALL SELECT ALL vt0.c1 FROM vt0 INNER JOIN vt1 ON (- (((vt1.c1)<(vt0.c0)))) GROUP BY vt0.c1 HAVING (NOT (CAST(vt1.c0 COLLATE BINARY AS INTEGER))) UNION ALL SELECT ALL vt0.c1 FROM vt0 INNER JOIN vt1 ON (- (((vt1.c1)<(vt0.c0)))) GROUP BY vt0.c1 HAVING ((CAST(vt1.c0 COLLATE BINARY AS INTEGER)) ISNULL);
SELECT vt0.c1 FROM vt0 INNER JOIN vt1 ON (- (((vt1.c1)<(vt0.c0)))) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 INNER JOIN vt1 ON (- (((vt1.c1)<(vt0.c0)))) GROUP BY vt0.c1 HAVING CAST(vt1.c0 COLLATE BINARY AS INTEGER) UNION ALL SELECT ALL vt0.c1 FROM vt0 INNER JOIN vt1 ON (- (((vt1.c1)<(vt0.c0)))) GROUP BY vt0.c1 HAVING (NOT (CAST(vt1.c0 COLLATE BINARY AS INTEGER))) UNION ALL SELECT ALL vt0.c1 FROM vt0 INNER JOIN vt1 ON (- (((vt1.c1)<(vt0.c0)))) GROUP BY vt0.c1 HAVING ((CAST(vt1.c0 COLLATE BINARY AS INTEGER)) ISNULL);
SELECT vt0.c1 FROM vt0 INNER JOIN vt1 ON (- (((vt1.c1)<(vt0.c0)))) GROUP BY vt0.c1;
SELECT vt0.c1, vt1.c0, vt0.c0, t0.c0, vt1.c1 FROM vt1, t0, vt0;
SELECT vt0.c1, vt1.c0, vt0.c0, t0.c0, vt1.c1 FROM vt1, t0, vt0 WHERE (((((vt0.c0)OR(vt1.c1)))IS NOT(vt1.c0))) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0, t0.c0, vt1.c1 FROM vt1, t0, vt0 WHERE ((NOT (((((vt0.c0)OR(vt1.c1)))IS NOT(vt1.c0))))) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0, t0.c0, vt1.c1 FROM vt1, t0, vt0 WHERE (((((((vt0.c0)OR(vt1.c1)))IS NOT(vt1.c0))) ISNULL));
SELECT vt0.c1, vt1.c0, vt0.c0, t0.c0, vt1.c1 FROM vt1, t0, vt0;
SELECT DISTINCT vt1.c1, vt0.c1, vt0.c0 FROM vt1, vt0 INNER JOIN t0 ON vt0.c1;
SELECT DISTINCT vt1.c1, vt0.c1, vt0.c0 FROM vt1, vt0 INNER JOIN t0 ON vt0.c1 WHERE (vt0.c1) UNION SELECT DISTINCT vt1.c1, vt0.c1, vt0.c0 FROM vt1, vt0 INNER JOIN t0 ON vt0.c1 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT vt1.c1, vt0.c1, vt0.c0 FROM vt1, vt0 INNER JOIN t0 ON vt0.c1 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT vt1.c1, vt0.c1, vt0.c0 FROM vt1, vt0 INNER JOIN t0 ON vt0.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((0.3133715188928331)GLOB(t0.c0)), ((t0.c0)||(t0.c0)), (NOT (t0.c0)))) AND ((CAST(t0.c0 AS INTEGER), t0.c0 COLLATE NOCASE, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((0.3133715188928331)GLOB(t0.c0)), ((t0.c0)||(t0.c0)), (NOT (t0.c0)))) AND ((CAST(t0.c0 AS INTEGER), t0.c0 COLLATE NOCASE, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((0.3133715188928331)GLOB(t0.c0)), ((t0.c0)||(t0.c0)), (NOT (t0.c0)))) AND ((CAST(t0.c0 AS INTEGER), t0.c0 COLLATE NOCASE, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0 INNER JOIN t0 ON ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOTNULL) GROUP BY vt0.c0, t0.c0, vt0.c1;
SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM vt0 INNER JOIN t0 ON ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOTNULL) GROUP BY vt0.c0, t0.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM vt0 INNER JOIN t0 ON ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOTNULL) GROUP BY vt0.c0, t0.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0 INNER JOIN t0 ON ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOTNULL) GROUP BY vt0.c0, t0.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0 INNER JOIN t0 ON ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOTNULL) GROUP BY vt0.c0, t0.c0, vt0.c1;
SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM vt0 INNER JOIN t0 ON ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOTNULL) GROUP BY vt0.c0, t0.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM vt0 INNER JOIN t0 ON ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOTNULL) GROUP BY vt0.c0, t0.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0 INNER JOIN t0 ON ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOTNULL) GROUP BY vt0.c0, t0.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0 INNER JOIN t0 ON ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOTNULL) GROUP BY vt0.c0, t0.c0, vt0.c1;
SELECT ALL * FROM vt1, vt0, t0;
SELECT ALL * FROM vt1, vt0, t0 WHERE (CASE vt0.c0  WHEN (vt0.c0 IN ()) THEN NULL END) UNION ALL SELECT * FROM vt1, vt0, t0 WHERE ((NOT (CASE vt0.c0  WHEN (vt0.c0 IN ()) THEN NULL END))) UNION ALL SELECT ALL * FROM vt1, vt0, t0 WHERE (((CASE vt0.c0  WHEN (vt0.c0 IN ()) THEN NULL END) ISNULL));
SELECT ALL * FROM vt1, vt0, t0;
SELECT DISTINCT vt1.c0, vt0.c0, vt1.c1, vt0.c1 FROM vt0, t0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0, vt1.c1, vt0.c1 FROM vt0, t0, vt1 WHERE ((((vt0.c0)-(vt1.c1)) IN ())) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt1.c1, vt0.c1 FROM vt0, t0, vt1 WHERE ((NOT ((((vt0.c0)-(vt1.c1)) IN ())))) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt1.c1, vt0.c1 FROM vt0, t0, vt1 WHERE ((((((vt0.c0)-(vt1.c1)) IN ())) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, vt1.c1, vt0.c1 FROM vt0, t0, vt1;
SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, vt0.c1;
SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM t0, vt0 WHERE ((t0.c0 IN ())) GROUP BY vt0.c0, t0.c0, vt0.c1 UNION SELECT vt0.c0, t0.c0, vt0.c1 FROM t0, vt0 WHERE ((NOT ((t0.c0 IN ())))) GROUP BY vt0.c0, t0.c0, vt0.c1 UNION SELECT vt0.c0, t0.c0, vt0.c1 FROM t0, vt0 WHERE ((((t0.c0 IN ())) ISNULL)) GROUP BY vt0.c0, t0.c0, vt0.c1;
SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt1.c1;
SELECT ALL vt0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt1.c1 HAVING MAX((~ (TOTAL(GROUP_CONCAT(MAX(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt1.c1 HAVING (NOT (MAX((~ (TOTAL(GROUP_CONCAT(MAX(vt0.c0)))))))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt1.c1 HAVING ((MAX((~ (TOTAL(GROUP_CONCAT(MAX(vt0.c0))))))) ISNULL);
SELECT * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c0, 0.5068254352750697, vt0.c1, vt0.c1, vt0.c1))>=((t0.c0, vt0.c1, t0.c0, t0.c0, vt0.c1)))) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR('1265188127'))) AND (CAST(t0.c0 AS REAL)))) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT ((((((t0.c0, 0.5068254352750697, vt0.c1, vt0.c1, vt0.c1))>=((t0.c0, vt0.c1, t0.c0, t0.c0, vt0.c1)))) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR('1265188127'))) AND (CAST(t0.c0 AS REAL)))))) UNION ALL SELECT * FROM vt0, t0 WHERE ((((((((t0.c0, 0.5068254352750697, vt0.c1, vt0.c1, vt0.c1))>=((t0.c0, vt0.c1, t0.c0, t0.c0, vt0.c1)))) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR('1265188127'))) AND (CAST(t0.c0 AS REAL)))) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT vt0.c1 FROM vt0, vt1;
SELECT DISTINCT vt0.c1 FROM vt0, vt1 WHERE (CASE (+ (vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c1 THEN x'' END THEN CASE WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c1 THEN NULL WHEN vt1.c1 THEN vt1.c1 ELSE vt0.c1 END ELSE ((vt0.c0) NOT BETWEEN ('1257920243') AND (vt0.c1)) END) UNION SELECT DISTINCT vt0.c1 FROM vt0, vt1 WHERE ((NOT (CASE (+ (vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c1 THEN x'' END THEN CASE WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c1 THEN NULL WHEN vt1.c1 THEN vt1.c1 ELSE vt0.c1 END ELSE ((vt0.c0) NOT BETWEEN ('1257920243') AND (vt0.c1)) END))) UNION SELECT DISTINCT vt0.c1 FROM vt0, vt1 WHERE (((CASE (+ (vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c1 THEN x'' END THEN CASE WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c1 THEN NULL WHEN vt1.c1 THEN vt1.c1 ELSE vt0.c1 END ELSE ((vt0.c0) NOT BETWEEN ('1257920243') AND (vt0.c1)) END) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0, vt1;
SELECT vt1.c1, vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c1, vt1.c0, t0.c0;
SELECT ALL vt1.c1, vt1.c0, t0.c0 FROM t0, vt1 WHERE (((ABS(DISTINCT vt1.c1)) ISNULL)) GROUP BY vt1.c1, vt1.c0, t0.c0 UNION SELECT vt1.c1, vt1.c0, t0.c0 FROM t0, vt1 WHERE ((NOT (((ABS(DISTINCT vt1.c1)) ISNULL)))) GROUP BY vt1.c1, vt1.c0, t0.c0 UNION SELECT ALL vt1.c1, vt1.c0, t0.c0 FROM t0, vt1 WHERE (((((ABS(DISTINCT vt1.c1)) ISNULL)) ISNULL)) GROUP BY vt1.c1, vt1.c0, t0.c0;
SELECT vt1.c1, vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c1, vt1.c0, t0.c0;
SELECT ALL t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON 0.7829199774451686 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON 0.7829199774451686 GROUP BY t0.c0 HAVING SUM(COALESCE(DISTINCT TOTAL(MAX(vt0.c1)), COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON 0.7829199774451686 GROUP BY t0.c0 HAVING (NOT (SUM(COALESCE(DISTINCT TOTAL(MAX(vt0.c1)), COUNT(*))))) UNION ALL SELECT ALL t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON 0.7829199774451686 GROUP BY t0.c0 HAVING ((SUM(COALESCE(DISTINCT TOTAL(MAX(vt0.c1)), COUNT(*)))) ISNULL);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((1155561989 COLLATE RTRIM))>=((vt0.c1))) LEFT OUTER JOIN t0 ON ((vt1.c0 COLLATE RTRIM)<=(LIKELY(DISTINCT t0.c0)));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((1155561989 COLLATE RTRIM))>=((vt0.c1))) LEFT OUTER JOIN t0 ON ((vt1.c0 COLLATE RTRIM)<=(LIKELY(DISTINCT t0.c0))) WHERE ((+ (NULLIF(DISTINCT vt1.c1, t0.c0)))) UNION ALL SELECT * FROM vt0 CROSS JOIN vt1 ON (((1155561989 COLLATE RTRIM))>=((vt0.c1))) LEFT OUTER JOIN t0 ON ((vt1.c0 COLLATE RTRIM)<=(LIKELY(DISTINCT t0.c0))) WHERE ((NOT ((+ (NULLIF(DISTINCT vt1.c1, t0.c0)))))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((1155561989 COLLATE RTRIM))>=((vt0.c1))) LEFT OUTER JOIN t0 ON ((vt1.c0 COLLATE RTRIM)<=(LIKELY(DISTINCT t0.c0))) WHERE ((((+ (NULLIF(DISTINCT vt1.c1, t0.c0)))) ISNULL));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((1155561989 COLLATE RTRIM))>=((vt0.c1))) LEFT OUTER JOIN t0 ON ((vt1.c0 COLLATE RTRIM)<=(LIKELY(DISTINCT t0.c0)));
SELECT DISTINCT t0.c0, vt0.c0, vt0.c1 FROM vt0, t0;
SELECT DISTINCT t0.c0, vt0.c0, vt0.c1 FROM vt0, t0 WHERE (NULL) UNION SELECT DISTINCT t0.c0, vt0.c0, vt0.c1 FROM vt0, t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT t0.c0, vt0.c0, vt0.c1 FROM vt0, t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0, vt0.c1 FROM vt0, t0;
SELECT vt1.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0, t0 WHERE (((CAST(vt1.c1 AS INTEGER))AND(vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0, t0 WHERE ((NOT (((CAST(vt1.c1 AS INTEGER))AND(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0, t0 WHERE (((((CAST(vt1.c1 AS INTEGER))AND(vt1.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0;
SELECT ALL vt0.c1 FROM vt1, vt0, t0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1, vt0, t0 GROUP BY vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c1 FROM vt1, vt0, t0 GROUP BY vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1 FROM vt1, vt0, t0 GROUP BY vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1 FROM vt1, vt0, t0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1, vt0, t0 GROUP BY vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c1 FROM vt1, vt0, t0 GROUP BY vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1 FROM vt1, vt0, t0 GROUP BY vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1 FROM vt1, vt0, t0 GROUP BY vt0.c1;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((CAST(vt1.c0 AS BLOB), (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))), (- (vt1.c0)))) AND (((vt1.c1 IN ()), CASE vt1.c1  WHEN '0.112267584618989' THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN 0.5795572302310372 THEN vt1.c1 ELSE vt1.c1 END, CAST(vt1.c0 AS NUMERIC))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((CAST(vt1.c0 AS BLOB), (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))), (- (vt1.c0)))) AND (((vt1.c1 IN ()), CASE vt1.c1  WHEN '0.112267584618989' THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN 0.5795572302310372 THEN vt1.c1 ELSE vt1.c1 END, CAST(vt1.c0 AS NUMERIC))))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((CAST(vt1.c0 AS BLOB), (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))), (- (vt1.c0)))) AND (((vt1.c1 IN ()), CASE vt1.c1  WHEN '0.112267584618989' THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN 0.5795572302310372 THEN vt1.c1 ELSE vt1.c1 END, CAST(vt1.c0 AS NUMERIC))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN NULL ELSE vt0.c0 END THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN (((vt0.c0))<>((vt0.c1))) THEN TRIM(vt0.c1) WHEN (((vt0.c1, vt0.c0, vt0.c0))>((vt0.c0, vt0.c1, vt0.c1))) THEN ((vt0.c1) NOT NULL) ELSE ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN CASE WHEN vt0.c1 THEN NULL ELSE vt0.c0 END THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN (((vt0.c0))!=((vt0.c1))) THEN TRIM(vt0.c1) WHEN (((vt0.c1, vt0.c0, vt0.c0))>((vt0.c0, vt0.c1, vt0.c1))) THEN ((vt0.c1) NOT NULL) ELSE ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN CASE WHEN vt0.c1 THEN NULL ELSE vt0.c0 END THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN (((vt0.c0))!=((vt0.c1))) THEN TRIM(vt0.c1) WHEN (((vt0.c1, vt0.c0, vt0.c0))>((vt0.c0, vt0.c1, vt0.c1))) THEN ((vt0.c1) NOT NULL) ELSE ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c1, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 INNER JOIN t0 ON CAST('j|\R''J' AS INTEGER) GROUP BY vt1.c1, vt1.c0, vt0.c0, vt0.c1;
SELECT ALL vt1.c1, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 INNER JOIN t0 ON CAST('j|\R''J' AS INTEGER) WHERE (((LOWER(vt1.c1))*(((vt0.c1)AND(vt1.c0))))) GROUP BY vt1.c1, vt1.c0, vt0.c0, vt0.c1 UNION SELECT ALL vt1.c1, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 INNER JOIN t0 ON CAST('j|\R''J' AS INTEGER) WHERE ((NOT (((LOWER(vt1.c1))*(((vt0.c1)AND(vt1.c0))))))) GROUP BY vt1.c1, vt1.c0, vt0.c0, vt0.c1 UNION SELECT ALL vt1.c1, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 INNER JOIN t0 ON CAST('j|\R''J' AS INTEGER) WHERE (((((LOWER(vt1.c1))*(((vt0.c1)AND(vt1.c0))))) ISNULL)) GROUP BY vt1.c1, vt1.c0, vt0.c0, vt0.c1;
SELECT vt1.c1, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 INNER JOIN t0 ON CAST('j|\R''J' AS INTEGER) GROUP BY vt1.c1, vt1.c0, vt0.c0, vt0.c1;
SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING (- (COUNT(vt1.c1))) UNION ALL SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING (NOT ((- (COUNT(vt1.c1))))) UNION ALL SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING (((- (COUNT(vt1.c1)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING (- (COUNT(vt1.c1))) UNION ALL SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING (NOT ((- (COUNT(vt1.c1))))) UNION ALL SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING (((- (COUNT(vt1.c1)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0 COLLATE BINARY, 1503703261, (+ (NULL)))) AND ((0.034271018361501815, ((vt0.c1)-(vt0.c0)), CAST(vt0.c1 AS BLOB))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0 COLLATE BINARY, 1503703261, (+ (NULL)))) AND ((0.034271018361501815, ((vt0.c1)-(vt0.c0)), CAST(vt0.c1 AS BLOB))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0 COLLATE BINARY, 1503703261, (+ (NULL)))) AND ((0.034271018361501815, ((vt0.c1)-(vt0.c0)), CAST(vt0.c1 AS BLOB))))) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt1 ON (~ (NULL)) RIGHT OUTER JOIN vt0 ON ((vt1.c0)>(vt1.c0)) GROUP BY vt0.c1, t0.c0, vt0.c0;
SELECT vt0.c1, t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt1 ON (~ (NULL)) RIGHT OUTER JOIN vt0 ON ((vt1.c0)>(vt1.c0)) WHERE (1.265188127E9) GROUP BY vt0.c1, t0.c0, vt0.c0 UNION SELECT vt0.c1, t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt1 ON (~ (NULL)) RIGHT OUTER JOIN vt0 ON ((vt1.c0)>(vt1.c0)) WHERE ((NOT (1.265188127E9))) GROUP BY vt0.c1, t0.c0, vt0.c0 UNION SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt1 ON (~ (NULL)) RIGHT OUTER JOIN vt0 ON ((vt1.c0)>(vt1.c0)) WHERE (((1.265188127E9) ISNULL)) GROUP BY vt0.c1, t0.c0, vt0.c0;
SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM t0 FULL OUTER JOIN vt1 ON (~ (NULL)) RIGHT OUTER JOIN vt0 ON ((vt1.c0)>(vt1.c0)) GROUP BY vt0.c1, t0.c0, vt0.c0;
SELECT ALL vt1.c0 FROM vt0 LEFT OUTER JOIN t0 ON NULL RIGHT OUTER JOIN vt1 ON TYPEOF(CASE vt1.c1  WHEN t0.c0 THEN '0.7648912525747855' END) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0 LEFT OUTER JOIN t0 ON NULL RIGHT OUTER JOIN vt1 ON TYPEOF(CASE vt1.c1  WHEN t0.c0 THEN '0.7648912525747855' END) GROUP BY vt1.c0 HAVING ((AVG(t0.c0)) BETWEEN (AVG(x'') COLLATE RTRIM) AND (json_extract(vt0.c1, vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt0 LEFT OUTER JOIN t0 ON NULL RIGHT OUTER JOIN vt1 ON TYPEOF(CASE vt1.c1  WHEN t0.c0 THEN '0.7648912525747855' END) GROUP BY vt1.c0 HAVING (NOT (((AVG(t0.c0)) BETWEEN (AVG(x'') COLLATE RTRIM) AND (json_extract(vt0.c1, vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt0 LEFT OUTER JOIN t0 ON NULL RIGHT OUTER JOIN vt1 ON TYPEOF(CASE vt1.c1  WHEN t0.c0 THEN '0.7648912525747855' END) GROUP BY vt1.c0 HAVING ((((AVG(t0.c0)) BETWEEN (AVG(x'') COLLATE RTRIM) AND (json_extract(vt0.c1, vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt0 LEFT OUTER JOIN t0 ON NULL RIGHT OUTER JOIN vt1 ON TYPEOF(CASE vt1.c1  WHEN t0.c0 THEN '0.7648912525747855' END) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0 LEFT OUTER JOIN t0 ON NULL RIGHT OUTER JOIN vt1 ON TYPEOF(CASE vt1.c1  WHEN t0.c0 THEN '0.7648912525747855' END) GROUP BY vt1.c0 HAVING ((AVG(t0.c0)) BETWEEN (AVG(x'') COLLATE RTRIM) AND (json_extract(vt0.c1, vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt0 LEFT OUTER JOIN t0 ON NULL RIGHT OUTER JOIN vt1 ON TYPEOF(CASE vt1.c1  WHEN t0.c0 THEN '0.7648912525747855' END) GROUP BY vt1.c0 HAVING (NOT (((AVG(t0.c0)) BETWEEN (AVG(x'') COLLATE RTRIM) AND (json_extract(vt0.c1, vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt0 LEFT OUTER JOIN t0 ON NULL RIGHT OUTER JOIN vt1 ON TYPEOF(CASE vt1.c1  WHEN t0.c0 THEN '0.7648912525747855' END) GROUP BY vt1.c0 HAVING ((((AVG(t0.c0)) BETWEEN (AVG(x'') COLLATE RTRIM) AND (json_extract(vt0.c1, vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt0 LEFT OUTER JOIN t0 ON NULL RIGHT OUTER JOIN vt1 ON TYPEOF(CASE vt1.c1  WHEN t0.c0 THEN '0.7648912525747855' END) GROUP BY vt1.c0;
SELECT * FROM t0, vt1, vt0;
SELECT * FROM t0, vt1, vt0 WHERE (json_array_length(((t0.c0) NOT NULL), (NOT (vt0.c0)))) UNION ALL SELECT ALL * FROM t0, vt1, vt0 WHERE ((NOT (json_array_length(((t0.c0) NOT NULL), (NOT (vt0.c0)))))) UNION ALL SELECT * FROM t0, vt1, vt0 WHERE (((json_array_length(((t0.c0) NOT NULL), (NOT (vt0.c0)))) ISNULL));
SELECT * FROM t0, vt1, vt0;
SELECT DISTINCT vt1.c1, t0.c0, vt0.c1, vt0.c0 FROM t0, vt1, vt0;
SELECT DISTINCT vt1.c1, t0.c0, vt0.c1, vt0.c0 FROM t0, vt1, vt0 WHERE (((CAST(vt1.c0 AS BLOB))AND(((vt0.c1)<<(vt0.c1))))) UNION SELECT DISTINCT vt1.c1, t0.c0, vt0.c1, vt0.c0 FROM t0, vt1, vt0 WHERE ((NOT (((CAST(vt1.c0 AS BLOB))AND(((vt0.c1)<<(vt0.c1))))))) UNION SELECT DISTINCT vt1.c1, t0.c0, vt0.c1, vt0.c0 FROM t0, vt1, vt0 WHERE (((((CAST(vt1.c0 AS BLOB))AND(((vt0.c1)<<(vt0.c1))))) ISNULL));
SELECT DISTINCT vt1.c1, t0.c0, vt0.c1, vt0.c0 FROM t0, vt1, vt0;
SELECT ALL vt0.c1, t0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c1, t0.c0;
SELECT vt0.c1, t0.c0 FROM vt1, t0, vt0 WHERE (((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL)) GROUP BY vt0.c1, t0.c0 UNION SELECT vt0.c1, t0.c0 FROM vt1, t0, vt0 WHERE ((NOT (((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL)))) GROUP BY vt0.c1, t0.c0 UNION SELECT vt0.c1, t0.c0 FROM vt1, t0, vt0 WHERE (((((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL)) ISNULL)) GROUP BY vt0.c1, t0.c0;
SELECT ALL vt0.c1, t0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c1, t0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT * FROM vt1, t0, vt0;
SELECT * FROM vt1, t0, vt0 WHERE (vt1.c1) UNION ALL SELECT * FROM vt1, t0, vt0 WHERE ((NOT (vt1.c1))) UNION ALL SELECT * FROM vt1, t0, vt0 WHERE (((vt1.c1) ISNULL));
SELECT * FROM vt1, t0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((+ (vt0.c1)) IN ((vt0.c1 IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((+ (vt0.c1)) IN ((vt0.c1 IN ())))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((+ (vt0.c1)) IN ((vt0.c1 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM t0, vt0 WHERE (((((x'')/('0.9703154288254611'))) NOT NULL)) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM t0, vt0 WHERE ((NOT (((((x'')/('0.9703154288254611'))) NOT NULL)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM t0, vt0 WHERE (((((((x'')/('0.9703154288254611'))) NOT NULL)) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt1.c0, vt0.c0, vt1.c1, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt1.c1, vt0.c1;
SELECT vt1.c0, vt0.c0, vt1.c1, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt1.c1, vt0.c1 HAVING AVG(GROUP_CONCAT(vt1.c1)) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt1.c1, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt1.c1, vt0.c1 HAVING (NOT (AVG(GROUP_CONCAT(vt1.c1)))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt1.c1, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt1.c1, vt0.c1 HAVING ((AVG(GROUP_CONCAT(vt1.c1))) ISNULL);
SELECT MIN((((vt0.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((vt1.c1 COLLATE RTRIM, vt1.c0, ((vt1.c0) NOTNULL))) AND ((((vt1.c1)LIKE(vt0.c1)), CASE vt0.c0  WHEN vt0.c1 THEN x'' ELSE vt0.c1 END, (vt1.c1 IN ()))))) FROM vt0, vt1;
SELECT vt1.c0, t0.c0 FROM vt1, t0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((~ (CASE WHEN t0.c0 THEN vt1.c1 END))) UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT ((~ (CASE WHEN t0.c0 THEN vt1.c1 END))))) UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((((~ (CASE WHEN t0.c0 THEN vt1.c1 END))) ISNULL));
SELECT vt1.c0, t0.c0 FROM vt1, t0;
SELECT DISTINCT t0.c0 FROM vt1, t0;
SELECT DISTINCT t0.c0 FROM vt1, t0 WHERE (((((vt1.c0) ISNULL))+(0.628319625636069))) UNION SELECT DISTINCT t0.c0 FROM vt1, t0 WHERE ((NOT (((((vt1.c0) ISNULL))+(0.628319625636069))))) UNION SELECT DISTINCT t0.c0 FROM vt1, t0 WHERE (((((((vt1.c0) ISNULL))+(0.628319625636069))) ISNULL));
SELECT DISTINCT t0.c0 FROM vt1, t0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 WHERE (vt1.c1) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE ((NOT (vt1.c1))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((vt1.c1) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt1.c0, vt0.c1, vt1.c1 FROM vt1 CROSS JOIN t0 ON (((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))))OR((vt0.c1 IN ()))) FULL OUTER JOIN vt0 ON ((vt0.c1 COLLATE BINARY) IS TRUE) GROUP BY vt1.c0, vt0.c1, vt1.c1;
SELECT vt1.c0, vt0.c1, vt1.c1 FROM vt1 CROSS JOIN t0 ON (((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))))OR((vt0.c1 IN ()))) FULL OUTER JOIN vt0 ON ((vt0.c1 COLLATE BINARY) IS TRUE) GROUP BY vt1.c0, vt0.c1, vt1.c1 HAVING (- (CASE TOTAL(vt1.c0)  WHEN vt0.c1 THEN GROUP_CONCAT(TOTAL(MIN(TOTAL(COUNT(TOTAL(0xffffffffc65120e2)))))) ELSE vt1.c0 END)) UNION ALL SELECT vt1.c0, vt0.c1, vt1.c1 FROM vt1 CROSS JOIN t0 ON (((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))))OR((vt0.c1 IN ()))) FULL OUTER JOIN vt0 ON ((vt0.c1 COLLATE BINARY) IS TRUE) GROUP BY vt1.c0, vt0.c1, vt1.c1 HAVING (NOT ((- (CASE TOTAL(vt1.c0)  WHEN vt0.c1 THEN GROUP_CONCAT(TOTAL(MIN(TOTAL(COUNT(TOTAL(0xffffffffc65120e2)))))) ELSE vt1.c0 END)))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt1.c1 FROM vt1 CROSS JOIN t0 ON (((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))))OR((vt0.c1 IN ()))) FULL OUTER JOIN vt0 ON ((vt0.c1 COLLATE BINARY) IS TRUE) GROUP BY vt1.c0, vt0.c1, vt1.c1 HAVING (((- (CASE TOTAL(vt1.c0)  WHEN vt0.c1 THEN GROUP_CONCAT(TOTAL(MIN(TOTAL(COUNT(TOTAL(0Xffffffffc65120e2)))))) ELSE vt1.c0 END))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (0x11fd190c) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE) ASC;
SELECT * FROM vt1 WHERE ((NOT (0x11fd190c))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE) ASC;
SELECT ALL * FROM vt1 WHERE (((0X11fd190c) ISNULL)) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE) ASC;
SELECT * FROM vt1;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (LIKELY(DISTINCT CAST(vt0.c0 AS TEXT))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (LIKELY(DISTINCT CAST(vt0.c0 AS TEXT))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((LIKELY(DISTINCT CAST(vt0.c0 AS TEXT))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.49190340781012787 THEN 0.1455252340522999 ELSE t0.c0 END) BETWEEN (((((t0.c0)AND(t0.c0)))AND(NULL))) AND (((t0.c0) NOT BETWEEN (x'') AND (NULL))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.49190340781012787 THEN 0.1455252340522999 ELSE t0.c0 END) BETWEEN (((((t0.c0)AND(t0.c0)))AND(NULL))) AND (((t0.c0) NOT BETWEEN (x'') AND (NULL))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.49190340781012787 THEN 0.1455252340522999 ELSE t0.c0 END) BETWEEN (((((t0.c0)AND(t0.c0)))AND(NULL))) AND (((t0.c0) NOT BETWEEN (x'') AND (NULL))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1 HAVING (MIN(SUM(vt1.c0)) IN ()) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((MIN(SUM(vt1.c0)) IN ()))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1 HAVING (((MIN(SUM(vt1.c0)) IN ())) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1 HAVING (MIN(SUM(vt1.c0)) IN ()) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((MIN(SUM(vt1.c0)) IN ()))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1 HAVING (((MIN(SUM(vt1.c0)) IN ())) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1;
SELECT * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c1) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (vt1.c1))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c1) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt1, t0, vt0;
SELECT DISTINCT * FROM vt1, t0, vt0 WHERE (CAST((vt1.c1 IN (vt0.c0)) AS NUMERIC)) UNION SELECT DISTINCT * FROM vt1, t0, vt0 WHERE ((NOT (CAST((vt1.c1 IN (vt0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt1, t0, vt0 WHERE (((CAST((vt1.c1 IN (vt0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt1, t0, vt0;
SELECT ALL t0.c0 FROM vt1, vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, vt0, t0 WHERE (CASE ((t0.c0) BETWEEN (vt0.c1) AND (vt0.c0))  WHEN (((vt1.c1, -4.74973133E8, vt1.c1)) BETWEEN ((NULL, t0.c0, t0.c0)) AND ((vt0.c1, vt0.c0, t0.c0))) THEN CAST(vt0.c1 AS REAL) END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt1, vt0, t0 WHERE ((NOT (CASE ((t0.c0) BETWEEN (vt0.c1) AND (vt0.c0))  WHEN (((vt1.c1, -4.74973133E8, vt1.c1)) BETWEEN ((NULL, t0.c0, t0.c0)) AND ((vt0.c1, vt0.c0, t0.c0))) THEN CAST(vt0.c1 AS REAL) END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt1, vt0, t0 WHERE (((CASE ((t0.c0) BETWEEN (vt0.c1) AND (vt0.c0))  WHEN (((vt1.c1, -4.74973133E8, vt1.c1)) BETWEEN ((NULL, t0.c0, t0.c0)) AND ((vt0.c1, vt0.c0, t0.c0))) THEN CAST(vt0.c1 AS REAL) END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, vt0, t0 GROUP BY t0.c0;
SELECT vt1.c0, vt0.c1 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c1 HAVING (((COALESCE(t0.c0, vt0.c0, vt1.c1, TOTAL(AVG(AVG(vt0.c0))))))!=((t0.c0))) UNION ALL SELECT ALL vt1.c0, vt0.c1 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c1 HAVING (NOT ((((COALESCE(t0.c0, vt0.c0, vt1.c1, TOTAL(AVG(AVG(vt0.c0))))))!=((t0.c0))))) UNION ALL SELECT ALL vt1.c0, vt0.c1 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c1 HAVING (((((COALESCE(t0.c0, vt0.c0, vt1.c1, TOTAL(AVG(AVG(vt0.c0))))))<>((t0.c0)))) ISNULL);
SELECT ALL MIN(((vt0.c0)>>(vt1.c1)) COLLATE NOCASE) FROM t0, vt0, vt1 ORDER BY ((((((((((((0.0840286145068655)AND(CASE 2.30468593E8  WHEN vt0.c1 THEN vt0.c1 END)))AND(0.9775125449005544)))AND(((t0.c0)OR(vt1.c1)))))OR((vt1.c0 IN ()))))AND((((vt0.c1))>((vt0.c0))))))OR(CAST(vt1.c1 AS BLOB)));
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CHAR(CAST(vt0.c1 AS REAL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CHAR(CAST(vt0.c1 AS REAL))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CHAR(CAST(vt0.c1 AS REAL))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM t0 CROSS JOIN vt0 ON CASE WHEN (((t0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((t0.c0, vt0.c0, t0.c0))) THEN CAST(vt0.c0 AS REAL) END;
SELECT DISTINCT vt0.c0 FROM t0 CROSS JOIN vt0 ON CASE WHEN (((t0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((t0.c0, vt0.c0, t0.c0))) THEN CAST(vt0.c0 AS REAL) END WHERE ((((vt0.c1 IN (vt0.c1))) NOTNULL)) UNION SELECT DISTINCT vt0.c0 FROM t0 CROSS JOIN vt0 ON CASE WHEN (((t0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((t0.c0, vt0.c0, t0.c0))) THEN CAST(vt0.c0 AS REAL) END WHERE ((NOT ((((vt0.c1 IN (vt0.c1))) NOTNULL)))) UNION SELECT DISTINCT vt0.c0 FROM t0 CROSS JOIN vt0 ON CASE WHEN (((t0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((t0.c0, vt0.c0, t0.c0))) THEN CAST(vt0.c0 AS REAL) END WHERE ((((((vt0.c1 IN (vt0.c1))) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0 CROSS JOIN vt0 ON CASE WHEN (((t0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((t0.c0, vt0.c0, t0.c0))) THEN CAST(vt0.c0 AS REAL) END;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c1 IN (vt0.c1, vt0.c0)))%((~ (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c1 IN (vt0.c1, vt0.c0)))%((~ (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c1 IN (vt0.c1, vt0.c0)))%((~ (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0, vt0.c0, vt1.c1 FROM t0, vt1, vt0 GROUP BY t0.c0, vt0.c0, vt1.c1;
SELECT t0.c0, vt0.c0, vt1.c1 FROM t0, vt1, vt0 GROUP BY t0.c0, vt0.c0, vt1.c1 HAVING ((MIN(vt1.c1))>>(AVG(TOTAL(TOTAL(vt0.c1))))) UNION ALL SELECT t0.c0, vt0.c0, vt1.c1 FROM t0, vt1, vt0 GROUP BY t0.c0, vt0.c0, vt1.c1 HAVING (NOT (((MIN(vt1.c1))>>(AVG(TOTAL(TOTAL(vt0.c1))))))) UNION ALL SELECT t0.c0, vt0.c0, vt1.c1 FROM t0, vt1, vt0 GROUP BY t0.c0, vt0.c0, vt1.c1 HAVING ((((MIN(vt1.c1))>>(AVG(TOTAL(TOTAL(vt0.c1)))))) ISNULL);
SELECT TOTAL(((MAX(t0.c0, t0.c0)) NOT BETWEEN (((t0.c0)>=(t0.c0))) AND (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) FROM t0;
SELECT ALL * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0, ((vt0.c1) ISNULL), CAST(vt0.c1 AS NUMERIC)))<((CAST(vt0.c1 AS TEXT), ((vt1.c1)%(vt0.c0)), CAST(vt0.c0 AS TEXT))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT ((((vt0.c0, ((vt0.c1) ISNULL), CAST(vt0.c1 AS NUMERIC)))<((CAST(vt0.c1 AS TEXT), ((vt1.c1)%(vt0.c0)), CAST(vt0.c0 AS TEXT))))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0, ((vt0.c1) ISNULL), CAST(vt0.c1 AS NUMERIC)))<((CAST(vt0.c1 AS TEXT), ((vt1.c1)%(vt0.c0)), CAST(vt0.c0 AS TEXT))))) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (-1012578161) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (-1012578161))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((-1012578161) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 WHERE (((vt0.c0) NOTNULL)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, vt0 WHERE ((NOT (((vt0.c0) NOTNULL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, vt0 WHERE (((((vt0.c0) NOTNULL)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c1, vt0.c0;
SELECT t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING AVG(CAST(AVG(t0.c0) AS BLOB)) UNION ALL SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING (NOT (AVG(CAST(AVG(t0.c0) AS BLOB)))) UNION ALL SELECT t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING ((AVG(CAST(AVG(t0.c0) AS BLOB))) ISNULL);
SELECT ALL SUM(((((vt0.c0)=(vt0.c1))) IS FALSE)) FROM t0, vt1 NOT INDEXED, vt0;
SELECT ALL * FROM t0, vt0 INNER JOIN vt1 ON '0.7237596748202754';
SELECT * FROM t0, vt0 INNER JOIN vt1 ON '0.7237596748202754' WHERE (((((vt0.c0)LIKE(vt0.c1)))%((t0.c0 IN (vt1.c1, vt0.c1))))) UNION ALL SELECT ALL * FROM t0, vt0 INNER JOIN vt1 ON '0.7237596748202754' WHERE ((NOT (((((vt0.c0)LIKE(vt0.c1)))%((t0.c0 IN (vt1.c1, vt0.c1))))))) UNION ALL SELECT ALL * FROM t0, vt0 INNER JOIN vt1 ON '0.7237596748202754' WHERE (((((((vt0.c0)LIKE(vt0.c1)))%((t0.c0 IN (vt1.c1, vt0.c1))))) ISNULL));
SELECT ALL * FROM t0, vt0 INNER JOIN vt1 ON '0.7237596748202754';
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((((((ABS(t0.c0))OR((t0.c0 IN (t0.c0)))))OR((+ (t0.c0)))))AND(load_extension(t0.c0))))AND(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((((((ABS(t0.c0))OR((t0.c0 IN (t0.c0)))))OR((+ (t0.c0)))))AND(load_extension(t0.c0))))AND(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((((((ABS(t0.c0))OR((t0.c0 IN (t0.c0)))))OR((+ (t0.c0)))))AND(load_extension(t0.c0))))AND(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c1) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c1))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c1) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE WHEN SUM(vt1.c0) THEN COUNT(vt1.c1) ELSE 0x414bd077 COLLATE NOCASE END UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE WHEN SUM(vt1.c0) THEN COUNT(vt1.c1) ELSE 0X414bd077 COLLATE NOCASE END)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE WHEN SUM(vt1.c0) THEN COUNT(vt1.c1) ELSE 0X414bd077 COLLATE NOCASE END) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE WHEN SUM(vt1.c0) THEN COUNT(vt1.c1) ELSE 0x414bd077 COLLATE NOCASE END UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE WHEN SUM(vt1.c0) THEN COUNT(vt1.c1) ELSE 0X414bd077 COLLATE NOCASE END)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE WHEN SUM(vt1.c0) THEN COUNT(vt1.c1) ELSE 0X414bd077 COLLATE NOCASE END) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1, t0, vt0;
SELECT ALL * FROM vt1, t0, vt0 WHERE ((~ (NULL))) UNION ALL SELECT ALL * FROM vt1, t0, vt0 NOT INDEXED WHERE ((NOT ((~ (NULL))))) UNION ALL SELECT * FROM vt1, t0, vt0 WHERE ((((~ (NULL))) ISNULL));
SELECT ALL * FROM vt1, t0, vt0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE ((((- (t0.c0)))==((('') NOT BETWEEN (vt0.c0) AND (vt0.c1))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT ((((- (t0.c0)))==((('') NOT BETWEEN (vt0.c0) AND (vt0.c1))))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((((((- (t0.c0)))==((('') NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END THEN CAST(vt0.c0 AS BLOB) ELSE (vt0.c0 IN ()) END) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END THEN CAST(vt0.c0 AS BLOB) ELSE (vt0.c0 IN ()) END))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END THEN CAST(vt0.c0 AS BLOB) ELSE (vt0.c0 IN ()) END) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(GROUP_CONCAT(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(GROUP_CONCAT(vt1.c0))) ISNULL);
SELECT SUM((((((vt0.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))=(vt1.c0))) FROM vt1 NOT INDEXED, vt0;
SELECT ALL * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE ((~ (((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT ((~ (((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))))))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((((~ (((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))))) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))+((NOT (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))+((NOT (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))+((NOT (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE (((((((t0.c0)AND(t0.c0)))OR(t0.c0))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((((vt0.c1, vt0.c0, vt0.c1))>=((t0.c0, vt0.c0, t0.c0)))))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT (((((((t0.c0)AND(t0.c0)))OR(t0.c0))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((((vt0.c1, vt0.c0, vt0.c1))>=((t0.c0, vt0.c0, t0.c0)))))))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE (((((((((t0.c0)AND(t0.c0)))OR(t0.c0))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((((vt0.c1, vt0.c0, vt0.c1))>=((t0.c0, vt0.c0, t0.c0)))))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c1, vt1.c0, t0.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))OR(t0.c0)))AND(vt0.c0))) BETWEEN (CAST(vt1.c1 AS BLOB)) AND ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c1))))) RIGHT OUTER JOIN vt0 ON ((((vt0.c1)AND(vt1.c1)))OR(vt1.c0)) COLLATE RTRIM GROUP BY vt0.c1, vt1.c0, t0.c0;
SELECT * FROM vt1, vt0 NATURAL JOIN t0;
SELECT * FROM vt1, vt0 NATURAL JOIN t0 WHERE (vt1.c0) UNION ALL SELECT * FROM vt1, vt0 NATURAL JOIN t0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM vt1, vt0 NATURAL JOIN t0 WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt1, vt0 NATURAL JOIN t0;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ('1144418885') UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT ('1144418885'))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((('1144418885') ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT vt1.c0, vt0.c0, vt0.c1, vt1.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c1 IN (vt0.c1, vt1.c1))) NOT NULL) GROUP BY vt1.c0, vt0.c0, vt0.c1, vt1.c1;
SELECT vt1.c0, vt0.c0, vt0.c1, vt1.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c1 IN (vt0.c1, vt1.c1))) NOT NULL) WHERE ((~ (((vt1.c1)<(vt0.c0))))) GROUP BY vt1.c0, vt0.c0, vt0.c1, vt1.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt0.c1, vt1.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c1 IN (vt0.c1, vt1.c1))) NOT NULL) WHERE ((NOT ((~ (((vt1.c1)<(vt0.c0))))))) GROUP BY vt1.c0, vt0.c0, vt0.c1, vt1.c1 UNION SELECT vt1.c0, vt0.c0, vt0.c1, vt1.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c1 IN (vt0.c1, vt1.c1))) NOT NULL) WHERE ((((~ (((vt1.c1)<(vt0.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt0.c1, vt1.c1;
SELECT vt1.c0, vt0.c0, vt0.c1, vt1.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c1 IN (vt0.c1, vt1.c1))) NOT NULL) GROUP BY vt1.c0, vt0.c0, vt0.c1, vt1.c1;
SELECT vt1.c0 FROM vt0, vt1, t0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1, t0 GROUP BY vt1.c0 HAVING ((((MIN(vt0.c0))OR(((((((((vt1.c0)AND(vt0.c0)))OR(COUNT(*))))AND(vt1.c1)))AND(AVG(vt1.c1))))))AND(SUM(AVG(MIN(COUNT(vt0.c0)))))) UNION ALL SELECT vt1.c0 FROM vt0, vt1, t0 GROUP BY vt1.c0 HAVING (NOT (((((MIN(vt0.c0))OR(((((((((vt1.c0)AND(vt0.c0)))OR(COUNT(*))))AND(vt1.c1)))AND(AVG(vt1.c1))))))AND(SUM(AVG(MIN(COUNT(vt0.c0)))))))) UNION ALL SELECT vt1.c0 FROM vt0, vt1, t0 GROUP BY vt1.c0 HAVING ((((((MIN(vt0.c0))OR(((((((((vt1.c0)AND(vt0.c0)))OR(COUNT(*))))AND(vt1.c1)))AND(AVG(vt1.c1))))))AND(SUM(AVG(MIN(COUNT(vt0.c0))))))) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((((vt1.c1)-(vt1.c1)) IN ())) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT ((((vt1.c1)-(vt1.c1)) IN ())))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((((((vt1.c1)-(vt1.c1)) IN ())) ISNULL));
SELECT ALL vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c1 FROM t0 INNER JOIN vt0 ON ((CASE WHEN vt1.c0 THEN vt0.c1 END) NOT NULL) RIGHT OUTER JOIN vt1 ON (- (((vt0.c1) IS FALSE)));
SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE (((((t0.c0) BETWEEN (vt1.c0) AND (x''))) NOT BETWEEN (((vt1.c1) BETWEEN (t0.c0) AND (t0.c0))) AND (((vt1.c1) NOT BETWEEN (vt1.c0) AND ('-2109772463'))))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT (((((t0.c0) BETWEEN (vt1.c0) AND (x''))) NOT BETWEEN (((vt1.c1) BETWEEN (t0.c0) AND (t0.c0))) AND (((vt1.c1) NOT BETWEEN (vt1.c0) AND ('-2109772463'))))))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE (((((((t0.c0) BETWEEN (vt1.c0) AND (x''))) NOT BETWEEN (((vt1.c1) BETWEEN (t0.c0) AND (t0.c0))) AND (((vt1.c1) NOT BETWEEN (vt1.c0) AND ('-2109772463'))))) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0, t0.c0, vt0.c1 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt1.c0, t0.c0, vt0.c1;
SELECT vt0.c0, vt1.c0, t0.c0, vt0.c1 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt1.c0, t0.c0, vt0.c1 HAVING CASE WHEN (((vt1.c1))<((vt1.c0))) THEN (~ (vt0.c0)) WHEN (((COUNT(t0.c0)))==((GROUP_CONCAT(vt0.c1)))) THEN x'' WHEN AVG(vt0.c0) THEN AVG(MIN('-1884690626')) ELSE TOTAL(COUNT(*)) END UNION ALL SELECT ALL vt0.c0, vt1.c0, t0.c0, vt0.c1 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt1.c0, t0.c0, vt0.c1 HAVING (NOT (CASE WHEN (((vt1.c1))<((vt1.c0))) THEN (~ (vt0.c0)) WHEN (((COUNT(t0.c0)))=((GROUP_CONCAT(vt0.c1)))) THEN x'' WHEN AVG(vt0.c0) THEN AVG(MIN('-1884690626')) ELSE TOTAL(COUNT(*)) END)) UNION ALL SELECT ALL vt0.c0, vt1.c0, t0.c0, vt0.c1 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt1.c0, t0.c0, vt0.c1 HAVING ((CASE WHEN (((vt1.c1))<((vt1.c0))) THEN (~ (vt0.c0)) WHEN (((COUNT(t0.c0)))=((GROUP_CONCAT(vt0.c1)))) THEN x'' WHEN AVG(vt0.c0) THEN AVG(MIN('-1884690626')) ELSE TOTAL(COUNT(*)) END) ISNULL);
SELECT * FROM vt1 CROSS JOIN t0 ON json_array_length(t0.c0);
SELECT * FROM vt1 CROSS JOIN t0 ON json_array_length(t0.c0) WHERE (CAST(((vt1.c1)OR(vt1.c0)) AS NUMERIC)) UNION ALL SELECT ALL * FROM vt1 CROSS JOIN t0 ON json_array_length(t0.c0) WHERE ((NOT (CAST(((vt1.c1)OR(vt1.c0)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt1 CROSS JOIN t0 ON json_array_length(t0.c0) WHERE (((CAST(((vt1.c1)OR(vt1.c0)) AS NUMERIC)) ISNULL));
SELECT * FROM vt1 CROSS JOIN t0 ON json_array_length(t0.c0);
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE ((vt1.c1 IN ())) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT ((vt1.c1 IN ())))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((((vt1.c1 IN ())) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT vt0.c1, t0.c0 FROM vt0 CROSS JOIN t0 ON ((vt0.c1 COLLATE NOCASE) NOT BETWEEN (CASE WHEN t0.c0 THEN x'' END) AND (vt0.c0 COLLATE BINARY)) GROUP BY vt0.c1, t0.c0;
SELECT ALL vt0.c1, t0.c0 FROM vt0 CROSS JOIN t0 ON ((vt0.c1 COLLATE NOCASE) NOT BETWEEN (CASE WHEN t0.c0 THEN x'' END) AND (vt0.c0 COLLATE BINARY)) WHERE (vt0.c1) GROUP BY vt0.c1, t0.c0 UNION SELECT vt0.c1, t0.c0 FROM vt0 CROSS JOIN t0 ON ((vt0.c1 COLLATE NOCASE) NOT BETWEEN (CASE WHEN t0.c0 THEN x'' END) AND (vt0.c0 COLLATE BINARY)) WHERE ((NOT (vt0.c1))) GROUP BY vt0.c1, t0.c0 UNION SELECT vt0.c1, t0.c0 FROM vt0 CROSS JOIN t0 ON ((vt0.c1 COLLATE NOCASE) NOT BETWEEN (CASE WHEN t0.c0 THEN x'' END) AND (vt0.c0 COLLATE BINARY)) WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c1, t0.c0;
SELECT vt0.c1, t0.c0 FROM vt0 CROSS JOIN t0 ON ((vt0.c1 COLLATE NOCASE) NOT BETWEEN (CASE WHEN t0.c0 THEN x'' END) AND (vt0.c0 COLLATE BINARY)) GROUP BY vt0.c1, t0.c0;
SELECT ALL vt0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0 HAVING GROUP_CONCAT(((vt0.c0)IS(GROUP_CONCAT(AVG(AVG(vt0.c1)))))) UNION ALL SELECT vt0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(((vt0.c0)IS(GROUP_CONCAT(AVG(AVG(vt0.c1)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(((vt0.c0)IS(GROUP_CONCAT(AVG(AVG(vt0.c1))))))) ISNULL);
SELECT ALL MAX(vt1.c1) FROM vt1;
SELECT vt0.c1 FROM vt1, vt0;
SELECT vt0.c1 FROM vt1, vt0 WHERE ((~ ((vt1.c1 IN ())))) UNION ALL SELECT vt0.c1 FROM vt1, vt0 WHERE ((NOT ((~ ((vt1.c1 IN ())))))) UNION ALL SELECT ALL vt0.c1 FROM vt1, vt0 WHERE ((((~ ((vt1.c1 IN ())))) ISNULL));
SELECT vt0.c1 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, t0.c0, vt0.c1 FROM t0, vt0;
SELECT DISTINCT vt0.c0, t0.c0, vt0.c1 FROM t0, vt0 WHERE (((((vt0.c0) NOT BETWEEN ('') AND (t0.c0))) ISNULL)) UNION SELECT DISTINCT vt0.c0, t0.c0, vt0.c1 FROM t0, vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN ('') AND (t0.c0))) ISNULL)))) UNION SELECT DISTINCT vt0.c0, t0.c0, vt0.c1 FROM t0, vt0 WHERE (((((((vt0.c0) NOT BETWEEN ('') AND (t0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0, vt0.c1 FROM t0, vt0;
SELECT vt1.c0, vt0.c1, vt0.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt1.c1;
SELECT vt1.c0, vt0.c1, vt0.c0, vt1.c1 FROM vt0, vt1 WHERE (x'175d') GROUP BY vt1.c0, vt0.c1, vt0.c0, vt1.c1 UNION SELECT vt1.c0, vt0.c1, vt0.c0, vt1.c1 FROM vt0, vt1 NOT INDEXED WHERE ((NOT (x'175d'))) GROUP BY vt1.c0, vt0.c1, vt0.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt1.c1 FROM vt0, vt1 WHERE (((x'175d') ISNULL)) GROUP BY vt1.c0, vt0.c1, vt0.c0, vt1.c1;
SELECT vt1.c0, vt0.c1, vt0.c0, vt1.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt1.c1;
SELECT ALL t0.c0, vt1.c1, vt1.c0, vt0.c1 FROM vt0, t0, vt1 GROUP BY t0.c0, vt1.c1, vt1.c0, vt0.c1;
SELECT t0.c0, vt1.c1, vt1.c0, vt0.c1 FROM vt0, t0, vt1 GROUP BY t0.c0, vt1.c1, vt1.c0, vt0.c1 HAVING GROUP_CONCAT(GROUP_CONCAT(vt1.c1) COLLATE BINARY) UNION ALL SELECT ALL t0.c0, vt1.c1, vt1.c0, vt0.c1 FROM vt0, t0, vt1 GROUP BY t0.c0, vt1.c1, vt1.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(vt1.c1) COLLATE BINARY))) UNION ALL SELECT t0.c0, vt1.c1, vt1.c0, vt0.c1 FROM vt0, t0, vt1 GROUP BY t0.c0, vt1.c1, vt1.c0, vt0.c1 HAVING ((GROUP_CONCAT(GROUP_CONCAT(vt1.c1) COLLATE BINARY)) ISNULL);
SELECT ALL vt1.c0, vt0.c0, vt0.c1, vt1.c1 FROM vt0 INNER JOIN vt1 ON vt0.c1;
SELECT ALL vt1.c0, vt0.c0, vt0.c1, vt1.c1 FROM vt0 INNER JOIN vt1 ON vt0.c1 WHERE ((- (SQLITE_SOURCE_ID()))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1, vt1.c1 FROM vt0 INNER JOIN vt1 ON vt0.c1 WHERE ((NOT ((- (SQLITE_SOURCE_ID()))))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1, vt1.c1 FROM vt0 INNER JOIN vt1 ON vt0.c1 WHERE ((((- (SQLITE_SOURCE_ID()))) ISNULL));
SELECT ALL vt1.c0, vt0.c0, vt0.c1, vt1.c1 FROM vt0 INNER JOIN vt1 ON vt0.c1;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER)) ISNULL)) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((CAST(vt0.c1 AS INTEGER)) ISNULL)))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((CAST(vt0.c1 AS INTEGER)) ISNULL)) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((('(f\n') NOT BETWEEN (ABS(DISTINCT t0.c0)) AND (((t0.c0)%(t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((('(f\n') NOT BETWEEN (ABS(DISTINCT t0.c0)) AND (((t0.c0)%(t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((('(f\n') NOT BETWEEN (ABS(DISTINCT t0.c0)) AND (((t0.c0)%(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CASE WHEN GROUP_CONCAT(COUNT(*)) THEN ((MAX(COUNT(*))) BETWEEN (COUNT(t0.c0)) AND (t0.c0)) WHEN AVG(t0.c0) THEN (AVG(MAX(TOTAL(t0.c0))) IN (t0.c0, TOTAL(AVG(MIN(GROUP_CONCAT(COUNT(*))))))) WHEN COUNT(*) COLLATE BINARY THEN COUNT(t0.c0) END UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CASE WHEN GROUP_CONCAT(COUNT(*)) THEN ((MAX(COUNT(*))) BETWEEN (COUNT(t0.c0)) AND (t0.c0)) WHEN AVG(t0.c0) THEN (AVG(MAX(TOTAL(t0.c0))) IN (t0.c0, TOTAL(AVG(MIN(GROUP_CONCAT(COUNT(*))))))) WHEN COUNT(*) COLLATE BINARY THEN COUNT(t0.c0) END)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE WHEN GROUP_CONCAT(COUNT(*)) THEN ((MAX(COUNT(*))) BETWEEN (COUNT(t0.c0)) AND (t0.c0)) WHEN AVG(t0.c0) THEN (AVG(MAX(TOTAL(t0.c0))) IN (t0.c0, TOTAL(AVG(MIN(GROUP_CONCAT(COUNT(*))))))) WHEN COUNT(*) COLLATE BINARY THEN COUNT(t0.c0) END) ISNULL);
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((((CASE vt0.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)AND(CAST(0.943915734319061 AS INTEGER))))OR((- (vt0.c1))))) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (((((CASE vt0.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)AND(CAST(0.943915734319061 AS INTEGER))))OR((- (vt0.c1))))))) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((((((CASE vt0.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)AND(CAST(0.943915734319061 AS INTEGER))))OR((- (vt0.c1))))) ISNULL));
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1, vt0;
SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE (((((((vt1.c1)>(vt1.c0)))AND(((vt1.c1) NOTNULL))))OR(vt0.c1 COLLATE BINARY))) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE ((NOT (((((((vt1.c1)>(vt1.c0)))AND(((vt1.c1) NOTNULL))))OR(vt0.c1 COLLATE BINARY))))) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE (((((((((vt1.c1)>(vt1.c0)))AND(((vt1.c1) NOTNULL))))OR(vt0.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1, vt0;
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t0 WHERE (((((((vt1.c0)>(vt1.c0)))OR(vt1.c0 COLLATE RTRIM)))AND((- (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, t0 WHERE ((NOT (((((((vt1.c0)>(vt1.c0)))OR(vt1.c0 COLLATE RTRIM)))AND((- (vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, t0 WHERE (((((((((vt1.c0)>(vt1.c0)))OR(vt1.c0 COLLATE RTRIM)))AND((- (vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING GROUP_CONCAT(((((((((TOTAL(COUNT(*)))OR(COUNT(*))))AND(COUNT(*))))OR(vt1.c0)))OR(vt1.c0))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (GROUP_CONCAT(((((((((TOTAL(COUNT(*)))OR(COUNT(*))))AND(COUNT(*))))OR(vt1.c0)))OR(vt1.c0))))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((GROUP_CONCAT(((((((((TOTAL(COUNT(*)))OR(COUNT(*))))AND(COUNT(*))))OR(vt1.c0)))OR(vt1.c0)))) ISNULL);
SELECT vt1.c0, vt1.c1 FROM t0 FULL OUTER JOIN vt1 ON CASE WHEN t0.c0 COLLATE RTRIM THEN (vt1.c1 IN ()) WHEN ((vt1.c1)+('261001222')) THEN (- (vt1.c0)) WHEN vt1.c0 COLLATE RTRIM THEN t0.c0 COLLATE RTRIM END;
SELECT vt1.c0, vt1.c1 FROM t0 FULL OUTER JOIN vt1 ON CASE WHEN t0.c0 COLLATE RTRIM THEN (vt1.c1 IN ()) WHEN ((vt1.c1)+('261001222')) THEN (- (vt1.c0)) WHEN vt1.c0 COLLATE RTRIM THEN t0.c0 COLLATE RTRIM END WHERE (((t0.c0 COLLATE RTRIM) NOT BETWEEN (((t0.c0)+(vt1.c0))) AND (TIME(vt1.c1, vt1.c0, vt1.c0)))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM t0 FULL OUTER JOIN vt1 ON CASE WHEN t0.c0 COLLATE RTRIM THEN (vt1.c1 IN ()) WHEN ((vt1.c1)+('261001222')) THEN (- (vt1.c0)) WHEN vt1.c0 COLLATE RTRIM THEN t0.c0 COLLATE RTRIM END WHERE ((NOT (((t0.c0 COLLATE RTRIM) NOT BETWEEN (((t0.c0)+(vt1.c0))) AND (TIME(vt1.c1, vt1.c0, vt1.c0)))))) UNION ALL SELECT vt1.c0, vt1.c1 FROM t0 FULL OUTER JOIN vt1 ON CASE WHEN t0.c0 COLLATE RTRIM THEN (vt1.c1 IN ()) WHEN ((vt1.c1)+('261001222')) THEN (- (vt1.c0)) WHEN vt1.c0 COLLATE RTRIM THEN t0.c0 COLLATE RTRIM END WHERE (((((t0.c0 COLLATE RTRIM) NOT BETWEEN (((t0.c0)+(vt1.c0))) AND (TIME(vt1.c1, vt1.c0, vt1.c0)))) ISNULL));
SELECT vt1.c0, vt1.c1 FROM t0 FULL OUTER JOIN vt1 ON CASE WHEN t0.c0 COLLATE RTRIM THEN (vt1.c1 IN ()) WHEN ((vt1.c1)+('261001222')) THEN (- (vt1.c0)) WHEN vt1.c0 COLLATE RTRIM THEN t0.c0 COLLATE RTRIM END;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((('677910598')=(x''))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT ((('677910598')=(x''))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((('677910598')==(x''))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((t0.c0 IN ()) IN ()) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((t0.c0 IN ()) IN ()) WHERE (((((((((MIN(vt0.c1, t0.c0, vt0.c0, vt0.c0, t0.c0, t0.c0))AND(((((((((vt0.c0)OR(t0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(t0.c0)))))AND(((t0.c0)IS NOT(vt0.c0)))))AND((((vt0.c0, t0.c0, vt0.c1))>=((vt0.c0, vt0.c0, t0.c0))))))OR(vt0.c1))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((t0.c0 IN ()) IN ()) WHERE ((NOT (((((((((MIN(vt0.c1, t0.c0, vt0.c0, vt0.c0, t0.c0, t0.c0))AND(((((((((vt0.c0)OR(t0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(t0.c0)))))AND(((t0.c0)IS NOT(vt0.c0)))))AND((((vt0.c0, t0.c0, vt0.c1))>=((vt0.c0, vt0.c0, t0.c0))))))OR(vt0.c1))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((t0.c0 IN ()) IN ()) WHERE (((((((((((MIN(vt0.c1, t0.c0, vt0.c0, vt0.c0, t0.c0, t0.c0))AND(((((((((vt0.c0)OR(t0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(t0.c0)))))AND(((t0.c0)IS NOT(vt0.c0)))))AND((((vt0.c0, t0.c0, vt0.c1))>=((vt0.c0, vt0.c0, t0.c0))))))OR(vt0.c1))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((t0.c0 IN ()) IN ()) GROUP BY t0.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING CAST(((vt1.c0)<>(vt1.c0)) AS NUMERIC) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (CAST(((vt1.c0)<>(vt1.c0)) AS NUMERIC))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((CAST(((vt1.c0)<>(vt1.c0)) AS NUMERIC)) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING CAST(((vt1.c0)<>(vt1.c0)) AS NUMERIC) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (CAST(((vt1.c0)<>(vt1.c0)) AS NUMERIC))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((CAST(((vt1.c0)<>(vt1.c0)) AS NUMERIC)) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c0, vt1.c1, t0.c0 FROM t0, vt1;
SELECT vt1.c0, vt1.c1, t0.c0 FROM t0, vt1 WHERE (CASE (- (vt1.c0))  WHEN load_extension(vt1.c0, vt1.c0) THEN (- (vt1.c0)) WHEN t0.c0 THEN (NOT (vt1.c0)) WHEN ((vt1.c1)!=(vt1.c1)) THEN '0.9136133762974492' END) UNION ALL SELECT ALL vt1.c0, vt1.c1, t0.c0 FROM t0, vt1 WHERE ((NOT (CASE (- (vt1.c0))  WHEN load_extension(vt1.c0, vt1.c0) THEN (- (vt1.c0)) WHEN t0.c0 THEN (NOT (vt1.c0)) WHEN ((vt1.c1)<>(vt1.c1)) THEN '0.9136133762974492' END))) UNION ALL SELECT ALL vt1.c0, vt1.c1, t0.c0 FROM t0, vt1 WHERE (((CASE (- (vt1.c0))  WHEN load_extension(vt1.c0, vt1.c0) THEN (- (vt1.c0)) WHEN t0.c0 THEN (NOT (vt1.c0)) WHEN ((vt1.c1)!=(vt1.c1)) THEN '0.9136133762974492' END) ISNULL));
SELECT ALL vt1.c0, vt1.c1, t0.c0 FROM t0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0, t0;
SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0, t0 WHERE (((((((((vt1.c1 COLLATE NOCASE)OR(((((((((vt0.c1)OR(vt0.c0)))OR(x'')))AND(vt0.c1)))AND(x'')))))AND((~ (t0.c0)))))AND((vt1.c1 IN (vt0.c1)))))AND((((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c1, vt1.c1)))))) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0, t0 WHERE ((NOT (((((((((vt1.c1 COLLATE NOCASE)OR(((((((((vt0.c1)OR(vt0.c0)))OR(x'')))AND(vt0.c1)))AND(x'')))))AND((~ (t0.c0)))))AND((vt1.c1 IN (vt0.c1)))))AND((((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c1, vt1.c1)))))))) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0, t0 WHERE (((((((((((vt1.c1 COLLATE NOCASE)OR(((((((((vt0.c1)OR(vt0.c0)))OR(x'')))AND(vt0.c1)))AND(x'')))))AND((~ (t0.c0)))))AND((vt1.c1 IN (vt0.c1)))))AND((((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c1, vt1.c1)))))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0, t0;
SELECT ALL vt1.c1, vt0.c0, vt0.c1, vt1.c0, t0.c0 FROM vt0 CROSS JOIN vt1 ON CAST(0.8125404381828208 AS REAL) RIGHT OUTER JOIN t0 ON MIN(vt1.c1, CASE t0.c0  WHEN vt0.c0 THEN vt0.c1 END, CAST(t0.c0 AS REAL), ((vt0.c0)LIKE(vt1.c1)), (+ (0.034271018361501815)), (~ (vt0.c0))) GROUP BY vt1.c1, vt0.c0, vt0.c1, vt1.c0, t0.c0;
SELECT ALL vt1.c1, vt0.c0, vt0.c1, vt1.c0, t0.c0 FROM vt0 CROSS JOIN vt1 ON CAST(0.8125404381828208 AS REAL) RIGHT OUTER JOIN t0 ON MIN(vt1.c1, CASE t0.c0  WHEN vt0.c0 THEN vt0.c1 END, CAST(t0.c0 AS REAL), ((vt0.c0)LIKE(vt1.c1)), (+ (0.034271018361501815)), (~ (vt0.c0))) WHERE (((0.3422751237252698) NOT NULL)) GROUP BY vt1.c1, vt0.c0, vt0.c1, vt1.c0, t0.c0 UNION SELECT vt1.c1, vt0.c0, vt0.c1, vt1.c0, t0.c0 FROM vt0 CROSS JOIN vt1 ON CAST(0.8125404381828208 AS REAL) RIGHT OUTER JOIN t0 ON MIN(vt1.c1, CASE t0.c0  WHEN vt0.c0 THEN vt0.c1 END, CAST(t0.c0 AS REAL), ((vt0.c0)LIKE(vt1.c1)), (+ (0.034271018361501815)), (~ (vt0.c0))) WHERE ((NOT (((0.3422751237252698) NOT NULL)))) GROUP BY vt1.c1, vt0.c0, vt0.c1, vt1.c0, t0.c0 UNION SELECT ALL vt1.c1, vt0.c0, vt0.c1, vt1.c0, t0.c0 FROM vt0 CROSS JOIN vt1 ON CAST(0.8125404381828208 AS REAL) RIGHT OUTER JOIN t0 ON MIN(vt1.c1, CASE t0.c0  WHEN vt0.c0 THEN vt0.c1 END, CAST(t0.c0 AS REAL), ((vt0.c0)LIKE(vt1.c1)), (+ (0.034271018361501815)), (~ (vt0.c0))) WHERE (((((0.3422751237252698) NOT NULL)) ISNULL)) GROUP BY vt1.c1, vt0.c0, vt0.c1, vt1.c0, t0.c0;
SELECT ALL vt1.c1, vt0.c0, vt0.c1, vt1.c0, t0.c0 FROM vt0 CROSS JOIN vt1 ON CAST(0.8125404381828208 AS REAL) RIGHT OUTER JOIN t0 ON MIN(vt1.c1, CASE t0.c0  WHEN vt0.c0 THEN vt0.c1 END, CAST(t0.c0 AS REAL), ((vt0.c0)LIKE(vt1.c1)), (+ (0.034271018361501815)), (~ (vt0.c0))) GROUP BY vt1.c1, vt0.c0, vt0.c1, vt1.c0, t0.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt1.c1;
SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt1.c1 HAVING MIN(AVG(vt1.c1)) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt1.c1 HAVING (NOT (MIN(AVG(vt1.c1)))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt1.c1 HAVING ((MIN(AVG(vt1.c1))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((CAST(vt1.c1 AS REAL)) IS TRUE)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((CAST(vt1.c1 AS REAL)) IS TRUE)))) UNION ALL SELECT * FROM vt1 WHERE (((((CAST(vt1.c1 AS REAL)) IS TRUE)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c1, vt0.c0, vt1.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c1) BETWEEN (vt1.c1) AND (vt0.c0)))IS(load_extension(vt1.c1, '-151675043')));
SELECT ALL vt1.c1, vt0.c1, vt0.c0, t0.c0 FROM vt1, t0, vt0 GROUP BY vt1.c1, vt0.c1, vt0.c0, t0.c0;
SELECT vt1.c1, vt0.c1, vt0.c0, t0.c0 FROM vt1, t0, vt0 WHERE (LENGTH(CASE vt1.c0  WHEN t0.c0 THEN vt1.c1 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 END)) GROUP BY vt1.c1, vt0.c1, vt0.c0, t0.c0 UNION SELECT ALL vt1.c1, vt0.c1, vt0.c0, t0.c0 FROM vt1, t0, vt0 WHERE ((NOT (LENGTH(CASE vt1.c0  WHEN t0.c0 THEN vt1.c1 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 END)))) GROUP BY vt1.c1, vt0.c1, vt0.c0, t0.c0 UNION SELECT ALL vt1.c1, vt0.c1, vt0.c0, t0.c0 FROM vt1, t0, vt0 WHERE (((LENGTH(CASE vt1.c0  WHEN t0.c0 THEN vt1.c1 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 END)) ISNULL)) GROUP BY vt1.c1, vt0.c1, vt0.c0, t0.c0;
SELECT ALL vt1.c1, vt0.c1, vt0.c0, t0.c0 FROM vt1, t0, vt0 GROUP BY vt1.c1, vt0.c1, vt0.c0, t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(COUNT(TOTAL(SUM(vt0.c1)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(COUNT(TOTAL(SUM(vt0.c1)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING ((AVG(COUNT(TOTAL(SUM(vt0.c1))))) ISNULL);
SELECT t0.c0, vt1.c1, vt1.c0 FROM t0, vt1;
SELECT ALL t0.c0, vt1.c1, vt1.c0 FROM t0, vt1 WHERE ((((((vt1.c1, vt1.c1, vt1.c1))<((vt1.c1, vt1.c0, t0.c0)))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END) AND ('J*1'))) UNION ALL SELECT ALL t0.c0, vt1.c1, vt1.c0 FROM t0, vt1 WHERE ((NOT ((((((vt1.c1, vt1.c1, vt1.c1))<((vt1.c1, vt1.c0, t0.c0)))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END) AND ('J*1'))))) UNION ALL SELECT t0.c0, vt1.c1, vt1.c0 FROM t0, vt1 WHERE ((((((((vt1.c1, vt1.c1, vt1.c1))<((vt1.c1, vt1.c0, t0.c0)))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END) AND ('J*1'))) ISNULL));
SELECT t0.c0, vt1.c1, vt1.c0 FROM t0, vt1;
SELECT DISTINCT * FROM t0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM t0 NATURAL JOIN vt0 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((CAST(vt0.c1 AS NUMERIC))))) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN vt0 WHERE ((NOT ((((vt0.c1)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((CAST(vt0.c1 AS NUMERIC))))))) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN vt0 WHERE ((((((vt0.c1)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((CAST(vt0.c1 AS NUMERIC))))) ISNULL));
SELECT DISTINCT * FROM t0 NATURAL JOIN vt0;
SELECT ALL vt0.c1, t0.c0 FROM t0, vt0 NOT INDEXED GROUP BY vt0.c1, t0.c0;
SELECT vt0.c1, t0.c0 FROM t0, vt0 WHERE ((+ (((vt0.c0)LIKE(NULL))))) GROUP BY vt0.c1, t0.c0 UNION SELECT vt0.c1, t0.c0 FROM t0, vt0 WHERE ((NOT ((+ (((vt0.c0)LIKE(NULL))))))) GROUP BY vt0.c1, t0.c0 UNION SELECT ALL vt0.c1, t0.c0 FROM t0, vt0 WHERE ((((+ (((vt0.c0)LIKE(NULL))))) ISNULL)) GROUP BY vt0.c1, t0.c0;
SELECT ALL vt0.c1, t0.c0 FROM t0, vt0 NOT INDEXED GROUP BY vt0.c1, t0.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c1;
SELECT ALL vt0.c0, vt0.c1, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c1 HAVING SUM(MIN(AVG(AVG(MAX(SUM(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c1 HAVING (NOT (SUM(MIN(AVG(AVG(MAX(SUM(vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c1 HAVING ((SUM(MIN(AVG(AVG(MAX(SUM(vt0.c0))))))) ISNULL);
SELECT * FROM t0, vt1, vt0;
SELECT ALL * FROM t0, vt1, vt0 WHERE (TRIM((((vt0.c0))>((vt1.c0))))) UNION ALL SELECT ALL * FROM t0, vt1, vt0 WHERE ((NOT (TRIM((((vt0.c0))>((vt1.c0))))))) UNION ALL SELECT ALL * FROM t0, vt1, vt0 WHERE (((TRIM((((vt0.c0))>((vt1.c0))))) ISNULL));
SELECT * FROM t0, vt1, vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (t0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((NOT (t0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((NOT (t0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((~ (t0.c0)))&((((t0.c0, t0.c0, 0.5225939604903039)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((~ (t0.c0)))&((((t0.c0, t0.c0, 0.5225939604903039)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((~ (t0.c0)))&((((t0.c0, t0.c0, 0.5225939604903039)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c1 FROM t0, vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM t0, vt1 GROUP BY vt1.c1 HAVING (((((((GROUP_CONCAT(vt1.c0), AVG(vt1.c0), vt1.c1)) BETWEEN ((t0.c0, vt1.c1, SUM(vt1.c1))) AND ((vt1.c1, vt1.c0, vt1.c0))))OR(GROUP_CONCAT(t0.c0))))OR(AVG(t0.c0))) UNION ALL SELECT ALL vt1.c1 FROM t0, vt1 GROUP BY vt1.c1 HAVING (NOT ((((((((GROUP_CONCAT(vt1.c0), AVG(vt1.c0), vt1.c1)) BETWEEN ((t0.c0, vt1.c1, SUM(vt1.c1))) AND ((vt1.c1, vt1.c0, vt1.c0))))OR(GROUP_CONCAT(t0.c0))))OR(AVG(t0.c0))))) UNION ALL SELECT vt1.c1 FROM t0, vt1 GROUP BY vt1.c1 HAVING (((((((((GROUP_CONCAT(vt1.c0), AVG(vt1.c0), vt1.c1)) BETWEEN ((t0.c0, vt1.c1, SUM(vt1.c1))) AND ((vt1.c1, vt1.c0, vt1.c0))))OR(GROUP_CONCAT(t0.c0))))OR(AVG(t0.c0)))) ISNULL);
SELECT vt1.c1 FROM t0, vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM t0, vt1 GROUP BY vt1.c1 HAVING (((((((GROUP_CONCAT(vt1.c0), AVG(vt1.c0), vt1.c1)) BETWEEN ((t0.c0, vt1.c1, SUM(vt1.c1))) AND ((vt1.c1, vt1.c0, vt1.c0))))OR(GROUP_CONCAT(t0.c0))))OR(AVG(t0.c0))) UNION ALL SELECT ALL vt1.c1 FROM t0, vt1 GROUP BY vt1.c1 HAVING (NOT ((((((((GROUP_CONCAT(vt1.c0), AVG(vt1.c0), vt1.c1)) BETWEEN ((t0.c0, vt1.c1, SUM(vt1.c1))) AND ((vt1.c1, vt1.c0, vt1.c0))))OR(GROUP_CONCAT(t0.c0))))OR(AVG(t0.c0))))) UNION ALL SELECT vt1.c1 FROM t0, vt1 GROUP BY vt1.c1 HAVING (((((((((GROUP_CONCAT(vt1.c0), AVG(vt1.c0), vt1.c1)) BETWEEN ((t0.c0, vt1.c1, SUM(vt1.c1))) AND ((vt1.c1, vt1.c0, vt1.c0))))OR(GROUP_CONCAT(t0.c0))))OR(AVG(t0.c0)))) ISNULL);
SELECT vt1.c1 FROM t0, vt1 GROUP BY vt1.c1;
SELECT SUM((((+ (t0.c0))) IS FALSE)) FROM vt0, t0, vt1;
SELECT ALL * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (((((t0.c0) IS TRUE)) BETWEEN ((NOT (vt0.c0))) AND (((((t0.c0)AND(vt0.c0)))OR(vt0.c0))))) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT (((((t0.c0) IS TRUE)) BETWEEN ((NOT (vt0.c0))) AND (((((t0.c0)AND(vt0.c0)))OR(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c0) IS TRUE)) BETWEEN ((NOT (vt0.c0))) AND (((((t0.c0)AND(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT t0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON ((((((((CASE WHEN 0.7405524667435887 THEN vt0.c0 ELSE vt0.c1 END)OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'' END)))OR(vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR((vt0.c1 IN ())));
SELECT DISTINCT t0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON ((((((((CASE WHEN 0.7405524667435887 THEN vt0.c0 ELSE vt0.c1 END)OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'' END)))OR(vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR((vt0.c1 IN ()))) WHERE (((CAST(0.6821201917979872 AS REAL))>>((NOT (vt0.c0))))) UNION SELECT DISTINCT t0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON ((((((((CASE WHEN 0.7405524667435887 THEN vt0.c0 ELSE vt0.c1 END)OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'' END)))OR(vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR((vt0.c1 IN ()))) WHERE ((NOT (((CAST(0.6821201917979872 AS REAL))>>((NOT (vt0.c0))))))) UNION SELECT DISTINCT t0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON ((((((((CASE WHEN 0.7405524667435887 THEN vt0.c0 ELSE vt0.c1 END)OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'' END)))OR(vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR((vt0.c1 IN ()))) WHERE (((((CAST(0.6821201917979872 AS REAL))>>((NOT (vt0.c0))))) ISNULL));
SELECT DISTINCT t0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN t0 ON ((((((((CASE WHEN 0.7405524667435887 THEN vt0.c0 ELSE vt0.c1 END)OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'' END)))OR(vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR((vt0.c1 IN ())));
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0 IN (t0.c0)))==((- (t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0 IN (t0.c0)))=((- (t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0 IN (t0.c0)))=((- (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt1.c1, vt0.c1, t0.c0, vt0.c0, vt1.c0 FROM vt0, t0, vt1 GROUP BY vt1.c1, vt0.c1, t0.c0, vt0.c0, vt1.c0;
SELECT vt1.c1, vt0.c1, t0.c0, vt0.c0, vt1.c0 FROM vt0, t0, vt1 GROUP BY vt1.c1, vt0.c1, t0.c0, vt0.c0, vt1.c0 HAVING (+ (vt1.c0)) COLLATE NOCASE UNION ALL SELECT vt1.c1, vt0.c1, t0.c0, vt0.c0, vt1.c0 FROM vt0, t0, vt1 GROUP BY vt1.c1, vt0.c1, t0.c0, vt0.c0, vt1.c0 HAVING (NOT ((+ (vt1.c0)) COLLATE NOCASE)) UNION ALL SELECT ALL vt1.c1, vt0.c1, t0.c0, vt0.c0, vt1.c0 FROM vt0, t0, vt1 GROUP BY vt1.c1, vt0.c1, t0.c0, vt0.c0, vt1.c0 HAVING (((+ (vt1.c0)) COLLATE NOCASE) ISNULL);
SELECT ALL vt1.c1, vt0.c1, t0.c0, vt0.c0, vt1.c0 FROM vt0, t0, vt1 GROUP BY vt1.c1, vt0.c1, t0.c0, vt0.c0, vt1.c0;
SELECT vt1.c1, vt0.c1, t0.c0, vt0.c0, vt1.c0 FROM vt0, t0, vt1 GROUP BY vt1.c1, vt0.c1, t0.c0, vt0.c0, vt1.c0 HAVING (+ (vt1.c0)) COLLATE NOCASE UNION ALL SELECT vt1.c1, vt0.c1, t0.c0, vt0.c0, vt1.c0 FROM vt0, t0, vt1 GROUP BY vt1.c1, vt0.c1, t0.c0, vt0.c0, vt1.c0 HAVING (NOT ((+ (vt1.c0)) COLLATE NOCASE)) UNION ALL SELECT ALL vt1.c1, vt0.c1, t0.c0, vt0.c0, vt1.c0 FROM vt0, t0, vt1 GROUP BY vt1.c1, vt0.c1, t0.c0, vt0.c0, vt1.c0 HAVING (((+ (vt1.c0)) COLLATE NOCASE) ISNULL);
SELECT ALL vt1.c1, vt0.c1, t0.c0, vt0.c0, vt1.c0 FROM vt0, t0, vt1 GROUP BY vt1.c1, vt0.c1, t0.c0, vt0.c0, vt1.c0;
SELECT * FROM vt0, t0 INNER JOIN vt1 ON vt0.c0;
SELECT * FROM vt0, t0 INNER JOIN vt1 ON vt0.c0 WHERE (((((vt1.c0)AND(t0.c0))) NOT BETWEEN (((vt0.c0)<>(vt1.c1))) AND (((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0))))) UNION ALL SELECT * FROM vt0, t0 INNER JOIN vt1 ON vt0.c0 WHERE ((NOT (((((vt1.c0)AND(t0.c0))) NOT BETWEEN (((vt0.c0)!=(vt1.c1))) AND (((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0, t0 INNER JOIN vt1 ON vt0.c0 WHERE (((((((vt1.c0)AND(t0.c0))) NOT BETWEEN (((vt0.c0)<>(vt1.c1))) AND (((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0))))) ISNULL));
SELECT * FROM vt0, t0 INNER JOIN vt1 ON vt0.c0;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE (((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)))+(vt1.c1 COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)))+(vt1.c1 COLLATE RTRIM))))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE (((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)))+(vt1.c1 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED WHERE ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), (NOT (vt1.c0)), vt1.c0 COLLATE NOCASE))!=(((((vt1.c1, vt1.c0, vt1.c0))>((vt1.c0, vt1.c1, vt1.c1))), CASE vt1.c1  WHEN vt1.c0 THEN x'' WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END, ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), (NOT (vt1.c0)), vt1.c0 COLLATE NOCASE))!=(((((vt1.c1, vt1.c0, vt1.c0))>((vt1.c0, vt1.c1, vt1.c1))), CASE vt1.c1  WHEN vt1.c0 THEN x'' WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END, ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), (NOT (vt1.c0)), vt1.c0 COLLATE NOCASE))!=(((((vt1.c1, vt1.c0, vt1.c0))>((vt1.c0, vt1.c1, vt1.c1))), CASE vt1.c1  WHEN vt1.c0 THEN x'' WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END, ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING GROUP_CONCAT(((((vt1.c1)OR(MAX(vt1.c1))))AND(vt1.c0))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (GROUP_CONCAT(((((vt1.c1)OR(MAX(vt1.c1))))AND(vt1.c0))))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((GROUP_CONCAT(((((vt1.c1)OR(MAX(vt1.c1))))AND(vt1.c0)))) ISNULL);
SELECT vt1.c1, vt1.c0, t0.c0 FROM t0, vt1;
SELECT ALL vt1.c1, vt1.c0, t0.c0 FROM t0, vt1 WHERE (((((vt1.c1) IS TRUE))<=(json_type('t7<*i鍵Kn')))) UNION ALL SELECT ALL vt1.c1, vt1.c0, t0.c0 FROM t0, vt1 WHERE ((NOT (((((vt1.c1) IS TRUE))<=(json_type('t7<*i鍵Kn')))))) UNION ALL SELECT vt1.c1, vt1.c0, t0.c0 FROM t0, vt1 WHERE (((((((vt1.c1) IS TRUE))<=(json_type('t7<*i鍵Kn')))) ISNULL));
SELECT DISTINCT * FROM t0, vt0, vt1;
SELECT DISTINCT * FROM t0, vt0, vt1 WHERE (NULL COLLATE BINARY) UNION SELECT DISTINCT * FROM t0, vt0, vt1 WHERE ((NOT (NULL COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0, vt0, vt1 NOT INDEXED WHERE (((NULL COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t0, vt0, vt1;
SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0 WHERE (CAST((vt0.c0 IN (t0.c0)) AS REAL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t0 WHERE ((NOT (CAST((vt0.c0 IN (t0.c0)) AS REAL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t0 WHERE (((CAST((vt0.c0 IN (t0.c0)) AS REAL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT(COUNT(COUNT(*))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(COUNT(COUNT(*))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(COUNT(COUNT(*)))) ISNULL);
SELECT MAX((((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))<=((vt1.c1)))) FROM vt1;
SELECT ALL vt1.c1, vt1.c0 FROM vt1;
SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((((vt1.c1))==((((vt1.c1)>=(vt1.c1)))))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c1))==((((vt1.c1)>=(vt1.c1)))))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((((((vt1.c1))=((((vt1.c1)>=(vt1.c1)))))) ISNULL));
SELECT ALL vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0, vt1 CROSS JOIN t0 ON CASE WHEN ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c1)) THEN vt1.c0 END;
SELECT DISTINCT vt0.c0 FROM vt0, vt1 CROSS JOIN t0 ON CASE WHEN ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c1)) THEN vt1.c0 END WHERE (CAST(((vt1.c0)+(t0.c0)) AS NUMERIC)) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 CROSS JOIN t0 ON CASE WHEN ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c1)) THEN vt1.c0 END WHERE ((NOT (CAST(((vt1.c0)+(t0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 CROSS JOIN t0 ON CASE WHEN ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c1)) THEN vt1.c0 END WHERE (((CAST(((vt1.c0)+(t0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, vt1 CROSS JOIN t0 ON CASE WHEN ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c1)) THEN vt1.c0 END;
SELECT ALL vt1.c1, vt0.c1, vt1.c0 FROM vt0, t0, vt1 GROUP BY vt1.c1, vt0.c1, vt1.c0;
SELECT vt1.c1, vt0.c1, vt1.c0 FROM vt0, t0, vt1 WHERE (((UNLIKELY(vt1.c0))<>(CAST(t0.c0 AS INTEGER)))) GROUP BY vt1.c1, vt0.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt0.c1, vt1.c0 FROM vt0, t0, vt1 WHERE ((NOT (((UNLIKELY(vt1.c0))<>(CAST(t0.c0 AS INTEGER)))))) GROUP BY vt1.c1, vt0.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt0.c1, vt1.c0 FROM vt0, t0, vt1 WHERE (((((UNLIKELY(vt1.c0))<>(CAST(t0.c0 AS INTEGER)))) ISNULL)) GROUP BY vt1.c1, vt0.c1, vt1.c0;
SELECT ALL vt1.c1, vt0.c1, vt1.c0 FROM vt0, t0, vt1 GROUP BY vt1.c1, vt0.c1, vt1.c0;
SELECT vt1.c1, t0.c0 FROM t0, vt1 GROUP BY vt1.c1, t0.c0;
SELECT vt1.c1, t0.c0 FROM t0, vt1 GROUP BY vt1.c1, t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c1, t0.c0 FROM t0, vt1 GROUP BY vt1.c1, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c1, t0.c0 FROM t0, vt1 GROUP BY vt1.c1, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c1, t0.c0 FROM t0, vt1 GROUP BY vt1.c1, t0.c0;
SELECT vt1.c1, t0.c0 FROM t0, vt1 GROUP BY vt1.c1, t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c1, t0.c0 FROM t0, vt1 GROUP BY vt1.c1, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c1, t0.c0 FROM t0, vt1 GROUP BY vt1.c1, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c1, t0.c0 FROM t0, vt1 GROUP BY vt1.c1, t0.c0;
SELECT ALL t0.c0, vt1.c0, vt0.c0, vt0.c1, vt1.c1 FROM t0, vt0, vt1;
SELECT t0.c0, vt1.c0, vt0.c0, vt0.c1, vt1.c1 FROM t0, vt0, vt1 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN t0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END) IS FALSE)) UNION ALL SELECT t0.c0, vt1.c0, vt0.c0, vt0.c1, vt1.c1 FROM t0, vt0, vt1 WHERE ((NOT (((CASE vt0.c1  WHEN vt0.c1 THEN t0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END) IS FALSE)))) UNION ALL SELECT t0.c0, vt1.c0, vt0.c0, vt0.c1, vt1.c1 FROM t0, vt0, vt1 WHERE (((((CASE vt0.c1  WHEN vt0.c1 THEN t0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END) IS FALSE)) ISNULL));
SELECT ALL t0.c0, vt1.c0, vt0.c0, vt0.c1, vt1.c1 FROM t0, vt0, vt1;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((((((((('휂!')>(vt0.c1)))OR(((vt0.c0) NOTNULL))))OR(((vt0.c0)==(vt0.c1)))))AND(JULIANDAY(vt0.c0, vt0.c1, vt0.c0))))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT ((((((((((('휂!')>(vt0.c1)))OR(((vt0.c0) NOTNULL))))OR(((vt0.c0)=(vt0.c1)))))AND(JULIANDAY(vt0.c0, vt0.c1, vt0.c0))))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((((((((((('휂!')>(vt0.c1)))OR(((vt0.c0) NOTNULL))))OR(((vt0.c0)=(vt0.c1)))))AND(JULIANDAY(vt0.c0, vt0.c1, vt0.c0))))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL vt1.c1 FROM vt1, t0 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, t0 WHERE (((t0.c0 IN (x'a413', vt1.c1)) IN ())) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1, t0 WHERE ((NOT (((t0.c0 IN (x'a413', vt1.c1)) IN ())))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1, t0 WHERE (((((t0.c0 IN (x'a413', vt1.c1)) IN ())) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, t0 GROUP BY vt1.c1;
SELECT ALL t0.c0, vt1.c1 FROM t0, vt1 GROUP BY t0.c0, vt1.c1;
SELECT ALL t0.c0, vt1.c1 FROM t0, vt1 GROUP BY t0.c0, vt1.c1 HAVING GROUP_CONCAT(AVG(GROUP_CONCAT(SUM(vt1.c0)))) UNION ALL SELECT ALL t0.c0, vt1.c1 FROM t0, vt1 GROUP BY t0.c0, vt1.c1 HAVING (NOT (GROUP_CONCAT(AVG(GROUP_CONCAT(SUM(vt1.c0)))))) UNION ALL SELECT ALL t0.c0, vt1.c1 FROM t0, vt1 GROUP BY t0.c0, vt1.c1 HAVING ((GROUP_CONCAT(AVG(GROUP_CONCAT(SUM(vt1.c0))))) ISNULL);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1) BETWEEN (t0.c0) AND (vt0.c1)))<(((vt0.c1)||(t0.c0))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1) BETWEEN (t0.c0) AND (vt0.c1)))<(((vt0.c1)||(t0.c0)))) WHERE (((x'' IN ()) IN (((t0.c0) NOTNULL)))) UNION ALL SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1) BETWEEN (t0.c0) AND (vt0.c1)))<(((vt0.c1)||(t0.c0)))) WHERE ((NOT (((x'' IN ()) IN (((t0.c0) NOTNULL)))))) UNION ALL SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1) BETWEEN (t0.c0) AND (vt0.c1)))<(((vt0.c1)||(t0.c0)))) WHERE (((((x'' IN ()) IN (((t0.c0) NOTNULL)))) ISNULL));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1) BETWEEN (t0.c0) AND (vt0.c1)))<(((vt0.c1)||(t0.c0))));
SELECT DISTINCT vt1.c1, vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c1, vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (vt0.c0) UNION SELECT DISTINCT vt1.c1, vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt1.c1, vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt1.c1, vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT ALL vt0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt1, t0 NOT INDEXED, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt1.c1;
SELECT vt0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt1, t0, vt0 WHERE ((+ (((vt0.c1) BETWEEN (vt1.c1) AND (t0.c0))))) GROUP BY vt0.c0, vt1.c0, vt0.c1, vt1.c1 UNION SELECT vt0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt1, t0, vt0 WHERE ((NOT ((+ (((vt0.c1) BETWEEN (vt1.c1) AND (t0.c0))))))) GROUP BY vt0.c0, vt1.c0, vt0.c1, vt1.c1 UNION SELECT vt0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt1, t0, vt0 WHERE ((((+ (((vt0.c1) BETWEEN (vt1.c1) AND (t0.c0))))) ISNULL)) GROUP BY vt0.c0, vt1.c0, vt0.c1, vt1.c1;
SELECT ALL vt0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt1, t0 NOT INDEXED, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING NULL UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (NULL)) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((NULL) ISNULL);
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING NULL UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (NULL)) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((NULL) ISNULL);
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT SUM(CASE WHEN ((vt1.c0)+(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) ELSE CAST(vt1.c1 AS TEXT) END) FROM vt1;
SELECT vt1.c1, t0.c0, vt0.c0 FROM t0, vt0, vt1;
SELECT vt1.c1, t0.c0, vt0.c0 FROM t0, vt0, vt1 WHERE (((t0.c0)+(x'')) COLLATE RTRIM) UNION ALL SELECT ALL vt1.c1, t0.c0, vt0.c0 FROM t0, vt0, vt1 WHERE ((NOT (((t0.c0)+(x'')) COLLATE RTRIM))) UNION ALL SELECT vt1.c1, t0.c0, vt0.c0 FROM t0, vt0, vt1 WHERE (((((t0.c0)+(x'')) COLLATE RTRIM) ISNULL));
SELECT vt1.c1, t0.c0, vt0.c0 FROM t0, vt0, vt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((~ (((t0.c0)IS(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((~ (((t0.c0)IS(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((~ (((t0.c0)IS(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c1 FROM vt0, t0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, t0 WHERE (JULIANDAY(CAST(vt0.c1 AS REAL), 0x5b96b741, CASE WHEN NULL THEN t0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 END, t0.c0, (vt0.c1 IN ()))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0, t0 WHERE ((NOT (JULIANDAY(CAST(vt0.c1 AS REAL), 0x5b96b741, CASE WHEN NULL THEN t0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 END, t0.c0, (vt0.c1 IN ()))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, t0 WHERE (((JULIANDAY(CAST(vt0.c1 AS REAL), 0x5b96b741, CASE WHEN NULL THEN t0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 END, t0.c0, (vt0.c1 IN ()))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, t0 GROUP BY vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING CASE SUM(vt0.c1)  WHEN ((AVG(COUNT(vt0.c1)))%(AVG(MIN(vt0.c1)))) THEN MAX(vt0.c0) ELSE ((AVG(vt0.c0))%(vt0.c1)) END UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (CASE SUM(vt0.c1)  WHEN ((AVG(COUNT(vt0.c1)))%(AVG(MIN(vt0.c1)))) THEN MAX(vt0.c0) ELSE ((AVG(vt0.c0))%(vt0.c1)) END)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((CASE SUM(vt0.c1)  WHEN ((AVG(COUNT(vt0.c1)))%(AVG(MIN(vt0.c1)))) THEN MAX(vt0.c0) ELSE ((AVG(vt0.c0))%(vt0.c1)) END) ISNULL);
SELECT ALL vt0.c1, vt1.c0, vt1.c1 FROM t0, vt0, vt1;
SELECT ALL vt0.c1, vt1.c0, vt1.c1 FROM t0, vt0, vt1 WHERE (CASE WHEN ((vt0.c1)AND(vt0.c1)) THEN CASE WHEN vt1.c1 THEN vt0.c0 END WHEN ((t0.c0) IS FALSE) THEN ((((((((t0.c0)AND(vt1.c1)))AND(t0.c0)))OR(vt0.c1)))OR(vt1.c1)) WHEN (((x'', vt1.c0, vt0.c1, vt0.c1, t0.c0))<>((vt1.c1, vt1.c1, vt0.c0, -1.7976931348623157E308, vt1.c0))) THEN ((vt0.c1) IS TRUE) END) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt1.c1 FROM t0, vt0, vt1 WHERE ((NOT (CASE WHEN ((vt0.c1)AND(vt0.c1)) THEN CASE WHEN vt1.c1 THEN vt0.c0 END WHEN ((t0.c0) IS FALSE) THEN ((((((((t0.c0)AND(vt1.c1)))AND(t0.c0)))OR(vt0.c1)))OR(vt1.c1)) WHEN (((x'', vt1.c0, vt0.c1, vt0.c1, t0.c0))<>((vt1.c1, vt1.c1, vt0.c0, -1.7976931348623157E308, vt1.c0))) THEN ((vt0.c1) IS TRUE) END))) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt1.c1 FROM t0, vt0, vt1 WHERE (((CASE WHEN ((vt0.c1)AND(vt0.c1)) THEN CASE WHEN vt1.c1 THEN vt0.c0 END WHEN ((t0.c0) IS FALSE) THEN ((((((((t0.c0)AND(vt1.c1)))AND(t0.c0)))OR(vt0.c1)))OR(vt1.c1)) WHEN (((x'', vt1.c0, vt0.c1, vt0.c1, t0.c0))!=((vt1.c1, vt1.c1, vt0.c0, -1.7976931348623157E308, vt1.c0))) THEN ((vt0.c1) IS TRUE) END) ISNULL));
SELECT ALL vt0.c1, vt1.c0, vt1.c1 FROM t0, vt0, vt1;
SELECT DISTINCT * FROM vt0, t0, vt1;
SELECT DISTINCT * FROM vt0, t0, vt1 WHERE (LIKELIHOOD(((vt1.c0)-(vt0.c0)), 0.46131257924113345)) UNION SELECT DISTINCT * FROM vt0, t0, vt1 WHERE ((NOT (LIKELIHOOD(((vt1.c0)-(vt0.c0)), 0.46131257924113345)))) UNION SELECT DISTINCT * FROM vt0, t0, vt1 WHERE (((LIKELIHOOD(((vt1.c0)-(vt0.c0)), 0.46131257924113345)) ISNULL));
SELECT DISTINCT * FROM vt0, t0, vt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ('1357071792') GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ('1357071792'))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((('1357071792') ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0 HAVING COUNT(MAX(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0 HAVING (NOT (COUNT(MAX(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0 HAVING ((COUNT(MAX(vt0.c0))) ISNULL);
SELECT * FROM vt1, t0;
SELECT * FROM vt1, t0 WHERE ((((((NULL))<((vt1.c0))))IS NOT(((vt1.c0) NOTNULL)))) UNION ALL SELECT ALL * FROM vt1, t0 WHERE ((NOT ((((((NULL))<((vt1.c0))))IS NOT(((vt1.c0) NOTNULL)))))) UNION ALL SELECT ALL * FROM vt1, t0 WHERE ((((((((NULL))<((vt1.c0))))IS NOT(((vt1.c0) NOTNULL)))) ISNULL));
SELECT * FROM vt1, t0;
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c1 FROM vt1 WHERE (((((((vt1.c0)*(NULL)))AND(0.6859665432725651)))AND(((x'')AND(vt1.c1))))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((NOT (((((((vt1.c0)*(NULL)))AND(0.6859665432725651)))AND(((x'')AND(vt1.c1))))))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE (((((((((vt1.c0)*(NULL)))AND(0.6859665432725651)))AND(((x'')AND(vt1.c1))))) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (CASE WHEN (+ (vt1.c1)) THEN CAST(vt1.c1 AS REAL) ELSE ((vt1.c0)<<(vt1.c0)) END) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN (+ (vt1.c1)) THEN CAST(vt1.c1 AS REAL) ELSE ((vt1.c0)<<(vt1.c0)) END))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (((CASE WHEN (+ (vt1.c1)) THEN CAST(vt1.c1 AS REAL) ELSE ((vt1.c0)<<(vt1.c0)) END) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (((vt1.c1)>(vt1.c0)) IN ()) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT ((((vt1.c1)>(vt1.c0)) IN ()))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (((((vt1.c1)>(vt1.c0)) IN ())) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (((vt1.c1)>(vt1.c0)) IN ()) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT ((((vt1.c1)>(vt1.c0)) IN ()))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (((((vt1.c1)>(vt1.c0)) IN ())) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT t0.c0 FROM vt1, vt0, t0;
SELECT ALL t0.c0 FROM vt1, vt0, t0 WHERE ((((((~ (vt0.c1)))OR(((vt0.c0)&(NULL)))))AND((- (vt0.c1))))) UNION ALL SELECT t0.c0 FROM vt1, vt0, t0 WHERE ((NOT ((((((~ (vt0.c1)))OR(((vt0.c0)&(NULL)))))AND((- (vt0.c1))))))) UNION ALL SELECT ALL t0.c0 FROM vt1, vt0, t0 WHERE ((((((((~ (vt0.c1)))OR(((vt0.c0)&(NULL)))))AND((- (vt0.c1))))) ISNULL));
SELECT t0.c0 FROM vt1, vt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((x'da22') NOT BETWEEN (2072570843) AND (((t0.c0) ISNULL)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((x'da22') NOT BETWEEN (2072570843) AND (((t0.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((x'da22') NOT BETWEEN (2072570843) AND (((t0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0, vt1.c1 FROM vt1, t0 GROUP BY t0.c0, vt1.c1;
SELECT ALL t0.c0, vt1.c1 FROM vt1, t0 WHERE (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) GROUP BY t0.c0, vt1.c1 UNION SELECT t0.c0, vt1.c1 FROM vt1, t0 WHERE ((NOT (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM))) GROUP BY t0.c0, vt1.c1 UNION SELECT ALL t0.c0, vt1.c1 FROM vt1, t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY t0.c0, vt1.c1;
SELECT ALL t0.c0, vt1.c1 FROM vt1, t0 GROUP BY t0.c0, vt1.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(((SUM(2.072570843E9))||(TOTAL(COUNT(*))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(((SUM(2.072570843E9))||(TOTAL(COUNT(*))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(((SUM(2.072570843E9))||(TOTAL(COUNT(*)))))) ISNULL);
SELECT MIN((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) FROM t0, vt1;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((0x50e345b0) IS FALSE)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((0x50e345b0) IS FALSE)))) UNION ALL SELECT * FROM vt0 WHERE (((((0X50e345b0) IS FALSE)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT t0.c0 FROM vt1, vt0, t0;
SELECT DISTINCT t0.c0 FROM vt1, vt0, t0 WHERE ((vt0.c1 COLLATE RTRIM IN (((vt0.c1)IS NOT(t0.c0)), (x'' IN (vt0.c0))))) UNION SELECT DISTINCT t0.c0 FROM vt1, vt0, t0 WHERE ((NOT ((vt0.c1 COLLATE RTRIM IN (((vt0.c1)IS NOT(t0.c0)), (x'' IN (vt0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM vt1, vt0, t0 WHERE ((((vt0.c1 COLLATE RTRIM IN (((vt0.c1)IS NOT(t0.c0)), (x'' IN (vt0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM vt1, vt0, t0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END AS REAL)) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CAST(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END AS REAL)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END AS REAL)) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(CAST(vt1.c1 AS BLOB)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(CAST(vt1.c1 AS BLOB)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(CAST(vt1.c1 AS BLOB))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(CAST(vt1.c1 AS BLOB)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(CAST(vt1.c1 AS BLOB)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(CAST(vt1.c1 AS BLOB))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c1, vt0.c0 FROM vt0, vt1, t0;
SELECT vt1.c1, vt0.c0 FROM vt0, vt1, t0 WHERE (((vt0.c0)%(vt0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL vt1.c1, vt0.c0 FROM vt0, vt1, t0 WHERE ((NOT (((vt0.c0)%(vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT vt1.c1, vt0.c0 FROM vt0, vt1, t0 WHERE (((((vt0.c0)%(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT vt1.c1, vt0.c0 FROM vt0, vt1, t0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))  WHEN vt0.c1 THEN ((vt0.c1)+(vt0.c0)) END) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))  WHEN vt0.c1 THEN ((vt0.c1)+(vt0.c0)) END))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))  WHEN vt0.c1 THEN ((vt0.c1)+(vt0.c0)) END) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, vt1 NOT INDEXED, t0 WHERE (((((t0.c0)AND(vt0.c1)))AND(vt0.c0)) COLLATE RTRIM COLLATE NOCASE) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM vt0, vt1, t0 WHERE ((NOT (((((t0.c0)AND(vt0.c1)))AND(vt0.c0)) COLLATE RTRIM COLLATE NOCASE))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM vt0, vt1, t0 WHERE (((((((t0.c0)AND(vt0.c1)))AND(vt0.c0)) COLLATE RTRIM COLLATE NOCASE) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING CASE WHEN COUNT(MAX(MAX(t0.c0))) THEN t0.c0 ELSE MAX(vt1.c1) END UNION ALL SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING (NOT (CASE WHEN COUNT(MAX(MAX(t0.c0))) THEN t0.c0 ELSE MAX(vt1.c1) END)) UNION ALL SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING ((CASE WHEN COUNT(MAX(MAX(t0.c0))) THEN t0.c0 ELSE MAX(vt1.c1) END) ISNULL);
SELECT ALL vt0.c0 FROM vt0, t0;
SELECT ALL vt0.c0 FROM vt0, t0 WHERE (((((vt0.c1)<<(vt0.c0))) IS FALSE)) UNION ALL SELECT vt0.c0 FROM vt0, t0 WHERE ((NOT (((((vt0.c1)<<(vt0.c0))) IS FALSE)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 WHERE (((((((vt0.c1)<<(vt0.c0))) IS FALSE)) ISNULL));
SELECT ALL vt0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (CASE vt0.c1  WHEN vt1.c0 THEN NULL ELSE 1553978468 END IN ()) LEFT OUTER JOIN vt1 ON CASE CAST(vt0.c0 AS REAL)  WHEN LIKE(t0.c0, vt1.c0) THEN ((t0.c0)LIKE(vt1.c1)) ELSE vt1.c0 END;
SELECT DISTINCT vt0.c1, vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (CASE vt0.c1  WHEN vt1.c0 THEN NULL ELSE 1553978468 END IN ()) LEFT OUTER JOIN vt1 ON CASE CAST(vt0.c0 AS REAL)  WHEN LIKE(t0.c0, vt1.c0) THEN ((t0.c0)LIKE(vt1.c1)) ELSE vt1.c0 END WHERE (LENGTH((NOT (vt0.c0)))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (CASE vt0.c1  WHEN vt1.c0 THEN NULL ELSE 1553978468 END IN ()) LEFT OUTER JOIN vt1 ON CASE CAST(vt0.c0 AS REAL)  WHEN LIKE(t0.c0, vt1.c0) THEN ((t0.c0)LIKE(vt1.c1)) ELSE vt1.c0 END WHERE ((NOT (LENGTH((NOT (vt0.c0)))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (CASE vt0.c1  WHEN vt1.c0 THEN NULL ELSE 1553978468 END IN ()) LEFT OUTER JOIN vt1 ON CASE CAST(vt0.c0 AS REAL)  WHEN LIKE(t0.c0, vt1.c0) THEN ((t0.c0)LIKE(vt1.c1)) ELSE vt1.c0 END WHERE (((LENGTH((NOT (vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (CASE vt0.c1  WHEN vt1.c0 THEN NULL ELSE 1553978468 END IN ()) LEFT OUTER JOIN vt1 ON CASE CAST(vt0.c0 AS REAL)  WHEN LIKE(t0.c0, vt1.c0) THEN ((t0.c0)LIKE(vt1.c1)) ELSE vt1.c0 END;
SELECT vt0.c1, vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN vt1 ON (((((vt1.c0)AND(vt1.c0)), vt1.c1, INSTR(1455571567, vt0.c0)))!=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)), COALESCE(vt1.c0, vt0.c0, vt0.c1, vt0.c0), CAST(t0.c0 AS INTEGER)))) RIGHT OUTER JOIN t0 ON t0.c0 GROUP BY vt0.c1, vt0.c0, t0.c0;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM vt0, t0, vt1;
SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM vt0, t0, vt1 WHERE (CAST(((vt1.c0)<(vt0.c1)) AS REAL)) UNION ALL SELECT vt1.c0, vt0.c0, t0.c0 FROM vt0, t0, vt1 WHERE ((NOT (CAST(((vt1.c0)<(vt0.c1)) AS REAL)))) UNION ALL SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM vt0, t0, vt1 WHERE (((CAST(((vt1.c0)<(vt0.c1)) AS REAL)) ISNULL));
SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM vt0, t0, vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN 0.04506313107090987 END AS BLOB)) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN 0.04506313107090987 END AS BLOB)))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE (((CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN 0.04506313107090987 END AS BLOB)) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS NUMERIC)))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((NOT ((NOT (CAST(vt1.c0 AS NUMERIC)))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((((NOT (CAST(vt1.c0 AS NUMERIC)))) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1, t0.c0, vt1.c0 FROM vt1, t0 GROUP BY vt1.c1, t0.c0, vt1.c0;
SELECT vt1.c1, t0.c0, vt1.c0 FROM vt1, t0 GROUP BY vt1.c1, t0.c0, vt1.c0 HAVING AVG(COUNT(vt1.c0)) UNION ALL SELECT ALL vt1.c1, t0.c0, vt1.c0 FROM vt1, t0 GROUP BY vt1.c1, t0.c0, vt1.c0 HAVING (NOT (AVG(COUNT(vt1.c0)))) UNION ALL SELECT vt1.c1, t0.c0, vt1.c0 FROM vt1, t0 GROUP BY vt1.c1, t0.c0, vt1.c0 HAVING ((AVG(COUNT(vt1.c0))) ISNULL);
SELECT MIN(((((vt0.c1) ISNULL))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) FROM vt0;
SELECT * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE ('% 5j&o]') UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT ('% 5j&o]'))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((('% 5j&o]') ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0)%(vt0.c0)) IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)%(vt0.c0)) IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)%(vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c1 FROM vt0, t0, vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt0, t0, vt1 WHERE (CASE (- (t0.c0))  WHEN ((((t0.c0)OR(vt1.c0)))AND(vt0.c0)) THEN (((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) ELSE CASE WHEN t0.c0 THEN t0.c0 ELSE vt1.c1 END END) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt0, t0, vt1 WHERE ((NOT (CASE (- (t0.c0))  WHEN ((((t0.c0)OR(vt1.c0)))AND(vt0.c0)) THEN (((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) ELSE CASE WHEN t0.c0 THEN t0.c0 ELSE vt1.c1 END END))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt0, t0, vt1 WHERE (((CASE (- (t0.c0))  WHEN ((((t0.c0)OR(vt1.c0)))AND(vt0.c0)) THEN (((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) ELSE CASE WHEN t0.c0 THEN t0.c0 ELSE vt1.c1 END END) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt0, t0, vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c0 FROM t0, vt0 LEFT OUTER JOIN vt1 ON CASE CASE WHEN vt0.c0 THEN t0.c0 WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END  WHEN ((0.84636698204803)GLOB(vt0.c0)) THEN CAST(t0.c0 AS NUMERIC) ELSE ABS(NULL) END GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0, vt0 LEFT OUTER JOIN vt1 ON CASE CASE WHEN vt0.c0 THEN t0.c0 WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END  WHEN ((0.84636698204803)GLOB(vt0.c0)) THEN CAST(t0.c0 AS NUMERIC) ELSE ABS(NULL) END GROUP BY vt1.c0 HAVING ((MAX(vt1.c1)) ISNULL) UNION ALL SELECT vt1.c0 FROM t0, vt0 LEFT OUTER JOIN vt1 ON CASE CASE WHEN vt0.c0 THEN t0.c0 WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END  WHEN ((0.84636698204803)GLOB(vt0.c0)) THEN CAST(t0.c0 AS NUMERIC) ELSE ABS(NULL) END GROUP BY vt1.c0 HAVING (NOT (((MAX(vt1.c1)) ISNULL))) UNION ALL SELECT vt1.c0 FROM t0, vt0 LEFT OUTER JOIN vt1 ON CASE CASE WHEN vt0.c0 THEN t0.c0 WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END  WHEN ((0.84636698204803)GLOB(vt0.c0)) THEN CAST(t0.c0 AS NUMERIC) ELSE ABS(NULL) END GROUP BY vt1.c0 HAVING ((((MAX(vt1.c1)) ISNULL)) ISNULL);
SELECT ALL vt1.c0 FROM t0, vt0 LEFT OUTER JOIN vt1 ON CASE CASE WHEN vt0.c0 THEN t0.c0 WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END  WHEN ((0.84636698204803)GLOB(vt0.c0)) THEN CAST(t0.c0 AS NUMERIC) ELSE ABS(NULL) END GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0, vt0 LEFT OUTER JOIN vt1 ON CASE CASE WHEN vt0.c0 THEN t0.c0 WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END  WHEN ((0.84636698204803)GLOB(vt0.c0)) THEN CAST(t0.c0 AS NUMERIC) ELSE ABS(NULL) END GROUP BY vt1.c0 HAVING ((MAX(vt1.c1)) ISNULL) UNION ALL SELECT vt1.c0 FROM t0, vt0 LEFT OUTER JOIN vt1 ON CASE CASE WHEN vt0.c0 THEN t0.c0 WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END  WHEN ((0.84636698204803)GLOB(vt0.c0)) THEN CAST(t0.c0 AS NUMERIC) ELSE ABS(NULL) END GROUP BY vt1.c0 HAVING (NOT (((MAX(vt1.c1)) ISNULL))) UNION ALL SELECT vt1.c0 FROM t0, vt0 LEFT OUTER JOIN vt1 ON CASE CASE WHEN vt0.c0 THEN t0.c0 WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END  WHEN ((0.84636698204803)GLOB(vt0.c0)) THEN CAST(t0.c0 AS NUMERIC) ELSE ABS(NULL) END GROUP BY vt1.c0 HAVING ((((MAX(vt1.c1)) ISNULL)) ISNULL);
SELECT ALL vt1.c0 FROM t0, vt0 LEFT OUTER JOIN vt1 ON CASE CASE WHEN vt0.c0 THEN t0.c0 WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END  WHEN ((0.84636698204803)GLOB(vt0.c0)) THEN CAST(t0.c0 AS NUMERIC) ELSE ABS(NULL) END GROUP BY vt1.c0;
SELECT MIN('-956192006') FROM vt1, t0, vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (CASE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))  WHEN (NOT (vt0.c0)) THEN ((vt0.c1) IS TRUE) ELSE (vt0.c1 IN (vt0.c1, vt0.c1)) END) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CASE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))  WHEN (NOT (vt0.c0)) THEN ((vt0.c1) IS TRUE) ELSE (vt0.c1 IN (vt0.c1, vt0.c1)) END))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((CASE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))  WHEN (NOT (vt0.c0)) THEN ((vt0.c1) IS TRUE) ELSE (vt0.c1 IN (vt0.c1, vt0.c1)) END) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt0 ON (((t0.c0 IN (vt1.c1, vt0.c1))) NOT NULL) LEFT OUTER JOIN vt1 ON CAST(HEX(vt0.c1) AS BLOB);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((NULL IN ())) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((NULL IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((NULL IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON CAST(0.08224070578459886 AS REAL) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON CAST(0.08224070578459886 AS REAL) GROUP BY vt0.c0, t0.c0 HAVING COUNT(t0.c0) COLLATE NOCASE UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON CAST(0.08224070578459886 AS REAL) GROUP BY vt0.c0, t0.c0 HAVING (NOT (COUNT(t0.c0) COLLATE NOCASE)) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON CAST(0.08224070578459886 AS REAL) GROUP BY vt0.c0, t0.c0 HAVING ((COUNT(t0.c0) COLLATE NOCASE) ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON CAST(0.08224070578459886 AS REAL) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON CAST(0.08224070578459886 AS REAL) GROUP BY vt0.c0, t0.c0 HAVING COUNT(t0.c0) COLLATE NOCASE UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON CAST(0.08224070578459886 AS REAL) GROUP BY vt0.c0, t0.c0 HAVING (NOT (COUNT(t0.c0) COLLATE NOCASE)) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON CAST(0.08224070578459886 AS REAL) GROUP BY vt0.c0, t0.c0 HAVING ((COUNT(t0.c0) COLLATE NOCASE) ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON CAST(0.08224070578459886 AS REAL) GROUP BY vt0.c0, t0.c0;
SELECT ALL MAX(CASE WHEN ((vt1.c1)%(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.1272068534747388 END ELSE UPPER(x'') END) FROM vt0, t0, vt1;
SELECT ALL vt1.c1, t0.c0, vt0.c0, vt0.c1 FROM vt1, vt0 NATURAL JOIN t0;
SELECT ALL vt1.c1, t0.c0, vt0.c0, vt0.c1 FROM vt1, vt0 NATURAL JOIN t0 WHERE ((((((vt0.c1, vt1.c1, vt0.c0))>=((NULL, vt1.c1, t0.c0))))>>(((((vt1.c1)AND(vt1.c1)))AND(t0.c0))))) UNION ALL SELECT ALL vt1.c1, t0.c0, vt0.c0, vt0.c1 FROM vt1, vt0 NATURAL JOIN t0 WHERE ((NOT ((((((vt0.c1, vt1.c1, vt0.c0))>=((NULL, vt1.c1, t0.c0))))>>(((((vt1.c1)AND(vt1.c1)))AND(t0.c0))))))) UNION ALL SELECT ALL vt1.c1, t0.c0, vt0.c0, vt0.c1 FROM vt1, vt0 NATURAL JOIN t0 WHERE ((((((((vt0.c1, vt1.c1, vt0.c0))>=((NULL, vt1.c1, t0.c0))))>>(((((vt1.c1)AND(vt1.c1)))AND(t0.c0))))) ISNULL));
SELECT ALL vt1.c1, t0.c0, vt0.c0, vt0.c1 FROM vt1, vt0 NATURAL JOIN t0;
SELECT DISTINCT vt0.c0 FROM t0 INNER JOIN vt1 ON ((CASE vt0.c1  WHEN t0.c0 THEN vt1.c1 END)IS NOT(((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))) LEFT OUTER JOIN vt0 ON ((('573947381' IN ()))>=(CAST(vt1.c1 AS REAL)));
SELECT DISTINCT vt0.c0 FROM t0 INNER JOIN vt1 ON ((CASE vt0.c1  WHEN t0.c0 THEN vt1.c1 END)IS NOT(((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))) LEFT OUTER JOIN vt0 ON ((('573947381' IN ()))>=(CAST(vt1.c1 AS REAL))) WHERE ((((CASE NULL  WHEN t0.c0 THEN vt0.c0 WHEN NULL THEN vt1.c1 WHEN vt1.c0 THEN t0.c0 END))>((CASE t0.c0  WHEN vt1.c0 THEN vt0.c0 END)))) UNION SELECT DISTINCT vt0.c0 FROM t0 INNER JOIN vt1 ON ((CASE vt0.c1  WHEN t0.c0 THEN vt1.c1 END)IS NOT(((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))) LEFT OUTER JOIN vt0 ON ((('573947381' IN ()))>=(CAST(vt1.c1 AS REAL))) WHERE ((NOT ((((CASE NULL  WHEN t0.c0 THEN vt0.c0 WHEN NULL THEN vt1.c1 WHEN vt1.c0 THEN t0.c0 END))>((CASE t0.c0  WHEN vt1.c0 THEN vt0.c0 END)))))) UNION SELECT DISTINCT vt0.c0 FROM t0 INNER JOIN vt1 ON ((CASE vt0.c1  WHEN t0.c0 THEN vt1.c1 END)IS NOT(((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))) LEFT OUTER JOIN vt0 ON ((('573947381' IN ()))>=(CAST(vt1.c1 AS REAL))) WHERE ((((((CASE NULL  WHEN t0.c0 THEN vt0.c0 WHEN NULL THEN vt1.c1 WHEN vt1.c0 THEN t0.c0 END))>((CASE t0.c0  WHEN vt1.c0 THEN vt0.c0 END)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0 INNER JOIN vt1 ON ((CASE vt0.c1  WHEN t0.c0 THEN vt1.c1 END)IS NOT(((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))) LEFT OUTER JOIN vt0 ON ((('573947381' IN ()))>=(CAST(vt1.c1 AS REAL)));
SELECT vt0.c0, vt0.c1 FROM t0, vt0, vt1 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM t0, vt0, vt1 WHERE (((CAST(t0.c0 AS NUMERIC))AND(x'b0bfc5d8'))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM t0, vt0, vt1 WHERE ((NOT (((CAST(t0.c0 AS NUMERIC))AND(x'b0bfc5d8'))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM t0, vt0, vt1 WHERE (((((CAST(t0.c0 AS NUMERIC))AND(x'b0bfc5d8'))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM t0, vt0, vt1 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt1.c1;
SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt1.c1 HAVING SUM((vt1.c0 IN ())) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt1.c1 HAVING (NOT (SUM((vt1.c0 IN ())))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt1.c1 HAVING ((SUM((vt1.c0 IN ()))) ISNULL);
SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt1.c1;
SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt1.c1 HAVING SUM((vt1.c0 IN ())) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt1.c1 HAVING (NOT (SUM((vt1.c0 IN ())))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt1.c1 HAVING ((SUM((vt1.c0 IN ()))) ISNULL);
SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt1.c1;
SELECT vt1.c1, vt0.c0, t0.c0, vt1.c0, vt0.c1 FROM vt1, vt0, t0;
SELECT vt1.c1, vt0.c0, t0.c0, vt1.c0, vt0.c1 FROM vt1, vt0, t0 WHERE (x'') UNION ALL SELECT ALL vt1.c1, vt0.c0, t0.c0, vt1.c0, vt0.c1 FROM vt1, vt0, t0 WHERE ((NOT (x''))) UNION ALL SELECT vt1.c1, vt0.c0, t0.c0, vt1.c0, vt0.c1 FROM vt1, vt0, t0 WHERE (((x'') ISNULL));
SELECT vt1.c1, vt0.c0, t0.c0, vt1.c0, vt0.c1 FROM vt1, vt0, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((0.5700368875812921)*(vt0.c1))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((0.5700368875812921)*(vt0.c1))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((0.5700368875812921)*(vt0.c1))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((1361085724)) BETWEEN ((t0.c0)) AND ((CAST(t0.c0 AS TEXT))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((1361085724)) BETWEEN ((t0.c0)) AND ((CAST(t0.c0 AS TEXT))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((1361085724)) BETWEEN ((t0.c0)) AND ((CAST(t0.c0 AS TEXT))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt0.c1, t0.c0, vt1.c1, vt1.c0 FROM vt1, vt0, t0;
SELECT vt0.c1, t0.c0, vt1.c1, vt1.c0 FROM vt1, vt0, t0 WHERE ((((((((vt1.c1)AND(vt1.c1)))OR(vt0.c1))))<((((vt1.c0) IS TRUE))))) UNION ALL SELECT vt0.c1, t0.c0, vt1.c1, vt1.c0 FROM vt1, vt0 NOT INDEXED, t0 WHERE ((NOT ((((((((vt1.c1)AND(vt1.c1)))OR(vt0.c1))))<((((vt1.c0) IS TRUE))))))) UNION ALL SELECT vt0.c1, t0.c0, vt1.c1, vt1.c0 FROM vt1, vt0, t0 WHERE ((((((((((vt1.c1)AND(vt1.c1)))OR(vt0.c1))))<((((vt1.c0) IS TRUE))))) ISNULL));
SELECT ALL vt0.c1, t0.c0, vt1.c1, vt1.c0 FROM vt1, vt0, t0;
SELECT DISTINCT * FROM t0, vt0 RIGHT OUTER JOIN vt1 ON ((((((((((t0.c0) BETWEEN (vt1.c1) AND (x'')))OR((+ (vt1.c0)))))AND(CAST(vt0.c1 AS BLOB))))OR(((vt1.c1)<=(vt1.c1)))))OR((((vt1.c0))>=((vt0.c0)))));
SELECT DISTINCT * FROM t0, vt0 RIGHT OUTER JOIN vt1 ON ((((((((((t0.c0) BETWEEN (vt1.c1) AND (x'')))OR((+ (vt1.c0)))))AND(CAST(vt0.c1 AS BLOB))))OR(((vt1.c1)<=(vt1.c1)))))OR((((vt1.c0))>=((vt0.c0))))) WHERE (CAST(CAST(t0.c0 AS INTEGER) AS REAL)) UNION SELECT DISTINCT * FROM t0, vt0 RIGHT OUTER JOIN vt1 ON ((((((((((t0.c0) BETWEEN (vt1.c1) AND (x'')))OR((+ (vt1.c0)))))AND(CAST(vt0.c1 AS BLOB))))OR(((vt1.c1)<=(vt1.c1)))))OR((((vt1.c0))>=((vt0.c0))))) WHERE ((NOT (CAST(CAST(t0.c0 AS INTEGER) AS REAL)))) UNION SELECT DISTINCT * FROM t0, vt0 RIGHT OUTER JOIN vt1 ON ((((((((((t0.c0) BETWEEN (vt1.c1) AND (x'')))OR((+ (vt1.c0)))))AND(CAST(vt0.c1 AS BLOB))))OR(((vt1.c1)<=(vt1.c1)))))OR((((vt1.c0))>=((vt0.c0))))) WHERE (((CAST(CAST(t0.c0 AS INTEGER) AS REAL)) ISNULL));
SELECT DISTINCT * FROM t0, vt0 RIGHT OUTER JOIN vt1 ON ((((((((((t0.c0) BETWEEN (vt1.c1) AND (x'')))OR((+ (vt1.c0)))))AND(CAST(vt0.c1 AS BLOB))))OR(((vt1.c1)<=(vt1.c1)))))OR((((vt1.c0))>=((vt0.c0)))));
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0, vt1.c1, vt1.c0;
SELECT vt0.c0, vt1.c1, vt1.c0 FROM vt0, t0, vt1 WHERE (CAST(((vt0.c0)IS NOT(vt0.c0)) AS BLOB)) GROUP BY vt0.c0, vt1.c1, vt1.c0 UNION SELECT vt0.c0, vt1.c1, vt1.c0 FROM vt0, t0, vt1 WHERE ((NOT (CAST(((vt0.c0)IS NOT(vt0.c0)) AS BLOB)))) GROUP BY vt0.c0, vt1.c1, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt0 NOT INDEXED, t0, vt1 WHERE (((CAST(((vt0.c0)IS NOT(vt0.c0)) AS BLOB)) ISNULL)) GROUP BY vt0.c0, vt1.c1, vt1.c0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0, vt1.c1, vt1.c0;
SELECT vt0.c1, vt0.c0, t0.c0, vt1.c1 FROM t0, vt1, vt0 GROUP BY vt0.c1, vt0.c0, t0.c0, vt1.c1;
SELECT vt0.c1, vt0.c0, t0.c0, vt1.c1 FROM t0, vt1, vt0 GROUP BY vt0.c1, vt0.c0, t0.c0, vt1.c1 HAVING ((SUM(MIN(t0.c0)))-(COUNT(x''))) UNION ALL SELECT ALL vt0.c1, vt0.c0, t0.c0, vt1.c1 FROM t0, vt1, vt0 GROUP BY vt0.c1, vt0.c0, t0.c0, vt1.c1 HAVING (NOT (((SUM(MIN(t0.c0)))-(COUNT(x''))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, t0.c0, vt1.c1 FROM t0, vt1, vt0 GROUP BY vt0.c1, vt0.c0, t0.c0, vt1.c1 HAVING ((((SUM(MIN(t0.c0)))-(COUNT(x'')))) ISNULL);
SELECT vt1.c1, vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0;
SELECT ALL vt1.c1, vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 WHERE (((LIKELY(vt1.c1)) NOT BETWEEN (vt1.c1 COLLATE RTRIM) AND ((('쎒?')IS(0.020025770526667874))))) UNION ALL SELECT vt1.c1, vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((LIKELY(vt1.c1)) NOT BETWEEN (vt1.c1 COLLATE RTRIM) AND ((('쎒?')IS(0.020025770526667874))))))) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 WHERE (((((LIKELY(vt1.c1)) NOT BETWEEN (vt1.c1 COLLATE RTRIM) AND ((('쎒?')IS(0.020025770526667874))))) ISNULL));
SELECT vt1.c1, vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((~ (vt0.c0)))==(LIKELIHOOD(vt0.c0, 0.3127633554822049)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((~ (vt0.c0)))==(LIKELIHOOD(vt0.c0, 0.3127633554822049)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((~ (vt0.c0)))==(LIKELIHOOD(vt0.c0, 0.3127633554822049)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, vt1, t0 WHERE ((- (vt0.c0)) COLLATE RTRIM) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, vt1, t0 WHERE ((NOT ((- (vt0.c0)) COLLATE RTRIM))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0 NOT INDEXED, vt1, t0 WHERE ((((- (vt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING vt0.c1 UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (vt0.c1)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((vt0.c1) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING vt0.c1 UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (vt0.c1)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((vt0.c1) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt1.c0, t0.c0, vt1.c1 FROM vt1, t0;
SELECT vt1.c0, t0.c0, vt1.c1 FROM vt1, t0 WHERE (CAST(vt1.c0 COLLATE RTRIM AS NUMERIC)) UNION ALL SELECT vt1.c0, t0.c0, vt1.c1 FROM vt1, t0 WHERE ((NOT (CAST(vt1.c0 COLLATE RTRIM AS NUMERIC)))) UNION ALL SELECT vt1.c0, t0.c0, vt1.c1 FROM vt1, t0 WHERE (((CAST(vt1.c0 COLLATE RTRIM AS NUMERIC)) ISNULL));
SELECT ALL vt1.c0, t0.c0, vt1.c1 FROM vt1, t0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((vt0.c1)&(vt0.c0))) BETWEEN (((((vt0.c0)OR(vt0.c1)))AND(vt0.c0))) AND (0.18529190171458076))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c1)&(vt0.c0))) BETWEEN (((((vt0.c0)OR(vt0.c1)))AND(vt0.c0))) AND (0.18529190171458076))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((((vt0.c1)&(vt0.c0))) BETWEEN (((((vt0.c0)OR(vt0.c1)))AND(vt0.c0))) AND (0.18529190171458076))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))))!=((CAST(vt0.c0 AS TEXT))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t0 WHERE ((NOT ((((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))))!=((CAST(vt0.c0 AS TEXT))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t0 WHERE ((((((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))))!=((CAST(vt0.c0 AS TEXT))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, vt1.c1, vt0.c1, t0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt1.c1, vt0.c1, t0.c0;
SELECT vt0.c0, vt1.c1, vt0.c1, t0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt1.c1, vt0.c1, t0.c0 HAVING GROUP_CONCAT(COUNT(0.1455252340522999) COLLATE BINARY) UNION ALL SELECT vt0.c0, vt1.c1, vt0.c1, t0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt1.c1, vt0.c1, t0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(0.1455252340522999) COLLATE BINARY))) UNION ALL SELECT vt0.c0, vt1.c1, vt0.c1, t0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt1.c1, vt0.c1, t0.c0 HAVING ((GROUP_CONCAT(COUNT(0.1455252340522999) COLLATE BINARY)) ISNULL);
SELECT vt0.c0 FROM t0 INNER JOIN vt0 ON (((t0.c0) NOT BETWEEN (vt1.c1) AND ('T~(4ʡl9U')) IN ()) INNER JOIN vt1 ON ((((vt0.c0, vt1.c1, vt1.c0, vt1.c1, vt1.c0))>((vt0.c0, 333559724, vt1.c1, NULL, vt1.c1))) IN ());
SELECT ALL vt0.c0 FROM t0 INNER JOIN vt0 ON (((t0.c0) NOT BETWEEN (vt1.c1) AND ('T~(4ʡl9U')) IN ()) INNER JOIN vt1 ON ((((vt0.c0, vt1.c1, vt1.c0, vt1.c1, vt1.c0))>((vt0.c0, 333559724, vt1.c1, NULL, vt1.c1))) IN ()) WHERE (CAST(((('')) NOT BETWEEN (('}-䖰 ')) AND ((t0.c0))) AS TEXT)) UNION ALL SELECT vt0.c0 FROM t0 INNER JOIN vt0 ON (((t0.c0) NOT BETWEEN (vt1.c1) AND ('T~(4ʡl9U')) IN ()) INNER JOIN vt1 ON ((((vt0.c0, vt1.c1, vt1.c0, vt1.c1, vt1.c0))>((vt0.c0, 333559724, vt1.c1, NULL, vt1.c1))) IN ()) WHERE ((NOT (CAST(((('')) NOT BETWEEN (('}-䖰 ')) AND ((t0.c0))) AS TEXT)))) UNION ALL SELECT vt0.c0 FROM t0 INNER JOIN vt0 ON (((t0.c0) NOT BETWEEN (vt1.c1) AND ('T~(4ʡl9U')) IN ()) INNER JOIN vt1 ON ((((vt0.c0, vt1.c1, vt1.c0, vt1.c1, vt1.c0))>((vt0.c0, 333559724, vt1.c1, NULL, vt1.c1))) IN ()) WHERE (((CAST(((('')) NOT BETWEEN (('}-䖰 ')) AND ((t0.c0))) AS TEXT)) ISNULL));
SELECT vt0.c0 FROM t0 INNER JOIN vt0 ON (((t0.c0) NOT BETWEEN (vt1.c1) AND ('T~(4ʡl9U')) IN ()) INNER JOIN vt1 ON ((((vt0.c0, vt1.c1, vt1.c0, vt1.c1, vt1.c0))>((vt0.c0, 333559724, vt1.c1, NULL, vt1.c1))) IN ());
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c1, t0.c0, vt1.c0, vt0.c1 FROM t0, vt1, vt0 GROUP BY vt1.c1, t0.c0, vt1.c0, vt0.c1;
SELECT vt1.c1, t0.c0, vt1.c0, vt0.c1 FROM t0, vt1, vt0 WHERE (((HEX(DISTINCT vt1.c0))*(CAST(vt1.c0 AS NUMERIC)))) GROUP BY vt1.c1, t0.c0, vt1.c0, vt0.c1 UNION SELECT ALL vt1.c1, t0.c0, vt1.c0, vt0.c1 FROM t0, vt1, vt0 WHERE ((NOT (((HEX(DISTINCT vt1.c0))*(CAST(vt1.c0 AS NUMERIC)))))) GROUP BY vt1.c1, t0.c0, vt1.c0, vt0.c1 UNION SELECT vt1.c1, t0.c0, vt1.c0, vt0.c1 FROM t0, vt1, vt0 WHERE (((((HEX(DISTINCT vt1.c0))*(CAST(vt1.c0 AS NUMERIC)))) ISNULL)) GROUP BY vt1.c1, t0.c0, vt1.c0, vt0.c1;
SELECT ALL vt1.c1, t0.c0, vt1.c0, vt0.c1 FROM t0, vt1, vt0 GROUP BY vt1.c1, t0.c0, vt1.c0, vt0.c1;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING CAST(COUNT(*) AS REAL) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (CAST(COUNT(*) AS REAL))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((CAST(COUNT(*) AS REAL)) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING CAST(COUNT(*) AS REAL) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (CAST(COUNT(*) AS REAL))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((CAST(COUNT(*) AS REAL)) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((((vt1.c1) ISNULL))AND(CASE WHEN vt1.c0 THEN vt1.c0 END))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((vt1.c1) ISNULL))AND(CASE WHEN vt1.c0 THEN vt1.c0 END))))) UNION ALL SELECT * FROM vt1 WHERE (((((((vt1.c1) ISNULL))AND(CASE WHEN vt1.c0 THEN vt1.c0 END))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt0.c1 FROM vt1 CROSS JOIN vt0 ON ((CAST(vt1.c1 AS REAL)) ISNULL);
SELECT DISTINCT vt0.c1 FROM vt1 CROSS JOIN vt0 ON ((CAST(vt1.c1 AS REAL)) ISNULL) WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))GLOB((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT vt0.c1 FROM vt1 CROSS JOIN vt0 ON ((CAST(vt1.c1 AS REAL)) ISNULL) WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))GLOB((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT vt0.c1 FROM vt1 CROSS JOIN vt0 ON ((CAST(vt1.c1 AS REAL)) ISNULL) WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))GLOB((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt1 CROSS JOIN vt0 ON ((CAST(vt1.c1 AS REAL)) ISNULL);
SELECT vt0.c0, vt0.c1, vt1.c0, vt1.c1, t0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt1.c1, t0.c0;
SELECT vt0.c0, vt0.c1, vt1.c0, vt1.c1, t0.c0 FROM t0, vt0, vt1 WHERE (vt1.c1) GROUP BY vt0.c0, vt0.c1, vt1.c0, vt1.c1, t0.c0 UNION SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt1.c1, t0.c0 FROM t0, vt0, vt1 WHERE ((NOT (vt1.c1))) GROUP BY vt0.c0, vt0.c1, vt1.c0, vt1.c1, t0.c0 UNION SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt1.c1, t0.c0 FROM t0, vt0, vt1 WHERE (((vt1.c1) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt1.c0, vt1.c1, t0.c0;
SELECT vt0.c0, vt0.c1, vt1.c0, vt1.c1, t0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt1.c1, t0.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING UNLIKELY(CAST(vt1.c0 AS NUMERIC)) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (UNLIKELY(CAST(vt1.c0 AS NUMERIC)))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((UNLIKELY(CAST(vt1.c0 AS NUMERIC))) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING UNLIKELY(CAST(vt1.c0 AS NUMERIC)) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (UNLIKELY(CAST(vt1.c0 AS NUMERIC)))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((UNLIKELY(CAST(vt1.c0 AS NUMERIC))) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (CASE ((((t0.c0)AND(t0.c0)))AND(0.7830215859065083))  WHEN CAST(t0.c0 AS BLOB) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN '2072570843' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CASE ((((t0.c0)AND(t0.c0)))AND(0.7830215859065083))  WHEN CAST(t0.c0 AS BLOB) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN '2072570843' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END))) UNION ALL SELECT ALL * FROM t0 WHERE (((CASE ((((t0.c0)AND(t0.c0)))AND(0.7830215859065083))  WHEN CAST(t0.c0 AS BLOB) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN '2072570843' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) ISNULL))|(((0.07575698028159528)%(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0) ISNULL))|(((0.07575698028159528)%(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0) ISNULL))|(((0.07575698028159528)%(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0, vt0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, vt0.c1;
SELECT t0.c0, vt0.c0, vt0.c1 FROM vt0, t0 WHERE (((vt0.c1)>>(CASE t0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))) GROUP BY t0.c0, vt0.c0, vt0.c1 UNION SELECT ALL t0.c0, vt0.c0, vt0.c1 FROM vt0, t0 WHERE ((NOT (((vt0.c1)>>(CASE t0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))))) GROUP BY t0.c0, vt0.c0, vt0.c1 UNION SELECT t0.c0, vt0.c0, vt0.c1 FROM vt0, t0 WHERE (((((vt0.c1)>>(CASE t0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))) ISNULL)) GROUP BY t0.c0, vt0.c0, vt0.c1;
SELECT ALL t0.c0, vt0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, vt0.c1;
SELECT ALL vt0.c1, t0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c1, t0.c0;
SELECT vt0.c1, t0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c1, t0.c0 HAVING AVG(MIN(vt0.c1)) UNION ALL SELECT ALL vt0.c1, t0.c0 FROM vt0 NOT INDEXED, vt1, t0 NOT INDEXED GROUP BY vt0.c1, t0.c0 HAVING (NOT (AVG(MIN(vt0.c1)))) UNION ALL SELECT ALL vt0.c1, t0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c1, t0.c0 HAVING ((AVG(MIN(vt0.c1))) ISNULL);
SELECT * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c1) IS FALSE) COLLATE NOCASE) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (((vt0.c1) IS FALSE) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c1) IS FALSE) COLLATE NOCASE) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((t0.c0)) BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((CAST(t0.c0 AS BLOB))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((CAST(t0.c0 AS BLOB))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0)) BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((CAST(t0.c0 AS BLOB))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt0, vt1, t0 WHERE (((((vt1.c0)LIKE(0.15006713274094352)))<=(((((((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND(vt1.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(x''))))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt0, vt1, t0 WHERE ((NOT (((((vt1.c0)LIKE(0.15006713274094352)))<=(((((((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND(vt1.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(x''))))))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM vt0, vt1, t0 WHERE (((((((vt1.c0)LIKE(0.15006713274094352)))<=(((((((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND(vt1.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(x''))))) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0) NOTNULL))) AND ((-4.79667824E8)))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((((vt1.c0) NOTNULL))) AND ((-4.79667824E8)))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((((vt1.c0) NOTNULL))) AND ((-4.79667824E8)))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (68023789) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (68023789))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((68023789) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0 WHERE (vt1.c1) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt1, t0 WHERE ((NOT (vt1.c1))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1, t0 WHERE (((vt1.c1) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING ((vt0.c0)GLOB(vt1.c1)) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING (NOT (((vt0.c0)GLOB(vt1.c1)))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING ((((vt0.c0)GLOB(vt1.c1))) ISNULL);
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING ((vt0.c0)GLOB(vt1.c1)) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING (NOT (((vt0.c0)GLOB(vt1.c1)))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING ((((vt0.c0)GLOB(vt1.c1))) ISNULL);
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL * FROM vt1, t0;
SELECT ALL * FROM vt1, t0 WHERE ((((((t0.c0) IS TRUE)))<=((CASE WHEN vt1.c1 THEN x'3558' ELSE vt1.c0 END)))) UNION ALL SELECT * FROM vt1, t0 WHERE ((NOT ((((((t0.c0) IS TRUE)))<=((CASE WHEN vt1.c1 THEN x'3558' ELSE vt1.c0 END)))))) UNION ALL SELECT * FROM vt1, t0 WHERE ((((((((t0.c0) IS TRUE)))<=((CASE WHEN vt1.c1 THEN x'3558' ELSE vt1.c0 END)))) ISNULL));
SELECT ALL * FROM vt1, t0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM t0, vt0, vt1;
SELECT DISTINCT vt0.c0, vt0.c1 FROM t0, vt0, vt1 WHERE (((((0.6800960152320272 COLLATE BINARY)OR(((t0.c0)<(vt0.c0)))))AND(((vt0.c0) IS FALSE)))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM t0, vt0, vt1 WHERE ((NOT (((((0.6800960152320272 COLLATE BINARY)OR(((t0.c0)<(vt0.c0)))))AND(((vt0.c0) IS FALSE)))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM t0, vt0, vt1 WHERE (((((((0.6800960152320272 COLLATE BINARY)OR(((t0.c0)<(vt0.c0)))))AND(((vt0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM t0, vt0, vt1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (((((((((((((CASE x''  WHEN vt1.c0 THEN x'' ELSE vt1.c0 END)AND((x'541c' IN ()))))AND((NOT (vt1.c0)))))AND(((('')) BETWEEN (('')) AND ((vt1.c1))))))OR(TRIM(vt1.c0))))AND(((vt1.c0)==(vt1.c0)))))OR(((((vt1.c1)OR(vt1.c0)))OR(NULL))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (((((((((((((CASE x''  WHEN vt1.c0 THEN x'' ELSE vt1.c0 END)AND((x'541c' IN ()))))AND((NOT (vt1.c0)))))AND(((('')) BETWEEN (('')) AND ((vt1.c1))))))OR(TRIM(vt1.c0))))AND(((vt1.c0)=(vt1.c0)))))OR(((((vt1.c1)OR(vt1.c0)))OR(NULL))))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((((((((((((((CASE x''  WHEN vt1.c0 THEN x'' ELSE vt1.c0 END)AND((x'541c' IN ()))))AND((NOT (vt1.c0)))))AND(((('')) BETWEEN (('')) AND ((vt1.c1))))))OR(TRIM(vt1.c0))))AND(((vt1.c0)==(vt1.c0)))))OR(((((vt1.c1)OR(vt1.c0)))OR(NULL))))) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((SUM(GROUP_CONCAT(GROUP_CONCAT(vt0.c0))))&(CAST(vt0.c1 AS INTEGER))) UNION ALL SELECT vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT (((SUM(GROUP_CONCAT(GROUP_CONCAT(vt0.c0))))&(CAST(vt0.c1 AS INTEGER))))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((((SUM(GROUP_CONCAT(GROUP_CONCAT(vt0.c0))))&(CAST(vt0.c1 AS INTEGER)))) ISNULL);
SELECT MIN((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN (LAST_INSERT_ROWID(), t0.c0 COLLATE NOCASE))) FROM t0;
SELECT * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE ((+ (((0.4168959012980571) BETWEEN (vt0.c1) AND (vt0.c1))))) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT ((+ (((0.4168959012980571) BETWEEN (vt0.c1) AND (vt0.c1))))))) UNION ALL SELECT * FROM vt0, t0 WHERE ((((+ (((0.4168959012980571) BETWEEN (vt0.c1) AND (vt0.c1))))) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE (((NULL) BETWEEN (t0.c0) AND (vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE ((NOT (((NULL) BETWEEN (t0.c0) AND (vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE (((((NULL) BETWEEN (t0.c0) AND (vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, t0;
SELECT ALL t0.c0, vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0, vt1.c1, vt1.c0;
SELECT t0.c0, vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1, t0 WHERE (((load_extension(vt0.c1)) NOTNULL)) GROUP BY t0.c0, vt0.c0, vt1.c1, vt1.c0 UNION SELECT ALL t0.c0, vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1, t0 WHERE ((NOT (((load_extension(vt0.c1)) NOTNULL)))) GROUP BY t0.c0, vt0.c0, vt1.c1, vt1.c0 UNION SELECT t0.c0, vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1, t0 WHERE (((((load_extension(vt0.c1)) NOTNULL)) ISNULL)) GROUP BY t0.c0, vt0.c0, vt1.c1, vt1.c0;
SELECT ALL vt0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0 HAVING TOTAL(AVG(COUNT(COUNT(TOTAL(MAX(COUNT(*))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0 HAVING (NOT (TOTAL(AVG(COUNT(COUNT(TOTAL(MAX(COUNT(*))))))))) UNION ALL SELECT vt0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0 HAVING ((TOTAL(AVG(COUNT(COUNT(TOTAL(MAX(COUNT(*)))))))) ISNULL);
SELECT ALL t0.c0, vt1.c1, vt1.c0 FROM t0 NATURAL JOIN vt1;
SELECT t0.c0, vt1.c1, vt1.c0 FROM t0 NATURAL JOIN vt1 WHERE ((- (((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))))) UNION ALL SELECT ALL t0.c0, vt1.c1, vt1.c0 FROM t0 NATURAL JOIN vt1 WHERE ((NOT ((- (((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))))))) UNION ALL SELECT ALL t0.c0, vt1.c1, vt1.c0 FROM t0 NATURAL JOIN vt1 WHERE ((((- (((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))))) ISNULL));
SELECT ALL t0.c0, vt1.c1, vt1.c0 FROM t0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (vt0.c1) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (-1953608056) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (-1953608056))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((-1953608056) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING MAX(GROUP_CONCAT(0.8532551264996859)) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (MAX(GROUP_CONCAT(0.8532551264996859)))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((MAX(GROUP_CONCAT(0.8532551264996859))) ISNULL);
SELECT * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (((json_array_length(t0.c0, vt0.c0)) NOT NULL)) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT (((json_array_length(t0.c0, vt0.c0)) NOT NULL)))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((((json_array_length(t0.c0, vt0.c0)) NOT NULL)) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0)<(vt0.c0)) IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0)<(vt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)<(vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL t0.c0, vt1.c1, vt0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0, vt1.c1, vt0.c0;
SELECT t0.c0, vt1.c1, vt0.c0 FROM vt1, t0, vt0 WHERE (((((((((((NULL)OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c1)))AND(t0.c0)))>=(vt1.c0))) GROUP BY t0.c0, vt1.c1, vt0.c0 UNION SELECT ALL t0.c0, vt1.c1, vt0.c0 FROM vt1, t0, vt0 WHERE ((NOT (((((((((((NULL)OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c1)))AND(t0.c0)))>=(vt1.c0))))) GROUP BY t0.c0, vt1.c1, vt0.c0 UNION SELECT ALL t0.c0, vt1.c1, vt0.c0 FROM vt1, t0, vt0 WHERE (((((((((((((NULL)OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c1)))AND(t0.c0)))>=(vt1.c0))) ISNULL)) GROUP BY t0.c0, vt1.c1, vt0.c0;
SELECT ALL t0.c0, vt1.c1, vt0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0, vt1.c1, vt0.c0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (('q[l웧r)')&(MAX(MAX(SUM(MIN(GROUP_CONCAT(vt0.c0))))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT ((('q[l웧r)')&(MAX(MAX(SUM(MIN(GROUP_CONCAT(vt0.c0))))))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (((('q[l웧r)')&(MAX(MAX(SUM(MIN(GROUP_CONCAT(vt0.c0)))))))) ISNULL);
SELECT ALL vt1.c1, vt0.c1, vt1.c0, vt0.c0, t0.c0 FROM vt0, vt1, t0;
SELECT ALL vt1.c1, vt0.c1, vt1.c0, vt0.c0, t0.c0 FROM vt0, vt1, t0 WHERE (((vt0.c1)-('Y<'))) UNION ALL SELECT ALL vt1.c1, vt0.c1, vt1.c0, vt0.c0, t0.c0 FROM vt0, vt1, t0 WHERE ((NOT (((vt0.c1)-('Y<'))))) UNION ALL SELECT vt1.c1, vt0.c1, vt1.c0, vt0.c0, t0.c0 FROM vt0, vt1, t0 WHERE (((((vt0.c1)-('Y<'))) ISNULL));
SELECT ALL vt1.c1, vt0.c1, vt1.c0, vt0.c0, t0.c0 FROM vt0, vt1, t0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (((vt0.c1) IS FALSE)) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED, t0 WHERE ((NOT (((vt0.c1) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((((vt0.c1) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (CAST(((vt1.c0)&(NULL)) AS NUMERIC)) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (CAST(((vt1.c0)&(NULL)) AS NUMERIC)))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (((CAST(((vt1.c0)&(NULL)) AS NUMERIC)) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT MIN(json_array_length((+ (vt0.c1)), TYPEOF(vt0.c0))) FROM t0, vt0 ORDER BY (vt0.c0 IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (x'') UNION ALL SELECT * FROM vt0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM vt0 WHERE (((x'') ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))OR(((t0.c0)!=(t0.c0)))))OR(((t0.c0)|(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))OR(((t0.c0)!=(t0.c0)))))OR(((t0.c0)|(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))OR(((t0.c0)<>(t0.c0)))))OR(((t0.c0)|(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt1.c1 FROM t0, vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM t0, vt1 WHERE (CAST(CASE vt1.c0  WHEN NULL THEN vt1.c0 END AS TEXT)) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM t0, vt1 WHERE ((NOT (CAST(CASE vt1.c0  WHEN NULL THEN vt1.c0 END AS TEXT)))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM t0, vt1 WHERE (((CAST(CASE vt1.c0  WHEN NULL THEN vt1.c0 END AS TEXT)) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM t0, vt1 GROUP BY vt1.c1;
SELECT vt0.c1, vt0.c0, vt1.c1 FROM vt0, vt1, t0 GROUP BY vt0.c1, vt0.c0, vt1.c1;
SELECT ALL vt0.c1, vt0.c0, vt1.c1 FROM vt0, vt1, t0 GROUP BY vt0.c1, vt0.c0, vt1.c1 HAVING MAX(GROUP_CONCAT(MIN(vt1.c1))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt1.c1 FROM vt0, vt1, t0 GROUP BY vt0.c1, vt0.c0, vt1.c1 HAVING (NOT (MAX(GROUP_CONCAT(MIN(vt1.c1))))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c1 FROM vt0, vt1, t0 GROUP BY vt0.c1, vt0.c0, vt1.c1 HAVING ((MAX(GROUP_CONCAT(MIN(vt1.c1)))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((0.18398449428647945) ISNULL) COLLATE NOCASE) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((0.18398449428647945) ISNULL) COLLATE NOCASE))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((0.18398449428647945) ISNULL) COLLATE NOCASE) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT vt1.c0 FROM t0, vt1;
SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE (HEX(DISTINCT (t0.c0 IN ()))) UNION SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE ((NOT (HEX(DISTINCT (t0.c0 IN ()))))) UNION SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE (((HEX(DISTINCT (t0.c0 IN ()))) ISNULL));
SELECT DISTINCT vt1.c0 FROM t0, vt1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((vt0.c1 COLLATE NOCASE IN ())) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c1 COLLATE NOCASE IN ())))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((vt0.c1 COLLATE NOCASE IN ())) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 NOT INDEXED GROUP BY t0.c0 HAVING TOTAL(GROUP_CONCAT(vt0.c1)) COLLATE NOCASE UNION ALL SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(vt0.c1)) COLLATE NOCASE)) UNION ALL SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING ((TOTAL(GROUP_CONCAT(vt0.c1)) COLLATE NOCASE) ISNULL);
SELECT MAX(COALESCE('-479667824', vt1.c0) COLLATE BINARY) FROM vt1 ORDER BY (((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) IS TRUE);
SELECT ALL * FROM t0, vt0, vt1;
SELECT * FROM t0, vt0, vt1 WHERE (((((vt1.c0)OR(t0.c0)))AND(vt1.c1)) COLLATE BINARY) UNION ALL SELECT ALL * FROM t0, vt0, vt1 WHERE ((NOT (((((vt1.c0)OR(t0.c0)))AND(vt1.c1)) COLLATE BINARY))) UNION ALL SELECT * FROM t0, vt0, vt1 WHERE (((((((vt1.c0)OR(t0.c0)))AND(vt1.c1)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM t0, vt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0) ISNULL))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((vt1.c0) ISNULL))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c0) ISNULL))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c1, vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0, t0.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1 WHERE (((CASE WHEN t0.c0 THEN vt1.c1 ELSE vt1.c0 END)&(((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY vt0.c1, vt1.c0, vt0.c0, t0.c0 UNION SELECT ALL vt0.c1, vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1 WHERE ((NOT (((CASE WHEN t0.c0 THEN vt1.c1 ELSE vt1.c0 END)&(((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))))) GROUP BY vt0.c1, vt1.c0, vt0.c0, t0.c0 UNION SELECT vt0.c1, vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1 WHERE (((((CASE WHEN t0.c0 THEN vt1.c1 ELSE vt1.c0 END)&(((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL)) GROUP BY vt0.c1, vt1.c0, vt0.c0, t0.c0;
SELECT vt0.c1, vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0, t0.c0;
SELECT ALL vt0.c0, vt1.c1 FROM t0, vt0, vt1 GROUP BY vt0.c0, vt1.c1;
SELECT vt0.c0, vt1.c1 FROM t0, vt0, vt1 GROUP BY vt0.c0, vt1.c1 HAVING MIN(AVG(0xfffffffffe9a25f1)) UNION ALL SELECT vt0.c0, vt1.c1 FROM t0, vt0, vt1 GROUP BY vt0.c0, vt1.c1 HAVING (NOT (MIN(AVG(0xfffffffffe9a25f1)))) UNION ALL SELECT vt0.c0, vt1.c1 FROM t0, vt0, vt1 GROUP BY vt0.c0, vt1.c1 HAVING ((MIN(AVG(0xfffffffffe9a25f1))) ISNULL);
SELECT vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE (vt0.c1) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c1, vt1.c0, vt0.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c1, vt1.c0, vt0.c0, t0.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.c0, t0.c0 FROM vt1, vt0, t0 WHERE (((-1.538932681E9) BETWEEN (CAST(NULL AS INTEGER)) AND (((((((((vt1.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(x''))))) GROUP BY vt0.c1, vt1.c0, vt0.c0, t0.c0 UNION SELECT vt0.c1, vt1.c0, vt0.c0, t0.c0 FROM vt1, vt0, t0 WHERE ((NOT (((-1.538932681E9) BETWEEN (CAST(NULL AS INTEGER)) AND (((((((((vt1.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(x''))))))) GROUP BY vt0.c1, vt1.c0, vt0.c0, t0.c0 UNION SELECT ALL vt0.c1, vt1.c0, vt0.c0, t0.c0 FROM vt1, vt0, t0 WHERE (((((-1.538932681E9) BETWEEN (CAST(NULL AS INTEGER)) AND (((((((((vt1.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(x''))))) ISNULL)) GROUP BY vt0.c1, vt1.c0, vt0.c0, t0.c0;
SELECT vt0.c1, vt1.c0, vt0.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c1, vt1.c0, vt0.c0, t0.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL vt0.c1, vt1.c0, vt1.c1 FROM vt1 RIGHT OUTER JOIN t0 ON ((json(t0.c0))/(((vt0.c1)LIKE(t0.c0)))) FULL OUTER JOIN vt0 ON ((CASE WHEN t0.c0 THEN vt0.c1 ELSE 'wi.' END) NOT BETWEEN (LIKE(vt1.c0, vt0.c0)) AND (((((vt1.c1)AND(t0.c0)))AND(NULL))));
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c1 FROM vt1 LEFT OUTER JOIN vt0 ON CASE vt1.c0 COLLATE NOCASE  WHEN NULL THEN ((NULL)>(t0.c0)) END INNER JOIN t0 ON LOWER(TOTAL_CHANGES());
SELECT vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1 WHERE (x'') GROUP BY vt1.c0, vt0.c0, t0.c0 UNION SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1 WHERE ((NOT (x''))) GROUP BY vt1.c0, vt0.c0, t0.c0 UNION SELECT vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1 WHERE (((x'') ISNULL)) GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (((x'5d1a', COUNT(COUNT(*)), vt0.c1)) BETWEEN ((AVG(GROUP_CONCAT('Bc]F?\nH~M')), SQLITE_COMPILEOPTION_USED(vt0.c1), ((t0.c0) BETWEEN (vt0.c0) AND (COUNT(COUNT(*)))))) AND ((vt0.c0, ((COUNT(*)) ISNULL), ((AVG(t0.c0)) IS TRUE)))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT ((((x'5d1a', COUNT(COUNT(*)), vt0.c1)) BETWEEN ((AVG(GROUP_CONCAT('Bc]F?\nH~M')), SQLITE_COMPILEOPTION_USED(vt0.c1), ((t0.c0) BETWEEN (vt0.c0) AND (COUNT(COUNT(*)))))) AND ((vt0.c0, ((COUNT(*)) ISNULL), ((AVG(t0.c0)) IS TRUE)))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (((((x'5d1a', COUNT(COUNT(*)), vt0.c1)) BETWEEN ((AVG(GROUP_CONCAT('Bc]F?\nH~M')), SQLITE_COMPILEOPTION_USED(vt0.c1), ((t0.c0) BETWEEN (vt0.c0) AND (COUNT(COUNT(*)))))) AND ((vt0.c0, ((COUNT(*)) ISNULL), ((AVG(t0.c0)) IS TRUE))))) ISNULL);
SELECT * FROM vt0 CROSS JOIN vt1 ON ((((x'6bda') BETWEEN (t0.c0) AND (vt0.c1))) ISNULL) FULL OUTER JOIN t0 ON (((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt1.c1) AND (vt0.c1)))) AND (((((NULL))<=((vt0.c0))))));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0, t0, vt1;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0, t0, vt1 WHERE (((vt1.c0) BETWEEN ('X嶒') AND (vt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0, t0, vt1 WHERE ((NOT (((vt1.c0) BETWEEN ('X嶒') AND (vt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0, t0, vt1 WHERE (((((vt1.c0) BETWEEN ('X嶒') AND (vt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0, t0, vt1;
SELECT ALL vt1.c1, t0.c0, vt1.c0 FROM t0, vt1 GROUP BY vt1.c1, t0.c0, vt1.c0;
SELECT ALL vt1.c1, t0.c0, vt1.c0 FROM t0, vt1 WHERE (CASE WHEN t0.c0 COLLATE NOCASE THEN (t0.c0 IN ()) ELSE CAST(t0.c0 AS BLOB) END) GROUP BY vt1.c1, t0.c0, vt1.c0 UNION SELECT vt1.c1, t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT (CASE WHEN t0.c0 COLLATE NOCASE THEN (t0.c0 IN ()) ELSE CAST(t0.c0 AS BLOB) END))) GROUP BY vt1.c1, t0.c0, vt1.c0 UNION SELECT ALL vt1.c1, t0.c0, vt1.c0 FROM t0, vt1 WHERE (((CASE WHEN t0.c0 COLLATE NOCASE THEN (t0.c0 IN ()) ELSE CAST(t0.c0 AS BLOB) END) ISNULL)) GROUP BY vt1.c1, t0.c0, vt1.c0;
SELECT ALL vt1.c1, t0.c0, vt1.c0 FROM t0, vt1 GROUP BY vt1.c1, t0.c0, vt1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(COUNT(COUNT(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(COUNT(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(COUNT(COUNT(t0.c0)))) ISNULL);
SELECT * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE (((+ (vt1.c0)) IN (((vt1.c1) BETWEEN (vt1.c1) AND ('I#*絾<''H'))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (((+ (vt1.c0)) IN (((vt1.c1) BETWEEN (vt1.c1) AND ('I#*絾<''H'))))))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((((+ (vt1.c0)) IN (((vt1.c1) BETWEEN (vt1.c1) AND ('I#*絾<''H'))))) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c1, vt1.c0, t0.c0 FROM vt1 INNER JOIN t0 ON CAST(((vt0.c1)<(vt0.c0)) AS BLOB) INNER JOIN vt0 ON ((((UNLIKELY(x''))OR(json_array_length(vt0.c1))))OR(((vt1.c0)==(vt1.c1))));
SELECT vt1.c1 FROM vt1, vt0, t0 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1, vt0, t0 WHERE ((CAST(NULL AS TEXT) IN ())) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1, vt0, t0 WHERE ((NOT ((CAST(NULL AS TEXT) IN ())))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1, vt0, t0 WHERE ((((CAST(NULL AS TEXT) IN ())) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1, vt0, t0 GROUP BY vt1.c1;
SELECT vt1.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING NULL UNION ALL SELECT vt1.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt1.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((NULL) ISNULL);
SELECT vt1.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING NULL UNION ALL SELECT vt1.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt1.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((NULL) ISNULL);
SELECT vt1.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c1 FROM vt1;
SELECT ALL vt1.c1 FROM vt1 WHERE (((0x3047d006) NOT BETWEEN ((0.5447073661541431 IN ())) AND (vt1.c1))) UNION ALL SELECT vt1.c1 FROM vt1 WHERE ((NOT (((0X3047d006) NOT BETWEEN ((0.5447073661541431 IN ())) AND (vt1.c1))))) UNION ALL SELECT vt1.c1 FROM vt1 WHERE (((((0x3047d006) NOT BETWEEN ((0.5447073661541431 IN ())) AND (vt1.c1))) ISNULL));
SELECT vt1.c1 FROM vt1;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN (((- (vt0.c0)), GLOB(vt0.c0, vt0.c0), CAST(vt0.c0 AS NUMERIC))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c1)&(vt0.c0)), ((0.27344161059426864)>>(vt0.c1)))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN (((- (vt0.c0)), GLOB(vt0.c0, vt0.c0), CAST(vt0.c0 AS NUMERIC))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c1)&(vt0.c0)), ((0.27344161059426864)>>(vt0.c1)))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN (((- (vt0.c0)), GLOB(vt0.c0, vt0.c0), CAST(vt0.c0 AS NUMERIC))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c1)&(vt0.c0)), ((0.27344161059426864)>>(vt0.c1)))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt1.c0, t0.c0, vt0.c1 FROM t0, vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, t0.c0, vt0.c1;
SELECT ALL vt1.c0, t0.c0, vt0.c1 FROM t0, vt1 NATURAL JOIN vt0 WHERE (((vt1.c1 COLLATE RTRIM)>=((((NULL))>=((vt1.c0)))))) GROUP BY vt1.c0, t0.c0, vt0.c1 UNION SELECT ALL vt1.c0, t0.c0, vt0.c1 FROM t0, vt1 NATURAL JOIN vt0 WHERE ((NOT (((vt1.c1 COLLATE RTRIM)>=((((NULL))>=((vt1.c0)))))))) GROUP BY vt1.c0, t0.c0, vt0.c1 UNION SELECT vt1.c0, t0.c0, vt0.c1 FROM t0, vt1 NATURAL JOIN vt0 WHERE (((((vt1.c1 COLLATE RTRIM)>=((((NULL))>=((vt1.c0)))))) ISNULL)) GROUP BY vt1.c0, t0.c0, vt0.c1;
SELECT ALL vt1.c0, t0.c0, vt0.c1 FROM t0, vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, t0.c0, vt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((((((vt1.c1) NOT NULL))OR((((vt1.c0))!=((vt1.c1))))))AND(((vt1.c0)>=(vt1.c1))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((((vt1.c1) NOT NULL))OR((((vt1.c0))<>((vt1.c1))))))AND(((vt1.c0)>=(vt1.c1))))))) UNION ALL SELECT * FROM vt1 WHERE (((((((((vt1.c1) NOT NULL))OR((((vt1.c0))<>((vt1.c1))))))AND(((vt1.c0)>=(vt1.c1))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN t0 ON CASE WHEN ((t0.c0)||(t0.c0)) THEN ((vt0.c1)GLOB(vt0.c0)) WHEN ((vt0.c1) IS FALSE) THEN ((vt0.c1)>=(vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN 0.9750273437774599 END;
SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN t0 ON CASE WHEN ((t0.c0)||(t0.c0)) THEN ((vt0.c1)GLOB(vt0.c0)) WHEN ((vt0.c1) IS FALSE) THEN ((vt0.c1)>=(vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN 0.9750273437774599 END WHERE (CAST(vt1.c0 COLLATE RTRIM AS BLOB)) UNION SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN t0 ON CASE WHEN ((t0.c0)||(t0.c0)) THEN ((vt0.c1)GLOB(vt0.c0)) WHEN ((vt0.c1) IS FALSE) THEN ((vt0.c1)>=(vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN 0.9750273437774599 END WHERE ((NOT (CAST(vt1.c0 COLLATE RTRIM AS BLOB)))) UNION SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN t0 ON CASE WHEN ((t0.c0)||(t0.c0)) THEN ((vt0.c1)GLOB(vt0.c0)) WHEN ((vt0.c1) IS FALSE) THEN ((vt0.c1)>=(vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN 0.9750273437774599 END WHERE (((CAST(vt1.c0 COLLATE RTRIM AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN t0 ON CASE WHEN ((t0.c0)||(t0.c0)) THEN ((vt0.c1)GLOB(vt0.c0)) WHEN ((vt0.c1) IS FALSE) THEN ((vt0.c1)>=(vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN 0.9750273437774599 END;
SELECT t0.c0, vt1.c0, vt1.c1 FROM t0, vt1 GROUP BY t0.c0, vt1.c0, vt1.c1;
SELECT ALL t0.c0, vt1.c0, vt1.c1 FROM t0, vt1 WHERE (vt1.c1) GROUP BY t0.c0, vt1.c0, vt1.c1 UNION SELECT ALL t0.c0, vt1.c0, vt1.c1 FROM t0, vt1 WHERE ((NOT (vt1.c1))) GROUP BY t0.c0, vt1.c0, vt1.c1 UNION SELECT ALL t0.c0, vt1.c0, vt1.c1 FROM t0, vt1 WHERE (((vt1.c1) ISNULL)) GROUP BY t0.c0, vt1.c0, vt1.c1;
SELECT t0.c0, vt1.c0, vt1.c1 FROM t0, vt1 GROUP BY t0.c0, vt1.c0, vt1.c1;
SELECT vt0.c1, vt0.c0, vt1.c1, vt1.c0 FROM vt1 CROSS JOIN vt0 ON ((1449895710) BETWEEN (CAST(vt1.c1 AS TEXT)) AND (vt1.c1 COLLATE RTRIM)) GROUP BY vt0.c1, vt0.c0, vt1.c1, vt1.c0;
SELECT vt0.c1, vt0.c0, vt1.c1, vt1.c0 FROM vt1 CROSS JOIN vt0 ON ((1449895710) BETWEEN (CAST(vt1.c1 AS TEXT)) AND (vt1.c1 COLLATE RTRIM)) GROUP BY vt0.c1, vt0.c0, vt1.c1, vt1.c0 HAVING MIN(MAX(vt0.c0)) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt1.c1, vt1.c0 FROM vt1 CROSS JOIN vt0 ON ((1449895710) BETWEEN (CAST(vt1.c1 AS TEXT)) AND (vt1.c1 COLLATE RTRIM)) GROUP BY vt0.c1, vt0.c0, vt1.c1, vt1.c0 HAVING (NOT (MIN(MAX(vt0.c0)))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c1, vt1.c0 FROM vt1 CROSS JOIN vt0 ON ((1449895710) BETWEEN (CAST(vt1.c1 AS TEXT)) AND (vt1.c1 COLLATE RTRIM)) GROUP BY vt0.c1, vt0.c0, vt1.c1, vt1.c0 HAVING ((MIN(MAX(vt0.c0))) ISNULL);
SELECT * FROM vt0, vt1, t0;
SELECT * FROM vt0, vt1, t0 WHERE ((~ ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1)))))) UNION ALL SELECT * FROM vt0, vt1, t0 WHERE ((NOT ((~ ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1)))))))) UNION ALL SELECT ALL * FROM vt0, vt1, t0 WHERE ((((~ ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1)))))) ISNULL));
SELECT * FROM vt0, vt1, t0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((((((vt0.c0)-(0.5129306694810938)))OR((((vt0.c0))<((vt1.c1))))))OR((('') BETWEEN (vt1.c0) AND (vt0.c1)))))AND(CAST(vt0.c1 AS BLOB))))AND(CASE WHEN vt0.c1 THEN vt1.c1 END))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((((((((((vt0.c0)-(0.5129306694810938)))OR((((vt0.c0))<((vt1.c1))))))OR((('') BETWEEN (vt1.c0) AND (vt0.c1)))))AND(CAST(vt0.c1 AS BLOB))))AND(CASE WHEN vt0.c1 THEN vt1.c1 END))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((((((((vt0.c0)-(0.5129306694810938)))OR((((vt0.c0))<((vt1.c1))))))OR((('') BETWEEN (vt1.c0) AND (vt0.c1)))))AND(CAST(vt0.c1 AS BLOB))))AND(CASE WHEN vt0.c1 THEN vt1.c1 END))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.c1 FROM vt1, vt0, t0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1, vt0, t0 WHERE (UPPER(DISTINCT HEX(t0.c0))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt1, vt0, t0 WHERE ((NOT (UPPER(DISTINCT HEX(t0.c0))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt1, vt0, t0 WHERE (((UPPER(DISTINCT HEX(t0.c0))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt1, vt0, t0 GROUP BY vt0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((t0.c0)||('61115T5210070695111715442:S'))) BETWEEN ((- (GROUP_CONCAT(t0.c0)))) AND (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((t0.c0)||('61115T5210070695111715442:S'))) BETWEEN ((- (GROUP_CONCAT(t0.c0)))) AND (COUNT(*))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((t0.c0)||('61115T5210070695111715442:S'))) BETWEEN ((- (GROUP_CONCAT(t0.c0)))) AND (COUNT(*)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((t0.c0)||('61115T5210070695111715442:S'))) BETWEEN ((- (GROUP_CONCAT(t0.c0)))) AND (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((t0.c0)||('61115T5210070695111715442:S'))) BETWEEN ((- (GROUP_CONCAT(t0.c0)))) AND (COUNT(*))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((t0.c0)||('61115T5210070695111715442:S'))) BETWEEN ((- (GROUP_CONCAT(t0.c0)))) AND (COUNT(*)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM vt1, t0 FULL OUTER JOIN vt0 ON ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE 'Xl' END) BETWEEN (vt1.c1) AND (((vt0.c0)GLOB(vt0.c1))));
SELECT ALL * FROM vt1, t0 FULL OUTER JOIN vt0 ON ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE 'Xl' END) BETWEEN (vt1.c1) AND (((vt0.c0)GLOB(vt0.c1)))) WHERE (CASE WHEN CAST(vt0.c1 AS REAL) THEN (((0.003741658259307945)) NOT BETWEEN ((t0.c0)) AND ((vt1.c1))) END) UNION ALL SELECT ALL * FROM vt1, t0 FULL OUTER JOIN vt0 ON ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE 'Xl' END) BETWEEN (vt1.c1) AND (((vt0.c0)GLOB(vt0.c1)))) WHERE ((NOT (CASE WHEN CAST(vt0.c1 AS REAL) THEN (((0.003741658259307945)) NOT BETWEEN ((t0.c0)) AND ((vt1.c1))) END))) UNION ALL SELECT ALL * FROM vt1, t0 FULL OUTER JOIN vt0 ON ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE 'Xl' END) BETWEEN (vt1.c1) AND (((vt0.c0)GLOB(vt0.c1)))) WHERE (((CASE WHEN CAST(vt0.c1 AS REAL) THEN (((0.003741658259307945)) NOT BETWEEN ((t0.c0)) AND ((vt1.c1))) END) ISNULL));
SELECT ALL * FROM vt1, t0 FULL OUTER JOIN vt0 ON ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE 'Xl' END) BETWEEN (vt1.c1) AND (((vt0.c0)GLOB(vt0.c1))));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0) NOT NULL)))<((CAST(vt0.c1 AS BLOB))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c0) NOT NULL)))<((CAST(vt0.c1 AS BLOB))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0) NOT NULL)))<((CAST(vt0.c1 AS BLOB))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1, t0.c0, vt1.c1, vt1.c0, vt0.c0 FROM vt0, t0 NATURAL JOIN vt1 GROUP BY vt0.c1, t0.c0, vt1.c1, vt1.c0, vt0.c0;
SELECT vt0.c1, t0.c0, vt1.c1, vt1.c0, vt0.c0 FROM vt0, t0 NATURAL JOIN vt1 WHERE (json_remove(((((((((vt0.c1)OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c0)), CASE WHEN t0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 END, UNICODE(x'74f7'), (- (0X51948df5)))) GROUP BY vt0.c1, t0.c0, vt1.c1, vt1.c0, vt0.c0 UNION SELECT ALL vt0.c1, t0.c0, vt1.c1, vt1.c0, vt0.c0 FROM vt0, t0 NATURAL JOIN vt1 WHERE ((NOT (json_remove(((((((((vt0.c1)OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c0)), CASE WHEN t0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 END, UNICODE(x'74f7'), (- (0x51948df5)))))) GROUP BY vt0.c1, t0.c0, vt1.c1, vt1.c0, vt0.c0 UNION SELECT ALL vt0.c1, t0.c0, vt1.c1, vt1.c0, vt0.c0 FROM vt0, t0 NATURAL JOIN vt1 WHERE (((json_remove(((((((((vt0.c1)OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c0)), CASE WHEN t0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 END, UNICODE(x'74f7'), (- (0x51948df5)))) ISNULL)) GROUP BY vt0.c1, t0.c0, vt1.c1, vt1.c0, vt0.c0;
SELECT ALL vt0.c1, t0.c0, vt1.c1, vt1.c0, vt0.c0 FROM vt0, t0 NATURAL JOIN vt1 GROUP BY vt0.c1, t0.c0, vt1.c1, vt1.c0, vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((NULL)+(((((GROUP_CONCAT(t0.c0))AND(GROUP_CONCAT(t0.c0))))OR(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((NULL)+(((((GROUP_CONCAT(t0.c0))AND(GROUP_CONCAT(t0.c0))))OR(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((NULL)+(((((GROUP_CONCAT(t0.c0))AND(GROUP_CONCAT(t0.c0))))OR(t0.c0))))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((NULL)+(((((GROUP_CONCAT(t0.c0))AND(GROUP_CONCAT(t0.c0))))OR(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((NULL)+(((((GROUP_CONCAT(t0.c0))AND(GROUP_CONCAT(t0.c0))))OR(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((NULL)+(((((GROUP_CONCAT(t0.c0))AND(GROUP_CONCAT(t0.c0))))OR(t0.c0))))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0 IN ())) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND ('0.6517770213644519'))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0 IN ())) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND ('0.6517770213644519'))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0 IN ())) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND ('0.6517770213644519'))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT vt1.c1 FROM vt1, t0 NOT INDEXED;
SELECT DISTINCT vt1.c1 FROM vt1, t0 WHERE (CASE vt1.c0  WHEN vt1.c1 THEN t0.c0 ELSE t0.c0 END COLLATE BINARY) UNION SELECT DISTINCT vt1.c1 FROM vt1, t0 WHERE ((NOT (CASE vt1.c0  WHEN vt1.c1 THEN t0.c0 ELSE t0.c0 END COLLATE BINARY))) UNION SELECT DISTINCT vt1.c1 FROM vt1, t0 WHERE (((CASE vt1.c0  WHEN vt1.c1 THEN t0.c0 ELSE t0.c0 END COLLATE BINARY) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt1, t0 NOT INDEXED;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((+ (vt1.c0)))%(((((vt1.c0)AND(vt1.c1)))AND(vt1.c1))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((+ (vt1.c0)))%(((((vt1.c0)AND(vt1.c1)))AND(vt1.c1))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((+ (vt1.c0)))%(((((vt1.c0)AND(vt1.c1)))AND(vt1.c1))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c1, vt0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c1, vt0.c0;
SELECT ALL vt1.c1, vt0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c1, vt0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL vt1.c1, vt0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c1, vt0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT vt1.c1, vt0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c1, vt0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL vt1.c1 FROM vt1;
SELECT ALL vt1.c1 FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))>>(CAST(vt1.c1 AS INTEGER)))) UNION ALL SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))>>(CAST(vt1.c1 AS INTEGER)))))) UNION ALL SELECT vt1.c1 FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))>>(CAST(vt1.c1 AS INTEGER)))) ISNULL));
SELECT ALL vt1.c1 FROM vt1;
SELECT DISTINCT * FROM t0, vt0, vt1;
SELECT DISTINCT * FROM t0, vt0, vt1 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)<=(CAST(vt1.c1 AS BLOB)))) UNION SELECT DISTINCT * FROM t0, vt0, vt1 WHERE ((NOT (((CASE WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)<=(CAST(vt1.c1 AS BLOB)))))) UNION SELECT DISTINCT * FROM t0, vt0, vt1 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)<=(CAST(vt1.c1 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM t0, vt0, vt1;
SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM vt0, t0 GROUP BY vt0.c1, t0.c0, vt0.c0;
SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM vt0, t0 WHERE (vt0.c1) GROUP BY vt0.c1, t0.c0, vt0.c0 UNION SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c1, t0.c0, vt0.c0 UNION SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM vt0, t0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c1, t0.c0, vt0.c0;
SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM vt0, t0 GROUP BY vt0.c1, t0.c0, vt0.c0;
SELECT vt0.c1, vt1.c1, vt1.c0, t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c1, vt1.c1, vt1.c0, t0.c0, vt0.c0;
SELECT ALL vt0.c1, vt1.c1, vt1.c0, t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c1, vt1.c1, vt1.c0, t0.c0, vt0.c0 HAVING (+ (GROUP_CONCAT(GROUP_CONCAT(t0.c0)))) UNION ALL SELECT vt0.c1, vt1.c1, vt1.c0, t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c1, vt1.c1, vt1.c0, t0.c0, vt0.c0 HAVING (NOT ((+ (GROUP_CONCAT(GROUP_CONCAT(t0.c0)))))) UNION ALL SELECT ALL vt0.c1, vt1.c1, vt1.c0, t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY vt0.c1, vt1.c1, vt1.c0, t0.c0, vt0.c0 HAVING (((+ (GROUP_CONCAT(GROUP_CONCAT(t0.c0))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((+ (vt0.c0)) IN ())) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((+ (vt0.c0)) IN ())))) UNION ALL SELECT * FROM vt0 WHERE (((((+ (vt0.c0)) IN ())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 WHERE (CAST((-1936072735 IN ()) AS INTEGER)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt0 WHERE ((NOT (CAST((-1936072735 IN ()) AS INTEGER)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt0 WHERE (((CAST((-1936072735 IN ()) AS INTEGER)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL vt1.c0, t0.c0, vt1.c1, vt0.c0, vt0.c1 FROM vt0, t0, vt1 GROUP BY vt1.c0, t0.c0, vt1.c1, vt0.c0, vt0.c1;
SELECT ALL vt1.c0, t0.c0, vt1.c1, vt0.c0, vt0.c1 FROM vt0, t0, vt1 GROUP BY vt1.c0, t0.c0, vt1.c1, vt0.c0, vt0.c1 HAVING MIN(TOTAL(vt1.c1)) UNION ALL SELECT ALL vt1.c0, t0.c0, vt1.c1, vt0.c0, vt0.c1 FROM vt0, t0, vt1 GROUP BY vt1.c0, t0.c0, vt1.c1, vt0.c0, vt0.c1 HAVING (NOT (MIN(TOTAL(vt1.c1)))) UNION ALL SELECT vt1.c0, t0.c0, vt1.c1, vt0.c0, vt0.c1 FROM vt0, t0, vt1 GROUP BY vt1.c0, t0.c0, vt1.c1, vt0.c0, vt0.c1 HAVING ((MIN(TOTAL(vt1.c1))) ISNULL);
SELECT * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (((((t0.c0 IN (NULL, t0.c0))))>(((~ (vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (((((t0.c0 IN (NULL, t0.c0))))>(((~ (vt0.c0)))))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c0 IN (NULL, t0.c0))))>(((~ (vt0.c0)))))) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c1)))AND('2072570843')))OR(vt1.c1)))OR(vt1.c1)))IS(TRIM(vt1.c0)))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (((((((((((vt1.c0)AND(vt1.c1)))AND('2072570843')))OR(vt1.c1)))OR(vt1.c1)))IS(TRIM(vt1.c0)))))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE (((((((((((((vt1.c0)AND(vt1.c1)))AND('2072570843')))OR(vt1.c1)))OR(vt1.c1)))IS(TRIM(vt1.c0)))) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT ALL t0.c0, vt1.c0 FROM t0 LEFT OUTER JOIN vt0 ON (((vt0.c0)!=(vt0.c0)) IN ()) FULL OUTER JOIN vt1 ON vt0.c0 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0 LEFT OUTER JOIN vt0 ON (((vt0.c0)!=(vt0.c0)) IN ()) FULL OUTER JOIN vt1 ON vt0.c0 WHERE ((NOT (CASE vt0.c1  WHEN vt0.c1 THEN '|z_L(逆#V' WHEN t0.c0 THEN vt1.c1 WHEN t0.c0 THEN vt0.c1 END))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM t0 LEFT OUTER JOIN vt0 ON (((vt0.c0)<>(vt0.c0)) IN ()) FULL OUTER JOIN vt1 ON vt0.c0 WHERE ((NOT ((NOT (CASE vt0.c1  WHEN vt0.c1 THEN '|z_L(逆#V' WHEN t0.c0 THEN vt1.c1 WHEN t0.c0 THEN vt0.c1 END))))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM t0 LEFT OUTER JOIN vt0 ON (((vt0.c0)<>(vt0.c0)) IN ()) FULL OUTER JOIN vt1 ON vt0.c0 WHERE ((((NOT (CASE vt0.c1  WHEN vt0.c1 THEN '|z_L(逆#V' WHEN t0.c0 THEN vt1.c1 WHEN t0.c0 THEN vt0.c1 END))) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0 LEFT OUTER JOIN vt0 ON (((vt0.c0)!=(vt0.c0)) IN ()) FULL OUTER JOIN vt1 ON vt0.c0 GROUP BY t0.c0, vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (~ ((COUNT(vt0.c1) IN (vt0.c1)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((~ ((COUNT(vt0.c1) IN (vt0.c1)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((~ ((COUNT(vt0.c1) IN (vt0.c1))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (~ ((COUNT(vt0.c1) IN (vt0.c1)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((~ ((COUNT(vt0.c1) IN (vt0.c1)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((~ ((COUNT(vt0.c1) IN (vt0.c1))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (1.103320939E9) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (1.103320939E9))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((1.103320939E9) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE PRINTF(vt0.c1, vt0.c1, vt0.c0)  WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c1) NOT NULL) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE PRINTF(vt0.c1, vt0.c1, vt0.c0)  WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c1) NOT NULL) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE PRINTF(vt0.c1, vt0.c1, vt0.c0)  WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c1) NOT NULL) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON vt0.c0 INNER JOIN t0 ON vt0.c0 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON vt0.c0 INNER JOIN t0 ON vt0.c0 WHERE (x'') GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON vt0.c0 INNER JOIN t0 ON vt0.c0 WHERE ((NOT (x''))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON vt0.c0 INNER JOIN t0 ON vt0.c0 WHERE (((x'') ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt0 LEFT OUTER JOIN vt1 ON vt0.c0 INNER JOIN t0 ON vt0.c0 GROUP BY vt1.c1;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON CASE WHEN t0.c0 THEN ((NULL)=(t0.c0)) ELSE (vt0.c0 IN ()) END;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON CASE WHEN t0.c0 THEN ((NULL)==(t0.c0)) ELSE (vt0.c0 IN ()) END WHERE (((((t0.c0) NOTNULL))<>('gwz'))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON CASE WHEN t0.c0 THEN ((NULL)==(t0.c0)) ELSE (vt0.c0 IN ()) END WHERE ((NOT (((((t0.c0) NOTNULL))!=('gwz'))))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON CASE WHEN t0.c0 THEN ((NULL)=(t0.c0)) ELSE (vt0.c0 IN ()) END WHERE (((((((t0.c0) NOTNULL))!=('gwz'))) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON CASE WHEN t0.c0 THEN ((NULL)=(t0.c0)) ELSE (vt0.c0 IN ()) END;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)) IN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)) IN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)) IN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt1.c0, vt1.c1, t0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt1.c1, t0.c0;
SELECT ALL vt1.c0, vt1.c1, t0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt1.c1, t0.c0 HAVING SUM(TOTAL(t0.c0)) UNION ALL SELECT vt1.c0, vt1.c1, t0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt1.c1, t0.c0 HAVING (NOT (SUM(TOTAL(t0.c0)))) UNION ALL SELECT ALL vt1.c0, vt1.c1, t0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt1.c1, t0.c0 HAVING ((SUM(TOTAL(t0.c0))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ('*N') UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ('*N'))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((('*N') ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0, vt1;
SELECT DISTINCT t0.c0 FROM t0, vt1 WHERE (((vt1.c1) IS TRUE)) UNION SELECT DISTINCT t0.c0 FROM t0, vt1 WHERE ((NOT (((vt1.c1) IS TRUE)))) UNION SELECT DISTINCT t0.c0 FROM t0, vt1 WHERE (((((vt1.c1) IS TRUE)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, vt1;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 WHERE (CAST(NULL AS TEXT)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t0, vt0 WHERE ((NOT (CAST(NULL AS TEXT)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t0, vt0 WHERE (((CAST(NULL AS TEXT)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT vt1.c1, vt1.c0 FROM vt1, t0 NOT INDEXED GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1, t0 GROUP BY vt1.c1, vt1.c0 HAVING ((AVG(TOTAL(vt1.c1))) NOTNULL) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1, t0 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (((AVG(TOTAL(vt1.c1))) NOTNULL))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1, t0 GROUP BY vt1.c1, vt1.c0 HAVING ((((AVG(TOTAL(vt1.c1))) NOTNULL)) ISNULL);
SELECT ALL * FROM t0, vt1;
SELECT * FROM t0, vt1 WHERE (((vt1.c0) IS TRUE)) UNION ALL SELECT ALL * FROM t0, vt1 WHERE ((NOT (((vt1.c0) IS TRUE)))) UNION ALL SELECT ALL * FROM t0, vt1 WHERE (((((vt1.c0) IS TRUE)) ISNULL));
SELECT ALL * FROM t0, vt1;
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0;
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((((0.748618088803767)>=(t0.c0)) IN ())) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT ((((0.748618088803767)>=(t0.c0)) IN ())))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((((((0.748618088803767)>=(t0.c0)) IN ())) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((x'' IN ())) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((x'' IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((x'' IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING GROUP_CONCAT(SUM(vt1.c0)) COLLATE NOCASE UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (GROUP_CONCAT(SUM(vt1.c0)) COLLATE NOCASE)) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((GROUP_CONCAT(SUM(vt1.c0)) COLLATE NOCASE) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CASE ((vt0.c1)&('0.1455252340522999'))  WHEN CAST(NULL AS TEXT) THEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END END) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c1)&('0.1455252340522999'))  WHEN CAST(NULL AS TEXT) THEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CASE ((vt0.c1)&('0.1455252340522999'))  WHEN CAST(NULL AS TEXT) THEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END END) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0, vt1.c1, vt1.c0 FROM vt0, t0, vt1;
SELECT DISTINCT vt0.c1, vt0.c0, vt1.c1, vt1.c0 FROM vt0, t0, vt1 WHERE ((((((vt1.c1 IN (t0.c0)))AND(vt0.c0)))AND(vt1.c1))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt1.c1, vt1.c0 FROM vt0, t0, vt1 WHERE ((NOT ((((((vt1.c1 IN (t0.c0)))AND(vt0.c0)))AND(vt1.c1))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt1.c1, vt1.c0 FROM vt0 NOT INDEXED, t0, vt1 WHERE ((((((((vt1.c1 IN (t0.c0)))AND(vt0.c0)))AND(vt1.c1))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, vt1.c1, vt1.c0 FROM vt0, t0, vt1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))AND(vt0.c0)))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (((((CAST(vt0.c0 AS REAL))AND(vt0.c0)))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((((((CAST(vt0.c0 AS REAL))AND(vt0.c0)))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((AVG(GROUP_CONCAT(vt0.c0))) ISNULL) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((AVG(GROUP_CONCAT(vt0.c0))) ISNULL))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((AVG(GROUP_CONCAT(vt0.c0))) ISNULL)) ISNULL);
SELECT ALL * FROM t0, vt1;
SELECT ALL * FROM t0, vt1 WHERE ((((((t0.c0)AND(t0.c0)))AND(t0.c0)) IN ())) UNION ALL SELECT ALL * FROM t0, vt1 WHERE ((NOT ((((((t0.c0)AND(t0.c0)))AND(t0.c0)) IN ())))) UNION ALL SELECT ALL * FROM t0, vt1 WHERE ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)) IN ())) ISNULL));
SELECT ALL * FROM t0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE (CASE NULL  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c1 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)>>(vt0.c1)) WHEN (((vt0.c1))>=((vt0.c0))) THEN vt0.c1 COLLATE BINARY WHEN (((vt0.c1))>=((vt0.c0))) THEN CASE WHEN vt0.c1 THEN 707409421 END WHEN vt0.c0 COLLATE NOCASE THEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE NULL  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c1 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)>>(vt0.c1)) WHEN (((vt0.c1))>=((vt0.c0))) THEN vt0.c1 COLLATE BINARY WHEN (((vt0.c1))>=((vt0.c0))) THEN CASE WHEN vt0.c1 THEN 707409421 END WHEN vt0.c0 COLLATE NOCASE THEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE NULL  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c1 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)>>(vt0.c1)) WHEN (((vt0.c1))>=((vt0.c0))) THEN vt0.c1 COLLATE BINARY WHEN (((vt0.c1))>=((vt0.c0))) THEN CASE WHEN vt0.c1 THEN 707409421 END WHEN vt0.c0 COLLATE NOCASE THEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c1, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c1;
SELECT ALL vt1.c1, vt0.c1 FROM vt0, vt1 WHERE (CASE WHEN ((vt0.c0)==(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0)) END) GROUP BY vt1.c1, vt0.c1 UNION SELECT vt1.c1, vt0.c1 FROM vt0, vt1 WHERE ((NOT (CASE WHEN ((vt0.c0)==(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0)) END))) GROUP BY vt1.c1, vt0.c1 UNION SELECT vt1.c1, vt0.c1 FROM vt0, vt1 WHERE (((CASE WHEN ((vt0.c0)=(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0)) END) ISNULL)) GROUP BY vt1.c1, vt0.c1;
SELECT ALL vt1.c1, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c1;
SELECT ALL vt1.c1, t0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN t0 ON (x'8f82' IN ('-571967690', 0x1c33d35d)) COLLATE RTRIM GROUP BY vt1.c1, t0.c0, vt1.c0;
SELECT ALL vt1.c1, t0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN t0 ON (x'8f82' IN ('-571967690', 0x1c33d35d)) COLLATE RTRIM GROUP BY vt1.c1, t0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c1, t0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN t0 ON (x'8f82' IN ('-571967690', 0X1c33d35d)) COLLATE RTRIM GROUP BY vt1.c1, t0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c1, t0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN t0 ON (x'8f82' IN ('-571967690', 0X1c33d35d)) COLLATE RTRIM GROUP BY vt1.c1, t0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c1, t0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN t0 ON (x'8f82' IN ('-571967690', 0x1c33d35d)) COLLATE RTRIM GROUP BY vt1.c1, t0.c0, vt1.c0;
SELECT ALL vt1.c1, t0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN t0 ON (x'8f82' IN ('-571967690', 0x1c33d35d)) COLLATE RTRIM GROUP BY vt1.c1, t0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c1, t0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN t0 ON (x'8f82' IN ('-571967690', 0X1c33d35d)) COLLATE RTRIM GROUP BY vt1.c1, t0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c1, t0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN t0 ON (x'8f82' IN ('-571967690', 0X1c33d35d)) COLLATE RTRIM GROUP BY vt1.c1, t0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c1, t0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN t0 ON (x'8f82' IN ('-571967690', 0x1c33d35d)) COLLATE RTRIM GROUP BY vt1.c1, t0.c0, vt1.c0;
SELECT * FROM vt1, t0;
SELECT ALL * FROM vt1, t0 WHERE (((CAST(vt1.c1 AS BLOB))&(((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))OR(t0.c0)))AND(vt1.c0))))) ORDER BY ((((((((((((((t0.c0)OR(vt1.c1)))OR(((vt1.c0)&(t0.c0)))))AND(((t0.c0) NOT NULL))))OR(CAST(vt1.c0 AS REAL))))AND((vt1.c0 IN (t0.c0, t0.c0)))))OR(((vt1.c0)OR(t0.c0)))))AND(((vt1.c0)|(vt1.c1)))), NULL  NULLS FIRST, LIKELIHOOD(t0.c0, 0.965363401480733) DESC;
SELECT * FROM vt1, t0 WHERE ((NOT (((CAST(vt1.c1 AS BLOB))&(((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))OR(t0.c0)))AND(vt1.c0))))))) ORDER BY ((((((((((((((t0.c0)OR(vt1.c1)))OR(((vt1.c0)&(t0.c0)))))AND(((t0.c0) NOT NULL))))OR(CAST(vt1.c0 AS REAL))))AND((vt1.c0 IN (t0.c0, t0.c0)))))OR(((vt1.c0)OR(t0.c0)))))AND(((vt1.c0)|(vt1.c1)))), NULL  NULLS FIRST, LIKELIHOOD(t0.c0, 0.965363401480733) DESC;
SELECT ALL * FROM vt1, t0 WHERE (((((CAST(vt1.c1 AS BLOB))&(((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))OR(t0.c0)))AND(vt1.c0))))) ISNULL)) ORDER BY ((((((((((((((t0.c0)OR(vt1.c1)))OR(((vt1.c0)&(t0.c0)))))AND(((t0.c0) NOT NULL))))OR(CAST(vt1.c0 AS REAL))))AND((vt1.c0 IN (t0.c0, t0.c0)))))OR(((vt1.c0)OR(t0.c0)))))AND(((vt1.c0)|(vt1.c1)))), NULL  NULLS FIRST, LIKELIHOOD(t0.c0, 0.965363401480733) DESC;
SELECT * FROM vt1, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS TEXT)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS TEXT)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL vt1.c1, vt0.c1, vt0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c1, vt0.c1, vt0.c0;
SELECT ALL vt1.c1, vt0.c1, vt0.c0 FROM vt1, vt0, t0 WHERE (((vt0.c0)-(vt1.c1)) COLLATE NOCASE) GROUP BY vt1.c1, vt0.c1, vt0.c0 UNION SELECT vt1.c1, vt0.c1, vt0.c0 FROM vt1, vt0, t0 WHERE ((NOT (((vt0.c0)-(vt1.c1)) COLLATE NOCASE))) GROUP BY vt1.c1, vt0.c1, vt0.c0 UNION SELECT ALL vt1.c1, vt0.c1, vt0.c0 FROM vt1, vt0, t0 WHERE (((((vt0.c0)-(vt1.c1)) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c1, vt0.c1, vt0.c0;
SELECT ALL vt1.c1, vt0.c1, vt0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c1, vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING '' UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ('')) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (('') ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING '' UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ('')) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (('') ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT SUM(0X64661a4) FROM vt1, vt0, t0;
SELECT * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE ((+ (CASE vt0.c0  WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt1.c1 END))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((+ (CASE vt0.c0  WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt1.c1 END))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((((+ (CASE vt0.c0  WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt1.c1 END))) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c1)||(vt0.c1)))<<(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c1)||(vt0.c1)))<<(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c1)||(vt0.c1)))<<(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt1.c0 FROM t0 CROSS JOIN vt1 ON (+ (CAST(vt1.c0 AS NUMERIC))) LEFT OUTER JOIN vt0 ON vt1.c0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0 CROSS JOIN vt1 ON (+ (CAST(vt1.c0 AS NUMERIC))) LEFT OUTER JOIN vt0 ON vt1.c0 WHERE (CASE WHEN ((t0.c0)<(vt0.c0)) THEN (vt1.c1 IN ()) ELSE ((0.8732130544862848)GLOB(vt0.c0)) END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t0 CROSS JOIN vt1 ON (+ (CAST(vt1.c0 AS NUMERIC))) LEFT OUTER JOIN vt0 ON vt1.c0 WHERE ((NOT (CASE WHEN ((t0.c0)<(vt0.c0)) THEN (vt1.c1 IN ()) ELSE ((0.8732130544862848)GLOB(vt0.c0)) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t0 CROSS JOIN vt1 ON (+ (CAST(vt1.c0 AS NUMERIC))) LEFT OUTER JOIN vt0 ON vt1.c0 WHERE (((CASE WHEN ((t0.c0)<(vt0.c0)) THEN (vt1.c1 IN ()) ELSE ((0.8732130544862848)GLOB(vt0.c0)) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0 CROSS JOIN vt1 ON (+ (CAST(vt1.c0 AS NUMERIC))) LEFT OUTER JOIN vt0 ON vt1.c0 GROUP BY vt1.c0;
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING vt1.c1 UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT (vt1.c1)) UNION ALL SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING ((vt1.c1) ISNULL);
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING vt1.c1 UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT (vt1.c1)) UNION ALL SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING ((vt1.c1) ISNULL);
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt1;
SELECT ALL t0.c0 FROM t0, vt1 WHERE (vt1.c1) UNION ALL SELECT t0.c0 FROM t0, vt1 WHERE ((NOT (vt1.c1))) UNION ALL SELECT t0.c0 FROM t0, vt1 WHERE (((vt1.c1) ISNULL));
SELECT t0.c0 FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE ((UPPER(vt0.c0) IN ())) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT ((UPPER(vt0.c0) IN ())))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((((UPPER(vt0.c0) IN ())) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((~ (CAST(vt1.c0 AS TEXT)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((~ (CAST(vt1.c0 AS TEXT)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((~ (CAST(vt1.c0 AS TEXT)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING GROUP_CONCAT(((vt0.c0)OR(vt0.c0))) UNION ALL SELECT vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(((vt0.c0)OR(vt0.c0))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(((vt0.c0)OR(vt0.c0)))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING GROUP_CONCAT(((vt0.c0)OR(vt0.c0))) UNION ALL SELECT vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(((vt0.c0)OR(vt0.c0))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(((vt0.c0)OR(vt0.c0)))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (0.22301925010117007 COLLATE BINARY) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (0.22301925010117007 COLLATE BINARY))) UNION ALL SELECT * FROM vt0 WHERE (((0.22301925010117007 COLLATE BINARY) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (0.7910457087735413) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (0.7910457087735413))) UNION SELECT DISTINCT * FROM t0 WHERE (((0.7910457087735413) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 FULL OUTER JOIN t0 ON (+ ((vt1.c0 IN ()))) GROUP BY t0.c0, vt0.c0, vt1.c0, vt0.c1;
SELECT ALL t0.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 FULL OUTER JOIN t0 ON (+ ((vt1.c0 IN ()))) WHERE ((((vt0.c1 IN (vt1.c1, vt0.c1)))=(t0.c0))) GROUP BY t0.c0, vt0.c0, vt1.c0, vt0.c1 UNION SELECT t0.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 FULL OUTER JOIN t0 ON (+ ((vt1.c0 IN ()))) WHERE ((NOT ((((vt0.c1 IN (vt1.c1, vt0.c1)))=(t0.c0))))) GROUP BY t0.c0, vt0.c0, vt1.c0, vt0.c1 UNION SELECT ALL t0.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 FULL OUTER JOIN t0 ON (+ ((vt1.c0 IN ()))) WHERE ((((((vt0.c1 IN (vt1.c1, vt0.c1)))=(t0.c0))) ISNULL)) GROUP BY t0.c0, vt0.c0, vt1.c0, vt0.c1;
SELECT t0.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 FULL OUTER JOIN t0 ON (+ ((vt1.c0 IN ()))) GROUP BY t0.c0, vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt1.c1, vt1.c0 FROM vt1, t0 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1, t0 GROUP BY vt1.c1, vt1.c0 HAVING GROUP_CONCAT(AVG(AVG(vt1.c1))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1, t0 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (GROUP_CONCAT(AVG(AVG(vt1.c1))))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1, t0 GROUP BY vt1.c1, vt1.c0 HAVING ((GROUP_CONCAT(AVG(AVG(vt1.c1)))) ISNULL);
SELECT ALL * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)) AS INTEGER)) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)) AS INTEGER)))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)) AS INTEGER)) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt1.c1, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0, vt0.c1;
SELECT ALL vt1.c1, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 WHERE (CAST((((vt1.c0, vt1.c1, vt0.c1))<=((vt0.c1, vt1.c1, vt1.c1))) AS NUMERIC)) GROUP BY vt1.c1, vt1.c0, vt0.c0, vt0.c1 UNION SELECT ALL vt1.c1, vt1.c0, vt0.c0, vt0.c1 FROM vt1 NOT INDEXED, vt0 WHERE ((NOT (CAST((((vt1.c0, vt1.c1, vt0.c1))<=((vt0.c1, vt1.c1, vt1.c1))) AS NUMERIC)))) GROUP BY vt1.c1, vt1.c0, vt0.c0, vt0.c1 UNION SELECT vt1.c1, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 WHERE (((CAST((((vt1.c0, vt1.c1, vt0.c1))<=((vt0.c1, vt1.c1, vt1.c1))) AS NUMERIC)) ISNULL)) GROUP BY vt1.c1, vt1.c0, vt0.c0, vt0.c1;
SELECT ALL vt1.c1, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c1, vt1.c0, vt0.c0, vt0.c1;
SELECT t0.c0 FROM vt1 INNER JOIN t0 ON CASE WHEN (- (vt1.c1)) THEN CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN t0.c0 ELSE '' END WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))) THEN (vt1.c0 IN ()) WHEN ((vt1.c0)||(t0.c0)) THEN ((vt1.c1) NOT NULL) WHEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt1.c1 AS REAL) WHEN ((vt1.c0)&(vt1.c0)) THEN CAST(t0.c0 AS TEXT) ELSE (((vt1.c1, x'', t0.c0))>=((t0.c0, vt1.c1, vt1.c1))) END GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1 INNER JOIN t0 ON CASE WHEN (- (vt1.c1)) THEN CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN t0.c0 ELSE '' END WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))) THEN (vt1.c0 IN ()) WHEN ((vt1.c0)||(t0.c0)) THEN ((vt1.c1) NOT NULL) WHEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt1.c1 AS REAL) WHEN ((vt1.c0)&(vt1.c0)) THEN CAST(t0.c0 AS TEXT) ELSE (((vt1.c1, x'', t0.c0))>=((t0.c0, vt1.c1, vt1.c1))) END GROUP BY t0.c0 HAVING TOTAL(MAX(MIN(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM vt1 INNER JOIN t0 ON CASE WHEN (- (vt1.c1)) THEN CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN t0.c0 ELSE '' END WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))) THEN (vt1.c0 IN ()) WHEN ((vt1.c0)||(t0.c0)) THEN ((vt1.c1) NOT NULL) WHEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt1.c1 AS REAL) WHEN ((vt1.c0)&(vt1.c0)) THEN CAST(t0.c0 AS TEXT) ELSE (((vt1.c1, x'', t0.c0))>=((t0.c0, vt1.c1, vt1.c1))) END GROUP BY t0.c0 HAVING (NOT (TOTAL(MAX(MIN(t0.c0))))) UNION ALL SELECT t0.c0 FROM vt1 INNER JOIN t0 ON CASE WHEN (- (vt1.c1)) THEN CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN t0.c0 ELSE '' END WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))) THEN (vt1.c0 IN ()) WHEN ((vt1.c0)||(t0.c0)) THEN ((vt1.c1) NOT NULL) WHEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt1.c1 AS REAL) WHEN ((vt1.c0)&(vt1.c0)) THEN CAST(t0.c0 AS TEXT) ELSE (((vt1.c1, x'', t0.c0))>=((t0.c0, vt1.c1, vt1.c1))) END GROUP BY t0.c0 HAVING ((TOTAL(MAX(MIN(t0.c0)))) ISNULL);
SELECT vt1.c0, vt1.c1 FROM vt1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((PRINTF(vt1.c0, vt1.c1, vt1.c1))) AND ((((vt1.c0)-(vt1.c0)))))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((PRINTF(vt1.c0, vt1.c1, vt1.c1))) AND ((((vt1.c0)-(vt1.c0)))))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((PRINTF(vt1.c0, vt1.c1, vt1.c1))) AND ((((vt1.c0)-(vt1.c0)))))) ISNULL));
SELECT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT * FROM vt0, t0, vt1;
SELECT DISTINCT * FROM vt0 NOT INDEXED, t0, vt1 WHERE (vt1.c1) UNION SELECT DISTINCT * FROM vt0, t0, vt1 WHERE ((NOT (vt1.c1))) UNION SELECT DISTINCT * FROM vt0, t0, vt1 WHERE (((vt1.c1) ISNULL));
SELECT DISTINCT * FROM vt0, t0, vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((('471939182')!=(vt0.c1)) COLLATE NOCASE) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((('471939182')<>(vt0.c1)) COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((('471939182')!=(vt0.c1)) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0, t0.c0, vt1.c1 FROM vt1 RIGHT OUTER JOIN t0 ON ((NULLIF(vt1.c1, vt1.c1))==(((vt1.c0) NOTNULL))) GROUP BY vt1.c0, t0.c0, vt1.c1;
SELECT vt1.c0, t0.c0, vt1.c1 FROM vt1 RIGHT OUTER JOIN t0 ON ((NULLIF(vt1.c1, vt1.c1))==(((vt1.c0) NOTNULL))) GROUP BY vt1.c0, t0.c0, vt1.c1 HAVING ((COUNT(*))+(t0.c0)) UNION ALL SELECT ALL vt1.c0, t0.c0, vt1.c1 FROM vt1 RIGHT OUTER JOIN t0 ON ((NULLIF(vt1.c1, vt1.c1))==(((vt1.c0) NOTNULL))) GROUP BY vt1.c0, t0.c0, vt1.c1 HAVING (NOT (((COUNT(*))+(t0.c0)))) UNION ALL SELECT vt1.c0, t0.c0, vt1.c1 FROM vt1 RIGHT OUTER JOIN t0 ON ((NULLIF(vt1.c1, vt1.c1))==(((vt1.c0) NOTNULL))) GROUP BY vt1.c0, t0.c0, vt1.c1 HAVING ((((COUNT(*))+(t0.c0))) ISNULL);
SELECT vt1.c0, t0.c0, vt1.c1 FROM vt1 RIGHT OUTER JOIN t0 ON ((NULLIF(vt1.c1, vt1.c1))==(((vt1.c0) NOTNULL))) GROUP BY vt1.c0, t0.c0, vt1.c1;
SELECT vt1.c0, t0.c0, vt1.c1 FROM vt1 RIGHT OUTER JOIN t0 ON ((NULLIF(vt1.c1, vt1.c1))==(((vt1.c0) NOTNULL))) GROUP BY vt1.c0, t0.c0, vt1.c1 HAVING ((COUNT(*))+(t0.c0)) UNION ALL SELECT ALL vt1.c0, t0.c0, vt1.c1 FROM vt1 RIGHT OUTER JOIN t0 ON ((NULLIF(vt1.c1, vt1.c1))==(((vt1.c0) NOTNULL))) GROUP BY vt1.c0, t0.c0, vt1.c1 HAVING (NOT (((COUNT(*))+(t0.c0)))) UNION ALL SELECT vt1.c0, t0.c0, vt1.c1 FROM vt1 RIGHT OUTER JOIN t0 ON ((NULLIF(vt1.c1, vt1.c1))==(((vt1.c0) NOTNULL))) GROUP BY vt1.c0, t0.c0, vt1.c1 HAVING ((((COUNT(*))+(t0.c0))) ISNULL);
SELECT vt1.c0, t0.c0, vt1.c1 FROM vt1 RIGHT OUTER JOIN t0 ON ((NULLIF(vt1.c1, vt1.c1))==(((vt1.c0) NOTNULL))) GROUP BY vt1.c0, t0.c0, vt1.c1;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.32553389525799137)))) NOT BETWEEN (t0.c0) AND (CAST(0Xf8e9006 AS INTEGER)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.32553389525799137)))) NOT BETWEEN (t0.c0) AND (CAST(0xf8e9006 AS INTEGER)))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.32553389525799137)))) NOT BETWEEN (t0.c0) AND (CAST(0xf8e9006 AS INTEGER)))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT (((vt0.c1)||(vt0.c0))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT ((NOT (((vt0.c1)||(vt0.c0))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM t0, vt0 WHERE ((((NOT (((vt0.c1)||(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, t0.c0 FROM t0, vt0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (vt1.c1) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (vt1.c1))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (((vt1.c1) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING MIN(MAX(vt1.c0)) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (MIN(MAX(vt1.c0)))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((MIN(MAX(vt1.c0))) ISNULL);
SELECT * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (((TRIM(vt0.c0)) IS TRUE)) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT (((TRIM(vt0.c0)) IS TRUE)))) UNION ALL SELECT * FROM vt0, t0 WHERE (((((TRIM(vt0.c0)) IS TRUE)) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (((vt0.c0) NOTNULL) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((((vt0.c0) NOTNULL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT t0.c0, vt0.c0, vt1.c0, vt0.c1 FROM t0, vt1, vt0 GROUP BY t0.c0, vt0.c0, vt1.c0, vt0.c1;
SELECT t0.c0, vt0.c0, vt1.c0, vt0.c1 FROM t0, vt1, vt0 WHERE ((NOT (vt1.c0 COLLATE RTRIM))) GROUP BY t0.c0, vt0.c0, vt1.c0, vt0.c1 UNION SELECT t0.c0, vt0.c0, vt1.c0, vt0.c1 FROM t0, vt1, vt0 WHERE ((NOT ((NOT (vt1.c0 COLLATE RTRIM))))) GROUP BY t0.c0, vt0.c0, vt1.c0, vt0.c1 UNION SELECT ALL t0.c0, vt0.c0, vt1.c0, vt0.c1 FROM t0, vt1, vt0 WHERE ((((NOT (vt1.c0 COLLATE RTRIM))) ISNULL)) GROUP BY t0.c0, vt0.c0, vt1.c0, vt0.c1;
SELECT t0.c0, vt0.c0, vt1.c0, vt0.c1 FROM t0, vt1, vt0 GROUP BY t0.c0, vt0.c0, vt1.c0, vt0.c1;
SELECT vt1.c0, t0.c0, vt1.c1 FROM vt1, t0 GROUP BY vt1.c0, t0.c0, vt1.c1;
SELECT vt1.c0, t0.c0, vt1.c1 FROM vt1, t0 GROUP BY vt1.c0, t0.c0, vt1.c1 HAVING 0.2747534114287581 UNION ALL SELECT vt1.c0, t0.c0, vt1.c1 FROM vt1, t0 GROUP BY vt1.c0, t0.c0, vt1.c1 HAVING (NOT (0.2747534114287581)) UNION ALL SELECT vt1.c0, t0.c0, vt1.c1 FROM vt1, t0 GROUP BY vt1.c0, t0.c0, vt1.c1 HAVING ((0.2747534114287581) ISNULL);
SELECT vt1.c0, t0.c0, vt1.c1 FROM vt1, t0 GROUP BY vt1.c0, t0.c0, vt1.c1;
SELECT vt1.c0, t0.c0, vt1.c1 FROM vt1, t0 GROUP BY vt1.c0, t0.c0, vt1.c1 HAVING 0.2747534114287581 UNION ALL SELECT vt1.c0, t0.c0, vt1.c1 FROM vt1, t0 GROUP BY vt1.c0, t0.c0, vt1.c1 HAVING (NOT (0.2747534114287581)) UNION ALL SELECT vt1.c0, t0.c0, vt1.c1 FROM vt1, t0 GROUP BY vt1.c0, t0.c0, vt1.c1 HAVING ((0.2747534114287581) ISNULL);
SELECT vt1.c0, t0.c0, vt1.c1 FROM vt1, t0 GROUP BY vt1.c0, t0.c0, vt1.c1;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (LOWER(((((t0.c0)OR(t0.c0)))AND(NULL)))) UNION ALL SELECT * FROM t0 WHERE ((NOT (LOWER(((((t0.c0)OR(t0.c0)))AND(NULL)))))) UNION ALL SELECT ALL * FROM t0 WHERE (((LOWER(((((t0.c0)OR(t0.c0)))AND(NULL)))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))IS NOT(vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))IS NOT(vt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))IS NOT(vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c1 FROM t0 NATURAL JOIN vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM t0 NATURAL JOIN vt1 WHERE (t0.c0) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM t0 NATURAL JOIN vt1 WHERE ((NOT (t0.c0))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM t0 NATURAL JOIN vt1 WHERE (((t0.c0) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM t0 NATURAL JOIN vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 INNER JOIN vt0 ON vt0.c1 INNER JOIN t0 ON ((((vt1.c0 COLLATE BINARY)AND(vt0.c1 COLLATE RTRIM)))OR(vt0.c1 COLLATE RTRIM)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 INNER JOIN vt0 ON vt0.c1 INNER JOIN t0 ON ((((vt1.c0 COLLATE BINARY)AND(vt0.c1 COLLATE RTRIM)))OR(vt0.c1 COLLATE RTRIM)) GROUP BY vt1.c0, vt1.c1 HAVING ((CAST(vt1.c1 AS REAL)) ISNULL) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 INNER JOIN vt0 ON vt0.c1 INNER JOIN t0 ON ((((vt1.c0 COLLATE BINARY)AND(vt0.c1 COLLATE RTRIM)))OR(vt0.c1 COLLATE RTRIM)) GROUP BY vt1.c0, vt1.c1 HAVING (NOT (((CAST(vt1.c1 AS REAL)) ISNULL))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 INNER JOIN vt0 ON vt0.c1 INNER JOIN t0 ON ((((vt1.c0 COLLATE BINARY)AND(vt0.c1 COLLATE RTRIM)))OR(vt0.c1 COLLATE RTRIM)) GROUP BY vt1.c0, vt1.c1 HAVING ((((CAST(vt1.c1 AS REAL)) ISNULL)) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1 INNER JOIN vt0 ON vt0.c1 INNER JOIN t0 ON ((((vt1.c0 COLLATE BINARY)AND(vt0.c1 COLLATE RTRIM)))OR(vt0.c1 COLLATE RTRIM)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 INNER JOIN vt0 ON vt0.c1 INNER JOIN t0 ON ((((vt1.c0 COLLATE BINARY)AND(vt0.c1 COLLATE RTRIM)))OR(vt0.c1 COLLATE RTRIM)) GROUP BY vt1.c0, vt1.c1 HAVING ((CAST(vt1.c1 AS REAL)) ISNULL) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 INNER JOIN vt0 ON vt0.c1 INNER JOIN t0 ON ((((vt1.c0 COLLATE BINARY)AND(vt0.c1 COLLATE RTRIM)))OR(vt0.c1 COLLATE RTRIM)) GROUP BY vt1.c0, vt1.c1 HAVING (NOT (((CAST(vt1.c1 AS REAL)) ISNULL))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 INNER JOIN vt0 ON vt0.c1 INNER JOIN t0 ON ((((vt1.c0 COLLATE BINARY)AND(vt0.c1 COLLATE RTRIM)))OR(vt0.c1 COLLATE RTRIM)) GROUP BY vt1.c0, vt1.c1 HAVING ((((CAST(vt1.c1 AS REAL)) ISNULL)) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1 INNER JOIN vt0 ON vt0.c1 INNER JOIN t0 ON ((((vt1.c0 COLLATE BINARY)AND(vt0.c1 COLLATE RTRIM)))OR(vt0.c1 COLLATE RTRIM)) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (CASE WHEN (('㋇Hq6') NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN ((vt1.c0) NOT NULL) END) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (CASE WHEN (('㋇Hq6') NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN ((vt1.c0) NOT NULL) END))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((CASE WHEN (('㋇Hq6') NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN ((vt1.c0) NOT NULL) END) ISNULL));
SELECT ALL vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT * FROM vt1, t0, vt0;
SELECT DISTINCT * FROM vt1, t0, vt0 WHERE (((((((t0.c0) NOT NULL))AND(((((x'')AND(vt0.c1)))AND(vt0.c0)))))OR(((t0.c0)OR(vt0.c0))))) UNION SELECT DISTINCT * FROM vt1, t0, vt0 WHERE ((NOT (((((((t0.c0) NOT NULL))AND(((((x'')AND(vt0.c1)))AND(vt0.c0)))))OR(((t0.c0)OR(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt1, t0, vt0 WHERE (((((((((t0.c0) NOT NULL))AND(((((x'')AND(vt0.c1)))AND(vt0.c0)))))OR(((t0.c0)OR(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, t0, vt0;
SELECT vt1.c1 FROM vt0, vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt0, vt1 WHERE (json_array_length(vt1.c0, ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt0, vt1 WHERE ((NOT (json_array_length(vt1.c0, ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt0, vt1 WHERE (((json_array_length(vt1.c0, ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)))) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1, vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c1, vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c1, vt0.c0 HAVING MIN(SUM(MIN(SUM(vt0.c1)))) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c1, vt0.c0 HAVING (NOT (MIN(SUM(MIN(SUM(vt0.c1)))))) UNION ALL SELECT vt1.c1, vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c1, vt0.c0 HAVING ((MIN(SUM(MIN(SUM(vt0.c1))))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST((vt0.c1 IN ()) AS INTEGER)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST((vt0.c1 IN ()) AS INTEGER)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST((vt0.c1 IN ()) AS INTEGER)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON CASE WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END THEN (vt0.c0 IN ()) END;
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON CASE WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END THEN (vt0.c0 IN ()) END WHERE (TIME(t0.c0, vt0.c1, ((vt0.c1)LIKE(t0.c0)))) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON CASE WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END THEN (vt0.c0 IN ()) END WHERE ((NOT (TIME(t0.c0, vt0.c1, ((vt0.c1)LIKE(t0.c0)))))) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON CASE WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END THEN (vt0.c0 IN ()) END WHERE (((TIME(t0.c0, vt0.c1, ((vt0.c1)LIKE(t0.c0)))) ISNULL));
SELECT DISTINCT * FROM t0 INNER JOIN vt0 ON CASE WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END THEN (vt0.c0 IN ()) END;
SELECT vt1.c1 FROM vt0, t0, vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt0, t0, vt1 WHERE ('Y<' COLLATE NOCASE) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt0, t0, vt1 WHERE ((NOT ('Y<' COLLATE NOCASE))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt0, t0, vt1 WHERE ((('Y<' COLLATE NOCASE) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt0, t0, vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(vt1.c0))IS NOT(MIN(TOTAL(vt1.c1)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT(vt1.c0))IS NOT(MIN(TOTAL(vt1.c1)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(vt1.c0))IS NOT(MIN(TOTAL(vt1.c1))))) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOTNULL))==(CAST(vt1.c0 AS NUMERIC)))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) NOTNULL))=(CAST(vt1.c0 AS NUMERIC)))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (((((((vt1.c0) NOTNULL))==(CAST(vt1.c0 AS NUMERIC)))) ISNULL));
SELECT ALL vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (json(ABS(vt0.c0))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (json(ABS(vt0.c0))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((json(ABS(vt0.c0))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((COALESCE(DISTINCT vt0.c1, vt0.c0) IN (((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)), vt0.c0))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((COALESCE(DISTINCT vt0.c1, vt0.c0) IN (((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)), vt0.c0))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((COALESCE(DISTINCT vt0.c1, vt0.c0) IN (((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)), vt0.c0))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c1, vt1.c0, vt1.c1 FROM vt0 CROSS JOIN vt1 ON ((((((vt1.c0)AND(vt0.c1)))AND(vt1.c1))) NOTNULL) GROUP BY vt0.c1, vt1.c0, vt1.c1;
SELECT ALL vt0.c1, vt1.c0, vt1.c1 FROM vt0 CROSS JOIN vt1 ON ((((((vt1.c0)AND(vt0.c1)))AND(vt1.c1))) NOTNULL) GROUP BY vt0.c1, vt1.c0, vt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt1.c1 FROM vt0 CROSS JOIN vt1 ON ((((((vt1.c0)AND(vt0.c1)))AND(vt1.c1))) NOTNULL) GROUP BY vt0.c1, vt1.c0, vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt1.c1 FROM vt0 CROSS JOIN vt1 ON ((((((vt1.c0)AND(vt0.c1)))AND(vt1.c1))) NOTNULL) GROUP BY vt0.c1, vt1.c0, vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, vt1.c0, vt1.c1 FROM vt0 CROSS JOIN vt1 ON ((((((vt1.c0)AND(vt0.c1)))AND(vt1.c1))) NOTNULL) GROUP BY vt0.c1, vt1.c0, vt1.c1;
SELECT ALL vt0.c1, vt1.c0, vt1.c1 FROM vt0 CROSS JOIN vt1 ON ((((((vt1.c0)AND(vt0.c1)))AND(vt1.c1))) NOTNULL) GROUP BY vt0.c1, vt1.c0, vt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt1.c1 FROM vt0 CROSS JOIN vt1 ON ((((((vt1.c0)AND(vt0.c1)))AND(vt1.c1))) NOTNULL) GROUP BY vt0.c1, vt1.c0, vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt1.c1 FROM vt0 CROSS JOIN vt1 ON ((((((vt1.c0)AND(vt0.c1)))AND(vt1.c1))) NOTNULL) GROUP BY vt0.c1, vt1.c0, vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, vt1.c0, vt1.c1 FROM vt0 CROSS JOIN vt1 ON ((((((vt1.c0)AND(vt0.c1)))AND(vt1.c1))) NOTNULL) GROUP BY vt0.c1, vt1.c0, vt1.c1;
SELECT * FROM vt1 NOT INDEXED;
SELECT ALL * FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c1)))AND(vt1.c1)) AS TEXT)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CAST(((((vt1.c0)OR(vt1.c1)))AND(vt1.c1)) AS TEXT)))) UNION ALL SELECT * FROM vt1 WHERE (((CAST(((((vt1.c0)OR(vt1.c1)))AND(vt1.c1)) AS TEXT)) ISNULL));
SELECT * FROM vt1 NOT INDEXED;
SELECT DISTINCT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((~ (((vt1.c0) ISNULL)))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((~ (((vt1.c0) ISNULL)))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((~ (((vt1.c0) ISNULL)))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT vt1.c0, vt0.c0, t0.c0 FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((TYPEOF(DISTINCT vt0.c0))>(((vt1.c1) BETWEEN (vt0.c0) AND (t0.c0)))) GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT vt1.c0, vt0.c0, t0.c0 FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((TYPEOF(DISTINCT vt0.c0))>(((vt1.c1) BETWEEN (vt0.c0) AND (t0.c0)))) WHERE ((((vt1.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND (((+ (t0.c0)))))) GROUP BY vt1.c0, vt0.c0, t0.c0 UNION SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((TYPEOF(DISTINCT vt0.c0))>(((vt1.c1) BETWEEN (vt0.c0) AND (t0.c0)))) WHERE ((NOT ((((vt1.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND (((+ (t0.c0)))))))) GROUP BY vt1.c0, vt0.c0, t0.c0 UNION SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((TYPEOF(DISTINCT vt0.c0))>(((vt1.c1) BETWEEN (vt0.c0) AND (t0.c0)))) WHERE ((((((vt1.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND (((+ (t0.c0)))))) ISNULL)) GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT vt1.c0, vt0.c0, t0.c0 FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((TYPEOF(DISTINCT vt0.c0))>(((vt1.c1) BETWEEN (vt0.c0) AND (t0.c0)))) GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))) IS FALSE) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING (NOT (((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))) IS FALSE))) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))) IS FALSE)) ISNULL);
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))) IS FALSE) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING (NOT (((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))) IS FALSE))) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))) IS FALSE)) ISNULL);
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT ALL SUM((((vt0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0)))) FROM vt0, t0, vt1 ORDER BY CAST(CAST(t0.c0 AS NUMERIC) AS TEXT) ASC;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (ABS(DISTINCT (~ (vt0.c1)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (ABS(DISTINCT (~ (vt0.c1)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((ABS(DISTINCT (~ (vt0.c1)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt1, vt0;
SELECT DISTINCT vt0.c1 FROM vt1, vt0 WHERE (LIKELY(((((vt0.c0)OR(vt0.c0)))OR(vt1.c1)))) UNION SELECT DISTINCT vt0.c1 FROM vt1, vt0 WHERE ((NOT (LIKELY(((((vt0.c0)OR(vt0.c0)))OR(vt1.c1)))))) UNION SELECT DISTINCT vt0.c1 FROM vt1, vt0 WHERE (((LIKELY(((((vt0.c0)OR(vt0.c0)))OR(vt1.c1)))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt1, vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT)) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT)) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt1.c1, vt0.c1 FROM vt0, t0, vt1 GROUP BY vt1.c1, vt0.c1;
SELECT ALL vt1.c1, vt0.c1 FROM vt0, t0, vt1 GROUP BY vt1.c1, vt0.c1 HAVING (((vt1.c1)OR(GROUP_CONCAT(vt0.c0))) IN ()) UNION ALL SELECT vt1.c1, vt0.c1 FROM vt0, t0, vt1 GROUP BY vt1.c1, vt0.c1 HAVING (NOT ((((vt1.c1)OR(GROUP_CONCAT(vt0.c0))) IN ()))) UNION ALL SELECT ALL vt1.c1, vt0.c1 FROM vt0, t0, vt1 GROUP BY vt1.c1, vt0.c1 HAVING (((((vt1.c1)OR(GROUP_CONCAT(vt0.c0))) IN ())) ISNULL);
SELECT ALL vt1.c1, vt0.c1 FROM vt0, t0, vt1 GROUP BY vt1.c1, vt0.c1;
SELECT ALL vt1.c1, vt0.c1 FROM vt0, t0, vt1 GROUP BY vt1.c1, vt0.c1 HAVING (((vt1.c1)OR(GROUP_CONCAT(vt0.c0))) IN ()) UNION ALL SELECT vt1.c1, vt0.c1 FROM vt0, t0, vt1 GROUP BY vt1.c1, vt0.c1 HAVING (NOT ((((vt1.c1)OR(GROUP_CONCAT(vt0.c0))) IN ()))) UNION ALL SELECT ALL vt1.c1, vt0.c1 FROM vt0, t0, vt1 GROUP BY vt1.c1, vt0.c1 HAVING (((((vt1.c1)OR(GROUP_CONCAT(vt0.c0))) IN ())) ISNULL);
SELECT ALL vt1.c1, vt0.c1 FROM vt0, t0, vt1 GROUP BY vt1.c1, vt0.c1;
SELECT SUM((t0.c0 COLLATE BINARY IN (((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))) FROM vt0, t0;
SELECT vt1.c1 FROM vt0 CROSS JOIN t0 ON ((CAST(vt0.c1 AS INTEGER)) IS FALSE) FULL OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS BLOB) AS REAL);
SELECT vt1.c1 FROM vt0 CROSS JOIN t0 ON ((CAST(vt0.c1 AS INTEGER)) IS FALSE) FULL OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS BLOB) AS REAL) WHERE (((((vt0.c1) IS FALSE)) IS TRUE)) UNION ALL SELECT vt1.c1 FROM vt0 CROSS JOIN t0 ON ((CAST(vt0.c1 AS INTEGER)) IS FALSE) FULL OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS BLOB) AS REAL) WHERE ((NOT (((((vt0.c1) IS FALSE)) IS TRUE)))) UNION ALL SELECT ALL vt1.c1 FROM vt0 CROSS JOIN t0 ON ((CAST(vt0.c1 AS INTEGER)) IS FALSE) FULL OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS BLOB) AS REAL) WHERE (((((((vt0.c1) IS FALSE)) IS TRUE)) ISNULL));
SELECT vt1.c1 FROM vt0 CROSS JOIN t0 ON ((CAST(vt0.c1 AS INTEGER)) IS FALSE) FULL OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS BLOB) AS REAL);
SELECT DISTINCT vt1.c0, vt1.c1, t0.c0, vt0.c1 FROM t0, vt0, vt1;
SELECT DISTINCT vt1.c0, vt1.c1, t0.c0, vt0.c1 FROM t0, vt0, vt1 WHERE (((vt0.c1) NOT BETWEEN ('') AND (((vt0.c1) IS TRUE)))) UNION SELECT DISTINCT vt1.c0, vt1.c1, t0.c0, vt0.c1 FROM t0, vt0 NOT INDEXED, vt1 WHERE ((NOT (((vt0.c1) NOT BETWEEN ('') AND (((vt0.c1) IS TRUE)))))) UNION SELECT DISTINCT vt1.c0, vt1.c1, t0.c0, vt0.c1 FROM t0, vt0, vt1 WHERE (((((vt0.c1) NOT BETWEEN ('') AND (((vt0.c1) IS TRUE)))) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1, t0.c0, vt0.c1 FROM t0, vt0, vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN (vt0.c1))) IS FALSE)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN (vt0.c1))) IS FALSE)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN (vt0.c1))) IS FALSE)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c1 FROM t0, vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM t0, vt1 GROUP BY vt1.c1 HAVING ((COUNT(vt1.c1)) NOT NULL) UNION ALL SELECT vt1.c1 FROM t0, vt1 GROUP BY vt1.c1 HAVING (NOT (((COUNT(vt1.c1)) NOT NULL))) UNION ALL SELECT ALL vt1.c1 FROM t0, vt1 GROUP BY vt1.c1 HAVING ((((COUNT(vt1.c1)) NOT NULL)) ISNULL);
SELECT vt1.c1 FROM t0, vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM t0, vt1 GROUP BY vt1.c1 HAVING ((COUNT(vt1.c1)) NOT NULL) UNION ALL SELECT vt1.c1 FROM t0, vt1 GROUP BY vt1.c1 HAVING (NOT (((COUNT(vt1.c1)) NOT NULL))) UNION ALL SELECT ALL vt1.c1 FROM t0, vt1 GROUP BY vt1.c1 HAVING ((((COUNT(vt1.c1)) NOT NULL)) ISNULL);
SELECT vt1.c1 FROM t0, vt1 GROUP BY vt1.c1;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON json_remove(vt0.c0, t0.c0) COLLATE RTRIM;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON json_remove(vt0.c0, t0.c0) COLLATE RTRIM WHERE ('573947381') UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN t0 ON json_remove(vt0.c0, t0.c0) COLLATE RTRIM WHERE ((NOT ('573947381'))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN t0 ON json_remove(vt0.c0, t0.c0) COLLATE RTRIM WHERE ((('573947381') ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON json_remove(vt0.c0, t0.c0) COLLATE RTRIM;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0, vt1.c1 FROM vt1 NOT INDEXED, t0, vt0 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1, t0, vt0 WHERE ((TRIM(DISTINCT t0.c0) IN ())) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1, t0, vt0 WHERE ((NOT ((TRIM(DISTINCT t0.c0) IN ())))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 NOT INDEXED, t0, vt0 WHERE ((((TRIM(DISTINCT t0.c0) IN ())) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 NOT INDEXED, t0, vt0 GROUP BY vt1.c0, vt1.c1;
SELECT ALL t0.c0, vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt1.c1, vt0.c0, vt1.c0;
SELECT t0.c0, vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt1.c1, vt0.c0, vt1.c0 HAVING TOTAL(CAST(t0.c0 AS TEXT)) UNION ALL SELECT t0.c0, vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt1.c1, vt0.c0, vt1.c0 HAVING (NOT (TOTAL(CAST(t0.c0 AS TEXT)))) UNION ALL SELECT t0.c0, vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt1.c1, vt0.c0, vt1.c0 HAVING ((TOTAL(CAST(t0.c0 AS TEXT))) ISNULL);
SELECT ALL t0.c0, vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt1.c1, vt0.c0, vt1.c0;
SELECT t0.c0, vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt1.c1, vt0.c0, vt1.c0 HAVING TOTAL(CAST(t0.c0 AS TEXT)) UNION ALL SELECT t0.c0, vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt1.c1, vt0.c0, vt1.c0 HAVING (NOT (TOTAL(CAST(t0.c0 AS TEXT)))) UNION ALL SELECT t0.c0, vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt1.c1, vt0.c0, vt1.c0 HAVING ((TOTAL(CAST(t0.c0 AS TEXT))) ISNULL);
SELECT ALL t0.c0, vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt1.c1, vt0.c0, vt1.c0;
SELECT * FROM t0, vt1 FULL OUTER JOIN vt0 ON (((+ (vt1.c0))) NOT NULL);
SELECT ALL * FROM t0, vt1 FULL OUTER JOIN vt0 ON (((+ (vt1.c0))) NOT NULL) WHERE (CAST(((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.c1)) AS BLOB)) UNION ALL SELECT ALL * FROM t0, vt1 FULL OUTER JOIN vt0 ON (((+ (vt1.c0))) NOT NULL) WHERE ((NOT (CAST(((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.c1)) AS BLOB)))) UNION ALL SELECT ALL * FROM t0, vt1 FULL OUTER JOIN vt0 ON (((+ (vt1.c0))) NOT NULL) WHERE (((CAST(((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.c1)) AS BLOB)) ISNULL));
SELECT * FROM t0, vt1 FULL OUTER JOIN vt0 ON (((+ (vt1.c0))) NOT NULL);
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (vt1.c0) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
