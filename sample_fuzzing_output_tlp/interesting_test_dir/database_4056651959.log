-- Time: 2024/06/09 16:14:20
-- Database: database59
-- Database version: 3.40.0
-- seed value: 4056651959
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, prefix=590); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
PRAGMA short_column_names = true; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1, c2) VALUES (x'c31e', 0xffffffffa7fb0864, 0.6679890166198188), (x'', 0.5716433315374777, x''), (x'', x'', x'254c'); -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c2, c1) VALUES ('-1653548091', NULL, NULL), (-0.0, -1.653548091E9, x'a999'), (x'', -1.653548091E9, x''); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
PRAGMA default_cache_size = -679249406; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('-726417329'); -- 0ms;
PRAGMA main.cache_spill = 4813724269996984366; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (((LTRIM(NULL))AND(((0.41137609706661227)!=(0.2930134543155559)))), 0.628147529612363, 204183798), (NULL, -7.26417329E8, x''), ('h	', 0.9936165211154762, x'd68f'); -- 1ms;
INSERT OR ABORT INTO vt1(c0) VALUES ('1999029522'), (x''), ('-679249406'), (0.22036395509602535), (1.999029522E9); -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (x''); -- 0ms;
INSERT OR ABORT INTO rt0 VALUES (NULL, NULL, 'h	'); -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES ('-1653548091'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '60300'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '18154'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-726417329,8');\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('!K쁏x&\?o', 0.38072310356085926, x'70b5'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (0.7316726303056353); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
REINDEX  rt0; -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (0.46876483652332535), (x'71bc'), (0xffffffff9d70dbc5); -- 1ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (-7.26417329E8), (0xffffffffdc9a66f4), (0.5769672173370981); -- 0ms;
PRAGMA temp.secure_delete = true; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1301002736); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 11); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 255685052); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 439568077); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '37876'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '3993'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 481658758); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=82609202,12');\n; -- 0ms;
PRAGMA temp.journal_mode = DELETE; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1927024929); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 754682630); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES ('1424414315'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
PRAGMA temp.reverse_unordered_selects = false; -- 0ms;
PRAGMA temp.threads = 6772626752304804580; -- 0ms;
PRAGMA locking_mode; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA main.short_column_names = true; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (NULL), (0.9923091667816418), (NULL); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (0.7290330784531257, NULL), (x'', NULL), (1276985362, -1111049444); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1472171334); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('n8_s4S'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1081157374 unordered'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('-2039718031'), (NULL), ('D_{}3u\rࡤ'); -- 1ms;
INSERT OR ABORT INTO vt1 VALUES (CAST(((((0Xffffffffb497b14c)OR('-1732243842')))AND(0Xffffffffc1a8f37a)) AS REAL)); -- 0ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('D_{}3U\rࡤ'); -- 1ms;
PRAGMA main.cache_size = 0; -- 0ms;
DROP TABLE rt0; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA temp.shrink_memory; -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL), ('_vS]S?UU'), (NULL); -- 0ms;
PRAGMA journal_mode; -- 0ms;
PRAGMA incremental_vacuum(-1081157374); -- 1ms;
ANALYZE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x''); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 448284896); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1649233116); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '46234'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (x''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 1ms;
REINDEX; -- 0ms;
COMMIT; -- 0ms;
CREATE TEMPORARY TABLE t0 (c0 BLOB ); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
PRAGMA defer_foreign_keys; -- 0ms;
END TRANSACTION; -- 0ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0, c1, c2) AS SELECT (((((rt0.c4, t0.c0, rt0.c4)) BETWEEN ((rt0.c1, vt1.c0, t0.c0)) AND ((rt0.c4, rt0.c4, rt0.c4)))) NOT BETWEEN (TRIM(DISTINCT rt0.c4, rt0.c2)) AND (MIN(rt0.c4))), ((((rt0.c3 COLLATE BINARY)OR(CASE rt0.c4  WHEN rt0.c3 THEN t0.c0 ELSE t0.c0 END)))OR(((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))), ((((rt0.c0) NOT NULL))/((NOT (rt0.c3)))) FROM t0, rt0, vt1 WHERE (LOWER(CAST(NULL AS INTEGER))); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=6'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=0'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0, c4) VALUES ('1276985362', 0.8149714800776184, '7N'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=6'); -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (x'5f62'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM t0, v0, vt1, rt0;
SELECT * FROM t0, v0, vt1, rt0 WHERE ((+ (((vt1.c0)>=(rt0.c1))))) UNION ALL SELECT * FROM t0, v0, vt1, rt0 WHERE ((NOT ((+ (((vt1.c0)>=(rt0.c1))))))) UNION ALL SELECT * FROM t0, v0, vt1, rt0 WHERE ((((+ (((vt1.c0)>=(rt0.c1))))) ISNULL));
SELECT * FROM t0, v0, vt1, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, v0.c2, rt0.c4, t0.c0, vt1.c0, rt0.c2, v0.c0 FROM rt0, t0, v0, vt1;
SELECT DISTINCT rt0.c0, rt0.c1, v0.c2, rt0.c4, t0.c0, vt1.c0, rt0.c2, v0.c0 FROM rt0, t0, v0, vt1 WHERE ((((('')<>(v0.c2)))!=(0.18766867183521374))) UNION SELECT DISTINCT rt0.c0, rt0.c1, v0.c2, rt0.c4, t0.c0, vt1.c0, rt0.c2, v0.c0 FROM rt0, t0, v0, vt1 WHERE ((NOT ((((('')<>(v0.c2)))<>(0.18766867183521374))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, v0.c2, rt0.c4, t0.c0, vt1.c0, rt0.c2, v0.c0 FROM rt0, t0, v0, vt1 WHERE ((((((('')!=(v0.c2)))<>(0.18766867183521374))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, v0.c2, rt0.c4, t0.c0, vt1.c0, rt0.c2, v0.c0 FROM rt0, t0, v0, vt1;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (~ (rt0.c4)) COLLATE BINARY GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3, t0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (~ (rt0.c4)) COLLATE BINARY WHERE (rt0.c3) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3, t0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (~ (rt0.c4)) COLLATE BINARY WHERE ((NOT (rt0.c3))) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3, t0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (~ (rt0.c4)) COLLATE BINARY WHERE (((rt0.c3) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3, t0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (~ (rt0.c4)) COLLATE BINARY GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3, t0.c0;
SELECT ALL rt0.c3, t0.c0, rt0.c4 FROM rt0, t0, v0, vt1 GROUP BY rt0.c3, t0.c0, rt0.c4;
SELECT rt0.c3, t0.c0, rt0.c4 FROM rt0 NOT INDEXED, t0, v0, vt1 GROUP BY rt0.c3, t0.c0, rt0.c4 HAVING LTRIM(((rt0.c2)/(SUM(AVG(MAX(MIN(TOTAL(AVG(v0.c2)))))))), json_type(vt1.c0)) UNION ALL SELECT rt0.c3, t0.c0, rt0.c4 FROM rt0, t0, v0, vt1 GROUP BY rt0.c3, t0.c0, rt0.c4 HAVING (NOT (LTRIM(((rt0.c2)/(SUM(AVG(MAX(MIN(TOTAL(AVG(v0.c2)))))))), json_type(vt1.c0)))) UNION ALL SELECT rt0.c3, t0.c0, rt0.c4 FROM rt0, t0, v0, vt1 GROUP BY rt0.c3, t0.c0, rt0.c4 HAVING ((LTRIM(((rt0.c2)/(SUM(AVG(MAX(MIN(TOTAL(AVG(v0.c2)))))))), json_type(vt1.c0))) ISNULL);
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 WHERE (((((x'') ISNULL))+(v0.c2 COLLATE RTRIM))) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 WHERE ((NOT (((((x'') ISNULL))+(v0.c2 COLLATE RTRIM))))) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 WHERE (((((((x'') ISNULL))+(v0.c2 COLLATE RTRIM))) ISNULL));
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((~ (rt0.c2))) IS TRUE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((~ (rt0.c2))) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((~ (rt0.c2))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, v0.c0, v0.c1, rt0.c3, rt0.c4, v0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0, v0.c1, rt0.c3, rt0.c4, v0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0, v0.c1, rt0.c3, rt0.c4, v0.c2 FROM v0, rt0 WHERE (((((CASE '95772656'  WHEN rt0.c0 THEN rt0.c1 END)AND(CAST(rt0.c4 AS TEXT))))AND(rt0.c2 COLLATE BINARY))) GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0, v0.c1, rt0.c3, rt0.c4, v0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2, v0.c0, v0.c1, rt0.c3, rt0.c4, v0.c2 FROM v0, rt0 WHERE ((NOT (((((CASE '95772656'  WHEN rt0.c0 THEN rt0.c1 END)AND(CAST(rt0.c4 AS TEXT))))AND(rt0.c2 COLLATE BINARY))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0, v0.c1, rt0.c3, rt0.c4, v0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, v0.c0, v0.c1, rt0.c3, rt0.c4, v0.c2 FROM v0, rt0 WHERE (((((((CASE '95772656'  WHEN rt0.c0 THEN rt0.c1 END)AND(CAST(rt0.c4 AS TEXT))))AND(rt0.c2 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0, v0.c1, rt0.c3, rt0.c4, v0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, v0.c0, v0.c1, rt0.c3, rt0.c4, v0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, v0.c0, v0.c1, rt0.c3, rt0.c4, v0.c2;
SELECT ALL rt0.c0 FROM t0, vt1, rt0, v0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM t0, vt1, rt0, v0 GROUP BY rt0.c0 HAVING CASE WHEN ((((MIN(t0.c0))OR(rt0.c4)))AND(rt0.c4)) THEN ((COUNT(MAX(v0.c0)))-(COUNT(*))) END UNION ALL SELECT rt0.c0 FROM t0, vt1, rt0, v0 GROUP BY rt0.c0 HAVING (NOT (CASE WHEN ((((MIN(t0.c0))OR(rt0.c4)))AND(rt0.c4)) THEN ((COUNT(MAX(v0.c0)))-(COUNT(*))) END)) UNION ALL SELECT ALL rt0.c0 FROM t0, vt1, rt0, v0 GROUP BY rt0.c0 HAVING ((CASE WHEN ((((MIN(t0.c0))OR(rt0.c4)))AND(rt0.c4)) THEN ((COUNT(MAX(v0.c0)))-(COUNT(*))) END) ISNULL);
SELECT ALL rt0.c0 FROM rt0, t0, vt1;
SELECT rt0.c0 FROM rt0, t0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((CASE WHEN vt1.c0 THEN rt0.c2 END)))) UNION ALL SELECT rt0.c0 FROM rt0, t0, vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((CASE WHEN vt1.c0 THEN rt0.c2 END)))))) UNION ALL SELECT rt0.c0 FROM rt0, t0, vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((CASE WHEN vt1.c0 THEN rt0.c2 END)))) ISNULL));
SELECT ALL rt0.c0 FROM rt0, t0, vt1;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3 FROM vt1, rt0 WHERE (((((((rt0.c0))<((rt0.c3)))))>((((rt0.c2) NOT NULL))))) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3 FROM vt1, rt0 WHERE ((NOT (((((((rt0.c0))<((rt0.c3)))))>((((rt0.c2) NOT NULL))))))) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3 FROM vt1, rt0 WHERE (((((((((rt0.c0))<((rt0.c3)))))>((((rt0.c2) NOT NULL))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3 FROM vt1, rt0;
SELECT ALL rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE ('-1045892230') GROUP BY rt0.c1, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT ('-1045892230'))) GROUP BY rt0.c1, rt0.c3, rt0.c4 UNION SELECT rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE ((('-1045892230') ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c4 HAVING ((((((((((TOTAL(SUM(COUNT(rt0.c0))))AND(COUNT(*))))OR(rt0.c2)))OR(SUM(0.22297627365680728))))OR(rt0.c3)))IS(GROUP_CONCAT(rt0.c1))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c4 HAVING (NOT (((((((((((TOTAL(SUM(COUNT(rt0.c0))))AND(COUNT(*))))OR(rt0.c2)))OR(SUM(0.22297627365680728))))OR(rt0.c3)))IS(GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c4 HAVING ((((((((((((TOTAL(SUM(COUNT(rt0.c0))))AND(COUNT(*))))OR(rt0.c2)))OR(SUM(0.22297627365680728))))OR(rt0.c3)))IS(GROUP_CONCAT(rt0.c1)))) ISNULL);
SELECT * FROM vt1 CROSS JOIN rt0 ON 0.22297627365680728;
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON 0.22297627365680728 WHERE (((((rt0.c3)>=(rt0.c2))) NOT BETWEEN (((vt1.c0) ISNULL)) AND (x'a188'))) UNION ALL SELECT ALL * FROM vt1 CROSS JOIN rt0 ON 0.22297627365680728 WHERE ((NOT (((((rt0.c3)>=(rt0.c2))) NOT BETWEEN (((vt1.c0) ISNULL)) AND (x'a188'))))) UNION ALL SELECT * FROM vt1 CROSS JOIN rt0 ON 0.22297627365680728 WHERE (((((((rt0.c3)>=(rt0.c2))) NOT BETWEEN (((vt1.c0) ISNULL)) AND (x'a188'))) ISNULL));
SELECT * FROM vt1 CROSS JOIN rt0 ON 0.22297627365680728;
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0;
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE (((((vt1.c0) IS FALSE))*(((t0.c0) IS TRUE)))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT (((((vt1.c0) IS FALSE))*(((t0.c0) IS TRUE)))))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE (((((((vt1.c0) IS FALSE))*(((t0.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((((v0.c2, v0.c1, v0.c0, v0.c1, v0.c2)) BETWEEN ((((v0.c1)-(0.22297627365680728)), ABS(v0.c2), (((v0.c1, v0.c0, v0.c2))>((v0.c0, v0.c2, v0.c0))), -2.039718031E9, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))))) AND ((((('-953163947'))>((v0.c1))), ((v0.c2) BETWEEN (v0.c0) AND (v0.c2)), ((((((((v0.c0)AND(v0.c1)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)), ((v0.c1)LIKE(v0.c0)), (+ (v0.c1)))))) GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((NOT ((((v0.c2, v0.c1, v0.c0, v0.c1, v0.c2)) BETWEEN ((((v0.c1)-(0.22297627365680728)), ABS(v0.c2), (((v0.c1, v0.c0, v0.c2))>((v0.c0, v0.c2, v0.c0))), -2.039718031E9, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))))) AND ((((('-953163947'))>((v0.c1))), ((v0.c2) BETWEEN (v0.c0) AND (v0.c2)), ((((((((v0.c0)AND(v0.c1)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)), ((v0.c1)LIKE(v0.c0)), (+ (v0.c1)))))))) GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((((((v0.c2, v0.c1, v0.c0, v0.c1, v0.c2)) BETWEEN ((((v0.c1)-(0.22297627365680728)), ABS(v0.c2), (((v0.c1, v0.c0, v0.c2))>((v0.c0, v0.c2, v0.c0))), -2.039718031E9, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))))) AND ((((('-953163947'))>((v0.c1))), ((v0.c2) BETWEEN (v0.c0) AND (v0.c2)), ((((((((v0.c0)AND(v0.c1)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)), ((v0.c1)LIKE(v0.c0)), (+ (v0.c1)))))) ISNULL)) GROUP BY v0.c0, v0.c2, v0.c1;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL rt0.c1 FROM vt1, v0 LEFT OUTER JOIN rt0 ON rt0.c4 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, v0 LEFT OUTER JOIN rt0 ON rt0.c4 GROUP BY rt0.c1 HAVING TOTAL(COUNT(*)) UNION ALL SELECT rt0.c1 FROM vt1, v0 LEFT OUTER JOIN rt0 ON rt0.c4 GROUP BY rt0.c1 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL rt0.c1 FROM vt1, v0 LEFT OUTER JOIN rt0 ON rt0.c4 GROUP BY rt0.c1 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM t0, vt1, rt0;
SELECT rt0.c4, rt0.c1, rt0.c0 FROM t0, vt1, rt0 WHERE (((rt0.c2) BETWEEN ((('-185975849') IS TRUE)) AND ((rt0.c2 IN ())))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c0 FROM t0, vt1, rt0 WHERE ((NOT (((rt0.c2) BETWEEN ((('-185975849') IS TRUE)) AND ((rt0.c2 IN ())))))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM t0, vt1, rt0 WHERE (((((rt0.c2) BETWEEN ((('-185975849') IS TRUE)) AND ((rt0.c2 IN ())))) ISNULL));
SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM t0, vt1, rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ((((rt0.c1) ISNULL) IN ('1934236227'))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ((((rt0.c1) ISNULL) IN ('1934236227'))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((((((rt0.c1) ISNULL) IN ('1934236227'))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt0.c1, rt0.c3, v0.c1, v0.c0 FROM v0, t0, rt0 GROUP BY rt0.c1, rt0.c3, v0.c1, v0.c0;
SELECT rt0.c1, rt0.c3, v0.c1, v0.c0 FROM v0, t0, rt0 WHERE ((((((rt0.c3 IN ()))AND(CASE WHEN v0.c0 THEN v0.c1 WHEN t0.c0 THEN '-726417329' WHEN rt0.c0 THEN v0.c2 END)))OR(((rt0.c2)LIKE(t0.c0))))) GROUP BY rt0.c1, rt0.c3, v0.c1, v0.c0 UNION SELECT ALL rt0.c1, rt0.c3, v0.c1, v0.c0 FROM v0, t0, rt0 WHERE ((NOT ((((((rt0.c3 IN ()))AND(CASE WHEN v0.c0 THEN v0.c1 WHEN t0.c0 THEN '-726417329' WHEN rt0.c0 THEN v0.c2 END)))OR(((rt0.c2)LIKE(t0.c0))))))) GROUP BY rt0.c1, rt0.c3, v0.c1, v0.c0 UNION SELECT ALL rt0.c1, rt0.c3, v0.c1, v0.c0 FROM v0, t0, rt0 WHERE ((((((((rt0.c3 IN ()))AND(CASE WHEN v0.c0 THEN v0.c1 WHEN t0.c0 THEN '-726417329' WHEN rt0.c0 THEN v0.c2 END)))OR(((rt0.c2)LIKE(t0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c3, v0.c1, v0.c0;
SELECT ALL rt0.c1, rt0.c3, v0.c1, v0.c0 FROM v0, t0, rt0 GROUP BY rt0.c1, rt0.c3, v0.c1, v0.c0;
SELECT t0.c0, vt1.c0, v0.c0, v0.c1 FROM t0, vt1 RIGHT OUTER JOIN v0 ON NULL GROUP BY t0.c0, vt1.c0, v0.c0, v0.c1;
SELECT t0.c0, vt1.c0, v0.c0, v0.c1 FROM t0, vt1 RIGHT OUTER JOIN v0 ON NULL GROUP BY t0.c0, vt1.c0, v0.c0, v0.c1 HAVING GROUP_CONCAT(MAX(v0.c2)) UNION ALL SELECT t0.c0, vt1.c0, v0.c0, v0.c1 FROM t0, vt1 RIGHT OUTER JOIN v0 ON NULL GROUP BY t0.c0, vt1.c0, v0.c0, v0.c1 HAVING (NOT (GROUP_CONCAT(MAX(v0.c2)))) UNION ALL SELECT ALL t0.c0, vt1.c0, v0.c0, v0.c1 FROM t0, vt1 RIGHT OUTER JOIN v0 ON NULL GROUP BY t0.c0, vt1.c0, v0.c0, v0.c1 HAVING ((GROUP_CONCAT(MAX(v0.c2))) ISNULL);
SELECT ALL * FROM vt1, t0, v0;
SELECT * FROM vt1, t0, v0 WHERE (CASE WHEN ((((((((v0.c0)AND(vt1.c0)))OR(v0.c2)))OR(vt1.c0)))AND(0.20507069408542666)) THEN vt1.c0 WHEN ((((t0.c0)OR(vt1.c0)))AND(NULL)) THEN (((v0.c2))<=((v0.c0))) WHEN CASE v0.c2  WHEN v0.c1 THEN x'3eab014c' WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c2 END THEN ((vt1.c0) ISNULL) ELSE 0.8835091201504927 END) UNION ALL SELECT * FROM vt1, t0, v0 WHERE ((NOT (CASE WHEN ((((((((v0.c0)AND(vt1.c0)))OR(v0.c2)))OR(vt1.c0)))AND(0.20507069408542666)) THEN vt1.c0 WHEN ((((t0.c0)OR(vt1.c0)))AND(NULL)) THEN (((v0.c2))<=((v0.c0))) WHEN CASE v0.c2  WHEN v0.c1 THEN x'3eab014c' WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c2 END THEN ((vt1.c0) ISNULL) ELSE 0.8835091201504927 END))) UNION ALL SELECT * FROM vt1, t0, v0 WHERE (((CASE WHEN ((((((((v0.c0)AND(vt1.c0)))OR(v0.c2)))OR(vt1.c0)))AND(0.20507069408542666)) THEN vt1.c0 WHEN ((((t0.c0)OR(vt1.c0)))AND(NULL)) THEN (((v0.c2))<=((v0.c0))) WHEN CASE v0.c2  WHEN v0.c1 THEN x'3eab014c' WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c2 END THEN ((vt1.c0) ISNULL) ELSE 0.8835091201504927 END) ISNULL));
SELECT ALL * FROM vt1, t0, v0;
SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON rt0.c2 COLLATE NOCASE LEFT OUTER JOIN v0 ON CASE ((v0.c1) NOT BETWEEN (x'') AND (NULL))  WHEN CASE rt0.c4  WHEN v0.c2 THEN rt0.c1 ELSE rt0.c0 END THEN ((rt0.c3) BETWEEN (rt0.c0) AND (vt1.c0)) ELSE rt0.c4 END;
SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON rt0.c2 COLLATE NOCASE LEFT OUTER JOIN v0 ON CASE ((v0.c1) NOT BETWEEN (x'') AND (NULL))  WHEN CASE rt0.c4  WHEN v0.c2 THEN rt0.c1 ELSE rt0.c0 END THEN ((rt0.c3) BETWEEN (rt0.c0) AND (vt1.c0)) ELSE rt0.c4 END WHERE ((LIKELY(DISTINCT rt0.c0) IN ())) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON rt0.c2 COLLATE NOCASE LEFT OUTER JOIN v0 ON CASE ((v0.c1) NOT BETWEEN (x'') AND (NULL))  WHEN CASE rt0.c4  WHEN v0.c2 THEN rt0.c1 ELSE rt0.c0 END THEN ((rt0.c3) BETWEEN (rt0.c0) AND (vt1.c0)) ELSE rt0.c4 END WHERE ((NOT ((LIKELY(DISTINCT rt0.c0) IN ())))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON rt0.c2 COLLATE NOCASE LEFT OUTER JOIN v0 ON CASE ((v0.c1) NOT BETWEEN (x'') AND (NULL))  WHEN CASE rt0.c4  WHEN v0.c2 THEN rt0.c1 ELSE rt0.c0 END THEN ((rt0.c3) BETWEEN (rt0.c0) AND (vt1.c0)) ELSE rt0.c4 END WHERE ((((LIKELY(DISTINCT rt0.c0) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON rt0.c2 COLLATE NOCASE LEFT OUTER JOIN v0 ON CASE ((v0.c1) NOT BETWEEN (x'') AND (NULL))  WHEN CASE rt0.c4  WHEN v0.c2 THEN rt0.c1 ELSE rt0.c0 END THEN ((rt0.c3) BETWEEN (rt0.c0) AND (vt1.c0)) ELSE rt0.c4 END;
SELECT ALL v0.c1 FROM t0 CROSS JOIN v0 ON CASE WHEN ((((t0.c0)AND(t0.c0)))OR(v0.c1)) THEN t0.c0 COLLATE RTRIM END GROUP BY v0.c1;
SELECT v0.c1 FROM t0 CROSS JOIN v0 ON CASE WHEN ((((t0.c0)AND(t0.c0)))OR(v0.c1)) THEN t0.c0 COLLATE RTRIM END WHERE ((+ ((((v0.c2))<((v0.c2)))))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM t0 CROSS JOIN v0 ON CASE WHEN ((((t0.c0)AND(t0.c0)))OR(v0.c1)) THEN t0.c0 COLLATE RTRIM END WHERE ((NOT ((+ ((((v0.c2))<((v0.c2)))))))) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM t0 CROSS JOIN v0 ON CASE WHEN ((((t0.c0)AND(t0.c0)))OR(v0.c1)) THEN t0.c0 COLLATE RTRIM END WHERE ((((+ ((((v0.c2))<((v0.c2)))))) ISNULL)) GROUP BY v0.c1;
SELECT ALL v0.c1 FROM t0 CROSS JOIN v0 ON CASE WHEN ((((t0.c0)AND(t0.c0)))OR(v0.c1)) THEN t0.c0 COLLATE RTRIM END GROUP BY v0.c1;
SELECT ALL v0.c1 FROM t0 LEFT OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN (((v0.c1 IN ()))) AND ((v0.c2))) RIGHT OUTER JOIN v0 ON (+ (CAST(v0.c2 AS BLOB))) GROUP BY v0.c1;
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1;
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 WHERE ((t0.c0 IN ())) UNION ALL SELECT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((NOT ((t0.c0 IN ())))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 WHERE ((((t0.c0 IN ())) ISNULL));
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1;
SELECT DISTINCT * FROM t0, rt0, v0;
SELECT DISTINCT * FROM t0, rt0, v0 WHERE ((((((v0.c2)) NOT BETWEEN ((t0.c0)) AND ((v0.c0)))) NOT BETWEEN (0.32701874877396386) AND (((v0.c0)-(v0.c1))))) UNION SELECT DISTINCT * FROM t0, rt0, v0 WHERE ((NOT ((((((v0.c2)) NOT BETWEEN ((t0.c0)) AND ((v0.c0)))) NOT BETWEEN (0.32701874877396386) AND (((v0.c0)-(v0.c1))))))) UNION SELECT DISTINCT * FROM t0, rt0, v0 WHERE ((((((((v0.c2)) NOT BETWEEN ((t0.c0)) AND ((v0.c0)))) NOT BETWEEN (0.32701874877396386) AND (((v0.c0)-(v0.c1))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0, v0;
SELECT rt0.c3, v0.c0, rt0.c2, v0.c1, rt0.c4, vt1.c0, rt0.c0, v0.c2 FROM t0, v0, vt1, rt0 GROUP BY rt0.c3, v0.c0, rt0.c2, v0.c1, rt0.c4, vt1.c0, rt0.c0, v0.c2;
SELECT rt0.c3, v0.c0, rt0.c2, v0.c1, rt0.c4, vt1.c0, rt0.c0, v0.c2 FROM t0, v0, vt1, rt0 WHERE (((LIKELIHOOD(vt1.c0, 0.011643143402191192))<(((t0.c0) ISNULL)))) GROUP BY rt0.c3, v0.c0, rt0.c2, v0.c1, rt0.c4, vt1.c0, rt0.c0, v0.c2 UNION SELECT rt0.c3, v0.c0, rt0.c2, v0.c1, rt0.c4, vt1.c0, rt0.c0, v0.c2 FROM t0, v0, vt1, rt0 WHERE ((NOT (((LIKELIHOOD(vt1.c0, 0.011643143402191192))<(((t0.c0) ISNULL)))))) GROUP BY rt0.c3, v0.c0, rt0.c2, v0.c1, rt0.c4, vt1.c0, rt0.c0, v0.c2 UNION SELECT ALL rt0.c3, v0.c0, rt0.c2, v0.c1, rt0.c4, vt1.c0, rt0.c0, v0.c2 FROM t0, v0, vt1, rt0 WHERE (((((LIKELIHOOD(vt1.c0, 0.011643143402191192))<(((t0.c0) ISNULL)))) ISNULL)) GROUP BY rt0.c3, v0.c0, rt0.c2, v0.c1, rt0.c4, vt1.c0, rt0.c0, v0.c2;
SELECT rt0.c3, v0.c0, rt0.c2, v0.c1, rt0.c4, vt1.c0, rt0.c0, v0.c2 FROM t0, v0, vt1, rt0 GROUP BY rt0.c3, v0.c0, rt0.c2, v0.c1, rt0.c4, vt1.c0, rt0.c0, v0.c2;
SELECT rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0, t0 NOT INDEXED GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c4;
SELECT ALL rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c4 HAVING TYPEOF(DISTINCT COUNT(*)) UNION ALL SELECT ALL rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c4 HAVING (NOT (TYPEOF(DISTINCT COUNT(*)))) UNION ALL SELECT ALL rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c4 HAVING ((TYPEOF(DISTINCT COUNT(*))) ISNULL);
SELECT rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0, t0 NOT INDEXED GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c4;
SELECT ALL rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c4 HAVING TYPEOF(DISTINCT COUNT(*)) UNION ALL SELECT ALL rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c4 HAVING (NOT (TYPEOF(DISTINCT COUNT(*)))) UNION ALL SELECT ALL rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c4 HAVING ((TYPEOF(DISTINCT COUNT(*))) ISNULL);
SELECT rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0, t0 NOT INDEXED GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c4;
SELECT v0.c0, rt0.c3, v0.c2, rt0.c1 FROM t0, vt1, v0, rt0;
SELECT v0.c0, rt0.c3, v0.c2, rt0.c1 FROM t0 NOT INDEXED, vt1, v0, rt0 WHERE (((rt0.c0) NOTNULL) COLLATE RTRIM COLLATE RTRIM) UNION ALL SELECT v0.c0, rt0.c3, v0.c2, rt0.c1 FROM t0, vt1, v0, rt0 WHERE ((NOT (((rt0.c0) NOTNULL) COLLATE RTRIM COLLATE RTRIM))) UNION ALL SELECT ALL v0.c0, rt0.c3, v0.c2, rt0.c1 FROM t0, vt1, v0, rt0 WHERE (((((rt0.c0) NOTNULL) COLLATE RTRIM COLLATE RTRIM) ISNULL));
SELECT v0.c0, rt0.c3, v0.c2, rt0.c1 FROM t0, vt1, v0, rt0;
SELECT DISTINCT * FROM vt1, t0 CROSS JOIN v0 ON ('☭A' IN ());
SELECT DISTINCT * FROM vt1, t0 CROSS JOIN v0 ON ('☭A' IN ()) WHERE ((((vt1.c0)) BETWEEN ((CASE WHEN v0.c2 THEN t0.c0 ELSE v0.c2 END)) AND (((((0.6337179842624036, vt1.c0, 0Xedadd6f)) BETWEEN ((vt1.c0, v0.c0, t0.c0)) AND ((vt1.c0, vt1.c0, t0.c0))))))) UNION SELECT DISTINCT * FROM vt1, t0 CROSS JOIN v0 ON ('☭A' IN ()) WHERE ((NOT ((((vt1.c0)) BETWEEN ((CASE WHEN v0.c2 THEN t0.c0 ELSE v0.c2 END)) AND (((((0.6337179842624036, vt1.c0, 0Xedadd6f)) BETWEEN ((vt1.c0, v0.c0, t0.c0)) AND ((vt1.c0, vt1.c0, t0.c0))))))))) UNION SELECT DISTINCT * FROM vt1, t0 CROSS JOIN v0 ON ('☭A' IN ()) WHERE ((((((vt1.c0)) BETWEEN ((CASE WHEN v0.c2 THEN t0.c0 ELSE v0.c2 END)) AND (((((0.6337179842624036, vt1.c0, 0Xedadd6f)) BETWEEN ((vt1.c0, v0.c0, t0.c0)) AND ((vt1.c0, vt1.c0, t0.c0))))))) ISNULL));
SELECT DISTINCT * FROM vt1, t0 CROSS JOIN v0 ON ('☭A' IN ());
SELECT t0.c0 FROM t0, v0, rt0 FULL OUTER JOIN vt1 ON (((rt0.c1 IN ())) NOTNULL) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, v0, rt0 FULL OUTER JOIN vt1 ON (((rt0.c1 IN ())) NOTNULL) WHERE (((((v0.c1) IS TRUE))<=(((t0.c0)<=(rt0.c3))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, v0, rt0 FULL OUTER JOIN vt1 ON (((rt0.c1 IN ())) NOTNULL) WHERE ((NOT (((((v0.c1) IS TRUE))<=(((t0.c0)<=(rt0.c3))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, v0, rt0 FULL OUTER JOIN vt1 ON (((rt0.c1 IN ())) NOTNULL) WHERE (((((((v0.c1) IS TRUE))<=(((t0.c0)<=(rt0.c3))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, v0, rt0 FULL OUTER JOIN vt1 ON (((rt0.c1 IN ())) NOTNULL) GROUP BY t0.c0;
SELECT ALL vt1.c0, v0.c0, v0.c1, rt0.c4, v0.c2, rt0.c3, rt0.c1, t0.c0, rt0.c0, rt0.c2 FROM rt0, v0, t0, vt1 GROUP BY vt1.c0, v0.c0, v0.c1, rt0.c4, v0.c2, rt0.c3, rt0.c1, t0.c0, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, v0.c0, v0.c1, rt0.c4, v0.c2, rt0.c3, rt0.c1, t0.c0, rt0.c0, rt0.c2 FROM rt0, v0, t0, vt1 GROUP BY vt1.c0, v0.c0, v0.c1, rt0.c4, v0.c2, rt0.c3, rt0.c1, t0.c0, rt0.c0, rt0.c2 HAVING COUNT(AVG(rt0.c3)) UNION ALL SELECT vt1.c0, v0.c0, v0.c1, rt0.c4, v0.c2, rt0.c3, rt0.c1, t0.c0, rt0.c0, rt0.c2 FROM rt0, v0, t0, vt1 GROUP BY vt1.c0, v0.c0, v0.c1, rt0.c4, v0.c2, rt0.c3, rt0.c1, t0.c0, rt0.c0, rt0.c2 HAVING (NOT (COUNT(AVG(rt0.c3)))) UNION ALL SELECT vt1.c0, v0.c0, v0.c1, rt0.c4, v0.c2, rt0.c3, rt0.c1, t0.c0, rt0.c0, rt0.c2 FROM rt0, v0, t0, vt1 GROUP BY vt1.c0, v0.c0, v0.c1, rt0.c4, v0.c2, rt0.c3, rt0.c1, t0.c0, rt0.c0, rt0.c2 HAVING ((COUNT(AVG(rt0.c3))) ISNULL);
SELECT ALL * FROM t0, vt1;
SELECT ALL * FROM t0, vt1 WHERE ((((vt1.c0 IN ())) BETWEEN ((~ (t0.c0))) AND (COALESCE(vt1.c0, x'')))) UNION ALL SELECT * FROM t0, vt1 WHERE ((NOT ((((vt1.c0 IN ())) BETWEEN ((~ (t0.c0))) AND (COALESCE(vt1.c0, x'')))))) UNION ALL SELECT ALL * FROM t0, vt1 WHERE ((((((vt1.c0 IN ())) BETWEEN ((~ (t0.c0))) AND (COALESCE(vt1.c0, x'')))) ISNULL));
SELECT ALL * FROM t0, vt1;
SELECT DISTINCT * FROM vt1, v0, rt0;
SELECT DISTINCT * FROM vt1, v0, rt0 WHERE (((CAST(v0.c0 AS BLOB))==(COALESCE(rt0.c1, rt0.c1)))) UNION SELECT DISTINCT * FROM vt1, v0, rt0 WHERE ((NOT (((CAST(v0.c0 AS BLOB))=(COALESCE(rt0.c1, rt0.c1)))))) UNION SELECT DISTINCT * FROM vt1, v0, rt0 WHERE (((((CAST(v0.c0 AS BLOB))=(COALESCE(rt0.c1, rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM vt1, v0, rt0;
SELECT v0.c2, rt0.c4, v0.c1, rt0.c3 FROM rt0, v0, vt1, t0 GROUP BY v0.c2, rt0.c4, v0.c1, rt0.c3;
SELECT ALL v0.c2, rt0.c4, v0.c1, rt0.c3 FROM rt0, v0, vt1, t0 WHERE (x'') GROUP BY v0.c2, rt0.c4, v0.c1, rt0.c3 UNION SELECT v0.c2, rt0.c4, v0.c1, rt0.c3 FROM rt0, v0, vt1, t0 WHERE ((NOT (x''))) GROUP BY v0.c2, rt0.c4, v0.c1, rt0.c3 UNION SELECT ALL v0.c2, rt0.c4, v0.c1, rt0.c3 FROM rt0, v0, vt1, t0 WHERE (((x'') ISNULL)) GROUP BY v0.c2, rt0.c4, v0.c1, rt0.c3;
SELECT v0.c2, rt0.c4, v0.c1, rt0.c3 FROM rt0, v0, vt1, t0 GROUP BY v0.c2, rt0.c4, v0.c1, rt0.c3;
SELECT ALL v0.c2, t0.c0, rt0.c1, vt1.c0, rt0.c0, v0.c1, rt0.c3, v0.c0 FROM v0, rt0, vt1 FULL OUTER JOIN t0 ON NULL GROUP BY v0.c2, t0.c0, rt0.c1, vt1.c0, rt0.c0, v0.c1, rt0.c3, v0.c0;
SELECT ALL v0.c2, t0.c0, rt0.c1, vt1.c0, rt0.c0, v0.c1, rt0.c3, v0.c0 FROM v0, rt0, vt1 FULL OUTER JOIN t0 ON NULL GROUP BY v0.c2, t0.c0, rt0.c1, vt1.c0, rt0.c0, v0.c1, rt0.c3, v0.c0 HAVING MAX(((TOTAL(COUNT(GROUP_CONCAT(GROUP_CONCAT(COUNT(*))))))>=(GROUP_CONCAT(t0.c0)))) UNION ALL SELECT ALL v0.c2, t0.c0, rt0.c1, vt1.c0, rt0.c0, v0.c1, rt0.c3, v0.c0 FROM v0, rt0, vt1 FULL OUTER JOIN t0 ON NULL GROUP BY v0.c2, t0.c0, rt0.c1, vt1.c0, rt0.c0, v0.c1, rt0.c3, v0.c0 HAVING (NOT (MAX(((TOTAL(COUNT(GROUP_CONCAT(GROUP_CONCAT(COUNT(*))))))>=(GROUP_CONCAT(t0.c0)))))) UNION ALL SELECT v0.c2, t0.c0, rt0.c1, vt1.c0, rt0.c0, v0.c1, rt0.c3, v0.c0 FROM v0, rt0, vt1 FULL OUTER JOIN t0 ON NULL GROUP BY v0.c2, t0.c0, rt0.c1, vt1.c0, rt0.c0, v0.c1, rt0.c3, v0.c0 HAVING ((MAX(((TOTAL(COUNT(GROUP_CONCAT(GROUP_CONCAT(COUNT(*))))))>=(GROUP_CONCAT(t0.c0))))) ISNULL);
SELECT * FROM t0 INNER JOIN v0 ON t0.c0;
SELECT ALL * FROM t0 INNER JOIN v0 ON t0.c0 WHERE (((t0.c0)>>(v0.c1)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM t0 INNER JOIN v0 ON t0.c0 WHERE ((NOT (((t0.c0)>>(v0.c1)) COLLATE NOCASE))) UNION ALL SELECT * FROM t0 INNER JOIN v0 ON t0.c0 WHERE (((((t0.c0)>>(v0.c1)) COLLATE NOCASE) ISNULL));
SELECT * FROM t0 INNER JOIN v0 ON t0.c0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((0X4ec8432)LIKE(CAST(vt1.c0 AS INTEGER)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((0X4ec8432)LIKE(CAST(vt1.c0 AS INTEGER)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((0X4ec8432)LIKE(CAST(vt1.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0 IN (t0.c0)))!=((((t0.c0))<=((0.8149714800776184)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0 IN (t0.c0)))<>((((t0.c0))<=((0.8149714800776184)))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((t0.c0 IN (t0.c0)))<>((((t0.c0))<=((0.8149714800776184)))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((LIKELIHOOD(DISTINCT vt1.c0, 0.8296106068955575)) BETWEEN (LIKELY(0.9268264340917173)) AND (MAX(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((LIKELIHOOD(DISTINCT vt1.c0, 0.8296106068955575)) BETWEEN (LIKELY(0.9268264340917173)) AND (MAX(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((LIKELIHOOD(DISTINCT vt1.c0, 0.8296106068955575)) BETWEEN (LIKELY(0.9268264340917173)) AND (MAX(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((LIKELIHOOD(DISTINCT vt1.c0, 0.8296106068955575)) BETWEEN (LIKELY(0.9268264340917173)) AND (MAX(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((LIKELIHOOD(DISTINCT vt1.c0, 0.8296106068955575)) BETWEEN (LIKELY(0.9268264340917173)) AND (MAX(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((LIKELIHOOD(DISTINCT vt1.c0, 0.8296106068955575)) BETWEEN (LIKELY(0.9268264340917173)) AND (MAX(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT v0.c1, vt1.c0 FROM v0 CROSS JOIN vt1 ON CAST(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END AS TEXT);
SELECT ALL v0.c1, vt1.c0 FROM v0 CROSS JOIN vt1 ON CAST(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END AS TEXT) WHERE (0Xffffffffd00441dd) UNION ALL SELECT ALL v0.c1, vt1.c0 FROM v0 CROSS JOIN vt1 ON CAST(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END AS TEXT) WHERE ((NOT (0xffffffffd00441dd))) UNION ALL SELECT v0.c1, vt1.c0 FROM v0 CROSS JOIN vt1 ON CAST(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END AS TEXT) WHERE (((0xffffffffd00441dd) ISNULL));
SELECT v0.c1, vt1.c0 FROM v0 CROSS JOIN vt1 ON CAST(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END AS TEXT);
SELECT DISTINCT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, v0 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1, v0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 WHERE (((t0.c0) BETWEEN (COALESCE(vt1.c0, t0.c0)) AND ((~ (vt1.c0))))) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((NOT (((t0.c0) BETWEEN (COALESCE(vt1.c0, t0.c0)) AND ((~ (vt1.c0))))))) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 WHERE (((((t0.c0) BETWEEN (COALESCE(vt1.c0, t0.c0)) AND ((~ (vt1.c0))))) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(TOTAL(GROUP_CONCAT(MIN(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(TOTAL(GROUP_CONCAT(MIN(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(TOTAL(GROUP_CONCAT(MIN(vt1.c0))))) ISNULL);
SELECT * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE (((vt1.c0 COLLATE BINARY)<=(((rt0.c0) NOT BETWEEN (rt0.c3) AND (0.8923287519282556))))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (((vt1.c0 COLLATE BINARY)<=(((rt0.c0) NOT BETWEEN (rt0.c3) AND (0.8923287519282556))))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE (((((vt1.c0 COLLATE BINARY)<=(((rt0.c0) NOT BETWEEN (rt0.c3) AND (0.8923287519282556))))) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)|(CAST(vt1.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE RTRIM)|(CAST(vt1.c0 AS BLOB)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0 COLLATE RTRIM)|(CAST(vt1.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c2, rt0.c0, rt0.c4, t0.c0, v0.c1, rt0.c3 FROM v0, t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, t0.c0, v0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c4, t0.c0, v0.c1, rt0.c3 FROM v0, t0, rt0 WHERE (ABS(t0.c0) COLLATE BINARY) GROUP BY rt0.c2, rt0.c0, rt0.c4, t0.c0, v0.c1, rt0.c3 UNION SELECT rt0.c2, rt0.c0, rt0.c4, t0.c0, v0.c1, rt0.c3 FROM v0, t0, rt0 WHERE ((NOT (ABS(t0.c0) COLLATE BINARY))) GROUP BY rt0.c2, rt0.c0, rt0.c4, t0.c0, v0.c1, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c4, t0.c0, v0.c1, rt0.c3 FROM v0, t0, rt0 WHERE (((ABS(t0.c0) COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c4, t0.c0, v0.c1, rt0.c3;
SELECT rt0.c2, rt0.c0, rt0.c4, t0.c0, v0.c1, rt0.c3 FROM v0, t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, t0.c0, v0.c1, rt0.c3;
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4 HAVING COUNT(COUNT(rt0.c4)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4 HAVING (NOT (COUNT(COUNT(rt0.c4)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4 HAVING ((COUNT(COUNT(rt0.c4))) ISNULL);
SELECT ALL rt0.c0, rt0.c4 FROM rt0, vt1, t0;
SELECT ALL rt0.c0, rt0.c4 FROM rt0, vt1, t0 WHERE ((((rt0.c3, '䊕', rt0.c2)) BETWEEN ((t0.c0 COLLATE RTRIM, ((((rt0.c3)OR(rt0.c1)))OR(vt1.c0)), (((rt0.c1)) NOT BETWEEN ((0.5659996236765706)) AND ((rt0.c2))))) AND ((((rt0.c2)IS NOT(rt0.c0)), ((rt0.c0) IS FALSE), rt0.c0 COLLATE NOCASE)))) UNION ALL SELECT ALL rt0.c0, rt0.c4 FROM rt0, vt1, t0 WHERE ((NOT ((((rt0.c3, '䊕', rt0.c2)) BETWEEN ((t0.c0 COLLATE RTRIM, ((((rt0.c3)OR(rt0.c1)))OR(vt1.c0)), (((rt0.c1)) NOT BETWEEN ((0.5659996236765706)) AND ((rt0.c2))))) AND ((((rt0.c2)IS NOT(rt0.c0)), ((rt0.c0) IS FALSE), rt0.c0 COLLATE NOCASE)))))) UNION ALL SELECT ALL rt0.c0, rt0.c4 FROM rt0, vt1, t0 NOT INDEXED WHERE ((((((rt0.c3, '䊕', rt0.c2)) BETWEEN ((t0.c0 COLLATE RTRIM, ((((rt0.c3)OR(rt0.c1)))OR(vt1.c0)), (((rt0.c1)) NOT BETWEEN ((0.5659996236765706)) AND ((rt0.c2))))) AND ((((rt0.c2)IS NOT(rt0.c0)), ((rt0.c0) IS FALSE), rt0.c0 COLLATE NOCASE)))) ISNULL));
SELECT ALL rt0.c0, rt0.c4 FROM rt0, vt1, t0;
SELECT DISTINCT * FROM t0, vt1, v0, rt0;
SELECT DISTINCT * FROM t0, vt1, v0, rt0 WHERE (((t0.c0) BETWEEN (NULL) AND (((t0.c0)&(v0.c0))))) UNION SELECT DISTINCT * FROM t0, vt1, v0, rt0 WHERE ((NOT (((t0.c0) BETWEEN (NULL) AND (((t0.c0)&(v0.c0))))))) UNION SELECT DISTINCT * FROM t0, vt1, v0, rt0 WHERE (((((t0.c0) BETWEEN (NULL) AND (((t0.c0)&(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, vt1, v0, rt0;
SELECT vt1.c0, t0.c0 FROM t0 NATURAL JOIN vt1 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0 NATURAL JOIN vt1 WHERE (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) COLLATE BINARY) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM t0 NATURAL JOIN vt1 WHERE ((NOT (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) COLLATE BINARY))) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM t0 NATURAL JOIN vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0 NATURAL JOIN vt1 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, v0.c0, v0.c2, v0.c1 FROM vt1, v0 GROUP BY vt1.c0, v0.c0, v0.c2, v0.c1;
SELECT ALL vt1.c0, v0.c0, v0.c2, v0.c1 FROM vt1, v0 GROUP BY vt1.c0, v0.c0, v0.c2, v0.c1 HAVING COUNT(*) UNION ALL SELECT vt1.c0, v0.c0, v0.c2, v0.c1 FROM vt1 NOT INDEXED, v0 GROUP BY vt1.c0, v0.c0, v0.c2, v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, v0.c0, v0.c2, v0.c1 FROM vt1, v0 NOT INDEXED GROUP BY vt1.c0, v0.c0, v0.c2, v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, v0.c0, v0.c2, v0.c1 FROM vt1, v0 GROUP BY vt1.c0, v0.c0, v0.c2, v0.c1;
SELECT ALL vt1.c0, v0.c0, v0.c2, v0.c1 FROM vt1, v0 GROUP BY vt1.c0, v0.c0, v0.c2, v0.c1 HAVING COUNT(*) UNION ALL SELECT vt1.c0, v0.c0, v0.c2, v0.c1 FROM vt1 NOT INDEXED, v0 GROUP BY vt1.c0, v0.c0, v0.c2, v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, v0.c0, v0.c2, v0.c1 FROM vt1, v0 NOT INDEXED GROUP BY vt1.c0, v0.c0, v0.c2, v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, v0.c0, v0.c2, v0.c1 FROM vt1, v0 GROUP BY vt1.c0, v0.c0, v0.c2, v0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c3) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c3))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c3) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((ABS(vt1.c0))OR(((((vt1.c0)OR(x'74fa')))OR(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((ABS(vt1.c0))OR(((((vt1.c0)OR(x'74fa')))OR(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((ABS(vt1.c0))OR(((((vt1.c0)OR(x'74fa')))OR(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL t0.c0, v0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY t0.c0, v0.c0, v0.c1, v0.c2;
SELECT t0.c0, v0.c0, v0.c1, v0.c2 FROM t0, v0 WHERE ((- (x'24ec63ab69e6' COLLATE RTRIM))) GROUP BY t0.c0, v0.c0, v0.c1, v0.c2 UNION SELECT t0.c0, v0.c0, v0.c1, v0.c2 FROM t0, v0 WHERE ((NOT ((- (x'24ec63ab69e6' COLLATE RTRIM))))) GROUP BY t0.c0, v0.c0, v0.c1, v0.c2 UNION SELECT ALL t0.c0, v0.c0, v0.c1, v0.c2 FROM t0, v0 WHERE ((((- (x'24ec63ab69e6' COLLATE RTRIM))) ISNULL)) GROUP BY t0.c0, v0.c0, v0.c1, v0.c2;
SELECT ALL t0.c0, v0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY t0.c0, v0.c0, v0.c1, v0.c2;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING SUM('-1615997831') UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (SUM('-1615997831'))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((SUM('-1615997831')) ISNULL);
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING SUM('-1615997831') UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (SUM('-1615997831'))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((SUM('-1615997831')) ISNULL);
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL MAX(x'') FROM v0, t0, rt0, vt1 ORDER BY NULL DESC;
SELECT * FROM vt1 FULL OUTER JOIN t0 ON ((((((rt0.c4)/(vt1.c0)))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))OR(((rt0.c2)==(rt0.c0)))) INNER JOIN rt0 ON ((((((((vt1.c0)OR(((rt0.c2) NOTNULL))))OR((rt0.c1 IN ()))))AND(rt0.c0 COLLATE NOCASE)))AND(((t0.c0)||(rt0.c2))));
SELECT DISTINCT rt0.c4, rt0.c2 FROM rt0, t0;
SELECT DISTINCT rt0.c4, rt0.c2 FROM rt0, t0 WHERE ((rt0.c4 IN ())) UNION SELECT DISTINCT rt0.c4, rt0.c2 FROM rt0, t0 WHERE ((NOT ((rt0.c4 IN ())))) UNION SELECT DISTINCT rt0.c4, rt0.c2 FROM rt0, t0 WHERE ((((rt0.c4 IN ())) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c2 FROM rt0, t0;
SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM rt0, t0, v0 GROUP BY rt0.c4, rt0.c3, rt0.c1;
SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM rt0, t0, v0 WHERE (CAST(json_array(rt0.c2, v0.c2) AS NUMERIC)) GROUP BY rt0.c4, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM rt0, t0, v0 WHERE ((NOT (CAST(json_array(rt0.c2, v0.c2) AS NUMERIC)))) GROUP BY rt0.c4, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM rt0, t0, v0 WHERE (((CAST(json_array(rt0.c2, v0.c2) AS NUMERIC)) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c1;
SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM rt0, t0, v0 GROUP BY rt0.c4, rt0.c3, rt0.c1;
SELECT rt0.c3, v0.c2, v0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c4 FROM vt1, rt0 RIGHT OUTER JOIN t0 ON CASE WHEN ((rt0.c4)LIKE(vt1.c0)) THEN ((v0.c1)AND(t0.c0)) WHEN ((0Xffffffffbdc6bb1c)%(t0.c0)) THEN x'' WHEN rt0.c3 COLLATE BINARY THEN ((((vt1.c0)AND(rt0.c0)))AND(v0.c0)) END LEFT OUTER JOIN v0 ON ((((vt1.c0) NOTNULL))|(CASE v0.c2  WHEN v0.c1 THEN rt0.c0 WHEN x'' THEN vt1.c0 WHEN rt0.c3 THEN v0.c2 ELSE rt0.c0 END)) GROUP BY rt0.c3, v0.c2, v0.c0, vt1.c0, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0)LIKE(t0.c0)) IN (t0.c0))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)LIKE(t0.c0)) IN (t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0)LIKE(t0.c0)) IN (t0.c0))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON ((v0.c2) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (((rt0.c0)OR(rt0.c0))));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON ((v0.c2) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (((rt0.c0)OR(rt0.c0)))) WHERE (CAST(((rt0.c4)==(rt0.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON ((v0.c2) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (((rt0.c0)OR(rt0.c0)))) WHERE ((NOT (CAST(((rt0.c4)==(rt0.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON ((v0.c2) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (((rt0.c0)OR(rt0.c0)))) WHERE (((CAST(((rt0.c4)=(rt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON ((v0.c2) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (((rt0.c0)OR(rt0.c0))));
SELECT ALL rt0.c0, vt1.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, vt1.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0, vt1 WHERE ((((rt0.c1)) NOT BETWEEN ((((vt1.c0)<=(vt1.c0)))) AND ((((vt1.c0) IS FALSE))))) GROUP BY rt0.c0, vt1.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c0, vt1.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0, vt1 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((((vt1.c0)<=(vt1.c0)))) AND ((((vt1.c0) IS FALSE))))))) GROUP BY rt0.c0, vt1.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c0, vt1.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0, vt1 WHERE ((((((rt0.c1)) NOT BETWEEN ((((vt1.c0)<=(vt1.c0)))) AND ((((vt1.c0) IS FALSE))))) ISNULL)) GROUP BY rt0.c0, vt1.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, vt1.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3;
SELECT rt0.c2, vt1.c0, rt0.c3, t0.c0, rt0.c0, rt0.c4 FROM t0, rt0 CROSS JOIN vt1 ON (((((rt0.c3)IS NOT(rt0.c1)), CASE WHEN rt0.c3 THEN t0.c0 WHEN -1619539710 THEN rt0.c4 WHEN rt0.c0 THEN t0.c0 END, ((t0.c0)<(rt0.c1))))<=((NULL, (rt0.c4 IN (rt0.c0)), ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY rt0.c2, vt1.c0, rt0.c3, t0.c0, rt0.c0, rt0.c4;
SELECT rt0.c2, vt1.c0, rt0.c3, t0.c0, rt0.c0, rt0.c4 FROM t0, rt0 CROSS JOIN vt1 ON (((((rt0.c3)IS NOT(rt0.c1)), CASE WHEN rt0.c3 THEN t0.c0 WHEN -1619539710 THEN rt0.c4 WHEN rt0.c0 THEN t0.c0 END, ((t0.c0)<(rt0.c1))))<=((NULL, (rt0.c4 IN (rt0.c0)), ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY rt0.c2, vt1.c0, rt0.c3, t0.c0, rt0.c0, rt0.c4 HAVING SUM((0.12766320712056056 IN ())) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c3, t0.c0, rt0.c0, rt0.c4 FROM t0, rt0 CROSS JOIN vt1 ON (((((rt0.c3)IS NOT(rt0.c1)), CASE WHEN rt0.c3 THEN t0.c0 WHEN -1619539710 THEN rt0.c4 WHEN rt0.c0 THEN t0.c0 END, ((t0.c0)<(rt0.c1))))<=((NULL, (rt0.c4 IN (rt0.c0)), ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY rt0.c2, vt1.c0, rt0.c3, t0.c0, rt0.c0, rt0.c4 HAVING (NOT (SUM((0.12766320712056056 IN ())))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c3, t0.c0, rt0.c0, rt0.c4 FROM t0, rt0 CROSS JOIN vt1 ON (((((rt0.c3)IS NOT(rt0.c1)), CASE WHEN rt0.c3 THEN t0.c0 WHEN -1619539710 THEN rt0.c4 WHEN rt0.c0 THEN t0.c0 END, ((t0.c0)<(rt0.c1))))<=((NULL, (rt0.c4 IN (rt0.c0)), ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY rt0.c2, vt1.c0, rt0.c3, t0.c0, rt0.c0, rt0.c4 HAVING ((SUM((0.12766320712056056 IN ()))) ISNULL);
SELECT rt0.c2, vt1.c0, rt0.c3, t0.c0, rt0.c0, rt0.c4 FROM t0, rt0 CROSS JOIN vt1 ON (((((rt0.c3)IS NOT(rt0.c1)), CASE WHEN rt0.c3 THEN t0.c0 WHEN -1619539710 THEN rt0.c4 WHEN rt0.c0 THEN t0.c0 END, ((t0.c0)<(rt0.c1))))<=((NULL, (rt0.c4 IN (rt0.c0)), ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY rt0.c2, vt1.c0, rt0.c3, t0.c0, rt0.c0, rt0.c4;
SELECT rt0.c2, vt1.c0, rt0.c3, t0.c0, rt0.c0, rt0.c4 FROM t0, rt0 CROSS JOIN vt1 ON (((((rt0.c3)IS NOT(rt0.c1)), CASE WHEN rt0.c3 THEN t0.c0 WHEN -1619539710 THEN rt0.c4 WHEN rt0.c0 THEN t0.c0 END, ((t0.c0)<(rt0.c1))))<=((NULL, (rt0.c4 IN (rt0.c0)), ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY rt0.c2, vt1.c0, rt0.c3, t0.c0, rt0.c0, rt0.c4 HAVING SUM((0.12766320712056056 IN ())) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c3, t0.c0, rt0.c0, rt0.c4 FROM t0, rt0 CROSS JOIN vt1 ON (((((rt0.c3)IS NOT(rt0.c1)), CASE WHEN rt0.c3 THEN t0.c0 WHEN -1619539710 THEN rt0.c4 WHEN rt0.c0 THEN t0.c0 END, ((t0.c0)<(rt0.c1))))<=((NULL, (rt0.c4 IN (rt0.c0)), ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY rt0.c2, vt1.c0, rt0.c3, t0.c0, rt0.c0, rt0.c4 HAVING (NOT (SUM((0.12766320712056056 IN ())))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c3, t0.c0, rt0.c0, rt0.c4 FROM t0, rt0 CROSS JOIN vt1 ON (((((rt0.c3)IS NOT(rt0.c1)), CASE WHEN rt0.c3 THEN t0.c0 WHEN -1619539710 THEN rt0.c4 WHEN rt0.c0 THEN t0.c0 END, ((t0.c0)<(rt0.c1))))<=((NULL, (rt0.c4 IN (rt0.c0)), ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY rt0.c2, vt1.c0, rt0.c3, t0.c0, rt0.c0, rt0.c4 HAVING ((SUM((0.12766320712056056 IN ()))) ISNULL);
SELECT rt0.c2, vt1.c0, rt0.c3, t0.c0, rt0.c0, rt0.c4 FROM t0, rt0 CROSS JOIN vt1 ON (((((rt0.c3)IS NOT(rt0.c1)), CASE WHEN rt0.c3 THEN t0.c0 WHEN -1619539710 THEN rt0.c4 WHEN rt0.c0 THEN t0.c0 END, ((t0.c0)<(rt0.c1))))<=((NULL, (rt0.c4 IN (rt0.c0)), ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY rt0.c2, vt1.c0, rt0.c3, t0.c0, rt0.c0, rt0.c4;
SELECT * FROM vt1 CROSS JOIN t0 ON (~ ((('-953163947') NOTNULL))) CROSS JOIN v0 ON -1047638457 CROSS JOIN rt0 ON ((rt0.c2)IS NOT((rt0.c2 IN ())));
SELECT ALL * FROM vt1 CROSS JOIN t0 ON (~ ((('-953163947') NOTNULL))) CROSS JOIN v0 ON -1047638457 CROSS JOIN rt0 ON ((rt0.c2)IS NOT((rt0.c2 IN ()))) WHERE (rt0.c3) UNION ALL SELECT * FROM vt1 CROSS JOIN t0 ON (~ ((('-953163947') NOTNULL))) CROSS JOIN v0 ON -1047638457 CROSS JOIN rt0 ON ((rt0.c2)IS NOT((rt0.c2 IN ()))) WHERE ((NOT (rt0.c3))) UNION ALL SELECT ALL * FROM vt1 CROSS JOIN t0 ON (~ ((('-953163947') NOTNULL))) CROSS JOIN v0 ON -1047638457 CROSS JOIN rt0 ON ((rt0.c2)IS NOT((rt0.c2 IN ()))) WHERE (((rt0.c3) ISNULL));
SELECT * FROM vt1 CROSS JOIN t0 ON (~ ((('-953163947') NOTNULL))) CROSS JOIN v0 ON -1047638457 CROSS JOIN rt0 ON ((rt0.c2)IS NOT((rt0.c2 IN ())));
SELECT DISTINCT rt0.c1, rt0.c3, v0.c1, v0.c2, rt0.c0 FROM vt1, v0, rt0 CROSS JOIN t0 ON LOWER(DISTINCT LIKE('', v0.c0, '_'));
SELECT DISTINCT rt0.c1, rt0.c3, v0.c1, v0.c2, rt0.c0 FROM vt1, v0, rt0 CROSS JOIN t0 ON LOWER(DISTINCT LIKE('', v0.c0, '_')) WHERE (NULL) UNION SELECT DISTINCT rt0.c1, rt0.c3, v0.c1, v0.c2, rt0.c0 FROM vt1, v0, rt0 CROSS JOIN t0 ON LOWER(DISTINCT LIKE('', v0.c0, '_')) WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c1, rt0.c3, v0.c1, v0.c2, rt0.c0 FROM vt1, v0, rt0 CROSS JOIN t0 ON LOWER(DISTINCT LIKE('', v0.c0, '_')) WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, v0.c1, v0.c2, rt0.c0 FROM vt1, v0, rt0 CROSS JOIN t0 ON LOWER(DISTINCT LIKE('', v0.c0, '_'));
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE BINARY) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE BINARY))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 NOT INDEXED WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE BINARY) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c0, v0.c0, vt1.c0, v0.c2, v0.c1 FROM t0, vt1 LEFT OUTER JOIN v0 ON (((v0.c1)) NOT BETWEEN (((t0.c0 IN (v0.c0)))) AND (((('558238844') NOTNULL)))) GROUP BY t0.c0, v0.c0, vt1.c0, v0.c2, v0.c1;
SELECT t0.c0, v0.c0, vt1.c0, v0.c2, v0.c1 FROM t0, vt1 LEFT OUTER JOIN v0 ON (((v0.c1)) NOT BETWEEN (((t0.c0 IN (v0.c0)))) AND (((('558238844') NOTNULL)))) GROUP BY t0.c0, v0.c0, vt1.c0, v0.c2, v0.c1 HAVING ((MIN(MIN(v0.c1)))<<('')) UNION ALL SELECT t0.c0, v0.c0, vt1.c0, v0.c2, v0.c1 FROM t0, vt1 LEFT OUTER JOIN v0 ON (((v0.c1)) NOT BETWEEN (((t0.c0 IN (v0.c0)))) AND (((('558238844') NOTNULL)))) GROUP BY t0.c0, v0.c0, vt1.c0, v0.c2, v0.c1 HAVING (NOT (((MIN(MIN(v0.c1)))<<('')))) UNION ALL SELECT t0.c0, v0.c0, vt1.c0, v0.c2, v0.c1 FROM t0, vt1 LEFT OUTER JOIN v0 ON (((v0.c1)) NOT BETWEEN (((t0.c0 IN (v0.c0)))) AND (((('558238844') NOTNULL)))) GROUP BY t0.c0, v0.c0, vt1.c0, v0.c2, v0.c1 HAVING ((((MIN(MIN(v0.c1)))<<(''))) ISNULL);
SELECT ALL v0.c2, v0.c0 FROM v0;
SELECT ALL v0.c2, v0.c0 FROM v0 WHERE ((- ((((v0.c1))>((NULL)))))) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 WHERE ((NOT ((- ((((v0.c1))>((NULL)))))))) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 WHERE ((((- ((((v0.c1))>((NULL)))))) ISNULL));
SELECT ALL v0.c2, v0.c0 FROM v0;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE (((((vt1.c0)%(vt1.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT (((((vt1.c0)%(vt1.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE (((((((vt1.c0)%(vt1.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT ALL vt1.c0, rt0.c2, v0.c0, rt0.c3, rt0.c4, v0.c1, rt0.c1 FROM rt0, vt1, t0, v0 GROUP BY vt1.c0, rt0.c2, v0.c0, rt0.c3, rt0.c4, v0.c1, rt0.c1;
SELECT vt1.c0, rt0.c2, v0.c0, rt0.c3, rt0.c4, v0.c1, rt0.c1 FROM rt0, vt1, t0, v0 WHERE (CAST(((vt1.c0)LIKE(rt0.c2)) AS INTEGER)) GROUP BY vt1.c0, rt0.c2, v0.c0, rt0.c3, rt0.c4, v0.c1, rt0.c1 UNION SELECT vt1.c0, rt0.c2, v0.c0, rt0.c3, rt0.c4, v0.c1, rt0.c1 FROM rt0, vt1, t0, v0 WHERE ((NOT (CAST(((vt1.c0)LIKE(rt0.c2)) AS INTEGER)))) GROUP BY vt1.c0, rt0.c2, v0.c0, rt0.c3, rt0.c4, v0.c1, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c2, v0.c0, rt0.c3, rt0.c4, v0.c1, rt0.c1 FROM rt0, vt1, t0, v0 WHERE (((CAST(((vt1.c0)LIKE(rt0.c2)) AS INTEGER)) ISNULL)) GROUP BY vt1.c0, rt0.c2, v0.c0, rt0.c3, rt0.c4, v0.c1, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, v0.c0, rt0.c3, rt0.c4, v0.c1, rt0.c1 FROM rt0, vt1, t0, v0 GROUP BY vt1.c0, rt0.c2, v0.c0, rt0.c3, rt0.c4, v0.c1, rt0.c1;
SELECT ALL v0.c1, rt0.c2, rt0.c1 FROM rt0, v0, vt1, t0 GROUP BY v0.c1, rt0.c2, rt0.c1;
SELECT ALL v0.c1, rt0.c2, rt0.c1 FROM rt0, v0, vt1, t0 GROUP BY v0.c1, rt0.c2, rt0.c1 HAVING (((COUNT(v0.c1) IN ())) BETWEEN (COUNT(*)) AND (CASE SUM(v0.c0)  WHEN AVG(MIN(SUM(t0.c0))) THEN TOTAL(GROUP_CONCAT(v0.c0)) ELSE GROUP_CONCAT(AVG(v0.c1)) END)) UNION ALL SELECT ALL v0.c1, rt0.c2, rt0.c1 FROM rt0, v0, vt1, t0 GROUP BY v0.c1, rt0.c2, rt0.c1 HAVING (NOT ((((COUNT(v0.c1) IN ())) BETWEEN (COUNT(*)) AND (CASE SUM(v0.c0)  WHEN AVG(MIN(SUM(t0.c0))) THEN TOTAL(GROUP_CONCAT(v0.c0)) ELSE GROUP_CONCAT(AVG(v0.c1)) END)))) UNION ALL SELECT v0.c1, rt0.c2, rt0.c1 FROM rt0, v0, vt1, t0 GROUP BY v0.c1, rt0.c2, rt0.c1 HAVING (((((COUNT(v0.c1) IN ())) BETWEEN (COUNT(*)) AND (CASE SUM(v0.c0)  WHEN AVG(MIN(SUM(t0.c0))) THEN TOTAL(GROUP_CONCAT(v0.c0)) ELSE GROUP_CONCAT(AVG(v0.c1)) END))) ISNULL);
SELECT * FROM t0, rt0 FULL OUTER JOIN v0 ON ((((((((0.34689493705767327)OR(rt0.c2)))OR(v0.c2)))AND((v0.c0 IN ()))))OR(CAST(rt0.c1 AS BLOB))) INNER JOIN vt1 ON (((((t0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))<>((((v0.c1))>((v0.c0)))));
SELECT * FROM t0, rt0 FULL OUTER JOIN v0 ON ((((((((0.34689493705767327)OR(rt0.c2)))OR(v0.c2)))AND((v0.c0 IN ()))))OR(CAST(rt0.c1 AS BLOB))) INNER JOIN vt1 ON (((((t0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))<>((((v0.c1))>((v0.c0))))) WHERE (CAST(CAST(rt0.c0 AS TEXT) AS BLOB)) UNION ALL SELECT ALL * FROM t0, rt0 FULL OUTER JOIN v0 ON ((((((((0.34689493705767327)OR(rt0.c2)))OR(v0.c2)))AND((v0.c0 IN ()))))OR(CAST(rt0.c1 AS BLOB))) INNER JOIN vt1 ON (((((t0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))<>((((v0.c1))>((v0.c0))))) WHERE ((NOT (CAST(CAST(rt0.c0 AS TEXT) AS BLOB)))) UNION ALL SELECT * FROM t0, rt0 FULL OUTER JOIN v0 ON ((((((((0.34689493705767327)OR(rt0.c2)))OR(v0.c2)))AND((v0.c0 IN ()))))OR(CAST(rt0.c1 AS BLOB))) INNER JOIN vt1 ON (((((t0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))!=((((v0.c1))>((v0.c0))))) WHERE (((CAST(CAST(rt0.c0 AS TEXT) AS BLOB)) ISNULL));
SELECT * FROM t0, rt0 FULL OUTER JOIN v0 ON ((((((((0.34689493705767327)OR(rt0.c2)))OR(v0.c2)))AND((v0.c0 IN ()))))OR(CAST(rt0.c1 AS BLOB))) INNER JOIN vt1 ON (((((t0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))<>((((v0.c1))>((v0.c0)))));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (UPPER((v0.c0 IN ()))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (UPPER((v0.c0 IN ()))))) UNION SELECT DISTINCT * FROM v0 WHERE (((UPPER((v0.c0 IN ()))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (TRIM(UNICODE(t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (TRIM(UNICODE(t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((TRIM(UNICODE(t0.c0))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING SQLITE_VERSION() UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING (NOT (SQLITE_VERSION())) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING ((SQLITE_VERSION()) ISNULL);
SELECT vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING SQLITE_VERSION() UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING (NOT (SQLITE_VERSION())) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING ((SQLITE_VERSION()) ISNULL);
SELECT vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c2;
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((((((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))OR(((v0.c1)||(v0.c0)))))AND(CAST(t0.c0 AS TEXT)));
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((((((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))OR(((v0.c1)||(v0.c0)))))AND(CAST(t0.c0 AS TEXT))) WHERE (((((v0.c2)<(v0.c0))) IS TRUE)) UNION ALL SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((((((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))OR(((v0.c1)||(v0.c0)))))AND(CAST(t0.c0 AS TEXT))) WHERE ((NOT (((((v0.c2)<(v0.c0))) IS TRUE)))) UNION ALL SELECT * FROM t0 RIGHT OUTER JOIN v0 ON ((((((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))OR(((v0.c1)||(v0.c0)))))AND(CAST(t0.c0 AS TEXT))) WHERE (((((((v0.c2)<(v0.c0))) IS TRUE)) ISNULL));
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((((((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))OR(((v0.c1)||(v0.c0)))))AND(CAST(t0.c0 AS TEXT)));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (NULL) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((NULL) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE (((((((((((((rt0.c4)OR(rt0.c4)))AND(x'')))OR(0.5712378081551885)))OR(STRFTIME(rt0.c2, rt0.c2, '0.6679890166198188'))))OR(CAST(rt0.c1 AS BLOB))))OR(x'1519'))) GROUP BY rt0.c0, rt0.c1, rt0.c3 UNION SELECT rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (((((((((((((rt0.c4)OR(rt0.c4)))AND(x'')))OR(0.5712378081551885)))OR(STRFTIME(rt0.c2, rt0.c2, '0.6679890166198188'))))OR(CAST(rt0.c1 AS BLOB))))OR(x'1519'))))) GROUP BY rt0.c0, rt0.c1, rt0.c3 UNION SELECT rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE (((((((((((((((rt0.c4)OR(rt0.c4)))AND(x'')))OR(0.5712378081551885)))OR(STRFTIME(rt0.c2, rt0.c2, '0.6679890166198188'))))OR(CAST(rt0.c1 AS BLOB))))OR(x'1519'))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c3, rt0.c0 FROM rt0, v0, t0 GROUP BY rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c0 FROM rt0, v0, t0 GROUP BY rt0.c3, rt0.c0 HAVING GROUP_CONCAT(((t0.c0) NOT BETWEEN (rt0.c4) AND (t0.c0))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0, v0, t0 GROUP BY rt0.c3, rt0.c0 HAVING (NOT (GROUP_CONCAT(((t0.c0) NOT BETWEEN (rt0.c4) AND (t0.c0))))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0, v0, t0 GROUP BY rt0.c3, rt0.c0 HAVING ((GROUP_CONCAT(((t0.c0) NOT BETWEEN (rt0.c4) AND (t0.c0)))) ISNULL);
SELECT rt0.c3, rt0.c0 FROM rt0, v0, t0 GROUP BY rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c0 FROM rt0, v0, t0 GROUP BY rt0.c3, rt0.c0 HAVING GROUP_CONCAT(((t0.c0) NOT BETWEEN (rt0.c4) AND (t0.c0))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0, v0, t0 GROUP BY rt0.c3, rt0.c0 HAVING (NOT (GROUP_CONCAT(((t0.c0) NOT BETWEEN (rt0.c4) AND (t0.c0))))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0, v0, t0 GROUP BY rt0.c3, rt0.c0 HAVING ((GROUP_CONCAT(((t0.c0) NOT BETWEEN (rt0.c4) AND (t0.c0)))) ISNULL);
SELECT rt0.c3, rt0.c0 FROM rt0, v0, t0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL SUM((((rt0.c2) IS FALSE) IN (((((rt0.c2)OR(rt0.c1)))AND(v0.c0))))) FROM v0, rt0, t0 ORDER BY ((((rt0.c1)&(rt0.c2)))IS(((rt0.c4)IS(v0.c0))))  NULLS LAST;
SELECT ALL * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE (((UNLIKELY(rt0.c2)) NOTNULL)) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (((UNLIKELY(rt0.c2)) NOTNULL)))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((((UNLIKELY(rt0.c2)) NOTNULL)) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE (((((((((CAST(rt0.c0 AS REAL))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))))))AND(rt0.c4)))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c4)))))OR(CAST(rt0.c4 AS NUMERIC)))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (((((((((CAST(rt0.c0 AS REAL))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))))))AND(rt0.c4)))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c4)))))OR(CAST(rt0.c4 AS NUMERIC)))))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE (((((((((((CAST(rt0.c0 AS REAL))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))))))AND(rt0.c4)))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c4)))))OR(CAST(rt0.c4 AS NUMERIC)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1 FROM rt0;
SELECT ALL vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, rt0 WHERE (((((rt0.c3) BETWEEN (1.276985362E9) AND (vt1.c0)))-(((vt1.c0)OR(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, rt0 WHERE ((NOT (((((rt0.c3) BETWEEN (1.276985362E9) AND (vt1.c0)))-(((vt1.c0)OR(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, rt0 WHERE (((((((rt0.c3) BETWEEN (1.276985362E9) AND (vt1.c0)))-(((vt1.c0)OR(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0, v0.c0, v0.c1, v0.c2 FROM v0, vt1 GROUP BY vt1.c0, v0.c0, v0.c1, v0.c2;
SELECT ALL vt1.c0, v0.c0, v0.c1, v0.c2 FROM v0, vt1 GROUP BY vt1.c0, v0.c0, v0.c1, v0.c2 HAVING MAX(((GROUP_CONCAT(SUM(vt1.c0))) IS TRUE)) UNION ALL SELECT ALL vt1.c0, v0.c0, v0.c1, v0.c2 FROM v0, vt1 GROUP BY vt1.c0, v0.c0, v0.c1, v0.c2 HAVING (NOT (MAX(((GROUP_CONCAT(SUM(vt1.c0))) IS TRUE)))) UNION ALL SELECT ALL vt1.c0, v0.c0, v0.c1, v0.c2 FROM v0, vt1 GROUP BY vt1.c0, v0.c0, v0.c1, v0.c2 HAVING ((MAX(((GROUP_CONCAT(SUM(vt1.c0))) IS TRUE))) ISNULL);
SELECT rt0.c1, rt0.c4, v0.c2, rt0.c2 FROM rt0 CROSS JOIN v0 ON (((NULL, rt0.c2, rt0.c0)) NOT BETWEEN (((- (rt0.c2)), ((rt0.c2)IS(rt0.c3)), rt0.c1 COLLATE RTRIM)) AND ((((v0.c1)+(rt0.c3)), CASE WHEN v0.c1 THEN v0.c2 WHEN x'' THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END, CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN v0.c1 END)));
SELECT ALL rt0.c1, rt0.c4, v0.c2, rt0.c2 FROM rt0 CROSS JOIN v0 ON (((NULL, rt0.c2, rt0.c0)) NOT BETWEEN (((- (rt0.c2)), ((rt0.c2)IS(rt0.c3)), rt0.c1 COLLATE RTRIM)) AND ((((v0.c1)+(rt0.c3)), CASE WHEN v0.c1 THEN v0.c2 WHEN x'' THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END, CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN v0.c1 END))) WHERE ((((('-1e500')OR(rt0.c2))) NOT NULL)) UNION ALL SELECT ALL rt0.c1, rt0.c4, v0.c2, rt0.c2 FROM rt0 CROSS JOIN v0 ON (((NULL, rt0.c2, rt0.c0)) NOT BETWEEN (((- (rt0.c2)), ((rt0.c2)IS(rt0.c3)), rt0.c1 COLLATE RTRIM)) AND ((((v0.c1)+(rt0.c3)), CASE WHEN v0.c1 THEN v0.c2 WHEN x'' THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END, CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN v0.c1 END))) WHERE ((NOT ((((('-1e500')OR(rt0.c2))) NOT NULL)))) UNION ALL SELECT ALL rt0.c1, rt0.c4, v0.c2, rt0.c2 FROM rt0 CROSS JOIN v0 ON (((NULL, rt0.c2, rt0.c0)) NOT BETWEEN (((- (rt0.c2)), ((rt0.c2)IS(rt0.c3)), rt0.c1 COLLATE RTRIM)) AND ((((v0.c1)+(rt0.c3)), CASE WHEN v0.c1 THEN v0.c2 WHEN x'' THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END, CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN v0.c1 END))) WHERE ((((((('-1e500')OR(rt0.c2))) NOT NULL)) ISNULL));
SELECT rt0.c1, rt0.c4, v0.c2, rt0.c2 FROM rt0 CROSS JOIN v0 ON (((NULL, rt0.c2, rt0.c0)) NOT BETWEEN (((- (rt0.c2)), ((rt0.c2)IS(rt0.c3)), rt0.c1 COLLATE RTRIM)) AND ((((v0.c1)+(rt0.c3)), CASE WHEN v0.c1 THEN v0.c2 WHEN x'' THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END, CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN v0.c1 END)));
SELECT DISTINCT * FROM t0 NOT INDEXED, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE (x'') UNION SELECT DISTINCT * FROM t0, vt1 NOT INDEXED WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM t0 NOT INDEXED, vt1;
SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, rt0 WHERE (CAST(((rt0.c1)AND(rt0.c1)) AS REAL)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt1, rt0 WHERE ((NOT (CAST(((rt0.c1)AND(rt0.c1)) AS REAL)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt1, rt0 WHERE (((CAST(((rt0.c1)AND(rt0.c1)) AS REAL)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT rt0.c3, t0.c0, vt1.c0, rt0.c2 FROM vt1, t0, v0, rt0 GROUP BY rt0.c3, t0.c0, vt1.c0, rt0.c2;
SELECT rt0.c3, t0.c0, vt1.c0, rt0.c2 FROM vt1, t0, v0, rt0 GROUP BY rt0.c3, t0.c0, vt1.c0, rt0.c2 HAVING ((((vt1.c0)<>(COUNT(v0.c2)))) BETWEEN (COUNT(*)) AND (MIN(COUNT(*)))) UNION ALL SELECT ALL rt0.c3, t0.c0, vt1.c0, rt0.c2 FROM vt1, t0, v0, rt0 GROUP BY rt0.c3, t0.c0, vt1.c0, rt0.c2 HAVING (NOT (((((vt1.c0)<>(COUNT(v0.c2)))) BETWEEN (COUNT(*)) AND (MIN(COUNT(*)))))) UNION ALL SELECT ALL rt0.c3, t0.c0, vt1.c0, rt0.c2 FROM vt1, t0, v0, rt0 GROUP BY rt0.c3, t0.c0, vt1.c0, rt0.c2 HAVING ((((((vt1.c0)!=(COUNT(v0.c2)))) BETWEEN (COUNT(*)) AND (MIN(COUNT(*))))) ISNULL);
SELECT * FROM vt1, v0, t0, rt0;
SELECT ALL * FROM vt1, v0, t0, rt0 WHERE (rt0.c1) UNION ALL SELECT * FROM vt1, v0, t0, rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM vt1, v0, t0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM vt1, v0, t0, rt0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE ((('!k쁏x&\?o' IN (v0.c1)) IN (CAST(t0.c0 AS INTEGER)))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT ((('!k쁏x&\?o' IN (v0.c1)) IN (CAST(t0.c0 AS INTEGER)))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((((('!k쁏x&\?o' IN (v0.c1)) IN (CAST(t0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT v0.c0, v0.c1 FROM v0, t0, vt1 GROUP BY v0.c0, v0.c1;
SELECT ALL v0.c0, v0.c1 FROM v0, t0, vt1 WHERE ((+ ((((('0[hS')AND(v0.c0)))AND(t0.c0))))) GROUP BY v0.c0, v0.c1 UNION SELECT v0.c0, v0.c1 FROM v0, t0, vt1 WHERE ((NOT ((+ ((((('0[hS')AND(v0.c0)))AND(t0.c0))))))) GROUP BY v0.c0, v0.c1 UNION SELECT v0.c0, v0.c1 FROM v0, t0, vt1 WHERE ((((+ ((((('0[hS')AND(v0.c0)))AND(t0.c0))))) ISNULL)) GROUP BY v0.c0, v0.c1;
SELECT v0.c0, v0.c1 FROM v0, t0, vt1 GROUP BY v0.c0, v0.c1;
SELECT ALL v0.c0, vt1.c0 FROM t0, v0, vt1 GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM t0, v0, vt1 GROUP BY v0.c0, vt1.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT v0.c0, vt1.c0 FROM t0, v0, vt1 GROUP BY v0.c0, vt1.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT v0.c0, vt1.c0 FROM t0, v0, vt1 GROUP BY v0.c0, vt1.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL MAX(-952572767) FROM vt1, rt0;
SELECT ALL * FROM t0, vt1, v0;
SELECT ALL * FROM t0, vt1, v0 WHERE (CASE t0.c0 COLLATE BINARY  WHEN ((v0.c1) IS FALSE) THEN CASE WHEN NULL THEN v0.c1 ELSE t0.c0 END END) UNION ALL SELECT ALL * FROM t0, vt1, v0 WHERE ((NOT (CASE t0.c0 COLLATE BINARY  WHEN ((v0.c1) IS FALSE) THEN CASE WHEN NULL THEN v0.c1 ELSE t0.c0 END END))) UNION ALL SELECT ALL * FROM t0 NOT INDEXED, vt1, v0 WHERE (((CASE t0.c0 COLLATE BINARY  WHEN ((v0.c1) IS FALSE) THEN CASE WHEN NULL THEN v0.c1 ELSE t0.c0 END END) ISNULL));
SELECT ALL * FROM t0, vt1, v0;
SELECT DISTINCT rt0.c4, v0.c2, rt0.c2, t0.c0, rt0.c0, rt0.c3, v0.c0, rt0.c1 FROM t0, v0, rt0;
SELECT DISTINCT rt0.c4, v0.c2, rt0.c2, t0.c0, rt0.c0, rt0.c3, v0.c0, rt0.c1 FROM t0, v0, rt0 WHERE (x'') UNION SELECT DISTINCT rt0.c4, v0.c2, rt0.c2, t0.c0, rt0.c0, rt0.c3, v0.c0, rt0.c1 FROM t0, v0, rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c4, v0.c2, rt0.c2, t0.c0, rt0.c0, rt0.c3, v0.c0, rt0.c1 FROM t0, v0, rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c4, v0.c2, rt0.c2, t0.c0, rt0.c0, rt0.c3, v0.c0, rt0.c1 FROM t0, v0, rt0;
SELECT ALL rt0.c2, t0.c0, rt0.c3, rt0.c1, rt0.c0, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c2) NOT NULL) IN (t0.c0 COLLATE NOCASE)) CROSS JOIN t0 ON CASE ((((rt0.c3)AND('tdxU')))AND('-1359469011'))  WHEN RTRIM(rt0.c0) THEN (NOT (rt0.c4)) WHEN 'Q2jIViL,J' THEN ((vt1.c0)LIKE(rt0.c0)) WHEN ((((rt0.c1)OR(vt1.c0)))AND(t0.c0)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (vt1.c0)) ELSE CASE WHEN rt0.c3 THEN rt0.c0 END END GROUP BY rt0.c2, t0.c0, rt0.c3, rt0.c1, rt0.c0, vt1.c0;
SELECT vt1.c0, v0.c0, t0.c0 FROM vt1, t0, v0 GROUP BY vt1.c0, v0.c0, t0.c0;
SELECT ALL vt1.c0, v0.c0, t0.c0 FROM vt1, t0, v0 GROUP BY vt1.c0, v0.c0, t0.c0 HAVING ((((((((SUM(vt1.c0))AND(MIN(v0.c2) COLLATE BINARY)))AND(SUM(MAX(MAX(COUNT(MAX(MIN(v0.c2)))))))))AND(((v0.c2) NOT BETWEEN (v0.c1) AND (COUNT(vt1.c0))))))OR(v0.c2)) UNION ALL SELECT vt1.c0, v0.c0, t0.c0 FROM vt1, t0, v0 GROUP BY vt1.c0, v0.c0, t0.c0 HAVING (NOT (((((((((SUM(vt1.c0))AND(MIN(v0.c2) COLLATE BINARY)))AND(SUM(MAX(MAX(COUNT(MAX(MIN(v0.c2)))))))))AND(((v0.c2) NOT BETWEEN (v0.c1) AND (COUNT(vt1.c0))))))OR(v0.c2)))) UNION ALL SELECT vt1.c0, v0.c0, t0.c0 FROM vt1, t0, v0 GROUP BY vt1.c0, v0.c0, t0.c0 HAVING ((((((((((SUM(vt1.c0))AND(MIN(v0.c2) COLLATE BINARY)))AND(SUM(MAX(MAX(COUNT(MAX(MIN(v0.c2)))))))))AND(((v0.c2) NOT BETWEEN (v0.c1) AND (COUNT(vt1.c0))))))OR(v0.c2))) ISNULL);
SELECT * FROM rt0, vt1, t0;
SELECT * FROM rt0, vt1, t0 WHERE ((('s')/(rt0.c1 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0, vt1, t0 WHERE ((NOT ((('s')/(rt0.c1 COLLATE RTRIM))))) UNION ALL SELECT * FROM rt0, vt1, t0 WHERE ((((('s')/(rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT * FROM rt0, vt1, t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c2) BETWEEN (((v0.c1) BETWEEN (v0.c0) AND (v0.c0))) AND ((v0.c0 IN ())))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c2) BETWEEN (((v0.c1) BETWEEN (v0.c0) AND (v0.c0))) AND ((v0.c0 IN ())))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c2) BETWEEN (((v0.c1) BETWEEN (v0.c0) AND (v0.c0))) AND ((v0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c4, t0.c0, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c2;
SELECT rt0.c4, t0.c0, rt0.c0, rt0.c2 FROM t0, rt0 WHERE ((((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)) IN ())) GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c4, t0.c0, rt0.c0, rt0.c2 FROM t0, rt0 WHERE ((NOT ((((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)) IN ())))) GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c2 UNION SELECT rt0.c4, t0.c0, rt0.c0, rt0.c2 FROM t0, rt0 WHERE ((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)) IN ())) ISNULL)) GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c2;
SELECT rt0.c4, t0.c0, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c4, v0.c1 FROM v0, t0, rt0 FULL OUTER JOIN vt1 ON (NOT ((+ ('0.17727040492971358')))) GROUP BY rt0.c0, rt0.c4, v0.c1;
SELECT rt0.c0, rt0.c4, v0.c1 FROM v0, t0, rt0 FULL OUTER JOIN vt1 ON (NOT ((+ ('0.17727040492971358')))) GROUP BY rt0.c0, rt0.c4, v0.c1 HAVING CAST(((SUM(t0.c0)) BETWEEN (MAX(COUNT(*))) AND (v0.c0)) AS NUMERIC) UNION ALL SELECT rt0.c0, rt0.c4, v0.c1 FROM v0, t0, rt0 FULL OUTER JOIN vt1 ON (NOT ((+ ('0.17727040492971358')))) GROUP BY rt0.c0, rt0.c4, v0.c1 HAVING (NOT (CAST(((SUM(t0.c0)) BETWEEN (MAX(COUNT(*))) AND (v0.c0)) AS NUMERIC))) UNION ALL SELECT ALL rt0.c0, rt0.c4, v0.c1 FROM v0, t0, rt0 FULL OUTER JOIN vt1 ON (NOT ((+ ('0.17727040492971358')))) GROUP BY rt0.c0, rt0.c4, v0.c1 HAVING ((CAST(((SUM(t0.c0)) BETWEEN (MAX(COUNT(*))) AND (v0.c0)) AS NUMERIC)) ISNULL);
SELECT * FROM rt0, vt1, v0;
SELECT * FROM rt0, vt1, v0 WHERE ((((rt0.c2)) BETWEEN (((NOT (rt0.c4)))) AND ((((vt1.c0) IS TRUE))))) UNION ALL SELECT * FROM rt0, vt1, v0 WHERE ((NOT ((((rt0.c2)) BETWEEN (((NOT (rt0.c4)))) AND ((((vt1.c0) IS TRUE))))))) UNION ALL SELECT ALL * FROM rt0, vt1, v0 WHERE ((((((rt0.c2)) BETWEEN (((NOT (rt0.c4)))) AND ((((vt1.c0) IS TRUE))))) ISNULL));
SELECT * FROM rt0, vt1, v0;
SELECT DISTINCT rt0.c1, rt0.c3, v0.c2, t0.c0, rt0.c0, v0.c1 FROM t0, v0, vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c3, v0.c2, t0.c0, rt0.c0, v0.c1 FROM t0, v0, vt1, rt0 WHERE (NULL) UNION SELECT DISTINCT rt0.c1, rt0.c3, v0.c2, t0.c0, rt0.c0, v0.c1 FROM t0, v0, vt1, rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c1, rt0.c3, v0.c2, t0.c0, rt0.c0, v0.c1 FROM t0, v0, vt1, rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, v0.c2, t0.c0, rt0.c0, v0.c1 FROM t0, v0, vt1, rt0;
SELECT ALL t0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c1)/(rt0.c2)) RIGHT OUTER JOIN t0 ON (t0.c0 IN (rt0.c2, rt0.c1)) COLLATE NOCASE COLLATE BINARY GROUP BY t0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2;
SELECT ALL t0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c1)/(rt0.c2)) RIGHT OUTER JOIN t0 ON (t0.c0 IN (rt0.c2, rt0.c1)) COLLATE NOCASE COLLATE BINARY WHERE (load_extension(((rt0.c1)%(rt0.c2)))) GROUP BY t0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2 UNION SELECT ALL t0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c1)/(rt0.c2)) RIGHT OUTER JOIN t0 ON (t0.c0 IN (rt0.c2, rt0.c1)) COLLATE NOCASE COLLATE BINARY WHERE ((NOT (load_extension(((rt0.c1)%(rt0.c2)))))) GROUP BY t0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2 UNION SELECT ALL t0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c1)/(rt0.c2)) RIGHT OUTER JOIN t0 ON (t0.c0 IN (rt0.c2, rt0.c1)) COLLATE NOCASE COLLATE BINARY WHERE (((load_extension(((rt0.c1)%(rt0.c2)))) ISNULL)) GROUP BY t0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2;
SELECT ALL t0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c1)/(rt0.c2)) RIGHT OUTER JOIN t0 ON (t0.c0 IN (rt0.c2, rt0.c1)) COLLATE NOCASE COLLATE BINARY GROUP BY t0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2;
SELECT ALL t0.c0 FROM rt0, v0, t0 FULL OUTER JOIN vt1 ON (((0.8311571931958762)) BETWEEN ((t0.c0)) AND (((- (rt0.c4))))) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM rt0, v0, t0 FULL OUTER JOIN vt1 ON (((0.8311571931958762)) BETWEEN ((t0.c0)) AND (((- (rt0.c4))))) GROUP BY t0.c0 HAVING COUNT(SUM(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM rt0, v0, t0 FULL OUTER JOIN vt1 ON (((0.8311571931958762)) BETWEEN ((t0.c0)) AND (((- (rt0.c4))))) GROUP BY t0.c0 HAVING (NOT (COUNT(SUM(t0.c0)))) UNION ALL SELECT t0.c0 FROM rt0, v0, t0 FULL OUTER JOIN vt1 ON (((0.8311571931958762)) BETWEEN ((t0.c0)) AND (((- (rt0.c4))))) GROUP BY t0.c0 HAVING ((COUNT(SUM(t0.c0))) ISNULL);
SELECT ALL * FROM v0, rt0, t0;
SELECT ALL * FROM v0, rt0, t0 WHERE (((((('C<뱼8_髙Ed>'))==((v0.c2))))||(((((v0.c0)OR(t0.c0)))OR(rt0.c4))))) UNION ALL SELECT ALL * FROM v0, rt0, t0 WHERE ((NOT (((((('C<뱼8_髙Ed>'))=((v0.c2))))||(((((v0.c0)OR(t0.c0)))OR(rt0.c4))))))) UNION ALL SELECT * FROM v0, rt0, t0 WHERE (((((((('C<뱼8_髙Ed>'))=((v0.c2))))||(((((v0.c0)OR(t0.c0)))OR(rt0.c4))))) ISNULL));
SELECT ALL * FROM v0, rt0, t0;
SELECT DISTINCT * FROM t0, rt0 NOT INDEXED;
SELECT DISTINCT * FROM t0, rt0 WHERE (CASE WHEN ((rt0.c3) ISNULL) THEN rt0.c4 END) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (CASE WHEN ((rt0.c3) ISNULL) THEN rt0.c4 END))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((CASE WHEN ((rt0.c3) ISNULL) THEN rt0.c4 END) ISNULL));
SELECT DISTINCT * FROM t0, rt0 NOT INDEXED;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c4, t0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON (~ (((t0.c0)%(rt0.c1)))) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c4, t0.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c4, t0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON (~ (((t0.c0)%(rt0.c1)))) WHERE (((((rt0.c3)IS NOT(rt0.c1))) NOT BETWEEN (((rt0.c2)*(rt0.c4))) AND ((rt0.c4 IN ())))) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c4, t0.c0, rt0.c0 UNION SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c4, t0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON (~ (((t0.c0)%(rt0.c1)))) WHERE ((NOT (((((rt0.c3)IS NOT(rt0.c1))) NOT BETWEEN (((rt0.c2)*(rt0.c4))) AND ((rt0.c4 IN ())))))) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c4, t0.c0, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c4, t0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON (~ (((t0.c0)%(rt0.c1)))) WHERE (((((((rt0.c3)IS NOT(rt0.c1))) NOT BETWEEN (((rt0.c2)*(rt0.c4))) AND ((rt0.c4 IN ())))) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c4, t0.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c4, t0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON (~ (((t0.c0)%(rt0.c1)))) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c4, t0.c0, rt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (AVG(vt1.c0) IN ()) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((AVG(vt1.c0) IN ()))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((AVG(vt1.c0) IN ())) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (AVG(vt1.c0) IN ()) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((AVG(vt1.c0) IN ()))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((AVG(vt1.c0) IN ())) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2, v0.c2, v0.c0, vt1.c0, v0.c1, rt0.c4 FROM t0, rt0, vt1, v0;
SELECT t0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2, v0.c2, v0.c0, vt1.c0, v0.c1, rt0.c4 FROM t0, rt0, vt1, v0 WHERE (((CASE t0.c0  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN v0.c1 ELSE v0.c2 END) NOT BETWEEN ((((NULL, rt0.c2, rt0.c4))==((rt0.c0, vt1.c0, vt1.c0)))) AND (x''))) UNION ALL SELECT ALL t0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2, v0.c2, v0.c0, vt1.c0, v0.c1, rt0.c4 FROM t0, rt0, vt1, v0 WHERE ((NOT (((CASE t0.c0  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN v0.c1 ELSE v0.c2 END) NOT BETWEEN ((((NULL, rt0.c2, rt0.c4))==((rt0.c0, vt1.c0, vt1.c0)))) AND (x''))))) UNION ALL SELECT ALL t0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2, v0.c2, v0.c0, vt1.c0, v0.c1, rt0.c4 FROM t0, rt0, vt1, v0 WHERE (((((CASE t0.c0  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN v0.c1 ELSE v0.c2 END) NOT BETWEEN ((((NULL, rt0.c2, rt0.c4))=((rt0.c0, vt1.c0, vt1.c0)))) AND (x''))) ISNULL));
SELECT ALL t0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c2, v0.c2, v0.c0, vt1.c0, v0.c1, rt0.c4 FROM t0, rt0, vt1, v0;
SELECT DISTINCT vt1.c0, v0.c1, v0.c2, t0.c0, rt0.c0 FROM v0, t0, vt1, rt0;
SELECT DISTINCT vt1.c0, v0.c1, v0.c2, t0.c0, rt0.c0 FROM v0, t0, vt1, rt0 WHERE (rt0.c4 COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0, v0.c1, v0.c2, t0.c0, rt0.c0 FROM v0, t0, vt1, rt0 WHERE ((NOT (rt0.c4 COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0, v0.c1, v0.c2, t0.c0, rt0.c0 FROM v0, t0, vt1, rt0 WHERE (((rt0.c4 COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0, v0.c1, v0.c2, t0.c0, rt0.c0 FROM v0, t0, vt1, rt0;
SELECT ALL v0.c1, v0.c2, t0.c0, v0.c0 FROM t0, v0 GROUP BY v0.c1, v0.c2, t0.c0, v0.c0;
SELECT v0.c1, v0.c2, t0.c0, v0.c0 FROM t0, v0 WHERE ((+ (CAST(v0.c1 AS NUMERIC)))) GROUP BY v0.c1, v0.c2, t0.c0, v0.c0 UNION SELECT ALL v0.c1, v0.c2, t0.c0, v0.c0 FROM t0, v0 WHERE ((NOT ((+ (CAST(v0.c1 AS NUMERIC)))))) GROUP BY v0.c1, v0.c2, t0.c0, v0.c0 UNION SELECT v0.c1, v0.c2, t0.c0, v0.c0 FROM t0, v0 WHERE ((((+ (CAST(v0.c1 AS NUMERIC)))) ISNULL)) GROUP BY v0.c1, v0.c2, t0.c0, v0.c0;
SELECT ALL v0.c1, v0.c2, t0.c0, v0.c0 FROM t0, v0 GROUP BY v0.c1, v0.c2, t0.c0, v0.c0;
SELECT rt0.c0, v0.c1, rt0.c1, v0.c2, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c1, rt0.c1, v0.c2, rt0.c3, rt0.c2;
SELECT rt0.c0, v0.c1, rt0.c1, v0.c2, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c1, rt0.c1, v0.c2, rt0.c3, rt0.c2 HAVING AVG(((SUM(v0.c0)) NOTNULL)) UNION ALL SELECT rt0.c0, v0.c1, rt0.c1, v0.c2, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c1, rt0.c1, v0.c2, rt0.c3, rt0.c2 HAVING (NOT (AVG(((SUM(v0.c0)) NOTNULL)))) UNION ALL SELECT rt0.c0, v0.c1, rt0.c1, v0.c2, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c1, rt0.c1, v0.c2, rt0.c3, rt0.c2 HAVING ((AVG(((SUM(v0.c0)) NOTNULL))) ISNULL);
SELECT ALL * FROM rt0, vt1, t0;
SELECT ALL * FROM rt0, vt1, t0 WHERE (CAST(((((rt0.c3)AND(rt0.c1)))OR(t0.c0)) AS TEXT)) UNION ALL SELECT ALL * FROM rt0, vt1, t0 WHERE ((NOT (CAST(((((rt0.c3)AND(rt0.c1)))OR(t0.c0)) AS TEXT)))) UNION ALL SELECT * FROM rt0, vt1, t0 WHERE (((CAST(((((rt0.c3)AND(rt0.c1)))OR(t0.c0)) AS TEXT)) ISNULL));
SELECT ALL * FROM rt0, vt1, t0;
SELECT DISTINCT * FROM rt0, vt1, v0;
SELECT DISTINCT * FROM rt0, vt1, v0 WHERE ((((rt0.c2)) NOT BETWEEN ((x'90f1')) AND ((json_extract(v0.c0, rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, vt1, v0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((x'90f1')) AND ((json_extract(v0.c0, rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0, vt1 NOT INDEXED, v0 WHERE ((((((rt0.c2)) NOT BETWEEN ((x'90f1')) AND ((json_extract(v0.c0, rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, v0;
SELECT rt0.c1, vt1.c0 FROM vt1, rt0, t0 GROUP BY rt0.c1, vt1.c0;
SELECT ALL rt0.c1, vt1.c0 FROM vt1, rt0, t0 WHERE (COALESCE(DISTINCT ((((rt0.c2)OR(t0.c0)))AND(vt1.c0)), ((rt0.c0)+(rt0.c4)))) GROUP BY rt0.c1, vt1.c0 UNION SELECT ALL rt0.c1, vt1.c0 FROM vt1, rt0, t0 WHERE ((NOT (COALESCE(DISTINCT ((((rt0.c2)OR(t0.c0)))AND(vt1.c0)), ((rt0.c0)+(rt0.c4)))))) GROUP BY rt0.c1, vt1.c0 UNION SELECT rt0.c1, vt1.c0 FROM vt1, rt0, t0 WHERE (((COALESCE(DISTINCT ((((rt0.c2)OR(t0.c0)))AND(vt1.c0)), ((rt0.c0)+(rt0.c4)))) ISNULL)) GROUP BY rt0.c1, vt1.c0;
SELECT rt0.c1, vt1.c0 FROM vt1, rt0, t0 GROUP BY rt0.c1, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(UPPER(MIN(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(UPPER(MIN(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(UPPER(MIN(vt1.c0)))) ISNULL);
SELECT ALL MAX(((DATE(rt0.c0, v0.c2, rt0.c3))==(UNICODE(v0.c0)))) FROM v0, rt0;
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((t0.c0)+(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((NOT (((t0.c0)+(t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((NOT (((t0.c0)+(t0.c0))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON 0.5836010512770228;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON 0.5836010512770228 WHERE (rt0.c2 COLLATE NOCASE) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON 0.5836010512770228 WHERE ((NOT (rt0.c2 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON 0.5836010512770228 WHERE (((rt0.c2 COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON 0.5836010512770228;
SELECT ALL rt0.c1, t0.c0, v0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c2, rt0.c4 FROM vt1, t0, rt0 INNER JOIN v0 ON (((((rt0.c0) NOTNULL)))>=((((vt1.c0) IS TRUE)))) GROUP BY rt0.c1, t0.c0, v0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c2, rt0.c4;
SELECT ALL rt0.c1, t0.c0, v0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c2, rt0.c4 FROM vt1, t0, rt0 INNER JOIN v0 ON (((((rt0.c0) NOTNULL)))>=((((vt1.c0) IS TRUE)))) WHERE ((~ ((t0.c0 IN (v0.c0))))) GROUP BY rt0.c1, t0.c0, v0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c2, rt0.c4 UNION SELECT ALL rt0.c1, t0.c0, v0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c2, rt0.c4 FROM vt1, t0, rt0 INNER JOIN v0 ON (((((rt0.c0) NOTNULL)))>=((((vt1.c0) IS TRUE)))) WHERE ((NOT ((~ ((t0.c0 IN (v0.c0))))))) GROUP BY rt0.c1, t0.c0, v0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c2, rt0.c4 UNION SELECT ALL rt0.c1, t0.c0, v0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c2, rt0.c4 FROM vt1, t0, rt0 INNER JOIN v0 ON (((((rt0.c0) NOTNULL)))>=((((vt1.c0) IS TRUE)))) WHERE ((((~ ((t0.c0 IN (v0.c0))))) ISNULL)) GROUP BY rt0.c1, t0.c0, v0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c2, rt0.c4;
SELECT ALL rt0.c1, t0.c0, v0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c2, rt0.c4 FROM vt1, t0, rt0 INNER JOIN v0 ON (((((rt0.c0) NOTNULL)))>=((((vt1.c0) IS TRUE)))) GROUP BY rt0.c1, t0.c0, v0.c1, rt0.c2, rt0.c0, vt1.c0, v0.c2, rt0.c4;
SELECT v0.c2, vt1.c0, v0.c0, t0.c0 FROM vt1, t0 NATURAL JOIN v0 GROUP BY v0.c2, vt1.c0, v0.c0, t0.c0;
SELECT v0.c2, vt1.c0, v0.c0, t0.c0 FROM vt1, t0 NATURAL JOIN v0 GROUP BY v0.c2, vt1.c0, v0.c0, t0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c2, vt1.c0, v0.c0, t0.c0 FROM vt1, t0 NATURAL JOIN v0 GROUP BY v0.c2, vt1.c0, v0.c0, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c2, vt1.c0, v0.c0, t0.c0 FROM vt1, t0 NATURAL JOIN v0 GROUP BY v0.c2, vt1.c0, v0.c0, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c2, vt1.c0, v0.c0, t0.c0 FROM vt1, t0 NATURAL JOIN v0 GROUP BY v0.c2, vt1.c0, v0.c0, t0.c0;
SELECT v0.c2, vt1.c0, v0.c0, t0.c0 FROM vt1, t0 NATURAL JOIN v0 GROUP BY v0.c2, vt1.c0, v0.c0, t0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c2, vt1.c0, v0.c0, t0.c0 FROM vt1, t0 NATURAL JOIN v0 GROUP BY v0.c2, vt1.c0, v0.c0, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c2, vt1.c0, v0.c0, t0.c0 FROM vt1, t0 NATURAL JOIN v0 GROUP BY v0.c2, vt1.c0, v0.c0, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c2, vt1.c0, v0.c0, t0.c0 FROM vt1, t0 NATURAL JOIN v0 GROUP BY v0.c2, vt1.c0, v0.c0, t0.c0;
SELECT ALL * FROM v0 INNER JOIN vt1 ON ((((rt0.c1 IN ())))!=((rt0.c4))) INNER JOIN rt0 ON ((((((vt1.c0)-(rt0.c4)))AND(rt0.c3)))OR(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)))) RIGHT OUTER JOIN t0 ON CAST((+ (t0.c0)) AS REAL);
SELECT DISTINCT * FROM v0, rt0 CROSS JOIN t0 ON ((((NOT (v0.c1)), v0.c2, (rt0.c0 IN ())))>((vt1.c0 COLLATE NOCASE, x'8227', ((NULL) BETWEEN (0.2930134543155559) AND (rt0.c3))))) FULL OUTER JOIN vt1 ON ((CASE WHEN rt0.c1 THEN rt0.c1 END)OR(LIKE(rt0.c2, 0X5b55ff0, '-')));
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)LIKE(((x'')>(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE BINARY)LIKE(((x'')>(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE BINARY)LIKE(((x'')>(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT v0.c2, v0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c0 HAVING ((MAX(v0.c0)) BETWEEN (v0.c1) AND (v0.c1)) COLLATE NOCASE UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c0 HAVING (NOT (((MAX(v0.c0)) BETWEEN (v0.c1) AND (v0.c1)) COLLATE NOCASE)) UNION ALL SELECT v0.c2, v0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c0 HAVING ((((MAX(v0.c0)) BETWEEN (v0.c1) AND (v0.c1)) COLLATE NOCASE) ISNULL);
SELECT v0.c2, v0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c0 HAVING ((MAX(v0.c0)) BETWEEN (v0.c1) AND (v0.c1)) COLLATE NOCASE UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c0 HAVING (NOT (((MAX(v0.c0)) BETWEEN (v0.c1) AND (v0.c1)) COLLATE NOCASE)) UNION ALL SELECT v0.c2, v0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c0 HAVING ((((MAX(v0.c0)) BETWEEN (v0.c1) AND (v0.c1)) COLLATE NOCASE) ISNULL);
SELECT v0.c2, v0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c0;
SELECT rt0.c0, v0.c2, rt0.c1, t0.c0, rt0.c2, v0.c1, v0.c0 FROM rt0, t0, v0, vt1;
SELECT rt0.c0, v0.c2, rt0.c1, t0.c0, rt0.c2, v0.c1, v0.c0 FROM rt0, t0, v0, vt1 WHERE ((- (CAST(0.43122498551440425 AS BLOB)))) UNION ALL SELECT rt0.c0, v0.c2, rt0.c1, t0.c0, rt0.c2, v0.c1, v0.c0 FROM rt0, t0, v0, vt1 WHERE ((NOT ((- (CAST(0.43122498551440425 AS BLOB)))))) UNION ALL SELECT rt0.c0, v0.c2, rt0.c1, t0.c0, rt0.c2, v0.c1, v0.c0 FROM rt0, t0, v0, vt1 WHERE ((((- (CAST(0.43122498551440425 AS BLOB)))) ISNULL));
SELECT rt0.c0, v0.c2, rt0.c1, t0.c0, rt0.c2, v0.c1, v0.c0 FROM rt0, t0, v0, vt1;
SELECT DISTINCT * FROM t0, v0, rt0, vt1;
SELECT DISTINCT * FROM t0, v0, rt0, vt1 WHERE (((rt0.c0)||((- (vt1.c0))))) UNION SELECT DISTINCT * FROM t0, v0, rt0, vt1 WHERE ((NOT (((rt0.c0)||((- (vt1.c0))))))) UNION SELECT DISTINCT * FROM t0, v0, rt0, vt1 WHERE (((((rt0.c0)||((- (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, v0, rt0, vt1;
SELECT ALL v0.c1, vt1.c0, v0.c0, t0.c0, v0.c2 FROM t0, v0, vt1 GROUP BY v0.c1, vt1.c0, v0.c0, t0.c0, v0.c2;
SELECT ALL v0.c1, vt1.c0, v0.c0, t0.c0, v0.c2 FROM t0, v0, vt1 WHERE (((CASE WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN NULL END)LIKE(((v0.c0)==(t0.c0))))) GROUP BY v0.c1, vt1.c0, v0.c0, t0.c0, v0.c2 UNION SELECT v0.c1, vt1.c0, v0.c0, t0.c0, v0.c2 FROM t0, v0, vt1 WHERE ((NOT (((CASE WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN NULL END)LIKE(((v0.c0)=(t0.c0))))))) GROUP BY v0.c1, vt1.c0, v0.c0, t0.c0, v0.c2 UNION SELECT v0.c1, vt1.c0, v0.c0, t0.c0, v0.c2 FROM t0, v0, vt1 WHERE (((((CASE WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN NULL END)LIKE(((v0.c0)==(t0.c0))))) ISNULL)) GROUP BY v0.c1, vt1.c0, v0.c0, t0.c0, v0.c2;
SELECT ALL v0.c1, vt1.c0, v0.c0, t0.c0, v0.c2 FROM t0, v0, vt1 GROUP BY v0.c1, vt1.c0, v0.c0, t0.c0, v0.c2;
SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING MAX('V^vF2D7') UNION ALL SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING (NOT (MAX('V^vF2D7'))) UNION ALL SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING ((MAX('V^vF2D7')) ISNULL);
SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING MAX('V^vF2D7') UNION ALL SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING (NOT (MAX('V^vF2D7'))) UNION ALL SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING ((MAX('V^vF2D7')) ISNULL);
SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT v0.c2, t0.c0, rt0.c1, v0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c0, vt1.c0 FROM v0, t0, vt1, rt0;
SELECT ALL v0.c2, t0.c0, rt0.c1, v0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c0, vt1.c0 FROM v0, t0, vt1, rt0 WHERE (rt0.c3) UNION ALL SELECT v0.c2, t0.c0, rt0.c1, v0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c0, vt1.c0 FROM v0, t0, vt1, rt0 WHERE ((NOT (rt0.c3))) UNION ALL SELECT ALL v0.c2, t0.c0, rt0.c1, v0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c0, vt1.c0 FROM v0, t0, vt1, rt0 WHERE (((rt0.c3) ISNULL));
SELECT v0.c2, t0.c0, rt0.c1, v0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c0, vt1.c0 FROM v0, t0, vt1, rt0;
SELECT DISTINCT * FROM t0, rt0, v0, vt1;
SELECT DISTINCT * FROM t0, rt0, v0, vt1 WHERE (CAST(CAST(v0.c0 AS NUMERIC) AS INTEGER)) UNION SELECT DISTINCT * FROM t0, rt0, v0, vt1 WHERE ((NOT (CAST(CAST(v0.c0 AS NUMERIC) AS INTEGER)))) UNION SELECT DISTINCT * FROM t0, rt0, v0, vt1 WHERE (((CAST(CAST(v0.c0 AS NUMERIC) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM t0, rt0, v0, vt1;
SELECT v0.c1, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY v0.c1, v0.c0;
SELECT ALL v0.c1, v0.c0 FROM v0 NATURAL JOIN t0 WHERE (((((v0.c2)AND('-1224489943'))) ISNULL)) GROUP BY v0.c1, v0.c0 UNION SELECT v0.c1, v0.c0 FROM v0 NATURAL JOIN t0 WHERE ((NOT (((((v0.c2)AND('-1224489943'))) ISNULL)))) GROUP BY v0.c1, v0.c0 UNION SELECT ALL v0.c1, v0.c0 FROM v0 NATURAL JOIN t0 WHERE (((((((v0.c2)AND('-1224489943'))) ISNULL)) ISNULL)) GROUP BY v0.c1, v0.c0;
SELECT v0.c1, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY v0.c1, v0.c0;
SELECT v0.c2, rt0.c1, rt0.c0, v0.c1, t0.c0, rt0.c4, rt0.c3, rt0.c2, v0.c0 FROM t0, v0, vt1, rt0 GROUP BY v0.c2, rt0.c1, rt0.c0, v0.c1, t0.c0, rt0.c4, rt0.c3, rt0.c2, v0.c0;
SELECT v0.c2, rt0.c1, rt0.c0, v0.c1, t0.c0, rt0.c4, rt0.c3, rt0.c2, v0.c0 FROM t0, v0, vt1, rt0 GROUP BY v0.c2, rt0.c1, rt0.c0, v0.c1, t0.c0, rt0.c4, rt0.c3, rt0.c2, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c2, rt0.c1, rt0.c0, v0.c1, t0.c0, rt0.c4, rt0.c3, rt0.c2, v0.c0 FROM t0, v0, vt1, rt0 GROUP BY v0.c2, rt0.c1, rt0.c0, v0.c1, t0.c0, rt0.c4, rt0.c3, rt0.c2, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c2, rt0.c1, rt0.c0, v0.c1, t0.c0, rt0.c4, rt0.c3, rt0.c2, v0.c0 FROM t0, v0, vt1, rt0 GROUP BY v0.c2, rt0.c1, rt0.c0, v0.c1, t0.c0, rt0.c4, rt0.c3, rt0.c2, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c2, rt0.c1, rt0.c0, v0.c1, t0.c0, rt0.c4, rt0.c3, rt0.c2, v0.c0 FROM t0, v0, vt1, rt0 GROUP BY v0.c2, rt0.c1, rt0.c0, v0.c1, t0.c0, rt0.c4, rt0.c3, rt0.c2, v0.c0;
SELECT v0.c2, rt0.c1, rt0.c0, v0.c1, t0.c0, rt0.c4, rt0.c3, rt0.c2, v0.c0 FROM t0, v0, vt1, rt0 GROUP BY v0.c2, rt0.c1, rt0.c0, v0.c1, t0.c0, rt0.c4, rt0.c3, rt0.c2, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c2, rt0.c1, rt0.c0, v0.c1, t0.c0, rt0.c4, rt0.c3, rt0.c2, v0.c0 FROM t0, v0, vt1, rt0 GROUP BY v0.c2, rt0.c1, rt0.c0, v0.c1, t0.c0, rt0.c4, rt0.c3, rt0.c2, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c2, rt0.c1, rt0.c0, v0.c1, t0.c0, rt0.c4, rt0.c3, rt0.c2, v0.c0 FROM t0, v0, vt1, rt0 GROUP BY v0.c2, rt0.c1, rt0.c0, v0.c1, t0.c0, rt0.c4, rt0.c3, rt0.c2, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c2, rt0.c1, rt0.c0, v0.c1, t0.c0, rt0.c4, rt0.c3, rt0.c2, v0.c0 FROM t0, v0, vt1, rt0 GROUP BY v0.c2, rt0.c1, rt0.c0, v0.c1, t0.c0, rt0.c4, rt0.c3, rt0.c2, v0.c0;
SELECT ALL rt0.c0 FROM t0, v0 NOT INDEXED, rt0;
SELECT ALL rt0.c0 FROM t0, v0, rt0 WHERE (CAST(NULL AS REAL)) UNION ALL SELECT rt0.c0 FROM t0, v0, rt0 WHERE ((NOT (CAST(NULL AS REAL)))) UNION ALL SELECT ALL rt0.c0 FROM t0, v0, rt0 WHERE (((CAST(NULL AS REAL)) ISNULL));
SELECT ALL rt0.c0 FROM t0, v0 NOT INDEXED, rt0;
SELECT DISTINCT * FROM v0, vt1, rt0 LEFT OUTER JOIN t0 ON (+ (((rt0.c1)GLOB(rt0.c2))));
SELECT DISTINCT * FROM v0, vt1, rt0 LEFT OUTER JOIN t0 ON (+ (((rt0.c1)GLOB(rt0.c2)))) WHERE ((((((((vt1.c0, rt0.c2, t0.c0, t0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, v0.c1, rt0.c0, v0.c1, v0.c1)) AND ((v0.c1, v0.c0, t0.c0, rt0.c2, rt0.c0))))AND(rt0.c3)))AND(CAST(rt0.c4 AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0, vt1, rt0 LEFT OUTER JOIN t0 ON (+ (((rt0.c1)GLOB(rt0.c2)))) WHERE ((NOT ((((((((vt1.c0, rt0.c2, t0.c0, t0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, v0.c1, rt0.c0, v0.c1, v0.c1)) AND ((v0.c1, v0.c0, t0.c0, rt0.c2, rt0.c0))))AND(rt0.c3)))AND(CAST(rt0.c4 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM v0, vt1, rt0 LEFT OUTER JOIN t0 ON (+ (((rt0.c1)GLOB(rt0.c2)))) WHERE ((((((((((vt1.c0, rt0.c2, t0.c0, t0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, v0.c1, rt0.c0, v0.c1, v0.c1)) AND ((v0.c1, v0.c0, t0.c0, rt0.c2, rt0.c0))))AND(rt0.c3)))AND(CAST(rt0.c4 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM v0, vt1, rt0 LEFT OUTER JOIN t0 ON (+ (((rt0.c1)GLOB(rt0.c2))));
SELECT rt0.c3, rt0.c2 FROM t0, vt1, rt0 GROUP BY rt0.c3, rt0.c2;
SELECT ALL rt0.c3, rt0.c2 FROM t0, vt1, rt0 WHERE (rt0.c1) GROUP BY rt0.c3, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c2 FROM t0, vt1, rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c3, rt0.c2 UNION SELECT rt0.c3, rt0.c2 FROM t0, vt1, rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c3, rt0.c2;
SELECT rt0.c3, rt0.c2 FROM t0, vt1, rt0 GROUP BY rt0.c3, rt0.c2;
SELECT ALL rt0.c2, v0.c2 FROM vt1, rt0, v0, t0 GROUP BY rt0.c2, v0.c2;
SELECT ALL rt0.c2, v0.c2 FROM vt1, rt0, v0, t0 GROUP BY rt0.c2, v0.c2 HAVING CAST(CAST(v0.c0 AS REAL) AS BLOB) UNION ALL SELECT rt0.c2, v0.c2 FROM vt1, rt0, v0, t0 GROUP BY rt0.c2, v0.c2 HAVING (NOT (CAST(CAST(v0.c0 AS REAL) AS BLOB))) UNION ALL SELECT ALL rt0.c2, v0.c2 FROM vt1, rt0, v0, t0 GROUP BY rt0.c2, v0.c2 HAVING ((CAST(CAST(v0.c0 AS REAL) AS BLOB)) ISNULL);
SELECT ALL rt0.c2, v0.c2 FROM vt1, rt0, v0, t0 GROUP BY rt0.c2, v0.c2;
SELECT ALL rt0.c2, v0.c2 FROM vt1, rt0, v0, t0 GROUP BY rt0.c2, v0.c2 HAVING CAST(CAST(v0.c0 AS REAL) AS BLOB) UNION ALL SELECT rt0.c2, v0.c2 FROM vt1, rt0, v0, t0 GROUP BY rt0.c2, v0.c2 HAVING (NOT (CAST(CAST(v0.c0 AS REAL) AS BLOB))) UNION ALL SELECT ALL rt0.c2, v0.c2 FROM vt1, rt0, v0, t0 GROUP BY rt0.c2, v0.c2 HAVING ((CAST(CAST(v0.c0 AS REAL) AS BLOB)) ISNULL);
SELECT ALL rt0.c2, v0.c2 FROM vt1, rt0, v0, t0 GROUP BY rt0.c2, v0.c2;
SELECT t0.c0, rt0.c1 FROM v0 FULL OUTER JOIN t0 ON ((((((v0.c1)) NOT BETWEEN (('-1489802682')) AND ((vt1.c0))), UPPER(vt1.c0), ((rt0.c0)AND(rt0.c2)), (+ (204183798)), ((v0.c1) ISNULL)))=((((t0.c0)IS NOT(rt0.c1)), CAST(vt1.c0 AS BLOB), ((rt0.c3)IS(v0.c1)), rt0.c3 COLLATE NOCASE, CAST(vt1.c0 AS REAL)))) FULL OUTER JOIN vt1 ON ((rt0.c0 COLLATE RTRIM)*(((v0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)))) LEFT OUTER JOIN rt0 ON (((((v0.c2)AND(rt0.c1)))AND(v0.c2)) IN ());
SELECT DISTINCT rt0.c1, t0.c0 FROM v0, rt0 CROSS JOIN t0 ON CAST(((0.2818832790475667) BETWEEN (v0.c0) AND (rt0.c0)) AS INTEGER);
SELECT DISTINCT rt0.c1, t0.c0 FROM v0, rt0 CROSS JOIN t0 ON CAST(((0.2818832790475667) BETWEEN (v0.c0) AND (rt0.c0)) AS INTEGER) WHERE ((t0.c0 COLLATE NOCASE IN ())) UNION SELECT DISTINCT rt0.c1, t0.c0 FROM v0, rt0 CROSS JOIN t0 ON CAST(((0.2818832790475667) BETWEEN (v0.c0) AND (rt0.c0)) AS INTEGER) WHERE ((NOT ((t0.c0 COLLATE NOCASE IN ())))) UNION SELECT DISTINCT rt0.c1, t0.c0 FROM v0, rt0 CROSS JOIN t0 ON CAST(((0.2818832790475667) BETWEEN (v0.c0) AND (rt0.c0)) AS INTEGER) WHERE ((((t0.c0 COLLATE NOCASE IN ())) ISNULL));
SELECT DISTINCT rt0.c1, t0.c0 FROM v0, rt0 CROSS JOIN t0 ON CAST(((0.2818832790475667) BETWEEN (v0.c0) AND (rt0.c0)) AS INTEGER);
SELECT rt0.c0, rt0.c2, t0.c0, rt0.c1, vt1.c0, rt0.c4 FROM vt1, rt0, t0 GROUP BY rt0.c0, rt0.c2, t0.c0, rt0.c1, vt1.c0, rt0.c4;
SELECT rt0.c0, rt0.c2, t0.c0, rt0.c1, vt1.c0, rt0.c4 FROM vt1, rt0, t0 WHERE ((~ (''))) GROUP BY rt0.c0, rt0.c2, t0.c0, rt0.c1, vt1.c0, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c2, t0.c0, rt0.c1, vt1.c0, rt0.c4 FROM vt1, rt0, t0 WHERE ((NOT ((~ (''))))) GROUP BY rt0.c0, rt0.c2, t0.c0, rt0.c1, vt1.c0, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c2, t0.c0, rt0.c1, vt1.c0, rt0.c4 FROM vt1, rt0, t0 WHERE ((((~ (''))) ISNULL)) GROUP BY rt0.c0, rt0.c2, t0.c0, rt0.c1, vt1.c0, rt0.c4;
SELECT rt0.c0, rt0.c2, t0.c0, rt0.c1, vt1.c0, rt0.c4 FROM vt1, rt0, t0 GROUP BY rt0.c0, rt0.c2, t0.c0, rt0.c1, vt1.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c0, rt0.c4, vt1.c0, rt0.c1, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, vt1.c0, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c0, rt0.c4, vt1.c0, rt0.c1, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, vt1.c0, rt0.c1, rt0.c3 HAVING ABS(COUNT(rt0.c4)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c4, vt1.c0, rt0.c1, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, vt1.c0, rt0.c1, rt0.c3 HAVING (NOT (ABS(COUNT(rt0.c4)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c4, vt1.c0, rt0.c1, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, vt1.c0, rt0.c1, rt0.c3 HAVING ((ABS(COUNT(rt0.c4))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c4, vt1.c0, rt0.c1, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, vt1.c0, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c0, rt0.c4, vt1.c0, rt0.c1, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, vt1.c0, rt0.c1, rt0.c3 HAVING ABS(COUNT(rt0.c4)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c4, vt1.c0, rt0.c1, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, vt1.c0, rt0.c1, rt0.c3 HAVING (NOT (ABS(COUNT(rt0.c4)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c4, vt1.c0, rt0.c1, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, vt1.c0, rt0.c1, rt0.c3 HAVING ((ABS(COUNT(rt0.c4))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c4, vt1.c0, rt0.c1, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, vt1.c0, rt0.c1, rt0.c3;
SELECT * FROM t0, vt1;
SELECT * FROM t0, vt1 WHERE (CAST((NOT (t0.c0)) AS NUMERIC)) UNION ALL SELECT * FROM t0, vt1 WHERE ((NOT (CAST((NOT (t0.c0)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM t0, vt1 WHERE (((CAST((NOT (t0.c0)) AS NUMERIC)) ISNULL));
SELECT * FROM t0, vt1;
SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1;
SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((((((t0.c0) ISNULL)))>=(((((vt1.c0)) BETWEEN ((NULL)) AND ((t0.c0))))))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((NOT ((((((t0.c0) ISNULL)))>=(((((vt1.c0)) BETWEEN ((NULL)) AND ((t0.c0))))))))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((((((((t0.c0) ISNULL)))>=(((((vt1.c0)) BETWEEN ((NULL)) AND ((t0.c0))))))) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1;
SELECT rt0.c4, v0.c1 FROM rt0, v0, t0, vt1 GROUP BY rt0.c4, v0.c1;
SELECT rt0.c4, v0.c1 FROM rt0, v0, t0, vt1 WHERE (x'') GROUP BY rt0.c4, v0.c1 UNION SELECT rt0.c4, v0.c1 FROM rt0, v0, t0, vt1 WHERE ((NOT (x''))) GROUP BY rt0.c4, v0.c1 UNION SELECT ALL rt0.c4, v0.c1 FROM rt0, v0, t0, vt1 WHERE (((x'') ISNULL)) GROUP BY rt0.c4, v0.c1;
SELECT rt0.c4, v0.c1 FROM rt0, v0, t0, vt1 GROUP BY rt0.c4, v0.c1;
SELECT ALL rt0.c1, vt1.c0, rt0.c4, v0.c0, rt0.c0, v0.c1, rt0.c2 FROM vt1, rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1)) BETWEEN (((((x'', v0.c2, rt0.c1))!=((v0.c1, rt0.c1, v0.c2))))) AND ((((rt0.c4)LIKE(v0.c0))))) GROUP BY rt0.c1, vt1.c0, rt0.c4, v0.c0, rt0.c0, v0.c1, rt0.c2;
SELECT rt0.c1, vt1.c0, rt0.c4, v0.c0, rt0.c0, v0.c1, rt0.c2 FROM vt1, rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1)) BETWEEN (((((x'', v0.c2, rt0.c1))<>((v0.c1, rt0.c1, v0.c2))))) AND ((((rt0.c4)LIKE(v0.c0))))) GROUP BY rt0.c1, vt1.c0, rt0.c4, v0.c0, rt0.c0, v0.c1, rt0.c2 HAVING (((TOTAL(v0.c1), COUNT(*), SUM(MIN(COUNT(*)))))<=((SUM(v0.c0), ((((((((((((TOTAL(SUM(rt0.c3)))AND(vt1.c0)))AND(rt0.c1)))AND(0.46554681357072314)))OR(MAX(v0.c0))))OR(AVG(rt0.c3))))AND(COUNT(*))), 604572246 COLLATE BINARY))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c4, v0.c0, rt0.c0, v0.c1, rt0.c2 FROM vt1, rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1)) BETWEEN (((((x'', v0.c2, rt0.c1))!=((v0.c1, rt0.c1, v0.c2))))) AND ((((rt0.c4)LIKE(v0.c0))))) GROUP BY rt0.c1, vt1.c0, rt0.c4, v0.c0, rt0.c0, v0.c1, rt0.c2 HAVING (NOT ((((TOTAL(v0.c1), COUNT(*), SUM(MIN(COUNT(*)))))<=((SUM(v0.c0), ((((((((((((TOTAL(SUM(rt0.c3)))AND(vt1.c0)))AND(rt0.c1)))AND(0.46554681357072314)))OR(MAX(v0.c0))))OR(AVG(rt0.c3))))AND(COUNT(*))), 604572246 COLLATE BINARY))))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c4, v0.c0, rt0.c0, v0.c1, rt0.c2 FROM vt1, rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1)) BETWEEN (((((x'', v0.c2, rt0.c1))<>((v0.c1, rt0.c1, v0.c2))))) AND ((((rt0.c4)LIKE(v0.c0))))) GROUP BY rt0.c1, vt1.c0, rt0.c4, v0.c0, rt0.c0, v0.c1, rt0.c2 HAVING (((((TOTAL(v0.c1), COUNT(*), SUM(MIN(COUNT(*)))))<=((SUM(v0.c0), ((((((((((((TOTAL(SUM(rt0.c3)))AND(vt1.c0)))AND(rt0.c1)))AND(0.46554681357072314)))OR(MAX(v0.c0))))OR(AVG(rt0.c3))))AND(COUNT(*))), 604572246 COLLATE BINARY)))) ISNULL);
SELECT ALL * FROM vt1, v0 INNER JOIN rt0 ON ABS(DISTINCT (+ (rt0.c3)));
SELECT * FROM vt1, v0 INNER JOIN rt0 ON ABS(DISTINCT (+ (rt0.c3))) WHERE ((((NOT (0x81670db))) NOT BETWEEN ((rt0.c0 IN ())) AND ((((vt1.c0, v0.c1, rt0.c3))<((v0.c2, rt0.c1, '-876403099')))))) UNION ALL SELECT ALL * FROM vt1, v0 INNER JOIN rt0 ON ABS(DISTINCT (+ (rt0.c3))) WHERE ((NOT ((((NOT (0X81670db))) NOT BETWEEN ((rt0.c0 IN ())) AND ((((vt1.c0, v0.c1, rt0.c3))<((v0.c2, rt0.c1, '-876403099')))))))) UNION ALL SELECT * FROM vt1, v0 INNER JOIN rt0 ON ABS(DISTINCT (+ (rt0.c3))) WHERE ((((((NOT (0x81670db))) NOT BETWEEN ((rt0.c0 IN ())) AND ((((vt1.c0, v0.c1, rt0.c3))<((v0.c2, rt0.c1, '-876403099')))))) ISNULL));
SELECT ALL * FROM vt1, v0 INNER JOIN rt0 ON ABS(DISTINCT (+ (rt0.c3)));
SELECT DISTINCT v0.c1, rt0.c2, rt0.c1 FROM t0, v0, rt0;
SELECT DISTINCT v0.c1, rt0.c2, rt0.c1 FROM t0, v0, rt0 WHERE (QUOTE((~ (v0.c1)))) UNION SELECT DISTINCT v0.c1, rt0.c2, rt0.c1 FROM t0, v0, rt0 WHERE ((NOT (QUOTE((~ (v0.c1)))))) UNION SELECT DISTINCT v0.c1, rt0.c2, rt0.c1 FROM t0, v0, rt0 WHERE (((QUOTE((~ (v0.c1)))) ISNULL));
SELECT DISTINCT v0.c1, rt0.c2, rt0.c1 FROM t0, v0, rt0;
SELECT ALL v0.c2, v0.c0, v0.c1, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON ((NULLIF(t0.c0, vt1.c0))*(CAST(t0.c0 AS BLOB))) INNER JOIN v0 ON ((v0.c1 IN ()) IN ()) GROUP BY v0.c2, v0.c0, v0.c1, t0.c0;
SELECT v0.c2, v0.c0, v0.c1, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON ((NULLIF(t0.c0, vt1.c0))*(CAST(t0.c0 AS BLOB))) INNER JOIN v0 ON ((v0.c1 IN ()) IN ()) WHERE ((- (((v0.c2) BETWEEN (t0.c0) AND (v0.c1))))) GROUP BY v0.c2, v0.c0, v0.c1, t0.c0 UNION SELECT ALL v0.c2, v0.c0, v0.c1, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON ((NULLIF(t0.c0, vt1.c0))*(CAST(t0.c0 AS BLOB))) INNER JOIN v0 ON ((v0.c1 IN ()) IN ()) WHERE ((NOT ((- (((v0.c2) BETWEEN (t0.c0) AND (v0.c1))))))) GROUP BY v0.c2, v0.c0, v0.c1, t0.c0 UNION SELECT v0.c2, v0.c0, v0.c1, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON ((NULLIF(t0.c0, vt1.c0))*(CAST(t0.c0 AS BLOB))) INNER JOIN v0 ON ((v0.c1 IN ()) IN ()) WHERE ((((- (((v0.c2) BETWEEN (t0.c0) AND (v0.c1))))) ISNULL)) GROUP BY v0.c2, v0.c0, v0.c1, t0.c0;
SELECT ALL v0.c2, v0.c0, v0.c1, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON ((NULLIF(t0.c0, vt1.c0))*(CAST(t0.c0 AS BLOB))) INNER JOIN v0 ON ((v0.c1 IN ()) IN ()) GROUP BY v0.c2, v0.c0, v0.c1, t0.c0;
SELECT ALL v0.c0, v0.c2, vt1.c0, v0.c1, t0.c0 FROM v0, vt1, t0 GROUP BY v0.c0, v0.c2, vt1.c0, v0.c1, t0.c0;
SELECT ALL v0.c0, v0.c2, vt1.c0, v0.c1, t0.c0 FROM v0, vt1, t0 NOT INDEXED GROUP BY v0.c0, v0.c2, vt1.c0, v0.c1, t0.c0 HAVING (((~ (vt1.c0)))<(v0.c2)) UNION ALL SELECT ALL v0.c0, v0.c2, vt1.c0, v0.c1, t0.c0 FROM v0, vt1, t0 GROUP BY v0.c0, v0.c2, vt1.c0, v0.c1, t0.c0 HAVING (NOT ((((~ (vt1.c0)))<(v0.c2)))) UNION ALL SELECT ALL v0.c0, v0.c2, vt1.c0, v0.c1, t0.c0 FROM v0, vt1, t0 GROUP BY v0.c0, v0.c2, vt1.c0, v0.c1, t0.c0 HAVING (((((~ (vt1.c0)))<(v0.c2))) ISNULL);
SELECT ALL v0.c0, v0.c2, vt1.c0, v0.c1, t0.c0 FROM v0, vt1, t0 GROUP BY v0.c0, v0.c2, vt1.c0, v0.c1, t0.c0;
SELECT ALL v0.c0, v0.c2, vt1.c0, v0.c1, t0.c0 FROM v0, vt1, t0 NOT INDEXED GROUP BY v0.c0, v0.c2, vt1.c0, v0.c1, t0.c0 HAVING (((~ (vt1.c0)))<(v0.c2)) UNION ALL SELECT ALL v0.c0, v0.c2, vt1.c0, v0.c1, t0.c0 FROM v0, vt1, t0 GROUP BY v0.c0, v0.c2, vt1.c0, v0.c1, t0.c0 HAVING (NOT ((((~ (vt1.c0)))<(v0.c2)))) UNION ALL SELECT ALL v0.c0, v0.c2, vt1.c0, v0.c1, t0.c0 FROM v0, vt1, t0 GROUP BY v0.c0, v0.c2, vt1.c0, v0.c1, t0.c0 HAVING (((((~ (vt1.c0)))<(v0.c2))) ISNULL);
SELECT ALL v0.c0, v0.c2, vt1.c0, v0.c1, t0.c0 FROM v0, vt1, t0 GROUP BY v0.c0, v0.c2, vt1.c0, v0.c1, t0.c0;
SELECT ALL * FROM v0, t0, vt1;
SELECT * FROM v0, t0, vt1 WHERE (CASE ((((((((((((v0.c1)OR(v0.c2)))AND(vt1.c0)))AND(v0.c2)))OR(0.5712378081551885)))AND(vt1.c0)))AND(v0.c2))  WHEN CHANGES() THEN ((((vt1.c0)AND(t0.c0)))AND(v0.c2)) END) UNION ALL SELECT ALL * FROM v0, t0, vt1 WHERE ((NOT (CASE ((((((((((((v0.c1)OR(v0.c2)))AND(vt1.c0)))AND(v0.c2)))OR(0.5712378081551885)))AND(vt1.c0)))AND(v0.c2))  WHEN CHANGES() THEN ((((vt1.c0)AND(t0.c0)))AND(v0.c2)) END))) UNION ALL SELECT * FROM v0, t0, vt1 WHERE (((CASE ((((((((((((v0.c1)OR(v0.c2)))AND(vt1.c0)))AND(v0.c2)))OR(0.5712378081551885)))AND(vt1.c0)))AND(v0.c2))  WHEN CHANGES() THEN ((((vt1.c0)AND(t0.c0)))AND(v0.c2)) END) ISNULL));
SELECT ALL * FROM v0, t0, vt1;
SELECT DISTINCT * FROM t0 NATURAL JOIN v0;
SELECT DISTINCT * FROM t0 NATURAL JOIN v0 WHERE (CAST(((0.7289756579685632)>>(v0.c1)) AS NUMERIC)) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN v0 WHERE ((NOT (CAST(((0.7289756579685632)>>(v0.c1)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN v0 WHERE (((CAST(((0.7289756579685632)>>(v0.c1)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM t0 NATURAL JOIN v0;
SELECT ALL t0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c1, v0.c2, rt0.c3 FROM t0, v0, rt0 GROUP BY t0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c1, v0.c2, rt0.c3;
SELECT ALL t0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c1, v0.c2, rt0.c3 FROM t0, v0, rt0 WHERE ((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c1))))=((CASE WHEN v0.c1 THEN t0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN v0.c0 THEN rt0.c4 END)))) GROUP BY t0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c1, v0.c2, rt0.c3 UNION SELECT t0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c1, v0.c2, rt0.c3 FROM t0, v0, rt0 WHERE ((NOT ((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c1))))==((CASE WHEN v0.c1 THEN t0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN v0.c0 THEN rt0.c4 END)))))) GROUP BY t0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c1, v0.c2, rt0.c3 UNION SELECT t0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c1, v0.c2, rt0.c3 FROM t0, v0, rt0 WHERE ((((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c1))))=((CASE WHEN v0.c1 THEN t0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN v0.c0 THEN rt0.c4 END)))) ISNULL)) GROUP BY t0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c1, v0.c2, rt0.c3;
SELECT ALL t0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c1, v0.c2, rt0.c3 FROM t0, v0, rt0 GROUP BY t0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c1, v0.c2, rt0.c3;
SELECT ALL v0.c0, t0.c0 FROM rt0, t0, vt1, v0 GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM rt0, t0, vt1, v0 GROUP BY v0.c0, t0.c0 HAVING ((x'4218') NOT BETWEEN ((NOT (rt0.c3))) AND (AVG('363604342'))) UNION ALL SELECT ALL v0.c0, t0.c0 FROM rt0, t0, vt1, v0 GROUP BY v0.c0, t0.c0 HAVING (NOT (((x'4218') NOT BETWEEN ((NOT (rt0.c3))) AND (AVG('363604342'))))) UNION ALL SELECT v0.c0, t0.c0 FROM rt0, t0, vt1, v0 GROUP BY v0.c0, t0.c0 HAVING ((((x'4218') NOT BETWEEN ((NOT (rt0.c3))) AND (AVG('363604342')))) ISNULL);
SELECT ALL v0.c0, t0.c0 FROM rt0, t0, vt1, v0 GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM rt0, t0, vt1, v0 GROUP BY v0.c0, t0.c0 HAVING ((x'4218') NOT BETWEEN ((NOT (rt0.c3))) AND (AVG('363604342'))) UNION ALL SELECT ALL v0.c0, t0.c0 FROM rt0, t0, vt1, v0 GROUP BY v0.c0, t0.c0 HAVING (NOT (((x'4218') NOT BETWEEN ((NOT (rt0.c3))) AND (AVG('363604342'))))) UNION ALL SELECT v0.c0, t0.c0 FROM rt0, t0, vt1, v0 GROUP BY v0.c0, t0.c0 HAVING ((((x'4218') NOT BETWEEN ((NOT (rt0.c3))) AND (AVG('363604342')))) ISNULL);
SELECT ALL v0.c0, t0.c0 FROM rt0, t0, vt1, v0 GROUP BY v0.c0, t0.c0;
SELECT * FROM vt1, v0, rt0;
SELECT * FROM vt1, v0, rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt1, v0, rt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM))) UNION ALL SELECT * FROM vt1, v0, rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT * FROM vt1, v0, rt0;
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON CAST(NULL AS BLOB);
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON CAST(NULL AS BLOB) WHERE (((((((((vt1.c0)AND(-9.52572767E8)))OR(0.7449119931047918)))AND((((0.008909916492639058))<((rt0.c0))))))AND(CAST(rt0.c3 AS INTEGER)))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON CAST(NULL AS BLOB) WHERE ((NOT (((((((((vt1.c0)AND(-9.52572767E8)))OR(0.7449119931047918)))AND((((0.008909916492639058))<((rt0.c0))))))AND(CAST(rt0.c3 AS INTEGER)))))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON CAST(NULL AS BLOB) WHERE (((((((((((vt1.c0)AND(-9.52572767E8)))OR(0.7449119931047918)))AND((((0.008909916492639058))<((rt0.c0))))))AND(CAST(rt0.c3 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON CAST(NULL AS BLOB);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)GLOB(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)GLOB(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)GLOB(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c1, rt0.c4, v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c4, v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c0, rt0.c2 HAVING GROUP_CONCAT(((MAX(rt0.c1)) NOT NULL)) UNION ALL SELECT ALL rt0.c1, rt0.c4, v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(((MAX(rt0.c1)) NOT NULL)))) UNION ALL SELECT ALL rt0.c1, rt0.c4, v0.c0, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0, rt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(((MAX(rt0.c1)) NOT NULL))) ISNULL);
SELECT ALL v0.c1, v0.c0 FROM v0;
SELECT v0.c1, v0.c0 FROM v0 WHERE (((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)))/((NOT (v0.c0))))) UNION ALL SELECT ALL v0.c1, v0.c0 FROM v0 WHERE ((NOT (((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)))/((NOT (v0.c0))))))) UNION ALL SELECT v0.c1, v0.c0 FROM v0 WHERE (((((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)))/((NOT (v0.c0))))) ISNULL));
SELECT ALL v0.c1, v0.c0 FROM v0;
SELECT DISTINCT vt1.c0, t0.c0, rt0.c0 FROM vt1, rt0, t0 INNER JOIN v0 ON ((((((vt1.c0)OR(rt0.c1)))AND(vt1.c0)))IS(CAST(rt0.c3 AS INTEGER)));
SELECT DISTINCT vt1.c0, t0.c0, rt0.c0 FROM vt1, rt0, t0 INNER JOIN v0 ON ((((((vt1.c0)OR(rt0.c1)))AND(vt1.c0)))IS(CAST(rt0.c3 AS INTEGER))) WHERE (UPPER(((v0.c0) NOT NULL))) UNION SELECT DISTINCT vt1.c0, t0.c0, rt0.c0 FROM vt1, rt0, t0 INNER JOIN v0 ON ((((((vt1.c0)OR(rt0.c1)))AND(vt1.c0)))IS(CAST(rt0.c3 AS INTEGER))) WHERE ((NOT (UPPER(((v0.c0) NOT NULL))))) UNION SELECT DISTINCT vt1.c0, t0.c0, rt0.c0 FROM vt1, rt0, t0 INNER JOIN v0 ON ((((((vt1.c0)OR(rt0.c1)))AND(vt1.c0)))IS(CAST(rt0.c3 AS INTEGER))) WHERE (((UPPER(((v0.c0) NOT NULL))) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0, rt0.c0 FROM vt1, rt0, t0 INNER JOIN v0 ON ((((((vt1.c0)OR(rt0.c1)))AND(vt1.c0)))IS(CAST(rt0.c3 AS INTEGER)));
SELECT ALL t0.c0, v0.c0, v0.c2 FROM v0 LEFT OUTER JOIN t0 ON (('-864646453' COLLATE BINARY)GLOB(((('', v0.c1, v0.c2)) BETWEEN ((t0.c0, v0.c0, v0.c1)) AND ((v0.c0, v0.c1, v0.c1))))) GROUP BY t0.c0, v0.c0, v0.c2;
SELECT t0.c0, v0.c0, v0.c2 FROM v0 LEFT OUTER JOIN t0 ON (('-864646453' COLLATE BINARY)GLOB(((('', v0.c1, v0.c2)) BETWEEN ((t0.c0, v0.c0, v0.c1)) AND ((v0.c0, v0.c1, v0.c1))))) WHERE ((0.9744189604297727 COLLATE NOCASE IN ())) GROUP BY t0.c0, v0.c0, v0.c2 UNION SELECT t0.c0, v0.c0, v0.c2 FROM v0 LEFT OUTER JOIN t0 ON (('-864646453' COLLATE BINARY)GLOB(((('', v0.c1, v0.c2)) BETWEEN ((t0.c0, v0.c0, v0.c1)) AND ((v0.c0, v0.c1, v0.c1))))) WHERE ((NOT ((0.9744189604297727 COLLATE NOCASE IN ())))) GROUP BY t0.c0, v0.c0, v0.c2 UNION SELECT t0.c0, v0.c0, v0.c2 FROM v0 LEFT OUTER JOIN t0 ON (('-864646453' COLLATE BINARY)GLOB(((('', v0.c1, v0.c2)) BETWEEN ((t0.c0, v0.c0, v0.c1)) AND ((v0.c0, v0.c1, v0.c1))))) WHERE ((((0.9744189604297727 COLLATE NOCASE IN ())) ISNULL)) GROUP BY t0.c0, v0.c0, v0.c2;
SELECT ALL t0.c0, v0.c0, v0.c2 FROM v0 LEFT OUTER JOIN t0 ON (('-864646453' COLLATE BINARY)GLOB(((('', v0.c1, v0.c2)) BETWEEN ((t0.c0, v0.c0, v0.c1)) AND ((v0.c0, v0.c1, v0.c1))))) GROUP BY t0.c0, v0.c0, v0.c2;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING LOWER(COUNT(*)) UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (NOT (LOWER(COUNT(*)))) UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING ((LOWER(COUNT(*))) ISNULL);
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING LOWER(COUNT(*)) UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (NOT (LOWER(COUNT(*)))) UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING ((LOWER(COUNT(*))) ISNULL);
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT * FROM vt1, t0, rt0;
SELECT ALL * FROM vt1, t0, rt0 WHERE (CAST((((('-172238084')OR(rt0.c4)))AND(rt0.c3)) AS NUMERIC)) UNION ALL SELECT * FROM vt1, t0, rt0 WHERE ((NOT (CAST((((('-172238084')OR(rt0.c4)))AND(rt0.c3)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt1, t0, rt0 WHERE (((CAST((((('-172238084')OR(rt0.c4)))AND(rt0.c3)) AS NUMERIC)) ISNULL));
SELECT * FROM vt1, t0, rt0;
SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON (- (((((((((((((v0.c0)AND(rt0.c0)))AND(x'db58')))AND(rt0.c0)))AND(rt0.c3)))AND(v0.c1)))AND(v0.c2))));
SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON (- (((((((((((((v0.c0)AND(rt0.c0)))AND(x'db58')))AND(rt0.c0)))AND(rt0.c3)))AND(v0.c1)))AND(v0.c2)))) WHERE ((~ (((v0.c0) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON (- (((((((((((((v0.c0)AND(rt0.c0)))AND(x'db58')))AND(rt0.c0)))AND(rt0.c3)))AND(v0.c1)))AND(v0.c2)))) WHERE ((NOT ((~ (((v0.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON (- (((((((((((((v0.c0)AND(rt0.c0)))AND(x'db58')))AND(rt0.c0)))AND(rt0.c3)))AND(v0.c1)))AND(v0.c2)))) WHERE ((((~ (((v0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON (- (((((((((((((v0.c0)AND(rt0.c0)))AND(x'db58')))AND(rt0.c0)))AND(rt0.c3)))AND(v0.c1)))AND(v0.c2))));
SELECT ALL t0.c0, rt0.c4 FROM rt0, t0 GROUP BY t0.c0, rt0.c4;
SELECT ALL t0.c0, rt0.c4 FROM rt0, t0 WHERE (NULL) GROUP BY t0.c0, rt0.c4 UNION SELECT t0.c0, rt0.c4 FROM rt0, t0 WHERE ((NOT (NULL))) GROUP BY t0.c0, rt0.c4 UNION SELECT ALL t0.c0, rt0.c4 FROM rt0, t0 WHERE (((NULL) ISNULL)) GROUP BY t0.c0, rt0.c4;
SELECT ALL t0.c0, rt0.c4 FROM rt0, t0 GROUP BY t0.c0, rt0.c4;
SELECT rt0.c1, rt0.c2, rt0.c3 FROM rt0, v0, vt1 NOT INDEXED, t0 GROUP BY rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM rt0, v0, vt1, t0 GROUP BY rt0.c1, rt0.c2, rt0.c3 HAVING MAX(AVG(rt0.c1)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3 FROM rt0, v0, vt1, t0 GROUP BY rt0.c1, rt0.c2, rt0.c3 HAVING (NOT (MAX(AVG(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM rt0, v0, vt1, t0 GROUP BY rt0.c1, rt0.c2, rt0.c3 HAVING ((MAX(AVG(rt0.c1))) ISNULL);
SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c0, vt1.c0, rt0.c2 FROM rt0, t0 FULL OUTER JOIN vt1 ON (rt0.c2 IN ());
SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c0, vt1.c0, rt0.c2 FROM rt0, t0 FULL OUTER JOIN vt1 ON (rt0.c2 IN ()) WHERE ((((((((rt0.c0))>((rt0.c4))))AND(CAST(rt0.c3 AS REAL))))AND(((rt0.c3)<>(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c0, vt1.c0, rt0.c2 FROM rt0, t0 FULL OUTER JOIN vt1 ON (rt0.c2 IN ()) WHERE ((NOT ((((((((rt0.c0))>((rt0.c4))))AND(CAST(rt0.c3 AS REAL))))AND(((rt0.c3)!=(rt0.c0))))))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c0, vt1.c0, rt0.c2 FROM rt0, t0 FULL OUTER JOIN vt1 ON (rt0.c2 IN ()) WHERE ((((((((((rt0.c0))>((rt0.c4))))AND(CAST(rt0.c3 AS REAL))))AND(((rt0.c3)<>(rt0.c0))))) ISNULL));
SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c0, vt1.c0, rt0.c2 FROM rt0, t0 FULL OUTER JOIN vt1 ON (rt0.c2 IN ());
SELECT DISTINCT vt1.c0, v0.c2, v0.c0, t0.c0, v0.c1 FROM t0, v0, vt1;
SELECT DISTINCT vt1.c0, v0.c2, v0.c0, t0.c0, v0.c1 FROM t0, v0, vt1 WHERE (v0.c2) UNION SELECT DISTINCT vt1.c0, v0.c2, v0.c0, t0.c0, v0.c1 FROM t0, v0, vt1 WHERE ((NOT (v0.c2))) UNION SELECT DISTINCT vt1.c0, v0.c2, v0.c0, t0.c0, v0.c1 FROM t0, v0, vt1 WHERE (((v0.c2) ISNULL));
SELECT DISTINCT vt1.c0, v0.c2, v0.c0, t0.c0, v0.c1 FROM t0, v0, vt1;
SELECT t0.c0, vt1.c0 FROM t0, vt1, v0 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1, v0 WHERE (((((((((((t0.c0)OR(v0.c1)))OR('1014894945')))OR(t0.c0)))AND(t0.c0))) ISNULL)) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM t0, vt1, v0 WHERE ((NOT (((((((((((t0.c0)OR(v0.c1)))OR('1014894945')))OR(t0.c0)))AND(t0.c0))) ISNULL)))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM t0, vt1, v0 WHERE (((((((((((((t0.c0)OR(v0.c1)))OR('1014894945')))OR(t0.c0)))AND(t0.c0))) ISNULL)) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1, v0 GROUP BY t0.c0, vt1.c0;
SELECT v0.c0, rt0.c0, rt0.c2, vt1.c0, v0.c2, rt0.c4, v0.c1, rt0.c3 FROM v0, vt1, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2, vt1.c0, v0.c2, rt0.c4, v0.c1, rt0.c3;
SELECT ALL v0.c0, rt0.c0, rt0.c2, vt1.c0, v0.c2, rt0.c4, v0.c1, rt0.c3 FROM v0, vt1, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2, vt1.c0, v0.c2, rt0.c4, v0.c1, rt0.c3 HAVING AVG(rt0.c3 COLLATE NOCASE) UNION ALL SELECT v0.c0, rt0.c0, rt0.c2, vt1.c0, v0.c2, rt0.c4, v0.c1, rt0.c3 FROM v0, vt1, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2, vt1.c0, v0.c2, rt0.c4, v0.c1, rt0.c3 HAVING (NOT (AVG(rt0.c3 COLLATE NOCASE))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c2, vt1.c0, v0.c2, rt0.c4, v0.c1, rt0.c3 FROM v0, vt1, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2, vt1.c0, v0.c2, rt0.c4, v0.c1, rt0.c3 HAVING ((AVG(rt0.c3 COLLATE NOCASE)) ISNULL);
SELECT v0.c0, rt0.c0, rt0.c2, vt1.c0, v0.c2, rt0.c4, v0.c1, rt0.c3 FROM v0, vt1, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2, vt1.c0, v0.c2, rt0.c4, v0.c1, rt0.c3;
SELECT ALL v0.c0, rt0.c0, rt0.c2, vt1.c0, v0.c2, rt0.c4, v0.c1, rt0.c3 FROM v0, vt1, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2, vt1.c0, v0.c2, rt0.c4, v0.c1, rt0.c3 HAVING AVG(rt0.c3 COLLATE NOCASE) UNION ALL SELECT v0.c0, rt0.c0, rt0.c2, vt1.c0, v0.c2, rt0.c4, v0.c1, rt0.c3 FROM v0, vt1, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2, vt1.c0, v0.c2, rt0.c4, v0.c1, rt0.c3 HAVING (NOT (AVG(rt0.c3 COLLATE NOCASE))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c2, vt1.c0, v0.c2, rt0.c4, v0.c1, rt0.c3 FROM v0, vt1, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2, vt1.c0, v0.c2, rt0.c4, v0.c1, rt0.c3 HAVING ((AVG(rt0.c3 COLLATE NOCASE)) ISNULL);
SELECT v0.c0, rt0.c0, rt0.c2, vt1.c0, v0.c2, rt0.c4, v0.c1, rt0.c3 FROM v0, vt1, rt0 GROUP BY v0.c0, rt0.c0, rt0.c2, vt1.c0, v0.c2, rt0.c4, v0.c1, rt0.c3;
SELECT ALL TOTAL(CASE ((t0.c0) IS FALSE)  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0)/(t0.c0)) WHEN ((t0.c0)+(t0.c0)) THEN CASE 0.9883794381415831  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN CAST(t0.c0 AS TEXT) THEN '-1617239901' ELSE ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) END) FROM t0 ORDER BY ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))>(((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))));
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((~ (LENGTH(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((~ (LENGTH(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((~ (LENGTH(vt1.c0)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM v0, rt0 CROSS JOIN t0 ON (rt0.c2 IN ()) COLLATE RTRIM;
SELECT DISTINCT * FROM v0, rt0 CROSS JOIN t0 ON (rt0.c2 IN ()) COLLATE RTRIM WHERE (((rt0.c2 COLLATE NOCASE)GLOB(CAST(rt0.c2 AS INTEGER)))) UNION SELECT DISTINCT * FROM v0, rt0 CROSS JOIN t0 ON (rt0.c2 IN ()) COLLATE RTRIM WHERE ((NOT (((rt0.c2 COLLATE NOCASE)GLOB(CAST(rt0.c2 AS INTEGER)))))) UNION SELECT DISTINCT * FROM v0, rt0 CROSS JOIN t0 ON (rt0.c2 IN ()) COLLATE RTRIM WHERE (((((rt0.c2 COLLATE NOCASE)GLOB(CAST(rt0.c2 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM v0, rt0 CROSS JOIN t0 ON (rt0.c2 IN ()) COLLATE RTRIM;
SELECT rt0.c1, vt1.c0, rt0.c4, v0.c2, rt0.c0, t0.c0 FROM rt0, vt1, v0, t0 GROUP BY rt0.c1, vt1.c0, rt0.c4, v0.c2, rt0.c0, t0.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c4, v0.c2, rt0.c0, t0.c0 FROM rt0, vt1, v0, t0 WHERE (((((((rt0.c0))>=((rt0.c1)))))<>((rt0.c2)))) GROUP BY rt0.c1, vt1.c0, rt0.c4, v0.c2, rt0.c0, t0.c0 UNION SELECT ALL rt0.c1, vt1.c0, rt0.c4, v0.c2, rt0.c0, t0.c0 FROM rt0, vt1, v0, t0 WHERE ((NOT (((((((rt0.c0))>=((rt0.c1)))))!=((rt0.c2)))))) GROUP BY rt0.c1, vt1.c0, rt0.c4, v0.c2, rt0.c0, t0.c0 UNION SELECT ALL rt0.c1, vt1.c0, rt0.c4, v0.c2, rt0.c0, t0.c0 FROM rt0, vt1, v0, t0 WHERE (((((((((rt0.c0))>=((rt0.c1)))))!=((rt0.c2)))) ISNULL)) GROUP BY rt0.c1, vt1.c0, rt0.c4, v0.c2, rt0.c0, t0.c0;
SELECT rt0.c1, vt1.c0, rt0.c4, v0.c2, rt0.c0, t0.c0 FROM rt0, vt1, v0, t0 GROUP BY rt0.c1, vt1.c0, rt0.c4, v0.c2, rt0.c0, t0.c0;
SELECT ALL v0.c1, rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c1, rt0.c4, v0.c2, t0.c0 FROM rt0, vt1, v0, t0 GROUP BY v0.c1, rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c1, rt0.c4, v0.c2, t0.c0;
SELECT ALL v0.c1, rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c1, rt0.c4, v0.c2, t0.c0 FROM rt0, vt1, v0, t0 GROUP BY v0.c1, rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c1, rt0.c4, v0.c2, t0.c0 HAVING MIN(((((((((rt0.c1)OR(t0.c0)))OR(rt0.c1)))AND(TOTAL(rt0.c0))))AND(v0.c0))) UNION ALL SELECT ALL v0.c1, rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c1, rt0.c4, v0.c2, t0.c0 FROM rt0, vt1, v0, t0 GROUP BY v0.c1, rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c1, rt0.c4, v0.c2, t0.c0 HAVING (NOT (MIN(((((((((rt0.c1)OR(t0.c0)))OR(rt0.c1)))AND(TOTAL(rt0.c0))))AND(v0.c0))))) UNION ALL SELECT v0.c1, rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c1, rt0.c4, v0.c2, t0.c0 FROM rt0, vt1, v0, t0 GROUP BY v0.c1, rt0.c0, rt0.c2, v0.c0, rt0.c3, rt0.c1, rt0.c4, v0.c2, t0.c0 HAVING ((MIN(((((((((rt0.c1)OR(t0.c0)))OR(rt0.c1)))AND(TOTAL(rt0.c0))))AND(v0.c0)))) ISNULL);
SELECT * FROM vt1, rt0, t0;
SELECT ALL * FROM vt1, rt0, t0 WHERE (CAST((rt0.c4 IN ()) AS BLOB)) UNION ALL SELECT ALL * FROM vt1, rt0, t0 WHERE ((NOT (CAST((rt0.c4 IN ()) AS BLOB)))) UNION ALL SELECT ALL * FROM vt1, rt0, t0 WHERE (((CAST((rt0.c4 IN ()) AS BLOB)) ISNULL));
SELECT * FROM vt1, rt0, t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE rt0.c2  WHEN CAST(rt0.c1 AS TEXT) THEN UNLIKELY(rt0.c0) WHEN ((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c2)))AND(rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c0)) WHEN ((rt0.c1) IS TRUE) THEN NULLIF(rt0.c0, rt0.c4) WHEN ((rt0.c0)<=(rt0.c2)) THEN TYPEOF(rt0.c3) WHEN (rt0.c3 IN ()) THEN (((rt0.c4))<>((rt0.c4))) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE rt0.c2  WHEN CAST(rt0.c1 AS TEXT) THEN UNLIKELY(rt0.c0) WHEN ((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c2)))AND(rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c0)) WHEN ((rt0.c1) IS TRUE) THEN NULLIF(rt0.c0, rt0.c4) WHEN ((rt0.c0)<=(rt0.c2)) THEN TYPEOF(rt0.c3) WHEN (rt0.c3 IN ()) THEN (((rt0.c4))<>((rt0.c4))) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE rt0.c2  WHEN CAST(rt0.c1 AS TEXT) THEN UNLIKELY(rt0.c0) WHEN ((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c2)))AND(rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c0)) WHEN ((rt0.c1) IS TRUE) THEN NULLIF(rt0.c0, rt0.c4) WHEN ((rt0.c0)<=(rt0.c2)) THEN TYPEOF(rt0.c3) WHEN (rt0.c3 IN ()) THEN (((rt0.c4))<>((rt0.c4))) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0, rt0.c2, v0.c2, t0.c0, rt0.c1 FROM t0, v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c2, t0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, v0.c2, t0.c0, rt0.c1 FROM t0, v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c2, t0.c0, rt0.c1 HAVING AVG(CAST(rt0.c1 AS INTEGER)) UNION ALL SELECT ALL rt0.c0, rt0.c2, v0.c2, t0.c0, rt0.c1 FROM t0, v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c2, t0.c0, rt0.c1 HAVING (NOT (AVG(CAST(rt0.c1 AS INTEGER)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, v0.c2, t0.c0, rt0.c1 FROM t0, v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c2, t0.c0, rt0.c1 HAVING ((AVG(CAST(rt0.c1 AS INTEGER))) ISNULL);
SELECT rt0.c0, rt0.c2, v0.c2, t0.c0, rt0.c1 FROM t0, v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c2, t0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, v0.c2, t0.c0, rt0.c1 FROM t0, v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c2, t0.c0, rt0.c1 HAVING AVG(CAST(rt0.c1 AS INTEGER)) UNION ALL SELECT ALL rt0.c0, rt0.c2, v0.c2, t0.c0, rt0.c1 FROM t0, v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c2, t0.c0, rt0.c1 HAVING (NOT (AVG(CAST(rt0.c1 AS INTEGER)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, v0.c2, t0.c0, rt0.c1 FROM t0, v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c2, t0.c0, rt0.c1 HAVING ((AVG(CAST(rt0.c1 AS INTEGER))) ISNULL);
SELECT rt0.c0, rt0.c2, v0.c2, t0.c0, rt0.c1 FROM t0, v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c2, t0.c0, rt0.c1;
SELECT ALL vt1.c0, v0.c0, v0.c2, t0.c0, v0.c1, rt0.c4 FROM vt1, v0, t0 NOT INDEXED, rt0;
SELECT ALL vt1.c0, v0.c0, v0.c2, t0.c0, v0.c1, rt0.c4 FROM vt1, v0, t0, rt0 WHERE ((((vt1.c0 IN ())) BETWEEN (0.435913725486051) AND (v0.c2 COLLATE NOCASE))) UNION ALL SELECT ALL vt1.c0, v0.c0, v0.c2, t0.c0, v0.c1, rt0.c4 FROM vt1 NOT INDEXED, v0, t0, rt0 WHERE ((NOT ((((vt1.c0 IN ())) BETWEEN (0.435913725486051) AND (v0.c2 COLLATE NOCASE))))) UNION ALL SELECT vt1.c0, v0.c0, v0.c2, t0.c0, v0.c1, rt0.c4 FROM vt1, v0, t0, rt0 WHERE ((((((vt1.c0 IN ())) BETWEEN (0.435913725486051) AND (v0.c2 COLLATE NOCASE))) ISNULL));
SELECT ALL vt1.c0, v0.c0, v0.c2, t0.c0, v0.c1, rt0.c4 FROM vt1, v0, t0 NOT INDEXED, rt0;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE (((((((vt1.c0))==((vt1.c0)))))>=(((t0.c0 IN ()))))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT (((((((vt1.c0))=((vt1.c0)))))>=(((t0.c0 IN ()))))))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE (((((((((vt1.c0))=((vt1.c0)))))>=(((t0.c0 IN ()))))) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0, vt1 WHERE (rt0.c0) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0, vt1 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0, vt1 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c4 FROM vt1, rt0, v0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM vt1, rt0, v0 GROUP BY rt0.c4 HAVING ((COUNT(rt0.c3))|((((rt0.c0, COUNT(*), vt1.c0)) NOT BETWEEN ((SUM(MIN(rt0.c4)), rt0.c3, MIN(COUNT(*)))) AND ((AVG(v0.c0), AVG(MIN(v0.c0)), SUM(rt0.c2)))))) UNION ALL SELECT rt0.c4 FROM vt1, rt0, v0 GROUP BY rt0.c4 HAVING (NOT (((COUNT(rt0.c3))|((((rt0.c0, COUNT(*), vt1.c0)) NOT BETWEEN ((SUM(MIN(rt0.c4)), rt0.c3, MIN(COUNT(*)))) AND ((AVG(v0.c0), AVG(MIN(v0.c0)), SUM(rt0.c2)))))))) UNION ALL SELECT rt0.c4 FROM vt1, rt0, v0 GROUP BY rt0.c4 HAVING ((((COUNT(rt0.c3))|((((rt0.c0, COUNT(*), vt1.c0)) NOT BETWEEN ((SUM(MIN(rt0.c4)), rt0.c3, MIN(COUNT(*)))) AND ((AVG(v0.c0), AVG(MIN(v0.c0)), SUM(rt0.c2))))))) ISNULL);
SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 FULL OUTER JOIN vt1 ON ((CASE WHEN rt0.c1 THEN rt0.c4 END) NOT BETWEEN ((rt0.c2 IN ())) AND (CAST(rt0.c0 AS BLOB)));
SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 FULL OUTER JOIN vt1 ON ((CASE WHEN rt0.c1 THEN rt0.c4 END) NOT BETWEEN ((rt0.c2 IN ())) AND (CAST(rt0.c0 AS BLOB))) WHERE (((((NOT (2035747607))))>((LOWER(rt0.c2))))) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 FULL OUTER JOIN vt1 ON ((CASE WHEN rt0.c1 THEN rt0.c4 END) NOT BETWEEN ((rt0.c2 IN ())) AND (CAST(rt0.c0 AS BLOB))) WHERE ((NOT (((((NOT (2035747607))))>((LOWER(rt0.c2))))))) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 FULL OUTER JOIN vt1 ON ((CASE WHEN rt0.c1 THEN rt0.c4 END) NOT BETWEEN ((rt0.c2 IN ())) AND (CAST(rt0.c0 AS BLOB))) WHERE (((((((NOT (2035747607))))>((LOWER(rt0.c2))))) ISNULL));
SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 FULL OUTER JOIN vt1 ON ((CASE WHEN rt0.c1 THEN rt0.c4 END) NOT BETWEEN ((rt0.c2 IN ())) AND (CAST(rt0.c0 AS BLOB)));
SELECT DISTINCT * FROM vt1, v0 LEFT OUTER JOIN t0 ON NULL COLLATE NOCASE COLLATE RTRIM;
SELECT DISTINCT * FROM vt1, v0 LEFT OUTER JOIN t0 ON NULL COLLATE NOCASE COLLATE RTRIM WHERE ((((CASE WHEN v0.c2 THEN x'' WHEN v0.c1 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 END))<>(('%')))) UNION SELECT DISTINCT * FROM vt1, v0 LEFT OUTER JOIN t0 ON NULL COLLATE NOCASE COLLATE RTRIM WHERE ((NOT ((((CASE WHEN v0.c2 THEN x'' WHEN v0.c1 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 END))!=(('%')))))) UNION SELECT DISTINCT * FROM vt1, v0 LEFT OUTER JOIN t0 ON NULL COLLATE NOCASE COLLATE RTRIM WHERE ((((((CASE WHEN v0.c2 THEN x'' WHEN v0.c1 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 END))<>(('%')))) ISNULL));
SELECT DISTINCT * FROM vt1, v0 LEFT OUTER JOIN t0 ON NULL COLLATE NOCASE COLLATE RTRIM;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c2)<>(rt0.c4)))>((rt0.c4 IN (rt0.c4, rt0.c0, NULL)))) GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1, t0.c0;
SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c2)!=(rt0.c4)))>((rt0.c4 IN (rt0.c4, rt0.c0, NULL)))) WHERE (((rt0.c4 COLLATE NOCASE) NOT BETWEEN (x'7c8d' COLLATE RTRIM) AND (rt0.c2 COLLATE NOCASE))) GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1, t0.c0 UNION SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c2)!=(rt0.c4)))>((rt0.c4 IN (rt0.c4, rt0.c0, NULL)))) WHERE ((NOT (((rt0.c4 COLLATE NOCASE) NOT BETWEEN (x'7c8d' COLLATE RTRIM) AND (rt0.c2 COLLATE NOCASE))))) GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1, t0.c0 UNION SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c2)<>(rt0.c4)))>((rt0.c4 IN (rt0.c4, rt0.c0, NULL)))) WHERE (((((rt0.c4 COLLATE NOCASE) NOT BETWEEN (x'7c8d' COLLATE RTRIM) AND (rt0.c2 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1, t0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c2)<>(rt0.c4)))>((rt0.c4 IN (rt0.c4, rt0.c0, NULL)))) GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1, t0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((((GROUP_CONCAT(COUNT(*)))AND(AVG(vt1.c0))))AND(SUM(vt1.c0))))OR(AVG(TOTAL(MIN(AVG(vt1.c0)))))))OR(NULL)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((((((GROUP_CONCAT(COUNT(*)))AND(AVG(vt1.c0))))AND(SUM(vt1.c0))))OR(AVG(TOTAL(MIN(AVG(vt1.c0)))))))OR(NULL)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((((((GROUP_CONCAT(COUNT(*)))AND(AVG(vt1.c0))))AND(SUM(vt1.c0))))OR(AVG(TOTAL(MIN(AVG(vt1.c0)))))))OR(NULL))) ISNULL);
SELECT ALL v0.c1 FROM v0;
SELECT v0.c1 FROM v0 WHERE (CASE ((((v0.c2)OR(v0.c1)))OR(x''))  WHEN (((v0.c2, v0.c0, v0.c0)) BETWEEN ((v0.c2, v0.c2, v0.c2)) AND ((v0.c2, v0.c0, v0.c2))) THEN (- (v0.c0)) END) UNION ALL SELECT ALL v0.c1 FROM v0 WHERE ((NOT (CASE ((((v0.c2)OR(v0.c1)))OR(x''))  WHEN (((v0.c2, v0.c0, v0.c0)) BETWEEN ((v0.c2, v0.c2, v0.c2)) AND ((v0.c2, v0.c0, v0.c2))) THEN (- (v0.c0)) END))) UNION ALL SELECT ALL v0.c1 FROM v0 WHERE (((CASE ((((v0.c2)OR(v0.c1)))OR(x''))  WHEN (((v0.c2, v0.c0, v0.c0)) BETWEEN ((v0.c2, v0.c2, v0.c2)) AND ((v0.c2, v0.c0, v0.c2))) THEN (- (v0.c0)) END) ISNULL));
SELECT ALL v0.c1 FROM v0;
SELECT DISTINCT * FROM rt0, t0 NATURAL JOIN v0;
SELECT DISTINCT * FROM rt0, t0 NATURAL JOIN v0 WHERE ((((+ (rt0.c3))) NOT BETWEEN (rt0.c1) AND (((rt0.c3) BETWEEN (v0.c0) AND (v0.c0))))) UNION SELECT DISTINCT * FROM rt0, t0 NATURAL JOIN v0 WHERE ((NOT ((((+ (rt0.c3))) NOT BETWEEN (rt0.c1) AND (((rt0.c3) BETWEEN (v0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT * FROM rt0, t0 NATURAL JOIN v0 WHERE ((((((+ (rt0.c3))) NOT BETWEEN (rt0.c1) AND (((rt0.c3) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0 NATURAL JOIN v0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (x'') GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(vt1.c0)) ISNULL) COLLATE NOCASE UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT(vt1.c0)) ISNULL) COLLATE NOCASE)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(vt1.c0)) ISNULL) COLLATE NOCASE) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(vt1.c0)) ISNULL) COLLATE NOCASE UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT(vt1.c0)) ISNULL) COLLATE NOCASE)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(vt1.c0)) ISNULL) COLLATE NOCASE) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM rt0, v0, t0;
SELECT * FROM rt0, v0, t0 WHERE ((CASE v0.c0  WHEN v0.c2 THEN NULL ELSE rt0.c0 END IN ())) UNION ALL SELECT * FROM rt0, v0, t0 WHERE ((NOT ((CASE v0.c0  WHEN v0.c2 THEN NULL ELSE rt0.c0 END IN ())))) UNION ALL SELECT ALL * FROM rt0, v0, t0 WHERE ((((CASE v0.c0  WHEN v0.c2 THEN NULL ELSE rt0.c0 END IN ())) ISNULL));
SELECT ALL * FROM rt0, v0, t0;
SELECT DISTINCT vt1.c0, rt0.c4 FROM vt1, rt0;
SELECT DISTINCT vt1.c0, rt0.c4 FROM vt1, rt0 WHERE (0.7129465586583748) UNION SELECT DISTINCT vt1.c0, rt0.c4 FROM vt1, rt0 WHERE ((NOT (0.7129465586583748))) UNION SELECT DISTINCT vt1.c0, rt0.c4 FROM vt1, rt0 WHERE (((0.7129465586583748) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c4 FROM vt1, rt0;
SELECT v0.c2, rt0.c4, rt0.c2 FROM v0, t0, rt0 GROUP BY v0.c2, rt0.c4, rt0.c2;
SELECT ALL v0.c2, rt0.c4, rt0.c2 FROM v0, t0, rt0 WHERE (((((rt0.c2)<(v0.c1)))IS((((t0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c0)))))) GROUP BY v0.c2, rt0.c4, rt0.c2 UNION SELECT v0.c2, rt0.c4, rt0.c2 FROM v0, t0, rt0 WHERE ((NOT (((((rt0.c2)<(v0.c1)))IS((((t0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c0)))))))) GROUP BY v0.c2, rt0.c4, rt0.c2 UNION SELECT ALL v0.c2, rt0.c4, rt0.c2 FROM v0, t0, rt0 WHERE (((((((rt0.c2)<(v0.c1)))IS((((t0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c0)))))) ISNULL)) GROUP BY v0.c2, rt0.c4, rt0.c2;
SELECT v0.c2, rt0.c4, rt0.c2 FROM v0, t0, rt0 GROUP BY v0.c2, rt0.c4, rt0.c2;
SELECT v0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c2, v0.c0, rt0.c4;
SELECT ALL v0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c2, v0.c0, rt0.c4 HAVING CASE WHEN (NOT (rt0.c0)) THEN IFNULL(COUNT(*), AVG(rt0.c0)) ELSE (+ (rt0.c4)) END UNION ALL SELECT v0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c2, v0.c0, rt0.c4 HAVING (NOT (CASE WHEN (NOT (rt0.c0)) THEN IFNULL(COUNT(*), AVG(rt0.c0)) ELSE (+ (rt0.c4)) END)) UNION ALL SELECT ALL v0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c2, v0.c0, rt0.c4 HAVING ((CASE WHEN (NOT (rt0.c0)) THEN IFNULL(COUNT(*), AVG(rt0.c0)) ELSE (+ (rt0.c4)) END) ISNULL);
SELECT v0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c2, v0.c0, rt0.c4;
SELECT ALL v0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c2, v0.c0, rt0.c4 HAVING CASE WHEN (NOT (rt0.c0)) THEN IFNULL(COUNT(*), AVG(rt0.c0)) ELSE (+ (rt0.c4)) END UNION ALL SELECT v0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c2, v0.c0, rt0.c4 HAVING (NOT (CASE WHEN (NOT (rt0.c0)) THEN IFNULL(COUNT(*), AVG(rt0.c0)) ELSE (+ (rt0.c4)) END)) UNION ALL SELECT ALL v0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c2, v0.c0, rt0.c4 HAVING ((CASE WHEN (NOT (rt0.c0)) THEN IFNULL(COUNT(*), AVG(rt0.c0)) ELSE (+ (rt0.c4)) END) ISNULL);
SELECT v0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c2, v0.c0, rt0.c4;
SELECT ALL vt1.c0, t0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM t0 LEFT OUTER JOIN vt1 ON CASE ((rt0.c3)OR(vt1.c0))  WHEN 0.8291786745117525 THEN x'' ELSE ((rt0.c1)>=(rt0.c2)) END INNER JOIN rt0 ON (NOT (rt0.c3 COLLATE BINARY));
SELECT DISTINCT rt0.c2, v0.c0, t0.c0, rt0.c1, vt1.c0, rt0.c3, v0.c1, v0.c2 FROM v0, t0, rt0, vt1;
SELECT DISTINCT rt0.c2, v0.c0, t0.c0, rt0.c1, vt1.c0, rt0.c3, v0.c1, v0.c2 FROM v0, t0, rt0, vt1 WHERE (((((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c4)))OR(t0.c0)))AND(v0.c2)) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c2, v0.c0, t0.c0, rt0.c1, vt1.c0, rt0.c3, v0.c1, v0.c2 FROM v0, t0, rt0, vt1 WHERE ((NOT (((((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c4)))OR(t0.c0)))AND(v0.c2)) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c2, v0.c0, t0.c0, rt0.c1, vt1.c0, rt0.c3, v0.c1, v0.c2 FROM v0, t0, rt0, vt1 WHERE (((((((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c4)))OR(t0.c0)))AND(v0.c2)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c2, v0.c0, t0.c0, rt0.c1, vt1.c0, rt0.c3, v0.c1, v0.c2 FROM v0, t0, rt0, vt1;
SELECT ALL rt0.c0, v0.c2 FROM vt1, rt0 FULL OUTER JOIN t0 ON ((rt0.c2 COLLATE RTRIM)OR(t0.c0)) RIGHT OUTER JOIN v0 ON (((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((x'')))) NOT NULL) GROUP BY rt0.c0, v0.c2;
SELECT ALL rt0.c0, v0.c2 FROM vt1, rt0 FULL OUTER JOIN t0 ON ((rt0.c2 COLLATE RTRIM)OR(t0.c0)) RIGHT OUTER JOIN v0 ON (((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((x'')))) NOT NULL) WHERE (((TIME(vt1.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c3)) NOT BETWEEN (TRIM(NULL, 'o>')) AND ((((v0.c0))==((v0.c1)))))) GROUP BY rt0.c0, v0.c2 UNION SELECT ALL rt0.c0, v0.c2 FROM vt1, rt0 FULL OUTER JOIN t0 ON ((rt0.c2 COLLATE RTRIM)OR(t0.c0)) RIGHT OUTER JOIN v0 ON (((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((x'')))) NOT NULL) WHERE ((NOT (((TIME(vt1.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c3)) NOT BETWEEN (TRIM(NULL, 'o>')) AND ((((v0.c0))==((v0.c1)))))))) GROUP BY rt0.c0, v0.c2 UNION SELECT rt0.c0, v0.c2 FROM vt1, rt0 FULL OUTER JOIN t0 ON ((rt0.c2 COLLATE RTRIM)OR(t0.c0)) RIGHT OUTER JOIN v0 ON (((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((x'')))) NOT NULL) WHERE (((((TIME(vt1.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c3)) NOT BETWEEN (TRIM(NULL, 'o>')) AND ((((v0.c0))==((v0.c1)))))) ISNULL)) GROUP BY rt0.c0, v0.c2;
SELECT ALL rt0.c0, v0.c2 FROM vt1, rt0 FULL OUTER JOIN t0 ON ((rt0.c2 COLLATE RTRIM)OR(t0.c0)) RIGHT OUTER JOIN v0 ON (((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((x'')))) NOT NULL) GROUP BY rt0.c0, v0.c2;
SELECT rt0.c3 FROM vt1, t0, rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM vt1, t0, rt0 GROUP BY rt0.c3 HAVING ((((((GROUP_CONCAT(AVG(COUNT(rt0.c4))))AND(COUNT(SUM(rt0.c4)))))OR(MIN(GROUP_CONCAT(rt0.c0))))) IS FALSE) UNION ALL SELECT rt0.c3 FROM vt1, t0, rt0 GROUP BY rt0.c3 HAVING (NOT (((((((GROUP_CONCAT(AVG(COUNT(rt0.c4))))AND(COUNT(SUM(rt0.c4)))))OR(MIN(GROUP_CONCAT(rt0.c0))))) IS FALSE))) UNION ALL SELECT rt0.c3 FROM vt1, t0, rt0 GROUP BY rt0.c3 HAVING ((((((((GROUP_CONCAT(AVG(COUNT(rt0.c4))))AND(COUNT(SUM(rt0.c4)))))OR(MIN(GROUP_CONCAT(rt0.c0))))) IS FALSE)) ISNULL);
SELECT MIN('O(P|aRC*') FROM vt1, v0 ORDER BY (NOT (CAST(v0.c0 AS INTEGER))) ASC, (NOT ((~ (v0.c0)))) ASC  NULLS LAST;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM t0, v0;
SELECT v0.c0, v0.c2, v0.c1 FROM t0, v0 NOT INDEXED WHERE (((((((v0.c0) NOTNULL))AND(v0.c0 COLLATE BINARY)))OR((NOT (v0.c1))))) UNION ALL SELECT v0.c0, v0.c2, v0.c1 FROM t0, v0 WHERE ((NOT (((((((v0.c0) NOTNULL))AND(v0.c0 COLLATE BINARY)))OR((NOT (v0.c1))))))) UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1 FROM t0, v0 WHERE (((((((((v0.c0) NOTNULL))AND(v0.c0 COLLATE BINARY)))OR((NOT (v0.c1))))) ISNULL));
SELECT ALL v0.c0, v0.c2, v0.c1 FROM t0, v0;
SELECT DISTINCT * FROM rt0, vt1, v0;
SELECT DISTINCT * FROM rt0, vt1, v0 WHERE (((((rt0.c1) ISNULL)) NOT BETWEEN (((rt0.c4)/(rt0.c2))) AND ((v0.c1 IN (v0.c2))))) UNION SELECT DISTINCT * FROM rt0, vt1, v0 WHERE ((NOT (((((rt0.c1) ISNULL)) NOT BETWEEN (((rt0.c4)/(rt0.c2))) AND ((v0.c1 IN (v0.c2))))))) UNION SELECT DISTINCT * FROM rt0, vt1, v0 WHERE (((((((rt0.c1) ISNULL)) NOT BETWEEN (((rt0.c4)/(rt0.c2))) AND ((v0.c1 IN (v0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, v0;
SELECT vt1.c0, rt0.c1, t0.c0, rt0.c4, rt0.c3, v0.c2, v0.c1, rt0.c2, v0.c0 FROM v0, rt0, t0, vt1 GROUP BY vt1.c0, rt0.c1, t0.c0, rt0.c4, rt0.c3, v0.c2, v0.c1, rt0.c2, v0.c0;
SELECT vt1.c0, rt0.c1, t0.c0, rt0.c4, rt0.c3, v0.c2, v0.c1, rt0.c2, v0.c0 FROM v0, rt0, t0, vt1 WHERE ((((rt0.c0)) NOT BETWEEN ((((((((((rt0.c3)AND(rt0.c4)))OR(vt1.c0)))OR(v0.c2)))OR(rt0.c0)))) AND ((CAST(x'' AS INTEGER))))) GROUP BY vt1.c0, rt0.c1, t0.c0, rt0.c4, rt0.c3, v0.c2, v0.c1, rt0.c2, v0.c0 UNION SELECT ALL vt1.c0, rt0.c1, t0.c0, rt0.c4, rt0.c3, v0.c2, v0.c1, rt0.c2, v0.c0 FROM v0, rt0, t0, vt1 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((((((((((rt0.c3)AND(rt0.c4)))OR(vt1.c0)))OR(v0.c2)))OR(rt0.c0)))) AND ((CAST(x'' AS INTEGER))))))) GROUP BY vt1.c0, rt0.c1, t0.c0, rt0.c4, rt0.c3, v0.c2, v0.c1, rt0.c2, v0.c0 UNION SELECT ALL vt1.c0, rt0.c1, t0.c0, rt0.c4, rt0.c3, v0.c2, v0.c1, rt0.c2, v0.c0 FROM v0, rt0, t0, vt1 WHERE ((((((rt0.c0)) NOT BETWEEN ((((((((((rt0.c3)AND(rt0.c4)))OR(vt1.c0)))OR(v0.c2)))OR(rt0.c0)))) AND ((CAST(x'' AS INTEGER))))) ISNULL)) GROUP BY vt1.c0, rt0.c1, t0.c0, rt0.c4, rt0.c3, v0.c2, v0.c1, rt0.c2, v0.c0;
SELECT vt1.c0, rt0.c1, t0.c0, rt0.c4, rt0.c3, v0.c2, v0.c1, rt0.c2, v0.c0 FROM v0, rt0, t0, vt1 GROUP BY vt1.c0, rt0.c1, t0.c0, rt0.c4, rt0.c3, v0.c2, v0.c1, rt0.c2, v0.c0;
SELECT rt0.c0, rt0.c4, rt0.c2, t0.c0 FROM rt0, t0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c2, t0.c0;
SELECT rt0.c0, rt0.c4, rt0.c2, t0.c0 FROM rt0, t0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c2, t0.c0 HAVING (((rt0.c4, t0.c0, GROUP_CONCAT(rt0.c4))) BETWEEN (((TOTAL(TOTAL(rt0.c0)) IN ()), MIN(MIN(v0.c2)), CAST(3.77460248E8 AS TEXT))) AND ((COUNT(*), COUNT(*), rt0.c4 COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c2, t0.c0 FROM rt0, t0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c2, t0.c0 HAVING (NOT ((((rt0.c4, t0.c0, GROUP_CONCAT(rt0.c4))) BETWEEN (((TOTAL(TOTAL(rt0.c0)) IN ()), MIN(MIN(v0.c2)), CAST(3.77460248E8 AS TEXT))) AND ((COUNT(*), COUNT(*), rt0.c4 COLLATE RTRIM))))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c2, t0.c0 FROM rt0, t0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c2, t0.c0 HAVING (((((rt0.c4, t0.c0, GROUP_CONCAT(rt0.c4))) BETWEEN (((TOTAL(TOTAL(rt0.c0)) IN ()), MIN(MIN(v0.c2)), CAST(3.77460248E8 AS TEXT))) AND ((COUNT(*), COUNT(*), rt0.c4 COLLATE RTRIM)))) ISNULL);
SELECT ALL v0.c2, rt0.c3, rt0.c2, v0.c0, rt0.c1, t0.c0, v0.c1, rt0.c0 FROM v0, rt0, t0;
SELECT v0.c2, rt0.c3, rt0.c2, v0.c0, rt0.c1, t0.c0, v0.c1, rt0.c0 FROM v0, rt0, t0 WHERE (rt0.c4) UNION ALL SELECT ALL v0.c2, rt0.c3, rt0.c2, v0.c0, rt0.c1, t0.c0, v0.c1, rt0.c0 FROM v0, rt0, t0 WHERE ((NOT (rt0.c4))) UNION ALL SELECT ALL v0.c2, rt0.c3, rt0.c2, v0.c0, rt0.c1, t0.c0, v0.c1, rt0.c0 FROM v0, rt0, t0 WHERE (((rt0.c4) ISNULL));
SELECT ALL v0.c2, rt0.c3, rt0.c2, v0.c0, rt0.c1, t0.c0, v0.c1, rt0.c0 FROM v0, rt0, t0;
SELECT DISTINCT * FROM v0, vt1, t0 INNER JOIN rt0 ON ((x'') NOTNULL);
SELECT DISTINCT * FROM v0, vt1, t0 INNER JOIN rt0 ON ((x'') NOTNULL) WHERE (((((((((((((((rt0.c3)AND(rt0.c4)))AND(v0.c2)))OR(rt0.c2)))AND(v0.c1)))AND(rt0.c0)))AND(rt0.c4))) IS FALSE)) UNION SELECT DISTINCT * FROM v0, vt1, t0 INNER JOIN rt0 ON ((x'') NOTNULL) WHERE ((NOT (((((((((((((((rt0.c3)AND(rt0.c4)))AND(v0.c2)))OR(rt0.c2)))AND(v0.c1)))AND(rt0.c0)))AND(rt0.c4))) IS FALSE)))) UNION SELECT DISTINCT * FROM v0, vt1, t0 INNER JOIN rt0 ON ((x'') NOTNULL) WHERE (((((((((((((((((rt0.c3)AND(rt0.c4)))AND(v0.c2)))OR(rt0.c2)))AND(v0.c1)))AND(rt0.c0)))AND(rt0.c4))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM v0, vt1, t0 INNER JOIN rt0 ON ((x'') NOTNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((t0.c0)OR(t0.c0)) COLLATE RTRIM) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((t0.c0)OR(t0.c0)) COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0)OR(t0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT v0.c2, v0.c0, t0.c0, vt1.c0, v0.c1 FROM v0, vt1, t0 GROUP BY v0.c2, v0.c0, t0.c0, vt1.c0, v0.c1;
SELECT v0.c2, v0.c0, t0.c0, vt1.c0, v0.c1 FROM v0, vt1, t0 GROUP BY v0.c2, v0.c0, t0.c0, vt1.c0, v0.c1 HAVING CASE WHEN LIKELY(TOTAL(TOTAL(MAX(v0.c2)))) THEN MAX(COUNT(*)) ELSE ((SUM(TOTAL(SUM(t0.c0))))*(t0.c0)) END UNION ALL SELECT v0.c2, v0.c0, t0.c0, vt1.c0, v0.c1 FROM v0, vt1, t0 GROUP BY v0.c2, v0.c0, t0.c0, vt1.c0, v0.c1 HAVING (NOT (CASE WHEN LIKELY(TOTAL(TOTAL(MAX(v0.c2)))) THEN MAX(COUNT(*)) ELSE ((SUM(TOTAL(SUM(t0.c0))))*(t0.c0)) END)) UNION ALL SELECT v0.c2, v0.c0, t0.c0, vt1.c0, v0.c1 FROM v0, vt1, t0 GROUP BY v0.c2, v0.c0, t0.c0, vt1.c0, v0.c1 HAVING ((CASE WHEN LIKELY(TOTAL(TOTAL(MAX(v0.c2)))) THEN MAX(COUNT(*)) ELSE ((SUM(TOTAL(SUM(t0.c0))))*(t0.c0)) END) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ('k' COLLATE RTRIM) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ('k' COLLATE RTRIM))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((('k' COLLATE RTRIM) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM vt1, t0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt1, t0 NATURAL JOIN rt0 WHERE ('2144680256') UNION SELECT DISTINCT * FROM vt1, t0 NATURAL JOIN rt0 WHERE ((NOT ('2144680256'))) UNION SELECT DISTINCT * FROM vt1, t0 NATURAL JOIN rt0 WHERE ((('2144680256') ISNULL));
SELECT DISTINCT * FROM vt1, t0 NATURAL JOIN rt0;
SELECT v0.c1, rt0.c3, rt0.c0, rt0.c4, v0.c0, rt0.c1, rt0.c2, v0.c2, vt1.c0 FROM v0, vt1 RIGHT OUTER JOIN rt0 ON ((load_extension(v0.c2))<=(((vt1.c0) BETWEEN (rt0.c2) AND (t0.c0)))) LEFT OUTER JOIN t0 ON CAST((~ (rt0.c1)) AS REAL) GROUP BY v0.c1, rt0.c3, rt0.c0, rt0.c4, v0.c0, rt0.c1, rt0.c2, v0.c2, vt1.c0;
SELECT ALL v0.c2, t0.c0, rt0.c2, v0.c1 FROM rt0, t0, vt1 INNER JOIN v0 ON x'be3156b1' COLLATE RTRIM GROUP BY v0.c2, t0.c0, rt0.c2, v0.c1;
SELECT ALL v0.c2, t0.c0, rt0.c2, v0.c1 FROM rt0, t0, vt1 INNER JOIN v0 ON x'be3156b1' COLLATE RTRIM GROUP BY v0.c2, t0.c0, rt0.c2, v0.c1 HAVING MIN(COUNT(MIN(COUNT(MAX(rt0.c2))))) UNION ALL SELECT ALL v0.c2, t0.c0, rt0.c2, v0.c1 FROM rt0, t0, vt1 NOT INDEXED INNER JOIN v0 ON x'be3156b1' COLLATE RTRIM GROUP BY v0.c2, t0.c0, rt0.c2, v0.c1 HAVING (NOT (MIN(COUNT(MIN(COUNT(MAX(rt0.c2))))))) UNION ALL SELECT ALL v0.c2, t0.c0, rt0.c2, v0.c1 FROM rt0, t0, vt1 INNER JOIN v0 ON x'be3156b1' COLLATE RTRIM GROUP BY v0.c2, t0.c0, rt0.c2, v0.c1 HAVING ((MIN(COUNT(MIN(COUNT(MAX(rt0.c2)))))) ISNULL);
SELECT ALL rt0.c0 FROM t0, vt1, rt0;
SELECT rt0.c0 FROM t0, vt1, rt0 WHERE (CAST(((x'')OR(rt0.c1)) AS INTEGER)) UNION ALL SELECT rt0.c0 FROM t0, vt1, rt0 WHERE ((NOT (CAST(((x'')OR(rt0.c1)) AS INTEGER)))) UNION ALL SELECT rt0.c0 FROM t0, vt1, rt0 WHERE (((CAST(((x'')OR(rt0.c1)) AS INTEGER)) ISNULL));
SELECT ALL rt0.c0 FROM t0, vt1, rt0;
SELECT DISTINCT v0.c0, rt0.c2, rt0.c3, t0.c0, vt1.c0, rt0.c4, v0.c2, v0.c1, rt0.c0 FROM vt1, rt0 LEFT OUTER JOIN t0 ON CAST(0.38865569423896174 COLLATE BINARY AS TEXT) CROSS JOIN v0 ON 0.8263593102050961;
SELECT DISTINCT v0.c0, rt0.c2, rt0.c3, t0.c0, vt1.c0, rt0.c4, v0.c2, v0.c1, rt0.c0 FROM vt1, rt0 LEFT OUTER JOIN t0 ON CAST(0.38865569423896174 COLLATE BINARY AS TEXT) CROSS JOIN v0 ON 0.8263593102050961 WHERE (LIKELY(DISTINCT vt1.c0) COLLATE BINARY) UNION SELECT DISTINCT v0.c0, rt0.c2, rt0.c3, t0.c0, vt1.c0, rt0.c4, v0.c2, v0.c1, rt0.c0 FROM vt1, rt0 LEFT OUTER JOIN t0 ON CAST(0.38865569423896174 COLLATE BINARY AS TEXT) CROSS JOIN v0 ON 0.8263593102050961 WHERE ((NOT (LIKELY(DISTINCT vt1.c0) COLLATE BINARY))) UNION SELECT DISTINCT v0.c0, rt0.c2, rt0.c3, t0.c0, vt1.c0, rt0.c4, v0.c2, v0.c1, rt0.c0 FROM vt1, rt0 LEFT OUTER JOIN t0 ON CAST(0.38865569423896174 COLLATE BINARY AS TEXT) CROSS JOIN v0 ON 0.8263593102050961 WHERE (((LIKELY(DISTINCT vt1.c0) COLLATE BINARY) ISNULL));
SELECT DISTINCT v0.c0, rt0.c2, rt0.c3, t0.c0, vt1.c0, rt0.c4, v0.c2, v0.c1, rt0.c0 FROM vt1, rt0 LEFT OUTER JOIN t0 ON CAST(0.38865569423896174 COLLATE BINARY AS TEXT) CROSS JOIN v0 ON 0.8263593102050961;
SELECT ALL v0.c0, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON CAST(((v0.c2)+(v0.c2)) AS NUMERIC) RIGHT OUTER JOIN vt1 ON (~ (v0.c1 COLLATE RTRIM)) FULL OUTER JOIN v0 ON CASE CAST(v0.c0 AS INTEGER)  WHEN 'JbU' THEN (v0.c0 IN ()) ELSE '' COLLATE NOCASE END GROUP BY v0.c0, rt0.c1;
SELECT rt0.c4, v0.c0, v0.c1, rt0.c3, rt0.c1, rt0.c0, v0.c2, t0.c0, rt0.c2 FROM v0, rt0, t0 GROUP BY rt0.c4, v0.c0, v0.c1, rt0.c3, rt0.c1, rt0.c0, v0.c2, t0.c0, rt0.c2;
SELECT ALL rt0.c4, v0.c0, v0.c1, rt0.c3, rt0.c1, rt0.c0, v0.c2, t0.c0, rt0.c2 FROM v0, rt0, t0 GROUP BY rt0.c4, v0.c0, v0.c1, rt0.c3, rt0.c1, rt0.c0, v0.c2, t0.c0, rt0.c2 HAVING MAX(CAST(GROUP_CONCAT(SUM(rt0.c4)) AS TEXT)) UNION ALL SELECT ALL rt0.c4, v0.c0, v0.c1, rt0.c3, rt0.c1, rt0.c0, v0.c2, t0.c0, rt0.c2 FROM v0, rt0, t0 GROUP BY rt0.c4, v0.c0, v0.c1, rt0.c3, rt0.c1, rt0.c0, v0.c2, t0.c0, rt0.c2 HAVING (NOT (MAX(CAST(GROUP_CONCAT(SUM(rt0.c4)) AS TEXT)))) UNION ALL SELECT rt0.c4, v0.c0, v0.c1, rt0.c3, rt0.c1, rt0.c0, v0.c2, t0.c0, rt0.c2 FROM v0, rt0 NOT INDEXED, t0 GROUP BY rt0.c4, v0.c0, v0.c1, rt0.c3, rt0.c1, rt0.c0, v0.c2, t0.c0, rt0.c2 HAVING ((MAX(CAST(GROUP_CONCAT(SUM(rt0.c4)) AS TEXT))) ISNULL);
SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM rt0, t0;
SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM rt0, t0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END IN ())) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM rt0, t0 WHERE ((NOT ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END IN ())))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM rt0, t0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END IN ())) ISNULL));
SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM rt0, t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c4) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c4))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c4) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (CASE CASE rt0.c0  WHEN 'JbU' THEN rt0.c2 ELSE rt0.c1 END  WHEN (- (rt0.c2)) THEN (NOT ('-1329623288')) ELSE ((rt0.c2) ISNULL) END) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CASE CASE rt0.c0  WHEN 'JbU' THEN rt0.c2 ELSE rt0.c1 END  WHEN (- (rt0.c2)) THEN (NOT ('-1329623288')) ELSE ((rt0.c2) ISNULL) END))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((CASE CASE rt0.c0  WHEN 'JbU' THEN rt0.c2 ELSE rt0.c1 END  WHEN (- (rt0.c2)) THEN (NOT ('-1329623288')) ELSE ((rt0.c2) ISNULL) END) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING MAX((NOT (SUM(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING (NOT (MAX((NOT (SUM(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING ((MAX((NOT (SUM(vt1.c0))))) ISNULL);
SELECT TOTAL(((v0.c2 COLLATE RTRIM)AND(CASE WHEN vt1.c0 THEN t0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c2 END))) FROM v0, t0, vt1 ORDER BY (t0.c0 IN ()) COLLATE BINARY  NULLS FIRST;
SELECT v0.c2, v0.c0, rt0.c2 FROM v0, rt0;
SELECT ALL v0.c2, v0.c0, rt0.c2 FROM v0, rt0 WHERE ((((((rt0.c1))<=((v0.c1))))|(rt0.c4))) UNION ALL SELECT v0.c2, v0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT ((((((rt0.c1))<=((v0.c1))))|(rt0.c4))))) UNION ALL SELECT v0.c2, v0.c0, rt0.c2 FROM v0, rt0 WHERE ((((((((rt0.c1))<=((v0.c1))))|(rt0.c4))) ISNULL));
SELECT v0.c2, v0.c0, rt0.c2 FROM v0, rt0;
SELECT DISTINCT v0.c0, t0.c0, v0.c1, v0.c2 FROM v0, t0;
SELECT DISTINCT v0.c0, t0.c0, v0.c1, v0.c2 FROM v0, t0 WHERE ((+ ((t0.c0 IN ())))) UNION SELECT DISTINCT v0.c0, t0.c0, v0.c1, v0.c2 FROM v0, t0 WHERE ((NOT ((+ ((t0.c0 IN ())))))) UNION SELECT DISTINCT v0.c0, t0.c0, v0.c1, v0.c2 FROM v0, t0 WHERE ((((+ ((t0.c0 IN ())))) ISNULL));
SELECT DISTINCT v0.c0, t0.c0, v0.c1, v0.c2 FROM v0, t0;
SELECT rt0.c3 FROM rt0, t0, v0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, t0, v0 WHERE ((((((rt0.c0 IN ()))OR(((rt0.c2) IS FALSE))))OR(CAST(rt0.c1 AS INTEGER)))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0, t0, v0 WHERE ((NOT ((((((rt0.c0 IN ()))OR(((rt0.c2) IS FALSE))))OR(CAST(rt0.c1 AS INTEGER)))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0, t0, v0 WHERE ((((((((rt0.c0 IN ()))OR(((rt0.c2) IS FALSE))))OR(CAST(rt0.c1 AS INTEGER)))) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, t0, v0 GROUP BY rt0.c3;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT * FROM vt1, v0, rt0;
SELECT ALL * FROM vt1, v0, rt0 WHERE (((((((((((((((rt0.c0)|(v0.c1)))AND(load_extension(v0.c0, v0.c0))))AND(CHANGES())))OR(CASE WHEN rt0.c0 THEN v0.c2 END)))OR(CASE WHEN rt0.c4 THEN rt0.c2 WHEN v0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)))OR(vt1.c0 COLLATE BINARY)))AND((~ (rt0.c0))))) UNION ALL SELECT ALL * FROM vt1, v0, rt0 WHERE ((NOT (((((((((((((((rt0.c0)|(v0.c1)))AND(load_extension(v0.c0, v0.c0))))AND(CHANGES())))OR(CASE WHEN rt0.c0 THEN v0.c2 END)))OR(CASE WHEN rt0.c4 THEN rt0.c2 WHEN v0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)))OR(vt1.c0 COLLATE BINARY)))AND((~ (rt0.c0))))))) UNION ALL SELECT * FROM vt1, v0, rt0 WHERE (((((((((((((((((rt0.c0)|(v0.c1)))AND(load_extension(v0.c0, v0.c0))))AND(CHANGES())))OR(CASE WHEN rt0.c0 THEN v0.c2 END)))OR(CASE WHEN rt0.c4 THEN rt0.c2 WHEN v0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)))OR(vt1.c0 COLLATE BINARY)))AND((~ (rt0.c0))))) ISNULL));
SELECT * FROM vt1, v0, rt0;
SELECT DISTINCT * FROM rt0, vt1, t0, v0;
SELECT DISTINCT * FROM rt0, vt1, t0, v0 WHERE (((CASE WHEN vt1.c0 THEN t0.c0 END)<=(x'e887'))) UNION SELECT DISTINCT * FROM rt0, vt1, t0, v0 WHERE ((NOT (((CASE WHEN vt1.c0 THEN t0.c0 END)<=(x'e887'))))) UNION SELECT DISTINCT * FROM rt0, vt1, t0, v0 WHERE (((((CASE WHEN vt1.c0 THEN t0.c0 END)<=(x'e887'))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, t0, v0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((- (t0.c0))) IS TRUE)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((- (t0.c0))) IS TRUE)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((- (t0.c0))) IS TRUE)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c2, rt0.c4, vt1.c0, t0.c0, rt0.c0, rt0.c3, rt0.c1 FROM t0, vt1, rt0 GROUP BY rt0.c2, rt0.c4, vt1.c0, t0.c0, rt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c4, vt1.c0, t0.c0, rt0.c0, rt0.c3, rt0.c1 FROM t0, vt1, rt0 GROUP BY rt0.c2, rt0.c4, vt1.c0, t0.c0, rt0.c0, rt0.c3, rt0.c1 HAVING ((((MIN(MAX(COUNT(AVG(MAX(rt0.c1))))))OR(json_array(COUNT(rt0.c1), TOTAL(NULL), GROUP_CONCAT(COUNT(*)), COUNT(*)))))OR(AVG(rt0.c3))) UNION ALL SELECT rt0.c2, rt0.c4, vt1.c0, t0.c0, rt0.c0, rt0.c3, rt0.c1 FROM t0, vt1, rt0 GROUP BY rt0.c2, rt0.c4, vt1.c0, t0.c0, rt0.c0, rt0.c3, rt0.c1 HAVING (NOT (((((MIN(MAX(COUNT(AVG(MAX(rt0.c1))))))OR(json_array(COUNT(rt0.c1), TOTAL(NULL), GROUP_CONCAT(COUNT(*)), COUNT(*)))))OR(AVG(rt0.c3))))) UNION ALL SELECT rt0.c2, rt0.c4, vt1.c0, t0.c0, rt0.c0, rt0.c3, rt0.c1 FROM t0, vt1, rt0 GROUP BY rt0.c2, rt0.c4, vt1.c0, t0.c0, rt0.c0, rt0.c3, rt0.c1 HAVING ((((((MIN(MAX(COUNT(AVG(MAX(rt0.c1))))))OR(json_array(COUNT(rt0.c1), TOTAL(NULL), GROUP_CONCAT(COUNT(*)), COUNT(*)))))OR(AVG(rt0.c3)))) ISNULL);
SELECT SUM(((((((((((((0.2559174497685258)OR(v0.c0)))OR(v0.c2)))AND(rt0.c2)))OR(rt0.c2)))AND(((v0.c2) IS TRUE))))AND((((v0.c2, rt0.c0, rt0.c3))<((v0.c2, rt0.c0, v0.c0)))))) FROM t0, vt1, rt0, v0;
SELECT ALL v0.c0, rt0.c2, v0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM vt1 INNER JOIN rt0 ON x'' RIGHT OUTER JOIN v0 ON rt0.c4;
SELECT ALL v0.c0, rt0.c2, v0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM vt1 INNER JOIN rt0 ON x'' RIGHT OUTER JOIN v0 ON rt0.c4 WHERE (LIKELY(-6.79249406E8)) UNION ALL SELECT ALL v0.c0, rt0.c2, v0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM vt1 INNER JOIN rt0 ON x'' RIGHT OUTER JOIN v0 ON rt0.c4 WHERE ((NOT (LIKELY(-6.79249406E8)))) UNION ALL SELECT v0.c0, rt0.c2, v0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM vt1 INNER JOIN rt0 ON x'' RIGHT OUTER JOIN v0 ON rt0.c4 WHERE (((LIKELY(-6.79249406E8)) ISNULL));
SELECT ALL v0.c0, rt0.c2, v0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM vt1 INNER JOIN rt0 ON x'' RIGHT OUTER JOIN v0 ON rt0.c4;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)AND(v0.c0)))OR(v0.c2)) COLLATE NOCASE COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0)AND(v0.c0)))OR(v0.c2)) COLLATE NOCASE COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c2)) COLLATE NOCASE COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE (CAST(((((((((vt1.c0)OR(t0.c0)))AND(t0.c0)))OR(vt1.c0)))OR(t0.c0)) AS INTEGER)) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT (CAST(((((((((vt1.c0)OR(t0.c0)))AND(t0.c0)))OR(vt1.c0)))OR(t0.c0)) AS INTEGER)))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE (((CAST(((((((((vt1.c0)OR(t0.c0)))AND(t0.c0)))OR(vt1.c0)))OR(t0.c0)) AS INTEGER)) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT ALL rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN (((rt0.c3)) BETWEEN ((t0.c0)) AND ((rt0.c3))) THEN 1939844037 ELSE x'' END LEFT OUTER JOIN t0 ON ((((rt0.c0)>=(rt0.c3)))%(vt1.c0 COLLATE RTRIM)) GROUP BY rt0.c1;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END AS TEXT)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END AS TEXT)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END AS TEXT)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c1, vt1.c0, t0.c0 FROM vt1, rt0, v0, t0;
SELECT DISTINCT rt0.c3, rt0.c1, vt1.c0, t0.c0 FROM vt1, rt0, v0, t0 WHERE (LOWER(((((rt0.c2)OR(rt0.c2)))OR(t0.c0)))) UNION SELECT DISTINCT rt0.c3, rt0.c1, vt1.c0, t0.c0 FROM vt1, rt0, v0, t0 WHERE ((NOT (LOWER(((((rt0.c2)OR(rt0.c2)))OR(t0.c0)))))) UNION SELECT DISTINCT rt0.c3, rt0.c1, vt1.c0, t0.c0 FROM vt1, rt0, v0, t0 WHERE (((LOWER(((((rt0.c2)OR(rt0.c2)))OR(t0.c0)))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1, vt1.c0, t0.c0 FROM vt1, rt0, v0, t0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((UNLIKELY(DISTINCT rt0.c0))=(NULL))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((UNLIKELY(DISTINCT rt0.c0))==(NULL))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((UNLIKELY(DISTINCT rt0.c0))=(NULL))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c1)<(v0.c1)) COLLATE NOCASE GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c1)<(v0.c1)) COLLATE NOCASE GROUP BY v0.c1, v0.c2, v0.c0 HAVING SUM(GROUP_CONCAT(v0.c2)) UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c1)<(v0.c1)) COLLATE NOCASE GROUP BY v0.c1, v0.c2, v0.c0 HAVING (NOT (SUM(GROUP_CONCAT(v0.c2)))) UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c1)<(v0.c1)) COLLATE NOCASE GROUP BY v0.c1, v0.c2, v0.c0 HAVING ((SUM(GROUP_CONCAT(v0.c2))) ISNULL);
SELECT ALL * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE (CAST((((rt0.c0))<>((rt0.c3))) AS NUMERIC)) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT (CAST((((rt0.c0))!=((rt0.c3))) AS NUMERIC)))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((CAST((((rt0.c0))!=((rt0.c3))) AS NUMERIC)) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c3 AS NUMERIC) THEN ((('1466301851')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) ELSE LOWER(DISTINCT t0.c0) END;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c3 AS NUMERIC) THEN ((('1466301851')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) ELSE LOWER(DISTINCT t0.c0) END WHERE (((CASE WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN '0.6337179842624036' END) NOT BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(rt0.c1))) AND (COALESCE(DISTINCT rt0.c3, rt0.c3)))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c3 AS NUMERIC) THEN ((('1466301851')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) ELSE LOWER(DISTINCT t0.c0) END WHERE ((NOT (((CASE WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN '0.6337179842624036' END) NOT BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(rt0.c1))) AND (COALESCE(DISTINCT rt0.c3, rt0.c3)))))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c3 AS NUMERIC) THEN ((('1466301851')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) ELSE LOWER(DISTINCT t0.c0) END WHERE (((((CASE WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN '0.6337179842624036' END) NOT BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(rt0.c1))) AND (COALESCE(DISTINCT rt0.c3, rt0.c3)))) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c3 AS NUMERIC) THEN ((('1466301851')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) ELSE LOWER(DISTINCT t0.c0) END;
SELECT ALL vt1.c0, rt0.c0, v0.c2, v0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0, vt1, v0 GROUP BY vt1.c0, rt0.c0, v0.c2, v0.c0, rt0.c3, rt0.c4, rt0.c1;
SELECT ALL vt1.c0, rt0.c0, v0.c2, v0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0, vt1, v0 WHERE (((json_valid(v0.c0)) NOT BETWEEN (CAST(v0.c0 AS BLOB)) AND (((rt0.c1)IS NOT(v0.c0))))) GROUP BY vt1.c0, rt0.c0, v0.c2, v0.c0, rt0.c3, rt0.c4, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c0, v0.c2, v0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0, vt1, v0 WHERE ((NOT (((json_valid(v0.c0)) NOT BETWEEN (CAST(v0.c0 AS BLOB)) AND (((rt0.c1)IS NOT(v0.c0))))))) GROUP BY vt1.c0, rt0.c0, v0.c2, v0.c0, rt0.c3, rt0.c4, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c0, v0.c2, v0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0, vt1, v0 WHERE (((((json_valid(v0.c0)) NOT BETWEEN (CAST(v0.c0 AS BLOB)) AND (((rt0.c1)IS NOT(v0.c0))))) ISNULL)) GROUP BY vt1.c0, rt0.c0, v0.c2, v0.c0, rt0.c3, rt0.c4, rt0.c1;
SELECT ALL vt1.c0, rt0.c0, v0.c2, v0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0, vt1, v0 GROUP BY vt1.c0, rt0.c0, v0.c2, v0.c0, rt0.c3, rt0.c4, rt0.c1;
SELECT ALL v0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0, v0 GROUP BY v0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0;
SELECT ALL v0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0, v0 GROUP BY v0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 HAVING rt0.c3 UNION ALL SELECT v0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0, v0 GROUP BY v0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 HAVING (NOT (rt0.c3)) UNION ALL SELECT v0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0, v0 GROUP BY v0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 HAVING ((rt0.c3) ISNULL);
SELECT ALL v0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0, v0 GROUP BY v0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0;
SELECT ALL v0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0, v0 GROUP BY v0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 HAVING rt0.c3 UNION ALL SELECT v0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0, v0 GROUP BY v0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 HAVING (NOT (rt0.c3)) UNION ALL SELECT v0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0, v0 GROUP BY v0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 HAVING ((rt0.c3) ISNULL);
SELECT ALL v0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0, v0 GROUP BY v0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c2, t0.c0;
SELECT rt0.c3, rt0.c0, rt0.c4, t0.c0, rt0.c1, rt0.c2, vt1.c0 FROM t0, vt1 INNER JOIN rt0 ON (((('-807056402')IS NOT(rt0.c0))) IS TRUE);
SELECT ALL rt0.c3, rt0.c0, rt0.c4, t0.c0, rt0.c1, rt0.c2, vt1.c0 FROM t0, vt1 INNER JOIN rt0 ON (((('-807056402')IS NOT(rt0.c0))) IS TRUE) WHERE (((((rt0.c4)AND(rt0.c3)))>>(vt1.c0))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c4, t0.c0, rt0.c1, rt0.c2, vt1.c0 FROM t0, vt1 INNER JOIN rt0 ON (((('-807056402')IS NOT(rt0.c0))) IS TRUE) WHERE ((NOT (((((rt0.c4)AND(rt0.c3)))>>(vt1.c0))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c4, t0.c0, rt0.c1, rt0.c2, vt1.c0 FROM t0, vt1 INNER JOIN rt0 ON (((('-807056402')IS NOT(rt0.c0))) IS TRUE) WHERE (((((((rt0.c4)AND(rt0.c3)))>>(vt1.c0))) ISNULL));
SELECT rt0.c3, rt0.c0, rt0.c4, t0.c0, rt0.c1, rt0.c2, vt1.c0 FROM t0, vt1 INNER JOIN rt0 ON (((('-807056402')IS NOT(rt0.c0))) IS TRUE);
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (NULLIF(DISTINCT t0.c0 COLLATE NOCASE, t0.c0)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (NULLIF(DISTINCT t0.c0 COLLATE NOCASE, t0.c0)))) UNION SELECT DISTINCT * FROM t0 WHERE (((NULLIF(DISTINCT t0.c0 COLLATE NOCASE, t0.c0)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 WHERE ((~ (rt0.c2 COLLATE NOCASE))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0 WHERE ((NOT ((~ (rt0.c2 COLLATE NOCASE))))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM rt0 WHERE ((((~ (rt0.c2 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT v0.c2, v0.c0, vt1.c0, v0.c1 FROM rt0, t0, vt1, v0 GROUP BY v0.c2, v0.c0, vt1.c0, v0.c1;
SELECT v0.c2, v0.c0, vt1.c0, v0.c1 FROM rt0, t0, vt1, v0 GROUP BY v0.c2, v0.c0, vt1.c0, v0.c1 HAVING MIN(COUNT(*)) COLLATE NOCASE UNION ALL SELECT v0.c2, v0.c0, vt1.c0, v0.c1 FROM rt0 NOT INDEXED, t0, vt1, v0 GROUP BY v0.c2, v0.c0, vt1.c0, v0.c1 HAVING (NOT (MIN(COUNT(*)) COLLATE NOCASE)) UNION ALL SELECT ALL v0.c2, v0.c0, vt1.c0, v0.c1 FROM rt0, t0, vt1, v0 GROUP BY v0.c2, v0.c0, vt1.c0, v0.c1 HAVING ((MIN(COUNT(*)) COLLATE NOCASE) ISNULL);
SELECT MAX((((0.23799366861886107)) BETWEEN ((((rt0.c2) ISNULL))) AND ((((rt0.c2) NOT BETWEEN (v0.c0) AND (t0.c0)))))) FROM t0, rt0, vt1, v0;
SELECT vt1.c0 FROM vt1, t0;
SELECT ALL vt1.c0 FROM vt1, t0 WHERE ('') UNION ALL SELECT ALL vt1.c0 FROM vt1, t0 WHERE ((NOT (''))) UNION ALL SELECT ALL vt1.c0 FROM vt1, t0 WHERE ((('') ISNULL));
SELECT vt1.c0 FROM vt1, t0;
SELECT DISTINCT * FROM rt0, t0, v0;
SELECT DISTINCT * FROM rt0, t0, v0 WHERE (((((UNLIKELY(v0.c0))AND(((v0.c0)>(rt0.c1)))))AND(('Ak-%O' IN ())))) UNION SELECT DISTINCT * FROM rt0, t0, v0 WHERE ((NOT (((((UNLIKELY(v0.c0))AND(((v0.c0)>(rt0.c1)))))AND(('Ak-%O' IN ())))))) UNION SELECT DISTINCT * FROM rt0, t0, v0 WHERE (((((((UNLIKELY(v0.c0))AND(((v0.c0)>(rt0.c1)))))AND(('Ak-%O' IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0, t0, v0;
SELECT rt0.c1, rt0.c3 FROM v0, rt0, t0 GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c3 FROM v0, rt0, t0 WHERE ('0.5659996236765706') GROUP BY rt0.c1, rt0.c3 UNION SELECT rt0.c1, rt0.c3 FROM v0, rt0, t0 WHERE ((NOT ('0.5659996236765706'))) GROUP BY rt0.c1, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c3 FROM v0, rt0, t0 WHERE ((('0.5659996236765706') ISNULL)) GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c3 FROM v0, rt0, t0 GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c3, rt0.c0, v0.c1, rt0.c2, v0.c0 FROM rt0, t0, v0 GROUP BY rt0.c3, rt0.c0, v0.c1, rt0.c2, v0.c0;
SELECT rt0.c3, rt0.c0, v0.c1, rt0.c2, v0.c0 FROM rt0, t0, v0 GROUP BY rt0.c3, rt0.c0, v0.c1, rt0.c2, v0.c0 HAVING SUM(TOTAL(AVG(AVG(COUNT(TOTAL(rt0.c1)))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, v0.c1, rt0.c2, v0.c0 FROM rt0, t0, v0 GROUP BY rt0.c3, rt0.c0, v0.c1, rt0.c2, v0.c0 HAVING (NOT (SUM(TOTAL(AVG(AVG(COUNT(TOTAL(rt0.c1)))))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, v0.c1, rt0.c2, v0.c0 FROM rt0, t0, v0 GROUP BY rt0.c3, rt0.c0, v0.c1, rt0.c2, v0.c0 HAVING ((SUM(TOTAL(AVG(AVG(COUNT(TOTAL(rt0.c1))))))) ISNULL);
SELECT ALL * FROM t0, v0, vt1, rt0;
SELECT ALL * FROM t0, v0, vt1, rt0 WHERE (TYPEOF(x'' COLLATE NOCASE)) UNION ALL SELECT * FROM t0, v0, vt1, rt0 WHERE ((NOT (TYPEOF(x'' COLLATE NOCASE)))) UNION ALL SELECT ALL * FROM t0, v0, vt1, rt0 WHERE (((TYPEOF(x'' COLLATE NOCASE)) ISNULL));
SELECT ALL * FROM t0, v0, vt1, rt0;
SELECT DISTINCT v0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c1, rt0.c4 FROM v0, t0, rt0;
SELECT DISTINCT v0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c1, rt0.c4 FROM v0, t0, rt0 WHERE (TYPEOF(((v0.c0)<<(v0.c1)))) UNION SELECT DISTINCT v0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c1, rt0.c4 FROM v0, t0, rt0 WHERE ((NOT (TYPEOF(((v0.c0)<<(v0.c1)))))) UNION SELECT DISTINCT v0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c1, rt0.c4 FROM v0, t0, rt0 WHERE (((TYPEOF(((v0.c0)<<(v0.c1)))) ISNULL));
SELECT DISTINCT v0.c2, v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c1, rt0.c4 FROM v0, t0, rt0;
SELECT ALL vt1.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0, rt0.c4 FROM t0, rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0, rt0.c4;
SELECT vt1.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0, rt0.c4 FROM t0, rt0, vt1 WHERE ((rt0.c4 IN ()) COLLATE RTRIM COLLATE RTRIM) GROUP BY vt1.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0, rt0.c4 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0, rt0.c4 FROM t0, rt0, vt1 WHERE ((NOT ((rt0.c4 IN ()) COLLATE RTRIM COLLATE RTRIM))) GROUP BY vt1.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0, rt0.c4 UNION SELECT vt1.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0, rt0.c4 FROM t0, rt0, vt1 WHERE ((((rt0.c4 IN ()) COLLATE RTRIM COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0, rt0.c4;
SELECT ALL vt1.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0, rt0.c4 FROM t0, rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0, rt0.c4;
SELECT t0.c0, v0.c2, v0.c1 FROM v0, t0, vt1 GROUP BY t0.c0, v0.c2, v0.c1;
SELECT t0.c0, v0.c2, v0.c1 FROM v0, t0, vt1 GROUP BY t0.c0, v0.c2, v0.c1 HAVING TOTAL(NULLIF(DISTINCT vt1.c0, v0.c2)) UNION ALL SELECT t0.c0, v0.c2, v0.c1 FROM v0, t0, vt1 GROUP BY t0.c0, v0.c2, v0.c1 HAVING (NOT (TOTAL(NULLIF(DISTINCT vt1.c0, v0.c2)))) UNION ALL SELECT t0.c0, v0.c2, v0.c1 FROM v0, t0, vt1 GROUP BY t0.c0, v0.c2, v0.c1 HAVING ((TOTAL(NULLIF(DISTINCT vt1.c0, v0.c2))) ISNULL);
SELECT t0.c0, v0.c2, v0.c1 FROM v0, t0, vt1 GROUP BY t0.c0, v0.c2, v0.c1;
SELECT t0.c0, v0.c2, v0.c1 FROM v0, t0, vt1 GROUP BY t0.c0, v0.c2, v0.c1 HAVING TOTAL(NULLIF(DISTINCT vt1.c0, v0.c2)) UNION ALL SELECT t0.c0, v0.c2, v0.c1 FROM v0, t0, vt1 GROUP BY t0.c0, v0.c2, v0.c1 HAVING (NOT (TOTAL(NULLIF(DISTINCT vt1.c0, v0.c2)))) UNION ALL SELECT t0.c0, v0.c2, v0.c1 FROM v0, t0, vt1 GROUP BY t0.c0, v0.c2, v0.c1 HAVING ((TOTAL(NULLIF(DISTINCT vt1.c0, v0.c2))) ISNULL);
SELECT t0.c0, v0.c2, v0.c1 FROM v0, t0, vt1 GROUP BY t0.c0, v0.c2, v0.c1;
SELECT ALL * FROM vt1, rt0, t0;
SELECT * FROM vt1, rt0, t0 WHERE ((((((rt0.c1)LIKE(rt0.c3)), PRINTF(rt0.c3), NULL))>=(((((rt0.c1))>=((rt0.c3))), ((rt0.c2) NOT BETWEEN ('-1047638457') AND (rt0.c4)), CASE rt0.c3  WHEN t0.c0 THEN rt0.c1 END)))) UNION ALL SELECT * FROM vt1, rt0, t0 WHERE ((NOT ((((((rt0.c1)LIKE(rt0.c3)), PRINTF(rt0.c3), NULL))>=(((((rt0.c1))>=((rt0.c3))), ((rt0.c2) NOT BETWEEN ('-1047638457') AND (rt0.c4)), CASE rt0.c3  WHEN t0.c0 THEN rt0.c1 END)))))) UNION ALL SELECT * FROM vt1, rt0, t0 WHERE ((((((((rt0.c1)LIKE(rt0.c3)), PRINTF(rt0.c3), NULL))>=(((((rt0.c1))>=((rt0.c3))), ((rt0.c2) NOT BETWEEN ('-1047638457') AND (rt0.c4)), CASE rt0.c3  WHEN t0.c0 THEN rt0.c1 END)))) ISNULL));
SELECT ALL * FROM vt1, rt0, t0;
SELECT DISTINCT rt0.c2, v0.c2, t0.c0, rt0.c4 FROM vt1, t0, v0, rt0;
SELECT DISTINCT rt0.c2, v0.c2, t0.c0, rt0.c4 FROM vt1, t0, v0, rt0 WHERE (((((((rt0.c1)OR(v0.c1)))OR(v0.c2))) NOT NULL)) UNION SELECT DISTINCT rt0.c2, v0.c2, t0.c0, rt0.c4 FROM vt1, t0, v0, rt0 WHERE ((NOT (((((((rt0.c1)OR(v0.c1)))OR(v0.c2))) NOT NULL)))) UNION SELECT DISTINCT rt0.c2, v0.c2, t0.c0, rt0.c4 FROM vt1, t0, v0, rt0 WHERE (((((((((rt0.c1)OR(v0.c1)))OR(v0.c2))) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c2, v0.c2, t0.c0, rt0.c4 FROM vt1, t0, v0, rt0;
SELECT ALL rt0.c2 FROM t0 INNER JOIN rt0 ON rt0.c2 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM t0 INNER JOIN rt0 ON rt0.c2 WHERE ((+ (((rt0.c2) NOT NULL)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM t0 INNER JOIN rt0 ON rt0.c2 WHERE ((NOT ((+ (((rt0.c2) NOT NULL)))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM t0 INNER JOIN rt0 ON rt0.c2 WHERE ((((+ (((rt0.c2) NOT NULL)))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM t0 INNER JOIN rt0 ON rt0.c2 GROUP BY rt0.c2;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0, vt1 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0, vt1 GROUP BY v0.c2, v0.c0, v0.c1 HAVING ((((((((LIKELIHOOD(v0.c0, 0.5471285476732122))AND((((AVG(COUNT(*))))<=((v0.c0))))))AND(AVG(COUNT(vt1.c0)))))AND((TOTAL(MIN(v0.c0)) IN ()))))OR(AVG(MAX(v0.c0)))) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0, vt1 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (NOT (((((((((LIKELIHOOD(v0.c0, 0.5471285476732122))AND((((AVG(COUNT(*))))<=((v0.c0))))))AND(AVG(COUNT(vt1.c0)))))AND((TOTAL(MIN(v0.c0)) IN ()))))OR(AVG(MAX(v0.c0)))))) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0, vt1 GROUP BY v0.c2, v0.c0, v0.c1 HAVING ((((((((((LIKELIHOOD(v0.c0, 0.5471285476732122))AND((((AVG(COUNT(*))))<=((v0.c0))))))AND(AVG(COUNT(vt1.c0)))))AND((TOTAL(MIN(v0.c0)) IN ()))))OR(AVG(MAX(v0.c0))))) ISNULL);
SELECT ALL SUM(rt0.c4) FROM vt1, rt0, t0;
SELECT * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (UNLIKELY(DISTINCT CAST(v0.c1 AS REAL))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (UNLIKELY(DISTINCT CAST(v0.c1 AS REAL))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((UNLIKELY(DISTINCT CAST(v0.c1 AS REAL))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 FULL OUTER JOIN vt1 ON vt1.c0;
SELECT DISTINCT * FROM rt0, v0 FULL OUTER JOIN vt1 ON vt1.c0 WHERE ((('-1645579484') NOTNULL)) UNION SELECT DISTINCT * FROM rt0, v0 FULL OUTER JOIN vt1 ON vt1.c0 WHERE ((NOT ((('-1645579484') NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, v0 FULL OUTER JOIN vt1 ON vt1.c0 WHERE ((((('-1645579484') NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, v0 FULL OUTER JOIN vt1 ON vt1.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (LIKELIHOOD((((v0.c0))<((v0.c0))), 0.7929344865633862)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (LIKELIHOOD((((v0.c0))<((v0.c0))), 0.7929344865633862)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((LIKELIHOOD((((v0.c0))<((v0.c0))), 0.7929344865633862)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING MAX(SUM(rt0.c2)) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING (NOT (MAX(SUM(rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING ((MAX(SUM(rt0.c2))) ISNULL);
SELECT v0.c2, rt0.c3 FROM rt0, t0, v0;
SELECT v0.c2, rt0.c3 FROM rt0, t0, v0 WHERE ((NOT ((t0.c0 IN ())))) UNION ALL SELECT ALL v0.c2, rt0.c3 FROM rt0, t0, v0 WHERE ((NOT ((NOT ((t0.c0 IN ())))))) UNION ALL SELECT v0.c2, rt0.c3 FROM rt0, t0, v0 WHERE ((((NOT ((t0.c0 IN ())))) ISNULL));
SELECT v0.c2, rt0.c3 FROM rt0, t0, v0;
SELECT DISTINCT v0.c1, rt0.c3, v0.c2, rt0.c2, rt0.c4 FROM vt1, v0 RIGHT OUTER JOIN rt0 ON ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY;
SELECT DISTINCT v0.c1, rt0.c3, v0.c2, rt0.c2, rt0.c4 FROM vt1, v0 RIGHT OUTER JOIN rt0 ON ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY WHERE (CAST(((v0.c0) BETWEEN (x'') AND (rt0.c4)) AS NUMERIC)) UNION SELECT DISTINCT v0.c1, rt0.c3, v0.c2, rt0.c2, rt0.c4 FROM vt1, v0 RIGHT OUTER JOIN rt0 ON ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY WHERE ((NOT (CAST(((v0.c0) BETWEEN (x'') AND (rt0.c4)) AS NUMERIC)))) UNION SELECT DISTINCT v0.c1, rt0.c3, v0.c2, rt0.c2, rt0.c4 FROM vt1, v0 RIGHT OUTER JOIN rt0 ON ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY WHERE (((CAST(((v0.c0) BETWEEN (x'') AND (rt0.c4)) AS NUMERIC)) ISNULL));
SELECT DISTINCT v0.c1, rt0.c3, v0.c2, rt0.c2, rt0.c4 FROM vt1, v0 RIGHT OUTER JOIN rt0 ON ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 WHERE ((v0.c1 COLLATE NOCASE IN ())) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT v0.c1, v0.c2, v0.c0 FROM v0 WHERE ((NOT ((v0.c1 COLLATE NOCASE IN ())))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT v0.c1, v0.c2, v0.c0 FROM v0 WHERE ((((v0.c1 COLLATE NOCASE IN ())) ISNULL)) GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING SUM(0.06686615452276401) UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING (NOT (SUM(0.06686615452276401))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING ((SUM(0.06686615452276401)) ISNULL);
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING SUM(0.06686615452276401) UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING (NOT (SUM(0.06686615452276401))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING ((SUM(0.06686615452276401)) ISNULL);
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT ALL v0.c1, vt1.c0, rt0.c1, rt0.c0, v0.c2, t0.c0, v0.c0 FROM vt1, rt0, v0, t0;
SELECT v0.c1, vt1.c0, rt0.c1, rt0.c0, v0.c2, t0.c0, v0.c0 FROM vt1, rt0, v0, t0 WHERE (((CASE WHEN rt0.c0 THEN v0.c0 END) NOT BETWEEN (((NULL) IS TRUE)) AND (NULLIF(DISTINCT rt0.c0, rt0.c2)))) UNION ALL SELECT ALL v0.c1, vt1.c0, rt0.c1, rt0.c0, v0.c2, t0.c0, v0.c0 FROM vt1, rt0, v0, t0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN v0.c0 END) NOT BETWEEN (((NULL) IS TRUE)) AND (NULLIF(DISTINCT rt0.c0, rt0.c2)))))) UNION ALL SELECT ALL v0.c1, vt1.c0, rt0.c1, rt0.c0, v0.c2, t0.c0, v0.c0 FROM vt1, rt0, v0, t0 WHERE (((((CASE WHEN rt0.c0 THEN v0.c0 END) NOT BETWEEN (((NULL) IS TRUE)) AND (NULLIF(DISTINCT rt0.c0, rt0.c2)))) ISNULL));
SELECT ALL v0.c1, vt1.c0, rt0.c1, rt0.c0, v0.c2, t0.c0, v0.c0 FROM vt1, rt0, v0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ('589165099') UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ('589165099'))) UNION SELECT DISTINCT * FROM t0 WHERE ((('589165099') ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL v0.c0, rt0.c2, rt0.c4, t0.c0, rt0.c0, vt1.c0, v0.c2 FROM vt1, rt0, v0, t0 GROUP BY v0.c0, rt0.c2, rt0.c4, t0.c0, rt0.c0, vt1.c0, v0.c2;
SELECT v0.c0, rt0.c2, rt0.c4, t0.c0, rt0.c0, vt1.c0, v0.c2 FROM vt1, rt0, v0, t0 WHERE (0.6027443269010672) GROUP BY v0.c0, rt0.c2, rt0.c4, t0.c0, rt0.c0, vt1.c0, v0.c2 UNION SELECT ALL v0.c0, rt0.c2, rt0.c4, t0.c0, rt0.c0, vt1.c0, v0.c2 FROM vt1, rt0, v0, t0 WHERE ((NOT (0.6027443269010672))) GROUP BY v0.c0, rt0.c2, rt0.c4, t0.c0, rt0.c0, vt1.c0, v0.c2 UNION SELECT ALL v0.c0, rt0.c2, rt0.c4, t0.c0, rt0.c0, vt1.c0, v0.c2 FROM vt1, rt0, v0, t0 WHERE (((0.6027443269010672) ISNULL)) GROUP BY v0.c0, rt0.c2, rt0.c4, t0.c0, rt0.c0, vt1.c0, v0.c2;
SELECT ALL v0.c0, rt0.c2, rt0.c4, t0.c0, rt0.c0, vt1.c0, v0.c2 FROM vt1, rt0, v0, t0 GROUP BY v0.c0, rt0.c2, rt0.c4, t0.c0, rt0.c0, vt1.c0, v0.c2;
SELECT ALL v0.c1, rt0.c0, rt0.c1, rt0.c2 FROM v0, t0, rt0 GROUP BY v0.c1, rt0.c0, rt0.c1, rt0.c2;
SELECT v0.c1, rt0.c0, rt0.c1, rt0.c2 FROM v0, t0, rt0 GROUP BY v0.c1, rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(((rt0.c0)|(rt0.c1))) UNION ALL SELECT ALL v0.c1, rt0.c0, rt0.c1, rt0.c2 FROM v0, t0, rt0 GROUP BY v0.c1, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(((rt0.c0)|(rt0.c1))))) UNION ALL SELECT v0.c1, rt0.c0, rt0.c1, rt0.c2 FROM v0, t0, rt0 GROUP BY v0.c1, rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(((rt0.c0)|(rt0.c1)))) ISNULL);
SELECT ALL v0.c1, rt0.c0, rt0.c1, rt0.c2 FROM v0, t0, rt0 GROUP BY v0.c1, rt0.c0, rt0.c1, rt0.c2;
SELECT v0.c1, rt0.c0, rt0.c1, rt0.c2 FROM v0, t0, rt0 GROUP BY v0.c1, rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(((rt0.c0)|(rt0.c1))) UNION ALL SELECT ALL v0.c1, rt0.c0, rt0.c1, rt0.c2 FROM v0, t0, rt0 GROUP BY v0.c1, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(((rt0.c0)|(rt0.c1))))) UNION ALL SELECT v0.c1, rt0.c0, rt0.c1, rt0.c2 FROM v0, t0, rt0 GROUP BY v0.c1, rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(((rt0.c0)|(rt0.c1)))) ISNULL);
SELECT ALL v0.c1, rt0.c0, rt0.c1, rt0.c2 FROM v0, t0, rt0 GROUP BY v0.c1, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE ((((((('^]*鳕J')AND(rt0.c0)))AND(rt0.c3)))LIKE(((rt0.c1) IS TRUE)))) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT ((((((('^]*鳕J')AND(rt0.c0)))AND(rt0.c3)))LIKE(((rt0.c1) IS TRUE)))))) UNION ALL SELECT * FROM rt0, t0 WHERE ((((((((('^]*鳕J')AND(rt0.c0)))AND(rt0.c3)))LIKE(((rt0.c1) IS TRUE)))) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (json_quote(NULL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (json_quote(NULL)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((json_quote(NULL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT v0.c1, v0.c2 FROM v0, vt1 GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0, vt1 WHERE (((((v0.c0) IS FALSE)) BETWEEN (vt1.c0 COLLATE BINARY) AND (v0.c0 COLLATE NOCASE))) GROUP BY v0.c1, v0.c2 UNION SELECT ALL v0.c1, v0.c2 FROM v0, vt1 WHERE ((NOT (((((v0.c0) IS FALSE)) BETWEEN (vt1.c0 COLLATE BINARY) AND (v0.c0 COLLATE NOCASE))))) GROUP BY v0.c1, v0.c2 UNION SELECT ALL v0.c1, v0.c2 FROM v0, vt1 WHERE (((((((v0.c0) IS FALSE)) BETWEEN (vt1.c0 COLLATE BINARY) AND (v0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0, vt1 GROUP BY v0.c1, v0.c2;
SELECT v0.c0, vt1.c0, v0.c2 FROM vt1, v0 GROUP BY v0.c0, vt1.c0, v0.c2;
SELECT v0.c0, vt1.c0, v0.c2 FROM vt1, v0 GROUP BY v0.c0, vt1.c0, v0.c2 HAVING COUNT(COUNT(v0.c0)) UNION ALL SELECT v0.c0, vt1.c0, v0.c2 FROM vt1, v0 GROUP BY v0.c0, vt1.c0, v0.c2 HAVING (NOT (COUNT(COUNT(v0.c0)))) UNION ALL SELECT ALL v0.c0, vt1.c0, v0.c2 FROM vt1, v0 GROUP BY v0.c0, vt1.c0, v0.c2 HAVING ((COUNT(COUNT(v0.c0))) ISNULL);
SELECT ALL v0.c0 FROM t0, v0;
SELECT v0.c0 FROM t0, v0 WHERE ((((v0.c1))<=((v0.c1))) COLLATE RTRIM) UNION ALL SELECT ALL v0.c0 FROM t0, v0 WHERE ((NOT ((((v0.c1))<=((v0.c1))) COLLATE RTRIM))) UNION ALL SELECT ALL v0.c0 FROM t0, v0 WHERE ((((((v0.c1))<=((v0.c1))) COLLATE RTRIM) ISNULL));
SELECT ALL v0.c0 FROM t0, v0;
SELECT DISTINCT * FROM v0, vt1, t0;
SELECT DISTINCT * FROM v0, vt1, t0 WHERE ((((((((vt1.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))))AND(((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((v0.c2) NOTNULL)))) UNION SELECT DISTINCT * FROM v0, vt1, t0 WHERE ((NOT ((((((((vt1.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))))AND(((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((v0.c2) NOTNULL)))))) UNION SELECT DISTINCT * FROM v0 NOT INDEXED, vt1, t0 WHERE ((((((((((vt1.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))))AND(((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((v0.c2) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM v0, vt1, t0;
SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c3, vt1.c0, rt0.c4, v0.c2, rt0.c0, v0.c0, v0.c1 FROM v0, t0, rt0, vt1 GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c3, vt1.c0, rt0.c4, v0.c2, rt0.c0, v0.c0, v0.c1;
SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c3, vt1.c0, rt0.c4, v0.c2, rt0.c0, v0.c0, v0.c1 FROM v0, t0, rt0, vt1 NOT INDEXED WHERE (CASE (~ (t0.c0))  WHEN x'98df' THEN (rt0.c4 IN ()) WHEN ((rt0.c2)<=(v0.c0)) THEN 0.6929552096280854 WHEN vt1.c0 THEN ((((((((rt0.c1)OR(rt0.c3)))AND('Pk!{c┛KN')))OR(v0.c1)))OR(v0.c0)) ELSE (- (rt0.c2)) END) GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c3, vt1.c0, rt0.c4, v0.c2, rt0.c0, v0.c0, v0.c1 UNION SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c3, vt1.c0, rt0.c4, v0.c2, rt0.c0, v0.c0, v0.c1 FROM v0, t0, rt0, vt1 WHERE ((NOT (CASE (~ (t0.c0))  WHEN x'98df' THEN (rt0.c4 IN ()) WHEN ((rt0.c2)<=(v0.c0)) THEN 0.6929552096280854 WHEN vt1.c0 THEN ((((((((rt0.c1)OR(rt0.c3)))AND('Pk!{c┛KN')))OR(v0.c1)))OR(v0.c0)) ELSE (- (rt0.c2)) END))) GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c3, vt1.c0, rt0.c4, v0.c2, rt0.c0, v0.c0, v0.c1 UNION SELECT rt0.c1, t0.c0, rt0.c2, rt0.c3, vt1.c0, rt0.c4, v0.c2, rt0.c0, v0.c0, v0.c1 FROM v0, t0 NOT INDEXED, rt0, vt1 WHERE (((CASE (~ (t0.c0))  WHEN x'98df' THEN (rt0.c4 IN ()) WHEN ((rt0.c2)<=(v0.c0)) THEN 0.6929552096280854 WHEN vt1.c0 THEN ((((((((rt0.c1)OR(rt0.c3)))AND('Pk!{c┛KN')))OR(v0.c1)))OR(v0.c0)) ELSE (- (rt0.c2)) END) ISNULL)) GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c3, vt1.c0, rt0.c4, v0.c2, rt0.c0, v0.c0, v0.c1;
SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c3, vt1.c0, rt0.c4, v0.c2, rt0.c0, v0.c0, v0.c1 FROM v0, t0, rt0, vt1 GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c3, vt1.c0, rt0.c4, v0.c2, rt0.c0, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c0, v0.c1, t0.c0;
SELECT ALL v0.c2, v0.c0, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c0, v0.c1, t0.c0 HAVING COUNT((((MAX(v0.c2)))<=((SUM(t0.c0))))) UNION ALL SELECT v0.c2, v0.c0, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c0, v0.c1, t0.c0 HAVING (NOT (COUNT((((MAX(v0.c2)))<=((SUM(t0.c0))))))) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c0, v0.c1, t0.c0 HAVING ((COUNT((((MAX(v0.c2)))<=((SUM(t0.c0)))))) ISNULL);
SELECT ALL rt0.c3 FROM rt0 NATURAL JOIN v0;
SELECT ALL rt0.c3 FROM rt0 NATURAL JOIN v0 WHERE (((((((((CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c3 THEN v0.c0 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)OR(((rt0.c0)%(v0.c0)))))AND(v0.c1 COLLATE RTRIM)))AND(((v0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)))))OR(((NULL)*(rt0.c2))))) UNION ALL SELECT ALL rt0.c3 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (((((((((CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c3 THEN v0.c0 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)OR(((rt0.c0)%(v0.c0)))))AND(v0.c1 COLLATE RTRIM)))AND(((v0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)))))OR(((NULL)*(rt0.c2))))))) UNION ALL SELECT ALL rt0.c3 FROM rt0 NATURAL JOIN v0 WHERE (((((((((((CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c3 THEN v0.c0 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)OR(((rt0.c0)%(v0.c0)))))AND(v0.c1 COLLATE RTRIM)))AND(((v0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)))))OR(((NULL)*(rt0.c2))))) ISNULL));
SELECT ALL rt0.c3 FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0 IN ()))IS(t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0 IN ()))IS(t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0 IN ()))IS(t0.c0))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c4, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, v0.c2 FROM rt0, v0, t0, vt1 GROUP BY rt0.c4, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, v0.c2;
SELECT rt0.c4, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, v0.c2 FROM rt0, v0, t0, vt1 GROUP BY rt0.c4, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, v0.c2 HAVING MAX(0.01801551053026096) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, v0.c2 FROM rt0, v0, t0, vt1 GROUP BY rt0.c4, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, v0.c2 HAVING (NOT (MAX(0.01801551053026096))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, v0.c2 FROM rt0, v0, t0, vt1 GROUP BY rt0.c4, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, v0.c2 HAVING ((MAX(0.01801551053026096)) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, v0.c2 FROM rt0, v0, t0, vt1 GROUP BY rt0.c4, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, v0.c2;
SELECT rt0.c4, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, v0.c2 FROM rt0, v0, t0, vt1 GROUP BY rt0.c4, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, v0.c2 HAVING MAX(0.01801551053026096) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, v0.c2 FROM rt0, v0, t0, vt1 GROUP BY rt0.c4, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, v0.c2 HAVING (NOT (MAX(0.01801551053026096))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, v0.c2 FROM rt0, v0, t0, vt1 GROUP BY rt0.c4, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, v0.c2 HAVING ((MAX(0.01801551053026096)) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, v0.c2 FROM rt0, v0, t0, vt1 GROUP BY rt0.c4, rt0.c1, rt0.c3, t0.c0, v0.c1, rt0.c0, v0.c2;
SELECT * FROM v0, t0;
SELECT * FROM v0 NOT INDEXED, t0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM v0, t0 WHERE (((v0.c0) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT * FROM rt0, t0 FULL OUTER JOIN v0 ON (((((rt0.c1)>(x''))))=((((((t0.c0)AND(vt1.c0)))AND(v0.c0))))) FULL OUTER JOIN vt1 ON CASE t0.c0  WHEN v0.c1 THEN rt0.c0 ELSE rt0.c3 END COLLATE BINARY;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 WHERE ((((v0.c2 IN (v0.c0)))IS(v0.c2))) GROUP BY v0.c2, v0.c1, v0.c0 UNION SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 WHERE ((NOT ((((v0.c2 IN (v0.c0)))IS(v0.c2))))) GROUP BY v0.c2, v0.c1, v0.c0 UNION SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 WHERE ((((((v0.c2 IN (v0.c0)))IS(v0.c2))) ISNULL)) GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c0 FROM rt0, t0, v0, vt1 GROUP BY v0.c0;
SELECT v0.c0 FROM rt0, t0, v0, vt1 GROUP BY v0.c0 HAVING GROUP_CONCAT(t0.c0 COLLATE NOCASE) UNION ALL SELECT ALL v0.c0 FROM rt0, t0, v0, vt1 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(t0.c0 COLLATE NOCASE))) UNION ALL SELECT v0.c0 FROM rt0, t0, v0, vt1 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(t0.c0 COLLATE NOCASE)) ISNULL);
SELECT ALL v0.c0 FROM rt0, t0, v0, vt1 GROUP BY v0.c0;
SELECT v0.c0 FROM rt0, t0, v0, vt1 GROUP BY v0.c0 HAVING GROUP_CONCAT(t0.c0 COLLATE NOCASE) UNION ALL SELECT ALL v0.c0 FROM rt0, t0, v0, vt1 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(t0.c0 COLLATE NOCASE))) UNION ALL SELECT v0.c0 FROM rt0, t0, v0, vt1 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(t0.c0 COLLATE NOCASE)) ISNULL);
SELECT ALL v0.c0 FROM rt0, t0, v0, vt1 GROUP BY v0.c0;
SELECT ALL rt0.c4, rt0.c0, v0.c2 FROM t0, v0, vt1 NATURAL JOIN rt0;
SELECT ALL rt0.c4, rt0.c0, v0.c2 FROM t0, v0, vt1 NATURAL JOIN rt0 WHERE ((((((v0.c1)<<(rt0.c3))))>=((((vt1.c0)%(rt0.c0)))))) UNION ALL SELECT rt0.c4, rt0.c0, v0.c2 FROM t0, v0, vt1 NATURAL JOIN rt0 WHERE ((NOT ((((((v0.c1)<<(rt0.c3))))>=((((vt1.c0)%(rt0.c0)))))))) UNION ALL SELECT rt0.c4, rt0.c0, v0.c2 FROM t0, v0, vt1 NATURAL JOIN rt0 WHERE ((((((((v0.c1)<<(rt0.c3))))>=((((vt1.c0)%(rt0.c0)))))) ISNULL));
SELECT ALL rt0.c4, rt0.c0, v0.c2 FROM t0, v0, vt1 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt1, t0, v0, rt0;
SELECT DISTINCT * FROM vt1, t0, v0, rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM vt1, t0, v0, rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM vt1, t0, v0, rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM vt1, t0, v0, rt0;
SELECT v0.c1, v0.c2 FROM v0, t0 GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0, t0 WHERE ((((v0.c2)<=(t0.c0)) IN (v0.c0))) GROUP BY v0.c1, v0.c2 UNION SELECT v0.c1, v0.c2 FROM v0, t0 WHERE ((NOT ((((v0.c2)<=(t0.c0)) IN (v0.c0))))) GROUP BY v0.c1, v0.c2 UNION SELECT ALL v0.c1, v0.c2 FROM v0, t0 WHERE ((((((v0.c2)<=(t0.c0)) IN (v0.c0))) ISNULL)) GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0, t0 GROUP BY v0.c1, v0.c2;
SELECT ALL t0.c0, v0.c2, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c1;
SELECT t0.c0, v0.c2, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c1 HAVING v0.c1 UNION ALL SELECT t0.c0, v0.c2, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c1 HAVING (NOT (v0.c1)) UNION ALL SELECT t0.c0, v0.c2, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c1 HAVING ((v0.c1) ISNULL);
SELECT ALL t0.c0, v0.c2, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c1;
SELECT t0.c0, v0.c2, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c1 HAVING v0.c1 UNION ALL SELECT t0.c0, v0.c2, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c1 HAVING (NOT (v0.c1)) UNION ALL SELECT t0.c0, v0.c2, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c1 HAVING ((v0.c1) ISNULL);
SELECT ALL t0.c0, v0.c2, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c1;
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE ((~ (CAST(rt0.c3 AS REAL)))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT ((~ (CAST(rt0.c3 AS REAL)))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((((~ (CAST(rt0.c3 AS REAL)))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE (((((rt0.c2)==(rt0.c1)))IS NOT(UNLIKELY(DISTINCT rt0.c3)))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2)=(rt0.c1)))IS NOT(UNLIKELY(DISTINCT rt0.c3)))))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE (((((((rt0.c2)=(rt0.c1)))IS NOT(UNLIKELY(DISTINCT rt0.c3)))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0;
SELECT rt0.c1, v0.c0, rt0.c4, v0.c1, rt0.c2, rt0.c3, rt0.c0, vt1.c0 FROM t0 RIGHT OUTER JOIN v0 ON (NOT (v0.c2)) CROSS JOIN rt0 ON t0.c0 INNER JOIN vt1 ON ((UNICODE('CFdR'))!=(((v0.c2)+(v0.c0)))) GROUP BY rt0.c1, v0.c0, rt0.c4, v0.c1, rt0.c2, rt0.c3, rt0.c0, vt1.c0;
SELECT ALL rt0.c1, v0.c0, rt0.c4, v0.c1, rt0.c2, rt0.c3, rt0.c0, vt1.c0 FROM t0 RIGHT OUTER JOIN v0 ON (NOT (v0.c2)) CROSS JOIN rt0 ON t0.c0 INNER JOIN vt1 ON ((UNICODE('CFdR'))!=(((v0.c2)+(v0.c0)))) WHERE (CAST(CAST(v0.c1 AS TEXT) AS BLOB)) GROUP BY rt0.c1, v0.c0, rt0.c4, v0.c1, rt0.c2, rt0.c3, rt0.c0, vt1.c0 UNION SELECT ALL rt0.c1, v0.c0, rt0.c4, v0.c1, rt0.c2, rt0.c3, rt0.c0, vt1.c0 FROM t0 RIGHT OUTER JOIN v0 ON (NOT (v0.c2)) CROSS JOIN rt0 ON t0.c0 INNER JOIN vt1 ON ((UNICODE('CFdR'))<>(((v0.c2)+(v0.c0)))) WHERE ((NOT (CAST(CAST(v0.c1 AS TEXT) AS BLOB)))) GROUP BY rt0.c1, v0.c0, rt0.c4, v0.c1, rt0.c2, rt0.c3, rt0.c0, vt1.c0 UNION SELECT ALL rt0.c1, v0.c0, rt0.c4, v0.c1, rt0.c2, rt0.c3, rt0.c0, vt1.c0 FROM t0 RIGHT OUTER JOIN v0 ON (NOT (v0.c2)) CROSS JOIN rt0 ON t0.c0 INNER JOIN vt1 ON ((UNICODE('CFdR'))<>(((v0.c2)+(v0.c0)))) WHERE (((CAST(CAST(v0.c1 AS TEXT) AS BLOB)) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c4, v0.c1, rt0.c2, rt0.c3, rt0.c0, vt1.c0;
SELECT rt0.c1, v0.c0, rt0.c4, v0.c1, rt0.c2, rt0.c3, rt0.c0, vt1.c0 FROM t0 RIGHT OUTER JOIN v0 ON (NOT (v0.c2)) CROSS JOIN rt0 ON t0.c0 INNER JOIN vt1 ON ((UNICODE('CFdR'))!=(((v0.c2)+(v0.c0)))) GROUP BY rt0.c1, v0.c0, rt0.c4, v0.c1, rt0.c2, rt0.c3, rt0.c0, vt1.c0;
SELECT ALL v0.c0 FROM rt0, vt1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0, vt1, v0 GROUP BY v0.c0 HAVING (~ (CASE AVG(rt0.c3)  WHEN COUNT(*) THEN v0.c0 ELSE rt0.c1 END)) UNION ALL SELECT v0.c0 FROM rt0, vt1, v0 GROUP BY v0.c0 HAVING (NOT ((~ (CASE AVG(rt0.c3)  WHEN COUNT(*) THEN v0.c0 ELSE rt0.c1 END)))) UNION ALL SELECT v0.c0 FROM rt0 NOT INDEXED, vt1, v0 GROUP BY v0.c0 HAVING (((~ (CASE AVG(rt0.c3)  WHEN COUNT(*) THEN v0.c0 ELSE rt0.c1 END))) ISNULL);
SELECT ALL v0.c0 FROM rt0, vt1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0, vt1, v0 GROUP BY v0.c0 HAVING (~ (CASE AVG(rt0.c3)  WHEN COUNT(*) THEN v0.c0 ELSE rt0.c1 END)) UNION ALL SELECT v0.c0 FROM rt0, vt1, v0 GROUP BY v0.c0 HAVING (NOT ((~ (CASE AVG(rt0.c3)  WHEN COUNT(*) THEN v0.c0 ELSE rt0.c1 END)))) UNION ALL SELECT v0.c0 FROM rt0 NOT INDEXED, vt1, v0 GROUP BY v0.c0 HAVING (((~ (CASE AVG(rt0.c3)  WHEN COUNT(*) THEN v0.c0 ELSE rt0.c1 END))) ISNULL);
SELECT ALL v0.c0 FROM rt0, vt1, v0 GROUP BY v0.c0;
SELECT * FROM rt0, t0 RIGHT OUTER JOIN vt1 ON CAST(((rt0.c1)>=(vt1.c0)) AS REAL) RIGHT OUTER JOIN v0 ON rt0.c3;
SELECT * FROM rt0, t0 RIGHT OUTER JOIN vt1 ON CAST(((rt0.c1)>=(vt1.c0)) AS REAL) RIGHT OUTER JOIN v0 ON rt0.c3 WHERE (((((((rt0.c1)OR(v0.c1)))AND(v0.c1)))<(CAST('' AS INTEGER)))) UNION ALL SELECT * FROM rt0, t0 RIGHT OUTER JOIN vt1 ON CAST(((rt0.c1)>=(vt1.c0)) AS REAL) RIGHT OUTER JOIN v0 ON rt0.c3 WHERE ((NOT (((((((rt0.c1)OR(v0.c1)))AND(v0.c1)))<(CAST('' AS INTEGER)))))) UNION ALL SELECT ALL * FROM rt0, t0 RIGHT OUTER JOIN vt1 ON CAST(((rt0.c1)>=(vt1.c0)) AS REAL) RIGHT OUTER JOIN v0 ON rt0.c3 WHERE (((((((((rt0.c1)OR(v0.c1)))AND(v0.c1)))<(CAST('' AS INTEGER)))) ISNULL));
SELECT * FROM rt0, t0 RIGHT OUTER JOIN vt1 ON CAST(((rt0.c1)>=(vt1.c0)) AS REAL) RIGHT OUTER JOIN v0 ON rt0.c3;
SELECT DISTINCT * FROM vt1, rt0, v0, t0 NOT INDEXED;
SELECT DISTINCT * FROM vt1, rt0, v0, t0 WHERE ((((- (v0.c2))) IS FALSE)) UNION SELECT DISTINCT * FROM vt1, rt0, v0, t0 WHERE ((NOT ((((- (v0.c2))) IS FALSE)))) UNION SELECT DISTINCT * FROM vt1, rt0, v0, t0 WHERE ((((((- (v0.c2))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, v0, t0 NOT INDEXED;
SELECT rt0.c0, t0.c0, rt0.c2, rt0.c4, rt0.c1, vt1.c0, rt0.c3 FROM t0 NOT INDEXED, vt1, rt0 GROUP BY rt0.c0, t0.c0, rt0.c2, rt0.c4, rt0.c1, vt1.c0, rt0.c3;
SELECT ALL rt0.c0, t0.c0, rt0.c2, rt0.c4, rt0.c1, vt1.c0, rt0.c3 FROM t0, vt1, rt0 WHERE (ABS(DISTINCT CAST(rt0.c4 AS BLOB))) GROUP BY rt0.c0, t0.c0, rt0.c2, rt0.c4, rt0.c1, vt1.c0, rt0.c3 UNION SELECT ALL rt0.c0, t0.c0, rt0.c2, rt0.c4, rt0.c1, vt1.c0, rt0.c3 FROM t0, vt1, rt0 WHERE ((NOT (ABS(DISTINCT CAST(rt0.c4 AS BLOB))))) GROUP BY rt0.c0, t0.c0, rt0.c2, rt0.c4, rt0.c1, vt1.c0, rt0.c3 UNION SELECT ALL rt0.c0, t0.c0, rt0.c2, rt0.c4, rt0.c1, vt1.c0, rt0.c3 FROM t0, vt1, rt0 WHERE (((ABS(DISTINCT CAST(rt0.c4 AS BLOB))) ISNULL)) GROUP BY rt0.c0, t0.c0, rt0.c2, rt0.c4, rt0.c1, vt1.c0, rt0.c3;
SELECT rt0.c0, t0.c0, rt0.c2, rt0.c4, rt0.c1, vt1.c0, rt0.c3 FROM t0 NOT INDEXED, vt1, rt0 GROUP BY rt0.c0, t0.c0, rt0.c2, rt0.c4, rt0.c1, vt1.c0, rt0.c3;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(MAX(COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(MAX(COUNT(*))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(MAX(COUNT(*)))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((ABS(vt1.c0), (vt1.c0 IN ()), 'ai\r-ukO\r')) AND ((vt1.c0 COLLATE BINARY, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)>(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((ABS(vt1.c0), (vt1.c0 IN ()), 'ai\r-ukO\r')) AND ((vt1.c0 COLLATE BINARY, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)>(vt1.c0)))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((ABS(vt1.c0), (vt1.c0 IN ()), 'ai\r-ukO\r')) AND ((vt1.c0 COLLATE BINARY, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)>(vt1.c0)))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR((vt1.c0 IN ()))))AND(CAST(vt1.c0 AS TEXT))))OR(((vt1.c0) ISNULL))))AND(((vt1.c0)<(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((((((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR((vt1.c0 IN ()))))AND(CAST(vt1.c0 AS TEXT))))OR(((vt1.c0) ISNULL))))AND(((vt1.c0)<(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((((((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR((vt1.c0 IN ()))))AND(CAST(vt1.c0 AS TEXT))))OR(((vt1.c0) ISNULL))))AND(((vt1.c0)<(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0, v0.c2, v0.c0, v0.c1 FROM vt1, v0 GROUP BY vt1.c0, v0.c2, v0.c0, v0.c1;
SELECT ALL vt1.c0, v0.c2, v0.c0, v0.c1 FROM vt1, v0 WHERE (CASE WHEN ((v0.c2)<>(v0.c0)) THEN ((v0.c2) NOT NULL) ELSE v0.c1 COLLATE NOCASE END) GROUP BY vt1.c0, v0.c2, v0.c0, v0.c1 UNION SELECT ALL vt1.c0, v0.c2, v0.c0, v0.c1 FROM vt1, v0 WHERE ((NOT (CASE WHEN ((v0.c2)<>(v0.c0)) THEN ((v0.c2) NOT NULL) ELSE v0.c1 COLLATE NOCASE END))) GROUP BY vt1.c0, v0.c2, v0.c0, v0.c1 UNION SELECT ALL vt1.c0, v0.c2, v0.c0, v0.c1 FROM vt1, v0 WHERE (((CASE WHEN ((v0.c2)<>(v0.c0)) THEN ((v0.c2) NOT NULL) ELSE v0.c1 COLLATE NOCASE END) ISNULL)) GROUP BY vt1.c0, v0.c2, v0.c0, v0.c1;
SELECT vt1.c0, v0.c2, v0.c0, v0.c1 FROM vt1, v0 GROUP BY vt1.c0, v0.c2, v0.c0, v0.c1;
SELECT rt0.c4, v0.c0, rt0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON CAST(rt0.c4 AS BLOB) GROUP BY rt0.c4, v0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c4, v0.c0, rt0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON CAST(rt0.c4 AS BLOB) GROUP BY rt0.c4, v0.c0, rt0.c0, rt0.c1 HAVING MAX(MIN(-1924212018)) UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON CAST(rt0.c4 AS BLOB) GROUP BY rt0.c4, v0.c0, rt0.c0, rt0.c1 HAVING (NOT (MAX(MIN(-1924212018)))) UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON CAST(rt0.c4 AS BLOB) GROUP BY rt0.c4, v0.c0, rt0.c0, rt0.c1 HAVING ((MAX(MIN(-1924212018))) ISNULL);
SELECT t0.c0, v0.c2, v0.c1, v0.c0 FROM t0 NATURAL JOIN v0;
SELECT ALL t0.c0, v0.c2, v0.c1, v0.c0 FROM t0 NATURAL JOIN v0 WHERE ((((CASE v0.c0  WHEN v0.c2 THEN v0.c0 END))>=(('-1517414006')))) UNION ALL SELECT ALL t0.c0, v0.c2, v0.c1, v0.c0 FROM t0 NATURAL JOIN v0 WHERE ((NOT ((((CASE v0.c0  WHEN v0.c2 THEN v0.c0 END))>=(('-1517414006')))))) UNION ALL SELECT t0.c0, v0.c2, v0.c1, v0.c0 FROM t0 NATURAL JOIN v0 WHERE ((((((CASE v0.c0  WHEN v0.c2 THEN v0.c0 END))>=(('-1517414006')))) ISNULL));
SELECT t0.c0, v0.c2, v0.c1, v0.c0 FROM t0 NATURAL JOIN v0;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE (((((((((((((((vt1.c0)AND(vt1.c0)))AND(t0.c0)))OR(t0.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(x'4b8f'))) NOT NULL)) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT (((((((((((((((vt1.c0)AND(vt1.c0)))AND(t0.c0)))OR(t0.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(x'4b8f'))) NOT NULL)))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE (((((((((((((((((vt1.c0)AND(vt1.c0)))AND(t0.c0)))OR(t0.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(x'4b8f'))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c4)) NOT BETWEEN ((-864646453)) AND ((rt0.c2)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c4)) NOT BETWEEN ((-864646453)) AND ((rt0.c2)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c4)) NOT BETWEEN ((-864646453)) AND ((rt0.c2)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c4, v0.c1, vt1.c0, v0.c2, rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c3 FROM vt1 CROSS JOIN v0 ON CASE CASE v0.c1  WHEN rt0.c4 THEN v0.c2 ELSE v0.c0 END  WHEN ((rt0.c0)/(x'')) THEN LIKE(rt0.c2, v0.c1, '?') WHEN ((v0.c0)IS(rt0.c3)) THEN ((((rt0.c4)AND(v0.c2)))AND(rt0.c2)) WHEN (('6OT?oRL㧙')>=(vt1.c0)) THEN (rt0.c0 IN ()) END FULL OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((((v0.c2)AND(v0.c0)))) AND ((((((rt0.c1)OR(rt0.c3)))AND(rt0.c3))))) GROUP BY rt0.c4, v0.c1, vt1.c0, v0.c2, rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c3;
SELECT * FROM rt0, vt1, t0;
SELECT ALL * FROM rt0, vt1, t0 WHERE ((((rt0.c3 IN ())) BETWEEN (rt0.c4) AND (((rt0.c3)%(vt1.c0))))) UNION ALL SELECT * FROM rt0, vt1, t0 WHERE ((NOT ((((rt0.c3 IN ())) BETWEEN (rt0.c4) AND (((rt0.c3)%(vt1.c0))))))) UNION ALL SELECT ALL * FROM rt0, vt1, t0 WHERE ((((((rt0.c3 IN ())) BETWEEN (rt0.c4) AND (((rt0.c3)%(vt1.c0))))) ISNULL));
SELECT * FROM rt0, vt1, t0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT v0.c2 FROM t0 INNER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC)) IS FALSE) GROUP BY v0.c2;
SELECT v0.c2 FROM t0 INNER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC)) IS FALSE) WHERE (((CASE v0.c2  WHEN v0.c1 THEN v0.c2 END)<>(highlight(t0.c0, t0.c0, v0.c1, v0.c2)))) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM t0 INNER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC)) IS FALSE) WHERE ((NOT (((CASE v0.c2  WHEN v0.c1 THEN v0.c2 END)<>(highlight(t0.c0, t0.c0, v0.c1, v0.c2)))))) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM t0 INNER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC)) IS FALSE) WHERE (((((CASE v0.c2  WHEN v0.c1 THEN v0.c2 END)<>(highlight(t0.c0, t0.c0, v0.c1, v0.c2)))) ISNULL)) GROUP BY v0.c2;
SELECT v0.c2 FROM t0 INNER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC)) IS FALSE) GROUP BY v0.c2;
SELECT v0.c1, t0.c0, rt0.c4, rt0.c2, rt0.c3 FROM t0, v0, rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c3) NOTNULL)) NOT BETWEEN (((rt0.c0)||(v0.c0))) AND (((v0.c1)GLOB(t0.c0)))) GROUP BY v0.c1, t0.c0, rt0.c4, rt0.c2, rt0.c3;
SELECT v0.c1, t0.c0, rt0.c4, rt0.c2, rt0.c3 FROM t0, v0, rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c3) NOTNULL)) NOT BETWEEN (((rt0.c0)||(v0.c0))) AND (((v0.c1)GLOB(t0.c0)))) GROUP BY v0.c1, t0.c0, rt0.c4, rt0.c2, rt0.c3 HAVING COUNT(*) UNION ALL SELECT ALL v0.c1, t0.c0, rt0.c4, rt0.c2, rt0.c3 FROM t0, v0, rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c3) NOTNULL)) NOT BETWEEN (((rt0.c0)||(v0.c0))) AND (((v0.c1)GLOB(t0.c0)))) GROUP BY v0.c1, t0.c0, rt0.c4, rt0.c2, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c1, t0.c0, rt0.c4, rt0.c2, rt0.c3 FROM t0, v0, rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c3) NOTNULL)) NOT BETWEEN (((rt0.c0)||(v0.c0))) AND (((v0.c1)GLOB(t0.c0)))) GROUP BY v0.c1, t0.c0, rt0.c4, rt0.c2, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c1, t0.c0, rt0.c4, rt0.c2, rt0.c3 FROM t0, v0, rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c3) NOTNULL)) NOT BETWEEN (((rt0.c0)||(v0.c0))) AND (((v0.c1)GLOB(t0.c0)))) GROUP BY v0.c1, t0.c0, rt0.c4, rt0.c2, rt0.c3;
SELECT v0.c1, t0.c0, rt0.c4, rt0.c2, rt0.c3 FROM t0, v0, rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c3) NOTNULL)) NOT BETWEEN (((rt0.c0)||(v0.c0))) AND (((v0.c1)GLOB(t0.c0)))) GROUP BY v0.c1, t0.c0, rt0.c4, rt0.c2, rt0.c3 HAVING COUNT(*) UNION ALL SELECT ALL v0.c1, t0.c0, rt0.c4, rt0.c2, rt0.c3 FROM t0, v0, rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c3) NOTNULL)) NOT BETWEEN (((rt0.c0)||(v0.c0))) AND (((v0.c1)GLOB(t0.c0)))) GROUP BY v0.c1, t0.c0, rt0.c4, rt0.c2, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c1, t0.c0, rt0.c4, rt0.c2, rt0.c3 FROM t0, v0, rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c3) NOTNULL)) NOT BETWEEN (((rt0.c0)||(v0.c0))) AND (((v0.c1)GLOB(t0.c0)))) GROUP BY v0.c1, t0.c0, rt0.c4, rt0.c2, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c1, t0.c0, rt0.c4, rt0.c2, rt0.c3 FROM t0, v0, rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c3) NOTNULL)) NOT BETWEEN (((rt0.c0)||(v0.c0))) AND (((v0.c1)GLOB(t0.c0)))) GROUP BY v0.c1, t0.c0, rt0.c4, rt0.c2, rt0.c3;
SELECT vt1.c0, v0.c2, v0.c0, v0.c1 FROM v0 LEFT OUTER JOIN vt1 ON ((CAST(v0.c1 AS INTEGER)) NOT BETWEEN (highlight(v0.c1, vt1.c0, v0.c0, vt1.c0)) AND (((((v0.c1)OR(vt1.c0)))OR(v0.c0))));
SELECT DISTINCT * FROM v0, t0, vt1 FULL OUTER JOIN rt0 ON ((((vt1.c0, rt0.c3, rt0.c3)) BETWEEN ((v0.c1, rt0.c4, vt1.c0)) AND ((rt0.c0, rt0.c4, rt0.c2))) IN ());
SELECT DISTINCT * FROM v0, t0, vt1 FULL OUTER JOIN rt0 ON ((((vt1.c0, rt0.c3, rt0.c3)) BETWEEN ((v0.c1, rt0.c4, vt1.c0)) AND ((rt0.c0, rt0.c4, rt0.c2))) IN ()) WHERE (x'1a85') UNION SELECT DISTINCT * FROM v0, t0, vt1 FULL OUTER JOIN rt0 ON ((((vt1.c0, rt0.c3, rt0.c3)) BETWEEN ((v0.c1, rt0.c4, vt1.c0)) AND ((rt0.c0, rt0.c4, rt0.c2))) IN ()) WHERE ((NOT (x'1a85'))) UNION SELECT DISTINCT * FROM v0, t0, vt1 FULL OUTER JOIN rt0 ON ((((vt1.c0, rt0.c3, rt0.c3)) BETWEEN ((v0.c1, rt0.c4, vt1.c0)) AND ((rt0.c0, rt0.c4, rt0.c2))) IN ()) WHERE (((x'1a85') ISNULL));
SELECT DISTINCT * FROM v0, t0, vt1 FULL OUTER JOIN rt0 ON ((((vt1.c0, rt0.c3, rt0.c3)) BETWEEN ((v0.c1, rt0.c4, vt1.c0)) AND ((rt0.c0, rt0.c4, rt0.c2))) IN ());
SELECT ALL rt0.c0, rt0.c2 FROM vt1, t0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt1, t0, rt0 WHERE ((((rt0.c1)<=(rt0.c1)) IN ())) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM vt1, t0, rt0 WHERE ((NOT ((((rt0.c1)<=(rt0.c1)) IN ())))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM vt1, t0, rt0 WHERE ((((((rt0.c1)<=(rt0.c1)) IN ())) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM vt1, t0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(AVG(GROUP_CONCAT(t0.c0)) COLLATE BINARY AS NUMERIC) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(AVG(GROUP_CONCAT(t0.c0)) COLLATE BINARY AS NUMERIC))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(AVG(GROUP_CONCAT(t0.c0)) COLLATE BINARY AS NUMERIC)) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY)IS NOT(t0.c0))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((t0.c0 COLLATE BINARY)IS NOT(t0.c0))))) UNION ALL SELECT * FROM t0 WHERE (((((t0.c0 COLLATE BINARY)IS NOT(t0.c0))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE (-761530986 COLLATE RTRIM COLLATE NOCASE) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (-761530986 COLLATE RTRIM COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE (((-761530986 COLLATE RTRIM COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, v0 WHERE ((((((x'8f6b')) BETWEEN ((v0.c2)) AND ((v0.c0)))) NOT BETWEEN (v0.c0) AND (((0Xc75a33) IS TRUE)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t0, v0 WHERE ((NOT ((((((x'8f6b')) BETWEEN ((v0.c2)) AND ((v0.c0)))) NOT BETWEEN (v0.c0) AND (((0xc75a33) IS TRUE)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t0, v0 WHERE ((((((((x'8f6b')) BETWEEN ((v0.c2)) AND ((v0.c0)))) NOT BETWEEN (v0.c0) AND (((0xc75a33) IS TRUE)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT t0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4, vt1.c0, v0.c2, v0.c0 FROM t0, vt1, rt0, v0 GROUP BY t0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4, vt1.c0, v0.c2, v0.c0;
SELECT ALL t0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4, vt1.c0, v0.c2, v0.c0 FROM t0, vt1, rt0, v0 GROUP BY t0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4, vt1.c0, v0.c2, v0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT t0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4, vt1.c0, v0.c2, v0.c0 FROM t0, vt1, rt0, v0 GROUP BY t0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4, vt1.c0, v0.c2, v0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT t0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4, vt1.c0, v0.c2, v0.c0 FROM t0, vt1, rt0, v0 GROUP BY t0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4, vt1.c0, v0.c2, v0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (CAST(json_remove(0.43122498551440425, t0.c0) AS TEXT)) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(json_remove(0.43122498551440425, t0.c0) AS TEXT)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((CAST(json_remove(0.43122498551440425, t0.c0) AS TEXT)) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c2 END))<=((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c2 END))<=((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c2 END))<=((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT v0.c2, v0.c0, t0.c0 FROM t0 NATURAL JOIN v0 GROUP BY v0.c2, v0.c0, t0.c0;
SELECT ALL v0.c2, v0.c0, t0.c0 FROM t0 NATURAL JOIN v0 WHERE (CASE WHEN v0.c2 THEN ((v0.c1) NOTNULL) END) GROUP BY v0.c2, v0.c0, t0.c0 UNION SELECT v0.c2, v0.c0, t0.c0 FROM t0 NATURAL JOIN v0 WHERE ((NOT (CASE WHEN v0.c2 THEN ((v0.c1) NOTNULL) END))) GROUP BY v0.c2, v0.c0, t0.c0 UNION SELECT v0.c2, v0.c0, t0.c0 FROM t0 NATURAL JOIN v0 WHERE (((CASE WHEN v0.c2 THEN ((v0.c1) NOTNULL) END) ISNULL)) GROUP BY v0.c2, v0.c0, t0.c0;
SELECT v0.c2, v0.c0, t0.c0 FROM t0 NATURAL JOIN v0 GROUP BY v0.c2, v0.c0, t0.c0;
SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c0, vt1.c0 FROM t0, vt1, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c0, vt1.c0;
SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c0, vt1.c0 FROM t0, vt1, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c0, vt1.c0 HAVING MIN(SUM(rt0.c1) COLLATE BINARY) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c0, vt1.c0 FROM t0, vt1, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c0, vt1.c0 HAVING (NOT (MIN(SUM(rt0.c1) COLLATE BINARY))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c0, vt1.c0 FROM t0, vt1, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c0, vt1.c0 HAVING ((MIN(SUM(rt0.c1) COLLATE BINARY)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0 WHERE (CAST(((rt0.c0)<=(0.06622349866242361)) AS INTEGER)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT (CAST(((rt0.c0)<=(0.06622349866242361)) AS INTEGER)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0 WHERE (((CAST(((rt0.c0)<=(0.06622349866242361)) AS INTEGER)) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0 NOT INDEXED, rt0 WHERE (CASE (((rt0.c3, t0.c0, rt0.c0)) NOT BETWEEN ((t0.c0, rt0.c3, rt0.c4)) AND ((t0.c0, rt0.c2, rt0.c3)))  WHEN ((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c3)))AND(t0.c0)) THEN ((((rt0.c0)AND('')))AND(rt0.c3)) ELSE rt0.c0 END) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (CASE (((rt0.c3, t0.c0, rt0.c0)) NOT BETWEEN ((t0.c0, rt0.c3, rt0.c4)) AND ((t0.c0, rt0.c2, rt0.c3)))  WHEN ((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c3)))AND(t0.c0)) THEN ((((rt0.c0)AND('')))AND(rt0.c3)) ELSE rt0.c0 END))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((CASE (((rt0.c3, t0.c0, rt0.c0)) NOT BETWEEN ((t0.c0, rt0.c3, rt0.c4)) AND ((t0.c0, rt0.c2, rt0.c3)))  WHEN ((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c3)))AND(t0.c0)) THEN ((((rt0.c0)AND('')))AND(rt0.c3)) ELSE rt0.c0 END) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT vt1.c0, rt0.c2, rt0.c4, rt0.c1 FROM vt1, t0, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c4, rt0.c1;
SELECT vt1.c0, rt0.c2, rt0.c4, rt0.c1 FROM vt1, t0, rt0 WHERE (((((t0.c0)>>(rt0.c2)))/(((rt0.c1) NOT BETWEEN (-1319455737) AND (rt0.c4))))) GROUP BY vt1.c0, rt0.c2, rt0.c4, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c2, rt0.c4, rt0.c1 FROM vt1, t0, rt0 WHERE ((NOT (((((t0.c0)>>(rt0.c2)))/(((rt0.c1) NOT BETWEEN (-1319455737) AND (rt0.c4))))))) GROUP BY vt1.c0, rt0.c2, rt0.c4, rt0.c1 UNION SELECT vt1.c0, rt0.c2, rt0.c4, rt0.c1 FROM vt1, t0, rt0 WHERE (((((((t0.c0)>>(rt0.c2)))/(((rt0.c1) NOT BETWEEN (-1319455737) AND (rt0.c4))))) ISNULL)) GROUP BY vt1.c0, rt0.c2, rt0.c4, rt0.c1;
SELECT vt1.c0, rt0.c2, rt0.c4, rt0.c1 FROM vt1, t0, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c4, rt0.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(((MIN(t0.c0)) BETWEEN (COUNT(*)) AND (GROUP_CONCAT(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(((MIN(t0.c0)) BETWEEN (COUNT(*)) AND (GROUP_CONCAT(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(((MIN(t0.c0)) BETWEEN (COUNT(*)) AND (GROUP_CONCAT(t0.c0))))) ISNULL);
SELECT ALL rt0.c1, v0.c1, v0.c0, vt1.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM v0, vt1, t0, rt0;
SELECT rt0.c1, v0.c1, v0.c0, vt1.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM v0, vt1, t0, rt0 WHERE ((((- (rt0.c3))) IS TRUE)) UNION ALL SELECT rt0.c1, v0.c1, v0.c0, vt1.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM v0, vt1, t0, rt0 WHERE ((NOT ((((- (rt0.c3))) IS TRUE)))) UNION ALL SELECT rt0.c1, v0.c1, v0.c0, vt1.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM v0, vt1, t0, rt0 WHERE ((((((- (rt0.c3))) IS TRUE)) ISNULL));
SELECT ALL rt0.c1, v0.c1, v0.c0, vt1.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM v0, vt1, t0, rt0;
SELECT DISTINCT * FROM t0 CROSS JOIN vt1 ON ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)))>>(LIKE(rt0.c0, vt1.c0, '6'))) LEFT OUTER JOIN rt0 ON ((((rt0.c1)*(t0.c0))) ISNULL);
SELECT DISTINCT * FROM t0 CROSS JOIN vt1 ON ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)))>>(LIKE(rt0.c0, vt1.c0, '6'))) LEFT OUTER JOIN rt0 ON ((((rt0.c1)*(t0.c0))) ISNULL) WHERE (((rt0.c0 COLLATE BINARY) BETWEEN (json_quote(vt1.c0)) AND (CASE WHEN rt0.c4 THEN t0.c0 WHEN rt0.c4 THEN -242623080 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c2 END))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN vt1 ON ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)))>>(LIKE(rt0.c0, vt1.c0, '6'))) LEFT OUTER JOIN rt0 ON ((((rt0.c1)*(t0.c0))) ISNULL) WHERE ((NOT (((rt0.c0 COLLATE BINARY) BETWEEN (json_quote(vt1.c0)) AND (CASE WHEN rt0.c4 THEN t0.c0 WHEN rt0.c4 THEN -242623080 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c2 END))))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN vt1 ON ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)))>>(LIKE(rt0.c0, vt1.c0, '6'))) LEFT OUTER JOIN rt0 ON ((((rt0.c1)*(t0.c0))) ISNULL) WHERE (((((rt0.c0 COLLATE BINARY) BETWEEN (json_quote(vt1.c0)) AND (CASE WHEN rt0.c4 THEN t0.c0 WHEN rt0.c4 THEN -242623080 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c2 END))) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN vt1 ON ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)))>>(LIKE(rt0.c0, vt1.c0, '6'))) LEFT OUTER JOIN rt0 ON ((((rt0.c1)*(t0.c0))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ('') GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (''))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((('') ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt1.c0 FROM t0 CROSS JOIN vt1 ON '[)5>i' GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0 CROSS JOIN vt1 ON '[)5>i' GROUP BY vt1.c0 HAVING MAX(MIN(t0.c0)) UNION ALL SELECT vt1.c0 FROM t0 CROSS JOIN vt1 ON '[)5>i' GROUP BY vt1.c0 HAVING (NOT (MAX(MIN(t0.c0)))) UNION ALL SELECT vt1.c0 FROM t0 CROSS JOIN vt1 ON '[)5>i' GROUP BY vt1.c0 HAVING ((MAX(MIN(t0.c0))) ISNULL);
SELECT t0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c1, v0.c1 FROM v0, t0, vt1, rt0;
SELECT t0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c1, v0.c1 FROM v0, t0, vt1, rt0 WHERE (((rt0.c1) NOTNULL)) UNION ALL SELECT ALL t0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c1, v0.c1 FROM v0, t0, vt1, rt0 WHERE ((NOT (((rt0.c1) NOTNULL)))) UNION ALL SELECT t0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c1, v0.c1 FROM v0, t0, vt1, rt0 WHERE (((((rt0.c1) NOTNULL)) ISNULL));
SELECT t0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c1, v0.c1 FROM v0, t0, vt1, rt0;
SELECT DISTINCT * FROM v0, t0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM v0, t0 NATURAL JOIN rt0 WHERE (((((((((((rt0.c1)GLOB('t}')))AND(CASE WHEN v0.c1 THEN rt0.c1 ELSE v0.c2 END)))OR(((rt0.c2)OR(v0.c1)))))AND(((t0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2)))))OR((((v0.c1)) BETWEEN ((rt0.c0)) AND ((NULL)))))) UNION SELECT DISTINCT * FROM v0, t0 NATURAL JOIN rt0 WHERE ((NOT (((((((((((rt0.c1)GLOB('t}')))AND(CASE WHEN v0.c1 THEN rt0.c1 ELSE v0.c2 END)))OR(((rt0.c2)OR(v0.c1)))))AND(((t0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2)))))OR((((v0.c1)) BETWEEN ((rt0.c0)) AND ((NULL)))))))) UNION SELECT DISTINCT * FROM v0 NOT INDEXED, t0 NATURAL JOIN rt0 WHERE (((((((((((((rt0.c1)GLOB('t}')))AND(CASE WHEN v0.c1 THEN rt0.c1 ELSE v0.c2 END)))OR(((rt0.c2)OR(v0.c1)))))AND(((t0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2)))))OR((((v0.c1)) BETWEEN ((rt0.c0)) AND ((NULL)))))) ISNULL));
SELECT DISTINCT * FROM v0, t0 NATURAL JOIN rt0;
SELECT v0.c1, v0.c0, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c1, v0.c0, v0.c2, t0.c0;
SELECT ALL v0.c1, v0.c0, v0.c2, t0.c0 FROM t0, v0 WHERE (((((((((((v0.c0)OR(v0.c1)))AND(v0.c0)))OR(v0.c0)))AND(t0.c0)))/(v0.c1))) GROUP BY v0.c1, v0.c0, v0.c2, t0.c0 UNION SELECT v0.c1, v0.c0, v0.c2, t0.c0 FROM t0, v0 WHERE ((NOT (((((((((((v0.c0)OR(v0.c1)))AND(v0.c0)))OR(v0.c0)))AND(t0.c0)))/(v0.c1))))) GROUP BY v0.c1, v0.c0, v0.c2, t0.c0 UNION SELECT ALL v0.c1, v0.c0, v0.c2, t0.c0 FROM t0, v0 WHERE (((((((((((((v0.c0)OR(v0.c1)))AND(v0.c0)))OR(v0.c0)))AND(t0.c0)))/(v0.c1))) ISNULL)) GROUP BY v0.c1, v0.c0, v0.c2, t0.c0;
SELECT v0.c1, v0.c0, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c1, v0.c0, v0.c2, t0.c0;
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING GROUP_CONCAT(-1.617239901E9) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING (NOT (GROUP_CONCAT(-1.617239901E9))) UNION ALL SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2 HAVING ((GROUP_CONCAT(-1.617239901E9)) ISNULL);
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING GROUP_CONCAT(-1.617239901E9) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING (NOT (GROUP_CONCAT(-1.617239901E9))) UNION ALL SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2 HAVING ((GROUP_CONCAT(-1.617239901E9)) ISNULL);
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((((((v0.c2) NOTNULL))AND(((v0.c0)*(v0.c0)))))AND(v0.c0))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((((v0.c2) NOTNULL))AND(((v0.c0)*(v0.c0)))))AND(v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((((v0.c2) NOTNULL))AND(((v0.c0)*(v0.c0)))))AND(v0.c0))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c3, v0.c0, t0.c0, rt0.c1, v0.c1, vt1.c0, rt0.c4 FROM vt1, rt0, v0, t0;
SELECT DISTINCT rt0.c3, v0.c0, t0.c0, rt0.c1, v0.c1, vt1.c0, rt0.c4 FROM vt1, rt0, v0, t0 WHERE ((((t0.c0 IN (v0.c2, v0.c0)))>=(x''))) UNION SELECT DISTINCT rt0.c3, v0.c0, t0.c0, rt0.c1, v0.c1, vt1.c0, rt0.c4 FROM vt1, rt0, v0, t0 WHERE ((NOT ((((t0.c0 IN (v0.c2, v0.c0)))>=(x''))))) UNION SELECT DISTINCT rt0.c3, v0.c0, t0.c0, rt0.c1, v0.c1, vt1.c0, rt0.c4 FROM vt1, rt0, v0, t0 WHERE ((((((t0.c0 IN (v0.c2, v0.c0)))>=(x''))) ISNULL));
SELECT DISTINCT rt0.c3, v0.c0, t0.c0, rt0.c1, v0.c1, vt1.c0, rt0.c4 FROM vt1, rt0, v0, t0;
SELECT ALL t0.c0, rt0.c3, rt0.c0, vt1.c0, rt0.c1 FROM vt1, t0 INNER JOIN rt0 ON (((rt0.c0 IN ())) NOT BETWEEN ((NOT (t0.c0))) AND (LOWER(DISTINCT rt0.c2))) GROUP BY t0.c0, rt0.c3, rt0.c0, vt1.c0, rt0.c1;
SELECT ALL t0.c0, rt0.c3, rt0.c0, vt1.c0, rt0.c1 FROM vt1, t0 INNER JOIN rt0 ON (((rt0.c0 IN ())) NOT BETWEEN ((NOT (t0.c0))) AND (LOWER(DISTINCT rt0.c2))) WHERE ((((t0.c0 IN ()))%((NOT (vt1.c0))))) GROUP BY t0.c0, rt0.c3, rt0.c0, vt1.c0, rt0.c1 UNION SELECT ALL t0.c0, rt0.c3, rt0.c0, vt1.c0, rt0.c1 FROM vt1, t0 INNER JOIN rt0 ON (((rt0.c0 IN ())) NOT BETWEEN ((NOT (t0.c0))) AND (LOWER(DISTINCT rt0.c2))) WHERE ((NOT ((((t0.c0 IN ()))%((NOT (vt1.c0))))))) GROUP BY t0.c0, rt0.c3, rt0.c0, vt1.c0, rt0.c1 UNION SELECT ALL t0.c0, rt0.c3, rt0.c0, vt1.c0, rt0.c1 FROM vt1, t0 INNER JOIN rt0 ON (((rt0.c0 IN ())) NOT BETWEEN ((NOT (t0.c0))) AND (LOWER(DISTINCT rt0.c2))) WHERE ((((((t0.c0 IN ()))%((NOT (vt1.c0))))) ISNULL)) GROUP BY t0.c0, rt0.c3, rt0.c0, vt1.c0, rt0.c1;
SELECT ALL t0.c0, rt0.c3, rt0.c0, vt1.c0, rt0.c1 FROM vt1, t0 INNER JOIN rt0 ON (((rt0.c0 IN ())) NOT BETWEEN ((NOT (t0.c0))) AND (LOWER(DISTINCT rt0.c2))) GROUP BY t0.c0, rt0.c3, rt0.c0, vt1.c0, rt0.c1;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((TOTAL(rt0.c4))LIKE(SUM(AVG(TOTAL(rt0.c0))))) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (((TOTAL(rt0.c4))LIKE(SUM(AVG(TOTAL(rt0.c0))))))) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((((TOTAL(rt0.c4))LIKE(SUM(AVG(TOTAL(rt0.c0)))))) ISNULL);
SELECT ALL * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE ((((rt0.c2)<=(rt0.c1)) IN ())) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT ((((rt0.c2)<=(rt0.c1)) IN ())))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((((((rt0.c2)<=(rt0.c1)) IN ())) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0, t0;
SELECT DISTINCT * FROM vt1, rt0, t0 WHERE (((((rt0.c2) IS TRUE))GLOB(CAST(vt1.c0 AS INTEGER)))) UNION SELECT DISTINCT * FROM vt1, rt0, t0 WHERE ((NOT (((((rt0.c2) IS TRUE))GLOB(CAST(vt1.c0 AS INTEGER)))))) UNION SELECT DISTINCT * FROM vt1, rt0, t0 WHERE (((((((rt0.c2) IS TRUE))GLOB(CAST(vt1.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, t0;
SELECT t0.c0, v0.c1 FROM t0, vt1, v0, rt0 GROUP BY t0.c0, v0.c1;
SELECT ALL t0.c0, v0.c1 FROM t0, vt1, v0, rt0 WHERE (CASE WHEN ((rt0.c2) IS FALSE) THEN (((rt0.c0))<>((NULL))) END) GROUP BY t0.c0, v0.c1 UNION SELECT t0.c0, v0.c1 FROM t0, vt1, v0, rt0 WHERE ((NOT (CASE WHEN ((rt0.c2) IS FALSE) THEN (((rt0.c0))<>((NULL))) END))) GROUP BY t0.c0, v0.c1 UNION SELECT t0.c0, v0.c1 FROM t0, vt1, v0, rt0 WHERE (((CASE WHEN ((rt0.c2) IS FALSE) THEN (((rt0.c0))!=((NULL))) END) ISNULL)) GROUP BY t0.c0, v0.c1;
SELECT t0.c0, v0.c1 FROM t0, vt1, v0, rt0 GROUP BY t0.c0, v0.c1;
SELECT ALL v0.c1, t0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c0 FROM v0, rt0, t0 GROUP BY v0.c1, t0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c0;
SELECT ALL v0.c1, t0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c0 FROM v0, rt0, t0 GROUP BY v0.c1, t0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c0 HAVING TOTAL(CASE WHEN v0.c0 THEN AVG(rt0.c3) END) UNION ALL SELECT v0.c1, t0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c0 FROM v0, rt0, t0 GROUP BY v0.c1, t0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c0 HAVING (NOT (TOTAL(CASE WHEN v0.c0 THEN AVG(rt0.c3) END))) UNION ALL SELECT ALL v0.c1, t0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c0 FROM v0, rt0, t0 GROUP BY v0.c1, t0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c0 HAVING ((TOTAL(CASE WHEN v0.c0 THEN AVG(rt0.c3) END)) ISNULL);
SELECT ALL MIN((((CAST(v0.c0 AS NUMERIC)))==((((((((((v0.c2)AND(v0.c0)))AND(v0.c0)))OR(vt1.c0)))AND(vt1.c0)))))) FROM v0, vt1 ORDER BY (- (CASE WHEN v0.c2 THEN x'' ELSE v0.c0 END)) DESC;
SELECT ALL v0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c2 FROM rt0, vt1, v0;
SELECT ALL v0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c2 FROM rt0, vt1, v0 WHERE ((((+ (rt0.c1))) NOTNULL)) UNION ALL SELECT ALL v0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c2 FROM rt0, vt1, v0 WHERE ((NOT ((((+ (rt0.c1))) NOTNULL)))) UNION ALL SELECT v0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c2 FROM rt0, vt1, v0 WHERE ((((((+ (rt0.c1))) NOTNULL)) ISNULL));
SELECT ALL v0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c2 FROM rt0, vt1, v0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c1, rt0.c2, rt0.c4, t0.c0 FROM t0, rt0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c1, rt0.c2, rt0.c4, t0.c0 FROM t0, rt0 WHERE (((((t0.c0)-(NULL))) NOT NULL)) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c1, rt0.c2, rt0.c4, t0.c0 FROM t0, rt0 WHERE ((NOT (((((t0.c0)-(NULL))) NOT NULL)))) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c1, rt0.c2, rt0.c4, t0.c0 FROM t0, rt0 WHERE (((((((t0.c0)-(NULL))) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c1, rt0.c2, rt0.c4, t0.c0 FROM t0, rt0;
SELECT v0.c0 FROM t0, vt1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t0, vt1, v0 WHERE (((((CAST(v0.c0 AS NUMERIC))OR(0.5361922614974262)))OR(((((v0.c2)OR(v0.c1)))OR(x''))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t0, vt1, v0 WHERE ((NOT (((((CAST(v0.c0 AS NUMERIC))OR(0.5361922614974262)))OR(((((v0.c2)OR(v0.c1)))OR(x''))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t0, vt1, v0 WHERE (((((((CAST(v0.c0 AS NUMERIC))OR(0.5361922614974262)))OR(((((v0.c2)OR(v0.c1)))OR(x''))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM t0, vt1, v0 GROUP BY v0.c0;
SELECT t0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY t0.c0, v0.c1, v0.c2;
SELECT t0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY t0.c0, v0.c1, v0.c2 HAVING ((((COUNT(v0.c0))%(AVG(v0.c2))))>(CAST(COUNT(COUNT(v0.c2)) AS TEXT))) UNION ALL SELECT t0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY t0.c0, v0.c1, v0.c2 HAVING (NOT (((((COUNT(v0.c0))%(AVG(v0.c2))))>(CAST(COUNT(COUNT(v0.c2)) AS TEXT))))) UNION ALL SELECT t0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY t0.c0, v0.c1, v0.c2 HAVING ((((((COUNT(v0.c0))%(AVG(v0.c2))))>(CAST(COUNT(COUNT(v0.c2)) AS TEXT)))) ISNULL);
SELECT MAX((((((('330896263')OR(rt0.c3)))AND(rt0.c3))) ISNULL)) FROM rt0 ORDER BY ((((CAST(rt0.c0 AS TEXT))OR((~ (rt0.c1)))))OR(rt0.c0)) DESC  NULLS LAST;
SELECT * FROM rt0, t0, v0;
SELECT ALL * FROM rt0, t0, v0 WHERE (((((rt0.c3) IS TRUE)) IS FALSE)) UNION ALL SELECT * FROM rt0, t0, v0 WHERE ((NOT (((((rt0.c3) IS TRUE)) IS FALSE)))) UNION ALL SELECT * FROM rt0, t0, v0 WHERE (((((((rt0.c3) IS TRUE)) IS FALSE)) ISNULL));
SELECT * FROM rt0, t0, v0;
SELECT DISTINCT rt0.c3, t0.c0, vt1.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM vt1 INNER JOIN rt0 ON (((rt0.c2)) BETWEEN ((((((rt0.c4)AND(rt0.c1)))AND(vt1.c0)))) AND (((rt0.c1 IN (vt1.c0))))) INNER JOIN t0 ON (((rt0.c3, rt0.c2, rt0.c4)) NOT BETWEEN ((COALESCE(DISTINCT t0.c0, vt1.c0), ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c2)), TRIM(rt0.c1, rt0.c4))) AND (((((vt1.c0, '4ZI', t0.c0, rt0.c3, rt0.c2))>=((t0.c0, rt0.c0, rt0.c2, rt0.c1, 'oYi'''))), ((rt0.c4)>>(vt1.c0)), CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)));
SELECT DISTINCT rt0.c3, t0.c0, vt1.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM vt1 INNER JOIN rt0 ON (((rt0.c2)) BETWEEN ((((((rt0.c4)AND(rt0.c1)))AND(vt1.c0)))) AND (((rt0.c1 IN (vt1.c0))))) INNER JOIN t0 ON (((rt0.c3, rt0.c2, rt0.c4)) NOT BETWEEN ((COALESCE(DISTINCT t0.c0, vt1.c0), ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c2)), TRIM(rt0.c1, rt0.c4))) AND (((((vt1.c0, '4ZI', t0.c0, rt0.c3, rt0.c2))>=((t0.c0, rt0.c0, rt0.c2, rt0.c1, 'oYi'''))), ((rt0.c4)>>(vt1.c0)), CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END))) WHERE (CASE WHEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) THEN 0Xffffffffaf22a6ca WHEN ((((((((((((((((rt0.c4)AND(t0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)) THEN CASE WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 ELSE rt0.c2 END WHEN ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c3)) THEN vt1.c0 WHEN (((rt0.c1))>((rt0.c4))) THEN rt0.c0 COLLATE NOCASE WHEN ((rt0.c3)>=(t0.c0)) THEN CASE NULL  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END ELSE ((t0.c0)!=(rt0.c2)) END) UNION SELECT DISTINCT rt0.c3, t0.c0, vt1.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM vt1 INNER JOIN rt0 ON (((rt0.c2)) BETWEEN ((((((rt0.c4)AND(rt0.c1)))AND(vt1.c0)))) AND (((rt0.c1 IN (vt1.c0))))) INNER JOIN t0 ON (((rt0.c3, rt0.c2, rt0.c4)) NOT BETWEEN ((COALESCE(DISTINCT t0.c0, vt1.c0), ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c2)), TRIM(rt0.c1, rt0.c4))) AND (((((vt1.c0, '4ZI', t0.c0, rt0.c3, rt0.c2))>=((t0.c0, rt0.c0, rt0.c2, rt0.c1, 'oYi'''))), ((rt0.c4)>>(vt1.c0)), CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END))) WHERE ((NOT (CASE WHEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) THEN 0Xffffffffaf22a6ca WHEN ((((((((((((((((rt0.c4)AND(t0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)) THEN CASE WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 ELSE rt0.c2 END WHEN ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c3)) THEN vt1.c0 WHEN (((rt0.c1))>((rt0.c4))) THEN rt0.c0 COLLATE NOCASE WHEN ((rt0.c3)>=(t0.c0)) THEN CASE NULL  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END ELSE ((t0.c0)!=(rt0.c2)) END))) UNION SELECT DISTINCT rt0.c3, t0.c0, vt1.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM vt1 INNER JOIN rt0 ON (((rt0.c2)) BETWEEN ((((((rt0.c4)AND(rt0.c1)))AND(vt1.c0)))) AND (((rt0.c1 IN (vt1.c0))))) INNER JOIN t0 ON (((rt0.c3, rt0.c2, rt0.c4)) NOT BETWEEN ((COALESCE(DISTINCT t0.c0, vt1.c0), ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c2)), TRIM(rt0.c1, rt0.c4))) AND (((((vt1.c0, '4ZI', t0.c0, rt0.c3, rt0.c2))>=((t0.c0, rt0.c0, rt0.c2, rt0.c1, 'oYi'''))), ((rt0.c4)>>(vt1.c0)), CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END))) WHERE (((CASE WHEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) THEN 0Xffffffffaf22a6ca WHEN ((((((((((((((((rt0.c4)AND(t0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)) THEN CASE WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 ELSE rt0.c2 END WHEN ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c3)) THEN vt1.c0 WHEN (((rt0.c1))>((rt0.c4))) THEN rt0.c0 COLLATE NOCASE WHEN ((rt0.c3)>=(t0.c0)) THEN CASE NULL  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END ELSE ((t0.c0)<>(rt0.c2)) END) ISNULL));
SELECT DISTINCT rt0.c3, t0.c0, vt1.c0, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM vt1 INNER JOIN rt0 ON (((rt0.c2)) BETWEEN ((((((rt0.c4)AND(rt0.c1)))AND(vt1.c0)))) AND (((rt0.c1 IN (vt1.c0))))) INNER JOIN t0 ON (((rt0.c3, rt0.c2, rt0.c4)) NOT BETWEEN ((COALESCE(DISTINCT t0.c0, vt1.c0), ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c2)), TRIM(rt0.c1, rt0.c4))) AND (((((vt1.c0, '4ZI', t0.c0, rt0.c3, rt0.c2))>=((t0.c0, rt0.c0, rt0.c2, rt0.c1, 'oYi'''))), ((rt0.c4)>>(vt1.c0)), CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)));
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0 WHERE ((CAST(v0.c1 AS NUMERIC) IN ())) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0 WHERE ((NOT ((CAST(v0.c1 AS NUMERIC) IN ())))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0 WHERE ((((CAST(v0.c1 AS NUMERIC) IN ())) ISNULL)) GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT * FROM rt0, t0, v0, vt1;
SELECT * FROM rt0, t0, v0, vt1 WHERE (rt0.c2) UNION ALL SELECT * FROM rt0, t0, v0, vt1 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM rt0, t0, v0, vt1 WHERE (((rt0.c2) ISNULL));
SELECT * FROM rt0, t0, v0, vt1;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c0, v0.c2, rt0.c2, v0.c1, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c0, v0.c2, rt0.c2, v0.c1, v0.c0 FROM v0, rt0 WHERE (COALESCE(v0.c0, rt0.c4) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c0, v0.c2, rt0.c2, v0.c1, v0.c0 FROM v0, rt0 WHERE ((NOT (COALESCE(v0.c0, rt0.c4) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c0, v0.c2, rt0.c2, v0.c1, v0.c0 FROM v0, rt0 WHERE (((COALESCE(v0.c0, rt0.c4) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c0, v0.c2, rt0.c2, v0.c1, v0.c0 FROM v0, rt0;
SELECT vt1.c0, v0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM t0 LEFT OUTER JOIN vt1 ON CAST(((v0.c1) NOT NULL) AS INTEGER) LEFT OUTER JOIN rt0 ON (v0.c0 IN (rt0.c2)) COLLATE RTRIM INNER JOIN v0 ON CASE ((('')) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1)))  WHEN ((v0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)) THEN (((t0.c0))>=((rt0.c3))) END GROUP BY vt1.c0, v0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CASE WHEN COUNT(*) THEN json_array_length(t0.c0, TOTAL(MIN(SUM(MAX(t0.c0))))) ELSE SUM(t0.c0) END UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CASE WHEN COUNT(*) THEN json_array_length(t0.c0, TOTAL(MIN(SUM(MAX(t0.c0))))) ELSE SUM(t0.c0) END)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE WHEN COUNT(*) THEN json_array_length(t0.c0, TOTAL(MIN(SUM(MAX(t0.c0))))) ELSE SUM(t0.c0) END) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (UPPER(DISTINCT (t0.c0 IN ()))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (UPPER(DISTINCT (t0.c0 IN ()))))) UNION ALL SELECT * FROM t0 WHERE (((UPPER(DISTINCT (t0.c0 IN ()))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT vt1.c0, v0.c1, rt0.c4, rt0.c1, v0.c2, v0.c0, rt0.c2 FROM vt1 CROSS JOIN t0 ON CASE ((vt1.c0)>=(vt1.c0))  WHEN rt0.c3 THEN rt0.c1 ELSE (3.87554385E8 IN (vt1.c0)) END RIGHT OUTER JOIN v0 ON -7.26417329E8 INNER JOIN rt0 ON ((UNLIKELY(DISTINCT vt1.c0))IS NOT(((rt0.c0)*(v0.c0)))) GROUP BY vt1.c0, v0.c1, rt0.c4, rt0.c1, v0.c2, v0.c0, rt0.c2;
SELECT vt1.c0, t0.c0 FROM t0, v0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0, v0, vt1 GROUP BY vt1.c0, t0.c0 HAVING SUM((((vt1.c0))>=((NULL)))) UNION ALL SELECT vt1.c0, t0.c0 FROM t0, v0, vt1 GROUP BY vt1.c0, t0.c0 HAVING (NOT (SUM((((vt1.c0))>=((NULL)))))) UNION ALL SELECT vt1.c0, t0.c0 FROM t0, v0, vt1 GROUP BY vt1.c0, t0.c0 HAVING ((SUM((((vt1.c0))>=((NULL))))) ISNULL);
SELECT vt1.c0, t0.c0 FROM t0, v0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0, v0, vt1 GROUP BY vt1.c0, t0.c0 HAVING SUM((((vt1.c0))>=((NULL)))) UNION ALL SELECT vt1.c0, t0.c0 FROM t0, v0, vt1 GROUP BY vt1.c0, t0.c0 HAVING (NOT (SUM((((vt1.c0))>=((NULL)))))) UNION ALL SELECT vt1.c0, t0.c0 FROM t0, v0, vt1 GROUP BY vt1.c0, t0.c0 HAVING ((SUM((((vt1.c0))>=((NULL))))) ISNULL);
SELECT vt1.c0, t0.c0 FROM t0, v0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT ALL rt0.c2, v0.c1, rt0.c4, rt0.c1 FROM v0, rt0, vt1;
SELECT rt0.c2, v0.c1, rt0.c4, rt0.c1 FROM v0, rt0, vt1 WHERE (CASE WHEN ('(0xq{14' IN ()) THEN ((rt0.c1) NOTNULL) END) UNION ALL SELECT rt0.c2, v0.c1, rt0.c4, rt0.c1 FROM v0, rt0, vt1 WHERE ((NOT (CASE WHEN ('(0xq{14' IN ()) THEN ((rt0.c1) NOTNULL) END))) UNION ALL SELECT ALL rt0.c2, v0.c1, rt0.c4, rt0.c1 FROM v0, rt0, vt1 WHERE (((CASE WHEN ('(0xq{14' IN ()) THEN ((rt0.c1) NOTNULL) END) ISNULL));
SELECT ALL rt0.c2, v0.c1, rt0.c4, rt0.c1 FROM v0, rt0, vt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((- (((v0.c2) IS TRUE)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((- (((v0.c2) IS TRUE)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((- (((v0.c2) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c1, v0.c1 FROM v0, rt0, vt1 GROUP BY rt0.c1, v0.c1;
SELECT ALL rt0.c1, v0.c1 FROM v0, rt0, vt1 WHERE (ABS(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)))) GROUP BY rt0.c1, v0.c1 UNION SELECT rt0.c1, v0.c1 FROM v0, rt0, vt1 WHERE ((NOT (ABS(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)))))) GROUP BY rt0.c1, v0.c1 UNION SELECT rt0.c1, v0.c1 FROM v0, rt0, vt1 WHERE (((ABS(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)))) ISNULL)) GROUP BY rt0.c1, v0.c1;
SELECT ALL rt0.c1, v0.c1 FROM v0, rt0, vt1 GROUP BY rt0.c1, v0.c1;
SELECT ALL v0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c1, t0.c0, v0.c2, rt0.c3 FROM t0, vt1, rt0, v0 NOT INDEXED GROUP BY v0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c1, t0.c0, v0.c2, rt0.c3;
SELECT v0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c1, t0.c0, v0.c2, rt0.c3 FROM t0, vt1, rt0, v0 GROUP BY v0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c1, t0.c0, v0.c2, rt0.c3 HAVING MIN(MIN(v0.c1)) UNION ALL SELECT v0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c1, t0.c0, v0.c2, rt0.c3 FROM t0, vt1, rt0, v0 GROUP BY v0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c1, t0.c0, v0.c2, rt0.c3 HAVING (NOT (MIN(MIN(v0.c1)))) UNION ALL SELECT v0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c1, t0.c0, v0.c2, rt0.c3 FROM t0, vt1, rt0, v0 GROUP BY v0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c1, t0.c0, v0.c2, rt0.c3 HAVING ((MIN(MIN(v0.c1))) ISNULL);
SELECT v0.c0, rt0.c4, v0.c2, rt0.c2, v0.c1, rt0.c1 FROM v0, t0, rt0, vt1;
SELECT v0.c0, rt0.c4, v0.c2, rt0.c2, v0.c1, rt0.c1 FROM v0, t0, rt0, vt1 WHERE ((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((v0.c2))) COLLATE RTRIM) UNION ALL SELECT v0.c0, rt0.c4, v0.c2, rt0.c2, v0.c1, rt0.c1 FROM v0, t0, rt0, vt1 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((v0.c2))) COLLATE RTRIM))) UNION ALL SELECT v0.c0, rt0.c4, v0.c2, rt0.c2, v0.c1, rt0.c1 FROM v0, t0, rt0, vt1 WHERE ((((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((v0.c2))) COLLATE RTRIM) ISNULL));
SELECT v0.c0, rt0.c4, v0.c2, rt0.c2, v0.c1, rt0.c1 FROM v0, t0, rt0, vt1;
SELECT DISTINCT * FROM t0, v0, vt1, rt0;
SELECT DISTINCT * FROM t0, v0, vt1, rt0 WHERE (((v0.c0)==(((((rt0.c2)OR(1.511610809E9)))AND(v0.c2))))) UNION SELECT DISTINCT * FROM t0, v0, vt1, rt0 WHERE ((NOT (((v0.c0)==(((((rt0.c2)OR(1.511610809E9)))AND(v0.c2))))))) UNION SELECT DISTINCT * FROM t0, v0, vt1, rt0 WHERE (((((v0.c0)==(((((rt0.c2)OR(1.511610809E9)))AND(v0.c2))))) ISNULL));
SELECT DISTINCT * FROM t0, v0, vt1, rt0;
SELECT rt0.c3, rt0.c2, vt1.c0, rt0.c1, rt0.c4, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c3, rt0.c2, vt1.c0, rt0.c1, rt0.c4, rt0.c0;
SELECT rt0.c3, rt0.c2, vt1.c0, rt0.c1, rt0.c4, rt0.c0 FROM vt1, rt0 WHERE (((((rt0.c0) NOT NULL))<=(rt0.c0 COLLATE BINARY))) GROUP BY rt0.c3, rt0.c2, vt1.c0, rt0.c1, rt0.c4, rt0.c0 UNION SELECT rt0.c3, rt0.c2, vt1.c0, rt0.c1, rt0.c4, rt0.c0 FROM vt1, rt0 WHERE ((NOT (((((rt0.c0) NOT NULL))<=(rt0.c0 COLLATE BINARY))))) GROUP BY rt0.c3, rt0.c2, vt1.c0, rt0.c1, rt0.c4, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c2, vt1.c0, rt0.c1, rt0.c4, rt0.c0 FROM vt1, rt0 WHERE (((((((rt0.c0) NOT NULL))<=(rt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c3, rt0.c2, vt1.c0, rt0.c1, rt0.c4, rt0.c0;
SELECT rt0.c3, rt0.c2, vt1.c0, rt0.c1, rt0.c4, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c3, rt0.c2, vt1.c0, rt0.c1, rt0.c4, rt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(vt1.c0) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(vt1.c0)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(vt1.c0) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(vt1.c0)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((((v0.c2)) BETWEEN ((((v0.c1) IS FALSE))) AND ((SQLITE_COMPILEOPTION_USED(v0.c2))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((v0.c2)) BETWEEN ((((v0.c1) IS FALSE))) AND ((SQLITE_COMPILEOPTION_USED(v0.c2))))))) UNION ALL SELECT * FROM v0 WHERE ((((((v0.c2)) BETWEEN ((((v0.c1) IS FALSE))) AND ((SQLITE_COMPILEOPTION_USED(v0.c2))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, v0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, v0.c2 FROM rt0, v0 WHERE (CAST(((rt0.c4)||(rt0.c4)) AS REAL)) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, v0.c2 FROM rt0, v0 WHERE ((NOT (CAST(((rt0.c4)||(rt0.c4)) AS REAL)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, v0.c2 FROM rt0, v0 WHERE (((CAST(((rt0.c4)||(rt0.c4)) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, v0.c2 FROM rt0, v0;
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0 WHERE (((((((((((((v0.c1)AND(v0.c2)))AND(v0.c1)))AND(NULLIF(DISTINCT v0.c0, v0.c1))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c1)))))AND(COALESCE(DISTINCT v0.c0, v0.c0))))OR((v0.c2 IN ())))) GROUP BY v0.c0, v0.c2 UNION SELECT v0.c0, v0.c2 FROM v0 WHERE ((NOT (((((((((((((v0.c1)AND(v0.c2)))AND(v0.c1)))AND(NULLIF(DISTINCT v0.c0, v0.c1))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c1)))))AND(COALESCE(DISTINCT v0.c0, v0.c0))))OR((v0.c2 IN ())))))) GROUP BY v0.c0, v0.c2 UNION SELECT ALL v0.c0, v0.c2 FROM v0 WHERE (((((((((((((((v0.c1)AND(v0.c2)))AND(v0.c1)))AND(NULLIF(DISTINCT v0.c0, v0.c1))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c1)))))AND(COALESCE(DISTINCT v0.c0, v0.c0))))OR((v0.c2 IN ())))) ISNULL)) GROUP BY v0.c0, v0.c2;
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c1, rt0.c0 FROM vt1, t0, v0 CROSS JOIN rt0 ON (((rt0.c1 COLLATE RTRIM))<=((((rt0.c3) IS FALSE)))) GROUP BY v0.c1, rt0.c0;
SELECT v0.c1, rt0.c0 FROM vt1, t0 NOT INDEXED, v0 CROSS JOIN rt0 ON (((rt0.c1 COLLATE RTRIM))<=((((rt0.c3) IS FALSE)))) GROUP BY v0.c1, rt0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL v0.c1, rt0.c0 FROM vt1, t0, v0 CROSS JOIN rt0 ON (((rt0.c1 COLLATE RTRIM))<=((((rt0.c3) IS FALSE)))) GROUP BY v0.c1, rt0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL v0.c1, rt0.c0 FROM vt1, t0, v0 CROSS JOIN rt0 ON (((rt0.c1 COLLATE RTRIM))<=((((rt0.c3) IS FALSE)))) GROUP BY v0.c1, rt0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CAST('-94158187' AS REAL)) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST('-94158187' AS REAL)))) UNION ALL SELECT vt1.c0 FROM vt1 NOT INDEXED WHERE (((CAST('-94158187' AS REAL)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN v0 ON CAST(v0.c0 AS NUMERIC);
SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN v0 ON CAST(v0.c0 AS NUMERIC) WHERE ((NOT ((v0.c2 IN ())))) UNION SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN v0 ON CAST(v0.c0 AS NUMERIC) WHERE ((NOT ((NOT ((v0.c2 IN ())))))) UNION SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN v0 ON CAST(v0.c0 AS NUMERIC) WHERE ((((NOT ((v0.c2 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN v0 ON CAST(v0.c0 AS NUMERIC);
SELECT v0.c1, t0.c0, v0.c2 FROM t0, v0 GROUP BY v0.c1, t0.c0, v0.c2;
SELECT v0.c1, t0.c0, v0.c2 FROM t0, v0 WHERE ((NOT (CAST(v0.c0 AS TEXT)))) GROUP BY v0.c1, t0.c0, v0.c2 UNION SELECT v0.c1, t0.c0, v0.c2 FROM t0, v0 WHERE ((NOT ((NOT (CAST(v0.c0 AS TEXT)))))) GROUP BY v0.c1, t0.c0, v0.c2 UNION SELECT v0.c1, t0.c0, v0.c2 FROM t0, v0 WHERE ((((NOT (CAST(v0.c0 AS TEXT)))) ISNULL)) GROUP BY v0.c1, t0.c0, v0.c2;
SELECT v0.c1, t0.c0, v0.c2 FROM t0, v0 GROUP BY v0.c1, t0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, t0.c0, v0.c2 FROM v0 CROSS JOIN t0 ON (+ (LIKELIHOOD(t0.c0, 0.5812788154995847))) GROUP BY v0.c1, v0.c0, t0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, t0.c0, v0.c2 FROM v0 CROSS JOIN t0 ON (+ (LIKELIHOOD(t0.c0, 0.5812788154995847))) GROUP BY v0.c1, v0.c0, t0.c0, v0.c2 HAVING SUM(SUM(v0.c2)) UNION ALL SELECT ALL v0.c1, v0.c0, t0.c0, v0.c2 FROM v0 CROSS JOIN t0 ON (+ (LIKELIHOOD(t0.c0, 0.5812788154995847))) GROUP BY v0.c1, v0.c0, t0.c0, v0.c2 HAVING (NOT (SUM(SUM(v0.c2)))) UNION ALL SELECT v0.c1, v0.c0, t0.c0, v0.c2 FROM v0 CROSS JOIN t0 ON (+ (LIKELIHOOD(t0.c0, 0.5812788154995847))) GROUP BY v0.c1, v0.c0, t0.c0, v0.c2 HAVING ((SUM(SUM(v0.c2))) ISNULL);
SELECT * FROM vt1, t0 NATURAL JOIN rt0;
SELECT * FROM vt1, t0 NATURAL JOIN rt0 WHERE (CASE WHEN ((((rt0.c3)AND(NULL)))OR(rt0.c1)) THEN rt0.c2 COLLATE RTRIM WHEN CAST(t0.c0 AS REAL) THEN ((rt0.c4) IS TRUE) WHEN ((rt0.c4) NOTNULL) THEN (NOT (rt0.c3)) END) UNION ALL SELECT ALL * FROM vt1, t0 NATURAL JOIN rt0 WHERE ((NOT (CASE WHEN ((((rt0.c3)AND(NULL)))OR(rt0.c1)) THEN rt0.c2 COLLATE RTRIM WHEN CAST(t0.c0 AS REAL) THEN ((rt0.c4) IS TRUE) WHEN ((rt0.c4) NOTNULL) THEN (NOT (rt0.c3)) END))) UNION ALL SELECT ALL * FROM vt1, t0 NATURAL JOIN rt0 WHERE (((CASE WHEN ((((rt0.c3)AND(NULL)))OR(rt0.c1)) THEN rt0.c2 COLLATE RTRIM WHEN CAST(t0.c0 AS REAL) THEN ((rt0.c4) IS TRUE) WHEN ((rt0.c4) NOTNULL) THEN (NOT (rt0.c3)) END) ISNULL));
SELECT * FROM vt1, t0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c0, v0.c2, rt0.c2 FROM rt0, v0, vt1 FULL OUTER JOIN t0 ON (((+ (rt0.c2)))AND(((rt0.c1)<<(v0.c0))));
SELECT DISTINCT rt0.c0, v0.c2, rt0.c2 FROM rt0, v0, vt1 FULL OUTER JOIN t0 ON (((+ (rt0.c2)))AND(((rt0.c1)<<(v0.c0)))) WHERE ((((vt1.c0)) NOT BETWEEN (((((rt0.c4))>=((rt0.c4))))) AND (((((rt0.c0))>((v0.c0))))))) UNION SELECT DISTINCT rt0.c0, v0.c2, rt0.c2 FROM rt0, v0, vt1 FULL OUTER JOIN t0 ON (((+ (rt0.c2)))AND(((rt0.c1)<<(v0.c0)))) WHERE ((NOT ((((vt1.c0)) NOT BETWEEN (((((rt0.c4))>=((rt0.c4))))) AND (((((rt0.c0))>((v0.c0))))))))) UNION SELECT DISTINCT rt0.c0, v0.c2, rt0.c2 FROM rt0, v0, vt1 FULL OUTER JOIN t0 ON (((+ (rt0.c2)))AND(((rt0.c1)<<(v0.c0)))) WHERE ((((((vt1.c0)) NOT BETWEEN (((((rt0.c4))>=((rt0.c4))))) AND (((((rt0.c0))>((v0.c0))))))) ISNULL));
SELECT DISTINCT rt0.c0, v0.c2, rt0.c2 FROM rt0, v0, vt1 FULL OUTER JOIN t0 ON (((+ (rt0.c2)))AND(((rt0.c1)<<(v0.c0))));
SELECT rt0.c1, v0.c2, rt0.c3, t0.c0 FROM vt1, t0, rt0, v0 GROUP BY rt0.c1, v0.c2, rt0.c3, t0.c0;
SELECT rt0.c1, v0.c2, rt0.c3, t0.c0 FROM vt1, t0, rt0, v0 WHERE (PRINTF((rt0.c4 IN (rt0.c4)))) GROUP BY rt0.c1, v0.c2, rt0.c3, t0.c0 UNION SELECT rt0.c1, v0.c2, rt0.c3, t0.c0 FROM vt1, t0, rt0, v0 WHERE ((NOT (PRINTF((rt0.c4 IN (rt0.c4)))))) GROUP BY rt0.c1, v0.c2, rt0.c3, t0.c0 UNION SELECT ALL rt0.c1, v0.c2, rt0.c3, t0.c0 FROM vt1, t0, rt0, v0 WHERE (((PRINTF((rt0.c4 IN (rt0.c4)))) ISNULL)) GROUP BY rt0.c1, v0.c2, rt0.c3, t0.c0;
SELECT rt0.c1, v0.c2, rt0.c3, t0.c0 FROM vt1, t0, rt0, v0 GROUP BY rt0.c1, v0.c2, rt0.c3, t0.c0;
SELECT ALL v0.c0, rt0.c1, rt0.c2, vt1.c0, rt0.c4, v0.c1 FROM vt1, rt0, v0, t0 GROUP BY v0.c0, rt0.c1, rt0.c2, vt1.c0, rt0.c4, v0.c1;
SELECT ALL v0.c0, rt0.c1, rt0.c2, vt1.c0, rt0.c4, v0.c1 FROM vt1, rt0, v0, t0 GROUP BY v0.c0, rt0.c1, rt0.c2, vt1.c0, rt0.c4, v0.c1 HAVING MIN(((COUNT(AVG(v0.c2)))/(v0.c1))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2, vt1.c0, rt0.c4, v0.c1 FROM vt1, rt0, v0, t0 GROUP BY v0.c0, rt0.c1, rt0.c2, vt1.c0, rt0.c4, v0.c1 HAVING (NOT (MIN(((COUNT(AVG(v0.c2)))/(v0.c1))))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2, vt1.c0, rt0.c4, v0.c1 FROM vt1, rt0, v0, t0 GROUP BY v0.c0, rt0.c1, rt0.c2, vt1.c0, rt0.c4, v0.c1 HAVING ((MIN(((COUNT(AVG(v0.c2)))/(v0.c1)))) ISNULL);
SELECT ALL SUM('604572246') FROM vt1 ORDER BY ((vt1.c0)-(vt1.c0)) COLLATE RTRIM ASC, x'' COLLATE NOCASE COLLATE BINARY, ((((vt1.c0)>=(vt1.c0))) BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (((0.30752105257255113) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT * FROM vt1, v0;
SELECT * FROM vt1, v0 WHERE (NULL COLLATE RTRIM) UNION ALL SELECT * FROM vt1, v0 WHERE ((NOT (NULL COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt1, v0 WHERE (((NULL COLLATE RTRIM) ISNULL));
SELECT * FROM vt1, v0;
SELECT DISTINCT * FROM t0, vt1, rt0;
SELECT DISTINCT * FROM t0, vt1, rt0 WHERE (0Xffffffff928a7e9e) UNION SELECT DISTINCT * FROM t0, vt1, rt0 NOT INDEXED WHERE ((NOT (0xffffffff928a7e9e))) UNION SELECT DISTINCT * FROM t0, vt1, rt0 WHERE (((0Xffffffff928a7e9e) ISNULL));
SELECT DISTINCT * FROM t0, vt1, rt0;
SELECT v0.c1, rt0.c0, t0.c0, rt0.c4, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON load_extension(((v0.c1) BETWEEN (rt0.c0) AND (vt1.c0)), UPPER(v0.c1)) INNER JOIN v0 ON ((((((rt0.c2))>((v0.c2)))))>((x''))) LEFT OUTER JOIN t0 ON (((rt0.c1, (v0.c0 IN ()), (NOT (rt0.c2))))>=((((rt0.c0) NOT BETWEEN ('v^vf2d7') AND (0.7080505656521502)), IFNULL(DISTINCT rt0.c1, rt0.c3), (((v0.c0)) BETWEEN ((t0.c0)) AND (('Fw')))))) GROUP BY v0.c1, rt0.c0, t0.c0, rt0.c4, vt1.c0;
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING MAX(((t0.c0) IS FALSE)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING (NOT (MAX(((t0.c0) IS FALSE)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING ((MAX(((t0.c0) IS FALSE))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING MAX(((t0.c0) IS FALSE)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING (NOT (MAX(((t0.c0) IS FALSE)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING ((MAX(((t0.c0) IS FALSE))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT ALL * FROM rt0, t0, v0;
SELECT ALL * FROM rt0, t0, v0 WHERE (((((((((rt0.c0)AND(x'')))AND(rt0.c4)))OR(v0.c1)))OR(t0.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM rt0, t0, v0 WHERE ((NOT (((((((((rt0.c0)AND(x'')))AND(rt0.c4)))OR(v0.c1)))OR(t0.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM rt0, t0, v0 WHERE (((((((((((rt0.c0)AND(x'')))AND(rt0.c4)))OR(v0.c1)))OR(t0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt0, t0, v0;
SELECT DISTINCT t0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM t0, rt0;
SELECT DISTINCT t0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM t0, rt0 WHERE (CAST((((-1537507519, rt0.c4, rt0.c2)) BETWEEN ((rt0.c4, rt0.c0, rt0.c1)) AND ((t0.c0, rt0.c0, rt0.c3))) AS REAL)) UNION SELECT DISTINCT t0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM t0, rt0 WHERE ((NOT (CAST((((-1537507519, rt0.c4, rt0.c2)) BETWEEN ((rt0.c4, rt0.c0, rt0.c1)) AND ((t0.c0, rt0.c0, rt0.c3))) AS REAL)))) UNION SELECT DISTINCT t0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM t0, rt0 WHERE (((CAST((((-1537507519, rt0.c4, rt0.c2)) BETWEEN ((rt0.c4, rt0.c0, rt0.c1)) AND ((t0.c0, rt0.c0, rt0.c3))) AS REAL)) ISNULL));
SELECT DISTINCT t0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM t0, rt0;
SELECT ALL rt0.c3 FROM vt1, v0 RIGHT OUTER JOIN rt0 ON DATE(((((v0.c1)OR(v0.c0)))AND('y%I2')), '0.7289756579685632', ((rt0.c3) NOTNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM vt1, v0 RIGHT OUTER JOIN rt0 ON DATE(((((v0.c1)OR(v0.c0)))AND('y%I2')), '0.7289756579685632', ((rt0.c3) NOTNULL)) WHERE (TYPEOF(((rt0.c3)-(v0.c0)))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM vt1, v0 RIGHT OUTER JOIN rt0 ON DATE(((((v0.c1)OR(v0.c0)))AND('y%I2')), '0.7289756579685632', ((rt0.c3) NOTNULL)) WHERE ((NOT (TYPEOF(((rt0.c3)-(v0.c0)))))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM vt1, v0 RIGHT OUTER JOIN rt0 ON DATE(((((v0.c1)OR(v0.c0)))AND('y%I2')), '0.7289756579685632', ((rt0.c3) NOTNULL)) WHERE (((TYPEOF(((rt0.c3)-(v0.c0)))) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM vt1, v0 RIGHT OUTER JOIN rt0 ON DATE(((((v0.c1)OR(v0.c0)))AND('y%I2')), '0.7289756579685632', ((rt0.c3) NOTNULL)) GROUP BY rt0.c3;
SELECT rt0.c1, v0.c1, rt0.c3 FROM t0, v0, vt1, rt0 GROUP BY rt0.c1, v0.c1, rt0.c3;
SELECT rt0.c1, v0.c1, rt0.c3 FROM t0, v0, vt1, rt0 GROUP BY rt0.c1, v0.c1, rt0.c3 HAVING ((((rt0.c0)<<(COUNT(TOTAL(rt0.c0))))) NOT BETWEEN (MIN(NULL)) AND (AVG(MAX(NULL)))) UNION ALL SELECT rt0.c1, v0.c1, rt0.c3 FROM t0, v0, vt1, rt0 GROUP BY rt0.c1, v0.c1, rt0.c3 HAVING (NOT (((((rt0.c0)<<(COUNT(TOTAL(rt0.c0))))) NOT BETWEEN (MIN(NULL)) AND (AVG(MAX(NULL)))))) UNION ALL SELECT ALL rt0.c1, v0.c1, rt0.c3 FROM t0, v0, vt1, rt0 GROUP BY rt0.c1, v0.c1, rt0.c3 HAVING ((((((rt0.c0)<<(COUNT(TOTAL(rt0.c0))))) NOT BETWEEN (MIN(NULL)) AND (AVG(MAX(NULL))))) ISNULL);
SELECT ALL rt0.c4, t0.c0, rt0.c0, rt0.c1 FROM t0, vt1, rt0 RIGHT OUTER JOIN v0 ON (((v0.c2, ((((((((NULL)OR(rt0.c0)))OR(v0.c2)))AND(v0.c2)))AND(rt0.c3)), v0.c0))==((CAST(rt0.c4 AS INTEGER), UPPER(v0.c1), NULL)));
SELECT ALL rt0.c4, t0.c0, rt0.c0, rt0.c1 FROM t0, vt1 NOT INDEXED, rt0 RIGHT OUTER JOIN v0 ON (((v0.c2, ((((((((NULL)OR(rt0.c0)))OR(v0.c2)))AND(v0.c2)))AND(rt0.c3)), v0.c0))==((CAST(rt0.c4 AS INTEGER), UPPER(v0.c1), NULL))) WHERE (((CASE v0.c2  WHEN x'' THEN v0.c2 WHEN vt1.c0 THEN rt0.c0 WHEN v0.c1 THEN vt1.c0 END) NOT NULL)) UNION ALL SELECT rt0.c4, t0.c0, rt0.c0, rt0.c1 FROM t0, vt1, rt0 RIGHT OUTER JOIN v0 ON (((v0.c2, ((((((((NULL)OR(rt0.c0)))OR(v0.c2)))AND(v0.c2)))AND(rt0.c3)), v0.c0))==((CAST(rt0.c4 AS INTEGER), UPPER(v0.c1), NULL))) WHERE ((NOT (((CASE v0.c2  WHEN x'' THEN v0.c2 WHEN vt1.c0 THEN rt0.c0 WHEN v0.c1 THEN vt1.c0 END) NOT NULL)))) UNION ALL SELECT ALL rt0.c4, t0.c0, rt0.c0, rt0.c1 FROM t0, vt1, rt0 RIGHT OUTER JOIN v0 ON (((v0.c2, ((((((((NULL)OR(rt0.c0)))OR(v0.c2)))AND(v0.c2)))AND(rt0.c3)), v0.c0))=((CAST(rt0.c4 AS INTEGER), UPPER(v0.c1), NULL))) WHERE (((((CASE v0.c2  WHEN x'' THEN v0.c2 WHEN vt1.c0 THEN rt0.c0 WHEN v0.c1 THEN vt1.c0 END) NOT NULL)) ISNULL));
SELECT ALL rt0.c4, t0.c0, rt0.c0, rt0.c1 FROM t0, vt1, rt0 RIGHT OUTER JOIN v0 ON (((v0.c2, ((((((((NULL)OR(rt0.c0)))OR(v0.c2)))AND(v0.c2)))AND(rt0.c3)), v0.c0))==((CAST(rt0.c4 AS INTEGER), UPPER(v0.c1), NULL)));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt1 ON v0.c2 LEFT OUTER JOIN v0 ON x'3a9e99d4' RIGHT OUTER JOIN rt0 ON ((((rt0.c1 COLLATE BINARY)AND(((v0.c1) NOTNULL))))OR(((rt0.c1) NOT NULL)));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((x'')) BETWEEN ((vt1.c0)) AND ((((vt1.c0) NOTNULL))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((x'')) BETWEEN ((vt1.c0)) AND ((((vt1.c0) NOTNULL))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((x'')) BETWEEN ((vt1.c0)) AND ((((vt1.c0) NOTNULL))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL * FROM t0, vt1;
SELECT * FROM t0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))) ISNULL)) UNION ALL SELECT * FROM t0, vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))) ISNULL)))) UNION ALL SELECT ALL * FROM t0, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))) ISNULL)) ISNULL));
SELECT ALL * FROM t0, vt1;
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0, rt0.c2, rt0.c3 FROM rt0, vt1, v0;
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0, rt0.c2, rt0.c3 FROM rt0, vt1, v0 WHERE ((v0.c2 COLLATE NOCASE IN ((+ (rt0.c1))))) UNION SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0, rt0.c2, rt0.c3 FROM rt0, vt1, v0 WHERE ((NOT ((v0.c2 COLLATE NOCASE IN ((+ (rt0.c1))))))) UNION SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0, rt0.c2, rt0.c3 FROM rt0, vt1, v0 WHERE ((((v0.c2 COLLATE NOCASE IN ((+ (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0, rt0.c2, rt0.c3 FROM rt0, vt1, v0;
SELECT v0.c2, rt0.c3, v0.c1, rt0.c4, vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0, vt1 GROUP BY v0.c2, rt0.c3, v0.c1, rt0.c4, vt1.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT v0.c2, rt0.c3, v0.c1, rt0.c4, vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0, vt1 WHERE (NULL) GROUP BY v0.c2, rt0.c3, v0.c1, rt0.c4, vt1.c0, rt0.c0, rt0.c2, rt0.c1 UNION SELECT v0.c2, rt0.c3, v0.c1, rt0.c4, vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0, vt1 WHERE ((NOT (NULL))) GROUP BY v0.c2, rt0.c3, v0.c1, rt0.c4, vt1.c0, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL v0.c2, rt0.c3, v0.c1, rt0.c4, vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0, vt1 WHERE (((NULL) ISNULL)) GROUP BY v0.c2, rt0.c3, v0.c1, rt0.c4, vt1.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT v0.c2, rt0.c3, v0.c1, rt0.c4, vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM v0, rt0, vt1 GROUP BY v0.c2, rt0.c3, v0.c1, rt0.c4, vt1.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c4, rt0.c0, t0.c0, rt0.c2, vt1.c0, rt0.c1 FROM t0, vt1, rt0 GROUP BY rt0.c4, rt0.c0, t0.c0, rt0.c2, vt1.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c0, t0.c0, rt0.c2, vt1.c0, rt0.c1 FROM t0, vt1, rt0 GROUP BY rt0.c4, rt0.c0, t0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING ((((((COUNT(rt0.c1))AND(MAX(9.34278967E8))))AND(rt0.c1)))IS(CAST(rt0.c0 AS REAL))) UNION ALL SELECT ALL rt0.c4, rt0.c0, t0.c0, rt0.c2, vt1.c0, rt0.c1 FROM t0, vt1, rt0 GROUP BY rt0.c4, rt0.c0, t0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING (NOT (((((((COUNT(rt0.c1))AND(MAX(9.34278967E8))))AND(rt0.c1)))IS(CAST(rt0.c0 AS REAL))))) UNION ALL SELECT ALL rt0.c4, rt0.c0, t0.c0, rt0.c2, vt1.c0, rt0.c1 FROM t0, vt1, rt0 GROUP BY rt0.c4, rt0.c0, t0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING ((((((((COUNT(rt0.c1))AND(MAX(9.34278967E8))))AND(rt0.c1)))IS(CAST(rt0.c0 AS REAL)))) ISNULL);
SELECT rt0.c4, rt0.c0, t0.c0, rt0.c2, vt1.c0, rt0.c1 FROM t0, vt1, rt0 GROUP BY rt0.c4, rt0.c0, t0.c0, rt0.c2, vt1.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c0, t0.c0, rt0.c2, vt1.c0, rt0.c1 FROM t0, vt1, rt0 GROUP BY rt0.c4, rt0.c0, t0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING ((((((COUNT(rt0.c1))AND(MAX(9.34278967E8))))AND(rt0.c1)))IS(CAST(rt0.c0 AS REAL))) UNION ALL SELECT ALL rt0.c4, rt0.c0, t0.c0, rt0.c2, vt1.c0, rt0.c1 FROM t0, vt1, rt0 GROUP BY rt0.c4, rt0.c0, t0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING (NOT (((((((COUNT(rt0.c1))AND(MAX(9.34278967E8))))AND(rt0.c1)))IS(CAST(rt0.c0 AS REAL))))) UNION ALL SELECT ALL rt0.c4, rt0.c0, t0.c0, rt0.c2, vt1.c0, rt0.c1 FROM t0, vt1, rt0 GROUP BY rt0.c4, rt0.c0, t0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING ((((((((COUNT(rt0.c1))AND(MAX(9.34278967E8))))AND(rt0.c1)))IS(CAST(rt0.c0 AS REAL)))) ISNULL);
SELECT rt0.c4, rt0.c0, t0.c0, rt0.c2, vt1.c0, rt0.c1 FROM t0, vt1, rt0 GROUP BY rt0.c4, rt0.c0, t0.c0, rt0.c2, vt1.c0, rt0.c1;
SELECT * FROM rt0, vt1, v0 RIGHT OUTER JOIN t0 ON CAST((v0.c1 IN ()) AS TEXT);
SELECT ALL * FROM rt0, vt1, v0 RIGHT OUTER JOIN t0 ON CAST((v0.c1 IN ()) AS TEXT) WHERE (TYPEOF(DISTINCT rt0.c3)) UNION ALL SELECT * FROM rt0, vt1, v0 RIGHT OUTER JOIN t0 ON CAST((v0.c1 IN ()) AS TEXT) WHERE ((NOT (TYPEOF(DISTINCT rt0.c3)))) UNION ALL SELECT * FROM rt0, vt1, v0 RIGHT OUTER JOIN t0 ON CAST((v0.c1 IN ()) AS TEXT) WHERE (((TYPEOF(DISTINCT rt0.c3)) ISNULL));
SELECT * FROM rt0, vt1, v0 RIGHT OUTER JOIN t0 ON CAST((v0.c1 IN ()) AS TEXT);
SELECT DISTINCT v0.c1, rt0.c2, v0.c0, v0.c2, rt0.c0, rt0.c3, rt0.c1 FROM v0, t0, rt0;
SELECT DISTINCT v0.c1, rt0.c2, v0.c0, v0.c2, rt0.c0, rt0.c3, rt0.c1 FROM v0, t0, rt0 WHERE (((rt0.c2)*(t0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT v0.c1, rt0.c2, v0.c0, v0.c2, rt0.c0, rt0.c3, rt0.c1 FROM v0, t0, rt0 WHERE ((NOT (((rt0.c2)*(t0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT v0.c1, rt0.c2, v0.c0, v0.c2, rt0.c0, rt0.c3, rt0.c1 FROM v0, t0, rt0 WHERE (((((rt0.c2)*(t0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT v0.c1, rt0.c2, v0.c0, v0.c2, rt0.c0, rt0.c3, rt0.c1 FROM v0, t0, rt0;
SELECT ALL vt1.c0, v0.c0, v0.c2 FROM vt1, v0 GROUP BY vt1.c0, v0.c0, v0.c2;
SELECT vt1.c0, v0.c0, v0.c2 FROM vt1, v0 WHERE ((- (((((v0.c2)OR(v0.c0)))OR(vt1.c0))))) GROUP BY vt1.c0, v0.c0, v0.c2 UNION SELECT vt1.c0, v0.c0, v0.c2 FROM vt1, v0 WHERE ((NOT ((- (((((v0.c2)OR(v0.c0)))OR(vt1.c0))))))) GROUP BY vt1.c0, v0.c0, v0.c2 UNION SELECT ALL vt1.c0, v0.c0, v0.c2 FROM vt1, v0 WHERE ((((- (((((v0.c2)OR(v0.c0)))OR(vt1.c0))))) ISNULL)) GROUP BY vt1.c0, v0.c0, v0.c2;
SELECT ALL vt1.c0, v0.c0, v0.c2 FROM vt1, v0 GROUP BY vt1.c0, v0.c0, v0.c2;
SELECT v0.c1, t0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c1 FROM vt1, t0, v0 LEFT OUTER JOIN rt0 ON TRIM(DISTINCT CAST(rt0.c1 AS REAL), rt0.c4 COLLATE BINARY) GROUP BY v0.c1, t0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c1;
SELECT v0.c1, t0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c1 FROM vt1, t0, v0 LEFT OUTER JOIN rt0 ON TRIM(DISTINCT CAST(rt0.c1 AS REAL), rt0.c4 COLLATE BINARY) GROUP BY v0.c1, t0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c1 HAVING ((COUNT(COUNT(SUM(rt0.c2)))) NOT BETWEEN (COUNT(*)) AND (CAST(AVG(AVG(rt0.c1)) AS BLOB))) UNION ALL SELECT v0.c1, t0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c1 FROM vt1, t0, v0 LEFT OUTER JOIN rt0 ON TRIM(DISTINCT CAST(rt0.c1 AS REAL), rt0.c4 COLLATE BINARY) GROUP BY v0.c1, t0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c1 HAVING (NOT (((COUNT(COUNT(SUM(rt0.c2)))) NOT BETWEEN (COUNT(*)) AND (CAST(AVG(AVG(rt0.c1)) AS BLOB))))) UNION ALL SELECT ALL v0.c1, t0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c1 FROM vt1, t0, v0 LEFT OUTER JOIN rt0 ON TRIM(DISTINCT CAST(rt0.c1 AS REAL), rt0.c4 COLLATE BINARY) GROUP BY v0.c1, t0.c0, rt0.c2, v0.c0, rt0.c4, rt0.c1 HAVING ((((COUNT(COUNT(SUM(rt0.c2)))) NOT BETWEEN (COUNT(*)) AND (CAST(AVG(AVG(rt0.c1)) AS BLOB)))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (0.19411867911293612) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (0.19411867911293612))) UNION ALL SELECT ALL * FROM vt1 WHERE (((0.19411867911293612) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM v0, t0, vt1, rt0;
SELECT DISTINCT * FROM v0, t0, vt1, rt0 WHERE (((CASE vt1.c0  WHEN t0.c0 THEN v0.c2 ELSE v0.c1 END)%(CAST(rt0.c4 AS TEXT)))) UNION SELECT DISTINCT * FROM v0, t0, vt1, rt0 WHERE ((NOT (((CASE vt1.c0  WHEN t0.c0 THEN v0.c2 ELSE v0.c1 END)%(CAST(rt0.c4 AS TEXT)))))) UNION SELECT DISTINCT * FROM v0, t0, vt1, rt0 WHERE (((((CASE vt1.c0  WHEN t0.c0 THEN v0.c2 ELSE v0.c1 END)%(CAST(rt0.c4 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM v0, t0, vt1, rt0;
SELECT ALL rt0.c3, rt0.c1, v0.c1 FROM vt1, v0 INNER JOIN rt0 ON vt1.c0 INNER JOIN t0 ON (((rt0.c1 IN (rt0.c3, rt0.c0)))%(((rt0.c0) NOTNULL))) GROUP BY rt0.c3, rt0.c1, v0.c1;
SELECT rt0.c3, rt0.c1, v0.c1 FROM vt1, v0 INNER JOIN rt0 ON vt1.c0 INNER JOIN t0 ON (((rt0.c1 IN (rt0.c3, rt0.c0)))%(((rt0.c0) NOTNULL))) WHERE (v0.c2 COLLATE RTRIM) GROUP BY rt0.c3, rt0.c1, v0.c1 UNION SELECT ALL rt0.c3, rt0.c1, v0.c1 FROM vt1, v0 INNER JOIN rt0 ON vt1.c0 INNER JOIN t0 ON (((rt0.c1 IN (rt0.c3, rt0.c0)))%(((rt0.c0) NOTNULL))) WHERE ((NOT (v0.c2 COLLATE RTRIM))) GROUP BY rt0.c3, rt0.c1, v0.c1 UNION SELECT rt0.c3, rt0.c1, v0.c1 FROM vt1, v0 INNER JOIN rt0 ON vt1.c0 INNER JOIN t0 ON (((rt0.c1 IN (rt0.c3, rt0.c0)))%(((rt0.c0) NOTNULL))) WHERE (((v0.c2 COLLATE RTRIM) ISNULL)) GROUP BY rt0.c3, rt0.c1, v0.c1;
SELECT ALL rt0.c3, rt0.c1, v0.c1 FROM vt1, v0 INNER JOIN rt0 ON vt1.c0 INNER JOIN t0 ON (((rt0.c1 IN (rt0.c3, rt0.c0)))%(((rt0.c0) NOTNULL))) GROUP BY rt0.c3, rt0.c1, v0.c1;
SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING COUNT(CASE MAX(v0.c0)  WHEN MAX(v0.c2) THEN v0.c1 WHEN TOTAL(v0.c2) THEN AVG(t0.c0) WHEN SUM(v0.c1) THEN t0.c0 ELSE COUNT(*) END) UNION ALL SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING (NOT (COUNT(CASE MAX(v0.c0)  WHEN MAX(v0.c2) THEN v0.c1 WHEN TOTAL(v0.c2) THEN AVG(t0.c0) WHEN SUM(v0.c1) THEN t0.c0 ELSE COUNT(*) END))) UNION ALL SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING ((COUNT(CASE MAX(v0.c0)  WHEN MAX(v0.c2) THEN v0.c1 WHEN TOTAL(v0.c2) THEN AVG(t0.c0) WHEN SUM(v0.c1) THEN t0.c0 ELSE COUNT(*) END)) ISNULL);
SELECT * FROM v0, vt1;
SELECT ALL * FROM v0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((((v0.c0)OR(v0.c0)))AND('209966553')))) AND (('829367084')))) ORDER BY CASE WHEN vt1.c0 THEN NULL END  NULLS FIRST;
SELECT * FROM v0, vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((((((v0.c0)OR(v0.c0)))AND('209966553')))) AND (('829367084')))))) ORDER BY CASE WHEN vt1.c0 THEN NULL END  NULLS FIRST;
SELECT * FROM v0, vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((((((v0.c0)OR(v0.c0)))AND('209966553')))) AND (('829367084')))) ISNULL)) ORDER BY CASE WHEN vt1.c0 THEN NULL END  NULLS FIRST;
SELECT * FROM v0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE (((TRIM(DISTINCT rt0.c2)) BETWEEN (((rt0.c0) NOT BETWEEN (x'') AND (rt0.c0))) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4))))) GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((TRIM(DISTINCT rt0.c2)) BETWEEN (((rt0.c0) NOT BETWEEN (x'') AND (rt0.c0))) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4))))))) GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE (((((TRIM(DISTINCT rt0.c2)) BETWEEN (((rt0.c0) NOT BETWEEN (x'') AND (rt0.c0))) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4))))) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c0;
SELECT v0.c2, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c1, t0.c0;
SELECT v0.c2, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c1, t0.c0 HAVING GROUP_CONCAT(0.38648665653924497) UNION ALL SELECT ALL v0.c2, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c1, t0.c0 HAVING (NOT (GROUP_CONCAT(0.38648665653924497))) UNION ALL SELECT v0.c2, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c1, t0.c0 HAVING ((GROUP_CONCAT(0.38648665653924497)) ISNULL);
SELECT v0.c2, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c1, t0.c0;
SELECT v0.c2, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c1, t0.c0 HAVING GROUP_CONCAT(0.38648665653924497) UNION ALL SELECT ALL v0.c2, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c1, t0.c0 HAVING (NOT (GROUP_CONCAT(0.38648665653924497))) UNION ALL SELECT v0.c2, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c1, t0.c0 HAVING ((GROUP_CONCAT(0.38648665653924497)) ISNULL);
SELECT v0.c2, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c1, t0.c0;
SELECT ALL v0.c2, v0.c1 FROM v0, t0, vt1;
SELECT v0.c2, v0.c1 FROM v0, t0, vt1 WHERE (LIKELY(x'')) UNION ALL SELECT ALL v0.c2, v0.c1 FROM v0, t0, vt1 WHERE ((NOT (LIKELY(x'')))) UNION ALL SELECT ALL v0.c2, v0.c1 FROM v0, t0, vt1 WHERE (((LIKELY(x'')) ISNULL));
SELECT ALL v0.c2, v0.c1 FROM v0, t0, vt1;
SELECT DISTINCT * FROM v0, vt1, rt0;
SELECT DISTINCT * FROM v0, vt1, rt0 WHERE (((((((v0.c1)>(rt0.c0)))AND(SQLITE_SOURCE_ID())))AND((((vt1.c0, rt0.c4, rt0.c3))<((v0.c2, vt1.c0, rt0.c2)))))) UNION SELECT DISTINCT * FROM v0, vt1, rt0 WHERE ((NOT (((((((v0.c1)>(rt0.c0)))AND(SQLITE_SOURCE_ID())))AND((((vt1.c0, rt0.c4, rt0.c3))<((v0.c2, vt1.c0, rt0.c2)))))))) UNION SELECT DISTINCT * FROM v0, vt1, rt0 WHERE (((((((((v0.c1)>(rt0.c0)))AND(SQLITE_SOURCE_ID())))AND((((vt1.c0, rt0.c4, rt0.c3))<((v0.c2, vt1.c0, rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM v0, vt1, rt0;
SELECT ALL rt0.c4, t0.c0, v0.c0, rt0.c0, v0.c1, rt0.c2, vt1.c0 FROM rt0, v0, vt1, t0 GROUP BY rt0.c4, t0.c0, v0.c0, rt0.c0, v0.c1, rt0.c2, vt1.c0;
SELECT ALL rt0.c4, t0.c0, v0.c0, rt0.c0, v0.c1, rt0.c2, vt1.c0 FROM rt0, v0, vt1, t0 WHERE (CAST(t0.c0 AS TEXT)) GROUP BY rt0.c4, t0.c0, v0.c0, rt0.c0, v0.c1, rt0.c2, vt1.c0 UNION SELECT ALL rt0.c4, t0.c0, v0.c0, rt0.c0, v0.c1, rt0.c2, vt1.c0 FROM rt0, v0, vt1, t0 WHERE ((NOT (CAST(t0.c0 AS TEXT)))) GROUP BY rt0.c4, t0.c0, v0.c0, rt0.c0, v0.c1, rt0.c2, vt1.c0 UNION SELECT rt0.c4, t0.c0, v0.c0, rt0.c0, v0.c1, rt0.c2, vt1.c0 FROM rt0, v0, vt1, t0 WHERE (((CAST(t0.c0 AS TEXT)) ISNULL)) GROUP BY rt0.c4, t0.c0, v0.c0, rt0.c0, v0.c1, rt0.c2, vt1.c0;
SELECT ALL rt0.c4, t0.c0, v0.c0, rt0.c0, v0.c1, rt0.c2, vt1.c0 FROM rt0, v0, vt1, t0 GROUP BY rt0.c4, t0.c0, v0.c0, rt0.c0, v0.c1, rt0.c2, vt1.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c4 FROM t0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4;
SELECT ALL rt0.c2, rt0.c3, rt0.c4 FROM t0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4 HAVING CASE WHEN PRINTF(rt0.c2) THEN TYPEOF(DISTINCT rt0.c3) ELSE ((NULL)GLOB(AVG(SUM(TOTAL(SUM(AVG(MAX(TOTAL(GROUP_CONCAT(AVG(GROUP_CONCAT(MIN(rt0.c3))))))))))))) END UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c4 FROM t0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4 HAVING (NOT (CASE WHEN PRINTF(rt0.c2) THEN TYPEOF(DISTINCT rt0.c3) ELSE ((NULL)GLOB(AVG(SUM(TOTAL(SUM(AVG(MAX(TOTAL(GROUP_CONCAT(AVG(GROUP_CONCAT(MIN(rt0.c3))))))))))))) END)) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c4 FROM t0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4 HAVING ((CASE WHEN PRINTF(rt0.c2) THEN TYPEOF(DISTINCT rt0.c3) ELSE ((NULL)GLOB(AVG(SUM(TOTAL(SUM(AVG(MAX(TOTAL(GROUP_CONCAT(AVG(GROUP_CONCAT(MIN(rt0.c3))))))))))))) END) ISNULL);
SELECT ALL rt0.c4, v0.c1, vt1.c0, rt0.c0, v0.c0 FROM t0, rt0, vt1, v0;
SELECT ALL rt0.c4, v0.c1, vt1.c0, rt0.c0, v0.c0 FROM t0, rt0, vt1, v0 WHERE (((rt0.c3 COLLATE NOCASE)*(NULL))) UNION ALL SELECT rt0.c4, v0.c1, vt1.c0, rt0.c0, v0.c0 FROM t0, rt0, vt1, v0 WHERE ((NOT (((rt0.c3 COLLATE NOCASE)*(NULL))))) UNION ALL SELECT ALL rt0.c4, v0.c1, vt1.c0, rt0.c0, v0.c0 FROM t0, rt0, vt1, v0 WHERE (((((rt0.c3 COLLATE NOCASE)*(NULL))) ISNULL));
SELECT ALL rt0.c4, v0.c1, vt1.c0, rt0.c0, v0.c0 FROM t0, rt0, vt1, v0;
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT ((- (t0.c0))))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT ((NOT ((- (t0.c0))))))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((((NOT ((- (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT ALL t0.c0, rt0.c3 FROM rt0, t0 GROUP BY t0.c0, rt0.c3;
SELECT t0.c0, rt0.c3 FROM rt0, t0 WHERE (json_quote(rt0.c3 COLLATE RTRIM)) GROUP BY t0.c0, rt0.c3 UNION SELECT ALL t0.c0, rt0.c3 FROM rt0, t0 WHERE ((NOT (json_quote(rt0.c3 COLLATE RTRIM)))) GROUP BY t0.c0, rt0.c3 UNION SELECT t0.c0, rt0.c3 FROM rt0, t0 WHERE (((json_quote(rt0.c3 COLLATE RTRIM)) ISNULL)) GROUP BY t0.c0, rt0.c3;
SELECT ALL t0.c0, rt0.c3 FROM rt0, t0 GROUP BY t0.c0, rt0.c3;
SELECT v0.c0, v0.c1, v0.c2 FROM vt1, v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM vt1, v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING TOTAL(AVG(MIN(vt1.c0))) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2 FROM vt1, v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (NOT (TOTAL(AVG(MIN(vt1.c0))))) UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM vt1, v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING ((TOTAL(AVG(MIN(vt1.c0)))) ISNULL);
SELECT ALL v0.c0, t0.c0, v0.c1, rt0.c3, v0.c2, rt0.c0, rt0.c4, rt0.c2, rt0.c1, vt1.c0 FROM t0, rt0, vt1, v0;
SELECT v0.c0, t0.c0, v0.c1, rt0.c3, v0.c2, rt0.c0, rt0.c4, rt0.c2, rt0.c1, vt1.c0 FROM t0, rt0, vt1, v0 WHERE (((TRIM(NULL, rt0.c0))=(rt0.c2))) UNION ALL SELECT ALL v0.c0, t0.c0, v0.c1, rt0.c3, v0.c2, rt0.c0, rt0.c4, rt0.c2, rt0.c1, vt1.c0 FROM t0, rt0, vt1, v0 WHERE ((NOT (((TRIM(NULL, rt0.c0))==(rt0.c2))))) UNION ALL SELECT ALL v0.c0, t0.c0, v0.c1, rt0.c3, v0.c2, rt0.c0, rt0.c4, rt0.c2, rt0.c1, vt1.c0 FROM t0, rt0, vt1, v0 WHERE (((((TRIM(NULL, rt0.c0))=(rt0.c2))) ISNULL));
SELECT ALL v0.c0, t0.c0, v0.c1, rt0.c3, v0.c2, rt0.c0, rt0.c4, rt0.c2, rt0.c1, vt1.c0 FROM t0, rt0, vt1, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((v0.c2 IN (v0.c2, (- (v0.c2))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((v0.c2 IN (v0.c2, (- (v0.c2))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((v0.c2 IN (v0.c2, (- (v0.c2))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c3, rt0.c2, v0.c1, v0.c0, rt0.c1, rt0.c0 FROM rt0, t0, v0, vt1 GROUP BY rt0.c3, rt0.c2, v0.c1, v0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, v0.c1, v0.c0, rt0.c1, rt0.c0 FROM rt0, t0, v0, vt1 WHERE ((((CAST(v0.c1 AS REAL)))<=((((0Xffffffffcc768acb) NOT NULL))))) GROUP BY rt0.c3, rt0.c2, v0.c1, v0.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c2, v0.c1, v0.c0, rt0.c1, rt0.c0 FROM rt0, t0, v0, vt1 WHERE ((NOT ((((CAST(v0.c1 AS REAL)))<=((((0Xffffffffcc768acb) NOT NULL))))))) GROUP BY rt0.c3, rt0.c2, v0.c1, v0.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c2, v0.c1, v0.c0, rt0.c1, rt0.c0 FROM rt0 NOT INDEXED, t0, v0, vt1 WHERE ((((((CAST(v0.c1 AS REAL)))<=((((0xffffffffcc768acb) NOT NULL))))) ISNULL)) GROUP BY rt0.c3, rt0.c2, v0.c1, v0.c0, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c2, v0.c1, v0.c0, rt0.c1, rt0.c0 FROM rt0, t0, v0, vt1 GROUP BY rt0.c3, rt0.c2, v0.c1, v0.c0, rt0.c1, rt0.c0;
SELECT vt1.c0, v0.c2, v0.c0, t0.c0, v0.c1 FROM vt1 RIGHT OUTER JOIN v0 ON CAST(v0.c1 AS INTEGER) COLLATE NOCASE FULL OUTER JOIN t0 ON ((((((((((v0.c0)OR(vt1.c0)))OR(v0.c0)))AND(v0.c1)))AND(x'')))&(NULL)) GROUP BY vt1.c0, v0.c2, v0.c0, t0.c0, v0.c1;
SELECT ALL vt1.c0, v0.c2, v0.c0, t0.c0, v0.c1 FROM vt1 RIGHT OUTER JOIN v0 ON CAST(v0.c1 AS INTEGER) COLLATE NOCASE FULL OUTER JOIN t0 ON ((((((((((v0.c0)OR(vt1.c0)))OR(v0.c0)))AND(v0.c1)))AND(x'')))&(NULL)) GROUP BY vt1.c0, v0.c2, v0.c0, t0.c0, v0.c1 HAVING AVG(((v0.c1)-(AVG(vt1.c0)))) UNION ALL SELECT ALL vt1.c0, v0.c2, v0.c0, t0.c0, v0.c1 FROM vt1 RIGHT OUTER JOIN v0 ON CAST(v0.c1 AS INTEGER) COLLATE NOCASE FULL OUTER JOIN t0 ON ((((((((((v0.c0)OR(vt1.c0)))OR(v0.c0)))AND(v0.c1)))AND(x'')))&(NULL)) GROUP BY vt1.c0, v0.c2, v0.c0, t0.c0, v0.c1 HAVING (NOT (AVG(((v0.c1)-(AVG(vt1.c0)))))) UNION ALL SELECT vt1.c0, v0.c2, v0.c0, t0.c0, v0.c1 FROM vt1 RIGHT OUTER JOIN v0 ON CAST(v0.c1 AS INTEGER) COLLATE NOCASE FULL OUTER JOIN t0 ON ((((((((((v0.c0)OR(vt1.c0)))OR(v0.c0)))AND(v0.c1)))AND(x'')))&(NULL)) GROUP BY vt1.c0, v0.c2, v0.c0, t0.c0, v0.c1 HAVING ((AVG(((v0.c1)-(AVG(vt1.c0))))) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((rt0.c0 COLLATE NOCASE)OR(SQLITE_VERSION())))AND(((-2.122226778E9)IS(rt0.c3)))))OR(((rt0.c3)LIKE(rt0.c2)))))AND(NULL))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((((((rt0.c0 COLLATE NOCASE)OR(SQLITE_VERSION())))AND(((-2.122226778E9)IS(rt0.c3)))))OR(((rt0.c3)LIKE(rt0.c2)))))AND(NULL))))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((((rt0.c0 COLLATE NOCASE)OR(SQLITE_VERSION())))AND(((-2.122226778E9)IS(rt0.c3)))))OR(((rt0.c3)LIKE(rt0.c2)))))AND(NULL))) ISNULL));
SELECT ALL rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM t0, vt1 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND(((((vt1.c0)AND(rt0.c4)))AND('0.07800164024929113')))))AND(t0.c0));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM t0, vt1 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND(((((vt1.c0)AND(rt0.c4)))AND('0.07800164024929113')))))AND(t0.c0)) WHERE ((((- (rt0.c2)))*((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt1.c0)))))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM t0, vt1 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND(((((vt1.c0)AND(rt0.c4)))AND('0.07800164024929113')))))AND(t0.c0)) WHERE ((NOT ((((- (rt0.c2)))*((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt1.c0)))))))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM t0, vt1 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND(((((vt1.c0)AND(rt0.c4)))AND('0.07800164024929113')))))AND(t0.c0)) WHERE ((((((- (rt0.c2)))*((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt1.c0)))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM t0, vt1 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND(((((vt1.c0)AND(rt0.c4)))AND('0.07800164024929113')))))AND(t0.c0));
SELECT rt0.c4, v0.c1, rt0.c3 FROM v0, rt0, t0 GROUP BY rt0.c4, v0.c1, rt0.c3;
SELECT rt0.c4, v0.c1, rt0.c3 FROM v0, rt0, t0 WHERE (CASE ((v0.c1) IS FALSE)  WHEN '*耤햇%' THEN (v0.c2 IN ()) WHEN '' THEN '1411324475' WHEN ((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c4)) THEN '' END) GROUP BY rt0.c4, v0.c1, rt0.c3 UNION SELECT rt0.c4, v0.c1, rt0.c3 FROM v0, rt0, t0 WHERE ((NOT (CASE ((v0.c1) IS FALSE)  WHEN '*耤햇%' THEN (v0.c2 IN ()) WHEN '' THEN '1411324475' WHEN ((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c4)) THEN '' END))) GROUP BY rt0.c4, v0.c1, rt0.c3 UNION SELECT rt0.c4, v0.c1, rt0.c3 FROM v0, rt0, t0 WHERE (((CASE ((v0.c1) IS FALSE)  WHEN '*耤햇%' THEN (v0.c2 IN ()) WHEN '' THEN '1411324475' WHEN ((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c4)) THEN '' END) ISNULL)) GROUP BY rt0.c4, v0.c1, rt0.c3;
SELECT rt0.c4, v0.c1, rt0.c3 FROM v0, rt0, t0 GROUP BY rt0.c4, v0.c1, rt0.c3;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING x'' UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (NOT (x'')) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING ((x'') ISNULL);
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING x'' UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (NOT (x'')) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING ((x'') ISNULL);
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE ((('/d')|(rt0.c3))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT ((('/d')|(rt0.c3))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((((('/d')|(rt0.c3))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((SQLITE_COMPILEOPTION_USED(t0.c0))) AND ((((vt1.c0) ISNULL))))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((SQLITE_COMPILEOPTION_USED(t0.c0))) AND ((((vt1.c0) ISNULL))))))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((SQLITE_COMPILEOPTION_USED(t0.c0))) AND ((((vt1.c0) ISNULL))))) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT ALL rt0.c1, v0.c0 FROM v0 INNER JOIN vt1 ON ((((((v0.c1) NOTNULL))AND((+ (v0.c1)))))OR(rt0.c3)) LEFT OUTER JOIN rt0 ON 'C<뱼8_髙Ed>' COLLATE NOCASE GROUP BY rt0.c1, v0.c0;
SELECT ALL rt0.c1, v0.c0 FROM v0 INNER JOIN vt1 ON ((((((v0.c1) NOTNULL))AND((+ (v0.c1)))))OR(rt0.c3)) LEFT OUTER JOIN rt0 ON 'C<뱼8_髙Ed>' COLLATE NOCASE WHERE (((((rt0.c0)|(v0.c1))) BETWEEN (((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2))) AND (rt0.c0))) GROUP BY rt0.c1, v0.c0 UNION SELECT rt0.c1, v0.c0 FROM v0 INNER JOIN vt1 ON ((((((v0.c1) NOTNULL))AND((+ (v0.c1)))))OR(rt0.c3)) LEFT OUTER JOIN rt0 ON 'C<뱼8_髙Ed>' COLLATE NOCASE WHERE ((NOT (((((rt0.c0)|(v0.c1))) BETWEEN (((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2))) AND (rt0.c0))))) GROUP BY rt0.c1, v0.c0 UNION SELECT rt0.c1, v0.c0 FROM v0 INNER JOIN vt1 ON ((((((v0.c1) NOTNULL))AND((+ (v0.c1)))))OR(rt0.c3)) LEFT OUTER JOIN rt0 ON 'C<뱼8_髙Ed>' COLLATE NOCASE WHERE (((((((rt0.c0)|(v0.c1))) BETWEEN (((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2))) AND (rt0.c0))) ISNULL)) GROUP BY rt0.c1, v0.c0;
SELECT ALL rt0.c1, v0.c0 FROM v0 INNER JOIN vt1 ON ((((((v0.c1) NOTNULL))AND((+ (v0.c1)))))OR(rt0.c3)) LEFT OUTER JOIN rt0 ON 'C<뱼8_髙Ed>' COLLATE NOCASE GROUP BY rt0.c1, v0.c0;
SELECT ALL rt0.c4, v0.c1, rt0.c1, vt1.c0, v0.c0 FROM v0, rt0, vt1 GROUP BY rt0.c4, v0.c1, rt0.c1, vt1.c0, v0.c0;
SELECT rt0.c4, v0.c1, rt0.c1, vt1.c0, v0.c0 FROM v0, rt0, vt1 GROUP BY rt0.c4, v0.c1, rt0.c1, vt1.c0, v0.c0 HAVING (((COUNT(*)))<=((MIN(AVG(GROUP_CONCAT(TOTAL(GROUP_CONCAT(rt0.c4))))) COLLATE RTRIM))) UNION ALL SELECT rt0.c4, v0.c1, rt0.c1, vt1.c0, v0.c0 FROM v0, rt0, vt1 GROUP BY rt0.c4, v0.c1, rt0.c1, vt1.c0, v0.c0 HAVING (NOT ((((COUNT(*)))<=((MIN(AVG(GROUP_CONCAT(TOTAL(GROUP_CONCAT(rt0.c4))))) COLLATE RTRIM))))) UNION ALL SELECT rt0.c4, v0.c1, rt0.c1, vt1.c0, v0.c0 FROM v0, rt0, vt1 GROUP BY rt0.c4, v0.c1, rt0.c1, vt1.c0, v0.c0 HAVING (((((COUNT(*)))<=((MIN(AVG(GROUP_CONCAT(TOTAL(GROUP_CONCAT(rt0.c4))))) COLLATE RTRIM)))) ISNULL);
SELECT MAX(((((((v0.c0)OR(v0.c1)))AND(v0.c1)))&(LIKE(v0.c1, vt1.c0)))) FROM vt1, v0, t0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((((~ (v0.c1)))GLOB('-1489802682'))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((~ (v0.c1)))GLOB('-1489802682'))))) UNION ALL SELECT * FROM v0 WHERE ((((((~ (v0.c1)))GLOB('-1489802682'))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM t0, v0, rt0, vt1;
SELECT DISTINCT * FROM t0, v0, rt0, vt1 WHERE ((((((t0.c0))>((0.24904004322275985)))) IS FALSE)) UNION SELECT DISTINCT * FROM t0, v0, rt0, vt1 WHERE ((NOT ((((((t0.c0))>((0.24904004322275985)))) IS FALSE)))) UNION SELECT DISTINCT * FROM t0, v0, rt0, vt1 WHERE ((((((((t0.c0))>((0.24904004322275985)))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t0, v0, rt0, vt1;
SELECT t0.c0, v0.c2, rt0.c1, rt0.c3, rt0.c4, v0.c0, rt0.c2, rt0.c0, v0.c1 FROM v0, t0, rt0 GROUP BY t0.c0, v0.c2, rt0.c1, rt0.c3, rt0.c4, v0.c0, rt0.c2, rt0.c0, v0.c1;
SELECT ALL t0.c0, v0.c2, rt0.c1, rt0.c3, rt0.c4, v0.c0, rt0.c2, rt0.c0, v0.c1 FROM v0, t0, rt0 WHERE ('X2') GROUP BY t0.c0, v0.c2, rt0.c1, rt0.c3, rt0.c4, v0.c0, rt0.c2, rt0.c0, v0.c1 UNION SELECT ALL t0.c0, v0.c2, rt0.c1, rt0.c3, rt0.c4, v0.c0, rt0.c2, rt0.c0, v0.c1 FROM v0, t0, rt0 WHERE ((NOT ('X2'))) GROUP BY t0.c0, v0.c2, rt0.c1, rt0.c3, rt0.c4, v0.c0, rt0.c2, rt0.c0, v0.c1 UNION SELECT ALL t0.c0, v0.c2, rt0.c1, rt0.c3, rt0.c4, v0.c0, rt0.c2, rt0.c0, v0.c1 FROM v0, t0, rt0 WHERE ((('X2') ISNULL)) GROUP BY t0.c0, v0.c2, rt0.c1, rt0.c3, rt0.c4, v0.c0, rt0.c2, rt0.c0, v0.c1;
SELECT t0.c0, v0.c2, rt0.c1, rt0.c3, rt0.c4, v0.c0, rt0.c2, rt0.c0, v0.c1 FROM v0, t0, rt0 GROUP BY t0.c0, v0.c2, rt0.c1, rt0.c3, rt0.c4, v0.c0, rt0.c2, rt0.c0, v0.c1;
SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING MIN((((v0.c1, TOTAL(MAX(COUNT(*))), AVG(v0.c2)))<=((COUNT(*), COUNT(vt1.c0), GROUP_CONCAT(MAX(TOTAL('-876403099'))))))) UNION ALL SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (NOT (MIN((((v0.c1, TOTAL(MAX(COUNT(*))), AVG(v0.c2)))<=((COUNT(*), COUNT(vt1.c0), GROUP_CONCAT(MAX(TOTAL('-876403099'))))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING ((MIN((((v0.c1, TOTAL(MAX(COUNT(*))), AVG(v0.c2)))<=((COUNT(*), COUNT(vt1.c0), GROUP_CONCAT(MAX(TOTAL('-876403099')))))))) ISNULL);
SELECT TOTAL((((vt1.c0, t0.c0, x'')) BETWEEN ((t0.c0, t0.c0, vt1.c0)) AND ((t0.c0, vt1.c0, vt1.c0))) COLLATE RTRIM) FROM t0, vt1 ORDER BY ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(vt1.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL t0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0, v0.c0, vt1.c0 FROM rt0, v0, t0, vt1;
SELECT t0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0, v0.c0, vt1.c0 FROM rt0, v0, t0, vt1 WHERE (CAST((+ (rt0.c0)) AS BLOB)) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0, v0.c0, vt1.c0 FROM rt0, v0, t0, vt1 WHERE ((NOT (CAST((+ (rt0.c0)) AS BLOB)))) UNION ALL SELECT t0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0, v0.c0, vt1.c0 FROM rt0, v0, t0, vt1 WHERE (((CAST((+ (rt0.c0)) AS BLOB)) ISNULL));
SELECT ALL t0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c0, v0.c0, vt1.c0 FROM rt0, v0, t0, vt1;
SELECT DISTINCT * FROM rt0, vt1, v0 LEFT OUTER JOIN t0 ON NULL;
SELECT DISTINCT * FROM rt0, vt1, v0 LEFT OUTER JOIN t0 ON NULL WHERE (((((v0.c0)>>(vt1.c0))) ISNULL)) UNION SELECT DISTINCT * FROM rt0, vt1, v0 LEFT OUTER JOIN t0 ON NULL WHERE ((NOT (((((v0.c0)>>(vt1.c0))) ISNULL)))) UNION SELECT DISTINCT * FROM rt0, vt1, v0 LEFT OUTER JOIN t0 ON NULL WHERE (((((((v0.c0)>>(vt1.c0))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, v0 LEFT OUTER JOIN t0 ON NULL;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (CASE WHEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c4))) THEN rt0.c1 COLLATE NOCASE WHEN 0.7818769772445171 THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)) WHEN rt0.c0 THEN ((rt0.c2)IS(rt0.c0)) ELSE -1619539710 END) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c4))) THEN rt0.c1 COLLATE NOCASE WHEN 0.7818769772445171 THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)) WHEN rt0.c0 THEN ((rt0.c2)IS(rt0.c0)) ELSE -1619539710 END))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((CASE WHEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c4))) THEN rt0.c1 COLLATE NOCASE WHEN 0.7818769772445171 THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)) WHEN rt0.c0 THEN ((rt0.c2)IS(rt0.c0)) ELSE -1619539710 END) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT t0.c0, v0.c2, rt0.c3 FROM t0, vt1, rt0, v0 GROUP BY t0.c0, v0.c2, rt0.c3;
SELECT t0.c0, v0.c2, rt0.c3 FROM t0, vt1, rt0, v0 GROUP BY t0.c0, v0.c2, rt0.c3 HAVING COUNT(((COUNT(vt1.c0))<<(rt0.c2))) UNION ALL SELECT t0.c0, v0.c2, rt0.c3 FROM t0, vt1, rt0, v0 GROUP BY t0.c0, v0.c2, rt0.c3 HAVING (NOT (COUNT(((COUNT(vt1.c0))<<(rt0.c2))))) UNION ALL SELECT t0.c0, v0.c2, rt0.c3 FROM t0, vt1, rt0, v0 GROUP BY t0.c0, v0.c2, rt0.c3 HAVING ((COUNT(((COUNT(vt1.c0))<<(rt0.c2)))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (NULL) UNION ALL SELECT * FROM v0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM v0 WHERE (((NULL) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE ((((((((((rt0.c3)OR(rt0.c4)))AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c1)) IN ())) UNION SELECT DISTINCT rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT ((((((((((rt0.c3)OR(rt0.c4)))AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c1)) IN ())))) UNION SELECT DISTINCT rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE ((((((((((((rt0.c3)OR(rt0.c4)))AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c1)) IN ())) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0;
SELECT v0.c1, v0.c2 FROM vt1 LEFT OUTER JOIN t0 ON ((((((vt1.c0) IS TRUE))OR(vt1.c0)))AND(((vt1.c0)-(v0.c1)))) FULL OUTER JOIN v0 ON json_valid(((((v0.c0)OR(v0.c2)))AND(vt1.c0))) GROUP BY v0.c1, v0.c2;
SELECT rt0.c1, rt0.c0, t0.c0, vt1.c0 FROM vt1, t0, rt0, v0 GROUP BY rt0.c1, rt0.c0, t0.c0, vt1.c0;
SELECT rt0.c1, rt0.c0, t0.c0, vt1.c0 FROM vt1, t0, rt0, v0 GROUP BY rt0.c1, rt0.c0, t0.c0, vt1.c0 HAVING rt0.c4 UNION ALL SELECT ALL rt0.c1, rt0.c0, t0.c0, vt1.c0 FROM vt1, t0, rt0, v0 GROUP BY rt0.c1, rt0.c0, t0.c0, vt1.c0 HAVING (NOT (rt0.c4)) UNION ALL SELECT rt0.c1, rt0.c0, t0.c0, vt1.c0 FROM vt1, t0, rt0, v0 GROUP BY rt0.c1, rt0.c0, t0.c0, vt1.c0 HAVING ((rt0.c4) ISNULL);
SELECT rt0.c1, rt0.c0, t0.c0, vt1.c0 FROM vt1, t0, rt0, v0 GROUP BY rt0.c1, rt0.c0, t0.c0, vt1.c0;
SELECT rt0.c1, rt0.c0, t0.c0, vt1.c0 FROM vt1, t0, rt0, v0 GROUP BY rt0.c1, rt0.c0, t0.c0, vt1.c0 HAVING rt0.c4 UNION ALL SELECT ALL rt0.c1, rt0.c0, t0.c0, vt1.c0 FROM vt1, t0, rt0, v0 GROUP BY rt0.c1, rt0.c0, t0.c0, vt1.c0 HAVING (NOT (rt0.c4)) UNION ALL SELECT rt0.c1, rt0.c0, t0.c0, vt1.c0 FROM vt1, t0, rt0, v0 GROUP BY rt0.c1, rt0.c0, t0.c0, vt1.c0 HAVING ((rt0.c4) ISNULL);
SELECT rt0.c1, rt0.c0, t0.c0, vt1.c0 FROM vt1, t0, rt0, v0 GROUP BY rt0.c1, rt0.c0, t0.c0, vt1.c0;
SELECT rt0.c3, t0.c0, rt0.c2, v0.c0, rt0.c4 FROM rt0, t0, v0;
SELECT rt0.c3, t0.c0, rt0.c2, v0.c0, rt0.c4 FROM rt0, t0, v0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (0.12407151625829582)))OR(CAST(NULL AS TEXT))))AND(CASE WHEN t0.c0 THEN rt0.c2 END))) UNION ALL SELECT ALL rt0.c3, t0.c0, rt0.c2, v0.c0, rt0.c4 FROM rt0, t0, v0 WHERE ((NOT (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (0.12407151625829582)))OR(CAST(NULL AS TEXT))))AND(CASE WHEN t0.c0 THEN rt0.c2 END))))) UNION ALL SELECT rt0.c3, t0.c0, rt0.c2, v0.c0, rt0.c4 FROM rt0, t0, v0 WHERE (((((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (0.12407151625829582)))OR(CAST(NULL AS TEXT))))AND(CASE WHEN t0.c0 THEN rt0.c2 END))) ISNULL));
SELECT rt0.c3, t0.c0, rt0.c2, v0.c0, rt0.c4 FROM rt0, t0, v0;
SELECT DISTINCT v0.c2, rt0.c1, vt1.c0, rt0.c4, rt0.c2, v0.c0 FROM v0, t0, rt0, vt1;
SELECT DISTINCT v0.c2, rt0.c1, vt1.c0, rt0.c4, rt0.c2, v0.c0 FROM v0, t0, rt0, vt1 WHERE (((rt0.c0) ISNULL) COLLATE NOCASE) UNION SELECT DISTINCT v0.c2, rt0.c1, vt1.c0, rt0.c4, rt0.c2, v0.c0 FROM v0, t0, rt0, vt1 WHERE ((NOT (((rt0.c0) ISNULL) COLLATE NOCASE))) UNION SELECT DISTINCT v0.c2, rt0.c1, vt1.c0, rt0.c4, rt0.c2, v0.c0 FROM v0, t0, rt0, vt1 WHERE (((((rt0.c0) ISNULL) COLLATE NOCASE) ISNULL));
SELECT DISTINCT v0.c2, rt0.c1, vt1.c0, rt0.c4, rt0.c2, v0.c0 FROM v0, t0, rt0, vt1;
SELECT ALL v0.c1 FROM vt1, v0, rt0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM vt1, v0, rt0 WHERE (CAST('143348355' AS TEXT)) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM vt1, v0, rt0 WHERE ((NOT (CAST('143348355' AS TEXT)))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM vt1, v0, rt0 WHERE (((CAST('143348355' AS TEXT)) ISNULL)) GROUP BY v0.c1;
SELECT ALL v0.c1 FROM vt1, v0, rt0 GROUP BY v0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) NOTNULL) COLLATE BINARY UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((vt1.c0) NOTNULL) COLLATE BINARY)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0) NOTNULL) COLLATE BINARY) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) NOTNULL) COLLATE BINARY UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((vt1.c0) NOTNULL) COLLATE BINARY)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0) NOTNULL) COLLATE BINARY) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL TOTAL(CASE WHEN rt0.c4 COLLATE BINARY THEN ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN x'' THEN ((rt0.c4)>>(v0.c1)) WHEN 0xffffffffe1f0e8b3 THEN CAST(rt0.c1 AS TEXT) ELSE (rt0.c2 IN ()) END) FROM rt0, t0, v0, vt1 ORDER BY 0.9535878420704063, QUOTE(((((rt0.c1)AND(v0.c0)))OR(v0.c0))) ASC;
SELECT ALL t0.c0, v0.c0, v0.c1 FROM vt1, v0, t0;
SELECT ALL t0.c0, v0.c0, v0.c1 FROM vt1, v0, t0 WHERE ((- ((((vt1.c0))>=((NULL)))))) UNION ALL SELECT ALL t0.c0, v0.c0, v0.c1 FROM vt1, v0, t0 WHERE ((NOT ((- ((((vt1.c0))>=((NULL)))))))) UNION ALL SELECT t0.c0, v0.c0, v0.c1 FROM vt1, v0, t0 WHERE ((((- ((((vt1.c0))>=((NULL)))))) ISNULL));
SELECT ALL t0.c0, v0.c0, v0.c1 FROM vt1, v0, t0;
SELECT DISTINCT rt0.c4, rt0.c1 FROM rt0, t0;
SELECT DISTINCT rt0.c4, rt0.c1 FROM rt0, t0 WHERE (CAST(((((((((rt0.c3)AND(rt0.c2)))AND(NULL)))OR(rt0.c1)))OR(rt0.c3)) AS NUMERIC)) UNION SELECT DISTINCT rt0.c4, rt0.c1 FROM rt0, t0 WHERE ((NOT (CAST(((((((((rt0.c3)AND(rt0.c2)))AND(NULL)))OR(rt0.c1)))OR(rt0.c3)) AS NUMERIC)))) UNION SELECT DISTINCT rt0.c4, rt0.c1 FROM rt0, t0 WHERE (((CAST(((((((((rt0.c3)AND(rt0.c2)))AND(NULL)))OR(rt0.c1)))OR(rt0.c3)) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c1 FROM rt0, t0;
SELECT rt0.c2, v0.c0, v0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c1, rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON TRIM(DISTINCT (((rt0.c4, rt0.c3, v0.c0))>=((-1.909124615E9, v0.c0, rt0.c1)))) GROUP BY rt0.c2, v0.c0, v0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c1, rt0.c4;
SELECT rt0.c2, v0.c0, v0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c1, rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON TRIM(DISTINCT (((rt0.c4, rt0.c3, v0.c0))>=((-1.909124615E9, v0.c0, rt0.c1)))) WHERE (rt0.c1) GROUP BY rt0.c2, v0.c0, v0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c1, rt0.c4 UNION SELECT rt0.c2, v0.c0, v0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c1, rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON TRIM(DISTINCT (((rt0.c4, rt0.c3, v0.c0))>=((-1.909124615E9, v0.c0, rt0.c1)))) WHERE ((NOT (rt0.c1))) GROUP BY rt0.c2, v0.c0, v0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c1, rt0.c4 UNION SELECT rt0.c2, v0.c0, v0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c1, rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON TRIM(DISTINCT (((rt0.c4, rt0.c3, v0.c0))>=((-1.909124615E9, v0.c0, rt0.c1)))) WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c2, v0.c0, v0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c1, rt0.c4;
SELECT rt0.c2, v0.c0, v0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c1, rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON TRIM(DISTINCT (((rt0.c4, rt0.c3, v0.c0))>=((-1.909124615E9, v0.c0, rt0.c1)))) GROUP BY rt0.c2, v0.c0, v0.c2, rt0.c3, rt0.c0, rt0.c1, v0.c1, rt0.c4;
SELECT ALL v0.c1, rt0.c4, v0.c2, rt0.c3, t0.c0, rt0.c2 FROM rt0, v0, t0 GROUP BY v0.c1, rt0.c4, v0.c2, rt0.c3, t0.c0, rt0.c2;
SELECT v0.c1, rt0.c4, v0.c2, rt0.c3, t0.c0, rt0.c2 FROM rt0, v0, t0 GROUP BY v0.c1, rt0.c4, v0.c2, rt0.c3, t0.c0, rt0.c2 HAVING ((SUM(MAX(rt0.c3))) IS FALSE) UNION ALL SELECT ALL v0.c1, rt0.c4, v0.c2, rt0.c3, t0.c0, rt0.c2 FROM rt0, v0, t0 GROUP BY v0.c1, rt0.c4, v0.c2, rt0.c3, t0.c0, rt0.c2 HAVING (NOT (((SUM(MAX(rt0.c3))) IS FALSE))) UNION ALL SELECT v0.c1, rt0.c4, v0.c2, rt0.c3, t0.c0, rt0.c2 FROM rt0, v0, t0 GROUP BY v0.c1, rt0.c4, v0.c2, rt0.c3, t0.c0, rt0.c2 HAVING ((((SUM(MAX(rt0.c3))) IS FALSE)) ISNULL);
SELECT * FROM vt1, t0, rt0, v0;
SELECT ALL * FROM vt1, t0, rt0, v0 WHERE (HEX(DISTINCT LIKELIHOOD(rt0.c3, 0.5244177734065165))) UNION ALL SELECT ALL * FROM vt1, t0, rt0, v0 WHERE ((NOT (HEX(DISTINCT LIKELIHOOD(rt0.c3, 0.5244177734065165))))) UNION ALL SELECT ALL * FROM vt1, t0, rt0, v0 WHERE (((HEX(DISTINCT LIKELIHOOD(rt0.c3, 0.5244177734065165))) ISNULL));
SELECT * FROM vt1, t0, rt0, v0;
SELECT DISTINCT * FROM rt0, t0 NOT INDEXED, v0;
SELECT DISTINCT * FROM rt0, t0, v0 WHERE (rt0.c4) UNION SELECT DISTINCT * FROM rt0, t0, v0 WHERE ((NOT (rt0.c4))) UNION SELECT DISTINCT * FROM rt0, t0, v0 WHERE (((rt0.c4) ISNULL));
SELECT DISTINCT * FROM rt0, t0 NOT INDEXED, v0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((LOWER(DISTINCT 0.7556072134654104)) NOT NULL)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((LOWER(DISTINCT 0.7556072134654104)) NOT NULL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((LOWER(DISTINCT 0.7556072134654104)) NOT NULL)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c4, rt0.c0, rt0.c1, t0.c0, rt0.c2, v0.c2, v0.c0, vt1.c0, rt0.c3 FROM rt0, t0, vt1, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1, t0.c0, rt0.c2, v0.c2, v0.c0, vt1.c0, rt0.c3;
SELECT rt0.c4, rt0.c0, rt0.c1, t0.c0, rt0.c2, v0.c2, v0.c0, vt1.c0, rt0.c3 FROM rt0, t0, vt1, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1, t0.c0, rt0.c2, v0.c2, v0.c0, vt1.c0, rt0.c3 HAVING LOWER(DISTINCT 'vZY\r') UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1, t0.c0, rt0.c2, v0.c2, v0.c0, vt1.c0, rt0.c3 FROM rt0, t0, vt1, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1, t0.c0, rt0.c2, v0.c2, v0.c0, vt1.c0, rt0.c3 HAVING (NOT (LOWER(DISTINCT 'vZY\r'))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1, t0.c0, rt0.c2, v0.c2, v0.c0, vt1.c0, rt0.c3 FROM rt0, t0, vt1, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1, t0.c0, rt0.c2, v0.c2, v0.c0, vt1.c0, rt0.c3 HAVING ((LOWER(DISTINCT 'vZY\r')) ISNULL);
SELECT ALL rt0.c4, rt0.c0, rt0.c1, t0.c0, rt0.c2, v0.c2, v0.c0, vt1.c0, rt0.c3 FROM rt0, t0, vt1, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1, t0.c0, rt0.c2, v0.c2, v0.c0, vt1.c0, rt0.c3;
SELECT rt0.c4, rt0.c0, rt0.c1, t0.c0, rt0.c2, v0.c2, v0.c0, vt1.c0, rt0.c3 FROM rt0, t0, vt1, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1, t0.c0, rt0.c2, v0.c2, v0.c0, vt1.c0, rt0.c3 HAVING LOWER(DISTINCT 'vZY\r') UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1, t0.c0, rt0.c2, v0.c2, v0.c0, vt1.c0, rt0.c3 FROM rt0, t0, vt1, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1, t0.c0, rt0.c2, v0.c2, v0.c0, vt1.c0, rt0.c3 HAVING (NOT (LOWER(DISTINCT 'vZY\r'))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1, t0.c0, rt0.c2, v0.c2, v0.c0, vt1.c0, rt0.c3 FROM rt0, t0, vt1, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1, t0.c0, rt0.c2, v0.c2, v0.c0, vt1.c0, rt0.c3 HAVING ((LOWER(DISTINCT 'vZY\r')) ISNULL);
SELECT ALL rt0.c4, rt0.c0, rt0.c1, t0.c0, rt0.c2, v0.c2, v0.c0, vt1.c0, rt0.c3 FROM rt0, t0, vt1, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1, t0.c0, rt0.c2, v0.c2, v0.c0, vt1.c0, rt0.c3;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((((v0.c1) BETWEEN (v0.c1) AND (v0.c1)))|(((v0.c1) ISNULL)))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((v0.c1) BETWEEN (v0.c1) AND (v0.c1)))|(((v0.c1) ISNULL)))))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c1) BETWEEN (v0.c1) AND (v0.c1)))|(((v0.c1) ISNULL)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM t0, rt0, vt1;
SELECT DISTINCT * FROM t0, rt0, vt1 WHERE ((((rt0.c4)<=(rt0.c3)) IN ())) UNION SELECT DISTINCT * FROM t0, rt0, vt1 WHERE ((NOT ((((rt0.c4)<=(rt0.c3)) IN ())))) UNION SELECT DISTINCT * FROM t0, rt0, vt1 WHERE ((((((rt0.c4)<=(rt0.c3)) IN ())) ISNULL));
SELECT DISTINCT * FROM t0, rt0, vt1;
SELECT vt1.c0 FROM vt1 CROSS JOIN rt0 ON (- (CAST(rt0.c4 AS NUMERIC))) INNER JOIN t0 ON ((((rt0.c2) NOT NULL)) BETWEEN (CAST(v0.c1 AS BLOB)) AND (rt0.c2 COLLATE BINARY)) FULL OUTER JOIN v0 ON ((((v0.c1 COLLATE RTRIM)OR(((((v0.c2)OR(rt0.c1)))AND(v0.c2)))))AND(((t0.c0)OR(rt0.c3)))) GROUP BY vt1.c0;
SELECT rt0.c0, v0.c0, rt0.c4, rt0.c3 FROM rt0 CROSS JOIN v0 ON (- (rt0.c3 COLLATE NOCASE)) CROSS JOIN vt1 ON (((((rt0.c0))>=((''))))IS(SQLITE_SOURCE_ID())) GROUP BY rt0.c0, v0.c0, rt0.c4, rt0.c3;
SELECT rt0.c0, v0.c0, rt0.c4, rt0.c3 FROM rt0 CROSS JOIN v0 ON (- (rt0.c3 COLLATE NOCASE)) CROSS JOIN vt1 ON (((((rt0.c0))>=((''))))IS(SQLITE_SOURCE_ID())) GROUP BY rt0.c0, v0.c0, rt0.c4, rt0.c3 HAVING TYPEOF(((((COUNT(rt0.c3))OR(rt0.c1)))AND(COUNT(GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c4, rt0.c3 FROM rt0 CROSS JOIN v0 ON (- (rt0.c3 COLLATE NOCASE)) CROSS JOIN vt1 ON (((((rt0.c0))>=((''))))IS(SQLITE_SOURCE_ID())) GROUP BY rt0.c0, v0.c0, rt0.c4, rt0.c3 HAVING (NOT (TYPEOF(((((COUNT(rt0.c3))OR(rt0.c1)))AND(COUNT(GROUP_CONCAT(rt0.c0))))))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c4, rt0.c3 FROM rt0 CROSS JOIN v0 ON (- (rt0.c3 COLLATE NOCASE)) CROSS JOIN vt1 ON (((((rt0.c0))>=((''))))IS(SQLITE_SOURCE_ID())) GROUP BY rt0.c0, v0.c0, rt0.c4, rt0.c3 HAVING ((TYPEOF(((((COUNT(rt0.c3))OR(rt0.c1)))AND(COUNT(GROUP_CONCAT(rt0.c0)))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1, t0;
SELECT vt1.c0 FROM vt1, t0 WHERE (((t0.c0)||(((((vt1.c0)AND(NULL)))AND(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1, t0 WHERE ((NOT (((t0.c0)||(((((vt1.c0)AND(NULL)))AND(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1, t0 WHERE (((((t0.c0)||(((((vt1.c0)AND(NULL)))AND(vt1.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1, t0;
SELECT DISTINCT * FROM t0, v0, rt0, vt1;
SELECT DISTINCT * FROM t0, v0, rt0, vt1 WHERE ((((rt0.c1 IN ())) NOT BETWEEN (((rt0.c4) NOT NULL)) AND (CASE v0.c2  WHEN vt1.c0 THEN rt0.c4 ELSE v0.c0 END))) UNION SELECT DISTINCT * FROM t0, v0, rt0, vt1 WHERE ((NOT ((((rt0.c1 IN ())) NOT BETWEEN (((rt0.c4) NOT NULL)) AND (CASE v0.c2  WHEN vt1.c0 THEN rt0.c4 ELSE v0.c0 END))))) UNION SELECT DISTINCT * FROM t0, v0, rt0, vt1 WHERE ((((((rt0.c1 IN ())) NOT BETWEEN (((rt0.c4) NOT NULL)) AND (CASE v0.c2  WHEN vt1.c0 THEN rt0.c4 ELSE v0.c0 END))) ISNULL));
SELECT DISTINCT * FROM t0, v0, rt0, vt1;
SELECT ALL t0.c0, vt1.c0 FROM vt1 NOT INDEXED, t0 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT (t0.c0)) COLLATE RTRIM) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT ((NOT (t0.c0)) COLLATE RTRIM))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM vt1 NOT INDEXED, t0 WHERE ((((NOT (t0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1 NOT INDEXED, t0 GROUP BY t0.c0, vt1.c0;
SELECT v0.c2 FROM vt1 NATURAL JOIN v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM vt1 NATURAL JOIN v0 GROUP BY v0.c2 HAVING MIN(((COUNT(vt1.c0))=(SUM(MIN(v0.c0))))) UNION ALL SELECT v0.c2 FROM vt1 NATURAL JOIN v0 GROUP BY v0.c2 HAVING (NOT (MIN(((COUNT(vt1.c0))==(SUM(MIN(v0.c0))))))) UNION ALL SELECT ALL v0.c2 FROM vt1 NATURAL JOIN v0 GROUP BY v0.c2 HAVING ((MIN(((COUNT(vt1.c0))==(SUM(MIN(v0.c0)))))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (v0.c0) UNION ALL SELECT * FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0) NOT NULL) IN ())) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c0) NOT NULL) IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0) NOT NULL) IN ())) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT v0.c1, v0.c0 FROM rt0, vt1, v0 GROUP BY v0.c1, v0.c0;
SELECT ALL v0.c1, v0.c0 FROM rt0, vt1, v0 WHERE ((((rt0.c1, v0.c2, v0.c2)) NOT BETWEEN (((rt0.c1 IN (0.7656104568839623)), ((v0.c2)|(v0.c2)), ((v0.c2)GLOB(v0.c0)))) AND ((((((rt0.c4)OR(v0.c1)))OR(-728255732)), ((rt0.c2)-(v0.c2)), vt1.c0)))) GROUP BY v0.c1, v0.c0 UNION SELECT v0.c1, v0.c0 FROM rt0, vt1, v0 WHERE ((NOT ((((rt0.c1, v0.c2, v0.c2)) NOT BETWEEN (((rt0.c1 IN (0.7656104568839623)), ((v0.c2)|(v0.c2)), ((v0.c2)GLOB(v0.c0)))) AND ((((((rt0.c4)OR(v0.c1)))OR(-728255732)), ((rt0.c2)-(v0.c2)), vt1.c0)))))) GROUP BY v0.c1, v0.c0 UNION SELECT ALL v0.c1, v0.c0 FROM rt0, vt1, v0 WHERE ((((((rt0.c1, v0.c2, v0.c2)) NOT BETWEEN (((rt0.c1 IN (0.7656104568839623)), ((v0.c2)|(v0.c2)), ((v0.c2)GLOB(v0.c0)))) AND ((((((rt0.c4)OR(v0.c1)))OR(-728255732)), ((rt0.c2)-(v0.c2)), vt1.c0)))) ISNULL)) GROUP BY v0.c1, v0.c0;
SELECT v0.c1, v0.c0 FROM rt0, vt1, v0 GROUP BY v0.c1, v0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING CASE WHEN GROUP_CONCAT(0.012444741891467714) THEN AVG(x'') WHEN COUNT(rt0.c0) THEN (- (SUM(SUM(rt0.c3)))) WHEN (- (MAX(COUNT(*)))) THEN COUNT(*) ELSE rt0.c0 END UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (CASE WHEN GROUP_CONCAT(0.012444741891467714) THEN AVG(x'') WHEN COUNT(rt0.c0) THEN (- (SUM(SUM(rt0.c3)))) WHEN (- (MAX(COUNT(*)))) THEN COUNT(*) ELSE rt0.c0 END)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((CASE WHEN GROUP_CONCAT(0.012444741891467714) THEN AVG(x'') WHEN COUNT(rt0.c0) THEN (- (SUM(SUM(rt0.c3)))) WHEN (- (MAX(COUNT(*)))) THEN COUNT(*) ELSE rt0.c0 END) ISNULL);
SELECT SUM((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4)))) NOT BETWEEN ((((((((('0.012444741891467714')OR(vt1.c0)))OR(rt0.c1)))OR(rt0.c4)))OR(0.5887030420062311))) AND (CASE WHEN v0.c1 THEN rt0.c4 ELSE rt0.c2 END))) FROM v0, t0, vt1, rt0;
SELECT rt0.c1, rt0.c3 FROM rt0, v0, vt1, t0;
SELECT ALL rt0.c1, rt0.c3 FROM rt0, v0, vt1, t0 WHERE (v0.c0) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM rt0, v0, vt1, t0 WHERE ((NOT (v0.c0))) UNION ALL SELECT rt0.c1, rt0.c3 FROM rt0, v0, vt1, t0 WHERE (((v0.c0) ISNULL));
SELECT rt0.c1, rt0.c3 FROM rt0, v0, vt1, t0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (CASE (((rt0.c4, v0.c2, rt0.c3)) NOT BETWEEN ((x'', rt0.c1, rt0.c4)) AND (('0.9268264340917173', rt0.c1, v0.c0)))  WHEN (v0.c0 IN ()) THEN NULL ELSE CAST(NULL AS BLOB) END) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (CASE (((rt0.c4, v0.c2, rt0.c3)) NOT BETWEEN ((x'', rt0.c1, rt0.c4)) AND (('0.9268264340917173', rt0.c1, v0.c0)))  WHEN (v0.c0 IN ()) THEN NULL ELSE CAST(NULL AS BLOB) END))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((CASE (((rt0.c4, v0.c2, rt0.c3)) NOT BETWEEN ((x'', rt0.c1, rt0.c4)) AND (('0.9268264340917173', rt0.c1, v0.c0)))  WHEN (v0.c0 IN ()) THEN NULL ELSE CAST(NULL AS BLOB) END) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL t0.c0, v0.c0, v0.c1, vt1.c0, v0.c2 FROM v0, t0, vt1 GROUP BY t0.c0, v0.c0, v0.c1, vt1.c0, v0.c2;
SELECT ALL t0.c0, v0.c0, v0.c1, vt1.c0, v0.c2 FROM v0, t0, vt1 WHERE (((((((v0.c0)AND(t0.c0)))AND(vt1.c0))) BETWEEN (CAST(v0.c1 AS NUMERIC)) AND (((v0.c2) IS TRUE)))) GROUP BY t0.c0, v0.c0, v0.c1, vt1.c0, v0.c2 UNION SELECT t0.c0, v0.c0, v0.c1, vt1.c0, v0.c2 FROM v0, t0, vt1 WHERE ((NOT (((((((v0.c0)AND(t0.c0)))AND(vt1.c0))) BETWEEN (CAST(v0.c1 AS NUMERIC)) AND (((v0.c2) IS TRUE)))))) GROUP BY t0.c0, v0.c0, v0.c1, vt1.c0, v0.c2 UNION SELECT ALL t0.c0, v0.c0, v0.c1, vt1.c0, v0.c2 FROM v0, t0 NOT INDEXED, vt1 WHERE (((((((((v0.c0)AND(t0.c0)))AND(vt1.c0))) BETWEEN (CAST(v0.c1 AS NUMERIC)) AND (((v0.c2) IS TRUE)))) ISNULL)) GROUP BY t0.c0, v0.c0, v0.c1, vt1.c0, v0.c2;
SELECT ALL t0.c0, v0.c0, v0.c1, vt1.c0, v0.c2 FROM v0, t0, vt1 GROUP BY t0.c0, v0.c0, v0.c1, vt1.c0, v0.c2;
SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING '899215241' UNION ALL SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING (NOT ('899215241')) UNION ALL SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING (('899215241') ISNULL);
SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING '899215241' UNION ALL SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING (NOT ('899215241')) UNION ALL SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING (('899215241') ISNULL);
SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT ALL rt0.c2, v0.c1, rt0.c1, rt0.c4, vt1.c0, v0.c2 FROM rt0, vt1 LEFT OUTER JOIN v0 ON (((((((((+ (vt1.c0)))OR((v0.c2 IN ()))))OR((((v0.c1))!=((v0.c0))))))AND(v0.c2)))AND(((v0.c0)>(vt1.c0))));
SELECT rt0.c2, v0.c1, rt0.c1, rt0.c4, vt1.c0, v0.c2 FROM rt0, vt1 LEFT OUTER JOIN v0 ON (((((((((+ (vt1.c0)))OR((v0.c2 IN ()))))OR((((v0.c1))!=((v0.c0))))))AND(v0.c2)))AND(((v0.c0)>(vt1.c0)))) WHERE ((rt0.c1 COLLATE BINARY IN ())) UNION ALL SELECT rt0.c2, v0.c1, rt0.c1, rt0.c4, vt1.c0, v0.c2 FROM rt0, vt1 LEFT OUTER JOIN v0 ON (((((((((+ (vt1.c0)))OR((v0.c2 IN ()))))OR((((v0.c1))!=((v0.c0))))))AND(v0.c2)))AND(((v0.c0)>(vt1.c0)))) WHERE ((NOT ((rt0.c1 COLLATE BINARY IN ())))) UNION ALL SELECT rt0.c2, v0.c1, rt0.c1, rt0.c4, vt1.c0, v0.c2 FROM rt0, vt1 LEFT OUTER JOIN v0 ON (((((((((+ (vt1.c0)))OR((v0.c2 IN ()))))OR((((v0.c1))<>((v0.c0))))))AND(v0.c2)))AND(((v0.c0)>(vt1.c0)))) WHERE ((((rt0.c1 COLLATE BINARY IN ())) ISNULL));
SELECT ALL rt0.c2, v0.c1, rt0.c1, rt0.c4, vt1.c0, v0.c2 FROM rt0, vt1 LEFT OUTER JOIN v0 ON (((((((((+ (vt1.c0)))OR((v0.c2 IN ()))))OR((((v0.c1))!=((v0.c0))))))AND(v0.c2)))AND(((v0.c0)>(vt1.c0))));
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((CASE WHEN '8rcrnꯅ' THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN vt1.c0 END)&(((rt0.c1) NOTNULL)))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((CASE WHEN '8rcrnꯅ' THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN vt1.c0 END)&(((rt0.c1) NOTNULL)))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((CASE WHEN '8rcrnꯅ' THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN vt1.c0 END)&(((rt0.c1) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))) BETWEEN (v0.c1) AND (((v0.c2)IS NOT(vt1.c0))))) GROUP BY vt1.c0, v0.c0 UNION SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))) BETWEEN (v0.c1) AND (((v0.c2)IS NOT(vt1.c0))))))) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM v0, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))) BETWEEN (v0.c1) AND (((v0.c2)IS NOT(vt1.c0))))) ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT ALL v0.c0, v0.c2, vt1.c0, t0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0, vt1, v0 GROUP BY v0.c0, v0.c2, vt1.c0, t0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c0;
SELECT v0.c0, v0.c2, vt1.c0, t0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0, vt1, v0 GROUP BY v0.c0, v0.c2, vt1.c0, t0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c0 HAVING TOTAL(SUM(SUM(vt1.c0))) UNION ALL SELECT v0.c0, v0.c2, vt1.c0, t0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0, vt1, v0 GROUP BY v0.c0, v0.c2, vt1.c0, t0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (TOTAL(SUM(SUM(vt1.c0))))) UNION ALL SELECT v0.c0, v0.c2, vt1.c0, t0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0, vt1, v0 GROUP BY v0.c0, v0.c2, vt1.c0, t0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c0 HAVING ((TOTAL(SUM(SUM(vt1.c0)))) ISNULL);
SELECT MIN(CAST(((rt0.c1) BETWEEN (rt0.c1) AND (vt1.c0)) AS REAL)) FROM rt0, vt1 ORDER BY ((((((rt0.c0) NOT BETWEEN (rt0.c4) AND (vt1.c0)))OR((NOT (rt0.c0)))))OR(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c0))))  NULLS LAST;
SELECT ALL * FROM t0, v0, vt1;
SELECT * FROM t0, v0, vt1 WHERE (v0.c1) UNION ALL SELECT * FROM t0, v0, vt1 WHERE ((NOT (v0.c1))) UNION ALL SELECT ALL * FROM t0, v0, vt1 WHERE (((v0.c1) ISNULL));
SELECT ALL * FROM t0, v0, vt1;
SELECT DISTINCT rt0.c3, rt0.c0, v0.c0, t0.c0, v0.c2, rt0.c2, rt0.c4 FROM v0, vt1, rt0 INNER JOIN t0 ON (v0.c0 COLLATE BINARY IN (rt0.c0, CASE v0.c0  WHEN rt0.c0 THEN rt0.c4 WHEN t0.c0 THEN v0.c1 WHEN rt0.c1 THEN 0.9465752403743717 ELSE 0.8261651478909717 END));
SELECT DISTINCT rt0.c3, rt0.c0, v0.c0, t0.c0, v0.c2, rt0.c2, rt0.c4 FROM v0, vt1, rt0 INNER JOIN t0 ON (v0.c0 COLLATE BINARY IN (rt0.c0, CASE v0.c0  WHEN rt0.c0 THEN rt0.c4 WHEN t0.c0 THEN v0.c1 WHEN rt0.c1 THEN 0.9465752403743717 ELSE 0.8261651478909717 END)) WHERE ((((rt0.c3 IN ()))>>(CASE rt0.c3  WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c2 END))) UNION SELECT DISTINCT rt0.c3, rt0.c0, v0.c0, t0.c0, v0.c2, rt0.c2, rt0.c4 FROM v0, vt1, rt0 INNER JOIN t0 ON (v0.c0 COLLATE BINARY IN (rt0.c0, CASE v0.c0  WHEN rt0.c0 THEN rt0.c4 WHEN t0.c0 THEN v0.c1 WHEN rt0.c1 THEN 0.9465752403743717 ELSE 0.8261651478909717 END)) WHERE ((NOT ((((rt0.c3 IN ()))>>(CASE rt0.c3  WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c2 END))))) UNION SELECT DISTINCT rt0.c3, rt0.c0, v0.c0, t0.c0, v0.c2, rt0.c2, rt0.c4 FROM v0, vt1, rt0 INNER JOIN t0 ON (v0.c0 COLLATE BINARY IN (rt0.c0, CASE v0.c0  WHEN rt0.c0 THEN rt0.c4 WHEN t0.c0 THEN v0.c1 WHEN rt0.c1 THEN 0.9465752403743717 ELSE 0.8261651478909717 END)) WHERE ((((((rt0.c3 IN ()))>>(CASE rt0.c3  WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c2 END))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0, v0.c0, t0.c0, v0.c2, rt0.c2, rt0.c4 FROM v0, vt1, rt0 INNER JOIN t0 ON (v0.c0 COLLATE BINARY IN (rt0.c0, CASE v0.c0  WHEN rt0.c0 THEN rt0.c4 WHEN t0.c0 THEN v0.c1 WHEN rt0.c1 THEN 0.9465752403743717 ELSE 0.8261651478909717 END));
SELECT ALL t0.c0, rt0.c1, rt0.c0, v0.c0, v0.c2, rt0.c4, rt0.c2 FROM rt0, vt1, t0, v0 GROUP BY t0.c0, rt0.c1, rt0.c0, v0.c0, v0.c2, rt0.c4, rt0.c2;
SELECT t0.c0, rt0.c1, rt0.c0, v0.c0, v0.c2, rt0.c4, rt0.c2 FROM rt0, vt1, t0, v0 WHERE (((ABS(rt0.c3))OR(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4))))) GROUP BY t0.c0, rt0.c1, rt0.c0, v0.c0, v0.c2, rt0.c4, rt0.c2 UNION SELECT t0.c0, rt0.c1, rt0.c0, v0.c0, v0.c2, rt0.c4, rt0.c2 FROM rt0, vt1, t0, v0 WHERE ((NOT (((ABS(rt0.c3))OR(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4))))))) GROUP BY t0.c0, rt0.c1, rt0.c0, v0.c0, v0.c2, rt0.c4, rt0.c2 UNION SELECT ALL t0.c0, rt0.c1, rt0.c0, v0.c0, v0.c2, rt0.c4, rt0.c2 FROM rt0, vt1, t0, v0 WHERE (((((ABS(rt0.c3))OR(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4))))) ISNULL)) GROUP BY t0.c0, rt0.c1, rt0.c0, v0.c0, v0.c2, rt0.c4, rt0.c2;
SELECT ALL t0.c0, rt0.c1, rt0.c0, v0.c0, v0.c2, rt0.c4, rt0.c2 FROM rt0, vt1, t0, v0 GROUP BY t0.c0, rt0.c1, rt0.c0, v0.c0, v0.c2, rt0.c4, rt0.c2;
SELECT ALL v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0 HAVING ((((((((v0.c1)AND((~ (v0.c0)))))OR(MAX(SUM(TOTAL(v0.c0))))))OR(((GROUP_CONCAT(v0.c1)) NOTNULL))))OR(SUM(MIN(v0.c0)))) UNION ALL SELECT v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0 HAVING (NOT (((((((((v0.c1)AND((~ (v0.c0)))))OR(MAX(SUM(TOTAL(v0.c0))))))OR(((GROUP_CONCAT(v0.c1)) NOTNULL))))OR(SUM(MIN(v0.c0)))))) UNION ALL SELECT ALL v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c0 HAVING ((((((((((v0.c1)AND((~ (v0.c0)))))OR(MAX(SUM(TOTAL(v0.c0))))))OR(((GROUP_CONCAT(v0.c1)) NOTNULL))))OR(SUM(MIN(v0.c0))))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((((NOT (v0.c2)))!=(v0.c2))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((NOT (v0.c2)))!=(v0.c2))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((NOT (v0.c2)))<>(v0.c2))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c0, v0.c0, rt0.c2, v0.c1 FROM v0, vt1, rt0;
SELECT DISTINCT rt0.c0, v0.c0, rt0.c2, v0.c1 FROM v0, vt1, rt0 WHERE (0X74c5d7e0) UNION SELECT DISTINCT rt0.c0, v0.c0, rt0.c2, v0.c1 FROM v0, vt1, rt0 WHERE ((NOT (0x74c5d7e0))) UNION SELECT DISTINCT rt0.c0, v0.c0, rt0.c2, v0.c1 FROM v0, vt1, rt0 WHERE (((0x74c5d7e0) ISNULL));
SELECT DISTINCT rt0.c0, v0.c0, rt0.c2, v0.c1 FROM v0, vt1, rt0;
SELECT vt1.c0, v0.c1 FROM v0, vt1 NOT INDEXED, t0 GROUP BY vt1.c0, v0.c1;
SELECT vt1.c0, v0.c1 FROM v0, vt1, t0 WHERE (((x'')>=(NULL))) GROUP BY vt1.c0, v0.c1 UNION SELECT vt1.c0, v0.c1 FROM v0, vt1, t0 WHERE ((NOT (((x'')>=(NULL))))) GROUP BY vt1.c0, v0.c1 UNION SELECT ALL vt1.c0, v0.c1 FROM v0, vt1, t0 WHERE (((((x'')>=(NULL))) ISNULL)) GROUP BY vt1.c0, v0.c1;
SELECT vt1.c0, v0.c1 FROM v0, vt1 NOT INDEXED, t0 GROUP BY vt1.c0, v0.c1;
SELECT vt1.c0, rt0.c2, v0.c1, rt0.c0, rt0.c3, v0.c0, v0.c2 FROM vt1, v0, rt0 GROUP BY vt1.c0, rt0.c2, v0.c1, rt0.c0, rt0.c3, v0.c0, v0.c2;
SELECT ALL vt1.c0, rt0.c2, v0.c1, rt0.c0, rt0.c3, v0.c0, v0.c2 FROM vt1, v0, rt0 GROUP BY vt1.c0, rt0.c2, v0.c1, rt0.c0, rt0.c3, v0.c0, v0.c2 HAVING ((MIN(MIN(v0.c0)))<(((MIN(TOTAL(MAX(AVG(v0.c0))))) BETWEEN (COUNT(*)) AND (AVG(COUNT(*)))))) UNION ALL SELECT vt1.c0, rt0.c2, v0.c1, rt0.c0, rt0.c3, v0.c0, v0.c2 FROM vt1, v0, rt0 GROUP BY vt1.c0, rt0.c2, v0.c1, rt0.c0, rt0.c3, v0.c0, v0.c2 HAVING (NOT (((MIN(MIN(v0.c0)))<(((MIN(TOTAL(MAX(AVG(v0.c0))))) BETWEEN (COUNT(*)) AND (AVG(COUNT(*)))))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, v0.c1, rt0.c0, rt0.c3, v0.c0, v0.c2 FROM vt1, v0, rt0 GROUP BY vt1.c0, rt0.c2, v0.c1, rt0.c0, rt0.c3, v0.c0, v0.c2 HAVING ((((MIN(MIN(v0.c0)))<(((MIN(TOTAL(MAX(AVG(v0.c0))))) BETWEEN (COUNT(*)) AND (AVG(COUNT(*))))))) ISNULL);
SELECT ALL * FROM t0 INNER JOIN vt1 ON ((((((v0.c1) NOTNULL))OR((v0.c0 IN (v0.c1)))))AND(('' IN ()))) LEFT OUTER JOIN v0 ON CASE WHEN v0.c1 THEN ABS(DISTINCT t0.c0) END;
SELECT * FROM t0 INNER JOIN vt1 ON ((((((v0.c1) NOTNULL))OR((v0.c0 IN (v0.c1)))))AND(('' IN ()))) LEFT OUTER JOIN v0 ON CASE WHEN v0.c1 THEN ABS(DISTINCT t0.c0) END WHERE (((((v0.c2)>(vt1.c0))) NOTNULL)) UNION ALL SELECT ALL * FROM t0 INNER JOIN vt1 ON ((((((v0.c1) NOTNULL))OR((v0.c0 IN (v0.c1)))))AND(('' IN ()))) LEFT OUTER JOIN v0 ON CASE WHEN v0.c1 THEN ABS(DISTINCT t0.c0) END WHERE ((NOT (((((v0.c2)>(vt1.c0))) NOTNULL)))) UNION ALL SELECT ALL * FROM t0 INNER JOIN vt1 ON ((((((v0.c1) NOTNULL))OR((v0.c0 IN (v0.c1)))))AND(('' IN ()))) LEFT OUTER JOIN v0 ON CASE WHEN v0.c1 THEN ABS(DISTINCT t0.c0) END WHERE (((((((v0.c2)>(vt1.c0))) NOTNULL)) ISNULL));
SELECT ALL * FROM t0 INNER JOIN vt1 ON ((((((v0.c1) NOTNULL))OR((v0.c0 IN (v0.c1)))))AND(('' IN ()))) LEFT OUTER JOIN v0 ON CASE WHEN v0.c1 THEN ABS(DISTINCT t0.c0) END;
SELECT DISTINCT * FROM t0, vt1, v0;
SELECT DISTINCT * FROM t0, vt1, v0 WHERE (CASE WHEN CAST(v0.c0 AS TEXT) THEN (+ (vt1.c0)) END) UNION SELECT DISTINCT * FROM t0, vt1 NOT INDEXED, v0 WHERE ((NOT (CASE WHEN CAST(v0.c0 AS TEXT) THEN (+ (vt1.c0)) END))) UNION SELECT DISTINCT * FROM t0, vt1, v0 WHERE (((CASE WHEN CAST(v0.c0 AS TEXT) THEN (+ (vt1.c0)) END) ISNULL));
SELECT DISTINCT * FROM t0, vt1, v0;
SELECT rt0.c0 FROM vt1 FULL OUTER JOIN t0 ON IFNULL(((rt0.c0)GLOB(vt1.c0)), ((rt0.c4) BETWEEN (rt0.c0) AND (vt1.c0))) LEFT OUTER JOIN rt0 ON ((((CAST(rt0.c2 AS TEXT))OR((- (t0.c0)))))AND(((rt0.c3)!=(t0.c0)))) GROUP BY rt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((((((((((GROUP_CONCAT(vt1.c0)) NOT BETWEEN (vt1.c0) AND (COUNT(*))))OR(TOTAL(vt1.c0))))AND(AVG(GROUP_CONCAT(COUNT(*))))))AND(COUNT(vt1.c0))))OR(COUNT(*))))OR(((((TOTAL(vt1.c0))AND(vt1.c0)))AND(COUNT(*))))))OR(((GROUP_CONCAT(MAX(vt1.c0))) BETWEEN (vt1.c0) AND (vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((((((((((((GROUP_CONCAT(vt1.c0)) NOT BETWEEN (vt1.c0) AND (COUNT(*))))OR(TOTAL(vt1.c0))))AND(AVG(GROUP_CONCAT(COUNT(*))))))AND(COUNT(vt1.c0))))OR(COUNT(*))))OR(((((TOTAL(vt1.c0))AND(vt1.c0)))AND(COUNT(*))))))OR(((GROUP_CONCAT(MAX(vt1.c0))) BETWEEN (vt1.c0) AND (vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((((((((((((GROUP_CONCAT(vt1.c0)) NOT BETWEEN (vt1.c0) AND (COUNT(*))))OR(TOTAL(vt1.c0))))AND(AVG(GROUP_CONCAT(COUNT(*))))))AND(COUNT(vt1.c0))))OR(COUNT(*))))OR(((((TOTAL(vt1.c0))AND(vt1.c0)))AND(COUNT(*))))))OR(((GROUP_CONCAT(MAX(vt1.c0))) BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL);
SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt1;
SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((((((rt0.c3, vt1.c0, rt0.c4))<=((rt0.c2, rt0.c1, rt0.c1))))>=(((rt0.c0)|(rt0.c3))))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((NOT ((((((rt0.c3, vt1.c0, rt0.c4))<=((rt0.c2, rt0.c1, rt0.c1))))>=(((rt0.c0)|(rt0.c3))))))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((((((((rt0.c3, vt1.c0, rt0.c4))<=((rt0.c2, rt0.c1, rt0.c1))))>=(((rt0.c0)|(rt0.c3))))) ISNULL));
SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((LTRIM(rt0.c0, rt0.c2)))>=((((rt0.c1)>(rt0.c3)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((LTRIM(rt0.c0, rt0.c2)))>=((((rt0.c1)>(rt0.c3)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((LTRIM(rt0.c0, rt0.c2)))>=((((rt0.c1)>(rt0.c3)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt1.c0 FROM t0, vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0, vt1, v0 WHERE ((((vt1.c0 COLLATE BINARY))=(((((((((('!l{\nrxP')OR(v0.c0)))OR(7.63664269E8)))OR(v0.c0)))OR(v0.c1)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t0, vt1, v0 WHERE ((NOT ((((vt1.c0 COLLATE BINARY))=(((((((((('!l{\nrxP')OR(v0.c0)))OR(7.63664269E8)))OR(v0.c0)))OR(v0.c1)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t0, vt1, v0 WHERE ((((((vt1.c0 COLLATE BINARY))=(((((((((('!l{\nrxP')OR(v0.c0)))OR(7.63664269E8)))OR(v0.c0)))OR(v0.c1)))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0, vt1, v0 GROUP BY vt1.c0;
SELECT ALL vt1.c0, v0.c2, t0.c0, v0.c0 FROM v0, t0 NATURAL JOIN vt1 GROUP BY vt1.c0, v0.c2, t0.c0, v0.c0;
SELECT ALL vt1.c0, v0.c2, t0.c0, v0.c0 FROM v0, t0 NATURAL JOIN vt1 GROUP BY vt1.c0, v0.c2, t0.c0, v0.c0 HAVING ((GROUP_CONCAT(v0.c1)) IS FALSE) UNION ALL SELECT vt1.c0, v0.c2, t0.c0, v0.c0 FROM v0, t0 NATURAL JOIN vt1 GROUP BY vt1.c0, v0.c2, t0.c0, v0.c0 HAVING (NOT (((GROUP_CONCAT(v0.c1)) IS FALSE))) UNION ALL SELECT ALL vt1.c0, v0.c2, t0.c0, v0.c0 FROM v0, t0 NATURAL JOIN vt1 GROUP BY vt1.c0, v0.c2, t0.c0, v0.c0 HAVING ((((GROUP_CONCAT(v0.c1)) IS FALSE)) ISNULL);
SELECT ALL vt1.c0, v0.c2, t0.c0, v0.c0 FROM v0, t0 NATURAL JOIN vt1 GROUP BY vt1.c0, v0.c2, t0.c0, v0.c0;
SELECT ALL vt1.c0, v0.c2, t0.c0, v0.c0 FROM v0, t0 NATURAL JOIN vt1 GROUP BY vt1.c0, v0.c2, t0.c0, v0.c0 HAVING ((GROUP_CONCAT(v0.c1)) IS FALSE) UNION ALL SELECT vt1.c0, v0.c2, t0.c0, v0.c0 FROM v0, t0 NATURAL JOIN vt1 GROUP BY vt1.c0, v0.c2, t0.c0, v0.c0 HAVING (NOT (((GROUP_CONCAT(v0.c1)) IS FALSE))) UNION ALL SELECT ALL vt1.c0, v0.c2, t0.c0, v0.c0 FROM v0, t0 NATURAL JOIN vt1 GROUP BY vt1.c0, v0.c2, t0.c0, v0.c0 HAVING ((((GROUP_CONCAT(v0.c1)) IS FALSE)) ISNULL);
SELECT ALL vt1.c0, v0.c2, t0.c0, v0.c0 FROM v0, t0 NATURAL JOIN vt1 GROUP BY vt1.c0, v0.c2, t0.c0, v0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (ABS(DISTINCT v0.c1) COLLATE RTRIM) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (ABS(DISTINCT v0.c1) COLLATE RTRIM))) UNION ALL SELECT * FROM v0 WHERE (((ABS(DISTINCT v0.c1) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON CASE t0.c0 COLLATE RTRIM  WHEN (~ (t0.c0)) THEN (NOT (x'6296')) WHEN (('-1645579484') BETWEEN (v0.c2) AND (v0.c0)) THEN TYPEOF(v0.c1) WHEN ((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)) THEN (t0.c0 IN ()) END;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON CASE t0.c0 COLLATE RTRIM  WHEN (~ (t0.c0)) THEN (NOT (x'6296')) WHEN (('-1645579484') BETWEEN (v0.c2) AND (v0.c0)) THEN TYPEOF(v0.c1) WHEN ((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)) THEN (t0.c0 IN ()) END WHERE (((((t0.c0) NOT NULL))<(((x'')/(v0.c2))))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON CASE t0.c0 COLLATE RTRIM  WHEN (~ (t0.c0)) THEN (NOT (x'6296')) WHEN (('-1645579484') BETWEEN (v0.c2) AND (v0.c0)) THEN TYPEOF(v0.c1) WHEN ((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)) THEN (t0.c0 IN ()) END WHERE ((NOT (((((t0.c0) NOT NULL))<(((x'')/(v0.c2))))))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON CASE t0.c0 COLLATE RTRIM  WHEN (~ (t0.c0)) THEN (NOT (x'6296')) WHEN (('-1645579484') BETWEEN (v0.c2) AND (v0.c0)) THEN TYPEOF(v0.c1) WHEN ((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)) THEN (t0.c0 IN ()) END WHERE (((((((t0.c0) NOT NULL))<(((x'')/(v0.c2))))) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON CASE t0.c0 COLLATE RTRIM  WHEN (~ (t0.c0)) THEN (NOT (x'6296')) WHEN (('-1645579484') BETWEEN (v0.c2) AND (v0.c0)) THEN TYPEOF(v0.c1) WHEN ((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)) THEN (t0.c0 IN ()) END;
SELECT vt1.c0, v0.c0, v0.c1 FROM vt1, v0 GROUP BY vt1.c0, v0.c0, v0.c1;
SELECT ALL vt1.c0, v0.c0, v0.c1 FROM vt1 NOT INDEXED, v0 WHERE (TRIM(((v0.c2)<(v0.c1)))) GROUP BY vt1.c0, v0.c0, v0.c1 UNION SELECT ALL vt1.c0, v0.c0, v0.c1 FROM vt1, v0 WHERE ((NOT (TRIM(((v0.c2)<(v0.c1)))))) GROUP BY vt1.c0, v0.c0, v0.c1 UNION SELECT ALL vt1.c0, v0.c0, v0.c1 FROM vt1, v0 WHERE (((TRIM(((v0.c2)<(v0.c1)))) ISNULL)) GROUP BY vt1.c0, v0.c0, v0.c1;
SELECT vt1.c0, v0.c0, v0.c1 FROM vt1, v0 GROUP BY vt1.c0, v0.c0, v0.c1;
SELECT ALL rt0.c4, v0.c2, v0.c1 FROM v0 FULL OUTER JOIN rt0 ON (((vt1.c0 IN (rt0.c2))) BETWEEN (CASE v0.c0  WHEN v0.c1 THEN 0.8844695530301441 END) AND ((~ (t0.c0)))) LEFT OUTER JOIN t0 ON HEX(DISTINCT CAST('0.24904004322275985' AS NUMERIC)) INNER JOIN vt1 ON ((NOT (rt0.c2)) IN ((((rt0.c4)) NOT BETWEEN ((v0.c0)) AND ((rt0.c3))), ((((vt1.c0)AND(rt0.c1)))AND(vt1.c0)))) GROUP BY rt0.c4, v0.c2, v0.c1;
SELECT t0.c0, rt0.c4, rt0.c3 FROM v0, rt0, t0;
SELECT t0.c0, rt0.c4, rt0.c3 FROM v0, rt0, t0 WHERE (json_array_length(CASE rt0.c4  WHEN v0.c0 THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN v0.c2 THEN rt0.c0 ELSE 0.7867300351066688 END, ((v0.c1)GLOB(rt0.c2)))) UNION ALL SELECT t0.c0, rt0.c4, rt0.c3 FROM v0, rt0, t0 WHERE ((NOT (json_array_length(CASE rt0.c4  WHEN v0.c0 THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN v0.c2 THEN rt0.c0 ELSE 0.7867300351066688 END, ((v0.c1)GLOB(rt0.c2)))))) UNION ALL SELECT t0.c0, rt0.c4, rt0.c3 FROM v0, rt0, t0 WHERE (((json_array_length(CASE rt0.c4  WHEN v0.c0 THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN v0.c2 THEN rt0.c0 ELSE 0.7867300351066688 END, ((v0.c1)GLOB(rt0.c2)))) ISNULL));
SELECT t0.c0, rt0.c4, rt0.c3 FROM v0, rt0, t0;
SELECT DISTINCT * FROM t0, v0 RIGHT OUTER JOIN vt1 ON ((((((t0.c0)%(vt1.c0)))OR(((v0.c0)>>(t0.c0)))))AND(LOWER(DISTINCT t0.c0)));
SELECT DISTINCT * FROM t0, v0 RIGHT OUTER JOIN vt1 ON ((((((t0.c0)%(vt1.c0)))OR(((v0.c0)>>(t0.c0)))))AND(LOWER(DISTINCT t0.c0))) WHERE ((((v0.c1, v0.c1, -1.603075305E9)) NOT BETWEEN (((- ('')), v0.c0 COLLATE BINARY, ((vt1.c0)GLOB(v0.c2)))) AND ((CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END, v0.c0, NULL)))) UNION SELECT DISTINCT * FROM t0, v0 RIGHT OUTER JOIN vt1 ON ((((((t0.c0)%(vt1.c0)))OR(((v0.c0)>>(t0.c0)))))AND(LOWER(DISTINCT t0.c0))) WHERE ((NOT ((((v0.c1, v0.c1, -1.603075305E9)) NOT BETWEEN (((- ('')), v0.c0 COLLATE BINARY, ((vt1.c0)GLOB(v0.c2)))) AND ((CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END, v0.c0, NULL)))))) UNION SELECT DISTINCT * FROM t0, v0 RIGHT OUTER JOIN vt1 ON ((((((t0.c0)%(vt1.c0)))OR(((v0.c0)>>(t0.c0)))))AND(LOWER(DISTINCT t0.c0))) WHERE ((((((v0.c1, v0.c1, -1.603075305E9)) NOT BETWEEN (((- ('')), v0.c0 COLLATE BINARY, ((vt1.c0)GLOB(v0.c2)))) AND ((CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END, v0.c0, NULL)))) ISNULL));
SELECT DISTINCT * FROM t0, v0 RIGHT OUTER JOIN vt1 ON ((((((t0.c0)%(vt1.c0)))OR(((v0.c0)>>(t0.c0)))))AND(LOWER(DISTINCT t0.c0)));
SELECT rt0.c0 FROM v0, vt1, rt0 NOT INDEXED GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, vt1, rt0 WHERE (((((CASE rt0.c1  WHEN v0.c1 THEN rt0.c3 ELSE rt0.c2 END)AND('B	')))OR(((rt0.c4) NOTNULL)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM v0, vt1, rt0 WHERE ((NOT (((((CASE rt0.c1  WHEN v0.c1 THEN rt0.c3 ELSE rt0.c2 END)AND('B	')))OR(((rt0.c4) NOTNULL)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM v0, vt1, rt0 WHERE (((((((CASE rt0.c1  WHEN v0.c1 THEN rt0.c3 ELSE rt0.c2 END)AND('B	')))OR(((rt0.c4) NOTNULL)))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM v0, vt1, rt0 NOT INDEXED GROUP BY rt0.c0;
SELECT vt1.c0, v0.c2 FROM rt0, vt1, t0, v0 GROUP BY vt1.c0, v0.c2;
SELECT vt1.c0, v0.c2 FROM rt0, vt1, t0, v0 GROUP BY vt1.c0, v0.c2 HAVING MIN((~ (v0.c1))) UNION ALL SELECT vt1.c0, v0.c2 FROM rt0, vt1, t0, v0 GROUP BY vt1.c0, v0.c2 HAVING (NOT (MIN((~ (v0.c1))))) UNION ALL SELECT vt1.c0, v0.c2 FROM rt0, vt1, t0, v0 GROUP BY vt1.c0, v0.c2 HAVING ((MIN((~ (v0.c1)))) ISNULL);
SELECT vt1.c0, v0.c2 FROM rt0, vt1, t0, v0 GROUP BY vt1.c0, v0.c2;
SELECT vt1.c0, v0.c2 FROM rt0, vt1, t0, v0 GROUP BY vt1.c0, v0.c2 HAVING MIN((~ (v0.c1))) UNION ALL SELECT vt1.c0, v0.c2 FROM rt0, vt1, t0, v0 GROUP BY vt1.c0, v0.c2 HAVING (NOT (MIN((~ (v0.c1))))) UNION ALL SELECT vt1.c0, v0.c2 FROM rt0, vt1, t0, v0 GROUP BY vt1.c0, v0.c2 HAVING ((MIN((~ (v0.c1)))) ISNULL);
SELECT vt1.c0, v0.c2 FROM rt0, vt1, t0, v0 GROUP BY vt1.c0, v0.c2;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4, vt1.c0 FROM rt0, vt1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4, vt1.c0 FROM rt0, vt1 WHERE ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c4)) IN ())) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4, vt1.c0 FROM rt0, vt1 WHERE ((NOT ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c4)) IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4, vt1.c0 FROM rt0, vt1 WHERE ((((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c4)) IN ())) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT v0.c2, v0.c1, t0.c0 FROM t0, v0;
SELECT DISTINCT v0.c2, v0.c1, t0.c0 FROM t0 NOT INDEXED, v0 WHERE (CAST(NULL COLLATE NOCASE AS TEXT)) UNION SELECT DISTINCT v0.c2, v0.c1, t0.c0 FROM t0, v0 WHERE ((NOT (CAST(NULL COLLATE NOCASE AS TEXT)))) UNION SELECT DISTINCT v0.c2, v0.c1, t0.c0 FROM t0, v0 WHERE (((CAST(NULL COLLATE NOCASE AS TEXT)) ISNULL));
SELECT DISTINCT v0.c2, v0.c1, t0.c0 FROM t0, v0;
SELECT ALL t0.c0, v0.c0, v0.c1, v0.c2 FROM v0 CROSS JOIN t0 ON ((UNLIKELY(v0.c0))AND(t0.c0)) GROUP BY t0.c0, v0.c0, v0.c1, v0.c2;
SELECT ALL t0.c0, v0.c0, v0.c1, v0.c2 FROM v0 CROSS JOIN t0 ON ((UNLIKELY(v0.c0))AND(t0.c0)) WHERE ((((CASE WHEN v0.c2 THEN t0.c0 WHEN t0.c0 THEN x'' WHEN v0.c2 THEN v0.c0 ELSE v0.c0 END, ((((((((v0.c2)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(t0.c0)), NULL))<((CASE WHEN t0.c0 THEN v0.c2 END, CASE t0.c0  WHEN '' THEN t0.c0 ELSE t0.c0 END, (((v0.c0, t0.c0, v0.c2))!=((v0.c0, v0.c2, v0.c1))))))) GROUP BY t0.c0, v0.c0, v0.c1, v0.c2 UNION SELECT t0.c0, v0.c0, v0.c1, v0.c2 FROM v0 CROSS JOIN t0 ON ((UNLIKELY(v0.c0))AND(t0.c0)) WHERE ((NOT ((((CASE WHEN v0.c2 THEN t0.c0 WHEN t0.c0 THEN x'' WHEN v0.c2 THEN v0.c0 ELSE v0.c0 END, ((((((((v0.c2)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(t0.c0)), NULL))<((CASE WHEN t0.c0 THEN v0.c2 END, CASE t0.c0  WHEN '' THEN t0.c0 ELSE t0.c0 END, (((v0.c0, t0.c0, v0.c2))!=((v0.c0, v0.c2, v0.c1))))))))) GROUP BY t0.c0, v0.c0, v0.c1, v0.c2 UNION SELECT t0.c0, v0.c0, v0.c1, v0.c2 FROM v0 CROSS JOIN t0 ON ((UNLIKELY(v0.c0))AND(t0.c0)) WHERE ((((((CASE WHEN v0.c2 THEN t0.c0 WHEN t0.c0 THEN x'' WHEN v0.c2 THEN v0.c0 ELSE v0.c0 END, ((((((((v0.c2)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(t0.c0)), NULL))<((CASE WHEN t0.c0 THEN v0.c2 END, CASE t0.c0  WHEN '' THEN t0.c0 ELSE t0.c0 END, (((v0.c0, t0.c0, v0.c2))!=((v0.c0, v0.c2, v0.c1))))))) ISNULL)) GROUP BY t0.c0, v0.c0, v0.c1, v0.c2;
SELECT ALL t0.c0, v0.c0, v0.c1, v0.c2 FROM v0 CROSS JOIN t0 ON ((UNLIKELY(v0.c0))AND(t0.c0)) GROUP BY t0.c0, v0.c0, v0.c1, v0.c2;
SELECT ALL vt1.c0, t0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0, t0, vt1 GROUP BY vt1.c0, t0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0;
SELECT ALL vt1.c0, t0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0, t0, vt1 GROUP BY vt1.c0, t0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0 HAVING SUM((- (vt1.c0))) UNION ALL SELECT ALL vt1.c0, t0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0, t0, vt1 GROUP BY vt1.c0, t0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0 HAVING (NOT (SUM((- (vt1.c0))))) UNION ALL SELECT ALL vt1.c0, t0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0, t0, vt1 GROUP BY vt1.c0, t0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0 HAVING ((SUM((- (vt1.c0)))) ISNULL);
SELECT ALL vt1.c0, t0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0, t0, vt1 GROUP BY vt1.c0, t0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0;
SELECT ALL vt1.c0, t0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0, t0, vt1 GROUP BY vt1.c0, t0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0 HAVING SUM((- (vt1.c0))) UNION ALL SELECT ALL vt1.c0, t0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0, t0, vt1 GROUP BY vt1.c0, t0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0 HAVING (NOT (SUM((- (vt1.c0))))) UNION ALL SELECT ALL vt1.c0, t0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0, t0, vt1 GROUP BY vt1.c0, t0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0 HAVING ((SUM((- (vt1.c0)))) ISNULL);
SELECT ALL vt1.c0, t0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0, t0, vt1 GROUP BY vt1.c0, t0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CASE (rt0.c0 IN (rt0.c4, 1.424414315E9))  WHEN CHANGES() THEN ((rt0.c4)>>(rt0.c3)) END) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE (rt0.c0 IN (rt0.c4, 1.424414315E9))  WHEN CHANGES() THEN ((rt0.c4)>>(rt0.c3)) END))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE (rt0.c0 IN (rt0.c4, 1.424414315E9))  WHEN CHANGES() THEN ((rt0.c4)>>(rt0.c3)) END) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (((TYPEOF(t0.c0))>>((v0.c2 IN (v0.c0))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (((TYPEOF(t0.c0))>>((v0.c2 IN (v0.c0))))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((((TYPEOF(t0.c0))>>((v0.c2 IN (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT v0.c1, vt1.c0, v0.c0, v0.c2 FROM v0, vt1 GROUP BY v0.c1, vt1.c0, v0.c0, v0.c2;
SELECT ALL v0.c1, vt1.c0, v0.c0, v0.c2 FROM v0, vt1 WHERE (((((v0.c0)-(v0.c0)))-(((v0.c2) NOTNULL)))) GROUP BY v0.c1, vt1.c0, v0.c0, v0.c2 UNION SELECT ALL v0.c1, vt1.c0, v0.c0, v0.c2 FROM v0, vt1 WHERE ((NOT (((((v0.c0)-(v0.c0)))-(((v0.c2) NOTNULL)))))) GROUP BY v0.c1, vt1.c0, v0.c0, v0.c2 UNION SELECT ALL v0.c1, vt1.c0, v0.c0, v0.c2 FROM v0, vt1 WHERE (((((((v0.c0)-(v0.c0)))-(((v0.c2) NOTNULL)))) ISNULL)) GROUP BY v0.c1, vt1.c0, v0.c0, v0.c2;
SELECT v0.c1, vt1.c0, v0.c0, v0.c2 FROM v0, vt1 GROUP BY v0.c1, vt1.c0, v0.c0, v0.c2;
SELECT ALL rt0.c3, rt0.c2, vt1.c0, rt0.c0, rt0.c1, rt0.c4 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c2, vt1.c0, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, rt0.c2, vt1.c0, rt0.c0, rt0.c1, rt0.c4 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c2, vt1.c0, rt0.c0, rt0.c1, rt0.c4 HAVING (((MIN(GROUP_CONCAT(rt0.c1)), GROUP_CONCAT(MIN(rt0.c0)), SUM(COUNT(*))))<((((MAX(MIN(rt0.c0))) NOT NULL), TOTAL(rt0.c3), 0.3305912308161586))) UNION ALL SELECT ALL rt0.c3, rt0.c2, vt1.c0, rt0.c0, rt0.c1, rt0.c4 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c2, vt1.c0, rt0.c0, rt0.c1, rt0.c4 HAVING (NOT ((((MIN(GROUP_CONCAT(rt0.c1)), GROUP_CONCAT(MIN(rt0.c0)), SUM(COUNT(*))))<((((MAX(MIN(rt0.c0))) NOT NULL), TOTAL(rt0.c3), 0.3305912308161586))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, vt1.c0, rt0.c0, rt0.c1, rt0.c4 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c2, vt1.c0, rt0.c0, rt0.c1, rt0.c4 HAVING (((((MIN(GROUP_CONCAT(rt0.c1)), GROUP_CONCAT(MIN(rt0.c0)), SUM(COUNT(*))))<((((MAX(MIN(rt0.c0))) NOT NULL), TOTAL(rt0.c3), 0.3305912308161586)))) ISNULL);
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE ((((rt0.c1)) BETWEEN ((ROUND(rt0.c3, -1099637032))) AND ((((v0.c1) NOT NULL))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((ROUND(rt0.c3, -1099637032))) AND ((((v0.c1) NOT NULL))))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((((rt0.c1)) BETWEEN ((ROUND(rt0.c3, -1099637032))) AND ((((v0.c1) NOT NULL))))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, t0, v0;
SELECT DISTINCT * FROM rt0, t0, v0 WHERE (((v0.c0)*(CAST(rt0.c1 AS REAL)))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED, t0, v0 WHERE ((NOT (((v0.c0)*(CAST(rt0.c1 AS REAL)))))) UNION SELECT DISTINCT * FROM rt0, t0, v0 WHERE (((((v0.c0)*(CAST(rt0.c1 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM rt0, t0, v0;
SELECT ALL vt1.c0, rt0.c4, rt0.c2, t0.c0, rt0.c3, rt0.c1 FROM vt1, t0, rt0 GROUP BY vt1.c0, rt0.c4, rt0.c2, t0.c0, rt0.c3, rt0.c1;
SELECT vt1.c0, rt0.c4, rt0.c2, t0.c0, rt0.c3, rt0.c1 FROM vt1, t0, rt0 WHERE ((- (((rt0.c2) NOT NULL)))) GROUP BY vt1.c0, rt0.c4, rt0.c2, t0.c0, rt0.c3, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c4, rt0.c2, t0.c0, rt0.c3, rt0.c1 FROM vt1, t0, rt0 WHERE ((NOT ((- (((rt0.c2) NOT NULL)))))) GROUP BY vt1.c0, rt0.c4, rt0.c2, t0.c0, rt0.c3, rt0.c1 UNION SELECT vt1.c0, rt0.c4, rt0.c2, t0.c0, rt0.c3, rt0.c1 FROM vt1, t0, rt0 WHERE ((((- (((rt0.c2) NOT NULL)))) ISNULL)) GROUP BY vt1.c0, rt0.c4, rt0.c2, t0.c0, rt0.c3, rt0.c1;
SELECT ALL vt1.c0, rt0.c4, rt0.c2, t0.c0, rt0.c3, rt0.c1 FROM vt1, t0, rt0 GROUP BY vt1.c0, rt0.c4, rt0.c2, t0.c0, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON 0.7529942945535326 RIGHT OUTER JOIN t0 ON (((((t0.c0))=((vt1.c0))))>=(rt0.c3));
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON 0.7529942945535326 RIGHT OUTER JOIN t0 ON (((((t0.c0))=((vt1.c0))))>=(rt0.c3)) WHERE ((rt0.c1 COLLATE RTRIM IN (((((((((((((t0.c0)AND(x'72637f40')))AND(rt0.c4)))AND(t0.c0)))OR(vt1.c0)))OR(rt0.c4)))OR(rt0.c3))))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON 0.7529942945535326 RIGHT OUTER JOIN t0 ON (((((t0.c0))=((vt1.c0))))>=(rt0.c3)) WHERE ((NOT ((rt0.c1 COLLATE RTRIM IN (((((((((((((t0.c0)AND(x'72637f40')))AND(rt0.c4)))AND(t0.c0)))OR(vt1.c0)))OR(rt0.c4)))OR(rt0.c3))))))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON 0.7529942945535326 RIGHT OUTER JOIN t0 ON (((((t0.c0))==((vt1.c0))))>=(rt0.c3)) WHERE ((((rt0.c1 COLLATE RTRIM IN (((((((((((((t0.c0)AND(x'72637f40')))AND(rt0.c4)))AND(t0.c0)))OR(vt1.c0)))OR(rt0.c4)))OR(rt0.c3))))) ISNULL));
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON 0.7529942945535326 RIGHT OUTER JOIN t0 ON (((((t0.c0))=((vt1.c0))))>=(rt0.c3));
SELECT DISTINCT v0.c1, rt0.c3, vt1.c0, v0.c2, v0.c0 FROM vt1, v0, rt0;
SELECT DISTINCT v0.c1, rt0.c3, vt1.c0, v0.c2, v0.c0 FROM vt1, v0, rt0 WHERE (CASE WHEN ((rt0.c3)+(rt0.c4)) THEN ((((v0.c1)OR(rt0.c2)))AND(rt0.c1)) ELSE ((rt0.c4)IS NOT(rt0.c4)) END) UNION SELECT DISTINCT v0.c1, rt0.c3, vt1.c0, v0.c2, v0.c0 FROM vt1, v0, rt0 WHERE ((NOT (CASE WHEN ((rt0.c3)+(rt0.c4)) THEN ((((v0.c1)OR(rt0.c2)))AND(rt0.c1)) ELSE ((rt0.c4)IS NOT(rt0.c4)) END))) UNION SELECT DISTINCT v0.c1, rt0.c3, vt1.c0, v0.c2, v0.c0 FROM vt1, v0, rt0 WHERE (((CASE WHEN ((rt0.c3)+(rt0.c4)) THEN ((((v0.c1)OR(rt0.c2)))AND(rt0.c1)) ELSE ((rt0.c4)IS NOT(rt0.c4)) END) ISNULL));
SELECT DISTINCT v0.c1, rt0.c3, vt1.c0, v0.c2, v0.c0 FROM vt1, v0, rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS INTEGER)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST((vt1.c0 IN ()) AS INTEGER)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST((vt1.c0 IN ()) AS INTEGER)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2, vt1.c0, t0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM vt1, rt0, t0 GROUP BY rt0.c2, vt1.c0, t0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT ALL rt0.c2, vt1.c0, t0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM vt1, rt0, t0 GROUP BY rt0.c2, vt1.c0, t0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c1 HAVING MAX(SUM(rt0.c2)) UNION ALL SELECT rt0.c2, vt1.c0, t0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM vt1, rt0, t0 GROUP BY rt0.c2, vt1.c0, t0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c1 HAVING (NOT (MAX(SUM(rt0.c2)))) UNION ALL SELECT ALL rt0.c2, vt1.c0, t0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM vt1, rt0, t0 GROUP BY rt0.c2, vt1.c0, t0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c1 HAVING ((MAX(SUM(rt0.c2))) ISNULL);
SELECT ALL MAX('') FROM vt1, rt0;
SELECT v0.c2, v0.c1 FROM v0;
SELECT ALL v0.c2, v0.c1 FROM v0 WHERE (((((v0.c2)GLOB(v0.c0)))+(CASE v0.c0  WHEN v0.c1 THEN v0.c0 END))) UNION ALL SELECT ALL v0.c2, v0.c1 FROM v0 WHERE ((NOT (((((v0.c2)GLOB(v0.c0)))+(CASE v0.c0  WHEN v0.c1 THEN v0.c0 END))))) UNION ALL SELECT ALL v0.c2, v0.c1 FROM v0 WHERE (((((((v0.c2)GLOB(v0.c0)))+(CASE v0.c0  WHEN v0.c1 THEN v0.c0 END))) ISNULL));
SELECT v0.c2, v0.c1 FROM v0;
SELECT DISTINCT v0.c1, t0.c0, vt1.c0, v0.c2, v0.c0 FROM vt1, v0, t0;
SELECT DISTINCT v0.c1, t0.c0, vt1.c0, v0.c2, v0.c0 FROM vt1, v0, t0 WHERE (json_insert((v0.c1 IN ()), vt1.c0, ((vt1.c0)>=(v0.c1)), (NOT (v0.c1)), ((v0.c0)>(v0.c1)))) UNION SELECT DISTINCT v0.c1, t0.c0, vt1.c0, v0.c2, v0.c0 FROM vt1, v0, t0 WHERE ((NOT (json_insert((v0.c1 IN ()), vt1.c0, ((vt1.c0)>=(v0.c1)), (NOT (v0.c1)), ((v0.c0)>(v0.c1)))))) UNION SELECT DISTINCT v0.c1, t0.c0, vt1.c0, v0.c2, v0.c0 FROM vt1, v0, t0 WHERE (((json_insert((v0.c1 IN ()), vt1.c0, ((vt1.c0)>=(v0.c1)), (NOT (v0.c1)), ((v0.c0)>(v0.c1)))) ISNULL));
SELECT v0.c1 FROM rt0, v0, t0, vt1 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM rt0, v0, t0, vt1 NOT INDEXED WHERE (((((rt0.c1) BETWEEN (rt0.c4) AND (v0.c0))) BETWEEN (((v0.c2) BETWEEN (rt0.c3) AND (NULL))) AND (((((((((rt0.c4)AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c0)))OR(0.5932301838797387))))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM rt0, v0, t0, vt1 WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c4) AND (v0.c0))) BETWEEN (((v0.c2) BETWEEN (rt0.c3) AND (NULL))) AND (((((((((rt0.c4)AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c0)))OR(0.5932301838797387))))))) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM rt0, v0, t0, vt1 WHERE (((((((rt0.c1) BETWEEN (rt0.c4) AND (v0.c0))) BETWEEN (((v0.c2) BETWEEN (rt0.c3) AND (NULL))) AND (((((((((rt0.c4)AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c0)))OR(0.5932301838797387))))) ISNULL)) GROUP BY v0.c1;
SELECT v0.c1 FROM rt0, v0, t0, vt1 GROUP BY v0.c1;
SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1;
SELECT rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1 HAVING AVG(CASE rt0.c1  WHEN SUM(rt0.c1) THEN rt0.c0 WHEN rt0.c0 THEN MIN(MIN(rt0.c0)) WHEN SUM(rt0.c2) THEN TOTAL(MIN(COUNT(MAX(SUM(rt0.c1))))) END) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1 HAVING (NOT (AVG(CASE rt0.c1  WHEN SUM(rt0.c1) THEN rt0.c0 WHEN rt0.c0 THEN MIN(MIN(rt0.c0)) WHEN SUM(rt0.c2) THEN TOTAL(MIN(COUNT(MAX(SUM(rt0.c1))))) END))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1 HAVING ((AVG(CASE rt0.c1  WHEN SUM(rt0.c1) THEN rt0.c0 WHEN rt0.c0 THEN MIN(MIN(rt0.c0)) WHEN SUM(rt0.c2) THEN TOTAL(MIN(COUNT(MAX(SUM(rt0.c1))))) END)) ISNULL);
SELECT vt1.c0, v0.c1, v0.c2, rt0.c2, t0.c0, rt0.c0, rt0.c3 FROM vt1 RIGHT OUTER JOIN v0 ON CAST(v0.c1 AS INTEGER) COLLATE NOCASE RIGHT OUTER JOIN t0 ON ((v0.c1) IS TRUE) COLLATE NOCASE CROSS JOIN rt0 ON (((COALESCE(DISTINCT rt0.c2, v0.c1, v0.c1, rt0.c1)))<=((CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT ALL vt1.c0, v0.c1, v0.c2, rt0.c2, t0.c0, rt0.c0, rt0.c3 FROM vt1 RIGHT OUTER JOIN v0 ON CAST(v0.c1 AS INTEGER) COLLATE NOCASE RIGHT OUTER JOIN t0 ON ((v0.c1) IS TRUE) COLLATE NOCASE CROSS JOIN rt0 ON (((COALESCE(DISTINCT rt0.c2, v0.c1, v0.c1, rt0.c1)))<=((CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END))) WHERE (LENGTH(COALESCE(DISTINCT t0.c0, 0.2798536387012097, rt0.c0, t0.c0))) UNION ALL SELECT vt1.c0, v0.c1, v0.c2, rt0.c2, t0.c0, rt0.c0, rt0.c3 FROM vt1 RIGHT OUTER JOIN v0 ON CAST(v0.c1 AS INTEGER) COLLATE NOCASE RIGHT OUTER JOIN t0 ON ((v0.c1) IS TRUE) COLLATE NOCASE CROSS JOIN rt0 ON (((COALESCE(DISTINCT rt0.c2, v0.c1, v0.c1, rt0.c1)))<=((CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END))) WHERE ((NOT (LENGTH(COALESCE(DISTINCT t0.c0, 0.2798536387012097, rt0.c0, t0.c0))))) UNION ALL SELECT ALL vt1.c0, v0.c1, v0.c2, rt0.c2, t0.c0, rt0.c0, rt0.c3 FROM vt1 RIGHT OUTER JOIN v0 ON CAST(v0.c1 AS INTEGER) COLLATE NOCASE RIGHT OUTER JOIN t0 ON ((v0.c1) IS TRUE) COLLATE NOCASE CROSS JOIN rt0 ON (((COALESCE(DISTINCT rt0.c2, v0.c1, v0.c1, rt0.c1)))<=((CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END))) WHERE (((LENGTH(COALESCE(DISTINCT t0.c0, 0.2798536387012097, rt0.c0, t0.c0))) ISNULL));
SELECT vt1.c0, v0.c1, v0.c2, rt0.c2, t0.c0, rt0.c0, rt0.c3 FROM vt1 RIGHT OUTER JOIN v0 ON CAST(v0.c1 AS INTEGER) COLLATE NOCASE RIGHT OUTER JOIN t0 ON ((v0.c1) IS TRUE) COLLATE NOCASE CROSS JOIN rt0 ON (((COALESCE(DISTINCT rt0.c2, v0.c1, v0.c1, rt0.c1)))<=((CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT DISTINCT t0.c0, rt0.c0, rt0.c4, v0.c2, rt0.c1, rt0.c3, rt0.c2 FROM rt0, t0, vt1, v0;
SELECT DISTINCT t0.c0, rt0.c0, rt0.c4, v0.c2, rt0.c1, rt0.c3, rt0.c2 FROM rt0, t0, vt1, v0 WHERE (NULL) UNION SELECT DISTINCT t0.c0, rt0.c0, rt0.c4, v0.c2, rt0.c1, rt0.c3, rt0.c2 FROM rt0, t0, vt1, v0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT t0.c0, rt0.c0, rt0.c4, v0.c2, rt0.c1, rt0.c3, rt0.c2 FROM rt0, t0, vt1, v0 WHERE (((NULL) ISNULL));
SELECT DISTINCT t0.c0, rt0.c0, rt0.c4, v0.c2, rt0.c1, rt0.c3, rt0.c2 FROM rt0, t0, vt1, v0;
SELECT rt0.c3, v0.c2, v0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, t0, v0 GROUP BY rt0.c3, v0.c2, v0.c0, vt1.c0, rt0.c2;
SELECT ALL rt0.c3, v0.c2, v0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, t0, v0 WHERE ((((vt1.c0 IN ())) IS TRUE)) GROUP BY rt0.c3, v0.c2, v0.c0, vt1.c0, rt0.c2 UNION SELECT rt0.c3, v0.c2, v0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, t0, v0 WHERE ((NOT ((((vt1.c0 IN ())) IS TRUE)))) GROUP BY rt0.c3, v0.c2, v0.c0, vt1.c0, rt0.c2 UNION SELECT rt0.c3, v0.c2, v0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, t0, v0 WHERE ((((((vt1.c0 IN ())) IS TRUE)) ISNULL)) GROUP BY rt0.c3, v0.c2, v0.c0, vt1.c0, rt0.c2;
SELECT rt0.c3, v0.c2, v0.c0, vt1.c0, rt0.c2 FROM rt0, vt1, t0, v0 GROUP BY rt0.c3, v0.c2, v0.c0, vt1.c0, rt0.c2;
SELECT rt0.c1, rt0.c0 FROM vt1 INNER JOIN rt0 ON (((((('	zꦛOz') NOT NULL))AND(CASE WHEN NULL THEN rt0.c1 WHEN vt1.c0 THEN v0.c1 WHEN rt0.c1 THEN v0.c1 ELSE rt0.c3 END)))OR((rt0.c2 IN (vt1.c0)))) LEFT OUTER JOIN v0 ON 0.7481948994349162 LEFT OUTER JOIN t0 ON ((((((x'')AND(rt0.c1)))OR(0.6525052411832053))) ISNULL) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM vt1 INNER JOIN rt0 ON (((((('	zꦛOz') NOT NULL))AND(CASE WHEN NULL THEN rt0.c1 WHEN vt1.c0 THEN v0.c1 WHEN rt0.c1 THEN v0.c1 ELSE rt0.c3 END)))OR((rt0.c2 IN (vt1.c0)))) LEFT OUTER JOIN v0 ON 0.7481948994349162 LEFT OUTER JOIN t0 ON ((((((x'')AND(rt0.c1)))OR(0.6525052411832053))) ISNULL) GROUP BY rt0.c1, rt0.c0 HAVING CASE WHEN TOTAL(rt0.c0) THEN COUNT(*) ELSE COUNT(v0.c2) END UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt1 INNER JOIN rt0 ON (((((('	zꦛOz') NOT NULL))AND(CASE WHEN NULL THEN rt0.c1 WHEN vt1.c0 THEN v0.c1 WHEN rt0.c1 THEN v0.c1 ELSE rt0.c3 END)))OR((rt0.c2 IN (vt1.c0)))) LEFT OUTER JOIN v0 ON 0.7481948994349162 LEFT OUTER JOIN t0 ON ((((((x'')AND(rt0.c1)))OR(0.6525052411832053))) ISNULL) GROUP BY rt0.c1, rt0.c0 HAVING (NOT (CASE WHEN TOTAL(rt0.c0) THEN COUNT(*) ELSE COUNT(v0.c2) END)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt1 INNER JOIN rt0 ON (((((('	zꦛOz') NOT NULL))AND(CASE WHEN NULL THEN rt0.c1 WHEN vt1.c0 THEN v0.c1 WHEN rt0.c1 THEN v0.c1 ELSE rt0.c3 END)))OR((rt0.c2 IN (vt1.c0)))) LEFT OUTER JOIN v0 ON 0.7481948994349162 LEFT OUTER JOIN t0 ON ((((((x'')AND(rt0.c1)))OR(0.6525052411832053))) ISNULL) GROUP BY rt0.c1, rt0.c0 HAVING ((CASE WHEN TOTAL(rt0.c0) THEN COUNT(*) ELSE COUNT(v0.c2) END) ISNULL);
SELECT rt0.c1, rt0.c0 FROM vt1 INNER JOIN rt0 ON (((((('	zꦛOz') NOT NULL))AND(CASE WHEN NULL THEN rt0.c1 WHEN vt1.c0 THEN v0.c1 WHEN rt0.c1 THEN v0.c1 ELSE rt0.c3 END)))OR((rt0.c2 IN (vt1.c0)))) LEFT OUTER JOIN v0 ON 0.7481948994349162 LEFT OUTER JOIN t0 ON ((((((x'')AND(rt0.c1)))OR(0.6525052411832053))) ISNULL) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM vt1 INNER JOIN rt0 ON (((((('	zꦛOz') NOT NULL))AND(CASE WHEN NULL THEN rt0.c1 WHEN vt1.c0 THEN v0.c1 WHEN rt0.c1 THEN v0.c1 ELSE rt0.c3 END)))OR((rt0.c2 IN (vt1.c0)))) LEFT OUTER JOIN v0 ON 0.7481948994349162 LEFT OUTER JOIN t0 ON ((((((x'')AND(rt0.c1)))OR(0.6525052411832053))) ISNULL) GROUP BY rt0.c1, rt0.c0 HAVING CASE WHEN TOTAL(rt0.c0) THEN COUNT(*) ELSE COUNT(v0.c2) END UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt1 INNER JOIN rt0 ON (((((('	zꦛOz') NOT NULL))AND(CASE WHEN NULL THEN rt0.c1 WHEN vt1.c0 THEN v0.c1 WHEN rt0.c1 THEN v0.c1 ELSE rt0.c3 END)))OR((rt0.c2 IN (vt1.c0)))) LEFT OUTER JOIN v0 ON 0.7481948994349162 LEFT OUTER JOIN t0 ON ((((((x'')AND(rt0.c1)))OR(0.6525052411832053))) ISNULL) GROUP BY rt0.c1, rt0.c0 HAVING (NOT (CASE WHEN TOTAL(rt0.c0) THEN COUNT(*) ELSE COUNT(v0.c2) END)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt1 INNER JOIN rt0 ON (((((('	zꦛOz') NOT NULL))AND(CASE WHEN NULL THEN rt0.c1 WHEN vt1.c0 THEN v0.c1 WHEN rt0.c1 THEN v0.c1 ELSE rt0.c3 END)))OR((rt0.c2 IN (vt1.c0)))) LEFT OUTER JOIN v0 ON 0.7481948994349162 LEFT OUTER JOIN t0 ON ((((((x'')AND(rt0.c1)))OR(0.6525052411832053))) ISNULL) GROUP BY rt0.c1, rt0.c0 HAVING ((CASE WHEN TOTAL(rt0.c0) THEN COUNT(*) ELSE COUNT(v0.c2) END) ISNULL);
SELECT rt0.c1, rt0.c0 FROM vt1 INNER JOIN rt0 ON (((((('	zꦛOz') NOT NULL))AND(CASE WHEN NULL THEN rt0.c1 WHEN vt1.c0 THEN v0.c1 WHEN rt0.c1 THEN v0.c1 ELSE rt0.c3 END)))OR((rt0.c2 IN (vt1.c0)))) LEFT OUTER JOIN v0 ON 0.7481948994349162 LEFT OUTER JOIN t0 ON ((((((x'')AND(rt0.c1)))OR(0.6525052411832053))) ISNULL) GROUP BY rt0.c1, rt0.c0;
SELECT v0.c1, v0.c0, vt1.c0 FROM vt1, t0, v0;
SELECT v0.c1, v0.c0, vt1.c0 FROM vt1, t0, v0 WHERE ((+ (((v0.c1) IS FALSE)))) UNION ALL SELECT v0.c1, v0.c0, vt1.c0 FROM vt1, t0, v0 WHERE ((NOT ((+ (((v0.c1) IS FALSE)))))) UNION ALL SELECT ALL v0.c1, v0.c0, vt1.c0 FROM vt1, t0, v0 WHERE ((((+ (((v0.c1) IS FALSE)))) ISNULL));
SELECT v0.c1, v0.c0, vt1.c0 FROM vt1, t0, v0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (DATETIME(((vt1.c0) NOT NULL), ((vt1.c0)<<(vt1.c0)), CAST(NULL AS BLOB))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (DATETIME(((vt1.c0) NOT NULL), ((vt1.c0)<<(vt1.c0)), CAST(NULL AS BLOB))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((DATETIME(((vt1.c0) NOT NULL), ((vt1.c0)<<(vt1.c0)), CAST(NULL AS BLOB))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL v0.c0, v0.c1, t0.c0 FROM vt1, v0, t0 GROUP BY v0.c0, v0.c1, t0.c0;
SELECT v0.c0, v0.c1, t0.c0 FROM vt1, v0, t0 WHERE (((((vt1.c0)>=('-2014998085'))) BETWEEN (((v0.c0) IS TRUE)) AND (((v0.c2) NOT NULL)))) GROUP BY v0.c0, v0.c1, t0.c0 UNION SELECT ALL v0.c0, v0.c1, t0.c0 FROM vt1, v0, t0 WHERE ((NOT (((((vt1.c0)>=('-2014998085'))) BETWEEN (((v0.c0) IS TRUE)) AND (((v0.c2) NOT NULL)))))) GROUP BY v0.c0, v0.c1, t0.c0 UNION SELECT v0.c0, v0.c1, t0.c0 FROM vt1, v0, t0 WHERE (((((((vt1.c0)>=('-2014998085'))) BETWEEN (((v0.c0) IS TRUE)) AND (((v0.c2) NOT NULL)))) ISNULL)) GROUP BY v0.c0, v0.c1, t0.c0;
SELECT ALL v0.c0, v0.c1, t0.c0 FROM vt1, v0, t0 GROUP BY v0.c0, v0.c1, t0.c0;
SELECT ALL v0.c2, t0.c0, v0.c0 FROM v0 CROSS JOIN t0 ON ((((v0.c2))<((v0.c2))) IN ()) GROUP BY v0.c2, t0.c0, v0.c0;
SELECT v0.c2, t0.c0, v0.c0 FROM v0 CROSS JOIN t0 ON ((((v0.c2))<((v0.c2))) IN ()) GROUP BY v0.c2, t0.c0, v0.c0 HAVING GROUP_CONCAT(((v0.c2) NOT BETWEEN (GROUP_CONCAT(GROUP_CONCAT('2024037595'))) AND (GROUP_CONCAT(v0.c0)))) UNION ALL SELECT ALL v0.c2, t0.c0, v0.c0 FROM v0 CROSS JOIN t0 ON ((((v0.c2))<((v0.c2))) IN ()) GROUP BY v0.c2, t0.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(((v0.c2) NOT BETWEEN (GROUP_CONCAT(GROUP_CONCAT('2024037595'))) AND (GROUP_CONCAT(v0.c0)))))) UNION ALL SELECT v0.c2, t0.c0, v0.c0 FROM v0 CROSS JOIN t0 ON ((((v0.c2))<((v0.c2))) IN ()) GROUP BY v0.c2, t0.c0, v0.c0 HAVING ((GROUP_CONCAT(((v0.c2) NOT BETWEEN (GROUP_CONCAT(GROUP_CONCAT('2024037595'))) AND (GROUP_CONCAT(v0.c0))))) ISNULL);
SELECT v0.c2 FROM vt1, v0, t0;
SELECT ALL v0.c2 FROM vt1, v0, t0 WHERE (((json_type(v0.c2)) ISNULL)) UNION ALL SELECT v0.c2 FROM vt1, v0, t0 WHERE ((NOT (((json_type(v0.c2)) ISNULL)))) UNION ALL SELECT v0.c2 FROM vt1, v0, t0 WHERE (((((json_type(v0.c2)) ISNULL)) ISNULL));
SELECT v0.c2 FROM vt1, v0, t0;
SELECT DISTINCT v0.c2, t0.c0 FROM t0, v0;
SELECT DISTINCT v0.c2, t0.c0 FROM t0, v0 WHERE ((((v0.c2, v0.c2, v0.c1))>((v0.c2, v0.c2, t0.c0))) COLLATE NOCASE) UNION SELECT DISTINCT v0.c2, t0.c0 FROM t0, v0 WHERE ((NOT ((((v0.c2, v0.c2, v0.c1))>((v0.c2, v0.c2, t0.c0))) COLLATE NOCASE))) UNION SELECT DISTINCT v0.c2, t0.c0 FROM t0, v0 WHERE ((((((v0.c2, v0.c2, v0.c1))>((v0.c2, v0.c2, t0.c0))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT v0.c2, t0.c0 FROM t0, v0;
SELECT ALL rt0.c0, t0.c0, vt1.c0, rt0.c1 FROM v0 LEFT OUTER JOIN t0 ON ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (vt1.c0)))||(CAST(vt1.c0 AS TEXT))) CROSS JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (v0.c1) AND (t0.c0))) ISNULL) RIGHT OUTER JOIN vt1 ON rt0.c3 GROUP BY rt0.c0, t0.c0, vt1.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM v0, t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4;
SELECT rt0.c1, rt0.c2, rt0.c4 FROM v0, t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING TOTAL(((GROUP_CONCAT(COUNT(t0.c0)))|(COUNT(MIN(rt0.c4))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4 FROM v0, t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING (NOT (TOTAL(((GROUP_CONCAT(COUNT(t0.c0)))|(COUNT(MIN(rt0.c4))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM v0, t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING ((TOTAL(((GROUP_CONCAT(COUNT(t0.c0)))|(COUNT(MIN(rt0.c4)))))) ISNULL);
SELECT ALL MIN(((((rt0.c1)IS(rt0.c1))) IS TRUE)) FROM rt0 ORDER BY (CASE 0X293cbc7c  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END IN ())  NULLS FIRST;
SELECT ALL rt0.c2, v0.c1, vt1.c0, rt0.c3, v0.c0, rt0.c1, rt0.c0, v0.c2, t0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((CAST(vt1.c0 AS REAL))|((rt0.c4 IN (v0.c2)))) RIGHT OUTER JOIN t0 ON v0.c0 COLLATE BINARY INNER JOIN vt1 ON (+ (((rt0.c1) IS TRUE)));
SELECT DISTINCT * FROM vt1, rt0, v0 FULL OUTER JOIN t0 ON ((v0.c2 IN ()) IN ((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((0.4279465494793242)))));
SELECT DISTINCT * FROM vt1, rt0, v0 FULL OUTER JOIN t0 ON ((v0.c2 IN ()) IN ((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((0.4279465494793242))))) WHERE ((- (((((((((rt0.c3)AND(vt1.c0)))OR(vt1.c0)))AND(rt0.c3)))AND(rt0.c1))))) UNION SELECT DISTINCT * FROM vt1, rt0, v0 FULL OUTER JOIN t0 ON ((v0.c2 IN ()) IN ((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((0.4279465494793242))))) WHERE ((NOT ((- (((((((((rt0.c3)AND(vt1.c0)))OR(vt1.c0)))AND(rt0.c3)))AND(rt0.c1))))))) UNION SELECT DISTINCT * FROM vt1, rt0, v0 FULL OUTER JOIN t0 ON ((v0.c2 IN ()) IN ((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((0.4279465494793242))))) WHERE ((((- (((((((((rt0.c3)AND(vt1.c0)))OR(vt1.c0)))AND(rt0.c3)))AND(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, v0 FULL OUTER JOIN t0 ON ((v0.c2 IN ()) IN ((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((0.4279465494793242)))));
SELECT v0.c1 FROM v0, t0, rt0, vt1 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0, t0, rt0, vt1 WHERE (CAST((('7yearsF')LIKE(v0.c1)) AS TEXT)) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0, t0, rt0, vt1 WHERE ((NOT (CAST((('7yearsF')LIKE(v0.c1)) AS TEXT)))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0, t0, rt0, vt1 WHERE (((CAST((('7yearsF')LIKE(v0.c1)) AS TEXT)) ISNULL)) GROUP BY v0.c1;
SELECT v0.c1 FROM v0, t0, rt0, vt1 GROUP BY v0.c1;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM vt1, v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c1, v0.c0, v0.c2 FROM vt1, v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING ((MIN(TOTAL(COUNT(SUM(v0.c0)))))>=(json_array_length(COUNT(v0.c1), MAX(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM vt1, v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING (NOT (((MIN(TOTAL(COUNT(SUM(v0.c0)))))>=(json_array_length(COUNT(v0.c1), MAX(GROUP_CONCAT(v0.c0))))))) UNION ALL SELECT v0.c1, v0.c0, v0.c2 FROM vt1, v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING ((((MIN(TOTAL(COUNT(SUM(v0.c0)))))>=(json_array_length(COUNT(v0.c1), MAX(GROUP_CONCAT(v0.c0)))))) ISNULL);
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((t0.c0)<<(0.22731820562187421)) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) ELSE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) END;
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((t0.c0)<<(0.22731820562187421)) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) ELSE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) END WHERE ((((t0.c0 IN ()))<(((((t0.c0)AND(t0.c0)))AND(t0.c0))))) UNION ALL SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((t0.c0)<<(0.22731820562187421)) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) ELSE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) END WHERE ((NOT ((((t0.c0 IN ()))<(((((t0.c0)AND(t0.c0)))AND(t0.c0))))))) UNION ALL SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((t0.c0)<<(0.22731820562187421)) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) ELSE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) END WHERE ((((((t0.c0 IN ()))<(((((t0.c0)AND(t0.c0)))AND(t0.c0))))) ISNULL));
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((t0.c0)<<(0.22731820562187421)) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) ELSE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) END;
SELECT DISTINCT rt0.c4, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c3 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c4, rt0.c3 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c3 FROM rt0;
SELECT ALL t0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, v0.c1 FROM rt0, t0, vt1, v0 GROUP BY t0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, v0.c1;
SELECT t0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, v0.c1 FROM rt0, t0, vt1, v0 WHERE ((((NOT (v0.c2))) NOTNULL)) GROUP BY t0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, v0.c1 UNION SELECT t0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, v0.c1 FROM rt0, t0, vt1, v0 WHERE ((NOT ((((NOT (v0.c2))) NOTNULL)))) GROUP BY t0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, v0.c1 UNION SELECT t0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, v0.c1 FROM rt0, t0, vt1, v0 WHERE ((((((NOT (v0.c2))) NOTNULL)) ISNULL)) GROUP BY t0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, v0.c1;
SELECT ALL t0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, v0.c1 FROM rt0, t0, vt1, v0 GROUP BY t0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c0, v0.c1;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING MAX(COUNT(*)) COLLATE RTRIM UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING (NOT (MAX(COUNT(*)) COLLATE RTRIM)) UNION ALL SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING ((MAX(COUNT(*)) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c1, rt0.c4, rt0.c3 FROM rt0;
SELECT ALL rt0.c1, rt0.c4, rt0.c3 FROM rt0 WHERE (((((0.9268264340917173)>(rt0.c4)))<<(((((rt0.c4)OR(rt0.c0)))OR(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT (((((0.9268264340917173)>(rt0.c4)))<<(((((rt0.c4)OR(rt0.c0)))OR(rt0.c1))))))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c3 FROM rt0 WHERE (((((((0.9268264340917173)>(rt0.c4)))<<(((((rt0.c4)OR(rt0.c0)))OR(rt0.c1))))) ISNULL));
SELECT ALL rt0.c1, rt0.c4, rt0.c3 FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)%(t0.c0)))/(((145213519)&(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0)%(t0.c0)))/(((145213519)&(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)%(t0.c0)))/(((145213519)&(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c4 FROM rt0, t0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0, t0 WHERE (CASE rt0.c4  WHEN ((t0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) THEN CAST(NULL AS REAL) END) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM rt0, t0 WHERE ((NOT (CASE rt0.c4  WHEN ((t0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) THEN CAST(NULL AS REAL) END))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM rt0, t0 WHERE (((CASE rt0.c4  WHEN ((t0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) THEN CAST(NULL AS REAL) END) ISNULL)) GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0, t0 GROUP BY rt0.c4;
SELECT v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c0, rt0.c1 FROM v0, t0, vt1, rt0 GROUP BY v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c0, rt0.c1;
SELECT v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c0, rt0.c1 FROM v0, t0, vt1, rt0 GROUP BY v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c0, rt0.c1 HAVING GROUP_CONCAT(MIN(rt0.c1)) UNION ALL SELECT v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c0, rt0.c1 FROM v0, t0, vt1, rt0 GROUP BY v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(MIN(rt0.c1)))) UNION ALL SELECT v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c0, rt0.c1 FROM v0, t0, vt1, rt0 GROUP BY v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(MIN(rt0.c1))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((((((((ABS(DISTINCT t0.c0))AND(NULLIF(t0.c0, '-952572767'))))OR(CAST(t0.c0 AS NUMERIC))))OR(((t0.c0)==(t0.c0)))))AND((- (t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((((((((ABS(DISTINCT t0.c0))AND(NULLIF(t0.c0, '-952572767'))))OR(CAST(t0.c0 AS NUMERIC))))OR(((t0.c0)==(t0.c0)))))AND((- (t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((((((((ABS(DISTINCT t0.c0))AND(NULLIF(t0.c0, '-952572767'))))OR(CAST(t0.c0 AS NUMERIC))))OR(((t0.c0)==(t0.c0)))))AND((- (t0.c0))))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT rt0.c0, rt0.c1, t0.c0, v0.c2, rt0.c2 FROM t0, v0, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, t0.c0, v0.c2, rt0.c2 FROM t0, v0, rt0 WHERE (((CAST(v0.c2 AS BLOB))>=(((rt0.c0) IS TRUE)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, t0.c0, v0.c2, rt0.c2 FROM t0, v0, rt0 WHERE ((NOT (((CAST(v0.c2 AS BLOB))>=(((rt0.c0) IS TRUE)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, t0.c0, v0.c2, rt0.c2 FROM t0, v0, rt0 WHERE (((((CAST(v0.c2 AS BLOB))>=(((rt0.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, t0.c0, v0.c2, rt0.c2 FROM t0, v0, rt0;
SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT v0.c2, v0.c1 FROM v0 WHERE (((- (v0.c2)) IN ((v0.c1 IN (v0.c1)), ((v0.c0) NOT BETWEEN (-5.93860876E8) AND (v0.c0))))) GROUP BY v0.c2, v0.c1 UNION SELECT ALL v0.c2, v0.c1 FROM v0 WHERE ((NOT (((- (v0.c2)) IN ((v0.c1 IN (v0.c1)), ((v0.c0) NOT BETWEEN (-5.93860876E8) AND (v0.c0))))))) GROUP BY v0.c2, v0.c1 UNION SELECT ALL v0.c2, v0.c1 FROM v0 WHERE (((((- (v0.c2)) IN ((v0.c1 IN (v0.c1)), ((v0.c0) NOT BETWEEN (-5.93860876E8) AND (v0.c0))))) ISNULL)) GROUP BY v0.c2, v0.c1;
SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0, rt0.c1 FROM t0, v0, rt0 RIGHT OUTER JOIN vt1 ON ((rt0.c3)IS NOT(v0.c0)) COLLATE BINARY GROUP BY v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0, rt0.c1;
SELECT ALL v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0, rt0.c1 FROM t0, v0, rt0 RIGHT OUTER JOIN vt1 ON ((rt0.c3)IS NOT(v0.c0)) COLLATE BINARY GROUP BY v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0, rt0.c1 HAVING ((((((((CASE rt0.c4  WHEN rt0.c1 THEN MIN('9\-糜') END)OR(COUNT(rt0.c2))))OR(SUM(vt1.c0))))AND(GROUP_CONCAT(rt0.c1))))OR((~ (TOTAL(COUNT(*)))))) UNION ALL SELECT ALL v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0, rt0.c1 FROM t0, v0, rt0 RIGHT OUTER JOIN vt1 ON ((rt0.c3)IS NOT(v0.c0)) COLLATE BINARY GROUP BY v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0, rt0.c1 HAVING (NOT (((((((((CASE rt0.c4  WHEN rt0.c1 THEN MIN('9\-糜') END)OR(COUNT(rt0.c2))))OR(SUM(vt1.c0))))AND(GROUP_CONCAT(rt0.c1))))OR((~ (TOTAL(COUNT(*)))))))) UNION ALL SELECT ALL v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0, rt0.c1 FROM t0, v0, rt0 RIGHT OUTER JOIN vt1 ON ((rt0.c3)IS NOT(v0.c0)) COLLATE BINARY GROUP BY v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0, rt0.c1 HAVING ((((((((((CASE rt0.c4  WHEN rt0.c1 THEN MIN('9\-糜') END)OR(COUNT(rt0.c2))))OR(SUM(vt1.c0))))AND(GROUP_CONCAT(rt0.c1))))OR((~ (TOTAL(COUNT(*))))))) ISNULL);
SELECT * FROM rt0, v0, vt1, t0;
SELECT ALL * FROM rt0, v0, vt1, t0 WHERE ((((rt0.c1 IN ())) BETWEEN (v0.c1) AND ((rt0.c4 IN ())))) UNION ALL SELECT ALL * FROM rt0, v0, vt1, t0 NOT INDEXED WHERE ((NOT ((((rt0.c1 IN ())) BETWEEN (v0.c1) AND ((rt0.c4 IN ())))))) UNION ALL SELECT ALL * FROM rt0, v0, vt1, t0 WHERE ((((((rt0.c1 IN ())) BETWEEN (v0.c1) AND ((rt0.c4 IN ())))) ISNULL));
SELECT * FROM rt0, v0, vt1, t0;
SELECT DISTINCT rt0.c3, v0.c0, rt0.c0, v0.c2, rt0.c1, rt0.c2, v0.c1 FROM t0 RIGHT OUTER JOIN v0 ON (((~ (rt0.c2)))>(((v0.c1)==(rt0.c3)))) CROSS JOIN rt0 ON (((x'dbd6cecb' IN ())) BETWEEN (((v0.c1)<(v0.c1))) AND (((t0.c0) BETWEEN (rt0.c1) AND (v0.c2))));
SELECT ALL rt0.c3, rt0.c0, rt0.c1, t0.c0, rt0.c2 FROM rt0, vt1 RIGHT OUTER JOIN t0 ON 558238844 GROUP BY rt0.c3, rt0.c0, rt0.c1, t0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, t0.c0, rt0.c2 FROM rt0, vt1 RIGHT OUTER JOIN t0 ON 558238844 WHERE ((((NOT (x''))) NOT BETWEEN (((((rt0.c3)OR(t0.c0)))OR(rt0.c3))) AND (x''))) GROUP BY rt0.c3, rt0.c0, rt0.c1, t0.c0, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c1, t0.c0, rt0.c2 FROM rt0, vt1 NOT INDEXED RIGHT OUTER JOIN t0 ON 558238844 WHERE ((NOT ((((NOT (x''))) NOT BETWEEN (((((rt0.c3)OR(t0.c0)))OR(rt0.c3))) AND (x''))))) GROUP BY rt0.c3, rt0.c0, rt0.c1, t0.c0, rt0.c2 UNION SELECT rt0.c3, rt0.c0, rt0.c1, t0.c0, rt0.c2 FROM rt0, vt1 RIGHT OUTER JOIN t0 ON 558238844 WHERE ((((((NOT (x''))) NOT BETWEEN (((((rt0.c3)OR(t0.c0)))OR(rt0.c3))) AND (x''))) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c1, t0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, t0.c0, rt0.c2 FROM rt0, vt1 RIGHT OUTER JOIN t0 ON 558238844 GROUP BY rt0.c3, rt0.c0, rt0.c1, t0.c0, rt0.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(TYPEOF(GROUP_CONCAT(COUNT(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(TYPEOF(GROUP_CONCAT(COUNT(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(TYPEOF(GROUP_CONCAT(COUNT(t0.c0))))) ISNULL);
SELECT ALL * FROM vt1, v0;
SELECT ALL * FROM vt1, v0 WHERE (CASE (((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((vt1.c0)))  WHEN (~ (v0.c2)) THEN ((vt1.c0) NOTNULL) WHEN (~ (vt1.c0)) THEN '330896263' WHEN (('d_{}3u\rࡤ')>(v0.c0)) THEN ((vt1.c0) NOT NULL) ELSE ((vt1.c0) IS FALSE) END) UNION ALL SELECT ALL * FROM vt1, v0 WHERE ((NOT (CASE (((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((vt1.c0)))  WHEN (~ (v0.c2)) THEN ((vt1.c0) NOTNULL) WHEN (~ (vt1.c0)) THEN '330896263' WHEN (('d_{}3u\rࡤ')>(v0.c0)) THEN ((vt1.c0) NOT NULL) ELSE ((vt1.c0) IS FALSE) END))) UNION ALL SELECT ALL * FROM vt1, v0 WHERE (((CASE (((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((vt1.c0)))  WHEN (~ (v0.c2)) THEN ((vt1.c0) NOTNULL) WHEN (~ (vt1.c0)) THEN '330896263' WHEN (('d_{}3u\rࡤ')>(v0.c0)) THEN ((vt1.c0) NOT NULL) ELSE ((vt1.c0) IS FALSE) END) ISNULL));
SELECT ALL * FROM vt1, v0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, v0.c1, v0.c0, v0.c2, rt0.c4, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c2 AS NUMERIC) AS BLOB);
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, v0.c1, v0.c0, v0.c2, rt0.c4, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c2 AS NUMERIC) AS BLOB) WHERE ((((LIKE(rt0.c2, rt0.c3, '0')))>=((rt0.c3)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, v0.c1, v0.c0, v0.c2, rt0.c4, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c2 AS NUMERIC) AS BLOB) WHERE ((NOT ((((LIKE(rt0.c2, rt0.c3, '0')))>=((rt0.c3)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, v0.c1, v0.c0, v0.c2, rt0.c4, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c2 AS NUMERIC) AS BLOB) WHERE ((((((LIKE(rt0.c2, rt0.c3, '0')))>=((rt0.c3)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, v0.c1, v0.c0, v0.c2, rt0.c4, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c2 AS NUMERIC) AS BLOB);
SELECT v0.c2, rt0.c4, rt0.c0, rt0.c3, t0.c0 FROM rt0, vt1, t0, v0 GROUP BY v0.c2, rt0.c4, rt0.c0, rt0.c3, t0.c0;
SELECT v0.c2, rt0.c4, rt0.c0, rt0.c3, t0.c0 FROM rt0, vt1, t0, v0 WHERE ((((v0.c0, v0.c2, rt0.c0, rt0.c1, vt1.c0)) BETWEEN ((((('E*De?')) NOT BETWEEN ((vt1.c0)) AND ((v0.c1))), (((rt0.c1, rt0.c4, v0.c2)) BETWEEN ((vt1.c0, rt0.c2, NULL)) AND ((rt0.c3, rt0.c4, v0.c1))), (rt0.c1 IN (vt1.c0)), 0Xffffffff824149b6, ((rt0.c2)>=(vt1.c0)))) AND (((((rt0.c0)) NOT BETWEEN ((v0.c1)) AND ((2.14638621E9))), ABS(DISTINCT '-1045892230'), CAST(rt0.c4 AS TEXT), x'21aecc34', rt0.c0)))) GROUP BY v0.c2, rt0.c4, rt0.c0, rt0.c3, t0.c0 UNION SELECT ALL v0.c2, rt0.c4, rt0.c0, rt0.c3, t0.c0 FROM rt0, vt1, t0, v0 WHERE ((NOT ((((v0.c0, v0.c2, rt0.c0, rt0.c1, vt1.c0)) BETWEEN ((((('E*De?')) NOT BETWEEN ((vt1.c0)) AND ((v0.c1))), (((rt0.c1, rt0.c4, v0.c2)) BETWEEN ((vt1.c0, rt0.c2, NULL)) AND ((rt0.c3, rt0.c4, v0.c1))), (rt0.c1 IN (vt1.c0)), 0Xffffffff824149b6, ((rt0.c2)>=(vt1.c0)))) AND (((((rt0.c0)) NOT BETWEEN ((v0.c1)) AND ((2.14638621E9))), ABS(DISTINCT '-1045892230'), CAST(rt0.c4 AS TEXT), x'21aecc34', rt0.c0)))))) GROUP BY v0.c2, rt0.c4, rt0.c0, rt0.c3, t0.c0 UNION SELECT v0.c2, rt0.c4, rt0.c0, rt0.c3, t0.c0 FROM rt0, vt1, t0, v0 WHERE ((((((v0.c0, v0.c2, rt0.c0, rt0.c1, vt1.c0)) BETWEEN ((((('E*De?')) NOT BETWEEN ((vt1.c0)) AND ((v0.c1))), (((rt0.c1, rt0.c4, v0.c2)) BETWEEN ((vt1.c0, rt0.c2, NULL)) AND ((rt0.c3, rt0.c4, v0.c1))), (rt0.c1 IN (vt1.c0)), 0xffffffff824149b6, ((rt0.c2)>=(vt1.c0)))) AND (((((rt0.c0)) NOT BETWEEN ((v0.c1)) AND ((2.14638621E9))), ABS(DISTINCT '-1045892230'), CAST(rt0.c4 AS TEXT), x'21aecc34', rt0.c0)))) ISNULL)) GROUP BY v0.c2, rt0.c4, rt0.c0, rt0.c3, t0.c0;
SELECT v0.c2, rt0.c4, rt0.c0, rt0.c3, t0.c0 FROM rt0, vt1, t0, v0 GROUP BY v0.c2, rt0.c4, rt0.c0, rt0.c3, t0.c0;
SELECT t0.c0 FROM vt1, v0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, v0, t0 GROUP BY t0.c0 HAVING COALESCE(MAX(v0.c1), v0.c0, TOTAL(COUNT(*)), v0.c0) COLLATE RTRIM UNION ALL SELECT t0.c0 FROM vt1, v0, t0 GROUP BY t0.c0 HAVING (NOT (COALESCE(MAX(v0.c1), v0.c0, TOTAL(COUNT(*)), v0.c0) COLLATE RTRIM)) UNION ALL SELECT t0.c0 FROM vt1, v0, t0 GROUP BY t0.c0 HAVING ((COALESCE(MAX(v0.c1), v0.c0, TOTAL(COUNT(*)), v0.c0) COLLATE RTRIM) ISNULL);
SELECT ALL * FROM rt0, t0 RIGHT OUTER JOIN v0 ON CASE CHAR(rt0.c1)  WHEN ((v0.c0) IS TRUE) THEN ((v0.c0) BETWEEN (v0.c2) AND (rt0.c0)) ELSE ((rt0.c4) NOT BETWEEN (rt0.c2) AND (v0.c2)) END FULL OUTER JOIN vt1 ON ((((((rt0.c2)OR(v0.c2)))AND(rt0.c3)))OR(rt0.c1));
SELECT * FROM rt0, t0 RIGHT OUTER JOIN v0 ON CASE CHAR(rt0.c1)  WHEN ((v0.c0) IS TRUE) THEN ((v0.c0) BETWEEN (v0.c2) AND (rt0.c0)) ELSE ((rt0.c4) NOT BETWEEN (rt0.c2) AND (v0.c2)) END FULL OUTER JOIN vt1 ON ((((((rt0.c2)OR(v0.c2)))AND(rt0.c3)))OR(rt0.c1)) WHERE (((rt0.c2)>>(x'1120'))) UNION ALL SELECT * FROM rt0, t0 RIGHT OUTER JOIN v0 ON CASE CHAR(rt0.c1)  WHEN ((v0.c0) IS TRUE) THEN ((v0.c0) BETWEEN (v0.c2) AND (rt0.c0)) ELSE ((rt0.c4) NOT BETWEEN (rt0.c2) AND (v0.c2)) END FULL OUTER JOIN vt1 ON ((((((rt0.c2)OR(v0.c2)))AND(rt0.c3)))OR(rt0.c1)) WHERE ((NOT (((rt0.c2)>>(x'1120'))))) UNION ALL SELECT * FROM rt0, t0 RIGHT OUTER JOIN v0 ON CASE CHAR(rt0.c1)  WHEN ((v0.c0) IS TRUE) THEN ((v0.c0) BETWEEN (v0.c2) AND (rt0.c0)) ELSE ((rt0.c4) NOT BETWEEN (rt0.c2) AND (v0.c2)) END FULL OUTER JOIN vt1 ON ((((((rt0.c2)OR(v0.c2)))AND(rt0.c3)))OR(rt0.c1)) WHERE (((((rt0.c2)>>(x'1120'))) ISNULL));
SELECT ALL * FROM rt0, t0 RIGHT OUTER JOIN v0 ON CASE CHAR(rt0.c1)  WHEN ((v0.c0) IS TRUE) THEN ((v0.c0) BETWEEN (v0.c2) AND (rt0.c0)) ELSE ((rt0.c4) NOT BETWEEN (rt0.c2) AND (v0.c2)) END FULL OUTER JOIN vt1 ON ((((((rt0.c2)OR(v0.c2)))AND(rt0.c3)))OR(rt0.c1));
SELECT DISTINCT * FROM rt0, v0, vt1;
SELECT DISTINCT * FROM rt0, v0, vt1 WHERE ((rt0.c1 COLLATE RTRIM IN ())) UNION SELECT DISTINCT * FROM rt0, v0, vt1 WHERE ((NOT ((rt0.c1 COLLATE RTRIM IN ())))) UNION SELECT DISTINCT * FROM rt0, v0, vt1 WHERE ((((rt0.c1 COLLATE RTRIM IN ())) ISNULL));
SELECT DISTINCT * FROM rt0, v0, vt1;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 CROSS JOIN vt1 ON CAST(vt1.c0 AS REAL) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 CROSS JOIN vt1 ON CAST(vt1.c0 AS REAL) WHERE ((~ (rt0.c4)) COLLATE NOCASE) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c4 UNION SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 CROSS JOIN vt1 ON CAST(vt1.c0 AS REAL) WHERE ((NOT ((~ (rt0.c4)) COLLATE NOCASE))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 CROSS JOIN vt1 ON CAST(vt1.c0 AS REAL) WHERE ((((~ (rt0.c4)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 CROSS JOIN vt1 ON CAST(vt1.c0 AS REAL) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c4;
SELECT rt0.c1 FROM vt1, v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, v0, rt0 GROUP BY rt0.c1 HAVING MIN((v0.c2 IN ())) UNION ALL SELECT ALL rt0.c1 FROM vt1, v0, rt0 GROUP BY rt0.c1 HAVING (NOT (MIN((v0.c2 IN ())))) UNION ALL SELECT rt0.c1 FROM vt1, v0, rt0 GROUP BY rt0.c1 HAVING ((MIN((v0.c2 IN ()))) ISNULL);
SELECT rt0.c1 FROM vt1, v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, v0, rt0 GROUP BY rt0.c1 HAVING MIN((v0.c2 IN ())) UNION ALL SELECT ALL rt0.c1 FROM vt1, v0, rt0 GROUP BY rt0.c1 HAVING (NOT (MIN((v0.c2 IN ())))) UNION ALL SELECT rt0.c1 FROM vt1, v0, rt0 GROUP BY rt0.c1 HAVING ((MIN((v0.c2 IN ()))) ISNULL);
SELECT rt0.c1 FROM vt1, v0, rt0 GROUP BY rt0.c1;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((((v0.c2 IN (v0.c2))) NOT BETWEEN (((v0.c1) BETWEEN ('1899864183') AND (v0.c0))) AND (CAST(NULL AS TEXT)))) UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((NOT ((((v0.c2 IN (v0.c2))) NOT BETWEEN (((v0.c1) BETWEEN ('1899864183') AND (v0.c0))) AND (CAST(NULL AS TEXT)))))) UNION ALL SELECT v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((((((v0.c2 IN (v0.c2))) NOT BETWEEN (((v0.c1) BETWEEN ('1899864183') AND (v0.c0))) AND (CAST(NULL AS TEXT)))) ISNULL));
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0;
SELECT DISTINCT t0.c0 FROM v0, t0;
SELECT DISTINCT t0.c0 FROM v0, t0 WHERE (0.18766867183521374) UNION SELECT DISTINCT t0.c0 FROM v0, t0 WHERE ((NOT (0.18766867183521374))) UNION SELECT DISTINCT t0.c0 FROM v0, t0 WHERE (((0.18766867183521374) ISNULL));
SELECT DISTINCT t0.c0 FROM v0, t0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, t0.c0, v0.c0, rt0.c4, v0.c2, rt0.c0, vt1.c0, v0.c1 FROM rt0, t0, v0 CROSS JOIN vt1 ON ((((v0.c0) NOTNULL))IS((((x'', vt1.c0, rt0.c1))=((t0.c0, rt0.c4, t0.c0))))) GROUP BY rt0.c3, rt0.c2, rt0.c1, t0.c0, v0.c0, rt0.c4, v0.c2, rt0.c0, vt1.c0, v0.c1;
SELECT rt0.c3, rt0.c2, rt0.c1, t0.c0, v0.c0, rt0.c4, v0.c2, rt0.c0, vt1.c0, v0.c1 FROM rt0, t0, v0 CROSS JOIN vt1 ON ((((v0.c0) NOTNULL))IS((((x'', vt1.c0, rt0.c1))=((t0.c0, rt0.c4, t0.c0))))) WHERE (((((vt1.c0)/(rt0.c3))) BETWEEN (((v0.c1)!=(x'88db'))) AND ((NULL IN (-51684766))))) GROUP BY rt0.c3, rt0.c2, rt0.c1, t0.c0, v0.c0, rt0.c4, v0.c2, rt0.c0, vt1.c0, v0.c1 UNION SELECT rt0.c3, rt0.c2, rt0.c1, t0.c0, v0.c0, rt0.c4, v0.c2, rt0.c0, vt1.c0, v0.c1 FROM rt0, t0, v0 CROSS JOIN vt1 ON ((((v0.c0) NOTNULL))IS((((x'', vt1.c0, rt0.c1))==((t0.c0, rt0.c4, t0.c0))))) WHERE ((NOT (((((vt1.c0)/(rt0.c3))) BETWEEN (((v0.c1)!=(x'88db'))) AND ((NULL IN (-51684766))))))) GROUP BY rt0.c3, rt0.c2, rt0.c1, t0.c0, v0.c0, rt0.c4, v0.c2, rt0.c0, vt1.c0, v0.c1 UNION SELECT rt0.c3, rt0.c2, rt0.c1, t0.c0, v0.c0, rt0.c4, v0.c2, rt0.c0, vt1.c0, v0.c1 FROM rt0, t0, v0 CROSS JOIN vt1 ON ((((v0.c0) NOTNULL))IS((((x'', vt1.c0, rt0.c1))=((t0.c0, rt0.c4, t0.c0))))) WHERE (((((((vt1.c0)/(rt0.c3))) BETWEEN (((v0.c1)!=(x'88db'))) AND ((NULL IN (-51684766))))) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c1, t0.c0, v0.c0, rt0.c4, v0.c2, rt0.c0, vt1.c0, v0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, t0.c0, v0.c0, rt0.c4, v0.c2, rt0.c0, vt1.c0, v0.c1 FROM rt0, t0, v0 CROSS JOIN vt1 ON ((((v0.c0) NOTNULL))IS((((x'', vt1.c0, rt0.c1))=((t0.c0, rt0.c4, t0.c0))))) GROUP BY rt0.c3, rt0.c2, rt0.c1, t0.c0, v0.c0, rt0.c4, v0.c2, rt0.c0, vt1.c0, v0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING AVG(GROUP_CONCAT(AVG(rt0.c1))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (AVG(GROUP_CONCAT(AVG(rt0.c1))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((AVG(GROUP_CONCAT(AVG(rt0.c1)))) ISNULL);
SELECT * FROM t0, rt0 FULL OUTER JOIN v0 ON ((((((((rt0.c3)OR(v0.c1 COLLATE RTRIM)))AND((- (rt0.c2)))))AND(v0.c2)))OR(v0.c2 COLLATE BINARY)) FULL OUTER JOIN vt1 ON ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (v0.c0)))AND(CASE WHEN rt0.c3 THEN v0.c2 ELSE rt0.c3 END));
SELECT ALL * FROM t0, rt0 FULL OUTER JOIN v0 ON ((((((((rt0.c3)OR(v0.c1 COLLATE RTRIM)))AND((- (rt0.c2)))))AND(v0.c2)))OR(v0.c2 COLLATE BINARY)) FULL OUTER JOIN vt1 ON ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (v0.c0)))AND(CASE WHEN rt0.c3 THEN v0.c2 ELSE rt0.c3 END)) WHERE (((NULL) NOTNULL)) UNION ALL SELECT * FROM t0, rt0 FULL OUTER JOIN v0 ON ((((((((rt0.c3)OR(v0.c1 COLLATE RTRIM)))AND((- (rt0.c2)))))AND(v0.c2)))OR(v0.c2 COLLATE BINARY)) FULL OUTER JOIN vt1 ON ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (v0.c0)))AND(CASE WHEN rt0.c3 THEN v0.c2 ELSE rt0.c3 END)) WHERE ((NOT (((NULL) NOTNULL)))) UNION ALL SELECT * FROM t0, rt0 FULL OUTER JOIN v0 ON ((((((((rt0.c3)OR(v0.c1 COLLATE RTRIM)))AND((- (rt0.c2)))))AND(v0.c2)))OR(v0.c2 COLLATE BINARY)) FULL OUTER JOIN vt1 ON ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (v0.c0)))AND(CASE WHEN rt0.c3 THEN v0.c2 ELSE rt0.c3 END)) WHERE (((((NULL) NOTNULL)) ISNULL));
SELECT * FROM t0, rt0 FULL OUTER JOIN v0 ON ((((((((rt0.c3)OR(v0.c1 COLLATE RTRIM)))AND((- (rt0.c2)))))AND(v0.c2)))OR(v0.c2 COLLATE BINARY)) FULL OUTER JOIN vt1 ON ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (v0.c0)))AND(CASE WHEN rt0.c3 THEN v0.c2 ELSE rt0.c3 END));
SELECT DISTINCT t0.c0 FROM rt0, v0, vt1, t0;
SELECT DISTINCT t0.c0 FROM rt0, v0, vt1, t0 WHERE (NULLIF(DISTINCT ((0.14126060939765206) IS TRUE), (((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) UNION SELECT DISTINCT t0.c0 FROM rt0, v0, vt1, t0 WHERE ((NOT (NULLIF(DISTINCT ((0.14126060939765206) IS TRUE), (((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM rt0, v0, vt1, t0 WHERE (((NULLIF(DISTINCT ((0.14126060939765206) IS TRUE), (((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM rt0, v0, vt1, t0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON (((v0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON (((v0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) WHERE (((((((rt0.c2)OR(rt0.c3)))OR(rt0.c3))) BETWEEN (((v0.c1) IS FALSE)) AND ((rt0.c3 IN (v0.c2))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON (((v0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) WHERE ((NOT (((((((rt0.c2)OR(rt0.c3)))OR(rt0.c3))) BETWEEN (((v0.c1) IS FALSE)) AND ((rt0.c3 IN (v0.c2))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON (((v0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) WHERE (((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c3))) BETWEEN (((v0.c1) IS FALSE)) AND ((rt0.c3 IN (v0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM v0 INNER JOIN rt0 ON (((v0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(MAX(0X734a1a43))) NOT BETWEEN (COUNT(COUNT(*))) AND (MIN(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((SUM(MAX(0X734a1a43))) NOT BETWEEN (COUNT(COUNT(*))) AND (MIN(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((SUM(MAX(0x734a1a43))) NOT BETWEEN (COUNT(COUNT(*))) AND (MIN(t0.c0)))) ISNULL);
SELECT ALL * FROM vt1, t0, v0, rt0;
SELECT ALL * FROM vt1, t0, v0, rt0 WHERE ((((v0.c2) NOT BETWEEN (v0.c1) AND (rt0.c1)) IN ())) UNION ALL SELECT * FROM vt1, t0, v0, rt0 WHERE ((NOT ((((v0.c2) NOT BETWEEN (v0.c1) AND (rt0.c1)) IN ())))) UNION ALL SELECT ALL * FROM vt1, t0, v0, rt0 WHERE ((((((v0.c2) NOT BETWEEN (v0.c1) AND (rt0.c1)) IN ())) ISNULL));
SELECT ALL * FROM vt1, t0, v0, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL t0.c0, vt1.c0 FROM t0 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0) IS TRUE) AS BLOB) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0) IS TRUE) AS BLOB) WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE BINARY) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM t0 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0) IS TRUE) AS BLOB) WHERE ((NOT (CAST(vt1.c0 AS NUMERIC) COLLATE BINARY))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM t0 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0) IS TRUE) AS BLOB) WHERE (((CAST(vt1.c0 AS NUMERIC) COLLATE BINARY) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0) IS TRUE) AS BLOB) GROUP BY t0.c0, vt1.c0;
SELECT rt0.c4, vt1.c0, v0.c2 FROM vt1, v0, t0, rt0 GROUP BY rt0.c4, vt1.c0, v0.c2;
SELECT rt0.c4, vt1.c0, v0.c2 FROM vt1, v0, t0, rt0 GROUP BY rt0.c4, vt1.c0, v0.c2 HAVING CHANGES() UNION ALL SELECT rt0.c4, vt1.c0, v0.c2 FROM vt1, v0, t0, rt0 GROUP BY rt0.c4, vt1.c0, v0.c2 HAVING (NOT (CHANGES())) UNION ALL SELECT ALL rt0.c4, vt1.c0, v0.c2 FROM vt1, v0, t0, rt0 GROUP BY rt0.c4, vt1.c0, v0.c2 HAVING ((CHANGES()) ISNULL);
SELECT rt0.c4, vt1.c0, v0.c2 FROM vt1, v0, t0, rt0 GROUP BY rt0.c4, vt1.c0, v0.c2;
SELECT rt0.c4, vt1.c0, v0.c2 FROM vt1, v0, t0, rt0 GROUP BY rt0.c4, vt1.c0, v0.c2 HAVING CHANGES() UNION ALL SELECT rt0.c4, vt1.c0, v0.c2 FROM vt1, v0, t0, rt0 GROUP BY rt0.c4, vt1.c0, v0.c2 HAVING (NOT (CHANGES())) UNION ALL SELECT ALL rt0.c4, vt1.c0, v0.c2 FROM vt1, v0, t0, rt0 GROUP BY rt0.c4, vt1.c0, v0.c2 HAVING ((CHANGES()) ISNULL);
SELECT rt0.c4, vt1.c0, v0.c2 FROM vt1, v0, t0, rt0 GROUP BY rt0.c4, vt1.c0, v0.c2;
SELECT t0.c0, vt1.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM t0, vt1, rt0;
SELECT ALL t0.c0, vt1.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM t0, vt1, rt0 WHERE ((((+ (rt0.c4))) NOTNULL)) UNION ALL SELECT t0.c0, vt1.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM t0, vt1, rt0 WHERE ((NOT ((((+ (rt0.c4))) NOTNULL)))) UNION ALL SELECT t0.c0, vt1.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM t0, vt1, rt0 WHERE ((((((+ (rt0.c4))) NOTNULL)) ISNULL));
SELECT t0.c0, vt1.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM t0, vt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE (((((13064755)AND(((rt0.c4)<=(rt0.c0)))))OR(highlight(rt0.c3, rt0.c4, rt0.c1, rt0.c1)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((13064755)AND(((rt0.c4)<=(rt0.c0)))))OR(highlight(rt0.c3, rt0.c4, rt0.c1, rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((13064755)AND(((rt0.c4)<=(rt0.c0)))))OR(highlight(rt0.c3, rt0.c4, rt0.c1, rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE WHEN ((vt1.c0)&(vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END ELSE ((vt1.c0) NOT NULL) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN ((vt1.c0)&(vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END ELSE ((vt1.c0) NOT NULL) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE WHEN ((vt1.c0)&(vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END ELSE ((vt1.c0) NOT NULL) END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0)!=(vt1.c0)) COLLATE NOCASE UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((vt1.c0)<>(vt1.c0)) COLLATE NOCASE)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0)!=(vt1.c0)) COLLATE NOCASE) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0)!=(vt1.c0)) COLLATE NOCASE UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((vt1.c0)<>(vt1.c0)) COLLATE NOCASE)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0)!=(vt1.c0)) COLLATE NOCASE) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM v0, vt1;
SELECT ALL * FROM v0, vt1 WHERE (v0.c0) UNION ALL SELECT ALL * FROM v0, vt1 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM v0, vt1 WHERE (((v0.c0) ISNULL));
SELECT * FROM v0, vt1;
SELECT DISTINCT t0.c0, v0.c0, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt0.c4, v0.c2 FROM v0, rt0, vt1, t0;
SELECT DISTINCT t0.c0, v0.c0, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt0.c4, v0.c2 FROM v0, rt0, vt1, t0 WHERE (((((vt1.c0)OR('-0.0')))OR('532034307')) COLLATE NOCASE) UNION SELECT DISTINCT t0.c0, v0.c0, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt0.c4, v0.c2 FROM v0, rt0, vt1, t0 WHERE ((NOT (((((vt1.c0)OR('-0.0')))OR('532034307')) COLLATE NOCASE))) UNION SELECT DISTINCT t0.c0, v0.c0, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt0.c4, v0.c2 FROM v0, rt0, vt1, t0 WHERE (((((((vt1.c0)OR('-0.0')))OR('532034307')) COLLATE NOCASE) ISNULL));
SELECT DISTINCT t0.c0, v0.c0, rt0.c1, rt0.c3, rt0.c2, vt1.c0, rt0.c4, v0.c2 FROM v0, rt0, vt1, t0;
SELECT rt0.c1, rt0.c4, t0.c0, rt0.c3 FROM vt1, rt0, t0 GROUP BY rt0.c1, rt0.c4, t0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c4, t0.c0, rt0.c3 FROM vt1, rt0, t0 WHERE (CASE ((((rt0.c1)OR(rt0.c4)))OR(t0.c0))  WHEN ((((rt0.c0)AND(rt0.c2)))AND(t0.c0)) THEN ((rt0.c1)LIKE(rt0.c1)) ELSE ((rt0.c2)>(rt0.c3)) END) GROUP BY rt0.c1, rt0.c4, t0.c0, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c4, t0.c0, rt0.c3 FROM vt1, rt0, t0 WHERE ((NOT (CASE ((((rt0.c1)OR(rt0.c4)))OR(t0.c0))  WHEN ((((rt0.c0)AND(rt0.c2)))AND(t0.c0)) THEN ((rt0.c1)LIKE(rt0.c1)) ELSE ((rt0.c2)>(rt0.c3)) END))) GROUP BY rt0.c1, rt0.c4, t0.c0, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c4, t0.c0, rt0.c3 FROM vt1, rt0, t0 WHERE (((CASE ((((rt0.c1)OR(rt0.c4)))OR(t0.c0))  WHEN ((((rt0.c0)AND(rt0.c2)))AND(t0.c0)) THEN ((rt0.c1)LIKE(rt0.c1)) ELSE ((rt0.c2)>(rt0.c3)) END) ISNULL)) GROUP BY rt0.c1, rt0.c4, t0.c0, rt0.c3;
SELECT rt0.c1, rt0.c4, t0.c0, rt0.c3 FROM vt1, rt0, t0 GROUP BY rt0.c1, rt0.c4, t0.c0, rt0.c3;
SELECT vt1.c0, v0.c2, v0.c1 FROM vt1, v0, t0 GROUP BY vt1.c0, v0.c2, v0.c1;
SELECT ALL vt1.c0, v0.c2, v0.c1 FROM vt1, v0, t0 GROUP BY vt1.c0, v0.c2, v0.c1 HAVING SUM(COUNT(COUNT(*))) UNION ALL SELECT ALL vt1.c0, v0.c2, v0.c1 FROM vt1, v0, t0 GROUP BY vt1.c0, v0.c2, v0.c1 HAVING (NOT (SUM(COUNT(COUNT(*))))) UNION ALL SELECT vt1.c0, v0.c2, v0.c1 FROM vt1, v0, t0 GROUP BY vt1.c0, v0.c2, v0.c1 HAVING ((SUM(COUNT(COUNT(*)))) ISNULL);
SELECT ALL rt0.c3, t0.c0, rt0.c4, rt0.c1, vt1.c0 FROM v0, t0 INNER JOIN rt0 ON ((((rt0.c3)AND(v0.c0)))OR(rt0.c1)) COLLATE BINARY INNER JOIN vt1 ON (NOT ((v0.c1 IN ())));
SELECT rt0.c3, t0.c0, rt0.c4, rt0.c1, vt1.c0 FROM v0, t0 INNER JOIN rt0 ON ((((rt0.c3)AND(v0.c0)))OR(rt0.c1)) COLLATE BINARY INNER JOIN vt1 ON (NOT ((v0.c1 IN ()))) WHERE ((((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())) UNION ALL SELECT ALL rt0.c3, t0.c0, rt0.c4, rt0.c1, vt1.c0 FROM v0, t0 INNER JOIN rt0 ON ((((rt0.c3)AND(v0.c0)))OR(rt0.c1)) COLLATE BINARY INNER JOIN vt1 ON (NOT ((v0.c1 IN ()))) WHERE ((NOT ((((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())))) UNION ALL SELECT ALL rt0.c3, t0.c0, rt0.c4, rt0.c1, vt1.c0 FROM v0, t0 INNER JOIN rt0 ON ((((rt0.c3)AND(v0.c0)))OR(rt0.c1)) COLLATE BINARY INNER JOIN vt1 ON (NOT ((v0.c1 IN ()))) WHERE ((((((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())) ISNULL));
SELECT ALL rt0.c3, t0.c0, rt0.c4, rt0.c1, vt1.c0 FROM v0, t0 INNER JOIN rt0 ON ((((rt0.c3)AND(v0.c0)))OR(rt0.c1)) COLLATE BINARY INNER JOIN vt1 ON (NOT ((v0.c1 IN ())));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END)AND(x'')))OR((~ (rt0.c2)))))AND(((rt0.c2) NOT NULL))))AND((rt0.c1 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END)AND(x'')))OR((~ (rt0.c2)))))AND(((rt0.c2) NOT NULL))))AND((rt0.c1 IN ())))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END)AND(x'')))OR((~ (rt0.c2)))))AND(((rt0.c2) NOT NULL))))AND((rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c2, rt0.c1, v0.c0 FROM v0 INNER JOIN rt0 ON IFNULL(rt0.c1, rt0.c2) COLLATE RTRIM LEFT OUTER JOIN t0 ON rt0.c3 GROUP BY v0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c2, rt0.c1, v0.c0;
SELECT ALL v0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c2, rt0.c1, v0.c0 FROM v0 INNER JOIN rt0 ON IFNULL(rt0.c1, rt0.c2) COLLATE RTRIM LEFT OUTER JOIN t0 ON rt0.c3 WHERE (TYPEOF(DISTINCT x'')) GROUP BY v0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c2, rt0.c1, v0.c0 UNION SELECT v0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c2, rt0.c1, v0.c0 FROM v0 INNER JOIN rt0 ON IFNULL(rt0.c1, rt0.c2) COLLATE RTRIM LEFT OUTER JOIN t0 ON rt0.c3 WHERE ((NOT (TYPEOF(DISTINCT x'')))) GROUP BY v0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c2, rt0.c1, v0.c0 UNION SELECT v0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c2, rt0.c1, v0.c0 FROM v0 INNER JOIN rt0 ON IFNULL(rt0.c1, rt0.c2) COLLATE RTRIM LEFT OUTER JOIN t0 ON rt0.c3 WHERE (((TYPEOF(DISTINCT x'')) ISNULL)) GROUP BY v0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c2, rt0.c1, v0.c0;
SELECT v0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c2, rt0.c1, v0.c0 FROM v0 INNER JOIN rt0 ON IFNULL(rt0.c1, rt0.c2) COLLATE RTRIM LEFT OUTER JOIN t0 ON rt0.c3 GROUP BY v0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c2, rt0.c1, v0.c0;
SELECT rt0.c1, rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, t0.c0;
SELECT ALL rt0.c1, rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, t0.c0 HAVING MIN(IFNULL(rt0.c2, SUM(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, t0.c0 HAVING (NOT (MIN(IFNULL(rt0.c2, SUM(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, t0.c0 HAVING ((MIN(IFNULL(rt0.c2, SUM(rt0.c1)))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (ABS(((vt1.c0)<('82609202')))) UNION ALL SELECT ALL vt1.c0 FROM vt1 NOT INDEXED WHERE ((NOT (ABS(((vt1.c0)<('82609202')))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((ABS(((vt1.c0)<('82609202')))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((((((((x'')OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((((((((x'')OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((((((((x'')OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c3, vt1.c0, v0.c0, rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c2 FROM vt1, v0, rt0, t0 GROUP BY rt0.c1, rt0.c3, vt1.c0, v0.c0, rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c2;
SELECT rt0.c1, rt0.c3, vt1.c0, v0.c0, rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c2 FROM vt1, v0, rt0, t0 WHERE ('JM''](橆d[]') GROUP BY rt0.c1, rt0.c3, vt1.c0, v0.c0, rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c3, vt1.c0, v0.c0, rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c2 FROM vt1, v0, rt0, t0 WHERE ((NOT ('JM''](橆d[]'))) GROUP BY rt0.c1, rt0.c3, vt1.c0, v0.c0, rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c3, vt1.c0, v0.c0, rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c2 FROM vt1, v0, rt0, t0 WHERE ((('JM''](橆d[]') ISNULL)) GROUP BY rt0.c1, rt0.c3, vt1.c0, v0.c0, rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, vt1.c0, v0.c0, rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c2 FROM vt1, v0, rt0, t0 GROUP BY rt0.c1, rt0.c3, vt1.c0, v0.c0, rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c2;
SELECT ALL rt0.c4, t0.c0 FROM t0, rt0, v0, vt1 GROUP BY rt0.c4, t0.c0;
SELECT rt0.c4, t0.c0 FROM t0, rt0, v0, vt1 GROUP BY rt0.c4, t0.c0 HAVING (NOT (TOTAL(COUNT(rt0.c2)))) UNION ALL SELECT ALL rt0.c4, t0.c0 FROM t0, rt0, v0, vt1 GROUP BY rt0.c4, t0.c0 HAVING (NOT ((NOT (TOTAL(COUNT(rt0.c2)))))) UNION ALL SELECT rt0.c4, t0.c0 FROM t0, rt0, v0, vt1 GROUP BY rt0.c4, t0.c0 HAVING (((NOT (TOTAL(COUNT(rt0.c2))))) ISNULL);
SELECT ALL v0.c2, v0.c0, t0.c0, v0.c1, vt1.c0 FROM t0, v0 NOT INDEXED CROSS JOIN vt1 ON 0.1140175145767387;
SELECT ALL v0.c2, v0.c0, t0.c0, v0.c1, vt1.c0 FROM t0, v0 CROSS JOIN vt1 ON 0.1140175145767387 WHERE (vt1.c0) UNION ALL SELECT ALL v0.c2, v0.c0, t0.c0, v0.c1, vt1.c0 FROM t0, v0 CROSS JOIN vt1 ON 0.1140175145767387 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL v0.c2, v0.c0, t0.c0, v0.c1, vt1.c0 FROM t0, v0 CROSS JOIN vt1 ON 0.1140175145767387 WHERE (((vt1.c0) ISNULL));
SELECT ALL v0.c2, v0.c0, t0.c0, v0.c1, vt1.c0 FROM t0, v0 NOT INDEXED CROSS JOIN vt1 ON 0.1140175145767387;
SELECT DISTINCT * FROM t0, v0, vt1, rt0;
SELECT DISTINCT * FROM t0, v0, vt1, rt0 WHERE (((((((rt0.c4)OR(vt1.c0)))AND(t0.c0 COLLATE NOCASE)))OR(IFNULL(rt0.c4, v0.c1)))) UNION SELECT DISTINCT * FROM t0, v0, vt1, rt0 WHERE ((NOT (((((((rt0.c4)OR(vt1.c0)))AND(t0.c0 COLLATE NOCASE)))OR(IFNULL(rt0.c4, v0.c1)))))) UNION SELECT DISTINCT * FROM t0, v0, vt1, rt0 WHERE (((((((((rt0.c4)OR(vt1.c0)))AND(t0.c0 COLLATE NOCASE)))OR(IFNULL(rt0.c4, v0.c1)))) ISNULL));
SELECT DISTINCT * FROM t0, v0, vt1, rt0;
SELECT ALL v0.c1, v0.c0, t0.c0, v0.c2 FROM v0, t0 GROUP BY v0.c1, v0.c0, t0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, t0.c0, v0.c2 FROM v0, t0 WHERE (CASE WHEN v0.c2 THEN ((v0.c1)<(v0.c1)) END) GROUP BY v0.c1, v0.c0, t0.c0, v0.c2 UNION SELECT ALL v0.c1, v0.c0, t0.c0, v0.c2 FROM v0, t0 WHERE ((NOT (CASE WHEN v0.c2 THEN ((v0.c1)<(v0.c1)) END))) GROUP BY v0.c1, v0.c0, t0.c0, v0.c2 UNION SELECT v0.c1, v0.c0, t0.c0, v0.c2 FROM v0, t0 WHERE (((CASE WHEN v0.c2 THEN ((v0.c1)<(v0.c1)) END) ISNULL)) GROUP BY v0.c1, v0.c0, t0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, t0.c0, v0.c2 FROM v0, t0 GROUP BY v0.c1, v0.c0, t0.c0, v0.c2;
SELECT v0.c1 FROM v0, vt1, t0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0, vt1, t0 GROUP BY v0.c1 HAVING CASE AVG(AVG(vt1.c0))  WHEN COUNT(v0.c1) THEN (((TOTAL(COUNT(v0.c1)), MAX(MIN(t0.c0)), COUNT(*), vt1.c0, v0.c1))=(('n8_s4S', v0.c2, MIN(MAX(NULL)), GROUP_CONCAT(-1517414006), vt1.c0))) WHEN TOTAL(AVG(t0.c0)) THEN TOTAL(SUM(v0.c1)) WHEN (- (v0.c1)) THEN TOTAL(vt1.c0) END UNION ALL SELECT v0.c1 FROM v0, vt1, t0 GROUP BY v0.c1 HAVING (NOT (CASE AVG(AVG(vt1.c0))  WHEN COUNT(v0.c1) THEN (((TOTAL(COUNT(v0.c1)), MAX(MIN(t0.c0)), COUNT(*), vt1.c0, v0.c1))==(('n8_s4S', v0.c2, MIN(MAX(NULL)), GROUP_CONCAT(-1517414006), vt1.c0))) WHEN TOTAL(AVG(t0.c0)) THEN TOTAL(SUM(v0.c1)) WHEN (- (v0.c1)) THEN TOTAL(vt1.c0) END)) UNION ALL SELECT v0.c1 FROM v0, vt1, t0 GROUP BY v0.c1 HAVING ((CASE AVG(AVG(vt1.c0))  WHEN COUNT(v0.c1) THEN (((TOTAL(COUNT(v0.c1)), MAX(MIN(t0.c0)), COUNT(*), vt1.c0, v0.c1))=(('n8_s4S', v0.c2, MIN(MAX(NULL)), GROUP_CONCAT(-1517414006), vt1.c0))) WHEN TOTAL(AVG(t0.c0)) THEN TOTAL(SUM(v0.c1)) WHEN (- (v0.c1)) THEN TOTAL(vt1.c0) END) ISNULL);
SELECT ALL MIN((- ((v0.c0 IN ())))) FROM v0, vt1, rt0, t0 ORDER BY CASE WHEN ((rt0.c4)%(rt0.c4)) THEN ((((rt0.c2)AND(rt0.c1)))OR(v0.c1)) ELSE CASE WHEN rt0.c2 THEN rt0.c3 END END DESC;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND ((~ (vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND ((~ (vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND ((~ (vt1.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, v0, rt0;
SELECT DISTINCT * FROM vt1, v0, rt0 WHERE (NULL COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1, v0, rt0 WHERE ((NOT (NULL COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1, v0, rt0 WHERE (((NULL COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1, v0, rt0;
SELECT ALL rt0.c3, t0.c0, v0.c0, rt0.c1, rt0.c4, v0.c1, rt0.c2, v0.c2 FROM rt0, vt1, v0, t0 GROUP BY rt0.c3, t0.c0, v0.c0, rt0.c1, rt0.c4, v0.c1, rt0.c2, v0.c2;
SELECT ALL rt0.c3, t0.c0, v0.c0, rt0.c1, rt0.c4, v0.c1, rt0.c2, v0.c2 FROM rt0, vt1, v0, t0 WHERE (((v0.c0) ISNULL) COLLATE BINARY) GROUP BY rt0.c3, t0.c0, v0.c0, rt0.c1, rt0.c4, v0.c1, rt0.c2, v0.c2 UNION SELECT rt0.c3, t0.c0, v0.c0, rt0.c1, rt0.c4, v0.c1, rt0.c2, v0.c2 FROM rt0, vt1, v0, t0 WHERE ((NOT (((v0.c0) ISNULL) COLLATE BINARY))) GROUP BY rt0.c3, t0.c0, v0.c0, rt0.c1, rt0.c4, v0.c1, rt0.c2, v0.c2 UNION SELECT rt0.c3, t0.c0, v0.c0, rt0.c1, rt0.c4, v0.c1, rt0.c2, v0.c2 FROM rt0, vt1, v0, t0 WHERE (((((v0.c0) ISNULL) COLLATE BINARY) ISNULL)) GROUP BY rt0.c3, t0.c0, v0.c0, rt0.c1, rt0.c4, v0.c1, rt0.c2, v0.c2;
SELECT ALL rt0.c3, t0.c0, v0.c0, rt0.c1, rt0.c4, v0.c1, rt0.c2, v0.c2 FROM rt0, vt1, v0, t0 GROUP BY rt0.c3, t0.c0, v0.c0, rt0.c1, rt0.c4, v0.c1, rt0.c2, v0.c2;
SELECT ALL t0.c0, rt0.c2, vt1.c0, rt0.c3, v0.c0, rt0.c4, v0.c2, rt0.c0, rt0.c1, v0.c1 FROM v0, rt0, t0, vt1 GROUP BY t0.c0, rt0.c2, vt1.c0, rt0.c3, v0.c0, rt0.c4, v0.c2, rt0.c0, rt0.c1, v0.c1;
SELECT ALL t0.c0, rt0.c2, vt1.c0, rt0.c3, v0.c0, rt0.c4, v0.c2, rt0.c0, rt0.c1, v0.c1 FROM v0, rt0, t0, vt1 GROUP BY t0.c0, rt0.c2, vt1.c0, rt0.c3, v0.c0, rt0.c4, v0.c2, rt0.c0, rt0.c1, v0.c1 HAVING COUNT((('0.008909916492639058') NOT BETWEEN (COUNT(*)) AND (NULL))) UNION ALL SELECT t0.c0, rt0.c2, vt1.c0, rt0.c3, v0.c0, rt0.c4, v0.c2, rt0.c0, rt0.c1, v0.c1 FROM v0, rt0, t0, vt1 GROUP BY t0.c0, rt0.c2, vt1.c0, rt0.c3, v0.c0, rt0.c4, v0.c2, rt0.c0, rt0.c1, v0.c1 HAVING (NOT (COUNT((('0.008909916492639058') NOT BETWEEN (COUNT(*)) AND (NULL))))) UNION ALL SELECT ALL t0.c0, rt0.c2, vt1.c0, rt0.c3, v0.c0, rt0.c4, v0.c2, rt0.c0, rt0.c1, v0.c1 FROM v0, rt0, t0, vt1 GROUP BY t0.c0, rt0.c2, vt1.c0, rt0.c3, v0.c0, rt0.c4, v0.c2, rt0.c0, rt0.c1, v0.c1 HAVING ((COUNT((('0.008909916492639058') NOT BETWEEN (COUNT(*)) AND (NULL)))) ISNULL);
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 WHERE (x'') UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 WHERE ((NOT (x''))) UNION ALL SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 WHERE (((x'') ISNULL));
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE (((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4)))OR(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))))AND(CAST(NULL AS BLOB)))) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4)))OR(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))))AND(CAST(NULL AS BLOB)))))) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE (((((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4)))OR(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))))AND(CAST(NULL AS BLOB)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0;
SELECT rt0.c2 FROM vt1, v0, rt0, t0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, v0 NOT INDEXED, rt0, t0 WHERE (v0.c2) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt1, v0, rt0, t0 WHERE ((NOT (v0.c2))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt1, v0, rt0, t0 WHERE (((v0.c2) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt1, v0, rt0, t0 GROUP BY rt0.c2;
SELECT ALL v0.c0, v0.c2, vt1.c0 FROM t0, v0, rt0, vt1 GROUP BY v0.c0, v0.c2, vt1.c0;
SELECT v0.c0, v0.c2, vt1.c0 FROM t0, v0, rt0, vt1 GROUP BY v0.c0, v0.c2, vt1.c0 HAVING AVG(TOTAL_CHANGES()) UNION ALL SELECT v0.c0, v0.c2, vt1.c0 FROM t0, v0, rt0, vt1 GROUP BY v0.c0, v0.c2, vt1.c0 HAVING (NOT (AVG(TOTAL_CHANGES()))) UNION ALL SELECT ALL v0.c0, v0.c2, vt1.c0 FROM t0, v0, rt0, vt1 GROUP BY v0.c0, v0.c2, vt1.c0 HAVING ((AVG(TOTAL_CHANGES())) ISNULL);
SELECT ALL v0.c0, v0.c2, vt1.c0 FROM t0, v0, rt0, vt1 GROUP BY v0.c0, v0.c2, vt1.c0;
SELECT v0.c0, v0.c2, vt1.c0 FROM t0, v0, rt0, vt1 GROUP BY v0.c0, v0.c2, vt1.c0 HAVING AVG(TOTAL_CHANGES()) UNION ALL SELECT v0.c0, v0.c2, vt1.c0 FROM t0, v0, rt0, vt1 GROUP BY v0.c0, v0.c2, vt1.c0 HAVING (NOT (AVG(TOTAL_CHANGES()))) UNION ALL SELECT ALL v0.c0, v0.c2, vt1.c0 FROM t0, v0, rt0, vt1 GROUP BY v0.c0, v0.c2, vt1.c0 HAVING ((AVG(TOTAL_CHANGES())) ISNULL);
SELECT ALL v0.c0, v0.c2, vt1.c0 FROM t0, v0, rt0, vt1 GROUP BY v0.c0, v0.c2, vt1.c0;
SELECT rt0.c2, v0.c0, rt0.c3, rt0.c4, v0.c2, rt0.c0, t0.c0, v0.c1, rt0.c1, vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON ((((v0.c2) BETWEEN (rt0.c4) AND (t0.c0)))||(vt1.c0)) RIGHT OUTER JOIN t0 ON ((CASE 0.5146420450657626  WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE t0.c0 END)%(((rt0.c4)&(rt0.c3)))) LEFT OUTER JOIN v0 ON (((vt1.c0)) NOT BETWEEN ((((((((((rt0.c4)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c4)))) AND (((+ (NULL)))));
SELECT DISTINCT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, v0 WHERE (((((((((((v0.c2) NOTNULL))OR(((x'')<=(v0.c0)))))OR(v0.c1)))OR((- (vt1.c0)))))AND(RTRIM(vt1.c0)))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((NOT (((((((((((v0.c2) NOTNULL))OR(((x'')<=(v0.c0)))))OR(v0.c1)))OR((- (vt1.c0)))))AND(RTRIM(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE (((((((((((((v0.c2) NOTNULL))OR(((x'')<=(v0.c0)))))OR(v0.c1)))OR((- (vt1.c0)))))AND(RTRIM(vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1, v0;
SELECT rt0.c4, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c4, rt0.c1;
SELECT rt0.c4, rt0.c1 FROM vt1, rt0 WHERE (((((((((CAST(rt0.c1 AS TEXT))OR(CAST(rt0.c2 AS INTEGER))))AND(x'')))AND(CAST(rt0.c1 AS TEXT))))AND(x''))) GROUP BY rt0.c4, rt0.c1 UNION SELECT rt0.c4, rt0.c1 FROM vt1, rt0 WHERE ((NOT (((((((((CAST(rt0.c1 AS TEXT))OR(CAST(rt0.c2 AS INTEGER))))AND(x'')))AND(CAST(rt0.c1 AS TEXT))))AND(x''))))) GROUP BY rt0.c4, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c1 FROM vt1, rt0 WHERE (((((((((((CAST(rt0.c1 AS TEXT))OR(CAST(rt0.c2 AS INTEGER))))AND(x'')))AND(CAST(rt0.c1 AS TEXT))))AND(x''))) ISNULL)) GROUP BY rt0.c4, rt0.c1;
SELECT rt0.c4, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c4, rt0.c1;
SELECT rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((((t0.c0)IS NOT(t0.c0))) NOTNULL) GROUP BY rt0.c0;
SELECT rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((((t0.c0)IS NOT(t0.c0))) NOTNULL) GROUP BY rt0.c0 HAVING ((COUNT(*))*(TOTAL(rt0.c0))) UNION ALL SELECT rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((((t0.c0)IS NOT(t0.c0))) NOTNULL) GROUP BY rt0.c0 HAVING (NOT (((COUNT(*))*(TOTAL(rt0.c0))))) UNION ALL SELECT rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((((t0.c0)IS NOT(t0.c0))) NOTNULL) GROUP BY rt0.c0 HAVING ((((COUNT(*))*(TOTAL(rt0.c0)))) ISNULL);
SELECT rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((((t0.c0)IS NOT(t0.c0))) NOTNULL) GROUP BY rt0.c0;
SELECT rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((((t0.c0)IS NOT(t0.c0))) NOTNULL) GROUP BY rt0.c0 HAVING ((COUNT(*))*(TOTAL(rt0.c0))) UNION ALL SELECT rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((((t0.c0)IS NOT(t0.c0))) NOTNULL) GROUP BY rt0.c0 HAVING (NOT (((COUNT(*))*(TOTAL(rt0.c0))))) UNION ALL SELECT rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((((t0.c0)IS NOT(t0.c0))) NOTNULL) GROUP BY rt0.c0 HAVING ((((COUNT(*))*(TOTAL(rt0.c0)))) ISNULL);
SELECT rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((((t0.c0)IS NOT(t0.c0))) NOTNULL) GROUP BY rt0.c0;
SELECT * FROM vt1 FULL OUTER JOIN v0 ON ((((v0.c0) BETWEEN (v0.c2) AND (v0.c0))) NOT BETWEEN (((v0.c1)<=(v0.c0))) AND (v0.c1 COLLATE NOCASE));
SELECT * FROM vt1 FULL OUTER JOIN v0 ON ((((v0.c0) BETWEEN (v0.c2) AND (v0.c0))) NOT BETWEEN (((v0.c1)<=(v0.c0))) AND (v0.c1 COLLATE NOCASE)) WHERE (v0.c1) UNION ALL SELECT * FROM vt1 FULL OUTER JOIN v0 ON ((((v0.c0) BETWEEN (v0.c2) AND (v0.c0))) NOT BETWEEN (((v0.c1)<=(v0.c0))) AND (v0.c1 COLLATE NOCASE)) WHERE ((NOT (v0.c1))) UNION ALL SELECT ALL * FROM vt1 FULL OUTER JOIN v0 ON ((((v0.c0) BETWEEN (v0.c2) AND (v0.c0))) NOT BETWEEN (((v0.c1)<=(v0.c0))) AND (v0.c1 COLLATE NOCASE)) WHERE (((v0.c1) ISNULL));
SELECT * FROM vt1 FULL OUTER JOIN v0 ON ((((v0.c0) BETWEEN (v0.c2) AND (v0.c0))) NOT BETWEEN (((v0.c1)<=(v0.c0))) AND (v0.c1 COLLATE NOCASE));
SELECT DISTINCT * FROM v0 NATURAL JOIN t0;
SELECT DISTINCT * FROM v0 NATURAL JOIN t0 WHERE ((((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((t0.c0)))) NOT BETWEEN (((t0.c0)=(v0.c0))) AND (((v0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))))) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN t0 WHERE ((NOT ((((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((t0.c0)))) NOT BETWEEN (((t0.c0)==(v0.c0))) AND (((v0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))))))) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN t0 WHERE ((((((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((t0.c0)))) NOT BETWEEN (((t0.c0)=(v0.c0))) AND (((v0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0 NATURAL JOIN t0;
SELECT v0.c1, rt0.c3, t0.c0 FROM vt1, v0, t0, rt0 GROUP BY v0.c1, rt0.c3, t0.c0;
SELECT v0.c1, rt0.c3, t0.c0 FROM vt1, v0, t0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (NULL) AND (v0.c0)))IS NOT(((vt1.c0) NOT BETWEEN (v0.c2) AND (rt0.c0))))) GROUP BY v0.c1, rt0.c3, t0.c0 UNION SELECT ALL v0.c1, rt0.c3, t0.c0 FROM vt1, v0, t0, rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (NULL) AND (v0.c0)))IS NOT(((vt1.c0) NOT BETWEEN (v0.c2) AND (rt0.c0))))))) GROUP BY v0.c1, rt0.c3, t0.c0 UNION SELECT v0.c1, rt0.c3, t0.c0 FROM vt1, v0, t0, rt0 WHERE (((((((rt0.c2) NOT BETWEEN (NULL) AND (v0.c0)))IS NOT(((vt1.c0) NOT BETWEEN (v0.c2) AND (rt0.c0))))) ISNULL)) GROUP BY v0.c1, rt0.c3, t0.c0;
SELECT v0.c1, rt0.c3, t0.c0 FROM vt1, v0, t0, rt0 GROUP BY v0.c1, rt0.c3, t0.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c4, rt0.c1, v0.c0, v0.c2, t0.c0, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((json_quote(rt0.c0))||((- (-761530986)))) INNER JOIN vt1 ON ((rt0.c3)>>(0.26206812918491695)) CROSS JOIN v0 ON (((((((x'c64d')) BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR((- (NULL)))))OR(vt1.c0 COLLATE BINARY)) GROUP BY rt0.c2, vt1.c0, rt0.c4, rt0.c1, v0.c0, v0.c2, t0.c0, rt0.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c4, rt0.c1, v0.c0, v0.c2, t0.c0, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((json_quote(rt0.c0))||((- (-761530986)))) INNER JOIN vt1 ON ((rt0.c3)>>(0.26206812918491695)) CROSS JOIN v0 ON (((((((x'c64d')) BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR((- (NULL)))))OR(vt1.c0 COLLATE BINARY)) GROUP BY rt0.c2, vt1.c0, rt0.c4, rt0.c1, v0.c0, v0.c2, t0.c0, rt0.c0 HAVING (+ ((((TOTAL(t0.c0))) BETWEEN ((GROUP_CONCAT(v0.c2))) AND ((v0.c1))))) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c4, rt0.c1, v0.c0, v0.c2, t0.c0, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((json_quote(rt0.c0))||((- (-761530986)))) INNER JOIN vt1 ON ((rt0.c3)>>(0.26206812918491695)) CROSS JOIN v0 ON (((((((x'c64d')) BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR((- (NULL)))))OR(vt1.c0 COLLATE BINARY)) GROUP BY rt0.c2, vt1.c0, rt0.c4, rt0.c1, v0.c0, v0.c2, t0.c0, rt0.c0 HAVING (NOT ((+ ((((TOTAL(t0.c0))) BETWEEN ((GROUP_CONCAT(v0.c2))) AND ((v0.c1))))))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c4, rt0.c1, v0.c0, v0.c2, t0.c0, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((json_quote(rt0.c0))||((- (-761530986)))) INNER JOIN vt1 ON ((rt0.c3)>>(0.26206812918491695)) CROSS JOIN v0 ON (((((((x'c64d')) BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR((- (NULL)))))OR(vt1.c0 COLLATE BINARY)) GROUP BY rt0.c2, vt1.c0, rt0.c4, rt0.c1, v0.c0, v0.c2, t0.c0, rt0.c0 HAVING (((+ ((((TOTAL(t0.c0))) BETWEEN ((GROUP_CONCAT(v0.c2))) AND ((v0.c1)))))) ISNULL);
SELECT ALL rt0.c2, vt1.c0, rt0.c4, rt0.c1, v0.c0, v0.c2, t0.c0, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((json_quote(rt0.c0))||((- (-761530986)))) INNER JOIN vt1 ON ((rt0.c3)>>(0.26206812918491695)) CROSS JOIN v0 ON (((((((x'c64d')) BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR((- (NULL)))))OR(vt1.c0 COLLATE BINARY)) GROUP BY rt0.c2, vt1.c0, rt0.c4, rt0.c1, v0.c0, v0.c2, t0.c0, rt0.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c4, rt0.c1, v0.c0, v0.c2, t0.c0, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((json_quote(rt0.c0))||((- (-761530986)))) INNER JOIN vt1 ON ((rt0.c3)>>(0.26206812918491695)) CROSS JOIN v0 ON (((((((x'c64d')) BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR((- (NULL)))))OR(vt1.c0 COLLATE BINARY)) GROUP BY rt0.c2, vt1.c0, rt0.c4, rt0.c1, v0.c0, v0.c2, t0.c0, rt0.c0 HAVING (+ ((((TOTAL(t0.c0))) BETWEEN ((GROUP_CONCAT(v0.c2))) AND ((v0.c1))))) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c4, rt0.c1, v0.c0, v0.c2, t0.c0, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((json_quote(rt0.c0))||((- (-761530986)))) INNER JOIN vt1 ON ((rt0.c3)>>(0.26206812918491695)) CROSS JOIN v0 ON (((((((x'c64d')) BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR((- (NULL)))))OR(vt1.c0 COLLATE BINARY)) GROUP BY rt0.c2, vt1.c0, rt0.c4, rt0.c1, v0.c0, v0.c2, t0.c0, rt0.c0 HAVING (NOT ((+ ((((TOTAL(t0.c0))) BETWEEN ((GROUP_CONCAT(v0.c2))) AND ((v0.c1))))))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c4, rt0.c1, v0.c0, v0.c2, t0.c0, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((json_quote(rt0.c0))||((- (-761530986)))) INNER JOIN vt1 ON ((rt0.c3)>>(0.26206812918491695)) CROSS JOIN v0 ON (((((((x'c64d')) BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR((- (NULL)))))OR(vt1.c0 COLLATE BINARY)) GROUP BY rt0.c2, vt1.c0, rt0.c4, rt0.c1, v0.c0, v0.c2, t0.c0, rt0.c0 HAVING (((+ ((((TOTAL(t0.c0))) BETWEEN ((GROUP_CONCAT(v0.c2))) AND ((v0.c1)))))) ISNULL);
SELECT ALL rt0.c2, vt1.c0, rt0.c4, rt0.c1, v0.c0, v0.c2, t0.c0, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((json_quote(rt0.c0))||((- (-761530986)))) INNER JOIN vt1 ON ((rt0.c3)>>(0.26206812918491695)) CROSS JOIN v0 ON (((((((x'c64d')) BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR((- (NULL)))))OR(vt1.c0 COLLATE BINARY)) GROUP BY rt0.c2, vt1.c0, rt0.c4, rt0.c1, v0.c0, v0.c2, t0.c0, rt0.c0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((((v0.c0)>>(v0.c2)))AND((v0.c0 IN (v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((v0.c0)>>(v0.c2)))AND((v0.c0 IN (v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c0)>>(v0.c2)))AND((v0.c0 IN (v0.c0))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (0Xffffffffea326795 COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (0Xffffffffea326795 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1 NOT INDEXED WHERE (((0Xffffffffea326795 COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1;
