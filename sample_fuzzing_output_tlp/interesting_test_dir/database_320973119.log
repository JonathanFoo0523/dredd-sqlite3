-- Time: 2024/06/11 05:25:37
-- Database: database19
-- Database version: 3.40.0
-- seed value: 320973119
PRAGMA cache_size = 50000; -- 15ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1 UNINDEXED); -- 1ms;
CREATE TABLE t1 (c0 REAL ); -- 1ms;
REINDEX; -- 1ms;
INSERT OR IGNORE INTO t1(c0) VALUES (NULL), (2064632338), (0xffffffffb6847743); -- 0ms;
DELETE FROM vt0; -- 0ms;
UPDATE OR REPLACE t1 SET c0=0.49990595042732355 WHERE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE NOCASE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=NULL, c1='2064632338', c1='%停*5' WHERE 0.25555417627734023; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (NULL), (0.14310012447702258), ((((('') BETWEEN (x'') AND (-1613538446))) IS FALSE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1224811483 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') NOT BETWEEN (0.980312879919079) AND (x'')))OR(CASE WHEN 0.997696551913981 THEN NULL WHEN '0.14310012447702258' THEN NULL WHEN 0.5244093672155452 THEN '嬒&s%7' WHEN x'' THEN 196846844 WHEN -1585762789 THEN x'5bab' ELSE x'' END)))OR(((1245841253) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (0x2350a293)) IN (CAST(NULL AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('592487059') NOT NULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xfffffffff8c5ba7c)>(NULL)))!=(((NULL)>(0.41643559691442045)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' COLLATE BINARY)IS NOT(((x'') BETWEEN (0x7f54ff02) AND ('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '81678235 sz=-121259396 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '-493855982 sz=-532887665 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=500769520 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-987711813 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=627150313 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '255475194 sz=-2096918476 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=1724520355 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.49990595042732355; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1067317298 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-987711813 unordered noskipscan'); -- 2ms;
DELETE FROM sqlite_stat1 WHERE CAST((('592487059') BETWEEN (NULL) AND (x'')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8988185058453688) BETWEEN ('292851855') AND (NULL))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=147861368 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE(CASE 0.635414437802849  WHEN 0.521887807147688 THEN NULL END, ((('-1939402150')) NOT BETWEEN ((0X7f54ff02)) AND ((NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2081734585 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.5244093672155452)-(0xffffffffb6847743)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '69721535 sz=-1701484871 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('AbXL') BETWEEN (0.7569320505669591) AND (x''))) NOT BETWEEN (TYPEOF(NULL)) AND ((((0.20658643297630064)) BETWEEN ((NULL)) AND ((x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(0.7898310822616544 AS INTEGER))OR(('-532887665' IN ()))))AND((- (x'')))))OR((0.35909454619778836 IN ()))))AND(CAST('?!狯j.Y4' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (~ (0.20658643297630064)) THEN ((NULL) NOT BETWEEN ('292851855') AND ('2010706346')) ELSE (- (x'4b5b')) END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((NULL) NOTNULL))AND((('69721535') NOT NULL))))OR(0.7293777199832068 COLLATE RTRIM)))AND((('2136276738') IS TRUE))))AND(1771493564 COLLATE RTRIM)))AND(CASE NULL  WHEN -1.613538446E9 THEN 0.23559338846318867 WHEN 2018113268 THEN NULL WHEN NULL THEN '0.7569320505669591' ELSE '' END)))AND(x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>('-1410014857')))>=((((0x5b6516fb, '556489562', NULL))>((x'', NULL, 1.724520355E9))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1724520355 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=81678235 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=2081734585'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-987711813'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=2136276738 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '255475194 2018113268 sz=556489562 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=255475194'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(HEX(DISTINCT x'bcb3798b') AS REAL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1922946056 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=597915783 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1131887953 sz=646138884'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1985281461 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1426488070 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1035494116 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_extract(((NULL) ISNULL), CASE 'J㦜'  WHEN '-161747772' THEN 'tꧣ\' ELSE 0x57b166bd END, PRINTF(NULL), CASE 'mBu^'  WHEN NULL THEN x'6e4a' WHEN NULL THEN 1772833787 WHEN 0.7794586258829911 THEN NULL WHEN '918713637' THEN 'years' WHEN x'f545' THEN x'' END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('o\?V us') NOT NULL) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=701243951 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=-267653087 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-643671530 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-1328079058 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')*(-1585762789)))AND(CAST('' AS INTEGER))))OR(0.1823667372418839 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '606073866 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT TRIM(0.35909454619778836, 191379383)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-17814940 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 0 sz=166366240'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0.9626992506452413 AS INTEGER) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'e6f68fd2')OR('474910515')))AND(NULL)))AND(NULL)))OR(NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(x'b6e5')))AND(x'')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-330628314 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '737681580 sz=1276842820 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('嬒&s%7', '-1779196661', 1426488070, x'', NULL)) NOT BETWEEN ((UNICODE(x''), CAST(NULL AS INTEGER), (('xwaY+')<>(0x4c1b1344)), CAST('212684892' AS REAL), (('')<('907506415')))) AND ((((((x'adf1')OR(0.26089025895451323)))OR('-633023329')), SQLITE_SOURCE_ID(), ((0Xfffffffffef02a64)OR('-915545368')), CASE WHEN '255475194' THEN '-1639438694' ELSE 'Pb' END, ((x'') NOT NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) IS FALSE)  WHEN (('b1*_Y!4')=(x'569d')) THEN (((2.081734585E9, NULL, x'', x'', x'250348f7'))>((0.6717841831415828, NULL, x'', 0.5711902856786399, 0.9724268177900417))) WHEN ((x'a116')+(x'')) THEN ((('-633023329'))>((x''))) WHEN json_quote(0.6717841831415828) THEN TRIM(x'', x'') ELSE ((x'') NOT BETWEEN (x'') AND (-1410014857)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (x'')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-2006207886'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((2.010706346E9)!=('')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 606073866 sz=-655092484 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-581149228 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE 0X6b993a90  WHEN NULL THEN '1006874893' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL))) NOT BETWEEN (CAST(0.25555417627734023 AS NUMERIC)) AND (((((((((NULL)AND('')))AND(x'')))OR('')))OR('巔K3t')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (1846847875) AND ('-419492321'))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=498181797 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=170359819'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=376534997'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-2038426696 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE x'8f0e6e0d'  WHEN x'5c54' THEN '' ELSE '' END AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((((((0.7779990343532143)AND('-1872088111')))OR(0.16242311680748678)))AND(-1.410014857E9)))OR(x''))  WHEN TRIM(0.965404755709787, x'23f6714d') THEN (((NULL))>=(('955882898'))) END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-332927003 sz=-2132123398 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=498181797 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=737681580'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-121259396 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0xffffffffbb234188 AS TEXT)) BETWEEN ((((('o\?V us')OR(NULL)))OR(x''))) AND (((0.9661371314751989)|(0.2624820789889417)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xfffffffffef02a64)<=((('-1381533297')GLOB(0.1568905035294308)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((('>KiEwMP')) BETWEEN (('L3')) AND (('1689088234')))  WHEN ((NULL) IS TRUE) THEN ((-6.55092484E8)IS(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=314249641 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1653316050 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE NULL  WHEN '1311068976' THEN x'' ELSE 0xf8890a1 END IN (LIKELY(0Xffffffffaadb9788))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS TEXT))!=('0.2624820789889417')); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-655092484 0 sz=705873608 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.635414437802849')||('40804026')) IN (x'' COLLATE BINARY, (1372083422 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.3937900722184503)>('627150313')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1398101633 -1872088111 sz=292851855 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(0.7569320505669591 AS INTEGER) THEN CAST(1.65331605E9 AS REAL) WHEN 0.44038602362577006 THEN ((NULL) NOT BETWEEN (x'') AND (0.7794586258829911)) WHEN (x'18f1' IN (0.6165679856816676)) THEN (- ('474910515')) ELSE ((0.41643559691442045) NOT NULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=608400779 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=362128541 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-1985281461 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 -655092484 sz=1372083422'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '-1077170325'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')=(NULL)))LIKE((((x'', NULL, ']''')) NOT BETWEEN ((0.8988185058453688, '', '1653316050')) AND ((0.4641842152908544, '', '260965604'))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL)LIKE(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('xwaY+') NOT BETWEEN (0.9041278414272934) AND (NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1245841253 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.33992126294530545 THEN 4.74910515E8 END) NOT BETWEEN ((0X1174908f IN ())) AND ((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-6.4367153E8) NOT BETWEEN ('p') AND (0.7794263223917074)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER('mbu^'))OR(((((((((-1701484871)AND(1.398101633E9)))AND(0.9844089461594521)))OR('1245224613')))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '314249641 1772833787 sz=1724520355 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-2096918476'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=-290133647 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE 0.20658643297630064  WHEN 0.13613704552716566 THEN x'' END THEN x'574a' COLLATE NOCASE END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=16167488'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '701243951 sz=-537010749 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1471243965 sz=597915783 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8265865071129505, NULL, x'')) BETWEEN ((1183754802, CASE WHEN x'' THEN -1016357655 ELSE '-987711813' END, CASE ''  WHEN 0.2553339138974706 THEN 0.8266546529960911 WHEN x'' THEN '-469365720' WHEN 0.6165679856816676 THEN 0.4641842152908544 END)) AND (((- (NULL)), LTRIM(NULL, '500769520'), (('')IS('906098389'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=705873608'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=1836282173 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 0 sz=193977245 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'9ffd')OR((('0.9661371314751989') ISNULL))))OR('-332927003')))OR((((0.19840445037806742))<>((NULL))))))AND(((NULL)<('737172323')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1013352534')AND(NULL)))OR(0.2947021223038869)) COLLATE NOCASE COLLATE RTRIM; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT CAST(NULL AS NUMERIC)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-1939402150 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 sz=225253044'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' IN ()) IN ()); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('OS') NOT BETWEEN (x'') AND (-220474284))) BETWEEN ((0.5189734552861336 IN ())) AND ((('')*('{B')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2018113268 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)IS NOT(0.5950450320078501)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-112150958 sz=67682134 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')IS(0.5711902856786399))))>((((NULL) IS FALSE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1180573906'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS TEXT))<(((x'8251') NOT BETWEEN (NULL) AND (0xffffffff97f842fc)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 sz=170359819 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1224811483' IN ('516616070'))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 sz=-1447485360 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '41665995 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-290133647 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) IS FALSE) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('\nK갞RfZp')!=(x'3d71'))))=(((NULL IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-713249073 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-869018478))!=(('474910515'))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- ('-1784631957')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((NOT (x'1117')))AND(((('停o'))<=(('499621231'))))))OR((('2064632338') NOT BETWEEN (0.401404848586959) AND ('-1016357655')))))AND(((0Xffffffffd06f0c9b) IS FALSE))))AND(((NULL) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '953571027 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1329927106 sz=212684892 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=875704411 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-2032355913 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '1437286817 0 sz=255475194 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 1650197215 sz=-1300108270 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-267653087 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1724520355 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS FALSE))<=(((0.9588684411884086)>>('-2050419155')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(NULL AS REAL))OR(x'7f41')))AND(((1800988475) BETWEEN ('') AND ('0.16242311680748678')))))OR('-1131887953' COLLATE RTRIM)))AND((('d9')|(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))==(CAST('362128541' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-290133647 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-777672450'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LTRIM(0X3bb6f84d, x'')) ISNULL); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.9079732066677836 IN ()) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT ((((x'')AND(-1.4284494E9)))OR(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=314249641 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN 0.8367812266972898 THEN 0.1495824062193487 END) NOT BETWEEN (CASE NULL  WHEN '' THEN x'' ELSE x'5b4a7bbe' END) AND (((0x468eaa32)&('0.5950450320078501')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE rtreenode((('69721535')*('316544884')), CASE x''  WHEN 1372083422 THEN 0.2425638156642479 END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.26089025895451323) NOT BETWEEN ('') AND (0.6090033183356629)))AND(CAST(x'bd55' AS TEXT))))OR(CAST(x'd03fbe0a08cb' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-1532254416'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('l|') IS TRUE))IS NOT((- ('d!狯j.Y4')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-2080547524 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE 0x377c396c  WHEN '' THEN 0.1936670049072008 END, (('ฟ_\')=(x'')), NULL COLLATE BINARY))<((LIKELIHOOD(0.2869425129217986, 0.3656219678549396), '', ((((((((NULL)AND('')))AND('')))OR('drnz\7rVc')))OR(x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=2044272975 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 -1910028285 sz=-915545368 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1566517072 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'ef4da3bd' IN (0.9867488205094509)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0xffffffffc652c2d8))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((TRIM('-633023329'))OR((~ ('-2096918476')))))AND(0.5578888635302822)))OR(CAST(x'' AS NUMERIC))))AND((- (0.6011560027831869)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '877314160 sz=376534997 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '40804026'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1639438694 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-1224811483'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=2033819737 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1779085941 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1871896908 sz=841660019 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1089567001'); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.997696551913981 COLLATE NOCASE)AND(CAST(NULL AS NUMERIC))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-526790081 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('0.17515792706456568')>>('353728677'))  WHEN ((0.17515792706456568) NOT NULL) THEN 0.10820895952564213 ELSE UPPER(DISTINCT 0.3831139390383671) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')AND(NULL)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '606073866'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '1805204112 sz=2101102816 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1510609626 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1758422941 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1475785366'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('aTBA')<<('2128472401')))OR(((((NULL)OR(NULL)))OR('cD')))))OR((((-1293377155)) NOT BETWEEN ((NULL)) AND ((NULL))))))OR(TIME(0xffffffffa8a3bc4c, 0.6165679856816676, '64543716'))))AND((('196846844') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=1555039070 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1951126323'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 1115987184 sz=-1440946759'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN ())) NOT BETWEEN (((NULL) NOTNULL)) AND (x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)>=('-1639438694')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')%(x'79ba'))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(NULL AS INTEGER))OR(CASE WHEN '' THEN x'' WHEN 0.9367816840832692 THEN NULL WHEN '1296884212' THEN x'afe1' ELSE '' END)))AND(((0Xffffffff9c0578fd)GLOB(-6.55092484E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=4068066 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)*(0.5711902856786399)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '-1921972418'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1989862998 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2078569607 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1862093964 sz=-792562124'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '556489562 sz=1270129074 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=517588021 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1410544380 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffffb15c55de; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN (CAST(x'' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((CAST(x'' AS BLOB))) AND ((NULLIF(x'', x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('')))&(NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=597915783'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=314249641 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-607478094 sz=1407375519 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '797763857'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((0.7293777199832068, NULL, 0.7161382283983819))<((x'', NULL, 'er7'))) THEN (('1859332170')&(-915545368)) WHEN (('') NOT NULL) THEN (x'00e3' IN ()) WHEN CASE WHEN '矕Y+#c]' THEN 0.592097691580611 END THEN (-1658136880 IN ()) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-581149228'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-1978742577 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'', 0xffffffffa6305277, '1381515826')) BETWEEN (('q-{''', x'', '1771493564')) AND (('40804026', 'dm1dh', '5YKs跩J'))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1955063139 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1398101633 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1.27684282E9) NOT BETWEEN ((((0Xffffffff8c6e23ae))<>((NULL)))) AND (((x'afed') NOT BETWEEN (NULL) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '4 sz=-1517380593'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-419492321 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('166366240')<<(x''))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('-1381533297' IN ()) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ ('466779724')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_GET((((x'c07a'))==((0.05241779692143722)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.2817165245663481)==(-1.779196661E9))) NOT BETWEEN ((x'' IN ('608400779'))) AND ((('-1570413623')%(x'4b66')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.4625574301811215 AS TEXT) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER('' COLLATE BINARY); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1797181746'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 -1042976892 sz=898606291 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOTNULL))<>((((x'', NULL, NULL))>=((x'9e67', NULL, ''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'7994' IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE 'b'  WHEN x'' THEN '627003056' WHEN 0.4734651013792269 THEN 0.401404848586959 WHEN '' THEN NULL ELSE 0Xfffffffff6ff766a END  WHEN -9.87711813E8 COLLATE BINARY THEN CASE x'0385'  WHEN NULL THEN 653644621 END ELSE (0.7044651367199939 IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NOT (NULL)) THEN ((5.92487059E8) NOT NULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS REAL)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-2086477142 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=907506415 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '1311068976 sz=323403587 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'230c') NOT BETWEEN (0x17b2ff48) AND (((('0.9041278414272934', 0X25523382, 'C%eT\nYʊvt'))>=((x'4964', '1653316050', 1e500))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 -17814940 sz=1135340586 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=498181797'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array(((((9.18713637E8)OR(x'9ce1')))AND('vLM|')), CASE NULL  WHEN '?!狯J.Y4' THEN 458123379 END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1276842820', 0.41007295280892286, 'Q''MowR')) BETWEEN ((0.27455673908517053, '\nK갞RfZp', x'22b5')) AND ((NULL, -2066172233, '8aU~')))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((('Es')) NOT BETWEEN ((0.032940406663450994)) AND ((0Xffffffffd9fbb89a)))  WHEN ((0.2809126784497332)&('1372083422')) THEN (~ ('P%,<')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1579344407'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('of}⾦[{P]]' COLLATE RTRIM)>>(CAST('༻' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '1623524232 sz=-909500288 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN 'AU' THEN x'9b9b' ELSE '>i쩉q' END) BETWEEN ((('1570144527') NOT NULL)) AND ((('''')>=('2136276738')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((-1.872088111E9)>(NULL))  WHEN ((((0xffffffffc520b6bb)OR(NULL)))OR(NULL)) THEN (((('엉v')OR('1372083422')))OR(0.7543840557344311)) ELSE (NULL IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT ((x'')<<(x'')), 0.5608684217631966); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-1232832701 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-1131887953 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'01e36ff4' AS INTEGER) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.26089025895451323')!=(NULL)))IS NOT((+ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_remove(CAST('1320569053' AS REAL), (((0.19840445037806742)) BETWEEN ((5.0076952E8)) AND (('1222346404'))), ((0Xffffffffb59cfc77)OR(0X3eb89025)), CAST(0Xffffffff82fd9faa AS NUMERIC)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1548426465 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1421544375 996404882 sz=2136276738'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1035494116 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=1724520355 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-1381533297 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.5273195664626655)>=(0x2350a293))))<=(((NOT (NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '2064632338'  WHEN -970774029 THEN '260965604' ELSE NULL END COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=235001366 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-1 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2079551219'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1900859733'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=812881476 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=40804026 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-1787307329 unordered'); -- 3ms;
DELETE FROM sqlite_stat1 WHERE ((((('-98913638')+('A*z%I1q')), CASE '0.44038602362577006'  WHEN x'10c5' THEN 0X21ca78b WHEN NULL THEN 'yl' WHEN 0X56a7c044 THEN 0X79c44bff ELSE 9.18713637E8 END, (('-4004452')<('1122941714')), CAST('J/]' AS TEXT), 260608161 COLLATE NOCASE))>((CAST('622403544' AS BLOB), (~ (x'2f53')), ((0.521887807147688) IS FALSE), TRIM(DISTINCT NULL), CAST(x'352d' AS REAL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1.010280931E9 IN ())) NOT BETWEEN ((x'a120' IN ())) AND ('q')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-954388542 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'' AS BLOB) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(',' AS TEXT))OR(CASE -614533341  WHEN '' THEN '~+w\nXFM' END)))AND(CASE ''  WHEN NULL THEN '-409900200' WHEN 0Xa77a2fd THEN 0.3937900722184503 WHEN 0Xffffffff9a9566b9 THEN 1.533351675E9 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1549675860 -1873922728 sz=-643671530 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT x'1dc5', 2136276738)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2132123398 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1006874893 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '1964707362 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNLIKELY(DISTINCT 0.8988185058453688))+(CAST('-493855982' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-213480047 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=1006874893 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '170359819 sz=1398101633 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'6624')>('n{)Zv*0|'))) BETWEEN ((('2034228976')==(0.6692890869708727))) AND ((((NULL))>=((0.22446977401509405))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=42797511 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-927104947 COLLATE BINARY)OR(((((1276842820)AND(191379383)))OR(-898471923)))))OR(TRIM('-1232832701'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS NUMERIC) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'') NOT BETWEEN (-537010749) AND ('h')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1225854960 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN TYPEOF('1062715016') THEN ((((x'')OR(0Xffffffff9042310c)))OR(x'')) ELSE (-1.872088111E9 IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT CAST('242039747' AS INTEGER)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '314249641 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '2136276738 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-2039299737 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '918713637 sz=314249641 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-509262179'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '2 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.6838311068859534)AND(NULL)))AND('-1152893914'))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('?ꓼf')>>(0Xffffffffabb4efbc)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1893218257', NULL, '0.6717841831415828')) BETWEEN ((CASE -1.585762789E9  WHEN 0.41007295280892286 THEN -9223372036854775808 WHEN NULL THEN 2010706346 WHEN 'ฟ_\' THEN '' ELSE 0.46172571933400064 END, (NOT (x'')), (~ (NULL)))) AND ((((x'292f') NOTNULL), 5.56489562E8 COLLATE RTRIM, NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1096670740 2 sz=2041705293 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('104063483' COLLATE BINARY IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=759148690 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 -1410014857 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-532887665'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '955882898 sz=1952443741 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(1772833787 AS NUMERIC)) NOT BETWEEN (CAST('' AS REAL)) AND (CASE WHEN NULL THEN 0x55067b06 WHEN 0.85052976158752 THEN '' WHEN '498181797' THEN x'ae9e' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((JULIANDAY('-962254899', 1371236479, NULL)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '4 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '-980878407 0 0 sz=-1158471657'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 -685861360 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '985744042 sz=705873608 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '-918471069 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 255475194 sz=1554424538 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('' IN ()))AND((((0.04997478317875237))<=((x''))))))OR(LTRIM('', NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=-486435876 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=705873608 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE x''  WHEN x'' THEN '-1131887953' WHEN 0.6692890869708727 THEN x'a32d' WHEN '170359819' THEN '' END AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT CASE x''  WHEN NULL THEN 0.3630664707194159 END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((0.5730551473234465)AND(NULL)))AND(-1407878998))))<=((NULL COLLATE RTRIM))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '-1171588669 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((0Xffffffffdb2fab92)OR(0.4307940093016762)))OR(x'')))OR(x'e82d243f')))AND(NULL)))OR('-2096918476')))OR('昮')) IN ((((('烪ᙲ娖2d\rLU')OR(NULL)))OR('B')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1049811903 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '500769520 0 sz=908095694 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS NUMERIC))IS NOT(LOWER(DISTINCT 0.8857079110817614))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 2 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1359091026'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1580488480 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=1221812086 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (~ (0Xffffffff933b2a61)) THEN LIKELIHOOD(DISTINCT '295450314', 0.5379282214174456) ELSE ((x'ce9f08e7')GLOB(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.3261471061779163; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1760440200 sz=-1224811483 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(SQLITE_COMPILEOPTION_USED(NULL) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1131887953 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('B|!')<(0X5cf4e5f2)))|(SQLITE_SOURCE_ID())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((1389822664) BETWEEN (0.27455673908517053) AND (NULL)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1183754802'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1488373744 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1389259878 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-17814940 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-947616822' COLLATE BINARY AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('0U')<<(NULL)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-833003232 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.2553339138974706)AND(NULL)))OR(0x427ddbf)))AND(-1639438694)))OR(x'')) COLLATE RTRIM; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-544441752 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_extract(CAST(0.8566867616111057 AS BLOB), (0.7580728739974473 IN (0.8135786775354299))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((- (x'7b11')))IS('-1016357655' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '681585478 -1878759050 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1604400665 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1350668909'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((1565869250)OR(x'')))OR(''))) NOT BETWEEN (x'' COLLATE NOCASE) AND (CAST(x'' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 sz=1010280931 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS NUMERIC))*(((0.965404755709787)>=('m!}9bvD!')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE SUBSTR(((0.6371148818770241)AND(NULL)), x'' COLLATE NOCASE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') ISNULL) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (1.771493564E9))) BETWEEN (((NULL)&('DY*&|bh'))) AND (CASE NULL  WHEN x'' THEN 0.8204295071320272 WHEN NULL THEN x'' WHEN 0.4210731727421877 THEN 0.41007295280892286 ELSE 4.74910515E8 END)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((1714293611)) BETWEEN ((NULL)) AND ((0.5923104063849493))))GLOB(x'bf67' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '1183754802 sz=1947857869 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((6.08400779E8))<((0.2657142731391241)))  WHEN ((NULL)<<(0.5163486184859042)) THEN (~ (0.6636453418430445)) WHEN HEX(0X577a2614) THEN (-1107272252 IN ()) WHEN (0.42447090250563235 IN ('376534997', NULL)) THEN SQLITE_SOURCE_ID() END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'ebca')AND('2064632338')))OR('FVH2')) IN (x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'Dh'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')*(x'')))%((('')%(0xfffffffff557f9f5)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=251520491'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0X7faeb4c0)))<=((('260608161')==(x'03fc')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=419473074 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '-1077170325 sz=1 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-621006755'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=2017335663 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0.43177208364403663)IS('166366240')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN ()) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-675926326'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '955882898 sz=1'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_VERSION()) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-880996470 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1873999379 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0)AND('1}[Q9}><I')))OR(0.12314392780495753))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1892795583 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=166366240 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('I')LIKE('-366884035')))OR(((NULL)>>(0.23650040072264977)))))AND(((x'd484')GLOB(0.12242318802066665)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '641972354 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=196846844 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('H5')) NOT BETWEEN ((x'16cf')) AND ((NULL))) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((((NULL) IS FALSE))) AND ((CASE WHEN 0.04997478317875237 THEN 0.6913280834342125 WHEN -1826374795 THEN '57867723' WHEN '' THEN x'' END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'4cde')OR(LIKELIHOOD('', 0.1461591665712837))))AND(CAST('>>iND' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1990402165 sz=-783035814'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1533351675 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=376534997 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-1037923979'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'99a2'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1183222043 sz=2095065784'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5488682394184068)>=(x'')))*((+ (-17814940)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('')IS('-998211394'))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=682982309 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1876744745'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1689088234')LIKE(json_insert(NULL, 0.4595565757421626, 0.17517462819272211))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=2075506481 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'Nv'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1445646151 sz=-2092386081 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE 1067317298  WHEN 0.4793497954664866 THEN x'' ELSE NULL END)OR((('-1696088121')&(0.3941441239567821)))))OR(((x'6c9f')|(0.8041996647260603)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=2088973814 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '1021822531 -1565917669 sz=402458445 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-1239094637 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -0.0; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=1789708945 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('-532887665')))+(CASE WHEN x'7fed' THEN x'' ELSE 0.8439070569225599 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.8266546529960911 THEN x'' WHEN NULL THEN 0xffffffffbc88c2af WHEN 'W?.>XA?' THEN x'c90e' ELSE x'3e47' END) NOT BETWEEN ((0.7332506627996143 IN (0.04997478317875237))) AND ((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL))<(((NULL) BETWEEN ('-322556137') AND ('\n-wDN')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 0 sz=1826978005'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '666031805 0 sz=-2001071630 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=-1684028439'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=60969076'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1127431464 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1653316050 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (x'') AND (x'')))GLOB(CAST(x'' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=1690150671 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((NULL, 0Xffffffffd4080227, 0Xffffffff9671922c, NULL, NULL)) BETWEEN (('v\nrX|܈*', NULL, 0.3591774099193724, '', NULL)) AND (('', -1.872088111E9, -272659861, x'', NULL))) AS TEXT); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')OR(CASE 0x57b166bd  WHEN NULL THEN 'LNZ' WHEN x'' THEN NULL WHEN NULL THEN '918713637' END)))AND(0.0013357947367180767 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.9975051062549741) IS FALSE) THEN ((0.7252572647347758) IS TRUE) WHEN ((x'')/('TRUE')) THEN CASE WHEN 0.4625574301811215 THEN -1903355606 ELSE 'Nl' END WHEN NULL THEN (x'' IN (NULL)) ELSE (NOT (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN '?8' THEN '1653316050' WHEN NULL THEN '' WHEN NULL THEN '705873608' WHEN '跩*' THEN x'' WHEN NULL THEN x'' ELSE 0xffffffffa5d646dd END  WHEN CASE 0.9987975307549171  WHEN '' THEN 0.4307940093016762 END THEN TYPEOF(0x4c1b1344) ELSE (NOT (x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=938096393'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (json(NULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=569991012 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1678171929'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'2b64') BETWEEN ((((((((((((('170359819')AND(0X26e9eba)))AND(NULL)))OR('0.4307940093016762')))OR(x'')))AND('1361578270')))AND(x''))) AND (CASE WHEN NULL THEN '191379383' WHEN 'RE,G' THEN x'' WHEN NULL THEN '' ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1224811483 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1637700948'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1116794882 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=855244810'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1219779733 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=628929978 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('' AS REAL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((x'f53b')OR(0.4079763010071762)))AND(CASE WHEN -1.410014857E9 THEN NULL ELSE 9.07506415E8 END)))AND(((451410900) BETWEEN (NULL) AND (x'')))))OR(((0.758600363861446)+('173045133')))))AND((~ ('2081734585')))))AND(CASE x'ffeb7c23'  WHEN 'LNZ' THEN x'71d3ccf2' ELSE NULL END)))OR((((NULL))<=(('1471243965'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '1994791941 sz=1604911762 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1346218079'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1481856176 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('I?' AS NUMERIC)) BETWEEN (((15803461)-('0'))) AND (((0.8086489319074734)|(-602434937)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (0.8302348549959759)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'f50a') IS TRUE))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-86294822 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1900617307' COLLATE NOCASE) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '913355683'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')*(''))) BETWEEN (CASE WHEN NULL THEN -1137773276 ELSE NULL END) AND (((((x'928e')OR(x'')))OR('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1009133989'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=-5936311'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN (x'570a') AND (NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-924360180 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '-1713793627 sz=1459949040 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-620050177'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 sz=-128464782 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'')=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1872088111 sz=501471874 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=1794179366 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('')+(NULL))))<>((((NULL) IS FALSE)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=559699857'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.6655072097111849  WHEN 'f' THEN '쾅[' WHEN x'' THEN '6o5fZq' WHEN 'M4oV' THEN x'' ELSE '1922946056' END)+((+ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-2038426696 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 597915783'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'' COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'ca6e'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1.6636624E8 IN ()))>=(CAST('ei9vl' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT 0.3837595818060342); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-76124969') BETWEEN (0.8236395239127189) AND (x''))) NOT BETWEEN ((((NULL))=((NULL)))) AND (((((((((0Xffffffffc89dae21)AND(x'883f')))OR(NULL)))OR(-1419215845)))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0x6996d8bc))>(('-1131887953'))) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=500769520 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('260965604' COLLATE BINARY IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-907295309 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'3e12' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))<>((0.060308540785254494)))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-427115913 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1522464807 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') BETWEEN (MAX('0.997696551913981', -1683036093)) AND (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY((('2104561940')=(''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ ('1772833787')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))IS NOT((~ ('2071023122')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-769238640 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 sz=-1998440036 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-709573734 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-1916501376 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 sz=-198293507 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=605656308'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=433589711 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.15015722192285708) IS FALSE)))<>((((0.15771627754227358)IS NOT('qCl?鿇NJB'))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-11342825 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-121259396 sz=-792392322 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '627150313 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN ('566288653') AND (0.14310012447702258))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=826942589 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-552566760 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-17814940 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 1604914812 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'a10c'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(5.92487059E8 AS TEXT) COLLATE BINARY; -- 3ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffffe9eaa0df)!=(x'd2ae'))) NOT NULL); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0.3451722973284348)IS NOT('0.13613704552716566')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 99878694 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS REAL))IS NOT(((NULL)>>('-267653087')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 sz=2044215939 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '955882898 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=960355374 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'5fab') NOT BETWEEN (0.8441713713895945) AND (NULL))) NOT BETWEEN ('-633023329' COLLATE BINARY) AND (NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE BINARY) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=376534997 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-176547368 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=-536587553'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '918713637 sz=16167488 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 -1998440036 sz=-1440715970 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.7293777199832068)OR(9.55882898E8)))OR(''))) NOT BETWEEN ((((((((('')OR(NULL)))OR(NULL)))OR(0.2624820789889417)))OR(NULL))) AND ((NULL IN ('-144862026', '')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1396915818'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1783950845 sz=43008014 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-2050564283 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN 'NQ' THEN 0x226315ec END THEN ((((((((x'9260')OR(NULL)))OR(x'')))AND(NULL)))AND('')) WHEN CASE NULL  WHEN 0Xffffffffe83d8bb5 THEN x'304c' END THEN ((('A^')) NOT BETWEEN (('ﰵ8#>hE')) AND ((x''))) WHEN (((x'', 0.3767513972942136, '0.6636453418430445'))<=(('\z&]+E㪐S', 0.23033565529431055, NULL))) THEN NULLIF(DISTINCT x'', 0.022116202955286046) ELSE LENGTH(0.22412467624955013) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 sz=-1513544260 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(1426488070 COLLATE BINARY AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE '-419492321'  WHEN 1179702894 THEN 0.32403477033536365 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-992073973 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1170125004'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(CAST(NULL AS INTEGER), ((((x'')OR(0.06500528518667525)))OR(-519461311))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-833110615'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(DISTINCT '1311068976', 'u-t&''k&㓕j'))IS(CAST(x'' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-2113222216 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')!=(-1.410014857E9)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0xbbba4fc AS INTEGER) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE NOCASE IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1122129938' IN (0X1595a49d, '')))%(((0X5b6516fb)OR(0.401404848586959)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((-1470388089, '1533351675', '-961144078')) NOT BETWEEN ((x'', 'g', NULL)) AND (('0', NULL, x'dd0d'))) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE (('160208779')AND(x'286f'))  WHEN (+ (NULL)) THEN x'fe1c' COLLATE BINARY ELSE (('16167488')IS(0.8832449942645906)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM(CAST(-1.224811483E9 AS BLOB), ((NULL)||(0.10070532024125844))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1689088234'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST('-1701484871' AS NUMERIC), NULL COLLATE RTRIM, x''))<((0X11d0e02d, COALESCE('', NULL), NULL COLLATE RTRIM))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.22379648199851276)/(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '1021737586 sz=-267653087 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('1906211150')AND(0.05358509809854206)))AND(0.3176506146427508)))OR(x'')))AND(NULL)))<=(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '27860701 sz=-863212040 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS REAL)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1607114228 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('aT') IS TRUE))|(((x'ec005142')*('SLZ1>')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST('' AS REAL)  WHEN ((NULL) NOT NULL) THEN CAST(NULL AS TEXT) WHEN LTRIM(x'') THEN (x'3887' IN (NULL)) WHEN ((((NULL)OR(NULL)))OR(NULL)) THEN ((x'')|('ce8\ꚥ~༂''')) ELSE (- ('-397002655')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('hours0U') NOTNULL))OR((+ (0X55067b06)))))AND((1553516227 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1460469845 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1689088234') BETWEEN (x'') AND (0.6247778527558934)))LIKE(CASE NULL  WHEN 0x27338351 THEN '' ELSE '' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=426423051 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((('I?')>=(0.9510517637946907)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '904779596'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1912196989 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))>(('孲\rrp{608I')))) NOT BETWEEN ((('tꧣ\') NOTNULL)) AND (CASE '-995095374'  WHEN 0.021856845574703243 THEN '16167488' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=260608161 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL) BETWEEN (0.9661371314751989) AND ('608400779')), ((((((((x'')AND(NULL)))AND(x'6498')))AND(x'')))OR(NULL)), (('474910515')OR('517557789'))))<=(('2081734585', ((7.3768158E8)>>(0.5189734552861336)), (+ (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '-226066155 sz=-1463982232 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1009369334 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '-1998440036 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-424645109 sz=-282982347 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'2805')GLOB(0.010224086219426165))) BETWEEN (DATETIME(x'', NULL, '-1328079058')) AND ((('ce8\ꚥ~༂''')&(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-1.781494E7)||(NULL)))OR((~ (0.2869386271055101)))))OR(((((NULL)OR(NULL)))OR('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '682566547 474910515 sz=1355552624 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 sz=497162968 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=(x''); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR REPLACE INTO t1(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1805204112);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=474910515,11');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=2136276738,4');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '13151'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
CREATE INDEX i18 ON t1(CASE (('1')/(c0))  WHEN (+ (c0)) THEN c0 COLLATE BINARY WHEN ((c0) BETWEEN (c0) AND (c0)) THEN (c0 IN (c0)) WHEN (((c0, c0, 0.6090033183356629, c0, c0)) NOT BETWEEN ((c0, c0, c0, '', c0)) AND ((c0, c0, c0, '', c0))) THEN CAST(c0 AS NUMERIC) ELSE (~ (c0)) END COLLATE BINARY) WHERE (((((((c0))!=((c0))))OR(((x'')LIKE(c0)))))AND(LOWER(c0))); -- 0ms;
CREATE UNIQUE INDEX i12 ON t1((((c0)) NOT BETWEEN ((((((c0)OR(c0)))AND('{?eh')))) AND ((CAST(x'f691' AS NUMERIC)))) COLLATE BINARY); -- 0ms;
CREATE INDEX IF NOT EXISTS i39 ON t1(CAST((c0 IN ()) AS BLOB)) WHERE ((((((((((c0)<<(c0)))AND(NULL)))OR(((c0) IS FALSE))))OR(((c0)>('')))))OR((~ (c0)))); -- 1ms;
INSERT OR IGNORE INTO t1 VALUES (''); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT OR FAIL INTO vt0(c1, c0) VALUES (0.8045592627252103, -1629345497); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (NULL, NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(0.5657082203184873) WHERE CAST(-17814940 COLLATE RTRIM AS NUMERIC); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-895763030,13');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1613538446);\n; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1, c0) VALUES (NULL, 0.19493208748248858), (x'8516', x'ed66'), (0x7b0fca12, NULL), ('1771493564', NULL), (x'', '40790943'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c1='-2033090916', c0=0.8906991146672218, c1='-2006207886'; -- 6ms;
CREATE UNIQUE INDEX IF NOT EXISTS i37 ON t1((NOT ((- (c0)))) COLLATE RTRIM DESC) WHERE ((((((c0) NOT BETWEEN (-709271611) AND (c0)))AND(((c0)>=(c0)))))AND(((((c0)OR(c0)))OR(c0)))); -- 1ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES ('^jE ', 0x6b053642); -- 7ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 1ms;
CREATE UNIQUE INDEX IF NOT EXISTS i34 ON t1(ABS(CAST(c0 AS REAL)) COLLATE RTRIM DESC) WHERE (+ (((((((((c0)OR(c0)))AND(c0)))OR(c0)))AND(c0)))); -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=7'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 REAL ); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 2); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (x''); -- 0ms;
END TRANSACTION; -- 1ms;
END TRANSACTION; -- 0ms;
ALTER TABLE t1 RENAME TO t2; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '17651'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('sHev\a'); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE t2 SET c0=']bO!ᓼ'; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE INDEX IF NOT EXISTS i18 ON t0((((c0 IN ()))*(((c0)>>(c0))))) WHERE ((TRIM(DISTINCT c0, c0))>=(((c0) NOT BETWEEN (NULL) AND (c0)))); -- 0ms;
UPDATE OR ABORT t2 SET (c0, c0)=(NULL, '0.5711902856786399'); -- 0ms;
UPDATE OR IGNORE t2 SET c0=NULL, c0=0.4871340778514479; -- 0ms;
UPDATE t2 SET (c0, c0)=(NULL, NULL); -- 0ms;
UPDATE vt0 SET c0=x''; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR REPLACE t0 SET c0=NULL; -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0.586221942098426; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
UPDATE OR IGNORE vt0 SET c1=x'812d' WHERE x''; -- 0ms;
REINDEX i34; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 8); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
DROP INDEX IF EXISTS "i18"; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-524114981,8');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=8'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 AFTER UPDATE ON t0 FOR EACH ROW  WHEN CAST(((((-1872088111)OR(0.23366800476428518)))OR(t0.c0)) AS INTEGER) BEGIN UPDATE OR REPLACE t0 SET (c0)=(NULL);END; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (0x3948bdaa); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 351598070); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1372083422,13');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 4); -- 0ms;
UPDATE OR REPLACE vt1 SET c0=''; -- 0ms;
UPDATE OR IGNORE t0 SET c0='' WHERE ((0.16973879626524224) NOTNULL); -- 1ms;
UPDATE vt0 SET c1=NULL WHERE ((NULL) NOT BETWEEN (NULL) AND (vt0.c0)) COLLATE RTRIM; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x''); -- 1ms;
UPDATE vt0 SET (c1)=(NULL) WHERE CAST(vt0.c1 COLLATE RTRIM AS NUMERIC); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(0.47595062469178184); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK t2 SET c0=x'8989', c0='k' WHERE CAST(((((0.7898310822616544)OR(t2.c0)))OR(t2.c0)) AS INTEGER); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1372083422,14');\n; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c1)=(0.5046413226337275) WHERE ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE (x'76d2') UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (x'76d2'))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((x'76d2') ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT t2.c0 FROM t2, vt0, t0;
SELECT DISTINCT t2.c0 FROM t2, vt0, t0 WHERE (((t2.c0) NOT NULL)) UNION SELECT DISTINCT t2.c0 FROM t2, vt0, t0 WHERE ((NOT (((t2.c0) NOT NULL)))) UNION SELECT DISTINCT t2.c0 FROM t2, vt0, t0 WHERE (((((t2.c0) NOT NULL)) ISNULL));
SELECT DISTINCT t2.c0 FROM t2, vt0, t0;
SELECT vt0.c1, vt1.c0, t2.c0 FROM t0, t2, vt0 INDEXED BY i37, vt1 GROUP BY vt0.c1, vt1.c0, t2.c0;
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0, t2, t0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0, t2, t0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING '8y䃙Bwp' UNION ALL SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt0, t2, t0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING (NOT ('8y䃙Bwp')) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt0, t2, t0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING (('8y䃙Bwp') ISNULL);
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0, t2, t0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0, t2, t0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING '8y䃙Bwp' UNION ALL SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt0, t2, t0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING (NOT ('8y䃙Bwp')) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt0, t2, t0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING (('8y䃙Bwp') ISNULL);
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0, t2, t0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT ALL t0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c0) NOT NULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c1)!=(t0.c0))));
SELECT ALL t0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c0) NOT NULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c1)!=(t0.c0)))) WHERE (((NULL)>((+ (x'6334'))))) UNION ALL SELECT t0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c0) NOT NULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c1)<>(t0.c0)))) WHERE ((NOT (((NULL)>((+ (x'6334'))))))) UNION ALL SELECT ALL t0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c0) NOT NULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c1)<>(t0.c0)))) WHERE (((((NULL)>((+ (x'6334'))))) ISNULL));
SELECT ALL t0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c0) NOT NULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c1)!=(t0.c0))));
SELECT DISTINCT * FROM vt1, t2, vt0, t0;
SELECT DISTINCT * FROM vt1, t2, vt0, t0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0) IS FALSE)) AND (CAST(t0.c0 AS INTEGER)))) UNION SELECT DISTINCT * FROM vt1, t2, vt0, t0 WHERE ((NOT (((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0) IS FALSE)) AND (CAST(t0.c0 AS INTEGER)))))) UNION SELECT DISTINCT * FROM vt1, t2, vt0, t0 WHERE (((((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0) IS FALSE)) AND (CAST(t0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM vt1, t2, vt0, t0;
SELECT ALL t0.c0, t2.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN t2 ON (((- (t0.c0)))IS NOT(((vt0.c0)/(t0.c0)))) CROSS JOIN t0 ON ((((vt0.c1)AND(t0.c0)))OR(t2.c0)) COLLATE BINARY RIGHT OUTER JOIN vt0 ON ((CASE vt0.c1  WHEN t0.c0 THEN vt0.c0 END) IS TRUE) GROUP BY t0.c0, t2.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1, t2, vt0, t0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t2, vt0, t0 GROUP BY vt1.c0 HAVING AVG((((SUM(COUNT(*))))==((vt0.c0)))) UNION ALL SELECT vt1.c0 FROM vt1, t2, vt0, t0 GROUP BY vt1.c0 HAVING (NOT (AVG((((SUM(COUNT(*))))==((vt0.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1, t2, vt0, t0 GROUP BY vt1.c0 HAVING ((AVG((((SUM(COUNT(*))))==((vt0.c0))))) ISNULL);
SELECT ALL * FROM t2, vt1, t0, vt0;
SELECT ALL * FROM t2, vt1, t0, vt0 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM t2, vt1, t0, vt0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM t2, vt1, t0, vt0 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM t2, vt1, t0, vt0;
SELECT DISTINCT * FROM t0, vt0, vt1, t2;
SELECT DISTINCT * FROM t0, vt0, vt1, t2 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM t0, vt0, vt1, t2 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM t0, vt0, vt1, t2 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM t0, vt0, vt1, t2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CASE WHEN LIKELY(DISTINCT t0.c0) THEN ((-9223372036854775808)<(t0.c0)) ELSE t0.c0 COLLATE NOCASE END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CASE WHEN LIKELY(DISTINCT t0.c0) THEN ((-9223372036854775808)<(t0.c0)) ELSE t0.c0 COLLATE NOCASE END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CASE WHEN LIKELY(DISTINCT t0.c0) THEN ((-9223372036854775808)<(t0.c0)) ELSE t0.c0 COLLATE NOCASE END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST(COUNT(vt1.c0) AS INTEGER) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(COUNT(vt1.c0) AS INTEGER))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST(COUNT(vt1.c0) AS INTEGER)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST(COUNT(vt1.c0) AS INTEGER) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(COUNT(vt1.c0) AS INTEGER))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST(COUNT(vt1.c0) AS INTEGER)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM t2, t0, vt0;
SELECT * FROM t2, t0, vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)) IN ())) UNION ALL SELECT ALL * FROM t2, t0, vt0 WHERE ((NOT ((((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)) IN ())))) UNION ALL SELECT * FROM t2, t0, vt0 WHERE ((((((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)) IN ())) ISNULL));
SELECT * FROM t2, t0, vt0;
SELECT DISTINCT t0.c0, t2.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, t2, t0, vt1;
SELECT DISTINCT t0.c0, t2.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, t2, t0, vt1 WHERE (0.8265865071129505) UNION SELECT DISTINCT t0.c0, t2.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, t2, t0, vt1 WHERE ((NOT (0.8265865071129505))) UNION SELECT DISTINCT t0.c0, t2.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, t2, t0, vt1 WHERE (((0.8265865071129505) ISNULL));
SELECT DISTINCT t0.c0, t2.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, t2, t0, vt1;
SELECT t2.c0 FROM vt0 FULL OUTER JOIN vt1 ON (((CAST(t2.c0 AS INTEGER)))<=((TRIM(vt0.c0)))) CROSS JOIN t2 ON 0.5654288371402233 COLLATE RTRIM GROUP BY t2.c0;
SELECT ALL t2.c0 FROM vt0, t0, t2 GROUP BY t2.c0;
SELECT t2.c0 FROM vt0, t0, t2 GROUP BY t2.c0 HAVING GROUP_CONCAT(((COUNT(*)) NOT NULL)) UNION ALL SELECT t2.c0 FROM vt0, t0, t2 GROUP BY t2.c0 HAVING (NOT (GROUP_CONCAT(((COUNT(*)) NOT NULL)))) UNION ALL SELECT t2.c0 FROM vt0, t0, t2 GROUP BY t2.c0 HAVING ((GROUP_CONCAT(((COUNT(*)) NOT NULL))) ISNULL);
SELECT ALL t2.c0 FROM t2;
SELECT t2.c0 FROM t2 WHERE (COALESCE(t2.c0, ((((t2.c0)OR(t2.c0)))OR(t2.c0)))) UNION ALL SELECT t2.c0 FROM t2 WHERE ((NOT (COALESCE(t2.c0, ((((t2.c0)OR(t2.c0)))OR(t2.c0)))))) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE (((COALESCE(t2.c0, ((((t2.c0)OR(t2.c0)))OR(t2.c0)))) ISNULL));
SELECT ALL t2.c0 FROM t2;
SELECT DISTINCT vt0.c1 FROM vt0, t2, vt1, t0;
SELECT DISTINCT vt0.c1 FROM vt0, t2, vt1, t0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c1 FROM vt0, t2, vt1 NOT INDEXED, t0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c1 FROM vt0, t2, vt1, t0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0, t2, vt1, t0;
SELECT ALL vt0.c1, t0.c0, t2.c0, vt1.c0, vt0.c0 FROM vt0 CROSS JOIN t0 ON (((t2.c0 IN ())) ISNULL) INNER JOIN vt1 ON NULLIF(DISTINCT NULL, (- (t0.c0))) RIGHT OUTER JOIN t2 ON ((((t2.c0)IS NOT(t2.c0)))>>((vt1.c0 IN ()))) GROUP BY vt0.c1, t0.c0, t2.c0, vt1.c0, vt0.c0;
SELECT vt0.c1, t0.c0, t2.c0, vt1.c0, vt0.c0 FROM vt0 CROSS JOIN t0 ON (((t2.c0 IN ())) ISNULL) INNER JOIN vt1 ON NULLIF(DISTINCT NULL, (- (t0.c0))) RIGHT OUTER JOIN t2 ON ((((t2.c0)IS NOT(t2.c0)))>>((vt1.c0 IN ()))) WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ())) GROUP BY vt0.c1, t0.c0, t2.c0, vt1.c0, vt0.c0 UNION SELECT vt0.c1, t0.c0, t2.c0, vt1.c0, vt0.c0 FROM vt0 CROSS JOIN t0 ON (((t2.c0 IN ())) ISNULL) INNER JOIN vt1 ON NULLIF(DISTINCT NULL, (- (t0.c0))) RIGHT OUTER JOIN t2 ON ((((t2.c0)IS NOT(t2.c0)))>>((vt1.c0 IN ()))) WHERE ((NOT ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ())))) GROUP BY vt0.c1, t0.c0, t2.c0, vt1.c0, vt0.c0 UNION SELECT ALL vt0.c1, t0.c0, t2.c0, vt1.c0, vt0.c0 FROM vt0 CROSS JOIN t0 ON (((t2.c0 IN ())) ISNULL) INNER JOIN vt1 ON NULLIF(DISTINCT NULL, (- (t0.c0))) RIGHT OUTER JOIN t2 ON ((((t2.c0)IS NOT(t2.c0)))>>((vt1.c0 IN ()))) WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c1, t0.c0, t2.c0, vt1.c0, vt0.c0;
SELECT ALL vt0.c1, t0.c0, t2.c0, vt1.c0, vt0.c0 FROM vt0 CROSS JOIN t0 ON (((t2.c0 IN ())) ISNULL) INNER JOIN vt1 ON NULLIF(DISTINCT NULL, (- (t0.c0))) RIGHT OUTER JOIN t2 ON ((((t2.c0)IS NOT(t2.c0)))>>((vt1.c0 IN ()))) GROUP BY vt0.c1, t0.c0, t2.c0, vt1.c0, vt0.c0;
SELECT ALL vt1.c0, t2.c0, vt0.c1 FROM vt1, t2, vt0 GROUP BY vt1.c0, t2.c0, vt0.c1;
SELECT vt1.c0, t2.c0, vt0.c1 FROM vt1, t2, vt0 GROUP BY vt1.c0, t2.c0, vt0.c1 HAVING CASE WHEN COUNT(*) COLLATE NOCASE THEN (- (MIN(vt0.c1))) ELSE TOTAL(vt1.c0) END UNION ALL SELECT vt1.c0, t2.c0, vt0.c1 FROM vt1, t2, vt0 GROUP BY vt1.c0, t2.c0, vt0.c1 HAVING (NOT (CASE WHEN COUNT(*) COLLATE NOCASE THEN (- (MIN(vt0.c1))) ELSE TOTAL(vt1.c0) END)) UNION ALL SELECT vt1.c0, t2.c0, vt0.c1 FROM vt1, t2, vt0 GROUP BY vt1.c0, t2.c0, vt0.c1 HAVING ((CASE WHEN COUNT(*) COLLATE NOCASE THEN (- (MIN(vt0.c1))) ELSE TOTAL(vt1.c0) END) ISNULL);
SELECT ALL vt1.c0, t2.c0, vt0.c1 FROM vt1, t2, vt0 GROUP BY vt1.c0, t2.c0, vt0.c1;
SELECT vt1.c0, t2.c0, vt0.c1 FROM vt1, t2, vt0 GROUP BY vt1.c0, t2.c0, vt0.c1 HAVING CASE WHEN COUNT(*) COLLATE NOCASE THEN (- (MIN(vt0.c1))) ELSE TOTAL(vt1.c0) END UNION ALL SELECT vt1.c0, t2.c0, vt0.c1 FROM vt1, t2, vt0 GROUP BY vt1.c0, t2.c0, vt0.c1 HAVING (NOT (CASE WHEN COUNT(*) COLLATE NOCASE THEN (- (MIN(vt0.c1))) ELSE TOTAL(vt1.c0) END)) UNION ALL SELECT vt1.c0, t2.c0, vt0.c1 FROM vt1, t2, vt0 GROUP BY vt1.c0, t2.c0, vt0.c1 HAVING ((CASE WHEN COUNT(*) COLLATE NOCASE THEN (- (MIN(vt0.c1))) ELSE TOTAL(vt1.c0) END) ISNULL);
SELECT ALL vt1.c0, t2.c0, vt0.c1 FROM vt1, t2, vt0 GROUP BY vt1.c0, t2.c0, vt0.c1;
SELECT ALL vt0.c0, t2.c0 FROM vt0 LEFT OUTER JOIN t2 ON CASE WHEN ((vt0.c1)-(vt0.c1)) THEN vt0.c1 COLLATE BINARY WHEN ((t0.c0)<('')) THEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN CAST(t2.c0 AS BLOB) THEN t0.c0 END INNER JOIN t0 ON CAST(NULL AS REAL) FULL OUTER JOIN vt1 ON (((t2.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((((vt1.c0)|(vt0.c1)), LOWER(DISTINCT vt0.c0), CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN t0.c0 ELSE vt0.c1 END)) AND ((((t0.c0) BETWEEN (vt1.c0) AND (t2.c0)), CAST(t2.c0 AS BLOB), ((vt0.c0)>>(t2.c0)))));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (TRIM(((vt1.c0)/(vt1.c0)), LOWER(vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (TRIM(((vt1.c0)/(vt1.c0)), LOWER(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((TRIM(((vt1.c0)/(vt1.c0)), LOWER(vt1.c0))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c1, vt0.c0, t0.c0, vt1.c0 FROM vt0, t0, vt1 GROUP BY vt0.c1, vt0.c0, t0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, t0.c0, vt1.c0 FROM vt0, t0, vt1 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)))<(((t0.c0)LIKE(t0.c0))))) GROUP BY vt0.c1, vt0.c0, t0.c0, vt1.c0 UNION SELECT ALL vt0.c1, vt0.c0, t0.c0, vt1.c0 FROM vt0, t0, vt1 WHERE ((NOT (((((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)))<(((t0.c0)LIKE(t0.c0))))))) GROUP BY vt0.c1, vt0.c0, t0.c0, vt1.c0 UNION SELECT ALL vt0.c1, vt0.c0, t0.c0, vt1.c0 FROM vt0, t0, vt1 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)))<(((t0.c0)LIKE(t0.c0))))) ISNULL)) GROUP BY vt0.c1, vt0.c0, t0.c0, vt1.c0;
SELECT ALL vt0.c1, vt0.c0, t0.c0, vt1.c0 FROM vt0, t0, vt1 GROUP BY vt0.c1, vt0.c0, t0.c0, vt1.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING TOTAL(AVG(COUNT(t2.c0)) COLLATE RTRIM) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (TOTAL(AVG(COUNT(t2.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((TOTAL(AVG(COUNT(t2.c0)) COLLATE RTRIM)) ISNULL);
SELECT ALL vt1.c0 FROM t0, t2, vt0, vt1;
SELECT ALL vt1.c0 FROM t0, t2, vt0, vt1 WHERE (((x'')<>(((vt0.c0)%(vt0.c1))))) UNION ALL SELECT ALL vt1.c0 FROM t0, t2, vt0, vt1 WHERE ((NOT (((x'')<>(((vt0.c0)%(vt0.c1))))))) UNION ALL SELECT ALL vt1.c0 FROM t0, t2, vt0, vt1 WHERE (((((x'')<>(((vt0.c0)%(vt0.c1))))) ISNULL));
SELECT ALL vt1.c0 FROM t0, t2, vt0, vt1;
SELECT DISTINCT vt0.c1, vt0.c0, vt1.c0, t0.c0, t2.c0 FROM t0, vt1, t2, vt0;
SELECT DISTINCT vt0.c1, vt0.c0, vt1.c0, t0.c0, t2.c0 FROM t0, vt1, t2, vt0 WHERE ((((NOT (vt0.c0))) NOT NULL)) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt1.c0, t0.c0, t2.c0 FROM t0, vt1, t2, vt0 WHERE ((NOT ((((NOT (vt0.c0))) NOT NULL)))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt1.c0, t0.c0, t2.c0 FROM t0, vt1, t2, vt0 WHERE ((((((NOT (vt0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, vt1.c0, t0.c0, t2.c0 FROM t0, vt1, t2, vt0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 WHERE (((((((t2.c0)AND(t2.c0)))OR(t2.c0))) BETWEEN (t2.c0) AND (t2.c0))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT (((((((t2.c0)AND(t2.c0)))OR(t2.c0))) BETWEEN (t2.c0) AND (t2.c0))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE (((((((((t2.c0)AND(t2.c0)))OR(t2.c0))) BETWEEN (t2.c0) AND (t2.c0))) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING TOTAL(MAX(t2.c0)) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (TOTAL(MAX(t2.c0)))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((TOTAL(MAX(t2.c0))) ISNULL);
SELECT ALL * FROM vt0, t0, vt1;
SELECT * FROM vt0, t0, vt1 WHERE (highlight((vt0.c1 IN ()), ((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)), (NOT (vt0.c1)), ((vt0.c1) NOT NULL))) UNION ALL SELECT * FROM vt0, t0, vt1 WHERE ((NOT (highlight((vt0.c1 IN ()), ((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)), (NOT (vt0.c1)), ((vt0.c1) NOT NULL))))) UNION ALL SELECT ALL * FROM vt0, t0, vt1 WHERE (((highlight((vt0.c1 IN ()), ((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)), (NOT (vt0.c1)), ((vt0.c1) NOT NULL))) ISNULL));
SELECT ALL * FROM vt0, t0, vt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((CASE WHEN '嵵iF&,' THEN t0.c0 ELSE NULL END IN (CAST(t0.c0 AS TEXT)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((CASE WHEN '嵵iF&,' THEN t0.c0 ELSE NULL END IN (CAST(t0.c0 AS TEXT)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((CASE WHEN '嵵iF&,' THEN t0.c0 ELSE NULL END IN (CAST(t0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ('J麥m3t넍k') GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ('J麥m3t넍k'))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((('J麥m3t넍k') ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c1 FROM t2, t0, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM t2, t0, vt0 GROUP BY vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c1 FROM t2, t0, vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1 FROM t2, t0, vt0 GROUP BY vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1 FROM t2, t0, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM t2, t0, vt0 GROUP BY vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c1 FROM t2, t0, vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1 FROM t2, t0, vt0 GROUP BY vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1 FROM t2, t0, vt0 GROUP BY vt0.c1;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((- (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((- (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION ALL SELECT * FROM vt1 WHERE ((((- (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM t2, vt0, t0, vt1;
SELECT DISTINCT * FROM t2, vt0, t0, vt1 WHERE ((((t0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((0.39947285875265526, t2.c0, ((t2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt1.c0) IS FALSE), CAST(vt0.c0 AS BLOB), ((t2.c0) NOT BETWEEN (0.09821168859383278) AND (vt0.c1)))))) UNION SELECT DISTINCT * FROM t2, vt0, t0, vt1 WHERE ((NOT ((((t0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((0.39947285875265526, t2.c0, ((t2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt1.c0) IS FALSE), CAST(vt0.c0 AS BLOB), ((t2.c0) NOT BETWEEN (0.09821168859383278) AND (vt0.c1)))))))) UNION SELECT DISTINCT * FROM t2, vt0, t0, vt1 WHERE ((((((t0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((0.39947285875265526, t2.c0, ((t2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt1.c0) IS FALSE), CAST(vt0.c0 AS BLOB), ((t2.c0) NOT BETWEEN (0.09821168859383278) AND (vt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM t2, vt0, t0, vt1;
SELECT ALL vt0.c0, t0.c0 FROM t2 INNER JOIN vt0 ON ((CASE t0.c0  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t2.c0 WHEN vt0.c0 THEN 0.42487138716761186 END)<>((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) RIGHT OUTER JOIN t0 ON ((CASE WHEN t2.c0 THEN '-2123266688' WHEN NULL THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 END) NOTNULL) INNER JOIN vt1 ON LOWER(DISTINCT ((t2.c0)<=(t0.c0))) GROUP BY vt0.c0, t0.c0;
SELECT ALL t2.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, t2, vt1 GROUP BY t2.c0, vt0.c0, vt1.c0, vt0.c1;
SELECT ALL t2.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, t2, vt1 GROUP BY t2.c0, vt0.c0, vt1.c0, vt0.c1 HAVING x'' UNION ALL SELECT t2.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, t2, vt1 GROUP BY t2.c0, vt0.c0, vt1.c0, vt0.c1 HAVING (NOT (x'')) UNION ALL SELECT t2.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, t2, vt1 GROUP BY t2.c0, vt0.c0, vt1.c0, vt0.c1 HAVING ((x'') ISNULL);
SELECT ALL t2.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, t2, vt1 GROUP BY t2.c0, vt0.c0, vt1.c0, vt0.c1;
SELECT ALL t2.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, t2, vt1 GROUP BY t2.c0, vt0.c0, vt1.c0, vt0.c1 HAVING x'' UNION ALL SELECT t2.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, t2, vt1 GROUP BY t2.c0, vt0.c0, vt1.c0, vt0.c1 HAVING (NOT (x'')) UNION ALL SELECT t2.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, t2, vt1 GROUP BY t2.c0, vt0.c0, vt1.c0, vt0.c1 HAVING ((x'') ISNULL);
SELECT ALL t2.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, t2, vt1 GROUP BY t2.c0, vt0.c0, vt1.c0, vt0.c1;
SELECT ALL * FROM t2;
SELECT * FROM t2 WHERE (CAST(((t2.c0) IS TRUE) AS NUMERIC)) UNION ALL SELECT ALL * FROM t2 WHERE ((NOT (CAST(((t2.c0) IS TRUE) AS NUMERIC)))) UNION ALL SELECT ALL * FROM t2 WHERE (((CAST(((t2.c0) IS TRUE) AS NUMERIC)) ISNULL));
SELECT ALL * FROM t2;
SELECT DISTINCT t2.c0, vt0.c1, t0.c0, vt1.c0, vt0.c0 FROM vt1, vt0, t0, t2;
SELECT DISTINCT t2.c0, vt0.c1, t0.c0, vt1.c0, vt0.c0 FROM vt1 NOT INDEXED, vt0, t0, t2 WHERE ((((t2.c0 IN ()))>=((((t0.c0, vt1.c0, vt0.c0, vt0.c1, vt0.c1))==((t2.c0, t2.c0, vt0.c1, vt1.c0, t0.c0)))))) UNION SELECT DISTINCT t2.c0, vt0.c1, t0.c0, vt1.c0, vt0.c0 FROM vt1, vt0, t0, t2 WHERE ((NOT ((((t2.c0 IN ()))>=((((t0.c0, vt1.c0, vt0.c0, vt0.c1, vt0.c1))=((t2.c0, t2.c0, vt0.c1, vt1.c0, t0.c0)))))))) UNION SELECT DISTINCT t2.c0, vt0.c1, t0.c0, vt1.c0, vt0.c0 FROM vt1, vt0, t0, t2 WHERE ((((((t2.c0 IN ()))>=((((t0.c0, vt1.c0, vt0.c0, vt0.c1, vt0.c1))==((t2.c0, t2.c0, vt0.c1, vt1.c0, t0.c0)))))) ISNULL));
SELECT DISTINCT t2.c0, vt0.c1, t0.c0, vt1.c0, vt0.c0 FROM vt1, vt0, t0, t2;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE (((t2.c0)||(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT (((t2.c0)||(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE (((((t2.c0)||(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))))) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN t2 ON 0.5292878209537899 RIGHT OUTER JOIN vt0 ON '' GROUP BY t2.c0, vt0.c1;
SELECT ALL t2.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN t2 ON 0.5292878209537899 RIGHT OUTER JOIN vt0 ON '' GROUP BY t2.c0, vt0.c1 HAVING CASE SUM(t2.c0)  WHEN COUNT(vt0.c1) THEN x'' END UNION ALL SELECT ALL t2.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN t2 ON 0.5292878209537899 RIGHT OUTER JOIN vt0 ON '' GROUP BY t2.c0, vt0.c1 HAVING (NOT (CASE SUM(t2.c0)  WHEN COUNT(vt0.c1) THEN x'' END)) UNION ALL SELECT ALL t2.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN t2 ON 0.5292878209537899 RIGHT OUTER JOIN vt0 ON '' GROUP BY t2.c0, vt0.c1 HAVING ((CASE SUM(t2.c0)  WHEN COUNT(vt0.c1) THEN x'' END) ISNULL);
SELECT t2.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN t2 ON 0.5292878209537899 RIGHT OUTER JOIN vt0 ON '' GROUP BY t2.c0, vt0.c1;
SELECT ALL t2.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN t2 ON 0.5292878209537899 RIGHT OUTER JOIN vt0 ON '' GROUP BY t2.c0, vt0.c1 HAVING CASE SUM(t2.c0)  WHEN COUNT(vt0.c1) THEN x'' END UNION ALL SELECT ALL t2.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN t2 ON 0.5292878209537899 RIGHT OUTER JOIN vt0 ON '' GROUP BY t2.c0, vt0.c1 HAVING (NOT (CASE SUM(t2.c0)  WHEN COUNT(vt0.c1) THEN x'' END)) UNION ALL SELECT ALL t2.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN t2 ON 0.5292878209537899 RIGHT OUTER JOIN vt0 ON '' GROUP BY t2.c0, vt0.c1 HAVING ((CASE SUM(t2.c0)  WHEN COUNT(vt0.c1) THEN x'' END) ISNULL);
SELECT t2.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN t2 ON 0.5292878209537899 RIGHT OUTER JOIN vt0 ON '' GROUP BY t2.c0, vt0.c1;
SELECT * FROM vt0 RIGHT OUTER JOIN t2 ON vt0.c1;
SELECT * FROM vt0 RIGHT OUTER JOIN t2 ON vt0.c1 WHERE (((((((vt0.c0)AND(t2.c0)))AND(x'')))IS NOT(((vt0.c1) IS FALSE)))) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN t2 ON vt0.c1 WHERE ((NOT (((((((vt0.c0)AND(t2.c0)))AND(x'')))IS NOT(((vt0.c1) IS FALSE)))))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN t2 ON vt0.c1 WHERE (((((((((vt0.c0)AND(t2.c0)))AND(x'')))IS NOT(((vt0.c1) IS FALSE)))) ISNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN t2 ON vt0.c1;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((+ (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT ((+ (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((+ (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT t0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, t0, vt0 GROUP BY t0.c0, vt1.c0, vt0.c0, vt0.c1;
SELECT t0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, t0, vt0 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1)IS(0Xffffffff974cc7a2)))) AND ((vt0.c1 COLLATE NOCASE)))) GROUP BY t0.c0, vt1.c0, vt0.c0, vt0.c1 UNION SELECT ALL t0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, t0, vt0 WHERE ((NOT ((((vt0.c1)) BETWEEN ((((vt0.c1)IS(0Xffffffff974cc7a2)))) AND ((vt0.c1 COLLATE NOCASE)))))) GROUP BY t0.c0, vt1.c0, vt0.c0, vt0.c1 UNION SELECT ALL t0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, t0, vt0 WHERE ((((((vt0.c1)) BETWEEN ((((vt0.c1)IS(0Xffffffff974cc7a2)))) AND ((vt0.c1 COLLATE NOCASE)))) ISNULL)) GROUP BY t0.c0, vt1.c0, vt0.c0, vt0.c1;
SELECT t0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, t0, vt0 GROUP BY t0.c0, vt1.c0, vt0.c0, vt0.c1;
SELECT vt0.c1 FROM vt1, t2, vt0, t0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1 NOT INDEXED, t2, vt0, t0 GROUP BY vt0.c1 HAVING CASE WHEN TOTAL(MIN(vt0.c0)) THEN TOTAL(t0.c0) END UNION ALL SELECT ALL vt0.c1 FROM vt1, t2, vt0, t0 GROUP BY vt0.c1 HAVING (NOT (CASE WHEN TOTAL(MIN(vt0.c0)) THEN TOTAL(t0.c0) END)) UNION ALL SELECT ALL vt0.c1 FROM vt1, t2, vt0, t0 GROUP BY vt0.c1 HAVING ((CASE WHEN TOTAL(MIN(vt0.c0)) THEN TOTAL(t0.c0) END) ISNULL);
SELECT ALL MAX((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END IN (NULLIF(vt0.c1, 'Z*')))) FROM vt0, vt1 ORDER BY CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END THEN CASE 'fw4W铜]'  WHEN vt0.c0 THEN vt0.c1 ELSE '612048107' END END DESC;
SELECT ALL t0.c0 FROM t0, t2;
SELECT ALL t0.c0 FROM t0, t2 WHERE ((~ ((('')<(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0, t2 WHERE ((NOT ((~ ((('')<(t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 NOT INDEXED, t2 WHERE ((((~ ((('')<(t0.c0))))) ISNULL));
SELECT ALL t0.c0 FROM t0, t2;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((- ((('500769520') BETWEEN (t0.c0) AND (t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((- ((('500769520') BETWEEN (t0.c0) AND (t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((- ((('500769520') BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt1.c0, vt0.c0 FROM t0, vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM t0, vt1 NATURAL JOIN vt0 WHERE (NULL) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM t0, vt1 NATURAL JOIN vt0 WHERE ((NOT (NULL))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM t0, vt1 NATURAL JOIN vt0 WHERE (((NULL) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM t0, vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt0.c1, t2.c0, vt0.c0 FROM t0, t2, vt1, vt0 GROUP BY vt0.c1, t2.c0, vt0.c0;
SELECT ALL vt0.c1, t2.c0, vt0.c0 FROM t0, t2, vt1 NOT INDEXED, vt0 GROUP BY vt0.c1, t2.c0, vt0.c0 HAVING AVG(COUNT(AVG(vt0.c0))) UNION ALL SELECT vt0.c1, t2.c0, vt0.c0 FROM t0, t2, vt1, vt0 GROUP BY vt0.c1, t2.c0, vt0.c0 HAVING (NOT (AVG(COUNT(AVG(vt0.c0))))) UNION ALL SELECT ALL vt0.c1, t2.c0, vt0.c0 FROM t0, t2, vt1, vt0 GROUP BY vt0.c1, t2.c0, vt0.c0 HAVING ((AVG(COUNT(AVG(vt0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0, t2, vt1;
SELECT t0.c0 FROM t0, t2, vt1 WHERE (CASE ((((t0.c0)AND(t2.c0)))OR(t2.c0))  WHEN (NOT (vt1.c0)) THEN (NOT (t2.c0)) END) UNION ALL SELECT t0.c0 FROM t0, t2, vt1 WHERE ((NOT (CASE ((((t0.c0)AND(t2.c0)))OR(t2.c0))  WHEN (NOT (vt1.c0)) THEN (NOT (t2.c0)) END))) UNION ALL SELECT ALL t0.c0 FROM t0, t2, vt1 WHERE (((CASE ((((t0.c0)AND(t2.c0)))OR(t2.c0))  WHEN (NOT (vt1.c0)) THEN (NOT (t2.c0)) END) ISNULL));
SELECT ALL t0.c0 FROM t0, t2, vt1;
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE (((CAST(t2.c0 AS TEXT)) NOT NULL)) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT (((CAST(t2.c0 AS TEXT)) NOT NULL)))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE (((((CAST(t2.c0 AS TEXT)) NOT NULL)) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT ALL vt0.c0 FROM t2, vt0 NATURAL JOIN vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t2, vt0 NATURAL JOIN vt1 WHERE ((((~ (t2.c0))) NOT BETWEEN (((((vt1.c0)AND(vt0.c1)))AND(vt0.c0))) AND (((((vt1.c0)AND(t2.c0)))OR(vt0.c1))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t2, vt0 NATURAL JOIN vt1 WHERE ((NOT ((((~ (t2.c0))) NOT BETWEEN (((((vt1.c0)AND(vt0.c1)))AND(vt0.c0))) AND (((((vt1.c0)AND(t2.c0)))OR(vt0.c1))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t2, vt0 NATURAL JOIN vt1 WHERE ((((((~ (t2.c0))) NOT BETWEEN (((((vt1.c0)AND(vt0.c1)))AND(vt0.c0))) AND (((((vt1.c0)AND(t2.c0)))OR(vt0.c1))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t2, vt0 NATURAL JOIN vt1 GROUP BY vt0.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN t0 ON ((NULL)>=(vt1.c0)) COLLATE NOCASE GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN t0 ON ((NULL)>=(vt1.c0)) COLLATE NOCASE GROUP BY t0.c0, vt1.c0 HAVING CASE CAST(SUM(SUM(x'')) AS NUMERIC)  WHEN CASE WHEN vt1.c0 THEN t0.c0 END THEN TOTAL(COUNT(vt1.c0)) WHEN MIN(MIN(AVG(GROUP_CONCAT(vt1.c0)))) THEN AVG(MAX(vt1.c0)) WHEN SUM(AVG(MIN(COUNT(COUNT(TOTAL(t0.c0)))))) THEN SUM(COUNT(vt1.c0)) ELSE MIN(AVG(COUNT(COUNT(*)))) END UNION ALL SELECT t0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN t0 ON ((NULL)>=(vt1.c0)) COLLATE NOCASE GROUP BY t0.c0, vt1.c0 HAVING (NOT (CASE CAST(SUM(SUM(x'')) AS NUMERIC)  WHEN CASE WHEN vt1.c0 THEN t0.c0 END THEN TOTAL(COUNT(vt1.c0)) WHEN MIN(MIN(AVG(GROUP_CONCAT(vt1.c0)))) THEN AVG(MAX(vt1.c0)) WHEN SUM(AVG(MIN(COUNT(COUNT(TOTAL(t0.c0)))))) THEN SUM(COUNT(vt1.c0)) ELSE MIN(AVG(COUNT(COUNT(*)))) END)) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN t0 ON ((NULL)>=(vt1.c0)) COLLATE NOCASE GROUP BY t0.c0, vt1.c0 HAVING ((CASE CAST(SUM(SUM(x'')) AS NUMERIC)  WHEN CASE WHEN vt1.c0 THEN t0.c0 END THEN TOTAL(COUNT(vt1.c0)) WHEN MIN(MIN(AVG(GROUP_CONCAT(vt1.c0)))) THEN AVG(MAX(vt1.c0)) WHEN SUM(AVG(MIN(COUNT(COUNT(TOTAL(t0.c0)))))) THEN SUM(COUNT(vt1.c0)) ELSE MIN(AVG(COUNT(COUNT(*)))) END) ISNULL);
SELECT t2.c0 FROM t2;
SELECT ALL t2.c0 FROM t2 WHERE (NULL) UNION ALL SELECT t2.c0 FROM t2 WHERE ((NOT (NULL))) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE (((NULL) ISNULL));
SELECT t2.c0 FROM t2;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, t0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, t0 WHERE (x'') UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, t0 WHERE ((NOT (x''))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, t0 WHERE (((x'') ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, t0;
SELECT vt1.c0 FROM vt0, vt1, t2, t0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1, t2, t0 WHERE (vt0.c1) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1, t2, t0 WHERE ((NOT (vt0.c1))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1, t2, t0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1, t2, t0 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT vt0.c0, vt0.c1, vt1.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING (+ (COUNT(*))) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT vt0.c0, vt0.c1, vt1.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING (+ (COUNT(*))) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT MAX(((((t0.c0)&(NULL)))IS NOT(t2.c0))) FROM t0, t2 ORDER BY '<[똤M!V\'  NULLS FIRST, ((0.7270483071255027) BETWEEN (CAST(t0.c0 AS BLOB)) AND (LIKELIHOOD(DISTINCT t2.c0, 0.2565361021187911))) ASC;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE (CAST(((t0.c0)LIKE(t0.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT (CAST(((t0.c0)LIKE(t0.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE (((CAST(((t0.c0)LIKE(t0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, t0 NOT INDEXED, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt1, t0, vt0 WHERE (((((vt0.c1)=(vt0.c1))) IS FALSE)) GROUP BY vt1.c0, vt0.c0, vt0.c1 UNION SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, t0, vt0 WHERE ((NOT (((((vt0.c1)==(vt0.c1))) IS FALSE)))) GROUP BY vt1.c0, vt0.c0, vt0.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt1, t0, vt0 WHERE (((((((vt0.c1)=(vt0.c1))) IS FALSE)) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, t0 NOT INDEXED, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT t0.c0 FROM t2, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t2, t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t2, t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t2, t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t2, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t2, t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t2, t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t2, t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t2, t0 GROUP BY t0.c0;
SELECT ALL vt1.c0, vt0.c1, t2.c0, vt0.c0 FROM t2, vt1, vt0;
SELECT vt1.c0, vt0.c1, t2.c0, vt0.c0 FROM t2 NOT INDEXED, vt1, vt0 WHERE ('1772833787') UNION ALL SELECT ALL vt1.c0, vt0.c1, t2.c0, vt0.c0 FROM t2, vt1, vt0 WHERE ((NOT ('1772833787'))) UNION ALL SELECT ALL vt1.c0, vt0.c1, t2.c0, vt0.c0 FROM t2, vt1, vt0 WHERE ((('1772833787') ISNULL));
SELECT ALL vt1.c0, vt0.c1, t2.c0, vt0.c0 FROM t2, vt1, vt0;
SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON NULL RIGHT OUTER JOIN t2 ON CASE ((vt0.c1)IS NOT(t2.c0))  WHEN t0.c0 COLLATE BINARY THEN (((vt0.c0))==((vt0.c1))) END;
SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON NULL RIGHT OUTER JOIN t2 ON CASE ((vt0.c1)IS NOT(t2.c0))  WHEN t0.c0 COLLATE BINARY THEN (((vt0.c0))==((vt0.c1))) END WHERE ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))<((vt0.c1 COLLATE BINARY)))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON NULL RIGHT OUTER JOIN t2 ON CASE ((vt0.c1)IS NOT(t2.c0))  WHEN t0.c0 COLLATE BINARY THEN (((vt0.c0))==((vt0.c1))) END WHERE ((NOT ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))<((vt0.c1 COLLATE BINARY)))))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON NULL RIGHT OUTER JOIN t2 ON CASE ((vt0.c1)IS NOT(t2.c0))  WHEN t0.c0 COLLATE BINARY THEN (((vt0.c0))==((vt0.c1))) END WHERE ((((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))<((vt0.c1 COLLATE BINARY)))) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON NULL RIGHT OUTER JOIN t2 ON CASE ((vt0.c1)IS NOT(t2.c0))  WHEN t0.c0 COLLATE BINARY THEN (((vt0.c0))==((vt0.c1))) END;
SELECT vt0.c1, vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c1, vt0.c0, t2.c0;
SELECT vt0.c1, vt0.c0, t2.c0 FROM t2, vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE NULL END IN ())) GROUP BY vt0.c1, vt0.c0, t2.c0 UNION SELECT vt0.c1, vt0.c0, t2.c0 FROM t2, vt0 WHERE ((NOT ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE NULL END IN ())))) GROUP BY vt0.c1, vt0.c0, t2.c0 UNION SELECT ALL vt0.c1, vt0.c0, t2.c0 FROM t2, vt0 WHERE ((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE NULL END IN ())) ISNULL)) GROUP BY vt0.c1, vt0.c0, t2.c0;
SELECT vt0.c1, vt0.c0, t2.c0 FROM t2, vt0 GROUP BY vt0.c1, vt0.c0, t2.c0;
SELECT ALL vt0.c1, t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (((((- (vt0.c0)))AND(((vt1.c0)>=(vt0.c1)))))AND(vt1.c0)) CROSS JOIN vt1 ON ABS(DISTINCT ((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) GROUP BY vt0.c1, t0.c0;
SELECT ALL vt0.c1, t2.c0, vt0.c0 FROM t2, vt0;
SELECT ALL vt0.c1, t2.c0, vt0.c0 FROM t2, vt0 WHERE (((((vt0.c0) IS FALSE))|(json_extract(vt0.c1, vt0.c0)))) UNION ALL SELECT ALL vt0.c1, t2.c0, vt0.c0 FROM t2, vt0 WHERE ((NOT (((((vt0.c0) IS FALSE))|(json_extract(vt0.c1, vt0.c0)))))) UNION ALL SELECT ALL vt0.c1, t2.c0, vt0.c0 FROM t2, vt0 WHERE (((((((vt0.c0) IS FALSE))|(json_extract(vt0.c1, vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, t2, vt1, t0;
SELECT DISTINCT vt0.c0 FROM vt0, t2, vt1, t0 WHERE (HEX(((t2.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t2, vt1, t0 WHERE ((NOT (HEX(((t2.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t2, vt1, t0 WHERE (((HEX(((t2.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, t2, vt1, t0;
SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0, vt1 WHERE (((((vt1.c0)AND(vt1.c0)))GLOB(((t0.c0)AND(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM t0, vt1 WHERE ((NOT (((((vt1.c0)AND(vt1.c0)))GLOB(((t0.c0)AND(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM t0, vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))GLOB(((t0.c0)AND(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING MIN(((MAX(t2.c0))*(SUM(AVG(t2.c0))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (MIN(((MAX(t2.c0))*(SUM(AVG(t2.c0))))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((MIN(((MAX(t2.c0))*(SUM(AVG(t2.c0)))))) ISNULL);
SELECT ALL * FROM vt1, t2, vt0;
SELECT ALL * FROM vt1, t2, vt0 WHERE (vt0.c1) UNION ALL SELECT * FROM vt1, t2, vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT * FROM vt1, t2, vt0 WHERE (((vt0.c1) ISNULL));
SELECT ALL * FROM vt1, t2, vt0;
SELECT DISTINCT * FROM t2, vt1, t0, vt0;
SELECT DISTINCT * FROM t2, vt1, t0, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM t2, vt1, t0, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM t2, vt1, t0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM t2, vt1, t0, vt0;
SELECT t0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE ((+ (CAST(vt0.c0 AS INTEGER)))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE ((NOT ((+ (CAST(vt0.c0 AS INTEGER)))))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE ((((+ (CAST(vt0.c0 AS INTEGER)))) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt1.c0;
SELECT ALL t2.c0 FROM vt0 NATURAL JOIN t2 GROUP BY t2.c0;
SELECT t2.c0 FROM vt0 NATURAL JOIN t2 GROUP BY t2.c0 HAVING COUNT(SUM(vt0.c0)) UNION ALL SELECT ALL t2.c0 FROM vt0 NATURAL JOIN t2 GROUP BY t2.c0 HAVING (NOT (COUNT(SUM(vt0.c0)))) UNION ALL SELECT t2.c0 FROM vt0 NATURAL JOIN t2 GROUP BY t2.c0 HAVING ((COUNT(SUM(vt0.c0))) ISNULL);
SELECT ALL * FROM vt0 CROSS JOIN t0 ON CAST(((t2.c0)-(t0.c0)) AS BLOB) RIGHT OUTER JOIN t2 ON t2.c0;
SELECT DISTINCT * FROM vt0, t2, vt1;
SELECT DISTINCT * FROM vt0, t2, vt1 WHERE ((('1276842820')-(((vt0.c1)AND(vt1.c0))))) UNION SELECT DISTINCT * FROM vt0, t2, vt1 WHERE ((NOT ((('1276842820')-(((vt0.c1)AND(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt0, t2, vt1 WHERE ((((('1276842820')-(((vt0.c1)AND(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, t2, vt1;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt0 INNER JOIN vt1 ON (((vt0.c1)OR(vt0.c0)) IN ()) LEFT OUTER JOIN t2 ON ((((((vt0.c1) NOT BETWEEN (-1548694838) AND (vt0.c1)))AND('147861368')))AND(SQLITE_SOURCE_ID())) GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt0 INNER JOIN vt1 ON (((vt0.c1)OR(vt0.c0)) IN ()) LEFT OUTER JOIN t2 ON ((((((vt0.c1) NOT BETWEEN (-1548694838) AND (vt0.c1)))AND('147861368')))AND(SQLITE_SOURCE_ID())) WHERE (vt1.c0) GROUP BY vt1.c0, vt0.c0, vt0.c1 UNION SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt0 INNER JOIN vt1 ON (((vt0.c1)OR(vt0.c0)) IN ()) LEFT OUTER JOIN t2 ON ((((((vt0.c1) NOT BETWEEN (-1548694838) AND (vt0.c1)))AND('147861368')))AND(SQLITE_SOURCE_ID())) WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0, vt0.c0, vt0.c1 UNION SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt0 INNER JOIN vt1 ON (((vt0.c1)OR(vt0.c0)) IN ()) LEFT OUTER JOIN t2 ON ((((((vt0.c1) NOT BETWEEN (-1548694838) AND (vt0.c1)))AND('147861368')))AND(SQLITE_SOURCE_ID())) WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt0 INNER JOIN vt1 ON (((vt0.c1)OR(vt0.c0)) IN ()) LEFT OUTER JOIN t2 ON ((((((vt0.c1) NOT BETWEEN (-1548694838) AND (vt0.c1)))AND('147861368')))AND(SQLITE_SOURCE_ID())) GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt0.c1, t2.c0, t0.c0, vt1.c0 FROM vt1, vt0, t2 CROSS JOIN t0 ON ((vt1.c0)LIKE(((vt0.c1) NOT BETWEEN ('-1895351507') AND (vt1.c0)))) GROUP BY vt0.c1, t2.c0, t0.c0, vt1.c0;
SELECT ALL vt0.c1, t2.c0, t0.c0, vt1.c0 FROM vt1, vt0, t2 CROSS JOIN t0 ON ((vt1.c0)LIKE(((vt0.c1) NOT BETWEEN ('-1895351507') AND (vt1.c0)))) GROUP BY vt0.c1, t2.c0, t0.c0, vt1.c0 HAVING ((NULLIF(DISTINCT COUNT(GROUP_CONCAT(GROUP_CONCAT(vt0.c1))), MIN(vt1.c0)))||(t0.c0 COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c1, t2.c0, t0.c0, vt1.c0 FROM vt1, vt0, t2 CROSS JOIN t0 ON ((vt1.c0)LIKE(((vt0.c1) NOT BETWEEN ('-1895351507') AND (vt1.c0)))) GROUP BY vt0.c1, t2.c0, t0.c0, vt1.c0 HAVING (NOT (((NULLIF(DISTINCT COUNT(GROUP_CONCAT(GROUP_CONCAT(vt0.c1))), MIN(vt1.c0)))||(t0.c0 COLLATE RTRIM)))) UNION ALL SELECT ALL vt0.c1, t2.c0, t0.c0, vt1.c0 FROM vt1, vt0, t2 CROSS JOIN t0 ON ((vt1.c0)LIKE(((vt0.c1) NOT BETWEEN ('-1895351507') AND (vt1.c0)))) GROUP BY vt0.c1, t2.c0, t0.c0, vt1.c0 HAVING ((((NULLIF(DISTINCT COUNT(GROUP_CONCAT(GROUP_CONCAT(vt0.c1))), MIN(vt1.c0)))||(t0.c0 COLLATE RTRIM))) ISNULL);
SELECT t0.c0 FROM vt1, t0, vt0, t2;
SELECT ALL t0.c0 FROM vt1, t0, vt0, t2 WHERE ((((CAST(vt0.c0 AS REAL)))>=((((vt0.c0) BETWEEN (t2.c0) AND (t2.c0)))))) UNION ALL SELECT ALL t0.c0 FROM vt1, t0, vt0, t2 WHERE ((NOT ((((CAST(vt0.c0 AS REAL)))>=((((vt0.c0) BETWEEN (t2.c0) AND (t2.c0)))))))) UNION ALL SELECT t0.c0 FROM vt1, t0, vt0, t2 WHERE ((((((CAST(vt0.c0 AS REAL)))>=((((vt0.c0) BETWEEN (t2.c0) AND (t2.c0)))))) ISNULL));
SELECT t0.c0 FROM vt1, t0, vt0, t2;
SELECT DISTINCT * FROM t0, vt1, t2;
SELECT DISTINCT * FROM t0, vt1, t2 WHERE (t2.c0) UNION SELECT DISTINCT * FROM t0, vt1, t2 WHERE ((NOT (t2.c0))) UNION SELECT DISTINCT * FROM t0, vt1, t2 WHERE (((t2.c0) ISNULL));
SELECT DISTINCT * FROM t0, vt1, t2;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((CAST(vt0.c1 AS NUMERIC) IN ())) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((CAST(vt0.c1 AS NUMERIC) IN ())))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((CAST(vt0.c1 AS NUMERIC) IN ())) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(vt0.c0) COLLATE RTRIM UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(vt0.c0) COLLATE RTRIM)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0) COLLATE RTRIM) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(vt0.c0) COLLATE RTRIM UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(vt0.c0) COLLATE RTRIM)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0) COLLATE RTRIM) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c1, vt0.c0 FROM t0, vt0;
SELECT ALL vt0.c1, vt0.c0 FROM t0, vt0 WHERE (((vt0.c0) BETWEEN ('-328026684') AND (''))) UNION ALL SELECT vt0.c1, vt0.c0 FROM t0, vt0 WHERE ((NOT (((vt0.c0) BETWEEN ('-328026684') AND (''))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM t0, vt0 WHERE (((((vt0.c0) BETWEEN ('-328026684') AND (''))) ISNULL));
SELECT vt0.c1, vt0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE (t2.c0) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT (t2.c0))) UNION SELECT DISTINCT * FROM t2 WHERE (((t2.c0) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((0.9724268177900417 IN ())) ISNULL)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((0.9724268177900417 IN ())) ISNULL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((0.9724268177900417 IN ())) ISNULL)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, vt0.c1, vt1.c0, t2.c0, vt0.c0 FROM vt1, t0 LEFT OUTER JOIN vt0 ON (~ ((((((((('')OR(t0.c0)))OR('-1428449400')))AND(vt0.c1)))OR(vt0.c0)))) INNER JOIN t2 ON ((CAST(vt0.c0 AS TEXT)) IS FALSE) GROUP BY t0.c0, vt0.c1, vt1.c0, t2.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c1, vt1.c0, t2.c0, vt0.c0 FROM vt1, t0 LEFT OUTER JOIN vt0 ON (~ ((((((((('')OR(t0.c0)))OR('-1428449400')))AND(vt0.c1)))OR(vt0.c0)))) INNER JOIN t2 ON ((CAST(vt0.c0 AS TEXT)) IS FALSE) GROUP BY t0.c0, vt0.c1, vt1.c0, t2.c0, vt0.c0 HAVING GROUP_CONCAT(AVG(670106915)) UNION ALL SELECT ALL t0.c0, vt0.c1, vt1.c0, t2.c0, vt0.c0 FROM vt1, t0 LEFT OUTER JOIN vt0 ON (~ ((((((((('')OR(t0.c0)))OR('-1428449400')))AND(vt0.c1)))OR(vt0.c0)))) INNER JOIN t2 ON ((CAST(vt0.c0 AS TEXT)) IS FALSE) GROUP BY t0.c0, vt0.c1, vt1.c0, t2.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(AVG(670106915)))) UNION ALL SELECT ALL t0.c0, vt0.c1, vt1.c0, t2.c0, vt0.c0 FROM vt1, t0 LEFT OUTER JOIN vt0 ON (~ ((((((((('')OR(t0.c0)))OR('-1428449400')))AND(vt0.c1)))OR(vt0.c0)))) INNER JOIN t2 ON ((CAST(vt0.c0 AS TEXT)) IS FALSE) GROUP BY t0.c0, vt0.c1, vt1.c0, t2.c0, vt0.c0 HAVING ((GROUP_CONCAT(AVG(670106915))) ISNULL);
SELECT ALL * FROM vt0 INDEXED BY i34, t0, t2, vt1;
SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM t2, t0, vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM t2, t0, vt1, vt0 WHERE ((((((((((NOT (vt0.c1)))AND(t2.c0)))OR(LOWER(DISTINCT vt0.c1))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN t2.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR(vt1.c0 COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM t2, t0, vt1, vt0 WHERE ((NOT ((((((((((NOT (vt0.c1)))AND(t2.c0)))OR(LOWER(DISTINCT vt0.c1))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN t2.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR(vt1.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM t2, t0, vt1, vt0 WHERE ((((((((((((NOT (vt0.c1)))AND(t2.c0)))OR(LOWER(DISTINCT vt0.c1))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN t2.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR(vt1.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM t2, t0, vt1, vt0;
SELECT t0.c0, vt0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, vt0.c1;
SELECT ALL t0.c0, vt0.c0, vt0.c1 FROM vt0, t0 WHERE ((+ (((x'932e')|(vt0.c1))))) GROUP BY t0.c0, vt0.c0, vt0.c1 UNION SELECT ALL t0.c0, vt0.c0, vt0.c1 FROM vt0, t0 WHERE ((NOT ((+ (((x'932e')|(vt0.c1))))))) GROUP BY t0.c0, vt0.c0, vt0.c1 UNION SELECT ALL t0.c0, vt0.c0, vt0.c1 FROM vt0, t0 WHERE ((((+ (((x'932e')|(vt0.c1))))) ISNULL)) GROUP BY t0.c0, vt0.c0, vt0.c1;
SELECT t0.c0, vt0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, vt0.c1;
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT * FROM vt1, t0, t2;
SELECT ALL * FROM vt1, t0, t2 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t2.c0)))<(SUBSTR(vt1.c0, vt1.c0)))) UNION ALL SELECT ALL * FROM vt1, t0, t2 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t0.c0) AND (t2.c0)))<(SUBSTR(vt1.c0, vt1.c0)))))) UNION ALL SELECT ALL * FROM vt1, t0, t2 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t2.c0)))<(SUBSTR(vt1.c0, vt1.c0)))) ISNULL));
SELECT * FROM vt1, t0, t2;
SELECT DISTINCT * FROM t2 NATURAL JOIN vt0;
SELECT DISTINCT * FROM t2 NATURAL JOIN vt0 WHERE (((((((((((((CAST(t2.c0 AS INTEGER))AND(t2.c0 COLLATE RTRIM)))AND(((vt0.c1)>(vt0.c0)))))AND(((('')) NOT BETWEEN ((vt0.c1)) AND ((1.245841253E9))))))OR((((vt0.c1))>=((t2.c0))))))OR(((vt0.c1)IS NOT('374860643')))))AND(HEX(vt0.c1)))) UNION SELECT DISTINCT * FROM t2 NATURAL JOIN vt0 WHERE ((NOT (((((((((((((CAST(t2.c0 AS INTEGER))AND(t2.c0 COLLATE RTRIM)))AND(((vt0.c1)>(vt0.c0)))))AND(((('')) NOT BETWEEN ((vt0.c1)) AND ((1.245841253E9))))))OR((((vt0.c1))>=((t2.c0))))))OR(((vt0.c1)IS NOT('374860643')))))AND(HEX(vt0.c1)))))) UNION SELECT DISTINCT * FROM t2 NATURAL JOIN vt0 WHERE (((((((((((((((CAST(t2.c0 AS INTEGER))AND(t2.c0 COLLATE RTRIM)))AND(((vt0.c1)>(vt0.c0)))))AND(((('')) NOT BETWEEN ((vt0.c1)) AND ((1.245841253E9))))))OR((((vt0.c1))>=((t2.c0))))))OR(((vt0.c1)IS NOT('374860643')))))AND(HEX(vt0.c1)))) ISNULL));
SELECT DISTINCT * FROM t2 NATURAL JOIN vt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (LOWER(DISTINCT t0.c0)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (LOWER(DISTINCT t0.c0)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((LOWER(DISTINCT t0.c0)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING COUNT(MIN(COUNT(*))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (COUNT(MIN(COUNT(*))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((COUNT(MIN(COUNT(*)))) ISNULL);
SELECT ALL t2.c0 FROM t2;
SELECT ALL t2.c0 FROM t2 WHERE ((~ (((t2.c0)AND(t2.c0))))) UNION ALL SELECT t2.c0 FROM t2 WHERE ((NOT ((~ (((t2.c0)AND(t2.c0))))))) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE ((((~ (((t2.c0)AND(t2.c0))))) ISNULL));
SELECT ALL t2.c0 FROM t2;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN t2 ON (- (CAST(t2.c0 AS BLOB)));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN t2 ON (- (CAST(t2.c0 AS BLOB))) WHERE (CAST(CASE t2.c0  WHEN vt1.c0 THEN vt1.c0 ELSE t2.c0 END AS NUMERIC)) UNION SELECT DISTINCT * FROM vt1 NOT INDEXED FULL OUTER JOIN t2 ON (- (CAST(t2.c0 AS BLOB))) WHERE ((NOT (CAST(CASE t2.c0  WHEN vt1.c0 THEN vt1.c0 ELSE t2.c0 END AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN t2 ON (- (CAST(t2.c0 AS BLOB))) WHERE (((CAST(CASE t2.c0  WHEN vt1.c0 THEN vt1.c0 ELSE t2.c0 END AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN t2 ON (- (CAST(t2.c0 AS BLOB)));
SELECT vt0.c1, t2.c0, vt0.c0 FROM t2, vt0, vt1 GROUP BY vt0.c1, t2.c0, vt0.c0;
SELECT ALL vt0.c1, t2.c0, vt0.c0 FROM t2, vt0, vt1 WHERE (((((vt0.c1) ISNULL)) ISNULL)) GROUP BY vt0.c1, t2.c0, vt0.c0 UNION SELECT ALL vt0.c1, t2.c0, vt0.c0 FROM t2, vt0, vt1 WHERE ((NOT (((((vt0.c1) ISNULL)) ISNULL)))) GROUP BY vt0.c1, t2.c0, vt0.c0 UNION SELECT vt0.c1, t2.c0, vt0.c0 FROM t2, vt0, vt1 WHERE (((((((vt0.c1) ISNULL)) ISNULL)) ISNULL)) GROUP BY vt0.c1, t2.c0, vt0.c0;
SELECT vt0.c1, t2.c0, vt0.c0 FROM t2, vt0, vt1 GROUP BY vt0.c1, t2.c0, vt0.c0;
SELECT ALL t0.c0 FROM t2, vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t2, vt0, t0 GROUP BY t0.c0 HAVING AVG((NOT (t2.c0))) UNION ALL SELECT ALL t0.c0 FROM t2, vt0, t0 GROUP BY t0.c0 HAVING (NOT (AVG((NOT (t2.c0))))) UNION ALL SELECT ALL t0.c0 FROM t2, vt0, t0 GROUP BY t0.c0 HAVING ((AVG((NOT (t2.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t2, vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t2, vt0, t0 GROUP BY t0.c0 HAVING AVG((NOT (t2.c0))) UNION ALL SELECT ALL t0.c0 FROM t2, vt0, t0 GROUP BY t0.c0 HAVING (NOT (AVG((NOT (t2.c0))))) UNION ALL SELECT ALL t0.c0 FROM t2, vt0, t0 GROUP BY t0.c0 HAVING ((AVG((NOT (t2.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t2, vt0, t0 GROUP BY t0.c0;
SELECT ALL t2.c0, vt0.c1, vt0.c0 FROM vt0 CROSS JOIN vt1 ON t0.c0 LEFT OUTER JOIN t2 ON t0.c0 RIGHT OUTER JOIN t0 ON ((((t0.c0) ISNULL))|(((0.9146310688335587) NOT BETWEEN (vt1.c0) AND (t2.c0))));
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE (((CAST(t2.c0 AS TEXT))=(((t2.c0) NOTNULL)))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT (((CAST(t2.c0 AS TEXT))==(((t2.c0) NOTNULL)))))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE (((((CAST(t2.c0 AS TEXT))=(((t2.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE ((CAST(t2.c0 AS REAL) IN (t2.c0 COLLATE NOCASE, t2.c0 COLLATE RTRIM))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT ((CAST(t2.c0 AS REAL) IN (t2.c0 COLLATE NOCASE, t2.c0 COLLATE RTRIM))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((((CAST(t2.c0 AS REAL) IN (t2.c0 COLLATE NOCASE, t2.c0 COLLATE RTRIM))) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1 HAVING MAX(CASE WHEN vt1.c0 THEN vt0.c0 ELSE MIN(0.9739205556850267) END) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (MAX(CASE WHEN vt1.c0 THEN vt0.c0 ELSE MIN(0.9739205556850267) END))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1 HAVING ((MAX(CASE WHEN vt1.c0 THEN vt0.c0 ELSE MIN(0.9739205556850267) END)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c1) BETWEEN (t0.c0) AND (vt0.c0))) ISNULL) LEFT OUTER JOIN vt1 ON CAST((t0.c0 IN ()) AS REAL);
SELECT vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c1) BETWEEN (t0.c0) AND (vt0.c0))) ISNULL) LEFT OUTER JOIN vt1 ON CAST((t0.c0 IN ()) AS REAL) WHERE ((t0.c0 COLLATE NOCASE IN (TRIM(vt1.c0, vt1.c0), ((((((((vt0.c1)AND(t0.c0)))OR(vt0.c1)))AND(vt1.c0)))OR(vt1.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c1) BETWEEN (t0.c0) AND (vt0.c0))) ISNULL) LEFT OUTER JOIN vt1 ON CAST((t0.c0 IN ()) AS REAL) WHERE ((NOT ((t0.c0 COLLATE NOCASE IN (TRIM(vt1.c0, vt1.c0), ((((((((vt0.c1)AND(t0.c0)))OR(vt0.c1)))AND(vt1.c0)))OR(vt1.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c1) BETWEEN (t0.c0) AND (vt0.c0))) ISNULL) LEFT OUTER JOIN vt1 ON CAST((t0.c0 IN ()) AS REAL) WHERE ((((t0.c0 COLLATE NOCASE IN (TRIM(vt1.c0, vt1.c0), ((((((((vt0.c1)AND(t0.c0)))OR(vt0.c1)))AND(vt1.c0)))OR(vt1.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c1) BETWEEN (t0.c0) AND (vt0.c0))) ISNULL) LEFT OUTER JOIN vt1 ON CAST((t0.c0 IN ()) AS REAL);
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c1 FROM vt0 CROSS JOIN t2 ON ((CAST(t2.c0 AS TEXT))LIKE(vt0.c0 COLLATE NOCASE)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 CROSS JOIN t2 ON ((CAST(t2.c0 AS TEXT))LIKE(vt0.c0 COLLATE NOCASE)) WHERE (t2.c0) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 CROSS JOIN t2 ON ((CAST(t2.c0 AS TEXT))LIKE(vt0.c0 COLLATE NOCASE)) WHERE ((NOT (t2.c0))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 CROSS JOIN t2 ON ((CAST(t2.c0 AS TEXT))LIKE(vt0.c0 COLLATE NOCASE)) WHERE (((t2.c0) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 CROSS JOIN t2 ON ((CAST(t2.c0 AS TEXT))LIKE(vt0.c0 COLLATE NOCASE)) GROUP BY vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING CAST((vt0.c1 IN (vt0.c0, vt0.c1)) AS NUMERIC) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (CAST((vt0.c1 IN (vt0.c0, vt0.c1)) AS NUMERIC))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((CAST((vt0.c1 IN (vt0.c0, vt0.c1)) AS NUMERIC)) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING CAST((vt0.c1 IN (vt0.c0, vt0.c1)) AS NUMERIC) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (CAST((vt0.c1 IN (vt0.c0, vt0.c1)) AS NUMERIC))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((CAST((vt0.c1 IN (vt0.c0, vt0.c1)) AS NUMERIC)) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL * FROM t0, vt1, vt0, t2;
SELECT * FROM t0, vt1, vt0, t2 WHERE (vt0.c1) UNION ALL SELECT ALL * FROM t0, vt1, vt0, t2 WHERE ((NOT (vt0.c1))) UNION ALL SELECT * FROM t0, vt1, vt0, t2 WHERE (((vt0.c1) ISNULL));
SELECT ALL * FROM t0, vt1, vt0, t2;
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0, t0.c0 FROM vt1, vt0, t0;
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0, t0.c0 FROM vt1, vt0, t0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0, t0.c0 FROM vt1, vt0, t0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0, t0.c0 FROM vt1, vt0, t0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0, t0.c0 FROM vt1, vt0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))IS NOT(t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))IS NOT(t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))IS NOT(t0.c0))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c1, t0.c0 FROM vt0, t0, t2 GROUP BY vt0.c1, t0.c0;
SELECT ALL vt0.c1, t0.c0 FROM vt0, t0, t2 GROUP BY vt0.c1, t0.c0 HAVING ((SUM(vt0.c1)) NOT NULL) UNION ALL SELECT vt0.c1, t0.c0 FROM vt0, t0, t2 GROUP BY vt0.c1, t0.c0 HAVING (NOT (((SUM(vt0.c1)) NOT NULL))) UNION ALL SELECT ALL vt0.c1, t0.c0 FROM vt0, t0, t2 GROUP BY vt0.c1, t0.c0 HAVING ((((SUM(vt0.c1)) NOT NULL)) ISNULL);
SELECT vt0.c1, t0.c0 FROM vt0, t0, t2 GROUP BY vt0.c1, t0.c0;
SELECT ALL vt0.c1, t0.c0 FROM vt0, t0, t2 GROUP BY vt0.c1, t0.c0 HAVING ((SUM(vt0.c1)) NOT NULL) UNION ALL SELECT vt0.c1, t0.c0 FROM vt0, t0, t2 GROUP BY vt0.c1, t0.c0 HAVING (NOT (((SUM(vt0.c1)) NOT NULL))) UNION ALL SELECT ALL vt0.c1, t0.c0 FROM vt0, t0, t2 GROUP BY vt0.c1, t0.c0 HAVING ((((SUM(vt0.c1)) NOT NULL)) ISNULL);
SELECT vt0.c1, t0.c0 FROM vt0, t0, t2 GROUP BY vt0.c1, t0.c0;
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c1 IN (vt0.c0))) BETWEEN (CAST(NULL AS INTEGER)) AND (((vt0.c0)IS(t0.c0))));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c1 IN (vt0.c0))) BETWEEN (CAST(NULL AS INTEGER)) AND (((vt0.c0)IS(t0.c0)))) WHERE (x'b699' COLLATE RTRIM) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c1 IN (vt0.c0))) BETWEEN (CAST(NULL AS INTEGER)) AND (((vt0.c0)IS(t0.c0)))) WHERE ((NOT (x'b699' COLLATE RTRIM))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c1 IN (vt0.c0))) BETWEEN (CAST(NULL AS INTEGER)) AND (((vt0.c0)IS(t0.c0)))) WHERE (((x'b699' COLLATE RTRIM) ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c1 IN (vt0.c0))) BETWEEN (CAST(NULL AS INTEGER)) AND (((vt0.c0)IS(t0.c0))));
SELECT DISTINCT vt0.c1, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON (((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((x'9cab'))))>((((vt0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0))))) LEFT OUTER JOIN vt1 ON UNLIKELY(DISTINCT LIKELY(DISTINCT vt0.c1));
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c1)==(260608161))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c1)=(260608161))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c1)==(260608161))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING '' UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT ('')) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (('') ISNULL);
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING '' UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT ('')) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (('') ISNULL);
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT * FROM vt0, vt1, t2 CROSS JOIN t0 ON CASE WHEN (vt1.c0 IN ()) THEN (- (vt0.c1)) WHEN 'ⰮvdD' COLLATE BINARY THEN (t2.c0 IN ()) WHEN (((t0.c0))>(('170359819'))) THEN (((NULL)) NOT BETWEEN ((t0.c0)) AND ((0.7654802531816733))) END;
SELECT * FROM vt0, vt1 NOT INDEXED, t2 CROSS JOIN t0 ON CASE WHEN (vt1.c0 IN ()) THEN (- (vt0.c1)) WHEN 'ⰮvdD' COLLATE BINARY THEN (t2.c0 IN ()) WHEN (((t0.c0))>(('170359819'))) THEN (((NULL)) NOT BETWEEN ((t0.c0)) AND ((0.7654802531816733))) END WHERE ('슯o' COLLATE BINARY) UNION ALL SELECT ALL * FROM vt0, vt1, t2 CROSS JOIN t0 ON CASE WHEN (vt1.c0 IN ()) THEN (- (vt0.c1)) WHEN 'ⰮvdD' COLLATE BINARY THEN (t2.c0 IN ()) WHEN (((t0.c0))>(('170359819'))) THEN (((NULL)) NOT BETWEEN ((t0.c0)) AND ((0.7654802531816733))) END WHERE ((NOT ('슯o' COLLATE BINARY))) UNION ALL SELECT * FROM vt0, vt1, t2 CROSS JOIN t0 ON CASE WHEN (vt1.c0 IN ()) THEN (- (vt0.c1)) WHEN 'ⰮvdD' COLLATE BINARY THEN (t2.c0 IN ()) WHEN (((t0.c0))>(('170359819'))) THEN (((NULL)) NOT BETWEEN ((t0.c0)) AND ((0.7654802531816733))) END WHERE ((('슯o' COLLATE BINARY) ISNULL));
SELECT * FROM vt0, vt1, t2 CROSS JOIN t0 ON CASE WHEN (vt1.c0 IN ()) THEN (- (vt0.c1)) WHEN 'ⰮvdD' COLLATE BINARY THEN (t2.c0 IN ()) WHEN (((t0.c0))>(('170359819'))) THEN (((NULL)) NOT BETWEEN ((t0.c0)) AND ((0.7654802531816733))) END;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((NOT ((NOT (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((NOT ((NOT (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((NOT ((NOT (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c0, vt0.c1 FROM t0, vt0, t2 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM t0, vt0, t2 WHERE ((((((t0.c0)<<(t0.c0))))==((t2.c0 COLLATE BINARY)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM t0, vt0, t2 WHERE ((NOT ((((((t0.c0)<<(t0.c0))))=((t2.c0 COLLATE BINARY)))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM t0, vt0, t2 WHERE ((((((((t0.c0)<<(t0.c0))))==((t2.c0 COLLATE BINARY)))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM t0, vt0, t2 GROUP BY vt0.c0, vt0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(((TOTAL(GROUP_CONCAT('0.8265865071129505'))) IS FALSE)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(((TOTAL(GROUP_CONCAT('0.8265865071129505'))) IS FALSE)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(((TOTAL(GROUP_CONCAT('0.8265865071129505'))) IS FALSE))) ISNULL);
SELECT ALL * FROM vt1, t0, vt0, t2;
SELECT * FROM vt1, t0, vt0, t2 WHERE ((((- (vt0.c0))) IS TRUE)) UNION ALL SELECT * FROM vt1, t0, vt0, t2 WHERE ((NOT ((((- (vt0.c0))) IS TRUE)))) UNION ALL SELECT ALL * FROM vt1, t0, vt0, t2 WHERE ((((((- (vt0.c0))) IS TRUE)) ISNULL));
SELECT ALL * FROM vt1, t0, vt0, t2;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(vt1.c0 AS NUMERIC)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS NUMERIC)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0, t0.c0, t2.c0 FROM t0, t2 CROSS JOIN vt1 ON CHANGES() GROUP BY vt1.c0, t0.c0, t2.c0;
SELECT vt1.c0, t0.c0, t2.c0 FROM t0, t2 CROSS JOIN vt1 ON CHANGES() WHERE ((('eQ') ISNULL)) GROUP BY vt1.c0, t0.c0, t2.c0 UNION SELECT vt1.c0, t0.c0, t2.c0 FROM t0, t2 CROSS JOIN vt1 ON CHANGES() WHERE ((NOT ((('eQ') ISNULL)))) GROUP BY vt1.c0, t0.c0, t2.c0 UNION SELECT vt1.c0, t0.c0, t2.c0 FROM t0, t2 CROSS JOIN vt1 ON CHANGES() WHERE ((((('eQ') ISNULL)) ISNULL)) GROUP BY vt1.c0, t0.c0, t2.c0;
SELECT ALL vt1.c0, t0.c0, t2.c0 FROM t0, t2 CROSS JOIN vt1 ON CHANGES() GROUP BY vt1.c0, t0.c0, t2.c0;
SELECT t2.c0, vt1.c0, vt0.c0, vt0.c1, t0.c0 FROM t0 CROSS JOIN t2 ON CASE WHEN CAST(vt0.c0 AS BLOB) THEN CAST(t2.c0 AS TEXT) END INNER JOIN vt1 ON ((((t2.c0) BETWEEN (vt0.c1) AND ('0]'))) NOT BETWEEN (LTRIM(x'', t0.c0)) AND ((t0.c0 IN (vt1.c0)))) FULL OUTER JOIN vt0 ON ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (CASE vt1.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)) GROUP BY t2.c0, vt1.c0, vt0.c0, vt0.c1, t0.c0;
SELECT t2.c0, vt1.c0 FROM t2, vt1;
SELECT ALL t2.c0, vt1.c0 FROM t2, vt1 WHERE (((vt1.c0 COLLATE BINARY)!=(((t2.c0)IS(t2.c0))))) UNION ALL SELECT ALL t2.c0, vt1.c0 FROM t2, vt1 WHERE ((NOT (((vt1.c0 COLLATE BINARY)!=(((t2.c0)IS(t2.c0))))))) UNION ALL SELECT t2.c0, vt1.c0 FROM t2, vt1 WHERE (((((vt1.c0 COLLATE BINARY)<>(((t2.c0)IS(t2.c0))))) ISNULL));
SELECT t2.c0, vt1.c0 FROM t2, vt1;
SELECT DISTINCT t2.c0, vt0.c0 FROM t0, vt0, vt1, t2;
SELECT DISTINCT t2.c0, vt0.c0 FROM t0, vt0, vt1, t2 WHERE ((- ((- (vt0.c0))))) UNION SELECT DISTINCT t2.c0, vt0.c0 FROM t0, vt0, vt1, t2 WHERE ((NOT ((- ((- (vt0.c0))))))) UNION SELECT DISTINCT t2.c0, vt0.c0 FROM t0, vt0, vt1, t2 WHERE ((((- ((- (vt0.c0))))) ISNULL));
SELECT DISTINCT t2.c0, vt0.c0 FROM t0, vt0, vt1, t2;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE (CASE WHEN (((t2.c0))>((t2.c0))) THEN ((t2.c0) ISNULL) END) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT (CASE WHEN (((t2.c0))>((t2.c0))) THEN ((t2.c0) ISNULL) END))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE (((CASE WHEN (((t2.c0))>((t2.c0))) THEN ((t2.c0) ISNULL) END) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((MAX(MAX(t0.c0)))OR(MIN(COUNT(t0.c0)))))OR(AVG(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((MAX(MAX(t0.c0)))OR(MIN(COUNT(t0.c0)))))OR(AVG(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((MAX(MAX(t0.c0)))OR(MIN(COUNT(t0.c0)))))OR(AVG(t0.c0)))) ISNULL);
SELECT ALL * FROM vt0, t0, vt1, t2;
SELECT ALL * FROM vt0, t0, vt1, t2 WHERE (x'd59a') UNION ALL SELECT ALL * FROM vt0, t0, vt1, t2 WHERE ((NOT (x'd59a'))) UNION ALL SELECT * FROM vt0, t0, vt1, t2 WHERE (((x'd59a') ISNULL));
SELECT ALL * FROM vt0, t0, vt1, t2;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.c1)==(vt1.c0)))AND((((vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt1.c0)) BETWEEN ((vt0.c1, vt1.c0, vt0.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c1, vt1.c0, vt0.c1, vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((((vt0.c1)==(vt1.c0)))AND((((vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt1.c0)) BETWEEN ((vt0.c1, vt1.c0, vt0.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c1, vt1.c0, vt0.c1, vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((vt0.c1)==(vt1.c0)))AND((((vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt1.c0)) BETWEEN ((vt0.c1, vt1.c0, vt0.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c1, vt1.c0, vt0.c1, vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT t2.c0 FROM t2, vt1 GROUP BY t2.c0;
SELECT t2.c0 FROM t2, vt1 WHERE (CAST(((t2.c0)>=('<')) AS TEXT)) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2, vt1 WHERE ((NOT (CAST(((t2.c0)>=('<')) AS TEXT)))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2, vt1 WHERE (((CAST(((t2.c0)>=('<')) AS TEXT)) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2, vt1 GROUP BY t2.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) NOTNULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*)) NOTNULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*)) NOTNULL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) NOTNULL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*)) NOTNULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*)) NOTNULL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (CASE ((vt1.c0)%(vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (x'c48e') AND (vt1.c0)) THEN (vt1.c0 IN ()) END) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CASE ((vt1.c0)%(vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (x'c48e') AND (vt1.c0)) THEN (vt1.c0 IN ()) END))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CASE ((vt1.c0)%(vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (x'c48e') AND (vt1.c0)) THEN (vt1.c0 IN ()) END) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0, t0.c0, vt0.c1, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON TYPEOF(vt0.c0) COLLATE NOCASE CROSS JOIN t0 ON CAST(((vt1.c0)+(vt1.c0)) AS INTEGER);
SELECT DISTINCT vt1.c0, t0.c0, vt0.c1, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON TYPEOF(vt0.c0) COLLATE NOCASE CROSS JOIN t0 ON CAST(((vt1.c0)+(vt1.c0)) AS INTEGER) WHERE ((+ (UNLIKELY(vt0.c1)))) UNION SELECT DISTINCT vt1.c0, t0.c0, vt0.c1, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON TYPEOF(vt0.c0) COLLATE NOCASE CROSS JOIN t0 ON CAST(((vt1.c0)+(vt1.c0)) AS INTEGER) WHERE ((NOT ((+ (UNLIKELY(vt0.c1)))))) UNION SELECT DISTINCT vt1.c0, t0.c0, vt0.c1, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON TYPEOF(vt0.c0) COLLATE NOCASE CROSS JOIN t0 ON CAST(((vt1.c0)+(vt1.c0)) AS INTEGER) WHERE ((((+ (UNLIKELY(vt0.c1)))) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0, vt0.c1, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON TYPEOF(vt0.c0) COLLATE NOCASE CROSS JOIN t0 ON CAST(((vt1.c0)+(vt1.c0)) AS INTEGER);
SELECT vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c0;
SELECT vt0.c1, t0.c0 FROM t0, vt0 WHERE ((- ((((t0.c0, vt0.c0, t0.c0))<>((vt0.c1, vt0.c0, t0.c0)))))) GROUP BY vt0.c1, t0.c0 UNION SELECT vt0.c1, t0.c0 FROM t0, vt0 WHERE ((NOT ((- ((((t0.c0, vt0.c0, t0.c0))!=((vt0.c1, vt0.c0, t0.c0)))))))) GROUP BY vt0.c1, t0.c0 UNION SELECT vt0.c1, t0.c0 FROM t0, vt0 WHERE ((((- ((((t0.c0, vt0.c0, t0.c0))<>((vt0.c1, vt0.c0, t0.c0)))))) ISNULL)) GROUP BY vt0.c1, t0.c0;
SELECT vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT * FROM vt0 INDEXED BY i39, vt1, t0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((~ (TYPEOF(vt1.c0)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((~ (TYPEOF(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((~ (TYPEOF(vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT t0.c0, t2.c0 FROM t2, t0 GROUP BY t0.c0, t2.c0;
SELECT t0.c0, t2.c0 FROM t2, t0 WHERE ((((~ (t2.c0)))<=((t0.c0 IN ())))) GROUP BY t0.c0, t2.c0 UNION SELECT ALL t0.c0, t2.c0 FROM t2, t0 WHERE ((NOT ((((~ (t2.c0)))<=((t0.c0 IN ())))))) GROUP BY t0.c0, t2.c0 UNION SELECT t0.c0, t2.c0 FROM t2, t0 WHERE ((((((~ (t2.c0)))<=((t0.c0 IN ())))) ISNULL)) GROUP BY t0.c0, t2.c0;
SELECT t0.c0, t2.c0 FROM t2, t0 GROUP BY t0.c0, t2.c0;
SELECT vt1.c0, vt0.c0 FROM t2, vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM t2, vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING TOTAL(TOTAL(AVG(vt0.c0))) UNION ALL SELECT vt1.c0, vt0.c0 FROM t2, vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (TOTAL(TOTAL(AVG(vt0.c0))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM t2, vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((TOTAL(TOTAL(AVG(vt0.c0)))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((((((((((NOT (x'')))OR(CAST(t0.c0 AS BLOB))))OR((((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))))))OR(((t0.c0)/(t0.c0)))))OR((t0.c0 IN (t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((((((((NOT (x'')))OR(CAST(t0.c0 AS BLOB))))OR((((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))))))OR(((t0.c0)/(t0.c0)))))OR((t0.c0 IN (t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((((((((((NOT (x'')))OR(CAST(t0.c0 AS BLOB))))OR((((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))))))OR(((t0.c0)/(t0.c0)))))OR((t0.c0 IN (t0.c0))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM t2, vt1, vt0 LEFT OUTER JOIN t0 ON TOTAL_CHANGES();
SELECT DISTINCT vt0.c1, vt0.c0 FROM t2, vt1, vt0 LEFT OUTER JOIN t0 ON TOTAL_CHANGES() WHERE (NULL) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM t2, vt1, vt0 LEFT OUTER JOIN t0 ON TOTAL_CHANGES() WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM t2, vt1, vt0 LEFT OUTER JOIN t0 ON TOTAL_CHANGES() WHERE (((NULL) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM t2, vt1, vt0 LEFT OUTER JOIN t0 ON TOTAL_CHANGES();
SELECT ALL t2.c0, vt1.c0, t0.c0 FROM t0, t2, vt1 GROUP BY t2.c0, vt1.c0, t0.c0;
SELECT ALL t2.c0, vt1.c0, t0.c0 FROM t0, t2, vt1 WHERE (((((vt1.c0, t0.c0, t2.c0)) BETWEEN ((t0.c0, vt1.c0, t2.c0)) AND ((vt1.c0, t2.c0, t2.c0))) IN ())) GROUP BY t2.c0, vt1.c0, t0.c0 UNION SELECT t2.c0, vt1.c0, t0.c0 FROM t0, t2, vt1 WHERE ((NOT (((((vt1.c0, t0.c0, t2.c0)) BETWEEN ((t0.c0, vt1.c0, t2.c0)) AND ((vt1.c0, t2.c0, t2.c0))) IN ())))) GROUP BY t2.c0, vt1.c0, t0.c0 UNION SELECT ALL t2.c0, vt1.c0, t0.c0 FROM t0, t2, vt1 WHERE (((((((vt1.c0, t0.c0, t2.c0)) BETWEEN ((t0.c0, vt1.c0, t2.c0)) AND ((vt1.c0, t2.c0, t2.c0))) IN ())) ISNULL)) GROUP BY t2.c0, vt1.c0, t0.c0;
SELECT ALL t2.c0, vt1.c0, t0.c0 FROM t0, t2, vt1 GROUP BY t2.c0, vt1.c0, t0.c0;
SELECT ALL vt1.c0, vt0.c1, t0.c0, vt0.c0 FROM vt1, t0, vt0, t2 GROUP BY vt1.c0, vt0.c1, t0.c0, vt0.c0;
SELECT vt1.c0, vt0.c1, t0.c0, vt0.c0 FROM vt1, t0, vt0, t2 GROUP BY vt1.c0, vt0.c1, t0.c0, vt0.c0 HAVING LIKELY(DISTINCT SUM(vt0.c1)) UNION ALL SELECT ALL vt1.c0, vt0.c1, t0.c0, vt0.c0 FROM vt1, t0, vt0, t2 GROUP BY vt1.c0, vt0.c1, t0.c0, vt0.c0 HAVING (NOT (LIKELY(DISTINCT SUM(vt0.c1)))) UNION ALL SELECT ALL vt1.c0, vt0.c1, t0.c0, vt0.c0 FROM vt1, t0, vt0, t2 GROUP BY vt1.c0, vt0.c1, t0.c0, vt0.c0 HAVING ((LIKELY(DISTINCT SUM(vt0.c1))) ISNULL);
SELECT ALL vt1.c0, vt0.c1, t0.c0, vt0.c0 FROM vt1, t0, vt0, t2 GROUP BY vt1.c0, vt0.c1, t0.c0, vt0.c0;
SELECT vt1.c0, vt0.c1, t0.c0, vt0.c0 FROM vt1, t0, vt0, t2 GROUP BY vt1.c0, vt0.c1, t0.c0, vt0.c0 HAVING LIKELY(DISTINCT SUM(vt0.c1)) UNION ALL SELECT ALL vt1.c0, vt0.c1, t0.c0, vt0.c0 FROM vt1, t0, vt0, t2 GROUP BY vt1.c0, vt0.c1, t0.c0, vt0.c0 HAVING (NOT (LIKELY(DISTINCT SUM(vt0.c1)))) UNION ALL SELECT ALL vt1.c0, vt0.c1, t0.c0, vt0.c0 FROM vt1, t0, vt0, t2 GROUP BY vt1.c0, vt0.c1, t0.c0, vt0.c0 HAVING ((LIKELY(DISTINCT SUM(vt0.c1))) ISNULL);
SELECT ALL vt1.c0, vt0.c1, t0.c0, vt0.c0 FROM vt1, t0, vt0, t2 GROUP BY vt1.c0, vt0.c1, t0.c0, vt0.c0;
SELECT * FROM vt1, t2;
SELECT ALL * FROM vt1, t2 WHERE ((((((- (t2.c0)))OR((vt1.c0 IN (vt1.c0)))))AND(vt1.c0 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt1, t2 WHERE ((NOT ((((((- (t2.c0)))OR((vt1.c0 IN (vt1.c0)))))AND(vt1.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM vt1, t2 WHERE ((((((((- (t2.c0)))OR((vt1.c0 IN (vt1.c0)))))AND(vt1.c0 COLLATE RTRIM))) ISNULL));
SELECT * FROM vt1, t2;
SELECT DISTINCT t2.c0, vt1.c0, t0.c0 FROM vt1, t2, t0, vt0;
SELECT DISTINCT t2.c0, vt1.c0, t0.c0 FROM vt1, t2, t0, vt0 WHERE (((((t0.c0)&(vt1.c0)))-(NULL))) UNION SELECT DISTINCT t2.c0, vt1.c0, t0.c0 FROM vt1, t2, t0, vt0 WHERE ((NOT (((((t0.c0)&(vt1.c0)))-(NULL))))) UNION SELECT DISTINCT t2.c0, vt1.c0, t0.c0 FROM vt1, t2, t0, vt0 WHERE (((((((t0.c0)&(vt1.c0)))-(NULL))) ISNULL));
SELECT DISTINCT t2.c0, vt1.c0, t0.c0 FROM vt1, t2, t0, vt0;
SELECT vt1.c0 FROM vt1, t2, t0, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t2, t0, vt0 WHERE (SQLITE_SOURCE_ID()) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, t2, t0, vt0 WHERE ((NOT (SQLITE_SOURCE_ID()))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, t2, t0, vt0 WHERE (((SQLITE_SOURCE_ID()) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t2, t0, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(COUNT(COUNT(COUNT(*)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(COUNT(COUNT(COUNT(*)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(COUNT(COUNT(COUNT(*))))) ISNULL);
SELECT MAX(TOTAL_CHANGES()) FROM t2;
SELECT t0.c0 FROM t0, vt0;
SELECT t0.c0 FROM t0, vt0 WHERE (((- (t0.c0)) IN ())) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 WHERE ((NOT (((- (t0.c0)) IN ())))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 WHERE (((((- (t0.c0)) IN ())) ISNULL));
SELECT t0.c0 FROM t0, vt0;
SELECT DISTINCT t2.c0, vt1.c0 FROM t2, vt1;
SELECT DISTINCT t2.c0, vt1.c0 FROM t2, vt1 WHERE ((((x'878f4d95', '705873608', 'LHJ}.Yd')) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))AND(x'')), ((vt1.c0)*(t2.c0)), (t2.c0 IN ()))) AND ((((t2.c0) BETWEEN (t2.c0) AND (1.96846844E8)), vt1.c0 COLLATE BINARY, CASE vt1.c0  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN vt1.c0 THEN t2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t2.c0 THEN vt1.c0 ELSE t2.c0 END)))) UNION SELECT DISTINCT t2.c0, vt1.c0 FROM t2, vt1 WHERE ((NOT ((((x'878f4d95', '705873608', 'LHJ}.Yd')) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))AND(x'')), ((vt1.c0)*(t2.c0)), (t2.c0 IN ()))) AND ((((t2.c0) BETWEEN (t2.c0) AND (1.96846844E8)), vt1.c0 COLLATE BINARY, CASE vt1.c0  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN vt1.c0 THEN t2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t2.c0 THEN vt1.c0 ELSE t2.c0 END)))))) UNION SELECT DISTINCT t2.c0, vt1.c0 FROM t2, vt1 WHERE ((((((x'878f4d95', '705873608', 'LHJ}.Yd')) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))AND(x'')), ((vt1.c0)*(t2.c0)), (t2.c0 IN ()))) AND ((((t2.c0) BETWEEN (t2.c0) AND (1.96846844E8)), vt1.c0 COLLATE BINARY, CASE vt1.c0  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN vt1.c0 THEN t2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t2.c0 THEN vt1.c0 ELSE t2.c0 END)))) ISNULL));
SELECT DISTINCT t2.c0, vt1.c0 FROM t2, vt1;
SELECT t0.c0 FROM vt1, t0 NOT INDEXED, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0, vt0 WHERE (((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1, t0, vt0 WHERE ((NOT (((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt1, t0, vt0 WHERE (((((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0 NOT INDEXED, vt0 GROUP BY t0.c0;
SELECT t2.c0 FROM t2 RIGHT OUTER JOIN vt1 ON (vt1.c0 IN (CAST(vt1.c0 AS BLOB), (+ (t2.c0)))) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 RIGHT OUTER JOIN vt1 ON (vt1.c0 IN (CAST(vt1.c0 AS BLOB), (+ (t2.c0)))) GROUP BY t2.c0 HAVING ((((MAX(vt1.c0))OR((- (vt1.c0)))))AND(TOTAL(vt1.c0))) UNION ALL SELECT t2.c0 FROM t2 RIGHT OUTER JOIN vt1 ON (vt1.c0 IN (CAST(vt1.c0 AS BLOB), (+ (t2.c0)))) GROUP BY t2.c0 HAVING (NOT (((((MAX(vt1.c0))OR((- (vt1.c0)))))AND(TOTAL(vt1.c0))))) UNION ALL SELECT ALL t2.c0 FROM t2 RIGHT OUTER JOIN vt1 ON (vt1.c0 IN (CAST(vt1.c0 AS BLOB), (+ (t2.c0)))) GROUP BY t2.c0 HAVING ((((((MAX(vt1.c0))OR((- (vt1.c0)))))AND(TOTAL(vt1.c0)))) ISNULL);
SELECT t2.c0 FROM t2 RIGHT OUTER JOIN vt1 ON (vt1.c0 IN (CAST(vt1.c0 AS BLOB), (+ (t2.c0)))) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 RIGHT OUTER JOIN vt1 ON (vt1.c0 IN (CAST(vt1.c0 AS BLOB), (+ (t2.c0)))) GROUP BY t2.c0 HAVING ((((MAX(vt1.c0))OR((- (vt1.c0)))))AND(TOTAL(vt1.c0))) UNION ALL SELECT t2.c0 FROM t2 RIGHT OUTER JOIN vt1 ON (vt1.c0 IN (CAST(vt1.c0 AS BLOB), (+ (t2.c0)))) GROUP BY t2.c0 HAVING (NOT (((((MAX(vt1.c0))OR((- (vt1.c0)))))AND(TOTAL(vt1.c0))))) UNION ALL SELECT ALL t2.c0 FROM t2 RIGHT OUTER JOIN vt1 ON (vt1.c0 IN (CAST(vt1.c0 AS BLOB), (+ (t2.c0)))) GROUP BY t2.c0 HAVING ((((((MAX(vt1.c0))OR((- (vt1.c0)))))AND(TOTAL(vt1.c0)))) ISNULL);
SELECT t2.c0 FROM t2 RIGHT OUTER JOIN vt1 ON (vt1.c0 IN (CAST(vt1.c0 AS BLOB), (+ (t2.c0)))) GROUP BY t2.c0;
SELECT ALL * FROM vt0, vt1, t2, t0;
SELECT ALL * FROM vt0, vt1, t2, t0 WHERE ((((t0.c0)) NOT BETWEEN ((LOWER(DISTINCT x'146d'))) AND ((((t0.c0)&(t2.c0)))))) UNION ALL SELECT * FROM vt0, vt1, t2 NOT INDEXED, t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((LOWER(DISTINCT x'146d'))) AND ((((t0.c0)&(t2.c0)))))))) UNION ALL SELECT * FROM vt0, vt1, t2, t0 WHERE ((((((t0.c0)) NOT BETWEEN ((LOWER(DISTINCT x'146d'))) AND ((((t0.c0)&(t2.c0)))))) ISNULL));
SELECT ALL * FROM vt0, vt1, t2, t0;
SELECT DISTINCT * FROM vt1, t0, t2;
SELECT DISTINCT * FROM vt1, t0, t2 WHERE (((((((t2.c0)AND(t0.c0)))OR(t2.c0)))GLOB(((vt1.c0) NOT BETWEEN (vt1.c0) AND (t2.c0))))) UNION SELECT DISTINCT * FROM vt1 NOT INDEXED, t0, t2 WHERE ((NOT (((((((t2.c0)AND(t0.c0)))OR(t2.c0)))GLOB(((vt1.c0) NOT BETWEEN (vt1.c0) AND (t2.c0))))))) UNION SELECT DISTINCT * FROM vt1, t0, t2 WHERE (((((((((t2.c0)AND(t0.c0)))OR(t2.c0)))GLOB(((vt1.c0) NOT BETWEEN (vt1.c0) AND (t2.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, t0, t2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((NOT (''))))>=((vt0.c0 COLLATE RTRIM)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((NOT (''))))>=((vt0.c0 COLLATE RTRIM)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((NOT (''))))>=((vt0.c0 COLLATE RTRIM)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t2.c0 FROM vt0, t2 GROUP BY t2.c0;
SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING GROUP_CONCAT(CAST(vt0.c1 AS REAL)) UNION ALL SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING (NOT (GROUP_CONCAT(CAST(vt0.c1 AS REAL)))) UNION ALL SELECT ALL t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING ((GROUP_CONCAT(CAST(vt0.c1 AS REAL))) ISNULL);
SELECT ALL t2.c0 FROM vt0, t2 GROUP BY t2.c0;
SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING GROUP_CONCAT(CAST(vt0.c1 AS REAL)) UNION ALL SELECT t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING (NOT (GROUP_CONCAT(CAST(vt0.c1 AS REAL)))) UNION ALL SELECT ALL t2.c0 FROM vt0, t2 GROUP BY t2.c0 HAVING ((GROUP_CONCAT(CAST(vt0.c1 AS REAL))) ISNULL);
SELECT ALL t2.c0 FROM vt0, t2 GROUP BY t2.c0;
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON ((json_object(vt1.c0, vt0.c0)) ISNULL) INNER JOIN vt0 ON CAST(t0.c0 AS NUMERIC);
SELECT DISTINCT * FROM t0, vt1, t2, vt0;
SELECT DISTINCT * FROM t0, vt1, t2, vt0 WHERE ((((+ (vt1.c0)))/(COALESCE(DISTINCT t0.c0, t0.c0)))) UNION SELECT DISTINCT * FROM t0, vt1, t2, vt0 WHERE ((NOT ((((+ (vt1.c0)))/(COALESCE(DISTINCT t0.c0, t0.c0)))))) UNION SELECT DISTINCT * FROM t0, vt1, t2, vt0 WHERE ((((((+ (vt1.c0)))/(COALESCE(DISTINCT t0.c0, t0.c0)))) ISNULL));
SELECT DISTINCT * FROM t0, vt1, t2, vt0;
SELECT ALL t2.c0, vt1.c0 FROM vt1 INDEXED BY i34, t2 GROUP BY t2.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT t2.c0 FROM t2;
SELECT ALL t2.c0 FROM t2 WHERE ((((t2.c0 IN ())) BETWEEN (LIKELIHOOD(DISTINCT t2.c0, 0.7531686836255885)) AND (((((((((t2.c0)AND(t2.c0)))OR(t2.c0)))AND(t2.c0)))OR(t2.c0))))) UNION ALL SELECT t2.c0 FROM t2 WHERE ((NOT ((((t2.c0 IN ())) BETWEEN (LIKELIHOOD(DISTINCT t2.c0, 0.7531686836255885)) AND (((((((((t2.c0)AND(t2.c0)))OR(t2.c0)))AND(t2.c0)))OR(t2.c0))))))) UNION ALL SELECT t2.c0 FROM t2 WHERE ((((((t2.c0 IN ())) BETWEEN (LIKELIHOOD(DISTINCT t2.c0, 0.7531686836255885)) AND (((((((((t2.c0)AND(t2.c0)))OR(t2.c0)))AND(t2.c0)))OR(t2.c0))))) ISNULL));
SELECT t2.c0 FROM t2;
SELECT DISTINCT vt1.c0, t0.c0, t2.c0, vt0.c0, vt0.c1 FROM vt1 CROSS JOIN t2 ON (((((t2.c0))<((t2.c0)))) ISNULL) RIGHT OUTER JOIN vt0 ON (- (((vt0.c1)GLOB(vt0.c0)))) INNER JOIN t0 ON vt0.c0;
SELECT DISTINCT vt1.c0, t0.c0, t2.c0, vt0.c0, vt0.c1 FROM vt1 CROSS JOIN t2 ON (((((t2.c0))<((t2.c0)))) ISNULL) RIGHT OUTER JOIN vt0 ON (- (((vt0.c1)GLOB(vt0.c0)))) INNER JOIN t0 ON vt0.c0 WHERE (((((((((vt1.c0)AND(vt0.c0)))AND(NULL)))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(NULL))) UNION SELECT DISTINCT vt1.c0, t0.c0, t2.c0, vt0.c0, vt0.c1 FROM vt1 CROSS JOIN t2 ON (((((t2.c0))<((t2.c0)))) ISNULL) RIGHT OUTER JOIN vt0 ON (- (((vt0.c1)GLOB(vt0.c0)))) INNER JOIN t0 ON vt0.c0 WHERE ((NOT (((((((((vt1.c0)AND(vt0.c0)))AND(NULL)))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(NULL))))) UNION SELECT DISTINCT vt1.c0, t0.c0, t2.c0, vt0.c0, vt0.c1 FROM vt1 CROSS JOIN t2 ON (((((t2.c0))<((t2.c0)))) ISNULL) RIGHT OUTER JOIN vt0 ON (- (((vt0.c1)GLOB(vt0.c0)))) INNER JOIN t0 ON vt0.c0 WHERE (((((((((((vt1.c0)AND(vt0.c0)))AND(NULL)))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(NULL))) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0, t2.c0, vt0.c0, vt0.c1 FROM vt1 CROSS JOIN t2 ON (((((t2.c0))<((t2.c0)))) ISNULL) RIGHT OUTER JOIN vt0 ON (- (((vt0.c1)GLOB(vt0.c0)))) INNER JOIN t0 ON vt0.c0;
SELECT ALL t2.c0, vt0.c0, vt0.c1, vt1.c0 FROM t2, vt1, t0, vt0 GROUP BY t2.c0, vt0.c0, vt0.c1, vt1.c0;
SELECT t2.c0, vt0.c0, vt0.c1, vt1.c0 FROM t2, vt1, t0, vt0 WHERE (CASE ((((t2.c0)AND(t0.c0)))OR(vt0.c0))  WHEN ((t2.c0)GLOB(vt0.c0)) THEN ((vt0.c1) ISNULL) ELSE vt0.c1 COLLATE NOCASE END) GROUP BY t2.c0, vt0.c0, vt0.c1, vt1.c0 UNION SELECT ALL t2.c0, vt0.c0, vt0.c1, vt1.c0 FROM t2, vt1, t0, vt0 WHERE ((NOT (CASE ((((t2.c0)AND(t0.c0)))OR(vt0.c0))  WHEN ((t2.c0)GLOB(vt0.c0)) THEN ((vt0.c1) ISNULL) ELSE vt0.c1 COLLATE NOCASE END))) GROUP BY t2.c0, vt0.c0, vt0.c1, vt1.c0 UNION SELECT ALL t2.c0, vt0.c0, vt0.c1, vt1.c0 FROM t2, vt1, t0, vt0 WHERE (((CASE ((((t2.c0)AND(t0.c0)))OR(vt0.c0))  WHEN ((t2.c0)GLOB(vt0.c0)) THEN ((vt0.c1) ISNULL) ELSE vt0.c1 COLLATE NOCASE END) ISNULL)) GROUP BY t2.c0, vt0.c0, vt0.c1, vt1.c0;
SELECT ALL t2.c0, vt0.c0, vt0.c1, vt1.c0 FROM t2, vt1, t0, vt0 GROUP BY t2.c0, vt0.c0, vt0.c1, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(GROUP_CONCAT(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(GROUP_CONCAT(vt1.c0))) ISNULL);
SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM t2, vt1, t0, vt0 INDEXED BY i37;
SELECT DISTINCT t2.c0 FROM vt0, t2;
SELECT DISTINCT t2.c0 FROM vt0, t2 WHERE (((('402439458')) BETWEEN ((((t2.c0) IS TRUE))) AND ((LIKELY(vt0.c1))))) UNION SELECT DISTINCT t2.c0 FROM vt0, t2 WHERE ((NOT (((('402439458')) BETWEEN ((((t2.c0) IS TRUE))) AND ((LIKELY(vt0.c1))))))) UNION SELECT DISTINCT t2.c0 FROM vt0, t2 WHERE (((((('402439458')) BETWEEN ((((t2.c0) IS TRUE))) AND ((LIKELY(vt0.c1))))) ISNULL));
SELECT DISTINCT t2.c0 FROM vt0, t2;
SELECT t2.c0, vt0.c1 FROM vt1, t2 LEFT OUTER JOIN vt0 ON (((t2.c0 IN ())) NOT BETWEEN ((((('376534997')OR(t2.c0)))AND(vt1.c0))) AND (IFNULL(DISTINCT 't2	8쇝c', vt0.c1))) GROUP BY t2.c0, vt0.c1;
SELECT t2.c0, vt0.c1 FROM vt1, t2 LEFT OUTER JOIN vt0 ON (((t2.c0 IN ())) NOT BETWEEN ((((('376534997')OR(t2.c0)))AND(vt1.c0))) AND (IFNULL(DISTINCT 't2	8쇝c', vt0.c1))) WHERE ((((t2.c0)GLOB(vt0.c0)) IN ())) GROUP BY t2.c0, vt0.c1 UNION SELECT t2.c0, vt0.c1 FROM vt1, t2 LEFT OUTER JOIN vt0 ON (((t2.c0 IN ())) NOT BETWEEN ((((('376534997')OR(t2.c0)))AND(vt1.c0))) AND (IFNULL(DISTINCT 't2	8쇝c', vt0.c1))) WHERE ((NOT ((((t2.c0)GLOB(vt0.c0)) IN ())))) GROUP BY t2.c0, vt0.c1 UNION SELECT t2.c0, vt0.c1 FROM vt1, t2 LEFT OUTER JOIN vt0 ON (((t2.c0 IN ())) NOT BETWEEN ((((('376534997')OR(t2.c0)))AND(vt1.c0))) AND (IFNULL(DISTINCT 't2	8쇝c', vt0.c1))) WHERE ((((((t2.c0)GLOB(vt0.c0)) IN ())) ISNULL)) GROUP BY t2.c0, vt0.c1;
SELECT t2.c0, vt0.c1 FROM vt1, t2 LEFT OUTER JOIN vt0 ON (((t2.c0 IN ())) NOT BETWEEN ((((('376534997')OR(t2.c0)))AND(vt1.c0))) AND (IFNULL(DISTINCT 't2	8쇝c', vt0.c1))) GROUP BY t2.c0, vt0.c1;
SELECT vt1.c0 FROM vt1, t2 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, t2 GROUP BY vt1.c0 HAVING ((MAX(COUNT(COUNT(*)))) NOT NULL) UNION ALL SELECT ALL vt1.c0 FROM vt1, t2 GROUP BY vt1.c0 HAVING (NOT (((MAX(COUNT(COUNT(*)))) NOT NULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1, t2 GROUP BY vt1.c0 HAVING ((((MAX(COUNT(COUNT(*)))) NOT NULL)) ISNULL);
SELECT ALL MIN(LOWER(DISTINCT CAST(vt0.c1 AS BLOB))) FROM vt0, t2 ORDER BY (((t2.c0, t2.c0, vt0.c0)) BETWEEN ((t2.c0 COLLATE NOCASE, ((((t2.c0)OR(vt0.c1)))AND(vt0.c1)), ((t2.c0) IS FALSE))) AND ((((t2.c0)LIKE(vt0.c0)), CAST(t2.c0 AS REAL), vt0.c0 COLLATE NOCASE)));
SELECT t2.c0, vt0.c0 FROM vt1, t2, vt0;
SELECT ALL t2.c0, vt0.c0 FROM vt1, t2, vt0 WHERE (((CAST(vt0.c1 AS TEXT)) NOT BETWEEN (t2.c0) AND (((vt0.c0) IS FALSE)))) UNION ALL SELECT t2.c0, vt0.c0 FROM vt1, t2, vt0 WHERE ((NOT (((CAST(vt0.c1 AS TEXT)) NOT BETWEEN (t2.c0) AND (((vt0.c0) IS FALSE)))))) UNION ALL SELECT t2.c0, vt0.c0 FROM vt1, t2, vt0 WHERE (((((CAST(vt0.c1 AS TEXT)) NOT BETWEEN (t2.c0) AND (((vt0.c0) IS FALSE)))) ISNULL));
SELECT t2.c0, vt0.c0 FROM vt1, t2, vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((x'')GLOB(((vt0.c0)GLOB(vt0.c1))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((x'')GLOB(((vt0.c0)GLOB(vt0.c1))))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((x'')GLOB(((vt0.c0)GLOB(vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT vt0.c0, t2.c0, t0.c0 FROM vt1, t2, t0, vt0 GROUP BY vt0.c0, t2.c0, t0.c0;
SELECT vt0.c0, t2.c0, t0.c0 FROM vt1, t2, t0, vt0 WHERE ((((vt1.c0)) NOT BETWEEN (((+ (t2.c0)))) AND ((((vt0.c1)-(vt1.c0)))))) GROUP BY vt0.c0, t2.c0, t0.c0 UNION SELECT vt0.c0, t2.c0, t0.c0 FROM vt1, t2, t0, vt0 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN (((+ (t2.c0)))) AND ((((vt0.c1)-(vt1.c0)))))))) GROUP BY vt0.c0, t2.c0, t0.c0 UNION SELECT vt0.c0, t2.c0, t0.c0 FROM vt1, t2, t0, vt0 WHERE ((((((vt1.c0)) NOT BETWEEN (((+ (t2.c0)))) AND ((((vt0.c1)-(vt1.c0)))))) ISNULL)) GROUP BY vt0.c0, t2.c0, t0.c0;
SELECT vt0.c0, t2.c0, t0.c0 FROM vt1, t2, t0, vt0 GROUP BY vt0.c0, t2.c0, t0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(MIN(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(MIN(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(MIN(vt1.c0))) ISNULL);
SELECT * FROM vt1, t2 FULL OUTER JOIN t0 ON ((((vt0.c0) NOT NULL)) BETWEEN ((- (t2.c0))) AND (((t2.c0)!=(t2.c0)))) RIGHT OUTER JOIN vt0 ON (((((vt0.c1) IS TRUE), (((vt0.c1, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, t0.c0)) AND ((vt0.c1, t0.c0, t0.c0))), (- (vt0.c1))))=(((NOT (t0.c0)), (((vt0.c0, t0.c0, t0.c0))!=((t2.c0, vt0.c0, vt1.c0))), ((t0.c0) BETWEEN (t0.c0) AND (t2.c0)))));
SELECT DISTINCT t2.c0, t0.c0 FROM t0, t2;
SELECT DISTINCT t2.c0, t0.c0 FROM t0, t2 WHERE (CAST((+ (t0.c0)) AS REAL)) UNION SELECT DISTINCT t2.c0, t0.c0 FROM t0, t2 WHERE ((NOT (CAST((+ (t0.c0)) AS REAL)))) UNION SELECT DISTINCT t2.c0, t0.c0 FROM t0, t2 WHERE (((CAST((+ (t0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT t2.c0, t0.c0 FROM t0, t2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, t2.c0, t0.c0 FROM t2 INDEXED BY i37, t0, vt1 GROUP BY vt1.c0, t2.c0, t0.c0;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (t0.c0) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE (((((((((((NULL)AND(6.08400779E8)))AND(t2.c0)))OR(t2.c0)))OR('-292945189'))) ISNULL)) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT (((((((((((NULL)AND(6.08400779E8)))AND(t2.c0)))OR(t2.c0)))OR('-292945189'))) ISNULL)))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE (((((((((((((NULL)AND(6.08400779E8)))AND(t2.c0)))OR(t2.c0)))OR('-292945189'))) ISNULL)) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT vt0.c1, t2.c0, vt1.c0, t0.c0, vt0.c0 FROM t0, t2, vt0, vt1 GROUP BY vt0.c1, t2.c0, vt1.c0, t0.c0, vt0.c0;
SELECT vt0.c1, t2.c0, vt1.c0, t0.c0, vt0.c0 FROM t0, t2, vt0, vt1 WHERE (0.3922888621478198) GROUP BY vt0.c1, t2.c0, vt1.c0, t0.c0, vt0.c0 UNION SELECT ALL vt0.c1, t2.c0, vt1.c0, t0.c0, vt0.c0 FROM t0, t2, vt0, vt1 WHERE ((NOT (0.3922888621478198))) GROUP BY vt0.c1, t2.c0, vt1.c0, t0.c0, vt0.c0 UNION SELECT vt0.c1, t2.c0, vt1.c0, t0.c0, vt0.c0 FROM t0, t2, vt0, vt1 WHERE (((0.3922888621478198) ISNULL)) GROUP BY vt0.c1, t2.c0, vt1.c0, t0.c0, vt0.c0;
SELECT vt0.c1, t2.c0, vt1.c0, t0.c0, vt0.c0 FROM t0, t2, vt0, vt1 GROUP BY vt0.c1, t2.c0, vt1.c0, t0.c0, vt0.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING GROUP_CONCAT((GROUP_CONCAT(COUNT(COUNT(t2.c0))) IN (t2.c0))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (GROUP_CONCAT((GROUP_CONCAT(COUNT(COUNT(t2.c0))) IN (t2.c0))))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((GROUP_CONCAT((GROUP_CONCAT(COUNT(COUNT(t2.c0))) IN (t2.c0)))) ISNULL);
SELECT ALL t0.c0 FROM vt0, t0, vt1 CROSS JOIN t2 ON CAST(((vt0.c1)<=(vt0.c0)) AS REAL);
SELECT t0.c0 FROM vt0, t0, vt1 CROSS JOIN t2 ON CAST(((vt0.c1)<=(vt0.c0)) AS REAL) WHERE (((((((((((t0.c0)AND(NULL)))AND(t0.c0)))OR(vt0.c1)))OR(t0.c0)))LIKE((NOT (t2.c0))))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0, vt1 CROSS JOIN t2 ON CAST(((vt0.c1)<=(vt0.c0)) AS REAL) WHERE ((NOT (((((((((((t0.c0)AND(NULL)))AND(t0.c0)))OR(vt0.c1)))OR(t0.c0)))LIKE((NOT (t2.c0))))))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0, vt1 CROSS JOIN t2 ON CAST(((vt0.c1)<=(vt0.c0)) AS REAL) WHERE (((((((((((((t0.c0)AND(NULL)))AND(t0.c0)))OR(vt0.c1)))OR(t0.c0)))LIKE((NOT (t2.c0))))) ISNULL));
SELECT ALL t0.c0 FROM vt0, t0, vt1 CROSS JOIN t2 ON CAST(((vt0.c1)<=(vt0.c0)) AS REAL);
SELECT DISTINCT * FROM t0, vt1, vt0 INNER JOIN t2 ON ((CASE t0.c0  WHEN t0.c0 THEN t2.c0 WHEN t2.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN 0Xffffffffabf4e177 END)IS(((vt0.c0) BETWEEN (vt0.c0) AND (NULL))));
SELECT DISTINCT * FROM t0, vt1, vt0 INNER JOIN t2 ON ((CASE t0.c0  WHEN t0.c0 THEN t2.c0 WHEN t2.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN 0xffffffffabf4e177 END)IS(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))) WHERE (((CAST(vt0.c0 AS TEXT))GLOB((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT * FROM t0, vt1, vt0 INNER JOIN t2 ON ((CASE t0.c0  WHEN t0.c0 THEN t2.c0 WHEN t2.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN 0xffffffffabf4e177 END)IS(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))) WHERE ((NOT (((CAST(vt0.c0 AS TEXT))GLOB((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT * FROM t0, vt1, vt0 INNER JOIN t2 ON ((CASE t0.c0  WHEN t0.c0 THEN t2.c0 WHEN t2.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN 0xffffffffabf4e177 END)IS(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))) WHERE (((((CAST(vt0.c0 AS TEXT))GLOB((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0, vt1, vt0 INNER JOIN t2 ON ((CASE t0.c0  WHEN t0.c0 THEN t2.c0 WHEN t2.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN 0Xffffffffabf4e177 END)IS(((vt0.c0) BETWEEN (vt0.c0) AND (NULL))));
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((((((((t0.c0 IN (t0.c0, t0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((((t0.c0)OR(t0.c0)))OR(t0.c0)))))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((((((((t0.c0 IN (t0.c0, t0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((((t0.c0)OR(t0.c0)))OR(t0.c0)))))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((((((((t0.c0 IN (t0.c0, t0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((((t0.c0)OR(t0.c0)))OR(t0.c0)))))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, t0.c0))))<=((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, x'')))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((((t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, t0.c0))))<=((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, x'')))))))) UNION ALL SELECT * FROM t0 WHERE ((((((((t0.c0, t0.c0, t0.c0))<>((t0.c0, t0.c0, t0.c0))))<=((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, x'')))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0 NATURAL JOIN t2;
SELECT DISTINCT * FROM t0 NATURAL JOIN t2 WHERE (t2.c0) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN t2 WHERE ((NOT (t2.c0))) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN t2 WHERE (((t2.c0) ISNULL));
SELECT DISTINCT * FROM t0 NATURAL JOIN t2;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE (((((t2.c0)OR(-1328079058)))AND(t2.c0)) COLLATE BINARY COLLATE RTRIM) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT (((((t2.c0)OR(-1328079058)))AND(t2.c0)) COLLATE BINARY COLLATE RTRIM))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE (((((((t2.c0)OR(-1328079058)))AND(t2.c0)) COLLATE BINARY COLLATE RTRIM) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0, t2.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((((t2.c0) ISNULL))GLOB(((vt1.c0) NOTNULL))) RIGHT OUTER JOIN t2 ON ((((t2.c0) NOT BETWEEN (NULL) AND (vt0.c0)))LIKE(CAST(vt0.c1 AS INTEGER))) GROUP BY vt0.c0, vt0.c1, vt1.c0, t2.c0;
SELECT MAX((((t2.c0)OR(t2.c0)) IN (((t0.c0)IS NOT(t2.c0))))) FROM t2, t0;
SELECT vt1.c0, t2.c0 FROM t0 INNER JOIN vt1 ON (+ (CAST(vt1.c0 AS TEXT))) RIGHT OUTER JOIN t2 ON CASE t2.c0 COLLATE RTRIM  WHEN CAST(0Xf3a3dfa AS INTEGER) THEN SQLITE_COMPILEOPTION_GET(t0.c0) END;
SELECT vt1.c0, t2.c0 FROM t0 INNER JOIN vt1 ON (+ (CAST(vt1.c0 AS TEXT))) RIGHT OUTER JOIN t2 ON CASE t2.c0 COLLATE RTRIM  WHEN CAST(0xf3a3dfa AS INTEGER) THEN SQLITE_COMPILEOPTION_GET(t0.c0) END WHERE (((CAST(t0.c0 AS BLOB))<<(CAST(t0.c0 AS NUMERIC)))) UNION ALL SELECT ALL vt1.c0, t2.c0 FROM t0 INNER JOIN vt1 ON (+ (CAST(vt1.c0 AS TEXT))) RIGHT OUTER JOIN t2 ON CASE t2.c0 COLLATE RTRIM  WHEN CAST(0Xf3a3dfa AS INTEGER) THEN SQLITE_COMPILEOPTION_GET(t0.c0) END WHERE ((NOT (((CAST(t0.c0 AS BLOB))<<(CAST(t0.c0 AS NUMERIC)))))) UNION ALL SELECT vt1.c0, t2.c0 FROM t0 INNER JOIN vt1 ON (+ (CAST(vt1.c0 AS TEXT))) RIGHT OUTER JOIN t2 ON CASE t2.c0 COLLATE RTRIM  WHEN CAST(0Xf3a3dfa AS INTEGER) THEN SQLITE_COMPILEOPTION_GET(t0.c0) END WHERE (((((CAST(t0.c0 AS BLOB))<<(CAST(t0.c0 AS NUMERIC)))) ISNULL));
SELECT vt1.c0, t2.c0 FROM t0 INNER JOIN vt1 ON (+ (CAST(vt1.c0 AS TEXT))) RIGHT OUTER JOIN t2 ON CASE t2.c0 COLLATE RTRIM  WHEN CAST(0Xf3a3dfa AS INTEGER) THEN SQLITE_COMPILEOPTION_GET(t0.c0) END;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (0.2969940782163678) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (0.2969940782163678))) UNION SELECT DISTINCT * FROM t0 WHERE (((0.2969940782163678) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 WHERE (CAST(x'c2b1' AS BLOB)) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT (CAST(x'c2b1' AS BLOB)))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE (((CAST(x'c2b1' AS BLOB)) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING ((vt0.c0)>>(NULL)) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING (NOT (((vt0.c0)>>(NULL)))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING ((((vt0.c0)>>(NULL))) ISNULL);
SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING ((vt0.c0)>>(NULL)) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING (NOT (((vt0.c0)>>(NULL)))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING ((((vt0.c0)>>(NULL))) ISNULL);
SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT vt0.c1, t0.c0 FROM vt0, t0;
SELECT vt0.c1, t0.c0 FROM vt0, t0 WHERE (vt0.c1) UNION ALL SELECT ALL vt0.c1, t0.c0 FROM vt0, t0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT vt0.c1, t0.c0 FROM vt0, t0 WHERE (((vt0.c1) ISNULL));
SELECT vt0.c1, t0.c0 FROM vt0, t0;
SELECT DISTINCT * FROM t2, vt0, vt1, t0;
SELECT DISTINCT * FROM t2, vt0, vt1, t0 WHERE (LTRIM(NULL)) UNION SELECT DISTINCT * FROM t2, vt0, vt1, t0 WHERE ((NOT (LTRIM(NULL)))) UNION SELECT DISTINCT * FROM t2, vt0, vt1, t0 WHERE (((LTRIM(NULL)) ISNULL));
SELECT DISTINCT * FROM t2, vt0, vt1, t0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 WHERE (0x40bacd15) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT (0x40bacd15))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE (((0X40bacd15) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t0.c0, t2.c0, vt1.c0, vt0.c1, vt0.c0 FROM t0, vt1 FULL OUTER JOIN t2 ON CAST(((((vt1.c0)OR(t0.c0)))AND(t2.c0)) AS TEXT) CROSS JOIN vt0 ON (((t2.c0 IN ())) NOT BETWEEN ((((0.8485770005246213)) BETWEEN ((t2.c0)) AND ((t0.c0)))) AND (((vt1.c0)<<(t2.c0)))) GROUP BY t0.c0, t2.c0, vt1.c0, vt0.c1, vt0.c0;
SELECT ALL t0.c0, t2.c0, vt1.c0, vt0.c1, vt0.c0 FROM t0, vt1 FULL OUTER JOIN t2 ON CAST(((((vt1.c0)OR(t0.c0)))AND(t2.c0)) AS TEXT) CROSS JOIN vt0 ON (((t2.c0 IN ())) NOT BETWEEN ((((0.8485770005246213)) BETWEEN ((t2.c0)) AND ((t0.c0)))) AND (((vt1.c0)<<(t2.c0)))) GROUP BY t0.c0, t2.c0, vt1.c0, vt0.c1, vt0.c0 HAVING (MIN(t0.c0) IN (GROUP_CONCAT(vt0.c1))) UNION ALL SELECT ALL t0.c0, t2.c0, vt1.c0, vt0.c1, vt0.c0 FROM t0, vt1 FULL OUTER JOIN t2 ON CAST(((((vt1.c0)OR(t0.c0)))AND(t2.c0)) AS TEXT) CROSS JOIN vt0 ON (((t2.c0 IN ())) NOT BETWEEN ((((0.8485770005246213)) BETWEEN ((t2.c0)) AND ((t0.c0)))) AND (((vt1.c0)<<(t2.c0)))) GROUP BY t0.c0, t2.c0, vt1.c0, vt0.c1, vt0.c0 HAVING (NOT ((MIN(t0.c0) IN (GROUP_CONCAT(vt0.c1))))) UNION ALL SELECT t0.c0, t2.c0, vt1.c0, vt0.c1, vt0.c0 FROM t0, vt1 FULL OUTER JOIN t2 ON CAST(((((vt1.c0)OR(t0.c0)))AND(t2.c0)) AS TEXT) CROSS JOIN vt0 ON (((t2.c0 IN ())) NOT BETWEEN ((((0.8485770005246213)) BETWEEN ((t2.c0)) AND ((t0.c0)))) AND (((vt1.c0)<<(t2.c0)))) GROUP BY t0.c0, t2.c0, vt1.c0, vt0.c1, vt0.c0 HAVING (((MIN(t0.c0) IN (GROUP_CONCAT(vt0.c1)))) ISNULL);
SELECT t0.c0, t2.c0, vt1.c0, vt0.c1, vt0.c0 FROM t0, vt1 FULL OUTER JOIN t2 ON CAST(((((vt1.c0)OR(t0.c0)))AND(t2.c0)) AS TEXT) CROSS JOIN vt0 ON (((t2.c0 IN ())) NOT BETWEEN ((((0.8485770005246213)) BETWEEN ((t2.c0)) AND ((t0.c0)))) AND (((vt1.c0)<<(t2.c0)))) GROUP BY t0.c0, t2.c0, vt1.c0, vt0.c1, vt0.c0;
SELECT ALL t0.c0, t2.c0, vt1.c0, vt0.c1, vt0.c0 FROM t0, vt1 FULL OUTER JOIN t2 ON CAST(((((vt1.c0)OR(t0.c0)))AND(t2.c0)) AS TEXT) CROSS JOIN vt0 ON (((t2.c0 IN ())) NOT BETWEEN ((((0.8485770005246213)) BETWEEN ((t2.c0)) AND ((t0.c0)))) AND (((vt1.c0)<<(t2.c0)))) GROUP BY t0.c0, t2.c0, vt1.c0, vt0.c1, vt0.c0 HAVING (MIN(t0.c0) IN (GROUP_CONCAT(vt0.c1))) UNION ALL SELECT ALL t0.c0, t2.c0, vt1.c0, vt0.c1, vt0.c0 FROM t0, vt1 FULL OUTER JOIN t2 ON CAST(((((vt1.c0)OR(t0.c0)))AND(t2.c0)) AS TEXT) CROSS JOIN vt0 ON (((t2.c0 IN ())) NOT BETWEEN ((((0.8485770005246213)) BETWEEN ((t2.c0)) AND ((t0.c0)))) AND (((vt1.c0)<<(t2.c0)))) GROUP BY t0.c0, t2.c0, vt1.c0, vt0.c1, vt0.c0 HAVING (NOT ((MIN(t0.c0) IN (GROUP_CONCAT(vt0.c1))))) UNION ALL SELECT t0.c0, t2.c0, vt1.c0, vt0.c1, vt0.c0 FROM t0, vt1 FULL OUTER JOIN t2 ON CAST(((((vt1.c0)OR(t0.c0)))AND(t2.c0)) AS TEXT) CROSS JOIN vt0 ON (((t2.c0 IN ())) NOT BETWEEN ((((0.8485770005246213)) BETWEEN ((t2.c0)) AND ((t0.c0)))) AND (((vt1.c0)<<(t2.c0)))) GROUP BY t0.c0, t2.c0, vt1.c0, vt0.c1, vt0.c0 HAVING (((MIN(t0.c0) IN (GROUP_CONCAT(vt0.c1)))) ISNULL);
SELECT t0.c0, t2.c0, vt1.c0, vt0.c1, vt0.c0 FROM t0, vt1 FULL OUTER JOIN t2 ON CAST(((((vt1.c0)OR(t0.c0)))AND(t2.c0)) AS TEXT) CROSS JOIN vt0 ON (((t2.c0 IN ())) NOT BETWEEN ((((0.8485770005246213)) BETWEEN ((t2.c0)) AND ((t0.c0)))) AND (((vt1.c0)<<(t2.c0)))) GROUP BY t0.c0, t2.c0, vt1.c0, vt0.c1, vt0.c0;
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (LIKELY(GLOB(vt0.c1, vt1.c0))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (LIKELY(GLOB(vt0.c1, vt1.c0))))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((LIKELY(GLOB(vt0.c1, vt1.c0))) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, t0, t2, vt1;
SELECT DISTINCT * FROM vt0, t0, t2, vt1 WHERE (((TRIM(vt0.c1))AND(CAST(t2.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0, t0, t2, vt1 WHERE ((NOT (((TRIM(vt0.c1))AND(CAST(t2.c0 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM vt0, t0, t2, vt1 WHERE (((((TRIM(vt0.c1))AND(CAST(t2.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM vt0, t0, t2, vt1;
SELECT ALL vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt1, vt0 WHERE (CASE '-370801107'  WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN t0.c0 WHEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)) THEN vt0.c0 WHEN NULL THEN vt0.c1 COLLATE NOCASE ELSE (+ (vt1.c0)) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt1, vt0 WHERE ((NOT (CASE '-370801107'  WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN t0.c0 WHEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)) THEN vt0.c0 WHEN NULL THEN vt0.c1 COLLATE NOCASE ELSE (+ (vt1.c0)) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt1, vt0 WHERE (((CASE '-370801107'  WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN t0.c0 WHEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)) THEN vt0.c0 WHEN NULL THEN vt0.c1 COLLATE NOCASE ELSE (+ (vt1.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0, vt0.c1, t0.c0, t2.c0, vt0.c0 FROM vt1, vt0, t2, t0 GROUP BY vt1.c0, vt0.c1, t0.c0, t2.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, t0.c0, t2.c0, vt0.c0 FROM vt1, vt0, t2, t0 GROUP BY vt1.c0, vt0.c1, t0.c0, t2.c0, vt0.c0 HAVING t0.c0 COLLATE RTRIM UNION ALL SELECT ALL vt1.c0, vt0.c1, t0.c0, t2.c0, vt0.c0 FROM vt1, vt0, t2, t0 GROUP BY vt1.c0, vt0.c1, t0.c0, t2.c0, vt0.c0 HAVING (NOT (t0.c0 COLLATE RTRIM)) UNION ALL SELECT ALL vt1.c0, vt0.c1, t0.c0, t2.c0, vt0.c0 FROM vt1, vt0, t2, t0 GROUP BY vt1.c0, vt0.c1, t0.c0, t2.c0, vt0.c0 HAVING ((t0.c0 COLLATE RTRIM) ISNULL);
SELECT ALL vt1.c0, vt0.c1, t0.c0, t2.c0, vt0.c0 FROM vt1, vt0, t2, t0 GROUP BY vt1.c0, vt0.c1, t0.c0, t2.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, t0.c0, t2.c0, vt0.c0 FROM vt1, vt0, t2, t0 GROUP BY vt1.c0, vt0.c1, t0.c0, t2.c0, vt0.c0 HAVING t0.c0 COLLATE RTRIM UNION ALL SELECT ALL vt1.c0, vt0.c1, t0.c0, t2.c0, vt0.c0 FROM vt1, vt0, t2, t0 GROUP BY vt1.c0, vt0.c1, t0.c0, t2.c0, vt0.c0 HAVING (NOT (t0.c0 COLLATE RTRIM)) UNION ALL SELECT ALL vt1.c0, vt0.c1, t0.c0, t2.c0, vt0.c0 FROM vt1, vt0, t2, t0 GROUP BY vt1.c0, vt0.c1, t0.c0, t2.c0, vt0.c0 HAVING ((t0.c0 COLLATE RTRIM) ISNULL);
SELECT ALL vt1.c0, vt0.c1, t0.c0, t2.c0, vt0.c0 FROM vt1, vt0, t2, t0 GROUP BY vt1.c0, vt0.c1, t0.c0, t2.c0, vt0.c0;
SELECT ALL t2.c0 FROM vt1, t2, t0;
SELECT ALL t2.c0 FROM vt1, t2, t0 WHERE (((x'188b') NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(t0.c0))) AND (vt1.c0 COLLATE NOCASE))) UNION ALL SELECT ALL t2.c0 FROM vt1, t2, t0 WHERE ((NOT (((x'188b') NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(t0.c0))) AND (vt1.c0 COLLATE NOCASE))))) UNION ALL SELECT t2.c0 FROM vt1, t2, t0 WHERE (((((x'188b') NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(t0.c0))) AND (vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL t2.c0 FROM vt1, t2, t0;
SELECT DISTINCT * FROM t0 INNER JOIN vt1 ON vt1.c0;
SELECT DISTINCT * FROM t0 INNER JOIN vt1 ON vt1.c0 WHERE (((vt1.c0)>(((t0.c0)<<(vt1.c0))))) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt1 ON vt1.c0 WHERE ((NOT (((vt1.c0)>(((t0.c0)<<(vt1.c0))))))) UNION SELECT DISTINCT * FROM t0 INNER JOIN vt1 ON vt1.c0 WHERE (((((vt1.c0)>(((t0.c0)<<(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM t0 INNER JOIN vt1 ON vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (x'') GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (x''))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((x'') ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, t2.c0 FROM t2 NATURAL JOIN vt1 GROUP BY vt1.c0, t2.c0;
SELECT vt1.c0, t2.c0 FROM t2 NATURAL JOIN vt1 GROUP BY vt1.c0, t2.c0 HAVING CAST(GROUP_CONCAT(MIN(vt1.c0)) AS TEXT) UNION ALL SELECT ALL vt1.c0, t2.c0 FROM t2 NATURAL JOIN vt1 GROUP BY vt1.c0, t2.c0 HAVING (NOT (CAST(GROUP_CONCAT(MIN(vt1.c0)) AS TEXT))) UNION ALL SELECT ALL vt1.c0, t2.c0 FROM t2 NATURAL JOIN vt1 GROUP BY vt1.c0, t2.c0 HAVING ((CAST(GROUP_CONCAT(MIN(vt1.c0)) AS TEXT)) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0 INDEXED BY i39 RIGHT OUTER JOIN t2 ON TYPEOF(DISTINCT vt1.c0) COLLATE NOCASE INNER JOIN t0 ON (((t2.c0)) BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t0.c0))))) AND (((((NULL)) BETWEEN ((t2.c0)) AND ((vt0.c0)))))) INNER JOIN vt1 ON ((CAST(vt0.c1 AS INTEGER))IS NOT((((vt1.c0))<>((x'')))));
SELECT DISTINCT t0.c0, vt0.c1 FROM vt0, t0, t2;
SELECT DISTINCT t0.c0, vt0.c1 FROM vt0, t0, t2 WHERE (((vt0.c0 COLLATE BINARY)+(((0.7899395603786583)-(t2.c0))))) UNION SELECT DISTINCT t0.c0, vt0.c1 FROM vt0, t0, t2 WHERE ((NOT (((vt0.c0 COLLATE BINARY)+(((0.7899395603786583)-(t2.c0))))))) UNION SELECT DISTINCT t0.c0, vt0.c1 FROM vt0, t0, t2 WHERE (((((vt0.c0 COLLATE BINARY)+(((0.7899395603786583)-(t2.c0))))) ISNULL));
SELECT DISTINCT t0.c0, vt0.c1 FROM vt0, t0, t2;
SELECT ALL t2.c0, vt0.c1 FROM vt0, vt1, t2 GROUP BY t2.c0, vt0.c1;
SELECT ALL t2.c0, vt0.c1 FROM vt0, vt1, t2 WHERE ((((((t2.c0 IN (vt0.c1)))OR((((vt0.c1)) BETWEEN ((t2.c0)) AND ((vt0.c0))))))AND(CASE t2.c0  WHEN vt0.c1 THEN vt1.c0 END))) GROUP BY t2.c0, vt0.c1 UNION SELECT ALL t2.c0, vt0.c1 FROM vt0, vt1, t2 WHERE ((NOT ((((((t2.c0 IN (vt0.c1)))OR((((vt0.c1)) BETWEEN ((t2.c0)) AND ((vt0.c0))))))AND(CASE t2.c0  WHEN vt0.c1 THEN vt1.c0 END))))) GROUP BY t2.c0, vt0.c1 UNION SELECT ALL t2.c0, vt0.c1 FROM vt0, vt1, t2 WHERE ((((((((t2.c0 IN (vt0.c1)))OR((((vt0.c1)) BETWEEN ((t2.c0)) AND ((vt0.c0))))))AND(CASE t2.c0  WHEN vt0.c1 THEN vt1.c0 END))) ISNULL)) GROUP BY t2.c0, vt0.c1;
SELECT ALL t2.c0, vt0.c1 FROM vt0, vt1, t2 GROUP BY t2.c0, vt0.c1;
SELECT t2.c0, vt1.c0, t0.c0 FROM t2, t0, vt1 GROUP BY t2.c0, vt1.c0, t0.c0;
SELECT t2.c0, vt1.c0, t0.c0 FROM t2, t0, vt1 GROUP BY t2.c0, vt1.c0, t0.c0 HAVING t0.c0 UNION ALL SELECT ALL t2.c0, vt1.c0, t0.c0 FROM t2, t0, vt1 GROUP BY t2.c0, vt1.c0, t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t2.c0, vt1.c0, t0.c0 FROM t2, t0, vt1 GROUP BY t2.c0, vt1.c0, t0.c0 HAVING ((t0.c0) ISNULL);
SELECT t2.c0, vt1.c0, t0.c0 FROM t2, t0, vt1 GROUP BY t2.c0, vt1.c0, t0.c0;
SELECT t2.c0, vt1.c0, t0.c0 FROM t2, t0, vt1 GROUP BY t2.c0, vt1.c0, t0.c0 HAVING t0.c0 UNION ALL SELECT ALL t2.c0, vt1.c0, t0.c0 FROM t2, t0, vt1 GROUP BY t2.c0, vt1.c0, t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t2.c0, vt1.c0, t0.c0 FROM t2, t0, vt1 GROUP BY t2.c0, vt1.c0, t0.c0 HAVING ((t0.c0) ISNULL);
SELECT t2.c0, vt1.c0, t0.c0 FROM t2, t0, vt1 GROUP BY t2.c0, vt1.c0, t0.c0;
SELECT vt0.c1, vt1.c0, t0.c0 FROM t0, t2, vt0, vt1;
SELECT vt0.c1, vt1.c0, t0.c0 FROM t0, t2, vt0, vt1 WHERE (((t2.c0)LIKE(vt1.c0)) COLLATE NOCASE) UNION ALL SELECT vt0.c1, vt1.c0, t0.c0 FROM t0, t2, vt0, vt1 WHERE ((NOT (((t2.c0)LIKE(vt1.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c1, vt1.c0, t0.c0 FROM t0, t2, vt0, vt1 WHERE (((((t2.c0)LIKE(vt1.c0)) COLLATE NOCASE) ISNULL));
SELECT vt0.c1, vt1.c0, t0.c0 FROM t0, t2, vt0, vt1;
SELECT DISTINCT t2.c0, t0.c0, vt0.c1, vt1.c0 FROM t2, t0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)<(vt1.c0 COLLATE NOCASE)) CROSS JOIN vt0 ON ((NULL)OR(vt1.c0 COLLATE BINARY));
SELECT DISTINCT t2.c0, t0.c0, vt0.c1, vt1.c0 FROM t2, t0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)<(vt1.c0 COLLATE NOCASE)) CROSS JOIN vt0 ON ((NULL)OR(vt1.c0 COLLATE BINARY)) WHERE (t2.c0) UNION SELECT DISTINCT t2.c0, t0.c0, vt0.c1, vt1.c0 FROM t2, t0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)<(vt1.c0 COLLATE NOCASE)) CROSS JOIN vt0 ON ((NULL)OR(vt1.c0 COLLATE BINARY)) WHERE ((NOT (t2.c0))) UNION SELECT DISTINCT t2.c0, t0.c0, vt0.c1, vt1.c0 FROM t2, t0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)<(vt1.c0 COLLATE NOCASE)) CROSS JOIN vt0 ON ((NULL)OR(vt1.c0 COLLATE BINARY)) WHERE (((t2.c0) ISNULL));
SELECT DISTINCT t2.c0, t0.c0, vt0.c1, vt1.c0 FROM t2, t0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)<(vt1.c0 COLLATE NOCASE)) CROSS JOIN vt0 ON ((NULL)OR(vt1.c0 COLLATE BINARY));
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE (t2.c0) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT (t2.c0))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE (((t2.c0) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(GROUP_CONCAT(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(GROUP_CONCAT(vt1.c0))) ISNULL);
SELECT ALL * FROM vt1, vt0, t0 FULL OUTER JOIN t2 ON ((CASE WHEN t2.c0 THEN vt0.c1 ELSE t0.c0 END)*(((vt1.c0) IS FALSE)));
SELECT ALL * FROM vt1, vt0, t0 FULL OUTER JOIN t2 ON ((CASE WHEN t2.c0 THEN vt0.c1 ELSE t0.c0 END)*(((vt1.c0) IS FALSE))) WHERE (x'') UNION ALL SELECT * FROM vt1, vt0, t0 FULL OUTER JOIN t2 ON ((CASE WHEN t2.c0 THEN vt0.c1 ELSE t0.c0 END)*(((vt1.c0) IS FALSE))) WHERE ((NOT (x''))) UNION ALL SELECT * FROM vt1, vt0, t0 FULL OUTER JOIN t2 ON ((CASE WHEN t2.c0 THEN vt0.c1 ELSE t0.c0 END)*(((vt1.c0) IS FALSE))) WHERE (((x'') ISNULL));
SELECT ALL * FROM vt1, vt0, t0 FULL OUTER JOIN t2 ON ((CASE WHEN t2.c0 THEN vt0.c1 ELSE t0.c0 END)*(((vt1.c0) IS FALSE)));
SELECT DISTINCT * FROM t0, t2, vt0, vt1;
SELECT DISTINCT * FROM t0, t2, vt0, vt1 WHERE (CASE UNLIKELY(DISTINCT vt0.c0)  WHEN ((vt0.c0)<<(t0.c0)) THEN (((NULL)) BETWEEN ((vt0.c1)) AND ((t0.c0))) END) UNION SELECT DISTINCT * FROM t0, t2, vt0, vt1 WHERE ((NOT (CASE UNLIKELY(DISTINCT vt0.c0)  WHEN ((vt0.c0)<<(t0.c0)) THEN (((NULL)) BETWEEN ((vt0.c1)) AND ((t0.c0))) END))) UNION SELECT DISTINCT * FROM t0, t2, vt0, vt1 WHERE (((CASE UNLIKELY(DISTINCT vt0.c0)  WHEN ((vt0.c0)<<(t0.c0)) THEN (((NULL)) BETWEEN ((vt0.c1)) AND ((t0.c0))) END) ISNULL));
SELECT DISTINCT * FROM t0, t2, vt0, vt1;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, t2, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt0, t2, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) BETWEEN (((t2.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((((vt0.c0)OR(t2.c0)))AND(vt0.c0))))) GROUP BY vt0.c1, vt1.c0, vt0.c0 UNION SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, t2, vt1 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) BETWEEN (((t2.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((((vt0.c0)OR(t2.c0)))AND(vt0.c0))))))) GROUP BY vt0.c1, vt1.c0, vt0.c0 UNION SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt0, t2, vt1 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) BETWEEN (((t2.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((((vt0.c0)OR(t2.c0)))AND(vt0.c0))))) ISNULL)) GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, t2, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT vt0.c0, vt1.c0, t2.c0, vt0.c1 FROM vt0, t2, vt1 GROUP BY vt0.c0, vt1.c0, t2.c0, vt0.c1;
SELECT vt0.c0, vt1.c0, t2.c0, vt0.c1 FROM vt0, t2, vt1 GROUP BY vt0.c0, vt1.c0, t2.c0, vt0.c1 HAVING COUNT(COUNT(*)) UNION ALL SELECT vt0.c0, vt1.c0, t2.c0, vt0.c1 FROM vt0, t2, vt1 GROUP BY vt0.c0, vt1.c0, t2.c0, vt0.c1 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT vt0.c0, vt1.c0, t2.c0, vt0.c1 FROM vt0, t2, vt1 GROUP BY vt0.c0, vt1.c0, t2.c0, vt0.c1 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT t0.c0, vt1.c0, t2.c0, vt0.c0 FROM t0, vt1, t2, vt0;
SELECT ALL t0.c0, vt1.c0, t2.c0, vt0.c0 FROM t0, vt1, t2, vt0 WHERE (((t2.c0)|(TRIM(t2.c0)))) UNION ALL SELECT ALL t0.c0, vt1.c0, t2.c0, vt0.c0 FROM t0, vt1, t2, vt0 WHERE ((NOT (((t2.c0)|(TRIM(t2.c0)))))) UNION ALL SELECT t0.c0, vt1.c0, t2.c0, vt0.c0 FROM t0, vt1, t2, vt0 WHERE (((((t2.c0)|(TRIM(t2.c0)))) ISNULL));
SELECT t0.c0, vt1.c0, t2.c0, vt0.c0 FROM t0, vt1, t2, vt0;
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE (t2.c0) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT (t2.c0))) UNION SELECT DISTINCT t2.c0 FROM t2 NOT INDEXED WHERE (((t2.c0) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 FULL OUTER JOIN t2 ON TRIM(DISTINCT ((((((((((((vt1.c0)OR(t2.c0)))OR(vt0.c0)))AND('')))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), ((t2.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))) INNER JOIN vt1 ON vt0.c1 GROUP BY vt1.c0, vt0.c0;
SELECT vt0.c1, vt1.c0, vt0.c0, t0.c0, t2.c0 FROM t2, vt0, t0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0, t0.c0, t2.c0;
SELECT vt0.c1, vt1.c0, vt0.c0, t0.c0, t2.c0 FROM t2, vt0, t0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0, t0.c0, t2.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0, t0.c0, t2.c0 FROM t2, vt0, t0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0, t0.c0, t2.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0, t0.c0, t2.c0 FROM t2, vt0, t0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0, t0.c0, t2.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL vt0.c0, t0.c0, vt0.c1, t2.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((t0.c0)%(t0.c0)))%(x'')) FULL OUTER JOIN t2 ON ((vt0.c0) IS FALSE) LEFT OUTER JOIN t0 ON (((CASE WHEN vt0.c0 THEN x'' WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN t2.c0 END, (((vt0.c0))<((t0.c0))), (- (t2.c0))))<>((((vt0.c0)OR(t2.c0)), x'', CASE WHEN t2.c0 THEN vt0.c1 END)));
SELECT DISTINCT * FROM vt0, t2, vt1 NATURAL JOIN t0;
SELECT DISTINCT * FROM vt0, t2, vt1 NATURAL JOIN t0 WHERE (((((((((NULL)AND(-1598042699 COLLATE NOCASE)))OR(((t0.c0)>(vt0.c0)))))OR((((t2.c0, vt0.c1, vt1.c0))<((vt0.c0, vt0.c1, vt1.c0))))))OR(((vt0.c0)==(vt1.c0))))) UNION SELECT DISTINCT * FROM vt0, t2, vt1 NATURAL JOIN t0 WHERE ((NOT (((((((((NULL)AND(-1598042699 COLLATE NOCASE)))OR(((t0.c0)>(vt0.c0)))))OR((((t2.c0, vt0.c1, vt1.c0))<((vt0.c0, vt0.c1, vt1.c0))))))OR(((vt0.c0)==(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt0, t2, vt1 NATURAL JOIN t0 WHERE (((((((((((NULL)AND(-1598042699 COLLATE NOCASE)))OR(((t0.c0)>(vt0.c0)))))OR((((t2.c0, vt0.c1, vt1.c0))<((vt0.c0, vt0.c1, vt1.c0))))))OR(((vt0.c0)=(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, t2, vt1 NATURAL JOIN t0;
SELECT ALL vt0.c1, t2.c0 FROM vt0, t2 GROUP BY vt0.c1, t2.c0;
SELECT vt0.c1, t2.c0 FROM vt0, t2 WHERE (((((vt0.c1)*(x'235d')))*(NULL))) GROUP BY vt0.c1, t2.c0 UNION SELECT vt0.c1, t2.c0 FROM vt0, t2 WHERE ((NOT (((((vt0.c1)*(x'235d')))*(NULL))))) GROUP BY vt0.c1, t2.c0 UNION SELECT ALL vt0.c1, t2.c0 FROM vt0, t2 WHERE (((((((vt0.c1)*(x'235d')))*(NULL))) ISNULL)) GROUP BY vt0.c1, t2.c0;
SELECT ALL vt0.c1, t2.c0 FROM vt0, t2 GROUP BY vt0.c1, t2.c0;
SELECT t2.c0, t0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN t2 ON DATE((t0.c0 IN (t2.c0)), vt1.c0 COLLATE BINARY, x'' COLLATE BINARY) CROSS JOIN t0 ON (((t2.c0) IS FALSE) IN ()) GROUP BY t2.c0, t0.c0, vt1.c0;
SELECT ALL t2.c0, t0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN t2 ON DATE((t0.c0 IN (t2.c0)), vt1.c0 COLLATE BINARY, x'' COLLATE BINARY) CROSS JOIN t0 ON (((t2.c0) IS FALSE) IN ()) GROUP BY t2.c0, t0.c0, vt1.c0 HAVING MIN(((((MAX(TOTAL(MAX(GROUP_CONCAT(vt1.c0)))))AND(t2.c0)))OR(t0.c0))) UNION ALL SELECT t2.c0, t0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN t2 ON DATE((t0.c0 IN (t2.c0)), vt1.c0 COLLATE BINARY, x'' COLLATE BINARY) CROSS JOIN t0 ON (((t2.c0) IS FALSE) IN ()) GROUP BY t2.c0, t0.c0, vt1.c0 HAVING (NOT (MIN(((((MAX(TOTAL(MAX(GROUP_CONCAT(vt1.c0)))))AND(t2.c0)))OR(t0.c0))))) UNION ALL SELECT ALL t2.c0, t0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN t2 ON DATE((t0.c0 IN (t2.c0)), vt1.c0 COLLATE BINARY, x'' COLLATE BINARY) CROSS JOIN t0 ON (((t2.c0) IS FALSE) IN ()) GROUP BY t2.c0, t0.c0, vt1.c0 HAVING ((MIN(((((MAX(TOTAL(MAX(GROUP_CONCAT(vt1.c0)))))AND(t2.c0)))OR(t0.c0)))) ISNULL);
SELECT ALL * FROM t2, vt0, vt1, t0;
SELECT * FROM t2, vt0, vt1, t0 WHERE (((((((((((t0.c0) BETWEEN (t2.c0) AND (vt0.c0)))AND(((t2.c0)<(vt1.c0)))))OR(CAST(t2.c0 AS INTEGER))))OR(t0.c0)))OR(((t2.c0) BETWEEN (t0.c0) AND (0.7678897667325182))))) UNION ALL SELECT * FROM t2, vt0, vt1, t0 WHERE ((NOT (((((((((((t0.c0) BETWEEN (t2.c0) AND (vt0.c0)))AND(((t2.c0)<(vt1.c0)))))OR(CAST(t2.c0 AS INTEGER))))OR(t0.c0)))OR(((t2.c0) BETWEEN (t0.c0) AND (0.7678897667325182))))))) UNION ALL SELECT * FROM t2, vt0, vt1, t0 WHERE (((((((((((((t0.c0) BETWEEN (t2.c0) AND (vt0.c0)))AND(((t2.c0)<(vt1.c0)))))OR(CAST(t2.c0 AS INTEGER))))OR(t0.c0)))OR(((t2.c0) BETWEEN (t0.c0) AND (0.7678897667325182))))) ISNULL));
SELECT ALL * FROM t2, vt0, vt1, t0;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN t2 ON ABS(CASE WHEN vt0.c1 THEN t2.c0 WHEN vt0.c1 THEN vt0.c1 WHEN t2.c0 THEN vt0.c0 END) INNER JOIN vt0 ON ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 ELSE -1872088111 END)+((((t2.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))));
SELECT t0.c0, vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON '' CROSS JOIN t2 ON CASE WHEN vt0.c1 COLLATE BINARY THEN (~ (vt0.c1)) WHEN (- (t2.c0)) THEN (vt0.c1 IN (vt0.c0)) WHEN CASE vt0.c0  WHEN t2.c0 THEN vt0.c0 ELSE t2.c0 END THEN ((t0.c0)||(vt0.c0)) WHEN ((t0.c0) IS FALSE) THEN (((vt0.c0)) BETWEEN ((t2.c0)) AND ((vt1.c0))) WHEN ((t0.c0)/(t2.c0)) THEN (+ (vt1.c0)) ELSE (('G|~q''gz') ISNULL) END INNER JOIN t0 ON '-667336744' GROUP BY t0.c0, vt1.c0, vt0.c0;
SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON '' CROSS JOIN t2 ON CASE WHEN vt0.c1 COLLATE BINARY THEN (~ (vt0.c1)) WHEN (- (t2.c0)) THEN (vt0.c1 IN (vt0.c0)) WHEN CASE vt0.c0  WHEN t2.c0 THEN vt0.c0 ELSE t2.c0 END THEN ((t0.c0)||(vt0.c0)) WHEN ((t0.c0) IS FALSE) THEN (((vt0.c0)) BETWEEN ((t2.c0)) AND ((vt1.c0))) WHEN ((t0.c0)/(t2.c0)) THEN (+ (vt1.c0)) ELSE (('G|~q''gz') ISNULL) END INNER JOIN t0 ON '-667336744' WHERE (((vt0.c0 IN ()) IN ())) GROUP BY t0.c0, vt1.c0, vt0.c0 UNION SELECT t0.c0, vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON '' CROSS JOIN t2 ON CASE WHEN vt0.c1 COLLATE BINARY THEN (~ (vt0.c1)) WHEN (- (t2.c0)) THEN (vt0.c1 IN (vt0.c0)) WHEN CASE vt0.c0  WHEN t2.c0 THEN vt0.c0 ELSE t2.c0 END THEN ((t0.c0)||(vt0.c0)) WHEN ((t0.c0) IS FALSE) THEN (((vt0.c0)) BETWEEN ((t2.c0)) AND ((vt1.c0))) WHEN ((t0.c0)/(t2.c0)) THEN (+ (vt1.c0)) ELSE (('G|~q''gz') ISNULL) END INNER JOIN t0 ON '-667336744' WHERE ((NOT (((vt0.c0 IN ()) IN ())))) GROUP BY t0.c0, vt1.c0, vt0.c0 UNION SELECT t0.c0, vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON '' CROSS JOIN t2 ON CASE WHEN vt0.c1 COLLATE BINARY THEN (~ (vt0.c1)) WHEN (- (t2.c0)) THEN (vt0.c1 IN (vt0.c0)) WHEN CASE vt0.c0  WHEN t2.c0 THEN vt0.c0 ELSE t2.c0 END THEN ((t0.c0)||(vt0.c0)) WHEN ((t0.c0) IS FALSE) THEN (((vt0.c0)) BETWEEN ((t2.c0)) AND ((vt1.c0))) WHEN ((t0.c0)/(t2.c0)) THEN (+ (vt1.c0)) ELSE (('G|~q''gz') ISNULL) END INNER JOIN t0 ON '-667336744' WHERE (((((vt0.c0 IN ()) IN ())) ISNULL)) GROUP BY t0.c0, vt1.c0, vt0.c0;
SELECT t0.c0, vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON '' CROSS JOIN t2 ON CASE WHEN vt0.c1 COLLATE BINARY THEN (~ (vt0.c1)) WHEN (- (t2.c0)) THEN (vt0.c1 IN (vt0.c0)) WHEN CASE vt0.c0  WHEN t2.c0 THEN vt0.c0 ELSE t2.c0 END THEN ((t0.c0)||(vt0.c0)) WHEN ((t0.c0) IS FALSE) THEN (((vt0.c0)) BETWEEN ((t2.c0)) AND ((vt1.c0))) WHEN ((t0.c0)/(t2.c0)) THEN (+ (vt1.c0)) ELSE (('G|~q''gz') ISNULL) END INNER JOIN t0 ON '-667336744' GROUP BY t0.c0, vt1.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c1, t2.c0, vt0.c0, vt1.c0 FROM t2, t0, vt1 LEFT OUTER JOIN vt0 ON vt1.c0 GROUP BY t0.c0, vt0.c1, t2.c0, vt0.c0, vt1.c0;
SELECT ALL t0.c0, vt0.c1, t2.c0, vt0.c0, vt1.c0 FROM t2, t0, vt1 LEFT OUTER JOIN vt0 ON vt1.c0 GROUP BY t0.c0, vt0.c1, t2.c0, vt0.c0, vt1.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT t0.c0, vt0.c1, t2.c0, vt0.c0, vt1.c0 FROM t2, t0, vt1 LEFT OUTER JOIN vt0 ON vt1.c0 GROUP BY t0.c0, vt0.c1, t2.c0, vt0.c0, vt1.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT t0.c0, vt0.c1, t2.c0, vt0.c0, vt1.c0 FROM t2, t0, vt1 LEFT OUTER JOIN vt0 ON vt1.c0 GROUP BY t0.c0, vt0.c1, t2.c0, vt0.c0, vt1.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT * FROM vt1 LEFT OUTER JOIN t0 ON ((((vt1.c0)GLOB(t0.c0)))<((- (t0.c0))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON ((((vt1.c0)GLOB(t0.c0)))<((- (t0.c0)))) WHERE (vt1.c0) UNION ALL SELECT * FROM vt1 LEFT OUTER JOIN t0 ON ((((vt1.c0)GLOB(t0.c0)))<((- (t0.c0)))) WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON ((((vt1.c0)GLOB(t0.c0)))<((- (t0.c0)))) WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt1 LEFT OUTER JOIN t0 ON ((((vt1.c0)GLOB(t0.c0)))<((- (t0.c0))));
SELECT DISTINCT t0.c0, t2.c0, vt0.c1, vt0.c0 FROM t2, t0, vt0;
SELECT DISTINCT t0.c0, t2.c0, vt0.c1, vt0.c0 FROM t2, t0 NOT INDEXED, vt0 WHERE ((((vt0.c1 IN ())) ISNULL)) UNION SELECT DISTINCT t0.c0, t2.c0, vt0.c1, vt0.c0 FROM t2, t0, vt0 WHERE ((NOT ((((vt0.c1 IN ())) ISNULL)))) UNION SELECT DISTINCT t0.c0, t2.c0, vt0.c1, vt0.c0 FROM t2, t0, vt0 WHERE ((((((vt0.c1 IN ())) ISNULL)) ISNULL));
SELECT DISTINCT t0.c0, t2.c0, vt0.c1, vt0.c0 FROM t2, t0, vt0;
SELECT ALL vt0.c1, vt1.c0, vt0.c0, t2.c0 FROM t2, t0, vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0, t2.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.c0, t2.c0 FROM t2, t0, vt0, vt1 WHERE (UNLIKELY(RTRIM(t0.c0))) GROUP BY vt0.c1, vt1.c0, vt0.c0, t2.c0 UNION SELECT ALL vt0.c1, vt1.c0, vt0.c0, t2.c0 FROM t2, t0, vt0, vt1 WHERE ((NOT (UNLIKELY(RTRIM(t0.c0))))) GROUP BY vt0.c1, vt1.c0, vt0.c0, t2.c0 UNION SELECT vt0.c1, vt1.c0, vt0.c0, t2.c0 FROM t2, t0, vt0, vt1 WHERE (((UNLIKELY(RTRIM(t0.c0))) ISNULL)) GROUP BY vt0.c1, vt1.c0, vt0.c0, t2.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.c0, t2.c0 FROM t2, t0, vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0, t2.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((NOT (MIN(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((NOT (MIN(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((NOT (MIN(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((NOT (MIN(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c0 FROM t2, t0;
SELECT ALL t0.c0 FROM t2, t0 WHERE (t2.c0) UNION ALL SELECT t0.c0 FROM t2, t0 WHERE ((NOT (t2.c0))) UNION ALL SELECT ALL t0.c0 FROM t2, t0 WHERE (((t2.c0) ISNULL));
SELECT t0.c0 FROM t2, t0;
SELECT DISTINCT t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (((~ (vt0.c1)))+(((vt0.c0)<=(vt0.c0))));
SELECT DISTINCT t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (((~ (vt0.c1)))+(((vt0.c0)<=(vt0.c0)))) WHERE (((t0.c0)LIKE(vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (((~ (vt0.c1)))+(((vt0.c0)<=(vt0.c0)))) WHERE ((NOT (((t0.c0)LIKE(vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (((~ (vt0.c1)))+(((vt0.c0)<=(vt0.c0)))) WHERE (((((t0.c0)LIKE(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT t0.c0 FROM vt0 RIGHT OUTER JOIN t0 ON (((~ (vt0.c1)))+(((vt0.c0)<=(vt0.c0))));
SELECT vt0.c0, t2.c0, vt0.c1, vt1.c0 FROM t0 NOT INDEXED, vt0, t2, vt1 GROUP BY vt0.c0, t2.c0, vt0.c1, vt1.c0;
SELECT vt0.c0, t2.c0, vt0.c1, vt1.c0 FROM t0, vt0, t2, vt1 WHERE (((((vt0.c0 COLLATE NOCASE)OR(((t2.c0) IS TRUE))))AND(vt0.c0 COLLATE RTRIM))) GROUP BY vt0.c0, t2.c0, vt0.c1, vt1.c0 UNION SELECT vt0.c0, t2.c0, vt0.c1, vt1.c0 FROM t0, vt0, t2, vt1 WHERE ((NOT (((((vt0.c0 COLLATE NOCASE)OR(((t2.c0) IS TRUE))))AND(vt0.c0 COLLATE RTRIM))))) GROUP BY vt0.c0, t2.c0, vt0.c1, vt1.c0 UNION SELECT vt0.c0, t2.c0, vt0.c1, vt1.c0 FROM t0, vt0, t2, vt1 WHERE (((((((vt0.c0 COLLATE NOCASE)OR(((t2.c0) IS TRUE))))AND(vt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c0, t2.c0, vt0.c1, vt1.c0;
SELECT vt0.c0, t2.c0, vt0.c1, vt1.c0 FROM t0 NOT INDEXED, vt0, t2, vt1 GROUP BY vt0.c0, t2.c0, vt0.c1, vt1.c0;
SELECT ALL vt1.c0, vt0.c1 FROM vt1, t2 LEFT OUTER JOIN vt0 ON (NOT (((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)))) GROUP BY vt1.c0, vt0.c1;
SELECT vt1.c0, vt0.c1 FROM vt1, t2 LEFT OUTER JOIN vt0 ON (NOT (((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)))) GROUP BY vt1.c0, vt0.c1 HAVING (+ ('' COLLATE NOCASE)) UNION ALL SELECT ALL vt1.c0, vt0.c1 FROM vt1, t2 LEFT OUTER JOIN vt0 ON (NOT (((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)))) GROUP BY vt1.c0, vt0.c1 HAVING (NOT ((+ ('' COLLATE NOCASE)))) UNION ALL SELECT ALL vt1.c0, vt0.c1 FROM vt1, t2 LEFT OUTER JOIN vt0 ON (NOT (((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)))) GROUP BY vt1.c0, vt0.c1 HAVING (((+ ('' COLLATE NOCASE))) ISNULL);
SELECT ALL vt1.c0, vt0.c1 FROM vt1, t2 LEFT OUTER JOIN vt0 ON (NOT (((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)))) GROUP BY vt1.c0, vt0.c1;
SELECT vt1.c0, vt0.c1 FROM vt1, t2 LEFT OUTER JOIN vt0 ON (NOT (((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)))) GROUP BY vt1.c0, vt0.c1 HAVING (+ ('' COLLATE NOCASE)) UNION ALL SELECT ALL vt1.c0, vt0.c1 FROM vt1, t2 LEFT OUTER JOIN vt0 ON (NOT (((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)))) GROUP BY vt1.c0, vt0.c1 HAVING (NOT ((+ ('' COLLATE NOCASE)))) UNION ALL SELECT ALL vt1.c0, vt0.c1 FROM vt1, t2 LEFT OUTER JOIN vt0 ON (NOT (((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)))) GROUP BY vt1.c0, vt0.c1 HAVING (((+ ('' COLLATE NOCASE))) ISNULL);
SELECT ALL vt1.c0, vt0.c1 FROM vt1, t2 LEFT OUTER JOIN vt0 ON (NOT (((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)))) GROUP BY vt1.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c1)/(vt0.c0))) AND ((vt0.c1 IN ())))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c1)/(vt0.c0))) AND ((vt0.c1 IN ())))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c1)/(vt0.c0))) AND ((vt0.c1 IN ())))) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT (t2.c0))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT ((NOT (t2.c0))))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((((NOT (t2.c0))) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT vt1.c0, vt0.c1, vt0.c0, t0.c0 FROM t0, vt1 CROSS JOIN vt0 ON ((((vt1.c0) ISNULL))>=(vt0.c0)) LEFT OUTER JOIN t2 ON (((((((vt0.c1, t2.c0, vt0.c0))>=((t0.c0, t2.c0, t0.c0))))AND((t0.c0 IN ()))))AND(((((vt1.c0)AND(vt0.c1)))OR(vt0.c0)))) GROUP BY vt1.c0, vt0.c1, vt0.c0, t0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0, t0.c0 FROM t0, vt1 CROSS JOIN vt0 ON ((((vt1.c0) ISNULL))>=(vt0.c0)) LEFT OUTER JOIN t2 ON (((((((vt0.c1, t2.c0, vt0.c0))>=((t0.c0, t2.c0, t0.c0))))AND((t0.c0 IN ()))))AND(((((vt1.c0)AND(vt0.c1)))OR(vt0.c0)))) WHERE (((((t0.c0)<<(vt0.c1)))=(CASE t2.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) GROUP BY vt1.c0, vt0.c1, vt0.c0, t0.c0 UNION SELECT vt1.c0, vt0.c1, vt0.c0, t0.c0 FROM t0, vt1 CROSS JOIN vt0 ON ((((vt1.c0) ISNULL))>=(vt0.c0)) LEFT OUTER JOIN t2 ON (((((((vt0.c1, t2.c0, vt0.c0))>=((t0.c0, t2.c0, t0.c0))))AND((t0.c0 IN ()))))AND(((((vt1.c0)AND(vt0.c1)))OR(vt0.c0)))) WHERE ((NOT (((((t0.c0)<<(vt0.c1)))=(CASE t2.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))))) GROUP BY vt1.c0, vt0.c1, vt0.c0, t0.c0 UNION SELECT vt1.c0, vt0.c1, vt0.c0, t0.c0 FROM t0, vt1 CROSS JOIN vt0 ON ((((vt1.c0) ISNULL))>=(vt0.c0)) LEFT OUTER JOIN t2 ON (((((((vt0.c1, t2.c0, vt0.c0))>=((t0.c0, t2.c0, t0.c0))))AND((t0.c0 IN ()))))AND(((((vt1.c0)AND(vt0.c1)))OR(vt0.c0)))) WHERE (((((((t0.c0)<<(vt0.c1)))=(CASE t2.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) ISNULL)) GROUP BY vt1.c0, vt0.c1, vt0.c0, t0.c0;
SELECT vt1.c0, vt0.c1, vt0.c0, t0.c0 FROM t0, vt1 CROSS JOIN vt0 ON ((((vt1.c0) ISNULL))>=(vt0.c0)) LEFT OUTER JOIN t2 ON (((((((vt0.c1, t2.c0, vt0.c0))>=((t0.c0, t2.c0, t0.c0))))AND((t0.c0 IN ()))))AND(((((vt1.c0)AND(vt0.c1)))OR(vt0.c0)))) GROUP BY vt1.c0, vt0.c1, vt0.c0, t0.c0;
SELECT ALL vt0.c1, t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON (t0.c0 COLLATE BINARY IN (vt0.c0 COLLATE NOCASE)) GROUP BY vt0.c1, t0.c0, vt0.c0;
SELECT vt0.c1, t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON (t0.c0 COLLATE BINARY IN (vt0.c0 COLLATE NOCASE)) GROUP BY vt0.c1, t0.c0, vt0.c0 HAVING ((((vt0.c0, COUNT(*), COUNT(*)))<=((vt0.c1, vt0.c0, GROUP_CONCAT(GROUP_CONCAT(MAX(0.4625574301811215)))))) IN (CASE WHEN GROUP_CONCAT(0Xe373273) THEN MIN(t0.c0) ELSE SUM(COUNT(vt0.c0)) END)) UNION ALL SELECT vt0.c1, t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON (t0.c0 COLLATE BINARY IN (vt0.c0 COLLATE NOCASE)) GROUP BY vt0.c1, t0.c0, vt0.c0 HAVING (NOT (((((vt0.c0, COUNT(*), COUNT(*)))<=((vt0.c1, vt0.c0, GROUP_CONCAT(GROUP_CONCAT(MAX(0.4625574301811215)))))) IN (CASE WHEN GROUP_CONCAT(0Xe373273) THEN MIN(t0.c0) ELSE SUM(COUNT(vt0.c0)) END)))) UNION ALL SELECT vt0.c1, t0.c0, vt0.c0 FROM t0 INNER JOIN vt0 ON (t0.c0 COLLATE BINARY IN (vt0.c0 COLLATE NOCASE)) GROUP BY vt0.c1, t0.c0, vt0.c0 HAVING ((((((vt0.c0, COUNT(*), COUNT(*)))<=((vt0.c1, vt0.c0, GROUP_CONCAT(GROUP_CONCAT(MAX(0.4625574301811215)))))) IN (CASE WHEN GROUP_CONCAT(0xe373273) THEN MIN(t0.c0) ELSE SUM(COUNT(vt0.c0)) END))) ISNULL);
SELECT ALL * FROM t0, vt1, t2 FULL OUTER JOIN vt0 ON CAST(HEX(vt1.c0) AS REAL);
SELECT ALL * FROM t0 NOT INDEXED, vt1, t2 FULL OUTER JOIN vt0 ON CAST(HEX(vt1.c0) AS REAL) WHERE ((((t0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (vt1.c0)), CAST(NULL AS TEXT), (NOT (vt1.c0)))) AND (((+ (vt0.c0)), vt0.c1, (((vt0.c0, vt1.c0, t0.c0)) BETWEEN ((vt0.c0, vt0.c0, t0.c0)) AND ((vt0.c1, t2.c0, vt1.c0))))))) UNION ALL SELECT * FROM t0, vt1, t2 FULL OUTER JOIN vt0 ON CAST(HEX(vt1.c0) AS REAL) WHERE ((NOT ((((t0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (vt1.c0)), CAST(NULL AS TEXT), (NOT (vt1.c0)))) AND (((+ (vt0.c0)), vt0.c1, (((vt0.c0, vt1.c0, t0.c0)) BETWEEN ((vt0.c0, vt0.c0, t0.c0)) AND ((vt0.c1, t2.c0, vt1.c0))))))))) UNION ALL SELECT * FROM t0, vt1, t2 FULL OUTER JOIN vt0 ON CAST(HEX(vt1.c0) AS REAL) WHERE ((((((t0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (vt1.c0)), CAST(NULL AS TEXT), (NOT (vt1.c0)))) AND (((+ (vt0.c0)), vt0.c1, (((vt0.c0, vt1.c0, t0.c0)) BETWEEN ((vt0.c0, vt0.c0, t0.c0)) AND ((vt0.c1, t2.c0, vt1.c0))))))) ISNULL));
SELECT ALL * FROM t0, vt1, t2 FULL OUTER JOIN vt0 ON CAST(HEX(vt1.c0) AS REAL);
SELECT DISTINCT vt0.c1, t2.c0, t0.c0 FROM vt0, vt1 INNER JOIN t2 ON (- (((t0.c0) ISNULL))) LEFT OUTER JOIN t0 ON (((t2.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) COLLATE BINARY;
SELECT DISTINCT vt0.c1, t2.c0, t0.c0 FROM vt0, vt1 INNER JOIN t2 ON (- (((t0.c0) ISNULL))) LEFT OUTER JOIN t0 ON (((t2.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) COLLATE BINARY WHERE (vt1.c0) UNION SELECT DISTINCT vt0.c1, t2.c0, t0.c0 FROM vt0, vt1 INNER JOIN t2 ON (- (((t0.c0) ISNULL))) LEFT OUTER JOIN t0 ON (((t2.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) COLLATE BINARY WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt0.c1, t2.c0, t0.c0 FROM vt0, vt1 INNER JOIN t2 ON (- (((t0.c0) ISNULL))) LEFT OUTER JOIN t0 ON (((t2.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) COLLATE BINARY WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt0.c1, t2.c0, t0.c0 FROM vt0, vt1 INNER JOIN t2 ON (- (((t0.c0) ISNULL))) LEFT OUTER JOIN t0 ON (((t2.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) COLLATE BINARY;
SELECT ALL t0.c0 FROM t0, t2 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t2 WHERE (((NULL) NOT BETWEEN (((t0.c0) NOT BETWEEN ('Ly.\rp/Iml') AND (t2.c0))) AND (CAST(t2.c0 AS INTEGER)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, t2 WHERE ((NOT (((NULL) NOT BETWEEN (((t0.c0) NOT BETWEEN ('Ly.\rp/Iml') AND (t2.c0))) AND (CAST(t2.c0 AS INTEGER)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, t2 WHERE (((((NULL) NOT BETWEEN (((t0.c0) NOT BETWEEN ('Ly.\rp/Iml') AND (t2.c0))) AND (CAST(t2.c0 AS INTEGER)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t2 GROUP BY t0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(vt1.c0) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(vt1.c0)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(vt1.c0) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(vt1.c0)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE ((((+ ('dm1dh')))<(CAST(vt1.c0 AS BLOB)))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((((+ ('dm1dh')))<(CAST(vt1.c0 AS BLOB)))))) UNION ALL SELECT * FROM vt1 WHERE ((((((+ ('dm1dh')))<(CAST(vt1.c0 AS BLOB)))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE CASE WHEN NULL THEN t0.c0 END  WHEN ((t0.c0)*(t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END ELSE ((t0.c0)/(6.46138884E8)) END) UNION SELECT DISTINCT * FROM t0 NOT INDEXED WHERE ((NOT (CASE CASE WHEN NULL THEN t0.c0 END  WHEN ((t0.c0)*(t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END ELSE ((t0.c0)/(6.46138884E8)) END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE CASE WHEN NULL THEN t0.c0 END  WHEN ((t0.c0)*(t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END ELSE ((t0.c0)/(6.46138884E8)) END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0, t0.c0 FROM vt1, vt0, t2, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt1, vt0, t2, t0 WHERE ((((t2.c0 IN (vt1.c0, vt1.c0)))AND(((vt0.c0)<(t0.c0))))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt1, vt0, t2, t0 WHERE ((NOT ((((t2.c0 IN (vt1.c0, vt1.c0)))AND(((vt0.c0)<(t0.c0))))))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt1, vt0, t2, t0 WHERE ((((((t2.c0 IN (vt1.c0, vt1.c0)))AND(((vt0.c0)<(t0.c0))))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt1, vt0, t2, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0, t2 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0, t2 GROUP BY vt0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0, t2 GROUP BY vt0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt1, vt0, t2 GROUP BY vt0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT t2.c0, vt1.c0 FROM vt0, t0, t2, vt1 INDEXED BY i34;
SELECT DISTINCT * FROM t2, vt1, t0;
SELECT DISTINCT * FROM t2, vt1, t0 WHERE ((((((t2.c0))<((t0.c0)))) IS FALSE)) UNION SELECT DISTINCT * FROM t2, vt1, t0 WHERE ((NOT ((((((t2.c0))<((t0.c0)))) IS FALSE)))) UNION SELECT DISTINCT * FROM t2, vt1, t0 WHERE ((((((((t2.c0))<((t0.c0)))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t2, vt1, t0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE (((((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))) NOT BETWEEN (((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))) AND (NULL))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT (((((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))) NOT BETWEEN (((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))) AND (NULL))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE (((((((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))) NOT BETWEEN (((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))) AND (NULL))) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t0.c0, vt1.c0, t2.c0 FROM t2 RIGHT OUTER JOIN t0 ON (((t0.c0)) NOT BETWEEN (((+ (t0.c0)))) AND ((t0.c0 COLLATE RTRIM))) LEFT OUTER JOIN vt1 ON (0.647548379021721 IN (t0.c0, vt1.c0 COLLATE NOCASE)) GROUP BY t0.c0, vt1.c0, t2.c0;
SELECT ALL t0.c0, vt1.c0, t2.c0 FROM t2 RIGHT OUTER JOIN t0 ON (((t0.c0)) NOT BETWEEN (((+ (t0.c0)))) AND ((t0.c0 COLLATE RTRIM))) LEFT OUTER JOIN vt1 ON (0.647548379021721 IN (t0.c0, vt1.c0 COLLATE NOCASE)) GROUP BY t0.c0, vt1.c0, t2.c0 HAVING AVG(MAX('1653316050')) UNION ALL SELECT t0.c0, vt1.c0, t2.c0 FROM t2 RIGHT OUTER JOIN t0 ON (((t0.c0)) NOT BETWEEN (((+ (t0.c0)))) AND ((t0.c0 COLLATE RTRIM))) LEFT OUTER JOIN vt1 ON (0.647548379021721 IN (t0.c0, vt1.c0 COLLATE NOCASE)) GROUP BY t0.c0, vt1.c0, t2.c0 HAVING (NOT (AVG(MAX('1653316050')))) UNION ALL SELECT t0.c0, vt1.c0, t2.c0 FROM t2 RIGHT OUTER JOIN t0 ON (((t0.c0)) NOT BETWEEN (((+ (t0.c0)))) AND ((t0.c0 COLLATE RTRIM))) LEFT OUTER JOIN vt1 ON (0.647548379021721 IN (t0.c0, vt1.c0 COLLATE NOCASE)) GROUP BY t0.c0, vt1.c0, t2.c0 HAVING ((AVG(MAX('1653316050'))) ISNULL);
SELECT ALL * FROM t2;
SELECT ALL * FROM t2 WHERE (((NOT (t2.c0)) IN ((t2.c0 IN (0.685627955171926))))) UNION ALL SELECT * FROM t2 WHERE ((NOT (((NOT (t2.c0)) IN ((t2.c0 IN (0.685627955171926))))))) UNION ALL SELECT ALL * FROM t2 WHERE (((((NOT (t2.c0)) IN ((t2.c0 IN (0.685627955171926))))) ISNULL));
SELECT ALL * FROM t2;
SELECT DISTINCT t0.c0 FROM t0, t2, vt0, vt1;
SELECT DISTINCT t0.c0 FROM t0, t2, vt0, vt1 WHERE ((((((vt0.c0) NOT NULL)))<=(('1796232244')))) UNION SELECT DISTINCT t0.c0 FROM t0, t2, vt0, vt1 WHERE ((NOT ((((((vt0.c0) NOT NULL)))<=(('1796232244')))))) UNION SELECT DISTINCT t0.c0 FROM t0, t2, vt0, vt1 WHERE ((((((((vt0.c0) NOT NULL)))<=(('1796232244')))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, t2, vt0, vt1;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE (((NULL)-(((t2.c0)<>(t2.c0))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT (((NULL)-(((t2.c0)<>(t2.c0))))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE (((((NULL)-(((t2.c0)<>(t2.c0))))) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0, t2 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0, t2 GROUP BY t0.c0, vt0.c0 HAVING TYPEOF(DISTINCT COUNT(*)) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0, t2 GROUP BY t0.c0, vt0.c0 HAVING (NOT (TYPEOF(DISTINCT COUNT(*)))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0, t2 GROUP BY t0.c0, vt0.c0 HAVING ((TYPEOF(DISTINCT COUNT(*))) ISNULL);
SELECT t0.c0, vt0.c0 FROM t0, vt0, t2 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0, t2 GROUP BY t0.c0, vt0.c0 HAVING TYPEOF(DISTINCT COUNT(*)) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0, t2 GROUP BY t0.c0, vt0.c0 HAVING (NOT (TYPEOF(DISTINCT COUNT(*)))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0, t2 GROUP BY t0.c0, vt0.c0 HAVING ((TYPEOF(DISTINCT COUNT(*))) ISNULL);
SELECT t0.c0, vt0.c0 FROM t0, vt0, t2 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0 FROM vt0 CROSS JOIN t0 ON HEX(CASE WHEN t0.c0 THEN vt0.c0 END);
SELECT ALL t0.c0 FROM vt0 CROSS JOIN t0 ON HEX(CASE WHEN t0.c0 THEN vt0.c0 END) WHERE (((((t0.c0) IS FALSE))IS(LOWER(vt0.c1)))) UNION ALL SELECT t0.c0 FROM vt0 NOT INDEXED CROSS JOIN t0 ON HEX(CASE WHEN t0.c0 THEN vt0.c0 END) WHERE ((NOT (((((t0.c0) IS FALSE))IS(LOWER(vt0.c1)))))) UNION ALL SELECT t0.c0 FROM vt0 CROSS JOIN t0 ON HEX(CASE WHEN t0.c0 THEN vt0.c0 END) WHERE (((((((t0.c0) IS FALSE))IS(LOWER(vt0.c1)))) ISNULL));
SELECT ALL t0.c0 FROM vt0 CROSS JOIN t0 ON HEX(CASE WHEN t0.c0 THEN vt0.c0 END);
SELECT DISTINCT vt0.c1 FROM vt0 NATURAL JOIN t0;
SELECT DISTINCT vt0.c1 FROM vt0 NATURAL JOIN t0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c1 FROM vt0 NATURAL JOIN t0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c1 FROM vt0 NATURAL JOIN t0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0 NATURAL JOIN t0;
SELECT ALL vt0.c1, vt0.c0 FROM t2, t0, vt1, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM t2, t0, vt1, vt0 WHERE (CAST((NOT (x'6c9d84f3')) AS TEXT)) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM t2, t0, vt1, vt0 WHERE ((NOT (CAST((NOT (x'6c9d84f3')) AS TEXT)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM t2, t0, vt1, vt0 WHERE (((CAST((NOT (x'6c9d84f3')) AS TEXT)) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM t2, t0, vt1, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt1.c0 FROM t2 LEFT OUTER JOIN vt1 ON ((vt1.c0)IS(((t2.c0)*(t2.c0)))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM t2 LEFT OUTER JOIN vt1 ON ((vt1.c0)IS(((t2.c0)*(t2.c0)))) GROUP BY vt1.c0 HAVING CAST(SUM(AVG(vt1.c0)) AS BLOB) UNION ALL SELECT ALL vt1.c0 FROM t2 LEFT OUTER JOIN vt1 ON ((vt1.c0)IS(((t2.c0)*(t2.c0)))) GROUP BY vt1.c0 HAVING (NOT (CAST(SUM(AVG(vt1.c0)) AS BLOB))) UNION ALL SELECT vt1.c0 FROM t2 LEFT OUTER JOIN vt1 ON ((vt1.c0)IS(((t2.c0)*(t2.c0)))) GROUP BY vt1.c0 HAVING ((CAST(SUM(AVG(vt1.c0)) AS BLOB)) ISNULL);
SELECT t2.c0, vt0.c1, vt0.c0, vt1.c0 FROM vt0, t0, t2, vt1;
SELECT ALL t2.c0, vt0.c1, vt0.c0, vt1.c0 FROM vt0, t0, t2, vt1 WHERE (((IFNULL(vt0.c0, vt0.c0))<(LIKELIHOOD(DISTINCT vt1.c0, 0.2135353760446086)))) UNION ALL SELECT t2.c0, vt0.c1, vt0.c0, vt1.c0 FROM vt0, t0, t2, vt1 WHERE ((NOT (((IFNULL(vt0.c0, vt0.c0))<(LIKELIHOOD(DISTINCT vt1.c0, 0.2135353760446086)))))) UNION ALL SELECT t2.c0, vt0.c1, vt0.c0, vt1.c0 FROM vt0, t0, t2, vt1 WHERE (((((IFNULL(vt0.c0, vt0.c0))<(LIKELIHOOD(DISTINCT vt1.c0, 0.2135353760446086)))) ISNULL));
SELECT t2.c0, vt0.c1, vt0.c0, vt1.c0 FROM vt0, t0, t2, vt1;
SELECT DISTINCT vt0.c1, vt0.c0, vt1.c0, t0.c0 FROM vt1 CROSS JOIN vt0 ON (((((0.1568905035294308))>((vt0.c0))))<>(((((vt1.c0)OR(vt0.c0)))OR(t0.c0)))) FULL OUTER JOIN t0 ON ABS((NOT (t0.c0)));
SELECT ALL t0.c0 FROM t0, vt1 NOT INDEXED, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt1, vt0 WHERE (((((((((UNICODE(t0.c0))OR('mo')))AND(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND(((((((((vt0.c1)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, vt1, vt0 WHERE ((NOT (((((((((UNICODE(t0.c0))OR('mo')))AND(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND(((((((((vt0.c1)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, vt1, vt0 WHERE (((((((((((UNICODE(t0.c0))OR('mo')))AND(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND(((((((((vt0.c1)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt1 NOT INDEXED, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t2 CROSS JOIN t0 ON 0.5923104063849493 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t2 CROSS JOIN t0 ON 0.5923104063849493 GROUP BY t0.c0 HAVING TOTAL(((t2.c0)*(t2.c0))) UNION ALL SELECT ALL t0.c0 FROM t2 CROSS JOIN t0 ON 0.5923104063849493 GROUP BY t0.c0 HAVING (NOT (TOTAL(((t2.c0)*(t2.c0))))) UNION ALL SELECT t0.c0 FROM t2 CROSS JOIN t0 ON 0.5923104063849493 GROUP BY t0.c0 HAVING ((TOTAL(((t2.c0)*(t2.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t2 CROSS JOIN t0 ON 0.5923104063849493 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t2 CROSS JOIN t0 ON 0.5923104063849493 GROUP BY t0.c0 HAVING TOTAL(((t2.c0)*(t2.c0))) UNION ALL SELECT ALL t0.c0 FROM t2 CROSS JOIN t0 ON 0.5923104063849493 GROUP BY t0.c0 HAVING (NOT (TOTAL(((t2.c0)*(t2.c0))))) UNION ALL SELECT t0.c0 FROM t2 CROSS JOIN t0 ON 0.5923104063849493 GROUP BY t0.c0 HAVING ((TOTAL(((t2.c0)*(t2.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t2 CROSS JOIN t0 ON 0.5923104063849493 GROUP BY t0.c0;
SELECT ALL * FROM t0, t2;
SELECT ALL * FROM t0, t2 WHERE ((((t0.c0))<=((t2.c0))) COLLATE BINARY) UNION ALL SELECT ALL * FROM t0, t2 WHERE ((NOT ((((t0.c0))<=((t2.c0))) COLLATE BINARY))) UNION ALL SELECT * FROM t0, t2 WHERE ((((((t0.c0))<=((t2.c0))) COLLATE BINARY) ISNULL));
SELECT ALL * FROM t0, t2;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE (0.4712249993368103) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT (0.4712249993368103))) UNION SELECT DISTINCT * FROM t2 WHERE (((0.4712249993368103) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((CAST(0.0842121863751566 AS REAL)) NOT BETWEEN (x'8588') AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((CAST(0.0842121863751566 AS REAL)) NOT BETWEEN (x'8588') AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((CAST(0.0842121863751566 AS REAL)) NOT BETWEEN (x'8588') AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t2.c0, t0.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt1, t0, vt0, t2 GROUP BY t2.c0, t0.c0, vt0.c1, vt1.c0, vt0.c0;
SELECT t2.c0, t0.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt1, t0, vt0, t2 GROUP BY t2.c0, t0.c0, vt0.c1, vt1.c0, vt0.c0 HAVING AVG(vt0.c1) UNION ALL SELECT ALL t2.c0, t0.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt1, t0, vt0, t2 GROUP BY t2.c0, t0.c0, vt0.c1, vt1.c0, vt0.c0 HAVING (NOT (AVG(vt0.c1))) UNION ALL SELECT t2.c0, t0.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt1, t0, vt0, t2 GROUP BY t2.c0, t0.c0, vt0.c1, vt1.c0, vt0.c0 HAVING ((AVG(vt0.c1)) ISNULL);
SELECT t2.c0, t0.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt1, t0, vt0, t2 GROUP BY t2.c0, t0.c0, vt0.c1, vt1.c0, vt0.c0;
SELECT t2.c0, t0.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt1, t0, vt0, t2 GROUP BY t2.c0, t0.c0, vt0.c1, vt1.c0, vt0.c0 HAVING AVG(vt0.c1) UNION ALL SELECT ALL t2.c0, t0.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt1, t0, vt0, t2 GROUP BY t2.c0, t0.c0, vt0.c1, vt1.c0, vt0.c0 HAVING (NOT (AVG(vt0.c1))) UNION ALL SELECT t2.c0, t0.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt1, t0, vt0, t2 GROUP BY t2.c0, t0.c0, vt0.c1, vt1.c0, vt0.c0 HAVING ((AVG(vt0.c1)) ISNULL);
SELECT t2.c0, t0.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt1, t0, vt0, t2 GROUP BY t2.c0, t0.c0, vt0.c1, vt1.c0, vt0.c0;
SELECT TOTAL((0.34957383868856295 IN ())) FROM t2, vt1;
SELECT * FROM t2, t0, vt0, vt1;
SELECT * FROM t2, t0, vt0, vt1 WHERE (1638671501) UNION ALL SELECT * FROM t2, t0, vt0, vt1 WHERE ((NOT (1638671501))) UNION ALL SELECT * FROM t2, t0, vt0, vt1 WHERE (((1638671501) ISNULL));
SELECT * FROM t2, t0, vt0, vt1;
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE (CAST(((vt1.c0)&(vt1.c0)) AS BLOB)) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT (CAST(((vt1.c0)&(vt1.c0)) AS BLOB)))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE (((CAST(((vt1.c0)&(vt1.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt1, t2 CROSS JOIN t0 ON LIKELIHOOD(DISTINCT (- (NULL)), 0.8450968793520726) INNER JOIN vt0 ON ((CAST(t0.c0 AS BLOB))||((((vt0.c1))<=((vt0.c1))))) GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt1, t2 CROSS JOIN t0 ON LIKELIHOOD(DISTINCT (- (NULL)), 0.8450968793520726) INNER JOIN vt0 ON ((CAST(t0.c0 AS BLOB))||((((vt0.c1))<=((vt0.c1))))) WHERE (NULLIF(((t0.c0)OR(t2.c0)), (t2.c0 IN ()))) GROUP BY vt0.c0, t0.c0, vt1.c0 UNION SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM vt1, t2 CROSS JOIN t0 ON LIKELIHOOD(DISTINCT (- (NULL)), 0.8450968793520726) INNER JOIN vt0 ON ((CAST(t0.c0 AS BLOB))||((((vt0.c1))<=((vt0.c1))))) WHERE ((NOT (NULLIF(((t0.c0)OR(t2.c0)), (t2.c0 IN ()))))) GROUP BY vt0.c0, t0.c0, vt1.c0 UNION SELECT vt0.c0, t0.c0, vt1.c0 FROM vt1, t2 CROSS JOIN t0 ON LIKELIHOOD(DISTINCT (- (NULL)), 0.8450968793520726) INNER JOIN vt0 ON ((CAST(t0.c0 AS BLOB))||((((vt0.c1))<=((vt0.c1))))) WHERE (((NULLIF(((t0.c0)OR(t2.c0)), (t2.c0 IN ()))) ISNULL)) GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt1, t2 CROSS JOIN t0 ON LIKELIHOOD(DISTINCT (- (NULL)), 0.8450968793520726) INNER JOIN vt0 ON ((CAST(t0.c0 AS BLOB))||((((vt0.c1))<=((vt0.c1))))) GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((t0.c0) BETWEEN (t0.c0) AND (GROUP_CONCAT(SUM(MAX(t0.c0)))))))!=((TOTAL(MIN(SUM(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0 HAVING (NOT ((((((t0.c0) BETWEEN (t0.c0) AND (GROUP_CONCAT(SUM(MAX(t0.c0)))))))<>((TOTAL(MIN(SUM(t0.c0)))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((((t0.c0) BETWEEN (t0.c0) AND (GROUP_CONCAT(SUM(MAX(t0.c0)))))))!=((TOTAL(MIN(SUM(t0.c0))))))) ISNULL);
SELECT ALL MAX(((((0.3732101730297146 IN ())))==((((((t2.c0)OR(vt0.c0)))OR(vt0.c0)))))) FROM t0, t2, vt0, vt1 ORDER BY (vt1.c0 COLLATE BINARY IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (ABS(DISTINCT 0.01568823965841548)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (ABS(DISTINCT 0.01568823965841548)))) UNION ALL SELECT ALL * FROM t0 WHERE (((ABS(DISTINCT 0.01568823965841548)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (((((NOT ('1010280931')))AND('kWK')))OR(((t0.c0) BETWEEN (vt0.c1) AND (NULL)))) FULL OUTER JOIN t2 ON (t0.c0 COLLATE BINARY IN ());
SELECT DISTINCT * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (((((NOT ('1010280931')))AND('kWK')))OR(((t0.c0) BETWEEN (vt0.c1) AND (NULL)))) FULL OUTER JOIN t2 ON (t0.c0 COLLATE BINARY IN ()) WHERE ((- (((t0.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (((((NOT ('1010280931')))AND('kWK')))OR(((t0.c0) BETWEEN (vt0.c1) AND (NULL)))) FULL OUTER JOIN t2 ON (t0.c0 COLLATE BINARY IN ()) WHERE ((NOT ((- (((t0.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (((((NOT ('1010280931')))AND('kWK')))OR(((t0.c0) BETWEEN (vt0.c1) AND (NULL)))) FULL OUTER JOIN t2 ON (t0.c0 COLLATE BINARY IN ()) WHERE ((((- (((t0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (((((NOT ('1010280931')))AND('kWK')))OR(((t0.c0) BETWEEN (vt0.c1) AND (NULL)))) FULL OUTER JOIN t2 ON (t0.c0 COLLATE BINARY IN ());
SELECT t2.c0, vt0.c1 FROM t2, vt0, vt1 GROUP BY t2.c0, vt0.c1;
SELECT ALL t2.c0, vt0.c1 FROM t2, vt0, vt1 WHERE (((((vt0.c0) ISNULL)) ISNULL)) GROUP BY t2.c0, vt0.c1 UNION SELECT t2.c0, vt0.c1 FROM t2, vt0, vt1 WHERE ((NOT (((((vt0.c0) ISNULL)) ISNULL)))) GROUP BY t2.c0, vt0.c1 UNION SELECT t2.c0, vt0.c1 FROM t2, vt0, vt1 WHERE (((((((vt0.c0) ISNULL)) ISNULL)) ISNULL)) GROUP BY t2.c0, vt0.c1;
SELECT t2.c0, vt0.c1 FROM t2, vt0, vt1 GROUP BY t2.c0, vt0.c1;
SELECT ALL vt1.c0 FROM t2 NOT INDEXED LEFT OUTER JOIN vt1 ON t2.c0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t2 LEFT OUTER JOIN vt1 ON t2.c0 GROUP BY vt1.c0 HAVING SUM(COUNT(t2.c0)) UNION ALL SELECT ALL vt1.c0 FROM t2 LEFT OUTER JOIN vt1 ON t2.c0 GROUP BY vt1.c0 HAVING (NOT (SUM(COUNT(t2.c0)))) UNION ALL SELECT ALL vt1.c0 FROM t2 LEFT OUTER JOIN vt1 ON t2.c0 GROUP BY vt1.c0 HAVING ((SUM(COUNT(t2.c0))) ISNULL);
SELECT SUM(CAST((((x'', t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0))) AS TEXT)) FROM t0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((t0.c0 IN ()) IN ())) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((t0.c0 IN ()) IN ())))) UNION ALL SELECT ALL * FROM t0 WHERE (((((t0.c0 IN ()) IN ())) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM vt0, t0, t2, vt1;
SELECT DISTINCT * FROM vt0, t0, t2, vt1 WHERE (((CASE WHEN 'YH xy0湦Z' THEN 0.04997478317875237 ELSE t2.c0 END) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ((- (t2.c0))))) UNION SELECT DISTINCT * FROM vt0, t0, t2, vt1 WHERE ((NOT (((CASE WHEN 'YH xy0湦Z' THEN 0.04997478317875237 ELSE t2.c0 END) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ((- (t2.c0))))))) UNION SELECT DISTINCT * FROM vt0, t0, t2, vt1 WHERE (((((CASE WHEN 'YH xy0湦Z' THEN 0.04997478317875237 ELSE t2.c0 END) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ((- (t2.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0, t2, vt1;
SELECT vt0.c1, vt0.c0, vt1.c0, t2.c0 FROM vt0, t0, vt1, t2 GROUP BY vt0.c1, vt0.c0, vt1.c0, t2.c0;
SELECT vt0.c1, vt0.c0, vt1.c0, t2.c0 FROM vt0, t0, vt1, t2 WHERE (CAST(NULL AS NUMERIC) COLLATE BINARY) GROUP BY vt0.c1, vt0.c0, vt1.c0, t2.c0 UNION SELECT vt0.c1, vt0.c0, vt1.c0, t2.c0 FROM vt0, t0, vt1, t2 WHERE ((NOT (CAST(NULL AS NUMERIC) COLLATE BINARY))) GROUP BY vt0.c1, vt0.c0, vt1.c0, t2.c0 UNION SELECT ALL vt0.c1, vt0.c0, vt1.c0, t2.c0 FROM vt0, t0, vt1, t2 WHERE (((CAST(NULL AS NUMERIC) COLLATE BINARY) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt1.c0, t2.c0;
SELECT vt0.c1, vt0.c0, vt1.c0, t2.c0 FROM vt0, t0, vt1, t2 GROUP BY vt0.c1, vt0.c0, vt1.c0, t2.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(SUM(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(SUM(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(SUM(vt1.c0))) ISNULL);
SELECT ALL t0.c0 FROM t2, vt0, t0;
SELECT ALL t0.c0 FROM t2, vt0, t0 WHERE ((((((((t0.c0))<((vt0.c1))))AND(x'')))OR(((t0.c0) NOTNULL)))) UNION ALL SELECT ALL t0.c0 FROM t2, vt0, t0 WHERE ((NOT ((((((((t0.c0))<((vt0.c1))))AND(x'')))OR(((t0.c0) NOTNULL)))))) UNION ALL SELECT t0.c0 FROM t2, vt0, t0 WHERE ((((((((((t0.c0))<((vt0.c1))))AND(x'')))OR(((t0.c0) NOTNULL)))) ISNULL));
SELECT ALL t0.c0 FROM t2, vt0, t0;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN t2 ON ((CAST(t2.c0 AS INTEGER)) BETWEEN (((t2.c0) BETWEEN (t2.c0) AND (t0.c0))) AND (((t0.c0)>=(''))));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN t2 ON ((CAST(t2.c0 AS INTEGER)) BETWEEN (((t2.c0) BETWEEN (t2.c0) AND (t0.c0))) AND (((t0.c0)>=('')))) WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN t2 ON ((CAST(t2.c0 AS INTEGER)) BETWEEN (((t2.c0) BETWEEN (t2.c0) AND (t0.c0))) AND (((t0.c0)>=('')))) WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN t2 ON ((CAST(t2.c0 AS INTEGER)) BETWEEN (((t2.c0) BETWEEN (t2.c0) AND (t0.c0))) AND (((t0.c0)>=('')))) WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN t2 ON ((CAST(t2.c0 AS INTEGER)) BETWEEN (((t2.c0) BETWEEN (t2.c0) AND (t0.c0))) AND (((t0.c0)>=(''))));
SELECT vt1.c0, vt0.c1, vt0.c0 FROM t0, t2, vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM t0, t2, vt0, vt1 WHERE ((CAST(vt0.c1 AS REAL) IN ())) GROUP BY vt1.c0, vt0.c1, vt0.c0 UNION SELECT vt1.c0, vt0.c1, vt0.c0 FROM t0, t2, vt0, vt1 WHERE ((NOT ((CAST(vt0.c1 AS REAL) IN ())))) GROUP BY vt1.c0, vt0.c1, vt0.c0 UNION SELECT vt1.c0, vt0.c1, vt0.c0 FROM t0, t2, vt0, vt1 WHERE ((((CAST(vt0.c1 AS REAL) IN ())) ISNULL)) GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM t0, t2, vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt1.c0, t0.c0, t2.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(CAST(t0.c0 AS REAL) AS INTEGER) RIGHT OUTER JOIN t2 ON ((((t0.c0)<=(t0.c0)))||(((t0.c0)/(vt1.c0)))) INNER JOIN t0 ON CASE CAST(vt0.c1 AS INTEGER)  WHEN (vt1.c0 IN (vt1.c0)) THEN ((vt1.c0)%(t2.c0)) ELSE CASE t0.c0  WHEN '' THEN vt0.c1 ELSE vt0.c1 END END GROUP BY vt0.c1, vt1.c0, t0.c0, t2.c0;
SELECT ALL t0.c0 FROM vt0, t0, t2, vt1;
SELECT t0.c0 FROM vt0, t0, t2, vt1 WHERE (t0.c0 COLLATE RTRIM) UNION ALL SELECT ALL t0.c0 FROM vt0, t0, t2, vt1 WHERE ((NOT (t0.c0 COLLATE RTRIM))) UNION ALL SELECT t0.c0 FROM vt0, t0, t2, vt1 WHERE (((t0.c0 COLLATE RTRIM) ISNULL));
SELECT ALL t0.c0 FROM vt0, t0, t2, vt1;
SELECT DISTINCT * FROM vt0, t2, t0;
SELECT DISTINCT * FROM vt0, t2, t0 WHERE (((((((((((((vt0.c0 COLLATE BINARY)OR(CAST(t2.c0 AS BLOB))))OR((t2.c0 IN ()))))OR(vt0.c0 COLLATE BINARY)))AND((t2.c0 IN ()))))OR(CAST(t2.c0 AS BLOB))))AND(((((vt0.c1)OR(t0.c0)))AND(vt0.c1))))) UNION SELECT DISTINCT * FROM vt0, t2, t0 WHERE ((NOT (((((((((((((vt0.c0 COLLATE BINARY)OR(CAST(t2.c0 AS BLOB))))OR((t2.c0 IN ()))))OR(vt0.c0 COLLATE BINARY)))AND((t2.c0 IN ()))))OR(CAST(t2.c0 AS BLOB))))AND(((((vt0.c1)OR(t0.c0)))AND(vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0, t2, t0 WHERE (((((((((((((((vt0.c0 COLLATE BINARY)OR(CAST(t2.c0 AS BLOB))))OR((t2.c0 IN ()))))OR(vt0.c0 COLLATE BINARY)))AND((t2.c0 IN ()))))OR(CAST(t2.c0 AS BLOB))))AND(((((vt0.c1)OR(t0.c0)))AND(vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0, t2, t0;
SELECT ALL t0.c0 FROM t2, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t2, t0 WHERE (((((t0.c0) IS FALSE))>((t2.c0 IN (t0.c0, t2.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t2, t0 WHERE ((NOT (((((t0.c0) IS FALSE))>((t2.c0 IN (t0.c0, t2.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t2, t0 WHERE (((((((t0.c0) IS FALSE))>((t2.c0 IN (t0.c0, t2.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t2, t0 GROUP BY t0.c0;
SELECT vt1.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM t0, vt1 NOT INDEXED, vt0 GROUP BY vt1.c0, vt0.c0 HAVING COUNT(((NULL)IS NOT(vt1.c0))) UNION ALL SELECT vt1.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (COUNT(((NULL)IS NOT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((COUNT(((NULL)IS NOT(vt1.c0)))) ISNULL);
SELECT vt1.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM t0, vt1 NOT INDEXED, vt0 GROUP BY vt1.c0, vt0.c0 HAVING COUNT(((NULL)IS NOT(vt1.c0))) UNION ALL SELECT vt1.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (COUNT(((NULL)IS NOT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((COUNT(((NULL)IS NOT(vt1.c0)))) ISNULL);
SELECT vt1.c0, vt0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, t2.c0 FROM t2, vt1, t0;
SELECT vt1.c0, t2.c0 FROM t2, vt1, t0 NOT INDEXED WHERE (CASE ((NULL)%(t2.c0))  WHEN ((t2.c0) NOT BETWEEN ('498181797') AND (t0.c0)) THEN NULL COLLATE NOCASE END) UNION ALL SELECT ALL vt1.c0, t2.c0 FROM t2, vt1, t0 WHERE ((NOT (CASE ((NULL)%(t2.c0))  WHEN ((t2.c0) NOT BETWEEN ('498181797') AND (t0.c0)) THEN NULL COLLATE NOCASE END))) UNION ALL SELECT ALL vt1.c0, t2.c0 FROM t2, vt1, t0 WHERE (((CASE ((NULL)%(t2.c0))  WHEN ((t2.c0) NOT BETWEEN ('498181797') AND (t0.c0)) THEN NULL COLLATE NOCASE END) ISNULL));
SELECT vt1.c0, t2.c0 FROM t2, vt1, t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST((+ (vt0.c1)) AS REAL)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST((+ (vt0.c1)) AS REAL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST((+ (vt0.c1)) AS REAL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL t0.c0 FROM t0, t2, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t2, vt0 WHERE (')?kJ<U') GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t2, vt0 WHERE ((NOT (')?kJ<U'))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, t2, vt0 WHERE (((')?kJ<U') ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t2, vt0 GROUP BY t0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(COUNT(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING (NOT (TOTAL(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(COUNT(vt0.c0))) ISNULL);
SELECT ALL MIN(CASE WHEN t2.c0 THEN vt0.c0 COLLATE NOCASE WHEN 0xfffffffff1e0c46a THEN x'' COLLATE BINARY WHEN (vt0.c1 IN ()) THEN (0x64ee37aa IN (vt0.c0)) ELSE t2.c0 END) FROM t2, vt0;
SELECT ALL * FROM vt0, t2;
SELECT * FROM vt0, t2 WHERE (CASE WHEN ((t2.c0)LIKE(vt0.c0)) THEN x'1238' ELSE ((t2.c0) IS TRUE) END) UNION ALL SELECT * FROM vt0, t2 WHERE ((NOT (CASE WHEN ((t2.c0)LIKE(vt0.c0)) THEN x'1238' ELSE ((t2.c0) IS TRUE) END))) UNION ALL SELECT ALL * FROM vt0, t2 WHERE (((CASE WHEN ((t2.c0)LIKE(vt0.c0)) THEN x'1238' ELSE ((t2.c0) IS TRUE) END) ISNULL));
SELECT ALL * FROM vt0, t2;
SELECT DISTINCT vt0.c0 FROM vt0, t2, t0;
SELECT DISTINCT vt0.c0 FROM vt0, t2, t0 WHERE (((CAST(t2.c0 AS INTEGER)) NOT BETWEEN ((+ (t2.c0))) AND ((vt0.c1 IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t2, t0 WHERE ((NOT (((CAST(t2.c0 AS INTEGER)) NOT BETWEEN ((+ (t2.c0))) AND ((vt0.c1 IN ())))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t2, t0 WHERE (((((CAST(t2.c0 AS INTEGER)) NOT BETWEEN ((+ (t2.c0))) AND ((vt0.c1 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, t2, t0;
SELECT vt1.c0 FROM t2, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM t2, vt1 WHERE (NULL) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t2, vt1 WHERE ((NOT (NULL))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM t2, vt1 WHERE (((NULL) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM t2, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(COUNT(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(COUNT(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(COUNT(vt1.c0))) ISNULL);
SELECT * FROM t0, vt0, t2;
SELECT ALL * FROM t0, vt0, t2 WHERE (((46839972)%(((vt0.c0)&(vt0.c1))))) UNION ALL SELECT * FROM t0, vt0, t2 WHERE ((NOT (((46839972)%(((vt0.c0)&(vt0.c1))))))) UNION ALL SELECT * FROM t0, vt0, t2 WHERE (((((46839972)%(((vt0.c0)&(vt0.c1))))) ISNULL));
SELECT * FROM t0, vt0, t2;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN t2 ON ((((x'')-(vt1.c0)))>(t2.c0));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN t2 ON ((((x'')-(vt1.c0)))>(t2.c0)) WHERE (vt0.c1) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN t2 ON ((((x'')-(vt1.c0)))>(t2.c0)) WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN t2 ON ((((x'')-(vt1.c0)))>(t2.c0)) WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN t2 ON ((((x'')-(vt1.c0)))>(t2.c0));
SELECT ALL t2.c0, t0.c0 FROM t2, t0 GROUP BY t2.c0, t0.c0;
SELECT t2.c0, t0.c0 FROM t2, t0 WHERE ((CAST(t0.c0 AS REAL) IN ((((t2.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) GROUP BY t2.c0, t0.c0 UNION SELECT t2.c0, t0.c0 FROM t2, t0 WHERE ((NOT ((CAST(t0.c0 AS REAL) IN ((((t2.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))))) GROUP BY t2.c0, t0.c0 UNION SELECT ALL t2.c0, t0.c0 FROM t2, t0 WHERE ((((CAST(t0.c0 AS REAL) IN ((((t2.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ISNULL)) GROUP BY t2.c0, t0.c0;
SELECT ALL t2.c0, t0.c0 FROM t2, t0 GROUP BY t2.c0, t0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM t2, t0, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM t2, t0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING json_type(((((vt0.c1)AND(SUM(GROUP_CONCAT(0.8237253467455496)))))AND(t2.c0))) UNION ALL SELECT vt0.c0, vt0.c1 FROM t2, t0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (json_type(((((vt0.c1)AND(SUM(GROUP_CONCAT(0.8237253467455496)))))AND(t2.c0))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM t2, t0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((json_type(((((vt0.c1)AND(SUM(GROUP_CONCAT(0.8237253467455496)))))AND(t2.c0)))) ISNULL);
SELECT ALL * FROM vt1 CROSS JOIN t2 ON (- (CAST(vt0.c0 AS TEXT))) RIGHT OUTER JOIN t0 ON vt0.c1 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c1 THEN NULL ELSE vt0.c1 END)|(((vt0.c1) NOT NULL)));
SELECT DISTINCT * FROM vt0, vt1 FULL OUTER JOIN t0 ON vt0.c1;
SELECT DISTINCT * FROM vt0, vt1 FULL OUTER JOIN t0 ON vt0.c1 WHERE (((vt0.c0 IN ()) IN (vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, vt1 FULL OUTER JOIN t0 ON vt0.c1 WHERE ((NOT (((vt0.c0 IN ()) IN (vt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0, vt1 FULL OUTER JOIN t0 ON vt0.c1 WHERE (((((vt0.c0 IN ()) IN (vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1 FULL OUTER JOIN t0 ON vt0.c1;
SELECT ALL t2.c0, t0.c0, vt1.c0 FROM t0, t2, vt1 GROUP BY t2.c0, t0.c0, vt1.c0;
SELECT ALL t2.c0, t0.c0, vt1.c0 FROM t0, t2, vt1 WHERE (((((t0.c0) NOT NULL)) NOT BETWEEN (((((t0.c0)OR(vt1.c0)))AND(t0.c0))) AND (x'9eb9'))) GROUP BY t2.c0, t0.c0, vt1.c0 UNION SELECT t2.c0, t0.c0, vt1.c0 FROM t0, t2, vt1 WHERE ((NOT (((((t0.c0) NOT NULL)) NOT BETWEEN (((((t0.c0)OR(vt1.c0)))AND(t0.c0))) AND (x'9eb9'))))) GROUP BY t2.c0, t0.c0, vt1.c0 UNION SELECT ALL t2.c0, t0.c0, vt1.c0 FROM t0, t2, vt1 WHERE (((((((t0.c0) NOT NULL)) NOT BETWEEN (((((t0.c0)OR(vt1.c0)))AND(t0.c0))) AND (x'9eb9'))) ISNULL)) GROUP BY t2.c0, t0.c0, vt1.c0;
SELECT ALL t2.c0, t0.c0, vt1.c0 FROM t0, t2, vt1 GROUP BY t2.c0, t0.c0, vt1.c0;
SELECT ALL t2.c0, vt0.c0, vt0.c1, t0.c0 FROM vt0, t2 LEFT OUTER JOIN t0 ON t0.c0 GROUP BY t2.c0, vt0.c0, vt0.c1, t0.c0;
SELECT ALL t2.c0, vt0.c0, vt0.c1, t0.c0 FROM vt0, t2 LEFT OUTER JOIN t0 ON t0.c0 GROUP BY t2.c0, vt0.c0, vt0.c1, t0.c0 HAVING MAX(CASE COUNT(0x32b3dc14)  WHEN t2.c0 THEN TOTAL(t2.c0) END) UNION ALL SELECT t2.c0, vt0.c0, vt0.c1, t0.c0 FROM vt0, t2 LEFT OUTER JOIN t0 ON t0.c0 GROUP BY t2.c0, vt0.c0, vt0.c1, t0.c0 HAVING (NOT (MAX(CASE COUNT(0X32b3dc14)  WHEN t2.c0 THEN TOTAL(t2.c0) END))) UNION ALL SELECT ALL t2.c0, vt0.c0, vt0.c1, t0.c0 FROM vt0, t2 LEFT OUTER JOIN t0 ON t0.c0 GROUP BY t2.c0, vt0.c0, vt0.c1, t0.c0 HAVING ((MAX(CASE COUNT(0x32b3dc14)  WHEN t2.c0 THEN TOTAL(t2.c0) END)) ISNULL);
SELECT vt0.c1, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN t2 ON (((CASE vt0.c0  WHEN vt0.c0 THEN t2.c0 END))<>((((x'fd6b')*(vt0.c0)))));
SELECT ALL vt0.c1, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN t2 ON (((CASE vt0.c0  WHEN vt0.c0 THEN t2.c0 END))<>((((x'fd6b')*(vt0.c0))))) WHERE ((NOT ((vt0.c0 IN ())))) UNION ALL SELECT vt0.c1, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN t2 ON (((CASE vt0.c0  WHEN vt0.c0 THEN t2.c0 END))!=((((x'fd6b')*(vt0.c0))))) WHERE ((NOT ((NOT ((vt0.c0 IN ())))))) UNION ALL SELECT vt0.c1, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN t2 ON (((CASE vt0.c0  WHEN vt0.c0 THEN t2.c0 END))!=((((x'fd6b')*(vt0.c0))))) WHERE ((((NOT ((vt0.c0 IN ())))) ISNULL));
SELECT vt0.c1, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN t2 ON (((CASE vt0.c0  WHEN vt0.c0 THEN t2.c0 END))<>((((x'fd6b')*(vt0.c0)))));
SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1;
SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1 WHERE (((((vt1.c0)>(vt1.c0))) NOT NULL)) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT (((((vt1.c0)>(vt1.c0))) NOT NULL)))) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1 WHERE (((((((vt1.c0)>(vt1.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1;
SELECT ALL vt0.c1 FROM vt0, t0, t2 FULL OUTER JOIN vt1 ON CASE '-1939402150'  WHEN CASE WHEN x'0c31' THEN vt0.c1 END THEN t2.c0 WHEN (~ (0.266786857984295)) THEN (((x'2ad5')) NOT BETWEEN ((vt0.c0)) AND ((t2.c0))) WHEN ((vt1.c0)OR(vt1.c0)) THEN (+ (vt0.c1)) ELSE ((vt0.c0) BETWEEN (t2.c0) AND (t0.c0)) END GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, t0, t2 FULL OUTER JOIN vt1 ON CASE '-1939402150'  WHEN CASE WHEN x'0c31' THEN vt0.c1 END THEN t2.c0 WHEN (~ (0.266786857984295)) THEN (((x'2ad5')) NOT BETWEEN ((vt0.c0)) AND ((t2.c0))) WHEN ((vt1.c0)OR(vt1.c0)) THEN (+ (vt0.c1)) ELSE ((vt0.c0) BETWEEN (t2.c0) AND (t0.c0)) END WHERE (((CASE vt1.c0  WHEN vt0.c1 THEN t0.c0 ELSE t0.c0 END) NOTNULL)) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, t0, t2 FULL OUTER JOIN vt1 ON CASE '-1939402150'  WHEN CASE WHEN x'0c31' THEN vt0.c1 END THEN t2.c0 WHEN (~ (0.266786857984295)) THEN (((x'2ad5')) NOT BETWEEN ((vt0.c0)) AND ((t2.c0))) WHEN ((vt1.c0)OR(vt1.c0)) THEN (+ (vt0.c1)) ELSE ((vt0.c0) BETWEEN (t2.c0) AND (t0.c0)) END WHERE ((NOT (((CASE vt1.c0  WHEN vt0.c1 THEN t0.c0 ELSE t0.c0 END) NOTNULL)))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0, t0, t2 FULL OUTER JOIN vt1 ON CASE '-1939402150'  WHEN CASE WHEN x'0c31' THEN vt0.c1 END THEN t2.c0 WHEN (~ (0.266786857984295)) THEN (((x'2ad5')) NOT BETWEEN ((vt0.c0)) AND ((t2.c0))) WHEN ((vt1.c0)OR(vt1.c0)) THEN (+ (vt0.c1)) ELSE ((vt0.c0) BETWEEN (t2.c0) AND (t0.c0)) END WHERE (((((CASE vt1.c0  WHEN vt0.c1 THEN t0.c0 ELSE t0.c0 END) NOTNULL)) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, t0, t2 FULL OUTER JOIN vt1 ON CASE '-1939402150'  WHEN CASE WHEN x'0c31' THEN vt0.c1 END THEN t2.c0 WHEN (~ (0.266786857984295)) THEN (((x'2ad5')) NOT BETWEEN ((vt0.c0)) AND ((t2.c0))) WHEN ((vt1.c0)OR(vt1.c0)) THEN (+ (vt0.c1)) ELSE ((vt0.c0) BETWEEN (t2.c0) AND (t0.c0)) END GROUP BY vt0.c1;
SELECT ALL t2.c0 FROM t2 FULL OUTER JOIN vt1 ON ((((STRFTIME('191379383', vt1.c0, t2.c0, t2.c0, t2.c0))OR(t2.c0)))OR(((vt1.c0)IS NOT(t2.c0)))) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 FULL OUTER JOIN vt1 ON ((((STRFTIME('191379383', vt1.c0, t2.c0, t2.c0, t2.c0))OR(t2.c0)))OR(((vt1.c0)IS NOT(t2.c0)))) GROUP BY t2.c0 HAVING ((COUNT(*)) ISNULL) UNION ALL SELECT t2.c0 FROM t2 FULL OUTER JOIN vt1 ON ((((STRFTIME('191379383', vt1.c0, t2.c0, t2.c0, t2.c0))OR(t2.c0)))OR(((vt1.c0)IS NOT(t2.c0)))) GROUP BY t2.c0 HAVING (NOT (((COUNT(*)) ISNULL))) UNION ALL SELECT ALL t2.c0 FROM t2 FULL OUTER JOIN vt1 ON ((((STRFTIME('191379383', vt1.c0, t2.c0, t2.c0, t2.c0))OR(t2.c0)))OR(((vt1.c0)IS NOT(t2.c0)))) GROUP BY t2.c0 HAVING ((((COUNT(*)) ISNULL)) ISNULL);
SELECT ALL t2.c0 FROM t2 FULL OUTER JOIN vt1 ON ((((STRFTIME('191379383', vt1.c0, t2.c0, t2.c0, t2.c0))OR(t2.c0)))OR(((vt1.c0)IS NOT(t2.c0)))) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 FULL OUTER JOIN vt1 ON ((((STRFTIME('191379383', vt1.c0, t2.c0, t2.c0, t2.c0))OR(t2.c0)))OR(((vt1.c0)IS NOT(t2.c0)))) GROUP BY t2.c0 HAVING ((COUNT(*)) ISNULL) UNION ALL SELECT t2.c0 FROM t2 FULL OUTER JOIN vt1 ON ((((STRFTIME('191379383', vt1.c0, t2.c0, t2.c0, t2.c0))OR(t2.c0)))OR(((vt1.c0)IS NOT(t2.c0)))) GROUP BY t2.c0 HAVING (NOT (((COUNT(*)) ISNULL))) UNION ALL SELECT ALL t2.c0 FROM t2 FULL OUTER JOIN vt1 ON ((((STRFTIME('191379383', vt1.c0, t2.c0, t2.c0, t2.c0))OR(t2.c0)))OR(((vt1.c0)IS NOT(t2.c0)))) GROUP BY t2.c0 HAVING ((((COUNT(*)) ISNULL)) ISNULL);
SELECT ALL t2.c0 FROM t2 FULL OUTER JOIN vt1 ON ((((STRFTIME('191379383', vt1.c0, t2.c0, t2.c0, t2.c0))OR(t2.c0)))OR(((vt1.c0)IS NOT(t2.c0)))) GROUP BY t2.c0;
SELECT vt1.c0, t0.c0, t2.c0 FROM vt1 LEFT OUTER JOIN t0 ON (NOT (((t2.c0)&('16167488')))) FULL OUTER JOIN t2 ON ((- (t2.c0)) IN (((t2.c0) IS FALSE)));
SELECT DISTINCT * FROM t0, vt1, vt0, t2;
SELECT DISTINCT * FROM t0, vt1, vt0, t2 WHERE (((+ (vt0.c0)) IN (((vt0.c1)>(t0.c0))))) UNION SELECT DISTINCT * FROM t0, vt1, vt0, t2 WHERE ((NOT (((+ (vt0.c0)) IN (((vt0.c1)>(t0.c0))))))) UNION SELECT DISTINCT * FROM t0, vt1, vt0, t2 WHERE (((((+ (vt0.c0)) IN (((vt0.c1)>(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, vt1, vt0, t2;
SELECT t0.c0, vt0.c0 FROM t0, t2, vt0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, t2, vt0 WHERE (CASE ((t2.c0)AND(t2.c0))  WHEN 0.9295733602534464 THEN ((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))AND(t2.c0)))AND(t2.c0)) WHEN t0.c0 THEN x'd3f6ceaf' WHEN (((vt0.c1, vt0.c1, t0.c0, vt0.c1, vt0.c0)) BETWEEN ((t2.c0, t2.c0, t0.c0, vt0.c1, t2.c0)) AND ((t2.c0, vt0.c0, t2.c0, 1629108768, vt0.c0))) THEN ((((vt0.c0)AND(t2.c0)))OR(t2.c0)) END) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM t0, t2, vt0 WHERE ((NOT (CASE ((t2.c0)AND(t2.c0))  WHEN 0.9295733602534464 THEN ((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))AND(t2.c0)))AND(t2.c0)) WHEN t0.c0 THEN x'd3f6ceaf' WHEN (((vt0.c1, vt0.c1, t0.c0, vt0.c1, vt0.c0)) BETWEEN ((t2.c0, t2.c0, t0.c0, vt0.c1, t2.c0)) AND ((t2.c0, vt0.c0, t2.c0, 1629108768, vt0.c0))) THEN ((((vt0.c0)AND(t2.c0)))OR(t2.c0)) END))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM t0, t2, vt0 WHERE (((CASE ((t2.c0)AND(t2.c0))  WHEN 0.9295733602534464 THEN ((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))AND(t2.c0)))AND(t2.c0)) WHEN t0.c0 THEN x'd3f6ceaf' WHEN (((vt0.c1, vt0.c1, t0.c0, vt0.c1, vt0.c0)) BETWEEN ((t2.c0, t2.c0, t0.c0, vt0.c1, t2.c0)) AND ((t2.c0, vt0.c0, t2.c0, 1629108768, vt0.c0))) THEN ((((vt0.c0)AND(t2.c0)))OR(t2.c0)) END) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, t2, vt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(vt1.c0)) ISNULL) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT(vt1.c0)) ISNULL))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(vt1.c0)) ISNULL)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(vt1.c0)) ISNULL) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT(vt1.c0)) ISNULL))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(vt1.c0)) ISNULL)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM t2, vt1, vt0, t0;
SELECT * FROM t2, vt1, vt0, t0 WHERE (CAST(-1016357655 AS REAL) COLLATE BINARY COLLATE RTRIM) UNION ALL SELECT ALL * FROM t2, vt1, vt0, t0 WHERE ((NOT (CAST(-1016357655 AS REAL) COLLATE BINARY COLLATE RTRIM))) UNION ALL SELECT * FROM t2, vt1, vt0, t0 WHERE (((CAST(-1016357655 AS REAL) COLLATE BINARY COLLATE RTRIM) ISNULL));
SELECT ALL * FROM t2, vt1, vt0, t0;
SELECT DISTINCT * FROM t0, vt0 FULL OUTER JOIN vt1 ON (((vt0.c0)GLOB(vt0.c0)) IN ()) CROSS JOIN t2 ON ((((t0.c0) IS TRUE))=((~ (vt0.c1))));
SELECT DISTINCT * FROM t0, vt0 FULL OUTER JOIN vt1 ON (((vt0.c0)GLOB(vt0.c0)) IN ()) CROSS JOIN t2 ON ((((t0.c0) IS TRUE))==((~ (vt0.c1)))) WHERE (CASE WHEN ((x'') IS TRUE) THEN ((t2.c0)>>('0.2817165245663481')) ELSE ((t0.c0) NOT NULL) END) UNION SELECT DISTINCT * FROM t0, vt0 FULL OUTER JOIN vt1 ON (((vt0.c0)GLOB(vt0.c0)) IN ()) CROSS JOIN t2 ON ((((t0.c0) IS TRUE))==((~ (vt0.c1)))) WHERE ((NOT (CASE WHEN ((x'') IS TRUE) THEN ((t2.c0)>>('0.2817165245663481')) ELSE ((t0.c0) NOT NULL) END))) UNION SELECT DISTINCT * FROM t0, vt0 FULL OUTER JOIN vt1 ON (((vt0.c0)GLOB(vt0.c0)) IN ()) CROSS JOIN t2 ON ((((t0.c0) IS TRUE))==((~ (vt0.c1)))) WHERE (((CASE WHEN ((x'') IS TRUE) THEN ((t2.c0)>>('0.2817165245663481')) ELSE ((t0.c0) NOT NULL) END) ISNULL));
SELECT DISTINCT * FROM t0, vt0 FULL OUTER JOIN vt1 ON (((vt0.c0)GLOB(vt0.c0)) IN ()) CROSS JOIN t2 ON ((((t0.c0) IS TRUE))=((~ (vt0.c1))));
SELECT ALL vt0.c0, t2.c0, vt0.c1 FROM vt0 INNER JOIN t2 ON t2.c0 GROUP BY vt0.c0, t2.c0, vt0.c1;
SELECT vt0.c0, t2.c0, vt0.c1 FROM vt0 INNER JOIN t2 ON t2.c0 WHERE (CASE ((vt0.c1) IS FALSE)  WHEN ((vt0.c0)OR(t2.c0)) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) WHEN t2.c0 COLLATE RTRIM THEN (((t2.c0, t2.c0, vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((t2.c0, vt0.c1, t2.c0, vt0.c1, t2.c0)) AND ((vt0.c1, vt0.c1, vt0.c0, '786196219', t2.c0))) WHEN CAST(vt0.c1 AS TEXT) THEN CASE WHEN t2.c0 THEN vt0.c1 ELSE vt0.c0 END ELSE ((vt0.c1)LIKE(vt0.c1)) END) GROUP BY vt0.c0, t2.c0, vt0.c1 UNION SELECT vt0.c0, t2.c0, vt0.c1 FROM vt0 INNER JOIN t2 ON t2.c0 WHERE ((NOT (CASE ((vt0.c1) IS FALSE)  WHEN ((vt0.c0)OR(t2.c0)) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) WHEN t2.c0 COLLATE RTRIM THEN (((t2.c0, t2.c0, vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((t2.c0, vt0.c1, t2.c0, vt0.c1, t2.c0)) AND ((vt0.c1, vt0.c1, vt0.c0, '786196219', t2.c0))) WHEN CAST(vt0.c1 AS TEXT) THEN CASE WHEN t2.c0 THEN vt0.c1 ELSE vt0.c0 END ELSE ((vt0.c1)LIKE(vt0.c1)) END))) GROUP BY vt0.c0, t2.c0, vt0.c1 UNION SELECT ALL vt0.c0, t2.c0, vt0.c1 FROM vt0 INNER JOIN t2 ON t2.c0 WHERE (((CASE ((vt0.c1) IS FALSE)  WHEN ((vt0.c0)OR(t2.c0)) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) WHEN t2.c0 COLLATE RTRIM THEN (((t2.c0, t2.c0, vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((t2.c0, vt0.c1, t2.c0, vt0.c1, t2.c0)) AND ((vt0.c1, vt0.c1, vt0.c0, '786196219', t2.c0))) WHEN CAST(vt0.c1 AS TEXT) THEN CASE WHEN t2.c0 THEN vt0.c1 ELSE vt0.c0 END ELSE ((vt0.c1)LIKE(vt0.c1)) END) ISNULL)) GROUP BY vt0.c0, t2.c0, vt0.c1;
SELECT ALL vt0.c0, t2.c0, vt0.c1 FROM vt0 INNER JOIN t2 ON t2.c0 GROUP BY vt0.c0, t2.c0, vt0.c1;
SELECT t2.c0, t0.c0 FROM vt1, t0, t2 LEFT OUTER JOIN vt0 ON (- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) GROUP BY t2.c0, t0.c0;
SELECT t2.c0, t0.c0 FROM vt1, t0, t2 LEFT OUTER JOIN vt0 ON (- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) GROUP BY t2.c0, t0.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT ALL t2.c0, t0.c0 FROM vt1, t0, t2 LEFT OUTER JOIN vt0 ON (- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) GROUP BY t2.c0, t0.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL t2.c0, t0.c0 FROM vt1, t0, t2 LEFT OUTER JOIN vt0 ON (- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) GROUP BY t2.c0, t0.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL * FROM vt1, t2, t0;
SELECT ALL * FROM vt1, t2, t0 WHERE (STRFTIME(t2.c0, t2.c0, vt1.c0, t0.c0, vt1.c0) COLLATE NOCASE) UNION ALL SELECT * FROM vt1, t2, t0 WHERE ((NOT (STRFTIME(t2.c0, t2.c0, vt1.c0, t0.c0, vt1.c0) COLLATE NOCASE))) UNION ALL SELECT * FROM vt1, t2, t0 WHERE (((STRFTIME(t2.c0, t2.c0, vt1.c0, t0.c0, vt1.c0) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt1, t2, t0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0)LIKE(vt1.c0)) AS BLOB)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0)LIKE(vt1.c0)) AS BLOB)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0)LIKE(vt1.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 NATURAL JOIN t0 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 NATURAL JOIN t0 WHERE ((((t2.c0 IN ()))<=(vt0.c1))) GROUP BY vt0.c0, t2.c0 UNION SELECT vt0.c0, t2.c0 FROM vt0, t2 NATURAL JOIN t0 WHERE ((NOT ((((t2.c0 IN ()))<=(vt0.c1))))) GROUP BY vt0.c0, t2.c0 UNION SELECT vt0.c0, t2.c0 FROM vt0, t2 NATURAL JOIN t0 WHERE ((((((t2.c0 IN ()))<=(vt0.c1))) ISNULL)) GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM vt0, t2 NATURAL JOIN t0 GROUP BY vt0.c0, t2.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (CAST(CAST(t0.c0 AS INTEGER) AS INTEGER)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CAST(CAST(t0.c0 AS INTEGER) AS INTEGER)))) UNION ALL SELECT ALL * FROM t0 WHERE (((CAST(CAST(t0.c0 AS INTEGER) AS INTEGER)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT vt1.c0, vt0.c0, t2.c0, vt0.c1 FROM t2, vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0, t2.c0, vt0.c1 FROM t2, vt1, vt0 WHERE ((t2.c0 IN ())) UNION SELECT DISTINCT vt1.c0, vt0.c0, t2.c0, vt0.c1 FROM t2, vt1, vt0 WHERE ((NOT ((t2.c0 IN ())))) UNION SELECT DISTINCT vt1.c0, vt0.c0, t2.c0, vt0.c1 FROM t2, vt1, vt0 WHERE ((((t2.c0 IN ())) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, t2.c0, vt0.c1 FROM t2, vt1, vt0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE (((CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END)/(((t2.c0)>>(t2.c0))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT (((CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END)/(((t2.c0)>>(t2.c0))))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE (((((CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END)/(((t2.c0)>>(t2.c0))))) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT vt0.c0, t2.c0 FROM vt0, t2, t0 GROUP BY vt0.c0, t2.c0;
SELECT vt0.c0, t2.c0 FROM vt0, t2, t0 GROUP BY vt0.c0, t2.c0 HAVING ((MAX(MIN(SUM(t2.c0))))AND(MIN(vt0.c1) COLLATE BINARY)) UNION ALL SELECT vt0.c0, t2.c0 FROM vt0, t2, t0 GROUP BY vt0.c0, t2.c0 HAVING (NOT (((MAX(MIN(SUM(t2.c0))))AND(MIN(vt0.c1) COLLATE BINARY)))) UNION ALL SELECT vt0.c0, t2.c0 FROM vt0, t2, t0 GROUP BY vt0.c0, t2.c0 HAVING ((((MAX(MIN(SUM(t2.c0))))AND(MIN(vt0.c1) COLLATE BINARY))) ISNULL);
SELECT ALL * FROM t2;
SELECT ALL * FROM t2 WHERE (((t2.c0 COLLATE RTRIM) ISNULL)) UNION ALL SELECT * FROM t2 WHERE ((NOT (((t2.c0 COLLATE RTRIM) ISNULL)))) UNION ALL SELECT * FROM t2 WHERE (((((t2.c0 COLLATE RTRIM) ISNULL)) ISNULL));
SELECT ALL * FROM t2;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (vt0.c1) UNION SELECT DISTINCT * FROM t0, vt0 NOT INDEXED WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt1, t0 CROSS JOIN t2 ON t0.c0 LEFT OUTER JOIN vt0 ON (NOT (((('-46905415')) BETWEEN ((vt1.c0)) AND ((vt0.c1))))) GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, t0 CROSS JOIN t2 ON t0.c0 LEFT OUTER JOIN vt0 ON (NOT (((('-46905415')) BETWEEN ((vt1.c0)) AND ((vt0.c1))))) WHERE (0.4208337570509383) GROUP BY vt0.c0, vt0.c1, vt1.c0 UNION SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt1, t0 CROSS JOIN t2 ON t0.c0 LEFT OUTER JOIN vt0 ON (NOT (((('-46905415')) BETWEEN ((vt1.c0)) AND ((vt0.c1))))) WHERE ((NOT (0.4208337570509383))) GROUP BY vt0.c0, vt0.c1, vt1.c0 UNION SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt1, t0 CROSS JOIN t2 ON t0.c0 LEFT OUTER JOIN vt0 ON (NOT (((('-46905415')) BETWEEN ((vt1.c0)) AND ((vt0.c1))))) WHERE (((0.4208337570509383) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt1, t0 CROSS JOIN t2 ON t0.c0 LEFT OUTER JOIN vt0 ON (NOT (((('-46905415')) BETWEEN ((vt1.c0)) AND ((vt0.c1))))) GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING MAX(COUNT(vt0.c0)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (MAX(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((MAX(COUNT(vt0.c0))) ISNULL);
SELECT * FROM vt1, vt0 CROSS JOIN t0 ON (x'f15ba0ea' IN (LIKELIHOOD(DISTINCT t0.c0, 0.26481947770592074)));
SELECT ALL * FROM vt1, vt0 CROSS JOIN t0 ON (x'f15ba0ea' IN (LIKELIHOOD(DISTINCT t0.c0, 0.26481947770592074))) WHERE ((((+ (vt0.c1)))<=(CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END))) UNION ALL SELECT ALL * FROM vt1, vt0 CROSS JOIN t0 ON (x'f15ba0ea' IN (LIKELIHOOD(DISTINCT t0.c0, 0.26481947770592074))) WHERE ((NOT ((((+ (vt0.c1)))<=(CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END))))) UNION ALL SELECT ALL * FROM vt1, vt0 CROSS JOIN t0 ON (x'f15ba0ea' IN (LIKELIHOOD(DISTINCT t0.c0, 0.26481947770592074))) WHERE ((((((+ (vt0.c1)))<=(CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END))) ISNULL));
SELECT * FROM vt1, vt0 CROSS JOIN t0 ON (x'f15ba0ea' IN (LIKELIHOOD(DISTINCT t0.c0, 0.26481947770592074)));
SELECT DISTINCT * FROM vt1, vt0, t0;
SELECT DISTINCT * FROM vt1, vt0, t0 WHERE ((LIKELY(x'') IN ())) UNION SELECT DISTINCT * FROM vt1, vt0, t0 WHERE ((NOT ((LIKELY(x'') IN ())))) UNION SELECT DISTINCT * FROM vt1, vt0, t0 WHERE ((((LIKELY(x'') IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, t0;
SELECT ALL vt0.c0, t2.c0 FROM vt1 NOT INDEXED, t2, vt0 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM vt1, t2, vt0 WHERE (((vt1.c0) BETWEEN (CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END) AND (((vt0.c0) NOT NULL)))) GROUP BY vt0.c0, t2.c0 UNION SELECT ALL vt0.c0, t2.c0 FROM vt1, t2, vt0 WHERE ((NOT (((vt1.c0) BETWEEN (CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END) AND (((vt0.c0) NOT NULL)))))) GROUP BY vt0.c0, t2.c0 UNION SELECT ALL vt0.c0, t2.c0 FROM vt1, t2, vt0 WHERE (((((vt1.c0) BETWEEN (CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END) AND (((vt0.c0) NOT NULL)))) ISNULL)) GROUP BY vt0.c0, t2.c0;
SELECT ALL vt0.c0, t2.c0 FROM vt1 NOT INDEXED, t2, vt0 GROUP BY vt0.c0, t2.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((((GROUP_CONCAT(MIN(vt1.c0)))OR(((((COUNT(AVG(MAX(TOTAL(AVG(x''))))))AND(AVG(vt1.c0))))OR(vt0.c0)))))OR(x'')) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (((((GROUP_CONCAT(MIN(vt1.c0)))OR(((((COUNT(AVG(MAX(TOTAL(AVG(x''))))))AND(AVG(vt1.c0))))OR(vt0.c0)))))OR(x'')))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((((((GROUP_CONCAT(MIN(vt1.c0)))OR(((((COUNT(AVG(MAX(TOTAL(AVG(x''))))))AND(AVG(vt1.c0))))OR(vt0.c0)))))OR(x''))) ISNULL);
SELECT * FROM t0, vt1;
SELECT * FROM t0, vt1 WHERE ((((~ (vt1.c0)))*(((vt1.c0) NOT NULL)))) UNION ALL SELECT ALL * FROM t0, vt1 WHERE ((NOT ((((~ (vt1.c0)))*(((vt1.c0) NOT NULL)))))) UNION ALL SELECT ALL * FROM t0, vt1 WHERE ((((((~ (vt1.c0)))*(((vt1.c0) NOT NULL)))) ISNULL));
SELECT * FROM t0, vt1;
SELECT DISTINCT vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN t2 ON vt0.c1;
SELECT DISTINCT vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN t2 ON vt0.c1 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0)%(t2.c0))) AND (LOWER(DISTINCT t2.c0)))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN t2 ON vt0.c1 WHERE ((NOT (((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0)%(t2.c0))) AND (LOWER(DISTINCT t2.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN t2 ON vt0.c1 WHERE (((((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0)%(t2.c0))) AND (LOWER(DISTINCT t2.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN t2 ON vt0.c1;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0, t2, t0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0, t2, t0 WHERE (CAST(t0.c0 AS REAL)) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0, t2, t0 WHERE ((NOT (CAST(t0.c0 AS REAL)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0, t2, t0 WHERE (((CAST(t0.c0 AS REAL)) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0, t2, t0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((((t2.c0)OR(TOTAL(t2.c0))))AND(COUNT(t2.c0) COLLATE BINARY)) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (((((t2.c0)OR(TOTAL(t2.c0))))AND(COUNT(t2.c0) COLLATE BINARY)))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((((((t2.c0)OR(TOTAL(t2.c0))))AND(COUNT(t2.c0) COLLATE BINARY))) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((((t2.c0)OR(TOTAL(t2.c0))))AND(COUNT(t2.c0) COLLATE BINARY)) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (((((t2.c0)OR(TOTAL(t2.c0))))AND(COUNT(t2.c0) COLLATE BINARY)))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((((((t2.c0)OR(TOTAL(t2.c0))))AND(COUNT(t2.c0) COLLATE BINARY))) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL vt0.c1, t2.c0 FROM vt0, t2, t0, vt1;
SELECT vt0.c1, t2.c0 FROM vt0, t2, t0, vt1 WHERE ((((t2.c0 IN ())) IS FALSE)) UNION ALL SELECT ALL vt0.c1, t2.c0 FROM vt0, t2, t0, vt1 WHERE ((NOT ((((t2.c0 IN ())) IS FALSE)))) UNION ALL SELECT ALL vt0.c1, t2.c0 FROM vt0, t2, t0, vt1 WHERE ((((((t2.c0 IN ())) IS FALSE)) ISNULL));
SELECT ALL vt0.c1, t2.c0 FROM vt0, t2, t0, vt1;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE (((((t0.c0))<((0.2869425129217986))) IN ())) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT (((((t0.c0))<((0.2869425129217986))) IN ())))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE (((((((t0.c0))<((0.2869425129217986))) IN ())) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT vt1.c0, t2.c0 FROM vt1 INNER JOIN t2 ON ((vt1.c0 COLLATE NOCASE) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((((vt1.c0)AND(vt1.c0)))OR(211434797)))) GROUP BY vt1.c0, t2.c0;
SELECT ALL vt1.c0, t2.c0 FROM vt1 INNER JOIN t2 ON ((vt1.c0 COLLATE NOCASE) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((((vt1.c0)AND(vt1.c0)))OR(211434797)))) WHERE (((((t2.c0 COLLATE RTRIM)OR(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))AND(((vt1.c0)%(t2.c0))))) GROUP BY vt1.c0, t2.c0 UNION SELECT vt1.c0, t2.c0 FROM vt1 INNER JOIN t2 ON ((vt1.c0 COLLATE NOCASE) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((((vt1.c0)AND(vt1.c0)))OR(211434797)))) WHERE ((NOT (((((t2.c0 COLLATE RTRIM)OR(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))AND(((vt1.c0)%(t2.c0))))))) GROUP BY vt1.c0, t2.c0 UNION SELECT vt1.c0, t2.c0 FROM vt1 INNER JOIN t2 ON ((vt1.c0 COLLATE NOCASE) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((((vt1.c0)AND(vt1.c0)))OR(211434797)))) WHERE (((((((t2.c0 COLLATE RTRIM)OR(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))AND(((vt1.c0)%(t2.c0))))) ISNULL)) GROUP BY vt1.c0, t2.c0;
SELECT vt1.c0, t2.c0 FROM vt1 INNER JOIN t2 ON ((vt1.c0 COLLATE NOCASE) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((((vt1.c0)AND(vt1.c0)))OR(211434797)))) GROUP BY vt1.c0, t2.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((SUM(COUNT(vt0.c1)) IN ())) BETWEEN (COUNT(*)) AND (COUNT(vt0.c1))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ((((SUM(COUNT(vt0.c1)) IN ())) BETWEEN (COUNT(*)) AND (COUNT(vt0.c1))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((((SUM(COUNT(vt0.c1)) IN ())) BETWEEN (COUNT(*)) AND (COUNT(vt0.c1)))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((SUM(COUNT(vt0.c1)) IN ())) BETWEEN (COUNT(*)) AND (COUNT(vt0.c1))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ((((SUM(COUNT(vt0.c1)) IN ())) BETWEEN (COUNT(*)) AND (COUNT(vt0.c1))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((((SUM(COUNT(vt0.c1)) IN ())) BETWEEN (COUNT(*)) AND (COUNT(vt0.c1)))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL MIN((~ ((('T(')%(t0.c0))))) FROM vt0, t0;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((((t0.c0)*(t0.c0))) NOTNULL)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c0)*(t0.c0))) NOTNULL)))) UNION ALL SELECT * FROM t0 WHERE (((((((t0.c0)*(t0.c0))) NOTNULL)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0, t2, vt1 FULL OUTER JOIN vt0 ON ((vt0.c0)<=(t2.c0)) COLLATE BINARY;
SELECT DISTINCT * FROM t0, t2, vt1 FULL OUTER JOIN vt0 ON ((vt0.c0)<=(t2.c0)) COLLATE BINARY WHERE ('-362887230') UNION SELECT DISTINCT * FROM t0, t2, vt1 FULL OUTER JOIN vt0 ON ((vt0.c0)<=(t2.c0)) COLLATE BINARY WHERE ((NOT ('-362887230'))) UNION SELECT DISTINCT * FROM t0, t2, vt1 FULL OUTER JOIN vt0 ON ((vt0.c0)<=(t2.c0)) COLLATE BINARY WHERE ((('-362887230') ISNULL));
SELECT DISTINCT * FROM t0, t2, vt1 FULL OUTER JOIN vt0 ON ((vt0.c0)<=(t2.c0)) COLLATE BINARY;
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t2 WHERE (CAST(((vt0.c0)>=(t2.c0)) AS NUMERIC)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t2 WHERE ((NOT (CAST(((vt0.c0)>=(t2.c0)) AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t2 WHERE (((CAST(((vt0.c0)>=(t2.c0)) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t2 GROUP BY vt0.c0;
SELECT vt0.c0, vt0.c1, vt1.c0, t2.c0 FROM vt1, t2 INNER JOIN vt0 ON x'' GROUP BY vt0.c0, vt0.c1, vt1.c0, t2.c0;
SELECT vt0.c0, vt0.c1, vt1.c0, t2.c0 FROM vt1, t2 INNER JOIN vt0 ON x'' GROUP BY vt0.c0, vt0.c1, vt1.c0, t2.c0 HAVING (- (GROUP_CONCAT(MAX(COUNT(vt0.c0))))) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0, t2.c0 FROM vt1, t2 INNER JOIN vt0 ON x'' GROUP BY vt0.c0, vt0.c1, vt1.c0, t2.c0 HAVING (NOT ((- (GROUP_CONCAT(MAX(COUNT(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c0, t2.c0 FROM vt1, t2 INNER JOIN vt0 ON x'' GROUP BY vt0.c0, vt0.c1, vt1.c0, t2.c0 HAVING (((- (GROUP_CONCAT(MAX(COUNT(vt0.c0)))))) ISNULL);
SELECT vt1.c0, vt0.c0, t2.c0, vt0.c1 FROM vt0, vt1 CROSS JOIN t0 ON CAST(((t0.c0)>=(vt0.c1)) AS BLOB) INNER JOIN t2 ON CAST(load_extension(vt0.c0) AS REAL);
SELECT ALL vt1.c0, vt0.c0, t2.c0, vt0.c1 FROM vt0, vt1 CROSS JOIN t0 ON CAST(((t0.c0)>=(vt0.c1)) AS BLOB) INNER JOIN t2 ON CAST(load_extension(vt0.c0) AS REAL) WHERE (CASE WHEN (0Xbbba4fc IN ()) THEN (((t2.c0, vt0.c1, vt0.c0))>=((t2.c0, vt1.c0, t0.c0))) WHEN ((t0.c0)LIKE(t2.c0)) THEN (vt1.c0 IN (vt1.c0)) WHEN 0.9059236181840833 THEN TYPEOF(DISTINCT vt1.c0) END) UNION ALL SELECT vt1.c0, vt0.c0, t2.c0, vt0.c1 FROM vt0, vt1 CROSS JOIN t0 ON CAST(((t0.c0)>=(vt0.c1)) AS BLOB) INNER JOIN t2 ON CAST(load_extension(vt0.c0) AS REAL) WHERE ((NOT (CASE WHEN (0xbbba4fc IN ()) THEN (((t2.c0, vt0.c1, vt0.c0))>=((t2.c0, vt1.c0, t0.c0))) WHEN ((t0.c0)LIKE(t2.c0)) THEN (vt1.c0 IN (vt1.c0)) WHEN 0.9059236181840833 THEN TYPEOF(DISTINCT vt1.c0) END))) UNION ALL SELECT vt1.c0, vt0.c0, t2.c0, vt0.c1 FROM vt0, vt1 CROSS JOIN t0 ON CAST(((t0.c0)>=(vt0.c1)) AS BLOB) INNER JOIN t2 ON CAST(load_extension(vt0.c0) AS REAL) WHERE (((CASE WHEN (0xbbba4fc IN ()) THEN (((t2.c0, vt0.c1, vt0.c0))>=((t2.c0, vt1.c0, t0.c0))) WHEN ((t0.c0)LIKE(t2.c0)) THEN (vt1.c0 IN (vt1.c0)) WHEN 0.9059236181840833 THEN TYPEOF(DISTINCT vt1.c0) END) ISNULL));
SELECT vt1.c0, vt0.c0, t2.c0, vt0.c1 FROM vt0, vt1 CROSS JOIN t0 ON CAST(((t0.c0)>=(vt0.c1)) AS BLOB) INNER JOIN t2 ON CAST(load_extension(vt0.c0) AS REAL);
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE (((t2.c0 COLLATE BINARY) ISNULL)) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT (((t2.c0 COLLATE BINARY) ISNULL)))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE (((((t2.c0 COLLATE BINARY) ISNULL)) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT vt0.c1, t0.c0, vt1.c0, vt0.c0 FROM vt1, vt0, t0, t2 GROUP BY vt0.c1, t0.c0, vt1.c0, vt0.c0;
SELECT ALL vt0.c1, t0.c0, vt1.c0, vt0.c0 FROM vt1, vt0, t0, t2 WHERE (t0.c0) GROUP BY vt0.c1, t0.c0, vt1.c0, vt0.c0 UNION SELECT ALL vt0.c1, t0.c0, vt1.c0, vt0.c0 FROM vt1, vt0, t0, t2 WHERE ((NOT (t0.c0))) GROUP BY vt0.c1, t0.c0, vt1.c0, vt0.c0 UNION SELECT ALL vt0.c1, t0.c0, vt1.c0, vt0.c0 FROM vt1, vt0, t0, t2 WHERE (((t0.c0) ISNULL)) GROUP BY vt0.c1, t0.c0, vt1.c0, vt0.c0;
SELECT vt0.c1, t0.c0, vt1.c0, vt0.c0 FROM vt1, vt0, t0, t2 GROUP BY vt0.c1, t0.c0, vt1.c0, vt0.c0;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(SUM(MIN(COUNT(*)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(SUM(MIN(COUNT(*)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(SUM(MIN(COUNT(*))))) ISNULL);
SELECT MAX((~ (t0.c0)) COLLATE BINARY) FROM t0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((((~ (vt1.c0)))IS((((vt1.c0))<=((vt1.c0)))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((~ (vt1.c0)))IS((((vt1.c0))<=((vt1.c0)))))))) UNION ALL SELECT * FROM vt1 WHERE ((((((~ (vt1.c0)))IS((((vt1.c0))<=((vt1.c0)))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM t0, vt0, t2, vt1;
SELECT DISTINCT * FROM t0, vt0, t2, vt1 WHERE (CASE WHEN ((t0.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) THEN LOWER(DISTINCT '') END) UNION SELECT DISTINCT * FROM t0, vt0, t2, vt1 WHERE ((NOT (CASE WHEN ((t0.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) THEN LOWER(DISTINCT '') END))) UNION SELECT DISTINCT * FROM t0 NOT INDEXED, vt0, t2, vt1 WHERE (((CASE WHEN ((t0.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) THEN LOWER(DISTINCT '') END) ISNULL));
SELECT DISTINCT * FROM t0, vt0, t2, vt1;
SELECT ALL vt1.c0, t2.c0 FROM t2 INDEXED BY i34, vt1 GROUP BY vt1.c0, t2.c0;
SELECT vt1.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN t2 ON (((vt1.c0)) BETWEEN (((NOT (vt0.c1)))) AND ((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) CROSS JOIN vt0 ON ((((vt0.c1)>>(vt0.c0))) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN t2.c0 WHEN vt1.c0 THEN t2.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END) AND (0Xfffffffffc359667 COLLATE NOCASE)) GROUP BY vt1.c0, vt0.c1;
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON CAST(vt0.c0 AS INTEGER) RIGHT OUTER JOIN vt1 ON NULL;
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON CAST(vt0.c0 AS INTEGER) RIGHT OUTER JOIN vt1 ON NULL WHERE (LTRIM((0.8684138136971444 IN ()))) UNION ALL SELECT * FROM t0 LEFT OUTER JOIN vt0 ON CAST(vt0.c0 AS INTEGER) RIGHT OUTER JOIN vt1 ON NULL WHERE ((NOT (LTRIM((0.8684138136971444 IN ()))))) UNION ALL SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON CAST(vt0.c0 AS INTEGER) RIGHT OUTER JOIN vt1 ON NULL WHERE (((LTRIM((0.8684138136971444 IN ()))) ISNULL));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON CAST(vt0.c0 AS INTEGER) RIGHT OUTER JOIN vt1 ON NULL;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t2 ON UNLIKELY(DISTINCT (0.5244093672155452 IN ())) LEFT OUTER JOIN t0 ON (t0.c0 IN ());
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t2 ON UNLIKELY(DISTINCT (0.5244093672155452 IN ())) LEFT OUTER JOIN t0 ON (t0.c0 IN ()) WHERE (')Kolq' COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t2 ON UNLIKELY(DISTINCT (0.5244093672155452 IN ())) LEFT OUTER JOIN t0 ON (t0.c0 IN ()) WHERE ((NOT (')Kolq' COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t2 ON UNLIKELY(DISTINCT (0.5244093672155452 IN ())) LEFT OUTER JOIN t0 ON (t0.c0 IN ()) WHERE (((')Kolq' COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN t2 ON UNLIKELY(DISTINCT (0.5244093672155452 IN ())) LEFT OUTER JOIN t0 ON (t0.c0 IN ());
SELECT ALL t2.c0 FROM t0, t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t0, t2 WHERE (t0.c0 COLLATE RTRIM) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t0, t2 WHERE ((NOT (t0.c0 COLLATE RTRIM))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t0, t2 WHERE (((t0.c0 COLLATE RTRIM) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t0, t2 GROUP BY t2.c0;
SELECT t0.c0 FROM vt0, vt1, t0, t2 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, vt1, t0, t2 GROUP BY t0.c0 HAVING UNLIKELY(DISTINCT ((((MAX(t2.c0))OR(vt0.c0)))AND(TOTAL(vt1.c0)))) UNION ALL SELECT ALL t0.c0 FROM vt0, vt1 NOT INDEXED, t0, t2 GROUP BY t0.c0 HAVING (NOT (UNLIKELY(DISTINCT ((((MAX(t2.c0))OR(vt0.c0)))AND(TOTAL(vt1.c0)))))) UNION ALL SELECT ALL t0.c0 FROM vt0, vt1, t0, t2 GROUP BY t0.c0 HAVING ((UNLIKELY(DISTINCT ((((MAX(t2.c0))OR(vt0.c0)))AND(TOTAL(vt1.c0))))) ISNULL);
SELECT t0.c0 FROM vt0, vt1, t0, t2 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, vt1, t0, t2 GROUP BY t0.c0 HAVING UNLIKELY(DISTINCT ((((MAX(t2.c0))OR(vt0.c0)))AND(TOTAL(vt1.c0)))) UNION ALL SELECT ALL t0.c0 FROM vt0, vt1 NOT INDEXED, t0, t2 GROUP BY t0.c0 HAVING (NOT (UNLIKELY(DISTINCT ((((MAX(t2.c0))OR(vt0.c0)))AND(TOTAL(vt1.c0)))))) UNION ALL SELECT ALL t0.c0 FROM vt0, vt1, t0, t2 GROUP BY t0.c0 HAVING ((UNLIKELY(DISTINCT ((((MAX(t2.c0))OR(vt0.c0)))AND(TOTAL(vt1.c0))))) ISNULL);
SELECT t0.c0 FROM vt0, vt1, t0, t2 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c1) ISNULL) AS INTEGER);
SELECT vt0.c0 FROM vt0, t0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c1) ISNULL) AS INTEGER) WHERE ('er7') UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c1) ISNULL) AS INTEGER) WHERE ((NOT ('er7'))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c1) ISNULL) AS INTEGER) WHERE ((('er7') ISNULL));
SELECT ALL vt0.c0 FROM vt0, t0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c1) ISNULL) AS INTEGER);
SELECT DISTINCT t2.c0 FROM vt0, t2 CROSS JOIN vt1 ON 1772833787;
SELECT DISTINCT t2.c0 FROM vt0, t2 CROSS JOIN vt1 ON 1772833787 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (((t2.c0)>(vt1.c0))) AND (CAST(0.8073141804110854 AS NUMERIC)))) UNION SELECT DISTINCT t2.c0 FROM vt0, t2 CROSS JOIN vt1 ON 1772833787 WHERE ((NOT (((vt0.c0 COLLATE BINARY) BETWEEN (((t2.c0)>(vt1.c0))) AND (CAST(0.8073141804110854 AS NUMERIC)))))) UNION SELECT DISTINCT t2.c0 FROM vt0, t2 CROSS JOIN vt1 ON 1772833787 WHERE (((((vt0.c0 COLLATE BINARY) BETWEEN (((t2.c0)>(vt1.c0))) AND (CAST(0.8073141804110854 AS NUMERIC)))) ISNULL));
SELECT DISTINCT t2.c0 FROM vt0, t2 CROSS JOIN vt1 ON 1772833787;
SELECT ALL vt0.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (((vt1.c0)LIKE(vt0.c0)))) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (((vt1.c0)LIKE(vt0.c0)))) WHERE (vt0.c1) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (((vt1.c0)LIKE(vt0.c0)))) WHERE ((NOT (vt0.c1))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (((vt1.c0)LIKE(vt0.c0)))) WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (((vt1.c0)LIKE(vt0.c0)))) GROUP BY vt0.c1, vt0.c0;
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING GROUP_CONCAT(SUM(MIN(COUNT(*)))) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(SUM(MIN(COUNT(*)))))) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(SUM(MIN(COUNT(*))))) ISNULL);
SELECT vt0.c1, vt1.c0, t0.c0, vt0.c0 FROM vt0, vt1, t2, t0;
SELECT vt0.c1, vt1.c0, t0.c0, vt0.c0 FROM vt0, vt1, t2, t0 WHERE (((((((((((t2.c0) ISNULL))AND(((vt0.c0)!=(t0.c0)))))AND(vt1.c0 COLLATE BINARY)))OR((((x'41b1', t0.c0, vt0.c1))<((t0.c0, t0.c0, vt1.c0))))))AND(CASE WHEN vt1.c0 THEN t0.c0 ELSE vt0.c1 END))) UNION ALL SELECT ALL vt0.c1, vt1.c0, t0.c0, vt0.c0 FROM vt0, vt1, t2 NOT INDEXED, t0 WHERE ((NOT (((((((((((t2.c0) ISNULL))AND(((vt0.c0)!=(t0.c0)))))AND(vt1.c0 COLLATE BINARY)))OR((((x'41b1', t0.c0, vt0.c1))<((t0.c0, t0.c0, vt1.c0))))))AND(CASE WHEN vt1.c0 THEN t0.c0 ELSE vt0.c1 END))))) UNION ALL SELECT ALL vt0.c1, vt1.c0, t0.c0, vt0.c0 FROM vt0, vt1, t2, t0 WHERE (((((((((((((t2.c0) ISNULL))AND(((vt0.c0)!=(t0.c0)))))AND(vt1.c0 COLLATE BINARY)))OR((((x'41b1', t0.c0, vt0.c1))<((t0.c0, t0.c0, vt1.c0))))))AND(CASE WHEN vt1.c0 THEN t0.c0 ELSE vt0.c1 END))) ISNULL));
SELECT vt0.c1, vt1.c0, t0.c0, vt0.c0 FROM vt0, vt1, t2, t0;
SELECT DISTINCT * FROM t2 FULL OUTER JOIN t0 ON CASE WHEN ((t2.c0) BETWEEN (t2.c0) AND (vt0.c1)) THEN CAST(vt1.c0 AS REAL) ELSE ('' IN ()) END CROSS JOIN vt0 ON (t0.c0 IN (t2.c0)) COLLATE NOCASE FULL OUTER JOIN vt1 ON ('32495083' IN ());
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (((((vt0.c1) IS FALSE)) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))AND(vt1.c0))) AND (vt0.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((vt0.c1) IS FALSE)) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))AND(vt1.c0))) AND (vt0.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE (((((((vt0.c1) IS FALSE)) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))AND(vt1.c0))) AND (vt0.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt0.c1, t0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c1, t0.c0;
SELECT ALL vt0.c1, t0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c1, t0.c0 HAVING MAX(((AVG(GROUP_CONCAT(vt1.c0)))<<(MIN(AVG(vt1.c0))))) UNION ALL SELECT ALL vt0.c1, t0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c1, t0.c0 HAVING (NOT (MAX(((AVG(GROUP_CONCAT(vt1.c0)))<<(MIN(AVG(vt1.c0))))))) UNION ALL SELECT vt0.c1, t0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c1, t0.c0 HAVING ((MAX(((AVG(GROUP_CONCAT(vt1.c0)))<<(MIN(AVG(vt1.c0)))))) ISNULL);
SELECT t2.c0, vt0.c1 FROM t2 INDEXED BY i39, vt0;
SELECT DISTINCT vt0.c0, vt0.c1, t2.c0, vt1.c0 FROM t2 CROSS JOIN vt1 ON (((((vt0.c0)LIKE(t2.c0)), CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN t2.c0 THEN vt1.c0 END, CAST(vt0.c1 AS REAL)))<=((((t2.c0)LIKE(vt0.c1)), vt0.c1 COLLATE RTRIM, (((vt0.c1, x'', 1.006874893E9)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c1)) AND ((t2.c0, vt0.c1, vt1.c0)))))) FULL OUTER JOIN vt0 ON (NOT ((vt0.c1 IN (t2.c0))));
SELECT vt0.c1, t2.c0, vt0.c0, vt1.c0 FROM vt1, t2, vt0 GROUP BY vt0.c1, t2.c0, vt0.c0, vt1.c0;
SELECT vt0.c1, t2.c0, vt0.c0, vt1.c0 FROM vt1, t2, vt0 WHERE (CASE (vt1.c0 IN ())  WHEN ((((t2.c0)OR(vt0.c0)))OR(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END ELSE (- (vt1.c0)) END) GROUP BY vt0.c1, t2.c0, vt0.c0, vt1.c0 UNION SELECT vt0.c1, t2.c0, vt0.c0, vt1.c0 FROM vt1, t2, vt0 WHERE ((NOT (CASE (vt1.c0 IN ())  WHEN ((((t2.c0)OR(vt0.c0)))OR(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END ELSE (- (vt1.c0)) END))) GROUP BY vt0.c1, t2.c0, vt0.c0, vt1.c0 UNION SELECT vt0.c1, t2.c0, vt0.c0, vt1.c0 FROM vt1, t2, vt0 WHERE (((CASE (vt1.c0 IN ())  WHEN ((((t2.c0)OR(vt0.c0)))OR(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END ELSE (- (vt1.c0)) END) ISNULL)) GROUP BY vt0.c1, t2.c0, vt0.c0, vt1.c0;
SELECT vt0.c1, t2.c0, vt0.c0, vt1.c0 FROM vt1, t2, vt0 GROUP BY vt0.c1, t2.c0, vt0.c0, vt1.c0;
SELECT ALL vt0.c1 FROM t2, t0, vt0, vt1 GROUP BY vt0.c1;
SELECT vt0.c1 FROM t2, t0, vt0, vt1 GROUP BY vt0.c1 HAVING TOTAL(GROUP_CONCAT(SUM('-1569454129'))) UNION ALL SELECT ALL vt0.c1 FROM t2, t0, vt0, vt1 GROUP BY vt0.c1 HAVING (NOT (TOTAL(GROUP_CONCAT(SUM('-1569454129'))))) UNION ALL SELECT vt0.c1 FROM t2, t0, vt0, vt1 GROUP BY vt0.c1 HAVING ((TOTAL(GROUP_CONCAT(SUM('-1569454129')))) ISNULL);
SELECT * FROM t2 LEFT OUTER JOIN vt0 ON vt0.c0 INNER JOIN vt1 ON CAST(((vt0.c1) IS FALSE) AS NUMERIC);
SELECT ALL * FROM t2 LEFT OUTER JOIN vt0 ON vt0.c0 INNER JOIN vt1 ON CAST(((vt0.c1) IS FALSE) AS NUMERIC) WHERE (((CAST(t2.c0 AS BLOB)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((((vt1.c0)OR(vt0.c0)))OR(vt1.c0))))) UNION ALL SELECT * FROM t2 LEFT OUTER JOIN vt0 ON vt0.c0 INNER JOIN vt1 ON CAST(((vt0.c1) IS FALSE) AS NUMERIC) WHERE ((NOT (((CAST(t2.c0 AS BLOB)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((((vt1.c0)OR(vt0.c0)))OR(vt1.c0))))))) UNION ALL SELECT ALL * FROM t2 LEFT OUTER JOIN vt0 ON vt0.c0 INNER JOIN vt1 ON CAST(((vt0.c1) IS FALSE) AS NUMERIC) WHERE (((((CAST(t2.c0 AS BLOB)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((((vt1.c0)OR(vt0.c0)))OR(vt1.c0))))) ISNULL));
SELECT * FROM t2 LEFT OUTER JOIN vt0 ON vt0.c0 INNER JOIN vt1 ON CAST(((vt0.c1) IS FALSE) AS NUMERIC);
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0)|(vt1.c0))) AND (((vt1.c0) IS TRUE)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0)|(vt1.c0))) AND (((vt1.c0) IS TRUE)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0)|(vt1.c0))) AND (((vt1.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE (((0.7585818441400181)+(t2.c0))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT (((0.7585818441400181)+(t2.c0))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE (((((0.7585818441400181)+(t2.c0))) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING SUM(COUNT(vt0.c0)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (SUM(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((SUM(COUNT(vt0.c0))) ISNULL);
SELECT * FROM t2 RIGHT OUTER JOIN vt1 ON ((((vt0.c1)>(vt1.c0)))>=(((t2.c0) NOTNULL))) FULL OUTER JOIN vt0 ON vt1.c0;
SELECT DISTINCT vt0.c0, t2.c0, vt0.c1 FROM vt1, vt0, t2;
SELECT DISTINCT vt0.c0, t2.c0, vt0.c1 FROM vt1, vt0, t2 WHERE (CASE t2.c0 COLLATE NOCASE  WHEN vt0.c1 COLLATE RTRIM THEN (((t2.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) END) UNION SELECT DISTINCT vt0.c0, t2.c0, vt0.c1 FROM vt1, vt0, t2 WHERE ((NOT (CASE t2.c0 COLLATE NOCASE  WHEN vt0.c1 COLLATE RTRIM THEN (((t2.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) END))) UNION SELECT DISTINCT vt0.c0, t2.c0, vt0.c1 FROM vt1, vt0, t2 WHERE (((CASE t2.c0 COLLATE NOCASE  WHEN vt0.c1 COLLATE RTRIM THEN (((t2.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) END) ISNULL));
SELECT DISTINCT vt0.c0, t2.c0, vt0.c1 FROM vt1, vt0, t2;
SELECT ALL t2.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, t2 LEFT OUTER JOIN t0 ON (- (t2.c0)) COLLATE NOCASE GROUP BY t2.c0, vt0.c0, vt0.c1, vt1.c0;
SELECT t2.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, t2 LEFT OUTER JOIN t0 ON (- (t2.c0)) COLLATE NOCASE WHERE (0.012107474444338573) GROUP BY t2.c0, vt0.c0, vt0.c1, vt1.c0 UNION SELECT t2.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, t2 LEFT OUTER JOIN t0 ON (- (t2.c0)) COLLATE NOCASE WHERE ((NOT (0.012107474444338573))) GROUP BY t2.c0, vt0.c0, vt0.c1, vt1.c0 UNION SELECT t2.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, t2 LEFT OUTER JOIN t0 ON (- (t2.c0)) COLLATE NOCASE WHERE (((0.012107474444338573) ISNULL)) GROUP BY t2.c0, vt0.c0, vt0.c1, vt1.c0;
SELECT ALL t2.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, t2 LEFT OUTER JOIN t0 ON (- (t2.c0)) COLLATE NOCASE GROUP BY t2.c0, vt0.c0, vt0.c1, vt1.c0;
SELECT ALL vt0.c1, t2.c0 FROM vt0, t2 GROUP BY vt0.c1, t2.c0;
SELECT vt0.c1, t2.c0 FROM vt0, t2 GROUP BY vt0.c1, t2.c0 HAVING GROUP_CONCAT((((((((('-493855982')AND(COUNT(*))))OR(vt0.c0)))AND(vt0.c0)))OR(AVG(vt0.c0)))) UNION ALL SELECT ALL vt0.c1, t2.c0 FROM vt0, t2 GROUP BY vt0.c1, t2.c0 HAVING (NOT (GROUP_CONCAT((((((((('-493855982')AND(COUNT(*))))OR(vt0.c0)))AND(vt0.c0)))OR(AVG(vt0.c0)))))) UNION ALL SELECT ALL vt0.c1, t2.c0 FROM vt0, t2 GROUP BY vt0.c1, t2.c0 HAVING ((GROUP_CONCAT((((((((('-493855982')AND(COUNT(*))))OR(vt0.c0)))AND(vt0.c0)))OR(AVG(vt0.c0))))) ISNULL);
SELECT vt1.c0, t0.c0 FROM t0, vt1;
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 WHERE (((t0.c0 COLLATE NOCASE) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0)))) AND (((vt1.c0)-(t0.c0))))) UNION ALL SELECT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((NOT (((t0.c0 COLLATE NOCASE) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0)))) AND (((vt1.c0)-(t0.c0))))))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 WHERE (((((t0.c0 COLLATE NOCASE) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0)))) AND (((vt1.c0)-(t0.c0))))) ISNULL));
SELECT vt1.c0, t0.c0 FROM t0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1) ISNULL) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c1) ISNULL) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1) ISNULL) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1, vt0.c0, t2.c0, vt1.c0 FROM vt1, t2, vt0 GROUP BY vt0.c1, vt0.c0, t2.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, t2.c0, vt1.c0 FROM vt1, t2, vt0 WHERE (0.7080136315860587) GROUP BY vt0.c1, vt0.c0, t2.c0, vt1.c0 UNION SELECT vt0.c1, vt0.c0, t2.c0, vt1.c0 FROM vt1, t2, vt0 WHERE ((NOT (0.7080136315860587))) GROUP BY vt0.c1, vt0.c0, t2.c0, vt1.c0 UNION SELECT vt0.c1, vt0.c0, t2.c0, vt1.c0 FROM vt1, t2, vt0 WHERE (((0.7080136315860587) ISNULL)) GROUP BY vt0.c1, vt0.c0, t2.c0, vt1.c0;
SELECT ALL vt0.c1, vt0.c0, t2.c0, vt1.c0 FROM vt1, t2, vt0 GROUP BY vt0.c1, vt0.c0, t2.c0, vt1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(TOTAL(COUNT(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(COUNT(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(TOTAL(COUNT(t0.c0)))) ISNULL);
SELECT ALL TOTAL(UPPER(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) FROM vt0, t2 ORDER BY (((t2.c0 IN ()))OR(((((vt0.c1)AND(t2.c0)))OR(t2.c0))))  NULLS LAST;
SELECT t2.c0 FROM t2 LEFT OUTER JOIN t0 ON ((((vt1.c0) IS TRUE))<((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((t2.c0))))) RIGHT OUTER JOIN vt0 ON ((((CAST(0.27455673908517053 AS REAL))OR(vt0.c0)))AND(((t0.c0)+(vt0.c1)))) LEFT OUTER JOIN vt1 ON (((((t2.c0)OR(vt1.c0)))AND(t2.c0)) IN ());
SELECT DISTINCT * FROM t2 RIGHT OUTER JOIN t0 ON LENGTH(vt1.c0) CROSS JOIN vt1 ON (((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0))))<=((t0.c0))) FULL OUTER JOIN vt0 ON LIKELIHOOD(((NULL)%(t2.c0)), 0.6196331981989336);
SELECT ALL t2.c0 FROM t0, t2 CROSS JOIN vt1 ON ((vt1.c0) NOT NULL) COLLATE BINARY GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t0, t2 CROSS JOIN vt1 ON ((vt1.c0) NOT NULL) COLLATE BINARY WHERE (((t2.c0)<(CAST(t2.c0 AS INTEGER)))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t0, t2 CROSS JOIN vt1 ON ((vt1.c0) NOT NULL) COLLATE BINARY WHERE ((NOT (((t2.c0)<(CAST(t2.c0 AS INTEGER)))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t0, t2 CROSS JOIN vt1 ON ((vt1.c0) NOT NULL) COLLATE BINARY WHERE (((((t2.c0)<(CAST(t2.c0 AS INTEGER)))) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t0, t2 CROSS JOIN vt1 ON ((vt1.c0) NOT NULL) COLLATE BINARY GROUP BY t2.c0;
SELECT vt1.c0, vt0.c1, t0.c0, t2.c0 FROM vt1, t0, t2, vt0 GROUP BY vt1.c0, vt0.c1, t0.c0, t2.c0;
SELECT vt1.c0, vt0.c1, t0.c0, t2.c0 FROM vt1, t0, t2, vt0 GROUP BY vt1.c0, vt0.c1, t0.c0, t2.c0 HAVING SUM(COUNT(COUNT(x'e3bb'))) UNION ALL SELECT vt1.c0, vt0.c1, t0.c0, t2.c0 FROM vt1, t0, t2, vt0 GROUP BY vt1.c0, vt0.c1, t0.c0, t2.c0 HAVING (NOT (SUM(COUNT(COUNT(x'e3bb'))))) UNION ALL SELECT vt1.c0, vt0.c1, t0.c0, t2.c0 FROM vt1, t0, t2 NOT INDEXED, vt0 GROUP BY vt1.c0, vt0.c1, t0.c0, t2.c0 HAVING ((SUM(COUNT(COUNT(x'e3bb')))) ISNULL);
SELECT TOTAL(CAST((- (vt1.c0)) AS TEXT)) FROM vt1, t2;
SELECT ALL vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)IS(((((((((x'')AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)IS(((((((((x'')AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0))))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)IS(((((((((x'')AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) NOTNULL)) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)IS(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0) NOTNULL)) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)IS(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0) NOTNULL)) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)IS(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT t0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE ('0.9867488205094509') GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE ((NOT ('0.9867488205094509'))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE ((('0.9867488205094509') ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING '-437907686' UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ('-437907686')) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (('-437907686') ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING '-437907686' UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ('-437907686')) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (('-437907686') ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM vt0, t0, t2;
SELECT * FROM vt0, t0, t2 WHERE ((vt0.c1 IN (t2.c0))) UNION ALL SELECT ALL * FROM vt0, t0, t2 WHERE ((NOT ((vt0.c1 IN (t2.c0))))) UNION ALL SELECT ALL * FROM vt0, t0, t2 WHERE ((((vt0.c1 IN (t2.c0))) ISNULL));
SELECT ALL * FROM vt0, t0, t2;
SELECT DISTINCT * FROM vt0, vt1, t0;
SELECT DISTINCT * FROM vt0, vt1, t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM vt0, vt1, t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM vt0, vt1, t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, t0;
SELECT vt0.c0 FROM vt0, t2, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t2, vt1 WHERE ((((vt0.c0))>=((x''))) COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t2, vt1 WHERE ((NOT ((((vt0.c0))>=((x''))) COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, t2, vt1 WHERE ((((((vt0.c0))>=((x''))) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t2, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, t2 GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, t2 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING TOTAL((TOTAL(vt0.c0) IN ())) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, t2 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING (NOT (TOTAL((TOTAL(vt0.c0) IN ())))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, t2 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING ((TOTAL((TOTAL(vt0.c0) IN ()))) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, t2 GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, t2 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING TOTAL((TOTAL(vt0.c0) IN ())) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, t2 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING (NOT (TOTAL((TOTAL(vt0.c0) IN ())))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, t2 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING ((TOTAL((TOTAL(vt0.c0) IN ()))) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, t2 GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (0.1521246224020706) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (0.1521246224020706))) UNION ALL SELECT * FROM vt1 WHERE (((0.1521246224020706) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE ((((vt0.c1 COLLATE BINARY))>(((+ (vt0.c1)))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT ((((vt0.c1 COLLATE BINARY))>(((+ (vt0.c1)))))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((((((vt0.c1 COLLATE BINARY))>(((+ (vt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT vt1.c0, t0.c0, vt0.c0 FROM t0, t2 RIGHT OUTER JOIN vt1 ON ((((vt0.c0) NOT NULL)) NOT BETWEEN (NULL) AND (x'')) INNER JOIN vt0 ON (+ (t2.c0 COLLATE BINARY)) GROUP BY vt1.c0, t0.c0, vt0.c0;
SELECT vt1.c0, vt0.c1 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c1;
SELECT vt1.c0, vt0.c1 FROM t0, vt1, vt0 NOT INDEXED GROUP BY vt1.c0, vt0.c1 HAVING GROUP_CONCAT(GROUP_CONCAT(vt1.c0)) UNION ALL SELECT ALL vt1.c0, vt0.c1 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT vt1.c0, vt0.c1 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c1 HAVING ((GROUP_CONCAT(GROUP_CONCAT(vt1.c0))) ISNULL);
SELECT ALL t0.c0, vt1.c0, vt0.c1, vt0.c0, t2.c0 FROM vt1, t0, vt0, t2;
SELECT t0.c0, vt1.c0, vt0.c1, vt0.c0, t2.c0 FROM vt1, t0, vt0, t2 WHERE (((((vt0.c0)OR(t0.c0)))>(vt0.c1))) UNION ALL SELECT t0.c0, vt1.c0, vt0.c1, vt0.c0, t2.c0 FROM vt1, t0, vt0, t2 WHERE ((NOT (((((vt0.c0)OR(t0.c0)))>(vt0.c1))))) UNION ALL SELECT ALL t0.c0, vt1.c0, vt0.c1, vt0.c0, t2.c0 FROM vt1, t0, vt0, t2 WHERE (((((((vt0.c0)OR(t0.c0)))>(vt0.c1))) ISNULL));
SELECT ALL t0.c0, vt1.c0, vt0.c1, vt0.c0, t2.c0 FROM vt1, t0, vt0, t2;
SELECT DISTINCT * FROM vt1, vt0, t0;
SELECT DISTINCT * FROM vt1, vt0, t0 WHERE ((- (t0.c0))) UNION SELECT DISTINCT * FROM vt1, vt0, t0 WHERE ((NOT ((- (t0.c0))))) UNION SELECT DISTINCT * FROM vt1, vt0, t0 WHERE ((((- (t0.c0))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, t0;
SELECT t2.c0, vt1.c0, vt0.c1 FROM vt1 INDEXED BY i39, t2, vt0, t0 GROUP BY t2.c0, vt1.c0, vt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt0, t0, vt1, t2;
SELECT ALL * FROM vt0, t0, vt1, t2 WHERE (CASE WHEN ((t0.c0) NOTNULL) THEN ((t0.c0)AND(t0.c0)) WHEN CAST(t0.c0 AS REAL) THEN (((t2.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c1))) WHEN ((((((((vt0.c1)OR(vt0.c0)))OR(0.1823667372418839)))OR(vt0.c1)))OR(vt1.c0)) THEN (((vt0.c0))==((vt0.c0))) WHEN (vt0.c1 IN ()) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)) WHEN CAST(vt0.c0 AS REAL) THEN t2.c0 ELSE ((t0.c0) NOTNULL) END) UNION ALL SELECT ALL * FROM vt0, t0, vt1, t2 WHERE ((NOT (CASE WHEN ((t0.c0) NOTNULL) THEN ((t0.c0)AND(t0.c0)) WHEN CAST(t0.c0 AS REAL) THEN (((t2.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c1))) WHEN ((((((((vt0.c1)OR(vt0.c0)))OR(0.1823667372418839)))OR(vt0.c1)))OR(vt1.c0)) THEN (((vt0.c0))==((vt0.c0))) WHEN (vt0.c1 IN ()) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)) WHEN CAST(vt0.c0 AS REAL) THEN t2.c0 ELSE ((t0.c0) NOTNULL) END))) UNION ALL SELECT ALL * FROM vt0, t0, vt1, t2 WHERE (((CASE WHEN ((t0.c0) NOTNULL) THEN ((t0.c0)AND(t0.c0)) WHEN CAST(t0.c0 AS REAL) THEN (((t2.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c1))) WHEN ((((((((vt0.c1)OR(vt0.c0)))OR(0.1823667372418839)))OR(vt0.c1)))OR(vt1.c0)) THEN (((vt0.c0))=((vt0.c0))) WHEN (vt0.c1 IN ()) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)) WHEN CAST(vt0.c0 AS REAL) THEN t2.c0 ELSE ((t0.c0) NOTNULL) END) ISNULL));
SELECT * FROM vt0, t0, vt1, t2;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE NOCASE) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((vt1.c0 IN ()) COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ()) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c1 FROM vt0, t0, t2, vt1 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, t0, t2, vt1 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN LIKELIHOOD(t2.c0, 0.8495241857625409) END) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, t0, t2, vt1 WHERE ((NOT (CASE WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN LIKELIHOOD(t2.c0, 0.8495241857625409) END))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, t0, t2 NOT INDEXED, vt1 WHERE (((CASE WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN LIKELIHOOD(t2.c0, 0.8495241857625409) END) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, t0, t2, vt1 GROUP BY vt0.c1;
SELECT ALL t0.c0, t2.c0, vt1.c0, vt0.c1 FROM vt0, t2, vt1, t0 GROUP BY t0.c0, t2.c0, vt1.c0, vt0.c1;
SELECT t0.c0, t2.c0, vt1.c0, vt0.c1 FROM vt0, t2, vt1, t0 GROUP BY t0.c0, t2.c0, vt1.c0, vt0.c1 HAVING ((((MAX(MAX(AVG(vt0.c1))))OR(vt0.c1)))AND(TOTAL(AVG(t0.c0)))) UNION ALL SELECT t0.c0, t2.c0, vt1.c0, vt0.c1 FROM vt0, t2, vt1, t0 GROUP BY t0.c0, t2.c0, vt1.c0, vt0.c1 HAVING (NOT (((((MAX(MAX(AVG(vt0.c1))))OR(vt0.c1)))AND(TOTAL(AVG(t0.c0)))))) UNION ALL SELECT ALL t0.c0, t2.c0, vt1.c0, vt0.c1 FROM vt0, t2, vt1, t0 GROUP BY t0.c0, t2.c0, vt1.c0, vt0.c1 HAVING ((((((MAX(MAX(AVG(vt0.c1))))OR(vt0.c1)))AND(TOTAL(AVG(t0.c0))))) ISNULL);
SELECT ALL * FROM vt1, t2, vt0;
SELECT * FROM vt1, t2, vt0 WHERE (((NULL)-(t2.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM vt1, t2, vt0 WHERE ((NOT (((NULL)-(t2.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM vt1, t2, vt0 WHERE (((((NULL)-(t2.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt1, t2, vt0;
SELECT DISTINCT t2.c0, vt0.c1 FROM t0, vt0, t2, vt1;
SELECT DISTINCT t2.c0, vt0.c1 FROM t0, vt0, t2, vt1 WHERE (((((vt0.c0)==(t2.c0))) NOT BETWEEN (rtreenode(vt0.c0, vt0.c0)) AND ((('-1645983720') BETWEEN ('0.5578888635302822') AND (t2.c0))))) UNION SELECT DISTINCT t2.c0, vt0.c1 FROM t0, vt0, t2, vt1 WHERE ((NOT (((((vt0.c0)=(t2.c0))) NOT BETWEEN (rtreenode(vt0.c0, vt0.c0)) AND ((('-1645983720') BETWEEN ('0.5578888635302822') AND (t2.c0))))))) UNION SELECT DISTINCT t2.c0, vt0.c1 FROM t0, vt0, t2, vt1 WHERE (((((((vt0.c0)=(t2.c0))) NOT BETWEEN (rtreenode(vt0.c0, vt0.c0)) AND ((('-1645983720') BETWEEN ('0.5578888635302822') AND (t2.c0))))) ISNULL));
SELECT DISTINCT t2.c0, vt0.c1 FROM t0, vt0, t2, vt1;
SELECT t2.c0 FROM t2, vt1 GROUP BY t2.c0;
SELECT t2.c0 FROM t2, vt1 WHERE (ABS(t2.c0) COLLATE RTRIM) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2, vt1 WHERE ((NOT (ABS(t2.c0) COLLATE RTRIM))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2, vt1 WHERE (((ABS(t2.c0) COLLATE RTRIM) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2, vt1 GROUP BY t2.c0;
SELECT vt0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0 HAVING '0.2425638156642479' UNION ALL SELECT ALL vt0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0 HAVING (NOT ('0.2425638156642479')) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0 HAVING (('0.2425638156642479') ISNULL);
SELECT vt0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0 HAVING '0.2425638156642479' UNION ALL SELECT ALL vt0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0 HAVING (NOT ('0.2425638156642479')) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0 HAVING (('0.2425638156642479') ISNULL);
SELECT vt0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0;
SELECT t2.c0 FROM t2;
SELECT t2.c0 FROM t2 WHERE (((((((t2.c0)>(t2.c0)))OR(CAST(t2.c0 AS NUMERIC))))OR(t2.c0 COLLATE BINARY))) UNION ALL SELECT t2.c0 FROM t2 WHERE ((NOT (((((((t2.c0)>(t2.c0)))OR(CAST(t2.c0 AS NUMERIC))))OR(t2.c0 COLLATE BINARY))))) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE (((((((((t2.c0)>(t2.c0)))OR(CAST(t2.c0 AS NUMERIC))))OR(t2.c0 COLLATE BINARY))) ISNULL));
SELECT t2.c0 FROM t2;
SELECT DISTINCT * FROM vt1, vt0 LEFT OUTER JOIN t2 ON ((((((((vt0.c0 COLLATE BINARY)AND(NULLIF(t2.c0, t0.c0))))AND(vt0.c1)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (t2.c0)))))AND(((t2.c0) IS FALSE))) INNER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND ('瘼}')))AND(UPPER(vt1.c0)));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(NULL AS REAL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(NULL AS REAL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(NULL AS REAL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c1 FROM t0, vt1, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM t0, vt1, vt0 GROUP BY vt0.c1 HAVING GLOB(COUNT(*), AVG(vt0.c1)) UNION ALL SELECT vt0.c1 FROM t0, vt1, vt0 GROUP BY vt0.c1 HAVING (NOT (GLOB(COUNT(*), AVG(vt0.c1)))) UNION ALL SELECT vt0.c1 FROM t0, vt1, vt0 GROUP BY vt0.c1 HAVING ((GLOB(COUNT(*), AVG(vt0.c1))) ISNULL);
SELECT ALL vt0.c1 FROM t0, vt1, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM t0, vt1, vt0 GROUP BY vt0.c1 HAVING GLOB(COUNT(*), AVG(vt0.c1)) UNION ALL SELECT vt0.c1 FROM t0, vt1, vt0 GROUP BY vt0.c1 HAVING (NOT (GLOB(COUNT(*), AVG(vt0.c1)))) UNION ALL SELECT vt0.c1 FROM t0, vt1, vt0 GROUP BY vt0.c1 HAVING ((GLOB(COUNT(*), AVG(vt0.c1))) ISNULL);
SELECT ALL vt0.c1 FROM t0, vt1, vt0 GROUP BY vt0.c1;
SELECT ALL t2.c0 FROM t2;
SELECT ALL t2.c0 FROM t2 WHERE (((((t2.c0) BETWEEN (t2.c0) AND (t2.c0)))>=(((t2.c0)>>(0.4514014049325562))))) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE ((NOT (((((t2.c0) BETWEEN (t2.c0) AND (t2.c0)))>=(((t2.c0)>>(0.4514014049325562))))))) UNION ALL SELECT t2.c0 FROM t2 WHERE (((((((t2.c0) BETWEEN (t2.c0) AND (t2.c0)))>=(((t2.c0)>>(0.4514014049325562))))) ISNULL));
SELECT ALL t2.c0 FROM t2;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE ((vt0.c0)<>(vt0.c1))  WHEN SUBSTR(vt0.c0, vt0.c0) THEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c0)!=(vt0.c1))  WHEN SUBSTR(vt0.c0, vt0.c0) THEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE ((vt0.c0)!=(vt0.c1))  WHEN SUBSTR(vt0.c0, vt0.c0) THEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL t2.c0, t0.c0, vt1.c0 FROM vt1, t0 INNER JOIN vt0 ON NULL INNER JOIN t2 ON ((((t2.c0)=(t2.c0)))OR((((vt1.c0, vt0.c0, t0.c0)) BETWEEN ((vt0.c0, t2.c0, vt1.c0)) AND ((t0.c0, '0.592097691580611', vt0.c0))))) GROUP BY t2.c0, t0.c0, vt1.c0;
SELECT t2.c0, t0.c0, vt1.c0 FROM vt1, t0 INNER JOIN vt0 ON NULL INNER JOIN t2 ON ((((t2.c0)==(t2.c0)))OR((((vt1.c0, vt0.c0, t0.c0)) BETWEEN ((vt0.c0, t2.c0, vt1.c0)) AND ((t0.c0, '0.592097691580611', vt0.c0))))) WHERE (-1.639438694E9) GROUP BY t2.c0, t0.c0, vt1.c0 UNION SELECT ALL t2.c0, t0.c0, vt1.c0 FROM vt1, t0 INNER JOIN vt0 ON NULL INNER JOIN t2 ON ((((t2.c0)==(t2.c0)))OR((((vt1.c0, vt0.c0, t0.c0)) BETWEEN ((vt0.c0, t2.c0, vt1.c0)) AND ((t0.c0, '0.592097691580611', vt0.c0))))) WHERE ((NOT (-1.639438694E9))) GROUP BY t2.c0, t0.c0, vt1.c0 UNION SELECT ALL t2.c0, t0.c0, vt1.c0 FROM vt1, t0 INNER JOIN vt0 ON NULL INNER JOIN t2 ON ((((t2.c0)=(t2.c0)))OR((((vt1.c0, vt0.c0, t0.c0)) BETWEEN ((vt0.c0, t2.c0, vt1.c0)) AND ((t0.c0, '0.592097691580611', vt0.c0))))) WHERE (((-1.639438694E9) ISNULL)) GROUP BY t2.c0, t0.c0, vt1.c0;
SELECT ALL t2.c0, t0.c0, vt1.c0 FROM vt1, t0 INNER JOIN vt0 ON NULL INNER JOIN t2 ON ((((t2.c0)=(t2.c0)))OR((((vt1.c0, vt0.c0, t0.c0)) BETWEEN ((vt0.c0, t2.c0, vt1.c0)) AND ((t0.c0, '0.592097691580611', vt0.c0))))) GROUP BY t2.c0, t0.c0, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, t2.c0, vt1.c0 FROM t0, vt0, vt1 LEFT OUTER JOIN t2 ON (((((t2.c0))<=((t2.c0))))AND(((t0.c0)<>(t2.c0)))) GROUP BY vt0.c0, vt0.c1, t2.c0, vt1.c0;
SELECT vt0.c0, vt0.c1, t2.c0, vt1.c0 FROM t0, vt0, vt1 LEFT OUTER JOIN t2 ON (((((t2.c0))<=((t2.c0))))AND(((t0.c0)<>(t2.c0)))) GROUP BY vt0.c0, vt0.c1, t2.c0, vt1.c0 HAVING (MIN(TOTAL(vt1.c0)) IN ()) UNION ALL SELECT ALL vt0.c0, vt0.c1, t2.c0, vt1.c0 FROM t0, vt0, vt1 LEFT OUTER JOIN t2 ON (((((t2.c0))<=((t2.c0))))AND(((t0.c0)<>(t2.c0)))) GROUP BY vt0.c0, vt0.c1, t2.c0, vt1.c0 HAVING (NOT ((MIN(TOTAL(vt1.c0)) IN ()))) UNION ALL SELECT ALL vt0.c0, vt0.c1, t2.c0, vt1.c0 FROM t0, vt0, vt1 LEFT OUTER JOIN t2 ON (((((t2.c0))<=((t2.c0))))AND(((t0.c0)<>(t2.c0)))) GROUP BY vt0.c0, vt0.c1, t2.c0, vt1.c0 HAVING (((MIN(TOTAL(vt1.c0)) IN ())) ISNULL);
SELECT ALL vt0.c0, vt0.c1, t2.c0, vt1.c0 FROM t0, vt0, vt1 LEFT OUTER JOIN t2 ON (((((t2.c0))<=((t2.c0))))AND(((t0.c0)<>(t2.c0)))) GROUP BY vt0.c0, vt0.c1, t2.c0, vt1.c0;
SELECT vt0.c0, vt0.c1, t2.c0, vt1.c0 FROM t0, vt0, vt1 LEFT OUTER JOIN t2 ON (((((t2.c0))<=((t2.c0))))AND(((t0.c0)<>(t2.c0)))) GROUP BY vt0.c0, vt0.c1, t2.c0, vt1.c0 HAVING (MIN(TOTAL(vt1.c0)) IN ()) UNION ALL SELECT ALL vt0.c0, vt0.c1, t2.c0, vt1.c0 FROM t0, vt0, vt1 LEFT OUTER JOIN t2 ON (((((t2.c0))<=((t2.c0))))AND(((t0.c0)<>(t2.c0)))) GROUP BY vt0.c0, vt0.c1, t2.c0, vt1.c0 HAVING (NOT ((MIN(TOTAL(vt1.c0)) IN ()))) UNION ALL SELECT ALL vt0.c0, vt0.c1, t2.c0, vt1.c0 FROM t0, vt0, vt1 LEFT OUTER JOIN t2 ON (((((t2.c0))<=((t2.c0))))AND(((t0.c0)<>(t2.c0)))) GROUP BY vt0.c0, vt0.c1, t2.c0, vt1.c0 HAVING (((MIN(TOTAL(vt1.c0)) IN ())) ISNULL);
SELECT ALL vt0.c0, vt0.c1, t2.c0, vt1.c0 FROM t0, vt0, vt1 LEFT OUTER JOIN t2 ON (((((t2.c0))<=((t2.c0))))AND(((t0.c0)<>(t2.c0)))) GROUP BY vt0.c0, vt0.c1, t2.c0, vt1.c0;
SELECT ALL * FROM vt1, t2, t0;
SELECT * FROM vt1, t2, t0 WHERE ((~ (t2.c0 COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt1, t2, t0 WHERE ((NOT ((~ (t2.c0 COLLATE BINARY))))) UNION ALL SELECT * FROM vt1, t2, t0 WHERE ((((~ (t2.c0 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM vt1, t2, t0;
SELECT DISTINCT t2.c0, vt1.c0 FROM vt1, t2;
SELECT DISTINCT t2.c0, vt1.c0 FROM vt1, t2 WHERE (((((t2.c0) IS TRUE))GLOB((((vt1.c0))>((t2.c0)))))) UNION SELECT DISTINCT t2.c0, vt1.c0 FROM vt1, t2 WHERE ((NOT (((((t2.c0) IS TRUE))GLOB((((vt1.c0))>((t2.c0)))))))) UNION SELECT DISTINCT t2.c0, vt1.c0 FROM vt1, t2 WHERE (((((((t2.c0) IS TRUE))GLOB((((vt1.c0))>((t2.c0)))))) ISNULL));
SELECT DISTINCT t2.c0, vt1.c0 FROM vt1, t2;
SELECT vt0.c0, t2.c0, t0.c0 FROM t2, vt0, t0 GROUP BY vt0.c0, t2.c0, t0.c0;
SELECT vt0.c0, t2.c0, t0.c0 FROM t2, vt0, t0 WHERE (CAST(x'' COLLATE BINARY AS NUMERIC)) GROUP BY vt0.c0, t2.c0, t0.c0 UNION SELECT vt0.c0, t2.c0, t0.c0 FROM t2, vt0, t0 WHERE ((NOT (CAST(x'' COLLATE BINARY AS NUMERIC)))) GROUP BY vt0.c0, t2.c0, t0.c0 UNION SELECT ALL vt0.c0, t2.c0, t0.c0 FROM t2, vt0, t0 WHERE (((CAST(x'' COLLATE BINARY AS NUMERIC)) ISNULL)) GROUP BY vt0.c0, t2.c0, t0.c0;
SELECT vt0.c0, t2.c0, t0.c0 FROM t2, vt0, t0 GROUP BY vt0.c0, t2.c0, t0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(((MAX(vt1.c0))GLOB(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(((MAX(vt1.c0))GLOB(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(((MAX(vt1.c0))GLOB(vt1.c0)))) ISNULL);
SELECT t2.c0, vt0.c1, vt0.c0, vt1.c0 FROM t2, vt1, vt0, t0;
SELECT ALL t2.c0, vt0.c1, vt0.c0, vt1.c0 FROM t2, vt1, vt0, t0 WHERE ((((vt1.c0, t0.c0, vt1.c0)) NOT BETWEEN ((((vt0.c1) BETWEEN (vt1.c0) AND (t0.c0)), TRIM(NULL), ((t2.c0)<<(vt0.c0)))) AND ((vt1.c0 COLLATE NOCASE, vt0.c0, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)))))) UNION ALL SELECT ALL t2.c0, vt0.c1, vt0.c0, vt1.c0 FROM t2, vt1, vt0, t0 WHERE ((NOT ((((vt1.c0, t0.c0, vt1.c0)) NOT BETWEEN ((((vt0.c1) BETWEEN (vt1.c0) AND (t0.c0)), TRIM(NULL), ((t2.c0)<<(vt0.c0)))) AND ((vt1.c0 COLLATE NOCASE, vt0.c0, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)))))))) UNION ALL SELECT t2.c0, vt0.c1, vt0.c0, vt1.c0 FROM t2, vt1, vt0, t0 WHERE ((((((vt1.c0, t0.c0, vt1.c0)) NOT BETWEEN ((((vt0.c1) BETWEEN (vt1.c0) AND (t0.c0)), TRIM(NULL), ((t2.c0)<<(vt0.c0)))) AND ((vt1.c0 COLLATE NOCASE, vt0.c0, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)))))) ISNULL));
SELECT t2.c0, vt0.c1, vt0.c0, vt1.c0 FROM t2, vt1, vt0, t0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))) ISNULL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))) ISNULL)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL t2.c0, vt0.c0, t0.c0, vt0.c1 FROM vt1, vt0, t0, t2 GROUP BY t2.c0, vt0.c0, t0.c0, vt0.c1;
SELECT t2.c0, vt0.c0, t0.c0, vt0.c1 FROM vt1, vt0, t0, t2 WHERE (0.003563583956961547) GROUP BY t2.c0, vt0.c0, t0.c0, vt0.c1 UNION SELECT ALL t2.c0, vt0.c0, t0.c0, vt0.c1 FROM vt1, vt0, t0, t2 WHERE ((NOT (0.003563583956961547))) GROUP BY t2.c0, vt0.c0, t0.c0, vt0.c1 UNION SELECT ALL t2.c0, vt0.c0, t0.c0, vt0.c1 FROM vt1, vt0, t0, t2 WHERE (((0.003563583956961547) ISNULL)) GROUP BY t2.c0, vt0.c0, t0.c0, vt0.c1;
SELECT ALL t2.c0, vt0.c0, t0.c0, vt0.c1 FROM vt1, vt0, t0, t2 GROUP BY t2.c0, vt0.c0, t0.c0, vt0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(t0.c0 COLLATE RTRIM) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(t0.c0 COLLATE RTRIM))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(t0.c0 COLLATE RTRIM)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(t0.c0 COLLATE RTRIM) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(t0.c0 COLLATE RTRIM))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(t0.c0 COLLATE RTRIM)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM t2 FULL OUTER JOIN vt1 ON (((t2.c0)) NOT BETWEEN ((((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)))) AND (((((vt1.c0))<>((t2.c0))))));
SELECT ALL * FROM t2 FULL OUTER JOIN vt1 ON (((t2.c0)) NOT BETWEEN ((((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)))) AND (((((vt1.c0))!=((t2.c0)))))) WHERE (((CAST(t2.c0 AS BLOB))/('737681580'))) UNION ALL SELECT ALL * FROM t2 FULL OUTER JOIN vt1 ON (((t2.c0)) NOT BETWEEN ((((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)))) AND (((((vt1.c0))!=((t2.c0)))))) WHERE ((NOT (((CAST(t2.c0 AS BLOB))/('737681580'))))) UNION ALL SELECT ALL * FROM t2 FULL OUTER JOIN vt1 ON (((t2.c0)) NOT BETWEEN ((((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)))) AND (((((vt1.c0))!=((t2.c0)))))) WHERE (((((CAST(t2.c0 AS BLOB))/('737681580'))) ISNULL));
SELECT ALL * FROM t2 FULL OUTER JOIN vt1 ON (((t2.c0)) NOT BETWEEN ((((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)))) AND (((((vt1.c0))<>((t2.c0))))));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((ROUND(vt0.c0, vt0.c1)) IS FALSE)) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 NOT INDEXED WHERE ((NOT (((ROUND(vt0.c0, vt0.c1)) IS FALSE)))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((ROUND(vt0.c0, vt0.c1)) IS FALSE)) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT t0.c0, t2.c0 FROM t0 INDEXED BY i37, t2 GROUP BY t0.c0, t2.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((((vt0.c1)|(vt0.c0)))AND(LIKELIHOOD(vt0.c0, 0.5151899625830525))))AND(vt0.c0)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((((((vt0.c1)|(vt0.c0)))AND(LIKELIHOOD(vt0.c0, 0.5151899625830525))))AND(vt0.c0)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((((((vt0.c1)|(vt0.c0)))AND(LIKELIHOOD(vt0.c0, 0.5151899625830525))))AND(vt0.c0))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((((vt0.c1)|(vt0.c0)))AND(LIKELIHOOD(vt0.c0, 0.5151899625830525))))AND(vt0.c0)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((((((vt0.c1)|(vt0.c0)))AND(LIKELIHOOD(vt0.c0, 0.5151899625830525))))AND(vt0.c0)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((((((vt0.c1)|(vt0.c0)))AND(LIKELIHOOD(vt0.c0, 0.5151899625830525))))AND(vt0.c0))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL * FROM vt1, vt0, t2;
SELECT ALL * FROM vt1, vt0, t2 WHERE (859179612) UNION ALL SELECT * FROM vt1, vt0, t2 WHERE ((NOT (859179612))) UNION ALL SELECT * FROM vt1, vt0, t2 WHERE (((859179612) ISNULL));
SELECT ALL * FROM vt1, vt0, t2;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((NULLIF(vt0.c1, vt0.c1) IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((NULLIF(vt0.c1, vt0.c1) IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((NULLIF(vt0.c1, vt0.c1) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0, t2.c0 FROM t0, t2 GROUP BY t0.c0, t2.c0;
SELECT t0.c0, t2.c0 FROM t0, t2 WHERE ((((('0U')AND(COALESCE(t0.c0, t2.c0, t0.c0, t2.c0))))OR(CAST(t0.c0 AS NUMERIC)))) GROUP BY t0.c0, t2.c0 UNION SELECT ALL t0.c0, t2.c0 FROM t0, t2 WHERE ((NOT ((((('0U')AND(COALESCE(t0.c0, t2.c0, t0.c0, t2.c0))))OR(CAST(t0.c0 AS NUMERIC)))))) GROUP BY t0.c0, t2.c0 UNION SELECT ALL t0.c0, t2.c0 FROM t0, t2 WHERE ((((((('0U')AND(COALESCE(t0.c0, t2.c0, t0.c0, t2.c0))))OR(CAST(t0.c0 AS NUMERIC)))) ISNULL)) GROUP BY t0.c0, t2.c0;
SELECT t0.c0, t2.c0 FROM t0, t2 GROUP BY t0.c0, t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING AVG(t2.c0) COLLATE BINARY UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (AVG(t2.c0) COLLATE BINARY)) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((AVG(t2.c0) COLLATE BINARY) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING AVG(t2.c0) COLLATE BINARY UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (AVG(t2.c0) COLLATE BINARY)) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((AVG(t2.c0) COLLATE BINARY) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL * FROM vt0, vt1 INNER JOIN t0 ON 0.45615797749552767;
SELECT * FROM vt0, vt1 INNER JOIN t0 ON 0.45615797749552767 WHERE (LIKELIHOOD(('p%W' IN ()), 0.5256936093982228)) UNION ALL SELECT * FROM vt0, vt1 INNER JOIN t0 ON 0.45615797749552767 WHERE ((NOT (LIKELIHOOD(('p%W' IN ()), 0.5256936093982228)))) UNION ALL SELECT * FROM vt0, vt1 INNER JOIN t0 ON 0.45615797749552767 WHERE (((LIKELIHOOD(('p%W' IN ()), 0.5256936093982228)) ISNULL));
SELECT ALL * FROM vt0, vt1 INNER JOIN t0 ON 0.45615797749552767;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (0.35909454619778836) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (0.35909454619778836))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((0.35909454619778836) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM t0, vt1, t2 FULL OUTER JOIN vt0 ON ((((((((((t2.c0) BETWEEN (t0.c0) AND (vt1.c0)))AND((vt0.c0 IN ()))))AND(((x'')||(t0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((t0.c0 IN ()))) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0, vt1, t2 FULL OUTER JOIN vt0 ON ((((((((((t2.c0) BETWEEN (t0.c0) AND (vt1.c0)))AND((vt0.c0 IN ()))))AND(((x'')||(t0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((t0.c0 IN ()))) WHERE ((((t2.c0)>>('119396246')) IN ())) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM t0, vt1, t2 FULL OUTER JOIN vt0 ON ((((((((((t2.c0) BETWEEN (t0.c0) AND (vt1.c0)))AND((vt0.c0 IN ()))))AND(((x'')||(t0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((t0.c0 IN ()))) WHERE ((NOT ((((t2.c0)>>('119396246')) IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t0, vt1, t2 FULL OUTER JOIN vt0 ON ((((((((((t2.c0) BETWEEN (t0.c0) AND (vt1.c0)))AND((vt0.c0 IN ()))))AND(((x'')||(t0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((t0.c0 IN ()))) WHERE ((((((t2.c0)>>('119396246')) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0, vt1, t2 FULL OUTER JOIN vt0 ON ((((((((((t2.c0) BETWEEN (t0.c0) AND (vt1.c0)))AND((vt0.c0 IN ()))))AND(((x'')||(t0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((t0.c0 IN ()))) GROUP BY vt1.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING COUNT(((COUNT(t2.c0)) NOT BETWEEN (GROUP_CONCAT(MIN(t2.c0))) AND (t2.c0))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (COUNT(((COUNT(t2.c0)) NOT BETWEEN (GROUP_CONCAT(MIN(t2.c0))) AND (t2.c0))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((COUNT(((COUNT(t2.c0)) NOT BETWEEN (GROUP_CONCAT(MIN(t2.c0))) AND (t2.c0)))) ISNULL);
SELECT TOTAL((((((((vt1.c0))=((vt1.c0))))OR(0.9661371314751989)))OR('v' COLLATE NOCASE))) FROM vt0, vt1;
SELECT ALL * FROM t0, vt0 CROSS JOIN vt1 ON 0.22372825202331592 RIGHT OUTER JOIN t2 ON (((vt0.c0 IN ()))&(((x'2c52') BETWEEN (t2.c0) AND (t2.c0))));
SELECT ALL * FROM t0, vt0 CROSS JOIN vt1 ON 0.22372825202331592 RIGHT OUTER JOIN t2 ON (((vt0.c0 IN ()))&(((x'2c52') BETWEEN (t2.c0) AND (t2.c0)))) WHERE (t0.c0 COLLATE NOCASE) UNION ALL SELECT ALL * FROM t0, vt0 CROSS JOIN vt1 ON 0.22372825202331592 RIGHT OUTER JOIN t2 ON (((vt0.c0 IN ()))&(((x'2c52') BETWEEN (t2.c0) AND (t2.c0)))) WHERE ((NOT (t0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM t0, vt0 CROSS JOIN vt1 ON 0.22372825202331592 RIGHT OUTER JOIN t2 ON (((vt0.c0 IN ()))&(((x'2c52') BETWEEN (t2.c0) AND (t2.c0)))) WHERE (((t0.c0 COLLATE NOCASE) ISNULL));
SELECT ALL * FROM t0, vt0 CROSS JOIN vt1 ON 0.22372825202331592 RIGHT OUTER JOIN t2 ON (((vt0.c0 IN ()))&(((x'2c52') BETWEEN (t2.c0) AND (t2.c0))));
SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1;
SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0))) NOTNULL)) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((NOT (((((((((((vt1.c0)AND(vt1.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0))) NOTNULL)))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1;
SELECT t2.c0, vt0.c0, vt1.c0 FROM vt1, t0, t2 NOT INDEXED, vt0 GROUP BY t2.c0, vt0.c0, vt1.c0;
SELECT t2.c0, vt0.c0, vt1.c0 FROM vt1, t0, t2, vt0 WHERE (vt0.c0) GROUP BY t2.c0, vt0.c0, vt1.c0 UNION SELECT ALL t2.c0, vt0.c0, vt1.c0 FROM vt1, t0, t2, vt0 WHERE ((NOT (vt0.c0))) GROUP BY t2.c0, vt0.c0, vt1.c0 UNION SELECT t2.c0, vt0.c0, vt1.c0 FROM vt1, t0, t2, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY t2.c0, vt0.c0, vt1.c0;
SELECT t2.c0, vt0.c0, vt1.c0 FROM vt1, t0, t2 NOT INDEXED, vt0 GROUP BY t2.c0, vt0.c0, vt1.c0;
SELECT ALL t2.c0, vt0.c0 FROM vt0, vt1, t0, t2 GROUP BY t2.c0, vt0.c0;
SELECT t2.c0, vt0.c0 FROM vt0, vt1, t0, t2 GROUP BY t2.c0, vt0.c0 HAVING ((COUNT(t2.c0)) BETWEEN (TOTAL(COUNT('1594815969'))) AND (MAX(SUM(COUNT('^jE '))))) UNION ALL SELECT t2.c0, vt0.c0 FROM vt0, vt1, t0, t2 GROUP BY t2.c0, vt0.c0 HAVING (NOT (((COUNT(t2.c0)) BETWEEN (TOTAL(COUNT('1594815969'))) AND (MAX(SUM(COUNT('^jE '))))))) UNION ALL SELECT t2.c0, vt0.c0 FROM vt0, vt1, t0, t2 GROUP BY t2.c0, vt0.c0 HAVING ((((COUNT(t2.c0)) BETWEEN (TOTAL(COUNT('1594815969'))) AND (MAX(SUM(COUNT('^jE ')))))) ISNULL);
SELECT SUM(json_remove((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), (~ (vt1.c0)), vt1.c0, vt1.c0)) FROM vt1 ORDER BY UPPER(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) DESC;
SELECT * FROM t2;
SELECT * FROM t2 WHERE (((((t2.c0)+(0.9894536840704318)))<(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))))) UNION ALL SELECT * FROM t2 WHERE ((NOT (((((t2.c0)+(0.9894536840704318)))<(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))))))) UNION ALL SELECT * FROM t2 WHERE (((((((t2.c0)+(0.9894536840704318)))<(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))))) ISNULL));
SELECT * FROM t2;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL) COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) ISNULL) COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0) ISNULL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((- (vt0.c0)) IN ())) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((- (vt0.c0)) IN ())))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((- (vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING TOTAL(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING ((TOTAL(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT * FROM t2, vt0, vt1, t0;
SELECT ALL * FROM t2, vt0, vt1, t0 WHERE (SUBSTR(((t2.c0)<=(vt0.c0)), 0.8243002658548008)) UNION ALL SELECT * FROM t2, vt0, vt1, t0 WHERE ((NOT (SUBSTR(((t2.c0)<=(vt0.c0)), 0.8243002658548008)))) UNION ALL SELECT ALL * FROM t2, vt0, vt1, t0 WHERE (((SUBSTR(((t2.c0)<=(vt0.c0)), 0.8243002658548008)) ISNULL));
SELECT * FROM t2, vt0, vt1, t0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM t2, vt0, vt1, t0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM t2, vt0, vt1, t0 NOT INDEXED WHERE (CAST((((t0.c0))<>((vt0.c0))) AS REAL)) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM t2, vt0, vt1, t0 WHERE ((NOT (CAST((((t0.c0))!=((vt0.c0))) AS REAL)))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM t2, vt0, vt1, t0 WHERE (((CAST((((t0.c0))!=((vt0.c0))) AS REAL)) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM t2, vt0, vt1, t0;
SELECT ALL vt0.c1, t2.c0, vt0.c0, t0.c0 FROM vt0 NOT INDEXED, t2 LEFT OUTER JOIN t0 ON (CAST(vt0.c1 AS INTEGER) IN ((vt0.c0 IN ()), t2.c0)) GROUP BY vt0.c1, t2.c0, vt0.c0, t0.c0;
SELECT vt0.c1, t2.c0, vt0.c0, t0.c0 FROM vt0, t2 LEFT OUTER JOIN t0 ON (CAST(vt0.c1 AS INTEGER) IN ((vt0.c0 IN ()), t2.c0)) WHERE (CAST(vt0.c0 AS INTEGER)) GROUP BY vt0.c1, t2.c0, vt0.c0, t0.c0 UNION SELECT ALL vt0.c1, t2.c0, vt0.c0, t0.c0 FROM vt0, t2 LEFT OUTER JOIN t0 ON (CAST(vt0.c1 AS INTEGER) IN ((vt0.c0 IN ()), t2.c0)) WHERE ((NOT (CAST(vt0.c0 AS INTEGER)))) GROUP BY vt0.c1, t2.c0, vt0.c0, t0.c0 UNION SELECT ALL vt0.c1, t2.c0, vt0.c0, t0.c0 FROM vt0, t2 LEFT OUTER JOIN t0 ON (CAST(vt0.c1 AS INTEGER) IN ((vt0.c0 IN ()), t2.c0)) WHERE (((CAST(vt0.c0 AS INTEGER)) ISNULL)) GROUP BY vt0.c1, t2.c0, vt0.c0, t0.c0;
SELECT ALL vt0.c1, t2.c0, vt0.c0, t0.c0 FROM vt0 NOT INDEXED, t2 LEFT OUTER JOIN t0 ON (CAST(vt0.c1 AS INTEGER) IN ((vt0.c0 IN ()), t2.c0)) GROUP BY vt0.c1, t2.c0, vt0.c0, t0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING CASE ((vt0.c1)GLOB(vt0.c0))  WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (TOTAL(vt0.c0))) THEN vt0.c0 COLLATE BINARY ELSE SUM(0Xff5174) END UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (CASE ((vt0.c1)GLOB(vt0.c0))  WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (TOTAL(vt0.c0))) THEN vt0.c0 COLLATE BINARY ELSE SUM(0Xff5174) END)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((CASE ((vt0.c1)GLOB(vt0.c0))  WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (TOTAL(vt0.c0))) THEN vt0.c0 COLLATE BINARY ELSE SUM(0xff5174) END) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING CASE ((vt0.c1)GLOB(vt0.c0))  WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (TOTAL(vt0.c0))) THEN vt0.c0 COLLATE BINARY ELSE SUM(0Xff5174) END UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (CASE ((vt0.c1)GLOB(vt0.c0))  WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (TOTAL(vt0.c0))) THEN vt0.c0 COLLATE BINARY ELSE SUM(0Xff5174) END)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((CASE ((vt0.c1)GLOB(vt0.c0))  WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (TOTAL(vt0.c0))) THEN vt0.c0 COLLATE BINARY ELSE SUM(0xff5174) END) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (((t0.c0) NOT NULL)) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT (((t0.c0) NOT NULL)))) UNION ALL SELECT * FROM t0, vt0 WHERE (((((t0.c0) NOT NULL)) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM t0, vt0 NATURAL JOIN vt1;
SELECT DISTINCT vt0.c0, vt0.c1 FROM t0, vt0 NATURAL JOIN vt1 WHERE ((((HEX(DISTINCT vt1.c0)))>((((0.14384855617670844)>>(t0.c0)))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM t0, vt0 NATURAL JOIN vt1 WHERE ((NOT ((((HEX(DISTINCT vt1.c0)))>((((0.14384855617670844)>>(t0.c0)))))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM t0, vt0 NATURAL JOIN vt1 WHERE ((((((HEX(DISTINCT vt1.c0)))>((((0.14384855617670844)>>(t0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM t0, vt0 NATURAL JOIN vt1;
SELECT ALL vt0.c1, vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (((x'')) BETWEEN (((((t0.c0, t0.c0, vt0.c1)) BETWEEN ((vt0.c1, NULL, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND (((NOT (vt0.c0))))) GROUP BY vt0.c1, vt0.c0, t0.c0;
SELECT ALL vt0.c1, vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (((x'')) BETWEEN (((((t0.c0, t0.c0, vt0.c1)) BETWEEN ((vt0.c1, NULL, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND (((NOT (vt0.c0))))) WHERE (CASE ((vt0.c0) BETWEEN (t0.c0) AND (vt0.c1))  WHEN CAST(t0.c0 AS INTEGER) THEN (- (t0.c0)) ELSE (((t0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END) GROUP BY vt0.c1, vt0.c0, t0.c0 UNION SELECT ALL vt0.c1, vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (((x'')) BETWEEN (((((t0.c0, t0.c0, vt0.c1)) BETWEEN ((vt0.c1, NULL, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND (((NOT (vt0.c0))))) WHERE ((NOT (CASE ((vt0.c0) BETWEEN (t0.c0) AND (vt0.c1))  WHEN CAST(t0.c0 AS INTEGER) THEN (- (t0.c0)) ELSE (((t0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END))) GROUP BY vt0.c1, vt0.c0, t0.c0 UNION SELECT vt0.c1, vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (((x'')) BETWEEN (((((t0.c0, t0.c0, vt0.c1)) BETWEEN ((vt0.c1, NULL, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND (((NOT (vt0.c0))))) WHERE (((CASE ((vt0.c0) BETWEEN (t0.c0) AND (vt0.c1))  WHEN CAST(t0.c0 AS INTEGER) THEN (- (t0.c0)) ELSE (((t0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END) ISNULL)) GROUP BY vt0.c1, vt0.c0, t0.c0;
SELECT ALL vt0.c1, vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (((x'')) BETWEEN (((((t0.c0, t0.c0, vt0.c1)) BETWEEN ((vt0.c1, NULL, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND (((NOT (vt0.c0))))) GROUP BY vt0.c1, vt0.c0, t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING COUNT(*) COLLATE NOCASE UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (NOT (COUNT(*) COLLATE NOCASE)) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING ((COUNT(*) COLLATE NOCASE) ISNULL);
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING COUNT(*) COLLATE NOCASE UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (NOT (COUNT(*) COLLATE NOCASE)) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING ((COUNT(*) COLLATE NOCASE) ISNULL);
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT vt1.c0 FROM t0, vt0, t2, vt1;
SELECT ALL vt1.c0 FROM t0, vt0, t2, vt1 WHERE (CASE t2.c0 COLLATE BINARY  WHEN (((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((t2.c0))) THEN x'' WHEN ((vt0.c0) NOTNULL) THEN (((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c1))) WHEN ((vt1.c0)<>(vt1.c0)) THEN ((vt1.c0)<(vt0.c1)) ELSE '376534997' END) UNION ALL SELECT vt1.c0 FROM t0, vt0, t2, vt1 WHERE ((NOT (CASE t2.c0 COLLATE BINARY  WHEN (((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((t2.c0))) THEN x'' WHEN ((vt0.c0) NOTNULL) THEN (((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c1))) WHEN ((vt1.c0)<>(vt1.c0)) THEN ((vt1.c0)<(vt0.c1)) ELSE '376534997' END))) UNION ALL SELECT ALL vt1.c0 FROM t0, vt0, t2, vt1 WHERE (((CASE t2.c0 COLLATE BINARY  WHEN (((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((t2.c0))) THEN x'' WHEN ((vt0.c0) NOTNULL) THEN (((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c1))) WHEN ((vt1.c0)<>(vt1.c0)) THEN ((vt1.c0)<(vt0.c1)) ELSE '376534997' END) ISNULL));
SELECT vt1.c0 FROM t0, vt0, t2, vt1;
SELECT DISTINCT vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON LOWER(DISTINCT vt1.c0);
SELECT DISTINCT vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON LOWER(DISTINCT vt1.c0) WHERE ((((((t0.c0, vt1.c0, vt1.c0))>((t0.c0, t0.c0, 0.017363640853511164))))%((vt1.c0 IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON LOWER(DISTINCT vt1.c0) WHERE ((NOT ((((((t0.c0, vt1.c0, vt1.c0))>((t0.c0, t0.c0, 0.017363640853511164))))%((vt1.c0 IN ())))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON LOWER(DISTINCT vt1.c0) WHERE ((((((((t0.c0, vt1.c0, vt1.c0))>((t0.c0, t0.c0, 0.017363640853511164))))%((vt1.c0 IN ())))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON LOWER(DISTINCT vt1.c0);
SELECT ALL vt1.c0 FROM vt1, t2 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t2 WHERE (((((t2.c0)AND(vt1.c0)))AND(t2.c0)) COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, t2 WHERE ((NOT (((((t2.c0)AND(vt1.c0)))AND(t2.c0)) COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, t2 WHERE (((((((t2.c0)AND(vt1.c0)))AND(t2.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, t2 GROUP BY vt1.c0;
SELECT t0.c0, vt1.c0, vt0.c0 FROM t0, vt0, vt1, t2 GROUP BY t0.c0, vt1.c0, vt0.c0;
SELECT t0.c0, vt1.c0, vt0.c0 FROM t0, vt0, vt1, t2 GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING (GROUP_CONCAT(vt0.c0) IN (MAX(GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))), MAX(COUNT(MIN(vt0.c1))))) UNION ALL SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM t0, vt0, vt1, t2 GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING (NOT ((GROUP_CONCAT(vt0.c0) IN (MAX(GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))), MAX(COUNT(MIN(vt0.c1))))))) UNION ALL SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM t0, vt0, vt1, t2 GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING (((GROUP_CONCAT(vt0.c0) IN (MAX(GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))), MAX(COUNT(MIN(vt0.c1)))))) ISNULL);
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM t2, vt1, vt0;
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM t2, vt1, vt0 WHERE (((0x6a0d446a) IS FALSE)) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1 FROM t2, vt1, vt0 WHERE ((NOT (((0x6a0d446a) IS FALSE)))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM t2, vt1, vt0 WHERE (((((0X6a0d446a) IS FALSE)) ISNULL));
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM t2, vt1, vt0;
SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM t0, t2, vt0, vt1;
SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM t0, t2, vt0, vt1 WHERE ((vt1.c0 IN ())) UNION SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM t0, t2, vt0, vt1 WHERE ((NOT ((vt1.c0 IN ())))) UNION SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM t0, t2, vt0, vt1 WHERE ((((vt1.c0 IN ())) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM t0, t2, vt0, vt1;
SELECT vt1.c0, vt0.c1, t2.c0, vt0.c0 FROM vt1, t2, vt0 GROUP BY vt1.c0, vt0.c1, t2.c0, vt0.c0;
SELECT vt1.c0, vt0.c1, t2.c0, vt0.c0 FROM vt1, t2, vt0 WHERE ((-0.0 IN ())) GROUP BY vt1.c0, vt0.c1, t2.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c1, t2.c0, vt0.c0 FROM vt1, t2, vt0 WHERE ((NOT ((-0.0 IN ())))) GROUP BY vt1.c0, vt0.c1, t2.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c1, t2.c0, vt0.c0 FROM vt1, t2, vt0 WHERE ((((-0.0 IN ())) ISNULL)) GROUP BY vt1.c0, vt0.c1, t2.c0, vt0.c0;
SELECT vt1.c0, vt0.c1, t2.c0, vt0.c0 FROM vt1, t2, vt0 GROUP BY vt1.c0, vt0.c1, t2.c0, vt0.c0;
SELECT ALL vt1.c0 FROM t0, vt1, t2, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0, vt1 NOT INDEXED, t2, vt0 GROUP BY vt1.c0 HAVING CAST(SUM(TOTAL(MIN(vt1.c0))) AS BLOB) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1, t2, vt0 GROUP BY vt1.c0 HAVING (NOT (CAST(SUM(TOTAL(MIN(vt1.c0))) AS BLOB))) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1, t2, vt0 GROUP BY vt1.c0 HAVING ((CAST(SUM(TOTAL(MIN(vt1.c0))) AS BLOB)) ISNULL);
SELECT ALL vt0.c1, t0.c0 FROM vt0, t0;
SELECT vt0.c1, t0.c0 FROM vt0, t0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c0 IN ()) WHEN ((t0.c0) IS FALSE) THEN COALESCE(DISTINCT t0.c0, t0.c0) WHEN (t0.c0 IN ()) THEN (t0.c0 IN ()) END) UNION ALL SELECT ALL vt0.c1, t0.c0 FROM vt0, t0 WHERE ((NOT (CASE WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c0 IN ()) WHEN ((t0.c0) IS FALSE) THEN COALESCE(DISTINCT t0.c0, t0.c0) WHEN (t0.c0 IN ()) THEN (t0.c0 IN ()) END))) UNION ALL SELECT vt0.c1, t0.c0 FROM vt0, t0 WHERE (((CASE WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c0 IN ()) WHEN ((t0.c0) IS FALSE) THEN COALESCE(DISTINCT t0.c0, t0.c0) WHEN (t0.c0 IN ()) THEN (t0.c0 IN ()) END) ISNULL));
SELECT ALL vt0.c1, t0.c0 FROM vt0, t0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ('0.9367816840832692') UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ('0.9367816840832692'))) UNION SELECT DISTINCT * FROM vt1 WHERE ((('0.9367816840832692') ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN (((vt0.c1 IN ()), ((vt0.c1) NOT NULL), CAST(vt0.c1 AS REAL))) AND ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c1 COLLATE RTRIM)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN (((vt0.c1 IN ()), ((vt0.c1) NOT NULL), CAST(vt0.c1 AS REAL))) AND ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c1 COLLATE RTRIM)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN (((vt0.c1 IN ()), ((vt0.c1) NOT NULL), CAST(vt0.c1 AS REAL))) AND ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c1 COLLATE RTRIM)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c1, vt0.c0, t0.c0, vt1.c0 FROM vt0, t0 FULL OUTER JOIN vt1 ON UPPER(((((vt0.c0)OR(0.20299710646831193)))AND(vt1.c0))) GROUP BY vt0.c1, vt0.c0, t0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, t0.c0, vt1.c0 FROM vt0, t0 FULL OUTER JOIN vt1 ON UPPER(((((vt0.c0)OR(0.20299710646831193)))AND(vt1.c0))) GROUP BY vt0.c1, vt0.c0, t0.c0, vt1.c0 HAVING MAX('n)/( Zl)x1G') UNION ALL SELECT vt0.c1, vt0.c0, t0.c0, vt1.c0 FROM vt0, t0 FULL OUTER JOIN vt1 ON UPPER(((((vt0.c0)OR(0.20299710646831193)))AND(vt1.c0))) GROUP BY vt0.c1, vt0.c0, t0.c0, vt1.c0 HAVING (NOT (MAX('n)/( Zl)x1G'))) UNION ALL SELECT vt0.c1, vt0.c0, t0.c0, vt1.c0 FROM vt0, t0 FULL OUTER JOIN vt1 ON UPPER(((((vt0.c0)OR(0.20299710646831193)))AND(vt1.c0))) GROUP BY vt0.c1, vt0.c0, t0.c0, vt1.c0 HAVING ((MAX('n)/( Zl)x1G')) ISNULL);
SELECT vt0.c1, vt0.c0, t0.c0, vt1.c0 FROM vt0, t0 FULL OUTER JOIN vt1 ON UPPER(((((vt0.c0)OR(0.20299710646831193)))AND(vt1.c0))) GROUP BY vt0.c1, vt0.c0, t0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, t0.c0, vt1.c0 FROM vt0, t0 FULL OUTER JOIN vt1 ON UPPER(((((vt0.c0)OR(0.20299710646831193)))AND(vt1.c0))) GROUP BY vt0.c1, vt0.c0, t0.c0, vt1.c0 HAVING MAX('n)/( Zl)x1G') UNION ALL SELECT vt0.c1, vt0.c0, t0.c0, vt1.c0 FROM vt0, t0 FULL OUTER JOIN vt1 ON UPPER(((((vt0.c0)OR(0.20299710646831193)))AND(vt1.c0))) GROUP BY vt0.c1, vt0.c0, t0.c0, vt1.c0 HAVING (NOT (MAX('n)/( Zl)x1G'))) UNION ALL SELECT vt0.c1, vt0.c0, t0.c0, vt1.c0 FROM vt0, t0 FULL OUTER JOIN vt1 ON UPPER(((((vt0.c0)OR(0.20299710646831193)))AND(vt1.c0))) GROUP BY vt0.c1, vt0.c0, t0.c0, vt1.c0 HAVING ((MAX('n)/( Zl)x1G')) ISNULL);
SELECT vt0.c1, vt0.c0, t0.c0, vt1.c0 FROM vt0, t0 FULL OUTER JOIN vt1 ON UPPER(((((vt0.c0)OR(0.20299710646831193)))AND(vt1.c0))) GROUP BY vt0.c1, vt0.c0, t0.c0, vt1.c0;
SELECT vt0.c1 FROM vt0, vt1, t0, t2;
SELECT ALL vt0.c1 FROM vt0, vt1, t0, t2 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t2.c0 ELSE vt0.c1 END) NOT NULL)) UNION ALL SELECT ALL vt0.c1 FROM vt0, vt1, t0 NOT INDEXED, t2 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t2.c0 ELSE vt0.c1 END) NOT NULL)))) UNION ALL SELECT vt0.c1 FROM vt0, vt1, t0, t2 WHERE (((((CASE vt0.c0  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t2.c0 ELSE vt0.c1 END) NOT NULL)) ISNULL));
SELECT vt0.c1 FROM vt0, vt1, t0, t2;
SELECT DISTINCT * FROM t0, vt0, vt1;
SELECT DISTINCT * FROM t0, vt0, vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM t0, vt0, vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM t0, vt0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM t0, vt0, vt1;
SELECT ALL vt0.c0, t2.c0, vt0.c1, t0.c0, vt1.c0 FROM t2, vt1, vt0, t0 GROUP BY vt0.c0, t2.c0, vt0.c1, t0.c0, vt1.c0;
SELECT vt0.c0, t2.c0, vt0.c1, t0.c0, vt1.c0 FROM t2, vt1, vt0, t0 WHERE (CASE (((vt1.c0, vt1.c0, t2.c0, t0.c0, vt0.c1))>((x'f8f4', t2.c0, '', vt0.c0, t0.c0)))  WHEN ((t2.c0)&(t0.c0)) THEN CAST(t2.c0 AS NUMERIC) WHEN ((vt0.c0) BETWEEN (t2.c0) AND (vt0.c0)) THEN (((vt0.c0)) BETWEEN ((t2.c0)) AND ((vt0.c0))) WHEN ((((t2.c0)OR(t0.c0)))OR(t2.c0)) THEN ((((vt1.c0)OR(t2.c0)))AND(t0.c0)) END) GROUP BY vt0.c0, t2.c0, vt0.c1, t0.c0, vt1.c0 UNION SELECT vt0.c0, t2.c0, vt0.c1, t0.c0, vt1.c0 FROM t2, vt1, vt0, t0 WHERE ((NOT (CASE (((vt1.c0, vt1.c0, t2.c0, t0.c0, vt0.c1))>((x'f8f4', t2.c0, '', vt0.c0, t0.c0)))  WHEN ((t2.c0)&(t0.c0)) THEN CAST(t2.c0 AS NUMERIC) WHEN ((vt0.c0) BETWEEN (t2.c0) AND (vt0.c0)) THEN (((vt0.c0)) BETWEEN ((t2.c0)) AND ((vt0.c0))) WHEN ((((t2.c0)OR(t0.c0)))OR(t2.c0)) THEN ((((vt1.c0)OR(t2.c0)))AND(t0.c0)) END))) GROUP BY vt0.c0, t2.c0, vt0.c1, t0.c0, vt1.c0 UNION SELECT ALL vt0.c0, t2.c0, vt0.c1, t0.c0, vt1.c0 FROM t2, vt1, vt0, t0 WHERE (((CASE (((vt1.c0, vt1.c0, t2.c0, t0.c0, vt0.c1))>((x'f8f4', t2.c0, '', vt0.c0, t0.c0)))  WHEN ((t2.c0)&(t0.c0)) THEN CAST(t2.c0 AS NUMERIC) WHEN ((vt0.c0) BETWEEN (t2.c0) AND (vt0.c0)) THEN (((vt0.c0)) BETWEEN ((t2.c0)) AND ((vt0.c0))) WHEN ((((t2.c0)OR(t0.c0)))OR(t2.c0)) THEN ((((vt1.c0)OR(t2.c0)))AND(t0.c0)) END) ISNULL)) GROUP BY vt0.c0, t2.c0, vt0.c1, t0.c0, vt1.c0;
SELECT ALL vt0.c0, t2.c0, vt0.c1, t0.c0, vt1.c0 FROM t2, vt1, vt0, t0 GROUP BY vt0.c0, t2.c0, vt0.c1, t0.c0, vt1.c0;
SELECT ALL t2.c0, t0.c0, vt1.c0 FROM vt1, t2, t0 GROUP BY t2.c0, t0.c0, vt1.c0;
SELECT t2.c0, t0.c0, vt1.c0 FROM vt1, t2, t0 GROUP BY t2.c0, t0.c0, vt1.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT t2.c0, t0.c0, vt1.c0 FROM vt1, t2, t0 GROUP BY t2.c0, t0.c0, vt1.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT t2.c0, t0.c0, vt1.c0 FROM vt1, t2, t0 GROUP BY t2.c0, t0.c0, vt1.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT * FROM t0, vt0, t2, vt1;
SELECT ALL * FROM t0, vt0, t2, vt1 WHERE (((LIKE(0.4610976030898284, '260965604')) BETWEEN (((((vt0.c1)AND(t2.c0)))OR(t2.c0))) AND ((~ (vt0.c1))))) UNION ALL SELECT * FROM t0, vt0, t2, vt1 WHERE ((NOT (((LIKE(0.4610976030898284, '260965604')) BETWEEN (((((vt0.c1)AND(t2.c0)))OR(t2.c0))) AND ((~ (vt0.c1))))))) UNION ALL SELECT ALL * FROM t0, vt0, t2, vt1 WHERE (((((LIKE(0.4610976030898284, '260965604')) BETWEEN (((((vt0.c1)AND(t2.c0)))OR(t2.c0))) AND ((~ (vt0.c1))))) ISNULL));
SELECT * FROM t0, vt0, t2, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((NULL)<=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN '255475194' WHEN vt0.c1 THEN vt0.c1 END))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((NULL)<=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN '255475194' WHEN vt0.c1 THEN vt0.c1 END))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((NULL)<=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN '255475194' WHEN vt0.c1 THEN vt0.c1 END))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE (((vt0.c0) ISNULL) COLLATE NOCASE) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE ((NOT (((vt0.c0) ISNULL) COLLATE NOCASE))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE (((((vt0.c0) ISNULL) COLLATE NOCASE) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT * FROM t2, vt0, t0;
SELECT ALL * FROM t2, vt0, t0 WHERE ((((CASE vt0.c1  WHEN t0.c0 THEN vt0.c1 ELSE t2.c0 END))>=((CAST(vt0.c1 AS REAL))))) UNION ALL SELECT ALL * FROM t2, vt0, t0 WHERE ((NOT ((((CASE vt0.c1  WHEN t0.c0 THEN vt0.c1 ELSE t2.c0 END))>=((CAST(vt0.c1 AS REAL))))))) UNION ALL SELECT ALL * FROM t2, vt0, t0 WHERE ((((((CASE vt0.c1  WHEN t0.c0 THEN vt0.c1 ELSE t2.c0 END))>=((CAST(vt0.c1 AS REAL))))) ISNULL));
SELECT * FROM t2, vt0, t0;
SELECT DISTINCT * FROM vt0, t2 INNER JOIN t0 ON CASE WHEN CAST(t0.c0 AS BLOB) THEN ABS(DISTINCT t0.c0) ELSE CASE t2.c0  WHEN x'9b16' THEN vt0.c0 WHEN vt0.c1 THEN '-1585762789' WHEN t2.c0 THEN 0.5926063321737014 END END;
SELECT DISTINCT * FROM vt0, t2 INNER JOIN t0 ON CASE WHEN CAST(t0.c0 AS BLOB) THEN ABS(DISTINCT t0.c0) ELSE CASE t2.c0  WHEN x'9b16' THEN vt0.c0 WHEN vt0.c1 THEN '-1585762789' WHEN t2.c0 THEN 0.5926063321737014 END END WHERE (CAST(((vt0.c1) ISNULL) AS REAL)) UNION SELECT DISTINCT * FROM vt0, t2 INNER JOIN t0 ON CASE WHEN CAST(t0.c0 AS BLOB) THEN ABS(DISTINCT t0.c0) ELSE CASE t2.c0  WHEN x'9b16' THEN vt0.c0 WHEN vt0.c1 THEN '-1585762789' WHEN t2.c0 THEN 0.5926063321737014 END END WHERE ((NOT (CAST(((vt0.c1) ISNULL) AS REAL)))) UNION SELECT DISTINCT * FROM vt0, t2 INNER JOIN t0 ON CASE WHEN CAST(t0.c0 AS BLOB) THEN ABS(DISTINCT t0.c0) ELSE CASE t2.c0  WHEN x'9b16' THEN vt0.c0 WHEN vt0.c1 THEN '-1585762789' WHEN t2.c0 THEN 0.5926063321737014 END END WHERE (((CAST(((vt0.c1) ISNULL) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt0, t2 INNER JOIN t0 ON CASE WHEN CAST(t0.c0 AS BLOB) THEN ABS(DISTINCT t0.c0) ELSE CASE t2.c0  WHEN x'9b16' THEN vt0.c0 WHEN vt0.c1 THEN '-1585762789' WHEN t2.c0 THEN 0.5926063321737014 END END;
SELECT vt1.c0, t2.c0, t0.c0, vt0.c0, vt0.c1 FROM t0, vt0, t2, vt1 GROUP BY vt1.c0, t2.c0, t0.c0, vt0.c0, vt0.c1;
SELECT ALL vt1.c0, t2.c0, t0.c0, vt0.c0, vt0.c1 FROM t0, vt0, t2, vt1 WHERE ('0.4307940093016762') GROUP BY vt1.c0, t2.c0, t0.c0, vt0.c0, vt0.c1 UNION SELECT vt1.c0, t2.c0, t0.c0, vt0.c0, vt0.c1 FROM t0, vt0, t2, vt1 WHERE ((NOT ('0.4307940093016762'))) GROUP BY vt1.c0, t2.c0, t0.c0, vt0.c0, vt0.c1 UNION SELECT ALL vt1.c0, t2.c0, t0.c0, vt0.c0, vt0.c1 FROM t0, vt0, t2, vt1 WHERE ((('0.4307940093016762') ISNULL)) GROUP BY vt1.c0, t2.c0, t0.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, t2.c0, t0.c0, vt0.c0, vt0.c1 FROM t0, vt0, t2, vt1 GROUP BY vt1.c0, t2.c0, t0.c0, vt0.c0, vt0.c1;
SELECT ALL t2.c0 FROM vt1, t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM vt1, t2 GROUP BY t2.c0 HAVING MIN(AVG(t2.c0)) UNION ALL SELECT t2.c0 FROM vt1, t2 GROUP BY t2.c0 HAVING (NOT (MIN(AVG(t2.c0)))) UNION ALL SELECT t2.c0 FROM vt1, t2 GROUP BY t2.c0 HAVING ((MIN(AVG(t2.c0))) ISNULL);
SELECT ALL t2.c0 FROM t2, vt1;
SELECT ALL t2.c0 FROM t2, vt1 WHERE (((((vt1.c0)>(vt1.c0))) NOT NULL)) UNION ALL SELECT ALL t2.c0 FROM t2, vt1 WHERE ((NOT (((((vt1.c0)>(vt1.c0))) NOT NULL)))) UNION ALL SELECT t2.c0 FROM t2, vt1 WHERE (((((((vt1.c0)>(vt1.c0))) NOT NULL)) ISNULL));
SELECT ALL t2.c0 FROM t2, vt1;
SELECT DISTINCT vt0.c1 FROM vt1, t2, vt0, t0;
SELECT DISTINCT vt0.c1 FROM vt1, t2, vt0, t0 WHERE (t0.c0) UNION SELECT DISTINCT vt0.c1 FROM vt1, t2, vt0, t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT vt0.c1 FROM vt1, t2, vt0, t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt1, t2, vt0, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((t0.c0) BETWEEN (((t0.c0)OR(t0.c0))) AND (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((t0.c0) BETWEEN (((t0.c0)OR(t0.c0))) AND (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((t0.c0) BETWEEN (((t0.c0)OR(t0.c0))) AND (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, vt0.c0, t2.c0 FROM vt0, t2, t0, vt1 GROUP BY t0.c0, vt0.c0, t2.c0;
SELECT ALL t0.c0, vt0.c0, t2.c0 FROM vt0, t2, t0, vt1 GROUP BY t0.c0, vt0.c0, t2.c0 HAVING AVG((((MIN(vt1.c0), GROUP_CONCAT(vt1.c0), t0.c0))>=((vt0.c0, t2.c0, t2.c0)))) UNION ALL SELECT t0.c0, vt0.c0, t2.c0 FROM vt0, t2, t0, vt1 GROUP BY t0.c0, vt0.c0, t2.c0 HAVING (NOT (AVG((((MIN(vt1.c0), GROUP_CONCAT(vt1.c0), t0.c0))>=((vt0.c0, t2.c0, t2.c0)))))) UNION ALL SELECT ALL t0.c0, vt0.c0, t2.c0 FROM vt0, t2, t0, vt1 GROUP BY t0.c0, vt0.c0, t2.c0 HAVING ((AVG((((MIN(vt1.c0), GROUP_CONCAT(vt1.c0), t0.c0))>=((vt0.c0, t2.c0, t2.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (x'4529') UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (x'4529'))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((x'4529') ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0, t2, vt0, vt1;
SELECT DISTINCT * FROM t0, t2, vt0, vt1 WHERE ((+ ((NOT (vt0.c0))))) UNION SELECT DISTINCT * FROM t0, t2, vt0, vt1 WHERE ((NOT ((+ ((NOT (vt0.c0))))))) UNION SELECT DISTINCT * FROM t0, t2, vt0, vt1 WHERE ((((+ ((NOT (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, t2, vt0, vt1;
SELECT ALL vt1.c0 FROM t0 INNER JOIN vt0 ON load_extension(((t0.c0)>>(vt0.c1)), vt0.c1) INNER JOIN vt1 ON CAST(vt0.c0 COLLATE NOCASE AS TEXT) GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0 INNER JOIN vt0 ON load_extension(((t0.c0)>>(vt0.c1)), vt0.c1) INNER JOIN vt1 ON CAST(vt0.c0 COLLATE NOCASE AS TEXT) WHERE ('1270310969') GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t0 INNER JOIN vt0 ON load_extension(((t0.c0)>>(vt0.c1)), vt0.c1) INNER JOIN vt1 ON CAST(vt0.c0 COLLATE NOCASE AS TEXT) WHERE ((NOT ('1270310969'))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM t0 INNER JOIN vt0 ON load_extension(((t0.c0)>>(vt0.c1)), vt0.c1) INNER JOIN vt1 ON CAST(vt0.c0 COLLATE NOCASE AS TEXT) WHERE ((('1270310969') ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0 INNER JOIN vt0 ON load_extension(((t0.c0)>>(vt0.c1)), vt0.c1) INNER JOIN vt1 ON CAST(vt0.c0 COLLATE NOCASE AS TEXT) GROUP BY vt1.c0;
SELECT vt1.c0, t2.c0 FROM t0, t2, vt1 GROUP BY vt1.c0, t2.c0;
SELECT vt1.c0, t2.c0 FROM t0, t2, vt1 GROUP BY vt1.c0, t2.c0 HAVING TOTAL(SUM(t2.c0)) UNION ALL SELECT ALL vt1.c0, t2.c0 FROM t0, t2, vt1 GROUP BY vt1.c0, t2.c0 HAVING (NOT (TOTAL(SUM(t2.c0)))) UNION ALL SELECT vt1.c0, t2.c0 FROM t0, t2, vt1 GROUP BY vt1.c0, t2.c0 HAVING ((TOTAL(SUM(t2.c0))) ISNULL);
SELECT ALL * FROM vt0 NOT INDEXED NATURAL JOIN t0;
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (vt0.c1) UNION ALL SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((vt0.c1) ISNULL));
SELECT ALL * FROM vt0 NOT INDEXED NATURAL JOIN t0;
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0 INNER JOIN t2 ON (vt0.c1 IN ()) COLLATE BINARY RIGHT OUTER JOIN t0 ON vt0.c1;
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0 INNER JOIN t2 ON (vt0.c1 IN ()) COLLATE BINARY RIGHT OUTER JOIN t0 ON vt0.c1 WHERE ((((NULL, 0.35909454619778836, vt0.c0)) NOT BETWEEN ((t2.c0, vt0.c0, t0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM vt0 NOT INDEXED INNER JOIN t2 ON (vt0.c1 IN ()) COLLATE BINARY RIGHT OUTER JOIN t0 ON vt0.c1 WHERE ((NOT ((((NULL, 0.35909454619778836, vt0.c0)) NOT BETWEEN ((t2.c0, vt0.c0, t0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM))) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM vt0 INNER JOIN t2 ON (vt0.c1 IN ()) COLLATE BINARY RIGHT OUTER JOIN t0 ON vt0.c1 WHERE ((((((NULL, 0.35909454619778836, vt0.c0)) NOT BETWEEN ((t2.c0, vt0.c0, t0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0 INNER JOIN t2 ON (vt0.c1 IN ()) COLLATE BINARY RIGHT OUTER JOIN t0 ON vt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE ((vt1.c0)>=(vt1.c0))  WHEN x'' THEN ((vt1.c0)LIKE(0.6365549850971911)) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE ((vt1.c0)>=(vt1.c0))  WHEN x'' THEN ((vt1.c0)LIKE(0.6365549850971911)) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE ((vt1.c0)>=(vt1.c0))  WHEN x'' THEN ((vt1.c0)LIKE(0.6365549850971911)) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((AVG(vt0.c0))OR(MAX(vt0.c0))))AND(vt0.c0)))|(CAST(SUM(vt0.c0) AS REAL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((AVG(vt0.c0))OR(MAX(vt0.c0))))AND(vt0.c0)))|(CAST(SUM(vt0.c0) AS REAL))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((AVG(vt0.c0))OR(MAX(vt0.c0))))AND(vt0.c0)))|(CAST(SUM(vt0.c0) AS REAL)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((AVG(vt0.c0))OR(MAX(vt0.c0))))AND(vt0.c0)))|(CAST(SUM(vt0.c0) AS REAL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((AVG(vt0.c0))OR(MAX(vt0.c0))))AND(vt0.c0)))|(CAST(SUM(vt0.c0) AS REAL))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((AVG(vt0.c0))OR(MAX(vt0.c0))))AND(vt0.c0)))|(CAST(SUM(vt0.c0) AS REAL)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t2.c0, vt0.c1, vt0.c0 FROM t2, vt1, t0, vt0;
SELECT ALL t2.c0, vt0.c1, vt0.c0 FROM t2, vt1, t0, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (vt0.c0) AND (t2.c0))) UNION ALL SELECT t2.c0, vt0.c1, vt0.c0 FROM t2, vt1, t0, vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (vt0.c0) AND (t2.c0))))) UNION ALL SELECT ALL t2.c0, vt0.c1, vt0.c0 FROM t2 NOT INDEXED, vt1, t0, vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (vt0.c0) AND (t2.c0))) ISNULL));
SELECT ALL t2.c0, vt0.c1, vt0.c0 FROM t2, vt1, t0, vt0;
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE (t2.c0 COLLATE RTRIM COLLATE NOCASE) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT (t2.c0 COLLATE RTRIM COLLATE NOCASE))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE (((t2.c0 COLLATE RTRIM COLLATE NOCASE) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT ALL vt1.c0, t2.c0, t0.c0 FROM vt0, t2, t0, vt1 GROUP BY vt1.c0, t2.c0, t0.c0;
SELECT vt1.c0, t2.c0, t0.c0 FROM vt0, t2, t0, vt1 WHERE (CASE ((t0.c0) BETWEEN (t0.c0) AND (t2.c0))  WHEN CASE vt1.c0  WHEN t2.c0 THEN t0.c0 END THEN ((t0.c0)*(t2.c0)) ELSE t2.c0 END) GROUP BY vt1.c0, t2.c0, t0.c0 UNION SELECT ALL vt1.c0, t2.c0, t0.c0 FROM vt0, t2, t0, vt1 WHERE ((NOT (CASE ((t0.c0) BETWEEN (t0.c0) AND (t2.c0))  WHEN CASE vt1.c0  WHEN t2.c0 THEN t0.c0 END THEN ((t0.c0)*(t2.c0)) ELSE t2.c0 END))) GROUP BY vt1.c0, t2.c0, t0.c0 UNION SELECT ALL vt1.c0, t2.c0, t0.c0 FROM vt0, t2, t0, vt1 WHERE (((CASE ((t0.c0) BETWEEN (t0.c0) AND (t2.c0))  WHEN CASE vt1.c0  WHEN t2.c0 THEN t0.c0 END THEN ((t0.c0)*(t2.c0)) ELSE t2.c0 END) ISNULL)) GROUP BY vt1.c0, t2.c0, t0.c0;
SELECT ALL vt1.c0, t2.c0, t0.c0 FROM vt0, t2, t0, vt1 GROUP BY vt1.c0, t2.c0, t0.c0;
SELECT ALL vt1.c0, t2.c0 FROM t2, vt1 GROUP BY vt1.c0, t2.c0;
SELECT ALL vt1.c0, t2.c0 FROM t2, vt1 GROUP BY vt1.c0, t2.c0 HAVING t2.c0 UNION ALL SELECT ALL vt1.c0, t2.c0 FROM t2, vt1 GROUP BY vt1.c0, t2.c0 HAVING (NOT (t2.c0)) UNION ALL SELECT vt1.c0, t2.c0 FROM t2, vt1 GROUP BY vt1.c0, t2.c0 HAVING ((t2.c0) ISNULL);
SELECT ALL vt1.c0, t2.c0 FROM t2, vt1 GROUP BY vt1.c0, t2.c0;
SELECT ALL vt1.c0, t2.c0 FROM t2, vt1 GROUP BY vt1.c0, t2.c0 HAVING t2.c0 UNION ALL SELECT ALL vt1.c0, t2.c0 FROM t2, vt1 GROUP BY vt1.c0, t2.c0 HAVING (NOT (t2.c0)) UNION ALL SELECT vt1.c0, t2.c0 FROM t2, vt1 GROUP BY vt1.c0, t2.c0 HAVING ((t2.c0) ISNULL);
SELECT ALL vt1.c0, t2.c0 FROM t2, vt1 GROUP BY vt1.c0, t2.c0;
SELECT t0.c0, vt0.c1, t2.c0 FROM t2 LEFT OUTER JOIN t0 ON x'' INNER JOIN vt0 ON t2.c0;
SELECT t0.c0, vt0.c1, t2.c0 FROM t2 LEFT OUTER JOIN t0 ON x'' INNER JOIN vt0 ON t2.c0 WHERE (0.8368386014321184) UNION ALL SELECT t0.c0, vt0.c1, t2.c0 FROM t2 LEFT OUTER JOIN t0 ON x'' INNER JOIN vt0 ON t2.c0 WHERE ((NOT (0.8368386014321184))) UNION ALL SELECT t0.c0, vt0.c1, t2.c0 FROM t2 LEFT OUTER JOIN t0 ON x'' INNER JOIN vt0 ON t2.c0 WHERE (((0.8368386014321184) ISNULL));
SELECT t0.c0, vt0.c1, t2.c0 FROM t2 LEFT OUTER JOIN t0 ON x'' INNER JOIN vt0 ON t2.c0;
SELECT DISTINCT * FROM vt0, t0 RIGHT OUTER JOIN t2 ON (+ (((vt0.c0)OR(0.24659504066720161))));
SELECT DISTINCT * FROM vt0, t0 RIGHT OUTER JOIN t2 ON (+ (((vt0.c0)OR(0.24659504066720161)))) WHERE (((((t0.c0) NOT NULL))&(LIKE(t0.c0, -1762470688)))) UNION SELECT DISTINCT * FROM vt0, t0 RIGHT OUTER JOIN t2 ON (+ (((vt0.c0)OR(0.24659504066720161)))) WHERE ((NOT (((((t0.c0) NOT NULL))&(LIKE(t0.c0, -1762470688)))))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED, t0 RIGHT OUTER JOIN t2 ON (+ (((vt0.c0)OR(0.24659504066720161)))) WHERE (((((((t0.c0) NOT NULL))&(LIKE(t0.c0, -1762470688)))) ISNULL));
SELECT DISTINCT * FROM vt0, t0 RIGHT OUTER JOIN t2 ON (+ (((vt0.c0)OR(0.24659504066720161))));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((SQLITE_COMPILEOPTION_GET(vt1.c0)) IS FALSE)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((SQLITE_COMPILEOPTION_GET(vt1.c0)) IS FALSE)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((SQLITE_COMPILEOPTION_GET(vt1.c0)) IS FALSE)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (((((AVG(t2.c0)) NOTNULL), ((((COUNT(*))AND(t2.c0)))AND(t2.c0)), MIN(0.13390388227844885)))>=((GROUP_CONCAT(t2.c0), SUM(TOTAL(t2.c0)), (AVG(t2.c0) IN ())))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT ((((((AVG(t2.c0)) NOTNULL), ((((COUNT(*))AND(t2.c0)))AND(t2.c0)), MIN(0.13390388227844885)))>=((GROUP_CONCAT(t2.c0), SUM(TOTAL(t2.c0)), (AVG(t2.c0) IN ())))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (((((((AVG(t2.c0)) NOTNULL), ((((COUNT(*))AND(t2.c0)))AND(t2.c0)), MIN(0.13390388227844885)))>=((GROUP_CONCAT(t2.c0), SUM(TOTAL(t2.c0)), (AVG(t2.c0) IN ()))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0))==((vt1.c0))) IN ())) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0))==((vt1.c0))) IN ())))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0))==((vt1.c0))) IN ())) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT t2.c0, vt0.c1 FROM vt0 NATURAL JOIN t2;
SELECT DISTINCT t2.c0, vt0.c1 FROM vt0 NATURAL JOIN t2 WHERE (((t2.c0 IN ()) IN (x'76ecaec8635a', (((vt0.c0, t2.c0, vt0.c0))<((t2.c0, t2.c0, vt0.c0)))))) UNION SELECT DISTINCT t2.c0, vt0.c1 FROM vt0 NATURAL JOIN t2 WHERE ((NOT (((t2.c0 IN ()) IN (x'76ecaec8635a', (((vt0.c0, t2.c0, vt0.c0))<((t2.c0, t2.c0, vt0.c0)))))))) UNION SELECT DISTINCT t2.c0, vt0.c1 FROM vt0 NATURAL JOIN t2 WHERE (((((t2.c0 IN ()) IN (x'76ecaec8635a', (((vt0.c0, t2.c0, vt0.c0))<((t2.c0, t2.c0, vt0.c0)))))) ISNULL));
SELECT DISTINCT t2.c0, vt0.c1 FROM vt0 NATURAL JOIN t2;
SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT t2.c0 FROM t2, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)|(t2.c0)))) AND ((((NULL) NOT BETWEEN (NULL) AND (vt0.c0)))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2, vt0 WHERE ((NOT ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)|(t2.c0)))) AND ((((NULL) NOT BETWEEN (NULL) AND (vt0.c0)))))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2, vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((((vt0.c1)|(t2.c0)))) AND ((((NULL) NOT BETWEEN (NULL) AND (vt0.c0)))))) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2, vt0 GROUP BY t2.c0;
SELECT t0.c0, t2.c0 FROM t2, t0 NATURAL JOIN vt1 GROUP BY t0.c0, t2.c0;
SELECT ALL t0.c0, t2.c0 FROM t2, t0 NATURAL JOIN vt1 GROUP BY t0.c0, t2.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL t0.c0, t2.c0 FROM t2, t0 NATURAL JOIN vt1 GROUP BY t0.c0, t2.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT t0.c0, t2.c0 FROM t2, t0 NATURAL JOIN vt1 GROUP BY t0.c0, t2.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL * FROM vt0, t2, vt1, t0;
SELECT ALL * FROM vt0, t2, vt1, t0 WHERE ((('1516127049') NOT BETWEEN (NULL) AND (((vt0.c0)==(t2.c0))))) UNION ALL SELECT * FROM vt0, t2, vt1, t0 WHERE ((NOT ((('1516127049') NOT BETWEEN (NULL) AND (((vt0.c0)==(t2.c0))))))) UNION ALL SELECT * FROM vt0, t2, vt1, t0 WHERE ((((('1516127049') NOT BETWEEN (NULL) AND (((vt0.c0)==(t2.c0))))) ISNULL));
SELECT ALL * FROM vt0, t2, vt1, t0;
SELECT DISTINCT t0.c0 FROM t2, t0;
SELECT DISTINCT t0.c0 FROM t2, t0 WHERE (json((+ (t2.c0)))) UNION SELECT DISTINCT t0.c0 FROM t2, t0 WHERE ((NOT (json((+ (t2.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t2, t0 WHERE (((json((+ (t2.c0)))) ISNULL));
SELECT vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM t0, vt0 WHERE (vt0.c0) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM t0, vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM t0, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0, t2.c0 FROM vt0 INNER JOIN t2 ON CASE ((NULL)<=(''))  WHEN ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(t2.c0)))OR(vt0.c1)) THEN vt0.c0 END GROUP BY vt0.c1, vt0.c0, t2.c0;
SELECT vt0.c1, vt0.c0, t2.c0 FROM vt0 INNER JOIN t2 ON CASE ((NULL)<=(''))  WHEN ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(t2.c0)))OR(vt0.c1)) THEN vt0.c0 END GROUP BY vt0.c1, vt0.c0, t2.c0 HAVING GROUP_CONCAT(MAX(t2.c0)) UNION ALL SELECT vt0.c1, vt0.c0, t2.c0 FROM vt0 INNER JOIN t2 ON CASE ((NULL)<=(''))  WHEN ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(t2.c0)))OR(vt0.c1)) THEN vt0.c0 END GROUP BY vt0.c1, vt0.c0, t2.c0 HAVING (NOT (GROUP_CONCAT(MAX(t2.c0)))) UNION ALL SELECT ALL vt0.c1, vt0.c0, t2.c0 FROM vt0 INNER JOIN t2 ON CASE ((NULL)<=(''))  WHEN ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(t2.c0)))OR(vt0.c1)) THEN vt0.c0 END GROUP BY vt0.c1, vt0.c0, t2.c0 HAVING ((GROUP_CONCAT(MAX(t2.c0))) ISNULL);
SELECT ALL vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 WHERE (((((vt0.c0)<=(vt0.c1))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c1)GLOB(vt0.c1))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0)<=(vt0.c1))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c1)GLOB(vt0.c1))))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE (((((((vt0.c0)<=(vt0.c1))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c1)GLOB(vt0.c1))))) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt1, vt0 FULL OUTER JOIN t2 ON CASE vt0.c0 COLLATE RTRIM  WHEN CAST(vt1.c0 AS BLOB) THEN vt0.c1 ELSE vt0.c0 COLLATE NOCASE END;
SELECT DISTINCT * FROM vt1, vt0 FULL OUTER JOIN t2 ON CASE vt0.c0 COLLATE RTRIM  WHEN CAST(vt1.c0 AS BLOB) THEN vt0.c1 ELSE vt0.c0 COLLATE NOCASE END WHERE (((((CAST(vt0.c0 AS INTEGER))OR(CAST(vt0.c0 AS TEXT))))AND(t2.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1, vt0 FULL OUTER JOIN t2 ON CASE vt0.c0 COLLATE RTRIM  WHEN CAST(vt1.c0 AS BLOB) THEN vt0.c1 ELSE vt0.c0 COLLATE NOCASE END WHERE ((NOT (((((CAST(vt0.c0 AS INTEGER))OR(CAST(vt0.c0 AS TEXT))))AND(t2.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt1, vt0 FULL OUTER JOIN t2 ON CASE vt0.c0 COLLATE RTRIM  WHEN CAST(vt1.c0 AS BLOB) THEN vt0.c1 ELSE vt0.c0 COLLATE NOCASE END WHERE (((((((CAST(vt0.c0 AS INTEGER))OR(CAST(vt0.c0 AS TEXT))))AND(t2.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0 FULL OUTER JOIN t2 ON CASE vt0.c0 COLLATE RTRIM  WHEN CAST(vt1.c0 AS BLOB) THEN vt0.c1 ELSE vt0.c0 COLLATE NOCASE END;
SELECT ALL t2.c0, vt1.c0 FROM vt1, t2 GROUP BY t2.c0, vt1.c0;
SELECT t2.c0, vt1.c0 FROM vt1, t2 WHERE (LIKELY(DISTINCT t2.c0)) GROUP BY t2.c0, vt1.c0 UNION SELECT t2.c0, vt1.c0 FROM vt1, t2 WHERE ((NOT (LIKELY(DISTINCT t2.c0)))) GROUP BY t2.c0, vt1.c0 UNION SELECT t2.c0, vt1.c0 FROM vt1, t2 WHERE (((LIKELY(DISTINCT t2.c0)) ISNULL)) GROUP BY t2.c0, vt1.c0;
SELECT ALL t2.c0, vt1.c0 FROM vt1, t2 GROUP BY t2.c0, vt1.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, t0, t2, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, t0, t2, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (~ (load_extension(vt0.c0))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, t0, t2, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT ((~ (load_extension(vt0.c0))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, t0, t2, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (((~ (load_extension(vt0.c0)))) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt0, t0, t2, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, t0, t2, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (~ (load_extension(vt0.c0))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, t0, t2, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT ((~ (load_extension(vt0.c0))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, t0, t2, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (((~ (load_extension(vt0.c0)))) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt0, t0, t2, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL * FROM vt0, t0, vt1;
SELECT ALL * FROM vt0, t0, vt1 WHERE (JULIANDAY(vt1.c0, vt1.c0, vt1.c0) COLLATE RTRIM COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt0, t0 NOT INDEXED, vt1 WHERE ((NOT (JULIANDAY(vt1.c0, vt1.c0, vt1.c0) COLLATE RTRIM COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt0, t0, vt1 WHERE (((JULIANDAY(vt1.c0, vt1.c0, vt1.c0) COLLATE RTRIM COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt0, t0, vt1;
SELECT DISTINCT * FROM t0, t2;
SELECT DISTINCT * FROM t0, t2 WHERE (((((x'e15cdd53')>(t0.c0)))<(CASE WHEN t0.c0 THEN t2.c0 END))) UNION SELECT DISTINCT * FROM t0, t2 WHERE ((NOT (((((x'e15cdd53')>(t0.c0)))<(CASE WHEN t0.c0 THEN t2.c0 END))))) UNION SELECT DISTINCT * FROM t0, t2 WHERE (((((((x'e15cdd53')>(t0.c0)))<(CASE WHEN t0.c0 THEN t2.c0 END))) ISNULL));
SELECT DISTINCT * FROM t0, t2;
SELECT ALL vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((((CASE WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END)OR('|!')))OR(t0.c0)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((((CASE WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END)OR('|!')))OR(t0.c0)) WHERE (((t0.c0)==(vt1.c0)) COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((((CASE WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END)OR('|!')))OR(t0.c0)) WHERE ((NOT (((t0.c0)=(vt1.c0)) COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((((CASE WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END)OR('|!')))OR(t0.c0)) WHERE (((((t0.c0)==(vt1.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((((CASE WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END)OR('|!')))OR(t0.c0)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM t0, t2, vt1, vt0;
SELECT * FROM t0, t2, vt1, vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE NOCASE) UNION ALL SELECT * FROM t0, t2, vt1, vt0 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE NOCASE))) UNION ALL SELECT * FROM t0, t2, vt1, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM t0, t2, vt1, vt0;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE (LENGTH(NULLIF(DISTINCT t2.c0, t2.c0))) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT (LENGTH(NULLIF(DISTINCT t2.c0, t2.c0))))) UNION SELECT DISTINCT * FROM t2 WHERE (((LENGTH(NULLIF(DISTINCT t2.c0, t2.c0))) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, t0 FULL OUTER JOIN t2 ON ((((vt0.c0)&(t0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))) FULL OUTER JOIN vt1 ON CAST('' AS NUMERIC) COLLATE NOCASE GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0, t0 FULL OUTER JOIN t2 ON ((((vt0.c0)&(t0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))) FULL OUTER JOIN vt1 ON CAST('' AS NUMERIC) COLLATE NOCASE WHERE (((CAST(vt0.c0 AS BLOB))IS NOT((((t0.c0))>((t2.c0)))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0, t0 FULL OUTER JOIN t2 ON ((((vt0.c0)&(t0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))) FULL OUTER JOIN vt1 ON CAST('' AS NUMERIC) COLLATE NOCASE WHERE ((NOT (((CAST(vt0.c0 AS BLOB))IS NOT((((t0.c0))>((t2.c0)))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0, t0 FULL OUTER JOIN t2 ON ((((vt0.c0)&(t0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))) FULL OUTER JOIN vt1 ON CAST('' AS NUMERIC) COLLATE NOCASE WHERE (((((CAST(vt0.c0 AS BLOB))IS NOT((((t0.c0))>((t2.c0)))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, t0 FULL OUTER JOIN t2 ON ((((vt0.c0)&(t0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))) FULL OUTER JOIN vt1 ON CAST('' AS NUMERIC) COLLATE NOCASE GROUP BY vt0.c1, vt0.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING MIN(t2.c0) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (MIN(t2.c0))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((MIN(t2.c0)) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING MIN(t2.c0) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (MIN(t2.c0))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((MIN(t2.c0)) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT MIN(CASE WHEN ((((vt0.c0)OR(t2.c0)))OR(vt1.c0)) THEN (+ (t2.c0)) END) FROM vt1, vt0, t0, t2 ORDER BY NULLIF(DISTINCT (((t0.c0))!=((vt0.c1))), ((vt0.c0)=(t2.c0)));
SELECT * FROM vt0, t2;
SELECT ALL * FROM vt0, t2 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t2.c0))))>=(vt0.c1))) UNION ALL SELECT ALL * FROM vt0, t2 WHERE ((NOT ((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t2.c0))))>=(vt0.c1))))) UNION ALL SELECT * FROM vt0, t2 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t2.c0))))>=(vt0.c1))) ISNULL));
SELECT * FROM vt0, t2;
SELECT DISTINCT * FROM t0, vt0, t2 INNER JOIN vt1 ON MIN(((t2.c0) IS FALSE), CAST(t0.c0 AS NUMERIC));
SELECT DISTINCT * FROM t0, vt0, t2 INNER JOIN vt1 ON MIN(((t2.c0) IS FALSE), CAST(t0.c0 AS NUMERIC)) WHERE (((((((vt0.c0)OR(t2.c0)))AND(vt1.c0)))||(((vt0.c1) BETWEEN (vt0.c0) AND (500769520))))) UNION SELECT DISTINCT * FROM t0, vt0, t2 INNER JOIN vt1 ON MIN(((t2.c0) IS FALSE), CAST(t0.c0 AS NUMERIC)) WHERE ((NOT (((((((vt0.c0)OR(t2.c0)))AND(vt1.c0)))||(((vt0.c1) BETWEEN (vt0.c0) AND (500769520))))))) UNION SELECT DISTINCT * FROM t0, vt0, t2 INNER JOIN vt1 ON MIN(((t2.c0) IS FALSE), CAST(t0.c0 AS NUMERIC)) WHERE (((((((((vt0.c0)OR(t2.c0)))AND(vt1.c0)))||(((vt0.c1) BETWEEN (vt0.c0) AND (500769520))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0, t2 INNER JOIN vt1 ON MIN(((t2.c0) IS FALSE), CAST(t0.c0 AS NUMERIC));
SELECT vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON (vt1.c0 IN ()) COLLATE NOCASE FULL OUTER JOIN t2 ON 0.44201926844369677 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON (vt1.c0 IN ()) COLLATE NOCASE FULL OUTER JOIN t2 ON 0.44201926844369677 WHERE (((0.6083266282221927) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND ('(W|'))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON (vt1.c0 IN ()) COLLATE NOCASE FULL OUTER JOIN t2 ON 0.44201926844369677 WHERE ((NOT (((0.6083266282221927) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND ('(W|'))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON (vt1.c0 IN ()) COLLATE NOCASE FULL OUTER JOIN t2 ON 0.44201926844369677 WHERE (((((0.6083266282221927) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND ('(W|'))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON (vt1.c0 IN ()) COLLATE NOCASE FULL OUTER JOIN t2 ON 0.44201926844369677 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1, t2 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t2 GROUP BY vt1.c0 HAVING MIN((t2.c0 IN (MIN(SUM(t2.c0))))) UNION ALL SELECT vt1.c0 FROM vt1, t2 GROUP BY vt1.c0 HAVING (NOT (MIN((t2.c0 IN (MIN(SUM(t2.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, t2 GROUP BY vt1.c0 HAVING ((MIN((t2.c0 IN (MIN(SUM(t2.c0)))))) ISNULL);
SELECT * FROM t0 NOT INDEXED, vt1 INDEXED BY i39, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)-(((vt1.c0)||(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE RTRIM)-(((vt1.c0)||(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0 COLLATE RTRIM)-(((vt1.c0)||(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM t2, vt1, t0, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM t2, vt1, t0, vt0 WHERE (((NULL)=(NULL))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM t2, vt1, t0, vt0 WHERE ((NOT (((NULL)=(NULL))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t2 NOT INDEXED, vt1, t0, vt0 WHERE (((((NULL)==(NULL))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM t2, vt1, t0, vt0 GROUP BY vt1.c0;
SELECT t0.c0, t2.c0 FROM t2, vt1 INDEXED BY i37 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0)||(NULL)) AS TEXT) CROSS JOIN t0 ON CASE WHEN (- (vt0.c1)) THEN ((vt0.c1)+(vt1.c0)) END GROUP BY t0.c0, t2.c0;
SELECT vt0.c1, t0.c0 FROM t0, vt0, vt1, t2;
SELECT ALL vt0.c1, t0.c0 FROM t0, vt0, vt1, t2 WHERE ((('-566817562')!=(((((vt0.c1)OR(t2.c0)))AND(vt1.c0))))) UNION ALL SELECT vt0.c1, t0.c0 FROM t0, vt0, vt1, t2 WHERE ((NOT ((('-566817562')!=(((((vt0.c1)OR(t2.c0)))AND(vt1.c0))))))) UNION ALL SELECT vt0.c1, t0.c0 FROM t0, vt0, vt1, t2 WHERE ((((('-566817562')!=(((((vt0.c1)OR(t2.c0)))AND(vt1.c0))))) ISNULL));
SELECT vt0.c1, t0.c0 FROM t0, vt0, vt1, t2;
SELECT DISTINCT vt1.c0, t2.c0, vt0.c0, vt0.c1, t0.c0 FROM t0, vt1, t2, vt0;
SELECT DISTINCT vt1.c0, t2.c0, vt0.c0, vt0.c1, t0.c0 FROM t0, vt1, t2, vt0 WHERE (((x'') NOT BETWEEN (t0.c0) AND ('-1428449400')) COLLATE BINARY) UNION SELECT DISTINCT vt1.c0, t2.c0, vt0.c0, vt0.c1, t0.c0 FROM t0, vt1, t2, vt0 WHERE ((NOT (((x'') NOT BETWEEN (t0.c0) AND ('-1428449400')) COLLATE BINARY))) UNION SELECT DISTINCT vt1.c0, t2.c0, vt0.c0, vt0.c1, t0.c0 FROM t0, vt1, t2, vt0 WHERE (((((x'') NOT BETWEEN (t0.c0) AND ('-1428449400')) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt1.c0, t2.c0, vt0.c0, vt0.c1, t0.c0 FROM t0, vt1, t2, vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 NOT INDEXED WHERE (((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt0.c1 FROM vt0, t0, t2, vt1 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, t0, t2, vt1 GROUP BY vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1 FROM vt0, t0, t2, vt1 GROUP BY vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1 FROM vt0, t0, t2, vt1 GROUP BY vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1 FROM vt0, t0, t2, vt1 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, t0, t2, vt1 GROUP BY vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1 FROM vt0, t0, t2, vt1 GROUP BY vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1 FROM vt0, t0, t2, vt1 GROUP BY vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1 FROM vt0, t0, t2, vt1 GROUP BY vt0.c1;
SELECT ALL MAX(((((t0.c0) BETWEEN (t2.c0) AND (t2.c0))) IS TRUE)) FROM t0, t2;
SELECT ALL * FROM vt1, vt0, t0;
SELECT * FROM vt1, vt0, t0 WHERE (((t0.c0 COLLATE RTRIM) ISNULL)) UNION ALL SELECT * FROM vt1, vt0, t0 WHERE ((NOT (((t0.c0 COLLATE RTRIM) ISNULL)))) UNION ALL SELECT ALL * FROM vt1, vt0, t0 WHERE (((((t0.c0 COLLATE RTRIM) ISNULL)) ISNULL));
SELECT ALL * FROM vt1, vt0, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CAST(t0.c0 AS NUMERIC)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c0 AS NUMERIC)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0, vt0.c1, t2.c0, vt1.c0 FROM t2, t0, vt1, vt0 GROUP BY t0.c0, vt0.c1, t2.c0, vt1.c0;
SELECT ALL t0.c0, vt0.c1, t2.c0, vt1.c0 FROM t2, t0, vt1, vt0 WHERE (691558640) GROUP BY t0.c0, vt0.c1, t2.c0, vt1.c0 UNION SELECT t0.c0, vt0.c1, t2.c0, vt1.c0 FROM t2, t0, vt1, vt0 WHERE ((NOT (691558640))) GROUP BY t0.c0, vt0.c1, t2.c0, vt1.c0 UNION SELECT t0.c0, vt0.c1, t2.c0, vt1.c0 FROM t2, t0, vt1, vt0 WHERE (((691558640) ISNULL)) GROUP BY t0.c0, vt0.c1, t2.c0, vt1.c0;
SELECT ALL t0.c0, vt0.c1, t2.c0, vt1.c0 FROM t2, t0, vt1, vt0 GROUP BY t0.c0, vt0.c1, t2.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX((~ (GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX((~ (GROUP_CONCAT(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX((~ (GROUP_CONCAT(vt1.c0))))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))) AND ((t0.c0 COLLATE NOCASE)))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))) AND ((t0.c0 COLLATE NOCASE)))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))) AND ((t0.c0 COLLATE NOCASE)))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON ((vt1.c0)>>(vt0.c0)) COLLATE RTRIM;
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON ((vt1.c0)>>(vt0.c0)) COLLATE RTRIM WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON ((vt1.c0)>>(vt0.c0)) COLLATE RTRIM WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON ((vt1.c0)>>(vt0.c0)) COLLATE RTRIM WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON ((vt1.c0)>>(vt0.c0)) COLLATE RTRIM;
SELECT ALL vt1.c0, t0.c0, t2.c0 FROM vt0 LEFT OUTER JOIN t2 ON TRIM(DISTINCT CASE vt0.c0  WHEN t0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, CAST(t2.c0 AS BLOB)) RIGHT OUTER JOIN vt1 ON ((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))+(vt1.c0 COLLATE RTRIM)) FULL OUTER JOIN t0 ON ((((((t0.c0)>(t0.c0)))OR(NULLIF(DISTINCT t0.c0, vt0.c0))))OR(((vt0.c0) IS FALSE))) GROUP BY vt1.c0, t0.c0, t2.c0;
SELECT ALL t2.c0 FROM vt1 INDEXED BY i39, t2 GROUP BY t2.c0;
SELECT ALL * FROM vt1, t2 FULL OUTER JOIN vt0 ON ((((NULL)AND(((((((((vt0.c0)OR(vt1.c0)))AND(t2.c0)))AND(0.4663465511167838)))OR(vt0.c1)))))AND(highlight(vt0.c1, t2.c0, 0.7794263223917074, vt0.c0))) CROSS JOIN t0 ON ((((t2.c0) IS TRUE))|(((((t0.c0)OR(t0.c0)))AND(t2.c0))));
SELECT * FROM vt1, t2 FULL OUTER JOIN vt0 ON ((((NULL)AND(((((((((vt0.c0)OR(vt1.c0)))AND(t2.c0)))AND(0.4663465511167838)))OR(vt0.c1)))))AND(highlight(vt0.c1, t2.c0, 0.7794263223917074, vt0.c0))) CROSS JOIN t0 ON ((((t2.c0) IS TRUE))|(((((t0.c0)OR(t0.c0)))AND(t2.c0)))) WHERE (ABS(DISTINCT vt1.c0)) UNION ALL SELECT * FROM vt1, t2 FULL OUTER JOIN vt0 ON ((((NULL)AND(((((((((vt0.c0)OR(vt1.c0)))AND(t2.c0)))AND(0.4663465511167838)))OR(vt0.c1)))))AND(highlight(vt0.c1, t2.c0, 0.7794263223917074, vt0.c0))) CROSS JOIN t0 ON ((((t2.c0) IS TRUE))|(((((t0.c0)OR(t0.c0)))AND(t2.c0)))) WHERE ((NOT (ABS(DISTINCT vt1.c0)))) UNION ALL SELECT ALL * FROM vt1, t2 FULL OUTER JOIN vt0 ON ((((NULL)AND(((((((((vt0.c0)OR(vt1.c0)))AND(t2.c0)))AND(0.4663465511167838)))OR(vt0.c1)))))AND(highlight(vt0.c1, t2.c0, 0.7794263223917074, vt0.c0))) CROSS JOIN t0 ON ((((t2.c0) IS TRUE))|(((((t0.c0)OR(t0.c0)))AND(t2.c0)))) WHERE (((ABS(DISTINCT vt1.c0)) ISNULL));
SELECT ALL * FROM vt1, t2 FULL OUTER JOIN vt0 ON ((((NULL)AND(((((((((vt0.c0)OR(vt1.c0)))AND(t2.c0)))AND(0.4663465511167838)))OR(vt0.c1)))))AND(highlight(vt0.c1, t2.c0, 0.7794263223917074, vt0.c0))) CROSS JOIN t0 ON ((((t2.c0) IS TRUE))|(((((t0.c0)OR(t0.c0)))AND(t2.c0))));
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE (CASE WHEN t2.c0 THEN CAST(t2.c0 AS NUMERIC) ELSE ((t2.c0)<=(t2.c0)) END) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT (CASE WHEN t2.c0 THEN CAST(t2.c0 AS NUMERIC) ELSE ((t2.c0)<=(t2.c0)) END))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE (((CASE WHEN t2.c0 THEN CAST(t2.c0 AS NUMERIC) ELSE ((t2.c0)<=(t2.c0)) END) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT ALL t2.c0, t0.c0, vt0.c1, vt1.c0 FROM vt1, t0, t2, vt0 GROUP BY t2.c0, t0.c0, vt0.c1, vt1.c0;
SELECT t2.c0, t0.c0, vt0.c1, vt1.c0 FROM vt1, t0, t2, vt0 WHERE (CASE WHEN NULL COLLATE BINARY THEN ((t2.c0) BETWEEN (vt1.c0) AND (vt0.c0)) WHEN CASE vt1.c0  WHEN vt0.c0 THEN t0.c0 ELSE t2.c0 END THEN t2.c0 WHEN UPPER(DISTINCT vt0.c0) THEN (((vt1.c0, t2.c0, vt0.c1))>((t2.c0, vt1.c0, t2.c0))) END) GROUP BY t2.c0, t0.c0, vt0.c1, vt1.c0 UNION SELECT ALL t2.c0, t0.c0, vt0.c1, vt1.c0 FROM vt1, t0, t2, vt0 WHERE ((NOT (CASE WHEN NULL COLLATE BINARY THEN ((t2.c0) BETWEEN (vt1.c0) AND (vt0.c0)) WHEN CASE vt1.c0  WHEN vt0.c0 THEN t0.c0 ELSE t2.c0 END THEN t2.c0 WHEN UPPER(DISTINCT vt0.c0) THEN (((vt1.c0, t2.c0, vt0.c1))>((t2.c0, vt1.c0, t2.c0))) END))) GROUP BY t2.c0, t0.c0, vt0.c1, vt1.c0 UNION SELECT ALL t2.c0, t0.c0, vt0.c1, vt1.c0 FROM vt1, t0, t2, vt0 WHERE (((CASE WHEN NULL COLLATE BINARY THEN ((t2.c0) BETWEEN (vt1.c0) AND (vt0.c0)) WHEN CASE vt1.c0  WHEN vt0.c0 THEN t0.c0 ELSE t2.c0 END THEN t2.c0 WHEN UPPER(DISTINCT vt0.c0) THEN (((vt1.c0, t2.c0, vt0.c1))>((t2.c0, vt1.c0, t2.c0))) END) ISNULL)) GROUP BY t2.c0, t0.c0, vt0.c1, vt1.c0;
SELECT ALL t2.c0, t0.c0, vt0.c1, vt1.c0 FROM vt1, t0, t2, vt0 GROUP BY t2.c0, t0.c0, vt0.c1, vt1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(t0.c0 COLLATE RTRIM) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(t0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(t0.c0 COLLATE RTRIM)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(t0.c0 COLLATE RTRIM) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(t0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(t0.c0 COLLATE RTRIM)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c1 FROM vt0, t0, vt1, t2;
SELECT ALL vt0.c1 FROM vt0, t0, vt1, t2 WHERE ((((((vt1.c0 IN ()))OR(vt1.c0)))AND((((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0)))))) UNION ALL SELECT ALL vt0.c1 FROM vt0, t0, vt1, t2 WHERE ((NOT ((((((vt1.c0 IN ()))OR(vt1.c0)))AND((((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0)))))))) UNION ALL SELECT ALL vt0.c1 FROM vt0, t0, vt1, t2 WHERE ((((((((vt1.c0 IN ()))OR(vt1.c0)))AND((((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0)))))) ISNULL));
SELECT ALL vt0.c1 FROM vt0, t0, vt1, t2;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN t2 ON ((0.2258229823067157 COLLATE RTRIM)<=((((t2.c0)) BETWEEN ((x'')) AND ((vt0.c0)))));
SELECT DISTINCT * FROM vt0 NOT INDEXED RIGHT OUTER JOIN t2 ON ((0.2258229823067157 COLLATE RTRIM)<=((((t2.c0)) BETWEEN ((x'')) AND ((vt0.c0))))) WHERE ((((((vt0.c1) NOTNULL), ((vt0.c0)>=(vt0.c0)), (x'' IN ())))==((((t2.c0) BETWEEN (t2.c0) AND (vt0.c0)), MIN(vt0.c0, vt0.c0, t2.c0, -161747772), 0Xffffffffe119f356)))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN t2 ON ((0.2258229823067157 COLLATE RTRIM)<=((((t2.c0)) BETWEEN ((x'')) AND ((vt0.c0))))) WHERE ((NOT ((((((vt0.c1) NOTNULL), ((vt0.c0)>=(vt0.c0)), (x'' IN ())))=((((t2.c0) BETWEEN (t2.c0) AND (vt0.c0)), MIN(vt0.c0, vt0.c0, t2.c0, -161747772), 0xffffffffe119f356)))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN t2 ON ((0.2258229823067157 COLLATE RTRIM)<=((((t2.c0)) BETWEEN ((x'')) AND ((vt0.c0))))) WHERE ((((((((vt0.c1) NOTNULL), ((vt0.c0)>=(vt0.c0)), (x'' IN ())))==((((t2.c0) BETWEEN (t2.c0) AND (vt0.c0)), MIN(vt0.c0, vt0.c0, t2.c0, -161747772), 0xffffffffe119f356)))) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN t2 ON ((0.2258229823067157 COLLATE RTRIM)<=((((t2.c0)) BETWEEN ((x'')) AND ((vt0.c0)))));
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (((((('170792244')GLOB(vt0.c1)), vt0.c1, vt0.c1 COLLATE NOCASE))<>((((vt0.c0) NOTNULL), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0) NOT BETWEEN (x'cb02') AND (0.5868015572601453)))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (((((('170792244')GLOB(vt0.c1)), vt0.c1, vt0.c1 COLLATE NOCASE))<>((((vt0.c0) NOTNULL), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0) NOT BETWEEN (x'cb02') AND (0.5868015572601453)))))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((((((('170792244')GLOB(vt0.c1)), vt0.c1, vt0.c1 COLLATE NOCASE))!=((((vt0.c0) NOTNULL), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0) NOT BETWEEN (x'cb02') AND (0.5868015572601453)))))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1, vt1.c0 FROM t2, vt1 LEFT OUTER JOIN vt0 ON (((t0.c0)>=(vt0.c1)) IN ()) RIGHT OUTER JOIN t0 ON CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) THEN (~ (t2.c0)) ELSE (NOT (vt0.c0)) END GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM t2, vt1 LEFT OUTER JOIN vt0 ON (((t0.c0)>=(vt0.c1)) IN ()) RIGHT OUTER JOIN t0 ON CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) THEN (~ (t2.c0)) ELSE (NOT (vt0.c0)) END GROUP BY vt0.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM t2, vt1 LEFT OUTER JOIN vt0 ON (((t0.c0)>=(vt0.c1)) IN ()) RIGHT OUTER JOIN t0 ON CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) THEN (~ (t2.c0)) ELSE (NOT (vt0.c0)) END GROUP BY vt0.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM t2, vt1 LEFT OUTER JOIN vt0 ON (((t0.c0)>=(vt0.c1)) IN ()) RIGHT OUTER JOIN t0 ON CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) THEN (~ (t2.c0)) ELSE (NOT (vt0.c0)) END GROUP BY vt0.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, vt1.c0 FROM t2, vt1 LEFT OUTER JOIN vt0 ON (((t0.c0)>=(vt0.c1)) IN ()) RIGHT OUTER JOIN t0 ON CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) THEN (~ (t2.c0)) ELSE (NOT (vt0.c0)) END GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM t2, vt1 LEFT OUTER JOIN vt0 ON (((t0.c0)>=(vt0.c1)) IN ()) RIGHT OUTER JOIN t0 ON CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) THEN (~ (t2.c0)) ELSE (NOT (vt0.c0)) END GROUP BY vt0.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM t2, vt1 LEFT OUTER JOIN vt0 ON (((t0.c0)>=(vt0.c1)) IN ()) RIGHT OUTER JOIN t0 ON CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) THEN (~ (t2.c0)) ELSE (NOT (vt0.c0)) END GROUP BY vt0.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM t2, vt1 LEFT OUTER JOIN vt0 ON (((t0.c0)>=(vt0.c1)) IN ()) RIGHT OUTER JOIN t0 ON CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) THEN (~ (t2.c0)) ELSE (NOT (vt0.c0)) END GROUP BY vt0.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, vt1.c0 FROM t2, vt1 LEFT OUTER JOIN vt0 ON (((t0.c0)>=(vt0.c1)) IN ()) RIGHT OUTER JOIN t0 ON CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) THEN (~ (t2.c0)) ELSE (NOT (vt0.c0)) END GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (vt1.c0) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt1 INNER JOIN t0 ON t0.c0;
SELECT DISTINCT * FROM vt1 INNER JOIN t0 ON t0.c0 WHERE (CASE WHEN LIKELY(DISTINCT t0.c0) THEN ((vt1.c0)==(vt1.c0)) WHEN ((vt1.c0)>=(vt1.c0)) THEN (NOT (t0.c0)) WHEN NULL THEN ((((t0.c0)AND(0.10820895952564213)))OR(t0.c0)) ELSE LIKELY(DISTINCT vt1.c0) END) UNION SELECT DISTINCT * FROM vt1 INNER JOIN t0 ON t0.c0 WHERE ((NOT (CASE WHEN LIKELY(DISTINCT t0.c0) THEN ((vt1.c0)==(vt1.c0)) WHEN ((vt1.c0)>=(vt1.c0)) THEN (NOT (t0.c0)) WHEN NULL THEN ((((t0.c0)AND(0.10820895952564213)))OR(t0.c0)) ELSE LIKELY(DISTINCT vt1.c0) END))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN t0 ON t0.c0 WHERE (((CASE WHEN LIKELY(DISTINCT t0.c0) THEN ((vt1.c0)=(vt1.c0)) WHEN ((vt1.c0)>=(vt1.c0)) THEN (NOT (t0.c0)) WHEN NULL THEN ((((t0.c0)AND(0.10820895952564213)))OR(t0.c0)) ELSE LIKELY(DISTINCT vt1.c0) END) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN t0 ON t0.c0;
SELECT vt0.c1 FROM t0, vt1, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM t0, vt1, vt0 WHERE (t0.c0 COLLATE BINARY) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM t0, vt1, vt0 WHERE ((NOT (t0.c0 COLLATE BINARY))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM t0 NOT INDEXED, vt1, vt0 WHERE (((t0.c0 COLLATE BINARY) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM t0, vt1, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c0 FROM vt0, t2, t0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t2, t0 GROUP BY vt0.c0 HAVING t2.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0, t2, t0 GROUP BY vt0.c0 HAVING (NOT (t2.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0, t2, t0 GROUP BY vt0.c0 HAVING ((t2.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0, t2, t0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t2, t0 GROUP BY vt0.c0 HAVING t2.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0, t2, t0 GROUP BY vt0.c0 HAVING (NOT (t2.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0, t2, t0 GROUP BY vt0.c0 HAVING ((t2.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0, t2, t0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (((t0.c0 COLLATE RTRIM)IS NOT((~ (vt0.c0))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (((t0.c0 COLLATE RTRIM)IS NOT((~ (vt0.c0))))))) UNION ALL SELECT * FROM vt0, t0 WHERE (((((t0.c0 COLLATE RTRIM)IS NOT((~ (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT * FROM vt1, t2, vt0;
SELECT DISTINCT * FROM vt1, t2, vt0 WHERE (CAST(vt1.c0 AS BLOB) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1, t2, vt0 WHERE ((NOT (CAST(vt1.c0 AS BLOB) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1, t2, vt0 WHERE (((CAST(vt1.c0 AS BLOB) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1, t2, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((646138884)OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0)%(vt1.c0)))))AND((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, '*+>Y', vt1.c0))))))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((((646138884)OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0)%(vt1.c0)))))AND((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, '*+>Y', vt1.c0))))))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((((((646138884)OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0)%(vt1.c0)))))AND((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, '*+>Y', vt1.c0))))))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c1, t0.c0, t2.c0 FROM t2, t0, vt0 GROUP BY vt0.c1, t0.c0, t2.c0;
SELECT ALL vt0.c1, t0.c0, t2.c0 FROM t2, t0, vt0 GROUP BY vt0.c1, t0.c0, t2.c0 HAVING GROUP_CONCAT(TOTAL(t0.c0)) UNION ALL SELECT vt0.c1, t0.c0, t2.c0 FROM t2, t0, vt0 GROUP BY vt0.c1, t0.c0, t2.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(t0.c0)))) UNION ALL SELECT vt0.c1, t0.c0, t2.c0 FROM t2, t0, vt0 GROUP BY vt0.c1, t0.c0, t2.c0 HAVING ((GROUP_CONCAT(TOTAL(t0.c0))) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 INDEXED BY i37, t2;
SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON t0.c0 COLLATE BINARY COLLATE NOCASE LEFT OUTER JOIN t2 ON (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND('1954437064')))AND(vt0.c0)) IN ()) INNER JOIN vt1 ON ((((vt1.c0) ISNULL)) BETWEEN (((NULL)LIKE(vt0.c0))) AND (JULIANDAY(vt0.c1, x'', vt1.c0)));
SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON t0.c0 COLLATE BINARY COLLATE NOCASE LEFT OUTER JOIN t2 ON (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND('1954437064')))AND(vt0.c0)) IN ()) INNER JOIN vt1 ON ((((vt1.c0) ISNULL)) BETWEEN (((NULL)LIKE(vt0.c0))) AND (JULIANDAY(vt0.c1, x'', vt1.c0))) WHERE (CAST((+ (vt1.c0)) AS REAL)) UNION SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON t0.c0 COLLATE BINARY COLLATE NOCASE LEFT OUTER JOIN t2 ON (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND('1954437064')))AND(vt0.c0)) IN ()) INNER JOIN vt1 ON ((((vt1.c0) ISNULL)) BETWEEN (((NULL)LIKE(vt0.c0))) AND (JULIANDAY(vt0.c1, x'', vt1.c0))) WHERE ((NOT (CAST((+ (vt1.c0)) AS REAL)))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON t0.c0 COLLATE BINARY COLLATE NOCASE LEFT OUTER JOIN t2 ON (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND('1954437064')))AND(vt0.c0)) IN ()) INNER JOIN vt1 ON ((((vt1.c0) ISNULL)) BETWEEN (((NULL)LIKE(vt0.c0))) AND (JULIANDAY(vt0.c1, x'', vt1.c0))) WHERE (((CAST((+ (vt1.c0)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON t0.c0 COLLATE BINARY COLLATE NOCASE LEFT OUTER JOIN t2 ON (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND('1954437064')))AND(vt0.c0)) IN ()) INNER JOIN vt1 ON ((((vt1.c0) ISNULL)) BETWEEN (((NULL)LIKE(vt0.c0))) AND (JULIANDAY(vt0.c1, x'', vt1.c0)));
SELECT ALL t2.c0 FROM vt0, t2, t0, vt1 GROUP BY t2.c0;
SELECT t2.c0 FROM vt0, t2, t0, vt1 WHERE (x'') GROUP BY t2.c0 UNION SELECT t2.c0 FROM vt0, t2, t0, vt1 WHERE ((NOT (x''))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM vt0, t2, t0, vt1 WHERE (((x'') ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM vt0, t2, t0, vt1 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM vt1 RIGHT OUTER JOIN t2 ON CAST(1.398101633E9 AS INTEGER) GROUP BY t2.c0;
SELECT t2.c0 FROM vt1 RIGHT OUTER JOIN t2 ON CAST(1.398101633E9 AS INTEGER) GROUP BY t2.c0 HAVING (TOTAL(vt1.c0) IN ()) UNION ALL SELECT ALL t2.c0 FROM vt1 NOT INDEXED RIGHT OUTER JOIN t2 ON CAST(1.398101633E9 AS INTEGER) GROUP BY t2.c0 HAVING (NOT ((TOTAL(vt1.c0) IN ()))) UNION ALL SELECT t2.c0 FROM vt1 RIGHT OUTER JOIN t2 ON CAST(1.398101633E9 AS INTEGER) GROUP BY t2.c0 HAVING (((TOTAL(vt1.c0) IN ())) ISNULL);
SELECT ALL t2.c0 FROM vt1 RIGHT OUTER JOIN t2 ON CAST(1.398101633E9 AS INTEGER) GROUP BY t2.c0;
SELECT t2.c0 FROM vt1 RIGHT OUTER JOIN t2 ON CAST(1.398101633E9 AS INTEGER) GROUP BY t2.c0 HAVING (TOTAL(vt1.c0) IN ()) UNION ALL SELECT ALL t2.c0 FROM vt1 NOT INDEXED RIGHT OUTER JOIN t2 ON CAST(1.398101633E9 AS INTEGER) GROUP BY t2.c0 HAVING (NOT ((TOTAL(vt1.c0) IN ()))) UNION ALL SELECT t2.c0 FROM vt1 RIGHT OUTER JOIN t2 ON CAST(1.398101633E9 AS INTEGER) GROUP BY t2.c0 HAVING (((TOTAL(vt1.c0) IN ())) ISNULL);
SELECT ALL t2.c0 FROM vt1 RIGHT OUTER JOIN t2 ON CAST(1.398101633E9 AS INTEGER) GROUP BY t2.c0;
SELECT SUM(((((((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)OR((vt0.c0 IN ()))))AND(vt0.c1)))OR((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((2081734585))))))AND((+ (vt0.c0))))) FROM vt0 ORDER BY ((((vt0.c0)+(vt0.c1)))IS NOT(((vt0.c0)=(vt0.c0))))  NULLS FIRST, (IFNULL(DISTINCT vt0.c1, vt0.c0) IN ());
SELECT vt1.c0 FROM t0 LEFT OUTER JOIN vt1 ON ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT NULL);
SELECT vt1.c0 FROM t0 LEFT OUTER JOIN vt1 ON ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT NULL) WHERE (((NULL) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))) AND (json_array_length(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM t0 LEFT OUTER JOIN vt1 ON ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT NULL) WHERE ((NOT (((NULL) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))) AND (json_array_length(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM t0 LEFT OUTER JOIN vt1 ON ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT NULL) WHERE (((((NULL) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))) AND (json_array_length(vt1.c0)))) ISNULL));
SELECT vt1.c0 FROM t0 LEFT OUTER JOIN vt1 ON ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT NULL);
SELECT DISTINCT * FROM vt1, vt0, t2;
SELECT DISTINCT * FROM vt1, vt0, t2 WHERE ((vt0.c1 COLLATE RTRIM IN ())) UNION SELECT DISTINCT * FROM vt1, vt0, t2 WHERE ((NOT ((vt0.c1 COLLATE RTRIM IN ())))) UNION SELECT DISTINCT * FROM vt1, vt0, t2 WHERE ((((vt0.c1 COLLATE RTRIM IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, t2;
SELECT vt1.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, t0, vt1 WHERE (((IFNULL(DISTINCT vt0.c1, vt1.c0)) IS TRUE)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, t0, vt1 WHERE ((NOT (((IFNULL(DISTINCT vt0.c1, vt1.c0)) IS TRUE)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, t0, vt1 WHERE (((((IFNULL(DISTINCT vt0.c1, vt1.c0)) IS TRUE)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0;
SELECT vt0.c0, vt0.c1 FROM t0 INNER JOIN vt0 ON ((+ (vt0.c1)) IN ()) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM t0 INNER JOIN vt0 ON ((+ (vt0.c1)) IN ()) GROUP BY vt0.c0, vt0.c1 HAVING AVG(((GROUP_CONCAT(SUM(MAX(t0.c0)))) BETWEEN ('') AND (vt0.c0))) UNION ALL SELECT vt0.c0, vt0.c1 FROM t0 INNER JOIN vt0 ON ((+ (vt0.c1)) IN ()) GROUP BY vt0.c0, vt0.c1 HAVING (NOT (AVG(((GROUP_CONCAT(SUM(MAX(t0.c0)))) BETWEEN ('') AND (vt0.c0))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM t0 INNER JOIN vt0 ON ((+ (vt0.c1)) IN ()) GROUP BY vt0.c0, vt0.c1 HAVING ((AVG(((GROUP_CONCAT(SUM(MAX(t0.c0)))) BETWEEN ('') AND (vt0.c0)))) ISNULL);
SELECT * FROM vt0, vt1, t2;
SELECT * FROM vt0, vt1, t2 WHERE (CASE ((vt1.c0)&(vt1.c0))  WHEN ((((vt0.c0)OR(vt1.c0)))OR(t2.c0)) THEN ((t2.c0) IS TRUE) ELSE ((vt0.c1)*(t2.c0)) END) UNION ALL SELECT ALL * FROM vt0, vt1, t2 WHERE ((NOT (CASE ((vt1.c0)&(vt1.c0))  WHEN ((((vt0.c0)OR(vt1.c0)))OR(t2.c0)) THEN ((t2.c0) IS TRUE) ELSE ((vt0.c1)*(t2.c0)) END))) UNION ALL SELECT ALL * FROM vt0, vt1, t2 WHERE (((CASE ((vt1.c0)&(vt1.c0))  WHEN ((((vt0.c0)OR(vt1.c0)))OR(t2.c0)) THEN ((t2.c0) IS TRUE) ELSE ((vt0.c1)*(t2.c0)) END) ISNULL));
SELECT * FROM vt0, vt1, t2;
SELECT DISTINCT * FROM t0, vt0, t2;
SELECT DISTINCT * FROM t0, vt0, t2 WHERE ((t2.c0 IN (t2.c0, t2.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM t0, vt0, t2 WHERE ((NOT ((t2.c0 IN (t2.c0, t2.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0, vt0, t2 WHERE ((((t2.c0 IN (t2.c0, t2.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t0, vt0, t2;
SELECT vt1.c0, t0.c0 FROM vt0, vt1, t0, t2 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt0, vt1, t0, t2 WHERE ((((t2.c0, x'', t0.c0))==((((t0.c0)<<(vt0.c1)), ((t0.c0) IS FALSE), CAST(0x54e992e1 AS BLOB))))) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM vt0, vt1, t0, t2 WHERE ((NOT ((((t2.c0, x'', t0.c0))==((((t0.c0)<<(vt0.c1)), ((t0.c0) IS FALSE), CAST(0X54e992e1 AS BLOB))))))) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM vt0, vt1, t0, t2 WHERE ((((((t2.c0, x'', t0.c0))=((((t0.c0)<<(vt0.c1)), ((t0.c0) IS FALSE), CAST(0X54e992e1 AS BLOB))))) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt0, vt1, t0, t2 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING CASE WHEN (~ (COUNT(*))) THEN COUNT(vt0.c0) ELSE (COUNT(*) IN ()) END UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (CASE WHEN (~ (COUNT(*))) THEN COUNT(vt0.c0) ELSE (COUNT(*) IN ()) END)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((CASE WHEN (~ (COUNT(*))) THEN COUNT(vt0.c0) ELSE (COUNT(*) IN ()) END) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING CASE WHEN (~ (COUNT(*))) THEN COUNT(vt0.c0) ELSE (COUNT(*) IN ()) END UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (CASE WHEN (~ (COUNT(*))) THEN COUNT(vt0.c0) ELSE (COUNT(*) IN ()) END)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((CASE WHEN (~ (COUNT(*))) THEN COUNT(vt0.c0) ELSE (COUNT(*) IN ()) END) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL MAX((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN (UPPER(t2.c0)))) FROM vt0, vt1, t2, t0;
SELECT ALL vt1.c0 FROM vt1, vt0, t2;
SELECT ALL vt1.c0 FROM vt1, vt0, t2 WHERE ((- (vt0.c1)) COLLATE BINARY) UNION ALL SELECT vt1.c0 FROM vt1, vt0, t2 WHERE ((NOT ((- (vt0.c1)) COLLATE BINARY))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0, t2 WHERE ((((- (vt0.c1)) COLLATE BINARY) ISNULL));
SELECT ALL vt1.c0 FROM vt1, vt0, t2;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (0.660864028111697) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (0.660864028111697))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((0.660864028111697) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0 IN ()))&((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0 IN ()))&((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0 IN ()))&((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(AVG(SUM(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(AVG(SUM(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(AVG(SUM(t0.c0)))) ISNULL);
SELECT ALL * FROM t0, t2;
SELECT * FROM t0, t2 WHERE (((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM t0, t2 WHERE ((NOT (((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM t0, t2 WHERE (((((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM t0, t2;
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE ((((NULL)+(t0.c0)) IN (LIKELIHOOD(DISTINCT vt1.c0, 0.11676929842998007), (+ (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT ((((NULL)+(t0.c0)) IN (LIKELIHOOD(DISTINCT vt1.c0, 0.11676929842998007), (+ (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((((((NULL)+(t0.c0)) IN (LIKELIHOOD(DISTINCT vt1.c0, 0.11676929842998007), (+ (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE BINARY) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE BINARY))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE BINARY) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t2.c0, vt0.c1, vt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt1.c0)OR(vt0.c1 COLLATE BINARY)))OR(vt0.c1)) INNER JOIN t2 ON (((vt0.c1, vt0.c1, t2.c0))<=((t2.c0, vt0.c0, vt0.c1))) COLLATE BINARY GROUP BY t2.c0, vt0.c1, vt0.c0, vt1.c0;
SELECT ALL t2.c0, vt0.c1, vt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt1.c0)OR(vt0.c1 COLLATE BINARY)))OR(vt0.c1)) INNER JOIN t2 ON (((vt0.c1, vt0.c1, t2.c0))<=((t2.c0, vt0.c0, vt0.c1))) COLLATE BINARY GROUP BY t2.c0, vt0.c1, vt0.c0, vt1.c0 HAVING TOTAL(TRIM(DISTINCT MAX(vt1.c0), vt1.c0)) UNION ALL SELECT t2.c0, vt0.c1, vt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt1.c0)OR(vt0.c1 COLLATE BINARY)))OR(vt0.c1)) INNER JOIN t2 ON (((vt0.c1, vt0.c1, t2.c0))<=((t2.c0, vt0.c0, vt0.c1))) COLLATE BINARY GROUP BY t2.c0, vt0.c1, vt0.c0, vt1.c0 HAVING (NOT (TOTAL(TRIM(DISTINCT MAX(vt1.c0), vt1.c0)))) UNION ALL SELECT ALL t2.c0, vt0.c1, vt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt1.c0)OR(vt0.c1 COLLATE BINARY)))OR(vt0.c1)) INNER JOIN t2 ON (((vt0.c1, vt0.c1, t2.c0))<=((t2.c0, vt0.c0, vt0.c1))) COLLATE BINARY GROUP BY t2.c0, vt0.c1, vt0.c0, vt1.c0 HAVING ((TOTAL(TRIM(DISTINCT MAX(vt1.c0), vt1.c0))) ISNULL);
SELECT MAX(CAST(vt1.c0 AS REAL)) FROM vt1 ORDER BY ((((vt1.c0)!=(vt1.c0)))IS NOT(vt1.c0 COLLATE BINARY))  NULLS FIRST, (((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) IS FALSE) DESC;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT t2.c0 FROM t2, vt1;
SELECT DISTINCT t2.c0 FROM t2, vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)<(NULLIF(vt1.c0, t2.c0)))) UNION SELECT DISTINCT t2.c0 FROM t2, vt1 WHERE ((NOT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)<(NULLIF(vt1.c0, t2.c0)))))) UNION SELECT DISTINCT t2.c0 FROM t2, vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)<(NULLIF(vt1.c0, t2.c0)))) ISNULL));
SELECT DISTINCT t2.c0 FROM t2, vt1;
SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN t0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN t0 WHERE (((((t0.c0) NOT NULL))<<(t0.c0 COLLATE BINARY))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 NATURAL JOIN t0 WHERE ((NOT (((((t0.c0) NOT NULL))<<(t0.c0 COLLATE BINARY))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN t0 WHERE (((((((t0.c0) NOT NULL))<<(t0.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN t0 GROUP BY vt1.c0;
SELECT t0.c0, vt0.c1, vt1.c0, t2.c0 FROM t2 CROSS JOIN vt1 ON (((('1245841253')AND(((vt0.c1)%(vt0.c0)))))OR(((((((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))AND(t2.c0)))OR(0.8385624728744601)))) INNER JOIN vt0 ON (((((vt0.c1, x'', t0.c0))<>((t0.c0, t2.c0, vt1.c0))))<>(vt0.c0)) CROSS JOIN t0 ON 0.938219320126862 GROUP BY t0.c0, vt0.c1, vt1.c0, t2.c0;
SELECT t0.c0, vt0.c1, vt1.c0, t2.c0 FROM t2 CROSS JOIN vt1 ON (((('1245841253')AND(((vt0.c1)%(vt0.c0)))))OR(((((((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))AND(t2.c0)))OR(0.8385624728744601)))) INNER JOIN vt0 ON (((((vt0.c1, x'', t0.c0))!=((t0.c0, t2.c0, vt1.c0))))<>(vt0.c0)) CROSS JOIN t0 ON 0.938219320126862 GROUP BY t0.c0, vt0.c1, vt1.c0, t2.c0 HAVING MAX(COUNT(t0.c0)) UNION ALL SELECT ALL t0.c0, vt0.c1, vt1.c0, t2.c0 FROM t2 CROSS JOIN vt1 ON (((('1245841253')AND(((vt0.c1)%(vt0.c0)))))OR(((((((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))AND(t2.c0)))OR(0.8385624728744601)))) INNER JOIN vt0 ON (((((vt0.c1, x'', t0.c0))!=((t0.c0, t2.c0, vt1.c0))))<>(vt0.c0)) CROSS JOIN t0 ON 0.938219320126862 GROUP BY t0.c0, vt0.c1, vt1.c0, t2.c0 HAVING (NOT (MAX(COUNT(t0.c0)))) UNION ALL SELECT ALL t0.c0, vt0.c1, vt1.c0, t2.c0 FROM t2 CROSS JOIN vt1 ON (((('1245841253')AND(((vt0.c1)%(vt0.c0)))))OR(((((((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))AND(t2.c0)))OR(0.8385624728744601)))) INNER JOIN vt0 ON (((((vt0.c1, x'', t0.c0))<>((t0.c0, t2.c0, vt1.c0))))!=(vt0.c0)) CROSS JOIN t0 ON 0.938219320126862 GROUP BY t0.c0, vt0.c1, vt1.c0, t2.c0 HAVING ((MAX(COUNT(t0.c0))) ISNULL);
SELECT ALL MAX(vt0.c1) FROM t2, t0, vt0, vt1 ORDER BY (((CAST(vt0.c0 AS REAL)))=((json_insert(vt1.c0, x'', vt0.c0))))  NULLS FIRST;
SELECT ALL vt0.c1, vt0.c0 FROM t0, vt0;
SELECT ALL vt0.c1, vt0.c0 FROM t0, vt0 WHERE (CASE x'08c2'  WHEN UNLIKELY(DISTINCT vt0.c1) THEN CASE WHEN t0.c0 THEN t0.c0 END END) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM t0, vt0 WHERE ((NOT (CASE x'08c2'  WHEN UNLIKELY(DISTINCT vt0.c1) THEN CASE WHEN t0.c0 THEN t0.c0 END END))) UNION ALL SELECT vt0.c1, vt0.c0 FROM t0, vt0 WHERE (((CASE x'08c2'  WHEN UNLIKELY(DISTINCT vt0.c1) THEN CASE WHEN t0.c0 THEN t0.c0 END END) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (LIKELIHOOD((t0.c0 IN ()), 0.1471777956250342)) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (LIKELIHOOD((t0.c0 IN ()), 0.1471777956250342)))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((LIKELIHOOD((t0.c0 IN ()), 0.1471777956250342)) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT t2.c0 FROM vt1 INNER JOIN t2 ON (((0.9648231101717837)+(vt0.c0)) IN ()) INNER JOIN vt0 ON ((LIKELIHOOD('-1585762789', 0.8353895591495721))>>((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))))) GROUP BY t2.c0;
SELECT t2.c0 FROM vt1 INNER JOIN t2 ON (((0.9648231101717837)+(vt0.c0)) IN ()) INNER JOIN vt0 ON ((LIKELIHOOD('-1585762789', 0.8353895591495721))>>((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))))) WHERE (SQLITE_VERSION()) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM vt1 INNER JOIN t2 ON (((0.9648231101717837)+(vt0.c0)) IN ()) INNER JOIN vt0 ON ((LIKELIHOOD('-1585762789', 0.8353895591495721))>>((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))))) WHERE ((NOT (SQLITE_VERSION()))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM vt1 INNER JOIN t2 ON (((0.9648231101717837)+(vt0.c0)) IN ()) INNER JOIN vt0 ON ((LIKELIHOOD('-1585762789', 0.8353895591495721))>>((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))))) WHERE (((SQLITE_VERSION()) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM vt1 INNER JOIN t2 ON (((0.9648231101717837)+(vt0.c0)) IN ()) INNER JOIN vt0 ON ((LIKELIHOOD('-1585762789', 0.8353895591495721))>>((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))))) GROUP BY t2.c0;
SELECT vt1.c0, vt0.c1, vt0.c0, t0.c0 FROM t0, vt0, t2, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, t0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0, t0.c0 FROM t0, vt0, t2, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, t0.c0 HAVING '0.5244093672155452' UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0, t0.c0 FROM t0, vt0, t2, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, t0.c0 HAVING (NOT ('0.5244093672155452')) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0, t0.c0 FROM t0, vt0, t2, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, t0.c0 HAVING (('0.5244093672155452') ISNULL);
SELECT vt1.c0, vt0.c1, vt0.c0, t0.c0 FROM t0, vt0, t2, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, t0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0, t0.c0 FROM t0, vt0, t2, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, t0.c0 HAVING '0.5244093672155452' UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0, t0.c0 FROM t0, vt0, t2, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, t0.c0 HAVING (NOT ('0.5244093672155452')) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0, t0.c0 FROM t0, vt0, t2, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, t0.c0 HAVING (('0.5244093672155452') ISNULL);
SELECT vt1.c0, vt0.c1, vt0.c0, t0.c0 FROM t0, vt0, t2, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, t0.c0;
SELECT ALL * FROM t0 INDEXED BY i37, t2;
SELECT DISTINCT * FROM vt1, vt0, t0, t2;
SELECT DISTINCT * FROM vt1, vt0, t0, t2 WHERE (CAST(t2.c0 COLLATE NOCASE AS REAL)) UNION SELECT DISTINCT * FROM vt1, vt0, t0, t2 WHERE ((NOT (CAST(t2.c0 COLLATE NOCASE AS REAL)))) UNION SELECT DISTINCT * FROM vt1, vt0, t0, t2 WHERE (((CAST(t2.c0 COLLATE NOCASE AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, t0, t2;
SELECT t0.c0 FROM t2 LEFT OUTER JOIN t0 ON ((UPPER(DISTINCT NULL))<<(0.45717701071627803)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t2 LEFT OUTER JOIN t0 ON ((UPPER(DISTINCT NULL))<<(0.45717701071627803)) WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t2 LEFT OUTER JOIN t0 ON ((UPPER(DISTINCT NULL))<<(0.45717701071627803)) WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t2 LEFT OUTER JOIN t0 ON ((UPPER(DISTINCT NULL))<<(0.45717701071627803)) WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t2 LEFT OUTER JOIN t0 ON ((UPPER(DISTINCT NULL))<<(0.45717701071627803)) GROUP BY t0.c0;
SELECT t2.c0, vt1.c0 FROM vt1, t2 CROSS JOIN t0 ON ((((t2.c0 COLLATE NOCASE)AND(vt1.c0)))OR(vt1.c0 COLLATE BINARY)) GROUP BY t2.c0, vt1.c0;
SELECT t2.c0, vt1.c0 FROM vt1, t2 CROSS JOIN t0 ON ((((t2.c0 COLLATE NOCASE)AND(vt1.c0)))OR(vt1.c0 COLLATE BINARY)) GROUP BY t2.c0, vt1.c0 HAVING CASE WHEN NULL THEN (t2.c0 IN ()) WHEN CASE t0.c0  WHEN MAX(AVG(GROUP_CONCAT(t0.c0))) THEN SUM(t2.c0) WHEN COUNT(*) THEN t0.c0 WHEN t2.c0 THEN vt1.c0 ELSE t0.c0 END THEN TOTAL(vt1.c0) WHEN COUNT(*) THEN AVG(MIN(t0.c0)) END UNION ALL SELECT t2.c0, vt1.c0 FROM vt1, t2 CROSS JOIN t0 ON ((((t2.c0 COLLATE NOCASE)AND(vt1.c0)))OR(vt1.c0 COLLATE BINARY)) GROUP BY t2.c0, vt1.c0 HAVING (NOT (CASE WHEN NULL THEN (t2.c0 IN ()) WHEN CASE t0.c0  WHEN MAX(AVG(GROUP_CONCAT(t0.c0))) THEN SUM(t2.c0) WHEN COUNT(*) THEN t0.c0 WHEN t2.c0 THEN vt1.c0 ELSE t0.c0 END THEN TOTAL(vt1.c0) WHEN COUNT(*) THEN AVG(MIN(t0.c0)) END)) UNION ALL SELECT ALL t2.c0, vt1.c0 FROM vt1, t2 CROSS JOIN t0 ON ((((t2.c0 COLLATE NOCASE)AND(vt1.c0)))OR(vt1.c0 COLLATE BINARY)) GROUP BY t2.c0, vt1.c0 HAVING ((CASE WHEN NULL THEN (t2.c0 IN ()) WHEN CASE t0.c0  WHEN MAX(AVG(GROUP_CONCAT(t0.c0))) THEN SUM(t2.c0) WHEN COUNT(*) THEN t0.c0 WHEN t2.c0 THEN vt1.c0 ELSE t0.c0 END THEN TOTAL(vt1.c0) WHEN COUNT(*) THEN AVG(MIN(t0.c0)) END) ISNULL);
SELECT ALL * FROM t2, t0, vt0;
SELECT ALL * FROM t2, t0, vt0 WHERE ((((t0.c0 IN ())) IS FALSE)) UNION ALL SELECT ALL * FROM t2, t0, vt0 WHERE ((NOT ((((t0.c0 IN ())) IS FALSE)))) UNION ALL SELECT * FROM t2, t0, vt0 WHERE ((((((t0.c0 IN ())) IS FALSE)) ISNULL));
SELECT ALL * FROM t2, t0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (LIKE(0.5950450320078501, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (LIKE(0.5950450320078501, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((LIKE(0.5950450320078501, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0, vt1.c0, t2.c0 FROM t0, vt0, vt1, t2 GROUP BY t0.c0, vt1.c0, t2.c0;
SELECT t0.c0, vt1.c0, t2.c0 FROM t0, vt0, vt1, t2 WHERE (((((vt0.c0)AND(t0.c0)))>=(875359171))) GROUP BY t0.c0, vt1.c0, t2.c0 UNION SELECT ALL t0.c0, vt1.c0, t2.c0 FROM t0, vt0, vt1, t2 WHERE ((NOT (((((vt0.c0)AND(t0.c0)))>=(875359171))))) GROUP BY t0.c0, vt1.c0, t2.c0 UNION SELECT ALL t0.c0, vt1.c0, t2.c0 FROM t0, vt0, vt1, t2 WHERE (((((((vt0.c0)AND(t0.c0)))>=(875359171))) ISNULL)) GROUP BY t0.c0, vt1.c0, t2.c0;
SELECT t0.c0, vt1.c0, t2.c0 FROM t0, vt0, vt1, t2 GROUP BY t0.c0, vt1.c0, t2.c0;
SELECT ALL t0.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0, vt0.c1, vt1.c0;
SELECT t0.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0, vt0.c1, vt1.c0 HAVING json_array_length(AVG(vt0.c0)) UNION ALL SELECT ALL t0.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0, vt0.c1, vt1.c0 HAVING (NOT (json_array_length(AVG(vt0.c0)))) UNION ALL SELECT t0.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0, vt0.c1, vt1.c0 HAVING ((json_array_length(AVG(vt0.c0))) ISNULL);
SELECT ALL t0.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0, vt0.c1, vt1.c0;
SELECT t0.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0, vt0.c1, vt1.c0 HAVING json_array_length(AVG(vt0.c0)) UNION ALL SELECT ALL t0.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0, vt0.c1, vt1.c0 HAVING (NOT (json_array_length(AVG(vt0.c0)))) UNION ALL SELECT t0.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0, vt0.c1, vt1.c0 HAVING ((json_array_length(AVG(vt0.c0))) ISNULL);
SELECT ALL t0.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0, vt0.c1, vt1.c0;
SELECT vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 WHERE (((((((((((vt0.c1)AND('-1232832701')))AND(vt0.c1)))OR(x'')))AND(vt0.c1))) NOTNULL)) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (((((((((((vt0.c1)AND('-1232832701')))AND(vt0.c1)))OR(x'')))AND(vt0.c1))) NOTNULL)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE (((((((((((((vt0.c1)AND('-1232832701')))AND(vt0.c1)))OR(x'')))AND(vt0.c1))) NOTNULL)) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0, t2, t0, vt1;
SELECT DISTINCT * FROM vt0, t2, t0 NOT INDEXED, vt1 WHERE ((+ ((vt0.c1 IN (vt1.c0))))) UNION SELECT DISTINCT * FROM vt0, t2, t0, vt1 WHERE ((NOT ((+ ((vt0.c1 IN (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt0, t2, t0, vt1 WHERE ((((+ ((vt0.c1 IN (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, t2, t0, vt1;
SELECT ALL vt1.c0, t2.c0 FROM vt1, t2 GROUP BY vt1.c0, t2.c0;
SELECT ALL vt1.c0, t2.c0 FROM vt1, t2 WHERE (vt1.c0) GROUP BY vt1.c0, t2.c0 UNION SELECT vt1.c0, t2.c0 FROM vt1, t2 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0, t2.c0 UNION SELECT vt1.c0, t2.c0 FROM vt1, t2 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0, t2.c0;
SELECT ALL vt1.c0, t2.c0 FROM vt1, t2 GROUP BY vt1.c0, t2.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(((MIN(MIN(COUNT(vt1.c0))))IS(TOTAL(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(((MIN(MIN(COUNT(vt1.c0))))IS(TOTAL(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(((MIN(MIN(COUNT(vt1.c0))))IS(TOTAL(vt1.c0))))) ISNULL);
SELECT ALL * FROM vt0, t2, vt1, t0;
SELECT * FROM vt0, t2, vt1, t0 WHERE (((CASE t2.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)!=(((((((((t0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c1))))) UNION ALL SELECT ALL * FROM vt0, t2, vt1, t0 WHERE ((NOT (((CASE t2.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)<>(((((((((t0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c1))))))) UNION ALL SELECT ALL * FROM vt0, t2, vt1, t0 WHERE (((((CASE t2.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)!=(((((((((t0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c1))))) ISNULL));
SELECT ALL * FROM vt0, t2, vt1, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, x'2d69')) AND ((t0.c0, x'', t0.c0))))==((('') BETWEEN (t0.c0) AND (t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, x'2d69')) AND ((t0.c0, x'', t0.c0))))=((('') BETWEEN (t0.c0) AND (t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, x'2d69')) AND ((t0.c0, x'', t0.c0))))=((('') BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0)>(vt1.c0)))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((x''))))))AND((((vt1.c0, vt1.c0, '1604510140'))>=((vt1.c0, vt1.c0, vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0)>(vt1.c0)))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((x''))))))AND((((vt1.c0, vt1.c0, '1604510140'))>=((vt1.c0, vt1.c0, vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)>(vt1.c0)))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((x''))))))AND((((vt1.c0, vt1.c0, '1604510140'))>=((vt1.c0, vt1.c0, vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c1, vt0.c0 FROM t2, vt1, vt0 INNER JOIN t0 ON t0.c0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM t2, vt1, vt0 INNER JOIN t0 ON t0.c0 GROUP BY vt0.c1, vt0.c0 HAVING GROUP_CONCAT(CASE WHEN vt0.c0 THEN TOTAL(COUNT(*)) END) UNION ALL SELECT vt0.c1, vt0.c0 FROM t2, vt1, vt0 INNER JOIN t0 ON t0.c0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT(CASE WHEN vt0.c0 THEN TOTAL(COUNT(*)) END))) UNION ALL SELECT vt0.c1, vt0.c0 FROM t2, vt1, vt0 INNER JOIN t0 ON t0.c0 GROUP BY vt0.c1, vt0.c0 HAVING ((GROUP_CONCAT(CASE WHEN vt0.c0 THEN TOTAL(COUNT(*)) END)) ISNULL);
SELECT ALL t0.c0, vt1.c0, t2.c0 FROM t0, vt1 RIGHT OUTER JOIN t2 ON ((((((((vt1.c0)AND(((t0.c0)<<(t2.c0)))))AND((((vt1.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((t0.c0, t2.c0, vt1.c0))))))OR('')))AND((- (t0.c0))));
SELECT ALL t0.c0, vt1.c0, t2.c0 FROM t0, vt1 RIGHT OUTER JOIN t2 ON ((((((((vt1.c0)AND(((t0.c0)<<(t2.c0)))))AND((((vt1.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((t0.c0, t2.c0, vt1.c0))))))OR('')))AND((- (t0.c0)))) WHERE (t0.c0) UNION ALL SELECT t0.c0, vt1.c0, t2.c0 FROM t0, vt1 RIGHT OUTER JOIN t2 ON ((((((((vt1.c0)AND(((t0.c0)<<(t2.c0)))))AND((((vt1.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((t0.c0, t2.c0, vt1.c0))))))OR('')))AND((- (t0.c0)))) WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL t0.c0, vt1.c0, t2.c0 FROM t0, vt1 RIGHT OUTER JOIN t2 ON ((((((((vt1.c0)AND(((t0.c0)<<(t2.c0)))))AND((((vt1.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((t0.c0, t2.c0, vt1.c0))))))OR('')))AND((- (t0.c0)))) WHERE (((t0.c0) ISNULL));
SELECT ALL t0.c0, vt1.c0, t2.c0 FROM t0, vt1 RIGHT OUTER JOIN t2 ON ((((((((vt1.c0)AND(((t0.c0)<<(t2.c0)))))AND((((vt1.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((t0.c0, t2.c0, vt1.c0))))))OR('')))AND((- (t0.c0))));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)LIKE(t0.c0))) NOT BETWEEN (((((t0.c0)AND(t0.c0)))AND(t0.c0))) AND (CAST(t0.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0)LIKE(t0.c0))) NOT BETWEEN (((((t0.c0)AND(t0.c0)))AND(t0.c0))) AND (CAST(t0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)LIKE(t0.c0))) NOT BETWEEN (((((t0.c0)AND(t0.c0)))AND(t0.c0))) AND (CAST(t0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (LIKELIHOOD(DISTINCT CAST('1372083422' AS TEXT), 0.6398997149050434)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (LIKELIHOOD(DISTINCT CAST('1372083422' AS TEXT), 0.6398997149050434)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((LIKELIHOOD(DISTINCT CAST('1372083422' AS TEXT), 0.6398997149050434)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t2.c0 FROM vt1 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM LEFT OUTER JOIN t2 ON x'a1a9' GROUP BY t2.c0;
SELECT t2.c0 FROM vt1 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM LEFT OUTER JOIN t2 ON x'a1a9' GROUP BY t2.c0 HAVING MAX(TOTAL(vt1.c0)) UNION ALL SELECT t2.c0 FROM vt1 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM LEFT OUTER JOIN t2 ON x'a1a9' GROUP BY t2.c0 HAVING (NOT (MAX(TOTAL(vt1.c0)))) UNION ALL SELECT ALL t2.c0 FROM vt1 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM LEFT OUTER JOIN t2 ON x'a1a9' GROUP BY t2.c0 HAVING ((MAX(TOTAL(vt1.c0))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0)AND(t0.c0))) NOT BETWEEN (NULL) AND (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)AND(t0.c0))) NOT BETWEEN (NULL) AND (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0)AND(t0.c0))) NOT BETWEEN (NULL) AND (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM vt1, t2;
SELECT DISTINCT * FROM vt1, t2 WHERE ((((t2.c0)) BETWEEN ((((t2.c0) BETWEEN (t2.c0) AND ('500769520')))) AND ((CAST(vt1.c0 AS INTEGER))))) UNION SELECT DISTINCT * FROM vt1, t2 WHERE ((NOT ((((t2.c0)) BETWEEN ((((t2.c0) BETWEEN (t2.c0) AND ('500769520')))) AND ((CAST(vt1.c0 AS INTEGER))))))) UNION SELECT DISTINCT * FROM vt1, t2 WHERE ((((((t2.c0)) BETWEEN ((((t2.c0) BETWEEN (t2.c0) AND ('500769520')))) AND ((CAST(vt1.c0 AS INTEGER))))) ISNULL));
SELECT DISTINCT * FROM vt1, t2;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE ((((t2.c0 COLLATE NOCASE, ((NULL)>=(t2.c0)), ((t2.c0)==(t2.c0)), CASE WHEN t2.c0 THEN x'' END, ((((((((t2.c0)AND(t2.c0)))OR(t2.c0)))OR(t2.c0)))OR(t2.c0))))>((((t2.c0) BETWEEN (t2.c0) AND (t2.c0)), IFNULL(t2.c0, NULL), t2.c0 COLLATE RTRIM, ((-194923882) NOT NULL), CAST(t2.c0 AS BLOB))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT ((((t2.c0 COLLATE NOCASE, ((NULL)>=(t2.c0)), ((t2.c0)==(t2.c0)), CASE WHEN t2.c0 THEN x'' END, ((((((((t2.c0)AND(t2.c0)))OR(t2.c0)))OR(t2.c0)))OR(t2.c0))))>((((t2.c0) BETWEEN (t2.c0) AND (t2.c0)), IFNULL(t2.c0, NULL), t2.c0 COLLATE RTRIM, ((-194923882) NOT NULL), CAST(t2.c0 AS BLOB))))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((((((t2.c0 COLLATE NOCASE, ((NULL)>=(t2.c0)), ((t2.c0)==(t2.c0)), CASE WHEN t2.c0 THEN x'' END, ((((((((t2.c0)AND(t2.c0)))OR(t2.c0)))OR(t2.c0)))OR(t2.c0))))>((((t2.c0) BETWEEN (t2.c0) AND (t2.c0)), IFNULL(t2.c0, NULL), t2.c0 COLLATE RTRIM, ((-194923882) NOT NULL), CAST(t2.c0 AS BLOB))))) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT vt0.c0, vt0.c1, vt1.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (NOT ((- (vt0.c0)))) INNER JOIN vt1 ON ((NULL) IS FALSE) GROUP BY vt0.c0, vt0.c1, vt1.c0, t0.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (NOT ((- (vt0.c0)))) INNER JOIN vt1 ON ((NULL) IS FALSE) GROUP BY vt0.c0, vt0.c1, vt1.c0, t0.c0 HAVING (((-941080786)) NOT BETWEEN ((COUNT(*))) AND ((GROUP_CONCAT(t0.c0)))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (NOT ((- (vt0.c0)))) INNER JOIN vt1 ON ((NULL) IS FALSE) GROUP BY vt0.c0, vt0.c1, vt1.c0, t0.c0 HAVING (NOT ((((-941080786)) NOT BETWEEN ((COUNT(*))) AND ((GROUP_CONCAT(t0.c0)))))) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (NOT ((- (vt0.c0)))) INNER JOIN vt1 ON ((NULL) IS FALSE) GROUP BY vt0.c0, vt0.c1, vt1.c0, t0.c0 HAVING (((((-941080786)) NOT BETWEEN ((COUNT(*))) AND ((GROUP_CONCAT(t0.c0))))) ISNULL);
SELECT vt0.c0, vt0.c1, vt1.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (NOT ((- (vt0.c0)))) INNER JOIN vt1 ON ((NULL) IS FALSE) GROUP BY vt0.c0, vt0.c1, vt1.c0, t0.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (NOT ((- (vt0.c0)))) INNER JOIN vt1 ON ((NULL) IS FALSE) GROUP BY vt0.c0, vt0.c1, vt1.c0, t0.c0 HAVING (((-941080786)) NOT BETWEEN ((COUNT(*))) AND ((GROUP_CONCAT(t0.c0)))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (NOT ((- (vt0.c0)))) INNER JOIN vt1 ON ((NULL) IS FALSE) GROUP BY vt0.c0, vt0.c1, vt1.c0, t0.c0 HAVING (NOT ((((-941080786)) NOT BETWEEN ((COUNT(*))) AND ((GROUP_CONCAT(t0.c0)))))) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (NOT ((- (vt0.c0)))) INNER JOIN vt1 ON ((NULL) IS FALSE) GROUP BY vt0.c0, vt0.c1, vt1.c0, t0.c0 HAVING (((((-941080786)) NOT BETWEEN ((COUNT(*))) AND ((GROUP_CONCAT(t0.c0))))) ISNULL);
SELECT vt0.c0, vt0.c1, vt1.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (NOT ((- (vt0.c0)))) INNER JOIN vt1 ON ((NULL) IS FALSE) GROUP BY vt0.c0, vt0.c1, vt1.c0, t0.c0;
SELECT ALL t0.c0 FROM vt0, t0;
SELECT ALL t0.c0 FROM vt0, t0 WHERE (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END COLLATE BINARY) ORDER BY vt0.c1 ASC  NULLS FIRST, (',붱\r' IN ())  NULLS FIRST;
SELECT t0.c0 FROM vt0, t0 WHERE ((NOT (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END COLLATE BINARY))) ORDER BY vt0.c1 ASC  NULLS FIRST, (',붱\r' IN ())  NULLS FIRST;
SELECT ALL t0.c0 FROM vt0, t0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END COLLATE BINARY) ISNULL)) ORDER BY vt0.c1 ASC  NULLS FIRST, (',붱\r' IN ())  NULLS FIRST;
SELECT ALL t0.c0 FROM vt0, t0;
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE (CAST(((t2.c0) IS FALSE) AS NUMERIC)) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT (CAST(((t2.c0) IS FALSE) AS NUMERIC)))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE (((CAST(((t2.c0) IS FALSE) AS NUMERIC)) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT ALL vt0.c0, t2.c0, vt1.c0, vt0.c1 FROM vt1, t2, t0 RIGHT OUTER JOIN vt0 ON (((vt0.c1) ISNULL) IN ()) GROUP BY vt0.c0, t2.c0, vt1.c0, vt0.c1;
SELECT vt0.c0, t2.c0, vt1.c0, vt0.c1 FROM vt1, t2, t0 RIGHT OUTER JOIN vt0 ON (((vt0.c1) ISNULL) IN ()) WHERE (vt0.c0) GROUP BY vt0.c0, t2.c0, vt1.c0, vt0.c1 UNION SELECT ALL vt0.c0, t2.c0, vt1.c0, vt0.c1 FROM vt1, t2, t0 RIGHT OUTER JOIN vt0 ON (((vt0.c1) ISNULL) IN ()) WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0, t2.c0, vt1.c0, vt0.c1 UNION SELECT ALL vt0.c0, t2.c0, vt1.c0, vt0.c1 FROM vt1, t2, t0 RIGHT OUTER JOIN vt0 ON (((vt0.c1) ISNULL) IN ()) WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0, t2.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, t2.c0, vt1.c0, vt0.c1 FROM vt1, t2, t0 RIGHT OUTER JOIN vt0 ON (((vt0.c1) ISNULL) IN ()) GROUP BY vt0.c0, t2.c0, vt1.c0, vt0.c1;
SELECT t2.c0 FROM t2, vt1 GROUP BY t2.c0;
SELECT t2.c0 FROM t2, vt1 GROUP BY t2.c0 HAVING ((TOTAL(SUM(t2.c0))) ISNULL) COLLATE RTRIM UNION ALL SELECT ALL t2.c0 FROM t2, vt1 GROUP BY t2.c0 HAVING (NOT (((TOTAL(SUM(t2.c0))) ISNULL) COLLATE RTRIM)) UNION ALL SELECT ALL t2.c0 FROM t2, vt1 GROUP BY t2.c0 HAVING ((((TOTAL(SUM(t2.c0))) ISNULL) COLLATE RTRIM) ISNULL);
SELECT t2.c0 FROM t2;
SELECT t2.c0 FROM t2 WHERE ((((t2.c0, t2.c0, t2.c0)) NOT BETWEEN (((('')||(-1.998440036E9)), (('hours0U')GLOB(t2.c0)), ((x'') IS TRUE))) AND ((CASE WHEN t2.c0 THEN t2.c0 END, (~ (t2.c0)), UPPER(t2.c0))))) UNION ALL SELECT t2.c0 FROM t2 WHERE ((NOT ((((t2.c0, t2.c0, t2.c0)) NOT BETWEEN (((('')||(-1.998440036E9)), (('hours0U')GLOB(t2.c0)), ((x'') IS TRUE))) AND ((CASE WHEN t2.c0 THEN t2.c0 END, (~ (t2.c0)), UPPER(t2.c0))))))) UNION ALL SELECT t2.c0 FROM t2 WHERE ((((((t2.c0, t2.c0, t2.c0)) NOT BETWEEN (((('')||(-1.998440036E9)), (('hours0U')GLOB(t2.c0)), ((x'') IS TRUE))) AND ((CASE WHEN t2.c0 THEN t2.c0 END, (~ (t2.c0)), UPPER(t2.c0))))) ISNULL));
SELECT t2.c0 FROM t2;
SELECT DISTINCT * FROM vt0, vt1, t0, t2;
SELECT DISTINCT * FROM vt0, vt1, t0, t2 WHERE (json_array_length(vt0.c1)) UNION SELECT DISTINCT * FROM vt0, vt1, t0, t2 WHERE ((NOT (json_array_length(vt0.c1)))) UNION SELECT DISTINCT * FROM vt0, vt1, t0, t2 WHERE (((json_array_length(vt0.c1)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, t0, t2;
