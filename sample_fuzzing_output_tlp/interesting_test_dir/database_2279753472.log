-- Time: 2024/06/12 18:08:11
-- Database: database72
-- Database version: 3.40.0
-- seed value: 2279753472
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c4, c3) VALUES (NULL, '2103176738', 0Xffffffffa4d3c4dc); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA main.checkpoint_fullfsync; -- 0ms;
INSERT OR ABORT INTO rt0(c4, c3, c0) VALUES ('-682929342', x'', NULL), ('(uX)N)ﾟQ#M', 2103176738, NULL), (NULL, NULL, -6.82929342E8); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c0, c1, c4) VALUES (0.1737540444073511, 0.4869161314830701, NULL, '-682929342'); -- 0ms;
INSERT OR IGNORE INTO rt0(c3) VALUES ('-1529625380'); -- 1ms;
PRAGMA shrink_memory; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c3) VALUES (NULL, -1999899087), (NULL, NULL), ('0.1737540444073511', NULL); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c0, c3) VALUES (2103176738, x'', 'lDgO'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c2, c1) VALUES (x'', 592292106, 'LDGO'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2) VALUES (NULL); -- 0ms;
END; -- 0ms;
VACUUM main; -- 0ms;
INSERT OR REPLACE INTO rt0(c3, c4) VALUES (x'db264256', NULL), (0.5120612642998247, '!+.ScX|'), ('y!', NULL); -- 5ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
DELETE FROM rt0; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO rt0(c3, c1) VALUES (x'', NULL), (x'', x''), ('290297284', x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES ('1888182392'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c4, c0, c3) VALUES (x'', NULL, 1.888182392E9, ''); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c3, c2, c1) VALUES ('*/', '0.4869161314830701', NULL, '241368779'); -- 0ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c1, c4, c0, c3) VALUES (x'', x'd485', x'cbd2', x'', '0.5120612642998247'); -- 0ms;
INSERT OR IGNORE INTO rt0(c3) VALUES (''); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA cache_spill; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
VACUUM main; -- 0ms;
REINDEX; -- 0ms;
PRAGMA stats; -- 0ms;
UPDATE OR IGNORE rt0 SET c1='1888182392' WHERE ((((((rt0.c3)OR(rt0.c2)))OR(rt0.c1)))<=(((rt0.c4)GLOB(rt0.c2)))); -- 0ms;
COMMIT; -- 0ms;
REINDEX; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c1, c2, c4) VALUES ('1門Yy+k/', '', 0.4869161314830701, '-1401616757'), (x'', -1.999899087E9, 0xffffffffe8a47b30, x'44e7'), (x'bcb4df3b', 0.07226201268177557, NULL, 0.08944946739296711); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c3, c4, c2, c0) VALUES ('1543874840', 0.6783439924088053, -3.91873744E8, NULLIF(NULL, 0.04697437696789919) COLLATE RTRIM, -1529625380), ('1550563456', '', NULL, NULL, x''), (0Xffffffff95ec4a61, x'', 0.6511144741444239, x'427c', NULL); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (0.34732840727733016, NULL, 0.47436252623035213, -1.999899087E9, x''); -- 0ms;
CREATE VIEW v0(c0, c1, c2) AS SELECT DISTINCT LEAD(((((rt0.c3)OR(0.8090932848993605)))<=((((rt0.c3))>=((rt0.c4))))), (((rt0.c1)) BETWEEN ((LOWER(DISTINCT x''))) AND (((rt0.c4 IN ())))), ((((((((((((((rt0.c1) ISNULL))OR((rt0.c1 IN ()))))AND(((((rt0.c3)AND(rt0.c1)))AND(rt0.c4)))))OR((rt0.c2 IN ()))))AND(0.34732840727733016)))AND(rt0.c1 COLLATE RTRIM)))OR(((rt0.c1) IS TRUE)))) OVER (), (('P?')>>(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END)), ((((rt0.c0)>=(x'')))||(((NULL) NOTNULL))) FROM rt0; -- 1ms;
INSERT OR REPLACE INTO rt0(c0, c3, c4, c1) VALUES (NULL, NULL, '9b뙔qKIzA', NULL), ('%6', -1999899087, x'', '-2014792108'), ('592292106', '-682929342', x'', '<\r'); -- 1ms;
UPDATE OR ROLLBACK rt0 SET c2='0.5120612642998247', c1='', c1=0Xffffffff9ac7cd7d; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ('11330258') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ('11330258'))) UNION ALL SELECT ALL * FROM rt0 WHERE ((('11330258') ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT v0.c2, v0.c0, v0.c1, rt0.c1, rt0.c4 FROM rt0, v0;
SELECT DISTINCT v0.c2, v0.c0, v0.c1, rt0.c1, rt0.c4 FROM rt0, v0 WHERE ((((rt0.c0 IN (rt0.c2)))<(((((rt0.c4)AND(rt0.c2)))OR(v0.c0))))) UNION SELECT DISTINCT v0.c2, v0.c0, v0.c1, rt0.c1, rt0.c4 FROM rt0, v0 WHERE ((NOT ((((rt0.c0 IN (rt0.c2)))<(((((rt0.c4)AND(rt0.c2)))OR(v0.c0))))))) UNION SELECT DISTINCT v0.c2, v0.c0, v0.c1, rt0.c1, rt0.c4 FROM rt0, v0 WHERE ((((((rt0.c0 IN (rt0.c2)))<(((((rt0.c4)AND(rt0.c2)))OR(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c2, v0.c0, v0.c1, rt0.c1, rt0.c4 FROM rt0, v0;
SELECT rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c4;
SELECT rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 WHERE (((rt0.c2 COLLATE NOCASE)<=(NULL))) GROUP BY rt0.c2, v0.c0, rt0.c4 UNION SELECT rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 WHERE ((NOT (((rt0.c2 COLLATE NOCASE)<=(NULL))))) GROUP BY rt0.c2, v0.c0, rt0.c4 UNION SELECT rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 WHERE (((((rt0.c2 COLLATE NOCASE)<=(NULL))) ISNULL)) GROUP BY rt0.c2, v0.c0, rt0.c4;
SELECT rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c4;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING ((GROUP_CONCAT(MAX(MAX(TOTAL(v0.c2)))))AND(AVG(v0.c1))) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (NOT (((GROUP_CONCAT(MAX(MAX(TOTAL(v0.c2)))))AND(AVG(v0.c1))))) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING ((((GROUP_CONCAT(MAX(MAX(TOTAL(v0.c2)))))AND(AVG(v0.c1)))) ISNULL);
SELECT v0.c0, v0.c1 FROM v0;
SELECT v0.c0, v0.c1 FROM v0 WHERE (CAST((v0.c1 IN (v0.c0, v0.c1)) AS INTEGER)) UNION ALL SELECT ALL v0.c0, v0.c1 FROM v0 WHERE ((NOT (CAST((v0.c1 IN (v0.c0, v0.c1)) AS INTEGER)))) UNION ALL SELECT ALL v0.c0, v0.c1 FROM v0 WHERE (((CAST((v0.c1 IN (v0.c0, v0.c1)) AS INTEGER)) ISNULL));
SELECT v0.c0, v0.c1 FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (rt0.c1 COLLATE BINARY) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (rt0.c1 COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((rt0.c1 COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE (((((rt0.c0)<<(rt0.c3))) IS TRUE)) GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c0 UNION SELECT rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0)<<(rt0.c3))) IS TRUE)))) GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE (((((((rt0.c0)<<(rt0.c3))) IS TRUE)) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4, rt0.c0;
SELECT ALL rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3 HAVING UPPER(x'') UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT (UPPER(x''))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3 HAVING ((UPPER(x'')) ISNULL);
SELECT ALL rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3 HAVING UPPER(x'') UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT (UPPER(x''))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3 HAVING ((UPPER(x'')) ISNULL);
SELECT ALL rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (((((((rt0.c1)AND(rt0.c4)))AND(rt0.c0)))/(rt0.c4 COLLATE BINARY))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (((((((rt0.c1)AND(rt0.c4)))AND(rt0.c0)))/(rt0.c4 COLLATE BINARY))))) UNION ALL SELECT * FROM v0, rt0 WHERE (((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c0)))/(rt0.c4 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT v0.c0, rt0.c0, rt0.c3, v0.c1, rt0.c4, rt0.c2, rt0.c1, v0.c2 FROM v0, rt0;
SELECT DISTINCT v0.c0, rt0.c0, rt0.c3, v0.c1, rt0.c4, rt0.c2, rt0.c1, v0.c2 FROM v0, rt0 WHERE ('') UNION SELECT DISTINCT v0.c0, rt0.c0, rt0.c3, v0.c1, rt0.c4, rt0.c2, rt0.c1, v0.c2 FROM v0, rt0 WHERE ((NOT (''))) UNION SELECT DISTINCT v0.c0, rt0.c0, rt0.c3, v0.c1, rt0.c4, rt0.c2, rt0.c1, v0.c2 FROM v0, rt0 WHERE ((('') ISNULL));
SELECT DISTINCT v0.c0, rt0.c0, rt0.c3, v0.c1, rt0.c4, rt0.c2, rt0.c1, v0.c2 FROM v0, rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3;
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3 UNION SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3 UNION SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING COUNT(*) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING COUNT(*) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((((((((((((v0.c0)OR(((v0.c2)/(v0.c0)))))AND(v0.c2 COLLATE NOCASE)))OR(((v0.c2) NOT NULL))))OR(((v0.c1)|(v0.c1)))))AND(CAST(v0.c0 AS BLOB))))AND((((v0.c1, v0.c1, v0.c2))==((v0.c2, v0.c1, v0.c2)))))) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((NOT (((((((((((((v0.c0)OR(((v0.c2)/(v0.c0)))))AND(v0.c2 COLLATE NOCASE)))OR(((v0.c2) NOT NULL))))OR(((v0.c1)|(v0.c1)))))AND(CAST(v0.c0 AS BLOB))))AND((((v0.c1, v0.c1, v0.c2))==((v0.c2, v0.c1, v0.c2)))))))) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((((((((((((((v0.c0)OR(((v0.c2)/(v0.c0)))))AND(v0.c2 COLLATE NOCASE)))OR(((v0.c2) NOT NULL))))OR(((v0.c1)|(v0.c1)))))AND(CAST(v0.c0 AS BLOB))))AND((((v0.c1, v0.c1, v0.c2))==((v0.c2, v0.c1, v0.c2)))))) ISNULL));
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0;
SELECT DISTINCT v0.c0, v0.c1 FROM v0;
SELECT DISTINCT v0.c0, v0.c1 FROM v0 WHERE ((((v0.c0)) BETWEEN ((IFNULL(DISTINCT v0.c1, v0.c1))) AND ((v0.c0 COLLATE BINARY)))) UNION SELECT DISTINCT v0.c0, v0.c1 FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((IFNULL(DISTINCT v0.c1, v0.c1))) AND ((v0.c0 COLLATE BINARY)))))) UNION SELECT DISTINCT v0.c0, v0.c1 FROM v0 WHERE ((((((v0.c0)) BETWEEN ((IFNULL(DISTINCT v0.c1, v0.c1))) AND ((v0.c0 COLLATE BINARY)))) ISNULL));
SELECT DISTINCT v0.c0, v0.c1 FROM v0;
SELECT rt0.c3, rt0.c4, rt0.c2, v0.c1, v0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2, v0.c1, v0.c2, rt0.c0, v0.c0, rt0.c1;
SELECT rt0.c3, rt0.c4, rt0.c2, v0.c1, v0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((v0.c2 COLLATE RTRIM IN ())) GROUP BY rt0.c3, rt0.c4, rt0.c2, v0.c1, v0.c2, rt0.c0, v0.c0, rt0.c1 UNION SELECT rt0.c3, rt0.c4, rt0.c2, v0.c1, v0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT ((v0.c2 COLLATE RTRIM IN ())))) GROUP BY rt0.c3, rt0.c4, rt0.c2, v0.c1, v0.c2, rt0.c0, v0.c0, rt0.c1 UNION SELECT rt0.c3, rt0.c4, rt0.c2, v0.c1, v0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((((v0.c2 COLLATE RTRIM IN ())) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c2, v0.c1, v0.c2, rt0.c0, v0.c0, rt0.c1;
SELECT rt0.c3, rt0.c4, rt0.c2, v0.c1, v0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2, v0.c1, v0.c2, rt0.c0, v0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, v0.c1, v0.c0, v0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, rt0.c2, v0.c1, v0.c0, v0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, v0.c1, v0.c0, v0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, rt0.c2, v0.c1, v0.c0, v0.c2, rt0.c0, rt0.c1 HAVING ((CAST(GROUP_CONCAT(v0.c2) AS REAL)) BETWEEN (((((((((v0.c2)OR(v0.c1)))AND(MIN(rt0.c4))))OR(AVG(SUM(0X7fd86cc4)))))AND(rt0.c4))) AND (UNLIKELY(AVG(rt0.c2)))) UNION ALL SELECT ALL rt0.c3, rt0.c2, v0.c1, v0.c0, v0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, rt0.c2, v0.c1, v0.c0, v0.c2, rt0.c0, rt0.c1 HAVING (NOT (((CAST(GROUP_CONCAT(v0.c2) AS REAL)) BETWEEN (((((((((v0.c2)OR(v0.c1)))AND(MIN(rt0.c4))))OR(AVG(SUM(0x7fd86cc4)))))AND(rt0.c4))) AND (UNLIKELY(AVG(rt0.c2)))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, v0.c1, v0.c0, v0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, rt0.c2, v0.c1, v0.c0, v0.c2, rt0.c0, rt0.c1 HAVING ((((CAST(GROUP_CONCAT(v0.c2) AS REAL)) BETWEEN (((((((((v0.c2)OR(v0.c1)))AND(MIN(rt0.c4))))OR(AVG(SUM(0x7fd86cc4)))))AND(rt0.c4))) AND (UNLIKELY(AVG(rt0.c2))))) ISNULL);
SELECT rt0.c0, rt0.c4 FROM rt0;
SELECT rt0.c0, rt0.c4 FROM rt0 WHERE (rt0.c0) UNION ALL SELECT rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c4 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT rt0.c0, rt0.c4 FROM rt0;
SELECT DISTINCT * FROM rt0, v0 NOT INDEXED;
SELECT DISTINCT * FROM rt0, v0 WHERE (((x'6ba9') BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c4)>(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((x'6ba9') BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c4)>(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((x'6ba9') BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c4)>(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0 NOT INDEXED;
SELECT rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 WHERE (((v0.c0)+(rt0.c3)) COLLATE BINARY) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT (((v0.c0)+(rt0.c3)) COLLATE BINARY))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0, v0 WHERE (((((v0.c0)+(rt0.c3)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 HAVING TOTAL((~ (rt0.c3))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 HAVING (NOT (TOTAL((~ (rt0.c3))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 HAVING ((TOTAL((~ (rt0.c3)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 HAVING TOTAL((~ (rt0.c3))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 HAVING (NOT (TOTAL((~ (rt0.c3))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 HAVING ((TOTAL((~ (rt0.c3)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2;
SELECT SUM(LENGTH(((rt0.c1)IS NOT(x'')))) FROM rt0 ORDER BY ((rt0.c1 IN (rt0.c0)) IN (rt0.c2));
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (rt0.c1) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM v0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT rt0.c2, v0.c2, rt0.c4 FROM rt0, v0;
SELECT DISTINCT rt0.c2, v0.c2, rt0.c4 FROM rt0, v0 WHERE (load_extension(LOWER(DISTINCT rt0.c0), ((((rt0.c4)AND(v0.c0)))OR(v0.c0)))) UNION SELECT DISTINCT rt0.c2, v0.c2, rt0.c4 FROM rt0, v0 WHERE ((NOT (load_extension(LOWER(DISTINCT rt0.c0), ((((rt0.c4)AND(v0.c0)))OR(v0.c0)))))) UNION SELECT DISTINCT rt0.c2, v0.c2, rt0.c4 FROM rt0, v0 WHERE (((load_extension(LOWER(DISTINCT rt0.c0), ((((rt0.c4)AND(v0.c0)))OR(v0.c0)))) ISNULL));
SELECT ALL v0.c1, rt0.c0, rt0.c1 FROM rt0 INNER JOIN v0 ON ((((rt0.c4)<>(rt0.c4))) NOTNULL) GROUP BY v0.c1, rt0.c0, rt0.c1;
SELECT v0.c1, rt0.c0, rt0.c1 FROM rt0 INNER JOIN v0 ON ((((rt0.c4)!=(rt0.c4))) NOTNULL) WHERE (CASE WHEN CAST(rt0.c1 AS BLOB) THEN ABS(rt0.c0) END) GROUP BY v0.c1, rt0.c0, rt0.c1 UNION SELECT ALL v0.c1, rt0.c0, rt0.c1 FROM rt0 INNER JOIN v0 ON ((((rt0.c4)<>(rt0.c4))) NOTNULL) WHERE ((NOT (CASE WHEN CAST(rt0.c1 AS BLOB) THEN ABS(rt0.c0) END))) GROUP BY v0.c1, rt0.c0, rt0.c1 UNION SELECT ALL v0.c1, rt0.c0, rt0.c1 FROM rt0 INNER JOIN v0 ON ((((rt0.c4)<>(rt0.c4))) NOTNULL) WHERE (((CASE WHEN CAST(rt0.c1 AS BLOB) THEN ABS(rt0.c0) END) ISNULL)) GROUP BY v0.c1, rt0.c0, rt0.c1;
SELECT ALL v0.c1, rt0.c0, rt0.c1 FROM rt0 INNER JOIN v0 ON ((((rt0.c4)<>(rt0.c4))) NOTNULL) GROUP BY v0.c1, rt0.c0, rt0.c1;
SELECT v0.c2, rt0.c3, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c2, rt0.c3, v0.c0, rt0.c0;
SELECT v0.c2, rt0.c3, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c2, rt0.c3, v0.c0, rt0.c0 HAVING (((((((COUNT(*))AND(MIN(v0.c2))))AND(v0.c0))))<=((SUM(MIN(rt0.c0))))) UNION ALL SELECT v0.c2, rt0.c3, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c2, rt0.c3, v0.c0, rt0.c0 HAVING (NOT ((((((((COUNT(*))AND(MIN(v0.c2))))AND(v0.c0))))<=((SUM(MIN(rt0.c0))))))) UNION ALL SELECT ALL v0.c2, rt0.c3, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c2, rt0.c3, v0.c0, rt0.c0 HAVING (((((((((COUNT(*))AND(MIN(v0.c2))))AND(v0.c0))))<=((SUM(MIN(rt0.c0)))))) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((((rt0.c2)AND(rt0.c3)))OR(-1999899087)))AND(rt0.c4)))OR(rt0.c0)))+((((rt0.c1, rt0.c4, rt0.c2)) NOT BETWEEN ((0Xffffffff828208f7, rt0.c0, rt0.c2)) AND ((rt0.c4, rt0.c0, rt0.c4)))))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((((((((rt0.c2)AND(rt0.c3)))OR(-1999899087)))AND(rt0.c4)))OR(rt0.c0)))+((((rt0.c1, rt0.c4, rt0.c2)) NOT BETWEEN ((0xffffffff828208f7, rt0.c0, rt0.c2)) AND ((rt0.c4, rt0.c0, rt0.c4)))))))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((((((rt0.c2)AND(rt0.c3)))OR(-1999899087)))AND(rt0.c4)))OR(rt0.c0)))+((((rt0.c1, rt0.c4, rt0.c2)) NOT BETWEEN ((0Xffffffff828208f7, rt0.c0, rt0.c2)) AND ((rt0.c4, rt0.c0, rt0.c4)))))) ISNULL));
SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 WHERE ((((((((((rt0.c3)AND('-764295140')))OR(rt0.c4)))OR(rt0.c1)))OR(rt0.c1)) IN ())) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT ((((((((((rt0.c3)AND('-764295140')))OR(rt0.c4)))OR(rt0.c1)))OR(rt0.c1)) IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 WHERE ((((((((((((rt0.c3)AND('-764295140')))OR(rt0.c4)))OR(rt0.c1)))OR(rt0.c1)) IN ())) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, v0.c2, rt0.c0, rt0.c3, rt0.c4, v0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c2, rt0.c0, rt0.c3, rt0.c4, v0.c1, v0.c0;
SELECT ALL rt0.c1, rt0.c2, v0.c2, rt0.c0, rt0.c3, rt0.c4, v0.c1, v0.c0 FROM rt0, v0 WHERE ((((((rt0.c3)) NOT BETWEEN ((NULL)) AND ((-1698181763)))) BETWEEN (CAST(rt0.c4 AS REAL)) AND ((~ (rt0.c3))))) GROUP BY rt0.c1, rt0.c2, v0.c2, rt0.c0, rt0.c3, rt0.c4, v0.c1, v0.c0 UNION SELECT ALL rt0.c1, rt0.c2, v0.c2, rt0.c0, rt0.c3, rt0.c4, v0.c1, v0.c0 FROM rt0, v0 WHERE ((NOT ((((((rt0.c3)) NOT BETWEEN ((NULL)) AND ((-1698181763)))) BETWEEN (CAST(rt0.c4 AS REAL)) AND ((~ (rt0.c3))))))) GROUP BY rt0.c1, rt0.c2, v0.c2, rt0.c0, rt0.c3, rt0.c4, v0.c1, v0.c0 UNION SELECT rt0.c1, rt0.c2, v0.c2, rt0.c0, rt0.c3, rt0.c4, v0.c1, v0.c0 FROM rt0, v0 WHERE ((((((((rt0.c3)) NOT BETWEEN ((NULL)) AND ((-1698181763)))) BETWEEN (CAST(rt0.c4 AS REAL)) AND ((~ (rt0.c3))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, v0.c2, rt0.c0, rt0.c3, rt0.c4, v0.c1, v0.c0;
SELECT ALL rt0.c1, rt0.c2, v0.c2, rt0.c0, rt0.c3, rt0.c4, v0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c2, rt0.c0, rt0.c3, rt0.c4, v0.c1, v0.c0;
SELECT rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4;
SELECT rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING AVG(GROUP_CONCAT('-933158119')) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING (NOT (AVG(GROUP_CONCAT('-933158119')))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING ((AVG(GROUP_CONCAT('-933158119'))) ISNULL);
SELECT v0.c1, v0.c0, rt0.c0, v0.c2 FROM rt0, v0;
SELECT ALL v0.c1, v0.c0, rt0.c0, v0.c2 FROM rt0, v0 WHERE (CAST(((((v0.c0)AND(rt0.c3)))AND(x'')) AS NUMERIC)) UNION ALL SELECT v0.c1, v0.c0, rt0.c0, v0.c2 FROM rt0, v0 WHERE ((NOT (CAST(((((v0.c0)AND(rt0.c3)))AND(x'')) AS NUMERIC)))) UNION ALL SELECT ALL v0.c1, v0.c0, rt0.c0, v0.c2 FROM rt0, v0 WHERE (((CAST(((((v0.c0)AND(rt0.c3)))AND(x'')) AS NUMERIC)) ISNULL));
SELECT v0.c1, v0.c0, rt0.c0, v0.c2 FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((((v0.c2)OR(v0.c0)))AND(v0.c0))) BETWEEN (((v0.c2)*(v0.c1))) AND (((v0.c0)|(x''))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((v0.c2)OR(v0.c0)))AND(v0.c0))) BETWEEN (((v0.c2)*(v0.c1))) AND (((v0.c0)|(x''))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((((v0.c2)OR(v0.c0)))AND(v0.c0))) BETWEEN (((v0.c2)*(v0.c1))) AND (((v0.c0)|(x''))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0 WHERE ((((((v0.c0))<((v0.c1)))) NOT BETWEEN (COALESCE(v0.c0, v0.c0)) AND (((v0.c0)IS(v0.c0))))) GROUP BY v0.c1, v0.c2 UNION SELECT ALL v0.c1, v0.c2 FROM v0 WHERE ((NOT ((((((v0.c0))<((v0.c1)))) NOT BETWEEN (COALESCE(v0.c0, v0.c0)) AND (((v0.c0)IS(v0.c0))))))) GROUP BY v0.c1, v0.c2 UNION SELECT v0.c1, v0.c2 FROM v0 WHERE ((((((((v0.c0))<((v0.c1)))) NOT BETWEEN (COALESCE(v0.c0, v0.c0)) AND (((v0.c0)IS(v0.c0))))) ISNULL)) GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2 HAVING COUNT(((((rt0.c0)OR(rt0.c2)))AND(MAX(SUM(MIN(TOTAL(SUM(MIN(rt0.c1))))))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2 HAVING (NOT (COUNT(((((rt0.c0)OR(rt0.c2)))AND(MAX(SUM(MIN(TOTAL(SUM(MIN(rt0.c1))))))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2 HAVING ((COUNT(((((rt0.c0)OR(rt0.c2)))AND(MAX(SUM(MIN(TOTAL(SUM(MIN(rt0.c1)))))))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE WHEN (~ (rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)) ELSE (((rt0.c1, rt0.c4, 0.45997316691417656, rt0.c0, NULL)) NOT BETWEEN ((rt0.c2, rt0.c0, '', rt0.c4, 0.47580668229171486)) AND ((rt0.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c4))) END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE WHEN (~ (rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)) ELSE (((rt0.c1, rt0.c4, 0.45997316691417656, rt0.c0, NULL)) NOT BETWEEN ((rt0.c2, rt0.c0, '', rt0.c4, 0.47580668229171486)) AND ((rt0.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c4))) END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE WHEN (~ (rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)) ELSE (((rt0.c1, rt0.c4, 0.45997316691417656, rt0.c0, NULL)) NOT BETWEEN ((rt0.c2, rt0.c0, '', rt0.c4, 0.47580668229171486)) AND ((rt0.c2, rt0.c4, rt0.c2, rt0.c1, rt0.c4))) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c4, v0.c1, rt0.c1, v0.c2, v0.c0, rt0.c3, rt0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c4, v0.c1, rt0.c1, v0.c2, v0.c0, rt0.c3, rt0.c0 FROM v0, rt0 WHERE (((v0.c2)||((((v0.c0, rt0.c3, v0.c2)) BETWEEN ((v0.c0, rt0.c4, NULL)) AND (('-682929342', rt0.c1, rt0.c4)))))) UNION SELECT DISTINCT rt0.c4, v0.c1, rt0.c1, v0.c2, v0.c0, rt0.c3, rt0.c0 FROM v0, rt0 WHERE ((NOT (((v0.c2)||((((v0.c0, rt0.c3, v0.c2)) BETWEEN ((v0.c0, rt0.c4, NULL)) AND (('-682929342', rt0.c1, rt0.c4)))))))) UNION SELECT DISTINCT rt0.c4, v0.c1, rt0.c1, v0.c2, v0.c0, rt0.c3, rt0.c0 FROM v0, rt0 WHERE (((((v0.c2)||((((v0.c0, rt0.c3, v0.c2)) BETWEEN ((v0.c0, rt0.c4, NULL)) AND (('-682929342', rt0.c1, rt0.c4)))))) ISNULL));
SELECT DISTINCT rt0.c4, v0.c1, rt0.c1, v0.c2, v0.c0, rt0.c3, rt0.c0 FROM v0, rt0;
SELECT v0.c2, rt0.c4, v0.c1, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c2, rt0.c4, v0.c1, rt0.c0, rt0.c1, rt0.c2, v0.c0;
SELECT v0.c2, rt0.c4, v0.c1, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM v0 NATURAL JOIN rt0 WHERE ((((((rt0.c0))<=((rt0.c1))))%(CAST(rt0.c0 AS REAL)))) GROUP BY v0.c2, rt0.c4, v0.c1, rt0.c0, rt0.c1, rt0.c2, v0.c0 UNION SELECT v0.c2, rt0.c4, v0.c1, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM v0 NATURAL JOIN rt0 WHERE ((NOT ((((((rt0.c0))<=((rt0.c1))))%(CAST(rt0.c0 AS REAL)))))) GROUP BY v0.c2, rt0.c4, v0.c1, rt0.c0, rt0.c1, rt0.c2, v0.c0 UNION SELECT v0.c2, rt0.c4, v0.c1, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM v0 NATURAL JOIN rt0 WHERE ((((((((rt0.c0))<=((rt0.c1))))%(CAST(rt0.c0 AS REAL)))) ISNULL)) GROUP BY v0.c2, rt0.c4, v0.c1, rt0.c0, rt0.c1, rt0.c2, v0.c0;
SELECT v0.c2, rt0.c4, v0.c1, rt0.c0, rt0.c1, rt0.c2, v0.c0 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c2, rt0.c4, v0.c1, rt0.c0, rt0.c1, rt0.c2, v0.c0;
SELECT rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2 HAVING SUM(TYPEOF(DISTINCT MIN(TOTAL(rt0.c4)))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2 HAVING (NOT (SUM(TYPEOF(DISTINCT MIN(TOTAL(rt0.c4)))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2 HAVING ((SUM(TYPEOF(DISTINCT MIN(TOTAL(rt0.c4))))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, v0.c2, rt0.c4, v0.c0 FROM v0, rt0;
SELECT rt0.c2, rt0.c1, v0.c2, rt0.c4, v0.c0 FROM v0, rt0 WHERE ((- (rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c2, rt0.c4, v0.c0 FROM v0, rt0 WHERE ((NOT ((- (rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c1, v0.c2, rt0.c4, v0.c0 FROM v0, rt0 WHERE ((((- (rt0.c2))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, v0.c2, rt0.c4, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE (x'') UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 WHERE ((((rt0.c2, rt0.c2, rt0.c3)) NOT BETWEEN ((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c0)), ((NULL) IS TRUE), (((rt0.c3))>=((rt0.c0))))) AND ((((rt0.c2)>>(rt0.c1)), ((rt0.c2)IS(rt0.c1)), x'')))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c2, rt0.c3)) NOT BETWEEN ((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c0)), ((NULL) IS TRUE), (((rt0.c3))>=((rt0.c0))))) AND ((((rt0.c2)>>(rt0.c1)), ((rt0.c2)IS(rt0.c1)), x'')))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE ((((((rt0.c2, rt0.c2, rt0.c3)) NOT BETWEEN ((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c0)), ((NULL) IS TRUE), (((rt0.c3))>=((rt0.c0))))) AND ((((rt0.c2)>>(rt0.c1)), ((rt0.c2)IS(rt0.c1)), x'')))) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING ((((COUNT(*)))>((MIN(TOTAL(GROUP_CONCAT(x'a435')))))) IN (MIN(GROUP_CONCAT(v0.c2)), (('') NOT BETWEEN (v0.c0) AND (v0.c2)))) UNION ALL SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING (NOT (((((COUNT(*)))>((MIN(TOTAL(GROUP_CONCAT(x'a435')))))) IN (MIN(GROUP_CONCAT(v0.c2)), (('') NOT BETWEEN (v0.c0) AND (v0.c2)))))) UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING ((((((COUNT(*)))>((MIN(TOTAL(GROUP_CONCAT(x'a435')))))) IN (MIN(GROUP_CONCAT(v0.c2)), (('') NOT BETWEEN (v0.c0) AND (v0.c2))))) ISNULL);
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE (((((rt0.c0)>>(NULL)))>((rt0.c0 IN ())))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0)>>(NULL)))>((rt0.c0 IN ())))))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE (((((((rt0.c0)>>(NULL)))>((rt0.c0 IN ())))) ISNULL));
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c2 COLLATE NOCASE)<(v0.c2))) UNION SELECT DISTINCT * FROM v0 NOT INDEXED WHERE ((NOT (((v0.c2 COLLATE NOCASE)<(v0.c2))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c2 COLLATE NOCASE)<(v0.c2))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 WHERE (0.7168089057909065) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 WHERE ((NOT (0.7168089057909065))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE (((0.7168089057909065) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING json(((((((((COUNT(v0.c1))OR(v0.c0)))OR(v0.c1)))OR(v0.c2)))OR(v0.c0))) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (NOT (json(((((((((COUNT(v0.c1))OR(v0.c0)))OR(v0.c1)))OR(v0.c2)))OR(v0.c0))))) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING ((json(((((((((COUNT(v0.c1))OR(v0.c0)))OR(v0.c1)))OR(v0.c2)))OR(v0.c0)))) ISNULL);
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING json(((((((((COUNT(v0.c1))OR(v0.c0)))OR(v0.c1)))OR(v0.c2)))OR(v0.c0))) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (NOT (json(((((((((COUNT(v0.c1))OR(v0.c0)))OR(v0.c1)))OR(v0.c2)))OR(v0.c0))))) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING ((json(((((((((COUNT(v0.c1))OR(v0.c0)))OR(v0.c1)))OR(v0.c2)))OR(v0.c0)))) ISNULL);
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 END THEN CAST(rt0.c3 AS NUMERIC) WHEN ((rt0.c0)!=(rt0.c0)) THEN (rt0.c3 IN ()) WHEN ((rt0.c0) IS TRUE) THEN CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 ELSE 0.16431169023782166 END ELSE CAST(rt0.c1 AS REAL) END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 END THEN CAST(rt0.c3 AS NUMERIC) WHEN ((rt0.c0)<>(rt0.c0)) THEN (rt0.c3 IN ()) WHEN ((rt0.c0) IS TRUE) THEN CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 ELSE 0.16431169023782166 END ELSE CAST(rt0.c1 AS REAL) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 END THEN CAST(rt0.c3 AS NUMERIC) WHEN ((rt0.c0)!=(rt0.c0)) THEN (rt0.c3 IN ()) WHEN ((rt0.c0) IS TRUE) THEN CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 ELSE 0.16431169023782166 END ELSE CAST(rt0.c1 AS REAL) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c4 FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3))) BETWEEN (((rt0.c1)==(rt0.c1))) AND ('_]lwv'))) UNION SELECT DISTINCT rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3))) BETWEEN (((rt0.c1)==(rt0.c1))) AND ('_]lwv'))))) UNION SELECT DISTINCT rt0.c1, rt0.c4 FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3))) BETWEEN (((rt0.c1)=(rt0.c1))) AND ('_]lwv'))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c4 FROM rt0;
SELECT ALL v0.c1, rt0.c2, rt0.c3, v0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY v0.c1, rt0.c2, rt0.c3, v0.c2, rt0.c0, rt0.c4, rt0.c1;
SELECT ALL v0.c1, rt0.c2, rt0.c3, v0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0, v0 WHERE (((((rt0.c2) IS TRUE)) IS TRUE)) GROUP BY v0.c1, rt0.c2, rt0.c3, v0.c2, rt0.c0, rt0.c4, rt0.c1 UNION SELECT ALL v0.c1, rt0.c2, rt0.c3, v0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0, v0 WHERE ((NOT (((((rt0.c2) IS TRUE)) IS TRUE)))) GROUP BY v0.c1, rt0.c2, rt0.c3, v0.c2, rt0.c0, rt0.c4, rt0.c1 UNION SELECT v0.c1, rt0.c2, rt0.c3, v0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0, v0 WHERE (((((((rt0.c2) IS TRUE)) IS TRUE)) ISNULL)) GROUP BY v0.c1, rt0.c2, rt0.c3, v0.c2, rt0.c0, rt0.c4, rt0.c1;
SELECT ALL v0.c1, rt0.c2, rt0.c3, v0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY v0.c1, rt0.c2, rt0.c3, v0.c2, rt0.c0, rt0.c4, rt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING 0.5964407854307852 UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (0.5964407854307852)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((0.5964407854307852) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING 0.5964407854307852 UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (0.5964407854307852)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((0.5964407854307852) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL v0.c1, rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON ((TRIM(DISTINCT v0.c2, rt0.c4)) BETWEEN (((NULL)|(rt0.c1))) AND (((v0.c2)<>(v0.c0))));
SELECT v0.c1, rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON ((TRIM(DISTINCT v0.c2, rt0.c4)) BETWEEN (((NULL)|(rt0.c1))) AND (((v0.c2)!=(v0.c0)))) WHERE (CASE WHEN rt0.c4 COLLATE NOCASE THEN ((rt0.c1)<(v0.c2)) WHEN (v0.c0 IN ()) THEN (rt0.c2 IN ()) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (x'')) THEN json_insert(v0.c1, rt0.c0, rt0.c3) WHEN CASE WHEN x'' THEN rt0.c1 END THEN ((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN CASE WHEN rt0.c4 THEN v0.c2 ELSE rt0.c0 END THEN '-910716919' ELSE ((v0.c2) BETWEEN (x'') AND (v0.c2)) END) UNION ALL SELECT v0.c1, rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON ((TRIM(DISTINCT v0.c2, rt0.c4)) BETWEEN (((NULL)|(rt0.c1))) AND (((v0.c2)<>(v0.c0)))) WHERE ((NOT (CASE WHEN rt0.c4 COLLATE NOCASE THEN ((rt0.c1)<(v0.c2)) WHEN (v0.c0 IN ()) THEN (rt0.c2 IN ()) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (x'')) THEN json_insert(v0.c1, rt0.c0, rt0.c3) WHEN CASE WHEN x'' THEN rt0.c1 END THEN ((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN CASE WHEN rt0.c4 THEN v0.c2 ELSE rt0.c0 END THEN '-910716919' ELSE ((v0.c2) BETWEEN (x'') AND (v0.c2)) END))) UNION ALL SELECT v0.c1, rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON ((TRIM(DISTINCT v0.c2, rt0.c4)) BETWEEN (((NULL)|(rt0.c1))) AND (((v0.c2)<>(v0.c0)))) WHERE (((CASE WHEN rt0.c4 COLLATE NOCASE THEN ((rt0.c1)<(v0.c2)) WHEN (v0.c0 IN ()) THEN (rt0.c2 IN ()) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (x'')) THEN json_insert(v0.c1, rt0.c0, rt0.c3) WHEN CASE WHEN x'' THEN rt0.c1 END THEN ((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN CASE WHEN rt0.c4 THEN v0.c2 ELSE rt0.c0 END THEN '-910716919' ELSE ((v0.c2) BETWEEN (x'') AND (v0.c2)) END) ISNULL));
SELECT ALL v0.c1, rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON ((TRIM(DISTINCT v0.c2, rt0.c4)) BETWEEN (((NULL)|(rt0.c1))) AND (((v0.c2)<>(v0.c0))));
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE (json_insert(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c3)), ((rt0.c3) NOT NULL), ((x'a0b4')IS NOT(rt0.c0)))) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (json_insert(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c3)), ((rt0.c3) NOT NULL), ((x'a0b4')IS NOT(rt0.c0)))))) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE (((json_insert(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c3)), ((rt0.c3) NOT NULL), ((x'a0b4')IS NOT(rt0.c0)))) ISNULL));
SELECT v0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c1, v0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c1, v0.c1;
SELECT v0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c1, v0.c1 FROM rt0, v0 WHERE ('1725388531') GROUP BY v0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c1, v0.c1 UNION SELECT ALL v0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c1, v0.c1 FROM rt0, v0 WHERE ((NOT ('1725388531'))) GROUP BY v0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c1, v0.c1 UNION SELECT ALL v0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c1, v0.c1 FROM rt0, v0 WHERE ((('1725388531') ISNULL)) GROUP BY v0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c1, v0.c1;
SELECT v0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c1, v0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c1, v0.c1;
SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0 HAVING TOTAL(((rt0.c4)=(rt0.c1))) UNION ALL SELECT rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0 HAVING (NOT (TOTAL(((rt0.c4)==(rt0.c1))))) UNION ALL SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0 HAVING ((TOTAL(((rt0.c4)=(rt0.c1)))) ISNULL);
SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0 HAVING TOTAL(((rt0.c4)=(rt0.c1))) UNION ALL SELECT rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0 HAVING (NOT (TOTAL(((rt0.c4)==(rt0.c1))))) UNION ALL SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0 HAVING ((TOTAL(((rt0.c4)=(rt0.c1)))) ISNULL);
SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c2)&(v0.c1))) NOT BETWEEN ('1686956066') AND (CASE v0.c0  WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN '-1816205469' END))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c2)&(v0.c1))) NOT BETWEEN ('1686956066') AND (CASE v0.c0  WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN '-1816205469' END))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c2)&(v0.c1))) NOT BETWEEN ('1686956066') AND (CASE v0.c0  WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN '-1816205469' END))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c3)))AND(STRFTIME(rt0.c2, rt0.c0, rt0.c3))))OR(rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c3)))AND(STRFTIME(rt0.c2, rt0.c0, rt0.c3))))OR(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c3)))AND(STRFTIME(rt0.c2, rt0.c0, rt0.c3))))OR(rt0.c1))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c1, rt0.c3, v0.c0, v0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c1, rt0.c3, v0.c0, v0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c1, rt0.c3, v0.c0, v0.c2 FROM rt0, v0 WHERE ((((v0.c2 IN ())) NOT BETWEEN (((rt0.c4)*(rt0.c1))) AND (v0.c1))) GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c1, rt0.c3, v0.c0, v0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c1, rt0.c3, v0.c0, v0.c2 FROM rt0, v0 WHERE ((NOT ((((v0.c2 IN ())) NOT BETWEEN (((rt0.c4)*(rt0.c1))) AND (v0.c1))))) GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c1, rt0.c3, v0.c0, v0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c1, rt0.c3, v0.c0, v0.c2 FROM rt0, v0 WHERE ((((((v0.c2 IN ())) NOT BETWEEN (((rt0.c4)*(rt0.c1))) AND (v0.c1))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c1, rt0.c3, v0.c0, v0.c2;
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c1, rt0.c3, v0.c0, v0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c1, rt0.c3, v0.c0, v0.c2;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(AVG(rt0.c4)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(AVG(rt0.c4)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(AVG(rt0.c4))) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c1, v0.c0, v0.c2, rt0.c4, v0.c1 FROM rt0 CROSS JOIN v0 ON ((('-391873744'))>((CAST(v0.c2 AS NUMERIC))));
SELECT rt0.c2, rt0.c3, rt0.c1, v0.c0, v0.c2, rt0.c4, v0.c1 FROM rt0 CROSS JOIN v0 ON ((('-391873744'))>((CAST(v0.c2 AS NUMERIC)))) WHERE ((- (((v0.c2) BETWEEN (v0.c1) AND (rt0.c4))))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, v0.c0, v0.c2, rt0.c4, v0.c1 FROM rt0 CROSS JOIN v0 ON ((('-391873744'))>((CAST(v0.c2 AS NUMERIC)))) WHERE ((NOT ((- (((v0.c2) BETWEEN (v0.c1) AND (rt0.c4))))))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, v0.c0, v0.c2, rt0.c4, v0.c1 FROM rt0 CROSS JOIN v0 ON ((('-391873744'))>((CAST(v0.c2 AS NUMERIC)))) WHERE ((((- (((v0.c2) BETWEEN (v0.c1) AND (rt0.c4))))) ISNULL));
SELECT rt0.c2, rt0.c3, rt0.c1, v0.c0, v0.c2, rt0.c4, v0.c1 FROM rt0 CROSS JOIN v0 ON ((('-391873744'))>((CAST(v0.c2 AS NUMERIC))));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0, v0 WHERE (((((((rt0.c3)!=(rt0.c3)))AND(x'')))AND((((rt0.c0))=((rt0.c4)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (((((((rt0.c3)<>(rt0.c3)))AND(x'')))AND((((rt0.c0))=((rt0.c4)))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0, v0 WHERE (((((((((rt0.c3)<>(rt0.c3)))AND(x'')))AND((((rt0.c0))==((rt0.c4)))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0, v0;
SELECT v0.c0, rt0.c4, rt0.c0, rt0.c1, v0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c1, v0.c2;
SELECT v0.c0, rt0.c4, rt0.c0, rt0.c1, v0.c2 FROM rt0, v0 WHERE (((CAST(x'' AS BLOB))AND(rt0.c2))) GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c1, v0.c2 UNION SELECT ALL v0.c0, rt0.c4, rt0.c0, rt0.c1, v0.c2 FROM rt0, v0 WHERE ((NOT (((CAST(x'' AS BLOB))AND(rt0.c2))))) GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c1, v0.c2 UNION SELECT ALL v0.c0, rt0.c4, rt0.c0, rt0.c1, v0.c2 FROM rt0, v0 WHERE (((((CAST(x'' AS BLOB))AND(rt0.c2))) ISNULL)) GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c1, v0.c2;
SELECT v0.c0, rt0.c4, rt0.c0, rt0.c1, v0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c0, rt0.c1, v0.c2;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING SQLITE_COMPILEOPTION_USED(GROUP_CONCAT(NULL)) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING (NOT (SQLITE_COMPILEOPTION_USED(GROUP_CONCAT(NULL)))) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING ((SQLITE_COMPILEOPTION_USED(GROUP_CONCAT(NULL))) ISNULL);
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING SQLITE_COMPILEOPTION_USED(GROUP_CONCAT(NULL)) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING (NOT (SQLITE_COMPILEOPTION_USED(GROUP_CONCAT(NULL)))) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING ((SQLITE_COMPILEOPTION_USED(GROUP_CONCAT(NULL))) ISNULL);
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL SUM(((((v0.c0) BETWEEN (v0.c2) AND (v0.c0))) NOTNULL)) FROM v0 ORDER BY CASE WHEN ((v0.c2) IS FALSE) THEN LIKELIHOOD(DISTINCT v0.c2, 0.4451376958840013) WHEN CAST(v0.c1 AS REAL) THEN (v0.c2 IN (v0.c1)) WHEN ((v0.c0) NOTNULL) THEN ('-1779676575' IN ()) ELSE CAST(v0.c1 AS REAL) END ASC;
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (LIKELIHOOD(rt0.c3, 0.8749561913416469) COLLATE NOCASE) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (LIKELIHOOD(rt0.c3, 0.8749561913416469) COLLATE NOCASE))) UNION ALL SELECT * FROM rt0, v0 WHERE (((LIKELIHOOD(rt0.c3, 0.8749561913416469) COLLATE NOCASE) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((rt0.c0)OR(rt0.c0))) IS FALSE)) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0)OR(rt0.c0))) IS FALSE)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (CAST((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS INTEGER)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (CAST((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS INTEGER)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((CAST((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS INTEGER)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT v0.c2, rt0.c0, v0.c1, rt0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c0, v0.c1, rt0.c1;
SELECT ALL v0.c2, rt0.c0, v0.c1, rt0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c0, v0.c1, rt0.c1 HAVING COUNT(*) UNION ALL SELECT v0.c2, rt0.c0, v0.c1, rt0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c0, v0.c1, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c2, rt0.c0, v0.c1, rt0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c0, v0.c1, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c2, rt0.c0, v0.c1, rt0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c0, v0.c1, rt0.c1;
SELECT ALL v0.c2, rt0.c0, v0.c1, rt0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c0, v0.c1, rt0.c1 HAVING COUNT(*) UNION ALL SELECT v0.c2, rt0.c0, v0.c1, rt0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c0, v0.c1, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c2, rt0.c0, v0.c1, rt0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c0, v0.c1, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c2, rt0.c0, v0.c1, rt0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c0, v0.c1, rt0.c1;
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (v0.c2) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (v0.c2))) UNION ALL SELECT * FROM v0, rt0 NOT INDEXED WHERE (((v0.c2) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) COLLATE BINARY;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) COLLATE BINARY WHERE ((- (rt0.c3))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) COLLATE BINARY WHERE ((NOT ((- (rt0.c3))))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) COLLATE BINARY WHERE ((((- (rt0.c3))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) COLLATE BINARY;
SELECT v0.c1, rt0.c3, v0.c2, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c1, rt0.c3, v0.c2, rt0.c2, rt0.c4, rt0.c0, rt0.c1;
SELECT v0.c1, rt0.c3, v0.c2, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 WHERE (((((rt0.c1) NOT NULL)) NOT BETWEEN ('') AND ('-557219305'))) GROUP BY v0.c1, rt0.c3, v0.c2, rt0.c2, rt0.c4, rt0.c0, rt0.c1 UNION SELECT v0.c1, rt0.c3, v0.c2, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (((((rt0.c1) NOT NULL)) NOT BETWEEN ('') AND ('-557219305'))))) GROUP BY v0.c1, rt0.c3, v0.c2, rt0.c2, rt0.c4, rt0.c0, rt0.c1 UNION SELECT v0.c1, rt0.c3, v0.c2, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 WHERE (((((((rt0.c1) NOT NULL)) NOT BETWEEN ('') AND ('-557219305'))) ISNULL)) GROUP BY v0.c1, rt0.c3, v0.c2, rt0.c2, rt0.c4, rt0.c0, rt0.c1;
SELECT v0.c1, rt0.c3, v0.c2, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c1, rt0.c3, v0.c2, rt0.c2, rt0.c4, rt0.c0, rt0.c1;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING ((SUM(v0.c2)) IS TRUE) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING (NOT (((SUM(v0.c2)) IS TRUE))) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING ((((SUM(v0.c2)) IS TRUE)) ISNULL);
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING ((SUM(v0.c2)) IS TRUE) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING (NOT (((SUM(v0.c2)) IS TRUE))) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING ((((SUM(v0.c2)) IS TRUE)) ISNULL);
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((- (rt0.c4 COLLATE NOCASE))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((- (rt0.c4 COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((- (rt0.c4 COLLATE NOCASE))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c2) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c2))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c2) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c1, rt0.c4 FROM v0 INNER JOIN rt0 ON CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN v0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END  WHEN CASE v0.c2  WHEN rt0.c0 THEN v0.c2 END THEN CASE -1.52962538E9  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END END GROUP BY rt0.c1, rt0.c4;
SELECT rt0.c1, rt0.c4 FROM v0 INNER JOIN rt0 ON CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN v0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END  WHEN CASE v0.c2  WHEN rt0.c0 THEN v0.c2 END THEN CASE -1.52962538E9  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END END WHERE ((~ (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1))))) GROUP BY rt0.c1, rt0.c4 UNION SELECT rt0.c1, rt0.c4 FROM v0 INNER JOIN rt0 ON CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN v0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END  WHEN CASE v0.c2  WHEN rt0.c0 THEN v0.c2 END THEN CASE -1.52962538E9  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END END WHERE ((NOT ((~ (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1))))))) GROUP BY rt0.c1, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c4 FROM v0 INNER JOIN rt0 ON CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN v0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END  WHEN CASE v0.c2  WHEN rt0.c0 THEN v0.c2 END THEN CASE -1.52962538E9  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END END WHERE ((((~ (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c4;
SELECT rt0.c1, rt0.c4 FROM v0 INNER JOIN rt0 ON CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN v0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END  WHEN CASE v0.c2  WHEN rt0.c0 THEN v0.c2 END THEN CASE -1.52962538E9  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END END GROUP BY rt0.c1, rt0.c4;
SELECT v0.c1, v0.c2, v0.c0, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE BINARY) IS TRUE) GROUP BY v0.c1, v0.c2, v0.c0, rt0.c4;
SELECT ALL v0.c1, v0.c2, v0.c0, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE BINARY) IS TRUE) GROUP BY v0.c1, v0.c2, v0.c0, rt0.c4 HAVING CAST(((SUM(NULL))>>(v0.c0)) AS REAL) UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE BINARY) IS TRUE) GROUP BY v0.c1, v0.c2, v0.c0, rt0.c4 HAVING (NOT (CAST(((SUM(NULL))>>(v0.c0)) AS REAL))) UNION ALL SELECT v0.c1, v0.c2, v0.c0, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE BINARY) IS TRUE) GROUP BY v0.c1, v0.c2, v0.c0, rt0.c4 HAVING ((CAST(((SUM(NULL))>>(v0.c0)) AS REAL)) ISNULL);
SELECT v0.c1, v0.c2, v0.c0, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE BINARY) IS TRUE) GROUP BY v0.c1, v0.c2, v0.c0, rt0.c4;
SELECT ALL v0.c1, v0.c2, v0.c0, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE BINARY) IS TRUE) GROUP BY v0.c1, v0.c2, v0.c0, rt0.c4 HAVING CAST(((SUM(NULL))>>(v0.c0)) AS REAL) UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE BINARY) IS TRUE) GROUP BY v0.c1, v0.c2, v0.c0, rt0.c4 HAVING (NOT (CAST(((SUM(NULL))>>(v0.c0)) AS REAL))) UNION ALL SELECT v0.c1, v0.c2, v0.c0, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE BINARY) IS TRUE) GROUP BY v0.c1, v0.c2, v0.c0, rt0.c4 HAVING ((CAST(((SUM(NULL))>>(v0.c0)) AS REAL)) ISNULL);
SELECT v0.c1, v0.c2, v0.c0, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE BINARY) IS TRUE) GROUP BY v0.c1, v0.c2, v0.c0, rt0.c4;
SELECT ALL rt0.c0, rt0.c3, rt0.c4 FROM rt0;
SELECT rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE ((+ (((('564860596'))<=((rt0.c3)))))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT ((+ (((('564860596'))<=((rt0.c3)))))))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE ((((+ (((('564860596'))<=((rt0.c3)))))) ISNULL));
SELECT ALL rt0.c0, rt0.c3, rt0.c4 FROM rt0;
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON (- (((v0.c1) IS TRUE)));
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON (- (((v0.c1) IS TRUE))) WHERE (((((((((((((((v0.c1)>(v0.c0)))AND('0.18195798902444638')))OR(((((((((rt0.c3)OR(v0.c2)))AND(rt0.c0)))OR(v0.c0)))OR(rt0.c0)))))AND(((x'a438')>(v0.c2)))))AND((((rt0.c0, rt0.c4, v0.c2)) NOT BETWEEN ((rt0.c0, rt0.c4, rt0.c2)) AND ((v0.c1, rt0.c3, rt0.c0))))))AND(((rt0.c1) NOT BETWEEN (v0.c2) AND (rt0.c2)))))AND(((rt0.c4) NOT NULL)))) UNION SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON (- (((v0.c1) IS TRUE))) WHERE ((NOT (((((((((((((((v0.c1)>(v0.c0)))AND('0.18195798902444638')))OR(((((((((rt0.c3)OR(v0.c2)))AND(rt0.c0)))OR(v0.c0)))OR(rt0.c0)))))AND(((x'a438')>(v0.c2)))))AND((((rt0.c0, rt0.c4, v0.c2)) NOT BETWEEN ((rt0.c0, rt0.c4, rt0.c2)) AND ((v0.c1, rt0.c3, rt0.c0))))))AND(((rt0.c1) NOT BETWEEN (v0.c2) AND (rt0.c2)))))AND(((rt0.c4) NOT NULL)))))) UNION SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON (- (((v0.c1) IS TRUE))) WHERE (((((((((((((((((v0.c1)>(v0.c0)))AND('0.18195798902444638')))OR(((((((((rt0.c3)OR(v0.c2)))AND(rt0.c0)))OR(v0.c0)))OR(rt0.c0)))))AND(((x'a438')>(v0.c2)))))AND((((rt0.c0, rt0.c4, v0.c2)) NOT BETWEEN ((rt0.c0, rt0.c4, rt0.c2)) AND ((v0.c1, rt0.c3, rt0.c0))))))AND(((rt0.c1) NOT BETWEEN (v0.c2) AND (rt0.c2)))))AND(((rt0.c4) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON (- (((v0.c1) IS TRUE)));
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((((((((((((v0.c2)AND(v0.c2)))AND(v0.c0)))AND(v0.c0)))AND(v0.c1))))>=((v0.c0 COLLATE NOCASE)))) GROUP BY v0.c2, v0.c0, v0.c1 UNION SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((NOT ((((((((((((v0.c2)AND(v0.c2)))AND(v0.c0)))AND(v0.c0)))AND(v0.c1))))>=((v0.c0 COLLATE NOCASE)))))) GROUP BY v0.c2, v0.c0, v0.c1 UNION SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((((((((((((((v0.c2)AND(v0.c2)))AND(v0.c0)))AND(v0.c0)))AND(v0.c1))))>=((v0.c0 COLLATE NOCASE)))) ISNULL)) GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (COUNT(*) IN (COUNT(v0.c2))) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (NOT ((COUNT(*) IN (COUNT(v0.c2))))) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (((COUNT(*) IN (COUNT(v0.c2)))) ISNULL);
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (COUNT(*) IN (COUNT(v0.c2))) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (NOT ((COUNT(*) IN (COUNT(v0.c2))))) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (((COUNT(*) IN (COUNT(v0.c2)))) ISNULL);
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2 FROM v0;
SELECT ALL v0.c2 FROM v0 WHERE (((- (0.44690553450581694)) IN (v0.c2 COLLATE RTRIM, (((v0.c0))<((v0.c1)))))) UNION ALL SELECT ALL v0.c2 FROM v0 WHERE ((NOT (((- (0.44690553450581694)) IN (v0.c2 COLLATE RTRIM, (((v0.c0))<((v0.c1)))))))) UNION ALL SELECT v0.c2 FROM v0 WHERE (((((- (0.44690553450581694)) IN (v0.c2 COLLATE RTRIM, (((v0.c0))<((v0.c1)))))) ISNULL));
SELECT v0.c2 FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(CAST(rt0.c3 AS BLOB) AS INTEGER)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c3 AS BLOB) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(CAST(rt0.c3 AS BLOB) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c1, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY v0.c1, rt0.c3, rt0.c0;
SELECT v0.c1, rt0.c3, rt0.c0 FROM rt0, v0 WHERE (((((v0.c1)<(rt0.c1)))AND(((((rt0.c2)OR(v0.c0)))OR(v0.c0))))) GROUP BY v0.c1, rt0.c3, rt0.c0 UNION SELECT v0.c1, rt0.c3, rt0.c0 FROM rt0, v0 WHERE ((NOT (((((v0.c1)<(rt0.c1)))AND(((((rt0.c2)OR(v0.c0)))OR(v0.c0))))))) GROUP BY v0.c1, rt0.c3, rt0.c0 UNION SELECT v0.c1, rt0.c3, rt0.c0 FROM rt0, v0 WHERE (((((((v0.c1)<(rt0.c1)))AND(((((rt0.c2)OR(v0.c0)))OR(v0.c0))))) ISNULL)) GROUP BY v0.c1, rt0.c3, rt0.c0;
SELECT ALL v0.c1, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY v0.c1, rt0.c3, rt0.c0;
SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING COALESCE(SUM(COUNT(*)), GROUP_CONCAT(v0.c2), ((v0.c2) IS FALSE), TOTAL(v0.c1)) UNION ALL SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING (NOT (COALESCE(SUM(COUNT(*)), GROUP_CONCAT(v0.c2), ((v0.c2) IS FALSE), TOTAL(v0.c1)))) UNION ALL SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING ((COALESCE(SUM(COUNT(*)), GROUP_CONCAT(v0.c2), ((v0.c2) IS FALSE), TOTAL(v0.c1))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((((+ (v0.c0))) NOT NULL)) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((+ (v0.c0))) NOT NULL)))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((+ (v0.c0))) NOT NULL)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c1, v0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0, v0.c2 FROM v0, rt0;
SELECT DISTINCT v0.c1, v0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0, v0.c2 FROM v0, rt0 WHERE (rt0.c3) UNION SELECT DISTINCT v0.c1, v0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0, v0.c2 FROM v0, rt0 WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT v0.c1, v0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0, v0.c2 FROM v0, rt0 WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT v0.c1, v0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0, v0.c2 FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (6.02723503E8) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (6.02723503E8))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((6.02723503E8) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1 HAVING MAX(((rt0.c0) BETWEEN (MIN(SUM(MIN(AVG(rt0.c1))))) AND (rt0.c0))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (MAX(((rt0.c0) BETWEEN (MIN(SUM(MIN(AVG(rt0.c1))))) AND (rt0.c0))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1 HAVING ((MAX(((rt0.c0) BETWEEN (MIN(SUM(MIN(AVG(rt0.c1))))) AND (rt0.c0)))) ISNULL);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON CASE WHEN (((v0.c1))>((x''))) THEN rt0.c3 COLLATE RTRIM ELSE ((rt0.c0)OR(rt0.c1)) END;
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON CASE WHEN (((v0.c1))>((x''))) THEN rt0.c3 COLLATE RTRIM ELSE ((rt0.c0)OR(rt0.c1)) END WHERE ((((rt0.c1)!=(rt0.c4)) IN ())) UNION ALL SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON CASE WHEN (((v0.c1))>((x''))) THEN rt0.c3 COLLATE RTRIM ELSE ((rt0.c0)OR(rt0.c1)) END WHERE ((NOT ((((rt0.c1)<>(rt0.c4)) IN ())))) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON CASE WHEN (((v0.c1))>((x''))) THEN rt0.c3 COLLATE RTRIM ELSE ((rt0.c0)OR(rt0.c1)) END WHERE ((((((rt0.c1)<>(rt0.c4)) IN ())) ISNULL));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON CASE WHEN (((v0.c1))>((x''))) THEN rt0.c3 COLLATE RTRIM ELSE ((rt0.c0)OR(rt0.c1)) END;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)+(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c1 END))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE BINARY)+(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c1 END))))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE (((((rt0.c2 COLLATE BINARY)+(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c1 END))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0;
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0 WHERE (v0.c0) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c2;
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL rt0.c4, v0.c1 FROM rt0, v0 GROUP BY rt0.c4, v0.c1;
SELECT rt0.c4, v0.c1 FROM rt0, v0 GROUP BY rt0.c4, v0.c1 HAVING CASE MAX(GROUP_CONCAT(COUNT(*)))  WHEN 0.658902689819128 THEN ((SUM(SUM(v0.c1)))>>(AVG(COUNT(COUNT(MAX(v0.c0)))))) END UNION ALL SELECT ALL rt0.c4, v0.c1 FROM rt0, v0 GROUP BY rt0.c4, v0.c1 HAVING (NOT (CASE MAX(GROUP_CONCAT(COUNT(*)))  WHEN 0.658902689819128 THEN ((SUM(SUM(v0.c1)))>>(AVG(COUNT(COUNT(MAX(v0.c0)))))) END)) UNION ALL SELECT ALL rt0.c4, v0.c1 FROM rt0, v0 GROUP BY rt0.c4, v0.c1 HAVING ((CASE MAX(GROUP_CONCAT(COUNT(*)))  WHEN 0.658902689819128 THEN ((SUM(SUM(v0.c1)))>>(AVG(COUNT(COUNT(MAX(v0.c0)))))) END) ISNULL);
SELECT v0.c0, v0.c2, v0.c1 FROM v0;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((CASE v0.c0  WHEN NULL THEN v0.c0 ELSE v0.c2 END IN (((x'')OR(v0.c0)), ((v0.c0)&(v0.c0)), CASE WHEN v0.c2 THEN ')S&9O6X' END))) UNION ALL SELECT v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((NOT ((CASE v0.c0  WHEN NULL THEN v0.c0 ELSE v0.c2 END IN (((x'')OR(v0.c0)), ((v0.c0)&(v0.c0)), CASE WHEN v0.c2 THEN ')S&9O6X' END))))) UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((((CASE v0.c0  WHEN NULL THEN v0.c0 ELSE v0.c2 END IN (((x'')OR(v0.c0)), ((v0.c0)&(v0.c0)), CASE WHEN v0.c2 THEN ')S&9O6X' END))) ISNULL));
SELECT v0.c0, v0.c2, v0.c1 FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((((((((NULL)AND(rt0.c0)))AND('t')))AND(0.16431169023782166)))OR(rt0.c4)) IN ())) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((((((((NULL)AND(rt0.c0)))AND('t')))AND(0.16431169023782166)))OR(rt0.c4)) IN ())))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((((((((NULL)AND(rt0.c0)))AND('t')))AND(0.16431169023782166)))OR(rt0.c4)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c3, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4;
SELECT rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE (((((rt0.c0 IN ())))<=((((((rt0.c4)AND(rt0.c4)))AND(rt0.c0)))))) GROUP BY rt0.c3, rt0.c2, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT (((((rt0.c0 IN ())))<=((((((rt0.c4)AND(rt0.c4)))AND(rt0.c0)))))))) GROUP BY rt0.c3, rt0.c2, rt0.c4 UNION SELECT rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE (((((((rt0.c0 IN ())))<=((((((rt0.c4)AND(rt0.c4)))AND(rt0.c0)))))) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c4;
SELECT rt0.c3, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING 0.6406781002473318 UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING (NOT (0.6406781002473318)) UNION ALL SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING ((0.6406781002473318) ISNULL);
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING 0.6406781002473318 UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING (NOT (0.6406781002473318)) UNION ALL SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING ((0.6406781002473318) ISNULL);
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c3 AS INTEGER)) BETWEEN (json_array(rt0.c3, rt0.c2)) AND (CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c1 END))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((CAST(rt0.c3 AS INTEGER)) BETWEEN (json_array(rt0.c3, rt0.c2)) AND (CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c1 END))))) UNION ALL SELECT * FROM rt0 WHERE (((((CAST(rt0.c3 AS INTEGER)) BETWEEN (json_array(rt0.c3, rt0.c2)) AND (CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c1 END))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT v0.c2, v0.c1, rt0.c2, rt0.c0, rt0.c4, v0.c0, rt0.c1 FROM v0, rt0;
SELECT DISTINCT v0.c2, v0.c1, rt0.c2, rt0.c0, rt0.c4, v0.c0, rt0.c1 FROM v0, rt0 WHERE (v0.c2) UNION SELECT DISTINCT v0.c2, v0.c1, rt0.c2, rt0.c0, rt0.c4, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (v0.c2))) UNION SELECT DISTINCT v0.c2, v0.c1, rt0.c2, rt0.c0, rt0.c4, v0.c0, rt0.c1 FROM v0, rt0 WHERE (((v0.c2) ISNULL));
SELECT DISTINCT v0.c2, v0.c1, rt0.c2, rt0.c0, rt0.c4, v0.c0, rt0.c1 FROM v0, rt0;
SELECT ALL rt0.c4, rt0.c0, v0.c1, v0.c2, rt0.c1, rt0.c2, v0.c0, rt0.c3 FROM rt0 INNER JOIN v0 ON CAST(((v0.c1)<=(rt0.c0)) AS REAL) GROUP BY rt0.c4, rt0.c0, v0.c1, v0.c2, rt0.c1, rt0.c2, v0.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c0, v0.c1, v0.c2, rt0.c1, rt0.c2, v0.c0, rt0.c3 FROM rt0 INNER JOIN v0 ON CAST(((v0.c1)<=(rt0.c0)) AS REAL) WHERE (((rt0.c2 COLLATE BINARY) ISNULL)) GROUP BY rt0.c4, rt0.c0, v0.c1, v0.c2, rt0.c1, rt0.c2, v0.c0, rt0.c3 UNION SELECT rt0.c4, rt0.c0, v0.c1, v0.c2, rt0.c1, rt0.c2, v0.c0, rt0.c3 FROM rt0 INNER JOIN v0 ON CAST(((v0.c1)<=(rt0.c0)) AS REAL) WHERE ((NOT (((rt0.c2 COLLATE BINARY) ISNULL)))) GROUP BY rt0.c4, rt0.c0, v0.c1, v0.c2, rt0.c1, rt0.c2, v0.c0, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c0, v0.c1, v0.c2, rt0.c1, rt0.c2, v0.c0, rt0.c3 FROM rt0 INNER JOIN v0 ON CAST(((v0.c1)<=(rt0.c0)) AS REAL) WHERE (((((rt0.c2 COLLATE BINARY) ISNULL)) ISNULL)) GROUP BY rt0.c4, rt0.c0, v0.c1, v0.c2, rt0.c1, rt0.c2, v0.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c0, v0.c1, v0.c2, rt0.c1, rt0.c2, v0.c0, rt0.c3 FROM rt0 INNER JOIN v0 ON CAST(((v0.c1)<=(rt0.c0)) AS REAL) GROUP BY rt0.c4, rt0.c0, v0.c1, v0.c2, rt0.c1, rt0.c2, v0.c0, rt0.c3;
SELECT v0.c1 FROM rt0, v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM rt0, v0 GROUP BY v0.c1 HAVING MIN(((((SUM(rt0.c2))AND(GROUP_CONCAT(COUNT(*)))))OR(rt0.c0))) UNION ALL SELECT ALL v0.c1 FROM rt0, v0 GROUP BY v0.c1 HAVING (NOT (MIN(((((SUM(rt0.c2))AND(GROUP_CONCAT(COUNT(*)))))OR(rt0.c0))))) UNION ALL SELECT v0.c1 FROM rt0, v0 GROUP BY v0.c1 HAVING ((MIN(((((SUM(rt0.c2))AND(GROUP_CONCAT(COUNT(*)))))OR(rt0.c0)))) ISNULL);
SELECT v0.c0, v0.c1, v0.c2 FROM v0;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 WHERE (((((((((((v0.c2)*(v0.c0)))AND(UNLIKELY(v0.c2))))AND(((v0.c2)|(v0.c1)))))AND(v0.c0)))AND(((v0.c0) NOTNULL)))) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 WHERE ((NOT (((((((((((v0.c2)*(v0.c0)))AND(UNLIKELY(v0.c2))))AND(((v0.c2)|(v0.c1)))))AND(v0.c0)))AND(((v0.c0) NOTNULL)))))) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 WHERE (((((((((((((v0.c2)*(v0.c0)))AND(UNLIKELY(v0.c2))))AND(((v0.c2)|(v0.c1)))))AND(v0.c0)))AND(((v0.c0) NOTNULL)))) ISNULL));
SELECT v0.c0, v0.c1, v0.c2 FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((NULLIF(rt0.c3, rt0.c4) IN ((((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c4, rt0.c4)) AND (('1359189376', rt0.c4, rt0.c4)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((NULLIF(rt0.c3, rt0.c4) IN ((((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c4, rt0.c4)) AND (('1359189376', rt0.c4, rt0.c4)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((NULLIF(rt0.c3, rt0.c4) IN ((((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c4, rt0.c4)) AND (('1359189376', rt0.c4, rt0.c4)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c1))))AND(((rt0.c2)|(rt0.c2)))))AND(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) GROUP BY rt0.c3, rt0.c2, rt0.c0 UNION SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c1))))AND(((rt0.c2)|(rt0.c2)))))AND(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0))))))) GROUP BY rt0.c3, rt0.c2, rt0.c0 UNION SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c1))))AND(((rt0.c2)|(rt0.c2)))))AND(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING GROUP_CONCAT(SUM(v0.c0)) UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING (NOT (GROUP_CONCAT(SUM(v0.c0)))) UNION ALL SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING ((GROUP_CONCAT(SUM(v0.c0))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (v0.c1 COLLATE BINARY COLLATE BINARY) UNION ALL SELECT * FROM v0 WHERE ((NOT (v0.c1 COLLATE BINARY COLLATE BINARY))) UNION ALL SELECT ALL * FROM v0 WHERE (((v0.c1 COLLATE BINARY COLLATE BINARY) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (0.34732840727733016) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (0.34732840727733016))) UNION SELECT DISTINCT * FROM rt0 WHERE (((0.34732840727733016) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c2, rt0.c0, rt0.c2, v0.c1, rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY v0.c2, rt0.c0, rt0.c2, v0.c1, rt0.c1, v0.c0, rt0.c3;
SELECT ALL v0.c2, rt0.c0, rt0.c2, v0.c1, rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END) BETWEEN (((((rt0.c0)OR(v0.c0)))AND(rt0.c0))) AND (rt0.c0))) GROUP BY v0.c2, rt0.c0, rt0.c2, v0.c1, rt0.c1, v0.c0, rt0.c3 UNION SELECT v0.c2, rt0.c0, rt0.c2, v0.c1, rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END) BETWEEN (((((rt0.c0)OR(v0.c0)))AND(rt0.c0))) AND (rt0.c0))))) GROUP BY v0.c2, rt0.c0, rt0.c2, v0.c1, rt0.c1, v0.c0, rt0.c3 UNION SELECT ALL v0.c2, rt0.c0, rt0.c2, v0.c1, rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END) BETWEEN (((((rt0.c0)OR(v0.c0)))AND(rt0.c0))) AND (rt0.c0))) ISNULL)) GROUP BY v0.c2, rt0.c0, rt0.c2, v0.c1, rt0.c1, v0.c0, rt0.c3;
SELECT v0.c2, rt0.c0, rt0.c2, v0.c1, rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY v0.c2, rt0.c0, rt0.c2, v0.c1, rt0.c1, v0.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c2, v0.c0 FROM rt0 INNER JOIN v0 ON ((NULL)|((NULL IN ()))) GROUP BY rt0.c4, rt0.c2, v0.c0;
SELECT ALL rt0.c4, rt0.c2, v0.c0 FROM rt0 INNER JOIN v0 ON ((NULL)|((NULL IN ()))) GROUP BY rt0.c4, rt0.c2, v0.c0 HAVING TOTAL((- (COUNT(x'1693')))) UNION ALL SELECT rt0.c4, rt0.c2, v0.c0 FROM rt0 INNER JOIN v0 ON ((NULL)|((NULL IN ()))) GROUP BY rt0.c4, rt0.c2, v0.c0 HAVING (NOT (TOTAL((- (COUNT(x'1693')))))) UNION ALL SELECT ALL rt0.c4, rt0.c2, v0.c0 FROM rt0 INNER JOIN v0 ON ((NULL)|((NULL IN ()))) GROUP BY rt0.c4, rt0.c2, v0.c0 HAVING ((TOTAL((- (COUNT(x'1693'))))) ISNULL);
SELECT ALL v0.c1, v0.c0 FROM v0;
SELECT v0.c1, v0.c0 FROM v0 WHERE (v0.c2) UNION ALL SELECT v0.c1, v0.c0 FROM v0 WHERE ((NOT (v0.c2))) UNION ALL SELECT v0.c1, v0.c0 FROM v0 WHERE (((v0.c2) ISNULL));
SELECT ALL v0.c1, v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (CASE WHEN (v0.c1 IN (rt0.c3, v0.c0)) THEN CAST(rt0.c3 AS REAL) ELSE ((((1e500)AND(rt0.c4)))AND(rt0.c1)) END) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (CASE WHEN (v0.c1 IN (rt0.c3, v0.c0)) THEN CAST(rt0.c3 AS REAL) ELSE ((((1e500)AND(rt0.c4)))AND(rt0.c1)) END))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((CASE WHEN (v0.c1 IN (rt0.c3, v0.c0)) THEN CAST(rt0.c3 AS REAL) ELSE ((((1e500)AND(rt0.c4)))AND(rt0.c1)) END) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL v0.c2, rt0.c0, rt0.c2, v0.c1 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c2, rt0.c0, rt0.c2, v0.c1;
SELECT ALL v0.c2, rt0.c0, rt0.c2, v0.c1 FROM v0 NATURAL JOIN rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((v0.c2))) COLLATE BINARY) GROUP BY v0.c2, rt0.c0, rt0.c2, v0.c1 UNION SELECT ALL v0.c2, rt0.c0, rt0.c2, v0.c1 FROM v0 NATURAL JOIN rt0 WHERE ((NOT ((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((v0.c2))) COLLATE BINARY))) GROUP BY v0.c2, rt0.c0, rt0.c2, v0.c1 UNION SELECT v0.c2, rt0.c0, rt0.c2, v0.c1 FROM v0 NATURAL JOIN rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((v0.c2))) COLLATE BINARY) ISNULL)) GROUP BY v0.c2, rt0.c0, rt0.c2, v0.c1;
SELECT ALL v0.c2, rt0.c0, rt0.c2, v0.c1 FROM v0 NATURAL JOIN rt0 GROUP BY v0.c2, rt0.c0, rt0.c2, v0.c1;
SELECT ALL rt0.c3, v0.c1 FROM v0 INNER JOIN rt0 ON ((((CASE rt0.c1  WHEN v0.c1 THEN '3]JH		[7' END)AND(rt0.c3 COLLATE NOCASE)))AND(TRIM(DISTINCT rt0.c0, v0.c2))) GROUP BY rt0.c3, v0.c1;
SELECT rt0.c3, v0.c1 FROM v0 INNER JOIN rt0 ON ((((CASE rt0.c1  WHEN v0.c1 THEN '3]JH		[7' END)AND(rt0.c3 COLLATE NOCASE)))AND(TRIM(DISTINCT rt0.c0, v0.c2))) GROUP BY rt0.c3, v0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c3, v0.c1 FROM v0 INNER JOIN rt0 ON ((((CASE rt0.c1  WHEN v0.c1 THEN '3]JH		[7' END)AND(rt0.c3 COLLATE NOCASE)))AND(TRIM(DISTINCT rt0.c0, v0.c2))) GROUP BY rt0.c3, v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, v0.c1 FROM v0 INNER JOIN rt0 ON ((((CASE rt0.c1  WHEN v0.c1 THEN '3]JH		[7' END)AND(rt0.c3 COLLATE NOCASE)))AND(TRIM(DISTINCT rt0.c0, v0.c2))) GROUP BY rt0.c3, v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, v0.c1 FROM v0 INNER JOIN rt0 ON ((((CASE rt0.c1  WHEN v0.c1 THEN '3]JH		[7' END)AND(rt0.c3 COLLATE NOCASE)))AND(TRIM(DISTINCT rt0.c0, v0.c2))) GROUP BY rt0.c3, v0.c1;
SELECT rt0.c3, v0.c1 FROM v0 INNER JOIN rt0 ON ((((CASE rt0.c1  WHEN v0.c1 THEN '3]JH		[7' END)AND(rt0.c3 COLLATE NOCASE)))AND(TRIM(DISTINCT rt0.c0, v0.c2))) GROUP BY rt0.c3, v0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c3, v0.c1 FROM v0 INNER JOIN rt0 ON ((((CASE rt0.c1  WHEN v0.c1 THEN '3]JH		[7' END)AND(rt0.c3 COLLATE NOCASE)))AND(TRIM(DISTINCT rt0.c0, v0.c2))) GROUP BY rt0.c3, v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, v0.c1 FROM v0 INNER JOIN rt0 ON ((((CASE rt0.c1  WHEN v0.c1 THEN '3]JH		[7' END)AND(rt0.c3 COLLATE NOCASE)))AND(TRIM(DISTINCT rt0.c0, v0.c2))) GROUP BY rt0.c3, v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, v0.c1 FROM v0 INNER JOIN rt0 ON ((((CASE rt0.c1  WHEN v0.c1 THEN '3]JH		[7' END)AND(rt0.c3 COLLATE NOCASE)))AND(TRIM(DISTINCT rt0.c0, v0.c2))) GROUP BY rt0.c3, v0.c1;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((((rt0.c3)>=(rt0.c0)))OR(((rt0.c4)!=(rt0.c2)))))AND((rt0.c0 IN (rt0.c1))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((rt0.c3)>=(rt0.c0)))OR(((rt0.c4)<>(rt0.c2)))))AND((rt0.c0 IN (rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((rt0.c3)>=(rt0.c0)))OR(((rt0.c4)!=(rt0.c2)))))AND((rt0.c0 IN (rt0.c1))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((((v0.c1)*(x'625d')), ((rt0.c1)&(rt0.c3)), v0.c2))<>((((v0.c1)+(v0.c2)), ((v0.c2)=(v0.c0)), (NOT (rt0.c4)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((((v0.c1)*(x'625d')), ((rt0.c1)&(rt0.c3)), v0.c2))<>((((v0.c1)+(v0.c2)), ((v0.c2)=(v0.c0)), (NOT (rt0.c4)))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((((v0.c1)*(x'625d')), ((rt0.c1)&(rt0.c3)), v0.c2))<>((((v0.c1)+(v0.c2)), ((v0.c2)==(v0.c0)), (NOT (rt0.c4)))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT v0.c2, rt0.c2, rt0.c3, v0.c1, v0.c0, rt0.c4, rt0.c1 FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN ((v0.c0)<=(rt0.c2)) THEN (rt0.c2 IN (rt0.c2, v0.c0, rt0.c4)) END GROUP BY v0.c2, rt0.c2, rt0.c3, v0.c1, v0.c0, rt0.c4, rt0.c1;
SELECT ALL v0.c2, rt0.c2, rt0.c3, v0.c1, v0.c0, rt0.c4, rt0.c1 FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN ((v0.c0)<=(rt0.c2)) THEN (rt0.c2 IN (rt0.c2, v0.c0, rt0.c4)) END WHERE (rt0.c1) GROUP BY v0.c2, rt0.c2, rt0.c3, v0.c1, v0.c0, rt0.c4, rt0.c1 UNION SELECT v0.c2, rt0.c2, rt0.c3, v0.c1, v0.c0, rt0.c4, rt0.c1 FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN ((v0.c0)<=(rt0.c2)) THEN (rt0.c2 IN (rt0.c2, v0.c0, rt0.c4)) END WHERE ((NOT (rt0.c1))) GROUP BY v0.c2, rt0.c2, rt0.c3, v0.c1, v0.c0, rt0.c4, rt0.c1 UNION SELECT v0.c2, rt0.c2, rt0.c3, v0.c1, v0.c0, rt0.c4, rt0.c1 FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN ((v0.c0)<=(rt0.c2)) THEN (rt0.c2 IN (rt0.c2, v0.c0, rt0.c4)) END WHERE (((rt0.c1) ISNULL)) GROUP BY v0.c2, rt0.c2, rt0.c3, v0.c1, v0.c0, rt0.c4, rt0.c1;
SELECT v0.c2, rt0.c2, rt0.c3, v0.c1, v0.c0, rt0.c4, rt0.c1 FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN ((v0.c0)<=(rt0.c2)) THEN (rt0.c2 IN (rt0.c2, v0.c0, rt0.c4)) END GROUP BY v0.c2, rt0.c2, rt0.c3, v0.c1, v0.c0, rt0.c4, rt0.c1;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (GROUP_CONCAT(AVG(COUNT(GROUP_CONCAT(v0.c0)))) IN ()) COLLATE BINARY UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (NOT ((GROUP_CONCAT(AVG(COUNT(GROUP_CONCAT(v0.c0)))) IN ()) COLLATE BINARY)) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (((GROUP_CONCAT(AVG(COUNT(GROUP_CONCAT(v0.c0)))) IN ()) COLLATE BINARY) ISNULL);
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (GROUP_CONCAT(AVG(COUNT(GROUP_CONCAT(v0.c0)))) IN ()) COLLATE BINARY UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (NOT ((GROUP_CONCAT(AVG(COUNT(GROUP_CONCAT(v0.c0)))) IN ()) COLLATE BINARY)) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (((GROUP_CONCAT(AVG(COUNT(GROUP_CONCAT(v0.c0)))) IN ()) COLLATE BINARY) ISNULL);
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN ())) IS FALSE)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c1 IN ())) IS FALSE)))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c1 IN ())) IS FALSE)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT v0.c1, v0.c0 FROM v0;
SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE (NULLIF(((v0.c2)-(NULL)), LIKELY(v0.c2))) UNION SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE ((NOT (NULLIF(((v0.c2)-(NULL)), LIKELY(v0.c2))))) UNION SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE (((NULLIF(((v0.c2)-(NULL)), LIKELY(v0.c2))) ISNULL));
SELECT DISTINCT v0.c1, v0.c0 FROM v0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)) COLLATE NOCASE) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)) COLLATE NOCASE))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c4, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON CASE ((rt0.c3)/(x''))  WHEN -1401616757 THEN json(rt0.c4) WHEN rt0.c2 THEN DATETIME(rt0.c1, rt0.c3, rt0.c2) WHEN v0.c0 THEN ((((((((v0.c0)OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c2)))OR(v0.c2)) END GROUP BY rt0.c2, rt0.c4, rt0.c0;
SELECT ALL rt0.c2, rt0.c4, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON CASE ((rt0.c3)/(x''))  WHEN -1401616757 THEN json(rt0.c4) WHEN rt0.c2 THEN DATETIME(rt0.c1, rt0.c3, rt0.c2) WHEN v0.c0 THEN ((((((((v0.c0)OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c2)))OR(v0.c2)) END GROUP BY rt0.c2, rt0.c4, rt0.c0 HAVING MAX(AVG(MIN(MAX(-764295140)))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON CASE ((rt0.c3)/(x''))  WHEN -1401616757 THEN json(rt0.c4) WHEN rt0.c2 THEN DATETIME(rt0.c1, rt0.c3, rt0.c2) WHEN v0.c0 THEN ((((((((v0.c0)OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c2)))OR(v0.c2)) END GROUP BY rt0.c2, rt0.c4, rt0.c0 HAVING (NOT (MAX(AVG(MIN(MAX(-764295140)))))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c0 FROM rt0 RIGHT OUTER JOIN v0 ON CASE ((rt0.c3)/(x''))  WHEN -1401616757 THEN json(rt0.c4) WHEN rt0.c2 THEN DATETIME(rt0.c1, rt0.c3, rt0.c2) WHEN v0.c0 THEN ((((((((v0.c0)OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c2)))OR(v0.c2)) END GROUP BY rt0.c2, rt0.c4, rt0.c0 HAVING ((MAX(AVG(MIN(MAX(-764295140))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2)+(rt0.c0)) AS INTEGER)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(((rt0.c2)+(rt0.c0)) AS INTEGER)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(((rt0.c2)+(rt0.c0)) AS INTEGER)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (NULL) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM v0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c1 FROM rt0, v0 GROUP BY v0.c1;
SELECT v0.c1 FROM rt0, v0 WHERE ((((rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN '-1779676575' WHEN v0.c0 THEN v0.c0 ELSE rt0.c1 END)) AND ((((0.6328155998507727) IS FALSE))))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM rt0, v0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN '-1779676575' WHEN v0.c0 THEN v0.c0 ELSE rt0.c1 END)) AND ((((0.6328155998507727) IS FALSE))))))) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM rt0, v0 WHERE ((((((rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN '-1779676575' WHEN v0.c0 THEN v0.c0 ELSE rt0.c1 END)) AND ((((0.6328155998507727) IS FALSE))))) ISNULL)) GROUP BY v0.c1;
SELECT v0.c1 FROM rt0, v0 GROUP BY v0.c1;
SELECT ALL rt0.c4, v0.c0, rt0.c1, v0.c2, rt0.c3, rt0.c2, v0.c1 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c1, v0.c2, rt0.c3, rt0.c2, v0.c1;
SELECT ALL rt0.c4, v0.c0, rt0.c1, v0.c2, rt0.c3, rt0.c2, v0.c1 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c1, v0.c2, rt0.c3, rt0.c2, v0.c1 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c1, v0.c2, rt0.c3, rt0.c2, v0.c1 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c1, v0.c2, rt0.c3, rt0.c2, v0.c1 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT rt0.c4, v0.c0, rt0.c1, v0.c2, rt0.c3, rt0.c2, v0.c1 FROM rt0, v0 GROUP BY rt0.c4, v0.c0, rt0.c1, v0.c2, rt0.c3, rt0.c2, v0.c1 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((+ (rt0.c4))) BETWEEN (((rt0.c1) NOT NULL)) AND (CAST(rt0.c1 AS BLOB)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((+ (rt0.c4))) BETWEEN (((rt0.c1) NOT NULL)) AND (CAST(rt0.c1 AS BLOB)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((+ (rt0.c4))) BETWEEN (((rt0.c1) NOT NULL)) AND (CAST(rt0.c1 AS BLOB)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c3, v0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c3, v0.c2 FROM rt0, v0 WHERE ((((((+ (v0.c1)))OR((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((v0.c2))))))AND(((v0.c0) NOT NULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c3, v0.c2 FROM rt0, v0 WHERE ((NOT ((((((+ (v0.c1)))OR((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((v0.c2))))))AND(((v0.c0) NOT NULL)))))) UNION SELECT DISTINCT rt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c3, v0.c2 FROM rt0, v0 WHERE ((((((((+ (v0.c1)))OR((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((v0.c2))))))AND(((v0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c3, v0.c2 FROM rt0, v0;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0 WHERE (((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN x'' THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN NULL ELSE v0.c0 END)>=(v0.c0 COLLATE RTRIM))) GROUP BY v0.c1, v0.c2 UNION SELECT v0.c1, v0.c2 FROM v0 WHERE ((NOT (((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN x'' THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN NULL ELSE v0.c0 END)>=(v0.c0 COLLATE RTRIM))))) GROUP BY v0.c1, v0.c2 UNION SELECT v0.c1, v0.c2 FROM v0 WHERE (((((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN x'' THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN NULL ELSE v0.c0 END)>=(v0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1;
SELECT ALL rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1 HAVING json_remove(SUM(rt0.c0), CAST(rt0.c0 AS INTEGER), CAST(rt0.c0 AS NUMERIC), CASE rt0.c1  WHEN MIN(COUNT(*)) THEN rt0.c4 END) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1 HAVING (NOT (json_remove(SUM(rt0.c0), CAST(rt0.c0 AS INTEGER), CAST(rt0.c0 AS NUMERIC), CASE rt0.c1  WHEN MIN(COUNT(*)) THEN rt0.c4 END))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1 HAVING ((json_remove(SUM(rt0.c0), CAST(rt0.c0 AS INTEGER), CAST(rt0.c0 AS NUMERIC), CASE rt0.c1  WHEN MIN(COUNT(*)) THEN rt0.c4 END)) ISNULL);
SELECT ALL rt0.c1 FROM v0, rt0;
SELECT ALL rt0.c1 FROM v0, rt0 WHERE (((((((rt0.c1)!=(rt0.c1)))OR(((rt0.c3)*(v0.c0)))))OR(v0.c1))) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 WHERE ((NOT (((((((rt0.c1)!=(rt0.c1)))OR(((rt0.c3)*(v0.c0)))))OR(v0.c1))))) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 WHERE (((((((((rt0.c1)!=(rt0.c1)))OR(((rt0.c3)*(v0.c0)))))OR(v0.c1))) ISNULL));
SELECT ALL rt0.c1 FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((CAST(NULL AS BLOB)) NOT BETWEEN (((v0.c1)!=(v0.c2))) AND (((v0.c2) NOTNULL)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((CAST(NULL AS BLOB)) NOT BETWEEN (((v0.c1)<>(v0.c2))) AND (((v0.c2) NOTNULL)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((CAST(NULL AS BLOB)) NOT BETWEEN (((v0.c1)<>(v0.c2))) AND (((v0.c2) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE ((- (x'2b76'))) GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c0 UNION SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT ((- (x'2b76'))))) GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c0 UNION SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE ((((- (x'2b76'))) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c0;
SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c0;
SELECT ALL rt0.c3, v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c2, v0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c2, v0.c1, rt0.c4;
SELECT ALL rt0.c3, v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c2, v0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c2, v0.c1, rt0.c4 HAVING COUNT(CAST(rt0.c0 AS BLOB)) UNION ALL SELECT ALL rt0.c3, v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c2, v0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c2, v0.c1, rt0.c4 HAVING (NOT (COUNT(CAST(rt0.c0 AS BLOB)))) UNION ALL SELECT rt0.c3, v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c2, v0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c2, v0.c1, rt0.c4 HAVING ((COUNT(CAST(rt0.c0 AS BLOB))) ISNULL);
SELECT ALL rt0.c3, v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c2, v0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c2, v0.c1, rt0.c4;
SELECT ALL rt0.c3, v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c2, v0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c2, v0.c1, rt0.c4 HAVING COUNT(CAST(rt0.c0 AS BLOB)) UNION ALL SELECT ALL rt0.c3, v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c2, v0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c2, v0.c1, rt0.c4 HAVING (NOT (COUNT(CAST(rt0.c0 AS BLOB)))) UNION ALL SELECT rt0.c3, v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c2, v0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c2, v0.c1, rt0.c4 HAVING ((COUNT(CAST(rt0.c0 AS BLOB))) ISNULL);
SELECT ALL rt0.c3, v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c2, v0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c2, v0.c1, rt0.c4;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((- ((rt0.c0 IN (rt0.c1, rt0.c3))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((- ((rt0.c0 IN (rt0.c1, rt0.c3))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((- ((rt0.c0 IN (rt0.c1, rt0.c3))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c4 FROM rt0 WHERE ((((rt0.c0 IN ())) IS FALSE)) UNION SELECT DISTINCT rt0.c4 FROM rt0 WHERE ((NOT ((((rt0.c0 IN ())) IS FALSE)))) UNION SELECT DISTINCT rt0.c4 FROM rt0 WHERE ((((((rt0.c0 IN ())) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c4 FROM rt0;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM v0, rt0 WHERE (CAST(CAST(rt0.c1 AS TEXT) AS INTEGER)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM v0, rt0 WHERE ((NOT (CAST(CAST(rt0.c1 AS TEXT) AS INTEGER)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM v0, rt0 WHERE (((CAST(CAST(rt0.c1 AS TEXT) AS INTEGER)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING TOTAL(SUM(MAX(v0.c0))) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (NOT (TOTAL(SUM(MAX(v0.c0))))) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING ((TOTAL(SUM(MAX(v0.c0)))) ISNULL);
SELECT v0.c0, v0.c2, v0.c1 FROM v0;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((((((v0.c2)OR(v0.c2)))OR('-418241202')) IN ())) UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((NOT ((((((v0.c2)OR(v0.c2)))OR('-418241202')) IN ())))) UNION ALL SELECT v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((((((((v0.c2)OR(v0.c2)))OR('-418241202')) IN ())) ISNULL));
SELECT v0.c0, v0.c2, v0.c1 FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((((((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))OR(GLOB(rt0.c3, rt0.c1))))AND(GLOB(rt0.c2, rt0.c4))))AND(rt0.c1)))OR('-740209854'))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((((((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))OR(GLOB(rt0.c3, rt0.c1))))AND(GLOB(rt0.c2, rt0.c4))))AND(rt0.c1)))OR('-740209854'))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((((((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))OR(GLOB(rt0.c3, rt0.c1))))AND(GLOB(rt0.c2, rt0.c4))))AND(rt0.c1)))OR('-740209854'))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0;
SELECT ALL rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE (((TOTAL_CHANGES()) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c0 UNION SELECT rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (((TOTAL_CHANGES()) ISNULL)))) GROUP BY rt0.c2, rt0.c4, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE (((((TOTAL_CHANGES()) ISNULL)) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c0;
SELECT rt0.c2, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING GROUP_CONCAT(MIN(v0.c2)) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (NOT (GROUP_CONCAT(MIN(v0.c2)))) UNION ALL SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING ((GROUP_CONCAT(MIN(v0.c2))) ISNULL);
SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0, v0.c2, rt0.c3 FROM rt0, v0;
SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0, v0.c2, rt0.c3 FROM rt0, v0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0, v0.c2, rt0.c3 FROM rt0, v0 WHERE ((NOT ((NOT (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))))) UNION ALL SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0, v0.c2, rt0.c3 FROM rt0, v0 WHERE ((((NOT (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL));
SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0, v0.c2, rt0.c3 FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c4 FROM rt0 WHERE (CAST((rt0.c1 IN ()) AS NUMERIC)) UNION SELECT DISTINCT rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT (CAST((rt0.c1 IN ()) AS NUMERIC)))) UNION SELECT DISTINCT rt0.c0, rt0.c4 FROM rt0 WHERE (((CAST((rt0.c1 IN ()) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c4 FROM rt0;
SELECT ALL v0.c1, v0.c0, rt0.c4, rt0.c1, v0.c2, rt0.c3, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c1, v0.c0, rt0.c4, rt0.c1, v0.c2, rt0.c3, rt0.c0, rt0.c2;
SELECT ALL v0.c1, v0.c0, rt0.c4, rt0.c1, v0.c2, rt0.c3, rt0.c0, rt0.c2 FROM rt0, v0 WHERE (((((v0.c2)<=(rt0.c1))) IS FALSE)) GROUP BY v0.c1, v0.c0, rt0.c4, rt0.c1, v0.c2, rt0.c3, rt0.c0, rt0.c2 UNION SELECT ALL v0.c1, v0.c0, rt0.c4, rt0.c1, v0.c2, rt0.c3, rt0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT (((((v0.c2)<=(rt0.c1))) IS FALSE)))) GROUP BY v0.c1, v0.c0, rt0.c4, rt0.c1, v0.c2, rt0.c3, rt0.c0, rt0.c2 UNION SELECT ALL v0.c1, v0.c0, rt0.c4, rt0.c1, v0.c2, rt0.c3, rt0.c0, rt0.c2 FROM rt0, v0 WHERE (((((((v0.c2)<=(rt0.c1))) IS FALSE)) ISNULL)) GROUP BY v0.c1, v0.c0, rt0.c4, rt0.c1, v0.c2, rt0.c3, rt0.c0, rt0.c2;
SELECT ALL v0.c1, v0.c0, rt0.c4, rt0.c1, v0.c2, rt0.c3, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c1, v0.c0, rt0.c4, rt0.c1, v0.c2, rt0.c3, rt0.c0, rt0.c2;
SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING GROUP_CONCAT(GROUP_CONCAT(v0.c2)) UNION ALL SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(v0.c2)))) UNION ALL SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING ((GROUP_CONCAT(GROUP_CONCAT(v0.c2))) ISNULL);
SELECT ALL rt0.c4, v0.c1, rt0.c0 FROM rt0, v0;
SELECT ALL rt0.c4, v0.c1, rt0.c0 FROM rt0, v0 WHERE (CASE WHEN NULLIF(DISTINCT v0.c2, rt0.c4) THEN ((rt0.c3) IS TRUE) ELSE ((rt0.c3) BETWEEN (',-') AND (rt0.c4)) END) UNION ALL SELECT ALL rt0.c4, v0.c1, rt0.c0 FROM rt0, v0 WHERE ((NOT (CASE WHEN NULLIF(DISTINCT v0.c2, rt0.c4) THEN ((rt0.c3) IS TRUE) ELSE ((rt0.c3) BETWEEN (',-') AND (rt0.c4)) END))) UNION ALL SELECT ALL rt0.c4, v0.c1, rt0.c0 FROM rt0, v0 WHERE (((CASE WHEN NULLIF(DISTINCT v0.c2, rt0.c4) THEN ((rt0.c3) IS TRUE) ELSE ((rt0.c3) BETWEEN (',-') AND (rt0.c4)) END) ISNULL));
SELECT ALL rt0.c4, v0.c1, rt0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) BETWEEN (x'') AND ('GW2꯹')))<=(((v0.c0)!=(v0.c1))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (x'') AND ('GW2꯹')))<=(((v0.c0)!=(v0.c1))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0) BETWEEN (x'') AND ('GW2꯹')))<=(((v0.c0)<>(v0.c1))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((+ (rt0.c0))) GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT ((+ (rt0.c0))))) GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((((+ (rt0.c0))) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3;
SELECT rt0.c0, v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2, v0.c0, rt0.c4;
SELECT ALL rt0.c0, v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2, v0.c0, rt0.c4 HAVING -1401749607 UNION ALL SELECT ALL rt0.c0, v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2, v0.c0, rt0.c4 HAVING (NOT (-1401749607)) UNION ALL SELECT rt0.c0, v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2, v0.c0, rt0.c4 HAVING ((-1401749607) ISNULL);
SELECT rt0.c0, v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2, v0.c0, rt0.c4;
SELECT ALL rt0.c0, v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2, v0.c0, rt0.c4 HAVING -1401749607 UNION ALL SELECT ALL rt0.c0, v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2, v0.c0, rt0.c4 HAVING (NOT (-1401749607)) UNION ALL SELECT rt0.c0, v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2, v0.c0, rt0.c4 HAVING ((-1401749607) ISNULL);
SELECT rt0.c0, v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, v0.c1, rt0.c3, rt0.c1, rt0.c2, v0.c2, v0.c0, rt0.c4;
SELECT v0.c0, v0.c1 FROM rt0, v0;
SELECT v0.c0, v0.c1 FROM rt0, v0 WHERE ((~ ((((rt0.c3, v0.c1, v0.c2)) BETWEEN ((rt0.c2, v0.c1, '493676085')) AND ((v0.c1, v0.c1, v0.c1)))))) UNION ALL SELECT v0.c0, v0.c1 FROM rt0, v0 WHERE ((NOT ((~ ((((rt0.c3, v0.c1, v0.c2)) BETWEEN ((rt0.c2, v0.c1, '493676085')) AND ((v0.c1, v0.c1, v0.c1)))))))) UNION ALL SELECT ALL v0.c0, v0.c1 FROM rt0, v0 WHERE ((((~ ((((rt0.c3, v0.c1, v0.c2)) BETWEEN ((rt0.c2, v0.c1, '493676085')) AND ((v0.c1, v0.c1, v0.c1)))))) ISNULL));
SELECT v0.c0, v0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0 WHERE (((IFNULL(rt0.c1, rt0.c4))AND(((((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c3))))) UNION SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (((IFNULL(rt0.c1, rt0.c4))AND(((((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c3))))))) UNION SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0 WHERE (((((IFNULL(rt0.c1, rt0.c4))AND(((((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c3))))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE (CASE WHEN v0.c2 COLLATE RTRIM THEN v0.c1 COLLATE BINARY WHEN ((v0.c2)==(v0.c2)) THEN v0.c2 WHEN ((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)) THEN ((v0.c2)+(v0.c2)) END) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT (CASE WHEN v0.c2 COLLATE RTRIM THEN v0.c1 COLLATE BINARY WHEN ((v0.c2)=(v0.c2)) THEN v0.c2 WHEN ((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)) THEN ((v0.c2)+(v0.c2)) END))) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE (((CASE WHEN v0.c2 COLLATE RTRIM THEN v0.c1 COLLATE BINARY WHEN ((v0.c2)=(v0.c2)) THEN v0.c2 WHEN ((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)) THEN ((v0.c2)+(v0.c2)) END) ISNULL)) GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING TOTAL(MIN(v0.c0)) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (NOT (TOTAL(MIN(v0.c0)))) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING ((TOTAL(MIN(v0.c0))) ISNULL);
SELECT ALL SUM(((((v0.c1) ISNULL)) BETWEEN ((+ (v0.c1))) AND (v0.c2))) FROM v0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (v0.c2) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (v0.c2))) UNION ALL SELECT * FROM v0 WHERE (((v0.c2) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c1 FROM v0;
SELECT DISTINCT v0.c1 FROM v0 WHERE ('-1467148666') UNION SELECT DISTINCT v0.c1 FROM v0 WHERE ((NOT ('-1467148666'))) UNION SELECT DISTINCT v0.c1 FROM v0 WHERE ((('-1467148666') ISNULL));
SELECT DISTINCT v0.c1 FROM v0;
SELECT rt0.c3 FROM v0, rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM v0, rt0 WHERE (x'6ffa') GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM v0, rt0 WHERE ((NOT (x'6ffa'))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM v0, rt0 WHERE (((x'6ffa') ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM v0, rt0 GROUP BY rt0.c3;
SELECT rt0.c3, v0.c2, v0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, v0.c1, rt0.c0;
SELECT ALL rt0.c3, v0.c2, v0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, v0.c1, rt0.c0 HAVING (((COUNT(rt0.c0) IN ()))LIKE(AVG(x''))) UNION ALL SELECT rt0.c3, v0.c2, v0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, v0.c1, rt0.c0 HAVING (NOT ((((COUNT(rt0.c0) IN ()))LIKE(AVG(x''))))) UNION ALL SELECT rt0.c3, v0.c2, v0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, v0.c1, rt0.c0 HAVING (((((COUNT(rt0.c0) IN ()))LIKE(AVG(x'')))) ISNULL);
SELECT rt0.c3, v0.c2, v0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, v0.c1, rt0.c0;
SELECT ALL rt0.c3, v0.c2, v0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, v0.c1, rt0.c0 HAVING (((COUNT(rt0.c0) IN ()))LIKE(AVG(x''))) UNION ALL SELECT rt0.c3, v0.c2, v0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, v0.c1, rt0.c0 HAVING (NOT ((((COUNT(rt0.c0) IN ()))LIKE(AVG(x''))))) UNION ALL SELECT rt0.c3, v0.c2, v0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, v0.c1, rt0.c0 HAVING (((((COUNT(rt0.c0) IN ()))LIKE(AVG(x'')))) ISNULL);
SELECT rt0.c3, v0.c2, v0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, v0.c1, rt0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (v0.c1) UNION ALL SELECT * FROM v0 WHERE ((NOT (v0.c1))) UNION ALL SELECT ALL * FROM v0 WHERE (((v0.c1) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c4) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c4))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c4) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (CAST(((0.658902689819128) NOT NULL) AS INTEGER)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CAST(((0.658902689819128) NOT NULL) AS INTEGER)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((CAST(((0.658902689819128) NOT NULL) AS INTEGER)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2 HAVING ((GROUP_CONCAT(v0.c2))||(((0xffffffffe712254e)<>(MAX(MIN(v0.c1)))))) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING (NOT (((GROUP_CONCAT(v0.c2))||(((0Xffffffffe712254e)<>(MAX(MIN(v0.c1)))))))) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING ((((GROUP_CONCAT(v0.c2))||(((0Xffffffffe712254e)!=(MAX(MIN(v0.c1))))))) ISNULL);
SELECT ALL rt0.c2, v0.c1, v0.c0, rt0.c0, v0.c2, rt0.c1 FROM rt0, v0;
SELECT ALL rt0.c2, v0.c1, v0.c0, rt0.c0, v0.c2, rt0.c1 FROM rt0, v0 WHERE ((((((((((((((((rt0.c4)) BETWEEN ((v0.c1)) AND ((rt0.c2))))AND(((v0.c1)>>(v0.c0)))))OR(0.7740920147098207)))AND((('') IS TRUE))))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))AND(LIKELIHOOD(DISTINCT rt0.c0, 0.030289175735602192))))OR(((NULL) NOT BETWEEN (rt0.c1) AND (NULL))))) UNION ALL SELECT rt0.c2, v0.c1, v0.c0, rt0.c0, v0.c2, rt0.c1 FROM rt0, v0 WHERE ((NOT ((((((((((((((((rt0.c4)) BETWEEN ((v0.c1)) AND ((rt0.c2))))AND(((v0.c1)>>(v0.c0)))))OR(0.7740920147098207)))AND((('') IS TRUE))))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))AND(LIKELIHOOD(DISTINCT rt0.c0, 0.030289175735602192))))OR(((NULL) NOT BETWEEN (rt0.c1) AND (NULL))))))) UNION ALL SELECT ALL rt0.c2, v0.c1, v0.c0, rt0.c0, v0.c2, rt0.c1 FROM rt0, v0 WHERE ((((((((((((((((((rt0.c4)) BETWEEN ((v0.c1)) AND ((rt0.c2))))AND(((v0.c1)>>(v0.c0)))))OR(0.7740920147098207)))AND((('') IS TRUE))))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))AND(LIKELIHOOD(DISTINCT rt0.c0, 0.030289175735602192))))OR(((NULL) NOT BETWEEN (rt0.c1) AND (NULL))))) ISNULL));
SELECT ALL rt0.c2, v0.c1, v0.c0, rt0.c0, v0.c2, rt0.c1 FROM rt0, v0;
SELECT DISTINCT * FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM v0 NATURAL JOIN rt0 WHERE (0.01707907054574942) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN rt0 WHERE ((NOT (0.01707907054574942))) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN rt0 WHERE (((0.01707907054574942) ISNULL));
SELECT DISTINCT * FROM v0 NATURAL JOIN rt0;
SELECT rt0.c4, v0.c1, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c1, rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c4, v0.c1, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0 WHERE (((((((((((((rt0.c3)OR(CAST(rt0.c0 AS TEXT))))OR(((v0.c1) NOT BETWEEN (v0.c0) AND ('')))))AND('241368779')))OR(((v0.c0)>(rt0.c4)))))OR(CAST(rt0.c2 AS NUMERIC))))OR(CAST(rt0.c3 AS REAL)))) GROUP BY rt0.c4, v0.c1, rt0.c1, rt0.c2, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c4, v0.c1, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0 WHERE ((NOT (((((((((((((rt0.c3)OR(CAST(rt0.c0 AS TEXT))))OR(((v0.c1) NOT BETWEEN (v0.c0) AND ('')))))AND('241368779')))OR(((v0.c0)>(rt0.c4)))))OR(CAST(rt0.c2 AS NUMERIC))))OR(CAST(rt0.c3 AS REAL)))))) GROUP BY rt0.c4, v0.c1, rt0.c1, rt0.c2, rt0.c3, rt0.c0 UNION SELECT rt0.c4, v0.c1, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0 WHERE (((((((((((((((rt0.c3)OR(CAST(rt0.c0 AS TEXT))))OR(((v0.c1) NOT BETWEEN (v0.c0) AND ('')))))AND('241368779')))OR(((v0.c0)>(rt0.c4)))))OR(CAST(rt0.c2 AS NUMERIC))))OR(CAST(rt0.c3 AS REAL)))) ISNULL)) GROUP BY rt0.c4, v0.c1, rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c4, v0.c1, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c1, rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING MAX(TOTAL(MAX(v0.c0))) UNION ALL SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING (NOT (MAX(TOTAL(MAX(v0.c0))))) UNION ALL SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING ((MAX(TOTAL(MAX(v0.c0)))) ISNULL);
SELECT SUM(x'6005') FROM v0, rt0;
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE ((+ (TRIM(DISTINCT rt0.c0)))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT ((+ (TRIM(DISTINCT rt0.c0)))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((((+ (TRIM(DISTINCT rt0.c0)))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((v0.c0 IN ())) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((v0.c0 IN ())))) UNION SELECT DISTINCT * FROM v0 WHERE ((((v0.c0 IN ())) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0, rt0.c4, v0.c2, rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c4, v0.c2, rt0.c2, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c4, v0.c2, rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 WHERE ((~ (((x'') NOTNULL)))) GROUP BY v0.c0, rt0.c4, v0.c2, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL v0.c0, rt0.c4, v0.c2, rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 WHERE ((NOT ((~ (((x'') NOTNULL)))))) GROUP BY v0.c0, rt0.c4, v0.c2, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL v0.c0, rt0.c4, v0.c2, rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 WHERE ((((~ (((x'') NOTNULL)))) ISNULL)) GROUP BY v0.c0, rt0.c4, v0.c2, rt0.c2, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c4, v0.c2, rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c4, v0.c2, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING AVG(COUNT(*)) UNION ALL SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (CAST(((x'04c8') ISNULL) AS NUMERIC)) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (CAST(((x'04c8') ISNULL) AS NUMERIC)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((CAST(((x'04c8') ISNULL) AS NUMERIC)) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON v0.c0 COLLATE RTRIM;
SELECT DISTINCT rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON v0.c0 COLLATE RTRIM WHERE (((v0.c1) IS TRUE)) UNION SELECT DISTINCT rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON v0.c0 COLLATE RTRIM WHERE ((NOT (((v0.c1) IS TRUE)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON v0.c0 COLLATE RTRIM WHERE (((((v0.c1) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON v0.c0 COLLATE RTRIM;
SELECT v0.c2, rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY v0.c2, rt0.c1, v0.c0, rt0.c3;
SELECT v0.c2, rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 WHERE (((((rt0.c0)||(rt0.c4)))LIKE((- (rt0.c3))))) GROUP BY v0.c2, rt0.c1, v0.c0, rt0.c3 UNION SELECT v0.c2, rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 WHERE ((NOT (((((rt0.c0)||(rt0.c4)))LIKE((- (rt0.c3))))))) GROUP BY v0.c2, rt0.c1, v0.c0, rt0.c3 UNION SELECT v0.c2, rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 WHERE (((((((rt0.c0)||(rt0.c4)))LIKE((- (rt0.c3))))) ISNULL)) GROUP BY v0.c2, rt0.c1, v0.c0, rt0.c3;
SELECT v0.c2, rt0.c1, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY v0.c2, rt0.c1, v0.c0, rt0.c3;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING (MIN(v0.c2) IN (((v0.c0)<(MAX(v0.c0))))) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING (NOT ((MIN(v0.c2) IN (((v0.c0)<(MAX(v0.c0))))))) UNION ALL SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING (((MIN(v0.c2) IN (((v0.c0)<(MAX(v0.c0)))))) ISNULL);
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING (MIN(v0.c2) IN (((v0.c0)<(MAX(v0.c0))))) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING (NOT ((MIN(v0.c2) IN (((v0.c0)<(MAX(v0.c0))))))) UNION ALL SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING (((MIN(v0.c2) IN (((v0.c0)<(MAX(v0.c0)))))) ISNULL);
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE ((x'' IN ())) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT ((x'' IN ())))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((((x'' IN ())) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((+ ((+ (v0.c2))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((+ ((+ (v0.c2))))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((+ ((+ (v0.c2))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c3 FROM rt0 NOT INDEXED GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((~ (rt0.c4)))) AND ((((rt0.c3) IS TRUE))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN (((~ (rt0.c4)))) AND ((((rt0.c3) IS TRUE))))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN (((~ (rt0.c4)))) AND ((((rt0.c3) IS TRUE))))) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 NOT INDEXED GROUP BY rt0.c3;
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3 HAVING (((((((rt0.c1)OR(TOTAL(rt0.c0))))OR(rt0.c2)), v0.c0 COLLATE BINARY, TOTAL(rt0.c0)))=((((SUM(AVG(AVG(SUM(v0.c1))))) BETWEEN (rt0.c4) AND (MAX(AVG('Y')))), (- (SUM(SUM(SUM(rt0.c1))))), (+ (SUM(rt0.c4)))))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3 HAVING (NOT ((((((((rt0.c1)OR(TOTAL(rt0.c0))))OR(rt0.c2)), v0.c0 COLLATE BINARY, TOTAL(rt0.c0)))==((((SUM(AVG(AVG(SUM(v0.c1))))) BETWEEN (rt0.c4) AND (MAX(AVG('Y')))), (- (SUM(SUM(SUM(rt0.c1))))), (+ (SUM(rt0.c4)))))))) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3 HAVING (((((((((rt0.c1)OR(TOTAL(rt0.c0))))OR(rt0.c2)), v0.c0 COLLATE BINARY, TOTAL(rt0.c0)))=((((SUM(AVG(AVG(SUM(v0.c1))))) BETWEEN (rt0.c4) AND (MAX(AVG('Y')))), (- (SUM(SUM(SUM(rt0.c1))))), (+ (SUM(rt0.c4))))))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (('-1401616757' IN ())) UNION ALL SELECT * FROM v0 WHERE ((NOT (('-1401616757' IN ())))) UNION ALL SELECT * FROM v0 WHERE (((('-1401616757' IN ())) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c1, v0.c0 FROM v0;
SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE (v0.c1) UNION SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE ((NOT (v0.c1))) UNION SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE (((v0.c1) ISNULL));
SELECT DISTINCT v0.c1, v0.c0 FROM v0;
SELECT ALL v0.c1, v0.c0, rt0.c0, rt0.c1, v0.c2, rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY v0.c1, v0.c0, rt0.c0, rt0.c1, v0.c2, rt0.c2, rt0.c3;
SELECT ALL v0.c1, v0.c0, rt0.c0, rt0.c1, v0.c2, rt0.c2, rt0.c3 FROM v0, rt0 WHERE (((((v0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c2))) IN ())) GROUP BY v0.c1, v0.c0, rt0.c0, rt0.c1, v0.c2, rt0.c2, rt0.c3 UNION SELECT v0.c1, v0.c0, rt0.c0, rt0.c1, v0.c2, rt0.c2, rt0.c3 FROM v0, rt0 WHERE ((NOT (((((v0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c2))) IN ())))) GROUP BY v0.c1, v0.c0, rt0.c0, rt0.c1, v0.c2, rt0.c2, rt0.c3 UNION SELECT ALL v0.c1, v0.c0, rt0.c0, rt0.c1, v0.c2, rt0.c2, rt0.c3 FROM v0, rt0 WHERE (((((((v0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c2))) IN ())) ISNULL)) GROUP BY v0.c1, v0.c0, rt0.c0, rt0.c1, v0.c2, rt0.c2, rt0.c3;
SELECT ALL v0.c1, v0.c0, rt0.c0, rt0.c1, v0.c2, rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY v0.c1, v0.c0, rt0.c0, rt0.c1, v0.c2, rt0.c2, rt0.c3;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING UNICODE(CAST(SUM(0X5c05a918) AS NUMERIC)) UNION ALL SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING (NOT (UNICODE(CAST(SUM(0X5c05a918) AS NUMERIC)))) UNION ALL SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING ((UNICODE(CAST(SUM(0X5c05a918) AS NUMERIC))) ISNULL);
SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING UNICODE(CAST(SUM(0X5c05a918) AS NUMERIC)) UNION ALL SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING (NOT (UNICODE(CAST(SUM(0X5c05a918) AS NUMERIC)))) UNION ALL SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING ((UNICODE(CAST(SUM(0X5c05a918) AS NUMERIC))) ISNULL);
SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((rt0.c3 IN (((rt0.c3) IS TRUE)))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((rt0.c3 IN (((rt0.c3) IS TRUE)))))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c3 IN (((rt0.c3) IS TRUE)))) ISNULL));
SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT v0.c1, rt0.c4 FROM v0, rt0;
SELECT DISTINCT v0.c1, rt0.c4 FROM v0, rt0 WHERE ((((+ (rt0.c1))) NOT NULL)) UNION SELECT DISTINCT v0.c1, rt0.c4 FROM v0, rt0 WHERE ((NOT ((((+ (rt0.c1))) NOT NULL)))) UNION SELECT DISTINCT v0.c1, rt0.c4 FROM v0 NOT INDEXED, rt0 WHERE ((((((+ (rt0.c1))) NOT NULL)) ISNULL));
SELECT DISTINCT v0.c1, rt0.c4 FROM v0, rt0;
SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT ALL v0.c2, v0.c1 FROM v0 WHERE (((((v0.c0)>(v0.c1)))/(json_object(v0.c0, v0.c1)))) GROUP BY v0.c2, v0.c1 UNION SELECT v0.c2, v0.c1 FROM v0 WHERE ((NOT (((((v0.c0)>(v0.c1)))/(json_object(v0.c0, v0.c1)))))) GROUP BY v0.c2, v0.c1 UNION SELECT v0.c2, v0.c1 FROM v0 WHERE (((((((v0.c0)>(v0.c1)))/(json_object(v0.c0, v0.c1)))) ISNULL)) GROUP BY v0.c2, v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((MAX(SUM(MIN(MIN(v0.c1)))))|(CAST(GROUP_CONCAT(v0.c0) AS BLOB))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (((MAX(SUM(MIN(MIN(v0.c1)))))|(CAST(GROUP_CONCAT(v0.c0) AS BLOB))))) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((((MAX(SUM(MIN(MIN(v0.c1)))))|(CAST(GROUP_CONCAT(v0.c0) AS BLOB)))) ISNULL);
SELECT rt0.c3, v0.c1, rt0.c2 FROM v0, rt0;
SELECT ALL rt0.c3, v0.c1, rt0.c2 FROM v0, rt0 WHERE (((((v0.c2) BETWEEN (rt0.c3) AND (v0.c0))) BETWEEN ((((rt0.c1, rt0.c0, v0.c2))>((rt0.c0, 0.6273071499977078, rt0.c0)))) AND ('-565702639'))) UNION ALL SELECT rt0.c3, v0.c1, rt0.c2 FROM v0, rt0 WHERE ((NOT (((((v0.c2) BETWEEN (rt0.c3) AND (v0.c0))) BETWEEN ((((rt0.c1, rt0.c0, v0.c2))>((rt0.c0, 0.6273071499977078, rt0.c0)))) AND ('-565702639'))))) UNION ALL SELECT ALL rt0.c3, v0.c1, rt0.c2 FROM v0, rt0 WHERE (((((((v0.c2) BETWEEN (rt0.c3) AND (v0.c0))) BETWEEN ((((rt0.c1, rt0.c0, v0.c2))>((rt0.c0, 0.6273071499977078, rt0.c0)))) AND ('-565702639'))) ISNULL));
SELECT rt0.c3, v0.c1, rt0.c2 FROM v0, rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (LIKELY(((((rt0.c3)OR(rt0.c1)))OR(x'b42759217696')))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (LIKELY(((((rt0.c3)OR(rt0.c1)))OR(x'b42759217696')))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((LIKELY(((((rt0.c3)OR(rt0.c1)))OR(x'b42759217696')))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c1, v0.c2, v0.c1 FROM v0 INNER JOIN rt0 ON (((v0.c1)) BETWEEN (((+ (rt0.c3)))) AND ((v0.c0 COLLATE NOCASE))) GROUP BY rt0.c1, v0.c2, v0.c1;
SELECT rt0.c1, v0.c2, v0.c1 FROM v0 INNER JOIN rt0 ON (((v0.c1)) BETWEEN (((+ (rt0.c3)))) AND ((v0.c0 COLLATE NOCASE))) WHERE ((((((+ (rt0.c4)))OR(((rt0.c3)%(v0.c1)))))AND(v0.c1))) GROUP BY rt0.c1, v0.c2, v0.c1 UNION SELECT rt0.c1, v0.c2, v0.c1 FROM v0 INNER JOIN rt0 ON (((v0.c1)) BETWEEN (((+ (rt0.c3)))) AND ((v0.c0 COLLATE NOCASE))) WHERE ((NOT ((((((+ (rt0.c4)))OR(((rt0.c3)%(v0.c1)))))AND(v0.c1))))) GROUP BY rt0.c1, v0.c2, v0.c1 UNION SELECT rt0.c1, v0.c2, v0.c1 FROM v0 INNER JOIN rt0 ON (((v0.c1)) BETWEEN (((+ (rt0.c3)))) AND ((v0.c0 COLLATE NOCASE))) WHERE ((((((((+ (rt0.c4)))OR(((rt0.c3)%(v0.c1)))))AND(v0.c1))) ISNULL)) GROUP BY rt0.c1, v0.c2, v0.c1;
SELECT rt0.c1, v0.c2, v0.c1 FROM v0 INNER JOIN rt0 ON (((v0.c1)) BETWEEN (((+ (rt0.c3)))) AND ((v0.c0 COLLATE NOCASE))) GROUP BY rt0.c1, v0.c2, v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING (~ (TOTAL(v0.c1))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT ((~ (TOTAL(v0.c1))))) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING (((~ (TOTAL(v0.c1)))) ISNULL);
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING (~ (TOTAL(v0.c1))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT ((~ (TOTAL(v0.c1))))) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING (((~ (TOTAL(v0.c1)))) ISNULL);
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON rt0.c3;
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON rt0.c3 WHERE (((((LIKELY(rt0.c1))AND(((rt0.c4)&(x'264f')))))AND(CAST(v0.c1 AS NUMERIC)))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON rt0.c3 WHERE ((NOT (((((LIKELY(rt0.c1))AND(((rt0.c4)&(x'264f')))))AND(CAST(v0.c1 AS NUMERIC)))))) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN v0 ON rt0.c3 WHERE (((((((LIKELY(rt0.c1))AND(((rt0.c4)&(x'264f')))))AND(CAST(v0.c1 AS NUMERIC)))) ISNULL));
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON rt0.c3;
SELECT DISTINCT rt0.c4, v0.c0, v0.c1, rt0.c0, rt0.c3, v0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c4, v0.c0, v0.c1, rt0.c0, rt0.c3, v0.c2 FROM rt0, v0 WHERE (((((((((((rt0.c0) NOT NULL))AND((rt0.c2 IN ()))))OR(rt0.c2 COLLATE RTRIM)))OR(((NULL) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c2)||(rt0.c3))))) UNION SELECT DISTINCT rt0.c4, v0.c0, v0.c1, rt0.c0, rt0.c3, v0.c2 FROM rt0, v0 WHERE ((NOT (((((((((((rt0.c0) NOT NULL))AND((rt0.c2 IN ()))))OR(rt0.c2 COLLATE RTRIM)))OR(((NULL) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c2)||(rt0.c3))))))) UNION SELECT DISTINCT rt0.c4, v0.c0, v0.c1, rt0.c0, rt0.c3, v0.c2 FROM rt0, v0 WHERE (((((((((((((rt0.c0) NOT NULL))AND((rt0.c2 IN ()))))OR(rt0.c2 COLLATE RTRIM)))OR(((NULL) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c2)||(rt0.c3))))) ISNULL));
SELECT DISTINCT rt0.c4, v0.c0, v0.c1, rt0.c0, rt0.c3, v0.c2 FROM rt0, v0;
SELECT ALL rt0.c2, rt0.c1, v0.c2 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, v0.c2;
SELECT ALL rt0.c2, rt0.c1, v0.c2 FROM rt0, v0 WHERE (((((rt0.c3) NOT BETWEEN (v0.c2) AND (rt0.c2))) BETWEEN (CAST(v0.c2 AS INTEGER)) AND (((rt0.c0)+(rt0.c1))))) GROUP BY rt0.c2, rt0.c1, v0.c2 UNION SELECT rt0.c2, rt0.c1, v0.c2 FROM rt0, v0 WHERE ((NOT (((((rt0.c3) NOT BETWEEN (v0.c2) AND (rt0.c2))) BETWEEN (CAST(v0.c2 AS INTEGER)) AND (((rt0.c0)+(rt0.c1))))))) GROUP BY rt0.c2, rt0.c1, v0.c2 UNION SELECT rt0.c2, rt0.c1, v0.c2 FROM rt0, v0 NOT INDEXED WHERE (((((((rt0.c3) NOT BETWEEN (v0.c2) AND (rt0.c2))) BETWEEN (CAST(v0.c2 AS INTEGER)) AND (((rt0.c0)+(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, v0.c2;
SELECT ALL rt0.c2, rt0.c1, v0.c2 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (((GROUP_CONCAT(MIN(GROUP_CONCAT(COUNT(MAX(v0.c2)))))))==((v0.c2))) COLLATE RTRIM UNION ALL SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (NOT ((((GROUP_CONCAT(MIN(GROUP_CONCAT(COUNT(MAX(v0.c2)))))))=((v0.c2))) COLLATE RTRIM)) UNION ALL SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (((((GROUP_CONCAT(MIN(GROUP_CONCAT(COUNT(MAX(v0.c2)))))))=((v0.c2))) COLLATE RTRIM) ISNULL);
SELECT v0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0, v0.c2 FROM v0 FULL OUTER JOIN rt0 ON (((-1.1866599E7 IN ()))IS NOT((((rt0.c4))<=((v0.c2)))));
SELECT ALL v0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0, v0.c2 FROM v0 FULL OUTER JOIN rt0 ON (((-1.1866599E7 IN ()))IS NOT((((rt0.c4))<=((v0.c2))))) WHERE (((rt0.c3) NOTNULL) COLLATE BINARY) UNION ALL SELECT v0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0, v0.c2 FROM v0 FULL OUTER JOIN rt0 ON (((-1.1866599E7 IN ()))IS NOT((((rt0.c4))<=((v0.c2))))) WHERE ((NOT (((rt0.c3) NOTNULL) COLLATE BINARY))) UNION ALL SELECT v0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0, v0.c2 FROM v0 FULL OUTER JOIN rt0 ON (((-1.1866599E7 IN ()))IS NOT((((rt0.c4))<=((v0.c2))))) WHERE (((((rt0.c3) NOTNULL) COLLATE BINARY) ISNULL));
SELECT v0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c0, v0.c2 FROM v0 FULL OUTER JOIN rt0 ON (((-1.1866599E7 IN ()))IS NOT((((rt0.c4))<=((v0.c2)))));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (5.92292106E8) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (5.92292106E8))) UNION SELECT DISTINCT * FROM rt0 WHERE (((5.92292106E8) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c4, rt0.c1, v0.c2, v0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, v0.c2, v0.c1;
SELECT rt0.c4, rt0.c1, v0.c2, v0.c1 FROM rt0, v0 WHERE (((CAST(rt0.c2 AS INTEGER))<>(((0.6512452867708303)AND(rt0.c2))))) GROUP BY rt0.c4, rt0.c1, v0.c2, v0.c1 UNION SELECT rt0.c4, rt0.c1, v0.c2, v0.c1 FROM rt0, v0 WHERE ((NOT (((CAST(rt0.c2 AS INTEGER))!=(((0.6512452867708303)AND(rt0.c2))))))) GROUP BY rt0.c4, rt0.c1, v0.c2, v0.c1 UNION SELECT rt0.c4, rt0.c1, v0.c2, v0.c1 FROM rt0, v0 WHERE (((((CAST(rt0.c2 AS INTEGER))!=(((0.6512452867708303)AND(rt0.c2))))) ISNULL)) GROUP BY rt0.c4, rt0.c1, v0.c2, v0.c1;
SELECT rt0.c4, rt0.c1, v0.c2, v0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, v0.c2, v0.c1;
SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c1, rt0.c3 HAVING ((((GROUP_CONCAT(rt0.c0)) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT NULL) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c1, rt0.c3 HAVING (NOT (((((GROUP_CONCAT(rt0.c0)) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT NULL))) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c1, rt0.c3 HAVING ((((((GROUP_CONCAT(rt0.c0)) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT NULL)) ISNULL);
SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c1, rt0.c3 HAVING ((((GROUP_CONCAT(rt0.c0)) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT NULL) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c1, rt0.c3 HAVING (NOT (((((GROUP_CONCAT(rt0.c0)) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT NULL))) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c1, rt0.c3 HAVING ((((((GROUP_CONCAT(rt0.c0)) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT NULL)) ISNULL);
SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c1, rt0.c3;
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON (+ (CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 ELSE v0.c1 END));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON (+ (CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 ELSE v0.c1 END)) WHERE ('-1481640380') UNION ALL SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON (+ (CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 ELSE v0.c1 END)) WHERE ((NOT ('-1481640380'))) UNION ALL SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON (+ (CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 ELSE v0.c1 END)) WHERE ((('-1481640380') ISNULL));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON (+ (CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 ELSE v0.c1 END));
SELECT DISTINCT v0.c0, rt0.c4, rt0.c0, rt0.c1, v0.c2, v0.c1 FROM rt0, v0;
SELECT DISTINCT v0.c0, rt0.c4, rt0.c0, rt0.c1, v0.c2, v0.c1 FROM rt0, v0 WHERE (((((((('FRc\n')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))AND((((v0.c2))<((v0.c1))))))AND(rt0.c3 COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0, rt0.c4, rt0.c0, rt0.c1, v0.c2, v0.c1 FROM rt0, v0 WHERE ((NOT (((((((('FRc\n')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))AND((((v0.c2))<((v0.c1))))))AND(rt0.c3 COLLATE NOCASE))))) UNION SELECT DISTINCT v0.c0, rt0.c4, rt0.c0, rt0.c1, v0.c2, v0.c1 FROM rt0, v0 WHERE (((((((((('FRc\n')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))AND((((v0.c2))<((v0.c1))))))AND(rt0.c3 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c4, rt0.c0, rt0.c1, v0.c2, v0.c1 FROM rt0, v0;
SELECT ALL rt0.c2, v0.c1, v0.c0, rt0.c0, v0.c2, rt0.c1, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, v0.c1, v0.c0, rt0.c0, v0.c2, rt0.c1, rt0.c4, rt0.c3;
SELECT ALL rt0.c2, v0.c1, v0.c0, rt0.c0, v0.c2, rt0.c1, rt0.c4, rt0.c3 FROM v0, rt0 WHERE ((((((+ (rt0.c2)))OR(((v0.c1) NOT BETWEEN (v0.c1) AND (rt0.c2)))))OR((v0.c2 IN (v0.c2))))) GROUP BY rt0.c2, v0.c1, v0.c0, rt0.c0, v0.c2, rt0.c1, rt0.c4, rt0.c3 UNION SELECT rt0.c2, v0.c1, v0.c0, rt0.c0, v0.c2, rt0.c1, rt0.c4, rt0.c3 FROM v0, rt0 WHERE ((NOT ((((((+ (rt0.c2)))OR(((v0.c1) NOT BETWEEN (v0.c1) AND (rt0.c2)))))OR((v0.c2 IN (v0.c2))))))) GROUP BY rt0.c2, v0.c1, v0.c0, rt0.c0, v0.c2, rt0.c1, rt0.c4, rt0.c3 UNION SELECT rt0.c2, v0.c1, v0.c0, rt0.c0, v0.c2, rt0.c1, rt0.c4, rt0.c3 FROM v0, rt0 WHERE ((((((((+ (rt0.c2)))OR(((v0.c1) NOT BETWEEN (v0.c1) AND (rt0.c2)))))OR((v0.c2 IN (v0.c2))))) ISNULL)) GROUP BY rt0.c2, v0.c1, v0.c0, rt0.c0, v0.c2, rt0.c1, rt0.c4, rt0.c3;
SELECT ALL rt0.c2, v0.c1, v0.c0, rt0.c0, v0.c2, rt0.c1, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, v0.c1, v0.c0, rt0.c0, v0.c2, rt0.c1, rt0.c4, rt0.c3;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c4;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c4 HAVING COUNT(*) COLLATE BINARY UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c4 HAVING (NOT (COUNT(*) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c4 HAVING ((COUNT(*) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c4;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c4 HAVING COUNT(*) COLLATE BINARY UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c4 HAVING (NOT (COUNT(*) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c4 HAVING ((COUNT(*) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c4;
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE ((v0.c0 IN ()) COLLATE RTRIM) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT ((v0.c0 IN ()) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((((v0.c0 IN ()) COLLATE RTRIM) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (CASE WHEN rt0.c3 THEN ((rt0.c3)|(v0.c2)) WHEN IFNULL(rt0.c0, '') THEN CASE rt0.c2  WHEN v0.c2 THEN '1725388531' WHEN rt0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN v0.c1 END WHEN ((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2)) THEN CAST(rt0.c4 AS REAL) END) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (CASE WHEN rt0.c3 THEN ((rt0.c3)|(v0.c2)) WHEN IFNULL(rt0.c0, '') THEN CASE rt0.c2  WHEN v0.c2 THEN '1725388531' WHEN rt0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN v0.c1 END WHEN ((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2)) THEN CAST(rt0.c4 AS REAL) END))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((CASE WHEN rt0.c3 THEN ((rt0.c3)|(v0.c2)) WHEN IFNULL(rt0.c0, '') THEN CASE rt0.c2  WHEN v0.c2 THEN '1725388531' WHEN rt0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN v0.c1 END WHEN ((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2)) THEN CAST(rt0.c4 AS REAL) END) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c2, v0.c1, rt0.c0, v0.c2, v0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, v0.c1, rt0.c0, v0.c2, v0.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT ALL rt0.c2, v0.c1, rt0.c0, v0.c2, v0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0 WHERE (((CASE v0.c1  WHEN v0.c0 THEN v0.c1 ELSE rt0.c4 END)<=(((0.41927705131913084)IS(rt0.c4))))) GROUP BY rt0.c2, v0.c1, rt0.c0, v0.c2, v0.c0, rt0.c4, rt0.c3, rt0.c1 UNION SELECT rt0.c2, v0.c1, rt0.c0, v0.c2, v0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0 WHERE ((NOT (((CASE v0.c1  WHEN v0.c0 THEN v0.c1 ELSE rt0.c4 END)<=(((0.41927705131913084)IS(rt0.c4))))))) GROUP BY rt0.c2, v0.c1, rt0.c0, v0.c2, v0.c0, rt0.c4, rt0.c3, rt0.c1 UNION SELECT rt0.c2, v0.c1, rt0.c0, v0.c2, v0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0 WHERE (((((CASE v0.c1  WHEN v0.c0 THEN v0.c1 ELSE rt0.c4 END)<=(((0.41927705131913084)IS(rt0.c4))))) ISNULL)) GROUP BY rt0.c2, v0.c1, rt0.c0, v0.c2, v0.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT rt0.c2, v0.c1, rt0.c0, v0.c2, v0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, v0.c1, rt0.c0, v0.c2, v0.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING CASE TOTAL(rt0.c2)  WHEN json_array(COUNT(MIN(GROUP_CONCAT(rt0.c2))), rt0.c4, COUNT(AVG(rt0.c2)), MIN(rt0.c4)) THEN AVG(rt0.c4) COLLATE BINARY WHEN rt0.c4 THEN AVG(TOTAL(MIN(COUNT(*)))) WHEN rt0.c0 THEN ((rt0.c2)GLOB('''kzti驙')) WHEN ((COUNT(*))>(COUNT(*))) THEN TOTAL(rt0.c3) WHEN CASE WHEN rt0.c3 THEN GROUP_CONCAT(rt0.c1) END THEN (rt0.c4 IN (COUNT(*))) END UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (CASE TOTAL(rt0.c2)  WHEN json_array(COUNT(MIN(GROUP_CONCAT(rt0.c2))), rt0.c4, COUNT(AVG(rt0.c2)), MIN(rt0.c4)) THEN AVG(rt0.c4) COLLATE BINARY WHEN rt0.c4 THEN AVG(TOTAL(MIN(COUNT(*)))) WHEN rt0.c0 THEN ((rt0.c2)GLOB('''kzti驙')) WHEN ((COUNT(*))>(COUNT(*))) THEN TOTAL(rt0.c3) WHEN CASE WHEN rt0.c3 THEN GROUP_CONCAT(rt0.c1) END THEN (rt0.c4 IN (COUNT(*))) END)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((CASE TOTAL(rt0.c2)  WHEN json_array(COUNT(MIN(GROUP_CONCAT(rt0.c2))), rt0.c4, COUNT(AVG(rt0.c2)), MIN(rt0.c4)) THEN AVG(rt0.c4) COLLATE BINARY WHEN rt0.c4 THEN AVG(TOTAL(MIN(COUNT(*)))) WHEN rt0.c0 THEN ((rt0.c2)GLOB('''kzti驙')) WHEN ((COUNT(*))>(COUNT(*))) THEN TOTAL(rt0.c3) WHEN CASE WHEN rt0.c3 THEN GROUP_CONCAT(rt0.c1) END THEN (rt0.c4 IN (COUNT(*))) END) ISNULL);
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c4, v0.c1, v0.c0, rt0.c0 FROM v0 INNER JOIN rt0 ON ((CAST(rt0.c4 AS REAL))<(((v0.c1) ISNULL)));
SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c4, v0.c1, v0.c0, rt0.c0 FROM v0 INNER JOIN rt0 ON ((CAST(rt0.c4 AS REAL))<(((v0.c1) ISNULL))) WHERE (CASE WHEN rt0.c1 THEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c4)) ELSE (NOT (rt0.c3)) END) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c4, v0.c1, v0.c0, rt0.c0 FROM v0 INNER JOIN rt0 ON ((CAST(rt0.c4 AS REAL))<(((v0.c1) ISNULL))) WHERE ((NOT (CASE WHEN rt0.c1 THEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c4)) ELSE (NOT (rt0.c3)) END))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c4, v0.c1, v0.c0, rt0.c0 FROM v0 INNER JOIN rt0 ON ((CAST(rt0.c4 AS REAL))<(((v0.c1) ISNULL))) WHERE (((CASE WHEN rt0.c1 THEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c4)) ELSE (NOT (rt0.c3)) END) ISNULL));
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c4, v0.c1, v0.c0, rt0.c0 FROM v0 INNER JOIN rt0 ON ((CAST(rt0.c4 AS REAL))<(((v0.c1) ISNULL)));
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((((v0.c2)) BETWEEN (((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c1))))) AND ((((rt0.c2) NOTNULL))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((((v0.c2)) BETWEEN (((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c1))))) AND ((((rt0.c2) NOTNULL))))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((((v0.c2)) BETWEEN (((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c1))))) AND ((((rt0.c2) NOTNULL))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c3, v0.c2, v0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, v0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, v0.c2, v0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (v0.c2) GROUP BY rt0.c3, v0.c2, v0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c3, v0.c2, v0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (v0.c2))) GROUP BY rt0.c3, v0.c2, v0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c3, v0.c2, v0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (((v0.c2) ISNULL)) GROUP BY rt0.c3, v0.c2, v0.c1, rt0.c0, rt0.c2;
SELECT rt0.c3, v0.c2, v0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, v0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING MIN(CASE WHEN rt0.c4 THEN v0.c2 END) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING (NOT (MIN(CASE WHEN rt0.c4 THEN v0.c2 END))) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING ((MIN(CASE WHEN rt0.c4 THEN v0.c2 END)) ISNULL);
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING MIN(CASE WHEN rt0.c4 THEN v0.c2 END) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING (NOT (MIN(CASE WHEN rt0.c4 THEN v0.c2 END))) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING ((MIN(CASE WHEN rt0.c4 THEN v0.c2 END)) ISNULL);
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (CAST(CAST(rt0.c4 AS REAL) AS TEXT)) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (CAST(CAST(rt0.c4 AS REAL) AS TEXT)))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((CAST(CAST(rt0.c4 AS REAL) AS TEXT)) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)|(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE NOCASE)|(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))))) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c1 COLLATE NOCASE)|(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c4;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE ((((+ (rt0.c2)))IS(((rt0.c1) ISNULL)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c4 UNION SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT ((((+ (rt0.c2)))IS(((rt0.c1) ISNULL)))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE ((((((+ (rt0.c2)))IS(((rt0.c1) ISNULL)))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c4;
SELECT v0.c1, rt0.c1, v0.c2 FROM rt0 NOT INDEXED, v0 GROUP BY v0.c1, rt0.c1, v0.c2;
SELECT v0.c1, rt0.c1, v0.c2 FROM rt0, v0 GROUP BY v0.c1, rt0.c1, v0.c2 HAVING COUNT(*) UNION ALL SELECT v0.c1, rt0.c1, v0.c2 FROM rt0, v0 GROUP BY v0.c1, rt0.c1, v0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c1, rt0.c1, v0.c2 FROM rt0, v0 GROUP BY v0.c1, rt0.c1, v0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c1, rt0.c1, v0.c2 FROM rt0 NOT INDEXED, v0 GROUP BY v0.c1, rt0.c1, v0.c2;
SELECT v0.c1, rt0.c1, v0.c2 FROM rt0, v0 GROUP BY v0.c1, rt0.c1, v0.c2 HAVING COUNT(*) UNION ALL SELECT v0.c1, rt0.c1, v0.c2 FROM rt0, v0 GROUP BY v0.c1, rt0.c1, v0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c1, rt0.c1, v0.c2 FROM rt0, v0 GROUP BY v0.c1, rt0.c1, v0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c1, rt0.c1, v0.c2 FROM rt0 NOT INDEXED, v0 GROUP BY v0.c1, rt0.c1, v0.c2;
SELECT rt0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE (x'') UNION ALL SELECT rt0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (x''))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE (((x'') ISNULL));
SELECT rt0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE (CAST(COALESCE(rt0.c2, rt0.c3) AS NUMERIC)) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT (CAST(COALESCE(rt0.c2, rt0.c3) AS NUMERIC)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE (((CAST(COALESCE(rt0.c2, rt0.c3) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0;
SELECT ALL v0.c2, rt0.c3, rt0.c2, v0.c1, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY v0.c2, rt0.c3, rt0.c2, v0.c1, rt0.c4, rt0.c0;
SELECT ALL v0.c2, rt0.c3, rt0.c2, v0.c1, rt0.c4, rt0.c0 FROM rt0, v0 WHERE (rt0.c0) GROUP BY v0.c2, rt0.c3, rt0.c2, v0.c1, rt0.c4, rt0.c0 UNION SELECT v0.c2, rt0.c3, rt0.c2, v0.c1, rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((NOT (rt0.c0))) GROUP BY v0.c2, rt0.c3, rt0.c2, v0.c1, rt0.c4, rt0.c0 UNION SELECT ALL v0.c2, rt0.c3, rt0.c2, v0.c1, rt0.c4, rt0.c0 FROM rt0, v0 WHERE (((rt0.c0) ISNULL)) GROUP BY v0.c2, rt0.c3, rt0.c2, v0.c1, rt0.c4, rt0.c0;
SELECT ALL v0.c2, rt0.c3, rt0.c2, v0.c1, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY v0.c2, rt0.c3, rt0.c2, v0.c1, rt0.c4, rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (TOTAL(MIN(TOTAL(TOTAL(v0.c2)))) IN ()) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((TOTAL(MIN(TOTAL(TOTAL(v0.c2)))) IN ()))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((TOTAL(MIN(TOTAL(TOTAL(v0.c2)))) IN ())) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (TOTAL(MIN(TOTAL(TOTAL(v0.c2)))) IN ()) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((TOTAL(MIN(TOTAL(TOTAL(v0.c2)))) IN ()))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((TOTAL(MIN(TOTAL(TOTAL(v0.c2)))) IN ())) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((((((((CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END)OR(CASE ''  WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '503945817' WHEN x'2d23cc93' THEN v0.c2 WHEN 0.31840195993932996 THEN v0.c0 END)))AND(v0.c1 COLLATE NOCASE)))OR((~ (x'')))))AND(CAST(v0.c1 AS TEXT)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((((((CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END)OR(CASE ''  WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '503945817' WHEN x'2d23cc93' THEN v0.c2 WHEN 0.31840195993932996 THEN v0.c0 END)))AND(v0.c1 COLLATE NOCASE)))OR((~ (x'')))))AND(CAST(v0.c1 AS TEXT)))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((((((CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END)OR(CASE ''  WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '503945817' WHEN x'2d23cc93' THEN v0.c2 WHEN 0.31840195993932996 THEN v0.c0 END)))AND(v0.c1 COLLATE NOCASE)))OR((~ (x'')))))AND(CAST(v0.c1 AS TEXT)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2 IN ())) IS TRUE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2 IN ())) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE ((((((rt0.c2 IN ())) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT v0.c0, v0.c2 FROM v0 WHERE (TYPEOF(DISTINCT ((v0.c0)<=(v0.c1)))) GROUP BY v0.c0, v0.c2 UNION SELECT v0.c0, v0.c2 FROM v0 WHERE ((NOT (TYPEOF(DISTINCT ((v0.c0)<=(v0.c1)))))) GROUP BY v0.c0, v0.c2 UNION SELECT ALL v0.c0, v0.c2 FROM v0 WHERE (((TYPEOF(DISTINCT ((v0.c0)<=(v0.c1)))) ISNULL)) GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING 0.11028793679133775 UNION ALL SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING (NOT (0.11028793679133775)) UNION ALL SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING ((0.11028793679133775) ISNULL);
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING 0.11028793679133775 UNION ALL SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING (NOT (0.11028793679133775)) UNION ALL SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING ((0.11028793679133775) ISNULL);
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (LIKELIHOOD(((v0.c2)&(v0.c2)), 0.6194188648325147)) UNION ALL SELECT * FROM v0 WHERE ((NOT (LIKELIHOOD(((v0.c2)&(v0.c2)), 0.6194188648325147)))) UNION ALL SELECT ALL * FROM v0 WHERE (((LIKELIHOOD(((v0.c2)&(v0.c2)), 0.6194188648325147)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE (((((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c0))) IS FALSE)) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (((((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c0))) IS FALSE)))) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE (((((((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0;
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, rt0 WHERE ((503945817 IN (UPPER(DISTINCT rt0.c3)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM v0, rt0 WHERE ((NOT ((503945817 IN (UPPER(DISTINCT rt0.c3)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM v0, rt0 WHERE ((((503945817 IN (UPPER(DISTINCT rt0.c3)))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (+ (MIN(COUNT(rt0.c1)))) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT ((+ (MIN(COUNT(rt0.c1)))))) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (((+ (MIN(COUNT(rt0.c1))))) ISNULL);
SELECT rt0.c0, v0.c1, v0.c2, rt0.c4, rt0.c2 FROM rt0 NATURAL JOIN v0;
SELECT rt0.c0, v0.c1, v0.c2, rt0.c4, rt0.c2 FROM rt0 NATURAL JOIN v0 WHERE (rt0.c0) UNION ALL SELECT rt0.c0, v0.c1, v0.c2, rt0.c4, rt0.c2 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT rt0.c0, v0.c1, v0.c2, rt0.c4, rt0.c2 FROM rt0 NATURAL JOIN v0 WHERE (((rt0.c0) ISNULL));
SELECT rt0.c0, v0.c1, v0.c2, rt0.c4, rt0.c2 FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((CAST(rt0.c1 AS INTEGER))==(rt0.c3))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((CAST(rt0.c1 AS INTEGER))=(rt0.c3))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((CAST(rt0.c1 AS INTEGER))=(rt0.c3))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c3, v0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c4;
SELECT ALL rt0.c3, v0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c4 FROM v0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((NULL)) AND (('2052369690')))) GROUP BY rt0.c3, v0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c4 UNION SELECT rt0.c3, v0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c4 FROM v0, rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((NULL)) AND (('2052369690')))))) GROUP BY rt0.c3, v0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c4 UNION SELECT ALL rt0.c3, v0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c4 FROM v0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((NULL)) AND (('2052369690')))) ISNULL)) GROUP BY rt0.c3, v0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c4;
SELECT rt0.c3, v0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c4;
SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1 HAVING MAX(COUNT(*)) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((((((v0.c0)OR('Y')))AND(((v0.c2) NOT NULL))))OR(CAST(v0.c0 AS BLOB)))) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((NOT (((((((v0.c0)OR('Y')))AND(((v0.c2) NOT NULL))))OR(CAST(v0.c0 AS BLOB)))))) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((((((((v0.c0)OR('Y')))AND(((v0.c2) NOT NULL))))OR(CAST(v0.c0 AS BLOB)))) ISNULL));
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((NOT (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((NOT (rt0.c2))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT v0.c0, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c3;
SELECT v0.c0, rt0.c3 FROM v0, rt0 WHERE (((rt0.c1)<<(CAST(rt0.c3 AS REAL)))) GROUP BY v0.c0, rt0.c3 UNION SELECT ALL v0.c0, rt0.c3 FROM v0, rt0 WHERE ((NOT (((rt0.c1)<<(CAST(rt0.c3 AS REAL)))))) GROUP BY v0.c0, rt0.c3 UNION SELECT v0.c0, rt0.c3 FROM v0, rt0 WHERE (((((rt0.c1)<<(CAST(rt0.c3 AS REAL)))) ISNULL)) GROUP BY v0.c0, rt0.c3;
SELECT v0.c0, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c3;
SELECT ALL v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1;
SELECT v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1 HAVING AVG(AVG(v0.c2)) UNION ALL SELECT ALL v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1 HAVING (NOT (AVG(AVG(v0.c2)))) UNION ALL SELECT ALL v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1 HAVING ((AVG(AVG(v0.c2))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, v0.c0 FROM v0, rt0;
SELECT rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 WHERE (HEX(rt0.c2 COLLATE RTRIM)) UNION ALL SELECT rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((NOT (HEX(rt0.c2 COLLATE RTRIM)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, v0.c0 FROM v0, rt0 WHERE (((HEX(rt0.c2 COLLATE RTRIM)) ISNULL));
SELECT ALL rt0.c0, rt0.c2, v0.c0 FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((((((rt0.c3) NOT NULL))AND(rt0.c2 COLLATE RTRIM)))OR(NULLIF(DISTINCT rt0.c3, v0.c1)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((((((rt0.c3) NOT NULL))AND(rt0.c2 COLLATE RTRIM)))OR(NULLIF(DISTINCT rt0.c3, v0.c1)))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((((((rt0.c3) NOT NULL))AND(rt0.c2 COLLATE RTRIM)))OR(NULLIF(DISTINCT rt0.c3, v0.c1)))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((((- (-224718366))) NOTNULL)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((((- (-224718366))) NOTNULL)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((((- (-224718366))) NOTNULL)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(MAX(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(MAX(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(MAX(v0.c0))) ISNULL);
SELECT rt0.c3, rt0.c1, v0.c2 FROM v0, rt0;
SELECT rt0.c3, rt0.c1, v0.c2 FROM v0, rt0 WHERE (CAST(LOWER(DISTINCT v0.c1) AS NUMERIC)) UNION ALL SELECT rt0.c3, rt0.c1, v0.c2 FROM v0, rt0 WHERE ((NOT (CAST(LOWER(DISTINCT v0.c1) AS NUMERIC)))) UNION ALL SELECT rt0.c3, rt0.c1, v0.c2 FROM v0, rt0 WHERE (((CAST(LOWER(DISTINCT v0.c1) AS NUMERIC)) ISNULL));
SELECT rt0.c3, rt0.c1, v0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c4, rt0.c1, v0.c0, v0.c2, rt0.c2, v0.c1, rt0.c3 FROM v0, rt0;
SELECT DISTINCT rt0.c4, rt0.c1, v0.c0, v0.c2, rt0.c2, v0.c1, rt0.c3 FROM v0, rt0 WHERE (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY) UNION SELECT DISTINCT rt0.c4, rt0.c1, v0.c0, v0.c2, rt0.c2, v0.c1, rt0.c3 FROM v0, rt0 WHERE ((NOT (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c4, rt0.c1, v0.c0, v0.c2, rt0.c2, v0.c1, rt0.c3 FROM v0, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c1, v0.c0, v0.c2, rt0.c2, v0.c1, rt0.c3 FROM v0, rt0;
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c4) IS TRUE))|(((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3))))) GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c4) IS TRUE))|(((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3))))))) GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c4) IS TRUE))|(((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3))))) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((COUNT(SUM(0.935092105367436)))-(MAX(COUNT(*)))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (((COUNT(SUM(0.935092105367436)))-(MAX(COUNT(*)))))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((((COUNT(SUM(0.935092105367436)))-(MAX(COUNT(*))))) ISNULL);
SELECT ALL * FROM rt0 NATURAL JOIN v0;
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (CAST(rt0.c4 COLLATE NOCASE AS NUMERIC)) UNION ALL SELECT * FROM rt0 NATURAL JOIN v0 WHERE ((NOT (CAST(rt0.c4 COLLATE NOCASE AS NUMERIC)))) UNION ALL SELECT * FROM rt0 NATURAL JOIN v0 WHERE (((CAST(rt0.c4 COLLATE NOCASE AS NUMERIC)) ISNULL));
SELECT ALL * FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST(IFNULL(v0.c0, 0) AS NUMERIC)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST(IFNULL(v0.c0, 0) AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST(IFNULL(v0.c0, 0) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1;
SELECT ALL v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1 HAVING CASE WHEN AVG(GROUP_CONCAT(SUM(v0.c2))) THEN AVG(v0.c1) WHEN MIN(v0.c1) THEN GROUP_CONCAT(v0.c1) WHEN CAST(COUNT(MAX(COUNT(v0.c2))) AS INTEGER) THEN COUNT(v0.c2) ELSE SUM(COUNT(SUM(v0.c1))) END UNION ALL SELECT ALL v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1 HAVING (NOT (CASE WHEN AVG(GROUP_CONCAT(SUM(v0.c2))) THEN AVG(v0.c1) WHEN MIN(v0.c1) THEN GROUP_CONCAT(v0.c1) WHEN CAST(COUNT(MAX(COUNT(v0.c2))) AS INTEGER) THEN COUNT(v0.c2) ELSE SUM(COUNT(SUM(v0.c1))) END)) UNION ALL SELECT ALL v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1 HAVING ((CASE WHEN AVG(GROUP_CONCAT(SUM(v0.c2))) THEN AVG(v0.c1) WHEN MIN(v0.c1) THEN GROUP_CONCAT(v0.c1) WHEN CAST(COUNT(MAX(COUNT(v0.c2))) AS INTEGER) THEN COUNT(v0.c2) ELSE SUM(COUNT(SUM(v0.c1))) END) ISNULL);
SELECT ALL v0.c2, rt0.c1, rt0.c2, rt0.c3 FROM rt0 CROSS JOIN v0 ON ((((rt0.c1)<>(rt0.c0)))%(((rt0.c1)GLOB(rt0.c4))));
SELECT ALL v0.c2, rt0.c1, rt0.c2, rt0.c3 FROM rt0 CROSS JOIN v0 ON ((((rt0.c1)!=(rt0.c0)))%(((rt0.c1)GLOB(rt0.c4)))) WHERE (((((((v0.c2) ISNULL))AND((~ (rt0.c4)))))AND((- (rt0.c1))))) UNION ALL SELECT ALL v0.c2, rt0.c1, rt0.c2, rt0.c3 FROM rt0 CROSS JOIN v0 ON ((((rt0.c1)!=(rt0.c0)))%(((rt0.c1)GLOB(rt0.c4)))) WHERE ((NOT (((((((v0.c2) ISNULL))AND((~ (rt0.c4)))))AND((- (rt0.c1))))))) UNION ALL SELECT ALL v0.c2, rt0.c1, rt0.c2, rt0.c3 FROM rt0 CROSS JOIN v0 ON ((((rt0.c1)<>(rt0.c0)))%(((rt0.c1)GLOB(rt0.c4)))) WHERE (((((((((v0.c2) ISNULL))AND((~ (rt0.c4)))))AND((- (rt0.c1))))) ISNULL));
SELECT ALL v0.c2, rt0.c1, rt0.c2, rt0.c3 FROM rt0 CROSS JOIN v0 ON ((((rt0.c1)<>(rt0.c0)))%(((rt0.c1)GLOB(rt0.c4))));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (SQLITE_COMPILEOPTION_USED(json_insert(v0.c2, v0.c2, v0.c0, v0.c2, v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (SQLITE_COMPILEOPTION_USED(json_insert(v0.c2, v0.c2, v0.c0, v0.c2, v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE (((SQLITE_COMPILEOPTION_USED(json_insert(v0.c2, v0.c2, v0.c0, v0.c2, v0.c0))) ISNULL));
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 WHERE (IFNULL(DISTINCT CAST(v0.c2 AS REAL), '2103176738')) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT v0.c1, v0.c2, v0.c0 FROM v0 WHERE ((NOT (IFNULL(DISTINCT CAST(v0.c2 AS REAL), '2103176738')))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 WHERE (((IFNULL(DISTINCT CAST(v0.c2 AS REAL), '2103176738')) ISNULL)) GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON rt0.c2 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON rt0.c2 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c0 HAVING AVG(CASE rt0.c4  WHEN rt0.c3 THEN SUM(GROUP_CONCAT(MAX(AVG(x'ca33')))) WHEN GROUP_CONCAT(v0.c2) THEN MIN(COUNT(*)) WHEN v0.c0 THEN MIN(GROUP_CONCAT(v0.c2)) ELSE COUNT(TOTAL(TOTAL(rt0.c2))) END) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON rt0.c2 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c0 HAVING (NOT (AVG(CASE rt0.c4  WHEN rt0.c3 THEN SUM(GROUP_CONCAT(MAX(AVG(x'ca33')))) WHEN GROUP_CONCAT(v0.c2) THEN MIN(COUNT(*)) WHEN v0.c0 THEN MIN(GROUP_CONCAT(v0.c2)) ELSE COUNT(TOTAL(TOTAL(rt0.c2))) END))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON rt0.c2 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c0 HAVING ((AVG(CASE rt0.c4  WHEN rt0.c3 THEN SUM(GROUP_CONCAT(MAX(AVG(x'ca33')))) WHEN GROUP_CONCAT(v0.c2) THEN MIN(COUNT(*)) WHEN v0.c0 THEN MIN(GROUP_CONCAT(v0.c2)) ELSE COUNT(TOTAL(TOTAL(rt0.c2))) END)) ISNULL);
SELECT ALL rt0.c0, rt0.c2, v0.c2, rt0.c1, rt0.c4, v0.c1 FROM rt0, v0;
SELECT ALL rt0.c0, rt0.c2, v0.c2, rt0.c1, rt0.c4, v0.c1 FROM rt0, v0 WHERE ((((rt0.c1, v0.c1, rt0.c4)) BETWEEN ((rt0.c1 COLLATE NOCASE, CAST(v0.c1 AS NUMERIC), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((rt0.c3 COLLATE NOCASE, (v0.c2 IN ()), ((v0.c1) BETWEEN (rt0.c4) AND (rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, v0.c2, rt0.c1, rt0.c4, v0.c1 FROM rt0, v0 WHERE ((NOT ((((rt0.c1, v0.c1, rt0.c4)) BETWEEN ((rt0.c1 COLLATE NOCASE, CAST(v0.c1 AS NUMERIC), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((rt0.c3 COLLATE NOCASE, (v0.c2 IN ()), ((v0.c1) BETWEEN (rt0.c4) AND (rt0.c2)))))))) UNION ALL SELECT rt0.c0, rt0.c2, v0.c2, rt0.c1, rt0.c4, v0.c1 FROM rt0, v0 WHERE ((((((rt0.c1, v0.c1, rt0.c4)) BETWEEN ((rt0.c1 COLLATE NOCASE, CAST(v0.c1 AS NUMERIC), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((rt0.c3 COLLATE NOCASE, (v0.c2 IN ()), ((v0.c1) BETWEEN (rt0.c4) AND (rt0.c2)))))) ISNULL));
SELECT ALL rt0.c0, rt0.c2, v0.c2, rt0.c1, rt0.c4, v0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CASE ((rt0.c3) NOTNULL)  WHEN (rt0.c2 IN ()) THEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)) WHEN (rt0.c4 IN (rt0.c1, rt0.c3)) THEN rt0.c1 COLLATE BINARY WHEN ((((rt0.c1)OR('\rL')))AND(rt0.c3)) THEN ((rt0.c3)=(rt0.c0)) ELSE 0.7434384953969088 END) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE ((rt0.c3) NOTNULL)  WHEN (rt0.c2 IN ()) THEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)) WHEN (rt0.c4 IN (rt0.c1, rt0.c3)) THEN rt0.c1 COLLATE BINARY WHEN ((((rt0.c1)OR('\rL')))AND(rt0.c3)) THEN ((rt0.c3)==(rt0.c0)) ELSE 0.7434384953969088 END))) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE ((rt0.c3) NOTNULL)  WHEN (rt0.c2 IN ()) THEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)) WHEN (rt0.c4 IN (rt0.c1, rt0.c3)) THEN rt0.c1 COLLATE BINARY WHEN ((((rt0.c1)OR('\rL')))AND(rt0.c3)) THEN ((rt0.c3)==(rt0.c0)) ELSE 0.7434384953969088 END) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (GLOB((v0.c2 IN ()), (v0.c0 IN ()))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (GLOB((v0.c2 IN ()), (v0.c0 IN ()))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((GLOB((v0.c2 IN ()), (v0.c0 IN ()))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c4;
SELECT rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c4 HAVING TOTAL(MAX(COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c4 HAVING (NOT (TOTAL(MAX(COUNT(*))))) UNION ALL SELECT ALL rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c4 HAVING ((TOTAL(MAX(COUNT(*)))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE ((rt0.c1 IN (rt0.c1)) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((rt0.c1 IN (rt0.c1)) COLLATE RTRIM))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((((rt0.c1 IN (rt0.c1)) COLLATE RTRIM) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT v0.c1, rt0.c4 FROM v0 INNER JOIN rt0 ON NULL;
SELECT DISTINCT v0.c1, rt0.c4 FROM v0 INNER JOIN rt0 ON NULL WHERE (CASE WHEN MIN(rt0.c4, v0.c2, rt0.c2, v0.c1) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c1))) END) UNION SELECT DISTINCT v0.c1, rt0.c4 FROM v0 INNER JOIN rt0 ON NULL WHERE ((NOT (CASE WHEN MIN(rt0.c4, v0.c2, rt0.c2, v0.c1) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c1))) END))) UNION SELECT DISTINCT v0.c1, rt0.c4 FROM v0 INNER JOIN rt0 ON NULL WHERE (((CASE WHEN MIN(rt0.c4, v0.c2, rt0.c2, v0.c1) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c1))) END) ISNULL));
SELECT DISTINCT v0.c1, rt0.c4 FROM v0 INNER JOIN rt0 ON NULL;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((CAST(rt0.c2 AS NUMERIC))|(TYPEOF(rt0.c4)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS NUMERIC))|(TYPEOF(rt0.c4)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c2 AS NUMERIC))|(TYPEOF(rt0.c4)))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL v0.c0, v0.c2, rt0.c2, rt0.c0, v0.c1 FROM v0, rt0 GROUP BY v0.c0, v0.c2, rt0.c2, rt0.c0, v0.c1;
SELECT ALL v0.c0, v0.c2, rt0.c2, rt0.c0, v0.c1 FROM v0, rt0 GROUP BY v0.c0, v0.c2, rt0.c2, rt0.c0, v0.c1 HAVING AVG(COUNT(*)) UNION ALL SELECT v0.c0, v0.c2, rt0.c2, rt0.c0, v0.c1 FROM v0, rt0 GROUP BY v0.c0, v0.c2, rt0.c2, rt0.c0, v0.c1 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT v0.c0, v0.c2, rt0.c2, rt0.c0, v0.c1 FROM v0, rt0 GROUP BY v0.c0, v0.c2, rt0.c2, rt0.c0, v0.c1 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (RTRIM((+ (v0.c2)))) UNION ALL SELECT * FROM v0 WHERE ((NOT (RTRIM((+ (v0.c2)))))) UNION ALL SELECT * FROM v0 WHERE (((RTRIM((+ (v0.c2)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((rt0.c3) NOT BETWEEN (NULL) AND (rt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((rt0.c3) NOT BETWEEN (NULL) AND (rt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((rt0.c3) NOT BETWEEN (NULL) AND (rt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON CASE WHEN rt0.c4 THEN v0.c2 END COLLATE BINARY GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON CASE WHEN rt0.c4 THEN v0.c2 END COLLATE BINARY WHERE (UPPER(CASE '[!'  WHEN rt0.c1 THEN v0.c2 ELSE v0.c0 END)) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON CASE WHEN rt0.c4 THEN v0.c2 END COLLATE BINARY WHERE ((NOT (UPPER(CASE '[!'  WHEN rt0.c1 THEN v0.c2 ELSE v0.c0 END)))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON CASE WHEN rt0.c4 THEN v0.c2 END COLLATE BINARY WHERE (((UPPER(CASE '[!'  WHEN rt0.c1 THEN v0.c2 ELSE v0.c0 END)) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON CASE WHEN rt0.c4 THEN v0.c2 END COLLATE BINARY GROUP BY rt0.c3;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING (v0.c2 IN ()) COLLATE RTRIM UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING (NOT ((v0.c2 IN ()) COLLATE RTRIM)) UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING (((v0.c2 IN ()) COLLATE RTRIM) ISNULL);
SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING (v0.c2 IN ()) COLLATE RTRIM UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING (NOT ((v0.c2 IN ()) COLLATE RTRIM)) UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING (((v0.c2 IN ()) COLLATE RTRIM) ISNULL);
SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE ((((rt0.c1 IN ()))<=(v0.c1))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT ((((rt0.c1 IN ()))<=(v0.c1))))) UNION ALL SELECT * FROM v0, rt0 WHERE ((((((rt0.c1 IN ()))<=(v0.c1))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((((x'f6fa') ISNULL))OR((((v0.c0)) NOT BETWEEN ((0.7128258693136871)) AND ((rt0.c4)))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((((x'f6fa') ISNULL))OR((((v0.c0)) NOT BETWEEN ((0.7128258693136871)) AND ((rt0.c4)))))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((((x'f6fa') ISNULL))OR((((v0.c0)) NOT BETWEEN ((0.7128258693136871)) AND ((rt0.c4)))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((v0.c1 COLLATE RTRIM)<>(((v0.c2)IS(v0.c2))))) GROUP BY v0.c2, v0.c0, v0.c1 UNION SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((NOT (((v0.c1 COLLATE RTRIM)<>(((v0.c2)IS(v0.c2))))))) GROUP BY v0.c2, v0.c0, v0.c1 UNION SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((((v0.c1 COLLATE RTRIM)!=(((v0.c2)IS(v0.c2))))) ISNULL)) GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2 HAVING v0.c0 UNION ALL SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2 HAVING ((v0.c0) ISNULL);
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2 HAVING v0.c0 UNION ALL SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2 HAVING ((v0.c0) ISNULL);
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL v0.c1, rt0.c3, rt0.c2 FROM v0, rt0;
SELECT ALL v0.c1, rt0.c3, rt0.c2 FROM v0, rt0 WHERE (((((('')+(rt0.c1))))>=((rt0.c1)))) UNION ALL SELECT ALL v0.c1, rt0.c3, rt0.c2 FROM v0, rt0 WHERE ((NOT (((((('')+(rt0.c1))))>=((rt0.c1)))))) UNION ALL SELECT ALL v0.c1, rt0.c3, rt0.c2 FROM v0, rt0 WHERE (((((((('')+(rt0.c1))))>=((rt0.c1)))) ISNULL));
SELECT ALL v0.c1, rt0.c3, rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c4, v0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c4, v0.c1 FROM rt0, v0 WHERE (((((rt0.c4) BETWEEN (0.6246978868020685) AND (rt0.c3)))IS(((rt0.c3) IS TRUE)))) UNION SELECT DISTINCT rt0.c4, v0.c1 FROM rt0 NOT INDEXED, v0 WHERE ((NOT (((((rt0.c4) BETWEEN (0.6246978868020685) AND (rt0.c3)))IS(((rt0.c3) IS TRUE)))))) UNION SELECT DISTINCT rt0.c4, v0.c1 FROM rt0, v0 WHERE (((((((rt0.c4) BETWEEN (0.6246978868020685) AND (rt0.c3)))IS(((rt0.c3) IS TRUE)))) ISNULL));
SELECT DISTINCT rt0.c4, v0.c1 FROM rt0, v0;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, v0.c0, v0.c1, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, rt0.c2, v0.c0, v0.c1, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, v0.c0, v0.c1, rt0.c0, rt0.c3 FROM rt0, v0 WHERE (((IFNULL(rt0.c0, rt0.c3))GLOB(0.7782939353003838))) GROUP BY rt0.c1, rt0.c4, rt0.c2, v0.c0, v0.c1, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c4, rt0.c2, v0.c0, v0.c1, rt0.c0, rt0.c3 FROM rt0, v0 WHERE ((NOT (((IFNULL(rt0.c0, rt0.c3))GLOB(0.7782939353003838))))) GROUP BY rt0.c1, rt0.c4, rt0.c2, v0.c0, v0.c1, rt0.c0, rt0.c3 UNION SELECT rt0.c1, rt0.c4, rt0.c2, v0.c0, v0.c1, rt0.c0, rt0.c3 FROM rt0, v0 WHERE (((((IFNULL(rt0.c0, rt0.c3))GLOB(0.7782939353003838))) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c2, v0.c0, v0.c1, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, v0.c0, v0.c1, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, rt0.c2, v0.c0, v0.c1, rt0.c0, rt0.c3;
SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING MAX(TOTAL(rt0.c0)) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING (NOT (MAX(TOTAL(rt0.c0)))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING ((MAX(TOTAL(rt0.c0))) ISNULL);
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (CAST(((v0.c2)/(x'1995')) AS INTEGER)) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (CAST(((v0.c2)/(x'1995')) AS INTEGER)))) UNION ALL SELECT * FROM v0, rt0 WHERE (((CAST(((v0.c2)/(x'1995')) AS INTEGER)) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT v0.c2 FROM v0;
SELECT DISTINCT v0.c2 FROM v0 WHERE (((((v0.c0) BETWEEN (NULL) AND (v0.c2)))OR(0.485516027367658))) UNION SELECT DISTINCT v0.c2 FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (NULL) AND (v0.c2)))OR(0.485516027367658))))) UNION SELECT DISTINCT v0.c2 FROM v0 WHERE (((((((v0.c0) BETWEEN (NULL) AND (v0.c2)))OR(0.485516027367658))) ISNULL));
SELECT DISTINCT v0.c2 FROM v0;
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3;
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE (((((rt0.c2)<=(rt0.c1))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c3) NOT NULL)))) GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3 UNION SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT (((((rt0.c2)<=(rt0.c1))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c3) NOT NULL)))))) GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE (((((((rt0.c2)<=(rt0.c1))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c3) NOT NULL)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3;
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3;
SELECT ALL v0.c1, rt0.c0 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c1, rt0.c0;
SELECT ALL v0.c1, rt0.c0 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c1, rt0.c0 HAVING GROUP_CONCAT(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0))) UNION ALL SELECT v0.c1, rt0.c0 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c1, rt0.c0 HAVING (NOT (GROUP_CONCAT(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0))))) UNION ALL SELECT ALL v0.c1, rt0.c0 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c1, rt0.c0 HAVING ((GROUP_CONCAT(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0)))) ISNULL);
SELECT ALL v0.c1, rt0.c0 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c1, rt0.c0;
SELECT ALL v0.c1, rt0.c0 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c1, rt0.c0 HAVING GROUP_CONCAT(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0))) UNION ALL SELECT v0.c1, rt0.c0 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c1, rt0.c0 HAVING (NOT (GROUP_CONCAT(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0))))) UNION ALL SELECT ALL v0.c1, rt0.c0 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c1, rt0.c0 HAVING ((GROUP_CONCAT(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0)))) ISNULL);
SELECT ALL v0.c1, rt0.c0 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c1, rt0.c0;
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (rt0.c2) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM v0, rt0 WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM v0 NATURAL JOIN rt0 WHERE (CAST(NULL AS BLOB)) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN rt0 WHERE ((NOT (CAST(NULL AS BLOB)))) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN rt0 WHERE (((CAST(NULL AS BLOB)) ISNULL));
SELECT DISTINCT * FROM v0 NATURAL JOIN rt0;
SELECT ALL rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2;
SELECT rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE ((- ((NOT (rt0.c0))))) GROUP BY rt0.c4, rt0.c1, rt0.c2 UNION SELECT rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((- ((NOT (rt0.c0))))))) GROUP BY rt0.c4, rt0.c1, rt0.c2 UNION SELECT rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE ((((- ((NOT (rt0.c0))))) ISNULL)) GROUP BY rt0.c4, rt0.c1, rt0.c2;
SELECT ALL rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING CASE WHEN COUNT(*) THEN MAX(v0.c2) WHEN ((v0.c2)||(v0.c2)) THEN CASE '2138768560'  WHEN v0.c1 THEN v0.c0 WHEN COUNT(*) THEN v0.c1 WHEN MAX(COUNT(MAX(v0.c1))) THEN v0.c0 ELSE SUM(MAX(v0.c1)) END WHEN MAX(v0.c0) THEN TOTAL(GROUP_CONCAT(v0.c0)) COLLATE NOCASE END UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (CASE WHEN COUNT(*) THEN MAX(v0.c2) WHEN ((v0.c2)||(v0.c2)) THEN CASE '2138768560'  WHEN v0.c1 THEN v0.c0 WHEN COUNT(*) THEN v0.c1 WHEN MAX(COUNT(MAX(v0.c1))) THEN v0.c0 ELSE SUM(MAX(v0.c1)) END WHEN MAX(v0.c0) THEN TOTAL(GROUP_CONCAT(v0.c0)) COLLATE NOCASE END)) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((CASE WHEN COUNT(*) THEN MAX(v0.c2) WHEN ((v0.c2)||(v0.c2)) THEN CASE '2138768560'  WHEN v0.c1 THEN v0.c0 WHEN COUNT(*) THEN v0.c1 WHEN MAX(COUNT(MAX(v0.c1))) THEN v0.c0 ELSE SUM(MAX(v0.c1)) END WHEN MAX(v0.c0) THEN TOTAL(GROUP_CONCAT(v0.c0)) COLLATE NOCASE END) ISNULL);
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 WHERE (((+ (v0.c1)) IN (TRIM(v0.c1)))) UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 WHERE ((NOT (((+ (v0.c1)) IN (TRIM(v0.c1)))))) UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 WHERE (((((+ (v0.c1)) IN (TRIM(v0.c1)))) ISNULL));
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0;
SELECT DISTINCT rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1 FROM v0, rt0 WHERE (((((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1))) NOT BETWEEN (((rt0.c4)<<(x''))) AND (((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c0))))) UNION SELECT DISTINCT rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1 FROM v0, rt0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1))) NOT BETWEEN (((rt0.c4)<<(x''))) AND (((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c0))))))) UNION SELECT DISTINCT rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1 FROM v0, rt0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1))) NOT BETWEEN (((rt0.c4)<<(x''))) AND (((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2, v0.c0, rt0.c0, rt0.c4, rt0.c1 FROM v0, rt0;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 WHERE ((~ (0.9770107782614702))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0 WHERE ((NOT ((~ (0.9770107782614702))))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0 WHERE ((((~ (0.9770107782614702))) ISNULL)) GROUP BY v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING CAST(MAX(GROUP_CONCAT(MIN(TOTAL(COUNT(*))))) COLLATE NOCASE AS BLOB) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (CAST(MAX(GROUP_CONCAT(MIN(TOTAL(COUNT(*))))) COLLATE NOCASE AS BLOB))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((CAST(MAX(GROUP_CONCAT(MIN(TOTAL(COUNT(*))))) COLLATE NOCASE AS BLOB)) ISNULL);
SELECT v0.c1, v0.c0, v0.c2 FROM v0;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT (v0.c0 COLLATE RTRIM))) UNION ALL SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT ((NOT (v0.c0 COLLATE RTRIM))))) UNION ALL SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((((NOT (v0.c0 COLLATE RTRIM))) ISNULL));
SELECT v0.c1, v0.c0, v0.c2 FROM v0;
SELECT DISTINCT rt0.c1, v0.c2, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((LOWER(DISTINCT rt0.c3))<(((x'ac22fc03')=(rt0.c0))));
SELECT DISTINCT rt0.c1, v0.c2, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((LOWER(DISTINCT rt0.c3))<(((x'ac22fc03')==(rt0.c0)))) WHERE ((((((rt0.c2))=((rt0.c4)))) ISNULL)) UNION SELECT DISTINCT rt0.c1, v0.c2, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((LOWER(DISTINCT rt0.c3))<(((x'ac22fc03')=(rt0.c0)))) WHERE ((NOT ((((((rt0.c2))==((rt0.c4)))) ISNULL)))) UNION SELECT DISTINCT rt0.c1, v0.c2, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((LOWER(DISTINCT rt0.c3))<(((x'ac22fc03')==(rt0.c0)))) WHERE ((((((((rt0.c2))==((rt0.c4)))) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c1, v0.c2, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((LOWER(DISTINCT rt0.c3))<(((x'ac22fc03')=(rt0.c0))));
SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4;
SELECT rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE (((x'') BETWEEN (((((rt0.c2)AND(rt0.c3)))OR(rt0.c3))) AND (((rt0.c3) IS FALSE)))) GROUP BY rt0.c2, rt0.c1, rt0.c4 UNION SELECT rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT (((x'') BETWEEN (((((rt0.c2)AND(rt0.c3)))OR(rt0.c3))) AND (((rt0.c3) IS FALSE)))))) GROUP BY rt0.c2, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE (((((x'') BETWEEN (((((rt0.c2)AND(rt0.c3)))OR(rt0.c3))) AND (((rt0.c3) IS FALSE)))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4;
SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING ((CASE SUM(COUNT(*))  WHEN v0.c2 THEN TOTAL(v0.c0) ELSE GROUP_CONCAT(v0.c0) END) IS FALSE) UNION ALL SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING (NOT (((CASE SUM(COUNT(*))  WHEN v0.c2 THEN TOTAL(v0.c0) ELSE GROUP_CONCAT(v0.c0) END) IS FALSE))) UNION ALL SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING ((((CASE SUM(COUNT(*))  WHEN v0.c2 THEN TOTAL(v0.c0) ELSE GROUP_CONCAT(v0.c0) END) IS FALSE)) ISNULL);
SELECT v0.c0, v0.c2 FROM v0;
SELECT v0.c0, v0.c2 FROM v0 WHERE ((((v0.c1 IN ())) NOT BETWEEN (CASE WHEN v0.c1 THEN 0xffffffffb74981dc END) AND (((v0.c2) IS TRUE)))) UNION ALL SELECT ALL v0.c0, v0.c2 FROM v0 WHERE ((NOT ((((v0.c1 IN ())) NOT BETWEEN (CASE WHEN v0.c1 THEN 0Xffffffffb74981dc END) AND (((v0.c2) IS TRUE)))))) UNION ALL SELECT ALL v0.c0, v0.c2 FROM v0 WHERE ((((((v0.c1 IN ())) NOT BETWEEN (CASE WHEN v0.c1 THEN 0xffffffffb74981dc END) AND (((v0.c2) IS TRUE)))) ISNULL));
SELECT v0.c0, v0.c2 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((v0.c2)OR(0.12660163933102697)))OR(((((0xb814ac5)AND(v0.c2)))OR(v0.c2)))))AND(v0.c0 COLLATE NOCASE)))AND((NOT (v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((((((v0.c2)OR(0.12660163933102697)))OR(((((0xb814ac5)AND(v0.c2)))OR(v0.c2)))))AND(v0.c0 COLLATE NOCASE)))AND((NOT (v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((v0.c2)OR(0.12660163933102697)))OR(((((0xb814ac5)AND(v0.c2)))OR(v0.c2)))))AND(v0.c0 COLLATE NOCASE)))AND((NOT (v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0;
SELECT rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c3)) BETWEEN ((((rt0.c4) BETWEEN (rt0.c0) AND ('-682929342')), rt0.c2 COLLATE NOCASE, CAST(rt0.c4 AS REAL))) AND ((json_quote(x'a14c'), ((rt0.c1)&(rt0.c4)), rt0.c3)))) GROUP BY rt0.c4, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c0, rt0.c3)) BETWEEN ((((rt0.c4) BETWEEN (rt0.c0) AND ('-682929342')), rt0.c2 COLLATE NOCASE, CAST(rt0.c4 AS REAL))) AND ((json_quote(x'a14c'), ((rt0.c1)&(rt0.c4)), rt0.c3)))))) GROUP BY rt0.c4, rt0.c1, rt0.c0 UNION SELECT rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c3)) BETWEEN ((((rt0.c4) BETWEEN (rt0.c0) AND ('-682929342')), rt0.c2 COLLATE NOCASE, CAST(rt0.c4 AS REAL))) AND ((json_quote(x'a14c'), ((rt0.c1)&(rt0.c4)), rt0.c3)))) ISNULL)) GROUP BY rt0.c4, rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, v0.c0, rt0.c4, v0.c1, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0, rt0.c4, v0.c1, rt0.c3;
SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0, rt0.c4, v0.c1, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0, rt0.c4, v0.c1, rt0.c3 HAVING TOTAL(MAX(COUNT(SUM(v0.c2)))) COLLATE RTRIM UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0, rt0.c4, v0.c1, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0, rt0.c4, v0.c1, rt0.c3 HAVING (NOT (TOTAL(MAX(COUNT(SUM(v0.c2)))) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, v0.c0, rt0.c4, v0.c1, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0, rt0.c4, v0.c1, rt0.c3 HAVING ((TOTAL(MAX(COUNT(SUM(v0.c2)))) COLLATE RTRIM) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c4, v0.c1, v0.c0 FROM v0, rt0;
SELECT rt0.c0, rt0.c1, rt0.c4, v0.c1, v0.c0 FROM v0, rt0 WHERE (CASE WHEN NULLIF(DISTINCT v0.c0, v0.c0) THEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)) ELSE ((v0.c0) NOT NULL) END) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4, v0.c1, v0.c0 FROM v0, rt0 WHERE ((NOT (CASE WHEN NULLIF(DISTINCT v0.c0, v0.c0) THEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)) ELSE ((v0.c0) NOT NULL) END))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c4, v0.c1, v0.c0 FROM v0, rt0 WHERE (((CASE WHEN NULLIF(DISTINCT v0.c0, v0.c0) THEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)) ELSE ((v0.c0) NOT NULL) END) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c4, v0.c1, v0.c0 FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c1) BETWEEN (v0.c1) AND (v0.c1))) NOT BETWEEN (7.72304251E8) AND (TYPEOF(v0.c0)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c1) BETWEEN (v0.c1) AND (v0.c1))) NOT BETWEEN (7.72304251E8) AND (TYPEOF(v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c1) BETWEEN (v0.c1) AND (v0.c1))) NOT BETWEEN (7.72304251E8) AND (TYPEOF(v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c3, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON (('')LIKE(CAST(rt0.c0 AS TEXT))) GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON (('')LIKE(CAST(rt0.c0 AS TEXT))) WHERE ((+ (2.41368779E8))) GROUP BY rt0.c3, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON (('')LIKE(CAST(rt0.c0 AS TEXT))) WHERE ((NOT ((+ (2.41368779E8))))) GROUP BY rt0.c3, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON (('')LIKE(CAST(rt0.c0 AS TEXT))) WHERE ((((+ (2.41368779E8))) ISNULL)) GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON (('')LIKE(CAST(rt0.c0 AS TEXT))) GROUP BY rt0.c3, rt0.c1;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING CASE WHEN v0.c1 COLLATE BINARY THEN ((GROUP_CONCAT(COUNT(*))) BETWEEN (COUNT(*)) AND (v0.c0)) WHEN (((v0.c2)) NOT BETWEEN ((TOTAL(v0.c0))) AND ((v0.c0))) THEN MIN('-910716919') WHEN 1.54387484E9 THEN AVG(v0.c2) ELSE COUNT(*) END UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING (NOT (CASE WHEN v0.c1 COLLATE BINARY THEN ((GROUP_CONCAT(COUNT(*))) BETWEEN (COUNT(*)) AND (v0.c0)) WHEN (((v0.c2)) NOT BETWEEN ((TOTAL(v0.c0))) AND ((v0.c0))) THEN MIN('-910716919') WHEN 1.54387484E9 THEN AVG(v0.c2) ELSE COUNT(*) END)) UNION ALL SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING ((CASE WHEN v0.c1 COLLATE BINARY THEN ((GROUP_CONCAT(COUNT(*))) BETWEEN (COUNT(*)) AND (v0.c0)) WHEN (((v0.c2)) NOT BETWEEN ((TOTAL(v0.c0))) AND ((v0.c0))) THEN MIN('-910716919') WHEN 1.54387484E9 THEN AVG(v0.c2) ELSE COUNT(*) END) ISNULL);
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c2) IS FALSE)) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (((rt0.c2) IS FALSE)))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c2) IS FALSE)) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c1, v0.c0, v0.c2)) NOT BETWEEN ((CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END, CAST(v0.c2 AS NUMERIC), ((v0.c0)>=(v0.c0)))) AND ((((v0.c1)!=(v0.c2)), ((v0.c2)||(v0.c1)), TYPEOF(v0.c2))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c1, v0.c0, v0.c2)) NOT BETWEEN ((CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END, CAST(v0.c2 AS NUMERIC), ((v0.c0)>=(v0.c0)))) AND ((((v0.c1)!=(v0.c2)), ((v0.c2)||(v0.c1)), TYPEOF(v0.c2))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c1, v0.c0, v0.c2)) NOT BETWEEN ((CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END, CAST(v0.c2 AS NUMERIC), ((v0.c0)>=(v0.c0)))) AND ((((v0.c1)<>(v0.c2)), ((v0.c2)||(v0.c1)), TYPEOF(v0.c2))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 WHERE ((((((((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c4)))AND('1978204388')))AND(rt0.c0)))OR(0.46793116495487375)))OR(rt0.c3)) IN ((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((0Xfffffffffd01815d)))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE ((NOT ((((((((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c4)))AND('1978204388')))AND(rt0.c0)))OR(0.46793116495487375)))OR(rt0.c3)) IN ((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((0Xfffffffffd01815d)))))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE ((((((((((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c4)))AND('1978204388')))AND(rt0.c0)))OR(0.46793116495487375)))OR(rt0.c3)) IN ((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((0xfffffffffd01815d)))))) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c2, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON JULIANDAY(CASE v0.c1  WHEN rt0.c3 THEN v0.c2 WHEN rt0.c4 THEN 0xffffffffbec6c3ca WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END, ((v0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), CASE WHEN NULL THEN v0.c2 END) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON JULIANDAY(CASE v0.c1  WHEN rt0.c3 THEN v0.c2 WHEN rt0.c4 THEN 0xffffffffbec6c3ca WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END, ((v0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), CASE WHEN NULL THEN v0.c2 END) GROUP BY rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON JULIANDAY(CASE v0.c1  WHEN rt0.c3 THEN v0.c2 WHEN rt0.c4 THEN 0Xffffffffbec6c3ca WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END, ((v0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), CASE WHEN NULL THEN v0.c2 END) GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON JULIANDAY(CASE v0.c1  WHEN rt0.c3 THEN v0.c2 WHEN rt0.c4 THEN 0xffffffffbec6c3ca WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END, ((v0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), CASE WHEN NULL THEN v0.c2 END) GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON JULIANDAY(CASE v0.c1  WHEN rt0.c3 THEN v0.c2 WHEN rt0.c4 THEN 0xffffffffbec6c3ca WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END, ((v0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), CASE WHEN NULL THEN v0.c2 END) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON JULIANDAY(CASE v0.c1  WHEN rt0.c3 THEN v0.c2 WHEN rt0.c4 THEN 0xffffffffbec6c3ca WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END, ((v0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), CASE WHEN NULL THEN v0.c2 END) GROUP BY rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON JULIANDAY(CASE v0.c1  WHEN rt0.c3 THEN v0.c2 WHEN rt0.c4 THEN 0Xffffffffbec6c3ca WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END, ((v0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), CASE WHEN NULL THEN v0.c2 END) GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON JULIANDAY(CASE v0.c1  WHEN rt0.c3 THEN v0.c2 WHEN rt0.c4 THEN 0xffffffffbec6c3ca WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END, ((v0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), CASE WHEN NULL THEN v0.c2 END) GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON JULIANDAY(CASE v0.c1  WHEN rt0.c3 THEN v0.c2 WHEN rt0.c4 THEN 0xffffffffbec6c3ca WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END, ((v0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), CASE WHEN NULL THEN v0.c2 END) GROUP BY rt0.c2, rt0.c0;
SELECT MAX(CAST(CASE WHEN v0.c2 THEN v0.c2 END AS TEXT)) FROM v0;
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE ((-8.01515129E8 IN (CASE v0.c0  WHEN rt0.c0 THEN v0.c0 END))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT ((-8.01515129E8 IN (CASE v0.c0  WHEN rt0.c0 THEN v0.c0 END))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((((-8.01515129E8 IN (CASE v0.c0  WHEN rt0.c0 THEN v0.c0 END))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c2, v0.c0, v0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY v0.c2, v0.c0, v0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL v0.c2, v0.c0, v0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, v0 WHERE (COALESCE(LIKELIHOOD('1TgP[', 0.22202513005318014), rt0.c1)) GROUP BY v0.c2, v0.c0, v0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 UNION SELECT ALL v0.c2, v0.c0, v0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((NOT (COALESCE(LIKELIHOOD('1TgP[', 0.22202513005318014), rt0.c1)))) GROUP BY v0.c2, v0.c0, v0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 UNION SELECT v0.c2, v0.c0, v0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, v0 WHERE (((COALESCE(LIKELIHOOD('1TgP[', 0.22202513005318014), rt0.c1)) ISNULL)) GROUP BY v0.c2, v0.c0, v0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL v0.c2, v0.c0, v0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY v0.c2, v0.c0, v0.c1, rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING TRIM(DISTINCT v0.c1, CASE COUNT(v0.c2)  WHEN MAX(v0.c1) THEN v0.c1 WHEN v0.c2 THEN MIN(COUNT(v0.c2)) WHEN NULL THEN GROUP_CONCAT(MIN(GROUP_CONCAT(AVG(AVG(v0.c0))))) END) UNION ALL SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING (NOT (TRIM(DISTINCT v0.c1, CASE COUNT(v0.c2)  WHEN MAX(v0.c1) THEN v0.c1 WHEN v0.c2 THEN MIN(COUNT(v0.c2)) WHEN NULL THEN GROUP_CONCAT(MIN(GROUP_CONCAT(AVG(AVG(v0.c0))))) END))) UNION ALL SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING ((TRIM(DISTINCT v0.c1, CASE COUNT(v0.c2)  WHEN MAX(v0.c1) THEN v0.c1 WHEN v0.c2 THEN MIN(COUNT(v0.c2)) WHEN NULL THEN GROUP_CONCAT(MIN(GROUP_CONCAT(AVG(AVG(v0.c0))))) END)) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((rt0.c4 COLLATE NOCASE IN ((rt0.c2 IN ('-654809009', rt0.c4))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((rt0.c4 COLLATE NOCASE IN ((rt0.c2 IN ('-654809009', rt0.c4))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((rt0.c4 COLLATE NOCASE IN ((rt0.c2 IN ('-654809009', rt0.c4))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((v0.c2)) BETWEEN ((0.7434384953969088)) AND ((((rt0.c2) ISNULL))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((v0.c2)) BETWEEN ((0.7434384953969088)) AND ((((rt0.c2) ISNULL))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((v0.c2)) BETWEEN ((0.7434384953969088)) AND ((((rt0.c2) ISNULL))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 WHERE (x'') GROUP BY v0.c2, v0.c1, v0.c0 UNION SELECT v0.c2, v0.c1, v0.c0 FROM v0 WHERE ((NOT (x''))) GROUP BY v0.c2, v0.c1, v0.c0 UNION SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 WHERE (((x'') ISNULL)) GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c2, rt0.c2, rt0.c4, v0.c0, v0.c1, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY v0.c2, rt0.c2, rt0.c4, v0.c0, v0.c1, rt0.c3, rt0.c0;
SELECT ALL v0.c2, rt0.c2, rt0.c4, v0.c0, v0.c1, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY v0.c2, rt0.c2, rt0.c4, v0.c0, v0.c1, rt0.c3, rt0.c0 HAVING AVG(CHAR(COUNT(GROUP_CONCAT(MAX(MIN(COUNT(MAX(rt0.c2)))))))) UNION ALL SELECT v0.c2, rt0.c2, rt0.c4, v0.c0, v0.c1, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY v0.c2, rt0.c2, rt0.c4, v0.c0, v0.c1, rt0.c3, rt0.c0 HAVING (NOT (AVG(CHAR(COUNT(GROUP_CONCAT(MAX(MIN(COUNT(MAX(rt0.c2)))))))))) UNION ALL SELECT v0.c2, rt0.c2, rt0.c4, v0.c0, v0.c1, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY v0.c2, rt0.c2, rt0.c4, v0.c0, v0.c1, rt0.c3, rt0.c0 HAVING ((AVG(CHAR(COUNT(GROUP_CONCAT(MAX(MIN(COUNT(MAX(rt0.c2))))))))) ISNULL);
SELECT ALL v0.c0, rt0.c3 FROM v0, rt0;
SELECT ALL v0.c0, rt0.c3 FROM v0, rt0 WHERE (IFNULL((rt0.c4 IN (v0.c0)), '-86312584')) UNION ALL SELECT ALL v0.c0, rt0.c3 FROM v0, rt0 WHERE ((NOT (IFNULL((rt0.c4 IN (v0.c0)), '-86312584')))) UNION ALL SELECT ALL v0.c0, rt0.c3 FROM v0, rt0 WHERE (((IFNULL((rt0.c4 IN (v0.c0)), '-86312584')) ISNULL));
SELECT ALL v0.c0, rt0.c3 FROM v0, rt0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON (- (UPPER(DISTINCT rt0.c2)));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON (- (UPPER(DISTINCT rt0.c2))) WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (0Xffffffff967e6791)))IS NOT(((rt0.c3)IS(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON (- (UPPER(DISTINCT rt0.c2))) WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c1) AND (0Xffffffff967e6791)))IS NOT(((rt0.c3)IS(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON (- (UPPER(DISTINCT rt0.c2))) WHERE (((((((rt0.c2) BETWEEN (rt0.c1) AND (0Xffffffff967e6791)))IS NOT(((rt0.c3)IS(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON (- (UPPER(DISTINCT rt0.c2)));
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (0.48673919362723417) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (0.48673919362723417))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((0.48673919362723417) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING MAX(COUNT(GROUP_CONCAT(rt0.c1))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT (MAX(COUNT(GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING ((MAX(COUNT(GROUP_CONCAT(rt0.c1)))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((((((v0.c1)<=(v0.c1)), TRIM(v0.c2, v0.c1), CAST(v0.c0 AS BLOB)))>=(((((v0.c2))<((v0.c1))), v0.c2, (~ (v0.c2)))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((((v0.c1)<=(v0.c1)), TRIM(v0.c2, v0.c1), CAST(v0.c0 AS BLOB)))>=(((((v0.c2))<((v0.c1))), v0.c2, (~ (v0.c2)))))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((((v0.c1)<=(v0.c1)), TRIM(v0.c2, v0.c1), CAST(v0.c0 AS BLOB)))>=(((((v0.c2))<((v0.c1))), v0.c2, (~ (v0.c2)))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(1.54387484E9 AS NUMERIC)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(1.54387484E9 AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(1.54387484E9 AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((+ (((v0.c0)<<(v0.c1))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((+ (((v0.c0)<<(v0.c1))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 NOT INDEXED WHERE ((((+ (((v0.c0)<<(v0.c1))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4;
SELECT rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4 HAVING MAX(AVG(GROUP_CONCAT(rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4 HAVING (NOT (MAX(AVG(GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4 HAVING ((MAX(AVG(GROUP_CONCAT(rt0.c1)))) ISNULL);
SELECT ALL v0.c2, v0.c1, rt0.c1, rt0.c0, rt0.c3, rt0.c4, v0.c0 FROM v0, rt0;
SELECT v0.c2, v0.c1, rt0.c1, rt0.c0, rt0.c3, rt0.c4, v0.c0 FROM v0, rt0 WHERE (1.7976931348623157E308) UNION ALL SELECT v0.c2, v0.c1, rt0.c1, rt0.c0, rt0.c3, rt0.c4, v0.c0 FROM v0, rt0 WHERE ((NOT (1.7976931348623157E308))) UNION ALL SELECT v0.c2, v0.c1, rt0.c1, rt0.c0, rt0.c3, rt0.c4, v0.c0 FROM v0, rt0 WHERE (((1.7976931348623157E308) ISNULL));
SELECT ALL v0.c2, v0.c1, rt0.c1, rt0.c0, rt0.c3, rt0.c4, v0.c0 FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0) NOTNULL)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE (x'') GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((NOT (x''))) GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT v0.c0, v0.c2, v0.c1 FROM v0 WHERE (((x'') ISNULL)) GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT v0.c0, rt0.c0, rt0.c3, v0.c1, rt0.c4 FROM rt0 FULL OUTER JOIN v0 ON ((((v0.c1)!=(rt0.c4))) NOT NULL) GROUP BY v0.c0, rt0.c0, rt0.c3, v0.c1, rt0.c4;
SELECT v0.c0, rt0.c0, rt0.c3, v0.c1, rt0.c4 FROM rt0 FULL OUTER JOIN v0 ON ((((v0.c1)<>(rt0.c4))) NOT NULL) GROUP BY v0.c0, rt0.c0, rt0.c3, v0.c1, rt0.c4 HAVING GROUP_CONCAT(COUNT(rt0.c2)) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c3, v0.c1, rt0.c4 FROM rt0 FULL OUTER JOIN v0 ON ((((v0.c1)!=(rt0.c4))) NOT NULL) GROUP BY v0.c0, rt0.c0, rt0.c3, v0.c1, rt0.c4 HAVING (NOT (GROUP_CONCAT(COUNT(rt0.c2)))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c3, v0.c1, rt0.c4 FROM rt0 FULL OUTER JOIN v0 ON ((((v0.c1)!=(rt0.c4))) NOT NULL) GROUP BY v0.c0, rt0.c0, rt0.c3, v0.c1, rt0.c4 HAVING ((GROUP_CONCAT(COUNT(rt0.c2))) ISNULL);
SELECT ALL rt0.c2, rt0.c4, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE (((rt0.c4) NOT BETWEEN (0.4975893213228707) AND (rt0.c3)) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c4) NOT BETWEEN (0.4975893213228707) AND (rt0.c3)) COLLATE NOCASE))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE (((((rt0.c4) NOT BETWEEN (0.4975893213228707) AND (rt0.c3)) COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c2, rt0.c4, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))!=(((((rt0.c2)OR(rt0.c4)))AND(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))!=(((((rt0.c2)OR(rt0.c4)))AND(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))!=(((((rt0.c2)OR(rt0.c4)))AND(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, v0.c2, rt0.c0, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c0, rt0.c2, v0.c0, rt0.c4;
SELECT ALL rt0.c1, v0.c2, rt0.c0, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 WHERE (CASE WHEN ((x'b393') NOT BETWEEN (v0.c0) AND (rt0.c1)) THEN ((v0.c0)&(rt0.c2)) END) GROUP BY rt0.c1, v0.c2, rt0.c0, rt0.c2, v0.c0, rt0.c4 UNION SELECT rt0.c1, v0.c2, rt0.c0, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 WHERE ((NOT (CASE WHEN ((x'b393') NOT BETWEEN (v0.c0) AND (rt0.c1)) THEN ((v0.c0)&(rt0.c2)) END))) GROUP BY rt0.c1, v0.c2, rt0.c0, rt0.c2, v0.c0, rt0.c4 UNION SELECT ALL rt0.c1, v0.c2, rt0.c0, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 WHERE (((CASE WHEN ((x'b393') NOT BETWEEN (v0.c0) AND (rt0.c1)) THEN ((v0.c0)&(rt0.c2)) END) ISNULL)) GROUP BY rt0.c1, v0.c2, rt0.c0, rt0.c2, v0.c0, rt0.c4;
SELECT ALL rt0.c1, v0.c2, rt0.c0, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c0, rt0.c2, v0.c0, rt0.c4;
SELECT ALL rt0.c0, v0.c0, rt0.c1, v0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c1, v0.c1;
SELECT rt0.c0, v0.c0, rt0.c1, v0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c1, v0.c1 HAVING (((~ (rt0.c0)))>>(AVG(MAX(SUM(TOTAL(COUNT(MIN(rt0.c0)))))))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1, v0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c1, v0.c1 HAVING (NOT ((((~ (rt0.c0)))>>(AVG(MAX(SUM(TOTAL(COUNT(MIN(rt0.c0)))))))))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c1, v0.c1 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c1, v0.c1 HAVING (((((~ (rt0.c0)))>>(AVG(MAX(SUM(TOTAL(COUNT(MIN(rt0.c0))))))))) ISNULL);
SELECT ALL rt0.c0, rt0.c3, v0.c0, v0.c1 FROM rt0, v0;
SELECT ALL rt0.c0, rt0.c3, v0.c0, v0.c1 FROM rt0, v0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN v0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c4 ELSE rt0.c1 END IN ())) UNION ALL SELECT ALL rt0.c0, rt0.c3, v0.c0, v0.c1 FROM rt0, v0 WHERE ((NOT ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN v0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c4 ELSE rt0.c1 END IN ())))) UNION ALL SELECT rt0.c0, rt0.c3, v0.c0, v0.c1 FROM rt0, v0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN v0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c4 ELSE rt0.c1 END IN ())) ISNULL));
SELECT ALL rt0.c0, rt0.c3, v0.c0, v0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c0 AS REAL)) IS FALSE)) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS REAL)) IS FALSE)))) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c0 AS REAL)) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c2 FROM rt0;
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0 WHERE (((v0.c0)|(v0.c0)) COLLATE RTRIM COLLATE RTRIM) GROUP BY v0.c1, v0.c2 UNION SELECT v0.c1, v0.c2 FROM v0 WHERE ((NOT (((v0.c0)|(v0.c0)) COLLATE RTRIM COLLATE RTRIM))) GROUP BY v0.c1, v0.c2 UNION SELECT v0.c1, v0.c2 FROM v0 WHERE (((((v0.c0)|(v0.c0)) COLLATE RTRIM COLLATE RTRIM) ISNULL)) GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c1 HAVING ((AVG(COUNT(rt0.c3)))IS(COUNT(rt0.c1))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c1 HAVING (NOT (((AVG(COUNT(rt0.c3)))IS(COUNT(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c4, rt0.c1 HAVING ((((AVG(COUNT(rt0.c3)))IS(COUNT(rt0.c1)))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (COALESCE(CASE v0.c0  WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END, v0.c1)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (COALESCE(CASE v0.c0  WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END, v0.c1)))) UNION ALL SELECT * FROM v0 WHERE (((COALESCE(CASE v0.c0  WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END, v0.c1)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0, v0.c2 FROM v0;
SELECT DISTINCT v0.c0, v0.c2 FROM v0 NOT INDEXED WHERE (((((((v0.c1)AND(NULL)))AND(v0.c2)))&(((v0.c0) IS FALSE)))) UNION SELECT DISTINCT v0.c0, v0.c2 FROM v0 WHERE ((NOT (((((((v0.c1)AND(NULL)))AND(v0.c2)))&(((v0.c0) IS FALSE)))))) UNION SELECT DISTINCT v0.c0, v0.c2 FROM v0 WHERE (((((((((v0.c1)AND(NULL)))AND(v0.c2)))&(((v0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT v0.c0, v0.c2 FROM v0;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE (v0.c0 COLLATE NOCASE COLLATE NOCASE) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT (v0.c0 COLLATE NOCASE COLLATE NOCASE))) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE (((v0.c0 COLLATE NOCASE COLLATE NOCASE) ISNULL)) GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c2, rt0.c1, v0.c1, rt0.c2, rt0.c0, rt0.c4, v0.c0, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON x'e1e4' GROUP BY v0.c2, rt0.c1, v0.c1, rt0.c2, rt0.c0, rt0.c4, v0.c0, rt0.c3;
SELECT v0.c2, rt0.c1, v0.c1, rt0.c2, rt0.c0, rt0.c4, v0.c0, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON x'e1e4' GROUP BY v0.c2, rt0.c1, v0.c1, rt0.c2, rt0.c0, rt0.c4, v0.c0, rt0.c3 HAVING ((GROUP_CONCAT(MAX(MAX(rt0.c0))) COLLATE RTRIM) IS TRUE) UNION ALL SELECT ALL v0.c2, rt0.c1, v0.c1, rt0.c2, rt0.c0, rt0.c4, v0.c0, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON x'e1e4' GROUP BY v0.c2, rt0.c1, v0.c1, rt0.c2, rt0.c0, rt0.c4, v0.c0, rt0.c3 HAVING (NOT (((GROUP_CONCAT(MAX(MAX(rt0.c0))) COLLATE RTRIM) IS TRUE))) UNION ALL SELECT v0.c2, rt0.c1, v0.c1, rt0.c2, rt0.c0, rt0.c4, v0.c0, rt0.c3 FROM v0 NOT INDEXED RIGHT OUTER JOIN rt0 ON x'e1e4' GROUP BY v0.c2, rt0.c1, v0.c1, rt0.c2, rt0.c0, rt0.c4, v0.c0, rt0.c3 HAVING ((((GROUP_CONCAT(MAX(MAX(rt0.c0))) COLLATE RTRIM) IS TRUE)) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c1) ISNULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c1) ISNULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c1) ISNULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((((rt0.c4))<=((v0.c1)))) BETWEEN (((rt0.c2) IS FALSE)) AND (v0.c0))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((((rt0.c4))<=((v0.c1)))) BETWEEN (((rt0.c2) IS FALSE)) AND (v0.c0))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((((rt0.c4))<=((v0.c1)))) BETWEEN (((rt0.c2) IS FALSE)) AND (v0.c0))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL v0.c2, v0.c1, rt0.c0, rt0.c4, rt0.c1, rt0.c3, v0.c0 FROM rt0, v0 GROUP BY v0.c2, v0.c1, rt0.c0, rt0.c4, rt0.c1, rt0.c3, v0.c0;
SELECT ALL v0.c2, v0.c1, rt0.c0, rt0.c4, rt0.c1, rt0.c3, v0.c0 FROM rt0, v0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c2 END) NOT BETWEEN (((((rt0.c4)OR(rt0.c2)))OR(rt0.c3))) AND ((((0.8847628095031274)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) GROUP BY v0.c2, v0.c1, rt0.c0, rt0.c4, rt0.c1, rt0.c3, v0.c0 UNION SELECT v0.c2, v0.c1, rt0.c0, rt0.c4, rt0.c1, rt0.c3, v0.c0 FROM rt0, v0 WHERE ((NOT (((CASE WHEN rt0.c3 THEN rt0.c2 END) NOT BETWEEN (((((rt0.c4)OR(rt0.c2)))OR(rt0.c3))) AND ((((0.8847628095031274)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))))) GROUP BY v0.c2, v0.c1, rt0.c0, rt0.c4, rt0.c1, rt0.c3, v0.c0 UNION SELECT ALL v0.c2, v0.c1, rt0.c0, rt0.c4, rt0.c1, rt0.c3, v0.c0 FROM rt0, v0 WHERE (((((CASE WHEN rt0.c3 THEN rt0.c2 END) NOT BETWEEN (((((rt0.c4)OR(rt0.c2)))OR(rt0.c3))) AND ((((0.8847628095031274)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) ISNULL)) GROUP BY v0.c2, v0.c1, rt0.c0, rt0.c4, rt0.c1, rt0.c3, v0.c0;
SELECT ALL v0.c2, v0.c1, rt0.c0, rt0.c4, rt0.c1, rt0.c3, v0.c0 FROM rt0, v0 GROUP BY v0.c2, v0.c1, rt0.c0, rt0.c4, rt0.c1, rt0.c3, v0.c0;
SELECT ALL rt0.c4, v0.c0, v0.c2, rt0.c2, v0.c1, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, v0.c2, rt0.c2, v0.c1, rt0.c3, rt0.c0;
SELECT rt0.c4, v0.c0, v0.c2, rt0.c2, v0.c1, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, v0.c2, rt0.c2, v0.c1, rt0.c3, rt0.c0 HAVING SUM(MAX(MAX(v0.c0))) UNION ALL SELECT ALL rt0.c4, v0.c0, v0.c2, rt0.c2, v0.c1, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, v0.c2, rt0.c2, v0.c1, rt0.c3, rt0.c0 HAVING (NOT (SUM(MAX(MAX(v0.c0))))) UNION ALL SELECT ALL rt0.c4, v0.c0, v0.c2, rt0.c2, v0.c1, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, v0.c2, rt0.c2, v0.c1, rt0.c3, rt0.c0 HAVING ((SUM(MAX(MAX(v0.c0)))) ISNULL);
SELECT rt0.c1, v0.c2, v0.c0, rt0.c3, rt0.c4, v0.c1, rt0.c2 FROM rt0, v0;
SELECT ALL rt0.c1, v0.c2, v0.c0, rt0.c3, rt0.c4, v0.c1, rt0.c2 FROM rt0, v0 WHERE ((- (((v0.c0) IS FALSE)))) UNION ALL SELECT rt0.c1, v0.c2, v0.c0, rt0.c3, rt0.c4, v0.c1, rt0.c2 FROM rt0, v0 WHERE ((NOT ((- (((v0.c0) IS FALSE)))))) UNION ALL SELECT rt0.c1, v0.c2, v0.c0, rt0.c3, rt0.c4, v0.c1, rt0.c2 FROM rt0, v0 WHERE ((((- (((v0.c0) IS FALSE)))) ISNULL));
SELECT rt0.c1, v0.c2, v0.c0, rt0.c3, rt0.c4, v0.c1, rt0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c4 FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c4 FROM rt0, v0 WHERE (CASE (NOT (rt0.c3))  WHEN v0.c0 COLLATE RTRIM THEN (((rt0.c1, rt0.c2, v0.c0))!=((rt0.c4, x'', v0.c1))) END) UNION SELECT DISTINCT rt0.c0, rt0.c4 FROM rt0, v0 WHERE ((NOT (CASE (NOT (rt0.c3))  WHEN v0.c0 COLLATE RTRIM THEN (((rt0.c1, rt0.c2, v0.c0))<>((rt0.c4, x'', v0.c1))) END))) UNION SELECT DISTINCT rt0.c0, rt0.c4 FROM rt0, v0 WHERE (((CASE (NOT (rt0.c3))  WHEN v0.c0 COLLATE RTRIM THEN (((rt0.c1, rt0.c2, v0.c0))!=((rt0.c4, x'', v0.c1))) END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c4 FROM rt0, v0;
SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (json(rt0.c2)))) GROUP BY rt0.c0, v0.c0, rt0.c1 UNION SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT ((NOT (json(rt0.c2)))))) GROUP BY rt0.c0, v0.c0, rt0.c1 UNION SELECT rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((((NOT (json(rt0.c2)))) ISNULL)) GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT v0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4;
SELECT v0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4 HAVING CAST(rt0.c3 AS TEXT) UNION ALL SELECT ALL v0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4 HAVING (NOT (CAST(rt0.c3 AS TEXT))) UNION ALL SELECT v0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4 HAVING ((CAST(rt0.c3 AS TEXT)) ISNULL);
SELECT v0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4;
SELECT v0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4 HAVING CAST(rt0.c3 AS TEXT) UNION ALL SELECT ALL v0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4 HAVING (NOT (CAST(rt0.c3 AS TEXT))) UNION ALL SELECT v0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4 HAVING ((CAST(rt0.c3 AS TEXT)) ISNULL);
SELECT v0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c1, rt0.c3, v0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4;
SELECT ALL SUM(ABS(v0.c2) COLLATE NOCASE) FROM v0;
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (COALESCE((rt0.c1 IN ()), (rt0.c2 IN ()))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (COALESCE((rt0.c1 IN ()), (rt0.c2 IN ()))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((COALESCE((rt0.c1 IN ()), (rt0.c2 IN ()))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE (x'') UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0;
SELECT ALL v0.c2 FROM v0, rt0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0, rt0 WHERE ((((((rt0.c0))>((rt0.c3)))) IS TRUE)) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0, rt0 WHERE ((NOT ((((((rt0.c0))>((rt0.c3)))) IS TRUE)))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0, rt0 WHERE ((((((((rt0.c0))>((rt0.c3)))) IS TRUE)) ISNULL)) GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0, rt0 GROUP BY v0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4;
SELECT rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4;
SELECT rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE (CAST(((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)) AS BLOB)) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT (CAST(((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)) AS BLOB)))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE (((CAST(((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)) AS BLOB)) ISNULL));
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2))) NOT BETWEEN (LAST_INSERT_ROWID()) AND (((((v0.c0)AND(v0.c1)))AND(v0.c1))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2))) NOT BETWEEN (LAST_INSERT_ROWID()) AND (((((v0.c0)AND(v0.c1)))AND(v0.c1))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2))) NOT BETWEEN (LAST_INSERT_ROWID()) AND (((((v0.c0)AND(v0.c1)))AND(v0.c1))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((((v0.c1, v0.c1, v0.c2)) BETWEEN ((((v0.c2) NOTNULL), ((v0.c2)||(v0.c2)), (+ (v0.c2)))) AND ((CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c2 END, v0.c2 COLLATE RTRIM, NULL)))) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT ((((v0.c1, v0.c1, v0.c2)) BETWEEN ((((v0.c2) NOTNULL), ((v0.c2)||(v0.c2)), (+ (v0.c2)))) AND ((CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c2 END, v0.c2 COLLATE RTRIM, NULL)))))) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((((((v0.c1, v0.c1, v0.c2)) BETWEEN ((((v0.c2) NOTNULL), ((v0.c2)||(v0.c2)), (+ (v0.c2)))) AND ((CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c2 END, v0.c2 COLLATE RTRIM, NULL)))) ISNULL)) GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(((AVG(COUNT(x'5860'))) ISNULL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(((AVG(COUNT(x'5860'))) ISNULL)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(((AVG(COUNT(x'5860'))) ISNULL))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND(((rt0.c1)|(rt0.c4)))))OR(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND(((rt0.c1)|(rt0.c4)))))OR(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND(((rt0.c1)|(rt0.c4)))))OR(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((rt0.c3)) BETWEEN (((rt0.c2 IN (v0.c1)))) AND ((CASE WHEN v0.c2 THEN rt0.c0 WHEN v0.c2 THEN rt0.c4 WHEN rt0.c4 THEN v0.c2 END)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((rt0.c3)) BETWEEN (((rt0.c2 IN (v0.c1)))) AND ((CASE WHEN v0.c2 THEN rt0.c0 WHEN v0.c2 THEN rt0.c4 WHEN rt0.c4 THEN v0.c2 END)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((rt0.c3)) BETWEEN (((rt0.c2 IN (v0.c1)))) AND ((CASE WHEN v0.c2 THEN rt0.c0 WHEN v0.c2 THEN rt0.c4 WHEN rt0.c4 THEN v0.c2 END)))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c3, v0.c2, v0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c3, v0.c2, v0.c1, rt0.c0;
SELECT rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c3, v0.c2, v0.c1, rt0.c0 FROM rt0, v0 WHERE ((- (((((((((rt0.c3)AND(0.6282895479661564)))OR(rt0.c3)))OR(v0.c0)))AND(rt0.c4))))) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c3, v0.c2, v0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c3, v0.c2, v0.c1, rt0.c0 FROM rt0, v0 WHERE ((NOT ((- (((((((((rt0.c3)AND(0.6282895479661564)))OR(rt0.c3)))OR(v0.c0)))AND(rt0.c4))))))) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c3, v0.c2, v0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c3, v0.c2, v0.c1, rt0.c0 FROM rt0, v0 WHERE ((((- (((((((((rt0.c3)AND(0.6282895479661564)))OR(rt0.c3)))OR(v0.c0)))AND(rt0.c4))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c3, v0.c2, v0.c1, rt0.c0;
SELECT rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c3, v0.c2, v0.c1, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c3, v0.c2, v0.c1, rt0.c0;
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING AVG(((AVG(v0.c2))<(GROUP_CONCAT(v0.c1)))) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (NOT (AVG(((AVG(v0.c2))<(GROUP_CONCAT(v0.c1)))))) UNION ALL SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING ((AVG(((AVG(v0.c2))<(GROUP_CONCAT(v0.c1))))) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((((v0.c2)<=(0X45f6e755))) ISNULL)) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (((((v0.c2)<=(0x45f6e755))) ISNULL)))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((((((v0.c2)<=(0X45f6e755))) ISNULL)) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (load_extension(((v0.c2) BETWEEN (v0.c0) AND (v0.c2)), ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (load_extension(((v0.c2) BETWEEN (v0.c0) AND (v0.c2)), ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))))) UNION SELECT DISTINCT * FROM v0 NOT INDEXED WHERE (((load_extension(((v0.c2) BETWEEN (v0.c0) AND (v0.c2)), ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))) ISNULL));
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 WHERE ((CAST(rt0.c2 AS REAL) IN ())) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT ((CAST(rt0.c2 AS REAL) IN ())))) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4 UNION SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 WHERE ((((CAST(rt0.c2 AS REAL) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c4;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING ((AVG(v0.c0)) IS FALSE) UNION ALL SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING (NOT (((AVG(v0.c0)) IS FALSE))) UNION ALL SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING ((((AVG(v0.c0)) IS FALSE)) ISNULL);
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING ((AVG(v0.c0)) IS FALSE) UNION ALL SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING (NOT (((AVG(v0.c0)) IS FALSE))) UNION ALL SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING ((((AVG(v0.c0)) IS FALSE)) ISNULL);
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT v0.c1, rt0.c0, v0.c0, rt0.c4, v0.c2, rt0.c3, rt0.c1 FROM rt0, v0;
SELECT ALL v0.c1, rt0.c0, v0.c0, rt0.c4, v0.c2, rt0.c3, rt0.c1 FROM rt0, v0 WHERE ((((rt0.c2)!=(v0.c2)) IN ())) UNION ALL SELECT ALL v0.c1, rt0.c0, v0.c0, rt0.c4, v0.c2, rt0.c3, rt0.c1 FROM rt0, v0 WHERE ((NOT ((((rt0.c2)!=(v0.c2)) IN ())))) UNION ALL SELECT ALL v0.c1, rt0.c0, v0.c0, rt0.c4, v0.c2, rt0.c3, rt0.c1 FROM rt0, v0 WHERE ((((((rt0.c2)<>(v0.c2)) IN ())) ISNULL));
SELECT v0.c1, rt0.c0, v0.c0, rt0.c4, v0.c2, rt0.c3, rt0.c1 FROM rt0, v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (json_remove(CAST(rt0.c4 AS BLOB), CAST(v0.c0 AS REAL))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (json_remove(CAST(rt0.c4 AS BLOB), CAST(v0.c0 AS REAL))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((json_remove(CAST(rt0.c4 AS BLOB), CAST(v0.c0 AS REAL))) ISNULL));
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c1) BETWEEN (v0.c2) AND (v0.c1)))) AND ((((v0.c1) BETWEEN (v0.c0) AND (v0.c2)))))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT v0.c1, v0.c2, v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((((v0.c1) BETWEEN (v0.c2) AND (v0.c1)))) AND ((((v0.c1) BETWEEN (v0.c0) AND (v0.c2)))))))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 WHERE ((((((v0.c0)) BETWEEN ((((v0.c1) BETWEEN (v0.c2) AND (v0.c1)))) AND ((((v0.c1) BETWEEN (v0.c0) AND (v0.c2)))))) ISNULL)) GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT rt0.c0, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON (((v0.c2)/(v0.c2)) IN ()) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON (((v0.c2)/(v0.c2)) IN ()) GROUP BY rt0.c0, rt0.c1 HAVING TOTAL(((1359189376)OR(rt0.c4))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON (((v0.c2)/(v0.c2)) IN ()) GROUP BY rt0.c0, rt0.c1 HAVING (NOT (TOTAL(((1359189376)OR(rt0.c4))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON (((v0.c2)/(v0.c2)) IN ()) GROUP BY rt0.c0, rt0.c1 HAVING ((TOTAL(((1359189376)OR(rt0.c4)))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON (((v0.c2)/(v0.c2)) IN ()) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON (((v0.c2)/(v0.c2)) IN ()) GROUP BY rt0.c0, rt0.c1 HAVING TOTAL(((1359189376)OR(rt0.c4))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON (((v0.c2)/(v0.c2)) IN ()) GROUP BY rt0.c0, rt0.c1 HAVING (NOT (TOTAL(((1359189376)OR(rt0.c4))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON (((v0.c2)/(v0.c2)) IN ()) GROUP BY rt0.c0, rt0.c1 HAVING ((TOTAL(((1359189376)OR(rt0.c4)))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON (((v0.c2)/(v0.c2)) IN ()) GROUP BY rt0.c0, rt0.c1;
SELECT ALL v0.c2, v0.c0 FROM v0;
SELECT ALL v0.c2, v0.c0 FROM v0 WHERE ((((((((v0.c1))==((v0.c2))))AND(((v0.c2)LIKE(v0.c0)))))AND((NOT (v0.c2))))) UNION ALL SELECT v0.c2, v0.c0 FROM v0 WHERE ((NOT ((((((((v0.c1))=((v0.c2))))AND(((v0.c2)LIKE(v0.c0)))))AND((NOT (v0.c2))))))) UNION ALL SELECT v0.c2, v0.c0 FROM v0 WHERE ((((((((((v0.c1))=((v0.c2))))AND(((v0.c2)LIKE(v0.c0)))))AND((NOT (v0.c2))))) ISNULL));
SELECT ALL v0.c2, v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (COALESCE((rt0.c0 IN (0.0859828337145162)), ((rt0.c3)<(rt0.c4)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (COALESCE((rt0.c0 IN (0.0859828337145162)), ((rt0.c3)<(rt0.c4)))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((COALESCE((rt0.c0 IN (0.0859828337145162)), ((rt0.c3)<(rt0.c4)))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL v0.c0 FROM v0 CROSS JOIN rt0 ON ((((-1.314134241E9)OR(v0.c1))) NOT BETWEEN (((v0.c0)>=(rt0.c1))) AND (NULLIF(v0.c2, rt0.c2))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 NOT INDEXED CROSS JOIN rt0 ON ((((-1.314134241E9)OR(v0.c1))) NOT BETWEEN (((v0.c0)>=(rt0.c1))) AND (NULLIF(v0.c2, rt0.c2))) WHERE (((((0.5403977789324352) NOT NULL)) BETWEEN (((rt0.c4) NOTNULL)) AND (x''))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 CROSS JOIN rt0 ON ((((-1.314134241E9)OR(v0.c1))) NOT BETWEEN (((v0.c0)>=(rt0.c1))) AND (NULLIF(v0.c2, rt0.c2))) WHERE ((NOT (((((0.5403977789324352) NOT NULL)) BETWEEN (((rt0.c4) NOTNULL)) AND (x''))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 CROSS JOIN rt0 ON ((((-1.314134241E9)OR(v0.c1))) NOT BETWEEN (((v0.c0)>=(rt0.c1))) AND (NULLIF(v0.c2, rt0.c2))) WHERE (((((((0.5403977789324352) NOT NULL)) BETWEEN (((rt0.c4) NOTNULL)) AND (x''))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 CROSS JOIN rt0 ON ((((-1.314134241E9)OR(v0.c1))) NOT BETWEEN (((v0.c0)>=(rt0.c1))) AND (NULLIF(v0.c2, rt0.c2))) GROUP BY v0.c0;
SELECT rt0.c4, rt0.c0, rt0.c3 FROM v0 CROSS JOIN rt0 ON ((ABS(DISTINCT v0.c2))<<((~ (v0.c1)))) GROUP BY rt0.c4, rt0.c0, rt0.c3;
SELECT rt0.c4, rt0.c0, rt0.c3 FROM v0 CROSS JOIN rt0 ON ((ABS(DISTINCT v0.c2))<<((~ (v0.c1)))) GROUP BY rt0.c4, rt0.c0, rt0.c3 HAVING MAX(((rt0.c1)||(AVG(rt0.c3)))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c3 FROM v0 CROSS JOIN rt0 ON ((ABS(DISTINCT v0.c2))<<((~ (v0.c1)))) GROUP BY rt0.c4, rt0.c0, rt0.c3 HAVING (NOT (MAX(((rt0.c1)||(AVG(rt0.c3)))))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c3 FROM v0 CROSS JOIN rt0 ON ((ABS(DISTINCT v0.c2))<<((~ (v0.c1)))) GROUP BY rt0.c4, rt0.c0, rt0.c3 HAVING ((MAX(((rt0.c1)||(AVG(rt0.c3))))) ISNULL);
SELECT ALL v0.c1, rt0.c1, v0.c2, rt0.c2, rt0.c3, rt0.c0, v0.c0, rt0.c4 FROM rt0, v0;
SELECT ALL v0.c1, rt0.c1, v0.c2, rt0.c2, rt0.c3, rt0.c0, v0.c0, rt0.c4 FROM rt0, v0 WHERE (0X7f7b04b0) UNION ALL SELECT v0.c1, rt0.c1, v0.c2, rt0.c2, rt0.c3, rt0.c0, v0.c0, rt0.c4 FROM rt0, v0 WHERE ((NOT (0X7f7b04b0))) UNION ALL SELECT v0.c1, rt0.c1, v0.c2, rt0.c2, rt0.c3, rt0.c0, v0.c0, rt0.c4 FROM rt0, v0 WHERE (((0x7f7b04b0) ISNULL));
SELECT ALL v0.c1, rt0.c1, v0.c2, rt0.c2, rt0.c3, rt0.c0, v0.c0, rt0.c4 FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((((v0.c2)OR(v0.c1)))AND(v0.c2))) NOT BETWEEN (((v0.c0)IS(v0.c1))) AND (((v0.c2)>=(v0.c1))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((v0.c2)OR(v0.c1)))AND(v0.c2))) NOT BETWEEN (((v0.c0)IS(v0.c1))) AND (((v0.c2)>=(v0.c1))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((((v0.c2)OR(v0.c1)))AND(v0.c2))) NOT BETWEEN (((v0.c0)IS(v0.c1))) AND (((v0.c2)>=(v0.c1))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1;
SELECT v0.c0, v0.c1 FROM v0 WHERE (((((CASE WHEN v0.c2 THEN v0.c1 END)AND(NULL)))AND(((v0.c1) NOTNULL)))) GROUP BY v0.c0, v0.c1 UNION SELECT v0.c0, v0.c1 FROM v0 WHERE ((NOT (((((CASE WHEN v0.c2 THEN v0.c1 END)AND(NULL)))AND(((v0.c1) NOTNULL)))))) GROUP BY v0.c0, v0.c1 UNION SELECT ALL v0.c0, v0.c1 FROM v0 WHERE (((((((CASE WHEN v0.c2 THEN v0.c1 END)AND(NULL)))AND(((v0.c1) NOTNULL)))) ISNULL)) GROUP BY v0.c0, v0.c1;
SELECT ALL v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1;
SELECT rt0.c2, v0.c2 FROM v0, rt0 GROUP BY rt0.c2, v0.c2;
SELECT rt0.c2, v0.c2 FROM v0, rt0 GROUP BY rt0.c2, v0.c2 HAVING TOTAL(((rt0.c4) NOTNULL)) UNION ALL SELECT rt0.c2, v0.c2 FROM v0, rt0 GROUP BY rt0.c2, v0.c2 HAVING (NOT (TOTAL(((rt0.c4) NOTNULL)))) UNION ALL SELECT ALL rt0.c2, v0.c2 FROM v0, rt0 GROUP BY rt0.c2, v0.c2 HAVING ((TOTAL(((rt0.c4) NOTNULL))) ISNULL);
SELECT rt0.c2, v0.c2 FROM v0, rt0 GROUP BY rt0.c2, v0.c2;
SELECT rt0.c2, v0.c2 FROM v0, rt0 GROUP BY rt0.c2, v0.c2 HAVING TOTAL(((rt0.c4) NOTNULL)) UNION ALL SELECT rt0.c2, v0.c2 FROM v0, rt0 GROUP BY rt0.c2, v0.c2 HAVING (NOT (TOTAL(((rt0.c4) NOTNULL)))) UNION ALL SELECT ALL rt0.c2, v0.c2 FROM v0, rt0 GROUP BY rt0.c2, v0.c2 HAVING ((TOTAL(((rt0.c4) NOTNULL))) ISNULL);
SELECT rt0.c2, v0.c2 FROM v0, rt0 GROUP BY rt0.c2, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0;
SELECT ALL v0.c1, v0.c2 FROM v0 WHERE (v0.c1) UNION ALL SELECT v0.c1, v0.c2 FROM v0 WHERE ((NOT (v0.c1))) UNION ALL SELECT v0.c1, v0.c2 FROM v0 WHERE (((v0.c1) ISNULL));
SELECT ALL v0.c1, v0.c2 FROM v0;
SELECT DISTINCT rt0.c4, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c3 FROM rt0 WHERE ((x'' IN ())) UNION SELECT DISTINCT rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT ((x'' IN ())))) UNION SELECT DISTINCT rt0.c4, rt0.c3 FROM rt0 WHERE ((((x'' IN ())) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c3 FROM rt0;
SELECT ALL rt0.c4, rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0 INNER JOIN v0 ON ((((rt0.c0 IN (rt0.c4)), ((rt0.c4)IS NOT(0.1744572378398781)), (((rt0.c4)) BETWEEN ((v0.c0)) AND ((v0.c1))), ((rt0.c4)OR(rt0.c1)), (- (rt0.c2))))>(((~ (NULL)), x'', ((rt0.c4)GLOB(v0.c1)), 0.8289089505199133, (- (rt0.c2))))) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c0, v0.c0;
SELECT ALL rt0.c4, rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0 INNER JOIN v0 ON ((((rt0.c0 IN (rt0.c4)), ((rt0.c4)IS NOT(0.1744572378398781)), (((rt0.c4)) BETWEEN ((v0.c0)) AND ((v0.c1))), ((rt0.c4)OR(rt0.c1)), (- (rt0.c2))))>(((~ (NULL)), x'', ((rt0.c4)GLOB(v0.c1)), 0.8289089505199133, (- (rt0.c2))))) WHERE (CAST(COALESCE(v0.c1, rt0.c0) AS BLOB)) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c0, v0.c0 UNION SELECT ALL rt0.c4, rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0 INNER JOIN v0 ON ((((rt0.c0 IN (rt0.c4)), ((rt0.c4)IS NOT(0.1744572378398781)), (((rt0.c4)) BETWEEN ((v0.c0)) AND ((v0.c1))), ((rt0.c4)OR(rt0.c1)), (- (rt0.c2))))>(((~ (NULL)), x'', ((rt0.c4)GLOB(v0.c1)), 0.8289089505199133, (- (rt0.c2))))) WHERE ((NOT (CAST(COALESCE(v0.c1, rt0.c0) AS BLOB)))) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c0, v0.c0 UNION SELECT ALL rt0.c4, rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0 INNER JOIN v0 ON ((((rt0.c0 IN (rt0.c4)), ((rt0.c4)IS NOT(0.1744572378398781)), (((rt0.c4)) BETWEEN ((v0.c0)) AND ((v0.c1))), ((rt0.c4)OR(rt0.c1)), (- (rt0.c2))))>(((~ (NULL)), x'', ((rt0.c4)GLOB(v0.c1)), 0.8289089505199133, (- (rt0.c2))))) WHERE (((CAST(COALESCE(v0.c1, rt0.c0) AS BLOB)) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c0, v0.c0;
SELECT ALL rt0.c4, rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0 INNER JOIN v0 ON ((((rt0.c0 IN (rt0.c4)), ((rt0.c4)IS NOT(0.1744572378398781)), (((rt0.c4)) BETWEEN ((v0.c0)) AND ((v0.c1))), ((rt0.c4)OR(rt0.c1)), (- (rt0.c2))))>(((~ (NULL)), x'', ((rt0.c4)GLOB(v0.c1)), 0.8289089505199133, (- (rt0.c2))))) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c0, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((SUM(SUM(v0.c1)), CAST(v0.c2 AS INTEGER), COUNT(*)))<((AVG(MAX(v0.c2)), ((v0.c1) NOTNULL), AVG(v0.c2)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((SUM(SUM(v0.c1)), CAST(v0.c2 AS INTEGER), COUNT(*)))<((AVG(MAX(v0.c2)), ((v0.c1) NOTNULL), AVG(v0.c2)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((SUM(SUM(v0.c1)), CAST(v0.c2 AS INTEGER), COUNT(*)))<((AVG(MAX(v0.c2)), ((v0.c1) NOTNULL), AVG(v0.c2))))) ISNULL);
SELECT v0.c0, v0.c1, v0.c2 FROM v0;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 WHERE (rtreenode(DATE(v0.c2, v0.c0, v0.c1), ((v0.c1) IS TRUE))) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 WHERE ((NOT (rtreenode(DATE(v0.c2, v0.c0, v0.c1), ((v0.c1) IS TRUE))))) UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 WHERE (((rtreenode(DATE(v0.c2, v0.c0, v0.c1), ((v0.c1) IS TRUE))) ISNULL));
SELECT v0.c0, v0.c1, v0.c2 FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c1, v0.c2, rt0.c4 FROM v0, rt0 GROUP BY v0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c1, v0.c2, rt0.c4;
SELECT ALL v0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c1, v0.c2, rt0.c4 FROM v0, rt0 WHERE ((+ (rt0.c1)) COLLATE RTRIM) GROUP BY v0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c1, v0.c2, rt0.c4 UNION SELECT v0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c1, v0.c2, rt0.c4 FROM v0, rt0 WHERE ((NOT ((+ (rt0.c1)) COLLATE RTRIM))) GROUP BY v0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c1, v0.c2, rt0.c4 UNION SELECT ALL v0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c1, v0.c2, rt0.c4 FROM v0, rt0 WHERE ((((+ (rt0.c1)) COLLATE RTRIM) ISNULL)) GROUP BY v0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c1, v0.c2, rt0.c4;
SELECT v0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c1, v0.c2, rt0.c4 FROM v0, rt0 GROUP BY v0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c1, v0.c2, rt0.c4;
SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4;
SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4 HAVING ((((((((((rt0.c4)<('-911317387')))OR(((((rt0.c4)OR(COUNT(rt0.c0))))AND(AVG(rt0.c2))))))OR(MAX(COUNT(rt0.c0)))))OR(CAST(MIN(GROUP_CONCAT(COUNT(rt0.c1))) AS NUMERIC))))OR(SUM(TOTAL(GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4 HAVING (NOT (((((((((((rt0.c4)<('-911317387')))OR(((((rt0.c4)OR(COUNT(rt0.c0))))AND(AVG(rt0.c2))))))OR(MAX(COUNT(rt0.c0)))))OR(CAST(MIN(GROUP_CONCAT(COUNT(rt0.c1))) AS NUMERIC))))OR(SUM(TOTAL(GROUP_CONCAT(rt0.c0))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c4 HAVING ((((((((((((rt0.c4)<('-911317387')))OR(((((rt0.c4)OR(COUNT(rt0.c0))))AND(AVG(rt0.c2))))))OR(MAX(COUNT(rt0.c0)))))OR(CAST(MIN(GROUP_CONCAT(COUNT(rt0.c1))) AS NUMERIC))))OR(SUM(TOTAL(GROUP_CONCAT(rt0.c0)))))) ISNULL);
SELECT ALL v0.c1, rt0.c0, rt0.c4, v0.c2, rt0.c1, rt0.c2, rt0.c3, v0.c0 FROM rt0, v0;
SELECT ALL v0.c1, rt0.c0, rt0.c4, v0.c2, rt0.c1, rt0.c2, rt0.c3, v0.c0 FROM rt0, v0 WHERE ((((~ (v0.c2)))LIKE(((rt0.c3) NOT BETWEEN (v0.c1) AND (''))))) UNION ALL SELECT ALL v0.c1, rt0.c0, rt0.c4, v0.c2, rt0.c1, rt0.c2, rt0.c3, v0.c0 FROM rt0, v0 WHERE ((NOT ((((~ (v0.c2)))LIKE(((rt0.c3) NOT BETWEEN (v0.c1) AND (''))))))) UNION ALL SELECT v0.c1, rt0.c0, rt0.c4, v0.c2, rt0.c1, rt0.c2, rt0.c3, v0.c0 FROM rt0, v0 WHERE ((((((~ (v0.c2)))LIKE(((rt0.c3) NOT BETWEEN (v0.c1) AND (''))))) ISNULL));
SELECT ALL v0.c1, rt0.c0, rt0.c4, v0.c2, rt0.c1, rt0.c2, rt0.c3, v0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0)=(v0.c1)))AND(CASE v0.c1  WHEN v0.c0 THEN 0.31092967922743486 WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c1 END)))OR(CAST(v0.c1 AS BLOB)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((v0.c0)=(v0.c1)))AND(CASE v0.c1  WHEN v0.c0 THEN 0.31092967922743486 WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c1 END)))OR(CAST(v0.c1 AS BLOB)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((((v0.c0)=(v0.c1)))AND(CASE v0.c1  WHEN v0.c0 THEN 0.31092967922743486 WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c1 END)))OR(CAST(v0.c1 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE ((((((((((rt0.c0 IN ()))AND(((rt0.c3)AND(rt0.c1)))))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (-1698181763)))))OR(CAST('-1529625380' AS INTEGER)))) GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT ((((((((((rt0.c0 IN ()))AND(((rt0.c3)AND(rt0.c1)))))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (-1698181763)))))OR(CAST('-1529625380' AS INTEGER)))))) GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE ((((((((((((rt0.c0 IN ()))AND(((rt0.c3)AND(rt0.c1)))))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (-1698181763)))))OR(CAST('-1529625380' AS INTEGER)))) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING (((x'a73e'))<=((MAX(GROUP_CONCAT(AVG(SUM(GROUP_CONCAT(GROUP_CONCAT(v0.c2))))))))) UNION ALL SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING (NOT ((((x'a73e'))<=((MAX(GROUP_CONCAT(AVG(SUM(GROUP_CONCAT(GROUP_CONCAT(v0.c2))))))))))) UNION ALL SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING (((((x'a73e'))<=((MAX(GROUP_CONCAT(AVG(SUM(GROUP_CONCAT(GROUP_CONCAT(v0.c2)))))))))) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0;
SELECT ALL rt0.c3, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 WHERE (MIN((((v0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))), CASE rt0.c3  WHEN rt0.c0 THEN v0.c0 END)) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 WHERE ((NOT (MIN((((v0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))), CASE rt0.c3  WHEN rt0.c0 THEN v0.c0 END)))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 WHERE (((MIN((((v0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))), CASE rt0.c3  WHEN rt0.c0 THEN v0.c0 END)) ISNULL));
SELECT ALL rt0.c3, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 WHERE (((((v0.c1 COLLATE RTRIM)AND(((rt0.c0) NOTNULL))))OR(json_extract(rt0.c0, rt0.c3)))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 WHERE ((NOT (((((v0.c1 COLLATE RTRIM)AND(((rt0.c0) NOTNULL))))OR(json_extract(rt0.c0, rt0.c3)))))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 WHERE (((((((v0.c1 COLLATE RTRIM)AND(((rt0.c0) NOTNULL))))OR(json_extract(rt0.c0, rt0.c3)))) ISNULL));
SELECT ALL rt0.c2, rt0.c0, v0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c2, rt0.c0, v0.c1;
SELECT ALL rt0.c2, rt0.c0, v0.c1 FROM rt0 NATURAL JOIN v0 WHERE (((CASE WHEN rt0.c2 THEN v0.c1 ELSE v0.c0 END) BETWEEN (rt0.c1 COLLATE BINARY) AND (v0.c2))) GROUP BY rt0.c2, rt0.c0, v0.c1 UNION SELECT ALL rt0.c2, rt0.c0, v0.c1 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN v0.c1 ELSE v0.c0 END) BETWEEN (rt0.c1 COLLATE BINARY) AND (v0.c2))))) GROUP BY rt0.c2, rt0.c0, v0.c1 UNION SELECT ALL rt0.c2, rt0.c0, v0.c1 FROM rt0 NATURAL JOIN v0 WHERE (((((CASE WHEN rt0.c2 THEN v0.c1 ELSE v0.c0 END) BETWEEN (rt0.c1 COLLATE BINARY) AND (v0.c2))) ISNULL)) GROUP BY rt0.c2, rt0.c0, v0.c1;
SELECT ALL rt0.c2, rt0.c0, v0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c2, rt0.c0, v0.c1;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING GROUP_CONCAT(MAX(COUNT(v0.c1))) UNION ALL SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (NOT (GROUP_CONCAT(MAX(COUNT(v0.c1))))) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING ((GROUP_CONCAT(MAX(COUNT(v0.c1)))) ISNULL);
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (((((((v0.c2)OR(v0.c1)))OR(0.996913385978644)))>>(0Xffffffff93ceff9f COLLATE RTRIM))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (((((((v0.c2)OR(v0.c1)))OR(0.996913385978644)))>>(0xffffffff93ceff9f COLLATE RTRIM))))) UNION ALL SELECT * FROM v0, rt0 WHERE (((((((((v0.c2)OR(v0.c1)))OR(0.996913385978644)))>>(0Xffffffff93ceff9f COLLATE RTRIM))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE (1788393448) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (1788393448))) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE (((1788393448) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE (CAST(ABS(v0.c0) AS INTEGER)) GROUP BY v0.c2, v0.c0, v0.c1 UNION SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((NOT (CAST(ABS(v0.c0) AS INTEGER)))) GROUP BY v0.c2, v0.c0, v0.c1 UNION SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((CAST(ABS(v0.c0) AS INTEGER)) ISNULL)) GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING (NOT (rt0.c1 COLLATE NOCASE)) UNION ALL SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING (NOT ((NOT (rt0.c1 COLLATE NOCASE)))) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING (((NOT (rt0.c1 COLLATE NOCASE))) ISNULL);
SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING (NOT (rt0.c1 COLLATE NOCASE)) UNION ALL SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING (NOT ((NOT (rt0.c1 COLLATE NOCASE)))) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING (((NOT (rt0.c1 COLLATE NOCASE))) ISNULL);
SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT rt0.c3, rt0.c0 FROM rt0 NOT INDEXED;
SELECT ALL rt0.c3, rt0.c0 FROM rt0 WHERE (((NOT (rt0.c2)) IN ())) UNION ALL SELECT rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (((NOT (rt0.c2)) IN ())))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0 WHERE (((((NOT (rt0.c2)) IN ())) ISNULL));
SELECT rt0.c3, rt0.c0 FROM rt0 NOT INDEXED;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((- (((v0.c1)GLOB(v0.c2))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((- (((v0.c1)GLOB(v0.c2))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((- (((v0.c1)GLOB(v0.c2))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c1 FROM rt0 CROSS JOIN v0 ON ((((v0.c2)OR((((v0.c2))=((v0.c0))))))AND(((v0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)))) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 CROSS JOIN v0 ON ((((v0.c2)OR((((v0.c2))==((v0.c0))))))AND(((v0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)))) WHERE (rt0.c4) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 CROSS JOIN v0 ON ((((v0.c2)OR((((v0.c2))==((v0.c0))))))AND(((v0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)))) WHERE ((NOT (rt0.c4))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 CROSS JOIN v0 ON ((((v0.c2)OR((((v0.c2))==((v0.c0))))))AND(((v0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)))) WHERE (((rt0.c4) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 CROSS JOIN v0 ON ((((v0.c2)OR((((v0.c2))=((v0.c0))))))AND(((v0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)))) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c1 HAVING ((MIN(COUNT(GROUP_CONCAT(rt0.c0)))) BETWEEN ((- (MAX(COUNT(*))))) AND ((AVG(rt0.c4) IN ()))) UNION ALL SELECT rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c1 HAVING (NOT (((MIN(COUNT(GROUP_CONCAT(rt0.c0)))) BETWEEN ((- (MAX(COUNT(*))))) AND ((AVG(rt0.c4) IN ()))))) UNION ALL SELECT rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c1 HAVING ((((MIN(COUNT(GROUP_CONCAT(rt0.c0)))) BETWEEN ((- (MAX(COUNT(*))))) AND ((AVG(rt0.c4) IN ())))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((x'')==((+ (rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((x'')==((+ (rt0.c0))))))) UNION ALL SELECT * FROM rt0 WHERE (((((x'')==((+ (rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (json_object((+ ('r-6C>')), CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (json_object((+ ('r-6C>')), CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((json_object((+ ('r-6C>')), CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0, v0.c1, rt0.c3, rt0.c1, v0.c2, rt0.c0, rt0.c2, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, v0.c1, rt0.c3, rt0.c1, v0.c2, rt0.c0, rt0.c2, rt0.c4;
SELECT ALL v0.c0, v0.c1, rt0.c3, rt0.c1, v0.c2, rt0.c0, rt0.c2, rt0.c4 FROM v0, rt0 WHERE (0.5351040838977282) GROUP BY v0.c0, v0.c1, rt0.c3, rt0.c1, v0.c2, rt0.c0, rt0.c2, rt0.c4 UNION SELECT v0.c0, v0.c1, rt0.c3, rt0.c1, v0.c2, rt0.c0, rt0.c2, rt0.c4 FROM v0, rt0 WHERE ((NOT (0.5351040838977282))) GROUP BY v0.c0, v0.c1, rt0.c3, rt0.c1, v0.c2, rt0.c0, rt0.c2, rt0.c4 UNION SELECT ALL v0.c0, v0.c1, rt0.c3, rt0.c1, v0.c2, rt0.c0, rt0.c2, rt0.c4 FROM v0, rt0 WHERE (((0.5351040838977282) ISNULL)) GROUP BY v0.c0, v0.c1, rt0.c3, rt0.c1, v0.c2, rt0.c0, rt0.c2, rt0.c4;
SELECT v0.c0, v0.c1, rt0.c3, rt0.c1, v0.c2, rt0.c0, rt0.c2, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, v0.c1, rt0.c3, rt0.c1, v0.c2, rt0.c0, rt0.c2, rt0.c4;
SELECT ALL v0.c1, rt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c0 FROM rt0, v0 GROUP BY v0.c1, rt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c0;
SELECT ALL v0.c1, rt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c0 FROM rt0, v0 GROUP BY v0.c1, rt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c0 HAVING '-50232995' UNION ALL SELECT v0.c1, rt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c0 FROM rt0, v0 GROUP BY v0.c1, rt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c0 HAVING (NOT ('-50232995')) UNION ALL SELECT ALL v0.c1, rt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c0 FROM rt0, v0 GROUP BY v0.c1, rt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c0 HAVING (('-50232995') ISNULL);
SELECT ALL v0.c1, rt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c0 FROM rt0, v0 GROUP BY v0.c1, rt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c0;
SELECT ALL v0.c1, rt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c0 FROM rt0, v0 GROUP BY v0.c1, rt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c0 HAVING '-50232995' UNION ALL SELECT v0.c1, rt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c0 FROM rt0, v0 GROUP BY v0.c1, rt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c0 HAVING (NOT ('-50232995')) UNION ALL SELECT ALL v0.c1, rt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c0 FROM rt0, v0 GROUP BY v0.c1, rt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c0 HAVING (('-50232995') ISNULL);
SELECT ALL v0.c1, rt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c0 FROM rt0, v0 GROUP BY v0.c1, rt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((-886037965) NOT BETWEEN (rt0.c4) AND (rt0.c4 COLLATE NOCASE))) ORDER BY ((((rt0.c1))=((rt0.c1))) IN ())  NULLS LAST;
SELECT * FROM rt0 WHERE ((NOT (((-886037965) NOT BETWEEN (rt0.c4) AND (rt0.c4 COLLATE NOCASE))))) ORDER BY ((((rt0.c1))==((rt0.c1))) IN ())  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((-886037965) NOT BETWEEN (rt0.c4) AND (rt0.c4 COLLATE NOCASE))) ISNULL)) ORDER BY ((((rt0.c1))==((rt0.c1))) IN ())  NULLS LAST;
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (v0.c1) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (v0.c1))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((v0.c1) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((rt0.c3 COLLATE NOCASE IN (((rt0.c0) IS FALSE)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((rt0.c3 COLLATE NOCASE IN (((rt0.c0) IS FALSE)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((rt0.c3 COLLATE NOCASE IN (((rt0.c0) IS FALSE)))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT v0.c0 FROM rt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING LOWER(CASE WHEN GROUP_CONCAT(v0.c1) THEN AVG(v0.c0) ELSE v0.c1 END) UNION ALL SELECT v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING (NOT (LOWER(CASE WHEN GROUP_CONCAT(v0.c1) THEN AVG(v0.c0) ELSE v0.c1 END))) UNION ALL SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING ((LOWER(CASE WHEN GROUP_CONCAT(v0.c1) THEN AVG(v0.c0) ELSE v0.c1 END)) ISNULL);
SELECT v0.c0 FROM rt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING LOWER(CASE WHEN GROUP_CONCAT(v0.c1) THEN AVG(v0.c0) ELSE v0.c1 END) UNION ALL SELECT v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING (NOT (LOWER(CASE WHEN GROUP_CONCAT(v0.c1) THEN AVG(v0.c0) ELSE v0.c1 END))) UNION ALL SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING ((LOWER(CASE WHEN GROUP_CONCAT(v0.c1) THEN AVG(v0.c0) ELSE v0.c1 END)) ISNULL);
SELECT v0.c0 FROM rt0, v0 GROUP BY v0.c0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (COALESCE(COALESCE(v0.c1, v0.c1, v0.c0, v0.c1), CAST(v0.c2 AS REAL))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (COALESCE(COALESCE(v0.c1, v0.c1, v0.c0, v0.c1), CAST(v0.c2 AS REAL))))) UNION ALL SELECT ALL * FROM v0 WHERE (((COALESCE(COALESCE(v0.c1, v0.c1, v0.c0, v0.c1), CAST(v0.c2 AS REAL))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((((rt0.c1 IN (rt0.c4)))AND((((rt0.c3)) BETWEEN ((v0.c1)) AND ((v0.c1)))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((((rt0.c1 IN (rt0.c4)))AND((((rt0.c3)) BETWEEN ((v0.c1)) AND ((v0.c1)))))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((((rt0.c1 IN (rt0.c4)))AND((((rt0.c3)) BETWEEN ((v0.c1)) AND ((v0.c1)))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT v0.c2, rt0.c2, rt0.c1, rt0.c3, rt0.c0, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c2, rt0.c2, rt0.c1, rt0.c3, rt0.c0, v0.c0, rt0.c4;
SELECT v0.c2, rt0.c2, rt0.c1, rt0.c3, rt0.c0, v0.c0, rt0.c4 FROM rt0, v0 WHERE (((((rt0.c0)=(v0.c1)))LIKE((((v0.c1))>((NULL)))))) GROUP BY v0.c2, rt0.c2, rt0.c1, rt0.c3, rt0.c0, v0.c0, rt0.c4 UNION SELECT ALL v0.c2, rt0.c2, rt0.c1, rt0.c3, rt0.c0, v0.c0, rt0.c4 FROM rt0, v0 WHERE ((NOT (((((rt0.c0)==(v0.c1)))LIKE((((v0.c1))>((NULL)))))))) GROUP BY v0.c2, rt0.c2, rt0.c1, rt0.c3, rt0.c0, v0.c0, rt0.c4 UNION SELECT v0.c2, rt0.c2, rt0.c1, rt0.c3, rt0.c0, v0.c0, rt0.c4 FROM rt0, v0 WHERE (((((((rt0.c0)==(v0.c1)))LIKE((((v0.c1))>((NULL)))))) ISNULL)) GROUP BY v0.c2, rt0.c2, rt0.c1, rt0.c3, rt0.c0, v0.c0, rt0.c4;
SELECT v0.c2, rt0.c2, rt0.c1, rt0.c3, rt0.c0, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c2, rt0.c2, rt0.c1, rt0.c3, rt0.c0, v0.c0, rt0.c4;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING ((TOTAL(AVG(v0.c0))) NOT BETWEEN (((COUNT(COUNT(*))) NOT BETWEEN (COUNT(v0.c1)) AND (COUNT(*)))) AND (CAST(v0.c1 AS NUMERIC))) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (NOT (((TOTAL(AVG(v0.c0))) NOT BETWEEN (((COUNT(COUNT(*))) NOT BETWEEN (COUNT(v0.c1)) AND (COUNT(*)))) AND (CAST(v0.c1 AS NUMERIC))))) UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING ((((TOTAL(AVG(v0.c0))) NOT BETWEEN (((COUNT(COUNT(*))) NOT BETWEEN (COUNT(v0.c1)) AND (COUNT(*)))) AND (CAST(v0.c1 AS NUMERIC)))) ISNULL);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON json_patch(v0.c1 COLLATE NOCASE, ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON json_patch(v0.c1 COLLATE NOCASE, ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3))) WHERE (((((v0.c2) NOT NULL)) BETWEEN ((rt0.c4 IN ())) AND (((v0.c0)*(rt0.c4))))) UNION ALL SELECT * FROM v0 LEFT OUTER JOIN rt0 ON json_patch(v0.c1 COLLATE NOCASE, ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3))) WHERE ((NOT (((((v0.c2) NOT NULL)) BETWEEN ((rt0.c4 IN ())) AND (((v0.c0)*(rt0.c4))))))) UNION ALL SELECT * FROM v0 LEFT OUTER JOIN rt0 ON json_patch(v0.c1 COLLATE NOCASE, ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3))) WHERE (((((((v0.c2) NOT NULL)) BETWEEN ((rt0.c4 IN ())) AND (((v0.c0)*(rt0.c4))))) ISNULL));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON json_patch(v0.c1 COLLATE NOCASE, ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)));
SELECT DISTINCT v0.c1, rt0.c2, rt0.c0, v0.c0, rt0.c4, rt0.c3, v0.c2 FROM v0, rt0;
SELECT DISTINCT v0.c1, rt0.c2, rt0.c0, v0.c0, rt0.c4, rt0.c3, v0.c2 FROM v0, rt0 WHERE ((+ (CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 END))) UNION SELECT DISTINCT v0.c1, rt0.c2, rt0.c0, v0.c0, rt0.c4, rt0.c3, v0.c2 FROM v0, rt0 WHERE ((NOT ((+ (CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 END))))) UNION SELECT DISTINCT v0.c1, rt0.c2, rt0.c0, v0.c0, rt0.c4, rt0.c3, v0.c2 FROM v0, rt0 WHERE ((((+ (CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 END))) ISNULL));
SELECT DISTINCT v0.c1, rt0.c2, rt0.c0, v0.c0, rt0.c4, rt0.c3, v0.c2 FROM v0, rt0;
SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE (((((((((CASE WHEN rt0.c1 THEN rt0.c3 END)AND(((rt0.c3)<(rt0.c4)))))AND(x'' COLLATE BINARY)))AND((rt0.c2 IN ()))))OR((~ (rt0.c0))))) GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c3 UNION SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (((((((((CASE WHEN rt0.c1 THEN rt0.c3 END)AND(((rt0.c3)<(rt0.c4)))))AND(x'' COLLATE BINARY)))AND((rt0.c2 IN ()))))OR((~ (rt0.c0))))))) GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE (((((((((((CASE WHEN rt0.c1 THEN rt0.c3 END)AND(((rt0.c3)<(rt0.c4)))))AND(x'' COLLATE BINARY)))AND((rt0.c2 IN ()))))OR((~ (rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c3;
SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c3;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING ((SUM(SUM(TOTAL(0.5726052462376667))))>=(MIN(v0.c1))) COLLATE NOCASE UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING (NOT (((SUM(SUM(TOTAL(0.5726052462376667))))>=(MIN(v0.c1))) COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING ((((SUM(SUM(TOTAL(0.5726052462376667))))>=(MIN(v0.c1))) COLLATE NOCASE) ISNULL);
SELECT rt0.c4, rt0.c1, v0.c2, v0.c0, v0.c1, rt0.c3 FROM rt0, v0;
SELECT ALL rt0.c4, rt0.c1, v0.c2, v0.c0, v0.c1, rt0.c3 FROM rt0, v0 WHERE (CASE (((rt0.c0, v0.c0, rt0.c0)) BETWEEN ((rt0.c3, v0.c0, v0.c2)) AND ((rt0.c1, rt0.c2, 0.7690843140031874)))  WHEN ((rt0.c4)/(rt0.c2)) THEN load_extension(v0.c2) ELSE ((v0.c0)>=(v0.c0)) END) UNION ALL SELECT rt0.c4, rt0.c1, v0.c2, v0.c0, v0.c1, rt0.c3 FROM rt0, v0 WHERE ((NOT (CASE (((rt0.c0, v0.c0, rt0.c0)) BETWEEN ((rt0.c3, v0.c0, v0.c2)) AND ((rt0.c1, rt0.c2, 0.7690843140031874)))  WHEN ((rt0.c4)/(rt0.c2)) THEN load_extension(v0.c2) ELSE ((v0.c0)>=(v0.c0)) END))) UNION ALL SELECT ALL rt0.c4, rt0.c1, v0.c2, v0.c0, v0.c1, rt0.c3 FROM rt0, v0 WHERE (((CASE (((rt0.c0, v0.c0, rt0.c0)) BETWEEN ((rt0.c3, v0.c0, v0.c2)) AND ((rt0.c1, rt0.c2, 0.7690843140031874)))  WHEN ((rt0.c4)/(rt0.c2)) THEN load_extension(v0.c2) ELSE ((v0.c0)>=(v0.c0)) END) ISNULL));
SELECT rt0.c4, rt0.c1, v0.c2, v0.c0, v0.c1, rt0.c3 FROM rt0, v0;
SELECT DISTINCT v0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c1))>=((rt0.c1))) IN ());
SELECT DISTINCT v0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c1))>=((rt0.c1))) IN ()) WHERE (((rt0.c3)IS(v0.c1)) COLLATE RTRIM) UNION SELECT DISTINCT v0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c1))>=((rt0.c1))) IN ()) WHERE ((NOT (((rt0.c3)IS(v0.c1)) COLLATE RTRIM))) UNION SELECT DISTINCT v0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c1))>=((rt0.c1))) IN ()) WHERE (((((rt0.c3)IS(v0.c1)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c1))>=((rt0.c1))) IN ());
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE ((((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)) IN (rt0.c3, CAST(rt0.c4 AS BLOB)))) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 UNION SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT ((((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)) IN (rt0.c3, CAST(rt0.c4 AS BLOB)))))) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE ((((((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)) IN (rt0.c3, CAST(rt0.c4 AS BLOB)))) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING ((MIN(GROUP_CONCAT(v0.c2)))&(((SUM(COUNT(*))) NOT BETWEEN (v0.c2) AND (AVG(MIN(TOTAL(MIN(v0.c0)))))))) UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING (NOT (((MIN(GROUP_CONCAT(v0.c2)))&(((SUM(COUNT(*))) NOT BETWEEN (v0.c2) AND (AVG(MIN(TOTAL(MIN(v0.c0)))))))))) UNION ALL SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING ((((MIN(GROUP_CONCAT(v0.c2)))&(((SUM(COUNT(*))) NOT BETWEEN (v0.c2) AND (AVG(MIN(TOTAL(MIN(v0.c0))))))))) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (rt0.c3) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (rt0.c3))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((rt0.c3) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((CASE v0.c2  WHEN v0.c1 THEN 0.17882643618321337 WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c0 END) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((v0.c2)LIKE(v0.c2))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((CASE v0.c2  WHEN v0.c1 THEN 0.17882643618321337 WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c0 END) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((v0.c2)LIKE(v0.c2))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((CASE v0.c2  WHEN v0.c1 THEN 0.17882643618321337 WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c0 END) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((v0.c2)LIKE(v0.c2))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c4, rt0.c0, v0.c1, v0.c2, rt0.c1, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, v0.c1, v0.c2, rt0.c1, v0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c4, rt0.c0, v0.c1, v0.c2, rt0.c1, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0 WHERE (0Xfffffffffd01815d) GROUP BY rt0.c4, rt0.c0, v0.c1, v0.c2, rt0.c1, v0.c0, rt0.c2, rt0.c3 UNION SELECT rt0.c4, rt0.c0, v0.c1, v0.c2, rt0.c1, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0 WHERE ((NOT (0Xfffffffffd01815d))) GROUP BY rt0.c4, rt0.c0, v0.c1, v0.c2, rt0.c1, v0.c0, rt0.c2, rt0.c3 UNION SELECT rt0.c4, rt0.c0, v0.c1, v0.c2, rt0.c1, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0 WHERE (((0Xfffffffffd01815d) ISNULL)) GROUP BY rt0.c4, rt0.c0, v0.c1, v0.c2, rt0.c1, v0.c0, rt0.c2, rt0.c3;
SELECT rt0.c4, rt0.c0, v0.c1, v0.c2, rt0.c1, v0.c0, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, v0.c1, v0.c2, rt0.c1, v0.c0, rt0.c2, rt0.c3;
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING COUNT(290297284) UNION ALL SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (NOT (COUNT(290297284))) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING ((COUNT(290297284)) ISNULL);
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING COUNT(290297284) UNION ALL SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (NOT (COUNT(290297284))) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING ((COUNT(290297284)) ISNULL);
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL TOTAL(v0.c0 COLLATE BINARY COLLATE RTRIM) FROM v0, rt0 ORDER BY CASE WHEN ((v0.c1)<=(1.686956066E9)) THEN ((v0.c0)>(rt0.c2)) WHEN 0.6443173439676839 THEN -130047014 COLLATE BINARY WHEN (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((v0.c2))) THEN (rt0.c0 IN (rt0.c2)) ELSE (((v0.c1, rt0.c1, rt0.c1, rt0.c1, '')) NOT BETWEEN ((v0.c1, rt0.c3, v0.c0, rt0.c3, rt0.c4)) AND ((rt0.c3, v0.c0, v0.c1, 0Xffffffffe4b3f1ca, rt0.c3))) END ASC;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((IFNULL(DISTINCT v0.c2, 0.8374430409910084) IN (x'', ((((v0.c1)AND(v0.c0)))AND(v0.c2))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((IFNULL(DISTINCT v0.c2, 0.8374430409910084) IN (x'', ((((v0.c1)AND(v0.c0)))AND(v0.c2))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((IFNULL(DISTINCT v0.c2, 0.8374430409910084) IN (x'', ((((v0.c1)AND(v0.c0)))AND(v0.c2))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((((((NULL)OR((v0.c1 IN (v0.c2, v0.c1)))))OR(((v0.c2)<=(v0.c2)))))OR(COALESCE(v0.c0, v0.c0))))AND(((v0.c0) BETWEEN (v0.c2) AND (v0.c1))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((((NULL)OR((v0.c1 IN (v0.c2, v0.c1)))))OR(((v0.c2)<=(v0.c2)))))OR(COALESCE(v0.c0, v0.c0))))AND(((v0.c0) BETWEEN (v0.c2) AND (v0.c1))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((((((NULL)OR((v0.c1 IN (v0.c2, v0.c1)))))OR(((v0.c2)<=(v0.c2)))))OR(COALESCE(v0.c0, v0.c0))))AND(((v0.c0) BETWEEN (v0.c2) AND (v0.c1))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c0, v0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c1 FROM v0 INNER JOIN rt0 ON (rt0.c0 IN ()) COLLATE RTRIM GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c1;
SELECT rt0.c0, v0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c1 FROM v0 NOT INDEXED INNER JOIN rt0 ON (rt0.c0 IN ()) COLLATE RTRIM WHERE ((((v0.c2 IN (v0.c0)))+(NULL))) GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c1 UNION SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c1 FROM v0 INNER JOIN rt0 ON (rt0.c0 IN ()) COLLATE RTRIM WHERE ((NOT ((((v0.c2 IN (v0.c0)))+(NULL))))) GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c1 UNION SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c1 FROM v0 INNER JOIN rt0 ON (rt0.c0 IN ()) COLLATE RTRIM WHERE ((((((v0.c2 IN (v0.c0)))+(NULL))) ISNULL)) GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c1;
SELECT rt0.c0, v0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c1 FROM v0 INNER JOIN rt0 ON (rt0.c0 IN ()) COLLATE RTRIM GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c4, rt0.c2, v0.c1;
SELECT ALL rt0.c3, v0.c2, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c2, rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c3, v0.c2, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c2, rt0.c2, v0.c0, rt0.c0 HAVING AVG(((rt0.c4)%(v0.c2))) UNION ALL SELECT rt0.c3, v0.c2, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c2, rt0.c2, v0.c0, rt0.c0 HAVING (NOT (AVG(((rt0.c4)%(v0.c2))))) UNION ALL SELECT ALL rt0.c3, v0.c2, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c2, rt0.c2, v0.c0, rt0.c0 HAVING ((AVG(((rt0.c4)%(v0.c2)))) ISNULL);
SELECT ALL rt0.c3, v0.c2, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c2, rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c3, v0.c2, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c2, rt0.c2, v0.c0, rt0.c0 HAVING AVG(((rt0.c4)%(v0.c2))) UNION ALL SELECT rt0.c3, v0.c2, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c2, rt0.c2, v0.c0, rt0.c0 HAVING (NOT (AVG(((rt0.c4)%(v0.c2))))) UNION ALL SELECT ALL rt0.c3, v0.c2, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c2, rt0.c2, v0.c0, rt0.c0 HAVING ((AVG(((rt0.c4)%(v0.c2)))) ISNULL);
SELECT ALL rt0.c3, v0.c2, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c2, rt0.c2, v0.c0, rt0.c0;
SELECT rt0.c2, v0.c1, rt0.c4, v0.c0, rt0.c3, v0.c2, rt0.c0, rt0.c1 FROM rt0, v0;
SELECT ALL rt0.c2, v0.c1, rt0.c4, v0.c0, rt0.c3, v0.c2, rt0.c0, rt0.c1 FROM rt0, v0 WHERE (TRIM(((rt0.c3)IS(v0.c0)), (((rt0.c3))<(('1045672483'))))) UNION ALL SELECT rt0.c2, v0.c1, rt0.c4, v0.c0, rt0.c3, v0.c2, rt0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (TRIM(((rt0.c3)IS(v0.c0)), (((rt0.c3))<(('1045672483'))))))) UNION ALL SELECT ALL rt0.c2, v0.c1, rt0.c4, v0.c0, rt0.c3, v0.c2, rt0.c0, rt0.c1 FROM rt0, v0 WHERE (((TRIM(((rt0.c3)IS(v0.c0)), (((rt0.c3))<(('1045672483'))))) ISNULL));
SELECT rt0.c2, v0.c1, rt0.c4, v0.c0, rt0.c3, v0.c2, rt0.c0, rt0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c3, v0.c0, rt0.c2, v0.c2, rt0.c4 FROM rt0, v0;
SELECT DISTINCT rt0.c3, v0.c0, rt0.c2, v0.c2, rt0.c4 FROM rt0, v0 WHERE (((((rt0.c4) NOT NULL))>(NULL))) UNION SELECT DISTINCT rt0.c3, v0.c0, rt0.c2, v0.c2, rt0.c4 FROM rt0, v0 WHERE ((NOT (((((rt0.c4) NOT NULL))>(NULL))))) UNION SELECT DISTINCT rt0.c3, v0.c0, rt0.c2, v0.c2, rt0.c4 FROM rt0, v0 WHERE (((((((rt0.c4) NOT NULL))>(NULL))) ISNULL));
SELECT DISTINCT rt0.c3, v0.c0, rt0.c2, v0.c2, rt0.c4 FROM rt0, v0;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (LTRIM(rt0.c2, 1131164912)))) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT ((NOT (LTRIM(rt0.c2, 1131164912)))))) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE ((((NOT (LTRIM(rt0.c2, 1131164912)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2;
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING (- (COUNT(*))) UNION ALL SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING (NOT ((- (COUNT(*))))) UNION ALL SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING (((- (COUNT(*)))) ISNULL);
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING (- (COUNT(*))) UNION ALL SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING (NOT ((- (COUNT(*))))) UNION ALL SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING (((- (COUNT(*)))) ISNULL);
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (((HEX(DISTINCT rt0.c0))&(((rt0.c3)>>(v0.c0))))) UNION ALL SELECT * FROM v0, rt0 NOT INDEXED WHERE ((NOT (((HEX(DISTINCT rt0.c0))&(((rt0.c3)>>(v0.c0))))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((((HEX(DISTINCT rt0.c0))&(((rt0.c3)>>(v0.c0))))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM v0, rt0 WHERE (rt0.c0) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM v0, rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL v0.c2, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c2, rt0.c4, rt0.c0, rt0.c1;
SELECT v0.c2, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c2, rt0.c4, rt0.c0, rt0.c1 HAVING SUM(AVG(COUNT(*))) UNION ALL SELECT v0.c2, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c2, rt0.c4, rt0.c0, rt0.c1 HAVING (NOT (SUM(AVG(COUNT(*))))) UNION ALL SELECT v0.c2, rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c2, rt0.c4, rt0.c0, rt0.c1 HAVING ((SUM(AVG(COUNT(*)))) ISNULL);
SELECT ALL v0.c2 FROM v0;
SELECT v0.c2 FROM v0 NOT INDEXED WHERE (((NOT (v0.c2)) IN ())) UNION ALL SELECT ALL v0.c2 FROM v0 WHERE ((NOT (((NOT (v0.c2)) IN ())))) UNION ALL SELECT v0.c2 FROM v0 WHERE (((((NOT (v0.c2)) IN ())) ISNULL));
SELECT ALL v0.c2 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 NOT INDEXED WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 WHERE (((CAST(v0.c2 AS REAL)) BETWEEN (PRINTF(NULL)) AND (v0.c1))) GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((NOT (((CAST(v0.c2 AS REAL)) BETWEEN (PRINTF(NULL)) AND (v0.c1))))) GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE (((((CAST(v0.c2 AS REAL)) BETWEEN (PRINTF(NULL)) AND (v0.c1))) ISNULL)) GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING 'K6' UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ('K6')) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (('K6') ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING 'K6' UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ('K6')) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (('K6') ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c2, rt0.c2, v0.c1, rt0.c1, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c0;
SELECT v0.c2, rt0.c2, v0.c1, rt0.c1, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c0 WHERE ((CAST(rt0.c1 AS NUMERIC) IN ())) UNION ALL SELECT ALL v0.c2, rt0.c2, v0.c1, rt0.c1, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c0 WHERE ((NOT ((CAST(rt0.c1 AS NUMERIC) IN ())))) UNION ALL SELECT ALL v0.c2, rt0.c2, v0.c1, rt0.c1, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c0 WHERE ((((CAST(rt0.c1 AS NUMERIC) IN ())) ISNULL));
SELECT v0.c2, rt0.c2, v0.c1, rt0.c1, rt0.c4 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c0;
SELECT DISTINCT rt0.c3, v0.c2, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c3, v0.c2, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((x'' COLLATE BINARY IN ())) UNION SELECT DISTINCT rt0.c3, v0.c2, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((NOT ((x'' COLLATE BINARY IN ())))) UNION SELECT DISTINCT rt0.c3, v0.c2, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((((x'' COLLATE BINARY IN ())) ISNULL));
SELECT DISTINCT rt0.c3, v0.c2, rt0.c1, rt0.c4, rt0.c0 FROM rt0, v0;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE (CASE ((v0.c2)*(v0.c1))  WHEN ((v0.c0)IS(-293619630)) THEN ((((v0.c2)OR(v0.c2)))AND('D EV')) ELSE ((v0.c1)||(v0.c1)) END) GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((NOT (CASE ((v0.c2)*(v0.c1))  WHEN ((v0.c0)IS(-293619630)) THEN ((((v0.c2)OR(v0.c2)))AND('D EV')) ELSE ((v0.c1)||(v0.c1)) END))) GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE (((CASE ((v0.c2)*(v0.c1))  WHEN ((v0.c0)IS(-293619630)) THEN ((((v0.c2)OR(v0.c2)))AND('D EV')) ELSE ((v0.c1)||(v0.c1)) END) ISNULL)) GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL rt0.c4, rt0.c3, rt0.c1, v0.c2, v0.c0, rt0.c0, rt0.c2, v0.c1 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, v0.c2, v0.c0, rt0.c0, rt0.c2, v0.c1;
SELECT ALL rt0.c4, rt0.c3, rt0.c1, v0.c2, v0.c0, rt0.c0, rt0.c2, v0.c1 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, v0.c2, v0.c0, rt0.c0, rt0.c2, v0.c1 HAVING (((MAX(MAX(MIN(MAX(SUM(rt0.c2))))), ((v0.c1) IS FALSE), (NOT (''))))==((MIN(rt0.c3), ((TOTAL(AVG(TOTAL(SUM(1405850830))))) NOT BETWEEN (rt0.c2) AND (rt0.c4)), CAST(rt0.c1 AS INTEGER)))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c1, v0.c2, v0.c0, rt0.c0, rt0.c2, v0.c1 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, v0.c2, v0.c0, rt0.c0, rt0.c2, v0.c1 HAVING (NOT ((((MAX(MAX(MIN(MAX(SUM(rt0.c2))))), ((v0.c1) IS FALSE), (NOT (''))))=((MIN(rt0.c3), ((TOTAL(AVG(TOTAL(SUM(1405850830))))) NOT BETWEEN (rt0.c2) AND (rt0.c4)), CAST(rt0.c1 AS INTEGER)))))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c1, v0.c2, v0.c0, rt0.c0, rt0.c2, v0.c1 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, v0.c2, v0.c0, rt0.c0, rt0.c2, v0.c1 HAVING (((((MAX(MAX(MIN(MAX(SUM(rt0.c2))))), ((v0.c1) IS FALSE), (NOT (''))))==((MIN(rt0.c3), ((TOTAL(AVG(TOTAL(SUM(1405850830))))) NOT BETWEEN (rt0.c2) AND (rt0.c4)), CAST(rt0.c1 AS INTEGER))))) ISNULL);
SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (CAST(((rt0.c3)-(rt0.c3)) AS REAL)) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST(((rt0.c3)-(rt0.c3)) AS REAL)))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(((rt0.c3)-(rt0.c3)) AS REAL)) ISNULL));
SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT v0.c0, v0.c2 FROM v0;
SELECT DISTINCT v0.c0, v0.c2 FROM v0 WHERE (LIKE(CASE v0.c1  WHEN v0.c1 THEN 'M' WHEN NULL THEN v0.c0 WHEN v0.c2 THEN v0.c1 END, CASE WHEN v0.c1 THEN v0.c1 END, '-')) UNION SELECT DISTINCT v0.c0, v0.c2 FROM v0 WHERE ((NOT (LIKE(CASE v0.c1  WHEN v0.c1 THEN 'M' WHEN NULL THEN v0.c0 WHEN v0.c2 THEN v0.c1 END, CASE WHEN v0.c1 THEN v0.c1 END, '-')))) UNION SELECT DISTINCT v0.c0, v0.c2 FROM v0 WHERE (((LIKE(CASE v0.c1  WHEN v0.c1 THEN 'M' WHEN NULL THEN v0.c0 WHEN v0.c2 THEN v0.c1 END, CASE WHEN v0.c1 THEN v0.c1 END, '-')) ISNULL));
SELECT DISTINCT v0.c0, v0.c2 FROM v0;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((((v0.c0)<=(v0.c2))) NOT NULL)) GROUP BY v0.c2, v0.c0, v0.c1 UNION SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((NOT (((((v0.c0)<=(v0.c2))) NOT NULL)))) GROUP BY v0.c2, v0.c0, v0.c1 UNION SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((((((v0.c0)<=(v0.c2))) NOT NULL)) ISNULL)) GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING ((((SUM(v0.c0))AND(((((GROUP_CONCAT(MIN(COUNT(*))))OR(v0.c2)))AND(COUNT(MIN(COUNT(*))))))))AND(GROUP_CONCAT(COUNT(rt0.c1)))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c0 FROM rt0 NOT INDEXED, v0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING (NOT (((((SUM(v0.c0))AND(((((GROUP_CONCAT(MIN(COUNT(*))))OR(v0.c2)))AND(COUNT(MIN(COUNT(*))))))))AND(GROUP_CONCAT(COUNT(rt0.c1)))))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING ((((((SUM(v0.c0))AND(((((GROUP_CONCAT(MIN(COUNT(*))))OR(v0.c2)))AND(COUNT(MIN(COUNT(*))))))))AND(GROUP_CONCAT(COUNT(rt0.c1))))) ISNULL);
SELECT v0.c0, v0.c2, rt0.c4, v0.c1, rt0.c0, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0)>(v0.c0)) AS INTEGER);
SELECT ALL v0.c0, v0.c2, rt0.c4, v0.c1, rt0.c0, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0)>(v0.c0)) AS INTEGER) WHERE ((((rt0.c2) NOTNULL) IN ())) UNION ALL SELECT ALL v0.c0, v0.c2, rt0.c4, v0.c1, rt0.c0, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0)>(v0.c0)) AS INTEGER) WHERE ((NOT ((((rt0.c2) NOTNULL) IN ())))) UNION ALL SELECT ALL v0.c0, v0.c2, rt0.c4, v0.c1, rt0.c0, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0)>(v0.c0)) AS INTEGER) WHERE ((((((rt0.c2) NOTNULL) IN ())) ISNULL));
SELECT v0.c0, v0.c2, rt0.c4, v0.c1, rt0.c0, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0)>(v0.c0)) AS INTEGER);
SELECT DISTINCT v0.c0, rt0.c0, v0.c2, v0.c1, rt0.c4, rt0.c1, rt0.c3 FROM rt0, v0;
SELECT DISTINCT v0.c0, rt0.c0, v0.c2, v0.c1, rt0.c4, rt0.c1, rt0.c3 FROM rt0, v0 WHERE ((((rt0.c4)) BETWEEN (((rt0.c3 IN ()))) AND ((((((rt0.c4)OR(v0.c2)))OR(rt0.c4)))))) UNION SELECT DISTINCT v0.c0, rt0.c0, v0.c2, v0.c1, rt0.c4, rt0.c1, rt0.c3 FROM rt0, v0 WHERE ((NOT ((((rt0.c4)) BETWEEN (((rt0.c3 IN ()))) AND ((((((rt0.c4)OR(v0.c2)))OR(rt0.c4)))))))) UNION SELECT DISTINCT v0.c0, rt0.c0, v0.c2, v0.c1, rt0.c4, rt0.c1, rt0.c3 FROM rt0, v0 WHERE ((((((rt0.c4)) BETWEEN (((rt0.c3 IN ()))) AND ((((((rt0.c4)OR(v0.c2)))OR(rt0.c4)))))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c0, v0.c2, v0.c1, rt0.c4, rt0.c1, rt0.c3 FROM rt0, v0;
SELECT ALL v0.c1, rt0.c3, v0.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON v0.c1 GROUP BY v0.c1, rt0.c3, v0.c0, rt0.c1, rt0.c0;
SELECT v0.c1, rt0.c3, v0.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON v0.c1 WHERE (v0.c1) GROUP BY v0.c1, rt0.c3, v0.c0, rt0.c1, rt0.c0 UNION SELECT v0.c1, rt0.c3, v0.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON v0.c1 WHERE ((NOT (v0.c1))) GROUP BY v0.c1, rt0.c3, v0.c0, rt0.c1, rt0.c0 UNION SELECT v0.c1, rt0.c3, v0.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON v0.c1 WHERE (((v0.c1) ISNULL)) GROUP BY v0.c1, rt0.c3, v0.c0, rt0.c1, rt0.c0;
SELECT ALL v0.c1, rt0.c3, v0.c0, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON v0.c1 GROUP BY v0.c1, rt0.c3, v0.c0, rt0.c1, rt0.c0;
SELECT ALL v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1;
SELECT v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1 HAVING TOTAL(DATE(0.5264900975888124, v0.c1, SUM(AVG(MIN(COUNT(*)))))) UNION ALL SELECT ALL v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1 HAVING (NOT (TOTAL(DATE(0.5264900975888124, v0.c1, SUM(AVG(MIN(COUNT(*)))))))) UNION ALL SELECT v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1 HAVING ((TOTAL(DATE(0.5264900975888124, v0.c1, SUM(AVG(MIN(COUNT(*))))))) ISNULL);
SELECT v0.c2, rt0.c1, v0.c0, rt0.c4, v0.c1 FROM v0, rt0;
SELECT ALL v0.c2, rt0.c1, v0.c0, rt0.c4, v0.c1 FROM v0, rt0 WHERE (((0.47262627568014437) IS FALSE)) UNION ALL SELECT v0.c2, rt0.c1, v0.c0, rt0.c4, v0.c1 FROM v0, rt0 WHERE ((NOT (((0.47262627568014437) IS FALSE)))) UNION ALL SELECT v0.c2, rt0.c1, v0.c0, rt0.c4, v0.c1 FROM v0, rt0 WHERE (((((0.47262627568014437) IS FALSE)) ISNULL));
SELECT v0.c2, rt0.c1, v0.c0, rt0.c4, v0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c4, rt0.c1, v0.c0, rt0.c3, v0.c2 FROM v0 LEFT OUTER JOIN rt0 ON CASE '-979191300'  WHEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END THEN '1403359916' COLLATE NOCASE ELSE ((rt0.c3) BETWEEN (-427821690) AND (rt0.c4)) END;
SELECT DISTINCT rt0.c4, rt0.c1, v0.c0, rt0.c3, v0.c2 FROM v0 LEFT OUTER JOIN rt0 ON CASE '-979191300'  WHEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END THEN '1403359916' COLLATE NOCASE ELSE ((rt0.c3) BETWEEN (-427821690) AND (rt0.c4)) END WHERE (CAST((((rt0.c3)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))) AS BLOB)) UNION SELECT DISTINCT rt0.c4, rt0.c1, v0.c0, rt0.c3, v0.c2 FROM v0 LEFT OUTER JOIN rt0 ON CASE '-979191300'  WHEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END THEN '1403359916' COLLATE NOCASE ELSE ((rt0.c3) BETWEEN (-427821690) AND (rt0.c4)) END WHERE ((NOT (CAST((((rt0.c3)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))) AS BLOB)))) UNION SELECT DISTINCT rt0.c4, rt0.c1, v0.c0, rt0.c3, v0.c2 FROM v0 LEFT OUTER JOIN rt0 ON CASE '-979191300'  WHEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END THEN '1403359916' COLLATE NOCASE ELSE ((rt0.c3) BETWEEN (-427821690) AND (rt0.c4)) END WHERE (((CAST((((rt0.c3)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c1, v0.c0, rt0.c3, v0.c2 FROM v0 LEFT OUTER JOIN rt0 ON CASE '-979191300'  WHEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END THEN '1403359916' COLLATE NOCASE ELSE ((rt0.c3) BETWEEN (-427821690) AND (rt0.c4)) END;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 WHERE (UNLIKELY(rt0.c1)) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 WHERE ((NOT (UNLIKELY(rt0.c1)))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE (((UNLIKELY(rt0.c1)) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT v0.c0, v0.c2, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, v0.c2, rt0.c1, rt0.c4;
SELECT v0.c0, v0.c2, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, v0.c2, rt0.c1, rt0.c4 HAVING v0.c2 UNION ALL SELECT v0.c0, v0.c2, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, v0.c2, rt0.c1, rt0.c4 HAVING (NOT (v0.c2)) UNION ALL SELECT ALL v0.c0, v0.c2, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, v0.c2, rt0.c1, rt0.c4 HAVING ((v0.c2) ISNULL);
SELECT v0.c0, v0.c2, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, v0.c2, rt0.c1, rt0.c4;
SELECT v0.c0, v0.c2, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, v0.c2, rt0.c1, rt0.c4 HAVING v0.c2 UNION ALL SELECT v0.c0, v0.c2, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, v0.c2, rt0.c1, rt0.c4 HAVING (NOT (v0.c2)) UNION ALL SELECT ALL v0.c0, v0.c2, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, v0.c2, rt0.c1, rt0.c4 HAVING ((v0.c2) ISNULL);
SELECT v0.c0, v0.c2, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, v0.c2, rt0.c1, rt0.c4;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (SQLITE_COMPILEOPTION_USED(((v0.c2) IS FALSE))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (SQLITE_COMPILEOPTION_USED(((v0.c2) IS FALSE))))) UNION ALL SELECT ALL * FROM v0 WHERE (((SQLITE_COMPILEOPTION_USED(((v0.c2) IS FALSE))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (CAST((NOT (v0.c1)) AS NUMERIC)) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (CAST((NOT (v0.c1)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((CAST((NOT (v0.c1)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT v0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c3))>=((rt0.c1)))) NOT BETWEEN (((rt0.c4) IS FALSE)) AND ((- (rt0.c1)))) GROUP BY v0.c1;
SELECT v0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c3))>=((rt0.c1)))) NOT BETWEEN (((rt0.c4) IS FALSE)) AND ((- (rt0.c1)))) WHERE (CAST((~ (v0.c0)) AS REAL)) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c3))>=((rt0.c1)))) NOT BETWEEN (((rt0.c4) IS FALSE)) AND ((- (rt0.c1)))) WHERE ((NOT (CAST((~ (v0.c0)) AS REAL)))) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c3))>=((rt0.c1)))) NOT BETWEEN (((rt0.c4) IS FALSE)) AND ((- (rt0.c1)))) WHERE (((CAST((~ (v0.c0)) AS REAL)) ISNULL)) GROUP BY v0.c1;
SELECT v0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON (((((rt0.c3))>=((rt0.c1)))) NOT BETWEEN (((rt0.c4) IS FALSE)) AND ((- (rt0.c1)))) GROUP BY v0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING (NOT (x'')) UNION ALL SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING (NOT ((NOT (x'')))) UNION ALL SELECT rt0.c3, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c3, rt0.c1 HAVING (((NOT (x''))) ISNULL);
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING (NOT (x'')) UNION ALL SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING (NOT ((NOT (x'')))) UNION ALL SELECT rt0.c3, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c3, rt0.c1 HAVING (((NOT (x''))) ISNULL);
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c1, rt0.c3 FROM rt0;
SELECT rt0.c1, rt0.c3 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c0)))) NOT BETWEEN ('957075327') AND (rt0.c4 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT ((((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c0)))) NOT BETWEEN ('957075327') AND (rt0.c4 COLLATE NOCASE))))) UNION ALL SELECT rt0.c1, rt0.c3 FROM rt0 WHERE ((((((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c0)))) NOT BETWEEN ('957075327') AND (rt0.c4 COLLATE NOCASE))) ISNULL));
SELECT ALL rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT v0.c1, rt0.c3 FROM rt0 INNER JOIN v0 ON ((((v0.c2) NOTNULL))&(((0.0859828337145162) BETWEEN (rt0.c1) AND (v0.c1))));
SELECT DISTINCT v0.c1, rt0.c3 FROM rt0 INNER JOIN v0 ON ((((v0.c2) NOTNULL))&(((0.0859828337145162) BETWEEN (rt0.c1) AND (v0.c1)))) WHERE ((0.44727126671587947 IN ((rt0.c1 IN ()), ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c3))))) UNION SELECT DISTINCT v0.c1, rt0.c3 FROM rt0 INNER JOIN v0 ON ((((v0.c2) NOTNULL))&(((0.0859828337145162) BETWEEN (rt0.c1) AND (v0.c1)))) WHERE ((NOT ((0.44727126671587947 IN ((rt0.c1 IN ()), ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c3))))))) UNION SELECT DISTINCT v0.c1, rt0.c3 FROM rt0 INNER JOIN v0 ON ((((v0.c2) NOTNULL))&(((0.0859828337145162) BETWEEN (rt0.c1) AND (v0.c1)))) WHERE ((((0.44727126671587947 IN ((rt0.c1 IN ()), ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c3))))) ISNULL));
SELECT DISTINCT v0.c1, rt0.c3 FROM rt0 INNER JOIN v0 ON ((((v0.c2) NOTNULL))&(((0.0859828337145162) BETWEEN (rt0.c1) AND (v0.c1))));
SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM rt0 INNER JOIN v0 ON ((((v0.c1)&(v0.c2))) IS TRUE) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0;
SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM rt0 INNER JOIN v0 ON ((((v0.c1)&(v0.c2))) IS TRUE) WHERE ((((v0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c2)) IN ())) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM rt0 INNER JOIN v0 ON ((((v0.c1)&(v0.c2))) IS TRUE) WHERE ((NOT ((((v0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c2)) IN ())))) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM rt0 INNER JOIN v0 ON ((((v0.c1)&(v0.c2))) IS TRUE) WHERE ((((((v0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c2)) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0;
SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM rt0 INNER JOIN v0 ON ((((v0.c1)&(v0.c2))) IS TRUE) GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING CASE WHEN ((v0.c0)%(COUNT(1425362983))) THEN v0.c1 END UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (NOT (CASE WHEN ((v0.c0)%(COUNT(1425362983))) THEN v0.c1 END)) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING ((CASE WHEN ((v0.c0)%(COUNT(1425362983))) THEN v0.c1 END) ISNULL);
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING CASE WHEN ((v0.c0)%(COUNT(1425362983))) THEN v0.c1 END UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (NOT (CASE WHEN ((v0.c0)%(COUNT(1425362983))) THEN v0.c1 END)) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING ((CASE WHEN ((v0.c0)%(COUNT(1425362983))) THEN v0.c1 END) ISNULL);
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT ALL rt0.c4, v0.c1, v0.c2, v0.c0, rt0.c2, rt0.c1 FROM v0, rt0;
SELECT ALL rt0.c4, v0.c1, v0.c2, v0.c0, rt0.c2, rt0.c1 FROM v0, rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c2) NOTNULL))) AND (((-1226507756 IN ()))))) UNION ALL SELECT rt0.c4, v0.c1, v0.c2, v0.c0, rt0.c2, rt0.c1 FROM v0, rt0 WHERE ((NOT ((((rt0.c0)) BETWEEN ((((rt0.c2) NOTNULL))) AND (((-1226507756 IN ()))))))) UNION ALL SELECT ALL rt0.c4, v0.c1, v0.c2, v0.c0, rt0.c2, rt0.c1 FROM v0, rt0 WHERE ((((((rt0.c0)) BETWEEN ((((rt0.c2) NOTNULL))) AND (((-1226507756 IN ()))))) ISNULL));
SELECT ALL rt0.c4, v0.c1, v0.c2, v0.c0, rt0.c2, rt0.c1 FROM v0, rt0;
SELECT DISTINCT v0.c1, v0.c0 FROM v0;
SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE (CAST(v0.c0 AS REAL) COLLATE RTRIM) UNION SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE ((NOT (CAST(v0.c0 AS REAL) COLLATE RTRIM))) UNION SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS REAL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c1, v0.c0 FROM v0;
SELECT rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON (~ ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))) GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON (~ ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))) WHERE (TRIM(DISTINCT (~ (rt0.c0)))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON (~ ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))) WHERE ((NOT (TRIM(DISTINCT (~ (rt0.c0)))))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON (~ ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))) WHERE (((TRIM(DISTINCT (~ (rt0.c0)))) ISNULL)) GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON (~ ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))) GROUP BY rt0.c4;
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2 HAVING COUNT(*) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2 HAVING COUNT(*) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE ((((((rt0.c4)OR(v0.c0)))AND(v0.c1)) IN ())) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT ((((((rt0.c4)OR(v0.c0)))AND(v0.c1)) IN ())))) UNION ALL SELECT * FROM v0, rt0 WHERE ((((((((rt0.c4)OR(v0.c0)))AND(v0.c1)) IN ())) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((NULL) BETWEEN (rt0.c0) AND (rt0.c0)))+(rt0.c4 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((NULL) BETWEEN (rt0.c0) AND (rt0.c0)))+(rt0.c4 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((NULL) BETWEEN (rt0.c0) AND (rt0.c0)))+(rt0.c4 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0, rt0.c3, v0.c1, v0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, v0.c1, v0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c4;
SELECT v0.c0, rt0.c3, v0.c1, v0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0, v0 WHERE (QUOTE(CAST(rt0.c0 AS BLOB))) GROUP BY v0.c0, rt0.c3, v0.c1, v0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c4 UNION SELECT ALL v0.c0, rt0.c3, v0.c1, v0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0, v0 WHERE ((NOT (QUOTE(CAST(rt0.c0 AS BLOB))))) GROUP BY v0.c0, rt0.c3, v0.c1, v0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c4 UNION SELECT ALL v0.c0, rt0.c3, v0.c1, v0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0, v0 WHERE (((QUOTE(CAST(rt0.c0 AS BLOB))) ISNULL)) GROUP BY v0.c0, rt0.c3, v0.c1, v0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL v0.c0, rt0.c3, v0.c1, v0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, v0.c1, v0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL v0.c0, rt0.c1, v0.c1 FROM v0 INNER JOIN rt0 ON (('sb卂6') NOT BETWEEN (NULL) AND (rt0.c2)) GROUP BY v0.c0, rt0.c1, v0.c1;
SELECT ALL v0.c0, rt0.c1, v0.c1 FROM v0 INNER JOIN rt0 ON (('sb卂6') NOT BETWEEN (NULL) AND (rt0.c2)) GROUP BY v0.c0, rt0.c1, v0.c1 HAVING COUNT((AVG(rt0.c1) IN ())) UNION ALL SELECT ALL v0.c0, rt0.c1, v0.c1 FROM v0 INNER JOIN rt0 ON (('sb卂6') NOT BETWEEN (NULL) AND (rt0.c2)) GROUP BY v0.c0, rt0.c1, v0.c1 HAVING (NOT (COUNT((AVG(rt0.c1) IN ())))) UNION ALL SELECT v0.c0, rt0.c1, v0.c1 FROM v0 INNER JOIN rt0 ON (('sb卂6') NOT BETWEEN (NULL) AND (rt0.c2)) GROUP BY v0.c0, rt0.c1, v0.c1 HAVING ((COUNT((AVG(rt0.c1) IN ()))) ISNULL);
SELECT ALL v0.c0, rt0.c1, v0.c1 FROM v0 INNER JOIN rt0 ON (('sb卂6') NOT BETWEEN (NULL) AND (rt0.c2)) GROUP BY v0.c0, rt0.c1, v0.c1;
SELECT ALL v0.c0, rt0.c1, v0.c1 FROM v0 INNER JOIN rt0 ON (('sb卂6') NOT BETWEEN (NULL) AND (rt0.c2)) GROUP BY v0.c0, rt0.c1, v0.c1 HAVING COUNT((AVG(rt0.c1) IN ())) UNION ALL SELECT ALL v0.c0, rt0.c1, v0.c1 FROM v0 INNER JOIN rt0 ON (('sb卂6') NOT BETWEEN (NULL) AND (rt0.c2)) GROUP BY v0.c0, rt0.c1, v0.c1 HAVING (NOT (COUNT((AVG(rt0.c1) IN ())))) UNION ALL SELECT v0.c0, rt0.c1, v0.c1 FROM v0 INNER JOIN rt0 ON (('sb卂6') NOT BETWEEN (NULL) AND (rt0.c2)) GROUP BY v0.c0, rt0.c1, v0.c1 HAVING ((COUNT((AVG(rt0.c1) IN ()))) ISNULL);
SELECT ALL v0.c0, rt0.c1, v0.c1 FROM v0 INNER JOIN rt0 ON (('sb卂6') NOT BETWEEN (NULL) AND (rt0.c2)) GROUP BY v0.c0, rt0.c1, v0.c1;
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (((((v0.c2)*(v0.c0)))IS(UNLIKELY(rt0.c1)))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (((((v0.c2)*(v0.c0)))IS(UNLIKELY(rt0.c1)))))) UNION ALL SELECT * FROM rt0, v0 WHERE (((((((v0.c2)*(v0.c0)))IS(UNLIKELY(rt0.c1)))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c2)))OR('5Ǿy^')))AND(rt0.c3)))AND('-1467148666')))AND(rt0.c4)))>>(CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c2)))OR('5Ǿy^')))AND(rt0.c3)))AND('-1467148666')))AND(rt0.c4)))>>(CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c2)))OR('5Ǿy^')))AND(rt0.c3)))AND('-1467148666')))AND(rt0.c4)))>>(CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c3, rt0.c4, v0.c2, rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, v0.c2, rt0.c1, rt0.c2, v0.c0;
SELECT ALL rt0.c0, rt0.c3, rt0.c4, v0.c2, rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 WHERE (rt0.c3) GROUP BY rt0.c0, rt0.c3, rt0.c4, v0.c2, rt0.c1, rt0.c2, v0.c0 UNION SELECT rt0.c0, rt0.c3, rt0.c4, v0.c2, rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((NOT (rt0.c3))) GROUP BY rt0.c0, rt0.c3, rt0.c4, v0.c2, rt0.c1, rt0.c2, v0.c0 UNION SELECT rt0.c0, rt0.c3, rt0.c4, v0.c2, rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 WHERE (((rt0.c3) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c4, v0.c2, rt0.c1, rt0.c2, v0.c0;
SELECT rt0.c0, rt0.c3, rt0.c4, v0.c2, rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, v0.c2, rt0.c1, rt0.c2, v0.c0;
SELECT ALL v0.c0, v0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, v0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c1;
SELECT v0.c0, v0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, v0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c1 HAVING ((MIN(v0.c0))*(IFNULL(DISTINCT COUNT(*), COUNT(*)))) UNION ALL SELECT v0.c0, v0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, v0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c1 HAVING (NOT (((MIN(v0.c0))*(IFNULL(DISTINCT COUNT(*), COUNT(*)))))) UNION ALL SELECT ALL v0.c0, v0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, v0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c1 HAVING ((((MIN(v0.c0))*(IFNULL(DISTINCT COUNT(*), COUNT(*))))) ISNULL);
SELECT ALL v0.c0, v0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, v0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c1;
SELECT v0.c0, v0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, v0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c1 HAVING ((MIN(v0.c0))*(IFNULL(DISTINCT COUNT(*), COUNT(*)))) UNION ALL SELECT v0.c0, v0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, v0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c1 HAVING (NOT (((MIN(v0.c0))*(IFNULL(DISTINCT COUNT(*), COUNT(*)))))) UNION ALL SELECT ALL v0.c0, v0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, v0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c1 HAVING ((((MIN(v0.c0))*(IFNULL(DISTINCT COUNT(*), COUNT(*))))) ISNULL);
SELECT ALL v0.c0, v0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, v0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c1;
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c1)AND(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c2))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (((rt0.c1)AND(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c2))))))) UNION ALL SELECT * FROM rt0, v0 WHERE (((((rt0.c1)AND(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c1)>>(v0.c1)) COLLATE BINARY;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c1)>>(v0.c1)) COLLATE BINARY WHERE (((((v0.c2) ISNULL)) BETWEEN (CASE WHEN v0.c1 THEN rt0.c2 ELSE NULL END) AND (((v0.c2)OR(v0.c0))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c1)>>(v0.c1)) COLLATE BINARY WHERE ((NOT (((((v0.c2) ISNULL)) BETWEEN (CASE WHEN v0.c1 THEN rt0.c2 ELSE NULL END) AND (((v0.c2)OR(v0.c0))))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c1)>>(v0.c1)) COLLATE BINARY WHERE (((((((v0.c2) ISNULL)) BETWEEN (CASE WHEN v0.c1 THEN rt0.c2 ELSE NULL END) AND (((v0.c2)OR(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c1)>>(v0.c1)) COLLATE BINARY;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 WHERE (((((v0.c2) BETWEEN (v0.c2) AND (v0.c1))) IS TRUE)) GROUP BY v0.c2, v0.c0 UNION SELECT ALL v0.c2, v0.c0 FROM v0 WHERE ((NOT (((((v0.c2) BETWEEN (v0.c2) AND (v0.c1))) IS TRUE)))) GROUP BY v0.c2, v0.c0 UNION SELECT v0.c2, v0.c0 FROM v0 WHERE (((((((v0.c2) BETWEEN (v0.c2) AND (v0.c1))) IS TRUE)) ISNULL)) GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING ((((((((SUM(rt0.c3))OR(((AVG(MIN(rt0.c3))) NOTNULL))))OR(CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END)))AND(COUNT(MAX(rt0.c3)))))AND(((AVG(rt0.c3))*(rt0.c0)))) UNION ALL SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING (NOT (((((((((SUM(rt0.c3))OR(((AVG(MIN(rt0.c3))) NOTNULL))))OR(CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END)))AND(COUNT(MAX(rt0.c3)))))AND(((AVG(rt0.c3))*(rt0.c0)))))) UNION ALL SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING ((((((((((SUM(rt0.c3))OR(((AVG(MIN(rt0.c3))) NOTNULL))))OR(CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END)))AND(COUNT(MAX(rt0.c3)))))AND(((AVG(rt0.c3))*(rt0.c0))))) ISNULL);
SELECT * FROM rt0 FULL OUTER JOIN v0 ON v0.c1;
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON v0.c1 WHERE (0Xffffffffb6e4fa14) UNION ALL SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON v0.c1 WHERE ((NOT (0Xffffffffb6e4fa14))) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN v0 ON v0.c1 WHERE (((0Xffffffffb6e4fa14) ISNULL));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON v0.c1;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, v0.c0, v0.c1, v0.c2, rt0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, v0.c0, v0.c1, v0.c2, rt0.c2 FROM rt0, v0 WHERE ((((((((((- (v0.c2)))OR(((rt0.c0) IS TRUE))))OR((((x'', v0.c0, v0.c0))>=((rt0.c3, rt0.c3, v0.c2))))))OR(0.9603671875042656)))AND(((v0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c4))))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, v0.c0, v0.c1, v0.c2, rt0.c2 FROM rt0, v0 WHERE ((NOT ((((((((((- (v0.c2)))OR(((rt0.c0) IS TRUE))))OR((((x'', v0.c0, v0.c0))>=((rt0.c3, rt0.c3, v0.c2))))))OR(0.9603671875042656)))AND(((v0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c4))))))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, v0.c0, v0.c1, v0.c2, rt0.c2 FROM rt0, v0 WHERE ((((((((((((- (v0.c2)))OR(((rt0.c0) IS TRUE))))OR((((x'', v0.c0, v0.c0))>=((rt0.c3, rt0.c3, v0.c2))))))OR(0.9603671875042656)))AND(((v0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c4))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, v0.c0, v0.c1, v0.c2, rt0.c2 FROM rt0, v0;
SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE ((((0.20176962848545466) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c4))))) GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT ((((0.20176962848545466) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c4))))))) GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE ((((((0.20176962848545466) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c4))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2;
SELECT rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2 HAVING AVG(((((rt0.c3)AND(COUNT(*))))AND(TOTAL(COUNT(*))))) UNION ALL SELECT rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2 HAVING (NOT (AVG(((((rt0.c3)AND(COUNT(*))))AND(TOTAL(COUNT(*))))))) UNION ALL SELECT rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2 HAVING ((AVG(((((rt0.c3)AND(COUNT(*))))AND(TOTAL(COUNT(*)))))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE (((x'')||(rt0.c1)) COLLATE RTRIM COLLATE RTRIM) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT (((x'')||(rt0.c1)) COLLATE RTRIM COLLATE RTRIM))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE (((((x'')||(rt0.c1)) COLLATE RTRIM COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((((((((v0.c1, v0.c1, v0.c1)) NOT BETWEEN ((v0.c0, rt0.c0, rt0.c3)) AND ((rt0.c2, rt0.c2, rt0.c0))))OR(((v0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)))))OR(rt0.c0))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((((((((v0.c1, v0.c1, v0.c1)) NOT BETWEEN ((v0.c0, rt0.c0, rt0.c3)) AND ((rt0.c2, rt0.c2, rt0.c0))))OR(((v0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)))))OR(rt0.c0))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((((((((v0.c1, v0.c1, v0.c1)) NOT BETWEEN ((v0.c0, rt0.c0, rt0.c3)) AND ((rt0.c2, rt0.c2, rt0.c0))))OR(((v0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)))))OR(rt0.c0))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c4, rt0.c1, rt0.c2, v0.c0 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, v0.c0;
SELECT rt0.c4, rt0.c1, rt0.c2, v0.c0 FROM v0 NATURAL JOIN rt0 WHERE (((((((((v0.c0)OR(v0.c1)))OR(v0.c2)))AND(SQLITE_COMPILEOPTION_GET(rt0.c2))))AND((NOT (rt0.c3))))) GROUP BY rt0.c4, rt0.c1, rt0.c2, v0.c0 UNION SELECT rt0.c4, rt0.c1, rt0.c2, v0.c0 FROM v0 NATURAL JOIN rt0 WHERE ((NOT (((((((((v0.c0)OR(v0.c1)))OR(v0.c2)))AND(SQLITE_COMPILEOPTION_GET(rt0.c2))))AND((NOT (rt0.c3))))))) GROUP BY rt0.c4, rt0.c1, rt0.c2, v0.c0 UNION SELECT ALL rt0.c4, rt0.c1, rt0.c2, v0.c0 FROM v0 NATURAL JOIN rt0 WHERE (((((((((((v0.c0)OR(v0.c1)))OR(v0.c2)))AND(SQLITE_COMPILEOPTION_GET(rt0.c2))))AND((NOT (rt0.c3))))) ISNULL)) GROUP BY rt0.c4, rt0.c1, rt0.c2, v0.c0;
SELECT ALL rt0.c4, rt0.c1, rt0.c2, v0.c0 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, v0.c0;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING CHANGES() COLLATE BINARY UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (CHANGES() COLLATE BINARY)) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((CHANGES() COLLATE BINARY) ISNULL);
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING CHANGES() COLLATE BINARY UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (CHANGES() COLLATE BINARY)) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((CHANGES() COLLATE BINARY) ISNULL);
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE (((0.08365119031687984)GLOB((- (rt0.c4))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (((0.08365119031687984)GLOB((- (rt0.c4))))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE (((((0.08365119031687984)GLOB((- (rt0.c4))))) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0;
SELECT DISTINCT v0.c2, v0.c0 FROM v0;
SELECT DISTINCT v0.c2, v0.c0 FROM v0 WHERE (CASE WHEN (('-893632423') BETWEEN (v0.c2) AND (v0.c2)) THEN ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)) WHEN ((v0.c1)<=(14354565)) THEN '-1314134241' WHEN ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c1)&('qpp\n!v﨔os')) ELSE ((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2)) END) UNION SELECT DISTINCT v0.c2, v0.c0 FROM v0 WHERE ((NOT (CASE WHEN (('-893632423') BETWEEN (v0.c2) AND (v0.c2)) THEN ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)) WHEN ((v0.c1)<=(14354565)) THEN '-1314134241' WHEN ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c1)&('qpp\n!v﨔os')) ELSE ((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2)) END))) UNION SELECT DISTINCT v0.c2, v0.c0 FROM v0 WHERE (((CASE WHEN (('-893632423') BETWEEN (v0.c2) AND (v0.c2)) THEN ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)) WHEN ((v0.c1)<=(14354565)) THEN '-1314134241' WHEN ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c1)&('qpp\n!v﨔os')) ELSE ((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2)) END) ISNULL));
SELECT DISTINCT v0.c2, v0.c0 FROM v0;
SELECT rt0.c2, v0.c1, rt0.c0, rt0.c1, v0.c0 FROM v0 INNER JOIN rt0 ON (- (v0.c0)) COLLATE RTRIM GROUP BY rt0.c2, v0.c1, rt0.c0, rt0.c1, v0.c0;
SELECT rt0.c2, v0.c1, rt0.c0, rt0.c1, v0.c0 FROM v0 INNER JOIN rt0 ON (- (v0.c0)) COLLATE RTRIM WHERE ((((0.6274480938992091 IN ())) BETWEEN ((v0.c0 IN ())) AND ((NOT (rt0.c1))))) GROUP BY rt0.c2, v0.c1, rt0.c0, rt0.c1, v0.c0 UNION SELECT rt0.c2, v0.c1, rt0.c0, rt0.c1, v0.c0 FROM v0 INNER JOIN rt0 ON (- (v0.c0)) COLLATE RTRIM WHERE ((NOT ((((0.6274480938992091 IN ())) BETWEEN ((v0.c0 IN ())) AND ((NOT (rt0.c1))))))) GROUP BY rt0.c2, v0.c1, rt0.c0, rt0.c1, v0.c0 UNION SELECT ALL rt0.c2, v0.c1, rt0.c0, rt0.c1, v0.c0 FROM v0 INNER JOIN rt0 ON (- (v0.c0)) COLLATE RTRIM WHERE ((((((0.6274480938992091 IN ())) BETWEEN ((v0.c0 IN ())) AND ((NOT (rt0.c1))))) ISNULL)) GROUP BY rt0.c2, v0.c1, rt0.c0, rt0.c1, v0.c0;
SELECT rt0.c2, v0.c1, rt0.c0, rt0.c1, v0.c0 FROM v0 INNER JOIN rt0 ON (- (v0.c0)) COLLATE RTRIM GROUP BY rt0.c2, v0.c1, rt0.c0, rt0.c1, v0.c0;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING MAX(MAX(MAX(MAX(COUNT(*))))) UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING (NOT (MAX(MAX(MAX(MAX(COUNT(*))))))) UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING ((MAX(MAX(MAX(MAX(COUNT(*)))))) ISNULL);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((((v0.c2)<=(-1.770100847E9))) IS TRUE);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((((v0.c2)<=(-1.770100847E9))) IS TRUE) WHERE ((((NULL, rt0.c4, ((v0.c2)-(rt0.c3))))<((((v0.c1)>=(v0.c0)), (rt0.c1 IN ()), json_object(rt0.c1, rt0.c2))))) UNION ALL SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((((v0.c2)<=(-1.770100847E9))) IS TRUE) WHERE ((NOT ((((NULL, rt0.c4, ((v0.c2)-(rt0.c3))))<((((v0.c1)>=(v0.c0)), (rt0.c1 IN ()), json_object(rt0.c1, rt0.c2))))))) UNION ALL SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((((v0.c2)<=(-1.770100847E9))) IS TRUE) WHERE ((((((NULL, rt0.c4, ((v0.c2)-(rt0.c3))))<((((v0.c1)>=(v0.c0)), (rt0.c1 IN ()), json_object(rt0.c1, rt0.c2))))) ISNULL));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((((v0.c2)<=(-1.770100847E9))) IS TRUE);
SELECT DISTINCT v0.c0, rt0.c3, rt0.c0, rt0.c4, v0.c2, rt0.c1 FROM v0, rt0;
SELECT DISTINCT v0.c0, rt0.c3, rt0.c0, rt0.c4, v0.c2, rt0.c1 FROM v0, rt0 WHERE (CASE WHEN ((((((((((((v0.c2)OR(v0.c2)))OR('-1425189027')))AND(v0.c0)))AND(v0.c1)))OR(rt0.c1)))AND(0Xffffffffff4aee19)) THEN ((rt0.c1)IS NOT(rt0.c4)) END) UNION SELECT DISTINCT v0.c0, rt0.c3, rt0.c0, rt0.c4, v0.c2, rt0.c1 FROM v0, rt0 WHERE ((NOT (CASE WHEN ((((((((((((v0.c2)OR(v0.c2)))OR('-1425189027')))AND(v0.c0)))AND(v0.c1)))OR(rt0.c1)))AND(0Xffffffffff4aee19)) THEN ((rt0.c1)IS NOT(rt0.c4)) END))) UNION SELECT DISTINCT v0.c0, rt0.c3, rt0.c0, rt0.c4, v0.c2, rt0.c1 FROM v0, rt0 WHERE (((CASE WHEN ((((((((((((v0.c2)OR(v0.c2)))OR('-1425189027')))AND(v0.c0)))AND(v0.c1)))OR(rt0.c1)))AND(0Xffffffffff4aee19)) THEN ((rt0.c1)IS NOT(rt0.c4)) END) ISNULL));
SELECT DISTINCT v0.c0, rt0.c3, rt0.c0, rt0.c4, v0.c2, rt0.c1 FROM v0, rt0;
SELECT v0.c1, v0.c2 FROM v0 NOT INDEXED GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0 WHERE ((((NOT (v0.c0)))<<(CAST(NULL AS NUMERIC)))) GROUP BY v0.c1, v0.c2 UNION SELECT v0.c1, v0.c2 FROM v0 WHERE ((NOT ((((NOT (v0.c0)))<<(CAST(NULL AS NUMERIC)))))) GROUP BY v0.c1, v0.c2 UNION SELECT v0.c1, v0.c2 FROM v0 WHERE ((((((NOT (v0.c0)))<<(CAST(NULL AS NUMERIC)))) ISNULL)) GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0 NOT INDEXED GROUP BY v0.c1, v0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4 HAVING ((((((((COUNT(rt0.c2))AND(SUM(SUM(COUNT(GROUP_CONCAT(rt0.c4)))))))OR(TOTAL(rt0.c0))))AND(GROUP_CONCAT(rt0.c4))))AND(SUM(AVG(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1, rt0.c4 HAVING (NOT (((((((((COUNT(rt0.c2))AND(SUM(SUM(COUNT(GROUP_CONCAT(rt0.c4)))))))OR(TOTAL(rt0.c0))))AND(GROUP_CONCAT(rt0.c4))))AND(SUM(AVG(rt0.c0)))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4 HAVING ((((((((((COUNT(rt0.c2))AND(SUM(SUM(COUNT(GROUP_CONCAT(rt0.c4)))))))OR(TOTAL(rt0.c0))))AND(GROUP_CONCAT(rt0.c4))))AND(SUM(AVG(rt0.c0))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((- (((rt0.c3) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((- (((rt0.c3) NOT NULL)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((- (((rt0.c3) NOT NULL)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (PRINTF(v0.c0, v0.c1, 4.93676085E8) COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (PRINTF(v0.c0, v0.c1, 4.93676085E8) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0 WHERE (((PRINTF(v0.c0, v0.c1, 4.93676085E8) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((- (rt0.c2)) COLLATE NOCASE) GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((- (rt0.c2)) COLLATE NOCASE))) GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((- (rt0.c2)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3 HAVING MAX((~ (AVG(rt0.c2)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3 HAVING (NOT (MAX((~ (AVG(rt0.c2)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3 HAVING ((MAX((~ (AVG(rt0.c2))))) ISNULL);
SELECT ALL * FROM v0 INNER JOIN rt0 ON (((~ (rt0.c2))) NOT BETWEEN (v0.c2 COLLATE BINARY) AND ((v0.c1 IN (rt0.c4))));
SELECT ALL * FROM v0 INNER JOIN rt0 ON (((~ (rt0.c2))) NOT BETWEEN (v0.c2 COLLATE BINARY) AND ((v0.c1 IN (rt0.c4)))) WHERE ((((TRIM(NULL, rt0.c3)))>=((((v0.c0)&(rt0.c0)))))) UNION ALL SELECT * FROM v0 INNER JOIN rt0 ON (((~ (rt0.c2))) NOT BETWEEN (v0.c2 COLLATE BINARY) AND ((v0.c1 IN (rt0.c4)))) WHERE ((NOT ((((TRIM(NULL, rt0.c3)))>=((((v0.c0)&(rt0.c0)))))))) UNION ALL SELECT ALL * FROM v0 INNER JOIN rt0 ON (((~ (rt0.c2))) NOT BETWEEN (v0.c2 COLLATE BINARY) AND ((v0.c1 IN (rt0.c4)))) WHERE ((((((TRIM(NULL, rt0.c3)))>=((((v0.c0)&(rt0.c0)))))) ISNULL));
SELECT ALL * FROM v0 INNER JOIN rt0 ON (((~ (rt0.c2))) NOT BETWEEN (v0.c2 COLLATE BINARY) AND ((v0.c1 IN (rt0.c4))));
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) BETWEEN (((rt0.c3)LIKE(rt0.c2))) AND ((((rt0.c0, rt0.c0, NULL, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c4, rt0.c0, rt0.c4, rt0.c3)) AND ((rt0.c0, rt0.c2, 'op', rt0.c1, rt0.c3)))))) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE BINARY) BETWEEN (((rt0.c3)LIKE(rt0.c2))) AND ((((rt0.c0, rt0.c0, NULL, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c4, rt0.c0, rt0.c4, rt0.c3)) AND ((rt0.c0, rt0.c2, 'op', rt0.c1, rt0.c3)))))))) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE (((((rt0.c0 COLLATE BINARY) BETWEEN (((rt0.c3)LIKE(rt0.c2))) AND ((((rt0.c0, rt0.c0, NULL, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c4, rt0.c0, rt0.c4, rt0.c3)) AND ((rt0.c0, rt0.c2, 'op', rt0.c1, rt0.c3)))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS TEXT)) NOTNULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS TEXT)) NOTNULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS TEXT)) NOTNULL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING CAST(COUNT(GROUP_CONCAT(v0.c2)) AS TEXT) UNION ALL SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING (NOT (CAST(COUNT(GROUP_CONCAT(v0.c2)) AS TEXT))) UNION ALL SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING ((CAST(COUNT(GROUP_CONCAT(v0.c2)) AS TEXT)) ISNULL);
SELECT v0.c2, v0.c0, v0.c1 FROM v0;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((((v0.c2, v0.c1, v0.c2)) NOT BETWEEN ((v0.c0, (v0.c2 IN ()), ((v0.c0)-(v0.c1)))) AND ((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)), v0.c2, ((((v0.c1)OR(v0.c1)))AND(v0.c2)))))) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((NOT ((((v0.c2, v0.c1, v0.c2)) NOT BETWEEN ((v0.c0, (v0.c2 IN ()), ((v0.c0)-(v0.c1)))) AND ((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)), v0.c2, ((((v0.c1)OR(v0.c1)))AND(v0.c2)))))))) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((((((v0.c2, v0.c1, v0.c2)) NOT BETWEEN ((v0.c0, (v0.c2 IN ()), ((v0.c0)-(v0.c1)))) AND ((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)), v0.c2, ((((v0.c1)OR(v0.c1)))AND(v0.c2)))))) ISNULL));
SELECT v0.c2, v0.c0, v0.c1 FROM v0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON (((((- (rt0.c0)))OR(((rt0.c4)<<(v0.c2)))))OR(rt0.c3));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON (((((- (rt0.c0)))OR(((rt0.c4)<<(v0.c2)))))OR(rt0.c3)) WHERE (((((v0.c0)%(rt0.c2)))GLOB(CAST(rt0.c2 AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON (((((- (rt0.c0)))OR(((rt0.c4)<<(v0.c2)))))OR(rt0.c3)) WHERE ((NOT (((((v0.c0)%(rt0.c2)))GLOB(CAST(rt0.c2 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON (((((- (rt0.c0)))OR(((rt0.c4)<<(v0.c2)))))OR(rt0.c3)) WHERE (((((((v0.c0)%(rt0.c2)))GLOB(CAST(rt0.c2 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON (((((- (rt0.c0)))OR(((rt0.c4)<<(v0.c2)))))OR(rt0.c3));
SELECT v0.c1 FROM v0, rt0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0, rt0 WHERE ((- ('<YIWEkn/M')) COLLATE NOCASE) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0, rt0 WHERE ((NOT ((- ('<YIWEkn/M')) COLLATE NOCASE))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0, rt0 WHERE ((((- ('<YIWEkn/M')) COLLATE NOCASE) ISNULL)) GROUP BY v0.c1;
SELECT v0.c1 FROM v0, rt0 GROUP BY v0.c1;
SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING TOTAL(((rt0.c2)OR(AVG(rt0.c3)))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING (NOT (TOTAL(((rt0.c2)OR(AVG(rt0.c3)))))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING ((TOTAL(((rt0.c2)OR(AVG(rt0.c3))))) ISNULL);
SELECT v0.c0, rt0.c4, rt0.c2, v0.c2 FROM rt0, v0;
SELECT ALL v0.c0, rt0.c4, rt0.c2, v0.c2 FROM rt0, v0 WHERE ((((((('0.658902689819128')IS(v0.c2)))AND(((0.9603671875042656) NOT BETWEEN (rt0.c2) AND (rt0.c4)))))OR(CAST(rt0.c1 AS REAL)))) UNION ALL SELECT ALL v0.c0, rt0.c4, rt0.c2, v0.c2 FROM rt0, v0 WHERE ((NOT ((((((('0.658902689819128')IS(v0.c2)))AND(((0.9603671875042656) NOT BETWEEN (rt0.c2) AND (rt0.c4)))))OR(CAST(rt0.c1 AS REAL)))))) UNION ALL SELECT ALL v0.c0, rt0.c4, rt0.c2, v0.c2 FROM rt0, v0 WHERE ((((((((('0.658902689819128')IS(v0.c2)))AND(((0.9603671875042656) NOT BETWEEN (rt0.c2) AND (rt0.c4)))))OR(CAST(rt0.c1 AS REAL)))) ISNULL));
SELECT v0.c0, rt0.c4, rt0.c2, v0.c2 FROM rt0, v0;
SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0;
SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0 WHERE (0.88909418901007) UNION SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0 WHERE ((NOT (0.88909418901007))) UNION SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0 WHERE (((0.88909418901007) ISNULL));
SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE (0.38412979049293916) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT (0.38412979049293916))) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE (((0.38412979049293916) ISNULL)) GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL rt0.c3, v0.c2 FROM v0, rt0 GROUP BY rt0.c3, v0.c2;
SELECT rt0.c3, v0.c2 FROM v0, rt0 GROUP BY rt0.c3, v0.c2 HAVING MIN(MAX(rt0.c4)) UNION ALL SELECT rt0.c3, v0.c2 FROM v0, rt0 GROUP BY rt0.c3, v0.c2 HAVING (NOT (MIN(MAX(rt0.c4)))) UNION ALL SELECT ALL rt0.c3, v0.c2 FROM v0, rt0 GROUP BY rt0.c3, v0.c2 HAVING ((MIN(MAX(rt0.c4))) ISNULL);
SELECT ALL rt0.c4, rt0.c3, v0.c2, v0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON (('-1157309002')<<(((v0.c1)IS NOT(rt0.c2))));
SELECT rt0.c4, rt0.c3, v0.c2, v0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON (('-1157309002')<<(((v0.c1)IS NOT(rt0.c2)))) WHERE ((((v0.c1 IN (474472415))) BETWEEN (rt0.c3 COLLATE RTRIM) AND ((((v0.c1))>((rt0.c1)))))) UNION ALL SELECT ALL rt0.c4, rt0.c3, v0.c2, v0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON (('-1157309002')<<(((v0.c1)IS NOT(rt0.c2)))) WHERE ((NOT ((((v0.c1 IN (474472415))) BETWEEN (rt0.c3 COLLATE RTRIM) AND ((((v0.c1))>((rt0.c1)))))))) UNION ALL SELECT ALL rt0.c4, rt0.c3, v0.c2, v0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON (('-1157309002')<<(((v0.c1)IS NOT(rt0.c2)))) WHERE ((((((v0.c1 IN (474472415))) BETWEEN (rt0.c3 COLLATE RTRIM) AND ((((v0.c1))>((rt0.c1)))))) ISNULL));
SELECT ALL rt0.c4, rt0.c3, v0.c2, v0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON (('-1157309002')<<(((v0.c1)IS NOT(rt0.c2))));
SELECT DISTINCT v0.c1, rt0.c3, rt0.c4, rt0.c1, v0.c2 FROM v0, rt0;
SELECT DISTINCT v0.c1, rt0.c3, rt0.c4, rt0.c1, v0.c2 FROM v0, rt0 WHERE (((((NULL)AND(((rt0.c3)OR(rt0.c2)))))AND((((v0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))))) UNION SELECT DISTINCT v0.c1, rt0.c3, rt0.c4, rt0.c1, v0.c2 FROM v0, rt0 WHERE ((NOT (((((NULL)AND(((rt0.c3)OR(rt0.c2)))))AND((((v0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))))))) UNION SELECT DISTINCT v0.c1, rt0.c3, rt0.c4, rt0.c1, v0.c2 FROM v0, rt0 WHERE (((((((NULL)AND(((rt0.c3)OR(rt0.c2)))))AND((((v0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))))) ISNULL));
SELECT DISTINCT v0.c1, rt0.c3, rt0.c4, rt0.c1, v0.c2 FROM v0, rt0;
SELECT v0.c2, v0.c0, v0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM v0, rt0 GROUP BY v0.c2, v0.c0, v0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c1;
SELECT v0.c2, v0.c0, v0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM v0, rt0 WHERE (((CASE WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN ('G4060') AND (((rt0.c0)GLOB(rt0.c0))))) GROUP BY v0.c2, v0.c0, v0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c1 UNION SELECT v0.c2, v0.c0, v0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM v0, rt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN ('G4060') AND (((rt0.c0)GLOB(rt0.c0))))))) GROUP BY v0.c2, v0.c0, v0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c1 UNION SELECT v0.c2, v0.c0, v0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM v0, rt0 WHERE (((((CASE WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN ('G4060') AND (((rt0.c0)GLOB(rt0.c0))))) ISNULL)) GROUP BY v0.c2, v0.c0, v0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c1;
SELECT v0.c2, v0.c0, v0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM v0, rt0 GROUP BY v0.c2, v0.c0, v0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c1;
SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING AVG(COUNT(*)) COLLATE NOCASE UNION ALL SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING (NOT (AVG(COUNT(*)) COLLATE NOCASE)) UNION ALL SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING ((AVG(COUNT(*)) COLLATE NOCASE) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE ((CAST(v0.c0 AS INTEGER) IN ())) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT ((CAST(v0.c0 AS INTEGER) IN ())))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((CAST(v0.c0 AS INTEGER) IN ())) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((x'') NOT BETWEEN ((0xffffffff93bee763 IN ())) AND (((rt0.c3)|(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((x'') NOT BETWEEN ((0Xffffffff93bee763 IN ())) AND (((rt0.c3)|(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((x'') NOT BETWEEN ((0xffffffff93bee763 IN ())) AND (((rt0.c3)|(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c1, rt0.c2, rt0.c1, rt0.c3, v0.c2, rt0.c4, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c3, -484934352, v0.c2)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (v0.c1)), (v0.c2 IN ()), v0.c1 COLLATE RTRIM)) AND (((('1788393448')IS(rt0.c1)), CASE WHEN v0.c1 THEN rt0.c0 ELSE v0.c0 END, ((rt0.c2)/(v0.c1))))) GROUP BY v0.c1, rt0.c2, rt0.c1, rt0.c3, v0.c2, rt0.c4, rt0.c0;
SELECT v0.c1, rt0.c2, rt0.c1, rt0.c3, v0.c2, rt0.c4, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c3, -484934352, v0.c2)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (v0.c1)), (v0.c2 IN ()), v0.c1 COLLATE RTRIM)) AND (((('1788393448')IS(rt0.c1)), CASE WHEN v0.c1 THEN rt0.c0 ELSE v0.c0 END, ((rt0.c2)/(v0.c1))))) WHERE (((CASE WHEN rt0.c0 THEN v0.c2 END)GLOB((rt0.c0 IN (rt0.c1, v0.c2))))) GROUP BY v0.c1, rt0.c2, rt0.c1, rt0.c3, v0.c2, rt0.c4, rt0.c0 UNION SELECT v0.c1, rt0.c2, rt0.c1, rt0.c3, v0.c2, rt0.c4, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c3, -484934352, v0.c2)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (v0.c1)), (v0.c2 IN ()), v0.c1 COLLATE RTRIM)) AND (((('1788393448')IS(rt0.c1)), CASE WHEN v0.c1 THEN rt0.c0 ELSE v0.c0 END, ((rt0.c2)/(v0.c1))))) WHERE ((NOT (((CASE WHEN rt0.c0 THEN v0.c2 END)GLOB((rt0.c0 IN (rt0.c1, v0.c2))))))) GROUP BY v0.c1, rt0.c2, rt0.c1, rt0.c3, v0.c2, rt0.c4, rt0.c0 UNION SELECT v0.c1, rt0.c2, rt0.c1, rt0.c3, v0.c2, rt0.c4, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c3, -484934352, v0.c2)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (v0.c1)), (v0.c2 IN ()), v0.c1 COLLATE RTRIM)) AND (((('1788393448')IS(rt0.c1)), CASE WHEN v0.c1 THEN rt0.c0 ELSE v0.c0 END, ((rt0.c2)/(v0.c1))))) WHERE (((((CASE WHEN rt0.c0 THEN v0.c2 END)GLOB((rt0.c0 IN (rt0.c1, v0.c2))))) ISNULL)) GROUP BY v0.c1, rt0.c2, rt0.c1, rt0.c3, v0.c2, rt0.c4, rt0.c0;
SELECT v0.c1, rt0.c2, rt0.c1, rt0.c3, v0.c2, rt0.c4, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c3, -484934352, v0.c2)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (v0.c1)), (v0.c2 IN ()), v0.c1 COLLATE RTRIM)) AND (((('1788393448')IS(rt0.c1)), CASE WHEN v0.c1 THEN rt0.c0 ELSE v0.c0 END, ((rt0.c2)/(v0.c1))))) GROUP BY v0.c1, rt0.c2, rt0.c1, rt0.c3, v0.c2, rt0.c4, rt0.c0;
SELECT ALL rt0.c0, v0.c1, v0.c2, rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, v0.c1, v0.c2, rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c2;
SELECT rt0.c0, v0.c1, v0.c2, rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, v0.c1, v0.c2, rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c2 HAVING MIN(MAX(MIN(COUNT(*)))) UNION ALL SELECT ALL rt0.c0, v0.c1, v0.c2, rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, v0.c1, v0.c2, rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c2 HAVING (NOT (MIN(MAX(MIN(COUNT(*)))))) UNION ALL SELECT rt0.c0, v0.c1, v0.c2, rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, v0.c1, v0.c2, rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c2 HAVING ((MIN(MAX(MIN(COUNT(*))))) ISNULL);
SELECT ALL TOTAL(v0.c0) FROM v0;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0 WHERE (LIKELIHOOD(v0.c2, 0.7555920694682338)) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0 WHERE ((NOT (LIKELIHOOD(v0.c2, 0.7555920694682338)))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0 WHERE (((LIKELIHOOD(v0.c2, 0.7555920694682338)) ISNULL));
SELECT rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (CAST(CAST(rt0.c1 AS INTEGER) AS NUMERIC)) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (CAST(CAST(rt0.c1 AS INTEGER) AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((CAST(CAST(rt0.c1 AS INTEGER) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c3, rt0.c1, rt0.c0, v0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, v0.c2, v0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, v0.c2, v0.c0 FROM v0, rt0 WHERE (CAST(v0.c2 AS NUMERIC)) GROUP BY rt0.c3, rt0.c1, rt0.c0, v0.c2, v0.c0 UNION SELECT rt0.c3, rt0.c1, rt0.c0, v0.c2, v0.c0 FROM v0, rt0 WHERE ((NOT (CAST(v0.c2 AS NUMERIC)))) GROUP BY rt0.c3, rt0.c1, rt0.c0, v0.c2, v0.c0 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c0, v0.c2, v0.c0 FROM v0, rt0 WHERE (((CAST(v0.c2 AS NUMERIC)) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c0, v0.c2, v0.c0;
SELECT rt0.c3, rt0.c1, rt0.c0, v0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, v0.c2, v0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING CASE (((SUM(rt0.c3), rt0.c1, SUM(rt0.c2))) BETWEEN ((rt0.c3, SUM(rt0.c4), AVG(MIN(rt0.c0)))) AND ((rt0.c1, MIN(COUNT(*)), GROUP_CONCAT(GROUP_CONCAT(MAX(rt0.c4))))))  WHEN rt0.c0 THEN MIN(AVG(COUNT(MAX(rt0.c2)))) END UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (CASE (((SUM(rt0.c3), rt0.c1, SUM(rt0.c2))) BETWEEN ((rt0.c3, SUM(rt0.c4), AVG(MIN(rt0.c0)))) AND ((rt0.c1, MIN(COUNT(*)), GROUP_CONCAT(GROUP_CONCAT(MAX(rt0.c4))))))  WHEN rt0.c0 THEN MIN(AVG(COUNT(MAX(rt0.c2)))) END)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CASE (((SUM(rt0.c3), rt0.c1, SUM(rt0.c2))) BETWEEN ((rt0.c3, SUM(rt0.c4), AVG(MIN(rt0.c0)))) AND ((rt0.c1, MIN(COUNT(*)), GROUP_CONCAT(GROUP_CONCAT(MAX(rt0.c4))))))  WHEN rt0.c0 THEN MIN(AVG(COUNT(MAX(rt0.c2)))) END) ISNULL);
SELECT rt0.c0, v0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c1, v0.c2, rt0.c4 FROM v0, rt0;
SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c1, v0.c2, rt0.c4 FROM v0, rt0 WHERE ((~ (v0.c0)) COLLATE BINARY) UNION ALL SELECT rt0.c0, v0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c1, v0.c2, rt0.c4 FROM v0, rt0 WHERE ((NOT ((~ (v0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c1, v0.c2, rt0.c4 FROM v0, rt0 WHERE ((((~ (v0.c0)) COLLATE BINARY) ISNULL));
SELECT rt0.c0, v0.c0, rt0.c1, rt0.c3, rt0.c2, v0.c1, v0.c2, rt0.c4 FROM v0, rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0 NOT INDEXED, v0 WHERE (((TRIM(DISTINCT v0.c1, rt0.c0))LIKE((rt0.c3 IN (v0.c1, rt0.c3))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((TRIM(DISTINCT v0.c1, rt0.c0))LIKE((rt0.c3 IN (v0.c1, rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((TRIM(DISTINCT v0.c1, rt0.c0))LIKE((rt0.c3 IN (v0.c1, rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0 WHERE ((((((((rt0.c4))<=((x''))))AND(rt0.c3 COLLATE BINARY)))OR(((((((((v0.c0)OR(v0.c1)))OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c1))))) GROUP BY rt0.c2, rt0.c3, rt0.c1 UNION SELECT rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0 WHERE ((NOT ((((((((rt0.c4))<=((x''))))AND(rt0.c3 COLLATE BINARY)))OR(((((((((v0.c0)OR(v0.c1)))OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c1))))))) GROUP BY rt0.c2, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0 WHERE ((((((((((rt0.c4))<=((x''))))AND(rt0.c3 COLLATE BINARY)))OR(((((((((v0.c0)OR(v0.c1)))OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING (((SUM(v0.c1)))<>((COUNT(SUM(COUNT(v0.c0)))))) UNION ALL SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING (NOT ((((SUM(v0.c1)))<>((COUNT(SUM(COUNT(v0.c0)))))))) UNION ALL SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING (((((SUM(v0.c1)))!=((COUNT(SUM(COUNT(v0.c0))))))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((((v0.c2) IS TRUE)) BETWEEN ((+ (v0.c2))) AND (x'649a'))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((v0.c2) IS TRUE)) BETWEEN ((+ (v0.c2))) AND (x'649a'))))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c2) IS TRUE)) BETWEEN ((+ (v0.c2))) AND (x'649a'))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0, rt0.c2 FROM v0, rt0;
SELECT DISTINCT v0.c0, rt0.c2 FROM v0, rt0 WHERE (NULL) UNION SELECT DISTINCT v0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT v0.c0, rt0.c2 FROM v0, rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT v0.c0, rt0.c2 FROM v0, rt0;
SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0, v0 WHERE (((v0.c2) ISNULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM rt0, v0 WHERE ((NOT (((v0.c2) ISNULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM rt0, v0 NOT INDEXED WHERE (((((v0.c2) ISNULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1;
SELECT v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1 HAVING (- (CASE AVG(GROUP_CONCAT(v0.c2))  WHEN v0.c1 THEN GROUP_CONCAT(MIN(TOTAL(v0.c0))) WHEN v0.c1 THEN SUM(COUNT('-1266766159')) WHEN TOTAL(SUM(v0.c1)) THEN TOTAL(COUNT(v0.c1)) END)) UNION ALL SELECT ALL v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1 HAVING (NOT ((- (CASE AVG(GROUP_CONCAT(v0.c2))  WHEN v0.c1 THEN GROUP_CONCAT(MIN(TOTAL(v0.c0))) WHEN v0.c1 THEN SUM(COUNT('-1266766159')) WHEN TOTAL(SUM(v0.c1)) THEN TOTAL(COUNT(v0.c1)) END)))) UNION ALL SELECT ALL v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1 HAVING (((- (CASE AVG(GROUP_CONCAT(v0.c2))  WHEN v0.c1 THEN GROUP_CONCAT(MIN(TOTAL(v0.c0))) WHEN v0.c1 THEN SUM(COUNT('-1266766159')) WHEN TOTAL(SUM(v0.c1)) THEN TOTAL(COUNT(v0.c1)) END))) ISNULL);
SELECT * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (((((((((rt0.c3)OR(v0.c2)))OR(rt0.c3)))AND((rt0.c2 IN (v0.c0)))))AND(rt0.c1 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (((((((((rt0.c3)OR(v0.c2)))OR(rt0.c3)))AND((rt0.c2 IN (v0.c0)))))AND(rt0.c1 COLLATE NOCASE))))) UNION ALL SELECT * FROM rt0, v0 WHERE (((((((((((rt0.c3)OR(v0.c2)))OR(rt0.c3)))AND((rt0.c2 IN (v0.c0)))))AND(rt0.c1 COLLATE NOCASE))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c3 FROM rt0 WHERE (((((rt0.c3)/(rt0.c1)))IS NOT(((0.3150706558864568) BETWEEN (rt0.c2) AND (rt0.c4))))) UNION SELECT DISTINCT rt0.c3 FROM rt0 WHERE ((NOT (((((rt0.c3)/(rt0.c1)))IS NOT(((0.3150706558864568) BETWEEN (rt0.c2) AND (rt0.c4))))))) UNION SELECT DISTINCT rt0.c3 FROM rt0 WHERE (((((((rt0.c3)/(rt0.c1)))IS NOT(((0.3150706558864568) BETWEEN (rt0.c2) AND (rt0.c4))))) ISNULL));
SELECT DISTINCT rt0.c3 FROM rt0;
SELECT v0.c2, rt0.c2, rt0.c4, v0.c1, v0.c0, rt0.c1, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY v0.c2, rt0.c2, rt0.c4, v0.c1, v0.c0, rt0.c1, rt0.c3, rt0.c0;
SELECT ALL v0.c2, rt0.c2, rt0.c4, v0.c1, v0.c0, rt0.c1, rt0.c3, rt0.c0 FROM rt0, v0 WHERE ((((rt0.c2 IN (rt0.c2))) NOT BETWEEN (CASE rt0.c4  WHEN v0.c2 THEN 0.6933453174395381 ELSE v0.c2 END) AND (CASE v0.c2  WHEN v0.c2 THEN rt0.c1 ELSE v0.c1 END))) GROUP BY v0.c2, rt0.c2, rt0.c4, v0.c1, v0.c0, rt0.c1, rt0.c3, rt0.c0 UNION SELECT v0.c2, rt0.c2, rt0.c4, v0.c1, v0.c0, rt0.c1, rt0.c3, rt0.c0 FROM rt0, v0 WHERE ((NOT ((((rt0.c2 IN (rt0.c2))) NOT BETWEEN (CASE rt0.c4  WHEN v0.c2 THEN 0.6933453174395381 ELSE v0.c2 END) AND (CASE v0.c2  WHEN v0.c2 THEN rt0.c1 ELSE v0.c1 END))))) GROUP BY v0.c2, rt0.c2, rt0.c4, v0.c1, v0.c0, rt0.c1, rt0.c3, rt0.c0 UNION SELECT ALL v0.c2, rt0.c2, rt0.c4, v0.c1, v0.c0, rt0.c1, rt0.c3, rt0.c0 FROM rt0, v0 WHERE ((((((rt0.c2 IN (rt0.c2))) NOT BETWEEN (CASE rt0.c4  WHEN v0.c2 THEN 0.6933453174395381 ELSE v0.c2 END) AND (CASE v0.c2  WHEN v0.c2 THEN rt0.c1 ELSE v0.c1 END))) ISNULL)) GROUP BY v0.c2, rt0.c2, rt0.c4, v0.c1, v0.c0, rt0.c1, rt0.c3, rt0.c0;
SELECT v0.c2, rt0.c2, rt0.c4, v0.c1, v0.c0, rt0.c1, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY v0.c2, rt0.c2, rt0.c4, v0.c1, v0.c0, rt0.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (((- (COUNT(*)))) NOT BETWEEN (MAX(COUNT(COUNT(rt0.c1)))) AND (((MAX(rt0.c1))<>(rt0.c2)))) UNION ALL SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (NOT ((((- (COUNT(*)))) NOT BETWEEN (MAX(COUNT(COUNT(rt0.c1)))) AND (((MAX(rt0.c1))<>(rt0.c2)))))) UNION ALL SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (((((- (COUNT(*)))) NOT BETWEEN (MAX(COUNT(COUNT(rt0.c1)))) AND (((MAX(rt0.c1))<>(rt0.c2))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS REAL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST(rt0.c1 COLLATE RTRIM AS REAL)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(rt0.c1 COLLATE RTRIM AS REAL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT v0.c1 FROM v0;
SELECT DISTINCT v0.c1 FROM v0 WHERE ((((v0.c0) NOTNULL) IN ((((v0.c2, v0.c1, v0.c1))<=((v0.c1, v0.c0, v0.c1))), ((v0.c0)*(v0.c0))))) UNION SELECT DISTINCT v0.c1 FROM v0 WHERE ((NOT ((((v0.c0) NOTNULL) IN ((((v0.c2, v0.c1, v0.c1))<=((v0.c1, v0.c0, v0.c1))), ((v0.c0)*(v0.c0))))))) UNION SELECT DISTINCT v0.c1 FROM v0 WHERE ((((((v0.c0) NOTNULL) IN ((((v0.c2, v0.c1, v0.c1))<=((v0.c1, v0.c0, v0.c1))), ((v0.c0)*(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c1 FROM v0;
SELECT ALL v0.c1, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY v0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT v0.c1, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0 WHERE (((CASE WHEN '' THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN v0.c0 END)&(rt0.c3 COLLATE NOCASE))) GROUP BY v0.c1, rt0.c2, rt0.c3, rt0.c0 UNION SELECT v0.c1, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0 WHERE ((NOT (((CASE WHEN '' THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN v0.c0 END)&(rt0.c3 COLLATE NOCASE))))) GROUP BY v0.c1, rt0.c2, rt0.c3, rt0.c0 UNION SELECT v0.c1, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0 WHERE (((((CASE WHEN '' THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN v0.c0 END)&(rt0.c3 COLLATE NOCASE))) ISNULL)) GROUP BY v0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL v0.c1, rt0.c2, rt0.c3, rt0.c0 FROM v0, rt0 GROUP BY v0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c3, v0.c2, rt0.c0, rt0.c4, v0.c1, rt0.c2, rt0.c1, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON (NOT (rt0.c4 COLLATE NOCASE)) GROUP BY rt0.c3, v0.c2, rt0.c0, rt0.c4, v0.c1, rt0.c2, rt0.c1, v0.c0;
SELECT ALL rt0.c3, v0.c2, rt0.c0, rt0.c4, v0.c1, rt0.c2, rt0.c1, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON (NOT (rt0.c4 COLLATE NOCASE)) GROUP BY rt0.c3, v0.c2, rt0.c0, rt0.c4, v0.c1, rt0.c2, rt0.c1, v0.c0 HAVING TOTAL(((COUNT(*)) IS TRUE)) UNION ALL SELECT rt0.c3, v0.c2, rt0.c0, rt0.c4, v0.c1, rt0.c2, rt0.c1, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON (NOT (rt0.c4 COLLATE NOCASE)) GROUP BY rt0.c3, v0.c2, rt0.c0, rt0.c4, v0.c1, rt0.c2, rt0.c1, v0.c0 HAVING (NOT (TOTAL(((COUNT(*)) IS TRUE)))) UNION ALL SELECT rt0.c3, v0.c2, rt0.c0, rt0.c4, v0.c1, rt0.c2, rt0.c1, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON (NOT (rt0.c4 COLLATE NOCASE)) GROUP BY rt0.c3, v0.c2, rt0.c0, rt0.c4, v0.c1, rt0.c2, rt0.c1, v0.c0 HAVING ((TOTAL(((COUNT(*)) IS TRUE))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((((v0.c2)==(v0.c1)) IN ())) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((v0.c2)==(v0.c1)) IN ())))) UNION ALL SELECT * FROM v0 WHERE ((((((v0.c2)=(v0.c1)) IN ())) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM v0, rt0 WHERE (0.10839347310497549) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM v0, rt0 WHERE ((NOT (0.10839347310497549))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM v0, rt0 WHERE (((0.10839347310497549) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM v0, rt0;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 WHERE (((((v0.c0) NOTNULL)) NOT BETWEEN (0.0444526032539021) AND ((((v0.c0))<((v0.c0)))))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0 WHERE ((NOT (((((v0.c0) NOTNULL)) NOT BETWEEN (0.0444526032539021) AND ((((v0.c0))<((v0.c0)))))))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0 WHERE (((((((v0.c0) NOTNULL)) NOT BETWEEN (0.0444526032539021) AND ((((v0.c0))<((v0.c0)))))) ISNULL)) GROUP BY v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0;
SELECT MIN(HEX(DISTINCT json_quote(rt0.c2))) FROM rt0, v0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((CAST(v0.c1 AS NUMERIC) IN ())) UNION ALL SELECT * FROM v0 WHERE ((NOT ((CAST(v0.c1 AS NUMERIC) IN ())))) UNION ALL SELECT ALL * FROM v0 WHERE ((((CAST(v0.c1 AS NUMERIC) IN ())) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (LIKELY(CAST(rt0.c3 AS NUMERIC))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (LIKELY(CAST(rt0.c3 AS NUMERIC))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((LIKELY(CAST(rt0.c3 AS NUMERIC))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 WHERE ((v0.c2 COLLATE BINARY IN (((v0.c2)&(v0.c0)), ((v0.c0) ISNULL)))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0 WHERE ((NOT ((v0.c2 COLLATE BINARY IN (((v0.c2)&(v0.c0)), ((v0.c0) ISNULL)))))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0 WHERE ((((v0.c2 COLLATE BINARY IN (((v0.c2)&(v0.c0)), ((v0.c0) ISNULL)))) ISNULL)) GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL rt0.c2, rt0.c1, v0.c2, v0.c0, rt0.c0, v0.c1, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c2, v0.c0, rt0.c0, v0.c1, rt0.c4, rt0.c3;
SELECT rt0.c2, rt0.c1, v0.c2, v0.c0, rt0.c0, v0.c1, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c2, v0.c0, rt0.c0, v0.c1, rt0.c4, rt0.c3 HAVING SUM(AVG('n&rbV迩HpV')) UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c2, v0.c0, rt0.c0, v0.c1, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c2, v0.c0, rt0.c0, v0.c1, rt0.c4, rt0.c3 HAVING (NOT (SUM(AVG('n&rbV迩HpV')))) UNION ALL SELECT rt0.c2, rt0.c1, v0.c2, v0.c0, rt0.c0, v0.c1, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c2, v0.c0, rt0.c0, v0.c1, rt0.c4, rt0.c3 HAVING ((SUM(AVG('n&rbV迩HpV'))) ISNULL);
SELECT v0.c0, rt0.c3, rt0.c4, v0.c2, rt0.c0 FROM v0, rt0;
SELECT v0.c0, rt0.c3, rt0.c4, v0.c2, rt0.c0 FROM v0, rt0 WHERE (v0.c2) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c4, v0.c2, rt0.c0 FROM v0, rt0 WHERE ((NOT (v0.c2))) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c4, v0.c2, rt0.c0 FROM v0, rt0 WHERE (((v0.c2) ISNULL));
SELECT v0.c0, rt0.c3, rt0.c4, v0.c2, rt0.c0 FROM v0, rt0;
SELECT DISTINCT v0.c0, v0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2) BETWEEN (0.9360753163655421) AND (rt0.c4)) AS TEXT);
SELECT DISTINCT v0.c0, v0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2) BETWEEN (0.9360753163655421) AND (rt0.c4)) AS TEXT) WHERE ((((v0.c1)/(rt0.c4)) IN ())) UNION SELECT DISTINCT v0.c0, v0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2) BETWEEN (0.9360753163655421) AND (rt0.c4)) AS TEXT) WHERE ((NOT ((((v0.c1)/(rt0.c4)) IN ())))) UNION SELECT DISTINCT v0.c0, v0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2) BETWEEN (0.9360753163655421) AND (rt0.c4)) AS TEXT) WHERE ((((((v0.c1)/(rt0.c4)) IN ())) ISNULL));
SELECT DISTINCT v0.c0, v0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2) BETWEEN (0.9360753163655421) AND (rt0.c4)) AS TEXT);
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0 WHERE (((v0.c0)<=(ABS(DISTINCT v0.c1)))) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM v0 WHERE ((NOT (((v0.c0)<=(ABS(DISTINCT v0.c1)))))) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM v0 WHERE (((((v0.c0)<=(ABS(DISTINCT v0.c1)))) ISNULL)) GROUP BY v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT rt0.c0, v0.c2, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2))<>((v0.c2))) GROUP BY rt0.c0, v0.c2, rt0.c3;
SELECT ALL rt0.c0, v0.c2, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2))!=((v0.c2))) GROUP BY rt0.c0, v0.c2, rt0.c3 HAVING GROUP_CONCAT((((MAX(v0.c1)))<((SUM(COUNT(*)))))) UNION ALL SELECT ALL rt0.c0, v0.c2, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2))<>((v0.c2))) GROUP BY rt0.c0, v0.c2, rt0.c3 HAVING (NOT (GROUP_CONCAT((((MAX(v0.c1)))<((SUM(COUNT(*)))))))) UNION ALL SELECT ALL rt0.c0, v0.c2, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2))!=((v0.c2))) GROUP BY rt0.c0, v0.c2, rt0.c3 HAVING ((GROUP_CONCAT((((MAX(v0.c1)))<((SUM(COUNT(*))))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c4)))OR(rt0.c0)))LIKE(rt0.c3 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((((rt0.c2)OR(rt0.c4)))OR(rt0.c0)))LIKE(rt0.c3 COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM rt0 NOT INDEXED WHERE (((((((((rt0.c2)OR(rt0.c4)))OR(rt0.c0)))LIKE(rt0.c3 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON CAST(CAST(v0.c0 AS TEXT) AS TEXT);
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON CAST(CAST(v0.c0 AS TEXT) AS TEXT) WHERE ((((CAST(v0.c0 AS INTEGER), ((rt0.c1)<(rt0.c3)), CASE rt0.c2  WHEN NULL THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE v0.c1 END, CASE v0.c2  WHEN v0.c1 THEN rt0.c4 ELSE v0.c2 END, rt0.c4 COLLATE RTRIM))<((((rt0.c3) NOT NULL), (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((v0.c0))), CAST(rt0.c3 AS BLOB), (NOT (rt0.c2)), (- (rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON CAST(CAST(v0.c0 AS TEXT) AS TEXT) WHERE ((NOT ((((CAST(v0.c0 AS INTEGER), ((rt0.c1)<(rt0.c3)), CASE rt0.c2  WHEN NULL THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE v0.c1 END, CASE v0.c2  WHEN v0.c1 THEN rt0.c4 ELSE v0.c2 END, rt0.c4 COLLATE RTRIM))<((((rt0.c3) NOT NULL), (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((v0.c0))), CAST(rt0.c3 AS BLOB), (NOT (rt0.c2)), (- (rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON CAST(CAST(v0.c0 AS TEXT) AS TEXT) WHERE ((((((CAST(v0.c0 AS INTEGER), ((rt0.c1)<(rt0.c3)), CASE rt0.c2  WHEN NULL THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE v0.c1 END, CASE v0.c2  WHEN v0.c1 THEN rt0.c4 ELSE v0.c2 END, rt0.c4 COLLATE RTRIM))<((((rt0.c3) NOT NULL), (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((v0.c0))), CAST(rt0.c3 AS BLOB), (NOT (rt0.c2)), (- (rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON CAST(CAST(v0.c0 AS TEXT) AS TEXT);
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((((v0.c1)||(v0.c0))) BETWEEN (0.24473738809383883) AND (((v0.c0) NOTNULL)))) GROUP BY v0.c2, v0.c0, v0.c1 UNION SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((NOT (((((v0.c1)||(v0.c0))) BETWEEN (0.24473738809383883) AND (((v0.c0) NOTNULL)))))) GROUP BY v0.c2, v0.c0, v0.c1 UNION SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((((((v0.c1)||(v0.c0))) BETWEEN (0.24473738809383883) AND (((v0.c0) NOTNULL)))) ISNULL)) GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING NULL UNION ALL SELECT rt0.c1 FROM rt0, v0 NOT INDEXED GROUP BY rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING NULL UNION ALL SELECT rt0.c1 FROM rt0, v0 NOT INDEXED GROUP BY rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (NULL) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM rt0 WHERE (((NULL) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0 IN ()))AND(CAST(v0.c1 AS INTEGER))))OR((v0.c2 IN ())))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((v0.c0 IN ()))AND(CAST(v0.c1 AS INTEGER))))OR((v0.c2 IN ())))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((v0.c0 IN ()))AND(CAST(v0.c1 AS INTEGER))))OR((v0.c2 IN ())))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0 WHERE ((~ (((v0.c2) BETWEEN (v0.c2) AND (v0.c1))))) GROUP BY v0.c1, v0.c2 UNION SELECT v0.c1, v0.c2 FROM v0 WHERE ((NOT ((~ (((v0.c2) BETWEEN (v0.c2) AND (v0.c1))))))) GROUP BY v0.c1, v0.c2 UNION SELECT v0.c1, v0.c2 FROM v0 WHERE ((((~ (((v0.c2) BETWEEN (v0.c2) AND (v0.c1))))) ISNULL)) GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL rt0.c4, v0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c4, v0.c1, rt0.c2;
SELECT rt0.c4, v0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c4, v0.c1, rt0.c2 HAVING ((SUM(MIN(rt0.c3))) NOTNULL) COLLATE NOCASE UNION ALL SELECT rt0.c4, v0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c4, v0.c1, rt0.c2 HAVING (NOT (((SUM(MIN(rt0.c3))) NOTNULL) COLLATE NOCASE)) UNION ALL SELECT rt0.c4, v0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c4, v0.c1, rt0.c2 HAVING ((((SUM(MIN(rt0.c3))) NOTNULL) COLLATE NOCASE) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c2)) THEN (NOT (rt0.c0)) WHEN (rt0.c2 IN (rt0.c4)) THEN x'a89c' WHEN ((rt0.c1) NOTNULL) THEN ((v0.c2) NOT NULL) ELSE CAST(v0.c2 AS BLOB) END) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (CASE WHEN ((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c2)) THEN (NOT (rt0.c0)) WHEN (rt0.c2 IN (rt0.c4)) THEN x'a89c' WHEN ((rt0.c1) NOTNULL) THEN ((v0.c2) NOT NULL) ELSE CAST(v0.c2 AS BLOB) END))) UNION ALL SELECT * FROM rt0, v0 WHERE (((CASE WHEN ((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c2)) THEN (NOT (rt0.c0)) WHEN (rt0.c2 IN (rt0.c4)) THEN x'a89c' WHEN ((rt0.c1) NOTNULL) THEN ((v0.c2) NOT NULL) ELSE CAST(v0.c2 AS BLOB) END) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c1) ISNULL) COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c1) ISNULL) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c1) ISNULL) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0, v0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, v0.c1, rt0.c3;
SELECT ALL v0.c0, v0.c1, rt0.c3 FROM v0, rt0 WHERE ('340588160') GROUP BY v0.c0, v0.c1, rt0.c3 UNION SELECT v0.c0, v0.c1, rt0.c3 FROM v0, rt0 WHERE ((NOT ('340588160'))) GROUP BY v0.c0, v0.c1, rt0.c3 UNION SELECT v0.c0, v0.c1, rt0.c3 FROM v0, rt0 WHERE ((('340588160') ISNULL)) GROUP BY v0.c0, v0.c1, rt0.c3;
SELECT ALL v0.c0, v0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, v0.c1, rt0.c3;
SELECT ALL v0.c2 FROM rt0, v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM rt0, v0 GROUP BY v0.c2 HAVING COUNT((NOT (TOTAL(MIN(rt0.c2))))) UNION ALL SELECT v0.c2 FROM rt0, v0 GROUP BY v0.c2 HAVING (NOT (COUNT((NOT (TOTAL(MIN(rt0.c2))))))) UNION ALL SELECT ALL v0.c2 FROM rt0, v0 GROUP BY v0.c2 HAVING ((COUNT((NOT (TOTAL(MIN(rt0.c2)))))) ISNULL);
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE ((+ (rt0.c4)) COLLATE BINARY) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT ((+ (rt0.c4)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((+ (rt0.c4)) COLLATE BINARY) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT v0.c1 FROM v0;
SELECT DISTINCT v0.c1 FROM v0 WHERE ('-35810617') UNION SELECT DISTINCT v0.c1 FROM v0 WHERE ((NOT ('-35810617'))) UNION SELECT DISTINCT v0.c1 FROM v0 WHERE ((('-35810617') ISNULL));
SELECT DISTINCT v0.c1 FROM v0;
SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT ALL v0.c2, v0.c1 FROM v0 WHERE (CASE WHEN ((v0.c1) NOT NULL) THEN ((v0.c2) IS FALSE) ELSE ((((v0.c1)AND(v0.c1)))AND(v0.c0)) END) GROUP BY v0.c2, v0.c1 UNION SELECT ALL v0.c2, v0.c1 FROM v0 WHERE ((NOT (CASE WHEN ((v0.c1) NOT NULL) THEN ((v0.c2) IS FALSE) ELSE ((((v0.c1)AND(v0.c1)))AND(v0.c0)) END))) GROUP BY v0.c2, v0.c1 UNION SELECT v0.c2, v0.c1 FROM v0 WHERE (((CASE WHEN ((v0.c1) NOT NULL) THEN ((v0.c2) IS FALSE) ELSE ((((v0.c1)AND(v0.c1)))AND(v0.c0)) END) ISNULL)) GROUP BY v0.c2, v0.c1;
SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, v0.c0;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, v0.c0 HAVING (GROUP_CONCAT(v0.c1) IN ()) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, v0.c0 HAVING (NOT ((GROUP_CONCAT(v0.c1) IN ()))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, v0.c0 FROM v0, rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, v0.c0 HAVING (((GROUP_CONCAT(v0.c1) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, v0.c0;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, v0.c0 HAVING (GROUP_CONCAT(v0.c1) IN ()) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, v0.c0 HAVING (NOT ((GROUP_CONCAT(v0.c1) IN ()))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, v0.c0 FROM v0, rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, v0.c0 HAVING (((GROUP_CONCAT(v0.c1) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1, v0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 NOT INDEXED WHERE (((((v0.c1)/(v0.c2))) BETWEEN (v0.c2) AND (((v0.c1)GLOB(v0.c2))))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((v0.c1)/(v0.c2))) BETWEEN (v0.c2) AND (((v0.c1)GLOB(v0.c2))))))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c1)/(v0.c2))) BETWEEN (v0.c2) AND (((v0.c1)GLOB(v0.c2))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0) AND ((v0.c1 IN ())))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0) BETWEEN (v0.c0) AND ((v0.c1 IN ())))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND ((v0.c1 IN ())))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0, v0.c2, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, v0.c2, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL v0.c0, v0.c2, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 WHERE (rt0.c0) GROUP BY v0.c0, v0.c2, rt0.c0, rt0.c1, rt0.c4 UNION SELECT ALL v0.c0, v0.c2, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 WHERE ((NOT (rt0.c0))) GROUP BY v0.c0, v0.c2, rt0.c0, rt0.c1, rt0.c4 UNION SELECT ALL v0.c0, v0.c2, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY v0.c0, v0.c2, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL v0.c0, v0.c2, rt0.c0, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, v0.c2, rt0.c0, rt0.c1, rt0.c4;
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c2 HAVING (((MAX(rt0.c4))) BETWEEN ((COUNT(*))) AND ((MIN(COUNT(*))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c2 HAVING (NOT ((((MAX(rt0.c4))) BETWEEN ((COUNT(*))) AND ((MIN(COUNT(*))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c2 HAVING (((((MAX(rt0.c4))) BETWEEN ((COUNT(*))) AND ((MIN(COUNT(*)))))) ISNULL);
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (v0.c0) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM v0, rt0 WHERE (((v0.c0) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT v0.c2, v0.c0 FROM v0;
SELECT DISTINCT v0.c2, v0.c0 FROM v0 WHERE (json_insert(((v0.c0)>>(v0.c1)), (((v0.c0, v0.c0, v0.c2)) BETWEEN ((v0.c0, v0.c0, v0.c2)) AND ((v0.c1, v0.c2, v0.c0))), CAST('-671875300' AS TEXT), ((340588160) NOT BETWEEN ('*y') AND (v0.c1)), v0.c0)) UNION SELECT DISTINCT v0.c2, v0.c0 FROM v0 WHERE ((NOT (json_insert(((v0.c0)>>(v0.c1)), (((v0.c0, v0.c0, v0.c2)) BETWEEN ((v0.c0, v0.c0, v0.c2)) AND ((v0.c1, v0.c2, v0.c0))), CAST('-671875300' AS TEXT), ((340588160) NOT BETWEEN ('*y') AND (v0.c1)), v0.c0)))) UNION SELECT DISTINCT v0.c2, v0.c0 FROM v0 WHERE (((json_insert(((v0.c0)>>(v0.c1)), (((v0.c0, v0.c0, v0.c2)) BETWEEN ((v0.c0, v0.c0, v0.c2)) AND ((v0.c1, v0.c2, v0.c0))), CAST('-671875300' AS TEXT), ((340588160) NOT BETWEEN ('*y') AND (v0.c1)), v0.c0)) ISNULL));
SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE (CASE WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) THEN ((((rt0.c2)AND(rt0.c4)))AND(rt0.c1)) END) GROUP BY rt0.c1, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) THEN ((((rt0.c2)AND(rt0.c4)))AND(rt0.c1)) END))) GROUP BY rt0.c1, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE (((CASE WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) THEN ((((rt0.c2)AND(rt0.c4)))AND(rt0.c1)) END) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c3, rt0.c0, rt0.c1, v0.c1, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, v0.c1, v0.c0, rt0.c4;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, v0.c1, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, v0.c1, v0.c0, rt0.c4 HAVING TOTAL((rt0.c1 IN ())) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, v0.c1, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, v0.c1, v0.c0, rt0.c4 HAVING (NOT (TOTAL((rt0.c1 IN ())))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, v0.c1, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, v0.c1, v0.c0, rt0.c4 HAVING ((TOTAL((rt0.c1 IN ()))) ISNULL);
SELECT rt0.c3, rt0.c0, rt0.c1, v0.c1, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, v0.c1, v0.c0, rt0.c4;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, v0.c1, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, v0.c1, v0.c0, rt0.c4 HAVING TOTAL((rt0.c1 IN ())) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, v0.c1, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, v0.c1, v0.c0, rt0.c4 HAVING (NOT (TOTAL((rt0.c1 IN ())))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, v0.c1, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, v0.c1, v0.c0, rt0.c4 HAVING ((TOTAL((rt0.c1 IN ()))) ISNULL);
SELECT rt0.c3, rt0.c0, rt0.c1, v0.c1, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, v0.c1, v0.c0, rt0.c4;
SELECT ALL MIN(((NULLIF(v0.c2, v0.c2))IS NOT((v0.c0 IN ())))) FROM v0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0))<=((rt0.c1))) COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c0))<=((rt0.c1))) COLLATE RTRIM))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c0))<=((rt0.c1))) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c0, v0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c3, rt0.c0, v0.c1 FROM v0, rt0 WHERE (NULL) UNION SELECT DISTINCT rt0.c3, rt0.c0, v0.c1 FROM v0, rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c3, rt0.c0, v0.c1 FROM v0, rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0, v0.c1 FROM v0, rt0;
SELECT rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4;
SELECT rt0.c1, rt0.c4 FROM v0, rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 WHEN v0.c2 THEN rt0.c0 WHEN rt0.c4 THEN v0.c1 END)OR(((rt0.c4) BETWEEN (v0.c1) AND (rt0.c3)))))AND(((v0.c2) ISNULL)))) GROUP BY rt0.c1, rt0.c4 UNION SELECT rt0.c1, rt0.c4 FROM v0, rt0 WHERE ((NOT (((((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 WHEN v0.c2 THEN rt0.c0 WHEN rt0.c4 THEN v0.c1 END)OR(((rt0.c4) BETWEEN (v0.c1) AND (rt0.c3)))))AND(((v0.c2) ISNULL)))))) GROUP BY rt0.c1, rt0.c4 UNION SELECT rt0.c1, rt0.c4 FROM v0, rt0 WHERE (((((((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 WHEN v0.c2 THEN rt0.c0 WHEN rt0.c4 THEN v0.c1 END)OR(((rt0.c4) BETWEEN (v0.c1) AND (rt0.c3)))))AND(((v0.c2) ISNULL)))) ISNULL)) GROUP BY rt0.c1, rt0.c4;
SELECT rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((((((TOTAL(rt0.c3))AND(GROUP_CONCAT(rt0.c1))))AND(MAX(GROUP_CONCAT(rt0.c3)))))OR((((1133974772))<((rt0.c3))))))AND(rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (((((((((TOTAL(rt0.c3))AND(GROUP_CONCAT(rt0.c1))))AND(MAX(GROUP_CONCAT(rt0.c3)))))OR((((1133974772))<((rt0.c3))))))AND(rt0.c1)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((((((((TOTAL(rt0.c3))AND(GROUP_CONCAT(rt0.c1))))AND(MAX(GROUP_CONCAT(rt0.c3)))))OR((((1133974772))<((rt0.c3))))))AND(rt0.c1))) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0;
SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE (((((((((CAST(rt0.c1 AS INTEGER))OR(((rt0.c0)%(rt0.c0)))))OR(x'' COLLATE BINARY)))AND(x'')))OR(((rt0.c1)|(rt0.c2))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT (((((((((CAST(rt0.c1 AS INTEGER))OR(((rt0.c0)%(rt0.c0)))))OR(x'' COLLATE BINARY)))AND(x'')))OR(((rt0.c1)|(rt0.c2))))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE (((((((((((CAST(rt0.c1 AS INTEGER))OR(((rt0.c0)%(rt0.c0)))))OR(x'' COLLATE BINARY)))AND(x'')))OR(((rt0.c1)|(rt0.c2))))) ISNULL));
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(rt0.c3 AS BLOB) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(rt0.c3 AS BLOB) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c3 AS BLOB) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c1, v0.c2, rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY v0.c1, v0.c2, rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c3;
SELECT ALL v0.c1, v0.c2, rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c3 FROM rt0, v0 WHERE ((+ (((rt0.c0) IS TRUE)))) GROUP BY v0.c1, v0.c2, rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c3 UNION SELECT v0.c1, v0.c2, rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c3 FROM rt0, v0 WHERE ((NOT ((+ (((rt0.c0) IS TRUE)))))) GROUP BY v0.c1, v0.c2, rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c3 UNION SELECT v0.c1, v0.c2, rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c3 FROM rt0, v0 WHERE ((((+ (((rt0.c0) IS TRUE)))) ISNULL)) GROUP BY v0.c1, v0.c2, rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c3;
SELECT v0.c1, v0.c2, rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY v0.c1, v0.c2, rt0.c2, rt0.c4, v0.c0, rt0.c0, rt0.c3;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING MAX(MIN(v0.c0, v0.c2)) UNION ALL SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (NOT (MAX(MIN(v0.c0, v0.c2)))) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING ((MAX(MIN(v0.c0, v0.c2))) ISNULL);
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING MAX(MIN(v0.c0, v0.c2)) UNION ALL SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (NOT (MAX(MIN(v0.c0, v0.c2)))) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING ((MAX(MIN(v0.c0, v0.c2))) ISNULL);
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT rt0.c1, rt0.c3 FROM rt0;
SELECT rt0.c1, rt0.c3 FROM rt0 WHERE (rt0.c4) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (rt0.c4))) UNION ALL SELECT rt0.c1, rt0.c3 FROM rt0 WHERE (((rt0.c4) ISNULL));
SELECT rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END  WHEN ((rt0.c2)*(rt0.c3)) THEN (- (rt0.c3)) WHEN (NOT (rt0.c3)) THEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)) WHEN rt0.c3 THEN (rt0.c0 IN ()) ELSE ((rt0.c4) NOT BETWEEN ('U#') AND (rt0.c4)) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END  WHEN ((rt0.c2)*(rt0.c3)) THEN (- (rt0.c3)) WHEN (NOT (rt0.c3)) THEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)) WHEN rt0.c3 THEN (rt0.c0 IN ()) ELSE ((rt0.c4) NOT BETWEEN ('U#') AND (rt0.c4)) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END  WHEN ((rt0.c2)*(rt0.c3)) THEN (- (rt0.c3)) WHEN (NOT (rt0.c3)) THEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)) WHEN rt0.c3 THEN (rt0.c0 IN ()) ELSE ((rt0.c4) NOT BETWEEN ('U#') AND (rt0.c4)) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((((((rt0.c1 IN ()))AND(CAST(rt0.c0 AS INTEGER))))OR((((rt0.c1))>=(('1424865702')))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c1 IN ()))AND(CAST(rt0.c0 AS INTEGER))))OR((((rt0.c1))>=(('1424865702')))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((((((rt0.c1 IN ()))AND(CAST(rt0.c0 AS INTEGER))))OR((((rt0.c1))>=(('1424865702')))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c2, v0.c2, v0.c1, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2, v0.c2, v0.c1, rt0.c3, rt0.c4;
SELECT rt0.c1, rt0.c0, v0.c0, rt0.c2, v0.c2, v0.c1, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2, v0.c2, v0.c1, rt0.c3, rt0.c4 HAVING CASE WHEN (COUNT(v0.c0) IN ()) THEN COUNT(*) ELSE MAX(AVG(MAX(COUNT(*)))) END UNION ALL SELECT rt0.c1, rt0.c0, v0.c0, rt0.c2, v0.c2, v0.c1, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2, v0.c2, v0.c1, rt0.c3, rt0.c4 HAVING (NOT (CASE WHEN (COUNT(v0.c0) IN ()) THEN COUNT(*) ELSE MAX(AVG(MAX(COUNT(*)))) END)) UNION ALL SELECT rt0.c1, rt0.c0, v0.c0, rt0.c2, v0.c2, v0.c1, rt0.c3, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2, v0.c2, v0.c1, rt0.c3, rt0.c4 HAVING ((CASE WHEN (COUNT(v0.c0) IN ()) THEN COUNT(*) ELSE MAX(AVG(MAX(COUNT(*)))) END) ISNULL);
SELECT ALL rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE ((((((((((NOT (rt0.c4)))AND(CASE WHEN 0.8977342213941745 THEN rt0.c4 ELSE rt0.c1 END)))AND(((NULL) NOT NULL))))OR(rt0.c2 COLLATE BINARY)))AND(((rt0.c3) NOTNULL)))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT ((((((((((NOT (rt0.c4)))AND(CASE WHEN 0.8977342213941745 THEN rt0.c4 ELSE rt0.c1 END)))AND(((NULL) NOT NULL))))OR(rt0.c2 COLLATE BINARY)))AND(((rt0.c3) NOTNULL)))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((((((((((((NOT (rt0.c4)))AND(CASE WHEN 0.8977342213941745 THEN rt0.c4 ELSE rt0.c1 END)))AND(((NULL) NOT NULL))))OR(rt0.c2 COLLATE BINARY)))AND(((rt0.c3) NOTNULL)))) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c4 FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT rt0.c4 FROM rt0 NATURAL JOIN v0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c4 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c4 FROM rt0 NATURAL JOIN v0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c4 FROM rt0 NATURAL JOIN v0;
SELECT ALL v0.c2, rt0.c1, rt0.c2, v0.c1 FROM v0, rt0 GROUP BY v0.c2, rt0.c1, rt0.c2, v0.c1;
SELECT ALL v0.c2, rt0.c1, rt0.c2, v0.c1 FROM v0, rt0 WHERE ((((- (rt0.c3))) BETWEEN (((rt0.c0)==(v0.c1))) AND (((rt0.c0)>=(-1314134241))))) GROUP BY v0.c2, rt0.c1, rt0.c2, v0.c1 UNION SELECT v0.c2, rt0.c1, rt0.c2, v0.c1 FROM v0, rt0 WHERE ((NOT ((((- (rt0.c3))) BETWEEN (((rt0.c0)==(v0.c1))) AND (((rt0.c0)>=(-1314134241))))))) GROUP BY v0.c2, rt0.c1, rt0.c2, v0.c1 UNION SELECT v0.c2, rt0.c1, rt0.c2, v0.c1 FROM v0, rt0 WHERE ((((((- (rt0.c3))) BETWEEN (((rt0.c0)==(v0.c1))) AND (((rt0.c0)>=(-1314134241))))) ISNULL)) GROUP BY v0.c2, rt0.c1, rt0.c2, v0.c1;
SELECT ALL v0.c2, rt0.c1, rt0.c2, v0.c1 FROM v0, rt0 GROUP BY v0.c2, rt0.c1, rt0.c2, v0.c1;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT v0.c1 FROM v0;
SELECT v0.c1 FROM v0 WHERE (((NULL) IS TRUE)) UNION ALL SELECT v0.c1 FROM v0 WHERE ((NOT (((NULL) IS TRUE)))) UNION ALL SELECT v0.c1 FROM v0 WHERE (((((NULL) IS TRUE)) ISNULL));
SELECT v0.c1 FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((((rt0.c0)-(v0.c1))) IS FALSE)) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((((rt0.c0)-(v0.c1))) IS FALSE)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((((rt0.c0)-(v0.c1))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 WHERE ((((((v0.c2, v0.c1, v0.c2)) BETWEEN ((v0.c0, v0.c2, v0.c1)) AND ((v0.c1, v0.c0, v0.c2))))-(((v0.c2)AND(v0.c2))))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0 WHERE ((NOT ((((((v0.c2, v0.c1, v0.c2)) BETWEEN ((v0.c0, v0.c2, v0.c1)) AND ((v0.c1, v0.c0, v0.c2))))-(((v0.c2)AND(v0.c2))))))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0 WHERE ((((((((v0.c2, v0.c1, v0.c2)) BETWEEN ((v0.c0, v0.c2, v0.c1)) AND ((v0.c1, v0.c0, v0.c2))))-(((v0.c2)AND(v0.c2))))) ISNULL)) GROUP BY v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL rt0.c2, rt0.c4, v0.c2 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, v0.c2;
SELECT ALL rt0.c2, rt0.c4, v0.c2 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, v0.c2 HAVING MAX(NULLIF(DISTINCT COUNT(NULL), MAX(TOTAL(MIN(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c4, v0.c2 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, v0.c2 HAVING (NOT (MAX(NULLIF(DISTINCT COUNT(NULL), MAX(TOTAL(MIN(rt0.c1))))))) UNION ALL SELECT ALL rt0.c2, rt0.c4, v0.c2 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, v0.c2 HAVING ((MAX(NULLIF(DISTINCT COUNT(NULL), MAX(TOTAL(MIN(rt0.c1)))))) ISNULL);
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c0 IN ()) IN ())) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (((rt0.c0 IN ()) IN ())))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c0 IN ()) IN ())) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((- (v0.c0)))=(CASE WHEN v0.c2 THEN v0.c1 WHEN 0.6145814238989699 THEN v0.c1 WHEN v0.c1 THEN v0.c1 END))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((- (v0.c0)))==(CASE WHEN v0.c2 THEN v0.c1 WHEN 0.6145814238989699 THEN v0.c1 WHEN v0.c1 THEN v0.c1 END))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((- (v0.c0)))==(CASE WHEN v0.c2 THEN v0.c1 WHEN 0.6145814238989699 THEN v0.c1 WHEN v0.c1 THEN v0.c1 END))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE ('') GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((NOT (''))) GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((('') ISNULL)) GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING ((CASE WHEN v0.c1 THEN COUNT(*) END) NOT BETWEEN (SUM(v0.c2)) AND (COUNT(COUNT(*)))) UNION ALL SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING (NOT (((CASE WHEN v0.c1 THEN COUNT(*) END) NOT BETWEEN (SUM(v0.c2)) AND (COUNT(COUNT(*)))))) UNION ALL SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING ((((CASE WHEN v0.c1 THEN COUNT(*) END) NOT BETWEEN (SUM(v0.c2)) AND (COUNT(COUNT(*))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (load_extension((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (load_extension((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))))))) UNION ALL SELECT * FROM rt0 WHERE (((load_extension((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c2, rt0.c4, rt0.c1, v0.c2, rt0.c0, rt0.c3, v0.c1 FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN rt0.c4 THEN v0.c1 COLLATE NOCASE WHEN ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)) THEN v0.c1 COLLATE RTRIM WHEN (- (v0.c2)) THEN CAST(v0.c0 AS BLOB) ELSE CASE WHEN rt0.c3 THEN v0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END END GROUP BY rt0.c2, rt0.c4, rt0.c1, v0.c2, rt0.c0, rt0.c3, v0.c1;
SELECT ALL rt0.c2, rt0.c4, rt0.c1, v0.c2, rt0.c0, rt0.c3, v0.c1 FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN rt0.c4 THEN v0.c1 COLLATE NOCASE WHEN ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)) THEN v0.c1 COLLATE RTRIM WHEN (- (v0.c2)) THEN CAST(v0.c0 AS BLOB) ELSE CASE WHEN rt0.c3 THEN v0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END END WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c4 END AS INTEGER)) GROUP BY rt0.c2, rt0.c4, rt0.c1, v0.c2, rt0.c0, rt0.c3, v0.c1 UNION SELECT rt0.c2, rt0.c4, rt0.c1, v0.c2, rt0.c0, rt0.c3, v0.c1 FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN rt0.c4 THEN v0.c1 COLLATE NOCASE WHEN ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)) THEN v0.c1 COLLATE RTRIM WHEN (- (v0.c2)) THEN CAST(v0.c0 AS BLOB) ELSE CASE WHEN rt0.c3 THEN v0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END END WHERE ((NOT (CAST(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c4 END AS INTEGER)))) GROUP BY rt0.c2, rt0.c4, rt0.c1, v0.c2, rt0.c0, rt0.c3, v0.c1 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c1, v0.c2, rt0.c0, rt0.c3, v0.c1 FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN rt0.c4 THEN v0.c1 COLLATE NOCASE WHEN ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)) THEN v0.c1 COLLATE RTRIM WHEN (- (v0.c2)) THEN CAST(v0.c0 AS BLOB) ELSE CASE WHEN rt0.c3 THEN v0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END END WHERE (((CAST(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c4 END AS INTEGER)) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c1, v0.c2, rt0.c0, rt0.c3, v0.c1;
SELECT rt0.c2, rt0.c4, rt0.c1, v0.c2, rt0.c0, rt0.c3, v0.c1 FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN rt0.c4 THEN v0.c1 COLLATE NOCASE WHEN ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)) THEN v0.c1 COLLATE RTRIM WHEN (- (v0.c2)) THEN CAST(v0.c0 AS BLOB) ELSE CASE WHEN rt0.c3 THEN v0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END END GROUP BY rt0.c2, rt0.c4, rt0.c1, v0.c2, rt0.c0, rt0.c3, v0.c1;
SELECT v0.c1, rt0.c0, rt0.c3, v0.c2, v0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c1, rt0.c0, rt0.c3, v0.c2, v0.c0, rt0.c1, rt0.c4, rt0.c2;
SELECT ALL v0.c1, rt0.c0, rt0.c3, v0.c2, v0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c1, rt0.c0, rt0.c3, v0.c2, v0.c0, rt0.c1, rt0.c4, rt0.c2 HAVING MIN(0Xffffffffea39f712) UNION ALL SELECT v0.c1, rt0.c0, rt0.c3, v0.c2, v0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c1, rt0.c0, rt0.c3, v0.c2, v0.c0, rt0.c1, rt0.c4, rt0.c2 HAVING (NOT (MIN(0xffffffffea39f712))) UNION ALL SELECT v0.c1, rt0.c0, rt0.c3, v0.c2, v0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c1, rt0.c0, rt0.c3, v0.c2, v0.c0, rt0.c1, rt0.c4, rt0.c2 HAVING ((MIN(0xffffffffea39f712)) ISNULL);
SELECT v0.c1, rt0.c0, rt0.c3, v0.c2, v0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c1, rt0.c0, rt0.c3, v0.c2, v0.c0, rt0.c1, rt0.c4, rt0.c2;
SELECT ALL v0.c1, rt0.c0, rt0.c3, v0.c2, v0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c1, rt0.c0, rt0.c3, v0.c2, v0.c0, rt0.c1, rt0.c4, rt0.c2 HAVING MIN(0Xffffffffea39f712) UNION ALL SELECT v0.c1, rt0.c0, rt0.c3, v0.c2, v0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c1, rt0.c0, rt0.c3, v0.c2, v0.c0, rt0.c1, rt0.c4, rt0.c2 HAVING (NOT (MIN(0xffffffffea39f712))) UNION ALL SELECT v0.c1, rt0.c0, rt0.c3, v0.c2, v0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c1, rt0.c0, rt0.c3, v0.c2, v0.c0, rt0.c1, rt0.c4, rt0.c2 HAVING ((MIN(0xffffffffea39f712)) ISNULL);
SELECT v0.c1, rt0.c0, rt0.c3, v0.c2, v0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0 NATURAL JOIN v0 GROUP BY v0.c1, rt0.c0, rt0.c3, v0.c2, v0.c0, rt0.c1, rt0.c4, rt0.c2;
SELECT ALL v0.c2 FROM v0, rt0;
SELECT v0.c2 FROM v0, rt0 WHERE (v0.c2) UNION ALL SELECT ALL v0.c2 FROM v0, rt0 WHERE ((NOT (v0.c2))) UNION ALL SELECT ALL v0.c2 FROM v0, rt0 WHERE (((v0.c2) ISNULL));
SELECT ALL v0.c2 FROM v0, rt0;
SELECT DISTINCT v0.c1, rt0.c3, v0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0;
SELECT DISTINCT v0.c1, rt0.c3, v0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (((((v0.c0)+(v0.c1))) NOT BETWEEN (((v0.c1) BETWEEN (x'') AND (rt0.c4))) AND (rt0.c0))) UNION SELECT DISTINCT v0.c1, rt0.c3, v0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (((((v0.c0)+(v0.c1))) NOT BETWEEN (((v0.c1) BETWEEN (x'') AND (rt0.c4))) AND (rt0.c0))))) UNION SELECT DISTINCT v0.c1, rt0.c3, v0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (((((((v0.c0)+(v0.c1))) NOT BETWEEN (((v0.c1) BETWEEN (x'') AND (rt0.c4))) AND (rt0.c0))) ISNULL));
SELECT DISTINCT v0.c1, rt0.c3, v0.c2, v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE (CAST(((((v0.c0)OR(v0.c2)))AND(v0.c1)) AS TEXT)) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT (CAST(((((v0.c0)OR(v0.c2)))AND(v0.c1)) AS TEXT)))) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE (((CAST(((((v0.c0)OR(v0.c2)))AND(v0.c1)) AS TEXT)) ISNULL)) GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4 HAVING COUNT((((rt0.c1))>((MIN(TOTAL(AVG(rt0.c1))))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4 HAVING (NOT (COUNT((((rt0.c1))>((MIN(TOTAL(AVG(rt0.c1))))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4 HAVING ((COUNT((((rt0.c1))>((MIN(TOTAL(AVG(rt0.c1)))))))) ISNULL);
SELECT ALL rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))==((NULL)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))=((NULL)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))==((NULL)))) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
