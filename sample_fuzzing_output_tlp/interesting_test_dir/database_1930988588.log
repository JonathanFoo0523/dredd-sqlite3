-- Time: 2024/06/11 04:40:03
-- Database: database88
-- Database version: 3.40.0
-- seed value: 1930988588
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE TABLE t0 (c0 TEXT ); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (''); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i3 ON t0((0.7194824296084212 IN ()) COLLATE BINARY) WHERE ((CHAR(c0, c0, NULL)) ISNULL); -- 0ms;
ANALYZE; -- 0ms;
END; -- 0ms;
INSERT OR FAIL INTO t0 VALUES (NULL), (NULL), ('-12079096'); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i89 ON t0(x'') WHERE CAST(CAST(c0 AS NUMERIC) AS REAL); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x''); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0Xffffffffff47b008), (x''), ('-793864433'); -- 1ms;
ALTER TABLE t0 ADD COLUMN c94 INTEGER; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES (x''), (x'9df7'), (0.7194824296084212); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '40822'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 8463719); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -12079096);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
INSERT OR IGNORE INTO t1(c0, c94) VALUES (NULL, '\1X*7v'); -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (0.0038604297523565645), (0.5273046408157985), (x''), (x''), ('6Ojhx*BH'); -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES ('vJ'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 524258980); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 9ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
CREATE UNIQUE INDEX i56 ON t1(((((c94 COLLATE NOCASE)OR((c94 IN (c0, NULL, c0)))))OR(TRIM(c94, c0))) ASC,(((CASE c0  WHEN NULL THEN c94 END, ((c0)<=(c0)), CAST(c94 AS INTEGER)))<=((x'2a6fc08c', c0 COLLATE NOCASE, CASE WHEN c0 THEN c94 WHEN c94 THEN c0 WHEN c0 THEN c0 WHEN c94 THEN c94 WHEN c0 THEN NULL END))) COLLATE BINARY DESC); -- 0ms;
INSERT OR FAIL INTO t1(c94, c0) VALUES (0Xffffffff847e99f1, -947455348); -- 0ms;
INSERT OR ROLLBACK INTO t1(c94) VALUES (0.8046279311293323); -- 0ms;
INSERT OR FAIL INTO t1(c94) VALUES ('-793864433'), (0.22090067041145145), ('-793864433'); -- 0ms;
INSERT OR REPLACE INTO t1(c0) VALUES (((((NULL)/(0.37028396328307167))) BETWEEN (COALESCE('-2072077839', '-793864433')) AND ((NULL IN ())))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (NULL); -- 0ms;
REINDEX i56; -- 1ms;
INSERT OR FAIL INTO t1(c0) VALUES (x'00d1'); -- 1ms;
END; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL); -- 1ms;
DELETE FROM vt1 WHERE ((((vt1.c0) IS FALSE))==(SQLITE_COMPILEOPTION_GET('-1206764572'))); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (x'', NULL), ('-2072077839', 0.7970870284098818), (x'', NULL); -- 0ms;
REINDEX i3; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (''); -- 1ms;
INSERT OR IGNORE INTO t1(c0, c94) VALUES (x'', x''); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (x'', NULL); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1 UNINDEXED); -- 9ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x'a4690695'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '2168'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
REINDEX  vt1; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO t1(c0, c94) VALUES ('', 'h5ᓨdHJ[]'); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL), ('-1669264581'), (''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT OR FAIL INTO rt0(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 0ms;
DROP TABLE t1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)&(NULL)))GLOB(((NULL) BETWEEN (2090905458) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (NULL); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 438111203); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (-1.2079096E7, '?x6 <'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-194065087,9');\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES ('-2072077839'), ('6Ojhx*BH'), ('p-'), (x''), (x'5c23'); -- 1ms;
END; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0, vt0;
SELECT rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0, vt0 WHERE (CAST(((vt1.c0) IS FALSE) AS INTEGER)) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0, vt0 WHERE ((NOT (CAST(((vt1.c0) IS FALSE) AS INTEGER)))) UNION ALL SELECT rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0, vt0 WHERE (((CAST(((vt1.c0) IS FALSE) AS INTEGER)) ISNULL));
SELECT ALL rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CASE WHEN (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN (- (rt0.c0)) ELSE LIKELY(DISTINCT vt1.c0) END;
SELECT DISTINCT * FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CASE WHEN (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN (- (rt0.c0)) ELSE LIKELY(DISTINCT vt1.c0) END WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CASE WHEN (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN (- (rt0.c0)) ELSE LIKELY(DISTINCT vt1.c0) END WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CASE WHEN (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN (- (rt0.c0)) ELSE LIKELY(DISTINCT vt1.c0) END WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CASE WHEN (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN (- (rt0.c0)) ELSE LIKELY(DISTINCT vt1.c0) END;
SELECT ALL rt0.c1, vt0.c1, rt0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c1, vt0.c1, rt0.c0, vt0.c0, vt1.c0;
SELECT ALL rt0.c1, vt0.c1, rt0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, rt0 WHERE (((CASE WHEN vt0.c1 THEN rt0.c0 END) NOT BETWEEN (((rt0.c2)IS(rt0.c1))) AND (CAST(rt0.c0 AS TEXT)))) GROUP BY rt0.c1, vt0.c1, rt0.c0, vt0.c0, vt1.c0 UNION SELECT rt0.c1, vt0.c1, rt0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, rt0 WHERE ((NOT (((CASE WHEN vt0.c1 THEN rt0.c0 END) NOT BETWEEN (((rt0.c2)IS(rt0.c1))) AND (CAST(rt0.c0 AS TEXT)))))) GROUP BY rt0.c1, vt0.c1, rt0.c0, vt0.c0, vt1.c0 UNION SELECT ALL rt0.c1, vt0.c1, rt0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, rt0 WHERE (((((CASE WHEN vt0.c1 THEN rt0.c0 END) NOT BETWEEN (((rt0.c2)IS(rt0.c1))) AND (CAST(rt0.c0 AS TEXT)))) ISNULL)) GROUP BY rt0.c1, vt0.c1, rt0.c0, vt0.c0, vt1.c0;
SELECT ALL rt0.c1, vt0.c1, rt0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c1, vt0.c1, rt0.c0, vt0.c0, vt1.c0;
SELECT ALL vt1.c0, rt0.c2, vt0.c1 FROM vt0, rt0 INNER JOIN vt1 ON ((((vt1.c0) NOTNULL)) IS TRUE) GROUP BY vt1.c0, rt0.c2, vt0.c1;
SELECT ALL vt1.c0, rt0.c2, vt0.c1 FROM vt0, rt0 INNER JOIN vt1 ON ((((vt1.c0) NOTNULL)) IS TRUE) GROUP BY vt1.c0, rt0.c2, vt0.c1 HAVING TOTAL(((((rt0.c0)OR(SUM(rt0.c2))))OR(MAX(rt0.c2)))) UNION ALL SELECT ALL vt1.c0, rt0.c2, vt0.c1 FROM vt0, rt0 INNER JOIN vt1 ON ((((vt1.c0) NOTNULL)) IS TRUE) GROUP BY vt1.c0, rt0.c2, vt0.c1 HAVING (NOT (TOTAL(((((rt0.c0)OR(SUM(rt0.c2))))OR(MAX(rt0.c2)))))) UNION ALL SELECT vt1.c0, rt0.c2, vt0.c1 FROM vt0, rt0 INNER JOIN vt1 ON ((((vt1.c0) NOTNULL)) IS TRUE) GROUP BY vt1.c0, rt0.c2, vt0.c1 HAVING ((TOTAL(((((rt0.c0)OR(SUM(rt0.c2))))OR(MAX(rt0.c2))))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0)>>(vt1.c0))) NOT BETWEEN (((vt1.c0)|(vt1.c0))) AND (((NULL) BETWEEN (vt1.c0) AND (vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)>>(vt1.c0))) NOT BETWEEN (((vt1.c0)|(vt1.c0))) AND (((NULL) BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)>>(vt1.c0))) NOT BETWEEN (((vt1.c0)|(vt1.c0))) AND (((NULL) BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))LIKE(rt0.c1))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT ((((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))LIKE(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((((((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))LIKE(rt0.c1))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE BINARY COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((vt1.c0 IN ()) COLLATE BINARY COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ()) COLLATE BINARY COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING vt0.c1 UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (vt0.c1)) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((vt0.c1) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING vt0.c1 UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (vt0.c1)) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((vt0.c1) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL MAX(((NULL) NOT NULL)) FROM rt0, vt1, vt0 ORDER BY NULLIF(DISTINCT ((vt0.c1)<=(rt0.c1)), ((((rt0.c0)AND(vt1.c0)))OR(vt0.c0)));
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (x'c028') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (x'c028'))) UNION ALL SELECT * FROM rt0 WHERE (((x'c028') ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt1, rt0 WHERE ((+ (((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT ((+ (((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM vt1, rt0 WHERE ((((+ (((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt1, rt0;
SELECT ALL vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt1, vt0 WHERE ((((vt0.c1 IN (vt0.c0, vt0.c1)))LIKE(((vt1.c0) IS TRUE)))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt1, vt0 WHERE ((NOT ((((vt0.c1 IN (vt0.c0, vt0.c1)))LIKE(((vt1.c0) IS TRUE)))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt1, vt0 WHERE ((((((vt0.c1 IN (vt0.c0, vt0.c1)))LIKE(((vt1.c0) IS TRUE)))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING AVG(((((((((MIN(COUNT(vt0.c1)))AND(x'')))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c1))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (AVG(((((((((MIN(COUNT(vt0.c1)))AND(x'')))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c1))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((AVG(((((((((MIN(COUNT(vt0.c1)))AND(x'')))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c1)))) ISNULL);
SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0;
SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE (CASE WHEN CAST(NULL AS NUMERIC) THEN (((rt0.c2))!=((rt0.c1))) WHEN ((x'') NOT BETWEEN (rt0.c0) AND (NULL)) THEN ((rt0.c1)==(rt0.c0)) WHEN ((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c1)) THEN rt0.c2 COLLATE NOCASE ELSE ((((rt0.c1)AND(rt0.c2)))AND(vt1.c0)) END) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE ((NOT (CASE WHEN CAST(NULL AS NUMERIC) THEN (((rt0.c2))!=((rt0.c1))) WHEN ((x'') NOT BETWEEN (rt0.c0) AND (NULL)) THEN ((rt0.c1)=(rt0.c0)) WHEN ((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c1)) THEN rt0.c2 COLLATE NOCASE ELSE ((((rt0.c1)AND(rt0.c2)))AND(vt1.c0)) END))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE (((CASE WHEN CAST(NULL AS NUMERIC) THEN (((rt0.c2))!=((rt0.c1))) WHEN ((x'') NOT BETWEEN (rt0.c0) AND (NULL)) THEN ((rt0.c1)==(rt0.c0)) WHEN ((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c1)) THEN rt0.c2 COLLATE NOCASE ELSE ((((rt0.c1)AND(rt0.c2)))AND(vt1.c0)) END) ISNULL));
SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (CAST(((rt0.c0)IS(rt0.c2)) AS NUMERIC)) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST(((rt0.c0)IS(rt0.c2)) AS NUMERIC)))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(((rt0.c0)IS(rt0.c2)) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (HEX((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((0.7561142587316982, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (HEX((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((0.7561142587316982, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((HEX((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((0.7561142587316982, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c0 FROM vt1, vt0 CROSS JOIN rt0 ON ((CASE vt0.c1  WHEN 0.6296823643708365 THEN vt1.c0 ELSE rt0.c2 END)<=(vt0.c0 COLLATE BINARY)) GROUP BY vt1.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c0;
SELECT vt1.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c0 FROM vt1, vt0 CROSS JOIN rt0 ON ((CASE vt0.c1  WHEN 0.6296823643708365 THEN vt1.c0 ELSE rt0.c2 END)<=(vt0.c0 COLLATE BINARY)) GROUP BY vt1.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c0 HAVING TOTAL(((TOTAL(GROUP_CONCAT(MIN(vt0.c1))))+(TOTAL(vt1.c0)))) UNION ALL SELECT ALL vt1.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c0 FROM vt1, vt0 CROSS JOIN rt0 ON ((CASE vt0.c1  WHEN 0.6296823643708365 THEN vt1.c0 ELSE rt0.c2 END)<=(vt0.c0 COLLATE BINARY)) GROUP BY vt1.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c0 HAVING (NOT (TOTAL(((TOTAL(GROUP_CONCAT(MIN(vt0.c1))))+(TOTAL(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c0 FROM vt1, vt0 CROSS JOIN rt0 ON ((CASE vt0.c1  WHEN 0.6296823643708365 THEN vt1.c0 ELSE rt0.c2 END)<=(vt0.c0 COLLATE BINARY)) GROUP BY vt1.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c0 HAVING ((TOTAL(((TOTAL(GROUP_CONCAT(MIN(vt0.c1))))+(TOTAL(vt1.c0))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c1) BETWEEN (x'14acf8e6') AND (0Xfffffffff045d14e))) IS FALSE)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c1) BETWEEN (x'14acf8e6') AND (0Xfffffffff045d14e))) IS FALSE)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c1) BETWEEN (x'14acf8e6') AND (0xfffffffff045d14e))) IS FALSE)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c1, rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT vt0.c1, rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE (CASE NULL  WHEN ((rt0.c1)LIKE(vt0.c1)) THEN (+ (rt0.c0)) ELSE '2090905458' END) UNION SELECT DISTINCT vt0.c1, rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (CASE NULL  WHEN ((rt0.c1)LIKE(vt0.c1)) THEN (+ (rt0.c0)) ELSE '2090905458' END))) UNION SELECT DISTINCT vt0.c1, rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((CASE NULL  WHEN ((rt0.c1)LIKE(vt0.c1)) THEN (+ (rt0.c0)) ELSE '2090905458' END) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0, vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(LOWER(DISTINCT vt0.c0))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (SQLITE_COMPILEOPTION_USED(LOWER(DISTINCT vt0.c0))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((SQLITE_COMPILEOPTION_USED(LOWER(DISTINCT vt0.c0))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL rt0.c1, vt0.c1, vt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c1, vt0.c1, vt0.c0;
SELECT ALL rt0.c1, vt0.c1, vt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c1, vt0.c1, vt0.c0 HAVING SUM(COUNT(rt0.c0)) UNION ALL SELECT rt0.c1, vt0.c1, vt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c1, vt0.c1, vt0.c0 HAVING (NOT (SUM(COUNT(rt0.c0)))) UNION ALL SELECT ALL rt0.c1, vt0.c1, vt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c1, vt0.c1, vt0.c0 HAVING ((SUM(COUNT(rt0.c0))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((((((((rt0.c2 IN (rt0.c0, rt0.c2)))OR(LIKELY(DISTINCT rt0.c2))))OR(((rt0.c0)+(rt0.c1)))))AND(((rt0.c0) ISNULL))))AND(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((((((((rt0.c2 IN (rt0.c0, rt0.c2)))OR(LIKELY(DISTINCT rt0.c2))))OR(((rt0.c0)+(rt0.c1)))))AND(((rt0.c0) ISNULL))))AND(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((((((((rt0.c2 IN (rt0.c0, rt0.c2)))OR(LIKELY(DISTINCT rt0.c2))))OR(((rt0.c0)+(rt0.c1)))))AND(((rt0.c0) ISNULL))))AND(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0 WHERE (((vt0.c0)LIKE(LIKELY(vt0.c1)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0 WHERE ((NOT (((vt0.c0)LIKE(LIKELY(vt0.c1)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0 WHERE (((((vt0.c0)LIKE(LIKELY(vt0.c1)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, vt0.c0, rt0.c2, vt0.c1 FROM rt0, vt0;
SELECT vt1.c0 FROM vt1, rt0, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, rt0, vt0 WHERE ((((((vt0.c0, vt1.c0, vt0.c1)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((vt0.c0, rt0.c0, rt0.c2))))>(CASE WHEN rt0.c0 THEN vt0.c0 END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, rt0, vt0 WHERE ((NOT ((((((vt0.c0, vt1.c0, vt0.c1)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((vt0.c0, rt0.c0, rt0.c2))))>(CASE WHEN rt0.c0 THEN vt0.c0 END))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, rt0, vt0 WHERE ((((((((vt0.c0, vt1.c0, vt0.c1)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((vt0.c0, rt0.c0, rt0.c2))))>(CASE WHEN rt0.c0 THEN vt0.c0 END))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, rt0, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0 HAVING ((((CAST(MIN(vt0.c0) AS REAL))AND(((((COUNT(*))OR(vt1.c0)))AND(0.7194824296084212)))))AND((- (SUM(GROUP_CONCAT(rt0.c2)))))) UNION ALL SELECT vt1.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0 HAVING (NOT (((((CAST(MIN(vt0.c0) AS REAL))AND(((((COUNT(*))OR(vt1.c0)))AND(0.7194824296084212)))))AND((- (SUM(GROUP_CONCAT(rt0.c2)))))))) UNION ALL SELECT vt1.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0 HAVING ((((((CAST(MIN(vt0.c0) AS REAL))AND(((((COUNT(*))OR(vt1.c0)))AND(0.7194824296084212)))))AND((- (SUM(GROUP_CONCAT(rt0.c2))))))) ISNULL);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((CASE vt1.c0  WHEN vt0.c0 THEN '-194065087' END)*('-194065087')) LEFT OUTER JOIN rt0 ON CAST(CASE vt1.c0  WHEN x'' THEN vt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN '-263859890' THEN vt1.c0 ELSE '-947455348' END AS BLOB);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((CASE vt1.c0  WHEN vt0.c0 THEN '-194065087' END)*('-194065087')) LEFT OUTER JOIN rt0 ON CAST(CASE vt1.c0  WHEN x'' THEN vt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN '-263859890' THEN vt1.c0 ELSE '-947455348' END AS BLOB) WHERE (((((vt1.c0)GLOB('0.5273046408157985'))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt1.c0 END) AND (rtreenode(-1.669264581E9, 0.6165812265665247)))) UNION ALL SELECT * FROM vt1 INNER JOIN vt0 ON ((CASE vt1.c0  WHEN vt0.c0 THEN '-194065087' END)*('-194065087')) LEFT OUTER JOIN rt0 ON CAST(CASE vt1.c0  WHEN x'' THEN vt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN '-263859890' THEN vt1.c0 ELSE '-947455348' END AS BLOB) WHERE ((NOT (((((vt1.c0)GLOB('0.5273046408157985'))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt1.c0 END) AND (rtreenode(-1.669264581E9, 0.6165812265665247)))))) UNION ALL SELECT * FROM vt1 INNER JOIN vt0 ON ((CASE vt1.c0  WHEN vt0.c0 THEN '-194065087' END)*('-194065087')) LEFT OUTER JOIN rt0 ON CAST(CASE vt1.c0  WHEN x'' THEN vt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN '-263859890' THEN vt1.c0 ELSE '-947455348' END AS BLOB) WHERE (((((((vt1.c0)GLOB('0.5273046408157985'))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt1.c0 END) AND (rtreenode(-1.669264581E9, 0.6165812265665247)))) ISNULL));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((CASE vt1.c0  WHEN vt0.c0 THEN '-194065087' END)*('-194065087')) LEFT OUTER JOIN rt0 ON CAST(CASE vt1.c0  WHEN x'' THEN vt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN '-263859890' THEN vt1.c0 ELSE '-947455348' END AS BLOB);
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1, rt0 WHERE ((~ (((rt0.c1)<=('-1044726499'))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1, rt0 WHERE ((NOT ((~ (((rt0.c1)<=('-1044726499'))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1, rt0 WHERE ((((~ (((rt0.c1)<=('-1044726499'))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1, rt0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON (- (vt0.c1)) COLLATE BINARY GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON (- (vt0.c1)) COLLATE BINARY WHERE (CAST(((vt0.c0)&(vt0.c1)) AS BLOB)) GROUP BY vt0.c0, vt0.c1, vt1.c0 UNION SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON (- (vt0.c1)) COLLATE BINARY WHERE ((NOT (CAST(((vt0.c0)&(vt0.c1)) AS BLOB)))) GROUP BY vt0.c0, vt0.c1, vt1.c0 UNION SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON (- (vt0.c1)) COLLATE BINARY WHERE (((CAST(((vt0.c0)&(vt0.c1)) AS BLOB)) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON (- (vt0.c1)) COLLATE BINARY GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT vt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c1, vt0.c1, rt0.c2;
SELECT ALL vt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c1, vt0.c1, rt0.c2 HAVING CASE WHEN ((GROUP_CONCAT(GROUP_CONCAT(TOTAL(COUNT(rt0.c1)))))|(AVG(vt0.c0))) THEN vt1.c0 ELSE CAST(MAX(MAX(NULL)) AS REAL) END UNION ALL SELECT ALL vt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c1, vt0.c1, rt0.c2 HAVING (NOT (CASE WHEN ((GROUP_CONCAT(GROUP_CONCAT(TOTAL(COUNT(rt0.c1)))))|(AVG(vt0.c0))) THEN vt1.c0 ELSE CAST(MAX(MAX(NULL)) AS REAL) END)) UNION ALL SELECT ALL vt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c1, vt0.c1, rt0.c2 HAVING ((CASE WHEN ((GROUP_CONCAT(GROUP_CONCAT(TOTAL(COUNT(rt0.c1)))))|(AVG(vt0.c0))) THEN vt1.c0 ELSE CAST(MAX(MAX(NULL)) AS REAL) END) ISNULL);
SELECT ALL * FROM vt1, vt0, rt0;
SELECT * FROM vt1, vt0, rt0 NOT INDEXED WHERE (CAST(((vt0.c1)+(rt0.c1)) AS INTEGER)) UNION ALL SELECT ALL * FROM vt1, vt0, rt0 WHERE ((NOT (CAST(((vt0.c1)+(rt0.c1)) AS INTEGER)))) UNION ALL SELECT * FROM vt1, vt0, rt0 WHERE (((CAST(((vt0.c1)+(rt0.c1)) AS INTEGER)) ISNULL));
SELECT ALL * FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((((+ (vt0.c1)))IS(((vt0.c0)<<(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((((+ (vt0.c1)))IS(((vt0.c0)<<(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((+ (vt0.c1)))IS(((vt0.c0)<<(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((- (CAST(rt0.c1 AS TEXT)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((- (CAST(rt0.c1 AS TEXT)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((- (CAST(rt0.c1 AS TEXT)))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(AVG(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(AVG(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(AVG(vt1.c0))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((((((vt1.c0) NOT NULL)))>((((0x3b16cf10)<>(vt1.c0)))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((((vt1.c0) NOT NULL)))>((((0x3b16cf10)!=(vt1.c0)))))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((((((vt1.c0) NOT NULL)))>((((0X3b16cf10)!=(vt1.c0)))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) IN ())) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0))>=((0.6312322162338996)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0))>=((0.6312322162338996)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0))>=((0.6312322162338996)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING GROUP_CONCAT(MAX(MIN(rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(MAX(MIN(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(MAX(MIN(rt0.c0)))) ISNULL);
SELECT * FROM vt1, vt0, rt0;
SELECT ALL * FROM vt1, vt0, rt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt1, vt0, rt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt1, vt0, rt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt1, vt0, rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT BETWEEN (vt1.c0) AND (vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE BINARY) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE BINARY) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (((vt0.c0)IS NOT(((vt0.c1) ISNULL)))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0)IS NOT(((vt0.c1) ISNULL)))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((((vt0.c0)IS NOT(((vt0.c1) ISNULL)))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON NULL LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN ('-1972955928') AND (vt0.c1)))==(((((vt0.c1)AND('()')))AND(vt0.c0)))) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON NULL LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN ('-1972955928') AND (vt0.c1)))=(((((vt0.c1)AND('()')))AND(vt0.c0)))) GROUP BY rt0.c2 HAVING SUM(CAST(rt0.c1 AS BLOB)) UNION ALL SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON NULL LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN ('-1972955928') AND (vt0.c1)))=(((((vt0.c1)AND('()')))AND(vt0.c0)))) GROUP BY rt0.c2 HAVING (NOT (SUM(CAST(rt0.c1 AS BLOB)))) UNION ALL SELECT rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON NULL LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN ('-1972955928') AND (vt0.c1)))==(((((vt0.c1)AND('()')))AND(vt0.c0)))) GROUP BY rt0.c2 HAVING ((SUM(CAST(rt0.c1 AS BLOB))) ISNULL);
SELECT rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON NULL LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN ('-1972955928') AND (vt0.c1)))==(((((vt0.c1)AND('()')))AND(vt0.c0)))) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON NULL LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN ('-1972955928') AND (vt0.c1)))=(((((vt0.c1)AND('()')))AND(vt0.c0)))) GROUP BY rt0.c2 HAVING SUM(CAST(rt0.c1 AS BLOB)) UNION ALL SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON NULL LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN ('-1972955928') AND (vt0.c1)))=(((((vt0.c1)AND('()')))AND(vt0.c0)))) GROUP BY rt0.c2 HAVING (NOT (SUM(CAST(rt0.c1 AS BLOB)))) UNION ALL SELECT rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON NULL LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN ('-1972955928') AND (vt0.c1)))==(((((vt0.c1)AND('()')))AND(vt0.c0)))) GROUP BY rt0.c2 HAVING ((SUM(CAST(rt0.c1 AS BLOB))) ISNULL);
SELECT rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON NULL LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN ('-1972955928') AND (vt0.c1)))==(((((vt0.c1)AND('()')))AND(vt0.c0)))) GROUP BY rt0.c2;
SELECT ALL * FROM rt0, vt0, vt1;
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((((((((((rt0.c0))<((rt0.c0))))OR(vt0.c1)))AND(CAST(rt0.c2 AS REAL))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1)))))AND(((((((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c1)))AND(rt0.c2))))) UNION ALL SELECT * FROM rt0, vt0, vt1 WHERE ((NOT ((((((((((((rt0.c0))<((rt0.c0))))OR(vt0.c1)))AND(CAST(rt0.c2 AS REAL))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1)))))AND(((((((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c1)))AND(rt0.c2))))))) UNION ALL SELECT * FROM rt0, vt0 NOT INDEXED, vt1 WHERE ((((((((((((((rt0.c0))<((rt0.c0))))OR(vt0.c1)))AND(CAST(rt0.c2 AS REAL))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1)))))AND(((((((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c1)))AND(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((((((((((rt0.c1)OR(rt0.c0)))AND(-7.93864433E8)))AND(rt0.c0)))AND(rt0.c1)) IN ())) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((((((((((rt0.c1)OR(rt0.c0)))AND(-7.93864433E8)))AND(rt0.c0)))AND(rt0.c1)) IN ())))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((((((((((rt0.c1)OR(rt0.c0)))AND(-7.93864433E8)))AND(rt0.c0)))AND(rt0.c1)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL vt1.c0, vt0.c1, rt0.c2 FROM vt0 NOT INDEXED, vt1, rt0 GROUP BY vt1.c0, vt0.c1, rt0.c2;
SELECT vt1.c0, vt0.c1, rt0.c2 FROM vt0, vt1, rt0 WHERE ((((x'a757') IS FALSE) IN ())) GROUP BY vt1.c0, vt0.c1, rt0.c2 UNION SELECT vt1.c0, vt0.c1, rt0.c2 FROM vt0, vt1, rt0 WHERE ((NOT ((((x'a757') IS FALSE) IN ())))) GROUP BY vt1.c0, vt0.c1, rt0.c2 UNION SELECT ALL vt1.c0, vt0.c1, rt0.c2 FROM vt0, vt1, rt0 WHERE ((((((x'a757') IS FALSE) IN ())) ISNULL)) GROUP BY vt1.c0, vt0.c1, rt0.c2;
SELECT ALL vt1.c0, vt0.c1, rt0.c2 FROM vt0 NOT INDEXED, vt1, rt0 GROUP BY vt1.c0, vt0.c1, rt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(CAST(0.17060392096745702 AS NUMERIC)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(CAST(0.17060392096745702 AS NUMERIC)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(CAST(0.17060392096745702 AS NUMERIC))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(CAST(0.17060392096745702 AS NUMERIC)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(CAST(0.17060392096745702 AS NUMERIC)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(CAST(0.17060392096745702 AS NUMERIC))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c1, rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT vt0.c1, rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (INSTR(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)), ((((((((rt0.c0)AND(vt0.c1)))AND(rt0.c2)))AND(vt0.c0)))OR(vt0.c0)))) UNION ALL SELECT vt0.c1, rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT (INSTR(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)), ((((((((rt0.c0)AND(vt0.c1)))AND(rt0.c2)))AND(vt0.c0)))OR(vt0.c0)))))) UNION ALL SELECT ALL vt0.c1, rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((INSTR(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)), ((((((((rt0.c0)AND(vt0.c1)))AND(rt0.c2)))AND(vt0.c0)))OR(vt0.c0)))) ISNULL));
SELECT vt0.c1, rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)OR(rt0.c1)))OR((+ (vt0.c0)))) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)OR(rt0.c1)))OR((+ (vt0.c0)))) WHERE (((((rt0.c2) NOT BETWEEN (x'6fd2') AND (rt0.c0))) ISNULL)) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)OR(rt0.c1)))OR((+ (vt0.c0)))) WHERE ((NOT (((((rt0.c2) NOT BETWEEN (x'6fd2') AND (rt0.c0))) ISNULL)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)OR(rt0.c1)))OR((+ (vt0.c0)))) WHERE (((((((rt0.c2) NOT BETWEEN (x'6fd2') AND (rt0.c0))) ISNULL)) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)OR(rt0.c1)))OR((+ (vt0.c0)))) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, vt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c2, vt0.c1;
SELECT ALL rt0.c2, vt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c2, vt0.c1 HAVING ((((MIN(rt0.c0))OR((GROUP_CONCAT(SUM(GROUP_CONCAT(vt0.c0))) IN ()))))AND(TOTAL(AVG(COUNT(vt0.c1))))) UNION ALL SELECT ALL rt0.c2, vt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c2, vt0.c1 HAVING (NOT (((((MIN(rt0.c0))OR((GROUP_CONCAT(SUM(GROUP_CONCAT(vt0.c0))) IN ()))))AND(TOTAL(AVG(COUNT(vt0.c1))))))) UNION ALL SELECT ALL rt0.c2, vt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c2, vt0.c1 HAVING ((((((MIN(rt0.c0))OR((GROUP_CONCAT(SUM(GROUP_CONCAT(vt0.c0))) IN ()))))AND(TOTAL(AVG(COUNT(vt0.c1)))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((UNLIKELY(vt1.c0)) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (((vt1.c0)<(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((UNLIKELY(vt1.c0)) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (((vt1.c0)<(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((UNLIKELY(vt1.c0)) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (((vt1.c0)<(vt1.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)))/(((vt1.c0)%(rt0.c2)))) RIGHT OUTER JOIN vt1 ON ((((0.9563854671748598)AND((- (rt0.c0)))))AND(((rt0.c0)IS(vt0.c1))));
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0)) COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((NOT (vt1.c0)) COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((NOT (vt1.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2, vt1.c0, rt0.c0, vt0.c1, rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c0, vt0.c1, rt0.c1;
SELECT ALL rt0.c2, vt1.c0, rt0.c0, vt0.c1, rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c0, vt0.c1, rt0.c1 HAVING ((AVG(COUNT(*))) NOTNULL) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c0, vt0.c1, rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c0, vt0.c1, rt0.c1 HAVING (NOT (((AVG(COUNT(*))) NOTNULL))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c0, vt0.c1, rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c0, vt0.c1, rt0.c1 HAVING ((((AVG(COUNT(*))) NOTNULL)) ISNULL);
SELECT ALL MIN((vt0.c0 COLLATE RTRIM IN ((vt0.c0 IN (rt0.c0))))) FROM rt0, vt1, vt0 ORDER BY SQLITE_COMPILEOPTION_USED('-1972955928') ASC  NULLS FIRST;
SELECT vt0.c1, vt1.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, vt1, rt0;
SELECT vt0.c1, vt1.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, vt1, rt0 WHERE (((rt0.c0 IN ()) IN ())) UNION ALL SELECT ALL vt0.c1, vt1.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, vt1 NOT INDEXED, rt0 WHERE ((NOT (((rt0.c0 IN ()) IN ())))) UNION ALL SELECT vt0.c1, vt1.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, vt1, rt0 WHERE (((((rt0.c0 IN ()) IN ())) ISNULL));
SELECT vt0.c1, vt1.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM vt0, vt1, rt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (CASE ((x'') BETWEEN (rt0.c2) AND (rt0.c2))  WHEN CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 END THEN json_insert(0.6878854465531493, rt0.c2, rt0.c2) ELSE ((((((((rt0.c0)AND(rt0.c2)))OR(0.26487472972799264)))OR(vt0.c0)))AND(x'')) END) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (CASE ((x'') BETWEEN (rt0.c2) AND (rt0.c2))  WHEN CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 END THEN json_insert(0.6878854465531493, rt0.c2, rt0.c2) ELSE ((((((((rt0.c0)AND(rt0.c2)))OR(0.26487472972799264)))OR(vt0.c0)))AND(x'')) END))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((CASE ((x'') BETWEEN (rt0.c2) AND (rt0.c2))  WHEN CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 END THEN json_insert(0.6878854465531493, rt0.c2, rt0.c2) ELSE ((((((((rt0.c0)AND(rt0.c2)))OR(0.26487472972799264)))OR(vt0.c0)))AND(x'')) END) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c1 FROM vt0, rt0;
SELECT ALL rt0.c2, vt0.c1 FROM vt0, rt0 FULL OUTER JOIN vt1 ON ((rt0.c0) BETWEEN (0xffffffffc1babd1d) AND (rt0.c0)) COLLATE BINARY GROUP BY rt0.c2, vt0.c1;
SELECT rt0.c2, vt0.c1 FROM vt0, rt0 FULL OUTER JOIN vt1 ON ((rt0.c0) BETWEEN (0Xffffffffc1babd1d) AND (rt0.c0)) COLLATE BINARY WHERE (CAST((vt1.c0 IN (vt0.c0, vt0.c1)) AS INTEGER)) GROUP BY rt0.c2, vt0.c1 UNION SELECT rt0.c2, vt0.c1 FROM vt0, rt0 FULL OUTER JOIN vt1 ON ((rt0.c0) BETWEEN (0Xffffffffc1babd1d) AND (rt0.c0)) COLLATE BINARY WHERE ((NOT (CAST((vt1.c0 IN (vt0.c0, vt0.c1)) AS INTEGER)))) GROUP BY rt0.c2, vt0.c1 UNION SELECT ALL rt0.c2, vt0.c1 FROM vt0, rt0 FULL OUTER JOIN vt1 ON ((rt0.c0) BETWEEN (0xffffffffc1babd1d) AND (rt0.c0)) COLLATE BINARY WHERE (((CAST((vt1.c0 IN (vt0.c0, vt0.c1)) AS INTEGER)) ISNULL)) GROUP BY rt0.c2, vt0.c1;
SELECT ALL rt0.c2, vt0.c1 FROM vt0, rt0 FULL OUTER JOIN vt1 ON ((rt0.c0) BETWEEN (0xffffffffc1babd1d) AND (rt0.c0)) COLLATE BINARY GROUP BY rt0.c2, vt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING x'' UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (x'')) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((x'') ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING x'' UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (x'')) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((x'') ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((vt0.c1)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((vt0.c1)))))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((vt0.c1)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))%(((vt0.c1) ISNULL)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))%(((vt0.c1) ISNULL)))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))%(((vt0.c1) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt1 WHERE (vt1.c0) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0, vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt1.c0;
SELECT rt0.c0, rt0.c1, vt0.c1, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt1.c0 HAVING ((COUNT(*)) BETWEEN (GROUP_CONCAT(rt0.c1)) AND ((vt0.c1 IN (rt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt1.c0 HAVING (NOT (((COUNT(*)) BETWEEN (GROUP_CONCAT(rt0.c1)) AND ((vt0.c1 IN (rt0.c0)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt1.c0 HAVING ((((COUNT(*)) BETWEEN (GROUP_CONCAT(rt0.c1)) AND ((vt0.c1 IN (rt0.c0))))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt1.c0;
SELECT rt0.c0, rt0.c1, vt0.c1, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt1.c0 HAVING ((COUNT(*)) BETWEEN (GROUP_CONCAT(rt0.c1)) AND ((vt0.c1 IN (rt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt1.c0 HAVING (NOT (((COUNT(*)) BETWEEN (GROUP_CONCAT(rt0.c1)) AND ((vt0.c1 IN (rt0.c0)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt1.c0 HAVING ((((COUNT(*)) BETWEEN (GROUP_CONCAT(rt0.c1)) AND ((vt0.c1 IN (rt0.c0))))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt1.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt1.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))<<(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))<<(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))<<(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((~ ((((('V/')AND(vt1.c0)))AND(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((~ ((((('V/')AND(vt1.c0)))AND(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((~ ((((('V/')AND(vt1.c0)))AND(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c1, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN vt0 ON ((((((((((((rt0.c0 COLLATE BINARY)OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))))))OR(rt0.c1)))AND(vt0.c0 COLLATE RTRIM)))OR(((rt0.c0)AND(rt0.c2)))))OR((((rt0.c2))>=((rt0.c2))))) GROUP BY vt0.c1, rt0.c2, rt0.c1;
SELECT vt0.c1, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN vt0 ON ((((((((((((rt0.c0 COLLATE BINARY)OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))))))OR(rt0.c1)))AND(vt0.c0 COLLATE RTRIM)))OR(((rt0.c0)AND(rt0.c2)))))OR((((rt0.c2))>=((rt0.c2))))) WHERE ((~ (vt0.c0 COLLATE BINARY))) GROUP BY vt0.c1, rt0.c2, rt0.c1 UNION SELECT vt0.c1, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN vt0 ON ((((((((((((rt0.c0 COLLATE BINARY)OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))))))OR(rt0.c1)))AND(vt0.c0 COLLATE RTRIM)))OR(((rt0.c0)AND(rt0.c2)))))OR((((rt0.c2))>=((rt0.c2))))) WHERE ((NOT ((~ (vt0.c0 COLLATE BINARY))))) GROUP BY vt0.c1, rt0.c2, rt0.c1 UNION SELECT ALL vt0.c1, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN vt0 ON ((((((((((((rt0.c0 COLLATE BINARY)OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))))))OR(rt0.c1)))AND(vt0.c0 COLLATE RTRIM)))OR(((rt0.c0)AND(rt0.c2)))))OR((((rt0.c2))>=((rt0.c2))))) WHERE ((((~ (vt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c1, rt0.c2, rt0.c1;
SELECT vt0.c1, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN vt0 ON ((((((((((((rt0.c0 COLLATE BINARY)OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))))))OR(rt0.c1)))AND(vt0.c0 COLLATE RTRIM)))OR(((rt0.c0)AND(rt0.c2)))))OR((((rt0.c2))>=((rt0.c2))))) GROUP BY vt0.c1, rt0.c2, rt0.c1;
SELECT vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0 HAVING TOTAL(vt1.c0 COLLATE RTRIM) UNION ALL SELECT vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0 HAVING (NOT (TOTAL(vt1.c0 COLLATE RTRIM))) UNION ALL SELECT vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0 HAVING ((TOTAL(vt1.c0 COLLATE RTRIM)) ISNULL);
SELECT vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0 HAVING TOTAL(vt1.c0 COLLATE RTRIM) UNION ALL SELECT vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0 HAVING (NOT (TOTAL(vt1.c0 COLLATE RTRIM))) UNION ALL SELECT vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0 HAVING ((TOTAL(vt1.c0 COLLATE RTRIM)) ISNULL);
SELECT vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((- (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((- (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((((- (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END))) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM rt0, vt0 NATURAL JOIN vt1;
SELECT DISTINCT vt0.c0, vt0.c1 FROM rt0, vt0 NATURAL JOIN vt1 WHERE ((- (((rt0.c1)+(vt0.c1))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM rt0, vt0 NATURAL JOIN vt1 WHERE ((NOT ((- (((rt0.c1)+(vt0.c1))))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM rt0, vt0 NATURAL JOIN vt1 WHERE ((((- (((rt0.c1)+(vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM rt0, vt0 NATURAL JOIN vt1;
SELECT ALL vt1.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt0, vt1 WHERE (rt0.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM rt0, vt0, vt1 WHERE ((NOT (rt0.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM rt0, vt0, vt1 WHERE (((rt0.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TRIM(DISTINCT MAX(AVG(vt1.c0)), GROUP_CONCAT(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TRIM(DISTINCT MAX(AVG(vt1.c0)), GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TRIM(DISTINCT MAX(AVG(vt1.c0)), GROUP_CONCAT(vt1.c0))) ISNULL);
SELECT ALL * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (((json_array_length(vt0.c1, vt1.c0)) IS TRUE)) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (((json_array_length(vt0.c1, vt1.c0)) IS TRUE)))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((((json_array_length(vt0.c1, vt1.c0)) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))OR((rt0.c1 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))OR((rt0.c1 IN ())))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))OR((rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((rt0.c1 IN (rt0.c0, rt0.c1)))+(((((vt0.c0)OR(vt0.c1)))OR(rt0.c0))))) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c1, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((rt0.c1 IN (rt0.c0, rt0.c1)))+(((((vt0.c0)OR(vt0.c1)))OR(rt0.c0))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c1, vt0.c0 UNION SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((((rt0.c1 IN (rt0.c0, rt0.c1)))+(((((vt0.c0)OR(vt0.c1)))OR(rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c1, vt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c1, vt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT * FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN rt0.c1 THEN vt0.c1 END) ISNULL);
SELECT ALL * FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN rt0.c1 THEN vt0.c1 END) ISNULL) WHERE (((((((vt1.c0)AND(rt0.c2)))AND(rt0.c0))) ISNULL)) UNION ALL SELECT ALL * FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN rt0.c1 THEN vt0.c1 END) ISNULL) WHERE ((NOT (((((((vt1.c0)AND(rt0.c2)))AND(rt0.c0))) ISNULL)))) UNION ALL SELECT * FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN rt0.c1 THEN vt0.c1 END) ISNULL) WHERE (((((((((vt1.c0)AND(rt0.c2)))AND(rt0.c0))) ISNULL)) ISNULL));
SELECT * FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN rt0.c1 THEN vt0.c1 END) ISNULL);
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((0.0038604297523565645)LIKE(vt0.c0))) NOT NULL)) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((0.0038604297523565645)LIKE(vt0.c0))) NOT NULL)))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((0.0038604297523565645)LIKE(vt0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2, rt0.c0))) IS FALSE)) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1 IN (rt0.c2, rt0.c0))) IS FALSE)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c1 IN (rt0.c2, rt0.c0))) IS FALSE)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2, vt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON CASE ((((rt0.c0)OR(vt1.c0)))AND(vt0.c0))  WHEN ((((((((x'')AND(vt1.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)) THEN ((rt0.c1)<=(rt0.c2)) ELSE (rt0.c1 IN (rt0.c1)) END CROSS JOIN vt1 ON CAST((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS TEXT) GROUP BY vt1.c0, vt0.c0, rt0.c1, rt0.c0, rt0.c2, vt0.c1;
SELECT ALL * FROM vt0, vt1;
SELECT ALL * FROM vt0 NOT INDEXED, vt1 WHERE (vt0.c1) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (vt0.c1))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((vt0.c1) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE (((((rt0.c2)GLOB(NULL)))GLOB(((NULL) NOTNULL)))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE ((NOT (((((rt0.c2)GLOB(NULL)))GLOB(((NULL) NOTNULL)))))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE (((((((rt0.c2)GLOB(NULL)))GLOB(((NULL) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((UPPER(DISTINCT vt1.c0)) BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) AND (CAST(vt1.c0 AS TEXT)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((UPPER(DISTINCT vt1.c0)) BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) AND (CAST(vt1.c0 AS TEXT)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((UPPER(DISTINCT vt1.c0)) BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) AND (CAST(vt1.c0 AS TEXT)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((CASE WHEN 0.9306426827162317 THEN GROUP_CONCAT(AVG(GROUP_CONCAT(vt0.c0))) END) NOT BETWEEN (GROUP_CONCAT('0.6878854465531493')) AND (MIN(vt0.c0))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((CASE WHEN 0.9306426827162317 THEN GROUP_CONCAT(AVG(GROUP_CONCAT(vt0.c0))) END) NOT BETWEEN (GROUP_CONCAT('0.6878854465531493')) AND (MIN(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((CASE WHEN 0.9306426827162317 THEN GROUP_CONCAT(AVG(GROUP_CONCAT(vt0.c0))) END) NOT BETWEEN (GROUP_CONCAT('0.6878854465531493')) AND (MIN(vt0.c0)))) ISNULL);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (NOT (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c1 END)) LEFT OUTER JOIN vt0 ON PRINTF(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), ((((vt0.c1)AND(vt0.c0)))AND(rt0.c1)));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c1, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((('487264394'))>((TYPEOF(DISTINCT vt0.c1))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((('487264394'))>((TYPEOF(DISTINCT vt0.c1))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((((('487264394'))>((TYPEOF(DISTINCT vt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c1, vt0.c0 FROM vt0, rt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((CASE WHEN 0Xffffffff9c810b3b THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c1 END)IS NOT(SUBSTR('&a䘊F6T', vt0.c0)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((CASE WHEN 0Xffffffff9c810b3b THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c1 END)IS NOT(SUBSTR('&a䘊F6T', vt0.c0)))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((CASE WHEN 0xffffffff9c810b3b THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c1 END)IS NOT(SUBSTR('&a䘊F6T', vt0.c0)))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c1, vt1.c0, rt0.c1, vt0.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c1, vt1.c0, rt0.c1, vt0.c0;
SELECT vt0.c1, vt1.c0, rt0.c1, vt0.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c1, vt1.c0, rt0.c1, vt0.c0 HAVING (+ (COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt1.c0, rt0.c1, vt0.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c1, vt1.c0, rt0.c1, vt0.c0 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT vt0.c1, vt1.c0, rt0.c1, vt0.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c1, vt1.c0, rt0.c1, vt0.c0 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT ALL vt0.c1, vt1.c0, rt0.c1, vt0.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c1, vt1.c0, rt0.c1, vt0.c0;
SELECT vt0.c1, vt1.c0, rt0.c1, vt0.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c1, vt1.c0, rt0.c1, vt0.c0 HAVING (+ (COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt1.c0, rt0.c1, vt0.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c1, vt1.c0, rt0.c1, vt0.c0 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT vt0.c1, vt1.c0, rt0.c1, vt0.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c1, vt1.c0, rt0.c1, vt0.c0 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT ALL vt0.c1, vt1.c0, rt0.c1, vt0.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c1, vt1.c0, rt0.c1, vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN 'vH' THEN vt0.c0 ELSE vt0.c1 END COLLATE RTRIM) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN 'vH' THEN vt0.c0 ELSE vt0.c1 END COLLATE RTRIM))) UNION ALL SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN 'vH' THEN vt0.c0 ELSE vt0.c1 END COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (vt0.c1) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt1.c0, vt0.c0, rt0.c0, rt0.c2 FROM vt0, vt1 NATURAL JOIN rt0 GROUP BY vt1.c0, vt0.c0, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, vt0.c0, rt0.c0, rt0.c2 FROM vt0, vt1 NATURAL JOIN rt0 WHERE (CASE WHEN LIKELIHOOD(rt0.c1, 0.5713485841732469) THEN (vt0.c1 IN ()) END) GROUP BY vt1.c0, vt0.c0, rt0.c0, rt0.c2 UNION SELECT vt1.c0, vt0.c0, rt0.c0, rt0.c2 FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((NOT (CASE WHEN LIKELIHOOD(rt0.c1, 0.5713485841732469) THEN (vt0.c1 IN ()) END))) GROUP BY vt1.c0, vt0.c0, rt0.c0, rt0.c2 UNION SELECT ALL vt1.c0, vt0.c0, rt0.c0, rt0.c2 FROM vt0, vt1 NATURAL JOIN rt0 WHERE (((CASE WHEN LIKELIHOOD(rt0.c1, 0.5713485841732469) THEN (vt0.c1 IN ()) END) ISNULL)) GROUP BY vt1.c0, vt0.c0, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, vt0.c0, rt0.c0, rt0.c2 FROM vt0, vt1 NATURAL JOIN rt0 GROUP BY vt1.c0, vt0.c0, rt0.c0, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt1 INNER JOIN vt0 ON ((((vt0.c0) IS FALSE)) NOT BETWEEN (((((vt1.c0)AND(x'c9e3')))OR(vt0.c1))) AND (((vt0.c0)||(vt0.c1))));
SELECT * FROM vt1 INNER JOIN vt0 ON ((((vt0.c0) IS FALSE)) NOT BETWEEN (((((vt1.c0)AND(x'c9e3')))OR(vt0.c1))) AND (((vt0.c0)||(vt0.c1)))) WHERE ((+ (((vt0.c1)>(vt0.c1))))) UNION ALL SELECT * FROM vt1 INNER JOIN vt0 ON ((((vt0.c0) IS FALSE)) NOT BETWEEN (((((vt1.c0)AND(x'c9e3')))OR(vt0.c1))) AND (((vt0.c0)||(vt0.c1)))) WHERE ((NOT ((+ (((vt0.c1)>(vt0.c1))))))) UNION ALL SELECT * FROM vt1 INNER JOIN vt0 ON ((((vt0.c0) IS FALSE)) NOT BETWEEN (((((vt1.c0)AND(x'c9e3')))OR(vt0.c1))) AND (((vt0.c0)||(vt0.c1)))) WHERE ((((+ (((vt0.c1)>(vt0.c1))))) ISNULL));
SELECT * FROM vt1 INNER JOIN vt0 ON ((((vt0.c0) IS FALSE)) NOT BETWEEN (((((vt1.c0)AND(x'c9e3')))OR(vt0.c1))) AND (((vt0.c0)||(vt0.c1))));
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((x'')<>(vt1.c0))) BETWEEN ((NULL IN ())) AND ((vt1.c0 IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((x'')!=(vt1.c0))) BETWEEN ((NULL IN ())) AND ((vt1.c0 IN ())))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((x'')<>(vt1.c0))) BETWEEN ((NULL IN ())) AND ((vt1.c0 IN ())))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING SUM(((GROUP_CONCAT(rt0.c1))|(rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (SUM(((GROUP_CONCAT(rt0.c1))|(rt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((SUM(((GROUP_CONCAT(rt0.c1))|(rt0.c0)))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE ((vt0.c1 COLLATE BINARY IN ())) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT ((vt0.c1 COLLATE BINARY IN ())))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c1 COLLATE BINARY IN ())) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON ((((CAST(rt0.c1 AS NUMERIC))AND((rt0.c1 IN (rt0.c2)))))OR(((rt0.c2)GLOB(rt0.c1))));
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON ((((CAST(rt0.c1 AS NUMERIC))AND((rt0.c1 IN (rt0.c2)))))OR(((rt0.c2)GLOB(rt0.c1)))) WHERE ((((rt0.c0) NOTNULL) IN (CASE WHEN rt0.c0 THEN vt1.c0 ELSE vt1.c0 END, (2.090905458E9 IN (rt0.c1))))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON ((((CAST(rt0.c1 AS NUMERIC))AND((rt0.c1 IN (rt0.c2)))))OR(((rt0.c2)GLOB(rt0.c1)))) WHERE ((NOT ((((rt0.c0) NOTNULL) IN (CASE WHEN rt0.c0 THEN vt1.c0 ELSE vt1.c0 END, (2.090905458E9 IN (rt0.c1))))))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON ((((CAST(rt0.c1 AS NUMERIC))AND((rt0.c1 IN (rt0.c2)))))OR(((rt0.c2)GLOB(rt0.c1)))) WHERE ((((((rt0.c0) NOTNULL) IN (CASE WHEN rt0.c0 THEN vt1.c0 ELSE vt1.c0 END, (2.090905458E9 IN (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON ((((CAST(rt0.c1 AS NUMERIC))AND((rt0.c1 IN (rt0.c2)))))OR(((rt0.c2)GLOB(rt0.c1))));
SELECT rt0.c0, vt0.c0, vt1.c0 FROM vt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c0, vt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt0.c0, vt1.c0 FROM vt1, rt0 NATURAL JOIN vt0 WHERE (((((((rt0.c0)OR(vt0.c0)))AND(rt0.c1))) NOT NULL)) GROUP BY rt0.c0, vt0.c0, vt1.c0 UNION SELECT rt0.c0, vt0.c0, vt1.c0 FROM vt1, rt0 NATURAL JOIN vt0 WHERE ((NOT (((((((rt0.c0)OR(vt0.c0)))AND(rt0.c1))) NOT NULL)))) GROUP BY rt0.c0, vt0.c0, vt1.c0 UNION SELECT rt0.c0, vt0.c0, vt1.c0 FROM vt1, rt0 NATURAL JOIN vt0 WHERE (((((((((rt0.c0)OR(vt0.c0)))AND(rt0.c1))) NOT NULL)) ISNULL)) GROUP BY rt0.c0, vt0.c0, vt1.c0;
SELECT rt0.c0, vt0.c0, vt1.c0 FROM vt1, rt0 NATURAL JOIN vt0 GROUP BY rt0.c0, vt0.c0, vt1.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt0.c0, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt0.c0, vt1.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt0.c0, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt0.c0, vt1.c0 HAVING SUM(UPPER(DISTINCT MIN(MAX(rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt0.c0, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt0.c0, vt1.c0 HAVING (NOT (SUM(UPPER(DISTINCT MIN(MAX(rt0.c0)))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt0.c0, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.c1, vt0.c0, vt1.c0 HAVING ((SUM(UPPER(DISTINCT MIN(MAX(rt0.c0))))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((- (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((- (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((- (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((((rt0.c1)OR(rt0.c1)))OR(rt0.c2))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((((rt0.c1)OR(rt0.c1)))OR(rt0.c2))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL rt0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c0 WHERE ((((rt0.c0) IS TRUE) IN ())) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c0 WHERE ((NOT ((((rt0.c0) IS TRUE) IN ())))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c0 WHERE ((((((rt0.c0) IS TRUE) IN ())) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c0 GROUP BY rt0.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2 HAVING CAST(AVG(MAX(AVG(NULL))) AS INTEGER) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2 HAVING (NOT (CAST(AVG(MAX(AVG(NULL))) AS INTEGER))) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2 HAVING ((CAST(AVG(MAX(AVG(NULL))) AS INTEGER)) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2 FROM rt0 NATURAL JOIN vt1;
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2 FROM rt0 NOT INDEXED NATURAL JOIN vt1 WHERE ((+ (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) UNION SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2 FROM rt0 NATURAL JOIN vt1 WHERE ((NOT ((+ (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))))))) UNION SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2 FROM rt0 NATURAL JOIN vt1 WHERE ((((+ (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2 FROM rt0 NATURAL JOIN vt1;
SELECT vt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2, rt0.c0, vt0.c0;
SELECT ALL vt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((('-293324226'))<=(((((vt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((vt0.c0, x'', rt0.c1)) AND ((rt0.c2, vt0.c1, vt0.c0))))))) GROUP BY vt0.c1, rt0.c2, rt0.c0, vt0.c0 UNION SELECT vt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((('-293324226'))<=(((((vt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((vt0.c0, x'', rt0.c1)) AND ((rt0.c2, vt0.c1, vt0.c0))))))))) GROUP BY vt0.c1, rt0.c2, rt0.c0, vt0.c0 UNION SELECT ALL vt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((((('-293324226'))<=(((((vt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((vt0.c0, x'', rt0.c1)) AND ((rt0.c2, vt0.c1, vt0.c0))))))) ISNULL)) GROUP BY vt0.c1, rt0.c2, rt0.c0, vt0.c0;
SELECT vt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2, rt0.c0, vt0.c0;
SELECT ALL rt0.c2, vt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c0;
SELECT rt0.c2, vt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c0 HAVING COUNT(ABS(DISTINCT rt0.c0)) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c0 HAVING (NOT (COUNT(ABS(DISTINCT rt0.c0)))) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c0 HAVING ((COUNT(ABS(DISTINCT rt0.c0))) ISNULL);
SELECT ALL rt0.c2, vt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c0;
SELECT rt0.c2, vt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c0 HAVING COUNT(ABS(DISTINCT rt0.c0)) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c0 HAVING (NOT (COUNT(ABS(DISTINCT rt0.c0)))) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c0 HAVING ((COUNT(ABS(DISTINCT rt0.c0))) ISNULL);
SELECT ALL rt0.c2, vt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c0;
SELECT ALL vt0.c1, rt0.c1, vt0.c0, vt1.c0, rt0.c2 FROM vt1, vt0, rt0;
SELECT vt0.c1, rt0.c1, vt0.c0, vt1.c0, rt0.c2 FROM vt1, vt0, rt0 WHERE (rt0.c1) UNION ALL SELECT vt0.c1, rt0.c1, vt0.c0, vt1.c0, rt0.c2 FROM vt1, vt0, rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT vt0.c1, rt0.c1, vt0.c0, vt1.c0, rt0.c2 FROM vt1, vt0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL vt0.c1, rt0.c1, vt0.c0, vt1.c0, rt0.c2 FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((- ('f\r{}')) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((NOT ((- ('f\r{}')) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((((- ('f\r{}')) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (MIN((- (vt0.c0)), ((vt0.c1) IS FALSE), CAST(vt1.c0 AS NUMERIC), (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), (('-758123384') BETWEEN (vt1.c0) AND (vt0.c0)), ((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0 NOT INDEXED, vt1 WHERE ((NOT (MIN((- (vt0.c0)), ((vt0.c1) IS FALSE), CAST(vt1.c0 AS NUMERIC), (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), (('-758123384') BETWEEN (vt1.c0) AND (vt0.c0)), ((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE (((MIN((- (vt0.c0)), ((vt0.c1) IS FALSE), CAST(vt1.c0 AS NUMERIC), (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), (('-758123384') BETWEEN (vt1.c0) AND (vt0.c0)), ((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT rt0.c1, vt0.c1 FROM rt0, vt0 LEFT OUTER JOIN vt1 ON 1196890667 GROUP BY rt0.c1, vt0.c1;
SELECT ALL rt0.c1, vt0.c1 FROM rt0, vt0 LEFT OUTER JOIN vt1 ON 1196890667 GROUP BY rt0.c1, vt0.c1 HAVING COUNT(TOTAL(GROUP_CONCAT(TOTAL(vt1.c0)))) UNION ALL SELECT rt0.c1, vt0.c1 FROM rt0, vt0 LEFT OUTER JOIN vt1 ON 1196890667 GROUP BY rt0.c1, vt0.c1 HAVING (NOT (COUNT(TOTAL(GROUP_CONCAT(TOTAL(vt1.c0)))))) UNION ALL SELECT ALL rt0.c1, vt0.c1 FROM rt0, vt0 LEFT OUTER JOIN vt1 ON 1196890667 GROUP BY rt0.c1, vt0.c1 HAVING ((COUNT(TOTAL(GROUP_CONCAT(TOTAL(vt1.c0))))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM rt0, vt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM rt0, vt0 WHERE ((((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))>=((rt0.c0 COLLATE NOCASE)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM rt0, vt0 WHERE ((NOT ((((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))>=((rt0.c0 COLLATE NOCASE)))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM rt0, vt0 WHERE ((((((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))>=((rt0.c0 COLLATE NOCASE)))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (NULL) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c0, vt1.c0, rt0.c1;
SELECT vt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0, vt0 WHERE (((((((vt0.c0)<(rt0.c0)))AND(GLOB(vt0.c1, rt0.c1))))AND((+ (rt0.c2))))) GROUP BY vt0.c0, vt1.c0, rt0.c1 UNION SELECT ALL vt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0, vt0 WHERE ((NOT (((((((vt0.c0)<(rt0.c0)))AND(GLOB(vt0.c1, rt0.c1))))AND((+ (rt0.c2))))))) GROUP BY vt0.c0, vt1.c0, rt0.c1 UNION SELECT ALL vt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0, vt0 WHERE (((((((((vt0.c0)<(rt0.c0)))AND(GLOB(vt0.c1, rt0.c1))))AND((+ (rt0.c2))))) ISNULL)) GROUP BY vt0.c0, vt1.c0, rt0.c1;
SELECT vt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c0, vt1.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c2 HAVING AVG((MIN(rt0.c0) IN ())) UNION ALL SELECT vt1.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c2 HAVING (NOT (AVG((MIN(rt0.c0) IN ())))) UNION ALL SELECT vt1.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c2 HAVING ((AVG((MIN(rt0.c0) IN ()))) ISNULL);
SELECT ALL vt1.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c2 HAVING AVG((MIN(rt0.c0) IN ())) UNION ALL SELECT vt1.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c2 HAVING (NOT (AVG((MIN(rt0.c0) IN ())))) UNION ALL SELECT vt1.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c2 HAVING ((AVG((MIN(rt0.c0) IN ()))) ISNULL);
SELECT ALL vt1.c0, rt0.c2 FROM vt0, rt0, vt1 GROUP BY vt1.c0, rt0.c2;
SELECT ALL * FROM vt0, vt1, rt0;
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((COALESCE(vt1.c0, rt0.c0))<<(0.27938130681895357))) UNION ALL SELECT * FROM vt0, vt1, rt0 WHERE ((NOT (((COALESCE(vt1.c0, rt0.c0))<<(0.27938130681895357))))) UNION ALL SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((COALESCE(vt1.c0, rt0.c0))<<(0.27938130681895357))) ISNULL));
SELECT ALL * FROM vt0, vt1, rt0;
SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON vt1.c0;
SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON vt1.c0 WHERE (NULL) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON vt1.c0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON vt1.c0 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON vt1.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((((rt0.c1 IN ()))-(CAST(rt0.c0 AS TEXT)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1 IN ()))-(CAST(rt0.c0 AS TEXT)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((((rt0.c1 IN ()))-(CAST(rt0.c0 AS TEXT)))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2, vt0.c1, vt1.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt0.c1, vt1.c0, rt0.c0;
SELECT rt0.c2, vt0.c1, vt1.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt0.c1, vt1.c0, rt0.c0 HAVING (((((COUNT(*), COUNT(*), vt0.c0))>=((MIN(rt0.c1), SUM(rt0.c2), MAX(AVG(TOTAL(rt0.c2)))))))>(((GROUP_CONCAT(COUNT(rt0.c1)))IS(rt0.c0)))) UNION ALL SELECT rt0.c2, vt0.c1, vt1.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt0.c1, vt1.c0, rt0.c0 HAVING (NOT ((((((COUNT(*), COUNT(*), vt0.c0))>=((MIN(rt0.c1), SUM(rt0.c2), MAX(AVG(TOTAL(rt0.c2)))))))>(((GROUP_CONCAT(COUNT(rt0.c1)))IS(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, vt0.c1, vt1.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt0.c1, vt1.c0, rt0.c0 HAVING (((((((COUNT(*), COUNT(*), vt0.c0))>=((MIN(rt0.c1), SUM(rt0.c2), MAX(AVG(TOTAL(rt0.c2)))))))>(((GROUP_CONCAT(COUNT(rt0.c1)))IS(rt0.c0))))) ISNULL);
SELECT MIN(LOWER(DISTINCT ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))) FROM rt0 ORDER BY (((rt0.c1)-(rt0.c1)) IN (ABS(rt0.c2))) DESC;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE BINARY) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0) IS FALSE) COLLATE BINARY))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE) COLLATE BINARY) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))AND(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)))AND(TRIM(DISTINCT vt0.c0, vt1.c0)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))AND(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)))AND(TRIM(DISTINCT vt0.c0, vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))AND(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)))AND(TRIM(DISTINCT vt0.c0, vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt0.c0, vt1.c0, vt0.c1, rt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1, rt0.c0;
SELECT ALL vt0.c0, vt1.c0, vt0.c1, rt0.c0 FROM vt0, rt0, vt1 WHERE (((((x'')AND(((((((((rt0.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt1.c0)))OR(rt0.c1)))))AND(((((((((rt0.c0)AND(rt0.c1)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c1))))) GROUP BY vt0.c0, vt1.c0, vt0.c1, rt0.c0 UNION SELECT ALL vt0.c0, vt1.c0, vt0.c1, rt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT (((((x'')AND(((((((((rt0.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt1.c0)))OR(rt0.c1)))))AND(((((((((rt0.c0)AND(rt0.c1)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c1))))))) GROUP BY vt0.c0, vt1.c0, vt0.c1, rt0.c0 UNION SELECT ALL vt0.c0, vt1.c0, vt0.c1, rt0.c0 FROM vt0, rt0, vt1 WHERE (((((((x'')AND(((((((((rt0.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt1.c0)))OR(rt0.c1)))))AND(((((((((rt0.c0)AND(rt0.c1)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c1))))) ISNULL)) GROUP BY vt0.c0, vt1.c0, vt0.c1, rt0.c0;
SELECT vt0.c0, vt1.c0, vt0.c1, rt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1, rt0.c0;
SELECT rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0;
SELECT ALL rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 HAVING ((COUNT(rt0.c1)) NOT NULL) UNION ALL SELECT rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 HAVING (NOT (((COUNT(rt0.c1)) NOT NULL))) UNION ALL SELECT ALL rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 HAVING ((((COUNT(rt0.c1)) NOT NULL)) ISNULL);
SELECT rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0;
SELECT ALL rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 HAVING ((COUNT(rt0.c1)) NOT NULL) UNION ALL SELECT rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 HAVING (NOT (((COUNT(rt0.c1)) NOT NULL))) UNION ALL SELECT ALL rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 HAVING ((((COUNT(rt0.c1)) NOT NULL)) ISNULL);
SELECT rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt0.c1, vt1.c0, rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c0, vt0.c0 FROM rt0 NATURAL JOIN vt0;
SELECT rt0.c0, vt0.c0 FROM rt0 NATURAL JOIN vt0 WHERE (((rt0.c1 COLLATE RTRIM) IS FALSE)) UNION ALL SELECT ALL rt0.c0, vt0.c0 FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (((rt0.c1 COLLATE RTRIM) IS FALSE)))) UNION ALL SELECT ALL rt0.c0, vt0.c0 FROM rt0 NATURAL JOIN vt0 WHERE (((((rt0.c1 COLLATE RTRIM) IS FALSE)) ISNULL));
SELECT rt0.c0, vt0.c0 FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT rt0.c1 FROM rt0, vt1, vt0;
SELECT DISTINCT rt0.c1 FROM rt0 NOT INDEXED, vt1, vt0 WHERE ((((((- (vt0.c0)))AND(((rt0.c0)==(vt0.c0)))))OR(((vt0.c1) IS FALSE)))) UNION SELECT DISTINCT rt0.c1 FROM rt0, vt1, vt0 WHERE ((NOT ((((((- (vt0.c0)))AND(((rt0.c0)==(vt0.c0)))))OR(((vt0.c1) IS FALSE)))))) UNION SELECT DISTINCT rt0.c1 FROM rt0, vt1, vt0 WHERE ((((((((- (vt0.c0)))AND(((rt0.c0)==(vt0.c0)))))OR(((vt0.c1) IS FALSE)))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0, vt1, vt0;
SELECT ALL vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2;
SELECT vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((((+ (rt0.c1))) IS TRUE)) GROUP BY vt1.c0, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT ((((+ (rt0.c1))) IS TRUE)))) GROUP BY vt1.c0, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((((((+ (rt0.c1))) IS TRUE)) ISNULL)) GROUP BY vt1.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2;
SELECT rt0.c2, vt0.c0, rt0.c0, vt1.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, vt1.c0;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, vt1.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, vt1.c0 HAVING (((AVG(SUM(rt0.c1)), AVG(rt0.c0), vt0.c1)) NOT BETWEEN ((CAST(SUM(x'') AS TEXT), MIN(MIN(TOTAL(vt1.c0))), GROUP_CONCAT(MAX(GROUP_CONCAT(vt1.c0))))) AND ((MIN(SUM(rt0.c2)), COUNT(rt0.c0), vt0.c0))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c0, vt1.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, vt1.c0 HAVING (NOT ((((AVG(SUM(rt0.c1)), AVG(rt0.c0), vt0.c1)) NOT BETWEEN ((CAST(SUM(x'') AS TEXT), MIN(MIN(TOTAL(vt1.c0))), GROUP_CONCAT(MAX(GROUP_CONCAT(vt1.c0))))) AND ((MIN(SUM(rt0.c2)), COUNT(rt0.c0), vt0.c0))))) UNION ALL SELECT rt0.c2, vt0.c0, rt0.c0, vt1.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, vt1.c0 HAVING (((((AVG(SUM(rt0.c1)), AVG(rt0.c0), vt0.c1)) NOT BETWEEN ((CAST(SUM(x'') AS TEXT), MIN(MIN(TOTAL(vt1.c0))), GROUP_CONCAT(MAX(GROUP_CONCAT(vt1.c0))))) AND ((MIN(SUM(rt0.c2)), COUNT(rt0.c0), vt0.c0)))) ISNULL);
SELECT ALL * FROM vt0, vt1, rt0;
SELECT ALL * FROM vt0, vt1, rt0 WHERE (TOTAL_CHANGES()) UNION ALL SELECT * FROM vt0, vt1, rt0 WHERE ((NOT (TOTAL_CHANGES()))) UNION ALL SELECT * FROM vt0, vt1, rt0 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT ALL * FROM vt0, vt1, rt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((vt0.c1)AND(vt0.c1)), (+ (-87589015)), vt0.c1))<(((NOT (vt0.c0)), (vt0.c1 IN ()), CAST(vt0.c0 AS NUMERIC))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c1)AND(vt0.c1)), (+ (-87589015)), vt0.c1))<(((NOT (vt0.c0)), (vt0.c1 IN ()), CAST(vt0.c0 AS NUMERIC))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((((vt0.c1)AND(vt0.c1)), (+ (-87589015)), vt0.c1))<(((NOT (vt0.c0)), (vt0.c1 IN ()), CAST(vt0.c0 AS NUMERIC))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE WHEN NULL THEN vt1.c0 ELSE vt1.c0 END) ISNULL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((CASE WHEN NULL THEN vt1.c0 ELSE vt1.c0 END) ISNULL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((CASE WHEN NULL THEN vt1.c0 ELSE vt1.c0 END) ISNULL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0;
SELECT ALL vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0 HAVING (((AVG(MIN(COUNT(*))), (~ (vt0.c0)), SUM(AVG(TOTAL(MIN(MAX(SUM(vt0.c1))))))))!=((((GROUP_CONCAT('')) BETWEEN (vt1.c0) AND (MIN(vt0.c1))), SUM(GROUP_CONCAT(vt1.c0)), ((vt0.c0)<=(MAX(vt0.c1)))))) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0 HAVING (NOT ((((AVG(MIN(COUNT(*))), (~ (vt0.c0)), SUM(AVG(TOTAL(MIN(MAX(SUM(vt0.c1))))))))<>((((GROUP_CONCAT('')) BETWEEN (vt1.c0) AND (MIN(vt0.c1))), SUM(GROUP_CONCAT(vt1.c0)), ((vt0.c0)<=(MAX(vt0.c1)))))))) UNION ALL SELECT vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0 HAVING (((((AVG(MIN(COUNT(*))), (~ (vt0.c0)), SUM(AVG(TOTAL(MIN(MAX(SUM(vt0.c1))))))))!=((((GROUP_CONCAT('')) BETWEEN (vt1.c0) AND (MIN(vt0.c1))), SUM(GROUP_CONCAT(vt1.c0)), ((vt0.c0)<=(MAX(vt0.c1))))))) ISNULL);
SELECT ALL * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c2) NOT NULL)) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (((rt0.c2) NOT NULL)))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((((rt0.c2) NOT NULL)) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM vt0, vt1, rt0;
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM vt0, vt1 NOT INDEXED, rt0 WHERE (((((vt0.c1)AND((- (NULL)))))OR((vt0.c1 IN (rt0.c0))))) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM vt0, vt1, rt0 WHERE ((NOT (((((vt0.c1)AND((- (NULL)))))OR((vt0.c1 IN (rt0.c0))))))) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM vt0, vt1, rt0 WHERE (((((((vt0.c1)AND((- (NULL)))))OR((vt0.c1 IN (rt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM vt0, vt1, rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (UNLIKELY(DISTINCT CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (UNLIKELY(DISTINCT CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((UNLIKELY(DISTINCT CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE LEFT OUTER JOIN vt0 ON (((rt0.c0 IN ())) NOTNULL) GROUP BY rt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1;
SELECT ALL rt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE LEFT OUTER JOIN vt0 ON (((rt0.c0 IN ())) NOTNULL) GROUP BY rt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE LEFT OUTER JOIN vt0 ON (((rt0.c0 IN ())) NOTNULL) GROUP BY rt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE LEFT OUTER JOIN vt0 ON (((rt0.c0 IN ())) NOTNULL) GROUP BY rt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE LEFT OUTER JOIN vt0 ON (((rt0.c0 IN ())) NOTNULL) GROUP BY rt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1;
SELECT ALL rt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE LEFT OUTER JOIN vt0 ON (((rt0.c0 IN ())) NOTNULL) GROUP BY rt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE LEFT OUTER JOIN vt0 ON (((rt0.c0 IN ())) NOTNULL) GROUP BY rt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE LEFT OUTER JOIN vt0 ON (((rt0.c0 IN ())) NOTNULL) GROUP BY rt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE LEFT OUTER JOIN vt0 ON (((rt0.c0 IN ())) NOTNULL) GROUP BY rt0.c1, vt1.c0, vt0.c0, rt0.c0, rt0.c2, vt0.c1;
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON ((((((x'')AND(vt1.c0)))AND(vt0.c0))) NOT BETWEEN (((((vt1.c0)OR(rt0.c2)))OR(rt0.c1))) AND ((rt0.c0 IN ()))) RIGHT OUTER JOIN vt0 ON (vt0.c0 COLLATE NOCASE IN ());
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE BINARY) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE BINARY))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE BINARY) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((- (((vt0.c1) ISNULL)))) GROUP BY vt0.c0, vt0.c1, vt1.c0 UNION SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((- (((vt0.c1) ISNULL)))))) GROUP BY vt0.c0, vt0.c1, vt1.c0 UNION SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((((- (((vt0.c1) ISNULL)))) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c1 HAVING COUNT(((((MAX(AVG(TOTAL(vt0.c0))))OR(rt0.c1)))AND(MAX(vt0.c1)))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c1 HAVING (NOT (COUNT(((((MAX(AVG(TOTAL(vt0.c0))))OR(rt0.c1)))AND(MAX(vt0.c1)))))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c1 HAVING ((COUNT(((((MAX(AVG(TOTAL(vt0.c0))))OR(rt0.c1)))AND(MAX(vt0.c1))))) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (((((rt0.c0)AND(rt0.c2)))OR(LOWER(rt0.c0)))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0)AND(rt0.c2)))OR(LOWER(rt0.c0)))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))OR(LOWER(rt0.c0)))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)/(vt1.c0)))AND(((vt1.c0)LIKE(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0)/(vt1.c0)))AND(((vt1.c0)LIKE(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)/(vt1.c0)))AND(((vt1.c0)LIKE(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE BINARY) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC) COLLATE BINARY))) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((CAST(vt0.c0 AS NUMERIC) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt1, rt0 NOT INDEXED, vt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c2, rt0.c0 HAVING TOTAL((- (COUNT(rt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (TOTAL((- (COUNT(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM vt1, rt0, vt0 GROUP BY rt0.c2, rt0.c0 HAVING ((TOTAL((- (COUNT(rt0.c0))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((((('-293640633')>=(vt1.c0)))IS NOT(CAST(vt1.c0 AS INTEGER)))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((((('-293640633')>=(vt1.c0)))IS NOT(CAST(vt1.c0 AS INTEGER)))))) UNION ALL SELECT * FROM vt1 WHERE ((((((('-293640633')>=(vt1.c0)))IS NOT(CAST(vt1.c0 AS INTEGER)))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (((~ (rt0.c0)))<=(CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END));
SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (((~ (rt0.c0)))<=(CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END)) WHERE (vt1.c0) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (((~ (rt0.c0)))<=(CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END)) WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (((~ (rt0.c0)))<=(CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END)) WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (((~ (rt0.c0)))<=(CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END));
SELECT ALL vt1.c0 FROM vt1 CROSS JOIN rt0 ON (~ (((vt0.c0)+(rt0.c0)))) LEFT OUTER JOIN vt0 ON (+ ((rt0.c2 IN ()))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 CROSS JOIN rt0 ON (~ (((vt0.c0)+(rt0.c0)))) LEFT OUTER JOIN vt0 ON (+ ((rt0.c2 IN ()))) WHERE ((- (CAST(vt1.c0 AS BLOB)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 CROSS JOIN rt0 ON (~ (((vt0.c0)+(rt0.c0)))) LEFT OUTER JOIN vt0 ON (+ ((rt0.c2 IN ()))) WHERE ((NOT ((- (CAST(vt1.c0 AS BLOB)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 CROSS JOIN rt0 ON (~ (((vt0.c0)+(rt0.c0)))) LEFT OUTER JOIN vt0 ON (+ ((rt0.c2 IN ()))) WHERE ((((- (CAST(vt1.c0 AS BLOB)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 CROSS JOIN rt0 ON (~ (((vt0.c0)+(rt0.c0)))) LEFT OUTER JOIN vt0 ON (+ ((rt0.c2 IN ()))) GROUP BY vt1.c0;
SELECT rt0.c1, rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c1, rt0.c2 HAVING MIN(COUNT(TOTAL(TOTAL(vt0.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MIN(COUNT(TOTAL(TOTAL(vt0.c0)))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c1, rt0.c2 HAVING ((MIN(COUNT(TOTAL(TOTAL(vt0.c0))))) ISNULL);
SELECT ALL MAX((((rt0.c0)) NOT BETWEEN (((((vt0.c1, 0.11387113097065837, vt0.c0))<>((rt0.c0, vt1.c0, NULL))))) AND ((((vt1.c0)IS NOT(rt0.c1)))))) FROM vt1, vt0, rt0 ORDER BY ((rt0.c0)/(UPPER(vt0.c1))) DESC  NULLS LAST;
SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (rt0.c0 IN (CAST(rt0.c2 AS TEXT), ((((vt1.c0)OR('')))AND(0.8015140621790255))));
SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (rt0.c0 IN (CAST(rt0.c2 AS TEXT), ((((vt1.c0)OR('')))AND(0.8015140621790255)))) WHERE (CASE (rt0.c1 IN ())  WHEN ((vt1.c0) NOTNULL) THEN CAST(rt0.c0 AS INTEGER) ELSE ((((((((((((rt0.c0)AND(rt0.c2)))OR(x'559a')))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)) END) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (rt0.c0 IN (CAST(rt0.c2 AS TEXT), ((((vt1.c0)OR('')))AND(0.8015140621790255)))) WHERE ((NOT (CASE (rt0.c1 IN ())  WHEN ((vt1.c0) NOTNULL) THEN CAST(rt0.c0 AS INTEGER) ELSE ((((((((((((rt0.c0)AND(rt0.c2)))OR(x'559a')))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)) END))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (rt0.c0 IN (CAST(rt0.c2 AS TEXT), ((((vt1.c0)OR('')))AND(0.8015140621790255)))) WHERE (((CASE (rt0.c1 IN ())  WHEN ((vt1.c0) NOTNULL) THEN CAST(rt0.c0 AS INTEGER) ELSE ((((((((((((rt0.c0)AND(rt0.c2)))OR(x'559a')))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)) END) ISNULL));
SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (rt0.c0 IN (CAST(rt0.c2 AS TEXT), ((((vt1.c0)OR('')))AND(0.8015140621790255))));
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE (LOWER(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT (LOWER(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE (((LOWER(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1 HAVING SUM(((COUNT(vt0.c0))>>(GROUP_CONCAT(MIN(MIN(TOTAL(vt1.c0))))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (SUM(((COUNT(vt0.c0))>>(GROUP_CONCAT(MIN(MIN(TOTAL(vt1.c0))))))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1 HAVING ((SUM(((COUNT(vt0.c0))>>(GROUP_CONCAT(MIN(MIN(TOTAL(vt1.c0)))))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((('248549979' COLLATE NOCASE)AND((- (vt0.c0)))))AND(0Xffffffffef7dd212))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((('248549979' COLLATE NOCASE)AND((- (vt0.c0)))))AND(0Xffffffffef7dd212))))) UNION ALL SELECT * FROM vt0 WHERE ((((((('248549979' COLLATE NOCASE)AND((- (vt0.c0)))))AND(0Xffffffffef7dd212))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (json_remove(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c1) NOT NULL))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (json_remove(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c1) NOT NULL))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((json_remove(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c1) NOT NULL))) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((- (vt0.c1 COLLATE BINARY))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((- (vt0.c1 COLLATE BINARY))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((- (vt0.c1 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((vt0.c1 IN (vt0.c1, MAX(TOTAL(MIN(vt0.c1))))))>>(vt0.c1)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((((vt0.c1 IN (vt0.c1, MAX(TOTAL(MIN(vt0.c1))))))>>(vt0.c1)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((((vt0.c1 IN (vt0.c1, MAX(TOTAL(MIN(vt0.c1))))))>>(vt0.c1))) ISNULL);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON (((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c1))))OR(CASE '678979063'  WHEN rt0.c0 THEN vt0.c1 END)) INNER JOIN vt1 ON -2.6385989E8;
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON (((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c1))))OR(CASE '678979063'  WHEN rt0.c0 THEN vt0.c1 END)) INNER JOIN vt1 ON -2.6385989E8 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))<(vt1.c0 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c1))))OR(CASE '678979063'  WHEN rt0.c0 THEN vt0.c1 END)) INNER JOIN vt1 ON -2.6385989E8 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))<(vt1.c0 COLLATE NOCASE))))) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN vt0 ON (((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c1))))OR(CASE '678979063'  WHEN rt0.c0 THEN vt0.c1 END)) INNER JOIN vt1 ON -2.6385989E8 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))<(vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON (((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c1))))OR(CASE '678979063'  WHEN rt0.c0 THEN vt0.c1 END)) INNER JOIN vt1 ON -2.6385989E8;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (0.997608390641644) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (0.997608390641644))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((0.997608390641644) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (HEX(DISTINCT (rt0.c1 IN (rt0.c1, rt0.c1)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (HEX(DISTINCT (rt0.c1 IN (rt0.c1, rt0.c1)))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((HEX(DISTINCT (rt0.c1 IN (rt0.c1, rt0.c1)))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c0, rt0.c1, vt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1;
SELECT rt0.c0, rt0.c1, vt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, vt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1;
SELECT rt0.c0, rt0.c1, vt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, vt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((NOT (vt1.c0)), ((vt1.c0)!=(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))>=(((((vt1.c0))<((vt1.c0))), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), vt1.c0 COLLATE BINARY)))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((NOT (vt1.c0)), ((vt1.c0)<>(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))>=(((((vt1.c0))<((vt1.c0))), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), vt1.c0 COLLATE BINARY)))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((NOT (vt1.c0)), ((vt1.c0)!=(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))>=(((((vt1.c0))<((vt1.c0))), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), vt1.c0 COLLATE BINARY)))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((((vt1.c0)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((rt0.c1 COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((((vt1.c0)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((rt0.c1 COLLATE NOCASE)))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((((vt1.c0)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((rt0.c1 COLLATE NOCASE)))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt0, vt1 WHERE (CASE ((((rt0.c1)OR(vt1.c0)))AND(vt0.c1))  WHEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)) THEN (((rt0.c2))>((vt0.c0))) WHEN ((NULL) IS TRUE) THEN rt0.c1 COLLATE NOCASE WHEN rt0.c2 COLLATE RTRIM THEN MAX(rt0.c2, vt0.c0) END) GROUP BY rt0.c0, vt1.c0 UNION SELECT rt0.c0, vt1.c0 FROM rt0, vt0, vt1 WHERE ((NOT (CASE ((((rt0.c1)OR(vt1.c0)))AND(vt0.c1))  WHEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)) THEN (((rt0.c2))>((vt0.c0))) WHEN ((NULL) IS TRUE) THEN rt0.c1 COLLATE NOCASE WHEN rt0.c2 COLLATE RTRIM THEN MAX(rt0.c2, vt0.c0) END))) GROUP BY rt0.c0, vt1.c0 UNION SELECT rt0.c0, vt1.c0 FROM rt0, vt0, vt1 WHERE (((CASE ((((rt0.c1)OR(vt1.c0)))AND(vt0.c1))  WHEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)) THEN (((rt0.c2))>((vt0.c0))) WHEN ((NULL) IS TRUE) THEN rt0.c1 COLLATE NOCASE WHEN rt0.c2 COLLATE RTRIM THEN MAX(rt0.c2, vt0.c0) END) ISNULL)) GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt0, vt1 GROUP BY rt0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST((((vt0.c0, vt0.c1, vt0.c0))=((vt0.c0, vt0.c1, vt0.c1))) AS INTEGER)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST((((vt0.c0, vt0.c1, vt0.c0))==((vt0.c0, vt0.c1, vt0.c1))) AS INTEGER)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST((((vt0.c0, vt0.c1, vt0.c0))=((vt0.c0, vt0.c1, vt0.c1))) AS INTEGER)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (((((vt1.c0) ISNULL)) NOT BETWEEN (((((rt0.c1)OR(rt0.c2)))OR(vt1.c0))) AND (x''))) UNION SELECT DISTINCT rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (((((vt1.c0) ISNULL)) NOT BETWEEN (((((rt0.c1)OR(rt0.c2)))OR(vt1.c0))) AND (x''))))) UNION SELECT DISTINCT rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (((((((vt1.c0) ISNULL)) NOT BETWEEN (((((rt0.c1)OR(rt0.c2)))OR(vt1.c0))) AND (x''))) ISNULL));
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (CAST(NULL AS REAL)) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (CAST(NULL AS REAL)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((CAST(NULL AS REAL)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0 HAVING AVG(LIKELIHOOD(COUNT(*), 0.0329513938014907)) UNION ALL SELECT ALL vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0 HAVING (NOT (AVG(LIKELIHOOD(COUNT(*), 0.0329513938014907)))) UNION ALL SELECT vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0 HAVING ((AVG(LIKELIHOOD(COUNT(*), 0.0329513938014907))) ISNULL);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) IS FALSE);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) IS FALSE) WHERE (((NULL) NOTNULL)) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) IS FALSE) WHERE ((NOT (((NULL) NOTNULL)))) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) IS FALSE) WHERE (((((NULL) NOTNULL)) ISNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) IS FALSE);
SELECT DISTINCT rt0.c0 FROM vt0, vt1, rt0;
SELECT DISTINCT rt0.c0 FROM vt0, vt1, rt0 WHERE ((- ((rt0.c0 IN (rt0.c1, vt0.c0))))) UNION SELECT DISTINCT rt0.c0 FROM vt0, vt1, rt0 WHERE ((NOT ((- ((rt0.c0 IN (rt0.c1, vt0.c0))))))) UNION SELECT DISTINCT rt0.c0 FROM vt0, vt1, rt0 WHERE ((((- ((rt0.c0 IN (rt0.c1, vt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM vt0, vt1, rt0;
SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE (0.3699741017788264) GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE ((NOT (0.3699741017788264))) GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE (((0.3699741017788264) ISNULL)) GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(COALESCE(DISTINCT 0Xffffffffca65c686, vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(COALESCE(DISTINCT 0Xffffffffca65c686, vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(COALESCE(DISTINCT 0xffffffffca65c686, vt1.c0))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(COALESCE(DISTINCT 0Xffffffffca65c686, vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(COALESCE(DISTINCT 0Xffffffffca65c686, vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(COALESCE(DISTINCT 0xffffffffca65c686, vt1.c0))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (json_patch(vt0.c0 COLLATE BINARY, 1.411139082E9)) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (json_patch(vt0.c0 COLLATE BINARY, 1.411139082E9)))) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((json_patch(vt0.c0 COLLATE BINARY, 1.411139082E9)) ISNULL));
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER))|(((rt0.c1)AND(rt0.c1))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS INTEGER))|(((rt0.c1)AND(rt0.c1))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c0 AS INTEGER))|(((rt0.c1)AND(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT vt1.c0, rt0.c2, vt0.c1 FROM vt0, vt1 NATURAL JOIN rt0 GROUP BY vt1.c0, rt0.c2, vt0.c1;
SELECT ALL vt1.c0, rt0.c2, vt0.c1 FROM vt0, vt1 NATURAL JOIN rt0 WHERE (ABS(vt0.c0) COLLATE BINARY) GROUP BY vt1.c0, rt0.c2, vt0.c1 UNION SELECT vt1.c0, rt0.c2, vt0.c1 FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((NOT (ABS(vt0.c0) COLLATE BINARY))) GROUP BY vt1.c0, rt0.c2, vt0.c1 UNION SELECT ALL vt1.c0, rt0.c2, vt0.c1 FROM vt0, vt1 NATURAL JOIN rt0 WHERE (((ABS(vt0.c0) COLLATE BINARY) ISNULL)) GROUP BY vt1.c0, rt0.c2, vt0.c1;
SELECT vt1.c0, rt0.c2, vt0.c1 FROM vt0, vt1 NATURAL JOIN rt0 GROUP BY vt1.c0, rt0.c2, vt0.c1;
SELECT ALL vt1.c0, rt0.c0 FROM vt1, rt0 NATURAL JOIN vt0 GROUP BY vt1.c0, rt0.c0;
SELECT vt1.c0, rt0.c0 FROM vt1, rt0 NATURAL JOIN vt0 GROUP BY vt1.c0, rt0.c0 HAVING (+ (SUM(vt1.c0))) UNION ALL SELECT ALL vt1.c0, rt0.c0 FROM vt1, rt0 NATURAL JOIN vt0 GROUP BY vt1.c0, rt0.c0 HAVING (NOT ((+ (SUM(vt1.c0))))) UNION ALL SELECT vt1.c0, rt0.c0 FROM vt1, rt0 NATURAL JOIN vt0 GROUP BY vt1.c0, rt0.c0 HAVING (((+ (SUM(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0, rt0.c0 FROM vt1, rt0 NATURAL JOIN vt0 GROUP BY vt1.c0, rt0.c0;
SELECT vt1.c0, rt0.c0 FROM vt1, rt0 NATURAL JOIN vt0 GROUP BY vt1.c0, rt0.c0 HAVING (+ (SUM(vt1.c0))) UNION ALL SELECT ALL vt1.c0, rt0.c0 FROM vt1, rt0 NATURAL JOIN vt0 GROUP BY vt1.c0, rt0.c0 HAVING (NOT ((+ (SUM(vt1.c0))))) UNION ALL SELECT vt1.c0, rt0.c0 FROM vt1, rt0 NATURAL JOIN vt0 GROUP BY vt1.c0, rt0.c0 HAVING (((+ (SUM(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0, rt0.c0 FROM vt1, rt0 NATURAL JOIN vt0 GROUP BY vt1.c0, rt0.c0;
SELECT ALL SUM(((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)==(NULL))) FROM vt0, rt0;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT (CAST(rt0.c2 AS REAL)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((NOT (CAST(rt0.c2 AS REAL)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((NOT (CAST(rt0.c2 AS REAL)))) ISNULL));
SELECT rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((((x'' IN ())) NOT BETWEEN ((((rt0.c0))==(('1411139082')))) AND (((rt0.c2) BETWEEN (0.6312322162338996) AND (rt0.c2))))) UNION SELECT DISTINCT rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT ((((x'' IN ())) NOT BETWEEN ((((rt0.c0))=(('1411139082')))) AND (((rt0.c2) BETWEEN (0.6312322162338996) AND (rt0.c2))))))) UNION SELECT DISTINCT rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((((((x'' IN ())) NOT BETWEEN ((((rt0.c0))=(('1411139082')))) AND (((rt0.c2) BETWEEN (0.6312322162338996) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0;
SELECT vt0.c1, vt0.c0, rt0.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c1, vt0.c0, rt0.c0;
SELECT ALL vt0.c1, vt0.c0, rt0.c0 FROM vt1, rt0, vt0 WHERE (CASE WHEN ((NULL) BETWEEN (vt0.c0) AND (vt0.c1)) THEN (((vt1.c0, 0x788e524e, vt0.c1))>=((rt0.c2, rt0.c1, vt0.c0))) ELSE TYPEOF(vt0.c1) END) GROUP BY vt0.c1, vt0.c0, rt0.c0 UNION SELECT ALL vt0.c1, vt0.c0, rt0.c0 FROM vt1, rt0, vt0 WHERE ((NOT (CASE WHEN ((NULL) BETWEEN (vt0.c0) AND (vt0.c1)) THEN (((vt1.c0, 0x788e524e, vt0.c1))>=((rt0.c2, rt0.c1, vt0.c0))) ELSE TYPEOF(vt0.c1) END))) GROUP BY vt0.c1, vt0.c0, rt0.c0 UNION SELECT vt0.c1, vt0.c0, rt0.c0 FROM vt1, rt0, vt0 WHERE (((CASE WHEN ((NULL) BETWEEN (vt0.c0) AND (vt0.c1)) THEN (((vt1.c0, 0X788e524e, vt0.c1))>=((rt0.c2, rt0.c1, vt0.c0))) ELSE TYPEOF(vt0.c1) END) ISNULL)) GROUP BY vt0.c1, vt0.c0, rt0.c0;
SELECT vt0.c1, vt0.c0, rt0.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c1, vt0.c0, rt0.c0;
SELECT vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0;
SELECT ALL vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0 HAVING MAX(TOTAL(vt1.c0)) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0 HAVING (NOT (MAX(TOTAL(vt1.c0)))) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0 HAVING ((MAX(TOTAL(vt1.c0))) ISNULL);
SELECT * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE (CASE WHEN (((rt0.c2))>=((rt0.c2))) THEN (~ (rt0.c0)) ELSE (rt0.c1 IN ()) END) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (CASE WHEN (((rt0.c2))>=((rt0.c2))) THEN (~ (rt0.c0)) ELSE (rt0.c1 IN ()) END))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE (((CASE WHEN (((rt0.c2))>=((rt0.c2))) THEN (~ (rt0.c0)) ELSE (rt0.c1 IN ()) END) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ('L)㯤g') UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ('L)㯤g'))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((('L)㯤g') ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((((rt0.c0) NOTNULL))AND((((rt0.c2)) BETWEEN (('')) AND ((rt0.c1))))))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c0)>>(0.9124848494777763)))))AND(((rt0.c0) NOT NULL)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 NOT INDEXED WHERE ((NOT (((((((((((rt0.c0) NOTNULL))AND((((rt0.c2)) BETWEEN (('')) AND ((rt0.c1))))))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c0)>>(0.9124848494777763)))))AND(((rt0.c0) NOT NULL)))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((((((rt0.c0) NOTNULL))AND((((rt0.c2)) BETWEEN (('')) AND ((rt0.c1))))))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c0)>>(0.9124848494777763)))))AND(((rt0.c0) NOT NULL)))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c2 HAVING AVG(MIN(vt0.c1)) UNION ALL SELECT rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c2 HAVING (NOT (AVG(MIN(vt0.c1)))) UNION ALL SELECT rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c2 HAVING ((AVG(MIN(vt0.c1))) ISNULL);
SELECT ALL rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1, vt0, rt0;
SELECT ALL rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1, vt0, rt0 WHERE (-1530777043) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1, vt0 NOT INDEXED, rt0 WHERE ((NOT (-1530777043))) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1, vt0, rt0 WHERE (((-1530777043) ISNULL));
SELECT ALL rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1, vt0, rt0;
SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((((vt0.c0 COLLATE NOCASE))<((0.4334008371930005)))) UNION SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((NOT ((((vt0.c0 COLLATE NOCASE))<((0.4334008371930005)))))) UNION SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((((((vt0.c0 COLLATE NOCASE))<((0.4334008371930005)))) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0 FROM rt0, vt0;
SELECT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt0.c1) ISNULL) AS NUMERIC) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt0.c1) ISNULL) AS NUMERIC) WHERE (vt0.c1) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt0.c1) ISNULL) AS NUMERIC) WHERE ((NOT (vt0.c1))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt0.c1) ISNULL) AS NUMERIC) WHERE (((vt0.c1) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt0.c1) ISNULL) AS NUMERIC) GROUP BY vt1.c0;
SELECT vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1;
SELECT vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1 HAVING TOTAL(((AVG(rt0.c1)) ISNULL)) UNION ALL SELECT ALL vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1 HAVING (NOT (TOTAL(((AVG(rt0.c1)) ISNULL)))) UNION ALL SELECT vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1 HAVING ((TOTAL(((AVG(rt0.c1)) ISNULL))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))) NOT NULL)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))) NOT NULL)))) UNION ALL SELECT * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))) NOT NULL)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c1 FROM rt0, vt0;
SELECT DISTINCT vt0.c1 FROM rt0, vt0 WHERE (((RTRIM(vt0.c1))>=(IFNULL(vt0.c1, NULL)))) UNION SELECT DISTINCT vt0.c1 FROM rt0, vt0 WHERE ((NOT (((RTRIM(vt0.c1))>=(IFNULL(vt0.c1, NULL)))))) UNION SELECT DISTINCT vt0.c1 FROM rt0, vt0 WHERE (((((RTRIM(vt0.c1))>=(IFNULL(vt0.c1, NULL)))) ISNULL));
SELECT DISTINCT vt0.c1 FROM rt0, vt0;
SELECT vt1.c0, vt0.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, vt0.c0, rt0.c0;
SELECT ALL vt1.c0, vt0.c0, rt0.c0 FROM rt0, vt0, vt1 WHERE ((x'' IN ())) GROUP BY vt1.c0, vt0.c0, rt0.c0 UNION SELECT ALL vt1.c0, vt0.c0, rt0.c0 FROM rt0, vt0, vt1 WHERE ((NOT ((x'' IN ())))) GROUP BY vt1.c0, vt0.c0, rt0.c0 UNION SELECT ALL vt1.c0, vt0.c0, rt0.c0 FROM rt0, vt0, vt1 WHERE ((((x'' IN ())) ISNULL)) GROUP BY vt1.c0, vt0.c0, rt0.c0;
SELECT vt1.c0, vt0.c0, rt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, vt0.c0, rt0.c0;
SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0 HAVING LAST_INSERT_ROWID() UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (LAST_INSERT_ROWID())) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((LAST_INSERT_ROWID()) ISNULL);
SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0 HAVING LAST_INSERT_ROWID() UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (LAST_INSERT_ROWID())) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((LAST_INSERT_ROWID()) ISNULL);
SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((CASE vt0.c1  WHEN rt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END)OR(((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))))OR(((rt0.c2)/(vt0.c0))));
SELECT rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((CASE vt0.c1  WHEN rt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END)OR(((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))))OR(((rt0.c2)/(vt0.c0)))) WHERE (IFNULL(DISTINCT (vt0.c1 IN ()), NULL)) UNION ALL SELECT rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((CASE vt0.c1  WHEN rt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END)OR(((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))))OR(((rt0.c2)/(vt0.c0)))) WHERE ((NOT (IFNULL(DISTINCT (vt0.c1 IN ()), NULL)))) UNION ALL SELECT ALL rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((CASE vt0.c1  WHEN rt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END)OR(((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))))OR(((rt0.c2)/(vt0.c0)))) WHERE (((IFNULL(DISTINCT (vt0.c1 IN ()), NULL)) ISNULL));
SELECT ALL rt0.c1, vt0.c1, rt0.c2, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((CASE vt0.c1  WHEN rt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END)OR(((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))))OR(((rt0.c2)/(vt0.c0))));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON (((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1))))!=((rt0.c1))) RIGHT OUTER JOIN rt0 ON CAST(((vt0.c1)>=(vt1.c0)) AS REAL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((HEX(rt0.c0)) NOT BETWEEN ((('旷\r')*(rt0.c2))) AND (((rt0.c0)<(rt0.c1))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((HEX(rt0.c0)) NOT BETWEEN ((('旷\r')*(rt0.c2))) AND (((rt0.c0)<(rt0.c1))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((HEX(rt0.c0)) NOT BETWEEN ((('旷\r')*(rt0.c2))) AND (((rt0.c0)<(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1;
SELECT vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1 HAVING AVG(((SUM(vt1.c0))>(vt1.c0))) UNION ALL SELECT ALL vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1 HAVING (NOT (AVG(((SUM(vt1.c0))>(vt1.c0))))) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1 HAVING ((AVG(((SUM(vt1.c0))>(vt1.c0)))) ISNULL);
SELECT * FROM vt0, rt0, vt1;
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((((((((((rt0.c1) ISNULL))AND((((vt1.c0))>((NULL))))))AND((x'3ba6' IN ()))))OR((vt0.c0 IN ()))))AND(CAST(rt0.c2 AS INTEGER)))) UNION ALL SELECT * FROM vt0, rt0, vt1 WHERE ((NOT (((((((((((rt0.c1) ISNULL))AND((((vt1.c0))>((NULL))))))AND((x'3ba6' IN ()))))OR((vt0.c0 IN ()))))AND(CAST(rt0.c2 AS INTEGER)))))) UNION ALL SELECT * FROM vt0, rt0, vt1 WHERE (((((((((((((rt0.c1) ISNULL))AND((((vt1.c0))>((NULL))))))AND((x'3ba6' IN ()))))OR((vt0.c0 IN ()))))AND(CAST(rt0.c2 AS INTEGER)))) ISNULL));
SELECT * FROM vt0, rt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((((((rt0.c2 IN ()))AND(((rt0.c1) NOT NULL))))AND((vt1.c0 IN ())))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((NOT ((((((rt0.c2 IN ()))AND(((rt0.c1) NOT NULL))))AND((vt1.c0 IN ())))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((((((((rt0.c2 IN ()))AND(((rt0.c1) NOT NULL))))AND((vt1.c0 IN ())))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1;
SELECT rt0.c2, rt0.c0, vt1.c0, vt0.c1, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0, vt0.c1, vt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, vt1.c0, vt0.c1, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 WHERE (((((NULL)OR((vt0.c0 IN (NULL)))))OR(CAST('1485551797' AS TEXT)))) GROUP BY rt0.c2, rt0.c0, vt1.c0, vt0.c1, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, vt1.c0, vt0.c1, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 WHERE ((NOT (((((NULL)OR((vt0.c0 IN (NULL)))))OR(CAST('1485551797' AS TEXT)))))) GROUP BY rt0.c2, rt0.c0, vt1.c0, vt0.c1, vt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, vt1.c0, vt0.c1, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 WHERE (((((((NULL)OR((vt0.c0 IN (NULL)))))OR(CAST('1485551797' AS TEXT)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, vt1.c0, vt0.c1, vt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, vt1.c0, vt0.c1, vt0.c0, rt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0, vt0.c1, vt0.c0, rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS NUMERIC))+(((vt0.c1)+(vt1.c0))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((CAST(vt1.c0 AS NUMERIC))+(((vt0.c1)+(vt1.c0))))))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((((CAST(vt1.c0 AS NUMERIC))+(((vt0.c1)+(vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0)+(vt1.c0)) IN ())) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)+(vt1.c0)) IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)+(vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1;
SELECT rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1 HAVING MAX((~ (COUNT(COUNT(*))))) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1 HAVING (NOT (MAX((~ (COUNT(COUNT(*))))))) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1 HAVING ((MAX((~ (COUNT(COUNT(*)))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((CAST(NULL AS BLOB) IN ())) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((CAST(NULL AS BLOB) IN ())))) UNION ALL SELECT * FROM vt1 WHERE ((((CAST(NULL AS BLOB) IN ())) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))!=(((vt1.c0) ISNULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))!=(((vt1.c0) ISNULL)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))!=(((vt1.c0) ISNULL)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (NOT (((vt1.c0)>=(NULL)))) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (NOT (((vt1.c0)>=(NULL)))) WHERE (UNLIKELY(DISTINCT x'')) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (NOT (((vt1.c0)>=(NULL)))) WHERE ((NOT (UNLIKELY(DISTINCT x'')))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (NOT (((vt1.c0)>=(NULL)))) WHERE (((UNLIKELY(DISTINCT x'')) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (NOT (((vt1.c0)>=(NULL)))) GROUP BY vt1.c0, vt0.c0;
SELECT rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0 HAVING ((rt0.c0)IS NOT(COUNT(TOTAL(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0 HAVING (NOT (((rt0.c0)IS NOT(COUNT(TOTAL(rt0.c1)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0 HAVING ((((rt0.c0)IS NOT(COUNT(TOTAL(rt0.c1))))) ISNULL);
SELECT vt1.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((((((vt0.c1)AND(vt1.c0)))OR(vt0.c1)))+(((NULL) BETWEEN (rt0.c1) AND (vt1.c0)))) CROSS JOIN vt0 ON (((NULL COLLATE RTRIM))<((CAST(rt0.c2 AS NUMERIC))));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1, vt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1, vt0 WHERE (((((vt1.c0)>(x''))) ISNULL)) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1, vt0 WHERE ((NOT (((((vt1.c0)>(x''))) ISNULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1, vt0 WHERE (((((((vt1.c0)>(x''))) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1, vt0;
SELECT ALL rt0.c1, rt0.c0, vt0.c1 FROM rt0, vt1 LEFT OUTER JOIN vt0 ON ((+ ('139371023')) IN ()) GROUP BY rt0.c1, rt0.c0, vt0.c1;
SELECT ALL rt0.c1, rt0.c0, vt0.c1 FROM rt0, vt1 LEFT OUTER JOIN vt0 ON ((+ ('139371023')) IN ()) WHERE (((IFNULL(rt0.c2, rt0.c0))<<((rt0.c0 IN ())))) GROUP BY rt0.c1, rt0.c0, vt0.c1 UNION SELECT ALL rt0.c1, rt0.c0, vt0.c1 FROM rt0, vt1 LEFT OUTER JOIN vt0 ON ((+ ('139371023')) IN ()) WHERE ((NOT (((IFNULL(rt0.c2, rt0.c0))<<((rt0.c0 IN ())))))) GROUP BY rt0.c1, rt0.c0, vt0.c1 UNION SELECT ALL rt0.c1, rt0.c0, vt0.c1 FROM rt0, vt1 LEFT OUTER JOIN vt0 ON ((+ ('139371023')) IN ()) WHERE (((((IFNULL(rt0.c2, rt0.c0))<<((rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt0.c1;
SELECT ALL rt0.c1, rt0.c0, vt0.c1 FROM rt0, vt1 LEFT OUTER JOIN vt0 ON ((+ ('139371023')) IN ()) GROUP BY rt0.c1, rt0.c0, vt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(TOTAL(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(TOTAL(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(TOTAL(vt1.c0))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (NULL) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (NULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((NULL) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))) AND (((vt0.c1)IS NOT(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))) AND (((vt0.c1)IS NOT(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))) AND (((vt0.c1)IS NOT(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 WHERE (0X4fb0053c) GROUP BY vt0.c0, vt0.c1, vt1.c0 UNION SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((NOT (0X4fb0053c))) GROUP BY vt0.c0, vt0.c1, vt1.c0 UNION SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 WHERE (((0X4fb0053c) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c1, vt0.c0 FROM vt0 CROSS JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((('221620417' IN ()))) AND ((CAST(rt0.c2 AS TEXT)))) LEFT OUTER JOIN vt1 ON ((rt0.c1 COLLATE NOCASE)GLOB(LIKE(vt0.c1, rt0.c1))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c1, vt0.c0 FROM vt0 CROSS JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((('221620417' IN ()))) AND ((CAST(rt0.c2 AS TEXT)))) LEFT OUTER JOIN vt1 ON ((rt0.c1 COLLATE NOCASE)GLOB(LIKE(vt0.c1, rt0.c1))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c1, vt0.c0 HAVING (((AVG(rt0.c1), vt0.c1, GROUP_CONCAT(rt0.c2), vt0.c1, TOTAL(vt1.c0))) BETWEEN ((COUNT(*), AVG(MAX(0.7122164216387928)), COUNT(6.68815702E8), ((rt0.c0)&(vt0.c1)), MAX(GROUP_CONCAT(MAX(GROUP_CONCAT(vt0.c1)))))) AND ((SUM(COUNT(*)), CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 END, COUNT(*), SUM(vt0.c1), GROUP_CONCAT(MAX(COUNT(*)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c1, vt0.c0 FROM vt0 CROSS JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((('221620417' IN ()))) AND ((CAST(rt0.c2 AS TEXT)))) LEFT OUTER JOIN vt1 ON ((rt0.c1 COLLATE NOCASE)GLOB(LIKE(vt0.c1, rt0.c1))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c1, vt0.c0 HAVING (NOT ((((AVG(rt0.c1), vt0.c1, GROUP_CONCAT(rt0.c2), vt0.c1, TOTAL(vt1.c0))) BETWEEN ((COUNT(*), AVG(MAX(0.7122164216387928)), COUNT(6.68815702E8), ((rt0.c0)&(vt0.c1)), MAX(GROUP_CONCAT(MAX(GROUP_CONCAT(vt0.c1)))))) AND ((SUM(COUNT(*)), CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 END, COUNT(*), SUM(vt0.c1), GROUP_CONCAT(MAX(COUNT(*)))))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c1, vt0.c0 FROM vt0 CROSS JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((('221620417' IN ()))) AND ((CAST(rt0.c2 AS TEXT)))) LEFT OUTER JOIN vt1 ON ((rt0.c1 COLLATE NOCASE)GLOB(LIKE(vt0.c1, rt0.c1))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c1, vt0.c0 HAVING (((((AVG(rt0.c1), vt0.c1, GROUP_CONCAT(rt0.c2), vt0.c1, TOTAL(vt1.c0))) BETWEEN ((COUNT(*), AVG(MAX(0.7122164216387928)), COUNT(6.68815702E8), ((rt0.c0)&(vt0.c1)), MAX(GROUP_CONCAT(MAX(GROUP_CONCAT(vt0.c1)))))) AND ((SUM(COUNT(*)), CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 END, COUNT(*), SUM(vt0.c1), GROUP_CONCAT(MAX(COUNT(*))))))) ISNULL);
SELECT * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt0.c1)))<((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0)))))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (((((((vt1.c0)AND(vt1.c0)))OR(vt0.c1)))<((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0)))))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c1)))<((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0)))))) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) NOTNULL);
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) NOTNULL) WHERE (CASE WHEN x'' THEN NULL WHEN CAST(vt1.c0 AS BLOB) THEN rt0.c2 COLLATE RTRIM WHEN 0.8015140621790255 THEN ((rt0.c1)==(rt0.c2)) END) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) NOTNULL) WHERE ((NOT (CASE WHEN x'' THEN NULL WHEN CAST(vt1.c0 AS BLOB) THEN rt0.c2 COLLATE RTRIM WHEN 0.8015140621790255 THEN ((rt0.c1)=(rt0.c2)) END))) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) NOTNULL) WHERE (((CASE WHEN x'' THEN NULL WHEN CAST(vt1.c0 AS BLOB) THEN rt0.c2 COLLATE RTRIM WHEN 0.8015140621790255 THEN ((rt0.c1)==(rt0.c2)) END) ISNULL));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) NOTNULL);
SELECT ALL vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c1))=((NULL)))) NOTNULL) GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c1))=((NULL)))) NOTNULL) WHERE ((((((rt0.c1))!=((rt0.c2))))<((vt0.c1 IN (rt0.c1))))) GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0 UNION SELECT vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c1))==((NULL)))) NOTNULL) WHERE ((NOT ((((((rt0.c1))!=((rt0.c2))))<((vt0.c1 IN (rt0.c1))))))) GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0 UNION SELECT vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c1))==((NULL)))) NOTNULL) WHERE ((((((((rt0.c1))<>((rt0.c2))))<((vt0.c1 IN (rt0.c1))))) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c1))=((NULL)))) NOTNULL) GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c0, vt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c0, vt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1, vt0.c0, rt0.c2 HAVING GROUP_CONCAT(CAST(COUNT(GROUP_CONCAT(rt0.c1)) AS TEXT)) UNION ALL SELECT rt0.c0, vt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1, vt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(CAST(COUNT(GROUP_CONCAT(rt0.c1)) AS TEXT)))) UNION ALL SELECT rt0.c0, vt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1, vt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(CAST(COUNT(GROUP_CONCAT(rt0.c1)) AS TEXT))) ISNULL);
SELECT MIN(UPPER(((0.7399129457203601) NOT BETWEEN (vt1.c0) AND (rt0.c2)))) FROM vt1, rt0 ORDER BY CASE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((4.87264394E8)))  WHEN '' THEN (rt0.c1 IN ()) ELSE CAST(vt1.c0 AS BLOB) END ASC;
SELECT * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (((((((((((vt1.c0)==(rt0.c2)))AND(((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))))OR(((rt0.c1)>=(rt0.c2)))))AND(((rt0.c1)OR(rt0.c2)))))AND((rt0.c0 IN ())))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (((((((((((vt1.c0)=(rt0.c2)))AND(((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))))OR(((rt0.c1)>=(rt0.c2)))))AND(((rt0.c1)OR(rt0.c2)))))AND((rt0.c0 IN ())))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((((((((((((vt1.c0)=(rt0.c2)))AND(((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))))OR(((rt0.c1)>=(rt0.c2)))))AND(((rt0.c1)OR(rt0.c2)))))AND((rt0.c0 IN ())))) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (LOWER((((rt0.c0, rt0.c2, rt0.c1))<((rt0.c0, rt0.c2, rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (LOWER((((rt0.c0, rt0.c2, rt0.c1))<((rt0.c0, rt0.c2, rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((LOWER((((rt0.c0, rt0.c2, rt0.c1))<((rt0.c0, rt0.c2, rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0)==(rt0.c1))) NOTNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0)==(rt0.c1))) NOTNULL)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c0)=(rt0.c1))) NOTNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0 FROM vt1 NOT INDEXED, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING CAST(NULL AS NUMERIC) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(NULL AS NUMERIC))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((CAST(NULL AS NUMERIC)) ISNULL);
SELECT vt0.c0 FROM vt1 NOT INDEXED, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING CAST(NULL AS NUMERIC) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(NULL AS NUMERIC))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((CAST(NULL AS NUMERIC)) ISNULL);
SELECT vt0.c0 FROM vt1 NOT INDEXED, vt0 GROUP BY vt0.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER))AND((+ (vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS INTEGER))AND((+ (vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((CAST(vt1.c0 AS INTEGER))AND((+ (vt1.c0))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE (CAST(rt0.c0 COLLATE RTRIM AS TEXT)) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE ((NOT (CAST(rt0.c0 COLLATE RTRIM AS TEXT)))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE (((CAST(rt0.c0 COLLATE RTRIM AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, vt0;
SELECT rt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON LIKELY(DISTINCT CAST(rt0.c2 AS NUMERIC)) GROUP BY rt0.c0, vt0.c1, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON LIKELY(DISTINCT CAST(rt0.c2 AS NUMERIC)) WHERE (((TRIM(DISTINCT rt0.c2))|((rt0.c2 IN ())))) GROUP BY rt0.c0, vt0.c1, rt0.c2, rt0.c1 UNION SELECT rt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON LIKELY(DISTINCT CAST(rt0.c2 AS NUMERIC)) WHERE ((NOT (((TRIM(DISTINCT rt0.c2))|((rt0.c2 IN ())))))) GROUP BY rt0.c0, vt0.c1, rt0.c2, rt0.c1 UNION SELECT rt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON LIKELY(DISTINCT CAST(rt0.c2 AS NUMERIC)) WHERE (((((TRIM(DISTINCT rt0.c2))|((rt0.c2 IN ())))) ISNULL)) GROUP BY rt0.c0, vt0.c1, rt0.c2, rt0.c1;
SELECT rt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON LIKELY(DISTINCT CAST(rt0.c2 AS NUMERIC)) GROUP BY rt0.c0, vt0.c1, rt0.c2, rt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING MAX(MAX(AVG(vt0.c1)) COLLATE NOCASE) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (MAX(MAX(AVG(vt0.c1)) COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((MAX(MAX(AVG(vt0.c1)) COLLATE NOCASE)) ISNULL);
SELECT SUM((((x'8f59' IN ())) ISNULL)) FROM rt0, vt0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) NOT BETWEEN ((((rt0.c1))=((rt0.c0)))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) NOT BETWEEN ((((rt0.c1))==((rt0.c0)))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) NOT BETWEEN ((((rt0.c1))==((rt0.c0)))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (x'') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (x''))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((x'') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c0, rt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1 HAVING ((((rt0.c2)OR(TOTAL(vt0.c0))))OR(GROUP_CONCAT(rt0.c1))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1 HAVING (NOT (((((rt0.c2)OR(TOTAL(vt0.c0))))OR(GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1 HAVING ((((((rt0.c2)OR(TOTAL(vt0.c0))))OR(GROUP_CONCAT(rt0.c1)))) ISNULL);
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c0, rt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1 HAVING ((((rt0.c2)OR(TOTAL(vt0.c0))))OR(GROUP_CONCAT(rt0.c1))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1 HAVING (NOT (((((rt0.c2)OR(TOTAL(vt0.c0))))OR(GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1 HAVING ((((((rt0.c2)OR(TOTAL(vt0.c0))))OR(GROUP_CONCAT(rt0.c1)))) ISNULL);
SELECT ALL vt0.c0, rt0.c0, rt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c1;
SELECT TOTAL(CAST((((vt0.c1))!=((vt0.c1))) AS NUMERIC)) FROM vt0 ORDER BY CASE WHEN ((vt0.c0)GLOB(vt0.c1)) THEN (vt0.c0 IN (vt0.c1)) WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)) WHEN (((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) BETWEEN (('0.6296823643708365', vt0.c0, vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0))) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE CAST(vt0.c0 AS BLOB) END;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE (0X20012b9a IN ())  WHEN 0X3520a0c8 THEN rt0.c2 COLLATE NOCASE WHEN rt0.c1 COLLATE BINARY THEN ((((rt0.c0)OR(NULL)))AND(rt0.c2)) WHEN CASE rt0.c1  WHEN rt0.c1 THEN 0.5530264651611906 WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN '-1985985478' ELSE 'NaN[]' END THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE (0x20012b9a IN ())  WHEN 0x3520a0c8 THEN rt0.c2 COLLATE NOCASE WHEN rt0.c1 COLLATE BINARY THEN ((((rt0.c0)OR(NULL)))AND(rt0.c2)) WHEN CASE rt0.c1  WHEN rt0.c1 THEN 0.5530264651611906 WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN '-1985985478' ELSE 'NaN[]' END THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE (0x20012b9a IN ())  WHEN 0x3520a0c8 THEN rt0.c2 COLLATE NOCASE WHEN rt0.c1 COLLATE BINARY THEN ((((rt0.c0)OR(NULL)))AND(rt0.c2)) WHEN CASE rt0.c1  WHEN rt0.c1 THEN 0.5530264651611906 WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN '-1985985478' ELSE 'NaN[]' END THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((+ ((+ (rt0.c2))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((+ ((+ (rt0.c2))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((+ ((+ (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c1, vt0.c0, rt0.c2, vt0.c1 FROM vt1 LEFT OUTER JOIN vt0 ON ((((x'') NOT BETWEEN (rt0.c2) AND (-1.026625597E9)))GLOB((vt0.c0 IN ()))) RIGHT OUTER JOIN rt0 ON (((rt0.c2) NOT NULL) IN ()) GROUP BY rt0.c1, vt0.c0, rt0.c2, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING 0.30434903557913773 UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (0.30434903557913773)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((0.30434903557913773) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING 0.30434903557913773 UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (0.30434903557913773)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((0.30434903557913773) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0 COLLATE NOCASE) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0 COLLATE NOCASE))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (rt0.c1 IN ()) RIGHT OUTER JOIN rt0 ON ((((rt0.c1 IN (rt0.c2, rt0.c0))))>((CAST(rt0.c0 AS REAL))));
SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (rt0.c1 IN ()) RIGHT OUTER JOIN rt0 ON ((((rt0.c1 IN (rt0.c2, rt0.c0))))>((CAST(rt0.c0 AS REAL)))) WHERE (json_patch(vt0.c1 COLLATE BINARY, '')) UNION SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (rt0.c1 IN ()) RIGHT OUTER JOIN rt0 ON ((((rt0.c1 IN (rt0.c2, rt0.c0))))>((CAST(rt0.c0 AS REAL)))) WHERE ((NOT (json_patch(vt0.c1 COLLATE BINARY, '')))) UNION SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (rt0.c1 IN ()) RIGHT OUTER JOIN rt0 ON ((((rt0.c1 IN (rt0.c2, rt0.c0))))>((CAST(rt0.c0 AS REAL)))) WHERE (((json_patch(vt0.c1 COLLATE BINARY, '')) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (rt0.c1 IN ()) RIGHT OUTER JOIN rt0 ON ((((rt0.c1 IN (rt0.c2, rt0.c0))))>((CAST(rt0.c0 AS REAL))));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((+ (((vt1.c0)==('573276842'))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((+ (((vt1.c0)==('573276842'))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((+ (((vt1.c0)==('573276842'))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING vt0.c1 UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (vt0.c1)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((vt0.c1) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING vt0.c1 UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (vt0.c1)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((vt0.c1) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT * FROM vt0 NATURAL JOIN vt1;
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((((((0.20156696799582585)OR(vt0.c1)))OR(vt0.c1)))) AND (((vt1.c0 IN ()))))) UNION ALL SELECT * FROM vt0 NATURAL JOIN vt1 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((((((0.20156696799582585)OR(vt0.c1)))OR(vt0.c1)))) AND (((vt1.c0 IN ()))))))) UNION ALL SELECT * FROM vt0 NATURAL JOIN vt1 WHERE ((((((vt0.c0)) NOT BETWEEN ((((((0.20156696799582585)OR(vt0.c1)))OR(vt0.c1)))) AND (((vt1.c0 IN ()))))) ISNULL));
SELECT * FROM vt0 NATURAL JOIN vt1;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c1)>>(rt0.c2))) IS FALSE)) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1)>>(rt0.c2))) IS FALSE)))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c1)>>(rt0.c2))) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (((((vt0.c1) ISNULL)) NOT BETWEEN (vt0.c0) AND ((vt0.c0 IN ())))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c1) ISNULL)) NOT BETWEEN (vt0.c0) AND ((vt0.c0 IN ())))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((((((vt0.c1) ISNULL)) NOT BETWEEN (vt0.c0) AND ((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (+ (TOTAL(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((+ (TOTAL(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((+ (TOTAL(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (+ (TOTAL(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((+ (TOTAL(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((+ (TOTAL(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) ISNULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE RTRIM) ISNULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c1 COLLATE RTRIM) ISNULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt1 ON vt1.c0 CROSS JOIN vt0 ON ABS(json_insert(vt0.c1, rt0.c2, vt0.c1, vt1.c0, rt0.c0));
SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (((0Xffffffff91ca2b54)==(rt0.c2))) AND ((+ (NULL))))) GROUP BY rt0.c0, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY) BETWEEN (((0xffffffff91ca2b54)=(rt0.c2))) AND ((+ (NULL))))))) GROUP BY rt0.c0, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((((vt0.c0 COLLATE BINARY) BETWEEN (((0xffffffff91ca2b54)=(rt0.c2))) AND ((+ (NULL))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2;
SELECT ALL rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2 HAVING MIN(AVG(SUM(AVG(MAX(MAX(GROUP_CONCAT(rt0.c2))))))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2 HAVING (NOT (MIN(AVG(SUM(AVG(MAX(MAX(GROUP_CONCAT(rt0.c2))))))))) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2 HAVING ((MIN(AVG(SUM(AVG(MAX(MAX(GROUP_CONCAT(rt0.c2)))))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((NULL, (('0.6296823643708365') IS TRUE), 0X5a5313b)) AND (('-1435834408', rtreenode(rt0.c1, rt0.c1), rt0.c0)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((NULL, (('0.6296823643708365') IS TRUE), 0x5a5313b)) AND (('-1435834408', rtreenode(rt0.c1, rt0.c1), rt0.c0)))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((NULL, (('0.6296823643708365') IS TRUE), 0X5a5313b)) AND (('-1435834408', rtreenode(rt0.c1, rt0.c1), rt0.c0)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE (CAST(0.6693275794001146 COLLATE BINARY AS INTEGER)) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((NOT (CAST(0.6693275794001146 COLLATE BINARY AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE (((CAST(0.6693275794001146 COLLATE BINARY AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (TRIM(DISTINCT (vt0.c0 IN ()), CAST(vt0.c1 AS BLOB))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (TRIM(DISTINCT (vt0.c0 IN ()), CAST(vt0.c1 AS BLOB))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((TRIM(DISTINCT (vt0.c0 IN ()), CAST(vt0.c1 AS BLOB))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt1.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))) AND (((rt0.c0 IN ()))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))) AND (((rt0.c0 IN ()))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))) AND (((rt0.c0 IN ()))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((((x'd8d4')LIKE(vt1.c0)))AND(LIKE(vt1.c0, vt1.c0, 'H'))))AND((vt1.c0 IN ()))))AND(((vt1.c0)%(vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((((((((x'd8d4')LIKE(vt1.c0)))AND(LIKE(vt1.c0, vt1.c0, 'H'))))AND((vt1.c0 IN ()))))AND(((vt1.c0)%(vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((((((x'd8d4')LIKE(vt1.c0)))AND(LIKE(vt1.c0, vt1.c0, 'H'))))AND((vt1.c0 IN ()))))AND(((vt1.c0)%(vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ('536947610') GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ('536947610'))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((('536947610') ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON CAST((~ (vt1.c0)) AS NUMERIC) RIGHT OUTER JOIN vt1 ON rt0.c1 COLLATE NOCASE GROUP BY vt0.c0;
SELECT * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE ('') UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (''))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((('') ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c0 IN ()))+(((rt0.c2)==(vt0.c1)))) CROSS JOIN vt0 ON NULL;
SELECT ALL vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c0;
SELECT ALL vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0, vt0 WHERE (((CAST('z]' AS REAL))%((~ (rt0.c1))))) GROUP BY vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c0 UNION SELECT ALL vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0, vt0 WHERE ((NOT (((CAST('z]' AS REAL))%((~ (rt0.c1))))))) GROUP BY vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c0 UNION SELECT vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0, vt0 WHERE (((((CAST('z]' AS REAL))%((~ (rt0.c1))))) ISNULL)) GROUP BY vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c0;
SELECT ALL vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c1, rt0.c0, vt0.c0, rt0.c1, rt0.c2, vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0 HAVING CASE AVG(vt1.c0)  WHEN ((SUM(COUNT(*)))<(rt0.c1)) THEN MIN(rt0.c0) WHEN NULL THEN vt0.c0 WHEN COUNT(COUNT(vt1.c0)) THEN GROUP_CONCAT(vt1.c0) WHEN MAX(vt0.c1) THEN ((vt1.c0)OR(COUNT(*))) WHEN ((COUNT(*)) ISNULL) THEN COUNT(vt0.c0) ELSE vt0.c0 COLLATE RTRIM END UNION ALL SELECT vt1.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (CASE AVG(vt1.c0)  WHEN ((SUM(COUNT(*)))<(rt0.c1)) THEN MIN(rt0.c0) WHEN NULL THEN vt0.c0 WHEN COUNT(COUNT(vt1.c0)) THEN GROUP_CONCAT(vt1.c0) WHEN MAX(vt0.c1) THEN ((vt1.c0)OR(COUNT(*))) WHEN ((COUNT(*)) ISNULL) THEN COUNT(vt0.c0) ELSE vt0.c0 COLLATE RTRIM END)) UNION ALL SELECT vt1.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0 HAVING ((CASE AVG(vt1.c0)  WHEN ((SUM(COUNT(*)))<(rt0.c1)) THEN MIN(rt0.c0) WHEN NULL THEN vt0.c0 WHEN COUNT(COUNT(vt1.c0)) THEN GROUP_CONCAT(vt1.c0) WHEN MAX(vt0.c1) THEN ((vt1.c0)OR(COUNT(*))) WHEN ((COUNT(*)) ISNULL) THEN COUNT(vt0.c0) ELSE vt0.c0 COLLATE RTRIM END) ISNULL);
SELECT ALL rt0.c0, rt0.c2, vt1.c0, vt0.c1, rt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE BINARY) IS FALSE) INNER JOIN vt1 ON (+ ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((0.9723584204583725)))));
SELECT ALL rt0.c0, rt0.c2, vt1.c0, vt0.c1, rt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE BINARY) IS FALSE) INNER JOIN vt1 ON (+ ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((0.9723584204583725))))) WHERE ((~ (((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0, vt0.c1, rt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE BINARY) IS FALSE) INNER JOIN vt1 ON (+ ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((0.9723584204583725))))) WHERE ((NOT ((~ (((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0, vt0.c1, rt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE BINARY) IS FALSE) INNER JOIN vt1 ON (+ ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((0.9723584204583725))))) WHERE ((((~ (((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2))))) ISNULL));
SELECT ALL rt0.c0, rt0.c2, vt1.c0, vt0.c1, rt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE BINARY) IS FALSE) INNER JOIN vt1 ON (+ ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((0.9723584204583725)))));
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))GLOB('1515259799'))) UNION SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))GLOB('1515259799'))))) UNION SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))GLOB('1515259799'))) ISNULL));
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1;
SELECT ALL vt0.c0, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON CHANGES() LEFT OUTER JOIN vt0 ON UPPER(NULL) GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON CHANGES() LEFT OUTER JOIN vt0 ON UPPER(NULL) WHERE (((((x'26d8') ISNULL)) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) AND (0.05576154157150437))) GROUP BY vt0.c0, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON CHANGES() LEFT OUTER JOIN vt0 ON UPPER(NULL) WHERE ((NOT (((((x'26d8') ISNULL)) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) AND (0.05576154157150437))))) GROUP BY vt0.c0, rt0.c2 UNION SELECT vt0.c0, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON CHANGES() LEFT OUTER JOIN vt0 ON UPPER(NULL) WHERE (((((((x'26d8') ISNULL)) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) AND (0.05576154157150437))) ISNULL)) GROUP BY vt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c2 FROM vt1 FULL OUTER JOIN rt0 ON CHANGES() LEFT OUTER JOIN vt0 ON UPPER(NULL) GROUP BY vt0.c0, rt0.c2;
SELECT ALL rt0.c2, vt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c2, vt0.c1;
SELECT rt0.c2, vt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c2, vt0.c1 HAVING AVG(MIN(COUNT(vt1.c0))) UNION ALL SELECT rt0.c2, vt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c2, vt0.c1 HAVING (NOT (AVG(MIN(COUNT(vt1.c0))))) UNION ALL SELECT ALL rt0.c2, vt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c2, vt0.c1 HAVING ((AVG(MIN(COUNT(vt1.c0)))) ISNULL);
SELECT vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0;
SELECT vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE (((((rt0.c2))<>((rt0.c0))) IN ())) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((NOT (((((rt0.c2))!=((rt0.c0))) IN ())))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE (((((((rt0.c2))!=((rt0.c0))) IN ())) ISNULL));
SELECT vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0 FROM vt1, rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0 FROM vt1, rt0, vt0 WHERE (((CAST(vt0.c1 AS INTEGER))&((NOT ('P'))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0 FROM vt1, rt0, vt0 WHERE ((NOT (((CAST(vt0.c1 AS INTEGER))&((NOT ('P'))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0 FROM vt1, rt0, vt0 WHERE (((((CAST(vt0.c1 AS INTEGER))&((NOT ('P'))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c0 FROM vt1, rt0, vt0;
SELECT vt0.c0, vt0.c1 FROM vt1, vt0, rt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt1, vt0, rt0 WHERE (((rt0.c0)>(0.3288684154534456)) COLLATE RTRIM) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt1, vt0 NOT INDEXED, rt0 WHERE ((NOT (((rt0.c0)>(0.3288684154534456)) COLLATE RTRIM))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt1, vt0, rt0 WHERE (((((rt0.c0)>(0.3288684154534456)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt1, vt0, rt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c1 FROM vt0, rt0, vt1 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, rt0, vt1 GROUP BY vt0.c1 HAVING TOTAL(AVG(vt0.c1)) UNION ALL SELECT ALL vt0.c1 FROM vt0, rt0, vt1 GROUP BY vt0.c1 HAVING (NOT (TOTAL(AVG(vt0.c1)))) UNION ALL SELECT vt0.c1 FROM vt0, rt0, vt1 GROUP BY vt0.c1 HAVING ((TOTAL(AVG(vt0.c1))) ISNULL);
SELECT ALL rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) IS TRUE)) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) IS TRUE)))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) IS TRUE)) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON CAST(TRIM(vt0.c1) AS REAL) INNER JOIN rt0 ON (CAST(vt0.c0 AS NUMERIC) IN ());
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON CAST(TRIM(vt0.c1) AS REAL) INNER JOIN rt0 ON (CAST(vt0.c0 AS NUMERIC) IN ()) WHERE (LIKE(((vt1.c0) IS FALSE), ((vt0.c0)/(vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON CAST(TRIM(vt0.c1) AS REAL) INNER JOIN rt0 ON (CAST(vt0.c0 AS NUMERIC) IN ()) WHERE ((NOT (LIKE(((vt1.c0) IS FALSE), ((vt0.c0)/(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON CAST(TRIM(vt0.c1) AS REAL) INNER JOIN rt0 ON (CAST(vt0.c0 AS NUMERIC) IN ()) WHERE (((LIKE(((vt1.c0) IS FALSE), ((vt0.c0)/(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON CAST(TRIM(vt0.c1) AS REAL) INNER JOIN rt0 ON (CAST(vt0.c0 AS NUMERIC) IN ());
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 NOT INDEXED WHERE (CAST(LIKE(vt1.c0, vt1.c0) AS INTEGER)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(LIKE(vt1.c0, vt1.c0) AS INTEGER)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(LIKE(vt1.c0, vt1.c0) AS INTEGER)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL TOTAL((((0.24267521237704293, vt1.c0 COLLATE BINARY, CASE WHEN NULL THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END))<=(('86881879', CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c1 END, (((rt0.c2))>((0.9108585426496678))))))) FROM rt0, vt1;
SELECT vt0.c1, vt1.c0 FROM vt1, vt0;
SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS BLOB))<<(vt1.c0))) UNION ALL SELECT vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((CAST(vt1.c0 AS BLOB))<<(vt1.c0))))) UNION ALL SELECT vt0.c1, vt1.c0 FROM vt1, vt0 WHERE (((((CAST(vt1.c0 AS BLOB))<<(vt1.c0))) ISNULL));
SELECT vt0.c1, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (vt0.c1) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((~ (rt0.c2)))<>(((0.35398690042037695) IS TRUE)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((~ (rt0.c2)))!=(((0.35398690042037695) IS TRUE)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((~ (rt0.c2)))<>(((0.35398690042037695) IS TRUE)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING AVG(CAST(rt0.c1 AS NUMERIC)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (AVG(CAST(rt0.c1 AS NUMERIC)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((AVG(CAST(rt0.c1 AS NUMERIC))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING AVG(CAST(rt0.c1 AS NUMERIC)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (AVG(CAST(rt0.c1 AS NUMERIC)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((AVG(CAST(rt0.c1 AS NUMERIC))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.4530288750563476 END AS BLOB)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.4530288750563476 END AS BLOB)))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.4530288750563476 END AS BLOB)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN NULL ELSE ((rt0.c1) IS FALSE) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN NULL ELSE ((rt0.c1) IS FALSE) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN NULL ELSE ((rt0.c1) IS FALSE) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0, rt0.c0, vt0.c1 FROM vt0, rt0 INNER JOIN vt1 ON (vt1.c0 COLLATE NOCASE IN ()) GROUP BY vt0.c0, rt0.c0, vt0.c1;
SELECT vt0.c0, rt0.c0, vt0.c1 FROM vt0, rt0 INNER JOIN vt1 ON (vt1.c0 COLLATE NOCASE IN ()) WHERE ('&a䘊f6t') GROUP BY vt0.c0, rt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, rt0.c0, vt0.c1 FROM vt0, rt0 INNER JOIN vt1 ON (vt1.c0 COLLATE NOCASE IN ()) WHERE ((NOT ('&a䘊f6t'))) GROUP BY vt0.c0, rt0.c0, vt0.c1 UNION SELECT vt0.c0, rt0.c0, vt0.c1 FROM vt0, rt0 INNER JOIN vt1 ON (vt1.c0 COLLATE NOCASE IN ()) WHERE ((('&a䘊f6t') ISNULL)) GROUP BY vt0.c0, rt0.c0, vt0.c1;
SELECT vt0.c0, rt0.c0, vt0.c1 FROM vt0, rt0 INNER JOIN vt1 ON (vt1.c0 COLLATE NOCASE IN ()) GROUP BY vt0.c0, rt0.c0, vt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((AVG(MIN(0x37f002c5))) IS TRUE))OR(AVG(0x1ada7709))))AND(IFNULL(AVG(vt1.c0), vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((((AVG(MIN(0X37f002c5))) IS TRUE))OR(AVG(0X1ada7709))))AND(IFNULL(AVG(vt1.c0), vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((((AVG(MIN(0X37f002c5))) IS TRUE))OR(AVG(0x1ada7709))))AND(IFNULL(AVG(vt1.c0), vt1.c0)))) ISNULL);
SELECT ALL vt0.c0, vt1.c0, vt0.c1, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0, vt1;
SELECT ALL vt0.c0, vt1.c0, vt0.c1, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0, vt1 WHERE (CASE (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))  WHEN 0.03526334612881399 THEN CAST(rt0.c0 AS INTEGER) ELSE CAST(rt0.c2 AS NUMERIC) END) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c1, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0, vt1 WHERE ((NOT (CASE (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))  WHEN 0.03526334612881399 THEN CAST(rt0.c0 AS INTEGER) ELSE CAST(rt0.c2 AS NUMERIC) END))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0, vt1 WHERE (((CASE (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))  WHEN 0.03526334612881399 THEN CAST(rt0.c0 AS INTEGER) ELSE CAST(rt0.c2 AS NUMERIC) END) ISNULL));
SELECT ALL vt0.c0, vt1.c0, vt0.c1, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((CAST(NULL AS REAL)) ISNULL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((CAST(NULL AS REAL)) ISNULL)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((CAST(NULL AS REAL)) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(vt0.c1 AS TEXT) LEFT OUTER JOIN vt1 ON x'd6df' GROUP BY vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c2, rt0.c1;
SELECT ALL vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(vt0.c1 AS TEXT) LEFT OUTER JOIN vt1 ON x'd6df' WHERE (LTRIM(((((rt0.c2)AND(vt0.c1)))OR(x'')))) GROUP BY vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c2, rt0.c1 UNION SELECT vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(vt0.c1 AS TEXT) LEFT OUTER JOIN vt1 ON x'd6df' WHERE ((NOT (LTRIM(((((rt0.c2)AND(vt0.c1)))OR(x'')))))) GROUP BY vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c2, rt0.c1 UNION SELECT ALL vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(vt0.c1 AS TEXT) LEFT OUTER JOIN vt1 ON x'd6df' WHERE (((LTRIM(((((rt0.c2)AND(vt0.c1)))OR(x'')))) ISNULL)) GROUP BY vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c2, rt0.c1;
SELECT vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(vt0.c1 AS TEXT) LEFT OUTER JOIN vt1 ON x'd6df' GROUP BY vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c2, rt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT(((SUM(vt0.c1))&(TOTAL(COUNT(*))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(((SUM(vt0.c1))&(TOTAL(COUNT(*))))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(((SUM(vt0.c1))&(TOTAL(COUNT(*)))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((x'' IN ())) UNION ALL SELECT vt0.c0 FROM vt0 NOT INDEXED WHERE ((NOT ((x'' IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((x'' IN ())) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c2, vt0.c1, rt0.c1 FROM vt0, vt1, rt0;
SELECT DISTINCT rt0.c2, vt0.c1, rt0.c1 FROM vt0, vt1, rt0 WHERE ((((rt0.c1)>>(rt0.c0)) IN (((rt0.c1)/(rt0.c0))))) UNION SELECT DISTINCT rt0.c2, vt0.c1, rt0.c1 FROM vt0, vt1, rt0 WHERE ((NOT ((((rt0.c1)>>(rt0.c0)) IN (((rt0.c1)/(rt0.c0))))))) UNION SELECT DISTINCT rt0.c2, vt0.c1, rt0.c1 FROM vt0, vt1, rt0 WHERE ((((((rt0.c1)>>(rt0.c0)) IN (((rt0.c1)/(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c1, rt0.c1 FROM vt0, vt1, rt0;
SELECT vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM rt0, vt0 WHERE (rt0.c2) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM rt0, vt0 WHERE ((NOT (rt0.c2))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM rt0, vt0 NOT INDEXED WHERE (((rt0.c2) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1;
SELECT rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0;
SELECT rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING MAX((- (rt0.c2))) UNION ALL SELECT rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING (NOT (MAX((- (rt0.c2))))) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING ((MAX((- (rt0.c2)))) ISNULL);
SELECT rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0;
SELECT rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING MAX((- (rt0.c2))) UNION ALL SELECT rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING (NOT (MAX((- (rt0.c2))))) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING ((MAX((- (rt0.c2)))) ISNULL);
SELECT rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)<<(vt1.c0)))-(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)<<(vt1.c0)))-(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0)<<(vt1.c0)))-(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON (('')%(((vt0.c0)AND(vt0.c0))));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON (('')%(((vt0.c0)AND(vt0.c0)))) WHERE ((((vt0.c1)<=(vt0.c1)) IN ())) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON (('')%(((vt0.c0)AND(vt0.c0)))) WHERE ((NOT ((((vt0.c1)<=(vt0.c1)) IN ())))) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON (('')%(((vt0.c0)AND(vt0.c0)))) WHERE ((((((vt0.c1)<=(vt0.c1)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON (('')%(((vt0.c0)AND(vt0.c0))));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS BLOB)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0) ISNULL) AS BLOB)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0) ISNULL) AS BLOB)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING MIN(MIN(MIN(rt0.c0))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MIN(MIN(MIN(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MIN(MIN(MIN(rt0.c0)))) ISNULL);
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c1 FROM vt0, rt0;
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c1 FROM vt0, rt0 WHERE (((HEX(rt0.c1))<=(((rt0.c0)<=(vt0.c1))))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c1 FROM vt0, rt0 WHERE ((NOT (((HEX(rt0.c1))<=(((rt0.c0)<=(vt0.c1))))))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c1 FROM vt0, rt0 WHERE (((((HEX(rt0.c1))<=(((rt0.c0)<=(vt0.c1))))) ISNULL));
SELECT ALL vt0.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c1 FROM vt0, rt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT vt0.c1, vt0.c0, vt1.c0, rt0.c0, rt0.c1 FROM vt0, rt0 NATURAL JOIN vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0, rt0.c0, rt0.c1;
SELECT ALL vt0.c1, vt0.c0, vt1.c0, rt0.c0, rt0.c1 FROM vt0, rt0 NATURAL JOIN vt1 WHERE (((CAST('-1342321092' AS TEXT)) BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c0) IS FALSE)))) GROUP BY vt0.c1, vt0.c0, vt1.c0, rt0.c0, rt0.c1 UNION SELECT ALL vt0.c1, vt0.c0, vt1.c0, rt0.c0, rt0.c1 FROM vt0, rt0 NATURAL JOIN vt1 WHERE ((NOT (((CAST('-1342321092' AS TEXT)) BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c0) IS FALSE)))))) GROUP BY vt0.c1, vt0.c0, vt1.c0, rt0.c0, rt0.c1 UNION SELECT vt0.c1, vt0.c0, vt1.c0, rt0.c0, rt0.c1 FROM vt0, rt0 NATURAL JOIN vt1 WHERE (((((CAST('-1342321092' AS TEXT)) BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c0) IS FALSE)))) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt1.c0, rt0.c0, rt0.c1;
SELECT vt0.c1, vt0.c0, vt1.c0, rt0.c0, rt0.c1 FROM vt0, rt0 NATURAL JOIN vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0, rt0.c0, rt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL((NOT (COUNT(MAX(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL((NOT (COUNT(MAX(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL((NOT (COUNT(MAX(vt1.c0)))))) ISNULL);
SELECT ALL MIN(json_valid(((rt0.c0) BETWEEN (rt0.c1) AND (vt1.c0)))) FROM rt0, vt1;
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (CASE ((vt1.c0)%(vt0.c1))  WHEN x'9cee' THEN ((vt0.c1)OR(vt1.c0)) WHEN CAST(vt0.c1 AS REAL) THEN ((vt1.c0)OR(vt0.c1)) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c1)>(vt0.c1)) WHEN vt1.c0 COLLATE BINARY THEN (vt0.c1 IN ()) WHEN (((vt0.c1, vt1.c0, vt0.c1))==((vt0.c1, vt1.c0, vt0.c0))) THEN ((vt0.c0) IS TRUE) ELSE ((vt1.c0)<<(vt0.c1)) END) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (CASE ((vt1.c0)%(vt0.c1))  WHEN x'9cee' THEN ((vt0.c1)OR(vt1.c0)) WHEN CAST(vt0.c1 AS REAL) THEN ((vt1.c0)OR(vt0.c1)) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c1)>(vt0.c1)) WHEN vt1.c0 COLLATE BINARY THEN (vt0.c1 IN ()) WHEN (((vt0.c1, vt1.c0, vt0.c1))==((vt0.c1, vt1.c0, vt0.c0))) THEN ((vt0.c0) IS TRUE) ELSE ((vt1.c0)<<(vt0.c1)) END))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((CASE ((vt1.c0)%(vt0.c1))  WHEN x'9cee' THEN ((vt0.c1)OR(vt1.c0)) WHEN CAST(vt0.c1 AS REAL) THEN ((vt1.c0)OR(vt0.c1)) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c1)>(vt0.c1)) WHEN vt1.c0 COLLATE BINARY THEN (vt0.c1 IN ()) WHEN (((vt0.c1, vt1.c0, vt0.c1))==((vt0.c1, vt1.c0, vt0.c0))) THEN ((vt0.c0) IS TRUE) ELSE ((vt1.c0)<<(vt0.c1)) END) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT rt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0 WHERE (x'77bf') UNION SELECT DISTINCT rt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT (x'77bf'))) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((x'77bf') ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0;
SELECT rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt0.c1 FROM vt1, vt0, rt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))<<((- (rt0.c2))))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt0.c1 FROM vt1, vt0, rt0 WHERE ((NOT (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))<<((- (rt0.c2))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt0.c1 FROM vt1, vt0, rt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))<<((- (rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt0.c1 FROM vt1, vt0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt0.c1;
SELECT vt0.c0, rt0.c2, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, vt0.c1;
SELECT vt0.c0, rt0.c2, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, vt0.c1 HAVING TOTAL(AVG(NULL)) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, vt0.c1 HAVING (NOT (TOTAL(AVG(NULL)))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, vt0.c1 HAVING ((TOTAL(AVG(NULL))) ISNULL);
SELECT * FROM vt0 INNER JOIN vt1 ON (((~ (rt0.c2))) NOT NULL) FULL OUTER JOIN rt0 ON (+ (((vt1.c0) NOT NULL)));
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE ('[]') UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT ('[]'))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((('[]') ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT rt0.c2, vt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c1;
SELECT rt0.c2, vt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt0, vt1 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND ('&u6縖T켐jR3'))) GROUP BY rt0.c2, vt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c1 UNION SELECT rt0.c2, vt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt0, vt1 WHERE ((NOT (((vt0.c1) BETWEEN (vt0.c0) AND ('&u6縖T켐jR3'))))) GROUP BY rt0.c2, vt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c1 UNION SELECT rt0.c2, vt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt0, vt1 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND ('&u6縖T켐jR3'))) ISNULL)) GROUP BY rt0.c2, vt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c1;
SELECT rt0.c2, vt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt0.c1, rt0.c0, vt1.c0, vt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c1, rt0.c2, vt0.c1, rt0.c0 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON ((x'')!=(((((((((rt0.c1)OR(rt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND(rt0.c1)))) GROUP BY vt1.c0, rt0.c1, rt0.c2, vt0.c1, rt0.c0;
SELECT ALL vt1.c0, rt0.c1, rt0.c2, vt0.c1, rt0.c0 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON ((x'')!=(((((((((rt0.c1)OR(rt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND(rt0.c1)))) GROUP BY vt1.c0, rt0.c1, rt0.c2, vt0.c1, rt0.c0 HAVING ((SUM(TOTAL(vt0.c1)))LIKE(CASE TOTAL(vt0.c1)  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2, vt0.c1, rt0.c0 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON ((x'')!=(((((((((rt0.c1)OR(rt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND(rt0.c1)))) GROUP BY vt1.c0, rt0.c1, rt0.c2, vt0.c1, rt0.c0 HAVING (NOT (((SUM(TOTAL(vt0.c1)))LIKE(CASE TOTAL(vt0.c1)  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END)))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2, vt0.c1, rt0.c0 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON ((x'')!=(((((((((rt0.c1)OR(rt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND(rt0.c1)))) GROUP BY vt1.c0, rt0.c1, rt0.c2, vt0.c1, rt0.c0 HAVING ((((SUM(TOTAL(vt0.c1)))LIKE(CASE TOTAL(vt0.c1)  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) ISNULL);
SELECT * FROM vt1 INNER JOIN rt0 ON rt0.c1 FULL OUTER JOIN vt0 ON ((((x'46e92dc3') IS FALSE))|(((0.7062405329978816) NOT BETWEEN (rt0.c1) AND (0.2631360574948288))));
SELECT * FROM vt1 INNER JOIN rt0 ON rt0.c1 FULL OUTER JOIN vt0 ON ((((x'46e92dc3') IS FALSE))|(((0.7062405329978816) NOT BETWEEN (rt0.c1) AND (0.2631360574948288)))) WHERE ((((rt0.c1 IN ()))<=(((rt0.c0)<<(vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 INNER JOIN rt0 ON rt0.c1 FULL OUTER JOIN vt0 ON ((((x'46e92dc3') IS FALSE))|(((0.7062405329978816) NOT BETWEEN (rt0.c1) AND (0.2631360574948288)))) WHERE ((NOT ((((rt0.c1 IN ()))<=(((rt0.c0)<<(vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1 INNER JOIN rt0 ON rt0.c1 FULL OUTER JOIN vt0 ON ((((x'46e92dc3') IS FALSE))|(((0.7062405329978816) NOT BETWEEN (rt0.c1) AND (0.2631360574948288)))) WHERE ((((((rt0.c1 IN ()))<=(((rt0.c0)<<(vt1.c0))))) ISNULL));
SELECT * FROM vt1 INNER JOIN rt0 ON rt0.c1 FULL OUTER JOIN vt0 ON ((((x'46e92dc3') IS FALSE))|(((0.7062405329978816) NOT BETWEEN (rt0.c1) AND (0.2631360574948288))));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((('') NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (CAST(rt0.c2 AS INTEGER)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((('') NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (CAST(rt0.c2 AS INTEGER)))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((('') NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (CAST(rt0.c2 AS INTEGER)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((COALESCE(DISTINCT vt0.c0, vt0.c0)) BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((COALESCE(DISTINCT vt0.c0, vt0.c0)) BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((COALESCE(DISTINCT vt0.c0, vt0.c0)) BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1, rt0.c2, vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN rt0 ON DATETIME((- (vt0.c1)), ((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)), ((('130687678'))>=((rt0.c1)))) INNER JOIN vt0 ON ((((vt0.c1) NOT NULL))==(((((rt0.c2)AND(vt0.c0)))AND(x'')))) GROUP BY rt0.c1, rt0.c2, vt0.c0, vt1.c0;
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c0)<=(vt0.c0)))) AND ((((0.0682555265771646) BETWEEN (vt0.c1) AND (vt0.c1)))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c1)) BETWEEN ((((vt0.c0)<=(vt0.c0)))) AND ((((0.0682555265771646) BETWEEN (vt0.c1) AND (vt0.c1)))))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((((vt0.c0)<=(vt0.c0)))) AND ((((0.0682555265771646) BETWEEN (vt0.c1) AND (vt0.c1)))))) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c1, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c1, rt0.c1 FROM vt0, rt0 WHERE (((vt0.c1) NOT BETWEEN (((((vt0.c0)AND(NULL)))AND(vt0.c1))) AND (((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.c1, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((vt0.c1) NOT BETWEEN (((((vt0.c0)AND(NULL)))AND(vt0.c1))) AND (((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.c1, rt0.c1 FROM vt0, rt0 WHERE (((((vt0.c1) NOT BETWEEN (((((vt0.c0)AND(NULL)))AND(vt0.c1))) AND (((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c1, rt0.c1 FROM vt0, rt0;
SELECT rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))==((((rt0.c0))>=((vt1.c0)))))) GROUP BY rt0.c0, vt1.c0 UNION SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))==((((rt0.c0))>=((vt1.c0)))))))) GROUP BY rt0.c0, vt1.c0 UNION SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))=((((rt0.c0))>=((vt1.c0)))))) ISNULL)) GROUP BY rt0.c0, vt1.c0;
SELECT rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(CASE WHEN vt0.c0 THEN NULL WHEN COUNT(*) THEN GROUP_CONCAT(vt0.c0) WHEN vt0.c0 THEN vt0.c0 END AS BLOB) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(CASE WHEN vt0.c0 THEN NULL WHEN COUNT(*) THEN GROUP_CONCAT(vt0.c0) WHEN vt0.c0 THEN vt0.c0 END AS BLOB))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(CASE WHEN vt0.c0 THEN NULL WHEN COUNT(*) THEN GROUP_CONCAT(vt0.c0) WHEN vt0.c0 THEN vt0.c0 END AS BLOB)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(CASE WHEN vt0.c0 THEN NULL WHEN COUNT(*) THEN GROUP_CONCAT(vt0.c0) WHEN vt0.c0 THEN vt0.c0 END AS BLOB) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(CASE WHEN vt0.c0 THEN NULL WHEN COUNT(*) THEN GROUP_CONCAT(vt0.c0) WHEN vt0.c0 THEN vt0.c0 END AS BLOB))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(CASE WHEN vt0.c0 THEN NULL WHEN COUNT(*) THEN GROUP_CONCAT(vt0.c0) WHEN vt0.c0 THEN vt0.c0 END AS BLOB)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM vt1, rt0, vt0;
SELECT ALL rt0.c1, rt0.c0 FROM vt1, rt0, vt0 WHERE ((vt0.c0 IN (vt0.c0, 0.11838134430254876)) COLLATE BINARY) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt1, rt0, vt0 WHERE ((NOT ((vt0.c0 IN (vt0.c0, 0.11838134430254876)) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt1, rt0, vt0 NOT INDEXED WHERE ((((vt0.c0 IN (vt0.c0, 0.11838134430254876)) COLLATE BINARY) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM vt1, rt0, vt0;
SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE ((((rt0.c2 IN ()))!=(((vt1.c0)<>(vt0.c1))))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE ((NOT ((((rt0.c2 IN ()))<>(((vt1.c0)<>(vt0.c1))))))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0 WHERE ((((((rt0.c2 IN ()))!=(((vt1.c0)!=(vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, vt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN (CAST(rt0.c2 AS BLOB), NULL COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN (CAST(rt0.c2 AS BLOB), NULL COLLATE RTRIM))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN (CAST(rt0.c2 AS BLOB), NULL COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING AVG(MIN(vt1.c0)) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (AVG(MIN(vt1.c0)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((AVG(MIN(vt1.c0))) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE ((((((vt0.c0, vt0.c0, ''))>((vt0.c0, vt0.c0, rt0.c1))))||(LIKELIHOOD(rt0.c0, 0.3700864141401191)))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT ((((((vt0.c0, vt0.c0, ''))>((vt0.c0, vt0.c0, rt0.c1))))||(LIKELIHOOD(rt0.c0, 0.3700864141401191)))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((((((((vt0.c0, vt0.c0, ''))>((vt0.c0, vt0.c0, rt0.c1))))||(LIKELIHOOD(rt0.c0, 0.3700864141401191)))) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON ((CAST(NULL AS TEXT))GLOB(rt0.c2 COLLATE RTRIM)) RIGHT OUTER JOIN vt1 ON LIKELIHOOD(CAST(vt0.c1 AS NUMERIC), 0.4643934515999947);
SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON ((CAST(NULL AS TEXT))GLOB(rt0.c2 COLLATE RTRIM)) RIGHT OUTER JOIN vt1 ON LIKELIHOOD(CAST(vt0.c1 AS NUMERIC), 0.4643934515999947) WHERE (((((NOT (rt0.c2)), (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))), ((vt0.c0) NOTNULL)))<(((vt0.c0 IN ()), NULLIF(DISTINCT rt0.c1, rt0.c0), ((rt0.c0)&(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON ((CAST(NULL AS TEXT))GLOB(rt0.c2 COLLATE RTRIM)) RIGHT OUTER JOIN vt1 ON LIKELIHOOD(CAST(vt0.c1 AS NUMERIC), 0.4643934515999947) WHERE ((NOT (((((NOT (rt0.c2)), (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))), ((vt0.c0) NOTNULL)))<(((vt0.c0 IN ()), NULLIF(DISTINCT rt0.c1, rt0.c0), ((rt0.c0)&(vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON ((CAST(NULL AS TEXT))GLOB(rt0.c2 COLLATE RTRIM)) RIGHT OUTER JOIN vt1 ON LIKELIHOOD(CAST(vt0.c1 AS NUMERIC), 0.4643934515999947) WHERE (((((((NOT (rt0.c2)), (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))), ((vt0.c0) NOTNULL)))<(((vt0.c0 IN ()), NULLIF(DISTINCT rt0.c1, rt0.c0), ((rt0.c0)&(vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON ((CAST(NULL AS TEXT))GLOB(rt0.c2 COLLATE RTRIM)) RIGHT OUTER JOIN vt1 ON LIKELIHOOD(CAST(vt0.c1 AS NUMERIC), 0.4643934515999947);
SELECT rt0.c2, rt0.c1 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0, vt0 NATURAL JOIN vt1 WHERE ((~ ((- (vt0.c0))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt0 NATURAL JOIN vt1 WHERE ((NOT ((~ ((- (vt0.c0))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0, vt0 NATURAL JOIN vt1 WHERE ((((~ ((- (vt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0, vt0 NATURAL JOIN vt1 GROUP BY rt0.c2, rt0.c1;
SELECT ALL vt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON ((x'') NOT BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE RTRIM GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON ((x'') NOT BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE RTRIM GROUP BY vt0.c0 HAVING TOTAL((NOT (0xffffffffb3c47aef))) UNION ALL SELECT ALL vt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON ((x'') NOT BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE RTRIM GROUP BY vt0.c0 HAVING (NOT (TOTAL((NOT (0Xffffffffb3c47aef))))) UNION ALL SELECT vt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON ((x'') NOT BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE RTRIM GROUP BY vt0.c0 HAVING ((TOTAL((NOT (0xffffffffb3c47aef)))) ISNULL);
SELECT ALL vt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON ((x'') NOT BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE RTRIM GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON ((x'') NOT BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE RTRIM GROUP BY vt0.c0 HAVING TOTAL((NOT (0xffffffffb3c47aef))) UNION ALL SELECT ALL vt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON ((x'') NOT BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE RTRIM GROUP BY vt0.c0 HAVING (NOT (TOTAL((NOT (0Xffffffffb3c47aef))))) UNION ALL SELECT vt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON ((x'') NOT BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE RTRIM GROUP BY vt0.c0 HAVING ((TOTAL((NOT (0xffffffffb3c47aef)))) ISNULL);
SELECT ALL vt0.c0 FROM vt1, rt0 LEFT OUTER JOIN vt0 ON ((x'') NOT BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE RTRIM GROUP BY vt0.c0;
SELECT ALL * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE (((((((rt0.c2)AND(x'aef3')))OR(vt1.c0)))/(CAST(rt0.c2 AS BLOB)))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (((((((rt0.c2)AND(x'aef3')))OR(vt1.c0)))/(CAST(rt0.c2 AS BLOB)))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE (((((((((rt0.c2)AND(x'aef3')))OR(vt1.c0)))/(CAST(rt0.c2 AS BLOB)))) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, 430789057))<=((x'', vt1.c0, vt1.c0))))<>(CAST(vt1.c0 AS REAL)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((((vt1.c0, vt1.c0, 430789057))<=((x'', vt1.c0, vt1.c0))))<>(CAST(vt1.c0 AS REAL)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, 430789057))<=((x'', vt1.c0, vt1.c0))))!=(CAST(vt1.c0 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0, (~ (vt1.c0)), ((vt1.c0)LIKE(vt1.c0))))==((CAST(x'' AS BLOB), ((vt1.c0)>(vt1.c0)), (~ (vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0, (~ (vt1.c0)), ((vt1.c0)LIKE(vt1.c0))))==((CAST(x'' AS BLOB), ((vt1.c0)>(vt1.c0)), (~ (vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0, (~ (vt1.c0)), ((vt1.c0)LIKE(vt1.c0))))==((CAST(x'' AS BLOB), ((vt1.c0)>(vt1.c0)), (~ (vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt0.c1 HAVING (((- (rt0.c1))) NOTNULL) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt0.c1 HAVING (NOT ((((- (rt0.c1))) NOTNULL))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt0.c1 HAVING (((((- (rt0.c1))) NOTNULL)) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt0.c1 HAVING (((- (rt0.c1))) NOTNULL) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt0.c1 HAVING (NOT ((((- (rt0.c1))) NOTNULL))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt0.c1 HAVING (((((- (rt0.c1))) NOTNULL)) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt0.c0, vt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0, vt1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 WHERE (((CAST(rt0.c0 AS INTEGER))LIKE(vt1.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT (((CAST(rt0.c0 AS INTEGER))LIKE(vt1.c0))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt1 WHERE (((((CAST(rt0.c0 AS INTEGER))LIKE(vt1.c0))) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (CAST(DATETIME(vt0.c0, vt0.c0, vt0.c1) AS REAL)) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (CAST(DATETIME(vt0.c0, vt0.c0, vt0.c1) AS REAL)))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((CAST(DATETIME(vt0.c0, vt0.c0, vt0.c1) AS REAL)) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0;
SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((((vt1.c0 IN (vt0.c1))) NOTNULL)) GROUP BY vt0.c1, vt1.c0 UNION SELECT vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((vt1.c0 IN (vt0.c1))) NOTNULL)))) GROUP BY vt0.c1, vt1.c0 UNION SELECT vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((((((vt1.c0 IN (vt0.c1))) NOTNULL)) ISNULL)) GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0;
SELECT rt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt0.c1;
SELECT rt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt0.c1 HAVING (~ (((((COUNT(*))AND(COUNT(*))))OR(rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt0.c1 HAVING (NOT ((~ (((((COUNT(*))AND(COUNT(*))))OR(rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt0.c1 HAVING (((~ (((((COUNT(*))AND(COUNT(*))))OR(rt0.c2))))) ISNULL);
SELECT rt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt0.c1;
SELECT rt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt0.c1 HAVING (~ (((((COUNT(*))AND(COUNT(*))))OR(rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt0.c1 HAVING (NOT ((~ (((((COUNT(*))AND(COUNT(*))))OR(rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt0.c1 HAVING (((~ (((((COUNT(*))AND(COUNT(*))))OR(rt0.c2))))) ISNULL);
SELECT rt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt0.c1;
SELECT * FROM rt0, vt0, vt1;
SELECT ALL * FROM rt0, vt0, vt1 WHERE (vt0.c0) UNION ALL SELECT * FROM rt0, vt0, vt1 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM rt0, vt0, vt1 WHERE (((vt0.c0) ISNULL));
SELECT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (ROUND(rt0.c1 COLLATE BINARY, vt1.c0)) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (ROUND(rt0.c1 COLLATE BINARY, vt1.c0)))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((ROUND(rt0.c1 COLLATE BINARY, vt1.c0)) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0, rt0.c2 FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON json_array_length(CAST(vt0.c1 AS TEXT)) GROUP BY vt0.c0, vt0.c1, vt1.c0, rt0.c2;
SELECT ALL vt0.c0, vt1.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c0, vt1.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c0, vt1.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1 HAVING (SUM(AVG(COUNT(vt0.c1))) IN ()) UNION ALL SELECT ALL vt0.c0, vt1.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c0, vt1.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1 HAVING (NOT ((SUM(AVG(COUNT(vt0.c1))) IN ()))) UNION ALL SELECT ALL vt0.c0, vt1.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c0, vt1.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1 HAVING (((SUM(AVG(COUNT(vt0.c1))) IN ())) ISNULL);
SELECT ALL vt0.c0, vt1.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c0, vt1.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c0, vt1.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1 HAVING (SUM(AVG(COUNT(vt0.c1))) IN ()) UNION ALL SELECT ALL vt0.c0, vt1.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c0, vt1.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1 HAVING (NOT ((SUM(AVG(COUNT(vt0.c1))) IN ()))) UNION ALL SELECT ALL vt0.c0, vt1.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c0, vt1.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1 HAVING (((SUM(AVG(COUNT(vt0.c1))) IN ())) ISNULL);
SELECT ALL vt0.c0, vt1.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM vt1, rt0, vt0 GROUP BY vt0.c0, vt1.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1;
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (CAST(((rt0.c2)GLOB(rt0.c1)) AS TEXT)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST(((rt0.c2)GLOB(rt0.c1)) AS TEXT)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(((rt0.c2)GLOB(rt0.c1)) AS TEXT)) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (LENGTH(vt1.c0 COLLATE RTRIM)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (LENGTH(vt1.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((LENGTH(vt1.c0 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (CAST(vt0.c1 AS NUMERIC)) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (CAST(vt0.c1 AS NUMERIC)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM((((vt1.c0))=((vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM((((vt1.c0))=((vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM((((vt1.c0))==((vt1.c0))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM((((vt1.c0))=((vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM((((vt1.c0))=((vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM((((vt1.c0))==((vt1.c0))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c1 COLLATE BINARY) NOTNULL)) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (((rt0.c1 COLLATE BINARY) NOTNULL)))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((((rt0.c1 COLLATE BINARY) NOTNULL)) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((CASE WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0)+(x'')), (~ (vt1.c0))))<>(((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((x'', x'159a24bb', vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))), vt1.c0 COLLATE BINARY, NULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((CASE WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0)+(x'')), (~ (vt1.c0))))<>(((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((x'', x'159a24bb', vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))), vt1.c0 COLLATE BINARY, NULL)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((CASE WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0)+(x'')), (~ (vt1.c0))))!=(((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((x'', x'159a24bb', vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))), vt1.c0 COLLATE BINARY, NULL)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE (((((rt0.c1)IS NOT(rt0.c1)))<=((~ ('1144429255'))))) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((NOT (((((rt0.c1)IS NOT(rt0.c1)))<=((~ ('1144429255'))))))) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 UNION SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE (((((((rt0.c1)IS NOT(rt0.c1)))<=((~ ('1144429255'))))) ISNULL)) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (0.9727833919836191))) AND ((rt0.c0 IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (0.9727833919836191))) AND ((rt0.c0 IN ())))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (0.9727833919836191))) AND ((rt0.c0 IN ())))) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT vt0.c1, vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((vt0.c1)IS(vt0.c1)) COLLATE BINARY;
SELECT DISTINCT vt0.c1, vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((vt0.c1)IS(vt0.c1)) COLLATE BINARY WHERE (((CAST(vt0.c1 AS REAL))IS NOT(((vt0.c1)-(NULL))))) UNION SELECT DISTINCT vt0.c1, vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((vt0.c1)IS(vt0.c1)) COLLATE BINARY WHERE ((NOT (((CAST(vt0.c1 AS REAL))IS NOT(((vt0.c1)-(NULL))))))) UNION SELECT DISTINCT vt0.c1, vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((vt0.c1)IS(vt0.c1)) COLLATE BINARY WHERE (((((CAST(vt0.c1 AS REAL))IS NOT(((vt0.c1)-(NULL))))) ISNULL));
SELECT DISTINCT vt0.c1, vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((vt0.c1)IS(vt0.c1)) COLLATE BINARY;
SELECT rt0.c0, vt1.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON (((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((SQLITE_VERSION(), NULL, ((vt0.c0)=(rt0.c1)), vt0.c1 COLLATE NOCASE, (((vt0.c0, NULL, rt0.c2))<((rt0.c1, rt0.c1, rt0.c0))))) AND (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((0.29584427300158966))), '668815702', ((vt1.c0) NOT NULL), ((rt0.c1)AND(vt0.c1)), -1.669264581E9 COLLATE NOCASE))) RIGHT OUTER JOIN vt0 ON (((vt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((ABS(DISTINCT vt1.c0), ((vt1.c0)LIKE(vt0.c1)), ((rt0.c2)+(rt0.c2)))) AND (((('536947610') NOT BETWEEN (rt0.c2) AND (0.07090091570474222)), (((rt0.c1, 0.42435709423992596, vt0.c0))>=((rt0.c2, vt0.c1, rt0.c2))), (- (rt0.c0))))) GROUP BY rt0.c0, vt1.c0, vt0.c1;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING (((- (-1.849021612E9))) BETWEEN (MIN(MAX(COUNT(vt1.c0)))) AND (CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING (NOT ((((- (-1.849021612E9))) BETWEEN (MIN(MAX(COUNT(vt1.c0)))) AND (CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING (((((- (-1.849021612E9))) BETWEEN (MIN(MAX(COUNT(vt1.c0)))) AND (CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) ISNULL);
SELECT ALL vt1.c0 FROM vt1, rt0;
SELECT vt1.c0 FROM vt1, rt0 WHERE ((+ (rt0.c1)) COLLATE BINARY) UNION ALL SELECT ALL vt1.c0 FROM vt1, rt0 WHERE ((NOT ((+ (rt0.c1)) COLLATE BINARY))) UNION ALL SELECT ALL vt1.c0 FROM vt1, rt0 WHERE ((((+ (rt0.c1)) COLLATE BINARY) ISNULL));
SELECT ALL vt1.c0 FROM vt1, rt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((+ (((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT ((+ (((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 NOT INDEXED WHERE ((((+ (((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0;
SELECT ALL vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, rt0 WHERE ('.joXz3铤懆z') GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, rt0 WHERE ((NOT ('.joXz3铤懆z'))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, rt0 WHERE ((('.joXz3铤懆z') ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0;
SELECT ALL rt0.c0, vt1.c0, rt0.c1, vt0.c0 FROM vt0, rt0 LEFT OUTER JOIN vt1 ON (NOT (((vt0.c1)|(vt0.c1)))) GROUP BY rt0.c0, vt1.c0, rt0.c1, vt0.c0;
SELECT ALL rt0.c0, vt1.c0, rt0.c1, vt0.c0 FROM vt0, rt0 LEFT OUTER JOIN vt1 ON (NOT (((vt0.c1)|(vt0.c1)))) GROUP BY rt0.c0, vt1.c0, rt0.c1, vt0.c0 HAVING TOTAL(SUM(TOTAL(0.8116471452803528))) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c1, vt0.c0 FROM vt0, rt0 LEFT OUTER JOIN vt1 ON (NOT (((vt0.c1)|(vt0.c1)))) GROUP BY rt0.c0, vt1.c0, rt0.c1, vt0.c0 HAVING (NOT (TOTAL(SUM(TOTAL(0.8116471452803528))))) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c1, vt0.c0 FROM vt0, rt0 LEFT OUTER JOIN vt1 ON (NOT (((vt0.c1)|(vt0.c1)))) GROUP BY rt0.c0, vt1.c0, rt0.c1, vt0.c0 HAVING ((TOTAL(SUM(TOTAL(0.8116471452803528)))) ISNULL);
SELECT ALL * FROM vt0, rt0, vt1;
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((rt0.c1 IN ()) COLLATE RTRIM) UNION ALL SELECT * FROM vt0, rt0, vt1 WHERE ((NOT ((rt0.c1 IN ()) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0, rt0, vt1 WHERE ((((rt0.c1 IN ()) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt0, rt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ())) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0 FROM rt0, vt1 INNER JOIN vt0 ON (((((((((((rt0.c2)AND(vt1.c0)))OR(rt0.c0)))OR(vt1.c0)))AND(rt0.c2)), '-1530777043', rt0.c1 COLLATE RTRIM))==((((rt0.c2)!=(vt0.c0)), CAST(vt0.c1 AS REAL), CASE WHEN rt0.c2 THEN NULL WHEN vt1.c0 THEN vt0.c1 WHEN 'AF' THEN vt0.c1 ELSE vt0.c0 END))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, vt1 INNER JOIN vt0 ON (((((((((((rt0.c2)AND(vt1.c0)))OR(rt0.c0)))OR(vt1.c0)))AND(rt0.c2)), '-1530777043', rt0.c1 COLLATE RTRIM))=((((rt0.c2)!=(vt0.c0)), CAST(vt0.c1 AS REAL), CASE WHEN rt0.c2 THEN NULL WHEN vt1.c0 THEN vt0.c1 WHEN 'AF' THEN vt0.c1 ELSE vt0.c0 END))) WHERE (((((((vt0.c0)AND(rt0.c0)))AND(vt0.c1))) NOT BETWEEN (((((rt0.c2)OR(vt1.c0)))OR(rt0.c1))) AND ((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM rt0, vt1 INNER JOIN vt0 ON (((((((((((rt0.c2)AND(vt1.c0)))OR(rt0.c0)))OR(vt1.c0)))AND(rt0.c2)), '-1530777043', rt0.c1 COLLATE RTRIM))==((((rt0.c2)!=(vt0.c0)), CAST(vt0.c1 AS REAL), CASE WHEN rt0.c2 THEN NULL WHEN vt1.c0 THEN vt0.c1 WHEN 'AF' THEN vt0.c1 ELSE vt0.c0 END))) WHERE ((NOT (((((((vt0.c0)AND(rt0.c0)))AND(vt0.c1))) NOT BETWEEN (((((rt0.c2)OR(vt1.c0)))OR(rt0.c1))) AND ((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt0, vt1 INNER JOIN vt0 ON (((((((((((rt0.c2)AND(vt1.c0)))OR(rt0.c0)))OR(vt1.c0)))AND(rt0.c2)), '-1530777043', rt0.c1 COLLATE RTRIM))=((((rt0.c2)!=(vt0.c0)), CAST(vt0.c1 AS REAL), CASE WHEN rt0.c2 THEN NULL WHEN vt1.c0 THEN vt0.c1 WHEN 'AF' THEN vt0.c1 ELSE vt0.c0 END))) WHERE (((((((((vt0.c0)AND(rt0.c0)))AND(vt0.c1))) NOT BETWEEN (((((rt0.c2)OR(vt1.c0)))OR(rt0.c1))) AND ((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt1 INNER JOIN vt0 ON (((((((((((rt0.c2)AND(vt1.c0)))OR(rt0.c0)))OR(vt1.c0)))AND(rt0.c2)), '-1530777043', rt0.c1 COLLATE RTRIM))==((((rt0.c2)!=(vt0.c0)), CAST(vt0.c1 AS REAL), CASE WHEN rt0.c2 THEN NULL WHEN vt1.c0 THEN vt0.c1 WHEN 'AF' THEN vt0.c1 ELSE vt0.c0 END))) GROUP BY vt0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING AVG(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (AVG(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((AVG(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT ALL MIN(((0.0735103753077666) NOTNULL)) FROM vt1, vt0, rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c0)AND(rt0.c2)))AND(0.5163568906459989)) IN ())) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c0)AND(rt0.c2)))AND(0.5163568906459989)) IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((((rt0.c0)AND(rt0.c2)))AND(0.5163568906459989)) IN ())) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON ((vt1.c0 IN (x'0997')) IN ()) RIGHT OUTER JOIN vt0 ON (((vt0.c1 IN (vt1.c0, rt0.c1, vt0.c0)))<((+ (NULL))));
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON ((vt1.c0 IN (x'0997')) IN ()) RIGHT OUTER JOIN vt0 ON (((vt0.c1 IN (vt1.c0, rt0.c1, vt0.c0)))<((+ (NULL)))) WHERE (COALESCE(DISTINCT CAST(rt0.c0 AS BLOB), vt1.c0 COLLATE NOCASE, ((rt0.c0)GLOB(rt0.c1)), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON ((vt1.c0 IN (x'0997')) IN ()) RIGHT OUTER JOIN vt0 ON (((vt0.c1 IN (vt1.c0, rt0.c1, vt0.c0)))<((+ (NULL)))) WHERE ((NOT (COALESCE(DISTINCT CAST(rt0.c0 AS BLOB), vt1.c0 COLLATE NOCASE, ((rt0.c0)GLOB(rt0.c1)), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON ((vt1.c0 IN (x'0997')) IN ()) RIGHT OUTER JOIN vt0 ON (((vt0.c1 IN (vt1.c0, rt0.c1, vt0.c0)))<((+ (NULL)))) WHERE (((COALESCE(DISTINCT CAST(rt0.c0 AS BLOB), vt1.c0 COLLATE NOCASE, ((rt0.c0)GLOB(rt0.c1)), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON ((vt1.c0 IN (x'0997')) IN ()) RIGHT OUTER JOIN vt0 ON (((vt0.c1 IN (vt1.c0, rt0.c1, vt0.c0)))<((+ (NULL))));
SELECT ALL vt1.c0 FROM vt1 INNER JOIN rt0 ON ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (UNLIKELY(vt0.c1)) AND (UPPER(DISTINCT vt0.c0))) FULL OUTER JOIN vt0 ON (((- (vt0.c1)))||(((rt0.c2)>=(vt0.c1)))) GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(SUM(AVG(SUM(vt0.c1)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(SUM(AVG(SUM(vt0.c1)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(SUM(AVG(SUM(vt0.c1))))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)OR(0.9802621736732351)))OR(''))) IS TRUE)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((((vt1.c0)OR(0.9802621736732351)))OR(''))) IS TRUE)))) UNION ALL SELECT * FROM vt1 WHERE (((((((((vt1.c0)OR(0.9802621736732351)))OR(''))) IS TRUE)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) NOT NULL)) BETWEEN (CASE WHEN 'H7{' THEN vt1.c0 ELSE vt1.c0 END) AND ((~ (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0) NOT NULL)) BETWEEN (CASE WHEN 'H7{' THEN vt1.c0 ELSE vt1.c0 END) AND ((~ (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0) NOT NULL)) BETWEEN (CASE WHEN 'H7{' THEN vt1.c0 ELSE vt1.c0 END) AND ((~ (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c0;
SELECT vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((- (CASE WHEN vt0.c0 THEN rt0.c2 END))) GROUP BY vt0.c1, vt0.c0, rt0.c0 UNION SELECT vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT ((- (CASE WHEN vt0.c0 THEN rt0.c2 END))))) GROUP BY vt0.c1, vt0.c0, rt0.c0 UNION SELECT vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((((- (CASE WHEN vt0.c0 THEN rt0.c2 END))) ISNULL)) GROUP BY vt0.c1, vt0.c0, rt0.c0;
SELECT ALL vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c0;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (((+ (vt0.c1)))==((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((''))))) GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (((+ (vt0.c1)))=((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((''))))) GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING TOTAL(((COUNT(COUNT(vt0.c1))) ISNULL)) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (((+ (vt0.c1)))=((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((''))))) GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING (NOT (TOTAL(((COUNT(COUNT(vt0.c1))) ISNULL)))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (((+ (vt0.c1)))==((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((''))))) GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING ((TOTAL(((COUNT(COUNT(vt0.c1))) ISNULL))) ISNULL);
SELECT MIN('') FROM rt0 ORDER BY TRIM(DISTINCT PRINTF(rt0.c0, rt0.c0, rt0.c0), (((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c0))))  NULLS FIRST;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c1 AS REAL))!=(COALESCE(DISTINCT vt0.c1, vt0.c1)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c1 AS REAL))!=(COALESCE(DISTINCT vt0.c1, vt0.c1)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c1 AS REAL))<>(COALESCE(DISTINCT vt0.c1, vt0.c1)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END ELSE (vt1.c0 IN ()) END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END ELSE (vt1.c0 IN ()) END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END ELSE (vt1.c0 IN ()) END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((((((((vt1.c0))>((vt0.c0))))AND(CAST(vt0.c1 AS INTEGER))))AND(((vt0.c0)<=(0.23397130104630703))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((((((vt1.c0))>((vt0.c0))))AND(CAST(vt0.c1 AS INTEGER))))AND(((vt0.c0)<=(0.23397130104630703))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE ((((((((((vt1.c0))>((vt0.c0))))AND(CAST(vt0.c1 AS INTEGER))))AND(((vt0.c0)<=(0.23397130104630703))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING COUNT(((vt0.c0)OR(vt0.c0))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (COUNT(((vt0.c0)OR(vt0.c0))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((COUNT(((vt0.c0)OR(vt0.c0)))) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING COUNT(((vt0.c0)OR(vt0.c0))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (COUNT(((vt0.c0)OR(vt0.c0))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((COUNT(((vt0.c0)OR(vt0.c0)))) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c1 FROM vt0, vt1;
SELECT ALL vt1.c0, vt0.c1 FROM vt0, vt1 WHERE (vt1.c0) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt0, vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT vt1.c0, vt0.c1 FROM vt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (CASE (rt0.c1 IN (rt0.c0))  WHEN (((rt0.c2, vt1.c0, rt0.c1))>((rt0.c2, rt0.c2, vt1.c0))) THEN (NOT ('')) ELSE CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE 'C-' END END) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (CASE (rt0.c1 IN (rt0.c0))  WHEN (((rt0.c2, vt1.c0, rt0.c1))>((rt0.c2, rt0.c2, vt1.c0))) THEN (NOT ('')) ELSE CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE 'C-' END END))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (((CASE (rt0.c1 IN (rt0.c0))  WHEN (((rt0.c2, vt1.c0, rt0.c1))>((rt0.c2, rt0.c2, vt1.c0))) THEN (NOT ('')) ELSE CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE 'C-' END END) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (x'46b2') GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (x'46b2'))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((x'46b2') ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (((rt0.c0 IN (MIN(MAX(GROUP_CONCAT('182351942'))))))+(GROUP_CONCAT(rt0.c2))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT ((((rt0.c0 IN (MIN(MAX(GROUP_CONCAT('182351942'))))))+(GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (((((rt0.c0 IN (MIN(MAX(GROUP_CONCAT('182351942'))))))+(GROUP_CONCAT(rt0.c2)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c1)OR(vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)&(vt0.c1)) WHEN (vt0.c1 IN ()) THEN ((vt0.c0)>=(vt0.c1)) WHEN (vt0.c1 IN (vt0.c0)) THEN (('+	k{') BETWEEN (vt0.c0) AND (vt0.c1)) END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE ((vt0.c1)OR(vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)&(vt0.c1)) WHEN (vt0.c1 IN ()) THEN ((vt0.c0)>=(vt0.c1)) WHEN (vt0.c1 IN (vt0.c0)) THEN (('+	k{') BETWEEN (vt0.c0) AND (vt0.c1)) END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE ((vt0.c1)OR(vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)&(vt0.c1)) WHEN (vt0.c1 IN ()) THEN ((vt0.c0)>=(vt0.c1)) WHEN (vt0.c1 IN (vt0.c0)) THEN (('+	k{') BETWEEN (vt0.c0) AND (vt0.c1)) END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, vt0.c1, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((vt0.c0) NOT BETWEEN (x'350b') AND (json_insert(rt0.c0, rt0.c0, vt0.c0, vt0.c0, vt0.c1, 0.39015849387992496, rt0.c0)))) UNION SELECT DISTINCT vt0.c0, vt0.c1, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (x'350b') AND (json_insert(rt0.c0, rt0.c0, vt0.c0, vt0.c0, vt0.c1, 0.39015849387992496, rt0.c0)))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((vt0.c0) NOT BETWEEN (x'350b') AND (json_insert(rt0.c0, rt0.c0, vt0.c0, vt0.c0, vt0.c1, 0.39015849387992496, rt0.c0)))) ISNULL));
SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 WHERE ((~ ((rt0.c0 IN ())))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt1 WHERE ((NOT ((~ ((rt0.c0 IN ())))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt1 WHERE ((((~ ((rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING AVG(((vt0.c0) ISNULL)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (AVG(((vt0.c0) ISNULL)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG(((vt0.c0) ISNULL))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING AVG(((vt0.c0) ISNULL)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (AVG(((vt0.c0) ISNULL)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG(((vt0.c0) ISNULL))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (CAST(CAST(rt0.c1 AS REAL) AS REAL)) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (CAST(CAST(rt0.c1 AS REAL) AS REAL)))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((CAST(CAST(rt0.c1 AS REAL) AS REAL)) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (((LAST_INSERT_ROWID())<<(CASE WHEN rt0.c2 THEN NULL END))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (((LAST_INSERT_ROWID())<<(CASE WHEN rt0.c2 THEN NULL END))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((((LAST_INSERT_ROWID())<<(CASE WHEN rt0.c2 THEN NULL END))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 WHERE ((((CAST(vt0.c1 AS REAL), (((vt0.c1))>(('-526897714'))), ((vt0.c1)<=(vt1.c0))))<=((LIKELIHOOD(vt0.c0, 0.5921728926905873), ((x'')!=(vt0.c0)), (vt1.c0 IN (vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((CAST(vt0.c1 AS REAL), (((vt0.c1))>(('-526897714'))), ((vt0.c1)<=(vt1.c0))))<=((LIKELIHOOD(vt0.c0, 0.5921728926905873), ((x'')<>(vt0.c0)), (vt1.c0 IN (vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((((((CAST(vt0.c1 AS REAL), (((vt0.c1))>(('-526897714'))), ((vt0.c1)<=(vt1.c0))))<=((LIKELIHOOD(vt0.c0, 0.5921728926905873), ((x'')<>(vt0.c0)), (vt1.c0 IN (vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON (((((- (vt0.c0)))AND(((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND('P''')))AND(vt0.c0)))))AND((+ (vt0.c0)))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON (((((- (vt0.c0)))AND(((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND('P''')))AND(vt0.c0)))))AND((+ (vt0.c0)))) GROUP BY vt0.c0 HAVING x'' UNION ALL SELECT vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON (((((- (vt0.c0)))AND(((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND('P''')))AND(vt0.c0)))))AND((+ (vt0.c0)))) GROUP BY vt0.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON (((((- (vt0.c0)))AND(((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND('P''')))AND(vt0.c0)))))AND((+ (vt0.c0)))) GROUP BY vt0.c0 HAVING ((x'') ISNULL);
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON (((((- (vt0.c0)))AND(((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND('P''')))AND(vt0.c0)))))AND((+ (vt0.c0)))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON (((((- (vt0.c0)))AND(((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND('P''')))AND(vt0.c0)))))AND((+ (vt0.c0)))) GROUP BY vt0.c0 HAVING x'' UNION ALL SELECT vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON (((((- (vt0.c0)))AND(((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND('P''')))AND(vt0.c0)))))AND((+ (vt0.c0)))) GROUP BY vt0.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON (((((- (vt0.c0)))AND(((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND('P''')))AND(vt0.c0)))))AND((+ (vt0.c0)))) GROUP BY vt0.c0 HAVING ((x'') ISNULL);
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON (((((- (vt0.c0)))AND(((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND('P''')))AND(vt0.c0)))))AND((+ (vt0.c0)))) GROUP BY vt0.c0;
SELECT * FROM vt1, rt0, vt0;
SELECT * FROM vt1 NOT INDEXED, rt0, vt0 WHERE (LENGTH(TYPEOF(vt1.c0))) UNION ALL SELECT * FROM vt1, rt0, vt0 WHERE ((NOT (LENGTH(TYPEOF(vt1.c0))))) UNION ALL SELECT * FROM vt1, rt0, vt0 WHERE (((LENGTH(TYPEOF(vt1.c0))) ISNULL));
SELECT * FROM vt1, rt0, vt0;
SELECT DISTINCT rt0.c0, vt0.c1, rt0.c2, vt1.c0 FROM vt0, rt0, vt1;
SELECT DISTINCT rt0.c0, vt0.c1, rt0.c2, vt1.c0 FROM vt0, rt0, vt1 WHERE ((((vt1.c0)<>(vt0.c1)) IN ())) UNION SELECT DISTINCT rt0.c0, vt0.c1, rt0.c2, vt1.c0 FROM vt0, rt0, vt1 WHERE ((NOT ((((vt1.c0)<>(vt0.c1)) IN ())))) UNION SELECT DISTINCT rt0.c0, vt0.c1, rt0.c2, vt1.c0 FROM vt0, rt0, vt1 WHERE ((((((vt1.c0)<>(vt0.c1)) IN ())) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c1, rt0.c2, vt1.c0 FROM vt0, rt0, vt1;
SELECT ALL vt0.c1, vt1.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON CAST(('430789057' IN (rt0.c2)) AS INTEGER) LEFT OUTER JOIN vt0 ON (((('-899299706') BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (0.8515668837051339) AND ((NOT (vt0.c0)))) GROUP BY vt0.c1, vt1.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c1, vt1.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON CAST(('430789057' IN (rt0.c2)) AS INTEGER) LEFT OUTER JOIN vt0 ON (((('-899299706') BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (0.8515668837051339) AND ((NOT (vt0.c0)))) WHERE (('1E' COLLATE NOCASE IN ())) GROUP BY vt0.c1, vt1.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL vt0.c1, vt1.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON CAST(('430789057' IN (rt0.c2)) AS INTEGER) LEFT OUTER JOIN vt0 ON (((('-899299706') BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (0.8515668837051339) AND ((NOT (vt0.c0)))) WHERE ((NOT (('1E' COLLATE NOCASE IN ())))) GROUP BY vt0.c1, vt1.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL vt0.c1, vt1.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON CAST(('430789057' IN (rt0.c2)) AS INTEGER) LEFT OUTER JOIN vt0 ON (((('-899299706') BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (0.8515668837051339) AND ((NOT (vt0.c0)))) WHERE (((('1E' COLLATE NOCASE IN ())) ISNULL)) GROUP BY vt0.c1, vt1.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c1, vt1.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON CAST(('430789057' IN (rt0.c2)) AS INTEGER) LEFT OUTER JOIN vt0 ON (((('-899299706') BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (0.8515668837051339) AND ((NOT (vt0.c0)))) GROUP BY vt0.c1, vt1.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((0.32077509405267424) IS FALSE) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((0.32077509405267424) IS FALSE))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((0.32077509405267424) IS FALSE)) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((0.32077509405267424) IS FALSE) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((0.32077509405267424) IS FALSE))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((0.32077509405267424) IS FALSE)) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT vt1.c0 FROM rt0, vt0, vt1;
SELECT vt1.c0 FROM rt0, vt0, vt1 WHERE (((((((vt0.c1)<=(rt0.c0)))AND((- (vt0.c0)))))OR(IFNULL(DISTINCT rt0.c2, vt0.c1)))) UNION ALL SELECT vt1.c0 FROM rt0, vt0, vt1 WHERE ((NOT (((((((vt0.c1)<=(rt0.c0)))AND((- (vt0.c0)))))OR(IFNULL(DISTINCT rt0.c2, vt0.c1)))))) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt0, vt1 WHERE (((((((((vt0.c1)<=(rt0.c0)))AND((- (vt0.c0)))))OR(IFNULL(DISTINCT rt0.c2, vt0.c1)))) ISNULL));
SELECT vt1.c0 FROM rt0, vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((((vt0.c1))==((0.05850385601167907))))AND('AuO*Wqo' COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((((vt0.c1))=((0.05850385601167907))))AND('AuO*Wqo' COLLATE RTRIM))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((((((vt0.c1))=((0.05850385601167907))))AND('AuO*Wqo' COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT ALL rt0.c2, vt1.c0, vt0.c1, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c2, vt1.c0, vt0.c1, vt0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, vt1.c0, vt0.c1, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt1, vt0 WHERE (CASE WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CAST(vt1.c0 AS INTEGER) END) GROUP BY rt0.c2, vt1.c0, vt0.c1, vt0.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, vt1.c0, vt0.c1, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt1, vt0 WHERE ((NOT (CASE WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CAST(vt1.c0 AS INTEGER) END))) GROUP BY rt0.c2, vt1.c0, vt0.c1, vt0.c0, rt0.c1, rt0.c0 UNION SELECT rt0.c2, vt1.c0, vt0.c1, vt0.c0, rt0.c1, rt0.c0 FROM rt0 NOT INDEXED, vt1, vt0 WHERE (((CASE WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CAST(vt1.c0 AS INTEGER) END) ISNULL)) GROUP BY rt0.c2, vt1.c0, vt0.c1, vt0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, vt1.c0, vt0.c1, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c2, vt1.c0, vt0.c1, vt0.c0, rt0.c1, rt0.c0;
SELECT ALL vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1 HAVING COUNT((((MIN(vt1.c0)))>=((vt0.c1)))) UNION ALL SELECT ALL vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT((((MIN(vt1.c0)))>=((vt0.c1)))))) UNION ALL SELECT vt0.c1 FROM vt1 NOT INDEXED, vt0 GROUP BY vt0.c1 HAVING ((COUNT((((MIN(vt1.c0)))>=((vt0.c1))))) ISNULL);
SELECT vt0.c1, vt1.c0 FROM vt0, vt1;
SELECT vt0.c1, vt1.c0 FROM vt0, vt1 WHERE (((((((vt1.c0) ISNULL))OR(vt0.c1 COLLATE BINARY)))OR((NOT (vt1.c0))))) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((((((vt1.c0) ISNULL))OR(vt0.c1 COLLATE BINARY)))OR((NOT (vt1.c0))))))) UNION ALL SELECT vt0.c1, vt1.c0 FROM vt0, vt1 WHERE (((((((((vt1.c0) ISNULL))OR(vt0.c1 COLLATE BINARY)))OR((NOT (vt1.c0))))) ISNULL));
SELECT vt0.c1, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((((0.27662283666345855 IN ())) ISNULL)) UNION SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT ((((0.27662283666345855 IN ())) ISNULL)))) UNION SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((((((0.27662283666345855 IN ())) ISNULL)) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT vt0.c0, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c0 FROM vt1, vt0, rt0 WHERE ((((vt0.c0)%(rt0.c2)) IN ((0.5001686833390845 IN ()), '%*լ Q鉛'))) GROUP BY vt0.c0, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c0 FROM vt1, vt0, rt0 WHERE ((NOT ((((vt0.c0)%(rt0.c2)) IN ((0.5001686833390845 IN ()), '%*լ Q鉛'))))) GROUP BY vt0.c0, rt0.c0 UNION SELECT vt0.c0, rt0.c0 FROM vt1, vt0, rt0 WHERE ((((((vt0.c0)%(rt0.c2)) IN ((0.5001686833390845 IN ()), '%*լ Q鉛'))) ISNULL)) GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c0, rt0.c0;
SELECT rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0 HAVING AVG(CAST(SUM(TOTAL(vt0.c0)) AS REAL)) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0 HAVING (NOT (AVG(CAST(SUM(TOTAL(vt0.c0)) AS REAL)))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt1, vt0 GROUP BY rt0.c0 HAVING ((AVG(CAST(SUM(TOTAL(vt0.c0)) AS REAL))) ISNULL);
SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0;
SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (vt1.c0 COLLATE RTRIM) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (vt1.c0 COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (((vt1.c0 COLLATE RTRIM) ISNULL));
SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (((((rt0.c0) BETWEEN (-1.206764572E9) AND (rt0.c1))))==(((((x'')) BETWEEN ((vt0.c1)) AND ((rt0.c1)))))) FULL OUTER JOIN rt0 ON ((((rt0.c0)||(rt0.c1))) BETWEEN (((vt0.c1)GLOB(rt0.c1))) AND (x'96d6'));
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 WHERE (((vt0.c0)&(vt1.c0)) COLLATE NOCASE) GROUP BY vt1.c0, vt0.c1, vt0.c0 UNION SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 WHERE ((NOT (((vt0.c0)&(vt1.c0)) COLLATE NOCASE))) GROUP BY vt1.c0, vt0.c1, vt0.c0 UNION SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 WHERE (((((vt0.c0)&(vt1.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt0.c0 FROM rt0 INNER JOIN vt1 ON NULL LEFT OUTER JOIN vt0 ON (- (('830574042' IN ()))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0 INNER JOIN vt1 ON NULL LEFT OUTER JOIN vt0 ON (- (('830574042' IN ()))) GROUP BY vt0.c0 HAVING GROUP_CONCAT((((rt0.c1))<((MAX(SUM(rt0.c1)))))) UNION ALL SELECT ALL vt0.c0 FROM rt0 INNER JOIN vt1 ON NULL LEFT OUTER JOIN vt0 ON (- (('830574042' IN ()))) GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT((((rt0.c1))<((MAX(SUM(rt0.c1)))))))) UNION ALL SELECT vt0.c0 FROM rt0 INNER JOIN vt1 ON NULL LEFT OUTER JOIN vt0 ON (- (('830574042' IN ()))) GROUP BY vt0.c0 HAVING ((GROUP_CONCAT((((rt0.c1))<((MAX(SUM(rt0.c1))))))) ISNULL);
SELECT ALL TOTAL((((vt1.c0 IN ())) IS FALSE)) FROM vt0, vt1 ORDER BY ((1.342504887E9) IS FALSE) DESC  NULLS FIRST, (NOT (((NULL)<>(vt0.c0)))) ASC;
SELECT * FROM vt0 NATURAL JOIN rt0;
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (0X632bad50) UNION ALL SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (0x632bad50))) UNION ALL SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (((0x632bad50) ISNULL));
SELECT * FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE (CAST(((vt0.c1) IS FALSE) AS INTEGER)) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE ((NOT (CAST(((vt0.c1) IS FALSE) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0 WHERE (((CAST(((vt0.c1) IS FALSE) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, vt0;
SELECT rt0.c0, vt0.c1, rt0.c2, vt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt0.c1, rt0.c2, vt0.c0, vt1.c0, rt0.c1;
SELECT ALL rt0.c0, vt0.c1, rt0.c2, vt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1, vt0 WHERE (((vt1.c0) IS TRUE)) GROUP BY rt0.c0, vt0.c1, rt0.c2, vt0.c0, vt1.c0, rt0.c1 UNION SELECT rt0.c0, vt0.c1, rt0.c2, vt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1, vt0 WHERE ((NOT (((vt1.c0) IS TRUE)))) GROUP BY rt0.c0, vt0.c1, rt0.c2, vt0.c0, vt1.c0, rt0.c1 UNION SELECT rt0.c0, vt0.c1, rt0.c2, vt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1, vt0 WHERE (((((vt1.c0) IS TRUE)) ISNULL)) GROUP BY rt0.c0, vt0.c1, rt0.c2, vt0.c0, vt1.c0, rt0.c1;
SELECT rt0.c0, vt0.c1, rt0.c2, vt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c0, vt0.c1, rt0.c2, vt0.c0, vt1.c0, rt0.c1;
SELECT ALL rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((+ (rt0.c1))) NOTNULL) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((+ (rt0.c1))) NOTNULL) GROUP BY rt0.c1 HAVING (((rt0.c0 COLLATE RTRIM))<((COUNT(*)))) UNION ALL SELECT ALL rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((+ (rt0.c1))) NOTNULL) GROUP BY rt0.c1 HAVING (NOT ((((rt0.c0 COLLATE RTRIM))<((COUNT(*)))))) UNION ALL SELECT ALL rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((+ (rt0.c1))) NOTNULL) GROUP BY rt0.c1 HAVING (((((rt0.c0 COLLATE RTRIM))<((COUNT(*))))) ISNULL);
SELECT ALL rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((+ (rt0.c1))) NOTNULL) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((+ (rt0.c1))) NOTNULL) GROUP BY rt0.c1 HAVING (((rt0.c0 COLLATE RTRIM))<((COUNT(*)))) UNION ALL SELECT ALL rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((+ (rt0.c1))) NOTNULL) GROUP BY rt0.c1 HAVING (NOT ((((rt0.c0 COLLATE RTRIM))<((COUNT(*)))))) UNION ALL SELECT ALL rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((+ (rt0.c1))) NOTNULL) GROUP BY rt0.c1 HAVING (((((rt0.c0 COLLATE RTRIM))<((COUNT(*))))) ISNULL);
SELECT ALL rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((+ (rt0.c1))) NOTNULL) GROUP BY rt0.c1;
SELECT ALL * FROM rt0, vt0, vt1;
SELECT ALL * FROM rt0, vt0, vt1 WHERE (CAST(vt0.c1 AS REAL) COLLATE BINARY) UNION ALL SELECT ALL * FROM rt0, vt0, vt1 WHERE ((NOT (CAST(vt0.c1 AS REAL) COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0, vt0, vt1 WHERE (((CAST(vt0.c1 AS REAL) COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE x''  WHEN json_remove(vt0.c0, vt0.c1) THEN vt0.c1 COLLATE NOCASE WHEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) THEN SQLITE_VERSION() WHEN vt0.c0 COLLATE NOCASE THEN (- (vt0.c1)) WHEN CAST(NULL AS NUMERIC) THEN vt0.c0 COLLATE RTRIM WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN ((vt0.c0)/(vt0.c0)) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE x''  WHEN json_remove(vt0.c0, vt0.c1) THEN vt0.c1 COLLATE NOCASE WHEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) THEN SQLITE_VERSION() WHEN vt0.c0 COLLATE NOCASE THEN (- (vt0.c1)) WHEN CAST(NULL AS NUMERIC) THEN vt0.c0 COLLATE RTRIM WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN ((vt0.c0)/(vt0.c0)) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE x''  WHEN json_remove(vt0.c0, vt0.c1) THEN vt0.c1 COLLATE NOCASE WHEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) THEN SQLITE_VERSION() WHEN vt0.c0 COLLATE NOCASE THEN (- (vt0.c1)) WHEN CAST(NULL AS NUMERIC) THEN vt0.c0 COLLATE RTRIM WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN ((vt0.c0)/(vt0.c0)) END) ISNULL));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, vt1.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt0, vt1, rt0 GROUP BY vt0.c0, vt1.c0, vt0.c1, rt0.c1, rt0.c2;
SELECT ALL vt0.c0, vt1.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt0, vt1, rt0 GROUP BY vt0.c0, vt1.c0, vt0.c1, rt0.c1, rt0.c2 HAVING (RTRIM(0.35281807081547933) IN (TOTAL(MAX(rt0.c1)))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt0, vt1, rt0 NOT INDEXED GROUP BY vt0.c0, vt1.c0, vt0.c1, rt0.c1, rt0.c2 HAVING (NOT ((RTRIM(0.35281807081547933) IN (TOTAL(MAX(rt0.c1)))))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt0, vt1, rt0 GROUP BY vt0.c0, vt1.c0, vt0.c1, rt0.c1, rt0.c2 HAVING (((RTRIM(0.35281807081547933) IN (TOTAL(MAX(rt0.c1))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 END))>=((((0.37425136143086324)<(vt0.c1)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((CASE WHEN vt0.c0 THEN vt0.c0 END))>=((((0.37425136143086324)<(vt0.c1)))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((CASE WHEN vt0.c0 THEN vt0.c0 END))>=((((0.37425136143086324)<(vt0.c1)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((+ (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((+ (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((+ (rt0.c2))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0, rt0.c2 FROM rt0, vt0, vt1 GROUP BY vt0.c0, rt0.c2;
SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0, vt1 WHERE ('퉡[') GROUP BY vt0.c0, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0, vt1 WHERE ((NOT ('퉡['))) GROUP BY vt0.c0, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0, vt1 WHERE ((('퉡[') ISNULL)) GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM rt0, vt0, vt1 GROUP BY vt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, vt0.c1, vt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) IN (TRIM(DISTINCT vt0.c0, rt0.c0), LOWER(vt0.c1))) GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, vt0.c1, vt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) IN (TRIM(DISTINCT vt0.c0, rt0.c0), LOWER(vt0.c1))) GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0, rt0.c2 HAVING SUM(((vt0.c1)/(COUNT('0.32077509405267424')))) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c1, vt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) IN (TRIM(DISTINCT vt0.c0, rt0.c0), LOWER(vt0.c1))) GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0, rt0.c2 HAVING (NOT (SUM(((vt0.c1)/(COUNT('0.32077509405267424')))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c1, vt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) IN (TRIM(DISTINCT vt0.c0, rt0.c0), LOWER(vt0.c1))) GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0, rt0.c2 HAVING ((SUM(((vt0.c1)/(COUNT('0.32077509405267424'))))) ISNULL);
SELECT * FROM vt1, vt0, rt0;
SELECT ALL * FROM vt1, vt0, rt0 WHERE (CAST(((rt0.c2)<(rt0.c0)) AS BLOB)) UNION ALL SELECT * FROM vt1, vt0, rt0 WHERE ((NOT (CAST(((rt0.c2)<(rt0.c0)) AS BLOB)))) UNION ALL SELECT ALL * FROM vt1, vt0, rt0 WHERE (((CAST(((rt0.c2)<(rt0.c0)) AS BLOB)) ISNULL));
SELECT * FROM vt1, vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c2, rt0.c1, vt1.c0, vt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON (((((rt0.c2) NOT BETWEEN (vt0.c1) AND (vt1.c0)), ((rt0.c1)+(vt0.c1)), ((((((((vt1.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)), vt0.c1 COLLATE RTRIM, (- (0x318ec7a9))))<((vt1.c0, CAST(rt0.c1 AS BLOB), ((vt0.c1) IS TRUE), ((vt1.c0)&(vt0.c0)), ((((rt0.c2)OR(rt0.c2)))AND(0.17056914829652547))))) INNER JOIN vt0 ON (~ ('\'));
SELECT rt0.c2, vt0.c1, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, vt0.c1, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE (rt0.c2) GROUP BY rt0.c2, vt0.c1, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, vt0.c1, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2, vt0.c1, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, vt0.c1, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2, vt0.c1, vt0.c0, rt0.c1;
SELECT rt0.c2, vt0.c1, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, vt0.c0, rt0.c1;
SELECT ALL rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c2 HAVING MIN(TOTAL(MAX(GROUP_CONCAT(SUM(SUM(rt0.c1)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c2 HAVING (NOT (MIN(TOTAL(MAX(GROUP_CONCAT(SUM(SUM(rt0.c1)))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c2 HAVING ((MIN(TOTAL(MAX(GROUP_CONCAT(SUM(SUM(rt0.c1))))))) ISNULL);
SELECT ALL TOTAL(CAST(((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c1)) AS BLOB)) FROM rt0, vt1, vt0;
SELECT rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0, vt1, rt0;
SELECT rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0, vt1, rt0 WHERE (((rt0.c1 IN (x'')) IN ())) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0, vt1, rt0 WHERE ((NOT (((rt0.c1 IN (x'')) IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0 NOT INDEXED, vt1, rt0 WHERE (((((rt0.c1 IN (x'')) IN ())) ISNULL));
SELECT rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0, vt1, rt0;
SELECT DISTINCT rt0.c2 FROM vt0, rt0, vt1;
SELECT DISTINCT rt0.c2 FROM vt0, rt0, vt1 WHERE (CAST((+ (rt0.c2)) AS TEXT)) UNION SELECT DISTINCT rt0.c2 FROM vt0, rt0, vt1 WHERE ((NOT (CAST((+ (rt0.c2)) AS TEXT)))) UNION SELECT DISTINCT rt0.c2 FROM vt0, rt0, vt1 WHERE (((CAST((+ (rt0.c2)) AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c2 FROM vt0, rt0, vt1;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((((((((((((vt0.c0)OR(vt0.c1 COLLATE NOCASE)))AND(CAST(vt0.c0 AS INTEGER))))OR(((vt0.c1)<=(vt0.c0)))))OR(vt0.c1 COLLATE RTRIM)))OR((~ (vt0.c1)))))AND('-1845728605'))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT (((((((((((((vt0.c0)OR(vt0.c1 COLLATE NOCASE)))AND(CAST(vt0.c0 AS INTEGER))))OR(((vt0.c1)<=(vt0.c0)))))OR(vt0.c1 COLLATE RTRIM)))OR((~ (vt0.c1)))))AND('-1845728605'))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE (((((((((((((((vt0.c0)OR(vt0.c1 COLLATE NOCASE)))AND(CAST(vt0.c0 AS INTEGER))))OR(((vt0.c1)<=(vt0.c0)))))OR(vt0.c1 COLLATE RTRIM)))OR((~ (vt0.c1)))))AND('-1845728605'))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt1 NOT INDEXED GROUP BY rt0.c1 HAVING MIN(GROUP_CONCAT(rt0.c1)) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING (NOT (MIN(GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1 HAVING ((MIN(GROUP_CONCAT(rt0.c1))) ISNULL);
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)AND(((vt0.c1) NOTNULL))))AND((vt1.c0 IN ()))))OR((NOT (0xffffffffae879c7c)))))OR(((vt0.c1)>=(vt0.c1))))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)AND(((vt0.c1) NOTNULL))))AND((vt1.c0 IN ()))))OR((NOT (0xffffffffae879c7c)))))OR(((vt0.c1)>=(vt0.c1))))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)AND(((vt0.c1) NOTNULL))))AND((vt1.c0 IN ()))))OR((NOT (0xffffffffae879c7c)))))OR(((vt0.c1)>=(vt0.c1))))) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (CASE WHEN rt0.c1 THEN x'' ELSE 0.6227971573151418 END) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c1 THEN x'' ELSE 0.6227971573151418 END))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN x'' ELSE 0.6227971573151418 END) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL vt0.c1, vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM vt0 NATURAL JOIN vt1 WHERE ((+ (((vt0.c0)-(vt0.c1))))) GROUP BY vt0.c1, vt1.c0 UNION SELECT vt0.c1, vt1.c0 FROM vt0 NATURAL JOIN vt1 WHERE ((NOT ((+ (((vt0.c0)-(vt0.c1))))))) GROUP BY vt0.c1, vt1.c0 UNION SELECT vt0.c1, vt1.c0 FROM vt0 NATURAL JOIN vt1 WHERE ((((+ (((vt0.c0)-(vt0.c1))))) ISNULL)) GROUP BY vt0.c1, vt1.c0;
SELECT ALL vt0.c1, vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c1, vt1.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (((GROUP_CONCAT(rt0.c0), GROUP_CONCAT(AVG(AVG(rt0.c1))), rt0.c1)) BETWEEN ((MIN(rt0.c2), MIN(rt0.c1), MIN(rt0.c1))) AND ((CAST(AVG(rt0.c2) AS BLOB), GROUP_CONCAT(GROUP_CONCAT(rt0.c1)), (rt0.c1 IN (COUNT(*)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT ((((GROUP_CONCAT(rt0.c0), GROUP_CONCAT(AVG(AVG(rt0.c1))), rt0.c1)) BETWEEN ((MIN(rt0.c2), MIN(rt0.c1), MIN(rt0.c1))) AND ((CAST(AVG(rt0.c2) AS BLOB), GROUP_CONCAT(GROUP_CONCAT(rt0.c1)), (rt0.c1 IN (COUNT(*)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (((((GROUP_CONCAT(rt0.c0), GROUP_CONCAT(AVG(AVG(rt0.c1))), rt0.c1)) BETWEEN ((MIN(rt0.c2), MIN(rt0.c1), MIN(rt0.c1))) AND ((CAST(AVG(rt0.c2) AS BLOB), GROUP_CONCAT(GROUP_CONCAT(rt0.c1)), (rt0.c1 IN (COUNT(*))))))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (UNLIKELY((rt0.c2 IN ()))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (UNLIKELY((rt0.c2 IN ()))))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((UNLIKELY((rt0.c2 IN ()))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN rt0 WHERE (((((vt0.c1)%(vt0.c0)))&(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))))) UNION SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((NOT (((((vt0.c1)%(vt0.c0)))&(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN rt0 WHERE (((((((vt0.c1)%(vt0.c0)))&(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN rt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING SUM(AVG(rt0.c0)) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING (NOT (SUM(AVG(rt0.c0)))) UNION ALL SELECT rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING ((SUM(AVG(rt0.c0))) ISNULL);
SELECT ALL MIN(((vt1.c0) BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE BINARY COLLATE RTRIM) FROM vt1, vt0, rt0 ORDER BY ((((rt0.c2)=(rt0.c0)))&((((vt0.c1))!=((vt1.c0))))) DESC  NULLS FIRST;
SELECT rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((vt0.c1)GLOB(NULL))) NOT BETWEEN (rt0.c1) AND (((('?]y')) BETWEEN ((vt0.c0)) AND ((rt0.c2)))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((((vt0.c1)GLOB(NULL))) NOT BETWEEN (rt0.c1) AND (((('?]y')) BETWEEN ((vt0.c0)) AND ((rt0.c2)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((((vt0.c1)GLOB(NULL))) NOT BETWEEN (rt0.c1) AND (((('?]y')) BETWEEN ((vt0.c0)) AND ((rt0.c2)))))) ISNULL));
SELECT rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ('E^v') UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ('E^v'))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((('E^v') ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG((MAX(vt1.c0) IN ())) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG((MAX(vt1.c0) IN ())))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG((MAX(vt1.c0) IN ()))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG((MAX(vt1.c0) IN ())) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG((MAX(vt1.c0) IN ())))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG((MAX(vt1.c0) IN ()))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM rt0, vt1 INNER JOIN vt0 ON (NOT (CAST(rt0.c1 AS TEXT)));
SELECT vt0.c0 FROM rt0, vt1 INNER JOIN vt0 ON (NOT (CAST(rt0.c1 AS TEXT))) WHERE (((((((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))AND(x'')))OR(rt0.c0)))AND(rt0.c2)))AND(vt1.c0))) NOT BETWEEN (((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2))) AND (((vt0.c1)IS NOT(vt1.c0))))) UNION ALL SELECT vt0.c0 FROM rt0, vt1 INNER JOIN vt0 ON (NOT (CAST(rt0.c1 AS TEXT))) WHERE ((NOT (((((((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))AND(x'')))OR(rt0.c0)))AND(rt0.c2)))AND(vt1.c0))) NOT BETWEEN (((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2))) AND (((vt0.c1)IS NOT(vt1.c0))))))) UNION ALL SELECT vt0.c0 FROM rt0, vt1 INNER JOIN vt0 ON (NOT (CAST(rt0.c1 AS TEXT))) WHERE (((((((((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))AND(x'')))OR(rt0.c0)))AND(rt0.c2)))AND(vt1.c0))) NOT BETWEEN (((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2))) AND (((vt0.c1)IS NOT(vt1.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM rt0, vt1 INNER JOIN vt0 ON (NOT (CAST(rt0.c1 AS TEXT)));
SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN rt0 WHERE (((((('-443967018')) BETWEEN ((rt0.c1)) AND ((rt0.c1))))LIKE(((vt0.c0)IS NOT(rt0.c2))))) UNION SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((NOT (((((('-443967018')) BETWEEN ((rt0.c1)) AND ((rt0.c1))))LIKE(((vt0.c0)IS NOT(rt0.c2))))))) UNION SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN rt0 WHERE (((((((('-443967018')) BETWEEN ((rt0.c1)) AND ((rt0.c1))))LIKE(((vt0.c0)IS NOT(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING MIN(TOTAL(vt0.c1)) UNION ALL SELECT ALL vt1.c0 FROM vt0 NOT INDEXED, vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(TOTAL(vt0.c1)))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((MIN(TOTAL(vt0.c1))) ISNULL);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((- (rt0.c0))) BETWEEN (LOWER(vt0.c1)) AND (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) FULL OUTER JOIN vt1 ON (~ ((((vt1.c0, vt1.c0, NULL))>=((vt0.c1, rt0.c1, rt0.c0)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((- (rt0.c0))) BETWEEN (LOWER(vt0.c1)) AND (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) FULL OUTER JOIN vt1 ON (~ ((((vt1.c0, vt1.c0, NULL))>=((vt0.c1, rt0.c1, rt0.c0))))) WHERE ((+ (rt0.c2 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((- (rt0.c0))) BETWEEN (LOWER(vt0.c1)) AND (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) FULL OUTER JOIN vt1 ON (~ ((((vt1.c0, vt1.c0, NULL))>=((vt0.c1, rt0.c1, rt0.c0))))) WHERE ((NOT ((+ (rt0.c2 COLLATE RTRIM))))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON (((- (rt0.c0))) BETWEEN (LOWER(vt0.c1)) AND (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) FULL OUTER JOIN vt1 ON (~ ((((vt1.c0, vt1.c0, NULL))>=((vt0.c1, rt0.c1, rt0.c0))))) WHERE ((((+ (rt0.c2 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((- (rt0.c0))) BETWEEN (LOWER(vt0.c1)) AND (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) FULL OUTER JOIN vt1 ON (~ ((((vt1.c0, vt1.c0, NULL))>=((vt0.c1, rt0.c1, rt0.c0)))));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0)<(vt1.c0)) AS INTEGER)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0)<(vt1.c0)) AS INTEGER)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0)<(vt1.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))AND(x'7357')) COLLATE NOCASE) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)AND(vt1.c0)))AND(x'7357')) COLLATE NOCASE))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(x'7357')) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 INNER JOIN vt0 ON CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END AS NUMERIC) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 INNER JOIN vt0 ON CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END AS NUMERIC) GROUP BY vt1.c0 HAVING COUNT(TOTAL(vt0.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 INNER JOIN vt0 ON CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END AS NUMERIC) GROUP BY vt1.c0 HAVING (NOT (COUNT(TOTAL(vt0.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 INNER JOIN vt0 ON CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END AS NUMERIC) GROUP BY vt1.c0 HAVING ((COUNT(TOTAL(vt0.c0))) ISNULL);
SELECT * FROM rt0, vt1 INNER JOIN vt0 ON (+ (((vt1.c0)>(rt0.c1))));
SELECT * FROM rt0, vt1 INNER JOIN vt0 ON (+ (((vt1.c0)>(rt0.c1)))) WHERE ((vt0.c1 IN (((((vt0.c1)AND(rt0.c0)))OR(rt0.c1))))) UNION ALL SELECT * FROM rt0, vt1 INNER JOIN vt0 ON (+ (((vt1.c0)>(rt0.c1)))) WHERE ((NOT ((vt0.c1 IN (((((vt0.c1)AND(rt0.c0)))OR(rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0, vt1 INNER JOIN vt0 ON (+ (((vt1.c0)>(rt0.c1)))) WHERE ((((vt0.c1 IN (((((vt0.c1)AND(rt0.c0)))OR(rt0.c1))))) ISNULL));
SELECT * FROM rt0, vt1 INNER JOIN vt0 ON (+ (((vt1.c0)>(rt0.c1))));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON CAST((~ (rt0.c0)) AS TEXT) FULL OUTER JOIN vt1 ON (((vt0.c1 IN ())) BETWEEN (((vt1.c0) NOT NULL)) AND (CASE WHEN rt0.c0 THEN vt0.c0 ELSE '0.17056914829652547' END));
SELECT DISTINCT * FROM rt0 NOT INDEXED CROSS JOIN vt0 ON CAST((~ (rt0.c0)) AS TEXT) FULL OUTER JOIN vt1 ON (((vt0.c1 IN ())) BETWEEN (((vt1.c0) NOT NULL)) AND (CASE WHEN rt0.c0 THEN vt0.c0 ELSE '0.17056914829652547' END)) WHERE (-1892027535 COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON CAST((~ (rt0.c0)) AS TEXT) FULL OUTER JOIN vt1 ON (((vt0.c1 IN ())) BETWEEN (((vt1.c0) NOT NULL)) AND (CASE WHEN rt0.c0 THEN vt0.c0 ELSE '0.17056914829652547' END)) WHERE ((NOT (-1892027535 COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON CAST((~ (rt0.c0)) AS TEXT) FULL OUTER JOIN vt1 ON (((vt0.c1 IN ())) BETWEEN (((vt1.c0) NOT NULL)) AND (CASE WHEN rt0.c0 THEN vt0.c0 ELSE '0.17056914829652547' END)) WHERE (((-1892027535 COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON CAST((~ (rt0.c0)) AS TEXT) FULL OUTER JOIN vt1 ON (((vt0.c1 IN ())) BETWEEN (((vt1.c0) NOT NULL)) AND (CASE WHEN rt0.c0 THEN vt0.c0 ELSE '0.17056914829652547' END));
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE NULL END) BETWEEN (((rt0.c0)>>(vt0.c1))) AND ((~ (rt0.c0))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt0, rt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE NULL END) BETWEEN (((rt0.c0)>>(vt0.c1))) AND ((~ (rt0.c0))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt0, rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE NULL END) BETWEEN (((rt0.c0)>>(vt0.c1))) AND ((~ (rt0.c0))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2;
SELECT vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2 HAVING CASE WHEN (MAX(rt0.c0) IN ()) THEN SUM(vt0.c1) ELSE COUNT(rt0.c0) END UNION ALL SELECT vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2 HAVING (NOT (CASE WHEN (MAX(rt0.c0) IN ()) THEN SUM(vt0.c1) ELSE COUNT(rt0.c0) END)) UNION ALL SELECT ALL vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2 HAVING ((CASE WHEN (MAX(rt0.c0) IN ()) THEN SUM(vt0.c1) ELSE COUNT(rt0.c0) END) ISNULL);
SELECT vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2;
SELECT vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2 HAVING CASE WHEN (MAX(rt0.c0) IN ()) THEN SUM(vt0.c1) ELSE COUNT(rt0.c0) END UNION ALL SELECT vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2 HAVING (NOT (CASE WHEN (MAX(rt0.c0) IN ()) THEN SUM(vt0.c1) ELSE COUNT(rt0.c0) END)) UNION ALL SELECT ALL vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2 HAVING ((CASE WHEN (MAX(rt0.c0) IN ()) THEN SUM(vt0.c1) ELSE COUNT(rt0.c0) END) ISNULL);
SELECT vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2;
SELECT ALL TOTAL((~ (NULL))) FROM vt0 ORDER BY ((0X166313c5)<>(vt0.c0)) COLLATE RTRIM DESC;
SELECT rt0.c0, vt1.c0, vt0.c1, rt0.c2, rt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt1 ON ((CASE rt0.c2  WHEN vt0.c1 THEN 0.9052298497550508 END) NOT BETWEEN ((vt1.c0 IN ())) AND (IFNULL(vt0.c0, x''))) LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER))|(NULLIF(DISTINCT rt0.c2, rt0.c0)));
SELECT rt0.c0, vt1.c0, vt0.c1, rt0.c2, rt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt1 ON ((CASE rt0.c2  WHEN vt0.c1 THEN 0.9052298497550508 END) NOT BETWEEN ((vt1.c0 IN ())) AND (IFNULL(vt0.c0, x''))) LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER))|(NULLIF(DISTINCT rt0.c2, rt0.c0))) WHERE (CASE WHEN json_type(rt0.c2) THEN ((vt0.c0)LIKE(rt0.c0)) WHEN ((rt0.c0)>>(rt0.c0)) THEN 0.43420988578117925 WHEN ((((((((vt1.c0)OR(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND(0x475449bf)) THEN (rt0.c0 IN (vt0.c1)) ELSE (NOT (vt1.c0)) END) UNION ALL SELECT ALL rt0.c0, vt1.c0, vt0.c1, rt0.c2, rt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt1 ON ((CASE rt0.c2  WHEN vt0.c1 THEN 0.9052298497550508 END) NOT BETWEEN ((vt1.c0 IN ())) AND (IFNULL(vt0.c0, x''))) LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER))|(NULLIF(DISTINCT rt0.c2, rt0.c0))) WHERE ((NOT (CASE WHEN json_type(rt0.c2) THEN ((vt0.c0)LIKE(rt0.c0)) WHEN ((rt0.c0)>>(rt0.c0)) THEN 0.43420988578117925 WHEN ((((((((vt1.c0)OR(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND(0x475449bf)) THEN (rt0.c0 IN (vt0.c1)) ELSE (NOT (vt1.c0)) END))) UNION ALL SELECT rt0.c0, vt1.c0, vt0.c1, rt0.c2, rt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt1 ON ((CASE rt0.c2  WHEN vt0.c1 THEN 0.9052298497550508 END) NOT BETWEEN ((vt1.c0 IN ())) AND (IFNULL(vt0.c0, x''))) LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER))|(NULLIF(DISTINCT rt0.c2, rt0.c0))) WHERE (((CASE WHEN json_type(rt0.c2) THEN ((vt0.c0)LIKE(rt0.c0)) WHEN ((rt0.c0)>>(rt0.c0)) THEN 0.43420988578117925 WHEN ((((((((vt1.c0)OR(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND(0x475449bf)) THEN (rt0.c0 IN (vt0.c1)) ELSE (NOT (vt1.c0)) END) ISNULL));
SELECT rt0.c0, vt1.c0, vt0.c1, rt0.c2, rt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt1 ON ((CASE rt0.c2  WHEN vt0.c1 THEN 0.9052298497550508 END) NOT BETWEEN ((vt1.c0 IN ())) AND (IFNULL(vt0.c0, x''))) LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER))|(NULLIF(DISTINCT rt0.c2, rt0.c0)));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c2)IS NOT(rt0.c2))) NOTNULL)) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2)IS NOT(rt0.c2))) NOTNULL)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c2)IS NOT(rt0.c2))) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((MAX(rt0.c1)) IS TRUE)) ISNULL) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((((MAX(rt0.c1)) IS TRUE)) ISNULL))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((((MAX(rt0.c1)) IS TRUE)) ISNULL)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((MAX(rt0.c1)) IS TRUE)) ISNULL) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((((MAX(rt0.c1)) IS TRUE)) ISNULL))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((((MAX(rt0.c1)) IS TRUE)) ISNULL)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE (COALESCE(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END, ((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)), ((NULL) BETWEEN (vt1.c0) AND (vt0.c1)), ((vt0.c1)%(vt0.c0)))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (COALESCE(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END, ((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)), ((NULL) BETWEEN (vt1.c0) AND (vt0.c1)), ((vt0.c1)%(vt0.c0)))))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((COALESCE(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END, ((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)), ((NULL) BETWEEN (vt1.c0) AND (vt0.c1)), ((vt0.c1)%(vt0.c0)))) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON ((((rt0.c1)<>(vt0.c0)))/(CASE WHEN rt0.c2 THEN 0.8116471452803528 END));
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON ((((rt0.c1)!=(vt0.c0)))/(CASE WHEN rt0.c2 THEN 0.8116471452803528 END)) WHERE (((vt0.c1)<(((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON ((((rt0.c1)<>(vt0.c0)))/(CASE WHEN rt0.c2 THEN 0.8116471452803528 END)) WHERE ((NOT (((vt0.c1)<(((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED CROSS JOIN rt0 ON ((((rt0.c1)<>(vt0.c0)))/(CASE WHEN rt0.c2 THEN 0.8116471452803528 END)) WHERE (((((vt0.c1)<(((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON ((((rt0.c1)<>(vt0.c0)))/(CASE WHEN rt0.c2 THEN 0.8116471452803528 END));
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0, vt0.c1, vt0.c0 FROM vt1, rt0 FULL OUTER JOIN vt0 ON (+ (((((rt0.c0)AND(vt0.c0)))OR(vt0.c1)))) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0, vt0.c1, vt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0, vt0.c1, vt0.c0 FROM vt1, rt0 FULL OUTER JOIN vt0 ON (+ (((((rt0.c0)AND(vt0.c0)))OR(vt0.c1)))) WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 END) NOT BETWEEN ((((vt0.c1))==((rt0.c2)))) AND (json_array(rt0.c2, vt0.c1, rt0.c0, rt0.c1)))) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0, vt0.c1, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt1.c0, vt0.c1, vt0.c0 FROM vt1, rt0 FULL OUTER JOIN vt0 ON (+ (((((rt0.c0)AND(vt0.c0)))OR(vt0.c1)))) WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt0.c0 END) NOT BETWEEN ((((vt0.c1))==((rt0.c2)))) AND (json_array(rt0.c2, vt0.c1, rt0.c0, rt0.c1)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0, vt0.c1, vt0.c0 UNION SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0, vt0.c1, vt0.c0 FROM vt1 NOT INDEXED, rt0 FULL OUTER JOIN vt0 ON (+ (((((rt0.c0)AND(vt0.c0)))OR(vt0.c1)))) WHERE (((((CASE WHEN vt1.c0 THEN vt0.c0 END) NOT BETWEEN ((((vt0.c1))=((rt0.c2)))) AND (json_array(rt0.c2, vt0.c1, rt0.c0, rt0.c1)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c1) NOTNULL)) ISNULL) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c1) NOTNULL)) ISNULL) GROUP BY vt0.c1 HAVING MAX(GROUP_CONCAT(vt0.c1)) UNION ALL SELECT vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c1) NOTNULL)) ISNULL) GROUP BY vt0.c1 HAVING (NOT (MAX(GROUP_CONCAT(vt0.c1)))) UNION ALL SELECT vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c1) NOTNULL)) ISNULL) GROUP BY vt0.c1 HAVING ((MAX(GROUP_CONCAT(vt0.c1))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL vt0.c1 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON CASE ((((rt0.c1)AND(vt0.c1)))AND(vt0.c0))  WHEN -6.3992925E8 THEN NULL END GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON CASE ((((rt0.c1)AND(vt0.c1)))AND(vt0.c0))  WHEN -6.3992925E8 THEN NULL END WHERE ((((rt0.c2))>=((CAST(vt1.c0 AS INTEGER))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON CASE ((((rt0.c1)AND(vt0.c1)))AND(vt0.c0))  WHEN -6.3992925E8 THEN NULL END WHERE ((NOT ((((rt0.c2))>=((CAST(vt1.c0 AS INTEGER))))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON CASE ((((rt0.c1)AND(vt0.c1)))AND(vt0.c0))  WHEN -6.3992925E8 THEN NULL END WHERE ((((((rt0.c2))>=((CAST(vt1.c0 AS INTEGER))))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON CASE ((((rt0.c1)AND(vt0.c1)))AND(vt0.c0))  WHEN -6.3992925E8 THEN NULL END GROUP BY vt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (~ (COUNT(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((~ (COUNT(GROUP_CONCAT(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((~ (COUNT(GROUP_CONCAT(vt1.c0))))) ISNULL);
SELECT ALL rt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((((rt0.c1, rt0.c1, vt1.c0)) NOT BETWEEN ((rt0.c0, vt0.c0, rt0.c0)) AND ((rt0.c0, vt1.c0, rt0.c0))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (NULL)))) INNER JOIN rt0 ON 1.179649105E9 COLLATE NOCASE;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0)%(vt1.c0)))) AND ((518256902 COLLATE RTRIM)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((((vt1.c0)%(vt1.c0)))) AND ((518256902 COLLATE RTRIM)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((((vt1.c0)%(vt1.c0)))) AND ((518256902 COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CAST((- (rt0.c1)) AS INTEGER)) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST((- (rt0.c1)) AS INTEGER)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST((- (rt0.c1)) AS INTEGER)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(AVG(AVG(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(AVG(AVG(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(AVG(AVG(vt1.c0)))) ISNULL);
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0 NOT INDEXED NATURAL JOIN vt1;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0 NATURAL JOIN vt1 WHERE (CAST('-1140697473' AS REAL)) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0 NATURAL JOIN vt1 WHERE ((NOT (CAST('-1140697473' AS REAL)))) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0 NATURAL JOIN vt1 WHERE (((CAST('-1140697473' AS REAL)) ISNULL));
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0 NOT INDEXED NATURAL JOIN vt1;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((0.9727833919836191) NOT BETWEEN (vt0.c1) AND ('-469008874')))GLOB((~ (vt0.c1))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((((0.9727833919836191) NOT BETWEEN (vt0.c1) AND ('-469008874')))GLOB((~ (vt0.c1))))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((((0.9727833919836191) NOT BETWEEN (vt0.c1) AND ('-469008874')))GLOB((~ (vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT rt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE (((((((((((((((rt0.c0)/(vt0.c1)))AND(CASE WHEN rt0.c2 THEN rt0.c0 END)))AND(((rt0.c2)>=(vt0.c0)))))AND((+ (vt0.c1)))))AND(((x'')*(rt0.c0)))))OR(((x'')<(rt0.c1)))))OR(vt0.c1))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (((((((((((((((rt0.c0)/(vt0.c1)))AND(CASE WHEN rt0.c2 THEN rt0.c0 END)))AND(((rt0.c2)>=(vt0.c0)))))AND((+ (vt0.c1)))))AND(((x'')*(rt0.c0)))))OR(((x'')<(rt0.c1)))))OR(vt0.c1))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE (((((((((((((((((rt0.c0)/(vt0.c1)))AND(CASE WHEN rt0.c2 THEN rt0.c0 END)))AND(((rt0.c2)>=(vt0.c0)))))AND((+ (vt0.c1)))))AND(((x'')*(rt0.c0)))))OR(((x'')<(rt0.c1)))))OR(vt0.c1))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c0;
SELECT rt0.c1, vt0.c1, rt0.c0, vt0.c0 FROM vt0, vt1 NOT INDEXED, rt0 GROUP BY rt0.c1, vt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c1, vt0.c1, rt0.c0, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, vt0.c1, rt0.c0, vt0.c0 HAVING CAST((NOT (vt1.c0)) AS TEXT) UNION ALL SELECT ALL rt0.c1, vt0.c1, rt0.c0, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, vt0.c1, rt0.c0, vt0.c0 HAVING (NOT (CAST((NOT (vt1.c0)) AS TEXT))) UNION ALL SELECT ALL rt0.c1, vt0.c1, rt0.c0, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, vt0.c1, rt0.c0, vt0.c0 HAVING ((CAST((NOT (vt1.c0)) AS TEXT)) ISNULL);
SELECT rt0.c1, vt0.c1, rt0.c0, vt0.c0 FROM vt0, vt1 NOT INDEXED, rt0 GROUP BY rt0.c1, vt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c1, vt0.c1, rt0.c0, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, vt0.c1, rt0.c0, vt0.c0 HAVING CAST((NOT (vt1.c0)) AS TEXT) UNION ALL SELECT ALL rt0.c1, vt0.c1, rt0.c0, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, vt0.c1, rt0.c0, vt0.c0 HAVING (NOT (CAST((NOT (vt1.c0)) AS TEXT))) UNION ALL SELECT ALL rt0.c1, vt0.c1, rt0.c0, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, vt0.c1, rt0.c0, vt0.c0 HAVING ((CAST((NOT (vt1.c0)) AS TEXT)) ISNULL);
SELECT rt0.c1, vt0.c1, rt0.c0, vt0.c0 FROM vt0, vt1 NOT INDEXED, rt0 GROUP BY rt0.c1, vt0.c1, rt0.c0, vt0.c0;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (NULL) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM vt1 WHERE (((NULL) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((CASE WHEN vt1.c0 THEN vt0.c1 END IN ())) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((NOT ((CASE WHEN vt1.c0 THEN vt0.c1 END IN ())))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((((CASE WHEN vt1.c0 THEN vt0.c1 END IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN ((((rt0.c2))>((rt0.c2)))) AND ((- (NULL))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN ((((rt0.c2))>((rt0.c2)))) AND ((- (NULL))))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN ((((rt0.c2))>((rt0.c2)))) AND ((- (NULL))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(NULL) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(NULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(NULL)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(NULL) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(NULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(NULL)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt0, rt0, vt1;
SELECT * FROM vt0, rt0, vt1 WHERE ((json_array(rt0.c1, rt0.c2, rt0.c0, vt1.c0) IN ())) UNION ALL SELECT * FROM vt0, rt0, vt1 WHERE ((NOT ((json_array(rt0.c1, rt0.c2, rt0.c0, vt1.c0) IN ())))) UNION ALL SELECT ALL * FROM vt0, rt0, vt1 WHERE ((((json_array(rt0.c1, rt0.c2, rt0.c0, vt1.c0) IN ())) ISNULL));
SELECT ALL * FROM vt0, rt0, vt1;
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (((((rt0.c2)<<(rt0.c2)))IS NOT(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 END))) UNION SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT (((((rt0.c2)<<(rt0.c2)))IS NOT(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 END))))) UNION SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (((((((rt0.c2)<<(rt0.c2)))IS NOT(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 END))) ISNULL));
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1;
SELECT vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0;
SELECT ALL vt0.c1, vt1.c0 FROM vt0, vt1 WHERE (0xffffffffe9505288) GROUP BY vt0.c1, vt1.c0 UNION SELECT vt0.c1, vt1.c0 FROM vt0, vt1 WHERE ((NOT (0xffffffffe9505288))) GROUP BY vt0.c1, vt1.c0 UNION SELECT vt0.c1, vt1.c0 FROM vt0, vt1 WHERE (((0xffffffffe9505288) ISNULL)) GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0;
SELECT ALL vt0.c1, rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((CASE rt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN rt0.c2 THEN '0.859639114649306' WHEN rt0.c2 THEN rt0.c1 ELSE NULL END)+(IFNULL(rt0.c1, vt0.c0))) RIGHT OUTER JOIN vt1 ON (vt1.c0 COLLATE RTRIM IN ()) GROUP BY vt0.c1, rt0.c0, vt1.c0, rt0.c2, rt0.c1;
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c1 IN (rt0.c0))) BETWEEN ((x'' IN ())) AND ((vt1.c0 IN ()))) RIGHT OUTER JOIN vt0 ON (- (json_remove(vt0.c0, '182351942')));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (vt1.c0 IN ()) END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (vt1.c0 IN ()) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (vt1.c0 IN ()) END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2, vt0.c0;
SELECT ALL vt1.c0, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2, vt0.c0 HAVING TOTAL(AVG(SUM('446635354')) COLLATE BINARY) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2, vt0.c0 HAVING (NOT (TOTAL(AVG(SUM('446635354')) COLLATE BINARY))) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2, vt0.c0 HAVING ((TOTAL(AVG(SUM('446635354')) COLLATE BINARY)) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ())) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ())) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((((((rt0.c2 IN ()))AND((+ (vt1.c0)))))AND(vt1.c0))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((NOT ((((((rt0.c2 IN ()))AND((+ (vt1.c0)))))AND(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((((((((rt0.c2 IN ()))AND((+ (vt1.c0)))))AND(vt1.c0))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0 COLLATE NOCASE))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((NOT (rt0.c0 COLLATE NOCASE))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((NOT (rt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(UPPER(DISTINCT SUM(NULL))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(UPPER(DISTINCT SUM(NULL))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(UPPER(DISTINCT SUM(NULL)))) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE ((0.7405896097634852 IN ())) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((0.7405896097634852 IN ())))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((((0.7405896097634852 IN ())) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((+ ((vt0.c1 IN (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((+ ((vt0.c1 IN (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((+ ((vt0.c1 IN (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt0.c1, rt0.c2, vt0.c0, rt0.c0, vt1.c0 FROM vt0, rt0 CROSS JOIN vt1 ON CAST(rt0.c1 AS INTEGER) COLLATE NOCASE GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c0, vt1.c0;
SELECT vt0.c1, rt0.c2, vt0.c0, rt0.c0, vt1.c0 FROM vt0, rt0 CROSS JOIN vt1 ON CAST(rt0.c1 AS INTEGER) COLLATE NOCASE WHERE (CAST(CASE rt0.c2  WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END AS BLOB)) GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c0, vt1.c0 UNION SELECT ALL vt0.c1, rt0.c2, vt0.c0, rt0.c0, vt1.c0 FROM vt0, rt0 CROSS JOIN vt1 ON CAST(rt0.c1 AS INTEGER) COLLATE NOCASE WHERE ((NOT (CAST(CASE rt0.c2  WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END AS BLOB)))) GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c0, vt1.c0 UNION SELECT ALL vt0.c1, rt0.c2, vt0.c0, rt0.c0, vt1.c0 FROM vt0, rt0 CROSS JOIN vt1 ON CAST(rt0.c1 AS INTEGER) COLLATE NOCASE WHERE (((CAST(CASE rt0.c2  WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END AS BLOB)) ISNULL)) GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c0, vt1.c0;
SELECT vt0.c1, rt0.c2, vt0.c0, rt0.c0, vt1.c0 FROM vt0, rt0 CROSS JOIN vt1 ON CAST(rt0.c1 AS INTEGER) COLLATE NOCASE GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c0, vt1.c0;
SELECT vt0.c1, rt0.c2, vt0.c0 FROM rt0 NOT INDEXED, vt0 GROUP BY vt0.c1, rt0.c2, vt0.c0;
SELECT ALL vt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2, vt0.c0 HAVING LOWER(DISTINCT AVG(COUNT(*))) UNION ALL SELECT ALL vt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2, vt0.c0 HAVING (NOT (LOWER(DISTINCT AVG(COUNT(*))))) UNION ALL SELECT ALL vt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2, vt0.c0 HAVING ((LOWER(DISTINCT AVG(COUNT(*)))) ISNULL);
SELECT MAX(0.1530080294910603) FROM vt0, rt0, vt1;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((~ ((((vt1.c0))=((vt1.c0)))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((~ ((((vt1.c0))==((vt1.c0)))))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((~ ((((vt1.c0))==((vt1.c0)))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0, rt0.c0, vt0.c1 FROM rt0 CROSS JOIN vt0 ON (x'340e' IN ()) FULL OUTER JOIN vt1 ON ((vt0.c1 COLLATE BINARY)||(vt0.c1));
SELECT DISTINCT vt1.c0, rt0.c0, vt0.c1 FROM rt0 CROSS JOIN vt0 ON (x'340e' IN ()) FULL OUTER JOIN vt1 ON ((vt0.c1 COLLATE BINARY)||(vt0.c1)) WHERE (((vt0.c1 COLLATE NOCASE)||((rt0.c1 IN (vt1.c0))))) UNION SELECT DISTINCT vt1.c0, rt0.c0, vt0.c1 FROM rt0 CROSS JOIN vt0 ON (x'340e' IN ()) FULL OUTER JOIN vt1 ON ((vt0.c1 COLLATE BINARY)||(vt0.c1)) WHERE ((NOT (((vt0.c1 COLLATE NOCASE)||((rt0.c1 IN (vt1.c0))))))) UNION SELECT DISTINCT vt1.c0, rt0.c0, vt0.c1 FROM rt0 CROSS JOIN vt0 ON (x'340e' IN ()) FULL OUTER JOIN vt1 ON ((vt0.c1 COLLATE BINARY)||(vt0.c1)) WHERE (((((vt0.c1 COLLATE NOCASE)||((rt0.c1 IN (vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c0, vt0.c1 FROM rt0 CROSS JOIN vt0 ON (x'340e' IN ()) FULL OUTER JOIN vt1 ON ((vt0.c1 COLLATE BINARY)||(vt0.c1));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c0)%(rt0.c1)) IN ())) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0)%(rt0.c1)) IN ())))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c0)%(rt0.c1)) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1 HAVING CAST(SUM(MAX(vt1.c0)) AS REAL) UNION ALL SELECT vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1 HAVING (NOT (CAST(SUM(MAX(vt1.c0)) AS REAL))) UNION ALL SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1 HAVING ((CAST(SUM(MAX(vt1.c0)) AS REAL)) ISNULL);
SELECT * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN ((vt0.c0)|(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (CASE WHEN ((vt0.c0)|(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((CASE WHEN ((vt0.c0)|(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT rt0.c1 FROM vt0, vt1, rt0;
SELECT DISTINCT rt0.c1 FROM vt0, vt1, rt0 WHERE (((CAST(rt0.c2 AS TEXT))IS((((1885131074, vt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, vt1.c0)) AND ((0Xffffffffede59b12, rt0.c2, vt0.c1)))))) UNION SELECT DISTINCT rt0.c1 FROM vt0, vt1, rt0 WHERE ((NOT (((CAST(rt0.c2 AS TEXT))IS((((1885131074, vt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, vt1.c0)) AND ((0xffffffffede59b12, rt0.c2, vt0.c1)))))))) UNION SELECT DISTINCT rt0.c1 FROM vt0, vt1 NOT INDEXED, rt0 WHERE (((((CAST(rt0.c2 AS TEXT))IS((((1885131074, vt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, vt1.c0)) AND ((0xffffffffede59b12, rt0.c2, vt0.c1)))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM vt0, vt1, rt0;
SELECT vt0.c1, vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM vt0 FULL OUTER JOIN vt1 ON ((0.3271542347098164) IS TRUE) CROSS JOIN rt0 ON (+ (CAST(vt0.c0 AS TEXT))) GROUP BY vt0.c1, vt0.c0, rt0.c0, vt1.c0, rt0.c2;
SELECT ALL vt0.c1, vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM vt0 FULL OUTER JOIN vt1 ON ((0.3271542347098164) IS TRUE) CROSS JOIN rt0 ON (+ (CAST(vt0.c0 AS TEXT))) WHERE (rt0.c1) GROUP BY vt0.c1, vt0.c0, rt0.c0, vt1.c0, rt0.c2 UNION SELECT ALL vt0.c1, vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM vt0 FULL OUTER JOIN vt1 ON ((0.3271542347098164) IS TRUE) CROSS JOIN rt0 ON (+ (CAST(vt0.c0 AS TEXT))) WHERE ((NOT (rt0.c1))) GROUP BY vt0.c1, vt0.c0, rt0.c0, vt1.c0, rt0.c2 UNION SELECT vt0.c1, vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM vt0 FULL OUTER JOIN vt1 ON ((0.3271542347098164) IS TRUE) CROSS JOIN rt0 ON (+ (CAST(vt0.c0 AS TEXT))) WHERE (((rt0.c1) ISNULL)) GROUP BY vt0.c1, vt0.c0, rt0.c0, vt1.c0, rt0.c2;
SELECT vt0.c1, vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM vt0 FULL OUTER JOIN vt1 ON ((0.3271542347098164) IS TRUE) CROSS JOIN rt0 ON (+ (CAST(vt0.c0 AS TEXT))) GROUP BY vt0.c1, vt0.c0, rt0.c0, vt1.c0, rt0.c2;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING GROUP_CONCAT('\nan*''26q+') UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 NOT INDEXED GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT('\nan*''26q+'))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT('\nan*''26q+')) ISNULL);
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING GROUP_CONCAT('\nan*''26q+') UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 NOT INDEXED GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT('\nan*''26q+'))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT('\nan*''26q+')) ISNULL);
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT * FROM rt0, vt1, vt0;
SELECT ALL * FROM rt0 NOT INDEXED, vt1, vt0 WHERE (((('bV8LrIu	J')/(vt0.c0)) IN (rt0.c1))) UNION ALL SELECT * FROM rt0, vt1, vt0 WHERE ((NOT (((('bV8LrIu	J')/(vt0.c0)) IN (rt0.c1))))) UNION ALL SELECT ALL * FROM rt0, vt1, vt0 WHERE (((((('bV8LrIu	J')/(vt0.c0)) IN (rt0.c1))) ISNULL));
SELECT * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (((((HEX(DISTINCT rt0.c2))AND(((vt1.c0)IS(rt0.c2)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (((((HEX(DISTINCT rt0.c2))AND(((vt1.c0)IS(rt0.c2)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((((((HEX(DISTINCT rt0.c2))AND(((vt1.c0)IS(rt0.c2)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0, vt1 WHERE (CASE vt1.c0 COLLATE RTRIM  WHEN (((rt0.c0))>=((rt0.c0))) THEN ((rt0.c0) IS TRUE) END) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT (CASE vt1.c0 COLLATE RTRIM  WHEN (((rt0.c0))>=((rt0.c0))) THEN ((rt0.c0) IS TRUE) END))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 WHERE (((CASE vt1.c0 COLLATE RTRIM  WHEN (((rt0.c0))>=((rt0.c0))) THEN ((rt0.c0) IS TRUE) END) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1;
SELECT vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (NOT (CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (NOT (CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END)) GROUP BY vt0.c0, vt1.c0 HAVING ((x'') NOT BETWEEN (((MAX(vt0.c1)) NOT BETWEEN (vt1.c0) AND (0x55eb05ed))) AND (CASE MAX(MIN(vt0.c1))  WHEN vt0.c0 THEN COUNT(TOTAL(vt0.c1)) END)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (NOT (CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END)) GROUP BY vt0.c0, vt1.c0 HAVING (NOT (((x'') NOT BETWEEN (((MAX(vt0.c1)) NOT BETWEEN (vt1.c0) AND (0x55eb05ed))) AND (CASE MAX(MIN(vt0.c1))  WHEN vt0.c0 THEN COUNT(TOTAL(vt0.c1)) END)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (NOT (CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END)) GROUP BY vt0.c0, vt1.c0 HAVING ((((x'') NOT BETWEEN (((MAX(vt0.c1)) NOT BETWEEN (vt1.c0) AND (0X55eb05ed))) AND (CASE MAX(MIN(vt0.c1))  WHEN vt0.c0 THEN COUNT(TOTAL(vt0.c1)) END))) ISNULL);
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE ((((- (vt0.c1)))>(((((((((vt1.c0)OR(0xfffffffffcce3c98)))OR(vt0.c0)))AND(NULL)))AND(vt0.c0))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT ((((- (vt0.c1)))>(((((((((vt1.c0)OR(0xfffffffffcce3c98)))OR(vt0.c0)))AND(NULL)))AND(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((((((- (vt0.c1)))>(((((((((vt1.c0)OR(0Xfffffffffcce3c98)))OR(vt0.c0)))AND(NULL)))AND(vt0.c0))))) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE (LTRIM(CASE x'9cdd'  WHEN NULL THEN 0.766287905237372 ELSE rt0.c2 END)) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT (LTRIM(CASE x'9cdd'  WHEN NULL THEN 0.766287905237372 ELSE rt0.c2 END)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE (((LTRIM(CASE x'9cdd'  WHEN NULL THEN 0.766287905237372 ELSE rt0.c2 END)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)AND('-1026625597'))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE RTRIM)AND('-1026625597'))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 NOT INDEXED WHERE (((((vt1.c0 COLLATE RTRIM)AND('-1026625597'))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1 HAVING (('/?PPMf') NOT BETWEEN (SUM(AVG(vt1.c0))) AND (CASE TOTAL(vt0.c0)  WHEN GROUP_CONCAT(vt0.c1) THEN MAX(vt0.c0) END)) UNION ALL SELECT ALL vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1 HAVING (NOT ((('/?PPMf') NOT BETWEEN (SUM(AVG(vt1.c0))) AND (CASE TOTAL(vt0.c0)  WHEN GROUP_CONCAT(vt0.c1) THEN MAX(vt0.c0) END)))) UNION ALL SELECT vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1 HAVING (((('/?PPMf') NOT BETWEEN (SUM(AVG(vt1.c0))) AND (CASE TOTAL(vt0.c0)  WHEN GROUP_CONCAT(vt0.c1) THEN MAX(vt0.c0) END))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0, vt1 INNER JOIN rt0 ON (rt0.c1 COLLATE RTRIM IN (((rt0.c1)||(vt0.c1)), CASE vt1.c0  WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c1 END));
SELECT DISTINCT vt1.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0, vt1 INNER JOIN rt0 ON (rt0.c1 COLLATE RTRIM IN (((rt0.c1)||(vt0.c1)), CASE vt1.c0  WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c1 END)) WHERE ((((rt0.c0 IN (vt1.c0))) NOT NULL)) UNION SELECT DISTINCT vt1.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0, vt1 INNER JOIN rt0 ON (rt0.c1 COLLATE RTRIM IN (((rt0.c1)||(vt0.c1)), CASE vt1.c0  WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c1 END)) WHERE ((NOT ((((rt0.c0 IN (vt1.c0))) NOT NULL)))) UNION SELECT DISTINCT vt1.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0, vt1 INNER JOIN rt0 ON (rt0.c1 COLLATE RTRIM IN (((rt0.c1)||(vt0.c1)), CASE vt1.c0  WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c1 END)) WHERE ((((((rt0.c0 IN (vt1.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM vt0, vt1 INNER JOIN rt0 ON (rt0.c1 COLLATE RTRIM IN (((rt0.c1)||(vt0.c1)), CASE vt1.c0  WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c1 END));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (0.36906202433790236 COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (0.36906202433790236 COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((0.36906202433790236 COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c1 IN ()))AND(COUNT(vt0.c1))))OR(SUM(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((((vt0.c1 IN ()))AND(COUNT(vt0.c1))))OR(SUM(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((((vt0.c1 IN ()))AND(COUNT(vt0.c1))))OR(SUM(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c1 IN ()))AND(COUNT(vt0.c1))))OR(SUM(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((((vt0.c1 IN ()))AND(COUNT(vt0.c1))))OR(SUM(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((((vt0.c1 IN ()))AND(COUNT(vt0.c1))))OR(SUM(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((rt0.c0) IS FALSE) ELSE ((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c2)) END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((rt0.c0) IS FALSE) ELSE ((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c2)) END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((rt0.c0) IS FALSE) ELSE ((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c2)) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON (+ (0.8036676974740411)) CROSS JOIN vt0 ON (NOT (vt1.c0 COLLATE NOCASE));
SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON (+ (0.8036676974740411)) CROSS JOIN vt0 ON (NOT (vt1.c0 COLLATE NOCASE)) WHERE (((((CAST(rt0.c0 AS REAL))AND(((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(CASE WHEN vt0.c1 THEN vt1.c0 END))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON (+ (0.8036676974740411)) CROSS JOIN vt0 ON (NOT (vt1.c0 COLLATE NOCASE)) WHERE ((NOT (((((CAST(rt0.c0 AS REAL))AND(((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(CASE WHEN vt0.c1 THEN vt1.c0 END))))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON (+ (0.8036676974740411)) CROSS JOIN vt0 ON (NOT (vt1.c0 COLLATE NOCASE)) WHERE (((((((CAST(rt0.c0 AS REAL))AND(((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(CASE WHEN vt0.c1 THEN vt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON (+ (0.8036676974740411)) CROSS JOIN vt0 ON (NOT (vt1.c0 COLLATE NOCASE));
SELECT vt0.c1 FROM rt0, vt1, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM rt0, vt1, vt0 WHERE (json_valid((((rt0.c2, rt0.c2, rt0.c2))>=((rt0.c1, 0.5222703660178232, rt0.c2))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM rt0, vt1, vt0 WHERE ((NOT (json_valid((((rt0.c2, rt0.c2, rt0.c2))>=((rt0.c1, 0.5222703660178232, rt0.c2))))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM rt0, vt1, vt0 WHERE (((json_valid((((rt0.c2, rt0.c2, rt0.c2))>=((rt0.c1, 0.5222703660178232, rt0.c2))))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM rt0, vt1, vt0 GROUP BY vt0.c1;
SELECT rt0.c1, vt0.c1 FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CASE WHEN (~ (vt0.c0)) THEN '-53592936' END GROUP BY rt0.c1, vt0.c1;
SELECT rt0.c1, vt0.c1 FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CASE WHEN (~ (vt0.c0)) THEN '-53592936' END GROUP BY rt0.c1, vt0.c1 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL rt0.c1, vt0.c1 FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CASE WHEN (~ (vt0.c0)) THEN '-53592936' END GROUP BY rt0.c1, vt0.c1 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, vt0.c1 FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CASE WHEN (~ (vt0.c0)) THEN '-53592936' END GROUP BY rt0.c1, vt0.c1 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT MAX(((((vt1.c0)||(vt1.c0))) NOT NULL)) FROM vt1;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, vt0.c1, vt1.c0, rt0.c2 FROM vt1, vt0 FULL OUTER JOIN rt0 ON rt0.c2;
SELECT rt0.c1, rt0.c0, vt0.c0, vt0.c1, vt1.c0, rt0.c2 FROM vt1, vt0 FULL OUTER JOIN rt0 ON rt0.c2 WHERE ('1173156081') UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0, vt0.c1, vt1.c0, rt0.c2 FROM vt1, vt0 FULL OUTER JOIN rt0 ON rt0.c2 WHERE ((NOT ('1173156081'))) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0, vt0.c1, vt1.c0, rt0.c2 FROM vt1, vt0 FULL OUTER JOIN rt0 ON rt0.c2 WHERE ((('1173156081') ISNULL));
SELECT ALL rt0.c1, rt0.c0, vt0.c0, vt0.c1, vt1.c0, rt0.c2 FROM vt1, vt0 FULL OUTER JOIN rt0 ON rt0.c2;
SELECT DISTINCT * FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE ((- (CASE WHEN vt0.c1 THEN vt1.c0 END))) UNION SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE ((NOT ((- (CASE WHEN vt0.c1 THEN vt1.c0 END))))) UNION SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE ((((- (CASE WHEN vt0.c1 THEN vt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, vt1;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c1)%(rt0.c0)) COLLATE BINARY) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c1)%(rt0.c0)) COLLATE BINARY))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c1)%(rt0.c0)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) IS FALSE) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) IS FALSE) GROUP BY vt0.c1, vt0.c0 HAVING MIN(CAST(rt0.c1 AS NUMERIC)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) IS FALSE) GROUP BY vt0.c1, vt0.c0 HAVING (NOT (MIN(CAST(rt0.c1 AS NUMERIC)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) IS FALSE) GROUP BY vt0.c1, vt0.c0 HAVING ((MIN(CAST(rt0.c1 AS NUMERIC))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) IS FALSE) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) IS FALSE) GROUP BY vt0.c1, vt0.c0 HAVING MIN(CAST(rt0.c1 AS NUMERIC)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) IS FALSE) GROUP BY vt0.c1, vt0.c0 HAVING (NOT (MIN(CAST(rt0.c1 AS NUMERIC)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) IS FALSE) GROUP BY vt0.c1, vt0.c0 HAVING ((MIN(CAST(rt0.c1 AS NUMERIC))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) IS FALSE) GROUP BY vt0.c1, vt0.c0;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED WHERE (((((((((((vt1.c0)>(vt1.c0)))OR((('375591877') NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(NULL)))OR(CAST(0x76b0f3db AS INTEGER))))AND(COALESCE(DISTINCT vt1.c0, vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((((((vt1.c0)>(vt1.c0)))OR((('375591877') NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(NULL)))OR(CAST(0X76b0f3db AS INTEGER))))AND(COALESCE(DISTINCT vt1.c0, vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((((vt1.c0)>(vt1.c0)))OR((('375591877') NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(NULL)))OR(CAST(0x76b0f3db AS INTEGER))))AND(COALESCE(DISTINCT vt1.c0, vt1.c0)))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((ABS(DISTINCT vt1.c0))!=((+ (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((ABS(DISTINCT vt1.c0))<>((+ (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((ABS(DISTINCT vt1.c0))<>((+ (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c0, vt1.c0, rt0.c2, vt0.c1, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt0.c0, vt1.c0, rt0.c2, vt0.c1, rt0.c1;
SELECT ALL vt0.c0, vt1.c0, rt0.c2, vt0.c1, rt0.c1 FROM vt1, vt0, rt0 WHERE (((((((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN -9223372036854775808 WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c2 END)AND(rt0.c2 COLLATE NOCASE)))OR(vt0.c1 COLLATE NOCASE)))AND(rt0.c2)))OR(((((rt0.c0)OR(vt1.c0)))OR(vt1.c0))))) GROUP BY vt0.c0, vt1.c0, rt0.c2, vt0.c1, rt0.c1 UNION SELECT vt0.c0, vt1.c0, rt0.c2, vt0.c1, rt0.c1 FROM vt1, vt0, rt0 WHERE ((NOT (((((((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN -9223372036854775808 WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c2 END)AND(rt0.c2 COLLATE NOCASE)))OR(vt0.c1 COLLATE NOCASE)))AND(rt0.c2)))OR(((((rt0.c0)OR(vt1.c0)))OR(vt1.c0))))))) GROUP BY vt0.c0, vt1.c0, rt0.c2, vt0.c1, rt0.c1 UNION SELECT vt0.c0, vt1.c0, rt0.c2, vt0.c1, rt0.c1 FROM vt1, vt0, rt0 WHERE (((((((((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN -9223372036854775808 WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c2 END)AND(rt0.c2 COLLATE NOCASE)))OR(vt0.c1 COLLATE NOCASE)))AND(rt0.c2)))OR(((((rt0.c0)OR(vt1.c0)))OR(vt1.c0))))) ISNULL)) GROUP BY vt0.c0, vt1.c0, rt0.c2, vt0.c1, rt0.c1;
SELECT ALL vt0.c0, vt1.c0, rt0.c2, vt0.c1, rt0.c1 FROM vt1, vt0, rt0 GROUP BY vt0.c0, vt1.c0, rt0.c2, vt0.c1, rt0.c1;
SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt0.c0;
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON 0Xffffffffbf6a6733 CROSS JOIN rt0 ON -1344596197;
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON 0Xffffffffbf6a6733 CROSS JOIN rt0 ON -1344596197 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (TRIM(DISTINCT vt0.c0, rt0.c0)))) UNION ALL SELECT * FROM vt1 FULL OUTER JOIN vt0 ON 0Xffffffffbf6a6733 CROSS JOIN rt0 ON -1344596197 WHERE ((NOT (((vt0.c0) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (TRIM(DISTINCT vt0.c0, rt0.c0)))))) UNION ALL SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON 0xffffffffbf6a6733 CROSS JOIN rt0 ON -1344596197 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (TRIM(DISTINCT vt0.c0, rt0.c0)))) ISNULL));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON 0Xffffffffbf6a6733 CROSS JOIN rt0 ON -1344596197;
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE (((((0Xffffffff8c86023a)OR((- ('-1443516934')))))AND('-1444375723'))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE ((NOT (((((0xffffffff8c86023a)OR((- ('-1443516934')))))AND('-1444375723'))))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0 WHERE (((((((0xffffffff8c86023a)OR((- ('-1443516934')))))AND('-1444375723'))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, rt0;
SELECT ALL vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(vt1.c0 COLLATE RTRIM AS BLOB) INNER JOIN rt0 ON (((CAST(rt0.c2 AS BLOB)))>=(((NOT (x''))))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(vt1.c0 COLLATE RTRIM AS BLOB) INNER JOIN rt0 ON (((CAST(rt0.c2 AS BLOB)))>=(((NOT (x''))))) WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c2 END) BETWEEN ((rt0.c0 IN ())) AND (((vt0.c1)<=(rt0.c2))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(vt1.c0 COLLATE RTRIM AS BLOB) INNER JOIN rt0 ON (((CAST(rt0.c2 AS BLOB)))>=(((NOT (x''))))) WHERE ((NOT (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c2 END) BETWEEN ((rt0.c0 IN ())) AND (((vt0.c1)<=(rt0.c2))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(vt1.c0 COLLATE RTRIM AS BLOB) INNER JOIN rt0 ON (((CAST(rt0.c2 AS BLOB)))>=(((NOT (x''))))) WHERE (((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c2 END) BETWEEN ((rt0.c0 IN ())) AND (((vt0.c1)<=(rt0.c2))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(vt1.c0 COLLATE RTRIM AS BLOB) INNER JOIN rt0 ON (((CAST(rt0.c2 AS BLOB)))>=(((NOT (x''))))) GROUP BY vt0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((SUM(COUNT(*)))=(HEX(DISTINCT vt0.c1))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((SUM(COUNT(*)))==(HEX(DISTINCT vt0.c1))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((SUM(COUNT(*)))==(HEX(DISTINCT vt0.c1)))) ISNULL);
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 WHERE ((((vt0.c1 IN (vt0.c0, vt0.c1)))>((vt0.c1 IN ())))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 WHERE ((NOT ((((vt0.c1 IN (vt0.c0, vt0.c1)))>((vt0.c1 IN ())))))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 WHERE ((((((vt0.c1 IN (vt0.c0, vt0.c1)))>((vt0.c1 IN ())))) ISNULL));
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON load_extension(((rt0.c1)GLOB(rt0.c0)), rt0.c0 COLLATE NOCASE) FULL OUTER JOIN vt1 ON ((((((((((((((vt0.c1) ISNULL))OR('216916383')))OR(((rt0.c2) NOT NULL))))OR(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))))AND(((NULL)LIKE(rt0.c1)))))AND(((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c0)))))AND(rt0.c1 COLLATE BINARY));
SELECT ALL vt1.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1, rt0 WHERE ((((vt0.c0)) BETWEEN ((LIKELIHOOD(rt0.c2, 0.7150703966664346))) AND ((CASE vt1.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1, rt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((LIKELIHOOD(rt0.c2, 0.7150703966664346))) AND ((CASE vt1.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1, rt0 WHERE ((((((vt0.c0)) BETWEEN ((LIKELIHOOD(rt0.c2, 0.7150703966664346))) AND ((CASE vt1.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1, rt0 GROUP BY vt1.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(AVG(rt0.c0)))+(GROUP_CONCAT(rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM vt0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((COUNT(AVG(rt0.c0)))+(GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM vt0, vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((COUNT(AVG(rt0.c0)))+(GROUP_CONCAT(rt0.c0)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((((rt0.c1)IS NOT(rt0.c2)), ((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((rt0.c2, load_extension(rt0.c0), (((0Xffffffffc4a7a91c)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((((rt0.c1)IS NOT(rt0.c2)), ((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((rt0.c2, load_extension(rt0.c0), (((0xffffffffc4a7a91c)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((((rt0.c1)IS NOT(rt0.c2)), ((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((rt0.c2, load_extension(rt0.c0), (((0xffffffffc4a7a91c)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON (~ (((rt0.c1) IS FALSE))) LEFT OUTER JOIN vt0 ON HEX(((rt0.c0) IS FALSE));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON (~ (((rt0.c1) IS FALSE))) LEFT OUTER JOIN vt0 ON HEX(((rt0.c0) IS FALSE)) WHERE ((((((((rt0.c1))==((rt0.c1))))OR((((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((rt0.c0, vt0.c1, vt0.c1))))))OR(DATETIME(rt0.c1, 0.06354662720791682, vt1.c0)))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON (~ (((rt0.c1) IS FALSE))) LEFT OUTER JOIN vt0 ON HEX(((rt0.c0) IS FALSE)) WHERE ((NOT ((((((((rt0.c1))=((rt0.c1))))OR((((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((rt0.c0, vt0.c1, vt0.c1))))))OR(DATETIME(rt0.c1, 0.06354662720791682, vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON (~ (((rt0.c1) IS FALSE))) LEFT OUTER JOIN vt0 ON HEX(((rt0.c0) IS FALSE)) WHERE ((((((((((rt0.c1))=((rt0.c1))))OR((((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((rt0.c0, vt0.c1, vt0.c1))))))OR(DATETIME(rt0.c1, 0.06354662720791682, vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON (~ (((rt0.c1) IS FALSE))) LEFT OUTER JOIN vt0 ON HEX(((rt0.c0) IS FALSE));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0)%((vt1.c0 IN (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)%((vt1.c0 IN (vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)%((vt1.c0 IN (vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING SUM(vt0.c0 COLLATE NOCASE) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (SUM(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((SUM(vt0.c0 COLLATE NOCASE)) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING SUM(vt0.c0 COLLATE NOCASE) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (SUM(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((SUM(vt0.c0 COLLATE NOCASE)) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c0, rt0.c1 FROM vt0, rt0, vt1;
SELECT ALL vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c0, rt0.c1 FROM vt0, rt0, vt1 NOT INDEXED WHERE (vt0.c1) UNION ALL SELECT vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c0, rt0.c1 FROM vt0, rt0, vt1 WHERE ((NOT (vt0.c1))) UNION ALL SELECT ALL vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c0, rt0.c1 FROM vt0, rt0, vt1 WHERE (((vt0.c1) ISNULL));
SELECT ALL vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c0, rt0.c1 FROM vt0, rt0, vt1;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (vt0.c1) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c1) NOTNULL)) BETWEEN (CAST(vt0.c1 AS REAL)) AND (((vt0.c0)GLOB(vt0.c0))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c1) NOTNULL)) BETWEEN (CAST(vt0.c1 AS REAL)) AND (((vt0.c0)GLOB(vt0.c0))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c1) NOTNULL)) BETWEEN (CAST(vt0.c1 AS REAL)) AND (((vt0.c0)GLOB(vt0.c0))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt1.c0, rt0.c0 FROM vt0, rt0 NATURAL JOIN vt1 GROUP BY vt1.c0, rt0.c0;
SELECT ALL vt1.c0, rt0.c0 FROM vt0, rt0 NATURAL JOIN vt1 GROUP BY vt1.c0, rt0.c0 HAVING COUNT(GROUP_CONCAT(AVG(MAX(vt0.c0)))) UNION ALL SELECT ALL vt1.c0, rt0.c0 FROM vt0, rt0 NATURAL JOIN vt1 GROUP BY vt1.c0, rt0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(AVG(MAX(vt0.c0)))))) UNION ALL SELECT ALL vt1.c0, rt0.c0 FROM vt0, rt0 NATURAL JOIN vt1 GROUP BY vt1.c0, rt0.c0 HAVING ((COUNT(GROUP_CONCAT(AVG(MAX(vt0.c0))))) ISNULL);
SELECT SUM((((((((((NOT (vt0.c0)))AND(((((vt0.c1)AND(2090496750)))OR(vt0.c1)))))AND(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)))AND(CAST(vt0.c1 AS NUMERIC))))OR(x'28db' COLLATE BINARY))) FROM vt0 ORDER BY CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) THEN load_extension(vt0.c1) WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) THEN ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((vt0.c1)!=(x'dc25')) ELSE ((vt0.c0)>=(vt0.c1)) END DESC;
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT ((NOT (((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((((NOT (((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((345172501) IS TRUE)) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((345172501) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((345172501) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((1196890667)OR(((vt0.c0)||(vt0.c1)))))AND(json_array_length(vt0.c0)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((1196890667)OR(((vt0.c0)||(vt0.c1)))))AND(json_array_length(vt0.c0)))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((1196890667)OR(((vt0.c0)||(vt0.c1)))))AND(json_array_length(vt0.c0)))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2, vt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2, vt0.c0 HAVING '108769351' UNION ALL SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2, vt0.c0 HAVING (NOT ('108769351')) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c0, rt0.c2, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2, vt0.c0 HAVING (('108769351') ISNULL);
SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2, vt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2, vt0.c0 HAVING '108769351' UNION ALL SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2, vt0.c0 HAVING (NOT ('108769351')) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c0, rt0.c2, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2, vt0.c0 HAVING (('108769351') ISNULL);
SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2, vt0.c0 FROM vt0, vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2, vt0.c0;
SELECT SUM((((vt0.c0 IN ())) NOTNULL)) FROM vt0;
SELECT ALL rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (TRIM(DISTINCT ABS(rt0.c0), CAST(rt0.c1 AS REAL))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (TRIM(DISTINCT ABS(rt0.c0), CAST(rt0.c1 AS REAL))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((TRIM(DISTINCT ABS(rt0.c0), CAST(rt0.c1 AS REAL))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT vt1.c0, vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0, vt1 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) UNION SELECT DISTINCT vt1.c0, vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0, vt1 WHERE ((NOT ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ())))) UNION SELECT DISTINCT vt1.c0, vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0, vt1 WHERE ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0, vt1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))&(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))&(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))&(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(CAST(COUNT(TOTAL(MAX(vt1.c0))) AS REAL)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(CAST(COUNT(TOTAL(MAX(vt1.c0))) AS REAL)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(CAST(COUNT(TOTAL(MAX(vt1.c0))) AS REAL))) ISNULL);
SELECT * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE ((~ ('-194065087'))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT ((~ ('-194065087'))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((((~ ('-194065087'))) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT vt1.c0 FROM rt0, vt0 NATURAL JOIN vt1;
SELECT DISTINCT vt1.c0 FROM rt0, vt0 NATURAL JOIN vt1 WHERE (rt0.c0) UNION SELECT DISTINCT vt1.c0 FROM rt0, vt0 NATURAL JOIN vt1 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT vt1.c0 FROM rt0, vt0 NATURAL JOIN vt1 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT vt1.c0 FROM rt0, vt0 NATURAL JOIN vt1;
SELECT rt0.c2, vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt1.c0, vt0.c0, rt0.c1;
SELECT rt0.c2, vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt0 NOT INDEXED, vt1 WHERE (CAST(vt1.c0 AS REAL) COLLATE BINARY) GROUP BY rt0.c2, vt1.c0, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt0, vt1 WHERE ((NOT (CAST(vt1.c0 AS REAL) COLLATE BINARY))) GROUP BY rt0.c2, vt1.c0, vt0.c0, rt0.c1 UNION SELECT rt0.c2, vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt0, vt1 WHERE (((CAST(vt1.c0 AS REAL) COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, vt1.c0, vt0.c0, rt0.c1;
SELECT rt0.c2, vt1.c0, vt0.c0, rt0.c1 FROM rt0, vt0, vt1 GROUP BY rt0.c2, vt1.c0, vt0.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING ((vt0.c1) NOT BETWEEN (x'') AND (COUNT(*))) COLLATE RTRIM UNION ALL SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING (NOT (((vt0.c1) NOT BETWEEN (x'') AND (COUNT(*))) COLLATE RTRIM)) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING ((((vt0.c1) NOT BETWEEN (x'') AND (COUNT(*))) COLLATE RTRIM) ISNULL);
SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING ((vt0.c1) NOT BETWEEN (x'') AND (COUNT(*))) COLLATE RTRIM UNION ALL SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING (NOT (((vt0.c1) NOT BETWEEN (x'') AND (COUNT(*))) COLLATE RTRIM)) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING ((((vt0.c1) NOT BETWEEN (x'') AND (COUNT(*))) COLLATE RTRIM) ISNULL);
SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (LIKELIHOOD(LIKE(rt0.c0, rt0.c0, 'P'), 0.23386826961615548)) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (LIKELIHOOD(LIKE(rt0.c0, rt0.c0, 'P'), 0.23386826961615548)))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((LIKELIHOOD(LIKE(rt0.c0, rt0.c0, 'P'), 0.23386826961615548)) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((CAST(vt1.c0 AS REAL)) BETWEEN (((vt1.c0) BETWEEN (x'9e25') AND (vt1.c0))) AND (((vt1.c0)||(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS REAL)) BETWEEN (((vt1.c0) BETWEEN (x'9e25') AND (vt1.c0))) AND (((vt1.c0)||(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((CAST(vt1.c0 AS REAL)) BETWEEN (((vt1.c0) BETWEEN (x'9e25') AND (vt1.c0))) AND (((vt1.c0)||(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE WHEN vt1.c0 THEN vt1.c0 COLLATE NOCASE ELSE ((vt1.c0)OR(vt1.c0)) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN vt1.c0 THEN vt1.c0 COLLATE NOCASE ELSE ((vt1.c0)OR(vt1.c0)) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 COLLATE NOCASE ELSE ((vt1.c0)OR(vt1.c0)) END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0 INNER JOIN vt1 ON CASE ((vt0.c1)&(vt0.c0))  WHEN (((vt0.c0))<((vt0.c0))) THEN (((0x31818dda))<((vt1.c0))) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0 INNER JOIN vt1 ON CASE ((vt0.c1)&(vt0.c0))  WHEN (((vt0.c0))<((vt0.c0))) THEN (((0X31818dda))<((vt1.c0))) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING (GROUP_CONCAT(COUNT(vt0.c0)) IN ()) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0 INNER JOIN vt1 ON CASE ((vt0.c1)&(vt0.c0))  WHEN (((vt0.c0))<((vt0.c0))) THEN (((0x31818dda))<((vt1.c0))) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING (NOT ((GROUP_CONCAT(COUNT(vt0.c0)) IN ()))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt0 INNER JOIN vt1 ON CASE ((vt0.c1)&(vt0.c0))  WHEN (((vt0.c0))<((vt0.c0))) THEN (((0x31818dda))<((vt1.c0))) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING (((GROUP_CONCAT(COUNT(vt0.c0)) IN ())) ISNULL);
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0 INNER JOIN vt1 ON CASE ((vt0.c1)&(vt0.c0))  WHEN (((vt0.c0))<((vt0.c0))) THEN (((0x31818dda))<((vt1.c0))) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0 INNER JOIN vt1 ON CASE ((vt0.c1)&(vt0.c0))  WHEN (((vt0.c0))<((vt0.c0))) THEN (((0X31818dda))<((vt1.c0))) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING (GROUP_CONCAT(COUNT(vt0.c0)) IN ()) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0 INNER JOIN vt1 ON CASE ((vt0.c1)&(vt0.c0))  WHEN (((vt0.c0))<((vt0.c0))) THEN (((0x31818dda))<((vt1.c0))) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING (NOT ((GROUP_CONCAT(COUNT(vt0.c0)) IN ()))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt0 INNER JOIN vt1 ON CASE ((vt0.c1)&(vt0.c0))  WHEN (((vt0.c0))<((vt0.c0))) THEN (((0x31818dda))<((vt1.c0))) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING (((GROUP_CONCAT(COUNT(vt0.c0)) IN ())) ISNULL);
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0 INNER JOIN vt1 ON CASE ((vt0.c1)&(vt0.c0))  WHEN (((vt0.c0))<((vt0.c0))) THEN (((0x31818dda))<((vt1.c0))) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (x'') AND ('-293324226')))-((('p') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (((((vt1.c0) BETWEEN (x'') AND ('-293324226')))-((('p') NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.c0) BETWEEN (x'') AND ('-293324226')))-((('p') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))GLOB(UNICODE(vt1.c0)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))GLOB(UNICODE(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))GLOB(UNICODE(vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt1, rt0 WHERE ((+ (LOWER(rt0.c0)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt1, rt0 WHERE ((NOT ((+ (LOWER(rt0.c0)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt1, rt0 WHERE ((((+ (LOWER(rt0.c0)))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(SUM(COUNT(COUNT(*)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(SUM(COUNT(COUNT(*)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(SUM(COUNT(COUNT(*))))) ISNULL);
SELECT ALL * FROM vt1 NOT INDEXED, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (((vt0.c0) IS FALSE)))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (((vt0.c1) BETWEEN (vt0.c0) AND (((vt0.c0) IS FALSE)))))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (((vt0.c0) IS FALSE)))) ISNULL));
SELECT ALL * FROM vt1 NOT INDEXED, vt0;
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 WHERE (((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))) NOTNULL)) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))) NOTNULL)))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 WHERE (((((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))) AND ((vt0.c0)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))) AND ((vt0.c0)))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))) AND ((vt0.c0)))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE NOCASE AS TEXT)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 COLLATE NOCASE AS TEXT)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c0, vt0.c1, rt0.c1, vt0.c0, rt0.c2, vt1.c0 FROM vt1, vt0, rt0;
SELECT DISTINCT rt0.c0, vt0.c1, rt0.c1, vt0.c0, rt0.c2, vt1.c0 FROM vt1, vt0, rt0 WHERE (CAST((vt1.c0 IN ()) AS BLOB)) UNION SELECT DISTINCT rt0.c0, vt0.c1, rt0.c1, vt0.c0, rt0.c2, vt1.c0 FROM vt1, vt0, rt0 WHERE ((NOT (CAST((vt1.c0 IN ()) AS BLOB)))) UNION SELECT DISTINCT rt0.c0, vt0.c1, rt0.c1, vt0.c0, rt0.c2, vt1.c0 FROM vt1, vt0, rt0 WHERE (((CAST((vt1.c0 IN ()) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c1, rt0.c1, vt0.c0, rt0.c2, vt1.c0 FROM vt1, vt0, rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((- (vt1.c0)) COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((- (vt1.c0)) COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((- (vt1.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(COUNT(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(COUNT(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(COUNT(vt1.c0))) ISNULL);
SELECT rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON ((CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (rt0.c2 COLLATE BINARY));
SELECT ALL rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON ((CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (rt0.c2 COLLATE BINARY)) WHERE (((x'')<=('0.10995108497476325'))) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON ((CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (rt0.c2 COLLATE BINARY)) WHERE ((NOT (((x'')<=('0.10995108497476325'))))) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON ((CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (rt0.c2 COLLATE BINARY)) WHERE (((((x'')<=('0.10995108497476325'))) ISNULL));
SELECT rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1 INNER JOIN rt0 ON ((CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (rt0.c2 COLLATE BINARY));
SELECT DISTINCT rt0.c0, vt1.c0, vt0.c1 FROM rt0, vt0, vt1;
SELECT DISTINCT rt0.c0, vt1.c0, vt0.c1 FROM rt0, vt0, vt1 WHERE (((((((vt0.c1) IS FALSE))AND(((vt1.c0)|(rt0.c1)))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c1))))) UNION SELECT DISTINCT rt0.c0, vt1.c0, vt0.c1 FROM rt0, vt0, vt1 WHERE ((NOT (((((((vt0.c1) IS FALSE))AND(((vt1.c0)|(rt0.c1)))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c1))))))) UNION SELECT DISTINCT rt0.c0, vt1.c0, vt0.c1 FROM rt0, vt0, vt1 WHERE (((((((((vt0.c1) IS FALSE))AND(((vt1.c0)|(rt0.c1)))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c0, vt1.c0, vt0.c1 FROM rt0, vt0, vt1;
SELECT vt0.c1, vt0.c0, rt0.c2, vt1.c0, rt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c1, vt0.c0, rt0.c2, vt1.c0, rt0.c0;
SELECT ALL vt0.c1, vt0.c0, rt0.c2, vt1.c0, rt0.c0 FROM vt0, rt0, vt1 WHERE (rt0.c1) GROUP BY vt0.c1, vt0.c0, rt0.c2, vt1.c0, rt0.c0 UNION SELECT vt0.c1, vt0.c0, rt0.c2, vt1.c0, rt0.c0 FROM vt0, rt0, vt1 WHERE ((NOT (rt0.c1))) GROUP BY vt0.c1, vt0.c0, rt0.c2, vt1.c0, rt0.c0 UNION SELECT vt0.c1, vt0.c0, rt0.c2, vt1.c0, rt0.c0 FROM vt0, rt0, vt1 WHERE (((rt0.c1) ISNULL)) GROUP BY vt0.c1, vt0.c0, rt0.c2, vt1.c0, rt0.c0;
SELECT vt0.c1, vt0.c0, rt0.c2, vt1.c0, rt0.c0 FROM vt0, rt0, vt1 GROUP BY vt0.c1, vt0.c0, rt0.c2, vt1.c0, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING MAX(COUNT(SUM(GROUP_CONCAT(AVG(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (MAX(COUNT(SUM(GROUP_CONCAT(AVG(rt0.c1))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((MAX(COUNT(SUM(GROUP_CONCAT(AVG(rt0.c1)))))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (-1.00031235E8) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (-1.00031235E8))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((-1.00031235E8) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c0, vt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((((+ (vt0.c1))) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (((vt0.c1)AND(rt0.c2))))) UNION SELECT DISTINCT rt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((NOT ((((+ (vt0.c1))) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (((vt0.c1)AND(rt0.c2))))))) UNION SELECT DISTINCT rt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((((((+ (vt0.c1))) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (((vt0.c1)AND(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c1 FROM vt0, rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (LAST_INSERT_ROWID()) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (LAST_INSERT_ROWID()))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((LAST_INSERT_ROWID()) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT vt1.c0, vt0.c1, rt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, vt0.c1, rt0.c0;
SELECT vt1.c0, vt0.c1, rt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, vt0.c1, rt0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL vt1.c0, vt0.c1, rt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, vt0.c1, rt0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL vt1.c0, vt0.c1, rt0.c0 FROM rt0, vt0, vt1 GROUP BY vt1.c0, vt0.c1, rt0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (CAST(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)) AS INTEGER)) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (CAST(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)) AS INTEGER)))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((CAST(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)) AS INTEGER)) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((0.9727833919836191))))))OR('-0.0' COLLATE NOCASE)))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((0.9727833919836191))))))OR('-0.0' COLLATE NOCASE)))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((0.9727833919836191))))))OR('-0.0' COLLATE NOCASE)))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0, vt1.c0)) AS REAL)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST((vt1.c0 IN (vt1.c0, vt1.c0)) AS REAL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST((vt1.c0 IN (vt1.c0, vt1.c0)) AS REAL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING ((((((((CAST(rt0.c2 AS REAL))AND(CAST(vt0.c1 AS NUMERIC))))OR(AVG(MIN(vt0.c1)))))AND(GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))))OR(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (NOT (((((((((CAST(rt0.c2 AS REAL))AND(CAST(vt0.c1 AS NUMERIC))))OR(AVG(MIN(vt0.c1)))))AND(GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))))OR(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING ((((((((((CAST(rt0.c2 AS REAL))AND(CAST(vt0.c1 AS NUMERIC))))OR(AVG(MIN(vt0.c1)))))AND(GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))))OR(vt0.c0))) ISNULL);
SELECT ALL * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS BLOB)) ISNULL)) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (((CAST(vt0.c0 AS BLOB)) ISNULL)))) UNION ALL SELECT ALL * FROM vt1, vt0 NOT INDEXED WHERE (((((CAST(vt0.c0 AS BLOB)) ISNULL)) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1) IS FALSE)))<(((('뾐ڦxM')|(NULL)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c1) IS FALSE)))<(((('뾐ڦxM')|(NULL)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c1) IS FALSE)))<(((('뾐ڦxM')|(NULL)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0, rt0.c1, rt0.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c0;
SELECT ALL vt0.c0, rt0.c1, rt0.c0 FROM vt1, rt0, vt0 WHERE (CAST((((vt0.c1, NULL, vt0.c1)) BETWEEN ((rt0.c2, vt0.c0, vt1.c0)) AND ((0x4a420b09, rt0.c0, rt0.c1))) AS INTEGER)) GROUP BY vt0.c0, rt0.c1, rt0.c0 UNION SELECT vt0.c0, rt0.c1, rt0.c0 FROM vt1, rt0, vt0 WHERE ((NOT (CAST((((vt0.c1, NULL, vt0.c1)) BETWEEN ((rt0.c2, vt0.c0, vt1.c0)) AND ((0X4a420b09, rt0.c0, rt0.c1))) AS INTEGER)))) GROUP BY vt0.c0, rt0.c1, rt0.c0 UNION SELECT vt0.c0, rt0.c1, rt0.c0 FROM vt1, rt0, vt0 WHERE (((CAST((((vt0.c1, NULL, vt0.c1)) BETWEEN ((rt0.c2, vt0.c0, vt1.c0)) AND ((0x4a420b09, rt0.c0, rt0.c1))) AS INTEGER)) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c0;
SELECT vt0.c0, rt0.c1, rt0.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING CAST((- (NULL)) AS REAL) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (CAST((- (NULL)) AS REAL))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((CAST((- (NULL)) AS REAL)) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING CAST((- (NULL)) AS REAL) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (CAST((- (NULL)) AS REAL))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((CAST((- (NULL)) AS REAL)) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT * FROM vt0, vt1, rt0;
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((((((rt0.c0) IS TRUE), ((((rt0.c1)OR(rt0.c1)))AND(vt0.c1)), ((vt0.c0) IS TRUE)))<((CAST(rt0.c2 AS NUMERIC), ((rt0.c1)<<(vt0.c1)), (((' ON/QHRw', rt0.c2, vt1.c0))>((NULL, vt0.c0, rt0.c2))))))) UNION ALL SELECT ALL * FROM vt0, vt1, rt0 WHERE ((NOT ((((((rt0.c0) IS TRUE), ((((rt0.c1)OR(rt0.c1)))AND(vt0.c1)), ((vt0.c0) IS TRUE)))<((CAST(rt0.c2 AS NUMERIC), ((rt0.c1)<<(vt0.c1)), (((' ON/QHRw', rt0.c2, vt1.c0))>((NULL, vt0.c0, rt0.c2))))))))) UNION ALL SELECT ALL * FROM vt0, vt1, rt0 WHERE ((((((((rt0.c0) IS TRUE), ((((rt0.c1)OR(rt0.c1)))AND(vt0.c1)), ((vt0.c0) IS TRUE)))<((CAST(rt0.c2 AS NUMERIC), ((rt0.c1)<<(vt0.c1)), (((' ON/QHRw', rt0.c2, vt1.c0))>((NULL, vt0.c0, rt0.c2))))))) ISNULL));
SELECT * FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST(('afS*x{/3' IN ()) AS NUMERIC)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST(('afS*x{/3' IN ()) AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST(('afS*x{/3' IN ()) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (load_extension((rt0.c1 IN ()), ((rt0.c0)<=(rt0.c1)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT (load_extension((rt0.c1 IN ()), ((rt0.c0)<=(rt0.c1)))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((load_extension((rt0.c1 IN ()), ((rt0.c0)<=(rt0.c1)))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL SUM((+ ((x'' IN ())))) FROM vt1 ORDER BY x'';
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1)-(vt0.c0)) AS BLOB)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST(((vt0.c1)-(vt0.c0)) AS BLOB)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(((vt0.c1)-(vt0.c0)) AS BLOB)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((vt0.c1)-(vt0.c0)) IN ())) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((((vt0.c1)-(vt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt0.c1)-(vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT rt0.c1, vt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c1, rt0.c0, vt0.c0;
SELECT ALL rt0.c1, vt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (TRIM(rt0.c1, rt0.c2) COLLATE RTRIM) GROUP BY rt0.c1, vt0.c1, rt0.c0, vt0.c0 UNION SELECT rt0.c1, vt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT (TRIM(rt0.c1, rt0.c2) COLLATE RTRIM))) GROUP BY rt0.c1, vt0.c1, rt0.c0, vt0.c0 UNION SELECT ALL rt0.c1, vt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((TRIM(rt0.c1, rt0.c2) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1, vt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c1, vt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c1, rt0.c0, vt0.c0;
SELECT ALL vt0.c1, vt0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 NATURAL JOIN vt0 GROUP BY vt0.c1, vt0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT vt0.c1, vt0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 NATURAL JOIN vt0 GROUP BY vt0.c1, vt0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT ALL vt0.c1, vt0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 NATURAL JOIN vt0 GROUP BY vt0.c1, vt0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL vt0.c1, vt0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 NATURAL JOIN vt0 GROUP BY vt0.c1, vt0.c0, rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL vt0.c0, vt0.c1, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0;
SELECT vt0.c0, vt0.c1, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (1179649105) UNION ALL SELECT vt0.c0, vt0.c1, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((NOT (1179649105))) UNION ALL SELECT ALL vt0.c0, vt0.c1, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((1179649105) ISNULL));
SELECT ALL vt0.c0, vt0.c1, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0 NATURAL JOIN vt0 WHERE (CASE WHEN ((vt0.c1) IS FALSE) THEN LOWER(DISTINCT vt0.c1) WHEN rt0.c0 THEN (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((vt0.c1))) WHEN CAST(vt0.c1 AS BLOB) THEN (~ (vt0.c1)) END) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (CASE WHEN ((vt0.c1) IS FALSE) THEN LOWER(DISTINCT vt0.c1) WHEN rt0.c0 THEN (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((vt0.c1))) WHEN CAST(vt0.c1 AS BLOB) THEN (~ (vt0.c1)) END))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0 NOT INDEXED NATURAL JOIN vt0 WHERE (((CASE WHEN ((vt0.c1) IS FALSE) THEN LOWER(DISTINCT vt0.c1) WHEN rt0.c0 THEN (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((vt0.c1))) WHEN CAST(vt0.c1 AS BLOB) THEN (~ (vt0.c1)) END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt0.c0 FROM rt0 NATURAL JOIN vt0;
SELECT ALL rt0.c1, vt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c1, vt0.c1;
SELECT ALL rt0.c1, vt0.c1 FROM vt0, vt1, rt0 WHERE (CAST(((rt0.c0)*(rt0.c2)) AS NUMERIC)) GROUP BY rt0.c1, vt0.c1 UNION SELECT ALL rt0.c1, vt0.c1 FROM vt0, vt1, rt0 WHERE ((NOT (CAST(((rt0.c0)*(rt0.c2)) AS NUMERIC)))) GROUP BY rt0.c1, vt0.c1 UNION SELECT rt0.c1, vt0.c1 FROM vt0, vt1, rt0 WHERE (((CAST(((rt0.c0)*(rt0.c2)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c1, vt0.c1;
SELECT ALL rt0.c1, vt0.c1 FROM vt0, vt1, rt0 GROUP BY rt0.c1, vt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(CAST(0Xffffffffcd4cffc0 AS INTEGER)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(CAST(0xffffffffcd4cffc0 AS INTEGER)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(CAST(0Xffffffffcd4cffc0 AS INTEGER))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(CAST(0Xffffffffcd4cffc0 AS INTEGER)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(CAST(0xffffffffcd4cffc0 AS INTEGER)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(CAST(0Xffffffffcd4cffc0 AS INTEGER))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt1, vt0, rt0;
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (x'')))<<((((vt1.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((vt1.c0, rt0.c0, vt1.c0)) AND ((rt0.c1, rt0.c2, vt1.c0)))))) UNION ALL SELECT ALL * FROM vt1, vt0, rt0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (x'')))<<((((vt1.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((vt1.c0, rt0.c0, vt1.c0)) AND ((rt0.c1, rt0.c2, vt1.c0)))))))) UNION ALL SELECT * FROM vt1, vt0, rt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (x'')))<<((((vt1.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((vt1.c0, rt0.c0, vt1.c0)) AND ((rt0.c1, rt0.c2, vt1.c0)))))) ISNULL));
SELECT ALL * FROM vt1, vt0, rt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (CAST(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) AS BLOB)) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CAST(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) AS BLOB)))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0;
SELECT rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((((- (rt0.c0))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN 1.196890667E9 ELSE rt0.c2 END) AND ('831440809'))) GROUP BY rt0.c0, rt0.c1, vt1.c0 UNION SELECT rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((NOT ((((- (rt0.c0))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN 1.196890667E9 ELSE rt0.c2 END) AND ('831440809'))))) GROUP BY rt0.c0, rt0.c1, vt1.c0 UNION SELECT rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((((((- (rt0.c0))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN 1.196890667E9 ELSE rt0.c2 END) AND ('831440809'))) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt1.c0;
SELECT rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0;
SELECT rt0.c1, vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c1, vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c2;
SELECT rt0.c1, vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c1, vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c2 HAVING GROUP_CONCAT(SUM(AVG(SUM(COUNT(COUNT(*)))))) UNION ALL SELECT ALL rt0.c1, vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c1, vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(SUM(AVG(SUM(COUNT(COUNT(*)))))))) UNION ALL SELECT rt0.c1, vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c2 FROM vt1, vt0, rt0 GROUP BY rt0.c1, vt1.c0, vt0.c0, rt0.c0, vt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(SUM(AVG(SUM(COUNT(COUNT(*))))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((((vt0.c0)|(vt0.c0)))AND(vt0.c1)))AND(CAST(vt0.c0 AS TEXT)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((((vt0.c0)|(vt0.c0)))AND(vt0.c1)))AND(CAST(vt0.c0 AS TEXT)))))) UNION ALL SELECT * FROM vt0 WHERE (((((((((vt0.c0)|(vt0.c0)))AND(vt0.c1)))AND(CAST(vt0.c0 AS TEXT)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c1, vt0.c0, vt1.c0, vt0.c1, rt0.c2, rt0.c0 FROM vt0, vt1, rt0;
SELECT DISTINCT rt0.c1, vt0.c0, vt1.c0, vt0.c1, rt0.c2, rt0.c0 FROM vt0, vt1, rt0 WHERE ((((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))))<=((rt0.c2)))) UNION SELECT DISTINCT rt0.c1, vt0.c0, vt1.c0, vt0.c1, rt0.c2, rt0.c0 FROM vt0, vt1, rt0 WHERE ((NOT ((((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))))<=((rt0.c2)))))) UNION SELECT DISTINCT rt0.c1, vt0.c0, vt1.c0, vt0.c1, rt0.c2, rt0.c0 FROM vt0, vt1, rt0 WHERE ((((((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))))<=((rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0, vt1.c0, vt0.c1, rt0.c2, rt0.c0 FROM vt0, vt1, rt0;
SELECT vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt1 WHERE ((((vt0.c0 IN (vt1.c0)))LIKE(CAST(vt0.c1 AS BLOB)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, vt1 WHERE ((NOT ((((vt0.c0 IN (vt1.c0)))LIKE(CAST(vt0.c1 AS BLOB)))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0, vt1 WHERE ((((((vt0.c0 IN (vt1.c0)))LIKE(CAST(vt0.c1 AS BLOB)))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT rt0.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1 FROM rt0, vt1, vt0 GROUP BY rt0.c1;
SELECT rt0.c0, vt1.c0 FROM vt1, rt0;
SELECT ALL rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (((((((rt0.c2)OR(vt1.c0)))OR(rt0.c0))) IS TRUE)) UNION ALL SELECT rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((NOT (((((((rt0.c2)OR(vt1.c0)))OR(rt0.c0))) IS TRUE)))) UNION ALL SELECT rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (((((((((rt0.c2)OR(vt1.c0)))OR(rt0.c0))) IS TRUE)) ISNULL));
SELECT rt0.c0, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((+ (CAST(vt0.c1 AS BLOB)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((+ (CAST(vt0.c1 AS BLOB)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((+ (CAST(vt0.c1 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) WHERE ((~ ((((rt0.c2))<=((rt0.c1)))))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) WHERE ((NOT ((~ ((((rt0.c2))<=((rt0.c1)))))))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) WHERE ((((~ ((((rt0.c2))<=((rt0.c1)))))) ISNULL)) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, vt1.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL))OR(rt0.c1)) INNER JOIN vt1 ON (((((rt0.c0))!=((8.31440809E8)))) NOT BETWEEN (((((vt0.c0)OR(NULL)))AND(rt0.c0))) AND (((rt0.c1)IS(vt0.c1)))) GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt1.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL))OR(rt0.c1)) INNER JOIN vt1 ON (((((rt0.c0))<>((8.31440809E8)))) NOT BETWEEN (((((vt0.c0)OR(NULL)))AND(rt0.c0))) AND (((rt0.c1)IS(vt0.c1)))) GROUP BY rt0.c0, vt1.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL))OR(rt0.c1)) INNER JOIN vt1 ON (((((rt0.c0))<>((8.31440809E8)))) NOT BETWEEN (((((vt0.c0)OR(NULL)))AND(rt0.c0))) AND (((rt0.c1)IS(vt0.c1)))) GROUP BY rt0.c0, vt1.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT rt0.c0, vt1.c0 FROM rt0 NOT INDEXED LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL))OR(rt0.c1)) INNER JOIN vt1 ON (((((rt0.c0))<>((8.31440809E8)))) NOT BETWEEN (((((vt0.c0)OR(NULL)))AND(rt0.c0))) AND (((rt0.c1)IS(vt0.c1)))) GROUP BY rt0.c0, vt1.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT rt0.c0, vt0.c1 FROM rt0, vt0;
SELECT rt0.c0, vt0.c1 FROM rt0, vt0 WHERE (CASE WHEN ((vt0.c0)OR(vt0.c0)) THEN ((rt0.c0)LIKE(rt0.c0)) END) UNION ALL SELECT ALL rt0.c0, vt0.c1 FROM rt0, vt0 WHERE ((NOT (CASE WHEN ((vt0.c0)OR(vt0.c0)) THEN ((rt0.c0)LIKE(rt0.c0)) END))) UNION ALL SELECT ALL rt0.c0, vt0.c1 FROM rt0, vt0 WHERE (((CASE WHEN ((vt0.c0)OR(vt0.c0)) THEN ((rt0.c0)LIKE(rt0.c0)) END) ISNULL));
SELECT rt0.c0, vt0.c1 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (0Xffffffffd1afbcf9))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((NOT (0Xffffffffd1afbcf9))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((NOT (0xffffffffd1afbcf9))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c1, rt0.c2 FROM vt1, rt0, vt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM vt1, rt0, vt0 WHERE (CASE WHEN ((((((((vt1.c0)OR(vt0.c1)))AND(0.5061274969582104)))AND(rt0.c0)))OR(rt0.c2)) THEN 0.1932952585345925 ELSE x'' COLLATE BINARY END) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM vt1, rt0, vt0 WHERE ((NOT (CASE WHEN ((((((((vt1.c0)OR(vt0.c1)))AND(0.5061274969582104)))AND(rt0.c0)))OR(rt0.c2)) THEN 0.1932952585345925 ELSE x'' COLLATE BINARY END))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM vt1, rt0, vt0 WHERE (((CASE WHEN ((((((((vt1.c0)OR(vt0.c1)))AND(0.5061274969582104)))AND(rt0.c0)))OR(rt0.c2)) THEN 0.1932952585345925 ELSE x'' COLLATE BINARY END) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM vt1, rt0, vt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c2 HAVING (((((SUM(vt0.c0)))<((vt0.c1)))) NOTNULL) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c2 HAVING (NOT ((((((SUM(vt0.c0)))<((vt0.c1)))) NOTNULL))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c2 HAVING (((((((SUM(vt0.c0)))<((vt0.c1)))) NOTNULL)) ISNULL);
SELECT rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c2 HAVING (((((SUM(vt0.c0)))<((vt0.c1)))) NOTNULL) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c2 HAVING (NOT ((((((SUM(vt0.c0)))<((vt0.c1)))) NOTNULL))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c2 HAVING (((((((SUM(vt0.c0)))<((vt0.c1)))) NOTNULL)) ISNULL);
SELECT rt0.c2 FROM rt0, vt1, vt0 GROUP BY rt0.c2;
SELECT ALL vt1.c0 FROM vt0, rt0, vt1;
SELECT vt1.c0 FROM vt0, rt0, vt1 WHERE (CAST(TYPEOF(vt0.c0) AS NUMERIC)) UNION ALL SELECT ALL vt1.c0 FROM vt0, rt0, vt1 WHERE ((NOT (CAST(TYPEOF(vt0.c0) AS NUMERIC)))) UNION ALL SELECT ALL vt1.c0 FROM vt0, rt0, vt1 WHERE (((CAST(TYPEOF(vt0.c0) AS NUMERIC)) ISNULL));
SELECT ALL vt1.c0 FROM vt0, rt0, vt1;
