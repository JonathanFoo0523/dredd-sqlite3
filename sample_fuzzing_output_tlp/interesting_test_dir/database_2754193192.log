-- Time: 2024/06/09 03:02:39
-- Database: database92
-- Database version: 3.40.0
-- seed value: 2754193192
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2034284877); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(x'c3ce', NULL); -- 0ms;
END TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR FAIL vt0 SET c0=0.4054813563582731 WHERE ((vt0.c0 COLLATE RTRIM)||(json_valid(vt0.c0))); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA temp.foreign_keys; -- 0ms;
UPDATE vt0 SET (c0)=(NULL) WHERE SQLITE_COMPILEOPTION_GET((~ (vt0.c0))); -- 0ms;
PRAGMA cache_spill = true; -- 0ms;
PRAGMA reverse_unordered_selects = false; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.4054813563582731 IN ()), (0.4054813563582731 IN ()), NULL COLLATE RTRIM, ((((0xffffffff9dbf26aa)OR('-163893498')))OR(NULL)), (((NULL))<(('')))))<>((((-1.64841711E9) NOT NULL), ((0Xffffffff9dbf26aa) NOTNULL), (((x'4be1', '2126847073', '-919964712')) NOT BETWEEN ((0Xffffffff9dbf26aa, 2126847073, 0xffffffff9dbf26aa)) AND ((0.8946156892688205, '', NULL))), (NULL IN ('')), (NOT (0.1531900506285998))))); -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0='1591296917' WHERE (((vt0.c0))>=((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 9); -- 13ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=(0.4054813563582731, -1648417110, '9^pEP]WLâšª') WHERE (CAST(vt0.c0 AS INTEGER) IN ()); -- 0ms;
END; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES ('1048877881'), (''), (0.0014459631862162592); -- 1ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
PRAGMA main.incremental_vacuum; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE vt0 SET (c0)=(1.591296917E9); -- 0ms;
CREATE TEMPORARY VIEW v0(c0) AS SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE ((0x3e849b39)==(NULL))  WHEN json_extract(x'', x'') THEN ((0.6609159319736726)AND(NULL)) END); -- 0ms;
ANALYZE v0; -- 0ms;
REINDEX  vt0; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 481907507);\n; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
DELETE FROM vt0 WHERE CASE ((vt0.c0)%(vt0.c0))  WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((NULL) BETWEEN (vt0.c0) AND ('481907507')) THEN ((vt0.c0) NOTNULL) WHEN CASE 0.36119024114446363  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END; -- 1ms;
ANALYZE; -- 0ms;
ANALYZE; -- 0ms;
REINDEX; -- 0ms;
UPDATE vt0 SET c0='1048877881', c0=NULL; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA optimize; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR ABORT vt0 SET (c0, c0)=(NULL, x''); -- 4ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX RTRIM; -- 0ms;
PRAGMA foreign_keys; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX RTRIM; -- 0ms;
ROLLBACK TRANSACTION; -- 4ms;
UPDATE vt0 SET (c0, c0, c0)=('-919964712', x'', '-1118272008'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 206620434); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
PRAGMA journal_mode; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (-1648417110); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA main.foreign_keys = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 20ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE vt0 SET c0=0.4622917120244927 WHERE (((vt0.c0)>(vt0.c0)) IN (vt0.c0)); -- 0ms;
END; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=2126847073 noskipscan'); -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=('2003229120') WHERE (((~ (vt0.c0)))!=('0.0014459631862162592')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (-1118272008)) COLLATE RTRIM; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
PRAGMA secure_delete = true; -- 0ms;
PRAGMA recursive_triggers = false; -- 0ms;
DROP VIEW v0; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0, content='', ); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
PRAGMA cache_spill; -- 0ms;
PRAGMA temp.cache_size = 0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE vt0 SET (c0)=(0.6343849103267788); -- 0ms;
PRAGMA temp.application_id; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1591296917);\n; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('998111091'); -- 2ms;
REINDEX  vt1; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-1648417110,5');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA wal_autocheckpoint = -3540799893301230921; -- 0ms;
UPDATE vt0 SET c0=x'7d0d'; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
ANALYZE; -- 1ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (LENGTH(CASE WHEN vt0.c0 THEN vt0.c0 END)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (LENGTH(CASE WHEN vt0.c0 THEN vt0.c0 END)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((LENGTH(CASE WHEN vt0.c0 THEN vt0.c0 END)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt1 INNER JOIN vt0 ON ((LENGTH(vt0.c0)) NOT NULL) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 INNER JOIN vt0 ON ((LENGTH(vt0.c0)) NOT NULL) WHERE (((((vt1.c0)<(vt1.c0))) NOT NULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1 INNER JOIN vt0 ON ((LENGTH(vt0.c0)) NOT NULL) WHERE ((NOT (((((vt1.c0)<(vt1.c0))) NOT NULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1 INNER JOIN vt0 ON ((LENGTH(vt0.c0)) NOT NULL) WHERE (((((((vt1.c0)<(vt1.c0))) NOT NULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1 INNER JOIN vt0 ON ((LENGTH(vt0.c0)) NOT NULL) GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (((vt0.c0)) NOT BETWEEN ((MIN(AVG(vt1.c0)))) AND ((MIN(vt0.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT ((((vt0.c0)) NOT BETWEEN ((MIN(AVG(vt1.c0)))) AND ((MIN(vt0.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (((((vt0.c0)) NOT BETWEEN ((MIN(AVG(vt1.c0)))) AND ((MIN(vt0.c0))))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((('-1238927421') BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((('-1238927421') BETWEEN (vt1.c0) AND (vt1.c0)) IN ())))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((('-1238927421') BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON CAST(('' IN ()) AS REAL) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON CAST(('' IN ()) AS REAL) GROUP BY vt1.c0 HAVING AVG((((MAX(GROUP_CONCAT(0.36586951552248437)), COUNT(*), vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((COUNT(vt1.c0), vt1.c0, AVG(vt0.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON CAST(('' IN ()) AS REAL) GROUP BY vt1.c0 HAVING (NOT (AVG((((MAX(GROUP_CONCAT(0.36586951552248437)), COUNT(*), vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((COUNT(vt1.c0), vt1.c0, AVG(vt0.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON CAST(('' IN ()) AS REAL) GROUP BY vt1.c0 HAVING ((AVG((((MAX(GROUP_CONCAT(0.36586951552248437)), COUNT(*), vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((COUNT(vt1.c0), vt1.c0, AVG(vt0.c0)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((- (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((- (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((- (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ('Y*(') UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ('Y*('))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((('Y*(') ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((((((((vt1.c0)/(vt1.c0)))AND((vt0.c0 IN ()))))AND('-1648417110')))AND(CAST(vt0.c0 AS BLOB))))AND(((x'')IS NOT(vt1.c0))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((((((((vt1.c0)/(vt1.c0)))AND((vt0.c0 IN ()))))AND('-1648417110')))AND(CAST(vt0.c0 AS BLOB))))AND(((x'')IS NOT(vt1.c0))))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((((((((((vt1.c0)/(vt1.c0)))AND((vt0.c0 IN ()))))AND('-1648417110')))AND(CAST(vt0.c0 AS BLOB))))AND(((x'')IS NOT(vt1.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0)<<(vt1.c0))) NOT BETWEEN (vt0.c0) AND ((vt1.c0 IN ()))) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0)<<(vt1.c0))) NOT BETWEEN (vt0.c0) AND ((vt1.c0 IN ()))) GROUP BY vt1.c0 HAVING ((TOTAL(vt1.c0))>>(((vt1.c0) BETWEEN (GROUP_CONCAT(MAX(vt1.c0))) AND (vt0.c0)))) UNION ALL SELECT vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0)<<(vt1.c0))) NOT BETWEEN (vt0.c0) AND ((vt1.c0 IN ()))) GROUP BY vt1.c0 HAVING (NOT (((TOTAL(vt1.c0))>>(((vt1.c0) BETWEEN (GROUP_CONCAT(MAX(vt1.c0))) AND (vt0.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0)<<(vt1.c0))) NOT BETWEEN (vt0.c0) AND ((vt1.c0 IN ()))) GROUP BY vt1.c0 HAVING ((((TOTAL(vt1.c0))>>(((vt1.c0) BETWEEN (GROUP_CONCAT(MAX(vt1.c0))) AND (vt0.c0))))) ISNULL);
SELECT MAX(((NULL)%(vt0.c0)) COLLATE RTRIM) FROM vt1, vt0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((((((vt1.c0) NOTNULL))AND((vt1.c0 IN (vt1.c0)))))AND(vt1.c0 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((((vt1.c0) NOTNULL))AND((vt1.c0 IN (vt1.c0)))))AND(vt1.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((((vt1.c0) NOTNULL))AND((vt1.c0 IN (vt1.c0)))))AND(vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((NULL)>((- (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((NULL)>((- (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((NULL)>((- (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ()))=(CAST('-919964712' AS NUMERIC)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 IN ()))==(CAST('-919964712' AS NUMERIC)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN ()))=(CAST('-919964712' AS NUMERIC)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING MAX(COUNT(AVG(vt1.c0)), (((vt1.c0, vt0.c0, MAX(vt0.c0)))>(('h8<%]', MIN(COUNT(*)), vt1.c0))), 0.9429006327352215, TOTAL(vt1.c0)) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (MAX(COUNT(AVG(vt1.c0)), (((vt1.c0, vt0.c0, MAX(vt0.c0)))>(('h8<%]', MIN(COUNT(*)), vt1.c0))), 0.9429006327352215, TOTAL(vt1.c0)))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((MAX(COUNT(AVG(vt1.c0)), (((vt1.c0, vt0.c0, MAX(vt0.c0)))>(('h8<%]', MIN(COUNT(*)), vt1.c0))), 0.9429006327352215, TOTAL(vt1.c0))) ISNULL);
SELECT ALL * FROM vt1 NATURAL JOIN vt0;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (((((vt1.c0) ISNULL)) NOT NULL)) UNION ALL SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((NOT (((((vt1.c0) ISNULL)) NOT NULL)))) UNION ALL SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (((((((vt1.c0) ISNULL)) NOT NULL)) ISNULL));
SELECT ALL * FROM vt1 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE ((((((vt1.c0 IN (x'ef04')))AND(((vt1.c0)&(vt1.c0)))))AND(((vt1.c0) IS TRUE)))) UNION SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE ((NOT ((((((vt1.c0 IN (x'ef04')))AND(((vt1.c0)&(vt1.c0)))))AND(((vt1.c0) IS TRUE)))))) UNION SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE ((((((((vt1.c0 IN (x'ef04')))AND(((vt1.c0)&(vt1.c0)))))AND(((vt1.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt1.c0) NOTNULL))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt1.c0) NOTNULL))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt1.c0) NOTNULL))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0 HAVING MAX(((COUNT(vt0.c0)) NOTNULL)) UNION ALL SELECT vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0 HAVING (NOT (MAX(((COUNT(vt0.c0)) NOTNULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0 HAVING ((MAX(((COUNT(vt0.c0)) NOTNULL))) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (UNICODE((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt1.c0))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (UNICODE((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt1.c0))))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((UNICODE((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt1.c0))))) ISNULL));
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((- ((vt0.c0 IN (vt1.c0))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((- ((vt0.c0 IN (vt1.c0))))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((- ((vt0.c0 IN (vt1.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (load_extension(CAST(vt0.c0 AS REAL), CAST(vt0.c0 AS BLOB))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (load_extension(CAST(vt0.c0 AS REAL), CAST(vt0.c0 AS BLOB))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((load_extension(CAST(vt0.c0 AS REAL), CAST(vt0.c0 AS BLOB))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 NOT INDEXED GROUP BY vt0.c0, vt1.c0 HAVING CASE WHEN ((vt0.c0) IS TRUE) THEN ((COUNT(TOTAL(vt1.c0)))<(vt0.c0)) WHEN ((vt0.c0)OR(vt0.c0)) THEN CASE WHEN vt0.c0 THEN TOTAL(vt1.c0) END WHEN MAX(MIN(vt1.c0)) THEN CASE WHEN MAX(MIN(vt0.c0)) THEN '\_Ó‰ï¦Ÿ' ELSE MIN(vt0.c0) END END UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (CASE WHEN ((vt0.c0) IS TRUE) THEN ((COUNT(TOTAL(vt1.c0)))<(vt0.c0)) WHEN ((vt0.c0)OR(vt0.c0)) THEN CASE WHEN vt0.c0 THEN TOTAL(vt1.c0) END WHEN MAX(MIN(vt1.c0)) THEN CASE WHEN MAX(MIN(vt0.c0)) THEN '\_Ó‰ï¦Ÿ' ELSE MIN(vt0.c0) END END)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((CASE WHEN ((vt0.c0) IS TRUE) THEN ((COUNT(TOTAL(vt1.c0)))<(vt0.c0)) WHEN ((vt0.c0)OR(vt0.c0)) THEN CASE WHEN vt0.c0 THEN TOTAL(vt1.c0) END WHEN MAX(MIN(vt1.c0)) THEN CASE WHEN MAX(MIN(vt0.c0)) THEN '\_Ó‰ï¦Ÿ' ELSE MIN(vt0.c0) END END) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL)))) UNION ALL SELECT * FROM vt1 WHERE (((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE (vt1.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0)&(vt1.c0)) AS BLOB)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0)&(vt1.c0)) AS BLOB)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0)&(vt1.c0)) AS BLOB)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING CASE WHEN SUM(vt0.c0) THEN TOTAL(vt0.c0) END UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (CASE WHEN SUM(vt0.c0) THEN TOTAL(vt0.c0) END)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((CASE WHEN SUM(vt0.c0) THEN TOTAL(vt0.c0) END) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING CASE WHEN SUM(vt0.c0) THEN TOTAL(vt0.c0) END UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (CASE WHEN SUM(vt0.c0) THEN TOTAL(vt0.c0) END)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((CASE WHEN SUM(vt0.c0) THEN TOTAL(vt0.c0) END) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 NATURAL JOIN vt0;
SELECT vt1.c0, vt0.c0 FROM vt1 NATURAL JOIN vt0 WHERE ((((- (vt0.c0)))&(x''))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1 NATURAL JOIN vt0 WHERE ((NOT ((((- (vt0.c0)))&(x''))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1 NATURAL JOIN vt0 WHERE ((((((- (vt0.c0)))&(x''))) ISNULL));
SELECT ALL vt1.c0, vt0.c0 FROM vt1 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((+ (vt1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((+ (vt1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((+ (vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (CAST((((vt1.c0))!=((vt0.c0))) AS TEXT)) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (CAST((((vt1.c0))<>((vt0.c0))) AS TEXT)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((CAST((((vt1.c0))!=((vt0.c0))) AS TEXT)) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (TOTAL(COUNT(TOTAL(COUNT(*)))) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((TOTAL(COUNT(TOTAL(COUNT(*)))) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((TOTAL(COUNT(TOTAL(COUNT(*)))) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (TOTAL(COUNT(TOTAL(COUNT(*)))) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((TOTAL(COUNT(TOTAL(COUNT(*)))) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((TOTAL(COUNT(TOTAL(COUNT(*)))) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ('-1109209225') UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ('-1109209225'))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((('-1109209225') ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST(vt1.c0 AS REAL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS REAL)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST(vt1.c0 AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)>(vt1.c0)))LIKE(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)>(vt1.c0)))LIKE(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))) WHERE (UNLIKELY(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)>(vt1.c0)))LIKE(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))) WHERE ((NOT (UNLIKELY(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)>(vt1.c0)))LIKE(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))) WHERE (((UNLIKELY(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)>(vt1.c0)))LIKE(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))) GROUP BY vt0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING MAX(SUM(COUNT(vt1.c0))) COLLATE BINARY UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (MAX(SUM(COUNT(vt1.c0))) COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((MAX(SUM(COUNT(vt1.c0))) COLLATE BINARY) ISNULL);
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN ())) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (((vt0.c0 IN (vt0.c0)) IN ())))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0 IN (vt0.c0)) IN ())) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1, vt0 NOT INDEXED WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (IFNULL(((((vt0.c0)AND(vt0.c0)))AND('s]')), vt0.c0 COLLATE NOCASE)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (IFNULL(((((vt0.c0)AND(vt0.c0)))AND('s]')), vt0.c0 COLLATE NOCASE)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((IFNULL(((((vt0.c0)AND(vt0.c0)))AND('s]')), vt0.c0 COLLATE NOCASE)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0 HAVING (- (TOTAL(x'') COLLATE RTRIM)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((- (TOTAL(x'') COLLATE RTRIM)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((- (TOTAL(x'') COLLATE RTRIM))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0 HAVING (- (TOTAL(x'') COLLATE RTRIM)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((- (TOTAL(x'') COLLATE RTRIM)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((- (TOTAL(x'') COLLATE RTRIM))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ('0.8096507519973396') UNION ALL SELECT * FROM vt0 WHERE ((NOT ('0.8096507519973396'))) UNION ALL SELECT ALL * FROM vt0 WHERE ((('0.8096507519973396') ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (((((vt0.c0)/(vt0.c0)))=(((vt1.c0)%(vt1.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((vt0.c0)/(vt0.c0)))=(((vt1.c0)%(vt1.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (((((((vt0.c0)/(vt0.c0)))==(((vt1.c0)%(vt1.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 WHERE ((((LIKELY(DISTINCT x'838d97c1'), ((((((((((((NULL)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c0 COLLATE BINARY))>=((HEX(vt0.c0), 0.5889071730289938, vt0.c0)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((LIKELY(DISTINCT x'838d97c1'), ((((((((((((NULL)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c0 COLLATE BINARY))>=((HEX(vt0.c0), 0.5889071730289938, vt0.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((((((LIKELY(DISTINCT x'838d97c1'), ((((((((((((NULL)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c0 COLLATE BINARY))>=((HEX(vt0.c0), 0.5889071730289938, vt0.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(((SUM(vt1.c0)) NOT BETWEEN (vt1.c0) AND (AVG(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(((SUM(vt1.c0)) NOT BETWEEN (vt1.c0) AND (AVG(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(((SUM(vt1.c0)) NOT BETWEEN (vt1.c0) AND (AVG(vt1.c0))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (CASE WHEN (((vt1.c0)) BETWEEN ((0Xffffffffc92a73d8)) AND ((vt1.c0))) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(0.17383789602501076)))AND(vt1.c0)))OR(vt1.c0)) END) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CASE WHEN (((vt1.c0)) BETWEEN ((0Xffffffffc92a73d8)) AND ((vt1.c0))) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(0.17383789602501076)))AND(vt1.c0)))OR(vt1.c0)) END))) UNION ALL SELECT * FROM vt1 WHERE (((CASE WHEN (((vt1.c0)) BETWEEN ((0xffffffffc92a73d8)) AND ((vt1.c0))) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(0.17383789602501076)))AND(vt1.c0)))OR(vt1.c0)) END) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (((vt0.c0 COLLATE BINARY)>=((vt0.c0 IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY)>=((vt0.c0 IN ())))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (((((vt0.c0 COLLATE BINARY)>=((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((CASE 0X3740ff01  WHEN vt1.c0 THEN vt1.c0 WHEN 0.5793921865997376 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) IS FALSE)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((CASE 0x3740ff01  WHEN vt1.c0 THEN vt1.c0 WHEN 0.5793921865997376 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) IS FALSE)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((CASE 0x3740ff01  WHEN vt1.c0 THEN vt1.c0 WHEN 0.5793921865997376 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) IS FALSE)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(TOTAL(vt1.c0) COLLATE BINARY) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(TOTAL(vt1.c0) COLLATE BINARY))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(TOTAL(vt1.c0) COLLATE BINARY)) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((json_patch(vt0.c0, vt0.c0)) NOTNULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((json_patch(vt0.c0, vt0.c0)) NOTNULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((json_patch(vt0.c0, vt0.c0)) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((vt0.c0) NOT NULL))<=(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((((vt0.c0) NOT NULL))<=(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((((vt0.c0) NOT NULL))<=(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)IS('f'))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE NOCASE)IS('f'))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE NOCASE)IS('f'))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING SUM(((((COUNT(*))OR(GROUP_CONCAT(vt1.c0))))OR(MAX(vt1.c0)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (SUM(((((COUNT(*))OR(GROUP_CONCAT(vt1.c0))))OR(MAX(vt1.c0)))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((SUM(((((COUNT(*))OR(GROUP_CONCAT(vt1.c0))))OR(MAX(vt1.c0))))) ISNULL);
SELECT ALL MIN(vt1.c0) FROM vt1 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT NULL) DESC, (((vt1.c0)+(vt1.c0)) IN ()) ASC;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (vt1.c0 COLLATE RTRIM) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (vt1.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM) ISNULL));
SELECT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)OR(vt0.c0)) WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0) IS TRUE) THEN '' END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)OR(vt0.c0)) WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0) IS TRUE) THEN '' END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)OR(vt0.c0)) WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0) IS TRUE) THEN '' END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0))) NOT BETWEEN (((vt0.c0)+(vt0.c0))) AND (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT (((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0))) NOT BETWEEN (((vt0.c0)+(vt0.c0))) AND (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0))) NOT BETWEEN (((vt0.c0)+(vt0.c0))) AND (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(TOTAL(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(TOTAL(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(TOTAL(vt0.c0))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)) BETWEEN ((NULL)) AND ((vt1.c0))) IN ())) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)) BETWEEN ((NULL)) AND ((vt1.c0))) IN ())))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)) BETWEEN ((NULL)) AND ((vt1.c0))) IN ())) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((('tq%4Etae{' IN (vt1.c0))) NOT NULL)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((('tq%4Etae{' IN (vt1.c0))) NOT NULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((('tq%4Etae{' IN (vt1.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (- (MAX(vt1.c0))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT ((- (MAX(vt1.c0))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (((- (MAX(vt1.c0)))) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (- (MAX(vt1.c0))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT ((- (MAX(vt1.c0))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (((- (MAX(vt1.c0)))) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE ((- (CAST(vt1.c0 AS REAL)))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT ((- (CAST(vt1.c0 AS REAL)))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((((- (CAST(vt1.c0 AS REAL)))) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>=(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>=(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>=(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN vt1 ON ((((vt0.c0) NOTNULL)) BETWEEN (vt1.c0) AND (vt1.c0 COLLATE BINARY)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN vt1 ON ((((vt0.c0) NOTNULL)) BETWEEN (vt1.c0) AND (vt1.c0 COLLATE BINARY)) WHERE (LTRIM(((((0X4be9878a)AND(vt0.c0)))OR(vt1.c0)), CAST(vt1.c0 AS REAL))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 INNER JOIN vt1 ON ((((vt0.c0) NOTNULL)) BETWEEN (vt1.c0) AND (vt1.c0 COLLATE BINARY)) WHERE ((NOT (LTRIM(((((0X4be9878a)AND(vt0.c0)))OR(vt1.c0)), CAST(vt1.c0 AS REAL))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 INNER JOIN vt1 ON ((((vt0.c0) NOTNULL)) BETWEEN (vt1.c0) AND (vt1.c0 COLLATE BINARY)) WHERE (((LTRIM(((((0X4be9878a)AND(vt0.c0)))OR(vt1.c0)), CAST(vt1.c0 AS REAL))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN vt1 ON ((((vt0.c0) NOTNULL)) BETWEEN (vt1.c0) AND (vt1.c0 COLLATE BINARY)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (CASE WHEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))) THEN (NOT (NULL)) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (CASE WHEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))) THEN (NOT (NULL)) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((CASE WHEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))) THEN (NOT (NULL)) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END) ISNULL));
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt0.c0)/(vt0.c0)) IN ('6ç¾º'))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((((vt0.c0)/(vt0.c0)) IN ('6ç¾º'))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((vt0.c0)/(vt0.c0)) IN ('6ç¾º'))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0)>((vt0.c0 IN (NULL))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)>((vt0.c0 IN (NULL))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)>((vt0.c0 IN (NULL))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt0 INNER JOIN vt1 ON ((('-443068521', vt0.c0, vt1.c0))<((vt1.c0, vt0.c0, vt1.c0))) COLLATE RTRIM GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0 INNER JOIN vt1 ON ((('-443068521', vt0.c0, vt1.c0))<((vt1.c0, vt0.c0, vt1.c0))) COLLATE RTRIM GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt0 INNER JOIN vt1 ON ((('-443068521', vt0.c0, vt1.c0))<((vt1.c0, vt0.c0, vt1.c0))) COLLATE RTRIM GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt0 INNER JOIN vt1 ON ((('-443068521', vt0.c0, vt1.c0))<((vt1.c0, vt0.c0, vt1.c0))) COLLATE RTRIM GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt0 INNER JOIN vt1 ON ((('-443068521', vt0.c0, vt1.c0))<((vt1.c0, vt0.c0, vt1.c0))) COLLATE RTRIM GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0 INNER JOIN vt1 ON ((('-443068521', vt0.c0, vt1.c0))<((vt1.c0, vt0.c0, vt1.c0))) COLLATE RTRIM GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt0 INNER JOIN vt1 ON ((('-443068521', vt0.c0, vt1.c0))<((vt1.c0, vt0.c0, vt1.c0))) COLLATE RTRIM GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt0 INNER JOIN vt1 ON ((('-443068521', vt0.c0, vt1.c0))<((vt1.c0, vt0.c0, vt1.c0))) COLLATE RTRIM GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt0 INNER JOIN vt1 ON ((('-443068521', vt0.c0, vt1.c0))<((vt1.c0, vt0.c0, vt1.c0))) COLLATE RTRIM GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON UNLIKELY(DISTINCT CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END);
SELECT ALL vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON UNLIKELY(DISTINCT CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END) WHERE (CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN 1.554463165E9 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END AS NUMERIC)) UNION ALL SELECT ALL vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON UNLIKELY(DISTINCT CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END) WHERE ((NOT (CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN 1.554463165E9 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END AS NUMERIC)))) UNION ALL SELECT ALL vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON UNLIKELY(DISTINCT CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END) WHERE (((CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN 1.554463165E9 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END AS NUMERIC)) ISNULL));
SELECT vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON UNLIKELY(DISTINCT CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END);
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0)|(vt1.c0)))|(vt1.c0 COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)|(vt1.c0)))|(vt1.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)|(vt1.c0)))|(vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((((vt1.c0) IS FALSE))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((((vt1.c0) IS FALSE))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((((vt1.c0) IS FALSE))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((vt0.c0)*(AVG(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((NOT (((vt0.c0)*(AVG(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((NOT (((vt0.c0)*(AVG(vt0.c0)))))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((vt0.c0)*(AVG(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((NOT (((vt0.c0)*(AVG(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((NOT (((vt0.c0)*(AVG(vt0.c0)))))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ('-1648417110') UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT ('-1648417110'))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((('-1648417110') ISNULL));
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND ('')) AS TEXT)) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (CAST(((vt1.c0) BETWEEN (vt1.c0) AND ('')) AS TEXT)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((CAST(((vt1.c0) BETWEEN (vt1.c0) AND ('')) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt0.c0, vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 NATURAL JOIN vt1 WHERE (0.36119024114446363) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0 NATURAL JOIN vt1 WHERE ((NOT (0.36119024114446363))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0 NATURAL JOIN vt1 WHERE (((0.36119024114446363) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING TOTAL(((((TOTAL(COUNT(*)))AND('ê™·í™»')))AND(vt1.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(((((TOTAL(COUNT(*)))AND('ê™·í™»')))AND(vt1.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((TOTAL(((((TOTAL(COUNT(*)))AND('ê™·í™»')))AND(vt1.c0)))) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0;
SELECT vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE (json(0.3098038829631249) COLLATE NOCASE) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE ((NOT (json(0.3098038829631249) COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE (((json(0.3098038829631249) COLLATE NOCASE) ISNULL));
SELECT vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((((((vt1.c0) NOTNULL)))<(((((vt1.c0))>((vt0.c0))))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT ((((((vt1.c0) NOTNULL)))<(((((vt1.c0))>((vt0.c0))))))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((((((((vt1.c0) NOTNULL)))<(((((vt1.c0))>((vt0.c0))))))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((('vbç–•q'))<=((((vt1.c0)OR(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((('vbç–•q'))<=((((vt1.c0)OR(vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((('vbç–•q'))<=((((vt1.c0)OR(vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((CASE WHEN AVG(COUNT(TOTAL(SUM(GROUP_CONCAT(0.8525507485465406))))) THEN vt1.c0 ELSE vt1.c0 END)LIKE(((vt1.c0)-(vt1.c0)))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (((CASE WHEN AVG(COUNT(TOTAL(SUM(GROUP_CONCAT(0.8525507485465406))))) THEN vt1.c0 ELSE vt1.c0 END)LIKE(((vt1.c0)-(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((((CASE WHEN AVG(COUNT(TOTAL(SUM(GROUP_CONCAT(0.8525507485465406))))) THEN vt1.c0 ELSE vt1.c0 END)LIKE(((vt1.c0)-(vt1.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))OR(x'6e94')))AND(vt1.c0)))<((+ (vt0.c0))));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))OR(x'6e94')))AND(vt1.c0)))<((+ (vt0.c0)))) WHERE (0X771f07d8) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))OR(x'6e94')))AND(vt1.c0)))<((+ (vt0.c0)))) WHERE ((NOT (0x771f07d8))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))OR(x'6e94')))AND(vt1.c0)))<((+ (vt0.c0)))) WHERE (((0x771f07d8) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))OR(x'6e94')))AND(vt1.c0)))<((+ (vt0.c0))));
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CAST((((vt1.c0))<=((vt1.c0))) AS REAL)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST((((vt1.c0))<=((vt1.c0))) AS REAL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CAST((((vt1.c0))<=((vt1.c0))) AS REAL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0)) BETWEEN (((((TOTAL(SUM(GROUP_CONCAT(vt0.c0))))) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((0Xffffffffb62777c3))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0)) BETWEEN (((((TOTAL(SUM(GROUP_CONCAT(vt0.c0))))) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((0Xffffffffb62777c3))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0)) BETWEEN (((((TOTAL(SUM(GROUP_CONCAT(vt0.c0))))) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((0xffffffffb62777c3)))) ISNULL);
SELECT MIN(((('0.8096507519973396', vt0.c0, vt1.c0))<>((CAST(vt0.c0 AS NUMERIC), x'32b8', COALESCE(DISTINCT '1136183848', vt1.c0))))) FROM vt1, vt0 ORDER BY CAST(vt0.c0 COLLATE NOCASE AS TEXT) ASC;
SELECT * FROM vt1 CROSS JOIN vt0 ON (((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))OR(x'2b07')))OR(vt1.c0)) IN ());
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))OR(x'2b07')))OR(vt1.c0)) IN ()) WHERE (vt1.c0) UNION ALL SELECT * FROM vt1 CROSS JOIN vt0 ON (((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))OR(x'2b07')))OR(vt1.c0)) IN ()) WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))OR(x'2b07')))OR(vt1.c0)) IN ()) WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt1 CROSS JOIN vt0 ON (((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))OR(x'2b07')))OR(vt1.c0)) IN ());
SELECT DISTINCT vt1.c0 FROM vt0 INNER JOIN vt1 ON CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END AS REAL);
SELECT DISTINCT vt1.c0 FROM vt0 INNER JOIN vt1 ON CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END AS REAL) WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))AND(NULL))) UNION SELECT DISTINCT vt1.c0 FROM vt0 INNER JOIN vt1 ON CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END AS REAL) WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))AND(NULL))))) UNION SELECT DISTINCT vt1.c0 FROM vt0 INNER JOIN vt1 ON CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END AS REAL) WHERE (((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))AND(NULL))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0 INNER JOIN vt1 ON CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END AS REAL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((TRIM(vt0.c0, vt0.c0)) BETWEEN (((vt0.c0)*(vt0.c0))) AND ((x'f988' IN (vt1.c0))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((TRIM(vt0.c0, vt0.c0)) BETWEEN (((vt0.c0)*(vt0.c0))) AND ((x'f988' IN (vt1.c0))))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((TRIM(vt0.c0, vt0.c0)) BETWEEN (((vt0.c0)*(vt0.c0))) AND ((x'f988' IN (vt1.c0))))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL MIN(((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0xffffffffc92a73d8)))AND(((vt0.c0) NOTNULL))))OR((((vt0.c0, vt0.c0, vt1.c0))<((vt1.c0, NULL, vt1.c0))))))OR(vt0.c0)))AND(((-655520149)OR(vt0.c0))))) FROM vt0, vt1 ORDER BY '1718330999';
SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0;
SELECT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 WHERE ((+ (((vt1.c0) NOTNULL)))) UNION ALL SELECT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 WHERE ((NOT ((+ (((vt1.c0) NOTNULL)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 WHERE ((((+ (((vt1.c0) NOTNULL)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((NOT ((+ (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((NOT ((+ (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((NOT ((+ (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0))<=((vt1.c0)))))!=(('-412482359')))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0))<=((vt1.c0)))))!=(('-412482359')))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0))<=((vt1.c0)))))!=(('-412482359')))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (- (((vt0.c0)%(AVG(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((- (((vt0.c0)%(AVG(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- (((vt0.c0)%(AVG(vt0.c0)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (- (((vt0.c0)%(AVG(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((- (((vt0.c0)%(AVG(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- (((vt0.c0)%(AVG(vt0.c0)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((((((((((vt1.c0) IS FALSE))OR((vt1.c0 IN ()))))AND((vt1.c0 IN ()))))OR(((vt1.c0) NOT NULL))))OR(CAST(vt1.c0 AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((((((((vt1.c0) IS FALSE))OR((vt1.c0 IN ()))))AND((vt1.c0 IN ()))))OR(((vt1.c0) NOT NULL))))OR(CAST(vt1.c0 AS NUMERIC)))))) UNION ALL SELECT * FROM vt1 WHERE (((((((((((((vt1.c0) IS FALSE))OR((vt1.c0 IN ()))))AND((vt1.c0 IN ()))))OR(((vt1.c0) NOT NULL))))OR(CAST(vt1.c0 AS NUMERIC)))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST('9^PEP]WLâšª' AS BLOB)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST('9^PEP]WLâšª' AS BLOB)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST('9^PEP]WLâšª' AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(TRIM(vt0.c0) AS NUMERIC) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(TRIM(vt0.c0) AS NUMERIC) WHERE (LIKELIHOOD(((vt0.c0)/(vt0.c0)), 0.2550180549891443)) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(TRIM(vt0.c0) AS NUMERIC) WHERE ((NOT (LIKELIHOOD(((vt0.c0)/(vt0.c0)), 0.2550180549891443)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(TRIM(vt0.c0) AS NUMERIC) WHERE (((LIKELIHOOD(((vt0.c0)/(vt0.c0)), 0.2550180549891443)) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(TRIM(vt0.c0) AS NUMERIC) GROUP BY vt1.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE ((vt0.c0) IS FALSE)  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN MIN(vt0.c0) WHEN COUNT(vt0.c0) THEN COUNT(vt0.c0) WHEN ((AVG(COUNT(vt0.c0))) IS FALSE) THEN SUM(GROUP_CONCAT(vt0.c0)) END UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE ((vt0.c0) IS FALSE)  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN MIN(vt0.c0) WHEN COUNT(vt0.c0) THEN COUNT(vt0.c0) WHEN ((AVG(COUNT(vt0.c0))) IS FALSE) THEN SUM(GROUP_CONCAT(vt0.c0)) END)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE ((vt0.c0) IS FALSE)  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN MIN(vt0.c0) WHEN COUNT(vt0.c0) THEN COUNT(vt0.c0) WHEN ((AVG(COUNT(vt0.c0))) IS FALSE) THEN SUM(GROUP_CONCAT(vt0.c0)) END) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) ISNULL) IN (((vt1.c0)<(vt1.c0))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((vt1.c0) ISNULL) IN (((vt1.c0)<(vt1.c0))))))) UNION ALL SELECT * FROM vt1 WHERE ((((((vt1.c0) ISNULL) IN (((vt1.c0)<(vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS BLOB))-(((vt0.c0)||(vt1.c0))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((CAST(vt1.c0 AS BLOB))-(((vt0.c0)||(vt1.c0))))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((CAST(vt1.c0 AS BLOB))-(((vt0.c0)||(vt1.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN (+ ('1353023418')) ELSE json_remove(vt0.c0, vt0.c0) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 COLLATE BINARY THEN (+ ('1353023418')) ELSE json_remove(vt0.c0, vt0.c0) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 COLLATE BINARY THEN (+ ('1353023418')) ELSE json_remove(vt0.c0, vt0.c0) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (((TOTAL(GROUP_CONCAT(TOTAL(vt0.c0))), vt0.c0, COUNT(*))) NOT BETWEEN (((vt0.c0 IN (vt1.c0, vt0.c0)), NULLIF(DISTINCT vt0.c0, MIN(MAX(COUNT(*)))), CAST(vt1.c0 AS REAL))) AND ((vt1.c0, ((MIN(AVG(vt1.c0))) NOT BETWEEN (vt0.c0) AND (vt1.c0)), ((MIN(vt0.c0)) IS FALSE)))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT ((((TOTAL(GROUP_CONCAT(TOTAL(vt0.c0))), vt0.c0, COUNT(*))) NOT BETWEEN (((vt0.c0 IN (vt1.c0, vt0.c0)), NULLIF(DISTINCT vt0.c0, MIN(MAX(COUNT(*)))), CAST(vt1.c0 AS REAL))) AND ((vt1.c0, ((MIN(AVG(vt1.c0))) NOT BETWEEN (vt0.c0) AND (vt1.c0)), ((MIN(vt0.c0)) IS FALSE)))))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (((((TOTAL(GROUP_CONCAT(TOTAL(vt0.c0))), vt0.c0, COUNT(*))) NOT BETWEEN (((vt0.c0 IN (vt1.c0, vt0.c0)), NULLIF(DISTINCT vt0.c0, MIN(MAX(COUNT(*)))), CAST(vt1.c0 AS REAL))) AND ((vt1.c0, ((MIN(AVG(vt1.c0))) NOT BETWEEN (vt0.c0) AND (vt1.c0)), ((MIN(vt0.c0)) IS FALSE))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0)|(vt1.c0)))OR(CAST(vt1.c0 AS BLOB))))AND(CAST(vt1.c0 AS NUMERIC)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0)|(vt1.c0)))OR(CAST(vt1.c0 AS BLOB))))AND(CAST(vt1.c0 AS NUMERIC)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)|(vt1.c0)))OR(CAST(vt1.c0 AS BLOB))))AND(CAST(vt1.c0 AS NUMERIC)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (0.5773965782818737) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (0.5773965782818737))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((0.5773965782818737) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(vt0.c0 COLLATE BINARY AS REAL) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(vt0.c0 COLLATE BINARY AS REAL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(vt0.c0 COLLATE BINARY AS REAL)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(vt0.c0 COLLATE BINARY AS REAL) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(vt0.c0 COLLATE BINARY AS REAL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(vt0.c0 COLLATE BINARY AS REAL)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN vt1 ON (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END));
SELECT vt0.c0 FROM vt0 INNER JOIN vt1 ON (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)) WHERE ((((((- (vt1.c0)))OR(LIKE(vt0.c0, vt0.c0, 'J'))))OR((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 INNER JOIN vt1 ON (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)) WHERE ((NOT ((((((- (vt1.c0)))OR(LIKE(vt0.c0, vt0.c0, 'J'))))OR((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 INNER JOIN vt1 ON (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)) WHERE ((((((((- (vt1.c0)))OR(LIKE(vt0.c0, vt0.c0, 'J'))))OR((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0 INNER JOIN vt1 ON (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END));
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt1.c0) ISNULL)) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (((vt1.c0) ISNULL)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt1.c0) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((~ (vt1.c0)) COLLATE BINARY) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((~ (vt1.c0)) COLLATE BINARY))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((~ (vt1.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (+ (GROUP_CONCAT(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((+ (GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((+ (GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (+ (GROUP_CONCAT(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((+ (GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((+ (GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((((('2125515606') NOTNULL))AND(vt0.c0 COLLATE RTRIM)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((('2125515606') NOTNULL))AND(vt0.c0 COLLATE RTRIM)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((((('2125515606') NOTNULL))AND(vt0.c0 COLLATE RTRIM)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ())) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 WHERE (CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END THEN HEX(vt0.c0) END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((NOT (CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END THEN HEX(vt0.c0) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (((CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END THEN HEX(vt0.c0) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING CASE WHEN ((vt1.c0)/(vt0.c0)) THEN ((vt1.c0)GLOB(AVG(COUNT(vt0.c0)))) ELSE (MIN(vt1.c0) IN ()) END UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (CASE WHEN ((vt1.c0)/(vt0.c0)) THEN ((vt1.c0)GLOB(AVG(COUNT(vt0.c0)))) ELSE (MIN(vt1.c0) IN ()) END)) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((CASE WHEN ((vt1.c0)/(vt0.c0)) THEN ((vt1.c0)GLOB(AVG(COUNT(vt0.c0)))) ELSE (MIN(vt1.c0) IN ()) END) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((0.4688288573388566) NOTNULL)) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (((0.4688288573388566) NOTNULL)))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((((0.4688288573388566) NOTNULL)) ISNULL));
SELECT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((('py' IN (vt1.c0))) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0)>(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((('py' IN (vt1.c0))) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0)>(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((('py' IN (vt1.c0))) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0)>(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 AS TEXT)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS TEXT)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 COLLATE BINARY UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0 COLLATE BINARY)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0 COLLATE BINARY) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 COLLATE BINARY UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0 COLLATE BINARY)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0 COLLATE BINARY) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL TOTAL(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY) FROM vt1;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (CASE (+ (vt1.c0))  WHEN ((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)) THEN SQLITE_VERSION() END) ORDER BY CASE WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END THEN (((vt1.c0))<((vt1.c0))) WHEN (NOT (vt1.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN (((0.15781643217002606)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)=(vt1.c0)) ELSE (x'' IN ()) END ASC  NULLS LAST;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (CASE (+ (vt1.c0))  WHEN ((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)) THEN SQLITE_VERSION() END))) ORDER BY CASE WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END THEN (((vt1.c0))<((vt1.c0))) WHEN (NOT (vt1.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN (((0.15781643217002606)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)==(vt1.c0)) ELSE (x'' IN ()) END ASC  NULLS LAST;
SELECT vt0.c0, vt1.c0 FROM vt0 NOT INDEXED, vt1 WHERE (((CASE (+ (vt1.c0))  WHEN ((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)) THEN SQLITE_VERSION() END) ISNULL)) ORDER BY CASE WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END THEN (((vt1.c0))<((vt1.c0))) WHEN (NOT (vt1.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN (((0.15781643217002606)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)=(vt1.c0)) ELSE (x'' IN ()) END ASC  NULLS LAST;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1 WHERE (LIKELIHOOD(vt0.c0 COLLATE RTRIM, 0.23594666603242087)) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1 WHERE ((NOT (LIKELIHOOD(vt0.c0 COLLATE RTRIM, 0.23594666603242087)))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1 WHERE (((LIKELIHOOD(vt0.c0 COLLATE RTRIM, 0.23594666603242087)) ISNULL));
SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((- (CAST(vt1.c0 AS INTEGER)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((- (CAST(vt1.c0 AS INTEGER)))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((- (CAST(vt1.c0 AS INTEGER)))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (IFNULL(DISTINCT vt1.c0 COLLATE BINARY, (vt1.c0 IN (vt1.c0)))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (IFNULL(DISTINCT vt1.c0 COLLATE BINARY, (vt1.c0 IN (vt1.c0)))))) UNION ALL SELECT * FROM vt1 WHERE (((IFNULL(DISTINCT vt1.c0 COLLATE BINARY, (vt1.c0 IN (vt1.c0)))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT NULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT NULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT NULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL);
SELECT ALL vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL) WHERE ('856146694') UNION ALL SELECT vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL) WHERE ((NOT ('856146694'))) UNION ALL SELECT vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL) WHERE ((('856146694') ISNULL));
SELECT ALL vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL);
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (ROUND(vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE RTRIM)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (ROUND(vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((ROUND(vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((- (vt0.c0)) IN ((((NULL))<=(('HU2~RQ')))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((- (vt0.c0)) IN ((((NULL))<=(('HU2~RQ')))))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((- (vt0.c0)) IN ((((NULL))<=(('HU2~RQ')))))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX((~ (COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX((~ (COUNT(*)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX((~ (COUNT(*))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, vt1;
SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (CAST(NULLIF(vt0.c0, '856146694') AS NUMERIC)) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT (CAST(NULLIF(vt0.c0, '856146694') AS NUMERIC)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((CAST(NULLIF(vt0.c0, '856146694') AS NUMERIC)) ISNULL));
SELECT ALL vt0.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON ((vt0.c0 COLLATE RTRIM)=(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON ((vt0.c0 COLLATE RTRIM)==(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE ((((CAST(0.3098038829631249 AS REAL), CAST(vt0.c0 AS REAL), ((vt1.c0) ISNULL)))==((NULL, (((vt0.c0))=((vt0.c0))), ((vt0.c0)<(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON ((vt0.c0 COLLATE RTRIM)==(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE ((NOT ((((CAST(0.3098038829631249 AS REAL), CAST(vt0.c0 AS REAL), ((vt1.c0) ISNULL)))=((NULL, (((vt0.c0))==((vt0.c0))), ((vt0.c0)<(vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON ((vt0.c0 COLLATE RTRIM)=(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE ((((((CAST(0.3098038829631249 AS REAL), CAST(vt0.c0 AS REAL), ((vt1.c0) ISNULL)))==((NULL, (((vt0.c0))=((vt0.c0))), ((vt0.c0)<(vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON ((vt0.c0 COLLATE RTRIM)=(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ('0.6343849103267788' COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT ('0.6343849103267788' COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((('0.6343849103267788' COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE (vt1.c0 IN ())  WHEN 0.16408272892511433 THEN vt1.c0 WHEN CASE TOTAL(MAX(vt1.c0))  WHEN vt1.c0 THEN COUNT(*) ELSE vt1.c0 END THEN TOTAL(-2.7001514E8) WHEN ((SUM(vt1.c0))>(COUNT(*))) THEN AVG(vt1.c0) ELSE ((GROUP_CONCAT(vt1.c0)) ISNULL) END UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE (vt1.c0 IN ())  WHEN 0.16408272892511433 THEN vt1.c0 WHEN CASE TOTAL(MAX(vt1.c0))  WHEN vt1.c0 THEN COUNT(*) ELSE vt1.c0 END THEN TOTAL(-2.7001514E8) WHEN ((SUM(vt1.c0))>(COUNT(*))) THEN AVG(vt1.c0) ELSE ((GROUP_CONCAT(vt1.c0)) ISNULL) END)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE (vt1.c0 IN ())  WHEN 0.16408272892511433 THEN vt1.c0 WHEN CASE TOTAL(MAX(vt1.c0))  WHEN vt1.c0 THEN COUNT(*) ELSE vt1.c0 END THEN TOTAL(-2.7001514E8) WHEN ((SUM(vt1.c0))>(COUNT(*))) THEN AVG(vt1.c0) ELSE ((GROUP_CONCAT(vt1.c0)) ISNULL) END) ISNULL);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0) IS FALSE) IN (CAST(vt1.c0 AS INTEGER)));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0) IS FALSE) IN (CAST(vt1.c0 AS INTEGER))) WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0) IS FALSE) IN (CAST(vt1.c0 AS INTEGER))) WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0) IS FALSE) IN (CAST(vt1.c0 AS INTEGER))) WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0) IS FALSE) IN (CAST(vt1.c0 AS INTEGER)));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ('') UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (''))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((('') ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((- (((vt0.c0) NOT NULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((- (((vt0.c0) NOT NULL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((- (((vt0.c0) NOT NULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(COUNT(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(COUNT(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(COUNT(vt1.c0))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))>=((vt1.c0 IN ())))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS TEXT))>=((vt1.c0 IN ())))))) UNION ALL SELECT * FROM vt1 WHERE (((((CAST(vt1.c0 AS TEXT))>=((vt1.c0 IN ())))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CAST(vt1.c0 AS BLOB) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (CAST(vt1.c0 AS BLOB) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS BLOB) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((0.9404779544563406 COLLATE RTRIM) NOTNULL)) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((0.9404779544563406 COLLATE RTRIM) NOTNULL)))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((0.9404779544563406 COLLATE RTRIM) NOTNULL)) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt1.c0, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c0 HAVING (+ (((SUM(GROUP_CONCAT(0.41486065140037387)))!=('-1858152726')))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT ((+ (((SUM(GROUP_CONCAT(0.41486065140037387)))!=('-1858152726')))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c0 HAVING (((+ (((SUM(GROUP_CONCAT(0.41486065140037387)))!=('-1858152726'))))) ISNULL);
SELECT vt0.c0 FROM vt1, vt0;
SELECT vt0.c0 FROM vt1 NOT INDEXED, vt0 WHERE (TYPEOF(DISTINCT ABS(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT (TYPEOF(DISTINCT ABS(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 WHERE (((TYPEOF(DISTINCT ABS(vt0.c0))) ISNULL));
SELECT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (0.6726157142823539) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((NOT (0.6726157142823539))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (((0.6726157142823539) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT vt0.c0, vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 NATURAL JOIN vt1 WHERE ((((vt1.c0)) NOT BETWEEN (('-315190510')) AND (((((vt1.c0)) BETWEEN ((vt0.c0)) AND (('-1840631291'))))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0 NATURAL JOIN vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN (('-315190510')) AND (((((vt1.c0)) BETWEEN ((vt0.c0)) AND (('-1840631291'))))))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0 NATURAL JOIN vt1 WHERE ((((((vt1.c0)) NOT BETWEEN (('-315190510')) AND (((((vt1.c0)) BETWEEN ((vt0.c0)) AND (('-1840631291'))))))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(COUNT(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(COUNT(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(COUNT(vt1.c0))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((CASE WHEN x'' THEN vt1.c0 ELSE vt1.c0 END, CAST('1353023418' AS BLOB), vt1.c0)) AND ((json_array('1687549164', vt1.c0, vt1.c0, vt1.c0), ((vt1.c0) IS FALSE), CAST(vt1.c0 AS NUMERIC))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((CASE WHEN x'' THEN vt1.c0 ELSE vt1.c0 END, CAST('1353023418' AS BLOB), vt1.c0)) AND ((json_array('1687549164', vt1.c0, vt1.c0, vt1.c0), ((vt1.c0) IS FALSE), CAST(vt1.c0 AS NUMERIC))))))) UNION ALL SELECT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((CASE WHEN x'' THEN vt1.c0 ELSE vt1.c0 END, CAST('1353023418' AS BLOB), vt1.c0)) AND ((json_array('1687549164', vt1.c0, vt1.c0, vt1.c0), ((vt1.c0) IS FALSE), CAST(vt1.c0 AS NUMERIC))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1 CROSS JOIN vt0 ON CASE ((vt0.c0)IS(vt1.c0))  WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END THEN CASE WHEN vt0.c0 THEN 0.6161108497425569 END WHEN ((vt1.c0)IS(vt1.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN (- (vt1.c0)) THEN vt0.c0 COLLATE NOCASE ELSE (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1 NOT INDEXED CROSS JOIN vt0 ON CASE ((vt0.c0)IS(vt1.c0))  WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END THEN CASE WHEN vt0.c0 THEN 0.6161108497425569 END WHEN ((vt1.c0)IS(vt1.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN (- (vt1.c0)) THEN vt0.c0 COLLATE NOCASE ELSE (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END WHERE ((vt1.c0 IN ())) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1 CROSS JOIN vt0 ON CASE ((vt0.c0)IS(vt1.c0))  WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END THEN CASE WHEN vt0.c0 THEN 0.6161108497425569 END WHEN ((vt1.c0)IS(vt1.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN (- (vt1.c0)) THEN vt0.c0 COLLATE NOCASE ELSE (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END WHERE ((NOT ((vt1.c0 IN ())))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1 CROSS JOIN vt0 ON CASE ((vt0.c0)IS(vt1.c0))  WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END THEN CASE WHEN vt0.c0 THEN 0.6161108497425569 END WHEN ((vt1.c0)IS(vt1.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN (- (vt1.c0)) THEN vt0.c0 COLLATE NOCASE ELSE (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END WHERE ((((vt1.c0 IN ())) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1 CROSS JOIN vt0 ON CASE ((vt0.c0)IS(vt1.c0))  WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END THEN CASE WHEN vt0.c0 THEN 0.6161108497425569 END WHEN ((vt1.c0)IS(vt1.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN (- (vt1.c0)) THEN vt0.c0 COLLATE NOCASE ELSE (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((((NOT (vt1.c0))))!=((((NULL) ISNULL)))) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((((NOT (vt1.c0))))<>((((NULL) ISNULL)))) WHERE (CASE WHEN ((vt1.c0)IS(vt0.c0)) THEN (NOT (vt0.c0)) WHEN ((((x'')OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN x'' THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((((NOT (vt1.c0))))!=((((NULL) ISNULL)))) WHERE ((NOT (CASE WHEN ((vt1.c0)IS(vt0.c0)) THEN (NOT (vt0.c0)) WHEN ((((x'')OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN x'' THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0 NOT INDEXED INNER JOIN vt1 ON ((((NOT (vt1.c0))))!=((((NULL) ISNULL)))) WHERE (((CASE WHEN ((vt1.c0)IS(vt0.c0)) THEN (NOT (vt0.c0)) WHEN ((((x'')OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN x'' THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((((NOT (vt1.c0))))!=((((NULL) ISNULL)))) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING LENGTH(AVG(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (LENGTH(AVG(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((LENGTH(AVG(vt1.c0))) ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING LENGTH(AVG(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (LENGTH(AVG(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((LENGTH(AVG(vt1.c0))) ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (0.38709651015142943) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (0.38709651015142943))) UNION SELECT DISTINCT * FROM vt0 WHERE (((0.38709651015142943) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((vt1.c0) ISNULL) IN (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c0))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((vt1.c0) ISNULL) IN (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c0))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((((vt1.c0) ISNULL) IN (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c0))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(SUM(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(SUM(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(SUM(vt0.c0))) ISNULL);
SELECT ALL vt1.c0 FROM vt0, vt1;
SELECT vt1.c0 FROM vt0, vt1 WHERE (vt0.c0) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt1.c0 FROM vt0 NOT INDEXED, vt1 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt1.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c0 IN ()) IN (PRINTF(vt1.c0, vt0.c0, vt0.c0)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (((vt0.c0 IN ()) IN (PRINTF(vt1.c0, vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt0.c0 IN ()) IN (PRINTF(vt1.c0, vt0.c0, vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((((vt0.c0) NOTNULL))AND(vt1.c0 COLLATE NOCASE)))AND(CAST(vt0.c0 AS BLOB)))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((((vt0.c0) NOTNULL))AND(vt1.c0 COLLATE NOCASE)))AND(CAST(vt0.c0 AS BLOB)))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((((((vt0.c0) NOTNULL))AND(vt1.c0 COLLATE NOCASE)))AND(CAST(vt0.c0 AS BLOB)))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((((COUNT(*) COLLATE NOCASE)OR(MAX(vt1.c0))))OR(MIN(TOTAL(vt0.c0)))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (((((COUNT(*) COLLATE NOCASE)OR(MAX(vt1.c0))))OR(MIN(TOTAL(vt0.c0)))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((((((COUNT(*) COLLATE NOCASE)OR(MAX(vt1.c0))))OR(MIN(TOTAL(vt0.c0))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((~ ((((vt0.c0))<=((vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((~ ((((vt0.c0))<=((vt0.c0)))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((~ ((((vt0.c0))<=((vt0.c0)))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (LOWER(((vt0.c0)AND(vt0.c0)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (LOWER(((vt0.c0)AND(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((LOWER(((vt0.c0)AND(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE RTRIM, vt0.c0 COLLATE RTRIM))=((CAST(vt0.c0 AS NUMERIC), x'e662' COLLATE NOCASE, ((vt0.c0)LIKE(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE RTRIM, vt0.c0 COLLATE RTRIM))=((CAST(vt0.c0 AS NUMERIC), x'e662' COLLATE NOCASE, ((vt0.c0)LIKE(vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE RTRIM, vt0.c0 COLLATE RTRIM))=((CAST(vt0.c0 AS NUMERIC), x'e662' COLLATE NOCASE, ((vt0.c0)LIKE(vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING GROUP_CONCAT(SUM(COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(SUM(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(SUM(COUNT(*)))) ISNULL);
SELECT TOTAL(CASE ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))  WHEN ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) END) FROM vt1;
SELECT vt1.c0 FROM vt1, vt0;
SELECT vt1.c0 FROM vt1, vt0 WHERE ('F5[]8dL_') UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((NOT ('F5[]8dL_'))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((('F5[]8dL_') ISNULL));
SELECT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((NULL)AND((~ (vt0.c0)))))OR(((vt0.c0)<<(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((NULL)AND((~ (vt0.c0)))))OR(((vt0.c0)<<(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((NULL)AND((~ (vt0.c0)))))OR(((vt0.c0)<<(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON NULL GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON NULL WHERE ((vt1.c0 COLLATE BINARY IN ())) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON NULL WHERE ((NOT ((vt1.c0 COLLATE BINARY IN ())))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON NULL WHERE ((((vt1.c0 COLLATE BINARY IN ())) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON NULL GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY GROUP BY vt0.c0, vt1.c0 HAVING SUM((- (vt1.c0))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY GROUP BY vt0.c0, vt1.c0 HAVING (NOT (SUM((- (vt1.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY GROUP BY vt0.c0, vt1.c0 HAVING ((SUM((- (vt1.c0)))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY GROUP BY vt0.c0, vt1.c0 HAVING SUM((- (vt1.c0))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY GROUP BY vt0.c0, vt1.c0 HAVING (NOT (SUM((- (vt1.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY GROUP BY vt0.c0, vt1.c0 HAVING ((SUM((- (vt1.c0)))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE (((((LTRIM(vt1.c0, vt1.c0))AND(((vt0.c0)>(vt0.c0)))))AND(TYPEOF(NULL)))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE ((NOT (((((LTRIM(vt1.c0, vt1.c0))AND(((vt0.c0)>(vt0.c0)))))AND(TYPEOF(NULL)))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE (((((((LTRIM(vt1.c0, vt1.c0))AND(((vt0.c0)>(vt0.c0)))))AND(TYPEOF(NULL)))) ISNULL));
SELECT vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((0.28044965131189514) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((0.28044965131189514) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((0.28044965131189514) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 WHERE ((((NULL IN ())) NOT BETWEEN ((((vt1.c0, vt0.c0, vt0.c0))>((vt0.c0, vt1.c0, '/M')))) AND (((vt1.c0)LIKE(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((NULL IN ())) NOT BETWEEN ((((vt1.c0, vt0.c0, vt0.c0))>((vt0.c0, vt1.c0, '/M')))) AND (((vt1.c0)LIKE(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE ((((((NULL IN ())) NOT BETWEEN ((((vt1.c0, vt0.c0, vt0.c0))>((vt0.c0, vt1.c0, '/M')))) AND (((vt1.c0)LIKE(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 INNER JOIN vt0 ON CAST(vt1.c0 COLLATE NOCASE AS NUMERIC) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 INNER JOIN vt0 ON CAST(vt1.c0 COLLATE NOCASE AS NUMERIC) GROUP BY vt1.c0 HAVING ((((vt1.c0)GLOB(vt0.c0)))=((((vt0.c0))>=((AVG(GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 INNER JOIN vt0 ON CAST(vt1.c0 COLLATE NOCASE AS NUMERIC) GROUP BY vt1.c0 HAVING (NOT (((((vt1.c0)GLOB(vt0.c0)))==((((vt0.c0))>=((AVG(GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))))))))) UNION ALL SELECT vt1.c0 FROM vt1 INNER JOIN vt0 ON CAST(vt1.c0 COLLATE NOCASE AS NUMERIC) GROUP BY vt1.c0 HAVING ((((((vt1.c0)GLOB(vt0.c0)))==((((vt0.c0))>=((AVG(GROUP_CONCAT(GROUP_CONCAT(vt0.c0))))))))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM))) UNION ALL SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST(vt1.c0 AS REAL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS REAL)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST(vt1.c0 AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)IS(TRIM(DISTINCT vt1.c0, vt1.c0)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE NOCASE)IS(TRIM(DISTINCT vt1.c0, vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE NOCASE)IS(TRIM(DISTINCT vt1.c0, vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0)AND(vt1.c0)) AS TEXT) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0)AND(vt1.c0)) AS TEXT) GROUP BY vt1.c0, vt0.c0 HAVING CAST(SUM(GROUP_CONCAT(TOTAL(AVG(2.126847073E9)))) COLLATE NOCASE AS BLOB) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0)AND(vt1.c0)) AS TEXT) GROUP BY vt1.c0, vt0.c0 HAVING (NOT (CAST(SUM(GROUP_CONCAT(TOTAL(AVG(2.126847073E9)))) COLLATE NOCASE AS BLOB))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt1.c0)AND(vt1.c0)) AS TEXT) GROUP BY vt1.c0, vt0.c0 HAVING ((CAST(SUM(GROUP_CONCAT(TOTAL(AVG(2.126847073E9)))) COLLATE NOCASE AS BLOB)) ISNULL);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON IFNULL(DISTINCT vt0.c0, ((vt1.c0) IS TRUE));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON IFNULL(DISTINCT vt0.c0, ((vt1.c0) IS TRUE)) WHERE (((vt1.c0 COLLATE BINARY) BETWEEN (-1051567017 COLLATE BINARY) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT * FROM vt1 FULL OUTER JOIN vt0 ON IFNULL(DISTINCT vt0.c0, ((vt1.c0) IS TRUE)) WHERE ((NOT (((vt1.c0 COLLATE BINARY) BETWEEN (-1051567017 COLLATE BINARY) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION ALL SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON IFNULL(DISTINCT vt0.c0, ((vt1.c0) IS TRUE)) WHERE (((((vt1.c0 COLLATE BINARY) BETWEEN (-1051567017 COLLATE BINARY) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON IFNULL(DISTINCT vt0.c0, ((vt1.c0) IS TRUE));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0)|(vt1.c0))) IS FALSE)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)|(vt1.c0))) IS FALSE)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)|(vt1.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((+ (((x'') BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((+ (((x'') BETWEEN (vt1.c0) AND (vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((+ (((x'') BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (((((AVG(AVG(vt0.c0))))<=((GROUP_CONCAT(GROUP_CONCAT(AVG(vt0.c0)))))))AND(COUNT(*))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT ((((((AVG(AVG(vt0.c0))))<=((GROUP_CONCAT(GROUP_CONCAT(AVG(vt0.c0)))))))AND(COUNT(*))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (((((((AVG(AVG(vt0.c0))))<=((GROUP_CONCAT(GROUP_CONCAT(AVG(vt0.c0)))))))AND(COUNT(*)))) ISNULL);
SELECT ALL MAX((((- (vt0.c0))) NOT NULL)) FROM vt0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) ISNULL)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE RTRIM) ISNULL)))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((vt1.c0 COLLATE RTRIM) ISNULL)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN -415881586 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'Kt0F8!^\<' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (CAST(vt0.c0 AS REAL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((CASE WHEN vt0.c0 THEN -415881586 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'Kt0F8!^\<' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (CAST(vt0.c0 AS REAL)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN -415881586 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'Kt0F8!^\<' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (CAST(vt0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 WHERE (((((vt1.c0)&(vt0.c0))) NOT BETWEEN (((vt1.c0)>>('zV'))) AND (vt1.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE ((NOT (((((vt1.c0)&(vt0.c0))) NOT BETWEEN (((vt1.c0)>>('zV'))) AND (vt1.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE (((((((vt1.c0)&(vt0.c0))) NOT BETWEEN (((vt1.c0)>>('zV'))) AND (vt1.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(AVG(MAX(vt0.c0))))<=(MIN(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(AVG(MAX(vt0.c0))))<=(MIN(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(AVG(MAX(vt0.c0))))<=(MIN(vt0.c0)))) ISNULL);
SELECT MAX((UPPER(vt0.c0) IN ())) FROM vt0 ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY ASC;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('N')) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('N')) COLLATE RTRIM))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('N')) COLLATE RTRIM) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0)<(vt1.c0)) IN ())) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)<(vt1.c0)) IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)<(vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (vt1.c0) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING MAX(((COUNT(*)) NOT BETWEEN (GROUP_CONCAT(TOTAL(MIN(COUNT(AVG(COUNT(vt0.c0))))))) AND (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(((COUNT(*)) NOT BETWEEN (GROUP_CONCAT(TOTAL(MIN(COUNT(AVG(COUNT(vt0.c0))))))) AND (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((MAX(((COUNT(*)) NOT BETWEEN (GROUP_CONCAT(TOTAL(MIN(COUNT(AVG(COUNT(vt0.c0))))))) AND (vt0.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ())) IS TRUE)) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 IN ())) IS TRUE)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN ())) IS TRUE)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (((vt1.c0)<(vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((NOT (((vt1.c0)<(vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (((((vt1.c0)<(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((~ (load_extension(vt0.c0, -163893498)))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((~ (load_extension(vt0.c0, -163893498)))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((~ (load_extension(vt0.c0, -163893498)))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((COUNT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((COUNT(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((COUNT(vt1.c0)))))) ISNULL);
SELECT SUM(CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END AS BLOB)) FROM vt0, vt1 ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((vt1.c0)AND(NULL)))OR(vt0.c0)))OR(vt1.c0)))AND(NULL)))) AND ((((vt1.c0)>=(vt0.c0))))) ASC;
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 WHERE (CAST(((vt0.c0)!=(vt1.c0)) AS TEXT)) UNION ALL SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 WHERE ((NOT (CAST(((vt0.c0)<>(vt1.c0)) AS TEXT)))) UNION ALL SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0 WHERE (((CAST(((vt0.c0)!=(vt1.c0)) AS TEXT)) ISNULL));
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON vt1.c0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0, vt0.c0)))) AND (((((vt0.c0, '365284085', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0, vt0.c0)))) AND (((((vt0.c0, '365284085', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0, vt0.c0)))) AND (((((vt0.c0, '365284085', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0)|(vt1.c0)))%((((vt1.c0))>=((NULL)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)|(vt1.c0)))%((((vt1.c0))>=((NULL)))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)|(vt1.c0)))%((((vt1.c0))>=((NULL)))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING SUM(MAX(COUNT(MIN(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(MAX(COUNT(MIN(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((SUM(MAX(COUNT(MIN(vt0.c0))))) ISNULL);
SELECT MIN((('1846468145')+((((vt0.c0)) BETWEEN (('E.xR')) AND ((vt0.c0)))))) FROM vt0 ORDER BY (((CAST(vt0.c0 AS TEXT), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), x''))>=(((NULL IN (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))  NULLS FIRST;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0)||(vt0.c0)) THEN 0.21368202502802858 WHEN ((vt0.c0) NOT NULL) THEN vt0.c0 COLLATE NOCASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN 0x270a636f WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c0))>=((vt0.c0))) END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0)||(vt0.c0)) THEN 0.21368202502802858 WHEN ((vt0.c0) NOT NULL) THEN vt0.c0 COLLATE NOCASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN 0x270a636f WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c0))>=((vt0.c0))) END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0)||(vt0.c0)) THEN 0.21368202502802858 WHEN ((vt0.c0) NOT NULL) THEN vt0.c0 COLLATE NOCASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN 0x270a636f WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c0))>=((vt0.c0))) END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((- ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((NOT ((- ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((((- ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((vt1.c0)GLOB(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT (((vt1.c0)GLOB(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE (((((vt1.c0)GLOB(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING MIN(COUNT(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (MIN(COUNT(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((MIN(COUNT(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (HEX(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN -1333396443 END)) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (HEX(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN -1333396443 END)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((HEX(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN -1333396443 END)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (0.06468378446961986) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (0.06468378446961986))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((0.06468378446961986) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 WHERE (vt1.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(vt1.c0))OR(NULL)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((MAX(vt1.c0))OR(NULL)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MAX(vt1.c0))OR(NULL))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(vt1.c0))OR(NULL)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((MAX(vt1.c0))OR(NULL)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MAX(vt1.c0))OR(NULL))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE COLLATE NOCASE;
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE COLLATE NOCASE WHERE (((vt0.c0 COLLATE NOCASE) IS TRUE)) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE COLLATE NOCASE WHERE ((NOT (((vt0.c0 COLLATE NOCASE) IS TRUE)))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE COLLATE NOCASE WHERE (((((vt0.c0 COLLATE NOCASE) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE COLLATE NOCASE;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE 0.12900080544943338  WHEN vt0.c0 THEN vt0.c0 END)) AND ((((vt0.c0) ISNULL))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((CASE 0.12900080544943338  WHEN vt0.c0 THEN vt0.c0 END)) AND ((((vt0.c0) ISNULL))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((CASE 0.12900080544943338  WHEN vt0.c0 THEN vt0.c0 END)) AND ((((vt0.c0) ISNULL))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING TOTAL(COUNT(NULL)) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (TOTAL(COUNT(NULL)))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((TOTAL(COUNT(NULL))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((('5{}\' COLLATE NOCASE) NOTNULL)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((('5{}\' COLLATE NOCASE) NOTNULL)))) UNION ALL SELECT * FROM vt1 NOT INDEXED WHERE ((((('5{}\' COLLATE NOCASE) NOTNULL)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((+ (((vt0.c0) IS FALSE)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((+ (((vt0.c0) IS FALSE)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((+ (((vt0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (LIKE((((vt1.c0, vt0.c0, x'2748'))<=((vt0.c0, vt1.c0, vt1.c0))), ((vt1.c0)<(vt0.c0)), '9')) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (LIKE((((vt1.c0, vt0.c0, x'2748'))<=((vt0.c0, vt1.c0, vt1.c0))), ((vt1.c0)<(vt0.c0)), '9')))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((LIKE((((vt1.c0, vt0.c0, x'2748'))<=((vt0.c0, vt1.c0, vt1.c0))), ((vt1.c0)<(vt0.c0)), '9')) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (+ (SUM(GROUP_CONCAT(MAX(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((+ (SUM(GROUP_CONCAT(MAX(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((+ (SUM(GROUP_CONCAT(MAX(vt1.c0)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((NOT (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((NOT (vt0.c0))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((((vt1.c0))=((vt1.c0))))>(((vt1.c0) NOTNULL))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((((vt1.c0))==((vt1.c0))))>(((vt1.c0) NOTNULL))) WHERE ((NOT ((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, 0Xffffffffb4faafdf, vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((((vt1.c0))=((vt1.c0))))>(((vt1.c0) NOTNULL))) WHERE ((NOT ((NOT ((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, 0Xffffffffb4faafdf, vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((((vt1.c0))=((vt1.c0))))>(((vt1.c0) NOTNULL))) WHERE ((((NOT ((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, 0Xffffffffb4faafdf, vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((((vt1.c0))=((vt1.c0))))>(((vt1.c0) NOTNULL))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL SUM((((((((('zNMA|4')AND((('-163893498') BETWEEN (vt1.c0) AND (vt1.c0)))))OR('0.5889071730289938')))AND(((vt1.c0)/(vt0.c0)))))AND(((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) FROM vt0, vt1 ORDER BY CAST('-655520149' AS INTEGER) DESC;
SELECT vt0.c0 FROM vt0, vt1;
SELECT vt0.c0 FROM vt0, vt1 WHERE (CAST(((vt1.c0)=(vt1.c0)) AS TEXT)) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT (CAST(((vt1.c0)=(vt1.c0)) AS TEXT)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((CAST(((vt1.c0)==(vt1.c0)) AS TEXT)) ISNULL));
SELECT vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0) NOTNULL)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) NOTNULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOTNULL)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CAST(ROUND(vt1.c0, vt1.c0) AS REAL)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(ROUND(vt1.c0, vt1.c0) AS REAL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CAST(ROUND(vt1.c0, vt1.c0) AS REAL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(((AVG(vt0.c0))<<(SUM(-1153793937)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(((AVG(vt0.c0))<<(SUM(-1153793937)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(((AVG(vt0.c0))<<(SUM(-1153793937))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((((vt1.c0)GLOB(vt1.c0)))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((((vt1.c0)GLOB(vt1.c0)))))))) UNION ALL SELECT * FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((((vt1.c0)GLOB(vt1.c0)))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (NULL) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((UNLIKELY(DISTINCT vt0.c0))AND(((vt0.c0)%(vt0.c0)))))OR(((vt0.c0) IS TRUE))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((UNLIKELY(DISTINCT vt0.c0))AND(((vt0.c0)%(vt0.c0)))))OR(((vt0.c0) IS TRUE))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0) NOTNULL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((UNLIKELY(DISTINCT vt0.c0))AND(((vt0.c0)%(vt0.c0)))))OR(((vt0.c0) IS TRUE))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0) NOTNULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING COUNT(AVG(SUM(vt1.c0)) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (COUNT(AVG(SUM(vt1.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((COUNT(AVG(SUM(vt1.c0)) COLLATE RTRIM)) ISNULL);
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE ((((((((((0xffffffffb085fc25)AND('-530647342')))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)) IN ())) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((((((((((0xffffffffb085fc25)AND('-530647342')))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)) IN ())))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((((((((((((0xffffffffb085fc25)AND('-530647342')))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)) IN ())) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0)LIKE(vt1.c0)) IN (((vt1.c0)==(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)LIKE(vt1.c0)) IN (((vt1.c0)==(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)LIKE(vt1.c0)) IN (((vt1.c0)==(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((0.5250958740922215) NOTNULL)) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((0.5250958740922215) NOTNULL)))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((0.5250958740922215) NOTNULL)) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(CAST(COUNT(COUNT(vt1.c0)) AS INTEGER)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(CAST(COUNT(COUNT(vt1.c0)) AS INTEGER)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(CAST(COUNT(COUNT(vt1.c0)) AS INTEGER))) ISNULL);
SELECT ALL SUM(((vt0.c0)+(vt0.c0)) COLLATE RTRIM) FROM vt0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(NULL AS REAL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(NULL AS REAL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(NULL AS REAL)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((- (((vt1.c0) NOTNULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((- (((vt1.c0) NOTNULL)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((- (((vt1.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((vt0.c0 IN ()) COLLATE RTRIM))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((vt0.c0 IN ()) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) GROUP BY vt0.c0 HAVING ((((CASE MAX(vt1.c0)  WHEN vt1.c0 THEN SUM('831042968') WHEN vt1.c0 THEN MAX(SUM(AVG(TOTAL(TOTAL(vt0.c0))))) WHEN MAX(vt1.c0) THEN vt0.c0 ELSE vt1.c0 END)AND(MIN(vt1.c0))))AND(HEX(vt1.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) GROUP BY vt0.c0 HAVING (NOT (((((CASE MAX(vt1.c0)  WHEN vt1.c0 THEN SUM('831042968') WHEN vt1.c0 THEN MAX(SUM(AVG(TOTAL(TOTAL(vt0.c0))))) WHEN MAX(vt1.c0) THEN vt0.c0 ELSE vt1.c0 END)AND(MIN(vt1.c0))))AND(HEX(vt1.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) GROUP BY vt0.c0 HAVING ((((((CASE MAX(vt1.c0)  WHEN vt1.c0 THEN SUM('831042968') WHEN vt1.c0 THEN MAX(SUM(AVG(TOTAL(TOTAL(vt0.c0))))) WHEN MAX(vt1.c0) THEN vt0.c0 ELSE vt1.c0 END)AND(MIN(vt1.c0))))AND(HEX(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS REAL)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS REAL)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS REAL)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (LIKELIHOOD(((vt1.c0) NOT BETWEEN ('0.0') AND (vt1.c0)), 0.27697327310185105)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (LIKELIHOOD(((vt1.c0) NOT BETWEEN ('0.0') AND (vt1.c0)), 0.27697327310185105)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((LIKELIHOOD(((vt1.c0) NOT BETWEEN ('0.0') AND (vt1.c0)), 0.27697327310185105)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c0 FROM vt1 CROSS JOIN vt0 ON (- ((vt0.c0 IN ()))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1 CROSS JOIN vt0 ON (- ((vt0.c0 IN ()))) WHERE (0.9689731037876429) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1 CROSS JOIN vt0 ON (- ((vt0.c0 IN ()))) WHERE ((NOT (0.9689731037876429))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1 CROSS JOIN vt0 ON (- ((vt0.c0 IN ()))) WHERE (((0.9689731037876429) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 CROSS JOIN vt0 ON (- ((vt0.c0 IN ()))) GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(((vt1.c0)<(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(((vt1.c0)<(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(((vt1.c0)<(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(((vt1.c0)<(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(((vt1.c0)<(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(((vt1.c0)<(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END AS INTEGER)) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE ((NOT (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END AS INTEGER)))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE (((CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END AS INTEGER)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((+ ((((vt1.c0, x'', vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((+ ((((vt1.c0, x'', vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((+ ((((vt1.c0, x'', vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(vt0.c0)) NOTNULL) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(vt0.c0)) NOTNULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(vt0.c0)) NOTNULL)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(vt0.c0)) NOTNULL) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(vt0.c0)) NOTNULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(vt0.c0)) NOTNULL)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0)AND(vt0.c0)))OR(NULL)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((((vt1.c0)AND(vt0.c0)))OR(NULL)) COLLATE NOCASE))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((((((vt1.c0)AND(vt0.c0)))OR(NULL)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((~ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((~ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((~ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN 0.8632003057853455 ELSE vt1.c0 END) NOT NULL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((CASE WHEN vt1.c0 THEN 0.8632003057853455 ELSE vt1.c0 END) NOT NULL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN 0.8632003057853455 ELSE vt1.c0 END) NOT NULL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(MIN(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(MIN(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(MIN(vt1.c0))) ISNULL);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0;
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE ((((vt1.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0 COLLATE BINARY)))) UNION ALL SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0 COLLATE BINARY)))))) UNION ALL SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE ((((((vt1.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0 COLLATE BINARY)))) ISNULL));
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((TRIM(vt0.c0, vt0.c0))IS NOT(((vt0.c0) NOT BETWEEN ('1998522328') AND (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((TRIM(vt0.c0, vt0.c0))IS NOT(((vt0.c0) NOT BETWEEN ('1998522328') AND (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((TRIM(vt0.c0, vt0.c0))IS NOT(((vt0.c0) NOT BETWEEN ('1998522328') AND (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0) IS FALSE)) NOT NULL) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0) IS FALSE)) NOT NULL) GROUP BY vt0.c0, vt1.c0 HAVING (MAX(vt0.c0) IN ()) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0) IS FALSE)) NOT NULL) GROUP BY vt0.c0, vt1.c0 HAVING (NOT ((MAX(vt0.c0) IN ()))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0) IS FALSE)) NOT NULL) GROUP BY vt0.c0, vt1.c0 HAVING (((MAX(vt0.c0) IN ())) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0) IS FALSE)) NOT NULL) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0) IS FALSE)) NOT NULL) GROUP BY vt0.c0, vt1.c0 HAVING (MAX(vt0.c0) IN ()) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0) IS FALSE)) NOT NULL) GROUP BY vt0.c0, vt1.c0 HAVING (NOT ((MAX(vt0.c0) IN ()))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0) IS FALSE)) NOT NULL) GROUP BY vt0.c0, vt1.c0 HAVING (((MAX(vt0.c0) IN ())) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0) IS FALSE)) NOT NULL) GROUP BY vt0.c0, vt1.c0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN ((((vt1.c0))<=((vt1.c0)))) AND ((- (vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN ((((vt1.c0))<=((vt1.c0)))) AND ((- (vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN ((((vt1.c0))<=((vt1.c0)))) AND ((- (vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CASE ((vt0.c0)&(vt0.c0))  WHEN (NULL IN (vt0.c0, vt1.c0)) THEN (~ (vt1.c0)) END) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (CASE ((vt0.c0)&(vt0.c0))  WHEN (NULL IN (vt0.c0, vt1.c0)) THEN (~ (vt1.c0)) END))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((CASE ((vt0.c0)&(vt0.c0))  WHEN (NULL IN (vt0.c0, vt1.c0)) THEN (~ (vt1.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS BLOB)) BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB)) BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (((((((TOTAL(MIN(GROUP_CONCAT(SUM(SUM(vt1.c0))))))) BETWEEN ((SUM(vt0.c0))) AND ((vt0.c0))))AND(TOTAL(vt0.c0))))OR(((AVG(TOTAL(vt1.c0)))<<(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT ((((((((TOTAL(MIN(GROUP_CONCAT(SUM(SUM(vt1.c0))))))) BETWEEN ((SUM(vt0.c0))) AND ((vt0.c0))))AND(TOTAL(vt0.c0))))OR(((AVG(TOTAL(vt1.c0)))<<(COUNT(*))))))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (((((((((TOTAL(MIN(GROUP_CONCAT(SUM(SUM(vt1.c0))))))) BETWEEN ((SUM(vt0.c0))) AND ((vt0.c0))))AND(TOTAL(vt0.c0))))OR(((AVG(TOTAL(vt1.c0)))<<(COUNT(*)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 NATURAL JOIN vt1 WHERE (((((vt1.c0)OR(((vt0.c0) IS FALSE))))AND(((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND('')))OR(vt1.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 NATURAL JOIN vt1 WHERE ((NOT (((((vt1.c0)OR(((vt0.c0) IS FALSE))))AND(((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND('')))OR(vt1.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 NATURAL JOIN vt1 WHERE (((((((vt1.c0)OR(((vt0.c0) IS FALSE))))AND(((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND('')))OR(vt1.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((CAST(MIN(COUNT(vt0.c0)) AS REAL))AND(CAST('(U' AS INTEGER))))OR(TOTAL('-1e500'))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((CAST(MIN(COUNT(vt0.c0)) AS REAL))AND(CAST('(U' AS INTEGER))))OR(TOTAL('-1e500'))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((CAST(MIN(COUNT(vt0.c0)) AS REAL))AND(CAST('(U' AS INTEGER))))OR(TOTAL('-1e500')))) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (CASE WHEN (vt0.c0 IN (vt1.c0, vt0.c0)) THEN '251417578' ELSE ((vt0.c0)<(vt0.c0)) END) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (CASE WHEN (vt0.c0 IN (vt1.c0, vt0.c0)) THEN '251417578' ELSE ((vt0.c0)<(vt0.c0)) END))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((CASE WHEN (vt0.c0 IN (vt1.c0, vt0.c0)) THEN '251417578' ELSE ((vt0.c0)<(vt0.c0)) END) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((((x'88cf')OR(vt0.c0)))OR('~e')))AND(((vt0.c0)<(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((((x'88cf')OR(vt0.c0)))OR('~e')))AND(((vt0.c0)<(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((((x'88cf')OR(vt0.c0)))OR('~e')))AND(((vt0.c0)<(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0))>=((vt0.c0))) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0))>=((vt0.c0))) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0))>=((vt0.c0))) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (GROUP_CONCAT(MAX(GROUP_CONCAT(vt0.c0))) IN (MAX(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((GROUP_CONCAT(MAX(GROUP_CONCAT(vt0.c0))) IN (MAX(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((GROUP_CONCAT(MAX(GROUP_CONCAT(vt0.c0))) IN (MAX(vt0.c0)))) ISNULL);
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN (- (vt1.c0)) THEN UNLIKELY(DISTINCT vt0.c0) WHEN (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt1.c0))) THEN CAST(vt1.c0 AS NUMERIC) WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN CAST(vt0.c0 AS TEXT) ELSE '2050641601' END) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (CASE WHEN (- (vt1.c0)) THEN UNLIKELY(DISTINCT vt0.c0) WHEN (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt1.c0))) THEN CAST(vt1.c0 AS NUMERIC) WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN CAST(vt0.c0 AS TEXT) ELSE '2050641601' END))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((CASE WHEN (- (vt1.c0)) THEN UNLIKELY(DISTINCT vt0.c0) WHEN (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt1.c0))) THEN CAST(vt1.c0 AS NUMERIC) WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN CAST(vt0.c0 AS TEXT) ELSE '2050641601' END) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((((((((((((vt0.c0))<((''))))OR(NULL)))OR(((vt1.c0)>>(vt0.c0)))))OR((((vt0.c0))>((vt0.c0))))))OR(NULL))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((((((((((vt0.c0))<((''))))OR(NULL)))OR(((vt1.c0)>>(vt0.c0)))))OR((((vt0.c0))>((vt0.c0))))))OR(NULL))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((((((((((((((vt0.c0))<((''))))OR(NULL)))OR(((vt1.c0)>>(vt0.c0)))))OR((((vt0.c0))>((vt0.c0))))))OR(NULL))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON (CAST(vt1.c0 AS REAL) IN (((vt1.c0)<>(vt0.c0)))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON (CAST(vt1.c0 AS REAL) IN (((vt1.c0)!=(vt0.c0)))) WHERE ((- (NULL))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON (CAST(vt1.c0 AS REAL) IN (((vt1.c0)!=(vt0.c0)))) WHERE ((NOT ((- (NULL))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON (CAST(vt1.c0 AS REAL) IN (((vt1.c0)!=(vt0.c0)))) WHERE ((((- (NULL))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON (CAST(vt1.c0 AS REAL) IN (((vt1.c0)<>(vt0.c0)))) GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (+ (((MIN(vt0.c0)) IS TRUE))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((+ (((MIN(vt0.c0)) IS TRUE))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((+ (((MIN(vt0.c0)) IS TRUE)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (+ (((MIN(vt0.c0)) IS TRUE))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((+ (((MIN(vt0.c0)) IS TRUE))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((+ (((MIN(vt0.c0)) IS TRUE)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE (((json_array_length(vt0.c0, vt1.c0))>(COALESCE(DISTINCT vt1.c0, vt0.c0)))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (((json_array_length(vt0.c0, vt1.c0))>(COALESCE(DISTINCT vt1.c0, vt0.c0)))))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((((json_array_length(vt0.c0, vt1.c0))>(COALESCE(DISTINCT vt1.c0, vt0.c0)))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((((((vt0.c0, NULL, vt1.c0)) NOT BETWEEN ((1.672599163E9, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt0.c0))))OR(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR((vt1.c0 IN ())))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((((((vt0.c0, NULL, vt1.c0)) NOT BETWEEN ((1.672599163E9, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt0.c0))))OR(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR((vt1.c0 IN ())))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((((((((vt0.c0, NULL, vt1.c0)) NOT BETWEEN ((1.672599163E9, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt0.c0))))OR(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR((vt1.c0 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 WHERE (((((vt0.c0)IS(vt1.c0)))==(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((vt0.c0)IS(vt1.c0)))=(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((((((vt0.c0)IS(vt1.c0)))=(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((COUNT(*)))<((AVG(COUNT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((COUNT(*)))<((AVG(COUNT(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((COUNT(*)))<((AVG(COUNT(vt0.c0)))))) ISNULL);
SELECT SUM(CAST((- (vt0.c0)) AS TEXT)) FROM vt0, vt1 ORDER BY ((CAST(vt0.c0 AS TEXT))<<(vt1.c0 COLLATE NOCASE)) DESC;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ('') UNION ALL SELECT * FROM vt0 WHERE ((NOT (''))) UNION ALL SELECT * FROM vt0 WHERE ((('') ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN (('1418867768')) AND ((vt1.c0))))<=(0Xf831b9a COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((((vt1.c0)) BETWEEN (('1418867768')) AND ((vt1.c0))))<=(0xf831b9a COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((((vt1.c0)) BETWEEN (('1418867768')) AND ((vt1.c0))))<=(0Xf831b9a COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((((((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))OR(x'')))OR(vt0.c0)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt0.c0))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (((((((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))OR(x'')))OR(vt0.c0)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt0.c0))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((((((((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))OR(x'')))OR(vt0.c0)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt0.c0))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((TOTAL(vt1.c0))OR(GROUP_CONCAT(vt1.c0))))OR('')) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((TOTAL(vt1.c0))OR(GROUP_CONCAT(vt1.c0))))OR('')))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((TOTAL(vt1.c0))OR(GROUP_CONCAT(vt1.c0))))OR(''))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((TOTAL(vt1.c0))OR(GROUP_CONCAT(vt1.c0))))OR('')) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((TOTAL(vt1.c0))OR(GROUP_CONCAT(vt1.c0))))OR('')))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((TOTAL(vt1.c0))OR(GROUP_CONCAT(vt1.c0))))OR(''))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0;
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0;
SELECT DISTINCT vt1.c0 FROM vt1 NOT INDEXED;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(ABS(DISTINCT vt1.c0) AS REAL)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(ABS(DISTINCT vt1.c0) AS REAL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(ABS(DISTINCT vt1.c0) AS REAL)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1 NOT INDEXED;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((json_array_length(vt0.c0))<<(((vt0.c0) NOTNULL))) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((json_array_length(vt0.c0))<<(((vt0.c0) NOTNULL))) WHERE ((+ ((~ (vt1.c0))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((json_array_length(vt0.c0))<<(((vt0.c0) NOTNULL))) WHERE ((NOT ((+ ((~ (vt1.c0))))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((json_array_length(vt0.c0))<<(((vt0.c0) NOTNULL))) WHERE ((((+ ((~ (vt1.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((json_array_length(vt0.c0))<<(((vt0.c0) NOTNULL))) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST('0\n' AS INTEGER) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST('0\n' AS INTEGER))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST('0\n' AS INTEGER)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST('0\n' AS INTEGER) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST('0\n' AS INTEGER))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST('0\n' AS INTEGER)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)|(vt0.c0)), (((vt0.c0))<((vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0, CAST(vt0.c0 AS BLOB)))<(((vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((x'6ef8')=(vt0.c0)), 0Xfffffffffd2560b6 COLLATE NOCASE, NULL)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((((vt0.c0)|(vt0.c0)), (((vt0.c0))<((vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0, CAST(vt0.c0 AS BLOB)))<(((vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((x'6ef8')=(vt0.c0)), 0Xfffffffffd2560b6 COLLATE NOCASE, NULL)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)|(vt0.c0)), (((vt0.c0))<((vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0, CAST(vt0.c0 AS BLOB)))<(((vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((x'6ef8')=(vt0.c0)), 0xfffffffffd2560b6 COLLATE NOCASE, NULL)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0))<((vt1.c0))))%(((vt1.c0)>=(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((((vt1.c0))<((vt1.c0))))%(((vt1.c0)>=(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((((vt1.c0))<((vt1.c0))))%(((vt1.c0)>=(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)>>(vt0.c0)))AND(vt0.c0)))OR(CAST(vt0.c0 AS TEXT)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)>>(vt0.c0)))AND(vt0.c0)))OR(CAST(vt0.c0 AS TEXT)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)>>(vt0.c0)))AND(vt0.c0)))OR(CAST(vt0.c0 AS TEXT)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((((vt1.c0)OR(vt0.c0)))OR('-0.0')))AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (DATE(vt1.c0, vt0.c0, vt1.c0)) AND (IFNULL(DISTINCT vt1.c0, vt1.c0))) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((((vt1.c0)OR(vt0.c0)))OR('-0.0')))AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (DATE(vt1.c0, vt0.c0, vt1.c0)) AND (IFNULL(DISTINCT vt1.c0, vt1.c0))) GROUP BY vt0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((((vt1.c0)OR(vt0.c0)))OR('-0.0')))AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (DATE(vt1.c0, vt0.c0, vt1.c0)) AND (IFNULL(DISTINCT vt1.c0, vt1.c0))) GROUP BY vt0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((((vt1.c0)OR(vt0.c0)))OR('-0.0')))AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (DATE(vt1.c0, vt0.c0, vt1.c0)) AND (IFNULL(DISTINCT vt1.c0, vt1.c0))) GROUP BY vt0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((((vt1.c0)OR(vt0.c0)))OR('-0.0')))AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (DATE(vt1.c0, vt0.c0, vt1.c0)) AND (IFNULL(DISTINCT vt1.c0, vt1.c0))) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((((vt1.c0)OR(vt0.c0)))OR('-0.0')))AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (DATE(vt1.c0, vt0.c0, vt1.c0)) AND (IFNULL(DISTINCT vt1.c0, vt1.c0))) GROUP BY vt0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((((vt1.c0)OR(vt0.c0)))OR('-0.0')))AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (DATE(vt1.c0, vt0.c0, vt1.c0)) AND (IFNULL(DISTINCT vt1.c0, vt1.c0))) GROUP BY vt0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((((vt1.c0)OR(vt0.c0)))OR('-0.0')))AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (DATE(vt1.c0, vt0.c0, vt1.c0)) AND (IFNULL(DISTINCT vt1.c0, vt1.c0))) GROUP BY vt0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((((vt1.c0)OR(vt0.c0)))OR('-0.0')))AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (DATE(vt1.c0, vt0.c0, vt1.c0)) AND (IFNULL(DISTINCT vt1.c0, vt1.c0))) GROUP BY vt0.c0, vt1.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((((x'')/(vt0.c0))))>=((ABS(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((((x'')/(vt0.c0))))>=((ABS(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((((x'')/(vt0.c0))))>=((ABS(vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS BLOB)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((NOT (CAST(vt0.c0 AS BLOB)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((NOT (CAST(vt0.c0 AS BLOB)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(AVG(SUM(vt0.c0)) AS REAL) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(AVG(SUM(vt0.c0)) AS REAL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(AVG(SUM(vt0.c0)) AS REAL)) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON '?(fvGI|a';
SELECT ALL vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON '?(fvGI|a' WHERE ((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END, ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (((vt1.c0))<=((vt1.c0)))))=((CAST(vt0.c0 AS TEXT), '^â¯¬_X', (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON '?(fvGI|a' WHERE ((NOT ((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END, ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (((vt1.c0))<=((vt1.c0)))))==((CAST(vt0.c0 AS TEXT), '^â¯¬_X', (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON '?(fvGI|a' WHERE ((((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END, ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (((vt1.c0))<=((vt1.c0)))))=((CAST(vt0.c0 AS TEXT), '^â¯¬_X', (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) ISNULL));
SELECT vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON '?(fvGI|a';
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END)>=(x'1457'))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 END)>=(x'1457'))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 END)>=(x'1457'))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0) IS TRUE) IN ())) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0) IS TRUE) IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0) IS TRUE) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE WHEN ((vt0.c0)+(GROUP_CONCAT(SUM(AVG(MIN(vt0.c0)))))) THEN MIN(vt0.c0) COLLATE BINARY END UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE WHEN ((vt0.c0)+(GROUP_CONCAT(SUM(AVG(MIN(vt0.c0)))))) THEN MIN(vt0.c0) COLLATE BINARY END)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE WHEN ((vt0.c0)+(GROUP_CONCAT(SUM(AVG(MIN(vt0.c0)))))) THEN MIN(vt0.c0) COLLATE BINARY END) ISNULL);
SELECT ALL MAX((~ (x''))) FROM vt1 ORDER BY UNLIKELY((NOT (vt1.c0))) DESC;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)=(vt1.c0))) IS TRUE)) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)=(vt1.c0))) IS TRUE)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)==(vt1.c0))) IS TRUE)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE 0x5ed94395 END))<>((vt0.c0 COLLATE RTRIM)));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE 0x5ed94395 END))!=((vt0.c0 COLLATE RTRIM))) WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE 0X5ed94395 END))!=((vt0.c0 COLLATE RTRIM))) WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE 0X5ed94395 END))<>((vt0.c0 COLLATE RTRIM))) WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE 0x5ed94395 END))<>((vt0.c0 COLLATE RTRIM)));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (COUNT(vt0.c0) IN ((vt0.c0 IN (vt0.c0)), (~ (vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((COUNT(vt0.c0) IN ((vt0.c0 IN (vt0.c0)), (~ (vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((COUNT(vt0.c0) IN ((vt0.c0 IN (vt0.c0)), (~ (vt0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (COUNT(vt0.c0) IN ((vt0.c0 IN (vt0.c0)), (~ (vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((COUNT(vt0.c0) IN ((vt0.c0 IN (vt0.c0)), (~ (vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((COUNT(vt0.c0) IN ((vt0.c0 IN (vt0.c0)), (~ (vt0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0))) NOT NULL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0)OR(vt0.c0))) NOT NULL)))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0))) NOT NULL)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((vt0.c0) NOTNULL)) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((vt0.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.c0) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((vt0.c0 COLLATE BINARY))<=((0.2829634767341719)))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((vt0.c0 COLLATE BINARY))<=((0.2829634767341719)))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((((vt0.c0 COLLATE BINARY))<=((0.2829634767341719)))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON DATETIME(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, ((vt0.c0)=(vt1.c0)), ((vt1.c0)+(vt0.c0)), ((vt1.c0)IS(vt1.c0)), LOWER(DISTINCT vt1.c0)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON DATETIME(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, ((vt0.c0)=(vt1.c0)), ((vt1.c0)+(vt0.c0)), ((vt1.c0)IS(vt1.c0)), LOWER(DISTINCT vt1.c0)) GROUP BY vt1.c0 HAVING AVG((MAX(SUM(0.14658629248456123)) IN ())) UNION ALL SELECT ALL vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON DATETIME(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, ((vt0.c0)==(vt1.c0)), ((vt1.c0)+(vt0.c0)), ((vt1.c0)IS(vt1.c0)), LOWER(DISTINCT vt1.c0)) GROUP BY vt1.c0 HAVING (NOT (AVG((MAX(SUM(0.14658629248456123)) IN ())))) UNION ALL SELECT vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON DATETIME(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, ((vt0.c0)==(vt1.c0)), ((vt1.c0)+(vt0.c0)), ((vt1.c0)IS(vt1.c0)), LOWER(DISTINCT vt1.c0)) GROUP BY vt1.c0 HAVING ((AVG((MAX(SUM(0.14658629248456123)) IN ()))) ISNULL);
SELECT ALL vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON DATETIME(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, ((vt0.c0)=(vt1.c0)), ((vt1.c0)+(vt0.c0)), ((vt1.c0)IS(vt1.c0)), LOWER(DISTINCT vt1.c0)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON DATETIME(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, ((vt0.c0)=(vt1.c0)), ((vt1.c0)+(vt0.c0)), ((vt1.c0)IS(vt1.c0)), LOWER(DISTINCT vt1.c0)) GROUP BY vt1.c0 HAVING AVG((MAX(SUM(0.14658629248456123)) IN ())) UNION ALL SELECT ALL vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON DATETIME(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, ((vt0.c0)==(vt1.c0)), ((vt1.c0)+(vt0.c0)), ((vt1.c0)IS(vt1.c0)), LOWER(DISTINCT vt1.c0)) GROUP BY vt1.c0 HAVING (NOT (AVG((MAX(SUM(0.14658629248456123)) IN ())))) UNION ALL SELECT vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON DATETIME(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, ((vt0.c0)==(vt1.c0)), ((vt1.c0)+(vt0.c0)), ((vt1.c0)IS(vt1.c0)), LOWER(DISTINCT vt1.c0)) GROUP BY vt1.c0 HAVING ((AVG((MAX(SUM(0.14658629248456123)) IN ()))) ISNULL);
SELECT ALL vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON DATETIME(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, ((vt0.c0)=(vt1.c0)), ((vt1.c0)+(vt0.c0)), ((vt1.c0)IS(vt1.c0)), LOWER(DISTINCT vt1.c0)) GROUP BY vt1.c0;
SELECT * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE ((+ ((- (vt0.c0))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((+ ((- (vt0.c0))))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((((+ ((- (vt0.c0))))) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (json_object(((vt1.c0)=(vt0.c0)), (~ (vt1.c0)))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((NOT (json_object(((vt1.c0)==(vt0.c0)), (~ (vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (((json_object(((vt1.c0)==(vt0.c0)), (~ (vt1.c0)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0))<((vt1.c0))), LIKELIHOOD('8[', 0.9147094267254684), NULLIF(DISTINCT vt1.c0, vt1.c0)))<>((CAST(x'' AS NUMERIC), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c0 IN ()))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0))<((vt1.c0))), LIKELIHOOD('8[', 0.9147094267254684), NULLIF(DISTINCT vt1.c0, vt1.c0)))!=((CAST(x'' AS NUMERIC), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c0 IN ()))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((vt1.c0))<((vt1.c0))), LIKELIHOOD('8[', 0.9147094267254684), NULLIF(DISTINCT vt1.c0, vt1.c0)))<>((CAST(x'' AS NUMERIC), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c0 IN ()))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING json_extract(SUM(COUNT(*)), CAST(vt0.c0 AS NUMERIC), (GROUP_CONCAT(vt0.c0) IN (GROUP_CONCAT(vt0.c0))), GROUP_CONCAT(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (json_extract(SUM(COUNT(*)), CAST(vt0.c0 AS NUMERIC), (GROUP_CONCAT(vt0.c0) IN (GROUP_CONCAT(vt0.c0))), GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((json_extract(SUM(COUNT(*)), CAST(vt0.c0 AS NUMERIC), (GROUP_CONCAT(vt0.c0) IN (GROUP_CONCAT(vt0.c0))), GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (~ (TRIM(vt1.c0, vt1.c0)));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON (~ (TRIM(vt1.c0, vt1.c0))) WHERE (NULL) UNION ALL SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON (~ (TRIM(vt1.c0, vt1.c0))) WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON (~ (TRIM(vt1.c0, vt1.c0))) WHERE (((NULL) ISNULL));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (~ (TRIM(vt1.c0, vt1.c0)));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)OR((vt1.c0 IN ()))))OR((vt1.c0 IN (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR((NOT (1492219459))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((((((vt1.c0)OR((vt1.c0 IN ()))))OR((vt1.c0 IN (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR((NOT (1492219459))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((((vt1.c0)OR((vt1.c0 IN ()))))OR((vt1.c0 IN (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR((NOT (1492219459))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=((~ (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=((~ (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=((~ (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (CAST(vt1.c0 AS TEXT) IN ()) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((CAST(vt1.c0 AS TEXT) IN ()))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((CAST(vt1.c0 AS TEXT) IN ())) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (CAST(vt1.c0 AS TEXT) IN ()) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((CAST(vt1.c0 AS TEXT) IN ()))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((CAST(vt1.c0 AS TEXT) IN ())) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT TOTAL(((CASE WHEN vt0.c0 THEN '-123479733' END) NOT NULL)) FROM vt0 ORDER BY CASE vt0.c0  WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0) ISNULL) END, IFNULL(DISTINCT ((vt0.c0) NOT NULL), (vt0.c0 IN ())) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))*((vt0.c0 IN (vt0.c0))))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))*((vt0.c0 IN (vt0.c0))))))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))*((vt0.c0 IN (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((((((((- (vt1.c0)))OR(((vt1.c0) IS FALSE))))AND(CAST('' AS BLOB))))AND(CASE vt1.c0  WHEN '42' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0xfe0fbb THEN vt1.c0 END)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((((((((- (vt1.c0)))OR(((vt1.c0) IS FALSE))))AND(CAST('' AS BLOB))))AND(CASE vt1.c0  WHEN '42' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0Xfe0fbb THEN vt1.c0 END)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((((((((- (vt1.c0)))OR(((vt1.c0) IS FALSE))))AND(CAST('' AS BLOB))))AND(CASE vt1.c0  WHEN '42' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0Xfe0fbb THEN vt1.c0 END)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING TOTAL(AVG(vt0.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(AVG(vt0.c0)))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((TOTAL(AVG(vt0.c0))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)))) UNION ALL SELECT * FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((LAST_INSERT_ROWID())IS((vt0.c0 IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((LAST_INSERT_ROWID())IS((vt0.c0 IN ())))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((LAST_INSERT_ROWID())IS((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(COUNT(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(COUNT(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(COUNT(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT MIN((((vt1.c0 IN ())) ISNULL)) FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt0 CROSS JOIN vt1 ON (((((vt1.c0 IN ()))AND((vt0.c0 IN ()))))OR(vt1.c0));
SELECT vt1.c0 FROM vt0 CROSS JOIN vt1 ON (((((vt1.c0 IN ()))AND((vt0.c0 IN ()))))OR(vt1.c0)) WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN (+ (vt0.c0)) THEN (((vt0.c0))!=((vt0.c0))) WHEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END THEN NULL ELSE ((vt1.c0) NOTNULL) END) UNION ALL SELECT ALL vt1.c0 FROM vt0 CROSS JOIN vt1 ON (((((vt1.c0 IN ()))AND((vt0.c0 IN ()))))OR(vt1.c0)) WHERE ((NOT (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN (+ (vt0.c0)) THEN (((vt0.c0))<>((vt0.c0))) WHEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END THEN NULL ELSE ((vt1.c0) NOTNULL) END))) UNION ALL SELECT vt1.c0 FROM vt0 CROSS JOIN vt1 ON (((((vt1.c0 IN ()))AND((vt0.c0 IN ()))))OR(vt1.c0)) WHERE (((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN (+ (vt0.c0)) THEN (((vt0.c0))<>((vt0.c0))) WHEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END THEN NULL ELSE ((vt1.c0) NOTNULL) END) ISNULL));
SELECT ALL vt1.c0 FROM vt0 CROSS JOIN vt1 ON (((((vt1.c0 IN ()))AND((vt0.c0 IN ()))))OR(vt1.c0));
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) NOT BETWEEN ((NOT (vt1.c0))) AND (((vt0.c0)||(vt0.c0)))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) NOT BETWEEN ((NOT (vt1.c0))) AND (((vt0.c0)||(vt0.c0)))) WHERE (CAST(DATE(vt1.c0, vt0.c0, vt0.c0, vt1.c0, '') AS INTEGER)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) NOT BETWEEN ((NOT (vt1.c0))) AND (((vt0.c0)||(vt0.c0)))) WHERE ((NOT (CAST(DATE(vt1.c0, vt0.c0, vt0.c0, vt1.c0, '') AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) NOT BETWEEN ((NOT (vt1.c0))) AND (((vt0.c0)||(vt0.c0)))) WHERE (((CAST(DATE(vt1.c0, vt0.c0, vt0.c0, vt1.c0, '') AS INTEGER)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) NOT BETWEEN ((NOT (vt1.c0))) AND (((vt0.c0)||(vt0.c0)))) GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE COUNT(MIN(MAX(AVG(vt1.c0))))  WHEN CAST(AVG(TOTAL(COUNT(*))) AS REAL) THEN vt1.c0 END UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE COUNT(MIN(MAX(AVG(vt1.c0))))  WHEN CAST(AVG(TOTAL(COUNT(*))) AS REAL) THEN vt1.c0 END)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE COUNT(MIN(MAX(AVG(vt1.c0))))  WHEN CAST(AVG(TOTAL(COUNT(*))) AS REAL) THEN vt1.c0 END) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((vt1.c0)OR(((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))))AND((vt1.c0 IN ())))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((vt1.c0)OR(((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))))AND((vt1.c0 IN ())))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((((vt1.c0)OR(((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))))AND((vt1.c0 IN ())))) ISNULL));
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(CAST(vt1.c0 AS REAL) AS BLOB)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(CAST(vt1.c0 AS REAL) AS BLOB)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(CAST(vt1.c0 AS REAL) AS BLOB)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT (CAST(vt1.c0 AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT ((NOT (CAST(vt1.c0 AS INTEGER)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE ((((NOT (CAST(vt1.c0 AS INTEGER)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING COUNT(((vt1.c0)IS NOT(vt1.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(((vt1.c0)IS NOT(vt1.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((COUNT(((vt1.c0)IS NOT(vt1.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING COUNT(((vt1.c0)IS NOT(vt1.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(((vt1.c0)IS NOT(vt1.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((COUNT(((vt1.c0)IS NOT(vt1.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (CASE ((vt0.c0)+(vt0.c0))  WHEN ((vt1.c0) NOT NULL) THEN CAST(vt1.c0 AS TEXT) WHEN '1283752947' THEN ABS(vt0.c0) WHEN json_patch(vt1.c0, vt0.c0) THEN vt0.c0 END) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (CASE ((vt0.c0)+(vt0.c0))  WHEN ((vt1.c0) NOT NULL) THEN CAST(vt1.c0 AS TEXT) WHEN '1283752947' THEN ABS(vt0.c0) WHEN json_patch(vt1.c0, vt0.c0) THEN vt0.c0 END))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((CASE ((vt0.c0)+(vt0.c0))  WHEN ((vt1.c0) NOT NULL) THEN CAST(vt1.c0 AS TEXT) WHEN '1283752947' THEN ABS(vt0.c0) WHEN json_patch(vt1.c0, vt0.c0) THEN vt0.c0 END) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON (+ (UNICODE(vt0.c0)));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON (+ (UNICODE(vt0.c0))) WHERE ((((vt1.c0, vt1.c0, 'B(3Q4.4 ', vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, NULL, vt1.c0)) AND ((vt1.c0, vt1.c0, '', vt1.c0, vt0.c0))) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON (+ (UNICODE(vt0.c0))) WHERE ((NOT ((((vt1.c0, vt1.c0, 'B(3Q4.4 ', vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, NULL, vt1.c0)) AND ((vt1.c0, vt1.c0, '', vt1.c0, vt0.c0))) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON (+ (UNICODE(vt0.c0))) WHERE ((((((vt1.c0, vt1.c0, 'B(3Q4.4 ', vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, NULL, vt1.c0)) AND ((vt1.c0, vt1.c0, '', vt1.c0, vt0.c0))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON (+ (UNICODE(vt0.c0)));
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((('')|(NULL))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((('')|(NULL))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((('')|(NULL))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING CAST(x'' AS REAL) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (CAST(x'' AS REAL))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((CAST(x'' AS REAL)) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING CAST(x'' AS REAL) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (CAST(x'' AS REAL))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((CAST(x'' AS REAL)) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 COLLATE RTRIM IN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0 COLLATE RTRIM IN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING MAX(((SUM(TOTAL(AVG(COUNT(*))))) NOT NULL)) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (MAX(((SUM(TOTAL(AVG(COUNT(*))))) NOT NULL)))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((MAX(((SUM(TOTAL(AVG(COUNT(*))))) NOT NULL))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE ((((NULL IN ()))GLOB(CAST(vt1.c0 AS BLOB)))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((((NULL IN ()))GLOB(CAST(vt1.c0 AS BLOB)))))) UNION ALL SELECT * FROM vt1 WHERE ((((((NULL IN ()))GLOB(CAST(vt1.c0 AS BLOB)))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN NULL THEN vt0.c0 ELSE vt1.c0 END)) AND ((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))));
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN NULL THEN vt0.c0 ELSE vt1.c0 END)) AND ((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0))))) WHERE ((+ ((~ (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN NULL THEN vt0.c0 ELSE vt1.c0 END)) AND ((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0))))) WHERE ((NOT ((+ ((~ (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN NULL THEN vt0.c0 ELSE vt1.c0 END)) AND ((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0))))) WHERE ((((+ ((~ (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN NULL THEN vt0.c0 ELSE vt1.c0 END)) AND ((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))));
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (vt1.c0) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(AVG(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(AVG(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(AVG(vt0.c0))) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c0)OR('')))AND(vt0.c0)))%(((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))));
SELECT ALL vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c0)OR('')))AND(vt0.c0)))%(((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) WHERE ((((((- (vt0.c0)))AND(((vt1.c0)LIKE(vt1.c0)))))OR((((vt0.c0, vt0.c0, vt1.c0))>((vt0.c0, vt0.c0, vt1.c0)))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c0)OR('')))AND(vt0.c0)))%(((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) WHERE ((NOT ((((((- (vt0.c0)))AND(((vt1.c0)LIKE(vt1.c0)))))OR((((vt0.c0, vt0.c0, vt1.c0))>((vt0.c0, vt0.c0, vt1.c0)))))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c0)OR('')))AND(vt0.c0)))%(((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) WHERE ((((((((- (vt0.c0)))AND(((vt1.c0)LIKE(vt1.c0)))))OR((((vt0.c0, vt0.c0, vt1.c0))>((vt0.c0, vt0.c0, vt1.c0)))))) ISNULL));
SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c0)OR('')))AND(vt0.c0)))%(((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN LOWER(DISTINCT vt0.c0) THEN ((vt0.c0)IS NOT(NULL)) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN LOWER(DISTINCT vt0.c0) THEN ((vt0.c0)IS NOT(NULL)) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN LOWER(DISTINCT vt0.c0) THEN ((vt0.c0)IS NOT(NULL)) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (MAX(TOTAL(vt0.c0)) IN ()) COLLATE RTRIM UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((MAX(TOTAL(vt0.c0)) IN ()) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((MAX(TOTAL(vt0.c0)) IN ()) COLLATE RTRIM) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (MAX(TOTAL(vt0.c0)) IN ()) COLLATE RTRIM UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((MAX(TOTAL(vt0.c0)) IN ()) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((MAX(TOTAL(vt0.c0)) IN ()) COLLATE RTRIM) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CASE WHEN ((vt1.c0)=(vt1.c0)) THEN (vt1.c0 IN ()) WHEN ((vt1.c0) IS FALSE) THEN vt1.c0 COLLATE RTRIM WHEN vt1.c0 THEN vt1.c0 END) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN ((vt1.c0)=(vt1.c0)) THEN (vt1.c0 IN ()) WHEN ((vt1.c0) IS FALSE) THEN vt1.c0 COLLATE RTRIM WHEN vt1.c0 THEN vt1.c0 END))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN ((vt1.c0)==(vt1.c0)) THEN (vt1.c0 IN ()) WHEN ((vt1.c0) IS FALSE) THEN vt1.c0 COLLATE RTRIM WHEN vt1.c0 THEN vt1.c0 END) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE (- (vt0.c0))  WHEN (x'a027' IN ()) THEN vt0.c0 COLLATE RTRIM ELSE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE (- (vt0.c0))  WHEN (x'a027' IN ()) THEN vt0.c0 COLLATE RTRIM ELSE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE (- (vt0.c0))  WHEN (x'a027' IN ()) THEN vt0.c0 COLLATE RTRIM ELSE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) ISNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) ISNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((~ (vt0.c0)))OR(COUNT(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((~ (vt0.c0)))OR(COUNT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((~ (vt0.c0)))OR(COUNT(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((~ (vt0.c0)))OR(COUNT(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((~ (vt0.c0)))OR(COUNT(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((~ (vt0.c0)))OR(COUNT(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt0.c0)<=(vt0.c0)))) AND (((((vt0.c0))<((vt1.c0))))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((((vt0.c0)<=(vt0.c0)))) AND (((((vt0.c0))<((vt1.c0))))))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((((vt0.c0)<=(vt0.c0)))) AND (((((vt0.c0))<((vt1.c0))))))) ISNULL));
SELECT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0))) IN (vt1.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0))) IN (vt1.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0))) IN (vt1.c0))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(NULL)))!=(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((((vt1.c0)OR(vt1.c0)))AND(NULL)))<>(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE (((((((((vt1.c0)OR(vt1.c0)))AND(NULL)))<>(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(((vt0.c0)AND(MIN(SUM(MAX(TOTAL(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(((vt0.c0)AND(MIN(SUM(MAX(TOTAL(vt0.c0))))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(((vt0.c0)AND(MIN(SUM(MAX(TOTAL(vt0.c0)))))))) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON '-620508444';
SELECT ALL vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON '-620508444' WHERE ('-687973258') UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON '-620508444' WHERE ((NOT ('-687973258'))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON '-620508444' WHERE ((('-687973258') ISNULL));
SELECT vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON '-620508444';
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (NULL COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (NULL COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1 WHERE (((NULL COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON CASE WHEN ((vt0.c0)>(NULL)) THEN SQLITE_COMPILEOPTION_GET('-1858152726') WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END THEN NULL WHEN (((vt1.c0, vt1.c0, vt0.c0))>=(('16650171', vt0.c0, vt0.c0))) THEN vt0.c0 COLLATE RTRIM WHEN ((vt1.c0) IS FALSE) THEN (NOT (vt0.c0)) WHEN (((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) END GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON CASE WHEN ((vt0.c0)>(NULL)) THEN SQLITE_COMPILEOPTION_GET('-1858152726') WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END THEN NULL WHEN (((vt1.c0, vt1.c0, vt0.c0))>=(('16650171', vt0.c0, vt0.c0))) THEN vt0.c0 COLLATE RTRIM WHEN ((vt1.c0) IS FALSE) THEN (NOT (vt0.c0)) WHEN (((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) END WHERE ((NOT (((vt1.c0)GLOB(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON CASE WHEN ((vt0.c0)>(NULL)) THEN SQLITE_COMPILEOPTION_GET('-1858152726') WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END THEN NULL WHEN (((vt1.c0, vt1.c0, vt0.c0))>=(('16650171', vt0.c0, vt0.c0))) THEN vt0.c0 COLLATE RTRIM WHEN ((vt1.c0) IS FALSE) THEN (NOT (vt0.c0)) WHEN (((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) END WHERE ((NOT ((NOT (((vt1.c0)GLOB(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON CASE WHEN ((vt0.c0)>(NULL)) THEN SQLITE_COMPILEOPTION_GET('-1858152726') WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END THEN NULL WHEN (((vt1.c0, vt1.c0, vt0.c0))>=(('16650171', vt0.c0, vt0.c0))) THEN vt0.c0 COLLATE RTRIM WHEN ((vt1.c0) IS FALSE) THEN (NOT (vt0.c0)) WHEN (((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) END WHERE ((((NOT (((vt1.c0)GLOB(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON CASE WHEN ((vt0.c0)>(NULL)) THEN SQLITE_COMPILEOPTION_GET('-1858152726') WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END THEN NULL WHEN (((vt1.c0, vt1.c0, vt0.c0))>=(('16650171', vt0.c0, vt0.c0))) THEN vt0.c0 COLLATE RTRIM WHEN ((vt1.c0) IS FALSE) THEN (NOT (vt0.c0)) WHEN (((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) END GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL SUM(((0.5521999296033392) NOT NULL)) FROM vt0, vt1 ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (json_type(vt1.c0)));
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CHAR(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CHAR(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CHAR(vt0.c0)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST('831042968' AS NUMERIC)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST('831042968' AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST('831042968' AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN ((((vt0.c0)AND(0.655497235268699)))OR(vt0.c0)) THEN (vt0.c0 IN ()) ELSE (~ (vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((((vt0.c0)AND(0.655497235268699)))OR(vt0.c0)) THEN (vt0.c0 IN ()) ELSE (~ (vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN ((((vt0.c0)AND(0.655497235268699)))OR(vt0.c0)) THEN (vt0.c0 IN ()) ELSE (~ (vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(TOTAL(vt0.c0) AS REAL) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(TOTAL(vt0.c0) AS REAL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(TOTAL(vt0.c0) AS REAL)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(TOTAL(vt0.c0) AS REAL) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(TOTAL(vt0.c0) AS REAL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(TOTAL(vt0.c0) AS REAL)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0 NOT INDEXED, vt1;
SELECT ALL * FROM vt0 NOT INDEXED, vt1 WHERE (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (CASE WHEN NULL THEN '-2079000868' WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END, (((vt0.c0))<((vt0.c0)))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (CASE WHEN NULL THEN '-2079000868' WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END, (((vt0.c0))<((vt0.c0)))))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (CASE WHEN NULL THEN '-2079000868' WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END, (((vt0.c0))<((vt0.c0)))))) ISNULL));
SELECT * FROM vt0 NOT INDEXED, vt1;
SELECT DISTINCT vt0.c0 FROM vt1 INNER JOIN vt0 ON ((vt1.c0) BETWEEN (SUBSTR(vt1.c0, vt1.c0)) AND (rtreenode(vt0.c0, 0.772911792536339)));
SELECT DISTINCT vt0.c0 FROM vt1 INNER JOIN vt0 ON ((vt1.c0) BETWEEN (SUBSTR(vt1.c0, vt1.c0)) AND (rtreenode(vt0.c0, 0.772911792536339))) WHERE (((((vt0.c0)IS NOT(vt1.c0)))LIKE(MAX(vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt1 INNER JOIN vt0 ON ((vt1.c0) BETWEEN (SUBSTR(vt1.c0, vt1.c0)) AND (rtreenode(vt0.c0, 0.772911792536339))) WHERE ((NOT (((((vt0.c0)IS NOT(vt1.c0)))LIKE(MAX(vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt1 INNER JOIN vt0 ON ((vt1.c0) BETWEEN (SUBSTR(vt1.c0, vt1.c0)) AND (rtreenode(vt0.c0, 0.772911792536339))) WHERE (((((((vt0.c0)IS NOT(vt1.c0)))LIKE(MAX(vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1 INNER JOIN vt0 ON ((vt1.c0) BETWEEN (SUBSTR(vt1.c0, vt1.c0)) AND (rtreenode(vt0.c0, 0.772911792536339)));
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN vt1.c0 COLLATE RTRIM THEN COALESCE(vt0.c0, vt1.c0, vt1.c0, vt0.c0) ELSE NULL END GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN vt1.c0 COLLATE RTRIM THEN COALESCE(vt0.c0, vt1.c0, vt1.c0, vt0.c0) ELSE NULL END WHERE ((((vt0.c0)) NOT BETWEEN ((ABS(DISTINCT vt0.c0))) AND (((vt1.c0 IN ()))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN vt1.c0 COLLATE RTRIM THEN COALESCE(vt0.c0, vt1.c0, vt1.c0, vt0.c0) ELSE NULL END WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((ABS(DISTINCT vt0.c0))) AND (((vt1.c0 IN ()))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN vt1.c0 COLLATE RTRIM THEN COALESCE(vt0.c0, vt1.c0, vt1.c0, vt0.c0) ELSE NULL END WHERE ((((((vt0.c0)) NOT BETWEEN ((ABS(DISTINCT vt0.c0))) AND (((vt1.c0 IN ()))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN vt1.c0 COLLATE RTRIM THEN COALESCE(vt0.c0, vt1.c0, vt1.c0, vt0.c0) ELSE NULL END GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(((vt1.c0)GLOB(COUNT(*)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(((vt1.c0)GLOB(COUNT(*)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(((vt1.c0)GLOB(COUNT(*))))) ISNULL);
SELECT ALL MAX((((((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((0.7157940506908759) BETWEEN (vt1.c0) AND (0.18637065060876445)))))OR(CASE vt0.c0  WHEN x'' THEN vt1.c0 ELSE vt1.c0 END))) FROM vt0, vt1 ORDER BY (((((0.12415761364147482)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))||(((((vt1.c0)OR(vt1.c0)))OR('t'))))  NULLS FIRST, ((vt0.c0 COLLATE BINARY) NOTNULL), (((vt1.c0 IN (NULL)))GLOB(((((((((-743762173)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))) ASC;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(rtreenode(vt0.c0, vt0.c0)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(rtreenode(vt0.c0, vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(rtreenode(vt0.c0, vt0.c0)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CAST(vt1.c0 AS BLOB)) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (CAST(vt1.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (CASE WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN vt1.c0 END) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (CASE WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN vt1.c0 END))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((CASE WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN vt1.c0 END) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0)OR(((vt1.c0)-(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)OR(((vt1.c0)-(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)OR(((vt1.c0)-(vt1.c0))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (CASE ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))  WHEN ABS(vt0.c0) THEN 0.17383789602501076 END) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (CASE ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))  WHEN ABS(vt0.c0) THEN 0.17383789602501076 END))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((CASE ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))  WHEN ABS(vt0.c0) THEN 0.17383789602501076 END) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((LIKELY(DISTINCT vt1.c0)) BETWEEN ((NOT (vt1.c0))) AND (''))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((LIKELY(DISTINCT vt1.c0)) BETWEEN ((NOT (vt1.c0))) AND (''))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((LIKELY(DISTINCT vt1.c0)) BETWEEN ((NOT (vt1.c0))) AND (''))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON (- ((((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '0.8469737890138064')) AND ((vt0.c0, vt1.c0, vt0.c0))))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON (- ((((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '0.8469737890138064')) AND ((vt0.c0, vt1.c0, vt0.c0))))) GROUP BY vt0.c0 HAVING COUNT(SUM(SUM(SUM(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON (- ((((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '0.8469737890138064')) AND ((vt0.c0, vt1.c0, vt0.c0))))) GROUP BY vt0.c0 HAVING (NOT (COUNT(SUM(SUM(SUM(GROUP_CONCAT(vt1.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON (- ((((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '0.8469737890138064')) AND ((vt0.c0, vt1.c0, vt0.c0))))) GROUP BY vt0.c0 HAVING ((COUNT(SUM(SUM(SUM(GROUP_CONCAT(vt1.c0)))))) ISNULL);
SELECT ALL vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)AND(vt0.c0)))OR(1.136183848E9))) NOT NULL);
SELECT ALL vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)AND(vt0.c0)))OR(1.136183848E9))) NOT NULL) WHERE ((+ (vt1.c0)) COLLATE BINARY) UNION ALL SELECT vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)AND(vt0.c0)))OR(1.136183848E9))) NOT NULL) WHERE ((NOT ((+ (vt1.c0)) COLLATE BINARY))) UNION ALL SELECT vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)AND(vt0.c0)))OR(1.136183848E9))) NOT NULL) WHERE ((((+ (vt1.c0)) COLLATE BINARY) ISNULL));
SELECT ALL vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)AND(vt0.c0)))OR(1.136183848E9))) NOT NULL);
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE (vt1.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((((~ (vt0.c0)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((((~ (vt0.c0)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((((((~ (vt0.c0)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(((vt0.c0)GLOB(COUNT(vt0.c0))) AS NUMERIC) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(((vt0.c0)GLOB(COUNT(vt0.c0))) AS NUMERIC))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(((vt0.c0)GLOB(COUNT(vt0.c0))) AS NUMERIC)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(((vt0.c0)GLOB(COUNT(vt0.c0))) AS NUMERIC) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(((vt0.c0)GLOB(COUNT(vt0.c0))) AS NUMERIC))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(((vt0.c0)GLOB(COUNT(vt0.c0))) AS NUMERIC)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt1 NATURAL JOIN vt0;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (NULL) UNION ALL SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM vt1 NATURAL JOIN vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) IS TRUE)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE NOCASE) IS TRUE)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE NOCASE) IS TRUE)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((((vt0.c0) NOTNULL) IN (((vt1.c0)||(vt1.c0)), ABS(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE ((NOT ((((vt0.c0) NOTNULL) IN (((vt1.c0)||(vt1.c0)), ABS(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((((((vt0.c0) NOTNULL) IN (((vt1.c0)||(vt1.c0)), ABS(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE (((vt1.c0)||(vt1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE ((NOT (((vt1.c0)||(vt1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0 WHERE (((((vt1.c0)||(vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1 NATURAL JOIN vt0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((+ (IFNULL(x'df52', vt0.c0)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT ((+ (IFNULL(x'df52', vt0.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((((+ (IFNULL(x'df52', vt0.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON TRIM(DISTINCT vt0.c0, vt1.c0) COLLATE RTRIM GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON TRIM(DISTINCT vt0.c0, vt1.c0) COLLATE RTRIM GROUP BY vt0.c0 HAVING GROUP_CONCAT(MIN(AVG(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON TRIM(DISTINCT vt0.c0, vt1.c0) COLLATE RTRIM GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(MIN(AVG(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON TRIM(DISTINCT vt0.c0, vt1.c0) COLLATE RTRIM GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(MIN(AVG(vt0.c0)))) ISNULL);
SELECT vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON (((- (vt0.c0))) IS FALSE);
SELECT ALL vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON (((- (vt0.c0))) IS FALSE) WHERE (CASE (vt1.c0 IN ())  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1818862189' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt1.c0) ISNULL) ELSE ((vt1.c0) NOTNULL) END) UNION ALL SELECT vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON (((- (vt0.c0))) IS FALSE) WHERE ((NOT (CASE (vt1.c0 IN ())  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1818862189' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt1.c0) ISNULL) ELSE ((vt1.c0) NOTNULL) END))) UNION ALL SELECT vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON (((- (vt0.c0))) IS FALSE) WHERE (((CASE (vt1.c0 IN ())  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1818862189' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt1.c0) ISNULL) ELSE ((vt1.c0) NOTNULL) END) ISNULL));
SELECT vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON (((- (vt0.c0))) IS FALSE);
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) IS TRUE)) NOT BETWEEN (vt1.c0) AND (((vt1.c0) NOTNULL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) IS TRUE)) NOT BETWEEN (vt1.c0) AND (((vt1.c0) NOTNULL)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0) IS TRUE)) NOT BETWEEN (vt1.c0) AND (((vt1.c0) NOTNULL)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(((vt1.c0)>>(COUNT(*)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(((vt1.c0)>>(COUNT(*)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(((vt1.c0)>>(COUNT(*))))) ISNULL);
SELECT MIN((((vt0.c0) NOT NULL) IN ())) FROM vt0;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (UNLIKELY((((vt1.c0))<=((vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (UNLIKELY((((vt1.c0))<=((vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((UNLIKELY((((vt1.c0))<=((vt1.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)%(vt0.c0))))<((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c0)%(vt0.c0))))<((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0)%(vt0.c0))))<((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((- (vt0.c0)))AND(((vt0.c0) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((- (vt0.c0)))AND(((vt0.c0) NOTNULL)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((- (vt0.c0)))AND(((vt0.c0) NOTNULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(MAX(AVG(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(MAX(AVG(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(MAX(AVG(vt1.c0)))) ISNULL);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON (~ (vt0.c0));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (~ (vt0.c0)) WHERE (((vt1.c0)>=(CAST(vt0.c0 AS NUMERIC)))) UNION ALL SELECT * FROM vt1 FULL OUTER JOIN vt0 ON (~ (vt0.c0)) WHERE ((NOT (((vt1.c0)>=(CAST(vt0.c0 AS NUMERIC)))))) UNION ALL SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (~ (vt0.c0)) WHERE (((((vt1.c0)>=(CAST(vt0.c0 AS NUMERIC)))) ISNULL));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON (~ (vt0.c0));
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CAST(vt0.c0 AS REAL)) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (CAST(vt0.c0 AS REAL)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0)>>(((x'')+(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)>>(((x'')+(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)>>(((x'')+(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING GROUP_CONCAT(CASE MAX(SUM(vt1.c0))  WHEN vt0.c0 THEN MAX(GROUP_CONCAT(vt1.c0)) END) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT(CASE MAX(SUM(vt1.c0))  WHEN vt0.c0 THEN MAX(GROUP_CONCAT(vt1.c0)) END))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((GROUP_CONCAT(CASE MAX(SUM(vt1.c0))  WHEN vt0.c0 THEN MAX(GROUP_CONCAT(vt1.c0)) END)) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((vt0.c0)OR(0.8334337051188195))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((vt0.c0)OR(0.8334337051188195))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((vt0.c0)OR(0.8334337051188195))) ISNULL));
SELECT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((- (CASE WHEN vt0.c0 THEN vt0.c0 END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((- (CASE WHEN vt0.c0 THEN vt0.c0 END))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((- (CASE WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 WHERE (NULL) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))) BETWEEN ((((vt0.c0)) BETWEEN ((0x7111e6a7)) AND ((vt1.c0)))) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))) BETWEEN ((((vt0.c0)) BETWEEN ((0x7111e6a7)) AND ((vt1.c0)))) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) GROUP BY vt0.c0, vt1.c0 HAVING MIN(MIN(vt0.c0)) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))) BETWEEN ((((vt0.c0)) BETWEEN ((0x7111e6a7)) AND ((vt1.c0)))) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) GROUP BY vt0.c0, vt1.c0 HAVING (NOT (MIN(MIN(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))) BETWEEN ((((vt0.c0)) BETWEEN ((0X7111e6a7)) AND ((vt1.c0)))) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) GROUP BY vt0.c0, vt1.c0 HAVING ((MIN(MIN(vt0.c0))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (SQLITE_SOURCE_ID()) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (SQLITE_SOURCE_ID()))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((SQLITE_SOURCE_ID()) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (CAST(vt1.c0 AS INTEGER)) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (CAST(vt1.c0 AS INTEGER)))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS INTEGER)) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt0 CROSS JOIN vt1 ON CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS BLOB) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0 CROSS JOIN vt1 ON CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS BLOB) WHERE ((((((vt1.c0) ISNULL)))!=((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0 CROSS JOIN vt1 ON CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS BLOB) WHERE ((NOT ((((((vt1.c0) ISNULL)))<>((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0 CROSS JOIN vt1 ON CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS BLOB) WHERE ((((((((vt1.c0) ISNULL)))!=((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0 CROSS JOIN vt1 ON CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS BLOB) GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (AVG(TOTAL(TOTAL(vt0.c0))) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 NOT INDEXED GROUP BY vt0.c0 HAVING (NOT ((AVG(TOTAL(TOTAL(vt0.c0))) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (((AVG(TOTAL(TOTAL(vt0.c0))) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (AVG(TOTAL(TOTAL(vt0.c0))) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 NOT INDEXED GROUP BY vt0.c0 HAVING (NOT ((AVG(TOTAL(TOTAL(vt0.c0))) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (((AVG(TOTAL(TOTAL(vt0.c0))) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((vt0.c0)OR(0.9689731037876429)) COLLATE RTRIM;
SELECT vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((vt0.c0)OR(0.9689731037876429)) COLLATE RTRIM WHERE ((((vt0.c0))=((vt0.c0 COLLATE RTRIM)))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((vt0.c0)OR(0.9689731037876429)) COLLATE RTRIM WHERE ((NOT ((((vt0.c0))==((vt0.c0 COLLATE RTRIM)))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((vt0.c0)OR(0.9689731037876429)) COLLATE RTRIM WHERE ((((((vt0.c0))=((vt0.c0 COLLATE RTRIM)))) ISNULL));
SELECT vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((vt0.c0)OR(0.9689731037876429)) COLLATE RTRIM;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)!=(vt0.c0))))<=((vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c0)<>(vt0.c0))))<=((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0)<>(vt0.c0))))<=((vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (TRIM((((vt1.c0))<((vt1.c0))), ((vt1.c0)-(vt1.c0)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (TRIM((((vt1.c0))<((vt1.c0))), ((vt1.c0)-(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((TRIM((((vt1.c0))<((vt1.c0))), ((vt1.c0)-(vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (AVG(MAX(MIN(')>'))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (AVG(MAX(MIN(')>'))))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (AVG(MAX(MIN(')>')))))))) ISNULL);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS TEXT);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS TEXT) WHERE (CASE ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)) THEN vt1.c0 COLLATE NOCASE WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt1.c0)%(vt0.c0)) WHEN LIKELY(DISTINCT vt1.c0) THEN x'' ELSE vt0.c0 END) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS TEXT) WHERE ((NOT (CASE ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)) THEN vt1.c0 COLLATE NOCASE WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt1.c0)%(vt0.c0)) WHEN LIKELY(DISTINCT vt1.c0) THEN x'' ELSE vt0.c0 END))) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS TEXT) WHERE (((CASE ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)) THEN vt1.c0 COLLATE NOCASE WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt1.c0)%(vt0.c0)) WHEN LIKELY(DISTINCT vt1.c0) THEN x'' ELSE vt0.c0 END) ISNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS TEXT);
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((NOT (vt0.c0)) IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((NOT (vt0.c0)) IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((NOT (vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (vt0.c0) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(TOTAL(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(TOTAL(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(TOTAL(vt1.c0))) ISNULL);
SELECT TOTAL(((((UNLIKELY(vt0.c0))AND(vt0.c0)))OR(NULL))) FROM vt0;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN ((((vt1.c0))>((vt1.c0)))) AND (((vt1.c0)<(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN ((((vt1.c0))>((vt1.c0)))) AND (((vt1.c0)<(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN ((((vt1.c0))>((vt1.c0)))) AND (((vt1.c0)<(vt1.c0))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN ((((vt1.c0))<=((vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN ((((vt1.c0))<=((vt1.c0)))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN ((((vt1.c0))<=((vt1.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ()))OR(((vt1.c0)<(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 IN ()))OR(((vt1.c0)<(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN ()))OR(((vt1.c0)<(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING MAX(AVG(vt1.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(AVG(vt1.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((MAX(AVG(vt1.c0))) ISNULL);
SELECT SUM((('i\') NOTNULL)) FROM vt0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0)%(vt0.c0)))AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0)%(vt0.c0)))))AND(json_valid(vt0.c0))))OR(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c0)%(vt0.c0)))AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0)%(vt0.c0)))))AND(json_valid(vt0.c0))))OR(vt0.c0 COLLATE NOCASE))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c0)%(vt0.c0)))AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0)%(vt0.c0)))))AND(json_valid(vt0.c0))))OR(vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)|(vt0.c0)) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)|(vt0.c0)) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)|(vt0.c0)) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((CASE vt0.c0  WHEN vt1.c0 THEN x'' END, ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (vt0.c0 IN ())))>=((('760781360' IN ()), ((((((((vt0.c0)AND(vt0.c0)))AND(0x3b33a760)))OR(vt0.c0)))OR(0.6270239345835202)), (- (vt1.c0)))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((CASE vt0.c0  WHEN vt1.c0 THEN x'' END, ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (vt0.c0 IN ())))>=((('760781360' IN ()), ((((((((vt0.c0)AND(vt0.c0)))AND(0X3b33a760)))OR(vt0.c0)))OR(0.6270239345835202)), (- (vt1.c0)))))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((((CASE vt0.c0  WHEN vt1.c0 THEN x'' END, ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (vt0.c0 IN ())))>=((('760781360' IN ()), ((((((((vt0.c0)AND(vt0.c0)))AND(0X3b33a760)))OR(vt0.c0)))OR(0.6270239345835202)), (- (vt1.c0)))))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((vt1.c0) ISNULL) IN (NULL))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((vt1.c0) ISNULL) IN (NULL))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((((vt1.c0) ISNULL) IN (NULL))) ISNULL));
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE ((vt0.c0)>>(vt0.c0))  WHEN ((vt0.c0)AND(vt0.c0)) THEN NULLIF(vt0.c0, vt0.c0) ELSE vt0.c0 COLLATE RTRIM END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c0)>>(vt0.c0))  WHEN ((vt0.c0)AND(vt0.c0)) THEN NULLIF(vt0.c0, vt0.c0) ELSE vt0.c0 COLLATE RTRIM END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE ((vt0.c0)>>(vt0.c0))  WHEN ((vt0.c0)AND(vt0.c0)) THEN NULLIF(vt0.c0, vt0.c0) ELSE vt0.c0 COLLATE RTRIM END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (vt1.c0) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(((vt0.c0)/(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(((vt0.c0)/(COUNT(*)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(((vt0.c0)/(COUNT(*))))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (HEX((+ (vt1.c0)))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (HEX((+ (vt1.c0)))))) UNION ALL SELECT * FROM vt1 WHERE (((HEX((+ (vt1.c0)))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((vt0.c0) NOT NULL))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((vt0.c0) NOT NULL))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((vt0.c0) NOT NULL))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (CASE WHEN (- (vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE ((NOT (CASE WHEN (- (vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((CASE WHEN (- (vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((TOTAL(vt1.c0))) NOT BETWEEN ((((vt1.c0)>>(vt1.c0)))) AND (((SUM(SUM(GROUP_CONCAT(MAX(vt1.c0)))) IN ())))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((TOTAL(vt1.c0))) NOT BETWEEN ((((vt1.c0)>>(vt1.c0)))) AND (((SUM(SUM(GROUP_CONCAT(MAX(vt1.c0)))) IN ())))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((TOTAL(vt1.c0))) NOT BETWEEN ((((vt1.c0)>>(vt1.c0)))) AND (((SUM(SUM(GROUP_CONCAT(MAX(vt1.c0)))) IN ()))))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((TOTAL(vt1.c0))) NOT BETWEEN ((((vt1.c0)>>(vt1.c0)))) AND (((SUM(SUM(GROUP_CONCAT(MAX(vt1.c0)))) IN ())))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((TOTAL(vt1.c0))) NOT BETWEEN ((((vt1.c0)>>(vt1.c0)))) AND (((SUM(SUM(GROUP_CONCAT(MAX(vt1.c0)))) IN ())))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((TOTAL(vt1.c0))) NOT BETWEEN ((((vt1.c0)>>(vt1.c0)))) AND (((SUM(SUM(GROUP_CONCAT(MAX(vt1.c0)))) IN ()))))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE BINARY) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((NOT (CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE BINARY))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE BINARY) ISNULL));
SELECT ALL vt1.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((UNLIKELY(vt1.c0)) NOT BETWEEN ((vt1.c0 IN ())) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((UNLIKELY(vt1.c0)) NOT BETWEEN ((vt1.c0 IN ())) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE (vt0.c0 COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((UNLIKELY(vt1.c0)) NOT BETWEEN ((vt1.c0 IN ())) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE ((NOT (vt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((UNLIKELY(vt1.c0)) NOT BETWEEN ((vt1.c0 IN ())) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE (((vt0.c0 COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN vt1 ON ((UNLIKELY(vt1.c0)) NOT BETWEEN ((vt1.c0 IN ())) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0)-(''))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (CASE WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)-(''))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (CASE WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)-(''))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (CASE WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON TRIM(DISTINCT (('R?\n	FCW Z') IS FALSE), (~ (vt0.c0))) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON TRIM(DISTINCT (('R?\n	FCW Z') IS FALSE), (~ (vt0.c0))) GROUP BY vt1.c0, vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON TRIM(DISTINCT (('R?\n	FCW Z') IS FALSE), (~ (vt0.c0))) GROUP BY vt1.c0, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON TRIM(DISTINCT (('R?\n	FCW Z') IS FALSE), (~ (vt0.c0))) GROUP BY vt1.c0, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON TRIM(DISTINCT (('R?\n	FCW Z') IS FALSE), (~ (vt0.c0))) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON TRIM(DISTINCT (('R?\n	FCW Z') IS FALSE), (~ (vt0.c0))) GROUP BY vt1.c0, vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON TRIM(DISTINCT (('R?\n	FCW Z') IS FALSE), (~ (vt0.c0))) GROUP BY vt1.c0, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON TRIM(DISTINCT (('R?\n	FCW Z') IS FALSE), (~ (vt0.c0))) GROUP BY vt1.c0, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON TRIM(DISTINCT (('R?\n	FCW Z') IS FALSE), (~ (vt0.c0))) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((+ (CAST(vt0.c0 AS BLOB)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((+ (CAST(vt0.c0 AS BLOB)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((+ (CAST(vt0.c0 AS BLOB)))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1 NOT INDEXED, vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((vt1.c0 COLLATE NOCASE) NOT NULL)) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((vt1.c0 COLLATE NOCASE) NOT NULL)))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((vt1.c0 COLLATE NOCASE) NOT NULL)) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1 NOT INDEXED, vt0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0, vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c0 HAVING GROUP_CONCAT((((COUNT(MAX(vt0.c0)))) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT((((COUNT(MAX(vt0.c0)))) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((GROUP_CONCAT((((COUNT(MAX(vt0.c0)))) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0)>=(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0)>=(vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0)>=(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (UNLIKELY(LIKELIHOOD(DISTINCT vt0.c0, 0.7145744007003834))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (UNLIKELY(LIKELIHOOD(DISTINCT vt0.c0, 0.7145744007003834))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((UNLIKELY(LIKELIHOOD(DISTINCT vt0.c0, 0.7145744007003834))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (x'') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE ((NOT (x''))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE (((x'') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt1.c0 HAVING CAST(((((((((NULL)OR(NULL)))AND(SUM(vt0.c0))))AND(SUM('Gâ¼†UwRv'))))AND(GROUP_CONCAT(MIN(MIN(vt0.c0))))) AS NUMERIC) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (CAST(((((((((NULL)OR(NULL)))AND(SUM(vt0.c0))))AND(SUM('Gâ¼†UwRv'))))AND(GROUP_CONCAT(MIN(MIN(vt0.c0))))) AS NUMERIC))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((CAST(((((((((NULL)OR(NULL)))AND(SUM(vt0.c0))))AND(SUM('Gâ¼†UwRv'))))AND(GROUP_CONCAT(MIN(MIN(vt0.c0))))) AS NUMERIC)) ISNULL);
SELECT vt1.c0 FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (CASE CAST(vt1.c0 AS BLOB)  WHEN ((vt0.c0) IS TRUE) THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (~ (vt0.c0)) ELSE TRIM(DISTINCT vt0.c0, vt1.c0) END) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((NOT (CASE CAST(vt1.c0 AS BLOB)  WHEN ((vt0.c0) IS TRUE) THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (~ (vt0.c0)) ELSE TRIM(DISTINCT vt0.c0, vt1.c0) END))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 WHERE (((CASE CAST(vt1.c0 AS BLOB)  WHEN ((vt0.c0) IS TRUE) THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (~ (vt0.c0)) ELSE TRIM(DISTINCT vt0.c0, vt1.c0) END) ISNULL));
SELECT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOTNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (vt1.c0) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((COUNT(NULL)) BETWEEN (GROUP_CONCAT(vt0.c0)) AND (json_array(vt0.c0, vt0.c0))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (((COUNT(NULL)) BETWEEN (GROUP_CONCAT(vt0.c0)) AND (json_array(vt0.c0, vt0.c0))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((((COUNT(NULL)) BETWEEN (GROUP_CONCAT(vt0.c0)) AND (json_array(vt0.c0, vt0.c0)))) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((COUNT(NULL)) BETWEEN (GROUP_CONCAT(vt0.c0)) AND (json_array(vt0.c0, vt0.c0))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (((COUNT(NULL)) BETWEEN (GROUP_CONCAT(vt0.c0)) AND (json_array(vt0.c0, vt0.c0))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((((COUNT(NULL)) BETWEEN (GROUP_CONCAT(vt0.c0)) AND (json_array(vt0.c0, vt0.c0)))) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((IFNULL(DISTINCT vt1.c0, vt0.c0)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CAST(vt1.c0 AS TEXT)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((IFNULL(DISTINCT vt1.c0, vt0.c0)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CAST(vt1.c0 AS TEXT))) WHERE (vt1.c0) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((IFNULL(DISTINCT vt1.c0, vt0.c0)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CAST(vt1.c0 AS TEXT))) WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((IFNULL(DISTINCT vt1.c0, vt0.c0)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CAST(vt1.c0 AS TEXT))) WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((IFNULL(DISTINCT vt1.c0, vt0.c0)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CAST(vt1.c0 AS TEXT)));
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((- (((vt0.c0)IS(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((- (((vt0.c0)IS(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((- (((vt0.c0)IS(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))))AND(((((0.15928899804360808)AND(vt0.c0)))AND('<s6')))))OR(((vt0.c0)OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))))AND(((((0.15928899804360808)AND(vt0.c0)))AND('<s6')))))OR(((vt0.c0)OR(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))))AND(((((0.15928899804360808)AND(vt0.c0)))AND('<s6')))))OR(((vt0.c0)OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING MIN(GROUP_CONCAT(7.71138109E8)) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (MIN(GROUP_CONCAT(7.71138109E8)))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((MIN(GROUP_CONCAT(7.71138109E8))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (vt1.c0 COLLATE RTRIM) UNION ALL SELECT * FROM vt1 WHERE ((NOT (vt1.c0 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0))<=((x''))) COLLATE BINARY) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0))<=((x''))) COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0))<=((x''))) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((((((vt1.c0)>>(vt1.c0))))>=((((vt1.c0)<<(vt0.c0)))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT ((((((vt1.c0)>>(vt1.c0))))>=((((vt1.c0)<<(vt0.c0)))))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((((((((vt1.c0)>>(vt1.c0))))>=((((vt1.c0)<<(vt0.c0)))))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (+ (((COUNT(*)) BETWEEN (COUNT(*)) AND (vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((+ (((COUNT(*)) BETWEEN (COUNT(*)) AND (vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((+ (((COUNT(*)) BETWEEN (COUNT(*)) AND (vt0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (+ (((COUNT(*)) BETWEEN (COUNT(*)) AND (vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((+ (((COUNT(*)) BETWEEN (COUNT(*)) AND (vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((+ (((COUNT(*)) BETWEEN (COUNT(*)) AND (vt0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (CASE x''  WHEN NULL THEN 'Mkæ§¬qNYq' ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT (CASE x''  WHEN NULL THEN 'Mkæ§¬qNYq' ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((CASE x''  WHEN NULL THEN 'Mkæ§¬qNYq' ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON vt1.c0;
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON vt1.c0 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN ((vt1.c0)<<(NULL)) END) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON vt1.c0 WHERE ((NOT (CASE vt1.c0  WHEN vt1.c0 THEN ((vt1.c0)<<(NULL)) END))) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON vt1.c0 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN ((vt1.c0)<<(NULL)) END) ISNULL));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON vt1.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS REAL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT (CAST(CAST(vt0.c0 AS NUMERIC) AS REAL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((CAST(CAST(vt0.c0 AS NUMERIC) AS REAL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) COLLATE BINARY UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*) COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*) COLLATE BINARY) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) COLLATE BINARY UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*) COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*) COLLATE BINARY) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((LOWER(vt1.c0)) NOT BETWEEN (1.01481554E9) AND (((vt1.c0) NOT NULL)))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((LOWER(vt1.c0)) NOT BETWEEN (1.01481554E9) AND (((vt1.c0) NOT NULL)))))) UNION ALL SELECT * FROM vt1 WHERE (((((LOWER(vt1.c0)) NOT BETWEEN (1.01481554E9) AND (((vt1.c0) NOT NULL)))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) COLLATE BINARY;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) COLLATE BINARY WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) COLLATE BINARY WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) COLLATE BINARY WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) COLLATE BINARY;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(x'3d5cafc3')))AND(vt1.c0)))OR(vt0.c0)))LIKE(((vt0.c0)LIKE(vt0.c0))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((((((((((vt1.c0)AND(vt1.c0)))AND(x'3d5cafc3')))AND(vt1.c0)))OR(vt0.c0)))LIKE(((vt0.c0)LIKE(vt0.c0))))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))AND(x'3d5cafc3')))AND(vt1.c0)))OR(vt0.c0)))LIKE(((vt0.c0)LIKE(vt0.c0))))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (((((COUNT(COUNT(*)), GROUP_CONCAT(GROUP_CONCAT(AVG(TOTAL(GROUP_CONCAT(vt1.c0))))), SUM(SUM(vt1.c0)), vt0.c0, vt1.c0))==((GROUP_CONCAT(COUNT(SUM(vt0.c0))), MIN(MAX(AVG(SUM(vt0.c0)))), AVG(vt1.c0), GROUP_CONCAT(COUNT(SUM(MAX(vt1.c0)))), SUM(COUNT(*)))))) NOTNULL) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT ((((((COUNT(COUNT(*)), GROUP_CONCAT(GROUP_CONCAT(AVG(TOTAL(GROUP_CONCAT(vt1.c0))))), SUM(SUM(vt1.c0)), vt0.c0, vt1.c0))=((GROUP_CONCAT(COUNT(SUM(vt0.c0))), MIN(MAX(AVG(SUM(vt0.c0)))), AVG(vt1.c0), GROUP_CONCAT(COUNT(SUM(MAX(vt1.c0)))), SUM(COUNT(*)))))) NOTNULL))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (((((((COUNT(COUNT(*)), GROUP_CONCAT(GROUP_CONCAT(AVG(TOTAL(GROUP_CONCAT(vt1.c0))))), SUM(SUM(vt1.c0)), vt0.c0, vt1.c0))==((GROUP_CONCAT(COUNT(SUM(vt0.c0))), MIN(MAX(AVG(SUM(vt0.c0)))), AVG(vt1.c0), GROUP_CONCAT(COUNT(SUM(MAX(vt1.c0)))), SUM(COUNT(*)))))) NOTNULL)) ISNULL);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0) IS TRUE)) NOT NULL);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0) IS TRUE)) NOT NULL) WHERE (CAST(((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS BLOB)) UNION ALL SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0) IS TRUE)) NOT NULL) WHERE ((NOT (CAST(((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS BLOB)))) UNION ALL SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0) IS TRUE)) NOT NULL) WHERE (((CAST(((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS BLOB)) ISNULL));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0) IS TRUE)) NOT NULL);
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN 0.38699347764058345 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END) BETWEEN (TYPEOF(vt0.c0)) AND (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (((CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN 0.38699347764058345 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END) BETWEEN (TYPEOF(vt0.c0)) AND (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((((CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN 0.38699347764058345 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END) BETWEEN (TYPEOF(vt0.c0)) AND (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((~ (vt0.c0)))||((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((~ (vt0.c0)))||((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) WHERE (CASE WHEN ((vt1.c0) ISNULL) THEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((vt1.c0) NOTNULL) END) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((~ (vt0.c0)))||((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) WHERE ((NOT (CASE WHEN ((vt1.c0) ISNULL) THEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((vt1.c0) NOTNULL) END))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((~ (vt0.c0)))||((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) WHERE (((CASE WHEN ((vt1.c0) ISNULL) THEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((vt1.c0) NOTNULL) END) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((~ (vt0.c0)))||((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON (- (CAST(vt0.c0 AS TEXT))) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON (- (CAST(vt0.c0 AS TEXT))) GROUP BY vt0.c0, vt1.c0 HAVING COUNT(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON (- (CAST(vt0.c0 AS TEXT))) GROUP BY vt0.c0, vt1.c0 HAVING (NOT (COUNT(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON (- (CAST(vt0.c0 AS TEXT))) GROUP BY vt0.c0, vt1.c0 HAVING ((COUNT(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON (- (CAST(vt0.c0 AS TEXT))) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON (- (CAST(vt0.c0 AS TEXT))) GROUP BY vt0.c0, vt1.c0 HAVING COUNT(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON (- (CAST(vt0.c0 AS TEXT))) GROUP BY vt0.c0, vt1.c0 HAVING (NOT (COUNT(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON (- (CAST(vt0.c0 AS TEXT))) GROUP BY vt0.c0, vt1.c0 HAVING ((COUNT(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON (- (CAST(vt0.c0 AS TEXT))) GROUP BY vt0.c0, vt1.c0;
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (((CASE WHEN '-412482359' THEN vt1.c0 ELSE vt0.c0 END)>(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt1.c0 END))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (((CASE WHEN '-412482359' THEN vt1.c0 ELSE vt0.c0 END)>(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt1.c0 END))))) UNION ALL SELECT ALL * FROM vt1, vt0 NOT INDEXED WHERE (((((CASE WHEN '-412482359' THEN vt1.c0 ELSE vt0.c0 END)>(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt1.c0 END))) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (CASE WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(x'')) THEN ((('-530647342', vt1.c0, vt1.c0))<((vt0.c0, vt1.c0, vt0.c0))) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) END) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((NOT (CASE WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(x'')) THEN ((('-530647342', vt1.c0, vt1.c0))<((vt0.c0, vt1.c0, vt0.c0))) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) END))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (((CASE WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(x'')) THEN ((('-530647342', vt1.c0, vt1.c0))<((vt0.c0, vt1.c0, vt0.c0))) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS REAL)) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (CAST(CAST(vt1.c0 AS BLOB) AS REAL)))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((CAST(CAST(vt1.c0 AS BLOB) AS REAL)) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING TOTAL(vt1.c0) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (TOTAL(vt1.c0))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((TOTAL(vt1.c0)) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING TOTAL(vt1.c0) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (TOTAL(vt1.c0))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((TOTAL(vt1.c0)) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL MAX(((((vt1.c0)+(vt1.c0))) IS TRUE)) FROM vt1;
SELECT * FROM vt1 CROSS JOIN vt0 ON ((NOT (vt1.c0)) IN ());
SELECT * FROM vt1 CROSS JOIN vt0 ON ((NOT (vt1.c0)) IN ()) WHERE ((((+ (vt0.c0))) NOTNULL)) UNION ALL SELECT * FROM vt1 CROSS JOIN vt0 ON ((NOT (vt1.c0)) IN ()) WHERE ((NOT ((((+ (vt0.c0))) NOTNULL)))) UNION ALL SELECT * FROM vt1 CROSS JOIN vt0 ON ((NOT (vt1.c0)) IN ()) WHERE ((((((+ (vt0.c0))) NOTNULL)) ISNULL));
SELECT * FROM vt1 CROSS JOIN vt0 ON ((NOT (vt1.c0)) IN ());
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(0X1765f155 AS INTEGER)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(0x1765f155 AS INTEGER)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(0X1765f155 AS INTEGER)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((vt1.c0 IN (vt0.c0)) COLLATE RTRIM) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((vt1.c0 IN (vt0.c0)) COLLATE RTRIM))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((vt1.c0 IN (vt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING MAX(LIKELIHOOD(DISTINCT SUM(GROUP_CONCAT(AVG(MIN(COUNT(COUNT(MAX(GROUP_CONCAT(COUNT(*))))))))), 0.20439855740681112)) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(LIKELIHOOD(DISTINCT SUM(GROUP_CONCAT(AVG(MIN(COUNT(COUNT(MAX(GROUP_CONCAT(COUNT(*))))))))), 0.20439855740681112)))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((MAX(LIKELIHOOD(DISTINCT SUM(GROUP_CONCAT(AVG(MIN(COUNT(COUNT(MAX(GROUP_CONCAT(COUNT(*))))))))), 0.20439855740681112))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((((((((- (vt0.c0)))OR('1048877881')))AND(((vt0.c0) IS TRUE))))AND(((0Xffffffff9e75939a) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((((((((- (vt0.c0)))OR('1048877881')))AND(((vt0.c0) IS TRUE))))AND(((0xffffffff9e75939a) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((((((((- (vt0.c0)))OR('1048877881')))AND(((vt0.c0) IS TRUE))))AND(((0Xffffffff9e75939a) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<<((- (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<<((- (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<<((- (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (CAST(vt0.c0 AS INTEGER)) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (CAST(vt0.c0 AS INTEGER)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS INTEGER)) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(((vt1.c0) NOTNULL)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(((vt1.c0) NOTNULL)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(((vt1.c0) NOTNULL))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(((vt1.c0) NOTNULL)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(((vt1.c0) NOTNULL)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(((vt1.c0) NOTNULL))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (((((~ (vt1.c0))))>=((((vt0.c0) NOT NULL))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (((((~ (vt1.c0))))>=((((vt0.c0) NOT NULL))))))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((((((~ (vt1.c0))))>=((((vt0.c0) NOT NULL))))) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((((vt1.c0) IS FALSE))OR(vt0.c0 COLLATE RTRIM)))AND(CAST(1283752947 AS INTEGER)))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((((vt1.c0) IS FALSE))OR(vt0.c0 COLLATE RTRIM)))AND(CAST(1283752947 AS INTEGER)))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((((((vt1.c0) IS FALSE))OR(vt0.c0 COLLATE RTRIM)))AND(CAST(1283752947 AS INTEGER)))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (- (vt1.c0)) COLLATE RTRIM GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (- (vt1.c0)) COLLATE RTRIM GROUP BY vt0.c0 HAVING MIN((((TOTAL(MAX(MIN(COUNT(AVG(AVG(GROUP_CONCAT(vt1.c0))))))), vt0.c0, 'U3,<G'))!=((vt1.c0, GROUP_CONCAT(vt0.c0), SUM(vt1.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (- (vt1.c0)) COLLATE RTRIM GROUP BY vt0.c0 HAVING (NOT (MIN((((TOTAL(MAX(MIN(COUNT(AVG(AVG(GROUP_CONCAT(vt1.c0))))))), vt0.c0, 'U3,<G'))!=((vt1.c0, GROUP_CONCAT(vt0.c0), SUM(vt1.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (- (vt1.c0)) COLLATE RTRIM GROUP BY vt0.c0 HAVING ((MIN((((TOTAL(MAX(MIN(COUNT(AVG(AVG(GROUP_CONCAT(vt1.c0))))))), vt0.c0, 'U3,<G'))<>((vt1.c0, GROUP_CONCAT(vt0.c0), SUM(vt1.c0)))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))-(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(0.3721147614314042)))OR(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))-(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(0.3721147614314042)))OR(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))-(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(0.3721147614314042)))OR(vt1.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((+ (vt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((NOT ((+ (vt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((((+ (vt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(MAX(COUNT(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(MAX(COUNT(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(MAX(COUNT(vt1.c0)))) ISNULL);
SELECT MIN((CAST(vt1.c0 AS NUMERIC) IN ())) FROM vt1, vt0 ORDER BY (((NULL, vt0.c0, vt0.c0, vt1.c0, vt1.c0)) BETWEEN (((('')>(x'')), (((vt1.c0))>((vt0.c0))), ((vt0.c0)AND(vt1.c0)), ((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), ((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))) AND (((vt1.c0 IN (vt1.c0)), vt1.c0, CASE WHEN NULL THEN vt1.c0 ELSE vt0.c0 END, ((x'') NOTNULL), CASE vt1.c0  WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END)));
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND ((- (vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND ((- (vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND ((- (vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND ((((vt1.c0))>=((vt1.c0)))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND ((((vt1.c0))>=((vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND ((((vt1.c0))>=((vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE (NOT (vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((x'')AND(vt1.c0)) END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE (NOT (vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((x'')AND(vt1.c0)) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE (NOT (vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((x'')AND(vt1.c0)) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((x'') BETWEEN ('') AND (0X7ca030cf)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((x'') BETWEEN ('') AND (0X7ca030cf)) GROUP BY vt0.c0, vt1.c0 HAVING (((COUNT(TOTAL(vt1.c0)) IN (AVG(TOTAL(COUNT(vt1.c0))))))-(CAST(COUNT(TOTAL(GROUP_CONCAT(vt0.c0))) AS TEXT))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((x'') BETWEEN ('') AND (0x7ca030cf)) GROUP BY vt0.c0, vt1.c0 HAVING (NOT ((((COUNT(TOTAL(vt1.c0)) IN (AVG(TOTAL(COUNT(vt1.c0))))))-(CAST(COUNT(TOTAL(GROUP_CONCAT(vt0.c0))) AS TEXT))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((x'') BETWEEN ('') AND (0X7ca030cf)) GROUP BY vt0.c0, vt1.c0 HAVING (((((COUNT(TOTAL(vt1.c0)) IN (AVG(TOTAL(COUNT(vt1.c0))))))-(CAST(COUNT(TOTAL(GROUP_CONCAT(vt0.c0))) AS TEXT)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((((((0.4861004461324264)OR(((vt0.c0) IS TRUE))))OR(((vt0.c0)AND(vt0.c0)))))AND(vt0.c0)))AND((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((((((0.4861004461324264)OR(((vt0.c0) IS TRUE))))OR(((vt0.c0)AND(vt0.c0)))))AND(vt0.c0)))AND((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((((((0.4861004461324264)OR(((vt0.c0) IS TRUE))))OR(((vt0.c0)AND(vt0.c0)))))AND(vt0.c0)))AND((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST('-1454272277' COLLATE NOCASE AS INTEGER);
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST('-1454272277' COLLATE NOCASE AS INTEGER) WHERE (((x'') NOT BETWEEN (((vt1.c0)-(x''))) AND (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST('-1454272277' COLLATE NOCASE AS INTEGER) WHERE ((NOT (((x'') NOT BETWEEN (((vt1.c0)-(x''))) AND (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))))) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST('-1454272277' COLLATE NOCASE AS INTEGER) WHERE (((((x'') NOT BETWEEN (((vt1.c0)-(x''))) AND (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST('-1454272277' COLLATE NOCASE AS INTEGER);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) ISNULL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS BLOB)) ISNULL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c0 AS BLOB)) ISNULL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(COUNT(*)))%(((vt1.c0)>(TOTAL(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((SUM(COUNT(*)))%(((vt1.c0)>(TOTAL(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((SUM(COUNT(*)))%(((vt1.c0)>(TOTAL(vt1.c0)))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((1761326798))!=((LENGTH(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((1761326798))!=((LENGTH(vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((1761326798))!=((LENGTH(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (STRFTIME((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), (((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))), CASE vt1.c0  WHEN 0xffffffffa1460626 THEN vt1.c0 ELSE 0x43b8ca28 END, CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)>>(vt0.c0)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (STRFTIME((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), (((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))), CASE vt1.c0  WHEN 0Xffffffffa1460626 THEN vt1.c0 ELSE 0x43b8ca28 END, CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)>>(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((STRFTIME((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), (((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))), CASE vt1.c0  WHEN 0Xffffffffa1460626 THEN vt1.c0 ELSE 0X43b8ca28 END, CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)>>(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (((NULL)-(LIKELIHOOD(vt1.c0, 0.4996634174376249)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((NOT (((NULL)-(LIKELIHOOD(vt1.c0, 0.4996634174376249)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (((((NULL)-(LIKELIHOOD(vt1.c0, 0.4996634174376249)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((x'' COLLATE NOCASE, (vt0.c0 IN ()), (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0))))) AND ((CASE WHEN 0.0014459631862162592 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ('zV' IN ()), IFNULL(vt0.c0, vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((x'' COLLATE NOCASE, (vt0.c0 IN ()), (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0))))) AND ((CASE WHEN 0.0014459631862162592 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ('zV' IN ()), IFNULL(vt0.c0, vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((x'' COLLATE NOCASE, (vt0.c0 IN ()), (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0))))) AND ((CASE WHEN 0.0014459631862162592 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ('zV' IN ()), IFNULL(vt0.c0, vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON vt1.c0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 NOT INDEXED FULL OUTER JOIN vt0 ON vt1.c0 WHERE ((- (NULL))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON vt1.c0 WHERE ((NOT ((- (NULL))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON vt1.c0 WHERE ((((- (NULL))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1 CROSS JOIN vt0 ON ((('FALSE'))<=((((vt1.c0) NOTNULL)))) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1 CROSS JOIN vt0 ON ((('FALSE'))<=((((vt1.c0) NOTNULL)))) WHERE (vt0.c0) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1 CROSS JOIN vt0 ON ((('FALSE'))<=((((vt1.c0) NOTNULL)))) WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1 CROSS JOIN vt0 ON ((('FALSE'))<=((((vt1.c0) NOTNULL)))) WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1 CROSS JOIN vt0 ON ((('FALSE'))<=((((vt1.c0) NOTNULL)))) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(TOTAL(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(TOTAL(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(TOTAL(vt0.c0))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)IS NOT(vt1.c0 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE RTRIM)IS NOT(vt1.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM vt1 WHERE (((((vt1.c0 COLLATE RTRIM)IS NOT(vt1.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (((x'') IS TRUE)) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((NOT (((x'') IS TRUE)))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (((((x'') IS TRUE)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING AVG(GROUP_CONCAT(GROUP_CONCAT(MAX(MAX(AVG(vt1.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (AVG(GROUP_CONCAT(GROUP_CONCAT(MAX(MAX(AVG(vt1.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((AVG(GROUP_CONCAT(GROUP_CONCAT(MAX(MAX(AVG(vt1.c0))))))) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '0.8632003057853455' ELSE vt1.c0 END) AND ((vt0.c0 IN ())));
SELECT ALL vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '0.8632003057853455' ELSE vt1.c0 END) AND ((vt0.c0 IN ()))) WHERE ((- ((NOT (0.7028297116742868))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '0.8632003057853455' ELSE vt1.c0 END) AND ((vt0.c0 IN ()))) WHERE ((NOT ((- ((NOT (0.7028297116742868))))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '0.8632003057853455' ELSE vt1.c0 END) AND ((vt0.c0 IN ()))) WHERE ((((- ((NOT (0.7028297116742868))))) ISNULL));
SELECT vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '0.8632003057853455' ELSE vt1.c0 END) AND ((vt0.c0 IN ())));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((load_extension(vt0.c0, vt0.c0))<=(((vt0.c0)GLOB(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((load_extension(vt0.c0, vt0.c0))<=(((vt0.c0)GLOB(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((load_extension(vt0.c0, vt0.c0))<=(((vt0.c0)GLOB(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ())) NOTNULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ())) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ())) NOTNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (CAST(vt0.c0 AS TEXT)))) ORDER BY 1945824339 DESC;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) NOT NULL)))==(((vt0.c0 IN ()), IFNULL(DISTINCT vt0.c0, vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) NOT NULL)))==(((vt0.c0 IN ()), IFNULL(DISTINCT vt0.c0, vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) NOT NULL)))=(((vt0.c0 IN ()), IFNULL(DISTINCT vt0.c0, vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((TRIM(DISTINCT vt1.c0))<(((vt1.c0) ISNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT (((TRIM(DISTINCT vt1.c0))<(((vt1.c0) ISNULL)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE (((((TRIM(DISTINCT vt1.c0))<(((vt1.c0) ISNULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((-1.033184464E9) BETWEEN (vt1.c0 COLLATE NOCASE) AND (AVG(SUM(vt1.c0)))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (((-1.033184464E9) BETWEEN (vt1.c0 COLLATE NOCASE) AND (AVG(SUM(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((((-1.033184464E9) BETWEEN (vt1.c0 COLLATE NOCASE) AND (AVG(SUM(vt1.c0))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0) IS TRUE) IN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0) IS TRUE) IN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0) IS TRUE) IN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((- (vt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((- (vt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((- (vt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)%(vt1.c0))) BETWEEN (vt1.c0) AND (NULL))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)%(vt1.c0))) BETWEEN (vt1.c0) AND (NULL))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0)%(vt1.c0))) BETWEEN (vt1.c0) AND (NULL))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((((vt0.c0)IS(vt0.c0)))OR((NOT (SUM(COUNT(*)))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (((((vt0.c0)IS(vt0.c0)))OR((NOT (SUM(COUNT(*)))))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((((((vt0.c0)IS(vt0.c0)))OR((NOT (SUM(COUNT(*))))))) ISNULL);
SELECT ALL * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (DATE((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))), vt0.c0 COLLATE RTRIM, vt0.c0 COLLATE NOCASE)) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (DATE((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))), vt0.c0 COLLATE RTRIM, vt0.c0 COLLATE NOCASE)))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((DATE((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))), vt0.c0 COLLATE RTRIM, vt0.c0 COLLATE NOCASE)) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((~ (DATETIME(vt1.c0, vt0.c0, '3?uEC{,')))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((~ (DATETIME(vt1.c0, vt0.c0, '3?uEC{,')))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((~ (DATETIME(vt1.c0, vt0.c0, '3?uEC{,')))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)IS NOT(((vt0.c0) ISNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM)IS NOT(((vt0.c0) ISNULL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)IS NOT(((vt0.c0) ISNULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL SUM(((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt1.c0)GLOB(''))) AND (vt1.c0 COLLATE RTRIM))) FROM vt1;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (((((vt0.c0)<<(vt0.c0))))>=((vt1.c0)));
SELECT * FROM vt1 CROSS JOIN vt0 ON (((((vt0.c0)<<(vt0.c0))))>=((vt1.c0))) WHERE ((+ (HEX(DISTINCT vt1.c0)))) UNION ALL SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (((((vt0.c0)<<(vt0.c0))))>=((vt1.c0))) WHERE ((NOT ((+ (HEX(DISTINCT vt1.c0)))))) UNION ALL SELECT * FROM vt1 CROSS JOIN vt0 ON (((((vt0.c0)<<(vt0.c0))))>=((vt1.c0))) WHERE ((((+ (HEX(DISTINCT vt1.c0)))) ISNULL));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (((((vt0.c0)<<(vt0.c0))))>=((vt1.c0)));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END)) AND ((CAST(vt0.c0 AS TEXT))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END)) AND ((CAST(vt0.c0 AS TEXT))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END)) AND ((CAST(vt0.c0 AS TEXT))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(CHANGES()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(CHANGES()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(CHANGES())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(CHANGES()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(CHANGES()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(CHANGES())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (LIKELY(CAST(vt0.c0 AS REAL))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (LIKELY(CAST(vt0.c0 AS REAL))))) UNION ALL SELECT * FROM vt0 WHERE (((LIKELY(CAST(vt0.c0 AS REAL))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 NOT INDEXED WHERE (CAST(((vt1.c0)>=(vt1.c0)) AS REAL)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0)>=(vt1.c0)) AS REAL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0)>=(vt1.c0)) AS REAL)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (CASE WHEN (- (vt1.c0)) THEN ((vt0.c0)OR(vt0.c0)) ELSE ((vt1.c0) NOTNULL) END) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (CASE WHEN (- (vt1.c0)) THEN ((vt0.c0)OR(vt0.c0)) ELSE ((vt1.c0) NOTNULL) END))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((CASE WHEN (- (vt1.c0)) THEN ((vt0.c0)OR(vt0.c0)) ELSE ((vt1.c0) NOTNULL) END) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL TOTAL(((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))/((('-973781444') IS FALSE)))) FROM vt0 ORDER BY CAST(((vt0.c0)IS(vt0.c0)) AS REAL);
SELECT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))OR(((vt0.c0)%(vt0.c0)))))AND(((vt1.c0) ISNULL)))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))OR(((vt0.c0)%(vt0.c0)))))AND(((vt1.c0) ISNULL)))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))OR(((vt0.c0)%(vt0.c0)))))AND(((vt1.c0) ISNULL)))) ISNULL));
SELECT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (TRIM(x'')) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (TRIM(x'')))) UNION SELECT DISTINCT * FROM vt1 WHERE (((TRIM(x'')) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((vt1.c0 IN ()) COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ()) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (x'') UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (x''))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((x'') ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0)AND(vt1.c0)) ELSE (vt0.c0 IN ()) END) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0)AND(vt1.c0)) ELSE (vt0.c0 IN ()) END))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0)AND(vt1.c0)) ELSE (vt0.c0 IN ()) END) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0)+('')) AS REAL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0)+('')) AS REAL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0)+('')) AS REAL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0 IN ()) IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN ()) IN ())) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((+ (vt0.c0))) ISNULL)) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((+ (vt0.c0))) ISNULL)))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((((+ (vt0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((~ ((+ (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((~ ((+ (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((~ ((+ (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING TOTAL(((MIN(TOTAL(COUNT(vt1.c0))))+(vt1.c0))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (TOTAL(((MIN(TOTAL(COUNT(vt1.c0))))+(vt1.c0))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((TOTAL(((MIN(TOTAL(COUNT(vt1.c0))))+(vt1.c0)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (NULL) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM vt0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) BETWEEN (vt1.c0) AND (CAST(vt1.c0 AS TEXT)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) BETWEEN (vt1.c0) AND (CAST(vt1.c0 AS TEXT)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) BETWEEN (vt1.c0) AND (CAST(vt1.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (INSTR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE RTRIM)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (INSTR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE RTRIM)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((INSTR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE RTRIM)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((('')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(vt1.c0 COLLATE NOCASE)))AND(SQLITE_COMPILEOPTION_USED(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((('')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(vt1.c0 COLLATE NOCASE)))AND(SQLITE_COMPILEOPTION_USED(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((('')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(vt1.c0 COLLATE NOCASE)))AND(SQLITE_COMPILEOPTION_USED(vt1.c0)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (vt0.c0 COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (vt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND ((((vt1.c0))<((NULL)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE BINARY) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND ((((vt1.c0))<((NULL)))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE BINARY) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND ((((vt1.c0))<((NULL)))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING COUNT(COUNT(MIN(MIN(vt1.c0)))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (COUNT(COUNT(MIN(MIN(vt1.c0)))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((COUNT(COUNT(MIN(MIN(vt1.c0))))) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (CAST(((vt0.c0)>(vt1.c0)) AS BLOB)) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (CAST(((vt0.c0)>(vt1.c0)) AS BLOB)))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((CAST(((vt0.c0)>(vt1.c0)) AS BLOB)) ISNULL));
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt0 INNER JOIN vt1 ON (NOT (vt1.c0 COLLATE NOCASE));
SELECT DISTINCT vt1.c0 FROM vt0 INNER JOIN vt1 ON (NOT (vt1.c0 COLLATE NOCASE)) WHERE (((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT vt1.c0 FROM vt0 INNER JOIN vt1 ON (NOT (vt1.c0 COLLATE NOCASE)) WHERE ((NOT (((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0 FROM vt0 INNER JOIN vt1 ON (NOT (vt1.c0 COLLATE NOCASE)) WHERE (((((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0 INNER JOIN vt1 ON (NOT (vt1.c0 COLLATE NOCASE));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((- (((vt0.c0)IS(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((- (((vt0.c0)IS(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((- (((vt0.c0)IS(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (- ('ê¡º%')) COLLATE BINARY UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((- ('ê¡º%')) COLLATE BINARY)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- ('ê¡º%')) COLLATE BINARY) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (- ('ê¡º%')) COLLATE BINARY UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((- ('ê¡º%')) COLLATE BINARY)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- ('ê¡º%')) COLLATE BINARY) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL SUM(CAST(((vt1.c0) ISNULL) AS TEXT)) FROM vt1, vt0 ORDER BY (((vt1.c0)+(vt1.c0)) IN ()), ((((vt1.c0) IS FALSE))>=(vt0.c0)), ((((vt1.c0) ISNULL))&(CASE vt1.c0  WHEN 0.9845299748236042 THEN vt1.c0 END));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON TRIM(vt0.c0 COLLATE NOCASE);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON TRIM(vt0.c0 COLLATE NOCASE) WHERE (x'9f84') UNION ALL SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON TRIM(vt0.c0 COLLATE NOCASE) WHERE ((NOT (x'9f84'))) UNION ALL SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON TRIM(vt0.c0 COLLATE NOCASE) WHERE (((x'9f84') ISNULL));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON TRIM(vt0.c0 COLLATE NOCASE);
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((vt1.c0 COLLATE NOCASE)) AND ((((vt1.c0)|(vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((vt1.c0 COLLATE NOCASE)) AND ((((vt1.c0)|(vt1.c0)))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0 COLLATE NOCASE)) AND ((((vt1.c0)|(vt1.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (json_extract((((vt0.c0))>((vt0.c0))), x'cf8a', (vt0.c0 IN ()), x'')) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (json_extract((((vt0.c0))>((vt0.c0))), x'cf8a', (vt0.c0 IN ()), x'')))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((json_extract((((vt0.c0))>((vt0.c0))), x'cf8a', (vt0.c0 IN ()), x'')) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(vt1.c0))%(MAX(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((AVG(vt1.c0))%(MAX(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((AVG(vt1.c0))%(MAX(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(vt1.c0))%(MAX(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((AVG(vt1.c0))%(MAX(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((AVG(vt1.c0))%(MAX(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (x'') UNION ALL SELECT * FROM vt0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM vt0 WHERE (((x'') ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((- (vt0.c0)))OR((vt0.c0 IN ()))))OR(((vt0.c0)!=(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((- (vt0.c0)))OR((vt0.c0 IN ()))))OR(((vt0.c0)!=(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((- (vt0.c0)))OR((vt0.c0 IN ()))))OR(((vt0.c0)!=(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN NULL WHEN ((vt0.c0) ISNULL) THEN CAST(vt0.c0 AS REAL) WHEN NULL THEN ((vt0.c0) NOT NULL) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 COLLATE BINARY THEN NULL WHEN ((vt0.c0) ISNULL) THEN CAST(vt0.c0 AS REAL) WHEN NULL THEN ((vt0.c0) NOT NULL) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 COLLATE BINARY THEN NULL WHEN ((vt0.c0) ISNULL) THEN CAST(vt0.c0 AS REAL) WHEN NULL THEN ((vt0.c0) NOT NULL) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((MAX(MIN(vt1.c0))))<(((('_\r)Td,&*Y{}')>(TOTAL(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((MAX(MIN(vt1.c0))))<(((('_\r)Td,&*Y{}')>(TOTAL(vt1.c0)))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((MAX(MIN(vt1.c0))))<(((('_\r)Td,&*Y{}')>(TOTAL(vt1.c0))))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((TRIM(DISTINCT vt0.c0, vt0.c0)) NOT BETWEEN (vt0.c0) AND (0.20618353407087686 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((TRIM(DISTINCT vt0.c0, vt0.c0)) NOT BETWEEN (vt0.c0) AND (0.20618353407087686 COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((TRIM(DISTINCT vt0.c0, vt0.c0)) NOT BETWEEN (vt0.c0) AND (0.20618353407087686 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON (NOT (vt0.c0));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON (NOT (vt0.c0)) WHERE ('{}') UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON (NOT (vt0.c0)) WHERE ((NOT ('{}'))) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON (NOT (vt0.c0)) WHERE ((('{}') ISNULL));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt0 ON (NOT (vt0.c0));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((~ (vt0.c0))) NOT BETWEEN (vt0.c0) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.09558797766872051)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((~ (vt0.c0))) NOT BETWEEN (vt0.c0) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.09558797766872051)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((~ (vt0.c0))) NOT BETWEEN (vt0.c0) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.09558797766872051)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(CAST(vt0.c0 AS INTEGER)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(CAST(vt0.c0 AS INTEGER)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(CAST(vt0.c0 AS INTEGER))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(CAST(vt0.c0 AS INTEGER)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(CAST(vt0.c0 AS INTEGER)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(CAST(vt0.c0 AS INTEGER))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (0.9797829567212194))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (0.9797829567212194))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (0.9797829567212194))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (x'') UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (x''))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((x'') ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 NOT INDEXED WHERE (((HEX(DISTINCT vt1.c0))IS(LIKELY(DISTINCT x'')))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((HEX(DISTINCT vt1.c0))IS(LIKELY(DISTINCT x'')))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((HEX(DISTINCT vt1.c0))IS(LIKELY(DISTINCT x'')))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(MIN(MIN(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(MIN(MIN(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(MIN(MIN(vt1.c0)))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (NULL) UNION ALL SELECT * FROM vt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM vt0 WHERE (((NULL) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))-(((vt1.c0) BETWEEN (vt1.c0) AND (x''))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))-(((vt1.c0) BETWEEN (vt1.c0) AND (x''))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))-(((vt1.c0) BETWEEN (vt1.c0) AND (x''))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (((vt1.c0)GLOB(vt0.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0))!=((vt0.c0, vt1.c0, vt0.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY) BETWEEN (((vt1.c0)GLOB(vt0.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0))!=((vt0.c0, vt1.c0, vt0.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (((((vt0.c0 COLLATE BINARY) BETWEEN (((vt1.c0)GLOB(vt0.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0))!=((vt0.c0, vt1.c0, vt0.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON (- (((vt0.c0) NOT NULL))) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON (- (((vt0.c0) NOT NULL))) GROUP BY vt0.c0, vt1.c0 HAVING (((~ (COUNT(*))))IS NOT(MAX(AVG(COUNT(vt1.c0))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON (- (((vt0.c0) NOT NULL))) GROUP BY vt0.c0, vt1.c0 HAVING (NOT ((((~ (COUNT(*))))IS NOT(MAX(AVG(COUNT(vt1.c0))))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0 INNER JOIN vt1 ON (- (((vt0.c0) NOT NULL))) GROUP BY vt0.c0, vt1.c0 HAVING (((((~ (COUNT(*))))IS NOT(MAX(AVG(COUNT(vt1.c0)))))) ISNULL);
SELECT SUM((+ (((vt0.c0) ISNULL)))) FROM vt0;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (0x4f43796c) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (0X4f43796c))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((0X4f43796c) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (LOWER(DISTINCT (~ (vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((NOT (LOWER(DISTINCT (~ (vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (((LOWER(DISTINCT (~ (vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
