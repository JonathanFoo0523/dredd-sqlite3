-- Time: 2024/06/09 18:20:26
-- Database: database37
-- Database version: 3.40.0
-- seed value: 2270855637
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1 UNINDEXED, c2 UNINDEXED); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA cell_size_check; -- 0ms;
UPDATE OR IGNORE rt1 SET (c0, c1)=('1277758340', NULL) WHERE ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1))) NOT BETWEEN (rt1.c2) AND (((rt1.c0)<(rt1.c0)))); -- 0ms;
INSERT OR ABORT INTO rt1 VALUES (0X21ea9d0c, NULL, x''), ('v', 0.598286748590536, 'Yi'), (NULL, x'', x'39a9'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c2) VALUES (NULL, NULL), (NULL, ('-1826500402' IN ())), (x'', (('') NOT BETWEEN (json(1.27775834E9)) AND ((x'' IN ())))); -- 0ms;
UPDATE OR REPLACE rt1 SET (c1)=(0X4c290b84) WHERE ((HEX(DISTINCT rt1.c2))<>(((rt1.c1)IS(rt1.c0)))); -- 0ms;
UPDATE vt0 SET (c2)=(NULL) WHERE '-1826500402'; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '1383'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1724672461 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1826500402 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-268714739 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=569023756 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT NULL, 5.69023756E8)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 sz=1969730857'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1850431409' IN ('-268714739', '-1724672461'))) BETWEEN (NULL COLLATE BINARY) AND ((('1e500') ISNULL))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1277758340 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0xffffffff91b4a84f)AND(x'')))AND(-2.68714739E8)))IS((- (NULL)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=-60279425 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=695612907'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-1728909458'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(0.05661293137495438) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (x''))) NOT BETWEEN ((((x''))==(('A㕿*GZD*C!')))) AND (0.18014908400405016)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')OR('FJc\rIL')))OR('-268714739')))OR(0.7799765794930875)))OR(NULL)))<=(0.598286748590536 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0Xffffffffeffbbd0d))>=((NULL))))IS NOT((NULL IN ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1277758340 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1969730857 sz=-1091044652 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((-644963791)AND(0.6269571204189482)))AND('1277758340'))  WHEN (+ ('-1603927472')) THEN ((('鴌8lC?U{'))==(('1185686217'))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.598286748590536)<<(NULL)) AS NUMERIC); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=768508008 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-500076306 sz=-1188665086'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1633618574 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-500076306 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=14656869 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=768508008 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0.6994824521600187 AS TEXT) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-644963791 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=768508008 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')!=(CASE WHEN '1185686217' THEN NULL WHEN NULL THEN NULL WHEN 5.69023756E8 THEN '1277758340' ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0.26398292800069423, NULL, x''))<>((0x14133e4c, NULL, '-1643163563'))) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 2 sz=1907297555'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ ('-1603927472')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1724672461 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NOT (x'')), CASE ''  WHEN -1e500 THEN 0.19604209520721294 END, ((((NULL)OR('-60279425')))OR('1907297555')), ((x'0f77')*(x'')), NULL))<=((json_patch(NULL, '^a'), (- (0xffffffff98f2ef6e)), (('1277758340')<>(x'4428')), x'0e55' COLLATE BINARY, -1288154095))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-288085179 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((NOT ('1160642050')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-350518866'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=695612907 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-60279425 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1188665086 -1633618574 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('Yi', '-1850431409', 'FJc\rIL')) BETWEEN ((CASE ''  WHEN -0.0 THEN x'' WHEN '-644963791' THEN '-1091044652' WHEN 0.48455428231968833 THEN 'BAC' END, ((x'30f3799a')GLOB(0.5306973032645809)), LIKELY(NULL))) AND ((ABS(-1606490110), (+ (NULL)), (((0.5306973032645809)) NOT BETWEEN ((NULL)) AND ((NULL)))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'b936') IS TRUE) THEN ((0xffffffff9ea1a20a) BETWEEN (0.5461744023144384) AND (x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1633574390')) NOT BETWEEN (((('qy	x')>(0.3522169794498864)))) AND ((((NULL)+(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1912524975'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('' AS REAL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1891032346')>('-1606490110'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(((NULL) NOT BETWEEN (-1.728909458E9) AND (0.6269571204189482))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1606490110') BETWEEN (CAST(0.7076339502026109 AS NUMERIC)) AND (0.4286862050398823)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0.6460233814263527, NULL, NULL, '', x'efb5'))>=(('rg', '&(', 0.7566165045060069, '2085141055', 0.6269571204189482))) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-1359466799')AND(NULL)))AND(0.40291196285668807)))AND('-1912524975')))AND('')))IS NOT((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1281219695 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1657275154'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN '' THEN x'' END)AND(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('⻑*\nvIq', '217223582', ''))=(('1028315307', x'0d96', 0x30c3a828)))) NOT BETWEEN (NULL COLLATE BINARY) AND ((- ('-1099833456')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1742743977'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 1347481616 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7566165045060069) NOT BETWEEN (x'') AND (x'')) COLLATE NOCASE; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM(NULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1184025275 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=786507956 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-460484631 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((((CASE WHEN 0.7032565289351744 THEN 1293268376 ELSE NULL END)OR(((x'') NOT NULL))))OR(((x'') NOT BETWEEN ('') AND (x'')))))OR((((NULL, NULL, NULL))>((NULL, '', 1.185686217E9))))))AND((~ (0.28357259181906314)))))AND(CAST(0Xffffffffa659cac6 AS BLOB))))OR(LTRIM(x'', 'X'))))AND((NOT (x'')))))AND((('184266613') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL))<(('&('))) COLLATE BINARY COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('Z\mF|Kx') BETWEEN (x'') AND (NULL)))==(((((NULL)OR(0.078186946291674)))AND(x'470c')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF((~ (x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=148926193'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1891032346'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('-1091044652')<('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-484153810 sz=-708176380'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-63255692 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 0 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((+ ('xij*')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=2085141055 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1673732003) BETWEEN (((NULL)=(x'9097'))) AND (((((((((1277758340)OR('3K')))OR(NULL)))OR('-6187041')))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'99e5')*(NULL)))AND(0.22456465383734492)))OR(('336805452' IN ('GF聨{SR', NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-268714739'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'' COLLATE BINARY)OR(((0Xffffffff9e0f5055)&(NULL)))))OR((NOT (x'bfdcf87d')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1137628555 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.700620643346655)||(0x21ea9d0c)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (0X73be796d)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1809201724 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1135205232 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE RTRIM(((0xffffffffb557411f)<>(0.5997770601707363))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('wA(]')<=(-1.504064826E9)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('747847208')LIKE(NULL)))); -- 4ms;
DELETE FROM sqlite_stat1 WHERE TRIM(json_object(x'199333f3', NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-612778087 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((((('')AND(x'')))AND(NULL)))AND(x'')))OR(x'1701')))AND(((NULL)-(0.6994824521600187)))))OR(CASE WHEN '-2138835285' THEN 'x' WHEN 0.48455428231968833 THEN 0.3093310500544131 WHEN x'' THEN 'kH' ELSE 'Z\mF|Kx' END)))AND((0x7e70b64e IN (0.5771150764619416)))))OR((('BAC') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0.3640184938752433 AS NUMERIC) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1321949092 0 sz=-1772124111'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)IS(NULL))))<((-1622141714))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('0.3093310500544131') NOT NULL))AND((+ (NULL)))))OR(((0Xffffffffb557411f) BETWEEN (NULL) AND (0.21466221724987344)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '4 sz=1977530856'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.25478142614108823) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1181648905 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1657275154 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-39703557'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '636280865 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT ((('0.18014908400405016'))<((-1.504064826E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((('+y') NOT BETWEEN (x'dcfd38bf') AND (x''))))=((NULL COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '385107801 2048455667 sz=1988692137 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-12081072 sz=-1912524975 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'')-(NULL))  WHEN 463817201 THEN (~ (0.499129217304514)) WHEN ((((x'')AND(x'')))AND(NULL)) THEN (+ ('Ma')) WHEN ((('-1091044652', x'', 0.7725420932883115))!=((NULL, x'', x''))) THEN ((-1e500)>(0.6241714057181356)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-644963791 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-848912170'))<>((x'6caa'))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-240067217'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1850431409 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 sz=-848912170 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.4286862050398823) ISNULL) IN ('kH' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-522874726 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xb54a86) NOT BETWEEN (x'') AND (NULL))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN ('v') AND (NULL)))+(('^vk?D' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1361455040'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<>(x'3e90'))) NOT BETWEEN (-1816367178) AND (((('3K'))==((x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNICODE((('') NOT BETWEEN ('') AND ('-2138835285'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1720270723 -708176380 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('2085141055') ISNULL))OR(NULL COLLATE RTRIM)))OR(('I^]' IN ()))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1988692137'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((0.7531661070956672 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1742743977 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-682627008 sz=1941862765 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-287792953'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-63255692 sz=0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (-3.50518866E8)))LIKE(CAST(x'' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=577593970 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((+ ('-2038263686'))))>=(((~ (NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1826500402 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '4 -1724672461 2 sz=373321362 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')-(x'')), x'' COLLATE NOCASE, '663749848' COLLATE NOCASE, (NULL IN ()), CAST(x'' AS TEXT), CAST(-1603927472 AS NUMERIC), LIKE(NULL, x'', 'Z')))>=((CASE x''  WHEN 0.9288368616076228 THEN NULL WHEN '8\r' THEN NULL WHEN x'' THEN x'' ELSE 0.40291196285668807 END, -1228716809, x'', TRIM(DISTINCT NULL), TIME(x'', x'', 1338266799), ((NULL) BETWEEN (x'') AND ('')), ((0X21ea9d0c) BETWEEN (0.3037095914758844) AND (0.6211841726020433))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1677469038'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('-205952679')GLOB((('0.22456465383734492') BETWEEN (-1.2081072E7) AND ('CWXb&''P澶')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1321949092 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' COLLATE BINARY) BETWEEN (((NULL)LIKE('p#<JI,'))) AND (((x'')<('?IflwD')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1826500402'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ''  WHEN CAST(x'775d' AS REAL) THEN (('0.598286748590536')>=('_')) WHEN ('1460664917' IN ()) THEN CAST(0.24567236697275185 AS INTEGER) WHEN (('')==(x'')) THEN ('-1724672461' IN ()) WHEN 0.06902423531807922 COLLATE BINARY THEN ('-877606260' IN ()) WHEN LENGTH(x'a4b2') THEN (((NULL)) NOT BETWEEN (('')) AND ((0.27373264351391247))) ELSE ((('J'))=((''))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1583864958'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-81353531 sz=-896359967 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-287792953 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.43271429084513113) NOT BETWEEN ('8\r') AND (-670976681)))OR(CASE WHEN NULL THEN NULL END)))OR((((1.1881094E7, 0.4154942677313743, -2.038263686E9))<((NULL, NULL, '{Yv}'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-470350073 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1643163563'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-171860336 sz=-174683092'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1213789964 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-86744480'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((-1.2081072E7) NOT BETWEEN (0.6145233843895684) AND ('>')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'eec0a5be' COLLATE NOCASE AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=289291133'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.6222134008205651) NOT BETWEEN (x'f146') AND (-1809201724)))OR((('-848912170') NOT NULL))))AND(0.9396041601831467)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-387831344 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x4fc454af)IS(NULL))) NOT BETWEEN (CAST(x'99ec' AS BLOB)) AND ((('-896359967')IS NOT('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '786507956 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)IS NOT(0.01652764248909877))) BETWEEN ((('1184025275') IS FALSE)) AND ((('0.3640184938752433') NOT BETWEEN ('-670976681') AND (0.5612166534194251)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.17684505690017083 THEN NULL ELSE 0xe8b7e22 END)*(((0.3668974543193898) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1134576827'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('', NULL, '0.5306973032645809')) BETWEEN ((CAST('336805452' AS NUMERIC), ((0.6097290142774949)|(1.184025275E9)), CASE WHEN 0.24567236697275185 THEN NULL WHEN '-173209417' THEN x'22a3' WHEN 1.969730857E9 THEN 0.7028135990568383 WHEN 'In!펉(' THEN '483666139' WHEN NULL THEN x'' ELSE x'2617' END)) AND ((CASE 0.08057059010278833  WHEN 0.5771150764619416 THEN 0.28453023477867434 END, ((((-1.60649011E9)OR('0.7076339502026109')))AND(x'')), (NOT (0.8440955098310667))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-500076306 sz=1135205232 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '885610631 sz=-1643163563 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-644963791)AND(NULL)))OR(x''))) NOT BETWEEN ('-0.0') AND ((('-9223372036854775808') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1347751295 -678906680'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (x'')) COLLATE NOCASE COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2 sz=2095871242 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1884749193 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LENGTH(((NULL)IS(0.3967792510122897))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL))) NOT BETWEEN ((- (NULL))) AND (((x'a762')<=(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2039913382 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-202204407 1135205232'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY((((NULL)) NOT BETWEEN ((x'')) AND ((0.8990344236811062)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE -8.1353531E7  WHEN -175493425 THEN 0X7a18f3f3 WHEN 'u ' THEN '-1359466799' WHEN -874639967 THEN 't矷' ELSE 0x3ec47500 END) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1123115045 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6453371678026392)) NOT BETWEEN ((0.45615708781014375)) AND (('-1816367178'))) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')GLOB('-1252572897')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((('-470350073'))>=((''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1603927472 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-848912170 625185039 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1809201724 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1963752072')) BETWEEN (((((0X318721f8)) NOT BETWEEN ((NULL)) AND ((1.657275154E9))))) AND ((NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2096138355 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1347481616'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1634884729 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-271127662'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1743415495'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1907297555 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1281219695'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1228716809 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS TRUE)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE QUOTE(((NULL)<<(-6.82627008E8))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1521104458 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-392501524 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-60279425 sz=-1359466799 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST('''a7>vB(q' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1429524425 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-470350073) BETWEEN (0xffffffffeef22373) AND (-1.826500402E9)))OR((x'590f' IN (NULL, '0.6453371678026392')))))OR(LOWER(DISTINCT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1184025275'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((IFNULL(DISTINCT 0.3932707141726687, ''))AND(((NULL)OR(NULL)))))OR('-1897801438')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('' COLLATE NOCASE)OR(0.9044973582421364)))OR(((NULL)==(730502917)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('597070708' AS REAL) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-205952679 sz=1540602532 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1228716809 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2033929746'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((('1151217794')AND(-2.40067217E8)))AND(''))  WHEN ((NULL) NOT BETWEEN (0X3464fc8a) AND ('')) THEN '-63880515' COLLATE RTRIM END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((+ (''))))<=((CASE WHEN 0.35906073511407355 THEN x'f3ca' ELSE 'ar' END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)IS(x'6176')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1427902787'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1286579202'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((('JO')AND(x'5a8d')))AND(NULL)) THEN CASE x''  WHEN x'' THEN NULL WHEN x'' THEN NULL WHEN 0Xffffffff93b2e60b THEN 0.23998695854604457 ELSE x'b8c4' END WHEN x'ebfd' COLLATE NOCASE THEN ('now2z來o1' IN ()) WHEN x'' COLLATE NOCASE THEN (('-1252572897') ISNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-522874726 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL) BETWEEN (-0.0) AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE 0.941484140648752  WHEN 0.3522169794498864 THEN NULL END)OR(0.8538230862810503)))AND((+ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))<=(UNLIKELY('1892629179'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.1184777443659929)-(NULL)))AND(1526924705 COLLATE RTRIM)))OR(((0.5036896998186121)%('퐘I')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-896359967'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1907297555'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1199057780 1139635234 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS TEXT))|('0.8538230862810503' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULLIF(DISTINCT NULL, '-470350073') IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHANGES(); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.8680185491607518)&(''))  WHEN json_type(x'90cd') THEN CASE 0Xffffffffcabdbb57  WHEN 0X3ca00cbe THEN 'GF聨{SR' WHEN 1028315307 THEN NULL WHEN NULL THEN NULL ELSE -1606490110 END END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'' COLLATE BINARY COLLATE NOCASE COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=467095919'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1497175608 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1380235970 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)&(1.907297555E9)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('u ') BETWEEN (0.6315541040699969) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1969730857 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')AND(NULL)))OR(TRIM(DISTINCT '0.28357259181906314'))))AND(((NULL)-(x'7121')))))OR(NULLIF(DISTINCT '2122767500', 0.7583107923568027))))AND(CAST(0xffffffffe320ad65 AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (1356701451)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-1912524975 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 -2028620752 sz=-889520188 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (0xffffffffd11c7749)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('11881094')OR(1856644096)))OR(0.7725420932883115)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'33c0')&(0x226d6272)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('{T唄n&/bpg' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT (('-272071567') NOT BETWEEN (x'') AND (x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-130033609') ISNULL) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9288368616076228) NOT BETWEEN (NULL) AND (x'')) IN ((0.10235202199525717 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST(-479246315 AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1286984507 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1292561256 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.08057059010278833)AND('1969730857')))AND(NULL)))AND(ABS(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1160642050 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' IN ()) IN (((((((((((((695612907)OR('Ma')))AND(',hGw,')))AND('2')))OR(0.5390836727354464)))AND('1330614170')))AND('zK]S')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '1657277604 sz=-1459431371'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1185686217'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE UPPER(NULL)  WHEN UPPER(DISTINCT 0xffffffff823411cc) THEN ((x'') IS TRUE) ELSE (((NULL, NULL, '-527507209')) NOT BETWEEN ((NULL, x'4255', 'T')) AND ((945683479, '-532708056', 'kh'))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (x''))) BETWEEN (CAST(0.0376427581177714 AS REAL)) AND ((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 4 sz=840247715 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER((('p6qL') IS TRUE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((688188759) BETWEEN (((x'') NOT BETWEEN ('-1850431409') AND (x''))) AND (((((((((NULL)OR('勪_')))OR('Jy')))OR(0.6834220809535749)))OR('-409723582')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1809201724 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('1907297555' AS REAL))<=(LOWER(0.8808684853856166))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((((530188897)<>('-1321949092')))) AND ((((((((((x'')AND(x'')))OR(NULL)))OR(NULL)))OR(''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ROUND(((((NULL)OR('0.3967792510122897')))AND(x'')), ((-333799826) ISNULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-484153810'))>((0.23998695854604457))))<<(((NULL)<('KG꿀Y')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN CAST('-1673732003' AS TEXT) THEN (((0.8050199305692168))<=(('VUh昮zR1?'))) ELSE ((x'')AND('1380851821')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((54468209)) NOT BETWEEN ((((NULL)<(0.9769388563179272)))) AND ((LIKELY(DISTINCT NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-1891032346)) NOT BETWEEN ((0.9288368616076228)) AND ((0.5827181292253206))))%(x'88fb' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1742743977 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6510756489726212; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7294420900405169 COLLATE NOCASE)IS NOT(((('', NULL, NULL))>((0.3990007748963291, '1117621886', '0.078186946291674'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT NULL))>=(CASE NULL  WHEN x'9656' THEN '' ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=2122767500 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-449350588 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 sz=1782766466 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-81353531 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1277758340 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=636280865 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-779949269 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=-677358067 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=2122767500'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '54051195 -635109841 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ('-118446404' IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-670976681 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '1277758340 -268714739 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=-1742743977 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN ('1-500000nh')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1673732003 sz=-162723937 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((-1288154095)AND(1988692137)))AND('''Z<SO}j'))  WHEN (('\_*#Zl{') BETWEEN ('') AND (0.1961714655657284)) THEN ((0.36225775822456996) NOT BETWEEN ('-1661568482') AND (0.6886480291100472)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST('-1606490110' AS TEXT) THEN ((x'')<<(NULL)) WHEN (((NULL)) NOT BETWEEN ((x'')) AND ((-6.12778087E8))) THEN (('')/(x'')) WHEN (((x'')) NOT BETWEEN ((x'')) AND ((-1.643163563E9))) THEN (0X33e9421b IN ()) ELSE GLOB('0.24567236697275185', '-1514094169') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-1229174284 0 sz=-1664341115 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '1995127378'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '206736394'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2 sz=-2031463866 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffffe0d5909a IN ()) IN (((695612907)*(x'')), (('')-(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 -494873479 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 -1288154095 sz=290282375'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-572765922'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-2069774091 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(NULL))) NOT BETWEEN ((((('636280865')AND(0.7566165045060069)))OR(NULL))) AND (0.05661293137495438)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1969259232 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x2fab00e6; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1252572897 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-2071310798 -2004831038 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 sz=-1623348140 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('-273882446')OR('-326399333')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-240067217 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 sz=2104045336 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1937612717 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '2 sz=-1742872003 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')AND(0.765442100134103)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN NULL END) BETWEEN (((x'') BETWEEN (0.9046657689167296) AND ('1460664917'))) AND (COALESCE(DISTINCT NULL, '2030886002'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1288154095 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-990288589 sz=1944346343 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1652594685)<<('747847208'))) BETWEEN (((7945396) ISNULL)) AND (((x'')IS NOT('-1466671221')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-193326268 sz=477798800 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('820234229') BETWEEN (x'f634') AND (x'')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=385107801'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 2 sz=-528123763 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '107471763 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 -646422166 sz=-393167961 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1184025275 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL COLLATE NOCASE THEN CAST(0.7753219666160004 AS INTEGER) WHEN (('d8U') BETWEEN ('') AND (NULL)) THEN ((NULL)=('zk]s')) WHEN ((('')) NOT BETWEEN (('9yi1>e')) AND ((-25891348))) THEN NULL ELSE '1988692137' END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((' ᘄ')<>(0.02044383313542475)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '2 sz=434753818'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1323387811'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1.912524975E9; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffff9321d0ce)IS('()')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-2.68714739E8, x'5da6', 'i!)')) BETWEEN (((0.26082643883294654 IN ()), CAST(0.007767430416915189 AS INTEGER), (('I??VN1')%(x'')))) AND ((((((NULL)AND(0.5012295492771666)))AND(x'')), (('1383924803') BETWEEN (0.6015921873478136) AND (-1826500402)), CASE NULL  WHEN x'' THEN 0xffffffffcea75fc8 END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8094005515142292)||(0.9288368616076228)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -399277979 sz=-2004164222'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')>(-759407342))) NOT BETWEEN (((-2038263686) BETWEEN (NULL) AND (-1.71860336E8))) AND ((((0X75b9e88c, x'', '453652574')) BETWEEN ((0.5218319622518943, '-484153810', 0.8085259924186897)) AND (('rg', '0.7725420932883115', 0.49955321237567707))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1834262676 sz=520908996 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1' IN ('1490793609', NULL)))||(COALESCE(x'', '-708176380'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.22639007455329596 IN (x'')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-752545684'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-716965308 sz=-1203881512 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_insert(0.6269571204189482, x'', '{{X^?StU')) BETWEEN ((('709521352')<=(896854691))) AND (0.2553516895365413 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN '2122767500' THEN 0.6882761765304259 ELSE '-1891032346' END COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.028880739588155846 THEN x'' WHEN '-470350073' THEN x'' WHEN '-1288154095' THEN '1988692137' END) BETWEEN (SQLITE_COMPILEOPTION_USED(x'')) AND (((((x'')AND('O')))AND(NULL)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)|('\r^')) IN ((('463817201') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE((0xffffffffa0660250 IN ()), (('979968665') BETWEEN (x'') AND (0.7197600901880609)), ('1135205232' IN ('HOH[''P?')), ((NULL) BETWEEN (0.4825143225805526) AND (0.5989006707294752))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((601352923) BETWEEN ('1715743443') AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-287792953 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=635550607 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((NULL)AND(0.0049535443240729116 COLLATE NOCASE)))OR(CAST(NULL AS NUMERIC))))OR(((x'') NOTNULL))))AND(CASE NULL  WHEN NULL THEN '726397882' END)))OR((~ (x'f6942057')))))OR(SQLITE_SOURCE_ID())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=2132761823 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-206463976 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1415931075'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')AND(NULL)))AND(NULL)))OR('-12081072')))OR('Agg-Infinity^tN%Y')))<=(RTRIM(x'5db4'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ ('')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '79039822 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=569023756'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '2 -1669943238 sz=-1891032346'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('RY2<d')>=(x'eef9')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1719457603 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2122767500'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-570471534 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(x'' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1185686217 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xfffffffff1b0dd6f)IS(0.3822621667843136))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1792811857 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '2076714060 sz=-40941340 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-2064063080 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=849171653 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('K' COLLATE NOCASE AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1340205037 sz=-64670658'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2133709416 -95000027 sz=-121317517 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('?yl0_~෦' COLLATE RTRIM IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-1891032346 -276828549 sz=2122767500 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-206463976 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1501651253' COLLATE NOCASE) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2 0 sz=-1394729399 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((('0.0', x'a58284ba', 0.21366313444486795)) BETWEEN ((0.8391192477692315, '754522854', x'')) AND ((NULL, 0.24793286628015376, NULL)))  WHEN (((((((('FALSE')OR(x'')))AND('1977530856')))AND('~/')))AND(0X4c2c7d18)) THEN (NOT (0x14133e4c)) WHEN json_quote(-1963781578) THEN UNLIKELY(DISTINCT 0Xfffffffffb26a4c5) WHEN ((-593756740)GLOB(NULL)) THEN (x'' IN (433287995, NULL)) ELSE CASE WHEN NULL THEN x'' ELSE NULL END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL))AND((('''z<so}j') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))||(((0.6418939289989747)IS(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '542964137 284890345 sz=800936027 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1160684606 sz=-691974224'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0Xf3b0fe0) IS TRUE)  WHEN ((0.21096804640981726) ISNULL) THEN ((((((((NULL)AND(0Xffffffffeb1b81ae)))OR(0.5496398642429918)))AND(0.956559221729378)))AND('')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xffffffffe0fd3971 COLLATE RTRIM) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')IS NOT(x'')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((10195714)OR(0.05125996230064944)))AND(0.003047575921985235)))AND(((x'')<=(NULL)))))OR(('' IN ()))))AND(((((x'')AND(0.5323983211938971)))AND(NULL)))))OR(((-1.816367178E9)%('666269296')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1606340018 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')AND(0.46832058972121227)))AND(x'')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)/('zLLg|')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-81353531'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1942665439 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1219826498'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-159868383'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=380830755'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=693726356'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0X73be796d AS INTEGER))-((((''))>=((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN ('M)_')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '643382960 sz=217223582 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.240136973883339)OR(NULL)))OR(NULL)))OR((((-1.742743977E9)) NOT BETWEEN ((x'20db')) AND (('0.941484140648752'))))))AND(((NULL) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-81353531'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TIME(x'', ((0.8036971445637674) NOT BETWEEN (NULL) AND (0.36225775822456996)), ((0Xffffffffcc9d008f)==(0.13421106129274785))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-302729178'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('JO' AS BLOB))|((('()') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'8286'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('') BETWEEN (x'') AND (x'')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0.02721099993360454) NOT BETWEEN (NULL) AND ('')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x30c3a828)) BETWEEN (('1941862765')) AND (('\n'))) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-550324819 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('1961196428')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1955901406'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')IS NOT(x'6f06')))AND(((NULL)AND(NULL)))))OR(CAST(0.04728427547663461 AS TEXT))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-598133084 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('914498392') NOT BETWEEN (x'42e3') AND (-1984918562)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1669804980 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE RTRIM AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS(DISTINCT '់x')) NOT BETWEEN (((x'1258')<<(x''))) AND (CAST(0.8592180331650504 AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'803e') IS TRUE))IS NOT(CASE WHEN 'Dpp5yDE' THEN '0.48455428231968833' WHEN '<' THEN NULL WHEN '0.17684505690017083' THEN '⻑*\nvIq' WHEN NULL THEN NULL WHEN NULL THEN '+/' ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1181648905 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 0 sz=-2112133198 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-785940115 sz=2048455667 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1160642050 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=507826710 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=198688392'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((json_remove(834134615, NULL))) AND ((((x'')GLOB(0.7878597834373232))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1212652666 4 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-206463976 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1252572897', NULL, '534474951')) BETWEEN ((x'7ce9', 1.988692137E9, 0.32180860209652096)) AND ((NULL, x'', NULL))) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS TRUE))IS NOT('-896359967')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1601271589 2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((x'' IN ()))OR(DATETIME(x'', NULL, NULL, NULL, 0xffffffffa3820330))))AND(CAST('1347481616' AS BLOB))))OR((('0.8990344236811062') NOTNULL))))AND(LIKELY(DISTINCT x''))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('') NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-14128627 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-206463976 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-103854839 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1017824470 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE highlight(((0x4c5ddc6f)<(NULL)), (((x''))=((234697510))), (('') ISNULL), ((x'') NOT BETWEEN (x'') AND (-6187041))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(((x'')<=('-893251291')), CASE WHEN x'fca8' THEN '0.22639007455329596' ELSE x'' END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)*('8%!z'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('᧻4#9U_Qr', NULL, 1347481616))>((NULL, '0.7725420932883115', NULL))) IN (0.028410334096083623, (x'' IN ()))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 0 sz=389043826 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1829998761 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-924353689 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<('-1982248475')))&(LIKELY(0.9936036111774096))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((json_valid(NULL)))=(((('')-('1096143328'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2082635680 0 sz=1277758340 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-708176380 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-157945312 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') IS TRUE) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-460484631 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 sz=1294357955'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-470350073 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1724672461 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (- ('-708176380'))  WHEN (x'' IN ()) THEN LIKELY(DISTINCT '-1698007279') WHEN ('-287792953' IN ()) THEN (~ (0.6789910028285624)) WHEN (NOT ('S2')) THEN (('-877606260') IS TRUE) WHEN NULL THEN CAST('6k阳U' AS REAL) WHEN (((''))!=((NULL))) THEN ((0Xffffffff961d4173) IS TRUE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-334287915 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1615945839'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('786507956' AS INTEGER)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS FALSE) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1460664917'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)%(-612778087)) THEN 't' END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '853868894 sz=-1563297185 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1131655195 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) BETWEEN (CASE WHEN -8.96359967E8 THEN x'' END) AND (((0.2656035298390964)>('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=908304067 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.6882761765304259  WHEN 'k.' THEN 'zk]s' END) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((x'') IS TRUE), ((((0.7915280742873482)AND(NULL)))OR(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) NOT BETWEEN ((x'')) AND ((0.9808093645477788)))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '1969730857 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((UNLIKELY(0.19047223648705358))OR(NULL)))AND((('疓''-㕿_F')|('&>{]')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-201633022 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-321310812 -1091044652 sz=1926368023 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_patch(json_array_length(0.43280374421346435, 0X2ee128b4), CASE '-1173347865'  WHEN '' THEN 'Z}FBXu鿼' ELSE 2099108283 END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1517926661 0 sz=636280865 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((0Xffffffffc89774a3)OR('')))OR(0.5201653845346597))  WHEN CASE WHEN '-1816367178' THEN 'v|t' ELSE x'' END THEN (NULL IN ()) WHEN ((-144787619)%(x'')) THEN (('-19573143')IS NOT(NULL)) WHEN ((x'2dd1')*(1801514599)) THEN ((NULL) BETWEEN (NULL) AND (0.9314999291543786)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=569023756'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('0.2553516895365413') IS FALSE) THEN ((((7.47847208E8)AND('1869335093')))AND('1e500')) ELSE (('-1,鏒*')AND('9223372036854775807')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.18014793916226768) NOT BETWEEN (0Xffffffffc133d5cf) AND (x'')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-848912170'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 -968604568 0 sz=310013866 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.3542176463199198 AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9252752041705514, 8.18128936E8, 0.4070396730357029)) NOT BETWEEN (('Q]U', 'H', '')) AND ((NULL, -211924637, '1068534092'))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1742743977 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=196858065'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1787496329'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.391052998284077) ISNULL)) BETWEEN (LIKELIHOOD(0xffffffffaef82ed1, 0.4810500323402668)) AND ((((1.1881094E7)) NOT BETWEEN ((NULL)) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=170640720 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((0.6655135376168834 IN (0.8424874241912217, x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0.598286748590536)))/(((('R['))>=((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1293268376 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-484153810 sz=-1307899717 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1456756285 sz=845703205 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1912524975 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((x'6b2a')==((((x''))>((''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=883463478 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'6577b74d')|('+D\g'''))))>((CASE WHEN x'' THEN 'wE' WHEN '6aVORXi' THEN NULL WHEN '11881094' THEN x'570d' WHEN NULL THEN NULL WHEN 'ar' THEN NULL WHEN NULL THEN NULL WHEN 0.0 THEN 'ݪNMu' END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)) NOT BETWEEN (('1964276072')) AND ((x''))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0x56f7dfa3) BETWEEN (NULL) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 0 2048455667 unordered noskipscan'); -- 2ms;
DELETE FROM sqlite_stat1 WHERE (((((x'', 0.8514981405885896, ''))<=((NULL, 0.5771150764619416, NULL))))-((NULL IN (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1978267652 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)IS(x'')))<>(TYPEOF(0xffffffffd801b557))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '1338266799 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('2085141055')>=(x'')))>=(x'3b54c366' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1817514364 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-811227525 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-6187041 1737179278 sz=-1083044993 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=569023756 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-727026068'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '1277758340 sz=2048455667 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-2138835285 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1839728022 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.977805051512033) IS TRUE)) BETWEEN (CASE '-1520752075'  WHEN x'' THEN -1e500 END) AND (0.7764753415315369)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=-1188665086 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=808203727 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1028315307'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2048455667 -630450941 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') NOT BETWEEN ('1291020371') AND ('1398764283')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 2 sz=831801609'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1140860188 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-483128532'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((('14656869')AND(x'')))OR('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-850746829 sz=-1150390040'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-4.60484631E8) IS TRUE)) BETWEEN (NULL COLLATE NOCASE) AND (LIKELIHOOD(NULL, 0.5668905371580915))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-723938744'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('2o')OR(0Xffffffffcd66a0d6)))OR(0.24613511588848702)), json_valid(x''), -1361455040 COLLATE BINARY, (NOT (NULL)), TRIM(DISTINCT x'')))>(((((((((((((('')OR(NULL)))AND(NULL)))AND(x'60c7')))OR('Q')))OR(0.5612166534194251)))OR('^_lfI')), ((0Xffffffffaf1c15fd) NOT BETWEEN ('') AND (NULL)), (NOT (x'')), HEX(0X61de9649), x''))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1352294485 unordered'); -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES (-4.8415381E8); -- 0ms;
PRAGMA main.application_id = -58516099566905309; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES ('-1809201724', NULL, 1.16064205E9); -- 0ms;
PRAGMA foreign_keys; -- 0ms;
UPDATE vt0 SET (c1, c1, c2)=('569023756', x'', 5.69023756E8); -- 0ms;
PRAGMA temp.checkpoint_fullfsync; -- 0ms;
UPDATE OR IGNORE rt1 SET (c2, c0)=(0.7531661070956672, 0.6848130875740994); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA main.wal_autocheckpoint = 8590887459197864901; -- 0ms;
INSERT OR IGNORE INTO rt1(c1) VALUES (0xffffffffd2ac408a); -- 0ms;
PRAGMA main.legacy_file_format = false; -- 0ms;
COMMIT TRANSACTION; -- 1ms;
PRAGMA soft_heap_limit; -- 0ms;
PRAGMA main.application_id = -7311612781990873351; -- 0ms;
END; -- 0ms;
PRAGMA main.journal_size_limit = -751973853871868745; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c2) VALUES ('H>(^[', 0.9644347557080418), ('1e500', '쪪\n'), ('X푱', 0.9290501509899254); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
PRAGMA main.mmap_size; -- 0ms;
INSERT OR IGNORE INTO rt1(c1) VALUES (x''); -- 4ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '15339'); -- 1ms;
PRAGMA integrity_check; -- 0ms;
PRAGMA main.optimize; -- 0ms;
UPDATE OR IGNORE rt1 SET (c0)=(NULL) WHERE ((CAST(rt1.c1 AS NUMERIC))AND(HEX(NULL))); -- 0ms;
REINDEX NOCASE; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c2=x'' WHERE (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER))) AND ((CASE vt0.c1  WHEN 'p6qL' THEN -8.4891217E8 END))); -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=0.3668974543193898, c0='-205952679'; -- 0ms;
INSERT OR FAIL INTO rt1(c0) VALUES ('-1673732003'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '23703'); -- 1ms;
UPDATE OR IGNORE rt1 SET c0=0X7dd872fa; -- 0ms;
INSERT OR IGNORE INTO rt1(c2) VALUES (-1772124111); -- 0ms;
INSERT OR FAIL INTO vt0(c1) VALUES (x''); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0.0930733038050291); -- 0ms;
UPDATE OR IGNORE rt1 SET c0=NULL, c1=NULL WHERE rt1.c2; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '9253'); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE vt0 SET c1='-1305064828' WHERE (((vt0.c0)) BETWEEN ((CAST(vt0.c1 AS NUMERIC))) AND ((((x'984c9ee1') BETWEEN (vt0.c0) AND (vt0.c1))))); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA main.journal_size_limit; -- 0ms;
UPDATE rt1 SET (c0)=('-612778087'); -- 0ms;
UPDATE OR REPLACE vt0 SET (c0)=(x'c07e') WHERE ((((((vt0.c2)AND(vt0.c2)))AND((NOT (vt0.c2)))))AND(((vt0.c0)>>(vt0.c1)))); -- 0ms;
END TRANSACTION; -- 0ms;
DROP TABLE rt1; -- 0ms;
PRAGMA auto_vacuum = FULL; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '6219'); -- 0ms;
UPDATE OR IGNORE vt0 SET c1=''; -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT OR ROLLBACK INTO vt0 VALUES (1977530856, x'b5d0', '-1728909458'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1891032346);\n; -- 0ms;
UPDATE OR FAIL vt0 SET c1=-6.82627008E8, c0=0xffffffffffffffff WHERE NULL; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL, c2=0.998633371268125; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '35505'); -- 0ms;
UPDATE OR FAIL vt0 SET c1='-1912524975' WHERE ')1'; -- 0ms;
END; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA temp.application_id; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0); -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES ('T~x+-*ᓮ'), (x'9590'), (0.17941230525360763); -- 0ms;
UPDATE OR IGNORE vt0 SET c1=-1409593931 WHERE ((vt0.c1 COLLATE BINARY)%((((vt0.c2))<=((x''))))); -- 0ms;
INSERT OR IGNORE INTO vt0(c2) VALUES (0.3338517610246705); -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (x''), (NULL), (CASE ((((0.7390029340246406)OR('663749848')))AND(NULL))  WHEN TRIM(DISTINCT '-1259974867') THEN ('\J(<\b' IN ()) WHEN NULL COLLATE NOCASE THEN LENGTH('+\no荓u뀁') WHEN ((x'')OR(NULL)) THEN (('609806819')>=(211695609)) ELSE -708176380 COLLATE BINARY END); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(-1809201724); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0xffffffff99503603); -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('GY'), (NULL), (NULL); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE vt0 SET (c0)=(1869845424) WHERE vt0.c1; -- 1ms;
UPDATE vt1 SET (c0)=(0.7076339502026109); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 625972041); -- 1ms;
INSERT OR IGNORE INTO vt0(c2, c0, c1) VALUES (0.8844295720345049, '-1078721837', 0.9769388563179272); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ANALYZE main; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 1ms;
INSERT INTO vt1(vt1) VALUES('merge=1013404577,7');\n; -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES (x''); -- 0ms;
ANALYZE main; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'' WHERE ((vt0.c0 COLLATE NOCASE)==(vt0.c1 COLLATE RTRIM)); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='-1213752942'; -- 1ms;
UPDATE OR IGNORE vt1 SET c0=NULL WHERE UNLIKELY((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 11); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1999484791); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=6'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
UPDATE OR IGNORE vt0 SET c2=x'' WHERE ((((CAST(vt0.c2 AS REAL))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 END)))OR(CAST(vt0.c0 AS INTEGER))); -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES (0.09659700869540977); -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO vt0(c2, c0) VALUES (0.22452316220846347, 0.5962267496155725); -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 3ms;
COMMIT; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA temp.soft_heap_limit; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET c1=0.028880739588155846 WHERE LIKELY(((vt0.c1)>(vt0.c2))); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT vt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((vt1.c0)!=(vt1.c0)) THEN 0.8462757916371795 ELSE UNLIKELY(DISTINCT vt0.c0) END;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((vt1.c0)<>(vt1.c0)) THEN 0.8462757916371795 ELSE UNLIKELY(DISTINCT vt0.c0) END WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c2)) IN (((vt0.c0)!=(0.869719620976108))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((vt1.c0)<>(vt1.c0)) THEN 0.8462757916371795 ELSE UNLIKELY(DISTINCT vt0.c0) END WHERE ((NOT ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c2)) IN (((vt0.c0)!=(0.869719620976108))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((vt1.c0)<>(vt1.c0)) THEN 0.8462757916371795 ELSE UNLIKELY(DISTINCT vt0.c0) END WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c2)) IN (((vt0.c0)!=(0.869719620976108))))) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((vt1.c0)!=(vt1.c0)) THEN 0.8462757916371795 ELSE UNLIKELY(DISTINCT vt0.c0) END;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((vt0.c2)) NOT BETWEEN (('')) AND ((((NULL) ISNULL))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((((vt0.c2)) NOT BETWEEN (('')) AND ((((NULL) ISNULL))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt0.c2)) NOT BETWEEN (('')) AND ((((NULL) ISNULL))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((UPPER(vt1.c0) IN (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((UPPER(vt1.c0) IN (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((UPPER(vt1.c0) IN (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT vt0.c2 FROM vt0;
SELECT ALL vt0.c2 FROM vt0 WHERE ((+ (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 END))) UNION ALL SELECT vt0.c2 FROM vt0 WHERE ((NOT ((+ (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 END))))) UNION ALL SELECT ALL vt0.c2 FROM vt0 WHERE ((((+ (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 END))) ISNULL));
SELECT vt0.c2 FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (LOWER(DISTINCT (NOT (vt1.c0)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (LOWER(DISTINCT (NOT (vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((LOWER(DISTINCT (NOT (vt1.c0)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0 FROM vt1 CROSS JOIN vt0 ON (~ (((vt0.c1)-(vt0.c2)))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 CROSS JOIN vt0 ON (~ (((vt0.c1)-(vt0.c2)))) WHERE (((((vt1.c0)>=(vt0.c2)))IS NOT(7.68508008E8))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1 CROSS JOIN vt0 ON (~ (((vt0.c1)-(vt0.c2)))) WHERE ((NOT (((((vt1.c0)>=(vt0.c2)))IS NOT(7.68508008E8))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1 CROSS JOIN vt0 ON (~ (((vt0.c1)-(vt0.c2)))) WHERE (((((((vt1.c0)>=(vt0.c2)))IS NOT(7.68508008E8))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 CROSS JOIN vt0 ON (~ (((vt0.c1)-(vt0.c2)))) GROUP BY vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0 HAVING COUNT(TOTAL(0.5771150764619416)) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0 HAVING (NOT (COUNT(TOTAL(0.5771150764619416)))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0 HAVING ((COUNT(TOTAL(0.5771150764619416))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CASE WHEN (vt1.c0 IN ()) THEN (((vt1.c0))!=((-1.321949092E9))) WHEN (~ (vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN (vt1.c0 IN ()) THEN vt1.c0 END) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN (vt1.c0 IN ()) THEN (((vt1.c0))<>((-1.321949092E9))) WHEN (~ (vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN (vt1.c0 IN ()) THEN vt1.c0 END))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE WHEN (vt1.c0 IN ()) THEN (((vt1.c0))<>((-1.321949092E9))) WHEN (~ (vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN (vt1.c0 IN ()) THEN vt1.c0 END) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 NOT INDEXED;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (NULL) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1 NOT INDEXED;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((0.43271429084513113)) AND ((((vt1.c0) ISNULL))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((0.43271429084513113)) AND ((((vt1.c0) ISNULL))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((0.43271429084513113)) AND ((((vt1.c0) ISNULL))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (- ((((MIN(MAX(vt1.c0)))) NOT BETWEEN ((COUNT(*))) AND ((vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((- ((((MIN(MAX(vt1.c0)))) NOT BETWEEN ((COUNT(*))) AND ((vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((- ((((MIN(MAX(vt1.c0)))) NOT BETWEEN ((COUNT(*))) AND ((vt1.c0)))))) ISNULL);
SELECT vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE (((((vt0.c0)AND(vt0.c1))) BETWEEN (((vt0.c1)>>(vt0.c1))) AND (json_object(vt0.c0, vt0.c0, vt0.c2, vt0.c2)))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0)AND(vt0.c1))) BETWEEN (((vt0.c1)>>(vt0.c1))) AND (json_object(vt0.c0, vt0.c0, vt0.c2, vt0.c2)))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1))) BETWEEN (((vt0.c1)>>(vt0.c1))) AND (json_object(vt0.c0, vt0.c0, vt0.c2, vt0.c2)))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((((vt0.c2)LIKE(vt0.c0)))OR(vt0.c1)))OR(((vt0.c1) NOT BETWEEN (vt0.c2) AND ('Ә}')))))OR(0.65876894686306)))OR((NOT (vt0.c0))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c2)LIKE(vt0.c0)))OR(vt0.c1)))OR(((vt0.c1) NOT BETWEEN (vt0.c2) AND ('Ә}')))))OR(0.65876894686306)))OR((NOT (vt0.c0))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c2)LIKE(vt0.c0)))OR(vt0.c1)))OR(((vt0.c1) NOT BETWEEN (vt0.c2) AND ('Ә}')))))OR(0.65876894686306)))OR((NOT (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS TEXT)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST((vt1.c0 IN (vt1.c0)) AS TEXT)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST((vt1.c0 IN (vt1.c0)) AS TEXT)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING ((MAX(MAX(MAX(AVG(vt0.c1))))) IS FALSE) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING (NOT (((MAX(MAX(MAX(AVG(vt0.c1))))) IS FALSE))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING ((((MAX(MAX(MAX(AVG(vt0.c1))))) IS FALSE)) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt1.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt1.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt1.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CAST(vt0.c2 AS INTEGER)) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (CAST(vt0.c2 AS INTEGER)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((CAST(vt0.c2 AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS NUMERIC)) GROUP BY vt0.c0, vt0.c1, vt0.c2 UNION SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE BINARY AS NUMERIC)))) GROUP BY vt0.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE (((CAST(vt0.c0 COLLATE BINARY AS NUMERIC)) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c2, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt0.c2)-(vt0.c1)) AS NUMERIC) GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt0.c2)-(vt0.c1)) AS NUMERIC) GROUP BY vt0.c2, vt0.c0 HAVING ((GROUP_CONCAT(vt0.c1)) IS FALSE) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt0.c2)-(vt0.c1)) AS NUMERIC) GROUP BY vt0.c2, vt0.c0 HAVING (NOT (((GROUP_CONCAT(vt0.c1)) IS FALSE))) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt0.c2)-(vt0.c1)) AS NUMERIC) GROUP BY vt0.c2, vt0.c0 HAVING ((((GROUP_CONCAT(vt0.c1)) IS FALSE)) ISNULL);
SELECT ALL vt0.c2, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt0.c2)-(vt0.c1)) AS NUMERIC) GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt0.c2)-(vt0.c1)) AS NUMERIC) GROUP BY vt0.c2, vt0.c0 HAVING ((GROUP_CONCAT(vt0.c1)) IS FALSE) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt0.c2)-(vt0.c1)) AS NUMERIC) GROUP BY vt0.c2, vt0.c0 HAVING (NOT (((GROUP_CONCAT(vt0.c1)) IS FALSE))) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt0.c2)-(vt0.c1)) AS NUMERIC) GROUP BY vt0.c2, vt0.c0 HAVING ((((GROUP_CONCAT(vt0.c1)) IS FALSE)) ISNULL);
SELECT ALL vt0.c2, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt0.c2)-(vt0.c1)) AS NUMERIC) GROUP BY vt0.c2, vt0.c0;
SELECT ALL * FROM vt1 NATURAL JOIN vt0;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) IN ())) UNION ALL SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((NOT ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) IN ())))) UNION ALL SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) IN ())) ISNULL));
SELECT ALL * FROM vt1 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.c1 COLLATE RTRIM)AND((('1423504497')+(vt0.c0)))))AND(((((vt0.c1)OR(vt0.c2)))AND('-1879128864'))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((((vt0.c1 COLLATE RTRIM)AND((('1423504497')+(vt0.c0)))))AND(((((vt0.c1)OR(vt0.c2)))AND('-1879128864'))))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((vt0.c1 COLLATE RTRIM)AND((('1423504497')+(vt0.c0)))))AND(((((vt0.c1)OR(vt0.c2)))AND('-1879128864'))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.c2, vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c1, vt0.c0, vt1.c0;
SELECT vt0.c2, vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((+ (NULL)) COLLATE BINARY) GROUP BY vt0.c2, vt0.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt0.c2, vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((+ (NULL)) COLLATE BINARY))) GROUP BY vt0.c2, vt0.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt0.c2, vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((+ (NULL)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c2, vt0.c1, vt0.c0, vt1.c0;
SELECT vt0.c2, vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(TYPEOF(COUNT(TOTAL(COUNT(TOTAL(vt0.c1)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(TYPEOF(COUNT(TOTAL(COUNT(TOTAL(vt0.c1)))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(TYPEOF(COUNT(TOTAL(COUNT(TOTAL(vt0.c1))))))) ISNULL);
SELECT ALL vt1.c0 FROM vt0 CROSS JOIN vt1 ON CAST((NOT (vt0.c0)) AS BLOB);
SELECT ALL vt1.c0 FROM vt0 CROSS JOIN vt1 ON CAST((NOT (vt0.c0)) AS BLOB) WHERE ((((- (vt0.c2)))/(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt0 CROSS JOIN vt1 ON CAST((NOT (vt0.c0)) AS BLOB) WHERE ((NOT ((((- (vt0.c2)))/(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt0 CROSS JOIN vt1 ON CAST((NOT (vt0.c0)) AS BLOB) WHERE ((((((- (vt0.c2)))/(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt0 CROSS JOIN vt1 ON CAST((NOT (vt0.c0)) AS BLOB);
SELECT DISTINCT vt0.c2 FROM vt0, vt1;
SELECT DISTINCT vt0.c2 FROM vt0, vt1 WHERE ((LTRIM(vt0.c0) IN ((- (vt0.c0))))) UNION SELECT DISTINCT vt0.c2 FROM vt0, vt1 WHERE ((NOT ((LTRIM(vt0.c0) IN ((- (vt0.c0))))))) UNION SELECT DISTINCT vt0.c2 FROM vt0, vt1 WHERE ((((LTRIM(vt0.c0) IN ((- (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c2 FROM vt0, vt1;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c1, vt0.c2 FROM vt0 WHERE ((~ (((vt0.c0)IS NOT(vt0.c0))))) GROUP BY vt0.c1, vt0.c2 UNION SELECT vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT ((~ (((vt0.c0)IS NOT(vt0.c0))))))) GROUP BY vt0.c1, vt0.c2 UNION SELECT ALL vt0.c1, vt0.c2 FROM vt0 WHERE ((((~ (((vt0.c0)IS NOT(vt0.c0))))) ISNULL)) GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(vt1.c0 COLLATE NOCASE) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(vt1.c0 COLLATE NOCASE))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(vt1.c0 COLLATE NOCASE)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(vt1.c0 COLLATE NOCASE) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(vt1.c0 COLLATE NOCASE))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(vt1.c0 COLLATE NOCASE)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c2, vt0.c1 FROM vt0;
SELECT ALL vt0.c2, vt0.c1 FROM vt0 WHERE ((+ ((vt0.c0 IN (vt0.c2, vt0.c2))))) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT ((+ ((vt0.c0 IN (vt0.c2, vt0.c2))))))) UNION ALL SELECT vt0.c2, vt0.c1 FROM vt0 WHERE ((((+ ((vt0.c0 IN (vt0.c2, vt0.c2))))) ISNULL));
SELECT ALL vt0.c2, vt0.c1 FROM vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((vt0.c2 IN ()))LIKE(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((vt0.c2 IN ()))LIKE(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((((vt0.c2 IN ()))LIKE(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (ABS(LTRIM(vt1.c0, vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (ABS(LTRIM(vt1.c0, vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((ABS(LTRIM(vt1.c0, vt1.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING MIN(GROUP_CONCAT(vt0.c1)) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (MIN(GROUP_CONCAT(vt0.c1)))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((MIN(GROUP_CONCAT(vt0.c1))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOTNULL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0) ISNULL)) NOTNULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) ISNULL)) NOTNULL)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (0.40013590039406677) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (0.40013590039406677))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((0.40013590039406677) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt1 WHERE ((((((vt0.c0))>((vt0.c0)))) IS TRUE)) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0, vt1 WHERE ((NOT ((((((vt0.c0))>((vt0.c0)))) IS TRUE)))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0, vt1 WHERE ((((((((vt0.c0))>((vt0.c0)))) IS TRUE)) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((NULL, vt0.c2, vt0.c0)) BETWEEN ((vt0.c2, vt0.c0, vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c2))) COLLATE NOCASE) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((NULL, vt0.c2, vt0.c0)) BETWEEN ((vt0.c2, vt0.c0, vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c2))) COLLATE NOCASE))) UNION ALL SELECT * FROM vt0 WHERE ((((((NULL, vt0.c2, vt0.c0)) BETWEEN ((vt0.c2, vt0.c0, vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c2))) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ('-6187041') UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ('-6187041'))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((('-6187041') ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (CAST((('I^]') BETWEEN (vt0.c1) AND (vt1.c0)) AS BLOB)) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (CAST((('I^]') BETWEEN (vt0.c1) AND (vt1.c0)) AS BLOB)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((CAST((('I^]') BETWEEN (vt0.c1) AND (vt1.c0)) AS BLOB)) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0)OR(MIN(vt1.c0))))OR(COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((vt1.c0)OR(MIN(vt1.c0))))OR(COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c0)OR(MIN(vt1.c0))))OR(COUNT(*)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0)OR(MIN(vt1.c0))))OR(COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((vt1.c0)OR(MIN(vt1.c0))))OR(COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c0)OR(MIN(vt1.c0))))OR(COUNT(*)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((CAST(vt0.c1 AS REAL)) ISNULL);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON ((CAST(vt0.c1 AS REAL)) ISNULL) WHERE (CAST(((vt0.c0)<>(vt0.c2)) AS NUMERIC)) UNION ALL SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((CAST(vt0.c1 AS REAL)) ISNULL) WHERE ((NOT (CAST(((vt0.c0)!=(vt0.c2)) AS NUMERIC)))) UNION ALL SELECT * FROM vt1 FULL OUTER JOIN vt0 ON ((CAST(vt0.c1 AS REAL)) ISNULL) WHERE (((CAST(((vt0.c0)<>(vt0.c2)) AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((CAST(vt0.c1 AS REAL)) ISNULL);
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c1) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0 WHERE (((((((vt0.c1) IS FALSE))AND(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)))AND(((((((((vt0.c0)OR(vt0.c2)))AND(NULL)))AND(vt1.c0)))AND(vt0.c2))))) GROUP BY vt0.c1, vt0.c0, vt0.c2 UNION SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0 WHERE ((NOT (((((((vt0.c1) IS FALSE))AND(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)))AND(((((((((vt0.c0)OR(vt0.c2)))AND(NULL)))AND(vt1.c0)))AND(vt0.c2))))))) GROUP BY vt0.c1, vt0.c0, vt0.c2 UNION SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0 WHERE (((((((((vt0.c1) IS FALSE))AND(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)))AND(((((((((vt0.c0)OR(vt0.c2)))AND(NULL)))AND(vt1.c0)))AND(vt0.c2))))) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ')竷[Tlbf[' UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (')竷[Tlbf[')) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((')竷[Tlbf[') ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ')竷[Tlbf[' UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (')竷[Tlbf[')) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((')竷[Tlbf[') ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((+ (((vt1.c0)IS NOT(vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((+ (((vt1.c0)IS NOT(vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((+ (((vt1.c0)IS NOT(vt1.c0))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN x'' WHEN NULL THEN vt1.c0 END AS REAL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST(CASE vt1.c0  WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN x'' WHEN NULL THEN vt1.c0 END AS REAL)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST(CASE vt1.c0  WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN x'' WHEN NULL THEN vt1.c0 END AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((vt0.c1 COLLATE BINARY))==((vt0.c2 COLLATE NOCASE)))) GROUP BY vt0.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((vt0.c1 COLLATE BINARY))==((vt0.c2 COLLATE NOCASE)))))) GROUP BY vt0.c1, vt0.c0, vt1.c0 UNION SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((((vt0.c1 COLLATE BINARY))==((vt0.c2 COLLATE NOCASE)))) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((load_extension(vt1.c0), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0))!=((vt1.c0)))))!=(((NOT (vt1.c0)), ((x'')/(vt1.c0)), UNLIKELY(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((load_extension(vt1.c0), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0))<>((vt1.c0)))))!=(((NOT (vt1.c0)), ((x'')/(vt1.c0)), UNLIKELY(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((load_extension(vt1.c0), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0))!=((vt1.c0)))))<>(((NOT (vt1.c0)), ((x'')/(vt1.c0)), UNLIKELY(vt1.c0))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)) AS TEXT)) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT (CAST(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)) AS TEXT)))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE (((CAST(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, vt0.c2 FROM vt0;
SELECT ALL vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2;
SELECT vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 WHERE (CASE CAST(vt1.c0 AS REAL)  WHEN ((vt0.c0) IS TRUE) THEN ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt1.c0) IS TRUE) END) GROUP BY vt1.c0, vt0.c0, vt0.c2 UNION SELECT vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 WHERE ((NOT (CASE CAST(vt1.c0 AS REAL)  WHEN ((vt0.c0) IS TRUE) THEN ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt1.c0) IS TRUE) END))) GROUP BY vt1.c0, vt0.c0, vt0.c2 UNION SELECT vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 WHERE (((CASE CAST(vt1.c0 AS REAL)  WHEN ((vt0.c0) IS TRUE) THEN ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt1.c0) IS TRUE) END) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt0.c2;
SELECT ALL vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((vt1.c0 IN ()))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((NOT ((vt1.c0 IN ()))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((NOT ((vt1.c0 IN ())))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((vt1.c0 IN ()))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((NOT ((vt1.c0 IN ()))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((NOT ((vt1.c0 IN ())))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c1, vt1.c0, vt0.c2, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND ('-522874726')))AND(((vt0.c1)<(vt0.c1)))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(NULL)))AND(''))));
SELECT vt0.c1, vt1.c0, vt0.c2, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND ('-522874726')))AND(((vt0.c1)<(vt0.c1)))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(NULL)))AND('')))) WHERE ((((vt0.c2) IS FALSE) IN ())) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt0.c2, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND ('-522874726')))AND(((vt0.c1)<(vt0.c1)))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(NULL)))AND('')))) WHERE ((NOT ((((vt0.c2) IS FALSE) IN ())))) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt0.c2, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND ('-522874726')))AND(((vt0.c1)<(vt0.c1)))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(NULL)))AND('')))) WHERE ((((((vt0.c2) IS FALSE) IN ())) ISNULL));
SELECT vt0.c1, vt1.c0, vt0.c2, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND ('-522874726')))AND(((vt0.c1)<(vt0.c1)))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(NULL)))AND(''))));
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (vt0.c2) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((NOT (vt0.c2))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (((vt0.c2) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2))) IS FALSE) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2))) IS FALSE) WHERE (((vt0.c0) NOTNULL)) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2))) IS FALSE) WHERE ((NOT (((vt0.c0) NOTNULL)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2))) IS FALSE) WHERE (((((vt0.c0) NOTNULL)) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2))) IS FALSE) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((CASE WHEN SUM(vt0.c1) THEN COUNT(TOTAL(COUNT(vt0.c0))) WHEN COUNT(MIN(MIN(COUNT(COUNT(vt0.c2))))) THEN SUM(vt0.c0) WHEN COUNT(*) THEN MAX(vt0.c0) ELSE vt0.c1 END) IS TRUE) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((CASE WHEN SUM(vt0.c1) THEN COUNT(TOTAL(COUNT(vt0.c0))) WHEN COUNT(MIN(MIN(COUNT(COUNT(vt0.c2))))) THEN SUM(vt0.c0) WHEN COUNT(*) THEN MAX(vt0.c0) ELSE vt0.c1 END) IS TRUE))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((CASE WHEN SUM(vt0.c1) THEN COUNT(TOTAL(COUNT(vt0.c0))) WHEN COUNT(MIN(MIN(COUNT(COUNT(vt0.c2))))) THEN SUM(vt0.c0) WHEN COUNT(*) THEN MAX(vt0.c0) ELSE vt0.c1 END) IS TRUE)) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((- (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((- (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((- (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0, vt1 WHERE ((((vt0.c2)) NOT BETWEEN ((0xffffffffe48d8fe9)) AND ((CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c2 END)))) UNION SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0, vt1 WHERE ((NOT ((((vt0.c2)) NOT BETWEEN ((0xffffffffe48d8fe9)) AND ((CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c2 END)))))) UNION SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0, vt1 WHERE ((((((vt0.c2)) NOT BETWEEN ((0xffffffffe48d8fe9)) AND ((CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c2 END)))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0, vt1;
SELECT ALL vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 WHERE ((((vt0.c2, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c2, ((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)), CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CAST(vt0.c1 AS NUMERIC), NULLIF(vt0.c0, vt0.c1), CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)))) GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((vt0.c2, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c2, ((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)), CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CAST(vt0.c1 AS NUMERIC), NULLIF(vt0.c0, vt0.c1), CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)))))) GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0 UNION SELECT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 WHERE ((((((vt0.c2, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c2, ((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)), CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CAST(vt0.c1 AS NUMERIC), NULLIF(vt0.c0, vt0.c1), CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)))) ISNULL)) GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1 HAVING x'' UNION ALL SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1 HAVING (NOT (x'')) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1 HAVING ((x'') ISNULL);
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1 HAVING x'' UNION ALL SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1 HAVING (NOT (x'')) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1 HAVING ((x'') ISNULL);
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c0 END)) AND ((CASE WHEN vt1.c0 THEN vt0.c0 END)))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c0 END)) AND ((CASE WHEN vt1.c0 THEN vt0.c0 END)))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((((((vt1.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c0 END)) AND ((CASE WHEN vt1.c0 THEN vt0.c0 END)))) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT vt0.c1, vt0.c2, vt1.c0 FROM vt1 CROSS JOIN vt0 ON LOWER(vt0.c0 COLLATE NOCASE);
SELECT DISTINCT vt0.c1, vt0.c2, vt1.c0 FROM vt1 CROSS JOIN vt0 ON LOWER(vt0.c0 COLLATE NOCASE) WHERE ((((vt0.c1 COLLATE RTRIM))<>((((vt0.c1) IS FALSE))))) UNION SELECT DISTINCT vt0.c1, vt0.c2, vt1.c0 FROM vt1 CROSS JOIN vt0 ON LOWER(vt0.c0 COLLATE NOCASE) WHERE ((NOT ((((vt0.c1 COLLATE RTRIM))!=((((vt0.c1) IS FALSE))))))) UNION SELECT DISTINCT vt0.c1, vt0.c2, vt1.c0 FROM vt1 CROSS JOIN vt0 ON LOWER(vt0.c0 COLLATE NOCASE) WHERE ((((((vt0.c1 COLLATE RTRIM))!=((((vt0.c1) IS FALSE))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c2, vt1.c0 FROM vt1 CROSS JOIN vt0 ON LOWER(vt0.c0 COLLATE NOCASE);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE 1380811453  WHEN (((vt0.c0, vt0.c0, 1.184025275E9)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c1)) AND ((vt0.c2, vt0.c2, vt0.c2))) THEN ((vt0.c2)|(vt0.c0)) WHEN vt0.c0 THEN CAST(vt0.c2 AS INTEGER) WHEN ((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) WHEN ((vt0.c1) ISNULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)) WHEN (((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c2))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE 1380811453  WHEN (((vt0.c0, vt0.c0, 1.184025275E9)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c1)) AND ((vt0.c2, vt0.c2, vt0.c2))) THEN ((vt0.c2)|(vt0.c0)) WHEN vt0.c0 THEN CAST(vt0.c2 AS INTEGER) WHEN ((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) WHEN ((vt0.c1) ISNULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)) WHEN (((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c2))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE 1380811453  WHEN (((vt0.c0, vt0.c0, 1.184025275E9)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c1)) AND ((vt0.c2, vt0.c2, vt0.c2))) THEN ((vt0.c2)|(vt0.c0)) WHEN vt0.c0 THEN CAST(vt0.c2 AS INTEGER) WHEN ((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) WHEN ((vt0.c1) ISNULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)) WHEN (((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c2))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING CAST(MIN(NULL) AS NUMERIC) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (CAST(MIN(NULL) AS NUMERIC))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((CAST(MIN(NULL) AS NUMERIC)) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING CAST(MIN(NULL) AS NUMERIC) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (CAST(MIN(NULL) AS NUMERIC))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((CAST(MIN(NULL) AS NUMERIC)) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN ('K77O') AND ((((vt0.c0))<=((vt0.c1)))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN ('K77O') AND ((((vt0.c0))<=((vt0.c1)))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN ('K77O') AND ((((vt0.c0))<=((vt0.c1)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0))) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)AND(vt1.c0))) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0))) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)) COLLATE NOCASE) GROUP BY vt0.c2, vt0.c1, vt0.c0 UNION SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)) COLLATE NOCASE))) GROUP BY vt0.c2, vt0.c1, vt0.c0 UNION SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(CAST(NULL AS NUMERIC)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(CAST(NULL AS NUMERIC)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(CAST(NULL AS NUMERIC))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(CAST(NULL AS NUMERIC)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(CAST(NULL AS NUMERIC)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(CAST(NULL AS NUMERIC))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT SUM((((vt1.c0) IS TRUE) IN ())) FROM vt1, vt0 ORDER BY ((((vt0.c0)&(vt1.c0))) NOTNULL), json_array_length(vt0.c0 COLLATE RTRIM, NULL), ((vt1.c0 IN ()) IN ());
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (((((+ (vt0.c1))))<((((((vt0.c2)OR(vt1.c0)))OR(vt0.c1)))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((((+ (vt0.c1))))<((((((vt0.c2)OR(vt1.c0)))OR(vt0.c1)))))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((((((+ (vt0.c1))))<((((((vt0.c2)OR(vt1.c0)))OR(vt0.c1)))))) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c2)AND(vt0.c2)))AND(vt0.c0)) COLLATE RTRIM COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c2)AND(vt0.c2)))AND(vt0.c0)) COLLATE RTRIM COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c2)AND(vt0.c2)))AND(vt0.c0)) COLLATE RTRIM COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt0.c0, vt0.c0, vt0.c1))<=((vt0.c2, vt0.c1, vt0.c0)))))!=(((vt0.c1 IN ())))) GROUP BY vt0.c2, vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt0.c0, vt0.c0, vt0.c1))<=((vt0.c2, vt0.c1, vt0.c0)))))!=(((vt0.c1 IN ())))) WHERE (((('281054884')>(vt0.c0)) IN ())) GROUP BY vt0.c2, vt0.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt0.c2, vt0.c1, vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt0.c0, vt0.c0, vt0.c1))<=((vt0.c2, vt0.c1, vt0.c0)))))!=(((vt0.c1 IN ())))) WHERE ((NOT (((('281054884')>(vt0.c0)) IN ())))) GROUP BY vt0.c2, vt0.c1, vt0.c0, vt1.c0 UNION SELECT vt0.c2, vt0.c1, vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt0.c0, vt0.c0, vt0.c1))<=((vt0.c2, vt0.c1, vt0.c0)))))<>(((vt0.c1 IN ())))) WHERE (((((('281054884')>(vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c2, vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt0.c0, vt0.c0, vt0.c1))<=((vt0.c2, vt0.c1, vt0.c0)))))!=(((vt0.c1 IN ())))) GROUP BY vt0.c2, vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (0.47246180958748085) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (0.47246180958748085))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((0.47246180958748085) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT vt0.c2, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((PRINTF(vt0.c1))IS(((x'')<(vt1.c0))));
SELECT DISTINCT vt0.c2, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((PRINTF(vt0.c1))IS(((x'')<(vt1.c0)))) WHERE (LOWER((NOT (vt0.c0)))) UNION SELECT DISTINCT vt0.c2, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((PRINTF(vt0.c1))IS(((x'')<(vt1.c0)))) WHERE ((NOT (LOWER((NOT (vt0.c0)))))) UNION SELECT DISTINCT vt0.c2, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((PRINTF(vt0.c1))IS(((x'')<(vt1.c0)))) WHERE (((LOWER((NOT (vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((PRINTF(vt0.c1))IS(((x'')<(vt1.c0))));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE ((((MIN(vt1.c0))AND(SUM(AVG(GROUP_CONCAT(COUNT(vt1.c0)))))))AND(vt1.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE TOTAL(vt1.c0) END THEN CAST(AVG(COUNT(*)) AS REAL) END UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE ((((MIN(vt1.c0))AND(SUM(AVG(GROUP_CONCAT(COUNT(vt1.c0)))))))AND(vt1.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE TOTAL(vt1.c0) END THEN CAST(AVG(COUNT(*)) AS REAL) END)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE ((((MIN(vt1.c0))AND(SUM(AVG(GROUP_CONCAT(COUNT(vt1.c0)))))))AND(vt1.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE TOTAL(vt1.c0) END THEN CAST(AVG(COUNT(*)) AS REAL) END) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CAST((+ (vt0.c2)) AS NUMERIC)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST((+ (vt0.c2)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST((+ (vt0.c2)) AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((vt0.c0)<>(vt0.c0)))AND(((vt0.c1)GLOB(vt1.c0)))))OR(((vt0.c2) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((((((vt0.c0)<>(vt0.c0)))AND(((vt0.c1)GLOB(vt1.c0)))))OR(((vt0.c2) NOT NULL)))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((((vt0.c0)<>(vt0.c0)))AND(((vt0.c1)GLOB(vt1.c0)))))OR(((vt0.c2) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt1.c0, vt0.c0;
SELECT ALL vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((vt0.c2) BETWEEN (vt0.c0) AND (vt1.c0)) IN ())) GROUP BY vt0.c2, vt1.c0, vt0.c0 UNION SELECT vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((vt0.c2) BETWEEN (vt0.c0) AND (vt1.c0)) IN ())))) GROUP BY vt0.c2, vt1.c0, vt0.c0 UNION SELECT ALL vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((((vt0.c2) BETWEEN (vt0.c0) AND (vt1.c0)) IN ())) ISNULL)) GROUP BY vt0.c2, vt1.c0, vt0.c0;
SELECT vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt1.c0, vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((AVG(AVG(vt1.c0))) BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((AVG(AVG(vt1.c0))) BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((AVG(AVG(vt1.c0))) BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL)) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c1)OR(vt1.c0)))AND(vt0.c2)))) AND (((((vt0.c1, vt0.c2, vt1.c0))<((0.6834220809535749, vt0.c1, vt0.c2))))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((((vt0.c1)OR(vt1.c0)))AND(vt0.c2)))) AND (((((vt0.c1, vt0.c2, vt1.c0))<((0.6834220809535749, vt0.c1, vt0.c2))))))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((((((vt0.c0)) BETWEEN ((((((vt0.c1)OR(vt1.c0)))AND(vt0.c2)))) AND (((((vt0.c1, vt0.c2, vt1.c0))<((0.6834220809535749, vt0.c1, vt0.c2))))))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END)%(((vt1.c0)AND(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt1.c0 END)%(((vt1.c0)AND(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 END)%(((vt1.c0)AND(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(COUNT(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(COUNT(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(COUNT(vt1.c0))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>=(highlight(vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>=(highlight(vt1.c0, vt1.c0, vt1.c0, vt1.c0)))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>=(highlight(vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c0))!=((vt0.c2))), x'', CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 END))<=((((vt0.c0) ISNULL), (((0.7583107923568027, vt0.c1, '-500076306'))>((vt0.c0, vt0.c2, x''))), vt0.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0))!=((vt0.c2))), x'', CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 END))<=((((vt0.c0) ISNULL), (((0.7583107923568027, vt0.c1, '-500076306'))>((vt0.c0, vt0.c2, x''))), vt0.c0 COLLATE NOCASE)))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((vt0.c0))!=((vt0.c2))), x'', CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 END))<=((((vt0.c0) ISNULL), (((0.7583107923568027, vt0.c1, '-500076306'))>((vt0.c0, vt0.c2, x''))), vt0.c0 COLLATE NOCASE)))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN (((x'')) BETWEEN ((NULL)) AND ((vt1.c0))) ELSE (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((0.4321562167200197, vt1.c0, vt1.c0))) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN vt1.c0 COLLATE BINARY THEN (((x'')) BETWEEN ((NULL)) AND ((vt1.c0))) ELSE (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((0.4321562167200197, vt1.c0, vt1.c0))) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE WHEN vt1.c0 COLLATE BINARY THEN (((x'')) BETWEEN ((NULL)) AND ((vt1.c0))) ELSE (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((0.4321562167200197, vt1.c0, vt1.c0))) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2, vt0.c1 HAVING SUM((NOT (vt0.c0))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2, vt0.c1 HAVING (NOT (SUM((NOT (vt0.c0))))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2, vt0.c1 HAVING ((SUM((NOT (vt0.c0)))) ISNULL);
SELECT ALL vt0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2, vt0.c1 HAVING SUM((NOT (vt0.c0))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2, vt0.c1 HAVING (NOT (SUM((NOT (vt0.c0))))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2, vt0.c1 HAVING ((SUM((NOT (vt0.c0)))) ISNULL);
SELECT ALL vt0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2, vt0.c1;
SELECT * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE ((- (((vt0.c1)AND(vt0.c0))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT ((- (((vt0.c1)AND(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((((- (((vt0.c1)AND(vt0.c0))))) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT vt0.c2, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0;
SELECT DISTINCT vt0.c2, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE (((((vt1.c0)/(vt0.c1)))/(vt0.c2))) UNION SELECT DISTINCT vt0.c2, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT (((((vt1.c0)/(vt0.c1)))/(vt0.c2))))) UNION SELECT DISTINCT vt0.c2, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE (((((((vt1.c0)/(vt0.c1)))/(vt0.c2))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0;
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((((vt0.c1)) BETWEEN ((vt0.c1)) AND (('h'))))) AND ((vt0.c2)))) GROUP BY vt1.c0, vt0.c0, vt0.c1 UNION SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN (((((vt0.c1)) BETWEEN ((vt0.c1)) AND (('h'))))) AND ((vt0.c2)))))) GROUP BY vt1.c0, vt0.c0, vt0.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1 WHERE ((((((vt1.c0)) NOT BETWEEN (((((vt0.c1)) BETWEEN ((vt0.c1)) AND (('h'))))) AND ((vt0.c2)))) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING ((((COUNT(*))AND(SUM(vt0.c2))))OR((+ (SUM(MAX(vt0.c1)))))) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING (NOT (((((COUNT(*))AND(SUM(vt0.c2))))OR((+ (SUM(MAX(vt0.c1)))))))) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING ((((((COUNT(*))AND(SUM(vt0.c2))))OR((+ (SUM(MAX(vt0.c1))))))) ISNULL);
SELECT vt0.c2, vt1.c0 FROM vt1, vt0;
SELECT vt0.c2, vt1.c0 FROM vt1, vt0 WHERE ((((vt0.c0))<>((((('-612778087')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))) UNION ALL SELECT ALL vt0.c2, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((vt0.c0))<>((((('-612778087')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))))) UNION ALL SELECT vt0.c2, vt1.c0 FROM vt1, vt0 WHERE ((((((vt0.c0))<>((((('-612778087')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))) ISNULL));
SELECT vt0.c2, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c2 IN ())) ISNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c2 IN ())) ISNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c2 IN ())) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0, vt0.c2, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2, vt0.c0;
SELECT ALL vt1.c0, vt0.c2, vt0.c0 FROM vt0, vt1 WHERE ((((vt1.c0 IN ()))IS NOT((('1277758340') BETWEEN (x'') AND ('1082991697'))))) GROUP BY vt1.c0, vt0.c2, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c2, vt0.c0 FROM vt0, vt1 WHERE ((NOT ((((vt1.c0 IN ()))IS NOT((('1277758340') BETWEEN (x'') AND ('1082991697'))))))) GROUP BY vt1.c0, vt0.c2, vt0.c0 UNION SELECT vt1.c0, vt0.c2, vt0.c0 FROM vt0, vt1 WHERE ((((((vt1.c0 IN ()))IS NOT((('1277758340') BETWEEN (x'') AND ('1082991697'))))) ISNULL)) GROUP BY vt1.c0, vt0.c2, vt0.c0;
SELECT ALL vt1.c0, vt0.c2, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING (+ (SUM(COUNT(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING (NOT ((+ (SUM(COUNT(GROUP_CONCAT(vt0.c0))))))) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING (((+ (SUM(COUNT(GROUP_CONCAT(vt0.c0)))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (x'') UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt1, vt0 WHERE ('-21735181') GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt1, vt0 WHERE ((NOT ('-21735181'))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt1, vt0 WHERE ((('-21735181') ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((((~ (vt0.c0)))AND(((vt0.c2) NOT NULL))))OR(ABS(vt0.c1)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((((~ (vt0.c0)))AND(((vt0.c2) NOT NULL))))OR(ABS(vt0.c1)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((((~ (vt0.c0)))AND(((vt0.c2) NOT NULL))))OR(ABS(vt0.c1)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE ((((((- (vt0.c1)))OR(CAST(vt0.c0 AS REAL))))OR(vt0.c2 COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((((- (vt0.c1)))OR(CAST(vt0.c0 AS REAL))))OR(vt0.c2 COLLATE RTRIM))))) UNION SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE ((((((((- (vt0.c1)))OR(CAST(vt0.c0 AS REAL))))OR(vt0.c2 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((~ (vt1.c0)) IN ())) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((~ (vt1.c0)) IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((~ (vt1.c0)) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING CASE WHEN (TOTAL(MIN(AVG(vt1.c0))) IN ()) THEN CAST(vt0.c2 AS BLOB) END UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING (NOT (CASE WHEN (TOTAL(MIN(AVG(vt1.c0))) IN ()) THEN CAST(vt0.c2 AS BLOB) END)) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING ((CASE WHEN (TOTAL(MIN(AVG(vt1.c0))) IN ()) THEN CAST(vt0.c2 AS BLOB) END) ISNULL);
SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING CASE WHEN (TOTAL(MIN(AVG(vt1.c0))) IN ()) THEN CAST(vt0.c2 AS BLOB) END UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING (NOT (CASE WHEN (TOTAL(MIN(AVG(vt1.c0))) IN ()) THEN CAST(vt0.c2 AS BLOB) END)) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING ((CASE WHEN (TOTAL(MIN(AVG(vt1.c0))) IN ()) THEN CAST(vt0.c2 AS BLOB) END) ISNULL);
SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c2 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c2)&(vt0.c1))) BETWEEN (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2))) AND (CAST(vt0.c0 AS NUMERIC)));
SELECT ALL vt0.c2 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c2)&(vt0.c1))) BETWEEN (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2))) AND (CAST(vt0.c0 AS NUMERIC))) WHERE ((((NULL IN ())) NOT NULL)) UNION ALL SELECT ALL vt0.c2 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c2)&(vt0.c1))) BETWEEN (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2))) AND (CAST(vt0.c0 AS NUMERIC))) WHERE ((NOT ((((NULL IN ())) NOT NULL)))) UNION ALL SELECT vt0.c2 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c2)&(vt0.c1))) BETWEEN (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2))) AND (CAST(vt0.c0 AS NUMERIC))) WHERE ((((((NULL IN ())) NOT NULL)) ISNULL));
SELECT ALL vt0.c2 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c2)&(vt0.c1))) BETWEEN (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2))) AND (CAST(vt0.c0 AS NUMERIC)));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((CHANGES())AND((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))))AND(vt1.c0 COLLATE BINARY));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((CHANGES())AND((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))))AND(vt1.c0 COLLATE BINARY)) WHERE (((((vt0.c1)AND(vt0.c2)))AND(vt0.c1)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((CHANGES())AND((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))))AND(vt1.c0 COLLATE BINARY)) WHERE ((NOT (((((vt0.c1)AND(vt0.c2)))AND(vt0.c1)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((CHANGES())AND((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))))AND(vt1.c0 COLLATE BINARY)) WHERE (((((((vt0.c1)AND(vt0.c2)))AND(vt0.c1)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((CHANGES())AND((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))))AND(vt1.c0 COLLATE BINARY));
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (CAST(vt0.c2 AS NUMERIC)) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c2 AS NUMERIC)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST(vt0.c2 AS NUMERIC)) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING vt0.c2 UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (NOT (vt0.c2)) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING ((vt0.c2) ISNULL);
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING vt0.c2 UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (NOT (vt0.c2)) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING ((vt0.c2) ISNULL);
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((vt0.c2) ISNULL)) BETWEEN (((vt1.c0)<=(vt0.c2))) AND (((vt1.c0) BETWEEN (vt0.c2) AND (vt1.c0))));
SELECT * FROM vt1 INNER JOIN vt0 ON ((((vt0.c2) ISNULL)) BETWEEN (((vt1.c0)<=(vt0.c2))) AND (((vt1.c0) BETWEEN (vt0.c2) AND (vt1.c0)))) WHERE (((vt0.c2)==(CAST(vt0.c1 AS BLOB)))) UNION ALL SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((vt0.c2) ISNULL)) BETWEEN (((vt1.c0)<=(vt0.c2))) AND (((vt1.c0) BETWEEN (vt0.c2) AND (vt1.c0)))) WHERE ((NOT (((vt0.c2)=(CAST(vt0.c1 AS BLOB)))))) UNION ALL SELECT * FROM vt1 INNER JOIN vt0 ON ((((vt0.c2) ISNULL)) BETWEEN (((vt1.c0)<=(vt0.c2))) AND (((vt1.c0) BETWEEN (vt0.c2) AND (vt1.c0)))) WHERE (((((vt0.c2)==(CAST(vt0.c1 AS BLOB)))) ISNULL));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((vt0.c2) ISNULL)) BETWEEN (((vt1.c0)<=(vt0.c2))) AND (((vt1.c0) BETWEEN (vt0.c2) AND (vt1.c0))));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c2) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c2))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c2) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN (NOT (vt0.c1)) THEN (vt0.c0 IN ()) WHEN (vt0.c0 IN ()) THEN vt0.c2 WHEN ((0.4984590498226178)>(vt0.c2)) THEN (- (vt1.c0)) END GROUP BY vt0.c0, vt1.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN (NOT (vt0.c1)) THEN (vt0.c0 IN ()) WHEN (vt0.c0 IN ()) THEN vt0.c2 WHEN ((0.4984590498226178)>(vt0.c2)) THEN (- (vt1.c0)) END WHERE (((((((vt0.c1)>(vt0.c1)))OR(((((((((vt0.c1)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c2)))))OR(((NULL)-(NULL))))) GROUP BY vt0.c0, vt1.c0, vt0.c2, vt0.c1 UNION SELECT vt0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN (NOT (vt0.c1)) THEN (vt0.c0 IN ()) WHEN (vt0.c0 IN ()) THEN vt0.c2 WHEN ((0.4984590498226178)>(vt0.c2)) THEN (- (vt1.c0)) END WHERE ((NOT (((((((vt0.c1)>(vt0.c1)))OR(((((((((vt0.c1)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c2)))))OR(((NULL)-(NULL))))))) GROUP BY vt0.c0, vt1.c0, vt0.c2, vt0.c1 UNION SELECT vt0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN (NOT (vt0.c1)) THEN (vt0.c0 IN ()) WHEN (vt0.c0 IN ()) THEN vt0.c2 WHEN ((0.4984590498226178)>(vt0.c2)) THEN (- (vt1.c0)) END WHERE (((((((((vt0.c1)>(vt0.c1)))OR(((((((((vt0.c1)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c2)))))OR(((NULL)-(NULL))))) ISNULL)) GROUP BY vt0.c0, vt1.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN (NOT (vt0.c1)) THEN (vt0.c0 IN ()) WHEN (vt0.c0 IN ()) THEN vt0.c2 WHEN ((0.4984590498226178)>(vt0.c2)) THEN (- (vt1.c0)) END GROUP BY vt0.c0, vt1.c0, vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING CASE WHEN TOTAL(vt0.c1) THEN COUNT(vt0.c0) END UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (NOT (CASE WHEN TOTAL(vt0.c1) THEN COUNT(vt0.c0) END)) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING ((CASE WHEN TOTAL(vt0.c1) THEN COUNT(vt0.c0) END) ISNULL);
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING CASE WHEN TOTAL(vt0.c1) THEN COUNT(vt0.c0) END UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (NOT (CASE WHEN TOTAL(vt0.c1) THEN COUNT(vt0.c0) END)) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING ((CASE WHEN TOTAL(vt0.c1) THEN COUNT(vt0.c0) END) ISNULL);
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT * FROM vt0 NATURAL JOIN vt1;
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (CAST(((vt1.c0)AND(vt0.c2)) AS BLOB)) UNION ALL SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE ((NOT (CAST(((vt1.c0)AND(vt0.c2)) AS BLOB)))) UNION ALL SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((CAST(((vt1.c0)AND(vt0.c2)) AS BLOB)) ISNULL));
SELECT * FROM vt0 NATURAL JOIN vt1;
SELECT DISTINCT vt0.c2, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c2, vt1.c0 FROM vt0 NOT INDEXED, vt1 WHERE ((+ (vt1.c0 COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c2, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((+ (vt1.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT vt0.c2, vt1.c0 FROM vt0, vt1 WHERE ((((+ (vt1.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt0.c2, vt1.c0 FROM vt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX((COUNT(*) IN ())) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX((COUNT(*) IN ())))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX((COUNT(*) IN ()))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX((COUNT(*) IN ())) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX((COUNT(*) IN ())))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX((COUNT(*) IN ()))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT TOTAL(TRIM(DISTINCT ((vt0.c2) IS TRUE))) FROM vt0, vt1 ORDER BY UNLIKELY(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0))) ASC  NULLS LAST;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (vt0.c2 COLLATE NOCASE));
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (vt0.c2 COLLATE NOCASE)) WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)))IS NOT(vt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (vt0.c2 COLLATE NOCASE)) WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)))IS NOT(vt0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (vt0.c2 COLLATE NOCASE)) WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)))IS NOT(vt0.c0 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (vt0.c2 COLLATE NOCASE));
SELECT DISTINCT vt0.c1, vt0.c0, vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE (((vt0.c1) NOT BETWEEN ((((vt0.c2, vt0.c2, vt0.c2))>=((vt0.c1, x'', vt0.c2)))) AND (vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT (((vt0.c1) NOT BETWEEN ((((vt0.c2, vt0.c2, vt0.c2))>=((vt0.c1, x'', vt0.c2)))) AND (vt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN ((((vt0.c2, vt0.c2, vt0.c2))>=((vt0.c1, x'', vt0.c2)))) AND (vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, vt0.c2 FROM vt0;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 WHERE ((((('1988692137')OR(vt0.c1))) NOT BETWEEN (UNLIKELY(DISTINCT vt0.c2)) AND ((vt0.c1 IN ())))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0 WHERE ((NOT ((((('1988692137')OR(vt0.c1))) NOT BETWEEN (UNLIKELY(DISTINCT vt0.c2)) AND ((vt0.c1 IN ())))))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0 WHERE ((((((('1988692137')OR(vt0.c1))) NOT BETWEEN (UNLIKELY(DISTINCT vt0.c2)) AND ((vt0.c1 IN ())))) ISNULL)) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(MIN(AVG(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(MIN(AVG(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(MIN(AVG(vt1.c0)))) ISNULL);
SELECT ALL * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE ((- (vt0.c1)) COLLATE BINARY) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT ((- (vt0.c1)) COLLATE BINARY))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((((- (vt0.c1)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt0.c0 COLLATE BINARY, (vt0.c2 IN (vt1.c0)), ((vt0.c2)/(vt1.c0))))<=((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN -1221713664 THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c1 AS BLOB), ((vt0.c1)*(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((((vt0.c0 COLLATE BINARY, (vt0.c2 IN (vt1.c0)), ((vt0.c2)/(vt1.c0))))<=((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN -1221713664 THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c1 AS BLOB), ((vt0.c1)*(vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((vt0.c0 COLLATE BINARY, (vt0.c2 IN (vt1.c0)), ((vt0.c2)/(vt1.c0))))<=((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN -1221713664 THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c1 AS BLOB), ((vt0.c1)*(vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((LIKE(vt1.c0, vt1.c0, '') IN (((vt1.c0)=(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((LIKE(vt1.c0, vt1.c0, '') IN (((vt1.c0)=(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((LIKE(vt1.c0, vt1.c0, '') IN (((vt1.c0)=(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING vt0.c2 UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (vt0.c2)) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((vt0.c2) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING vt0.c2 UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (vt0.c2)) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((vt0.c2) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (0.21466221724987344) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (0.21466221724987344))) UNION ALL SELECT * FROM vt0 WHERE (((0.21466221724987344) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((((vt0.c2, vt0.c0, vt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB), CAST(vt0.c1 AS TEXT), ((vt0.c0) IS FALSE))) AND ((((vt0.c1)-(vt1.c0)), vt0.c0, CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END)))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((vt0.c2, vt0.c0, vt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB), CAST(vt0.c1 AS TEXT), ((vt0.c0) IS FALSE))) AND ((((vt0.c1)-(vt1.c0)), vt0.c0, CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END)))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((((((vt0.c2, vt0.c0, vt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB), CAST(vt0.c1 AS TEXT), ((vt0.c0) IS FALSE))) AND ((((vt0.c1)-(vt1.c0)), vt0.c0, CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((IFNULL(vt1.c0, vt1.c0) IN (((vt1.c0) IS TRUE)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((IFNULL(vt1.c0, vt1.c0) IN (((vt1.c0) IS TRUE)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((IFNULL(vt1.c0, vt1.c0) IN (((vt1.c0) IS TRUE)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2 HAVING MIN(SUM(COUNT(MIN(vt0.c2)))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2 HAVING (NOT (MIN(SUM(COUNT(MIN(vt0.c2)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2 HAVING ((MIN(SUM(COUNT(MIN(vt0.c2))))) ISNULL);
SELECT ALL vt0.c1 FROM vt0, vt1;
SELECT vt0.c1 FROM vt0, vt1 WHERE ((((vt0.c0)>=(vt0.c2)) IN ())) UNION ALL SELECT ALL vt0.c1 FROM vt0, vt1 WHERE ((NOT ((((vt0.c0)>=(vt0.c2)) IN ())))) UNION ALL SELECT ALL vt0.c1 FROM vt0, vt1 WHERE ((((((vt0.c0)>=(vt0.c2)) IN ())) ISNULL));
SELECT ALL vt0.c1 FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((vt0.c2 IN (((vt0.c0) NOT BETWEEN (vt0.c2) AND (NULL)), TOTAL_CHANGES()))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((vt0.c2 IN (((vt0.c0) NOT BETWEEN (vt0.c2) AND (NULL)), TOTAL_CHANGES()))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt0.c2 IN (((vt0.c0) NOT BETWEEN (vt0.c2) AND (NULL)), TOTAL_CHANGES()))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))>=(vt0.c0 COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))>=(vt0.c0 COLLATE NOCASE))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))>=(vt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(NULL) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(NULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(NULL)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(NULL) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(NULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(NULL)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c2, vt0.c1 FROM vt0;
SELECT vt0.c2, vt0.c1 FROM vt0 WHERE (json_array(((vt0.c0)<>(vt0.c1)), vt0.c2)) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (json_array(((vt0.c0)<>(vt0.c1)), vt0.c2)))) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM vt0 WHERE (((json_array(((vt0.c0)!=(vt0.c1)), vt0.c2)) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((((CAST(vt1.c0 AS TEXT))AND(((vt0.c2) BETWEEN (vt1.c0) AND (0.8595091355726792)))))AND((~ (vt0.c0))));
SELECT DISTINCT vt1.c0, vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((((CAST(vt1.c0 AS TEXT))AND(((vt0.c2) BETWEEN (vt1.c0) AND (0.8595091355726792)))))AND((~ (vt0.c0)))) WHERE (((vt1.c0 COLLATE RTRIM)LIKE(CAST(vt0.c2 AS INTEGER)))) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((((CAST(vt1.c0 AS TEXT))AND(((vt0.c2) BETWEEN (vt1.c0) AND (0.8595091355726792)))))AND((~ (vt0.c0)))) WHERE ((NOT (((vt1.c0 COLLATE RTRIM)LIKE(CAST(vt0.c2 AS INTEGER)))))) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((((CAST(vt1.c0 AS TEXT))AND(((vt0.c2) BETWEEN (vt1.c0) AND (0.8595091355726792)))))AND((~ (vt0.c0)))) WHERE (((((vt1.c0 COLLATE RTRIM)LIKE(CAST(vt0.c2 AS INTEGER)))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((((CAST(vt1.c0 AS TEXT))AND(((vt0.c2) BETWEEN (vt1.c0) AND (0.8595091355726792)))))AND((~ (vt0.c0))));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c2, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c1, vt1.c0;
SELECT ALL vt0.c2, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c1, vt1.c0 HAVING AVG(GROUP_CONCAT(COUNT(COUNT(*)))) UNION ALL SELECT vt0.c2, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c1, vt1.c0 HAVING (NOT (AVG(GROUP_CONCAT(COUNT(COUNT(*)))))) UNION ALL SELECT ALL vt0.c2, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c1, vt1.c0 HAVING ((AVG(GROUP_CONCAT(COUNT(COUNT(*))))) ISNULL);
SELECT ALL TOTAL('') FROM vt0;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((- ((vt1.c0 IN ())))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((- ((vt1.c0 IN ())))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((- ((vt1.c0 IN ())))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (CAST(((vt0.c0)&(vt0.c2)) AS BLOB)) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (CAST(((vt0.c0)&(vt0.c2)) AS BLOB)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((CAST(((vt0.c0)&(vt0.c2)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c0, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c0, vt0.c2 UNION SELECT vt0.c0, vt0.c2 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL MAX(CHANGES()) FROM vt0, vt1 ORDER BY ((CASE WHEN vt0.c2 THEN NULL ELSE vt0.c1 END) BETWEEN (vt0.c1 COLLATE RTRIM) AND (((vt0.c2)>(vt0.c0))));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (-595038870) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (-595038870))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((-595038870) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((~ ((~ ('-2056503080'))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((~ ((~ ('-2056503080'))))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((~ ((~ ('-2056503080'))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE (((((((((((((vt0.c2)AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c0)))AND(0.050888503496898)))AND(vt0.c0)) COLLATE BINARY) GROUP BY vt0.c1, vt0.c0, vt1.c0 UNION SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE ((NOT (((((((((((((vt0.c2)AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c0)))AND(0.050888503496898)))AND(vt0.c0)) COLLATE BINARY))) GROUP BY vt0.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE (((((((((((((((vt0.c2)AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c0)))AND(0.050888503496898)))AND(vt0.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1, vt0.c2 HAVING GROUP_CONCAT(COUNT(vt0.c1)) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1, vt0.c2 HAVING (NOT (GROUP_CONCAT(COUNT(vt0.c1)))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1, vt0.c2 HAVING ((GROUP_CONCAT(COUNT(vt0.c1))) ISNULL);
SELECT vt0.c2 FROM vt1, vt0;
SELECT vt0.c2 FROM vt1, vt0 WHERE (LAST_INSERT_ROWID()) UNION ALL SELECT vt0.c2 FROM vt1, vt0 WHERE ((NOT (LAST_INSERT_ROWID()))) UNION ALL SELECT vt0.c2 FROM vt1, vt0 WHERE (((LAST_INSERT_ROWID()) ISNULL));
SELECT vt0.c2 FROM vt1, vt0;
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (LENGTH(((vt0.c0)IS(vt0.c1)))) UNION SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (LENGTH(((vt0.c0)IS(vt0.c1)))))) UNION SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((LENGTH(((vt0.c0)IS(vt0.c1)))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0 WHERE ((((((((((~ (vt0.c0)))OR(((vt0.c2)-('7*3t')))))AND((((x'ab55'))<=((x''))))))OR((((0.36433521431452953, vt0.c2, vt0.c2, vt0.c0, vt0.c1))<((vt0.c2, vt0.c2, vt0.c1, vt0.c2, x''))))))AND((vt0.c1 IN ())))) GROUP BY vt0.c2, vt0.c0 UNION SELECT vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT ((((((((((~ (vt0.c0)))OR(((vt0.c2)-('7*3t')))))AND((((x'ab55'))<=((x''))))))OR((((0.36433521431452953, vt0.c2, vt0.c2, vt0.c0, vt0.c1))<((vt0.c2, vt0.c2, vt0.c1, vt0.c2, x''))))))AND((vt0.c1 IN ())))))) GROUP BY vt0.c2, vt0.c0 UNION SELECT vt0.c2, vt0.c0 FROM vt0 WHERE ((((((((((((~ (vt0.c0)))OR(((vt0.c2)-('7*3t')))))AND((((x'ab55'))<=((x''))))))OR((((0.36433521431452953, vt0.c2, vt0.c2, vt0.c0, vt0.c1))<((vt0.c2, vt0.c2, vt0.c1, vt0.c2, x''))))))AND((vt0.c1 IN ())))) ISNULL)) GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM((NOT (MAX(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM((NOT (MAX(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM((NOT (MAX(vt1.c0))))) ISNULL);
SELECT ALL vt0.c2 FROM vt1, vt0;
SELECT vt0.c2 FROM vt1, vt0 WHERE ((NOT (((vt1.c0)IS NOT(vt0.c2))))) UNION ALL SELECT ALL vt0.c2 FROM vt1, vt0 WHERE ((NOT ((NOT (((vt1.c0)IS NOT(vt0.c2))))))) UNION ALL SELECT ALL vt0.c2 FROM vt1, vt0 WHERE ((((NOT (((vt1.c0)IS NOT(vt0.c2))))) ISNULL));
SELECT ALL vt0.c2 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1 WHERE (STRFTIME(CAST(vt0.c2 AS BLOB), ((vt0.c0)<<(vt0.c1)), ((vt0.c2) NOT NULL))) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1 WHERE ((NOT (STRFTIME(CAST(vt0.c2 AS BLOB), ((vt0.c0)<<(vt0.c1)), ((vt0.c2) NOT NULL))))) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1 WHERE (((STRFTIME(CAST(vt0.c2 AS BLOB), ((vt0.c0)<<(vt0.c1)), ((vt0.c2) NOT NULL))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1;
SELECT vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2;
SELECT ALL vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 WHERE (NULLIF(CASE vt0.c0  WHEN x'ff25' THEN vt0.c0 END, (('	F?q! qy')*(vt0.c1)))) GROUP BY vt1.c0, vt0.c0, vt0.c2 UNION SELECT ALL vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 WHERE ((NOT (NULLIF(CASE vt0.c0  WHEN x'ff25' THEN vt0.c0 END, (('	F?q! qy')*(vt0.c1)))))) GROUP BY vt1.c0, vt0.c0, vt0.c2 UNION SELECT ALL vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 WHERE (((NULLIF(CASE vt0.c0  WHEN x'ff25' THEN vt0.c0 END, (('	F?q! qy')*(vt0.c1)))) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt0.c2;
SELECT vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE WHEN GROUP_CONCAT(TOTAL(COUNT(COUNT(*)))) THEN SUM(SUM(COUNT(AVG(COUNT(vt1.c0))))) ELSE COUNT(*) END UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE WHEN GROUP_CONCAT(TOTAL(COUNT(COUNT(*)))) THEN SUM(SUM(COUNT(AVG(COUNT(vt1.c0))))) ELSE COUNT(*) END)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE WHEN GROUP_CONCAT(TOTAL(COUNT(COUNT(*)))) THEN SUM(SUM(COUNT(AVG(COUNT(vt1.c0))))) ELSE COUNT(*) END) ISNULL);
SELECT vt0.c1, vt0.c2 FROM vt0;
SELECT vt0.c1, vt0.c2 FROM vt0 WHERE (CASE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c2)))AND(vt0.c1))  WHEN vt0.c2 THEN vt0.c1 COLLATE RTRIM WHEN vt0.c2 THEN TRIM(DISTINCT vt0.c1, vt0.c0) WHEN NULL THEN RTRIM(vt0.c0) END) UNION ALL SELECT vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (CASE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c2)))AND(vt0.c1))  WHEN vt0.c2 THEN vt0.c1 COLLATE RTRIM WHEN vt0.c2 THEN TRIM(DISTINCT vt0.c1, vt0.c0) WHEN NULL THEN RTRIM(vt0.c0) END))) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 WHERE (((CASE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c2)))AND(vt0.c1))  WHEN vt0.c2 THEN vt0.c1 COLLATE RTRIM WHEN vt0.c2 THEN TRIM(DISTINCT vt0.c1, vt0.c0) WHEN NULL THEN RTRIM(vt0.c0) END) ISNULL));
SELECT vt0.c1, vt0.c2 FROM vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((vt0.c0 COLLATE NOCASE IN ())) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((vt0.c0 COLLATE NOCASE IN ())))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt0.c0 COLLATE NOCASE IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt0.c2 FROM vt0, vt1 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0, vt1 NOT INDEXED WHERE ((((vt0.c1)) NOT BETWEEN ((x'')) AND ((vt0.c0))) COLLATE NOCASE) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0, vt1 WHERE ((NOT ((((vt0.c1)) NOT BETWEEN ((x'')) AND ((vt0.c0))) COLLATE NOCASE))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0, vt1 WHERE ((((((vt0.c1)) NOT BETWEEN ((x'')) AND ((vt0.c0))) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0, vt1 GROUP BY vt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((MIN(vt1.c0)))<((AVG(COUNT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((MIN(vt1.c0)))<((AVG(COUNT(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((MIN(vt1.c0)))<((AVG(COUNT(vt1.c0)))))) ISNULL);
SELECT ALL vt0.c2, vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT vt0.c2, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (vt0.c0) UNION ALL SELECT vt0.c2, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c2, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c2, vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c2 FROM vt0 WHERE (0x3ee758c1 COLLATE NOCASE) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE ((NOT (0X3ee758c1 COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE (((0x3ee758c1 COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c2 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c2 IN ()))AND(vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c2 IN ()))AND(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c2 IN ()))AND(vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1 HAVING MAX(CASE 1485048253  WHEN AVG(vt0.c1) THEN vt0.c1 END) UNION ALL SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1 HAVING (NOT (MAX(CASE 1485048253  WHEN AVG(vt0.c1) THEN vt0.c1 END))) UNION ALL SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1 HAVING ((MAX(CASE 1485048253  WHEN AVG(vt0.c1) THEN vt0.c1 END)) ISNULL);
SELECT ALL vt1.c0, vt0.c2, vt0.c1 FROM vt1, vt0;
SELECT ALL vt1.c0, vt0.c2, vt0.c1 FROM vt1, vt0 WHERE (((CAST(vt0.c1 AS TEXT))||(json_extract(vt0.c1, vt0.c0)))) UNION ALL SELECT vt1.c0, vt0.c2, vt0.c1 FROM vt1, vt0 WHERE ((NOT (((CAST(vt0.c1 AS TEXT))||(json_extract(vt0.c1, vt0.c0)))))) UNION ALL SELECT ALL vt1.c0, vt0.c2, vt0.c1 FROM vt1, vt0 WHERE (((((CAST(vt0.c1 AS TEXT))||(json_extract(vt0.c1, vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt1.c0)LIKE(vt1.c0))) ISNULL)) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (((((vt1.c0)LIKE(vt1.c0))) ISNULL)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((vt1.c0)LIKE(vt1.c0))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c2 HAVING COUNT(((((((((TOTAL(vt0.c0))OR(AVG(AVG(AVG(AVG(vt1.c0)))))))OR(AVG(MAX(vt0.c1)))))OR(NULL)))OR(COUNT(COUNT(*))))) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c2 HAVING (NOT (COUNT(((((((((TOTAL(vt0.c0))OR(AVG(AVG(AVG(AVG(vt1.c0)))))))OR(AVG(MAX(vt0.c1)))))OR(NULL)))OR(COUNT(COUNT(*))))))) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c2 HAVING ((COUNT(((((((((TOTAL(vt0.c0))OR(AVG(AVG(AVG(AVG(vt1.c0)))))))OR(AVG(MAX(vt0.c1)))))OR(NULL)))OR(COUNT(COUNT(*)))))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((vt0.c2)*(NULL)) IN ())) ORDER BY (~ (0.5896460748531746));
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c2)*(NULL)) IN ())))) ORDER BY (~ (0.5896460748531746));
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((((vt0.c2)*(NULL)) IN ())) ISNULL)) ORDER BY (~ (0.5896460748531746));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, vt1 NOT INDEXED;
SELECT DISTINCT * FROM vt0, vt1 WHERE (CAST((((vt0.c1))>((vt0.c0))) AS REAL)) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (CAST((((vt0.c1))>((vt0.c0))) AS REAL)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((CAST((((vt0.c1))>((vt0.c0))) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1 NOT INDEXED;
SELECT ALL vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c2;
SELECT ALL vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1 WHERE (UNICODE(x'') COLLATE BINARY) GROUP BY vt1.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1 WHERE ((NOT (UNICODE(x'') COLLATE BINARY))) GROUP BY vt1.c0, vt0.c1, vt0.c2 UNION SELECT vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1 WHERE (((UNICODE(x'') COLLATE BINARY) ISNULL)) GROUP BY vt1.c0, vt0.c1, vt0.c2;
SELECT ALL vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1 HAVING MIN(COUNT('')) UNION ALL SELECT ALL vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1 HAVING (NOT (MIN(COUNT('')))) UNION ALL SELECT ALL vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1 HAVING ((MIN(COUNT(''))) ISNULL);
SELECT ALL vt0.c1, vt1.c0 FROM vt0, vt1;
SELECT ALL vt0.c1, vt1.c0 FROM vt0, vt1 WHERE (CAST(((vt0.c2) NOT NULL) AS NUMERIC)) UNION ALL SELECT vt0.c1, vt1.c0 FROM vt0, vt1 WHERE ((NOT (CAST(((vt0.c2) NOT NULL) AS NUMERIC)))) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt0, vt1 WHERE (((CAST(((vt0.c2) NOT NULL) AS NUMERIC)) ISNULL));
SELECT ALL vt0.c1, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)>(((vt0.c2)!=(vt0.c0))))) UNION SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT (((vt0.c1 COLLATE BINARY)>(((vt0.c2)<>(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0 WHERE (((((vt0.c1 COLLATE BINARY)>(((vt0.c2)<>(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0;
SELECT ALL vt1.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c2;
SELECT ALL vt1.c0, vt0.c2 FROM vt1, vt0 WHERE ((- (']mw0,V[0'))) GROUP BY vt1.c0, vt0.c2 UNION SELECT ALL vt1.c0, vt0.c2 FROM vt1, vt0 WHERE ((NOT ((- (']mw0,V[0'))))) GROUP BY vt1.c0, vt0.c2 UNION SELECT vt1.c0, vt0.c2 FROM vt1, vt0 WHERE ((((- (']mw0,V[0'))) ISNULL)) GROUP BY vt1.c0, vt0.c2;
SELECT ALL vt1.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.c2, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.c2, vt1.c0 HAVING (~ (TOTAL(vt0.c2))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.c2, vt1.c0 HAVING (NOT ((~ (TOTAL(vt0.c2))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.c2, vt1.c0 HAVING (((~ (TOTAL(vt0.c2)))) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.c2, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.c2, vt1.c0 HAVING (~ (TOTAL(vt0.c2))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.c2, vt1.c0 HAVING (NOT ((~ (TOTAL(vt0.c2))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.c2, vt1.c0 HAVING (((~ (TOTAL(vt0.c2)))) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.c2, vt1.c0;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) ISNULL), ((vt1.c0)<<(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((vt1.c0, ((vt1.c0)%(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) ISNULL), ((vt1.c0)<<(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((vt1.c0, ((vt1.c0)%(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) ISNULL), ((vt1.c0)<<(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((vt1.c0, ((vt1.c0)%(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)<<(vt1.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0)<<(vt1.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)<<(vt1.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOT NULL))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) NOT NULL))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) NOT NULL))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c2)AND(vt0.c1)))IS NOT(((vt0.c2)GLOB(vt0.c1)))) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c2)AND(vt0.c1)))IS NOT(((vt0.c2)GLOB(vt0.c1)))) GROUP BY vt1.c0 HAVING COUNT(vt0.c2 COLLATE RTRIM) UNION ALL SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c2)AND(vt0.c1)))IS NOT(((vt0.c2)GLOB(vt0.c1)))) GROUP BY vt1.c0 HAVING (NOT (COUNT(vt0.c2 COLLATE RTRIM))) UNION ALL SELECT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c2)AND(vt0.c1)))IS NOT(((vt0.c2)GLOB(vt0.c1)))) GROUP BY vt1.c0 HAVING ((COUNT(vt0.c2 COLLATE RTRIM)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c2)AND(vt0.c1)))IS NOT(((vt0.c2)GLOB(vt0.c1)))) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c2)AND(vt0.c1)))IS NOT(((vt0.c2)GLOB(vt0.c1)))) GROUP BY vt1.c0 HAVING COUNT(vt0.c2 COLLATE RTRIM) UNION ALL SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c2)AND(vt0.c1)))IS NOT(((vt0.c2)GLOB(vt0.c1)))) GROUP BY vt1.c0 HAVING (NOT (COUNT(vt0.c2 COLLATE RTRIM))) UNION ALL SELECT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c2)AND(vt0.c1)))IS NOT(((vt0.c2)GLOB(vt0.c1)))) GROUP BY vt1.c0 HAVING ((COUNT(vt0.c2 COLLATE RTRIM)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c2)AND(vt0.c1)))IS NOT(((vt0.c2)GLOB(vt0.c1)))) GROUP BY vt1.c0;
SELECT * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE (((((CAST(vt0.c0 AS TEXT))OR(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c2 END))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (((((CAST(vt0.c0 AS TEXT))OR(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c2 END))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((((((CAST(vt0.c0 AS TEXT))OR(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c2 END))) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((((+ (vt0.c0)))||((+ (vt0.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((+ (vt0.c0)))||((+ (vt0.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((((((+ (vt0.c0)))||((+ (vt0.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0)<(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)<(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0)<(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(((MIN(MIN(MIN(TOTAL(vt1.c0)))))<=(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(((MIN(MIN(MIN(TOTAL(vt1.c0)))))<=(GROUP_CONCAT(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(((MIN(MIN(MIN(TOTAL(vt1.c0)))))<=(GROUP_CONCAT(vt1.c0))))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((UPPER(vt1.c0)))>((CAST(vt0.c1 AS NUMERIC))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((((UPPER(vt1.c0)))>((CAST(vt0.c1 AS NUMERIC))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((UPPER(vt1.c0)))>((CAST(vt0.c1 AS NUMERIC))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((((NOT (vt0.c1)))<=((((vt1.c0))>((vt1.c0)))))) GROUP BY vt0.c0, vt1.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT ((((NOT (vt0.c1)))<=((((vt1.c0))>((vt1.c0)))))))) GROUP BY vt0.c0, vt1.c0, vt0.c1 UNION SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((((((NOT (vt0.c1)))<=((((vt1.c0))>((vt1.c0)))))) ISNULL)) GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING TOTAL(((COUNT(*)) ISNULL)) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (TOTAL(((COUNT(*)) ISNULL)))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((TOTAL(((COUNT(*)) ISNULL))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((~ ((~ (vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((~ ((~ (vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((~ ((~ (vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE (((((((((0.6798327370266094)AND(((vt0.c0)IS NOT(vt0.c2)))))AND(LIKELIHOOD(vt0.c2, 0.24267342486003096))))AND((NOT (vt0.c0)))))OR((vt0.c2 IN ())))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (((((((((0.6798327370266094)AND(((vt0.c0)IS NOT(vt0.c2)))))AND(LIKELIHOOD(vt0.c2, 0.24267342486003096))))AND((NOT (vt0.c0)))))OR((vt0.c2 IN ())))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE (((((((((((0.6798327370266094)AND(((vt0.c0)IS NOT(vt0.c2)))))AND(LIKELIHOOD(vt0.c2, 0.24267342486003096))))AND((NOT (vt0.c0)))))OR((vt0.c2 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ()))<('-1437012503'))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ()))<('-1437012503'))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ()))<('-1437012503'))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c2;
SELECT vt1.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c2 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c2;
SELECT vt1.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c2 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c2;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((NOT ((vt1.c0 IN ())))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((NOT ((vt1.c0 IN ())))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((NOT ((vt1.c0 IN ())))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c1, vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c1, vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (CASE WHEN vt1.c0 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c1 WHEN '' THEN vt0.c0 ELSE vt0.c1 END COLLATE RTRIM) UNION SELECT DISTINCT vt0.c1, vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (CASE WHEN vt1.c0 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c1 WHEN '' THEN vt0.c0 ELSE vt0.c1 END COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c1, vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((CASE WHEN vt1.c0 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c1 WHEN '' THEN vt0.c0 ELSE vt0.c1 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c1, NULL, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.c2, vt0.c0)) AND (('0.1961714655657284', vt0.c1, -8.1353531E7))))>=((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c1, NULL, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.c2, vt0.c0)) AND (('0.1961714655657284', vt0.c1, -8.1353531E7))))>=((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c1, NULL, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.c2, vt0.c0)) AND (('0.1961714655657284', vt0.c1, -8.1353531E7))))>=((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(vt1.c0))>(MAX(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((AVG(vt1.c0))>(MAX(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((AVG(vt1.c0))>(MAX(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(vt1.c0))>(MAX(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((AVG(vt1.c0))>(MAX(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((AVG(vt1.c0))>(MAX(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT TOTAL(CAST(CAST(vt1.c0 AS TEXT) AS BLOB)) FROM vt1;
SELECT vt0.c0 FROM vt0, vt1;
SELECT vt0.c0 FROM vt0, vt1 WHERE ((~ (NULL))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 WHERE ((NOT ((~ (NULL))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((((~ (NULL))) ISNULL));
SELECT vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE BINARY) UNION SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS BLOB) COLLATE BINARY))) UNION SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 WHERE (((((((((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))AND(vt0.c1))) ISNULL)) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0 WHERE ((NOT (((((((((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))AND(vt0.c1))) ISNULL)))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0 WHERE (((((((((((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))AND(vt0.c1))) ISNULL)) ISNULL)) GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE ((MIN(0.061922966246745204))<<(GROUP_CONCAT(vt1.c0)))  WHEN GROUP_CONCAT(vt1.c0) COLLATE BINARY THEN AVG(AVG(AVG(COUNT(TOTAL(vt1.c0))))) WHEN GROUP_CONCAT(vt1.c0) THEN (TOTAL(vt1.c0) IN (vt1.c0)) WHEN ((vt1.c0)>=(vt1.c0)) THEN (- (vt1.c0)) ELSE MIN(AVG(GROUP_CONCAT(vt1.c0)), SUM(AVG(MIN(vt1.c0)))) END UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE ((MIN(0.061922966246745204))<<(GROUP_CONCAT(vt1.c0)))  WHEN GROUP_CONCAT(vt1.c0) COLLATE BINARY THEN AVG(AVG(AVG(COUNT(TOTAL(vt1.c0))))) WHEN GROUP_CONCAT(vt1.c0) THEN (TOTAL(vt1.c0) IN (vt1.c0)) WHEN ((vt1.c0)>=(vt1.c0)) THEN (- (vt1.c0)) ELSE MIN(AVG(GROUP_CONCAT(vt1.c0)), SUM(AVG(MIN(vt1.c0)))) END)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE ((MIN(0.061922966246745204))<<(GROUP_CONCAT(vt1.c0)))  WHEN GROUP_CONCAT(vt1.c0) COLLATE BINARY THEN AVG(AVG(AVG(COUNT(TOTAL(vt1.c0))))) WHEN GROUP_CONCAT(vt1.c0) THEN (TOTAL(vt1.c0) IN (vt1.c0)) WHEN ((vt1.c0)>=(vt1.c0)) THEN (- (vt1.c0)) ELSE MIN(AVG(GROUP_CONCAT(vt1.c0)), SUM(AVG(MIN(vt1.c0)))) END) ISNULL);
SELECT ALL * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (CAST(((vt1.c0) ISNULL) AS INTEGER)) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT (CAST(((vt1.c0) ISNULL) AS INTEGER)))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((CAST(((vt1.c0) ISNULL) AS INTEGER)) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (NULL COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (NULL COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((NULL COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((vt1.c0)IS(vt1.c0))) AND (vt1.c0 COLLATE BINARY))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((vt1.c0)IS(vt1.c0))) AND (vt1.c0 COLLATE BINARY))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((vt1.c0)IS(vt1.c0))) AND (vt1.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0)OR('373321362')))OR(vt1.c0)) IN ())) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0)OR('373321362')))OR(vt1.c0)) IN ())))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)OR('373321362')))OR(vt1.c0)) IN ())) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON CAST(vt1.c0 AS BLOB);
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON CAST(vt1.c0 AS BLOB) WHERE (((((vt0.c1)IS(vt0.c1))) ISNULL)) UNION SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON CAST(vt1.c0 AS BLOB) WHERE ((NOT (((((vt0.c1)IS(vt0.c1))) ISNULL)))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON CAST(vt1.c0 AS BLOB) WHERE (((((((vt0.c1)IS(vt0.c1))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON CAST(vt1.c0 AS BLOB);
SELECT ALL vt0.c2, vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c1, vt1.c0, vt0.c0;
SELECT ALL vt0.c2, vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (TRIM((((((((('(')OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c1)))AND(vt0.c2)))) GROUP BY vt0.c2, vt0.c1, vt1.c0, vt0.c0 UNION SELECT vt0.c2, vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (TRIM((((((((('(')OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c1)))AND(vt0.c2)))))) GROUP BY vt0.c2, vt0.c1, vt1.c0, vt0.c0 UNION SELECT vt0.c2, vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((TRIM((((((((('(')OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c1)))AND(vt0.c2)))) ISNULL)) GROUP BY vt0.c2, vt0.c1, vt1.c0, vt0.c0;
SELECT ALL vt0.c2, vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c1, vt1.c0, vt0.c0;
SELECT ALL vt0.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.c2, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.c2, vt1.c0 HAVING ((COUNT(*)) ISNULL) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.c2, vt1.c0 HAVING (NOT (((COUNT(*)) ISNULL))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.c2, vt1.c0 HAVING ((((COUNT(*)) ISNULL)) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.c2, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.c2, vt1.c0 HAVING ((COUNT(*)) ISNULL) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.c2, vt1.c0 HAVING (NOT (((COUNT(*)) ISNULL))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.c2, vt1.c0 HAVING ((((COUNT(*)) ISNULL)) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.c2, vt1.c0;
SELECT ALL vt0.c0, vt0.c2 FROM vt0;
SELECT vt0.c0, vt0.c2 FROM vt0 WHERE ((((((((((((((- (vt0.c1)))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)))))OR(((vt0.c1) BETWEEN (vt0.c0) AND (0Xffffffffd5ca1604)))))AND(IFNULL(DISTINCT x'', vt0.c0))))AND(((((((((((((x'')AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c2)))OR(vt0.c1)))))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))AND(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2))))) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT ((((((((((((((- (vt0.c1)))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)))))OR(((vt0.c1) BETWEEN (vt0.c0) AND (0Xffffffffd5ca1604)))))AND(IFNULL(DISTINCT x'', vt0.c0))))AND(((((((((((((x'')AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c2)))OR(vt0.c1)))))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))AND(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2))))))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0 WHERE ((((((((((((((((- (vt0.c1)))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)))))OR(((vt0.c1) BETWEEN (vt0.c0) AND (0xffffffffd5ca1604)))))AND(IFNULL(DISTINCT x'', vt0.c0))))AND(((((((((((((x'')AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c2)))OR(vt0.c1)))))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))AND(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2))))) ISNULL));
SELECT ALL vt0.c0, vt0.c2 FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ('Z\mF|Kx') UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ('Z\mF|Kx'))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((('Z\mF|Kx') ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 WHERE (2122767500) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE ((NOT (2122767500))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (((2122767500) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING MIN(AVG(TOTAL(0.4939400631467916))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (MIN(AVG(TOTAL(0.4939400631467916))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((MIN(AVG(TOTAL(0.4939400631467916)))) ISNULL);
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt1, vt0;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt1, vt0 WHERE (((((((vt0.c1)AND(vt0.c0)))OR(vt0.c2)))|(((vt0.c1)>=(vt0.c1))))) UNION ALL SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt1, vt0 WHERE ((NOT (((((((vt0.c1)AND(vt0.c0)))OR(vt0.c2)))|(((vt0.c1)>=(vt0.c1))))))) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt1, vt0 WHERE (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c2)))|(((vt0.c1)>=(vt0.c1))))) ISNULL));
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt1, vt0;
SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1, vt1.c0 FROM vt0 INNER JOIN vt1 ON CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB);
SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1, vt1.c0 FROM vt0 INNER JOIN vt1 ON CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB) WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1, vt1.c0 FROM vt0 INNER JOIN vt1 ON CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB) WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1, vt1.c0 FROM vt0 INNER JOIN vt1 ON CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB) WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1, vt1.c0 FROM vt0 INNER JOIN vt1 ON CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS(vt1.c0 COLLATE BINARY))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS(vt1.c0 COLLATE BINARY))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS(vt1.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING COUNT(((GROUP_CONCAT(vt0.c2))LIKE(SUM(vt0.c2)))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING (NOT (COUNT(((GROUP_CONCAT(vt0.c2))LIKE(SUM(vt0.c2)))))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING ((COUNT(((GROUP_CONCAT(vt0.c2))LIKE(SUM(vt0.c2))))) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c1) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (vt0.c1))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((vt0.c1) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((~ (vt1.c0)))OR((~ (vt0.c1)))))OR('azPA_h'))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((((((~ (vt1.c0)))OR((~ (vt0.c1)))))OR('azPA_h'))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((((~ (vt1.c0)))OR((~ (vt0.c1)))))OR('azPA_h'))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (0.7197600901880609))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((NOT (0.7197600901880609))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((NOT (0.7197600901880609))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c1 HAVING (MIN(NULL) IN ()) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c1 HAVING (NOT ((MIN(NULL) IN ()))) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c1 HAVING (((MIN(NULL) IN ())) ISNULL);
SELECT ALL vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c1 HAVING (MIN(NULL) IN ()) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c1 HAVING (NOT ((MIN(NULL) IN ()))) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c1 HAVING (((MIN(NULL) IN ())) ISNULL);
SELECT ALL vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c2 THEN x'd0698089' ELSE vt0.c0 END AS BLOB)) UNION SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CAST(CASE vt0.c0  WHEN vt0.c2 THEN x'd0698089' ELSE vt0.c0 END AS BLOB)))) UNION SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST(CASE vt0.c0  WHEN vt0.c2 THEN x'd0698089' ELSE vt0.c0 END AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)%(((vt1.c0) ISNULL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE BINARY)%(((vt1.c0) ISNULL)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE BINARY)%(((vt1.c0) ISNULL)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0;
SELECT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0 HAVING CAST(COUNT(TOTAL(vt0.c2)) AS REAL) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0 HAVING (NOT (CAST(COUNT(TOTAL(vt0.c2)) AS REAL))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0 HAVING ((CAST(COUNT(TOTAL(vt0.c2)) AS REAL)) ISNULL);
SELECT vt1.c0 FROM vt0, vt1;
SELECT vt1.c0 FROM vt0, vt1 WHERE (x'') UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((NOT (x''))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 WHERE (((x'') ISNULL));
SELECT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((~ (vt1.c0)) IN ())) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((~ (vt1.c0)) IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((~ (vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c2 FROM vt0, vt1 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0, vt1 WHERE (CASE (~ (vt0.c1))  WHEN CAST(vt0.c2 AS NUMERIC) THEN ((0xffffffffcf4fc178)*(vt1.c0)) END) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0, vt1 WHERE ((NOT (CASE (~ (vt0.c1))  WHEN CAST(vt0.c2 AS NUMERIC) THEN ((0Xffffffffcf4fc178)*(vt1.c0)) END))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0, vt1 WHERE (((CASE (~ (vt0.c1))  WHEN CAST(vt0.c2 AS NUMERIC) THEN ((0xffffffffcf4fc178)*(vt1.c0)) END) ISNULL)) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0, vt1 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((vt0.c2)OR(vt1.c0)))AND(vt0.c0))) BETWEEN (UPPER(vt0.c2)) AND (((vt0.c0)*(vt1.c0)))) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((vt0.c2)OR(vt1.c0)))AND(vt0.c0))) BETWEEN (UPPER(vt0.c2)) AND (((vt0.c0)*(vt1.c0)))) GROUP BY vt0.c2 HAVING ((AVG(COUNT(AVG(vt0.c0)))) ISNULL) UNION ALL SELECT ALL vt0.c2 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((vt0.c2)OR(vt1.c0)))AND(vt0.c0))) BETWEEN (UPPER(vt0.c2)) AND (((vt0.c0)*(vt1.c0)))) GROUP BY vt0.c2 HAVING (NOT (((AVG(COUNT(AVG(vt0.c0)))) ISNULL))) UNION ALL SELECT ALL vt0.c2 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((vt0.c2)OR(vt1.c0)))AND(vt0.c0))) BETWEEN (UPPER(vt0.c2)) AND (((vt0.c0)*(vt1.c0)))) GROUP BY vt0.c2 HAVING ((((AVG(COUNT(AVG(vt0.c0)))) ISNULL)) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c0)>=(vt0.c2)) IN ())) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0)>=(vt0.c2)) IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c0)>=(vt0.c2)) IN ())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (x'' COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (x'' COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 WHERE (((x'' COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 WHERE ('') GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0 WHERE ((NOT (''))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0 WHERE ((('') ISNULL)) GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING LIKELY(CASE WHEN COUNT(*) THEN GROUP_CONCAT(MIN(vt0.c1)) END) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (LIKELY(CASE WHEN COUNT(*) THEN GROUP_CONCAT(MIN(vt0.c1)) END))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((LIKELY(CASE WHEN COUNT(*) THEN GROUP_CONCAT(MIN(vt0.c1)) END)) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE ((((1.185686217E9))>=((LOWER(x''))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((((1.185686217E9))>=((LOWER(x''))))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((((((1.185686217E9))>=((LOWER(x''))))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE (0.8642185835698379) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT (0.8642185835698379))) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE (((0.8642185835698379) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0;
SELECT ALL vt0.c2 FROM vt1, vt0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt1, vt0 WHERE (((((0.6228372716986054)IS(vt0.c0)))IS(((((vt0.c1)OR(vt0.c2)))AND(vt0.c2))))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt1, vt0 WHERE ((NOT (((((0.6228372716986054)IS(vt0.c0)))IS(((((vt0.c1)OR(vt0.c2)))AND(vt0.c2))))))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt1, vt0 WHERE (((((((0.6228372716986054)IS(vt0.c0)))IS(((((vt0.c1)OR(vt0.c2)))AND(vt0.c2))))) ISNULL)) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt1, vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING SUM(((MIN(COUNT(vt0.c1))) NOTNULL)) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING (NOT (SUM(((MIN(COUNT(vt0.c1))) NOTNULL)))) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING ((SUM(((MIN(COUNT(vt0.c1))) NOTNULL))) ISNULL);
SELECT TOTAL(((vt1.c0 COLLATE NOCASE)%((((vt1.c0))>=((vt1.c0)))))) FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS REAL) AS NUMERIC)  NULLS FIRST;
SELECT ALL vt0.c1, vt0.c2 FROM vt0;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 WHERE (((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c2)))AND(NULL)))OR(vt0.c2))) IS FALSE)) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c2)))AND(NULL)))OR(vt0.c2))) IS FALSE)))) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 WHERE (((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c2)))AND(NULL)))OR(vt0.c2))) IS FALSE)) ISNULL));
SELECT ALL vt0.c1, vt0.c2 FROM vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (('-1548354990' IN (LIKELY(DISTINCT vt0.c1)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (('-1548354990' IN (LIKELY(DISTINCT vt0.c1)))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((('-1548354990' IN (LIKELY(DISTINCT vt0.c1)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((- ('-1606490110'))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((- ('-1606490110'))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((- ('-1606490110'))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, vt0.c1, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2;
SELECT vt1.c0, vt0.c1, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2 HAVING (ABS(DISTINCT COUNT(*)) IN ((+ (AVG(vt0.c0))))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2 HAVING (NOT ((ABS(DISTINCT COUNT(*)) IN ((+ (AVG(vt0.c0))))))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2 HAVING (((ABS(DISTINCT COUNT(*)) IN ((+ (AVG(vt0.c0)))))) ISNULL);
SELECT vt1.c0, vt0.c1, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2;
SELECT vt1.c0, vt0.c1, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2 HAVING (ABS(DISTINCT COUNT(*)) IN ((+ (AVG(vt0.c0))))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2 HAVING (NOT ((ABS(DISTINCT COUNT(*)) IN ((+ (AVG(vt0.c0))))))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2 HAVING (((ABS(DISTINCT COUNT(*)) IN ((+ (AVG(vt0.c0)))))) ISNULL);
SELECT vt1.c0, vt0.c1, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (('WmG' IN ())))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((NOT (('WmG' IN ())))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((NOT (('WmG' IN ())))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0 WHERE (x'e18b') UNION SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (x'e18b'))) UNION SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0 WHERE (((x'e18b') ISNULL));
SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0;
SELECT vt0.c2, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0, vt1 WHERE ((((vt0.c2 IN (vt0.c2))) BETWEEN (CASE x'0fa2'  WHEN vt0.c2 THEN x'a92a' END) AND (highlight(vt0.c2, vt0.c2, 0xffffffffc04e627b, vt0.c2)))) GROUP BY vt0.c2, vt0.c0 UNION SELECT vt0.c2, vt0.c0 FROM vt0, vt1 WHERE ((NOT ((((vt0.c2 IN (vt0.c2))) BETWEEN (CASE x'0fa2'  WHEN vt0.c2 THEN x'a92a' END) AND (highlight(vt0.c2, vt0.c2, 0Xffffffffc04e627b, vt0.c2)))))) GROUP BY vt0.c2, vt0.c0 UNION SELECT vt0.c2, vt0.c0 FROM vt0, vt1 WHERE ((((((vt0.c2 IN (vt0.c2))) BETWEEN (CASE x'0fa2'  WHEN vt0.c2 THEN x'a92a' END) AND (highlight(vt0.c2, vt0.c2, 0Xffffffffc04e627b, vt0.c2)))) ISNULL)) GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2 HAVING (~ (COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2 HAVING (NOT ((~ (COUNT(*))))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2 HAVING (((~ (COUNT(*)))) ISNULL);
SELECT ALL vt0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2 HAVING (~ (COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2 HAVING (NOT ((~ (COUNT(*))))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2 HAVING (((~ (COUNT(*)))) ISNULL);
SELECT ALL vt0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2;
SELECT ALL * FROM vt1 NATURAL JOIN vt0;
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((vt1.c0)LIKE(TYPEOF(DISTINCT '\r8qt')))) UNION ALL SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((NOT (((vt1.c0)LIKE(TYPEOF(DISTINCT '\r8qt')))))) UNION ALL SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (((((vt1.c0)LIKE(TYPEOF(DISTINCT '\r8qt')))) ISNULL));
SELECT ALL * FROM vt1 NATURAL JOIN vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)OR(vt1.c0))))<(((vt1.c0 IN ()))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0)OR(vt1.c0))))<(((vt1.c0 IN ()))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)OR(vt1.c0))))<(((vt1.c0 IN ()))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((x'')OR(UNICODE(x''))))AND(CASE WHEN vt0.c0 THEN vt0.c1 END))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((x'')OR(UNICODE(x''))))AND(CASE WHEN vt0.c0 THEN vt0.c1 END))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((x'')OR(UNICODE(x''))))AND(CASE WHEN vt0.c0 THEN vt0.c1 END))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING ((SUM(MIN(vt0.c0))) IS TRUE) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING (NOT (((SUM(MIN(vt0.c0))) IS TRUE))) UNION ALL SELECT vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING ((((SUM(MIN(vt0.c0))) IS TRUE)) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE ((vt1.c0) NOT NULL)  WHEN ((vt1.c0) ISNULL) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE ((vt1.c0) NOT NULL)  WHEN ((vt1.c0) ISNULL) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE ((vt1.c0) NOT NULL)  WHEN ((vt1.c0) ISNULL) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)-(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((NOT (((vt1.c0)-(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((NOT (((vt1.c0)-(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE WHEN ((vt1.c0)+(GROUP_CONCAT(vt1.c0))) THEN (MIN(MAX(AVG(MAX(vt1.c0)))) IN ()) ELSE MAX(0.49592819350350736) COLLATE BINARY END UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE WHEN ((vt1.c0)+(GROUP_CONCAT(vt1.c0))) THEN (MIN(MAX(AVG(MAX(vt1.c0)))) IN ()) ELSE MAX(0.49592819350350736) COLLATE BINARY END)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE WHEN ((vt1.c0)+(GROUP_CONCAT(vt1.c0))) THEN (MIN(MAX(AVG(MAX(vt1.c0)))) IN ()) ELSE MAX(0.49592819350350736) COLLATE BINARY END) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE WHEN ((vt1.c0)+(GROUP_CONCAT(vt1.c0))) THEN (MIN(MAX(AVG(MAX(vt1.c0)))) IN ()) ELSE MAX(0.49592819350350736) COLLATE BINARY END UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE WHEN ((vt1.c0)+(GROUP_CONCAT(vt1.c0))) THEN (MIN(MAX(AVG(MAX(vt1.c0)))) IN ()) ELSE MAX(0.49592819350350736) COLLATE BINARY END)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE WHEN ((vt1.c0)+(GROUP_CONCAT(vt1.c0))) THEN (MIN(MAX(AVG(MAX(vt1.c0)))) IN ()) ELSE MAX(0.49592819350350736) COLLATE BINARY END) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (NULL) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (NULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((NULL) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0) IS FALSE)))>((((vt1.c0)<=(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((((vt1.c0) IS FALSE)))>((((vt1.c0)<=(vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((((vt1.c0) IS FALSE)))>((((vt1.c0)<=(vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c2)OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(CAST(vt0.c0 AS REAL)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c2)OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(CAST(vt0.c0 AS REAL)))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c2)OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(CAST(vt0.c0 AS REAL)))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.c2;
SELECT vt0.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.c2 HAVING TOTAL(vt1.c0) COLLATE RTRIM UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.c2 HAVING (NOT (TOTAL(vt1.c0) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.c2 HAVING ((TOTAL(vt1.c0) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.c2;
SELECT vt0.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.c2 HAVING TOTAL(vt1.c0) COLLATE RTRIM UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.c2 HAVING (NOT (TOTAL(vt1.c0) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.c2 HAVING ((TOTAL(vt1.c0) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((((((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(NULL)))OR(NULLIF(DISTINCT vt0.c2, vt0.c2))))OR((~ (vt0.c2)))))OR((+ (vt1.c0)))))OR(vt0.c2));
SELECT ALL vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((((((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(NULL)))OR(NULLIF(DISTINCT vt0.c2, vt0.c2))))OR((~ (vt0.c2)))))OR((+ (vt1.c0)))))OR(vt0.c2)) WHERE (((CAST(vt0.c0 AS REAL))IS(vt0.c2))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((((((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(NULL)))OR(NULLIF(DISTINCT vt0.c2, vt0.c2))))OR((~ (vt0.c2)))))OR((+ (vt1.c0)))))OR(vt0.c2)) WHERE ((NOT (((CAST(vt0.c0 AS REAL))IS(vt0.c2))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((((((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(NULL)))OR(NULLIF(DISTINCT vt0.c2, vt0.c2))))OR((~ (vt0.c2)))))OR((+ (vt1.c0)))))OR(vt0.c2)) WHERE (((((CAST(vt0.c0 AS REAL))IS(vt0.c2))) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((((((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(NULL)))OR(NULLIF(DISTINCT vt0.c2, vt0.c2))))OR((~ (vt0.c2)))))OR((+ (vt1.c0)))))OR(vt0.c2));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (json_remove('!|햋Q!<2 C', ((((vt0.c2)OR(vt0.c1)))AND(vt0.c0)), ((vt0.c0)LIKE(vt0.c1)), vt0.c1)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (json_remove('!|햋Q!<2 C', ((((vt0.c2)OR(vt0.c1)))AND(vt0.c0)), ((vt0.c0)LIKE(vt0.c1)), vt0.c1)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((json_remove('!|햋Q!<2 C', ((((vt0.c2)OR(vt0.c1)))AND(vt0.c0)), ((vt0.c0)LIKE(vt0.c1)), vt0.c1)) ISNULL));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0)*(vt1.c0))) NOT BETWEEN (((vt1.c0)+(vt1.c0))) AND (STRFTIME(vt1.c0, -6.0279425E7, vt1.c0, vt1.c0, vt1.c0)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)*(vt1.c0))) NOT BETWEEN (((vt1.c0)+(vt1.c0))) AND (STRFTIME(vt1.c0, -6.0279425E7, vt1.c0, vt1.c0, vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0)*(vt1.c0))) NOT BETWEEN (((vt1.c0)+(vt1.c0))) AND (STRFTIME(vt1.c0, -6.0279425E7, vt1.c0, vt1.c0, vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, vt0.c2 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c2;
SELECT ALL vt1.c0, vt0.c2 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c2 HAVING AVG((NOT (vt0.c0))) UNION ALL SELECT vt1.c0, vt0.c2 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c2 HAVING (NOT (AVG((NOT (vt0.c0))))) UNION ALL SELECT ALL vt1.c0, vt0.c2 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c2 HAVING ((AVG((NOT (vt0.c0)))) ISNULL);
SELECT vt1.c0, vt0.c2 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c2;
SELECT ALL vt1.c0, vt0.c2 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c2 HAVING AVG((NOT (vt0.c0))) UNION ALL SELECT vt1.c0, vt0.c2 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c2 HAVING (NOT (AVG((NOT (vt0.c0))))) UNION ALL SELECT ALL vt1.c0, vt0.c2 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c2 HAVING ((AVG((NOT (vt0.c0)))) ISNULL);
SELECT vt1.c0, vt0.c2 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c2;
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (((RTRIM(vt1.c0))<<(0x2bc3125f))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (((RTRIM(vt1.c0))<<(0X2bc3125f))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((((RTRIM(vt1.c0))<<(0x2bc3125f))) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c2 FROM vt0 WHERE (TOTAL_CHANGES() COLLATE RTRIM) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE ((NOT (TOTAL_CHANGES() COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE (((TOTAL_CHANGES() COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c2 FROM vt0;
SELECT vt0.c0, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c2, vt1.c0;
SELECT vt0.c0, vt0.c2, vt1.c0 FROM vt0, vt1 WHERE (((CAST(vt0.c2 AS TEXT))+(vt1.c0))) GROUP BY vt0.c0, vt0.c2, vt1.c0 UNION SELECT vt0.c0, vt0.c2, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((CAST(vt0.c2 AS TEXT))+(vt1.c0))))) GROUP BY vt0.c0, vt0.c2, vt1.c0 UNION SELECT vt0.c0, vt0.c2, vt1.c0 FROM vt0, vt1 NOT INDEXED WHERE (((((CAST(vt0.c2 AS TEXT))+(vt1.c0))) ISNULL)) GROUP BY vt0.c0, vt0.c2, vt1.c0;
SELECT vt0.c0, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c2, vt1.c0;
SELECT ALL vt1.c0, vt0.c0, vt0.c2 FROM vt1 INNER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER))GLOB((vt1.c0 IN ()))) GROUP BY vt1.c0, vt0.c0, vt0.c2;
SELECT ALL vt1.c0, vt0.c0, vt0.c2 FROM vt1 INNER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER))GLOB((vt1.c0 IN ()))) GROUP BY vt1.c0, vt0.c0, vt0.c2 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c2 FROM vt1 INNER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER))GLOB((vt1.c0 IN ()))) GROUP BY vt1.c0, vt0.c0, vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c2 FROM vt1 INNER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER))GLOB((vt1.c0 IN ()))) GROUP BY vt1.c0, vt0.c0, vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, vt0.c0, vt0.c2 FROM vt1 INNER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER))GLOB((vt1.c0 IN ()))) GROUP BY vt1.c0, vt0.c0, vt0.c2;
SELECT ALL vt1.c0, vt0.c0, vt0.c2 FROM vt1 INNER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER))GLOB((vt1.c0 IN ()))) GROUP BY vt1.c0, vt0.c0, vt0.c2 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c2 FROM vt1 INNER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER))GLOB((vt1.c0 IN ()))) GROUP BY vt1.c0, vt0.c0, vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c2 FROM vt1 INNER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER))GLOB((vt1.c0 IN ()))) GROUP BY vt1.c0, vt0.c0, vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, vt0.c0, vt0.c2 FROM vt1 INNER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER))GLOB((vt1.c0 IN ()))) GROUP BY vt1.c0, vt0.c0, vt0.c2;
SELECT ALL vt0.c2 FROM vt0;
SELECT ALL vt0.c2 FROM vt0 WHERE (CAST(((vt0.c1)<<(vt0.c2)) AS INTEGER)) UNION ALL SELECT ALL vt0.c2 FROM vt0 WHERE ((NOT (CAST(((vt0.c1)<<(vt0.c2)) AS INTEGER)))) UNION ALL SELECT ALL vt0.c2 FROM vt0 WHERE (((CAST(((vt0.c1)<<(vt0.c2)) AS INTEGER)) ISNULL));
SELECT ALL vt0.c2 FROM vt0;
SELECT DISTINCT vt1.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN vt0 ON (vt0.c1 IN ()) COLLATE NOCASE;
SELECT DISTINCT vt1.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN vt0 ON (vt0.c1 IN ()) COLLATE NOCASE WHERE (vt0.c2) UNION SELECT DISTINCT vt1.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN vt0 ON (vt0.c1 IN ()) COLLATE NOCASE WHERE ((NOT (vt0.c2))) UNION SELECT DISTINCT vt1.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN vt0 ON (vt0.c1 IN ()) COLLATE NOCASE WHERE (((vt0.c2) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN vt0 ON (vt0.c1 IN ()) COLLATE NOCASE;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((NULL) NOT BETWEEN (vt0.c2) AND (x'ee39ab03')))<<(((vt0.c1) IS FALSE)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((NULL) NOT BETWEEN (vt0.c2) AND (x'ee39ab03')))<<(((vt0.c1) IS FALSE)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((NULL) NOT BETWEEN (vt0.c2) AND (x'ee39ab03')))<<(((vt0.c1) IS FALSE)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL((((vt1.c0))<((vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL((((vt1.c0))<((vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL((((vt1.c0))<((vt1.c0))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL((((vt1.c0))<((vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL((((vt1.c0))<((vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL((((vt1.c0))<((vt1.c0))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT ALL vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((((vt1.c0 IN ()))OR(NULL)))AND('235497613'))) UNION ALL SELECT vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((((vt1.c0 IN ()))OR(NULL)))AND('235497613'))))) UNION ALL SELECT vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((((((vt1.c0 IN ()))OR(NULL)))AND('235497613'))) ISNULL));
SELECT vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)) COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)) COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt1, vt0 WHERE (UNLIKELY(CAST('1e500' AS NUMERIC))) GROUP BY vt0.c2, vt0.c0, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT (UNLIKELY(CAST('1e500' AS NUMERIC))))) GROUP BY vt0.c2, vt0.c0, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt1, vt0 WHERE (((UNLIKELY(CAST('1e500' AS NUMERIC))) ISNULL)) GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING LIKELY(DISTINCT vt0.c2) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (LIKELY(DISTINCT vt0.c2))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((LIKELY(DISTINCT vt0.c2)) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING LIKELY(DISTINCT vt0.c2) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (LIKELY(DISTINCT vt0.c2))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((LIKELY(DISTINCT vt0.c2)) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0)!=(CASE WHEN vt1.c0 THEN vt1.c0 END))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)!=(CASE WHEN vt1.c0 THEN vt1.c0 END))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)!=(CASE WHEN vt1.c0 THEN vt1.c0 END))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC))IS NOT(((vt1.c0)==(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS NUMERIC))IS NOT(((vt1.c0)=(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((CAST(vt1.c0 AS NUMERIC))IS NOT(((vt1.c0)==(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 WHERE (((((vt0.c0)GLOB(0.8053881440091281))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND (-3.9703557E7))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((NOT (((((vt0.c0)GLOB(0.8053881440091281))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND (-3.9703557E7))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE (((((((vt0.c0)GLOB(0.8053881440091281))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND (-3.9703557E7))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT((vt0.c0 IN (COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT((vt0.c0 IN (COUNT(*)))))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT((vt0.c0 IN (COUNT(*))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0)<=(CAST(vt1.c0 AS REAL)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)<=(CAST(vt1.c0 AS REAL)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0)<=(CAST(vt1.c0 AS REAL)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((vt0.c2 IN ())) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((vt0.c2 IN ())))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((vt0.c2 IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt1.c0, vt0.c1, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2;
SELECT ALL vt1.c0, vt0.c1, vt0.c2 FROM vt1, vt0 WHERE (TRIM(DISTINCT (((vt0.c0, x'', ''))>=((vt0.c1, vt0.c0, vt0.c2))), vt1.c0)) GROUP BY vt1.c0, vt0.c1, vt0.c2 UNION SELECT vt1.c0, vt0.c1, vt0.c2 FROM vt1, vt0 WHERE ((NOT (TRIM(DISTINCT (((vt0.c0, x'', ''))>=((vt0.c1, vt0.c0, vt0.c2))), vt1.c0)))) GROUP BY vt1.c0, vt0.c1, vt0.c2 UNION SELECT vt1.c0, vt0.c1, vt0.c2 FROM vt1, vt0 WHERE (((TRIM(DISTINCT (((vt0.c0, x'', ''))>=((vt0.c1, vt0.c0, vt0.c2))), vt1.c0)) ISNULL)) GROUP BY vt1.c0, vt0.c1, vt0.c2;
SELECT ALL vt1.c0, vt0.c1, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST((((MAX(vt1.c0)))<>((AVG(TOTAL(vt1.c0))))) AS BLOB) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST((((MAX(vt1.c0)))!=((AVG(TOTAL(vt1.c0))))) AS BLOB))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST((((MAX(vt1.c0)))<>((AVG(TOTAL(vt1.c0))))) AS BLOB)) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((+ (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((+ (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((+ (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0) IS FALSE) COLLATE BINARY) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) IS FALSE) COLLATE BINARY))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0) IS FALSE) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1 FROM vt1, vt0 WHERE (((((vt1.c0)|(vt0.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND ((- (vt0.c1))))) GROUP BY vt1.c0, vt0.c1 UNION SELECT ALL vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT (((((vt1.c0)|(vt0.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND ((- (vt0.c1))))))) GROUP BY vt1.c0, vt0.c1 UNION SELECT vt1.c0, vt0.c1 FROM vt1, vt0 NOT INDEXED WHERE (((((((vt1.c0)|(vt0.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND ((- (vt0.c1))))) ISNULL)) GROUP BY vt1.c0, vt0.c1;
SELECT vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON (+ (((vt0.c0) NOT NULL))) GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON (+ (((vt0.c0) NOT NULL))) GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING COUNT(((vt1.c0) NOT BETWEEN (vt0.c1) AND (COUNT(*)))) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON (+ (((vt0.c0) NOT NULL))) GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING (NOT (COUNT(((vt1.c0) NOT BETWEEN (vt0.c1) AND (COUNT(*)))))) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON (+ (((vt0.c0) NOT NULL))) GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING ((COUNT(((vt1.c0) NOT BETWEEN (vt0.c1) AND (COUNT(*))))) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE ((((CASE vt0.c2  WHEN vt1.c0 THEN vt0.c1 END))>=((vt1.c0 COLLATE BINARY)))) UNION ALL SELECT ALL * FROM vt0, vt1 NOT INDEXED WHERE ((NOT ((((CASE vt0.c2  WHEN vt1.c0 THEN vt0.c1 END))>=((vt1.c0 COLLATE BINARY)))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((((((CASE vt0.c2  WHEN vt1.c0 THEN vt0.c1 END))>=((vt1.c0 COLLATE BINARY)))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 END IN ())) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 END IN ())))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 END IN ())) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c2, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0, vt1.c0;
SELECT vt0.c1, vt0.c2, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((- (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c1))))) GROUP BY vt0.c1, vt0.c2, vt0.c0, vt1.c0 UNION SELECT vt0.c1, vt0.c2, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((- (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c1))))))) GROUP BY vt0.c1, vt0.c2, vt0.c0, vt1.c0 UNION SELECT vt0.c1, vt0.c2, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((- (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c1))))) ISNULL)) GROUP BY vt0.c1, vt0.c2, vt0.c0, vt1.c0;
SELECT vt0.c1, vt0.c2, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((NOT (COUNT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((NOT (COUNT(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((NOT (COUNT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((NOT (COUNT(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (x'239f331b') UNION ALL SELECT * FROM vt0 WHERE ((NOT (x'239f331b'))) UNION ALL SELECT ALL * FROM vt0 WHERE (((x'239f331b') ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, vt1 WHERE (((CAST(vt0.c2 AS TEXT)) IS FALSE)) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, vt1 WHERE ((NOT (((CAST(vt0.c2 AS TEXT)) IS FALSE)))) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, vt1 WHERE (((((CAST(vt0.c2 AS TEXT)) IS FALSE)) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)*(vt1.c0)))%(((vt1.c0)&(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)*(vt1.c0)))%(((vt1.c0)&(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)*(vt1.c0)))%(((vt1.c0)&(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX((- (COUNT(*)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX((- (COUNT(*)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX((- (COUNT(*))))) ISNULL);
SELECT MAX(((((((((vt0.c1)AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) FROM vt0 ORDER BY ((vt0.c1 COLLATE RTRIM) IS FALSE)  NULLS LAST;
SELECT ALL * FROM vt0 NOT INDEXED;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)))<(((((vt0.c2)AND(vt0.c1)))OR(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)))<(((((vt0.c2)AND(vt0.c1)))OR(vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)))<(((((vt0.c2)AND(vt0.c1)))OR(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0 NOT INDEXED;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS NUMERIC)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0))!=((vt1.c0))) COLLATE BINARY) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0))!=((vt1.c0))) COLLATE BINARY))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0))!=((vt1.c0))) COLLATE BINARY) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c2, vt0.c1 HAVING COUNT(CASE WHEN COUNT(SUM(AVG(vt0.c1))) THEN TOTAL(vt0.c0) ELSE MIN(GROUP_CONCAT(vt0.c1)) END) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c2, vt0.c1 HAVING (NOT (COUNT(CASE WHEN COUNT(SUM(AVG(vt0.c1))) THEN TOTAL(vt0.c0) ELSE MIN(GROUP_CONCAT(vt0.c1)) END))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c2, vt0.c1 HAVING ((COUNT(CASE WHEN COUNT(SUM(AVG(vt0.c1))) THEN TOTAL(vt0.c0) ELSE MIN(GROUP_CONCAT(vt0.c1)) END)) ISNULL);
SELECT vt0.c0 FROM vt0, vt1;
SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (CAST(vt1.c0 AS REAL) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT (CAST(vt1.c0 AS REAL) COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS REAL) COLLATE RTRIM) ISNULL));
SELECT vt0.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c1)))AND(CASE '-287792953'  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END)))AND(CAST(vt0.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c1)))AND(CASE '-287792953'  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END)))AND(CAST(vt0.c0 AS BLOB)))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c1)))AND(CASE '-287792953'  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END)))AND(CAST(vt0.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((((((((x'')OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)))AND(0.8026315320245908)) IN ())) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((((((((x'')OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)))AND(0.8026315320245908)) IN ())))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((((((((((((x'')OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)))AND(0.8026315320245908)) IN ())) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c2 FROM vt0;
SELECT vt0.c2 FROM vt0 WHERE (((((vt0.c0)OR(vt0.c2)))&(((vt0.c0)<=(vt0.c0))))) UNION ALL SELECT ALL vt0.c2 FROM vt0 WHERE ((NOT (((((vt0.c0)OR(vt0.c2)))&(((vt0.c0)<=(vt0.c0))))))) UNION ALL SELECT ALL vt0.c2 FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c2)))&(((vt0.c0)<=(vt0.c0))))) ISNULL));
SELECT ALL vt0.c2 FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CASE ((vt1.c0)/(x''))  WHEN ((vt1.c0)GLOB(vt1.c0)) THEN vt1.c0 COLLATE RTRIM END) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CASE ((vt1.c0)/(x''))  WHEN ((vt1.c0)GLOB(vt1.c0)) THEN vt1.c0 COLLATE RTRIM END))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CASE ((vt1.c0)/(x''))  WHEN ((vt1.c0)GLOB(vt1.c0)) THEN vt1.c0 COLLATE RTRIM END) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (CASE ((vt0.c2)|(vt0.c0))  WHEN '0.3640184938752433' THEN (vt1.c0 IN ()) ELSE CASE vt0.c1  WHEN x'c7ee' THEN vt0.c0 ELSE vt0.c1 END END) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (CASE ((vt0.c2)|(vt0.c0))  WHEN '0.3640184938752433' THEN (vt1.c0 IN ()) ELSE CASE vt0.c1  WHEN x'c7ee' THEN vt0.c0 ELSE vt0.c1 END END))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((CASE ((vt0.c2)|(vt0.c0))  WHEN '0.3640184938752433' THEN (vt1.c0 IN ()) ELSE CASE vt0.c1  WHEN x'c7ee' THEN vt0.c0 ELSE vt0.c1 END END) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING MAX(TOTAL(MAX(MAX(NULL)))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (MAX(TOTAL(MAX(MAX(NULL)))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((MAX(TOTAL(MAX(MAX(NULL))))) ISNULL);
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (CAST((((vt0.c0, vt0.c0, vt0.c2)) BETWEEN ((vt0.c2, vt1.c0, vt0.c1)) AND ((vt1.c0, vt1.c0, vt0.c1))) AS NUMERIC)) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT (CAST((((vt0.c0, vt0.c0, vt0.c2)) BETWEEN ((vt0.c2, vt1.c0, vt0.c1)) AND ((vt1.c0, vt1.c0, vt0.c1))) AS NUMERIC)))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((CAST((((vt0.c0, vt0.c0, vt0.c2)) BETWEEN ((vt0.c2, vt1.c0, vt0.c1)) AND ((vt1.c0, vt1.c0, vt0.c1))) AS NUMERIC)) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 WHERE (CASE WHEN (vt0.c2 IN (vt0.c2, vt1.c0)) THEN vt0.c0 COLLATE BINARY WHEN ((vt1.c0)AND(vt0.c0)) THEN CASE vt0.c2  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END WHEN ((vt0.c0) ISNULL) THEN (((vt0.c1))>=((vt1.c0))) END) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 WHERE ((NOT (CASE WHEN (vt0.c2 IN (vt0.c2, vt1.c0)) THEN vt0.c0 COLLATE BINARY WHEN ((vt1.c0)AND(vt0.c0)) THEN CASE vt0.c2  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END WHEN ((vt0.c0) ISNULL) THEN (((vt0.c1))>=((vt1.c0))) END))) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 WHERE (((CASE WHEN (vt0.c2 IN (vt0.c2, vt1.c0)) THEN vt0.c0 COLLATE BINARY WHEN ((vt1.c0)AND(vt0.c0)) THEN CASE vt0.c2  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END WHEN ((vt0.c0) ISNULL) THEN (((vt0.c1))>=((vt1.c0))) END) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (COUNT(GROUP_CONCAT(vt1.c0)) IN (((vt0.c2)<(vt0.c1)))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT ((COUNT(GROUP_CONCAT(vt1.c0)) IN (((vt0.c2)<(vt0.c1)))))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (((COUNT(GROUP_CONCAT(vt1.c0)) IN (((vt0.c2)<(vt0.c1))))) ISNULL);
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c2) NOT NULL))AND(vt0.c1 COLLATE NOCASE)))AND(((vt0.c1)LIKE(vt0.c0))))) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((((vt0.c2) NOT NULL))AND(vt0.c1 COLLATE NOCASE)))AND(((vt0.c1)LIKE(vt0.c0))))))) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE (((((((((vt0.c2) NOT NULL))AND(vt0.c1 COLLATE NOCASE)))AND(((vt0.c1)LIKE(vt0.c0))))) ISNULL));
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) BETWEEN (((vt1.c0)GLOB('430449118'))) AND (x''))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS BLOB)) BETWEEN (((vt1.c0)GLOB('430449118'))) AND (x''))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c0 AS BLOB)) BETWEEN (((vt1.c0)GLOB('430449118'))) AND (x''))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) NOTNULL)) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) NOTNULL)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) NOTNULL)) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c1, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c2 HAVING ((LTRIM(vt0.c2)) NOT BETWEEN (GROUP_CONCAT(vt0.c1)) AND (COUNT(vt0.c2))) UNION ALL SELECT vt0.c1, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c2 HAVING (NOT (((LTRIM(vt0.c2)) NOT BETWEEN (GROUP_CONCAT(vt0.c1)) AND (COUNT(vt0.c2))))) UNION ALL SELECT vt0.c1, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c2 HAVING ((((LTRIM(vt0.c2)) NOT BETWEEN (GROUP_CONCAT(vt0.c1)) AND (COUNT(vt0.c2)))) ISNULL);
SELECT vt0.c1, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c1, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c2 HAVING ((LTRIM(vt0.c2)) NOT BETWEEN (GROUP_CONCAT(vt0.c1)) AND (COUNT(vt0.c2))) UNION ALL SELECT vt0.c1, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c2 HAVING (NOT (((LTRIM(vt0.c2)) NOT BETWEEN (GROUP_CONCAT(vt0.c1)) AND (COUNT(vt0.c2))))) UNION ALL SELECT vt0.c1, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c2 HAVING ((((LTRIM(vt0.c2)) NOT BETWEEN (GROUP_CONCAT(vt0.c1)) AND (COUNT(vt0.c2)))) ISNULL);
SELECT vt0.c1, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c0)AND(vt0.c0)) IN (((((0.06674494414852594)OR(vt0.c2)))AND(vt0.c1))));
SELECT vt0.c0, vt0.c2 FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c0)AND(vt0.c0)) IN (((((0.06674494414852594)OR(vt0.c2)))AND(vt0.c1)))) WHERE (UPPER(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c0)AND(vt0.c0)) IN (((((0.06674494414852594)OR(vt0.c2)))AND(vt0.c1)))) WHERE ((NOT (UPPER(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c0)AND(vt0.c0)) IN (((((0.06674494414852594)OR(vt0.c2)))AND(vt0.c1)))) WHERE (((UPPER(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ISNULL));
SELECT vt0.c0, vt0.c2 FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c0)AND(vt0.c0)) IN (((((0.06674494414852594)OR(vt0.c2)))AND(vt0.c1))));
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((((vt0.c2 IN ()))IS(((((vt0.c2)OR(vt0.c0)))OR(vt0.c2))))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((vt0.c2 IN ()))IS(((((vt0.c2)OR(vt0.c0)))OR(vt0.c2))))))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((((((vt0.c2 IN ()))IS(((((vt0.c2)OR(vt0.c0)))OR(vt0.c2))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((x'ab05')OR(vt1.c0)))OR(vt1.c0)) COLLATE NOCASE) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((x'ab05')OR(vt1.c0)))OR(vt1.c0)) COLLATE NOCASE))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((x'ab05')OR(vt1.c0)))OR(vt1.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((+ (CAST(3.36805452E8 AS REAL)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((+ (CAST(3.36805452E8 AS REAL)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((+ (CAST(3.36805452E8 AS REAL)))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (0X119872df) AND (vt1.c0)) IN ((+ (vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0) NOT BETWEEN (0x119872df) AND (vt1.c0)) IN ((+ (vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0) NOT BETWEEN (0X119872df) AND (vt1.c0)) IN ((+ (vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (((((('-1603927472') BETWEEN (vt0.c1) AND (vt0.c2))))==((vt0.c0)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (((((('-1603927472') BETWEEN (vt0.c1) AND (vt0.c2))))=((vt0.c0)))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((((((('-1603927472') BETWEEN (vt0.c1) AND (vt0.c2))))=((vt0.c0)))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING TOTAL(MIN(vt0.c0)) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING (NOT (TOTAL(MIN(vt0.c0)))) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING ((TOTAL(MIN(vt0.c0))) ISNULL);
SELECT ALL vt0.c1 FROM vt1, vt0;
SELECT ALL vt0.c1 FROM vt1, vt0 WHERE (vt0.c2) UNION ALL SELECT vt0.c1 FROM vt1, vt0 WHERE ((NOT (vt0.c2))) UNION ALL SELECT ALL vt0.c1 FROM vt1, vt0 NOT INDEXED WHERE (((vt0.c2) ISNULL));
SELECT ALL vt0.c1 FROM vt1, vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0 NOT INDEXED, vt1 WHERE (LIKELY(DISTINCT ((NULL)>=(vt0.c1)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (LIKELY(DISTINCT ((NULL)>=(vt0.c1)))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((LIKELY(DISTINCT ((NULL)>=(vt0.c1)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.c0, vt0.c2, vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c2, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 END)>(((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1))))) GROUP BY vt0.c0, vt0.c2, vt1.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c2, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT (((CASE WHEN vt0.c1 THEN vt0.c0 END)>(((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1))))))) GROUP BY vt0.c0, vt0.c2, vt1.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c2, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE (((((CASE WHEN vt0.c1 THEN vt0.c0 END)>(((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1))))) ISNULL)) GROUP BY vt0.c0, vt0.c2, vt1.c0, vt0.c1;
SELECT vt0.c0, vt0.c2, vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c2, vt1.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c2, vt0.c0;
SELECT ALL vt1.c0, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c2, vt0.c0 HAVING AVG(AVG(MAX(AVG(vt0.c0)))) UNION ALL SELECT ALL vt1.c0, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c2, vt0.c0 HAVING (NOT (AVG(AVG(MAX(AVG(vt0.c0)))))) UNION ALL SELECT ALL vt1.c0, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c2, vt0.c0 HAVING ((AVG(AVG(MAX(AVG(vt0.c0))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE NOCASE) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((vt1.c0 IN ()) COLLATE NOCASE))) UNION ALL SELECT * FROM vt1 WHERE ((((vt1.c0 IN ()) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST((~ (vt1.c0)) AS BLOB)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST((~ (vt1.c0)) AS BLOB)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST((~ (vt1.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM vt0 WHERE (((ABS(DISTINCT vt0.c0))<<(CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END))) GROUP BY vt0.c2, vt0.c1 UNION SELECT vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (((ABS(DISTINCT vt0.c0))<<(CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END))))) GROUP BY vt0.c2, vt0.c1 UNION SELECT vt0.c2, vt0.c1 FROM vt0 WHERE (((((ABS(DISTINCT vt0.c0))<<(CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END))) ISNULL)) GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c0, vt0.c2, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c2, vt1.c0;
SELECT ALL vt0.c0, vt0.c2, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c2, vt1.c0 HAVING NULL UNION ALL SELECT vt0.c0, vt0.c2, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c2, vt1.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c2, vt1.c0 HAVING ((NULL) ISNULL);
SELECT vt0.c0, vt0.c2, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c2, vt1.c0;
SELECT ALL vt0.c0, vt0.c2, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c2, vt1.c0 HAVING NULL UNION ALL SELECT vt0.c0, vt0.c2, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c2, vt1.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c2, vt1.c0 HAVING ((NULL) ISNULL);
SELECT vt0.c0, vt0.c2, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c2, vt1.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c2 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((((vt0.c2))<((vt0.c1)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c2 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((((vt0.c2))<((vt0.c1)))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((CASE WHEN vt0.c2 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((((vt0.c2))<((vt0.c1)))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((+ (vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((+ (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((+ (vt1.c0))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END AS INTEGER)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 NOT INDEXED WHERE (((CAST(CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END AS INTEGER)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING CASE WHEN ((AVG(COUNT(MAX(MIN(vt0.c2))))) ISNULL) THEN MAX(MAX(vt0.c2)) WHEN vt0.c1 THEN (- (vt0.c1)) WHEN ((vt0.c2)==(vt0.c2)) THEN 1909925538 ELSE CAST(AVG(vt0.c2) AS TEXT) END UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING (NOT (CASE WHEN ((AVG(COUNT(MAX(MIN(vt0.c2))))) ISNULL) THEN MAX(MAX(vt0.c2)) WHEN vt0.c1 THEN (- (vt0.c1)) WHEN ((vt0.c2)=(vt0.c2)) THEN 1909925538 ELSE CAST(AVG(vt0.c2) AS TEXT) END)) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING ((CASE WHEN ((AVG(COUNT(MAX(MIN(vt0.c2))))) ISNULL) THEN MAX(MAX(vt0.c2)) WHEN vt0.c1 THEN (- (vt0.c1)) WHEN ((vt0.c2)==(vt0.c2)) THEN 1909925538 ELSE CAST(AVG(vt0.c2) AS TEXT) END) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((+ (vt1.c0))) NOTNULL)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((+ (vt1.c0))) NOTNULL)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((+ (vt1.c0))) NOTNULL)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)>=(NULL)))AND(((vt1.c0)>=(vt1.c0)))))AND((vt1.c0 IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0)>=(NULL)))AND(((vt1.c0)>=(vt1.c0)))))AND((vt1.c0 IN ())))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)>=(NULL)))AND(((vt1.c0)>=(vt1.c0)))))AND((vt1.c0 IN ())))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c2, vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt1.c0, vt0.c1, vt0.c0;
SELECT vt0.c2, vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 WHERE (((CASE vt1.c0  WHEN vt0.c2 THEN vt0.c2 WHEN -1583864958 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 END) NOT NULL)) GROUP BY vt0.c2, vt1.c0, vt0.c1, vt0.c0 UNION SELECT vt0.c2, vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 WHERE ((NOT (((CASE vt1.c0  WHEN vt0.c2 THEN vt0.c2 WHEN -1583864958 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 END) NOT NULL)))) GROUP BY vt0.c2, vt1.c0, vt0.c1, vt0.c0 UNION SELECT vt0.c2, vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 WHERE (((((CASE vt1.c0  WHEN vt0.c2 THEN vt0.c2 WHEN -1583864958 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 END) NOT NULL)) ISNULL)) GROUP BY vt0.c2, vt1.c0, vt0.c1, vt0.c0;
SELECT vt0.c2, vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING AVG(COUNT(*) COLLATE BINARY) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (NOT (AVG(COUNT(*) COLLATE BINARY))) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING ((AVG(COUNT(*) COLLATE BINARY)) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 NOT INDEXED WHERE (CAST(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) AS INTEGER)) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) AS INTEGER)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) AS INTEGER)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((~ (((vt1.c0)-(vt0.c2))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((~ (((vt1.c0)-(vt0.c2))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((~ (((vt1.c0)-(vt0.c2))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt0.c1, vt0.c2 FROM vt1 CROSS JOIN vt0 ON NULL COLLATE RTRIM GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c1, vt0.c2 FROM vt1 CROSS JOIN vt0 ON NULL COLLATE RTRIM WHERE (((((vt0.c0)<=(vt0.c2))) BETWEEN ('1911604798') AND ((vt1.c0 IN (vt1.c0))))) GROUP BY vt0.c1, vt0.c2 UNION SELECT ALL vt0.c1, vt0.c2 FROM vt1 CROSS JOIN vt0 ON NULL COLLATE RTRIM WHERE ((NOT (((((vt0.c0)<=(vt0.c2))) BETWEEN ('1911604798') AND ((vt1.c0 IN (vt1.c0))))))) GROUP BY vt0.c1, vt0.c2 UNION SELECT ALL vt0.c1, vt0.c2 FROM vt1 CROSS JOIN vt0 ON NULL COLLATE RTRIM WHERE (((((((vt0.c0)<=(vt0.c2))) BETWEEN ('1911604798') AND ((vt1.c0 IN (vt1.c0))))) ISNULL)) GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c1, vt0.c2 FROM vt1 CROSS JOIN vt0 ON NULL COLLATE RTRIM GROUP BY vt0.c1, vt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING -357069324 UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (-357069324)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((-357069324) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING -357069324 UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (-357069324)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((-357069324) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0 LEFT OUTER JOIN vt1 ON ((CAST(vt0.c1 AS NUMERIC)) NOTNULL);
SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0 LEFT OUTER JOIN vt1 ON ((CAST(vt0.c1 AS NUMERIC)) NOTNULL) WHERE ((('{?<eh2')<<(((((vt0.c1)AND(vt0.c2)))OR(vt1.c0))))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0 LEFT OUTER JOIN vt1 ON ((CAST(vt0.c1 AS NUMERIC)) NOTNULL) WHERE ((NOT ((('{?<eh2')<<(((((vt0.c1)AND(vt0.c2)))OR(vt1.c0))))))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0 LEFT OUTER JOIN vt1 ON ((CAST(vt0.c1 AS NUMERIC)) NOTNULL) WHERE ((((('{?<eh2')<<(((((vt0.c1)AND(vt0.c2)))OR(vt1.c0))))) ISNULL));
SELECT vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0 LEFT OUTER JOIN vt1 ON ((CAST(vt0.c1 AS NUMERIC)) NOTNULL);
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (PRINTF(vt0.c1, vt0.c0, vt0.c2) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (PRINTF(vt0.c1, vt0.c0, vt0.c2) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 WHERE (((PRINTF(vt0.c1, vt0.c0, vt0.c2) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((vt0.c2)OR(vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))AND(CASE WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))OR(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)))))OR(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c2)OR(vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))AND(CASE WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))OR(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)))))OR(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c2)OR(vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))AND(CASE WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))OR(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)))))OR(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING MIN((+ (vt0.c2))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING (NOT (MIN((+ (vt0.c2))))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING ((MIN((+ (vt0.c2)))) ISNULL);
SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING MIN((+ (vt0.c2))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING (NOT (MIN((+ (vt0.c2))))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING ((MIN((+ (vt0.c2)))) ISNULL);
SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON CAST(vt1.c0 COLLATE RTRIM AS NUMERIC);
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON CAST(vt1.c0 COLLATE RTRIM AS NUMERIC) WHERE (((((vt0.c2))=((vt1.c0))) IN ((~ (vt0.c0))))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON CAST(vt1.c0 COLLATE RTRIM AS NUMERIC) WHERE ((NOT (((((vt0.c2))=((vt1.c0))) IN ((~ (vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON CAST(vt1.c0 COLLATE RTRIM AS NUMERIC) WHERE (((((((vt0.c2))=((vt1.c0))) IN ((~ (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON CAST(vt1.c0 COLLATE RTRIM AS NUMERIC);
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((((- (vt1.c0)))AND(vt1.c0)))AND((- (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((((- (vt1.c0)))AND(vt1.c0)))AND((- (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((((- (vt1.c0)))AND(vt1.c0)))AND((- (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 WHERE ((((vt0.c2 IN ()))-(vt0.c2))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0 WHERE ((NOT ((((vt0.c2 IN ()))-(vt0.c2))))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0 WHERE ((((((vt0.c2 IN ()))-(vt0.c2))) ISNULL)) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT ALL * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (json(CASE WHEN vt0.c2 THEN vt0.c2 END)) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (json(CASE WHEN vt0.c2 THEN vt0.c2 END)))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((json(CASE WHEN vt0.c2 THEN vt0.c2 END)) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((CAST(NULL AS REAL))<>(RTRIM(vt1.c0)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((CAST(NULL AS REAL))<>(RTRIM(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((CAST(NULL AS REAL))<>(RTRIM(vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c2, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM vt1, vt0 WHERE (CASE ((vt0.c2)>>(vt0.c1))  WHEN CASE WHEN vt1.c0 THEN vt0.c2 END THEN CAST(vt0.c0 AS BLOB) END) GROUP BY vt0.c2, vt0.c1 UNION SELECT vt0.c2, vt0.c1 FROM vt1, vt0 WHERE ((NOT (CASE ((vt0.c2)>>(vt0.c1))  WHEN CASE WHEN vt1.c0 THEN vt0.c2 END THEN CAST(vt0.c0 AS BLOB) END))) GROUP BY vt0.c2, vt0.c1 UNION SELECT vt0.c2, vt0.c1 FROM vt1, vt0 WHERE (((CASE ((vt0.c2)>>(vt0.c1))  WHEN CASE WHEN vt1.c0 THEN vt0.c2 END THEN CAST(vt0.c0 AS BLOB) END) ISNULL)) GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c1;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING TOTAL(x'') UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (TOTAL(x''))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((TOTAL(x'')) ISNULL);
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING TOTAL(x'') UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (TOTAL(x''))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((TOTAL(x'')) ISNULL);
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE ((NOT (vt1.c0)) COLLATE NOCASE) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT ((NOT (vt1.c0)) COLLATE NOCASE))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((((NOT (vt1.c0)) COLLATE NOCASE) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt1.c0) IS FALSE))IS((- (vt0.c0))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (((((vt1.c0) IS FALSE))IS((- (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((vt1.c0) IS FALSE))IS((- (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c0, vt0.c2, vt0.c1, vt1.c0 FROM vt1 INNER JOIN vt0 ON (((vt0.c0, vt1.c0, vt0.c1)) BETWEEN (('0.6882761765304259', CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c2 END, vt0.c1 COLLATE BINARY)) AND (((((vt0.c2, vt0.c1, vt0.c2)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c2, vt1.c0, vt1.c0))), ((vt0.c2) BETWEEN (vt0.c0) AND (x'')), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2))))) GROUP BY vt0.c0, vt0.c2, vt0.c1, vt1.c0;
SELECT vt0.c0, vt0.c2, vt0.c1, vt1.c0 FROM vt1 INNER JOIN vt0 ON (((vt0.c0, vt1.c0, vt0.c1)) BETWEEN (('0.6882761765304259', CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c2 END, vt0.c1 COLLATE BINARY)) AND (((((vt0.c2, vt0.c1, vt0.c2)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c2, vt1.c0, vt1.c0))), ((vt0.c2) BETWEEN (vt0.c0) AND (x'')), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2))))) WHERE (((vt0.c2)*((((vt0.c2, vt0.c2, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, '1058274504', vt0.c2)))))) GROUP BY vt0.c0, vt0.c2, vt0.c1, vt1.c0 UNION SELECT ALL vt0.c0, vt0.c2, vt0.c1, vt1.c0 FROM vt1 INNER JOIN vt0 ON (((vt0.c0, vt1.c0, vt0.c1)) BETWEEN (('0.6882761765304259', CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c2 END, vt0.c1 COLLATE BINARY)) AND (((((vt0.c2, vt0.c1, vt0.c2)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c2, vt1.c0, vt1.c0))), ((vt0.c2) BETWEEN (vt0.c0) AND (x'')), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2))))) WHERE ((NOT (((vt0.c2)*((((vt0.c2, vt0.c2, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, '1058274504', vt0.c2)))))))) GROUP BY vt0.c0, vt0.c2, vt0.c1, vt1.c0 UNION SELECT vt0.c0, vt0.c2, vt0.c1, vt1.c0 FROM vt1 INNER JOIN vt0 ON (((vt0.c0, vt1.c0, vt0.c1)) BETWEEN (('0.6882761765304259', CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c2 END, vt0.c1 COLLATE BINARY)) AND (((((vt0.c2, vt0.c1, vt0.c2)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c2, vt1.c0, vt1.c0))), ((vt0.c2) BETWEEN (vt0.c0) AND (x'')), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2))))) WHERE (((((vt0.c2)*((((vt0.c2, vt0.c2, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, '1058274504', vt0.c2)))))) ISNULL)) GROUP BY vt0.c0, vt0.c2, vt0.c1, vt1.c0;
SELECT ALL vt0.c0, vt0.c2, vt0.c1, vt1.c0 FROM vt1 INNER JOIN vt0 ON (((vt0.c0, vt1.c0, vt0.c1)) BETWEEN (('0.6882761765304259', CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c2 END, vt0.c1 COLLATE BINARY)) AND (((((vt0.c2, vt0.c1, vt0.c2)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c2, vt1.c0, vt1.c0))), ((vt0.c2) BETWEEN (vt0.c0) AND (x'')), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2))))) GROUP BY vt0.c0, vt0.c2, vt0.c1, vt1.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c2 FROM vt1 FULL OUTER JOIN vt0 ON ((CASE '-240067217'  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)|(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)))) GROUP BY vt1.c0, vt0.c1, vt0.c2;
SELECT vt1.c0, vt0.c1, vt0.c2 FROM vt1 FULL OUTER JOIN vt0 ON ((CASE '-240067217'  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)|(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)))) GROUP BY vt1.c0, vt0.c1, vt0.c2 HAVING COUNT((((vt0.c0, COUNT(GROUP_CONCAT(vt0.c2)), MAX(x''))) BETWEEN ((0.9089903601735827, vt0.c0, vt0.c1)) AND ((vt1.c0, GROUP_CONCAT(vt0.c0), AVG(MIN(COUNT(*))))))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c2 FROM vt1 FULL OUTER JOIN vt0 ON ((CASE '-240067217'  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)|(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)))) GROUP BY vt1.c0, vt0.c1, vt0.c2 HAVING (NOT (COUNT((((vt0.c0, COUNT(GROUP_CONCAT(vt0.c2)), MAX(x''))) BETWEEN ((0.9089903601735827, vt0.c0, vt0.c1)) AND ((vt1.c0, GROUP_CONCAT(vt0.c0), AVG(MIN(COUNT(*))))))))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c2 FROM vt1 FULL OUTER JOIN vt0 ON ((CASE '-240067217'  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)|(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)))) GROUP BY vt1.c0, vt0.c1, vt0.c2 HAVING ((COUNT((((vt0.c0, COUNT(GROUP_CONCAT(vt0.c2)), MAX(x''))) BETWEEN ((0.9089903601735827, vt0.c0, vt0.c1)) AND ((vt1.c0, GROUP_CONCAT(vt0.c0), AVG(MIN(COUNT(*)))))))) ISNULL);
SELECT ALL TOTAL(NULL) FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((0x7d39ac03)) AND ((CAST(vt1.c0 AS NUMERIC)))) ASC  NULLS LAST, ((((vt1.c0))=((vt1.c0))) IN ())  NULLS FIRST, '-470350073'  NULLS LAST;
SELECT ALL vt0.c2, vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1;
SELECT vt0.c2, vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1 WHERE (((((0x63cfe733)<>(vt0.c0))) IS FALSE)) UNION ALL SELECT vt0.c2, vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1 WHERE ((NOT (((((0x63cfe733)<>(vt0.c0))) IS FALSE)))) UNION ALL SELECT vt0.c2, vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1 WHERE (((((((0X63cfe733)!=(vt0.c0))) IS FALSE)) ISNULL));
SELECT ALL vt0.c2, vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((1935946416) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) AND (vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((1935946416) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) AND (vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((1935946416) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) AND (vt1.c0))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c2, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((+ (vt0.c0 COLLATE NOCASE))) GROUP BY vt0.c2, vt0.c0, vt1.c0, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT ((+ (vt0.c0 COLLATE NOCASE))))) GROUP BY vt0.c2, vt0.c0, vt1.c0, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((((+ (vt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c2, vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2, vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2, vt0.c1 HAVING ((((vt0.c2)OR(COUNT(TOTAL(vt0.c0)))))==(CASE vt1.c0  WHEN AVG(vt1.c0) THEN vt1.c0 WHEN vt0.c1 THEN COUNT(*) WHEN COUNT(vt0.c2) THEN GROUP_CONCAT(AVG(GROUP_CONCAT(vt0.c0))) END)) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2, vt0.c1 HAVING (NOT (((((vt0.c2)OR(COUNT(TOTAL(vt0.c0)))))=(CASE vt1.c0  WHEN AVG(vt1.c0) THEN vt1.c0 WHEN vt0.c1 THEN COUNT(*) WHEN COUNT(vt0.c2) THEN GROUP_CONCAT(AVG(GROUP_CONCAT(vt0.c0))) END)))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2, vt0.c1 HAVING ((((((vt0.c2)OR(COUNT(TOTAL(vt0.c0)))))=(CASE vt1.c0  WHEN AVG(vt1.c0) THEN vt1.c0 WHEN vt0.c1 THEN COUNT(*) WHEN COUNT(vt0.c2) THEN GROUP_CONCAT(AVG(GROUP_CONCAT(vt0.c0))) END))) ISNULL);
SELECT * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE ('0.8808684853856166') UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT ('0.8808684853856166'))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((('0.8808684853856166') ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT)) NOTNULL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS TEXT)) NOTNULL)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((CAST(vt1.c0 AS TEXT)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE (~ (vt1.c0))  WHEN x'' THEN LIKELY(vt1.c0) ELSE NULL END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE (~ (vt1.c0))  WHEN x'' THEN LIKELY(vt1.c0) ELSE NULL END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE (~ (vt1.c0))  WHEN x'' THEN LIKELY(vt1.c0) ELSE NULL END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c2, vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt0.c2, vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt1.c0, vt0.c1, vt0.c0 HAVING SUM(vt0.c0 COLLATE BINARY) UNION ALL SELECT vt0.c2, vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt1.c0, vt0.c1, vt0.c0 HAVING (NOT (SUM(vt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL vt0.c2, vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt1.c0, vt0.c1, vt0.c0 HAVING ((SUM(vt0.c0 COLLATE BINARY)) ISNULL);
SELECT vt0.c2, vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt0.c2, vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt1.c0, vt0.c1, vt0.c0 HAVING SUM(vt0.c0 COLLATE BINARY) UNION ALL SELECT vt0.c2, vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt1.c0, vt0.c1, vt0.c0 HAVING (NOT (SUM(vt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL vt0.c2, vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt1.c0, vt0.c1, vt0.c0 HAVING ((SUM(vt0.c0 COLLATE BINARY)) ISNULL);
SELECT vt0.c2, vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt1.c0, vt0.c1, vt0.c0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (MAX(((vt1.c0)<=(vt1.c0)), ((vt1.c0) BETWEEN (5.7759397E8) AND (1653084450)), (((vt1.c0))>((vt1.c0))), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), (+ (vt1.c0)), vt1.c0 COLLATE BINARY)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (MAX(((vt1.c0)<=(vt1.c0)), ((vt1.c0) BETWEEN (5.7759397E8) AND (1653084450)), (((vt1.c0))>((vt1.c0))), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), (+ (vt1.c0)), vt1.c0 COLLATE BINARY)))) UNION ALL SELECT ALL * FROM vt1 WHERE (((MAX(((vt1.c0)<=(vt1.c0)), ((vt1.c0) BETWEEN (5.7759397E8) AND (1653084450)), (((vt1.c0))>((vt1.c0))), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), (+ (vt1.c0)), vt1.c0 COLLATE BINARY)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0 NOT INDEXED, vt1 WHERE (((QUOTE(vt0.c1))!=(((vt0.c1)OR(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((QUOTE(vt0.c1))!=(((vt0.c1)OR(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((QUOTE(vt0.c1))<>(((vt0.c1)OR(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON (NOT (((vt0.c1)AND(vt0.c0)))) GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON (NOT (((vt0.c1)AND(vt0.c0)))) WHERE ((- ((+ (vt1.c0))))) GROUP BY vt1.c0, vt0.c0, vt0.c1 UNION SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON (NOT (((vt0.c1)AND(vt0.c0)))) WHERE ((NOT ((- ((+ (vt1.c0))))))) GROUP BY vt1.c0, vt0.c0, vt0.c1 UNION SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON (NOT (((vt0.c1)AND(vt0.c0)))) WHERE ((((- ((+ (vt1.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON (NOT (((vt0.c1)AND(vt0.c0)))) GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT ALL vt0.c2 FROM vt0 CROSS JOIN vt1 ON CAST((vt0.c2 IN (vt0.c0)) AS REAL) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 CROSS JOIN vt1 ON CAST((vt0.c2 IN (vt0.c0)) AS REAL) GROUP BY vt0.c2 HAVING ((MIN(AVG(vt0.c1)))%(((((((((AVG(vt0.c2))AND(vt1.c0)))AND(GROUP_CONCAT(0.23128288558484122))))AND(COUNT(*))))AND(MIN(vt0.c0))))) UNION ALL SELECT vt0.c2 FROM vt0 CROSS JOIN vt1 ON CAST((vt0.c2 IN (vt0.c0)) AS REAL) GROUP BY vt0.c2 HAVING (NOT (((MIN(AVG(vt0.c1)))%(((((((((AVG(vt0.c2))AND(vt1.c0)))AND(GROUP_CONCAT(0.23128288558484122))))AND(COUNT(*))))AND(MIN(vt0.c0))))))) UNION ALL SELECT vt0.c2 FROM vt0 CROSS JOIN vt1 ON CAST((vt0.c2 IN (vt0.c0)) AS REAL) GROUP BY vt0.c2 HAVING ((((MIN(AVG(vt0.c1)))%(((((((((AVG(vt0.c2))AND(vt1.c0)))AND(GROUP_CONCAT(0.23128288558484122))))AND(COUNT(*))))AND(MIN(vt0.c0)))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (LOWER(DISTINCT '+X3椂Rc,a')) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (LOWER(DISTINCT '+X3椂Rc,a')))) UNION SELECT DISTINCT * FROM vt1 WHERE (((LOWER(DISTINCT '+X3椂Rc,a')) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING ((AVG(vt0.c1))<(COUNT(vt0.c2))) COLLATE BINARY UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING (NOT (((AVG(vt0.c1))<(COUNT(vt0.c2))) COLLATE BINARY)) UNION ALL SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING ((((AVG(vt0.c1))<(COUNT(vt0.c2))) COLLATE BINARY) ISNULL);
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING ((AVG(vt0.c1))<(COUNT(vt0.c2))) COLLATE BINARY UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING (NOT (((AVG(vt0.c1))<(COUNT(vt0.c2))) COLLATE BINARY)) UNION ALL SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING ((((AVG(vt0.c1))<(COUNT(vt0.c2))) COLLATE BINARY) ISNULL);
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((((vt0.c1)OR((vt0.c2 IN ()))))OR(((((vt1.c0)AND(vt0.c2)))AND(vt0.c1))));
SELECT * FROM vt0 CROSS JOIN vt1 ON ((((vt0.c1)OR((vt0.c2 IN ()))))OR(((((vt1.c0)AND(vt0.c2)))AND(vt0.c1)))) WHERE (((vt0.c0 COLLATE NOCASE) IS FALSE)) UNION ALL SELECT * FROM vt0 CROSS JOIN vt1 ON ((((vt0.c1)OR((vt0.c2 IN ()))))OR(((((vt1.c0)AND(vt0.c2)))AND(vt0.c1)))) WHERE ((NOT (((vt0.c0 COLLATE NOCASE) IS FALSE)))) UNION ALL SELECT * FROM vt0 CROSS JOIN vt1 ON ((((vt0.c1)OR((vt0.c2 IN ()))))OR(((((vt1.c0)AND(vt0.c2)))AND(vt0.c1)))) WHERE (((((vt0.c0 COLLATE NOCASE) IS FALSE)) ISNULL));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((((vt0.c1)OR((vt0.c2 IN ()))))OR(((((vt1.c0)AND(vt0.c2)))AND(vt0.c1))));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))!=(((vt1.c0)&(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS TEXT))!=(((vt1.c0)&(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c0 AS TEXT))!=(((vt1.c0)&(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (CASE WHEN CAST(vt0.c1 AS TEXT) THEN x'' END) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (CASE WHEN CAST(vt0.c1 AS TEXT) THEN x'' END))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((CASE WHEN CAST(vt0.c1 AS TEXT) THEN x'' END) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt1.c0, vt0.c2, vt0.c0, vt0.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt1.c0)))AND(vt0.c1))) IS FALSE) GROUP BY vt1.c0, vt0.c2, vt0.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c2, vt0.c0, vt0.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt1.c0)))AND(vt0.c1))) IS FALSE) GROUP BY vt1.c0, vt0.c2, vt0.c0, vt0.c1 HAVING GROUP_CONCAT(((vt0.c1)*(GROUP_CONCAT(vt0.c2)))) UNION ALL SELECT ALL vt1.c0, vt0.c2, vt0.c0, vt0.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt1.c0)))AND(vt0.c1))) IS FALSE) GROUP BY vt1.c0, vt0.c2, vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(((vt0.c1)*(GROUP_CONCAT(vt0.c2)))))) UNION ALL SELECT ALL vt1.c0, vt0.c2, vt0.c0, vt0.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt1.c0)))AND(vt0.c1))) IS FALSE) GROUP BY vt1.c0, vt0.c2, vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(((vt0.c1)*(GROUP_CONCAT(vt0.c2))))) ISNULL);
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (463817201) UNION ALL SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (463817201))) UNION ALL SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (((463817201) ISNULL));
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt0.c2)) NOT BETWEEN (((vt0.c2 IN (0x563e163e, vt0.c0)))) AND ((CAST(vt0.c1 AS NUMERIC))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((((vt0.c2)) NOT BETWEEN (((vt0.c2 IN (0X563e163e, vt0.c0)))) AND ((CAST(vt0.c1 AS NUMERIC))))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((vt0.c2)) NOT BETWEEN (((vt0.c2 IN (0X563e163e, vt0.c0)))) AND ((CAST(vt0.c1 AS NUMERIC))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (NULL) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 NOT INDEXED WHERE ((NOT (NULL))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((NULL) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING TRIM('0.7032565289351744') UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (TRIM('0.7032565289351744'))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((TRIM('0.7032565289351744')) ISNULL);
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING TRIM('0.7032565289351744') UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (TRIM('0.7032565289351744'))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((TRIM('0.7032565289351744')) ISNULL);
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(0.04590208274437202 AS INTEGER))&(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((CAST(0.04590208274437202 AS INTEGER))&(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((CAST(0.04590208274437202 AS INTEGER))&(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt0.c0)OR(vt0.c1)))IS(vt0.c1))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (((((vt0.c0)OR(vt0.c1)))IS(vt0.c1))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))IS(vt0.c1))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt0.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt0.c1, vt0.c2, vt1.c0;
SELECT vt0.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt0 NATURAL JOIN vt1 WHERE (CAST(((vt0.c0)>>(vt0.c2)) AS INTEGER)) GROUP BY vt0.c0, vt0.c1, vt0.c2, vt1.c0 UNION SELECT vt0.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt0 NATURAL JOIN vt1 WHERE ((NOT (CAST(((vt0.c0)>>(vt0.c2)) AS INTEGER)))) GROUP BY vt0.c0, vt0.c1, vt0.c2, vt1.c0 UNION SELECT vt0.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt0 NATURAL JOIN vt1 WHERE (((CAST(((vt0.c0)>>(vt0.c2)) AS INTEGER)) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt0.c2, vt1.c0;
SELECT vt0.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt0.c1, vt0.c2, vt1.c0;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING AVG(((MIN(MAX(vt0.c0))) ISNULL)) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING (NOT (AVG(((MIN(MAX(vt0.c0))) ISNULL)))) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING ((AVG(((MIN(MAX(vt0.c0))) ISNULL))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (TRIM((vt0.c2 IN ()), ((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c2)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (TRIM((vt0.c2 IN ()), ((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c2)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((TRIM((vt0.c2 IN ()), ((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c2)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ('-807216296') UNION SELECT DISTINCT vt1.c0 FROM vt1 NOT INDEXED WHERE ((NOT ('-807216296'))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((('-807216296') ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c1, vt0.c0, vt0.c2, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2, vt1.c0;
SELECT vt0.c1, vt0.c0, vt0.c2, vt1.c0 FROM vt1, vt0 WHERE (((((vt0.c1)<(0.0547142635566773)))!=(LOWER('1156494628')))) GROUP BY vt0.c1, vt0.c0, vt0.c2, vt1.c0 UNION SELECT vt0.c1, vt0.c0, vt0.c2, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((vt0.c1)<(0.0547142635566773)))<>(LOWER('1156494628')))))) GROUP BY vt0.c1, vt0.c0, vt0.c2, vt1.c0 UNION SELECT vt0.c1, vt0.c0, vt0.c2, vt1.c0 FROM vt1, vt0 WHERE (((((((vt0.c1)<(0.0547142635566773)))<>(LOWER('1156494628')))) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt0.c2, vt1.c0;
SELECT vt0.c1, vt0.c0, vt0.c2, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2, vt1.c0;
SELECT vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1 HAVING GROUP_CONCAT(-1939697001) UNION ALL SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1 HAVING (NOT (GROUP_CONCAT(-1939697001))) UNION ALL SELECT vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1 HAVING ((GROUP_CONCAT(-1939697001)) ISNULL);
SELECT vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1 HAVING GROUP_CONCAT(-1939697001) UNION ALL SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1 HAVING (NOT (GROUP_CONCAT(-1939697001))) UNION ALL SELECT vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1 HAVING ((GROUP_CONCAT(-1939697001)) ISNULL);
SELECT vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (TYPEOF(((vt0.c1)|(vt0.c2)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (TYPEOF(((vt0.c1)|(vt0.c2)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((TYPEOF(((vt0.c1)|(vt0.c2)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((vt1.c0 COLLATE NOCASE IN ())) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((vt1.c0 COLLATE NOCASE IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0 COLLATE NOCASE IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c2, vt0.c1 FROM vt1 CROSS JOIN vt0 ON ((NULL) IS TRUE) GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM vt1 CROSS JOIN vt0 ON ((NULL) IS TRUE) WHERE ('-1951384002') GROUP BY vt0.c2, vt0.c1 UNION SELECT vt0.c2, vt0.c1 FROM vt1 CROSS JOIN vt0 ON ((NULL) IS TRUE) WHERE ((NOT ('-1951384002'))) GROUP BY vt0.c2, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c1 FROM vt1 CROSS JOIN vt0 ON ((NULL) IS TRUE) WHERE ((('-1951384002') ISNULL)) GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM vt1 CROSS JOIN vt0 ON ((NULL) IS TRUE) GROUP BY vt0.c2, vt0.c1;
SELECT vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2, vt0.c1, vt0.c0 HAVING NULL UNION ALL SELECT vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2, vt0.c1, vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2, vt0.c1, vt0.c0 HAVING ((NULL) ISNULL);
SELECT vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2, vt0.c1, vt0.c0 HAVING NULL UNION ALL SELECT vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2, vt0.c1, vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2, vt0.c1, vt0.c0 HAVING ((NULL) ISNULL);
SELECT vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2, vt0.c1, vt0.c0;
SELECT ALL * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0) ISNULL))&(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((((vt0.c0) ISNULL))&(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))))))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((((((vt0.c0) ISNULL))&(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))))) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON (((vt0.c0, x'', vt0.c2)) BETWEEN ((CAST(vt1.c0 AS BLOB), ((vt0.c1)||(vt1.c0)), ((vt0.c2) NOT NULL))) AND (((((vt0.c1, vt1.c0, vt1.c0))>((vt0.c2, vt1.c0, vt0.c1))), NULLIF(0.5771150764619416, vt0.c0), ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON (((vt0.c0, x'', vt0.c2)) BETWEEN ((CAST(vt1.c0 AS BLOB), ((vt0.c1)||(vt1.c0)), ((vt0.c2) NOT NULL))) AND (((((vt0.c1, vt1.c0, vt1.c0))>((vt0.c2, vt1.c0, vt0.c1))), NULLIF(0.5771150764619416, vt0.c0), ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0))))) WHERE ((((((vt0.c2, vt0.c1, vt0.c2))>(('-848912170', x'cf66', vt0.c2)))) IS TRUE)) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON (((vt0.c0, x'', vt0.c2)) BETWEEN ((CAST(vt1.c0 AS BLOB), ((vt0.c1)||(vt1.c0)), ((vt0.c2) NOT NULL))) AND (((((vt0.c1, vt1.c0, vt1.c0))>((vt0.c2, vt1.c0, vt0.c1))), NULLIF(0.5771150764619416, vt0.c0), ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0))))) WHERE ((NOT ((((((vt0.c2, vt0.c1, vt0.c2))>(('-848912170', x'cf66', vt0.c2)))) IS TRUE)))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON (((vt0.c0, x'', vt0.c2)) BETWEEN ((CAST(vt1.c0 AS BLOB), ((vt0.c1)||(vt1.c0)), ((vt0.c2) NOT NULL))) AND (((((vt0.c1, vt1.c0, vt1.c0))>((vt0.c2, vt1.c0, vt0.c1))), NULLIF(0.5771150764619416, vt0.c0), ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0))))) WHERE ((((((((vt0.c2, vt0.c1, vt0.c2))>(('-848912170', x'cf66', vt0.c2)))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt1 CROSS JOIN vt0 ON (((vt0.c0, x'', vt0.c2)) BETWEEN ((CAST(vt1.c0 AS BLOB), ((vt0.c1)||(vt1.c0)), ((vt0.c2) NOT NULL))) AND (((((vt0.c1, vt1.c0, vt1.c0))>((vt0.c2, vt1.c0, vt0.c1))), NULLIF(0.5771150764619416, vt0.c0), ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE (CAST(((vt0.c1)>>(vt0.c1)) AS BLOB)) GROUP BY vt0.c2, vt0.c0, vt0.c1 UNION SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CAST(((vt0.c1)>>(vt0.c1)) AS BLOB)))) GROUP BY vt0.c2, vt0.c0, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST(((vt0.c1)>>(vt0.c1)) AS BLOB)) ISNULL)) GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(COUNT(*) COLLATE RTRIM) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(COUNT(*) COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(COUNT(*) COLLATE RTRIM)) ISNULL);
SELECT ALL vt0.c2, vt0.c0 FROM vt0, vt1;
SELECT vt0.c2, vt0.c0 FROM vt0 NOT INDEXED, vt1 WHERE ((~ (((vt0.c2)||(vt0.c2))))) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM vt0, vt1 WHERE ((NOT ((~ (((vt0.c2)||(vt0.c2))))))) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM vt0, vt1 WHERE ((((~ (((vt0.c2)||(vt0.c2))))) ISNULL));
SELECT ALL vt0.c2, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt0, vt1 WHERE (((((((vt0.c2)AND(vt0.c1)))OR('')))+((((vt1.c0))!=((vt1.c0)))))) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt0, vt1 WHERE ((NOT (((((((vt0.c2)AND(vt0.c1)))OR('')))+((((vt1.c0))<>((vt1.c0)))))))) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt0, vt1 WHERE (((((((((vt0.c2)AND(vt0.c1)))OR('')))+((((vt1.c0))<>((vt1.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt0, vt1;
SELECT ALL vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1;
SELECT vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((((vt0.c1)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((x'')) AND ((x'8a8c'))))) AND (((((vt0.c1, 0X256e198d, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c2, vt1.c0))))))) GROUP BY vt1.c0, vt0.c1 UNION SELECT ALL vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT ((((vt0.c1)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((x'')) AND ((x'8a8c'))))) AND (((((vt0.c1, 0X256e198d, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c2, vt1.c0))))))))) GROUP BY vt1.c0, vt0.c1 UNION SELECT vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((((((vt0.c1)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((x'')) AND ((x'8a8c'))))) AND (((((vt0.c1, 0X256e198d, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c2, vt1.c0))))))) ISNULL)) GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((vt0.c0)/(GROUP_CONCAT(GROUP_CONCAT(MAX(vt0.c1))))))&(MAX(SUM(MAX(x''))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((((vt0.c0)/(GROUP_CONCAT(GROUP_CONCAT(MAX(vt0.c1))))))&(MAX(SUM(MAX(x''))))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((((vt0.c0)/(GROUP_CONCAT(GROUP_CONCAT(MAX(vt0.c1))))))&(MAX(SUM(MAX(x'')))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0) IS TRUE) AS BLOB)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0) IS TRUE) AS BLOB)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0) IS TRUE) AS BLOB)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(((vt0.c0)&(vt0.c2)) AS TEXT)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(((vt0.c0)&(vt0.c2)) AS TEXT)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(((vt0.c0)&(vt0.c2)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (SUBSTR(vt0.c0 COLLATE BINARY, (~ (vt0.c1)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (SUBSTR(vt0.c0 COLLATE BINARY, (~ (vt0.c1)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((SUBSTR(vt0.c0 COLLATE BINARY, (~ (vt0.c1)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING AVG(COUNT(0Xffffffff9715d9fa)) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (AVG(COUNT(0xffffffff9715d9fa)))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((AVG(COUNT(0Xffffffff9715d9fa))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((~ (vt1.c0))) ISNULL)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((((~ (vt1.c0))) ISNULL)))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((((~ (vt1.c0))) ISNULL)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((- (((vt1.c0)OR(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((- (((vt1.c0)OR(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((- (((vt1.c0)OR(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (CASE ((((vt0.c2)OR(vt0.c1)))OR(vt0.c2))  WHEN CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END THEN IFNULL(DISTINCT vt0.c1, vt0.c2) WHEN ((vt0.c0)<=(vt0.c2)) THEN vt0.c0 COLLATE BINARY WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c0 END WHEN ((vt0.c1)IS NOT(vt0.c2)) THEN CAST(vt0.c2 AS REAL) WHEN (((vt0.c0, vt0.c1, vt0.c2))>((vt0.c2, 0.5361572968178765, vt0.c1))) THEN RTRIM(x'') ELSE CAST(vt0.c1 AS BLOB) END) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (CASE ((((vt0.c2)OR(vt0.c1)))OR(vt0.c2))  WHEN CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END THEN IFNULL(DISTINCT vt0.c1, vt0.c2) WHEN ((vt0.c0)<=(vt0.c2)) THEN vt0.c0 COLLATE BINARY WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c0 END WHEN ((vt0.c1)IS NOT(vt0.c2)) THEN CAST(vt0.c2 AS REAL) WHEN (((vt0.c0, vt0.c1, vt0.c2))>((vt0.c2, 0.5361572968178765, vt0.c1))) THEN RTRIM(x'') ELSE CAST(vt0.c1 AS BLOB) END))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((CASE ((((vt0.c2)OR(vt0.c1)))OR(vt0.c2))  WHEN CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END THEN IFNULL(DISTINCT vt0.c1, vt0.c2) WHEN ((vt0.c0)<=(vt0.c2)) THEN vt0.c0 COLLATE BINARY WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c0 END WHEN ((vt0.c1)IS NOT(vt0.c2)) THEN CAST(vt0.c2 AS REAL) WHEN (((vt0.c0, vt0.c1, vt0.c2))>((vt0.c2, 0.5361572968178765, vt0.c1))) THEN RTRIM(x'') ELSE CAST(vt0.c1 AS BLOB) END) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(GROUP_CONCAT(GROUP_CONCAT(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(GROUP_CONCAT(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(GROUP_CONCAT(GROUP_CONCAT(vt1.c0)))) ISNULL);
SELECT vt0.c2, vt0.c0 FROM vt1, vt0;
SELECT vt0.c2, vt0.c0 FROM vt1, vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt1 NOT INDEXED, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM vt1, vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c2, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt0 CROSS JOIN vt1 ON CASE WHEN ((vt0.c1)<=(vt0.c0)) THEN (vt0.c2 IN (NULL, vt1.c0)) WHEN ((vt1.c0)<<(vt0.c1)) THEN ((vt1.c0)&(vt1.c0)) WHEN vt0.c2 THEN LIKELIHOOD(vt0.c0, 0.43587995447095684) END;
SELECT DISTINCT vt1.c0 FROM vt0 CROSS JOIN vt1 ON CASE WHEN ((vt0.c1)<=(vt0.c0)) THEN (vt0.c2 IN (NULL, vt1.c0)) WHEN ((vt1.c0)<<(vt0.c1)) THEN ((vt1.c0)&(vt1.c0)) WHEN vt0.c2 THEN LIKELIHOOD(vt0.c0, 0.43587995447095684) END WHERE ((((((vt0.c0))<=((vt1.c0))))<(((vt0.c2) NOT NULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt0 CROSS JOIN vt1 ON CASE WHEN ((vt0.c1)<=(vt0.c0)) THEN (vt0.c2 IN (NULL, vt1.c0)) WHEN ((vt1.c0)<<(vt0.c1)) THEN ((vt1.c0)&(vt1.c0)) WHEN vt0.c2 THEN LIKELIHOOD(vt0.c0, 0.43587995447095684) END WHERE ((NOT ((((((vt0.c0))<=((vt1.c0))))<(((vt0.c2) NOT NULL)))))) UNION SELECT DISTINCT vt1.c0 FROM vt0 CROSS JOIN vt1 ON CASE WHEN ((vt0.c1)<=(vt0.c0)) THEN (vt0.c2 IN (NULL, vt1.c0)) WHEN ((vt1.c0)<<(vt0.c1)) THEN ((vt1.c0)&(vt1.c0)) WHEN vt0.c2 THEN LIKELIHOOD(vt0.c0, 0.43587995447095684) END WHERE ((((((((vt0.c0))<=((vt1.c0))))<(((vt0.c2) NOT NULL)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0 CROSS JOIN vt1 ON CASE WHEN ((vt0.c1)<=(vt0.c0)) THEN (vt0.c2 IN (NULL, vt1.c0)) WHEN ((vt1.c0)<<(vt0.c1)) THEN ((vt1.c0)&(vt1.c0)) WHEN vt0.c2 THEN LIKELIHOOD(vt0.c0, 0.43587995447095684) END;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (x'') GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (x''))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((x'') ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c1, vt0.c0 HAVING GROUP_CONCAT((COUNT(vt0.c0) IN ())) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT((COUNT(vt0.c0) IN ())))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((GROUP_CONCAT((COUNT(vt0.c0) IN ()))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c1, vt0.c0 HAVING GROUP_CONCAT((COUNT(vt0.c0) IN ())) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT((COUNT(vt0.c0) IN ())))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((GROUP_CONCAT((COUNT(vt0.c0) IN ()))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c2 FROM vt1, vt0;
SELECT vt0.c2 FROM vt1, vt0 WHERE (((((vt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)))=((((vt0.c0))>((vt0.c2)))))) UNION ALL SELECT vt0.c2 FROM vt1, vt0 WHERE ((NOT (((((vt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)))==((((vt0.c0))>((vt0.c2)))))))) UNION ALL SELECT ALL vt0.c2 FROM vt1, vt0 WHERE (((((((vt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)))=((((vt0.c0))>((vt0.c2)))))) ISNULL));
SELECT ALL vt0.c2 FROM vt1, vt0;
SELECT DISTINCT vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c2 FROM vt0 WHERE (-1.603927472E9) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE ((NOT (-1.603927472E9))) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE (((-1.603927472E9) ISNULL));
SELECT DISTINCT vt0.c2 FROM vt0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT ((NOT (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE ((((NOT (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING CAST(TOTAL(SUM(AVG(vt0.c2))) AS INTEGER) UNION ALL SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING (NOT (CAST(TOTAL(SUM(AVG(vt0.c2))) AS INTEGER))) UNION ALL SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING ((CAST(TOTAL(SUM(AVG(vt0.c2))) AS INTEGER)) ISNULL);
SELECT vt0.c2 FROM vt0;
SELECT vt0.c2 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c2 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c2 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c2 FROM vt0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1 WHERE (((((((((vt0.c1 COLLATE RTRIM)AND(('-644963791' IN ()))))AND(((vt0.c0)<<(vt0.c1)))))AND((((vt0.c0, vt0.c1, vt0.c1))<((vt0.c1, vt0.c1, vt0.c1))))))OR(((vt0.c0)>(vt0.c1))))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1 WHERE ((NOT (((((((((vt0.c1 COLLATE RTRIM)AND(('-644963791' IN ()))))AND(((vt0.c0)<<(vt0.c1)))))AND((((vt0.c0, vt0.c1, vt0.c1))<((vt0.c1, vt0.c1, vt0.c1))))))OR(((vt0.c0)>(vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1 WHERE (((((((((((vt0.c1 COLLATE RTRIM)AND(('-644963791' IN ()))))AND(((vt0.c0)<<(vt0.c1)))))AND((((vt0.c0, vt0.c1, vt0.c1))<((vt0.c1, vt0.c1, vt0.c1))))))OR(((vt0.c0)>(vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1;
SELECT ALL vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt1.c0;
SELECT vt0.c2, vt1.c0 FROM vt0, vt1 WHERE (((- (vt0.c0)) IN ())) GROUP BY vt0.c2, vt1.c0 UNION SELECT vt0.c2, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((- (vt0.c0)) IN ())))) GROUP BY vt0.c2, vt1.c0 UNION SELECT ALL vt0.c2, vt1.c0 FROM vt0, vt1 WHERE (((((- (vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c2, vt1.c0;
SELECT ALL vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt1.c0;
SELECT ALL vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((((vt0.c2)OR(vt0.c2)))AND(vt0.c1)))) AND ((((vt0.c2)<>(vt1.c0))))) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((((vt0.c2)OR(vt0.c2)))AND(vt0.c1)))) AND ((((vt0.c2)!=(vt1.c0))))) GROUP BY vt0.c1 HAVING (+ (COUNT(MIN(AVG(vt1.c0))))) UNION ALL SELECT vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((((vt0.c2)OR(vt0.c2)))AND(vt0.c1)))) AND ((((vt0.c2)!=(vt1.c0))))) GROUP BY vt0.c1 HAVING (NOT ((+ (COUNT(MIN(AVG(vt1.c0))))))) UNION ALL SELECT vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((((vt0.c2)OR(vt0.c2)))AND(vt0.c1)))) AND ((((vt0.c2)!=(vt1.c0))))) GROUP BY vt0.c1 HAVING (((+ (COUNT(MIN(AVG(vt1.c0)))))) ISNULL);
SELECT ALL * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c1) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c1) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT vt0.c1, vt0.c0, vt0.c2 FROM vt0 LEFT OUTER JOIN vt1 ON '0.7753219666160004';
SELECT DISTINCT vt0.c1, vt0.c0, vt0.c2 FROM vt0 LEFT OUTER JOIN vt1 ON '0.7753219666160004' WHERE (((GLOB(vt0.c0, vt1.c0))>=(vt0.c1))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt0.c2 FROM vt0 LEFT OUTER JOIN vt1 ON '0.7753219666160004' WHERE ((NOT (((GLOB(vt0.c0, vt1.c0))>=(vt0.c1))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt0.c2 FROM vt0 LEFT OUTER JOIN vt1 ON '0.7753219666160004' WHERE (((((GLOB(vt0.c0, vt1.c0))>=(vt0.c1))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, vt0.c2 FROM vt0 LEFT OUTER JOIN vt1 ON '0.7753219666160004';
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c2) IS FALSE)) AND ((vt0.c0 IN ())))) GROUP BY vt0.c2, vt0.c0, vt0.c1 UNION SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c2) IS FALSE)) AND ((vt0.c0 IN ())))))) GROUP BY vt0.c2, vt0.c0, vt0.c1 UNION SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c2) IS FALSE)) AND ((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2;
SELECT ALL vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2 HAVING ((AVG(vt0.c2))|((((0x248e2bc7)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2 HAVING (NOT (((AVG(vt0.c2))|((((0x248e2bc7)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2 HAVING ((((AVG(vt0.c2))|((((0X248e2bc7)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2)))))) ISNULL);
SELECT ALL vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2;
SELECT ALL vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2 HAVING ((AVG(vt0.c2))|((((0x248e2bc7)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2 HAVING (NOT (((AVG(vt0.c2))|((((0x248e2bc7)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2 HAVING ((((AVG(vt0.c2))|((((0X248e2bc7)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2)))))) ISNULL);
SELECT ALL vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((ABS(-1.252572897E9)))<((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((ABS(-1.252572897E9)))<((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((ABS(-1.252572897E9)))<((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c2)OR(vt0.c1)))IS((~ (vt0.c1))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c2)OR(vt0.c1)))IS((~ (vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c2)OR(vt0.c1)))IS((~ (vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END IN ())) GROUP BY vt0.c2, vt0.c1 UNION SELECT vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END IN ())))) GROUP BY vt0.c2, vt0.c1 UNION SELECT vt0.c2, vt0.c1 FROM vt0 WHERE ((((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END IN ())) ISNULL)) GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((x'') BETWEEN (MAX(MIN(MIN(vt1.c0)))) AND (AVG(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((x'') BETWEEN (MAX(MIN(MIN(vt1.c0)))) AND (AVG(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((x'') BETWEEN (MAX(MIN(MIN(vt1.c0)))) AND (AVG(vt1.c0)))) ISNULL);
SELECT vt0.c2, vt0.c1 FROM vt1, vt0;
SELECT vt0.c2, vt0.c1 FROM vt1, vt0 WHERE ((((vt0.c2) NOTNULL) IN (HEX(vt1.c0)))) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM vt1, vt0 WHERE ((NOT ((((vt0.c2) NOTNULL) IN (HEX(vt1.c0)))))) UNION ALL SELECT vt0.c2, vt0.c1 FROM vt1, vt0 WHERE ((((((vt0.c2) NOTNULL) IN (HEX(vt1.c0)))) ISNULL));
SELECT vt0.c2, vt0.c1 FROM vt1, vt0;
SELECT DISTINCT vt0.c1 FROM vt1, vt0;
SELECT DISTINCT vt0.c1 FROM vt1 NOT INDEXED, vt0 WHERE (CASE (('-1397269462')&(vt1.c0))  WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt0.c2)) THEN ((vt1.c0)LIKE(vt0.c0)) ELSE NULL END) UNION SELECT DISTINCT vt0.c1 FROM vt1, vt0 WHERE ((NOT (CASE (('-1397269462')&(vt1.c0))  WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt0.c2)) THEN ((vt1.c0)LIKE(vt0.c0)) ELSE NULL END))) UNION SELECT DISTINCT vt0.c1 FROM vt1, vt0 WHERE (((CASE (('-1397269462')&(vt1.c0))  WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt0.c2)) THEN ((vt1.c0)LIKE(vt0.c0)) ELSE NULL END) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c2)IS(x'')))LIKE(CAST(vt0.c2 AS BLOB)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c2)IS(x'')))LIKE(CAST(vt0.c2 AS BLOB)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c2)IS(x'')))LIKE(CAST(vt0.c2 AS BLOB)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0)))*((vt1.c0 IN ())))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((vt1.c0 IN (vt1.c0)))*((vt1.c0 IN ())))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((((vt1.c0 IN (vt1.c0)))*((vt1.c0 IN ())))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (LOWER(((vt0.c1) NOTNULL))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (LOWER(((vt0.c1) NOTNULL))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((LOWER(((vt0.c1) NOTNULL))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2;
SELECT vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2 HAVING SUM(((AVG(vt0.c1)) NOT BETWEEN (vt0.c2) AND (vt0.c1))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2 HAVING (NOT (SUM(((AVG(vt0.c1)) NOT BETWEEN (vt0.c2) AND (vt0.c1))))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2 HAVING ((SUM(((AVG(vt0.c1)) NOT BETWEEN (vt0.c2) AND (vt0.c1)))) ISNULL);
SELECT ALL vt0.c1, vt0.c2, vt0.c0, vt1.c0 FROM vt0 NATURAL JOIN vt1;
SELECT ALL vt0.c1, vt0.c2, vt0.c0, vt1.c0 FROM vt0 NATURAL JOIN vt1 WHERE ((vt0.c2 COLLATE NOCASE IN ())) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0, vt1.c0 FROM vt0 NATURAL JOIN vt1 WHERE ((NOT ((vt0.c2 COLLATE NOCASE IN ())))) UNION ALL SELECT ALL vt0.c1, vt0.c2, vt0.c0, vt1.c0 FROM vt0 NATURAL JOIN vt1 WHERE ((((vt0.c2 COLLATE NOCASE IN ())) ISNULL));
SELECT ALL vt0.c1, vt0.c2, vt0.c0, vt1.c0 FROM vt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((vt1.c0) IS TRUE) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((vt1.c0) IS TRUE) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt1.c0) IS TRUE) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.c1, vt0.c2, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c2, vt1.c0;
SELECT ALL vt0.c1, vt0.c2, vt1.c0 FROM vt1, vt0 WHERE ((((NOT (vt1.c0))) ISNULL)) GROUP BY vt0.c1, vt0.c2, vt1.c0 UNION SELECT vt0.c1, vt0.c2, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((NOT (vt1.c0))) ISNULL)))) GROUP BY vt0.c1, vt0.c2, vt1.c0 UNION SELECT vt0.c1, vt0.c2, vt1.c0 FROM vt1, vt0 WHERE ((((((NOT (vt1.c0))) ISNULL)) ISNULL)) GROUP BY vt0.c1, vt0.c2, vt1.c0;
SELECT vt0.c1, vt0.c2, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c2, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT ALL MIN(((((CAST(vt0.c1 AS TEXT))AND(vt0.c0)))OR((+ (vt0.c2))))) FROM vt0;
SELECT ALL vt0.c2 FROM vt0;
SELECT ALL vt0.c2 FROM vt0 WHERE (((((SQLITE_COMPILEOPTION_GET(vt0.c0))OR(HEX(vt0.c0))))OR((x'' IN ())))) UNION ALL SELECT ALL vt0.c2 FROM vt0 WHERE ((NOT (((((SQLITE_COMPILEOPTION_GET(vt0.c0))OR(HEX(vt0.c0))))OR((x'' IN ())))))) UNION ALL SELECT vt0.c2 FROM vt0 WHERE (((((((SQLITE_COMPILEOPTION_GET(vt0.c0))OR(HEX(vt0.c0))))OR((x'' IN ())))) ISNULL));
SELECT ALL vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0 WHERE (json_type(((vt0.c1)AND(vt0.c2)))) UNION SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (json_type(((vt0.c1)AND(vt0.c2)))))) UNION SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0 WHERE (((json_type(((vt0.c1)AND(vt0.c2)))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 NOT INDEXED WHERE ((- (vt1.c0 COLLATE NOCASE))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((- (vt1.c0 COLLATE NOCASE))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((- (vt1.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING COUNT(((vt0.c2)/(vt0.c1))) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING (NOT (COUNT(((vt0.c2)/(vt0.c1))))) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING ((COUNT(((vt0.c2)/(vt0.c1)))) ISNULL);
SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING COUNT(((vt0.c2)/(vt0.c1))) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING (NOT (COUNT(((vt0.c2)/(vt0.c1))))) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING ((COUNT(((vt0.c2)/(vt0.c1)))) ISNULL);
SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT SUM((((vt0.c2)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((((vt1.c0))==((vt0.c2))))))) FROM vt1, vt0;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0;
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0 WHERE (CAST(CAST(NULL AS INTEGER) AS TEXT)) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0 WHERE ((NOT (CAST(CAST(NULL AS INTEGER) AS TEXT)))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0 WHERE (((CAST(CAST(NULL AS INTEGER) AS TEXT)) ISNULL));
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0;
SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE ((- ((vt0.c2 IN (vt0.c2))))) UNION SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((- ((vt0.c2 IN (vt0.c2))))))) UNION SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE ((((- ((vt0.c2 IN (vt0.c2))))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN 0.8607537775714783 THEN vt0.c2 END)IS NOT(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0))))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN 0.8607537775714783 THEN vt0.c2 END)IS NOT(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0))))))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0 WHERE (((((CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN 0.8607537775714783 THEN vt0.c2 END)IS NOT(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((GROUP_CONCAT(MIN(vt1.c0))))>=((((vt1.c0)-(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((GROUP_CONCAT(MIN(vt1.c0))))>=((((vt1.c0)-(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((GROUP_CONCAT(MIN(vt1.c0))))>=((((vt1.c0)-(vt1.c0)))))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((+ (CAST(vt1.c0 AS BLOB)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((+ (CAST(vt1.c0 AS BLOB)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((+ (CAST(vt1.c0 AS BLOB)))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, vt1 WHERE (json_array_length(CASE WHEN vt0.c2 THEN vt1.c0 END)) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, vt1 WHERE ((NOT (json_array_length(CASE WHEN vt0.c2 THEN vt1.c0 END)))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, vt1 WHERE (((json_array_length(CASE WHEN vt0.c2 THEN vt1.c0 END)) ISNULL));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((+ ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((+ ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((+ ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(MIN(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(MIN(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(MIN(vt1.c0))) ISNULL);
SELECT ALL TOTAL(CASE WHEN '-205952679' THEN vt0.c1 ELSE vt1.c0 END COLLATE NOCASE) FROM vt1, vt0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c1)||(vt0.c2))) IS FALSE)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c1)||(vt0.c2))) IS FALSE)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)||(vt0.c2))) IS FALSE)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)+(vt0.c2)) COLLATE NOCASE;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)+(vt0.c2)) COLLATE NOCASE WHERE ((~ (vt0.c1 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)+(vt0.c2)) COLLATE NOCASE WHERE ((NOT ((~ (vt0.c1 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON ((vt1.c0)+(vt0.c2)) COLLATE NOCASE WHERE ((((~ (vt0.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)+(vt0.c2)) COLLATE NOCASE;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((((0xffffffff8682907a)GLOB(vt0.c1))) NOT BETWEEN (json(vt1.c0)) AND ('148926193' COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT (((((0Xffffffff8682907a)GLOB(vt0.c1))) NOT BETWEEN (json(vt1.c0)) AND ('148926193' COLLATE NOCASE))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE (((((((0xffffffff8682907a)GLOB(vt0.c1))) NOT BETWEEN (json(vt1.c0)) AND ('148926193' COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((MAX(vt1.c0))>(SUM(vt1.c0))) IN (COUNT(*), GROUP_CONCAT(SUM(vt1.c0)) COLLATE BINARY)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((MAX(vt1.c0))>(SUM(vt1.c0))) IN (COUNT(*), GROUP_CONCAT(SUM(vt1.c0)) COLLATE BINARY)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((MAX(vt1.c0))>(SUM(vt1.c0))) IN (COUNT(*), GROUP_CONCAT(SUM(vt1.c0)) COLLATE BINARY))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, vt1;
SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((x'') NOT NULL)) UNION ALL SELECT vt0.c0 FROM vt0, vt1 WHERE ((NOT (((x'') NOT NULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((((x'') NOT NULL)) ISNULL));
SELECT ALL vt0.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((- (vt1.c0)))<=((((vt1.c0))<((vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((- (vt1.c0)))<=((((vt1.c0))<((vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((- (vt1.c0)))<=((((vt1.c0))<((vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 WHERE (IFNULL(DISTINCT IFNULL(DISTINCT vt0.c2, vt1.c0), ((((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c2)))OR(vt0.c2)))OR(vt1.c0)))OR(vt0.c2)))OR(vt0.c2)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((NOT (IFNULL(DISTINCT IFNULL(DISTINCT vt0.c2, vt1.c0), ((((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c2)))OR(vt0.c2)))OR(vt1.c0)))OR(vt0.c2)))OR(vt0.c2)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (((IFNULL(DISTINCT IFNULL(DISTINCT vt0.c2, vt1.c0), ((((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c2)))OR(vt0.c2)))OR(vt1.c0)))OR(vt0.c2)))OR(vt0.c2)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt0.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) GROUP BY vt0.c1, vt1.c0;
SELECT ALL vt0.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) GROUP BY vt0.c1, vt1.c0 HAVING CASE ((vt0.c1)||(COUNT(vt0.c2)))  WHEN GROUP_CONCAT(GROUP_CONCAT(-1603927472)) THEN ((vt1.c0) BETWEEN (MAX(vt0.c2)) AND (AVG(vt0.c0))) ELSE COUNT(*) END UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) GROUP BY vt0.c1, vt1.c0 HAVING (NOT (CASE ((vt0.c1)||(COUNT(vt0.c2)))  WHEN GROUP_CONCAT(GROUP_CONCAT(-1603927472)) THEN ((vt1.c0) BETWEEN (MAX(vt0.c2)) AND (AVG(vt0.c0))) ELSE COUNT(*) END)) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) GROUP BY vt0.c1, vt1.c0 HAVING ((CASE ((vt0.c1)||(COUNT(vt0.c2)))  WHEN GROUP_CONCAT(GROUP_CONCAT(-1603927472)) THEN ((vt1.c0) BETWEEN (MAX(vt0.c2)) AND (AVG(vt0.c0))) ELSE COUNT(*) END) ISNULL);
SELECT ALL MAX((~ (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN '3_t' WHEN vt0.c0 THEN vt0.c0 END))) FROM vt0 ORDER BY CASE WHEN CAST(vt0.c2 AS BLOB) THEN (((vt0.c1))=((vt0.c2))) WHEN ((vt0.c1)-(vt0.c2)) THEN (((0X725e823c))=((vt0.c2))) WHEN ((vt0.c2)=(NULL)) THEN 'n섷	4' END, IFNULL(DATETIME(vt0.c0, vt0.c0, vt0.c1, vt0.c2, vt0.c1, '0.6315541040699969', vt0.c1), ((vt0.c0)IS NOT(vt0.c0)))  NULLS LAST;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c2 COLLATE BINARY)+(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN '' END))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c2 COLLATE BINARY)+(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN '' END))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((vt0.c2 COLLATE BINARY)+(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN '' END))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c2, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0;
SELECT DISTINCT vt0.c2, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE (((CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 END)IS(((vt0.c0) IS FALSE)))) UNION SELECT DISTINCT vt0.c2, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT (((CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 END)IS(((vt0.c0) IS FALSE)))))) UNION SELECT DISTINCT vt0.c2, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE (((((CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 END)IS(((vt0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST(SUM(TOTAL(0.49955321237567707)) AS NUMERIC) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(SUM(TOTAL(0.49955321237567707)) AS NUMERIC))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST(SUM(TOTAL(0.49955321237567707)) AS NUMERIC)) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (('-287792953' IN (vt1.c0 COLLATE RTRIM))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (('-287792953' IN (vt1.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((('-287792953' IN (vt1.c0 COLLATE RTRIM))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)AND(SQLITE_VERSION())))AND(((((vt1.c0)AND('')))AND(vt1.c0)))))AND(NULLIF(DISTINCT vt1.c0, vt1.c0))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((((((vt1.c0)AND(SQLITE_VERSION())))AND(((((vt1.c0)AND('')))AND(vt1.c0)))))AND(NULLIF(DISTINCT vt1.c0, vt1.c0))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((((vt1.c0)AND(SQLITE_VERSION())))AND(((((vt1.c0)AND('')))AND(vt1.c0)))))AND(NULLIF(DISTINCT vt1.c0, vt1.c0))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (((((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END)OR(((vt0.c0)IS NOT('S7')))))AND(CAST(vt0.c2 AS NUMERIC)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((NOT (((((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END)OR(((vt0.c0)IS NOT('S7')))))AND(CAST(vt0.c2 AS NUMERIC)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (((((((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END)OR(((vt0.c0)IS NOT('S7')))))AND(CAST(vt0.c2 AS NUMERIC)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt1 INNER JOIN vt0 ON CAST(vt0.c2 AS TEXT) COLLATE RTRIM GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 INNER JOIN vt0 ON CAST(vt0.c2 AS TEXT) COLLATE RTRIM GROUP BY vt0.c0 HAVING COUNT(COUNT(GROUP_CONCAT(AVG(MAX(vt0.c1))))) UNION ALL SELECT ALL vt0.c0 FROM vt1 INNER JOIN vt0 ON CAST(vt0.c2 AS TEXT) COLLATE RTRIM GROUP BY vt0.c0 HAVING (NOT (COUNT(COUNT(GROUP_CONCAT(AVG(MAX(vt0.c1))))))) UNION ALL SELECT vt0.c0 FROM vt1 INNER JOIN vt0 ON CAST(vt0.c2 AS TEXT) COLLATE RTRIM GROUP BY vt0.c0 HAVING ((COUNT(COUNT(GROUP_CONCAT(AVG(MAX(vt0.c1)))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0))<((vt1.c0))) COLLATE NOCASE) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0))<((vt1.c0))) COLLATE NOCASE))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0))<((vt1.c0))) COLLATE NOCASE) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0 IN ())))>=((((vt0.c1)>>(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0 IN ())))>=((((vt0.c1)>>(vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0 IN ())))>=((((vt0.c1)>>(vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0;
SELECT ALL vt0.c1, vt1.c0 FROM vt0, vt1 WHERE ((((~ (vt1.c0)))%(((((vt0.c1)AND(vt0.c2)))OR(vt0.c1))))) GROUP BY vt0.c1, vt1.c0 UNION SELECT ALL vt0.c1, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((~ (vt1.c0)))%(((((vt0.c1)AND(vt0.c2)))OR(vt0.c1))))))) GROUP BY vt0.c1, vt1.c0 UNION SELECT ALL vt0.c1, vt1.c0 FROM vt0, vt1 WHERE ((((((~ (vt1.c0)))%(((((vt0.c1)AND(vt0.c2)))OR(vt0.c1))))) ISNULL)) GROUP BY vt0.c1, vt1.c0;
SELECT ALL vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(SUM(GROUP_CONCAT(MIN(AVG(x''))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(SUM(GROUP_CONCAT(MIN(AVG(x''))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(SUM(GROUP_CONCAT(MIN(AVG(x'')))))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0) BETWEEN (vt0.c2) AND ('i^]')))OR(vt0.c0)))OR(CAST(vt0.c1 AS TEXT))))AND(((vt0.c2)AND(vt0.c1)))))OR(vt0.c1 COLLATE BINARY))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((((((((vt0.c0) BETWEEN (vt0.c2) AND ('i^]')))OR(vt0.c0)))OR(CAST(vt0.c1 AS TEXT))))AND(((vt0.c2)AND(vt0.c1)))))OR(vt0.c1 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((((((((vt0.c0) BETWEEN (vt0.c2) AND ('i^]')))OR(vt0.c0)))OR(CAST(vt0.c1 AS TEXT))))AND(((vt0.c2)AND(vt0.c1)))))OR(vt0.c1 COLLATE BINARY))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (ROUND(vt1.c0, vt1.c0) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (ROUND(vt1.c0, vt1.c0) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1 WHERE (((ROUND(vt1.c0, vt1.c0) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((vt0.c1 IN ())) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((NOT ((vt0.c1 IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((((vt0.c1 IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c1;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((((vt0.c2 IN (vt0.c1)))OR(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(SUBSTR(vt0.c2, vt0.c2)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((((vt0.c2 IN (vt0.c1)))OR(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(SUBSTR(vt0.c2, vt0.c2)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((((vt0.c2 IN (vt0.c1)))OR(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(SUBSTR(vt0.c2, vt0.c2)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0)=(((x'')IS(vt0.c2))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0)==(((x'')IS(vt0.c2))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)==(((x'')IS(vt0.c2))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM vt0 WHERE ((((((((((vt0.c0)OR(vt0.c2)))OR(vt0.c0)))AND('1137628555')))OR(vt0.c2)) IN ())) GROUP BY vt0.c2, vt0.c1 UNION SELECT vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT ((((((((((vt0.c0)OR(vt0.c2)))OR(vt0.c0)))AND('1137628555')))OR(vt0.c2)) IN ())))) GROUP BY vt0.c2, vt0.c1 UNION SELECT vt0.c2, vt0.c1 FROM vt0 WHERE ((((((((((((vt0.c0)OR(vt0.c2)))OR(vt0.c0)))AND('1137628555')))OR(vt0.c2)) IN ())) ISNULL)) GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING vt0.c0 COLLATE NOCASE COLLATE BINARY UNION ALL SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING (NOT (vt0.c0 COLLATE NOCASE COLLATE BINARY)) UNION ALL SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING ((vt0.c0 COLLATE NOCASE COLLATE BINARY) ISNULL);
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING vt0.c0 COLLATE NOCASE COLLATE BINARY UNION ALL SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING (NOT (vt0.c0 COLLATE NOCASE COLLATE BINARY)) UNION ALL SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING ((vt0.c0 COLLATE NOCASE COLLATE BINARY) ISNULL);
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0 WHERE (TYPEOF((NOT (vt0.c1)))) UNION SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT (TYPEOF((NOT (vt0.c1)))))) UNION SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0 NOT INDEXED WHERE (((TYPEOF((NOT (vt0.c1)))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))GLOB(((vt1.c0)>>(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))GLOB(((vt1.c0)>>(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))GLOB(((vt1.c0)>>(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1;
SELECT vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1 HAVING (((COUNT(GROUP_CONCAT(vt1.c0)), COUNT(*), GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))) NOT BETWEEN ((UNICODE(vt0.c2), CAST(MIN(SUM(COUNT(*))) AS REAL), TOTAL(MAX(GROUP_CONCAT(GROUP_CONCAT(MAX(vt1.c0))))))) AND ((TOTAL(vt0.c2), COUNT(NULL), COUNT(*)))) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1 HAVING (NOT ((((COUNT(GROUP_CONCAT(vt1.c0)), COUNT(*), GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))) NOT BETWEEN ((UNICODE(vt0.c2), CAST(MIN(SUM(COUNT(*))) AS REAL), TOTAL(MAX(GROUP_CONCAT(GROUP_CONCAT(MAX(vt1.c0))))))) AND ((TOTAL(vt0.c2), COUNT(NULL), COUNT(*)))))) UNION ALL SELECT ALL vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1 HAVING (((((COUNT(GROUP_CONCAT(vt1.c0)), COUNT(*), GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))) NOT BETWEEN ((UNICODE(vt0.c2), CAST(MIN(SUM(COUNT(*))) AS REAL), TOTAL(MAX(GROUP_CONCAT(GROUP_CONCAT(MAX(vt1.c0))))))) AND ((TOTAL(vt0.c2), COUNT(NULL), COUNT(*))))) ISNULL);
SELECT ALL vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt1, vt0;
SELECT vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (LENGTH(vt0.c0)))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt1, vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (LENGTH(vt0.c0)))))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt1, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (LENGTH(vt0.c0)))) ISNULL));
SELECT ALL vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt1, vt0;
SELECT DISTINCT vt0.c1 FROM vt1, vt0;
SELECT DISTINCT vt0.c1 FROM vt1, vt0 WHERE (((vt0.c0 COLLATE RTRIM)IS NOT((NOT (vt1.c0))))) UNION SELECT DISTINCT vt0.c1 FROM vt1, vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM)IS NOT((NOT (vt1.c0))))))) UNION SELECT DISTINCT vt0.c1 FROM vt1, vt0 WHERE (((((vt0.c0 COLLATE RTRIM)IS NOT((NOT (vt1.c0))))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt1, vt0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 WHERE (((COALESCE(vt1.c0, vt0.c1, vt0.c2, vt0.c2))LIKE((((vt1.c0, 0Xfffffffff80b7333, vt1.c0)) NOT BETWEEN ((vt0.c2, vt0.c2, vt0.c1)) AND ((vt1.c0, vt0.c2, vt1.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT (((COALESCE(vt1.c0, vt0.c1, vt0.c2, vt0.c2))LIKE((((vt1.c0, 0Xfffffffff80b7333, vt1.c0)) NOT BETWEEN ((vt0.c2, vt0.c2, vt0.c1)) AND ((vt1.c0, vt0.c2, vt1.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((((COALESCE(vt1.c0, vt0.c1, vt0.c2, vt0.c2))LIKE((((vt1.c0, 0Xfffffffff80b7333, vt1.c0)) NOT BETWEEN ((vt0.c2, vt0.c2, vt0.c1)) AND ((vt1.c0, vt0.c2, vt1.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(MAX(COUNT(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(MAX(COUNT(GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(MAX(COUNT(GROUP_CONCAT(COUNT(*)))))) ISNULL);
SELECT vt0.c1, vt1.c0, vt0.c2 FROM vt1, vt0;
SELECT vt0.c1, vt1.c0, vt0.c2 FROM vt1, vt0 WHERE (HEX(DISTINCT CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN x'847e' THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c2 FROM vt1, vt0 WHERE ((NOT (HEX(DISTINCT CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN x'847e' THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)))) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c2 FROM vt1, vt0 WHERE (((HEX(DISTINCT CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN x'847e' THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) ISNULL));
SELECT vt0.c1, vt1.c0, vt0.c2 FROM vt1, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0)>>('-1912524975')) IN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((vt1.c0)>>('-1912524975')) IN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0)>>('-1912524975')) IN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 WHERE (0.9453950600039382) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((NOT (0.9453950600039382))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE (((0.9453950600039382) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (CAST((+ (vt0.c2)) AS TEXT)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CAST((+ (vt0.c2)) AS TEXT)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST((+ (vt0.c2)) AS TEXT)) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (11881094) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (11881094))) UNION SELECT DISTINCT * FROM vt0 WHERE (((11881094) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1, vt0.c0, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt0.c2, vt1.c0;
SELECT ALL vt0.c1, vt0.c0, vt0.c2, vt1.c0 FROM vt0, vt1 WHERE (CASE (~ (vt1.c0))  WHEN ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)) THEN CAST(vt1.c0 AS BLOB) WHEN ((vt0.c0) NOTNULL) THEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c2 END WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND ('-1720270723')) THEN vt0.c2 ELSE (((vt0.c1, vt0.c0, vt0.c0))<=(('!G', vt1.c0, vt0.c0))) END) GROUP BY vt0.c1, vt0.c0, vt0.c2, vt1.c0 UNION SELECT ALL vt0.c1, vt0.c0, vt0.c2, vt1.c0 FROM vt0, vt1 WHERE ((NOT (CASE (~ (vt1.c0))  WHEN ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)) THEN CAST(vt1.c0 AS BLOB) WHEN ((vt0.c0) NOTNULL) THEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c2 END WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND ('-1720270723')) THEN vt0.c2 ELSE (((vt0.c1, vt0.c0, vt0.c0))<=(('!G', vt1.c0, vt0.c0))) END))) GROUP BY vt0.c1, vt0.c0, vt0.c2, vt1.c0 UNION SELECT vt0.c1, vt0.c0, vt0.c2, vt1.c0 FROM vt0, vt1 WHERE (((CASE (~ (vt1.c0))  WHEN ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)) THEN CAST(vt1.c0 AS BLOB) WHEN ((vt0.c0) NOTNULL) THEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c2 END WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND ('-1720270723')) THEN vt0.c2 ELSE (((vt0.c1, vt0.c0, vt0.c0))<=(('!G', vt1.c0, vt0.c0))) END) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt0.c2, vt1.c0;
SELECT vt0.c1, vt0.c0, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt0.c2, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(COUNT(*)))+(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((SUM(COUNT(*)))+(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((SUM(COUNT(*)))+(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (NULL) UNION ALL SELECT * FROM vt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM vt0 WHERE (((NULL) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((GLOB(vt1.c0, vt1.c0))%(LTRIM(vt1.c0, vt1.c0)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((GLOB(vt1.c0, vt1.c0))%(LTRIM(vt1.c0, vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((GLOB(vt1.c0, vt1.c0))%(LTRIM(vt1.c0, vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((CASE WHEN vt0.c1 THEN x'' END)))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0 WHERE ((NOT ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((CASE WHEN vt0.c1 THEN x'' END)))))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((CASE WHEN vt0.c1 THEN x'' END)))) ISNULL)) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((AVG(TOTAL(COUNT(*)))))<>((MAX(MIN(GROUP_CONCAT(SUM(AVG(GROUP_CONCAT(vt1.c0))))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((AVG(TOTAL(COUNT(*)))))!=((MAX(MIN(GROUP_CONCAT(SUM(AVG(GROUP_CONCAT(vt1.c0))))))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((AVG(TOTAL(COUNT(*)))))!=((MAX(MIN(GROUP_CONCAT(SUM(AVG(GROUP_CONCAT(vt1.c0)))))))))) ISNULL);
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE ((- ((('25901015')+(-1.359466799E9))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT ((- ((('25901015')+(-1.359466799E9))))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((((- ((('25901015')+(-1.359466799E9))))) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((~ (vt1.c0)) IN ())) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((~ (vt1.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((~ (vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE (((x'') NOT BETWEEN (vt0.c1) AND (vt0.c1))) GROUP BY vt0.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (((x'') NOT BETWEEN (vt0.c1) AND (vt0.c1))))) GROUP BY vt0.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE (((((x'') NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2;
SELECT vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2 HAVING ((((MAX(SUM(vt0.c0)))AND(TOTAL(vt1.c0))))AND(((vt0.c1) IS FALSE))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2 HAVING (NOT (((((MAX(SUM(vt0.c0)))AND(TOTAL(vt1.c0))))AND(((vt0.c1) IS FALSE))))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c2 HAVING ((((((MAX(SUM(vt0.c0)))AND(TOTAL(vt1.c0))))AND(((vt0.c1) IS FALSE)))) ISNULL);
SELECT vt0.c2, vt0.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0))==((vt0.c1))) COLLATE BINARY;
SELECT vt0.c2, vt0.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0))==((vt0.c1))) COLLATE BINARY WHERE (((((((vt1.c0)OR(vt0.c1)))AND(LIKELY(DISTINCT vt0.c0))))OR(((vt1.c0)+(x'e94e2ded'))))) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0))=((vt0.c1))) COLLATE BINARY WHERE ((NOT (((((((vt1.c0)OR(vt0.c1)))AND(LIKELY(DISTINCT vt0.c0))))OR(((vt1.c0)+(x'e94e2ded'))))))) UNION ALL SELECT vt0.c2, vt0.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0))=((vt0.c1))) COLLATE BINARY WHERE (((((((((vt1.c0)OR(vt0.c1)))AND(LIKELY(DISTINCT vt0.c0))))OR(((vt1.c0)+(x'e94e2ded'))))) ISNULL));
SELECT vt0.c2, vt0.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0))==((vt0.c1))) COLLATE BINARY;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) IN ())) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM vt0 WHERE (CASE ((((((((vt0.c0)AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c2))  WHEN ((vt0.c2)!=(vt0.c0)) THEN ('1028315307' IN ()) ELSE ((vt0.c2) ISNULL) END) GROUP BY vt0.c2, vt0.c1 UNION SELECT vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (CASE ((((((((vt0.c0)AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c2))  WHEN ((vt0.c2)<>(vt0.c0)) THEN ('1028315307' IN ()) ELSE ((vt0.c2) ISNULL) END))) GROUP BY vt0.c2, vt0.c1 UNION SELECT vt0.c2, vt0.c1 FROM vt0 WHERE (((CASE ((((((((vt0.c0)AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c2))  WHEN ((vt0.c2)<>(vt0.c0)) THEN ('1028315307' IN ()) ELSE ((vt0.c2) ISNULL) END) ISNULL)) GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) NOTNULL)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS INTEGER)) NOTNULL)))) UNION ALL SELECT * FROM vt1 WHERE (((((CAST(vt1.c0 AS INTEGER)) NOTNULL)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ())) BETWEEN ((- (vt1.c0))) AND (CAST(vt1.c0 AS BLOB)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 IN ())) BETWEEN ((- (vt1.c0))) AND (CAST(vt1.c0 AS BLOB)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN ())) BETWEEN ((- (vt1.c0))) AND (CAST(vt1.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (vt1.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING SUM(SUM(MIN(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING (NOT (SUM(SUM(MIN(COUNT(*)))))) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING ((SUM(SUM(MIN(COUNT(*))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (json_array((vt1.c0 IN ()), ((x'f645')>>(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (json_array((vt1.c0 IN ()), ((x'f645')>>(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((json_array((vt1.c0 IN ()), ((x'f645')>>(vt1.c0)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c2 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt0.c0)<>(vt0.c0)) WHEN vt1.c0 COLLATE NOCASE THEN CAST(vt1.c0 AS BLOB) WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS BLOB) WHEN ((((vt0.c1)OR(vt1.c0)))AND(vt0.c2)) THEN CASE vt0.c2  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END WHEN (vt0.c1 IN ()) THEN ((vt0.c0)IS(vt0.c0)) END) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c2 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt0.c0)!=(vt0.c0)) WHEN vt1.c0 COLLATE NOCASE THEN CAST(vt1.c0 AS BLOB) WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS BLOB) WHEN ((((vt0.c1)OR(vt1.c0)))AND(vt0.c2)) THEN CASE vt0.c2  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END WHEN (vt0.c1 IN ()) THEN ((vt0.c0)IS(vt0.c0)) END))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c2 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt0.c0)!=(vt0.c0)) WHEN vt1.c0 COLLATE NOCASE THEN CAST(vt1.c0 AS BLOB) WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS BLOB) WHEN ((((vt0.c1)OR(vt1.c0)))AND(vt0.c2)) THEN CASE vt0.c2  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END WHEN (vt0.c1 IN ()) THEN ((vt0.c0)IS(vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 WHERE (((((vt0.c2)AND(NULLIF(vt0.c1, vt0.c1))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c2, vt0.c0 UNION SELECT ALL vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c2)AND(NULLIF(vt0.c1, vt0.c1))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c2, vt0.c0 UNION SELECT ALL vt0.c2, vt0.c0 FROM vt0 WHERE (((((((vt0.c2)AND(NULLIF(vt0.c1, vt0.c1))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((GROUP_CONCAT(COUNT(*))))>=((((vt1.c0)+(COUNT(x'')))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((GROUP_CONCAT(COUNT(*))))>=((((vt1.c0)+(COUNT(x'')))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((GROUP_CONCAT(COUNT(*))))>=((((vt1.c0)+(COUNT(x''))))))) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN LIKELY(DISTINCT vt1.c0) THEN (- (vt0.c1)) WHEN (vt0.c0 IN ()) THEN vt1.c0 COLLATE RTRIM WHEN CASE vt0.c1  WHEN vt0.c2 THEN vt1.c0 END THEN (vt0.c2 IN ()) WHEN ((vt0.c2)-(NULL)) THEN vt1.c0 WHEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END THEN (~ (vt0.c1)) ELSE (+ (vt0.c0)) END) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (CASE WHEN LIKELY(DISTINCT vt1.c0) THEN (- (vt0.c1)) WHEN (vt0.c0 IN ()) THEN vt1.c0 COLLATE RTRIM WHEN CASE vt0.c1  WHEN vt0.c2 THEN vt1.c0 END THEN (vt0.c2 IN ()) WHEN ((vt0.c2)-(NULL)) THEN vt1.c0 WHEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END THEN (~ (vt0.c1)) ELSE (+ (vt0.c0)) END))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((CASE WHEN LIKELY(DISTINCT vt1.c0) THEN (- (vt0.c1)) WHEN (vt0.c0 IN ()) THEN vt1.c0 COLLATE RTRIM WHEN CASE vt0.c1  WHEN vt0.c2 THEN vt1.c0 END THEN (vt0.c2 IN ()) WHEN ((vt0.c2)-(NULL)) THEN vt1.c0 WHEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END THEN (~ (vt0.c1)) ELSE (+ (vt0.c0)) END) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (TRIM(vt0.c1) COLLATE RTRIM COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (TRIM(vt0.c1) COLLATE RTRIM COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((TRIM(vt0.c1) COLLATE RTRIM COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 WHERE (((CAST(vt0.c2 AS REAL)) BETWEEN ((NOT (vt0.c0))) AND (ABS(vt0.c2)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE ((NOT (((CAST(vt0.c2 AS REAL)) BETWEEN ((NOT (vt0.c0))) AND (ABS(vt0.c2)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (((((CAST(vt0.c2 AS REAL)) BETWEEN ((NOT (vt0.c0))) AND (ABS(vt0.c2)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c2, vt1.c0;
SELECT vt0.c0, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c2, vt1.c0 HAVING TOTAL(SUM(vt0.c0)) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c2, vt1.c0 HAVING (NOT (TOTAL(SUM(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c2, vt1.c0 HAVING ((TOTAL(SUM(vt0.c0))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE BINARY) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS INTEGER) COLLATE BINARY))) UNION ALL SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CASE WHEN ((-1630566756) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) WHEN ((vt1.c0)||(vt1.c0)) THEN 0.23007802836832292 WHEN ((vt1.c0)<=(x'')) THEN ((vt1.c0)+(vt1.c0)) ELSE CAST(vt1.c0 AS INTEGER) END) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CASE WHEN ((-1630566756) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) WHEN ((vt1.c0)||(vt1.c0)) THEN 0.23007802836832292 WHEN ((vt1.c0)<=(x'')) THEN ((vt1.c0)+(vt1.c0)) ELSE CAST(vt1.c0 AS INTEGER) END))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CASE WHEN ((-1630566756) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) WHEN ((vt1.c0)||(vt1.c0)) THEN 0.23007802836832292 WHEN ((vt1.c0)<=(x'')) THEN ((vt1.c0)+(vt1.c0)) ELSE CAST(vt1.c0 AS INTEGER) END) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2;
SELECT ALL vt1.c0, vt0.c2 FROM vt0, vt1 NOT INDEXED WHERE (IFNULL(DISTINCT vt0.c1, vt0.c0 COLLATE BINARY)) GROUP BY vt1.c0, vt0.c2 UNION SELECT ALL vt1.c0, vt0.c2 FROM vt0, vt1 WHERE ((NOT (IFNULL(DISTINCT vt0.c1, vt0.c0 COLLATE BINARY)))) GROUP BY vt1.c0, vt0.c2 UNION SELECT ALL vt1.c0, vt0.c2 FROM vt0, vt1 WHERE (((IFNULL(DISTINCT vt0.c1, vt0.c0 COLLATE BINARY)) ISNULL)) GROUP BY vt1.c0, vt0.c2;
SELECT ALL vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING COUNT(COUNT(TOTAL(vt0.c0))) UNION ALL SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING (NOT (COUNT(COUNT(TOTAL(vt0.c0))))) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING ((COUNT(COUNT(TOTAL(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c1 IN ()))LIKE(((vt0.c1) NOT BETWEEN (vt0.c1) AND ('0.8050199305692168'))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c1 IN ()))LIKE(((vt0.c1) NOT BETWEEN (vt0.c1) AND ('0.8050199305692168'))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c1 IN ()))LIKE(((vt0.c1) NOT BETWEEN (vt0.c1) AND ('0.8050199305692168'))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (-1.099833456E9) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((NOT (-1.099833456E9))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (((-1.099833456E9) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT ALL vt0.c1, vt0.c2, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c2, vt1.c0, vt0.c0;
SELECT ALL vt0.c1, vt0.c2, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((((CAST(vt1.c0 AS TEXT))AND(vt0.c0 COLLATE RTRIM)))AND(LOWER(vt0.c0)))) GROUP BY vt0.c1, vt0.c2, vt1.c0, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c2, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (((((CAST(vt1.c0 AS TEXT))AND(vt0.c0 COLLATE RTRIM)))AND(LOWER(vt0.c0)))))) GROUP BY vt0.c1, vt0.c2, vt1.c0, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c2, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((((((CAST(vt1.c0 AS TEXT))AND(vt0.c0 COLLATE RTRIM)))AND(LOWER(vt0.c0)))) ISNULL)) GROUP BY vt0.c1, vt0.c2, vt1.c0, vt0.c0;
SELECT ALL vt0.c1, vt0.c2, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c2, vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1;
SELECT vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1 HAVING MIN(x'e127') UNION ALL SELECT vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1 HAVING (NOT (MIN(x'e127'))) UNION ALL SELECT ALL vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1 HAVING ((MIN(x'e127')) ISNULL);
SELECT ALL vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1;
SELECT vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1 HAVING MIN(x'e127') UNION ALL SELECT vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1 HAVING (NOT (MIN(x'e127'))) UNION ALL SELECT ALL vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1 HAVING ((MIN(x'e127')) ISNULL);
SELECT ALL vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt0.c2 FROM vt1, vt0;
SELECT ALL vt0.c2 FROM vt1, vt0 WHERE (CAST(((vt1.c0)IS NOT(vt1.c0)) AS INTEGER)) UNION ALL SELECT ALL vt0.c2 FROM vt1, vt0 WHERE ((NOT (CAST(((vt1.c0)IS NOT(vt1.c0)) AS INTEGER)))) UNION ALL SELECT ALL vt0.c2 FROM vt1, vt0 WHERE (((CAST(((vt1.c0)IS NOT(vt1.c0)) AS INTEGER)) ISNULL));
SELECT ALL vt0.c2 FROM vt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c1) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (TRIM((- (vt1.c0)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (TRIM((- (vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((TRIM((- (vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((((((vt1.c0 IN ()))OR(vt1.c0)))AND(GROUP_CONCAT('-1592297047'))))OR(CAST(MIN(GROUP_CONCAT(MIN(vt1.c0))) AS INTEGER))))OR(SUM(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((((((((vt1.c0 IN ()))OR(vt1.c0)))AND(GROUP_CONCAT('-1592297047'))))OR(CAST(MIN(GROUP_CONCAT(MIN(vt1.c0))) AS INTEGER))))OR(SUM(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((((((((vt1.c0 IN ()))OR(vt1.c0)))AND(GROUP_CONCAT('-1592297047'))))OR(CAST(MIN(GROUP_CONCAT(MIN(vt1.c0))) AS INTEGER))))OR(SUM(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((+ (CAST(vt1.c0 AS REAL)))) UNION ALL SELECT vt1.c0 FROM vt1 NOT INDEXED WHERE ((NOT ((+ (CAST(vt1.c0 AS REAL)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((+ (CAST(vt1.c0 AS REAL)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (0.3344492867831894) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (0.3344492867831894))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((0.3344492867831894) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2;
SELECT vt1.c0, vt0.c2 FROM vt0, vt1 WHERE ((NOT (vt0.c1))) GROUP BY vt1.c0, vt0.c2 UNION SELECT ALL vt1.c0, vt0.c2 FROM vt0, vt1 WHERE ((NOT ((NOT (vt0.c1))))) GROUP BY vt1.c0, vt0.c2 UNION SELECT ALL vt1.c0, vt0.c2 FROM vt0, vt1 WHERE ((((NOT (vt0.c1))) ISNULL)) GROUP BY vt1.c0, vt0.c2;
SELECT vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0)OR(vt1.c0))) BETWEEN (vt0.c2) AND (0.18652290609820876))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (((((vt1.c0)OR(vt1.c0))) BETWEEN (vt0.c2) AND (0.18652290609820876))))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((((((vt1.c0)OR(vt1.c0))) BETWEEN (vt0.c2) AND (0.18652290609820876))) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt1 CROSS JOIN vt0 ON ((vt0.c0 COLLATE BINARY)%(((vt1.c0)IS NOT('0.6994824521600187'))));
SELECT DISTINCT vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt1 CROSS JOIN vt0 ON ((vt0.c0 COLLATE BINARY)%(((vt1.c0)IS NOT('0.6994824521600187')))) WHERE ((((((NOT (vt0.c0)))OR((((vt1.c0, vt0.c0, vt1.c0))!=((0.408385508946695, vt1.c0, vt0.c0))))))AND(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1))))) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt1 CROSS JOIN vt0 ON ((vt0.c0 COLLATE BINARY)%(((vt1.c0)IS NOT('0.6994824521600187')))) WHERE ((NOT ((((((NOT (vt0.c0)))OR((((vt1.c0, vt0.c0, vt1.c0))!=((0.408385508946695, vt1.c0, vt0.c0))))))AND(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1))))))) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt1 CROSS JOIN vt0 ON ((vt0.c0 COLLATE BINARY)%(((vt1.c0)IS NOT('0.6994824521600187')))) WHERE ((((((((NOT (vt0.c0)))OR((((vt1.c0, vt0.c0, vt1.c0))!=((0.408385508946695, vt1.c0, vt0.c0))))))AND(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1))))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt1 CROSS JOIN vt0 ON ((vt0.c0 COLLATE BINARY)%(((vt1.c0)IS NOT('0.6994824521600187'))));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((ABS(vt1.c0) IN ())) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((ABS(vt1.c0) IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((ABS(vt1.c0) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0;
SELECT ALL vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0 HAVING (GROUP_CONCAT(MAX(COUNT(*))) IN ()) UNION ALL SELECT vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0 HAVING (NOT ((GROUP_CONCAT(MAX(COUNT(*))) IN ()))) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0 HAVING (((GROUP_CONCAT(MAX(COUNT(*))) IN ())) ISNULL);
SELECT ALL vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0;
SELECT ALL vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0 HAVING (GROUP_CONCAT(MAX(COUNT(*))) IN ()) UNION ALL SELECT vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0 HAVING (NOT ((GROUP_CONCAT(MAX(COUNT(*))) IN ()))) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0 HAVING (((GROUP_CONCAT(MAX(COUNT(*))) IN ())) ISNULL);
SELECT ALL vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((IFNULL(DISTINCT vt0.c1, vt0.c1))AND(((vt0.c0)|(vt0.c0)))))AND(((vt0.c0)<>(vt0.c1)))))AND((+ (vt0.c2)))))AND((- (vt0.c1))))) UNION ALL SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((((((IFNULL(DISTINCT vt0.c1, vt0.c1))AND(((vt0.c0)|(vt0.c0)))))AND(((vt0.c0)!=(vt0.c1)))))AND((+ (vt0.c2)))))AND((- (vt0.c1))))))) UNION ALL SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((((IFNULL(DISTINCT vt0.c1, vt0.c1))AND(((vt0.c0)|(vt0.c0)))))AND(((vt0.c0)!=(vt0.c1)))))AND((+ (vt0.c2)))))AND((- (vt0.c1))))) ISNULL));
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST((vt0.c2 IN (vt0.c0, vt0.c2)) AS TEXT)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST((vt0.c2 IN (vt0.c0, vt0.c2)) AS TEXT)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST((vt0.c2 IN (vt0.c0, vt0.c2)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt1 INNER JOIN vt0 ON CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END COLLATE NOCASE GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt1 INNER JOIN vt0 ON CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END COLLATE NOCASE WHERE (((UPPER(vt0.c2))/(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))))) GROUP BY vt0.c0, vt0.c2, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt1 INNER JOIN vt0 ON CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END COLLATE NOCASE WHERE ((NOT (((UPPER(vt0.c2))/(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))))))) GROUP BY vt0.c0, vt0.c2, vt0.c1 UNION SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt1 NOT INDEXED INNER JOIN vt0 ON CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END COLLATE NOCASE WHERE (((((UPPER(vt0.c2))/(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))))) ISNULL)) GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt1 INNER JOIN vt0 ON CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END COLLATE NOCASE GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING ((((PRINTF(vt0.c2, vt0.c2, AVG(vt0.c2)))OR(MIN(COUNT(COUNT(-1801337394))))))OR(LIKELIHOOD(GROUP_CONCAT(1778933692), 0.9920373121713738))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING (NOT (((((PRINTF(vt0.c2, vt0.c2, AVG(vt0.c2)))OR(MIN(COUNT(COUNT(-1801337394))))))OR(LIKELIHOOD(GROUP_CONCAT(1778933692), 0.9920373121713738))))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING ((((((PRINTF(vt0.c2, vt0.c2, AVG(vt0.c2)))OR(MIN(COUNT(COUNT(-1801337394))))))OR(LIKELIHOOD(GROUP_CONCAT(1778933692), 0.9920373121713738)))) ISNULL);
SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt1.c0 IN (NULL)) IN ());
SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt1.c0 IN (NULL)) IN ()) WHERE ((((vt1.c0))<((((vt0.c0)IS(vt0.c0)))))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt1.c0 IN (NULL)) IN ()) WHERE ((NOT ((((vt1.c0))<((((vt0.c0)IS(vt0.c0)))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt1.c0 IN (NULL)) IN ()) WHERE ((((((vt1.c0))<((((vt0.c0)IS(vt0.c0)))))) ISNULL));
SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt1.c0 IN (NULL)) IN ());
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)>=(json_insert(vt1.c0, 1458411160, vt1.c0, vt1.c0, vt1.c0)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)>=(json_insert(vt1.c0, 1458411160, vt1.c0, vt1.c0, vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)>=(json_insert(vt1.c0, 1458411160, vt1.c0, vt1.c0, vt1.c0)))) ISNULL));
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 WHERE ((((- (vt0.c0))) NOT NULL)) GROUP BY vt0.c2, vt0.c0 UNION SELECT vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT ((((- (vt0.c0))) NOT NULL)))) GROUP BY vt0.c2, vt0.c0 UNION SELECT vt0.c2, vt0.c0 FROM vt0 WHERE ((((((- (vt0.c0))) NOT NULL)) ISNULL)) GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(MIN(vt1.c0))) IS FALSE) COLLATE NOCASE UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING (NOT (((GROUP_CONCAT(MIN(vt1.c0))) IS FALSE) COLLATE NOCASE)) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING ((((GROUP_CONCAT(MIN(vt1.c0))) IS FALSE) COLLATE NOCASE) ISNULL);
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt1 CROSS JOIN vt0 ON ((((NOT (vt0.c0))))==(((((vt0.c0))>=((vt0.c2))))));
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt1 CROSS JOIN vt0 ON ((((NOT (vt0.c0))))=(((((vt0.c0))>=((vt0.c2)))))) WHERE ((+ (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))))) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt1 CROSS JOIN vt0 ON ((((NOT (vt0.c0))))=(((((vt0.c0))>=((vt0.c2)))))) WHERE ((NOT ((+ (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))))))) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt1 CROSS JOIN vt0 ON ((((NOT (vt0.c0))))=(((((vt0.c0))>=((vt0.c2)))))) WHERE ((((+ (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))))) ISNULL));
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt1 CROSS JOIN vt0 ON ((((NOT (vt0.c0))))==(((((vt0.c0))>=((vt0.c2))))));
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.c1)LIKE(vt0.c0)))<<(((vt1.c0)/(vt0.c1))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((((vt0.c1)LIKE(vt0.c0)))<<(((vt1.c0)/(vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((vt0.c1)LIKE(vt0.c0)))<<(((vt1.c0)/(vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 WHERE (((((vt0.c1) NOTNULL)) BETWEEN ('cWw''9w') AND (CAST('+>Q&' AS REAL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0 NOT INDEXED, vt1 WHERE ((NOT (((((vt0.c1) NOTNULL)) BETWEEN ('cWw''9w') AND (CAST('+>Q&' AS REAL)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE (((((((vt0.c1) NOTNULL)) BETWEEN ('cWw''9w') AND (CAST('+>Q&' AS REAL)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING AVG(SUM(COUNT(*))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (AVG(SUM(COUNT(*))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((AVG(SUM(COUNT(*)))) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt0, vt1;
SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt0, vt1 WHERE (vt1.c0) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt0, vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL vt0.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt0, vt1;
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (~ (TRIM(vt0.c0)));
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (~ (TRIM(vt0.c0))) WHERE ((((CAST(vt0.c1 AS REAL), CAST(vt0.c2 AS REAL), ((vt1.c0)+(vt0.c2))))<>((vt0.c0, CASE WHEN vt1.c0 THEN 0.4286862050398823 ELSE vt1.c0 END, vt0.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (~ (TRIM(vt0.c0))) WHERE ((NOT ((((CAST(vt0.c1 AS REAL), CAST(vt0.c2 AS REAL), ((vt1.c0)+(vt0.c2))))!=((vt0.c0, CASE WHEN vt1.c0 THEN 0.4286862050398823 ELSE vt1.c0 END, vt0.c0 COLLATE NOCASE)))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (~ (TRIM(vt0.c0))) WHERE ((((((CAST(vt0.c1 AS REAL), CAST(vt0.c2 AS REAL), ((vt1.c0)+(vt0.c2))))<>((vt0.c0, CASE WHEN vt1.c0 THEN 0.4286862050398823 ELSE vt1.c0 END, vt0.c0 COLLATE NOCASE)))) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (~ (TRIM(vt0.c0)));
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 WHERE (((CAST(vt0.c1 AS INTEGER)) NOT BETWEEN (CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END) AND (vt1.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT (((CAST(vt0.c1 AS INTEGER)) NOT BETWEEN (CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END) AND (vt1.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE (((((CAST(vt0.c1 AS INTEGER)) NOT BETWEEN (CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END) AND (vt1.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING DATETIME(CASE WHEN vt1.c0 THEN '-1252572897' WHEN vt1.c0 THEN MAX(vt1.c0) WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) IS FALSE), (GROUP_CONCAT(vt1.c0) IN ())) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (DATETIME(CASE WHEN vt1.c0 THEN '-1252572897' WHEN vt1.c0 THEN MAX(vt1.c0) WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) IS FALSE), (GROUP_CONCAT(vt1.c0) IN ())))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((DATETIME(CASE WHEN vt1.c0 THEN '-1252572897' WHEN vt1.c0 THEN MAX(vt1.c0) WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) IS FALSE), (GROUP_CONCAT(vt1.c0) IN ()))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING DATETIME(CASE WHEN vt1.c0 THEN '-1252572897' WHEN vt1.c0 THEN MAX(vt1.c0) WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) IS FALSE), (GROUP_CONCAT(vt1.c0) IN ())) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (DATETIME(CASE WHEN vt1.c0 THEN '-1252572897' WHEN vt1.c0 THEN MAX(vt1.c0) WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) IS FALSE), (GROUP_CONCAT(vt1.c0) IN ())))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((DATETIME(CASE WHEN vt1.c0 THEN '-1252572897' WHEN vt1.c0 THEN MAX(vt1.c0) WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) IS FALSE), (GROUP_CONCAT(vt1.c0) IN ()))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((+ (vt1.c0 COLLATE RTRIM))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((+ (vt1.c0 COLLATE RTRIM))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((+ (vt1.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c2)%(vt0.c2)))AND((('-63255692')%(vt0.c2)))))OR((NOT (vt0.c1))))) UNION SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c2)%(vt0.c2)))AND((('-63255692')%(vt0.c2)))))OR((NOT (vt0.c1))))))) UNION SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((vt0.c2)%(vt0.c2)))AND((('-63255692')%(vt0.c2)))))OR((NOT (vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0;
SELECT vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CAST(vt1.c0 AS TEXT) COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS TEXT) COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (+ (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (+ (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c0))>=((vt1.c0)))) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c2) NOT BETWEEN (vt0.c0) AND ('818128936'))))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT ((((((vt0.c0))>=((vt1.c0)))) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c2) NOT BETWEEN (vt0.c0) AND ('818128936'))))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((((((((vt0.c0))>=((vt1.c0)))) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c2) NOT BETWEEN (vt0.c0) AND ('818128936'))))) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((1566275063 IN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((1566275063 IN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((1566275063 IN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2, vt0.c1;
SELECT vt1.c0, vt0.c2, vt0.c1 FROM vt0, vt1 WHERE (((((vt0.c1, vt1.c0, vt0.c0, vt1.c0, vt0.c1)) BETWEEN ((vt1.c0, vt0.c2, vt1.c0, vt0.c2, x'd9c0')) AND ((vt0.c2, vt1.c0, vt0.c0, vt1.c0, vt0.c0))) IN ())) GROUP BY vt1.c0, vt0.c2, vt0.c1 UNION SELECT ALL vt1.c0, vt0.c2, vt0.c1 FROM vt0, vt1 WHERE ((NOT (((((vt0.c1, vt1.c0, vt0.c0, vt1.c0, vt0.c1)) BETWEEN ((vt1.c0, vt0.c2, vt1.c0, vt0.c2, x'd9c0')) AND ((vt0.c2, vt1.c0, vt0.c0, vt1.c0, vt0.c0))) IN ())))) GROUP BY vt1.c0, vt0.c2, vt0.c1 UNION SELECT ALL vt1.c0, vt0.c2, vt0.c1 FROM vt0, vt1 WHERE (((((((vt0.c1, vt1.c0, vt0.c0, vt1.c0, vt0.c1)) BETWEEN ((vt1.c0, vt0.c2, vt1.c0, vt0.c2, x'd9c0')) AND ((vt0.c2, vt1.c0, vt0.c0, vt1.c0, vt0.c0))) IN ())) ISNULL)) GROUP BY vt1.c0, vt0.c2, vt0.c1;
SELECT vt1.c0, vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING AVG(CAST(COUNT(*) AS REAL)) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING (NOT (AVG(CAST(COUNT(*) AS REAL)))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING ((AVG(CAST(COUNT(*) AS REAL))) ISNULL);
SELECT ALL vt0.c0, vt0.c2, vt1.c0 FROM vt1, vt0;
SELECT vt0.c0, vt0.c2, vt1.c0 FROM vt1, vt0 WHERE (((((UNLIKELY(vt0.c2))AND(HEX(vt0.c2))))OR(((vt0.c1)>(vt0.c0))))) UNION ALL SELECT vt0.c0, vt0.c2, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((UNLIKELY(vt0.c2))AND(HEX(vt0.c2))))OR(((vt0.c1)>(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt1.c0 FROM vt1, vt0 WHERE (((((((UNLIKELY(vt0.c2))AND(HEX(vt0.c2))))OR(((vt0.c1)>(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0, vt0.c2, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((- (CAST(vt1.c0 AS REAL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((- (CAST(vt1.c0 AS REAL)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((- (CAST(vt1.c0 AS REAL)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS INTEGER)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST((vt1.c0 IN (vt1.c0)) AS INTEGER)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 NOT INDEXED WHERE (((CAST((vt1.c0 IN (vt1.c0)) AS INTEGER)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING NULLIF(DISTINCT '541255067' COLLATE BINARY, MAX(COUNT(vt0.c1))) UNION ALL SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING (NOT (NULLIF(DISTINCT '541255067' COLLATE BINARY, MAX(COUNT(vt0.c1))))) UNION ALL SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING ((NULLIF(DISTINCT '541255067' COLLATE BINARY, MAX(COUNT(vt0.c1)))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0) ISNULL)) NOT BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (JULIANDAY(vt1.c0, vt1.c0, vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) ISNULL)) NOT BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (JULIANDAY(vt1.c0, vt1.c0, vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0) ISNULL)) NOT BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (JULIANDAY(vt1.c0, vt1.c0, vt1.c0)))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt1.c0)))AND(-1530420917))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((NOT (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt1.c0)))AND(-1530420917))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((NOT (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt1.c0)))AND(-1530420917))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) GROUP BY vt0.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))))) GROUP BY vt0.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.c2, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c2, vt1.c0, vt0.c1;
SELECT ALL vt0.c2, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c2, vt1.c0, vt0.c1 HAVING (((AVG(MIN(COUNT(vt1.c0))))) BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((COUNT(*) COLLATE RTRIM))) UNION ALL SELECT vt0.c2, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c2, vt1.c0, vt0.c1 HAVING (NOT ((((AVG(MIN(COUNT(vt1.c0))))) BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((COUNT(*) COLLATE RTRIM))))) UNION ALL SELECT vt0.c2, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c2, vt1.c0, vt0.c1 HAVING (((((AVG(MIN(COUNT(vt1.c0))))) BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((COUNT(*) COLLATE RTRIM)))) ISNULL);
SELECT * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE ((- ((NOT (vt1.c0))))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT ((- ((NOT (vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((((- ((NOT (vt1.c0))))) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt1, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt1, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt1, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt1, vt0;
SELECT vt0.c1 FROM vt0 LEFT OUTER JOIN vt1 ON ((x'' COLLATE RTRIM)!=(CASE 0X30c3a828  WHEN 2.048455667E9 THEN -427577770 END)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 LEFT OUTER JOIN vt1 ON ((x'' COLLATE RTRIM)!=(CASE 0x30c3a828  WHEN 2.048455667E9 THEN -427577770 END)) WHERE (((((((((vt0.c1)OR((- (vt0.c1)))))OR(vt0.c2 COLLATE NOCASE)))OR(LIKELIHOOD(vt0.c0, 0.24858184977986097))))OR(SQLITE_VERSION()))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 LEFT OUTER JOIN vt1 ON ((x'' COLLATE RTRIM)<>(CASE 0X30c3a828  WHEN 2.048455667E9 THEN -427577770 END)) WHERE ((NOT (((((((((vt0.c1)OR((- (vt0.c1)))))OR(vt0.c2 COLLATE NOCASE)))OR(LIKELIHOOD(vt0.c0, 0.24858184977986097))))OR(SQLITE_VERSION()))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 LEFT OUTER JOIN vt1 ON ((x'' COLLATE RTRIM)<>(CASE 0x30c3a828  WHEN 2.048455667E9 THEN -427577770 END)) WHERE (((((((((((vt0.c1)OR((- (vt0.c1)))))OR(vt0.c2 COLLATE NOCASE)))OR(LIKELIHOOD(vt0.c0, 0.24858184977986097))))OR(SQLITE_VERSION()))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 LEFT OUTER JOIN vt1 ON ((x'' COLLATE RTRIM)!=(CASE 0X30c3a828  WHEN 2.048455667E9 THEN -427577770 END)) GROUP BY vt0.c1;
SELECT vt0.c2 FROM vt1, vt0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt1, vt0 GROUP BY vt0.c2 HAVING TOTAL(GROUP_CONCAT(MAX(MIN(SUM(vt0.c1))))) UNION ALL SELECT ALL vt0.c2 FROM vt1, vt0 GROUP BY vt0.c2 HAVING (NOT (TOTAL(GROUP_CONCAT(MAX(MIN(SUM(vt0.c1))))))) UNION ALL SELECT ALL vt0.c2 FROM vt1, vt0 GROUP BY vt0.c2 HAVING ((TOTAL(GROUP_CONCAT(MAX(MIN(SUM(vt0.c1)))))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) ISNULL))>>(vt1.c0))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((vt1.c0) ISNULL))>>(vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((vt1.c0) ISNULL))>>(vt1.c0))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (0.3093310500544131) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (0.3093310500544131))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((0.3093310500544131) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((- (vt1.c0)) IN ()) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((- (vt1.c0)) IN ()) WHERE ((NOT (((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c2)))AND(vt1.c0)))OR(vt1.c0))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((- (vt1.c0)) IN ()) WHERE ((NOT ((NOT (((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c2)))AND(vt1.c0)))OR(vt1.c0))))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((- (vt1.c0)) IN ()) WHERE ((((NOT (((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c2)))AND(vt1.c0)))OR(vt1.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((- (vt1.c0)) IN ()) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING TOTAL(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING (NOT (TOTAL(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING ((TOTAL(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING TOTAL(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING (NOT (TOTAL(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING ((TOTAL(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON vt0.c1;
SELECT * FROM vt0 INNER JOIN vt1 ON vt0.c1 WHERE (((((((((((((vt1.c0)OR(vt0.c2)))OR(vt0.c0)))OR(((vt0.c2)==(vt0.c1)))))OR(((((vt1.c0)AND(vt0.c1)))OR(vt0.c2)))))OR(CAST(vt0.c0 AS NUMERIC))))AND('791017724'))) ORDER BY (vt0.c0 IN ()) COLLATE BINARY DESC;
SELECT * FROM vt0 INNER JOIN vt1 ON vt0.c1 WHERE ((NOT (((((((((((((vt1.c0)OR(vt0.c2)))OR(vt0.c0)))OR(((vt0.c2)==(vt0.c1)))))OR(((((vt1.c0)AND(vt0.c1)))OR(vt0.c2)))))OR(CAST(vt0.c0 AS NUMERIC))))AND('791017724'))))) ORDER BY (vt0.c0 IN ()) COLLATE BINARY DESC;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON vt0.c1 WHERE (((((((((((((((vt1.c0)OR(vt0.c2)))OR(vt0.c0)))OR(((vt0.c2)==(vt0.c1)))))OR(((((vt1.c0)AND(vt0.c1)))OR(vt0.c2)))))OR(CAST(vt0.c0 AS NUMERIC))))AND('791017724'))) ISNULL)) ORDER BY (vt0.c0 IN ()) COLLATE BINARY DESC;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON vt0.c1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (ABS(DISTINCT ((vt0.c1) IS FALSE))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (ABS(DISTINCT ((vt0.c1) IS FALSE))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((ABS(DISTINCT ((vt0.c1) IS FALSE))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt1 WHERE ((((vt1.c0)/(vt1.c0)) IN ())) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0, vt1 WHERE ((NOT ((((vt1.c0)/(vt1.c0)) IN ())))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt1 WHERE ((((((vt1.c0)/(vt1.c0)) IN ())) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
