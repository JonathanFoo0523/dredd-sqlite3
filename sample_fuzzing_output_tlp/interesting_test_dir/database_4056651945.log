-- Time: 2024/06/09 16:14:19
-- Database: database45
-- Database version: 3.40.0
-- seed value: 4056651945
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, compress=likely, uncompress=likely); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 0ms;
UPDATE rt1 SET (c0)=(NULL) WHERE ((NOT (rt1.c2)) IN ()); -- 0ms;
UPDATE vt0 SET (c0, c0)=('', NULL) WHERE LIKELY(DISTINCT ((vt0.c0) ISNULL)); -- 0ms;
UPDATE OR IGNORE rt1 SET (c1, c2, c2)=(NULL, -1752479837, 0.36804979205546473); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''), ('-1752479837'), (0.24580512550070122); -- 0ms;
UPDATE vt0 SET c0=NULL, c0=0.16807139573934882 WHERE x''; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=13'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '49508'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '50628'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE vt0 SET c0=NULL; -- 1ms;
END; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (''), (NULL), ('1141122220'); -- 0ms;
PRAGMA cell_size_check; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('0.24580512550070122') WHERE '~o/K'; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c2, c1, c0) VALUES ('K!Q', '1102586342', x'380c'), (0.3031231302084655, '1693711609', x''), (NULL, 0.4354075538916323, 'g\n1'); -- 1ms;
INSERT OR ROLLBACK INTO rt1(c0) VALUES (x''); -- 0ms;
PRAGMA foreign_keys; -- 0ms;
ANALYZE; -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED); -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
INSERT OR REPLACE INTO rt1(c2) VALUES (x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 7ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.application_id = 7948027479294576154; -- 0ms;
UPDATE OR REPLACE rt1 SET c1='9223372036854775807', c1=NULL; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
PRAGMA temp.soft_heap_limit; -- 0ms;
UPDATE vt0 SET c0=0.6287850391852813 WHERE ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))>=(json_array_length(vt0.c0, x'2d4f'))); -- 3ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(0.09178913455932047, x'7f762ab1') WHERE vt0.c0; -- 2ms;
REINDEX  rt1; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (''), (0.9740046812291602), (NULL); -- 0ms;
END; -- 2ms;
PRAGMA journal_size_limit = -3738000988313892426; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (''); -- 1ms;
UPDATE vt0 SET (c0)=(x'') WHERE vt0.c0; -- 1ms;
ANALYZE main; -- 1ms;
UPDATE OR REPLACE vt1 SET (c0, c0, c0)=(NULL, x'c0a6', 0xece2827); -- 0ms;
UPDATE OR IGNORE rt1 SET (c0)=(x''); -- 1ms;
INSERT OR FAIL INTO vt0(c0) VALUES (0.9853763117076769); -- 0ms;
UPDATE rt1 SET (c1)=(273807531) WHERE (rt1.c1 IN ()); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '60329'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '56027'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '38462'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 228170551); -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 361694968); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '33396'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
UPDATE vt1 SET (c0)=(x''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM vt0; -- 0ms;
UPDATE OR IGNORE vt1 SET c0='p'; -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c0) VALUES ('0.6287850391852813', 0.2628782024622073); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '31229'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL), (-2004831739), (''); -- 0ms;
UPDATE rt1 SET c2=0.32669463614853644 WHERE rt1.c2; -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=0.2628782024622073 WHERE ((vt0.c0 IN (vt0.c0)) IN ()); -- 0ms;
PRAGMA busy_timeout = 0; -- 1ms;
PRAGMA main.short_column_names = true; -- 0ms;
UPDATE OR IGNORE rt1 SET c1=NULL, c1=NULL, c1='g\n1'; -- 0ms;
VACUUM; -- 2ms;
PRAGMA main.cell_size_check = false; -- 0ms;
ANALYZE; -- 1ms;
ANALYZE; -- 0ms;
PRAGMA temp.recursive_triggers; -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
PRAGMA wal_autocheckpoint = -458163595097195869; -- 0ms;
DROP TABLE IF EXISTS vt0; -- 1ms;
PRAGMA journal_size_limit; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c2=NULL, c2=x'', c1=-2.004831739E9; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1543656146);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=15'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0.3031231302084655, c0='248391719' WHERE ((((vt1.c0) IS TRUE)) ISNULL); -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES (x'2465'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 8ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1148832879); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=2'); -- 1ms;
UPDATE OR IGNORE rt1 SET (c2)=('0.6287850391852813') WHERE ((DATETIME(rt1.c0, rt1.c0, rt1.c2))GLOB(((NULL) BETWEEN (rt1.c0) AND (rt1.c1)))); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1141122220);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 952522462);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR ABORT INTO rt1(c2) VALUES (NULL); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL); -- 0ms;
PRAGMA short_column_names = true; -- 0ms;
UPDATE rt1 SET (c2)=(NULL) WHERE ((((rt1.c2) ISNULL)) BETWEEN (((rt1.c2) BETWEEN (rt1.c0) AND (NULL))) AND (MAX(rt1.c0, rt1.c2, x'', rt1.c0))); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 2025772357);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '61796'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=1'); -- 0ms;
UPDATE OR FAIL vt1 SET c0=x'', c0=x'09ff' WHERE CAST((vt1.c0 IN (vt1.c0)) AS TEXT); -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '46325'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR REPLACE INTO rt1(c0) VALUES (0.28796857922645613); -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO rt1(c2) VALUES (0.16807139573934882); -- 0ms;
UPDATE OR REPLACE rt1 SET c0=0x81be5ab, c1=NULL; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 0); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1141122220);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 15); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '34766'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '63434'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
UPDATE OR IGNORE vt1 SET c0=NULL WHERE (((NULL))>=((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
UPDATE OR ABORT rt1 SET (c2)=(x''); -- 1ms;
PRAGMA temp.checkpoint_fullfsync = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c0='1141122220' WHERE CASE rt1.c0  WHEN COALESCE(rt1.c2, rt1.c0) THEN rt1.c0 WHEN CASE WHEN rt1.c1 THEN rt1.c1 WHEN 0.2354528672913626 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END THEN rt1.c1 COLLATE RTRIM WHEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END THEN ((((rt1.c0)AND(rt1.c1)))AND(x'')) ELSE ((rt1.c1)&(rt1.c1)) END; -- 0ms;
PRAGMA optimize; -- 0ms;
PRAGMA main.foreign_keys; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
INSERT OR ABORT INTO rt1(c2) VALUES (1.14112222E9); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((~ (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((~ (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((~ (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM vt1, rt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM vt1, rt1 WHERE (((CAST(rt1.c2 AS NUMERIC)) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c1 ELSE 0.7935098783544156 END) AND (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 END))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM vt1, rt1 WHERE ((NOT (((CAST(rt1.c2 AS NUMERIC)) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c1 ELSE 0.7935098783544156 END) AND (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 END))))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM vt1, rt1 WHERE (((((CAST(rt1.c2 AS NUMERIC)) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c1 ELSE 0.7935098783544156 END) AND (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 END))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM vt1, rt1;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM rt1 WHERE (((rt1.c1)-(((rt1.c2) BETWEEN (-1.752479837E9) AND (rt1.c2))))) GROUP BY rt1.c1, rt1.c2 UNION SELECT rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (((rt1.c1)-(((rt1.c2) BETWEEN (-1.752479837E9) AND (rt1.c2))))))) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE (((((rt1.c1)-(((rt1.c2) BETWEEN (-1.752479837E9) AND (rt1.c2))))) ISNULL)) GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT(*)) ISNULL))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(*)) ISNULL)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT(*)) ISNULL))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(*)) ISNULL)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL MIN(((((0.15944175433473995)<(rt1.c1)))IS NOT((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((vt1.c0)))))) FROM rt1, vt1;
SELECT * FROM vt1, rt1;
SELECT * FROM vt1, rt1 WHERE (((CASE ''  WHEN vt1.c0 THEN vt1.c0 END) BETWEEN ((((0.07537731461765762))<=((vt1.c0)))) AND (0.18871803602965775))) UNION ALL SELECT ALL * FROM vt1, rt1 WHERE ((NOT (((CASE ''  WHEN vt1.c0 THEN vt1.c0 END) BETWEEN ((((0.07537731461765762))<=((vt1.c0)))) AND (0.18871803602965775))))) UNION ALL SELECT ALL * FROM vt1, rt1 WHERE (((((CASE ''  WHEN vt1.c0 THEN vt1.c0 END) BETWEEN ((((0.07537731461765762))<=((vt1.c0)))) AND (0.18871803602965775))) ISNULL));
SELECT * FROM vt1, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))-(load_extension(rt1.c2, rt1.c0)))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))-(load_extension(rt1.c2, rt1.c0)))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))-(load_extension(rt1.c2, rt1.c0)))) ISNULL));
SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM rt1 WHERE (CAST(rt1.c0 COLLATE RTRIM AS INTEGER)) GROUP BY rt1.c2, rt1.c0 UNION SELECT rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (CAST(rt1.c0 COLLATE RTRIM AS INTEGER)))) GROUP BY rt1.c2, rt1.c0 UNION SELECT rt1.c2, rt1.c0 FROM rt1 WHERE (((CAST(rt1.c0 COLLATE RTRIM AS INTEGER)) ISNULL)) GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c0, vt1.c0, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, vt1.c0, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt1.c0, rt1.c2 HAVING COUNT(TOTAL(MIN(COUNT(MAX(vt1.c0))))) UNION ALL SELECT ALL rt1.c1, rt1.c0, vt1.c0, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt1.c0, rt1.c2 HAVING (NOT (COUNT(TOTAL(MIN(COUNT(MAX(vt1.c0))))))) UNION ALL SELECT ALL rt1.c1, rt1.c0, vt1.c0, rt1.c2 FROM vt1 NOT INDEXED, rt1 GROUP BY rt1.c1, rt1.c0, vt1.c0, rt1.c2 HAVING ((COUNT(TOTAL(MIN(COUNT(MAX(vt1.c0)))))) ISNULL);
SELECT * FROM rt1, vt1;
SELECT * FROM rt1, vt1 WHERE (CAST(rt1.c1 AS INTEGER) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt1, vt1 WHERE ((NOT (CAST(rt1.c1 AS INTEGER) COLLATE NOCASE))) UNION ALL SELECT * FROM rt1, vt1 WHERE (((CAST(rt1.c1 AS INTEGER) COLLATE NOCASE) ISNULL));
SELECT * FROM rt1, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((140210877 COLLATE BINARY) IS TRUE)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((140210877 COLLATE BINARY) IS TRUE)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((140210877 COLLATE BINARY) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, vt1 WHERE ((((rt1.c2)*(rt1.c1)) IN ())) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1, vt1 WHERE ((NOT ((((rt1.c2)*(rt1.c1)) IN ())))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1, vt1 WHERE ((((((rt1.c2)*(rt1.c1)) IN ())) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0;
SELECT rt1.c1, rt1.c2 FROM vt1 LEFT OUTER JOIN rt1 ON CASE (((rt1.c2, vt1.c0, rt1.c0))<=((rt1.c0, '{{', NULL)))  WHEN rt1.c1 THEN (rt1.c1 IN ()) END GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM vt1 LEFT OUTER JOIN rt1 ON CASE (((rt1.c2, vt1.c0, rt1.c0))<=((rt1.c0, '{{', NULL)))  WHEN rt1.c1 THEN (rt1.c1 IN ()) END GROUP BY rt1.c1, rt1.c2 HAVING ((MAX(rt1.c2))|((((COUNT(rt1.c1), rt1.c0, vt1.c0))>=((rt1.c1, MAX(rt1.c1), COUNT(rt1.c1)))))) UNION ALL SELECT rt1.c1, rt1.c2 FROM vt1 LEFT OUTER JOIN rt1 ON CASE (((rt1.c2, vt1.c0, rt1.c0))<=((rt1.c0, '{{', NULL)))  WHEN rt1.c1 THEN (rt1.c1 IN ()) END GROUP BY rt1.c1, rt1.c2 HAVING (NOT (((MAX(rt1.c2))|((((COUNT(rt1.c1), rt1.c0, vt1.c0))>=((rt1.c1, MAX(rt1.c1), COUNT(rt1.c1)))))))) UNION ALL SELECT rt1.c1, rt1.c2 FROM vt1 LEFT OUTER JOIN rt1 ON CASE (((rt1.c2, vt1.c0, rt1.c0))<=((rt1.c0, '{{', NULL)))  WHEN rt1.c1 THEN (rt1.c1 IN ()) END GROUP BY rt1.c1, rt1.c2 HAVING ((((MAX(rt1.c2))|((((COUNT(rt1.c1), rt1.c0, vt1.c0))>=((rt1.c1, MAX(rt1.c1), COUNT(rt1.c1))))))) ISNULL);
SELECT rt1.c1, rt1.c2 FROM vt1 LEFT OUTER JOIN rt1 ON CASE (((rt1.c2, vt1.c0, rt1.c0))<=((rt1.c0, '{{', NULL)))  WHEN rt1.c1 THEN (rt1.c1 IN ()) END GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM vt1 LEFT OUTER JOIN rt1 ON CASE (((rt1.c2, vt1.c0, rt1.c0))<=((rt1.c0, '{{', NULL)))  WHEN rt1.c1 THEN (rt1.c1 IN ()) END GROUP BY rt1.c1, rt1.c2 HAVING ((MAX(rt1.c2))|((((COUNT(rt1.c1), rt1.c0, vt1.c0))>=((rt1.c1, MAX(rt1.c1), COUNT(rt1.c1)))))) UNION ALL SELECT rt1.c1, rt1.c2 FROM vt1 LEFT OUTER JOIN rt1 ON CASE (((rt1.c2, vt1.c0, rt1.c0))<=((rt1.c0, '{{', NULL)))  WHEN rt1.c1 THEN (rt1.c1 IN ()) END GROUP BY rt1.c1, rt1.c2 HAVING (NOT (((MAX(rt1.c2))|((((COUNT(rt1.c1), rt1.c0, vt1.c0))>=((rt1.c1, MAX(rt1.c1), COUNT(rt1.c1)))))))) UNION ALL SELECT rt1.c1, rt1.c2 FROM vt1 LEFT OUTER JOIN rt1 ON CASE (((rt1.c2, vt1.c0, rt1.c0))<=((rt1.c0, '{{', NULL)))  WHEN rt1.c1 THEN (rt1.c1 IN ()) END GROUP BY rt1.c1, rt1.c2 HAVING ((((MAX(rt1.c2))|((((COUNT(rt1.c1), rt1.c0, vt1.c0))>=((rt1.c1, MAX(rt1.c1), COUNT(rt1.c1))))))) ISNULL);
SELECT rt1.c1, rt1.c2 FROM vt1 LEFT OUTER JOIN rt1 ON CASE (((rt1.c2, vt1.c0, rt1.c0))<=((rt1.c0, '{{', NULL)))  WHEN rt1.c1 THEN (rt1.c1 IN ()) END GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c0, vt1.c0 FROM rt1 LEFT OUTER JOIN vt1 ON 'km0';
SELECT rt1.c0, vt1.c0 FROM rt1 LEFT OUTER JOIN vt1 ON 'km0' WHERE ((CASE WHEN rt1.c0 THEN rt1.c1 ELSE vt1.c0 END IN ())) UNION ALL SELECT rt1.c0, vt1.c0 FROM rt1 LEFT OUTER JOIN vt1 ON 'km0' WHERE ((NOT ((CASE WHEN rt1.c0 THEN rt1.c1 ELSE vt1.c0 END IN ())))) UNION ALL SELECT rt1.c0, vt1.c0 FROM rt1 LEFT OUTER JOIN vt1 ON 'km0' WHERE ((((CASE WHEN rt1.c0 THEN rt1.c1 ELSE vt1.c0 END IN ())) ISNULL));
SELECT ALL rt1.c0, vt1.c0 FROM rt1 LEFT OUTER JOIN vt1 ON 'km0';
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((NOT (((rt1.c1) ISNULL)))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((NOT (((rt1.c1) ISNULL)))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((NOT (((rt1.c1) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL vt1.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c1, rt1.c2, rt1.c0;
SELECT vt1.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, vt1 WHERE ('') GROUP BY vt1.c0, rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL vt1.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, vt1 WHERE ((NOT (''))) GROUP BY vt1.c0, rt1.c1, rt1.c2, rt1.c0 UNION SELECT vt1.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, vt1 WHERE ((('') ISNULL)) GROUP BY vt1.c0, rt1.c1, rt1.c2, rt1.c0;
SELECT ALL vt1.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1, vt1.c0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1, vt1.c0 HAVING MIN(((AVG(rt1.c0))AND(rt1.c1))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1, vt1.c0 HAVING (NOT (MIN(((AVG(rt1.c0))AND(rt1.c1))))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1, vt1.c0 HAVING ((MIN(((AVG(rt1.c0))AND(rt1.c1)))) ISNULL);
SELECT ALL rt1.c2, rt1.c1 FROM rt1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE (rt1.c1) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (rt1.c1))) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1 WHERE (((rt1.c1) ISNULL));
SELECT ALL rt1.c2, rt1.c1 FROM rt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (LIKELY(CAST(vt1.c0 AS INTEGER))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (LIKELY(CAST(vt1.c0 AS INTEGER))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((LIKELY(CAST(vt1.c0 AS INTEGER))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 WHERE ((((+ (rt1.c2))) NOT BETWEEN ((- (rt1.c2))) AND (((rt1.c1)IS NOT(rt1.c0))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE ((NOT ((((+ (rt1.c2))) NOT BETWEEN ((- (rt1.c2))) AND (((rt1.c1)IS NOT(rt1.c0))))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE ((((((+ (rt1.c2))) NOT BETWEEN ((- (rt1.c2))) AND (((rt1.c1)IS NOT(rt1.c0))))) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING TRIM(GROUP_CONCAT(COUNT(AVG(AVG(SUM(SUM(rt1.c1)))))), TOTAL(COUNT(*))) UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (TRIM(GROUP_CONCAT(COUNT(AVG(AVG(SUM(SUM(rt1.c1)))))), TOTAL(COUNT(*))))) UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((TRIM(GROUP_CONCAT(COUNT(AVG(AVG(SUM(SUM(rt1.c1)))))), TOTAL(COUNT(*)))) ISNULL);
SELECT ALL MIN((~ ((vt1.c0 IN (vt1.c0, vt1.c0))))) FROM vt1 ORDER BY CAST(((vt1.c0) IS TRUE) AS REAL) ASC, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) IS TRUE) DESC;
SELECT ALL * FROM vt1, rt1;
SELECT ALL * FROM vt1, rt1 WHERE (((((vt1.c0) NOT NULL)) NOTNULL)) UNION ALL SELECT * FROM vt1, rt1 WHERE ((NOT (((((vt1.c0) NOT NULL)) NOTNULL)))) UNION ALL SELECT * FROM vt1, rt1 WHERE (((((((vt1.c0) NOT NULL)) NOTNULL)) ISNULL));
SELECT ALL * FROM vt1, rt1;
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE (((((((rt1.c2)AND(rt1.c2)))OR(rt1.c2))) NOT NULL)) UNION SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (((((((rt1.c2)AND(rt1.c2)))OR(rt1.c2))) NOT NULL)))) UNION SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE (((((((((rt1.c2)AND(rt1.c2)))OR(rt1.c2))) NOT NULL)) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((((rt1.c0)>(rt1.c1))) IS TRUE)) GROUP BY rt1.c2, rt1.c0, rt1.c1 UNION SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (((((rt1.c0)>(rt1.c1))) IS TRUE)))) GROUP BY rt1.c2, rt1.c0, rt1.c1 UNION SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((((((rt1.c0)>(rt1.c1))) IS TRUE)) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c2 HAVING ((NULLIF(MAX(SUM(vt1.c0)), rt1.c2))LIKE(((rt1.c0) BETWEEN (vt1.c0) AND (GROUP_CONCAT(TOTAL(rt1.c2)))))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c2 HAVING (NOT (((NULLIF(MAX(SUM(vt1.c0)), rt1.c2))LIKE(((rt1.c0) BETWEEN (vt1.c0) AND (GROUP_CONCAT(TOTAL(rt1.c2)))))))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c2 HAVING ((((NULLIF(MAX(SUM(vt1.c0)), rt1.c2))LIKE(((rt1.c0) BETWEEN (vt1.c0) AND (GROUP_CONCAT(TOTAL(rt1.c2))))))) ISNULL);
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) IN ())) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) IN ())))) UNION ALL SELECT * FROM rt1 NOT INDEXED WHERE ((((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) IN ())) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c1 FROM vt1, rt1;
SELECT DISTINCT rt1.c1 FROM vt1, rt1 WHERE ((~ ((~ (rt1.c0))))) UNION SELECT DISTINCT rt1.c1 FROM vt1, rt1 WHERE ((NOT ((~ ((~ (rt1.c0))))))) UNION SELECT DISTINCT rt1.c1 FROM vt1, rt1 WHERE ((((~ ((~ (rt1.c0))))) ISNULL));
SELECT DISTINCT rt1.c1 FROM vt1, rt1;
SELECT rt1.c0, rt1.c2, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c2, vt1.c0;
SELECT ALL rt1.c0, rt1.c2, vt1.c0 FROM rt1, vt1 WHERE ((((json_type(vt1.c0)))>=(('XZ|}<	回^A')))) GROUP BY rt1.c0, rt1.c2, vt1.c0 UNION SELECT rt1.c0, rt1.c2, vt1.c0 FROM rt1, vt1 WHERE ((NOT ((((json_type(vt1.c0)))>=(('XZ|}<	回^A')))))) GROUP BY rt1.c0, rt1.c2, vt1.c0 UNION SELECT ALL rt1.c0, rt1.c2, vt1.c0 FROM rt1, vt1 WHERE ((((((json_type(vt1.c0)))>=(('XZ|}<	回^A')))) ISNULL)) GROUP BY rt1.c0, rt1.c2, vt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING NULL UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((NULL) ISNULL);
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING NULL UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((NULL) ISNULL);
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL MIN(((((((((((rt1.c0)AND(vt1.c0)))AND(rt1.c1)))AND(rt1.c0)))OR(x''))) ISNULL)) FROM vt1 NOT INDEXED, rt1 ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN vt1.c0 THEN vt1.c0 END) BETWEEN ((((rt1.c1))>=((rt1.c1)))) AND (rt1.c2)) DESC  NULLS FIRST;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1 NOT INDEXED CROSS JOIN rt1 ON CASE WHEN (NOT (vt1.c0)) THEN NULL ELSE NULL END;
SELECT DISTINCT * FROM vt1 CROSS JOIN rt1 ON CASE WHEN (NOT (vt1.c0)) THEN NULL ELSE NULL END WHERE (((((((rt1.c0)OR(rt1.c1)))OR(rt1.c0))) NOT BETWEEN (((rt1.c1)<=(rt1.c2))) AND (('' IN (rt1.c0))))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN rt1 ON CASE WHEN (NOT (vt1.c0)) THEN NULL ELSE NULL END WHERE ((NOT (((((((rt1.c0)OR(rt1.c1)))OR(rt1.c0))) NOT BETWEEN (((rt1.c1)<=(rt1.c2))) AND (('' IN (rt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN rt1 ON CASE WHEN (NOT (vt1.c0)) THEN NULL ELSE NULL END WHERE (((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c0))) NOT BETWEEN (((rt1.c1)<=(rt1.c2))) AND (('' IN (rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1 NOT INDEXED CROSS JOIN rt1 ON CASE WHEN (NOT (vt1.c0)) THEN NULL ELSE NULL END;
SELECT ALL rt1.c2, rt1.c1, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, vt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0, vt1.c0 FROM vt1, rt1 WHERE (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) COLLATE RTRIM) GROUP BY rt1.c2, rt1.c1, rt1.c0, vt1.c0 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c0, vt1.c0 FROM vt1, rt1 WHERE ((NOT (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) COLLATE RTRIM))) GROUP BY rt1.c2, rt1.c1, rt1.c0, vt1.c0 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c0, vt1.c0 FROM vt1, rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) COLLATE RTRIM) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c0, vt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, vt1.c0;
SELECT vt1.c0, rt1.c2 FROM rt1 INNER JOIN vt1 ON 0.9334521643148149 GROUP BY vt1.c0, rt1.c2;
SELECT vt1.c0, rt1.c2 FROM rt1 INNER JOIN vt1 ON 0.9334521643148149 GROUP BY vt1.c0, rt1.c2 HAVING ((((rt1.c0) IS FALSE))<(SUM(TOTAL(COUNT(*))))) UNION ALL SELECT vt1.c0, rt1.c2 FROM rt1 INNER JOIN vt1 ON 0.9334521643148149 GROUP BY vt1.c0, rt1.c2 HAVING (NOT (((((rt1.c0) IS FALSE))<(SUM(TOTAL(COUNT(*))))))) UNION ALL SELECT ALL vt1.c0, rt1.c2 FROM rt1 INNER JOIN vt1 ON 0.9334521643148149 GROUP BY vt1.c0, rt1.c2 HAVING ((((((rt1.c0) IS FALSE))<(SUM(TOTAL(COUNT(*)))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (x'') UNION ALL SELECT * FROM vt1 WHERE ((NOT (x''))) UNION ALL SELECT * FROM vt1 WHERE (((x'') ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE (((((((rt1.c1, rt1.c2, rt1.c0)) BETWEEN ((rt1.c0, rt1.c2, vt1.c0)) AND ((vt1.c0, rt1.c1, vt1.c0))), ((rt1.c0)>(rt1.c2)), rt1.c2))==((0.4318870276090647, ((rt1.c0)<=(rt1.c2)), ((vt1.c0)<<(rt1.c1)))))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT (((((((rt1.c1, rt1.c2, rt1.c0)) BETWEEN ((rt1.c0, rt1.c2, vt1.c0)) AND ((vt1.c0, rt1.c1, vt1.c0))), ((rt1.c0)>(rt1.c2)), rt1.c2))=((0.4318870276090647, ((rt1.c0)<=(rt1.c2)), ((vt1.c0)<<(rt1.c1)))))))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE (((((((((rt1.c1, rt1.c2, rt1.c0)) BETWEEN ((rt1.c0, rt1.c2, vt1.c0)) AND ((vt1.c0, rt1.c1, vt1.c0))), ((rt1.c0)>(rt1.c2)), rt1.c2))==((0.4318870276090647, ((rt1.c0)<=(rt1.c2)), ((vt1.c0)<<(rt1.c1)))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT vt1.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT vt1.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt1, rt1 WHERE ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE vt1.c0 END IN ())) GROUP BY vt1.c0, rt1.c2, rt1.c1, rt1.c0 UNION SELECT vt1.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt1, rt1 WHERE ((NOT ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE vt1.c0 END IN ())))) GROUP BY vt1.c0, rt1.c2, rt1.c1, rt1.c0 UNION SELECT vt1.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt1, rt1 WHERE ((((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE vt1.c0 END IN ())) ISNULL)) GROUP BY vt1.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT vt1.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 NOT INDEXED GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (+ (SUM(rt1.c1))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT ((+ (SUM(rt1.c1))))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (((+ (SUM(rt1.c1)))) ISNULL);
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 NOT INDEXED GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (+ (SUM(rt1.c1))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT ((+ (SUM(rt1.c1))))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (((+ (SUM(rt1.c1)))) ISNULL);
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c1 FROM rt1;
SELECT rt1.c1 FROM rt1 WHERE (((((rt1.c0)-(rt1.c2))) NOT BETWEEN (rt1.c2) AND (((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))))) UNION ALL SELECT rt1.c1 FROM rt1 WHERE ((NOT (((((rt1.c0)-(rt1.c2))) NOT BETWEEN (rt1.c2) AND (((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))))))) UNION ALL SELECT rt1.c1 FROM rt1 WHERE (((((((rt1.c0)-(rt1.c2))) NOT BETWEEN (rt1.c2) AND (((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))))) ISNULL));
SELECT ALL rt1.c1 FROM rt1;
SELECT DISTINCT * FROM rt1 CROSS JOIN vt1 ON CASE ((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c1))  WHEN ((rt1.c2)<(vt1.c0)) THEN CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 END WHEN ((rt1.c2)!=(0.04670012452010264)) THEN (rt1.c2 IN ()) WHEN ((((rt1.c0)OR(vt1.c0)))AND(rt1.c1)) THEN CAST(vt1.c0 AS INTEGER) WHEN ((rt1.c0) BETWEEN (vt1.c0) AND (rt1.c0)) THEN rt1.c1 WHEN ((((0.9339718429703752)AND(rt1.c1)))OR(rt1.c0)) THEN rt1.c0 COLLATE RTRIM END;
SELECT DISTINCT * FROM rt1 CROSS JOIN vt1 ON CASE ((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c1))  WHEN ((rt1.c2)<(vt1.c0)) THEN CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 END WHEN ((rt1.c2)!=(0.04670012452010264)) THEN (rt1.c2 IN ()) WHEN ((((rt1.c0)OR(vt1.c0)))AND(rt1.c1)) THEN CAST(vt1.c0 AS INTEGER) WHEN ((rt1.c0) BETWEEN (vt1.c0) AND (rt1.c0)) THEN rt1.c1 WHEN ((((0.9339718429703752)AND(rt1.c1)))OR(rt1.c0)) THEN rt1.c0 COLLATE RTRIM END WHERE ((((rt1.c2)) BETWEEN ((CASE WHEN rt1.c2 THEN rt1.c2 ELSE 'By' END)) AND ((((rt1.c1)IS NOT(rt1.c2)))))) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN vt1 ON CASE ((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c1))  WHEN ((rt1.c2)<(vt1.c0)) THEN CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 END WHEN ((rt1.c2)!=(0.04670012452010264)) THEN (rt1.c2 IN ()) WHEN ((((rt1.c0)OR(vt1.c0)))AND(rt1.c1)) THEN CAST(vt1.c0 AS INTEGER) WHEN ((rt1.c0) BETWEEN (vt1.c0) AND (rt1.c0)) THEN rt1.c1 WHEN ((((0.9339718429703752)AND(rt1.c1)))OR(rt1.c0)) THEN rt1.c0 COLLATE RTRIM END WHERE ((NOT ((((rt1.c2)) BETWEEN ((CASE WHEN rt1.c2 THEN rt1.c2 ELSE 'By' END)) AND ((((rt1.c1)IS NOT(rt1.c2)))))))) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN vt1 ON CASE ((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c1))  WHEN ((rt1.c2)<(vt1.c0)) THEN CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 END WHEN ((rt1.c2)!=(0.04670012452010264)) THEN (rt1.c2 IN ()) WHEN ((((rt1.c0)OR(vt1.c0)))AND(rt1.c1)) THEN CAST(vt1.c0 AS INTEGER) WHEN ((rt1.c0) BETWEEN (vt1.c0) AND (rt1.c0)) THEN rt1.c1 WHEN ((((0.9339718429703752)AND(rt1.c1)))OR(rt1.c0)) THEN rt1.c0 COLLATE RTRIM END WHERE ((((((rt1.c2)) BETWEEN ((CASE WHEN rt1.c2 THEN rt1.c2 ELSE 'By' END)) AND ((((rt1.c1)IS NOT(rt1.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt1 CROSS JOIN vt1 ON CASE ((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c1))  WHEN ((rt1.c2)<(vt1.c0)) THEN CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 END WHEN ((rt1.c2)!=(0.04670012452010264)) THEN (rt1.c2 IN ()) WHEN ((((rt1.c0)OR(vt1.c0)))AND(rt1.c1)) THEN CAST(vt1.c0 AS INTEGER) WHEN ((rt1.c0) BETWEEN (vt1.c0) AND (rt1.c0)) THEN rt1.c1 WHEN ((((0.9339718429703752)AND(rt1.c1)))OR(rt1.c0)) THEN rt1.c0 COLLATE RTRIM END;
SELECT ALL vt1.c0 FROM vt1, rt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, rt1 WHERE (0.8537306967166938) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, rt1 WHERE ((NOT (0.8537306967166938))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, rt1 WHERE (((0.8537306967166938) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, rt1 GROUP BY vt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING QUOTE((((rt1.c1)) NOT BETWEEN ((TOTAL(rt1.c1))) AND ((COUNT(*))))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (QUOTE((((rt1.c1)) NOT BETWEEN ((TOTAL(rt1.c1))) AND ((COUNT(*))))))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((QUOTE((((rt1.c1)) NOT BETWEEN ((TOTAL(rt1.c1))) AND ((COUNT(*)))))) ISNULL);
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING QUOTE((((rt1.c1)) NOT BETWEEN ((TOTAL(rt1.c1))) AND ((COUNT(*))))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (QUOTE((((rt1.c1)) NOT BETWEEN ((TOTAL(rt1.c1))) AND ((COUNT(*))))))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((QUOTE((((rt1.c1)) NOT BETWEEN ((TOTAL(rt1.c1))) AND ((COUNT(*)))))) ISNULL);
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT * FROM rt1, vt1;
SELECT * FROM rt1, vt1 WHERE (CASE WHEN (NOT (rt1.c2)) THEN vt1.c0 ELSE ((rt1.c2) IS TRUE) END) UNION ALL SELECT * FROM rt1, vt1 WHERE ((NOT (CASE WHEN (NOT (rt1.c2)) THEN vt1.c0 ELSE ((rt1.c2) IS TRUE) END))) UNION ALL SELECT * FROM rt1, vt1 WHERE (((CASE WHEN (NOT (rt1.c2)) THEN vt1.c0 ELSE ((rt1.c2) IS TRUE) END) ISNULL));
SELECT * FROM rt1, vt1;
SELECT DISTINCT * FROM vt1, rt1;
SELECT DISTINCT * FROM vt1, rt1 WHERE (CASE ((-1755398655) NOTNULL)  WHEN ((rt1.c0) IS TRUE) THEN (~ (vt1.c0)) WHEN ((rt1.c1)OR(rt1.c2)) THEN json_array_length(rt1.c2) WHEN HEX(rt1.c2) THEN CASE vt1.c0  WHEN rt1.c1 THEN vt1.c0 ELSE rt1.c0 END END) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE ((NOT (CASE ((-1755398655) NOTNULL)  WHEN ((rt1.c0) IS TRUE) THEN (~ (vt1.c0)) WHEN ((rt1.c1)OR(rt1.c2)) THEN json_array_length(rt1.c2) WHEN HEX(rt1.c2) THEN CASE vt1.c0  WHEN rt1.c1 THEN vt1.c0 ELSE rt1.c0 END END))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE (((CASE ((-1755398655) NOTNULL)  WHEN ((rt1.c0) IS TRUE) THEN (~ (vt1.c0)) WHEN ((rt1.c1)OR(rt1.c2)) THEN json_array_length(rt1.c2) WHEN HEX(rt1.c2) THEN CASE vt1.c0  WHEN rt1.c1 THEN vt1.c0 ELSE rt1.c0 END END) ISNULL));
SELECT DISTINCT * FROM vt1, rt1;
SELECT vt1.c0, rt1.c0 FROM rt1 LEFT OUTER JOIN vt1 ON (((vt1.c0, rt1.c2, vt1.c0)) BETWEEN (((NOT (rt1.c2)), ((rt1.c1)LIKE(rt1.c0)), ((rt1.c1)/(vt1.c0)))) AND ((0Xffffffffb6812748, vt1.c0, rt1.c2 COLLATE NOCASE))) GROUP BY vt1.c0, rt1.c0;
SELECT vt1.c0, rt1.c0 FROM rt1 LEFT OUTER JOIN vt1 ON (((vt1.c0, rt1.c2, vt1.c0)) BETWEEN (((NOT (rt1.c2)), ((rt1.c1)LIKE(rt1.c0)), ((rt1.c1)/(vt1.c0)))) AND ((0Xffffffffb6812748, vt1.c0, rt1.c2 COLLATE NOCASE))) WHERE ((((rt1.c0)) NOT BETWEEN ((((rt1.c1)<=(rt1.c0)))) AND ((TYPEOF(DISTINCT rt1.c1))))) GROUP BY vt1.c0, rt1.c0 UNION SELECT ALL vt1.c0, rt1.c0 FROM rt1 LEFT OUTER JOIN vt1 ON (((vt1.c0, rt1.c2, vt1.c0)) BETWEEN (((NOT (rt1.c2)), ((rt1.c1)LIKE(rt1.c0)), ((rt1.c1)/(vt1.c0)))) AND ((0xffffffffb6812748, vt1.c0, rt1.c2 COLLATE NOCASE))) WHERE ((NOT ((((rt1.c0)) NOT BETWEEN ((((rt1.c1)<=(rt1.c0)))) AND ((TYPEOF(DISTINCT rt1.c1))))))) GROUP BY vt1.c0, rt1.c0 UNION SELECT ALL vt1.c0, rt1.c0 FROM rt1 LEFT OUTER JOIN vt1 ON (((vt1.c0, rt1.c2, vt1.c0)) BETWEEN (((NOT (rt1.c2)), ((rt1.c1)LIKE(rt1.c0)), ((rt1.c1)/(vt1.c0)))) AND ((0xffffffffb6812748, vt1.c0, rt1.c2 COLLATE NOCASE))) WHERE ((((((rt1.c0)) NOT BETWEEN ((((rt1.c1)<=(rt1.c0)))) AND ((TYPEOF(DISTINCT rt1.c1))))) ISNULL)) GROUP BY vt1.c0, rt1.c0;
SELECT vt1.c0, rt1.c0 FROM rt1 LEFT OUTER JOIN vt1 ON (((vt1.c0, rt1.c2, vt1.c0)) BETWEEN (((NOT (rt1.c2)), ((rt1.c1)LIKE(rt1.c0)), ((rt1.c1)/(vt1.c0)))) AND ((0Xffffffffb6812748, vt1.c0, rt1.c2 COLLATE NOCASE))) GROUP BY vt1.c0, rt1.c0;
SELECT ALL rt1.c1, rt1.c0, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c0, vt1.c0;
SELECT ALL rt1.c1, rt1.c0, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c0, vt1.c0 HAVING MAX((rt1.c1 IN ())) UNION ALL SELECT rt1.c1, rt1.c0, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c0, vt1.c0 HAVING (NOT (MAX((rt1.c1 IN ())))) UNION ALL SELECT ALL rt1.c1, rt1.c0, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c0, vt1.c0 HAVING ((MAX((rt1.c1 IN ()))) ISNULL);
SELECT ALL rt1.c1, rt1.c0, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c0, vt1.c0;
SELECT ALL rt1.c1, rt1.c0, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c0, vt1.c0 HAVING MAX((rt1.c1 IN ())) UNION ALL SELECT rt1.c1, rt1.c0, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c0, vt1.c0 HAVING (NOT (MAX((rt1.c1 IN ())))) UNION ALL SELECT ALL rt1.c1, rt1.c0, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c0, vt1.c0 HAVING ((MAX((rt1.c1 IN ()))) ISNULL);
SELECT ALL rt1.c1, rt1.c0, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c0, vt1.c0;
SELECT MIN(rt1.c1) FROM rt1, vt1 ORDER BY CASE ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0))  WHEN rt1.c2 THEN (((rt1.c2, vt1.c0, vt1.c0))<>((rt1.c0, '-1281331666', rt1.c1))) END DESC  NULLS FIRST;
SELECT * FROM vt1, rt1;
SELECT * FROM vt1, rt1 WHERE ((((rt1.c2, rt1.c2, vt1.c0, rt1.c2, rt1.c0))!=((rt1.c2, rt1.c2, vt1.c0, x'707d', vt1.c0))) COLLATE BINARY COLLATE BINARY) UNION ALL SELECT ALL * FROM vt1, rt1 WHERE ((NOT ((((rt1.c2, rt1.c2, vt1.c0, rt1.c2, rt1.c0))<>((rt1.c2, rt1.c2, vt1.c0, x'707d', vt1.c0))) COLLATE BINARY COLLATE BINARY))) UNION ALL SELECT * FROM vt1, rt1 WHERE ((((((rt1.c2, rt1.c2, vt1.c0, rt1.c2, rt1.c0))!=((rt1.c2, rt1.c2, vt1.c0, x'707d', vt1.c0))) COLLATE BINARY COLLATE BINARY) ISNULL));
SELECT * FROM vt1, rt1;
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1 WHERE (((0xffffffffc4a74b61) IS FALSE)) UNION SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (((0xffffffffc4a74b61) IS FALSE)))) UNION SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1 WHERE (((((0xffffffffc4a74b61) IS FALSE)) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0 FROM rt1;
SELECT ALL rt1.c0, rt1.c2, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c2, vt1.c0;
SELECT rt1.c0, rt1.c2, vt1.c0 FROM rt1, vt1 WHERE ((((((((((~ (rt1.c2)))AND(((rt1.c2)LIKE(rt1.c2)))))OR(rt1.c1 COLLATE NOCASE)))OR(((rt1.c2)&(rt1.c2)))))AND(((rt1.c0)%(rt1.c1))))) GROUP BY rt1.c0, rt1.c2, vt1.c0 UNION SELECT ALL rt1.c0, rt1.c2, vt1.c0 FROM rt1, vt1 WHERE ((NOT ((((((((((~ (rt1.c2)))AND(((rt1.c2)LIKE(rt1.c2)))))OR(rt1.c1 COLLATE NOCASE)))OR(((rt1.c2)&(rt1.c2)))))AND(((rt1.c0)%(rt1.c1))))))) GROUP BY rt1.c0, rt1.c2, vt1.c0 UNION SELECT ALL rt1.c0, rt1.c2, vt1.c0 FROM rt1, vt1 WHERE ((((((((((((~ (rt1.c2)))AND(((rt1.c2)LIKE(rt1.c2)))))OR(rt1.c1 COLLATE NOCASE)))OR(((rt1.c2)&(rt1.c2)))))AND(((rt1.c0)%(rt1.c1))))) ISNULL)) GROUP BY rt1.c0, rt1.c2, vt1.c0;
SELECT ALL rt1.c0, rt1.c2, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c2, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE MAX(vt1.c0)  WHEN TYPEOF(DISTINCT vt1.c0) THEN MIN(vt1.c0) END UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE MAX(vt1.c0)  WHEN TYPEOF(DISTINCT vt1.c0) THEN MIN(vt1.c0) END)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE MAX(vt1.c0)  WHEN TYPEOF(DISTINCT vt1.c0) THEN MIN(vt1.c0) END) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE MAX(vt1.c0)  WHEN TYPEOF(DISTINCT vt1.c0) THEN MIN(vt1.c0) END UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE MAX(vt1.c0)  WHEN TYPEOF(DISTINCT vt1.c0) THEN MIN(vt1.c0) END)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE MAX(vt1.c0)  WHEN TYPEOF(DISTINCT vt1.c0) THEN MIN(vt1.c0) END) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt1.c0, vt1.c0, rt1.c2 FROM vt1, rt1;
SELECT rt1.c0, vt1.c0, rt1.c2 FROM vt1, rt1 WHERE ((- (vt1.c0 COLLATE RTRIM))) UNION ALL SELECT rt1.c0, vt1.c0, rt1.c2 FROM vt1, rt1 WHERE ((NOT ((- (vt1.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL rt1.c0, vt1.c0, rt1.c2 FROM vt1, rt1 WHERE ((((- (vt1.c0 COLLATE RTRIM))) ISNULL));
SELECT rt1.c0, vt1.c0, rt1.c2 FROM vt1, rt1;
SELECT DISTINCT * FROM vt1, rt1;
SELECT DISTINCT * FROM vt1, rt1 WHERE (rt1.c2) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT * FROM vt1, rt1;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (((((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)))IS(rt1.c0))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (((((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)))IS(rt1.c0))))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (((((((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)))IS(rt1.c0))) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING GROUP_CONCAT(SUM(rt1.c1)) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING (NOT (GROUP_CONCAT(SUM(rt1.c1)))) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING ((GROUP_CONCAT(SUM(rt1.c1))) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (rt1.c0) UNION ALL SELECT * FROM rt1 WHERE ((NOT (rt1.c0))) UNION ALL SELECT * FROM rt1 WHERE (((rt1.c0) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (rt1.c0) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (rt1.c0))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (((rt1.c0) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE (0.29541467463743776) GROUP BY rt1.c1, rt1.c2 UNION SELECT rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (0.29541467463743776))) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE (((0.29541467463743776) ISNULL)) GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM('1424502942') UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM('1424502942'))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM('1424502942')) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM('1424502942') UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM('1424502942'))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM('1424502942')) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt1.c0, rt1.c1 FROM rt1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 WHERE (((-815994587)-(UPPER(DISTINCT rt1.c1)))) UNION ALL SELECT rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (((-815994587)-(UPPER(DISTINCT rt1.c1)))))) UNION ALL SELECT rt1.c0, rt1.c1 FROM rt1 WHERE (((((-815994587)-(UPPER(DISTINCT rt1.c1)))) ISNULL));
SELECT ALL rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT * FROM vt1, rt1;
SELECT DISTINCT * FROM vt1, rt1 WHERE (((rt1.c0)LIKE(((vt1.c0)OR(rt1.c2))))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE ((NOT (((rt1.c0)LIKE(((vt1.c0)OR(rt1.c2))))))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE (((((rt1.c0)LIKE(((vt1.c0)OR(rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt1;
SELECT rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM vt1, rt1 WHERE ((NULL IN ()) COLLATE RTRIM) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM vt1, rt1 WHERE ((NOT ((NULL IN ()) COLLATE RTRIM))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM vt1, rt1 WHERE ((((NULL IN ()) COLLATE RTRIM) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING SUM(((MAX(MAX(COUNT(AVG(rt1.c1))))) NOT BETWEEN (MIN(COUNT(*))) AND (AVG(rt1.c0)))) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (SUM(((MAX(MAX(COUNT(AVG(rt1.c1))))) NOT BETWEEN (MIN(COUNT(*))) AND (AVG(rt1.c0)))))) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((SUM(((MAX(MAX(COUNT(AVG(rt1.c1))))) NOT BETWEEN (MIN(COUNT(*))) AND (AVG(rt1.c0))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (x'') UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (x''))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((x'') ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c0)OR(x'')))OR(vt1.c0)))AND(((vt1.c0) ISNULL))))OR(((vt1.c0) ISNULL)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((((vt1.c0)OR(x'')))OR(vt1.c0)))AND(((vt1.c0) ISNULL))))OR(((vt1.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((((vt1.c0)OR(x'')))OR(vt1.c0)))AND(((vt1.c0) ISNULL))))OR(((vt1.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c2, vt1.c0, rt1.c0;
SELECT rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 WHERE (CASE WHEN ((rt1.c2)*(rt1.c0)) THEN (vt1.c0 IN (rt1.c1)) WHEN (rt1.c2 IN ('1931235672', rt1.c1)) THEN (rt1.c1 IN ()) WHEN rt1.c2 THEN (vt1.c0 IN ()) ELSE rt1.c1 END) GROUP BY rt1.c1, rt1.c2, vt1.c0, rt1.c0 UNION SELECT rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 WHERE ((NOT (CASE WHEN ((rt1.c2)*(rt1.c0)) THEN (vt1.c0 IN (rt1.c1)) WHEN (rt1.c2 IN ('1931235672', rt1.c1)) THEN (rt1.c1 IN ()) WHEN rt1.c2 THEN (vt1.c0 IN ()) ELSE rt1.c1 END))) GROUP BY rt1.c1, rt1.c2, vt1.c0, rt1.c0 UNION SELECT rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 WHERE (((CASE WHEN ((rt1.c2)*(rt1.c0)) THEN (vt1.c0 IN (rt1.c1)) WHEN (rt1.c2 IN ('1931235672', rt1.c1)) THEN (rt1.c1 IN ()) WHEN rt1.c2 THEN (vt1.c0 IN ()) ELSE rt1.c1 END) ISNULL)) GROUP BY rt1.c1, rt1.c2, vt1.c0, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c2, vt1.c0, rt1.c0;
SELECT ALL rt1.c2, vt1.c0, rt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c0, rt1.c1;
SELECT rt1.c2, vt1.c0, rt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c0, rt1.c1 HAVING TOTAL(TOTAL(MIN(rt1.c1))) UNION ALL SELECT rt1.c2, vt1.c0, rt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c0, rt1.c1 HAVING (NOT (TOTAL(TOTAL(MIN(rt1.c1))))) UNION ALL SELECT rt1.c2, vt1.c0, rt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c0, rt1.c1 HAVING ((TOTAL(TOTAL(MIN(rt1.c1)))) ISNULL);
SELECT * FROM vt1, rt1;
SELECT ALL * FROM vt1, rt1 WHERE (CASE WHEN ((rt1.c2) BETWEEN (0.03785122898657611) AND (rt1.c1)) THEN vt1.c0 END) UNION ALL SELECT ALL * FROM vt1, rt1 WHERE ((NOT (CASE WHEN ((rt1.c2) BETWEEN (0.03785122898657611) AND (rt1.c1)) THEN vt1.c0 END))) UNION ALL SELECT ALL * FROM vt1, rt1 WHERE (((CASE WHEN ((rt1.c2) BETWEEN (0.03785122898657611) AND (rt1.c1)) THEN vt1.c0 END) ISNULL));
SELECT * FROM vt1, rt1;
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE ((((NULL, rt1.c1, NULL)) BETWEEN ((UPPER(rt1.c0), (rt1.c0 IN (rt1.c0)), ((rt1.c2) IS FALSE))) AND ((((vt1.c0)+(rt1.c2)), UPPER(rt1.c0), ((rt1.c2)+(x'')))))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT ((((NULL, rt1.c1, NULL)) BETWEEN ((UPPER(rt1.c0), (rt1.c0 IN (rt1.c0)), ((rt1.c2) IS FALSE))) AND ((((vt1.c0)+(rt1.c2)), UPPER(rt1.c0), ((rt1.c2)+(x'')))))))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((((((NULL, rt1.c1, NULL)) BETWEEN ((UPPER(rt1.c0), (rt1.c0 IN (rt1.c0)), ((rt1.c2) IS FALSE))) AND ((((vt1.c0)+(rt1.c2)), UPPER(rt1.c0), ((rt1.c2)+(x'')))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT rt1.c2, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0;
SELECT ALL rt1.c2, vt1.c0 FROM vt1, rt1 WHERE (CASE WHEN TRIM(rt1.c0, vt1.c0) THEN rt1.c2 WHEN ((rt1.c0)OR(rt1.c0)) THEN (((rt1.c1))>((NULL))) WHEN ((vt1.c0)OR(vt1.c0)) THEN ((rt1.c2)AND(rt1.c1)) END) GROUP BY rt1.c2, vt1.c0 UNION SELECT ALL rt1.c2, vt1.c0 FROM vt1, rt1 WHERE ((NOT (CASE WHEN TRIM(rt1.c0, vt1.c0) THEN rt1.c2 WHEN ((rt1.c0)OR(rt1.c0)) THEN (((rt1.c1))>((NULL))) WHEN ((vt1.c0)OR(vt1.c0)) THEN ((rt1.c2)AND(rt1.c1)) END))) GROUP BY rt1.c2, vt1.c0 UNION SELECT rt1.c2, vt1.c0 FROM vt1, rt1 WHERE (((CASE WHEN TRIM(rt1.c0, vt1.c0) THEN rt1.c2 WHEN ((rt1.c0)OR(rt1.c0)) THEN (((rt1.c1))>((NULL))) WHEN ((vt1.c0)OR(vt1.c0)) THEN ((rt1.c2)AND(rt1.c1)) END) ISNULL)) GROUP BY rt1.c2, vt1.c0;
SELECT rt1.c2, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((GROUP_CONCAT(TOTAL(rt1.c0)))IS(SUM(rt1.c0))) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (((GROUP_CONCAT(TOTAL(rt1.c0)))IS(SUM(rt1.c0))))) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((((GROUP_CONCAT(TOTAL(rt1.c0)))IS(SUM(rt1.c0)))) ISNULL);
SELECT ALL MIN(rt1.c2) FROM rt1;
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (((rt1.c2)<>((rt1.c2 IN ())))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((rt1.c2)<>((rt1.c2 IN ())))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((rt1.c2)!=((rt1.c2 IN ())))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt1.c0 FROM vt1, rt1;
SELECT DISTINCT rt1.c0 FROM vt1, rt1 WHERE ((((rt1.c0) NOT NULL) IN ())) UNION SELECT DISTINCT rt1.c0 FROM vt1, rt1 WHERE ((NOT ((((rt1.c0) NOT NULL) IN ())))) UNION SELECT DISTINCT rt1.c0 FROM vt1, rt1 WHERE ((((((rt1.c0) NOT NULL) IN ())) ISNULL));
SELECT DISTINCT rt1.c0 FROM vt1, rt1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (rt1.c2) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (rt1.c2))) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((rt1.c2) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(vt1.c0)) NOT BETWEEN (MAX(vt1.c0)) AND (GROUP_CONCAT(SUM(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((MAX(vt1.c0)) NOT BETWEEN (MAX(vt1.c0)) AND (GROUP_CONCAT(SUM(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MAX(vt1.c0)) NOT BETWEEN (MAX(vt1.c0)) AND (GROUP_CONCAT(SUM(vt1.c0))))) ISNULL);
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE ('V봝') UNION ALL SELECT * FROM rt1 WHERE ((NOT ('V봝'))) UNION ALL SELECT * FROM rt1 WHERE ((('V봝') ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt1.c2 FROM vt1 INNER JOIN rt1 ON (((rt1.c0, vt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE, ((rt1.c2)IS NOT(rt1.c0)), LIKELY(DISTINCT vt1.c0))) AND ((CAST(vt1.c0 AS NUMERIC), (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))), ((rt1.c0)-(rt1.c0)))));
SELECT DISTINCT rt1.c2 FROM vt1 INNER JOIN rt1 ON (((rt1.c0, vt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE, ((rt1.c2)IS NOT(rt1.c0)), LIKELY(DISTINCT vt1.c0))) AND ((CAST(vt1.c0 AS NUMERIC), (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))), ((rt1.c0)-(rt1.c0))))) WHERE (CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c1 ELSE vt1.c0 END AS TEXT)) UNION SELECT DISTINCT rt1.c2 FROM vt1 INNER JOIN rt1 ON (((rt1.c0, vt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE, ((rt1.c2)IS NOT(rt1.c0)), LIKELY(DISTINCT vt1.c0))) AND ((CAST(vt1.c0 AS NUMERIC), (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))), ((rt1.c0)-(rt1.c0))))) WHERE ((NOT (CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c1 ELSE vt1.c0 END AS TEXT)))) UNION SELECT DISTINCT rt1.c2 FROM vt1 INNER JOIN rt1 ON (((rt1.c0, vt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE, ((rt1.c2)IS NOT(rt1.c0)), LIKELY(DISTINCT vt1.c0))) AND ((CAST(vt1.c0 AS NUMERIC), (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))), ((rt1.c0)-(rt1.c0))))) WHERE (((CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c1 ELSE vt1.c0 END AS TEXT)) ISNULL));
SELECT DISTINCT rt1.c2 FROM vt1 INNER JOIN rt1 ON (((rt1.c0, vt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE, ((rt1.c2)IS NOT(rt1.c0)), LIKELY(DISTINCT vt1.c0))) AND ((CAST(vt1.c0 AS NUMERIC), (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))), ((rt1.c0)-(rt1.c0)))));
SELECT vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0))>=((vt1.c0)))))<((((vt1.c0) IS TRUE))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0))>=((vt1.c0)))))<((((vt1.c0) IS TRUE))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0))>=((vt1.c0)))))<((((vt1.c0) IS TRUE))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT ALL rt1.c0, vt1.c0, rt1.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN vt1 ON (NOT (((rt1.c0) NOT NULL))) GROUP BY rt1.c0, vt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, vt1.c0, rt1.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN vt1 ON (NOT (((rt1.c0) NOT NULL))) GROUP BY rt1.c0, vt1.c0, rt1.c2, rt1.c1 HAVING SUM(GROUP_CONCAT(MIN(rt1.c1))) UNION ALL SELECT rt1.c0, vt1.c0, rt1.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN vt1 ON (NOT (((rt1.c0) NOT NULL))) GROUP BY rt1.c0, vt1.c0, rt1.c2, rt1.c1 HAVING (NOT (SUM(GROUP_CONCAT(MIN(rt1.c1))))) UNION ALL SELECT rt1.c0, vt1.c0, rt1.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN vt1 ON (NOT (((rt1.c0) NOT NULL))) GROUP BY rt1.c0, vt1.c0, rt1.c2, rt1.c1 HAVING ((SUM(GROUP_CONCAT(MIN(rt1.c1)))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((NOT ((vt1.c0 IN ())))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((NOT ((vt1.c0 IN ())))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((NOT ((vt1.c0 IN ())))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((- ((NOT (vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((- ((NOT (vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((- ((NOT (vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c1, rt1.c2, rt1.c0;
SELECT ALL vt1.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, vt1 WHERE (CASE WHEN vt1.c0 THEN ((((rt1.c1)OR(rt1.c2)))AND(rt1.c2)) ELSE (((rt1.c0, rt1.c0, rt1.c2)) NOT BETWEEN ((vt1.c0, NULL, rt1.c2)) AND ((rt1.c0, rt1.c0, rt1.c1))) END) GROUP BY vt1.c0, rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL vt1.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, vt1 WHERE ((NOT (CASE WHEN vt1.c0 THEN ((((rt1.c1)OR(rt1.c2)))AND(rt1.c2)) ELSE (((rt1.c0, rt1.c0, rt1.c2)) NOT BETWEEN ((vt1.c0, NULL, rt1.c2)) AND ((rt1.c0, rt1.c0, rt1.c1))) END))) GROUP BY vt1.c0, rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL vt1.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, vt1 WHERE (((CASE WHEN vt1.c0 THEN ((((rt1.c1)OR(rt1.c2)))AND(rt1.c2)) ELSE (((rt1.c0, rt1.c0, rt1.c2)) NOT BETWEEN ((vt1.c0, NULL, rt1.c2)) AND ((rt1.c0, rt1.c0, rt1.c1))) END) ISNULL)) GROUP BY vt1.c0, rt1.c1, rt1.c2, rt1.c0;
SELECT ALL vt1.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING MAX(AVG('')) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (MAX(AVG('')))) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((MAX(AVG(''))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((~ ((((vt1.c0))>=((vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((~ ((((vt1.c0))>=((vt1.c0)))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((~ ((((vt1.c0))>=((vt1.c0)))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((ABS(vt1.c0))IS(vt1.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((ABS(vt1.c0))IS(vt1.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((ABS(vt1.c0))IS(vt1.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt1.c2, rt1.c1 FROM rt1 RIGHT OUTER JOIN vt1 ON (((rt1.c2 COLLATE BINARY, ((rt1.c0)LIKE(0X76043b61)), CAST(rt1.c1 AS BLOB)))>((NULL, CASE WHEN rt1.c1 THEN vt1.c0 ELSE '-2004831739' END, ((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c0)))AND(vt1.c0))))) GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 RIGHT OUTER JOIN vt1 ON (((rt1.c2 COLLATE BINARY, ((rt1.c0)LIKE(0x76043b61)), CAST(rt1.c1 AS BLOB)))>((NULL, CASE WHEN rt1.c1 THEN vt1.c0 ELSE '-2004831739' END, ((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c0)))AND(vt1.c0))))) WHERE (CASE WHEN ((vt1.c0) NOT NULL) THEN ((rt1.c0) ISNULL) WHEN CASE WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN '0.9740046812291602' THEN rt1.c0 WHEN rt1.c0 THEN x'881b' WHEN vt1.c0 THEN rt1.c2 END THEN CASE WHEN rt1.c1 THEN rt1.c0 END WHEN NULL THEN vt1.c0 COLLATE RTRIM WHEN (~ (x'')) THEN ((rt1.c1) BETWEEN (rt1.c2) AND (0.6418520781085388)) WHEN (vt1.c0 IN ()) THEN (((vt1.c0, vt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c0)) AND ((rt1.c2, rt1.c1, rt1.c0))) ELSE ((((vt1.c0)OR(rt1.c2)))AND(rt1.c2)) END) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM rt1 RIGHT OUTER JOIN vt1 ON (((rt1.c2 COLLATE BINARY, ((rt1.c0)LIKE(0X76043b61)), CAST(rt1.c1 AS BLOB)))>((NULL, CASE WHEN rt1.c1 THEN vt1.c0 ELSE '-2004831739' END, ((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c0)))AND(vt1.c0))))) WHERE ((NOT (CASE WHEN ((vt1.c0) NOT NULL) THEN ((rt1.c0) ISNULL) WHEN CASE WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN '0.9740046812291602' THEN rt1.c0 WHEN rt1.c0 THEN x'881b' WHEN vt1.c0 THEN rt1.c2 END THEN CASE WHEN rt1.c1 THEN rt1.c0 END WHEN NULL THEN vt1.c0 COLLATE RTRIM WHEN (~ (x'')) THEN ((rt1.c1) BETWEEN (rt1.c2) AND (0.6418520781085388)) WHEN (vt1.c0 IN ()) THEN (((vt1.c0, vt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c0)) AND ((rt1.c2, rt1.c1, rt1.c0))) ELSE ((((vt1.c0)OR(rt1.c2)))AND(rt1.c2)) END))) GROUP BY rt1.c2, rt1.c1 UNION SELECT rt1.c2, rt1.c1 FROM rt1 RIGHT OUTER JOIN vt1 ON (((rt1.c2 COLLATE BINARY, ((rt1.c0)LIKE(0X76043b61)), CAST(rt1.c1 AS BLOB)))>((NULL, CASE WHEN rt1.c1 THEN vt1.c0 ELSE '-2004831739' END, ((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c0)))AND(vt1.c0))))) WHERE (((CASE WHEN ((vt1.c0) NOT NULL) THEN ((rt1.c0) ISNULL) WHEN CASE WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN '0.9740046812291602' THEN rt1.c0 WHEN rt1.c0 THEN x'881b' WHEN vt1.c0 THEN rt1.c2 END THEN CASE WHEN rt1.c1 THEN rt1.c0 END WHEN NULL THEN vt1.c0 COLLATE RTRIM WHEN (~ (x'')) THEN ((rt1.c1) BETWEEN (rt1.c2) AND (0.6418520781085388)) WHEN (vt1.c0 IN ()) THEN (((vt1.c0, vt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c0)) AND ((rt1.c2, rt1.c1, rt1.c0))) ELSE ((((vt1.c0)OR(rt1.c2)))AND(rt1.c2)) END) ISNULL)) GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 RIGHT OUTER JOIN vt1 ON (((rt1.c2 COLLATE BINARY, ((rt1.c0)LIKE(0X76043b61)), CAST(rt1.c1 AS BLOB)))>((NULL, CASE WHEN rt1.c1 THEN vt1.c0 ELSE '-2004831739' END, ((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c0)))AND(vt1.c0))))) GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c1, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt1.c0;
SELECT rt1.c1, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt1.c0 HAVING TOTAL(UNICODE(rt1.c1)) UNION ALL SELECT ALL rt1.c1, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt1.c0 HAVING (NOT (TOTAL(UNICODE(rt1.c1)))) UNION ALL SELECT rt1.c1, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt1.c0 HAVING ((TOTAL(UNICODE(rt1.c1))) ISNULL);
SELECT rt1.c1, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt1.c0;
SELECT rt1.c1, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt1.c0 HAVING TOTAL(UNICODE(rt1.c1)) UNION ALL SELECT ALL rt1.c1, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt1.c0 HAVING (NOT (TOTAL(UNICODE(rt1.c1)))) UNION ALL SELECT rt1.c1, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt1.c0 HAVING ((TOTAL(UNICODE(rt1.c1))) ISNULL);
SELECT rt1.c1, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt1.c0;
SELECT * FROM rt1, vt1;
SELECT ALL * FROM rt1 NOT INDEXED, vt1 WHERE ((+ ((((vt1.c0, vt1.c0, rt1.c0))!=((rt1.c2, rt1.c1, rt1.c0)))))) UNION ALL SELECT ALL * FROM rt1, vt1 WHERE ((NOT ((+ ((((vt1.c0, vt1.c0, rt1.c0))<>((rt1.c2, rt1.c1, rt1.c0)))))))) UNION ALL SELECT * FROM rt1, vt1 WHERE ((((+ ((((vt1.c0, vt1.c0, rt1.c0))!=((rt1.c2, rt1.c1, rt1.c0)))))) ISNULL));
SELECT * FROM rt1, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0))>=(((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((vt1.c0))>=(((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0))>=(((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt1.c0;
SELECT ALL vt1.c0, rt1.c1, rt1.c0 FROM vt1, rt1 WHERE ((('-0.0' COLLATE NOCASE) NOT BETWEEN (((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c1))) AND ((((0.2838030504598177)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2)))))) GROUP BY vt1.c0, rt1.c1, rt1.c0 UNION SELECT vt1.c0, rt1.c1, rt1.c0 FROM vt1, rt1 WHERE ((NOT ((('-0.0' COLLATE NOCASE) NOT BETWEEN (((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c1))) AND ((((0.2838030504598177)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2)))))))) GROUP BY vt1.c0, rt1.c1, rt1.c0 UNION SELECT vt1.c0, rt1.c1, rt1.c0 FROM vt1, rt1 WHERE ((((('-0.0' COLLATE NOCASE) NOT BETWEEN (((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c1))) AND ((((0.2838030504598177)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2)))))) ISNULL)) GROUP BY vt1.c0, rt1.c1, rt1.c0;
SELECT vt1.c0, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt1.c0;
SELECT ALL rt1.c2 FROM vt1 FULL OUTER JOIN rt1 ON (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((rt1.c2) BETWEEN (rt1.c0) AND (vt1.c0)), ((rt1.c1)GLOB(rt1.c0)), ((rt1.c1)%(rt1.c0)))) AND ((rt1.c1 COLLATE RTRIM, (((rt1.c2)) BETWEEN ((vt1.c0)) AND (('nPu㘷Aq	,&'))), ((vt1.c0)AND(rt1.c1))))) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM vt1 FULL OUTER JOIN rt1 ON (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((rt1.c2) BETWEEN (rt1.c0) AND (vt1.c0)), ((rt1.c1)GLOB(rt1.c0)), ((rt1.c1)%(rt1.c0)))) AND ((rt1.c1 COLLATE RTRIM, (((rt1.c2)) BETWEEN ((vt1.c0)) AND (('nPu㘷Aq	,&'))), ((vt1.c0)AND(rt1.c1))))) GROUP BY rt1.c2 HAVING COUNT(((x'') NOTNULL)) UNION ALL SELECT rt1.c2 FROM vt1 FULL OUTER JOIN rt1 ON (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((rt1.c2) BETWEEN (rt1.c0) AND (vt1.c0)), ((rt1.c1)GLOB(rt1.c0)), ((rt1.c1)%(rt1.c0)))) AND ((rt1.c1 COLLATE RTRIM, (((rt1.c2)) BETWEEN ((vt1.c0)) AND (('nPu㘷Aq	,&'))), ((vt1.c0)AND(rt1.c1))))) GROUP BY rt1.c2 HAVING (NOT (COUNT(((x'') NOTNULL)))) UNION ALL SELECT ALL rt1.c2 FROM vt1 FULL OUTER JOIN rt1 ON (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((rt1.c2) BETWEEN (rt1.c0) AND (vt1.c0)), ((rt1.c1)GLOB(rt1.c0)), ((rt1.c1)%(rt1.c0)))) AND ((rt1.c1 COLLATE RTRIM, (((rt1.c2)) BETWEEN ((vt1.c0)) AND (('nPu㘷Aq	,&'))), ((vt1.c0)AND(rt1.c1))))) GROUP BY rt1.c2 HAVING ((COUNT(((x'') NOTNULL))) ISNULL);
SELECT ALL rt1.c2 FROM vt1 FULL OUTER JOIN rt1 ON (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((rt1.c2) BETWEEN (rt1.c0) AND (vt1.c0)), ((rt1.c1)GLOB(rt1.c0)), ((rt1.c1)%(rt1.c0)))) AND ((rt1.c1 COLLATE RTRIM, (((rt1.c2)) BETWEEN ((vt1.c0)) AND (('nPu㘷Aq	,&'))), ((vt1.c0)AND(rt1.c1))))) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM vt1 FULL OUTER JOIN rt1 ON (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((rt1.c2) BETWEEN (rt1.c0) AND (vt1.c0)), ((rt1.c1)GLOB(rt1.c0)), ((rt1.c1)%(rt1.c0)))) AND ((rt1.c1 COLLATE RTRIM, (((rt1.c2)) BETWEEN ((vt1.c0)) AND (('nPu㘷Aq	,&'))), ((vt1.c0)AND(rt1.c1))))) GROUP BY rt1.c2 HAVING COUNT(((x'') NOTNULL)) UNION ALL SELECT rt1.c2 FROM vt1 FULL OUTER JOIN rt1 ON (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((rt1.c2) BETWEEN (rt1.c0) AND (vt1.c0)), ((rt1.c1)GLOB(rt1.c0)), ((rt1.c1)%(rt1.c0)))) AND ((rt1.c1 COLLATE RTRIM, (((rt1.c2)) BETWEEN ((vt1.c0)) AND (('nPu㘷Aq	,&'))), ((vt1.c0)AND(rt1.c1))))) GROUP BY rt1.c2 HAVING (NOT (COUNT(((x'') NOTNULL)))) UNION ALL SELECT ALL rt1.c2 FROM vt1 FULL OUTER JOIN rt1 ON (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((rt1.c2) BETWEEN (rt1.c0) AND (vt1.c0)), ((rt1.c1)GLOB(rt1.c0)), ((rt1.c1)%(rt1.c0)))) AND ((rt1.c1 COLLATE RTRIM, (((rt1.c2)) BETWEEN ((vt1.c0)) AND (('nPu㘷Aq	,&'))), ((vt1.c0)AND(rt1.c1))))) GROUP BY rt1.c2 HAVING ((COUNT(((x'') NOTNULL))) ISNULL);
SELECT ALL rt1.c2 FROM vt1 FULL OUTER JOIN rt1 ON (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((rt1.c2) BETWEEN (rt1.c0) AND (vt1.c0)), ((rt1.c1)GLOB(rt1.c0)), ((rt1.c1)%(rt1.c0)))) AND ((rt1.c1 COLLATE RTRIM, (((rt1.c2)) BETWEEN ((vt1.c0)) AND (('nPu㘷Aq	,&'))), ((vt1.c0)AND(rt1.c1))))) GROUP BY rt1.c2;
SELECT * FROM rt1, vt1;
SELECT * FROM rt1, vt1 WHERE (((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)))/(CAST(vt1.c0 AS TEXT)))) UNION ALL SELECT ALL * FROM rt1, vt1 WHERE ((NOT (((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)))/(CAST(vt1.c0 AS TEXT)))))) UNION ALL SELECT ALL * FROM rt1, vt1 WHERE (((((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)))/(CAST(vt1.c0 AS TEXT)))) ISNULL));
SELECT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1 CROSS JOIN vt1 ON ((((rt1.c2) IS TRUE))GLOB(((rt1.c1)&(vt1.c0))));
SELECT DISTINCT * FROM rt1 CROSS JOIN vt1 ON ((((rt1.c2) IS TRUE))GLOB(((rt1.c1)&(vt1.c0)))) WHERE ((~ (rt1.c1))) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN vt1 ON ((((rt1.c2) IS TRUE))GLOB(((rt1.c1)&(vt1.c0)))) WHERE ((NOT ((~ (rt1.c1))))) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN vt1 ON ((((rt1.c2) IS TRUE))GLOB(((rt1.c1)&(vt1.c0)))) WHERE ((((~ (rt1.c1))) ISNULL));
SELECT DISTINCT * FROM rt1 CROSS JOIN vt1 ON ((((rt1.c2) IS TRUE))GLOB(((rt1.c1)&(vt1.c0))));
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ('1065995169') GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ('1065995169'))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((('1065995169') ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(((vt1.c0)-(TOTAL(AVG(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(((vt1.c0)-(TOTAL(AVG(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(((vt1.c0)-(TOTAL(AVG(vt1.c0)))))) ISNULL);
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c1)))AND(((rt1.c2) IS TRUE))))AND(rt1.c2 COLLATE BINARY))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c1)))AND(((rt1.c2) IS TRUE))))AND(rt1.c2 COLLATE BINARY))))) UNION ALL SELECT * FROM rt1 WHERE (((((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c1)))AND(((rt1.c2) IS TRUE))))AND(rt1.c2 COLLATE BINARY))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) BETWEEN ((((vt1.c0))>(('1935012682')))) AND (0.5306512329387482 COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) BETWEEN ((((vt1.c0))>(('1935012682')))) AND (0.5306512329387482 COLLATE RTRIM))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) BETWEEN ((((vt1.c0))>(('1935012682')))) AND (0.5306512329387482 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ())) BETWEEN (vt1.c0 COLLATE RTRIM) AND (('1974040365' IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 IN ())) BETWEEN (vt1.c0 COLLATE RTRIM) AND (('1974040365' IN ())))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN ())) BETWEEN (vt1.c0 COLLATE RTRIM) AND (('1974040365' IN ())))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(AVG(MAX(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(AVG(MAX(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(AVG(MAX(vt1.c0)))) ISNULL);
SELECT rt1.c0, rt1.c1, vt1.c0, rt1.c2 FROM vt1, rt1;
SELECT rt1.c0, rt1.c1, vt1.c0, rt1.c2 FROM vt1, rt1 WHERE (((NOT (rt1.c2)) IN ())) UNION ALL SELECT ALL rt1.c0, rt1.c1, vt1.c0, rt1.c2 FROM vt1, rt1 WHERE ((NOT (((NOT (rt1.c2)) IN ())))) UNION ALL SELECT ALL rt1.c0, rt1.c1, vt1.c0, rt1.c2 FROM vt1, rt1 WHERE (((((NOT (rt1.c2)) IN ())) ISNULL));
SELECT rt1.c0, rt1.c1, vt1.c0, rt1.c2 FROM vt1, rt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, (vt1.c0 IN (vt1.c0)))) AND ((vt1.c0, CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0)|(vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, (vt1.c0 IN (vt1.c0)))) AND ((vt1.c0, CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0)|(vt1.c0)))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, (vt1.c0 IN (vt1.c0)))) AND ((vt1.c0, CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0)|(vt1.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, vt1.c0;
SELECT ALL rt1.c1, vt1.c0 FROM vt1, rt1 WHERE ((((x''))>=((rt1.c2)))) GROUP BY rt1.c1, vt1.c0 UNION SELECT rt1.c1, vt1.c0 FROM vt1, rt1 WHERE ((NOT ((((x''))>=((rt1.c2)))))) GROUP BY rt1.c1, vt1.c0 UNION SELECT ALL rt1.c1, vt1.c0 FROM vt1, rt1 WHERE ((((((x''))>=((rt1.c2)))) ISNULL)) GROUP BY rt1.c1, vt1.c0;
SELECT rt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, vt1.c0;
SELECT ALL rt1.c1, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c0, rt1.c0;
SELECT rt1.c1, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c0, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c1, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c0, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c1, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c0, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c1, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c0, rt1.c0;
SELECT rt1.c1, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c0, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c1, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c0, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c1, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c0, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c1, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c0, rt1.c0;
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (((rt1.c2)IS NOT((NOT (rt1.c0))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((rt1.c2)IS NOT((NOT (rt1.c0))))))) UNION ALL SELECT * FROM rt1 WHERE (((((rt1.c2)IS NOT((NOT (rt1.c0))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (DATETIME(((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)), json_array(rt1.c2, rt1.c1), ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (DATETIME(((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)), json_array(rt1.c2, rt1.c1), ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)))))) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (((DATETIME(((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)), json_array(rt1.c2, rt1.c1), ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM vt1, rt1 WHERE (((NULL)&(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 ELSE vt1.c0 END))) GROUP BY rt1.c2, rt1.c0, rt1.c1 UNION SELECT rt1.c2, rt1.c0, rt1.c1 FROM vt1, rt1 WHERE ((NOT (((NULL)&(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 ELSE vt1.c0 END))))) GROUP BY rt1.c2, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM vt1, rt1 WHERE (((((NULL)&(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 ELSE vt1.c0 END))) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(GROUP_CONCAT(MIN(vt1.c0))) COLLATE BINARY)>=(MIN(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((TOTAL(GROUP_CONCAT(MIN(vt1.c0))) COLLATE BINARY)>=(MIN(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((TOTAL(GROUP_CONCAT(MIN(vt1.c0))) COLLATE BINARY)>=(MIN(vt1.c0)))) ISNULL);
SELECT ALL rt1.c2, rt1.c0, vt1.c0, rt1.c1 FROM rt1 NATURAL JOIN vt1;
SELECT ALL rt1.c2, rt1.c0, vt1.c0, rt1.c1 FROM rt1 NATURAL JOIN vt1 WHERE (rt1.c0) UNION ALL SELECT rt1.c2, rt1.c0, vt1.c0, rt1.c1 FROM rt1 NATURAL JOIN vt1 WHERE ((NOT (rt1.c0))) UNION ALL SELECT ALL rt1.c2, rt1.c0, vt1.c0, rt1.c1 FROM rt1 NATURAL JOIN vt1 WHERE (((rt1.c0) ISNULL));
SELECT ALL rt1.c2, rt1.c0, vt1.c0, rt1.c1 FROM rt1 NATURAL JOIN vt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((CAST(rt1.c1 AS NUMERIC)) NOT NULL)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((CAST(rt1.c1 AS NUMERIC)) NOT NULL)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((CAST(rt1.c1 AS NUMERIC)) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c2, rt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c1, vt1.c0;
SELECT rt1.c2, rt1.c1, vt1.c0 FROM vt1, rt1 WHERE ((((((rt1.c1))==((rt1.c0))))GLOB((rt1.c0 IN ())))) GROUP BY rt1.c2, rt1.c1, vt1.c0 UNION SELECT ALL rt1.c2, rt1.c1, vt1.c0 FROM vt1, rt1 WHERE ((NOT ((((((rt1.c1))=((rt1.c0))))GLOB((rt1.c0 IN ())))))) GROUP BY rt1.c2, rt1.c1, vt1.c0 UNION SELECT ALL rt1.c2, rt1.c1, vt1.c0 FROM vt1, rt1 WHERE ((((((((rt1.c1))=((rt1.c0))))GLOB((rt1.c0 IN ())))) ISNULL)) GROUP BY rt1.c2, rt1.c1, vt1.c0;
SELECT ALL rt1.c2, rt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c1, vt1.c0;
SELECT rt1.c2, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c1 HAVING MAX(MAX(rt1.c2)) UNION ALL SELECT rt1.c2, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (MAX(MAX(rt1.c2)))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((MAX(MAX(rt1.c2))) ISNULL);
SELECT rt1.c0 FROM rt1 INNER JOIN vt1 ON (((((rt1.c2, vt1.c0, 1792234966)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c1, rt1.c0, rt1.c2)))) NOT BETWEEN (((rt1.c1)>=(rt1.c2))) AND (DATE(rt1.c1, rt1.c1, rt1.c0)));
SELECT ALL rt1.c0 FROM rt1 INNER JOIN vt1 ON (((((rt1.c2, vt1.c0, 1792234966)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c1, rt1.c0, rt1.c2)))) NOT BETWEEN (((rt1.c1)>=(rt1.c2))) AND (DATE(rt1.c1, rt1.c1, rt1.c0))) WHERE (CASE WHEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt1.c0)) THEN ((vt1.c0)>(vt1.c0)) END) UNION ALL SELECT rt1.c0 FROM rt1 INNER JOIN vt1 ON (((((rt1.c2, vt1.c0, 1792234966)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c1, rt1.c0, rt1.c2)))) NOT BETWEEN (((rt1.c1)>=(rt1.c2))) AND (DATE(rt1.c1, rt1.c1, rt1.c0))) WHERE ((NOT (CASE WHEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt1.c0)) THEN ((vt1.c0)>(vt1.c0)) END))) UNION ALL SELECT ALL rt1.c0 FROM rt1 INNER JOIN vt1 ON (((((rt1.c2, vt1.c0, 1792234966)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c1, rt1.c0, rt1.c2)))) NOT BETWEEN (((rt1.c1)>=(rt1.c2))) AND (DATE(rt1.c1, rt1.c1, rt1.c0))) WHERE (((CASE WHEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt1.c0)) THEN ((vt1.c0)>(vt1.c0)) END) ISNULL));
SELECT rt1.c0 FROM rt1 INNER JOIN vt1 ON (((((rt1.c2, vt1.c0, 1792234966)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c1, rt1.c0, rt1.c2)))) NOT BETWEEN (((rt1.c1)>=(rt1.c2))) AND (DATE(rt1.c1, rt1.c1, rt1.c0)));
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c1 FROM rt1 WHERE (CAST((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c1))) AS BLOB)) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE ((NOT (CAST((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c1))) AS BLOB)))) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE (((CAST((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c1))) AS BLOB)) ISNULL));
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 WHERE ((((rt1.c2 IN (rt1.c2)))<(x''))) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT ((((rt1.c2 IN (rt1.c2)))<(x''))))) GROUP BY rt1.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c0 FROM rt1 WHERE ((((((rt1.c2 IN (rt1.c2)))<(x''))) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST((+ (vt1.c0)) AS REAL) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST((+ (vt1.c0)) AS REAL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST((+ (vt1.c0)) AS REAL)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST((+ (vt1.c0)) AS REAL) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST((+ (vt1.c0)) AS REAL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST((+ (vt1.c0)) AS REAL)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((((((rt1.c1)>>(rt1.c0)))AND(0.12566710421420813)))OR((((NULL)) NOT BETWEEN ((x'')) AND ((rt1.c2)))))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (((((((rt1.c1)>>(rt1.c0)))AND(0.12566710421420813)))OR((((NULL)) NOT BETWEEN ((x'')) AND ((rt1.c2)))))))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((((((((rt1.c1)>>(rt1.c0)))AND(0.12566710421420813)))OR((((NULL)) NOT BETWEEN ((x'')) AND ((rt1.c2)))))) ISNULL));
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1 WHERE (((',O?8ᥫu')OR(((rt1.c1)|(rt1.c1))))) UNION SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (((',O?8ᥫu')OR(((rt1.c1)|(rt1.c1))))))) UNION SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1 WHERE (((((',O?8ᥫu')OR(((rt1.c1)|(rt1.c1))))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1;
SELECT rt1.c1, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c0;
SELECT ALL rt1.c1, vt1.c0 FROM rt1, vt1 WHERE (0x64f3fcf9) GROUP BY rt1.c1, vt1.c0 UNION SELECT ALL rt1.c1, vt1.c0 FROM rt1, vt1 WHERE ((NOT (0x64f3fcf9))) GROUP BY rt1.c1, vt1.c0 UNION SELECT ALL rt1.c1, vt1.c0 FROM rt1, vt1 WHERE (((0x64f3fcf9) ISNULL)) GROUP BY rt1.c1, vt1.c0;
SELECT rt1.c1, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c0;
SELECT vt1.c0, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt1.c0;
SELECT ALL vt1.c0, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt1.c0;
SELECT ALL vt1.c0, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt1.c0;
SELECT * FROM vt1 LEFT OUTER JOIN rt1 ON ((rt1.c1)>(vt1.c0)) COLLATE RTRIM;
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt1 ON ((rt1.c1)>(vt1.c0)) COLLATE RTRIM WHERE (((CAST(vt1.c0 AS TEXT))||(LIKELY(DISTINCT rt1.c0)))) UNION ALL SELECT * FROM vt1 LEFT OUTER JOIN rt1 ON ((rt1.c1)>(vt1.c0)) COLLATE RTRIM WHERE ((NOT (((CAST(vt1.c0 AS TEXT))||(LIKELY(DISTINCT rt1.c0)))))) UNION ALL SELECT * FROM vt1 LEFT OUTER JOIN rt1 ON ((rt1.c1)>(vt1.c0)) COLLATE RTRIM WHERE (((((CAST(vt1.c0 AS TEXT))||(LIKELY(DISTINCT rt1.c0)))) ISNULL));
SELECT * FROM vt1 LEFT OUTER JOIN rt1 ON ((rt1.c1)>(vt1.c0)) COLLATE RTRIM;
SELECT DISTINCT vt1.c0 FROM vt1 NOT INDEXED;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (0.6633020519879315) AND (vt1.c0)))<(((vt1.c0)<=(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (0.6633020519879315) AND (vt1.c0)))<(((vt1.c0)<=(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (0.6633020519879315) AND (vt1.c0)))<(((vt1.c0)<=(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1 NOT INDEXED;
SELECT ALL vt1.c0, rt1.c2 FROM rt1 FULL OUTER JOIN vt1 ON (ABS(rt1.c1) IN (((rt1.c1)|(rt1.c0)))) GROUP BY vt1.c0, rt1.c2;
SELECT ALL vt1.c0, rt1.c2 FROM rt1 FULL OUTER JOIN vt1 ON (ABS(rt1.c1) IN (((rt1.c1)|(rt1.c0)))) WHERE (CASE WHEN rt1.c2 THEN x'cd6f' END) GROUP BY vt1.c0, rt1.c2 UNION SELECT vt1.c0, rt1.c2 FROM rt1 FULL OUTER JOIN vt1 ON (ABS(rt1.c1) IN (((rt1.c1)|(rt1.c0)))) WHERE ((NOT (CASE WHEN rt1.c2 THEN x'cd6f' END))) GROUP BY vt1.c0, rt1.c2 UNION SELECT vt1.c0, rt1.c2 FROM rt1 FULL OUTER JOIN vt1 ON (ABS(rt1.c1) IN (((rt1.c1)|(rt1.c0)))) WHERE (((CASE WHEN rt1.c2 THEN x'cd6f' END) ISNULL)) GROUP BY vt1.c0, rt1.c2;
SELECT ALL vt1.c0, rt1.c2 FROM rt1 FULL OUTER JOIN vt1 ON (ABS(rt1.c1) IN (((rt1.c1)|(rt1.c0)))) GROUP BY vt1.c0, rt1.c2;
SELECT vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c0;
SELECT ALL vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c0 HAVING AVG(rt1.c0) COLLATE BINARY UNION ALL SELECT vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c0 HAVING (NOT (AVG(rt1.c0) COLLATE BINARY)) UNION ALL SELECT vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c0 HAVING ((AVG(rt1.c0) COLLATE BINARY) ISNULL);
SELECT vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c0;
SELECT ALL vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c0 HAVING AVG(rt1.c0) COLLATE BINARY UNION ALL SELECT vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c0 HAVING (NOT (AVG(rt1.c0) COLLATE BINARY)) UNION ALL SELECT vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c0 HAVING ((AVG(rt1.c0) COLLATE BINARY) ISNULL);
SELECT vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c0;
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (x'') UNION ALL SELECT * FROM rt1 WHERE ((NOT (x''))) UNION ALL SELECT * FROM rt1 WHERE (((x'') ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON ((~ (rt1.c1)) IN ());
SELECT DISTINCT rt1.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON ((~ (rt1.c1)) IN ()) WHERE ('1613935691' COLLATE RTRIM) UNION SELECT DISTINCT rt1.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON ((~ (rt1.c1)) IN ()) WHERE ((NOT ('1613935691' COLLATE RTRIM))) UNION SELECT DISTINCT rt1.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON ((~ (rt1.c1)) IN ()) WHERE ((('1613935691' COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt1.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON ((~ (rt1.c1)) IN ());
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (((rt1.c1) NOT NULL) COLLATE RTRIM) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (((rt1.c1) NOT NULL) COLLATE RTRIM))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (((((rt1.c1) NOT NULL) COLLATE RTRIM) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c2 FROM rt1, vt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1, vt1 GROUP BY rt1.c2 HAVING MIN(SUM(rt1.c0)) UNION ALL SELECT rt1.c2 FROM rt1, vt1 GROUP BY rt1.c2 HAVING (NOT (MIN(SUM(rt1.c0)))) UNION ALL SELECT rt1.c2 FROM rt1, vt1 GROUP BY rt1.c2 HAVING ((MIN(SUM(rt1.c0))) ISNULL);
SELECT rt1.c1, rt1.c0, vt1.c0, rt1.c2 FROM vt1, rt1;
SELECT ALL rt1.c1, rt1.c0, vt1.c0, rt1.c2 FROM vt1, rt1 WHERE (((CASE WHEN 0.6567449356875258 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END)*(vt1.c0 COLLATE RTRIM))) UNION ALL SELECT ALL rt1.c1, rt1.c0, vt1.c0, rt1.c2 FROM vt1, rt1 WHERE ((NOT (((CASE WHEN 0.6567449356875258 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END)*(vt1.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL rt1.c1, rt1.c0, vt1.c0, rt1.c2 FROM vt1, rt1 WHERE (((((CASE WHEN 0.6567449356875258 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END)*(vt1.c0 COLLATE RTRIM))) ISNULL));
SELECT rt1.c1, rt1.c0, vt1.c0, rt1.c2 FROM vt1, rt1;
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE (((((rt1.c2)%(vt1.c0)))<=(rt1.c2))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT (((((rt1.c2)%(vt1.c0)))<=(rt1.c2))))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE (((((((rt1.c2)%(vt1.c0)))<=(rt1.c2))) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (x'') GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (x''))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((x'') ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON 0x1051f8ab GROUP BY rt1.c2, rt1.c1, rt1.c0, vt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON 0x1051f8ab GROUP BY rt1.c2, rt1.c1, rt1.c0, vt1.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON 0X1051f8ab GROUP BY rt1.c2, rt1.c1, rt1.c0, vt1.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON 0x1051f8ab GROUP BY rt1.c2, rt1.c1, rt1.c0, vt1.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT TOTAL((((((x'7210', rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c2))))>((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2)))))) FROM rt1 ORDER BY CAST(((rt1.c1)||(rt1.c0)) AS REAL)  NULLS FIRST;
SELECT ALL rt1.c0 FROM rt1, vt1;
SELECT rt1.c0 FROM rt1, vt1 WHERE (CASE ((rt1.c0) BETWEEN (rt1.c2) AND (vt1.c0))  WHEN ABS(rt1.c0) THEN ((((rt1.c2)AND(rt1.c1)))OR(vt1.c0)) END) UNION ALL SELECT rt1.c0 FROM rt1, vt1 WHERE ((NOT (CASE ((rt1.c0) BETWEEN (rt1.c2) AND (vt1.c0))  WHEN ABS(rt1.c0) THEN ((((rt1.c2)AND(rt1.c1)))OR(vt1.c0)) END))) UNION ALL SELECT rt1.c0 FROM rt1, vt1 WHERE (((CASE ((rt1.c0) BETWEEN (rt1.c2) AND (vt1.c0))  WHEN ABS(rt1.c0) THEN ((((rt1.c2)AND(rt1.c1)))OR(vt1.c0)) END) ISNULL));
SELECT ALL rt1.c0 FROM rt1, vt1;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((0Xffffffff83c66c92) NOT BETWEEN ((~ (rt1.c2))) AND (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (((0xffffffff83c66c92) NOT BETWEEN ((~ (rt1.c2))) AND (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))))))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((((0xffffffff83c66c92) NOT BETWEEN ((~ (rt1.c2))) AND (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT ALL rt1.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON ((('0.32669463614853644'))>=(((+ (rt1.c0))))) GROUP BY rt1.c0, vt1.c0;
SELECT rt1.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON ((('0.32669463614853644'))>=(((+ (rt1.c0))))) WHERE ((NOT (CAST(rt1.c0 AS NUMERIC)))) GROUP BY rt1.c0, vt1.c0 UNION SELECT ALL rt1.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON ((('0.32669463614853644'))>=(((+ (rt1.c0))))) WHERE ((NOT ((NOT (CAST(rt1.c0 AS NUMERIC)))))) GROUP BY rt1.c0, vt1.c0 UNION SELECT ALL rt1.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON ((('0.32669463614853644'))>=(((+ (rt1.c0))))) WHERE ((((NOT (CAST(rt1.c0 AS NUMERIC)))) ISNULL)) GROUP BY rt1.c0, vt1.c0;
SELECT ALL rt1.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON ((('0.32669463614853644'))>=(((+ (rt1.c0))))) GROUP BY rt1.c0, vt1.c0;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING ((((((((((MIN(COUNT(*)))<<(rt1.c0)))AND(COUNT(GROUP_CONCAT(SUM(rt1.c1))))))AND(((COUNT(*))/(GROUP_CONCAT(vt1.c0))))))AND(TOTAL(GROUP_CONCAT(COUNT(MAX(COUNT(*))))))))AND(GROUP_CONCAT(vt1.c0))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING (NOT (((((((((((MIN(COUNT(*)))<<(rt1.c0)))AND(COUNT(GROUP_CONCAT(SUM(rt1.c1))))))AND(((COUNT(*))/(GROUP_CONCAT(vt1.c0))))))AND(TOTAL(GROUP_CONCAT(COUNT(MAX(COUNT(*))))))))AND(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING ((((((((((((MIN(COUNT(*)))<<(rt1.c0)))AND(COUNT(GROUP_CONCAT(SUM(rt1.c1))))))AND(((COUNT(*))/(GROUP_CONCAT(vt1.c0))))))AND(TOTAL(GROUP_CONCAT(COUNT(MAX(COUNT(*))))))))AND(GROUP_CONCAT(vt1.c0)))) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE ((+ ((((rt1.c1))<=((rt1.c1)))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT ((+ ((((rt1.c1))<=((rt1.c1)))))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((((+ ((((rt1.c1))<=((rt1.c1)))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM vt1, rt1;
SELECT DISTINCT * FROM vt1, rt1 WHERE (((((rt1.c1)|(vt1.c0))) NOT BETWEEN (((rt1.c1) NOT NULL)) AND (((rt1.c2) NOT BETWEEN (vt1.c0) AND (rt1.c1))))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE ((NOT (((((rt1.c1)|(vt1.c0))) NOT BETWEEN (((rt1.c1) NOT NULL)) AND (((rt1.c2) NOT BETWEEN (vt1.c0) AND (rt1.c1))))))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE (((((((rt1.c1)|(vt1.c0))) NOT BETWEEN (((rt1.c1) NOT NULL)) AND (((rt1.c2) NOT BETWEEN (vt1.c0) AND (rt1.c1))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS REAL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS REAL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS REAL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt1.c2, vt1.c0, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, vt1.c0, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c1, rt1.c0 HAVING rt1.c0 UNION ALL SELECT ALL rt1.c2, vt1.c0, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c1, rt1.c0 HAVING (NOT (rt1.c0)) UNION ALL SELECT rt1.c2, vt1.c0, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c1, rt1.c0 HAVING ((rt1.c0) ISNULL);
SELECT ALL rt1.c2, vt1.c0, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, vt1.c0, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c1, rt1.c0 HAVING rt1.c0 UNION ALL SELECT ALL rt1.c2, vt1.c0, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c1, rt1.c0 HAVING (NOT (rt1.c0)) UNION ALL SELECT rt1.c2, vt1.c0, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c1, rt1.c0 HAVING ((rt1.c0) ISNULL);
SELECT ALL rt1.c2, vt1.c0, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c1, rt1.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((((vt1.c0) IS TRUE)) NOT NULL)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((vt1.c0) IS TRUE)) NOT NULL)))) UNION ALL SELECT * FROM vt1 WHERE (((((((vt1.c0) IS TRUE)) NOT NULL)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (UPPER(DISTINCT '')) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (UPPER(DISTINCT '')))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((UPPER(DISTINCT '')) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 WHERE ((((rt1.c0 IN (rt1.c1)))<<(CAST(rt1.c0 AS REAL)))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE ((NOT ((((rt1.c0 IN (rt1.c1)))<<(CAST(rt1.c0 AS REAL)))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE ((((((rt1.c0 IN (rt1.c1)))<<(CAST(rt1.c0 AS REAL)))) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING MIN(COUNT(*)) COLLATE RTRIM UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING (NOT (MIN(COUNT(*)) COLLATE RTRIM)) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING ((MIN(COUNT(*)) COLLATE RTRIM) ISNULL);
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (-1891349093) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (-1891349093))) UNION ALL SELECT * FROM rt1 WHERE (((-1891349093) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE (LOWER(DISTINCT CAST(0.04101767010167001 AS NUMERIC))) UNION SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (LOWER(DISTINCT CAST(0.04101767010167001 AS NUMERIC))))) UNION SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE (((LOWER(DISTINCT CAST(0.04101767010167001 AS NUMERIC))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((NULL, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY, ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND('29127201')))OR(vt1.c0)))OR(vt1.c0)))OR('1613935691')), CAST(vt1.c0 AS INTEGER))) AND ((CAST(vt1.c0 AS BLOB), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), LIKELIHOOD(vt1.c0, 0.5398975670243673))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((NULL, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY, ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND('29127201')))OR(vt1.c0)))OR(vt1.c0)))OR('1613935691')), CAST(vt1.c0 AS INTEGER))) AND ((CAST(vt1.c0 AS BLOB), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), LIKELIHOOD(vt1.c0, 0.5398975670243673))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((NULL, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY, ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND('29127201')))OR(vt1.c0)))OR(vt1.c0)))OR('1613935691')), CAST(vt1.c0 AS INTEGER))) AND ((CAST(vt1.c0 AS BLOB), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), LIKELIHOOD(vt1.c0, 0.5398975670243673))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt1.c0 FROM vt1 NATURAL JOIN rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM vt1 NATURAL JOIN rt1 GROUP BY rt1.c0 HAVING CAST(((COUNT(*)) BETWEEN (rt1.c2) AND (MAX(rt1.c2))) AS REAL) UNION ALL SELECT rt1.c0 FROM vt1 NATURAL JOIN rt1 GROUP BY rt1.c0 HAVING (NOT (CAST(((COUNT(*)) BETWEEN (rt1.c2) AND (MAX(rt1.c2))) AS REAL))) UNION ALL SELECT rt1.c0 FROM vt1 NATURAL JOIN rt1 GROUP BY rt1.c0 HAVING ((CAST(((COUNT(*)) BETWEEN (rt1.c2) AND (MAX(rt1.c2))) AS REAL)) ISNULL);
SELECT ALL rt1.c0 FROM vt1 NATURAL JOIN rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM vt1 NATURAL JOIN rt1 GROUP BY rt1.c0 HAVING CAST(((COUNT(*)) BETWEEN (rt1.c2) AND (MAX(rt1.c2))) AS REAL) UNION ALL SELECT rt1.c0 FROM vt1 NATURAL JOIN rt1 GROUP BY rt1.c0 HAVING (NOT (CAST(((COUNT(*)) BETWEEN (rt1.c2) AND (MAX(rt1.c2))) AS REAL))) UNION ALL SELECT rt1.c0 FROM vt1 NATURAL JOIN rt1 GROUP BY rt1.c0 HAVING ((CAST(((COUNT(*)) BETWEEN (rt1.c2) AND (MAX(rt1.c2))) AS REAL)) ISNULL);
SELECT ALL rt1.c0 FROM vt1 NATURAL JOIN rt1 GROUP BY rt1.c0;
SELECT * FROM vt1, rt1;
SELECT ALL * FROM vt1, rt1 WHERE (CASE CAST(vt1.c0 AS REAL)  WHEN TRIM(rt1.c0) THEN (NOT (rt1.c2)) ELSE ((rt1.c1)+(rt1.c0)) END) UNION ALL SELECT ALL * FROM vt1, rt1 WHERE ((NOT (CASE CAST(vt1.c0 AS REAL)  WHEN TRIM(rt1.c0) THEN (NOT (rt1.c2)) ELSE ((rt1.c1)+(rt1.c0)) END))) UNION ALL SELECT ALL * FROM vt1, rt1 WHERE (((CASE CAST(vt1.c0 AS REAL)  WHEN TRIM(rt1.c0) THEN (NOT (rt1.c2)) ELSE ((rt1.c1)+(rt1.c0)) END) ISNULL));
SELECT * FROM vt1, rt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE NULLIF(vt1.c0, '\rG1}坁n')  WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN (vt1.c0 IN ()) END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE NULLIF(vt1.c0, '\rG1}坁n')  WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN (vt1.c0 IN ()) END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE NULLIF(vt1.c0, '\rG1}坁n')  WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN (vt1.c0 IN ()) END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (CASE MIN(rt1.c0, rt1.c0)  WHEN ((rt1.c0)%(rt1.c1)) THEN ((rt1.c1)<<(rt1.c0)) ELSE ((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)) END) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (CASE MIN(rt1.c0, rt1.c0)  WHEN ((rt1.c0)%(rt1.c1)) THEN ((rt1.c1)<<(rt1.c0)) ELSE ((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)) END))) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((CASE MIN(rt1.c0, rt1.c0)  WHEN ((rt1.c0)%(rt1.c1)) THEN ((rt1.c1)<<(rt1.c0)) ELSE ((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)) END) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c1 FROM vt1, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM vt1, rt1 GROUP BY rt1.c1 HAVING GROUP_CONCAT((((COUNT(*), vt1.c0, rt1.c0))=((rt1.c2, rt1.c2, rt1.c0)))) UNION ALL SELECT ALL rt1.c1 FROM vt1, rt1 GROUP BY rt1.c1 HAVING (NOT (GROUP_CONCAT((((COUNT(*), vt1.c0, rt1.c0))=((rt1.c2, rt1.c2, rt1.c0)))))) UNION ALL SELECT rt1.c1 FROM vt1, rt1 GROUP BY rt1.c1 HAVING ((GROUP_CONCAT((((COUNT(*), vt1.c0, rt1.c0))=((rt1.c2, rt1.c2, rt1.c0))))) ISNULL);
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE ((((rt1.c1)<(rt1.c0)) IN ())) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((((rt1.c1)<(rt1.c0)) IN ())))) UNION ALL SELECT * FROM rt1 WHERE ((((((rt1.c1)<(rt1.c0)) IN ())) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c0, vt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN vt1 ON (('-1579583683') BETWEEN (CASE WHEN rt1.c1 THEN 1613935691 END) AND ((((rt1.c2))>=((vt1.c0)))));
SELECT DISTINCT rt1.c0, vt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN vt1 ON (('-1579583683') BETWEEN (CASE WHEN rt1.c1 THEN 1613935691 END) AND ((((rt1.c2))>=((vt1.c0))))) WHERE (CASE HEX(vt1.c0)  WHEN ((rt1.c2) ISNULL) THEN ((rt1.c0) NOT BETWEEN ('6M') AND (rt1.c0)) END) UNION SELECT DISTINCT rt1.c0, vt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN vt1 ON (('-1579583683') BETWEEN (CASE WHEN rt1.c1 THEN 1613935691 END) AND ((((rt1.c2))>=((vt1.c0))))) WHERE ((NOT (CASE HEX(vt1.c0)  WHEN ((rt1.c2) ISNULL) THEN ((rt1.c0) NOT BETWEEN ('6M') AND (rt1.c0)) END))) UNION SELECT DISTINCT rt1.c0, vt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN vt1 ON (('-1579583683') BETWEEN (CASE WHEN rt1.c1 THEN 1613935691 END) AND ((((rt1.c2))>=((vt1.c0))))) WHERE (((CASE HEX(vt1.c0)  WHEN ((rt1.c2) ISNULL) THEN ((rt1.c0) NOT BETWEEN ('6M') AND (rt1.c0)) END) ISNULL));
SELECT DISTINCT rt1.c0, vt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN vt1 ON (('-1579583683') BETWEEN (CASE WHEN rt1.c1 THEN 1613935691 END) AND ((((rt1.c2))>=((vt1.c0)))));
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST((((vt1.c0, vt1.c0, 0.4042880285632128))<=((vt1.c0, vt1.c0, vt1.c0))) AS BLOB)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST((((vt1.c0, vt1.c0, 0.4042880285632128))<=((vt1.c0, vt1.c0, vt1.c0))) AS BLOB)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST((((vt1.c0, vt1.c0, 0.4042880285632128))<=((vt1.c0, vt1.c0, vt1.c0))) AS BLOB)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt1.c2, vt1.c0, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, vt1.c0, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c1, rt1.c0 HAVING ((COUNT(SUM(AVG(COUNT(*)))))>>((NOT (MAX(rt1.c0))))) UNION ALL SELECT ALL rt1.c2, vt1.c0, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c1, rt1.c0 HAVING (NOT (((COUNT(SUM(AVG(COUNT(*)))))>>((NOT (MAX(rt1.c0))))))) UNION ALL SELECT ALL rt1.c2, vt1.c0, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c1, rt1.c0 HAVING ((((COUNT(SUM(AVG(COUNT(*)))))>>((NOT (MAX(rt1.c0)))))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))>((vt1.c0)))) NOT BETWEEN ((vt1.c0 IN ())) AND ((('Xa')IS NOT(vt1.c0))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((((vt1.c0))>((vt1.c0)))) NOT BETWEEN ((vt1.c0 IN ())) AND ((('Xa')IS NOT(vt1.c0))))))) UNION ALL SELECT * FROM vt1 WHERE ((((((((vt1.c0))>((vt1.c0)))) NOT BETWEEN ((vt1.c0 IN ())) AND ((('Xa')IS NOT(vt1.c0))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE (CAST((rt1.c2 IN (rt1.c1)) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT (CAST((rt1.c2 IN (rt1.c1)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE (((CAST((rt1.c2 IN (rt1.c1)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT rt1.c2, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c0, vt1.c0;
SELECT ALL rt1.c2, rt1.c0, vt1.c0 FROM vt1, rt1 WHERE (vt1.c0) GROUP BY rt1.c2, rt1.c0, vt1.c0 UNION SELECT rt1.c2, rt1.c0, vt1.c0 FROM vt1, rt1 WHERE ((NOT (vt1.c0))) GROUP BY rt1.c2, rt1.c0, vt1.c0 UNION SELECT rt1.c2, rt1.c0, vt1.c0 FROM vt1, rt1 WHERE (((vt1.c0) ISNULL)) GROUP BY rt1.c2, rt1.c0, vt1.c0;
SELECT rt1.c2, rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(CASE SUM(vt1.c0)  WHEN COUNT(*) THEN vt1.c0 ELSE vt1.c0 END) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(CASE SUM(vt1.c0)  WHEN COUNT(*) THEN vt1.c0 ELSE vt1.c0 END))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(CASE SUM(vt1.c0)  WHEN COUNT(*) THEN vt1.c0 ELSE vt1.c0 END)) ISNULL);
SELECT ALL rt1.c1 FROM rt1, vt1;
SELECT ALL rt1.c1 FROM rt1, vt1 WHERE (((((TRIM(vt1.c0, rt1.c1))OR(((rt1.c2)&(vt1.c0)))))OR(((rt1.c2)IS NOT(vt1.c0))))) UNION ALL SELECT ALL rt1.c1 FROM rt1, vt1 WHERE ((NOT (((((TRIM(vt1.c0, rt1.c1))OR(((rt1.c2)&(vt1.c0)))))OR(((rt1.c2)IS NOT(vt1.c0))))))) UNION ALL SELECT rt1.c1 FROM rt1, vt1 WHERE (((((((TRIM(vt1.c0, rt1.c1))OR(((rt1.c2)&(vt1.c0)))))OR(((rt1.c2)IS NOT(vt1.c0))))) ISNULL));
SELECT ALL rt1.c1 FROM rt1, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) IS FALSE)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS INTEGER)) IS FALSE)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((CAST(vt1.c0 AS INTEGER)) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 NOT INDEXED WHERE (((((rt1.c2) NOTNULL))*(((((rt1.c2)OR(rt1.c1)))OR(rt1.c2))))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE ((NOT (((((rt1.c2) NOTNULL))*(((((rt1.c2)OR(rt1.c1)))OR(rt1.c2))))))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE (((((((rt1.c2) NOTNULL))*(((((rt1.c2)OR(rt1.c1)))OR(rt1.c2))))) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING AVG(MIN(x'0317')) UNION ALL SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT (AVG(MIN(x'0317')))) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((AVG(MIN(x'0317'))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt1 ON (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END IN ());
SELECT DISTINCT vt1.c0, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt1 ON (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END IN ()) WHERE (((((NULL)<<(vt1.c0))) IS FALSE)) UNION SELECT DISTINCT vt1.c0, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt1 ON (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END IN ()) WHERE ((NOT (((((NULL)<<(vt1.c0))) IS FALSE)))) UNION SELECT DISTINCT vt1.c0, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt1 ON (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END IN ()) WHERE (((((((NULL)<<(vt1.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT vt1.c0, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt1 ON (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END IN ());
SELECT rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c2, vt1.c0, rt1.c0;
SELECT rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 WHERE (((rt1.c0 COLLATE BINARY) NOTNULL)) GROUP BY rt1.c1, rt1.c2, vt1.c0, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 WHERE ((NOT (((rt1.c0 COLLATE BINARY) NOTNULL)))) GROUP BY rt1.c1, rt1.c2, vt1.c0, rt1.c0 UNION SELECT rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 WHERE (((((rt1.c0 COLLATE BINARY) NOTNULL)) ISNULL)) GROUP BY rt1.c1, rt1.c2, vt1.c0, rt1.c0;
SELECT rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c2, vt1.c0, rt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING UNLIKELY((SUM(x'') IN (x'2839'))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (UNLIKELY((SUM(x'') IN (x'2839'))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((UNLIKELY((SUM(x'') IN (x'2839')))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING UNLIKELY((SUM(x'') IN (x'2839'))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (UNLIKELY((SUM(x'') IN (x'2839'))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((UNLIKELY((SUM(x'') IN (x'2839')))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt1.c2, rt1.c1 FROM vt1, rt1;
SELECT ALL rt1.c2, rt1.c1 FROM vt1, rt1 WHERE (TYPEOF(DISTINCT (0.017386219523383817 IN ()))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM vt1, rt1 WHERE ((NOT (TYPEOF(DISTINCT (0.017386219523383817 IN ()))))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM vt1, rt1 WHERE (((TYPEOF(DISTINCT (0.017386219523383817 IN ()))) ISNULL));
SELECT ALL rt1.c2, rt1.c1 FROM vt1, rt1;
SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1 WHERE (x'') UNION SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1 WHERE (((x'') ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1;
SELECT rt1.c1, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1, vt1 WHERE (0.5237811496785557) GROUP BY rt1.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c0 FROM rt1 NOT INDEXED, vt1 WHERE ((NOT (0.5237811496785557))) GROUP BY rt1.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c0 FROM rt1, vt1 WHERE (((0.5237811496785557) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING GROUP_CONCAT(SUM(rt1.c0)) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING (NOT (GROUP_CONCAT(SUM(rt1.c0)))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING ((GROUP_CONCAT(SUM(rt1.c0))) ISNULL);
SELECT ALL rt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON (vt1.c0 IN ());
SELECT rt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON (vt1.c0 IN ()) WHERE (CAST('0.9740046812291602' AS REAL) COLLATE NOCASE) UNION ALL SELECT ALL rt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON (vt1.c0 IN ()) WHERE ((NOT (CAST('0.9740046812291602' AS REAL) COLLATE NOCASE))) UNION ALL SELECT ALL rt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON (vt1.c0 IN ()) WHERE (((CAST('0.9740046812291602' AS REAL) COLLATE NOCASE) ISNULL));
SELECT ALL rt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON (vt1.c0 IN ());
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE (((rt1.c1 IN (rt1.c0)) IN (SQLITE_VERSION()))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT (((rt1.c1 IN (rt1.c0)) IN (SQLITE_VERSION()))))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE (((((rt1.c1 IN (rt1.c0)) IN (SQLITE_VERSION()))) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) IS TRUE)) NOT NULL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) IS TRUE)) NOT NULL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0) IS TRUE)) NOT NULL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt1.c1, rt1.c0, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c0, vt1.c0;
SELECT ALL rt1.c1, rt1.c0, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c0, vt1.c0 HAVING (COUNT('782757784') IN (MIN(AVG(rt1.c1)))) UNION ALL SELECT rt1.c1, rt1.c0, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c0, vt1.c0 HAVING (NOT ((COUNT('782757784') IN (MIN(AVG(rt1.c1)))))) UNION ALL SELECT ALL rt1.c1, rt1.c0, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c0, vt1.c0 HAVING (((COUNT('782757784') IN (MIN(AVG(rt1.c1))))) ISNULL);
SELECT ALL * FROM rt1, vt1;
SELECT * FROM rt1, vt1 WHERE ((((rt1.c2 IN ())) NOTNULL)) UNION ALL SELECT * FROM rt1, vt1 WHERE ((NOT ((((rt1.c2 IN ())) NOTNULL)))) UNION ALL SELECT * FROM rt1, vt1 WHERE ((((((rt1.c2 IN ())) NOTNULL)) ISNULL));
SELECT ALL * FROM rt1, vt1;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt1 ON (((((rt1.c0)||(rt1.c0))))!=((CAST(rt1.c2 AS BLOB))));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt1 ON (((((rt1.c0)||(rt1.c0))))!=((CAST(rt1.c2 AS BLOB)))) WHERE (CASE rt1.c2  WHEN 'x' THEN '-1323003439' END COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt1 ON (((((rt1.c0)||(rt1.c0))))!=((CAST(rt1.c2 AS BLOB)))) WHERE ((NOT (CASE rt1.c2  WHEN 'x' THEN '-1323003439' END COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt1 ON (((((rt1.c0)||(rt1.c0))))!=((CAST(rt1.c2 AS BLOB)))) WHERE (((CASE rt1.c2  WHEN 'x' THEN '-1323003439' END COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN rt1 ON (((((rt1.c0)||(rt1.c0))))!=((CAST(rt1.c2 AS BLOB))));
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 WHERE ((('!/')=((((rt1.c2, rt1.c1, rt1.c0))<=((rt1.c0, rt1.c1, NULL)))))) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT ((('!/')==((((rt1.c2, rt1.c1, rt1.c0))<=((rt1.c0, rt1.c1, NULL)))))))) GROUP BY rt1.c2, rt1.c1 UNION SELECT rt1.c2, rt1.c1 FROM rt1 WHERE ((((('!/')=((((rt1.c2, rt1.c1, rt1.c0))<=((rt1.c0, rt1.c1, NULL)))))) ISNULL)) GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2 FROM vt1 CROSS JOIN rt1 ON CAST(-1.715810703E9 AS TEXT) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM vt1 CROSS JOIN rt1 ON CAST(-1.715810703E9 AS TEXT) GROUP BY rt1.c2 HAVING COUNT(NULL) COLLATE NOCASE UNION ALL SELECT rt1.c2 FROM vt1 CROSS JOIN rt1 ON CAST(-1.715810703E9 AS TEXT) GROUP BY rt1.c2 HAVING (NOT (COUNT(NULL) COLLATE NOCASE)) UNION ALL SELECT ALL rt1.c2 FROM vt1 CROSS JOIN rt1 ON CAST(-1.715810703E9 AS TEXT) GROUP BY rt1.c2 HAVING ((COUNT(NULL) COLLATE NOCASE) ISNULL);
SELECT ALL rt1.c2 FROM vt1 CROSS JOIN rt1 ON CAST(-1.715810703E9 AS TEXT) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM vt1 CROSS JOIN rt1 ON CAST(-1.715810703E9 AS TEXT) GROUP BY rt1.c2 HAVING COUNT(NULL) COLLATE NOCASE UNION ALL SELECT rt1.c2 FROM vt1 CROSS JOIN rt1 ON CAST(-1.715810703E9 AS TEXT) GROUP BY rt1.c2 HAVING (NOT (COUNT(NULL) COLLATE NOCASE)) UNION ALL SELECT ALL rt1.c2 FROM vt1 CROSS JOIN rt1 ON CAST(-1.715810703E9 AS TEXT) GROUP BY rt1.c2 HAVING ((COUNT(NULL) COLLATE NOCASE) ISNULL);
SELECT ALL rt1.c2 FROM vt1 CROSS JOIN rt1 ON CAST(-1.715810703E9 AS TEXT) GROUP BY rt1.c2;
SELECT ALL rt1.c1 FROM vt1, rt1;
SELECT rt1.c1 FROM vt1, rt1 WHERE (CASE CASE WHEN rt1.c1 THEN rt1.c1 WHEN '\neGJ~Da1' THEN rt1.c0 WHEN rt1.c1 THEN 0.3031231302084655 ELSE rt1.c1 END  WHEN CASE rt1.c2  WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 END THEN ((rt1.c1)IS(rt1.c1)) ELSE ((rt1.c1)/(rt1.c0)) END) UNION ALL SELECT rt1.c1 FROM vt1, rt1 WHERE ((NOT (CASE CASE WHEN rt1.c1 THEN rt1.c1 WHEN '\neGJ~Da1' THEN rt1.c0 WHEN rt1.c1 THEN 0.3031231302084655 ELSE rt1.c1 END  WHEN CASE rt1.c2  WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 END THEN ((rt1.c1)IS(rt1.c1)) ELSE ((rt1.c1)/(rt1.c0)) END))) UNION ALL SELECT rt1.c1 FROM vt1, rt1 WHERE (((CASE CASE WHEN rt1.c1 THEN rt1.c1 WHEN '\neGJ~Da1' THEN rt1.c0 WHEN rt1.c1 THEN 0.3031231302084655 ELSE rt1.c1 END  WHEN CASE rt1.c2  WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 END THEN ((rt1.c1)IS(rt1.c1)) ELSE ((rt1.c1)/(rt1.c0)) END) ISNULL));
SELECT ALL rt1.c1 FROM vt1, rt1;
SELECT DISTINCT * FROM vt1, rt1 NOT INDEXED;
SELECT DISTINCT * FROM vt1, rt1 WHERE ((((((~ (rt1.c1)))AND(((rt1.c1) ISNULL))))OR((((rt1.c1, rt1.c1, '.~g*P')) BETWEEN ((vt1.c0, 0.43397954194867383, vt1.c0)) AND ((rt1.c1, vt1.c0, rt1.c1)))))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE ((NOT ((((((~ (rt1.c1)))AND(((rt1.c1) ISNULL))))OR((((rt1.c1, rt1.c1, '.~g*P')) BETWEEN ((vt1.c0, 0.43397954194867383, vt1.c0)) AND ((rt1.c1, vt1.c0, rt1.c1)))))))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE ((((((((~ (rt1.c1)))AND(((rt1.c1) ISNULL))))OR((((rt1.c1, rt1.c1, '.~g*P')) BETWEEN ((vt1.c0, 0.43397954194867383, vt1.c0)) AND ((rt1.c1, vt1.c0, rt1.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt1 NOT INDEXED;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (0.17673707121734927)) AS REAL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (0.17673707121734927)) AS REAL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (0.17673707121734927)) AS REAL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(COUNT(COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(COUNT(COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(COUNT(COUNT(*)))) ISNULL);
SELECT ALL rt1.c2, rt1.c0 FROM rt1;
SELECT rt1.c2, rt1.c0 FROM rt1 WHERE (((((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))))<(((- (rt1.c1)))))) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (((((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))))<(((- (rt1.c1)))))))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE (((((((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))))<(((- (rt1.c1)))))) ISNULL));
SELECT ALL rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c1, vt1.c0, rt1.c2 FROM rt1, vt1;
SELECT DISTINCT rt1.c0, rt1.c1, vt1.c0, rt1.c2 FROM rt1, vt1 WHERE (rt1.c1) UNION SELECT DISTINCT rt1.c0, rt1.c1, vt1.c0, rt1.c2 FROM rt1, vt1 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT rt1.c0, rt1.c1, vt1.c0, rt1.c2 FROM rt1, vt1 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1, vt1.c0, rt1.c2 FROM rt1, vt1;
SELECT rt1.c1, rt1.c0, rt1.c2, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, vt1.c0;
SELECT rt1.c1, rt1.c0, rt1.c2, vt1.c0 FROM rt1, vt1 WHERE (SUBSTR(x'', CAST(rt1.c1 AS BLOB))) GROUP BY rt1.c1, rt1.c0, rt1.c2, vt1.c0 UNION SELECT rt1.c1, rt1.c0, rt1.c2, vt1.c0 FROM rt1, vt1 WHERE ((NOT (SUBSTR(x'', CAST(rt1.c1 AS BLOB))))) GROUP BY rt1.c1, rt1.c0, rt1.c2, vt1.c0 UNION SELECT rt1.c1, rt1.c0, rt1.c2, vt1.c0 FROM rt1, vt1 WHERE (((SUBSTR(x'', CAST(rt1.c1 AS BLOB))) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c2, vt1.c0;
SELECT rt1.c1, rt1.c0, rt1.c2, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1, rt1;
SELECT ALL * FROM vt1, rt1 WHERE (((CASE x'347d'  WHEN rt1.c2 THEN rt1.c1 END) IS TRUE)) UNION ALL SELECT * FROM vt1, rt1 WHERE ((NOT (((CASE x'347d'  WHEN rt1.c2 THEN rt1.c1 END) IS TRUE)))) UNION ALL SELECT ALL * FROM vt1, rt1 WHERE (((((CASE x'347d'  WHEN rt1.c2 THEN rt1.c1 END) IS TRUE)) ISNULL));
SELECT ALL * FROM vt1, rt1;
SELECT DISTINCT * FROM vt1, rt1;
SELECT DISTINCT * FROM vt1, rt1 WHERE ((~ (((rt1.c1)>(rt1.c0))))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE ((NOT ((~ (((rt1.c1)>(rt1.c0))))))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE ((((~ (((rt1.c1)>(rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt1;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE (((((rt1.c1 IN ())))<=((((rt1.c2)IS NOT(0.9974535804654432)))))) GROUP BY rt1.c2, rt1.c0 UNION SELECT rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (((((rt1.c1 IN ())))<=((((rt1.c2)IS NOT(0.9974535804654432)))))))) GROUP BY rt1.c2, rt1.c0 UNION SELECT rt1.c2, rt1.c0 FROM rt1 WHERE (((((((rt1.c1 IN ())))<=((((rt1.c2)IS NOT(0.9974535804654432)))))) ISNULL)) GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL vt1.c0 FROM vt1, rt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, rt1 GROUP BY vt1.c0 HAVING COUNT(rt1.c2 COLLATE RTRIM) UNION ALL SELECT ALL vt1.c0 FROM vt1, rt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(rt1.c2 COLLATE RTRIM))) UNION ALL SELECT vt1.c0 FROM vt1, rt1 GROUP BY vt1.c0 HAVING ((COUNT(rt1.c2 COLLATE RTRIM)) ISNULL);
SELECT ALL vt1.c0 FROM vt1, rt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, rt1 GROUP BY vt1.c0 HAVING COUNT(rt1.c2 COLLATE RTRIM) UNION ALL SELECT ALL vt1.c0 FROM vt1, rt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(rt1.c2 COLLATE RTRIM))) UNION ALL SELECT vt1.c0 FROM vt1, rt1 GROUP BY vt1.c0 HAVING ((COUNT(rt1.c2 COLLATE RTRIM)) ISNULL);
SELECT ALL vt1.c0 FROM vt1, rt1 GROUP BY vt1.c0;
SELECT ALL rt1.c1 FROM rt1;
SELECT ALL rt1.c1 FROM rt1 WHERE (CASE CAST(rt1.c2 AS BLOB)  WHEN (~ (rt1.c0)) THEN rt1.c0 WHEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END THEN rt1.c0 COLLATE NOCASE WHEN (- (rt1.c1)) THEN ((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c1)) END) UNION ALL SELECT ALL rt1.c1 FROM rt1 WHERE ((NOT (CASE CAST(rt1.c2 AS BLOB)  WHEN (~ (rt1.c0)) THEN rt1.c0 WHEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END THEN rt1.c0 COLLATE NOCASE WHEN (- (rt1.c1)) THEN ((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c1)) END))) UNION ALL SELECT ALL rt1.c1 FROM rt1 WHERE (((CASE CAST(rt1.c2 AS BLOB)  WHEN (~ (rt1.c0)) THEN rt1.c0 WHEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END THEN rt1.c0 COLLATE NOCASE WHEN (- (rt1.c1)) THEN ((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c1)) END) ISNULL));
SELECT ALL rt1.c1 FROM rt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) NOT NULL) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((vt1.c0) NOT NULL) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) NOT NULL) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((((rt1.c0)<<(rt1.c2))) IS TRUE)) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (((((rt1.c0)<<(rt1.c2))) IS TRUE)))) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((((((rt1.c0)<<(rt1.c2))) IS TRUE)) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0)<<(MAX(vt1.c0)))) NOT BETWEEN (vt1.c0) AND (SUM(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((vt1.c0)<<(MAX(vt1.c0)))) NOT BETWEEN (vt1.c0) AND (SUM(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c0)<<(MAX(vt1.c0)))) NOT BETWEEN (vt1.c0) AND (SUM(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0)<<(MAX(vt1.c0)))) NOT BETWEEN (vt1.c0) AND (SUM(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((vt1.c0)<<(MAX(vt1.c0)))) NOT BETWEEN (vt1.c0) AND (SUM(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c0)<<(MAX(vt1.c0)))) NOT BETWEEN (vt1.c0) AND (SUM(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt1.c2, vt1.c0 FROM rt1, vt1;
SELECT rt1.c2, vt1.c0 FROM rt1, vt1 WHERE ((((rt1.c1)<(vt1.c0)) IN ())) UNION ALL SELECT rt1.c2, vt1.c0 FROM rt1, vt1 WHERE ((NOT ((((rt1.c1)<(vt1.c0)) IN ())))) UNION ALL SELECT rt1.c2, vt1.c0 FROM rt1, vt1 WHERE ((((((rt1.c1)<(vt1.c0)) IN ())) ISNULL));
SELECT rt1.c2, vt1.c0 FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE ((~ ((~ (rt1.c1))))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT ((~ ((~ (rt1.c1))))))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((((~ ((~ (rt1.c1))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM rt1 WHERE (CAST(rt1.c2 AS BLOB) COLLATE RTRIM) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (CAST(rt1.c2 AS BLOB) COLLATE RTRIM))) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE (((CAST(rt1.c2 AS BLOB) COLLATE RTRIM) ISNULL)) GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING IFNULL(DISTINCT CASE WHEN vt1.c0 THEN AVG(GROUP_CONCAT(SUM(SUM(SUM(MAX(vt1.c0)))))) END, COUNT(vt1.c0) COLLATE BINARY) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (IFNULL(DISTINCT CASE WHEN vt1.c0 THEN AVG(GROUP_CONCAT(SUM(SUM(SUM(MAX(vt1.c0)))))) END, COUNT(vt1.c0) COLLATE BINARY))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((IFNULL(DISTINCT CASE WHEN vt1.c0 THEN AVG(GROUP_CONCAT(SUM(SUM(SUM(MAX(vt1.c0)))))) END, COUNT(vt1.c0) COLLATE BINARY)) ISNULL);
SELECT ALL vt1.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1 INNER JOIN vt1 ON LOWER(vt1.c0);
SELECT ALL vt1.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1 INNER JOIN vt1 ON LOWER(vt1.c0) WHERE ('') UNION ALL SELECT vt1.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1 INNER JOIN vt1 ON LOWER(vt1.c0) WHERE ((NOT (''))) UNION ALL SELECT vt1.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1 INNER JOIN vt1 ON LOWER(vt1.c0) WHERE ((('') ISNULL));
SELECT ALL vt1.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1 INNER JOIN vt1 ON LOWER(vt1.c0);
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (CAST(HEX(rt1.c0) AS TEXT)) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (CAST(HEX(rt1.c0) AS TEXT)))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((CAST(HEX(rt1.c0) AS TEXT)) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT vt1.c0, rt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c0, rt1.c1;
SELECT ALL vt1.c0, rt1.c0, rt1.c1 FROM vt1, rt1 WHERE (CAST(((((((((vt1.c0)OR(vt1.c0)))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c2)) AS NUMERIC)) GROUP BY vt1.c0, rt1.c0, rt1.c1 UNION SELECT ALL vt1.c0, rt1.c0, rt1.c1 FROM vt1, rt1 WHERE ((NOT (CAST(((((((((vt1.c0)OR(vt1.c0)))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c2)) AS NUMERIC)))) GROUP BY vt1.c0, rt1.c0, rt1.c1 UNION SELECT vt1.c0, rt1.c0, rt1.c1 FROM vt1, rt1 WHERE (((CAST(((((((((vt1.c0)OR(vt1.c0)))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c2)) AS NUMERIC)) ISNULL)) GROUP BY vt1.c0, rt1.c0, rt1.c1;
SELECT vt1.c0, rt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c0, rt1.c1;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL * FROM rt1, vt1;
SELECT * FROM rt1, vt1 WHERE (((json_valid(''))+(CAST(rt1.c0 AS INTEGER)))) UNION ALL SELECT ALL * FROM rt1, vt1 WHERE ((NOT (((json_valid(''))+(CAST(rt1.c0 AS INTEGER)))))) UNION ALL SELECT ALL * FROM rt1, vt1 WHERE (((((json_valid(''))+(CAST(rt1.c0 AS INTEGER)))) ISNULL));
SELECT ALL * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1 NOT INDEXED, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE ((~ ('-406611085'))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT ((~ ('-406611085'))))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((((~ ('-406611085'))) ISNULL));
SELECT DISTINCT * FROM rt1 NOT INDEXED, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE NOCASE) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE NOCASE))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, rt1.c2, rt1.c1 FROM vt1 INNER JOIN rt1 ON COALESCE(DISTINCT (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))), (+ (vt1.c0))) GROUP BY vt1.c0, rt1.c2, rt1.c1;
SELECT ALL vt1.c0, rt1.c2, rt1.c1 FROM vt1 INNER JOIN rt1 ON COALESCE(DISTINCT (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))), (+ (vt1.c0))) GROUP BY vt1.c0, rt1.c2, rt1.c1 HAVING ((((TOTAL(vt1.c0))OR((~ (GROUP_CONCAT(COUNT(rt1.c1)))))))AND(UNLIKELY(DISTINCT x''))) UNION ALL SELECT ALL vt1.c0, rt1.c2, rt1.c1 FROM vt1 INNER JOIN rt1 ON COALESCE(DISTINCT (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))), (+ (vt1.c0))) GROUP BY vt1.c0, rt1.c2, rt1.c1 HAVING (NOT (((((TOTAL(vt1.c0))OR((~ (GROUP_CONCAT(COUNT(rt1.c1)))))))AND(UNLIKELY(DISTINCT x''))))) UNION ALL SELECT ALL vt1.c0, rt1.c2, rt1.c1 FROM vt1 INNER JOIN rt1 ON COALESCE(DISTINCT (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))), (+ (vt1.c0))) GROUP BY vt1.c0, rt1.c2, rt1.c1 HAVING ((((((TOTAL(vt1.c0))OR((~ (GROUP_CONCAT(COUNT(rt1.c1)))))))AND(UNLIKELY(DISTINCT x'')))) ISNULL);
SELECT ALL MAX((vt1.c0 IN ()) COLLATE NOCASE) FROM vt1;
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (((rt1.c2 COLLATE BINARY)>=((x'c54b' IN (rt1.c1))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((rt1.c2 COLLATE BINARY)>=((x'c54b' IN (rt1.c1))))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((rt1.c2 COLLATE BINARY)>=((x'c54b' IN (rt1.c1))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(vt1.c0 AS BLOB) COLLATE BINARY COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS BLOB) COLLATE BINARY COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB) COLLATE BINARY COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 WHERE (LOWER((((rt1.c1))<>((rt1.c2))))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT (LOWER((((rt1.c1))!=((rt1.c2))))))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE (((LOWER((((rt1.c1))!=((rt1.c2))))) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT vt1.c0, rt1.c2, rt1.c0, rt1.c1 FROM vt1, rt1;
SELECT ALL vt1.c0, rt1.c2, rt1.c0, rt1.c1 FROM vt1, rt1 WHERE (CASE ((vt1.c0) NOT NULL)  WHEN rt1.c2 COLLATE RTRIM THEN rt1.c1 ELSE ((((rt1.c0)OR(rt1.c1)))AND(rt1.c2)) END) UNION ALL SELECT ALL vt1.c0, rt1.c2, rt1.c0, rt1.c1 FROM vt1, rt1 WHERE ((NOT (CASE ((vt1.c0) NOT NULL)  WHEN rt1.c2 COLLATE RTRIM THEN rt1.c1 ELSE ((((rt1.c0)OR(rt1.c1)))AND(rt1.c2)) END))) UNION ALL SELECT vt1.c0, rt1.c2, rt1.c0, rt1.c1 FROM vt1, rt1 WHERE (((CASE ((vt1.c0) NOT NULL)  WHEN rt1.c2 COLLATE RTRIM THEN rt1.c1 ELSE ((((rt1.c0)OR(rt1.c1)))AND(rt1.c2)) END) ISNULL));
SELECT vt1.c0, rt1.c2, rt1.c0, rt1.c1 FROM vt1, rt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0)AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0)>>(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0)>>(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0)>>(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt1.c0, vt1.c0, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c0, vt1.c0, rt1.c1;
SELECT rt1.c0, vt1.c0, rt1.c1 FROM rt1, vt1 WHERE (((((rt1.c1) IS TRUE)) IS TRUE)) GROUP BY rt1.c0, vt1.c0, rt1.c1 UNION SELECT rt1.c0, vt1.c0, rt1.c1 FROM rt1, vt1 WHERE ((NOT (((((rt1.c1) IS TRUE)) IS TRUE)))) GROUP BY rt1.c0, vt1.c0, rt1.c1 UNION SELECT rt1.c0, vt1.c0, rt1.c1 FROM rt1, vt1 WHERE (((((((rt1.c1) IS TRUE)) IS TRUE)) ISNULL)) GROUP BY rt1.c0, vt1.c0, rt1.c1;
SELECT ALL rt1.c0, vt1.c0, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c0, vt1.c0, rt1.c1;
SELECT ALL rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0 HAVING ((((rt1.c1) BETWEEN (COUNT(*)) AND (2100942558))) NOT BETWEEN (((GROUP_CONCAT(vt1.c0)) IS FALSE)) AND (CASE WHEN SUM(MAX(rt1.c2)) THEN rt1.c2 END)) UNION ALL SELECT ALL rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0 HAVING (NOT (((((rt1.c1) BETWEEN (COUNT(*)) AND (2100942558))) NOT BETWEEN (((GROUP_CONCAT(vt1.c0)) IS FALSE)) AND (CASE WHEN SUM(MAX(rt1.c2)) THEN rt1.c2 END)))) UNION ALL SELECT ALL rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0 HAVING ((((((rt1.c1) BETWEEN (COUNT(*)) AND (2100942558))) NOT BETWEEN (((GROUP_CONCAT(vt1.c0)) IS FALSE)) AND (CASE WHEN SUM(MAX(rt1.c2)) THEN rt1.c2 END))) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE ((((rt1.c0) IS TRUE) IN ())) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((((rt1.c0) IS TRUE) IN ())))) UNION ALL SELECT ALL * FROM rt1 WHERE ((((((rt1.c0) IS TRUE) IN ())) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0) ISNULL)) IS TRUE)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) ISNULL)) IS TRUE)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) ISNULL)) IS TRUE)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt1.c2, vt1.c0, rt1.c0, rt1.c1 FROM rt1 RIGHT OUTER JOIN vt1 ON ((rt1.c0)IS NOT(vt1.c0)) COLLATE BINARY GROUP BY rt1.c2, vt1.c0, rt1.c0, rt1.c1;
SELECT rt1.c2, vt1.c0, rt1.c0, rt1.c1 FROM rt1 NOT INDEXED RIGHT OUTER JOIN vt1 ON ((rt1.c0)IS NOT(vt1.c0)) COLLATE BINARY WHERE ((((((~ (vt1.c0)))AND((rt1.c1 IN ()))))AND(CASE rt1.c0  WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c1 END))) GROUP BY rt1.c2, vt1.c0, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, vt1.c0, rt1.c0, rt1.c1 FROM rt1 RIGHT OUTER JOIN vt1 ON ((rt1.c0)IS NOT(vt1.c0)) COLLATE BINARY WHERE ((NOT ((((((~ (vt1.c0)))AND((rt1.c1 IN ()))))AND(CASE rt1.c0  WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c1 END))))) GROUP BY rt1.c2, vt1.c0, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, vt1.c0, rt1.c0, rt1.c1 FROM rt1 RIGHT OUTER JOIN vt1 ON ((rt1.c0)IS NOT(vt1.c0)) COLLATE BINARY WHERE ((((((((~ (vt1.c0)))AND((rt1.c1 IN ()))))AND(CASE rt1.c0  WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c1 END))) ISNULL)) GROUP BY rt1.c2, vt1.c0, rt1.c0, rt1.c1;
SELECT rt1.c2, vt1.c0, rt1.c0, rt1.c1 FROM rt1 RIGHT OUTER JOIN vt1 ON ((rt1.c0)IS NOT(vt1.c0)) COLLATE BINARY GROUP BY rt1.c2, vt1.c0, rt1.c0, rt1.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((COUNT(MAX(AVG(TOTAL(vt1.c0)))))<=(TOTAL(x''))))AND((+ ('924488645')))))AND(MAX(MAX(AVG(TOTAL(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((((COUNT(MAX(AVG(TOTAL(vt1.c0)))))<=(TOTAL(x''))))AND((+ ('924488645')))))AND(MAX(MAX(AVG(TOTAL(vt1.c0)))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((((COUNT(MAX(AVG(TOTAL(vt1.c0)))))<=(TOTAL(x''))))AND((+ ('924488645')))))AND(MAX(MAX(AVG(TOTAL(vt1.c0))))))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((((vt1.c0) NOTNULL)) IS TRUE)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((vt1.c0) NOTNULL)) IS TRUE)))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((vt1.c0) NOTNULL)) IS TRUE)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c2 FROM rt1 WHERE (((((rt1.c2)IS(rt1.c0))) IS TRUE)) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE ((NOT (((((rt1.c2)IS(rt1.c0))) IS TRUE)))) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE (((((((rt1.c2)IS(rt1.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT ALL rt1.c1, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM vt1, rt1 WHERE (TRIM((('528069786')*(rt1.c1)))) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM vt1, rt1 WHERE ((NOT (TRIM((('528069786')*(rt1.c1)))))) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM vt1, rt1 WHERE (((TRIM((('528069786')*(rt1.c1)))) ISNULL)) GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((COUNT(*)) ISNULL) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (((COUNT(*)) ISNULL))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((((COUNT(*)) ISNULL)) ISNULL);
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((COUNT(*)) ISNULL) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (((COUNT(*)) ISNULL))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((((COUNT(*)) ISNULL)) ISNULL);
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL * FROM vt1, rt1;
SELECT ALL * FROM vt1, rt1 WHERE (CASE WHEN (NOT (vt1.c0)) THEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END WHEN '-962639191' THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c1 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c1 END WHEN rt1.c1 THEN ((rt1.c0)>('-186841383')) END) UNION ALL SELECT * FROM vt1, rt1 WHERE ((NOT (CASE WHEN (NOT (vt1.c0)) THEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END WHEN '-962639191' THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c1 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c1 END WHEN rt1.c1 THEN ((rt1.c0)>('-186841383')) END))) UNION ALL SELECT ALL * FROM vt1, rt1 WHERE (((CASE WHEN (NOT (vt1.c0)) THEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END WHEN '-962639191' THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c1 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c1 END WHEN rt1.c1 THEN ((rt1.c0)>('-186841383')) END) ISNULL));
SELECT ALL * FROM vt1, rt1;
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE (CASE ((0.4229645663518272) BETWEEN (rt1.c2) AND (vt1.c0))  WHEN NULL THEN rt1.c0 COLLATE RTRIM ELSE (~ (rt1.c0)) END) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT (CASE ((0.4229645663518272) BETWEEN (rt1.c2) AND (vt1.c0))  WHEN NULL THEN rt1.c0 COLLATE RTRIM ELSE (~ (rt1.c0)) END))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE (((CASE ((0.4229645663518272) BETWEEN (rt1.c2) AND (vt1.c0))  WHEN NULL THEN rt1.c0 COLLATE RTRIM ELSE (~ (rt1.c0)) END) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED WHERE (CASE CAST(vt1.c0 AS INTEGER)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN vt1.c0 COLLATE NOCASE THEN ((vt1.c0)=(vt1.c0)) WHEN CAST(vt1.c0 AS NUMERIC) THEN ((vt1.c0)<<(vt1.c0)) ELSE CAST(vt1.c0 AS TEXT) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE CAST(vt1.c0 AS INTEGER)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN vt1.c0 COLLATE NOCASE THEN ((vt1.c0)=(vt1.c0)) WHEN CAST(vt1.c0 AS NUMERIC) THEN ((vt1.c0)<<(vt1.c0)) ELSE CAST(vt1.c0 AS TEXT) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE CAST(vt1.c0 AS INTEGER)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN vt1.c0 COLLATE NOCASE THEN ((vt1.c0)=(vt1.c0)) WHEN CAST(vt1.c0 AS NUMERIC) THEN ((vt1.c0)<<(vt1.c0)) ELSE CAST(vt1.c0 AS TEXT) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING SUM(((TOTAL(COUNT(*)))<(TOTAL(GROUP_CONCAT(AVG(rt1.c1)))))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (SUM(((TOTAL(COUNT(*)))<(TOTAL(GROUP_CONCAT(AVG(rt1.c1)))))))) UNION ALL SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((SUM(((TOTAL(COUNT(*)))<(TOTAL(GROUP_CONCAT(AVG(rt1.c1))))))) ISNULL);
SELECT vt1.c0, rt1.c2 FROM rt1, vt1;
SELECT ALL vt1.c0, rt1.c2 FROM rt1, vt1 WHERE ((vt1.c0 IN (rt1.c1, '-1752479837')) COLLATE BINARY) UNION ALL SELECT ALL vt1.c0, rt1.c2 FROM rt1, vt1 WHERE ((NOT ((vt1.c0 IN (rt1.c1, '-1752479837')) COLLATE BINARY))) UNION ALL SELECT ALL vt1.c0, rt1.c2 FROM rt1, vt1 WHERE ((((vt1.c0 IN (rt1.c1, '-1752479837')) COLLATE BINARY) ISNULL));
SELECT vt1.c0, rt1.c2 FROM rt1, vt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((+ (rt1.c1 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((+ (rt1.c1 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((+ (rt1.c1 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c2, vt1.c0, rt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, vt1.c0, rt1.c0, rt1.c1 FROM vt1, rt1 WHERE (CASE NULL COLLATE NOCASE  WHEN ((vt1.c0)/(rt1.c2)) THEN rt1.c2 WHEN (rt1.c0 IN ()) THEN ((rt1.c0)<>(vt1.c0)) WHEN (((rt1.c2, rt1.c1, vt1.c0))!=((rt1.c0, vt1.c0, rt1.c2))) THEN ((rt1.c1)>>(rt1.c1)) END) GROUP BY rt1.c2, vt1.c0, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, vt1.c0, rt1.c0, rt1.c1 FROM vt1, rt1 WHERE ((NOT (CASE NULL COLLATE NOCASE  WHEN ((vt1.c0)/(rt1.c2)) THEN rt1.c2 WHEN (rt1.c0 IN ()) THEN ((rt1.c0)!=(vt1.c0)) WHEN (((rt1.c2, rt1.c1, vt1.c0))!=((rt1.c0, vt1.c0, rt1.c2))) THEN ((rt1.c1)>>(rt1.c1)) END))) GROUP BY rt1.c2, vt1.c0, rt1.c0, rt1.c1 UNION SELECT rt1.c2, vt1.c0, rt1.c0, rt1.c1 FROM vt1, rt1 WHERE (((CASE NULL COLLATE NOCASE  WHEN ((vt1.c0)/(rt1.c2)) THEN rt1.c2 WHEN (rt1.c0 IN ()) THEN ((rt1.c0)!=(vt1.c0)) WHEN (((rt1.c2, rt1.c1, vt1.c0))<>((rt1.c0, vt1.c0, rt1.c2))) THEN ((rt1.c1)>>(rt1.c1)) END) ISNULL)) GROUP BY rt1.c2, vt1.c0, rt1.c0, rt1.c1;
SELECT rt1.c2, vt1.c0, rt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c0, rt1.c1;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING TOTAL(COUNT(MIN(rt1.c1))) UNION ALL SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT (TOTAL(COUNT(MIN(rt1.c1))))) UNION ALL SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((TOTAL(COUNT(MIN(rt1.c1)))) ISNULL);
SELECT rt1.c2, rt1.c1 FROM rt1;
SELECT rt1.c2, rt1.c1 FROM rt1 NOT INDEXED WHERE ((('-0.0') IS TRUE)) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT ((('-0.0') IS TRUE)))) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1 WHERE ((((('-0.0') IS TRUE)) ISNULL));
SELECT rt1.c2, rt1.c1 FROM rt1;
SELECT DISTINCT * FROM vt1, rt1;
SELECT DISTINCT * FROM vt1, rt1 WHERE ((((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))*('-477751540'))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE ((NOT ((((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))*('-477751540'))))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE ((((((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))*('-477751540'))) ISNULL));
SELECT DISTINCT * FROM vt1, rt1;
SELECT ALL rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c2, vt1.c0, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 WHERE (TRIM((~ (rt1.c0)))) GROUP BY rt1.c1, rt1.c2, vt1.c0, rt1.c0 UNION SELECT rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 WHERE ((NOT (TRIM((~ (rt1.c0)))))) GROUP BY rt1.c1, rt1.c2, vt1.c0, rt1.c0 UNION SELECT rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 WHERE (((TRIM((~ (rt1.c0)))) ISNULL)) GROUP BY rt1.c1, rt1.c2, vt1.c0, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c2, vt1.c0, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((((rt1.c0)!=(rt1.c0)) IN ())) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT ((((rt1.c0)<>(rt1.c0)) IN ())))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((((((rt1.c0)!=(rt1.c0)) IN ())) ISNULL));
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT * FROM vt1, rt1;
SELECT DISTINCT * FROM vt1, rt1 WHERE (0Xffffffffb5433e92) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE ((NOT (0xffffffffb5433e92))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE (((0xffffffffb5433e92) ISNULL));
SELECT DISTINCT * FROM vt1, rt1;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 WHERE ((~ (((((rt1.c2)AND(rt1.c0)))OR(rt1.c0))))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT ((~ (((((rt1.c2)AND(rt1.c0)))OR(rt1.c0))))))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE ((((~ (((((rt1.c2)AND(rt1.c0)))OR(rt1.c0))))) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2, vt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c1;
SELECT ALL rt1.c2, vt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c1 HAVING COUNT(SUM(rt1.c1)) UNION ALL SELECT rt1.c2, vt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c1 HAVING (NOT (COUNT(SUM(rt1.c1)))) UNION ALL SELECT ALL rt1.c2, vt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c1 HAVING ((COUNT(SUM(rt1.c1))) ISNULL);
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt1 ON (((rt1.c2 COLLATE NOCASE, CASE vt1.c0  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END, CASE rt1.c2  WHEN rt1.c1 THEN vt1.c0 ELSE rt1.c0 END))<>((((rt1.c1)+(vt1.c0)), ((rt1.c1)<(rt1.c0)), (NOT (rt1.c2)))));
SELECT * FROM rt1 LEFT OUTER JOIN vt1 ON (((rt1.c2 COLLATE NOCASE, CASE vt1.c0  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END, CASE rt1.c2  WHEN rt1.c1 THEN vt1.c0 ELSE rt1.c0 END))!=((((rt1.c1)+(vt1.c0)), ((rt1.c1)<(rt1.c0)), (NOT (rt1.c2))))) WHERE (((((rt1.c1)LIKE(rt1.c0)))>>(rt1.c2 COLLATE RTRIM))) UNION ALL SELECT * FROM rt1 LEFT OUTER JOIN vt1 ON (((rt1.c2 COLLATE NOCASE, CASE vt1.c0  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END, CASE rt1.c2  WHEN rt1.c1 THEN vt1.c0 ELSE rt1.c0 END))<>((((rt1.c1)+(vt1.c0)), ((rt1.c1)<(rt1.c0)), (NOT (rt1.c2))))) WHERE ((NOT (((((rt1.c1)LIKE(rt1.c0)))>>(rt1.c2 COLLATE RTRIM))))) UNION ALL SELECT * FROM rt1 LEFT OUTER JOIN vt1 ON (((rt1.c2 COLLATE NOCASE, CASE vt1.c0  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END, CASE rt1.c2  WHEN rt1.c1 THEN vt1.c0 ELSE rt1.c0 END))!=((((rt1.c1)+(vt1.c0)), ((rt1.c1)<(rt1.c0)), (NOT (rt1.c2))))) WHERE (((((((rt1.c1)LIKE(rt1.c0)))>>(rt1.c2 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt1 ON (((rt1.c2 COLLATE NOCASE, CASE vt1.c0  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END, CASE rt1.c2  WHEN rt1.c1 THEN vt1.c0 ELSE rt1.c0 END))<>((((rt1.c1)+(vt1.c0)), ((rt1.c1)<(rt1.c0)), (NOT (rt1.c2)))));
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c0 IN ())) NOT NULL)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((rt1.c0 IN ())) NOT NULL)))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c0 IN ())) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))>>((+ (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))>>((+ (vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))>>((+ (vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((GROUP_CONCAT(COUNT(*))) IS TRUE) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (((GROUP_CONCAT(COUNT(*))) IS TRUE))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((((GROUP_CONCAT(COUNT(*))) IS TRUE)) ISNULL);
SELECT ALL * FROM rt1 INNER JOIN vt1 ON ((rt1.c0) BETWEEN (NULLIF(DISTINCT rt1.c0, rt1.c1)) AND (((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c0))));
SELECT * FROM rt1 INNER JOIN vt1 ON ((rt1.c0) BETWEEN (NULLIF(DISTINCT rt1.c0, rt1.c1)) AND (((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c0)))) WHERE (((((rt1.c2)&(rt1.c1))) NOT BETWEEN ((((0Xffffffffd53f90e5))<=((rt1.c2)))) AND ((rt1.c1 IN (rt1.c2, rt1.c2))))) UNION ALL SELECT ALL * FROM rt1 INNER JOIN vt1 ON ((rt1.c0) BETWEEN (NULLIF(DISTINCT rt1.c0, rt1.c1)) AND (((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c0)))) WHERE ((NOT (((((rt1.c2)&(rt1.c1))) NOT BETWEEN ((((0Xffffffffd53f90e5))<=((rt1.c2)))) AND ((rt1.c1 IN (rt1.c2, rt1.c2))))))) UNION ALL SELECT * FROM rt1 INNER JOIN vt1 ON ((rt1.c0) BETWEEN (NULLIF(DISTINCT rt1.c0, rt1.c1)) AND (((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c0)))) WHERE (((((((rt1.c2)&(rt1.c1))) NOT BETWEEN ((((0xffffffffd53f90e5))<=((rt1.c2)))) AND ((rt1.c1 IN (rt1.c2, rt1.c2))))) ISNULL));
SELECT ALL * FROM rt1 INNER JOIN vt1 ON ((rt1.c0) BETWEEN (NULLIF(DISTINCT rt1.c0, rt1.c1)) AND (((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c0))));
SELECT DISTINCT rt1.c1, rt1.c2, vt1.c0 FROM rt1, vt1;
SELECT DISTINCT rt1.c1, rt1.c2, vt1.c0 FROM rt1, vt1 WHERE (((CAST(rt1.c2 AS NUMERIC)) NOT BETWEEN ((rt1.c2 IN ())) AND (vt1.c0 COLLATE NOCASE))) UNION SELECT DISTINCT rt1.c1, rt1.c2, vt1.c0 FROM rt1, vt1 WHERE ((NOT (((CAST(rt1.c2 AS NUMERIC)) NOT BETWEEN ((rt1.c2 IN ())) AND (vt1.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT rt1.c1, rt1.c2, vt1.c0 FROM rt1, vt1 WHERE (((((CAST(rt1.c2 AS NUMERIC)) NOT BETWEEN ((rt1.c2 IN ())) AND (vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, vt1.c0 FROM rt1, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), (vt1.c0 IN ()), (~ (vt1.c0)))) AND (((vt1.c0 IN ()), 1457360645, json_remove(vt1.c0, vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), (vt1.c0 IN ()), (~ (vt1.c0)))) AND (((vt1.c0 IN ()), 1457360645, json_remove(vt1.c0, vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), (vt1.c0 IN ()), (~ (vt1.c0)))) AND (((vt1.c0 IN ()), 1457360645, json_remove(vt1.c0, vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING COUNT(((rt1.c1) NOTNULL)) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (COUNT(((rt1.c1) NOTNULL)))) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((COUNT(((rt1.c1) NOTNULL))) ISNULL);
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING COUNT(((rt1.c1) NOTNULL)) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (COUNT(((rt1.c1) NOTNULL)))) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((COUNT(((rt1.c1) NOTNULL))) ISNULL);
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT MIN(TYPEOF(CAST(vt1.c0 AS NUMERIC))) FROM vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))%(vt1.c0)) DESC  NULLS FIRST;
SELECT ALL rt1.c0 FROM rt1;
SELECT ALL rt1.c0 FROM rt1 WHERE ('-734666387') UNION ALL SELECT ALL rt1.c0 FROM rt1 WHERE ((NOT ('-734666387'))) UNION ALL SELECT ALL rt1.c0 FROM rt1 WHERE ((('-734666387') ISNULL));
SELECT ALL rt1.c0 FROM rt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0) NOTNULL) COLLATE BINARY) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) NOTNULL) COLLATE BINARY))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOTNULL) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0, rt1.c2, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c2, rt1.c0;
SELECT ALL vt1.c0, rt1.c2, rt1.c0 FROM rt1, vt1 WHERE (((((((rt1.c0)AND(rt1.c1)))AND(vt1.c0)))<=(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c0 END))) GROUP BY vt1.c0, rt1.c2, rt1.c0 UNION SELECT ALL vt1.c0, rt1.c2, rt1.c0 FROM rt1, vt1 WHERE ((NOT (((((((rt1.c0)AND(rt1.c1)))AND(vt1.c0)))<=(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c0 END))))) GROUP BY vt1.c0, rt1.c2, rt1.c0 UNION SELECT vt1.c0, rt1.c2, rt1.c0 FROM rt1, vt1 WHERE (((((((((rt1.c0)AND(rt1.c1)))AND(vt1.c0)))<=(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c0 END))) ISNULL)) GROUP BY vt1.c0, rt1.c2, rt1.c0;
SELECT vt1.c0, rt1.c2, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c2, rt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST(AVG(COUNT(*)) AS TEXT) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(AVG(COUNT(*)) AS TEXT))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST(AVG(COUNT(*)) AS TEXT)) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (((((((((((rt1.c0) BETWEEN ('') AND (rt1.c2)))AND((rt1.c1 IN (rt1.c2, rt1.c1)))))OR((rt1.c1 IN ()))))OR(((rt1.c1)>=(rt1.c2)))))OR(CAST(rt1.c2 AS TEXT)))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((((((((((rt1.c0) BETWEEN ('') AND (rt1.c2)))AND((rt1.c1 IN (rt1.c2, rt1.c1)))))OR((rt1.c1 IN ()))))OR(((rt1.c1)>=(rt1.c2)))))OR(CAST(rt1.c2 AS TEXT)))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((((((((((rt1.c0) BETWEEN ('') AND (rt1.c2)))AND((rt1.c1 IN (rt1.c2, rt1.c1)))))OR((rt1.c1 IN ()))))OR(((rt1.c1)>=(rt1.c2)))))OR(CAST(rt1.c2 AS TEXT)))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE ((((((vt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))))>=(((- (vt1.c0)))))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT ((((((vt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))))>=(((- (vt1.c0)))))))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((((((((vt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))))>=(((- (vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE WHEN vt1.c0 THEN x'6150' ELSE vt1.c0 END COLLATE BINARY) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN vt1.c0 THEN x'6150' ELSE vt1.c0 END COLLATE BINARY))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN x'6150' ELSE vt1.c0 END COLLATE BINARY) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM((vt1.c0 IN ())) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM((vt1.c0 IN ())))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM((vt1.c0 IN ()))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM((vt1.c0 IN ())) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM((vt1.c0 IN ())))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM((vt1.c0 IN ()))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM rt1, vt1;
SELECT ALL * FROM rt1, vt1 WHERE (x'') UNION ALL SELECT ALL * FROM rt1, vt1 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM rt1, vt1 WHERE (((x'') ISNULL));
SELECT ALL * FROM rt1, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)|(vt1.c0)))>(((vt1.c0)<=(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0)|(vt1.c0)))>(((vt1.c0)<=(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)|(vt1.c0)))>(((vt1.c0)<=(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1, vt1.c0 FROM rt1 NATURAL JOIN vt1 GROUP BY rt1.c2, rt1.c0, rt1.c1, vt1.c0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1, vt1.c0 FROM rt1 NATURAL JOIN vt1 WHERE (((json_insert(vt1.c0, rt1.c0, rt1.c0, rt1.c2, rt1.c1))<=(((rt1.c1) NOTNULL)))) GROUP BY rt1.c2, rt1.c0, rt1.c1, vt1.c0 UNION SELECT rt1.c2, rt1.c0, rt1.c1, vt1.c0 FROM rt1 NATURAL JOIN vt1 WHERE ((NOT (((json_insert(vt1.c0, rt1.c0, rt1.c0, rt1.c2, rt1.c1))<=(((rt1.c1) NOTNULL)))))) GROUP BY rt1.c2, rt1.c0, rt1.c1, vt1.c0 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c1, vt1.c0 FROM rt1 NATURAL JOIN vt1 WHERE (((((json_insert(vt1.c0, rt1.c0, rt1.c0, rt1.c2, rt1.c1))<=(((rt1.c1) NOTNULL)))) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c1, vt1.c0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1, vt1.c0 FROM rt1 NATURAL JOIN vt1 GROUP BY rt1.c2, rt1.c0, rt1.c1, vt1.c0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM vt1 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM vt1 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING MAX(((((((((GROUP_CONCAT(x''))AND(rt1.c2)))OR(vt1.c0)))AND(MIN(MIN(rt1.c1)))))OR(TOTAL(COUNT(*))))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM vt1 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT (MAX(((((((((GROUP_CONCAT(x''))AND(rt1.c2)))OR(vt1.c0)))AND(MIN(MIN(rt1.c1)))))OR(TOTAL(COUNT(*))))))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM vt1 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((MAX(((((((((GROUP_CONCAT(x''))AND(rt1.c2)))OR(vt1.c0)))AND(MIN(MIN(rt1.c1)))))OR(TOTAL(COUNT(*)))))) ISNULL);
SELECT ALL rt1.c0, vt1.c0, rt1.c2, rt1.c1 FROM rt1, vt1;
SELECT ALL rt1.c0, vt1.c0, rt1.c2, rt1.c1 FROM rt1, vt1 WHERE ((rt1.c1 COLLATE RTRIM IN (CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 END, ((vt1.c0)||(rt1.c2))))) UNION ALL SELECT ALL rt1.c0, vt1.c0, rt1.c2, rt1.c1 FROM rt1, vt1 WHERE ((NOT ((rt1.c1 COLLATE RTRIM IN (CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 END, ((vt1.c0)||(rt1.c2))))))) UNION ALL SELECT ALL rt1.c0, vt1.c0, rt1.c2, rt1.c1 FROM rt1, vt1 WHERE ((((rt1.c1 COLLATE RTRIM IN (CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 END, ((vt1.c0)||(rt1.c2))))) ISNULL));
SELECT ALL rt1.c0, vt1.c0, rt1.c2, rt1.c1 FROM rt1, vt1;
SELECT DISTINCT vt1.c0 FROM rt1, vt1;
SELECT DISTINCT vt1.c0 FROM rt1, vt1 WHERE ((+ (((rt1.c1)<=(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM rt1, vt1 WHERE ((NOT ((+ (((rt1.c1)<=(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM rt1, vt1 WHERE ((((+ (((rt1.c1)<=(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM rt1, vt1;
SELECT rt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM vt1, rt1 WHERE ((('1149187639') NOT BETWEEN ((((rt1.c0, rt1.c0, 'j<'))<((rt1.c0, x'', rt1.c0)))) AND (((0.9273120448776212)AND(rt1.c2))))) GROUP BY rt1.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c1 FROM vt1, rt1 WHERE ((NOT ((('1149187639') NOT BETWEEN ((((rt1.c0, rt1.c0, 'j<'))<((rt1.c0, x'', rt1.c0)))) AND (((0.9273120448776212)AND(rt1.c2))))))) GROUP BY rt1.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c1 FROM vt1, rt1 WHERE ((((('1149187639') NOT BETWEEN ((((rt1.c0, rt1.c0, 'j<'))<((rt1.c0, x'', rt1.c0)))) AND (((0.9273120448776212)AND(rt1.c2))))) ISNULL)) GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST(CAST(MAX(MIN('0.9853763117076769')) AS NUMERIC) AS TEXT) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(CAST(MAX(MIN('0.9853763117076769')) AS NUMERIC) AS TEXT))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST(CAST(MAX(MIN('0.9853763117076769')) AS NUMERIC) AS TEXT)) ISNULL);
SELECT ALL MAX(((((rt1.c1)OR(CAST(rt1.c1 AS REAL))))AND(TRIM(DISTINCT '')))) FROM rt1, vt1 ORDER BY (((vt1.c0) IS TRUE) IN ()) DESC  NULLS FIRST;
SELECT * FROM rt1, vt1;
SELECT ALL * FROM rt1, vt1 WHERE (rt1.c1) UNION ALL SELECT * FROM rt1, vt1 WHERE ((NOT (rt1.c1))) UNION ALL SELECT ALL * FROM rt1, vt1 WHERE (((rt1.c1) ISNULL));
SELECT * FROM rt1, vt1;
SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1 WHERE (((0Xfffffffffaf8e94a)+(((((rt1.c2)AND(rt1.c1)))AND(rt1.c2))))) UNION SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (((0xfffffffffaf8e94a)+(((((rt1.c2)AND(rt1.c1)))AND(rt1.c2))))))) UNION SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1 WHERE (((((0Xfffffffffaf8e94a)+(((((rt1.c2)AND(rt1.c1)))AND(rt1.c2))))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE (NULL) GROUP BY rt1.c2, rt1.c1 UNION SELECT rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (NULL))) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE (((NULL) ISNULL)) GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c1, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c2 HAVING MAX(COUNT(SUM(rt1.c0))) UNION ALL SELECT rt1.c1, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c2 HAVING (NOT (MAX(COUNT(SUM(rt1.c0))))) UNION ALL SELECT rt1.c1, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c2 HAVING ((MAX(COUNT(SUM(rt1.c0)))) ISNULL);
SELECT ALL rt1.c1 FROM rt1;
SELECT ALL rt1.c1 FROM rt1 WHERE ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)) IN ())) UNION ALL SELECT ALL rt1.c1 FROM rt1 WHERE ((NOT ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)) IN ())))) UNION ALL SELECT rt1.c1 FROM rt1 WHERE ((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)) IN ())) ISNULL));
SELECT ALL rt1.c1 FROM rt1;
SELECT DISTINCT vt1.c0 FROM rt1, vt1;
SELECT DISTINCT vt1.c0 FROM rt1, vt1 WHERE (((((~ (rt1.c2)), IFNULL('-717254427', rt1.c2), rt1.c1))<(((NOT (rt1.c1)), (((vt1.c0))<=((rt1.c2))), UNLIKELY(rt1.c2))))) UNION SELECT DISTINCT vt1.c0 FROM rt1, vt1 WHERE ((NOT (((((~ (rt1.c2)), IFNULL('-717254427', rt1.c2), rt1.c1))<(((NOT (rt1.c1)), (((vt1.c0))<=((rt1.c2))), UNLIKELY(rt1.c2))))))) UNION SELECT DISTINCT vt1.c0 FROM rt1, vt1 WHERE (((((((~ (rt1.c2)), IFNULL('-717254427', rt1.c2), rt1.c1))<(((NOT (rt1.c1)), (((vt1.c0))<=((rt1.c2))), UNLIKELY(rt1.c2))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM rt1, vt1;
SELECT ALL vt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt1.c2;
SELECT ALL vt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1 WHERE (NULL) GROUP BY vt1.c0, rt1.c1, rt1.c2 UNION SELECT vt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1 WHERE ((NOT (NULL))) GROUP BY vt1.c0, rt1.c1, rt1.c2 UNION SELECT vt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1 WHERE (((NULL) ISNULL)) GROUP BY vt1.c0, rt1.c1, rt1.c2;
SELECT ALL vt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt1.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(vt1.c0)) BETWEEN (load_extension(vt1.c0)) AND (MAX(COUNT(*)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((GROUP_CONCAT(vt1.c0)) BETWEEN (load_extension(vt1.c0)) AND (MAX(COUNT(*)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((GROUP_CONCAT(vt1.c0)) BETWEEN (load_extension(vt1.c0)) AND (MAX(COUNT(*))))) ISNULL);
SELECT ALL rt1.c1 FROM rt1;
SELECT ALL rt1.c1 FROM rt1 WHERE (((CAST(rt1.c1 AS TEXT))||((rt1.c0 IN ())))) UNION ALL SELECT rt1.c1 FROM rt1 WHERE ((NOT (((CAST(rt1.c1 AS TEXT))||((rt1.c0 IN ())))))) UNION ALL SELECT rt1.c1 FROM rt1 WHERE (((((CAST(rt1.c1 AS TEXT))||((rt1.c0 IN ())))) ISNULL));
SELECT ALL rt1.c1 FROM rt1;
SELECT DISTINCT * FROM vt1 INNER JOIN rt1 ON ((((vt1.c0)!=(rt1.c2))) IS TRUE);
SELECT DISTINCT * FROM vt1 INNER JOIN rt1 ON ((((vt1.c0)!=(rt1.c2))) IS TRUE) WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1 INNER JOIN rt1 ON ((((vt1.c0)<>(rt1.c2))) IS TRUE) WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN rt1 ON ((((vt1.c0)<>(rt1.c2))) IS TRUE) WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN rt1 ON ((((vt1.c0)!=(rt1.c2))) IS TRUE);
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 WHERE (((((rt1.c0) NOT BETWEEN ('-421959150') AND (NULL)))-(CASE rt1.c1  WHEN x'3a91' THEN rt1.c0 WHEN rt1.c1 THEN -2.095443513E9 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END))) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (((((rt1.c0) NOT BETWEEN ('-421959150') AND (NULL)))-(CASE rt1.c1  WHEN x'3a91' THEN rt1.c0 WHEN rt1.c1 THEN -2.095443513E9 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END))))) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE (((((((rt1.c0) NOT BETWEEN ('-421959150') AND (NULL)))-(CASE rt1.c1  WHEN x'3a91' THEN rt1.c0 WHEN rt1.c1 THEN -2.095443513E9 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END))) ISNULL)) GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((COUNT(rt1.c0)) BETWEEN (((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c1))) AND (((SUM(rt1.c2))OR(SUM(AVG(COUNT(rt1.c1))))))) UNION ALL SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (((COUNT(rt1.c0)) BETWEEN (((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c1))) AND (((SUM(rt1.c2))OR(SUM(AVG(COUNT(rt1.c1))))))))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((((COUNT(rt1.c0)) BETWEEN (((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c1))) AND (((SUM(rt1.c2))OR(SUM(AVG(COUNT(rt1.c1)))))))) ISNULL);
SELECT ALL vt1.c0, rt1.c1, rt1.c0 FROM rt1, vt1;
SELECT vt1.c0, rt1.c1, rt1.c0 FROM rt1, vt1 WHERE ((((rt1.c0)) NOT BETWEEN ((((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)))) AND ((((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))) UNION ALL SELECT ALL vt1.c0, rt1.c1, rt1.c0 FROM rt1, vt1 WHERE ((NOT ((((rt1.c0)) NOT BETWEEN ((((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)))) AND ((((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))))) UNION ALL SELECT vt1.c0, rt1.c1, rt1.c0 FROM rt1, vt1 WHERE ((((((rt1.c0)) NOT BETWEEN ((((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)))) AND ((((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))) ISNULL));
SELECT ALL vt1.c0, rt1.c1, rt1.c0 FROM rt1, vt1;
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt1 ON ((((rt1.c1)<(rt1.c0))) NOT BETWEEN ((('\nF藩')<>(rt1.c2))) AND (((rt1.c2)>>(vt1.c0))));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt1 ON ((((rt1.c1)<(rt1.c0))) NOT BETWEEN ((('\nF藩')!=(rt1.c2))) AND (((rt1.c2)>>(vt1.c0)))) WHERE ((((vt1.c0)>>(rt1.c2)) IN ())) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt1 ON ((((rt1.c1)<(rt1.c0))) NOT BETWEEN ((('\nF藩')!=(rt1.c2))) AND (((rt1.c2)>>(vt1.c0)))) WHERE ((NOT ((((vt1.c0)>>(rt1.c2)) IN ())))) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt1 ON ((((rt1.c1)<(rt1.c0))) NOT BETWEEN ((('\nF藩')<>(rt1.c2))) AND (((rt1.c2)>>(vt1.c0)))) WHERE ((((((vt1.c0)>>(rt1.c2)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt1 ON ((((rt1.c1)<(rt1.c0))) NOT BETWEEN ((('\nF藩')<>(rt1.c2))) AND (((rt1.c2)>>(vt1.c0))));
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (rt1.c2) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (rt1.c2))) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((rt1.c2) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM((+ (TOTAL(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM((+ (TOTAL(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM((+ (TOTAL(vt1.c0))))) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE ((CAST(rt1.c1 AS INTEGER) IN ())) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT ((CAST(rt1.c1 AS INTEGER) IN ())))) UNION ALL SELECT * FROM rt1 WHERE ((((CAST(rt1.c1 AS INTEGER) IN ())) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt1.c0 FROM rt1 FULL OUTER JOIN vt1 ON ((((+ (rt1.c0))))<(((rt1.c0 IN ()))));
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt1.c0 FROM rt1 FULL OUTER JOIN vt1 ON ((((+ (rt1.c0))))<(((rt1.c0 IN ())))) WHERE ((((rt1.c0) IS TRUE) IN (((rt1.c2) ISNULL), NULL))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt1.c0 FROM rt1 FULL OUTER JOIN vt1 ON ((((+ (rt1.c0))))<(((rt1.c0 IN ())))) WHERE ((NOT ((((rt1.c0) IS TRUE) IN (((rt1.c2) ISNULL), NULL))))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt1.c0 FROM rt1 FULL OUTER JOIN vt1 ON ((((+ (rt1.c0))))<(((rt1.c0 IN ())))) WHERE ((((((rt1.c0) IS TRUE) IN (((rt1.c2) ISNULL), NULL))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt1.c0 FROM rt1 FULL OUTER JOIN vt1 ON ((((+ (rt1.c0))))<(((rt1.c0 IN ()))));
SELECT rt1.c0 FROM vt1, rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM vt1, rt1 WHERE (((rt1.c2) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END) AND (UNICODE(vt1.c0)))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM vt1, rt1 WHERE ((NOT (((rt1.c2) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END) AND (UNICODE(vt1.c0)))))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM vt1, rt1 WHERE (((((rt1.c2) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END) AND (UNICODE(vt1.c0)))) ISNULL)) GROUP BY rt1.c0;
SELECT rt1.c0 FROM vt1, rt1 GROUP BY rt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(MIN(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(MIN(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(MIN(vt1.c0))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (vt1.c0) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '' THEN vt1.c0 ELSE vt1.c0 END))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (vt1.c0) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '' THEN vt1.c0 ELSE vt1.c0 END))))) UNION ALL SELECT * FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (vt1.c0) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '' THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1, rt1;
SELECT DISTINCT * FROM vt1, rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((rt1.c2 COLLATE BINARY)) AND ((rt1.c1 COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE ((NOT ((((rt1.c2)) NOT BETWEEN ((rt1.c2 COLLATE BINARY)) AND ((rt1.c1 COLLATE RTRIM)))))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c2 COLLATE BINARY)) AND ((rt1.c1 COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT * FROM vt1, rt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND ('z*1HKunixepoch7'))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND ('z*1HKunixepoch7'))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND ('z*1HKunixepoch7'))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING MIN((rt1.c0 IN (TOTAL(COUNT(SUM(TOTAL(AVG(COUNT(x'')))))), rt1.c0))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (MIN((rt1.c0 IN (TOTAL(COUNT(SUM(TOTAL(AVG(COUNT(x'')))))), rt1.c0))))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((MIN((rt1.c0 IN (TOTAL(COUNT(SUM(TOTAL(AVG(COUNT(x'')))))), rt1.c0)))) ISNULL);
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (CASE WHEN ((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c0)) THEN CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END WHEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)) THEN rt1.c0 COLLATE BINARY WHEN (rt1.c1 IN (rt1.c0)) THEN CASE WHEN x'bed0' THEN rt1.c2 END ELSE UPPER(rt1.c2) END) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (CASE WHEN ((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c0)) THEN CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END WHEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)) THEN rt1.c0 COLLATE BINARY WHEN (rt1.c1 IN (rt1.c0)) THEN CASE WHEN x'bed0' THEN rt1.c2 END ELSE UPPER(rt1.c2) END))) UNION ALL SELECT * FROM rt1 WHERE (((CASE WHEN ((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c0)) THEN CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END WHEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)) THEN rt1.c0 COLLATE BINARY WHEN (rt1.c1 IN (rt1.c0)) THEN CASE WHEN x'bed0' THEN rt1.c2 END ELSE UPPER(rt1.c2) END) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CASE WHEN ((vt1.c0)GLOB(1.424502942E9)) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CASE WHEN ((vt1.c0)GLOB(1.424502942E9)) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CASE WHEN ((vt1.c0)GLOB(1.424502942E9)) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1 WHERE (CASE UNLIKELY(rt1.c0)  WHEN CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END THEN (((rt1.c1)) BETWEEN ((NULL)) AND ((vt1.c0))) ELSE NULL END) GROUP BY rt1.c0, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1 WHERE ((NOT (CASE UNLIKELY(rt1.c0)  WHEN CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END THEN (((rt1.c1)) BETWEEN ((NULL)) AND ((vt1.c0))) ELSE NULL END))) GROUP BY rt1.c0, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1 WHERE (((CASE UNLIKELY(rt1.c0)  WHEN CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END THEN (((rt1.c1)) BETWEEN ((NULL)) AND ((vt1.c0))) ELSE NULL END) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (GROUP_CONCAT(vt1.c0) IN ()) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((GROUP_CONCAT(vt1.c0) IN ()))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((GROUP_CONCAT(vt1.c0) IN ())) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (GROUP_CONCAT(vt1.c0) IN ()) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((GROUP_CONCAT(vt1.c0) IN ()))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((GROUP_CONCAT(vt1.c0) IN ())) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((((vt1.c0)|(vt1.c0)))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((((vt1.c0)|(vt1.c0)))))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((((vt1.c0)|(vt1.c0)))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT rt1.c0, rt1.c1, vt1.c0, rt1.c2 FROM rt1 NATURAL JOIN vt1;
SELECT DISTINCT rt1.c0, rt1.c1, vt1.c0, rt1.c2 FROM rt1 NATURAL JOIN vt1 WHERE ((- (((((vt1.c0)AND(rt1.c0)))AND(rt1.c1))))) UNION SELECT DISTINCT rt1.c0, rt1.c1, vt1.c0, rt1.c2 FROM rt1 NATURAL JOIN vt1 WHERE ((NOT ((- (((((vt1.c0)AND(rt1.c0)))AND(rt1.c1))))))) UNION SELECT DISTINCT rt1.c0, rt1.c1, vt1.c0, rt1.c2 FROM rt1 NATURAL JOIN vt1 WHERE ((((- (((((vt1.c0)AND(rt1.c0)))AND(rt1.c1))))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1, vt1.c0, rt1.c2 FROM rt1 NATURAL JOIN vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt1.c0)|(vt1.c0))) AND (ABS(vt1.c0)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt1.c0)|(vt1.c0))) AND (ABS(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt1.c0)|(vt1.c0))) AND (ABS(vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST(AVG(COUNT(vt1.c0)) AS TEXT) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(AVG(COUNT(vt1.c0)) AS TEXT))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST(AVG(COUNT(vt1.c0)) AS TEXT)) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)>=((+ (vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE RTRIM)>=((+ (vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((vt1.c0 COLLATE RTRIM)>=((+ (vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1 INNER JOIN rt1 ON LIKELIHOOD(DISTINCT rt1.c2, 0.4917620684890144);
SELECT DISTINCT * FROM vt1 INNER JOIN rt1 ON LIKELIHOOD(DISTINCT rt1.c2, 0.4917620684890144) WHERE (((((vt1.c0)||(rt1.c1))) BETWEEN ((rt1.c0 IN ())) AND (((rt1.c1) BETWEEN (rt1.c0) AND (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN rt1 ON LIKELIHOOD(DISTINCT rt1.c2, 0.4917620684890144) WHERE ((NOT (((((vt1.c0)||(rt1.c1))) BETWEEN ((rt1.c0 IN ())) AND (((rt1.c1) BETWEEN (rt1.c0) AND (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN rt1 ON LIKELIHOOD(DISTINCT rt1.c2, 0.4917620684890144) WHERE (((((((vt1.c0)||(rt1.c1))) BETWEEN ((rt1.c0 IN ())) AND (((rt1.c1) BETWEEN (rt1.c0) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN rt1 ON LIKELIHOOD(DISTINCT rt1.c2, 0.4917620684890144);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS INTEGER)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST((vt1.c0 IN ()) AS INTEGER)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST((vt1.c0 IN ()) AS INTEGER)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt1.c1, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c2 HAVING SUM(MIN(rt1.c0)) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c2 HAVING (NOT (SUM(MIN(rt1.c0)))) UNION ALL SELECT rt1.c1, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c2 HAVING ((SUM(MIN(rt1.c0))) ISNULL);
SELECT ALL rt1.c2, rt1.c0 FROM rt1;
SELECT rt1.c2, rt1.c0 FROM rt1 WHERE (0xffffffffad4291a7) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (0Xffffffffad4291a7))) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1 WHERE (((0Xffffffffad4291a7) ISNULL));
SELECT ALL rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((x'32ac' IN ((vt1.c0 IN ()), ((vt1.c0)&(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((x'32ac' IN ((vt1.c0 IN ()), ((vt1.c0)&(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((x'32ac' IN ((vt1.c0 IN ()), ((vt1.c0)&(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((((CAST(rt1.c0 AS REAL)))<((TOTAL_CHANGES())))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT ((((CAST(rt1.c0 AS REAL)))<((TOTAL_CHANGES())))))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((((((CAST(rt1.c0 AS REAL)))<((TOTAL_CHANGES())))) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, vt1.c0, rt1.c0 FROM vt1 INNER JOIN rt1 ON ((UNLIKELY(DISTINCT vt1.c0)) NOTNULL) GROUP BY rt1.c2, rt1.c1, vt1.c0, rt1.c0;
SELECT rt1.c2, rt1.c1, vt1.c0, rt1.c0 FROM vt1 INNER JOIN rt1 ON ((UNLIKELY(DISTINCT vt1.c0)) NOTNULL) GROUP BY rt1.c2, rt1.c1, vt1.c0, rt1.c0 HAVING MIN(MAX(vt1.c0)) UNION ALL SELECT rt1.c2, rt1.c1, vt1.c0, rt1.c0 FROM vt1 INNER JOIN rt1 ON ((UNLIKELY(DISTINCT vt1.c0)) NOTNULL) GROUP BY rt1.c2, rt1.c1, vt1.c0, rt1.c0 HAVING (NOT (MIN(MAX(vt1.c0)))) UNION ALL SELECT ALL rt1.c2, rt1.c1, vt1.c0, rt1.c0 FROM vt1 INNER JOIN rt1 ON ((UNLIKELY(DISTINCT vt1.c0)) NOTNULL) GROUP BY rt1.c2, rt1.c1, vt1.c0, rt1.c0 HAVING ((MIN(MAX(vt1.c0))) ISNULL);
SELECT TOTAL((((((rt1.c0)) BETWEEN ((rt1.c1)) AND (('-266827029'))))AND(((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c0))))) FROM vt1, rt1 ORDER BY CAST(COALESCE(rt1.c1, vt1.c0) AS NUMERIC) DESC;
SELECT ALL vt1.c0, rt1.c0 FROM rt1 CROSS JOIN vt1 ON ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) COLLATE RTRIM;
SELECT vt1.c0, rt1.c0 FROM rt1 CROSS JOIN vt1 ON ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) COLLATE RTRIM WHERE (((rt1.c0) IS FALSE)) UNION ALL SELECT vt1.c0, rt1.c0 FROM rt1 CROSS JOIN vt1 ON ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) COLLATE RTRIM WHERE ((NOT (((rt1.c0) IS FALSE)))) UNION ALL SELECT vt1.c0, rt1.c0 FROM rt1 CROSS JOIN vt1 ON ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) COLLATE RTRIM WHERE (((((rt1.c0) IS FALSE)) ISNULL));
SELECT ALL vt1.c0, rt1.c0 FROM rt1 CROSS JOIN vt1 ON ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) COLLATE RTRIM;
SELECT DISTINCT * FROM vt1, rt1;
SELECT DISTINCT * FROM vt1, rt1 WHERE (json_remove((+ (rt1.c1)), ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE ((NOT (json_remove((+ (rt1.c1)), ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE (((json_remove((+ (rt1.c1)), ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))) ISNULL));
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))>(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))>(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))>(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt1.c2 FROM rt1, vt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1, vt1 GROUP BY rt1.c2 HAVING (COUNT(vt1.c0) IN ()) COLLATE NOCASE UNION ALL SELECT ALL rt1.c2 FROM rt1, vt1 GROUP BY rt1.c2 HAVING (NOT ((COUNT(vt1.c0) IN ()) COLLATE NOCASE)) UNION ALL SELECT ALL rt1.c2 FROM rt1, vt1 GROUP BY rt1.c2 HAVING (((COUNT(vt1.c0) IN ()) COLLATE NOCASE) ISNULL);
SELECT rt1.c2 FROM rt1, vt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1, vt1 GROUP BY rt1.c2 HAVING (COUNT(vt1.c0) IN ()) COLLATE NOCASE UNION ALL SELECT ALL rt1.c2 FROM rt1, vt1 GROUP BY rt1.c2 HAVING (NOT ((COUNT(vt1.c0) IN ()) COLLATE NOCASE)) UNION ALL SELECT ALL rt1.c2 FROM rt1, vt1 GROUP BY rt1.c2 HAVING (((COUNT(vt1.c0) IN ()) COLLATE NOCASE) ISNULL);
SELECT rt1.c2 FROM rt1, vt1 GROUP BY rt1.c2;
SELECT ALL MAX(((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) BETWEEN (((vt1.c0)GLOB(vt1.c0))) AND (vt1.c0))) FROM vt1 ORDER BY (NOT (((vt1.c0) ISNULL))) ASC;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((CAST(vt1.c0 AS TEXT), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)||(vt1.c0))))>((CAST(vt1.c0 AS NUMERIC), x'', vt1.c0 COLLATE RTRIM)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((CAST(vt1.c0 AS TEXT), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)||(vt1.c0))))>((CAST(vt1.c0 AS NUMERIC), x'', vt1.c0 COLLATE RTRIM)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((CAST(vt1.c0 AS TEXT), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)||(vt1.c0))))>((CAST(vt1.c0 AS NUMERIC), x'', vt1.c0 COLLATE RTRIM)))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1 NATURAL JOIN rt1;
SELECT DISTINCT * FROM vt1 NATURAL JOIN rt1 WHERE ((NOT (x'' COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1 NATURAL JOIN rt1 WHERE ((NOT ((NOT (x'' COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt1 NATURAL JOIN rt1 WHERE ((((NOT (x'' COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt1 NATURAL JOIN rt1;
SELECT rt1.c1, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c0;
SELECT ALL rt1.c1, vt1.c0 FROM rt1, vt1 WHERE ((((- (rt1.c1))) NOT NULL)) GROUP BY rt1.c1, vt1.c0 UNION SELECT ALL rt1.c1, vt1.c0 FROM rt1, vt1 WHERE ((NOT ((((- (rt1.c1))) NOT NULL)))) GROUP BY rt1.c1, vt1.c0 UNION SELECT rt1.c1, vt1.c0 FROM rt1, vt1 WHERE ((((((- (rt1.c1))) NOT NULL)) ISNULL)) GROUP BY rt1.c1, vt1.c0;
SELECT rt1.c1, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c0;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING MIN(CASE WHEN MAX(rt1.c1) THEN rt1.c2 ELSE rt1.c0 END) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (MIN(CASE WHEN MAX(rt1.c1) THEN rt1.c2 ELSE rt1.c0 END))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING ((MIN(CASE WHEN MAX(rt1.c1) THEN rt1.c2 ELSE rt1.c0 END)) ISNULL);
SELECT rt1.c1, vt1.c0 FROM vt1 INNER JOIN rt1 ON vt1.c0;
SELECT rt1.c1, vt1.c0 FROM vt1 INNER JOIN rt1 ON vt1.c0 WHERE (NULLIF(CASE WHEN vt1.c0 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN NULL THEN rt1.c2 ELSE rt1.c1 END, ((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c2)))) UNION ALL SELECT ALL rt1.c1, vt1.c0 FROM vt1 INNER JOIN rt1 ON vt1.c0 WHERE ((NOT (NULLIF(CASE WHEN vt1.c0 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN NULL THEN rt1.c2 ELSE rt1.c1 END, ((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c2)))))) UNION ALL SELECT ALL rt1.c1, vt1.c0 FROM vt1 INNER JOIN rt1 ON vt1.c0 WHERE (((NULLIF(CASE WHEN vt1.c0 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN NULL THEN rt1.c2 ELSE rt1.c1 END, ((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c2)))) ISNULL));
SELECT rt1.c1, vt1.c0 FROM vt1 INNER JOIN rt1 ON vt1.c0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c1)<<(rt1.c1))))==((CAST(1.613935691E9 AS NUMERIC))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((((rt1.c1)<<(rt1.c1))))==((CAST(1.613935691E9 AS NUMERIC))))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((((rt1.c1)<<(rt1.c1))))=((CAST(1.613935691E9 AS NUMERIC))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM vt1, rt1 WHERE ((CAST(rt1.c0 AS BLOB) IN ())) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM vt1, rt1 WHERE ((NOT ((CAST(rt1.c0 AS BLOB) IN ())))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c0 FROM vt1, rt1 WHERE ((((CAST(rt1.c0 AS BLOB) IN ())) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL vt1.c0, rt1.c2, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c2, rt1.c0;
SELECT vt1.c0, rt1.c2, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c2, rt1.c0 HAVING ((CAST(rt1.c1 AS NUMERIC))=(((rt1.c1) BETWEEN (vt1.c0) AND (rt1.c2)))) UNION ALL SELECT ALL vt1.c0, rt1.c2, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c2, rt1.c0 HAVING (NOT (((CAST(rt1.c1 AS NUMERIC))=(((rt1.c1) BETWEEN (vt1.c0) AND (rt1.c2)))))) UNION ALL SELECT vt1.c0, rt1.c2, rt1.c0 FROM vt1, rt1 NOT INDEXED GROUP BY vt1.c0, rt1.c2, rt1.c0 HAVING ((((CAST(rt1.c1 AS NUMERIC))==(((rt1.c1) BETWEEN (vt1.c0) AND (rt1.c2))))) ISNULL);
SELECT ALL vt1.c0, rt1.c2, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c2, rt1.c0;
SELECT vt1.c0, rt1.c2, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c2, rt1.c0 HAVING ((CAST(rt1.c1 AS NUMERIC))=(((rt1.c1) BETWEEN (vt1.c0) AND (rt1.c2)))) UNION ALL SELECT ALL vt1.c0, rt1.c2, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c2, rt1.c0 HAVING (NOT (((CAST(rt1.c1 AS NUMERIC))=(((rt1.c1) BETWEEN (vt1.c0) AND (rt1.c2)))))) UNION ALL SELECT vt1.c0, rt1.c2, rt1.c0 FROM vt1, rt1 NOT INDEXED GROUP BY vt1.c0, rt1.c2, rt1.c0 HAVING ((((CAST(rt1.c1 AS NUMERIC))==(((rt1.c1) BETWEEN (vt1.c0) AND (rt1.c2))))) ISNULL);
SELECT ALL vt1.c0, rt1.c2, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c2, rt1.c0;
SELECT ALL MIN(DATETIME((~ ('&0')), (((vt1.c0))>((vt1.c0))), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) FROM vt1;
SELECT * FROM rt1, vt1;
SELECT * FROM rt1, vt1 WHERE (CAST((rt1.c0 IN ()) AS BLOB)) UNION ALL SELECT * FROM rt1, vt1 WHERE ((NOT (CAST((rt1.c0 IN ()) AS BLOB)))) UNION ALL SELECT ALL * FROM rt1, vt1 WHERE (((CAST((rt1.c0 IN ()) AS BLOB)) ISNULL));
SELECT * FROM rt1, vt1;
SELECT DISTINCT rt1.c0 FROM vt1, rt1;
SELECT DISTINCT rt1.c0 FROM vt1, rt1 WHERE ((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2))))==((((rt1.c2) IS TRUE))))) UNION SELECT DISTINCT rt1.c0 FROM vt1, rt1 WHERE ((NOT ((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2))))==((((rt1.c2) IS TRUE))))))) UNION SELECT DISTINCT rt1.c0 FROM vt1, rt1 WHERE ((((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2))))==((((rt1.c2) IS TRUE))))) ISNULL));
SELECT DISTINCT rt1.c0 FROM vt1, rt1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 WHERE ((((((rt1.c0)<(rt1.c1))))<(((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE ((NOT ((((((rt1.c0)<(rt1.c1))))<(((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE ((((((((rt1.c0)<(rt1.c1))))<(((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))))) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c2, rt1.c1, vt1.c0, rt1.c0 FROM vt1 CROSS JOIN rt1 ON (((((rt1.c2)GLOB(rt1.c2))))>=((((rt1.c1) IS TRUE)))) GROUP BY rt1.c2, rt1.c1, vt1.c0, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, vt1.c0, rt1.c0 FROM vt1 CROSS JOIN rt1 ON (((((rt1.c2)GLOB(rt1.c2))))>=((((rt1.c1) IS TRUE)))) GROUP BY rt1.c2, rt1.c1, vt1.c0, rt1.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT rt1.c2, rt1.c1, vt1.c0, rt1.c0 FROM vt1 CROSS JOIN rt1 ON (((((rt1.c2)GLOB(rt1.c2))))>=((((rt1.c1) IS TRUE)))) GROUP BY rt1.c2, rt1.c1, vt1.c0, rt1.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL rt1.c2, rt1.c1, vt1.c0, rt1.c0 FROM vt1 CROSS JOIN rt1 ON (((((rt1.c2)GLOB(rt1.c2))))>=((((rt1.c1) IS TRUE)))) GROUP BY rt1.c2, rt1.c1, vt1.c0, rt1.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE (((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 END)>=(NULL))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 END)>=(NULL))))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE (((((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 END)>=(NULL))) ISNULL));
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM vt1 LEFT OUTER JOIN rt1 ON rt1.c1;
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM vt1 LEFT OUTER JOIN rt1 ON rt1.c1 WHERE (CAST(((('')) BETWEEN ((rt1.c2)) AND ((vt1.c0))) AS INTEGER)) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM vt1 LEFT OUTER JOIN rt1 ON rt1.c1 WHERE ((NOT (CAST(((('')) BETWEEN ((rt1.c2)) AND ((vt1.c0))) AS INTEGER)))) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM vt1 LEFT OUTER JOIN rt1 ON rt1.c1 WHERE (((CAST(((('')) BETWEEN ((rt1.c2)) AND ((vt1.c0))) AS INTEGER)) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM vt1 LEFT OUTER JOIN rt1 ON rt1.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((0.8596684809342173)OR((- (vt1.c0)))))OR(vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((0.8596684809342173)OR((- (vt1.c0)))))OR(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((0.8596684809342173)OR((- (vt1.c0)))))OR(vt1.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0 HAVING GROUP_CONCAT(SUM(AVG(COUNT(TOTAL(AVG(rt1.c2)))))) UNION ALL SELECT ALL rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0 HAVING (NOT (GROUP_CONCAT(SUM(AVG(COUNT(TOTAL(AVG(rt1.c2)))))))) UNION ALL SELECT rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0 HAVING ((GROUP_CONCAT(SUM(AVG(COUNT(TOTAL(AVG(rt1.c2))))))) ISNULL);
SELECT vt1.c0, rt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1;
SELECT ALL vt1.c0, rt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1 WHERE ((((rt1.c2 IN (rt1.c1)))GLOB(((vt1.c0) BETWEEN (rt1.c0) AND (rt1.c2))))) UNION ALL SELECT ALL vt1.c0, rt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1 WHERE ((NOT ((((rt1.c2 IN (rt1.c1)))GLOB(((vt1.c0) BETWEEN (rt1.c0) AND (rt1.c2))))))) UNION ALL SELECT vt1.c0, rt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1 WHERE ((((((rt1.c2 IN (rt1.c1)))GLOB(((vt1.c0) BETWEEN (rt1.c0) AND (rt1.c2))))) ISNULL));
SELECT vt1.c0, rt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1;
SELECT DISTINCT * FROM rt1 NATURAL JOIN vt1;
SELECT DISTINCT * FROM rt1 NATURAL JOIN vt1 WHERE (CAST(rt1.c1 AS TEXT) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt1 NATURAL JOIN vt1 WHERE ((NOT (CAST(rt1.c1 AS TEXT) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt1 NATURAL JOIN vt1 WHERE (((CAST(rt1.c1 AS TEXT) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt1 NATURAL JOIN vt1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1, vt1 WHERE (CAST(NULLIF(DISTINCT vt1.c0, rt1.c0) AS TEXT)) GROUP BY rt1.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c1 FROM rt1, vt1 WHERE ((NOT (CAST(NULLIF(DISTINCT vt1.c0, rt1.c0) AS TEXT)))) GROUP BY rt1.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c1 FROM rt1, vt1 WHERE (((CAST(NULLIF(DISTINCT vt1.c0, rt1.c0) AS TEXT)) ISNULL)) GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0)<=(COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((vt1.c0)<=(COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0)<=(COUNT(*)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0)<=(COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((vt1.c0)<=(COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0)<=(COUNT(*)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1;
SELECT rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) IS TRUE)) UNION ALL SELECT rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 WHERE ((NOT (((CAST(vt1.c0 AS NUMERIC)) IS TRUE)))) UNION ALL SELECT ALL rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 WHERE (((((CAST(vt1.c0 AS NUMERIC)) IS TRUE)) ISNULL));
SELECT rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c0) IS TRUE))!=((((rt1.c0, rt1.c1, rt1.c0)) BETWEEN ((rt1.c2, rt1.c2, rt1.c2)) AND ((rt1.c0, rt1.c0, rt1.c2)))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((rt1.c0) IS TRUE))<>((((rt1.c0, rt1.c1, rt1.c0)) BETWEEN ((rt1.c2, rt1.c2, rt1.c2)) AND ((rt1.c0, rt1.c0, rt1.c2)))))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c0) IS TRUE))<>((((rt1.c0, rt1.c1, rt1.c0)) BETWEEN ((rt1.c2, rt1.c2, rt1.c2)) AND ((rt1.c0, rt1.c0, rt1.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0)OR(''))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)OR(''))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0)OR(''))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt1.c0, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c1 HAVING GROUP_CONCAT(MIN(vt1.c0)) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (GROUP_CONCAT(MIN(vt1.c0)))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c1 HAVING ((GROUP_CONCAT(MIN(vt1.c0))) ISNULL);
SELECT ALL SUM(CAST(((rt1.c0)<=(rt1.c1)) AS INTEGER)) FROM rt1, vt1;
SELECT vt1.c0, rt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON 0.4158441501350777;
SELECT ALL vt1.c0, rt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON 0.4158441501350777 WHERE ((((NULL IN ()))LIKE(HEX(rt1.c0)))) ORDER BY (~ ((0.0 IN ()))), ((rt1.c1 COLLATE BINARY)LIKE(((rt1.c2)<(vt1.c0))))  NULLS FIRST;
SELECT vt1.c0, rt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON 0.4158441501350777 WHERE ((NOT ((((NULL IN ()))LIKE(HEX(rt1.c0)))))) ORDER BY (~ ((0.0 IN ()))), ((rt1.c1 COLLATE BINARY)LIKE(((rt1.c2)<(vt1.c0))))  NULLS FIRST;
SELECT vt1.c0, rt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON 0.4158441501350777 WHERE ((((((NULL IN ()))LIKE(HEX(rt1.c0)))) ISNULL)) ORDER BY (~ ((0.0 IN ()))), ((rt1.c1 COLLATE BINARY)LIKE(((rt1.c2)<(vt1.c0))))  NULLS FIRST;
SELECT vt1.c0, rt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON 0.4158441501350777;
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c1 FROM rt1 WHERE (rt1.c0) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE ((NOT (rt1.c0))) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE (((rt1.c0) ISNULL));
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) IS TRUE)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) IS TRUE)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) IS TRUE)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt1.c2, vt1.c0, rt1.c1, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt1 ON (((rt1.c1)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))) AND (((((0xfffffffffa623384))=((rt1.c2)))))) GROUP BY rt1.c2, vt1.c0, rt1.c1, rt1.c0;
SELECT rt1.c2, vt1.c0, rt1.c1, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt1 ON (((rt1.c1)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))) AND (((((0Xfffffffffa623384))=((rt1.c2)))))) GROUP BY rt1.c2, vt1.c0, rt1.c1, rt1.c0 HAVING CASE ((rt1.c0) IS FALSE)  WHEN COUNT(rt1.c1) THEN MAX(MAX(rt1.c2)) WHEN COUNT(*) THEN AVG(COUNT(GROUP_CONCAT(rt1.c0))) WHEN rt1.c2 THEN TRIM(rt1.c0) END UNION ALL SELECT rt1.c2, vt1.c0, rt1.c1, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt1 ON (((rt1.c1)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))) AND (((((0xfffffffffa623384))==((rt1.c2)))))) GROUP BY rt1.c2, vt1.c0, rt1.c1, rt1.c0 HAVING (NOT (CASE ((rt1.c0) IS FALSE)  WHEN COUNT(rt1.c1) THEN MAX(MAX(rt1.c2)) WHEN COUNT(*) THEN AVG(COUNT(GROUP_CONCAT(rt1.c0))) WHEN rt1.c2 THEN TRIM(rt1.c0) END)) UNION ALL SELECT rt1.c2, vt1.c0, rt1.c1, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt1 ON (((rt1.c1)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))) AND (((((0Xfffffffffa623384))==((rt1.c2)))))) GROUP BY rt1.c2, vt1.c0, rt1.c1, rt1.c0 HAVING ((CASE ((rt1.c0) IS FALSE)  WHEN COUNT(rt1.c1) THEN MAX(MAX(rt1.c2)) WHEN COUNT(*) THEN AVG(COUNT(GROUP_CONCAT(rt1.c0))) WHEN rt1.c2 THEN TRIM(rt1.c0) END) ISNULL);
SELECT rt1.c2, rt1.c0 FROM rt1;
SELECT rt1.c2, rt1.c0 FROM rt1 WHERE (0X6aff49fe) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (0X6aff49fe))) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1 WHERE (((0X6aff49fe) ISNULL));
SELECT rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c1, vt1.c0, rt1.c0, rt1.c2 FROM vt1, rt1 NOT INDEXED;
SELECT DISTINCT rt1.c1, vt1.c0, rt1.c0, rt1.c2 FROM vt1, rt1 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT rt1.c1, vt1.c0, rt1.c0, rt1.c2 FROM vt1, rt1 WHERE ((NOT ((NOT (rt1.c1))))) UNION SELECT DISTINCT rt1.c1, vt1.c0, rt1.c0, rt1.c2 FROM vt1, rt1 WHERE ((((NOT (rt1.c1))) ISNULL));
SELECT DISTINCT rt1.c1, vt1.c0, rt1.c0, rt1.c2 FROM vt1, rt1 NOT INDEXED;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 WHERE (((((CAST(rt1.c2 AS BLOB))OR(((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)))))AND((((rt1.c2, rt1.c0, rt1.c0)) BETWEEN ((rt1.c2, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c1, rt1.c2)))))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT (((((CAST(rt1.c2 AS BLOB))OR(((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)))))AND((((rt1.c2, rt1.c0, rt1.c0)) BETWEEN ((rt1.c2, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c1, rt1.c2)))))))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE (((((((CAST(rt1.c2 AS BLOB))OR(((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)))))AND((((rt1.c2, rt1.c0, rt1.c0)) BETWEEN ((rt1.c2, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c1, rt1.c2)))))) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0 HAVING MIN(((MAX(SUM(COUNT(*))))<>(MIN(vt1.c0)))) UNION ALL SELECT rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0 HAVING (NOT (MIN(((MAX(SUM(COUNT(*))))<>(MIN(vt1.c0)))))) UNION ALL SELECT rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0 HAVING ((MIN(((MAX(SUM(COUNT(*))))!=(MIN(vt1.c0))))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS INTEGER)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST((vt1.c0 IN (vt1.c0)) AS INTEGER)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST((vt1.c0 IN (vt1.c0)) AS INTEGER)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (TOTAL_CHANGES()) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (TOTAL_CHANGES()))) UNION SELECT DISTINCT * FROM rt1 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE (HEX(DISTINCT rt1.c2) COLLATE NOCASE) GROUP BY rt1.c2, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (HEX(DISTINCT rt1.c2) COLLATE NOCASE))) GROUP BY rt1.c2, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE (((HEX(DISTINCT rt1.c2) COLLATE NOCASE) ISNULL)) GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING MIN(AVG(rt1.c0)) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING (NOT (MIN(AVG(rt1.c0)))) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING ((MIN(AVG(rt1.c0))) ISNULL);
SELECT ALL rt1.c0, vt1.c0, rt1.c1 FROM rt1, vt1;
SELECT ALL rt1.c0, vt1.c0, rt1.c1 FROM rt1, vt1 WHERE ((((vt1.c0)AND(rt1.c2)) IN ())) UNION ALL SELECT rt1.c0, vt1.c0, rt1.c1 FROM rt1, vt1 WHERE ((NOT ((((vt1.c0)AND(rt1.c2)) IN ())))) UNION ALL SELECT rt1.c0, vt1.c0, rt1.c1 FROM rt1, vt1 WHERE ((((((vt1.c0)AND(rt1.c2)) IN ())) ISNULL));
SELECT ALL rt1.c0, vt1.c0, rt1.c1 FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE (rtreenode(rt1.c2, ((rt1.c0)>=(vt1.c0)))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT (rtreenode(rt1.c2, ((rt1.c0)>=(vt1.c0)))))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE (((rtreenode(rt1.c2, ((rt1.c0)>=(vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 WHERE (rt1.c0) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE ((NOT (rt1.c0))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE (((rt1.c0) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c1 FROM rt1;
SELECT ALL rt1.c1 FROM rt1 WHERE ((((- (rt1.c2))) NOT BETWEEN (((rt1.c2)IS NOT(rt1.c2))) AND (CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 END))) UNION ALL SELECT ALL rt1.c1 FROM rt1 WHERE ((NOT ((((- (rt1.c2))) NOT BETWEEN (((rt1.c2)IS NOT(rt1.c2))) AND (CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 END))))) UNION ALL SELECT ALL rt1.c1 FROM rt1 WHERE ((((((- (rt1.c2))) NOT BETWEEN (((rt1.c2)IS NOT(rt1.c2))) AND (CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 END))) ISNULL));
SELECT ALL rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ('') UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (''))) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((('') ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (UNICODE(((((0.5772627634976129)AND('~')))AND(vt1.c0)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (UNICODE(((((0.5772627634976129)AND('~')))AND(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((UNICODE(((((0.5772627634976129)AND('~')))AND(vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt1.c0, vt1.c0, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c0, vt1.c0, rt1.c1;
SELECT ALL rt1.c0, vt1.c0, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c0, vt1.c0, rt1.c1 HAVING SUM(MAX(TOTAL(rt1.c0))) UNION ALL SELECT rt1.c0, vt1.c0, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c0, vt1.c0, rt1.c1 HAVING (NOT (SUM(MAX(TOTAL(rt1.c0))))) UNION ALL SELECT ALL rt1.c0, vt1.c0, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c0, vt1.c0, rt1.c1 HAVING ((SUM(MAX(TOTAL(rt1.c0)))) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE ((((rt1.c2, rt1.c0, rt1.c0)) NOT BETWEEN ((((rt1.c1) IS TRUE), rt1.c2, ((rt1.c1) NOTNULL))) AND ((((rt1.c0) NOT BETWEEN (1850183818) AND (rt1.c0)), (NOT (rt1.c1)), rt1.c2)))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT ((((rt1.c2, rt1.c0, rt1.c0)) NOT BETWEEN ((((rt1.c1) IS TRUE), rt1.c2, ((rt1.c1) NOTNULL))) AND ((((rt1.c0) NOT BETWEEN (1850183818) AND (rt1.c0)), (NOT (rt1.c1)), rt1.c2)))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((((((rt1.c2, rt1.c0, rt1.c0)) NOT BETWEEN ((((rt1.c1) IS TRUE), rt1.c2, ((rt1.c1) NOTNULL))) AND ((((rt1.c0) NOT BETWEEN (1850183818) AND (rt1.c0)), (NOT (rt1.c1)), rt1.c2)))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((NULL COLLATE RTRIM)AND(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))AND(vt1.c0 COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((NULL COLLATE RTRIM)AND(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))AND(vt1.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((NULL COLLATE RTRIM)AND(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))AND(vt1.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM vt1, rt1 WHERE ((- ((NOT (rt1.c1))))) GROUP BY rt1.c0, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c1 FROM vt1, rt1 WHERE ((NOT ((- ((NOT (rt1.c1))))))) GROUP BY rt1.c0, rt1.c1 UNION SELECT rt1.c0, rt1.c1 FROM vt1, rt1 WHERE ((((- ((NOT (rt1.c1))))) ISNULL)) GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING COUNT(*) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING COUNT(*) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT TOTAL(((SQLITE_VERSION()) IS TRUE)) FROM vt1, rt1;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((((vt1.c0)<=(0.6040065122784923)))<<(0.5048865485451007))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((vt1.c0)<=(0.6040065122784923)))<<(0.5048865485451007))))) UNION ALL SELECT * FROM vt1 WHERE (((((((vt1.c0)<=(0.6040065122784923)))<<(0.5048865485451007))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM rt1, vt1 NOT INDEXED;
SELECT DISTINCT * FROM rt1, vt1 WHERE ((((rt1.c2 IN ())) ISNULL)) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT ((((rt1.c2 IN ())) ISNULL)))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((((((rt1.c2 IN ())) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt1, vt1 NOT INDEXED;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((x'3e7c')>(x'')))*(TYPEOF(DISTINCT x'')))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((x'3e7c')>(x'')))*(TYPEOF(DISTINCT x'')))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((x'3e7c')>(x'')))*(TYPEOF(DISTINCT x'')))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING AVG(CAST(MIN(rt1.c0) AS NUMERIC)) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (AVG(CAST(MIN(rt1.c0) AS NUMERIC)))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING ((AVG(CAST(MIN(rt1.c0) AS NUMERIC))) ISNULL);
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 NOT INDEXED;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE (((rt1.c0)=(rt1.c0)) COLLATE RTRIM) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (((rt1.c0)=(rt1.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE (((((rt1.c0)=(rt1.c0)) COLLATE RTRIM) ISNULL));
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 NOT INDEXED;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0)==(vt1.c0)) AS BLOB)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0)==(vt1.c0)) AS BLOB)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0)==(vt1.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, vt1.c0, rt1.c0;
SELECT rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 WHERE ((~ (NULL))) GROUP BY rt1.c2, vt1.c0, rt1.c0 UNION SELECT ALL rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 WHERE ((NOT ((~ (NULL))))) GROUP BY rt1.c2, vt1.c0, rt1.c0 UNION SELECT rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 WHERE ((((~ (NULL))) ISNULL)) GROUP BY rt1.c2, vt1.c0, rt1.c0;
SELECT rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, vt1.c0, rt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((AVG(vt1.c0)) IS FALSE))>>(TOTAL(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((AVG(vt1.c0)) IS FALSE))>>(TOTAL(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((AVG(vt1.c0)) IS FALSE))>>(TOTAL(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((AVG(vt1.c0)) IS FALSE))>>(TOTAL(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((AVG(vt1.c0)) IS FALSE))>>(TOTAL(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((AVG(vt1.c0)) IS FALSE))>>(TOTAL(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM rt1, vt1;
SELECT ALL * FROM rt1, vt1 WHERE (rt1.c0) UNION ALL SELECT * FROM rt1, vt1 WHERE ((NOT (rt1.c0))) UNION ALL SELECT * FROM rt1, vt1 WHERE (((rt1.c0) ISNULL));
SELECT ALL * FROM rt1, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (TRIM(DISTINCT ((vt1.c0)IS(vt1.c0)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (TRIM(DISTINCT ((vt1.c0)IS(vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((TRIM(DISTINCT ((vt1.c0)IS(vt1.c0)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0, rt1.c2, rt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON rt1.c0 GROUP BY vt1.c0, rt1.c2, rt1.c0;
SELECT ALL vt1.c0, rt1.c2, rt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON rt1.c0 WHERE (((CAST(rt1.c1 AS INTEGER))==(CAST(rt1.c1 AS INTEGER)))) GROUP BY vt1.c0, rt1.c2, rt1.c0 UNION SELECT vt1.c0, rt1.c2, rt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON rt1.c0 WHERE ((NOT (((CAST(rt1.c1 AS INTEGER))==(CAST(rt1.c1 AS INTEGER)))))) GROUP BY vt1.c0, rt1.c2, rt1.c0 UNION SELECT ALL vt1.c0, rt1.c2, rt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON rt1.c0 WHERE (((((CAST(rt1.c1 AS INTEGER))==(CAST(rt1.c1 AS INTEGER)))) ISNULL)) GROUP BY vt1.c0, rt1.c2, rt1.c0;
SELECT vt1.c0, rt1.c2, rt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON rt1.c0 GROUP BY vt1.c0, rt1.c2, rt1.c0;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING AVG(MAX(rt1.c1)) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING (NOT (AVG(MAX(rt1.c1)))) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING ((AVG(MAX(rt1.c1))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN ()))IS(UPPER(DISTINCT NULL)))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((vt1.c0 IN ()))IS(UPPER(DISTINCT NULL)))))) UNION ALL SELECT * FROM vt1 WHERE ((((((vt1.c0 IN ()))IS(UPPER(DISTINCT NULL)))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt1.c0, rt1.c0 FROM vt1, rt1;
SELECT DISTINCT vt1.c0, rt1.c0 FROM vt1, rt1 WHERE (x'e208') UNION SELECT DISTINCT vt1.c0, rt1.c0 FROM vt1, rt1 WHERE ((NOT (x'e208'))) UNION SELECT DISTINCT vt1.c0, rt1.c0 FROM vt1, rt1 WHERE (((x'e208') ISNULL));
SELECT DISTINCT vt1.c0, rt1.c0 FROM vt1, rt1;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 NOT INDEXED, vt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1, vt1 WHERE (((CASE rt1.c2  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1, vt1 WHERE ((NOT (((CASE rt1.c2  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ISNULL)))) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1, vt1 WHERE (((((CASE rt1.c2  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ISNULL)) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 NOT INDEXED, vt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MAX(TOTAL(SUM(vt1.c0)))) NOT BETWEEN (vt1.c0) AND (TOTAL(vt1.c0))))*(NULL)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((MAX(TOTAL(SUM(vt1.c0)))) NOT BETWEEN (vt1.c0) AND (TOTAL(vt1.c0))))*(NULL)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((MAX(TOTAL(SUM(vt1.c0)))) NOT BETWEEN (vt1.c0) AND (TOTAL(vt1.c0))))*(NULL))) ISNULL);
SELECT ALL rt1.c0 FROM rt1 INNER JOIN vt1 ON (((rt1.c0, rt1.c1, rt1.c2)) NOT BETWEEN (('ZpI', ((rt1.c2) ISNULL), ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('T兝MRs- C')))) AND ((CAST(vt1.c0 AS NUMERIC), NULL, ((rt1.c0) BETWEEN (rt1.c0) AND (vt1.c0)))));
SELECT rt1.c0 FROM rt1 INNER JOIN vt1 ON (((rt1.c0, rt1.c1, rt1.c2)) NOT BETWEEN (('ZpI', ((rt1.c2) ISNULL), ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('T兝MRs- C')))) AND ((CAST(vt1.c0 AS NUMERIC), NULL, ((rt1.c0) BETWEEN (rt1.c0) AND (vt1.c0))))) WHERE ((- ((NOT (vt1.c0))))) UNION ALL SELECT rt1.c0 FROM rt1 INNER JOIN vt1 ON (((rt1.c0, rt1.c1, rt1.c2)) NOT BETWEEN (('ZpI', ((rt1.c2) ISNULL), ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('T兝MRs- C')))) AND ((CAST(vt1.c0 AS NUMERIC), NULL, ((rt1.c0) BETWEEN (rt1.c0) AND (vt1.c0))))) WHERE ((NOT ((- ((NOT (vt1.c0))))))) UNION ALL SELECT rt1.c0 FROM rt1 INNER JOIN vt1 ON (((rt1.c0, rt1.c1, rt1.c2)) NOT BETWEEN (('ZpI', ((rt1.c2) ISNULL), ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('T兝MRs- C')))) AND ((CAST(vt1.c0 AS NUMERIC), NULL, ((rt1.c0) BETWEEN (rt1.c0) AND (vt1.c0))))) WHERE ((((- ((NOT (vt1.c0))))) ISNULL));
SELECT ALL rt1.c0 FROM rt1 INNER JOIN vt1 ON (((rt1.c0, rt1.c1, rt1.c2)) NOT BETWEEN (('ZpI', ((rt1.c2) ISNULL), ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('T兝MRs- C')))) AND ((CAST(vt1.c0 AS NUMERIC), NULL, ((rt1.c0) BETWEEN (rt1.c0) AND (vt1.c0)))));
SELECT DISTINCT * FROM vt1, rt1;
SELECT DISTINCT * FROM vt1, rt1 WHERE (CASE WHEN CASE rt1.c2  WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c1 END THEN (- (rt1.c1)) END) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE ((NOT (CASE WHEN CASE rt1.c2  WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c1 END THEN (- (rt1.c1)) END))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE (((CASE WHEN CASE rt1.c2  WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c1 END THEN (- (rt1.c1)) END) ISNULL));
SELECT DISTINCT * FROM vt1, rt1;
SELECT ALL vt1.c0, rt1.c1, rt1.c0, rt1.c2 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt1.c0, rt1.c2;
SELECT vt1.c0, rt1.c1, rt1.c0, rt1.c2 FROM vt1, rt1 WHERE (((rt1.c1 IN ()) IN ())) GROUP BY vt1.c0, rt1.c1, rt1.c0, rt1.c2 UNION SELECT vt1.c0, rt1.c1, rt1.c0, rt1.c2 FROM vt1, rt1 WHERE ((NOT (((rt1.c1 IN ()) IN ())))) GROUP BY vt1.c0, rt1.c1, rt1.c0, rt1.c2 UNION SELECT vt1.c0, rt1.c1, rt1.c0, rt1.c2 FROM vt1, rt1 WHERE (((((rt1.c1 IN ()) IN ())) ISNULL)) GROUP BY vt1.c0, rt1.c1, rt1.c0, rt1.c2;
SELECT ALL vt1.c0, rt1.c1, rt1.c0, rt1.c2 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt1.c0, rt1.c2;
SELECT ALL vt1.c0 FROM rt1, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt1, vt1 GROUP BY vt1.c0 HAVING SUM(CAST(vt1.c0 AS NUMERIC)) UNION ALL SELECT ALL vt1.c0 FROM rt1, vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(CAST(vt1.c0 AS NUMERIC)))) UNION ALL SELECT vt1.c0 FROM rt1, vt1 GROUP BY vt1.c0 HAVING ((SUM(CAST(vt1.c0 AS NUMERIC))) ISNULL);
SELECT ALL vt1.c0 FROM rt1, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt1, vt1 GROUP BY vt1.c0 HAVING SUM(CAST(vt1.c0 AS NUMERIC)) UNION ALL SELECT ALL vt1.c0 FROM rt1, vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(CAST(vt1.c0 AS NUMERIC)))) UNION ALL SELECT vt1.c0 FROM rt1, vt1 GROUP BY vt1.c0 HAVING ((SUM(CAST(vt1.c0 AS NUMERIC))) ISNULL);
SELECT ALL vt1.c0 FROM rt1, vt1 GROUP BY vt1.c0;
SELECT * FROM vt1 RIGHT OUTER JOIN rt1 ON (((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c2)OR(NULL)), CAST('' AS BLOB)))<((vt1.c0, ((((rt1.c1)OR(rt1.c1)))AND(vt1.c0)), rt1.c2 COLLATE RTRIM)));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt1 ON (((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c2)OR(NULL)), CAST('' AS BLOB)))<((vt1.c0, ((((rt1.c1)OR(rt1.c1)))AND(vt1.c0)), rt1.c2 COLLATE RTRIM))) WHERE ((((0.3031231302084655)&(rt1.c1)) IN ())) UNION ALL SELECT * FROM vt1 RIGHT OUTER JOIN rt1 ON (((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c2)OR(NULL)), CAST('' AS BLOB)))<((vt1.c0, ((((rt1.c1)OR(rt1.c1)))AND(vt1.c0)), rt1.c2 COLLATE RTRIM))) WHERE ((NOT ((((0.3031231302084655)&(rt1.c1)) IN ())))) UNION ALL SELECT * FROM vt1 RIGHT OUTER JOIN rt1 ON (((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c2)OR(NULL)), CAST('' AS BLOB)))<((vt1.c0, ((((rt1.c1)OR(rt1.c1)))AND(vt1.c0)), rt1.c2 COLLATE RTRIM))) WHERE ((((((0.3031231302084655)&(rt1.c1)) IN ())) ISNULL));
SELECT * FROM vt1 RIGHT OUTER JOIN rt1 ON (((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c2)OR(NULL)), CAST('' AS BLOB)))<((vt1.c0, ((((rt1.c1)OR(rt1.c1)))AND(vt1.c0)), rt1.c2 COLLATE RTRIM)));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM vt1, rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM vt1, rt1 WHERE (((((((vt1.c0)OR('B''')))AND(rt1.c0))) BETWEEN (NULL) AND (((0x5a2d5ddd) IS TRUE)))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM vt1, rt1 WHERE ((NOT (((((((vt1.c0)OR('B''')))AND(rt1.c0))) BETWEEN (NULL) AND (((0x5a2d5ddd) IS TRUE)))))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM vt1, rt1 WHERE (((((((((vt1.c0)OR('B''')))AND(rt1.c0))) BETWEEN (NULL) AND (((0X5a2d5ddd) IS TRUE)))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM vt1, rt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (x'') GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (x''))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((x'') ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, rt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, rt1 GROUP BY vt1.c0 HAVING SUM(MAX(rt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1, rt1 GROUP BY vt1.c0 HAVING (NOT (SUM(MAX(rt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1, rt1 GROUP BY vt1.c0 HAVING ((SUM(MAX(rt1.c0))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST((~ (vt1.c0)) AS TEXT)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST((~ (vt1.c0)) AS TEXT)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((CAST((~ (vt1.c0)) AS TEXT)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, rt1;
SELECT DISTINCT * FROM vt1, rt1 WHERE (CASE ((((((((vt1.c0)OR(rt1.c1)))OR(rt1.c2)))AND(vt1.c0)))AND(rt1.c2))  WHEN CAST(rt1.c1 AS INTEGER) THEN rt1.c2 END) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE ((NOT (CASE ((((((((vt1.c0)OR(rt1.c1)))OR(rt1.c2)))AND(vt1.c0)))AND(rt1.c2))  WHEN CAST(rt1.c1 AS INTEGER) THEN rt1.c2 END))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE (((CASE ((((((((vt1.c0)OR(rt1.c1)))OR(rt1.c2)))AND(vt1.c0)))AND(rt1.c2))  WHEN CAST(rt1.c1 AS INTEGER) THEN rt1.c2 END) ISNULL));
SELECT DISTINCT * FROM vt1, rt1;
SELECT rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1, vt1 WHERE (((((((rt1.c0, rt1.c2, rt1.c2))!=((vt1.c0, vt1.c0, rt1.c1))), CASE rt1.c2  WHEN vt1.c0 THEN rt1.c0 END, TRIM(DISTINCT vt1.c0)))<>((LAST_INSERT_ROWID(), CAST(vt1.c0 AS TEXT), ((rt1.c2)%(vt1.c0)))))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1, vt1 WHERE ((NOT (((((((rt1.c0, rt1.c2, rt1.c2))!=((vt1.c0, vt1.c0, rt1.c1))), CASE rt1.c2  WHEN vt1.c0 THEN rt1.c0 END, TRIM(DISTINCT vt1.c0)))!=((LAST_INSERT_ROWID(), CAST(vt1.c0 AS TEXT), ((rt1.c2)%(vt1.c0)))))))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1, vt1 WHERE (((((((((rt1.c0, rt1.c2, rt1.c2))<>((vt1.c0, vt1.c0, rt1.c1))), CASE rt1.c2  WHEN vt1.c0 THEN rt1.c0 END, TRIM(DISTINCT vt1.c0)))!=((LAST_INSERT_ROWID(), CAST(vt1.c0 AS TEXT), ((rt1.c2)%(vt1.c0)))))) ISNULL)) GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON (((LTRIM(rt1.c1), COALESCE(DISTINCT rt1.c2, rt1.c1), CAST(rt1.c1 AS TEXT)))=((((vt1.c0) BETWEEN (vt1.c0) AND (rt1.c0)), (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))), (+ (''))))) GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON (((LTRIM(rt1.c1), COALESCE(DISTINCT rt1.c2, rt1.c1), CAST(rt1.c1 AS TEXT)))==((((vt1.c0) BETWEEN (vt1.c0) AND (rt1.c0)), (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))), (+ (''))))) GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((COUNT(rt1.c2)) BETWEEN (TOTAL(rt1.c2)) AND (MIN(vt1.c0))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON (((LTRIM(rt1.c1), COALESCE(DISTINCT rt1.c2, rt1.c1), CAST(rt1.c1 AS TEXT)))=((((vt1.c0) BETWEEN (vt1.c0) AND (rt1.c0)), (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))), (+ (''))))) GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (((COUNT(rt1.c2)) BETWEEN (TOTAL(rt1.c2)) AND (MIN(vt1.c0))))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON (((LTRIM(rt1.c1), COALESCE(DISTINCT rt1.c2, rt1.c1), CAST(rt1.c1 AS TEXT)))==((((vt1.c0) BETWEEN (vt1.c0) AND (rt1.c0)), (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))), (+ (''))))) GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((((COUNT(rt1.c2)) BETWEEN (TOTAL(rt1.c2)) AND (MIN(vt1.c0)))) ISNULL);
SELECT rt1.c2, rt1.c1, rt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON (((LTRIM(rt1.c1), COALESCE(DISTINCT rt1.c2, rt1.c1), CAST(rt1.c1 AS TEXT)))=((((vt1.c0) BETWEEN (vt1.c0) AND (rt1.c0)), (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))), (+ (''))))) GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON (((LTRIM(rt1.c1), COALESCE(DISTINCT rt1.c2, rt1.c1), CAST(rt1.c1 AS TEXT)))==((((vt1.c0) BETWEEN (vt1.c0) AND (rt1.c0)), (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))), (+ (''))))) GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((COUNT(rt1.c2)) BETWEEN (TOTAL(rt1.c2)) AND (MIN(vt1.c0))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON (((LTRIM(rt1.c1), COALESCE(DISTINCT rt1.c2, rt1.c1), CAST(rt1.c1 AS TEXT)))=((((vt1.c0) BETWEEN (vt1.c0) AND (rt1.c0)), (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))), (+ (''))))) GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (((COUNT(rt1.c2)) BETWEEN (TOTAL(rt1.c2)) AND (MIN(vt1.c0))))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON (((LTRIM(rt1.c1), COALESCE(DISTINCT rt1.c2, rt1.c1), CAST(rt1.c1 AS TEXT)))==((((vt1.c0) BETWEEN (vt1.c0) AND (rt1.c0)), (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))), (+ (''))))) GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((((COUNT(rt1.c2)) BETWEEN (TOTAL(rt1.c2)) AND (MIN(vt1.c0)))) ISNULL);
SELECT rt1.c2, rt1.c1, rt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON (((LTRIM(rt1.c1), COALESCE(DISTINCT rt1.c2, rt1.c1), CAST(rt1.c1 AS TEXT)))=((((vt1.c0) BETWEEN (vt1.c0) AND (rt1.c0)), (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))), (+ (''))))) GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (x'') UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM vt1 WHERE (((x'') ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0, vt1.c0 FROM rt1, vt1;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0, vt1.c0 FROM rt1, vt1 WHERE ((((rt1.c1)IS(rt1.c2)) IN (((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c1)))OR(vt1.c0)))AND(vt1.c0)), vt1.c0))) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0, vt1.c0 FROM rt1, vt1 WHERE ((NOT ((((rt1.c1)IS(rt1.c2)) IN (((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c1)))OR(vt1.c0)))AND(vt1.c0)), vt1.c0))))) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0, vt1.c0 FROM rt1, vt1 WHERE ((((((rt1.c1)IS(rt1.c2)) IN (((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c1)))OR(vt1.c0)))AND(vt1.c0)), vt1.c0))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0, vt1.c0 FROM rt1, vt1;
SELECT rt1.c1, rt1.c2 FROM vt1 LEFT OUTER JOIN rt1 ON (((((((((((rt1.c0)) BETWEEN ((vt1.c0)) AND ((rt1.c2))))OR(((((vt1.c0)AND(rt1.c2)))AND(rt1.c2)))))OR(vt1.c0)))AND(CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c2 END)))AND((- (rt1.c2)))) GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM vt1 LEFT OUTER JOIN rt1 ON (((((((((((rt1.c0)) BETWEEN ((vt1.c0)) AND ((rt1.c2))))OR(((((vt1.c0)AND(rt1.c2)))AND(rt1.c2)))))OR(vt1.c0)))AND(CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c2 END)))AND((- (rt1.c2)))) WHERE (rt1.c2) GROUP BY rt1.c1, rt1.c2 UNION SELECT rt1.c1, rt1.c2 FROM vt1 NOT INDEXED LEFT OUTER JOIN rt1 ON (((((((((((rt1.c0)) BETWEEN ((vt1.c0)) AND ((rt1.c2))))OR(((((vt1.c0)AND(rt1.c2)))AND(rt1.c2)))))OR(vt1.c0)))AND(CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c2 END)))AND((- (rt1.c2)))) WHERE ((NOT (rt1.c2))) GROUP BY rt1.c1, rt1.c2 UNION SELECT rt1.c1, rt1.c2 FROM vt1 LEFT OUTER JOIN rt1 ON (((((((((((rt1.c0)) BETWEEN ((vt1.c0)) AND ((rt1.c2))))OR(((((vt1.c0)AND(rt1.c2)))AND(rt1.c2)))))OR(vt1.c0)))AND(CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c2 END)))AND((- (rt1.c2)))) WHERE (((rt1.c2) ISNULL)) GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM vt1 LEFT OUTER JOIN rt1 ON (((((((((((rt1.c0)) BETWEEN ((vt1.c0)) AND ((rt1.c2))))OR(((((vt1.c0)AND(rt1.c2)))AND(rt1.c2)))))OR(vt1.c0)))AND(CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c2 END)))AND((- (rt1.c2)))) GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING ((GROUP_CONCAT(rt1.c0)) NOT BETWEEN (SUM(TOTAL(GROUP_CONCAT(rt1.c1)))) AND (GROUP_CONCAT(rt1.c0))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (((GROUP_CONCAT(rt1.c0)) NOT BETWEEN (SUM(TOTAL(GROUP_CONCAT(rt1.c1)))) AND (GROUP_CONCAT(rt1.c0))))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING ((((GROUP_CONCAT(rt1.c0)) NOT BETWEEN (SUM(TOTAL(GROUP_CONCAT(rt1.c1)))) AND (GROUP_CONCAT(rt1.c0)))) ISNULL);
SELECT * FROM rt1, vt1;
SELECT * FROM rt1, vt1 WHERE ((- (ABS(DISTINCT rt1.c0)))) UNION ALL SELECT * FROM rt1, vt1 WHERE ((NOT ((- (ABS(DISTINCT rt1.c0)))))) UNION ALL SELECT ALL * FROM rt1, vt1 WHERE ((((- (ABS(DISTINCT rt1.c0)))) ISNULL));
SELECT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((+ (CAST(rt1.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM rt1 NOT INDEXED WHERE ((NOT ((+ (CAST(rt1.c0 AS BLOB)))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((+ (CAST(rt1.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 WHERE (0.3318802261013296) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (0.3318802261013296))) GROUP BY rt1.c2, rt1.c1 UNION SELECT rt1.c2, rt1.c1 FROM rt1 WHERE (((0.3318802261013296) ISNULL)) GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING GROUP_CONCAT(COUNT(vt1.c0)) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT (GROUP_CONCAT(COUNT(vt1.c0)))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((GROUP_CONCAT(COUNT(vt1.c0))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt1.c0, rt1.c2 FROM vt1 NATURAL JOIN rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM vt1 NATURAL JOIN rt1 WHERE (((((((((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1)))AND(vt1.c0)))OR(rt1.c1)))OR(rt1.c0)))|(0xffffffff930b6f6c))) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM vt1 NATURAL JOIN rt1 WHERE ((NOT (((((((((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1)))AND(vt1.c0)))OR(rt1.c1)))OR(rt1.c0)))|(0Xffffffff930b6f6c))))) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM vt1 NATURAL JOIN rt1 WHERE (((((((((((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1)))AND(vt1.c0)))OR(rt1.c1)))OR(rt1.c0)))|(0Xffffffff930b6f6c))) ISNULL)) GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM vt1 NATURAL JOIN rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING rt1.c2 UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (rt1.c2)) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((rt1.c2) ISNULL);
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING rt1.c2 UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (rt1.c2)) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((rt1.c2) ISNULL);
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (((rt1.c1) NOTNULL) COLLATE BINARY) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((rt1.c1) NOTNULL) COLLATE BINARY))) UNION ALL SELECT * FROM rt1 WHERE (((((rt1.c1) NOTNULL) COLLATE BINARY) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ('-1217500788') UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ('-1217500788'))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((('-1217500788') ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c1, rt1.c2, rt1.c0;
SELECT ALL vt1.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c1, rt1.c2, rt1.c0 HAVING AVG(MIN(GROUP_CONCAT(rt1.c1))) UNION ALL SELECT vt1.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (AVG(MIN(GROUP_CONCAT(rt1.c1))))) UNION ALL SELECT vt1.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c1, rt1.c2, rt1.c0 HAVING ((AVG(MIN(GROUP_CONCAT(rt1.c1)))) ISNULL);
SELECT vt1.c0, rt1.c1 FROM rt1, vt1 NOT INDEXED;
SELECT ALL vt1.c0, rt1.c1 FROM rt1, vt1 WHERE (rt1.c0) UNION ALL SELECT vt1.c0, rt1.c1 FROM rt1, vt1 WHERE ((NOT (rt1.c0))) UNION ALL SELECT vt1.c0, rt1.c1 FROM rt1, vt1 WHERE (((rt1.c0) ISNULL));
SELECT vt1.c0, rt1.c1 FROM rt1, vt1 NOT INDEXED;
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE ((- ((rt1.c2 IN (rt1.c2, rt1.c1))))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT ((- ((rt1.c2 IN (rt1.c2, rt1.c1))))))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((((- ((rt1.c2 IN (rt1.c2, rt1.c1))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT ALL rt1.c2, vt1.c0, rt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, vt1.c0, rt1.c0, rt1.c1 FROM vt1, rt1 WHERE (((((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)))+(((((((((rt1.c1)OR(vt1.c0)))OR(rt1.c0)))AND(x'')))AND(rt1.c2))))) GROUP BY rt1.c2, vt1.c0, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, vt1.c0, rt1.c0, rt1.c1 FROM vt1, rt1 WHERE ((NOT (((((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)))+(((((((((rt1.c1)OR(vt1.c0)))OR(rt1.c0)))AND(x'')))AND(rt1.c2))))))) GROUP BY rt1.c2, vt1.c0, rt1.c0, rt1.c1 UNION SELECT rt1.c2, vt1.c0, rt1.c0, rt1.c1 FROM vt1, rt1 WHERE (((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)))+(((((((((rt1.c1)OR(vt1.c0)))OR(rt1.c0)))AND(x'')))AND(rt1.c2))))) ISNULL)) GROUP BY rt1.c2, vt1.c0, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, vt1.c0, rt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c0, rt1.c1;
SELECT rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c0, vt1.c0;
SELECT rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c0, vt1.c0 HAVING SUM(COUNT(COUNT(*))) UNION ALL SELECT ALL rt1.c0, vt1.c0 FROM vt1, rt1 NOT INDEXED GROUP BY rt1.c0, vt1.c0 HAVING (NOT (SUM(COUNT(COUNT(*))))) UNION ALL SELECT rt1.c0, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c0, vt1.c0 HAVING ((SUM(COUNT(COUNT(*)))) ISNULL);
SELECT rt1.c2, rt1.c0 FROM rt1, vt1;
SELECT ALL rt1.c2, rt1.c0 FROM rt1, vt1 WHERE ((NOT (CASE WHEN rt1.c2 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN vt1.c0 WHEN 0.538722627975623 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1, vt1 WHERE ((NOT ((NOT (CASE WHEN rt1.c2 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN vt1.c0 WHEN 0.538722627975623 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END))))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1, vt1 WHERE ((((NOT (CASE WHEN rt1.c2 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN vt1.c0 WHEN 0.538722627975623 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END))) ISNULL));
SELECT rt1.c2, rt1.c0 FROM rt1, vt1;
SELECT DISTINCT * FROM rt1 FULL OUTER JOIN vt1 ON (((rt1.c0)-(rt1.c0)) IN (CAST(vt1.c0 AS INTEGER), (('H.Pg') NOT BETWEEN (rt1.c1) AND (vt1.c0))));
SELECT DISTINCT * FROM rt1 FULL OUTER JOIN vt1 ON (((rt1.c0)-(rt1.c0)) IN (CAST(vt1.c0 AS INTEGER), (('H.Pg') NOT BETWEEN (rt1.c1) AND (vt1.c0)))) WHERE (((((((vt1.c0)AND(rt1.c2)))OR(vt1.c0))) NOT BETWEEN ((rt1.c0 IN ())) AND (((vt1.c0)&(rt1.c0))))) UNION SELECT DISTINCT * FROM rt1 FULL OUTER JOIN vt1 ON (((rt1.c0)-(rt1.c0)) IN (CAST(vt1.c0 AS INTEGER), (('H.Pg') NOT BETWEEN (rt1.c1) AND (vt1.c0)))) WHERE ((NOT (((((((vt1.c0)AND(rt1.c2)))OR(vt1.c0))) NOT BETWEEN ((rt1.c0 IN ())) AND (((vt1.c0)&(rt1.c0))))))) UNION SELECT DISTINCT * FROM rt1 FULL OUTER JOIN vt1 ON (((rt1.c0)-(rt1.c0)) IN (CAST(vt1.c0 AS INTEGER), (('H.Pg') NOT BETWEEN (rt1.c1) AND (vt1.c0)))) WHERE (((((((((vt1.c0)AND(rt1.c2)))OR(vt1.c0))) NOT BETWEEN ((rt1.c0 IN ())) AND (((vt1.c0)&(rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1 FULL OUTER JOIN vt1 ON (((rt1.c0)-(rt1.c0)) IN (CAST(vt1.c0 AS INTEGER), (('H.Pg') NOT BETWEEN (rt1.c1) AND (vt1.c0))));
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 WHERE (((((rt1.c1)<=(rt1.c1)))|((((rt1.c0)) BETWEEN ((rt1.c2)) AND (('rB')))))) GROUP BY rt1.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (((((rt1.c1)<=(rt1.c1)))|((((rt1.c0)) BETWEEN ((rt1.c2)) AND (('rB')))))))) GROUP BY rt1.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c2 FROM rt1 WHERE (((((((rt1.c1)<=(rt1.c1)))|((((rt1.c0)) BETWEEN ((rt1.c2)) AND (('rB')))))) ISNULL)) GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c2, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0;
SELECT rt1.c2, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0 HAVING ((((rt1.c0)) NOT BETWEEN ((MAX(rt1.c2))) AND ((rt1.c0))) IN ()) UNION ALL SELECT ALL rt1.c2, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0 HAVING (NOT (((((rt1.c0)) NOT BETWEEN ((MAX(rt1.c2))) AND ((rt1.c0))) IN ()))) UNION ALL SELECT rt1.c2, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0 HAVING ((((((rt1.c0)) NOT BETWEEN ((MAX(rt1.c2))) AND ((rt1.c0))) IN ())) ISNULL);
SELECT ALL rt1.c2, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0;
SELECT rt1.c2, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0 HAVING ((((rt1.c0)) NOT BETWEEN ((MAX(rt1.c2))) AND ((rt1.c0))) IN ()) UNION ALL SELECT ALL rt1.c2, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0 HAVING (NOT (((((rt1.c0)) NOT BETWEEN ((MAX(rt1.c2))) AND ((rt1.c0))) IN ()))) UNION ALL SELECT rt1.c2, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0 HAVING ((((((rt1.c0)) NOT BETWEEN ((MAX(rt1.c2))) AND ((rt1.c0))) IN ())) ISNULL);
SELECT ALL rt1.c2, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((IFNULL(DISTINCT vt1.c0, vt1.c0))*(CAST(vt1.c0 AS TEXT)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((IFNULL(DISTINCT vt1.c0, vt1.c0))*(CAST(vt1.c0 AS TEXT)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((IFNULL(DISTINCT vt1.c0, vt1.c0))*(CAST(vt1.c0 AS TEXT)))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c1 FROM rt1 WHERE (CASE WHEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)) THEN (rt1.c0 IN (-1148358067)) ELSE ((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)) END) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE ((NOT (CASE WHEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)) THEN (rt1.c0 IN (-1148358067)) ELSE ((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)) END))) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE (((CASE WHEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)) THEN (rt1.c0 IN (-1148358067)) ELSE ((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)) END) ISNULL));
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT rt1.c1 FROM vt1, rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM vt1, rt1 WHERE (rt1.c0) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM vt1, rt1 WHERE ((NOT (rt1.c0))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM vt1, rt1 WHERE (((rt1.c0) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM vt1, rt1 GROUP BY rt1.c1;
SELECT vt1.c0 FROM vt1, rt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, rt1 GROUP BY vt1.c0 HAVING COUNT(GROUP_CONCAT(rt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1, rt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(GROUP_CONCAT(rt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1, rt1 GROUP BY vt1.c0 HAVING ((COUNT(GROUP_CONCAT(rt1.c0))) ISNULL);
SELECT rt1.c0, vt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1;
SELECT ALL rt1.c0, vt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1 WHERE (vt1.c0) UNION ALL SELECT rt1.c0, vt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL rt1.c0, vt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1 WHERE (((vt1.c0) ISNULL));
SELECT rt1.c0, vt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1;
SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN vt1 ON ((NULL) NOT BETWEEN ((NOT (rt1.c1))) AND (RTRIM(vt1.c0)));
SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN vt1 ON ((NULL) NOT BETWEEN ((NOT (rt1.c1))) AND (RTRIM(vt1.c0))) WHERE ((((- (rt1.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN vt1 ON ((NULL) NOT BETWEEN ((NOT (rt1.c1))) AND (RTRIM(vt1.c0))) WHERE ((NOT ((((- (rt1.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN vt1 ON ((NULL) NOT BETWEEN ((NOT (rt1.c1))) AND (RTRIM(vt1.c0))) WHERE ((((((- (rt1.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN vt1 ON ((NULL) NOT BETWEEN ((NOT (rt1.c1))) AND (RTRIM(vt1.c0)));
SELECT ALL rt1.c2, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON (((('!')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) IN ()) GROUP BY rt1.c2, vt1.c0;
SELECT ALL rt1.c2, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON (((('!')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) IN ()) WHERE (rt1.c1) GROUP BY rt1.c2, vt1.c0 UNION SELECT ALL rt1.c2, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON (((('!')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) IN ()) WHERE ((NOT (rt1.c1))) GROUP BY rt1.c2, vt1.c0 UNION SELECT ALL rt1.c2, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON (((('!')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) IN ()) WHERE (((rt1.c1) ISNULL)) GROUP BY rt1.c2, vt1.c0;
SELECT ALL rt1.c2, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON (((('!')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) IN ()) GROUP BY rt1.c2, vt1.c0;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING SUM(((((rt1.c2)AND(rt1.c0)))AND('9rv'))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING (NOT (SUM(((((rt1.c2)AND(rt1.c0)))AND('9rv'))))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING ((SUM(((((rt1.c2)AND(rt1.c0)))AND('9rv')))) ISNULL);
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING SUM(((((rt1.c2)AND(rt1.c0)))AND('9rv'))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING (NOT (SUM(((((rt1.c2)AND(rt1.c0)))AND('9rv'))))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING ((SUM(((((rt1.c2)AND(rt1.c0)))AND('9rv')))) ISNULL);
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT MIN(((((rt1.c0)/(rt1.c1)))/(((rt1.c0) NOT NULL)))) FROM rt1;
SELECT rt1.c0 FROM rt1;
SELECT rt1.c0 FROM rt1 WHERE (CASE WHEN CAST(rt1.c1 AS REAL) THEN CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END ELSE (+ (rt1.c2)) END) UNION ALL SELECT rt1.c0 FROM rt1 WHERE ((NOT (CASE WHEN CAST(rt1.c1 AS REAL) THEN CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END ELSE (+ (rt1.c2)) END))) UNION ALL SELECT ALL rt1.c0 FROM rt1 WHERE (((CASE WHEN CAST(rt1.c1 AS REAL) THEN CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END ELSE (+ (rt1.c2)) END) ISNULL));
SELECT rt1.c0 FROM rt1;
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE ((((- (rt1.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT ((((- (rt1.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((((((- (rt1.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1, vt1.c0;
SELECT ALL rt1.c0, rt1.c2, rt1.c1, vt1.c0 FROM vt1, rt1 WHERE ((((CASE WHEN rt1.c2 THEN rt1.c0 ELSE vt1.c0 END))<>((IFNULL(DISTINCT rt1.c2, vt1.c0))))) GROUP BY rt1.c0, rt1.c2, rt1.c1, vt1.c0 UNION SELECT rt1.c0, rt1.c2, rt1.c1, vt1.c0 FROM vt1, rt1 WHERE ((NOT ((((CASE WHEN rt1.c2 THEN rt1.c0 ELSE vt1.c0 END))!=((IFNULL(DISTINCT rt1.c2, vt1.c0))))))) GROUP BY rt1.c0, rt1.c2, rt1.c1, vt1.c0 UNION SELECT rt1.c0, rt1.c2, rt1.c1, vt1.c0 FROM vt1, rt1 WHERE ((((((CASE WHEN rt1.c2 THEN rt1.c0 ELSE vt1.c0 END))<>((IFNULL(DISTINCT rt1.c2, vt1.c0))))) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c1, vt1.c0;
SELECT ALL rt1.c0, rt1.c2, rt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1, vt1.c0;
SELECT ALL rt1.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON ((((CAST(rt1.c1 AS INTEGER))AND(((vt1.c0) NOTNULL))))AND(CASE WHEN vt1.c0 THEN 0.2628782024622073 END)) GROUP BY rt1.c0, vt1.c0;
SELECT rt1.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON ((((CAST(rt1.c1 AS INTEGER))AND(((vt1.c0) NOTNULL))))AND(CASE WHEN vt1.c0 THEN 0.2628782024622073 END)) GROUP BY rt1.c0, vt1.c0 HAVING MIN(GROUP_CONCAT(TOTAL(rt1.c0)) COLLATE RTRIM) UNION ALL SELECT ALL rt1.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON ((((CAST(rt1.c1 AS INTEGER))AND(((vt1.c0) NOTNULL))))AND(CASE WHEN vt1.c0 THEN 0.2628782024622073 END)) GROUP BY rt1.c0, vt1.c0 HAVING (NOT (MIN(GROUP_CONCAT(TOTAL(rt1.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL rt1.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON ((((CAST(rt1.c1 AS INTEGER))AND(((vt1.c0) NOTNULL))))AND(CASE WHEN vt1.c0 THEN 0.2628782024622073 END)) GROUP BY rt1.c0, vt1.c0 HAVING ((MIN(GROUP_CONCAT(TOTAL(rt1.c0)) COLLATE RTRIM)) ISNULL);
SELECT vt1.c0, rt1.c2 FROM rt1 CROSS JOIN vt1 ON (((- (rt1.c0))) BETWEEN (((rt1.c1)>(rt1.c2))) AND (TRIM(vt1.c0)));
SELECT ALL vt1.c0, rt1.c2 FROM rt1 CROSS JOIN vt1 ON (((- (rt1.c0))) BETWEEN (((rt1.c1)>(rt1.c2))) AND (TRIM(vt1.c0))) WHERE (CASE WHEN NULL THEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) END) UNION ALL SELECT vt1.c0, rt1.c2 FROM rt1 CROSS JOIN vt1 ON (((- (rt1.c0))) BETWEEN (((rt1.c1)>(rt1.c2))) AND (TRIM(vt1.c0))) WHERE ((NOT (CASE WHEN NULL THEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) END))) UNION ALL SELECT vt1.c0, rt1.c2 FROM rt1 CROSS JOIN vt1 ON (((- (rt1.c0))) BETWEEN (((rt1.c1)>(rt1.c2))) AND (TRIM(vt1.c0))) WHERE (((CASE WHEN NULL THEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) END) ISNULL));
SELECT vt1.c0, rt1.c2 FROM rt1 CROSS JOIN vt1 ON (((- (rt1.c0))) BETWEEN (((rt1.c1)>(rt1.c2))) AND (TRIM(vt1.c0)));
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE (((((((rt1.c0)OR(rt1.c1)))AND(rt1.c0))) ISNULL)) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT (((((((rt1.c0)OR(rt1.c1)))AND(rt1.c0))) ISNULL)))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE (((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c0))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT rt1.c0, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1, vt1 WHERE (vt1.c0) GROUP BY rt1.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c2 FROM rt1, vt1 WHERE ((NOT (vt1.c0))) GROUP BY rt1.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c2 FROM rt1, vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c0;
SELECT rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c0 HAVING SUM((((rt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((248391719)))) UNION ALL SELECT rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c0 HAVING (NOT (SUM((((rt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((248391719)))))) UNION ALL SELECT rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c0 HAVING ((SUM((((rt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((248391719))))) ISNULL);
SELECT ALL rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c0;
SELECT rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c0 HAVING SUM((((rt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((248391719)))) UNION ALL SELECT rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c0 HAVING (NOT (SUM((((rt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((248391719)))))) UNION ALL SELECT rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c0 HAVING ((SUM((((rt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((248391719))))) ISNULL);
SELECT ALL rt1.c2, vt1.c0, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) IS TRUE))IS NOT(vt1.c0 COLLATE NOCASE))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) IS TRUE))IS NOT(vt1.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0) IS TRUE))IS NOT(vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE ((+ (((rt1.c0) BETWEEN (vt1.c0) AND (rt1.c0))))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT ((+ (((rt1.c0) BETWEEN (vt1.c0) AND (rt1.c0))))))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((((+ (((rt1.c0) BETWEEN (vt1.c0) AND (rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 WHERE (CAST(((rt1.c0) NOT NULL) AS REAL)) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE ((NOT (CAST(((rt1.c0) NOT NULL) AS REAL)))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE (((CAST(((rt1.c0) NOT NULL) AS REAL)) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL * FROM rt1, vt1;
SELECT * FROM rt1, vt1 WHERE (rt1.c1) UNION ALL SELECT * FROM rt1, vt1 WHERE ((NOT (rt1.c1))) UNION ALL SELECT ALL * FROM rt1, vt1 WHERE (((rt1.c1) ISNULL));
SELECT ALL * FROM rt1, vt1;
SELECT DISTINCT * FROM vt1, rt1;
SELECT DISTINCT * FROM vt1, rt1 WHERE (CASE WHEN rt1.c2 COLLATE RTRIM THEN (((rt1.c1, rt1.c1, rt1.c2))<>((rt1.c1, 0.8229327922161846, rt1.c1))) END) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE ((NOT (CASE WHEN rt1.c2 COLLATE RTRIM THEN (((rt1.c1, rt1.c1, rt1.c2))<>((rt1.c1, 0.8229327922161846, rt1.c1))) END))) UNION SELECT DISTINCT * FROM vt1, rt1 WHERE (((CASE WHEN rt1.c2 COLLATE RTRIM THEN (((rt1.c1, rt1.c1, rt1.c2))!=((rt1.c1, 0.8229327922161846, rt1.c1))) END) ISNULL));
SELECT DISTINCT * FROM vt1, rt1;
SELECT rt1.c1, vt1.c0 FROM rt1 INNER JOIN vt1 ON ((((rt1.c1)+(rt1.c1))) IS FALSE) GROUP BY rt1.c1, vt1.c0;
SELECT ALL rt1.c1, vt1.c0 FROM rt1 INNER JOIN vt1 ON ((((rt1.c1)+(rt1.c1))) IS FALSE) WHERE ((((((rt1.c1, rt1.c2, rt1.c0, 'D', vt1.c0))<((rt1.c0, vt1.c0, rt1.c0, vt1.c0, rt1.c0)))) NOT BETWEEN (('' IN ())) AND (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))))) GROUP BY rt1.c1, vt1.c0 UNION SELECT rt1.c1, vt1.c0 FROM rt1 INNER JOIN vt1 ON ((((rt1.c1)+(rt1.c1))) IS FALSE) WHERE ((NOT ((((((rt1.c1, rt1.c2, rt1.c0, 'D', vt1.c0))<((rt1.c0, vt1.c0, rt1.c0, vt1.c0, rt1.c0)))) NOT BETWEEN (('' IN ())) AND (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))))))) GROUP BY rt1.c1, vt1.c0 UNION SELECT rt1.c1, vt1.c0 FROM rt1 INNER JOIN vt1 ON ((((rt1.c1)+(rt1.c1))) IS FALSE) WHERE ((((((((rt1.c1, rt1.c2, rt1.c0, 'D', vt1.c0))<((rt1.c0, vt1.c0, rt1.c0, vt1.c0, rt1.c0)))) NOT BETWEEN (('' IN ())) AND (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))))) ISNULL)) GROUP BY rt1.c1, vt1.c0;
SELECT rt1.c1, vt1.c0 FROM rt1 INNER JOIN vt1 ON ((((rt1.c1)+(rt1.c1))) IS FALSE) GROUP BY rt1.c1, vt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((COUNT(COUNT(rt1.c1))) NOT BETWEEN (MIN(rt1.c1)) AND (AVG(rt1.c2))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (((COUNT(COUNT(rt1.c1))) NOT BETWEEN (MIN(rt1.c1)) AND (AVG(rt1.c2))))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((((COUNT(COUNT(rt1.c1))) NOT BETWEEN (MIN(rt1.c1)) AND (AVG(rt1.c2)))) ISNULL);
SELECT ALL * FROM vt1 NATURAL JOIN rt1;
SELECT * FROM vt1 NATURAL JOIN rt1 WHERE (UNICODE(rt1.c1) COLLATE BINARY) UNION ALL SELECT * FROM vt1 NATURAL JOIN rt1 WHERE ((NOT (UNICODE(rt1.c1) COLLATE BINARY))) UNION ALL SELECT * FROM vt1 NATURAL JOIN rt1 WHERE (((UNICODE(rt1.c1) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt1 NATURAL JOIN rt1;
SELECT DISTINCT rt1.c0, rt1.c1, vt1.c0 FROM rt1, vt1;
SELECT DISTINCT rt1.c0, rt1.c1, vt1.c0 FROM rt1, vt1 WHERE ((('0.6040065122784923')<>(rt1.c2 COLLATE BINARY))) UNION SELECT DISTINCT rt1.c0, rt1.c1, vt1.c0 FROM rt1, vt1 WHERE ((NOT ((('0.6040065122784923')<>(rt1.c2 COLLATE BINARY))))) UNION SELECT DISTINCT rt1.c0, rt1.c1, vt1.c0 FROM rt1, vt1 WHERE ((((('0.6040065122784923')!=(rt1.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1, vt1.c0 FROM rt1, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (TRIM(DISTINCT CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (TRIM(DISTINCT CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((TRIM(DISTINCT CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt1.c2, vt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c1;
SELECT rt1.c2, vt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c1 HAVING MIN(AVG(rt1.c1)) UNION ALL SELECT ALL rt1.c2, vt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c1 HAVING (NOT (MIN(AVG(rt1.c1)))) UNION ALL SELECT ALL rt1.c2, vt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c2, vt1.c0, rt1.c1 HAVING ((MIN(AVG(rt1.c1))) ISNULL);
SELECT * FROM rt1, vt1;
SELECT ALL * FROM rt1, vt1 WHERE ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END IN ())) UNION ALL SELECT ALL * FROM rt1, vt1 WHERE ((NOT ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END IN ())))) UNION ALL SELECT * FROM rt1, vt1 WHERE ((((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END IN ())) ISNULL));
SELECT * FROM rt1, vt1;
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((rt1.c1 COLLATE BINARY)<<(CAST(rt1.c2 AS REAL)))) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (((rt1.c1 COLLATE BINARY)<<(CAST(rt1.c2 AS REAL)))))) UNION SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1 NOT INDEXED WHERE (((((rt1.c1 COLLATE BINARY)<<(CAST(rt1.c2 AS REAL)))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((CAST(vt1.c0 AS BLOB), CASE 0.01787843082114493  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((((NULL)OR(vt1.c0)))AND(vt1.c0))))<(((NOT (vt1.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)LIKE(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((CAST(vt1.c0 AS BLOB), CASE 0.01787843082114493  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((((NULL)OR(vt1.c0)))AND(vt1.c0))))<(((NOT (vt1.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)LIKE(vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((CAST(vt1.c0 AS BLOB), CASE 0.01787843082114493  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((((NULL)OR(vt1.c0)))AND(vt1.c0))))<(((NOT (vt1.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)LIKE(vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, rt1.c1, rt1.c0, rt1.c2 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt1.c0, rt1.c2;
SELECT ALL vt1.c0, rt1.c1, rt1.c0, rt1.c2 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt1.c0, rt1.c2 HAVING SUM(AVG(COUNT(rt1.c0))) UNION ALL SELECT ALL vt1.c0, rt1.c1, rt1.c0, rt1.c2 FROM vt1, rt1 NOT INDEXED GROUP BY vt1.c0, rt1.c1, rt1.c0, rt1.c2 HAVING (NOT (SUM(AVG(COUNT(rt1.c0))))) UNION ALL SELECT ALL vt1.c0, rt1.c1, rt1.c0, rt1.c2 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1, rt1.c0, rt1.c2 HAVING ((SUM(AVG(COUNT(rt1.c0)))) ISNULL);
SELECT rt1.c1, rt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON (rt1.c2 COLLATE RTRIM IN ());
SELECT rt1.c1, rt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON (rt1.c2 COLLATE RTRIM IN ()) WHERE (((((('1098165965'))>((0.30059713102989627))))/((('q{g~䞣*1}')>(vt1.c0))))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON (rt1.c2 COLLATE RTRIM IN ()) WHERE ((NOT (((((('1098165965'))>((0.30059713102989627))))/((('q{g~䞣*1}')>(vt1.c0))))))) UNION ALL SELECT rt1.c1, rt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON (rt1.c2 COLLATE RTRIM IN ()) WHERE (((((((('1098165965'))>((0.30059713102989627))))/((('q{g~䞣*1}')>(vt1.c0))))) ISNULL));
SELECT rt1.c1, rt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON (rt1.c2 COLLATE RTRIM IN ());
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE (TYPEOF((~ (rt1.c1)))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT (TYPEOF((~ (rt1.c1)))))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE (((TYPEOF((~ (rt1.c1)))) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 WHERE ((- (rt1.c1)) COLLATE NOCASE) GROUP BY rt1.c2, rt1.c1 UNION SELECT rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT ((- (rt1.c1)) COLLATE NOCASE))) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE ((((- (rt1.c1)) COLLATE NOCASE) ISNULL)) GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(((SUM(vt1.c0))&(MAX(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(((SUM(vt1.c0))&(MAX(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(((SUM(vt1.c0))&(MAX(vt1.c0))))) ISNULL);
SELECT * FROM vt1, rt1;
SELECT * FROM vt1, rt1 WHERE (((((rt1.c0) IS FALSE)) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (NULL))) UNION ALL SELECT ALL * FROM vt1, rt1 WHERE ((NOT (((((rt1.c0) IS FALSE)) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (NULL))))) UNION ALL SELECT ALL * FROM vt1, rt1 WHERE (((((((rt1.c0) IS FALSE)) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (NULL))) ISNULL));
SELECT * FROM vt1, rt1;
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c2 FROM rt1 WHERE (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END COLLATE RTRIM) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE ((NOT (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END COLLATE RTRIM))) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE (((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 WHERE (((((((rt1.c1)AND(rt1.c2)))OR(rt1.c2))) NOT BETWEEN (CAST(rt1.c2 AS BLOB)) AND (rt1.c0))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE ((NOT (((((((rt1.c1)AND(rt1.c2)))OR(rt1.c2))) NOT BETWEEN (CAST(rt1.c2 AS BLOB)) AND (rt1.c0))))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE (((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c2))) NOT BETWEEN (CAST(rt1.c2 AS BLOB)) AND (rt1.c0))) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c1 FROM vt1, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM vt1, rt1 GROUP BY rt1.c1 HAVING MIN(MIN(MAX(vt1.c0))) UNION ALL SELECT ALL rt1.c1 FROM vt1, rt1 GROUP BY rt1.c1 HAVING (NOT (MIN(MIN(MAX(vt1.c0))))) UNION ALL SELECT ALL rt1.c1 FROM vt1, rt1 GROUP BY rt1.c1 HAVING ((MIN(MIN(MAX(vt1.c0)))) ISNULL);
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (CASE WHEN ((rt1.c2) BETWEEN (rt1.c1) AND (0.34412971372543244)) THEN ((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)) WHEN ((rt1.c0)>(rt1.c0)) THEN rt1.c2 WHEN x'' COLLATE NOCASE THEN (rt1.c0 IN ()) ELSE NULL COLLATE BINARY END) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (CASE WHEN ((rt1.c2) BETWEEN (rt1.c1) AND (0.34412971372543244)) THEN ((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)) WHEN ((rt1.c0)>(rt1.c0)) THEN rt1.c2 WHEN x'' COLLATE NOCASE THEN (rt1.c0 IN ()) ELSE NULL COLLATE BINARY END))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (((CASE WHEN ((rt1.c2) BETWEEN (rt1.c1) AND (0.34412971372543244)) THEN ((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)) WHEN ((rt1.c0)>(rt1.c0)) THEN rt1.c2 WHEN x'' COLLATE NOCASE THEN (rt1.c0 IN ()) ELSE NULL COLLATE BINARY END) ISNULL));
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE WHEN NULL COLLATE RTRIM THEN vt1.c0 COLLATE RTRIM WHEN ((vt1.c0)<=(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN load_extension(vt1.c0, vt1.c0) THEN ((vt1.c0)==(vt1.c0)) ELSE (vt1.c0 IN ()) END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN NULL COLLATE RTRIM THEN vt1.c0 COLLATE RTRIM WHEN ((vt1.c0)<=(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN load_extension(vt1.c0, vt1.c0) THEN ((vt1.c0)=(vt1.c0)) ELSE (vt1.c0 IN ()) END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE WHEN NULL COLLATE RTRIM THEN vt1.c0 COLLATE RTRIM WHEN ((vt1.c0)<=(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN load_extension(vt1.c0, vt1.c0) THEN ((vt1.c0)=(vt1.c0)) ELSE (vt1.c0 IN ()) END) ISNULL));
SELECT vt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON CAST(((((rt1.c1)OR(vt1.c0)))AND(rt1.c0)) AS INTEGER) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON CAST(((((rt1.c1)OR(vt1.c0)))AND(rt1.c0)) AS INTEGER) WHERE (((rt1.c1 COLLATE BINARY)>=((rt1.c0 IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON CAST(((((rt1.c1)OR(vt1.c0)))AND(rt1.c0)) AS INTEGER) WHERE ((NOT (((rt1.c1 COLLATE BINARY)>=((rt1.c0 IN ())))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON CAST(((((rt1.c1)OR(vt1.c0)))AND(rt1.c0)) AS INTEGER) WHERE (((((rt1.c1 COLLATE BINARY)>=((rt1.c0 IN ())))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 FULL OUTER JOIN rt1 ON CAST(((((rt1.c1)OR(vt1.c0)))AND(rt1.c0)) AS INTEGER) GROUP BY vt1.c0;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING SUM(((COUNT(SUM(SUM(rt1.c2))))<=(COUNT(rt1.c1)))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (SUM(((COUNT(SUM(SUM(rt1.c2))))<=(COUNT(rt1.c1)))))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((SUM(((COUNT(SUM(SUM(rt1.c2))))<=(COUNT(rt1.c1))))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((LIKELY(vt1.c0)))>=((0.13559563079776982)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((LIKELY(vt1.c0)))>=((0.13559563079776982)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((((LIKELY(vt1.c0)))>=((0.13559563079776982)))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) NOT NULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((NOT (((vt1.c0) NOT NULL)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((NOT (((vt1.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 WHERE ((((CAST(rt1.c2 AS INTEGER)))>((((rt1.c0) NOTNULL))))) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT ((((CAST(rt1.c2 AS INTEGER)))>((((rt1.c0) NOTNULL))))))) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE ((((((CAST(rt1.c2 AS INTEGER)))>((((rt1.c0) NOTNULL))))) ISNULL)) GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1, vt1.c0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1, vt1.c0 HAVING vt1.c0 UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1, vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1, vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL rt1.c2, rt1.c0, rt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1, vt1.c0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1, vt1.c0 HAVING vt1.c0 UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1, vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1, vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL rt1.c2, rt1.c0, rt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1, vt1.c0;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN ())) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((vt1.c0 COLLATE BINARY IN ())))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0 COLLATE BINARY IN ())) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CASE WHEN ((vt1.c0)LIKE(vt1.c0)) THEN (((vt1.c0))>=((vt1.c0))) END) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CASE WHEN ((vt1.c0)LIKE(vt1.c0)) THEN (((vt1.c0))>=((vt1.c0))) END))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CASE WHEN ((vt1.c0)LIKE(vt1.c0)) THEN (((vt1.c0))>=((vt1.c0))) END) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (INSTR(vt1.c0, ((vt1.c0) NOTNULL))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (INSTR(vt1.c0, ((vt1.c0) NOTNULL))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((INSTR(vt1.c0, ((vt1.c0) NOTNULL))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2 HAVING AVG((('-406611085')&(''))) UNION ALL SELECT ALL rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2 HAVING (NOT (AVG((('-406611085')&(''))))) UNION ALL SELECT rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2 HAVING ((AVG((('-406611085')&('')))) ISNULL);
SELECT rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2 HAVING AVG((('-406611085')&(''))) UNION ALL SELECT ALL rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2 HAVING (NOT (AVG((('-406611085')&(''))))) UNION ALL SELECT rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2 HAVING ((AVG((('-406611085')&('')))) ISNULL);
SELECT rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM vt1, rt1;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM vt1, rt1 WHERE (UPPER((NOT (0.11385003891930412)))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM vt1, rt1 WHERE ((NOT (UPPER((NOT (0.11385003891930412)))))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM vt1, rt1 WHERE (((UPPER((NOT (0.11385003891930412)))) ISNULL));
SELECT rt1.c1, rt1.c2, rt1.c0 FROM vt1, rt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (vt1.c0 COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0 COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (x'') GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (x''))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (((x'') ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, vt1.c0, rt1.c2, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, vt1.c0, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, vt1.c0, rt1.c2, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, vt1.c0, rt1.c2, rt1.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL rt1.c1, vt1.c0, rt1.c2, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, vt1.c0, rt1.c2, rt1.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT rt1.c1, vt1.c0, rt1.c2, rt1.c0 FROM vt1, rt1 GROUP BY rt1.c1, vt1.c0, rt1.c2, rt1.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ('2087208450') UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ('2087208450'))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((('2087208450') ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE (CAST(((rt1.c2) ISNULL) AS REAL)) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT (CAST(((rt1.c2) ISNULL) AS REAL)))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE (((CAST(((rt1.c2) ISNULL) AS REAL)) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT ALL rt1.c0, vt1.c0, rt1.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN vt1 ON CHAR(x'', rt1.c0, CAST(rt1.c1 AS TEXT)) GROUP BY rt1.c0, vt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c0, vt1.c0, rt1.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN vt1 ON CHAR(x'', rt1.c0, CAST(rt1.c1 AS TEXT)) WHERE (rt1.c1 COLLATE RTRIM) GROUP BY rt1.c0, vt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c0, vt1.c0, rt1.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN vt1 ON CHAR(x'', rt1.c0, CAST(rt1.c1 AS TEXT)) WHERE ((NOT (rt1.c1 COLLATE RTRIM))) GROUP BY rt1.c0, vt1.c0, rt1.c2, rt1.c1 UNION SELECT rt1.c0, vt1.c0, rt1.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN vt1 ON CHAR(x'', rt1.c0, CAST(rt1.c1 AS TEXT)) WHERE (((rt1.c1 COLLATE RTRIM) ISNULL)) GROUP BY rt1.c0, vt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, vt1.c0, rt1.c2, rt1.c1 FROM rt1 LEFT OUTER JOIN vt1 ON CHAR(x'', rt1.c0, CAST(rt1.c1 AS TEXT)) GROUP BY rt1.c0, vt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, vt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c0, vt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, vt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c0, vt1.c0, rt1.c1, rt1.c2 HAVING (((COUNT(*)) NOT BETWEEN (x'b577') AND (rt1.c1)) IN ()) UNION ALL SELECT ALL rt1.c0, vt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1 NOT INDEXED GROUP BY rt1.c0, vt1.c0, rt1.c1, rt1.c2 HAVING (NOT ((((COUNT(*)) NOT BETWEEN (x'b577') AND (rt1.c1)) IN ()))) UNION ALL SELECT ALL rt1.c0, vt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c0, vt1.c0, rt1.c1, rt1.c2 HAVING (((((COUNT(*)) NOT BETWEEN (x'b577') AND (rt1.c1)) IN ())) ISNULL);
SELECT ALL rt1.c0, vt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c0, vt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, vt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c0, vt1.c0, rt1.c1, rt1.c2 HAVING (((COUNT(*)) NOT BETWEEN (x'b577') AND (rt1.c1)) IN ()) UNION ALL SELECT ALL rt1.c0, vt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1 NOT INDEXED GROUP BY rt1.c0, vt1.c0, rt1.c1, rt1.c2 HAVING (NOT ((((COUNT(*)) NOT BETWEEN (x'b577') AND (rt1.c1)) IN ()))) UNION ALL SELECT ALL rt1.c0, vt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c0, vt1.c0, rt1.c1, rt1.c2 HAVING (((((COUNT(*)) NOT BETWEEN (x'b577') AND (rt1.c1)) IN ())) ISNULL);
SELECT ALL rt1.c0, vt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c0, vt1.c0, rt1.c1, rt1.c2;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0xffffffffee376377 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))<=((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0xffffffffee376377 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))<=((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0xffffffffee376377 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))<=((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(x'94b4' AS BLOB)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(x'94b4' AS BLOB)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(x'94b4' AS BLOB)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0)/(vt1.c0))) IS TRUE)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)/(vt1.c0))) IS TRUE)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0)/(vt1.c0))) IS TRUE)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt1.c1, rt1.c0 FROM vt1 CROSS JOIN rt1 ON ((0.18420906763662126) NOT NULL) COLLATE NOCASE GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM vt1 CROSS JOIN rt1 ON ((0.18420906763662126) NOT NULL) COLLATE NOCASE GROUP BY rt1.c1, rt1.c0 HAVING CASE TOTAL(COUNT(*))  WHEN ((MIN(TOTAL(vt1.c0))) NOT BETWEEN (rt1.c2) AND (rt1.c2)) THEN MAX(rt1.c0) WHEN MIN(GROUP_CONCAT(rt1.c0)) THEN CAST(COUNT(*) AS NUMERIC) WHEN MAX(TOTAL(rt1.c1)) THEN ((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)) ELSE ((rt1.c1) NOT BETWEEN (rt1.c2) AND (x'')) END UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM vt1 CROSS JOIN rt1 ON ((0.18420906763662126) NOT NULL) COLLATE NOCASE GROUP BY rt1.c1, rt1.c0 HAVING (NOT (CASE TOTAL(COUNT(*))  WHEN ((MIN(TOTAL(vt1.c0))) NOT BETWEEN (rt1.c2) AND (rt1.c2)) THEN MAX(rt1.c0) WHEN MIN(GROUP_CONCAT(rt1.c0)) THEN CAST(COUNT(*) AS NUMERIC) WHEN MAX(TOTAL(rt1.c1)) THEN ((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)) ELSE ((rt1.c1) NOT BETWEEN (rt1.c2) AND (x'')) END)) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM vt1 CROSS JOIN rt1 ON ((0.18420906763662126) NOT NULL) COLLATE NOCASE GROUP BY rt1.c1, rt1.c0 HAVING ((CASE TOTAL(COUNT(*))  WHEN ((MIN(TOTAL(vt1.c0))) NOT BETWEEN (rt1.c2) AND (rt1.c2)) THEN MAX(rt1.c0) WHEN MIN(GROUP_CONCAT(rt1.c0)) THEN CAST(COUNT(*) AS NUMERIC) WHEN MAX(TOTAL(rt1.c1)) THEN ((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)) ELSE ((rt1.c1) NOT BETWEEN (rt1.c2) AND (x'')) END) ISNULL);
SELECT rt1.c2, rt1.c1 FROM rt1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE (NULL) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE (((NULL) ISNULL));
SELECT rt1.c2, rt1.c1 FROM rt1;
SELECT DISTINCT * FROM rt1 NATURAL JOIN vt1;
SELECT DISTINCT * FROM rt1 NATURAL JOIN vt1 WHERE (rt1.c1) UNION SELECT DISTINCT * FROM rt1 NATURAL JOIN vt1 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT * FROM rt1 NATURAL JOIN vt1 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT * FROM rt1 NATURAL JOIN vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ('0.9974535804654432') GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ('0.9974535804654432'))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((('0.9974535804654432') ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(((MIN(AVG(vt1.c0))) BETWEEN (GROUP_CONCAT(MAX(vt1.c0))) AND (vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(((MIN(AVG(vt1.c0))) BETWEEN (GROUP_CONCAT(MAX(vt1.c0))) AND (vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(((MIN(AVG(vt1.c0))) BETWEEN (GROUP_CONCAT(MAX(vt1.c0))) AND (vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((+ (vt1.c0))) BETWEEN (((vt1.c0)+(vt1.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((+ (vt1.c0))) BETWEEN (((vt1.c0)+(vt1.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((+ (vt1.c0))) BETWEEN (((vt1.c0)+(vt1.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c1 FROM rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c2) AND ('1125853659')))IS(rt1.c1 COLLATE NOCASE))) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE ((NOT (((((rt1.c1) NOT BETWEEN (rt1.c2) AND ('1125853659')))IS(rt1.c1 COLLATE NOCASE))))) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE (((((((rt1.c1) NOT BETWEEN (rt1.c2) AND ('1125853659')))IS(rt1.c1 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM vt1, rt1 WHERE (((((rt1.c1)*(vt1.c0))) IS TRUE)) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM vt1, rt1 WHERE ((NOT (((((rt1.c1)*(vt1.c0))) IS TRUE)))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM vt1, rt1 WHERE (((((((rt1.c1)*(vt1.c0))) IS TRUE)) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((NULL IN ()))>(((MIN(TOTAL(COUNT(*)))) BETWEEN (GROUP_CONCAT(vt1.c0)) AND (MAX(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((NULL IN ()))>(((MIN(TOTAL(COUNT(*)))) BETWEEN (GROUP_CONCAT(vt1.c0)) AND (MAX(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((NULL IN ()))>(((MIN(TOTAL(COUNT(*)))) BETWEEN (GROUP_CONCAT(vt1.c0)) AND (MAX(vt1.c0)))))) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (json_extract((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))), ((rt1.c2) NOT NULL))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (json_extract((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))), ((rt1.c2) NOT NULL))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((json_extract((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))), ((rt1.c2) NOT NULL))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1 FROM vt1, rt1;
SELECT DISTINCT rt1.c0, rt1.c1 FROM vt1, rt1 WHERE (((((ABS(rt1.c1))OR(((((((((vt1.c0)AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c1)))))AND(((rt1.c1)>>(rt1.c0))))) UNION SELECT DISTINCT rt1.c0, rt1.c1 FROM vt1, rt1 WHERE ((NOT (((((ABS(rt1.c1))OR(((((((((vt1.c0)AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c1)))))AND(((rt1.c1)>>(rt1.c0))))))) UNION SELECT DISTINCT rt1.c0, rt1.c1 FROM vt1, rt1 WHERE (((((((ABS(rt1.c1))OR(((((((((vt1.c0)AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c1)))))AND(((rt1.c1)>>(rt1.c0))))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1 FROM vt1, rt1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 WHERE ((((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((x'f064'))))>=(rt1.c2))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE ((NOT ((((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((x'f064'))))>=(rt1.c2))))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE ((((((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((x'f064'))))>=(rt1.c2))) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((~ (vt1.c0))) NOT BETWEEN (MIN(vt1.c0)) AND (MAX(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((~ (vt1.c0))) NOT BETWEEN (MIN(vt1.c0)) AND (MAX(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((~ (vt1.c0))) NOT BETWEEN (MIN(vt1.c0)) AND (MAX(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((~ (vt1.c0))) NOT BETWEEN (MIN(vt1.c0)) AND (MAX(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((~ (vt1.c0))) NOT BETWEEN (MIN(vt1.c0)) AND (MAX(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((~ (vt1.c0))) NOT BETWEEN (MIN(vt1.c0)) AND (MAX(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt1.c2 FROM vt1 INNER JOIN rt1 ON (((((rt1.c0) IS FALSE)))!=((((rt1.c1) NOTNULL))));
SELECT rt1.c2 FROM vt1 INNER JOIN rt1 ON (((((rt1.c0) IS FALSE)))<>((((rt1.c1) NOTNULL)))) WHERE ((((rt1.c0)) BETWEEN (((NOT (x'')))) AND ((rt1.c2 COLLATE RTRIM)))) UNION ALL SELECT ALL rt1.c2 FROM vt1 INNER JOIN rt1 ON (((((rt1.c0) IS FALSE)))!=((((rt1.c1) NOTNULL)))) WHERE ((NOT ((((rt1.c0)) BETWEEN (((NOT (x'')))) AND ((rt1.c2 COLLATE RTRIM)))))) UNION ALL SELECT rt1.c2 FROM vt1 INNER JOIN rt1 ON (((((rt1.c0) IS FALSE)))!=((((rt1.c1) NOTNULL)))) WHERE ((((((rt1.c0)) BETWEEN (((NOT (x'')))) AND ((rt1.c2 COLLATE RTRIM)))) ISNULL));
SELECT rt1.c2 FROM vt1 INNER JOIN rt1 ON (((((rt1.c0) IS FALSE)))!=((((rt1.c1) NOTNULL))));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0)&(vt1.c0)) IN ())) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)&(vt1.c0)) IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)&(vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 END COLLATE NOCASE) GROUP BY rt1.c2, rt1.c0 UNION SELECT rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 END COLLATE NOCASE))) GROUP BY rt1.c2, rt1.c0 UNION SELECT rt1.c2, rt1.c0 FROM rt1 WHERE (((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 END COLLATE NOCASE) ISNULL)) GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c0, vt1.c0, rt1.c2, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c0, vt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c0, vt1.c0, rt1.c2, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c0, vt1.c0, rt1.c2, rt1.c1 HAVING SUM(COUNT(vt1.c0)) UNION ALL SELECT rt1.c0, vt1.c0, rt1.c2, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c0, vt1.c0, rt1.c2, rt1.c1 HAVING (NOT (SUM(COUNT(vt1.c0)))) UNION ALL SELECT ALL rt1.c0, vt1.c0, rt1.c2, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c0, vt1.c0, rt1.c2, rt1.c1 HAVING ((SUM(COUNT(vt1.c0))) ISNULL);
SELECT * FROM vt1, rt1;
SELECT * FROM vt1, rt1 WHERE (CASE WHEN NULLIF(rt1.c1, vt1.c0) THEN ((vt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)) ELSE (((rt1.c2, vt1.c0, rt1.c1))>((NULL, rt1.c1, rt1.c0))) END) UNION ALL SELECT ALL * FROM vt1, rt1 WHERE ((NOT (CASE WHEN NULLIF(rt1.c1, vt1.c0) THEN ((vt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)) ELSE (((rt1.c2, vt1.c0, rt1.c1))>((NULL, rt1.c1, rt1.c0))) END))) UNION ALL SELECT * FROM vt1, rt1 WHERE (((CASE WHEN NULLIF(rt1.c1, vt1.c0) THEN ((vt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)) ELSE (((rt1.c2, vt1.c0, rt1.c1))>((NULL, rt1.c1, rt1.c0))) END) ISNULL));
SELECT * FROM vt1, rt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (TRIM((vt1.c0 IN ()), ((x'b22a')<(vt1.c0)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (TRIM((vt1.c0 IN ()), ((x'b22a')<(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((TRIM((vt1.c0 IN ()), ((x'b22a')<(vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(TRIM(vt1.c0, vt1.c0) AS REAL)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(TRIM(vt1.c0, vt1.c0) AS REAL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CAST(TRIM(vt1.c0, vt1.c0) AS REAL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c0;
SELECT ALL vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c0 HAVING (((TOTAL(AVG(COUNT(MIN(rt1.c1))))))>=(((((COUNT(*))) NOT BETWEEN ((GROUP_CONCAT(TOTAL(COUNT(*))))) AND ((COUNT(*))))))) UNION ALL SELECT ALL vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c0 HAVING (NOT ((((TOTAL(AVG(COUNT(MIN(rt1.c1))))))>=(((((COUNT(*))) NOT BETWEEN ((GROUP_CONCAT(TOTAL(COUNT(*))))) AND ((COUNT(*))))))))) UNION ALL SELECT vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c0 HAVING (((((TOTAL(AVG(COUNT(MIN(rt1.c1))))))>=(((((COUNT(*))) NOT BETWEEN ((GROUP_CONCAT(TOTAL(COUNT(*))))) AND ((COUNT(*)))))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((vt1.c0 IN (((vt1.c0) NOTNULL), vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((vt1.c0 IN (((vt1.c0) NOTNULL), vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN (((vt1.c0) NOTNULL), vt1.c0))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE (((rt1.c0)+(vt1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT (((rt1.c0)+(vt1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE (((((rt1.c0)+(vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT vt1.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT ALL vt1.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt1, rt1 WHERE ((~ (rt1.c2))) GROUP BY vt1.c0, rt1.c2, rt1.c1, rt1.c0 UNION SELECT ALL vt1.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt1, rt1 WHERE ((NOT ((~ (rt1.c2))))) GROUP BY vt1.c0, rt1.c2, rt1.c1, rt1.c0 UNION SELECT ALL vt1.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt1, rt1 WHERE ((((~ (rt1.c2))) ISNULL)) GROUP BY vt1.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT vt1.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, vt1.c0, rt1.c1 FROM vt1 LEFT OUTER JOIN rt1 ON (((TYPEOF(DISTINCT 0X6d3759a3), (((rt1.c0))=((vt1.c0))), (((vt1.c0, rt1.c0, rt1.c0))<=((0.6530146285487782, rt1.c0, 0X10c196b)))))!=((rt1.c1, CAST(rt1.c2 AS TEXT), NULL))) GROUP BY rt1.c2, vt1.c0, rt1.c1;
SELECT rt1.c2, vt1.c0, rt1.c1 FROM vt1 LEFT OUTER JOIN rt1 ON (((TYPEOF(DISTINCT 0X6d3759a3), (((rt1.c0))=((vt1.c0))), (((vt1.c0, rt1.c0, rt1.c0))<=((0.6530146285487782, rt1.c0, 0x10c196b)))))!=((rt1.c1, CAST(rt1.c2 AS TEXT), NULL))) GROUP BY rt1.c2, vt1.c0, rt1.c1 HAVING COUNT('2018396861') UNION ALL SELECT ALL rt1.c2, vt1.c0, rt1.c1 FROM vt1 LEFT OUTER JOIN rt1 ON (((TYPEOF(DISTINCT 0x6d3759a3), (((rt1.c0))==((vt1.c0))), (((vt1.c0, rt1.c0, rt1.c0))<=((0.6530146285487782, rt1.c0, 0X10c196b)))))<>((rt1.c1, CAST(rt1.c2 AS TEXT), NULL))) GROUP BY rt1.c2, vt1.c0, rt1.c1 HAVING (NOT (COUNT('2018396861'))) UNION ALL SELECT rt1.c2, vt1.c0, rt1.c1 FROM vt1 LEFT OUTER JOIN rt1 ON (((TYPEOF(DISTINCT 0x6d3759a3), (((rt1.c0))=((vt1.c0))), (((vt1.c0, rt1.c0, rt1.c0))<=((0.6530146285487782, rt1.c0, 0X10c196b)))))!=((rt1.c1, CAST(rt1.c2 AS TEXT), NULL))) GROUP BY rt1.c2, vt1.c0, rt1.c1 HAVING ((COUNT('2018396861')) ISNULL);
SELECT rt1.c2, vt1.c0, rt1.c1 FROM vt1 LEFT OUTER JOIN rt1 ON (((TYPEOF(DISTINCT 0X6d3759a3), (((rt1.c0))=((vt1.c0))), (((vt1.c0, rt1.c0, rt1.c0))<=((0.6530146285487782, rt1.c0, 0X10c196b)))))!=((rt1.c1, CAST(rt1.c2 AS TEXT), NULL))) GROUP BY rt1.c2, vt1.c0, rt1.c1;
SELECT rt1.c2, vt1.c0, rt1.c1 FROM vt1 LEFT OUTER JOIN rt1 ON (((TYPEOF(DISTINCT 0X6d3759a3), (((rt1.c0))=((vt1.c0))), (((vt1.c0, rt1.c0, rt1.c0))<=((0.6530146285487782, rt1.c0, 0x10c196b)))))!=((rt1.c1, CAST(rt1.c2 AS TEXT), NULL))) GROUP BY rt1.c2, vt1.c0, rt1.c1 HAVING COUNT('2018396861') UNION ALL SELECT ALL rt1.c2, vt1.c0, rt1.c1 FROM vt1 LEFT OUTER JOIN rt1 ON (((TYPEOF(DISTINCT 0x6d3759a3), (((rt1.c0))==((vt1.c0))), (((vt1.c0, rt1.c0, rt1.c0))<=((0.6530146285487782, rt1.c0, 0X10c196b)))))<>((rt1.c1, CAST(rt1.c2 AS TEXT), NULL))) GROUP BY rt1.c2, vt1.c0, rt1.c1 HAVING (NOT (COUNT('2018396861'))) UNION ALL SELECT rt1.c2, vt1.c0, rt1.c1 FROM vt1 LEFT OUTER JOIN rt1 ON (((TYPEOF(DISTINCT 0x6d3759a3), (((rt1.c0))=((vt1.c0))), (((vt1.c0, rt1.c0, rt1.c0))<=((0.6530146285487782, rt1.c0, 0X10c196b)))))!=((rt1.c1, CAST(rt1.c2 AS TEXT), NULL))) GROUP BY rt1.c2, vt1.c0, rt1.c1 HAVING ((COUNT('2018396861')) ISNULL);
SELECT rt1.c2, vt1.c0, rt1.c1 FROM vt1 LEFT OUTER JOIN rt1 ON (((TYPEOF(DISTINCT 0X6d3759a3), (((rt1.c0))=((vt1.c0))), (((vt1.c0, rt1.c0, rt1.c0))<=((0.6530146285487782, rt1.c0, 0X10c196b)))))!=((rt1.c1, CAST(rt1.c2 AS TEXT), NULL))) GROUP BY rt1.c2, vt1.c0, rt1.c1;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (vt1.c0 COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0 COLLATE RTRIM))) UNION ALL SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt1.c0, vt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1;
SELECT DISTINCT rt1.c0, vt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1 WHERE ((((NULL)) BETWEEN ((NULL)) AND ((CAST(rt1.c2 AS NUMERIC))))) UNION SELECT DISTINCT rt1.c0, vt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1 NOT INDEXED WHERE ((NOT ((((NULL)) BETWEEN ((NULL)) AND ((CAST(rt1.c2 AS NUMERIC))))))) UNION SELECT DISTINCT rt1.c0, vt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1 WHERE ((((((NULL)) BETWEEN ((NULL)) AND ((CAST(rt1.c2 AS NUMERIC))))) ISNULL));
SELECT DISTINCT rt1.c0, vt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1;
SELECT vt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN vt1 ON (NOT ((+ (rt1.c1)))) GROUP BY vt1.c0, rt1.c1;
SELECT ALL vt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN vt1 ON (NOT ((+ (rt1.c1)))) WHERE (((((TRIM(DISTINCT rt1.c1, rt1.c0))AND((((1.543656146E9)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c0))))))OR(((((rt1.c0)OR(rt1.c0)))OR(vt1.c0))))) GROUP BY vt1.c0, rt1.c1 UNION SELECT ALL vt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN vt1 ON (NOT ((+ (rt1.c1)))) WHERE ((NOT (((((TRIM(DISTINCT rt1.c1, rt1.c0))AND((((1.543656146E9)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c0))))))OR(((((rt1.c0)OR(rt1.c0)))OR(vt1.c0))))))) GROUP BY vt1.c0, rt1.c1 UNION SELECT vt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN vt1 ON (NOT ((+ (rt1.c1)))) WHERE (((((((TRIM(DISTINCT rt1.c1, rt1.c0))AND((((1.543656146E9)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c0))))))OR(((((rt1.c0)OR(rt1.c0)))OR(vt1.c0))))) ISNULL)) GROUP BY vt1.c0, rt1.c1;
SELECT vt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN vt1 ON (NOT ((+ (rt1.c1)))) GROUP BY vt1.c0, rt1.c1;
SELECT vt1.c0 FROM vt1 INNER JOIN rt1 ON ((((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c0)))>>(CASE WHEN rt1.c2 THEN 0Xffffffffedf5e118 ELSE vt1.c0 END)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 INNER JOIN rt1 ON ((((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c0)))>>(CASE WHEN rt1.c2 THEN 0Xffffffffedf5e118 ELSE vt1.c0 END)) GROUP BY vt1.c0 HAVING MIN(COUNT(TOTAL(SUM(NULL)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 INNER JOIN rt1 ON ((((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c0)))>>(CASE WHEN rt1.c2 THEN 0xffffffffedf5e118 ELSE vt1.c0 END)) GROUP BY vt1.c0 HAVING (NOT (MIN(COUNT(TOTAL(SUM(NULL)))))) UNION ALL SELECT vt1.c0 FROM vt1 INNER JOIN rt1 ON ((((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c0)))>>(CASE WHEN rt1.c2 THEN 0xffffffffedf5e118 ELSE vt1.c0 END)) GROUP BY vt1.c0 HAVING ((MIN(COUNT(TOTAL(SUM(NULL))))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0) ISNULL))>(CAST(0.00302769813827497 AS TEXT)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) ISNULL))>(CAST(0.00302769813827497 AS TEXT)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) ISNULL))>(CAST(0.00302769813827497 AS TEXT)))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE (((rt1.c0) IS TRUE)) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT (((rt1.c0) IS TRUE)))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE (((((rt1.c0) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 NOT INDEXED WHERE ((((((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (- (MIN(SUM(rt1.c1)))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT ((- (MIN(SUM(rt1.c1)))))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (((- (MIN(SUM(rt1.c1))))) ISNULL);
SELECT ALL vt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1;
SELECT vt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1 WHERE (0.8924709541415998) UNION ALL SELECT vt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1 WHERE ((NOT (0.8924709541415998))) UNION ALL SELECT ALL vt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1 WHERE (((0.8924709541415998) ISNULL));
SELECT ALL vt1.c0, rt1.c1, rt1.c2 FROM vt1, rt1;
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE ((((vt1.c0)>=(rt1.c2)) IN (CASE WHEN rt1.c0 THEN rt1.c0 ELSE vt1.c0 END))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT ((((vt1.c0)>=(rt1.c2)) IN (CASE WHEN rt1.c0 THEN rt1.c0 ELSE vt1.c0 END))))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((((((vt1.c0)>=(rt1.c2)) IN (CASE WHEN rt1.c0 THEN rt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (+ (LTRIM(rt1.c0))) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT ((+ (LTRIM(rt1.c0))))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (((+ (LTRIM(rt1.c0)))) ISNULL);
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (+ (LTRIM(rt1.c0))) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT ((+ (LTRIM(rt1.c0))))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (((+ (LTRIM(rt1.c0)))) ISNULL);
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM rt1 FULL OUTER JOIN vt1 ON ((rt1.c2)>(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))));
SELECT rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM rt1 FULL OUTER JOIN vt1 ON ((rt1.c2)>(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)))) WHERE ((((vt1.c0 IN ()))%((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))))) UNION ALL SELECT rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM rt1 FULL OUTER JOIN vt1 ON ((rt1.c2)>(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)))) WHERE ((NOT ((((vt1.c0 IN ()))%((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))))))) UNION ALL SELECT rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM rt1 FULL OUTER JOIN vt1 ON ((rt1.c2)>(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)))) WHERE ((((((vt1.c0 IN ()))%((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))))) ISNULL));
SELECT ALL rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM rt1 FULL OUTER JOIN vt1 ON ((rt1.c2)>(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))));
SELECT DISTINCT rt1.c0 FROM vt1, rt1;
SELECT DISTINCT rt1.c0 FROM vt1, rt1 WHERE (((((rt1.c2)/(rt1.c2))) BETWEEN ((((rt1.c0, vt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c1, rt1.c0)))) AND (((vt1.c0)IS(vt1.c0))))) UNION SELECT DISTINCT rt1.c0 FROM vt1, rt1 WHERE ((NOT (((((rt1.c2)/(rt1.c2))) BETWEEN ((((rt1.c0, vt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c1, rt1.c0)))) AND (((vt1.c0)IS(vt1.c0))))))) UNION SELECT DISTINCT rt1.c0 FROM vt1, rt1 WHERE (((((((rt1.c2)/(rt1.c2))) BETWEEN ((((rt1.c0, vt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c1, rt1.c0)))) AND (((vt1.c0)IS(vt1.c0))))) ISNULL));
SELECT DISTINCT rt1.c0 FROM vt1, rt1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((CASE '0.8972346065829684'  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN '5Qx+O' WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END) BETWEEN (rt1.c2 COLLATE NOCASE) AND (((rt1.c1) ISNULL)))) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (((CASE '0.8972346065829684'  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN '5Qx+O' WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END) BETWEEN (rt1.c2 COLLATE NOCASE) AND (((rt1.c1) ISNULL)))))) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((((CASE '0.8972346065829684'  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN '5Qx+O' WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END) BETWEEN (rt1.c2 COLLATE NOCASE) AND (((rt1.c1) ISNULL)))) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TRIM(DISTINCT COUNT(*) COLLATE RTRIM, COUNT(COUNT(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TRIM(DISTINCT COUNT(*) COLLATE RTRIM, COUNT(COUNT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TRIM(DISTINCT COUNT(*) COLLATE RTRIM, COUNT(COUNT(vt1.c0)))) ISNULL);
SELECT ALL * FROM vt1 NOT INDEXED;
SELECT * FROM vt1 WHERE (((((vt1.c0)||('C'))) NOT BETWEEN (((vt1.c0)<=(vt1.c0))) AND (CAST(vt1.c0 AS INTEGER)))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((vt1.c0)||('C'))) NOT BETWEEN (((vt1.c0)<=(vt1.c0))) AND (CAST(vt1.c0 AS INTEGER)))))) UNION ALL SELECT * FROM vt1 WHERE (((((((vt1.c0)||('C'))) NOT BETWEEN (((vt1.c0)<=(vt1.c0))) AND (CAST(vt1.c0 AS INTEGER)))) ISNULL));
SELECT ALL * FROM vt1 NOT INDEXED;
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt1 ON (- (x''));
SELECT DISTINCT * FROM vt1 NOT INDEXED LEFT OUTER JOIN rt1 ON (- (x'')) WHERE ((((rt1.c0)>(rt1.c2)) IN (CASE vt1.c0  WHEN rt1.c2 THEN rt1.c2 END))) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt1 ON (- (x'')) WHERE ((NOT ((((rt1.c0)>(rt1.c2)) IN (CASE vt1.c0  WHEN rt1.c2 THEN rt1.c2 END))))) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt1 ON (- (x'')) WHERE ((((((rt1.c0)>(rt1.c2)) IN (CASE vt1.c0  WHEN rt1.c2 THEN rt1.c2 END))) ISNULL));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt1 ON (- (x''));
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 WHERE (((rt1.c1)OR((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE ((NOT (((rt1.c1)OR((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))))))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE (((((rt1.c1)OR((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))))) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT vt1.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c0, rt1.c2, rt1.c1;
SELECT ALL vt1.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c0, rt1.c2, rt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c0, rt1.c2, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c0, rt1.c2, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c0, rt1.c2, rt1.c1;
SELECT ALL vt1.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c0, rt1.c2, rt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c0, rt1.c2, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c0, rt1.c2, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c0, rt1.c2, rt1.c1;
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((((((rt1.c1, x'', rt1.c0)) BETWEEN ((rt1.c0, rt1.c2, rt1.c2)) AND ((rt1.c0, rt1.c1, 0.4618686034284921))))<=(ABS('\rG1}坁N')))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT ((((((rt1.c1, x'', rt1.c0)) BETWEEN ((rt1.c0, rt1.c2, rt1.c2)) AND ((rt1.c0, rt1.c1, 0.4618686034284921))))<=(ABS('\rG1}坁N')))))) UNION ALL SELECT * FROM rt1 WHERE ((((((((rt1.c1, x'', rt1.c0)) BETWEEN ((rt1.c0, rt1.c2, rt1.c2)) AND ((rt1.c0, rt1.c1, 0.4618686034284921))))<=(ABS('\rG1}坁N')))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt1 ON ((('1924029727')<(rt1.c1)) IN ());
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt1 ON ((('1924029727')<(rt1.c1)) IN ()) WHERE ((((+ (rt1.c0)))/(((vt1.c0)*(rt1.c2))))) UNION SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt1 ON ((('1924029727')<(rt1.c1)) IN ()) WHERE ((NOT ((((+ (rt1.c0)))/(((vt1.c0)*(rt1.c2))))))) UNION SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt1 ON ((('1924029727')<(rt1.c1)) IN ()) WHERE ((((((+ (rt1.c0)))/(((vt1.c0)*(rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN vt1 ON ((('1924029727')<(rt1.c1)) IN ());
SELECT rt1.c0, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1, vt1 WHERE ((NOT (CASE WHEN rt1.c1 THEN rt1.c2 END))) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM rt1, vt1 WHERE ((NOT ((NOT (CASE WHEN rt1.c1 THEN rt1.c2 END))))) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM rt1, vt1 WHERE ((((NOT (CASE WHEN rt1.c1 THEN rt1.c2 END))) ISNULL)) GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(MAX('0.00302769813827497')) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(MAX('0.00302769813827497')))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(MAX('0.00302769813827497'))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((~ (vt1.c0)), CAST(vt1.c0 AS NUMERIC), ((vt1.c0)||(x'afe3')))) AND ((vt1.c0, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((~ (vt1.c0)), CAST(vt1.c0 AS NUMERIC), ((vt1.c0)||(x'afe3')))) AND ((vt1.c0, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((~ (vt1.c0)), CAST(vt1.c0 AS NUMERIC), ((vt1.c0)||(x'afe3')))) AND ((vt1.c0, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1, vt1;
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1, vt1 WHERE (((HEX(rt1.c1)) IS FALSE)) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1, vt1 WHERE ((NOT (((HEX(rt1.c1)) IS FALSE)))) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1, vt1 WHERE (((((HEX(rt1.c1)) IS FALSE)) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((NOT ('-1189141358')) IN ())) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((NOT ('-1189141358')) IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((NOT ('-1189141358')) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING COUNT(*) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING COUNT(*) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (SQLITE_COMPILEOPTION_GET((rt1.c0 IN ()))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (SQLITE_COMPILEOPTION_GET((rt1.c0 IN ()))))) UNION ALL SELECT * FROM rt1 WHERE (((SQLITE_COMPILEOPTION_GET((rt1.c0 IN ()))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c1, vt1.c0 FROM rt1 RIGHT OUTER JOIN vt1 ON NULL;
SELECT DISTINCT rt1.c2, rt1.c1, vt1.c0 FROM rt1 RIGHT OUTER JOIN vt1 ON NULL WHERE ((((vt1.c0) NOT BETWEEN (rt1.c1) AND (NULL)) IN (((rt1.c2)>(rt1.c0)), TOTAL_CHANGES()))) UNION SELECT DISTINCT rt1.c2, rt1.c1, vt1.c0 FROM rt1 RIGHT OUTER JOIN vt1 ON NULL WHERE ((NOT ((((vt1.c0) NOT BETWEEN (rt1.c1) AND (NULL)) IN (((rt1.c2)>(rt1.c0)), TOTAL_CHANGES()))))) UNION SELECT DISTINCT rt1.c2, rt1.c1, vt1.c0 FROM rt1 RIGHT OUTER JOIN vt1 ON NULL WHERE ((((((vt1.c0) NOT BETWEEN (rt1.c1) AND (NULL)) IN (((rt1.c2)>(rt1.c0)), TOTAL_CHANGES()))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1, vt1.c0 FROM rt1 RIGHT OUTER JOIN vt1 ON NULL;
SELECT rt1.c1, rt1.c0, vt1.c0, rt1.c2 FROM rt1 NATURAL JOIN vt1 GROUP BY rt1.c1, rt1.c0, vt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, vt1.c0, rt1.c2 FROM rt1 NATURAL JOIN vt1 WHERE (((((x'')AND(rt1.c1)))OR(rt1.c1)) COLLATE NOCASE) GROUP BY rt1.c1, rt1.c0, vt1.c0, rt1.c2 UNION SELECT rt1.c1, rt1.c0, vt1.c0, rt1.c2 FROM rt1 NATURAL JOIN vt1 WHERE ((NOT (((((x'')AND(rt1.c1)))OR(rt1.c1)) COLLATE NOCASE))) GROUP BY rt1.c1, rt1.c0, vt1.c0, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c0, vt1.c0, rt1.c2 FROM rt1 NATURAL JOIN vt1 WHERE (((((((x'')AND(rt1.c1)))OR(rt1.c1)) COLLATE NOCASE) ISNULL)) GROUP BY rt1.c1, rt1.c0, vt1.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, vt1.c0, rt1.c2 FROM rt1 NATURAL JOIN vt1 GROUP BY rt1.c1, rt1.c0, vt1.c0, rt1.c2;
SELECT rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2 HAVING COUNT(*) UNION ALL SELECT rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2 HAVING COUNT(*) UNION ALL SELECT rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c2 FROM vt1, rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (((((rt1.c1) NOTNULL)) IS TRUE)) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (((((rt1.c1) NOTNULL)) IS TRUE)))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (((((((rt1.c1) NOTNULL)) IS TRUE)) ISNULL));
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE ((NULLIF(DISTINCT rt1.c0, 'uydKW]rt') IN ())) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT ((NULLIF(DISTINCT rt1.c0, 'uydKW]rt') IN ())))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((((NULLIF(DISTINCT rt1.c0, 'uydKW]rt') IN ())) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT ALL vt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1;
SELECT vt1.c0, rt1.c1 FROM vt1, rt1 WHERE (CAST(((rt1.c0) BETWEEN (x'') AND (vt1.c0)) AS BLOB)) GROUP BY vt1.c0, rt1.c1 UNION SELECT ALL vt1.c0, rt1.c1 FROM vt1, rt1 WHERE ((NOT (CAST(((rt1.c0) BETWEEN (x'') AND (vt1.c0)) AS BLOB)))) GROUP BY vt1.c0, rt1.c1 UNION SELECT ALL vt1.c0, rt1.c1 FROM vt1, rt1 WHERE (((CAST(((rt1.c0) BETWEEN (x'') AND (vt1.c0)) AS BLOB)) ISNULL)) GROUP BY vt1.c0, rt1.c1;
SELECT ALL vt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c0 HAVING (((MIN(rt1.c2))) BETWEEN ((SUM(rt1.c2))) AND ((GROUP_CONCAT(TOTAL(NULL))))) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c0 HAVING (NOT ((((MIN(rt1.c2))) BETWEEN ((SUM(rt1.c2))) AND ((GROUP_CONCAT(TOTAL(NULL))))))) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c0 HAVING (((((MIN(rt1.c2))) BETWEEN ((SUM(rt1.c2))) AND ((GROUP_CONCAT(TOTAL(NULL)))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0)/(vt1.c0)) IN ())) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)/(vt1.c0)) IN ())))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)/(vt1.c0)) IN ())) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (NULL) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM rt1, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt1, vt1 WHERE ((~ (CASE WHEN rt1.c1 THEN rt1.c2 END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM rt1, vt1 WHERE ((NOT ((~ (CASE WHEN rt1.c1 THEN rt1.c2 END))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM rt1 NOT INDEXED, vt1 WHERE ((((~ (CASE WHEN rt1.c1 THEN rt1.c2 END))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt1, vt1 GROUP BY vt1.c0;
SELECT rt1.c2 FROM rt1, vt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1, vt1 GROUP BY rt1.c2 HAVING CAST(TOTAL(vt1.c0) AS REAL) UNION ALL SELECT rt1.c2 FROM rt1, vt1 GROUP BY rt1.c2 HAVING (NOT (CAST(TOTAL(vt1.c0) AS REAL))) UNION ALL SELECT ALL rt1.c2 FROM rt1, vt1 GROUP BY rt1.c2 HAVING ((CAST(TOTAL(vt1.c0) AS REAL)) ISNULL);
SELECT rt1.c2 FROM rt1, vt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1, vt1 GROUP BY rt1.c2 HAVING CAST(TOTAL(vt1.c0) AS REAL) UNION ALL SELECT rt1.c2 FROM rt1, vt1 GROUP BY rt1.c2 HAVING (NOT (CAST(TOTAL(vt1.c0) AS REAL))) UNION ALL SELECT ALL rt1.c2 FROM rt1, vt1 GROUP BY rt1.c2 HAVING ((CAST(TOTAL(vt1.c0) AS REAL)) ISNULL);
SELECT rt1.c2 FROM rt1, vt1 GROUP BY rt1.c2;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((((('')GLOB(rt1.c1))))>((((rt1.c1)IS('390627733')))))) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (((((('')GLOB(rt1.c1))))>((((rt1.c1)IS('390627733')))))))) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((((((('')GLOB(rt1.c1))))>((((rt1.c1)IS('390627733')))))) ISNULL));
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE ((((rt1.c1)|('')) IN ())) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT ((((rt1.c1)|('')) IN ())))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((((((rt1.c1)|('')) IN ())) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT ALL rt1.c1, rt1.c0, vt1.c0, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, vt1.c0, rt1.c2 FROM vt1, rt1 WHERE (((CASE WHEN x'c8f5' THEN rt1.c1 END) BETWEEN ((- (rt1.c0))) AND (CAST(rt1.c0 AS NUMERIC)))) GROUP BY rt1.c1, rt1.c0, vt1.c0, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c0, vt1.c0, rt1.c2 FROM vt1, rt1 WHERE ((NOT (((CASE WHEN x'c8f5' THEN rt1.c1 END) BETWEEN ((- (rt1.c0))) AND (CAST(rt1.c0 AS NUMERIC)))))) GROUP BY rt1.c1, rt1.c0, vt1.c0, rt1.c2 UNION SELECT rt1.c1, rt1.c0, vt1.c0, rt1.c2 FROM vt1, rt1 WHERE (((((CASE WHEN x'c8f5' THEN rt1.c1 END) BETWEEN ((- (rt1.c0))) AND (CAST(rt1.c0 AS NUMERIC)))) ISNULL)) GROUP BY rt1.c1, rt1.c0, vt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, vt1.c0, rt1.c2 FROM vt1, rt1 GROUP BY rt1.c1, rt1.c0, vt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING COUNT(*) UNION ALL SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING COUNT(*) UNION ALL SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((- ((('') NOTNULL)))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((- ((('') NOTNULL)))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((- ((('') NOTNULL)))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (x'') UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((x'') ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT ALL rt1.c2, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM vt1, rt1 WHERE (CASE ((((rt1.c2)OR(rt1.c2)))OR(rt1.c2))  WHEN 0.8151596639208875 THEN ABS(rt1.c1) ELSE ((((vt1.c0)AND(vt1.c0)))OR(rt1.c0)) END) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM vt1, rt1 WHERE ((NOT (CASE ((((rt1.c2)OR(rt1.c2)))OR(rt1.c2))  WHEN 0.8151596639208875 THEN ABS(rt1.c1) ELSE ((((vt1.c0)AND(vt1.c0)))OR(rt1.c0)) END))) GROUP BY rt1.c2, rt1.c1 UNION SELECT rt1.c2, rt1.c1 FROM vt1, rt1 WHERE (((CASE ((((rt1.c2)OR(rt1.c2)))OR(rt1.c2))  WHEN 0.8151596639208875 THEN ABS(rt1.c1) ELSE ((((vt1.c0)AND(vt1.c0)))OR(rt1.c0)) END) ISNULL)) GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING MAX(TOTAL(SUM(MIN(''))) COLLATE NOCASE) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (MAX(TOTAL(SUM(MIN(''))) COLLATE NOCASE))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((MAX(TOTAL(SUM(MIN(''))) COLLATE NOCASE)) ISNULL);
SELECT rt1.c1, rt1.c0, vt1.c0, rt1.c2 FROM rt1, vt1;
SELECT ALL rt1.c1, rt1.c0, vt1.c0, rt1.c2 FROM rt1, vt1 WHERE ((NOT (rt1.c0))) UNION ALL SELECT rt1.c1, rt1.c0, vt1.c0, rt1.c2 FROM rt1, vt1 WHERE ((NOT ((NOT (rt1.c0))))) UNION ALL SELECT ALL rt1.c1, rt1.c0, vt1.c0, rt1.c2 FROM rt1, vt1 WHERE ((((NOT (rt1.c0))) ISNULL));
SELECT rt1.c1, rt1.c0, vt1.c0, rt1.c2 FROM rt1, vt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (INSTR(rt1.c1, CAST(rt1.c0 AS BLOB))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (INSTR(rt1.c1, CAST(rt1.c0 AS BLOB))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((INSTR(rt1.c1, CAST(rt1.c0 AS BLOB))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1, vt1.c0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1, vt1.c0 FROM vt1, rt1 WHERE (((CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 END) NOT BETWEEN (((vt1.c0)<<(rt1.c1))) AND (rt1.c1 COLLATE RTRIM))) GROUP BY rt1.c2, rt1.c0, rt1.c1, vt1.c0 UNION SELECT rt1.c2, rt1.c0, rt1.c1, vt1.c0 FROM vt1, rt1 WHERE ((NOT (((CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 END) NOT BETWEEN (((vt1.c0)<<(rt1.c1))) AND (rt1.c1 COLLATE RTRIM))))) GROUP BY rt1.c2, rt1.c0, rt1.c1, vt1.c0 UNION SELECT rt1.c2, rt1.c0, rt1.c1, vt1.c0 FROM vt1, rt1 WHERE (((((CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 END) NOT BETWEEN (((vt1.c0)<<(rt1.c1))) AND (rt1.c1 COLLATE RTRIM))) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c1, vt1.c0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1, vt1.c0 FROM vt1, rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1, vt1.c0;
SELECT ALL vt1.c0 FROM rt1 FULL OUTER JOIN vt1 ON vt1.c0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt1 FULL OUTER JOIN vt1 ON vt1.c0 GROUP BY vt1.c0 HAVING ((CAST(vt1.c0 AS INTEGER))>=(GROUP_CONCAT(MIN(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM rt1 FULL OUTER JOIN vt1 ON vt1.c0 GROUP BY vt1.c0 HAVING (NOT (((CAST(vt1.c0 AS INTEGER))>=(GROUP_CONCAT(MIN(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM rt1 FULL OUTER JOIN vt1 ON vt1.c0 GROUP BY vt1.c0 HAVING ((((CAST(vt1.c0 AS INTEGER))>=(GROUP_CONCAT(MIN(vt1.c0))))) ISNULL);
SELECT rt1.c0, vt1.c0 FROM vt1, rt1;
SELECT ALL rt1.c0, vt1.c0 FROM vt1, rt1 WHERE ((((rt1.c1, NULL, rt1.c2, vt1.c0, rt1.c2)) BETWEEN ((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)), CASE WHEN vt1.c0 THEN rt1.c0 END, ((rt1.c2)IS NOT(rt1.c1)), (((rt1.c0, vt1.c0, rt1.c0))!=((vt1.c0, rt1.c0, rt1.c1))), ((rt1.c2)/(rt1.c1)))) AND (((((((((('1034551367')OR(rt1.c0)))AND(rt1.c2)))OR(NULL)))OR(vt1.c0)), (('737398876') IS TRUE), ((rt1.c0)||(rt1.c0)), CAST(rt1.c0 AS NUMERIC), ((vt1.c0) IS TRUE))))) UNION ALL SELECT rt1.c0, vt1.c0 FROM vt1, rt1 WHERE ((NOT ((((rt1.c1, NULL, rt1.c2, vt1.c0, rt1.c2)) BETWEEN ((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)), CASE WHEN vt1.c0 THEN rt1.c0 END, ((rt1.c2)IS NOT(rt1.c1)), (((rt1.c0, vt1.c0, rt1.c0))!=((vt1.c0, rt1.c0, rt1.c1))), ((rt1.c2)/(rt1.c1)))) AND (((((((((('1034551367')OR(rt1.c0)))AND(rt1.c2)))OR(NULL)))OR(vt1.c0)), (('737398876') IS TRUE), ((rt1.c0)||(rt1.c0)), CAST(rt1.c0 AS NUMERIC), ((vt1.c0) IS TRUE))))))) UNION ALL SELECT ALL rt1.c0, vt1.c0 FROM vt1, rt1 WHERE ((((((rt1.c1, NULL, rt1.c2, vt1.c0, rt1.c2)) BETWEEN ((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)), CASE WHEN vt1.c0 THEN rt1.c0 END, ((rt1.c2)IS NOT(rt1.c1)), (((rt1.c0, vt1.c0, rt1.c0))<>((vt1.c0, rt1.c0, rt1.c1))), ((rt1.c2)/(rt1.c1)))) AND (((((((((('1034551367')OR(rt1.c0)))AND(rt1.c2)))OR(NULL)))OR(vt1.c0)), (('737398876') IS TRUE), ((rt1.c0)||(rt1.c0)), CAST(rt1.c0 AS NUMERIC), ((vt1.c0) IS TRUE))))) ISNULL));
SELECT rt1.c0, vt1.c0 FROM vt1, rt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST(((vt1.c0)>>(vt1.c0)) AS REAL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST(((vt1.c0)>>(vt1.c0)) AS REAL)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST(((vt1.c0)>>(vt1.c0)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((~ (vt1.c0)) IN ())) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((~ (vt1.c0)) IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((~ (vt1.c0)) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, rt1.c2 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c2;
SELECT ALL vt1.c0, rt1.c2 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c2 HAVING MAX(MIN(TOTAL(AVG(rt1.c0)))) UNION ALL SELECT ALL vt1.c0, rt1.c2 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c2 HAVING (NOT (MAX(MIN(TOTAL(AVG(rt1.c0)))))) UNION ALL SELECT vt1.c0, rt1.c2 FROM rt1, vt1 GROUP BY vt1.c0, rt1.c2 HAVING ((MAX(MIN(TOTAL(AVG(rt1.c0))))) ISNULL);
SELECT rt1.c0 FROM rt1, vt1;
SELECT rt1.c0 FROM rt1, vt1 WHERE (rt1.c2) UNION ALL SELECT ALL rt1.c0 FROM rt1, vt1 WHERE ((NOT (rt1.c2))) UNION ALL SELECT rt1.c0 FROM rt1, vt1 WHERE (((rt1.c2) ISNULL));
SELECT rt1.c0 FROM rt1, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((load_extension(NULL, vt1.c0))OR(NULL)))AND(vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((load_extension(NULL, vt1.c0))OR(NULL)))AND(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((load_extension(NULL, vt1.c0))OR(NULL)))AND(vt1.c0))) ISNULL));
SELECT ALL rt1.c0, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c0, vt1.c0;
SELECT rt1.c0, vt1.c0 FROM rt1, vt1 WHERE ((((((((((vt1.c0)OR(rt1.c0)))AND(vt1.c0)))AND(rt1.c1)))OR(rt1.c0)) IN ())) GROUP BY rt1.c0, vt1.c0 UNION SELECT ALL rt1.c0, vt1.c0 FROM rt1, vt1 WHERE ((NOT ((((((((((vt1.c0)OR(rt1.c0)))AND(vt1.c0)))AND(rt1.c1)))OR(rt1.c0)) IN ())))) GROUP BY rt1.c0, vt1.c0 UNION SELECT ALL rt1.c0, vt1.c0 FROM rt1, vt1 WHERE ((((((((((((vt1.c0)OR(rt1.c0)))AND(vt1.c0)))AND(rt1.c1)))OR(rt1.c0)) IN ())) ISNULL)) GROUP BY rt1.c0, vt1.c0;
SELECT ALL rt1.c0, vt1.c0 FROM rt1, vt1 GROUP BY rt1.c0, vt1.c0;
SELECT rt1.c2, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c1 HAVING ((((AVG(AVG(TOTAL(MAX(rt1.c0)))))AND(AVG(rt1.c1))))OR(COUNT(*))) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (((((AVG(AVG(TOTAL(MAX(rt1.c0)))))AND(AVG(rt1.c1))))OR(COUNT(*))))) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1, vt1 GROUP BY rt1.c2, rt1.c1 HAVING ((((((AVG(AVG(TOTAL(MAX(rt1.c0)))))AND(AVG(rt1.c1))))OR(COUNT(*)))) ISNULL);
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((~ (CASE rt1.c1  WHEN 'a[' THEN rt1.c2 END))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT ((~ (CASE rt1.c1  WHEN 'a[' THEN rt1.c2 END))))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((((~ (CASE rt1.c1  WHEN 'a[' THEN rt1.c2 END))) ISNULL));
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (CASE LOWER(DISTINCT rt1.c1)  WHEN CASE rt1.c1  WHEN rt1.c0 THEN 0.7521405989942767 ELSE rt1.c0 END THEN CASE NULL  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END END) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (CASE LOWER(DISTINCT rt1.c1)  WHEN CASE rt1.c1  WHEN rt1.c0 THEN 0.7521405989942767 ELSE rt1.c0 END THEN CASE NULL  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END END))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((CASE LOWER(DISTINCT rt1.c1)  WHEN CASE rt1.c1  WHEN rt1.c0 THEN 0.7521405989942767 ELSE rt1.c0 END THEN CASE NULL  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END END) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))<=(CAST(vt1.c0 AS TEXT)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))<=(CAST(vt1.c0 AS TEXT)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))<=(CAST(vt1.c0 AS TEXT)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL MIN(x'') FROM rt1 ORDER BY ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)))>=((rt1.c1 IN (rt1.c1, rt1.c0)))) DESC;
SELECT ALL * FROM vt1, rt1;
SELECT ALL * FROM vt1, rt1 WHERE (CAST(ABS(DISTINCT vt1.c0) AS REAL)) UNION ALL SELECT ALL * FROM vt1, rt1 WHERE ((NOT (CAST(ABS(DISTINCT vt1.c0) AS REAL)))) UNION ALL SELECT * FROM vt1, rt1 WHERE (((CAST(ABS(DISTINCT vt1.c0) AS REAL)) ISNULL));
SELECT ALL * FROM vt1, rt1;
SELECT DISTINCT * FROM rt1, vt1;
SELECT DISTINCT * FROM rt1, vt1 WHERE ((CASE WHEN rt1.c1 THEN rt1.c1 END IN ())) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((NOT ((CASE WHEN rt1.c1 THEN rt1.c1 END IN ())))) UNION SELECT DISTINCT * FROM rt1, vt1 WHERE ((((CASE WHEN rt1.c1 THEN rt1.c1 END IN ())) ISNULL));
SELECT DISTINCT * FROM rt1, vt1;
SELECT ALL rt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON ((((923636948) ISNULL)) IS TRUE) GROUP BY rt1.c0;
SELECT rt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON ((((923636948) ISNULL)) IS TRUE) WHERE (rt1.c0) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON ((((923636948) ISNULL)) IS TRUE) WHERE ((NOT (rt1.c0))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON ((((923636948) ISNULL)) IS TRUE) WHERE (((rt1.c0) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM vt1 RIGHT OUTER JOIN rt1 ON ((((923636948) ISNULL)) IS TRUE) GROUP BY rt1.c0;
SELECT vt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1;
SELECT ALL vt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1 HAVING NULLIF(GROUP_CONCAT(rt1.c0), AVG(vt1.c0)) UNION ALL SELECT ALL vt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1 HAVING (NOT (NULLIF(GROUP_CONCAT(rt1.c0), AVG(vt1.c0)))) UNION ALL SELECT vt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1 HAVING ((NULLIF(GROUP_CONCAT(rt1.c0), AVG(vt1.c0))) ISNULL);
SELECT vt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1;
SELECT ALL vt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1 HAVING NULLIF(GROUP_CONCAT(rt1.c0), AVG(vt1.c0)) UNION ALL SELECT ALL vt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1 HAVING (NOT (NULLIF(GROUP_CONCAT(rt1.c0), AVG(vt1.c0)))) UNION ALL SELECT vt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1 HAVING ((NULLIF(GROUP_CONCAT(rt1.c0), AVG(vt1.c0))) ISNULL);
SELECT vt1.c0, rt1.c1 FROM vt1, rt1 GROUP BY vt1.c0, rt1.c1;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (HEX(vt1.c0) COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (HEX(vt1.c0) COLLATE NOCASE))) UNION ALL SELECT * FROM vt1 WHERE (((HEX(vt1.c0) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1, vt1;
SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1, vt1 WHERE (CASE rt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.029979993462255994 WHEN rt1.c2 THEN vt1.c0 END COLLATE BINARY) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1, vt1 WHERE ((NOT (CASE rt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.029979993462255994 WHEN rt1.c2 THEN vt1.c0 END COLLATE BINARY))) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1, vt1 WHERE (((CASE rt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.029979993462255994 WHEN rt1.c2 THEN vt1.c0 END COLLATE BINARY) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1 FROM rt1, vt1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 WHERE ((((rt1.c0)) BETWEEN (('l6')) AND (((((rt1.c1, rt1.c2, rt1.c2, rt1.c0, '1457360645')) BETWEEN ((rt1.c0, rt1.c2, rt1.c2, 'a1', rt1.c1)) AND ((rt1.c0, rt1.c1, 0.9227631713656501, rt1.c2, rt1.c0))))))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE ((NOT ((((rt1.c0)) BETWEEN (('l6')) AND (((((rt1.c1, rt1.c2, rt1.c2, rt1.c0, '1457360645')) BETWEEN ((rt1.c0, rt1.c2, rt1.c2, 'a1', rt1.c1)) AND ((rt1.c0, rt1.c1, 0.9227631713656501, rt1.c2, rt1.c0))))))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE ((((((rt1.c0)) BETWEEN (('l6')) AND (((((rt1.c1, rt1.c2, rt1.c2, rt1.c0, '1457360645')) BETWEEN ((rt1.c0, rt1.c2, rt1.c2, 'a1', rt1.c1)) AND ((rt1.c0, rt1.c1, 0.9227631713656501, rt1.c2, rt1.c0))))))) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST(((vt1.c0) ISNULL) AS REAL) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(((vt1.c0) ISNULL) AS REAL))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST(((vt1.c0) ISNULL) AS REAL)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST(((vt1.c0) ISNULL) AS REAL) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(((vt1.c0) ISNULL) AS REAL))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST(((vt1.c0) ISNULL) AS REAL)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 RIGHT OUTER JOIN vt1 ON (((((vt1.c0 IN ()))AND(x'00c9')))OR(((rt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT vt1.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 RIGHT OUTER JOIN vt1 ON (((((vt1.c0 IN ()))AND(x'00c9')))OR(((rt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE (rt1.c1) UNION ALL SELECT vt1.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 RIGHT OUTER JOIN vt1 ON (((((vt1.c0 IN ()))AND(x'00c9')))OR(((rt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE ((NOT (rt1.c1))) UNION ALL SELECT vt1.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 RIGHT OUTER JOIN vt1 ON (((((vt1.c0 IN ()))AND(x'00c9')))OR(((rt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE (((rt1.c1) ISNULL));
SELECT ALL vt1.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 RIGHT OUTER JOIN vt1 ON (((((vt1.c0 IN ()))AND(x'00c9')))OR(((rt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((TIME(x'18f0', rt1.c0, x''))>(rt1.c0))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((TIME(x'18f0', rt1.c0, x''))>(rt1.c0))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((TIME(x'18f0', rt1.c0, x''))>(rt1.c0))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 WHERE ((+ ((((rt1.c0, rt1.c1, rt1.c0, rt1.c2, rt1.c0))!=((rt1.c2, rt1.c1, rt1.c1, rt1.c0, x'')))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE ((NOT ((+ ((((rt1.c0, rt1.c1, rt1.c0, rt1.c2, rt1.c0))<>((rt1.c2, rt1.c1, rt1.c1, rt1.c0, x'')))))))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 NOT INDEXED WHERE ((((+ ((((rt1.c0, rt1.c1, rt1.c0, rt1.c2, rt1.c0))<>((rt1.c2, rt1.c1, rt1.c1, rt1.c0, x'')))))) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT((vt1.c0 IN ())) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT((vt1.c0 IN ())))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT((vt1.c0 IN ()))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT((vt1.c0 IN ())) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT((vt1.c0 IN ())))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT((vt1.c0 IN ()))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT SUM(((((rt1.c0) ISNULL))GLOB(((rt1.c1)>=(rt1.c1))))) FROM rt1 ORDER BY ((((rt1.c0)GLOB(rt1.c2)))=(CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END)) ASC  NULLS LAST, ((((SUBSTR(rt1.c1, rt1.c1))OR(rt1.c1)))OR(((((rt1.c1)OR(rt1.c1)))OR(rt1.c2))))  NULLS LAST;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) IS FALSE)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) IS FALSE)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) IS FALSE)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CASE json_quote(vt1.c0)  WHEN ((vt1.c0) NOTNULL) THEN ((vt1.c0)<(vt1.c0)) WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN vt1.c0 WHEN ((vt1.c0)<>(vt1.c0)) THEN LOWER(vt1.c0) END) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CASE json_quote(vt1.c0)  WHEN ((vt1.c0) NOTNULL) THEN ((vt1.c0)<(vt1.c0)) WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN vt1.c0 WHEN ((vt1.c0)<>(vt1.c0)) THEN LOWER(vt1.c0) END))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CASE json_quote(vt1.c0)  WHEN ((vt1.c0) NOTNULL) THEN ((vt1.c0)<(vt1.c0)) WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN vt1.c0 WHEN ((vt1.c0)!=(vt1.c0)) THEN LOWER(vt1.c0) END) ISNULL));
SELECT ALL rt1.c2 FROM rt1, vt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1, vt1 WHERE (((HEX(DISTINCT rt1.c1))IS NOT(rt1.c2 COLLATE BINARY))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1, vt1 WHERE ((NOT (((HEX(DISTINCT rt1.c1))IS NOT(rt1.c2 COLLATE BINARY))))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1, vt1 WHERE (((((HEX(DISTINCT rt1.c1))IS NOT(rt1.c2 COLLATE BINARY))) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1, vt1 GROUP BY rt1.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(COUNT(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(COUNT(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(COUNT(vt1.c0))) ISNULL);
SELECT vt1.c0 FROM vt1, rt1;
SELECT ALL vt1.c0 FROM vt1, rt1 WHERE (((CAST(rt1.c0 AS INTEGER)) IS TRUE)) UNION ALL SELECT ALL vt1.c0 FROM vt1, rt1 WHERE ((NOT (((CAST(rt1.c0 AS INTEGER)) IS TRUE)))) UNION ALL SELECT vt1.c0 FROM vt1, rt1 WHERE (((((CAST(rt1.c0 AS INTEGER)) IS TRUE)) ISNULL));
SELECT vt1.c0 FROM vt1, rt1;
SELECT DISTINCT vt1.c0 FROM vt1, rt1;
SELECT DISTINCT vt1.c0 FROM vt1, rt1 WHERE ((NOT ((rt1.c1 IN (vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, rt1 WHERE ((NOT ((NOT ((rt1.c1 IN (vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, rt1 WHERE ((((NOT ((rt1.c1 IN (vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, rt1;
SELECT ALL rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1, vt1 WHERE (rt1.c1) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1, vt1 WHERE ((NOT (rt1.c1))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1, vt1 WHERE (((rt1.c1) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, vt1 GROUP BY rt1.c0;
SELECT rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c1, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1 FROM rt1 NATURAL JOIN vt1;
SELECT rt1.c1 FROM rt1 NATURAL JOIN vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN (CASE vt1.c0  WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c2 END, 0X7d39d6de))) UNION ALL SELECT rt1.c1 FROM rt1 NATURAL JOIN vt1 WHERE ((NOT ((CAST(vt1.c0 AS TEXT) IN (CASE vt1.c0  WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c2 END, 0X7d39d6de))))) UNION ALL SELECT rt1.c1 FROM rt1 NATURAL JOIN vt1 WHERE ((((CAST(vt1.c0 AS TEXT) IN (CASE vt1.c0  WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c2 END, 0X7d39d6de))) ISNULL));
SELECT rt1.c1 FROM rt1 NATURAL JOIN vt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CAST(2042112505 AS TEXT)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CAST(2042112505 AS TEXT)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CAST(2042112505 AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c2, vt1.c0, rt1.c0;
SELECT rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 WHERE (((((vt1.c0) NOT BETWEEN (rt1.c2) AND (vt1.c0))) NOTNULL)) GROUP BY rt1.c1, rt1.c2, vt1.c0, rt1.c0 UNION SELECT rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (rt1.c2) AND (vt1.c0))) NOTNULL)))) GROUP BY rt1.c1, rt1.c2, vt1.c0, rt1.c0 UNION SELECT rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (rt1.c2) AND (vt1.c0))) NOTNULL)) ISNULL)) GROUP BY rt1.c1, rt1.c2, vt1.c0, rt1.c0;
SELECT rt1.c1, rt1.c2, vt1.c0, rt1.c0 FROM rt1, vt1 GROUP BY rt1.c1, rt1.c2, vt1.c0, rt1.c0;
SELECT ALL rt1.c1, vt1.c0, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c0, rt1.c2;
SELECT rt1.c1, vt1.c0, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c0, rt1.c2 HAVING COUNT(GROUP_CONCAT(rt1.c0)) UNION ALL SELECT rt1.c1, vt1.c0, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c0, rt1.c2 HAVING (NOT (COUNT(GROUP_CONCAT(rt1.c0)))) UNION ALL SELECT rt1.c1, vt1.c0, rt1.c2 FROM rt1, vt1 GROUP BY rt1.c1, vt1.c0, rt1.c2 HAVING ((COUNT(GROUP_CONCAT(rt1.c0))) ISNULL);
SELECT * FROM vt1, rt1;
SELECT ALL * FROM vt1, rt1 WHERE (((((((vt1.c0)&(vt1.c0)))AND(((((rt1.c2)AND(vt1.c0)))OR(rt1.c0)))))AND((((rt1.c1))<=((rt1.c0)))))) UNION ALL SELECT ALL * FROM vt1, rt1 WHERE ((NOT (((((((vt1.c0)&(vt1.c0)))AND(((((rt1.c2)AND(vt1.c0)))OR(rt1.c0)))))AND((((rt1.c1))<=((rt1.c0)))))))) UNION ALL SELECT * FROM vt1, rt1 WHERE (((((((((vt1.c0)&(vt1.c0)))AND(((((rt1.c2)AND(vt1.c0)))OR(rt1.c0)))))AND((((rt1.c1))<=((rt1.c0)))))) ISNULL));
SELECT * FROM vt1, rt1;
