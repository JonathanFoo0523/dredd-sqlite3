-- Time: 2024/06/10 09:09:09
-- Database: database16
-- Database version: 3.40.0
-- seed value: 110033616
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
CREATE TEMP TABLE t1 (c0 INT ); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA auto_vacuum = INCREMENTAL; -- 0ms;
INSERT OR ABORT INTO rt0(c0, c2, c1) VALUES ('', NULL, x''), (NULL, x'', ''), (x'5c89', x'88da', '1536209834'), ('-1921916926', NULL, x'45d4'), (NULL, NULL, ''); -- 2ms;
INSERT OR IGNORE INTO t1(c0) VALUES (0.9703993474169833), (1536209834), (x''); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
REINDEX  rt0; -- 0ms;
PRAGMA main.soft_heap_limit; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR FAIL rt0 SET c2='1536209834' WHERE rt0.c0; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (NULL); -- 1ms;
UPDATE rt0 SET c2=NULL WHERE ((((rt0.c2)&(rt0.c0))) IS FALSE); -- 1ms;
INSERT OR IGNORE INTO t1 VALUES (0.289428258426322); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR ROLLBACK INTO t1 VALUES (x''); -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 1ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (0.4805338374899062); -- 0ms;
INSERT OR ABORT INTO rt0(c1) VALUES (0.08042743275957775); -- 1ms;
UPDATE rt0 SET c1='\8\n~l' WHERE ((rt0.c1 COLLATE RTRIM)&(((rt0.c1)-(0.7376699531450609)))); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES ('1692526174'), (0.7381470076382317), (0Xffffffff8d71e002), ('1536209834'), ('0.9703993474169833'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(NULL) WHERE (NOT (CAST(rt0.c0 AS TEXT))); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=('1536209834'); -- 0ms;
INSERT OR FAIL INTO rt0(c2, c0, c1) VALUES ('1692526174', '0l', 0X64e1e65e); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR REPLACE INTO t1(c0) VALUES (0.26830894962498153); -- 1ms;
UPDATE OR IGNORE t1 SET c0=NULL; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i91 ON t1((((c0 IN (c0))) NOTNULL)); -- 0ms;
CREATE UNIQUE INDEX i56 ON t1((((NULL, c0, c0)) BETWEEN ((LOWER(c0), ((((c0)OR(c0)))AND(c0)), c0)) AND (('纫V\r7', ((c0)/(c0)), ((c0)GLOB(c0))))) COLLATE RTRIM DESC); -- 0ms;
REINDEX; -- 0ms;
CREATE TEMPORARY TRIGGER IF NOT EXISTS tr0 BEFORE DELETE ON t1 WHEN ((t1.c0) IS FALSE) COLLATE BINARY BEGIN UPDATE rt0 SET (c2)=(x'8407') WHERE (((NOT (rt0.c0))) NOTNULL);END; -- 0ms;
UPDATE rt0 SET (c0)=(x'c1f9') WHERE CASE rt0.c2 COLLATE NOCASE  WHEN ((rt0.c0)>>(rt0.c2)) THEN CASE 2009321539  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END ELSE CAST(rt0.c1 AS REAL) END; -- 0ms;
UPDATE OR IGNORE rt0 SET c2='', c2='''G삱	*,8'; -- 1ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT (- ('1536124637')), 0.44300064187795596); -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (0.262810417653249); -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (0X4977def3), (0x64e1e65e), (1.149411544E9); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (1.427078827E9, x'62d6'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((x''))!=((NULL)))  WHEN (NULL IN (x'8470')) THEN (NULL IN ()) ELSE ((NULL) NOT BETWEEN ('-1705487467') AND ('271548590')) END; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES ('0.7381470076382317', '-1921916926'), (0.6682794078314543, x'7b1f'), (x'', 0.44308286872709013); -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES (0.7143409133803661, NULL, NULL); -- 0ms;
INSERT OR REPLACE INTO t1(c0) VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=''; -- 1ms;
INSERT OR IGNORE INTO t1(c0) VALUES (NULL), (1.536124637E9), (x'1c29'); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i15 ON t1((c0 IN ()) ASC) WHERE (IFNULL(c0, c0) IN ()); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO t1(c0) VALUES (0X1c19c0b1), (x''), (1008443433); -- 0ms;
INSERT OR ROLLBACK INTO t1(c0) VALUES (0.6100840586896209), (1.536209834E9), (0.5932339563341612), ('471449777'), ('-797969400'); -- 0ms;
UPDATE OR FAIL t1 SET c0=x'c088'; -- 0ms;
DELETE FROM rt0 WHERE (((NOT (rt0.c0))) NOT NULL); -- 0ms;
INSERT OR REPLACE INTO t1(c0) VALUES (''); -- 0ms;
INSERT OR REPLACE INTO t1 VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES ('437772396'), (0.5289166917502073), ('b뇝'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (0.6193778578469453), (NULL), (x''), (x''), (x''); -- 0ms;
UPDATE rt0 SET (c2)=('1189766043') WHERE LIKE(CAST(rt0.c0 AS NUMERIC), json_type(rt0.c0), '-'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL rt0 SET (c1)=('[b') WHERE (((0.6907023706138267, 0.3371620449295165, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c0))) COLLATE RTRIM; -- 0ms;
REINDEX; -- 0ms;
REINDEX BINARY; -- 0ms;
UPDATE OR ABORT rt0 SET c1=0Xffffffffe46d015c, c1='\1' WHERE ((LOWER(DISTINCT rt0.c0)) IS FALSE); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, c3, c4, +c5 INTEGER ); -- 1ms;
INSERT OR IGNORE INTO rt1(c2, c3, c0, c4, c1) VALUES (x'', '', 0.7225905246287797, 0.9551047381204477, '{v]M	p'); -- 0ms;
UPDATE OR IGNORE rt1 SET c4=x'' WHERE x'84656fdd'; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES ('1536124637'), (0xffffffffc107b98e), (NULL); -- 1ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c71; -- 1ms;
INSERT OR IGNORE INTO rt1(c5, c2, c4) VALUES (x'f2a3', 0x724f9781, NULL), (NULL, '6]ꃘGn~g', '338462613'), (0.8781107768218335, x'', NULL); -- 0ms;
UPDATE OR ABORT t1 SET c71='486692077' WHERE ((CAST(t1.c71 AS BLOB))>(((t1.c71)>(x'')))); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE t1 SET (c71, c71)=(NULL, 0.7592974981628555) WHERE NULL; -- 0ms;
PRAGMA main.default_cache_size = 1744157027; -- 0ms;
REINDEX NOCASE; -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE t1 SET (c71)=('471449777'); -- 1ms;
ALTER TABLE t1 RENAME COLUMN c71 TO c34; -- 0ms;
COMMIT; -- 0ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT ((((CAST(rt1.c3 AS REAL))AND(((rt0.c1)<(t1.c34)))))OR(((NULL)||(t1.c34)))) FROM t1 GROUP BY CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN (((rt1.c5))<(('-980449121'))) WHEN ((rt1.c2)+(rt1.c0)) THEN CASE WHEN rt1.c0 THEN rt1.c1 END WHEN (((rt1.c4)) BETWEEN ((rt1.c0)) AND ((NULL))) THEN CAST('1427078827' AS REAL) ELSE ((rt0.c1) NOT NULL) END, CAST(NULL AS NUMERIC), ((((rt0.c0) BETWEEN (rt1.c2) AND (rt1.c1))) IS TRUE), ((CAST(rt1.c4 AS INTEGER))OR(rt0.c2 COLLATE RTRIM)), ((x'') ISNULL); -- 0ms;
