-- Time: 2024/06/09 03:50:26
-- Database: database22
-- Database version: 3.40.0
-- seed value: 220261522
PRAGMA cache_size = 50000; -- 11ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TABLE t0 (c0 REAL , c1 REAL , c2 INTEGER ); -- 0ms;
PRAGMA main.reverse_unordered_selects = true; -- 0ms;
UPDATE t0 SET c2=x'', c0='-1955010810', c0=NULL; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ANALYZE; -- 1ms;
UPDATE OR REPLACE t0 SET (c0, c0, c0)=('', NULL, NULL) WHERE ((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)))IS NOT(CAST(t0.c1 AS NUMERIC))); -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=''; -- 1ms;
INSERT OR REPLACE INTO t0(c2) VALUES (NULL), ('-1955010810'), (0.4942146758915197); -- 1ms;
INSERT OR IGNORE INTO t0(c1) VALUES (''); -- 2ms;
REINDEX  t0; -- 0ms;
CREATE INDEX i83 ON t0((~ (((c0) ISNULL))),((((c1)|(x'')))>>(CASE c1  WHEN c1 THEN c2 WHEN c2 THEN c0 WHEN c0 THEN '' ELSE c2 END)),LOWER(CAST(c0 AS BLOB)) COLLATE RTRIM ASC); -- 1ms;
PRAGMA temp.soft_heap_limit; -- 2ms;
VACUUM; -- 1ms;
PRAGMA temp.auto_vacuum = INCREMENTAL; -- 1ms;
ANALYZE t0; -- 0ms;
REINDEX; -- 0ms;
CREATE UNIQUE INDEX i45 ON t0(c0,((0.952734148196053) ISNULL) COLLATE RTRIM DESC,(- (c1)) COLLATE BINARY ASC); -- 2ms;
INSERT OR REPLACE INTO t0 VALUES (NULL, 0xffffffff8b78e706, NULL), (x'', 0.4977549949106439, x'adac'), ('0.4942146758915197', '0.952734148196053', NULL); -- 0ms;
VACUUM main; -- 1ms;
PRAGMA soft_heap_limit = 0; -- 0ms;
COMMIT; -- 0ms;
REINDEX; -- 1ms;
END; -- 0ms;
PRAGMA main.stats; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR REPLACE t0 SET (c1)=(NULL) WHERE t0.c2; -- 0ms;
UPDATE OR ABORT t0 SET c2=-1.95501081E9; -- 0ms;
COMMIT; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0)=('1751720304', NULL) WHERE 0xffffffff94911b86; -- 1ms;
INSERT OR IGNORE INTO t0(c1, c0) VALUES ('', 0.10278617855818961); -- 2ms;
PRAGMA main.foreign_keys = false; -- 0ms;
INSERT OR REPLACE INTO t0(c2, c1) VALUES (NULL, 0.8317788262513374); -- 0ms;
UPDATE t0 SET (c0)=(-1.802429562E9); -- 0ms;
UPDATE OR FAIL t0 SET (c1, c1, c0)=('1751720304', '-1017149945', NULL); -- 0ms;
CREATE INDEX i37 ON t0(((((CASE WHEN c0 THEN c1 WHEN '-1017149945' THEN c1 WHEN c2 THEN c0 ELSE c2 END)OR(((((c0)OR('')))OR(c2)))))OR(LIKELIHOOD(c0, 0.2515069213241813))) COLLATE RTRIM DESC,(((c1 IN (c1)))IS NOT((((c0, c0, c1))>=((c1, c2, c2))))) ASC,((((c1)!=(c0)))>(c2)) COLLATE BINARY DESC) WHERE (((c2)) BETWEEN ((((c1) ISNULL))) AND ((ROUND(c0, c1)))); -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES (0xfffffffffbeae160); -- 0ms;
INSERT OR REPLACE INTO t0(c2) VALUES ('0.8317788262513374'); -- 0ms;
END; -- 4ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA secure_delete = true; -- 0ms;
PRAGMA temp.reverse_unordered_selects; -- 1ms;
INSERT OR ABORT INTO t0(c0) VALUES (NULL); -- 1ms;
UPDATE OR FAIL t0 SET c0='0.952734148196053' WHERE CAST(CAST(0Xfffffffffbeae160 AS INTEGER) AS TEXT); -- 1ms;
UPDATE t0 SET (c0)=('') WHERE ((((t0.c2) NOT NULL))/(((t0.c0) IS FALSE))); -- 0ms;
INSERT OR REPLACE INTO t0(c2, c0) VALUES (0x1c7cbafa, 1.751720304E9); -- 1ms;
PRAGMA temp.checkpoint_fullfsync; -- 0ms;
INSERT OR IGNORE INTO t0(c0, c1, c2) VALUES (NULL, x'2031', '?N)|E.j2'); -- 3ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'', c0='477936378'; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES (NULL), (NULL), (x'62bd'); -- 0ms;
INSERT OR ABORT INTO t0(c2) VALUES (NULL); -- 0ms;
REINDEX  t0; -- 1ms;
PRAGMA temp.integrity_check; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c1) VALUES (x''), (x''), (0.952734148196053); -- 3ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
CREATE TABLE t1 (c0 TEXT ); -- 10ms;
UPDATE OR FAIL t0 SET c0=0.0314999669340883; -- 1ms;
UPDATE OR IGNORE t0 SET (c0, c2, c0)=(x'727d', NULL, 0Xffffffff8b78e706) WHERE (((t0.c0 IN ())) NOT BETWEEN (((((((((x'')AND(t0.c2)))AND(t0.c2)))OR(t0.c2)))OR(t0.c1))) AND ((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))); -- 1ms;
PRAGMA shrink_memory; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1); -- 4ms;
END TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0, c2) VALUES ('8>', 0.6099460458894683); -- 10ms;
PRAGMA automatic_index = false; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1176361507); -- 16ms;
UPDATE vt0 SET c1='-607194354'; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES ('*-Bg'); -- 4ms;
UPDATE OR IGNORE t1 SET (c0, c0)=(0.6816699500396352, x'') WHERE (((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END, t1.c0 COLLATE BINARY, CAST(t1.c0 AS TEXT))) AND (('KFm<', CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END, (t1.c0 IN (t1.c0))))); -- 0ms;
PRAGMA cache_size; -- 0ms;
DROP INDEX IF EXISTS "i83"; -- 1ms;
UPDATE vt0 SET (c0)=(x'0fe2') WHERE (~ ((((vt0.c1))>=((vt0.c1))))); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'', NULL, NULL), (0xffffffffed59e0c2, '', x''), (NULL, '0.10278617855818961', '['); -- 2ms;
INSERT OR ABORT INTO vt0(c0, c1) VALUES (NULL, 0.5114807899429008); -- 0ms;
END; -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
CREATE TRIGGER IF NOT EXISTS tr0 AFTER INSERT ON t0 WHEN CAST(((t0.c1)AND(t0.c0)) AS BLOB) BEGIN DELETE FROM t1 WHERE (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) COLLATE NOCASE;END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0, c0)=(NULL, NULL) WHERE CAST(((vt0.c0)|(vt0.c0)) AS NUMERIC); -- 2ms;
PRAGMA main.soft_heap_limit = 0; -- 3ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
REINDEX; -- 0ms;
END; -- 0ms;
UPDATE OR REPLACE t1 SET (c0, c0, c0)=(-1670129089, 0.8509704459810384, '897820524') WHERE CASE WHEN (((t1.c0))==((t1.c0))) THEN t1.c0 COLLATE NOCASE WHEN ((t1.c0)<(t1.c0)) THEN (((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, 0.41566392840488264, t1.c0)) AND ((t1.c0, NULL, t1.c0))) WHEN (t1.c0 IN ()) THEN ((t1.c0)=(t1.c0)) ELSE (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) END; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i17 ON t1(((UNLIKELY(c0)) NOT BETWEEN ((- (c0))) AND (((((c0)AND(c0)))OR(c0)))) COLLATE RTRIM ASC); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA main.auto_vacuum; -- 0ms;
REINDEX i17; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (1.751720304E9) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (1.751720304E9))) UNION ALL SELECT * FROM t0 WHERE (((1.751720304E9) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN t1 ON (((t0.c0 IN ())) IS TRUE);
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN t1 ON (((t0.c0 IN ())) IS TRUE) WHERE (((((t0.c0)&(x''))) NOT NULL)) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN t1 ON (((t0.c0 IN ())) IS TRUE) WHERE ((NOT (((((t0.c0)&(x''))) NOT NULL)))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN t1 ON (((t0.c0 IN ())) IS TRUE) WHERE (((((((t0.c0)&(x''))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN t1 ON (((t0.c0 IN ())) IS TRUE);
SELECT ALL t0.c0, t0.c2, vt0.c1, vt0.c0, t0.c1 FROM t1 CROSS JOIN vt0 ON ((((t0.c0) NOT NULL))>>((+ (vt0.c0)))) FULL OUTER JOIN t0 ON ((((vt0.c0)|(t0.c0))) NOT BETWEEN (((t0.c2)<<('-1205657785'))) AND ((((vt0.c0, vt0.c0, t0.c1))<=((t0.c0, t0.c2, t0.c0))))) GROUP BY t0.c0, t0.c2, vt0.c1, vt0.c0, t0.c1;
SELECT t0.c1, t1.c0, t0.c0, vt0.c0 FROM vt0, t0, t1 GROUP BY t0.c1, t1.c0, t0.c0, vt0.c0;
SELECT t0.c1, t1.c0, t0.c0, vt0.c0 FROM vt0, t0, t1 GROUP BY t0.c1, t1.c0, t0.c0, vt0.c0 HAVING MIN(CASE t0.c2  WHEN GROUP_CONCAT(vt0.c1) THEN t0.c0 ELSE COUNT(*) END) UNION ALL SELECT ALL t0.c1, t1.c0, t0.c0, vt0.c0 FROM vt0, t0, t1 GROUP BY t0.c1, t1.c0, t0.c0, vt0.c0 HAVING (NOT (MIN(CASE t0.c2  WHEN GROUP_CONCAT(vt0.c1) THEN t0.c0 ELSE COUNT(*) END))) UNION ALL SELECT t0.c1, t1.c0, t0.c0, vt0.c0 FROM vt0, t0, t1 GROUP BY t0.c1, t1.c0, t0.c0, vt0.c0 HAVING ((MIN(CASE t0.c2  WHEN GROUP_CONCAT(vt0.c1) THEN t0.c0 ELSE COUNT(*) END)) ISNULL);
SELECT * FROM t0 INNER JOIN vt0 ON (((t0.c1)) BETWEEN ((((((((((((((((((vt0.c0)AND(vt0.c0)))OR(t0.c1)))OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c2)))AND(t1.c0)))AND(t0.c1)))) AND ((t0.c1 COLLATE NOCASE))) CROSS JOIN t1 ON (t0.c0 COLLATE RTRIM IN ());
SELECT * FROM t0 INNER JOIN vt0 ON (((t0.c1)) BETWEEN ((((((((((((((((((vt0.c0)AND(vt0.c0)))OR(t0.c1)))OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c2)))AND(t1.c0)))AND(t0.c1)))) AND ((t0.c1 COLLATE NOCASE))) CROSS JOIN t1 ON (t0.c0 COLLATE RTRIM IN ()) WHERE (vt0.c1) UNION ALL SELECT ALL * FROM t0 INNER JOIN vt0 ON (((t0.c1)) BETWEEN ((((((((((((((((((vt0.c0)AND(vt0.c0)))OR(t0.c1)))OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c2)))AND(t1.c0)))AND(t0.c1)))) AND ((t0.c1 COLLATE NOCASE))) CROSS JOIN t1 ON (t0.c0 COLLATE RTRIM IN ()) WHERE ((NOT (vt0.c1))) UNION ALL SELECT ALL * FROM t0 INNER JOIN vt0 ON (((t0.c1)) BETWEEN ((((((((((((((((((vt0.c0)AND(vt0.c0)))OR(t0.c1)))OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c2)))AND(t1.c0)))AND(t0.c1)))) AND ((t0.c1 COLLATE NOCASE))) CROSS JOIN t1 ON (t0.c0 COLLATE RTRIM IN ()) WHERE (((vt0.c1) ISNULL));
SELECT * FROM t0 INNER JOIN vt0 ON (((t0.c1)) BETWEEN ((((((((((((((((((vt0.c0)AND(vt0.c0)))OR(t0.c1)))OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c2)))AND(t1.c0)))AND(t0.c1)))) AND ((t0.c1 COLLATE NOCASE))) CROSS JOIN t1 ON (t0.c0 COLLATE RTRIM IN ());
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN CAST(t0.c0 AS TEXT) THEN ((x'') NOT NULL) WHEN t0.c0 COLLATE BINARY THEN (+ (t0.c0)) WHEN (~ (t0.c1)) THEN (((t0.c0))!=(('1275976978'))) END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE WHEN CAST(t0.c0 AS TEXT) THEN ((x'') NOT NULL) WHEN t0.c0 COLLATE BINARY THEN (+ (t0.c0)) WHEN (~ (t0.c1)) THEN (((t0.c0))<>(('1275976978'))) END))) UNION SELECT DISTINCT * FROM t0 NOT INDEXED WHERE (((CASE WHEN CAST(t0.c0 AS TEXT) THEN ((x'') NOT NULL) WHEN t0.c0 COLLATE BINARY THEN (+ (t0.c0)) WHEN (~ (t0.c1)) THEN (((t0.c0))<>(('1275976978'))) END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0, vt0.c1 FROM t1, t0, vt0 NOT INDEXED GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM t1, t0, vt0 WHERE ((((t1.c0 IN ())) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c1) IS TRUE)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM t1, t0, vt0 WHERE ((NOT ((((t1.c0 IN ())) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c1) IS TRUE)))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM t1, t0, vt0 WHERE ((((((t1.c0 IN ())) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c1) IS TRUE)))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM t1, t0, vt0 NOT INDEXED GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (((((vt0.c1)IS(vt0.c0))))<((CAST(t1.c0 AS INTEGER)))) LEFT OUTER JOIN t1 ON ((((vt0.c0) NOT NULL))<(t0.c0 COLLATE NOCASE)) GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CAST(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)) AS NUMERIC)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)) AS NUMERIC)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE (t1.c0) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT * FROM t1, t0 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT ALL vt0.c0 FROM t0 CROSS JOIN vt0 ON ((t0.c2 COLLATE BINARY) ISNULL) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0 CROSS JOIN vt0 ON ((t0.c2 COLLATE BINARY) ISNULL) WHERE (x'') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t0 CROSS JOIN vt0 ON ((t0.c2 COLLATE BINARY) ISNULL) WHERE ((NOT (x''))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0 CROSS JOIN vt0 ON ((t0.c2 COLLATE BINARY) ISNULL) WHERE (((x'') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0 CROSS JOIN vt0 ON ((t0.c2 COLLATE BINARY) ISNULL) GROUP BY vt0.c0;
SELECT t0.c2 FROM t1, t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t1, t0 GROUP BY t0.c2 HAVING TOTAL(((MIN(t1.c0)) NOT BETWEEN (t0.c1) AND (t1.c0))) UNION ALL SELECT t0.c2 FROM t1, t0 GROUP BY t0.c2 HAVING (NOT (TOTAL(((MIN(t1.c0)) NOT BETWEEN (t0.c1) AND (t1.c0))))) UNION ALL SELECT ALL t0.c2 FROM t1, t0 GROUP BY t0.c2 HAVING ((TOTAL(((MIN(t1.c0)) NOT BETWEEN (t0.c1) AND (t1.c0)))) ISNULL);
SELECT ALL TOTAL(((CAST(t0.c0 AS NUMERIC))<((NOT (vt0.c0))))) FROM t1, vt0, t0 ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (-68492960) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (-68492960))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE (((-68492960) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE ((~ (t1.c0))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT ((~ (t1.c0))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((((~ (t1.c0))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL t0.c0 FROM t0, t1, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t1, vt0 WHERE ((((NOT (vt0.c1)))<(((vt0.c0)-(NULL))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t1, vt0 WHERE ((NOT ((((NOT (vt0.c1)))<(((vt0.c0)-(NULL))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t1, vt0 WHERE ((((((NOT (vt0.c1)))<(((vt0.c0)-(NULL))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t1, vt0 GROUP BY t0.c0;
SELECT t1.c0, t0.c1 FROM t0, t1 GROUP BY t1.c0, t0.c1;
SELECT ALL t1.c0, t0.c1 FROM t0, t1 GROUP BY t1.c0, t0.c1 HAVING ((((PRINTF(GROUP_CONCAT(t1.c0)))OR(SUM(NULL))))OR((((SUM(AVG(t1.c0)))) BETWEEN ((MAX(t1.c0))) AND ((t1.c0))))) UNION ALL SELECT ALL t1.c0, t0.c1 FROM t0, t1 GROUP BY t1.c0, t0.c1 HAVING (NOT (((((PRINTF(GROUP_CONCAT(t1.c0)))OR(SUM(NULL))))OR((((SUM(AVG(t1.c0)))) BETWEEN ((MAX(t1.c0))) AND ((t1.c0))))))) UNION ALL SELECT ALL t1.c0, t0.c1 FROM t0, t1 GROUP BY t1.c0, t0.c1 HAVING ((((((PRINTF(GROUP_CONCAT(t1.c0)))OR(SUM(NULL))))OR((((SUM(AVG(t1.c0)))) BETWEEN ((MAX(t1.c0))) AND ((t1.c0)))))) ISNULL);
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE ((((t1.c0) BETWEEN (t1.c0) AND (0.843860135389233)) IN (t1.c0))) UNION ALL SELECT * FROM t1 WHERE ((NOT ((((t1.c0) BETWEEN (t1.c0) AND (0.843860135389233)) IN (t1.c0))))) UNION ALL SELECT * FROM t1 WHERE ((((((t1.c0) BETWEEN (t1.c0) AND (0.843860135389233)) IN (t1.c0))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT t0.c0, t0.c2, t1.c0, t0.c1 FROM t0, t1 NOT INDEXED;
SELECT DISTINCT t0.c0, t0.c2, t1.c0, t0.c1 FROM t0, t1 WHERE ((((t0.c0)) NOT BETWEEN ((CAST(t0.c1 AS REAL))) AND ((t1.c0)))) UNION SELECT DISTINCT t0.c0, t0.c2, t1.c0, t0.c1 FROM t0, t1 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((CAST(t0.c1 AS REAL))) AND ((t1.c0)))))) UNION SELECT DISTINCT t0.c0, t0.c2, t1.c0, t0.c1 FROM t0, t1 WHERE ((((((t0.c0)) NOT BETWEEN ((CAST(t0.c1 AS REAL))) AND ((t1.c0)))) ISNULL));
SELECT DISTINCT t0.c0, t0.c2, t1.c0, t0.c1 FROM t0, t1 NOT INDEXED;
SELECT vt0.c0, vt0.c1, t1.c0 FROM vt0 INDEXED BY i17, t1 GROUP BY vt0.c0, vt0.c1, t1.c0;
SELECT t0.c1, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c1, vt0.c0, t0.c0;
SELECT ALL t0.c1, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c1, vt0.c0, t0.c0 HAVING (GROUP_CONCAT(SUM(vt0.c1)) IN (MIN(TOTAL(t0.c0)))) UNION ALL SELECT t0.c1, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c1, vt0.c0, t0.c0 HAVING (NOT ((GROUP_CONCAT(SUM(vt0.c1)) IN (MIN(TOTAL(t0.c0)))))) UNION ALL SELECT t0.c1, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c1, vt0.c0, t0.c0 HAVING (((GROUP_CONCAT(SUM(vt0.c1)) IN (MIN(TOTAL(t0.c0))))) ISNULL);
SELECT t0.c0, t1.c0, vt0.c1, t0.c1 FROM vt0, t0, t1;
SELECT ALL t0.c0, t1.c0, vt0.c1, t0.c1 FROM vt0, t0, t1 WHERE ((((((((t0.c1)OR(t1.c0)))AND(t1.c0)), CASE WHEN t0.c2 THEN vt0.c1 END, (((t1.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), ((((t0.c2)OR(vt0.c1)))OR(t0.c1)), CASE WHEN 0.2764435457616756 THEN vt0.c1 END))=((((t0.c1) ISNULL), (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), 0.053517873000168414, '477936378', ((t1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) UNION ALL SELECT ALL t0.c0, t1.c0, vt0.c1, t0.c1 FROM vt0, t0, t1 WHERE ((NOT ((((((((t0.c1)OR(t1.c0)))AND(t1.c0)), CASE WHEN t0.c2 THEN vt0.c1 END, (((t1.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), ((((t0.c2)OR(vt0.c1)))OR(t0.c1)), CASE WHEN 0.2764435457616756 THEN vt0.c1 END))=((((t0.c1) ISNULL), (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), 0.053517873000168414, '477936378', ((t1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))))) UNION ALL SELECT ALL t0.c0, t1.c0, vt0.c1, t0.c1 FROM vt0, t0, t1 WHERE ((((((((((t0.c1)OR(t1.c0)))AND(t1.c0)), CASE WHEN t0.c2 THEN vt0.c1 END, (((t1.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), ((((t0.c2)OR(vt0.c1)))OR(t0.c1)), CASE WHEN 0.2764435457616756 THEN vt0.c1 END))=((((t0.c1) ISNULL), (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), 0.053517873000168414, '477936378', ((t1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) ISNULL));
SELECT t0.c0, t1.c0, vt0.c1, t0.c1 FROM vt0, t0, t1;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE (CASE WHEN HEX(t0.c2) THEN CAST(t0.c1 AS REAL) WHEN ((t0.c0)LIKE(t0.c1)) THEN ((((t0.c1)OR(0.8767865895151423)))OR(t0.c1)) WHEN t0.c1 COLLATE NOCASE THEN '5' ELSE t1.c0 COLLATE RTRIM END) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT (CASE WHEN HEX(t0.c2) THEN CAST(t0.c1 AS REAL) WHEN ((t0.c0)LIKE(t0.c1)) THEN ((((t0.c1)OR(0.8767865895151423)))OR(t0.c1)) WHEN t0.c1 COLLATE NOCASE THEN '5' ELSE t1.c0 COLLATE RTRIM END))) UNION SELECT DISTINCT * FROM t1, t0 WHERE (((CASE WHEN HEX(t0.c2) THEN CAST(t0.c1 AS REAL) WHEN ((t0.c0)LIKE(t0.c1)) THEN ((((t0.c1)OR(0.8767865895151423)))OR(t0.c1)) WHEN t0.c1 COLLATE NOCASE THEN '5' ELSE t1.c0 COLLATE RTRIM END) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT t1.c0, vt0.c1 FROM t1, vt0 GROUP BY t1.c0, vt0.c1;
SELECT t1.c0, vt0.c1 FROM t1, vt0 WHERE ((('-1955010810') BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (vt0.c1))) AND (((t1.c0) NOT BETWEEN (0.3605854614486492) AND (vt0.c1))))) GROUP BY t1.c0, vt0.c1 UNION SELECT t1.c0, vt0.c1 FROM t1, vt0 WHERE ((NOT ((('-1955010810') BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (vt0.c1))) AND (((t1.c0) NOT BETWEEN (0.3605854614486492) AND (vt0.c1))))))) GROUP BY t1.c0, vt0.c1 UNION SELECT ALL t1.c0, vt0.c1 FROM t1, vt0 WHERE ((((('-1955010810') BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (vt0.c1))) AND (((t1.c0) NOT BETWEEN (0.3605854614486492) AND (vt0.c1))))) ISNULL)) GROUP BY t1.c0, vt0.c1;
SELECT t1.c0, vt0.c1 FROM t1, vt0 GROUP BY t1.c0, vt0.c1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE (load_extension(((t1.c0)/(t1.c0)), ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (load_extension(((t1.c0)/(t1.c0)), ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE (((load_extension(((t1.c0)/(t1.c0)), ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) ISNULL));
SELECT DISTINCT vt0.c1, t0.c0, t1.c0, t0.c1, t0.c2 FROM t0, t1 CROSS JOIN vt0 ON ((TIME(t0.c1, x'', t0.c1))%((((t0.c1))>=((t0.c2)))));
SELECT DISTINCT vt0.c1, t0.c0, t1.c0, t0.c1, t0.c2 FROM t0, t1 CROSS JOIN vt0 ON ((TIME(t0.c1, x'', t0.c1))%((((t0.c1))>=((t0.c2))))) WHERE (CAST(((t0.c2) BETWEEN (vt0.c1) AND (t1.c0)) AS REAL)) UNION SELECT DISTINCT vt0.c1, t0.c0, t1.c0, t0.c1, t0.c2 FROM t0, t1 CROSS JOIN vt0 ON ((TIME(t0.c1, x'', t0.c1))%((((t0.c1))>=((t0.c2))))) WHERE ((NOT (CAST(((t0.c2) BETWEEN (vt0.c1) AND (t1.c0)) AS REAL)))) UNION SELECT DISTINCT vt0.c1, t0.c0, t1.c0, t0.c1, t0.c2 FROM t0, t1 CROSS JOIN vt0 ON ((TIME(t0.c1, x'', t0.c1))%((((t0.c1))>=((t0.c2))))) WHERE (((CAST(((t0.c2) BETWEEN (vt0.c1) AND (t1.c0)) AS REAL)) ISNULL));
SELECT DISTINCT vt0.c1, t0.c0, t1.c0, t0.c1, t0.c2 FROM t0, t1 CROSS JOIN vt0 ON ((TIME(t0.c1, x'', t0.c1))%((((t0.c1))>=((t0.c2)))));
SELECT t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((- (0.02423943861501343))) GROUP BY t0.c0, t0.c1, t0.c2 UNION SELECT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT ((- (0.02423943861501343))))) GROUP BY t0.c0, t0.c1, t0.c2 UNION SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((((- (0.02423943861501343))) ISNULL)) GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2 HAVING ((SUM(t0.c2)) IS TRUE) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2 HAVING (NOT (((SUM(t0.c2)) IS TRUE))) UNION ALL SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2 HAVING ((((SUM(t0.c2)) IS TRUE)) ISNULL);
SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2 HAVING ((SUM(t0.c2)) IS TRUE) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2 HAVING (NOT (((SUM(t0.c2)) IS TRUE))) UNION ALL SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2 HAVING ((((SUM(t0.c2)) IS TRUE)) ISNULL);
SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT ALL * FROM t1, vt0, t0;
SELECT * FROM t1, vt0, t0 WHERE (((((t0.c1) BETWEEN (t0.c1) AND (t0.c1))) NOT NULL)) UNION ALL SELECT * FROM t1, vt0, t0 WHERE ((NOT (((((t0.c1) BETWEEN (t0.c1) AND (t0.c1))) NOT NULL)))) UNION ALL SELECT ALL * FROM t1, vt0, t0 WHERE (((((((t0.c1) BETWEEN (t0.c1) AND (t0.c1))) NOT NULL)) ISNULL));
SELECT ALL * FROM t1, vt0, t0;
SELECT DISTINCT * FROM vt0, t0, t1 INDEXED BY i17;
SELECT DISTINCT * FROM vt0, t0, t1 INDEXED BY i17 WHERE (((((t0.c0) BETWEEN (vt0.c0) AND (t1.c0)))AND(CASE 0.6382421268777746  WHEN t0.c0 THEN t1.c0 ELSE t0.c1 END))) UNION SELECT DISTINCT * FROM vt0, t0, t1 INDEXED BY i17 WHERE ((NOT (((((t0.c0) BETWEEN (vt0.c0) AND (t1.c0)))AND(CASE 0.6382421268777746  WHEN t0.c0 THEN t1.c0 ELSE t0.c1 END))))) UNION SELECT DISTINCT * FROM vt0, t0, t1 INDEXED BY i17 WHERE (((((((t0.c0) BETWEEN (vt0.c0) AND (t1.c0)))AND(CASE 0.6382421268777746  WHEN t0.c0 THEN t1.c0 ELSE t0.c1 END))) ISNULL));
SELECT DISTINCT * FROM vt0, t0, t1 INDEXED BY i17;
SELECT t0.c0 FROM t0 FULL OUTER JOIN t1 ON CASE WHEN CASE WHEN t0.c1 THEN t0.c1 END THEN ((((t0.c0)AND(477936378)))AND(t1.c0)) WHEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c1)))OR(t0.c1)))OR(t0.c1)) THEN (+ (t0.c0)) WHEN ((t0.c1)IS(t0.c2)) THEN CASE WHEN t1.c0 THEN t0.c1 WHEN 0Xffffffff8da0df1d THEN t1.c0 WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END END GROUP BY t0.c0;
SELECT t0.c0 FROM t0 FULL OUTER JOIN t1 ON CASE WHEN CASE WHEN t0.c1 THEN t0.c1 END THEN ((((t0.c0)AND(477936378)))AND(t1.c0)) WHEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c1)))OR(t0.c1)))OR(t0.c1)) THEN (+ (t0.c0)) WHEN ((t0.c1)IS(t0.c2)) THEN CASE WHEN t1.c0 THEN t0.c1 WHEN 0xffffffff8da0df1d THEN t1.c0 WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END END WHERE ((((t1.c0)) BETWEEN ((LTRIM(t0.c0))) AND ((t1.c0)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 FULL OUTER JOIN t1 ON CASE WHEN CASE WHEN t0.c1 THEN t0.c1 END THEN ((((t0.c0)AND(477936378)))AND(t1.c0)) WHEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c1)))OR(t0.c1)))OR(t0.c1)) THEN (+ (t0.c0)) WHEN ((t0.c1)IS(t0.c2)) THEN CASE WHEN t1.c0 THEN t0.c1 WHEN 0xffffffff8da0df1d THEN t1.c0 WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END END WHERE ((NOT ((((t1.c0)) BETWEEN ((LTRIM(t0.c0))) AND ((t1.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 FULL OUTER JOIN t1 ON CASE WHEN CASE WHEN t0.c1 THEN t0.c1 END THEN ((((t0.c0)AND(477936378)))AND(t1.c0)) WHEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c1)))OR(t0.c1)))OR(t0.c1)) THEN (+ (t0.c0)) WHEN ((t0.c1)IS(t0.c2)) THEN CASE WHEN t1.c0 THEN t0.c1 WHEN 0Xffffffff8da0df1d THEN t1.c0 WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END END WHERE ((((((t1.c0)) BETWEEN ((LTRIM(t0.c0))) AND ((t1.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 FULL OUTER JOIN t1 ON CASE WHEN CASE WHEN t0.c1 THEN t0.c1 END THEN ((((t0.c0)AND(477936378)))AND(t1.c0)) WHEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c1)))OR(t0.c1)))OR(t0.c1)) THEN (+ (t0.c0)) WHEN ((t0.c1)IS(t0.c2)) THEN CASE WHEN t1.c0 THEN t0.c1 WHEN 0Xffffffff8da0df1d THEN t1.c0 WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END END GROUP BY t0.c0;
SELECT vt0.c1, t1.c0 FROM vt0, t1 GROUP BY vt0.c1, t1.c0;
SELECT vt0.c1, t1.c0 FROM vt0, t1 GROUP BY vt0.c1, t1.c0 HAVING (((COUNT(*))) NOT BETWEEN ((COUNT(t1.c0))) AND ((x''))) UNION ALL SELECT vt0.c1, t1.c0 FROM vt0, t1 GROUP BY vt0.c1, t1.c0 HAVING (NOT ((((COUNT(*))) NOT BETWEEN ((COUNT(t1.c0))) AND ((x''))))) UNION ALL SELECT vt0.c1, t1.c0 FROM vt0, t1 GROUP BY vt0.c1, t1.c0 HAVING (((((COUNT(*))) NOT BETWEEN ((COUNT(t1.c0))) AND ((x'')))) ISNULL);
SELECT vt0.c1, t1.c0 FROM vt0, t1 GROUP BY vt0.c1, t1.c0;
SELECT vt0.c1, t1.c0 FROM vt0, t1 GROUP BY vt0.c1, t1.c0 HAVING (((COUNT(*))) NOT BETWEEN ((COUNT(t1.c0))) AND ((x''))) UNION ALL SELECT vt0.c1, t1.c0 FROM vt0, t1 GROUP BY vt0.c1, t1.c0 HAVING (NOT ((((COUNT(*))) NOT BETWEEN ((COUNT(t1.c0))) AND ((x''))))) UNION ALL SELECT vt0.c1, t1.c0 FROM vt0, t1 GROUP BY vt0.c1, t1.c0 HAVING (((((COUNT(*))) NOT BETWEEN ((COUNT(t1.c0))) AND ((x'')))) ISNULL);
SELECT vt0.c1, t1.c0 FROM vt0, t1 GROUP BY vt0.c1, t1.c0;
SELECT * FROM t1, t0, vt0;
SELECT * FROM t1, t0, vt0 WHERE ((((t0.c0, NULL, t0.c0)) BETWEEN ((((0.06731304847961839) BETWEEN (t0.c1) AND ('-1e500')), CAST(t0.c1 AS BLOB), t0.c0 COLLATE BINARY)) AND ((((('285084307')) NOT BETWEEN ((vt0.c1)) AND ((t1.c0))), ((((((((vt0.c0)AND(vt0.c0)))AND(t0.c1)))OR(t0.c2)))OR(t0.c2)), ((t1.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))))) UNION ALL SELECT * FROM t1, t0, vt0 WHERE ((NOT ((((t0.c0, NULL, t0.c0)) BETWEEN ((((0.06731304847961839) BETWEEN (t0.c1) AND ('-1e500')), CAST(t0.c1 AS BLOB), t0.c0 COLLATE BINARY)) AND ((((('285084307')) NOT BETWEEN ((vt0.c1)) AND ((t1.c0))), ((((((((vt0.c0)AND(vt0.c0)))AND(t0.c1)))OR(t0.c2)))OR(t0.c2)), ((t1.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))))))) UNION ALL SELECT ALL * FROM t1, t0, vt0 WHERE ((((((t0.c0, NULL, t0.c0)) BETWEEN ((((0.06731304847961839) BETWEEN (t0.c1) AND ('-1e500')), CAST(t0.c1 AS BLOB), t0.c0 COLLATE BINARY)) AND ((((('285084307')) NOT BETWEEN ((vt0.c1)) AND ((t1.c0))), ((((((((vt0.c0)AND(vt0.c0)))AND(t0.c1)))OR(t0.c2)))OR(t0.c2)), ((t1.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))))) ISNULL));
SELECT * FROM t1, t0, vt0;
SELECT DISTINCT * FROM vt0, t1;
SELECT DISTINCT * FROM vt0, t1 WHERE ((((0.5109798865896334) ISNULL) IN ())) UNION SELECT DISTINCT * FROM vt0, t1 WHERE ((NOT ((((0.5109798865896334) ISNULL) IN ())))) UNION SELECT DISTINCT * FROM vt0, t1 WHERE ((((((0.5109798865896334) ISNULL) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, t1;
SELECT t0.c0 FROM t0 FULL OUTER JOIN vt0 ON CAST(t0.c1 AS TEXT) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 FULL OUTER JOIN vt0 ON CAST(t0.c1 AS TEXT) WHERE (t0.c1) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 FULL OUTER JOIN vt0 ON CAST(t0.c1 AS TEXT) WHERE ((NOT (t0.c1))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 FULL OUTER JOIN vt0 ON CAST(t0.c1 AS TEXT) WHERE (((t0.c1) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 FULL OUTER JOIN vt0 ON CAST(t0.c1 AS TEXT) GROUP BY t0.c0;
SELECT t1.c0, t0.c2, t0.c1 FROM t0 LEFT OUTER JOIN t1 ON (((t0.c1)) NOT BETWEEN ((((((t0.c2)OR(vt0.c1)))AND(t0.c0)))) AND ((((((vt0.c1)AND(x'd3b1')))AND(t0.c2))))) RIGHT OUTER JOIN vt0 ON (+ (CAST(t1.c0 AS BLOB))) GROUP BY t1.c0, t0.c2, t0.c1;
SELECT ALL t1.c0, t0.c2, t0.c0, t0.c1 FROM t1, t0;
SELECT t1.c0, t0.c2, t0.c0, t0.c1 FROM t1, t0 WHERE (((~ (t1.c0)) IN ())) UNION ALL SELECT ALL t1.c0, t0.c2, t0.c0, t0.c1 FROM t1, t0 WHERE ((NOT (((~ (t1.c0)) IN ())))) UNION ALL SELECT t1.c0, t0.c2, t0.c0, t0.c1 FROM t1, t0 WHERE (((((~ (t1.c0)) IN ())) ISNULL));
SELECT ALL t1.c0, t0.c2, t0.c0, t0.c1 FROM t1, t0;
SELECT DISTINCT * FROM t1, vt0, t0;
SELECT DISTINCT * FROM t1, vt0, t0 WHERE (t0.c1) UNION SELECT DISTINCT * FROM t1, vt0, t0 WHERE ((NOT (t0.c1))) UNION SELECT DISTINCT * FROM t1, vt0, t0 WHERE (((t0.c1) ISNULL));
SELECT DISTINCT * FROM t1, vt0, t0;
SELECT t0.c1, vt0.c1, t0.c2, vt0.c0, t0.c0 FROM vt0, t0 GROUP BY t0.c1, vt0.c1, t0.c2, vt0.c0, t0.c0;
SELECT t0.c1, vt0.c1, t0.c2, vt0.c0, t0.c0 FROM vt0, t0 WHERE ((((t0.c0) ISNULL) IN ())) GROUP BY t0.c1, vt0.c1, t0.c2, vt0.c0, t0.c0 UNION SELECT ALL t0.c1, vt0.c1, t0.c2, vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT ((((t0.c0) ISNULL) IN ())))) GROUP BY t0.c1, vt0.c1, t0.c2, vt0.c0, t0.c0 UNION SELECT ALL t0.c1, vt0.c1, t0.c2, vt0.c0, t0.c0 FROM vt0, t0 WHERE ((((((t0.c0) ISNULL) IN ())) ISNULL)) GROUP BY t0.c1, vt0.c1, t0.c2, vt0.c0, t0.c0;
SELECT t0.c1, vt0.c1, t0.c2, vt0.c0, t0.c0 FROM vt0, t0 GROUP BY t0.c1, vt0.c1, t0.c2, vt0.c0, t0.c0;
SELECT t0.c2 FROM t1 RIGHT OUTER JOIN t0 ON t0.c0 GROUP BY t0.c2;
SELECT t0.c2 FROM t1 RIGHT OUTER JOIN t0 ON t0.c0 GROUP BY t0.c2 HAVING COUNT(*) UNION ALL SELECT t0.c2 FROM t1 NOT INDEXED RIGHT OUTER JOIN t0 ON t0.c0 GROUP BY t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2 FROM t1 RIGHT OUTER JOIN t0 ON t0.c0 GROUP BY t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c2 FROM t1 RIGHT OUTER JOIN t0 ON t0.c0 GROUP BY t0.c2;
SELECT t0.c2 FROM t1 RIGHT OUTER JOIN t0 ON t0.c0 GROUP BY t0.c2 HAVING COUNT(*) UNION ALL SELECT t0.c2 FROM t1 NOT INDEXED RIGHT OUTER JOIN t0 ON t0.c0 GROUP BY t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2 FROM t1 RIGHT OUTER JOIN t0 ON t0.c0 GROUP BY t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c2 FROM t1 RIGHT OUTER JOIN t0 ON t0.c0 GROUP BY t0.c2;
SELECT * FROM vt0, t1, t0;
SELECT * FROM vt0, t1, t0 WHERE (t0.c1) UNION ALL SELECT ALL * FROM vt0, t1, t0 WHERE ((NOT (t0.c1))) UNION ALL SELECT ALL * FROM vt0, t1, t0 WHERE (((t0.c1) ISNULL));
SELECT * FROM vt0, t1, t0;
SELECT DISTINCT * FROM t0, t1, vt0;
SELECT DISTINCT * FROM t0, t1, vt0 WHERE (CAST((('ꠢKx_땶0|uW')/(vt0.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM t0, t1, vt0 WHERE ((NOT (CAST((('ꠢKx_땶0|uW')/(vt0.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM t0, t1, vt0 WHERE (((CAST((('ꠢKx_땶0|uW')/(vt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM t0, t1, vt0;
SELECT ALL t0.c0, t0.c1, t1.c0, t0.c2 FROM t1, t0 GROUP BY t0.c0, t0.c1, t1.c0, t0.c2;
SELECT t0.c0, t0.c1, t1.c0, t0.c2 FROM t1, t0 WHERE (highlight((NOT (t0.c0)), (~ (t1.c0)), '-1918836963', ((t0.c0)<=(t1.c0)))) GROUP BY t0.c0, t0.c1, t1.c0, t0.c2 UNION SELECT t0.c0, t0.c1, t1.c0, t0.c2 FROM t1, t0 WHERE ((NOT (highlight((NOT (t0.c0)), (~ (t1.c0)), '-1918836963', ((t0.c0)<=(t1.c0)))))) GROUP BY t0.c0, t0.c1, t1.c0, t0.c2 UNION SELECT ALL t0.c0, t0.c1, t1.c0, t0.c2 FROM t1, t0 WHERE (((highlight((NOT (t0.c0)), (~ (t1.c0)), '-1918836963', ((t0.c0)<=(t1.c0)))) ISNULL)) GROUP BY t0.c0, t0.c1, t1.c0, t0.c2;
SELECT ALL t0.c1, t0.c2, vt0.c1 FROM vt0, t0 GROUP BY t0.c1, t0.c2, vt0.c1;
SELECT ALL t0.c1, t0.c2, vt0.c1 FROM vt0, t0 GROUP BY t0.c1, t0.c2, vt0.c1 HAVING TOTAL(((t0.c0) BETWEEN (MAX(SUM('-1918836963'))) AND (t0.c2))) UNION ALL SELECT ALL t0.c1, t0.c2, vt0.c1 FROM vt0, t0 GROUP BY t0.c1, t0.c2, vt0.c1 HAVING (NOT (TOTAL(((t0.c0) BETWEEN (MAX(SUM('-1918836963'))) AND (t0.c2))))) UNION ALL SELECT ALL t0.c1, t0.c2, vt0.c1 FROM vt0, t0 GROUP BY t0.c1, t0.c2, vt0.c1 HAVING ((TOTAL(((t0.c0) BETWEEN (MAX(SUM('-1918836963'))) AND (t0.c2)))) ISNULL);
SELECT ALL t0.c2 FROM vt0, t0 LEFT OUTER JOIN t1 ON ((CAST(vt0.c1 AS BLOB))LIKE((((t0.c2)) NOT BETWEEN ((t1.c0)) AND ((vt0.c1)))));
SELECT t0.c2 FROM vt0, t0 LEFT OUTER JOIN t1 ON ((CAST(vt0.c1 AS BLOB))LIKE((((t0.c2)) NOT BETWEEN ((t1.c0)) AND ((vt0.c1))))) WHERE ((((vt0.c1)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))) COLLATE RTRIM) UNION ALL SELECT ALL t0.c2 FROM vt0, t0 LEFT OUTER JOIN t1 ON ((CAST(vt0.c1 AS BLOB))LIKE((((t0.c2)) NOT BETWEEN ((t1.c0)) AND ((vt0.c1))))) WHERE ((NOT ((((vt0.c1)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))) COLLATE RTRIM))) UNION ALL SELECT t0.c2 FROM vt0, t0 LEFT OUTER JOIN t1 ON ((CAST(vt0.c1 AS BLOB))LIKE((((t0.c2)) NOT BETWEEN ((t1.c0)) AND ((vt0.c1))))) WHERE ((((((vt0.c1)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))) COLLATE RTRIM) ISNULL));
SELECT ALL t0.c2 FROM vt0, t0 LEFT OUTER JOIN t1 ON ((CAST(vt0.c1 AS BLOB))LIKE((((t0.c2)) NOT BETWEEN ((t1.c0)) AND ((vt0.c1)))));
SELECT DISTINCT vt0.c0, t1.c0, t0.c0, t0.c1, t0.c2 FROM t1, t0, vt0;
SELECT DISTINCT vt0.c0, t1.c0, t0.c0, t0.c1, t0.c2 FROM t1, t0, vt0 WHERE (CASE WHEN LIKELIHOOD(vt0.c0, 0.3602579351242151) THEN t0.c2 COLLATE BINARY WHEN (((t0.c1, t0.c2, t0.c2, t0.c2, vt0.c0)) BETWEEN ((t0.c0, t0.c1, vt0.c1, t0.c0, t1.c0)) AND ((t0.c0, t0.c0, vt0.c0, t1.c0, t0.c0))) THEN t0.c0 WHEN t0.c1 THEN '' END) UNION SELECT DISTINCT vt0.c0, t1.c0, t0.c0, t0.c1, t0.c2 FROM t1, t0, vt0 WHERE ((NOT (CASE WHEN LIKELIHOOD(vt0.c0, 0.3602579351242151) THEN t0.c2 COLLATE BINARY WHEN (((t0.c1, t0.c2, t0.c2, t0.c2, vt0.c0)) BETWEEN ((t0.c0, t0.c1, vt0.c1, t0.c0, t1.c0)) AND ((t0.c0, t0.c0, vt0.c0, t1.c0, t0.c0))) THEN t0.c0 WHEN t0.c1 THEN '' END))) UNION SELECT DISTINCT vt0.c0, t1.c0, t0.c0, t0.c1, t0.c2 FROM t1, t0, vt0 WHERE (((CASE WHEN LIKELIHOOD(vt0.c0, 0.3602579351242151) THEN t0.c2 COLLATE BINARY WHEN (((t0.c1, t0.c2, t0.c2, t0.c2, vt0.c0)) BETWEEN ((t0.c0, t0.c1, vt0.c1, t0.c0, t1.c0)) AND ((t0.c0, t0.c0, vt0.c0, t1.c0, t0.c0))) THEN t0.c0 WHEN t0.c1 THEN '' END) ISNULL));
SELECT DISTINCT vt0.c0, t1.c0, t0.c0, t0.c1, t0.c2 FROM t1, t0, vt0;
SELECT t1.c0, t0.c0, t0.c1, vt0.c0, t0.c2 FROM t0, vt0, t1 GROUP BY t1.c0, t0.c0, t0.c1, vt0.c0, t0.c2;
SELECT ALL t1.c0, t0.c0, t0.c1, vt0.c0, t0.c2 FROM t0, vt0, t1 WHERE (CAST(CAST(t0.c2 AS BLOB) AS NUMERIC)) GROUP BY t1.c0, t0.c0, t0.c1, vt0.c0, t0.c2 UNION SELECT t1.c0, t0.c0, t0.c1, vt0.c0, t0.c2 FROM t0, vt0, t1 WHERE ((NOT (CAST(CAST(t0.c2 AS BLOB) AS NUMERIC)))) GROUP BY t1.c0, t0.c0, t0.c1, vt0.c0, t0.c2 UNION SELECT ALL t1.c0, t0.c0, t0.c1, vt0.c0, t0.c2 FROM t0, vt0, t1 WHERE (((CAST(CAST(t0.c2 AS BLOB) AS NUMERIC)) ISNULL)) GROUP BY t1.c0, t0.c0, t0.c1, vt0.c0, t0.c2;
SELECT t1.c0, t0.c0, t0.c1, vt0.c0, t0.c2 FROM t0, vt0, t1 GROUP BY t1.c0, t0.c0, t0.c1, vt0.c0, t0.c2;
SELECT t1.c0 FROM t1 NOT INDEXED GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(SUM(TOTAL(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((NOT (COUNT(SUM(TOTAL(t1.c0))))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((NOT (COUNT(SUM(TOTAL(t1.c0)))))) ISNULL);
SELECT SUM(NULL) FROM t0 ORDER BY JULIANDAY('', (- (t0.c0)), CASE t0.c2  WHEN t0.c0 THEN t0.c1 END) ASC  NULLS FIRST;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))<=(((vt0.c0)>(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))<=(((vt0.c0)>(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))<=(((vt0.c0)>(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, t1, t0 NOT INDEXED;
SELECT DISTINCT * FROM vt0, t1, t0 WHERE ((('WD''iP\')>((t0.c2 IN (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, t1, t0 WHERE ((NOT ((('WD''iP\')>((t0.c2 IN (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, t1, t0 WHERE ((((('WD''iP\')>((t0.c2 IN (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, t1, t0 NOT INDEXED;
SELECT ALL t0.c2 FROM vt0, t0 GROUP BY t0.c2;
SELECT t0.c2 FROM vt0, t0 WHERE (CAST(vt0.c1 COLLATE BINARY AS NUMERIC)) GROUP BY t0.c2 UNION SELECT t0.c2 FROM vt0, t0 WHERE ((NOT (CAST(vt0.c1 COLLATE BINARY AS NUMERIC)))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM vt0, t0 WHERE (((CAST(vt0.c1 COLLATE BINARY AS NUMERIC)) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM vt0, t0 GROUP BY t0.c2;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING GROUP_CONCAT((((t0.c0, TOTAL(t0.c1), MAX(TOTAL(MIN(AVG(SUM(t0.c0))))))) NOT BETWEEN ((t0.c2, t0.c0, SUM(AVG(AVG(TOTAL(t0.c1)))))) AND ((COUNT(*), t0.c0, COUNT(*))))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING (NOT (GROUP_CONCAT((((t0.c0, TOTAL(t0.c1), MAX(TOTAL(MIN(AVG(SUM(t0.c0))))))) NOT BETWEEN ((t0.c2, t0.c0, SUM(AVG(AVG(TOTAL(t0.c1)))))) AND ((COUNT(*), t0.c0, COUNT(*))))))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING ((GROUP_CONCAT((((t0.c0, TOTAL(t0.c1), MAX(TOTAL(MIN(AVG(SUM(t0.c0))))))) NOT BETWEEN ((t0.c2, t0.c0, SUM(AVG(AVG(TOTAL(t0.c1)))))) AND ((COUNT(*), t0.c0, COUNT(*)))))) ISNULL);
SELECT t0.c1, t0.c0, t0.c2, vt0.c1 FROM vt0, t0;
SELECT ALL t0.c1, t0.c0, t0.c2, vt0.c1 FROM vt0, t0 WHERE ((NOT (CAST(vt0.c0 AS INTEGER)))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2, vt0.c1 FROM vt0, t0 WHERE ((NOT ((NOT (CAST(vt0.c0 AS INTEGER)))))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2, vt0.c1 FROM vt0, t0 WHERE ((((NOT (CAST(vt0.c0 AS INTEGER)))) ISNULL));
SELECT t0.c1, t0.c0, t0.c2, vt0.c1 FROM vt0, t0;
SELECT DISTINCT t0.c1, t1.c0, t0.c2, vt0.c0, t0.c0, vt0.c1 FROM vt0, t0, t1;
SELECT DISTINCT t0.c1, t1.c0, t0.c2, vt0.c0, t0.c0, vt0.c1 FROM vt0, t0, t1 WHERE (((((vt0.c1) IS FALSE)) NOT NULL)) UNION SELECT DISTINCT t0.c1, t1.c0, t0.c2, vt0.c0, t0.c0, vt0.c1 FROM vt0, t0, t1 WHERE ((NOT (((((vt0.c1) IS FALSE)) NOT NULL)))) UNION SELECT DISTINCT t0.c1, t1.c0, t0.c2, vt0.c0, t0.c0, vt0.c1 FROM vt0, t0, t1 WHERE (((((((vt0.c1) IS FALSE)) NOT NULL)) ISNULL));
SELECT DISTINCT t0.c1, t1.c0, t0.c2, vt0.c0, t0.c0, vt0.c1 FROM vt0, t0, t1;
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM t0 WHERE ((~ (CASE WHEN t0.c0 THEN t0.c2 END))) GROUP BY t0.c0, t0.c1 UNION SELECT ALL t0.c0, t0.c1 FROM t0 WHERE ((NOT ((~ (CASE WHEN t0.c0 THEN t0.c2 END))))) GROUP BY t0.c0, t0.c1 UNION SELECT t0.c0, t0.c1 FROM t0 WHERE ((((~ (CASE WHEN t0.c0 THEN t0.c2 END))) ISNULL)) GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT vt0.c1 FROM vt0, t1, t0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, t1, t0 GROUP BY vt0.c1 HAVING SUM(TOTAL(t0.c0)) UNION ALL SELECT ALL vt0.c1 FROM vt0, t1, t0 GROUP BY vt0.c1 HAVING (NOT (SUM(TOTAL(t0.c0)))) UNION ALL SELECT ALL vt0.c1 FROM vt0, t1, t0 GROUP BY vt0.c1 HAVING ((SUM(TOTAL(t0.c0))) ISNULL);
SELECT t0.c2 FROM t0, t1, vt0;
SELECT t0.c2 FROM t0, t1, vt0 WHERE (LOWER(DISTINCT CASE WHEN '-621456399' THEN '-' WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN t1.c0 END)) UNION ALL SELECT ALL t0.c2 FROM t0, t1, vt0 WHERE ((NOT (LOWER(DISTINCT CASE WHEN '-621456399' THEN '-' WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN t1.c0 END)))) UNION ALL SELECT t0.c2 FROM t0, t1, vt0 WHERE (((LOWER(DISTINCT CASE WHEN '-621456399' THEN '-' WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN t1.c0 END)) ISNULL));
SELECT t0.c2 FROM t0, t1, vt0;
SELECT DISTINCT * FROM t0, t1;
SELECT DISTINCT * FROM t0, t1 WHERE (LIKELIHOOD(((((t0.c1)AND(t1.c0)))OR('*m&B')), 0.8070105213357581)) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((NOT (LIKELIHOOD(((((t0.c1)AND(t1.c0)))OR('*m&B')), 0.8070105213357581)))) UNION SELECT DISTINCT * FROM t0, t1 WHERE (((LIKELIHOOD(((((t0.c1)AND(t1.c0)))OR('*m&B')), 0.8070105213357581)) ISNULL));
SELECT DISTINCT * FROM t0, t1;
SELECT ALL t0.c2, vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c2, vt0.c0;
SELECT ALL t0.c2, vt0.c0 FROM t0 NATURAL JOIN vt0 WHERE ((((+ (t0.c1)))GLOB(((t0.c2)&(vt0.c1))))) GROUP BY t0.c2, vt0.c0 UNION SELECT ALL t0.c2, vt0.c0 FROM t0 NATURAL JOIN vt0 WHERE ((NOT ((((+ (t0.c1)))GLOB(((t0.c2)&(vt0.c1))))))) GROUP BY t0.c2, vt0.c0 UNION SELECT t0.c2, vt0.c0 FROM t0 NATURAL JOIN vt0 WHERE ((((((+ (t0.c1)))GLOB(((t0.c2)&(vt0.c1))))) ISNULL)) GROUP BY t0.c2, vt0.c0;
SELECT ALL t0.c2, vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c2, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN t1 ON (((((t0.c0) BETWEEN (t1.c0) AND (vt0.c1)), ((((t0.c1)AND(t1.c0)))OR(t1.c0)), ((t0.c2)||('-607194354'))))>((CAST(vt0.c0 AS NUMERIC), ((((((((t0.c2)AND(t0.c1)))OR(t1.c0)))OR(vt0.c0)))AND(t0.c0)), (+ (t0.c1))))) CROSS JOIN t0 ON RTRIM(t0.c2 COLLATE NOCASE) GROUP BY vt0.c0;
SELECT MIN(TYPEOF((((vt0.c1))>((vt0.c0))))) FROM t1, vt0;
SELECT ALL t0.c1 FROM t0;
SELECT ALL t0.c1 FROM t0 WHERE (t0.c1) UNION ALL SELECT ALL t0.c1 FROM t0 WHERE ((NOT (t0.c1))) UNION ALL SELECT t0.c1 FROM t0 WHERE (((t0.c1) ISNULL));
SELECT ALL t0.c1 FROM t0;
SELECT DISTINCT vt0.c0, t0.c1 FROM t0, t1, vt0;
SELECT DISTINCT vt0.c0, t0.c1 FROM t0, t1, vt0 WHERE (((((t0.c1)IS(vt0.c1)))IS(((((vt0.c0)OR(0.6342165905001764)))AND(vt0.c0))))) UNION SELECT DISTINCT vt0.c0, t0.c1 FROM t0, t1, vt0 WHERE ((NOT (((((t0.c1)IS(vt0.c1)))IS(((((vt0.c0)OR(0.6342165905001764)))AND(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, t0.c1 FROM t0, t1, vt0 WHERE (((((((t0.c1)IS(vt0.c1)))IS(((((vt0.c0)OR(0.6342165905001764)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, t0.c1 FROM t0, t1, vt0;
SELECT t0.c1, t0.c2, t1.c0 FROM t1, t0 GROUP BY t0.c1, t0.c2, t1.c0;
SELECT t0.c1, t0.c2, t1.c0 FROM t1, t0 WHERE (((t0.c1 COLLATE BINARY)>(((t0.c1)GLOB(t0.c0))))) GROUP BY t0.c1, t0.c2, t1.c0 UNION SELECT t0.c1, t0.c2, t1.c0 FROM t1, t0 WHERE ((NOT (((t0.c1 COLLATE BINARY)>(((t0.c1)GLOB(t0.c0))))))) GROUP BY t0.c1, t0.c2, t1.c0 UNION SELECT ALL t0.c1, t0.c2, t1.c0 FROM t1, t0 WHERE (((((t0.c1 COLLATE BINARY)>(((t0.c1)GLOB(t0.c0))))) ISNULL)) GROUP BY t0.c1, t0.c2, t1.c0;
SELECT t0.c1, t0.c2, t1.c0 FROM t1, t0 GROUP BY t0.c1, t0.c2, t1.c0;
SELECT ALL t0.c0, t0.c2, t0.c1, vt0.c1, t1.c0 FROM vt0, t1, t0 GROUP BY t0.c0, t0.c2, t0.c1, vt0.c1, t1.c0;
SELECT t0.c0, t0.c2, t0.c1, vt0.c1, t1.c0 FROM vt0, t1, t0 GROUP BY t0.c0, t0.c2, t0.c1, vt0.c1, t1.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0, t0.c2, t0.c1, vt0.c1, t1.c0 FROM vt0, t1, t0 GROUP BY t0.c0, t0.c2, t0.c1, vt0.c1, t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1, vt0.c1, t1.c0 FROM vt0, t1, t0 GROUP BY t0.c0, t0.c2, t0.c1, vt0.c1, t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, t0.c2, t0.c1, vt0.c1, t1.c0 FROM vt0, t1, t0 GROUP BY t0.c0, t0.c2, t0.c1, vt0.c1, t1.c0;
SELECT t0.c0, t0.c2, t0.c1, vt0.c1, t1.c0 FROM vt0, t1, t0 GROUP BY t0.c0, t0.c2, t0.c1, vt0.c1, t1.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0, t0.c2, t0.c1, vt0.c1, t1.c0 FROM vt0, t1, t0 GROUP BY t0.c0, t0.c2, t0.c1, vt0.c1, t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1, vt0.c1, t1.c0 FROM vt0, t1, t0 GROUP BY t0.c0, t0.c2, t0.c1, vt0.c1, t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, t0.c2, t0.c1, vt0.c1, t1.c0 FROM vt0, t1, t0 GROUP BY t0.c0, t0.c2, t0.c1, vt0.c1, t1.c0;
SELECT t1.c0, t0.c0 FROM vt0, t0, t1;
SELECT t1.c0, t0.c0 FROM vt0, t0, t1 WHERE ((((((((((((((t0.c1)AND(t0.c1)))OR(t0.c0)))OR(vt0.c0)))OR(t1.c0)))OR(t0.c0)))OR(vt0.c0)) IN ())) UNION ALL SELECT t1.c0, t0.c0 FROM vt0, t0, t1 WHERE ((NOT ((((((((((((((t0.c1)AND(t0.c1)))OR(t0.c0)))OR(vt0.c0)))OR(t1.c0)))OR(t0.c0)))OR(vt0.c0)) IN ())))) UNION ALL SELECT t1.c0, t0.c0 FROM vt0, t0, t1 WHERE ((((((((((((((((t0.c1)AND(t0.c1)))OR(t0.c0)))OR(vt0.c0)))OR(t1.c0)))OR(t0.c0)))OR(vt0.c0)) IN ())) ISNULL));
SELECT t1.c0, t0.c0 FROM vt0, t0, t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c0 END)IS NOT(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((CASE WHEN t1.c0 THEN t1.c0 END)IS NOT(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((CASE WHEN t1.c0 THEN t1.c0 END)IS NOT(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (TRIM(DISTINCT '铴iysO<oOI', vt0.c1)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)AND(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (TRIM(DISTINCT '铴iysO<oOI', vt0.c1)))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (TRIM(DISTINCT '铴iysO<oOI', vt0.c1)))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL t0.c1, t0.c0, t0.c2, t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON ((COALESCE(DISTINCT t0.c1, t0.c1)) NOT BETWEEN (((t0.c1)IS(t0.c1))) AND ((t1.c0 IN ()))) GROUP BY t0.c1, t0.c0, t0.c2, t1.c0;
SELECT t0.c1, t0.c0, t0.c2, t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON ((COALESCE(DISTINCT t0.c1, t0.c1)) NOT BETWEEN (((t0.c1)IS(t0.c1))) AND ((t1.c0 IN ()))) GROUP BY t0.c1, t0.c0, t0.c2, t1.c0 HAVING ((AVG(t1.c0)) NOT NULL) UNION ALL SELECT t0.c1, t0.c0, t0.c2, t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON ((COALESCE(DISTINCT t0.c1, t0.c1)) NOT BETWEEN (((t0.c1)IS(t0.c1))) AND ((t1.c0 IN ()))) GROUP BY t0.c1, t0.c0, t0.c2, t1.c0 HAVING (NOT (((AVG(t1.c0)) NOT NULL))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2, t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON ((COALESCE(DISTINCT t0.c1, t0.c1)) NOT BETWEEN (((t0.c1)IS(t0.c1))) AND ((t1.c0 IN ()))) GROUP BY t0.c1, t0.c0, t0.c2, t1.c0 HAVING ((((AVG(t1.c0)) NOT NULL)) ISNULL);
SELECT ALL t0.c1, t0.c0, t0.c2, t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON ((COALESCE(DISTINCT t0.c1, t0.c1)) NOT BETWEEN (((t0.c1)IS(t0.c1))) AND ((t1.c0 IN ()))) GROUP BY t0.c1, t0.c0, t0.c2, t1.c0;
SELECT t0.c1, t0.c0, t0.c2, t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON ((COALESCE(DISTINCT t0.c1, t0.c1)) NOT BETWEEN (((t0.c1)IS(t0.c1))) AND ((t1.c0 IN ()))) GROUP BY t0.c1, t0.c0, t0.c2, t1.c0 HAVING ((AVG(t1.c0)) NOT NULL) UNION ALL SELECT t0.c1, t0.c0, t0.c2, t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON ((COALESCE(DISTINCT t0.c1, t0.c1)) NOT BETWEEN (((t0.c1)IS(t0.c1))) AND ((t1.c0 IN ()))) GROUP BY t0.c1, t0.c0, t0.c2, t1.c0 HAVING (NOT (((AVG(t1.c0)) NOT NULL))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2, t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON ((COALESCE(DISTINCT t0.c1, t0.c1)) NOT BETWEEN (((t0.c1)IS(t0.c1))) AND ((t1.c0 IN ()))) GROUP BY t0.c1, t0.c0, t0.c2, t1.c0 HAVING ((((AVG(t1.c0)) NOT NULL)) ISNULL);
SELECT ALL t0.c1, t0.c0, t0.c2, t1.c0 FROM t1 RIGHT OUTER JOIN t0 ON ((COALESCE(DISTINCT t0.c1, t0.c1)) NOT BETWEEN (((t0.c1)IS(t0.c1))) AND ((t1.c0 IN ()))) GROUP BY t0.c1, t0.c0, t0.c2, t1.c0;
SELECT ALL t0.c2, t0.c0 FROM t0, vt0, t1;
SELECT ALL t0.c2, t0.c0 FROM t0, vt0, t1 WHERE ((((((+ (t0.c2)))OR(t1.c0 COLLATE BINARY)))AND(CASE t0.c0  WHEN t0.c1 THEN t1.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 ELSE vt0.c1 END))) UNION ALL SELECT t0.c2, t0.c0 FROM t0, vt0, t1 WHERE ((NOT ((((((+ (t0.c2)))OR(t1.c0 COLLATE BINARY)))AND(CASE t0.c0  WHEN t0.c1 THEN t1.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 ELSE vt0.c1 END))))) UNION ALL SELECT t0.c2, t0.c0 FROM t0, vt0, t1 WHERE ((((((((+ (t0.c2)))OR(t1.c0 COLLATE BINARY)))AND(CASE t0.c0  WHEN t0.c1 THEN t1.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 ELSE vt0.c1 END))) ISNULL));
SELECT ALL t0.c2, t0.c0 FROM t0, vt0, t1;
SELECT DISTINCT t0.c1, vt0.c0, t0.c0, t0.c2, vt0.c1 FROM vt0 CROSS JOIN t0 ON TYPEOF('-312876862') LEFT OUTER JOIN t1 ON ((((vt0.c0)AND(((t1.c0)IS(vt0.c0)))))OR(x''));
SELECT DISTINCT t0.c1, vt0.c0, t0.c0, t0.c2, vt0.c1 FROM vt0 CROSS JOIN t0 ON TYPEOF('-312876862') LEFT OUTER JOIN t1 ON ((((vt0.c0)AND(((t1.c0)IS(vt0.c0)))))OR(x'')) WHERE ((((((0.5433053517638115)) BETWEEN ((vt0.c1)) AND ((t1.c0))))!=(t1.c0 COLLATE NOCASE))) UNION SELECT DISTINCT t0.c1, vt0.c0, t0.c0, t0.c2, vt0.c1 FROM vt0 CROSS JOIN t0 ON TYPEOF('-312876862') LEFT OUTER JOIN t1 ON ((((vt0.c0)AND(((t1.c0)IS(vt0.c0)))))OR(x'')) WHERE ((NOT ((((((0.5433053517638115)) BETWEEN ((vt0.c1)) AND ((t1.c0))))!=(t1.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT t0.c1, vt0.c0, t0.c0, t0.c2, vt0.c1 FROM vt0 CROSS JOIN t0 ON TYPEOF('-312876862') LEFT OUTER JOIN t1 ON ((((vt0.c0)AND(((t1.c0)IS(vt0.c0)))))OR(x'')) WHERE ((((((((0.5433053517638115)) BETWEEN ((vt0.c1)) AND ((t1.c0))))<>(t1.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT t0.c1, vt0.c0, t0.c0, t0.c2, vt0.c1 FROM vt0 CROSS JOIN t0 ON TYPEOF('-312876862') LEFT OUTER JOIN t1 ON ((((vt0.c0)AND(((t1.c0)IS(vt0.c0)))))OR(x''));
SELECT t0.c1 FROM t1, vt0, t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t1, vt0, t0 WHERE (vt0.c0) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t1, vt0, t0 WHERE ((NOT (vt0.c0))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t1, vt0, t0 WHERE (((vt0.c0) ISNULL)) GROUP BY t0.c1;
SELECT t0.c1 FROM t1, vt0, t0 GROUP BY t0.c1;
SELECT vt0.c0, t0.c1, t0.c0, t1.c0 FROM t1, vt0, t0 GROUP BY vt0.c0, t0.c1, t0.c0, t1.c0;
SELECT ALL vt0.c0, t0.c1, t0.c0, t1.c0 FROM t1, vt0, t0 GROUP BY vt0.c0, t0.c1, t0.c0, t1.c0 HAVING MIN(HEX(DISTINCT t0.c0)) UNION ALL SELECT ALL vt0.c0, t0.c1, t0.c0, t1.c0 FROM t1, vt0 NOT INDEXED, t0 GROUP BY vt0.c0, t0.c1, t0.c0, t1.c0 HAVING (NOT (MIN(HEX(DISTINCT t0.c0)))) UNION ALL SELECT vt0.c0, t0.c1, t0.c0, t1.c0 FROM t1, vt0, t0 GROUP BY vt0.c0, t0.c1, t0.c0, t1.c0 HAVING ((MIN(HEX(DISTINCT t0.c0))) ISNULL);
SELECT vt0.c0, t0.c1, t0.c0, t1.c0 FROM t1, vt0, t0 GROUP BY vt0.c0, t0.c1, t0.c0, t1.c0;
SELECT ALL vt0.c0, t0.c1, t0.c0, t1.c0 FROM t1, vt0, t0 GROUP BY vt0.c0, t0.c1, t0.c0, t1.c0 HAVING MIN(HEX(DISTINCT t0.c0)) UNION ALL SELECT ALL vt0.c0, t0.c1, t0.c0, t1.c0 FROM t1, vt0 NOT INDEXED, t0 GROUP BY vt0.c0, t0.c1, t0.c0, t1.c0 HAVING (NOT (MIN(HEX(DISTINCT t0.c0)))) UNION ALL SELECT vt0.c0, t0.c1, t0.c0, t1.c0 FROM t1, vt0, t0 GROUP BY vt0.c0, t0.c1, t0.c0, t1.c0 HAVING ((MIN(HEX(DISTINCT t0.c0))) ISNULL);
SELECT vt0.c0, t0.c1, t0.c0, t1.c0 FROM t1, vt0, t0 GROUP BY vt0.c0, t0.c1, t0.c0, t1.c0;
SELECT ALL SUM('') FROM vt0, t1, t0;
SELECT ALL t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (((x'') NOT BETWEEN (((t1.c0) BETWEEN ('KFm<') AND (t1.c0))) AND ((- (t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT (((x'') NOT BETWEEN (((t1.c0) BETWEEN ('KFm<') AND (t1.c0))) AND ((- (t1.c0))))))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE (((((x'') NOT BETWEEN (((t1.c0) BETWEEN ('KFm<') AND (t1.c0))) AND ((- (t1.c0))))) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT t1.c0, t0.c2, vt0.c0 FROM vt0, t1, t0;
SELECT DISTINCT t1.c0, t0.c2, vt0.c0 FROM vt0, t1, t0 WHERE (((t1.c0)IS NOT(vt0.c1)) COLLATE NOCASE) UNION SELECT DISTINCT t1.c0, t0.c2, vt0.c0 FROM vt0, t1, t0 WHERE ((NOT (((t1.c0)IS NOT(vt0.c1)) COLLATE NOCASE))) UNION SELECT DISTINCT t1.c0, t0.c2, vt0.c0 FROM vt0, t1, t0 WHERE (((((t1.c0)IS NOT(vt0.c1)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT t1.c0, t0.c2, vt0.c0 FROM vt0, t1, t0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE ((((+ (t1.c0)))||(((t1.c0)-(t1.c0))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((((+ (t1.c0)))||(((t1.c0)-(t1.c0))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((((+ (t1.c0)))||(((t1.c0)-(t1.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING '' UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ('')) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (('') ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING '' UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ('')) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (('') ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (t0.c1 COLLATE RTRIM) UNION ALL SELECT * FROM t0 WHERE ((NOT (t0.c1 COLLATE RTRIM))) UNION ALL SELECT * FROM t0 WHERE (((t0.c1 COLLATE RTRIM) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0, t1 FULL OUTER JOIN vt0 ON ((((t0.c1)-(vt0.c1))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c1))) AND ((((t0.c2))==((t0.c0)))));
SELECT DISTINCT * FROM t0, t1 FULL OUTER JOIN vt0 ON ((((t0.c1)-(vt0.c1))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c1))) AND ((((t0.c2))==((t0.c0))))) WHERE (((((((((((((t0.c0)AND(CAST(t0.c2 AS TEXT))))OR(((((((((vt0.c1)AND(t0.c1)))OR(t1.c0)))OR(vt0.c0)))OR(t0.c2)))))OR((((t0.c1))<((vt0.c0))))))OR((('/cl')==(vt0.c1)))))AND(((t0.c2)LIKE(vt0.c0)))))AND(0.18072047595818308))) UNION SELECT DISTINCT * FROM t0, t1 FULL OUTER JOIN vt0 ON ((((t0.c1)-(vt0.c1))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c1))) AND ((((t0.c2))==((t0.c0))))) WHERE ((NOT (((((((((((((t0.c0)AND(CAST(t0.c2 AS TEXT))))OR(((((((((vt0.c1)AND(t0.c1)))OR(t1.c0)))OR(vt0.c0)))OR(t0.c2)))))OR((((t0.c1))<((vt0.c0))))))OR((('/cl')==(vt0.c1)))))AND(((t0.c2)LIKE(vt0.c0)))))AND(0.18072047595818308))))) UNION SELECT DISTINCT * FROM t0, t1 FULL OUTER JOIN vt0 ON ((((t0.c1)-(vt0.c1))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c1))) AND ((((t0.c2))==((t0.c0))))) WHERE (((((((((((((((t0.c0)AND(CAST(t0.c2 AS TEXT))))OR(((((((((vt0.c1)AND(t0.c1)))OR(t1.c0)))OR(vt0.c0)))OR(t0.c2)))))OR((((t0.c1))<((vt0.c0))))))OR((('/cl')=(vt0.c1)))))AND(((t0.c2)LIKE(vt0.c0)))))AND(0.18072047595818308))) ISNULL));
SELECT DISTINCT * FROM t0, t1 FULL OUTER JOIN vt0 ON ((((t0.c1)-(vt0.c1))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c1))) AND ((((t0.c2))==((t0.c0)))));
SELECT t1.c0, t0.c2, vt0.c0 FROM vt0 INNER JOIN t0 ON (((t0.c2 IN ())) NOT BETWEEN (0x14024f6e) AND (((t0.c2)||(t0.c0)))) FULL OUTER JOIN t1 ON ((t0.c0 COLLATE NOCASE)<(CAST(t0.c2 AS REAL))) GROUP BY t1.c0, t0.c2, vt0.c0;
SELECT t1.c0, t0.c2, vt0.c0 FROM vt0 INNER JOIN t0 ON (((t0.c2 IN ())) NOT BETWEEN (0X14024f6e) AND (((t0.c2)||(t0.c0)))) FULL OUTER JOIN t1 ON ((t0.c0 COLLATE NOCASE)<(CAST(t0.c2 AS REAL))) WHERE (((((vt0.c0) ISNULL))+((NOT (vt0.c0))))) GROUP BY t1.c0, t0.c2, vt0.c0 UNION SELECT ALL t1.c0, t0.c2, vt0.c0 FROM vt0 INNER JOIN t0 ON (((t0.c2 IN ())) NOT BETWEEN (0x14024f6e) AND (((t0.c2)||(t0.c0)))) FULL OUTER JOIN t1 ON ((t0.c0 COLLATE NOCASE)<(CAST(t0.c2 AS REAL))) WHERE ((NOT (((((vt0.c0) ISNULL))+((NOT (vt0.c0))))))) GROUP BY t1.c0, t0.c2, vt0.c0 UNION SELECT t1.c0, t0.c2, vt0.c0 FROM vt0 INNER JOIN t0 ON (((t0.c2 IN ())) NOT BETWEEN (0x14024f6e) AND (((t0.c2)||(t0.c0)))) FULL OUTER JOIN t1 ON ((t0.c0 COLLATE NOCASE)<(CAST(t0.c2 AS REAL))) WHERE (((((((vt0.c0) ISNULL))+((NOT (vt0.c0))))) ISNULL)) GROUP BY t1.c0, t0.c2, vt0.c0;
SELECT t1.c0, t0.c2, vt0.c0 FROM vt0 INNER JOIN t0 ON (((t0.c2 IN ())) NOT BETWEEN (0x14024f6e) AND (((t0.c2)||(t0.c0)))) FULL OUTER JOIN t1 ON ((t0.c0 COLLATE NOCASE)<(CAST(t0.c2 AS REAL))) GROUP BY t1.c0, t0.c2, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c0 HAVING GROUP_CONCAT(TOTAL(vt0.c0)) UNION ALL SELECT ALL t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(vt0.c0)))) UNION ALL SELECT t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c0 HAVING ((GROUP_CONCAT(TOTAL(vt0.c0))) ISNULL);
SELECT ALL t0.c2, t0.c1, t1.c0, t0.c0 FROM t0, t1;
SELECT t0.c2, t0.c1, t1.c0, t0.c0 FROM t0, t1 WHERE ((((+ (t0.c0)))+((t1.c0 IN (t0.c2))))) UNION ALL SELECT t0.c2, t0.c1, t1.c0, t0.c0 FROM t0, t1 WHERE ((NOT ((((+ (t0.c0)))+((t1.c0 IN (t0.c2))))))) UNION ALL SELECT t0.c2, t0.c1, t1.c0, t0.c0 FROM t0, t1 WHERE ((((((+ (t0.c0)))+((t1.c0 IN (t0.c2))))) ISNULL));
SELECT ALL t0.c2, t0.c1, t1.c0, t0.c0 FROM t0, t1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED WHERE ((((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL t0.c0, t0.c2, t0.c1, t1.c0 FROM t1, t0 GROUP BY t0.c0, t0.c2, t0.c1, t1.c0;
SELECT t0.c0, t0.c2, t0.c1, t1.c0 FROM t1, t0 WHERE ((~ (CAST(t1.c0 AS REAL)))) GROUP BY t0.c0, t0.c2, t0.c1, t1.c0 UNION SELECT ALL t0.c0, t0.c2, t0.c1, t1.c0 FROM t1, t0 WHERE ((NOT ((~ (CAST(t1.c0 AS REAL)))))) GROUP BY t0.c0, t0.c2, t0.c1, t1.c0 UNION SELECT t0.c0, t0.c2, t0.c1, t1.c0 FROM t1, t0 WHERE ((((~ (CAST(t1.c0 AS REAL)))) ISNULL)) GROUP BY t0.c0, t0.c2, t0.c1, t1.c0;
SELECT ALL t0.c0, t0.c2, t0.c1, t1.c0 FROM t1, t0 GROUP BY t0.c0, t0.c2, t0.c1, t1.c0;
SELECT ALL t0.c2, vt0.c0 FROM t0 CROSS JOIN vt0 ON (((t0.c1)) BETWEEN (((('1570057852') NOTNULL))) AND ((((t0.c0)<(t0.c2))))) GROUP BY t0.c2, vt0.c0;
SELECT ALL t0.c2, vt0.c0 FROM t0 CROSS JOIN vt0 ON (((t0.c1)) BETWEEN (((('1570057852') NOTNULL))) AND ((((t0.c0)<(t0.c2))))) GROUP BY t0.c2, vt0.c0 HAVING TOTAL(TOTAL(t0.c2)) UNION ALL SELECT ALL t0.c2, vt0.c0 FROM t0 CROSS JOIN vt0 ON (((t0.c1)) BETWEEN (((('1570057852') NOTNULL))) AND ((((t0.c0)<(t0.c2))))) GROUP BY t0.c2, vt0.c0 HAVING (NOT (TOTAL(TOTAL(t0.c2)))) UNION ALL SELECT t0.c2, vt0.c0 FROM t0 CROSS JOIN vt0 ON (((t0.c1)) BETWEEN (((('1570057852') NOTNULL))) AND ((((t0.c0)<(t0.c2))))) GROUP BY t0.c2, vt0.c0 HAVING ((TOTAL(TOTAL(t0.c2))) ISNULL);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (((((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))))OR(((t0.c0) NOT BETWEEN (t0.c1) AND (vt0.c1)))))OR('G' COLLATE BINARY)) RIGHT OUTER JOIN t1 ON IFNULL(CAST(NULL AS NUMERIC), ((vt0.c1)+(t0.c1)));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (((((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))))OR(((t0.c0) NOT BETWEEN (t0.c1) AND (vt0.c1)))))OR('G' COLLATE BINARY)) RIGHT OUTER JOIN t1 ON IFNULL(CAST(NULL AS NUMERIC), ((vt0.c1)+(t0.c1))) WHERE (CASE (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))  WHEN t0.c1 THEN ABS(DISTINCT vt0.c1) ELSE ((((t1.c0)AND(vt0.c1)))AND(t0.c1)) END) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (((((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))))OR(((t0.c0) NOT BETWEEN (t0.c1) AND (vt0.c1)))))OR('G' COLLATE BINARY)) RIGHT OUTER JOIN t1 ON IFNULL(CAST(NULL AS NUMERIC), ((vt0.c1)+(t0.c1))) WHERE ((NOT (CASE (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))  WHEN t0.c1 THEN ABS(DISTINCT vt0.c1) ELSE ((((t1.c0)AND(vt0.c1)))AND(t0.c1)) END))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (((((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))))OR(((t0.c0) NOT BETWEEN (t0.c1) AND (vt0.c1)))))OR('G' COLLATE BINARY)) RIGHT OUTER JOIN t1 ON IFNULL(CAST(NULL AS NUMERIC), ((vt0.c1)+(t0.c1))) WHERE (((CASE (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))  WHEN t0.c1 THEN ABS(DISTINCT vt0.c1) ELSE ((((t1.c0)AND(vt0.c1)))AND(t0.c1)) END) ISNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (((((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))))OR(((t0.c0) NOT BETWEEN (t0.c1) AND (vt0.c1)))))OR('G' COLLATE BINARY)) RIGHT OUTER JOIN t1 ON IFNULL(CAST(NULL AS NUMERIC), ((vt0.c1)+(t0.c1)));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((NULL)|(((t0.c2)||(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((NULL)|(((t0.c2)||(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((NULL)|(((t0.c2)||(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t1.c0 FROM t1 INDEXED BY i17 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 INDEXED BY i17 WHERE (rtreenode((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))), ((((t1.c0)AND(t1.c0)))OR(t1.c0)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 INDEXED BY i17 WHERE ((NOT (rtreenode((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))), ((((t1.c0)AND(t1.c0)))OR(t1.c0)))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 INDEXED BY i17 WHERE (((rtreenode((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))), ((((t1.c0)AND(t1.c0)))OR(t1.c0)))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 INDEXED BY i17 GROUP BY t1.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((((NOT (t0.c0))))<=((GROUP_CONCAT(vt0.c1)))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT (((((NOT (t0.c0))))<=((GROUP_CONCAT(vt0.c1)))))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((((((NOT (t0.c0))))<=((GROUP_CONCAT(vt0.c1))))) ISNULL);
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((((NOT (t0.c0))))<=((GROUP_CONCAT(vt0.c1)))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING (NOT (((((NOT (t0.c0))))<=((GROUP_CONCAT(vt0.c1)))))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0 HAVING ((((((NOT (t0.c0))))<=((GROUP_CONCAT(vt0.c1))))) ISNULL);
SELECT ALL vt0.c0 FROM t0, vt0 GROUP BY vt0.c0;
SELECT * FROM t1 CROSS JOIN vt0 ON ((LOWER(t1.c0))LIKE(((t0.c2) BETWEEN (t0.c1) AND (vt0.c0)))) LEFT OUTER JOIN t0 ON ((vt0.c0)<(t1.c0)) COLLATE RTRIM;
SELECT * FROM t1 CROSS JOIN vt0 ON ((LOWER(t1.c0))LIKE(((t0.c2) BETWEEN (t0.c1) AND (vt0.c0)))) LEFT OUTER JOIN t0 ON ((vt0.c0)<(t1.c0)) COLLATE RTRIM WHERE (((CASE WHEN t1.c0 THEN vt0.c1 END) NOT BETWEEN ('-720512274') AND (vt0.c1 COLLATE BINARY))) UNION ALL SELECT * FROM t1 CROSS JOIN vt0 ON ((LOWER(t1.c0))LIKE(((t0.c2) BETWEEN (t0.c1) AND (vt0.c0)))) LEFT OUTER JOIN t0 ON ((vt0.c0)<(t1.c0)) COLLATE RTRIM WHERE ((NOT (((CASE WHEN t1.c0 THEN vt0.c1 END) NOT BETWEEN ('-720512274') AND (vt0.c1 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM t1 CROSS JOIN vt0 ON ((LOWER(t1.c0))LIKE(((t0.c2) BETWEEN (t0.c1) AND (vt0.c0)))) LEFT OUTER JOIN t0 ON ((vt0.c0)<(t1.c0)) COLLATE RTRIM WHERE (((((CASE WHEN t1.c0 THEN vt0.c1 END) NOT BETWEEN ('-720512274') AND (vt0.c1 COLLATE BINARY))) ISNULL));
SELECT * FROM t1 CROSS JOIN vt0 ON ((LOWER(t1.c0))LIKE(((t0.c2) BETWEEN (t0.c1) AND (vt0.c0)))) LEFT OUTER JOIN t0 ON ((vt0.c0)<(t1.c0)) COLLATE RTRIM;
SELECT DISTINCT t0.c1 FROM t0, vt0, t1;
SELECT DISTINCT t0.c1 FROM t0, vt0, t1 WHERE (((((t1.c0)OR(json(x''))))AND(((NULL)+(vt0.c1))))) UNION SELECT DISTINCT t0.c1 FROM t0, vt0, t1 WHERE ((NOT (((((t1.c0)OR(json(x''))))AND(((NULL)+(vt0.c1))))))) UNION SELECT DISTINCT t0.c1 FROM t0, vt0, t1 WHERE (((((((t1.c0)OR(json(x''))))AND(((NULL)+(vt0.c1))))) ISNULL));
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE ('-153082929') GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT ('-153082929'))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((('-153082929') ISNULL)) GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0, t1 FULL OUTER JOIN t0 ON ((((t1.c0) BETWEEN (t0.c2) AND (t0.c0)))IS((t0.c0 IN (0.47255876190893054, t0.c0)))) GROUP BY vt0.c0, t0.c0, vt0.c1;
SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM vt0, t1 FULL OUTER JOIN t0 ON ((((t1.c0) BETWEEN (t0.c2) AND (t0.c0)))IS((t0.c0 IN (0.47255876190893054, t0.c0)))) GROUP BY vt0.c0, t0.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0, t1 FULL OUTER JOIN t0 ON ((((t1.c0) BETWEEN (t0.c2) AND (t0.c0)))IS((t0.c0 IN (0.47255876190893054, t0.c0)))) GROUP BY vt0.c0, t0.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM vt0, t1 FULL OUTER JOIN t0 ON ((((t1.c0) BETWEEN (t0.c2) AND (t0.c0)))IS((t0.c0 IN (0.47255876190893054, t0.c0)))) GROUP BY vt0.c0, t0.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0, t1 FULL OUTER JOIN t0 ON ((((t1.c0) BETWEEN (t0.c2) AND (t0.c0)))IS((t0.c0 IN (0.47255876190893054, t0.c0)))) GROUP BY vt0.c0, t0.c0, vt0.c1;
SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM vt0, t1 FULL OUTER JOIN t0 ON ((((t1.c0) BETWEEN (t0.c2) AND (t0.c0)))IS((t0.c0 IN (0.47255876190893054, t0.c0)))) GROUP BY vt0.c0, t0.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0, t1 FULL OUTER JOIN t0 ON ((((t1.c0) BETWEEN (t0.c2) AND (t0.c0)))IS((t0.c0 IN (0.47255876190893054, t0.c0)))) GROUP BY vt0.c0, t0.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, t0.c0, vt0.c1 FROM vt0, t1 FULL OUTER JOIN t0 ON ((((t1.c0) BETWEEN (t0.c2) AND (t0.c0)))IS((t0.c0 IN (0.47255876190893054, t0.c0)))) GROUP BY vt0.c0, t0.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, t0.c0, vt0.c1 FROM vt0, t1 FULL OUTER JOIN t0 ON ((((t1.c0) BETWEEN (t0.c2) AND (t0.c0)))IS((t0.c0 IN (0.47255876190893054, t0.c0)))) GROUP BY vt0.c0, t0.c0, vt0.c1;
SELECT t0.c2, t0.c1, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON 0xffffffff870058c8;
SELECT ALL t0.c2, t0.c1, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON 0Xffffffff870058c8 WHERE (((t0.c0 COLLATE NOCASE) NOT NULL)) UNION ALL SELECT t0.c2, t0.c1, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON 0Xffffffff870058c8 WHERE ((NOT (((t0.c0 COLLATE NOCASE) NOT NULL)))) UNION ALL SELECT ALL t0.c2, t0.c1, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON 0xffffffff870058c8 WHERE (((((t0.c0 COLLATE NOCASE) NOT NULL)) ISNULL));
SELECT t0.c2, t0.c1, vt0.c0 FROM t0 LEFT OUTER JOIN vt0 ON 0xffffffff870058c8;
SELECT DISTINCT t1.c0, t0.c0, t0.c1, t0.c2 FROM t1, t0;
SELECT DISTINCT t1.c0, t0.c0, t0.c1, t0.c2 FROM t1, t0 WHERE (((((((t0.c1)AND(t1.c0)))AND(t0.c0)))-(t0.c0))) UNION SELECT DISTINCT t1.c0, t0.c0, t0.c1, t0.c2 FROM t1, t0 WHERE ((NOT (((((((t0.c1)AND(t1.c0)))AND(t0.c0)))-(t0.c0))))) UNION SELECT DISTINCT t1.c0, t0.c0, t0.c1, t0.c2 FROM t1, t0 WHERE (((((((((t0.c1)AND(t1.c0)))AND(t0.c0)))-(t0.c0))) ISNULL));
SELECT DISTINCT t1.c0, t0.c0, t0.c1, t0.c2 FROM t1, t0;
SELECT ALL t1.c0 FROM t0, t1, vt0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1, vt0 WHERE (((((t1.c0) ISNULL)) NOT NULL)) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t0, t1, vt0 WHERE ((NOT (((((t1.c0) ISNULL)) NOT NULL)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0, t1, vt0 WHERE (((((((t1.c0) ISNULL)) NOT NULL)) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1, vt0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING t1.c0 UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (t1.c0)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((t1.c0) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING t1.c0 UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (t1.c0)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((t1.c0) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c1, t0.c0 FROM t0;
SELECT ALL t0.c1, t0.c0 FROM t0 WHERE ((- (CAST(t0.c2 AS NUMERIC)))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 WHERE ((NOT ((- (CAST(t0.c2 AS NUMERIC)))))) UNION ALL SELECT t0.c1, t0.c0 FROM t0 WHERE ((((- (CAST(t0.c2 AS NUMERIC)))) ISNULL));
SELECT ALL t0.c1, t0.c0 FROM t0;
SELECT DISTINCT vt0.c1, t1.c0, vt0.c0 FROM t0, vt0, t1;
SELECT DISTINCT vt0.c1, t1.c0, vt0.c0 FROM t0, vt0, t1 WHERE (((((NULL) BETWEEN (t0.c1) AND (-85013608)))&(((((t1.c0)OR(t0.c2)))AND(t0.c1))))) UNION SELECT DISTINCT vt0.c1, t1.c0, vt0.c0 FROM t0, vt0, t1 WHERE ((NOT (((((NULL) BETWEEN (t0.c1) AND (-85013608)))&(((((t1.c0)OR(t0.c2)))AND(t0.c1))))))) UNION SELECT DISTINCT vt0.c1, t1.c0, vt0.c0 FROM t0, vt0, t1 WHERE (((((((NULL) BETWEEN (t0.c1) AND (-85013608)))&(((((t1.c0)OR(t0.c2)))AND(t0.c1))))) ISNULL));
SELECT DISTINCT vt0.c1, t1.c0, vt0.c0 FROM t0, vt0, t1;
SELECT t0.c0 FROM t0, vt0, t1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0, t1 WHERE ((((CASE t1.c0  WHEN t0.c2 THEN vt0.c0 END))>(('430623077')))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt0, t1 WHERE ((NOT ((((CASE t1.c0  WHEN t0.c2 THEN vt0.c0 END))>(('430623077')))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt0, t1 NOT INDEXED WHERE ((((((CASE t1.c0  WHEN t0.c2 THEN vt0.c0 END))>(('430623077')))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0, t1 GROUP BY t0.c0;
SELECT vt0.c0, t0.c2, t1.c0, vt0.c1, t0.c1, t0.c0 FROM t0, vt0, t1 GROUP BY vt0.c0, t0.c2, t1.c0, vt0.c1, t0.c1, t0.c0;
SELECT ALL vt0.c0, t0.c2, t1.c0, vt0.c1, t0.c1, t0.c0 FROM t0, vt0, t1 GROUP BY vt0.c0, t0.c2, t1.c0, vt0.c1, t0.c1, t0.c0 HAVING MIN(((t1.c0) ISNULL)) UNION ALL SELECT vt0.c0, t0.c2, t1.c0, vt0.c1, t0.c1, t0.c0 FROM t0, vt0, t1 GROUP BY vt0.c0, t0.c2, t1.c0, vt0.c1, t0.c1, t0.c0 HAVING (NOT (MIN(((t1.c0) ISNULL)))) UNION ALL SELECT ALL vt0.c0, t0.c2, t1.c0, vt0.c1, t0.c1, t0.c0 FROM t0, vt0, t1 GROUP BY vt0.c0, t0.c2, t1.c0, vt0.c1, t0.c1, t0.c0 HAVING ((MIN(((t1.c0) ISNULL))) ISNULL);
SELECT vt0.c0, t0.c2, t1.c0, vt0.c1, t0.c1, t0.c0 FROM t0, vt0, t1 GROUP BY vt0.c0, t0.c2, t1.c0, vt0.c1, t0.c1, t0.c0;
SELECT ALL vt0.c0, t0.c2, t1.c0, vt0.c1, t0.c1, t0.c0 FROM t0, vt0, t1 GROUP BY vt0.c0, t0.c2, t1.c0, vt0.c1, t0.c1, t0.c0 HAVING MIN(((t1.c0) ISNULL)) UNION ALL SELECT vt0.c0, t0.c2, t1.c0, vt0.c1, t0.c1, t0.c0 FROM t0, vt0, t1 GROUP BY vt0.c0, t0.c2, t1.c0, vt0.c1, t0.c1, t0.c0 HAVING (NOT (MIN(((t1.c0) ISNULL)))) UNION ALL SELECT ALL vt0.c0, t0.c2, t1.c0, vt0.c1, t0.c1, t0.c0 FROM t0, vt0, t1 GROUP BY vt0.c0, t0.c2, t1.c0, vt0.c1, t0.c1, t0.c0 HAVING ((MIN(((t1.c0) ISNULL))) ISNULL);
SELECT vt0.c0, t0.c2, t1.c0, vt0.c1, t0.c1, t0.c0 FROM t0, vt0, t1 GROUP BY vt0.c0, t0.c2, t1.c0, vt0.c1, t0.c1, t0.c0;
SELECT ALL t1.c0, vt0.c1 FROM vt0, t1;
SELECT t1.c0, vt0.c1 FROM vt0, t1 WHERE (vt0.c0) UNION ALL SELECT t1.c0, vt0.c1 FROM vt0, t1 WHERE ((NOT (vt0.c0))) UNION ALL SELECT t1.c0, vt0.c1 FROM vt0, t1 WHERE (((vt0.c0) ISNULL));
SELECT ALL t1.c0, vt0.c1 FROM vt0, t1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (json_extract((((t0.c0, t0.c2, t0.c2))>=(('', t0.c1, t0.c2))), ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (json_extract((((t0.c0, t0.c2, t0.c2))>=(('', t0.c1, t0.c2))), ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((json_extract((((t0.c0, t0.c2, t0.c2))>=(('', t0.c1, t0.c2))), ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0))) ISNULL)) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)AND(vt0.c0))) ISNULL)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0))) ISNULL)) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING GROUP_CONCAT((t1.c0 IN ())) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (GROUP_CONCAT((t1.c0 IN ())))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((GROUP_CONCAT((t1.c0 IN ()))) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING GROUP_CONCAT((t1.c0 IN ())) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (GROUP_CONCAT((t1.c0 IN ())))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((GROUP_CONCAT((t1.c0 IN ()))) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON (((vt0.c1)GLOB(t0.c0)) IN ()) LEFT OUTER JOIN t0 ON CASE ((vt0.c1)||(t0.c0))  WHEN ((((t1.c0)OR(x'')))AND(vt0.c1)) THEN ((t0.c1)>>(t0.c2)) END;
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON (((vt0.c1)GLOB(t0.c0)) IN ()) LEFT OUTER JOIN t0 ON CASE ((vt0.c1)||(t0.c0))  WHEN ((((t1.c0)OR(x'')))AND(vt0.c1)) THEN ((t0.c1)>>(t0.c2)) END WHERE (((0.3141110093516195) IS FALSE)) UNION ALL SELECT * FROM t1 LEFT OUTER JOIN vt0 ON (((vt0.c1)GLOB(t0.c0)) IN ()) LEFT OUTER JOIN t0 ON CASE ((vt0.c1)||(t0.c0))  WHEN ((((t1.c0)OR(x'')))AND(vt0.c1)) THEN ((t0.c1)>>(t0.c2)) END WHERE ((NOT (((0.3141110093516195) IS FALSE)))) UNION ALL SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON (((vt0.c1)GLOB(t0.c0)) IN ()) LEFT OUTER JOIN t0 ON CASE ((vt0.c1)||(t0.c0))  WHEN ((((t1.c0)OR(x'')))AND(vt0.c1)) THEN ((t0.c1)>>(t0.c2)) END WHERE (((((0.3141110093516195) IS FALSE)) ISNULL));
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON (((vt0.c1)GLOB(t0.c0)) IN ()) LEFT OUTER JOIN t0 ON CASE ((vt0.c1)||(t0.c0))  WHEN ((((t1.c0)OR(x'')))AND(vt0.c1)) THEN ((t0.c1)>>(t0.c2)) END;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((vt0.c1)>(x''))) BETWEEN (((vt0.c0) IS TRUE)) AND ((((vt0.c0, vt0.c1, vt0.c1))<=((x'', NULL, vt0.c1)))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c1)>(x''))) BETWEEN (((vt0.c0) IS TRUE)) AND ((((vt0.c0, vt0.c1, vt0.c1))<=((x'', NULL, vt0.c1)))))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((((vt0.c1)>(x''))) BETWEEN (((vt0.c0) IS TRUE)) AND ((((vt0.c0, vt0.c1, vt0.c1))<=((x'', NULL, vt0.c1)))))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 IN (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((NOT ((vt0.c0 IN (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((NOT ((vt0.c0 IN (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c1 FROM vt0, t1 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, t1 GROUP BY vt0.c1 HAVING MAX((t1.c0 IN (COUNT(*)))) UNION ALL SELECT vt0.c1 FROM vt0, t1 GROUP BY vt0.c1 HAVING (NOT (MAX((t1.c0 IN (COUNT(*)))))) UNION ALL SELECT vt0.c1 FROM vt0, t1 GROUP BY vt0.c1 HAVING ((MAX((t1.c0 IN (COUNT(*))))) ISNULL);
SELECT * FROM vt0 RIGHT OUTER JOIN t1 ON (('풡}M')=(((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t1 ON (('풡}M')=(((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE (((ROUND(vt0.c0, vt0.c0)) NOT BETWEEN ((((x'')) NOT BETWEEN (('ECk,\+JcL')) AND ((vt0.c0)))) AND (CASE WHEN vt0.c1 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN t1 ON (('풡}M')==(((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE ((NOT (((ROUND(vt0.c0, vt0.c0)) NOT BETWEEN ((((x'')) NOT BETWEEN (('ECk,\+JcL')) AND ((vt0.c0)))) AND (CASE WHEN vt0.c1 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))))) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN t1 ON (('풡}M')==(((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE (((((ROUND(vt0.c0, vt0.c0)) NOT BETWEEN ((((x'')) NOT BETWEEN (('ECk,\+JcL')) AND ((vt0.c0)))) AND (CASE WHEN vt0.c1 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN t1 ON (('풡}M')=(((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT DISTINCT t1.c0, vt0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN t1 ON ((t1.c0) NOT BETWEEN (((t1.c0)IS NOT(t1.c0))) AND (((vt0.c1) NOTNULL)));
SELECT DISTINCT t1.c0, vt0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN t1 ON ((t1.c0) NOT BETWEEN (((t1.c0)IS NOT(t1.c0))) AND (((vt0.c1) NOTNULL))) WHERE ((((((t1.c0)) BETWEEN ((t1.c0)) AND ((vt0.c0)))) NOT BETWEEN (((t1.c0)IS(t1.c0))) AND (HEX(DISTINCT vt0.c1)))) UNION SELECT DISTINCT t1.c0, vt0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN t1 ON ((t1.c0) NOT BETWEEN (((t1.c0)IS NOT(t1.c0))) AND (((vt0.c1) NOTNULL))) WHERE ((NOT ((((((t1.c0)) BETWEEN ((t1.c0)) AND ((vt0.c0)))) NOT BETWEEN (((t1.c0)IS(t1.c0))) AND (HEX(DISTINCT vt0.c1)))))) UNION SELECT DISTINCT t1.c0, vt0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN t1 ON ((t1.c0) NOT BETWEEN (((t1.c0)IS NOT(t1.c0))) AND (((vt0.c1) NOTNULL))) WHERE ((((((((t1.c0)) BETWEEN ((t1.c0)) AND ((vt0.c0)))) NOT BETWEEN (((t1.c0)IS(t1.c0))) AND (HEX(DISTINCT vt0.c1)))) ISNULL));
SELECT DISTINCT t1.c0, vt0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN t1 ON ((t1.c0) NOT BETWEEN (((t1.c0)IS NOT(t1.c0))) AND (((vt0.c1) NOTNULL)));
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT t0.c1, t1.c0 FROM t0, vt0, t1 GROUP BY t0.c1, t1.c0;
SELECT ALL t0.c1, t1.c0 FROM t0, vt0, t1 GROUP BY t0.c1, t1.c0 HAVING COUNT(COUNT(x'')) UNION ALL SELECT ALL t0.c1, t1.c0 FROM t0, vt0, t1 GROUP BY t0.c1, t1.c0 HAVING (NOT (COUNT(COUNT(x'')))) UNION ALL SELECT ALL t0.c1, t1.c0 FROM t0, vt0, t1 GROUP BY t0.c1, t1.c0 HAVING ((COUNT(COUNT(x''))) ISNULL);
SELECT ALL t0.c0, t0.c2 FROM t1, t0;
SELECT t0.c0, t0.c2 FROM t1, t0 WHERE (((t0.c0)IS NOT(json(t1.c0)))) UNION ALL SELECT t0.c0, t0.c2 FROM t1, t0 WHERE ((NOT (((t0.c0)IS NOT(json(t1.c0)))))) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t1, t0 WHERE (((((t0.c0)IS NOT(json(t1.c0)))) ISNULL));
SELECT DISTINCT t0.c1 FROM t0, t1, vt0;
SELECT DISTINCT t0.c1 FROM t0, t1, vt0 WHERE (load_extension(((t0.c0)-(NULL)), t0.c2 COLLATE NOCASE)) UNION SELECT DISTINCT t0.c1 FROM t0, t1, vt0 WHERE ((NOT (load_extension(((t0.c0)-(NULL)), t0.c2 COLLATE NOCASE)))) UNION SELECT DISTINCT t0.c1 FROM t0, t1, vt0 WHERE (((load_extension(((t0.c0)-(NULL)), t0.c2 COLLATE NOCASE)) ISNULL));
SELECT ALL t0.c0, t1.c0, vt0.c1, t0.c2, t0.c1, vt0.c0 FROM t0, t1, vt0 GROUP BY t0.c0, t1.c0, vt0.c1, t0.c2, t0.c1, vt0.c0;
SELECT ALL t0.c0, t1.c0, vt0.c1, t0.c2, t0.c1, vt0.c0 FROM t0, t1, vt0 WHERE (((t0.c0 COLLATE NOCASE)*((((t0.c1, t0.c1, t0.c0, vt0.c1, vt0.c0))<>((t0.c1, t1.c0, t1.c0, vt0.c1, t1.c0)))))) GROUP BY t0.c0, t1.c0, vt0.c1, t0.c2, t0.c1, vt0.c0 UNION SELECT t0.c0, t1.c0, vt0.c1, t0.c2, t0.c1, vt0.c0 FROM t0, t1, vt0 WHERE ((NOT (((t0.c0 COLLATE NOCASE)*((((t0.c1, t0.c1, t0.c0, vt0.c1, vt0.c0))!=((t0.c1, t1.c0, t1.c0, vt0.c1, t1.c0)))))))) GROUP BY t0.c0, t1.c0, vt0.c1, t0.c2, t0.c1, vt0.c0 UNION SELECT t0.c0, t1.c0, vt0.c1, t0.c2, t0.c1, vt0.c0 FROM t0, t1, vt0 WHERE (((((t0.c0 COLLATE NOCASE)*((((t0.c1, t0.c1, t0.c0, vt0.c1, vt0.c0))!=((t0.c1, t1.c0, t1.c0, vt0.c1, t1.c0)))))) ISNULL)) GROUP BY t0.c0, t1.c0, vt0.c1, t0.c2, t0.c1, vt0.c0;
SELECT ALL t0.c0, t1.c0, vt0.c1, t0.c2, t0.c1, vt0.c0 FROM t0, t1, vt0 GROUP BY t0.c0, t1.c0, vt0.c1, t0.c2, t0.c1, vt0.c0;
SELECT t0.c1, t0.c0 FROM t0 NOT INDEXED, t1 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0, t1 GROUP BY t0.c1, t0.c0 HAVING CAST(((MIN(GROUP_CONCAT(MAX(t0.c1)))) BETWEEN (COUNT(SUM(SUM(GROUP_CONCAT(t0.c1))))) AND (GROUP_CONCAT(COUNT(t1.c0)))) AS REAL) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0, t1 GROUP BY t0.c1, t0.c0 HAVING (NOT (CAST(((MIN(GROUP_CONCAT(MAX(t0.c1)))) BETWEEN (COUNT(SUM(SUM(GROUP_CONCAT(t0.c1))))) AND (GROUP_CONCAT(COUNT(t1.c0)))) AS REAL))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0, t1 GROUP BY t0.c1, t0.c0 HAVING ((CAST(((MIN(GROUP_CONCAT(MAX(t0.c1)))) BETWEEN (COUNT(SUM(SUM(GROUP_CONCAT(t0.c1))))) AND (GROUP_CONCAT(COUNT(t1.c0)))) AS REAL)) ISNULL);
SELECT ALL * FROM t1, t0;
SELECT * FROM t1, t0 WHERE (t0.c0) UNION ALL SELECT ALL * FROM t1, t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM t1, t0 WHERE (((t0.c0) ISNULL));
SELECT ALL * FROM t1, t0;
SELECT DISTINCT * FROM vt0, t0, t1;
SELECT DISTINCT * FROM vt0, t0, t1 WHERE (vt0.c1) UNION SELECT DISTINCT * FROM vt0, t0, t1 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT * FROM vt0, t0, t1 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT * FROM vt0, t0, t1;
SELECT t0.c2, t0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0, vt0 WHERE (((('Z~nr') NOT BETWEEN (vt0.c0) AND (0.02304595012891819)) IN ())) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM t0, vt0 WHERE ((NOT (((('Z~nr') NOT BETWEEN (vt0.c0) AND (0.02304595012891819)) IN ())))) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM t0, vt0 WHERE (((((('Z~nr') NOT BETWEEN (vt0.c0) AND (0.02304595012891819)) IN ())) ISNULL)) GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c0;
SELECT t0.c1, t1.c0, t0.c2, vt0.c0 FROM t0, t1 CROSS JOIN vt0 ON t0.c1 GROUP BY t0.c1, t1.c0, t0.c2, vt0.c0;
SELECT ALL t0.c1, t1.c0, t0.c2, vt0.c0 FROM t0, t1 CROSS JOIN vt0 ON t0.c1 GROUP BY t0.c1, t1.c0, t0.c2, vt0.c0 HAVING ((COUNT(*))&((+ (AVG(GROUP_CONCAT(vt0.c0)))))) UNION ALL SELECT ALL t0.c1, t1.c0, t0.c2, vt0.c0 FROM t0, t1 CROSS JOIN vt0 ON t0.c1 GROUP BY t0.c1, t1.c0, t0.c2, vt0.c0 HAVING (NOT (((COUNT(*))&((+ (AVG(GROUP_CONCAT(vt0.c0)))))))) UNION ALL SELECT t0.c1, t1.c0, t0.c2, vt0.c0 FROM t0, t1 CROSS JOIN vt0 ON t0.c1 GROUP BY t0.c1, t1.c0, t0.c2, vt0.c0 HAVING ((((COUNT(*))&((+ (AVG(GROUP_CONCAT(vt0.c0))))))) ISNULL);
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE ((NOT ((NOT (t1.c0))))) UNION ALL SELECT * FROM t1 WHERE ((NOT ((NOT ((NOT (t1.c0))))))) UNION ALL SELECT ALL * FROM t1 WHERE ((((NOT ((NOT (t1.c0))))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT vt0.c0, t0.c2, t1.c0 FROM t0, vt0, t1;
SELECT DISTINCT vt0.c0, t0.c2, t1.c0 FROM t0, vt0, t1 WHERE ((t0.c1 COLLATE RTRIM IN ())) UNION SELECT DISTINCT vt0.c0, t0.c2, t1.c0 FROM t0, vt0, t1 WHERE ((NOT ((t0.c1 COLLATE RTRIM IN ())))) UNION SELECT DISTINCT vt0.c0, t0.c2, t1.c0 FROM t0, vt0, t1 WHERE ((((t0.c1 COLLATE RTRIM IN ())) ISNULL));
SELECT DISTINCT vt0.c0, t0.c2, t1.c0 FROM t0, vt0, t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (CASE WHEN ((x'') BETWEEN (t1.c0) AND (t1.c0)) THEN ((t1.c0) ISNULL) WHEN ((t1.c0)AND(t1.c0)) THEN t1.c0 WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN CAST(t1.c0 AS INTEGER) ELSE NULL END) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (CASE WHEN ((x'') BETWEEN (t1.c0) AND (t1.c0)) THEN ((t1.c0) ISNULL) WHEN ((t1.c0)AND(t1.c0)) THEN t1.c0 WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN CAST(t1.c0 AS INTEGER) ELSE NULL END))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((CASE WHEN ((x'') BETWEEN (t1.c0) AND (t1.c0)) THEN ((t1.c0) ISNULL) WHEN ((t1.c0)AND(t1.c0)) THEN t1.c0 WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN CAST(t1.c0 AS INTEGER) ELSE NULL END) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, t0, t1 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0, t0, t1 GROUP BY vt0.c0, vt0.c1 HAVING t0.c1 UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, t0, t1 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (t0.c1)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0, t0, t1 GROUP BY vt0.c0, vt0.c1 HAVING ((t0.c1) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0, t0, t1 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0, t0, t1 GROUP BY vt0.c0, vt0.c1 HAVING t0.c1 UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, t0, t1 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (t0.c1)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0, t0, t1 GROUP BY vt0.c0, vt0.c1 HAVING ((t0.c1) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0, t0, t1 GROUP BY vt0.c0, vt0.c1;
SELECT ALL t1.c0 FROM t1, t0 CROSS JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE NOCASE;
SELECT t1.c0 FROM t1, t0 CROSS JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE NOCASE WHERE (t1.c0) UNION ALL SELECT t1.c0 FROM t1, t0 CROSS JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE NOCASE WHERE ((NOT (t1.c0))) UNION ALL SELECT t1.c0 FROM t1, t0 CROSS JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE NOCASE WHERE (((t1.c0) ISNULL));
SELECT ALL t1.c0 FROM t1, t0 CROSS JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE NOCASE;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ('-2005178625') UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ('-2005178625'))) UNION SELECT DISTINCT * FROM vt0 WHERE ((('-2005178625') ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL t1.c0, t0.c2 FROM t0, t1 GROUP BY t1.c0, t0.c2;
SELECT t1.c0, t0.c2 FROM t0, t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t0.c1))) NOT BETWEEN (((t0.c0) IS TRUE)) AND (((t0.c0)LIKE(t0.c2))))) GROUP BY t1.c0, t0.c2 UNION SELECT ALL t1.c0, t0.c2 FROM t0, t1 WHERE ((NOT (((((t1.c0) BETWEEN (t1.c0) AND (t0.c1))) NOT BETWEEN (((t0.c0) IS TRUE)) AND (((t0.c0)LIKE(t0.c2))))))) GROUP BY t1.c0, t0.c2 UNION SELECT ALL t1.c0, t0.c2 FROM t0, t1 WHERE (((((((t1.c0) BETWEEN (t1.c0) AND (t0.c1))) NOT BETWEEN (((t0.c0) IS TRUE)) AND (((t0.c0)LIKE(t0.c2))))) ISNULL)) GROUP BY t1.c0, t0.c2;
SELECT ALL t1.c0, t0.c2 FROM t0, t1 GROUP BY t1.c0, t0.c2;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING TOTAL(GROUP_CONCAT(TOTAL(vt0.c0))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (TOTAL(GROUP_CONCAT(TOTAL(vt0.c0))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((TOTAL(GROUP_CONCAT(TOTAL(vt0.c0)))) ISNULL);
SELECT ALL * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE ((('-2030020408')/(json(t0.c2)))) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT ((('-2030020408')/(json(t0.c2)))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((((('-2030020408')/(json(t0.c2)))) ISNULL));
SELECT DISTINCT t1.c0, vt0.c0, vt0.c1, t0.c2 FROM t0, t1, vt0;
SELECT DISTINCT t1.c0, vt0.c0, vt0.c1, t0.c2 FROM t0, t1, vt0 WHERE (((t0.c0 COLLATE NOCASE)IS NOT((((t1.c0))>((t0.c2)))))) UNION SELECT DISTINCT t1.c0, vt0.c0, vt0.c1, t0.c2 FROM t0, t1, vt0 WHERE ((NOT (((t0.c0 COLLATE NOCASE)IS NOT((((t1.c0))>((t0.c2)))))))) UNION SELECT DISTINCT t1.c0, vt0.c0, vt0.c1, t0.c2 FROM t0, t1, vt0 WHERE (((((t0.c0 COLLATE NOCASE)IS NOT((((t1.c0))>((t0.c2)))))) ISNULL));
SELECT DISTINCT t1.c0, vt0.c0, vt0.c1, t0.c2 FROM t0, t1, vt0;
SELECT t0.c2, vt0.c0, t0.c0 FROM vt0, t1, t0 GROUP BY t0.c2, vt0.c0, t0.c0;
SELECT ALL t0.c2, vt0.c0, t0.c0 FROM vt0, t1, t0 WHERE (x'') GROUP BY t0.c2, vt0.c0, t0.c0 UNION SELECT t0.c2, vt0.c0, t0.c0 FROM vt0, t1, t0 WHERE ((NOT (x''))) GROUP BY t0.c2, vt0.c0, t0.c0 UNION SELECT ALL t0.c2, vt0.c0, t0.c0 FROM vt0, t1, t0 WHERE (((x'') ISNULL)) GROUP BY t0.c2, vt0.c0, t0.c0;
SELECT t0.c2, vt0.c0, t0.c0 FROM vt0, t1, t0 GROUP BY t0.c2, vt0.c0, t0.c0;
SELECT vt0.c1 FROM t1 FULL OUTER JOIN vt0 ON CAST((+ (vt0.c1)) AS BLOB) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM t1 FULL OUTER JOIN vt0 ON CAST((+ (vt0.c1)) AS BLOB) GROUP BY vt0.c1 HAVING (NOT (vt0.c1 COLLATE NOCASE)) UNION ALL SELECT vt0.c1 FROM t1 FULL OUTER JOIN vt0 ON CAST((+ (vt0.c1)) AS BLOB) GROUP BY vt0.c1 HAVING (NOT ((NOT (vt0.c1 COLLATE NOCASE)))) UNION ALL SELECT vt0.c1 FROM t1 FULL OUTER JOIN vt0 ON CAST((+ (vt0.c1)) AS BLOB) GROUP BY vt0.c1 HAVING (((NOT (vt0.c1 COLLATE NOCASE))) ISNULL);
SELECT vt0.c1 FROM t1 FULL OUTER JOIN vt0 ON CAST((+ (vt0.c1)) AS BLOB) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM t1 FULL OUTER JOIN vt0 ON CAST((+ (vt0.c1)) AS BLOB) GROUP BY vt0.c1 HAVING (NOT (vt0.c1 COLLATE NOCASE)) UNION ALL SELECT vt0.c1 FROM t1 FULL OUTER JOIN vt0 ON CAST((+ (vt0.c1)) AS BLOB) GROUP BY vt0.c1 HAVING (NOT ((NOT (vt0.c1 COLLATE NOCASE)))) UNION ALL SELECT vt0.c1 FROM t1 FULL OUTER JOIN vt0 ON CAST((+ (vt0.c1)) AS BLOB) GROUP BY vt0.c1 HAVING (((NOT (vt0.c1 COLLATE NOCASE))) ISNULL);
SELECT vt0.c1 FROM t1 FULL OUTER JOIN vt0 ON CAST((+ (vt0.c1)) AS BLOB) GROUP BY vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((((((vt0.c1 IN (vt0.c1)))OR(((vt0.c0)-(vt0.c1)))))AND(((vt0.c1)>(vt0.c0)))))OR(CAST(vt0.c1 AS BLOB))))AND(CAST(NULL AS NUMERIC)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((((((((vt0.c1 IN (vt0.c1)))OR(((vt0.c0)-(vt0.c1)))))AND(((vt0.c1)>(vt0.c0)))))OR(CAST(vt0.c1 AS BLOB))))AND(CAST(NULL AS NUMERIC)))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((((((((vt0.c1 IN (vt0.c1)))OR(((vt0.c0)-(vt0.c1)))))AND(((vt0.c1)>(vt0.c0)))))OR(CAST(vt0.c1 AS BLOB))))AND(CAST(NULL AS NUMERIC)))) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN t0 WHERE (vt0.c1) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN t0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN t0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT * FROM vt0 NATURAL JOIN t0;
SELECT ALL t0.c2, vt0.c1, vt0.c0, t0.c1, t1.c0, t0.c0 FROM vt0, t1, t0 GROUP BY t0.c2, vt0.c1, vt0.c0, t0.c1, t1.c0, t0.c0;
SELECT t0.c2, vt0.c1, vt0.c0, t0.c1, t1.c0, t0.c0 FROM vt0, t1, t0 WHERE (((CAST(t1.c0 AS BLOB))==(((t0.c2) NOTNULL)))) GROUP BY t0.c2, vt0.c1, vt0.c0, t0.c1, t1.c0, t0.c0 UNION SELECT t0.c2, vt0.c1, vt0.c0, t0.c1, t1.c0, t0.c0 FROM vt0, t1, t0 WHERE ((NOT (((CAST(t1.c0 AS BLOB))==(((t0.c2) NOTNULL)))))) GROUP BY t0.c2, vt0.c1, vt0.c0, t0.c1, t1.c0, t0.c0 UNION SELECT ALL t0.c2, vt0.c1, vt0.c0, t0.c1, t1.c0, t0.c0 FROM vt0, t1, t0 WHERE (((((CAST(t1.c0 AS BLOB))==(((t0.c2) NOTNULL)))) ISNULL)) GROUP BY t0.c2, vt0.c1, vt0.c0, t0.c1, t1.c0, t0.c0;
SELECT ALL t0.c2, vt0.c1, vt0.c0, t0.c1, t1.c0, t0.c0 FROM vt0, t1, t0 GROUP BY t0.c2, vt0.c1, vt0.c0, t0.c1, t1.c0, t0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING MAX(CASE WHEN COUNT(*) THEN MIN(TOTAL(SUM(vt0.c1))) ELSE vt0.c0 END) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (MAX(CASE WHEN COUNT(*) THEN MIN(TOTAL(SUM(vt0.c1))) ELSE vt0.c0 END))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((MAX(CASE WHEN COUNT(*) THEN MIN(TOTAL(SUM(vt0.c1))) ELSE vt0.c0 END)) ISNULL);
SELECT ALL t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE ((t1.c0 COLLATE RTRIM IN (NULL))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((t1.c0 COLLATE RTRIM IN (NULL))))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((((t1.c0 COLLATE RTRIM IN (NULL))) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (((t0.c2)/(t0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (((t0.c2)/(t0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((((t0.c2)/(t0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT vt0.c1 FROM t0, t1, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM t0, t1, vt0 WHERE (CAST((+ (t0.c0)) AS BLOB)) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM t0, t1, vt0 WHERE ((NOT (CAST((+ (t0.c0)) AS BLOB)))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM t0, t1, vt0 WHERE (((CAST((+ (t0.c0)) AS BLOB)) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM t0, t1, vt0 GROUP BY vt0.c1;
SELECT t0.c1, vt0.c0, vt0.c1, t0.c0, t0.c2 FROM vt0, t0, t1 GROUP BY t0.c1, vt0.c0, vt0.c1, t0.c0, t0.c2;
SELECT t0.c1, vt0.c0, vt0.c1, t0.c0, t0.c2 FROM vt0, t0, t1 GROUP BY t0.c1, vt0.c0, vt0.c1, t0.c0, t0.c2 HAVING MIN(vt0.c1 COLLATE RTRIM) UNION ALL SELECT ALL t0.c1, vt0.c0, vt0.c1, t0.c0, t0.c2 FROM vt0, t0, t1 GROUP BY t0.c1, vt0.c0, vt0.c1, t0.c0, t0.c2 HAVING (NOT (MIN(vt0.c1 COLLATE RTRIM))) UNION ALL SELECT ALL t0.c1, vt0.c0, vt0.c1, t0.c0, t0.c2 FROM vt0, t0, t1 GROUP BY t0.c1, vt0.c0, vt0.c1, t0.c0, t0.c2 HAVING ((MIN(vt0.c1 COLLATE RTRIM)) ISNULL);
SELECT t0.c1, vt0.c0, vt0.c1, t0.c0, t0.c2 FROM vt0, t0, t1 GROUP BY t0.c1, vt0.c0, vt0.c1, t0.c0, t0.c2;
SELECT t0.c1, vt0.c0, vt0.c1, t0.c0, t0.c2 FROM vt0, t0, t1 GROUP BY t0.c1, vt0.c0, vt0.c1, t0.c0, t0.c2 HAVING MIN(vt0.c1 COLLATE RTRIM) UNION ALL SELECT ALL t0.c1, vt0.c0, vt0.c1, t0.c0, t0.c2 FROM vt0, t0, t1 GROUP BY t0.c1, vt0.c0, vt0.c1, t0.c0, t0.c2 HAVING (NOT (MIN(vt0.c1 COLLATE RTRIM))) UNION ALL SELECT ALL t0.c1, vt0.c0, vt0.c1, t0.c0, t0.c2 FROM vt0, t0, t1 GROUP BY t0.c1, vt0.c0, vt0.c1, t0.c0, t0.c2 HAVING ((MIN(vt0.c1 COLLATE RTRIM)) ISNULL);
SELECT t0.c1, vt0.c0, vt0.c1, t0.c0, t0.c2 FROM vt0, t0, t1 GROUP BY t0.c1, vt0.c0, vt0.c1, t0.c0, t0.c2;
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c0)<(vt0.c1)))OR(load_extension(vt0.c1))))AND(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((((vt0.c0)<(vt0.c1)))OR(load_extension(vt0.c1))))AND(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((((((vt0.c0)<(vt0.c1)))OR(load_extension(vt0.c1))))AND(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((NOT ((NOT (t1.c0))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((NOT ((NOT (t1.c0))))))) UNION SELECT DISTINCT * FROM t1 WHERE ((((NOT ((NOT (t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (CASE WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN t1.c0 COLLATE RTRIM WHEN ((t1.c0) BETWEEN ('0.47255876190893054') AND (t1.c0)) THEN ((((t1.c0)AND(t1.c0)))OR(t1.c0)) WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN 1.751720304E9 THEN t1.c0 WHEN '' THEN t1.c0 END THEN ((t1.c0)&(t1.c0)) ELSE ((((t1.c0)AND(t1.c0)))OR(t1.c0)) END) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (CASE WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN t1.c0 COLLATE RTRIM WHEN ((t1.c0) BETWEEN ('0.47255876190893054') AND (t1.c0)) THEN ((((t1.c0)AND(t1.c0)))OR(t1.c0)) WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN 1.751720304E9 THEN t1.c0 WHEN '' THEN t1.c0 END THEN ((t1.c0)&(t1.c0)) ELSE ((((t1.c0)AND(t1.c0)))OR(t1.c0)) END))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 NOT INDEXED WHERE (((CASE WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN t1.c0 COLLATE RTRIM WHEN ((t1.c0) BETWEEN ('0.47255876190893054') AND (t1.c0)) THEN ((((t1.c0)AND(t1.c0)))OR(t1.c0)) WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN 1.751720304E9 THEN t1.c0 WHEN '' THEN t1.c0 END THEN ((t1.c0)&(t1.c0)) ELSE ((((t1.c0)AND(t1.c0)))OR(t1.c0)) END) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT vt0.c0, t0.c0, t0.c1, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c1, vt0.c1;
SELECT ALL vt0.c0, t0.c0, t0.c1, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c1, vt0.c1 HAVING MAX(0.7751490530365018) UNION ALL SELECT vt0.c0, t0.c0, t0.c1, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c1, vt0.c1 HAVING (NOT (MAX(0.7751490530365018))) UNION ALL SELECT vt0.c0, t0.c0, t0.c1, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c1, vt0.c1 HAVING ((MAX(0.7751490530365018)) ISNULL);
SELECT vt0.c0, t0.c0, t0.c1, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c1, vt0.c1;
SELECT ALL vt0.c0, t0.c0, t0.c1, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c1, vt0.c1 HAVING MAX(0.7751490530365018) UNION ALL SELECT vt0.c0, t0.c0, t0.c1, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c1, vt0.c1 HAVING (NOT (MAX(0.7751490530365018))) UNION ALL SELECT vt0.c0, t0.c0, t0.c1, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c1, vt0.c1 HAVING ((MAX(0.7751490530365018)) ISNULL);
SELECT vt0.c0, t0.c0, t0.c1, vt0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c1, vt0.c1;
SELECT t0.c1, t0.c0, t0.c2 FROM t0;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 WHERE (x'') UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 WHERE ((NOT (x''))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 WHERE (((x'') ISNULL));
SELECT t0.c1, t0.c0, t0.c2 FROM t0;
SELECT DISTINCT * FROM t1 INNER JOIN vt0 ON ((0.5821356227540982)>(((t1.c0)AND(x''))));
SELECT DISTINCT * FROM t1 INNER JOIN vt0 ON ((0.5821356227540982)>(((t1.c0)AND(x'')))) WHERE (CAST((NOT (t1.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM t1 INNER JOIN vt0 ON ((0.5821356227540982)>(((t1.c0)AND(x'')))) WHERE ((NOT (CAST((NOT (t1.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM t1 INNER JOIN vt0 ON ((0.5821356227540982)>(((t1.c0)AND(x'')))) WHERE (((CAST((NOT (t1.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM t1 INNER JOIN vt0 ON ((0.5821356227540982)>(((t1.c0)AND(x''))));
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE (json_array_length(((((t0.c2)AND(t0.c0)))AND(t0.c2)), (((t0.c0))>=((t0.c0))))) GROUP BY t0.c0, t0.c2, t0.c1 UNION SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((NOT (json_array_length(((((t0.c2)AND(t0.c0)))AND(t0.c2)), (((t0.c0))>=((t0.c0))))))) GROUP BY t0.c0, t0.c2, t0.c1 UNION SELECT t0.c0, t0.c2, t0.c1 FROM t0 WHERE (((json_array_length(((((t0.c2)AND(t0.c0)))AND(t0.c2)), (((t0.c0))>=((t0.c0))))) ISNULL)) GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t1.c0 HAVING TOTAL(COUNT(MIN(t1.c0))) UNION ALL SELECT t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t1.c0 HAVING (NOT (TOTAL(COUNT(MIN(t1.c0))))) UNION ALL SELECT ALL t1.c0 FROM t0 NATURAL JOIN t1 GROUP BY t1.c0 HAVING ((TOTAL(COUNT(MIN(t1.c0)))) ISNULL);
SELECT ALL MAX(((vt0.c1 COLLATE NOCASE)AND(CAST(t0.c2 AS BLOB)))) FROM t0 NOT INDEXED, vt0 ORDER BY ((vt0.c0) ISNULL)  NULLS FIRST;
SELECT * FROM t0, t1;
SELECT * FROM t0, t1 WHERE (CASE WHEN (NOT (t1.c0)) THEN ((t1.c0)AND(t1.c0)) WHEN ((x'') IS FALSE) THEN ((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN ((t0.c1) NOT NULL) THEN ((t0.c1)IS NOT(t1.c0)) ELSE ((t0.c0)|(t0.c0)) END) UNION ALL SELECT * FROM t0, t1 WHERE ((NOT (CASE WHEN (NOT (t1.c0)) THEN ((t1.c0)AND(t1.c0)) WHEN ((x'') IS FALSE) THEN ((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN ((t0.c1) NOT NULL) THEN ((t0.c1)IS NOT(t1.c0)) ELSE ((t0.c0)|(t0.c0)) END))) UNION ALL SELECT ALL * FROM t0, t1 WHERE (((CASE WHEN (NOT (t1.c0)) THEN ((t1.c0)AND(t1.c0)) WHEN ((x'') IS FALSE) THEN ((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN ((t0.c1) NOT NULL) THEN ((t0.c1)IS NOT(t1.c0)) ELSE ((t0.c0)|(t0.c0)) END) ISNULL));
SELECT * FROM t0, t1;
SELECT DISTINCT t0.c0, t0.c1 FROM t0;
SELECT DISTINCT t0.c0, t0.c1 FROM t0 WHERE (((t0.c1)AND(t0.c1)) COLLATE BINARY) UNION SELECT DISTINCT t0.c0, t0.c1 FROM t0 WHERE ((NOT (((t0.c1)AND(t0.c1)) COLLATE BINARY))) UNION SELECT DISTINCT t0.c0, t0.c1 FROM t0 WHERE (((((t0.c1)AND(t0.c1)) COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c0, t0.c1 FROM t0;
SELECT t0.c1, t1.c0, t0.c2 FROM t1, vt0, t0 GROUP BY t0.c1, t1.c0, t0.c2;
SELECT t0.c1, t1.c0, t0.c2 FROM t1, vt0, t0 WHERE ('&z4C') GROUP BY t0.c1, t1.c0, t0.c2 UNION SELECT ALL t0.c1, t1.c0, t0.c2 FROM t1, vt0, t0 WHERE ((NOT ('&z4C'))) GROUP BY t0.c1, t1.c0, t0.c2 UNION SELECT ALL t0.c1, t1.c0, t0.c2 FROM t1, vt0, t0 WHERE ((('&z4C') ISNULL)) GROUP BY t0.c1, t1.c0, t0.c2;
SELECT t0.c1, t1.c0, t0.c2 FROM t1, vt0, t0 GROUP BY t0.c1, t1.c0, t0.c2;
SELECT t1.c0 FROM vt0 INNER JOIN t1 ON ((((t1.c0)LIKE(vt0.c1)))<<(((vt0.c1)-(vt0.c0)))) GROUP BY t1.c0;
SELECT t1.c0 FROM vt0 INNER JOIN t1 ON ((((t1.c0)LIKE(vt0.c1)))<<(((vt0.c1)-(vt0.c0)))) GROUP BY t1.c0 HAVING COUNT(COUNT(SUM(GROUP_CONCAT(vt0.c1)))) UNION ALL SELECT t1.c0 FROM vt0 INNER JOIN t1 ON ((((t1.c0)LIKE(vt0.c1)))<<(((vt0.c1)-(vt0.c0)))) GROUP BY t1.c0 HAVING (NOT (COUNT(COUNT(SUM(GROUP_CONCAT(vt0.c1)))))) UNION ALL SELECT t1.c0 FROM vt0 INNER JOIN t1 ON ((((t1.c0)LIKE(vt0.c1)))<<(((vt0.c1)-(vt0.c0)))) GROUP BY t1.c0 HAVING ((COUNT(COUNT(SUM(GROUP_CONCAT(vt0.c1))))) ISNULL);
SELECT * FROM t1;
SELECT ALL * FROM t1 WHERE (CAST(TYPEOF(t1.c0) AS REAL)) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (CAST(TYPEOF(t1.c0) AS REAL)))) UNION ALL SELECT * FROM t1 WHERE (((CAST(TYPEOF(t1.c0) AS REAL)) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT t0.c2 FROM t1 RIGHT OUTER JOIN vt0 ON ((0.23579464921437543) IS FALSE) INNER JOIN t0 ON ((((t0.c1)|(t1.c0))) NOT BETWEEN ((t1.c0 IN ())) AND (CAST(NULL AS REAL)));
SELECT DISTINCT t0.c2 FROM t1 RIGHT OUTER JOIN vt0 ON ((0.23579464921437543) IS FALSE) INNER JOIN t0 ON ((((t0.c1)|(t1.c0))) NOT BETWEEN ((t1.c0 IN ())) AND (CAST(NULL AS REAL))) WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (CASE WHEN t0.c1 THEN t0.c0 WHEN '2027653547' THEN t0.c1 WHEN t1.c0 THEN t0.c0 END) AND (((t0.c1)>>(t0.c2))))) UNION SELECT DISTINCT t0.c2 FROM t1 RIGHT OUTER JOIN vt0 ON ((0.23579464921437543) IS FALSE) INNER JOIN t0 ON ((((t0.c1)|(t1.c0))) NOT BETWEEN ((t1.c0 IN ())) AND (CAST(NULL AS REAL))) WHERE ((NOT (((CAST(vt0.c0 AS BLOB)) BETWEEN (CASE WHEN t0.c1 THEN t0.c0 WHEN '2027653547' THEN t0.c1 WHEN t1.c0 THEN t0.c0 END) AND (((t0.c1)>>(t0.c2))))))) UNION SELECT DISTINCT t0.c2 FROM t1 RIGHT OUTER JOIN vt0 ON ((0.23579464921437543) IS FALSE) INNER JOIN t0 ON ((((t0.c1)|(t1.c0))) NOT BETWEEN ((t1.c0 IN ())) AND (CAST(NULL AS REAL))) WHERE (((((CAST(vt0.c0 AS BLOB)) BETWEEN (CASE WHEN t0.c1 THEN t0.c0 WHEN '2027653547' THEN t0.c1 WHEN t1.c0 THEN t0.c0 END) AND (((t0.c1)>>(t0.c2))))) ISNULL));
SELECT DISTINCT t0.c2 FROM t1 RIGHT OUTER JOIN vt0 ON ((0.23579464921437543) IS FALSE) INNER JOIN t0 ON ((((t0.c1)|(t1.c0))) NOT BETWEEN ((t1.c0 IN ())) AND (CAST(NULL AS REAL)));
SELECT ALL t0.c2, t0.c1, t1.c0 FROM t0, vt0, t1 GROUP BY t0.c2, t0.c1, t1.c0;
SELECT t0.c2, t0.c1, t1.c0 FROM t0, vt0, t1 WHERE (TRIM(DISTINCT (+ (vt0.c1)), (((t1.c0))<((vt0.c1))))) GROUP BY t0.c2, t0.c1, t1.c0 UNION SELECT t0.c2, t0.c1, t1.c0 FROM t0, vt0, t1 WHERE ((NOT (TRIM(DISTINCT (+ (vt0.c1)), (((t1.c0))<((vt0.c1))))))) GROUP BY t0.c2, t0.c1, t1.c0 UNION SELECT ALL t0.c2, t0.c1, t1.c0 FROM t0, vt0, t1 WHERE (((TRIM(DISTINCT (+ (vt0.c1)), (((t1.c0))<((vt0.c1))))) ISNULL)) GROUP BY t0.c2, t0.c1, t1.c0;
SELECT ALL t0.c2, t0.c1, t1.c0 FROM t0, vt0, t1 GROUP BY t0.c2, t0.c1, t1.c0;
SELECT ALL t0.c2, t0.c1, vt0.c1, t1.c0, vt0.c0 FROM t0, vt0 NOT INDEXED, t1 GROUP BY t0.c2, t0.c1, vt0.c1, t1.c0, vt0.c0;
SELECT ALL t0.c2, t0.c1, vt0.c1, t1.c0, vt0.c0 FROM t0, vt0, t1 GROUP BY t0.c2, t0.c1, vt0.c1, t1.c0, vt0.c0 HAVING MIN(SUM(MIN(t0.c0))) UNION ALL SELECT ALL t0.c2, t0.c1, vt0.c1, t1.c0, vt0.c0 FROM t0, vt0, t1 GROUP BY t0.c2, t0.c1, vt0.c1, t1.c0, vt0.c0 HAVING (NOT (MIN(SUM(MIN(t0.c0))))) UNION ALL SELECT t0.c2, t0.c1, vt0.c1, t1.c0, vt0.c0 FROM t0, vt0, t1 GROUP BY t0.c2, t0.c1, vt0.c1, t1.c0, vt0.c0 HAVING ((MIN(SUM(MIN(t0.c0)))) ISNULL);
SELECT ALL TOTAL(CAST(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) AS INTEGER)) FROM t1 ORDER BY (((- (t1.c0))) NOT NULL) DESC  NULLS FIRST;
SELECT t0.c2, vt0.c0 FROM t0, vt0, t1;
SELECT t0.c2, vt0.c0 FROM t0, vt0, t1 WHERE (((((vt0.c1)-(t1.c0))) BETWEEN ((((vt0.c1))<((t0.c0)))) AND (TRIM(DISTINCT t0.c0, t0.c2)))) UNION ALL SELECT ALL t0.c2, vt0.c0 FROM t0, vt0, t1 WHERE ((NOT (((((vt0.c1)-(t1.c0))) BETWEEN ((((vt0.c1))<((t0.c0)))) AND (TRIM(DISTINCT t0.c0, t0.c2)))))) UNION ALL SELECT ALL t0.c2, vt0.c0 FROM t0, vt0, t1 WHERE (((((((vt0.c1)-(t1.c0))) BETWEEN ((((vt0.c1))<((t0.c0)))) AND (TRIM(DISTINCT t0.c0, t0.c2)))) ISNULL));
SELECT t0.c2, vt0.c0 FROM t0, vt0, t1;
SELECT DISTINCT * FROM t1, vt0, t0;
SELECT DISTINCT * FROM t1, vt0, t0 WHERE ((('0.5995505436931629') NOT NULL)) UNION SELECT DISTINCT * FROM t1, vt0, t0 WHERE ((NOT ((('0.5995505436931629') NOT NULL)))) UNION SELECT DISTINCT * FROM t1, vt0, t0 WHERE ((((('0.5995505436931629') NOT NULL)) ISNULL));
SELECT DISTINCT * FROM t1, vt0, t0;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 WHERE ((((((t0.c0)>=(t0.c0))))>((CAST(t0.c2 AS TEXT))))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0 WHERE ((NOT ((((((t0.c0)>=(t0.c0))))>((CAST(t0.c2 AS TEXT))))))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 WHERE ((((((((t0.c0)>=(t0.c0))))>((CAST(t0.c2 AS TEXT))))) ISNULL)) GROUP BY t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL vt0.c0, t0.c0, vt0.c1, t0.c1, t0.c2 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, vt0.c1, t0.c1, t0.c2;
SELECT ALL vt0.c0, t0.c0, vt0.c1, t0.c1, t0.c2 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, vt0.c1, t0.c1, t0.c2 HAVING GROUP_CONCAT(SUM(COUNT(t0.c1))) UNION ALL SELECT ALL vt0.c0, t0.c0, vt0.c1, t0.c1, t0.c2 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, vt0.c1, t0.c1, t0.c2 HAVING (NOT (GROUP_CONCAT(SUM(COUNT(t0.c1))))) UNION ALL SELECT ALL vt0.c0, t0.c0, vt0.c1, t0.c1, t0.c2 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, vt0.c1, t0.c1, t0.c2 HAVING ((GROUP_CONCAT(SUM(COUNT(t0.c1)))) ISNULL);
SELECT t1.c0 FROM t1, vt0;
SELECT t1.c0 FROM t1, vt0 WHERE ((((~ (vt0.c0))) NOT BETWEEN ((+ (vt0.c1))) AND ((vt0.c0 IN ())))) UNION ALL SELECT ALL t1.c0 FROM t1, vt0 NOT INDEXED WHERE ((NOT ((((~ (vt0.c0))) NOT BETWEEN ((+ (vt0.c1))) AND ((vt0.c0 IN ())))))) UNION ALL SELECT t1.c0 FROM t1, vt0 WHERE ((((((~ (vt0.c0))) NOT BETWEEN ((+ (vt0.c1))) AND ((vt0.c0 IN ())))) ISNULL));
SELECT t1.c0 FROM t1, vt0;
SELECT DISTINCT * FROM vt0, t1;
SELECT DISTINCT * FROM vt0, t1 WHERE (((vt0.c1)>>(vt0.c1)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0, t1 WHERE ((NOT (((vt0.c1)>>(vt0.c1)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, t1 WHERE (((((vt0.c1)>>(vt0.c1)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, t1;
SELECT t1.c0, t0.c1, t0.c2, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c1, t0.c2, t0.c0;
SELECT ALL t1.c0, t0.c1, t0.c2, t0.c0 FROM t0, t1 WHERE (CASE ((t0.c1) NOT NULL)  WHEN CAST(t0.c2 AS REAL) THEN ((t1.c0)>=(-166227158)) WHEN CASE t0.c2  WHEN t1.c0 THEN t0.c0 END THEN (t1.c0 IN ()) WHEN NULL THEN ((t1.c0) BETWEEN (t0.c0) AND (t0.c0)) END) GROUP BY t1.c0, t0.c1, t0.c2, t0.c0 UNION SELECT ALL t1.c0, t0.c1, t0.c2, t0.c0 FROM t0, t1 WHERE ((NOT (CASE ((t0.c1) NOT NULL)  WHEN CAST(t0.c2 AS REAL) THEN ((t1.c0)>=(-166227158)) WHEN CASE t0.c2  WHEN t1.c0 THEN t0.c0 END THEN (t1.c0 IN ()) WHEN NULL THEN ((t1.c0) BETWEEN (t0.c0) AND (t0.c0)) END))) GROUP BY t1.c0, t0.c1, t0.c2, t0.c0 UNION SELECT ALL t1.c0, t0.c1, t0.c2, t0.c0 FROM t0, t1 WHERE (((CASE ((t0.c1) NOT NULL)  WHEN CAST(t0.c2 AS REAL) THEN ((t1.c0)>=(-166227158)) WHEN CASE t0.c2  WHEN t1.c0 THEN t0.c0 END THEN (t1.c0 IN ()) WHEN NULL THEN ((t1.c0) BETWEEN (t0.c0) AND (t0.c0)) END) ISNULL)) GROUP BY t1.c0, t0.c1, t0.c2, t0.c0;
SELECT t1.c0, t0.c1, t0.c2, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c1, t0.c2, t0.c0;
SELECT t0.c2, t0.c1, vt0.c0, t1.c0 FROM t0, vt0, t1 GROUP BY t0.c2, t0.c1, vt0.c0, t1.c0;
SELECT t0.c2, t0.c1, vt0.c0, t1.c0 FROM t0, vt0, t1 GROUP BY t0.c2, t0.c1, vt0.c0, t1.c0 HAVING MAX(CASE COUNT(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(vt0.c1))))  WHEN x'7e437384' THEN vt0.c1 WHEN vt0.c1 THEN MAX(TOTAL(t0.c2)) WHEN MIN(AVG(GROUP_CONCAT(t1.c0))) THEN COUNT(*) END) UNION ALL SELECT t0.c2, t0.c1, vt0.c0, t1.c0 FROM t0, vt0, t1 GROUP BY t0.c2, t0.c1, vt0.c0, t1.c0 HAVING (NOT (MAX(CASE COUNT(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(vt0.c1))))  WHEN x'7e437384' THEN vt0.c1 WHEN vt0.c1 THEN MAX(TOTAL(t0.c2)) WHEN MIN(AVG(GROUP_CONCAT(t1.c0))) THEN COUNT(*) END))) UNION ALL SELECT t0.c2, t0.c1, vt0.c0, t1.c0 FROM t0, vt0, t1 GROUP BY t0.c2, t0.c1, vt0.c0, t1.c0 HAVING ((MAX(CASE COUNT(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(vt0.c1))))  WHEN x'7e437384' THEN vt0.c1 WHEN vt0.c1 THEN MAX(TOTAL(t0.c2)) WHEN MIN(AVG(GROUP_CONCAT(t1.c0))) THEN COUNT(*) END)) ISNULL);
SELECT vt0.c1, vt0.c0, t1.c0 FROM vt0, t1;
SELECT vt0.c1, vt0.c0, t1.c0 FROM vt0, t1 WHERE (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c1, vt0.c0, t1.c0 FROM vt0, t1 WHERE ((NOT (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c1, vt0.c0, t1.c0 FROM vt0, t1 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE RTRIM) ISNULL));
SELECT vt0.c1, vt0.c0, t1.c0 FROM vt0, t1;
SELECT DISTINCT t1.c0, vt0.c0, vt0.c1 FROM t1, vt0;
SELECT DISTINCT t1.c0, vt0.c0, vt0.c1 FROM t1, vt0 WHERE (((~ (vt0.c1)) IN (((t1.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) UNION SELECT DISTINCT t1.c0, vt0.c0, vt0.c1 FROM t1, vt0 WHERE ((NOT (((~ (vt0.c1)) IN (((t1.c0) BETWEEN (vt0.c1) AND (vt0.c0))))))) UNION SELECT DISTINCT t1.c0, vt0.c0, vt0.c1 FROM t1, vt0 WHERE (((((~ (vt0.c1)) IN (((t1.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT t1.c0, vt0.c0, vt0.c1 FROM t1, vt0;
SELECT ALL t0.c0 FROM t1 INNER JOIN t0 ON ((((((t1.c0)AND(t1.c0)))OR(t0.c2))) BETWEEN (((t0.c2)<<(t0.c0))) AND (((t0.c1)|(t1.c0)))) GROUP BY t0.c0;
SELECT t0.c0 FROM t1 INNER JOIN t0 ON ((((((t1.c0)AND(t1.c0)))OR(t0.c2))) BETWEEN (((t0.c2)<<(t0.c0))) AND (((t0.c1)|(t1.c0)))) WHERE (((t0.c2) IS FALSE)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t1 INNER JOIN t0 ON ((((((t1.c0)AND(t1.c0)))OR(t0.c2))) BETWEEN (((t0.c2)<<(t0.c0))) AND (((t0.c1)|(t1.c0)))) WHERE ((NOT (((t0.c2) IS FALSE)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t1 INNER JOIN t0 ON ((((((t1.c0)AND(t1.c0)))OR(t0.c2))) BETWEEN (((t0.c2)<<(t0.c0))) AND (((t0.c1)|(t1.c0)))) WHERE (((((t0.c2) IS FALSE)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1 INNER JOIN t0 ON ((((((t1.c0)AND(t1.c0)))OR(t0.c2))) BETWEEN (((t0.c2)<<(t0.c0))) AND (((t0.c1)|(t1.c0)))) GROUP BY t0.c0;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING MIN(((t0.c0)<>(MAX(GROUP_CONCAT(NULL))))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (MIN(((t0.c0)<>(MAX(GROUP_CONCAT(NULL))))))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((MIN(((t0.c0)<>(MAX(GROUP_CONCAT(NULL)))))) ISNULL);
SELECT * FROM vt0, t0, t1;
SELECT ALL * FROM vt0, t0, t1 WHERE ((((((t0.c0, vt0.c1, t0.c0, t1.c0, 0.18072047595818308))>=((vt0.c1, t1.c0, vt0.c1, vt0.c1, t1.c0)))) NOTNULL)) UNION ALL SELECT ALL * FROM vt0, t0, t1 WHERE ((NOT ((((((t0.c0, vt0.c1, t0.c0, t1.c0, 0.18072047595818308))>=((vt0.c1, t1.c0, vt0.c1, vt0.c1, t1.c0)))) NOTNULL)))) UNION ALL SELECT * FROM vt0, t0, t1 WHERE ((((((((t0.c0, vt0.c1, t0.c0, t1.c0, 0.18072047595818308))>=((vt0.c1, t1.c0, vt0.c1, vt0.c1, t1.c0)))) NOTNULL)) ISNULL));
SELECT * FROM vt0, t0, t1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1) IS FALSE) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c1) IS FALSE) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1) IS FALSE) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, t0.c1 FROM t0, t1, vt0 GROUP BY vt0.c0, t0.c1;
SELECT vt0.c0, t0.c1 FROM t0, t1, vt0 WHERE (((vt0.c0 IN ()) IN ())) GROUP BY vt0.c0, t0.c1 UNION SELECT vt0.c0, t0.c1 FROM t0, t1, vt0 NOT INDEXED WHERE ((NOT (((vt0.c0 IN ()) IN ())))) GROUP BY vt0.c0, t0.c1 UNION SELECT ALL vt0.c0, t0.c1 FROM t0, t1, vt0 WHERE (((((vt0.c0 IN ()) IN ())) ISNULL)) GROUP BY vt0.c0, t0.c1;
SELECT vt0.c0, t0.c1 FROM t0, t1, vt0 GROUP BY vt0.c0, t0.c1;
SELECT vt0.c1, t0.c0, t0.c2 FROM vt0 CROSS JOIN t0 ON (((+ (t0.c1)))|(t0.c2 COLLATE BINARY)) GROUP BY vt0.c1, t0.c0, t0.c2;
SELECT ALL vt0.c1, t0.c0, t0.c2 FROM vt0 CROSS JOIN t0 ON (((+ (t0.c1)))|(t0.c2 COLLATE BINARY)) GROUP BY vt0.c1, t0.c0, t0.c2 HAVING SUM((- (t0.c0))) UNION ALL SELECT vt0.c1, t0.c0, t0.c2 FROM vt0 CROSS JOIN t0 ON (((+ (t0.c1)))|(t0.c2 COLLATE BINARY)) GROUP BY vt0.c1, t0.c0, t0.c2 HAVING (NOT (SUM((- (t0.c0))))) UNION ALL SELECT ALL vt0.c1, t0.c0, t0.c2 FROM vt0 CROSS JOIN t0 ON (((+ (t0.c1)))|(t0.c2 COLLATE BINARY)) GROUP BY vt0.c1, t0.c0, t0.c2 HAVING ((SUM((- (t0.c0)))) ISNULL);
SELECT vt0.c1, t0.c0, t0.c2 FROM vt0 CROSS JOIN t0 ON (((+ (t0.c1)))|(t0.c2 COLLATE BINARY)) GROUP BY vt0.c1, t0.c0, t0.c2;
SELECT ALL vt0.c1, t0.c0, t0.c2 FROM vt0 CROSS JOIN t0 ON (((+ (t0.c1)))|(t0.c2 COLLATE BINARY)) GROUP BY vt0.c1, t0.c0, t0.c2 HAVING SUM((- (t0.c0))) UNION ALL SELECT vt0.c1, t0.c0, t0.c2 FROM vt0 CROSS JOIN t0 ON (((+ (t0.c1)))|(t0.c2 COLLATE BINARY)) GROUP BY vt0.c1, t0.c0, t0.c2 HAVING (NOT (SUM((- (t0.c0))))) UNION ALL SELECT ALL vt0.c1, t0.c0, t0.c2 FROM vt0 CROSS JOIN t0 ON (((+ (t0.c1)))|(t0.c2 COLLATE BINARY)) GROUP BY vt0.c1, t0.c0, t0.c2 HAVING ((SUM((- (t0.c0)))) ISNULL);
SELECT vt0.c1, t0.c0, t0.c2 FROM vt0 CROSS JOIN t0 ON (((+ (t0.c1)))|(t0.c2 COLLATE BINARY)) GROUP BY vt0.c1, t0.c0, t0.c2;
SELECT * FROM t1;
SELECT * FROM t1 WHERE (CASE WHEN CAST(t1.c0 AS NUMERIC) THEN ((((t1.c0)OR(t1.c0)))OR(x'')) ELSE SQLITE_COMPILEOPTION_GET(t1.c0) END) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (CASE WHEN CAST(t1.c0 AS NUMERIC) THEN ((((t1.c0)OR(t1.c0)))OR(x'')) ELSE SQLITE_COMPILEOPTION_GET(t1.c0) END))) UNION ALL SELECT * FROM t1 WHERE (((CASE WHEN CAST(t1.c0 AS NUMERIC) THEN ((((t1.c0)OR(t1.c0)))OR(x'')) ELSE SQLITE_COMPILEOPTION_GET(t1.c0) END) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((NOT ('-334450294')) IN ())) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((NOT ('-334450294')) IN ())))) UNION SELECT DISTINCT * FROM t1 WHERE (((((NOT ('-334450294')) IN ())) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL vt0.c0 FROM vt0 INDEXED BY i45 GROUP BY vt0.c0;
SELECT t1.c0, vt0.c0, t0.c2, t0.c0, t0.c1, vt0.c1 FROM t1, vt0 NATURAL JOIN t0 GROUP BY t1.c0, vt0.c0, t0.c2, t0.c0, t0.c1, vt0.c1;
SELECT ALL t1.c0, vt0.c0, t0.c2, t0.c0, t0.c1, vt0.c1 FROM t1, vt0 NATURAL JOIN t0 GROUP BY t1.c0, vt0.c0, t0.c2, t0.c0, t0.c1, vt0.c1 HAVING ((GROUP_CONCAT(TOTAL(SUM(COUNT('1091600016')))))<(MIN(COUNT(GROUP_CONCAT(t0.c0))))) UNION ALL SELECT ALL t1.c0, vt0.c0, t0.c2, t0.c0, t0.c1, vt0.c1 FROM t1, vt0 NATURAL JOIN t0 GROUP BY t1.c0, vt0.c0, t0.c2, t0.c0, t0.c1, vt0.c1 HAVING (NOT (((GROUP_CONCAT(TOTAL(SUM(COUNT('1091600016')))))<(MIN(COUNT(GROUP_CONCAT(t0.c0))))))) UNION ALL SELECT ALL t1.c0, vt0.c0, t0.c2, t0.c0, t0.c1, vt0.c1 FROM t1, vt0 NATURAL JOIN t0 GROUP BY t1.c0, vt0.c0, t0.c2, t0.c0, t0.c1, vt0.c1 HAVING ((((GROUP_CONCAT(TOTAL(SUM(COUNT('1091600016')))))<(MIN(COUNT(GROUP_CONCAT(t0.c0)))))) ISNULL);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON NULL;
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON NULL WHERE (CASE ((t0.c2)/(t0.c2))  WHEN ((t0.c0)IS NOT(t0.c1)) THEN (x'' IN ()) WHEN (- (t0.c1)) THEN ((vt0.c1) NOT BETWEEN (t0.c2) AND (vt0.c1)) WHEN ((((((((t0.c0)OR(t0.c1)))OR(vt0.c1)))AND(t0.c0)))AND(t0.c1)) THEN t0.c1 COLLATE BINARY ELSE CASE WHEN t0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c2 WHEN vt0.c1 THEN t0.c2 END END) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON NULL WHERE ((NOT (CASE ((t0.c2)/(t0.c2))  WHEN ((t0.c0)IS NOT(t0.c1)) THEN (x'' IN ()) WHEN (- (t0.c1)) THEN ((vt0.c1) NOT BETWEEN (t0.c2) AND (vt0.c1)) WHEN ((((((((t0.c0)OR(t0.c1)))OR(vt0.c1)))AND(t0.c0)))AND(t0.c1)) THEN t0.c1 COLLATE BINARY ELSE CASE WHEN t0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c2 WHEN vt0.c1 THEN t0.c2 END END))) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON NULL WHERE (((CASE ((t0.c2)/(t0.c2))  WHEN ((t0.c0)IS NOT(t0.c1)) THEN (x'' IN ()) WHEN (- (t0.c1)) THEN ((vt0.c1) NOT BETWEEN (t0.c2) AND (vt0.c1)) WHEN ((((((((t0.c0)OR(t0.c1)))OR(vt0.c1)))AND(t0.c0)))AND(t0.c1)) THEN t0.c1 COLLATE BINARY ELSE CASE WHEN t0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c2 WHEN vt0.c1 THEN t0.c2 END END) ISNULL));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON NULL;
SELECT DISTINCT t0.c0, vt0.c0 FROM t1 CROSS JOIN t0 ON ((((vt0.c1) IS TRUE)) NOT BETWEEN (t1.c0) AND ((((t0.c1, vt0.c0, t0.c2)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((t0.c0, NULL, '1570057852'))))) FULL OUTER JOIN vt0 ON CAST(((t0.c1) ISNULL) AS INTEGER);
SELECT t0.c2, vt0.c0, t0.c0, vt0.c1 FROM vt0, t1, t0 GROUP BY t0.c2, vt0.c0, t0.c0, vt0.c1;
SELECT ALL t0.c2, vt0.c0, t0.c0, vt0.c1 FROM vt0, t1, t0 WHERE (CASE UNLIKELY(vt0.c1)  WHEN (~ (vt0.c0)) THEN (((t0.c1)) BETWEEN ((t1.c0)) AND ((t0.c1))) ELSE ((t1.c0) ISNULL) END) GROUP BY t0.c2, vt0.c0, t0.c0, vt0.c1 UNION SELECT ALL t0.c2, vt0.c0, t0.c0, vt0.c1 FROM vt0, t1, t0 WHERE ((NOT (CASE UNLIKELY(vt0.c1)  WHEN (~ (vt0.c0)) THEN (((t0.c1)) BETWEEN ((t1.c0)) AND ((t0.c1))) ELSE ((t1.c0) ISNULL) END))) GROUP BY t0.c2, vt0.c0, t0.c0, vt0.c1 UNION SELECT t0.c2, vt0.c0, t0.c0, vt0.c1 FROM vt0, t1, t0 WHERE (((CASE UNLIKELY(vt0.c1)  WHEN (~ (vt0.c0)) THEN (((t0.c1)) BETWEEN ((t1.c0)) AND ((t0.c1))) ELSE ((t1.c0) ISNULL) END) ISNULL)) GROUP BY t0.c2, vt0.c0, t0.c0, vt0.c1;
SELECT t0.c2, vt0.c0, t0.c0, vt0.c1 FROM vt0, t1, t0 GROUP BY t0.c2, vt0.c0, t0.c0, vt0.c1;
SELECT t1.c0, vt0.c1 FROM t1, vt0 GROUP BY t1.c0, vt0.c1;
SELECT ALL t1.c0, vt0.c1 FROM t1, vt0 GROUP BY t1.c0, vt0.c1 HAVING SUM(SUM(vt0.c0)) UNION ALL SELECT t1.c0, vt0.c1 FROM t1, vt0 GROUP BY t1.c0, vt0.c1 HAVING (NOT (SUM(SUM(vt0.c0)))) UNION ALL SELECT t1.c0, vt0.c1 FROM t1, vt0 GROUP BY t1.c0, vt0.c1 HAVING ((SUM(SUM(vt0.c0))) ISNULL);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON 'ow' INNER JOIN t1 ON t0.c0;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON 'ow' INNER JOIN t1 ON t0.c0 WHERE ((NOT ((((t0.c0)) BETWEEN ((t1.c0)) AND ((t0.c2)))))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON 'ow' INNER JOIN t1 ON t0.c0 WHERE ((NOT ((NOT ((((t0.c0)) BETWEEN ((t1.c0)) AND ((t0.c2)))))))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN t0 ON 'ow' INNER JOIN t1 ON t0.c0 WHERE ((((NOT ((((t0.c0)) BETWEEN ((t1.c0)) AND ((t0.c2)))))) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON 'ow' INNER JOIN t1 ON t0.c0;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE ((((((t0.c2)OR(t1.c0)))AND(t1.c0)) IN ())) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT ((((((t0.c2)OR(t1.c0)))AND(t1.c0)) IN ())))) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((((((((t0.c2)OR(t1.c0)))AND(t1.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT t0.c0, t1.c0, t0.c1, t0.c2 FROM vt0, t0, t1 GROUP BY t0.c0, t1.c0, t0.c1, t0.c2;
SELECT ALL t0.c0, t1.c0, t0.c1, t0.c2 FROM vt0, t0, t1 WHERE (0x1f7d67d5) GROUP BY t0.c0, t1.c0, t0.c1, t0.c2 UNION SELECT ALL t0.c0, t1.c0, t0.c1, t0.c2 FROM vt0, t0, t1 WHERE ((NOT (0x1f7d67d5))) GROUP BY t0.c0, t1.c0, t0.c1, t0.c2 UNION SELECT t0.c0, t1.c0, t0.c1, t0.c2 FROM vt0, t0, t1 WHERE (((0x1f7d67d5) ISNULL)) GROUP BY t0.c0, t1.c0, t0.c1, t0.c2;
SELECT t0.c0, t1.c0, t0.c1, t0.c2 FROM vt0, t0, t1 GROUP BY t0.c0, t1.c0, t0.c1, t0.c2;
SELECT ALL t0.c2, vt0.c1, t1.c0, t0.c1, vt0.c0, t0.c0 FROM t0, vt0, t1 GROUP BY t0.c2, vt0.c1, t1.c0, t0.c1, vt0.c0, t0.c0;
SELECT ALL t0.c2, vt0.c1, t1.c0, t0.c1, vt0.c0, t0.c0 FROM t0, vt0, t1 GROUP BY t0.c2, vt0.c1, t1.c0, t0.c1, vt0.c0, t0.c0 HAVING TOTAL((+ (t0.c1))) UNION ALL SELECT t0.c2, vt0.c1, t1.c0, t0.c1, vt0.c0, t0.c0 FROM t0, vt0, t1 GROUP BY t0.c2, vt0.c1, t1.c0, t0.c1, vt0.c0, t0.c0 HAVING (NOT (TOTAL((+ (t0.c1))))) UNION ALL SELECT t0.c2, vt0.c1, t1.c0, t0.c1, vt0.c0, t0.c0 FROM t0, vt0, t1 GROUP BY t0.c2, vt0.c1, t1.c0, t0.c1, vt0.c0, t0.c0 HAVING ((TOTAL((+ (t0.c1)))) ISNULL);
SELECT ALL t0.c2, vt0.c1, t1.c0, t0.c1, vt0.c0, t0.c0 FROM t0, vt0, t1 GROUP BY t0.c2, vt0.c1, t1.c0, t0.c1, vt0.c0, t0.c0;
SELECT ALL t0.c2, vt0.c1, t1.c0, t0.c1, vt0.c0, t0.c0 FROM t0, vt0, t1 GROUP BY t0.c2, vt0.c1, t1.c0, t0.c1, vt0.c0, t0.c0 HAVING TOTAL((+ (t0.c1))) UNION ALL SELECT t0.c2, vt0.c1, t1.c0, t0.c1, vt0.c0, t0.c0 FROM t0, vt0, t1 GROUP BY t0.c2, vt0.c1, t1.c0, t0.c1, vt0.c0, t0.c0 HAVING (NOT (TOTAL((+ (t0.c1))))) UNION ALL SELECT t0.c2, vt0.c1, t1.c0, t0.c1, vt0.c0, t0.c0 FROM t0, vt0, t1 GROUP BY t0.c2, vt0.c1, t1.c0, t0.c1, vt0.c0, t0.c0 HAVING ((TOTAL((+ (t0.c1)))) ISNULL);
SELECT ALL t0.c2, vt0.c1, t1.c0, t0.c1, vt0.c0, t0.c0 FROM t0, vt0, t1 GROUP BY t0.c2, vt0.c1, t1.c0, t0.c1, vt0.c0, t0.c0;
SELECT * FROM t1, t0, vt0;
SELECT * FROM t1, t0, vt0 WHERE (((t0.c2 COLLATE BINARY) NOT BETWEEN (t0.c2 COLLATE BINARY) AND (((t0.c1) NOT NULL)))) UNION ALL SELECT * FROM t1, t0, vt0 WHERE ((NOT (((t0.c2 COLLATE BINARY) NOT BETWEEN (t0.c2 COLLATE BINARY) AND (((t0.c1) NOT NULL)))))) UNION ALL SELECT ALL * FROM t1, t0, vt0 WHERE (((((t0.c2 COLLATE BINARY) NOT BETWEEN (t0.c2 COLLATE BINARY) AND (((t0.c1) NOT NULL)))) ISNULL));
SELECT * FROM t1, t0, vt0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((0Xffffffffe8c6ba8b) NOT NULL)) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((0xffffffffe8c6ba8b) NOT NULL)))) UNION SELECT DISTINCT * FROM t1 WHERE (((((0Xffffffffe8c6ba8b) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t1.c0, t0.c2 FROM t1, t0 GROUP BY t1.c0, t0.c2;
SELECT ALL t1.c0, t0.c2 FROM t1, t0 WHERE (x'') GROUP BY t1.c0, t0.c2 UNION SELECT ALL t1.c0, t0.c2 FROM t1, t0 WHERE ((NOT (x''))) GROUP BY t1.c0, t0.c2 UNION SELECT t1.c0, t0.c2 FROM t1, t0 WHERE (((x'') ISNULL)) GROUP BY t1.c0, t0.c2;
SELECT ALL t1.c0, t0.c2 FROM t1, t0 GROUP BY t1.c0, t0.c2;
SELECT ALL t0.c2, t0.c1, t1.c0, t0.c0 FROM t0, t1 GROUP BY t0.c2, t0.c1, t1.c0, t0.c0;
SELECT ALL t0.c2, t0.c1, t1.c0, t0.c0 FROM t0, t1 NOT INDEXED GROUP BY t0.c2, t0.c1, t1.c0, t0.c0 HAVING GROUP_CONCAT(COUNT(AVG(MAX(MIN(t0.c2))))) UNION ALL SELECT ALL t0.c2, t0.c1, t1.c0, t0.c0 FROM t0, t1 GROUP BY t0.c2, t0.c1, t1.c0, t0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(AVG(MAX(MIN(t0.c2))))))) UNION ALL SELECT ALL t0.c2, t0.c1, t1.c0, t0.c0 FROM t0, t1 GROUP BY t0.c2, t0.c1, t1.c0, t0.c0 HAVING ((GROUP_CONCAT(COUNT(AVG(MAX(MIN(t0.c2)))))) ISNULL);
SELECT MAX(CAST(((t1.c0) IS TRUE) AS NUMERIC)) FROM t1 ORDER BY CAST(t1.c0 AS BLOB) COLLATE RTRIM;
SELECT ALL * FROM t1 RIGHT OUTER JOIN t0 ON ((((t0.c0)IS NOT(vt0.c1)))OR(vt0.c1 COLLATE BINARY)) INNER JOIN vt0 ON CASE WHEN '-1468993086' COLLATE RTRIM THEN IFNULL(DISTINCT t0.c1, vt0.c1) WHEN (('W桯')&(t0.c2)) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((t0.c2)AND(t0.c1)) THEN ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)) END;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) IN (((((t1.c0)OR(t1.c0)))AND(t1.c0))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) IN (((((t1.c0)OR(t1.c0)))AND(t1.c0))))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) IN (((((t1.c0)OR(t1.c0)))AND(t1.c0))))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((((t1.c0)IS(t1.c0)))*(((t1.c0) IS FALSE)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((t1.c0)IS(t1.c0)))*(((t1.c0) IS FALSE)))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((((((t1.c0)IS(t1.c0)))*(((t1.c0) IS FALSE)))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING GROUP_CONCAT(TOTAL(t0.c1)) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING (NOT (GROUP_CONCAT(TOTAL(t0.c1)))) UNION ALL SELECT t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING ((GROUP_CONCAT(TOTAL(t0.c1))) ISNULL);
SELECT ALL t0.c2, vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((CAST(vt0.c0 AS REAL))OR(((t0.c0) NOT BETWEEN ('?M*{119Z2') AND (t0.c1)))))AND(1151625023)) CROSS JOIN t1 ON x'';
SELECT ALL t0.c2, vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((CAST(vt0.c0 AS REAL))OR(((t0.c0) NOT BETWEEN ('?M*{119Z2') AND (t0.c1)))))AND(1151625023)) CROSS JOIN t1 ON x'' WHERE ((((((''))!=((vt0.c0)))) BETWEEN (((t0.c1) BETWEEN ('-991507206') AND (t0.c1))) AND (((t1.c0)LIKE(vt0.c0))))) UNION ALL SELECT ALL t0.c2, vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((CAST(vt0.c0 AS REAL))OR(((t0.c0) NOT BETWEEN ('?M*{119Z2') AND (t0.c1)))))AND(1151625023)) CROSS JOIN t1 ON x'' WHERE ((NOT ((((((''))!=((vt0.c0)))) BETWEEN (((t0.c1) BETWEEN ('-991507206') AND (t0.c1))) AND (((t1.c0)LIKE(vt0.c0))))))) UNION ALL SELECT t0.c2, vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((CAST(vt0.c0 AS REAL))OR(((t0.c0) NOT BETWEEN ('?M*{119Z2') AND (t0.c1)))))AND(1151625023)) CROSS JOIN t1 ON x'' WHERE ((((((((''))!=((vt0.c0)))) BETWEEN (((t0.c1) BETWEEN ('-991507206') AND (t0.c1))) AND (((t1.c0)LIKE(vt0.c0))))) ISNULL));
SELECT ALL t0.c2, vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((((CAST(vt0.c0 AS REAL))OR(((t0.c0) NOT BETWEEN ('?M*{119Z2') AND (t0.c1)))))AND(1151625023)) CROSS JOIN t1 ON x'';
SELECT DISTINCT vt0.c0, t1.c0, vt0.c1 FROM vt0, t1;
SELECT DISTINCT vt0.c0, t1.c0, vt0.c1 FROM vt0, t1 WHERE (vt0.c1) UNION SELECT DISTINCT vt0.c0, t1.c0, vt0.c1 FROM vt0, t1 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT vt0.c0, t1.c0, vt0.c1 FROM vt0, t1 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT vt0.c0, t1.c0, vt0.c1 FROM vt0, t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (CASE WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) ELSE ((0.8056802537070727)*(t1.c0)) END) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (CASE WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) ELSE ((0.8056802537070727)*(t1.c0)) END))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((CASE WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) ELSE ((0.8056802537070727)*(t1.c0)) END) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c2, t0.c0, t1.c0, t0.c1 FROM t0 LEFT OUTER JOIN t1 ON ((((((t0.c2)AND(t0.c2)))AND(t0.c0))) NOT NULL) GROUP BY t0.c2, t0.c0, t1.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t1.c0, t0.c1 FROM t0 LEFT OUTER JOIN t1 ON ((((((t0.c2)AND(t0.c2)))AND(t0.c0))) NOT NULL) GROUP BY t0.c2, t0.c0, t1.c0, t0.c1 HAVING (((t1.c0)/(t1.c0)) IN ()) UNION ALL SELECT t0.c2, t0.c0, t1.c0, t0.c1 FROM t0 LEFT OUTER JOIN t1 ON ((((((t0.c2)AND(t0.c2)))AND(t0.c0))) NOT NULL) GROUP BY t0.c2, t0.c0, t1.c0, t0.c1 HAVING (NOT ((((t1.c0)/(t1.c0)) IN ()))) UNION ALL SELECT ALL t0.c2, t0.c0, t1.c0, t0.c1 FROM t0 LEFT OUTER JOIN t1 ON ((((((t0.c2)AND(t0.c2)))AND(t0.c0))) NOT NULL) GROUP BY t0.c2, t0.c0, t1.c0, t0.c1 HAVING (((((t1.c0)/(t1.c0)) IN ())) ISNULL);
SELECT ALL t0.c2, t0.c0, t1.c0, t0.c1 FROM t0 LEFT OUTER JOIN t1 ON ((((((t0.c2)AND(t0.c2)))AND(t0.c0))) NOT NULL) GROUP BY t0.c2, t0.c0, t1.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t1.c0, t0.c1 FROM t0 LEFT OUTER JOIN t1 ON ((((((t0.c2)AND(t0.c2)))AND(t0.c0))) NOT NULL) GROUP BY t0.c2, t0.c0, t1.c0, t0.c1 HAVING (((t1.c0)/(t1.c0)) IN ()) UNION ALL SELECT t0.c2, t0.c0, t1.c0, t0.c1 FROM t0 LEFT OUTER JOIN t1 ON ((((((t0.c2)AND(t0.c2)))AND(t0.c0))) NOT NULL) GROUP BY t0.c2, t0.c0, t1.c0, t0.c1 HAVING (NOT ((((t1.c0)/(t1.c0)) IN ()))) UNION ALL SELECT ALL t0.c2, t0.c0, t1.c0, t0.c1 FROM t0 LEFT OUTER JOIN t1 ON ((((((t0.c2)AND(t0.c2)))AND(t0.c0))) NOT NULL) GROUP BY t0.c2, t0.c0, t1.c0, t0.c1 HAVING (((((t1.c0)/(t1.c0)) IN ())) ISNULL);
SELECT ALL t0.c2, t0.c0, t1.c0, t0.c1 FROM t0 LEFT OUTER JOIN t1 ON ((((((t0.c2)AND(t0.c2)))AND(t0.c0))) NOT NULL) GROUP BY t0.c2, t0.c0, t1.c0, t0.c1;
SELECT * FROM t0, t1;
SELECT * FROM t0, t1 NOT INDEXED WHERE ((((t0.c2)>(t1.c0)) IN (COALESCE(DISTINCT t0.c1, t0.c1, t0.c2, x'30fc')))) UNION ALL SELECT * FROM t0, t1 WHERE ((NOT ((((t0.c2)>(t1.c0)) IN (COALESCE(DISTINCT t0.c1, t0.c1, t0.c2, x'30fc')))))) UNION ALL SELECT ALL * FROM t0, t1 WHERE ((((((t0.c2)>(t1.c0)) IN (COALESCE(DISTINCT t0.c1, t0.c1, t0.c2, x'30fc')))) ISNULL));
SELECT * FROM t0, t1;
SELECT DISTINCT * FROM t1, vt0;
SELECT DISTINCT * FROM t1, vt0 WHERE (COALESCE((((vt0.c0))>((0.669129685534301))), CAST(vt0.c0 AS NUMERIC))) UNION SELECT DISTINCT * FROM t1, vt0 WHERE ((NOT (COALESCE((((vt0.c0))>((0.669129685534301))), CAST(vt0.c0 AS NUMERIC))))) UNION SELECT DISTINCT * FROM t1, vt0 WHERE (((COALESCE((((vt0.c0))>((0.669129685534301))), CAST(vt0.c0 AS NUMERIC))) ISNULL));
SELECT DISTINCT * FROM t1, vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 IN ()) COLLATE NOCASE))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ()) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING GROUP_CONCAT(AVG(t0.c0)) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING (NOT (GROUP_CONCAT(AVG(t0.c0)))) UNION ALL SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING ((GROUP_CONCAT(AVG(t0.c0))) ISNULL);
SELECT ALL * FROM t0, t1 NOT INDEXED, vt0;
SELECT * FROM t0, t1, vt0 WHERE (1492831471) UNION ALL SELECT * FROM t0, t1, vt0 WHERE ((NOT (1492831471))) UNION ALL SELECT ALL * FROM t0, t1, vt0 WHERE (((1492831471) ISNULL));
SELECT ALL * FROM t0, t1 NOT INDEXED, vt0;
SELECT DISTINCT * FROM t0, t1, vt0;
SELECT DISTINCT * FROM t0, t1, vt0 WHERE (CASE WHEN vt0.c1 THEN CAST(t0.c2 AS REAL) END) UNION SELECT DISTINCT * FROM t0, t1, vt0 WHERE ((NOT (CASE WHEN vt0.c1 THEN CAST(t0.c2 AS REAL) END))) UNION SELECT DISTINCT * FROM t0, t1, vt0 WHERE (((CASE WHEN vt0.c1 THEN CAST(t0.c2 AS REAL) END) ISNULL));
SELECT DISTINCT * FROM t0, t1, vt0;
SELECT ALL t0.c2, vt0.c0, t0.c1, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (((((t0.c1, t0.c0, x''))<=((t0.c0, vt0.c1, t1.c0)))) BETWEEN (((t1.c0) IS FALSE)) AND (((t1.c0) NOT BETWEEN (t0.c1) AND (t1.c0)))) INNER JOIN t1 ON (NOT (vt0.c0 COLLATE BINARY)) GROUP BY t0.c2, vt0.c0, t0.c1, t0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((AVG(vt0.c0)) IS FALSE))AND(CAST(MAX(TOTAL(vt0.c1)) AS INTEGER))) UNION ALL SELECT ALL vt0.c1 FROM vt0 NOT INDEXED GROUP BY vt0.c1 HAVING (NOT (((((AVG(vt0.c0)) IS FALSE))AND(CAST(MAX(TOTAL(vt0.c1)) AS INTEGER))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((((AVG(vt0.c0)) IS FALSE))AND(CAST(MAX(TOTAL(vt0.c1)) AS INTEGER)))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0)-(vt0.c1)) THEN ((vt0.c1)IS(vt0.c1)) END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0)-(vt0.c1)) THEN ((vt0.c1)IS(vt0.c1)) END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE WHEN ((vt0.c0)-(vt0.c1)) THEN ((vt0.c1)IS(vt0.c1)) END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM t1, vt0;
SELECT DISTINCT * FROM t1, vt0 WHERE ((((vt0.c0 IN (vt0.c0))) BETWEEN (((((0.5433053517638115)OR(vt0.c1)))AND(t1.c0))) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM t1, vt0 WHERE ((NOT ((((vt0.c0 IN (vt0.c0))) BETWEEN (((((0.5433053517638115)OR(vt0.c1)))AND(t1.c0))) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))))) UNION SELECT DISTINCT * FROM t1, vt0 WHERE ((((((vt0.c0 IN (vt0.c0))) BETWEEN (((((0.5433053517638115)OR(vt0.c1)))AND(t1.c0))) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM t1, vt0;
SELECT t0.c2, t0.c1 FROM t0, t1 GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0, t1 WHERE (((((((t1.c0) NOT BETWEEN (t1.c0) AND (t0.c2)))AND(((t0.c0)%(t0.c0)))))OR(((t0.c2)GLOB(t0.c1))))) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM t0, t1 WHERE ((NOT (((((((t1.c0) NOT BETWEEN (t1.c0) AND (t0.c2)))AND(((t0.c0)%(t0.c0)))))OR(((t0.c2)GLOB(t0.c1))))))) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM t0, t1 WHERE (((((((((t1.c0) NOT BETWEEN (t1.c0) AND (t0.c2)))AND(((t0.c0)%(t0.c0)))))OR(((t0.c2)GLOB(t0.c1))))) ISNULL)) GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0, t1 GROUP BY t0.c2, t0.c1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING GROUP_CONCAT(((TOTAL(TOTAL(t1.c0)))>=(t1.c0))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (GROUP_CONCAT(((TOTAL(TOTAL(t1.c0)))>=(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((GROUP_CONCAT(((TOTAL(TOTAL(t1.c0)))>=(t1.c0)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE WHEN NULL COLLATE BINARY THEN ((vt0.c1) NOTNULL) ELSE ((vt0.c1)/(vt0.c0)) END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE WHEN NULL COLLATE BINARY THEN ((vt0.c1) NOTNULL) ELSE ((vt0.c1)/(vt0.c0)) END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE WHEN NULL COLLATE BINARY THEN ((vt0.c1) NOTNULL) ELSE ((vt0.c1)/(vt0.c0)) END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (x'') UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM t0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0, t0.c1, t0.c2, vt0.c1, vt0.c0, t1.c0 FROM t0, vt0, t1 GROUP BY t0.c0, t0.c1, t0.c2, vt0.c1, vt0.c0, t1.c0;
SELECT t0.c0, t0.c1, t0.c2, vt0.c1, vt0.c0, t1.c0 FROM t0, vt0, t1 WHERE (((((((((CASE t0.c2  WHEN vt0.c1 THEN vt0.c1 WHEN t1.c0 THEN vt0.c1 WHEN t0.c1 THEN t0.c0 WHEN '' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)AND(0.047049628687043654)))OR((((t0.c1)) BETWEEN ((t0.c2)) AND ((NULL))))))AND((- (t1.c0)))))AND((~ (t0.c1))))) GROUP BY t0.c0, t0.c1, t0.c2, vt0.c1, vt0.c0, t1.c0 UNION SELECT ALL t0.c0, t0.c1, t0.c2, vt0.c1, vt0.c0, t1.c0 FROM t0, vt0, t1 WHERE ((NOT (((((((((CASE t0.c2  WHEN vt0.c1 THEN vt0.c1 WHEN t1.c0 THEN vt0.c1 WHEN t0.c1 THEN t0.c0 WHEN '' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)AND(0.047049628687043654)))OR((((t0.c1)) BETWEEN ((t0.c2)) AND ((NULL))))))AND((- (t1.c0)))))AND((~ (t0.c1))))))) GROUP BY t0.c0, t0.c1, t0.c2, vt0.c1, vt0.c0, t1.c0 UNION SELECT t0.c0, t0.c1, t0.c2, vt0.c1, vt0.c0, t1.c0 FROM t0, vt0, t1 WHERE (((((((((((CASE t0.c2  WHEN vt0.c1 THEN vt0.c1 WHEN t1.c0 THEN vt0.c1 WHEN t0.c1 THEN t0.c0 WHEN '' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)AND(0.047049628687043654)))OR((((t0.c1)) BETWEEN ((t0.c2)) AND ((NULL))))))AND((- (t1.c0)))))AND((~ (t0.c1))))) ISNULL)) GROUP BY t0.c0, t0.c1, t0.c2, vt0.c1, vt0.c0, t1.c0;
SELECT t0.c0, t0.c1, t0.c2, vt0.c1, vt0.c0, t1.c0 FROM t0, vt0, t1 GROUP BY t0.c0, t0.c1, t0.c2, vt0.c1, vt0.c0, t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING NULL UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((NULL) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING NULL UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((NULL) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT * FROM t1, t0;
SELECT ALL * FROM t1, t0 WHERE (CAST((+ (t0.c0)) AS NUMERIC)) UNION ALL SELECT * FROM t1, t0 WHERE ((NOT (CAST((+ (t0.c0)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM t1, t0 WHERE (((CAST((+ (t0.c0)) AS NUMERIC)) ISNULL));
SELECT * FROM t1, t0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM t1 FULL OUTER JOIN vt0 ON 0.9801980964779636;
SELECT DISTINCT vt0.c0, vt0.c1 FROM t1 FULL OUTER JOIN vt0 ON 0.9801980964779636 WHERE (((NOT (vt0.c1)) IN ())) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM t1 FULL OUTER JOIN vt0 ON 0.9801980964779636 WHERE ((NOT (((NOT (vt0.c1)) IN ())))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM t1 FULL OUTER JOIN vt0 ON 0.9801980964779636 WHERE (((((NOT (vt0.c1)) IN ())) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM t1 FULL OUTER JOIN vt0 ON 0.9801980964779636;
SELECT t1.c0, vt0.c0 FROM t0, t1, vt0 GROUP BY t1.c0, vt0.c0;
SELECT t1.c0, vt0.c0 FROM t0, t1, vt0 WHERE (((((t0.c1) NOT BETWEEN (t1.c0) AND (NULL)))GLOB(((((vt0.c1)AND(t0.c1)))AND(t0.c0))))) GROUP BY t1.c0, vt0.c0 UNION SELECT t1.c0, vt0.c0 FROM t0, t1, vt0 WHERE ((NOT (((((t0.c1) NOT BETWEEN (t1.c0) AND (NULL)))GLOB(((((vt0.c1)AND(t0.c1)))AND(t0.c0))))))) GROUP BY t1.c0, vt0.c0 UNION SELECT ALL t1.c0, vt0.c0 FROM t0, t1, vt0 WHERE (((((((t0.c1) NOT BETWEEN (t1.c0) AND (NULL)))GLOB(((((vt0.c1)AND(t0.c1)))AND(t0.c0))))) ISNULL)) GROUP BY t1.c0, vt0.c0;
SELECT t1.c0, vt0.c0 FROM t0, t1, vt0 GROUP BY t1.c0, vt0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE (((((t0.c1)-(t0.c2)))>(((t0.c0)-(t0.c2))))) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((NOT (((((t0.c1)-(t0.c2)))>(((t0.c0)-(t0.c2))))))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE (((((((t0.c1)-(t0.c2)))>(((t0.c0)-(t0.c2))))) ISNULL));
SELECT t0.c0, t0.c2, t0.c1 FROM t0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (UNLIKELY(((vt0.c0)*(vt0.c0)))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (UNLIKELY(((vt0.c0)*(vt0.c0)))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((UNLIKELY(((vt0.c0)*(vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL vt0.c0 FROM t0, vt0, t1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0, t1 WHERE (vt0.c1) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t0, vt0, t1 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t0, vt0, t1 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0, t1 GROUP BY vt0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING CAST(vt0.c0 AS BLOB) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (CAST(vt0.c0 AS BLOB))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((CAST(vt0.c0 AS BLOB)) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING CAST(vt0.c0 AS BLOB) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (CAST(vt0.c0 AS BLOB))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((CAST(vt0.c0 AS BLOB)) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT * FROM vt0, t0, t1;
SELECT * FROM vt0, t0, t1 WHERE (((((t1.c0)LIKE(vt0.c1))) NOT BETWEEN (0X22dd0665) AND (((vt0.c1) IS TRUE)))) UNION ALL SELECT ALL * FROM vt0, t0, t1 WHERE ((NOT (((((t1.c0)LIKE(vt0.c1))) NOT BETWEEN (0X22dd0665) AND (((vt0.c1) IS TRUE)))))) UNION ALL SELECT * FROM vt0, t0, t1 WHERE (((((((t1.c0)LIKE(vt0.c1))) NOT BETWEEN (0x22dd0665) AND (((vt0.c1) IS TRUE)))) ISNULL));
SELECT * FROM vt0, t0, t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0)<<(t1.c0)))OR(0.5756464353908728)))AND(NULL))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((((((t1.c0)<<(t1.c0)))OR(0.5756464353908728)))AND(NULL))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c0)<<(t1.c0)))OR(0.5756464353908728)))AND(NULL))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t1.c0, t0.c0, t0.c1 FROM vt0, t1, t0 GROUP BY t1.c0, t0.c0, t0.c1;
SELECT t1.c0, t0.c0, t0.c1 FROM vt0, t1, t0 WHERE (CAST(((t1.c0) IS TRUE) AS REAL)) GROUP BY t1.c0, t0.c0, t0.c1 UNION SELECT t1.c0, t0.c0, t0.c1 FROM vt0, t1, t0 WHERE ((NOT (CAST(((t1.c0) IS TRUE) AS REAL)))) GROUP BY t1.c0, t0.c0, t0.c1 UNION SELECT ALL t1.c0, t0.c0, t0.c1 FROM vt0, t1, t0 WHERE (((CAST(((t1.c0) IS TRUE) AS REAL)) ISNULL)) GROUP BY t1.c0, t0.c0, t0.c1;
SELECT t1.c0, t0.c0, t0.c1 FROM vt0, t1, t0 GROUP BY t1.c0, t0.c0, t0.c1;
SELECT vt0.c1, t0.c1, t1.c0, vt0.c0, t0.c2 FROM t1, vt0, t0 INDEXED BY i37 GROUP BY vt0.c1, t0.c1, t1.c0, vt0.c0, t0.c2;
SELECT SUM(((((UPPER(t1.c0))OR((x'' IN ()))))AND(((t1.c0)<<(t1.c0))))) FROM t1 ORDER BY 0.20989954630794105 ASC  NULLS LAST;
SELECT ALL * FROM t1 RIGHT OUTER JOIN t0 ON ((((t0.c1 COLLATE NOCASE)OR(t0.c1)))AND(CAST(vt0.c1 AS REAL))) INNER JOIN vt0 ON COALESCE((vt0.c1 IN (vt0.c0, t0.c0)), (((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))), LIKELIHOOD(t0.c1, 0.5977279063208537), ((t0.c0) NOT BETWEEN (vt0.c1) AND (t0.c1)));
SELECT DISTINCT t1.c0 FROM vt0, t1, t0;
SELECT DISTINCT t1.c0 FROM vt0, t1, t0 WHERE ((((NULL))<=((((t1.c0)>('')))))) UNION SELECT DISTINCT t1.c0 FROM vt0, t1, t0 WHERE ((NOT ((((NULL))<=((((t1.c0)>('')))))))) UNION SELECT DISTINCT t1.c0 FROM vt0, t1, t0 WHERE ((((((NULL))<=((((t1.c0)>('')))))) ISNULL));
SELECT DISTINCT t1.c0 FROM vt0, t1, t0;
SELECT t0.c2, t1.c0, t0.c0 FROM t1, t0 GROUP BY t0.c2, t1.c0, t0.c0;
SELECT ALL t0.c2, t1.c0, t0.c0 FROM t1, t0 WHERE ((~ (((t1.c0) NOT BETWEEN (t0.c2) AND (t1.c0))))) GROUP BY t0.c2, t1.c0, t0.c0 UNION SELECT ALL t0.c2, t1.c0, t0.c0 FROM t1, t0 WHERE ((NOT ((~ (((t1.c0) NOT BETWEEN (t0.c2) AND (t1.c0))))))) GROUP BY t0.c2, t1.c0, t0.c0 UNION SELECT t0.c2, t1.c0, t0.c0 FROM t1, t0 WHERE ((((~ (((t1.c0) NOT BETWEEN (t0.c2) AND (t1.c0))))) ISNULL)) GROUP BY t0.c2, t1.c0, t0.c0;
SELECT t0.c2, t1.c0, t0.c0 FROM t1, t0 GROUP BY t0.c2, t1.c0, t0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL MAX((((t1.c0)IS(vt0.c0)) IN ())) FROM vt0, t1;
SELECT ALL t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE (CASE ((0x17e0842c)<=(t1.c0))  WHEN NULLIF(DISTINCT t1.c0, t1.c0) THEN (((t1.c0, t1.c0, t1.c0))>((t1.c0, t1.c0, NULL))) WHEN (NOT (t1.c0)) THEN t1.c0 WHEN (+ (t1.c0)) THEN (((t1.c0)) BETWEEN ((-462001000)) AND ((t1.c0))) END) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT (CASE ((0X17e0842c)<=(t1.c0))  WHEN NULLIF(DISTINCT t1.c0, t1.c0) THEN (((t1.c0, t1.c0, t1.c0))>((t1.c0, t1.c0, NULL))) WHEN (NOT (t1.c0)) THEN t1.c0 WHEN (+ (t1.c0)) THEN (((t1.c0)) BETWEEN ((-462001000)) AND ((t1.c0))) END))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE (((CASE ((0X17e0842c)<=(t1.c0))  WHEN NULLIF(DISTINCT t1.c0, t1.c0) THEN (((t1.c0, t1.c0, t1.c0))>((t1.c0, t1.c0, NULL))) WHEN (NOT (t1.c0)) THEN t1.c0 WHEN (+ (t1.c0)) THEN (((t1.c0)) BETWEEN ((-462001000)) AND ((t1.c0))) END) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT t0.c0, t0.c1, t0.c2, t1.c0 FROM t0, t1;
SELECT DISTINCT t0.c0, t0.c1, t0.c2, t1.c0 FROM t0, t1 WHERE (((CAST(t0.c1 AS INTEGER)) NOTNULL)) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2, t1.c0 FROM t0, t1 WHERE ((NOT (((CAST(t0.c1 AS INTEGER)) NOTNULL)))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2, t1.c0 FROM t0, t1 WHERE (((((CAST(t0.c1 AS INTEGER)) NOTNULL)) ISNULL));
SELECT DISTINCT t0.c0, t0.c1, t0.c2, t1.c0 FROM t0, t1;
SELECT ALL vt0.c1, t0.c1, t0.c2, t1.c0 FROM t0 LEFT OUTER JOIN t1 ON ((CASE WHEN vt0.c0 THEN t1.c0 WHEN t0.c1 THEN t1.c0 WHEN t0.c0 THEN vt0.c0 END)|(((NULL) NOT BETWEEN (t0.c0) AND (t1.c0)))) CROSS JOIN vt0 ON CAST(t0.c2 AS BLOB) GROUP BY vt0.c1, t0.c1, t0.c2, t1.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (- (((((GROUP_CONCAT(AVG(AVG(vt0.c1))))OR(MAX(vt0.c0))))OR(vt0.c0)))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT ((- (((((GROUP_CONCAT(AVG(AVG(vt0.c1))))OR(MAX(vt0.c0))))OR(vt0.c0)))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (((- (((((GROUP_CONCAT(AVG(AVG(vt0.c1))))OR(MAX(vt0.c0))))OR(vt0.c0))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (1787772757) UNION ALL SELECT * FROM vt0 WHERE ((NOT (1787772757))) UNION ALL SELECT ALL * FROM vt0 WHERE (((1787772757) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))OR('-153082929'))) IS TRUE)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((vt0.c1)OR(vt0.c1)))OR('-153082929'))) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c1)OR(vt0.c1)))OR('-153082929'))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM t1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t1, vt0 WHERE ((((- (NULL)))||(((t1.c0)%(x''))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t1, vt0 WHERE ((NOT ((((- (NULL)))||(((t1.c0)%(x''))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t1, vt0 WHERE ((((((- (NULL)))||(((t1.c0)%(x''))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t1, vt0 GROUP BY vt0.c0;
SELECT ALL t1.c0 FROM t1 INNER JOIN vt0 ON t1.c0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 INNER JOIN vt0 ON t1.c0 GROUP BY t1.c0 HAVING CAST((NOT (TOTAL(vt0.c0))) AS TEXT) UNION ALL SELECT ALL t1.c0 FROM t1 INNER JOIN vt0 ON t1.c0 GROUP BY t1.c0 HAVING (NOT (CAST((NOT (TOTAL(vt0.c0))) AS TEXT))) UNION ALL SELECT ALL t1.c0 FROM t1 INNER JOIN vt0 ON t1.c0 GROUP BY t1.c0 HAVING ((CAST((NOT (TOTAL(vt0.c0))) AS TEXT)) ISNULL);
SELECT ALL t1.c0 FROM t1 INNER JOIN vt0 ON t1.c0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 INNER JOIN vt0 ON t1.c0 GROUP BY t1.c0 HAVING CAST((NOT (TOTAL(vt0.c0))) AS TEXT) UNION ALL SELECT ALL t1.c0 FROM t1 INNER JOIN vt0 ON t1.c0 GROUP BY t1.c0 HAVING (NOT (CAST((NOT (TOTAL(vt0.c0))) AS TEXT))) UNION ALL SELECT ALL t1.c0 FROM t1 INNER JOIN vt0 ON t1.c0 GROUP BY t1.c0 HAVING ((CAST((NOT (TOTAL(vt0.c0))) AS TEXT)) ISNULL);
SELECT ALL t1.c0 FROM t1 INNER JOIN vt0 ON t1.c0 GROUP BY t1.c0;
SELECT MAX(((COALESCE(vt0.c0, vt0.c1))==(((vt0.c1)||(t0.c1))))) FROM t0, vt0 ORDER BY UPPER(DISTINCT t0.c2 COLLATE NOCASE) ASC  NULLS FIRST;
SELECT ALL t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (highlight(UNLIKELY(t1.c0), x'ddb1', '', CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (highlight(UNLIKELY(t1.c0), x'ddb1', '', CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((highlight(UNLIKELY(t1.c0), x'ddb1', '', CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((t0.c2)>=(vt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((t0.c2)>=(vt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((t0.c2)>=(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((((t0.c1) IS TRUE) IN ())) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT ((((t0.c1) IS TRUE) IN ())))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((((((t0.c1) IS TRUE) IN ())) ISNULL)) GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING CAST(x'1163' AS TEXT) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (CAST(x'1163' AS TEXT))) UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((CAST(x'1163' AS TEXT)) ISNULL);
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING CAST(x'1163' AS TEXT) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (CAST(x'1163' AS TEXT))) UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((CAST(x'1163' AS TEXT)) ISNULL);
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT * FROM t1, t0;
SELECT * FROM t1, t0 WHERE (((t1.c0)IS NOT(t0.c1)) COLLATE BINARY) UNION ALL SELECT * FROM t1, t0 WHERE ((NOT (((t1.c0)IS NOT(t0.c1)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM t1, t0 WHERE (((((t1.c0)IS NOT(t0.c1)) COLLATE BINARY) ISNULL));
SELECT * FROM t1, t0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<(((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(NULL)))AND(NULL))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<(((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(NULL)))AND(NULL))))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<(((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(NULL)))AND(NULL))))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT t0.c1 FROM t0, vt0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0, vt0 WHERE (((((vt0.c1) BETWEEN (t0.c1) AND (t0.c0))) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (NULL))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0, vt0 WHERE ((NOT (((((vt0.c1) BETWEEN (t0.c1) AND (t0.c0))) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (NULL))))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0, vt0 WHERE (((((((vt0.c1) BETWEEN (t0.c1) AND (t0.c0))) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (NULL))) ISNULL)) GROUP BY t0.c1;
SELECT t0.c1 FROM t0, vt0 GROUP BY t0.c1;
SELECT t0.c0, t0.c2 FROM t1 FULL OUTER JOIN t0 ON ((((t0.c2 COLLATE BINARY)AND('-626498743')))OR(CASE t0.c1  WHEN t0.c2 THEN NULL WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t1.c0 ELSE t1.c0 END)) GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM t1 FULL OUTER JOIN t0 ON ((((t0.c2 COLLATE BINARY)AND('-626498743')))OR(CASE t0.c1  WHEN t0.c2 THEN NULL WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t1.c0 ELSE t1.c0 END)) GROUP BY t0.c0, t0.c2 HAVING TOTAL(COUNT(t0.c0)) UNION ALL SELECT t0.c0, t0.c2 FROM t1 FULL OUTER JOIN t0 ON ((((t0.c2 COLLATE BINARY)AND('-626498743')))OR(CASE t0.c1  WHEN t0.c2 THEN NULL WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t1.c0 ELSE t1.c0 END)) GROUP BY t0.c0, t0.c2 HAVING (NOT (TOTAL(COUNT(t0.c0)))) UNION ALL SELECT t0.c0, t0.c2 FROM t1 FULL OUTER JOIN t0 ON ((((t0.c2 COLLATE BINARY)AND('-626498743')))OR(CASE t0.c1  WHEN t0.c2 THEN NULL WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t1.c0 ELSE t1.c0 END)) GROUP BY t0.c0, t0.c2 HAVING ((TOTAL(COUNT(t0.c0))) ISNULL);
SELECT ALL vt0.c0, t0.c2 FROM t0, vt0;
SELECT ALL vt0.c0, t0.c2 FROM t0, vt0 WHERE (0X5aafc54) UNION ALL SELECT ALL vt0.c0, t0.c2 FROM t0, vt0 WHERE ((NOT (0X5aafc54))) UNION ALL SELECT ALL vt0.c0, t0.c2 FROM t0, vt0 WHERE (((0X5aafc54) ISNULL));
SELECT ALL vt0.c0, t0.c2 FROM t0, vt0;
SELECT DISTINCT t0.c2, t0.c1 FROM t0;
SELECT DISTINCT t0.c2, t0.c1 FROM t0 WHERE ((~ (t0.c0 COLLATE BINARY))) UNION SELECT DISTINCT t0.c2, t0.c1 FROM t0 WHERE ((NOT ((~ (t0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT t0.c2, t0.c1 FROM t0 WHERE ((((~ (t0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT t0.c2, t0.c1 FROM t0;
SELECT ALL vt0.c1, t0.c1 FROM vt0 NOT INDEXED FULL OUTER JOIN t0 ON vt0.c1 CROSS JOIN t1 ON CAST(NULL AS REAL) GROUP BY vt0.c1, t0.c1;
SELECT ALL vt0.c1, t0.c1 FROM vt0 FULL OUTER JOIN t0 ON vt0.c1 CROSS JOIN t1 ON CAST(NULL AS REAL) WHERE ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), t0.c2 COLLATE BINARY, (NOT (t0.c0)), t0.c0 COLLATE BINARY, ((t0.c0) NOT BETWEEN (t0.c2) AND (0.7467101143871688))))<=((((t0.c1) NOTNULL), DATE(t1.c0, vt0.c1, t0.c0), ((t0.c0) ISNULL), ((t1.c0) IS TRUE), '559648315' COLLATE RTRIM)))) GROUP BY vt0.c1, t0.c1 UNION SELECT ALL vt0.c1, t0.c1 FROM vt0 FULL OUTER JOIN t0 ON vt0.c1 CROSS JOIN t1 ON CAST(NULL AS REAL) WHERE ((NOT ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), t0.c2 COLLATE BINARY, (NOT (t0.c0)), t0.c0 COLLATE BINARY, ((t0.c0) NOT BETWEEN (t0.c2) AND (0.7467101143871688))))<=((((t0.c1) NOTNULL), DATE(t1.c0, vt0.c1, t0.c0), ((t0.c0) ISNULL), ((t1.c0) IS TRUE), '559648315' COLLATE RTRIM)))))) GROUP BY vt0.c1, t0.c1 UNION SELECT vt0.c1, t0.c1 FROM vt0 FULL OUTER JOIN t0 ON vt0.c1 CROSS JOIN t1 ON CAST(NULL AS REAL) WHERE ((((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), t0.c2 COLLATE BINARY, (NOT (t0.c0)), t0.c0 COLLATE BINARY, ((t0.c0) NOT BETWEEN (t0.c2) AND (0.7467101143871688))))<=((((t0.c1) NOTNULL), DATE(t1.c0, vt0.c1, t0.c0), ((t0.c0) ISNULL), ((t1.c0) IS TRUE), '559648315' COLLATE RTRIM)))) ISNULL)) GROUP BY vt0.c1, t0.c1;
SELECT ALL vt0.c1, t0.c1 FROM vt0 NOT INDEXED FULL OUTER JOIN t0 ON vt0.c1 CROSS JOIN t1 ON CAST(NULL AS REAL) GROUP BY vt0.c1, t0.c1;
SELECT ALL vt0.c0 FROM t0, vt0 NATURAL JOIN t1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 NATURAL JOIN t1 GROUP BY vt0.c0 HAVING UPPER(((MIN(t1.c0)) NOT NULL)) UNION ALL SELECT vt0.c0 FROM t0, vt0 NATURAL JOIN t1 GROUP BY vt0.c0 HAVING (NOT (UPPER(((MIN(t1.c0)) NOT NULL)))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 NATURAL JOIN t1 GROUP BY vt0.c0 HAVING ((UPPER(((MIN(t1.c0)) NOT NULL))) ISNULL);
SELECT ALL vt0.c0 FROM t0, vt0 NATURAL JOIN t1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0 NATURAL JOIN t1 GROUP BY vt0.c0 HAVING UPPER(((MIN(t1.c0)) NOT NULL)) UNION ALL SELECT vt0.c0 FROM t0, vt0 NATURAL JOIN t1 GROUP BY vt0.c0 HAVING (NOT (UPPER(((MIN(t1.c0)) NOT NULL)))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 NATURAL JOIN t1 GROUP BY vt0.c0 HAVING ((UPPER(((MIN(t1.c0)) NOT NULL))) ISNULL);
SELECT ALL vt0.c0 FROM t0, vt0 NATURAL JOIN t1 GROUP BY vt0.c0;
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE (t1.c0) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (t1.c0))) UNION ALL SELECT ALL * FROM t1 WHERE (((t1.c0) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0;
SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((CAST(t0.c2 AS NUMERIC)) BETWEEN ((t0.c0 IN (t0.c0))) AND ((t0.c0 IN ())))) UNION SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT (((CAST(t0.c2 AS NUMERIC)) BETWEEN ((t0.c0 IN (t0.c0))) AND ((t0.c0 IN ())))))) UNION SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((((CAST(t0.c2 AS NUMERIC)) BETWEEN ((t0.c0 IN (t0.c0))) AND ((t0.c0 IN ())))) ISNULL));
SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0;
SELECT t0.c0, t0.c2, vt0.c1, vt0.c0 FROM vt0 INNER JOIN t0 ON CASE (+ (t0.c0))  WHEN t0.c2 THEN CAST(vt0.c0 AS NUMERIC) WHEN (~ (t0.c0)) THEN vt0.c0 WHEN (~ (t0.c0)) THEN t0.c1 COLLATE BINARY WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c2)) THEN CAST(t0.c1 AS BLOB) WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN '1755427032' WHEN t0.c0 THEN vt0.c1 ELSE vt0.c1 END ELSE (((((((('')AND(t0.c0)))AND(t0.c1)))OR(x'a188')))OR(t0.c1)) END GROUP BY t0.c0, t0.c2, vt0.c1, vt0.c0;
SELECT t0.c0, t0.c2, vt0.c1, vt0.c0 FROM vt0 INNER JOIN t0 ON CASE (+ (t0.c0))  WHEN t0.c2 THEN CAST(vt0.c0 AS NUMERIC) WHEN (~ (t0.c0)) THEN vt0.c0 WHEN (~ (t0.c0)) THEN t0.c1 COLLATE BINARY WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c2)) THEN CAST(t0.c1 AS BLOB) WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN '1755427032' WHEN t0.c0 THEN vt0.c1 ELSE vt0.c1 END ELSE (((((((('')AND(t0.c0)))AND(t0.c1)))OR(x'a188')))OR(t0.c1)) END WHERE (((((t0.c0)&(NULL))) BETWEEN (CAST(t0.c1 AS BLOB)) AND (((t0.c2)>(x''))))) GROUP BY t0.c0, t0.c2, vt0.c1, vt0.c0 UNION SELECT t0.c0, t0.c2, vt0.c1, vt0.c0 FROM vt0 INNER JOIN t0 ON CASE (+ (t0.c0))  WHEN t0.c2 THEN CAST(vt0.c0 AS NUMERIC) WHEN (~ (t0.c0)) THEN vt0.c0 WHEN (~ (t0.c0)) THEN t0.c1 COLLATE BINARY WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c2)) THEN CAST(t0.c1 AS BLOB) WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN '1755427032' WHEN t0.c0 THEN vt0.c1 ELSE vt0.c1 END ELSE (((((((('')AND(t0.c0)))AND(t0.c1)))OR(x'a188')))OR(t0.c1)) END WHERE ((NOT (((((t0.c0)&(NULL))) BETWEEN (CAST(t0.c1 AS BLOB)) AND (((t0.c2)>(x''))))))) GROUP BY t0.c0, t0.c2, vt0.c1, vt0.c0 UNION SELECT t0.c0, t0.c2, vt0.c1, vt0.c0 FROM vt0 INNER JOIN t0 ON CASE (+ (t0.c0))  WHEN t0.c2 THEN CAST(vt0.c0 AS NUMERIC) WHEN (~ (t0.c0)) THEN vt0.c0 WHEN (~ (t0.c0)) THEN t0.c1 COLLATE BINARY WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c2)) THEN CAST(t0.c1 AS BLOB) WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN '1755427032' WHEN t0.c0 THEN vt0.c1 ELSE vt0.c1 END ELSE (((((((('')AND(t0.c0)))AND(t0.c1)))OR(x'a188')))OR(t0.c1)) END WHERE (((((((t0.c0)&(NULL))) BETWEEN (CAST(t0.c1 AS BLOB)) AND (((t0.c2)>(x''))))) ISNULL)) GROUP BY t0.c0, t0.c2, vt0.c1, vt0.c0;
SELECT t0.c0, t0.c2, vt0.c1, vt0.c0 FROM vt0 INNER JOIN t0 ON CASE (+ (t0.c0))  WHEN t0.c2 THEN CAST(vt0.c0 AS NUMERIC) WHEN (~ (t0.c0)) THEN vt0.c0 WHEN (~ (t0.c0)) THEN t0.c1 COLLATE BINARY WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c2)) THEN CAST(t0.c1 AS BLOB) WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN '1755427032' WHEN t0.c0 THEN vt0.c1 ELSE vt0.c1 END ELSE (((((((('')AND(t0.c0)))AND(t0.c1)))OR(x'a188')))OR(t0.c1)) END GROUP BY t0.c0, t0.c2, vt0.c1, vt0.c0;
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (((t1.c0)) NOT BETWEEN ((((((t1.c0)OR(t0.c1)))AND(TOTAL(COUNT(*)))))) AND ((((((((((AVG(t1.c0))AND(t0.c2)))OR(MAX(t1.c0))))AND(MIN(t1.c0))))AND(0.34835289347096254))))) UNION ALL SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (NOT ((((t1.c0)) NOT BETWEEN ((((((t1.c0)OR(t0.c1)))AND(TOTAL(COUNT(*)))))) AND ((((((((((AVG(t1.c0))AND(t0.c2)))OR(MAX(t1.c0))))AND(MIN(t1.c0))))AND(0.34835289347096254))))))) UNION ALL SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (((((t1.c0)) NOT BETWEEN ((((((t1.c0)OR(t0.c1)))AND(TOTAL(COUNT(*)))))) AND ((((((((((AVG(t1.c0))AND(t0.c2)))OR(MAX(t1.c0))))AND(MIN(t1.c0))))AND(0.34835289347096254)))))) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM t0 CROSS JOIN vt0 ON x'';
SELECT t0.c0, vt0.c0 FROM t0 CROSS JOIN vt0 ON x'' WHERE (vt0.c0) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0 CROSS JOIN vt0 ON x'' WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0 CROSS JOIN vt0 ON x'' WHERE (((vt0.c0) ISNULL));
SELECT ALL t0.c0, vt0.c0 FROM t0 CROSS JOIN vt0 ON x'';
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((load_extension(vt0.c1)) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((NOT (t0.c1))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((load_extension(vt0.c1)) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((NOT (t0.c1))))))) UNION SELECT DISTINCT * FROM t0 NOT INDEXED, vt0 WHERE (((((load_extension(vt0.c1)) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((NOT (t0.c1))))) ISNULL));
SELECT ALL t0.c2, t0.c1 FROM t0, t1 GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM t0, t1 WHERE ((~ ((('T')>>(t0.c2))))) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM t0, t1 WHERE ((NOT ((~ ((('T')>>(t0.c2))))))) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM t0, t1 WHERE ((((~ ((('T')>>(t0.c2))))) ISNULL)) GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM t0, t1 GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c1, t0.c0 FROM t1 NOT INDEXED, t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t1, t0 GROUP BY t0.c1, t0.c0 HAVING AVG(((x'bb56') IS FALSE)) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t1, t0 GROUP BY t0.c1, t0.c0 HAVING (NOT (AVG(((x'bb56') IS FALSE)))) UNION ALL SELECT t0.c1, t0.c0 FROM t1, t0 GROUP BY t0.c1, t0.c0 HAVING ((AVG(((x'bb56') IS FALSE))) ISNULL);
SELECT ALL t0.c1, t0.c0 FROM t1 NOT INDEXED, t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t1, t0 GROUP BY t0.c1, t0.c0 HAVING AVG(((x'bb56') IS FALSE)) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t1, t0 GROUP BY t0.c1, t0.c0 HAVING (NOT (AVG(((x'bb56') IS FALSE)))) UNION ALL SELECT t0.c1, t0.c0 FROM t1, t0 GROUP BY t0.c1, t0.c0 HAVING ((AVG(((x'bb56') IS FALSE))) ISNULL);
SELECT ALL t0.c1, t0.c0 FROM t1 NOT INDEXED, t0 GROUP BY t0.c1, t0.c0;
SELECT * FROM t1, t0 NATURAL JOIN vt0;
SELECT * FROM t1, t0 NATURAL JOIN vt0 WHERE (((((+ ('2093888342')), t0.c2 COLLATE NOCASE, (t0.c1 IN ())))>((((t0.c2)/(vt0.c0)), t0.c2, (vt0.c0 IN ()))))) UNION ALL SELECT ALL * FROM t1, t0 NATURAL JOIN vt0 WHERE ((NOT (((((+ ('2093888342')), t0.c2 COLLATE NOCASE, (t0.c1 IN ())))>((((t0.c2)/(vt0.c0)), t0.c2, (vt0.c0 IN ()))))))) UNION ALL SELECT * FROM t1, t0 NATURAL JOIN vt0 WHERE (((((((+ ('2093888342')), t0.c2 COLLATE NOCASE, (t0.c1 IN ())))>((((t0.c2)/(vt0.c0)), t0.c2, (vt0.c0 IN ()))))) ISNULL));
SELECT * FROM t1, t0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM t0 INDEXED BY i17, vt0;
SELECT t0.c1 FROM t1, vt0, t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t1, vt0, t0 WHERE (t0.c2) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t1, vt0, t0 WHERE ((NOT (t0.c2))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t1, vt0, t0 WHERE (((t0.c2) ISNULL)) GROUP BY t0.c1;
SELECT t0.c1 FROM t1, vt0, t0 GROUP BY t0.c1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING GROUP_CONCAT(CASE WHEN COUNT(COUNT(t1.c0)) THEN AVG(GROUP_CONCAT(AVG(MAX(t1.c0)))) ELSE t1.c0 END) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (GROUP_CONCAT(CASE WHEN COUNT(COUNT(t1.c0)) THEN AVG(GROUP_CONCAT(AVG(MAX(t1.c0)))) ELSE t1.c0 END))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((GROUP_CONCAT(CASE WHEN COUNT(COUNT(t1.c0)) THEN AVG(GROUP_CONCAT(AVG(MAX(t1.c0)))) ELSE t1.c0 END)) ISNULL);
SELECT ALL * FROM vt0, t1 FULL OUTER JOIN t0 ON (CASE WHEN vt0.c0 THEN t0.c1 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END IN ());
SELECT * FROM vt0, t1 FULL OUTER JOIN t0 ON (CASE WHEN vt0.c0 THEN t0.c1 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END IN ()) WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t1.c0)) THEN (t0.c2 IN (t0.c2, NULL)) ELSE ((vt0.c1)-(vt0.c1)) END) UNION ALL SELECT ALL * FROM vt0, t1 FULL OUTER JOIN t0 ON (CASE WHEN vt0.c0 THEN t0.c1 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END IN ()) WHERE ((NOT (CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t1.c0)) THEN (t0.c2 IN (t0.c2, NULL)) ELSE ((vt0.c1)-(vt0.c1)) END))) UNION ALL SELECT * FROM vt0, t1 FULL OUTER JOIN t0 ON (CASE WHEN vt0.c0 THEN t0.c1 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END IN ()) WHERE (((CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t1.c0)) THEN (t0.c2 IN (t0.c2, NULL)) ELSE ((vt0.c1)-(vt0.c1)) END) ISNULL));
SELECT ALL * FROM vt0, t1 FULL OUTER JOIN t0 ON (CASE WHEN vt0.c0 THEN t0.c1 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END IN ());
SELECT DISTINCT t0.c0 FROM t0, t1;
SELECT DISTINCT t0.c0 FROM t0, t1 WHERE ((NOT (((t0.c2) IS TRUE)))) UNION SELECT DISTINCT t0.c0 FROM t0, t1 WHERE ((NOT ((NOT (((t0.c2) IS TRUE)))))) UNION SELECT DISTINCT t0.c0 FROM t0, t1 WHERE ((((NOT (((t0.c2) IS TRUE)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, t1;
SELECT ALL t0.c1 FROM t0, t1 FULL OUTER JOIN vt0 ON (((((((((t0.c1)OR(t0.c0)))AND(vt0.c0)))OR(t1.c0)))OR(t1.c0)) IN ()) GROUP BY t0.c1;
SELECT t0.c1 FROM t0, t1 FULL OUTER JOIN vt0 ON (((((((((t0.c1)OR(t0.c0)))AND(vt0.c0)))OR(t1.c0)))OR(t1.c0)) IN ()) WHERE (CASE WHEN (((vt0.c1))!=((vt0.c0))) THEN (+ (t0.c0)) END) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0, t1 FULL OUTER JOIN vt0 ON (((((((((t0.c1)OR(t0.c0)))AND(vt0.c0)))OR(t1.c0)))OR(t1.c0)) IN ()) WHERE ((NOT (CASE WHEN (((vt0.c1))<>((vt0.c0))) THEN (+ (t0.c0)) END))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0, t1 FULL OUTER JOIN vt0 ON (((((((((t0.c1)OR(t0.c0)))AND(vt0.c0)))OR(t1.c0)))OR(t1.c0)) IN ()) WHERE (((CASE WHEN (((vt0.c1))<>((vt0.c0))) THEN (+ (t0.c0)) END) ISNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0, t1 FULL OUTER JOIN vt0 ON (((((((((t0.c1)OR(t0.c0)))AND(vt0.c0)))OR(t1.c0)))OR(t1.c0)) IN ()) GROUP BY t0.c1;
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (((+ (t0.c0))) BETWEEN (COUNT(*)) AND (HEX(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (NOT ((((+ (t0.c0))) BETWEEN (COUNT(*)) AND (HEX(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t1, t0 NOT INDEXED GROUP BY t0.c0 HAVING (((((+ (t0.c0))) BETWEEN (COUNT(*)) AND (HEX(t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (((+ (t0.c0))) BETWEEN (COUNT(*)) AND (HEX(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (NOT ((((+ (t0.c0))) BETWEEN (COUNT(*)) AND (HEX(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t1, t0 NOT INDEXED GROUP BY t0.c0 HAVING (((((+ (t0.c0))) BETWEEN (COUNT(*)) AND (HEX(t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT ALL * FROM t1, t0, vt0;
SELECT * FROM t1, t0, vt0 WHERE (NULL COLLATE RTRIM) UNION ALL SELECT ALL * FROM t1, t0, vt0 WHERE ((NOT (NULL COLLATE RTRIM))) UNION ALL SELECT ALL * FROM t1, t0, vt0 WHERE (((NULL COLLATE RTRIM) ISNULL));
SELECT ALL * FROM t1, t0, vt0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (json_type(t1.c0) COLLATE BINARY) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (json_type(t1.c0) COLLATE BINARY))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((json_type(t1.c0) COLLATE BINARY) ISNULL));
SELECT t1.c0 FROM t0, vt0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t0, vt0, t1 WHERE (CAST(((('')) NOT BETWEEN ((t0.c0)) AND ((t0.c1))) AS NUMERIC)) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t0, vt0, t1 WHERE ((NOT (CAST(((('')) NOT BETWEEN ((t0.c0)) AND ((t0.c1))) AS NUMERIC)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t0, vt0, t1 WHERE (((CAST(((('')) NOT BETWEEN ((t0.c0)) AND ((t0.c1))) AS NUMERIC)) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t0, vt0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 NOT INDEXED GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING CAST(t1.c0 AS INTEGER) COLLATE BINARY UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CAST(t1.c0 AS INTEGER) COLLATE BINARY)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CAST(t1.c0 AS INTEGER) COLLATE BINARY) ISNULL);
SELECT t1.c0 FROM t1 NOT INDEXED GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING CAST(t1.c0 AS INTEGER) COLLATE BINARY UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CAST(t1.c0 AS INTEGER) COLLATE BINARY)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CAST(t1.c0 AS INTEGER) COLLATE BINARY) ISNULL);
SELECT t1.c0 FROM t1 NOT INDEXED GROUP BY t1.c0;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0, vt0;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0, vt0 WHERE ((((t0.c1 IN ()))<<(t0.c1 COLLATE RTRIM))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0, vt0 WHERE ((NOT ((((t0.c1 IN ()))<<(t0.c1 COLLATE RTRIM))))) UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM t0, vt0 WHERE ((((((t0.c1 IN ()))<<(t0.c1 COLLATE RTRIM))) ISNULL));
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c2 END)<=(CAST(t0.c2 AS NUMERIC)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((CASE WHEN t0.c0 THEN t0.c2 END)<=(CAST(t0.c2 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c2 END)<=(CAST(t0.c2 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE ('-40790267') GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT ('-40790267'))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((('-40790267') ISNULL)) GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c2, t0.c0, t1.c0;
SELECT ALL t0.c2, t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c2, t0.c0, t1.c0 HAVING SUM('') UNION ALL SELECT t0.c2, t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c2, t0.c0, t1.c0 HAVING (NOT (SUM(''))) UNION ALL SELECT ALL t0.c2, t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c2, t0.c0, t1.c0 HAVING ((SUM('')) ISNULL);
SELECT t0.c2, t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c2, t0.c0, t1.c0;
SELECT ALL t0.c2, t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c2, t0.c0, t1.c0 HAVING SUM('') UNION ALL SELECT t0.c2, t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c2, t0.c0, t1.c0 HAVING (NOT (SUM(''))) UNION ALL SELECT ALL t0.c2, t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c2, t0.c0, t1.c0 HAVING ((SUM('')) ISNULL);
SELECT t0.c2, t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c2, t0.c0, t1.c0;
SELECT ALL * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (((CASE t0.c0  WHEN vt0.c0 THEN '-1075306300' WHEN t0.c2 THEN vt0.c1 WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END)||(CASE t0.c0  WHEN t0.c0 THEN vt0.c1 END))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (((CASE t0.c0  WHEN vt0.c0 THEN '-1075306300' WHEN t0.c2 THEN vt0.c1 WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END)||(CASE t0.c0  WHEN t0.c0 THEN vt0.c1 END))))) UNION ALL SELECT * FROM vt0, t0 WHERE (((((CASE t0.c0  WHEN vt0.c0 THEN '-1075306300' WHEN t0.c2 THEN vt0.c1 WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END)||(CASE t0.c0  WHEN t0.c0 THEN vt0.c1 END))) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT t0.c2, t0.c0, t1.c0, t0.c1 FROM t0 CROSS JOIN t1 ON (NOT (((NULL) BETWEEN (t1.c0) AND (t1.c0))));
SELECT DISTINCT t0.c2, t0.c0, t1.c0, t0.c1 FROM t0 CROSS JOIN t1 ON (NOT (((NULL) BETWEEN (t1.c0) AND (t1.c0)))) WHERE (NULL) UNION SELECT DISTINCT t0.c2, t0.c0, t1.c0, t0.c1 FROM t0 CROSS JOIN t1 ON (NOT (((NULL) BETWEEN (t1.c0) AND (t1.c0)))) WHERE ((NOT (NULL))) UNION SELECT DISTINCT t0.c2, t0.c0, t1.c0, t0.c1 FROM t0 CROSS JOIN t1 ON (NOT (((NULL) BETWEEN (t1.c0) AND (t1.c0)))) WHERE (((NULL) ISNULL));
SELECT DISTINCT t0.c2, t0.c0, t1.c0, t0.c1 FROM t0 CROSS JOIN t1 ON (NOT (((NULL) BETWEEN (t1.c0) AND (t1.c0))));
SELECT t1.c0, vt0.c0, t0.c1, vt0.c1 FROM t1 RIGHT OUTER JOIN t0 ON CASE WHEN ((t1.c0)LIKE(vt0.c0)) THEN ((vt0.c1) BETWEEN (t1.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN ((((t0.c2)AND(x'')))OR(vt0.c1)) WHEN ((((((((t0.c1)OR(t0.c2)))OR(t0.c1)))OR(t0.c1)))AND(vt0.c0)) THEN t0.c0 COLLATE NOCASE END LEFT OUTER JOIN vt0 ON 0.4797385326026704 GROUP BY t1.c0, vt0.c0, t0.c1, vt0.c1;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING GROUP_CONCAT(CASE MAX(t0.c0)  WHEN SUM('430623077') THEN AVG(SUM(AVG(SUM(t0.c1)))) ELSE t0.c2 END) UNION ALL SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (NOT (GROUP_CONCAT(CASE MAX(t0.c0)  WHEN SUM('430623077') THEN AVG(SUM(AVG(SUM(t0.c1)))) ELSE t0.c2 END))) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING ((GROUP_CONCAT(CASE MAX(t0.c0)  WHEN SUM('430623077') THEN AVG(SUM(AVG(SUM(t0.c1)))) ELSE t0.c2 END)) ISNULL);
SELECT ALL * FROM t1, vt0;
SELECT * FROM t1, vt0 WHERE ((NOT (t1.c0))) UNION ALL SELECT ALL * FROM t1, vt0 WHERE ((NOT ((NOT (t1.c0))))) UNION ALL SELECT ALL * FROM t1, vt0 WHERE ((((NOT (t1.c0))) ISNULL));
SELECT ALL * FROM t1, vt0;
SELECT DISTINCT * FROM t1, t0 CROSS JOIN vt0 ON ((((((((CAST(t0.c1 AS INTEGER))AND(CASE x''  WHEN t0.c1 THEN vt0.c1 END)))OR(vt0.c0)))OR(t1.c0)))OR((vt0.c0 IN (vt0.c1))));
SELECT DISTINCT * FROM t1, t0 CROSS JOIN vt0 ON ((((((((CAST(t0.c1 AS INTEGER))AND(CASE x''  WHEN t0.c1 THEN vt0.c1 END)))OR(vt0.c0)))OR(t1.c0)))OR((vt0.c0 IN (vt0.c1)))) WHERE (t0.c0) UNION SELECT DISTINCT * FROM t1, t0 CROSS JOIN vt0 ON ((((((((CAST(t0.c1 AS INTEGER))AND(CASE x''  WHEN t0.c1 THEN vt0.c1 END)))OR(vt0.c0)))OR(t1.c0)))OR((vt0.c0 IN (vt0.c1)))) WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t1, t0 CROSS JOIN vt0 ON ((((((((CAST(t0.c1 AS INTEGER))AND(CASE x''  WHEN t0.c1 THEN vt0.c1 END)))OR(vt0.c0)))OR(t1.c0)))OR((vt0.c0 IN (vt0.c1)))) WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t1, t0 CROSS JOIN vt0 ON ((((((((CAST(t0.c1 AS INTEGER))AND(CASE x''  WHEN t0.c1 THEN vt0.c1 END)))OR(vt0.c0)))OR(t1.c0)))OR((vt0.c0 IN (vt0.c1))));
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))) NOT BETWEEN ((('1369881514') BETWEEN (vt0.c0) AND ('''y'))) AND (vt0.c0 COLLATE RTRIM))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))) NOT BETWEEN ((('1369881514') BETWEEN (vt0.c0) AND ('''y'))) AND (vt0.c0 COLLATE RTRIM))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))) NOT BETWEEN ((('1369881514') BETWEEN (vt0.c0) AND ('''y'))) AND (vt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT t0.c1, t0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c2, vt0.c0;
SELECT ALL t0.c1, t0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c2, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c1, t0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c2, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c1, t0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c2, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c1, t0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c2, vt0.c0;
SELECT ALL t0.c1, t0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c2, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c1, t0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c2, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c1, t0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c2, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c1, t0.c2, vt0.c0 FROM t0, vt0 GROUP BY t0.c1, t0.c2, vt0.c0;
SELECT t0.c1, t0.c2, t0.c0, vt0.c1, vt0.c0, t1.c0 FROM t0, vt0, t1;
SELECT ALL t0.c1, t0.c2, t0.c0, vt0.c1, vt0.c0, t1.c0 FROM t0, vt0, t1 WHERE (LOWER(((((vt0.c0)OR(t0.c1)))AND(vt0.c0)))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0, vt0.c1, vt0.c0, t1.c0 FROM t0, vt0, t1 WHERE ((NOT (LOWER(((((vt0.c0)OR(t0.c1)))AND(vt0.c0)))))) UNION ALL SELECT t0.c1, t0.c2, t0.c0, vt0.c1, vt0.c0, t1.c0 FROM t0, vt0, t1 WHERE (((LOWER(((((vt0.c0)OR(t0.c1)))AND(vt0.c0)))) ISNULL));
SELECT t0.c1, t0.c2, t0.c0, vt0.c1, vt0.c0, t1.c0 FROM t0, vt0, t1;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE ((((t1.c0 IN ()))>(CASE WHEN t1.c0 THEN t1.c0 END))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT ((((t1.c0 IN ()))>(CASE WHEN t1.c0 THEN t1.c0 END))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((((((t1.c0 IN ()))>(CASE WHEN t1.c0 THEN t1.c0 END))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL vt0.c1 FROM vt0, t0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, t0 WHERE (CAST(((t0.c2) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, t0 WHERE ((NOT (CAST(((t0.c2) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, t0 WHERE (((CAST(((t0.c2) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, t0 GROUP BY vt0.c1;
SELECT t0.c0, vt0.c0, vt0.c1 FROM vt0, t0, t1 GROUP BY t0.c0, vt0.c0, vt0.c1;
SELECT ALL t0.c0, vt0.c0, vt0.c1 FROM vt0, t0, t1 GROUP BY t0.c0, vt0.c0, vt0.c1 HAVING MAX(t0.c0) COLLATE NOCASE UNION ALL SELECT t0.c0, vt0.c0, vt0.c1 FROM vt0, t0, t1 GROUP BY t0.c0, vt0.c0, vt0.c1 HAVING (NOT (MAX(t0.c0) COLLATE NOCASE)) UNION ALL SELECT t0.c0, vt0.c0, vt0.c1 FROM vt0, t0, t1 GROUP BY t0.c0, vt0.c0, vt0.c1 HAVING ((MAX(t0.c0) COLLATE NOCASE) ISNULL);
SELECT t0.c0, vt0.c0, vt0.c1 FROM vt0, t0, t1 GROUP BY t0.c0, vt0.c0, vt0.c1;
SELECT ALL t0.c0, vt0.c0, vt0.c1 FROM vt0, t0, t1 GROUP BY t0.c0, vt0.c0, vt0.c1 HAVING MAX(t0.c0) COLLATE NOCASE UNION ALL SELECT t0.c0, vt0.c0, vt0.c1 FROM vt0, t0, t1 GROUP BY t0.c0, vt0.c0, vt0.c1 HAVING (NOT (MAX(t0.c0) COLLATE NOCASE)) UNION ALL SELECT t0.c0, vt0.c0, vt0.c1 FROM vt0, t0, t1 GROUP BY t0.c0, vt0.c0, vt0.c1 HAVING ((MAX(t0.c0) COLLATE NOCASE) ISNULL);
SELECT t0.c0, vt0.c0, vt0.c1 FROM vt0, t0, t1 GROUP BY t0.c0, vt0.c0, vt0.c1;
SELECT ALL * FROM t1, vt0 NATURAL JOIN t0;
SELECT * FROM t1, vt0 NATURAL JOIN t0 WHERE ((CAST(t0.c2 AS BLOB) IN (((t0.c0) NOT BETWEEN (t0.c1) AND (vt0.c0))))) UNION ALL SELECT * FROM t1, vt0 NATURAL JOIN t0 WHERE ((NOT ((CAST(t0.c2 AS BLOB) IN (((t0.c0) NOT BETWEEN (t0.c1) AND (vt0.c0))))))) UNION ALL SELECT * FROM t1, vt0 NATURAL JOIN t0 WHERE ((((CAST(t0.c2 AS BLOB) IN (((t0.c0) NOT BETWEEN (t0.c1) AND (vt0.c0))))) ISNULL));
SELECT ALL * FROM t1, vt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (json_valid('%w')) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (json_valid('%w')))) UNION SELECT DISTINCT * FROM t0 WHERE (((json_valid('%w')) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0, t0.c1, t0.c2 FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0) NOT NULL))/(CAST(t0.c0 AS REAL))) GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c0, t0.c1, t0.c2 FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0) NOT NULL))/(CAST(t0.c0 AS REAL))) WHERE (CASE WHEN vt0.c1 COLLATE BINARY THEN (~ (vt0.c0)) END) GROUP BY t0.c0, t0.c1, t0.c2 UNION SELECT ALL t0.c0, t0.c1, t0.c2 FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0) NOT NULL))/(CAST(t0.c0 AS REAL))) WHERE ((NOT (CASE WHEN vt0.c1 COLLATE BINARY THEN (~ (vt0.c0)) END))) GROUP BY t0.c0, t0.c1, t0.c2 UNION SELECT ALL t0.c0, t0.c1, t0.c2 FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0) NOT NULL))/(CAST(t0.c0 AS REAL))) WHERE (((CASE WHEN vt0.c1 COLLATE BINARY THEN (~ (vt0.c0)) END) ISNULL)) GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c0, t0.c1, t0.c2 FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c0) NOT NULL))/(CAST(t0.c0 AS REAL))) GROUP BY t0.c0, t0.c1, t0.c2;
SELECT vt0.c0, t0.c2, t0.c1, vt0.c1, t0.c0 FROM t0 FULL OUTER JOIN vt0 ON NULL GROUP BY vt0.c0, t0.c2, t0.c1, vt0.c1, t0.c0;
SELECT ALL vt0.c0, t0.c2, t0.c1, vt0.c1, t0.c0 FROM t0 FULL OUTER JOIN vt0 ON NULL GROUP BY vt0.c0, t0.c2, t0.c1, vt0.c1, t0.c0 HAVING SUM(((COUNT(*)) NOT BETWEEN (t0.c2) AND (MAX(x'')))) UNION ALL SELECT vt0.c0, t0.c2, t0.c1, vt0.c1, t0.c0 FROM t0 FULL OUTER JOIN vt0 ON NULL GROUP BY vt0.c0, t0.c2, t0.c1, vt0.c1, t0.c0 HAVING (NOT (SUM(((COUNT(*)) NOT BETWEEN (t0.c2) AND (MAX(x'')))))) UNION ALL SELECT ALL vt0.c0, t0.c2, t0.c1, vt0.c1, t0.c0 FROM t0 FULL OUTER JOIN vt0 ON NULL GROUP BY vt0.c0, t0.c2, t0.c1, vt0.c1, t0.c0 HAVING ((SUM(((COUNT(*)) NOT BETWEEN (t0.c2) AND (MAX(x''))))) ISNULL);
SELECT ALL t0.c1, t0.c0 FROM t0;
SELECT t0.c1, t0.c0 FROM t0 WHERE ((+ ((((t0.c0, t0.c1, x'c2de')) BETWEEN ((t0.c1, t0.c0, t0.c1)) AND ((t0.c0, t0.c1, t0.c0)))))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 WHERE ((NOT ((+ ((((t0.c0, t0.c1, x'c2de')) BETWEEN ((t0.c1, t0.c0, t0.c1)) AND ((t0.c0, t0.c1, t0.c0)))))))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 WHERE ((((+ ((((t0.c0, t0.c1, x'c2de')) BETWEEN ((t0.c1, t0.c0, t0.c1)) AND ((t0.c0, t0.c1, t0.c0)))))) ISNULL));
SELECT ALL t0.c1, t0.c0 FROM t0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE ('ᵙH') UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT ('ᵙH'))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((('ᵙH') ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL t0.c0, t1.c0, t0.c2 FROM t0, t1 GROUP BY t0.c0, t1.c0, t0.c2;
SELECT t0.c0, t1.c0, t0.c2 FROM t0 NOT INDEXED, t1 WHERE (CAST((t1.c0 IN ()) AS TEXT)) GROUP BY t0.c0, t1.c0, t0.c2 UNION SELECT ALL t0.c0, t1.c0, t0.c2 FROM t0, t1 WHERE ((NOT (CAST((t1.c0 IN ()) AS TEXT)))) GROUP BY t0.c0, t1.c0, t0.c2 UNION SELECT t0.c0, t1.c0, t0.c2 FROM t0, t1 WHERE (((CAST((t1.c0 IN ()) AS TEXT)) ISNULL)) GROUP BY t0.c0, t1.c0, t0.c2;
SELECT ALL t0.c0, t1.c0, t0.c2 FROM t0, t1 GROUP BY t0.c0, t1.c0, t0.c2;
SELECT ALL t0.c2, t0.c1, vt0.c1 FROM t0, vt0 LEFT OUTER JOIN t1 ON vt0.c1 GROUP BY t0.c2, t0.c1, vt0.c1;
SELECT ALL t0.c2, t0.c1, vt0.c1 FROM t0, vt0 LEFT OUTER JOIN t1 ON vt0.c1 GROUP BY t0.c2, t0.c1, vt0.c1 HAVING TOTAL(GROUP_CONCAT(COUNT(COUNT(*)))) UNION ALL SELECT ALL t0.c2, t0.c1, vt0.c1 FROM t0, vt0 LEFT OUTER JOIN t1 ON vt0.c1 GROUP BY t0.c2, t0.c1, vt0.c1 HAVING (NOT (TOTAL(GROUP_CONCAT(COUNT(COUNT(*)))))) UNION ALL SELECT t0.c2, t0.c1, vt0.c1 FROM t0, vt0 LEFT OUTER JOIN t1 ON vt0.c1 GROUP BY t0.c2, t0.c1, vt0.c1 HAVING ((TOTAL(GROUP_CONCAT(COUNT(COUNT(*))))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)!=(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM)<>(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)<>(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END))) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT t1.c0 FROM t1, t0;
SELECT DISTINCT t1.c0 FROM t1, t0 WHERE (((t0.c2)AND(x'3a16')) COLLATE NOCASE) UNION SELECT DISTINCT t1.c0 FROM t1, t0 WHERE ((NOT (((t0.c2)AND(x'3a16')) COLLATE NOCASE))) UNION SELECT DISTINCT t1.c0 FROM t1, t0 WHERE (((((t0.c2)AND(x'3a16')) COLLATE NOCASE) ISNULL));
SELECT DISTINCT t1.c0 FROM t1, t0;
SELECT ALL t1.c0, vt0.c0, t0.c1, t0.c2, vt0.c1, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON ((t1.c0 COLLATE NOCASE)&(t0.c2)) RIGHT OUTER JOIN t1 ON ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((((((((vt0.c0)OR(t0.c2)))AND(t1.c0)))AND(vt0.c1)))OR(vt0.c0))) AND (CAST(vt0.c0 AS TEXT))) GROUP BY t1.c0, vt0.c0, t0.c1, t0.c2, vt0.c1, t0.c0;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING TOTAL(CAST(t0.c2 AS REAL)) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (NOT (TOTAL(CAST(t0.c2 AS REAL)))) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING ((TOTAL(CAST(t0.c2 AS REAL))) ISNULL);
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING TOTAL(CAST(t0.c2 AS REAL)) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (NOT (TOTAL(CAST(t0.c2 AS REAL)))) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING ((TOTAL(CAST(t0.c2 AS REAL))) ISNULL);
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE (NULL) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT (NULL))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((NULL) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0;
SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((((t0.c1)<<(t0.c1))) ISNULL)) UNION SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT (((((t0.c1)<<(t0.c1))) ISNULL)))) UNION SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((((((t0.c1)<<(t0.c1))) ISNULL)) ISNULL));
SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0;
SELECT ALL t0.c0 FROM t1, t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, t0, vt0 WHERE (TYPEOF(((t0.c1)||(t0.c0)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t1, t0, vt0 WHERE ((NOT (TYPEOF(((t0.c1)||(t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t1, t0, vt0 WHERE (((TYPEOF(((t0.c1)||(t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, t0, vt0 GROUP BY t0.c0;
SELECT ALL vt0.c0, t1.c0, vt0.c1 FROM vt0 CROSS JOIN t1 ON (((vt0.c1 IN ()))&(INSTR(vt0.c1, t1.c0))) GROUP BY vt0.c0, t1.c0, vt0.c1;
SELECT vt0.c0, t1.c0, vt0.c1 FROM vt0 CROSS JOIN t1 ON (((vt0.c1 IN ()))&(INSTR(vt0.c1, t1.c0))) GROUP BY vt0.c0, t1.c0, vt0.c1 HAVING (((GROUP_CONCAT(MIN(AVG(SUM(MIN(vt0.c0)))))))>=((CAST(vt0.c0 AS INTEGER)))) UNION ALL SELECT ALL vt0.c0, t1.c0, vt0.c1 FROM vt0 CROSS JOIN t1 ON (((vt0.c1 IN ()))&(INSTR(vt0.c1, t1.c0))) GROUP BY vt0.c0, t1.c0, vt0.c1 HAVING (NOT ((((GROUP_CONCAT(MIN(AVG(SUM(MIN(vt0.c0)))))))>=((CAST(vt0.c0 AS INTEGER)))))) UNION ALL SELECT vt0.c0, t1.c0, vt0.c1 FROM vt0 CROSS JOIN t1 ON (((vt0.c1 IN ()))&(INSTR(vt0.c1, t1.c0))) GROUP BY vt0.c0, t1.c0, vt0.c1 HAVING (((((GROUP_CONCAT(MIN(AVG(SUM(MIN(vt0.c0)))))))>=((CAST(vt0.c0 AS INTEGER))))) ISNULL);
SELECT * FROM t1;
SELECT * FROM t1 WHERE (NULL) UNION ALL SELECT * FROM t1 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM t1 WHERE (((NULL) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (('' IN ())) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (('' IN ())))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((('' IN ())) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c0;
SELECT ALL vt0.c1, t0.c0 FROM t0, vt0 WHERE ((((t0.c2, t0.c0, t0.c1)) NOT BETWEEN ((((t0.c0)OR('T49Zv嗝N兦')), CAST(vt0.c1 AS BLOB), CAST(vt0.c1 AS BLOB))) AND (((t0.c0 IN ()), (- (vt0.c1)), (('1335791771')AND(t0.c1)))))) GROUP BY vt0.c1, t0.c0 UNION SELECT vt0.c1, t0.c0 FROM t0, vt0 WHERE ((NOT ((((t0.c2, t0.c0, t0.c1)) NOT BETWEEN ((((t0.c0)OR('T49Zv嗝N兦')), CAST(vt0.c1 AS BLOB), CAST(vt0.c1 AS BLOB))) AND (((t0.c0 IN ()), (- (vt0.c1)), (('1335791771')AND(t0.c1)))))))) GROUP BY vt0.c1, t0.c0 UNION SELECT ALL vt0.c1, t0.c0 FROM t0, vt0 WHERE ((((((t0.c2, t0.c0, t0.c1)) NOT BETWEEN ((((t0.c0)OR('T49Zv嗝N兦')), CAST(vt0.c1 AS BLOB), CAST(vt0.c1 AS BLOB))) AND (((t0.c0 IN ()), (- (vt0.c1)), (('1335791771')AND(t0.c1)))))) ISNULL)) GROUP BY vt0.c1, t0.c0;
SELECT ALL vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c0;
SELECT ALL t1.c0, t0.c2 FROM t1, t0 GROUP BY t1.c0, t0.c2;
SELECT ALL t1.c0, t0.c2 FROM t1, t0 GROUP BY t1.c0, t0.c2 HAVING CASE WHEN t0.c0 THEN AVG(t1.c0) ELSE AVG(t0.c1) END UNION ALL SELECT t1.c0, t0.c2 FROM t1, t0 GROUP BY t1.c0, t0.c2 HAVING (NOT (CASE WHEN t0.c0 THEN AVG(t1.c0) ELSE AVG(t0.c1) END)) UNION ALL SELECT ALL t1.c0, t0.c2 FROM t1, t0 GROUP BY t1.c0, t0.c2 HAVING ((CASE WHEN t0.c0 THEN AVG(t1.c0) ELSE AVG(t0.c1) END) ISNULL);
SELECT ALL t1.c0, t0.c2 FROM t1, t0 GROUP BY t1.c0, t0.c2;
SELECT ALL t1.c0, t0.c2 FROM t1, t0 GROUP BY t1.c0, t0.c2 HAVING CASE WHEN t0.c0 THEN AVG(t1.c0) ELSE AVG(t0.c1) END UNION ALL SELECT t1.c0, t0.c2 FROM t1, t0 GROUP BY t1.c0, t0.c2 HAVING (NOT (CASE WHEN t0.c0 THEN AVG(t1.c0) ELSE AVG(t0.c1) END)) UNION ALL SELECT ALL t1.c0, t0.c2 FROM t1, t0 GROUP BY t1.c0, t0.c2 HAVING ((CASE WHEN t0.c0 THEN AVG(t1.c0) ELSE AVG(t0.c1) END) ISNULL);
SELECT ALL t1.c0, t0.c2 FROM t1, t0 GROUP BY t1.c0, t0.c2;
SELECT ALL * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (((NULL)OR((vt0.c1 IN (vt0.c1, vt0.c1))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (((NULL)OR((vt0.c1 IN (vt0.c1, vt0.c1))))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((((NULL)OR((vt0.c1 IN (vt0.c1, vt0.c1))))) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT t1.c0, vt0.c1, t0.c1, t0.c0, t0.c2 FROM vt0, t0, t1;
SELECT DISTINCT t1.c0, vt0.c1, t0.c1, t0.c0, t0.c2 FROM vt0, t0, t1 WHERE (t0.c0) UNION SELECT DISTINCT t1.c0, vt0.c1, t0.c1, t0.c0, t0.c2 FROM vt0, t0, t1 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t1.c0, vt0.c1, t0.c1, t0.c0, t0.c2 FROM vt0, t0, t1 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t1.c0, vt0.c1, t0.c1, t0.c0, t0.c2 FROM vt0, t0, t1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c1)AND((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND(((vt0.c0)*(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c1)AND((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND(((vt0.c0)*(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c1)AND((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND(((vt0.c0)*(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, t0.c1, vt0.c1, t1.c0, t0.c0, t0.c2 FROM t1, t0, vt0 GROUP BY vt0.c0, t0.c1, vt0.c1, t1.c0, t0.c0, t0.c2;
SELECT vt0.c0, t0.c1, vt0.c1, t1.c0, t0.c0, t0.c2 FROM t1, t0, vt0 GROUP BY vt0.c0, t0.c1, vt0.c1, t1.c0, t0.c0, t0.c2 HAVING CASE AVG(vt0.c1)  WHEN MIN('') THEN MAX(t1.c0) WHEN TOTAL(COUNT(*)) THEN TOTAL(TOTAL(SUM(COUNT(*)))) WHEN ((TOTAL(TOTAL(t0.c0))) ISNULL) THEN TOTAL(MAX(NULL)) WHEN AVG(MAX(t0.c1)) THEN COUNT(*) WHEN json_type(t0.c1) THEN AVG(t0.c0) ELSE (((GROUP_CONCAT(t0.c0)))>((SUM(TOTAL(t0.c0))))) END UNION ALL SELECT vt0.c0, t0.c1, vt0.c1, t1.c0, t0.c0, t0.c2 FROM t1, t0, vt0 GROUP BY vt0.c0, t0.c1, vt0.c1, t1.c0, t0.c0, t0.c2 HAVING (NOT (CASE AVG(vt0.c1)  WHEN MIN('') THEN MAX(t1.c0) WHEN TOTAL(COUNT(*)) THEN TOTAL(TOTAL(SUM(COUNT(*)))) WHEN ((TOTAL(TOTAL(t0.c0))) ISNULL) THEN TOTAL(MAX(NULL)) WHEN AVG(MAX(t0.c1)) THEN COUNT(*) WHEN json_type(t0.c1) THEN AVG(t0.c0) ELSE (((GROUP_CONCAT(t0.c0)))>((SUM(TOTAL(t0.c0))))) END)) UNION ALL SELECT vt0.c0, t0.c1, vt0.c1, t1.c0, t0.c0, t0.c2 FROM t1, t0, vt0 GROUP BY vt0.c0, t0.c1, vt0.c1, t1.c0, t0.c0, t0.c2 HAVING ((CASE AVG(vt0.c1)  WHEN MIN('') THEN MAX(t1.c0) WHEN TOTAL(COUNT(*)) THEN TOTAL(TOTAL(SUM(COUNT(*)))) WHEN ((TOTAL(TOTAL(t0.c0))) ISNULL) THEN TOTAL(MAX(NULL)) WHEN AVG(MAX(t0.c1)) THEN COUNT(*) WHEN json_type(t0.c1) THEN AVG(t0.c0) ELSE (((GROUP_CONCAT(t0.c0)))>((SUM(TOTAL(t0.c0))))) END) ISNULL);
SELECT ALL * FROM t0, t1;
SELECT ALL * FROM t0, t1 WHERE ('-454919513') UNION ALL SELECT * FROM t0, t1 WHERE ((NOT ('-454919513'))) UNION ALL SELECT ALL * FROM t0, t1 WHERE ((('-454919513') ISNULL));
SELECT ALL * FROM t0, t1;
SELECT DISTINCT t1.c0, vt0.c1 FROM vt0 FULL OUTER JOIN t1 ON CASE WHEN ((vt0.c1) NOTNULL) THEN CAST(vt0.c1 AS BLOB) END;
SELECT DISTINCT t1.c0, vt0.c1 FROM vt0 FULL OUTER JOIN t1 ON CASE WHEN ((vt0.c1) NOTNULL) THEN CAST(vt0.c1 AS BLOB) END WHERE (rtreenode(((((t1.c0)AND(t1.c0)))OR(vt0.c1)), ((vt0.c1)<(vt0.c1)))) UNION SELECT DISTINCT t1.c0, vt0.c1 FROM vt0 FULL OUTER JOIN t1 ON CASE WHEN ((vt0.c1) NOTNULL) THEN CAST(vt0.c1 AS BLOB) END WHERE ((NOT (rtreenode(((((t1.c0)AND(t1.c0)))OR(vt0.c1)), ((vt0.c1)<(vt0.c1)))))) UNION SELECT DISTINCT t1.c0, vt0.c1 FROM vt0 FULL OUTER JOIN t1 ON CASE WHEN ((vt0.c1) NOTNULL) THEN CAST(vt0.c1 AS BLOB) END WHERE (((rtreenode(((((t1.c0)AND(t1.c0)))OR(vt0.c1)), ((vt0.c1)<(vt0.c1)))) ISNULL));
SELECT DISTINCT t1.c0, vt0.c1 FROM vt0 FULL OUTER JOIN t1 ON CASE WHEN ((vt0.c1) NOTNULL) THEN CAST(vt0.c1 AS BLOB) END;
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0 WHERE ((+ (t1.c0)) COLLATE RTRIM) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t1, t0 WHERE ((NOT ((+ (t1.c0)) COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t1, t0 WHERE ((((+ (t1.c0)) COLLATE RTRIM) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT t0.c1 FROM vt0 RIGHT OUTER JOIN t1 ON ((t0.c0) ISNULL) RIGHT OUTER JOIN t0 ON (NOT (((t0.c0)-(t1.c0)))) GROUP BY t0.c1;
SELECT ALL vt0.c1 FROM vt0, t1, t0;
SELECT vt0.c1 FROM vt0, t1, t0 WHERE (t1.c0) UNION ALL SELECT vt0.c1 FROM vt0, t1, t0 WHERE ((NOT (t1.c0))) UNION ALL SELECT vt0.c1 FROM vt0 NOT INDEXED, t1, t0 WHERE (((t1.c0) ISNULL));
SELECT ALL vt0.c1 FROM vt0, t1, t0;
SELECT DISTINCT vt0.c0, t0.c0, vt0.c1, t0.c1, t0.c2 FROM vt0 CROSS JOIN t0 ON t0.c2;
SELECT DISTINCT vt0.c0, t0.c0, vt0.c1, t0.c1, t0.c2 FROM vt0 CROSS JOIN t0 ON t0.c2 WHERE (((((t0.c1) NOT BETWEEN (NULL) AND (vt0.c0)))<=(LIKE(t0.c2, t0.c2)))) UNION SELECT DISTINCT vt0.c0, t0.c0, vt0.c1, t0.c1, t0.c2 FROM vt0 CROSS JOIN t0 ON t0.c2 WHERE ((NOT (((((t0.c1) NOT BETWEEN (NULL) AND (vt0.c0)))<=(LIKE(t0.c2, t0.c2)))))) UNION SELECT DISTINCT vt0.c0, t0.c0, vt0.c1, t0.c1, t0.c2 FROM vt0 CROSS JOIN t0 ON t0.c2 WHERE (((((((t0.c1) NOT BETWEEN (NULL) AND (vt0.c0)))<=(LIKE(t0.c2, t0.c2)))) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0, vt0.c1, t0.c1, t0.c2 FROM vt0 CROSS JOIN t0 ON t0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (x'' COLLATE NOCASE) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (x'' COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((x'' COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c1, vt0.c0, t0.c0, t0.c2, t1.c0, vt0.c1 FROM t0, vt0, t1 GROUP BY t0.c1, vt0.c0, t0.c0, t0.c2, t1.c0, vt0.c1;
SELECT ALL t0.c1, vt0.c0, t0.c0, t0.c2, t1.c0, vt0.c1 FROM t0, vt0, t1 GROUP BY t0.c1, vt0.c0, t0.c0, t0.c2, t1.c0, vt0.c1 HAVING AVG(MIN(GROUP_CONCAT(MIN(t1.c0)))) UNION ALL SELECT ALL t0.c1, vt0.c0, t0.c0, t0.c2, t1.c0, vt0.c1 FROM t0, vt0, t1 GROUP BY t0.c1, vt0.c0, t0.c0, t0.c2, t1.c0, vt0.c1 HAVING (NOT (AVG(MIN(GROUP_CONCAT(MIN(t1.c0)))))) UNION ALL SELECT ALL t0.c1, vt0.c0, t0.c0, t0.c2, t1.c0, vt0.c1 FROM t0, vt0, t1 GROUP BY t0.c1, vt0.c0, t0.c0, t0.c2, t1.c0, vt0.c1 HAVING ((AVG(MIN(GROUP_CONCAT(MIN(t1.c0))))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((x'' IN ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0)))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT ((x'' IN ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0)))))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((x'' IN ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT vt0.c0, t0.c0, vt0.c1, t0.c2, t0.c1 FROM vt0 LEFT OUTER JOIN t0 ON (((((((((- (t0.c1)))AND((+ (t0.c2)))))AND((0.6264002242713337 IN ()))))AND(ABS(DISTINCT t0.c1))))AND(((t0.c0)=(t0.c2)))) GROUP BY vt0.c0, t0.c0, vt0.c1, t0.c2, t0.c1;
SELECT vt0.c0, t0.c0, vt0.c1, t0.c2, t0.c1 FROM vt0 LEFT OUTER JOIN t0 ON (((((((((- (t0.c1)))AND((+ (t0.c2)))))AND((0.6264002242713337 IN ()))))AND(ABS(DISTINCT t0.c1))))AND(((t0.c0)==(t0.c2)))) WHERE (vt0.c1) GROUP BY vt0.c0, t0.c0, vt0.c1, t0.c2, t0.c1 UNION SELECT ALL vt0.c0, t0.c0, vt0.c1, t0.c2, t0.c1 FROM vt0 LEFT OUTER JOIN t0 ON (((((((((- (t0.c1)))AND((+ (t0.c2)))))AND((0.6264002242713337 IN ()))))AND(ABS(DISTINCT t0.c1))))AND(((t0.c0)=(t0.c2)))) WHERE ((NOT (vt0.c1))) GROUP BY vt0.c0, t0.c0, vt0.c1, t0.c2, t0.c1 UNION SELECT ALL vt0.c0, t0.c0, vt0.c1, t0.c2, t0.c1 FROM vt0 LEFT OUTER JOIN t0 ON (((((((((- (t0.c1)))AND((+ (t0.c2)))))AND((0.6264002242713337 IN ()))))AND(ABS(DISTINCT t0.c1))))AND(((t0.c0)==(t0.c2)))) WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c0, t0.c0, vt0.c1, t0.c2, t0.c1;
SELECT vt0.c0, t0.c0, vt0.c1, t0.c2, t0.c1 FROM vt0 LEFT OUTER JOIN t0 ON (((((((((- (t0.c1)))AND((+ (t0.c2)))))AND((0.6264002242713337 IN ()))))AND(ABS(DISTINCT t0.c1))))AND(((t0.c0)=(t0.c2)))) GROUP BY vt0.c0, t0.c0, vt0.c1, t0.c2, t0.c1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING MAX(SUM(t1.c0)) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (MAX(SUM(t1.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MAX(SUM(t1.c0))) ISNULL);
SELECT t0.c2, t0.c0, t0.c1 FROM t0;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((- (LOWER(t0.c2)))) UNION ALL SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT ((- (LOWER(t0.c2)))))) UNION ALL SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((((- (LOWER(t0.c2)))) ISNULL));
SELECT t0.c2, t0.c0, t0.c1 FROM t0;
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN t1 ON ((((((((((((CASE WHEN t0.c2 THEN NULL END)AND((NOT (t0.c1)))))AND(((t0.c2) IS TRUE))))OR(CASE WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN 'gnk	+H问qy' THEN t0.c2 END)))AND(((((t0.c1)OR(t1.c0)))OR(t0.c1)))))OR(((t1.c0)IS(t0.c2)))))AND(CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN '477936378' WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN t1 ON ((((((((((((CASE WHEN t0.c2 THEN NULL END)AND((NOT (t0.c1)))))AND(((t0.c2) IS TRUE))))OR(CASE WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN 'gnk	+H问qy' THEN t0.c2 END)))AND(((((t0.c1)OR(t1.c0)))OR(t0.c1)))))OR(((t1.c0)IS(t0.c2)))))AND(CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN '477936378' WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END)) WHERE (CAST(((t1.c0)&(t0.c2)) AS TEXT)) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN t1 ON ((((((((((((CASE WHEN t0.c2 THEN NULL END)AND((NOT (t0.c1)))))AND(((t0.c2) IS TRUE))))OR(CASE WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN 'gnk	+H问qy' THEN t0.c2 END)))AND(((((t0.c1)OR(t1.c0)))OR(t0.c1)))))OR(((t1.c0)IS(t0.c2)))))AND(CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN '477936378' WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END)) WHERE ((NOT (CAST(((t1.c0)&(t0.c2)) AS TEXT)))) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN t1 ON ((((((((((((CASE WHEN t0.c2 THEN NULL END)AND((NOT (t0.c1)))))AND(((t0.c2) IS TRUE))))OR(CASE WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN 'gnk	+H问qy' THEN t0.c2 END)))AND(((((t0.c1)OR(t1.c0)))OR(t0.c1)))))OR(((t1.c0)IS(t0.c2)))))AND(CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN '477936378' WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END)) WHERE (((CAST(((t1.c0)&(t0.c2)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN t1 ON ((((((((((((CASE WHEN t0.c2 THEN NULL END)AND((NOT (t0.c1)))))AND(((t0.c2) IS TRUE))))OR(CASE WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN 'gnk	+H问qy' THEN t0.c2 END)))AND(((((t0.c1)OR(t1.c0)))OR(t0.c1)))))OR(((t1.c0)IS(t0.c2)))))AND(CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN '477936378' WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END));
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1))) IS FALSE)) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1))) IS FALSE)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1))) IS FALSE)) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL t0.c1, t1.c0, t0.c0, t0.c2 FROM t0, t1 GROUP BY t0.c1, t1.c0, t0.c0, t0.c2;
SELECT t0.c1, t1.c0, t0.c0, t0.c2 FROM t0, t1 GROUP BY t0.c1, t1.c0, t0.c0, t0.c2 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL t0.c1, t1.c0, t0.c0, t0.c2 FROM t0, t1 GROUP BY t0.c1, t1.c0, t0.c0, t0.c2 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL t0.c1, t1.c0, t0.c0, t0.c2 FROM t0, t1 GROUP BY t0.c1, t1.c0, t0.c0, t0.c2 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT vt0.c1 FROM t1, t0, vt0;
SELECT vt0.c1 FROM t1, t0, vt0 WHERE (((((t0.c1)*(vt0.c0))) BETWEEN (((((t0.c0)OR(vt0.c1)))OR(t0.c0))) AND (IFNULL(DISTINCT '', t0.c0)))) UNION ALL SELECT vt0.c1 FROM t1, t0, vt0 WHERE ((NOT (((((t0.c1)*(vt0.c0))) BETWEEN (((((t0.c0)OR(vt0.c1)))OR(t0.c0))) AND (IFNULL(DISTINCT '', t0.c0)))))) UNION ALL SELECT vt0.c1 FROM t1, t0, vt0 WHERE (((((((t0.c1)*(vt0.c0))) BETWEEN (((((t0.c0)OR(vt0.c1)))OR(t0.c0))) AND (IFNULL(DISTINCT '', t0.c0)))) ISNULL));
SELECT vt0.c1 FROM t1, t0, vt0;
SELECT DISTINCT t0.c1 FROM t0, t1;
SELECT DISTINCT t0.c1 FROM t0, t1 WHERE (((((t0.c0) NOT BETWEEN ('-541883694') AND (t0.c2)))GLOB(t1.c0))) UNION SELECT DISTINCT t0.c1 FROM t0, t1 WHERE ((NOT (((((t0.c0) NOT BETWEEN ('-541883694') AND (t0.c2)))GLOB(t1.c0))))) UNION SELECT DISTINCT t0.c1 FROM t0, t1 WHERE (((((((t0.c0) NOT BETWEEN ('-541883694') AND (t0.c2)))GLOB(t1.c0))) ISNULL));
SELECT DISTINCT t0.c1 FROM t0, t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (CAST((~ (t1.c0)) AS TEXT)) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (CAST((~ (t1.c0)) AS TEXT)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((CAST((~ (t1.c0)) AS TEXT)) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL vt0.c1 FROM t1 FULL OUTER JOIN vt0 ON (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))<(((t1.c0) NOTNULL))) GROUP BY vt0.c1;
SELECT vt0.c1 FROM t1 FULL OUTER JOIN vt0 ON (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))<(((t1.c0) NOTNULL))) GROUP BY vt0.c1 HAVING TOTAL(LOWER(DISTINCT TOTAL(SUM(MIN(0.0370665562172342))))) UNION ALL SELECT vt0.c1 FROM t1 FULL OUTER JOIN vt0 ON (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))<(((t1.c0) NOTNULL))) GROUP BY vt0.c1 HAVING (NOT (TOTAL(LOWER(DISTINCT TOTAL(SUM(MIN(0.0370665562172342))))))) UNION ALL SELECT vt0.c1 FROM t1 FULL OUTER JOIN vt0 ON (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))<(((t1.c0) NOTNULL))) GROUP BY vt0.c1 HAVING ((TOTAL(LOWER(DISTINCT TOTAL(SUM(MIN(0.0370665562172342)))))) ISNULL);
SELECT SUM(NULLIF((vt0.c0 IN ()), ((vt0.c0)||(vt0.c1)))) FROM t1, vt0;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (CASE CAST(t0.c0 AS BLOB)  WHEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c2)) THEN json_patch('?', t0.c1) ELSE (x'' IN ()) END) UNION ALL SELECT * FROM t0 WHERE ((NOT (CASE CAST(t0.c0 AS BLOB)  WHEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c2)) THEN json_patch('?', t0.c1) ELSE (x'' IN ()) END))) UNION ALL SELECT ALL * FROM t0 WHERE (((CASE CAST(t0.c0 AS BLOB)  WHEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c2)) THEN json_patch('?', t0.c1) ELSE (x'' IN ()) END) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t1, t0 INDEXED BY i37;
SELECT ALL t0.c1, t0.c0 FROM t0, t1 GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0, t1 WHERE (((((t1.c0)-(t0.c1)))-(LOWER(t0.c1)))) GROUP BY t0.c1, t0.c0 UNION SELECT t0.c1, t0.c0 FROM t0, t1 WHERE ((NOT (((((t1.c0)-(t0.c1)))-(LOWER(t0.c1)))))) GROUP BY t0.c1, t0.c0 UNION SELECT t0.c1, t0.c0 FROM t0, t1 WHERE (((((((t1.c0)-(t0.c1)))-(LOWER(t0.c1)))) ISNULL)) GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0, t1 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c0, vt0.c1 FROM t0, vt0 RIGHT OUTER JOIN t1 ON CASE ((t0.c1)/(vt0.c0))  WHEN ((x'07a3')!=(vt0.c1)) THEN ((((t0.c2)OR(t0.c0)))AND(vt0.c0)) ELSE (((vt0.c0))>=((vt0.c0))) END GROUP BY t0.c0, vt0.c1;
SELECT t0.c0, vt0.c1 FROM t0, vt0 RIGHT OUTER JOIN t1 ON CASE ((t0.c1)/(vt0.c0))  WHEN ((x'07a3')<>(vt0.c1)) THEN ((((t0.c2)OR(t0.c0)))AND(vt0.c0)) ELSE (((vt0.c0))>=((vt0.c0))) END GROUP BY t0.c0, vt0.c1 HAVING t0.c0 UNION ALL SELECT ALL t0.c0, vt0.c1 FROM t0, vt0 RIGHT OUTER JOIN t1 ON CASE ((t0.c1)/(vt0.c0))  WHEN ((x'07a3')<>(vt0.c1)) THEN ((((t0.c2)OR(t0.c0)))AND(vt0.c0)) ELSE (((vt0.c0))>=((vt0.c0))) END GROUP BY t0.c0, vt0.c1 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0, vt0.c1 FROM t0, vt0 RIGHT OUTER JOIN t1 ON CASE ((t0.c1)/(vt0.c0))  WHEN ((x'07a3')!=(vt0.c1)) THEN ((((t0.c2)OR(t0.c0)))AND(vt0.c0)) ELSE (((vt0.c0))>=((vt0.c0))) END GROUP BY t0.c0, vt0.c1 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c0, vt0.c1 FROM t0, vt0 RIGHT OUTER JOIN t1 ON CASE ((t0.c1)/(vt0.c0))  WHEN ((x'07a3')!=(vt0.c1)) THEN ((((t0.c2)OR(t0.c0)))AND(vt0.c0)) ELSE (((vt0.c0))>=((vt0.c0))) END GROUP BY t0.c0, vt0.c1;
SELECT t0.c0, vt0.c1 FROM t0, vt0 RIGHT OUTER JOIN t1 ON CASE ((t0.c1)/(vt0.c0))  WHEN ((x'07a3')<>(vt0.c1)) THEN ((((t0.c2)OR(t0.c0)))AND(vt0.c0)) ELSE (((vt0.c0))>=((vt0.c0))) END GROUP BY t0.c0, vt0.c1 HAVING t0.c0 UNION ALL SELECT ALL t0.c0, vt0.c1 FROM t0, vt0 RIGHT OUTER JOIN t1 ON CASE ((t0.c1)/(vt0.c0))  WHEN ((x'07a3')<>(vt0.c1)) THEN ((((t0.c2)OR(t0.c0)))AND(vt0.c0)) ELSE (((vt0.c0))>=((vt0.c0))) END GROUP BY t0.c0, vt0.c1 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0, vt0.c1 FROM t0, vt0 RIGHT OUTER JOIN t1 ON CASE ((t0.c1)/(vt0.c0))  WHEN ((x'07a3')!=(vt0.c1)) THEN ((((t0.c2)OR(t0.c0)))AND(vt0.c0)) ELSE (((vt0.c0))>=((vt0.c0))) END GROUP BY t0.c0, vt0.c1 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c0, vt0.c1 FROM t0, vt0 RIGHT OUTER JOIN t1 ON CASE ((t0.c1)/(vt0.c0))  WHEN ((x'07a3')!=(vt0.c1)) THEN ((((t0.c2)OR(t0.c0)))AND(vt0.c0)) ELSE (((vt0.c0))>=((vt0.c0))) END GROUP BY t0.c0, vt0.c1;
SELECT ALL * FROM t1, vt0;
SELECT * FROM t1, vt0 NOT INDEXED WHERE (CASE '-1454927038'  WHEN ((vt0.c1)>=(t1.c0)) THEN ((vt0.c1) BETWEEN (t1.c0) AND (t1.c0)) WHEN vt0.c1 COLLATE NOCASE THEN CAST(t1.c0 AS NUMERIC) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END THEN ((vt0.c1) IS TRUE) END) UNION ALL SELECT ALL * FROM t1, vt0 WHERE ((NOT (CASE '-1454927038'  WHEN ((vt0.c1)>=(t1.c0)) THEN ((vt0.c1) BETWEEN (t1.c0) AND (t1.c0)) WHEN vt0.c1 COLLATE NOCASE THEN CAST(t1.c0 AS NUMERIC) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END THEN ((vt0.c1) IS TRUE) END))) UNION ALL SELECT ALL * FROM t1, vt0 WHERE (((CASE '-1454927038'  WHEN ((vt0.c1)>=(t1.c0)) THEN ((vt0.c1) BETWEEN (t1.c0) AND (t1.c0)) WHEN vt0.c1 COLLATE NOCASE THEN CAST(t1.c0 AS NUMERIC) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END THEN ((vt0.c1) IS TRUE) END) ISNULL));
SELECT ALL * FROM t1, vt0;
SELECT DISTINCT * FROM t0, vt0 INDEXED BY i37;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (HEX(COALESCE(vt0.c0, vt0.c0))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (HEX(COALESCE(vt0.c0, vt0.c0))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((HEX(COALESCE(vt0.c0, vt0.c0))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL t0.c1, t0.c2, t1.c0, vt0.c1, t0.c0, vt0.c0 FROM t0, vt0 FULL OUTER JOIN t1 ON (CAST(t1.c0 AS TEXT) IN ()) GROUP BY t0.c1, t0.c2, t1.c0, vt0.c1, t0.c0, vt0.c0;
SELECT t0.c1, t0.c2, t1.c0, vt0.c1, t0.c0, vt0.c0 FROM t0, vt0 FULL OUTER JOIN t1 ON (CAST(t1.c0 AS TEXT) IN ()) GROUP BY t0.c1, t0.c2, t1.c0, vt0.c1, t0.c0, vt0.c0 HAVING MIN(((vt0.c1) NOT BETWEEN (COUNT(*)) AND (SUM(TOTAL(SUM(t0.c0)))))) UNION ALL SELECT ALL t0.c1, t0.c2, t1.c0, vt0.c1, t0.c0, vt0.c0 FROM t0, vt0 FULL OUTER JOIN t1 ON (CAST(t1.c0 AS TEXT) IN ()) GROUP BY t0.c1, t0.c2, t1.c0, vt0.c1, t0.c0, vt0.c0 HAVING (NOT (MIN(((vt0.c1) NOT BETWEEN (COUNT(*)) AND (SUM(TOTAL(SUM(t0.c0)))))))) UNION ALL SELECT t0.c1, t0.c2, t1.c0, vt0.c1, t0.c0, vt0.c0 FROM t0, vt0 FULL OUTER JOIN t1 ON (CAST(t1.c0 AS TEXT) IN ()) GROUP BY t0.c1, t0.c2, t1.c0, vt0.c1, t0.c0, vt0.c0 HAVING ((MIN(((vt0.c1) NOT BETWEEN (COUNT(*)) AND (SUM(TOTAL(SUM(t0.c0))))))) ISNULL);
SELECT TOTAL((((((((((NOT (t1.c0)))OR(((vt0.c0) NOT NULL))))OR((- (vt0.c0)))))AND(((t1.c0) BETWEEN (vt0.c1) AND (x'')))))AND(''))) FROM vt0, t1;
SELECT ALL t1.c0 FROM t1 INNER JOIN t0 ON 0.6278783543014151;
SELECT t1.c0 FROM t1 INNER JOIN t0 ON 0.6278783543014151 WHERE (t0.c2) UNION ALL SELECT t1.c0 FROM t1 INNER JOIN t0 ON 0.6278783543014151 WHERE ((NOT (t0.c2))) UNION ALL SELECT t1.c0 FROM t1 INNER JOIN t0 ON 0.6278783543014151 WHERE (((t0.c2) ISNULL));
SELECT ALL t1.c0 FROM t1 INNER JOIN t0 ON 0.6278783543014151;
SELECT DISTINCT t0.c1 FROM t1, t0, vt0 INDEXED BY i17;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, t1 FULL OUTER JOIN t0 ON CASE WHEN CASE WHEN vt0.c1 THEN 0.26908563134129226 END THEN (vt0.c0 IN ()) END GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0, t1 NOT INDEXED FULL OUTER JOIN t0 ON CASE WHEN CASE WHEN vt0.c1 THEN 0.26908563134129226 END THEN (vt0.c0 IN ()) END WHERE (CASE WHEN LOWER('') THEN ((vt0.c0)=(t0.c0)) END) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 NOT INDEXED, t1 FULL OUTER JOIN t0 ON CASE WHEN CASE WHEN vt0.c1 THEN 0.26908563134129226 END THEN (vt0.c0 IN ()) END WHERE ((NOT (CASE WHEN LOWER('') THEN ((vt0.c0)==(t0.c0)) END))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0, t1 FULL OUTER JOIN t0 ON CASE WHEN CASE WHEN vt0.c1 THEN 0.26908563134129226 END THEN (vt0.c0 IN ()) END WHERE (((CASE WHEN LOWER('') THEN ((vt0.c0)=(t0.c0)) END) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, t1 FULL OUTER JOIN t0 ON CASE WHEN CASE WHEN vt0.c1 THEN 0.26908563134129226 END THEN (vt0.c0 IN ()) END GROUP BY vt0.c0, vt0.c1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MAX(t1.c0))OR(GROUP_CONCAT(t1.c0))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((MAX(t1.c0))OR(GROUP_CONCAT(t1.c0))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((MAX(t1.c0))OR(GROUP_CONCAT(t1.c0)))) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MAX(t1.c0))OR(GROUP_CONCAT(t1.c0))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((MAX(t1.c0))OR(GROUP_CONCAT(t1.c0))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((MAX(t1.c0))OR(GROUP_CONCAT(t1.c0)))) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((CASE WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN NULL THEN t0.c1 END)>>(t0.c2 COLLATE BINARY))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((CASE WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN NULL THEN t0.c1 END)>>(t0.c2 COLLATE BINARY))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((CASE WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN NULL THEN t0.c1 END)>>(t0.c2 COLLATE BINARY))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT t0.c1 FROM vt0, t0, t1;
SELECT DISTINCT t0.c1 FROM vt0, t0, t1 WHERE ((((t0.c2)+(vt0.c0)) IN (TRIM(DISTINCT vt0.c0, vt0.c1), ((t0.c2) NOT BETWEEN (t1.c0) AND (vt0.c1))))) UNION SELECT DISTINCT t0.c1 FROM vt0, t0, t1 WHERE ((NOT ((((t0.c2)+(vt0.c0)) IN (TRIM(DISTINCT vt0.c0, vt0.c1), ((t0.c2) NOT BETWEEN (t1.c0) AND (vt0.c1))))))) UNION SELECT DISTINCT t0.c1 FROM vt0, t0, t1 WHERE ((((((t0.c2)+(vt0.c0)) IN (TRIM(DISTINCT vt0.c0, vt0.c1), ((t0.c2) NOT BETWEEN (t1.c0) AND (vt0.c1))))) ISNULL));
SELECT DISTINCT t0.c1 FROM vt0, t0, t1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, t1 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0, t1 WHERE (((((((vt0.c1)%(vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND(CAST(vt0.c0 AS BLOB)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0, t1 WHERE ((NOT (((((((vt0.c1)%(vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND(CAST(vt0.c0 AS BLOB)))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0, t1 WHERE (((((((((vt0.c1)%(vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND(CAST(vt0.c0 AS BLOB)))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, t1 GROUP BY vt0.c0, vt0.c1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t0.c1, t0.c2 FROM t0, t1;
SELECT t0.c1, t0.c2 FROM t0, t1 WHERE (((((t0.c1)AND(((((t0.c1)AND(t0.c2)))OR(t0.c2)))))OR((NOT (t0.c0))))) UNION ALL SELECT t0.c1, t0.c2 FROM t0, t1 WHERE ((NOT (((((t0.c1)AND(((((t0.c1)AND(t0.c2)))OR(t0.c2)))))OR((NOT (t0.c0))))))) UNION ALL SELECT t0.c1, t0.c2 FROM t0, t1 WHERE (((((((t0.c1)AND(((((t0.c1)AND(t0.c2)))OR(t0.c2)))))OR((NOT (t0.c0))))) ISNULL));
SELECT t0.c1, t0.c2 FROM t0, t1;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c0))<>((t1.c0, t1.c0, t1.c0))))<=(t1.c0 COLLATE RTRIM))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT ((((((t1.c0, t1.c0, t1.c0))<>((t1.c0, t1.c0, t1.c0))))<=(t1.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((((((((t1.c0, t1.c0, t1.c0))!=((t1.c0, t1.c0, t1.c0))))<=(t1.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t0.c2, t1.c0, t0.c0, t0.c1 FROM t1, t0 GROUP BY t0.c2, t1.c0, t0.c0, t0.c1;
SELECT t0.c2, t1.c0, t0.c0, t0.c1 FROM t1, t0 WHERE (CASE WHEN (0.5205627887696377 IN (t0.c1, t0.c0)) THEN (((t0.c0, t1.c0, t0.c2)) NOT BETWEEN ((t0.c2, 0.23863072990845824, t0.c2)) AND ((t0.c1, t0.c1, t1.c0))) WHEN ((((t0.c1)OR(t0.c2)))AND(t1.c0)) THEN ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)) WHEN CAST(t0.c1 AS TEXT) THEN ((t0.c2)>(x'')) ELSE ((((t0.c2)OR(t0.c0)))OR(t0.c1)) END) GROUP BY t0.c2, t1.c0, t0.c0, t0.c1 UNION SELECT ALL t0.c2, t1.c0, t0.c0, t0.c1 FROM t1, t0 WHERE ((NOT (CASE WHEN (0.5205627887696377 IN (t0.c1, t0.c0)) THEN (((t0.c0, t1.c0, t0.c2)) NOT BETWEEN ((t0.c2, 0.23863072990845824, t0.c2)) AND ((t0.c1, t0.c1, t1.c0))) WHEN ((((t0.c1)OR(t0.c2)))AND(t1.c0)) THEN ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)) WHEN CAST(t0.c1 AS TEXT) THEN ((t0.c2)>(x'')) ELSE ((((t0.c2)OR(t0.c0)))OR(t0.c1)) END))) GROUP BY t0.c2, t1.c0, t0.c0, t0.c1 UNION SELECT ALL t0.c2, t1.c0, t0.c0, t0.c1 FROM t1, t0 WHERE (((CASE WHEN (0.5205627887696377 IN (t0.c1, t0.c0)) THEN (((t0.c0, t1.c0, t0.c2)) NOT BETWEEN ((t0.c2, 0.23863072990845824, t0.c2)) AND ((t0.c1, t0.c1, t1.c0))) WHEN ((((t0.c1)OR(t0.c2)))AND(t1.c0)) THEN ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)) WHEN CAST(t0.c1 AS TEXT) THEN ((t0.c2)>(x'')) ELSE ((((t0.c2)OR(t0.c0)))OR(t0.c1)) END) ISNULL)) GROUP BY t0.c2, t1.c0, t0.c0, t0.c1;
SELECT t0.c2, t1.c0, t0.c0, t0.c1 FROM t1, t0 GROUP BY t0.c2, t1.c0, t0.c0, t0.c1;
SELECT vt0.c1, vt0.c0, t1.c0 FROM vt0, t1 GROUP BY vt0.c1, vt0.c0, t1.c0;
SELECT ALL vt0.c1, vt0.c0, t1.c0 FROM vt0, t1 GROUP BY vt0.c1, vt0.c0, t1.c0 HAVING MAX(((TOTAL(vt0.c0))%(vt0.c0))) UNION ALL SELECT ALL vt0.c1, vt0.c0, t1.c0 FROM vt0, t1 GROUP BY vt0.c1, vt0.c0, t1.c0 HAVING (NOT (MAX(((TOTAL(vt0.c0))%(vt0.c0))))) UNION ALL SELECT vt0.c1, vt0.c0, t1.c0 FROM vt0, t1 GROUP BY vt0.c1, vt0.c0, t1.c0 HAVING ((MAX(((TOTAL(vt0.c0))%(vt0.c0)))) ISNULL);
SELECT ALL SUM((((LOWER(vt0.c0)))<>(((NULL IN ()))))) FROM t1, vt0 ORDER BY (+ (SQLITE_COMPILEOPTION_USED(vt0.c0))) ASC  NULLS LAST;
SELECT vt0.c1 FROM vt0, t0, t1;
SELECT vt0.c1 FROM vt0, t0, t1 WHERE (t0.c2) UNION ALL SELECT vt0.c1 FROM vt0, t0, t1 WHERE ((NOT (t0.c2))) UNION ALL SELECT ALL vt0.c1 FROM vt0, t0, t1 WHERE (((t0.c2) ISNULL));
SELECT vt0.c1 FROM vt0, t0, t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (t1.c0) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT * FROM t1 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)>=(vt0.c1)))) AND ((((vt0.c1) IS TRUE))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)>=(vt0.c1)))) AND ((((vt0.c1) IS TRUE))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((((vt0.c0)>=(vt0.c1)))) AND ((((vt0.c1) IS TRUE))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c0, t0.c0, t0.c2, vt0.c1, t0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c2, vt0.c1, t0.c1;
SELECT vt0.c0, t0.c0, t0.c2, vt0.c1, t0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c2, vt0.c1, t0.c1 HAVING CAST('1e500' COLLATE NOCASE AS BLOB) UNION ALL SELECT ALL vt0.c0, t0.c0, t0.c2, vt0.c1, t0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c2, vt0.c1, t0.c1 HAVING (NOT (CAST('1e500' COLLATE NOCASE AS BLOB))) UNION ALL SELECT ALL vt0.c0, t0.c0, t0.c2, vt0.c1, t0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c2, vt0.c1, t0.c1 HAVING ((CAST('1e500' COLLATE NOCASE AS BLOB)) ISNULL);
SELECT vt0.c0, t0.c0, t0.c2, vt0.c1, t0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c2, vt0.c1, t0.c1;
SELECT vt0.c0, t0.c0, t0.c2, vt0.c1, t0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c2, vt0.c1, t0.c1 HAVING CAST('1e500' COLLATE NOCASE AS BLOB) UNION ALL SELECT ALL vt0.c0, t0.c0, t0.c2, vt0.c1, t0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c2, vt0.c1, t0.c1 HAVING (NOT (CAST('1e500' COLLATE NOCASE AS BLOB))) UNION ALL SELECT ALL vt0.c0, t0.c0, t0.c2, vt0.c1, t0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c2, vt0.c1, t0.c1 HAVING ((CAST('1e500' COLLATE NOCASE AS BLOB)) ISNULL);
SELECT vt0.c0, t0.c0, t0.c2, vt0.c1, t0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c2, vt0.c1, t0.c1;
SELECT ALL vt0.c0 FROM vt0, t1, t0;
SELECT vt0.c0 FROM vt0, t1, t0 WHERE (((((vt0.c1 IN ()), ABS(DISTINCT vt0.c1), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))>(('&uo#^Q', UPPER(vt0.c0), ((((vt0.c0)OR(NULL)))AND(t0.c1)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t1, t0 WHERE ((NOT (((((vt0.c1 IN ()), ABS(DISTINCT vt0.c1), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))>(('&uo#^Q', UPPER(vt0.c0), ((((vt0.c0)OR(NULL)))AND(t0.c1)))))))) UNION ALL SELECT vt0.c0 FROM vt0, t1, t0 WHERE (((((((vt0.c1 IN ()), ABS(DISTINCT vt0.c1), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))>(('&uo#^Q', UPPER(vt0.c0), ((((vt0.c0)OR(NULL)))AND(t0.c1)))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0, t1, t0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0 IN (t1.c0, t1.c0)))AND((- (t1.c0)))))AND(((((t1.c0)OR(t1.c0)))AND(t1.c0))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((((((t1.c0 IN (t1.c0, t1.c0)))AND((- (t1.c0)))))AND(((((t1.c0)OR(t1.c0)))AND(t1.c0))))))) UNION SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c0 IN (t1.c0, t1.c0)))AND((- (t1.c0)))))AND(((((t1.c0)OR(t1.c0)))AND(t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t0.c0 FROM t1, t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0, vt0 WHERE (((UPPER(t0.c1)) IS TRUE)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t1, t0, vt0 WHERE ((NOT (((UPPER(t0.c1)) IS TRUE)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t1, t0, vt0 WHERE (((((UPPER(t0.c1)) IS TRUE)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0, vt0 GROUP BY t0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE (((((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)OR(((t1.c0)|(t1.c0)))))AND(((((t1.c0)OR(t1.c0)))AND(t1.c0))))) UNION ALL SELECT * FROM t1 WHERE ((NOT (((((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)OR(((t1.c0)|(t1.c0)))))AND(((((t1.c0)OR(t1.c0)))AND(t1.c0))))))) UNION ALL SELECT ALL * FROM t1 WHERE (((((((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)OR(((t1.c0)|(t1.c0)))))AND(((((t1.c0)OR(t1.c0)))AND(t1.c0))))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT t1.c0 FROM t1, t0;
SELECT DISTINCT t1.c0 FROM t1, t0 WHERE (((((((((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))AND(t0.c0)))AND(t1.c0)))AND(x'')))AND(t1.c0)))-(((t1.c0) NOT BETWEEN (t0.c0) AND (t0.c1))))) UNION SELECT DISTINCT t1.c0 FROM t1, t0 WHERE ((NOT (((((((((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))AND(t0.c0)))AND(t1.c0)))AND(x'')))AND(t1.c0)))-(((t1.c0) NOT BETWEEN (t0.c0) AND (t0.c1))))))) UNION SELECT DISTINCT t1.c0 FROM t1, t0 WHERE (((((((((((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))AND(t0.c0)))AND(t1.c0)))AND(x'')))AND(t1.c0)))-(((t1.c0) NOT BETWEEN (t0.c0) AND (t0.c1))))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1, t0;
SELECT vt0.c1, t0.c1 FROM t1, vt0, t0 GROUP BY vt0.c1, t0.c1;
SELECT vt0.c1, t0.c1 FROM t1, vt0, t0 WHERE (((TOTAL_CHANGES())IS(json_object('-832928828', x'')))) GROUP BY vt0.c1, t0.c1 UNION SELECT vt0.c1, t0.c1 FROM t1, vt0, t0 WHERE ((NOT (((TOTAL_CHANGES())IS(json_object('-832928828', x'')))))) GROUP BY vt0.c1, t0.c1 UNION SELECT ALL vt0.c1, t0.c1 FROM t1, vt0, t0 WHERE (((((TOTAL_CHANGES())IS(json_object('-832928828', x'')))) ISNULL)) GROUP BY vt0.c1, t0.c1;
SELECT ALL t1.c0, vt0.c1 FROM vt0, t1 GROUP BY t1.c0, vt0.c1;
SELECT t1.c0, vt0.c1 FROM vt0, t1 GROUP BY t1.c0, vt0.c1 HAVING vt0.c0 UNION ALL SELECT ALL t1.c0, vt0.c1 FROM vt0, t1 GROUP BY t1.c0, vt0.c1 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL t1.c0, vt0.c1 FROM vt0, t1 GROUP BY t1.c0, vt0.c1 HAVING ((vt0.c0) ISNULL);
SELECT ALL t1.c0, vt0.c1 FROM vt0, t1 GROUP BY t1.c0, vt0.c1;
SELECT t1.c0, vt0.c1 FROM vt0, t1 GROUP BY t1.c0, vt0.c1 HAVING vt0.c0 UNION ALL SELECT ALL t1.c0, vt0.c1 FROM vt0, t1 GROUP BY t1.c0, vt0.c1 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL t1.c0, vt0.c1 FROM vt0, t1 GROUP BY t1.c0, vt0.c1 HAVING ((vt0.c0) ISNULL);
SELECT ALL t1.c0, vt0.c1 FROM vt0, t1 GROUP BY t1.c0, vt0.c1;
SELECT ALL TOTAL(((0.5014443510814718) ISNULL) COLLATE NOCASE) FROM t0, vt0, t1;
SELECT * FROM vt0;
SELECT * FROM vt0 NOT INDEXED WHERE (CAST(((vt0.c0)<<(-456351945)) AS REAL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(((vt0.c0)<<(-456351945)) AS REAL)))) UNION ALL SELECT * FROM vt0 WHERE (((CAST(((vt0.c0)<<(-456351945)) AS REAL)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN t1 ON t1.c0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN t1 ON t1.c0 WHERE (((((t0.c1)>(t0.c1)))<<(CAST(t0.c2 AS BLOB)))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN t1 ON t1.c0 WHERE ((NOT (((((t0.c1)>(t0.c1)))<<(CAST(t0.c2 AS BLOB)))))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN t1 ON t1.c0 WHERE (((((((t0.c1)>(t0.c1)))<<(CAST(t0.c2 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN t1 ON t1.c0;
SELECT ALL t0.c2, t1.c0, t0.c1, vt0.c0 FROM t0, vt0, t1 GROUP BY t0.c2, t1.c0, t0.c1, vt0.c0;
SELECT t0.c2, t1.c0, t0.c1, vt0.c0 FROM t0, vt0, t1 WHERE ((((((((t0.c1)AND(0.4768084711737357)))AND(t1.c0))))>=((t0.c2 COLLATE RTRIM)))) GROUP BY t0.c2, t1.c0, t0.c1, vt0.c0 UNION SELECT ALL t0.c2, t1.c0, t0.c1, vt0.c0 FROM t0, vt0, t1 WHERE ((NOT ((((((((t0.c1)AND(0.4768084711737357)))AND(t1.c0))))>=((t0.c2 COLLATE RTRIM)))))) GROUP BY t0.c2, t1.c0, t0.c1, vt0.c0 UNION SELECT ALL t0.c2, t1.c0, t0.c1, vt0.c0 FROM t0, vt0, t1 WHERE ((((((((((t0.c1)AND(0.4768084711737357)))AND(t1.c0))))>=((t0.c2 COLLATE RTRIM)))) ISNULL)) GROUP BY t0.c2, t1.c0, t0.c1, vt0.c0;
SELECT ALL t0.c2, t1.c0, t0.c1, vt0.c0 FROM t0, vt0, t1 GROUP BY t0.c2, t1.c0, t0.c1, vt0.c0;
SELECT t0.c1, t0.c2, t0.c0, vt0.c1, vt0.c0, t1.c0 FROM t1, vt0, t0 GROUP BY t0.c1, t0.c2, t0.c0, vt0.c1, vt0.c0, t1.c0;
SELECT t0.c1, t0.c2, t0.c0, vt0.c1, vt0.c0, t1.c0 FROM t1, vt0, t0 GROUP BY t0.c1, t0.c2, t0.c0, vt0.c1, vt0.c0, t1.c0 HAVING AVG(((MIN(GROUP_CONCAT(t0.c0)))AND(vt0.c0))) UNION ALL SELECT t0.c1, t0.c2, t0.c0, vt0.c1, vt0.c0, t1.c0 FROM t1, vt0, t0 GROUP BY t0.c1, t0.c2, t0.c0, vt0.c1, vt0.c0, t1.c0 HAVING (NOT (AVG(((MIN(GROUP_CONCAT(t0.c0)))AND(vt0.c0))))) UNION ALL SELECT t0.c1, t0.c2, t0.c0, vt0.c1, vt0.c0, t1.c0 FROM t1, vt0, t0 GROUP BY t0.c1, t0.c2, t0.c0, vt0.c1, vt0.c0, t1.c0 HAVING ((AVG(((MIN(GROUP_CONCAT(t0.c0)))AND(vt0.c0)))) ISNULL);
SELECT t0.c2 FROM vt0, t0;
SELECT ALL t0.c2 FROM vt0, t0 WHERE ((NOT (((t0.c2) NOT NULL)))) UNION ALL SELECT ALL t0.c2 FROM vt0, t0 WHERE ((NOT ((NOT (((t0.c2) NOT NULL)))))) UNION ALL SELECT ALL t0.c2 FROM vt0, t0 WHERE ((((NOT (((t0.c2) NOT NULL)))) ISNULL));
SELECT t0.c2 FROM vt0, t0;
SELECT DISTINCT * FROM t1, t0 RIGHT OUTER JOIN vt0 ON CASE (vt0.c1 IN (t0.c2))  WHEN ((vt0.c1)AND(t0.c1)) THEN 2.093888342E9 ELSE (((vt0.c1))>((t0.c2))) END;
SELECT DISTINCT * FROM t1, t0 RIGHT OUTER JOIN vt0 ON CASE (vt0.c1 IN (t0.c2))  WHEN ((vt0.c1)AND(t0.c1)) THEN 2.093888342E9 ELSE (((vt0.c1))>((t0.c2))) END WHERE ((((t1.c0 IN ()))||(((t0.c0)OR(0x2c6aa12d))))) UNION SELECT DISTINCT * FROM t1, t0 RIGHT OUTER JOIN vt0 ON CASE (vt0.c1 IN (t0.c2))  WHEN ((vt0.c1)AND(t0.c1)) THEN 2.093888342E9 ELSE (((vt0.c1))>((t0.c2))) END WHERE ((NOT ((((t1.c0 IN ()))||(((t0.c0)OR(0X2c6aa12d))))))) UNION SELECT DISTINCT * FROM t1, t0 RIGHT OUTER JOIN vt0 ON CASE (vt0.c1 IN (t0.c2))  WHEN ((vt0.c1)AND(t0.c1)) THEN 2.093888342E9 ELSE (((vt0.c1))>((t0.c2))) END WHERE ((((((t1.c0 IN ()))||(((t0.c0)OR(0X2c6aa12d))))) ISNULL));
SELECT DISTINCT * FROM t1, t0 RIGHT OUTER JOIN vt0 ON CASE (vt0.c1 IN (t0.c2))  WHEN ((vt0.c1)AND(t0.c1)) THEN 2.093888342E9 ELSE (((vt0.c1))>((t0.c2))) END;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((((t1.c0, t1.c0, t1.c0)) BETWEEN (((- (t1.c0)), ((t1.c0)>(t1.c0)), CAST(t1.c0 AS NUMERIC))) AND ((t1.c0 COLLATE BINARY, PRINTF(1.151625023E9, 0.3605854614486492, t1.c0), ((((t1.c0)OR(t1.c0)))OR(t1.c0)))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT ((((t1.c0, t1.c0, t1.c0)) BETWEEN (((- (t1.c0)), ((t1.c0)>(t1.c0)), CAST(t1.c0 AS NUMERIC))) AND ((t1.c0 COLLATE BINARY, PRINTF(1.151625023E9, 0.3605854614486492, t1.c0), ((((t1.c0)OR(t1.c0)))OR(t1.c0)))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c0)) BETWEEN (((- (t1.c0)), ((t1.c0)>(t1.c0)), CAST(t1.c0 AS NUMERIC))) AND ((t1.c0 COLLATE BINARY, PRINTF(1.151625023E9, 0.3605854614486492, t1.c0), ((((t1.c0)OR(t1.c0)))OR(t1.c0)))))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING SUM(((t1.c0) BETWEEN (COUNT(*)) AND (t1.c0))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (SUM(((t1.c0) BETWEEN (COUNT(*)) AND (t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((SUM(((t1.c0) BETWEEN (COUNT(*)) AND (t1.c0)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)>(NULL)))AND((vt0.c0 IN (vt0.c1)))))OR(CAST(vt0.c0 AS INTEGER)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((((vt0.c1)>(NULL)))AND((vt0.c0 IN (vt0.c1)))))OR(CAST(vt0.c0 AS INTEGER)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((((vt0.c1)>(NULL)))AND((vt0.c0 IN (vt0.c1)))))OR(CAST(vt0.c0 AS INTEGER)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (NULL) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT ALL vt0.c1 FROM t0, vt0, t1 GROUP BY vt0.c1;
SELECT vt0.c1 FROM t0, vt0, t1 WHERE (t0.c2) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM t0, vt0, t1 WHERE ((NOT (t0.c2))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM t0, vt0, t1 WHERE (((t0.c2) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM t0, vt0, t1 GROUP BY vt0.c1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING CAST(COUNT(AVG(GROUP_CONCAT(MIN(t1.c0)))) AS TEXT) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CAST(COUNT(AVG(GROUP_CONCAT(MIN(t1.c0)))) AS TEXT))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CAST(COUNT(AVG(GROUP_CONCAT(MIN(t1.c0)))) AS TEXT)) ISNULL);
SELECT ALL SUM((t0.c1 COLLATE RTRIM IN ())) FROM vt0, t1, t0;
SELECT t1.c0 FROM t1 RIGHT OUTER JOIN vt0 ON (- (((vt0.c0)%(vt0.c0))));
SELECT t1.c0 FROM t1 RIGHT OUTER JOIN vt0 ON (- (((vt0.c0)%(vt0.c0)))) WHERE ((((vt0.c0, vt0.c1, t1.c0)) NOT BETWEEN (((NOT (vt0.c1)), ((0.10260507052327705)>(vt0.c1)), (t1.c0 IN ()))) AND ((CAST(vt0.c0 AS INTEGER), ((vt0.c1)==(vt0.c1)), t1.c0)))) UNION ALL SELECT t1.c0 FROM t1 RIGHT OUTER JOIN vt0 ON (- (((vt0.c0)%(vt0.c0)))) WHERE ((NOT ((((vt0.c0, vt0.c1, t1.c0)) NOT BETWEEN (((NOT (vt0.c1)), ((0.10260507052327705)>(vt0.c1)), (t1.c0 IN ()))) AND ((CAST(vt0.c0 AS INTEGER), ((vt0.c1)==(vt0.c1)), t1.c0)))))) UNION ALL SELECT t1.c0 FROM t1 RIGHT OUTER JOIN vt0 ON (- (((vt0.c0)%(vt0.c0)))) WHERE ((((((vt0.c0, vt0.c1, t1.c0)) NOT BETWEEN (((NOT (vt0.c1)), ((0.10260507052327705)>(vt0.c1)), (t1.c0 IN ()))) AND ((CAST(vt0.c0 AS INTEGER), ((vt0.c1)=(vt0.c1)), t1.c0)))) ISNULL));
SELECT t1.c0 FROM t1 RIGHT OUTER JOIN vt0 ON (- (((vt0.c0)%(vt0.c0))));
SELECT DISTINCT t0.c0, t0.c1, t0.c2, vt0.c1 FROM vt0, t0 LEFT OUTER JOIN t1 ON HEX((t0.c2 IN ()));
SELECT DISTINCT t0.c0, t0.c1, t0.c2, vt0.c1 FROM vt0, t0 LEFT OUTER JOIN t1 ON HEX((t0.c2 IN ())) WHERE (t0.c0) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2, vt0.c1 FROM vt0, t0 NOT INDEXED LEFT OUTER JOIN t1 ON HEX((t0.c2 IN ())) WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2, vt0.c1 FROM vt0, t0 LEFT OUTER JOIN t1 ON HEX((t0.c2 IN ())) WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c0, t0.c1, t0.c2, vt0.c1 FROM vt0, t0 LEFT OUTER JOIN t1 ON HEX((t0.c2 IN ()));
SELECT ALL t1.c0, t0.c0, t0.c1, t0.c2 FROM t0, t1 GROUP BY t1.c0, t0.c0, t0.c1, t0.c2;
SELECT ALL t1.c0, t0.c0, t0.c1, t0.c2 FROM t0, t1 WHERE ((((NULL)) BETWEEN ((((t0.c0)|(t0.c2)))) AND (((((('-2108107615')AND(t0.c1)))AND(t0.c1)))))) GROUP BY t1.c0, t0.c0, t0.c1, t0.c2 UNION SELECT ALL t1.c0, t0.c0, t0.c1, t0.c2 FROM t0, t1 WHERE ((NOT ((((NULL)) BETWEEN ((((t0.c0)|(t0.c2)))) AND (((((('-2108107615')AND(t0.c1)))AND(t0.c1)))))))) GROUP BY t1.c0, t0.c0, t0.c1, t0.c2 UNION SELECT t1.c0, t0.c0, t0.c1, t0.c2 FROM t0, t1 WHERE ((((((NULL)) BETWEEN ((((t0.c0)|(t0.c2)))) AND (((((('-2108107615')AND(t0.c1)))AND(t0.c1)))))) ISNULL)) GROUP BY t1.c0, t0.c0, t0.c1, t0.c2;
SELECT ALL t1.c0, t0.c0, t0.c1, t0.c2 FROM t0, t1 GROUP BY t1.c0, t0.c0, t0.c1, t0.c2;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING MAX((~ (vt0.c1))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (MAX((~ (vt0.c1))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((MAX((~ (vt0.c1)))) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING MAX((~ (vt0.c1))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (MAX((~ (vt0.c1))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((MAX((~ (vt0.c1)))) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL TOTAL(HEX('-699820465')) FROM t0, t1;
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((CAST(x'' AS NUMERIC))=(((t0.c2)|(vt0.c1)))) CROSS JOIN t1 ON ((load_extension(vt0.c0)) NOT BETWEEN (CASE vt0.c0  WHEN t0.c0 THEN t0.c0 WHEN '1224325636' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (t1.c0));
SELECT DISTINCT t0.c0, t0.c2, vt0.c1, t1.c0, vt0.c0, t0.c1 FROM t1, vt0 FULL OUTER JOIN t0 ON ((((CAST(t1.c0 AS INTEGER))AND(t0.c1 COLLATE RTRIM)))OR('-991507206'));
SELECT DISTINCT t0.c0, t0.c2, vt0.c1, t1.c0, vt0.c0, t0.c1 FROM t1, vt0 FULL OUTER JOIN t0 ON ((((CAST(t1.c0 AS INTEGER))AND(t0.c1 COLLATE RTRIM)))OR('-991507206')) WHERE (((((((((((t1.c0) BETWEEN (t0.c1) AND (t0.c2)))AND(CHANGES())))OR((t0.c1 IN ()))))AND(((t0.c0)<<(t0.c0)))))OR(((NULL)>(vt0.c1))))) UNION SELECT DISTINCT t0.c0, t0.c2, vt0.c1, t1.c0, vt0.c0, t0.c1 FROM t1, vt0 FULL OUTER JOIN t0 ON ((((CAST(t1.c0 AS INTEGER))AND(t0.c1 COLLATE RTRIM)))OR('-991507206')) WHERE ((NOT (((((((((((t1.c0) BETWEEN (t0.c1) AND (t0.c2)))AND(CHANGES())))OR((t0.c1 IN ()))))AND(((t0.c0)<<(t0.c0)))))OR(((NULL)>(vt0.c1))))))) UNION SELECT DISTINCT t0.c0, t0.c2, vt0.c1, t1.c0, vt0.c0, t0.c1 FROM t1, vt0 FULL OUTER JOIN t0 ON ((((CAST(t1.c0 AS INTEGER))AND(t0.c1 COLLATE RTRIM)))OR('-991507206')) WHERE (((((((((((((t1.c0) BETWEEN (t0.c1) AND (t0.c2)))AND(CHANGES())))OR((t0.c1 IN ()))))AND(((t0.c0)<<(t0.c0)))))OR(((NULL)>(vt0.c1))))) ISNULL));
SELECT DISTINCT t0.c0, t0.c2, vt0.c1, t1.c0, vt0.c0, t0.c1 FROM t1, vt0 FULL OUTER JOIN t0 ON ((((CAST(t1.c0 AS INTEGER))AND(t0.c1 COLLATE RTRIM)))OR('-991507206'));
SELECT t0.c2, t0.c0, vt0.c0 FROM t0, vt0, t1 GROUP BY t0.c2, t0.c0, vt0.c0;
SELECT t0.c2, t0.c0, vt0.c0 FROM t0, vt0, t1 WHERE (((NOT (t0.c1)) IN ())) GROUP BY t0.c2, t0.c0, vt0.c0 UNION SELECT ALL t0.c2, t0.c0, vt0.c0 FROM t0, vt0, t1 WHERE ((NOT (((NOT (t0.c1)) IN ())))) GROUP BY t0.c2, t0.c0, vt0.c0 UNION SELECT t0.c2, t0.c0, vt0.c0 FROM t0, vt0, t1 WHERE (((((NOT (t0.c1)) IN ())) ISNULL)) GROUP BY t0.c2, t0.c0, vt0.c0;
SELECT t0.c2, t0.c0, vt0.c0 FROM t0, vt0, t1 GROUP BY t0.c2, t0.c0, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(((vt0.c0)>(COUNT(*)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(((vt0.c0)>(COUNT(*)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(((vt0.c0)>(COUNT(*))))) ISNULL);
SELECT vt0.c0 FROM t1, t0, vt0;
SELECT ALL vt0.c0 FROM t1, t0, vt0 WHERE (((((t0.c2)OR(((((t0.c1)OR(t0.c2)))OR(t1.c0)))))AND(((t0.c0) IS FALSE)))) UNION ALL SELECT vt0.c0 FROM t1, t0, vt0 WHERE ((NOT (((((t0.c2)OR(((((t0.c1)OR(t0.c2)))OR(t1.c0)))))AND(((t0.c0) IS FALSE)))))) UNION ALL SELECT vt0.c0 FROM t1, t0, vt0 WHERE (((((((t0.c2)OR(((((t0.c1)OR(t0.c2)))OR(t1.c0)))))AND(((t0.c0) IS FALSE)))) ISNULL));
SELECT vt0.c0 FROM t1, t0, vt0;
SELECT DISTINCT * FROM t0, t1, vt0;
SELECT DISTINCT * FROM t0, t1, vt0 WHERE (((((vt0.c1))>((t0.c0))) IN ())) UNION SELECT DISTINCT * FROM t0, t1, vt0 NOT INDEXED WHERE ((NOT (((((vt0.c1))>((t0.c0))) IN ())))) UNION SELECT DISTINCT * FROM t0, t1, vt0 WHERE (((((((vt0.c1))>((t0.c0))) IN ())) ISNULL));
SELECT DISTINCT * FROM t0, t1, vt0;
SELECT ALL t0.c2, vt0.c1 FROM vt0, t1, t0 GROUP BY t0.c2, vt0.c1;
SELECT t0.c2, vt0.c1 FROM vt0, t1, t0 WHERE (COALESCE(DISTINCT ((t0.c2) NOT NULL), CASE t0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) GROUP BY t0.c2, vt0.c1 UNION SELECT ALL t0.c2, vt0.c1 FROM vt0, t1, t0 WHERE ((NOT (COALESCE(DISTINCT ((t0.c2) NOT NULL), CASE t0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)))) GROUP BY t0.c2, vt0.c1 UNION SELECT t0.c2, vt0.c1 FROM vt0, t1, t0 WHERE (((COALESCE(DISTINCT ((t0.c2) NOT NULL), CASE t0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) ISNULL)) GROUP BY t0.c2, vt0.c1;
SELECT ALL t0.c2, vt0.c1 FROM vt0, t1, t0 GROUP BY t0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING MIN(((vt0.c0)>>(vt0.c1))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (MIN(((vt0.c0)>>(vt0.c1))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((MIN(((vt0.c0)>>(vt0.c1)))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING MIN(((vt0.c0)>>(vt0.c1))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (MIN(((vt0.c0)>>(vt0.c1))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((MIN(((vt0.c0)>>(vt0.c1)))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c1, t1.c0 FROM t1, vt0;
SELECT ALL vt0.c1, t1.c0 FROM t1, vt0 WHERE ((((((vt0.c1 IN (t1.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(vt0.c1))) UNION ALL SELECT ALL vt0.c1, t1.c0 FROM t1, vt0 NOT INDEXED WHERE ((NOT ((((((vt0.c1 IN (t1.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(vt0.c1))))) UNION ALL SELECT vt0.c1, t1.c0 FROM t1, vt0 WHERE ((((((((vt0.c1 IN (t1.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(vt0.c1))) ISNULL));
SELECT vt0.c1, t1.c0 FROM t1, vt0;
SELECT DISTINCT * FROM vt0, t0, t1;
SELECT DISTINCT * FROM vt0, t0, t1 WHERE (UNLIKELY(t0.c0) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0, t0, t1 WHERE ((NOT (UNLIKELY(t0.c0) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, t0, t1 WHERE (((UNLIKELY(t0.c0) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0, t0, t1;
SELECT t1.c0, vt0.c1, t0.c2, t0.c0, vt0.c0 FROM t1, vt0, t0 GROUP BY t1.c0, vt0.c1, t0.c2, t0.c0, vt0.c0;
SELECT t1.c0, vt0.c1, t0.c2, t0.c0, vt0.c0 FROM t1, vt0, t0 WHERE (t0.c2) GROUP BY t1.c0, vt0.c1, t0.c2, t0.c0, vt0.c0 UNION SELECT ALL t1.c0, vt0.c1, t0.c2, t0.c0, vt0.c0 FROM t1, vt0, t0 WHERE ((NOT (t0.c2))) GROUP BY t1.c0, vt0.c1, t0.c2, t0.c0, vt0.c0 UNION SELECT t1.c0, vt0.c1, t0.c2, t0.c0, vt0.c0 FROM t1, vt0, t0 WHERE (((t0.c2) ISNULL)) GROUP BY t1.c0, vt0.c1, t0.c2, t0.c0, vt0.c0;
SELECT t1.c0, vt0.c1, t0.c2, t0.c0, vt0.c0 FROM t1, vt0, t0 GROUP BY t1.c0, vt0.c1, t0.c2, t0.c0, vt0.c0;
SELECT t0.c0, t0.c1 FROM vt0, t1 CROSS JOIN t0 ON CASE WHEN ((vt0.c0) IS FALSE) THEN vt0.c1 COLLATE NOCASE ELSE (((t1.c0))>=((vt0.c1))) END GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM vt0, t1 CROSS JOIN t0 ON CASE WHEN ((vt0.c0) IS FALSE) THEN vt0.c1 COLLATE NOCASE ELSE (((t1.c0))>=((vt0.c1))) END GROUP BY t0.c0, t0.c1 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, t0.c1 FROM vt0, t1 CROSS JOIN t0 ON CASE WHEN ((vt0.c0) IS FALSE) THEN vt0.c1 COLLATE NOCASE ELSE (((t1.c0))>=((vt0.c1))) END GROUP BY t0.c0, t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, t0.c1 FROM vt0, t1 CROSS JOIN t0 ON CASE WHEN ((vt0.c0) IS FALSE) THEN vt0.c1 COLLATE NOCASE ELSE (((t1.c0))>=((vt0.c1))) END GROUP BY t0.c0, t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, t0.c1 FROM vt0, t1 CROSS JOIN t0 ON CASE WHEN ((vt0.c0) IS FALSE) THEN vt0.c1 COLLATE NOCASE ELSE (((t1.c0))>=((vt0.c1))) END GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM vt0, t1 CROSS JOIN t0 ON CASE WHEN ((vt0.c0) IS FALSE) THEN vt0.c1 COLLATE NOCASE ELSE (((t1.c0))>=((vt0.c1))) END GROUP BY t0.c0, t0.c1 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, t0.c1 FROM vt0, t1 CROSS JOIN t0 ON CASE WHEN ((vt0.c0) IS FALSE) THEN vt0.c1 COLLATE NOCASE ELSE (((t1.c0))>=((vt0.c1))) END GROUP BY t0.c0, t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, t0.c1 FROM vt0, t1 CROSS JOIN t0 ON CASE WHEN ((vt0.c0) IS FALSE) THEN vt0.c1 COLLATE NOCASE ELSE (((t1.c0))>=((vt0.c1))) END GROUP BY t0.c0, t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, t0.c1 FROM vt0, t1 CROSS JOIN t0 ON CASE WHEN ((vt0.c0) IS FALSE) THEN vt0.c1 COLLATE NOCASE ELSE (((t1.c0))>=((vt0.c1))) END GROUP BY t0.c0, t0.c1;
SELECT ALL SUM(vt0.c1) FROM vt0 ORDER BY ((((HEX(DISTINCT vt0.c0))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))AND('788584493')) DESC  NULLS LAST;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 NOT INDEXED;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE (NULLIF(((t0.c2) IS TRUE), HEX(t0.c2))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((NOT (NULLIF(((t0.c2) IS TRUE), HEX(t0.c2))))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 WHERE (((NULLIF(((t0.c2) IS TRUE), HEX(t0.c2))) ISNULL));
SELECT t0.c1, t0.c2, t0.c0 FROM t0 NOT INDEXED;
SELECT DISTINCT t0.c1 FROM t0 INDEXED BY i17;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c1 AS BLOB))OR(((vt0.c1)>=(vt0.c1)))))AND((- (vt0.c1))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((CAST(vt0.c1 AS BLOB))OR(((vt0.c1)>=(vt0.c1)))))AND((- (vt0.c1))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((CAST(vt0.c1 AS BLOB))OR(((vt0.c1)>=(vt0.c1)))))AND((- (vt0.c1))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c1, t1.c0, t0.c2, vt0.c0 FROM t0 CROSS JOIN vt0 ON CAST(((((vt0.c1)AND(-1080567868)))AND(t0.c2)) AS REAL) CROSS JOIN t1 ON ((t0.c2) BETWEEN (((t0.c0) IS TRUE)) AND (UPPER(DISTINCT t0.c1))) GROUP BY vt0.c1, t1.c0, t0.c2, vt0.c0;
SELECT ALL vt0.c1, t1.c0, t0.c2, vt0.c0 FROM t0 CROSS JOIN vt0 ON CAST(((((vt0.c1)AND(-1080567868)))AND(t0.c2)) AS REAL) CROSS JOIN t1 ON ((t0.c2) BETWEEN (((t0.c0) IS TRUE)) AND (UPPER(DISTINCT t0.c1))) GROUP BY vt0.c1, t1.c0, t0.c2, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, t1.c0, t0.c2, vt0.c0 FROM t0 CROSS JOIN vt0 ON CAST(((((vt0.c1)AND(-1080567868)))AND(t0.c2)) AS REAL) CROSS JOIN t1 ON ((t0.c2) BETWEEN (((t0.c0) IS TRUE)) AND (UPPER(DISTINCT t0.c1))) GROUP BY vt0.c1, t1.c0, t0.c2, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1, t1.c0, t0.c2, vt0.c0 FROM t0 CROSS JOIN vt0 ON CAST(((((vt0.c1)AND(-1080567868)))AND(t0.c2)) AS REAL) CROSS JOIN t1 ON ((t0.c2) BETWEEN (((t0.c0) IS TRUE)) AND (UPPER(DISTINCT t0.c1))) GROUP BY vt0.c1, t1.c0, t0.c2, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, t1.c0, t0.c2, vt0.c0 FROM t0 CROSS JOIN vt0 ON CAST(((((vt0.c1)AND(-1080567868)))AND(t0.c2)) AS REAL) CROSS JOIN t1 ON ((t0.c2) BETWEEN (((t0.c0) IS TRUE)) AND (UPPER(DISTINCT t0.c1))) GROUP BY vt0.c1, t1.c0, t0.c2, vt0.c0;
SELECT ALL vt0.c1, t1.c0, t0.c2, vt0.c0 FROM t0 CROSS JOIN vt0 ON CAST(((((vt0.c1)AND(-1080567868)))AND(t0.c2)) AS REAL) CROSS JOIN t1 ON ((t0.c2) BETWEEN (((t0.c0) IS TRUE)) AND (UPPER(DISTINCT t0.c1))) GROUP BY vt0.c1, t1.c0, t0.c2, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, t1.c0, t0.c2, vt0.c0 FROM t0 CROSS JOIN vt0 ON CAST(((((vt0.c1)AND(-1080567868)))AND(t0.c2)) AS REAL) CROSS JOIN t1 ON ((t0.c2) BETWEEN (((t0.c0) IS TRUE)) AND (UPPER(DISTINCT t0.c1))) GROUP BY vt0.c1, t1.c0, t0.c2, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1, t1.c0, t0.c2, vt0.c0 FROM t0 CROSS JOIN vt0 ON CAST(((((vt0.c1)AND(-1080567868)))AND(t0.c2)) AS REAL) CROSS JOIN t1 ON ((t0.c2) BETWEEN (((t0.c0) IS TRUE)) AND (UPPER(DISTINCT t0.c1))) GROUP BY vt0.c1, t1.c0, t0.c2, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, t1.c0, t0.c2, vt0.c0 FROM t0 CROSS JOIN vt0 ON CAST(((((vt0.c1)AND(-1080567868)))AND(t0.c2)) AS REAL) CROSS JOIN t1 ON ((t0.c2) BETWEEN (((t0.c0) IS TRUE)) AND (UPPER(DISTINCT t0.c1))) GROUP BY vt0.c1, t1.c0, t0.c2, vt0.c0;
SELECT t0.c0, t1.c0, vt0.c0, t0.c1, vt0.c1 FROM t0, t1 FULL OUTER JOIN vt0 ON (NOT (((vt0.c1)==('0.7547869478110187'))));
SELECT ALL t0.c0, t1.c0, vt0.c0, t0.c1, vt0.c1 FROM t0, t1 FULL OUTER JOIN vt0 ON (NOT (((vt0.c1)==('0.7547869478110187')))) WHERE (LIKELIHOOD(vt0.c0, 0.4574559260528186) COLLATE NOCASE) UNION ALL SELECT ALL t0.c0, t1.c0, vt0.c0, t0.c1, vt0.c1 FROM t0, t1 FULL OUTER JOIN vt0 ON (NOT (((vt0.c1)=('0.7547869478110187')))) WHERE ((NOT (LIKELIHOOD(vt0.c0, 0.4574559260528186) COLLATE NOCASE))) UNION ALL SELECT ALL t0.c0, t1.c0, vt0.c0, t0.c1, vt0.c1 FROM t0, t1 FULL OUTER JOIN vt0 ON (NOT (((vt0.c1)==('0.7547869478110187')))) WHERE (((LIKELIHOOD(vt0.c0, 0.4574559260528186) COLLATE NOCASE) ISNULL));
SELECT t0.c0, t1.c0, vt0.c0, t0.c1, vt0.c1 FROM t0, t1 FULL OUTER JOIN vt0 ON (NOT (((vt0.c1)==('0.7547869478110187'))));
SELECT DISTINCT * FROM vt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN t0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN t0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN t0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0 NATURAL JOIN t0;
SELECT ALL t0.c0 FROM t0, vt0, t1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0, t1 WHERE (((x'' IN (-801144392)) IN ())) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, vt0, t1 WHERE ((NOT (((x'' IN (-801144392)) IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, vt0, t1 WHERE (((((x'' IN (-801144392)) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0, t1 GROUP BY t0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((('!E')AND(((MAX(t1.c0)) NOT BETWEEN (COUNT(*)) AND (t1.c0)))))OR(COUNT(MAX(COUNT(*))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((((('!E')AND(((MAX(t1.c0)) NOT BETWEEN (COUNT(*)) AND (t1.c0)))))OR(COUNT(MAX(COUNT(*))))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((((('!E')AND(((MAX(t1.c0)) NOT BETWEEN (COUNT(*)) AND (t1.c0)))))OR(COUNT(MAX(COUNT(*)))))) ISNULL);
SELECT ALL vt0.c1 FROM t0, vt0;
SELECT ALL vt0.c1 FROM t0, vt0 WHERE (((t0.c1) NOT NULL) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c1 FROM t0, vt0 WHERE ((NOT (((t0.c1) NOT NULL) COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c1 FROM t0, vt0 WHERE (((((t0.c1) NOT NULL) COLLATE RTRIM) ISNULL));
SELECT ALL vt0.c1 FROM t0, vt0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (CASE ((((t1.c0)OR(t1.c0)))AND(t1.c0))  WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN ((t1.c0)>>(t1.c0)) WHEN ((((((((x'')OR('8]?98')))AND(t1.c0)))AND(t1.c0)))AND(t1.c0)) THEN (('D7') NOT NULL) WHEN ((t1.c0)IS(t1.c0)) THEN (t1.c0 IN ()) END) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (CASE ((((t1.c0)OR(t1.c0)))AND(t1.c0))  WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN ((t1.c0)>>(t1.c0)) WHEN ((((((((x'')OR('8]?98')))AND(t1.c0)))AND(t1.c0)))AND(t1.c0)) THEN (('D7') NOT NULL) WHEN ((t1.c0)IS(t1.c0)) THEN (t1.c0 IN ()) END))) UNION SELECT DISTINCT * FROM t1 WHERE (((CASE ((((t1.c0)OR(t1.c0)))AND(t1.c0))  WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN ((t1.c0)>>(t1.c0)) WHEN ((((((((x'')OR('8]?98')))AND(t1.c0)))AND(t1.c0)))AND(t1.c0)) THEN (('D7') NOT NULL) WHEN ((t1.c0)IS(t1.c0)) THEN (t1.c0 IN ()) END) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t0.c2 FROM vt0, t1 NOT INDEXED, t0 GROUP BY t0.c2;
SELECT t0.c2 FROM vt0, t1, t0 WHERE (((CAST(t0.c1 AS REAL))<((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM vt0, t1, t0 WHERE ((NOT (((CAST(t0.c1 AS REAL))<((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM vt0, t1, t0 WHERE (((((CAST(t0.c1 AS REAL))<((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM vt0, t1 NOT INDEXED, t0 GROUP BY t0.c2;
SELECT ALL t0.c1, vt0.c0, t0.c0, vt0.c1 FROM vt0, t0, t1 GROUP BY t0.c1, vt0.c0, t0.c0, vt0.c1;
SELECT t0.c1, vt0.c0, t0.c0, vt0.c1 FROM vt0, t0, t1 GROUP BY t0.c1, vt0.c0, t0.c0, vt0.c1 HAVING CASE WHEN CASE WHEN MIN(COUNT(*)) THEN t0.c0 END THEN CASE WHEN SUM('-706808675') THEN TOTAL(GROUP_CONCAT(t1.c0)) WHEN SUM(MAX(GROUP_CONCAT(vt0.c0))) THEN t1.c0 WHEN t0.c2 THEN t0.c2 END ELSE SUM(vt0.c1) END UNION ALL SELECT t0.c1, vt0.c0, t0.c0, vt0.c1 FROM vt0, t0, t1 GROUP BY t0.c1, vt0.c0, t0.c0, vt0.c1 HAVING (NOT (CASE WHEN CASE WHEN MIN(COUNT(*)) THEN t0.c0 END THEN CASE WHEN SUM('-706808675') THEN TOTAL(GROUP_CONCAT(t1.c0)) WHEN SUM(MAX(GROUP_CONCAT(vt0.c0))) THEN t1.c0 WHEN t0.c2 THEN t0.c2 END ELSE SUM(vt0.c1) END)) UNION ALL SELECT ALL t0.c1, vt0.c0, t0.c0, vt0.c1 FROM vt0, t0, t1 GROUP BY t0.c1, vt0.c0, t0.c0, vt0.c1 HAVING ((CASE WHEN CASE WHEN MIN(COUNT(*)) THEN t0.c0 END THEN CASE WHEN SUM('-706808675') THEN TOTAL(GROUP_CONCAT(t1.c0)) WHEN SUM(MAX(GROUP_CONCAT(vt0.c0))) THEN t1.c0 WHEN t0.c2 THEN t0.c2 END ELSE SUM(vt0.c1) END) ISNULL);
SELECT SUM(((((((t0.c1)OR(vt0.c1)))AND(vt0.c1)))LIKE(t0.c1))) FROM t0, t1, vt0 ORDER BY (0.9549630853437607 IN (((vt0.c0) ISNULL), ((vt0.c1)=(NULL)))) ASC, '1739508191';
SELECT t0.c2 FROM t1, t0;
SELECT ALL t0.c2 FROM t1, t0 WHERE (CASE WHEN ((t1.c0)*(t0.c0)) THEN ((t1.c0) IS FALSE) END) UNION ALL SELECT t0.c2 FROM t1, t0 WHERE ((NOT (CASE WHEN ((t1.c0)*(t0.c0)) THEN ((t1.c0) IS FALSE) END))) UNION ALL SELECT t0.c2 FROM t1, t0 WHERE (((CASE WHEN ((t1.c0)*(t0.c0)) THEN ((t1.c0) IS FALSE) END) ISNULL));
SELECT t0.c2 FROM t1, t0;
SELECT DISTINCT * FROM t1, vt0, t0;
SELECT DISTINCT * FROM t1, vt0, t0 WHERE (CASE vt0.c1 COLLATE BINARY  WHEN ((t0.c1) IS FALSE) THEN (((t0.c1))=((t0.c1))) WHEN TRIM(DISTINCT t0.c2, t0.c0) THEN CASE t1.c0  WHEN vt0.c0 THEN t0.c2 END WHEN t0.c1 COLLATE NOCASE THEN CASE x''  WHEN t1.c0 THEN t0.c1 END END) UNION SELECT DISTINCT * FROM t1, vt0, t0 WHERE ((NOT (CASE vt0.c1 COLLATE BINARY  WHEN ((t0.c1) IS FALSE) THEN (((t0.c1))=((t0.c1))) WHEN TRIM(DISTINCT t0.c2, t0.c0) THEN CASE t1.c0  WHEN vt0.c0 THEN t0.c2 END WHEN t0.c1 COLLATE NOCASE THEN CASE x''  WHEN t1.c0 THEN t0.c1 END END))) UNION SELECT DISTINCT * FROM t1, vt0, t0 WHERE (((CASE vt0.c1 COLLATE BINARY  WHEN ((t0.c1) IS FALSE) THEN (((t0.c1))==((t0.c1))) WHEN TRIM(DISTINCT t0.c2, t0.c0) THEN CASE t1.c0  WHEN vt0.c0 THEN t0.c2 END WHEN t0.c1 COLLATE NOCASE THEN CASE x''  WHEN t1.c0 THEN t0.c1 END END) ISNULL));
SELECT DISTINCT * FROM t1, vt0, t0;
SELECT ALL vt0.c0, t1.c0 FROM t1, vt0 GROUP BY vt0.c0, t1.c0;
SELECT vt0.c0, t1.c0 FROM t1, vt0 WHERE (((t1.c0)>=(((t1.c0) NOTNULL)))) GROUP BY vt0.c0, t1.c0 UNION SELECT ALL vt0.c0, t1.c0 FROM t1, vt0 WHERE ((NOT (((t1.c0)>=(((t1.c0) NOTNULL)))))) GROUP BY vt0.c0, t1.c0 UNION SELECT vt0.c0, t1.c0 FROM t1, vt0 WHERE (((((t1.c0)>=(((t1.c0) NOTNULL)))) ISNULL)) GROUP BY vt0.c0, t1.c0;
SELECT ALL vt0.c0, t1.c0 FROM t1, vt0 GROUP BY vt0.c0, t1.c0;
SELECT ALL t0.c1, vt0.c0, t1.c0, vt0.c1, t0.c0 FROM vt0, t1, t0 GROUP BY t0.c1, vt0.c0, t1.c0, vt0.c1, t0.c0;
SELECT t0.c1, vt0.c0, t1.c0, vt0.c1, t0.c0 FROM vt0, t1, t0 GROUP BY t0.c1, vt0.c0, t1.c0, vt0.c1, t0.c0 HAVING ((((t1.c0 COLLATE BINARY)AND(((((t1.c0)OR(COUNT(t0.c2))))AND(x'')))))AND(MIN(MAX(t0.c2)))) UNION ALL SELECT ALL t0.c1, vt0.c0, t1.c0, vt0.c1, t0.c0 FROM vt0, t1, t0 GROUP BY t0.c1, vt0.c0, t1.c0, vt0.c1, t0.c0 HAVING (NOT (((((t1.c0 COLLATE BINARY)AND(((((t1.c0)OR(COUNT(t0.c2))))AND(x'')))))AND(MIN(MAX(t0.c2)))))) UNION ALL SELECT ALL t0.c1, vt0.c0, t1.c0, vt0.c1, t0.c0 FROM vt0, t1, t0 GROUP BY t0.c1, vt0.c0, t1.c0, vt0.c1, t0.c0 HAVING ((((((t1.c0 COLLATE BINARY)AND(((((t1.c0)OR(COUNT(t0.c2))))AND(x'')))))AND(MIN(MAX(t0.c2))))) ISNULL);
SELECT t0.c0, t1.c0, t0.c2, t0.c1 FROM t1 NATURAL JOIN t0;
SELECT ALL t0.c0, t1.c0, t0.c2, t0.c1 FROM t1 NATURAL JOIN t0 WHERE ((((t0.c2 IN ())) IS TRUE)) UNION ALL SELECT t0.c0, t1.c0, t0.c2, t0.c1 FROM t1 NATURAL JOIN t0 WHERE ((NOT ((((t0.c2 IN ())) IS TRUE)))) UNION ALL SELECT ALL t0.c0, t1.c0, t0.c2, t0.c1 FROM t1 NATURAL JOIN t0 WHERE ((((((t0.c2 IN ())) IS TRUE)) ISNULL));
SELECT t0.c0, t1.c0, t0.c2, t0.c1 FROM t1 NATURAL JOIN t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (LAST_INSERT_ROWID()) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (LAST_INSERT_ROWID()))) UNION SELECT DISTINCT * FROM t0 WHERE (((LAST_INSERT_ROWID()) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)) AND ((CAST(0.25621485433885005 AS NUMERIC))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c1)) BETWEEN ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)) AND ((CAST(0.25621485433885005 AS NUMERIC))))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)) AND ((CAST(0.25621485433885005 AS NUMERIC))))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT t0.c0, vt0.c0, t0.c2, vt0.c1 FROM vt0, t1, t0 GROUP BY t0.c0, vt0.c0, t0.c2, vt0.c1;
SELECT t0.c0, vt0.c0, t0.c2, vt0.c1 FROM vt0, t1, t0 GROUP BY t0.c0, vt0.c0, t0.c2, vt0.c1 HAVING ((CAST(0Xffffffffdfb382d2 AS REAL)) IS TRUE) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c2, vt0.c1 FROM vt0, t1, t0 GROUP BY t0.c0, vt0.c0, t0.c2, vt0.c1 HAVING (NOT (((CAST(0Xffffffffdfb382d2 AS REAL)) IS TRUE))) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c2, vt0.c1 FROM vt0, t1, t0 GROUP BY t0.c0, vt0.c0, t0.c2, vt0.c1 HAVING ((((CAST(0Xffffffffdfb382d2 AS REAL)) IS TRUE)) ISNULL);
SELECT t0.c0, vt0.c0, t0.c2, vt0.c1 FROM vt0, t1, t0 GROUP BY t0.c0, vt0.c0, t0.c2, vt0.c1;
SELECT t0.c0, vt0.c0, t0.c2, vt0.c1 FROM vt0, t1, t0 GROUP BY t0.c0, vt0.c0, t0.c2, vt0.c1 HAVING ((CAST(0Xffffffffdfb382d2 AS REAL)) IS TRUE) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c2, vt0.c1 FROM vt0, t1, t0 GROUP BY t0.c0, vt0.c0, t0.c2, vt0.c1 HAVING (NOT (((CAST(0Xffffffffdfb382d2 AS REAL)) IS TRUE))) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c2, vt0.c1 FROM vt0, t1, t0 GROUP BY t0.c0, vt0.c0, t0.c2, vt0.c1 HAVING ((((CAST(0Xffffffffdfb382d2 AS REAL)) IS TRUE)) ISNULL);
SELECT t0.c0, vt0.c0, t0.c2, vt0.c1 FROM vt0, t1, t0 GROUP BY t0.c0, vt0.c0, t0.c2, vt0.c1;
SELECT ALL * FROM vt0, t0, t1;
SELECT * FROM vt0, t0, t1 WHERE (((NULL COLLATE BINARY)IS(((t0.c2)AND(vt0.c1))))) UNION ALL SELECT * FROM vt0, t0, t1 WHERE ((NOT (((NULL COLLATE BINARY)IS(((t0.c2)AND(vt0.c1))))))) UNION ALL SELECT * FROM vt0, t0, t1 WHERE (((((NULL COLLATE BINARY)IS(((t0.c2)AND(vt0.c1))))) ISNULL));
SELECT ALL * FROM vt0, t0, t1;
SELECT DISTINCT vt0.c1, vt0.c0, t0.c1, t1.c0, t0.c2, t0.c0 FROM t1, t0 RIGHT OUTER JOIN vt0 ON ((((LIKE(t0.c0, vt0.c0))OR(LIKELIHOOD(vt0.c1, 0.6467835643814951))))AND(CAST(t0.c0 AS BLOB)));
SELECT DISTINCT vt0.c1, vt0.c0, t0.c1, t1.c0, t0.c2, t0.c0 FROM t1, t0 RIGHT OUTER JOIN vt0 ON ((((LIKE(t0.c0, vt0.c0))OR(LIKELIHOOD(vt0.c1, 0.6467835643814951))))AND(CAST(t0.c0 AS BLOB))) WHERE (NULL) UNION SELECT DISTINCT vt0.c1, vt0.c0, t0.c1, t1.c0, t0.c2, t0.c0 FROM t1, t0 RIGHT OUTER JOIN vt0 ON ((((LIKE(t0.c0, vt0.c0))OR(LIKELIHOOD(vt0.c1, 0.6467835643814951))))AND(CAST(t0.c0 AS BLOB))) WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.c1, vt0.c0, t0.c1, t1.c0, t0.c2, t0.c0 FROM t1, t0 RIGHT OUTER JOIN vt0 ON ((((LIKE(t0.c0, vt0.c0))OR(LIKELIHOOD(vt0.c1, 0.6467835643814951))))AND(CAST(t0.c0 AS BLOB))) WHERE (((NULL) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, t0.c1, t1.c0, t0.c2, t0.c0 FROM t1, t0 RIGHT OUTER JOIN vt0 ON ((((LIKE(t0.c0, vt0.c0))OR(LIKELIHOOD(vt0.c1, 0.6467835643814951))))AND(CAST(t0.c0 AS BLOB)));
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((((t0.c1) BETWEEN (t0.c0) AND (t0.c2)))OR(CAST(t0.c2 AS NUMERIC)))) GROUP BY t0.c0, t0.c1, t0.c2 UNION SELECT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT (((((t0.c1) BETWEEN (t0.c0) AND (t0.c2)))OR(CAST(t0.c2 AS NUMERIC)))))) GROUP BY t0.c0, t0.c1, t0.c2 UNION SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((((((t0.c1) BETWEEN (t0.c0) AND (t0.c2)))OR(CAST(t0.c2 AS NUMERIC)))) ISNULL)) GROUP BY t0.c0, t0.c1, t0.c2;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0, t1.c0, t0.c2, t0.c1 FROM t1, t0;
SELECT t0.c0, t1.c0, t0.c2, t0.c1 FROM t1, t0 WHERE ((((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))) IS FALSE)) UNION ALL SELECT t0.c0, t1.c0, t0.c2, t0.c1 FROM t1, t0 WHERE ((NOT ((((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))) IS FALSE)))) UNION ALL SELECT t0.c0, t1.c0, t0.c2, t0.c1 FROM t1, t0 WHERE ((((((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))) IS FALSE)) ISNULL));
SELECT t0.c0, t1.c0, t0.c2, t0.c1 FROM t1, t0;
SELECT DISTINCT t0.c1, vt0.c1, t1.c0, t0.c2 FROM vt0, t1, t0;
SELECT DISTINCT t0.c1, vt0.c1, t1.c0, t0.c2 FROM vt0, t1, t0 WHERE ((('-1075306300') NOT BETWEEN (t0.c2 COLLATE BINARY) AND ((- (vt0.c0))))) UNION SELECT DISTINCT t0.c1, vt0.c1, t1.c0, t0.c2 FROM vt0, t1, t0 WHERE ((NOT ((('-1075306300') NOT BETWEEN (t0.c2 COLLATE BINARY) AND ((- (vt0.c0))))))) UNION SELECT DISTINCT t0.c1, vt0.c1, t1.c0, t0.c2 FROM vt0, t1, t0 WHERE ((((('-1075306300') NOT BETWEEN (t0.c2 COLLATE BINARY) AND ((- (vt0.c0))))) ISNULL));
SELECT DISTINCT t0.c1, vt0.c1, t1.c0, t0.c2 FROM vt0, t1, t0;
SELECT vt0.c0, t0.c1, vt0.c1, t0.c2, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c1, vt0.c1, t0.c2, t0.c0;
SELECT vt0.c0, t0.c1, vt0.c1, t0.c2, t0.c0 FROM t0, vt0 WHERE (CAST((((0xffffffff86f12789, t0.c1, t0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, t0.c0))) AS TEXT)) GROUP BY vt0.c0, t0.c1, vt0.c1, t0.c2, t0.c0 UNION SELECT vt0.c0, t0.c1, vt0.c1, t0.c2, t0.c0 FROM t0, vt0 WHERE ((NOT (CAST((((0Xffffffff86f12789, t0.c1, t0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, t0.c0))) AS TEXT)))) GROUP BY vt0.c0, t0.c1, vt0.c1, t0.c2, t0.c0 UNION SELECT vt0.c0, t0.c1, vt0.c1, t0.c2, t0.c0 FROM t0, vt0 WHERE (((CAST((((0Xffffffff86f12789, t0.c1, t0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, t0.c0))) AS TEXT)) ISNULL)) GROUP BY vt0.c0, t0.c1, vt0.c1, t0.c2, t0.c0;
SELECT vt0.c0, t0.c1, vt0.c1, t0.c2, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c1, vt0.c1, t0.c2, t0.c0;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING MAX(CHAR(TOTAL(SUM(COUNT(*))))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (MAX(CHAR(TOTAL(SUM(COUNT(*))))))) UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((MAX(CHAR(TOTAL(SUM(COUNT(*)))))) ISNULL);
SELECT ALL SUM(((((t1.c0)=(t1.c0))) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END))) FROM t1 ORDER BY t1.c0 DESC  NULLS FIRST;
SELECT ALL * FROM t1;
SELECT * FROM t1 WHERE (x'a65a') UNION ALL SELECT * FROM t1 WHERE ((NOT (x'a65a'))) UNION ALL SELECT * FROM t1 WHERE (((x'a65a') ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0;
SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0 WHERE (-1979099683) UNION SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((NOT (-1979099683))) UNION SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0 WHERE (((-1979099683) ISNULL));
SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0;
SELECT ALL t0.c0 FROM t1 INDEXED BY i17 CROSS JOIN t0 ON CASE t0.c0  WHEN t0.c1 THEN t0.c2 ELSE x'' END COLLATE RTRIM GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1 INDEXED BY i17 CROSS JOIN t0 ON CASE t0.c0  WHEN t0.c1 THEN t0.c2 ELSE x'' END COLLATE RTRIM WHERE ((((((((t0.c2))==((t0.c2))))OR(((t0.c0) NOT NULL))))AND(t0.c1))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t1 INDEXED BY i17 CROSS JOIN t0 ON CASE t0.c0  WHEN t0.c1 THEN t0.c2 ELSE x'' END COLLATE RTRIM WHERE ((NOT ((((((((t0.c2))=((t0.c2))))OR(((t0.c0) NOT NULL))))AND(t0.c1))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t1 INDEXED BY i17 CROSS JOIN t0 ON CASE t0.c0  WHEN t0.c1 THEN t0.c2 ELSE x'' END COLLATE RTRIM WHERE ((((((((((t0.c2))=((t0.c2))))OR(((t0.c0) NOT NULL))))AND(t0.c1))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1 INDEXED BY i17 CROSS JOIN t0 ON CASE t0.c0  WHEN t0.c1 THEN t0.c2 ELSE x'' END COLLATE RTRIM GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT('1')) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT('1')))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT('1'))) ISNULL);
SELECT * FROM t1;
SELECT ALL * FROM t1 WHERE (SUBSTR(t1.c0 COLLATE NOCASE, ((t1.c0)OR(t1.c0)))) UNION ALL SELECT * FROM t1 WHERE ((NOT (SUBSTR(t1.c0 COLLATE NOCASE, ((t1.c0)OR(t1.c0)))))) UNION ALL SELECT ALL * FROM t1 WHERE (((SUBSTR(t1.c0 COLLATE NOCASE, ((t1.c0)OR(t1.c0)))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT t1.c0, vt0.c0, vt0.c1 FROM t1, vt0;
SELECT DISTINCT t1.c0, vt0.c0, vt0.c1 FROM t1, vt0 WHERE (t1.c0) UNION SELECT DISTINCT t1.c0, vt0.c0, vt0.c1 FROM t1, vt0 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT t1.c0, vt0.c0, vt0.c1 FROM t1, vt0 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT t1.c0, vt0.c0, vt0.c1 FROM t1, vt0;
SELECT ALL vt0.c1, t1.c0 FROM vt0 RIGHT OUTER JOIN t1 ON vt0.c0 GROUP BY vt0.c1, t1.c0;
SELECT ALL vt0.c1, t1.c0 FROM vt0 RIGHT OUTER JOIN t1 ON vt0.c0 WHERE ((NOT ((- (t1.c0))))) GROUP BY vt0.c1, t1.c0 UNION SELECT vt0.c1, t1.c0 FROM vt0 RIGHT OUTER JOIN t1 ON vt0.c0 WHERE ((NOT ((NOT ((- (t1.c0))))))) GROUP BY vt0.c1, t1.c0 UNION SELECT vt0.c1, t1.c0 FROM vt0 RIGHT OUTER JOIN t1 ON vt0.c0 WHERE ((((NOT ((- (t1.c0))))) ISNULL)) GROUP BY vt0.c1, t1.c0;
SELECT ALL vt0.c1, t1.c0 FROM vt0 RIGHT OUTER JOIN t1 ON vt0.c0 GROUP BY vt0.c1, t1.c0;
SELECT t0.c0, vt0.c0, t1.c0 FROM t0, vt0, t1 GROUP BY t0.c0, vt0.c0, t1.c0;
SELECT t0.c0, vt0.c0, t1.c0 FROM t0, vt0, t1 GROUP BY t0.c0, vt0.c0, t1.c0 HAVING CAST(0X1d9e7de AS NUMERIC) UNION ALL SELECT ALL t0.c0, vt0.c0, t1.c0 FROM t0, vt0, t1 GROUP BY t0.c0, vt0.c0, t1.c0 HAVING (NOT (CAST(0x1d9e7de AS NUMERIC))) UNION ALL SELECT t0.c0, vt0.c0, t1.c0 FROM t0, vt0, t1 GROUP BY t0.c0, vt0.c0, t1.c0 HAVING ((CAST(0X1d9e7de AS NUMERIC)) ISNULL);
SELECT t0.c0, vt0.c0, t1.c0 FROM t0, vt0, t1 GROUP BY t0.c0, vt0.c0, t1.c0;
SELECT t0.c0, vt0.c0, t1.c0 FROM t0, vt0, t1 GROUP BY t0.c0, vt0.c0, t1.c0 HAVING CAST(0X1d9e7de AS NUMERIC) UNION ALL SELECT ALL t0.c0, vt0.c0, t1.c0 FROM t0, vt0, t1 GROUP BY t0.c0, vt0.c0, t1.c0 HAVING (NOT (CAST(0x1d9e7de AS NUMERIC))) UNION ALL SELECT t0.c0, vt0.c0, t1.c0 FROM t0, vt0, t1 GROUP BY t0.c0, vt0.c0, t1.c0 HAVING ((CAST(0X1d9e7de AS NUMERIC)) ISNULL);
SELECT t0.c0, vt0.c0, t1.c0 FROM t0, vt0, t1 GROUP BY t0.c0, vt0.c0, t1.c0;
SELECT SUM((((NOT (t0.c2))) NOT BETWEEN (t1.c0) AND (t0.c0))) FROM t1, t0 ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE x'c377' END)/((~ (t0.c0)))) ASC;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((- (x''))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((- (x''))))) UNION ALL SELECT * FROM vt0 WHERE ((((- (x''))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (((t0.c2 COLLATE NOCASE) NOTNULL)) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (((t0.c2 COLLATE NOCASE) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((((t0.c2 COLLATE NOCASE) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0 WHERE ((((t0.c0 IN (t0.c0)))AND((t0.c0 IN (t0.c1))))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 WHERE ((NOT ((((t0.c0 IN (t0.c0)))AND((t0.c0 IN (t0.c1))))))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 NOT INDEXED WHERE ((((((t0.c0 IN (t0.c0)))AND((t0.c0 IN (t0.c1))))) ISNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c0, t0.c2, t1.c0, t0.c1 FROM t1, t0 GROUP BY t0.c0, t0.c2, t1.c0, t0.c1;
SELECT ALL t0.c0, t0.c2, t1.c0, t0.c1 FROM t1, t0 GROUP BY t0.c0, t0.c2, t1.c0, t0.c1 HAVING t0.c1 UNION ALL SELECT ALL t0.c0, t0.c2, t1.c0, t0.c1 FROM t1, t0 GROUP BY t0.c0, t0.c2, t1.c0, t0.c1 HAVING (NOT (t0.c1)) UNION ALL SELECT ALL t0.c0, t0.c2, t1.c0, t0.c1 FROM t1, t0 GROUP BY t0.c0, t0.c2, t1.c0, t0.c1 HAVING ((t0.c1) ISNULL);
SELECT t0.c0, t0.c2, t1.c0, t0.c1 FROM t1, t0 GROUP BY t0.c0, t0.c2, t1.c0, t0.c1;
SELECT ALL t0.c0, t0.c2, t1.c0, t0.c1 FROM t1, t0 GROUP BY t0.c0, t0.c2, t1.c0, t0.c1 HAVING t0.c1 UNION ALL SELECT ALL t0.c0, t0.c2, t1.c0, t0.c1 FROM t1, t0 GROUP BY t0.c0, t0.c2, t1.c0, t0.c1 HAVING (NOT (t0.c1)) UNION ALL SELECT ALL t0.c0, t0.c2, t1.c0, t0.c1 FROM t1, t0 GROUP BY t0.c0, t0.c2, t1.c0, t0.c1 HAVING ((t0.c1) ISNULL);
SELECT t0.c0, t0.c2, t1.c0, t0.c1 FROM t1, t0 GROUP BY t0.c0, t0.c2, t1.c0, t0.c1;
SELECT t0.c2, vt0.c1, vt0.c0 FROM t0, vt0;
SELECT ALL t0.c2, vt0.c1, vt0.c0 FROM t0, vt0 WHERE (((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2))) IN (((vt0.c0)-(t0.c2)), (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))))) UNION ALL SELECT t0.c2, vt0.c1, vt0.c0 FROM t0, vt0 WHERE ((NOT (((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2))) IN (((vt0.c0)-(t0.c2)), (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))))))) UNION ALL SELECT t0.c2, vt0.c1, vt0.c0 FROM t0, vt0 WHERE (((((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2))) IN (((vt0.c0)-(t0.c2)), (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))))) ISNULL));
SELECT t0.c2, vt0.c1, vt0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM vt0, t0, t1;
SELECT DISTINCT * FROM vt0, t0, t1 WHERE (((((((vt0.c0)&(vt0.c0)))AND(((vt0.c1)<(t0.c1)))))AND((((t1.c0)) BETWEEN ((t0.c1)) AND ((t0.c1)))))) UNION SELECT DISTINCT * FROM vt0, t0, t1 WHERE ((NOT (((((((vt0.c0)&(vt0.c0)))AND(((vt0.c1)<(t0.c1)))))AND((((t1.c0)) BETWEEN ((t0.c1)) AND ((t0.c1)))))))) UNION SELECT DISTINCT * FROM vt0, t0, t1 WHERE (((((((((vt0.c0)&(vt0.c0)))AND(((vt0.c1)<(t0.c1)))))AND((((t1.c0)) BETWEEN ((t0.c1)) AND ((t0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0, t1;
SELECT vt0.c0, t0.c2, vt0.c1, t1.c0 FROM t0, vt0, t1 GROUP BY vt0.c0, t0.c2, vt0.c1, t1.c0;
SELECT ALL vt0.c0, t0.c2, vt0.c1, t1.c0 FROM t0, vt0, t1 WHERE ((+ ((vt0.c0 IN (t1.c0))))) GROUP BY vt0.c0, t0.c2, vt0.c1, t1.c0 UNION SELECT ALL vt0.c0, t0.c2, vt0.c1, t1.c0 FROM t0, vt0, t1 WHERE ((NOT ((+ ((vt0.c0 IN (t1.c0))))))) GROUP BY vt0.c0, t0.c2, vt0.c1, t1.c0 UNION SELECT ALL vt0.c0, t0.c2, vt0.c1, t1.c0 FROM t0, vt0, t1 WHERE ((((+ ((vt0.c0 IN (t1.c0))))) ISNULL)) GROUP BY vt0.c0, t0.c2, vt0.c1, t1.c0;
SELECT vt0.c0, t0.c2, vt0.c1, t1.c0 FROM t0, vt0, t1 GROUP BY vt0.c0, t0.c2, vt0.c1, t1.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING AVG(GROUP_CONCAT(SUM(vt0.c1))) COLLATE BINARY UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (AVG(GROUP_CONCAT(SUM(vt0.c1))) COLLATE BINARY)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((AVG(GROUP_CONCAT(SUM(vt0.c1))) COLLATE BINARY) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (((CAST(t0.c2 AS TEXT)) IS TRUE)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((CAST(t0.c2 AS TEXT)) IS TRUE)))) UNION ALL SELECT * FROM t0 WHERE (((((CAST(t0.c2 AS TEXT)) IS TRUE)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT vt0.c1 FROM t0 INNER JOIN vt0 ON 0.9549630853437607;
SELECT DISTINCT vt0.c1 FROM t0 INNER JOIN vt0 ON 0.9549630853437607 WHERE (CASE WHEN LIKELY(DISTINCT '') THEN ((t0.c2)GLOB(t0.c0)) ELSE CAST(t0.c2 AS TEXT) END) UNION SELECT DISTINCT vt0.c1 FROM t0 INNER JOIN vt0 ON 0.9549630853437607 WHERE ((NOT (CASE WHEN LIKELY(DISTINCT '') THEN ((t0.c2)GLOB(t0.c0)) ELSE CAST(t0.c2 AS TEXT) END))) UNION SELECT DISTINCT vt0.c1 FROM t0 INNER JOIN vt0 ON 0.9549630853437607 WHERE (((CASE WHEN LIKELY(DISTINCT '') THEN ((t0.c2)GLOB(t0.c0)) ELSE CAST(t0.c2 AS TEXT) END) ISNULL));
SELECT DISTINCT vt0.c1 FROM t0 INNER JOIN vt0 ON 0.9549630853437607;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE ((NOT (t1.c0)) COLLATE RTRIM) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((NOT (t1.c0)) COLLATE RTRIM))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((((NOT (t1.c0)) COLLATE RTRIM) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t0.c1, t0.c0, vt0.c1, vt0.c0, t1.c0 FROM vt0 RIGHT OUTER JOIN t0 ON x'' RIGHT OUTER JOIN t1 ON t0.c1 GROUP BY t0.c1, t0.c0, vt0.c1, vt0.c0, t1.c0;
SELECT t0.c1, t0.c0, vt0.c1, vt0.c0, t1.c0 FROM vt0 RIGHT OUTER JOIN t0 ON x'' RIGHT OUTER JOIN t1 ON t0.c1 GROUP BY t0.c1, t0.c0, vt0.c1, vt0.c0, t1.c0 HAVING ((GROUP_CONCAT(0.03329345129410055)) BETWEEN (t0.c1 COLLATE BINARY) AND (AVG(SUM(vt0.c0)))) UNION ALL SELECT t0.c1, t0.c0, vt0.c1, vt0.c0, t1.c0 FROM vt0 RIGHT OUTER JOIN t0 ON x'' RIGHT OUTER JOIN t1 ON t0.c1 GROUP BY t0.c1, t0.c0, vt0.c1, vt0.c0, t1.c0 HAVING (NOT (((GROUP_CONCAT(0.03329345129410055)) BETWEEN (t0.c1 COLLATE BINARY) AND (AVG(SUM(vt0.c0)))))) UNION ALL SELECT t0.c1, t0.c0, vt0.c1, vt0.c0, t1.c0 FROM vt0 RIGHT OUTER JOIN t0 ON x'' RIGHT OUTER JOIN t1 ON t0.c1 GROUP BY t0.c1, t0.c0, vt0.c1, vt0.c0, t1.c0 HAVING ((((GROUP_CONCAT(0.03329345129410055)) BETWEEN (t0.c1 COLLATE BINARY) AND (AVG(SUM(vt0.c0))))) ISNULL);
SELECT ALL MIN(CAST(vt0.c0 COLLATE NOCASE AS BLOB)) FROM t0, vt0;
SELECT * FROM vt0, t1, t0;
SELECT ALL * FROM vt0, t1, t0 WHERE (t0.c1 COLLATE BINARY) UNION ALL SELECT ALL * FROM vt0, t1, t0 WHERE ((NOT (t0.c1 COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt0, t1, t0 WHERE (((t0.c1 COLLATE BINARY) ISNULL));
SELECT * FROM vt0, t1, t0;
SELECT DISTINCT t0.c2, t0.c1, t1.c0 FROM t1, t0;
SELECT DISTINCT t0.c2, t0.c1, t1.c0 FROM t1, t0 WHERE (t0.c2 COLLATE BINARY) UNION SELECT DISTINCT t0.c2, t0.c1, t1.c0 FROM t1, t0 WHERE ((NOT (t0.c2 COLLATE BINARY))) UNION SELECT DISTINCT t0.c2, t0.c1, t1.c0 FROM t1, t0 WHERE (((t0.c2 COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c2, t0.c1, t1.c0 FROM t1, t0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((((((-910156393))<((t1.c0)))) BETWEEN (CAST(t1.c0 AS REAL)) AND ((t1.c0 IN ())))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((((((-910156393))<((t1.c0)))) BETWEEN (CAST(t1.c0 AS REAL)) AND ((t1.c0 IN ())))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((((((-910156393))<((t1.c0)))) BETWEEN (CAST(t1.c0 AS REAL)) AND ((t1.c0 IN ())))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT vt0.c0, t0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c1;
SELECT ALL vt0.c0, t0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c1 HAVING UPPER(MAX(TOTAL(MAX(vt0.c0)))) UNION ALL SELECT vt0.c0, t0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c1 HAVING (NOT (UPPER(MAX(TOTAL(MAX(vt0.c0)))))) UNION ALL SELECT vt0.c0, t0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c1 HAVING ((UPPER(MAX(TOTAL(MAX(vt0.c0))))) ISNULL);
SELECT ALL t0.c2, vt0.c0, vt0.c1, t0.c1 FROM t0, vt0 CROSS JOIN t1 ON (0.19338820423793202 IN ()) COLLATE RTRIM;
SELECT ALL t0.c2, vt0.c0, vt0.c1, t0.c1 FROM t0, vt0 CROSS JOIN t1 ON (0.19338820423793202 IN ()) COLLATE RTRIM WHERE (((t0.c0) NOT NULL) COLLATE BINARY) UNION ALL SELECT t0.c2, vt0.c0, vt0.c1, t0.c1 FROM t0, vt0 CROSS JOIN t1 ON (0.19338820423793202 IN ()) COLLATE RTRIM WHERE ((NOT (((t0.c0) NOT NULL) COLLATE BINARY))) UNION ALL SELECT t0.c2, vt0.c0, vt0.c1, t0.c1 FROM t0 NOT INDEXED, vt0 CROSS JOIN t1 ON (0.19338820423793202 IN ()) COLLATE RTRIM WHERE (((((t0.c0) NOT NULL) COLLATE BINARY) ISNULL));
SELECT ALL t0.c2, vt0.c0, vt0.c1, t0.c1 FROM t0, vt0 CROSS JOIN t1 ON (0.19338820423793202 IN ()) COLLATE RTRIM;
SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0;
SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0 WHERE (t0.c2) UNION SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((NOT (t0.c2))) UNION SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0 WHERE (((t0.c2) ISNULL));
SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0;
SELECT t0.c0, t1.c0, t0.c1, t0.c2 FROM vt0, t0, t1 GROUP BY t0.c0, t1.c0, t0.c1, t0.c2;
SELECT t0.c0, t1.c0, t0.c1, t0.c2 FROM vt0, t0, t1 WHERE (((((vt0.c0)<>(vt0.c0))) BETWEEN (CAST(t0.c1 AS TEXT)) AND (t0.c1))) GROUP BY t0.c0, t1.c0, t0.c1, t0.c2 UNION SELECT ALL t0.c0, t1.c0, t0.c1, t0.c2 FROM vt0, t0, t1 WHERE ((NOT (((((vt0.c0)!=(vt0.c0))) BETWEEN (CAST(t0.c1 AS TEXT)) AND (t0.c1))))) GROUP BY t0.c0, t1.c0, t0.c1, t0.c2 UNION SELECT ALL t0.c0, t1.c0, t0.c1, t0.c2 FROM vt0, t0, t1 WHERE (((((((vt0.c0)!=(vt0.c0))) BETWEEN (CAST(t0.c1 AS TEXT)) AND (t0.c1))) ISNULL)) GROUP BY t0.c0, t1.c0, t0.c1, t0.c2;
SELECT t0.c0, t1.c0, t0.c1, t0.c2 FROM vt0, t0, t1 GROUP BY t0.c0, t1.c0, t0.c1, t0.c2;
SELECT ALL t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c2)) COLLATE NOCASE GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c2)) COLLATE NOCASE GROUP BY t0.c0 HAVING TOTAL(CAST(t0.c0 AS NUMERIC)) UNION ALL SELECT ALL t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c2)) COLLATE NOCASE GROUP BY t0.c0 HAVING (NOT (TOTAL(CAST(t0.c0 AS NUMERIC)))) UNION ALL SELECT ALL t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c2)) COLLATE NOCASE GROUP BY t0.c0 HAVING ((TOTAL(CAST(t0.c0 AS NUMERIC))) ISNULL);
SELECT ALL t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c2)) COLLATE NOCASE GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c2)) COLLATE NOCASE GROUP BY t0.c0 HAVING TOTAL(CAST(t0.c0 AS NUMERIC)) UNION ALL SELECT ALL t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c2)) COLLATE NOCASE GROUP BY t0.c0 HAVING (NOT (TOTAL(CAST(t0.c0 AS NUMERIC)))) UNION ALL SELECT ALL t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c2)) COLLATE NOCASE GROUP BY t0.c0 HAVING ((TOTAL(CAST(t0.c0 AS NUMERIC))) ISNULL);
SELECT ALL t0.c0 FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c2)) COLLATE NOCASE GROUP BY t0.c0;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((((t0.c2)<<(t0.c0)))|(((t0.c2)+(t0.c2))))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((t0.c2)<<(t0.c0)))|(((t0.c2)+(t0.c2))))))) UNION ALL SELECT * FROM t0 WHERE (((((((t0.c2)<<(t0.c0)))|(((t0.c2)+(t0.c2))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (load_extension('-454919513' COLLATE BINARY, CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE NULL END)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (load_extension('-454919513' COLLATE BINARY, CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE NULL END)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((load_extension('-454919513' COLLATE BINARY, CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE NULL END)) ISNULL));
SELECT ALL vt0.c0, t0.c0 FROM t0, t1, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, t1, vt0 WHERE (CASE (((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c2)))  WHEN ABS(vt0.c1) THEN 0.996496904897579 ELSE ((((t1.c0)AND(vt0.c0)))OR(t1.c0)) END) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0, t1, vt0 WHERE ((NOT (CASE (((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c2)))  WHEN ABS(vt0.c1) THEN 0.996496904897579 ELSE ((((t1.c0)AND(vt0.c0)))OR(t1.c0)) END))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0, t1, vt0 WHERE (((CASE (((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c2)))  WHEN ABS(vt0.c1) THEN 0.996496904897579 ELSE ((((t1.c0)AND(vt0.c0)))OR(t1.c0)) END) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, t1, vt0 GROUP BY vt0.c0, t0.c0;
SELECT t0.c1, t1.c0, vt0.c0, t0.c2 FROM t1, vt0, t0 NOT INDEXED GROUP BY t0.c1, t1.c0, vt0.c0, t0.c2;
SELECT ALL t0.c1, t1.c0, vt0.c0, t0.c2 FROM t1, vt0, t0 GROUP BY t0.c1, t1.c0, vt0.c0, t0.c2 HAVING GROUP_CONCAT(MIN(AVG(COUNT(*))) COLLATE NOCASE) UNION ALL SELECT t0.c1, t1.c0, vt0.c0, t0.c2 FROM t1, vt0, t0 GROUP BY t0.c1, t1.c0, vt0.c0, t0.c2 HAVING (NOT (GROUP_CONCAT(MIN(AVG(COUNT(*))) COLLATE NOCASE))) UNION ALL SELECT t0.c1, t1.c0, vt0.c0, t0.c2 FROM t1, vt0, t0 GROUP BY t0.c1, t1.c0, vt0.c0, t0.c2 HAVING ((GROUP_CONCAT(MIN(AVG(COUNT(*))) COLLATE NOCASE)) ISNULL);
SELECT ALL vt0.c0 FROM t1 FULL OUTER JOIN vt0 ON CASE t1.c0 COLLATE NOCASE  WHEN DATETIME(t1.c0, vt0.c0, vt0.c0, t1.c0, vt0.c1) THEN ((vt0.c1) BETWEEN (t1.c0) AND (vt0.c0)) ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (t1.c0)) END;
SELECT ALL vt0.c0 FROM t1 FULL OUTER JOIN vt0 ON CASE t1.c0 COLLATE NOCASE  WHEN DATETIME(t1.c0, vt0.c0, vt0.c0, t1.c0, vt0.c1) THEN ((vt0.c1) BETWEEN (t1.c0) AND (vt0.c0)) ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (t1.c0)) END WHERE ((- ((t1.c0 IN ())))) UNION ALL SELECT vt0.c0 FROM t1 FULL OUTER JOIN vt0 ON CASE t1.c0 COLLATE NOCASE  WHEN DATETIME(t1.c0, vt0.c0, vt0.c0, t1.c0, vt0.c1) THEN ((vt0.c1) BETWEEN (t1.c0) AND (vt0.c0)) ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (t1.c0)) END WHERE ((NOT ((- ((t1.c0 IN ())))))) UNION ALL SELECT ALL vt0.c0 FROM t1 FULL OUTER JOIN vt0 ON CASE t1.c0 COLLATE NOCASE  WHEN DATETIME(t1.c0, vt0.c0, vt0.c0, t1.c0, vt0.c1) THEN ((vt0.c1) BETWEEN (t1.c0) AND (vt0.c0)) ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (t1.c0)) END WHERE ((((- ((t1.c0 IN ())))) ISNULL));
SELECT ALL vt0.c0 FROM t1 FULL OUTER JOIN vt0 ON CASE t1.c0 COLLATE NOCASE  WHEN DATETIME(t1.c0, vt0.c0, vt0.c0, t1.c0, vt0.c1) THEN ((vt0.c1) BETWEEN (t1.c0) AND (vt0.c0)) ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (t1.c0)) END;
SELECT DISTINCT * FROM t0, t1, vt0;
SELECT DISTINCT * FROM t0, t1, vt0 WHERE (((((((((((((t0.c0)AND(t1.c0)))OR(t0.c2)))AND(t0.c0)))OR((vt0.c1 IN ()))))OR(((t0.c0)IS(t0.c0)))))OR(((((t0.c0)AND(1.067554036E9)))AND(vt0.c0))))) UNION SELECT DISTINCT * FROM t0, t1, vt0 WHERE ((NOT (((((((((((((t0.c0)AND(t1.c0)))OR(t0.c2)))AND(t0.c0)))OR((vt0.c1 IN ()))))OR(((t0.c0)IS(t0.c0)))))OR(((((t0.c0)AND(1.067554036E9)))AND(vt0.c0))))))) UNION SELECT DISTINCT * FROM t0, t1, vt0 WHERE (((((((((((((((t0.c0)AND(t1.c0)))OR(t0.c2)))AND(t0.c0)))OR((vt0.c1 IN ()))))OR(((t0.c0)IS(t0.c0)))))OR(((((t0.c0)AND(1.067554036E9)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, t1, vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (NULL) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL t1.c0, vt0.c1, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c1, vt0.c0;
SELECT t1.c0, vt0.c1, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c1, vt0.c0 HAVING CASE GROUP_CONCAT(COUNT(vt0.c0))  WHEN IFNULL(t1.c0, AVG(t1.c0)) THEN ((SUM(COUNT(0.571371980095751))) IS FALSE) END UNION ALL SELECT t1.c0, vt0.c1, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c1, vt0.c0 HAVING (NOT (CASE GROUP_CONCAT(COUNT(vt0.c0))  WHEN IFNULL(t1.c0, AVG(t1.c0)) THEN ((SUM(COUNT(0.571371980095751))) IS FALSE) END)) UNION ALL SELECT t1.c0, vt0.c1, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c1, vt0.c0 HAVING ((CASE GROUP_CONCAT(COUNT(vt0.c0))  WHEN IFNULL(t1.c0, AVG(t1.c0)) THEN ((SUM(COUNT(0.571371980095751))) IS FALSE) END) ISNULL);
SELECT * FROM t0, t1;
SELECT ALL * FROM t0, t1 WHERE (((((t0.c2)||(x''))) ISNULL)) UNION ALL SELECT ALL * FROM t0, t1 WHERE ((NOT (((((t0.c2)||(x''))) ISNULL)))) UNION ALL SELECT ALL * FROM t0, t1 WHERE (((((((t0.c2)||(x''))) ISNULL)) ISNULL));
SELECT * FROM t0, t1;
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE BINARY) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT ((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE BINARY))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT vt0.c1 FROM vt0 LEFT OUTER JOIN t1 ON ((x'')||((~ (vt0.c1)))) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 LEFT OUTER JOIN t1 ON ((x'')||((~ (vt0.c1)))) WHERE (((vt0.c1 COLLATE BINARY) NOT NULL)) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 LEFT OUTER JOIN t1 ON ((x'')||((~ (vt0.c1)))) WHERE ((NOT (((vt0.c1 COLLATE BINARY) NOT NULL)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 LEFT OUTER JOIN t1 ON ((x'')||((~ (vt0.c1)))) WHERE (((((vt0.c1 COLLATE BINARY) NOT NULL)) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 LEFT OUTER JOIN t1 ON ((x'')||((~ (vt0.c1)))) GROUP BY vt0.c1;
SELECT t0.c2, t0.c1 FROM t0, vt0 INNER JOIN t1 ON CASE CASE WHEN t0.c1 THEN t0.c1 ELSE vt0.c0 END  WHEN ((t1.c0)==(t1.c0)) THEN (t0.c0 IN ()) ELSE ((t1.c0) NOTNULL) END GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM t0, vt0 INNER JOIN t1 ON CASE CASE WHEN t0.c1 THEN t0.c1 ELSE vt0.c0 END  WHEN ((t1.c0)=(t1.c0)) THEN (t0.c0 IN ()) ELSE ((t1.c0) NOTNULL) END GROUP BY t0.c2, t0.c1 HAVING GROUP_CONCAT(MAX(MAX(t0.c1))) UNION ALL SELECT ALL t0.c2, t0.c1 FROM t0, vt0 INNER JOIN t1 ON CASE CASE WHEN t0.c1 THEN t0.c1 ELSE vt0.c0 END  WHEN ((t1.c0)=(t1.c0)) THEN (t0.c0 IN ()) ELSE ((t1.c0) NOTNULL) END GROUP BY t0.c2, t0.c1 HAVING (NOT (GROUP_CONCAT(MAX(MAX(t0.c1))))) UNION ALL SELECT ALL t0.c2, t0.c1 FROM t0, vt0 INNER JOIN t1 ON CASE CASE WHEN t0.c1 THEN t0.c1 ELSE vt0.c0 END  WHEN ((t1.c0)==(t1.c0)) THEN (t0.c0 IN ()) ELSE ((t1.c0) NOTNULL) END GROUP BY t0.c2, t0.c1 HAVING ((GROUP_CONCAT(MAX(MAX(t0.c1)))) ISNULL);
SELECT ALL t1.c0, t0.c0, t0.c2 FROM t0, t1, vt0;
SELECT ALL t1.c0, t0.c0, t0.c2 FROM t0, t1, vt0 WHERE ('[Gb]') UNION ALL SELECT t1.c0, t0.c0, t0.c2 FROM t0, t1, vt0 WHERE ((NOT ('[Gb]'))) UNION ALL SELECT t1.c0, t0.c0, t0.c2 FROM t0, t1, vt0 WHERE ((('[Gb]') ISNULL));
SELECT ALL t1.c0, t0.c0, t0.c2 FROM t0, t1, vt0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)OR(CASE t1.c0  WHEN t1.c0 THEN -955698566 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE '1573453502' END)))OR((t1.c0 IN ())))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)OR(CASE t1.c0  WHEN t1.c0 THEN -955698566 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE '1573453502' END)))OR((t1.c0 IN ())))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)OR(CASE t1.c0  WHEN t1.c0 THEN -955698566 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE '1573453502' END)))OR((t1.c0 IN ())))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL t0.c1, t1.c0, t0.c0, t0.c2, vt0.c0 FROM t0, t1, vt0 GROUP BY t0.c1, t1.c0, t0.c0, t0.c2, vt0.c0;
SELECT t0.c1, t1.c0, t0.c0, t0.c2, vt0.c0 FROM t0, t1, vt0 WHERE (CASE WHEN t0.c0 THEN t0.c0 END COLLATE NOCASE) GROUP BY t0.c1, t1.c0, t0.c0, t0.c2, vt0.c0 UNION SELECT ALL t0.c1, t1.c0, t0.c0, t0.c2, vt0.c0 FROM t0, t1, vt0 WHERE ((NOT (CASE WHEN t0.c0 THEN t0.c0 END COLLATE NOCASE))) GROUP BY t0.c1, t1.c0, t0.c0, t0.c2, vt0.c0 UNION SELECT t0.c1, t1.c0, t0.c0, t0.c2, vt0.c0 FROM t0, t1, vt0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END COLLATE NOCASE) ISNULL)) GROUP BY t0.c1, t1.c0, t0.c0, t0.c2, vt0.c0;
SELECT ALL t0.c1, t1.c0, t0.c0, t0.c2, vt0.c0 FROM t0, t1, vt0 GROUP BY t0.c1, t1.c0, t0.c0, t0.c2, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING COUNT(0.8520054547925249) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(0.8520054547925249))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(0.8520054547925249)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING COUNT(0.8520054547925249) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(0.8520054547925249))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(0.8520054547925249)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE (CAST(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS TEXT)) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (CAST(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS TEXT)))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((CAST(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS TEXT)) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (((((t0.c2) IS TRUE)) BETWEEN (((vt0.c0)LIKE(x''))) AND ((~ (t0.c1))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (((((t0.c2) IS TRUE)) BETWEEN (((vt0.c0)LIKE(x''))) AND ((~ (t0.c1))))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((((((t0.c2) IS TRUE)) BETWEEN (((vt0.c0)LIKE(x''))) AND ((~ (t0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((CASE t0.c1  WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END) BETWEEN (CAST(t0.c2 AS BLOB)) AND (((0.8748906906953829) NOTNULL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 NOT INDEXED WHERE ((NOT (((CASE t0.c1  WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END) BETWEEN (CAST(t0.c2 AS BLOB)) AND (((0.8748906906953829) NOTNULL)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((CASE t0.c1  WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END) BETWEEN (CAST(t0.c2 AS BLOB)) AND (((0.8748906906953829) NOTNULL)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0, vt0.c1, t0.c0, t0.c2, t1.c0 FROM t1, t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0, t0.c2, t1.c0;
SELECT ALL vt0.c0, vt0.c1, t0.c0, t0.c2, t1.c0 FROM t1, t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0, t0.c2, t1.c0 HAVING GROUP_CONCAT(AVG(vt0.c1) COLLATE BINARY) UNION ALL SELECT vt0.c0, vt0.c1, t0.c0, t0.c2, t1.c0 FROM t1, t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0, t0.c2, t1.c0 HAVING (NOT (GROUP_CONCAT(AVG(vt0.c1) COLLATE BINARY))) UNION ALL SELECT vt0.c0, vt0.c1, t0.c0, t0.c2, t1.c0 FROM t1, t0, vt0 GROUP BY vt0.c0, vt0.c1, t0.c0, t0.c2, t1.c0 HAVING ((GROUP_CONCAT(AVG(vt0.c1) COLLATE BINARY)) ISNULL);
SELECT ALL * FROM vt0, t1;
SELECT * FROM vt0, t1 WHERE ((((NOT (t1.c0))) ISNULL)) UNION ALL SELECT * FROM vt0, t1 WHERE ((NOT ((((NOT (t1.c0))) ISNULL)))) UNION ALL SELECT * FROM vt0, t1 WHERE ((((((NOT (t1.c0))) ISNULL)) ISNULL));
SELECT ALL * FROM vt0, t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (CASE x''  WHEN UPPER(DISTINCT t1.c0) THEN (t1.c0 IN ()) WHEN '1941558977' THEN LIKE(t1.c0, t1.c0) WHEN (NOT (t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 0.1243172802236513 ELSE t1.c0 END END) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (CASE x''  WHEN UPPER(DISTINCT t1.c0) THEN (t1.c0 IN ()) WHEN '1941558977' THEN LIKE(t1.c0, t1.c0) WHEN (NOT (t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 0.1243172802236513 ELSE t1.c0 END END))) UNION SELECT DISTINCT * FROM t1 WHERE (((CASE x''  WHEN UPPER(DISTINCT t1.c0) THEN (t1.c0 IN ()) WHEN '1941558977' THEN LIKE(t1.c0, t1.c0) WHEN (NOT (t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 0.1243172802236513 ELSE t1.c0 END END) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL vt0.c0, t0.c0 FROM t1, t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t1, t0, vt0 WHERE ((((vt0.c0)*(t0.c1)) IN (((t1.c0)&(t0.c1)), CAST(t0.c0 AS NUMERIC)))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t1, t0, vt0 WHERE ((NOT ((((vt0.c0)*(t0.c1)) IN (((t1.c0)&(t0.c1)), CAST(t0.c0 AS NUMERIC)))))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t1, t0, vt0 WHERE ((((((vt0.c0)*(t0.c1)) IN (((t1.c0)&(t0.c1)), CAST(t0.c0 AS NUMERIC)))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t1, t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING SUM(SUM(vt0.c0)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (SUM(SUM(vt0.c0)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((SUM(SUM(vt0.c0))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (t0.c1) UNION ALL SELECT * FROM t0 WHERE ((NOT (t0.c1))) UNION ALL SELECT * FROM t0 WHERE (((t0.c1) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((+ (((vt0.c1)<=(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((+ (((vt0.c1)<=(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((+ (((vt0.c1)<=(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL t0.c2, t0.c1, t0.c0, vt0.c0, vt0.c1 FROM t0 NOT INDEXED, vt0 GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0, vt0.c1;
SELECT ALL t0.c2, t0.c1, t0.c0, vt0.c0, vt0.c1 FROM t0, vt0 WHERE (t0.c2) GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0, vt0.c1 UNION SELECT t0.c2, t0.c1, t0.c0, vt0.c0, vt0.c1 FROM t0, vt0 WHERE ((NOT (t0.c2))) GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0, vt0.c1 UNION SELECT t0.c2, t0.c1, t0.c0, vt0.c0, vt0.c1 FROM t0, vt0 WHERE (((t0.c2) ISNULL)) GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0, vt0.c1;
SELECT ALL t0.c2, t0.c1, t0.c0, vt0.c0, vt0.c1 FROM t0 NOT INDEXED, vt0 GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0, vt0.c1;
SELECT t0.c2, t0.c0 FROM t1, vt0, t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t1, vt0, t0 GROUP BY t0.c2, t0.c0 HAVING CASE GROUP_CONCAT(vt0.c1)  WHEN (((vt0.c0)) BETWEEN ((SUM(x''))) AND ((t0.c0))) THEN ((COUNT(t0.c1))*(t1.c0)) END UNION ALL SELECT ALL t0.c2, t0.c0 FROM t1, vt0, t0 GROUP BY t0.c2, t0.c0 HAVING (NOT (CASE GROUP_CONCAT(vt0.c1)  WHEN (((vt0.c0)) BETWEEN ((SUM(x''))) AND ((t0.c0))) THEN ((COUNT(t0.c1))*(t1.c0)) END)) UNION ALL SELECT t0.c2, t0.c0 FROM t1, vt0, t0 GROUP BY t0.c2, t0.c0 HAVING ((CASE GROUP_CONCAT(vt0.c1)  WHEN (((vt0.c0)) BETWEEN ((SUM(x''))) AND ((t0.c0))) THEN ((COUNT(t0.c1))*(t1.c0)) END) ISNULL);
SELECT t0.c2, t0.c0 FROM t1, vt0, t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t1, vt0, t0 GROUP BY t0.c2, t0.c0 HAVING CASE GROUP_CONCAT(vt0.c1)  WHEN (((vt0.c0)) BETWEEN ((SUM(x''))) AND ((t0.c0))) THEN ((COUNT(t0.c1))*(t1.c0)) END UNION ALL SELECT ALL t0.c2, t0.c0 FROM t1, vt0, t0 GROUP BY t0.c2, t0.c0 HAVING (NOT (CASE GROUP_CONCAT(vt0.c1)  WHEN (((vt0.c0)) BETWEEN ((SUM(x''))) AND ((t0.c0))) THEN ((COUNT(t0.c1))*(t1.c0)) END)) UNION ALL SELECT t0.c2, t0.c0 FROM t1, vt0, t0 GROUP BY t0.c2, t0.c0 HAVING ((CASE GROUP_CONCAT(vt0.c1)  WHEN (((vt0.c0)) BETWEEN ((SUM(x''))) AND ((t0.c0))) THEN ((COUNT(t0.c1))*(t1.c0)) END) ISNULL);
SELECT t0.c2, t0.c0 FROM t1, vt0, t0 GROUP BY t0.c2, t0.c0;
SELECT ALL TOTAL(((CASE WHEN '1213767018' THEN t1.c0 ELSE t0.c2 END) NOT BETWEEN (((((t0.c2)AND(t0.c0)))OR(NULL))) AND (((vt0.c1)>>(0.8008911338594545))))) FROM t1, t0, vt0 ORDER BY ((((t1.c0) NOT BETWEEN (t0.c2) AND (t1.c0)))+(((vt0.c0)==(NULL)))) DESC;
SELECT ALL t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (CAST(((((t1.c0)OR(t1.c0)))AND(t1.c0)) AS INTEGER)) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (CAST(((((t1.c0)OR(t1.c0)))AND(t1.c0)) AS INTEGER)))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((CAST(((((t1.c0)OR(t1.c0)))AND(t1.c0)) AS INTEGER)) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT t0.c1 FROM t0;
SELECT DISTINCT t0.c1 FROM t0 WHERE (CAST(CASE -691180027  WHEN t0.c2 THEN t0.c2 ELSE NULL END AS BLOB)) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE ((NOT (CAST(CASE -691180027  WHEN t0.c2 THEN t0.c2 ELSE NULL END AS BLOB)))) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE (((CAST(CASE -691180027  WHEN t0.c2 THEN t0.c2 ELSE NULL END AS BLOB)) ISNULL));
SELECT DISTINCT t0.c1 FROM t0;
SELECT vt0.c1, t1.c0, vt0.c0 FROM vt0, t1 GROUP BY vt0.c1, t1.c0, vt0.c0;
SELECT vt0.c1, t1.c0, vt0.c0 FROM vt0, t1 WHERE ((+ ((- (t1.c0))))) GROUP BY vt0.c1, t1.c0, vt0.c0 UNION SELECT ALL vt0.c1, t1.c0, vt0.c0 FROM vt0, t1 WHERE ((NOT ((+ ((- (t1.c0))))))) GROUP BY vt0.c1, t1.c0, vt0.c0 UNION SELECT vt0.c1, t1.c0, vt0.c0 FROM vt0, t1 WHERE ((((+ ((- (t1.c0))))) ISNULL)) GROUP BY vt0.c1, t1.c0, vt0.c0;
SELECT vt0.c1, t1.c0, vt0.c0 FROM vt0, t1 GROUP BY vt0.c1, t1.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0, vt0.c1, t0.c2 FROM t0, vt0 GROUP BY t0.c0, vt0.c0, vt0.c1, t0.c2;
SELECT ALL t0.c0, vt0.c0, vt0.c1, t0.c2 FROM t0, vt0 GROUP BY t0.c0, vt0.c0, vt0.c1, t0.c2 HAVING t0.c0 COLLATE RTRIM UNION ALL SELECT t0.c0, vt0.c0, vt0.c1, t0.c2 FROM t0, vt0 GROUP BY t0.c0, vt0.c0, vt0.c1, t0.c2 HAVING (NOT (t0.c0 COLLATE RTRIM)) UNION ALL SELECT ALL t0.c0, vt0.c0, vt0.c1, t0.c2 FROM t0, vt0 GROUP BY t0.c0, vt0.c0, vt0.c1, t0.c2 HAVING ((t0.c0 COLLATE RTRIM) ISNULL);
SELECT ALL t0.c0, vt0.c0, vt0.c1, t0.c2 FROM t0, vt0 GROUP BY t0.c0, vt0.c0, vt0.c1, t0.c2;
SELECT ALL t0.c0, vt0.c0, vt0.c1, t0.c2 FROM t0, vt0 GROUP BY t0.c0, vt0.c0, vt0.c1, t0.c2 HAVING t0.c0 COLLATE RTRIM UNION ALL SELECT t0.c0, vt0.c0, vt0.c1, t0.c2 FROM t0, vt0 GROUP BY t0.c0, vt0.c0, vt0.c1, t0.c2 HAVING (NOT (t0.c0 COLLATE RTRIM)) UNION ALL SELECT ALL t0.c0, vt0.c0, vt0.c1, t0.c2 FROM t0, vt0 GROUP BY t0.c0, vt0.c0, vt0.c1, t0.c2 HAVING ((t0.c0 COLLATE RTRIM) ISNULL);
SELECT ALL t0.c0, vt0.c0, vt0.c1, t0.c2 FROM t0, vt0 GROUP BY t0.c0, vt0.c0, vt0.c1, t0.c2;
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS NUMERIC)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0) ISNULL) AS NUMERIC)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0) ISNULL) AS NUMERIC)) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (LIKELY(t1.c0 COLLATE RTRIM)) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (LIKELY(t1.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((LIKELY(t1.c0 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t0.c1 FROM t0, t1 GROUP BY t0.c1;
SELECT t0.c1 FROM t0, t1 WHERE ((((t0.c2)) BETWEEN ((((((((((NULL)OR(t0.c0)))OR(t0.c1)))AND(t1.c0)))OR(t0.c1)))) AND ((((t0.c2)AND(t1.c0)))))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0, t1 WHERE ((NOT ((((t0.c2)) BETWEEN ((((((((((NULL)OR(t0.c0)))OR(t0.c1)))AND(t1.c0)))OR(t0.c1)))) AND ((((t0.c2)AND(t1.c0)))))))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0, t1 WHERE ((((((t0.c2)) BETWEEN ((((((((((NULL)OR(t0.c0)))OR(t0.c1)))AND(t1.c0)))OR(t0.c1)))) AND ((((t0.c2)AND(t1.c0)))))) ISNULL)) GROUP BY t0.c1;
SELECT t0.c1 FROM t0, t1 GROUP BY t0.c1;
SELECT ALL t0.c1, t0.c0, t1.c0, t0.c2 FROM t1, t0 GROUP BY t0.c1, t0.c0, t1.c0, t0.c2;
SELECT t0.c1, t0.c0, t1.c0, t0.c2 FROM t1, t0 GROUP BY t0.c1, t0.c0, t1.c0, t0.c2 HAVING (((((AVG(MIN('897820524')), TOTAL(t1.c0), t1.c0, t0.c0, MAX(COUNT(1442653494)))) BETWEEN ((COUNT(*), GROUP_CONCAT(t0.c0), t0.c0, -2.108107615E9, t0.c2)) AND ((t0.c1, t0.c1, AVG(t0.c0), x'', TOTAL(COUNT(TOTAL(COUNT(*))))))))*((NOT (t0.c1)))) UNION ALL SELECT ALL t0.c1, t0.c0, t1.c0, t0.c2 FROM t1, t0 GROUP BY t0.c1, t0.c0, t1.c0, t0.c2 HAVING (NOT ((((((AVG(MIN('897820524')), TOTAL(t1.c0), t1.c0, t0.c0, MAX(COUNT(1442653494)))) BETWEEN ((COUNT(*), GROUP_CONCAT(t0.c0), t0.c0, -2.108107615E9, t0.c2)) AND ((t0.c1, t0.c1, AVG(t0.c0), x'', TOTAL(COUNT(TOTAL(COUNT(*))))))))*((NOT (t0.c1)))))) UNION ALL SELECT t0.c1, t0.c0, t1.c0, t0.c2 FROM t1, t0 GROUP BY t0.c1, t0.c0, t1.c0, t0.c2 HAVING (((((((AVG(MIN('897820524')), TOTAL(t1.c0), t1.c0, t0.c0, MAX(COUNT(1442653494)))) BETWEEN ((COUNT(*), GROUP_CONCAT(t0.c0), t0.c0, -2.108107615E9, t0.c2)) AND ((t0.c1, t0.c1, AVG(t0.c0), x'', TOTAL(COUNT(TOTAL(COUNT(*))))))))*((NOT (t0.c1))))) ISNULL);
SELECT ALL TOTAL(((((((((LIKELY(vt0.c1))AND(((t0.c2)LIKE(t0.c0)))))AND(t1.c0 COLLATE RTRIM)))AND(((((t1.c0)AND(t0.c2)))AND(vt0.c1)))))OR('4'))) FROM t1, vt0, t0 ORDER BY ((((((t1.c0)<(t0.c1)))OR(CAST(vt0.c0 AS INTEGER))))OR((+ (t0.c0))));
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE ('-1597833724') UNION ALL SELECT ALL * FROM t1 WHERE ((NOT ('-1597833724'))) UNION ALL SELECT * FROM t1 WHERE ((('-1597833724') ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((- (NULL))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((- (NULL))))) UNION SELECT DISTINCT * FROM t1 WHERE ((((- (NULL))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t0.c2, vt0.c1, t1.c0, t0.c1, t0.c0 FROM vt0, t0, t1 GROUP BY t0.c2, vt0.c1, t1.c0, t0.c1, t0.c0;
SELECT t0.c2, vt0.c1, t1.c0, t0.c1, t0.c0 FROM vt0, t0, t1 WHERE (((x'9213')>(vt0.c1))) GROUP BY t0.c2, vt0.c1, t1.c0, t0.c1, t0.c0 UNION SELECT t0.c2, vt0.c1, t1.c0, t0.c1, t0.c0 FROM vt0, t0, t1 WHERE ((NOT (((x'9213')>(vt0.c1))))) GROUP BY t0.c2, vt0.c1, t1.c0, t0.c1, t0.c0 UNION SELECT ALL t0.c2, vt0.c1, t1.c0, t0.c1, t0.c0 FROM vt0, t0, t1 WHERE (((((x'9213')>(vt0.c1))) ISNULL)) GROUP BY t0.c2, vt0.c1, t1.c0, t0.c1, t0.c0;
SELECT t0.c2, vt0.c1, t1.c0, t0.c1, t0.c0 FROM vt0, t0, t1 GROUP BY t0.c2, vt0.c1, t1.c0, t0.c1, t0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING CASE ((((t1.c0)AND(t1.c0)))OR(MIN(SUM(COUNT(*)))))  WHEN ((t1.c0)|(SUM(COUNT(*)))) THEN AVG(t1.c0) END UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (CASE ((((t1.c0)AND(t1.c0)))OR(MIN(SUM(COUNT(*)))))  WHEN ((t1.c0)|(SUM(COUNT(*)))) THEN AVG(t1.c0) END)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((CASE ((((t1.c0)AND(t1.c0)))OR(MIN(SUM(COUNT(*)))))  WHEN ((t1.c0)|(SUM(COUNT(*)))) THEN AVG(t1.c0) END) ISNULL);
SELECT ALL MAX(NULL) FROM t1, t0, vt0;
SELECT ALL * FROM t0 NOT INDEXED FULL OUTER JOIN vt0 ON ((x'')<=(-794879164)) INNER JOIN t1 ON CASE WHEN x'd86f' THEN t0.c2 ELSE t0.c0 END COLLATE RTRIM;
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON ((x'')<=(-794879164)) INNER JOIN t1 ON CASE WHEN x'd86f' THEN t0.c2 ELSE t0.c0 END COLLATE RTRIM WHERE (vt0.c0) UNION ALL SELECT * FROM t0 FULL OUTER JOIN vt0 ON ((x'')<=(-794879164)) INNER JOIN t1 ON CASE WHEN x'd86f' THEN t0.c2 ELSE t0.c0 END COLLATE RTRIM WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM t0 FULL OUTER JOIN vt0 ON ((x'')<=(-794879164)) INNER JOIN t1 ON CASE WHEN x'd86f' THEN t0.c2 ELSE t0.c0 END COLLATE RTRIM WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM t0 NOT INDEXED FULL OUTER JOIN vt0 ON ((x'')<=(-794879164)) INNER JOIN t1 ON CASE WHEN x'd86f' THEN t0.c2 ELSE t0.c0 END COLLATE RTRIM;
SELECT DISTINCT * FROM t0, t1;
SELECT DISTINCT * FROM t0, t1 WHERE ((0.239105190581129 IN (((t1.c0)GLOB(t0.c0))))) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((NOT ((0.239105190581129 IN (((t1.c0)GLOB(t0.c0))))))) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((((0.239105190581129 IN (((t1.c0)GLOB(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, t1;
SELECT vt0.c0, t1.c0, t0.c2, vt0.c1, t0.c0, t0.c1 FROM vt0, t1, t0 GROUP BY vt0.c0, t1.c0, t0.c2, vt0.c1, t0.c0, t0.c1;
SELECT vt0.c0, t1.c0, t0.c2, vt0.c1, t0.c0, t0.c1 FROM vt0, t1, t0 WHERE ((~ (t0.c1)) COLLATE BINARY) GROUP BY vt0.c0, t1.c0, t0.c2, vt0.c1, t0.c0, t0.c1 UNION SELECT ALL vt0.c0, t1.c0, t0.c2, vt0.c1, t0.c0, t0.c1 FROM vt0, t1, t0 WHERE ((NOT ((~ (t0.c1)) COLLATE BINARY))) GROUP BY vt0.c0, t1.c0, t0.c2, vt0.c1, t0.c0, t0.c1 UNION SELECT vt0.c0, t1.c0, t0.c2, vt0.c1, t0.c0, t0.c1 FROM vt0, t1, t0 WHERE ((((~ (t0.c1)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0, t1.c0, t0.c2, vt0.c1, t0.c0, t0.c1;
SELECT vt0.c0, t1.c0, t0.c2, vt0.c1, t0.c0, t0.c1 FROM vt0, t1, t0 GROUP BY vt0.c0, t1.c0, t0.c2, vt0.c1, t0.c0, t0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING SUM(x'ae0d') UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (SUM(x'ae0d'))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((SUM(x'ae0d')) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING SUM(x'ae0d') UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (SUM(x'ae0d'))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((SUM(x'ae0d')) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT t0.c0 FROM t1, vt0, t0;
SELECT ALL t0.c0 FROM t1, vt0, t0 WHERE (((t1.c0) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((((t0.c2)AND(t0.c1)))AND(t0.c2))))) UNION ALL SELECT ALL t0.c0 FROM t1, vt0, t0 WHERE ((NOT (((t1.c0) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((((t0.c2)AND(t0.c1)))AND(t0.c2))))))) UNION ALL SELECT t0.c0 FROM t1, vt0, t0 WHERE (((((t1.c0) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((((t0.c2)AND(t0.c1)))AND(t0.c2))))) ISNULL));
SELECT t0.c0 FROM t1, vt0, t0;
SELECT DISTINCT t1.c0, vt0.c0 FROM t1 CROSS JOIN vt0 ON 'nCmC擆Kt';
SELECT DISTINCT t1.c0, vt0.c0 FROM t1 CROSS JOIN vt0 ON 'nCmC擆Kt' WHERE (((0.9255036629484673)*((((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0)))))) UNION SELECT DISTINCT t1.c0, vt0.c0 FROM t1 CROSS JOIN vt0 ON 'nCmC擆Kt' WHERE ((NOT (((0.9255036629484673)*((((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0)))))))) UNION SELECT DISTINCT t1.c0, vt0.c0 FROM t1 CROSS JOIN vt0 ON 'nCmC擆Kt' WHERE (((((0.9255036629484673)*((((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0)))))) ISNULL));
SELECT DISTINCT t1.c0, vt0.c0 FROM t1 CROSS JOIN vt0 ON 'nCmC擆Kt';
SELECT vt0.c0, t0.c2, t0.c0 FROM t0 FULL OUTER JOIN vt0 ON x'79b8d50b' GROUP BY vt0.c0, t0.c2, t0.c0;
SELECT vt0.c0, t0.c2, t0.c0 FROM t0 FULL OUTER JOIN vt0 ON x'79b8d50b' WHERE ((NOT (((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) GROUP BY vt0.c0, t0.c2, t0.c0 UNION SELECT vt0.c0, t0.c2, t0.c0 FROM t0 FULL OUTER JOIN vt0 ON x'79b8d50b' WHERE ((NOT ((NOT (((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))))) GROUP BY vt0.c0, t0.c2, t0.c0 UNION SELECT ALL vt0.c0, t0.c2, t0.c0 FROM t0 FULL OUTER JOIN vt0 ON x'79b8d50b' WHERE ((((NOT (((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ISNULL)) GROUP BY vt0.c0, t0.c2, t0.c0;
SELECT vt0.c0, t0.c2, t0.c0 FROM t0 FULL OUTER JOIN vt0 ON x'79b8d50b' GROUP BY vt0.c0, t0.c2, t0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING AVG(CAST(t1.c0 AS REAL)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (AVG(CAST(t1.c0 AS REAL)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((AVG(CAST(t1.c0 AS REAL))) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING AVG(CAST(t1.c0 AS REAL)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (AVG(CAST(t1.c0 AS REAL)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((AVG(CAST(t1.c0 AS REAL))) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0, vt0.c0, t0.c1 FROM t1, t0, vt0;
SELECT ALL t1.c0, vt0.c0, t0.c1 FROM t1, t0, vt0 WHERE (((vt0.c1 COLLATE RTRIM) IS TRUE)) UNION ALL SELECT ALL t1.c0, vt0.c0, t0.c1 FROM t1, t0, vt0 WHERE ((NOT (((vt0.c1 COLLATE RTRIM) IS TRUE)))) UNION ALL SELECT ALL t1.c0, vt0.c0, t0.c1 FROM t1, t0, vt0 WHERE (((((vt0.c1 COLLATE RTRIM) IS TRUE)) ISNULL));
SELECT ALL t1.c0, vt0.c0, t0.c1 FROM t1, t0, vt0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((t1.c0) NOT BETWEEN ((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0)))) AND (t1.c0))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((t1.c0) NOT BETWEEN ((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0)))) AND (t1.c0))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((t1.c0) NOT BETWEEN ((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0)))) AND (t1.c0))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((- (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((- (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((- (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL t0.c1, t1.c0, t0.c2 FROM vt0, t1, t0 GROUP BY t0.c1, t1.c0, t0.c2;
SELECT t0.c1, t1.c0, t0.c2 FROM vt0, t1, t0 GROUP BY t0.c1, t1.c0, t0.c2 HAVING MAX(SUM(t0.c2)) UNION ALL SELECT ALL t0.c1, t1.c0, t0.c2 FROM vt0, t1, t0 GROUP BY t0.c1, t1.c0, t0.c2 HAVING (NOT (MAX(SUM(t0.c2)))) UNION ALL SELECT ALL t0.c1, t1.c0, t0.c2 FROM vt0, t1, t0 GROUP BY t0.c1, t1.c0, t0.c2 HAVING ((MAX(SUM(t0.c2))) ISNULL);
SELECT ALL * FROM t1, vt0 INNER JOIN t0 ON t1.c0;
SELECT * FROM t1, vt0 INNER JOIN t0 ON t1.c0 WHERE (((CASE WHEN NULL THEN t0.c1 END) IS FALSE)) UNION ALL SELECT ALL * FROM t1, vt0 INNER JOIN t0 ON t1.c0 WHERE ((NOT (((CASE WHEN NULL THEN t0.c1 END) IS FALSE)))) UNION ALL SELECT * FROM t1, vt0 INNER JOIN t0 ON t1.c0 WHERE (((((CASE WHEN NULL THEN t0.c1 END) IS FALSE)) ISNULL));
SELECT ALL * FROM t1, vt0 INNER JOIN t0 ON t1.c0;
SELECT DISTINCT * FROM vt0, t1;
SELECT DISTINCT * FROM vt0, t1 WHERE (CAST(vt0.c1 AS NUMERIC)) UNION SELECT DISTINCT * FROM vt0, t1 WHERE ((NOT (CAST(vt0.c1 AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0, t1 WHERE (((CAST(vt0.c1 AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt0, t1;
SELECT vt0.c0, t1.c0, vt0.c1 FROM vt0 RIGHT OUTER JOIN t1 ON ((x'ae04')||((- (t1.c0)))) GROUP BY vt0.c0, t1.c0, vt0.c1;
SELECT vt0.c0, t1.c0, vt0.c1 FROM vt0 RIGHT OUTER JOIN t1 ON ((x'ae04')||((- (t1.c0)))) WHERE (TOTAL_CHANGES()) GROUP BY vt0.c0, t1.c0, vt0.c1 UNION SELECT ALL vt0.c0, t1.c0, vt0.c1 FROM vt0 RIGHT OUTER JOIN t1 ON ((x'ae04')||((- (t1.c0)))) WHERE ((NOT (TOTAL_CHANGES()))) GROUP BY vt0.c0, t1.c0, vt0.c1 UNION SELECT ALL vt0.c0, t1.c0, vt0.c1 FROM vt0 RIGHT OUTER JOIN t1 ON ((x'ae04')||((- (t1.c0)))) WHERE (((TOTAL_CHANGES()) ISNULL)) GROUP BY vt0.c0, t1.c0, vt0.c1;
SELECT vt0.c0, t1.c0, vt0.c1 FROM vt0 RIGHT OUTER JOIN t1 ON ((x'ae04')||((- (t1.c0)))) GROUP BY vt0.c0, t1.c0, vt0.c1;
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING SUM(MIN(MIN(t0.c2))) UNION ALL SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING (NOT (SUM(MIN(MIN(t0.c2))))) UNION ALL SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING ((SUM(MIN(MIN(t0.c2)))) ISNULL);
SELECT ALL * FROM vt0, t1, t0;
SELECT * FROM vt0, t1, t0 WHERE (((((('ECK,\+JCL')OR(vt0.c1)))OR(vt0.c1)) IN (((NULL)==(0.900386577721594))))) UNION ALL SELECT * FROM vt0 NOT INDEXED, t1, t0 WHERE ((NOT (((((('ECK,\+JCL')OR(vt0.c1)))OR(vt0.c1)) IN (((NULL)=(0.900386577721594))))))) UNION ALL SELECT ALL * FROM vt0, t1, t0 WHERE (((((((('ECK,\+JCL')OR(vt0.c1)))OR(vt0.c1)) IN (((NULL)=(0.900386577721594))))) ISNULL));
SELECT ALL * FROM vt0, t1, t0;
SELECT DISTINCT t0.c1 FROM t0, t1, vt0;
SELECT DISTINCT t0.c1 FROM t0, t1, vt0 WHERE (((((-1054645677) NOT BETWEEN (vt0.c0) AND (t0.c1)))LIKE(x'78ba'))) UNION SELECT DISTINCT t0.c1 FROM t0, t1, vt0 WHERE ((NOT (((((-1054645677) NOT BETWEEN (vt0.c0) AND (t0.c1)))LIKE(x'78ba'))))) UNION SELECT DISTINCT t0.c1 FROM t0, t1, vt0 WHERE (((((((-1054645677) NOT BETWEEN (vt0.c0) AND (t0.c1)))LIKE(x'78ba'))) ISNULL));
SELECT DISTINCT t0.c1 FROM t0, t1, vt0;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 WHERE (x'') GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0 WHERE ((NOT (x''))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0 WHERE (((x'') ISNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c0, t0.c2, vt0.c0, vt0.c1, t1.c0, t0.c1 FROM t0 NOT INDEXED, t1, vt0 GROUP BY t0.c0, t0.c2, vt0.c0, vt0.c1, t1.c0, t0.c1;
SELECT ALL t0.c0, t0.c2, vt0.c0, vt0.c1, t1.c0, t0.c1 FROM t0, t1, vt0 GROUP BY t0.c0, t0.c2, vt0.c0, vt0.c1, t1.c0, t0.c1 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, t0.c2, vt0.c0, vt0.c1, t1.c0, t0.c1 FROM t0, t1, vt0 GROUP BY t0.c0, t0.c2, vt0.c0, vt0.c1, t1.c0, t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, t0.c2, vt0.c0, vt0.c1, t1.c0, t0.c1 FROM t0, t1, vt0 GROUP BY t0.c0, t0.c2, vt0.c0, vt0.c1, t1.c0, t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, t0.c2, vt0.c0, vt0.c1, t1.c0, t0.c1 FROM t0 NOT INDEXED, t1, vt0 GROUP BY t0.c0, t0.c2, vt0.c0, vt0.c1, t1.c0, t0.c1;
SELECT ALL t0.c0, t0.c2, vt0.c0, vt0.c1, t1.c0, t0.c1 FROM t0, t1, vt0 GROUP BY t0.c0, t0.c2, vt0.c0, vt0.c1, t1.c0, t0.c1 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, t0.c2, vt0.c0, vt0.c1, t1.c0, t0.c1 FROM t0, t1, vt0 GROUP BY t0.c0, t0.c2, vt0.c0, vt0.c1, t1.c0, t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, t0.c2, vt0.c0, vt0.c1, t1.c0, t0.c1 FROM t0, t1, vt0 GROUP BY t0.c0, t0.c2, vt0.c0, vt0.c1, t1.c0, t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, t0.c2, vt0.c0, vt0.c1, t1.c0, t0.c1 FROM t0 NOT INDEXED, t1, vt0 GROUP BY t0.c0, t0.c2, vt0.c0, vt0.c1, t1.c0, t0.c1;
SELECT ALL TOTAL((((((((((((t1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))OR(((t0.c0)LIKE(NULL)))))AND(CAST(t1.c0 AS NUMERIC))))OR(((((t0.c2)AND(t1.c0)))AND(t0.c0)))))AND(((t0.c1) NOTNULL)))) FROM t0, t1;
SELECT ALL t1.c0, vt0.c0, vt0.c1 FROM vt0, t1;
SELECT ALL t1.c0, vt0.c0, vt0.c1 FROM vt0, t1 WHERE (COALESCE(DISTINCT '覫 B ,v_nS', vt0.c1)) UNION ALL SELECT t1.c0, vt0.c0, vt0.c1 FROM vt0, t1 WHERE ((NOT (COALESCE(DISTINCT '覫 B ,v_nS', vt0.c1)))) UNION ALL SELECT t1.c0, vt0.c0, vt0.c1 FROM vt0, t1 WHERE (((COALESCE(DISTINCT '覫 B ,v_nS', vt0.c1)) ISNULL));
SELECT ALL t1.c0, vt0.c0, vt0.c1 FROM vt0, t1;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((vt0.c1) NOTNULL))LIKE(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c1) NOTNULL))LIKE(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((((vt0.c1) NOTNULL))LIKE(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL vt0.c1, t0.c0, t0.c1 FROM t0, vt0 GROUP BY vt0.c1, t0.c0, t0.c1;
SELECT vt0.c1, t0.c0, t0.c1 FROM t0, vt0 WHERE (CAST(x'' AS INTEGER)) GROUP BY vt0.c1, t0.c0, t0.c1 UNION SELECT ALL vt0.c1, t0.c0, t0.c1 FROM t0, vt0 WHERE ((NOT (CAST(x'' AS INTEGER)))) GROUP BY vt0.c1, t0.c0, t0.c1 UNION SELECT ALL vt0.c1, t0.c0, t0.c1 FROM t0, vt0 WHERE (((CAST(x'' AS INTEGER)) ISNULL)) GROUP BY vt0.c1, t0.c0, t0.c1;
SELECT ALL vt0.c1, t0.c0, t0.c1 FROM t0, vt0 GROUP BY vt0.c1, t0.c0, t0.c1;
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING MAX(((t0.c2) NOT NULL)) UNION ALL SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING (NOT (MAX(((t0.c2) NOT NULL)))) UNION ALL SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING ((MAX(((t0.c2) NOT NULL))) ISNULL);
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING MAX(((t0.c2) NOT NULL)) UNION ALL SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING (NOT (MAX(((t0.c2) NOT NULL)))) UNION ALL SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING ((MAX(((t0.c2) NOT NULL))) ISNULL);
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT * FROM t1;
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0)IS NOT(t1.c0)) AS REAL)) UNION ALL SELECT * FROM t1 WHERE ((NOT (CAST(((t1.c0)IS NOT(t1.c0)) AS REAL)))) UNION ALL SELECT ALL * FROM t1 WHERE (((CAST(((t1.c0)IS NOT(t1.c0)) AS REAL)) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0)&(t1.c0)))OR((t1.c0 IN (t1.c0)))))OR(((t1.c0)||(t1.c0))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((((((t1.c0)&(t1.c0)))OR((t1.c0 IN (t1.c0)))))OR(((t1.c0)||(t1.c0))))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c0)&(t1.c0)))OR((t1.c0 IN (t1.c0)))))OR(((t1.c0)||(t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((- (CAST(vt0.c1 AS NUMERIC)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((- (CAST(vt0.c1 AS NUMERIC)))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((- (CAST(vt0.c1 AS NUMERIC)))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT t0.c0, t1.c0, vt0.c0, t0.c1 FROM t1, t0, vt0 GROUP BY t0.c0, t1.c0, vt0.c0, t0.c1;
SELECT t0.c0, t1.c0, vt0.c0, t0.c1 FROM t1, t0, vt0 GROUP BY t0.c0, t1.c0, vt0.c0, t0.c1 HAVING ((((NULL)AND(CASE WHEN COUNT(SUM(GROUP_CONCAT(GROUP_CONCAT(t0.c1)))) THEN MAX(t0.c1) ELSE TOTAL(AVG(COUNT(NULL))) END)))OR(COUNT(*))) UNION ALL SELECT t0.c0, t1.c0, vt0.c0, t0.c1 FROM t1, t0, vt0 GROUP BY t0.c0, t1.c0, vt0.c0, t0.c1 HAVING (NOT (((((NULL)AND(CASE WHEN COUNT(SUM(GROUP_CONCAT(GROUP_CONCAT(t0.c1)))) THEN MAX(t0.c1) ELSE TOTAL(AVG(COUNT(NULL))) END)))OR(COUNT(*))))) UNION ALL SELECT t0.c0, t1.c0, vt0.c0, t0.c1 FROM t1, t0, vt0 GROUP BY t0.c0, t1.c0, vt0.c0, t0.c1 HAVING ((((((NULL)AND(CASE WHEN COUNT(SUM(GROUP_CONCAT(GROUP_CONCAT(t0.c1)))) THEN MAX(t0.c1) ELSE TOTAL(AVG(COUNT(NULL))) END)))OR(COUNT(*)))) ISNULL);
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON CAST(t0.c0 AS INTEGER) COLLATE RTRIM CROSS JOIN t0 ON t0.c1;
SELECT DISTINCT * FROM t1, t0, vt0;
SELECT DISTINCT * FROM t1, t0, vt0 WHERE (((- (t0.c1)) IN ())) UNION SELECT DISTINCT * FROM t1, t0, vt0 WHERE ((NOT (((- (t0.c1)) IN ())))) UNION SELECT DISTINCT * FROM t1, t0, vt0 WHERE (((((- (t0.c1)) IN ())) ISNULL));
SELECT DISTINCT * FROM t1, t0, vt0;
SELECT ALL t0.c1, t0.c2, vt0.c0, t0.c0 FROM t0, t1, vt0 GROUP BY t0.c1, t0.c2, vt0.c0, t0.c0;
SELECT ALL t0.c1, t0.c2, vt0.c0, t0.c0 FROM t0, t1, vt0 WHERE (('-1955010810' IN ()) COLLATE RTRIM) GROUP BY t0.c1, t0.c2, vt0.c0, t0.c0 UNION SELECT t0.c1, t0.c2, vt0.c0, t0.c0 FROM t0, t1, vt0 NOT INDEXED WHERE ((NOT (('-1955010810' IN ()) COLLATE RTRIM))) GROUP BY t0.c1, t0.c2, vt0.c0, t0.c0 UNION SELECT ALL t0.c1, t0.c2, vt0.c0, t0.c0 FROM t0, t1, vt0 WHERE (((('-1955010810' IN ()) COLLATE RTRIM) ISNULL)) GROUP BY t0.c1, t0.c2, vt0.c0, t0.c0;
SELECT ALL t0.c1, t0.c2, vt0.c0, t0.c0 FROM t0, t1, vt0 GROUP BY t0.c1, t0.c2, vt0.c0, t0.c0;
SELECT t0.c1 FROM t0 LEFT OUTER JOIN vt0 ON CASE ((((t1.c0)AND(t1.c0)))AND(vt0.c1))  WHEN CAST(vt0.c0 AS INTEGER) THEN t0.c0 COLLATE RTRIM ELSE (t0.c2 IN ()) END INNER JOIN t1 ON NULL GROUP BY t0.c1;
SELECT ALL * FROM t1;
SELECT * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) BETWEEN ((NOT (t1.c0))) AND ((+ (t1.c0))))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) BETWEEN ((NOT (t1.c0))) AND ((+ (t1.c0))))))) UNION ALL SELECT ALL * FROM t1 WHERE (((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) BETWEEN ((NOT (t1.c0))) AND ((+ (t1.c0))))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT t0.c0, t0.c2, t0.c1, vt0.c0, vt0.c1, t1.c0 FROM vt0, t0, t1;
SELECT DISTINCT t0.c0, t0.c2, t0.c1, vt0.c0, vt0.c1, t1.c0 FROM vt0, t0, t1 WHERE ((((((vt0.c1)) NOT BETWEEN ((t0.c1)) AND ((vt0.c1))))+(CAST(t1.c0 AS NUMERIC)))) UNION SELECT DISTINCT t0.c0, t0.c2, t0.c1, vt0.c0, vt0.c1, t1.c0 FROM vt0, t0, t1 WHERE ((NOT ((((((vt0.c1)) NOT BETWEEN ((t0.c1)) AND ((vt0.c1))))+(CAST(t1.c0 AS NUMERIC)))))) UNION SELECT DISTINCT t0.c0, t0.c2, t0.c1, vt0.c0, vt0.c1, t1.c0 FROM vt0, t0, t1 WHERE ((((((((vt0.c1)) NOT BETWEEN ((t0.c1)) AND ((vt0.c1))))+(CAST(t1.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT t0.c0, t0.c2, t0.c1, vt0.c0, vt0.c1, t1.c0 FROM vt0, t0, t1;
SELECT vt0.c0, t0.c1, t0.c0, t0.c2 FROM vt0, t0 GROUP BY vt0.c0, t0.c1, t0.c0, t0.c2;
SELECT vt0.c0, t0.c1, t0.c0, t0.c2 FROM vt0, t0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND ((((vt0.c0) NOTNULL))))) GROUP BY vt0.c0, t0.c1, t0.c0, t0.c2 UNION SELECT vt0.c0, t0.c1, t0.c0, t0.c2 FROM vt0, t0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND ((((vt0.c0) NOTNULL))))))) GROUP BY vt0.c0, t0.c1, t0.c0, t0.c2 UNION SELECT ALL vt0.c0, t0.c1, t0.c0, t0.c2 FROM vt0, t0 WHERE ((((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND ((((vt0.c0) NOTNULL))))) ISNULL)) GROUP BY vt0.c0, t0.c1, t0.c0, t0.c2;
SELECT vt0.c0, t0.c1, t0.c0, t0.c2 FROM vt0, t0 GROUP BY vt0.c0, t0.c1, t0.c0, t0.c2;
SELECT ALL vt0.c1, t1.c0, vt0.c0 FROM t1, vt0 GROUP BY vt0.c1, t1.c0, vt0.c0;
SELECT ALL vt0.c1, t1.c0, vt0.c0 FROM t1, vt0 GROUP BY vt0.c1, t1.c0, vt0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT vt0.c1, t1.c0, vt0.c0 FROM t1, vt0 GROUP BY vt0.c1, t1.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT vt0.c1, t1.c0, vt0.c0 FROM t1, vt0 GROUP BY vt0.c1, t1.c0, vt0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL * FROM t0, vt0, t1;
SELECT ALL * FROM t0, vt0, t1 WHERE ((((('B?')OR(x'')))AND((((t0.c0, t0.c2, t0.c0, '-166227158', t0.c2, vt0.c1, t0.c2)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0, t0.c2, t0.c2, x'9335', t0.c0)) AND (('5s', vt0.c0, t0.c2, t0.c0, vt0.c1, t0.c0, vt0.c0)))))) UNION ALL SELECT ALL * FROM t0, vt0, t1 WHERE ((NOT ((((('B?')OR(x'')))AND((((t0.c0, t0.c2, t0.c0, '-166227158', t0.c2, vt0.c1, t0.c2)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0, t0.c2, t0.c2, x'9335', t0.c0)) AND (('5s', vt0.c0, t0.c2, t0.c0, vt0.c1, t0.c0, vt0.c0)))))))) UNION ALL SELECT * FROM t0, vt0 NOT INDEXED, t1 WHERE ((((((('B?')OR(x'')))AND((((t0.c0, t0.c2, t0.c0, '-166227158', t0.c2, vt0.c1, t0.c2)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0, t0.c2, t0.c2, x'9335', t0.c0)) AND (('5s', vt0.c0, t0.c2, t0.c0, vt0.c1, t0.c0, vt0.c0)))))) ISNULL));
SELECT ALL * FROM t0, vt0, t1;
SELECT DISTINCT * FROM t0, t1 CROSS JOIN vt0 ON 0.21622386337628585;
SELECT DISTINCT * FROM t0, t1 CROSS JOIN vt0 ON 0.21622386337628585 WHERE ((((t0.c1))<((COALESCE(vt0.c1, vt0.c0))))) UNION SELECT DISTINCT * FROM t0, t1 CROSS JOIN vt0 ON 0.21622386337628585 WHERE ((NOT ((((t0.c1))<((COALESCE(vt0.c1, vt0.c0))))))) UNION SELECT DISTINCT * FROM t0, t1 CROSS JOIN vt0 ON 0.21622386337628585 WHERE ((((((t0.c1))<((COALESCE(vt0.c1, vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, t1 CROSS JOIN vt0 ON 0.21622386337628585;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((((t1.c0 IN ()))IS NOT(((t1.c0) IS TRUE)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT ((((t1.c0 IN ()))IS NOT(((t1.c0) IS TRUE)))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((((((t1.c0 IN ()))IS NOT(((t1.c0) IS TRUE)))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT vt0.c1, t0.c0, t1.c0, t0.c2 FROM t0 INNER JOIN vt0 ON (TOTAL_CHANGES() IN ()) LEFT OUTER JOIN t1 ON (((((t0.c2, vt0.c1, t0.c0))>((t0.c0, t0.c1, NULL)))) IS TRUE) GROUP BY vt0.c1, t0.c0, t1.c0, t0.c2;
SELECT ALL vt0.c1, t0.c0, t1.c0, t0.c2 FROM t0 INNER JOIN vt0 ON (TOTAL_CHANGES() IN ()) LEFT OUTER JOIN t1 ON (((((t0.c2, vt0.c1, t0.c0))>((t0.c0, t0.c1, NULL)))) IS TRUE) GROUP BY vt0.c1, t0.c0, t1.c0, t0.c2 HAVING 0.0896663935272598 UNION ALL SELECT ALL vt0.c1, t0.c0, t1.c0, t0.c2 FROM t0 INNER JOIN vt0 ON (TOTAL_CHANGES() IN ()) LEFT OUTER JOIN t1 ON (((((t0.c2, vt0.c1, t0.c0))>((t0.c0, t0.c1, NULL)))) IS TRUE) GROUP BY vt0.c1, t0.c0, t1.c0, t0.c2 HAVING (NOT (0.0896663935272598)) UNION ALL SELECT ALL vt0.c1, t0.c0, t1.c0, t0.c2 FROM t0 INNER JOIN vt0 ON (TOTAL_CHANGES() IN ()) LEFT OUTER JOIN t1 ON (((((t0.c2, vt0.c1, t0.c0))>((t0.c0, t0.c1, NULL)))) IS TRUE) GROUP BY vt0.c1, t0.c0, t1.c0, t0.c2 HAVING ((0.0896663935272598) ISNULL);
SELECT vt0.c1, t0.c0, t1.c0, t0.c2 FROM t0 INNER JOIN vt0 ON (TOTAL_CHANGES() IN ()) LEFT OUTER JOIN t1 ON (((((t0.c2, vt0.c1, t0.c0))>((t0.c0, t0.c1, NULL)))) IS TRUE) GROUP BY vt0.c1, t0.c0, t1.c0, t0.c2;
SELECT ALL vt0.c1, t0.c0, t1.c0, t0.c2 FROM t0 INNER JOIN vt0 ON (TOTAL_CHANGES() IN ()) LEFT OUTER JOIN t1 ON (((((t0.c2, vt0.c1, t0.c0))>((t0.c0, t0.c1, NULL)))) IS TRUE) GROUP BY vt0.c1, t0.c0, t1.c0, t0.c2 HAVING 0.0896663935272598 UNION ALL SELECT ALL vt0.c1, t0.c0, t1.c0, t0.c2 FROM t0 INNER JOIN vt0 ON (TOTAL_CHANGES() IN ()) LEFT OUTER JOIN t1 ON (((((t0.c2, vt0.c1, t0.c0))>((t0.c0, t0.c1, NULL)))) IS TRUE) GROUP BY vt0.c1, t0.c0, t1.c0, t0.c2 HAVING (NOT (0.0896663935272598)) UNION ALL SELECT ALL vt0.c1, t0.c0, t1.c0, t0.c2 FROM t0 INNER JOIN vt0 ON (TOTAL_CHANGES() IN ()) LEFT OUTER JOIN t1 ON (((((t0.c2, vt0.c1, t0.c0))>((t0.c0, t0.c1, NULL)))) IS TRUE) GROUP BY vt0.c1, t0.c0, t1.c0, t0.c2 HAVING ((0.0896663935272598) ISNULL);
SELECT vt0.c1, t0.c0, t1.c0, t0.c2 FROM t0 INNER JOIN vt0 ON (TOTAL_CHANGES() IN ()) LEFT OUTER JOIN t1 ON (((((t0.c2, vt0.c1, t0.c0))>((t0.c0, t0.c1, NULL)))) IS TRUE) GROUP BY vt0.c1, t0.c0, t1.c0, t0.c2;
SELECT * FROM t0 CROSS JOIN t1 ON CASE WHEN (vt0.c1 IN ()) THEN ((((vt0.c0)AND(t0.c0)))OR(9.84116142E8)) END INNER JOIN vt0 ON (((((((((((t0.c1)AND(t0.c0)))AND(t0.c0)))AND(vt0.c1)))OR(vt0.c1)), ((t1.c0)GLOB(vt0.c1)), CAST(t0.c0 AS BLOB)))>=((COALESCE(vt0.c1, t0.c2), CAST(NULL AS TEXT), (((t0.c2))>=((vt0.c0))))));
SELECT * FROM t0 CROSS JOIN t1 ON CASE WHEN (vt0.c1 IN ()) THEN ((((vt0.c0)AND(t0.c0)))OR(9.84116142E8)) END INNER JOIN vt0 ON (((((((((((t0.c1)AND(t0.c0)))AND(t0.c0)))AND(vt0.c1)))OR(vt0.c1)), ((t1.c0)GLOB(vt0.c1)), CAST(t0.c0 AS BLOB)))>=((COALESCE(vt0.c1, t0.c2), CAST(NULL AS TEXT), (((t0.c2))>=((vt0.c0)))))) WHERE ((((t0.c1) NOT BETWEEN (t1.c0) AND (t0.c0)) IN (vt0.c0 COLLATE RTRIM))) UNION ALL SELECT * FROM t0 CROSS JOIN t1 ON CASE WHEN (vt0.c1 IN ()) THEN ((((vt0.c0)AND(t0.c0)))OR(9.84116142E8)) END INNER JOIN vt0 ON (((((((((((t0.c1)AND(t0.c0)))AND(t0.c0)))AND(vt0.c1)))OR(vt0.c1)), ((t1.c0)GLOB(vt0.c1)), CAST(t0.c0 AS BLOB)))>=((COALESCE(vt0.c1, t0.c2), CAST(NULL AS TEXT), (((t0.c2))>=((vt0.c0)))))) WHERE ((NOT ((((t0.c1) NOT BETWEEN (t1.c0) AND (t0.c0)) IN (vt0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM t0 CROSS JOIN t1 ON CASE WHEN (vt0.c1 IN ()) THEN ((((vt0.c0)AND(t0.c0)))OR(9.84116142E8)) END INNER JOIN vt0 ON (((((((((((t0.c1)AND(t0.c0)))AND(t0.c0)))AND(vt0.c1)))OR(vt0.c1)), ((t1.c0)GLOB(vt0.c1)), CAST(t0.c0 AS BLOB)))>=((COALESCE(vt0.c1, t0.c2), CAST(NULL AS TEXT), (((t0.c2))>=((vt0.c0)))))) WHERE ((((((t0.c1) NOT BETWEEN (t1.c0) AND (t0.c0)) IN (vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT * FROM t0 CROSS JOIN t1 ON CASE WHEN (vt0.c1 IN ()) THEN ((((vt0.c0)AND(t0.c0)))OR(9.84116142E8)) END INNER JOIN vt0 ON (((((((((((t0.c1)AND(t0.c0)))AND(t0.c0)))AND(vt0.c1)))OR(vt0.c1)), ((t1.c0)GLOB(vt0.c1)), CAST(t0.c0 AS BLOB)))>=((COALESCE(vt0.c1, t0.c2), CAST(NULL AS TEXT), (((t0.c2))>=((vt0.c0))))));
SELECT DISTINCT * FROM t1 FULL OUTER JOIN t0 ON CAST(((vt0.c0)+(vt0.c1)) AS BLOB) FULL OUTER JOIN vt0 ON ((((t0.c2) NOTNULL))||(((vt0.c0) ISNULL)));
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((((vt0.c0))<>((vt0.c1)))) BETWEEN (0.9672056592672734) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((((vt0.c0))!=((vt0.c1)))) BETWEEN (0.9672056592672734) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((((((vt0.c0))<>((vt0.c1)))) BETWEEN (0.9672056592672734) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c1, t1.c0, vt0.c0 FROM t1, vt0 GROUP BY vt0.c1, t1.c0, vt0.c0;
SELECT vt0.c1, t1.c0, vt0.c0 FROM t1, vt0 GROUP BY vt0.c1, t1.c0, vt0.c0 HAVING SUM(SUM(AVG(COUNT(*)))) UNION ALL SELECT vt0.c1, t1.c0, vt0.c0 FROM t1, vt0 GROUP BY vt0.c1, t1.c0, vt0.c0 HAVING (NOT (SUM(SUM(AVG(COUNT(*)))))) UNION ALL SELECT ALL vt0.c1, t1.c0, vt0.c0 FROM t1, vt0 GROUP BY vt0.c1, t1.c0, vt0.c0 HAVING ((SUM(SUM(AVG(COUNT(*))))) ISNULL);
SELECT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE ((+ (((t1.c0)==(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT ((+ (((t1.c0)==(t1.c0))))))) UNION ALL SELECT t1.c0 FROM t1 WHERE ((((+ (((t1.c0)==(t1.c0))))) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN t1 ON COALESCE(DISTINCT CAST(vt0.c1 AS TEXT), ((vt0.c1)-(vt0.c0)));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN t1 ON COALESCE(DISTINCT CAST(vt0.c1 AS TEXT), ((vt0.c1)-(vt0.c0))) WHERE (CASE WHEN CAST(vt0.c1 AS REAL) THEN '''x-)%-Y#X' WHEN t1.c0 COLLATE RTRIM THEN ((((t1.c0)OR(vt0.c1)))AND(t1.c0)) WHEN (~ (vt0.c0)) THEN (NOT (vt0.c0)) END) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN t1 ON COALESCE(DISTINCT CAST(vt0.c1 AS TEXT), ((vt0.c1)-(vt0.c0))) WHERE ((NOT (CASE WHEN CAST(vt0.c1 AS REAL) THEN '''x-)%-Y#X' WHEN t1.c0 COLLATE RTRIM THEN ((((t1.c0)OR(vt0.c1)))AND(t1.c0)) WHEN (~ (vt0.c0)) THEN (NOT (vt0.c0)) END))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN t1 ON COALESCE(DISTINCT CAST(vt0.c1 AS TEXT), ((vt0.c1)-(vt0.c0))) WHERE (((CASE WHEN CAST(vt0.c1 AS REAL) THEN '''x-)%-Y#X' WHEN t1.c0 COLLATE RTRIM THEN ((((t1.c0)OR(vt0.c1)))AND(t1.c0)) WHEN (~ (vt0.c0)) THEN (NOT (vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN t1 ON COALESCE(DISTINCT CAST(vt0.c1 AS TEXT), ((vt0.c1)-(vt0.c0)));
SELECT ALL t1.c0, vt0.c0 FROM vt0, t1 GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM vt0, t1 WHERE ((NOT (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY t1.c0, vt0.c0 UNION SELECT ALL t1.c0, vt0.c0 FROM vt0, t1 WHERE ((NOT ((NOT (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY t1.c0, vt0.c0 UNION SELECT ALL t1.c0, vt0.c0 FROM vt0, t1 WHERE ((((NOT (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM vt0, t1 GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING GROUP_CONCAT(AVG(COUNT(*))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (GROUP_CONCAT(AVG(COUNT(*))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((GROUP_CONCAT(AVG(COUNT(*)))) ISNULL);
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0, t1 CROSS JOIN vt0 ON (((((vt0.c0))<>((t1.c0)))) IS FALSE);
SELECT t0.c1, t0.c0, t0.c2 FROM t0, t1 CROSS JOIN vt0 ON (((((vt0.c0))!=((t1.c0)))) IS FALSE) WHERE (0.7625229127430138) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0, t1 CROSS JOIN vt0 ON (((((vt0.c0))!=((t1.c0)))) IS FALSE) WHERE ((NOT (0.7625229127430138))) UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM t0, t1 CROSS JOIN vt0 ON (((((vt0.c0))<>((t1.c0)))) IS FALSE) WHERE (((0.7625229127430138) ISNULL));
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0, t1 CROSS JOIN vt0 ON (((((vt0.c0))<>((t1.c0)))) IS FALSE);
SELECT DISTINCT * FROM t0, t1;
SELECT DISTINCT * FROM t0, t1 WHERE (((CAST(t0.c0 AS BLOB)) ISNULL)) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((NOT (((CAST(t0.c0 AS BLOB)) ISNULL)))) UNION SELECT DISTINCT * FROM t0, t1 WHERE (((((CAST(t0.c0 AS BLOB)) ISNULL)) ISNULL));
SELECT DISTINCT * FROM t0, t1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, t0.c1, t0.c2 FROM t0, t1, vt0 GROUP BY vt0.c1, t0.c1, t0.c2;
SELECT vt0.c1, t0.c1, t0.c2 FROM t0, t1, vt0 GROUP BY vt0.c1, t0.c1, t0.c2 HAVING ((MIN(t0.c2)) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (MAX(GROUP_CONCAT(COUNT(t1.c0))))) UNION ALL SELECT ALL vt0.c1, t0.c1, t0.c2 FROM t0, t1, vt0 GROUP BY vt0.c1, t0.c1, t0.c2 HAVING (NOT (((MIN(t0.c2)) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (MAX(GROUP_CONCAT(COUNT(t1.c0))))))) UNION ALL SELECT vt0.c1, t0.c1, t0.c2 FROM t0, t1, vt0 GROUP BY vt0.c1, t0.c1, t0.c2 HAVING ((((MIN(t0.c2)) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (MAX(GROUP_CONCAT(COUNT(t1.c0)))))) ISNULL);
SELECT ALL SUM((((((t0.c0) IS TRUE)))==(((vt0.c0 IN (t0.c1)))))) FROM vt0, t0, t1;
SELECT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE (CASE WHEN (+ (t1.c0)) THEN json_remove(t1.c0, t1.c0, t1.c0, x'0646') ELSE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) END) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT (CASE WHEN (+ (t1.c0)) THEN json_remove(t1.c0, t1.c0, t1.c0, x'0646') ELSE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) END))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((CASE WHEN (+ (t1.c0)) THEN json_remove(t1.c0, t1.c0, t1.c0, x'0646') ELSE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) END) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT t0.c2 FROM vt0, t0;
SELECT DISTINCT t0.c2 FROM vt0, t0 WHERE (((((GLOB(t0.c2, vt0.c1))AND(vt0.c1)))OR((((t0.c2, vt0.c1, t0.c0)) NOT BETWEEN (('806833065', t0.c0, t0.c1)) AND ((t0.c1, t0.c2, vt0.c1)))))) UNION SELECT DISTINCT t0.c2 FROM vt0, t0 WHERE ((NOT (((((GLOB(t0.c2, vt0.c1))AND(vt0.c1)))OR((((t0.c2, vt0.c1, t0.c0)) NOT BETWEEN (('806833065', t0.c0, t0.c1)) AND ((t0.c1, t0.c2, vt0.c1)))))))) UNION SELECT DISTINCT t0.c2 FROM vt0, t0 WHERE (((((((GLOB(t0.c2, vt0.c1))AND(vt0.c1)))OR((((t0.c2, vt0.c1, t0.c0)) NOT BETWEEN (('806833065', t0.c0, t0.c1)) AND ((t0.c1, t0.c2, vt0.c1)))))) ISNULL));
SELECT DISTINCT t0.c2 FROM vt0, t0;
SELECT ALL vt0.c1, t0.c1, vt0.c0, t1.c0, t0.c2 FROM t0, t1, vt0 GROUP BY vt0.c1, t0.c1, vt0.c0, t1.c0, t0.c2;
SELECT vt0.c1, t0.c1, vt0.c0, t1.c0, t0.c2 FROM t0, t1, vt0 WHERE (((((t0.c0) BETWEEN (-140761640) AND (vt0.c1))) IS TRUE)) GROUP BY vt0.c1, t0.c1, vt0.c0, t1.c0, t0.c2 UNION SELECT ALL vt0.c1, t0.c1, vt0.c0, t1.c0, t0.c2 FROM t0, t1, vt0 WHERE ((NOT (((((t0.c0) BETWEEN (-140761640) AND (vt0.c1))) IS TRUE)))) GROUP BY vt0.c1, t0.c1, vt0.c0, t1.c0, t0.c2 UNION SELECT ALL vt0.c1, t0.c1, vt0.c0, t1.c0, t0.c2 FROM t0, t1, vt0 WHERE (((((((t0.c0) BETWEEN (-140761640) AND (vt0.c1))) IS TRUE)) ISNULL)) GROUP BY vt0.c1, t0.c1, vt0.c0, t1.c0, t0.c2;
SELECT ALL vt0.c1, t0.c1, vt0.c0, t1.c0, t0.c2 FROM t0, t1, vt0 GROUP BY vt0.c1, t0.c1, vt0.c0, t1.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t1, t0 INDEXED BY i17 GROUP BY t0.c0, t0.c2;
SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN t0 ON ((((((vt0.c0)>(vt0.c0)))AND(((((t0.c2)OR(t0.c2)))OR(t0.c1)))))OR(IFNULL(DISTINCT vt0.c0, t1.c0)));
SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN t0 ON ((((((vt0.c0)>(vt0.c0)))AND(((((t0.c2)OR(t0.c2)))OR(t0.c1)))))OR(IFNULL(DISTINCT vt0.c0, t1.c0))) WHERE (t0.c0 COLLATE NOCASE) UNION ALL SELECT ALL * FROM t1 NOT INDEXED, vt0 LEFT OUTER JOIN t0 ON ((((((vt0.c0)>(vt0.c0)))AND(((((t0.c2)OR(t0.c2)))OR(t0.c1)))))OR(IFNULL(DISTINCT vt0.c0, t1.c0))) WHERE ((NOT (t0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN t0 ON ((((((vt0.c0)>(vt0.c0)))AND(((((t0.c2)OR(t0.c2)))OR(t0.c1)))))OR(IFNULL(DISTINCT vt0.c0, t1.c0))) WHERE (((t0.c0 COLLATE NOCASE) ISNULL));
SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN t0 ON ((((((vt0.c0)>(vt0.c0)))AND(((((t0.c2)OR(t0.c2)))OR(t0.c1)))))OR(IFNULL(DISTINCT vt0.c0, t1.c0)));
SELECT DISTINCT * FROM t1, t0, vt0;
SELECT DISTINCT * FROM t1, t0, vt0 WHERE (((((CASE 0.5119367132240507  WHEN t0.c1 THEN 0.712369704468239 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN vt0.c1 WHEN t0.c1 THEN t0.c2 WHEN vt0.c1 THEN t0.c1 END)OR(CAST(t1.c0 AS TEXT))))OR(vt0.c1 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t1, t0, vt0 WHERE ((NOT (((((CASE 0.5119367132240507  WHEN t0.c1 THEN 0.712369704468239 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN vt0.c1 WHEN t0.c1 THEN t0.c2 WHEN vt0.c1 THEN t0.c1 END)OR(CAST(t1.c0 AS TEXT))))OR(vt0.c1 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM t1, t0, vt0 WHERE (((((((CASE 0.5119367132240507  WHEN t0.c1 THEN 0.712369704468239 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN vt0.c1 WHEN t0.c1 THEN t0.c2 WHEN vt0.c1 THEN t0.c1 END)OR(CAST(t1.c0 AS TEXT))))OR(vt0.c1 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM t1, t0, vt0;
SELECT ALL vt0.c1, vt0.c0, t1.c0 FROM t1 INNER JOIN vt0 ON ((t1.c0)GLOB(vt0.c0)) GROUP BY vt0.c1, vt0.c0, t1.c0;
SELECT vt0.c1, vt0.c0, t1.c0 FROM t1 INNER JOIN vt0 ON ((t1.c0)GLOB(vt0.c0)) WHERE ((((vt0.c1, t1.c0, vt0.c0)) NOT BETWEEN ((((((((((x'')AND(vt0.c1)))OR(vt0.c0)))OR(t1.c0)))OR(t1.c0)), vt0.c1, CAST(t1.c0 AS NUMERIC))) AND ((((vt0.c1) IS FALSE), NULL, CAST(vt0.c0 AS TEXT))))) GROUP BY vt0.c1, vt0.c0, t1.c0 UNION SELECT vt0.c1, vt0.c0, t1.c0 FROM t1 INNER JOIN vt0 ON ((t1.c0)GLOB(vt0.c0)) WHERE ((NOT ((((vt0.c1, t1.c0, vt0.c0)) NOT BETWEEN ((((((((((x'')AND(vt0.c1)))OR(vt0.c0)))OR(t1.c0)))OR(t1.c0)), vt0.c1, CAST(t1.c0 AS NUMERIC))) AND ((((vt0.c1) IS FALSE), NULL, CAST(vt0.c0 AS TEXT))))))) GROUP BY vt0.c1, vt0.c0, t1.c0 UNION SELECT vt0.c1, vt0.c0, t1.c0 FROM t1 INNER JOIN vt0 ON ((t1.c0)GLOB(vt0.c0)) WHERE ((((((vt0.c1, t1.c0, vt0.c0)) NOT BETWEEN ((((((((((x'')AND(vt0.c1)))OR(vt0.c0)))OR(t1.c0)))OR(t1.c0)), vt0.c1, CAST(t1.c0 AS NUMERIC))) AND ((((vt0.c1) IS FALSE), NULL, CAST(vt0.c0 AS TEXT))))) ISNULL)) GROUP BY vt0.c1, vt0.c0, t1.c0;
SELECT ALL vt0.c1, vt0.c0, t1.c0 FROM t1 INNER JOIN vt0 ON ((t1.c0)GLOB(vt0.c0)) GROUP BY vt0.c1, vt0.c0, t1.c0;
SELECT t0.c2, t1.c0, vt0.c0, vt0.c1 FROM t1, vt0, t0 GROUP BY t0.c2, t1.c0, vt0.c0, vt0.c1;
SELECT t0.c2, t1.c0, vt0.c0, vt0.c1 FROM t1, vt0, t0 GROUP BY t0.c2, t1.c0, vt0.c0, vt0.c1 HAVING CAST(SUM(vt0.c1) AS NUMERIC) UNION ALL SELECT ALL t0.c2, t1.c0, vt0.c0, vt0.c1 FROM t1, vt0, t0 GROUP BY t0.c2, t1.c0, vt0.c0, vt0.c1 HAVING (NOT (CAST(SUM(vt0.c1) AS NUMERIC))) UNION ALL SELECT t0.c2, t1.c0, vt0.c0, vt0.c1 FROM t1, vt0, t0 GROUP BY t0.c2, t1.c0, vt0.c0, vt0.c1 HAVING ((CAST(SUM(vt0.c1) AS NUMERIC)) ISNULL);
SELECT t0.c2, t1.c0, vt0.c0, vt0.c1 FROM t1, vt0, t0 GROUP BY t0.c2, t1.c0, vt0.c0, vt0.c1;
SELECT t0.c2, t1.c0, vt0.c0, vt0.c1 FROM t1, vt0, t0 GROUP BY t0.c2, t1.c0, vt0.c0, vt0.c1 HAVING CAST(SUM(vt0.c1) AS NUMERIC) UNION ALL SELECT ALL t0.c2, t1.c0, vt0.c0, vt0.c1 FROM t1, vt0, t0 GROUP BY t0.c2, t1.c0, vt0.c0, vt0.c1 HAVING (NOT (CAST(SUM(vt0.c1) AS NUMERIC))) UNION ALL SELECT t0.c2, t1.c0, vt0.c0, vt0.c1 FROM t1, vt0, t0 GROUP BY t0.c2, t1.c0, vt0.c0, vt0.c1 HAVING ((CAST(SUM(vt0.c1) AS NUMERIC)) ISNULL);
SELECT t0.c2, t1.c0, vt0.c0, vt0.c1 FROM t1, vt0, t0 GROUP BY t0.c2, t1.c0, vt0.c0, vt0.c1;
SELECT vt0.c0, t1.c0, vt0.c1 FROM t1, vt0;
SELECT vt0.c0, t1.c0, vt0.c1 FROM t1, vt0 WHERE (CAST(vt0.c0 AS TEXT)) UNION ALL SELECT ALL vt0.c0, t1.c0, vt0.c1 FROM t1, vt0 WHERE ((NOT (CAST(vt0.c0 AS TEXT)))) UNION ALL SELECT ALL vt0.c0, t1.c0, vt0.c1 FROM t1, vt0 WHERE (((CAST(vt0.c0 AS TEXT)) ISNULL));
SELECT vt0.c0, t1.c0, vt0.c1 FROM t1, vt0;
SELECT DISTINCT t0.c1 FROM t0, t1;
SELECT DISTINCT t0.c1 FROM t0, t1 WHERE (CAST(((((((((']k')AND(t0.c0)))AND(t0.c1)))AND(t1.c0)))OR('')) AS REAL)) UNION SELECT DISTINCT t0.c1 FROM t0, t1 WHERE ((NOT (CAST(((((((((']k')AND(t0.c0)))AND(t0.c1)))AND(t1.c0)))OR('')) AS REAL)))) UNION SELECT DISTINCT t0.c1 FROM t0, t1 WHERE (((CAST(((((((((']k')AND(t0.c0)))AND(t0.c1)))AND(t1.c0)))OR('')) AS REAL)) ISNULL));
SELECT DISTINCT t0.c1 FROM t0, t1;
SELECT vt0.c1, t0.c2, vt0.c0, t1.c0, t0.c1 FROM vt0, t1 LEFT OUTER JOIN t0 ON (+ (t1.c0)) GROUP BY vt0.c1, t0.c2, vt0.c0, t1.c0, t0.c1;
SELECT vt0.c1, t0.c2, vt0.c0, t1.c0, t0.c1 FROM vt0, t1 LEFT OUTER JOIN t0 ON (+ (t1.c0)) WHERE (((((IFNULL(t0.c2, t0.c0))OR((t0.c2 IN ()))))AND(((t1.c0) NOT NULL)))) GROUP BY vt0.c1, t0.c2, vt0.c0, t1.c0, t0.c1 UNION SELECT ALL vt0.c1, t0.c2, vt0.c0, t1.c0, t0.c1 FROM vt0, t1 LEFT OUTER JOIN t0 ON (+ (t1.c0)) WHERE ((NOT (((((IFNULL(t0.c2, t0.c0))OR((t0.c2 IN ()))))AND(((t1.c0) NOT NULL)))))) GROUP BY vt0.c1, t0.c2, vt0.c0, t1.c0, t0.c1 UNION SELECT vt0.c1, t0.c2, vt0.c0, t1.c0, t0.c1 FROM vt0, t1 LEFT OUTER JOIN t0 ON (+ (t1.c0)) WHERE (((((((IFNULL(t0.c2, t0.c0))OR((t0.c2 IN ()))))AND(((t1.c0) NOT NULL)))) ISNULL)) GROUP BY vt0.c1, t0.c2, vt0.c0, t1.c0, t0.c1;
SELECT vt0.c1, t0.c2, vt0.c0, t1.c0, t0.c1 FROM vt0, t1 LEFT OUTER JOIN t0 ON (+ (t1.c0)) GROUP BY vt0.c1, t0.c2, vt0.c0, t1.c0, t0.c1;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0, vt0, t1 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0, vt0, t1 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (CAST(GROUP_CONCAT(t0.c2) AS BLOB) IN ()) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 NOT INDEXED, vt0, t1 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT ((CAST(GROUP_CONCAT(t0.c2) AS BLOB) IN ()))) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0, vt0, t1 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (((CAST(GROUP_CONCAT(t0.c2) AS BLOB) IN ())) ISNULL);
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0, vt0, t1 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0, vt0, t1 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (CAST(GROUP_CONCAT(t0.c2) AS BLOB) IN ()) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 NOT INDEXED, vt0, t1 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT ((CAST(GROUP_CONCAT(t0.c2) AS BLOB) IN ()))) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0, vt0, t1 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (((CAST(GROUP_CONCAT(t0.c2) AS BLOB) IN ())) ISNULL);
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0, vt0, t1 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE (((t1.c0)IS NOT(t1.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (((t1.c0)IS NOT(t1.c0)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM t1 WHERE (((((t1.c0)IS NOT(t1.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT vt0.c1, t1.c0, t0.c1, t0.c2 FROM t1 RIGHT OUTER JOIN t0 ON ((((vt0.c0)IS NOT(t1.c0)))>(NULL)) LEFT OUTER JOIN vt0 ON TYPEOF(CAST(t0.c2 AS INTEGER));
SELECT t0.c0, vt0.c0, t0.c2 FROM vt0 INNER JOIN t0 ON (- (((t0.c0)=(vt0.c1)))) GROUP BY t0.c0, vt0.c0, t0.c2;
SELECT ALL t0.c0, vt0.c0, t0.c2 FROM vt0 INNER JOIN t0 ON (- (((t0.c0)==(vt0.c1)))) WHERE (((((t0.c0)GLOB(vt0.c0))) BETWEEN (((x'') BETWEEN (vt0.c1) AND (vt0.c1))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) GROUP BY t0.c0, vt0.c0, t0.c2 UNION SELECT ALL t0.c0, vt0.c0, t0.c2 FROM vt0 INNER JOIN t0 ON (- (((t0.c0)=(vt0.c1)))) WHERE ((NOT (((((t0.c0)GLOB(vt0.c0))) BETWEEN (((x'') BETWEEN (vt0.c1) AND (vt0.c1))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))))) GROUP BY t0.c0, vt0.c0, t0.c2 UNION SELECT ALL t0.c0, vt0.c0, t0.c2 FROM vt0 INNER JOIN t0 ON (- (((t0.c0)=(vt0.c1)))) WHERE (((((((t0.c0)GLOB(vt0.c0))) BETWEEN (((x'') BETWEEN (vt0.c1) AND (vt0.c1))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ISNULL)) GROUP BY t0.c0, vt0.c0, t0.c2;
SELECT t0.c0, vt0.c0, t0.c2 FROM vt0 INNER JOIN t0 ON (- (((t0.c0)=(vt0.c1)))) GROUP BY t0.c0, vt0.c0, t0.c2;
SELECT t1.c0, t0.c0 FROM t0 NATURAL JOIN t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0 NATURAL JOIN t1 GROUP BY t1.c0, t0.c0 HAVING MAX(((t0.c2)IS(AVG(AVG(t0.c1))))) UNION ALL SELECT t1.c0, t0.c0 FROM t0 NATURAL JOIN t1 GROUP BY t1.c0, t0.c0 HAVING (NOT (MAX(((t0.c2)IS(AVG(AVG(t0.c1))))))) UNION ALL SELECT t1.c0, t0.c0 FROM t0 NATURAL JOIN t1 GROUP BY t1.c0, t0.c0 HAVING ((MAX(((t0.c2)IS(AVG(AVG(t0.c1)))))) ISNULL);
SELECT ALL TOTAL(((t0.c2)&(((t0.c2)|(t0.c2))))) FROM t0 ORDER BY ((CAST(t0.c1 AS REAL)) NOT BETWEEN ('^C') AND (((t0.c0)IS(t0.c0)))) ASC, (('-1744643088')LIKE(CAST(t0.c1 AS INTEGER))) DESC;
SELECT ALL t0.c2 FROM t0 NATURAL JOIN vt0;
SELECT t0.c2 FROM t0 NATURAL JOIN vt0 WHERE (UPPER(DISTINCT CAST(vt0.c0 AS NUMERIC))) UNION ALL SELECT t0.c2 FROM t0 NATURAL JOIN vt0 WHERE ((NOT (UPPER(DISTINCT CAST(vt0.c0 AS NUMERIC))))) UNION ALL SELECT t0.c2 FROM t0 NATURAL JOIN vt0 WHERE (((UPPER(DISTINCT CAST(vt0.c0 AS NUMERIC))) ISNULL));
SELECT ALL t0.c2 FROM t0 NATURAL JOIN vt0;
SELECT DISTINCT t1.c0, vt0.c0, t0.c0, vt0.c1 FROM t0, vt0, t1;
SELECT DISTINCT t1.c0, vt0.c0, t0.c0, vt0.c1 FROM t0, vt0, t1 WHERE (CASE ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c1))  WHEN ABS(DISTINCT vt0.c1) THEN ((t0.c2)*(vt0.c0)) END) UNION SELECT DISTINCT t1.c0, vt0.c0, t0.c0, vt0.c1 FROM t0, vt0, t1 WHERE ((NOT (CASE ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c1))  WHEN ABS(DISTINCT vt0.c1) THEN ((t0.c2)*(vt0.c0)) END))) UNION SELECT DISTINCT t1.c0, vt0.c0, t0.c0, vt0.c1 FROM t0, vt0, t1 WHERE (((CASE ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c1))  WHEN ABS(DISTINCT vt0.c1) THEN ((t0.c2)*(vt0.c0)) END) ISNULL));
SELECT DISTINCT t1.c0, vt0.c0, t0.c0, vt0.c1 FROM t0, vt0, t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((t1.c0 COLLATE NOCASE) BETWEEN (CAST(t1.c0 AS INTEGER)) AND (MIN(t1.c0, t1.c0)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((t1.c0 COLLATE NOCASE) BETWEEN (CAST(t1.c0 AS INTEGER)) AND (MIN(t1.c0, t1.c0)))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((t1.c0 COLLATE NOCASE) BETWEEN (CAST(t1.c0 AS INTEGER)) AND (MIN(t1.c0, t1.c0)))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING HEX(DISTINCT ((t1.c0) BETWEEN (GROUP_CONCAT(t1.c0)) AND (t1.c0))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (HEX(DISTINCT ((t1.c0) BETWEEN (GROUP_CONCAT(t1.c0)) AND (t1.c0))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((HEX(DISTINCT ((t1.c0) BETWEEN (GROUP_CONCAT(t1.c0)) AND (t1.c0)))) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING HEX(DISTINCT ((t1.c0) BETWEEN (GROUP_CONCAT(t1.c0)) AND (t1.c0))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (HEX(DISTINCT ((t1.c0) BETWEEN (GROUP_CONCAT(t1.c0)) AND (t1.c0))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((HEX(DISTINCT ((t1.c0) BETWEEN (GROUP_CONCAT(t1.c0)) AND (t1.c0)))) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE ((- ((t0.c1 IN ())))) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT ((- ((t0.c1 IN ())))))) UNION ALL SELECT * FROM t0, vt0 WHERE ((((- ((t0.c1 IN ())))) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT t0.c2 FROM vt0, t0;
SELECT DISTINCT t0.c2 FROM vt0, t0 WHERE ('') UNION SELECT DISTINCT t0.c2 FROM vt0, t0 WHERE ((NOT (''))) UNION SELECT DISTINCT t0.c2 FROM vt0, t0 WHERE ((('') ISNULL));
SELECT DISTINCT t0.c2 FROM vt0, t0;
SELECT ALL t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c0;
SELECT t1.c0, vt0.c0 FROM t1, vt0 WHERE ((NOT (((t1.c0)&(vt0.c1))))) GROUP BY t1.c0, vt0.c0 UNION SELECT t1.c0, vt0.c0 FROM t1, vt0 WHERE ((NOT ((NOT (((t1.c0)&(vt0.c1))))))) GROUP BY t1.c0, vt0.c0 UNION SELECT t1.c0, vt0.c0 FROM t1, vt0 WHERE ((((NOT (((t1.c0)&(vt0.c1))))) ISNULL)) GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, vt0.c0 FROM t1, vt0 GROUP BY t1.c0, vt0.c0;
SELECT ALL t1.c0, t0.c1, t0.c2 FROM t1, t0, vt0 GROUP BY t1.c0, t0.c1, t0.c2;
SELECT t1.c0, t0.c1, t0.c2 FROM t1, t0, vt0 GROUP BY t1.c0, t0.c1, t0.c2 HAVING COUNT(*) UNION ALL SELECT t1.c0, t0.c1, t0.c2 FROM t1, t0, vt0 GROUP BY t1.c0, t0.c1, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0, t0.c1, t0.c2 FROM t1, t0, vt0 GROUP BY t1.c0, t0.c1, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t1.c0, t0.c1, t0.c2 FROM t1, t0, vt0 GROUP BY t1.c0, t0.c1, t0.c2;
SELECT t1.c0, t0.c1, t0.c2 FROM t1, t0, vt0 GROUP BY t1.c0, t0.c1, t0.c2 HAVING COUNT(*) UNION ALL SELECT t1.c0, t0.c1, t0.c2 FROM t1, t0, vt0 GROUP BY t1.c0, t0.c1, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0, t0.c1, t0.c2 FROM t1, t0, vt0 GROUP BY t1.c0, t0.c1, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t1.c0, t0.c1, t0.c2 FROM t1, t0, vt0 GROUP BY t1.c0, t0.c1, t0.c2;
SELECT t0.c2, t0.c0, t0.c1, t1.c0 FROM t0, t1;
SELECT ALL t0.c2, t0.c0, t0.c1, t1.c0 FROM t0, t1 WHERE (((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))), CAST(t0.c0 AS INTEGER), ((t0.c2)OR(t0.c0))))>=(((- (t0.c1)), ((t1.c0)|(t1.c0)), CAST(t0.c1 AS INTEGER))))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1, t1.c0 FROM t0, t1 WHERE ((NOT (((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))), CAST(t0.c0 AS INTEGER), ((t0.c2)OR(t0.c0))))>=(((- (t0.c1)), ((t1.c0)|(t1.c0)), CAST(t0.c1 AS INTEGER))))))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1, t1.c0 FROM t0, t1 WHERE (((((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))), CAST(t0.c0 AS INTEGER), ((t0.c2)OR(t0.c0))))>=(((- (t0.c1)), ((t1.c0)|(t1.c0)), CAST(t0.c1 AS INTEGER))))) ISNULL));
SELECT t0.c2, t0.c0, t0.c1, t1.c0 FROM t0, t1;
SELECT DISTINCT * FROM t1, vt0, t0;
SELECT DISTINCT * FROM t1, vt0, t0 WHERE (CAST(((vt0.c1) BETWEEN (t1.c0) AND (vt0.c1)) AS INTEGER)) UNION SELECT DISTINCT * FROM t1, vt0, t0 WHERE ((NOT (CAST(((vt0.c1) BETWEEN (t1.c0) AND (vt0.c1)) AS INTEGER)))) UNION SELECT DISTINCT * FROM t1, vt0, t0 WHERE (((CAST(((vt0.c1) BETWEEN (t1.c0) AND (vt0.c1)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM t1, vt0, t0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((((t1.c0)OR(t1.c0)))LIKE((t1.c0 IN ())))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((((t1.c0)OR(t1.c0)))LIKE((t1.c0 IN ())))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((((t1.c0)OR(t1.c0)))LIKE((t1.c0 IN ())))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING GROUP_CONCAT(vt0.c0 COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(vt0.c0 COLLATE NOCASE)) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING GROUP_CONCAT(vt0.c0 COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(vt0.c0 COLLATE NOCASE)) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL * FROM t1, t0;
SELECT * FROM t1, t0 WHERE (((CASE t1.c0  WHEN t0.c0 THEN t0.c2 END) BETWEEN (CAST(t0.c2 AS TEXT)) AND (((t1.c0)<>(t0.c1))))) UNION ALL SELECT * FROM t1, t0 WHERE ((NOT (((CASE t1.c0  WHEN t0.c0 THEN t0.c2 END) BETWEEN (CAST(t0.c2 AS TEXT)) AND (((t1.c0)!=(t0.c1))))))) UNION ALL SELECT * FROM t1, t0 WHERE (((((CASE t1.c0  WHEN t0.c0 THEN t0.c2 END) BETWEEN (CAST(t0.c2 AS TEXT)) AND (((t1.c0)<>(t0.c1))))) ISNULL));
SELECT ALL * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0, vt0;
SELECT DISTINCT * FROM t1, t0, vt0 WHERE (NULL) UNION SELECT DISTINCT * FROM t1, t0, vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM t1, t0, vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM t1, t0, vt0;
SELECT t0.c0 FROM vt0, t1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t1, t0 WHERE (((CAST(' G V{S&' AS TEXT))>=(((t1.c0)%(t0.c2))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0, t1, t0 WHERE ((NOT (((CAST(' G V{S&' AS TEXT))>=(((t1.c0)%(t0.c2))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t1, t0 WHERE (((((CAST(' G V{S&' AS TEXT))>=(((t1.c0)%(t0.c2))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t1, t0 GROUP BY t0.c0;
SELECT t0.c2, vt0.c0, t1.c0, vt0.c1, t0.c1, t0.c0 FROM t0, t1 NOT INDEXED, vt0 GROUP BY t0.c2, vt0.c0, t1.c0, vt0.c1, t0.c1, t0.c0;
SELECT t0.c2, vt0.c0, t1.c0, vt0.c1, t0.c1, t0.c0 FROM t0, t1, vt0 GROUP BY t0.c2, vt0.c0, t1.c0, vt0.c1, t0.c1, t0.c0 HAVING (+ (COUNT(*))) UNION ALL SELECT t0.c2, vt0.c0, t1.c0, vt0.c1, t0.c1, t0.c0 FROM t0, t1, vt0 GROUP BY t0.c2, vt0.c0, t1.c0, vt0.c1, t0.c1, t0.c0 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT ALL t0.c2, vt0.c0, t1.c0, vt0.c1, t0.c1, t0.c0 FROM t0, t1, vt0 GROUP BY t0.c2, vt0.c0, t1.c0, vt0.c1, t0.c1, t0.c0 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT t0.c2, vt0.c0, t1.c0, vt0.c1, t0.c1, t0.c0 FROM t0, t1 NOT INDEXED, vt0 GROUP BY t0.c2, vt0.c0, t1.c0, vt0.c1, t0.c1, t0.c0;
SELECT t0.c2, vt0.c0, t1.c0, vt0.c1, t0.c1, t0.c0 FROM t0, t1, vt0 GROUP BY t0.c2, vt0.c0, t1.c0, vt0.c1, t0.c1, t0.c0 HAVING (+ (COUNT(*))) UNION ALL SELECT t0.c2, vt0.c0, t1.c0, vt0.c1, t0.c1, t0.c0 FROM t0, t1, vt0 GROUP BY t0.c2, vt0.c0, t1.c0, vt0.c1, t0.c1, t0.c0 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT ALL t0.c2, vt0.c0, t1.c0, vt0.c1, t0.c1, t0.c0 FROM t0, t1, vt0 GROUP BY t0.c2, vt0.c0, t1.c0, vt0.c1, t0.c1, t0.c0 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT t0.c2, vt0.c0, t1.c0, vt0.c1, t0.c1, t0.c0 FROM t0, t1 NOT INDEXED, vt0 GROUP BY t0.c2, vt0.c0, t1.c0, vt0.c1, t0.c1, t0.c0;
SELECT ALL t1.c0, vt0.c0, vt0.c1 FROM t1, vt0;
SELECT ALL t1.c0, vt0.c0, vt0.c1 FROM t1, vt0 WHERE ((((t1.c0)-(t1.c0)) IN ())) UNION ALL SELECT t1.c0, vt0.c0, vt0.c1 FROM t1, vt0 WHERE ((NOT ((((t1.c0)-(t1.c0)) IN ())))) UNION ALL SELECT ALL t1.c0, vt0.c0, vt0.c1 FROM t1, vt0 WHERE ((((((t1.c0)-(t1.c0)) IN ())) ISNULL));
SELECT ALL t1.c0, vt0.c0, vt0.c1 FROM t1, vt0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((((((t1.c0)AND(t1.c0)))AND(t1.c0))) IS TRUE)) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((((((t1.c0)AND(t1.c0)))AND(t1.c0))) IS TRUE)))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((((((t1.c0)AND(t1.c0)))AND(t1.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((((t1.c0) ISNULL))>>(((((t1.c0)OR(t1.c0)))OR(t1.c0))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((((t1.c0) ISNULL))>>(((((t1.c0)OR(t1.c0)))OR(t1.c0))))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((((t1.c0) ISNULL))>>(((((t1.c0)OR(t1.c0)))OR(t1.c0))))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING SUM(SUM(COUNT(*))) UNION ALL SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING (NOT (SUM(SUM(COUNT(*))))) UNION ALL SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING ((SUM(SUM(COUNT(*)))) ISNULL);
SELECT ALL t0.c1 FROM t0, t1;
SELECT t0.c1 FROM t0, t1 WHERE (((((t1.c0) NOT BETWEEN (t0.c0) AND (t1.c0))) IS TRUE)) UNION ALL SELECT t0.c1 FROM t0, t1 WHERE ((NOT (((((t1.c0) NOT BETWEEN (t0.c0) AND (t1.c0))) IS TRUE)))) UNION ALL SELECT t0.c1 FROM t0, t1 WHERE (((((((t1.c0) NOT BETWEEN (t0.c0) AND (t1.c0))) IS TRUE)) ISNULL));
SELECT ALL t0.c1 FROM t0, t1;
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN t1 ON (((((t0.c0)OR(t0.c0)))OR(t0.c2)) IN (((((t1.c0)OR(NULL)))OR(t1.c0))));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN t1 ON (((((t0.c0)OR(t0.c0)))OR(t0.c2)) IN (((((t1.c0)OR(NULL)))OR(t1.c0)))) WHERE (t0.c2) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN t1 ON (((((t0.c0)OR(t0.c0)))OR(t0.c2)) IN (((((t1.c0)OR(NULL)))OR(t1.c0)))) WHERE ((NOT (t0.c2))) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN t1 ON (((((t0.c0)OR(t0.c0)))OR(t0.c2)) IN (((((t1.c0)OR(NULL)))OR(t1.c0)))) WHERE (((t0.c2) ISNULL));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN t1 ON (((((t0.c0)OR(t0.c0)))OR(t0.c2)) IN (((((t1.c0)OR(NULL)))OR(t1.c0))));
SELECT t0.c0, t1.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)GLOB((~ (vt0.c1)))) LEFT OUTER JOIN t1 ON ((TRIM(vt0.c1))LIKE(NULLIF(DISTINCT t1.c0, NULL))) GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)GLOB((~ (vt0.c1)))) LEFT OUTER JOIN t1 ON ((TRIM(vt0.c1))LIKE(NULLIF(DISTINCT t1.c0, NULL))) WHERE (LIKELY(t1.c0 COLLATE BINARY)) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)GLOB((~ (vt0.c1)))) LEFT OUTER JOIN t1 ON ((TRIM(vt0.c1))LIKE(NULLIF(DISTINCT t1.c0, NULL))) WHERE ((NOT (LIKELY(t1.c0 COLLATE BINARY)))) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)GLOB((~ (vt0.c1)))) LEFT OUTER JOIN t1 ON ((TRIM(vt0.c1))LIKE(NULLIF(DISTINCT t1.c0, NULL))) WHERE (((LIKELY(t1.c0 COLLATE BINARY)) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)GLOB((~ (vt0.c1)))) LEFT OUTER JOIN t1 ON ((TRIM(vt0.c1))LIKE(NULLIF(DISTINCT t1.c0, NULL))) GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c1, t0.c2, t0.c0, vt0.c1, t1.c0 FROM t1, vt0 FULL OUTER JOIN t0 ON IFNULL(((t0.c0)>=(vt0.c0)), t0.c2) GROUP BY t0.c1, t0.c2, t0.c0, vt0.c1, t1.c0;
SELECT ALL t0.c1, t0.c2, t0.c0, vt0.c1, t1.c0 FROM t1, vt0 FULL OUTER JOIN t0 ON IFNULL(((t0.c0)>=(vt0.c0)), t0.c2) GROUP BY t0.c1, t0.c2, t0.c0, vt0.c1, t1.c0 HAVING GROUP_CONCAT(MIN(vt0.c1)) COLLATE BINARY UNION ALL SELECT t0.c1, t0.c2, t0.c0, vt0.c1, t1.c0 FROM t1, vt0 NOT INDEXED FULL OUTER JOIN t0 ON IFNULL(((t0.c0)>=(vt0.c0)), t0.c2) GROUP BY t0.c1, t0.c2, t0.c0, vt0.c1, t1.c0 HAVING (NOT (GROUP_CONCAT(MIN(vt0.c1)) COLLATE BINARY)) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0, vt0.c1, t1.c0 FROM t1, vt0 FULL OUTER JOIN t0 ON IFNULL(((t0.c0)>=(vt0.c0)), t0.c2) GROUP BY t0.c1, t0.c2, t0.c0, vt0.c1, t1.c0 HAVING ((GROUP_CONCAT(MIN(vt0.c1)) COLLATE BINARY) ISNULL);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0) IS FALSE)) IS TRUE) LEFT OUTER JOIN t1 ON ((((vt0.c0)!=(t0.c1))) IS FALSE);
SELECT ALL * FROM vt0 NOT INDEXED LEFT OUTER JOIN t0 ON ((((vt0.c0) IS FALSE)) IS TRUE) LEFT OUTER JOIN t1 ON ((((vt0.c0)!=(t0.c1))) IS FALSE) WHERE (CAST(((t0.c2) ISNULL) AS INTEGER)) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0) IS FALSE)) IS TRUE) LEFT OUTER JOIN t1 ON ((((vt0.c0)!=(t0.c1))) IS FALSE) WHERE ((NOT (CAST(((t0.c2) ISNULL) AS INTEGER)))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0) IS FALSE)) IS TRUE) LEFT OUTER JOIN t1 ON ((((vt0.c0)!=(t0.c1))) IS FALSE) WHERE (((CAST(((t0.c2) ISNULL) AS INTEGER)) ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0) IS FALSE)) IS TRUE) LEFT OUTER JOIN t1 ON ((((vt0.c0)!=(t0.c1))) IS FALSE);
SELECT DISTINCT vt0.c0 FROM t1 LEFT OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1)) IN ());
SELECT DISTINCT vt0.c0 FROM t1 LEFT OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1)) IN ()) WHERE (((+ (vt0.c1)) IN (vt0.c1 COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0 FROM t1 LEFT OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1)) IN ()) WHERE ((NOT (((+ (vt0.c1)) IN (vt0.c1 COLLATE NOCASE))))) UNION SELECT DISTINCT vt0.c0 FROM t1 LEFT OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1)) IN ()) WHERE (((((+ (vt0.c1)) IN (vt0.c1 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t1 LEFT OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1)) IN ());
SELECT t0.c2, t0.c1, t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c2, t0.c1, t0.c0, t1.c0;
SELECT ALL t0.c2, t0.c1, t0.c0, t1.c0 FROM t0, t1 WHERE (((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)) COLLATE NOCASE) GROUP BY t0.c2, t0.c1, t0.c0, t1.c0 UNION SELECT t0.c2, t0.c1, t0.c0, t1.c0 FROM t0, t1 WHERE ((NOT (((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)) COLLATE NOCASE))) GROUP BY t0.c2, t0.c1, t0.c0, t1.c0 UNION SELECT t0.c2, t0.c1, t0.c0, t1.c0 FROM t0, t1 WHERE (((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)) COLLATE NOCASE) ISNULL)) GROUP BY t0.c2, t0.c1, t0.c0, t1.c0;
SELECT t0.c2, t0.c1, t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c2, t0.c1, t0.c0, t1.c0;
SELECT vt0.c0, t1.c0, t0.c2 FROM t0, vt0, t1 GROUP BY vt0.c0, t1.c0, t0.c2;
SELECT vt0.c0, t1.c0, t0.c2 FROM t0, vt0, t1 GROUP BY vt0.c0, t1.c0, t0.c2 HAVING SUM(MIN(t0.c0)) UNION ALL SELECT ALL vt0.c0, t1.c0, t0.c2 FROM t0, vt0, t1 GROUP BY vt0.c0, t1.c0, t0.c2 HAVING (NOT (SUM(MIN(t0.c0)))) UNION ALL SELECT vt0.c0, t1.c0, t0.c2 FROM t0, vt0, t1 GROUP BY vt0.c0, t1.c0, t0.c2 HAVING ((SUM(MIN(t0.c0))) ISNULL);
SELECT t1.c0, vt0.c1, t0.c0, t0.c1, vt0.c0, t0.c2 FROM vt0, t0, t1;
SELECT t1.c0, vt0.c1, t0.c0, t0.c1, vt0.c0, t0.c2 FROM vt0, t0, t1 WHERE (((((((vt0.c0) NOT BETWEEN (t0.c1) AND (vt0.c0)))OR(((((t0.c2)OR(vt0.c0)))AND(NULL)))))AND(((t0.c2) NOT BETWEEN (t0.c0) AND (5.84910437E8))))) UNION ALL SELECT ALL t1.c0, vt0.c1, t0.c0, t0.c1, vt0.c0, t0.c2 FROM vt0, t0, t1 WHERE ((NOT (((((((vt0.c0) NOT BETWEEN (t0.c1) AND (vt0.c0)))OR(((((t0.c2)OR(vt0.c0)))AND(NULL)))))AND(((t0.c2) NOT BETWEEN (t0.c0) AND (5.84910437E8))))))) UNION ALL SELECT t1.c0, vt0.c1, t0.c0, t0.c1, vt0.c0, t0.c2 FROM vt0, t0, t1 WHERE (((((((((vt0.c0) NOT BETWEEN (t0.c1) AND (vt0.c0)))OR(((((t0.c2)OR(vt0.c0)))AND(NULL)))))AND(((t0.c2) NOT BETWEEN (t0.c0) AND (5.84910437E8))))) ISNULL));
SELECT t1.c0, vt0.c1, t0.c0, t0.c1, vt0.c0, t0.c2 FROM vt0, t0, t1;
SELECT DISTINCT t0.c1, t0.c0, t1.c0, t0.c2 FROM t1, t0;
SELECT DISTINCT t0.c1, t0.c0, t1.c0, t0.c2 FROM t1, t0 WHERE (QUOTE(((t1.c0)<<(t0.c2)))) UNION SELECT DISTINCT t0.c1, t0.c0, t1.c0, t0.c2 FROM t1, t0 WHERE ((NOT (QUOTE(((t1.c0)<<(t0.c2)))))) UNION SELECT DISTINCT t0.c1, t0.c0, t1.c0, t0.c2 FROM t1, t0 WHERE (((QUOTE(((t1.c0)<<(t0.c2)))) ISNULL));
SELECT DISTINCT t0.c1, t0.c0, t1.c0, t0.c2 FROM t1, t0;
SELECT t0.c2 FROM t0, t1, vt0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0, t1, vt0 WHERE ((((+ (vt0.c1)))-(((t0.c0)IS NOT(t1.c0))))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0, t1, vt0 WHERE ((NOT ((((+ (vt0.c1)))-(((t0.c0)IS NOT(t1.c0))))))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0, t1, vt0 WHERE ((((((+ (vt0.c1)))-(((t0.c0)IS NOT(t1.c0))))) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0, t1, vt0 GROUP BY t0.c2;
SELECT ALL t1.c0, t0.c1, t0.c0, vt0.c0, t0.c2 FROM t0, t1, vt0 GROUP BY t1.c0, t0.c1, t0.c0, vt0.c0, t0.c2;
SELECT t1.c0, t0.c1, t0.c0, vt0.c0, t0.c2 FROM t0, t1, vt0 GROUP BY t1.c0, t0.c1, t0.c0, vt0.c0, t0.c2 HAVING MIN(GROUP_CONCAT(COUNT(MAX(SUM(vt0.c1))))) UNION ALL SELECT ALL t1.c0, t0.c1, t0.c0, vt0.c0, t0.c2 FROM t0, t1, vt0 GROUP BY t1.c0, t0.c1, t0.c0, vt0.c0, t0.c2 HAVING (NOT (MIN(GROUP_CONCAT(COUNT(MAX(SUM(vt0.c1))))))) UNION ALL SELECT t1.c0, t0.c1, t0.c0, vt0.c0, t0.c2 FROM t0, t1, vt0 GROUP BY t1.c0, t0.c1, t0.c0, vt0.c0, t0.c2 HAVING ((MIN(GROUP_CONCAT(COUNT(MAX(SUM(vt0.c1)))))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((~ (((((((((t0.c0)OR(t0.c0)))OR(t0.c2)))OR(t0.c0)))AND('LW*A/Z'))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((~ (((((((((t0.c0)OR(t0.c0)))OR(t0.c2)))OR(t0.c0)))AND('LW*A/Z'))))))) UNION ALL SELECT * FROM t0 WHERE ((((~ (((((((((t0.c0)OR(t0.c0)))OR(t0.c2)))OR(t0.c0)))AND('LW*A/Z'))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c0, t0.c1 FROM vt0 RIGHT OUTER JOIN t0 ON ((CAST(t0.c0 AS INTEGER))||(((((t1.c0)OR(t0.c2)))OR(-465818496)))) INNER JOIN t1 ON ((CAST(vt0.c1 AS TEXT)) NOT BETWEEN (((vt0.c1)>=(t1.c0))) AND (((vt0.c1) NOT NULL)));
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 WHERE (((CAST(t0.c2 AS NUMERIC))LIKE((t0.c2 IN ())))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE ((NOT (((CAST(t0.c2 AS NUMERIC))LIKE((t0.c2 IN ())))))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 WHERE (((((CAST(t0.c2 AS NUMERIC))LIKE((t0.c2 IN ())))) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t1.c0 FROM t1, vt0, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, vt0, t0 GROUP BY t1.c0 HAVING CASE TOTAL(COUNT(*))  WHEN MIN(t0.c2) THEN AVG('-462001000') ELSE 0.8008911338594545 END UNION ALL SELECT ALL t1.c0 FROM t1, vt0, t0 GROUP BY t1.c0 HAVING (NOT (CASE TOTAL(COUNT(*))  WHEN MIN(t0.c2) THEN AVG('-462001000') ELSE 0.8008911338594545 END)) UNION ALL SELECT t1.c0 FROM t1, vt0, t0 GROUP BY t1.c0 HAVING ((CASE TOTAL(COUNT(*))  WHEN MIN(t0.c2) THEN AVG('-462001000') ELSE 0.8008911338594545 END) ISNULL);
SELECT t0.c1, t0.c0, t0.c2, vt0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN vt0 ON CAST(vt0.c0 AS TEXT) RIGHT OUTER JOIN t0 ON ((CASE t0.c0  WHEN t1.c0 THEN vt0.c1 WHEN NULL THEN t0.c1 WHEN t0.c2 THEN vt0.c1 ELSE vt0.c0 END)OR((((t1.c0)) BETWEEN ((t0.c2)) AND ((t0.c1)))));
SELECT ALL t0.c1, t0.c0, t0.c2, vt0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN vt0 ON CAST(vt0.c0 AS TEXT) RIGHT OUTER JOIN t0 ON ((CASE t0.c0  WHEN t1.c0 THEN vt0.c1 WHEN NULL THEN t0.c1 WHEN t0.c2 THEN vt0.c1 ELSE vt0.c0 END)OR((((t1.c0)) BETWEEN ((t0.c2)) AND ((t0.c1))))) WHERE (((((((((t0.c1)AND((((t0.c1)) BETWEEN ((t0.c0)) AND ((x''))))))OR(((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(CAST(t0.c2 AS BLOB))))AND(((t0.c0)*(vt0.c0))))) UNION ALL SELECT t0.c1, t0.c0, t0.c2, vt0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN vt0 ON CAST(vt0.c0 AS TEXT) RIGHT OUTER JOIN t0 ON ((CASE t0.c0  WHEN t1.c0 THEN vt0.c1 WHEN NULL THEN t0.c1 WHEN t0.c2 THEN vt0.c1 ELSE vt0.c0 END)OR((((t1.c0)) BETWEEN ((t0.c2)) AND ((t0.c1))))) WHERE ((NOT (((((((((t0.c1)AND((((t0.c1)) BETWEEN ((t0.c0)) AND ((x''))))))OR(((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(CAST(t0.c2 AS BLOB))))AND(((t0.c0)*(vt0.c0))))))) UNION ALL SELECT t0.c1, t0.c0, t0.c2, vt0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN vt0 ON CAST(vt0.c0 AS TEXT) RIGHT OUTER JOIN t0 ON ((CASE t0.c0  WHEN t1.c0 THEN vt0.c1 WHEN NULL THEN t0.c1 WHEN t0.c2 THEN vt0.c1 ELSE vt0.c0 END)OR((((t1.c0)) BETWEEN ((t0.c2)) AND ((t0.c1))))) WHERE (((((((((((t0.c1)AND((((t0.c1)) BETWEEN ((t0.c0)) AND ((x''))))))OR(((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(CAST(t0.c2 AS BLOB))))AND(((t0.c0)*(vt0.c0))))) ISNULL));
SELECT t0.c1, t0.c0, t0.c2, vt0.c0, t1.c0 FROM t1 RIGHT OUTER JOIN vt0 ON CAST(vt0.c0 AS TEXT) RIGHT OUTER JOIN t0 ON ((CASE t0.c0  WHEN t1.c0 THEN vt0.c1 WHEN NULL THEN t0.c1 WHEN t0.c2 THEN vt0.c1 ELSE vt0.c0 END)OR((((t1.c0)) BETWEEN ((t0.c2)) AND ((t0.c1)))));
SELECT DISTINCT t1.c0, vt0.c0 FROM vt0, t1;
SELECT DISTINCT t1.c0, vt0.c0 FROM vt0, t1 WHERE (((((t1.c0) BETWEEN (vt0.c1) AND (vt0.c1)))>>(INSTR(t1.c0, NULL)))) UNION SELECT DISTINCT t1.c0, vt0.c0 FROM vt0, t1 WHERE ((NOT (((((t1.c0) BETWEEN (vt0.c1) AND (vt0.c1)))>>(INSTR(t1.c0, NULL)))))) UNION SELECT DISTINCT t1.c0, vt0.c0 FROM vt0, t1 WHERE (((((((t1.c0) BETWEEN (vt0.c1) AND (vt0.c1)))>>(INSTR(t1.c0, NULL)))) ISNULL));
SELECT DISTINCT t1.c0, vt0.c0 FROM vt0, t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (CASE WHEN t1.c0 COLLATE BINARY THEN ((0.5476025413733907) NOTNULL) ELSE CAST(t1.c0 AS NUMERIC) END) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (CASE WHEN t1.c0 COLLATE BINARY THEN ((0.5476025413733907) NOTNULL) ELSE CAST(t1.c0 AS NUMERIC) END))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((CASE WHEN t1.c0 COLLATE BINARY THEN ((0.5476025413733907) NOTNULL) ELSE CAST(t1.c0 AS NUMERIC) END) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
