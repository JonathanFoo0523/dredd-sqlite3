-- Time: 2024/06/11 00:19:27
-- Database: database23
-- Database version: 3.40.0
-- seed value: 1198373723
PRAGMA cache_size = 50000; -- 10ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ABORT INTO rt0(c2) VALUES (0x589ffb83); -- 1ms;
VACUUM; -- 1ms;
UPDATE OR FAIL rt0 SET (c2, c0, c2)=('1486879619', NULL, '') WHERE ((NOT (rt0.c2)) IN ()); -- 1ms;
UPDATE OR IGNORE rt0 SET c1=0.17271641353013756 WHERE LIKE((((rt0.c1, rt0.c0, rt0.c0))!=((rt0.c0, rt0.c0, rt0.c1))), ((rt0.c2) NOTNULL), '('); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(x'8e61'); -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (0x81632cf, 0.1600697050529588); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0.4527808967899447 WHERE TYPEOF(0.4527808967899447); -- 0ms;
UPDATE OR REPLACE rt0 SET c0=0X70492dd4 WHERE CASE '1476371280'  WHEN (+ (rt0.c2)) THEN ((rt0.c2) IS FALSE) ELSE 1.883844052E9 END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((CASE WHEN '0.17271641353013756' THEN x'' WHEN '14267806' THEN '1883844052' WHEN 'Oo|Xy' THEN '(/*ꍐ' END)OR(((((0xd9b59e)AND(1.47637128E9)))AND('2035519292')))))AND((x'' IN (0Xffffffffefdc0a16)))))OR(((2035519292) ISNULL))))AND(0.7854174583993448)))OR(x'' COLLATE RTRIM)))OR(('3.N6' IN ()))); -- 0ms;
COMMIT; -- 0ms;
UPDATE OR REPLACE rt0 SET c0='', c1='},'; -- 0ms;
UPDATE rt0 SET c0=x'', c0=x'f89f' WHERE (~ ((- (rt0.c1)))); -- 0ms;
UPDATE OR REPLACE rt0 SET (c1, c1, c2)=(0x70492dd4, x'66f9', NULL) WHERE rt0.c1; -- 1ms;
UPDATE OR FAIL rt0 SET c0=0.1600697050529588 WHERE ((((('yH') NOTNULL), rt0.c2 COLLATE RTRIM, ((rt0.c1) ISNULL)))<=((ABS(DISTINCT rt0.c1), ((rt0.c0)-(rt0.c0)), ((rt0.c2)||(rt0.c1))))); -- 0ms;
UPDATE OR REPLACE rt0 SET c0=1.486879619E9 WHERE ((rt0.c1 IN ()) IN ()); -- 0ms;
UPDATE OR IGNORE rt0 SET c2='', c1='{/ꐽU', c1=0.7727151514683144; -- 1ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2, c0) VALUES (x'', NULL, x'bcb1'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c0, c2) VALUES (x'', 0.37242431430845135, 0.6925677887036481); -- 1ms;
INSERT OR ABORT INTO rt0(c1, c0, c2) VALUES (1731952570, NULL, NULL), (x'', 0.1496824568103846, -2.7079217E8), (0x4c210d44, 'VM', 'C'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES ('떞['), (0.19812431986280765), (14267806); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(NULL) WHERE ((NULLIF(rt0.c0, rt0.c1))||(rt0.c2 COLLATE RTRIM)); -- 1ms;
ANALYZE main; -- 0ms;
COMMIT; -- 0ms;
REINDEX; -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (x'5901', ''); -- 1ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT (((+ (rt0.c0)))IS(((rt0.c0) NOT NULL))) FROM rt0; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
CREATE TEMP TABLE t0 (c0 TEXT ); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES (0.41507351614150334); -- 0ms;
ANALYZE t0; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA mmap_size; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(x''); -- 0ms;
INSERT OR ABORT INTO rt0(c1, c2, c0) VALUES ('1791277699', 'VH-i￤&O_K', NULL), (x'', NULL, x''), ('1883844052', x'', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c1) VALUES ('1487732708', x'', NULL); -- 1ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c23; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ''); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c23 TO c51; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET c0=872065961; -- 0ms;
PRAGMA main.optimize; -- 1ms;
UPDATE t0 SET c0='', c0=NULL, c0=0Xffffffffca167bf3; -- 0ms;
END TRANSACTION; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA foreign_keys; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE t0 SET c0=x'' WHERE 'S떞Lo2ﮃqx0'; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '12273'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c63; -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
DROP TABLE vt0; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c63 TO c73; -- 0ms;
UPDATE OR IGNORE t0 SET (c73, c73, c73)=(-1.735220163E9, '┠y2', 0.1600697050529588); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t0(c73) VALUES (-625554830); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE t0; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c50; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c50=0Xffffffffe5181b8c WHERE '/''%c}i'; -- 0ms;
UPDATE t0 SET c50='-2015159039', c50='-270792170', c50=1791277699; -- 0ms;
UPDATE OR IGNORE t0 SET c50=-1.735220163E9, c50=738128895; -- 0ms;
PRAGMA temp.auto_vacuum; -- 0ms;
REINDEX  rt0; -- 0ms;
PRAGMA threads = 1831372061584452933; -- 0ms;
UPDATE OR IGNORE rt0 SET c2='1791277699', c1='-592350178', c2=x'76b3' WHERE x''; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rt0.c0, rt0.c1 FROM t0, rt0, v0;
SELECT ALL rt0.c0, rt0.c1 FROM t0, rt0, v0 WHERE ((rt0.c2 IN ())) UNION ALL SELECT rt0.c0, rt0.c1 FROM t0, rt0 NOT INDEXED, v0 WHERE ((NOT ((rt0.c2 IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM t0, rt0, v0 WHERE ((((rt0.c2 IN ())) ISNULL));
SELECT rt0.c0, rt0.c1 FROM t0, rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM t0 CROSS JOIN v0 ON ((((rt0.c2)GLOB(rt0.c0)))OR(CASE rt0.c0  WHEN v0.c0 THEN rt0.c2 END)) RIGHT OUTER JOIN rt0 ON CASE WHEN CASE WHEN rt0.c2 THEN v0.c0 WHEN x'' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END THEN rt0.c1 COLLATE BINARY WHEN ((((((((rt0.c0)AND(rt0.c0)))OR(v0.c0)))AND(rt0.c0)))AND(v0.c0)) THEN NULL WHEN '	l' THEN ((-9.04496141E8)||(v0.c0)) END;
SELECT t0.c50, v0.c0 FROM v0, t0 GROUP BY t0.c50, v0.c0;
SELECT t0.c50, v0.c0 FROM v0, t0 WHERE (CASE CAST(v0.c0 AS BLOB)  WHEN ((((v0.c0)AND(v0.c0)))AND(0.1496824568103846)) THEN json_object(v0.c0, v0.c0) WHEN ((t0.c50)&(x'd585')) THEN TRIM(DISTINCT t0.c50) WHEN v0.c0 THEN (t0.c50 IN ()) WHEN ((((t0.c50)AND(v0.c0)))OR(t0.c50)) THEN t0.c50 COLLATE BINARY WHEN (- (v0.c0)) THEN ((v0.c0)&(t0.c50)) END) GROUP BY t0.c50, v0.c0 UNION SELECT t0.c50, v0.c0 FROM v0, t0 WHERE ((NOT (CASE CAST(v0.c0 AS BLOB)  WHEN ((((v0.c0)AND(v0.c0)))AND(0.1496824568103846)) THEN json_object(v0.c0, v0.c0) WHEN ((t0.c50)&(x'd585')) THEN TRIM(DISTINCT t0.c50) WHEN v0.c0 THEN (t0.c50 IN ()) WHEN ((((t0.c50)AND(v0.c0)))OR(t0.c50)) THEN t0.c50 COLLATE BINARY WHEN (- (v0.c0)) THEN ((v0.c0)&(t0.c50)) END))) GROUP BY t0.c50, v0.c0 UNION SELECT t0.c50, v0.c0 FROM v0, t0 WHERE (((CASE CAST(v0.c0 AS BLOB)  WHEN ((((v0.c0)AND(v0.c0)))AND(0.1496824568103846)) THEN json_object(v0.c0, v0.c0) WHEN ((t0.c50)&(x'd585')) THEN TRIM(DISTINCT t0.c50) WHEN v0.c0 THEN (t0.c50 IN ()) WHEN ((((t0.c50)AND(v0.c0)))OR(t0.c50)) THEN t0.c50 COLLATE BINARY WHEN (- (v0.c0)) THEN ((v0.c0)&(t0.c50)) END) ISNULL)) GROUP BY t0.c50, v0.c0;
SELECT t0.c50, v0.c0 FROM v0, t0 GROUP BY t0.c50, v0.c0;
SELECT rt0.c2, t0.c50 FROM v0, t0, rt0 GROUP BY rt0.c2, t0.c50;
SELECT rt0.c2, t0.c50 FROM v0, t0, rt0 GROUP BY rt0.c2, t0.c50 HAVING NULL UNION ALL SELECT rt0.c2, t0.c50 FROM v0, t0, rt0 GROUP BY rt0.c2, t0.c50 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c2, t0.c50 FROM v0, t0, rt0 GROUP BY rt0.c2, t0.c50 HAVING ((NULL) ISNULL);
SELECT rt0.c2, t0.c50 FROM v0, t0, rt0 GROUP BY rt0.c2, t0.c50;
SELECT rt0.c2, t0.c50 FROM v0, t0, rt0 GROUP BY rt0.c2, t0.c50 HAVING NULL UNION ALL SELECT rt0.c2, t0.c50 FROM v0, t0, rt0 GROUP BY rt0.c2, t0.c50 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c2, t0.c50 FROM v0, t0, rt0 GROUP BY rt0.c2, t0.c50 HAVING ((NULL) ISNULL);
SELECT rt0.c2, t0.c50 FROM v0, t0, rt0 GROUP BY rt0.c2, t0.c50;
SELECT ALL * FROM rt0, v0, t0;
SELECT * FROM rt0, v0, t0 WHERE (((CASE WHEN rt0.c2 THEN t0.c50 ELSE v0.c0 END)+(0.7040217516206813))) UNION ALL SELECT * FROM rt0, v0, t0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN t0.c50 ELSE v0.c0 END)+(0.7040217516206813))))) UNION ALL SELECT ALL * FROM rt0, v0, t0 WHERE (((((CASE WHEN rt0.c2 THEN t0.c50 ELSE v0.c0 END)+(0.7040217516206813))) ISNULL));
SELECT ALL * FROM rt0, v0, t0;
SELECT DISTINCT rt0.c2, t0.c50, rt0.c0 FROM v0, t0, rt0;
SELECT DISTINCT rt0.c2, t0.c50, rt0.c0 FROM v0, t0, rt0 WHERE ((+ (((((((((v0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1))))) UNION SELECT DISTINCT rt0.c2, t0.c50, rt0.c0 FROM v0, t0, rt0 WHERE ((NOT ((+ (((((((((v0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1))))))) UNION SELECT DISTINCT rt0.c2, t0.c50, rt0.c0 FROM v0, t0, rt0 WHERE ((((+ (((((((((v0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2, t0.c50, rt0.c0 FROM v0, t0, rt0;
SELECT ALL rt0.c0, t0.c50 FROM rt0, t0 GROUP BY rt0.c0, t0.c50;
SELECT ALL rt0.c0, t0.c50 FROM rt0, t0 WHERE ((NOT ((+ (rt0.c0))))) GROUP BY rt0.c0, t0.c50 UNION SELECT ALL rt0.c0, t0.c50 FROM rt0 NOT INDEXED, t0 WHERE ((NOT ((NOT ((+ (rt0.c0))))))) GROUP BY rt0.c0, t0.c50 UNION SELECT rt0.c0, t0.c50 FROM rt0, t0 WHERE ((((NOT ((+ (rt0.c0))))) ISNULL)) GROUP BY rt0.c0, t0.c50;
SELECT ALL rt0.c0, t0.c50 FROM rt0, t0 GROUP BY rt0.c0, t0.c50;
SELECT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (MAX(TOTAL(COUNT(rt0.c0))) IN ()) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT ((MAX(TOTAL(COUNT(rt0.c0))) IN ()))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (((MAX(TOTAL(COUNT(rt0.c0))) IN ())) ISNULL);
SELECT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (MAX(TOTAL(COUNT(rt0.c0))) IN ()) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT ((MAX(TOTAL(COUNT(rt0.c0))) IN ()))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (((MAX(TOTAL(COUNT(rt0.c0))) IN ())) ISNULL);
SELECT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL * FROM t0 CROSS JOIN v0 ON ((((rt0.c0)=(rt0.c1))) BETWEEN (((rt0.c2)GLOB(rt0.c1))) AND (((((((((rt0.c2)AND(NULL)))AND(t0.c50)))OR(rt0.c0)))OR(t0.c50)))) FULL OUTER JOIN rt0 ON NULL;
SELECT DISTINCT rt0.c1, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c1, v0.c0 FROM rt0, v0 WHERE ((((+ (rt0.c2))) ISNULL)) UNION SELECT DISTINCT rt0.c1, v0.c0 FROM rt0, v0 WHERE ((NOT ((((+ (rt0.c2))) ISNULL)))) UNION SELECT DISTINCT rt0.c1, v0.c0 FROM rt0, v0 WHERE ((((((+ (rt0.c2))) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0 FROM rt0, v0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c2 IN ())) IS TRUE)) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2 IN ())) IS TRUE)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c2 IN ())) IS TRUE)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING ((CASE COUNT(t0.c50)  WHEN MIN(t0.c50) THEN t0.c50 END) ISNULL) UNION ALL SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING (NOT (((CASE COUNT(t0.c50)  WHEN MIN(t0.c50) THEN t0.c50 END) ISNULL))) UNION ALL SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50 HAVING ((((CASE COUNT(t0.c50)  WHEN MIN(t0.c50) THEN t0.c50 END) ISNULL)) ISNULL);
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING ((CASE COUNT(t0.c50)  WHEN MIN(t0.c50) THEN t0.c50 END) ISNULL) UNION ALL SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING (NOT (((CASE COUNT(t0.c50)  WHEN MIN(t0.c50) THEN t0.c50 END) ISNULL))) UNION ALL SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50 HAVING ((((CASE COUNT(t0.c50)  WHEN MIN(t0.c50) THEN t0.c50 END) ISNULL)) ISNULL);
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL rt0.c0 FROM t0, rt0;
SELECT rt0.c0 FROM t0, rt0 WHERE (((((((((((rt0.c2)AND(rt0.c0)))OR(t0.c50)))OR(rt0.c0)))AND(rt0.c0)))>((+ (rt0.c0))))) UNION ALL SELECT ALL rt0.c0 FROM t0, rt0 WHERE ((NOT (((((((((((rt0.c2)AND(rt0.c0)))OR(t0.c50)))OR(rt0.c0)))AND(rt0.c0)))>((+ (rt0.c0))))))) UNION ALL SELECT rt0.c0 FROM t0, rt0 WHERE (((((((((((((rt0.c2)AND(rt0.c0)))OR(t0.c50)))OR(rt0.c0)))AND(rt0.c0)))>((+ (rt0.c0))))) ISNULL));
SELECT ALL rt0.c0 FROM t0, rt0;
SELECT DISTINCT v0.c0, t0.c50, rt0.c2, rt0.c0 FROM v0, t0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c1)>(rt0.c0)) THEN ((rt0.c1)<=(v0.c0)) END;
SELECT DISTINCT v0.c0, t0.c50, rt0.c2, rt0.c0 FROM v0, t0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c1)>(rt0.c0)) THEN ((rt0.c1)<=(v0.c0)) END WHERE (rt0.c2) UNION SELECT DISTINCT v0.c0, t0.c50, rt0.c2, rt0.c0 FROM v0, t0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c1)>(rt0.c0)) THEN ((rt0.c1)<=(v0.c0)) END WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT v0.c0, t0.c50, rt0.c2, rt0.c0 FROM v0, t0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c1)>(rt0.c0)) THEN ((rt0.c1)<=(v0.c0)) END WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT v0.c0, t0.c50, rt0.c2, rt0.c0 FROM v0, t0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c1)>(rt0.c0)) THEN ((rt0.c1)<=(v0.c0)) END;
SELECT rt0.c2, rt0.c1, v0.c0, t0.c50 FROM t0, rt0, v0 GROUP BY rt0.c2, rt0.c1, v0.c0, t0.c50;
SELECT rt0.c2, rt0.c1, v0.c0, t0.c50 FROM t0, rt0, v0 WHERE (((CAST(rt0.c2 AS NUMERIC)) IS FALSE)) GROUP BY rt0.c2, rt0.c1, v0.c0, t0.c50 UNION SELECT ALL rt0.c2, rt0.c1, v0.c0, t0.c50 FROM t0, rt0, v0 WHERE ((NOT (((CAST(rt0.c2 AS NUMERIC)) IS FALSE)))) GROUP BY rt0.c2, rt0.c1, v0.c0, t0.c50 UNION SELECT ALL rt0.c2, rt0.c1, v0.c0, t0.c50 FROM t0, rt0, v0 WHERE (((((CAST(rt0.c2 AS NUMERIC)) IS FALSE)) ISNULL)) GROUP BY rt0.c2, rt0.c1, v0.c0, t0.c50;
SELECT rt0.c2, rt0.c1, v0.c0, t0.c50 FROM t0, rt0, v0 GROUP BY rt0.c2, rt0.c1, v0.c0, t0.c50;
SELECT ALL rt0.c2, t0.c50, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c50, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, t0.c50, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c50, rt0.c1, rt0.c0 HAVING GROUP_CONCAT(rt0.c0 COLLATE NOCASE) UNION ALL SELECT ALL rt0.c2, t0.c50, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c50, rt0.c1, rt0.c0 HAVING (NOT (GROUP_CONCAT(rt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c2, t0.c50, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c50, rt0.c1, rt0.c0 HAVING ((GROUP_CONCAT(rt0.c0 COLLATE NOCASE)) ISNULL);
SELECT ALL rt0.c2, t0.c50, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c50, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, t0.c50, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c50, rt0.c1, rt0.c0 HAVING GROUP_CONCAT(rt0.c0 COLLATE NOCASE) UNION ALL SELECT ALL rt0.c2, t0.c50, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c50, rt0.c1, rt0.c0 HAVING (NOT (GROUP_CONCAT(rt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c2, t0.c50, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c50, rt0.c1, rt0.c0 HAVING ((GROUP_CONCAT(rt0.c0 COLLATE NOCASE)) ISNULL);
SELECT ALL rt0.c2, t0.c50, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c50, rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0, t0.c50, v0.c0 FROM t0, v0, rt0;
SELECT ALL rt0.c1, rt0.c0, t0.c50, v0.c0 FROM t0, v0, rt0 WHERE (((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c0))) BETWEEN (ABS(DISTINCT rt0.c0)) AND (((v0.c0) BETWEEN (rt0.c1) AND (x'aadc'))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, t0.c50, v0.c0 FROM t0, v0, rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c0))) BETWEEN (ABS(DISTINCT rt0.c0)) AND (((v0.c0) BETWEEN (rt0.c1) AND (x'aadc'))))))) UNION ALL SELECT rt0.c1, rt0.c0, t0.c50, v0.c0 FROM t0, v0, rt0 WHERE (((((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c0))) BETWEEN (ABS(DISTINCT rt0.c0)) AND (((v0.c0) BETWEEN (rt0.c1) AND (x'aadc'))))) ISNULL));
SELECT rt0.c1, rt0.c0, t0.c50, v0.c0 FROM t0, v0, rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((CAST(rt0.c0 AS TEXT) IN (v0.c0))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((CAST(rt0.c0 AS TEXT) IN (v0.c0))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((CAST(rt0.c0 AS TEXT) IN (v0.c0))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT t0.c50 FROM rt0, t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM rt0, t0 WHERE (((((((((CAST(rt0.c2 AS REAL))OR(t0.c50 COLLATE BINARY)))AND((rt0.c1 IN (t0.c50)))))AND((t0.c50 IN (rt0.c0)))))OR((((rt0.c2, rt0.c2, t0.c50)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c0)))))) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM rt0, t0 WHERE ((NOT (((((((((CAST(rt0.c2 AS REAL))OR(t0.c50 COLLATE BINARY)))AND((rt0.c1 IN (t0.c50)))))AND((t0.c50 IN (rt0.c0)))))OR((((rt0.c2, rt0.c2, t0.c50)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c0)))))))) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM rt0, t0 WHERE (((((((((((CAST(rt0.c2 AS REAL))OR(t0.c50 COLLATE BINARY)))AND((rt0.c1 IN (t0.c50)))))AND((t0.c50 IN (rt0.c0)))))OR((((rt0.c2, rt0.c2, t0.c50)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c0)))))) ISNULL)) GROUP BY t0.c50;
SELECT t0.c50 FROM rt0, t0 GROUP BY t0.c50;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c1, rt0.c2, t0.c50, rt0.c0, v0.c0 FROM t0, rt0 LEFT OUTER JOIN v0 ON ((((((t0.c50)OR(1731952570)))OR(rt0.c0)))GLOB((~ (rt0.c0))));
SELECT ALL rt0.c1, rt0.c2, t0.c50, rt0.c0, v0.c0 FROM t0, rt0 LEFT OUTER JOIN v0 ON ((((((t0.c50)OR(1731952570)))OR(rt0.c0)))GLOB((~ (rt0.c0)))) WHERE (((((((v0.c0)) BETWEEN ((t0.c50)) AND ((t0.c50)))))<(((NOT (rt0.c2)))))) UNION ALL SELECT rt0.c1, rt0.c2, t0.c50, rt0.c0, v0.c0 FROM t0, rt0 LEFT OUTER JOIN v0 ON ((((((t0.c50)OR(1731952570)))OR(rt0.c0)))GLOB((~ (rt0.c0)))) WHERE ((NOT (((((((v0.c0)) BETWEEN ((t0.c50)) AND ((t0.c50)))))<(((NOT (rt0.c2)))))))) UNION ALL SELECT rt0.c1, rt0.c2, t0.c50, rt0.c0, v0.c0 FROM t0, rt0 LEFT OUTER JOIN v0 ON ((((((t0.c50)OR(1731952570)))OR(rt0.c0)))GLOB((~ (rt0.c0)))) WHERE (((((((((v0.c0)) BETWEEN ((t0.c50)) AND ((t0.c50)))))<(((NOT (rt0.c2)))))) ISNULL));
SELECT rt0.c1, rt0.c2, t0.c50, rt0.c0, v0.c0 FROM t0, rt0 LEFT OUTER JOIN v0 ON ((((((t0.c50)OR(1731952570)))OR(rt0.c0)))GLOB((~ (rt0.c0))));
SELECT DISTINCT rt0.c2, t0.c50, rt0.c0, rt0.c1 FROM t0, rt0;
SELECT DISTINCT rt0.c2, t0.c50, rt0.c0, rt0.c1 FROM t0, rt0 WHERE ((CAST(rt0.c2 AS BLOB) IN (((rt0.c1)||(rt0.c1)), (t0.c50 IN ()), CAST(rt0.c0 AS REAL)))) UNION SELECT DISTINCT rt0.c2, t0.c50, rt0.c0, rt0.c1 FROM t0, rt0 WHERE ((NOT ((CAST(rt0.c2 AS BLOB) IN (((rt0.c1)||(rt0.c1)), (t0.c50 IN ()), CAST(rt0.c0 AS REAL)))))) UNION SELECT DISTINCT rt0.c2, t0.c50, rt0.c0, rt0.c1 FROM t0, rt0 WHERE ((((CAST(rt0.c2 AS BLOB) IN (((rt0.c1)||(rt0.c1)), (t0.c50 IN ()), CAST(rt0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT rt0.c2, t0.c50, rt0.c0, rt0.c1 FROM t0, rt0;
SELECT rt0.c2, rt0.c1 FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c0) ISNULL) COLLATE NOCASE FULL OUTER JOIN rt0 ON x'' GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c0) ISNULL) COLLATE NOCASE FULL OUTER JOIN rt0 ON x'' WHERE ((((rt0.c2)!=(v0.c0)) IN ())) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c0) ISNULL) COLLATE NOCASE FULL OUTER JOIN rt0 ON x'' WHERE ((NOT ((((rt0.c2)!=(v0.c0)) IN ())))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c0) ISNULL) COLLATE NOCASE FULL OUTER JOIN rt0 ON x'' WHERE ((((((rt0.c2)<>(v0.c0)) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c0) ISNULL) COLLATE NOCASE FULL OUTER JOIN rt0 ON x'' GROUP BY rt0.c2, rt0.c1;
SELECT ALL t0.c50, v0.c0 FROM t0 NATURAL JOIN v0 GROUP BY t0.c50, v0.c0;
SELECT t0.c50, v0.c0 FROM t0 NATURAL JOIN v0 GROUP BY t0.c50, v0.c0 HAVING t0.c50 UNION ALL SELECT t0.c50, v0.c0 FROM t0 NATURAL JOIN v0 GROUP BY t0.c50, v0.c0 HAVING (NOT (t0.c50)) UNION ALL SELECT ALL t0.c50, v0.c0 FROM t0 NATURAL JOIN v0 GROUP BY t0.c50, v0.c0 HAVING ((t0.c50) ISNULL);
SELECT ALL t0.c50, v0.c0 FROM t0 NATURAL JOIN v0 GROUP BY t0.c50, v0.c0;
SELECT t0.c50, v0.c0 FROM t0 NATURAL JOIN v0 GROUP BY t0.c50, v0.c0 HAVING t0.c50 UNION ALL SELECT t0.c50, v0.c0 FROM t0 NATURAL JOIN v0 GROUP BY t0.c50, v0.c0 HAVING (NOT (t0.c50)) UNION ALL SELECT ALL t0.c50, v0.c0 FROM t0 NATURAL JOIN v0 GROUP BY t0.c50, v0.c0 HAVING ((t0.c50) ISNULL);
SELECT ALL t0.c50, v0.c0 FROM t0 NATURAL JOIN v0 GROUP BY t0.c50, v0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c1) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, t0.c50, rt0.c2, v0.c0 FROM t0, rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c0, t0.c50, rt0.c2, v0.c0 FROM t0, rt0, v0 WHERE (((((t0.c50) NOT BETWEEN (rt0.c0) AND (rt0.c0)))>>(CAST(rt0.c0 AS REAL)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, t0.c50, rt0.c2, v0.c0 FROM t0, rt0, v0 WHERE ((NOT (((((t0.c50) NOT BETWEEN (rt0.c0) AND (rt0.c0)))>>(CAST(rt0.c0 AS REAL)))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, t0.c50, rt0.c2, v0.c0 FROM t0, rt0, v0 WHERE (((((((t0.c50) NOT BETWEEN (rt0.c0) AND (rt0.c0)))>>(CAST(rt0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, t0.c50, rt0.c2, v0.c0 FROM t0, rt0, v0;
SELECT ALL v0.c0, t0.c50, rt0.c0 FROM rt0, t0, v0 GROUP BY v0.c0, t0.c50, rt0.c0;
SELECT v0.c0, t0.c50, rt0.c0 FROM rt0, t0, v0 WHERE ((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND(v0.c0)) IN (CAST(t0.c50 AS REAL)))) GROUP BY v0.c0, t0.c50, rt0.c0 UNION SELECT ALL v0.c0, t0.c50, rt0.c0 FROM rt0, t0, v0 WHERE ((NOT ((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND(v0.c0)) IN (CAST(t0.c50 AS REAL)))))) GROUP BY v0.c0, t0.c50, rt0.c0 UNION SELECT v0.c0, t0.c50, rt0.c0 FROM rt0, t0, v0 WHERE ((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND(v0.c0)) IN (CAST(t0.c50 AS REAL)))) ISNULL)) GROUP BY v0.c0, t0.c50, rt0.c0;
SELECT ALL v0.c0, t0.c50, rt0.c0 FROM rt0, t0, v0 GROUP BY v0.c0, t0.c50, rt0.c0;
SELECT ALL v0.c0, rt0.c1 FROM rt0, t0, v0 GROUP BY v0.c0, rt0.c1;
SELECT v0.c0, rt0.c1 FROM rt0, t0, v0 GROUP BY v0.c0, rt0.c1 HAVING AVG(GROUP_CONCAT(SUM(rt0.c2))) UNION ALL SELECT v0.c0, rt0.c1 FROM rt0, t0, v0 GROUP BY v0.c0, rt0.c1 HAVING (NOT (AVG(GROUP_CONCAT(SUM(rt0.c2))))) UNION ALL SELECT ALL v0.c0, rt0.c1 FROM rt0, t0, v0 GROUP BY v0.c0, rt0.c1 HAVING ((AVG(GROUP_CONCAT(SUM(rt0.c2)))) ISNULL);
SELECT v0.c0, t0.c50 FROM t0, v0, rt0;
SELECT v0.c0, t0.c50 FROM t0, v0, rt0 WHERE (x'4ee2') UNION ALL SELECT ALL v0.c0, t0.c50 FROM t0, v0, rt0 WHERE ((NOT (x'4ee2'))) UNION ALL SELECT v0.c0, t0.c50 FROM t0, v0, rt0 WHERE (((x'4ee2') ISNULL));
SELECT v0.c0, t0.c50 FROM t0, v0, rt0;
SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON rt0.c2 INNER JOIN v0 ON (x'' IN ());
SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON rt0.c2 INNER JOIN v0 ON (x'' IN ()) WHERE ((((NOT (rt0.c2))) IS TRUE)) UNION SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON rt0.c2 INNER JOIN v0 ON (x'' IN ()) WHERE ((NOT ((((NOT (rt0.c2))) IS TRUE)))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON rt0.c2 INNER JOIN v0 ON (x'' IN ()) WHERE ((((((NOT (rt0.c2))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON rt0.c2 INNER JOIN v0 ON (x'' IN ());
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (CAST(CAST(0Xffffffffef653af6 AS BLOB) AS BLOB)) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST(CAST(0xffffffffef653af6 AS BLOB) AS BLOB)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(CAST(0Xffffffffef653af6 AS BLOB) AS BLOB)) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c1 FROM v0, t0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, t0, rt0 GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c1 FROM v0, t0, rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1 FROM v0 NOT INDEXED, t0, rt0 GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1 FROM v0, t0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, t0, rt0 GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c1 FROM v0, t0, rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1 FROM v0 NOT INDEXED, t0, rt0 GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1 FROM v0, t0, rt0 GROUP BY rt0.c1;
SELECT * FROM rt0, v0, t0;
SELECT * FROM rt0, v0, t0 WHERE (CASE WHEN (t0.c50 IN ()) THEN ((t0.c50)==(rt0.c0)) WHEN UNLIKELY(DISTINCT t0.c50) THEN CASE WHEN rt0.c1 THEN v0.c0 WHEN t0.c50 THEN v0.c0 WHEN '-1162265844' THEN rt0.c1 END WHEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((''))) END) UNION ALL SELECT ALL * FROM rt0, v0, t0 WHERE ((NOT (CASE WHEN (t0.c50 IN ()) THEN ((t0.c50)==(rt0.c0)) WHEN UNLIKELY(DISTINCT t0.c50) THEN CASE WHEN rt0.c1 THEN v0.c0 WHEN t0.c50 THEN v0.c0 WHEN '-1162265844' THEN rt0.c1 END WHEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((''))) END))) UNION ALL SELECT ALL * FROM rt0, v0, t0 WHERE (((CASE WHEN (t0.c50 IN ()) THEN ((t0.c50)==(rt0.c0)) WHEN UNLIKELY(DISTINCT t0.c50) THEN CASE WHEN rt0.c1 THEN v0.c0 WHEN t0.c50 THEN v0.c0 WHEN '-1162265844' THEN rt0.c1 END WHEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((''))) END) ISNULL));
SELECT * FROM rt0, v0, t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN (-1804973330) AND (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE BINARY) NOT BETWEEN (-1804973330) AND (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0 COLLATE BINARY) NOT BETWEEN (-1804973330) AND (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 WHERE ((((CASE WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END, CASE t0.c50  WHEN NULL THEN t0.c50 WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c50 ELSE '' END, (t0.c50 IN ())))<=((t0.c50 COLLATE NOCASE, ((t0.c50) IS FALSE), ((t0.c50) NOT NULL))))) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM t0 WHERE ((NOT ((((CASE WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END, CASE t0.c50  WHEN NULL THEN t0.c50 WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c50 ELSE '' END, (t0.c50 IN ())))<=((t0.c50 COLLATE NOCASE, ((t0.c50) IS FALSE), ((t0.c50) NOT NULL))))))) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM t0 WHERE ((((((CASE WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END, CASE t0.c50  WHEN NULL THEN t0.c50 WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c50 ELSE '' END, (t0.c50 IN ())))<=((t0.c50 COLLATE NOCASE, ((t0.c50) IS FALSE), ((t0.c50) NOT NULL))))) ISNULL)) GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50;
SELECT rt0.c1, t0.c50, v0.c0 FROM rt0, v0, t0 GROUP BY rt0.c1, t0.c50, v0.c0;
SELECT ALL rt0.c1, t0.c50, v0.c0 FROM rt0, v0, t0 GROUP BY rt0.c1, t0.c50, v0.c0 HAVING CASE MAX('1731952570')  WHEN ((t0.c50) IS FALSE) THEN MIN(MAX(AVG(COUNT(COUNT(*))))) ELSE ((((v0.c0)AND(SUM(COUNT(*)))))AND(t0.c50)) END UNION ALL SELECT rt0.c1, t0.c50, v0.c0 FROM rt0, v0, t0 GROUP BY rt0.c1, t0.c50, v0.c0 HAVING (NOT (CASE MAX('1731952570')  WHEN ((t0.c50) IS FALSE) THEN MIN(MAX(AVG(COUNT(COUNT(*))))) ELSE ((((v0.c0)AND(SUM(COUNT(*)))))AND(t0.c50)) END)) UNION ALL SELECT rt0.c1, t0.c50, v0.c0 FROM rt0, v0, t0 GROUP BY rt0.c1, t0.c50, v0.c0 HAVING ((CASE MAX('1731952570')  WHEN ((t0.c50) IS FALSE) THEN MIN(MAX(AVG(COUNT(COUNT(*))))) ELSE ((((v0.c0)AND(SUM(COUNT(*)))))AND(t0.c50)) END) ISNULL);
SELECT MIN(((((rt0.c2) NOTNULL)) NOT NULL)) FROM t0, v0, rt0 ORDER BY (((v0.c0) BETWEEN (v0.c0) AND (1.73195257E9)) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (((((t0.c50) BETWEEN (t0.c50) AND (t0.c50)))AND(((t0.c50)>=(t0.c50))))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((t0.c50) BETWEEN (t0.c50) AND (t0.c50)))AND(((t0.c50)>=(t0.c50))))))) UNION ALL SELECT * FROM t0 WHERE (((((((t0.c50) BETWEEN (t0.c50) AND (t0.c50)))AND(((t0.c50)>=(t0.c50))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((NOT (v0.c0))) IS TRUE)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((NOT (v0.c0))) IS TRUE)))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((NOT (v0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0, t0.c50 FROM v0 CROSS JOIN t0 ON CAST((v0.c0 IN ()) AS TEXT) GROUP BY v0.c0, t0.c50;
SELECT ALL v0.c0, t0.c50 FROM v0 CROSS JOIN t0 ON CAST((v0.c0 IN ()) AS TEXT) WHERE (DATETIME((- (v0.c0)), CAST(t0.c50 AS INTEGER), LIKE(v0.c0, t0.c50, 'ਖ'), (((t0.c50, t0.c50, v0.c0))<=((t0.c50, t0.c50, t0.c50))), (t0.c50 IN ()), v0.c0, v0.c0 COLLATE RTRIM)) GROUP BY v0.c0, t0.c50 UNION SELECT v0.c0, t0.c50 FROM v0 CROSS JOIN t0 ON CAST((v0.c0 IN ()) AS TEXT) WHERE ((NOT (DATETIME((- (v0.c0)), CAST(t0.c50 AS INTEGER), LIKE(v0.c0, t0.c50, 'ਖ'), (((t0.c50, t0.c50, v0.c0))<=((t0.c50, t0.c50, t0.c50))), (t0.c50 IN ()), v0.c0, v0.c0 COLLATE RTRIM)))) GROUP BY v0.c0, t0.c50 UNION SELECT v0.c0, t0.c50 FROM v0 CROSS JOIN t0 ON CAST((v0.c0 IN ()) AS TEXT) WHERE (((DATETIME((- (v0.c0)), CAST(t0.c50 AS INTEGER), LIKE(v0.c0, t0.c50, 'ਖ'), (((t0.c50, t0.c50, v0.c0))<=((t0.c50, t0.c50, t0.c50))), (t0.c50 IN ()), v0.c0, v0.c0 COLLATE RTRIM)) ISNULL)) GROUP BY v0.c0, t0.c50;
SELECT v0.c0, t0.c50 FROM v0 CROSS JOIN t0 ON CAST((v0.c0 IN ()) AS TEXT) GROUP BY v0.c0, t0.c50;
SELECT ALL v0.c0, t0.c50, rt0.c0, rt0.c2, rt0.c1 FROM t0, v0 INNER JOIN rt0 ON NULL GROUP BY v0.c0, t0.c50, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL v0.c0, t0.c50, rt0.c0, rt0.c2, rt0.c1 FROM t0, v0 INNER JOIN rt0 ON NULL GROUP BY v0.c0, t0.c50, rt0.c0, rt0.c2, rt0.c1 HAVING (((rt0.c0 IN ()))<=(COUNT(*))) UNION ALL SELECT v0.c0, t0.c50, rt0.c0, rt0.c2, rt0.c1 FROM t0, v0 INNER JOIN rt0 ON NULL GROUP BY v0.c0, t0.c50, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((((rt0.c0 IN ()))<=(COUNT(*))))) UNION ALL SELECT v0.c0, t0.c50, rt0.c0, rt0.c2, rt0.c1 FROM t0, v0 INNER JOIN rt0 ON NULL GROUP BY v0.c0, t0.c50, rt0.c0, rt0.c2, rt0.c1 HAVING (((((rt0.c0 IN ()))<=(COUNT(*)))) ISNULL);
SELECT ALL v0.c0, t0.c50, rt0.c0, rt0.c2, rt0.c1 FROM t0, v0 INNER JOIN rt0 ON NULL GROUP BY v0.c0, t0.c50, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL v0.c0, t0.c50, rt0.c0, rt0.c2, rt0.c1 FROM t0, v0 INNER JOIN rt0 ON NULL GROUP BY v0.c0, t0.c50, rt0.c0, rt0.c2, rt0.c1 HAVING (((rt0.c0 IN ()))<=(COUNT(*))) UNION ALL SELECT v0.c0, t0.c50, rt0.c0, rt0.c2, rt0.c1 FROM t0, v0 INNER JOIN rt0 ON NULL GROUP BY v0.c0, t0.c50, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((((rt0.c0 IN ()))<=(COUNT(*))))) UNION ALL SELECT v0.c0, t0.c50, rt0.c0, rt0.c2, rt0.c1 FROM t0, v0 INNER JOIN rt0 ON NULL GROUP BY v0.c0, t0.c50, rt0.c0, rt0.c2, rt0.c1 HAVING (((((rt0.c0 IN ()))<=(COUNT(*)))) ISNULL);
SELECT ALL v0.c0, t0.c50, rt0.c0, rt0.c2, rt0.c1 FROM t0, v0 INNER JOIN rt0 ON NULL GROUP BY v0.c0, t0.c50, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c2, t0.c50, rt0.c0 FROM rt0, v0, t0;
SELECT rt0.c1, rt0.c2, t0.c50, rt0.c0 FROM rt0, v0, t0 WHERE (((t0.c50)AND(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(NULL)))AND(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, t0.c50, rt0.c0 FROM rt0, v0, t0 WHERE ((NOT (((t0.c50)AND(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(NULL)))AND(rt0.c2))))))) UNION ALL SELECT rt0.c1, rt0.c2, t0.c50, rt0.c0 FROM rt0, v0, t0 WHERE (((((t0.c50)AND(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(NULL)))AND(rt0.c2))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, t0.c50, rt0.c0 FROM rt0, v0, t0;
SELECT DISTINCT rt0.c2 FROM v0, rt0, t0;
SELECT DISTINCT rt0.c2 FROM v0, rt0, t0 WHERE (((CASE WHEN v0.c0 THEN t0.c50 ELSE rt0.c0 END)-(v0.c0))) UNION SELECT DISTINCT rt0.c2 FROM v0, rt0, t0 WHERE ((NOT (((CASE WHEN v0.c0 THEN t0.c50 ELSE rt0.c0 END)-(v0.c0))))) UNION SELECT DISTINCT rt0.c2 FROM v0, rt0, t0 WHERE (((((CASE WHEN v0.c0 THEN t0.c50 ELSE rt0.c0 END)-(v0.c0))) ISNULL));
SELECT DISTINCT rt0.c2 FROM v0, rt0, t0;
SELECT ALL t0.c50 FROM v0, t0 GROUP BY t0.c50;
SELECT t0.c50 FROM v0, t0 WHERE ((- (((v0.c0)AND('-1735220163'))))) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM v0, t0 WHERE ((NOT ((- (((v0.c0)AND('-1735220163'))))))) GROUP BY t0.c50 UNION SELECT t0.c50 FROM v0, t0 WHERE ((((- (((v0.c0)AND('-1735220163'))))) ISNULL)) GROUP BY t0.c50;
SELECT ALL t0.c50 FROM v0, t0 GROUP BY t0.c50;
SELECT ALL rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING CASE (('1436893065') BETWEEN (rt0.c0) AND (TOTAL(rt0.c1)))  WHEN ((COUNT(*))*(v0.c0)) THEN TOTAL(rt0.c2) END UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (CASE (('1436893065') BETWEEN (rt0.c0) AND (TOTAL(rt0.c1)))  WHEN ((COUNT(*))*(v0.c0)) THEN TOTAL(rt0.c2) END)) UNION ALL SELECT rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((CASE (('1436893065') BETWEEN (rt0.c0) AND (TOTAL(rt0.c1)))  WHEN ((COUNT(*))*(v0.c0)) THEN TOTAL(rt0.c2) END) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING CASE (('1436893065') BETWEEN (rt0.c0) AND (TOTAL(rt0.c1)))  WHEN ((COUNT(*))*(v0.c0)) THEN TOTAL(rt0.c2) END UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (CASE (('1436893065') BETWEEN (rt0.c0) AND (TOTAL(rt0.c1)))  WHEN ((COUNT(*))*(v0.c0)) THEN TOTAL(rt0.c2) END)) UNION ALL SELECT rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((CASE (('1436893065') BETWEEN (rt0.c0) AND (TOTAL(rt0.c1)))  WHEN ((COUNT(*))*(v0.c0)) THEN TOTAL(rt0.c2) END) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (rt0.c2) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((rt0.c2) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT v0.c0 FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0, rt0 WHERE (MAX((rt0.c1 IN ()), v0.c0)) UNION SELECT DISTINCT v0.c0 FROM v0, rt0 WHERE ((NOT (MAX((rt0.c1 IN ()), v0.c0)))) UNION SELECT DISTINCT v0.c0 FROM v0, rt0 WHERE (((MAX((rt0.c1 IN ()), v0.c0)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, rt0;
SELECT t0.c50, rt0.c2, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c2)) BETWEEN ((((t0.c50) IS FALSE))) AND ((CAST(rt0.c2 AS TEXT)))) INNER JOIN t0 ON CAST((((((((('-625554830')OR(rt0.c0)))OR(t0.c50)))AND(v0.c0)))OR(t0.c50)) AS TEXT) GROUP BY t0.c50, rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1, v0.c0, t0.c50 FROM t0, rt0, v0 GROUP BY rt0.c2, rt0.c1, v0.c0, t0.c50;
SELECT ALL rt0.c2, rt0.c1, v0.c0, t0.c50 FROM t0, rt0, v0 GROUP BY rt0.c2, rt0.c1, v0.c0, t0.c50 HAVING GROUP_CONCAT((NOT (GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c1, v0.c0, t0.c50 FROM t0, rt0, v0 GROUP BY rt0.c2, rt0.c1, v0.c0, t0.c50 HAVING (NOT (GROUP_CONCAT((NOT (GROUP_CONCAT(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c0, t0.c50 FROM t0, rt0, v0 GROUP BY rt0.c2, rt0.c1, v0.c0, t0.c50 HAVING ((GROUP_CONCAT((NOT (GROUP_CONCAT(rt0.c0))))) ISNULL);
SELECT v0.c0, rt0.c1 FROM rt0, v0, t0;
SELECT v0.c0, rt0.c1 FROM rt0, v0, t0 WHERE (((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0)))OR(((((rt0.c0)AND(t0.c50)))OR(t0.c50))))) UNION ALL SELECT v0.c0, rt0.c1 FROM rt0, v0, t0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0)))OR(((((rt0.c0)AND(t0.c50)))OR(t0.c50))))))) UNION ALL SELECT v0.c0, rt0.c1 FROM rt0, v0, t0 WHERE (((((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0)))OR(((((rt0.c0)AND(t0.c50)))OR(t0.c50))))) ISNULL));
SELECT v0.c0, rt0.c1 FROM rt0, v0, t0;
SELECT DISTINCT v0.c0 FROM t0, v0;
SELECT DISTINCT v0.c0 FROM t0, v0 NOT INDEXED WHERE (((((0.6546324906464419)OR(HEX(DISTINCT v0.c0))))OR(((((x'')AND('458566817')))AND(t0.c50))))) UNION SELECT DISTINCT v0.c0 FROM t0, v0 WHERE ((NOT (((((0.6546324906464419)OR(HEX(DISTINCT v0.c0))))OR(((((x'')AND('458566817')))AND(t0.c50))))))) UNION SELECT DISTINCT v0.c0 FROM t0, v0 WHERE (((((((0.6546324906464419)OR(HEX(DISTINCT v0.c0))))OR(((((x'')AND('458566817')))AND(t0.c50))))) ISNULL));
SELECT DISTINCT v0.c0 FROM t0, v0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50 HAVING SUM(MIN(COUNT(*))) UNION ALL SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING (NOT (SUM(MIN(COUNT(*))))) UNION ALL SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING ((SUM(MIN(COUNT(*)))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((+ ((+ (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((+ ((+ (v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((+ ((+ (v0.c0))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON (((2035519292))<((CAST(rt0.c2 AS INTEGER)))) FULL OUTER JOIN t0 ON (- (((rt0.c0) NOT BETWEEN (t0.c50) AND (t0.c50))));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON (((2035519292))<((CAST(rt0.c2 AS INTEGER)))) FULL OUTER JOIN t0 ON (- (((rt0.c0) NOT BETWEEN (t0.c50) AND (t0.c50)))) WHERE (((((((v0.c0)AND(rt0.c1)))OR(rt0.c0)))==(t0.c50 COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON (((2035519292))<((CAST(rt0.c2 AS INTEGER)))) FULL OUTER JOIN t0 ON (- (((rt0.c0) NOT BETWEEN (t0.c50) AND (t0.c50)))) WHERE ((NOT (((((((v0.c0)AND(rt0.c1)))OR(rt0.c0)))==(t0.c50 COLLATE RTRIM))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON (((2035519292))<((CAST(rt0.c2 AS INTEGER)))) FULL OUTER JOIN t0 ON (- (((rt0.c0) NOT BETWEEN (t0.c50) AND (t0.c50)))) WHERE (((((((((v0.c0)AND(rt0.c1)))OR(rt0.c0)))==(t0.c50 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON (((2035519292))<((CAST(rt0.c2 AS INTEGER)))) FULL OUTER JOIN t0 ON (- (((rt0.c0) NOT BETWEEN (t0.c50) AND (t0.c50))));
SELECT rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((+ ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((0.8098506100296076)))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((NOT ((+ ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((0.8098506100296076)))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((((+ ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((0.8098506100296076)))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c0, rt0.c1, t0.c50, rt0.c2 FROM v0, rt0, t0 GROUP BY rt0.c0, rt0.c1, t0.c50, rt0.c2;
SELECT rt0.c0, rt0.c1, t0.c50, rt0.c2 FROM v0, rt0, t0 GROUP BY rt0.c0, rt0.c1, t0.c50, rt0.c2 HAVING COUNT(AVG(rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c1, t0.c50, rt0.c2 FROM v0, rt0, t0 GROUP BY rt0.c0, rt0.c1, t0.c50, rt0.c2 HAVING (NOT (COUNT(AVG(rt0.c1)))) UNION ALL SELECT rt0.c0, rt0.c1, t0.c50, rt0.c2 FROM v0, rt0, t0 GROUP BY rt0.c0, rt0.c1, t0.c50, rt0.c2 HAVING ((COUNT(AVG(rt0.c1))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(rt0.c0 AS BLOB)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS BLOB)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((x'')OR(TIME(t0.c50, t0.c50, t0.c50))))OR(CASE t0.c50  WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((x'')OR(TIME(t0.c50, t0.c50, t0.c50))))OR(CASE t0.c50  WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((x'')OR(TIME(t0.c50, t0.c50, t0.c50))))OR(CASE t0.c50  WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c1, t0.c50, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, t0.c50, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, t0.c50, rt0.c2, rt0.c0 FROM t0, rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c1) AND (t0.c50)))AND(rt0.c0)))OR(((t0.c50) BETWEEN (t0.c50) AND (rt0.c1))))) GROUP BY rt0.c1, t0.c50, rt0.c2, rt0.c0 UNION SELECT rt0.c1, t0.c50, rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((NOT (((((((rt0.c0) BETWEEN (rt0.c1) AND (t0.c50)))AND(rt0.c0)))OR(((t0.c50) BETWEEN (t0.c50) AND (rt0.c1))))))) GROUP BY rt0.c1, t0.c50, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, t0.c50, rt0.c2, rt0.c0 FROM t0, rt0 WHERE (((((((((rt0.c0) BETWEEN (rt0.c1) AND (t0.c50)))AND(rt0.c0)))OR(((t0.c50) BETWEEN (t0.c50) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c1, t0.c50, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, t0.c50, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, t0.c50, rt0.c2, rt0.c0;
SELECT rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING GROUP_CONCAT(((((((((((((MIN(GROUP_CONCAT(v0.c0)))AND(rt0.c0)))AND(v0.c0)))OR(MIN(0xffffffffec7a176d))))OR(v0.c0)))OR(COUNT(MIN(SUM(COUNT(COUNT(*))))))))AND(rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(((((((((((((MIN(GROUP_CONCAT(v0.c0)))AND(rt0.c0)))AND(v0.c0)))OR(MIN(0xffffffffec7a176d))))OR(v0.c0)))OR(COUNT(MIN(SUM(COUNT(COUNT(*))))))))AND(rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(((((((((((((MIN(GROUP_CONCAT(v0.c0)))AND(rt0.c0)))AND(v0.c0)))OR(MIN(0Xffffffffec7a176d))))OR(v0.c0)))OR(COUNT(MIN(SUM(COUNT(COUNT(*))))))))AND(rt0.c1)))) ISNULL);
SELECT t0.c50 FROM t0;
SELECT ALL t0.c50 FROM t0 WHERE (t0.c50) UNION ALL SELECT ALL t0.c50 FROM t0 WHERE ((NOT (t0.c50))) UNION ALL SELECT t0.c50 FROM t0 WHERE (((t0.c50) ISNULL));
SELECT t0.c50 FROM t0;
SELECT DISTINCT v0.c0, rt0.c0, rt0.c2, t0.c50, rt0.c1 FROM v0 INNER JOIN rt0 ON ((((((((((((((t0.c50)OR(v0.c0)))AND('1839097821')))AND(v0.c0)))OR(0X4e2945b1)))OR(t0.c50)))AND(v0.c0))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) AND (((t0.c50) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) LEFT OUTER JOIN t0 ON x'6a6e';
SELECT DISTINCT v0.c0, rt0.c0, rt0.c2, t0.c50, rt0.c1 FROM v0 INNER JOIN rt0 ON ((((((((((((((t0.c50)OR(v0.c0)))AND('1839097821')))AND(v0.c0)))OR(0x4e2945b1)))OR(t0.c50)))AND(v0.c0))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) AND (((t0.c50) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) LEFT OUTER JOIN t0 ON x'6a6e' WHERE ((((((rt0.c2))>((rt0.c1))))OR(((v0.c0)AND(rt0.c1))))) UNION SELECT DISTINCT v0.c0, rt0.c0, rt0.c2, t0.c50, rt0.c1 FROM v0 INNER JOIN rt0 ON ((((((((((((((t0.c50)OR(v0.c0)))AND('1839097821')))AND(v0.c0)))OR(0X4e2945b1)))OR(t0.c50)))AND(v0.c0))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) AND (((t0.c50) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) LEFT OUTER JOIN t0 ON x'6a6e' WHERE ((NOT ((((((rt0.c2))>((rt0.c1))))OR(((v0.c0)AND(rt0.c1))))))) UNION SELECT DISTINCT v0.c0, rt0.c0, rt0.c2, t0.c50, rt0.c1 FROM v0 INNER JOIN rt0 ON ((((((((((((((t0.c50)OR(v0.c0)))AND('1839097821')))AND(v0.c0)))OR(0X4e2945b1)))OR(t0.c50)))AND(v0.c0))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) AND (((t0.c50) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) LEFT OUTER JOIN t0 ON x'6a6e' WHERE ((((((((rt0.c2))>((rt0.c1))))OR(((v0.c0)AND(rt0.c1))))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c0, rt0.c2, t0.c50, rt0.c1 FROM v0 INNER JOIN rt0 ON ((((((((((((((t0.c50)OR(v0.c0)))AND('1839097821')))AND(v0.c0)))OR(0X4e2945b1)))OR(t0.c50)))AND(v0.c0))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) AND (((t0.c50) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) LEFT OUTER JOIN t0 ON x'6a6e';
SELECT ALL v0.c0, rt0.c0 FROM t0, rt0, v0 GROUP BY v0.c0, rt0.c0;
SELECT v0.c0, rt0.c0 FROM t0, rt0, v0 WHERE (0.9471327721733585) GROUP BY v0.c0, rt0.c0 UNION SELECT ALL v0.c0, rt0.c0 FROM t0, rt0, v0 WHERE ((NOT (0.9471327721733585))) GROUP BY v0.c0, rt0.c0 UNION SELECT ALL v0.c0, rt0.c0 FROM t0, rt0, v0 WHERE (((0.9471327721733585) ISNULL)) GROUP BY v0.c0, rt0.c0;
SELECT ALL v0.c0, rt0.c0 FROM t0, rt0, v0 GROUP BY v0.c0, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((((((MIN(SUM(rt0.c2)))AND(COUNT(*))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(COUNT(rt0.c0))))AND(((COUNT(*)) BETWEEN (rt0.c2) AND (COUNT(*))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((((((((MIN(SUM(rt0.c2)))AND(COUNT(*))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(COUNT(rt0.c0))))AND(((COUNT(*)) BETWEEN (rt0.c2) AND (COUNT(*))))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((((((((MIN(SUM(rt0.c2)))AND(COUNT(*))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(COUNT(rt0.c0))))AND(((COUNT(*)) BETWEEN (rt0.c2) AND (COUNT(*)))))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((((((t0.c50))<((t0.c50)))) NOT BETWEEN (((((t0.c50)AND(t0.c50)))AND(0X8557938))) AND (((t0.c50) NOTNULL)))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((((t0.c50))<((t0.c50)))) NOT BETWEEN (((((t0.c50)AND(t0.c50)))AND(0x8557938))) AND (((t0.c50) NOTNULL)))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((((t0.c50))<((t0.c50)))) NOT BETWEEN (((((t0.c50)AND(t0.c50)))AND(0x8557938))) AND (((t0.c50) NOTNULL)))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c50 FROM t0;
SELECT DISTINCT t0.c50 FROM t0 WHERE ((((t0.c50 IN ()))LIKE((+ (t0.c50))))) UNION SELECT DISTINCT t0.c50 FROM t0 WHERE ((NOT ((((t0.c50 IN ()))LIKE((+ (t0.c50))))))) UNION SELECT DISTINCT t0.c50 FROM t0 WHERE ((((((t0.c50 IN ()))LIKE((+ (t0.c50))))) ISNULL));
SELECT DISTINCT t0.c50 FROM t0;
SELECT ALL t0.c50 FROM t0, rt0, v0 GROUP BY t0.c50;
SELECT t0.c50 FROM t0, rt0, v0 WHERE ((((((((((((t0.c50, t0.c50, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((v0.c0, t0.c50, rt0.c2))))OR(v0.c0)))AND(((t0.c50)<=(rt0.c0)))))AND((NOT (rt0.c0)))))AND(((t0.c50) NOT NULL)))) GROUP BY t0.c50 UNION SELECT t0.c50 FROM t0, rt0, v0 WHERE ((NOT ((((((((((((t0.c50, t0.c50, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((v0.c0, t0.c50, rt0.c2))))OR(v0.c0)))AND(((t0.c50)<=(rt0.c0)))))AND((NOT (rt0.c0)))))AND(((t0.c50) NOT NULL)))))) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM t0, rt0, v0 WHERE ((((((((((((((t0.c50, t0.c50, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((v0.c0, t0.c50, rt0.c2))))OR(v0.c0)))AND(((t0.c50)<=(rt0.c0)))))AND((NOT (rt0.c0)))))AND(((t0.c50) NOT NULL)))) ISNULL)) GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0, rt0, v0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50;
SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING t0.c50 UNION ALL SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50 HAVING (NOT (t0.c50)) UNION ALL SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50 HAVING ((t0.c50) ISNULL);
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50;
SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING t0.c50 UNION ALL SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50 HAVING (NOT (t0.c50)) UNION ALL SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50 HAVING ((t0.c50) ISNULL);
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0;
SELECT ALL t0.c50 FROM t0 WHERE (CAST(CASE WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c50 END AS INTEGER)) UNION ALL SELECT t0.c50 FROM t0 WHERE ((NOT (CAST(CASE WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c50 END AS INTEGER)))) UNION ALL SELECT t0.c50 FROM t0 WHERE (((CAST(CASE WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c50 END AS INTEGER)) ISNULL));
SELECT ALL t0.c50 FROM t0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0 NOT INDEXED, v0 WHERE ((((t0.c50)/(t0.c50)) IN ())) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT ((((t0.c50)/(t0.c50)) IN ())))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((((((t0.c50)/(t0.c50)) IN ())) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0, rt0 WHERE (TYPEOF(((((t0.c50)AND(rt0.c2)))OR(t0.c50)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM t0, rt0 WHERE ((NOT (TYPEOF(((((t0.c50)AND(rt0.c2)))OR(t0.c50)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM t0, rt0 WHERE (((TYPEOF(((((t0.c50)AND(rt0.c2)))OR(t0.c50)))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT v0.c0, t0.c50 FROM v0 RIGHT OUTER JOIN t0 ON v0.c0 GROUP BY v0.c0, t0.c50;
SELECT ALL v0.c0, t0.c50 FROM v0 RIGHT OUTER JOIN t0 ON v0.c0 GROUP BY v0.c0, t0.c50 HAVING (NOT (x'')) UNION ALL SELECT v0.c0, t0.c50 FROM v0 RIGHT OUTER JOIN t0 ON v0.c0 GROUP BY v0.c0, t0.c50 HAVING (NOT ((NOT (x'')))) UNION ALL SELECT v0.c0, t0.c50 FROM v0 RIGHT OUTER JOIN t0 ON v0.c0 GROUP BY v0.c0, t0.c50 HAVING (((NOT (x''))) ISNULL);
SELECT v0.c0, t0.c50 FROM v0 RIGHT OUTER JOIN t0 ON v0.c0 GROUP BY v0.c0, t0.c50;
SELECT ALL v0.c0, t0.c50 FROM v0 RIGHT OUTER JOIN t0 ON v0.c0 GROUP BY v0.c0, t0.c50 HAVING (NOT (x'')) UNION ALL SELECT v0.c0, t0.c50 FROM v0 RIGHT OUTER JOIN t0 ON v0.c0 GROUP BY v0.c0, t0.c50 HAVING (NOT ((NOT (x'')))) UNION ALL SELECT v0.c0, t0.c50 FROM v0 RIGHT OUTER JOIN t0 ON v0.c0 GROUP BY v0.c0, t0.c50 HAVING (((NOT (x''))) ISNULL);
SELECT v0.c0, t0.c50 FROM v0 RIGHT OUTER JOIN t0 ON v0.c0 GROUP BY v0.c0, t0.c50;
SELECT ALL v0.c0 FROM t0, v0, rt0;
SELECT v0.c0 FROM t0, v0, rt0 WHERE (rt0.c1) UNION ALL SELECT ALL v0.c0 FROM t0, v0, rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL v0.c0 FROM t0, v0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL v0.c0 FROM t0, v0, rt0;
SELECT DISTINCT * FROM t0, v0, rt0;
SELECT DISTINCT * FROM t0, v0, rt0 WHERE (1.98548816E9) UNION SELECT DISTINCT * FROM t0, v0, rt0 WHERE ((NOT (1.98548816E9))) UNION SELECT DISTINCT * FROM t0, v0, rt0 WHERE (((1.98548816E9) ISNULL));
SELECT DISTINCT * FROM t0, v0, rt0;
SELECT ALL t0.c50 FROM t0 NOT INDEXED GROUP BY t0.c50;
SELECT t0.c50 FROM t0 WHERE ((((CASE WHEN '695829747' THEN t0.c50 WHEN t0.c50 THEN '' WHEN t0.c50 THEN t0.c50 ELSE 0.6747651390289421 END))<(((~ (t0.c50)))))) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM t0 WHERE ((NOT ((((CASE WHEN '695829747' THEN t0.c50 WHEN t0.c50 THEN '' WHEN t0.c50 THEN t0.c50 ELSE 0.6747651390289421 END))<(((~ (t0.c50)))))))) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM t0 WHERE ((((((CASE WHEN '695829747' THEN t0.c50 WHEN t0.c50 THEN '' WHEN t0.c50 THEN t0.c50 ELSE 0.6747651390289421 END))<(((~ (t0.c50)))))) ISNULL)) GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 NOT INDEXED GROUP BY t0.c50;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((NULL)<(v0.c0))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((NULL)<(v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((NULL)<(v0.c0))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c0, t0.c50, rt0.c2, rt0.c1 FROM v0, t0, rt0;
SELECT DISTINCT rt0.c0, t0.c50, rt0.c2, rt0.c1 FROM v0, t0, rt0 WHERE (x'') UNION SELECT DISTINCT rt0.c0, t0.c50, rt0.c2, rt0.c1 FROM v0, t0, rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c0, t0.c50, rt0.c2, rt0.c1 FROM v0, t0, rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c0, t0.c50, rt0.c2, rt0.c1 FROM v0, t0, rt0;
SELECT ALL t0.c50, rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY t0.c50, rt0.c0, rt0.c1, rt0.c2;
SELECT t0.c50, rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0 WHERE ((((('FmpH!]') IS TRUE))<>((rt0.c0 IN ())))) GROUP BY t0.c50, rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL t0.c50, rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0 WHERE ((NOT ((((('FmpH!]') IS TRUE))!=((rt0.c0 IN ())))))) GROUP BY t0.c50, rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL t0.c50, rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0 WHERE ((((((('FmpH!]') IS TRUE))!=((rt0.c0 IN ())))) ISNULL)) GROUP BY t0.c50, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL t0.c50, rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY t0.c50, rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2, t0.c50, v0.c0 FROM t0, rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c50, v0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, t0.c50, v0.c0 FROM t0, rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c50, v0.c0 HAVING QUOTE(MAX(rt0.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c50, v0.c0 FROM t0, rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c50, v0.c0 HAVING (NOT (QUOTE(MAX(rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, t0.c50, v0.c0 FROM t0, rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c50, v0.c0 HAVING ((QUOTE(MAX(rt0.c0))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2, t0.c50, v0.c0 FROM t0, rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c50, v0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, t0.c50, v0.c0 FROM t0, rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c50, v0.c0 HAVING QUOTE(MAX(rt0.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c50, v0.c0 FROM t0, rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c50, v0.c0 HAVING (NOT (QUOTE(MAX(rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, t0.c50, v0.c0 FROM t0, rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c50, v0.c0 HAVING ((QUOTE(MAX(rt0.c0))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2, t0.c50, v0.c0 FROM t0, rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c50, v0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (v0.c0) UNION ALL SELECT * FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT t0.c50 FROM t0, v0, rt0;
SELECT DISTINCT t0.c50 FROM t0 NOT INDEXED, v0, rt0 WHERE (((((((((v0.c0 COLLATE BINARY)AND(((v0.c0) BETWEEN (t0.c50) AND (NULL)))))OR(((((t0.c50)AND(rt0.c0)))OR(v0.c0)))))AND(CAST(rt0.c2 AS NUMERIC))))AND(((rt0.c1) ISNULL)))) UNION SELECT DISTINCT t0.c50 FROM t0, v0, rt0 WHERE ((NOT (((((((((v0.c0 COLLATE BINARY)AND(((v0.c0) BETWEEN (t0.c50) AND (NULL)))))OR(((((t0.c50)AND(rt0.c0)))OR(v0.c0)))))AND(CAST(rt0.c2 AS NUMERIC))))AND(((rt0.c1) ISNULL)))))) UNION SELECT DISTINCT t0.c50 FROM t0, v0, rt0 WHERE (((((((((((v0.c0 COLLATE BINARY)AND(((v0.c0) BETWEEN (t0.c50) AND (NULL)))))OR(((((t0.c50)AND(rt0.c0)))OR(v0.c0)))))AND(CAST(rt0.c2 AS NUMERIC))))AND(((rt0.c1) ISNULL)))) ISNULL));
SELECT DISTINCT t0.c50 FROM t0, v0, rt0;
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c2 FROM t0 FULL OUTER JOIN v0 ON ((t0.c50) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY INNER JOIN rt0 ON (NOT (json(t0.c50))) GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2, v0.c0 FROM rt0, t0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0;
SELECT ALL rt0.c1, rt0.c2, v0.c0 FROM rt0, t0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0 HAVING MIN(CASE rt0.c1  WHEN COUNT(v0.c0) THEN v0.c0 WHEN COUNT(SUM(TOTAL(COUNT(rt0.c1)))) THEN t0.c50 WHEN rt0.c0 THEN GROUP_CONCAT(MAX(MAX(rt0.c1))) END) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0 FROM rt0, t0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0 HAVING (NOT (MIN(CASE rt0.c1  WHEN COUNT(v0.c0) THEN v0.c0 WHEN COUNT(SUM(TOTAL(COUNT(rt0.c1)))) THEN t0.c50 WHEN rt0.c0 THEN GROUP_CONCAT(MAX(MAX(rt0.c1))) END))) UNION ALL SELECT rt0.c1, rt0.c2, v0.c0 FROM rt0, t0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0 HAVING ((MIN(CASE rt0.c1  WHEN COUNT(v0.c0) THEN v0.c0 WHEN COUNT(SUM(TOTAL(COUNT(rt0.c1)))) THEN t0.c50 WHEN rt0.c0 THEN GROUP_CONCAT(MAX(MAX(rt0.c1))) END)) ISNULL);
SELECT ALL t0.c50, rt0.c2, rt0.c0, rt0.c1 FROM rt0, t0;
SELECT ALL t0.c50, rt0.c2, rt0.c0, rt0.c1 FROM rt0, t0 WHERE ((+ (((rt0.c0)IS(rt0.c2))))) UNION ALL SELECT ALL t0.c50, rt0.c2, rt0.c0, rt0.c1 FROM rt0, t0 WHERE ((NOT ((+ (((rt0.c0)IS(rt0.c2))))))) UNION ALL SELECT t0.c50, rt0.c2, rt0.c0, rt0.c1 FROM rt0, t0 WHERE ((((+ (((rt0.c0)IS(rt0.c2))))) ISNULL));
SELECT ALL t0.c50, rt0.c2, rt0.c0, rt0.c1 FROM rt0, t0;
SELECT DISTINCT t0.c50 FROM t0;
SELECT DISTINCT t0.c50 FROM t0 WHERE (((t0.c50 IN (t0.c50)) IN (((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50))))) UNION SELECT DISTINCT t0.c50 FROM t0 WHERE ((NOT (((t0.c50 IN (t0.c50)) IN (((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50))))))) UNION SELECT DISTINCT t0.c50 FROM t0 WHERE (((((t0.c50 IN (t0.c50)) IN (((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50))))) ISNULL));
SELECT DISTINCT t0.c50 FROM t0;
SELECT ALL t0.c50 FROM t0, v0 GROUP BY t0.c50;
SELECT t0.c50 FROM t0, v0 WHERE (CASE WHEN json_array_length(t0.c50) THEN ((v0.c0)>(t0.c50)) ELSE t0.c50 COLLATE NOCASE END) GROUP BY t0.c50 UNION SELECT t0.c50 FROM t0, v0 WHERE ((NOT (CASE WHEN json_array_length(t0.c50) THEN ((v0.c0)>(t0.c50)) ELSE t0.c50 COLLATE NOCASE END))) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM t0, v0 WHERE (((CASE WHEN json_array_length(t0.c50) THEN ((v0.c0)>(t0.c50)) ELSE t0.c50 COLLATE NOCASE END) ISNULL)) GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0, v0 GROUP BY t0.c50;
SELECT ALL rt0.c0, v0.c0, rt0.c2, t0.c50, rt0.c1 FROM v0 FULL OUTER JOIN t0 ON (((((t0.c50)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) IS FALSE) RIGHT OUTER JOIN rt0 ON ((load_extension(v0.c0)) NOTNULL) GROUP BY rt0.c0, v0.c0, rt0.c2, t0.c50, rt0.c1;
SELECT * FROM rt0, t0, v0;
SELECT ALL * FROM rt0, t0, v0 WHERE ((((rt0.c2)) BETWEEN ((t0.c50)) AND ((rt0.c1))) COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt0, t0, v0 WHERE ((NOT ((((rt0.c2)) BETWEEN ((t0.c50)) AND ((rt0.c1))) COLLATE RTRIM))) UNION ALL SELECT * FROM rt0, t0, v0 WHERE ((((((rt0.c2)) BETWEEN ((t0.c50)) AND ((rt0.c1))) COLLATE RTRIM) ISNULL));
SELECT * FROM rt0, t0, v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (SQLITE_COMPILEOPTION_GET(((x'')>>(t0.c50)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(((x'')>>(t0.c50)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((SQLITE_COMPILEOPTION_GET(((x'')>>(t0.c50)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0;
SELECT ALL rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 WHERE (v0.c0) GROUP BY rt0.c1, rt0.c2, v0.c0 UNION SELECT rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 WHERE ((NOT (v0.c0))) GROUP BY rt0.c1, rt0.c2, v0.c0 UNION SELECT ALL rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 WHERE (((v0.c0) ISNULL)) GROUP BY rt0.c1, rt0.c2, v0.c0;
SELECT rt0.c1, rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0;
SELECT ALL v0.c0, rt0.c1 FROM t0, rt0 RIGHT OUTER JOIN v0 ON ((((x'c038873b')>>(rt0.c1))) NOTNULL) GROUP BY v0.c0, rt0.c1;
SELECT v0.c0, rt0.c1 FROM t0, rt0 RIGHT OUTER JOIN v0 ON ((((x'c038873b')>>(rt0.c1))) NOTNULL) GROUP BY v0.c0, rt0.c1 HAVING COUNT(SUM(rt0.c1)) UNION ALL SELECT v0.c0, rt0.c1 FROM t0, rt0 RIGHT OUTER JOIN v0 ON ((((x'c038873b')>>(rt0.c1))) NOTNULL) GROUP BY v0.c0, rt0.c1 HAVING (NOT (COUNT(SUM(rt0.c1)))) UNION ALL SELECT v0.c0, rt0.c1 FROM t0, rt0 RIGHT OUTER JOIN v0 ON ((((x'c038873b')>>(rt0.c1))) NOTNULL) GROUP BY v0.c0, rt0.c1 HAVING ((COUNT(SUM(rt0.c1))) ISNULL);
SELECT rt0.c0, t0.c50 FROM rt0 CROSS JOIN t0 ON ((t0.c50)*(rt0.c1)) COLLATE RTRIM;
SELECT ALL rt0.c0, t0.c50 FROM rt0 CROSS JOIN t0 ON ((t0.c50)*(rt0.c1)) COLLATE RTRIM WHERE ((((rt0.c0 COLLATE BINARY, (((t0.c50, rt0.c0, rt0.c2))>=((rt0.c1, rt0.c2, rt0.c1))), (rt0.c2 IN ())))>=((CAST(t0.c50 AS NUMERIC), CAST(t0.c50 AS REAL), ((rt0.c0)|(rt0.c0)))))) UNION ALL SELECT ALL rt0.c0, t0.c50 FROM rt0 CROSS JOIN t0 ON ((t0.c50)*(rt0.c1)) COLLATE RTRIM WHERE ((NOT ((((rt0.c0 COLLATE BINARY, (((t0.c50, rt0.c0, rt0.c2))>=((rt0.c1, rt0.c2, rt0.c1))), (rt0.c2 IN ())))>=((CAST(t0.c50 AS NUMERIC), CAST(t0.c50 AS REAL), ((rt0.c0)|(rt0.c0)))))))) UNION ALL SELECT rt0.c0, t0.c50 FROM rt0 CROSS JOIN t0 ON ((t0.c50)*(rt0.c1)) COLLATE RTRIM WHERE ((((((rt0.c0 COLLATE BINARY, (((t0.c50, rt0.c0, rt0.c2))>=((rt0.c1, rt0.c2, rt0.c1))), (rt0.c2 IN ())))>=((CAST(t0.c50 AS NUMERIC), CAST(t0.c50 AS REAL), ((rt0.c0)|(rt0.c0)))))) ISNULL));
SELECT rt0.c0, t0.c50 FROM rt0 CROSS JOIN t0 ON ((t0.c50)*(rt0.c1)) COLLATE RTRIM;
SELECT DISTINCT t0.c50, v0.c0 FROM v0 INNER JOIN t0 ON UNICODE(135672527);
SELECT DISTINCT t0.c50, v0.c0 FROM v0 INNER JOIN t0 ON UNICODE(135672527) WHERE ((CASE WHEN v0.c0 THEN '1735112637' WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN v0.c0 ELSE t0.c50 END IN ())) UNION SELECT DISTINCT t0.c50, v0.c0 FROM v0 INNER JOIN t0 ON UNICODE(135672527) WHERE ((NOT ((CASE WHEN v0.c0 THEN '1735112637' WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN v0.c0 ELSE t0.c50 END IN ())))) UNION SELECT DISTINCT t0.c50, v0.c0 FROM v0 INNER JOIN t0 ON UNICODE(135672527) WHERE ((((CASE WHEN v0.c0 THEN '1735112637' WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN v0.c0 ELSE t0.c50 END IN ())) ISNULL));
SELECT DISTINCT t0.c50, v0.c0 FROM v0 INNER JOIN t0 ON UNICODE(135672527);
SELECT ALL v0.c0, t0.c50 FROM t0, v0 GROUP BY v0.c0, t0.c50;
SELECT ALL v0.c0, t0.c50 FROM t0, v0 WHERE ((CAST(v0.c0 AS INTEGER) IN ())) GROUP BY v0.c0, t0.c50 UNION SELECT ALL v0.c0, t0.c50 FROM t0, v0 WHERE ((NOT ((CAST(v0.c0 AS INTEGER) IN ())))) GROUP BY v0.c0, t0.c50 UNION SELECT ALL v0.c0, t0.c50 FROM t0, v0 WHERE ((((CAST(v0.c0 AS INTEGER) IN ())) ISNULL)) GROUP BY v0.c0, t0.c50;
SELECT ALL v0.c0, t0.c50 FROM t0, v0 GROUP BY v0.c0, t0.c50;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING json_array_length(rt0.c0, GROUP_CONCAT(GROUP_CONCAT(MAX(GROUP_CONCAT(rt0.c2))))) COLLATE BINARY UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (json_array_length(rt0.c0, GROUP_CONCAT(GROUP_CONCAT(MAX(GROUP_CONCAT(rt0.c2))))) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((json_array_length(rt0.c0, GROUP_CONCAT(GROUP_CONCAT(MAX(GROUP_CONCAT(rt0.c2))))) COLLATE BINARY) ISNULL);
SELECT * FROM v0, t0, rt0;
SELECT * FROM v0, t0, rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((rt0.c0)))) UNION ALL SELECT ALL * FROM v0, t0, rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((rt0.c0)))))) UNION ALL SELECT ALL * FROM v0, t0, rt0 WHERE ((((((rt0.c1)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((rt0.c0)))) ISNULL));
SELECT * FROM v0, t0, rt0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (((((t0.c50) IS FALSE))<=(((0.9150368306157544)*(t0.c50))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (((((t0.c50) IS FALSE))<=(((0.9150368306157544)*(t0.c50))))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((((((t0.c50) IS FALSE))<=(((0.9150368306157544)*(t0.c50))))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0 WHERE ((rt0.c2 IN ())) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0 WHERE ((NOT ((rt0.c2 IN ())))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0 WHERE ((((rt0.c2 IN ())) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING MIN((((rt0.c0))<=(('{a')))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (MIN((((rt0.c0))<=(('{a')))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((MIN((((rt0.c0))<=(('{a'))))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING MIN((((rt0.c0))<=(('{a')))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (MIN((((rt0.c0))<=(('{a')))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((MIN((((rt0.c0))<=(('{a'))))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1 FROM v0, rt0;
SELECT rt0.c1 FROM v0, rt0 WHERE (CAST((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))) AS INTEGER)) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 WHERE ((NOT (CAST((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))) AS INTEGER)))) UNION ALL SELECT rt0.c1 FROM v0, rt0 WHERE (((CAST((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))) AS INTEGER)) ISNULL));
SELECT rt0.c1 FROM v0, rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(CAST(t0.c50 AS REAL) AS NUMERIC)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(CAST(t0.c50 AS REAL) AS NUMERIC)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(CAST(t0.c50 AS REAL) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 WHERE ((((((t0.c50 IN ()))OR((((t0.c50))<>((t0.c50))))))AND(((((((((t0.c50)OR(t0.c50)))OR(t0.c50)))OR(t0.c50)))AND(t0.c50))))) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM t0 WHERE ((NOT ((((((t0.c50 IN ()))OR((((t0.c50))<>((t0.c50))))))AND(((((((((t0.c50)OR(t0.c50)))OR(t0.c50)))OR(t0.c50)))AND(t0.c50))))))) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM t0 WHERE ((((((((t0.c50 IN ()))OR((((t0.c50))<>((t0.c50))))))AND(((((((((t0.c50)OR(t0.c50)))OR(t0.c50)))OR(t0.c50)))AND(t0.c50))))) ISNULL)) GROUP BY t0.c50;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT t0.c50 FROM t0, rt0, v0 GROUP BY t0.c50;
SELECT t0.c50 FROM t0, rt0, v0 GROUP BY t0.c50 HAVING MAX(GROUP_CONCAT(v0.c0)) UNION ALL SELECT ALL t0.c50 FROM t0, rt0, v0 GROUP BY t0.c50 HAVING (NOT (MAX(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT ALL t0.c50 FROM t0, rt0, v0 GROUP BY t0.c50 HAVING ((MAX(GROUP_CONCAT(v0.c0))) ISNULL);
SELECT MIN(1.35672527E8) FROM t0, rt0, v0 ORDER BY (((rt0.c0 IN (v0.c0))) NOT BETWEEN (CASE WHEN rt0.c2 THEN v0.c0 END) AND (t0.c50))  NULLS FIRST;
SELECT ALL * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE ((((rt0.c1)<(t0.c50)) IN ((('%W') ISNULL)))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT ((((rt0.c1)<(t0.c50)) IN ((('%W') ISNULL)))))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((((((rt0.c1)<(t0.c50)) IN ((('%W') ISNULL)))) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((('	l')>((rt0.c1 IN ())))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((('	l')>((rt0.c1 IN ())))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((('	l')>((rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c1 FROM rt0 CROSS JOIN t0 ON (NOT (((v0.c0) NOT NULL))) FULL OUTER JOIN v0 ON (+ ((v0.c0 IN ()))) GROUP BY rt0.c1;
SELECT ALL v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING COUNT(CASE WHEN TOTAL(MIN(rt0.c1)) THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN AVG(COUNT(*)) THEN v0.c0 END) UNION ALL SELECT v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (COUNT(CASE WHEN TOTAL(MIN(rt0.c1)) THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN AVG(COUNT(*)) THEN v0.c0 END))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((COUNT(CASE WHEN TOTAL(MIN(rt0.c1)) THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN AVG(COUNT(*)) THEN v0.c0 END)) ISNULL);
SELECT * FROM v0 NOT INDEXED;
SELECT * FROM v0 WHERE ((CAST(v0.c0 AS TEXT) IN ())) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((CAST(v0.c0 AS TEXT) IN ())))) UNION ALL SELECT * FROM v0 WHERE ((((CAST(v0.c0 AS TEXT) IN ())) ISNULL));
SELECT * FROM v0 NOT INDEXED;
SELECT DISTINCT t0.c50 FROM t0;
SELECT DISTINCT t0.c50 FROM t0 WHERE ('1990000056') UNION SELECT DISTINCT t0.c50 FROM t0 WHERE ((NOT ('1990000056'))) UNION SELECT DISTINCT t0.c50 FROM t0 WHERE ((('1990000056') ISNULL));
SELECT DISTINCT t0.c50 FROM t0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((GROUP_CONCAT(TOTAL(MIN(COUNT(rt0.c0)))))<=(rt0.c2))) BETWEEN (COUNT(GROUP_CONCAT(rt0.c0))) AND ((COUNT(*) IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (((((GROUP_CONCAT(TOTAL(MIN(COUNT(rt0.c0)))))<=(rt0.c2))) BETWEEN (COUNT(GROUP_CONCAT(rt0.c0))) AND ((COUNT(*) IN ()))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((((GROUP_CONCAT(TOTAL(MIN(COUNT(rt0.c0)))))<=(rt0.c2))) BETWEEN (COUNT(GROUP_CONCAT(rt0.c0))) AND ((COUNT(*) IN ())))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CAST((v0.c0 IN ()) AS BLOB)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST((v0.c0 IN ()) AS BLOB)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CAST((v0.c0 IN ()) AS BLOB)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT t0.c50 FROM t0, rt0, v0;
SELECT DISTINCT t0.c50 FROM t0, rt0, v0 WHERE ((((((((((v0.c0)OR(rt0.c1)))AND(v0.c0)))OR(t0.c50)))AND(v0.c0)) IN ())) UNION SELECT DISTINCT t0.c50 FROM t0, rt0, v0 WHERE ((NOT ((((((((((v0.c0)OR(rt0.c1)))AND(v0.c0)))OR(t0.c50)))AND(v0.c0)) IN ())))) UNION SELECT DISTINCT t0.c50 FROM t0, rt0, v0 WHERE ((((((((((((v0.c0)OR(rt0.c1)))AND(v0.c0)))OR(t0.c50)))AND(v0.c0)) IN ())) ISNULL));
SELECT DISTINCT t0.c50 FROM t0, rt0, v0;
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 WHERE (NULL) GROUP BY t0.c50 UNION SELECT t0.c50 FROM t0 WHERE ((NOT (NULL))) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM t0 WHERE (((NULL) ISNULL)) GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50;
SELECT v0.c0, t0.c50 FROM t0, v0 GROUP BY v0.c0, t0.c50;
SELECT v0.c0, t0.c50 FROM t0, v0 GROUP BY v0.c0, t0.c50 HAVING (((v0.c0)) BETWEEN ((TOTAL(x''))) AND ((CAST(MAX(MIN(t0.c50)) AS NUMERIC)))) UNION ALL SELECT v0.c0, t0.c50 FROM t0, v0 GROUP BY v0.c0, t0.c50 HAVING (NOT ((((v0.c0)) BETWEEN ((TOTAL(x''))) AND ((CAST(MAX(MIN(t0.c50)) AS NUMERIC)))))) UNION ALL SELECT v0.c0, t0.c50 FROM t0, v0 GROUP BY v0.c0, t0.c50 HAVING (((((v0.c0)) BETWEEN ((TOTAL(x''))) AND ((CAST(MAX(MIN(t0.c50)) AS NUMERIC))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((- (v0.c0)))-(((v0.c0)!=(0.28398711441623203))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((- (v0.c0)))-(((v0.c0)<>(0.28398711441623203))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((- (v0.c0)))-(((v0.c0)<>(0.28398711441623203))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c0, rt0.c1, v0.c0, rt0.c2, t0.c50 FROM t0, v0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c0, rt0.c1, v0.c0, rt0.c2, t0.c50 FROM t0, v0 NATURAL JOIN rt0 WHERE ((CAST(rt0.c1 AS BLOB) IN ((NOT (0xffffffff8c4a9304))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, v0.c0, rt0.c2, t0.c50 FROM t0, v0 NATURAL JOIN rt0 WHERE ((NOT ((CAST(rt0.c1 AS BLOB) IN ((NOT (0Xffffffff8c4a9304))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, v0.c0, rt0.c2, t0.c50 FROM t0, v0 NATURAL JOIN rt0 WHERE ((((CAST(rt0.c1 AS BLOB) IN ((NOT (0xffffffff8c4a9304))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, v0.c0, rt0.c2, t0.c50 FROM t0, v0 NATURAL JOIN rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<(TRIM(DISTINCT v0.c0, v0.c0)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<(TRIM(DISTINCT v0.c0, v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<(TRIM(DISTINCT v0.c0, v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, rt0.c2 FROM v0 RIGHT OUTER JOIN t0 ON ((x'') BETWEEN ('-592350178') AND (rt0.c2)) LEFT OUTER JOIN rt0 ON ((((((v0.c0)AND(rt0.c1)))AND(rt0.c1))) BETWEEN (0.7694177553587506 COLLATE RTRIM) AND (((t0.c50)IS NOT(rt0.c2)))) GROUP BY v0.c0, rt0.c2;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((((v0.c0)/(v0.c0)) IN ())) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((v0.c0)/(v0.c0)) IN ())))) UNION ALL SELECT * FROM v0 WHERE ((((((v0.c0)/(v0.c0)) IN ())) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON ((CAST(v0.c0 AS TEXT)) IS FALSE);
SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON ((CAST(v0.c0 AS TEXT)) IS FALSE) WHERE (((((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50)))LIKE(((t0.c50) IS TRUE)))) UNION SELECT DISTINCT * FROM v0 NOT INDEXED FULL OUTER JOIN t0 ON ((CAST(v0.c0 AS TEXT)) IS FALSE) WHERE ((NOT (((((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50)))LIKE(((t0.c50) IS TRUE)))))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON ((CAST(v0.c0 AS TEXT)) IS FALSE) WHERE (((((((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50)))LIKE(((t0.c50) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON ((CAST(v0.c0 AS TEXT)) IS FALSE);
SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c50 FROM t0 CROSS JOIN rt0 ON ((((-2.78936113E8)<<(t0.c50)))%(1552834370)) GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c50;
SELECT rt0.c1, rt0.c0, rt0.c2, t0.c50 FROM t0 CROSS JOIN rt0 ON ((((-2.78936113E8)<<(t0.c50)))%(1552834370)) WHERE ((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END))<(((t0.c50 IN ()))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c50 UNION SELECT rt0.c1, rt0.c0, rt0.c2, t0.c50 FROM t0 NOT INDEXED CROSS JOIN rt0 ON ((((-2.78936113E8)<<(t0.c50)))%(1552834370)) WHERE ((NOT ((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END))<(((t0.c50 IN ()))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c50 UNION SELECT rt0.c1, rt0.c0, rt0.c2, t0.c50 FROM t0 CROSS JOIN rt0 ON ((((-2.78936113E8)<<(t0.c50)))%(1552834370)) WHERE ((((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END))<(((t0.c50 IN ()))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c50;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c50 FROM t0 CROSS JOIN rt0 ON ((((-2.78936113E8)<<(t0.c50)))%(1552834370)) GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c50;
SELECT rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0;
SELECT rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0 HAVING TOTAL((((SUM(COUNT(*)), rt0.c2, COUNT(*)))<((COUNT(rt0.c1), rt0.c1, GROUP_CONCAT(TOTAL(rt0.c2)))))) UNION ALL SELECT rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0 HAVING (NOT (TOTAL((((SUM(COUNT(*)), rt0.c2, COUNT(*)))<((COUNT(rt0.c1), rt0.c1, GROUP_CONCAT(TOTAL(rt0.c2)))))))) UNION ALL SELECT rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c0 HAVING ((TOTAL((((SUM(COUNT(*)), rt0.c2, COUNT(*)))<((COUNT(rt0.c1), rt0.c1, GROUP_CONCAT(TOTAL(rt0.c2))))))) ISNULL);
SELECT ALL * FROM t0, rt0, v0;
SELECT ALL * FROM t0, rt0, v0 WHERE (HEX(v0.c0) COLLATE NOCASE) UNION ALL SELECT ALL * FROM t0, rt0, v0 WHERE ((NOT (HEX(v0.c0) COLLATE NOCASE))) UNION ALL SELECT * FROM t0, rt0 NOT INDEXED, v0 WHERE (((HEX(v0.c0) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM t0, rt0, v0;
SELECT DISTINCT rt0.c2, t0.c50 FROM v0, rt0, t0;
SELECT DISTINCT rt0.c2, t0.c50 FROM v0, rt0, t0 WHERE (CASE t0.c50  WHEN TRIM(rt0.c0, t0.c50) THEN (((t0.c50, rt0.c0, rt0.c1))!=((rt0.c1, rt0.c1, rt0.c0))) END) UNION SELECT DISTINCT rt0.c2, t0.c50 FROM v0, rt0, t0 WHERE ((NOT (CASE t0.c50  WHEN TRIM(rt0.c0, t0.c50) THEN (((t0.c50, rt0.c0, rt0.c1))<>((rt0.c1, rt0.c1, rt0.c0))) END))) UNION SELECT DISTINCT rt0.c2, t0.c50 FROM v0, rt0, t0 WHERE (((CASE t0.c50  WHEN TRIM(rt0.c0, t0.c50) THEN (((t0.c50, rt0.c0, rt0.c1))!=((rt0.c1, rt0.c1, rt0.c0))) END) ISNULL));
SELECT DISTINCT rt0.c2, t0.c50 FROM v0, rt0, t0;
SELECT ALL t0.c50, v0.c0 FROM v0, rt0, t0 GROUP BY t0.c50, v0.c0;
SELECT t0.c50, v0.c0 FROM v0, rt0, t0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND ('4N*A')))AND((~ (v0.c0)))))OR(json_array(t0.c50, v0.c0)))) GROUP BY t0.c50, v0.c0 UNION SELECT ALL t0.c50, v0.c0 FROM v0, rt0, t0 WHERE ((NOT (((((((v0.c0) NOT BETWEEN (v0.c0) AND ('4N*A')))AND((~ (v0.c0)))))OR(json_array(t0.c50, v0.c0)))))) GROUP BY t0.c50, v0.c0 UNION SELECT t0.c50, v0.c0 FROM v0, rt0, t0 WHERE (((((((((v0.c0) NOT BETWEEN (v0.c0) AND ('4N*A')))AND((~ (v0.c0)))))OR(json_array(t0.c50, v0.c0)))) ISNULL)) GROUP BY t0.c50, v0.c0;
SELECT ALL t0.c50, v0.c0 FROM v0, rt0, t0 GROUP BY t0.c50, v0.c0;
SELECT ALL t0.c50, v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, v0, rt0 GROUP BY t0.c50, v0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT t0.c50, v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, v0, rt0 GROUP BY t0.c50, v0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING CAST(((((rt0.c0)AND(rt0.c2)))AND(MIN(NULL))) AS TEXT) UNION ALL SELECT t0.c50, v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, v0, rt0 GROUP BY t0.c50, v0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (CAST(((((rt0.c0)AND(rt0.c2)))AND(MIN(NULL))) AS TEXT))) UNION ALL SELECT t0.c50, v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, v0, rt0 GROUP BY t0.c50, v0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING ((CAST(((((rt0.c0)AND(rt0.c2)))AND(MIN(NULL))) AS TEXT)) ISNULL);
SELECT ALL t0.c50, v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, v0, rt0 GROUP BY t0.c50, v0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT t0.c50, v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, v0, rt0 GROUP BY t0.c50, v0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING CAST(((((rt0.c0)AND(rt0.c2)))AND(MIN(NULL))) AS TEXT) UNION ALL SELECT t0.c50, v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, v0, rt0 GROUP BY t0.c50, v0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (CAST(((((rt0.c0)AND(rt0.c2)))AND(MIN(NULL))) AS TEXT))) UNION ALL SELECT t0.c50, v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, v0, rt0 GROUP BY t0.c50, v0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING ((CAST(((((rt0.c0)AND(rt0.c2)))AND(MIN(NULL))) AS TEXT)) ISNULL);
SELECT ALL t0.c50, v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, v0, rt0 GROUP BY t0.c50, v0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c1 FROM rt0, v0;
SELECT rt0.c2, rt0.c1 FROM rt0, v0 WHERE (CASE WHEN ((0.41507351614150334) NOT NULL) THEN (NOT (rt0.c2)) END) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((NOT (CASE WHEN ((0.41507351614150334) NOT NULL) THEN (NOT (rt0.c2)) END))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0, v0 WHERE (((CASE WHEN ((0.41507351614150334) NOT NULL) THEN (NOT (rt0.c2)) END) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0, v0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (((t0.c50 COLLATE BINARY)&(((t0.c50)LIKE(x''))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (((t0.c50 COLLATE BINARY)&(((t0.c50)LIKE(x''))))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((((t0.c50 COLLATE BINARY)&(((t0.c50)LIKE(x''))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt0.c1, v0.c0, t0.c50, rt0.c0 FROM t0, rt0, v0 GROUP BY rt0.c1, v0.c0, t0.c50, rt0.c0;
SELECT rt0.c1, v0.c0, t0.c50, rt0.c0 FROM t0, rt0, v0 WHERE (rt0.c2) GROUP BY rt0.c1, v0.c0, t0.c50, rt0.c0 UNION SELECT ALL rt0.c1, v0.c0, t0.c50, rt0.c0 FROM t0, rt0, v0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c1, v0.c0, t0.c50, rt0.c0 UNION SELECT rt0.c1, v0.c0, t0.c50, rt0.c0 FROM t0, rt0, v0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c1, v0.c0, t0.c50, rt0.c0;
SELECT ALL rt0.c1, v0.c0, t0.c50, rt0.c0 FROM t0, rt0, v0 GROUP BY rt0.c1, v0.c0, t0.c50, rt0.c0;
SELECT t0.c50, v0.c0, rt0.c2 FROM rt0 INNER JOIN t0 ON rt0.c1 LEFT OUTER JOIN v0 ON (((((v0.c0 IN (v0.c0)))OR(((('-1062907042')) NOT BETWEEN ((0x589ffb83)) AND ((v0.c0))))))OR(CAST(rt0.c2 AS INTEGER))) GROUP BY t0.c50, v0.c0, rt0.c2;
SELECT ALL t0.c50, v0.c0, rt0.c2 FROM rt0 INNER JOIN t0 ON rt0.c1 LEFT OUTER JOIN v0 ON (((((v0.c0 IN (v0.c0)))OR(((('-1062907042')) NOT BETWEEN ((0x589ffb83)) AND ((v0.c0))))))OR(CAST(rt0.c2 AS INTEGER))) GROUP BY t0.c50, v0.c0, rt0.c2 HAVING ((LIKELIHOOD(DISTINCT rt0.c0, 0.7809505685924311))||(COUNT(MIN(rt0.c0)))) UNION ALL SELECT t0.c50, v0.c0, rt0.c2 FROM rt0 INNER JOIN t0 ON rt0.c1 LEFT OUTER JOIN v0 ON (((((v0.c0 IN (v0.c0)))OR(((('-1062907042')) NOT BETWEEN ((0x589ffb83)) AND ((v0.c0))))))OR(CAST(rt0.c2 AS INTEGER))) GROUP BY t0.c50, v0.c0, rt0.c2 HAVING (NOT (((LIKELIHOOD(DISTINCT rt0.c0, 0.7809505685924311))||(COUNT(MIN(rt0.c0)))))) UNION ALL SELECT ALL t0.c50, v0.c0, rt0.c2 FROM rt0 INNER JOIN t0 ON rt0.c1 LEFT OUTER JOIN v0 ON (((((v0.c0 IN (v0.c0)))OR(((('-1062907042')) NOT BETWEEN ((0x589ffb83)) AND ((v0.c0))))))OR(CAST(rt0.c2 AS INTEGER))) GROUP BY t0.c50, v0.c0, rt0.c2 HAVING ((((LIKELIHOOD(DISTINCT rt0.c0, 0.7809505685924311))||(COUNT(MIN(rt0.c0))))) ISNULL);
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (CASE ((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))  WHEN (- (rt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) WHEN ((rt0.c0)AND(rt0.c0)) THEN ((rt0.c1)GLOB(rt0.c2)) ELSE SQLITE_COMPILEOPTION_USED(rt0.c1) END) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (CASE ((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))  WHEN (- (rt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) WHEN ((rt0.c0)AND(rt0.c0)) THEN ((rt0.c1)GLOB(rt0.c2)) ELSE SQLITE_COMPILEOPTION_USED(rt0.c1) END))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((CASE ((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))  WHEN (- (rt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) WHEN ((rt0.c0)AND(rt0.c0)) THEN ((rt0.c1)GLOB(rt0.c2)) ELSE SQLITE_COMPILEOPTION_USED(rt0.c1) END) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON ((((t0.c50)<=(t0.c50))) ISNULL);
SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON ((((t0.c50)<=(t0.c50))) ISNULL) WHERE (x'6d73' COLLATE RTRIM) UNION SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON ((((t0.c50)<=(t0.c50))) ISNULL) WHERE ((NOT (x'6d73' COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON ((((t0.c50)<=(t0.c50))) ISNULL) WHERE (((x'6d73' COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON ((((t0.c50)<=(t0.c50))) ISNULL);
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT t0.c50 FROM t0 WHERE ((((((t0.c50)) BETWEEN ((t0.c50)) AND ((NULL)))) IS TRUE)) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM t0 WHERE ((NOT ((((((t0.c50)) BETWEEN ((t0.c50)) AND ((NULL)))) IS TRUE)))) GROUP BY t0.c50 UNION SELECT t0.c50 FROM t0 WHERE ((((((((t0.c50)) BETWEEN ((t0.c50)) AND ((NULL)))) IS TRUE)) ISNULL)) GROUP BY t0.c50;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT rt0.c2, v0.c0, rt0.c1 FROM t0, v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c1;
SELECT rt0.c2, v0.c0, rt0.c1 FROM t0, v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c1 HAVING ((MIN(AVG(MAX(NULL)))) BETWEEN (0.44424335481193244) AND (NULL)) COLLATE NOCASE UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM t0 NOT INDEXED, v0, rt0 NOT INDEXED GROUP BY rt0.c2, v0.c0, rt0.c1 HAVING (NOT (((MIN(AVG(MAX(NULL)))) BETWEEN (0.44424335481193244) AND (NULL)) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM t0, v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c1 HAVING ((((MIN(AVG(MAX(NULL)))) BETWEEN (0.44424335481193244) AND (NULL)) COLLATE NOCASE) ISNULL);
SELECT * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE (CAST(t0.c50 AS TEXT) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT (CAST(t0.c50 AS TEXT) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((CAST(t0.c50 AS TEXT) COLLATE NOCASE) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((- (1277234500))))<=(((((t0.c50))!=((t0.c50))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((- (1277234500))))<=(((((t0.c50))<>((t0.c50))))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((- (1277234500))))<=(((((t0.c50))!=((t0.c50))))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (0.026511308548965107) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (0.026511308548965107))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((0.026511308548965107) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c50, rt0.c1 FROM rt0, t0 GROUP BY t0.c50, rt0.c1;
SELECT ALL t0.c50, rt0.c1 FROM rt0, t0 GROUP BY t0.c50, rt0.c1 HAVING GROUP_CONCAT(SUM(AVG(AVG(COUNT(*))))) UNION ALL SELECT ALL t0.c50, rt0.c1 FROM rt0, t0 GROUP BY t0.c50, rt0.c1 HAVING (NOT (GROUP_CONCAT(SUM(AVG(AVG(COUNT(*))))))) UNION ALL SELECT t0.c50, rt0.c1 FROM rt0, t0 GROUP BY t0.c50, rt0.c1 HAVING ((GROUP_CONCAT(SUM(AVG(AVG(COUNT(*)))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, v0.c0, t0.c50, rt0.c0 FROM rt0, t0, v0;
SELECT ALL rt0.c1, rt0.c2, v0.c0, t0.c50, rt0.c0 FROM rt0, t0, v0 WHERE (((((0.5427663374873393)OR(v0.c0)))OR((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, t0.c50, rt0.c0 FROM rt0, t0, v0 WHERE ((NOT (((((0.5427663374873393)OR(v0.c0)))OR((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, t0.c50, rt0.c0 FROM rt0, t0, v0 WHERE (((((((0.5427663374873393)OR(v0.c0)))OR((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0)))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, v0.c0, t0.c50, rt0.c0 FROM rt0, t0, v0;
SELECT DISTINCT t0.c50, rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON (CAST(rt0.c0 AS REAL) IN ('3V?Ah[Wb')) LEFT OUTER JOIN v0 ON CAST(v0.c0 AS INTEGER) COLLATE BINARY;
SELECT DISTINCT t0.c50, rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON (CAST(rt0.c0 AS REAL) IN ('3V?Ah[Wb')) LEFT OUTER JOIN v0 ON CAST(v0.c0 AS INTEGER) COLLATE BINARY WHERE (((NULL)IS NOT(CAST(t0.c50 AS REAL)))) UNION SELECT DISTINCT t0.c50, rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON (CAST(rt0.c0 AS REAL) IN ('3V?Ah[Wb')) LEFT OUTER JOIN v0 ON CAST(v0.c0 AS INTEGER) COLLATE BINARY WHERE ((NOT (((NULL)IS NOT(CAST(t0.c50 AS REAL)))))) UNION SELECT DISTINCT t0.c50, rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON (CAST(rt0.c0 AS REAL) IN ('3V?Ah[Wb')) LEFT OUTER JOIN v0 ON CAST(v0.c0 AS INTEGER) COLLATE BINARY WHERE (((((NULL)IS NOT(CAST(t0.c50 AS REAL)))) ISNULL));
SELECT DISTINCT t0.c50, rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON (CAST(rt0.c0 AS REAL) IN ('3V?Ah[Wb')) LEFT OUTER JOIN v0 ON CAST(v0.c0 AS INTEGER) COLLATE BINARY;
SELECT ALL rt0.c0, rt0.c1, v0.c0, t0.c50 FROM v0, rt0, t0 GROUP BY rt0.c0, rt0.c1, v0.c0, t0.c50;
SELECT ALL rt0.c0, rt0.c1, v0.c0, t0.c50 FROM v0, rt0, t0 WHERE (((((((rt0.c1)=(rt0.c0)))OR(((((v0.c0)OR(x'')))AND(rt0.c1)))))OR('0.20995987775232472'))) GROUP BY rt0.c0, rt0.c1, v0.c0, t0.c50 UNION SELECT rt0.c0, rt0.c1, v0.c0, t0.c50 FROM v0, rt0, t0 WHERE ((NOT (((((((rt0.c1)=(rt0.c0)))OR(((((v0.c0)OR(x'')))AND(rt0.c1)))))OR('0.20995987775232472'))))) GROUP BY rt0.c0, rt0.c1, v0.c0, t0.c50 UNION SELECT rt0.c0, rt0.c1, v0.c0, t0.c50 FROM v0, rt0, t0 WHERE (((((((((rt0.c1)==(rt0.c0)))OR(((((v0.c0)OR(x'')))AND(rt0.c1)))))OR('0.20995987775232472'))) ISNULL)) GROUP BY rt0.c0, rt0.c1, v0.c0, t0.c50;
SELECT ALL rt0.c0, rt0.c1, v0.c0, t0.c50 FROM v0, rt0, t0 GROUP BY rt0.c0, rt0.c1, v0.c0, t0.c50;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING TOTAL(NULL) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (TOTAL(NULL))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((TOTAL(NULL)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING TOTAL(NULL) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (TOTAL(NULL))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((TOTAL(NULL)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0;
SELECT ALL * FROM t0, v0, rt0;
SELECT * FROM t0, v0, rt0 WHERE (0.08637045610651917) UNION ALL SELECT ALL * FROM t0, v0, rt0 WHERE ((NOT (0.08637045610651917))) UNION ALL SELECT ALL * FROM t0, v0, rt0 WHERE (((0.08637045610651917) ISNULL));
SELECT ALL * FROM t0, v0, rt0;
SELECT DISTINCT rt0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c1 FROM v0, rt0 WHERE ((rt0.c1 IN (rt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT rt0.c1 FROM v0, rt0 WHERE ((NOT ((rt0.c1 IN (rt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1 FROM v0, rt0 WHERE ((((rt0.c1 IN (rt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c1 FROM v0, rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT v0.c0 FROM v0, rt0, t0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt0, t0 GROUP BY v0.c0 HAVING TOTAL(GROUP_CONCAT(COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0, rt0, t0 GROUP BY v0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM v0, rt0, t0 GROUP BY v0.c0 HAVING ((TOTAL(GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT ALL rt0.c0 FROM v0 CROSS JOIN rt0 ON ((-1051243093) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND ((((v0.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2))<=((rt0.c1, rt0.c0, v0.c0, rt0.c0, rt0.c1)))));
SELECT rt0.c0 FROM v0 CROSS JOIN rt0 ON ((-1051243093) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND ((((v0.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2))<=((rt0.c1, rt0.c0, v0.c0, rt0.c0, rt0.c1))))) WHERE (CASE ((NULL)==(rt0.c2))  WHEN (((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c2, x'')) AND (('nowCpH', v0.c0, v0.c0))) THEN (rt0.c0 IN ()) ELSE ((rt0.c2) IS FALSE) END) UNION ALL SELECT ALL rt0.c0 FROM v0 CROSS JOIN rt0 ON ((-1051243093) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND ((((v0.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2))<=((rt0.c1, rt0.c0, v0.c0, rt0.c0, rt0.c1))))) WHERE ((NOT (CASE ((NULL)=(rt0.c2))  WHEN (((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c2, x'')) AND (('nowCpH', v0.c0, v0.c0))) THEN (rt0.c0 IN ()) ELSE ((rt0.c2) IS FALSE) END))) UNION ALL SELECT rt0.c0 FROM v0 CROSS JOIN rt0 ON ((-1051243093) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND ((((v0.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2))<=((rt0.c1, rt0.c0, v0.c0, rt0.c0, rt0.c1))))) WHERE (((CASE ((NULL)=(rt0.c2))  WHEN (((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c2, x'')) AND (('nowCpH', v0.c0, v0.c0))) THEN (rt0.c0 IN ()) ELSE ((rt0.c2) IS FALSE) END) ISNULL));
SELECT ALL rt0.c0 FROM v0 CROSS JOIN rt0 ON ((-1051243093) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND ((((v0.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2))<=((rt0.c1, rt0.c0, v0.c0, rt0.c0, rt0.c1)))));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (LIKELIHOOD(((rt0.c0) IS FALSE), 0.645012925960325)) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (LIKELIHOOD(((rt0.c0) IS FALSE), 0.645012925960325)))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((LIKELIHOOD(((rt0.c0) IS FALSE), 0.645012925960325)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT t0.c50 FROM t0 WHERE (CAST(CASE t0.c50  WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END AS BLOB)) GROUP BY t0.c50 UNION SELECT t0.c50 FROM t0 WHERE ((NOT (CAST(CASE t0.c50  WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END AS BLOB)))) GROUP BY t0.c50 UNION SELECT t0.c50 FROM t0 WHERE (((CAST(CASE t0.c50  WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END AS BLOB)) ISNULL)) GROUP BY t0.c50;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0 HAVING TOTAL(((NULL)OR(rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0 HAVING (NOT (TOTAL(((NULL)OR(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0 HAVING ((TOTAL(((NULL)OR(rt0.c0)))) ISNULL);
SELECT rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0 HAVING TOTAL(((NULL)OR(rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0 HAVING (NOT (TOTAL(((NULL)OR(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0 HAVING ((TOTAL(((NULL)OR(rt0.c0)))) ISNULL);
SELECT rt0.c1, rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT)) IS FALSE)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS TEXT)) IS FALSE)))) UNION ALL SELECT * FROM rt0 WHERE (((((CAST(rt0.c2 AS TEXT)) IS FALSE)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0 IN ()))%(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN ()))%(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0 IN ()))%(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT t0.c50 FROM v0, t0 GROUP BY t0.c50;
SELECT t0.c50 FROM v0, t0 WHERE (((x'') NOT BETWEEN ((t0.c50 IN ())) AND ((- (v0.c0))))) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM v0, t0 WHERE ((NOT (((x'') NOT BETWEEN ((t0.c50 IN ())) AND ((- (v0.c0))))))) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM v0, t0 WHERE (((((x'') NOT BETWEEN ((t0.c50 IN ())) AND ((- (v0.c0))))) ISNULL)) GROUP BY t0.c50;
SELECT t0.c50 FROM v0, t0 GROUP BY t0.c50;
SELECT ALL v0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c1;
SELECT v0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c1 HAVING GROUP_CONCAT((NOT (NULL))) UNION ALL SELECT v0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT((NOT (NULL))))) UNION ALL SELECT ALL v0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c1 HAVING ((GROUP_CONCAT((NOT (NULL)))) ISNULL);
SELECT ALL v0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c1;
SELECT v0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c1 HAVING GROUP_CONCAT((NOT (NULL))) UNION ALL SELECT v0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT((NOT (NULL))))) UNION ALL SELECT ALL v0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c1 HAVING ((GROUP_CONCAT((NOT (NULL)))) ISNULL);
SELECT ALL v0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c1;
SELECT ALL t0.c50, v0.c0 FROM t0, v0;
SELECT t0.c50, v0.c0 FROM t0, v0 WHERE ((+ (v0.c0)) COLLATE BINARY) UNION ALL SELECT ALL t0.c50, v0.c0 FROM t0, v0 WHERE ((NOT ((+ (v0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL t0.c50, v0.c0 FROM t0, v0 WHERE ((((+ (v0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL t0.c50, v0.c0 FROM t0, v0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((rt0.c0) NOT BETWEEN (t0.c50 COLLATE NOCASE) AND (LENGTH(rt0.c2))) CROSS JOIN v0 ON (((v0.c0, t0.c50, rt0.c2)) NOT BETWEEN ((CASE v0.c0  WHEN rt0.c2 THEN rt0.c0 END, (((rt0.c2))>=((rt0.c2))), rt0.c0 COLLATE NOCASE)) AND (((((rt0.c0)) BETWEEN ((t0.c50)) AND ((v0.c0))), ((rt0.c1)<(rt0.c2)), rt0.c2 COLLATE RTRIM)));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((rt0.c0) NOT BETWEEN (t0.c50 COLLATE NOCASE) AND (LENGTH(rt0.c2))) CROSS JOIN v0 ON (((v0.c0, t0.c50, rt0.c2)) NOT BETWEEN ((CASE v0.c0  WHEN rt0.c2 THEN rt0.c0 END, (((rt0.c2))>=((rt0.c2))), rt0.c0 COLLATE NOCASE)) AND (((((rt0.c0)) BETWEEN ((t0.c50)) AND ((v0.c0))), ((rt0.c1)<(rt0.c2)), rt0.c2 COLLATE RTRIM))) WHERE (CAST(v0.c0 AS TEXT)) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((rt0.c0) NOT BETWEEN (t0.c50 COLLATE NOCASE) AND (LENGTH(rt0.c2))) CROSS JOIN v0 ON (((v0.c0, t0.c50, rt0.c2)) NOT BETWEEN ((CASE v0.c0  WHEN rt0.c2 THEN rt0.c0 END, (((rt0.c2))>=((rt0.c2))), rt0.c0 COLLATE NOCASE)) AND (((((rt0.c0)) BETWEEN ((t0.c50)) AND ((v0.c0))), ((rt0.c1)<(rt0.c2)), rt0.c2 COLLATE RTRIM))) WHERE ((NOT (CAST(v0.c0 AS TEXT)))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((rt0.c0) NOT BETWEEN (t0.c50 COLLATE NOCASE) AND (LENGTH(rt0.c2))) CROSS JOIN v0 ON (((v0.c0, t0.c50, rt0.c2)) NOT BETWEEN ((CASE v0.c0  WHEN rt0.c2 THEN rt0.c0 END, (((rt0.c2))>=((rt0.c2))), rt0.c0 COLLATE NOCASE)) AND (((((rt0.c0)) BETWEEN ((t0.c50)) AND ((v0.c0))), ((rt0.c1)<(rt0.c2)), rt0.c2 COLLATE RTRIM))) WHERE (((CAST(v0.c0 AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((rt0.c0) NOT BETWEEN (t0.c50 COLLATE NOCASE) AND (LENGTH(rt0.c2))) CROSS JOIN v0 ON (((v0.c0, t0.c50, rt0.c2)) NOT BETWEEN ((CASE v0.c0  WHEN rt0.c2 THEN rt0.c0 END, (((rt0.c2))>=((rt0.c2))), rt0.c0 COLLATE NOCASE)) AND (((((rt0.c0)) BETWEEN ((t0.c50)) AND ((v0.c0))), ((rt0.c1)<(rt0.c2)), rt0.c2 COLLATE RTRIM)));
SELECT t0.c50, rt0.c1 FROM rt0, t0 GROUP BY t0.c50, rt0.c1;
SELECT t0.c50, rt0.c1 FROM rt0, t0 WHERE ('\[Q') GROUP BY t0.c50, rt0.c1 UNION SELECT ALL t0.c50, rt0.c1 FROM rt0, t0 WHERE ((NOT ('\[Q'))) GROUP BY t0.c50, rt0.c1 UNION SELECT t0.c50, rt0.c1 FROM rt0, t0 WHERE ((('\[Q') ISNULL)) GROUP BY t0.c50, rt0.c1;
SELECT t0.c50, rt0.c1 FROM rt0, t0 GROUP BY t0.c50, rt0.c1;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING MIN(((t0.c50) IS TRUE)) UNION ALL SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50 HAVING (NOT (MIN(((t0.c50) IS TRUE)))) UNION ALL SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50 HAVING ((MIN(((t0.c50) IS TRUE))) ISNULL);
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING MIN(((t0.c50) IS TRUE)) UNION ALL SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50 HAVING (NOT (MIN(((t0.c50) IS TRUE)))) UNION ALL SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50 HAVING ((MIN(((t0.c50) IS TRUE))) ISNULL);
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON (+ (CAST(rt0.c0 AS NUMERIC))) INNER JOIN rt0 ON (((v0.c0)) BETWEEN ((NULL)) AND ((QUOTE(v0.c0))));
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON (+ (CAST(rt0.c0 AS NUMERIC))) INNER JOIN rt0 ON (((v0.c0)) BETWEEN ((NULL)) AND ((QUOTE(v0.c0)))) WHERE (CAST(NULL COLLATE NOCASE AS REAL)) UNION ALL SELECT * FROM t0 LEFT OUTER JOIN v0 ON (+ (CAST(rt0.c0 AS NUMERIC))) INNER JOIN rt0 ON (((v0.c0)) BETWEEN ((NULL)) AND ((QUOTE(v0.c0)))) WHERE ((NOT (CAST(NULL COLLATE NOCASE AS REAL)))) UNION ALL SELECT * FROM t0 LEFT OUTER JOIN v0 ON (+ (CAST(rt0.c0 AS NUMERIC))) INNER JOIN rt0 ON (((v0.c0)) BETWEEN ((NULL)) AND ((QUOTE(v0.c0)))) WHERE (((CAST(NULL COLLATE NOCASE AS REAL)) ISNULL));
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON (+ (CAST(rt0.c0 AS NUMERIC))) INNER JOIN rt0 ON (((v0.c0)) BETWEEN ((NULL)) AND ((QUOTE(v0.c0))));
SELECT DISTINCT rt0.c1, v0.c0 FROM t0, rt0, v0;
SELECT DISTINCT rt0.c1, v0.c0 FROM t0, rt0, v0 WHERE (CASE IFNULL(DISTINCT v0.c0, rt0.c2)  WHEN CASE WHEN rt0.c0 THEN t0.c50 WHEN t0.c50 THEN NULL WHEN rt0.c2 THEN t0.c50 END THEN (((v0.c0))<((v0.c0))) WHEN ((t0.c50) IS TRUE) THEN (rt0.c0 IN ()) WHEN ((rt0.c2)IS(rt0.c0)) THEN rt0.c1 ELSE (~ (rt0.c1)) END) UNION SELECT DISTINCT rt0.c1, v0.c0 FROM t0, rt0, v0 WHERE ((NOT (CASE IFNULL(DISTINCT v0.c0, rt0.c2)  WHEN CASE WHEN rt0.c0 THEN t0.c50 WHEN t0.c50 THEN NULL WHEN rt0.c2 THEN t0.c50 END THEN (((v0.c0))<((v0.c0))) WHEN ((t0.c50) IS TRUE) THEN (rt0.c0 IN ()) WHEN ((rt0.c2)IS(rt0.c0)) THEN rt0.c1 ELSE (~ (rt0.c1)) END))) UNION SELECT DISTINCT rt0.c1, v0.c0 FROM t0, rt0, v0 WHERE (((CASE IFNULL(DISTINCT v0.c0, rt0.c2)  WHEN CASE WHEN rt0.c0 THEN t0.c50 WHEN t0.c50 THEN NULL WHEN rt0.c2 THEN t0.c50 END THEN (((v0.c0))<((v0.c0))) WHEN ((t0.c50) IS TRUE) THEN (rt0.c0 IN ()) WHEN ((rt0.c2)IS(rt0.c0)) THEN rt0.c1 ELSE (~ (rt0.c1)) END) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0 FROM t0, rt0, v0;
SELECT rt0.c1, t0.c50, v0.c0, rt0.c0, rt0.c2 FROM v0, t0, rt0 GROUP BY rt0.c1, t0.c50, v0.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, t0.c50, v0.c0, rt0.c0, rt0.c2 FROM v0, t0, rt0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c0 COLLATE BINARY)))) GROUP BY rt0.c1, t0.c50, v0.c0, rt0.c0, rt0.c2 UNION SELECT rt0.c1, t0.c50, v0.c0, rt0.c0, rt0.c2 FROM v0, t0, rt0 WHERE ((NOT ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c0 COLLATE BINARY)))))) GROUP BY rt0.c1, t0.c50, v0.c0, rt0.c0, rt0.c2 UNION SELECT rt0.c1, t0.c50, v0.c0, rt0.c0, rt0.c2 FROM v0, t0 NOT INDEXED, rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c0 COLLATE BINARY)))) ISNULL)) GROUP BY rt0.c1, t0.c50, v0.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, t0.c50, v0.c0, rt0.c0, rt0.c2 FROM v0, t0, rt0 GROUP BY rt0.c1, t0.c50, v0.c0, rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING SUM(((COUNT(SUM(rt0.c2))) NOTNULL)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (SUM(((COUNT(SUM(rt0.c2))) NOTNULL)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((SUM(((COUNT(SUM(rt0.c2))) NOTNULL))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((((((t0.c50)OR(t0.c50)))OR(t0.c50))) NOT NULL)) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((((t0.c50)OR(t0.c50)))OR(t0.c50))) NOT NULL)))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((((t0.c50)OR(t0.c50)))OR(t0.c50))) NOT NULL)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM rt0, v0, t0;
SELECT DISTINCT * FROM rt0, v0, t0 WHERE ((((v0.c0 IN ())) NOT BETWEEN (CAST(t0.c50 AS REAL)) AND (((rt0.c2) ISNULL)))) UNION SELECT DISTINCT * FROM rt0, v0, t0 WHERE ((NOT ((((v0.c0 IN ())) NOT BETWEEN (CAST(t0.c50 AS REAL)) AND (((rt0.c2) ISNULL)))))) UNION SELECT DISTINCT * FROM rt0, v0, t0 WHERE ((((((v0.c0 IN ())) NOT BETWEEN (CAST(t0.c50 AS REAL)) AND (((rt0.c2) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM rt0, v0, t0;
SELECT rt0.c0, rt0.c2, rt0.c1, t0.c50 FROM t0, v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c50;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, t0.c50 FROM t0, v0, rt0 WHERE (x'7dd7') GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c50 UNION SELECT rt0.c0, rt0.c2, rt0.c1, t0.c50 FROM t0, v0, rt0 WHERE ((NOT (x'7dd7'))) GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c50 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, t0.c50 FROM t0, v0, rt0 WHERE (((x'7dd7') ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c50;
SELECT rt0.c0, rt0.c2, rt0.c1, t0.c50 FROM t0, v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c50;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50 HAVING TOTAL((+ (t0.c50))) UNION ALL SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING (NOT (TOTAL((+ (t0.c50))))) UNION ALL SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING ((TOTAL((+ (t0.c50)))) ISNULL);
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50 HAVING TOTAL((+ (t0.c50))) UNION ALL SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING (NOT (TOTAL((+ (t0.c50))))) UNION ALL SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING ((TOTAL((+ (t0.c50)))) ISNULL);
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL * FROM t0, rt0, v0;
SELECT ALL * FROM t0, rt0, v0 WHERE (((((((rt0.c2))=((rt0.c0))), CAST(t0.c50 AS BLOB), CASE WHEN v0.c0 THEN rt0.c2 END))==(((((t0.c50, rt0.c2, x'', v0.c0, v0.c0))>=((rt0.c1, t0.c50, t0.c50, 0.35231385531440174, v0.c0))), (((rt0.c2))>((rt0.c1))), json_remove(rt0.c0, rt0.c0))))) UNION ALL SELECT ALL * FROM t0, rt0, v0 WHERE ((NOT (((((((rt0.c2))=((rt0.c0))), CAST(t0.c50 AS BLOB), CASE WHEN v0.c0 THEN rt0.c2 END))=(((((t0.c50, rt0.c2, x'', v0.c0, v0.c0))>=((rt0.c1, t0.c50, t0.c50, 0.35231385531440174, v0.c0))), (((rt0.c2))>((rt0.c1))), json_remove(rt0.c0, rt0.c0))))))) UNION ALL SELECT ALL * FROM t0, rt0, v0 WHERE (((((((((rt0.c2))=((rt0.c0))), CAST(t0.c50 AS BLOB), CASE WHEN v0.c0 THEN rt0.c2 END))=(((((t0.c50, rt0.c2, x'', v0.c0, v0.c0))>=((rt0.c1, t0.c50, t0.c50, 0.35231385531440174, v0.c0))), (((rt0.c2))>((rt0.c1))), json_remove(rt0.c0, rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0 NOT INDEXED FULL OUTER JOIN rt0 ON ((((x'')>=(rt0.c1))) ISNULL) FULL OUTER JOIN t0 ON (- (((rt0.c1) NOT NULL)));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON ((((x'')>=(rt0.c1))) ISNULL) FULL OUTER JOIN t0 ON (- (((rt0.c1) NOT NULL))) WHERE ((NOT ((NOT ('1990000056'))))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON ((((x'')>=(rt0.c1))) ISNULL) FULL OUTER JOIN t0 ON (- (((rt0.c1) NOT NULL))) WHERE ((NOT ((NOT ((NOT ('1990000056'))))))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON ((((x'')>=(rt0.c1))) ISNULL) FULL OUTER JOIN t0 ON (- (((rt0.c1) NOT NULL))) WHERE ((((NOT ((NOT ('1990000056'))))) ISNULL));
SELECT DISTINCT * FROM v0 NOT INDEXED FULL OUTER JOIN rt0 ON ((((x'')>=(rt0.c1))) ISNULL) FULL OUTER JOIN t0 ON (- (((rt0.c1) NOT NULL)));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((-847904692, v0.c0, 0.5521529188043465, v0.c0, v0.c0)) BETWEEN ((((v0.c0)<=(v0.c0)), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), (v0.c0 IN ()), ((v0.c0)>=(v0.c0)), (- (v0.c0)))) AND ((((v0.c0) ISNULL), ((v0.c0)OR(v0.c0)), ((v0.c0)|(v0.c0)), ((v0.c0)>=(v0.c0)), (v0.c0 IN (v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((-847904692, v0.c0, 0.5521529188043465, v0.c0, v0.c0)) BETWEEN ((((v0.c0)<=(v0.c0)), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), (v0.c0 IN ()), ((v0.c0)>=(v0.c0)), (- (v0.c0)))) AND ((((v0.c0) ISNULL), ((v0.c0)OR(v0.c0)), ((v0.c0)|(v0.c0)), ((v0.c0)>=(v0.c0)), (v0.c0 IN (v0.c0)))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((-847904692, v0.c0, 0.5521529188043465, v0.c0, v0.c0)) BETWEEN ((((v0.c0)<=(v0.c0)), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), (v0.c0 IN ()), ((v0.c0)>=(v0.c0)), (- (v0.c0)))) AND ((((v0.c0) ISNULL), ((v0.c0)OR(v0.c0)), ((v0.c0)|(v0.c0)), ((v0.c0)>=(v0.c0)), (v0.c0 IN (v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING MIN(AVG(t0.c50)) UNION ALL SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING (NOT (MIN(AVG(t0.c50)))) UNION ALL SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING ((MIN(AVG(t0.c50))) ISNULL);
SELECT * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE ((((((t0.c50) ISNULL)))==(((v0.c0 IN ()))))) UNION ALL SELECT * FROM v0, t0 WHERE ((NOT ((((((t0.c50) ISNULL)))=(((v0.c0 IN ()))))))) UNION ALL SELECT * FROM v0, t0 WHERE ((((((((t0.c50) ISNULL)))=(((v0.c0 IN ()))))) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (HEX(DISTINCT (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c50))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (HEX(DISTINCT (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c50))))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((HEX(DISTINCT (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c50))))) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ('㾉\dz' COLLATE RTRIM) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ('㾉\dz' COLLATE RTRIM))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((('㾉\dz' COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c2, v0.c0, t0.c50 FROM t0, v0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0, t0.c50;
SELECT ALL rt0.c1, rt0.c2, v0.c0, t0.c50 FROM t0, v0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0, t0.c50 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, t0.c50 FROM t0, v0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0, t0.c50 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT rt0.c1, rt0.c2, v0.c0, t0.c50 FROM t0, v0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0, t0.c50 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT * FROM rt0, t0, v0;
SELECT * FROM rt0, t0, v0 WHERE (((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END)OR((v0.c0 IN ()))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END))) UNION ALL SELECT ALL * FROM rt0, t0, v0 WHERE ((NOT (((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END)OR((v0.c0 IN ()))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END))))) UNION ALL SELECT * FROM rt0, t0, v0 WHERE (((((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END)OR((v0.c0 IN ()))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END))) ISNULL));
SELECT * FROM rt0, t0, v0;
SELECT DISTINCT * FROM t0, rt0, v0;
SELECT DISTINCT * FROM t0, rt0, v0 WHERE (0.05861685944442774) UNION SELECT DISTINCT * FROM t0, rt0, v0 WHERE ((NOT (0.05861685944442774))) UNION SELECT DISTINCT * FROM t0, rt0, v0 WHERE (((0.05861685944442774) ISNULL));
SELECT DISTINCT * FROM t0, rt0, v0;
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 WHERE ((t0.c50 IN (t0.c50, t0.c50)) COLLATE BINARY) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM t0 WHERE ((NOT ((t0.c50 IN (t0.c50, t0.c50)) COLLATE BINARY))) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM t0 WHERE ((((t0.c50 IN (t0.c50, t0.c50)) COLLATE BINARY) ISNULL)) GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL v0.c0 FROM v0, rt0, t0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, rt0, t0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0, rt0, t0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0, rt0, t0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0, rt0, t0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, rt0, t0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0, rt0, t0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0, rt0, t0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0, rt0, t0 GROUP BY v0.c0;
SELECT t0.c50 FROM v0, t0 RIGHT OUTER JOIN rt0 ON CASE rt0.c1  WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c0)LIKE(rt0.c1)) WHEN (((rt0.c2))!=((t0.c50))) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN ((v0.c0)+(t0.c50)) THEN CAST(NULL AS BLOB) ELSE (rt0.c0 IN ()) END;
SELECT ALL t0.c50 FROM v0, t0 RIGHT OUTER JOIN rt0 ON CASE rt0.c1  WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c0)LIKE(rt0.c1)) WHEN (((rt0.c2))!=((t0.c50))) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN ((v0.c0)+(t0.c50)) THEN CAST(NULL AS BLOB) ELSE (rt0.c0 IN ()) END WHERE (x'') UNION ALL SELECT ALL t0.c50 FROM v0, t0 RIGHT OUTER JOIN rt0 ON CASE rt0.c1  WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c0)LIKE(rt0.c1)) WHEN (((rt0.c2))<>((t0.c50))) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN ((v0.c0)+(t0.c50)) THEN CAST(NULL AS BLOB) ELSE (rt0.c0 IN ()) END WHERE ((NOT (x''))) UNION ALL SELECT ALL t0.c50 FROM v0, t0 RIGHT OUTER JOIN rt0 ON CASE rt0.c1  WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c0)LIKE(rt0.c1)) WHEN (((rt0.c2))!=((t0.c50))) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN ((v0.c0)+(t0.c50)) THEN CAST(NULL AS BLOB) ELSE (rt0.c0 IN ()) END WHERE (((x'') ISNULL));
SELECT t0.c50 FROM v0, t0 RIGHT OUTER JOIN rt0 ON CASE rt0.c1  WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c0)LIKE(rt0.c1)) WHEN (((rt0.c2))!=((t0.c50))) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN ((v0.c0)+(t0.c50)) THEN CAST(NULL AS BLOB) ELSE (rt0.c0 IN ()) END;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((- (((t0.c50)-(t0.c50))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((- (((t0.c50)-(t0.c50))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((- (((t0.c50)-(t0.c50))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c50 FROM v0, t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM v0, t0 WHERE (((('-1504085197', v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS TEXT), (~ (t0.c50)), (~ (v0.c0)), CASE WHEN t0.c50 THEN v0.c0 WHEN v0.c0 THEN t0.c50 WHEN t0.c50 THEN t0.c50 END, ((v0.c0)+(t0.c50)))) AND ((v0.c0 COLLATE NOCASE, ((t0.c50)>=(v0.c0)), json_remove(t0.c50, t0.c50), ((t0.c50)<=(t0.c50)), ((t0.c50)>=(0.6546324906464419)))))) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM v0, t0 WHERE ((NOT (((('-1504085197', v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS TEXT), (~ (t0.c50)), (~ (v0.c0)), CASE WHEN t0.c50 THEN v0.c0 WHEN v0.c0 THEN t0.c50 WHEN t0.c50 THEN t0.c50 END, ((v0.c0)+(t0.c50)))) AND ((v0.c0 COLLATE NOCASE, ((t0.c50)>=(v0.c0)), json_remove(t0.c50, t0.c50), ((t0.c50)<=(t0.c50)), ((t0.c50)>=(0.6546324906464419)))))))) GROUP BY t0.c50 UNION SELECT t0.c50 FROM v0, t0 WHERE (((((('-1504085197', v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS TEXT), (~ (t0.c50)), (~ (v0.c0)), CASE WHEN t0.c50 THEN v0.c0 WHEN v0.c0 THEN t0.c50 WHEN t0.c50 THEN t0.c50 END, ((v0.c0)+(t0.c50)))) AND ((v0.c0 COLLATE NOCASE, ((t0.c50)>=(v0.c0)), json_remove(t0.c50, t0.c50), ((t0.c50)<=(t0.c50)), ((t0.c50)>=(0.6546324906464419)))))) ISNULL)) GROUP BY t0.c50;
SELECT ALL t0.c50 FROM v0, t0 GROUP BY t0.c50;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COALESCE(DISTINCT ((v0.c0)GLOB(0.5825407672962545)), COUNT(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COALESCE(DISTINCT ((v0.c0)GLOB(0.5825407672962545)), COUNT(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COALESCE(DISTINCT ((v0.c0)GLOB(0.5825407672962545)), COUNT(v0.c0))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COALESCE(DISTINCT ((v0.c0)GLOB(0.5825407672962545)), COUNT(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COALESCE(DISTINCT ((v0.c0)GLOB(0.5825407672962545)), COUNT(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COALESCE(DISTINCT ((v0.c0)GLOB(0.5825407672962545)), COUNT(v0.c0))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL TOTAL(UNLIKELY(DISTINCT (rt0.c2 IN (t0.c50)))) FROM rt0, v0, t0 ORDER BY ((((v0.c0)OR(rt0.c1)))*(((t0.c50)/(rt0.c1))));
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (IFNULL((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), '-2026045905')) UNION ALL SELECT * FROM rt0 WHERE ((NOT (IFNULL((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), '-2026045905')))) UNION ALL SELECT * FROM rt0 WHERE (((IFNULL((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), '-2026045905')) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(UPPER(0.40812683196727495) AS NUMERIC)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(UPPER(0.40812683196727495) AS NUMERIC)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(UPPER(0.40812683196727495) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c50, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0, t0 GROUP BY t0.c50, v0.c0, rt0.c0, rt0.c1;
SELECT ALL t0.c50, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0, t0 WHERE (((CAST(rt0.c2 AS INTEGER))IS NOT(((rt0.c2) NOT NULL)))) GROUP BY t0.c50, v0.c0, rt0.c0, rt0.c1 UNION SELECT ALL t0.c50, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0, t0 WHERE ((NOT (((CAST(rt0.c2 AS INTEGER))IS NOT(((rt0.c2) NOT NULL)))))) GROUP BY t0.c50, v0.c0, rt0.c0, rt0.c1 UNION SELECT t0.c50, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0, t0 WHERE (((((CAST(rt0.c2 AS INTEGER))IS NOT(((rt0.c2) NOT NULL)))) ISNULL)) GROUP BY t0.c50, v0.c0, rt0.c0, rt0.c1;
SELECT t0.c50, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0, t0 GROUP BY t0.c50, v0.c0, rt0.c0, rt0.c1;
SELECT v0.c0, t0.c50 FROM t0, v0 GROUP BY v0.c0, t0.c50;
SELECT v0.c0, t0.c50 FROM t0, v0 GROUP BY v0.c0, t0.c50 HAVING COUNT(x'') UNION ALL SELECT ALL v0.c0, t0.c50 FROM t0, v0 GROUP BY v0.c0, t0.c50 HAVING (NOT (COUNT(x''))) UNION ALL SELECT v0.c0, t0.c50 FROM t0, v0 GROUP BY v0.c0, t0.c50 HAVING ((COUNT(x'')) ISNULL);
SELECT v0.c0, t0.c50 FROM t0, v0 GROUP BY v0.c0, t0.c50;
SELECT v0.c0, t0.c50 FROM t0, v0 GROUP BY v0.c0, t0.c50 HAVING COUNT(x'') UNION ALL SELECT ALL v0.c0, t0.c50 FROM t0, v0 GROUP BY v0.c0, t0.c50 HAVING (NOT (COUNT(x''))) UNION ALL SELECT v0.c0, t0.c50 FROM t0, v0 GROUP BY v0.c0, t0.c50 HAVING ((COUNT(x'')) ISNULL);
SELECT v0.c0, t0.c50 FROM t0, v0 GROUP BY v0.c0, t0.c50;
SELECT ALL t0.c50 FROM t0;
SELECT ALL t0.c50 FROM t0 WHERE (((((('-2015159039') NOT BETWEEN (t0.c50) AND (x''))))>=(((~ (t0.c50)))))) UNION ALL SELECT ALL t0.c50 FROM t0 WHERE ((NOT (((((('-2015159039') NOT BETWEEN (t0.c50) AND (x''))))>=(((~ (t0.c50)))))))) UNION ALL SELECT ALL t0.c50 FROM t0 WHERE (((((((('-2015159039') NOT BETWEEN (t0.c50) AND (x''))))>=(((~ (t0.c50)))))) ISNULL));
SELECT ALL t0.c50 FROM t0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (CASE rt0.c1 COLLATE RTRIM  WHEN json_array(rt0.c1, rt0.c1) THEN (+ (rt0.c0)) WHEN rt0.c1 THEN rt0.c1 WHEN CAST(x'' AS REAL) THEN json_extract(rt0.c0, NULL) END) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (CASE rt0.c1 COLLATE RTRIM  WHEN json_array(rt0.c1, rt0.c1) THEN (+ (rt0.c0)) WHEN rt0.c1 THEN rt0.c1 WHEN CAST(x'' AS REAL) THEN json_extract(rt0.c0, NULL) END))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((CASE rt0.c1 COLLATE RTRIM  WHEN json_array(rt0.c1, rt0.c1) THEN (+ (rt0.c0)) WHEN rt0.c1 THEN rt0.c1 WHEN CAST(x'' AS REAL) THEN json_extract(rt0.c0, NULL) END) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM t0, v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM t0, v0, rt0 WHERE ((((- (rt0.c1))) NOT BETWEEN ((~ (t0.c50))) AND (load_extension(t0.c50, rt0.c1)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM t0, v0, rt0 WHERE ((NOT ((((- (rt0.c1))) NOT BETWEEN ((~ (t0.c50))) AND (load_extension(t0.c50, rt0.c1)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM t0, v0, rt0 WHERE ((((((- (rt0.c1))) NOT BETWEEN ((~ (t0.c50))) AND (load_extension(t0.c50, rt0.c1)))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM t0, v0, rt0 GROUP BY rt0.c1;
SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING ((((MAX(TOTAL(MIN(COUNT(*)))))||(v0.c0))) BETWEEN ('^') AND ((+ (COUNT(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING (NOT (((((MAX(TOTAL(MIN(COUNT(*)))))||(v0.c0))) BETWEEN ('^') AND ((+ (COUNT(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING ((((((MAX(TOTAL(MIN(COUNT(*)))))||(v0.c0))) BETWEEN ('^') AND ((+ (COUNT(v0.c0)))))) ISNULL);
SELECT t0.c50 FROM t0;
SELECT t0.c50 FROM t0 WHERE ('EP' COLLATE BINARY) UNION ALL SELECT t0.c50 FROM t0 WHERE ((NOT ('EP' COLLATE BINARY))) UNION ALL SELECT t0.c50 FROM t0 WHERE ((('EP' COLLATE BINARY) ISNULL));
SELECT t0.c50 FROM t0;
SELECT DISTINCT rt0.c2, v0.c0 FROM t0, v0, rt0;
SELECT DISTINCT rt0.c2, v0.c0 FROM t0, v0, rt0 WHERE (((t0.c50) IS TRUE) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2, v0.c0 FROM t0, v0, rt0 WHERE ((NOT (((t0.c50) IS TRUE) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2, v0.c0 FROM t0, v0, rt0 WHERE (((((t0.c50) IS TRUE) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2, v0.c0 FROM t0, v0, rt0;
SELECT rt0.c0, rt0.c2, t0.c50, v0.c0, rt0.c1 FROM v0, rt0, t0 GROUP BY rt0.c0, rt0.c2, t0.c50, v0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, t0.c50, v0.c0, rt0.c1 FROM v0, rt0, t0 WHERE (-1559237842) GROUP BY rt0.c0, rt0.c2, t0.c50, v0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, t0.c50, v0.c0, rt0.c1 FROM v0, rt0, t0 WHERE ((NOT (-1559237842))) GROUP BY rt0.c0, rt0.c2, t0.c50, v0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c2, t0.c50, v0.c0, rt0.c1 FROM v0, rt0, t0 WHERE (((-1559237842) ISNULL)) GROUP BY rt0.c0, rt0.c2, t0.c50, v0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, t0.c50, v0.c0, rt0.c1 FROM v0, rt0, t0 GROUP BY rt0.c0, rt0.c2, t0.c50, v0.c0, rt0.c1;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, v0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, v0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING MIN(SUM(MIN(t0.c50))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 NOT INDEXED, v0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (MIN(SUM(MIN(t0.c50))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, v0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((MIN(SUM(MIN(t0.c50)))) ISNULL);
SELECT t0.c50 FROM t0;
SELECT ALL t0.c50 FROM t0 WHERE (((HEX(t0.c50))IS(((t0.c50)/(NULL))))) UNION ALL SELECT ALL t0.c50 FROM t0 WHERE ((NOT (((HEX(t0.c50))IS(((t0.c50)/(NULL))))))) UNION ALL SELECT t0.c50 FROM t0 WHERE (((((HEX(t0.c50))IS(((t0.c50)/(NULL))))) ISNULL));
SELECT t0.c50 FROM t0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0) IS TRUE))>((~ (v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) IS TRUE))>((~ (v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0) IS TRUE))>((~ (v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL t0.c50, v0.c0 FROM v0, t0 GROUP BY t0.c50, v0.c0;
SELECT ALL t0.c50, v0.c0 FROM v0, t0 WHERE (load_extension(((v0.c0)IS NOT(v0.c0)), t0.c50 COLLATE RTRIM)) GROUP BY t0.c50, v0.c0 UNION SELECT t0.c50, v0.c0 FROM v0, t0 WHERE ((NOT (load_extension(((v0.c0)IS NOT(v0.c0)), t0.c50 COLLATE RTRIM)))) GROUP BY t0.c50, v0.c0 UNION SELECT ALL t0.c50, v0.c0 FROM v0, t0 WHERE (((load_extension(((v0.c0)IS NOT(v0.c0)), t0.c50 COLLATE RTRIM)) ISNULL)) GROUP BY t0.c50, v0.c0;
SELECT ALL t0.c50, v0.c0 FROM v0, t0 GROUP BY t0.c50, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(NULL) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(NULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(NULL)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(NULL) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(NULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(NULL)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((((t0.c50)|(t0.c50))) NOT BETWEEN (CAST(t0.c50 AS BLOB)) AND (CAST(t0.c50 AS BLOB)))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c50)|(t0.c50))) NOT BETWEEN (CAST(t0.c50 AS BLOB)) AND (CAST(t0.c50 AS BLOB)))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((t0.c50)|(t0.c50))) NOT BETWEEN (CAST(t0.c50 AS BLOB)) AND (CAST(t0.c50 AS BLOB)))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (LIKELIHOOD(((rt0.c1)IS(rt0.c1)), 0.3427787636821017)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (LIKELIHOOD(((rt0.c1)IS(rt0.c1)), 0.3427787636821017)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((LIKELIHOOD(((rt0.c1)IS(rt0.c1)), 0.3427787636821017)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((rt0.c2 IN (rt0.c2)) COLLATE NOCASE COLLATE RTRIM) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((rt0.c2 IN (rt0.c2)) COLLATE NOCASE COLLATE RTRIM))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((((rt0.c2 IN (rt0.c2)) COLLATE NOCASE COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c2) NOTNULL))<(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c2) NOTNULL))<(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((((- (x'')))OR(LIKELIHOOD(COUNT(*), 0.6772999084669781))))AND('30')) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c2) NOTNULL))<(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((((((- (x'')))OR(LIKELIHOOD(COUNT(*), 0.6772999084669781))))AND('30')))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c2) NOTNULL))<(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((((((- (x'')))OR(LIKELIHOOD(COUNT(*), 0.6772999084669781))))AND('30'))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c2) NOTNULL))<(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c2) NOTNULL))<(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((((- (x'')))OR(LIKELIHOOD(COUNT(*), 0.6772999084669781))))AND('30')) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c2) NOTNULL))<(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((((((- (x'')))OR(LIKELIHOOD(COUNT(*), 0.6772999084669781))))AND('30')))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c2) NOTNULL))<(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((((((- (x'')))OR(LIKELIHOOD(COUNT(*), 0.6772999084669781))))AND('30'))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c2) NOTNULL))<(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM))) UNION ALL SELECT * FROM rt0 WHERE (((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON LIKELIHOOD(((((v0.c0)OR(rt0.c0)))OR(t0.c50)), 0.8556957180553368) FULL OUTER JOIN t0 ON x'';
SELECT rt0.c1, v0.c0 FROM v0, t0, rt0 GROUP BY rt0.c1, v0.c0;
SELECT rt0.c1, v0.c0 FROM v0, t0, rt0 WHERE (((rt0.c2) BETWEEN (((rt0.c0) IS FALSE)) AND ((~ (rt0.c0))))) GROUP BY rt0.c1, v0.c0 UNION SELECT ALL rt0.c1, v0.c0 FROM v0, t0, rt0 WHERE ((NOT (((rt0.c2) BETWEEN (((rt0.c0) IS FALSE)) AND ((~ (rt0.c0))))))) GROUP BY rt0.c1, v0.c0 UNION SELECT rt0.c1, v0.c0 FROM v0, t0, rt0 WHERE (((((rt0.c2) BETWEEN (((rt0.c0) IS FALSE)) AND ((~ (rt0.c0))))) ISNULL)) GROUP BY rt0.c1, v0.c0;
SELECT rt0.c1, v0.c0 FROM v0, t0, rt0 GROUP BY rt0.c1, v0.c0;
SELECT ALL rt0.c1 FROM v0 RIGHT OUTER JOIN t0 ON rt0.c1 FULL OUTER JOIN rt0 ON TRIM(DISTINCT ((rt0.c2)IS NOT(NULL))) GROUP BY rt0.c1;
SELECT t0.c50 FROM rt0, t0;
SELECT ALL t0.c50 FROM rt0, t0 WHERE (t0.c50 COLLATE RTRIM) UNION ALL SELECT t0.c50 FROM rt0, t0 WHERE ((NOT (t0.c50 COLLATE RTRIM))) UNION ALL SELECT ALL t0.c50 FROM rt0, t0 WHERE (((t0.c50 COLLATE RTRIM) ISNULL));
SELECT t0.c50 FROM rt0, t0;
SELECT DISTINCT t0.c50 FROM t0;
SELECT DISTINCT t0.c50 FROM t0 WHERE ((('') BETWEEN (t0.c50 COLLATE NOCASE) AND ((t0.c50 IN ())))) UNION SELECT DISTINCT t0.c50 FROM t0 WHERE ((NOT ((('') BETWEEN (t0.c50 COLLATE NOCASE) AND ((t0.c50 IN ())))))) UNION SELECT DISTINCT t0.c50 FROM t0 WHERE ((((('') BETWEEN (t0.c50 COLLATE NOCASE) AND ((t0.c50 IN ())))) ISNULL));
SELECT DISTINCT t0.c50 FROM t0;
SELECT ALL v0.c0, t0.c50, rt0.c2, rt0.c0, rt0.c1 FROM v0, t0, rt0 GROUP BY v0.c0, t0.c50, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL v0.c0, t0.c50, rt0.c2, rt0.c0, rt0.c1 FROM v0, t0, rt0 WHERE ((((rt0.c1, (rt0.c2 IN ()), t0.c50 COLLATE BINARY))>((x'', rt0.c0 COLLATE NOCASE, ((v0.c0)%(rt0.c1)))))) GROUP BY v0.c0, t0.c50, rt0.c2, rt0.c0, rt0.c1 UNION SELECT v0.c0, t0.c50, rt0.c2, rt0.c0, rt0.c1 FROM v0, t0, rt0 WHERE ((NOT ((((rt0.c1, (rt0.c2 IN ()), t0.c50 COLLATE BINARY))>((x'', rt0.c0 COLLATE NOCASE, ((v0.c0)%(rt0.c1)))))))) GROUP BY v0.c0, t0.c50, rt0.c2, rt0.c0, rt0.c1 UNION SELECT v0.c0, t0.c50, rt0.c2, rt0.c0, rt0.c1 FROM v0 NOT INDEXED, t0, rt0 WHERE ((((((rt0.c1, (rt0.c2 IN ()), t0.c50 COLLATE BINARY))>((x'', rt0.c0 COLLATE NOCASE, ((v0.c0)%(rt0.c1)))))) ISNULL)) GROUP BY v0.c0, t0.c50, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL v0.c0, t0.c50, rt0.c2, rt0.c0, rt0.c1 FROM v0, t0, rt0 GROUP BY v0.c0, t0.c50, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0, t0.c50 FROM rt0, v0, t0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0, t0.c50;
SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0, t0.c50 FROM rt0, v0, t0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0, t0.c50 HAVING CASE WHEN MAX(t0.c50) THEN ((x'')&(COUNT(*))) WHEN CAST(v0.c0 AS BLOB) THEN GROUP_CONCAT(COUNT(*)) WHEN GROUP_CONCAT(t0.c50) THEN CASE WHEN rt0.c1 THEN rt0.c2 END ELSE ((MIN(MAX(t0.c50))) NOTNULL) END UNION ALL SELECT ALL rt0.c2, rt0.c1, v0.c0, rt0.c0, t0.c50 FROM rt0, v0, t0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0, t0.c50 HAVING (NOT (CASE WHEN MAX(t0.c50) THEN ((x'')&(COUNT(*))) WHEN CAST(v0.c0 AS BLOB) THEN GROUP_CONCAT(COUNT(*)) WHEN GROUP_CONCAT(t0.c50) THEN CASE WHEN rt0.c1 THEN rt0.c2 END ELSE ((MIN(MAX(t0.c50))) NOTNULL) END)) UNION ALL SELECT rt0.c2, rt0.c1, v0.c0, rt0.c0, t0.c50 FROM rt0, v0, t0 GROUP BY rt0.c2, rt0.c1, v0.c0, rt0.c0, t0.c50 HAVING ((CASE WHEN MAX(t0.c50) THEN ((x'')&(COUNT(*))) WHEN CAST(v0.c0 AS BLOB) THEN GROUP_CONCAT(COUNT(*)) WHEN GROUP_CONCAT(t0.c50) THEN CASE WHEN rt0.c1 THEN rt0.c2 END ELSE ((MIN(MAX(t0.c50))) NOTNULL) END) ISNULL);
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON 0.18783995655103092;
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON 0.18783995655103092 WHERE (((t0.c50 COLLATE NOCASE) NOT BETWEEN (((t0.c50)LIKE(v0.c0))) AND (((v0.c0)/(v0.c0))))) UNION ALL SELECT * FROM t0 FULL OUTER JOIN v0 ON 0.18783995655103092 WHERE ((NOT (((t0.c50 COLLATE NOCASE) NOT BETWEEN (((t0.c50)LIKE(v0.c0))) AND (((v0.c0)/(v0.c0))))))) UNION ALL SELECT * FROM t0 FULL OUTER JOIN v0 ON 0.18783995655103092 WHERE (((((t0.c50 COLLATE NOCASE) NOT BETWEEN (((t0.c50)LIKE(v0.c0))) AND (((v0.c0)/(v0.c0))))) ISNULL));
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON 0.18783995655103092;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((NULL)/(CAST(rt0.c1 AS BLOB)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((NULL)/(CAST(rt0.c1 AS BLOB)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((NULL)/(CAST(rt0.c1 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0, t0.c50 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c50;
SELECT rt0.c2, rt0.c1, rt0.c0, t0.c50 FROM t0, rt0 WHERE (((rt0.c2)<(CAST(t0.c50 AS NUMERIC)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c50 UNION SELECT rt0.c2, rt0.c1, rt0.c0, t0.c50 FROM t0, rt0 NOT INDEXED WHERE ((NOT (((rt0.c2)<(CAST(t0.c50 AS NUMERIC)))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c50 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, t0.c50 FROM t0, rt0 WHERE (((((rt0.c2)<(CAST(t0.c50 AS NUMERIC)))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c50;
SELECT rt0.c2, rt0.c1, rt0.c0, t0.c50 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c50;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING CAST(((((v0.c0)OR(MAX(v0.c0))))OR(v0.c0)) AS TEXT) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (CAST(((((v0.c0)OR(MAX(v0.c0))))OR(v0.c0)) AS TEXT))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((CAST(((((v0.c0)OR(MAX(v0.c0))))OR(v0.c0)) AS TEXT)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING CAST(((((v0.c0)OR(MAX(v0.c0))))OR(v0.c0)) AS TEXT) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (CAST(((((v0.c0)OR(MAX(v0.c0))))OR(v0.c0)) AS TEXT))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((CAST(((((v0.c0)OR(MAX(v0.c0))))OR(v0.c0)) AS TEXT)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c1 FROM t0, rt0;
SELECT ALL rt0.c1 FROM t0, rt0 WHERE ((((((((rt0.c0)AND(rt0.c0)))AND(NULL)), COALESCE(rt0.c2, t0.c50), rt0.c0))<((x'faa7f1e8', CASE WHEN '135672527' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, (((rt0.c2, '1839097821', t0.c50)) NOT BETWEEN ((t0.c50, rt0.c2, rt0.c2)) AND ((rt0.c2, t0.c50, 0.05861685944442774))))))) UNION ALL SELECT ALL rt0.c1 FROM t0, rt0 WHERE ((NOT ((((((((rt0.c0)AND(rt0.c0)))AND(NULL)), COALESCE(rt0.c2, t0.c50), rt0.c0))<((x'faa7f1e8', CASE WHEN '135672527' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, (((rt0.c2, '1839097821', t0.c50)) NOT BETWEEN ((t0.c50, rt0.c2, rt0.c2)) AND ((rt0.c2, t0.c50, 0.05861685944442774))))))))) UNION ALL SELECT rt0.c1 FROM t0, rt0 WHERE ((((((((((rt0.c0)AND(rt0.c0)))AND(NULL)), COALESCE(rt0.c2, t0.c50), rt0.c0))<((x'faa7f1e8', CASE WHEN '135672527' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, (((rt0.c2, '1839097821', t0.c50)) NOT BETWEEN ((t0.c50, rt0.c2, rt0.c2)) AND ((rt0.c2, t0.c50, 0.05861685944442774))))))) ISNULL));
SELECT rt0.c1 FROM t0, rt0;
SELECT DISTINCT v0.c0 FROM v0, t0;
SELECT DISTINCT v0.c0 FROM v0, t0 WHERE ((((((v0.c0)AND(v0.c0)))OR(v0.c0)) IN ())) UNION SELECT DISTINCT v0.c0 FROM v0, t0 WHERE ((NOT ((((((v0.c0)AND(v0.c0)))OR(v0.c0)) IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0, t0 WHERE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)) IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, t0;
SELECT t0.c50, v0.c0 FROM t0, v0 GROUP BY t0.c50, v0.c0;
SELECT ALL t0.c50, v0.c0 FROM t0, v0 WHERE ((((t0.c50, t0.c50, v0.c0))==((x'', v0.c0, v0.c0))) COLLATE NOCASE) GROUP BY t0.c50, v0.c0 UNION SELECT t0.c50, v0.c0 FROM t0, v0 WHERE ((NOT ((((t0.c50, t0.c50, v0.c0))=((x'', v0.c0, v0.c0))) COLLATE NOCASE))) GROUP BY t0.c50, v0.c0 UNION SELECT t0.c50, v0.c0 FROM t0, v0 NOT INDEXED WHERE ((((((t0.c50, t0.c50, v0.c0))=((x'', v0.c0, v0.c0))) COLLATE NOCASE) ISNULL)) GROUP BY t0.c50, v0.c0;
SELECT t0.c50, v0.c0 FROM t0, v0 GROUP BY t0.c50, v0.c0;
SELECT rt0.c2, t0.c50, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c50, rt0.c0;
SELECT ALL rt0.c2, t0.c50, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c50, rt0.c0 HAVING MIN(AVG(COUNT(NULL))) UNION ALL SELECT rt0.c2, t0.c50, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c50, rt0.c0 HAVING (NOT (MIN(AVG(COUNT(NULL))))) UNION ALL SELECT rt0.c2, t0.c50, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c50, rt0.c0 HAVING ((MIN(AVG(COUNT(NULL)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CASE WHEN 0.368258335163415 THEN rt0.c1 COLLATE BINARY WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN ((rt0.c0)=(rt0.c0)) WHEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)) THEN rt0.c0 COLLATE NOCASE ELSE ((rt0.c2) ISNULL) END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE WHEN 0.368258335163415 THEN rt0.c1 COLLATE BINARY WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN ((rt0.c0)=(rt0.c0)) WHEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)) THEN rt0.c0 COLLATE NOCASE ELSE ((rt0.c2) ISNULL) END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE WHEN 0.368258335163415 THEN rt0.c1 COLLATE BINARY WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN ((rt0.c0)==(rt0.c0)) WHEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)) THEN rt0.c0 COLLATE NOCASE ELSE ((rt0.c2) ISNULL) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, t0, v0;
SELECT DISTINCT * FROM rt0, t0, v0 WHERE (NULLIF(rt0.c2 COLLATE NOCASE, (+ (v0.c0)))) UNION SELECT DISTINCT * FROM rt0, t0, v0 WHERE ((NOT (NULLIF(rt0.c2 COLLATE NOCASE, (+ (v0.c0)))))) UNION SELECT DISTINCT * FROM rt0, t0, v0 WHERE (((NULLIF(rt0.c2 COLLATE NOCASE, (+ (v0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0, t0, v0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0, t0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0, v0, t0 WHERE (CASE WHEN ((rt0.c1)IS NOT(rt0.c2)) THEN NULLIF(v0.c0, rt0.c1) ELSE ((((((((v0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR('')) END) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0, v0, t0 WHERE ((NOT (CASE WHEN ((rt0.c1)IS NOT(rt0.c2)) THEN NULLIF(v0.c0, rt0.c1) ELSE ((((((((v0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR('')) END))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0, t0 WHERE (((CASE WHEN ((rt0.c1)IS NOT(rt0.c2)) THEN NULLIF(v0.c0, rt0.c1) ELSE ((((((((v0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR('')) END) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, v0, t0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((((rt0.c0)<<(COUNT(COUNT(*))))) NOT NULL) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (((((rt0.c0)<<(COUNT(COUNT(*))))) NOT NULL))) UNION ALL SELECT rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((((((rt0.c0)<<(COUNT(COUNT(*))))) NOT NULL)) ISNULL);
SELECT t0.c50 FROM t0;
SELECT t0.c50 FROM t0 WHERE (UPPER(DISTINCT t0.c50)) UNION ALL SELECT t0.c50 FROM t0 WHERE ((NOT (UPPER(DISTINCT t0.c50)))) UNION ALL SELECT t0.c50 FROM t0 WHERE (((UPPER(DISTINCT t0.c50)) ISNULL));
SELECT t0.c50 FROM t0;
SELECT DISTINCT * FROM v0, rt0, t0;
SELECT DISTINCT * FROM v0, rt0, t0 WHERE (CASE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))  WHEN ((rt0.c2)>=(rt0.c0)) THEN ((rt0.c1)=(v0.c0)) WHEN CASE WHEN 0X50b1928d THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 END THEN (+ (rt0.c2)) WHEN ('0.20995987775232472' IN ()) THEN ((t0.c50)<(t0.c50)) ELSE (('0.05788170786676361') IS FALSE) END) UNION SELECT DISTINCT * FROM v0, rt0, t0 WHERE ((NOT (CASE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))  WHEN ((rt0.c2)>=(rt0.c0)) THEN ((rt0.c1)=(v0.c0)) WHEN CASE WHEN 0X50b1928d THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 END THEN (+ (rt0.c2)) WHEN ('0.20995987775232472' IN ()) THEN ((t0.c50)<(t0.c50)) ELSE (('0.05788170786676361') IS FALSE) END))) UNION SELECT DISTINCT * FROM v0, rt0, t0 WHERE (((CASE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))  WHEN ((rt0.c2)>=(rt0.c0)) THEN ((rt0.c1)==(v0.c0)) WHEN CASE WHEN 0x50b1928d THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 END THEN (+ (rt0.c2)) WHEN ('0.20995987775232472' IN ()) THEN ((t0.c50)<(t0.c50)) ELSE (('0.05788170786676361') IS FALSE) END) ISNULL));
SELECT DISTINCT * FROM v0, rt0, t0;
SELECT t0.c50, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c50, rt0.c2, rt0.c0;
SELECT ALL t0.c50, rt0.c2, rt0.c0 FROM t0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))>(((t0.c50) BETWEEN (rt0.c1) AND (rt0.c1))))) GROUP BY t0.c50, rt0.c2, rt0.c0 UNION SELECT t0.c50, rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))>(((t0.c50) BETWEEN (rt0.c1) AND (rt0.c1))))))) GROUP BY t0.c50, rt0.c2, rt0.c0 UNION SELECT ALL t0.c50, rt0.c2, rt0.c0 FROM t0, rt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))>(((t0.c50) BETWEEN (rt0.c1) AND (rt0.c1))))) ISNULL)) GROUP BY t0.c50, rt0.c2, rt0.c0;
SELECT t0.c50, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c50, rt0.c2, rt0.c0;
SELECT t0.c50 FROM t0, v0 GROUP BY t0.c50;
SELECT t0.c50 FROM t0, v0 GROUP BY t0.c50 HAVING MAX(MIN(COUNT(*))) UNION ALL SELECT ALL t0.c50 FROM t0, v0 GROUP BY t0.c50 HAVING (NOT (MAX(MIN(COUNT(*))))) UNION ALL SELECT ALL t0.c50 FROM t0, v0 GROUP BY t0.c50 HAVING ((MAX(MIN(COUNT(*)))) ISNULL);
SELECT ALL SUM((((('-1464070965')<=(v0.c0))) BETWEEN (TIME(t0.c50, v0.c0, t0.c50)) AND (t0.c50))) FROM t0, v0 ORDER BY (((((t0.c50)AND(t0.c50)))OR(v0.c0)) IN (TRIM(t0.c50, t0.c50))) ASC  NULLS FIRST;
SELECT rt0.c1 FROM v0, rt0, t0;
SELECT ALL rt0.c1 FROM v0, rt0, t0 WHERE ((((((((((rt0.c0 IN ()))OR((((t0.c50)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND(0.08113456110153539)))OR(((rt0.c1)OR(rt0.c1)))))OR(((rt0.c2)||(t0.c50))))) UNION ALL SELECT rt0.c1 FROM v0, rt0, t0 WHERE ((NOT ((((((((((rt0.c0 IN ()))OR((((t0.c50)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND(0.08113456110153539)))OR(((rt0.c1)OR(rt0.c1)))))OR(((rt0.c2)||(t0.c50))))))) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0, t0 WHERE ((((((((((((rt0.c0 IN ()))OR((((t0.c50)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND(0.08113456110153539)))OR(((rt0.c1)OR(rt0.c1)))))OR(((rt0.c2)||(t0.c50))))) ISNULL));
SELECT rt0.c1 FROM v0, rt0, t0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (COALESCE('-1712628739', ((rt0.c0)||('-1398166086')))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (COALESCE('-1712628739', ((rt0.c0)||('-1398166086')))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((COALESCE('-1712628739', ((rt0.c0)||('-1398166086')))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0 WHERE (((v0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c0)IS NOT(rt0.c2))) AND (rt0.c2))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM v0, rt0 WHERE ((NOT (((v0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c0)IS NOT(rt0.c2))) AND (rt0.c2))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM v0, rt0 WHERE (((((v0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c0)IS NOT(rt0.c2))) AND (rt0.c2))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING AVG(NULL) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (AVG(NULL))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((AVG(NULL)) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING AVG(NULL) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (AVG(NULL))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((AVG(NULL)) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT * FROM v0 INNER JOIN rt0 ON ((LIKELY(t0.c50)) IS TRUE) INNER JOIN t0 ON ((((rt0.c0))>((rt0.c1))) IN ());
SELECT * FROM v0 INNER JOIN rt0 ON ((LIKELY(t0.c50)) IS TRUE) INNER JOIN t0 ON ((((rt0.c0))>((rt0.c1))) IN ()) WHERE (((TYPEOF(rt0.c2)) BETWEEN ((v0.c0 IN (t0.c50))) AND (((rt0.c2)IS NOT(rt0.c2))))) ORDER BY ((((CAST(NULL AS NUMERIC))AND(NULL COLLATE BINARY)))OR(CASE WHEN rt0.c2 THEN rt0.c0 END)) ASC  NULLS LAST;
SELECT * FROM v0 INNER JOIN rt0 ON ((LIKELY(t0.c50)) IS TRUE) INNER JOIN t0 ON ((((rt0.c0))>((rt0.c1))) IN ()) WHERE ((NOT (((TYPEOF(rt0.c2)) BETWEEN ((v0.c0 IN (t0.c50))) AND (((rt0.c2)IS NOT(rt0.c2))))))) ORDER BY ((((CAST(NULL AS NUMERIC))AND(NULL COLLATE BINARY)))OR(CASE WHEN rt0.c2 THEN rt0.c0 END)) ASC  NULLS LAST;
SELECT ALL * FROM v0 INNER JOIN rt0 ON ((LIKELY(t0.c50)) IS TRUE) INNER JOIN t0 ON ((((rt0.c0))>((rt0.c1))) IN ()) WHERE (((((TYPEOF(rt0.c2)) BETWEEN ((v0.c0 IN (t0.c50))) AND (((rt0.c2)IS NOT(rt0.c2))))) ISNULL)) ORDER BY ((((CAST(NULL AS NUMERIC))AND(NULL COLLATE BINARY)))OR(CASE WHEN rt0.c2 THEN rt0.c0 END)) ASC  NULLS LAST;
SELECT * FROM v0 INNER JOIN rt0 ON ((LIKELY(t0.c50)) IS TRUE) INNER JOIN t0 ON ((((rt0.c0))>((rt0.c1))) IN ());
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (((CASE WHEN v0.c0 THEN t0.c50 END)>((+ (t0.c50))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN t0.c50 END)>((+ (t0.c50))))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((((CASE WHEN v0.c0 THEN t0.c50 END)>((+ (t0.c50))))) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT rt0.c2, t0.c50, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON CAST(((((t0.c50)AND(rt0.c0)))AND(t0.c50)) AS INTEGER) GROUP BY rt0.c2, t0.c50, rt0.c1;
SELECT ALL rt0.c2, t0.c50, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON CAST(((((t0.c50)AND(rt0.c0)))AND(t0.c50)) AS INTEGER) WHERE (CAST(((((t0.c50)AND(x'')))AND(rt0.c0)) AS NUMERIC)) GROUP BY rt0.c2, t0.c50, rt0.c1 UNION SELECT ALL rt0.c2, t0.c50, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON CAST(((((t0.c50)AND(rt0.c0)))AND(t0.c50)) AS INTEGER) WHERE ((NOT (CAST(((((t0.c50)AND(x'')))AND(rt0.c0)) AS NUMERIC)))) GROUP BY rt0.c2, t0.c50, rt0.c1 UNION SELECT rt0.c2, t0.c50, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON CAST(((((t0.c50)AND(rt0.c0)))AND(t0.c50)) AS INTEGER) WHERE (((CAST(((((t0.c50)AND(x'')))AND(rt0.c0)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c2, t0.c50, rt0.c1;
SELECT rt0.c2, t0.c50, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON CAST(((((t0.c50)AND(rt0.c0)))AND(t0.c50)) AS INTEGER) GROUP BY rt0.c2, t0.c50, rt0.c1;
SELECT ALL rt0.c0, rt0.c2 FROM t0 INNER JOIN v0 ON TYPEOF(DISTINCT (~ (rt0.c1))) INNER JOIN rt0 ON (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c50))))AND(((t0.c50) NOTNULL))))AND(((t0.c50) NOTNULL))) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM t0 INNER JOIN v0 ON TYPEOF(DISTINCT (~ (rt0.c1))) INNER JOIN rt0 ON (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c50))))AND(((t0.c50) NOTNULL))))AND(((t0.c50) NOTNULL))) GROUP BY rt0.c0, rt0.c2 HAVING (DATETIME(rt0.c1, rt0.c0, rt0.c0) IN ()) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM t0 INNER JOIN v0 ON TYPEOF(DISTINCT (~ (rt0.c1))) INNER JOIN rt0 ON (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c50))))AND(((t0.c50) NOTNULL))))AND(((t0.c50) NOTNULL))) GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((DATETIME(rt0.c1, rt0.c0, rt0.c0) IN ()))) UNION ALL SELECT rt0.c0, rt0.c2 FROM t0 NOT INDEXED INNER JOIN v0 ON TYPEOF(DISTINCT (~ (rt0.c1))) INNER JOIN rt0 ON (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c50))))AND(((t0.c50) NOTNULL))))AND(((t0.c50) NOTNULL))) GROUP BY rt0.c0, rt0.c2 HAVING (((DATETIME(rt0.c1, rt0.c0, rt0.c0) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM t0 INNER JOIN v0 ON TYPEOF(DISTINCT (~ (rt0.c1))) INNER JOIN rt0 ON (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c50))))AND(((t0.c50) NOTNULL))))AND(((t0.c50) NOTNULL))) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM t0 INNER JOIN v0 ON TYPEOF(DISTINCT (~ (rt0.c1))) INNER JOIN rt0 ON (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c50))))AND(((t0.c50) NOTNULL))))AND(((t0.c50) NOTNULL))) GROUP BY rt0.c0, rt0.c2 HAVING (DATETIME(rt0.c1, rt0.c0, rt0.c0) IN ()) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM t0 INNER JOIN v0 ON TYPEOF(DISTINCT (~ (rt0.c1))) INNER JOIN rt0 ON (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c50))))AND(((t0.c50) NOTNULL))))AND(((t0.c50) NOTNULL))) GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((DATETIME(rt0.c1, rt0.c0, rt0.c0) IN ()))) UNION ALL SELECT rt0.c0, rt0.c2 FROM t0 NOT INDEXED INNER JOIN v0 ON TYPEOF(DISTINCT (~ (rt0.c1))) INNER JOIN rt0 ON (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c50))))AND(((t0.c50) NOTNULL))))AND(((t0.c50) NOTNULL))) GROUP BY rt0.c0, rt0.c2 HAVING (((DATETIME(rt0.c1, rt0.c0, rt0.c0) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM t0 INNER JOIN v0 ON TYPEOF(DISTINCT (~ (rt0.c1))) INNER JOIN rt0 ON (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c50))))AND(((t0.c50) NOTNULL))))AND(((t0.c50) NOTNULL))) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2, t0.c50 FROM rt0, t0, v0;
SELECT rt0.c1, rt0.c0, rt0.c2, t0.c50 FROM rt0, t0 NOT INDEXED, v0 WHERE (CASE (rt0.c1 IN ())  WHEN CASE WHEN -1.7976931348623157E308 THEN t0.c50 WHEN rt0.c0 THEN '-446492157' WHEN rt0.c1 THEN rt0.c2 END THEN ABS(DISTINCT rt0.c2) ELSE rt0.c2 COLLATE RTRIM END) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, t0.c50 FROM rt0 NOT INDEXED, t0, v0 WHERE ((NOT (CASE (rt0.c1 IN ())  WHEN CASE WHEN -1.7976931348623157E308 THEN t0.c50 WHEN rt0.c0 THEN '-446492157' WHEN rt0.c1 THEN rt0.c2 END THEN ABS(DISTINCT rt0.c2) ELSE rt0.c2 COLLATE RTRIM END))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c50 FROM rt0, t0, v0 WHERE (((CASE (rt0.c1 IN ())  WHEN CASE WHEN -1.7976931348623157E308 THEN t0.c50 WHEN rt0.c0 THEN '-446492157' WHEN rt0.c1 THEN rt0.c2 END THEN ABS(DISTINCT rt0.c2) ELSE rt0.c2 COLLATE RTRIM END) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2, t0.c50 FROM rt0, t0, v0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((rt0.c1) NOTNULL)) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((rt0.c1) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((rt0.c1) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT t0.c50, rt0.c2, v0.c0, rt0.c0 FROM rt0, t0, v0 GROUP BY t0.c50, rt0.c2, v0.c0, rt0.c0;
SELECT ALL t0.c50, rt0.c2, v0.c0, rt0.c0 FROM rt0, t0, v0 WHERE (((((rt0.c1)<>(0.4135142538794154)))IS(((v0.c0)||(rt0.c2))))) GROUP BY t0.c50, rt0.c2, v0.c0, rt0.c0 UNION SELECT t0.c50, rt0.c2, v0.c0, rt0.c0 FROM rt0, t0, v0 WHERE ((NOT (((((rt0.c1)<>(0.4135142538794154)))IS(((v0.c0)||(rt0.c2))))))) GROUP BY t0.c50, rt0.c2, v0.c0, rt0.c0 UNION SELECT ALL t0.c50, rt0.c2, v0.c0, rt0.c0 FROM rt0, t0, v0 WHERE (((((((rt0.c1)<>(0.4135142538794154)))IS(((v0.c0)||(rt0.c2))))) ISNULL)) GROUP BY t0.c50, rt0.c2, v0.c0, rt0.c0;
SELECT t0.c50, rt0.c2, v0.c0, rt0.c0 FROM rt0, t0, v0 GROUP BY t0.c50, rt0.c2, v0.c0, rt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL((- (-2.78578442E8))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL((- (-2.78578442E8))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL((- (-2.78578442E8)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL((- (-2.78578442E8))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL((- (-2.78578442E8))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL((- (-2.78578442E8)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE (((x'89f5fd58') NOTNULL)) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (((x'89f5fd58') NOTNULL)))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE (((((x'89f5fd58') NOTNULL)) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((rt0.c1) IS TRUE))>>(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1) IS TRUE))>>(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((((rt0.c1) IS TRUE))>>(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 WHERE (((((rt0.c1 IN ())))==((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))AND(0xffffffffcf482bd8)))OR(rt0.c2)))))) GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (((((rt0.c1 IN ())))==((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))AND(0Xffffffffcf482bd8)))OR(rt0.c2)))))))) GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 WHERE (((((((rt0.c1 IN ())))==((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))AND(0Xffffffffcf482bd8)))OR(rt0.c2)))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING HEX(SUM(COUNT(rt0.c2))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (HEX(SUM(COUNT(rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((HEX(SUM(COUNT(rt0.c2)))) ISNULL);
SELECT ALL v0.c0, t0.c50, rt0.c2, rt0.c1 FROM t0, v0, rt0;
SELECT ALL v0.c0, t0.c50, rt0.c2, rt0.c1 FROM t0, v0, rt0 WHERE (rt0.c1) UNION ALL SELECT ALL v0.c0, t0.c50, rt0.c2, rt0.c1 FROM t0, v0, rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL v0.c0, t0.c50, rt0.c2, rt0.c1 FROM t0, v0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL v0.c0, t0.c50, rt0.c2, rt0.c1 FROM t0, v0, rt0;
SELECT DISTINCT t0.c50 FROM t0, rt0;
SELECT DISTINCT t0.c50 FROM t0, rt0 WHERE ((rt0.c0 COLLATE BINARY IN (NULL))) UNION SELECT DISTINCT t0.c50 FROM t0, rt0 WHERE ((NOT ((rt0.c0 COLLATE BINARY IN (NULL))))) UNION SELECT DISTINCT t0.c50 FROM t0, rt0 WHERE ((((rt0.c0 COLLATE BINARY IN (NULL))) ISNULL));
SELECT DISTINCT t0.c50 FROM t0, rt0;
SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t0 WHERE ((((rt0.c1)) BETWEEN ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN t0.c50 WHEN t0.c50 THEN rt0.c0 ELSE rt0.c1 END)) AND ((((rt0.c2) IS TRUE))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, t0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN t0.c50 WHEN t0.c50 THEN rt0.c0 ELSE rt0.c1 END)) AND ((((rt0.c2) IS TRUE))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, t0 WHERE ((((((rt0.c1)) BETWEEN ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN t0.c50 WHEN t0.c50 THEN rt0.c0 ELSE rt0.c1 END)) AND ((((rt0.c2) IS TRUE))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT rt0.c0, rt0.c1, t0.c50, v0.c0 FROM rt0, t0, v0 GROUP BY rt0.c0, rt0.c1, t0.c50, v0.c0;
SELECT ALL rt0.c0, rt0.c1, t0.c50, v0.c0 FROM rt0, t0, v0 GROUP BY rt0.c0, rt0.c1, t0.c50, v0.c0 HAVING TOTAL(MIN(rt0.c2) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c0, rt0.c1, t0.c50, v0.c0 FROM rt0, t0, v0 GROUP BY rt0.c0, rt0.c1, t0.c50, v0.c0 HAVING (NOT (TOTAL(MIN(rt0.c2) COLLATE NOCASE))) UNION ALL SELECT rt0.c0, rt0.c1, t0.c50, v0.c0 FROM rt0, t0, v0 GROUP BY rt0.c0, rt0.c1, t0.c50, v0.c0 HAVING ((TOTAL(MIN(rt0.c2) COLLATE NOCASE)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, v0.c0, t0.c50 FROM t0, v0 INNER JOIN rt0 ON (v0.c0 IN (((rt0.c1)&(NULL)), CASE WHEN v0.c0 THEN x'' ELSE 0.6740151741909344 END));
SELECT ALL rt0.c1, rt0.c2, v0.c0, t0.c50 FROM t0, v0 INNER JOIN rt0 ON (v0.c0 IN (((rt0.c1)&(NULL)), CASE WHEN v0.c0 THEN x'' ELSE 0.6740151741909344 END)) WHERE (CAST((+ (rt0.c0)) AS TEXT)) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, t0.c50 FROM t0, v0 INNER JOIN rt0 ON (v0.c0 IN (((rt0.c1)&(NULL)), CASE WHEN v0.c0 THEN x'' ELSE 0.6740151741909344 END)) WHERE ((NOT (CAST((+ (rt0.c0)) AS TEXT)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, t0.c50 FROM t0, v0 INNER JOIN rt0 ON (v0.c0 IN (((rt0.c1)&(NULL)), CASE WHEN v0.c0 THEN x'' ELSE 0.6740151741909344 END)) WHERE (((CAST((+ (rt0.c0)) AS TEXT)) ISNULL));
SELECT ALL rt0.c1, rt0.c2, v0.c0, t0.c50 FROM t0, v0 INNER JOIN rt0 ON (v0.c0 IN (((rt0.c1)&(NULL)), CASE WHEN v0.c0 THEN x'' ELSE 0.6740151741909344 END));
SELECT DISTINCT rt0.c2 FROM rt0 INNER JOIN v0 ON (((('0.4029349190943994')>=(rt0.c0)))||(((rt0.c1)LIKE(rt0.c2)))) FULL OUTER JOIN t0 ON v0.c0;
SELECT DISTINCT rt0.c2 FROM rt0 INNER JOIN v0 ON (((('0.4029349190943994')>=(rt0.c0)))||(((rt0.c1)LIKE(rt0.c2)))) FULL OUTER JOIN t0 ON v0.c0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c2 FROM rt0 INNER JOIN v0 ON (((('0.4029349190943994')>=(rt0.c0)))||(((rt0.c1)LIKE(rt0.c2)))) FULL OUTER JOIN t0 ON v0.c0 WHERE ((NOT (CAST(rt0.c0 AS INTEGER) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c2 FROM rt0 INNER JOIN v0 ON (((('0.4029349190943994')>=(rt0.c0)))||(((rt0.c1)LIKE(rt0.c2)))) FULL OUTER JOIN t0 ON v0.c0 WHERE (((CAST(rt0.c0 AS INTEGER) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0 INNER JOIN v0 ON (((('0.4029349190943994')>=(rt0.c0)))||(((rt0.c1)LIKE(rt0.c2)))) FULL OUTER JOIN t0 ON v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (x'') GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (x''))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((x'') ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (+ (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (+ (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((((((('-1051243093')AND(v0.c0)))OR((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))))))OR(((v0.c0) IS FALSE))))OR(CHANGES())))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((((((((((('-1051243093')AND(v0.c0)))OR((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))))))OR(((v0.c0) IS FALSE))))OR(CHANGES())))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((((((((('-1051243093')AND(v0.c0)))OR((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))))))OR(((v0.c0) IS FALSE))))OR(CHANGES())))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0, t0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0, t0 WHERE ((CAST(rt0.c1 AS REAL) IN ())) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0, t0 WHERE ((NOT ((CAST(rt0.c1 AS REAL) IN ())))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0, t0 WHERE ((((CAST(rt0.c1 AS REAL) IN ())) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0, t0;
SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c1;
SELECT rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 WHERE (((rt0.c0)+(rt0.c0)) COLLATE BINARY) GROUP BY rt0.c2, v0.c0, rt0.c1 UNION SELECT rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (((rt0.c0)+(rt0.c0)) COLLATE BINARY))) GROUP BY rt0.c2, v0.c0, rt0.c1 UNION SELECT rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 WHERE (((((rt0.c0)+(rt0.c0)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, v0.c0, rt0.c1;
SELECT ALL rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c1;
SELECT ALL rt0.c0, t0.c50, v0.c0 FROM t0 FULL OUTER JOIN v0 ON ((t0.c50 COLLATE NOCASE)-(CASE WHEN rt0.c0 THEN t0.c50 END)) INNER JOIN rt0 ON CASE (rt0.c0 IN ())  WHEN (- (rt0.c1)) THEN ((t0.c50) ISNULL) ELSE ((v0.c0)IS NOT(rt0.c2)) END GROUP BY rt0.c0, t0.c50, v0.c0;
SELECT * FROM v0, t0, rt0;
SELECT * FROM v0, t0, rt0 WHERE ((('떞[')>>(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END))) UNION ALL SELECT ALL * FROM v0, t0, rt0 WHERE ((NOT ((('떞[')>>(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END))))) UNION ALL SELECT * FROM v0, t0, rt0 WHERE ((((('떞[')>>(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END))) ISNULL));
SELECT * FROM v0, t0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (x'') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0, v0 WHERE (rt0.c2) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0, v0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0, v0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 FROM rt0, t0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50;
SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 FROM rt0, t0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 FROM rt0, t0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 FROM rt0, t0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 FROM rt0, t0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50;
SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 FROM rt0, t0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 FROM rt0, t0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 FROM rt0, t0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 FROM rt0, t0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50;
SELECT rt0.c1 FROM rt0, t0;
SELECT ALL rt0.c1 FROM rt0, t0 WHERE ((((NULL)) NOT BETWEEN ((rt0.c2)) AND ((NULL))) COLLATE BINARY) UNION ALL SELECT rt0.c1 FROM rt0 NOT INDEXED, t0 WHERE ((NOT ((((NULL)) NOT BETWEEN ((rt0.c2)) AND ((NULL))) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c1 FROM rt0, t0 WHERE ((((((NULL)) NOT BETWEEN ((rt0.c2)) AND ((NULL))) COLLATE BINARY) ISNULL));
SELECT rt0.c1 FROM rt0, t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (738128895) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (738128895))) UNION SELECT DISTINCT * FROM v0 WHERE (((738128895) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 WHERE (rt0.c2 COLLATE BINARY) GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (rt0.c2 COLLATE BINARY))) GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 WHERE (((rt0.c2 COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c2;
SELECT v0.c0, rt0.c0, t0.c50, rt0.c1, rt0.c2 FROM t0 CROSS JOIN v0 ON rt0.c1 FULL OUTER JOIN rt0 ON NULL GROUP BY v0.c0, rt0.c0, t0.c50, rt0.c1, rt0.c2;
SELECT * FROM rt0 INNER JOIN v0 ON INSTR(x'', ((0.44741662928709003) IS FALSE));
SELECT ALL * FROM rt0 INNER JOIN v0 ON INSTR(x'', ((0.44741662928709003) IS FALSE)) WHERE ((((rt0.c0) ISNULL) IN ((+ (rt0.c1)), ((rt0.c2) BETWEEN (rt0.c0) AND (-8.17353768E8))))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN v0 ON INSTR(x'', ((0.44741662928709003) IS FALSE)) WHERE ((NOT ((((rt0.c0) ISNULL) IN ((+ (rt0.c1)), ((rt0.c2) BETWEEN (rt0.c0) AND (-8.17353768E8))))))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN v0 ON INSTR(x'', ((0.44741662928709003) IS FALSE)) WHERE ((((((rt0.c0) ISNULL) IN ((+ (rt0.c1)), ((rt0.c2) BETWEEN (rt0.c0) AND (-8.17353768E8))))) ISNULL));
SELECT * FROM rt0 INNER JOIN v0 ON INSTR(x'', ((0.44741662928709003) IS FALSE));
SELECT DISTINCT t0.c50 FROM t0;
SELECT DISTINCT t0.c50 FROM t0 WHERE (((((CASE WHEN t0.c50 THEN t0.c50 END)OR(TRIM(t0.c50))))OR(CASE t0.c50  WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END))) UNION SELECT DISTINCT t0.c50 FROM t0 WHERE ((NOT (((((CASE WHEN t0.c50 THEN t0.c50 END)OR(TRIM(t0.c50))))OR(CASE t0.c50  WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END))))) UNION SELECT DISTINCT t0.c50 FROM t0 WHERE (((((((CASE WHEN t0.c50 THEN t0.c50 END)OR(TRIM(t0.c50))))OR(CASE t0.c50  WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END))) ISNULL));
SELECT DISTINCT t0.c50 FROM t0;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT t0.c50 FROM t0 WHERE (((0.10569438309767198) IS TRUE)) GROUP BY t0.c50 UNION SELECT t0.c50 FROM t0 WHERE ((NOT (((0.10569438309767198) IS TRUE)))) GROUP BY t0.c50 UNION SELECT t0.c50 FROM t0 WHERE (((((0.10569438309767198) IS TRUE)) ISNULL)) GROUP BY t0.c50;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT v0.c0 FROM v0, t0;
SELECT v0.c0 FROM v0, t0 WHERE (((CAST(v0.c0 AS NUMERIC)) IS TRUE)) UNION ALL SELECT v0.c0 FROM v0, t0 WHERE ((NOT (((CAST(v0.c0 AS NUMERIC)) IS TRUE)))) UNION ALL SELECT v0.c0 FROM v0, t0 WHERE (((((CAST(v0.c0 AS NUMERIC)) IS TRUE)) ISNULL));
SELECT v0.c0 FROM v0, t0;
SELECT DISTINCT rt0.c1, v0.c0, rt0.c0, rt0.c2, t0.c50 FROM t0, rt0, v0;
SELECT DISTINCT rt0.c1, v0.c0, rt0.c0, rt0.c2, t0.c50 FROM t0, rt0, v0 WHERE (CASE rt0.c1  WHEN ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((t0.c50)>(t0.c50)) WHEN rt0.c1 COLLATE BINARY THEN ((1.012067798E9) NOT BETWEEN (t0.c50) AND (v0.c0)) WHEN ((((((((rt0.c2)OR(0.3681521963275892)))AND(t0.c50)))OR(rt0.c1)))AND(rt0.c1)) THEN CAST(NULL AS INTEGER) END) UNION SELECT DISTINCT rt0.c1, v0.c0, rt0.c0, rt0.c2, t0.c50 FROM t0, rt0, v0 WHERE ((NOT (CASE rt0.c1  WHEN ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((t0.c50)>(t0.c50)) WHEN rt0.c1 COLLATE BINARY THEN ((1.012067798E9) NOT BETWEEN (t0.c50) AND (v0.c0)) WHEN ((((((((rt0.c2)OR(0.3681521963275892)))AND(t0.c50)))OR(rt0.c1)))AND(rt0.c1)) THEN CAST(NULL AS INTEGER) END))) UNION SELECT DISTINCT rt0.c1, v0.c0, rt0.c0, rt0.c2, t0.c50 FROM t0, rt0, v0 WHERE (((CASE rt0.c1  WHEN ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((t0.c50)>(t0.c50)) WHEN rt0.c1 COLLATE BINARY THEN ((1.012067798E9) NOT BETWEEN (t0.c50) AND (v0.c0)) WHEN ((((((((rt0.c2)OR(0.3681521963275892)))AND(t0.c50)))OR(rt0.c1)))AND(rt0.c1)) THEN CAST(NULL AS INTEGER) END) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0, rt0.c0, rt0.c2, t0.c50 FROM t0, rt0, v0;
SELECT ALL t0.c50, rt0.c2, rt0.c0, rt0.c1 FROM rt0, t0 GROUP BY t0.c50, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL t0.c50, rt0.c2, rt0.c0, rt0.c1 FROM rt0, t0 WHERE (((((((t0.c50)OR(t0.c50)))OR(''))) NOT BETWEEN (((t0.c50)==(rt0.c0))) AND ((NOT (t0.c50))))) GROUP BY t0.c50, rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL t0.c50, rt0.c2, rt0.c0, rt0.c1 FROM rt0, t0 WHERE ((NOT (((((((t0.c50)OR(t0.c50)))OR(''))) NOT BETWEEN (((t0.c50)=(rt0.c0))) AND ((NOT (t0.c50))))))) GROUP BY t0.c50, rt0.c2, rt0.c0, rt0.c1 UNION SELECT t0.c50, rt0.c2, rt0.c0, rt0.c1 FROM rt0, t0 WHERE (((((((((t0.c50)OR(t0.c50)))OR(''))) NOT BETWEEN (((t0.c50)=(rt0.c0))) AND ((NOT (t0.c50))))) ISNULL)) GROUP BY t0.c50, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL t0.c50, rt0.c2, rt0.c0, rt0.c1 FROM rt0, t0 GROUP BY t0.c50, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (~ (((COUNT(0.562763545949048))OR(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((~ (((COUNT(0.562763545949048))OR(rt0.c1)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((~ (((COUNT(0.562763545949048))OR(rt0.c1))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (~ (((COUNT(0.562763545949048))OR(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((~ (((COUNT(0.562763545949048))OR(rt0.c1)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((~ (((COUNT(0.562763545949048))OR(rt0.c1))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)))IS NOT(((rt0.c0)>(rt0.c1))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)))IS NOT(((rt0.c0)>(rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)))IS NOT(((rt0.c0)>(rt0.c1))))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (CAST(((v0.c0)IS(rt0.c2)) AS REAL)) UNION SELECT DISTINCT * FROM v0, rt0 NOT INDEXED WHERE ((NOT (CAST(((v0.c0)IS(rt0.c2)) AS REAL)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((CAST(((v0.c0)IS(rt0.c2)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c50 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c50;
SELECT rt0.c1, rt0.c0, rt0.c2, t0.c50 FROM t0 NATURAL JOIN rt0 WHERE (((((t0.c50)<>(rt0.c1))) BETWEEN ((rt0.c2 IN ())) AND (rt0.c2 COLLATE NOCASE))) GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c50 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c50 FROM t0 NATURAL JOIN rt0 WHERE ((NOT (((((t0.c50)<>(rt0.c1))) BETWEEN ((rt0.c2 IN ())) AND (rt0.c2 COLLATE NOCASE))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c50 UNION SELECT rt0.c1, rt0.c0, rt0.c2, t0.c50 FROM t0 NATURAL JOIN rt0 WHERE (((((((t0.c50)!=(rt0.c1))) BETWEEN ((rt0.c2 IN ())) AND (rt0.c2 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c50;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c50 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c50;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING MAX(x'') UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MAX(x''))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MAX(x'')) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING MAX(x'') UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MAX(x''))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MAX(x'')) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (INSTR((- (v0.c0)), (v0.c0 IN (v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (INSTR((- (v0.c0)), (v0.c0 IN (v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((INSTR((- (v0.c0)), (v0.c0 IN (v0.c0)))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c1, t0.c50 FROM rt0, t0, v0;
SELECT DISTINCT rt0.c1, t0.c50 FROM rt0, t0, v0 WHERE (((IFNULL(v0.c0, v0.c0))>>(v0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c1, t0.c50 FROM rt0, t0, v0 WHERE ((NOT (((IFNULL(v0.c0, v0.c0))>>(v0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT rt0.c1, t0.c50 FROM rt0, t0, v0 WHERE (((((IFNULL(v0.c0, v0.c0))>>(v0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt0.c1, t0.c50 FROM rt0, t0, v0;
SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM v0, t0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM v0, t0, rt0 WHERE ((((((((((('-1712628739')||(rt0.c2)))OR((NOT (v0.c0)))))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c1) ISNULL))))AND(CASE WHEN rt0.c2 THEN t0.c50 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END))) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM v0, t0, rt0 WHERE ((NOT ((((((((((('-1712628739')||(rt0.c2)))OR((NOT (v0.c0)))))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c1) ISNULL))))AND(CASE WHEN rt0.c2 THEN t0.c50 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END))))) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1 UNION SELECT rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM v0, t0, rt0 WHERE ((((((((((((('-1712628739')||(rt0.c2)))OR((NOT (v0.c0)))))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c1) ISNULL))))AND(CASE WHEN rt0.c2 THEN t0.c50 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END))) ISNULL)) GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM v0, t0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(CAST(v0.c0 AS INTEGER)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(CAST(v0.c0 AS INTEGER)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(CAST(v0.c0 AS INTEGER))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(CAST(v0.c0 AS INTEGER)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(CAST(v0.c0 AS INTEGER)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(CAST(v0.c0 AS INTEGER))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL TOTAL(((CASE rt0.c0  WHEN t0.c50 THEN 0.6861980587499219 END) IS TRUE)) FROM rt0, t0;
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE ((- (v0.c0 COLLATE NOCASE))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT ((- (v0.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((((- (v0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM t0, v0, rt0;
SELECT DISTINCT * FROM t0, v0, rt0 WHERE (((CASE WHEN t0.c50 THEN t0.c50 END)*(((((rt0.c2)AND(rt0.c1)))AND(rt0.c0))))) UNION SELECT DISTINCT * FROM t0, v0, rt0 WHERE ((NOT (((CASE WHEN t0.c50 THEN t0.c50 END)*(((((rt0.c2)AND(rt0.c1)))AND(rt0.c0))))))) UNION SELECT DISTINCT * FROM t0, v0, rt0 WHERE (((((CASE WHEN t0.c50 THEN t0.c50 END)*(((((rt0.c2)AND(rt0.c1)))AND(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, v0, rt0;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT t0.c50 FROM t0 WHERE ((t0.c50 IN ((+ (t0.c50))))) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM t0 WHERE ((NOT ((t0.c50 IN ((+ (t0.c50))))))) GROUP BY t0.c50 UNION SELECT t0.c50 FROM t0 WHERE ((((t0.c50 IN ((+ (t0.c50))))) ISNULL)) GROUP BY t0.c50;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT t0.c50, rt0.c0 FROM t0, rt0 GROUP BY t0.c50, rt0.c0;
SELECT t0.c50, rt0.c0 FROM t0, rt0 GROUP BY t0.c50, rt0.c0 HAVING rt0.c2 UNION ALL SELECT t0.c50, rt0.c0 FROM t0, rt0 GROUP BY t0.c50, rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT t0.c50, rt0.c0 FROM t0, rt0 GROUP BY t0.c50, rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT t0.c50, rt0.c0 FROM t0, rt0 GROUP BY t0.c50, rt0.c0;
SELECT t0.c50, rt0.c0 FROM t0, rt0 GROUP BY t0.c50, rt0.c0 HAVING rt0.c2 UNION ALL SELECT t0.c50, rt0.c0 FROM t0, rt0 GROUP BY t0.c50, rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT t0.c50, rt0.c0 FROM t0, rt0 GROUP BY t0.c50, rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT t0.c50, rt0.c0 FROM t0, rt0 GROUP BY t0.c50, rt0.c0;
SELECT MIN(((((rt0.c0)IS NOT(rt0.c0))) NOT BETWEEN (((0.8490660619509246)<<(rt0.c0))) AND (LIKELIHOOD(rt0.c1, 0.28846867420233424)))) FROM rt0;
SELECT * FROM t0 NOT INDEXED;
SELECT * FROM t0 WHERE (((((t0.c50)&(t0.c50))) NOT BETWEEN (0X297984f3 COLLATE NOCASE) AND (t0.c50))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c50)&(t0.c50))) NOT BETWEEN (0x297984f3 COLLATE NOCASE) AND (t0.c50))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((t0.c50)&(t0.c50))) NOT BETWEEN (0x297984f3 COLLATE NOCASE) AND (t0.c50))) ISNULL));
SELECT * FROM t0 NOT INDEXED;
SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON ((0.8668310454991472)LIKE(v0.c0)) COLLATE BINARY INNER JOIN v0 ON '419496342';
SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON ((0.8668310454991472)LIKE(v0.c0)) COLLATE BINARY INNER JOIN v0 ON '419496342' WHERE ((v0.c0 COLLATE RTRIM IN ((((rt0.c2, rt0.c0, v0.c0)) BETWEEN ((rt0.c0, v0.c0, rt0.c0)) AND ((rt0.c2, v0.c0, v0.c0))), COALESCE(DISTINCT '', rt0.c0, rt0.c1, rt0.c0)))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON ((0.8668310454991472)LIKE(v0.c0)) COLLATE BINARY INNER JOIN v0 ON '419496342' WHERE ((NOT ((v0.c0 COLLATE RTRIM IN ((((rt0.c2, rt0.c0, v0.c0)) BETWEEN ((rt0.c0, v0.c0, rt0.c0)) AND ((rt0.c2, v0.c0, v0.c0))), COALESCE(DISTINCT '', rt0.c0, rt0.c1, rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON ((0.8668310454991472)LIKE(v0.c0)) COLLATE BINARY INNER JOIN v0 ON '419496342' WHERE ((((v0.c0 COLLATE RTRIM IN ((((rt0.c2, rt0.c0, v0.c0)) BETWEEN ((rt0.c0, v0.c0, rt0.c0)) AND ((rt0.c2, v0.c0, v0.c0))), COALESCE(DISTINCT '', rt0.c0, rt0.c1, rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON ((0.8668310454991472)LIKE(v0.c0)) COLLATE BINARY INNER JOIN v0 ON '419496342';
SELECT ALL t0.c50 FROM t0, rt0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0, rt0 WHERE ((((CAST(rt0.c0 AS REAL)))>(((~ (rt0.c1)))))) GROUP BY t0.c50 UNION SELECT t0.c50 FROM t0, rt0 WHERE ((NOT ((((CAST(rt0.c0 AS REAL)))>(((~ (rt0.c1)))))))) GROUP BY t0.c50 UNION SELECT t0.c50 FROM t0, rt0 WHERE ((((((CAST(rt0.c0 AS REAL)))>(((~ (rt0.c1)))))) ISNULL)) GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0, rt0 GROUP BY t0.c50;
SELECT t0.c50, v0.c0 FROM t0, v0 NOT INDEXED GROUP BY t0.c50, v0.c0;
SELECT t0.c50, v0.c0 FROM t0, v0 GROUP BY t0.c50, v0.c0 HAVING MAX(TOTAL(v0.c0)) UNION ALL SELECT ALL t0.c50, v0.c0 FROM t0, v0 GROUP BY t0.c50, v0.c0 HAVING (NOT (MAX(TOTAL(v0.c0)))) UNION ALL SELECT ALL t0.c50, v0.c0 FROM t0, v0 GROUP BY t0.c50, v0.c0 HAVING ((MAX(TOTAL(v0.c0))) ISNULL);
SELECT ALL * FROM v0, t0, rt0;
SELECT * FROM v0, t0, rt0 WHERE ((((t0.c50 IN ())) NOTNULL)) UNION ALL SELECT * FROM v0, t0, rt0 WHERE ((NOT ((((t0.c50 IN ())) NOTNULL)))) UNION ALL SELECT ALL * FROM v0, t0, rt0 WHERE ((((((t0.c50 IN ())) NOTNULL)) ISNULL));
SELECT ALL * FROM v0, t0, rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (TOTAL_CHANGES() COLLATE NOCASE) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (TOTAL_CHANGES() COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((TOTAL_CHANGES() COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL t0.c50 FROM t0, v0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0, v0 WHERE (NULL) GROUP BY t0.c50 UNION SELECT t0.c50 FROM t0, v0 WHERE ((NOT (NULL))) GROUP BY t0.c50 UNION SELECT t0.c50 FROM t0, v0 WHERE (((NULL) ISNULL)) GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0, v0 GROUP BY t0.c50;
SELECT ALL t0.c50, v0.c0, rt0.c2, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON (((v0.c0 IN ())) IS FALSE) RIGHT OUTER JOIN v0 ON '' GROUP BY t0.c50, v0.c0, rt0.c2, rt0.c0;
SELECT t0.c50, v0.c0, rt0.c2, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON (((v0.c0 IN ())) IS FALSE) RIGHT OUTER JOIN v0 ON '' GROUP BY t0.c50, v0.c0, rt0.c2, rt0.c0 HAVING (((COUNT(AVG(rt0.c2)))||(rt0.c0)) IN ()) UNION ALL SELECT ALL t0.c50, v0.c0, rt0.c2, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON (((v0.c0 IN ())) IS FALSE) RIGHT OUTER JOIN v0 ON '' GROUP BY t0.c50, v0.c0, rt0.c2, rt0.c0 HAVING (NOT ((((COUNT(AVG(rt0.c2)))||(rt0.c0)) IN ()))) UNION ALL SELECT t0.c50, v0.c0, rt0.c2, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON (((v0.c0 IN ())) IS FALSE) RIGHT OUTER JOIN v0 ON '' GROUP BY t0.c50, v0.c0, rt0.c2, rt0.c0 HAVING (((((COUNT(AVG(rt0.c2)))||(rt0.c0)) IN ())) ISNULL);
SELECT ALL t0.c50, v0.c0, rt0.c2, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON (((v0.c0 IN ())) IS FALSE) RIGHT OUTER JOIN v0 ON '' GROUP BY t0.c50, v0.c0, rt0.c2, rt0.c0;
SELECT t0.c50, v0.c0, rt0.c2, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON (((v0.c0 IN ())) IS FALSE) RIGHT OUTER JOIN v0 ON '' GROUP BY t0.c50, v0.c0, rt0.c2, rt0.c0 HAVING (((COUNT(AVG(rt0.c2)))||(rt0.c0)) IN ()) UNION ALL SELECT ALL t0.c50, v0.c0, rt0.c2, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON (((v0.c0 IN ())) IS FALSE) RIGHT OUTER JOIN v0 ON '' GROUP BY t0.c50, v0.c0, rt0.c2, rt0.c0 HAVING (NOT ((((COUNT(AVG(rt0.c2)))||(rt0.c0)) IN ()))) UNION ALL SELECT t0.c50, v0.c0, rt0.c2, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON (((v0.c0 IN ())) IS FALSE) RIGHT OUTER JOIN v0 ON '' GROUP BY t0.c50, v0.c0, rt0.c2, rt0.c0 HAVING (((((COUNT(AVG(rt0.c2)))||(rt0.c0)) IN ())) ISNULL);
SELECT ALL t0.c50, v0.c0, rt0.c2, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON (((v0.c0 IN ())) IS FALSE) RIGHT OUTER JOIN v0 ON '' GROUP BY t0.c50, v0.c0, rt0.c2, rt0.c0;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((CASE v0.c0  WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CAST(v0.c0 AS REAL), v0.c0)) AND ((v0.c0 COLLATE NOCASE, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((((v0.c0)AND(v0.c0)))AND(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((CASE v0.c0  WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CAST(v0.c0 AS REAL), v0.c0)) AND ((v0.c0 COLLATE NOCASE, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((((v0.c0)AND(v0.c0)))AND(v0.c0)))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((CASE v0.c0  WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CAST(v0.c0 AS REAL), v0.c0)) AND ((v0.c0 COLLATE NOCASE, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((((v0.c0)AND(v0.c0)))AND(v0.c0)))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c1, rt0.c2, v0.c0, t0.c50, rt0.c0 FROM t0, rt0 CROSS JOIN v0 ON ((((('1925101529') NOTNULL)))=(((- (rt0.c2)))));
SELECT DISTINCT rt0.c1, rt0.c2, v0.c0, t0.c50, rt0.c0 FROM t0, rt0 CROSS JOIN v0 ON ((((('1925101529') NOTNULL)))==(((- (rt0.c2))))) WHERE ((+ ((NOT (rt0.c2))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, v0.c0, t0.c50, rt0.c0 FROM t0, rt0 CROSS JOIN v0 ON ((((('1925101529') NOTNULL)))==(((- (rt0.c2))))) WHERE ((NOT ((+ ((NOT (rt0.c2))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, v0.c0, t0.c50, rt0.c0 FROM t0, rt0 CROSS JOIN v0 ON ((((('1925101529') NOTNULL)))=(((- (rt0.c2))))) WHERE ((((+ ((NOT (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, v0.c0, t0.c50, rt0.c0 FROM t0, rt0 CROSS JOIN v0 ON ((((('1925101529') NOTNULL)))=(((- (rt0.c2)))));
SELECT ALL t0.c50 FROM rt0, v0, t0 GROUP BY t0.c50;
SELECT t0.c50 FROM rt0, v0, t0 WHERE (CASE ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2))  WHEN ((rt0.c2)>=('''uW8*')) THEN ((((rt0.c0)AND(rt0.c1)))OR('1998322458')) WHEN ((rt0.c0) BETWEEN (t0.c50) AND (rt0.c0)) THEN ((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) WHEN CAST(rt0.c1 AS TEXT) THEN 0.8057691582348356 ELSE (((v0.c0))>((v0.c0))) END) GROUP BY t0.c50 UNION SELECT t0.c50 FROM rt0, v0, t0 WHERE ((NOT (CASE ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2))  WHEN ((rt0.c2)>=('''uW8*')) THEN ((((rt0.c0)AND(rt0.c1)))OR('1998322458')) WHEN ((rt0.c0) BETWEEN (t0.c50) AND (rt0.c0)) THEN ((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) WHEN CAST(rt0.c1 AS TEXT) THEN 0.8057691582348356 ELSE (((v0.c0))>((v0.c0))) END))) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM rt0, v0, t0 WHERE (((CASE ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2))  WHEN ((rt0.c2)>=('''uW8*')) THEN ((((rt0.c0)AND(rt0.c1)))OR('1998322458')) WHEN ((rt0.c0) BETWEEN (t0.c50) AND (rt0.c0)) THEN ((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) WHEN CAST(rt0.c1 AS TEXT) THEN 0.8057691582348356 ELSE (((v0.c0))>((v0.c0))) END) ISNULL)) GROUP BY t0.c50;
SELECT ALL t0.c50 FROM rt0, v0, t0 GROUP BY t0.c50;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((MIN(TOTAL(v0.c0))))>((v0.c0))))AND(SUM(COUNT(*)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((((MIN(TOTAL(v0.c0))))>((v0.c0))))AND(SUM(COUNT(*)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((((MIN(TOTAL(v0.c0))))>((v0.c0))))AND(SUM(COUNT(*))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (TRIM(CAST('0.9599424144291668' AS TEXT))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (TRIM(CAST('0.9599424144291668' AS TEXT))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((TRIM(CAST('0.9599424144291668' AS TEXT))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT t0.c50, v0.c0 FROM t0, v0;
SELECT DISTINCT t0.c50, v0.c0 FROM t0, v0 WHERE ('汮s') UNION SELECT DISTINCT t0.c50, v0.c0 FROM t0, v0 WHERE ((NOT ('汮s'))) UNION SELECT DISTINCT t0.c50, v0.c0 FROM t0, v0 WHERE ((('汮s') ISNULL));
SELECT DISTINCT t0.c50, v0.c0 FROM t0, v0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 NOT INDEXED WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL t0.c50 FROM v0, t0 GROUP BY t0.c50;
SELECT t0.c50 FROM v0, t0 GROUP BY t0.c50 HAVING CAST(t0.c50 COLLATE NOCASE AS BLOB) UNION ALL SELECT ALL t0.c50 FROM v0, t0 GROUP BY t0.c50 HAVING (NOT (CAST(t0.c50 COLLATE NOCASE AS BLOB))) UNION ALL SELECT t0.c50 FROM v0, t0 GROUP BY t0.c50 HAVING ((CAST(t0.c50 COLLATE NOCASE AS BLOB)) ISNULL);
SELECT ALL t0.c50 FROM v0, t0 GROUP BY t0.c50;
SELECT t0.c50 FROM v0, t0 GROUP BY t0.c50 HAVING CAST(t0.c50 COLLATE NOCASE AS BLOB) UNION ALL SELECT ALL t0.c50 FROM v0, t0 GROUP BY t0.c50 HAVING (NOT (CAST(t0.c50 COLLATE NOCASE AS BLOB))) UNION ALL SELECT t0.c50 FROM v0, t0 GROUP BY t0.c50 HAVING ((CAST(t0.c50 COLLATE NOCASE AS BLOB)) ISNULL);
SELECT ALL t0.c50 FROM v0, t0 GROUP BY t0.c50;
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (UPPER(DISTINCT (+ (rt0.c1)))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (UPPER(DISTINCT (+ (rt0.c1)))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((UPPER(DISTINCT (+ (rt0.c1)))) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c0) IS FALSE) IN ());
SELECT DISTINCT v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c0) IS FALSE) IN ()) WHERE (v0.c0) UNION SELECT DISTINCT v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c0) IS FALSE) IN ()) WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c0) IS FALSE) IN ()) WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c0) IS FALSE) IN ());
SELECT rt0.c0, t0.c50 FROM v0 INNER JOIN t0 ON '14267806' INNER JOIN rt0 ON rt0.c2 GROUP BY rt0.c0, t0.c50;
SELECT ALL rt0.c0, t0.c50 FROM v0 INNER JOIN t0 ON '14267806' INNER JOIN rt0 ON rt0.c2 WHERE (CASE NULL COLLATE NOCASE  WHEN ((rt0.c2)%(rt0.c1)) THEN TYPEOF(DISTINCT v0.c0) END) GROUP BY rt0.c0, t0.c50 UNION SELECT ALL rt0.c0, t0.c50 FROM v0 INNER JOIN t0 ON '14267806' INNER JOIN rt0 ON rt0.c2 WHERE ((NOT (CASE NULL COLLATE NOCASE  WHEN ((rt0.c2)%(rt0.c1)) THEN TYPEOF(DISTINCT v0.c0) END))) GROUP BY rt0.c0, t0.c50 UNION SELECT rt0.c0, t0.c50 FROM v0 INNER JOIN t0 ON '14267806' INNER JOIN rt0 ON rt0.c2 WHERE (((CASE NULL COLLATE NOCASE  WHEN ((rt0.c2)%(rt0.c1)) THEN TYPEOF(DISTINCT v0.c0) END) ISNULL)) GROUP BY rt0.c0, t0.c50;
SELECT rt0.c0, t0.c50 FROM v0 INNER JOIN t0 ON '14267806' INNER JOIN rt0 ON rt0.c2 GROUP BY rt0.c0, t0.c50;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MAX(MAX(TOTAL(rt0.c2))))%(((rt0.c0)|(rt0.c2)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c2 HAVING (NOT (((MAX(MAX(TOTAL(rt0.c2))))%(((rt0.c0)|(rt0.c2)))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((MAX(MAX(TOTAL(rt0.c2))))%(((rt0.c0)|(rt0.c2))))) ISNULL);
SELECT MIN((((+ (rt0.c2)))&(NULLIF(DISTINCT rt0.c2, v0.c0)))) FROM rt0, v0, t0 ORDER BY ((((rt0.c1)IS(t0.c50)))-('0.0')) ASC;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((NOT (v0.c0)) IN (TOTAL_CHANGES()))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((NOT (v0.c0)) IN (TOTAL_CHANGES()))))) UNION ALL SELECT * FROM v0 WHERE (((((NOT (v0.c0)) IN (TOTAL_CHANGES()))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c2, v0.c0 FROM v0, t0, rt0;
SELECT DISTINCT rt0.c2, v0.c0 FROM v0, t0, rt0 WHERE (((((rt0.c0)) NOT BETWEEN ((t0.c50)) AND ((v0.c0))) IN (CAST(t0.c50 AS INTEGER)))) UNION SELECT DISTINCT rt0.c2, v0.c0 FROM v0, t0, rt0 WHERE ((NOT (((((rt0.c0)) NOT BETWEEN ((t0.c50)) AND ((v0.c0))) IN (CAST(t0.c50 AS INTEGER)))))) UNION SELECT DISTINCT rt0.c2, v0.c0 FROM v0, t0, rt0 WHERE (((((((rt0.c0)) NOT BETWEEN ((t0.c50)) AND ((v0.c0))) IN (CAST(t0.c50 AS INTEGER)))) ISNULL));
SELECT DISTINCT rt0.c2, v0.c0 FROM v0, t0, rt0;
SELECT ALL rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 WHERE (COALESCE(((rt0.c1)<(rt0.c2)), CASE v0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END, ((rt0.c2)==(rt0.c2)), (((rt0.c2, rt0.c0, rt0.c2))=((v0.c0, rt0.c1, rt0.c0))))) GROUP BY rt0.c2, rt0.c1, v0.c0 UNION SELECT rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 WHERE ((NOT (COALESCE(((rt0.c1)<(rt0.c2)), CASE v0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END, ((rt0.c2)==(rt0.c2)), (((rt0.c2, rt0.c0, rt0.c2))==((v0.c0, rt0.c1, rt0.c0))))))) GROUP BY rt0.c2, rt0.c1, v0.c0 UNION SELECT ALL rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 WHERE (((COALESCE(((rt0.c1)<(rt0.c2)), CASE v0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END, ((rt0.c2)=(rt0.c2)), (((rt0.c2, rt0.c0, rt0.c2))==((v0.c0, rt0.c1, rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, v0.c0;
SELECT ALL rt0.c2, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, v0.c0;
SELECT ALL rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c2;
SELECT rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c2 HAVING highlight(MIN(SUM(GROUP_CONCAT(v0.c0))), ((rt0.c1) IS FALSE), ((GROUP_CONCAT(TOTAL(rt0.c0)))|(SUM(MIN(rt0.c0)))), ((rt0.c2) NOT NULL)) UNION ALL SELECT rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c2 HAVING (NOT (highlight(MIN(SUM(GROUP_CONCAT(v0.c0))), ((rt0.c1) IS FALSE), ((GROUP_CONCAT(TOTAL(rt0.c0)))|(SUM(MIN(rt0.c0)))), ((rt0.c2) NOT NULL)))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c2 HAVING ((highlight(MIN(SUM(GROUP_CONCAT(v0.c0))), ((rt0.c1) IS FALSE), ((GROUP_CONCAT(TOTAL(rt0.c0)))|(SUM(MIN(rt0.c0)))), ((rt0.c2) NOT NULL))) ISNULL);
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((0.09541426112215445 COLLATE BINARY)AND((rt0.c1 IN ()))) FULL OUTER JOIN t0 ON LIKE(x'445c', '-619407332');
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((0.09541426112215445 COLLATE BINARY)AND((rt0.c1 IN ()))) FULL OUTER JOIN t0 ON LIKE(x'445c', '-619407332') WHERE (((CAST(v0.c0 AS REAL))=(CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN t0.c50 THEN rt0.c1 WHEN x'' THEN rt0.c2 END))) UNION ALL SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((0.09541426112215445 COLLATE BINARY)AND((rt0.c1 IN ()))) FULL OUTER JOIN t0 ON LIKE(x'445c', '-619407332') WHERE ((NOT (((CAST(v0.c0 AS REAL))=(CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN t0.c50 THEN rt0.c1 WHEN x'' THEN rt0.c2 END))))) UNION ALL SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((0.09541426112215445 COLLATE BINARY)AND((rt0.c1 IN ()))) FULL OUTER JOIN t0 ON LIKE(x'445c', '-619407332') WHERE (((((CAST(v0.c0 AS REAL))==(CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN t0.c50 THEN rt0.c1 WHEN x'' THEN rt0.c2 END))) ISNULL));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((0.09541426112215445 COLLATE BINARY)AND((rt0.c1 IN ()))) FULL OUTER JOIN t0 ON LIKE(x'445c', '-619407332');
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((- (CAST(x'' AS BLOB)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((- (CAST(x'' AS BLOB)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((- (CAST(x'' AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c0 END COLLATE NOCASE) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c0 THEN rt0.c0 END COLLATE NOCASE))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 END COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT v0.c0 FROM v0, t0, rt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, t0, rt0 GROUP BY v0.c0 HAVING ((+ (MIN(MIN(COUNT(MAX(t0.c50)))))) IN (MIN(SUM(rt0.c1)), JULIANDAY(v0.c0, x'', MAX(MIN(TOTAL(t0.c50))), AVG(COUNT(TOTAL(rt0.c0))), COUNT(MAX(COUNT(*)))))) UNION ALL SELECT v0.c0 FROM v0, t0, rt0 GROUP BY v0.c0 HAVING (NOT (((+ (MIN(MIN(COUNT(MAX(t0.c50)))))) IN (MIN(SUM(rt0.c1)), JULIANDAY(v0.c0, x'', MAX(MIN(TOTAL(t0.c50))), AVG(COUNT(TOTAL(rt0.c0))), COUNT(MAX(COUNT(*)))))))) UNION ALL SELECT v0.c0 FROM v0, t0, rt0 GROUP BY v0.c0 HAVING ((((+ (MIN(MIN(COUNT(MAX(t0.c50)))))) IN (MIN(SUM(rt0.c1)), JULIANDAY(v0.c0, x'', MAX(MIN(TOTAL(t0.c50))), AVG(COUNT(TOTAL(rt0.c0))), COUNT(MAX(COUNT(*))))))) ISNULL);
SELECT ALL t0.c50, rt0.c0, rt0.c2 FROM t0, rt0;
SELECT t0.c50, rt0.c0, rt0.c2 FROM t0, rt0 WHERE (TRIM(((x'')/(rt0.c2)))) UNION ALL SELECT ALL t0.c50, rt0.c0, rt0.c2 FROM t0, rt0 WHERE ((NOT (TRIM(((x'')/(rt0.c2)))))) UNION ALL SELECT ALL t0.c50, rt0.c0, rt0.c2 FROM t0, rt0 WHERE (((TRIM(((x'')/(rt0.c2)))) ISNULL));
SELECT ALL t0.c50, rt0.c0, rt0.c2 FROM t0, rt0;
SELECT DISTINCT * FROM v0, rt0, t0;
SELECT DISTINCT * FROM v0, rt0, t0 WHERE (((DATE(rt0.c2, rt0.c0, t0.c50))*((+ (rt0.c2))))) UNION SELECT DISTINCT * FROM v0, rt0, t0 WHERE ((NOT (((DATE(rt0.c2, rt0.c0, t0.c50))*((+ (rt0.c2))))))) UNION SELECT DISTINCT * FROM v0, rt0, t0 WHERE (((((DATE(rt0.c2, rt0.c0, t0.c50))*((+ (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0, t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0))<((v0.c0))))>=((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((x'')))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0))<((v0.c0))))>=((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((x'')))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((((v0.c0))<((v0.c0))))>=((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((x'')))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, t0.c50, rt0.c0, rt0.c2, rt0.c1 FROM rt0 INNER JOIN v0 ON (((((((((rt0.c1)AND(rt0.c2)))AND(v0.c0)))AND(rt0.c2)))AND(rt0.c0)) IN (((v0.c0) IS FALSE))) LEFT OUTER JOIN t0 ON v0.c0 GROUP BY v0.c0, t0.c50, rt0.c0, rt0.c2, rt0.c1;
SELECT v0.c0, t0.c50, rt0.c0, rt0.c2, rt0.c1 FROM rt0 INNER JOIN v0 ON (((((((((rt0.c1)AND(rt0.c2)))AND(v0.c0)))AND(rt0.c2)))AND(rt0.c0)) IN (((v0.c0) IS FALSE))) LEFT OUTER JOIN t0 ON v0.c0 GROUP BY v0.c0, t0.c50, rt0.c0, rt0.c2, rt0.c1 HAVING CAST(CASE MAX(GROUP_CONCAT(v0.c0))  WHEN MAX(MAX(rt0.c2)) THEN rt0.c1 END AS TEXT) UNION ALL SELECT v0.c0, t0.c50, rt0.c0, rt0.c2, rt0.c1 FROM rt0 INNER JOIN v0 ON (((((((((rt0.c1)AND(rt0.c2)))AND(v0.c0)))AND(rt0.c2)))AND(rt0.c0)) IN (((v0.c0) IS FALSE))) LEFT OUTER JOIN t0 ON v0.c0 GROUP BY v0.c0, t0.c50, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (CAST(CASE MAX(GROUP_CONCAT(v0.c0))  WHEN MAX(MAX(rt0.c2)) THEN rt0.c1 END AS TEXT))) UNION ALL SELECT ALL v0.c0, t0.c50, rt0.c0, rt0.c2, rt0.c1 FROM rt0 INNER JOIN v0 ON (((((((((rt0.c1)AND(rt0.c2)))AND(v0.c0)))AND(rt0.c2)))AND(rt0.c0)) IN (((v0.c0) IS FALSE))) LEFT OUTER JOIN t0 ON v0.c0 GROUP BY v0.c0, t0.c50, rt0.c0, rt0.c2, rt0.c1 HAVING ((CAST(CASE MAX(GROUP_CONCAT(v0.c0))  WHEN MAX(MAX(rt0.c2)) THEN rt0.c1 END AS TEXT)) ISNULL);
SELECT ALL SUM(CAST((((t0.c50))==((rt0.c1))) AS INTEGER)) FROM v0, t0, rt0;
SELECT rt0.c0, rt0.c2, rt0.c1, v0.c0, t0.c50 FROM v0, t0 FULL OUTER JOIN rt0 ON ((((((rt0.c0)>=(rt0.c1)))OR(((rt0.c1) IS FALSE))))AND(CASE rt0.c1  WHEN rt0.c1 THEN NULL END));
SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0, t0.c50 FROM v0, t0 FULL OUTER JOIN rt0 ON ((((((rt0.c0)>=(rt0.c1)))OR(((rt0.c1) IS FALSE))))AND(CASE rt0.c1  WHEN rt0.c1 THEN NULL END)) WHERE (((NOT (v0.c0)) IN ((rt0.c1 IN (v0.c0))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, v0.c0, t0.c50 FROM v0, t0 FULL OUTER JOIN rt0 ON ((((((rt0.c0)>=(rt0.c1)))OR(((rt0.c1) IS FALSE))))AND(CASE rt0.c1  WHEN rt0.c1 THEN NULL END)) WHERE ((NOT (((NOT (v0.c0)) IN ((rt0.c1 IN (v0.c0))))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, v0.c0, t0.c50 FROM v0, t0 FULL OUTER JOIN rt0 ON ((((((rt0.c0)>=(rt0.c1)))OR(((rt0.c1) IS FALSE))))AND(CASE rt0.c1  WHEN rt0.c1 THEN NULL END)) WHERE (((((NOT (v0.c0)) IN ((rt0.c1 IN (v0.c0))))) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c1, v0.c0, t0.c50 FROM v0, t0 FULL OUTER JOIN rt0 ON ((((((rt0.c0)>=(rt0.c1)))OR(((rt0.c1) IS FALSE))))AND(CASE rt0.c1  WHEN rt0.c1 THEN NULL END));
SELECT DISTINCT * FROM t0 INNER JOIN v0 ON x'' CROSS JOIN rt0 ON (v0.c0 COLLATE BINARY IN ());
SELECT DISTINCT * FROM t0 INNER JOIN v0 ON x'' CROSS JOIN rt0 ON (v0.c0 COLLATE BINARY IN ()) WHERE ((NOT (t0.c50)) COLLATE BINARY) UNION SELECT DISTINCT * FROM t0 INNER JOIN v0 ON x'' CROSS JOIN rt0 ON (v0.c0 COLLATE BINARY IN ()) WHERE ((NOT ((NOT (t0.c50)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0 INNER JOIN v0 ON x'' CROSS JOIN rt0 ON (v0.c0 COLLATE BINARY IN ()) WHERE ((((NOT (t0.c50)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t0 INNER JOIN v0 ON x'' CROSS JOIN rt0 ON (v0.c0 COLLATE BINARY IN ());
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT t0.c50 FROM t0 WHERE (t0.c50) GROUP BY t0.c50 UNION SELECT t0.c50 FROM t0 WHERE ((NOT (t0.c50))) GROUP BY t0.c50 UNION SELECT t0.c50 FROM t0 WHERE (((t0.c50) ISNULL)) GROUP BY t0.c50;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING COUNT(SQLITE_COMPILEOPTION_USED(rt0.c1)) UNION ALL SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(SQLITE_COMPILEOPTION_USED(rt0.c1)))) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING ((COUNT(SQLITE_COMPILEOPTION_USED(rt0.c1))) ISNULL);
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING COUNT(SQLITE_COMPILEOPTION_USED(rt0.c1)) UNION ALL SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(SQLITE_COMPILEOPTION_USED(rt0.c1)))) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING ((COUNT(SQLITE_COMPILEOPTION_USED(rt0.c1))) ISNULL);
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (CASE ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(0X13262f4a)))AND(rt0.c2))  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END THEN CASE rt0.c0  WHEN v0.c0 THEN rt0.c2 END ELSE rt0.c0 COLLATE BINARY END) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (CASE ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(0X13262f4a)))AND(rt0.c2))  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END THEN CASE rt0.c0  WHEN v0.c0 THEN rt0.c2 END ELSE rt0.c0 COLLATE BINARY END))) UNION ALL SELECT * FROM rt0, v0 WHERE (((CASE ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(0X13262f4a)))AND(rt0.c2))  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END THEN CASE rt0.c0  WHEN v0.c0 THEN rt0.c2 END ELSE rt0.c0 COLLATE BINARY END) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((- (CASE rt0.c0  WHEN 0.06263917478877323 THEN rt0.c2 ELSE rt0.c2 END))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((- (CASE rt0.c0  WHEN 0.06263917478877323 THEN rt0.c2 ELSE rt0.c2 END))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((- (CASE rt0.c0  WHEN 0.06263917478877323 THEN rt0.c2 ELSE rt0.c2 END))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, v0 WHERE ((- (((x'')%(rt0.c1))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, v0 WHERE ((NOT ((- (((x'')%(rt0.c1))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, v0 WHERE ((((- (((x'')%(rt0.c1))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING TOTAL(MAX(MAX(COUNT(rt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (TOTAL(MAX(MAX(COUNT(rt0.c2)))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((TOTAL(MAX(MAX(COUNT(rt0.c2))))) ISNULL);
SELECT ALL * FROM t0 NOT INDEXED, rt0;
SELECT * FROM t0, rt0 WHERE (CASE WHEN (NOT (rt0.c0)) THEN rt0.c0 COLLATE RTRIM END) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (CASE WHEN (NOT (rt0.c0)) THEN rt0.c0 COLLATE RTRIM END))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE (((CASE WHEN (NOT (rt0.c0)) THEN rt0.c0 COLLATE RTRIM END) ISNULL));
SELECT ALL * FROM t0 NOT INDEXED, rt0;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON ((NOT (v0.c0)) IN ()) CROSS JOIN t0 ON ((CASE WHEN 351300940 THEN t0.c50 END)+(rt0.c1 COLLATE BINARY));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON ((NOT (v0.c0)) IN ()) CROSS JOIN t0 ON ((CASE WHEN 351300940 THEN t0.c50 END)+(rt0.c1 COLLATE BINARY)) WHERE (((((((((rt0.c2)OR(t0.c50 COLLATE RTRIM)))AND(rt0.c0 COLLATE NOCASE)))AND(CASE t0.c50  WHEN t0.c50 THEN rt0.c1 ELSE t0.c50 END)))OR(((rt0.c0)/(t0.c50))))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON ((NOT (v0.c0)) IN ()) CROSS JOIN t0 ON ((CASE WHEN 351300940 THEN t0.c50 END)+(rt0.c1 COLLATE BINARY)) WHERE ((NOT (((((((((rt0.c2)OR(t0.c50 COLLATE RTRIM)))AND(rt0.c0 COLLATE NOCASE)))AND(CASE t0.c50  WHEN t0.c50 THEN rt0.c1 ELSE t0.c50 END)))OR(((rt0.c0)/(t0.c50))))))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON ((NOT (v0.c0)) IN ()) CROSS JOIN t0 ON ((CASE WHEN 351300940 THEN t0.c50 END)+(rt0.c1 COLLATE BINARY)) WHERE (((((((((((rt0.c2)OR(t0.c50 COLLATE RTRIM)))AND(rt0.c0 COLLATE NOCASE)))AND(CASE t0.c50  WHEN t0.c50 THEN rt0.c1 ELSE t0.c50 END)))OR(((rt0.c0)/(t0.c50))))) ISNULL));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON ((NOT (v0.c0)) IN ()) CROSS JOIN t0 ON ((CASE WHEN 351300940 THEN t0.c50 END)+(rt0.c1 COLLATE BINARY));
SELECT rt0.c0, rt0.c1, v0.c0, t0.c50 FROM t0, v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, t0.c50;
SELECT rt0.c0, rt0.c1, v0.c0, t0.c50 FROM t0, v0, rt0 WHERE ((((t0.c50)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((rt0.c1) BETWEEN (t0.c50) AND (t0.c50)))))) GROUP BY rt0.c0, rt0.c1, v0.c0, t0.c50 UNION SELECT rt0.c0, rt0.c1, v0.c0, t0.c50 FROM t0, v0, rt0 WHERE ((NOT ((((t0.c50)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((rt0.c1) BETWEEN (t0.c50) AND (t0.c50)))))))) GROUP BY rt0.c0, rt0.c1, v0.c0, t0.c50 UNION SELECT ALL rt0.c0, rt0.c1, v0.c0, t0.c50 FROM t0, v0, rt0 WHERE ((((((t0.c50)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((rt0.c1) BETWEEN (t0.c50) AND (t0.c50)))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, v0.c0, t0.c50;
SELECT rt0.c0, rt0.c1, v0.c0, t0.c50 FROM t0, v0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, t0.c50;
SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM v0, t0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1;
SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM v0, t0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING GROUP_CONCAT(COUNT(rt0.c0)) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM v0, t0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(COUNT(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1 FROM v0, t0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c1 HAVING ((GROUP_CONCAT(COUNT(rt0.c0))) ISNULL);
SELECT SUM(CASE WHEN v0.c0 THEN t0.c50 END COLLATE RTRIM) FROM v0, t0;
SELECT ALL * FROM t0, v0;
SELECT * FROM t0, v0 WHERE ((((v0.c0, t0.c50, t0.c50)) NOT BETWEEN ((((t0.c50) IS FALSE), v0.c0 COLLATE BINARY, (NOT ('')))) AND ((((t0.c50) IS FALSE), x'', ((t0.c50)*(v0.c0)))))) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT ((((v0.c0, t0.c50, t0.c50)) NOT BETWEEN ((((t0.c50) IS FALSE), v0.c0 COLLATE BINARY, (NOT ('')))) AND ((((t0.c50) IS FALSE), x'', ((t0.c50)*(v0.c0)))))))) UNION ALL SELECT * FROM t0, v0 WHERE ((((((v0.c0, t0.c50, t0.c50)) NOT BETWEEN ((((t0.c50) IS FALSE), v0.c0 COLLATE BINARY, (NOT ('')))) AND ((((t0.c50) IS FALSE), x'', ((t0.c50)*(v0.c0)))))) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT t0.c50 FROM t0 FULL OUTER JOIN v0 ON v0.c0;
SELECT DISTINCT t0.c50 FROM t0 FULL OUTER JOIN v0 ON v0.c0 WHERE ((- (CAST(t0.c50 AS NUMERIC)))) UNION SELECT DISTINCT t0.c50 FROM t0 FULL OUTER JOIN v0 ON v0.c0 WHERE ((NOT ((- (CAST(t0.c50 AS NUMERIC)))))) UNION SELECT DISTINCT t0.c50 FROM t0 FULL OUTER JOIN v0 ON v0.c0 WHERE ((((- (CAST(t0.c50 AS NUMERIC)))) ISNULL));
SELECT DISTINCT t0.c50 FROM t0 FULL OUTER JOIN v0 ON v0.c0;
SELECT ALL rt0.c1 FROM rt0, t0 FULL OUTER JOIN v0 ON ((((rt0.c1)<(rt0.c1))) NOT BETWEEN (((v0.c0)GLOB(t0.c50))) AND ((~ (v0.c0)))) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, t0 FULL OUTER JOIN v0 ON ((((rt0.c1)<(rt0.c1))) NOT BETWEEN (((v0.c0)GLOB(t0.c50))) AND ((~ (v0.c0)))) WHERE ((((CAST(v0.c0 AS TEXT), (((x'', rt0.c2, v0.c0)) NOT BETWEEN ((0.7727151514683144, t0.c50, t0.c50)) AND ((t0.c50, t0.c50, rt0.c0))), rt0.c0 COLLATE BINARY))>(((rt0.c1 IN (rt0.c2)), rt0.c1, (((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, t0 FULL OUTER JOIN v0 ON ((((rt0.c1)<(rt0.c1))) NOT BETWEEN (((v0.c0)GLOB(t0.c50))) AND ((~ (v0.c0)))) WHERE ((NOT ((((CAST(v0.c0 AS TEXT), (((x'', rt0.c2, v0.c0)) NOT BETWEEN ((0.7727151514683144, t0.c50, t0.c50)) AND ((t0.c50, t0.c50, rt0.c0))), rt0.c0 COLLATE BINARY))>(((rt0.c1 IN (rt0.c2)), rt0.c1, (((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, t0 FULL OUTER JOIN v0 ON ((((rt0.c1)<(rt0.c1))) NOT BETWEEN (((v0.c0)GLOB(t0.c50))) AND ((~ (v0.c0)))) WHERE ((((((CAST(v0.c0 AS TEXT), (((x'', rt0.c2, v0.c0)) NOT BETWEEN ((0.7727151514683144, t0.c50, t0.c50)) AND ((t0.c50, t0.c50, rt0.c0))), rt0.c0 COLLATE BINARY))>(((rt0.c1 IN (rt0.c2)), rt0.c1, (((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t0 FULL OUTER JOIN v0 ON ((((rt0.c1)<(rt0.c1))) NOT BETWEEN (((v0.c0)GLOB(t0.c50))) AND ((~ (v0.c0)))) GROUP BY rt0.c1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(((rt0.c2) IS FALSE)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(((rt0.c2) IS FALSE)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(((rt0.c2) IS FALSE))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(((rt0.c2) IS FALSE)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(((rt0.c2) IS FALSE)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(((rt0.c2) IS FALSE))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (TRIM(DISTINCT CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END, ((rt0.c0)>=(x'')))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (TRIM(DISTINCT CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END, ((rt0.c0)>=(x'')))))) UNION ALL SELECT * FROM rt0, v0 WHERE (((TRIM(DISTINCT CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END, ((rt0.c0)>=(x'')))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((((((v0.c0 IN ()))AND(v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(TRIM(v0.c0))))AND(((v0.c0) ISNULL)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((((((v0.c0 IN ()))AND(v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(TRIM(v0.c0))))AND(((v0.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((((((v0.c0 IN ()))AND(v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(TRIM(v0.c0))))AND(((v0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c50, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c50, v0.c0;
SELECT t0.c50, v0.c0 FROM v0 NATURAL JOIN t0 WHERE (((CASE WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN '-817353768' WHEN 't{~1F&X' THEN v0.c0 WHEN t0.c50 THEN t0.c50 WHEN v0.c0 THEN t0.c50 END) NOT BETWEEN ((((t0.c50))>((t0.c50)))) AND ((- (v0.c0))))) GROUP BY t0.c50, v0.c0 UNION SELECT t0.c50, v0.c0 FROM v0 NATURAL JOIN t0 WHERE ((NOT (((CASE WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN '-817353768' WHEN 't{~1F&X' THEN v0.c0 WHEN t0.c50 THEN t0.c50 WHEN v0.c0 THEN t0.c50 END) NOT BETWEEN ((((t0.c50))>((t0.c50)))) AND ((- (v0.c0))))))) GROUP BY t0.c50, v0.c0 UNION SELECT ALL t0.c50, v0.c0 FROM v0 NATURAL JOIN t0 WHERE (((((CASE WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN '-817353768' WHEN 't{~1F&X' THEN v0.c0 WHEN t0.c50 THEN t0.c50 WHEN v0.c0 THEN t0.c50 END) NOT BETWEEN ((((t0.c50))>((t0.c50)))) AND ((- (v0.c0))))) ISNULL)) GROUP BY t0.c50, v0.c0;
SELECT t0.c50, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c50, v0.c0;
SELECT ALL rt0.c1 FROM rt0, v0, t0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, v0, t0 GROUP BY rt0.c1 HAVING ((MIN(AVG(SUM('j>KOg')))) ISNULL) UNION ALL SELECT ALL rt0.c1 FROM rt0, v0, t0 GROUP BY rt0.c1 HAVING (NOT (((MIN(AVG(SUM('j>KOg')))) ISNULL))) UNION ALL SELECT rt0.c1 FROM rt0, v0, t0 GROUP BY rt0.c1 HAVING ((((MIN(AVG(SUM('j>KOg')))) ISNULL)) ISNULL);
SELECT ALL MAX((('-604047341' COLLATE NOCASE) ISNULL)) FROM rt0, v0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS BLOB)) UNION ALL SELECT * FROM v0 WHERE ((NOT (CAST(v0.c0 COLLATE NOCASE AS BLOB)))) UNION ALL SELECT * FROM v0 WHERE (((CAST(v0.c0 COLLATE NOCASE AS BLOB)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c1 IN ()) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((rt0.c1 IN ()) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1 IN ()) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c1;
SELECT v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE (v0.c0) GROUP BY v0.c0, rt0.c2, rt0.c1 UNION SELECT v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0, rt0.c2, rt0.c1 UNION SELECT v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0, rt0.c2, rt0.c1;
SELECT ALL v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0, t0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0, t0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0 HAVING CAST(MIN(rt0.c1) AS BLOB) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0, t0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0 HAVING (NOT (CAST(MIN(rt0.c1) AS BLOB))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0, t0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0 HAVING ((CAST(MIN(rt0.c1) AS BLOB)) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0, t0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0, t0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0 HAVING CAST(MIN(rt0.c1) AS BLOB) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0, t0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0 HAVING (NOT (CAST(MIN(rt0.c1) AS BLOB))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0, t0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0 HAVING ((CAST(MIN(rt0.c1) AS BLOB)) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0, t0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0;
SELECT * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE (rt0.c2) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((rt0.c2) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM v0, t0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM v0, t0, rt0 WHERE (((((rt0.c0) NOTNULL))<(((((v0.c0)AND(t0.c50)))OR(t0.c50))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM v0, t0, rt0 WHERE ((NOT (((((rt0.c0) NOTNULL))<(((((v0.c0)AND(t0.c50)))OR(t0.c50))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM v0, t0, rt0 WHERE (((((((rt0.c0) NOTNULL))<(((((v0.c0)AND(t0.c50)))OR(t0.c50))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM v0, t0, rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED WHERE (rt0.c1) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT v0.c0, rt0.c1, rt0.c2 FROM rt0, t0, v0 GROUP BY v0.c0, rt0.c1, rt0.c2;
SELECT v0.c0, rt0.c1, rt0.c2 FROM rt0, t0, v0 GROUP BY v0.c0, rt0.c1, rt0.c2 HAVING CASE MAX(MIN(rt0.c0))  WHEN CAST(COUNT(*) AS NUMERIC) THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END END UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c2 FROM rt0, t0, v0 GROUP BY v0.c0, rt0.c1, rt0.c2 HAVING (NOT (CASE MAX(MIN(rt0.c0))  WHEN CAST(COUNT(*) AS NUMERIC) THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END END)) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2 FROM rt0, t0, v0 GROUP BY v0.c0, rt0.c1, rt0.c2 HAVING ((CASE MAX(MIN(rt0.c0))  WHEN CAST(COUNT(*) AS NUMERIC) THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END END) ISNULL);
SELECT ALL t0.c50 FROM t0, v0;
SELECT t0.c50 FROM t0, v0 WHERE (CAST(x'389566db' AS BLOB)) UNION ALL SELECT ALL t0.c50 FROM t0, v0 WHERE ((NOT (CAST(x'389566db' AS BLOB)))) UNION ALL SELECT t0.c50 FROM t0, v0 WHERE (((CAST(x'389566db' AS BLOB)) ISNULL));
SELECT ALL t0.c50 FROM t0, v0;
SELECT DISTINCT t0.c50, rt0.c0 FROM rt0, t0, v0;
SELECT DISTINCT t0.c50, rt0.c0 FROM rt0, t0, v0 WHERE ((+ (MIN(NULL, rt0.c0)))) UNION SELECT DISTINCT t0.c50, rt0.c0 FROM rt0, t0, v0 WHERE ((NOT ((+ (MIN(NULL, rt0.c0)))))) UNION SELECT DISTINCT t0.c50, rt0.c0 FROM rt0, t0, v0 WHERE ((((+ (MIN(NULL, rt0.c0)))) ISNULL));
SELECT DISTINCT t0.c50, rt0.c0 FROM rt0, t0, v0;
SELECT rt0.c2, rt0.c1, t0.c50, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c50, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, t0.c50, rt0.c0 FROM t0, rt0 WHERE (((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE) GROUP BY rt0.c2, rt0.c1, t0.c50, rt0.c0 UNION SELECT rt0.c2, rt0.c1, t0.c50, rt0.c0 FROM t0, rt0 WHERE ((NOT (((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE))) GROUP BY rt0.c2, rt0.c1, t0.c50, rt0.c0 UNION SELECT rt0.c2, rt0.c1, t0.c50, rt0.c0 FROM t0, rt0 WHERE (((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2, rt0.c1, t0.c50, rt0.c0;
SELECT rt0.c2, rt0.c1, t0.c50, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c50, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, t0, v0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, t0, v0 GROUP BY rt0.c2, rt0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(rt0.c2)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, t0, v0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, t0, v0 GROUP BY rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(rt0.c2))) ISNULL);
SELECT ALL t0.c50, v0.c0 FROM t0, v0;
SELECT ALL t0.c50, v0.c0 FROM t0, v0 WHERE (((((v0.c0) NOTNULL))<>(v0.c0))) UNION ALL SELECT t0.c50, v0.c0 FROM t0, v0 WHERE ((NOT (((((v0.c0) NOTNULL))<>(v0.c0))))) UNION ALL SELECT t0.c50, v0.c0 FROM t0, v0 WHERE (((((((v0.c0) NOTNULL))<>(v0.c0))) ISNULL));
SELECT ALL t0.c50, v0.c0 FROM t0, v0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0, t0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0, t0 WHERE (((v0.c0)<((t0.c50 IN ())))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0, t0 WHERE ((NOT (((v0.c0)<((t0.c50 IN ())))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0, t0 WHERE (((((v0.c0)<((t0.c50 IN ())))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0, t0;
SELECT ALL rt0.c1, v0.c0, t0.c50, rt0.c0 FROM rt0, v0, t0 GROUP BY rt0.c1, v0.c0, t0.c50, rt0.c0;
SELECT ALL rt0.c1, v0.c0, t0.c50, rt0.c0 FROM rt0, v0, t0 WHERE (((json_type(rt0.c0))>(x'0e5d'))) GROUP BY rt0.c1, v0.c0, t0.c50, rt0.c0 UNION SELECT rt0.c1, v0.c0, t0.c50, rt0.c0 FROM rt0, v0, t0 WHERE ((NOT (((json_type(rt0.c0))>(x'0e5d'))))) GROUP BY rt0.c1, v0.c0, t0.c50, rt0.c0 UNION SELECT ALL rt0.c1, v0.c0, t0.c50, rt0.c0 FROM rt0, v0, t0 WHERE (((((json_type(rt0.c0))>(x'0e5d'))) ISNULL)) GROUP BY rt0.c1, v0.c0, t0.c50, rt0.c0;
SELECT ALL rt0.c1, v0.c0, t0.c50, rt0.c0 FROM rt0, v0, t0 GROUP BY rt0.c1, v0.c0, t0.c50, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0;
SELECT * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE ((~ (CAST(rt0.c2 AS NUMERIC)))) UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT ((~ (CAST(rt0.c2 AS NUMERIC)))))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((((~ (CAST(rt0.c2 AS NUMERIC)))) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT * FROM v0, rt0, t0 NOT INDEXED;
SELECT DISTINCT * FROM v0, rt0, t0 WHERE ((((rt0.c1)) BETWEEN (((rt0.c0 IN ()))) AND ((((v0.c0)OR(rt0.c2)))))) UNION SELECT DISTINCT * FROM v0, rt0, t0 WHERE ((NOT ((((rt0.c1)) BETWEEN (((rt0.c0 IN ()))) AND ((((v0.c0)OR(rt0.c2)))))))) UNION SELECT DISTINCT * FROM v0, rt0, t0 WHERE ((((((rt0.c1)) BETWEEN (((rt0.c0 IN ()))) AND ((((v0.c0)OR(rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0, t0 NOT INDEXED;
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 WHERE (CAST((((t0.c50, t0.c50, t0.c50)) NOT BETWEEN ((t0.c50, t0.c50, t0.c50)) AND ((t0.c50, '*F#', t0.c50))) AS REAL)) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM t0 WHERE ((NOT (CAST((((t0.c50, t0.c50, t0.c50)) NOT BETWEEN ((t0.c50, t0.c50, t0.c50)) AND ((t0.c50, '*F#', t0.c50))) AS REAL)))) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM t0 WHERE (((CAST((((t0.c50, t0.c50, t0.c50)) NOT BETWEEN ((t0.c50, t0.c50, t0.c50)) AND ((t0.c50, '*F#', t0.c50))) AS REAL)) ISNULL)) GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING COUNT(TOTAL(MIN(GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (COUNT(TOTAL(MIN(GROUP_CONCAT(rt0.c1)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((COUNT(TOTAL(MIN(GROUP_CONCAT(rt0.c1))))) ISNULL);
SELECT MAX(t0.c50) FROM v0 NOT INDEXED, t0 ORDER BY CASE WHEN t0.c50 COLLATE NOCASE THEN ((((t0.c50)OR(t0.c50)))OR(v0.c0)) END ASC;
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END AS NUMERIC)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CAST(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END AS NUMERIC)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END AS NUMERIC)) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 WHERE ((((~ (t0.c50))) BETWEEN (0.4340375601486308) AND (t0.c50))) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM t0 WHERE ((NOT ((((~ (t0.c50))) BETWEEN (0.4340375601486308) AND (t0.c50))))) GROUP BY t0.c50 UNION SELECT t0.c50 FROM t0 WHERE ((((((~ (t0.c50))) BETWEEN (0.4340375601486308) AND (t0.c50))) ISNULL)) GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50 HAVING MAX(GROUP_CONCAT(AVG(TOTAL(t0.c50)))) UNION ALL SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING (NOT (MAX(GROUP_CONCAT(AVG(TOTAL(t0.c50)))))) UNION ALL SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50 HAVING ((MAX(GROUP_CONCAT(AVG(TOTAL(t0.c50))))) ISNULL);
SELECT ALL SUM(((((rt0.c1 IN ())))>=((((rt0.c0)AND(rt0.c0)))))) FROM rt0, v0;
SELECT * FROM t0, rt0, v0;
SELECT * FROM t0, rt0, v0 WHERE (CAST(((rt0.c1)||(t0.c50)) AS BLOB)) UNION ALL SELECT * FROM t0, rt0, v0 WHERE ((NOT (CAST(((rt0.c1)||(t0.c50)) AS BLOB)))) UNION ALL SELECT ALL * FROM t0, rt0, v0 WHERE (((CAST(((rt0.c1)||(t0.c50)) AS BLOB)) ISNULL));
SELECT * FROM t0, rt0, v0;
SELECT DISTINCT t0.c50, rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM rt0, t0, v0;
SELECT DISTINCT t0.c50, rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM rt0, t0, v0 WHERE (((rt0.c2 COLLATE NOCASE)OR((('\nC1')IS NOT(0.9965522751197657))))) UNION SELECT DISTINCT t0.c50, rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM rt0 NOT INDEXED, t0, v0 WHERE ((NOT (((rt0.c2 COLLATE NOCASE)OR((('\nC1')IS NOT(0.9965522751197657))))))) UNION SELECT DISTINCT t0.c50, rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM rt0, t0, v0 WHERE (((((rt0.c2 COLLATE NOCASE)OR((('\nC1')IS NOT(0.9965522751197657))))) ISNULL));
SELECT DISTINCT t0.c50, rt0.c2, rt0.c1, v0.c0, rt0.c0 FROM rt0, t0, v0;
SELECT rt0.c0 FROM rt0, v0, t0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, v0, t0 WHERE (CAST((+ (rt0.c1)) AS INTEGER)) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, v0, t0 WHERE ((NOT (CAST((+ (rt0.c1)) AS INTEGER)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, v0, t0 WHERE (((CAST((+ (rt0.c1)) AS INTEGER)) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, v0, t0 GROUP BY rt0.c0;
SELECT t0.c50 FROM t0, v0 GROUP BY t0.c50;
SELECT t0.c50 FROM t0, v0 GROUP BY t0.c50 HAVING ((SUM(v0.c0)) NOT NULL) UNION ALL SELECT ALL t0.c50 FROM t0, v0 GROUP BY t0.c50 HAVING (NOT (((SUM(v0.c0)) NOT NULL))) UNION ALL SELECT ALL t0.c50 FROM t0, v0 GROUP BY t0.c50 HAVING ((((SUM(v0.c0)) NOT NULL)) ISNULL);
SELECT t0.c50 FROM t0, v0 GROUP BY t0.c50;
SELECT t0.c50 FROM t0, v0 GROUP BY t0.c50 HAVING ((SUM(v0.c0)) NOT NULL) UNION ALL SELECT ALL t0.c50 FROM t0, v0 GROUP BY t0.c50 HAVING (NOT (((SUM(v0.c0)) NOT NULL))) UNION ALL SELECT ALL t0.c50 FROM t0, v0 GROUP BY t0.c50 HAVING ((((SUM(v0.c0)) NOT NULL)) ISNULL);
SELECT t0.c50 FROM t0, v0 GROUP BY t0.c50;
SELECT rt0.c0, rt0.c2, v0.c0, t0.c50 FROM rt0, t0, v0;
SELECT ALL rt0.c0, rt0.c2, v0.c0, t0.c50 FROM rt0, t0, v0 WHERE (NULL) UNION ALL SELECT ALL rt0.c0, rt0.c2, v0.c0, t0.c50 FROM rt0, t0, v0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt0.c0, rt0.c2, v0.c0, t0.c50 FROM rt0, t0, v0 WHERE (((NULL) ISNULL));
SELECT rt0.c0, rt0.c2, v0.c0, t0.c50 FROM rt0, t0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c50, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY t0.c50, rt0.c1, rt0.c0, rt0.c2;
SELECT t0.c50, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR(x'')))OR(CASE t0.c50  WHEN rt0.c1 THEN rt0.c1 END))) GROUP BY t0.c50, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL t0.c50, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((NOT ((((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR(x'')))OR(CASE t0.c50  WHEN rt0.c1 THEN rt0.c1 END))))) GROUP BY t0.c50, rt0.c1, rt0.c0, rt0.c2 UNION SELECT t0.c50, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((((((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR(x'')))OR(CASE t0.c50  WHEN rt0.c1 THEN rt0.c1 END))) ISNULL)) GROUP BY t0.c50, rt0.c1, rt0.c0, rt0.c2;
SELECT t0.c50, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY t0.c50, rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING SUM((((rt0.c2)) NOT BETWEEN ((AVG(SUM(rt0.c0)))) AND ((GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (SUM((((rt0.c2)) NOT BETWEEN ((AVG(SUM(rt0.c0)))) AND ((GROUP_CONCAT(rt0.c1))))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((SUM((((rt0.c2)) NOT BETWEEN ((AVG(SUM(rt0.c0)))) AND ((GROUP_CONCAT(rt0.c1)))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((('-1450340492')OR(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))AND(x'eef2')))OR(rt0.c0)))))AND(((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((('-1450340492')OR(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))AND(x'eef2')))OR(rt0.c0)))))AND(((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((('-1450340492')OR(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))AND(x'eef2')))OR(rt0.c0)))))AND(((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((NOT (-1.80497333E9)))IS NOT(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((NOT (-1.80497333E9)))IS NOT(((((v0.c0)OR(v0.c0)))OR(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((NOT (-1.80497333E9)))IS NOT(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c2, rt0.c0, t0.c50, v0.c0 FROM t0, rt0, v0 GROUP BY rt0.c2, rt0.c0, t0.c50, v0.c0;
SELECT rt0.c2, rt0.c0, t0.c50, v0.c0 FROM t0, rt0, v0 WHERE (LIKELIHOOD(DISTINCT (('1998322458')%(v0.c0)), 0.27164501657519724)) GROUP BY rt0.c2, rt0.c0, t0.c50, v0.c0 UNION SELECT ALL rt0.c2, rt0.c0, t0.c50, v0.c0 FROM t0, rt0, v0 WHERE ((NOT (LIKELIHOOD(DISTINCT (('1998322458')%(v0.c0)), 0.27164501657519724)))) GROUP BY rt0.c2, rt0.c0, t0.c50, v0.c0 UNION SELECT ALL rt0.c2, rt0.c0, t0.c50, v0.c0 FROM t0, rt0, v0 WHERE (((LIKELIHOOD(DISTINCT (('1998322458')%(v0.c0)), 0.27164501657519724)) ISNULL)) GROUP BY rt0.c2, rt0.c0, t0.c50, v0.c0;
SELECT ALL rt0.c2, rt0.c0, t0.c50, v0.c0 FROM t0, rt0, v0 GROUP BY rt0.c2, rt0.c0, t0.c50, v0.c0;
SELECT ALL v0.c0 FROM v0, t0 CROSS JOIN rt0 ON ((rt0.c1 COLLATE BINARY)<=(CAST(rt0.c2 AS REAL))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t0 CROSS JOIN rt0 ON ((rt0.c1 COLLATE BINARY)<=(CAST(rt0.c2 AS REAL))) GROUP BY v0.c0 HAVING ((MAX(rt0.c1)) IS TRUE) UNION ALL SELECT ALL v0.c0 FROM v0, t0 CROSS JOIN rt0 ON ((rt0.c1 COLLATE BINARY)<=(CAST(rt0.c2 AS REAL))) GROUP BY v0.c0 HAVING (NOT (((MAX(rt0.c1)) IS TRUE))) UNION ALL SELECT ALL v0.c0 FROM v0, t0 CROSS JOIN rt0 ON ((rt0.c1 COLLATE BINARY)<=(CAST(rt0.c2 AS REAL))) GROUP BY v0.c0 HAVING ((((MAX(rt0.c1)) IS TRUE)) ISNULL);
SELECT ALL v0.c0 FROM v0, t0 CROSS JOIN rt0 ON ((rt0.c1 COLLATE BINARY)<=(CAST(rt0.c2 AS REAL))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t0 CROSS JOIN rt0 ON ((rt0.c1 COLLATE BINARY)<=(CAST(rt0.c2 AS REAL))) GROUP BY v0.c0 HAVING ((MAX(rt0.c1)) IS TRUE) UNION ALL SELECT ALL v0.c0 FROM v0, t0 CROSS JOIN rt0 ON ((rt0.c1 COLLATE BINARY)<=(CAST(rt0.c2 AS REAL))) GROUP BY v0.c0 HAVING (NOT (((MAX(rt0.c1)) IS TRUE))) UNION ALL SELECT ALL v0.c0 FROM v0, t0 CROSS JOIN rt0 ON ((rt0.c1 COLLATE BINARY)<=(CAST(rt0.c2 AS REAL))) GROUP BY v0.c0 HAVING ((((MAX(rt0.c1)) IS TRUE)) ISNULL);
SELECT ALL v0.c0 FROM v0, t0 CROSS JOIN rt0 ON ((rt0.c1 COLLATE BINARY)<=(CAST(rt0.c2 AS REAL))) GROUP BY v0.c0;
SELECT ALL v0.c0, t0.c50 FROM t0, v0;
SELECT ALL v0.c0, t0.c50 FROM t0, v0 WHERE ((((CASE WHEN v0.c0 THEN t0.c50 END, (- (v0.c0)), (v0.c0 IN ())))<(((v0.c0 IN ()), (t0.c50 IN ()), ((((((((NULL)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(t0.c50)))))) UNION ALL SELECT ALL v0.c0, t0.c50 FROM t0, v0 WHERE ((NOT ((((CASE WHEN v0.c0 THEN t0.c50 END, (- (v0.c0)), (v0.c0 IN ())))<(((v0.c0 IN ()), (t0.c50 IN ()), ((((((((NULL)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(t0.c50)))))))) UNION ALL SELECT ALL v0.c0, t0.c50 FROM t0, v0 WHERE ((((((CASE WHEN v0.c0 THEN t0.c50 END, (- (v0.c0)), (v0.c0 IN ())))<(((v0.c0 IN ()), (t0.c50 IN ()), ((((((((NULL)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(t0.c50)))))) ISNULL));
SELECT ALL v0.c0, t0.c50 FROM t0, v0;
SELECT DISTINCT * FROM t0, rt0, v0;
SELECT DISTINCT * FROM t0, rt0, v0 WHERE (((((rt0.c2) IS FALSE))IS NOT(CAST('1iVZsO' AS NUMERIC)))) UNION SELECT DISTINCT * FROM t0, rt0, v0 WHERE ((NOT (((((rt0.c2) IS FALSE))IS NOT(CAST('1iVZsO' AS NUMERIC)))))) UNION SELECT DISTINCT * FROM t0, rt0, v0 WHERE (((((((rt0.c2) IS FALSE))IS NOT(CAST('1iVZsO' AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM t0, rt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0 COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0 COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c0 COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN v0 ON t0.c50 COLLATE RTRIM GROUP BY v0.c0, rt0.c1;
SELECT v0.c0, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN v0 ON t0.c50 COLLATE RTRIM GROUP BY v0.c0, rt0.c1 HAVING SUM(COUNT(rt0.c1)) UNION ALL SELECT v0.c0, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN v0 ON t0.c50 COLLATE RTRIM GROUP BY v0.c0, rt0.c1 HAVING (NOT (SUM(COUNT(rt0.c1)))) UNION ALL SELECT v0.c0, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN v0 ON t0.c50 COLLATE RTRIM GROUP BY v0.c0, rt0.c1 HAVING ((SUM(COUNT(rt0.c1))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (t0.c50) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (t0.c50))) UNION ALL SELECT ALL * FROM t0 WHERE (((t0.c50) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((0.2662232296514663) IS TRUE)) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((0.2662232296514663) IS TRUE)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((0.2662232296514663) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c1, v0.c0 FROM v0, rt0, t0 GROUP BY rt0.c0, rt0.c1, v0.c0;
SELECT rt0.c0, rt0.c1, v0.c0 FROM v0, rt0, t0 WHERE (x'') GROUP BY rt0.c0, rt0.c1, v0.c0 UNION SELECT ALL rt0.c0, rt0.c1, v0.c0 FROM v0, rt0, t0 WHERE ((NOT (x''))) GROUP BY rt0.c0, rt0.c1, v0.c0 UNION SELECT rt0.c0, rt0.c1, v0.c0 FROM v0, rt0, t0 WHERE (((x'') ISNULL)) GROUP BY rt0.c0, rt0.c1, v0.c0;
SELECT rt0.c0, rt0.c1, v0.c0 FROM v0, rt0, t0 GROUP BY rt0.c0, rt0.c1, v0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING CAST(CASE WHEN SUM(rt0.c1) THEN rt0.c0 ELSE AVG(MAX(rt0.c0)) END AS REAL) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (CAST(CASE WHEN SUM(rt0.c1) THEN rt0.c0 ELSE AVG(MAX(rt0.c0)) END AS REAL))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((CAST(CASE WHEN SUM(rt0.c1) THEN rt0.c0 ELSE AVG(MAX(rt0.c0)) END AS REAL)) ISNULL);
SELECT ALL rt0.c0, v0.c0, rt0.c1, t0.c50 FROM v0, t0, rt0;
SELECT ALL rt0.c0, v0.c0, rt0.c1, t0.c50 FROM v0, t0, rt0 WHERE (((rt0.c1)+(rt0.c0)) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1, t0.c50 FROM v0, t0, rt0 WHERE ((NOT (((rt0.c1)+(rt0.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c1, t0.c50 FROM v0, t0, rt0 WHERE (((((rt0.c1)+(rt0.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c0, v0.c0, rt0.c1, t0.c50 FROM v0, t0, rt0;
SELECT DISTINCT t0.c50 FROM t0;
SELECT DISTINCT t0.c50 FROM t0 WHERE ((((((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50)), ((t0.c50)OR(t0.c50)), CASE t0.c50  WHEN t0.c50 THEN x'cdf2' WHEN t0.c50 THEN t0.c50 WHEN 0x67832590 THEN t0.c50 END))=((((t0.c50)<(t0.c50)), CASE t0.c50  WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c50 WHEN '鏽''uCm}gRP' THEN t0.c50 ELSE '?濿mB' END, (t0.c50 IN ()))))) UNION SELECT DISTINCT t0.c50 FROM t0 WHERE ((NOT ((((((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50)), ((t0.c50)OR(t0.c50)), CASE t0.c50  WHEN t0.c50 THEN x'cdf2' WHEN t0.c50 THEN t0.c50 WHEN 0x67832590 THEN t0.c50 END))=((((t0.c50)<(t0.c50)), CASE t0.c50  WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c50 WHEN '鏽''uCm}gRP' THEN t0.c50 ELSE '?濿mB' END, (t0.c50 IN ()))))))) UNION SELECT DISTINCT t0.c50 FROM t0 WHERE ((((((((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50)), ((t0.c50)OR(t0.c50)), CASE t0.c50  WHEN t0.c50 THEN x'cdf2' WHEN t0.c50 THEN t0.c50 WHEN 0x67832590 THEN t0.c50 END))==((((t0.c50)<(t0.c50)), CASE t0.c50  WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c50 WHEN '鏽''uCm}gRP' THEN t0.c50 ELSE '?濿mB' END, (t0.c50 IN ()))))) ISNULL));
SELECT DISTINCT t0.c50 FROM t0;
SELECT rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0 WHERE (((((v0.c0)<(rt0.c1)))-(((rt0.c1)<<(rt0.c2))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0 WHERE ((NOT (((((v0.c0)<(rt0.c1)))-(((rt0.c1)<<(rt0.c2))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0 WHERE (((((((v0.c0)<(rt0.c1)))-(((rt0.c1)<<(rt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0, t0.c50, rt0.c1 FROM t0, v0 FULL OUTER JOIN rt0 ON rt0.c0 GROUP BY rt0.c2, rt0.c0, t0.c50, rt0.c1;
SELECT rt0.c2, rt0.c0, t0.c50, rt0.c1 FROM t0, v0 NOT INDEXED FULL OUTER JOIN rt0 ON rt0.c0 GROUP BY rt0.c2, rt0.c0, t0.c50, rt0.c1 HAVING SUM(GROUP_CONCAT(MAX(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c0, t0.c50, rt0.c1 FROM t0, v0 FULL OUTER JOIN rt0 ON rt0.c0 GROUP BY rt0.c2, rt0.c0, t0.c50, rt0.c1 HAVING (NOT (SUM(GROUP_CONCAT(MAX(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, t0.c50, rt0.c1 FROM t0, v0 FULL OUTER JOIN rt0 ON rt0.c0 GROUP BY rt0.c2, rt0.c0, t0.c50, rt0.c1 HAVING ((SUM(GROUP_CONCAT(MAX(rt0.c2)))) ISNULL);
SELECT ALL v0.c0 FROM v0 NATURAL JOIN t0;
SELECT ALL v0.c0 FROM v0 NATURAL JOIN t0 WHERE (((t0.c50)IS NOT(t0.c50)) COLLATE BINARY) UNION ALL SELECT v0.c0 FROM v0 NATURAL JOIN t0 WHERE ((NOT (((t0.c50)IS NOT(t0.c50)) COLLATE BINARY))) UNION ALL SELECT v0.c0 FROM v0 NATURAL JOIN t0 WHERE (((((t0.c50)IS NOT(t0.c50)) COLLATE BINARY) ISNULL));
SELECT ALL v0.c0 FROM v0 NATURAL JOIN t0;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON CASE CAST(rt0.c1 AS REAL)  WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)) THEN ((rt0.c1)/(v0.c0)) WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c1 COLLATE RTRIM WHEN ((v0.c0)*(v0.c0)) THEN (rt0.c1 IN ()) WHEN rt0.c0 THEN CAST(rt0.c0 AS INTEGER) WHEN (((rt0.c2, rt0.c2, rt0.c2))!=((rt0.c1, rt0.c2, rt0.c0))) THEN rt0.c0 END;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON CASE CAST(rt0.c1 AS REAL)  WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)) THEN ((rt0.c1)/(v0.c0)) WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c1 COLLATE RTRIM WHEN ((v0.c0)*(v0.c0)) THEN (rt0.c1 IN ()) WHEN rt0.c0 THEN CAST(rt0.c0 AS INTEGER) WHEN (((rt0.c2, rt0.c2, rt0.c2))!=((rt0.c1, rt0.c2, rt0.c0))) THEN rt0.c0 END WHERE (((((((rt0.c1) ISNULL))OR(CAST(0.9767869007658748 AS TEXT))))OR(''))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON CASE CAST(rt0.c1 AS REAL)  WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)) THEN ((rt0.c1)/(v0.c0)) WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c1 COLLATE RTRIM WHEN ((v0.c0)*(v0.c0)) THEN (rt0.c1 IN ()) WHEN rt0.c0 THEN CAST(rt0.c0 AS INTEGER) WHEN (((rt0.c2, rt0.c2, rt0.c2))!=((rt0.c1, rt0.c2, rt0.c0))) THEN rt0.c0 END WHERE ((NOT (((((((rt0.c1) ISNULL))OR(CAST(0.9767869007658748 AS TEXT))))OR(''))))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON CASE CAST(rt0.c1 AS REAL)  WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)) THEN ((rt0.c1)/(v0.c0)) WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c1 COLLATE RTRIM WHEN ((v0.c0)*(v0.c0)) THEN (rt0.c1 IN ()) WHEN rt0.c0 THEN CAST(rt0.c0 AS INTEGER) WHEN (((rt0.c2, rt0.c2, rt0.c2))<>((rt0.c1, rt0.c2, rt0.c0))) THEN rt0.c0 END WHERE (((((((((rt0.c1) ISNULL))OR(CAST(0.9767869007658748 AS TEXT))))OR(''))) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON CASE CAST(rt0.c1 AS REAL)  WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)) THEN ((rt0.c1)/(v0.c0)) WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c1 COLLATE RTRIM WHEN ((v0.c0)*(v0.c0)) THEN (rt0.c1 IN ()) WHEN rt0.c0 THEN CAST(rt0.c0 AS INTEGER) WHEN (((rt0.c2, rt0.c2, rt0.c2))!=((rt0.c1, rt0.c2, rt0.c0))) THEN rt0.c0 END;
SELECT ALL rt0.c2, rt0.c0 FROM v0, t0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM v0 NOT INDEXED, t0, rt0 WHERE (CASE WHEN (~ (t0.c50)) THEN v0.c0 COLLATE BINARY END) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM v0, t0, rt0 WHERE ((NOT (CASE WHEN (~ (t0.c50)) THEN v0.c0 COLLATE BINARY END))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM v0, t0, rt0 WHERE (((CASE WHEN (~ (t0.c50)) THEN v0.c0 COLLATE BINARY END) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM v0, t0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON '' FULL OUTER JOIN t0 ON LIKELY(UPPER(DISTINCT '-998073595')) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON '' FULL OUTER JOIN t0 ON LIKELY(UPPER(DISTINCT '-998073595')) GROUP BY rt0.c1, rt0.c2 HAVING ((AVG(rt0.c1))<(MAX(rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON '' FULL OUTER JOIN t0 ON LIKELY(UPPER(DISTINCT '-998073595')) GROUP BY rt0.c1, rt0.c2 HAVING (NOT (((AVG(rt0.c1))<(MAX(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON '' FULL OUTER JOIN t0 ON LIKELY(UPPER(DISTINCT '-998073595')) GROUP BY rt0.c1, rt0.c2 HAVING ((((AVG(rt0.c1))<(MAX(rt0.c0)))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON '' FULL OUTER JOIN t0 ON LIKELY(UPPER(DISTINCT '-998073595')) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON '' FULL OUTER JOIN t0 ON LIKELY(UPPER(DISTINCT '-998073595')) GROUP BY rt0.c1, rt0.c2 HAVING ((AVG(rt0.c1))<(MAX(rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON '' FULL OUTER JOIN t0 ON LIKELY(UPPER(DISTINCT '-998073595')) GROUP BY rt0.c1, rt0.c2 HAVING (NOT (((AVG(rt0.c1))<(MAX(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON '' FULL OUTER JOIN t0 ON LIKELY(UPPER(DISTINCT '-998073595')) GROUP BY rt0.c1, rt0.c2 HAVING ((((AVG(rt0.c1))<(MAX(rt0.c0)))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON '' FULL OUTER JOIN t0 ON LIKELY(UPPER(DISTINCT '-998073595')) GROUP BY rt0.c1, rt0.c2;
SELECT ALL TOTAL((NOT (CASE WHEN rt0.c0 THEN v0.c0 END))) FROM rt0, v0, t0 ORDER BY CASE UPPER(rt0.c2)  WHEN '{Caꚻ' COLLATE NOCASE THEN 'm_I0킃&,' WHEN (- (rt0.c0)) THEN IFNULL(DISTINCT rt0.c2, rt0.c1) WHEN x'' THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END ELSE ((((v0.c0)AND(rt0.c2)))AND(rt0.c0)) END;
SELECT rt0.c2 FROM v0 NATURAL JOIN rt0;
SELECT rt0.c2 FROM v0 NATURAL JOIN rt0 WHERE (((rt0.c1)+(rt0.c1)) COLLATE BINARY) UNION ALL SELECT rt0.c2 FROM v0 NATURAL JOIN rt0 WHERE ((NOT (((rt0.c1)+(rt0.c1)) COLLATE BINARY))) UNION ALL SELECT rt0.c2 FROM v0 NATURAL JOIN rt0 WHERE (((((rt0.c1)+(rt0.c1)) COLLATE BINARY) ISNULL));
SELECT rt0.c2 FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT v0.c0, rt0.c1, t0.c50, rt0.c0 FROM t0, rt0 LEFT OUTER JOIN v0 ON ((((((t0.c50)AND(0.8138276305587339)))AND(rt0.c2))) BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))) AND (-1941269756));
SELECT DISTINCT v0.c0, rt0.c1, t0.c50, rt0.c0 FROM t0, rt0 LEFT OUTER JOIN v0 ON ((((((t0.c50)AND(0.8138276305587339)))AND(rt0.c2))) BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))) AND (-1941269756)) WHERE (((((t0.c50))!=((rt0.c0))) IN ())) UNION SELECT DISTINCT v0.c0, rt0.c1, t0.c50, rt0.c0 FROM t0, rt0 LEFT OUTER JOIN v0 ON ((((((t0.c50)AND(0.8138276305587339)))AND(rt0.c2))) BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))) AND (-1941269756)) WHERE ((NOT (((((t0.c50))!=((rt0.c0))) IN ())))) UNION SELECT DISTINCT v0.c0, rt0.c1, t0.c50, rt0.c0 FROM t0, rt0 LEFT OUTER JOIN v0 ON ((((((t0.c50)AND(0.8138276305587339)))AND(rt0.c2))) BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))) AND (-1941269756)) WHERE (((((((t0.c50))<>((rt0.c0))) IN ())) ISNULL));
SELECT DISTINCT v0.c0, rt0.c1, t0.c50, rt0.c0 FROM t0, rt0 LEFT OUTER JOIN v0 ON ((((((t0.c50)AND(0.8138276305587339)))AND(rt0.c2))) BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))) AND (-1941269756));
SELECT rt0.c0 FROM v0, t0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM v0, t0, rt0 WHERE ((((v0.c0)<=(rt0.c1)) IN (((rt0.c0)IS NOT(x'4234'))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM v0, t0, rt0 WHERE ((NOT ((((v0.c0)<=(rt0.c1)) IN (((rt0.c0)IS NOT(x'4234'))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM v0, t0, rt0 WHERE ((((((v0.c0)<=(rt0.c1)) IN (((rt0.c0)IS NOT(x'4234'))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM v0, t0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 FROM t0 CROSS JOIN rt0 ON CASE WHEN ((((((((rt0.c2)AND(t0.c50)))AND(t0.c50)))OR(v0.c0)))AND(v0.c0)) THEN ((v0.c0)<=(rt0.c1)) ELSE CAST(x'3bd5' AS INTEGER) END LEFT OUTER JOIN v0 ON ((((TYPEOF(DISTINCT rt0.c1))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))))AND((~ (v0.c0)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50;
SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 FROM t0 CROSS JOIN rt0 ON CASE WHEN ((((((((rt0.c2)AND(t0.c50)))AND(t0.c50)))OR(v0.c0)))AND(v0.c0)) THEN ((v0.c0)<=(rt0.c1)) ELSE CAST(x'3bd5' AS INTEGER) END LEFT OUTER JOIN v0 ON ((((TYPEOF(DISTINCT rt0.c1))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))))AND((~ (v0.c0)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 HAVING x'' UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 FROM t0 CROSS JOIN rt0 ON CASE WHEN ((((((((rt0.c2)AND(t0.c50)))AND(t0.c50)))OR(v0.c0)))AND(v0.c0)) THEN ((v0.c0)<=(rt0.c1)) ELSE CAST(x'3bd5' AS INTEGER) END LEFT OUTER JOIN v0 ON ((((TYPEOF(DISTINCT rt0.c1))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))))AND((~ (v0.c0)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 HAVING (NOT (x'')) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 FROM t0 CROSS JOIN rt0 ON CASE WHEN ((((((((rt0.c2)AND(t0.c50)))AND(t0.c50)))OR(v0.c0)))AND(v0.c0)) THEN ((v0.c0)<=(rt0.c1)) ELSE CAST(x'3bd5' AS INTEGER) END LEFT OUTER JOIN v0 ON ((((TYPEOF(DISTINCT rt0.c1))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))))AND((~ (v0.c0)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 HAVING ((x'') ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 FROM t0 CROSS JOIN rt0 ON CASE WHEN ((((((((rt0.c2)AND(t0.c50)))AND(t0.c50)))OR(v0.c0)))AND(v0.c0)) THEN ((v0.c0)<=(rt0.c1)) ELSE CAST(x'3bd5' AS INTEGER) END LEFT OUTER JOIN v0 ON ((((TYPEOF(DISTINCT rt0.c1))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))))AND((~ (v0.c0)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50;
SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 FROM t0 CROSS JOIN rt0 ON CASE WHEN ((((((((rt0.c2)AND(t0.c50)))AND(t0.c50)))OR(v0.c0)))AND(v0.c0)) THEN ((v0.c0)<=(rt0.c1)) ELSE CAST(x'3bd5' AS INTEGER) END LEFT OUTER JOIN v0 ON ((((TYPEOF(DISTINCT rt0.c1))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))))AND((~ (v0.c0)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 HAVING x'' UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 FROM t0 CROSS JOIN rt0 ON CASE WHEN ((((((((rt0.c2)AND(t0.c50)))AND(t0.c50)))OR(v0.c0)))AND(v0.c0)) THEN ((v0.c0)<=(rt0.c1)) ELSE CAST(x'3bd5' AS INTEGER) END LEFT OUTER JOIN v0 ON ((((TYPEOF(DISTINCT rt0.c1))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))))AND((~ (v0.c0)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 HAVING (NOT (x'')) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 FROM t0 CROSS JOIN rt0 ON CASE WHEN ((((((((rt0.c2)AND(t0.c50)))AND(t0.c50)))OR(v0.c0)))AND(v0.c0)) THEN ((v0.c0)<=(rt0.c1)) ELSE CAST(x'3bd5' AS INTEGER) END LEFT OUTER JOIN v0 ON ((((TYPEOF(DISTINCT rt0.c1))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))))AND((~ (v0.c0)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 HAVING ((x'') ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50 FROM t0 CROSS JOIN rt0 ON CASE WHEN ((((((((rt0.c2)AND(t0.c50)))AND(t0.c50)))OR(v0.c0)))AND(v0.c0)) THEN ((v0.c0)<=(rt0.c1)) ELSE CAST(x'3bd5' AS INTEGER) END LEFT OUTER JOIN v0 ON ((((TYPEOF(DISTINCT rt0.c1))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))))AND((~ (v0.c0)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0, t0.c50;
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN (NOT (v0.c0)) THEN 0.28269778584826666 END) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (CASE WHEN (NOT (v0.c0)) THEN 0.28269778584826666 END))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((CASE WHEN (NOT (v0.c0)) THEN 0.28269778584826666 END) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT t0.c50 FROM t0;
SELECT DISTINCT t0.c50 FROM t0 WHERE ((NOT (t0.c50)) COLLATE RTRIM) UNION SELECT DISTINCT t0.c50 FROM t0 WHERE ((NOT ((NOT (t0.c50)) COLLATE RTRIM))) UNION SELECT DISTINCT t0.c50 FROM t0 WHERE ((((NOT (t0.c50)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT t0.c50 FROM t0;
SELECT rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON (((((((('b')AND(rt0.c0)))AND(rt0.c0)))AND(TRIM(DISTINCT rt0.c0, v0.c0))))OR((((rt0.c0))<((v0.c0))))) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON (((((((('b')AND(rt0.c0)))AND(rt0.c0)))AND(TRIM(DISTINCT rt0.c0, v0.c0))))OR((((rt0.c0))<((v0.c0))))) WHERE (CAST(HEX('53113464') AS TEXT)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON (((((((('b')AND(rt0.c0)))AND(rt0.c0)))AND(TRIM(DISTINCT rt0.c0, v0.c0))))OR((((rt0.c0))<((v0.c0))))) WHERE ((NOT (CAST(HEX('53113464') AS TEXT)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON (((((((('b')AND(rt0.c0)))AND(rt0.c0)))AND(TRIM(DISTINCT rt0.c0, v0.c0))))OR((((rt0.c0))<((v0.c0))))) WHERE (((CAST(HEX('53113464') AS TEXT)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 LEFT OUTER JOIN v0 ON (((((((('b')AND(rt0.c0)))AND(rt0.c0)))AND(TRIM(DISTINCT rt0.c0, v0.c0))))OR((((rt0.c0))<((v0.c0))))) GROUP BY rt0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(SUM(MAX(COUNT(AVG(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(SUM(MAX(COUNT(AVG(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(SUM(MAX(COUNT(AVG(v0.c0)))))) ISNULL);
SELECT rt0.c2 FROM v0, rt0, t0;
SELECT ALL rt0.c2 FROM v0, rt0, t0 WHERE (((((t0.c50)+(v0.c0))) IS FALSE)) UNION ALL SELECT rt0.c2 FROM v0, rt0, t0 WHERE ((NOT (((((t0.c50)+(v0.c0))) IS FALSE)))) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0, t0 WHERE (((((((t0.c50)+(v0.c0))) IS FALSE)) ISNULL));
SELECT rt0.c2 FROM v0, rt0, t0;
SELECT DISTINCT * FROM rt0, v0, t0;
SELECT DISTINCT * FROM rt0, v0, t0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) AS BLOB)) UNION SELECT DISTINCT * FROM rt0, v0, t0 WHERE ((NOT (CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) AS BLOB)))) UNION SELECT DISTINCT * FROM rt0, v0, t0 WHERE (((CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt0, v0, t0;
SELECT ALL t0.c50, v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0, t0 GROUP BY t0.c50, v0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT t0.c50, v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0, t0 WHERE (((CAST(v0.c0 AS REAL))AND((- (v0.c0))))) GROUP BY t0.c50, v0.c0, rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL t0.c50, v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0, t0 WHERE ((NOT (((CAST(v0.c0 AS REAL))AND((- (v0.c0))))))) GROUP BY t0.c50, v0.c0, rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL t0.c50, v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0, t0 WHERE (((((CAST(v0.c0 AS REAL))AND((- (v0.c0))))) ISNULL)) GROUP BY t0.c50, v0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL t0.c50, v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, v0, t0 GROUP BY t0.c50, v0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, t0.c50 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, t0.c50;
SELECT ALL rt0.c1, rt0.c2, t0.c50 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, t0.c50 HAVING CASE SUM(MAX(rt0.c1))  WHEN TOTAL(t0.c50) THEN MAX(COUNT(t0.c50)) END UNION ALL SELECT ALL rt0.c1, rt0.c2, t0.c50 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, t0.c50 HAVING (NOT (CASE SUM(MAX(rt0.c1))  WHEN TOTAL(t0.c50) THEN MAX(COUNT(t0.c50)) END)) UNION ALL SELECT ALL rt0.c1, rt0.c2, t0.c50 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, t0.c50 HAVING ((CASE SUM(MAX(rt0.c1))  WHEN TOTAL(t0.c50) THEN MAX(COUNT(t0.c50)) END) ISNULL);
SELECT rt0.c2 FROM rt0, v0, t0;
SELECT rt0.c2 FROM rt0, v0, t0 WHERE (((((x'')-(rt0.c0)))<<((((t0.c50, v0.c0, rt0.c1))!=((v0.c0, v0.c0, v0.c0)))))) UNION ALL SELECT rt0.c2 FROM rt0, v0, t0 WHERE ((NOT (((((x'')-(rt0.c0)))<<((((t0.c50, v0.c0, rt0.c1))!=((v0.c0, v0.c0, v0.c0)))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0, t0 WHERE (((((((x'')-(rt0.c0)))<<((((t0.c50, v0.c0, rt0.c1))<>((v0.c0, v0.c0, v0.c0)))))) ISNULL));
SELECT rt0.c2 FROM rt0, v0, t0;
SELECT DISTINCT t0.c50 FROM t0;
SELECT DISTINCT t0.c50 FROM t0 WHERE ((((NULL) NOT BETWEEN (t0.c50) AND (t0.c50)) IN ())) UNION SELECT DISTINCT t0.c50 FROM t0 WHERE ((NOT ((((NULL) NOT BETWEEN (t0.c50) AND (t0.c50)) IN ())))) UNION SELECT DISTINCT t0.c50 FROM t0 WHERE ((((((NULL) NOT BETWEEN (t0.c50) AND (t0.c50)) IN ())) ISNULL));
SELECT DISTINCT t0.c50 FROM t0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((x'')) AND ((rt0.c1))))LIKE(((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c0)) BETWEEN ((x'')) AND ((rt0.c1))))LIKE(((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((rt0.c0)) BETWEEN ((x'')) AND ((rt0.c1))))LIKE(((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50 HAVING (MIN(MIN(t0.c50)) IN (COUNT(''), AVG(t0.c50))) UNION ALL SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING (NOT ((MIN(MIN(t0.c50)) IN (COUNT(''), AVG(t0.c50))))) UNION ALL SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING (((MIN(MIN(t0.c50)) IN (COUNT(''), AVG(t0.c50)))) ISNULL);
SELECT t0.c50 FROM t0;
SELECT t0.c50 FROM t0 WHERE (((t0.c50)%(t0.c50)) COLLATE RTRIM) UNION ALL SELECT t0.c50 FROM t0 WHERE ((NOT (((t0.c50)%(t0.c50)) COLLATE RTRIM))) UNION ALL SELECT ALL t0.c50 FROM t0 WHERE (((((t0.c50)%(t0.c50)) COLLATE RTRIM) ISNULL));
SELECT t0.c50 FROM t0;
SELECT DISTINCT v0.c0, t0.c50 FROM t0 CROSS JOIN v0 ON 0.7810850683376349;
SELECT DISTINCT v0.c0, t0.c50 FROM t0 CROSS JOIN v0 ON 0.7810850683376349 WHERE (((v0.c0) NOTNULL)) UNION SELECT DISTINCT v0.c0, t0.c50 FROM t0 CROSS JOIN v0 ON 0.7810850683376349 WHERE ((NOT (((v0.c0) NOTNULL)))) UNION SELECT DISTINCT v0.c0, t0.c50 FROM t0 CROSS JOIN v0 ON 0.7810850683376349 WHERE (((((v0.c0) NOTNULL)) ISNULL));
SELECT DISTINCT v0.c0, t0.c50 FROM t0 CROSS JOIN v0 ON 0.7810850683376349;
SELECT t0.c50, rt0.c0, rt0.c2, rt0.c1 FROM rt0, t0, v0 GROUP BY t0.c50, rt0.c0, rt0.c2, rt0.c1;
SELECT t0.c50, rt0.c0, rt0.c2, rt0.c1 FROM rt0, t0, v0 WHERE (((((UPPER(DISTINCT rt0.c1))OR((((rt0.c0)) NOT BETWEEN ((t0.c50)) AND ((v0.c0))))))AND(((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(v0.c0)))OR(rt0.c0)))AND(v0.c0))))) GROUP BY t0.c50, rt0.c0, rt0.c2, rt0.c1 UNION SELECT t0.c50, rt0.c0, rt0.c2, rt0.c1 FROM rt0, t0, v0 WHERE ((NOT (((((UPPER(DISTINCT rt0.c1))OR((((rt0.c0)) NOT BETWEEN ((t0.c50)) AND ((v0.c0))))))AND(((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(v0.c0)))OR(rt0.c0)))AND(v0.c0))))))) GROUP BY t0.c50, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL t0.c50, rt0.c0, rt0.c2, rt0.c1 FROM rt0, t0, v0 WHERE (((((((UPPER(DISTINCT rt0.c1))OR((((rt0.c0)) NOT BETWEEN ((t0.c50)) AND ((v0.c0))))))AND(((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(v0.c0)))OR(rt0.c0)))AND(v0.c0))))) ISNULL)) GROUP BY t0.c50, rt0.c0, rt0.c2, rt0.c1;
SELECT t0.c50, rt0.c0, rt0.c2, rt0.c1 FROM rt0, t0, v0 GROUP BY t0.c50, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL t0.c50, rt0.c0 FROM rt0 INNER JOIN t0 ON CASE WHEN ((rt0.c0)>(rt0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (0.14420448853188406)) END GROUP BY t0.c50, rt0.c0;
SELECT t0.c50, rt0.c0 FROM rt0 INNER JOIN t0 ON CASE WHEN ((rt0.c0)>(rt0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (0.14420448853188406)) END GROUP BY t0.c50, rt0.c0 HAVING MIN(CASE WHEN t0.c50 THEN COUNT(AVG(rt0.c2)) END) UNION ALL SELECT ALL t0.c50, rt0.c0 FROM rt0 INNER JOIN t0 ON CASE WHEN ((rt0.c0)>(rt0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (0.14420448853188406)) END GROUP BY t0.c50, rt0.c0 HAVING (NOT (MIN(CASE WHEN t0.c50 THEN COUNT(AVG(rt0.c2)) END))) UNION ALL SELECT t0.c50, rt0.c0 FROM rt0 INNER JOIN t0 ON CASE WHEN ((rt0.c0)>(rt0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (0.14420448853188406)) END GROUP BY t0.c50, rt0.c0 HAVING ((MIN(CASE WHEN t0.c50 THEN COUNT(AVG(rt0.c2)) END)) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (json_valid(((t0.c50)!=(t0.c50)))) ORDER BY x'' ASC;
SELECT * FROM t0 WHERE ((NOT (json_valid(((t0.c50)<>(t0.c50)))))) ORDER BY x'' ASC;
SELECT * FROM t0 WHERE (((json_valid(((t0.c50)!=(t0.c50)))) ISNULL)) ORDER BY x'' ASC;
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((rt0.c2) ISNULL)) IS TRUE)) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((rt0.c2) ISNULL)) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((rt0.c2) ISNULL)) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50;
SELECT t0.c50 FROM t0 WHERE ((((t0.c50, NULL, t0.c50)) NOT BETWEEN ((((t0.c50)OR(t0.c50)), ((t0.c50) BETWEEN (t0.c50) AND (t0.c50)), '44763380')) AND ((((t0.c50)%(0.8710872066782857)), CASE t0.c50  WHEN t0.c50 THEN t0.c50 END, t0.c50 COLLATE NOCASE)))) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM t0 WHERE ((NOT ((((t0.c50, NULL, t0.c50)) NOT BETWEEN ((((t0.c50)OR(t0.c50)), ((t0.c50) BETWEEN (t0.c50) AND (t0.c50)), '44763380')) AND ((((t0.c50)%(0.8710872066782857)), CASE t0.c50  WHEN t0.c50 THEN t0.c50 END, t0.c50 COLLATE NOCASE)))))) GROUP BY t0.c50 UNION SELECT t0.c50 FROM t0 WHERE ((((((t0.c50, NULL, t0.c50)) NOT BETWEEN ((((t0.c50)OR(t0.c50)), ((t0.c50) BETWEEN (t0.c50) AND (t0.c50)), '44763380')) AND ((((t0.c50)%(0.8710872066782857)), CASE t0.c50  WHEN t0.c50 THEN t0.c50 END, t0.c50 COLLATE NOCASE)))) ISNULL)) GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL rt0.c2 FROM v0 CROSS JOIN rt0 ON TYPEOF(DISTINCT t0.c50) RIGHT OUTER JOIN t0 ON (((rt0.c0 IN ()))-((NOT (v0.c0)))) GROUP BY rt0.c2;
SELECT * FROM t0;
SELECT * FROM t0 WHERE ('떞[') UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ('떞['))) UNION ALL SELECT ALL * FROM t0 WHERE ((('떞[') ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c50 FROM t0;
SELECT DISTINCT t0.c50 FROM t0 WHERE (((((((t0.c50, t0.c50, t0.c50))<>((t0.c50, t0.c50, t0.c50)))))>=((((t0.c50) IS FALSE))))) UNION SELECT DISTINCT t0.c50 FROM t0 WHERE ((NOT (((((((t0.c50, t0.c50, t0.c50))!=((t0.c50, t0.c50, t0.c50)))))>=((((t0.c50) IS FALSE))))))) UNION SELECT DISTINCT t0.c50 FROM t0 WHERE (((((((((t0.c50, t0.c50, t0.c50))<>((t0.c50, t0.c50, t0.c50)))))>=((((t0.c50) IS FALSE))))) ISNULL));
SELECT DISTINCT t0.c50 FROM t0;
SELECT ALL t0.c50 FROM rt0, t0, v0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM rt0, t0, v0 WHERE (((((((rt0.c0)AND(t0.c50)))OR(rt0.c0))) NOT NULL)) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM rt0, t0, v0 WHERE ((NOT (((((((rt0.c0)AND(t0.c50)))OR(rt0.c0))) NOT NULL)))) GROUP BY t0.c50 UNION SELECT t0.c50 FROM rt0, t0, v0 WHERE (((((((((rt0.c0)AND(t0.c50)))OR(rt0.c0))) NOT NULL)) ISNULL)) GROUP BY t0.c50;
SELECT ALL t0.c50 FROM rt0, t0, v0 GROUP BY t0.c50;
SELECT v0.c0, t0.c50 FROM t0, v0 GROUP BY v0.c0, t0.c50;
SELECT v0.c0, t0.c50 FROM t0, v0 GROUP BY v0.c0, t0.c50 HAVING ((MIN(TOTAL(MIN(t0.c50))))LIKE(((AVG(v0.c0)) BETWEEN (v0.c0) AND (MAX(MIN(t0.c50)))))) UNION ALL SELECT ALL v0.c0, t0.c50 FROM t0, v0 GROUP BY v0.c0, t0.c50 HAVING (NOT (((MIN(TOTAL(MIN(t0.c50))))LIKE(((AVG(v0.c0)) BETWEEN (v0.c0) AND (MAX(MIN(t0.c50)))))))) UNION ALL SELECT ALL v0.c0, t0.c50 FROM t0, v0 GROUP BY v0.c0, t0.c50 HAVING ((((MIN(TOTAL(MIN(t0.c50))))LIKE(((AVG(v0.c0)) BETWEEN (v0.c0) AND (MAX(MIN(t0.c50))))))) ISNULL);
SELECT t0.c50 FROM t0;
SELECT t0.c50 FROM t0 WHERE (LIKELIHOOD(t0.c50, 0.8029967019478514)) UNION ALL SELECT t0.c50 FROM t0 WHERE ((NOT (LIKELIHOOD(t0.c50, 0.8029967019478514)))) UNION ALL SELECT ALL t0.c50 FROM t0 WHERE (((LIKELIHOOD(t0.c50, 0.8029967019478514)) ISNULL));
SELECT t0.c50 FROM t0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM v0, rt0 WHERE (HEX(IFNULL(DISTINCT rt0.c0, rt0.c2))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (HEX(IFNULL(DISTINCT rt0.c0, rt0.c2))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM v0, rt0 WHERE (((HEX(IFNULL(DISTINCT rt0.c0, rt0.c2))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM v0, rt0;
SELECT rt0.c0, v0.c0, rt0.c1, t0.c50, rt0.c2 FROM v0 CROSS JOIN t0 ON ((((rt0.c1)*(rt0.c0))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (((t0.c50) BETWEEN (rt0.c0) AND (0.9379226890117083)))) INNER JOIN rt0 ON (((((v0.c0)<<(t0.c50))))==(((((0xffffffffca167bf3))==((t0.c50)))))) GROUP BY rt0.c0, v0.c0, rt0.c1, t0.c50, rt0.c2;
SELECT rt0.c0, v0.c0, rt0.c1, t0.c50, rt0.c2 FROM v0 CROSS JOIN t0 ON ((((rt0.c1)*(rt0.c0))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (((t0.c50) BETWEEN (rt0.c0) AND (0.9379226890117083)))) INNER JOIN rt0 ON (((((v0.c0)<<(t0.c50))))==(((((0Xffffffffca167bf3))=((t0.c50)))))) WHERE (rt0.c0) GROUP BY rt0.c0, v0.c0, rt0.c1, t0.c50, rt0.c2 UNION SELECT ALL rt0.c0, v0.c0, rt0.c1, t0.c50, rt0.c2 FROM v0 CROSS JOIN t0 ON ((((rt0.c1)*(rt0.c0))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (((t0.c50) BETWEEN (rt0.c0) AND (0.9379226890117083)))) INNER JOIN rt0 ON (((((v0.c0)<<(t0.c50))))==(((((0Xffffffffca167bf3))=((t0.c50)))))) WHERE ((NOT (rt0.c0))) GROUP BY rt0.c0, v0.c0, rt0.c1, t0.c50, rt0.c2 UNION SELECT rt0.c0, v0.c0, rt0.c1, t0.c50, rt0.c2 FROM v0 CROSS JOIN t0 ON ((((rt0.c1)*(rt0.c0))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (((t0.c50) BETWEEN (rt0.c0) AND (0.9379226890117083)))) INNER JOIN rt0 ON (((((v0.c0)<<(t0.c50))))=(((((0Xffffffffca167bf3))=((t0.c50)))))) WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c0, v0.c0, rt0.c1, t0.c50, rt0.c2;
SELECT rt0.c0, v0.c0, rt0.c1, t0.c50, rt0.c2 FROM v0 CROSS JOIN t0 ON ((((rt0.c1)*(rt0.c0))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (((t0.c50) BETWEEN (rt0.c0) AND (0.9379226890117083)))) INNER JOIN rt0 ON (((((v0.c0)<<(t0.c50))))==(((((0xffffffffca167bf3))==((t0.c50)))))) GROUP BY rt0.c0, v0.c0, rt0.c1, t0.c50, rt0.c2;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50 HAVING COUNT(COUNT(COUNT(COUNT(t0.c50)))) UNION ALL SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING (NOT (COUNT(COUNT(COUNT(COUNT(t0.c50)))))) UNION ALL SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING ((COUNT(COUNT(COUNT(COUNT(t0.c50))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((- (((((rt0.c0)OR(rt0.c0)))OR(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((- (((((rt0.c0)OR(rt0.c0)))OR(rt0.c1))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((- (((((rt0.c0)OR(rt0.c0)))OR(rt0.c1))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((v0.c0 IN ()) COLLATE RTRIM) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((v0.c0 IN ()) COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0 IN ()) COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0, t0.c50 FROM t0, v0 GROUP BY v0.c0, t0.c50;
SELECT v0.c0, t0.c50 FROM t0, v0 WHERE (((((((((CAST(t0.c50 AS INTEGER))AND(x'')))OR((~ (t0.c50)))))AND(((t0.c50)/(v0.c0)))))OR(NULL))) GROUP BY v0.c0, t0.c50 UNION SELECT ALL v0.c0, t0.c50 FROM t0, v0 WHERE ((NOT (((((((((CAST(t0.c50 AS INTEGER))AND(x'')))OR((~ (t0.c50)))))AND(((t0.c50)/(v0.c0)))))OR(NULL))))) GROUP BY v0.c0, t0.c50 UNION SELECT v0.c0, t0.c50 FROM t0, v0 WHERE (((((((((((CAST(t0.c50 AS INTEGER))AND(x'')))OR((~ (t0.c50)))))AND(((t0.c50)/(v0.c0)))))OR(NULL))) ISNULL)) GROUP BY v0.c0, t0.c50;
SELECT ALL v0.c0, t0.c50 FROM t0, v0 GROUP BY v0.c0, t0.c50;
SELECT rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2 HAVING SUM(((MAX(MIN(COUNT(*)))) NOT NULL)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (SUM(((MAX(MIN(COUNT(*)))) NOT NULL)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2 HAVING ((SUM(((MAX(MIN(COUNT(*)))) NOT NULL))) ISNULL);
SELECT v0.c0, t0.c50 FROM v0, t0;
SELECT ALL v0.c0, t0.c50 FROM v0, t0 WHERE ((((t0.c50 IN ())) NOT BETWEEN (t0.c50) AND (DATETIME(t0.c50, t0.c50, v0.c0)))) UNION ALL SELECT v0.c0, t0.c50 FROM v0, t0 WHERE ((NOT ((((t0.c50 IN ())) NOT BETWEEN (t0.c50) AND (DATETIME(t0.c50, t0.c50, v0.c0)))))) UNION ALL SELECT ALL v0.c0, t0.c50 FROM v0, t0 WHERE ((((((t0.c50 IN ())) NOT BETWEEN (t0.c50) AND (DATETIME(t0.c50, t0.c50, v0.c0)))) ISNULL));
SELECT v0.c0, t0.c50 FROM v0, t0;
SELECT DISTINCT t0.c50 FROM t0;
SELECT DISTINCT t0.c50 FROM t0 WHERE ((((((t0.c50) BETWEEN (t0.c50) AND (t0.c50)), (((t0.c50))<((t0.c50))), t0.c50))>((((t0.c50)-(t0.c50)), CASE WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END, t0.c50 COLLATE BINARY)))) UNION SELECT DISTINCT t0.c50 FROM t0 WHERE ((NOT ((((((t0.c50) BETWEEN (t0.c50) AND (t0.c50)), (((t0.c50))<((t0.c50))), t0.c50))>((((t0.c50)-(t0.c50)), CASE WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END, t0.c50 COLLATE BINARY)))))) UNION SELECT DISTINCT t0.c50 FROM t0 WHERE ((((((((t0.c50) BETWEEN (t0.c50) AND (t0.c50)), (((t0.c50))<((t0.c50))), t0.c50))>((((t0.c50)-(t0.c50)), CASE WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END, t0.c50 COLLATE BINARY)))) ISNULL));
SELECT DISTINCT t0.c50 FROM t0;
SELECT ALL t0.c50 FROM v0, t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM v0, t0 WHERE (json_array(((((t0.c50)AND(v0.c0)))OR(t0.c50)), t0.c50)) GROUP BY t0.c50 UNION SELECT t0.c50 FROM v0, t0 WHERE ((NOT (json_array(((((t0.c50)AND(v0.c0)))OR(t0.c50)), t0.c50)))) GROUP BY t0.c50 UNION SELECT t0.c50 FROM v0, t0 WHERE (((json_array(((((t0.c50)AND(v0.c0)))OR(t0.c50)), t0.c50)) ISNULL)) GROUP BY t0.c50;
SELECT ALL t0.c50 FROM v0, t0 GROUP BY t0.c50;
SELECT ALL rt0.c1, t0.c50, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c50, rt0.c0;
SELECT ALL rt0.c1, t0.c50, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c50, rt0.c0 HAVING NULL UNION ALL SELECT ALL rt0.c1, t0.c50, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c50, rt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c1, t0.c50, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c50, rt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c1, t0.c50, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c50, rt0.c0;
SELECT ALL rt0.c1, t0.c50, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c50, rt0.c0 HAVING NULL UNION ALL SELECT ALL rt0.c1, t0.c50, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c50, rt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c1, t0.c50, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c50, rt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c1, t0.c50, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c50, rt0.c0;
SELECT ALL t0.c50 FROM t0;
SELECT t0.c50 FROM t0 WHERE (NULLIF(DISTINCT (((t0.c50))<((t0.c50))), ((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50)))) UNION ALL SELECT t0.c50 FROM t0 WHERE ((NOT (NULLIF(DISTINCT (((t0.c50))<((t0.c50))), ((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50)))))) UNION ALL SELECT ALL t0.c50 FROM t0 WHERE (((NULLIF(DISTINCT (((t0.c50))<((t0.c50))), ((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50)))) ISNULL));
SELECT ALL t0.c50 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN t0.c50 THEN t0.c50 ELSE '1523770209' END) NOTNULL)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((CASE WHEN t0.c50 THEN t0.c50 ELSE '1523770209' END) NOTNULL)))) UNION SELECT DISTINCT * FROM t0 WHERE (((((CASE WHEN t0.c50 THEN t0.c50 ELSE '1523770209' END) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c1, rt0.c2, v0.c0, t0.c50, rt0.c0 FROM t0 FULL OUTER JOIN v0 ON x'' CROSS JOIN rt0 ON CAST(0.9166403471047966 AS REAL) GROUP BY rt0.c1, rt0.c2, v0.c0, t0.c50, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, v0.c0, t0.c50, rt0.c0 FROM t0 FULL OUTER JOIN v0 ON x'' CROSS JOIN rt0 ON CAST(0.9166403471047966 AS REAL) WHERE (v0.c0) GROUP BY rt0.c1, rt0.c2, v0.c0, t0.c50, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, v0.c0, t0.c50, rt0.c0 FROM t0 FULL OUTER JOIN v0 ON x'' CROSS JOIN rt0 ON CAST(0.9166403471047966 AS REAL) WHERE ((NOT (v0.c0))) GROUP BY rt0.c1, rt0.c2, v0.c0, t0.c50, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, v0.c0, t0.c50, rt0.c0 FROM t0 FULL OUTER JOIN v0 ON x'' CROSS JOIN rt0 ON CAST(0.9166403471047966 AS REAL) WHERE (((v0.c0) ISNULL)) GROUP BY rt0.c1, rt0.c2, v0.c0, t0.c50, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, v0.c0, t0.c50, rt0.c0 FROM t0 FULL OUTER JOIN v0 ON x'' CROSS JOIN rt0 ON CAST(0.9166403471047966 AS REAL) GROUP BY rt0.c1, rt0.c2, v0.c0, t0.c50, rt0.c0;
SELECT v0.c0, rt0.c1, t0.c50, rt0.c2, rt0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((CAST(t0.c50 AS INTEGER)) NOT NULL) CROSS JOIN rt0 ON ((((t0.c50) BETWEEN (rt0.c0) AND (rt0.c2)))<=(((NULL)<=(t0.c50)))) GROUP BY v0.c0, rt0.c1, t0.c50, rt0.c2, rt0.c0;
SELECT v0.c0, rt0.c1, t0.c50, rt0.c2, rt0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((CAST(t0.c50 AS INTEGER)) NOT NULL) CROSS JOIN rt0 ON ((((t0.c50) BETWEEN (rt0.c0) AND (rt0.c2)))<=(((NULL)<=(t0.c50)))) GROUP BY v0.c0, rt0.c1, t0.c50, rt0.c2, rt0.c0 HAVING CASE WHEN TOTAL(COUNT(t0.c50)) THEN COUNT(NULL) WHEN CASE WHEN t0.c50 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END THEN GROUP_CONCAT(MIN(COUNT(MAX(SUM(GROUP_CONCAT(rt0.c1)))))) WHEN COALESCE(DISTINCT rt0.c0, t0.c50, rt0.c2, '7Z') THEN COUNT(SUM(SUM(rt0.c1))) ELSE (rt0.c2 IN ()) END UNION ALL SELECT v0.c0, rt0.c1, t0.c50, rt0.c2, rt0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((CAST(t0.c50 AS INTEGER)) NOT NULL) CROSS JOIN rt0 ON ((((t0.c50) BETWEEN (rt0.c0) AND (rt0.c2)))<=(((NULL)<=(t0.c50)))) GROUP BY v0.c0, rt0.c1, t0.c50, rt0.c2, rt0.c0 HAVING (NOT (CASE WHEN TOTAL(COUNT(t0.c50)) THEN COUNT(NULL) WHEN CASE WHEN t0.c50 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END THEN GROUP_CONCAT(MIN(COUNT(MAX(SUM(GROUP_CONCAT(rt0.c1)))))) WHEN COALESCE(DISTINCT rt0.c0, t0.c50, rt0.c2, '7Z') THEN COUNT(SUM(SUM(rt0.c1))) ELSE (rt0.c2 IN ()) END)) UNION ALL SELECT ALL v0.c0, rt0.c1, t0.c50, rt0.c2, rt0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((CAST(t0.c50 AS INTEGER)) NOT NULL) CROSS JOIN rt0 ON ((((t0.c50) BETWEEN (rt0.c0) AND (rt0.c2)))<=(((NULL)<=(t0.c50)))) GROUP BY v0.c0, rt0.c1, t0.c50, rt0.c2, rt0.c0 HAVING ((CASE WHEN TOTAL(COUNT(t0.c50)) THEN COUNT(NULL) WHEN CASE WHEN t0.c50 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END THEN GROUP_CONCAT(MIN(COUNT(MAX(SUM(GROUP_CONCAT(rt0.c1)))))) WHEN COALESCE(DISTINCT rt0.c0, t0.c50, rt0.c2, '7Z') THEN COUNT(SUM(SUM(rt0.c1))) ELSE (rt0.c2 IN ()) END) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0))<>(((rt0.c2 IN ()))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c0))<>(((rt0.c2 IN ()))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c0))<>(((rt0.c2 IN ()))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((rt0.c0)LIKE(rt0.c2))) IS TRUE)) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0)LIKE(rt0.c2))) IS TRUE)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((((rt0.c0)LIKE(rt0.c2))) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM v0, rt0 NATURAL JOIN t0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0 NATURAL JOIN t0 WHERE (((((LIKELY(DISTINCT rt0.c0))OR(CAST(rt0.c0 AS NUMERIC))))AND((NOT (rt0.c0))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM v0, rt0 NATURAL JOIN t0 WHERE ((NOT (((((LIKELY(DISTINCT rt0.c0))OR(CAST(rt0.c0 AS NUMERIC))))AND((NOT (rt0.c0))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM v0, rt0 NATURAL JOIN t0 WHERE (((((((LIKELY(DISTINCT rt0.c0))OR(CAST(rt0.c0 AS NUMERIC))))AND((NOT (rt0.c0))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0 NATURAL JOIN t0 GROUP BY rt0.c1;
SELECT rt0.c1, v0.c0, rt0.c2 FROM t0, rt0 LEFT OUTER JOIN v0 ON 2017550789 GROUP BY rt0.c1, v0.c0, rt0.c2;
SELECT ALL rt0.c1, v0.c0, rt0.c2 FROM t0, rt0 LEFT OUTER JOIN v0 ON 2017550789 GROUP BY rt0.c1, v0.c0, rt0.c2 HAVING ((COUNT(COUNT(rt0.c0)))==(MIN(v0.c0))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c2 FROM t0, rt0 LEFT OUTER JOIN v0 ON 2017550789 GROUP BY rt0.c1, v0.c0, rt0.c2 HAVING (NOT (((COUNT(COUNT(rt0.c0)))=(MIN(v0.c0))))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c2 FROM t0, rt0 LEFT OUTER JOIN v0 ON 2017550789 GROUP BY rt0.c1, v0.c0, rt0.c2 HAVING ((((COUNT(COUNT(rt0.c0)))==(MIN(v0.c0)))) ISNULL);
SELECT rt0.c2, v0.c0, t0.c50, rt0.c1 FROM t0, v0, rt0;
SELECT ALL rt0.c2, v0.c0, t0.c50, rt0.c1 FROM t0, v0, rt0 WHERE (((((((rt0.c2)OR(x'')))AND(rt0.c1))) BETWEEN (1.7976931348623157E308) AND ((((t0.c50, rt0.c2, rt0.c1))<=((rt0.c0, t0.c50, rt0.c2)))))) UNION ALL SELECT ALL rt0.c2, v0.c0, t0.c50, rt0.c1 FROM t0, v0, rt0 WHERE ((NOT (((((((rt0.c2)OR(x'')))AND(rt0.c1))) BETWEEN (1.7976931348623157E308) AND ((((t0.c50, rt0.c2, rt0.c1))<=((rt0.c0, t0.c50, rt0.c2)))))))) UNION ALL SELECT rt0.c2, v0.c0, t0.c50, rt0.c1 FROM t0, v0, rt0 WHERE (((((((((rt0.c2)OR(x'')))AND(rt0.c1))) BETWEEN (1.7976931348623157E308) AND ((((t0.c50, rt0.c2, rt0.c1))<=((rt0.c0, t0.c50, rt0.c2)))))) ISNULL));
SELECT rt0.c2, v0.c0, t0.c50, rt0.c1 FROM t0, v0, rt0;
SELECT DISTINCT * FROM rt0, v0, t0;
SELECT DISTINCT * FROM rt0, v0, t0 WHERE (((CAST(rt0.c1 AS NUMERIC)) NOT NULL)) UNION SELECT DISTINCT * FROM rt0, v0, t0 WHERE ((NOT (((CAST(rt0.c1 AS NUMERIC)) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0, v0, t0 WHERE (((((CAST(rt0.c1 AS NUMERIC)) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0, v0, t0;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 WHERE (((x'790a4f8b')>(CAST(t0.c50 AS NUMERIC)))) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM t0 WHERE ((NOT (((x'790a4f8b')>(CAST(t0.c50 AS NUMERIC)))))) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM t0 WHERE (((((x'790a4f8b')>(CAST(t0.c50 AS NUMERIC)))) ISNULL)) GROUP BY t0.c50;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING v0.c0 UNION ALL SELECT v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((v0.c0) ISNULL);
SELECT v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING v0.c0 UNION ALL SELECT v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((v0.c0) ISNULL);
SELECT v0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL t0.c50 FROM t0;
SELECT ALL t0.c50 FROM t0 WHERE (t0.c50) UNION ALL SELECT ALL t0.c50 FROM t0 WHERE ((NOT (t0.c50))) UNION ALL SELECT t0.c50 FROM t0 WHERE (((t0.c50) ISNULL));
SELECT ALL t0.c50 FROM t0;
SELECT DISTINCT v0.c0, rt0.c2, t0.c50 FROM rt0, t0, v0;
SELECT DISTINCT v0.c0, rt0.c2, t0.c50 FROM rt0, t0, v0 WHERE ((- (CASE WHEN rt0.c1 THEN rt0.c0 WHEN t0.c50 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c50 THEN rt0.c1 WHEN t0.c50 THEN rt0.c1 ELSE t0.c50 END))) UNION SELECT DISTINCT v0.c0, rt0.c2, t0.c50 FROM rt0, t0, v0 WHERE ((NOT ((- (CASE WHEN rt0.c1 THEN rt0.c0 WHEN t0.c50 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c50 THEN rt0.c1 WHEN t0.c50 THEN rt0.c1 ELSE t0.c50 END))))) UNION SELECT DISTINCT v0.c0, rt0.c2, t0.c50 FROM rt0, t0, v0 WHERE ((((- (CASE WHEN rt0.c1 THEN rt0.c0 WHEN t0.c50 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c50 THEN rt0.c1 WHEN t0.c50 THEN rt0.c1 ELSE t0.c50 END))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c2, t0.c50 FROM rt0, t0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((~ (v0.c0)))%(CAST(x'' AS REAL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((~ (v0.c0)))%(CAST(x'' AS REAL)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((~ (v0.c0)))%(CAST(x'' AS REAL)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c1, t0.c50, rt0.c0 FROM t0 LEFT OUTER JOIN v0 ON v0.c0 INNER JOIN rt0 ON rt0.c2 GROUP BY rt0.c2, rt0.c1, t0.c50, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, t0.c50, rt0.c0 FROM t0 LEFT OUTER JOIN v0 ON v0.c0 INNER JOIN rt0 ON rt0.c2 GROUP BY rt0.c2, rt0.c1, t0.c50, rt0.c0 HAVING ((UNICODE(v0.c0)) BETWEEN (rt0.c2) AND (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1, t0.c50, rt0.c0 FROM t0 LEFT OUTER JOIN v0 ON v0.c0 INNER JOIN rt0 ON rt0.c2 GROUP BY rt0.c2, rt0.c1, t0.c50, rt0.c0 HAVING (NOT (((UNICODE(v0.c0)) BETWEEN (rt0.c2) AND (COUNT(*))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, t0.c50, rt0.c0 FROM t0 LEFT OUTER JOIN v0 ON v0.c0 INNER JOIN rt0 ON rt0.c2 GROUP BY rt0.c2, rt0.c1, t0.c50, rt0.c0 HAVING ((((UNICODE(v0.c0)) BETWEEN (rt0.c2) AND (COUNT(*)))) ISNULL);
SELECT rt0.c2, rt0.c1, t0.c50, rt0.c0 FROM t0 LEFT OUTER JOIN v0 ON v0.c0 INNER JOIN rt0 ON rt0.c2 GROUP BY rt0.c2, rt0.c1, t0.c50, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, t0.c50, rt0.c0 FROM t0 LEFT OUTER JOIN v0 ON v0.c0 INNER JOIN rt0 ON rt0.c2 GROUP BY rt0.c2, rt0.c1, t0.c50, rt0.c0 HAVING ((UNICODE(v0.c0)) BETWEEN (rt0.c2) AND (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1, t0.c50, rt0.c0 FROM t0 LEFT OUTER JOIN v0 ON v0.c0 INNER JOIN rt0 ON rt0.c2 GROUP BY rt0.c2, rt0.c1, t0.c50, rt0.c0 HAVING (NOT (((UNICODE(v0.c0)) BETWEEN (rt0.c2) AND (COUNT(*))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, t0.c50, rt0.c0 FROM t0 LEFT OUTER JOIN v0 ON v0.c0 INNER JOIN rt0 ON rt0.c2 GROUP BY rt0.c2, rt0.c1, t0.c50, rt0.c0 HAVING ((((UNICODE(v0.c0)) BETWEEN (rt0.c2) AND (COUNT(*)))) ISNULL);
SELECT rt0.c2, rt0.c1, t0.c50, rt0.c0 FROM t0 LEFT OUTER JOIN v0 ON v0.c0 INNER JOIN rt0 ON rt0.c2 GROUP BY rt0.c2, rt0.c1, t0.c50, rt0.c0;
SELECT ALL t0.c50 FROM t0;
SELECT ALL t0.c50 FROM t0 WHERE ((~ ((~ (t0.c50))))) UNION ALL SELECT ALL t0.c50 FROM t0 WHERE ((NOT ((~ ((~ (t0.c50))))))) UNION ALL SELECT ALL t0.c50 FROM t0 WHERE ((((~ ((~ (t0.c50))))) ISNULL));
SELECT ALL t0.c50 FROM t0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT t0.c50 FROM t0 WHERE ((((((t0.c50)) BETWEEN ((t0.c50)) AND ((t0.c50)))) BETWEEN (((t0.c50) ISNULL)) AND (((t0.c50)IS NOT(t0.c50))))) GROUP BY t0.c50 UNION SELECT t0.c50 FROM t0 WHERE ((NOT ((((((t0.c50)) BETWEEN ((t0.c50)) AND ((t0.c50)))) BETWEEN (((t0.c50) ISNULL)) AND (((t0.c50)IS NOT(t0.c50))))))) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM t0 WHERE ((((((((t0.c50)) BETWEEN ((t0.c50)) AND ((t0.c50)))) BETWEEN (((t0.c50) ISNULL)) AND (((t0.c50)IS NOT(t0.c50))))) ISNULL)) GROUP BY t0.c50;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0, v0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0, v0 GROUP BY t0.c50 HAVING COUNT(*) UNION ALL SELECT ALL t0.c50 FROM t0, v0 GROUP BY t0.c50 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c50 FROM t0, v0 GROUP BY t0.c50 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c50 FROM t0, v0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0, v0 GROUP BY t0.c50 HAVING COUNT(*) UNION ALL SELECT ALL t0.c50 FROM t0, v0 GROUP BY t0.c50 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c50 FROM t0, v0 GROUP BY t0.c50 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c50 FROM t0, v0 GROUP BY t0.c50;
SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)==(((t0.c50) NOT BETWEEN (rt0.c2) AND (rt0.c2))));
SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)==(((t0.c50) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) WHERE (CAST(t0.c50 AS NUMERIC)) UNION ALL SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)==(((t0.c50) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) WHERE ((NOT (CAST(t0.c50 AS NUMERIC)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)==(((t0.c50) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) WHERE (((CAST(t0.c50 AS NUMERIC)) ISNULL));
SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)==(((t0.c50) NOT BETWEEN (rt0.c2) AND (rt0.c2))));
SELECT DISTINCT t0.c50 FROM t0;
SELECT DISTINCT t0.c50 FROM t0 WHERE (CAST(t0.c50 AS TEXT) COLLATE RTRIM) UNION SELECT DISTINCT t0.c50 FROM t0 WHERE ((NOT (CAST(t0.c50 AS TEXT) COLLATE RTRIM))) UNION SELECT DISTINCT t0.c50 FROM t0 WHERE (((CAST(t0.c50 AS TEXT) COLLATE RTRIM) ISNULL));
SELECT DISTINCT t0.c50 FROM t0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c1)OR(x'10a8')))OR(rt0.c2)))|(rt0.c2))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c1)OR(x'10a8')))OR(rt0.c2)))|(rt0.c2))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((rt0.c1)OR(x'10a8')))OR(rt0.c2)))|(rt0.c2))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c0, t0.c50, v0.c0, rt0.c1, rt0.c2 FROM v0, rt0, t0 GROUP BY rt0.c0, t0.c50, v0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, t0.c50, v0.c0, rt0.c1, rt0.c2 FROM v0, rt0, t0 GROUP BY rt0.c0, t0.c50, v0.c0, rt0.c1, rt0.c2 HAVING SUM(COUNT(rt0.c2)) UNION ALL SELECT rt0.c0, t0.c50, v0.c0, rt0.c1, rt0.c2 FROM v0, rt0, t0 GROUP BY rt0.c0, t0.c50, v0.c0, rt0.c1, rt0.c2 HAVING (NOT (SUM(COUNT(rt0.c2)))) UNION ALL SELECT rt0.c0, t0.c50, v0.c0, rt0.c1, rt0.c2 FROM v0, rt0, t0 GROUP BY rt0.c0, t0.c50, v0.c0, rt0.c1, rt0.c2 HAVING ((SUM(COUNT(rt0.c2))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) IS TRUE))<>(CASE rt0.c1  WHEN rt0.c1 THEN NULL END))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c2) IS TRUE))<>(CASE rt0.c1  WHEN rt0.c1 THEN NULL END))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c2) IS TRUE))<>(CASE rt0.c1  WHEN rt0.c1 THEN NULL END))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON (((((- (t0.c50)))AND(0.7420670883319287 COLLATE NOCASE)))AND(''));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON (((((- (t0.c50)))AND(0.7420670883319287 COLLATE NOCASE)))AND('')) WHERE (((((t0.c50)AND((+ ('')))))OR((((t0.c50, v0.c0, t0.c50, t0.c50, t0.c50))>=((v0.c0, t0.c50, v0.c0, v0.c0, v0.c0)))))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON (((((- (t0.c50)))AND(0.7420670883319287 COLLATE NOCASE)))AND('')) WHERE ((NOT (((((t0.c50)AND((+ ('')))))OR((((t0.c50, v0.c0, t0.c50, t0.c50, t0.c50))>=((v0.c0, t0.c50, v0.c0, v0.c0, v0.c0)))))))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON (((((- (t0.c50)))AND(0.7420670883319287 COLLATE NOCASE)))AND('')) WHERE (((((((t0.c50)AND((+ ('')))))OR((((t0.c50, v0.c0, t0.c50, t0.c50, t0.c50))>=((v0.c0, t0.c50, v0.c0, v0.c0, v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON (((((- (t0.c50)))AND(0.7420670883319287 COLLATE NOCASE)))AND(''));
SELECT ALL rt0.c1, t0.c50, rt0.c2 FROM t0, rt0, v0 GROUP BY rt0.c1, t0.c50, rt0.c2;
SELECT rt0.c1, t0.c50, rt0.c2 FROM t0, rt0, v0 WHERE (((v0.c0 COLLATE BINARY) ISNULL)) GROUP BY rt0.c1, t0.c50, rt0.c2 UNION SELECT rt0.c1, t0.c50, rt0.c2 FROM t0, rt0, v0 WHERE ((NOT (((v0.c0 COLLATE BINARY) ISNULL)))) GROUP BY rt0.c1, t0.c50, rt0.c2 UNION SELECT rt0.c1, t0.c50, rt0.c2 FROM t0, rt0, v0 WHERE (((((v0.c0 COLLATE BINARY) ISNULL)) ISNULL)) GROUP BY rt0.c1, t0.c50, rt0.c2;
SELECT ALL rt0.c1, t0.c50, rt0.c2 FROM t0, rt0, v0 GROUP BY rt0.c1, t0.c50, rt0.c2;
SELECT ALL v0.c0, t0.c50, rt0.c0 FROM rt0, v0, t0 GROUP BY v0.c0, t0.c50, rt0.c0;
SELECT ALL v0.c0, t0.c50, rt0.c0 FROM rt0, v0, t0 GROUP BY v0.c0, t0.c50, rt0.c0 HAVING MAX(MAX(rt0.c0)) UNION ALL SELECT v0.c0, t0.c50, rt0.c0 FROM rt0, v0, t0 GROUP BY v0.c0, t0.c50, rt0.c0 HAVING (NOT (MAX(MAX(rt0.c0)))) UNION ALL SELECT ALL v0.c0, t0.c50, rt0.c0 FROM rt0, v0, t0 GROUP BY v0.c0, t0.c50, rt0.c0 HAVING ((MAX(MAX(rt0.c0))) ISNULL);
SELECT MAX(CASE WHEN CASE t0.c50  WHEN NULL THEN t0.c50 ELSE v0.c0 END THEN ((((t0.c50)OR(rt0.c2)))AND(rt0.c1)) WHEN DATE(v0.c0, rt0.c1, t0.c50, rt0.c0, t0.c50) THEN ((x'ffa9')>('*I')) WHEN (v0.c0 IN (t0.c50)) THEN ((v0.c0) NOT NULL) ELSE ((rt0.c1) NOTNULL) END) FROM t0, v0, rt0 ORDER BY ((((t0.c50)<<(rt0.c1))) IS TRUE) DESC;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE ((((t0.c50 IN (t0.c50)))<<(((t0.c50) IS FALSE)))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((t0.c50 IN (t0.c50)))<<(((t0.c50) IS FALSE)))))) UNION ALL SELECT * FROM t0 WHERE ((((((t0.c50 IN (t0.c50)))<<(((t0.c50) IS FALSE)))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM v0, rt0, t0;
SELECT DISTINCT * FROM v0, rt0, t0 WHERE (((t0.c50) IS TRUE)) UNION SELECT DISTINCT * FROM v0, rt0, t0 WHERE ((NOT (((t0.c50) IS TRUE)))) UNION SELECT DISTINCT * FROM v0, rt0, t0 WHERE (((((t0.c50) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM v0, rt0, t0;
SELECT rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t0 WHERE (((((((rt0.c1)OR(rt0.c0)))OR(t0.c50))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (LIKELY(rt0.c1)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, t0 WHERE ((NOT (((((((rt0.c1)OR(rt0.c0)))OR(t0.c50))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (LIKELY(rt0.c1)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, t0 WHERE (((((((((rt0.c1)OR(rt0.c0)))OR(t0.c50))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (LIKELY(rt0.c1)))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING AVG(GROUP_CONCAT(t0.c50)) UNION ALL SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING (NOT (AVG(GROUP_CONCAT(t0.c50)))) UNION ALL SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50 HAVING ((AVG(GROUP_CONCAT(t0.c50))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (((((x'') ISNULL)) NOT NULL)) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((x'') ISNULL)) NOT NULL)))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((x'') ISNULL)) NOT NULL)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((((rt0.c1 IN ())) BETWEEN ((('7Z') NOT NULL)) AND (CASE WHEN rt0.c0 THEN rt0.c0 END))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((((rt0.c1 IN ())) BETWEEN ((('7Z') NOT NULL)) AND (CASE WHEN rt0.c0 THEN rt0.c0 END))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((((rt0.c1 IN ())) BETWEEN ((('7Z') NOT NULL)) AND (CASE WHEN rt0.c0 THEN rt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((UNICODE(v0.c0)) IS FALSE)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((UNICODE(v0.c0)) IS FALSE)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((UNICODE(v0.c0)) IS FALSE)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING LENGTH(((((((((((((v0.c0)OR(TOTAL(COUNT(GROUP_CONCAT('434663423'))))))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(x'')))OR(rt0.c0))) UNION ALL SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING (NOT (LENGTH(((((((((((((v0.c0)OR(TOTAL(COUNT(GROUP_CONCAT('434663423'))))))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(x'')))OR(rt0.c0))))) UNION ALL SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING ((LENGTH(((((((((((((v0.c0)OR(TOTAL(COUNT(GROUP_CONCAT('434663423'))))))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(x'')))OR(rt0.c0)))) ISNULL);
SELECT * FROM v0, t0;
SELECT * FROM v0, t0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM v0, t0 WHERE (((v0.c0) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT rt0.c0 FROM rt0, v0, t0;
SELECT DISTINCT rt0.c0 FROM rt0, v0, t0 WHERE (((LIKELIHOOD(DISTINCT v0.c0, 0.441936442220469))IS(TRIM(rt0.c1, rt0.c1)))) UNION SELECT DISTINCT rt0.c0 FROM rt0, v0, t0 WHERE ((NOT (((LIKELIHOOD(DISTINCT v0.c0, 0.441936442220469))IS(TRIM(rt0.c1, rt0.c1)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, v0, t0 WHERE (((((LIKELIHOOD(DISTINCT v0.c0, 0.441936442220469))IS(TRIM(rt0.c1, rt0.c1)))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, v0, t0;
SELECT t0.c50 FROM v0, t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM v0, t0 WHERE (json_array_length(SQLITE_COMPILEOPTION_USED(t0.c50))) GROUP BY t0.c50 UNION SELECT t0.c50 FROM v0, t0 WHERE ((NOT (json_array_length(SQLITE_COMPILEOPTION_USED(t0.c50))))) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM v0, t0 WHERE (((json_array_length(SQLITE_COMPILEOPTION_USED(t0.c50))) ISNULL)) GROUP BY t0.c50;
SELECT t0.c50 FROM v0, t0 GROUP BY t0.c50;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50 HAVING GROUP_CONCAT((- (x''))) UNION ALL SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50 HAVING (NOT (GROUP_CONCAT((- (x''))))) UNION ALL SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING ((GROUP_CONCAT((- (x'')))) ISNULL);
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50 HAVING GROUP_CONCAT((- (x''))) UNION ALL SELECT ALL t0.c50 FROM t0 GROUP BY t0.c50 HAVING (NOT (GROUP_CONCAT((- (x''))))) UNION ALL SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING ((GROUP_CONCAT((- (x'')))) ISNULL);
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT MIN(CAST((-1031674550 IN (v0.c0)) AS NUMERIC)) FROM v0, t0, rt0;
SELECT ALL t0.c50 FROM t0;
SELECT ALL t0.c50 FROM t0 WHERE (x'') UNION ALL SELECT t0.c50 FROM t0 WHERE ((NOT (x''))) UNION ALL SELECT ALL t0.c50 FROM t0 WHERE (((x'') ISNULL));
SELECT ALL t0.c50 FROM t0;
SELECT DISTINCT * FROM v0, rt0, t0;
SELECT DISTINCT * FROM v0, rt0, t0 WHERE ((NOT (((rt0.c1) NOT NULL)))) UNION SELECT DISTINCT * FROM v0, rt0, t0 WHERE ((NOT ((NOT (((rt0.c1) NOT NULL)))))) UNION SELECT DISTINCT * FROM v0, rt0 NOT INDEXED, t0 WHERE ((((NOT (((rt0.c1) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM v0, rt0, t0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((((rt0.c2)) BETWEEN (((+ (rt0.c0)))) AND ((rt0.c1 COLLATE BINARY)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2)) BETWEEN (((+ (rt0.c0)))) AND ((rt0.c1 COLLATE BINARY)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((((rt0.c2)) BETWEEN (((+ (rt0.c0)))) AND ((rt0.c1 COLLATE BINARY)))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(((MAX(AVG(v0.c0))) BETWEEN (v0.c0) AND (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(((MAX(AVG(v0.c0))) BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(((MAX(AVG(v0.c0))) BETWEEN (v0.c0) AND (v0.c0)))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((((v0.c0))>=((v0.c0))) COLLATE BINARY) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((v0.c0))>=((v0.c0))) COLLATE BINARY))) UNION ALL SELECT * FROM v0 WHERE ((((((v0.c0))>=((v0.c0))) COLLATE BINARY) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT t0.c50 FROM t0;
SELECT DISTINCT t0.c50 FROM t0 WHERE (NULL) UNION SELECT DISTINCT t0.c50 FROM t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT t0.c50 FROM t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT t0.c50 FROM t0;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 WHERE (CASE WHEN ((-2.78578442E8)<(t0.c50)) THEN '*D' ELSE ((NULL)||(t0.c50)) END) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM t0 WHERE ((NOT (CASE WHEN ((-2.78578442E8)<(t0.c50)) THEN '*D' ELSE ((NULL)||(t0.c50)) END))) GROUP BY t0.c50 UNION SELECT t0.c50 FROM t0 NOT INDEXED WHERE (((CASE WHEN ((-2.78578442E8)<(t0.c50)) THEN '*D' ELSE ((NULL)||(t0.c50)) END) ISNULL)) GROUP BY t0.c50;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM v0 CROSS JOIN t0 ON CAST(((((v0.c0)OR(t0.c50)))OR(v0.c0)) AS REAL) GROUP BY t0.c50;
SELECT t0.c50 FROM v0 CROSS JOIN t0 ON CAST(((((v0.c0)OR(t0.c50)))OR(v0.c0)) AS REAL) GROUP BY t0.c50 HAVING (NOT (GROUP_CONCAT(MIN(v0.c0)))) UNION ALL SELECT t0.c50 FROM v0 CROSS JOIN t0 ON CAST(((((v0.c0)OR(t0.c50)))OR(v0.c0)) AS REAL) GROUP BY t0.c50 HAVING (NOT ((NOT (GROUP_CONCAT(MIN(v0.c0)))))) UNION ALL SELECT ALL t0.c50 FROM v0 CROSS JOIN t0 ON CAST(((((v0.c0)OR(t0.c50)))OR(v0.c0)) AS REAL) GROUP BY t0.c50 HAVING (((NOT (GROUP_CONCAT(MIN(v0.c0))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((IFNULL(DISTINCT v0.c0, v0.c0))!=(NULL COLLATE RTRIM))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((IFNULL(DISTINCT v0.c0, v0.c0))!=(NULL COLLATE RTRIM))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((IFNULL(DISTINCT v0.c0, v0.c0))!=(NULL COLLATE RTRIM))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c1 FROM rt0, v0 WHERE (((rt0.c1 COLLATE NOCASE)<((NOT (rt0.c2))))) UNION SELECT DISTINCT rt0.c1 FROM rt0, v0 WHERE ((NOT (((rt0.c1 COLLATE NOCASE)<((NOT (rt0.c2))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0, v0 WHERE (((((rt0.c1 COLLATE NOCASE)<((NOT (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1 FROM rt0, t0, v0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, t0, v0 GROUP BY rt0.c1 HAVING MAX(SUM(rt0.c1)) UNION ALL SELECT ALL rt0.c1 FROM rt0, t0, v0 GROUP BY rt0.c1 HAVING (NOT (MAX(SUM(rt0.c1)))) UNION ALL SELECT rt0.c1 FROM rt0, t0, v0 GROUP BY rt0.c1 HAVING ((MAX(SUM(rt0.c1))) ISNULL);
SELECT ALL t0.c50, rt0.c0, rt0.c1, rt0.c2 FROM v0 NOT INDEXED, rt0, t0;
SELECT ALL t0.c50, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0, t0 WHERE ((CASE WHEN t0.c50 THEN rt0.c0 WHEN t0.c50 THEN rt0.c2 WHEN rt0.c0 THEN t0.c50 END IN ())) UNION ALL SELECT t0.c50, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0, t0 WHERE ((NOT ((CASE WHEN t0.c50 THEN rt0.c0 WHEN t0.c50 THEN rt0.c2 WHEN rt0.c0 THEN t0.c50 END IN ())))) UNION ALL SELECT ALL t0.c50, rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0, t0 WHERE ((((CASE WHEN t0.c50 THEN rt0.c0 WHEN t0.c50 THEN rt0.c2 WHEN rt0.c0 THEN t0.c50 END IN ())) ISNULL));
SELECT ALL t0.c50, rt0.c0, rt0.c1, rt0.c2 FROM v0 NOT INDEXED, rt0, t0;
SELECT DISTINCT t0.c50, v0.c0 FROM v0, t0;
SELECT DISTINCT t0.c50, v0.c0 FROM v0, t0 WHERE ((((((t0.c50)) BETWEEN ((v0.c0)) AND ((v0.c0))))<=(GLOB(t0.c50, v0.c0)))) UNION SELECT DISTINCT t0.c50, v0.c0 FROM v0, t0 WHERE ((NOT ((((((t0.c50)) BETWEEN ((v0.c0)) AND ((v0.c0))))<=(GLOB(t0.c50, v0.c0)))))) UNION SELECT DISTINCT t0.c50, v0.c0 FROM v0, t0 WHERE ((((((((t0.c50)) BETWEEN ((v0.c0)) AND ((v0.c0))))<=(GLOB(t0.c50, v0.c0)))) ISNULL));
SELECT DISTINCT t0.c50, v0.c0 FROM v0, t0;
SELECT rt0.c2 FROM v0, t0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM v0, t0, rt0 WHERE (((((((rt0.c2)AND(t0.c50)))AND(rt0.c0)))<=(rt0.c2 COLLATE NOCASE))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM v0, t0, rt0 WHERE ((NOT (((((((rt0.c2)AND(t0.c50)))AND(rt0.c0)))<=(rt0.c2 COLLATE NOCASE))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM v0, t0, rt0 WHERE (((((((((rt0.c2)AND(t0.c50)))AND(rt0.c0)))<=(rt0.c2 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, t0, rt0 GROUP BY rt0.c2;
SELECT ALL v0.c0, rt0.c1 FROM v0, t0, rt0 GROUP BY v0.c0, rt0.c1;
SELECT ALL v0.c0, rt0.c1 FROM v0, t0, rt0 GROUP BY v0.c0, rt0.c1 HAVING TOTAL(rt0.c0 COLLATE NOCASE) UNION ALL SELECT v0.c0, rt0.c1 FROM v0, t0, rt0 GROUP BY v0.c0, rt0.c1 HAVING (NOT (TOTAL(rt0.c0 COLLATE NOCASE))) UNION ALL SELECT v0.c0, rt0.c1 FROM v0, t0, rt0 GROUP BY v0.c0, rt0.c1 HAVING ((TOTAL(rt0.c0 COLLATE NOCASE)) ISNULL);
SELECT ALL v0.c0, rt0.c1 FROM v0, t0, rt0 GROUP BY v0.c0, rt0.c1;
SELECT ALL v0.c0, rt0.c1 FROM v0, t0, rt0 GROUP BY v0.c0, rt0.c1 HAVING TOTAL(rt0.c0 COLLATE NOCASE) UNION ALL SELECT v0.c0, rt0.c1 FROM v0, t0, rt0 GROUP BY v0.c0, rt0.c1 HAVING (NOT (TOTAL(rt0.c0 COLLATE NOCASE))) UNION ALL SELECT v0.c0, rt0.c1 FROM v0, t0, rt0 GROUP BY v0.c0, rt0.c1 HAVING ((TOTAL(rt0.c0 COLLATE NOCASE)) ISNULL);
SELECT ALL v0.c0, rt0.c1 FROM v0, t0, rt0 GROUP BY v0.c0, rt0.c1;
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((((((((((t0.c50)AND(t0.c50)))AND(v0.c0)))AND(v0.c0)))AND(t0.c50))) NOT BETWEEN (((v0.c0) BETWEEN (x'') AND (v0.c0))) AND ((t0.c50 IN ())));
SELECT * FROM t0 RIGHT OUTER JOIN v0 ON ((((((((((t0.c50)AND(t0.c50)))AND(v0.c0)))AND(v0.c0)))AND(t0.c50))) NOT BETWEEN (((v0.c0) BETWEEN (x'') AND (v0.c0))) AND ((t0.c50 IN ()))) WHERE (((((v0.c0)GLOB(t0.c50))) NOT NULL)) UNION ALL SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((((((((((t0.c50)AND(t0.c50)))AND(v0.c0)))AND(v0.c0)))AND(t0.c50))) NOT BETWEEN (((v0.c0) BETWEEN (x'') AND (v0.c0))) AND ((t0.c50 IN ()))) WHERE ((NOT (((((v0.c0)GLOB(t0.c50))) NOT NULL)))) UNION ALL SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((((((((((t0.c50)AND(t0.c50)))AND(v0.c0)))AND(v0.c0)))AND(t0.c50))) NOT BETWEEN (((v0.c0) BETWEEN (x'') AND (v0.c0))) AND ((t0.c50 IN ()))) WHERE (((((((v0.c0)GLOB(t0.c50))) NOT NULL)) ISNULL));
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((((((((((t0.c50)AND(t0.c50)))AND(v0.c0)))AND(v0.c0)))AND(t0.c50))) NOT BETWEEN (((v0.c0) BETWEEN (x'') AND (v0.c0))) AND ((t0.c50 IN ())));
SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON ((((rt0.c0)IS(rt0.c2)))>>('1436893065' COLLATE NOCASE)) LEFT OUTER JOIN t0 ON ((((((t0.c50) IS TRUE))AND('321269578' COLLATE RTRIM)))OR(((rt0.c2) NOT NULL)));
SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON ((((rt0.c0)IS(rt0.c2)))>>('1436893065' COLLATE NOCASE)) LEFT OUTER JOIN t0 ON ((((((t0.c50) IS TRUE))AND('321269578' COLLATE RTRIM)))OR(((rt0.c2) NOT NULL))) WHERE (((UNLIKELY(rt0.c1)) ISNULL)) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON ((((rt0.c0)IS(rt0.c2)))>>('1436893065' COLLATE NOCASE)) LEFT OUTER JOIN t0 ON ((((((t0.c50) IS TRUE))AND('321269578' COLLATE RTRIM)))OR(((rt0.c2) NOT NULL))) WHERE ((NOT (((UNLIKELY(rt0.c1)) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON ((((rt0.c0)IS(rt0.c2)))>>('1436893065' COLLATE NOCASE)) LEFT OUTER JOIN t0 ON ((((((t0.c50) IS TRUE))AND('321269578' COLLATE RTRIM)))OR(((rt0.c2) NOT NULL))) WHERE (((((UNLIKELY(rt0.c1)) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON ((((rt0.c0)IS(rt0.c2)))>>('1436893065' COLLATE NOCASE)) LEFT OUTER JOIN t0 ON ((((((t0.c50) IS TRUE))AND('321269578' COLLATE RTRIM)))OR(((rt0.c2) NOT NULL)));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0, v0 WHERE ((- ((- (rt0.c2))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0, v0 WHERE ((NOT ((- ((- (rt0.c2))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0, v0 NOT INDEXED WHERE ((((- ((- (rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (AVG(GROUP_CONCAT(rt0.c0)) IN ()) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((AVG(GROUP_CONCAT(rt0.c0)) IN ()))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((AVG(GROUP_CONCAT(rt0.c0)) IN ())) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (AVG(GROUP_CONCAT(rt0.c0)) IN ()) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((AVG(GROUP_CONCAT(rt0.c0)) IN ()))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((AVG(GROUP_CONCAT(rt0.c0)) IN ())) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((CAST(rt0.c2 AS REAL))|((NULL IN ())))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS REAL))|((NULL IN ())))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((CAST(rt0.c2 AS REAL))|((NULL IN ())))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c1, v0.c0, t0.c50, rt0.c0, rt0.c2 FROM rt0, v0, t0 GROUP BY rt0.c1, v0.c0, t0.c50, rt0.c0, rt0.c2;
SELECT rt0.c1, v0.c0, t0.c50, rt0.c0, rt0.c2 FROM rt0, v0, t0 WHERE (((0xffffffffd3a535fb)>>(((((((((rt0.c1)OR(rt0.c0)))AND(v0.c0)))OR(t0.c50)))OR(rt0.c1))))) GROUP BY rt0.c1, v0.c0, t0.c50, rt0.c0, rt0.c2 UNION SELECT rt0.c1, v0.c0, t0.c50, rt0.c0, rt0.c2 FROM rt0, v0, t0 WHERE ((NOT (((0Xffffffffd3a535fb)>>(((((((((rt0.c1)OR(rt0.c0)))AND(v0.c0)))OR(t0.c50)))OR(rt0.c1))))))) GROUP BY rt0.c1, v0.c0, t0.c50, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, v0.c0, t0.c50, rt0.c0, rt0.c2 FROM rt0, v0, t0 WHERE (((((0xffffffffd3a535fb)>>(((((((((rt0.c1)OR(rt0.c0)))AND(v0.c0)))OR(t0.c50)))OR(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, v0.c0, t0.c50, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, v0.c0, t0.c50, rt0.c0, rt0.c2 FROM rt0, v0, t0 GROUP BY rt0.c1, v0.c0, t0.c50, rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((AVG(TOTAL(COUNT(*)))) NOTNULL) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((AVG(TOTAL(COUNT(*)))) NOTNULL))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((AVG(TOTAL(COUNT(*)))) NOTNULL)) ISNULL);
SELECT ALL * FROM rt0, t0, v0;
SELECT ALL * FROM rt0, t0, v0 WHERE ((((((v0.c0))>=((v0.c0))))<('tx}'))) UNION ALL SELECT * FROM rt0, t0, v0 WHERE ((NOT ((((((v0.c0))>=((v0.c0))))<('tx}'))))) UNION ALL SELECT ALL * FROM rt0, t0, v0 WHERE ((((((((v0.c0))>=((v0.c0))))<('tx}'))) ISNULL));
SELECT ALL * FROM rt0, t0, v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c50) ISNULL))OR(t0.c50 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c50) ISNULL))OR(t0.c50 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c50) ISNULL))OR(t0.c50 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, t0 WHERE ((rt0.c0 COLLATE BINARY IN ())) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, t0 WHERE ((NOT ((rt0.c0 COLLATE BINARY IN ())))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, t0 WHERE ((((rt0.c0 COLLATE BINARY IN ())) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON 1377438920 COLLATE BINARY GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON 1377438920 COLLATE BINARY GROUP BY rt0.c1, rt0.c2 HAVING TOTAL(COUNT(*)) UNION ALL SELECT rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON 1377438920 COLLATE BINARY GROUP BY rt0.c1, rt0.c2 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM v0 LEFT OUTER JOIN rt0 ON 1377438920 COLLATE BINARY GROUP BY rt0.c1, rt0.c2 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT t0.c50 FROM t0;
SELECT t0.c50 FROM t0 WHERE (CAST(SQLITE_VERSION() AS INTEGER)) UNION ALL SELECT ALL t0.c50 FROM t0 NOT INDEXED WHERE ((NOT (CAST(SQLITE_VERSION() AS INTEGER)))) UNION ALL SELECT t0.c50 FROM t0 WHERE (((CAST(SQLITE_VERSION() AS INTEGER)) ISNULL));
SELECT t0.c50 FROM t0;
SELECT DISTINCT t0.c50 FROM t0;
SELECT DISTINCT t0.c50 FROM t0 WHERE (((+ (t0.c50)) IN ())) UNION SELECT DISTINCT t0.c50 FROM t0 WHERE ((NOT (((+ (t0.c50)) IN ())))) UNION SELECT DISTINCT t0.c50 FROM t0 WHERE (((((+ (t0.c50)) IN ())) ISNULL));
SELECT DISTINCT t0.c50 FROM t0;
SELECT v0.c0, t0.c50, rt0.c2, rt0.c0 FROM v0, rt0, t0 GROUP BY v0.c0, t0.c50, rt0.c2, rt0.c0;
SELECT v0.c0, t0.c50, rt0.c2, rt0.c0 FROM v0, rt0, t0 WHERE (t0.c50) GROUP BY v0.c0, t0.c50, rt0.c2, rt0.c0 UNION SELECT ALL v0.c0, t0.c50, rt0.c2, rt0.c0 FROM v0, rt0, t0 WHERE ((NOT (t0.c50))) GROUP BY v0.c0, t0.c50, rt0.c2, rt0.c0 UNION SELECT ALL v0.c0, t0.c50, rt0.c2, rt0.c0 FROM v0, rt0, t0 WHERE (((t0.c50) ISNULL)) GROUP BY v0.c0, t0.c50, rt0.c2, rt0.c0;
SELECT v0.c0, t0.c50, rt0.c2, rt0.c0 FROM v0, rt0, t0 GROUP BY v0.c0, t0.c50, rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0, t0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 NOT INDEXED, t0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0, t0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0 NOT INDEXED, rt0, t0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0, t0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0 NOT INDEXED, t0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0, t0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0 NOT INDEXED, rt0, t0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1, v0.c0 FROM v0, rt0, t0 GROUP BY rt0.c2, rt0.c0, rt0.c1, v0.c0;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((((((t0.c50) BETWEEN (t0.c50) AND (t0.c50)))AND(t0.c50 COLLATE NOCASE)))AND(((t0.c50) BETWEEN (t0.c50) AND (NULL))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((((t0.c50) BETWEEN (t0.c50) AND (t0.c50)))AND(t0.c50 COLLATE NOCASE)))AND(((t0.c50) BETWEEN (t0.c50) AND (NULL))))))) UNION ALL SELECT * FROM t0 WHERE (((((((((t0.c50) BETWEEN (t0.c50) AND (t0.c50)))AND(t0.c50 COLLATE NOCASE)))AND(((t0.c50) BETWEEN (t0.c50) AND (NULL))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM rt0, v0 INNER JOIN t0 ON CASE rt0.c1 COLLATE RTRIM  WHEN ((rt0.c2)IS NOT(rt0.c1)) THEN x'' ELSE CASE WHEN v0.c0 THEN v0.c0 END END;
SELECT DISTINCT * FROM rt0, v0 INNER JOIN t0 ON CASE rt0.c1 COLLATE RTRIM  WHEN ((rt0.c2)IS NOT(rt0.c1)) THEN x'' ELSE CASE WHEN v0.c0 THEN v0.c0 END END WHERE (v0.c0) UNION SELECT DISTINCT * FROM rt0, v0 INNER JOIN t0 ON CASE rt0.c1 COLLATE RTRIM  WHEN ((rt0.c2)IS NOT(rt0.c1)) THEN x'' ELSE CASE WHEN v0.c0 THEN v0.c0 END END WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM rt0, v0 INNER JOIN t0 ON CASE rt0.c1 COLLATE RTRIM  WHEN ((rt0.c2)IS NOT(rt0.c1)) THEN x'' ELSE CASE WHEN v0.c0 THEN v0.c0 END END WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM rt0, v0 INNER JOIN t0 ON CASE rt0.c1 COLLATE RTRIM  WHEN ((rt0.c2)IS NOT(rt0.c1)) THEN x'' ELSE CASE WHEN v0.c0 THEN v0.c0 END END;
SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC)) BETWEEN (x'') AND (((v0.c0)IS NOT(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS NUMERIC)) BETWEEN (x'') AND (((v0.c0)IS NOT(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS NUMERIC)) BETWEEN (x'') AND (((v0.c0)IS NOT(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING v0.c0 UNION ALL SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING ((v0.c0) ISNULL);
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING v0.c0 UNION ALL SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING ((v0.c0) ISNULL);
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT ALL v0.c0, t0.c50 FROM t0 RIGHT OUTER JOIN v0 ON ((((0X70fae8ee)OR(((v0.c0)|(0.026511308548965107)))))AND(CASE WHEN v0.c0 THEN t0.c50 WHEN v0.c0 THEN t0.c50 WHEN v0.c0 THEN v0.c0 ELSE t0.c50 END));
SELECT v0.c0, t0.c50 FROM t0 RIGHT OUTER JOIN v0 ON ((((0X70fae8ee)OR(((v0.c0)|(0.026511308548965107)))))AND(CASE WHEN v0.c0 THEN t0.c50 WHEN v0.c0 THEN t0.c50 WHEN v0.c0 THEN v0.c0 ELSE t0.c50 END)) WHERE (v0.c0 COLLATE BINARY) UNION ALL SELECT ALL v0.c0, t0.c50 FROM t0 RIGHT OUTER JOIN v0 ON ((((0X70fae8ee)OR(((v0.c0)|(0.026511308548965107)))))AND(CASE WHEN v0.c0 THEN t0.c50 WHEN v0.c0 THEN t0.c50 WHEN v0.c0 THEN v0.c0 ELSE t0.c50 END)) WHERE ((NOT (v0.c0 COLLATE BINARY))) UNION ALL SELECT ALL v0.c0, t0.c50 FROM t0 RIGHT OUTER JOIN v0 ON ((((0X70fae8ee)OR(((v0.c0)|(0.026511308548965107)))))AND(CASE WHEN v0.c0 THEN t0.c50 WHEN v0.c0 THEN t0.c50 WHEN v0.c0 THEN v0.c0 ELSE t0.c50 END)) WHERE (((v0.c0 COLLATE BINARY) ISNULL));
SELECT ALL v0.c0, t0.c50 FROM t0 RIGHT OUTER JOIN v0 ON ((((0X70fae8ee)OR(((v0.c0)|(0.026511308548965107)))))AND(CASE WHEN v0.c0 THEN t0.c50 WHEN v0.c0 THEN t0.c50 WHEN v0.c0 THEN v0.c0 ELSE t0.c50 END));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c2)) NOT BETWEEN ((NULLIF(v0.c0, v0.c0))) AND ((((t0.c50) ISNULL)))) RIGHT OUTER JOIN t0 ON ((((((((((((rt0.c1)OR(v0.c0)))OR(t0.c50)))OR(rt0.c2)))AND(rt0.c1)))OR((- ('')))))OR((((t0.c50, t0.c50, rt0.c0)) NOT BETWEEN ((t0.c50, v0.c0, rt0.c1)) AND ((rt0.c1, rt0.c1, v0.c0)))));
SELECT rt0.c1 FROM rt0, t0, v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t0, v0 WHERE (((x'') IS FALSE)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, t0, v0 WHERE ((NOT (((x'') IS FALSE)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, t0, v0 WHERE (((((x'') IS FALSE)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, t0, v0 GROUP BY rt0.c1;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING MAX(MIN(COUNT(COUNT(*)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (MAX(MIN(COUNT(COUNT(*)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((MAX(MIN(COUNT(COUNT(*))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c0) NOTNULL))!=((rt0.c1 IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c0) NOTNULL))!=((rt0.c1 IN ())))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c0) NOTNULL))!=((rt0.c1 IN ())))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT t0.c50 FROM t0;
SELECT DISTINCT t0.c50 FROM t0 WHERE ((((t0.c50) NOTNULL) IN ())) UNION SELECT DISTINCT t0.c50 FROM t0 WHERE ((NOT ((((t0.c50) NOTNULL) IN ())))) UNION SELECT DISTINCT t0.c50 FROM t0 WHERE ((((((t0.c50) NOTNULL) IN ())) ISNULL));
SELECT DISTINCT t0.c50 FROM t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ('-1741603774') GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ('-1741603774'))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((('-1741603774') ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, t0.c50 FROM rt0, t0, v0 GROUP BY v0.c0, t0.c50;
SELECT ALL v0.c0, t0.c50 FROM rt0, t0, v0 GROUP BY v0.c0, t0.c50 HAVING GROUP_CONCAT(CAST(rt0.c1 AS NUMERIC)) UNION ALL SELECT v0.c0, t0.c50 FROM rt0, t0, v0 GROUP BY v0.c0, t0.c50 HAVING (NOT (GROUP_CONCAT(CAST(rt0.c1 AS NUMERIC)))) UNION ALL SELECT ALL v0.c0, t0.c50 FROM rt0, t0, v0 GROUP BY v0.c0, t0.c50 HAVING ((GROUP_CONCAT(CAST(rt0.c1 AS NUMERIC))) ISNULL);
SELECT ALL v0.c0, t0.c50 FROM rt0, t0, v0 GROUP BY v0.c0, t0.c50;
SELECT ALL v0.c0, t0.c50 FROM rt0, t0, v0 GROUP BY v0.c0, t0.c50 HAVING GROUP_CONCAT(CAST(rt0.c1 AS NUMERIC)) UNION ALL SELECT v0.c0, t0.c50 FROM rt0, t0, v0 GROUP BY v0.c0, t0.c50 HAVING (NOT (GROUP_CONCAT(CAST(rt0.c1 AS NUMERIC)))) UNION ALL SELECT ALL v0.c0, t0.c50 FROM rt0, t0, v0 GROUP BY v0.c0, t0.c50 HAVING ((GROUP_CONCAT(CAST(rt0.c1 AS NUMERIC))) ISNULL);
SELECT ALL v0.c0, t0.c50 FROM rt0, t0, v0 GROUP BY v0.c0, t0.c50;
SELECT * FROM v0 NATURAL JOIN rt0;
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (((((((rt0.c1) NOTNULL))OR((NOT (rt0.c2)))))AND(((rt0.c1)%(v0.c0))))) UNION ALL SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((NOT (((((((rt0.c1) NOTNULL))OR((NOT (rt0.c2)))))AND(((rt0.c1)%(v0.c0))))))) UNION ALL SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((((((((rt0.c1) NOTNULL))OR((NOT (rt0.c2)))))AND(((rt0.c1)%(v0.c0))))) ISNULL));
SELECT * FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c0, t0.c50 FROM t0, rt0 NATURAL JOIN v0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0, t0.c50;
SELECT v0.c0, rt0.c2, rt0.c1, rt0.c0, t0.c50 FROM t0, rt0 NATURAL JOIN v0 WHERE ((((~ (t0.c50))) IS FALSE)) GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0, t0.c50 UNION SELECT v0.c0, rt0.c2, rt0.c1, rt0.c0, t0.c50 FROM t0, rt0 NATURAL JOIN v0 WHERE ((NOT ((((~ (t0.c50))) IS FALSE)))) GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0, t0.c50 UNION SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c0, t0.c50 FROM t0, rt0 NATURAL JOIN v0 WHERE ((((((~ (t0.c50))) IS FALSE)) ISNULL)) GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0, t0.c50;
SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c0, t0.c50 FROM t0, rt0 NATURAL JOIN v0 GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c0, t0.c50;
SELECT v0.c0 FROM t0 INNER JOIN v0 ON CAST(((v0.c0)OR(x'')) AS TEXT) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0 INNER JOIN v0 ON CAST(((v0.c0)OR(x'')) AS TEXT) GROUP BY v0.c0 HAVING ((MAX(SUM(COUNT(MAX(GROUP_CONCAT(t0.c50)))))) IS TRUE) UNION ALL SELECT v0.c0 FROM t0 INNER JOIN v0 ON CAST(((v0.c0)OR(x'')) AS TEXT) GROUP BY v0.c0 HAVING (NOT (((MAX(SUM(COUNT(MAX(GROUP_CONCAT(t0.c50)))))) IS TRUE))) UNION ALL SELECT ALL v0.c0 FROM t0 INNER JOIN v0 ON CAST(((v0.c0)OR(x'')) AS TEXT) GROUP BY v0.c0 HAVING ((((MAX(SUM(COUNT(MAX(GROUP_CONCAT(t0.c50)))))) IS TRUE)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 WHERE (CASE rt0.c2  WHEN rt0.c2 THEN 0.18933205168311817 ELSE v0.c0 END COLLATE NOCASE) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 WHERE ((NOT (CASE rt0.c2  WHEN rt0.c2 THEN 0.18933205168311817 ELSE v0.c0 END COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN 0.18933205168311817 ELSE v0.c0 END COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (CASE WHEN rt0.c2 THEN t0.c50 ELSE rt0.c1 END COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (CASE WHEN rt0.c2 THEN t0.c50 ELSE rt0.c1 END COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((CASE WHEN rt0.c2 THEN t0.c50 ELSE rt0.c1 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, t0.c50 FROM t0 CROSS JOIN rt0 ON ((((rt0.c2)IS NOT(rt0.c1))) NOTNULL) GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c50;
SELECT rt0.c0, rt0.c2, rt0.c1, t0.c50 FROM t0 CROSS JOIN rt0 ON ((((rt0.c2)IS NOT(rt0.c1))) NOTNULL) WHERE ((~ (INSTR(rt0.c2, rt0.c2)))) GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c50 UNION SELECT rt0.c0, rt0.c2, rt0.c1, t0.c50 FROM t0 CROSS JOIN rt0 ON ((((rt0.c2)IS NOT(rt0.c1))) NOTNULL) WHERE ((NOT ((~ (INSTR(rt0.c2, rt0.c2)))))) GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c50 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, t0.c50 FROM t0 CROSS JOIN rt0 ON ((((rt0.c2)IS NOT(rt0.c1))) NOTNULL) WHERE ((((~ (INSTR(rt0.c2, rt0.c2)))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c50;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, t0.c50 FROM t0 CROSS JOIN rt0 ON ((((rt0.c2)IS NOT(rt0.c1))) NOTNULL) GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c50;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (CAST(GROUP_CONCAT(GROUP_CONCAT(COUNT(*))) AS NUMERIC) IN ()) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((CAST(GROUP_CONCAT(GROUP_CONCAT(COUNT(*))) AS NUMERIC) IN ()))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((CAST(GROUP_CONCAT(GROUP_CONCAT(COUNT(*))) AS NUMERIC) IN ())) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (CAST(GROUP_CONCAT(GROUP_CONCAT(COUNT(*))) AS NUMERIC) IN ()) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((CAST(GROUP_CONCAT(GROUP_CONCAT(COUNT(*))) AS NUMERIC) IN ()))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((CAST(GROUP_CONCAT(GROUP_CONCAT(COUNT(*))) AS NUMERIC) IN ())) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON NULL LEFT OUTER JOIN v0 ON CAST(((t0.c50) BETWEEN (t0.c50) AND (rt0.c0)) AS BLOB);
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON NULL LEFT OUTER JOIN v0 ON CAST(((t0.c50) BETWEEN (t0.c50) AND (rt0.c0)) AS BLOB) WHERE (((((rt0.c1)<>(rt0.c2)))>=(((((v0.c0)OR(v0.c0)))AND(rt0.c0))))) UNION ALL SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON NULL LEFT OUTER JOIN v0 ON CAST(((t0.c50) BETWEEN (t0.c50) AND (rt0.c0)) AS BLOB) WHERE ((NOT (((((rt0.c1)!=(rt0.c2)))>=(((((v0.c0)OR(v0.c0)))AND(rt0.c0))))))) UNION ALL SELECT ALL * FROM t0 NOT INDEXED LEFT OUTER JOIN rt0 ON NULL LEFT OUTER JOIN v0 ON CAST(((t0.c50) BETWEEN (t0.c50) AND (rt0.c0)) AS BLOB) WHERE (((((((rt0.c1)!=(rt0.c2)))>=(((((v0.c0)OR(v0.c0)))AND(rt0.c0))))) ISNULL));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON NULL LEFT OUTER JOIN v0 ON CAST(((t0.c50) BETWEEN (t0.c50) AND (rt0.c0)) AS BLOB);
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((json_object(rt0.c1, rt0.c1)) IS FALSE)) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((json_object(rt0.c1, rt0.c1)) IS FALSE)))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((json_object(rt0.c1, rt0.c1)) IS FALSE)) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, t0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, t0, v0 WHERE (((((rt0.c2)LIKE(rt0.c0)))<=(CAST(t0.c50 AS TEXT)))) GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, t0, v0 WHERE ((NOT (((((rt0.c2)LIKE(rt0.c0)))<=(CAST(t0.c50 AS TEXT)))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, t0, v0 WHERE (((((((rt0.c2)LIKE(rt0.c0)))<=(CAST(t0.c50 AS TEXT)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, t0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0, v0.c0;
SELECT rt0.c0, v0.c0, t0.c50, rt0.c1, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c0, v0.c0, t0.c50, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, v0.c0, t0.c50, rt0.c1, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c0, v0.c0, t0.c50, rt0.c1, rt0.c2 HAVING NULL UNION ALL SELECT rt0.c0, v0.c0, t0.c50, rt0.c1, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c0, v0.c0, t0.c50, rt0.c1, rt0.c2 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c0, v0.c0, t0.c50, rt0.c1, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c0, v0.c0, t0.c50, rt0.c1, rt0.c2 HAVING ((NULL) ISNULL);
SELECT rt0.c0, v0.c0, t0.c50, rt0.c1, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c0, v0.c0, t0.c50, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, v0.c0, t0.c50, rt0.c1, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c0, v0.c0, t0.c50, rt0.c1, rt0.c2 HAVING NULL UNION ALL SELECT rt0.c0, v0.c0, t0.c50, rt0.c1, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c0, v0.c0, t0.c50, rt0.c1, rt0.c2 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c0, v0.c0, t0.c50, rt0.c1, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c0, v0.c0, t0.c50, rt0.c1, rt0.c2 HAVING ((NULL) ISNULL);
SELECT rt0.c0, v0.c0, t0.c50, rt0.c1, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c0, v0.c0, t0.c50, rt0.c1, rt0.c2;
SELECT t0.c50 FROM t0;
SELECT ALL t0.c50 FROM t0 WHERE ((((t0.c50))!=((((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50)))))) UNION ALL SELECT ALL t0.c50 FROM t0 WHERE ((NOT ((((t0.c50))!=((((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50)))))))) UNION ALL SELECT ALL t0.c50 FROM t0 WHERE ((((((t0.c50))!=((((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50)))))) ISNULL));
SELECT t0.c50 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((CASE t0.c50  WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END)OR(TRIM(DISTINCT t0.c50))))OR(t0.c50 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((CASE t0.c50  WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END)OR(TRIM(DISTINCT t0.c50))))OR(t0.c50 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((CASE t0.c50  WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END)OR(TRIM(DISTINCT t0.c50))))OR(t0.c50 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c0, rt0.c1 FROM t0, rt0, v0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM t0, rt0, v0 WHERE ((((((((((x'3c06' IN (rt0.c2)))AND(((t0.c50)&(rt0.c2)))))OR('-625554830')))OR(v0.c0)))OR((rt0.c2 IN ())))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM t0, rt0, v0 WHERE ((NOT ((((((((((x'3c06' IN (rt0.c2)))AND(((t0.c50)&(rt0.c2)))))OR('-625554830')))OR(v0.c0)))OR((rt0.c2 IN ())))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM t0, rt0, v0 WHERE ((((((((((((x'3c06' IN (rt0.c2)))AND(((t0.c50)&(rt0.c2)))))OR('-625554830')))OR(v0.c0)))OR((rt0.c2 IN ())))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM t0, rt0, v0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1 HAVING ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (TOTAL(rt0.c1))))GLOB(((rt0.c0)<(rt0.c0)))) UNION ALL SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1 HAVING (NOT (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (TOTAL(rt0.c1))))GLOB(((rt0.c0)<(rt0.c0)))))) UNION ALL SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1 HAVING ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (TOTAL(rt0.c1))))GLOB(((rt0.c0)<(rt0.c0))))) ISNULL);
SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1 HAVING ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (TOTAL(rt0.c1))))GLOB(((rt0.c0)<(rt0.c0)))) UNION ALL SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1 HAVING (NOT (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (TOTAL(rt0.c1))))GLOB(((rt0.c0)<(rt0.c0)))))) UNION ALL SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1 HAVING ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (TOTAL(rt0.c1))))GLOB(((rt0.c0)<(rt0.c0))))) ISNULL);
SELECT rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c1;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE WHEN ((v0.c0)||(v0.c0)) THEN ((v0.c0)GLOB(v0.c0)) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((v0.c0) ISNULL) THEN ((v0.c0) BETWEEN (x'') AND ('0.562763545949048')) ELSE (((v0.c0))<((v0.c0))) END) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE WHEN ((v0.c0)||(v0.c0)) THEN ((v0.c0)GLOB(v0.c0)) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((v0.c0) ISNULL) THEN ((v0.c0) BETWEEN (x'') AND ('0.562763545949048')) ELSE (((v0.c0))<((v0.c0))) END))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN ((v0.c0)||(v0.c0)) THEN ((v0.c0)GLOB(v0.c0)) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((v0.c0) ISNULL) THEN ((v0.c0) BETWEEN (x'') AND ('0.562763545949048')) ELSE (((v0.c0))<((v0.c0))) END) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c0 FROM v0, rt0, t0;
SELECT DISTINCT rt0.c0 FROM v0, rt0, t0 WHERE (((((1886615756)OR(v0.c0)))AND(1639033642)) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c0 FROM v0, rt0, t0 WHERE ((NOT (((((1886615756)OR(v0.c0)))AND(1639033642)) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c0 FROM v0, rt0, t0 WHERE (((((((1886615756)OR(v0.c0)))AND(1639033642)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c0 FROM v0, rt0, t0;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT ALL t0.c50 FROM t0 WHERE (CASE WHEN ((((t0.c50)AND(t0.c50)))AND(t0.c50)) THEN (t0.c50 IN (t0.c50, t0.c50)) END) GROUP BY t0.c50 UNION SELECT t0.c50 FROM t0 WHERE ((NOT (CASE WHEN ((((t0.c50)AND(t0.c50)))AND(t0.c50)) THEN (t0.c50 IN (t0.c50, t0.c50)) END))) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM t0 WHERE (((CASE WHEN ((((t0.c50)AND(t0.c50)))AND(t0.c50)) THEN (t0.c50 IN (t0.c50, t0.c50)) END) ISNULL)) GROUP BY t0.c50;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT rt0.c1, v0.c0 FROM v0, t0, rt0 GROUP BY rt0.c1, v0.c0;
SELECT ALL rt0.c1, v0.c0 FROM v0, t0, rt0 GROUP BY rt0.c1, v0.c0 HAVING CAST(COUNT(*) AS INTEGER) UNION ALL SELECT rt0.c1, v0.c0 FROM v0, t0, rt0 GROUP BY rt0.c1, v0.c0 HAVING (NOT (CAST(COUNT(*) AS INTEGER))) UNION ALL SELECT rt0.c1, v0.c0 FROM v0, t0, rt0 GROUP BY rt0.c1, v0.c0 HAVING ((CAST(COUNT(*) AS INTEGER)) ISNULL);
SELECT rt0.c1, v0.c0 FROM v0, t0, rt0 GROUP BY rt0.c1, v0.c0;
SELECT ALL rt0.c1, v0.c0 FROM v0, t0, rt0 GROUP BY rt0.c1, v0.c0 HAVING CAST(COUNT(*) AS INTEGER) UNION ALL SELECT rt0.c1, v0.c0 FROM v0, t0, rt0 GROUP BY rt0.c1, v0.c0 HAVING (NOT (CAST(COUNT(*) AS INTEGER))) UNION ALL SELECT rt0.c1, v0.c0 FROM v0, t0, rt0 GROUP BY rt0.c1, v0.c0 HAVING ((CAST(COUNT(*) AS INTEGER)) ISNULL);
SELECT rt0.c1, v0.c0 FROM v0, t0, rt0 GROUP BY rt0.c1, v0.c0;
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE ((('781823089')>(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((('781823089')>(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((((('781823089')>(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END))) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT * FROM t0, v0, rt0;
SELECT DISTINCT * FROM t0, v0, rt0 WHERE (((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c1)))GLOB(((((rt0.c1)OR(v0.c0)))AND(v0.c0))))) UNION SELECT DISTINCT * FROM t0, v0, rt0 WHERE ((NOT (((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c1)))GLOB(((((rt0.c1)OR(v0.c0)))AND(v0.c0))))))) UNION SELECT DISTINCT * FROM t0, v0, rt0 WHERE (((((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c1)))GLOB(((((rt0.c1)OR(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, v0, rt0;
SELECT rt0.c1, v0.c0, t0.c50, rt0.c0, rt0.c2 FROM rt0, t0, v0 GROUP BY rt0.c1, v0.c0, t0.c50, rt0.c0, rt0.c2;
SELECT rt0.c1, v0.c0, t0.c50, rt0.c0, rt0.c2 FROM rt0, t0, v0 WHERE (CAST(((rt0.c0) NOTNULL) AS REAL)) GROUP BY rt0.c1, v0.c0, t0.c50, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, v0.c0, t0.c50, rt0.c0, rt0.c2 FROM rt0, t0, v0 WHERE ((NOT (CAST(((rt0.c0) NOTNULL) AS REAL)))) GROUP BY rt0.c1, v0.c0, t0.c50, rt0.c0, rt0.c2 UNION SELECT rt0.c1, v0.c0, t0.c50, rt0.c0, rt0.c2 FROM rt0, t0, v0 WHERE (((CAST(((rt0.c0) NOTNULL) AS REAL)) ISNULL)) GROUP BY rt0.c1, v0.c0, t0.c50, rt0.c0, rt0.c2;
SELECT rt0.c1, v0.c0, t0.c50, rt0.c0, rt0.c2 FROM rt0, t0, v0 GROUP BY rt0.c1, v0.c0, t0.c50, rt0.c0, rt0.c2;
SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING SUM(CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 END) UNION ALL SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING (NOT (SUM(CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 END))) UNION ALL SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING ((SUM(CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 END)) ISNULL);
SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING SUM(CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 END) UNION ALL SELECT ALL rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING (NOT (SUM(CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 END))) UNION ALL SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1 HAVING ((SUM(CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 END)) ISNULL);
SELECT rt0.c1 FROM rt0, v0 GROUP BY rt0.c1;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (CASE WHEN 0.7354771420556441 THEN CAST(t0.c50 AS INTEGER) ELSE ((t0.c50)!=(t0.c50)) END) ORDER BY CAST(((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50)) AS BLOB) ASC, ((((t0.c50) BETWEEN (t0.c50) AND (t0.c50))) BETWEEN ((((t0.c50, t0.c50, t0.c50))<=((t0.c50, t0.c50, t0.c50)))) AND (CAST(t0.c50 AS TEXT)))  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((NOT (CASE WHEN 0.7354771420556441 THEN CAST(t0.c50 AS INTEGER) ELSE ((t0.c50)!=(t0.c50)) END))) ORDER BY CAST(((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50)) AS BLOB) ASC, ((((t0.c50) BETWEEN (t0.c50) AND (t0.c50))) BETWEEN ((((t0.c50, t0.c50, t0.c50))<=((t0.c50, t0.c50, t0.c50)))) AND (CAST(t0.c50 AS TEXT)))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((CASE WHEN 0.7354771420556441 THEN CAST(t0.c50 AS INTEGER) ELSE ((t0.c50)!=(t0.c50)) END) ISNULL)) ORDER BY CAST(((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50)) AS BLOB) ASC, ((((t0.c50) BETWEEN (t0.c50) AND (t0.c50))) BETWEEN ((((t0.c50, t0.c50, t0.c50))<=((t0.c50, t0.c50, t0.c50)))) AND (CAST(t0.c50 AS TEXT)))  NULLS LAST;
SELECT ALL * FROM t0;
SELECT DISTINCT rt0.c1, v0.c0, rt0.c2, t0.c50 FROM t0, v0, rt0;
SELECT DISTINCT rt0.c1, v0.c0, rt0.c2, t0.c50 FROM t0, v0, rt0 WHERE (rt0.c2 COLLATE RTRIM) UNION SELECT DISTINCT rt0.c1, v0.c0, rt0.c2, t0.c50 FROM t0, v0, rt0 WHERE ((NOT (rt0.c2 COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1, v0.c0, rt0.c2, t0.c50 FROM t0, v0, rt0 WHERE (((rt0.c2 COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0, rt0.c2, t0.c50 FROM t0, v0, rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((~ (((((rt0.c0)OR(rt0.c2)))AND(0.14143945596159369))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((~ (((((rt0.c0)OR(rt0.c2)))AND(0.14143945596159369))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((~ (((((rt0.c0)OR(rt0.c2)))AND(0.14143945596159369))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL v0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c2 COLLATE NOCASE))>((((rt0.c1)AND(v0.c0))))) CROSS JOIN v0 ON (('1705414481')*(rt0.c2)) GROUP BY v0.c0, rt0.c1;
SELECT ALL TOTAL(v0.c0) FROM t0, v0 ORDER BY (+ (t0.c50 COLLATE BINARY));
SELECT rt0.c2, t0.c50, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON CASE NULL  WHEN (NOT (rt0.c2)) THEN ((t0.c50)LIKE(t0.c50)) END FULL OUTER JOIN v0 ON (((rt0.c1))=((t0.c50))) COLLATE NOCASE;
SELECT rt0.c2, t0.c50, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON CASE NULL  WHEN (NOT (rt0.c2)) THEN ((t0.c50)LIKE(t0.c50)) END FULL OUTER JOIN v0 ON (((rt0.c1))=((t0.c50))) COLLATE NOCASE WHERE ((+ ((((v0.c0))<>((v0.c0)))))) UNION ALL SELECT rt0.c2, t0.c50, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON CASE NULL  WHEN (NOT (rt0.c2)) THEN ((t0.c50)LIKE(t0.c50)) END FULL OUTER JOIN v0 ON (((rt0.c1))==((t0.c50))) COLLATE NOCASE WHERE ((NOT ((+ ((((v0.c0))!=((v0.c0)))))))) UNION ALL SELECT rt0.c2, t0.c50, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON CASE NULL  WHEN (NOT (rt0.c2)) THEN ((t0.c50)LIKE(t0.c50)) END FULL OUTER JOIN v0 ON (((rt0.c1))==((t0.c50))) COLLATE NOCASE WHERE ((((+ ((((v0.c0))<>((v0.c0)))))) ISNULL));
SELECT rt0.c2, t0.c50, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON CASE NULL  WHEN (NOT (rt0.c2)) THEN ((t0.c50)LIKE(t0.c50)) END FULL OUTER JOIN v0 ON (((rt0.c1))=((t0.c50))) COLLATE NOCASE;
SELECT DISTINCT * FROM t0, v0, rt0;
SELECT DISTINCT * FROM t0, v0, rt0 WHERE (CASE ((rt0.c1)>>(rt0.c1))  WHEN CAST(rt0.c0 AS BLOB) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((t0.c50))) END) UNION SELECT DISTINCT * FROM t0, v0, rt0 WHERE ((NOT (CASE ((rt0.c1)>>(rt0.c1))  WHEN CAST(rt0.c0 AS BLOB) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((t0.c50))) END))) UNION SELECT DISTINCT * FROM t0, v0 NOT INDEXED, rt0 WHERE (((CASE ((rt0.c1)>>(rt0.c1))  WHEN CAST(rt0.c0 AS BLOB) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((t0.c50))) END) ISNULL));
SELECT DISTINCT * FROM t0, v0, rt0;
SELECT ALL t0.c50, rt0.c1, v0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((((v0.c0)*(rt0.c1))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (CASE ''  WHEN v0.c0 THEN rt0.c0 END)) FULL OUTER JOIN v0 ON ((((rt0.c0)IS NOT(t0.c50))) IS FALSE) GROUP BY t0.c50, rt0.c1, v0.c0;
SELECT ALL t0.c50, v0.c0 FROM t0 CROSS JOIN v0 ON (~ (0.2593642946454795 COLLATE NOCASE)) GROUP BY t0.c50, v0.c0;
SELECT t0.c50, v0.c0 FROM t0 CROSS JOIN v0 ON (~ (0.2593642946454795 COLLATE NOCASE)) GROUP BY t0.c50, v0.c0 HAVING ((((((((GROUP_CONCAT(t0.c50))OR((GROUP_CONCAT(AVG(t0.c50)) IN ()))))OR(MAX(AVG(COUNT(*))))))OR(((COUNT(*))%(x'')))))OR(AVG(AVG(t0.c50)))) UNION ALL SELECT ALL t0.c50, v0.c0 FROM t0 CROSS JOIN v0 ON (~ (0.2593642946454795 COLLATE NOCASE)) GROUP BY t0.c50, v0.c0 HAVING (NOT (((((((((GROUP_CONCAT(t0.c50))OR((GROUP_CONCAT(AVG(t0.c50)) IN ()))))OR(MAX(AVG(COUNT(*))))))OR(((COUNT(*))%(x'')))))OR(AVG(AVG(t0.c50)))))) UNION ALL SELECT ALL t0.c50, v0.c0 FROM t0 CROSS JOIN v0 ON (~ (0.2593642946454795 COLLATE NOCASE)) GROUP BY t0.c50, v0.c0 HAVING ((((((((((GROUP_CONCAT(t0.c50))OR((GROUP_CONCAT(AVG(t0.c50)) IN ()))))OR(MAX(AVG(COUNT(*))))))OR(((COUNT(*))%(x'')))))OR(AVG(AVG(t0.c50))))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (1.37743892E9) UNION ALL SELECT * FROM t0 WHERE ((NOT (1.37743892E9))) UNION ALL SELECT ALL * FROM t0 WHERE (((1.37743892E9) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c50, rt0.c2 FROM rt0, t0, v0;
SELECT DISTINCT t0.c50, rt0.c2 FROM rt0, t0, v0 WHERE (rt0.c0) UNION SELECT DISTINCT t0.c50, rt0.c2 FROM rt0, t0, v0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT t0.c50, rt0.c2 FROM rt0, t0, v0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT t0.c50, rt0.c2 FROM rt0, t0, v0;
SELECT v0.c0, t0.c50, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0, v0 GROUP BY v0.c0, t0.c50, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL v0.c0, t0.c50, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0, v0 WHERE (((rt0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (((((((((v0.c0)OR(t0.c50)))OR(rt0.c2)))OR(v0.c0)))OR(t0.c50))))) GROUP BY v0.c0, t0.c50, rt0.c2, rt0.c0, rt0.c1 UNION SELECT v0.c0, t0.c50, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0, v0 WHERE ((NOT (((rt0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (((((((((v0.c0)OR(t0.c50)))OR(rt0.c2)))OR(v0.c0)))OR(t0.c50))))))) GROUP BY v0.c0, t0.c50, rt0.c2, rt0.c0, rt0.c1 UNION SELECT v0.c0, t0.c50, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0, v0 WHERE (((((rt0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (((((((((v0.c0)OR(t0.c50)))OR(rt0.c2)))OR(v0.c0)))OR(t0.c50))))) ISNULL)) GROUP BY v0.c0, t0.c50, rt0.c2, rt0.c0, rt0.c1;
SELECT v0.c0, t0.c50, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0, v0 GROUP BY v0.c0, t0.c50, rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((json_type(v0.c0))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((json_type(v0.c0))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((json_type(v0.c0))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0;
SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 WHERE ('0.39180194976335647') UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((NOT ('0.39180194976335647'))) UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((('0.39180194976335647') ISNULL));
SELECT DISTINCT v0.c0, rt0.c1, rt0.c2, rt0.c0 FROM v0, rt0;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT t0.c50 FROM t0 WHERE ((CAST(t0.c50 AS REAL) IN ())) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM t0 WHERE ((NOT ((CAST(t0.c50 AS REAL) IN ())))) GROUP BY t0.c50 UNION SELECT ALL t0.c50 FROM t0 WHERE ((((CAST(t0.c50 AS REAL) IN ())) ISNULL)) GROUP BY t0.c50;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT rt0.c1, rt0.c0, t0.c50, v0.c0, rt0.c2 FROM v0, rt0, t0 GROUP BY rt0.c1, rt0.c0, t0.c50, v0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, t0.c50, v0.c0, rt0.c2 FROM v0, rt0, t0 GROUP BY rt0.c1, rt0.c0, t0.c50, v0.c0, rt0.c2 HAVING TOTAL(TOTAL(0.9657686317596954)) UNION ALL SELECT ALL rt0.c1, rt0.c0, t0.c50, v0.c0, rt0.c2 FROM v0, rt0, t0 GROUP BY rt0.c1, rt0.c0, t0.c50, v0.c0, rt0.c2 HAVING (NOT (TOTAL(TOTAL(0.9657686317596954)))) UNION ALL SELECT rt0.c1, rt0.c0, t0.c50, v0.c0, rt0.c2 FROM v0, rt0, t0 GROUP BY rt0.c1, rt0.c0, t0.c50, v0.c0, rt0.c2 HAVING ((TOTAL(TOTAL(0.9657686317596954))) ISNULL);
SELECT ALL * FROM rt0, v0, t0;
SELECT * FROM rt0, v0, t0 WHERE (CASE WHEN CASE WHEN v0.c0 THEN t0.c50 WHEN NULL THEN t0.c50 WHEN v0.c0 THEN t0.c50 ELSE v0.c0 END THEN LIKE(rt0.c1, v0.c0, '0') WHEN ((rt0.c0) NOT BETWEEN (x'') AND (rt0.c0)) THEN (rt0.c2 IN ()) WHEN TRIM(rt0.c2, rt0.c0) THEN rt0.c2 COLLATE NOCASE ELSE rt0.c2 END) UNION ALL SELECT ALL * FROM rt0, v0, t0 WHERE ((NOT (CASE WHEN CASE WHEN v0.c0 THEN t0.c50 WHEN NULL THEN t0.c50 WHEN v0.c0 THEN t0.c50 ELSE v0.c0 END THEN LIKE(rt0.c1, v0.c0, '0') WHEN ((rt0.c0) NOT BETWEEN (x'') AND (rt0.c0)) THEN (rt0.c2 IN ()) WHEN TRIM(rt0.c2, rt0.c0) THEN rt0.c2 COLLATE NOCASE ELSE rt0.c2 END))) UNION ALL SELECT ALL * FROM rt0, v0, t0 WHERE (((CASE WHEN CASE WHEN v0.c0 THEN t0.c50 WHEN NULL THEN t0.c50 WHEN v0.c0 THEN t0.c50 ELSE v0.c0 END THEN LIKE(rt0.c1, v0.c0, '0') WHEN ((rt0.c0) NOT BETWEEN (x'') AND (rt0.c0)) THEN (rt0.c2 IN ()) WHEN TRIM(rt0.c2, rt0.c0) THEN rt0.c2 COLLATE NOCASE ELSE rt0.c2 END) ISNULL));
SELECT ALL * FROM rt0, v0, t0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON CASE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))  WHEN UNLIKELY(rt0.c0) THEN (((rt0.c1, t0.c50, v0.c0, t0.c50, '0.44424335481193244')) BETWEEN ((rt0.c0, '0.7354771420556441', rt0.c0, rt0.c2, rt0.c1)) AND ((t0.c50, rt0.c0, rt0.c1, rt0.c1, t0.c50))) WHEN ((rt0.c2) BETWEEN (t0.c50) AND (v0.c0)) THEN ((rt0.c0)%(rt0.c2)) WHEN ((t0.c50)*('''0')) THEN CAST(rt0.c0 AS NUMERIC) END CROSS JOIN t0 ON (+ ((t0.c50 IN ())));
SELECT rt0.c0, v0.c0, t0.c50, rt0.c1, rt0.c2 FROM t0, rt0, v0 GROUP BY rt0.c0, v0.c0, t0.c50, rt0.c1, rt0.c2;
SELECT rt0.c0, v0.c0, t0.c50, rt0.c1, rt0.c2 FROM t0, rt0, v0 WHERE (rt0.c1 COLLATE BINARY) GROUP BY rt0.c0, v0.c0, t0.c50, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, v0.c0, t0.c50, rt0.c1, rt0.c2 FROM t0, rt0, v0 WHERE ((NOT (rt0.c1 COLLATE BINARY))) GROUP BY rt0.c0, v0.c0, t0.c50, rt0.c1, rt0.c2 UNION SELECT rt0.c0, v0.c0, t0.c50, rt0.c1, rt0.c2 FROM t0, rt0, v0 WHERE (((rt0.c1 COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, v0.c0, t0.c50, rt0.c1, rt0.c2;
SELECT rt0.c0, v0.c0, t0.c50, rt0.c1, rt0.c2 FROM t0, rt0, v0 GROUP BY rt0.c0, v0.c0, t0.c50, rt0.c1, rt0.c2;
SELECT v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c0;
SELECT v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c0 HAVING MIN(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT ALL v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c0 HAVING (NOT (MIN(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT ALL v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c0 HAVING ((MIN(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((((0.5088531358316023)AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(v0.c0)))AND(CAST(v0.c0 AS BLOB))))OR(v0.c0 COLLATE RTRIM))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((((((((0.5088531358316023)AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(v0.c0)))AND(CAST(v0.c0 AS BLOB))))OR(v0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((((((0.5088531358316023)AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(v0.c0)))AND(CAST(v0.c0 AS BLOB))))OR(v0.c0 COLLATE RTRIM))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0, t0, v0;
SELECT DISTINCT * FROM rt0, t0, v0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN '' WHEN v0.c0 THEN v0.c0 ELSE t0.c50 END) NOTNULL)) UNION SELECT DISTINCT * FROM rt0, t0, v0 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN '' WHEN v0.c0 THEN v0.c0 ELSE t0.c50 END) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, t0, v0 WHERE (((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN '' WHEN v0.c0 THEN v0.c0 ELSE t0.c50 END) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, t0, v0;
SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, v0 WHERE (IFNULL(DISTINCT CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, ((((rt0.c1)AND(rt0.c2)))AND(v0.c0)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, v0 WHERE ((NOT (IFNULL(DISTINCT CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, ((((rt0.c1)AND(rt0.c2)))AND(v0.c0)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, v0 WHERE (((IFNULL(DISTINCT CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, ((((rt0.c1)AND(rt0.c2)))AND(v0.c0)))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(SUM(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(SUM(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(SUM(v0.c0))) ISNULL);
SELECT ALL t0.c50 FROM v0, t0;
SELECT ALL t0.c50 FROM v0, t0 WHERE ((((v0.c0, t0.c50, v0.c0, v0.c0, t0.c50)) BETWEEN ((((t0.c50) NOT NULL), ((((t0.c50)AND(v0.c0)))AND(t0.c50)), ((x'')*(v0.c0)), 0X70492dd4, 1.55283437E9)) AND ((v0.c0, CAST(0.22502805090880584 AS NUMERIC), ((((((((t0.c50)AND(v0.c0)))OR(t0.c50)))AND(v0.c0)))OR(t0.c50)), x'', NULLIF(t0.c50, v0.c0))))) UNION ALL SELECT t0.c50 FROM v0, t0 WHERE ((NOT ((((v0.c0, t0.c50, v0.c0, v0.c0, t0.c50)) BETWEEN ((((t0.c50) NOT NULL), ((((t0.c50)AND(v0.c0)))AND(t0.c50)), ((x'')*(v0.c0)), 0x70492dd4, 1.55283437E9)) AND ((v0.c0, CAST(0.22502805090880584 AS NUMERIC), ((((((((t0.c50)AND(v0.c0)))OR(t0.c50)))AND(v0.c0)))OR(t0.c50)), x'', NULLIF(t0.c50, v0.c0))))))) UNION ALL SELECT ALL t0.c50 FROM v0, t0 WHERE ((((((v0.c0, t0.c50, v0.c0, v0.c0, t0.c50)) BETWEEN ((((t0.c50) NOT NULL), ((((t0.c50)AND(v0.c0)))AND(t0.c50)), ((x'')*(v0.c0)), 0x70492dd4, 1.55283437E9)) AND ((v0.c0, CAST(0.22502805090880584 AS NUMERIC), ((((((((t0.c50)AND(v0.c0)))OR(t0.c50)))AND(v0.c0)))OR(t0.c50)), x'', NULLIF(t0.c50, v0.c0))))) ISNULL));
SELECT ALL t0.c50 FROM v0, t0;
SELECT DISTINCT * FROM v0, rt0, t0;
SELECT DISTINCT * FROM v0, rt0, t0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c0 END IN ())) UNION SELECT DISTINCT * FROM v0, rt0, t0 WHERE ((NOT ((CASE WHEN rt0.c1 THEN rt0.c0 END IN ())))) UNION SELECT DISTINCT * FROM v0, rt0, t0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c0 END IN ())) ISNULL));
SELECT DISTINCT * FROM v0, rt0, t0;
SELECT ALL rt0.c2, t0.c50, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, t0.c50, rt0.c0;
SELECT rt0.c2, t0.c50, rt0.c0 FROM t0, rt0 WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c2)<>(rt0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) ELSE 0.4021043386236488 END) GROUP BY rt0.c2, t0.c50, rt0.c0 UNION SELECT rt0.c2, t0.c50, rt0.c0 FROM t0, rt0 WHERE ((NOT (CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c2)!=(rt0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) ELSE 0.4021043386236488 END))) GROUP BY rt0.c2, t0.c50, rt0.c0 UNION SELECT rt0.c2, t0.c50, rt0.c0 FROM t0, rt0 WHERE (((CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c2)!=(rt0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) ELSE 0.4021043386236488 END) ISNULL)) GROUP BY rt0.c2, t0.c50, rt0.c0;
SELECT ALL rt0.c2, t0.c50, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, t0.c50, rt0.c0;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING MAX(CASE WHEN SUM(COUNT(*)) THEN COUNT(AVG(rt0.c2)) ELSE COUNT(0.5001786248807044) END) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING (NOT (MAX(CASE WHEN SUM(COUNT(*)) THEN COUNT(AVG(rt0.c2)) ELSE COUNT(0.5001786248807044) END))) UNION ALL SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING ((MAX(CASE WHEN SUM(COUNT(*)) THEN COUNT(AVG(rt0.c2)) ELSE COUNT(0.5001786248807044) END)) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((((t0.c50)) NOT BETWEEN ((((t0.c50) NOT BETWEEN ('1419613181') AND (t0.c50)))) AND ((CASE WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c50 WHEN x'' THEN t0.c50 ELSE t0.c50 END)))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((t0.c50)) NOT BETWEEN ((((t0.c50) NOT BETWEEN ('1419613181') AND (t0.c50)))) AND ((CASE WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c50 WHEN x'' THEN t0.c50 ELSE t0.c50 END)))))) UNION ALL SELECT * FROM t0 WHERE ((((((t0.c50)) NOT BETWEEN ((((t0.c50) NOT BETWEEN ('1419613181') AND (t0.c50)))) AND ((CASE WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c50 WHEN x'' THEN t0.c50 ELSE t0.c50 END)))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((((rt0.c0)) NOT BETWEEN ((((v0.c0)AND(v0.c0)))) AND ((CAST(rt0.c0 AS BLOB))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((((v0.c0)AND(v0.c0)))) AND ((CAST(rt0.c0 AS BLOB))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((((((rt0.c0)) NOT BETWEEN ((((v0.c0)AND(v0.c0)))) AND ((CAST(rt0.c0 AS BLOB))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM rt0, v0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (0Xffffffffc4b5fd63) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (0xffffffffc4b5fd63))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((0xffffffffc4b5fd63) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((~ (COUNT(*)))) NOT BETWEEN ((rt0.c1 IN (rt0.c0))) AND (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT ((((~ (COUNT(*)))) NOT BETWEEN ((rt0.c1 IN (rt0.c0))) AND (COUNT(*))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((((~ (COUNT(*)))) NOT BETWEEN ((rt0.c1 IN (rt0.c0))) AND (COUNT(*)))) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((~ (COUNT(*)))) NOT BETWEEN ((rt0.c1 IN (rt0.c0))) AND (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT ((((~ (COUNT(*)))) NOT BETWEEN ((rt0.c1 IN (rt0.c0))) AND (COUNT(*))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((((~ (COUNT(*)))) NOT BETWEEN ((rt0.c1 IN (rt0.c0))) AND (COUNT(*)))) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE (((((v0.c0) IS FALSE))>=(((v0.c0)AND(t0.c50))))) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT (((((v0.c0) IS FALSE))>=(((v0.c0)AND(t0.c50))))))) UNION ALL SELECT ALL * FROM t0, v0 WHERE (((((((v0.c0) IS FALSE))>=(((v0.c0)AND(t0.c50))))) ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN t0.c50 COLLATE BINARY THEN t0.c50 END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE WHEN t0.c50 COLLATE BINARY THEN t0.c50 END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN t0.c50 COLLATE BINARY THEN t0.c50 END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (TRIM(v0.c0, v0.c0) COLLATE BINARY) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (TRIM(v0.c0, v0.c0) COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((TRIM(v0.c0, v0.c0) COLLATE BINARY) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c50 FROM t0 GROUP BY t0.c50;
SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING COUNT(((t0.c50)<<(GROUP_CONCAT(t0.c50)))) UNION ALL SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING (NOT (COUNT(((t0.c50)<<(GROUP_CONCAT(t0.c50)))))) UNION ALL SELECT t0.c50 FROM t0 GROUP BY t0.c50 HAVING ((COUNT(((t0.c50)<<(GROUP_CONCAT(t0.c50))))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (LIKELIHOOD(DISTINCT ((v0.c0)OR(v0.c0)), 0.24038134202046169)) UNION ALL SELECT * FROM v0 WHERE ((NOT (LIKELIHOOD(DISTINCT ((v0.c0)OR(v0.c0)), 0.24038134202046169)))) UNION ALL SELECT * FROM v0 WHERE (((LIKELIHOOD(DISTINCT ((v0.c0)OR(v0.c0)), 0.24038134202046169)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<=((CASE WHEN v0.c0 THEN 'WO' END)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<=((CASE WHEN v0.c0 THEN 'WO' END)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<=((CASE WHEN v0.c0 THEN 'WO' END)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 WHERE (((((- (v0.c0))))<=((CASE WHEN rt0.c0 THEN x'' END)))) GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (((((- (v0.c0))))<=((CASE WHEN rt0.c0 THEN x'' END)))))) GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 WHERE (((((((- (v0.c0))))<=((CASE WHEN rt0.c0 THEN x'' END)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (x''))) BETWEEN ((~ (rt0.c0))) AND (rt0.c1 COLLATE RTRIM)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (x''))) BETWEEN ((~ (rt0.c0))) AND (rt0.c1 COLLATE RTRIM)) GROUP BY rt0.c2, rt0.c1 HAVING CAST(GROUP_CONCAT(rt0.c0) COLLATE BINARY AS NUMERIC) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (x''))) BETWEEN ((~ (rt0.c0))) AND (rt0.c1 COLLATE RTRIM)) GROUP BY rt0.c2, rt0.c1 HAVING (NOT (CAST(GROUP_CONCAT(rt0.c0) COLLATE BINARY AS NUMERIC))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (x''))) BETWEEN ((~ (rt0.c0))) AND (rt0.c1 COLLATE RTRIM)) GROUP BY rt0.c2, rt0.c1 HAVING ((CAST(GROUP_CONCAT(rt0.c0) COLLATE BINARY AS NUMERIC)) ISNULL);
SELECT rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (x''))) BETWEEN ((~ (rt0.c0))) AND (rt0.c1 COLLATE RTRIM)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (x''))) BETWEEN ((~ (rt0.c0))) AND (rt0.c1 COLLATE RTRIM)) GROUP BY rt0.c2, rt0.c1 HAVING CAST(GROUP_CONCAT(rt0.c0) COLLATE BINARY AS NUMERIC) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (x''))) BETWEEN ((~ (rt0.c0))) AND (rt0.c1 COLLATE RTRIM)) GROUP BY rt0.c2, rt0.c1 HAVING (NOT (CAST(GROUP_CONCAT(rt0.c0) COLLATE BINARY AS NUMERIC))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (x''))) BETWEEN ((~ (rt0.c0))) AND (rt0.c1 COLLATE RTRIM)) GROUP BY rt0.c2, rt0.c1 HAVING ((CAST(GROUP_CONCAT(rt0.c0) COLLATE BINARY AS NUMERIC)) ISNULL);
SELECT rt0.c2, rt0.c1 FROM v0 CROSS JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (x''))) BETWEEN ((~ (rt0.c0))) AND (rt0.c1 COLLATE RTRIM)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (CASE WHEN ((rt0.c1)IS(rt0.c0)) THEN rt0.c1 WHEN CAST(rt0.c2 AS INTEGER) THEN (((rt0.c0))<((rt0.c1))) WHEN (rt0.c0 IN (rt0.c0, rt0.c0)) THEN ((rt0.c2) IS TRUE) ELSE ((rt0.c2) NOTNULL) END) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c1)IS(rt0.c0)) THEN rt0.c1 WHEN CAST(rt0.c2 AS INTEGER) THEN (((rt0.c0))<((rt0.c1))) WHEN (rt0.c0 IN (rt0.c0, rt0.c0)) THEN ((rt0.c2) IS TRUE) ELSE ((rt0.c2) NOTNULL) END))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE WHEN ((rt0.c1)IS(rt0.c0)) THEN rt0.c1 WHEN CAST(rt0.c2 AS INTEGER) THEN (((rt0.c0))<((rt0.c1))) WHEN (rt0.c0 IN (rt0.c0, rt0.c0)) THEN ((rt0.c2) IS TRUE) ELSE ((rt0.c2) NOTNULL) END) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
