-- Time: 2024/06/11 02:52:10
-- Database: database24
-- Database version: 3.40.0
-- seed value: 1076688224
PRAGMA cache_size = 50000; -- 14ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 2ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, +c3 BLOB ); -- 0ms;
ROLLBACK TRANSACTION; -- 3ms;
REINDEX; -- 1ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c0) VALUES ('0', 2001372911); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt1(c1) VALUES (2001372911); -- 0ms;
INSERT OR FAIL INTO rt1(c2) VALUES (0.06845785635895174), (0.06845785635895174), ((((x'')) NOT BETWEEN ((x'')) AND ((0x4d492dba))) COLLATE BINARY); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL), (2.001372911E9), (0.7713333213853342); -- 0ms;
DROP TABLE vt0; -- 1ms;
INSERT OR IGNORE INTO rt1(c1, c3) VALUES (NULL, NULL); -- 0ms;
COMMIT; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR FAIL INTO rt1(c3, c2) VALUES ('%hNⶺ*U0', x''); -- 1ms;
END TRANSACTION; -- 0ms;
CREATE TEMPORARY VIEW v0(c0, c1, c2) AS SELECT ALL ((MAX(NULL, rt1.c1, rt1.c1, rt1.c3))%(CASE WHEN rt1.c2 THEN rt1.c1 WHEN 0.5667277140135435 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 END)), (LIKELIHOOD(DISTINCT rt1.c1, 0.2692285697635921) IN ()), rt1.c0 FROM rt1; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c3, c0) VALUES ('[fh9', 0.8751324501721967); -- 1ms;
PRAGMA cache_spill; -- 0ms;
INSERT OR ABORT INTO rt1 VALUES (NULL, -1397423846, '', x''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c1, c0, c2) VALUES (0xffffffffbaef0251, '-1158741423', x''); -- 0ms;
PRAGMA temp.locking_mode = EXCLUSIVE; -- 1ms;
INSERT OR FAIL INTO rt1 VALUES ('1296641466', 2.001372911E9, '-962378932', 0.9866625734727781); -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c2, c0) VALUES (NULL, 0.8413366236189517, '[fh9'); -- 0ms;
ANALYZE rt1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt1', ' sz=1319924845 noskipscan'); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c2, c1, c0) VALUES (x'2774', x'', 0.6308430108843736), ('-1563823919', x'', x''), (NULL, x'42b9', 0.9866625734727781); -- 1ms;
INSERT OR IGNORE INTO rt1(c0, c3) VALUES (-9.62378932E8, 'kkU瑭'); -- 1ms;
SELECT rtreecheck('rt1'); -- 0ms;
INSERT OR ABORT INTO rt1(c1, c3) VALUES (0x6dc587f9, NULL); -- 0ms;
INSERT OR ABORT INTO rt1(c0) VALUES (''); -- 1ms;
INSERT OR ABORT INTO rt1(c2, c3, c0) VALUES (0x221a719c, x'', ''); -- 0ms;
INSERT OR FAIL INTO rt1(c0) VALUES (x''); -- 0ms;
INSERT OR FAIL INTO rt1(c3, c2) VALUES ('-1347176363', 0xffffffffd2264aa2); -- 0ms;
INSERT OR REPLACE INTO rt1(c3) VALUES ('1270874076'), (NULL), ('-1563823919'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO rt1(c1) VALUES (x'529f'); -- 0ms;
INSERT OR IGNORE INTO rt1(c3) VALUES ('0.7713333213853342'); -- 0ms;
PRAGMA wal_autocheckpoint = 532636290132305659; -- 1ms;
SELECT rtreecheck('rt1'); -- 0ms;
ANALYZE; -- 1ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 INTEGER CHECK ( (NULL IN ())) UNIQUE NOT NULL ON CONFLICT FAIL ); -- 1ms;
ANALYZE; -- 1ms;
INSERT OR FAIL INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL), (0xffffffff87aa32c9), (NULL); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES (''); -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO rt1(c3) VALUES (x''), ('1!\ny\L'), (-7.69242462E8); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t0 ADD COLUMN c20 INTEGER; -- 1ms;
ANALYZE; -- 0ms;
DELETE FROM t0 WHERE (((t0.c20)>>(t0.c20)) IN (t0.c0 COLLATE RTRIM)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX  rt1; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c20 TO c93; -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
VACUUM temp; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE t0 SET (c93)=(NULL) WHERE (+ ((('')%(t0.c93)))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '63710'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '40034'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '7123'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 13); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=3'); -- 0ms;
CREATE INDEX i52 ON t0((((c0)<<(c0)) IN ((+ ('1319924845')), (+ (c93)))) COLLATE RTRIM DESC,CAST(((c93)AND(c93)) AS NUMERIC) ASC) WHERE (('-228560025')<<(((c0)<(c0)))); -- 0ms;
END; -- 0ms;
PRAGMA main.automatic_index; -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR ABORT INTO t0(c93) VALUES (NULL); -- 1ms;
INSERT OR ABORT INTO rt1(c0, c1, c2) VALUES (1.270874076E9, '1223748666', NULL); -- 1ms;
INSERT OR REPLACE INTO rt1(c2) VALUES (x''); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.4703184371486825), (0.09421035991711957), (1.319924845E9); -- 0ms;
ANALYZE i52; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL v0.c1, rt1.c3, rt1.c0, v0.c2, t0.c93, rt1.c1, rt1.c2, t0.c0, v0.c0 FROM t0, v0, rt1;
SELECT ALL v0.c1, rt1.c3, rt1.c0, v0.c2, t0.c93, rt1.c1, rt1.c2, t0.c0, v0.c0 FROM t0, v0, rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((((v0.c0)>=(rt1.c0)))) AND ((v0.c2 COLLATE BINARY)))) UNION ALL SELECT v0.c1, rt1.c3, rt1.c0, v0.c2, t0.c93, rt1.c1, rt1.c2, t0.c0, v0.c0 FROM t0, v0, rt1 WHERE ((NOT ((((rt1.c1)) NOT BETWEEN ((((v0.c0)>=(rt1.c0)))) AND ((v0.c2 COLLATE BINARY)))))) UNION ALL SELECT ALL v0.c1, rt1.c3, rt1.c0, v0.c2, t0.c93, rt1.c1, rt1.c2, t0.c0, v0.c0 FROM t0, v0, rt1 WHERE ((((((rt1.c1)) NOT BETWEEN ((((v0.c0)>=(rt1.c0)))) AND ((v0.c2 COLLATE BINARY)))) ISNULL));
SELECT ALL v0.c1, rt1.c3, rt1.c0, v0.c2, t0.c93, rt1.c1, rt1.c2, t0.c0, v0.c0 FROM t0, v0, rt1;
SELECT DISTINCT * FROM rt1 CROSS JOIN vt0 ON CAST((((rt1.c3, t0.c0, v0.c1))>=((vt0.c0, rt1.c1, vt0.c0))) AS NUMERIC) FULL OUTER JOIN v0 ON 'ꪈBj' RIGHT OUTER JOIN t0 ON ((rt1.c1) NOT BETWEEN (((((rt1.c2)OR(t0.c93)))AND(rt1.c0))) AND ((v0.c0 IN ())));
SELECT t0.c93, rt1.c1, v0.c2, rt1.c2, t0.c0 FROM rt1, v0, t0 LEFT OUTER JOIN vt0 ON ((v0.c0 COLLATE RTRIM)%(CAST(t0.c0 AS TEXT))) GROUP BY t0.c93, rt1.c1, v0.c2, rt1.c2, t0.c0;
SELECT t0.c93, rt1.c1, v0.c2, rt1.c2, t0.c0 FROM rt1, v0, t0 LEFT OUTER JOIN vt0 ON ((v0.c0 COLLATE RTRIM)%(CAST(t0.c0 AS TEXT))) WHERE (CASE WHEN '0.9866625734727781' THEN ((rt1.c0)>>(rt1.c1)) WHEN ((v0.c2)>=(v0.c0)) THEN CASE WHEN t0.c93 THEN vt0.c0 WHEN v0.c2 THEN rt1.c1 WHEN rt1.c2 THEN v0.c2 END WHEN (- (-7.69242462E8)) THEN ((rt1.c1)<(t0.c93)) ELSE 'Vv6 ' END) GROUP BY t0.c93, rt1.c1, v0.c2, rt1.c2, t0.c0 UNION SELECT ALL t0.c93, rt1.c1, v0.c2, rt1.c2, t0.c0 FROM rt1, v0, t0 LEFT OUTER JOIN vt0 ON ((v0.c0 COLLATE RTRIM)%(CAST(t0.c0 AS TEXT))) WHERE ((NOT (CASE WHEN '0.9866625734727781' THEN ((rt1.c0)>>(rt1.c1)) WHEN ((v0.c2)>=(v0.c0)) THEN CASE WHEN t0.c93 THEN vt0.c0 WHEN v0.c2 THEN rt1.c1 WHEN rt1.c2 THEN v0.c2 END WHEN (- (-7.69242462E8)) THEN ((rt1.c1)<(t0.c93)) ELSE 'Vv6 ' END))) GROUP BY t0.c93, rt1.c1, v0.c2, rt1.c2, t0.c0 UNION SELECT ALL t0.c93, rt1.c1, v0.c2, rt1.c2, t0.c0 FROM rt1, v0, t0 LEFT OUTER JOIN vt0 ON ((v0.c0 COLLATE RTRIM)%(CAST(t0.c0 AS TEXT))) WHERE (((CASE WHEN '0.9866625734727781' THEN ((rt1.c0)>>(rt1.c1)) WHEN ((v0.c2)>=(v0.c0)) THEN CASE WHEN t0.c93 THEN vt0.c0 WHEN v0.c2 THEN rt1.c1 WHEN rt1.c2 THEN v0.c2 END WHEN (- (-7.69242462E8)) THEN ((rt1.c1)<(t0.c93)) ELSE 'Vv6 ' END) ISNULL)) GROUP BY t0.c93, rt1.c1, v0.c2, rt1.c2, t0.c0;
SELECT t0.c93, rt1.c1, v0.c2, rt1.c2, t0.c0 FROM rt1, v0, t0 LEFT OUTER JOIN vt0 ON ((v0.c0 COLLATE RTRIM)%(CAST(t0.c0 AS TEXT))) GROUP BY t0.c93, rt1.c1, v0.c2, rt1.c2, t0.c0;
SELECT v0.c0, t0.c93, vt0.c0 FROM v0 INNER JOIN t0 ON LIKE(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)), ((t0.c93) NOT BETWEEN (v0.c2) AND (t0.c0))) LEFT OUTER JOIN vt0 ON ((((v0.c2)=('DHVjVS 6{'))) BETWEEN ((~ (t0.c93))) AND ((- (t0.c0)))) GROUP BY v0.c0, t0.c93, vt0.c0;
SELECT v0.c0, t0.c93, vt0.c0 FROM v0 INNER JOIN t0 ON LIKE(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)), ((t0.c93) NOT BETWEEN (v0.c2) AND (t0.c0))) LEFT OUTER JOIN vt0 ON ((((v0.c2)==('DHVjVS 6{'))) BETWEEN ((~ (t0.c93))) AND ((- (t0.c0)))) GROUP BY v0.c0, t0.c93, vt0.c0 HAVING ((COUNT(*)) BETWEEN (((MAX(MIN(TOTAL(AVG(COUNT(*)))))) IS TRUE)) AND (COUNT(AVG(COUNT(v0.c1))))) UNION ALL SELECT ALL v0.c0, t0.c93, vt0.c0 FROM v0 NOT INDEXED INNER JOIN t0 ON LIKE(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)), ((t0.c93) NOT BETWEEN (v0.c2) AND (t0.c0))) LEFT OUTER JOIN vt0 ON ((((v0.c2)==('DHVjVS 6{'))) BETWEEN ((~ (t0.c93))) AND ((- (t0.c0)))) GROUP BY v0.c0, t0.c93, vt0.c0 HAVING (NOT (((COUNT(*)) BETWEEN (((MAX(MIN(TOTAL(AVG(COUNT(*)))))) IS TRUE)) AND (COUNT(AVG(COUNT(v0.c1))))))) UNION ALL SELECT v0.c0, t0.c93, vt0.c0 FROM v0 INNER JOIN t0 ON LIKE(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)), ((t0.c93) NOT BETWEEN (v0.c2) AND (t0.c0))) LEFT OUTER JOIN vt0 ON ((((v0.c2)=('DHVjVS 6{'))) BETWEEN ((~ (t0.c93))) AND ((- (t0.c0)))) GROUP BY v0.c0, t0.c93, vt0.c0 HAVING ((((COUNT(*)) BETWEEN (((MAX(MIN(TOTAL(AVG(COUNT(*)))))) IS TRUE)) AND (COUNT(AVG(COUNT(v0.c1)))))) ISNULL);
SELECT v0.c1, rt1.c2, t0.c0 FROM rt1, t0 FULL OUTER JOIN vt0 ON (((~ (rt1.c2))) NOT BETWEEN ((~ (rt1.c2))) AND ((NOT (vt0.c0)))) RIGHT OUTER JOIN v0 ON ((((CASE rt1.c2  WHEN v0.c1 THEN rt1.c0 END)OR((NOT (rt1.c1)))))AND(v0.c1 COLLATE BINARY));
SELECT v0.c1, rt1.c2, t0.c0 FROM rt1, t0 FULL OUTER JOIN vt0 ON (((~ (rt1.c2))) NOT BETWEEN ((~ (rt1.c2))) AND ((NOT (vt0.c0)))) RIGHT OUTER JOIN v0 ON ((((CASE rt1.c2  WHEN v0.c1 THEN rt1.c0 END)OR((NOT (rt1.c1)))))AND(v0.c1 COLLATE BINARY)) WHERE (LIKE(vt0.c0, t0.c93, '6') COLLATE BINARY) UNION ALL SELECT ALL v0.c1, rt1.c2, t0.c0 FROM rt1, t0 FULL OUTER JOIN vt0 ON (((~ (rt1.c2))) NOT BETWEEN ((~ (rt1.c2))) AND ((NOT (vt0.c0)))) RIGHT OUTER JOIN v0 ON ((((CASE rt1.c2  WHEN v0.c1 THEN rt1.c0 END)OR((NOT (rt1.c1)))))AND(v0.c1 COLLATE BINARY)) WHERE ((NOT (LIKE(vt0.c0, t0.c93, '6') COLLATE BINARY))) UNION ALL SELECT ALL v0.c1, rt1.c2, t0.c0 FROM rt1, t0 FULL OUTER JOIN vt0 ON (((~ (rt1.c2))) NOT BETWEEN ((~ (rt1.c2))) AND ((NOT (vt0.c0)))) RIGHT OUTER JOIN v0 ON ((((CASE rt1.c2  WHEN v0.c1 THEN rt1.c0 END)OR((NOT (rt1.c1)))))AND(v0.c1 COLLATE BINARY)) WHERE (((LIKE(vt0.c0, t0.c93, '6') COLLATE BINARY) ISNULL));
SELECT v0.c1, rt1.c2, t0.c0 FROM rt1, t0 FULL OUTER JOIN vt0 ON (((~ (rt1.c2))) NOT BETWEEN ((~ (rt1.c2))) AND ((NOT (vt0.c0)))) RIGHT OUTER JOIN v0 ON ((((CASE rt1.c2  WHEN v0.c1 THEN rt1.c0 END)OR((NOT (rt1.c1)))))AND(v0.c1 COLLATE BINARY));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)IS(vt0.c0))) BETWEEN ((('')AND(vt0.c0))) AND ('-769242462'))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)IS(vt0.c0))) BETWEEN ((('')AND(vt0.c0))) AND ('-769242462'))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)IS(vt0.c0))) BETWEEN ((('')AND(vt0.c0))) AND ('-769242462'))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0, rt1.c0, t0.c93, rt1.c2, rt1.c3 FROM t0, vt0, rt1 GROUP BY t0.c0, rt1.c0, t0.c93, rt1.c2, rt1.c3;
SELECT ALL t0.c0, rt1.c0, t0.c93, rt1.c2, rt1.c3 FROM t0, vt0, rt1 WHERE ((NULL IN (CASE WHEN t0.c93 THEN t0.c0 WHEN rt1.c3 THEN rt1.c3 WHEN t0.c93 THEN rt1.c1 ELSE rt1.c3 END, ((((t0.c0)OR(t0.c93)))AND(rt1.c2)), CASE WHEN 0.06845785635895174 THEN rt1.c2 WHEN rt1.c3 THEN t0.c0 WHEN rt1.c1 THEN rt1.c0 END))) GROUP BY t0.c0, rt1.c0, t0.c93, rt1.c2, rt1.c3 UNION SELECT ALL t0.c0, rt1.c0, t0.c93, rt1.c2, rt1.c3 FROM t0, vt0, rt1 WHERE ((NOT ((NULL IN (CASE WHEN t0.c93 THEN t0.c0 WHEN rt1.c3 THEN rt1.c3 WHEN t0.c93 THEN rt1.c1 ELSE rt1.c3 END, ((((t0.c0)OR(t0.c93)))AND(rt1.c2)), CASE WHEN 0.06845785635895174 THEN rt1.c2 WHEN rt1.c3 THEN t0.c0 WHEN rt1.c1 THEN rt1.c0 END))))) GROUP BY t0.c0, rt1.c0, t0.c93, rt1.c2, rt1.c3 UNION SELECT ALL t0.c0, rt1.c0, t0.c93, rt1.c2, rt1.c3 FROM t0, vt0, rt1 WHERE ((((NULL IN (CASE WHEN t0.c93 THEN t0.c0 WHEN rt1.c3 THEN rt1.c3 WHEN t0.c93 THEN rt1.c1 ELSE rt1.c3 END, ((((t0.c0)OR(t0.c93)))AND(rt1.c2)), CASE WHEN 0.06845785635895174 THEN rt1.c2 WHEN rt1.c3 THEN t0.c0 WHEN rt1.c1 THEN rt1.c0 END))) ISNULL)) GROUP BY t0.c0, rt1.c0, t0.c93, rt1.c2, rt1.c3;
SELECT t0.c0, rt1.c0, t0.c93, rt1.c2, rt1.c3 FROM t0, vt0, rt1 GROUP BY t0.c0, rt1.c0, t0.c93, rt1.c2, rt1.c3;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT MAX(((((rt1.c0) NOT BETWEEN (rt1.c3) AND (t0.c0))) ISNULL)) FROM rt1, t0;
SELECT vt0.c0, v0.c0, t0.c0, v0.c1 FROM v0, t0, vt0;
SELECT vt0.c0, v0.c0, t0.c0, v0.c1 FROM v0, t0, vt0 WHERE ((((('9223372036854775807')>(v0.c0))) NOT NULL)) UNION ALL SELECT vt0.c0, v0.c0, t0.c0, v0.c1 FROM v0, t0, vt0 WHERE ((NOT ((((('9223372036854775807')>(v0.c0))) NOT NULL)))) UNION ALL SELECT ALL vt0.c0, v0.c0, t0.c0, v0.c1 FROM v0, t0, vt0 WHERE ((((((('9223372036854775807')>(v0.c0))) NOT NULL)) ISNULL));
SELECT vt0.c0, v0.c0, t0.c0, v0.c1 FROM v0, t0, vt0;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON v0.c0;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON v0.c0 WHERE (((+ (x'')) IN ())) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON v0.c0 WHERE ((NOT (((+ (x'')) IN ())))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON v0.c0 WHERE (((((+ (x'')) IN ())) ISNULL));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON v0.c0;
SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)))>=(TRIM(rt1.c2, rt1.c1)))) GROUP BY rt1.c2, rt1.c0 UNION SELECT rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)))>=(TRIM(rt1.c2, rt1.c1)))))) GROUP BY rt1.c2, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE (((((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)))>=(TRIM(rt1.c2, rt1.c1)))) ISNULL)) GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL v0.c1, v0.c2, t0.c93, v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c1, v0.c2, t0.c93, v0.c0, t0.c0;
SELECT v0.c1, v0.c2, t0.c93, v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c1, v0.c2, t0.c93, v0.c0, t0.c0 HAVING MAX((((MIN(COUNT(*)), 739355643, TOTAL(AVG(v0.c2))))==((COUNT(*), v0.c1, v0.c2)))) UNION ALL SELECT ALL v0.c1, v0.c2, t0.c93, v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c1, v0.c2, t0.c93, v0.c0, t0.c0 HAVING (NOT (MAX((((MIN(COUNT(*)), 739355643, TOTAL(AVG(v0.c2))))==((COUNT(*), v0.c1, v0.c2)))))) UNION ALL SELECT v0.c1, v0.c2, t0.c93, v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c1, v0.c2, t0.c93, v0.c0, t0.c0 HAVING ((MAX((((MIN(COUNT(*)), 739355643, TOTAL(AVG(v0.c2))))==((COUNT(*), v0.c1, v0.c2))))) ISNULL);
SELECT ALL v0.c2 FROM v0;
SELECT v0.c2 FROM v0 WHERE ((((v0.c0 IN ()))>>(((((v0.c2)OR(v0.c1)))AND(v0.c1))))) UNION ALL SELECT ALL v0.c2 FROM v0 WHERE ((NOT ((((v0.c0 IN ()))>>(((((v0.c2)OR(v0.c1)))AND(v0.c1))))))) UNION ALL SELECT v0.c2 FROM v0 WHERE ((((((v0.c0 IN ()))>>(((((v0.c2)OR(v0.c1)))AND(v0.c1))))) ISNULL));
SELECT ALL v0.c2 FROM v0;
SELECT DISTINCT * FROM rt1, t0, vt0;
SELECT DISTINCT * FROM rt1, t0, vt0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM rt1, t0, vt0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM rt1, t0, vt0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM rt1, t0, vt0;
SELECT t0.c93 FROM t0, v0, rt1 GROUP BY t0.c93;
SELECT ALL t0.c93 FROM t0, v0, rt1 WHERE (((((((t0.c93)AND(v0.c2)))AND(rt1.c3))) IS FALSE)) GROUP BY t0.c93 UNION SELECT t0.c93 FROM t0, v0, rt1 WHERE ((NOT (((((((t0.c93)AND(v0.c2)))AND(rt1.c3))) IS FALSE)))) GROUP BY t0.c93 UNION SELECT t0.c93 FROM t0, v0, rt1 WHERE (((((((((t0.c93)AND(v0.c2)))AND(rt1.c3))) IS FALSE)) ISNULL)) GROUP BY t0.c93;
SELECT t0.c93 FROM t0, v0, rt1 GROUP BY t0.c93;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TIME(t0.c0, COUNT(*), '-94254968')) BETWEEN ((((SUM(t0.c0)))<>((MIN(t0.c93))))) AND (AVG(MIN(t0.c93)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((TIME(t0.c0, COUNT(*), '-94254968')) BETWEEN ((((SUM(t0.c0)))<>((MIN(t0.c93))))) AND (AVG(MIN(t0.c93)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((TIME(t0.c0, COUNT(*), '-94254968')) BETWEEN ((((SUM(t0.c0)))<>((MIN(t0.c93))))) AND (AVG(MIN(t0.c93))))) ISNULL);
SELECT ALL v0.c0, v0.c2, rt1.c1, t0.c0, t0.c93, rt1.c2, vt0.c0 FROM v0, rt1, t0 RIGHT OUTER JOIN vt0 ON (+ (((rt1.c3) NOT BETWEEN (rt1.c0) AND (v0.c1))));
SELECT v0.c0, v0.c2, rt1.c1, t0.c0, t0.c93, rt1.c2, vt0.c0 FROM v0, rt1, t0 RIGHT OUTER JOIN vt0 ON (+ (((rt1.c3) NOT BETWEEN (rt1.c0) AND (v0.c1)))) WHERE (((CAST('M蛯M#' AS REAL))IS NOT(((vt0.c0)*(t0.c93))))) UNION ALL SELECT v0.c0, v0.c2, rt1.c1, t0.c0, t0.c93, rt1.c2, vt0.c0 FROM v0, rt1, t0 RIGHT OUTER JOIN vt0 ON (+ (((rt1.c3) NOT BETWEEN (rt1.c0) AND (v0.c1)))) WHERE ((NOT (((CAST('M蛯M#' AS REAL))IS NOT(((vt0.c0)*(t0.c93))))))) UNION ALL SELECT v0.c0, v0.c2, rt1.c1, t0.c0, t0.c93, rt1.c2, vt0.c0 FROM v0, rt1, t0 RIGHT OUTER JOIN vt0 ON (+ (((rt1.c3) NOT BETWEEN (rt1.c0) AND (v0.c1)))) WHERE (((((CAST('M蛯M#' AS REAL))IS NOT(((vt0.c0)*(t0.c93))))) ISNULL));
SELECT ALL v0.c0, v0.c2, rt1.c1, t0.c0, t0.c93, rt1.c2, vt0.c0 FROM v0, rt1, t0 RIGHT OUTER JOIN vt0 ON (+ (((rt1.c3) NOT BETWEEN (rt1.c0) AND (v0.c1))));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(JULIANDAY(t0.c93, t0.c93, t0.c0) AS REAL)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(JULIANDAY(t0.c93, t0.c93, t0.c0) AS REAL)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(JULIANDAY(t0.c93, t0.c93, t0.c0) AS REAL)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1;
SELECT v0.c0, v0.c1 FROM v0 WHERE (CASE (((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c1)))  WHEN '1524772167' THEN ((((v0.c0)OR(v0.c2)))AND(v0.c1)) ELSE ((v0.c0)<<(v0.c0)) END) GROUP BY v0.c0, v0.c1 UNION SELECT v0.c0, v0.c1 FROM v0 WHERE ((NOT (CASE (((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c1)))  WHEN '1524772167' THEN ((((v0.c0)OR(v0.c2)))AND(v0.c1)) ELSE ((v0.c0)<<(v0.c0)) END))) GROUP BY v0.c0, v0.c1 UNION SELECT v0.c0, v0.c1 FROM v0 WHERE (((CASE (((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c1)))  WHEN '1524772167' THEN ((((v0.c0)OR(v0.c2)))AND(v0.c1)) ELSE ((v0.c0)<<(v0.c0)) END) ISNULL)) GROUP BY v0.c0, v0.c1;
SELECT v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING GROUP_CONCAT(GROUP_CONCAT(v0.c1)) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(v0.c1)))) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((GROUP_CONCAT(GROUP_CONCAT(v0.c1))) ISNULL);
SELECT rt1.c2, rt1.c3, rt1.c1, rt1.c0, vt0.c0 FROM rt1, vt0;
SELECT rt1.c2, rt1.c3, rt1.c1, rt1.c0, vt0.c0 FROM rt1, vt0 WHERE ((vt0.c0 IN ())) UNION ALL SELECT rt1.c2, rt1.c3, rt1.c1, rt1.c0, vt0.c0 FROM rt1, vt0 WHERE ((NOT ((vt0.c0 IN ())))) UNION ALL SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c0, vt0.c0 FROM rt1, vt0 WHERE ((((vt0.c0 IN ())) ISNULL));
SELECT rt1.c2, rt1.c3, rt1.c1, rt1.c0, vt0.c0 FROM rt1, vt0;
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN v0 ON CASE CAST(v0.c1 AS INTEGER)  WHEN NULL THEN t0.c93 COLLATE BINARY WHEN CAST(t0.c93 AS NUMERIC) THEN vt0.c0 WHEN ((v0.c2)OR(v0.c2)) THEN ((t0.c0) NOTNULL) ELSE CASE t0.c0  WHEN v0.c1 THEN t0.c93 END END LEFT OUTER JOIN vt0 ON LIKELY(TYPEOF(DISTINCT v0.c0));
SELECT v0.c0, t0.c0, v0.c2, t0.c93, rt1.c0, v0.c1, vt0.c0, rt1.c2 FROM v0, rt1, vt0, t0 GROUP BY v0.c0, t0.c0, v0.c2, t0.c93, rt1.c0, v0.c1, vt0.c0, rt1.c2;
SELECT ALL v0.c0, t0.c0, v0.c2, t0.c93, rt1.c0, v0.c1, vt0.c0, rt1.c2 FROM v0, rt1, vt0, t0 WHERE (((((t0.c93) NOTNULL)) NOT BETWEEN ((('-1779610963')||(t0.c0))) AND (((rt1.c0)>>(-1.7976931348623157E308))))) GROUP BY v0.c0, t0.c0, v0.c2, t0.c93, rt1.c0, v0.c1, vt0.c0, rt1.c2 UNION SELECT ALL v0.c0, t0.c0, v0.c2, t0.c93, rt1.c0, v0.c1, vt0.c0, rt1.c2 FROM v0, rt1, vt0, t0 WHERE ((NOT (((((t0.c93) NOTNULL)) NOT BETWEEN ((('-1779610963')||(t0.c0))) AND (((rt1.c0)>>(-1.7976931348623157E308))))))) GROUP BY v0.c0, t0.c0, v0.c2, t0.c93, rt1.c0, v0.c1, vt0.c0, rt1.c2 UNION SELECT v0.c0, t0.c0, v0.c2, t0.c93, rt1.c0, v0.c1, vt0.c0, rt1.c2 FROM v0, rt1, vt0, t0 WHERE (((((((t0.c93) NOTNULL)) NOT BETWEEN ((('-1779610963')||(t0.c0))) AND (((rt1.c0)>>(-1.7976931348623157E308))))) ISNULL)) GROUP BY v0.c0, t0.c0, v0.c2, t0.c93, rt1.c0, v0.c1, vt0.c0, rt1.c2;
SELECT v0.c0, t0.c0, v0.c2, t0.c93, rt1.c0, v0.c1, vt0.c0, rt1.c2 FROM v0, rt1, vt0, t0 GROUP BY v0.c0, t0.c0, v0.c2, t0.c93, rt1.c0, v0.c1, vt0.c0, rt1.c2;
SELECT ALL rt1.c3, rt1.c2, vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c3, rt1.c2, vt0.c0, rt1.c0;
SELECT ALL rt1.c3, rt1.c2, vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c3, rt1.c2, vt0.c0, rt1.c0 HAVING AVG((vt0.c0 IN ())) UNION ALL SELECT rt1.c3, rt1.c2, vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c3, rt1.c2, vt0.c0, rt1.c0 HAVING (NOT (AVG((vt0.c0 IN ())))) UNION ALL SELECT rt1.c3, rt1.c2, vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c3, rt1.c2, vt0.c0, rt1.c0 HAVING ((AVG((vt0.c0 IN ()))) ISNULL);
SELECT ALL rt1.c3, rt1.c2, vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c3, rt1.c2, vt0.c0, rt1.c0;
SELECT ALL rt1.c3, rt1.c2, vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c3, rt1.c2, vt0.c0, rt1.c0 HAVING AVG((vt0.c0 IN ())) UNION ALL SELECT rt1.c3, rt1.c2, vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c3, rt1.c2, vt0.c0, rt1.c0 HAVING (NOT (AVG((vt0.c0 IN ())))) UNION ALL SELECT rt1.c3, rt1.c2, vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c3, rt1.c2, vt0.c0, rt1.c0 HAVING ((AVG((vt0.c0 IN ()))) ISNULL);
SELECT ALL rt1.c3, rt1.c2, vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY rt1.c3, rt1.c2, vt0.c0, rt1.c0;
SELECT ALL v0.c1, rt1.c3, t0.c0, rt1.c1, rt1.c0, v0.c2, rt1.c2, v0.c0 FROM rt1, v0, t0;
SELECT v0.c1, rt1.c3, t0.c0, rt1.c1, rt1.c0, v0.c2, rt1.c2, v0.c0 FROM rt1, v0, t0 WHERE (rt1.c2) UNION ALL SELECT ALL v0.c1, rt1.c3, t0.c0, rt1.c1, rt1.c0, v0.c2, rt1.c2, v0.c0 FROM rt1, v0, t0 WHERE ((NOT (rt1.c2))) UNION ALL SELECT v0.c1, rt1.c3, t0.c0, rt1.c1, rt1.c0, v0.c2, rt1.c2, v0.c0 FROM rt1 NOT INDEXED, v0 NOT INDEXED, t0 WHERE (((rt1.c2) ISNULL));
SELECT ALL v0.c1, rt1.c3, t0.c0, rt1.c1, rt1.c0, v0.c2, rt1.c2, v0.c0 FROM rt1, v0, t0;
SELECT DISTINCT v0.c2 FROM t0, v0, rt1;
SELECT DISTINCT v0.c2 FROM t0, v0, rt1 WHERE ((((((- (NULL)))AND(((t0.c0) NOTNULL))))OR(((t0.c93) IS TRUE)))) UNION SELECT DISTINCT v0.c2 FROM t0, v0, rt1 WHERE ((NOT ((((((- (NULL)))AND(((t0.c0) NOTNULL))))OR(((t0.c93) IS TRUE)))))) UNION SELECT DISTINCT v0.c2 FROM t0, v0, rt1 WHERE ((((((((- (NULL)))AND(((t0.c0) NOTNULL))))OR(((t0.c93) IS TRUE)))) ISNULL));
SELECT DISTINCT v0.c2 FROM t0, v0, rt1;
SELECT rt1.c0 FROM t0 RIGHT OUTER JOIN vt0 ON (NOT (rt1.c2)) LEFT OUTER JOIN rt1 ON CASE WHEN ((((v0.c0)OR(v0.c1)))AND(x'')) THEN NULLIF(DISTINCT vt0.c0, v0.c1) ELSE ((t0.c0)>(rt1.c1)) END CROSS JOIN v0 ON (x'0b91' IN (((t0.c0) NOTNULL), CASE rt1.c1  WHEN rt1.c2 THEN v0.c0 END)) GROUP BY rt1.c0;
SELECT rt1.c2, t0.c0, rt1.c0 FROM t0 LEFT OUTER JOIN rt1 ON (+ ((NOT (t0.c93)))) GROUP BY rt1.c2, t0.c0, rt1.c0;
SELECT ALL rt1.c2, t0.c0, rt1.c0 FROM t0 LEFT OUTER JOIN rt1 ON (+ ((NOT (t0.c93)))) GROUP BY rt1.c2, t0.c0, rt1.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c2, t0.c0, rt1.c0 FROM t0 LEFT OUTER JOIN rt1 ON (+ ((NOT (t0.c93)))) GROUP BY rt1.c2, t0.c0, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2, t0.c0, rt1.c0 FROM t0 LEFT OUTER JOIN rt1 ON (+ ((NOT (t0.c93)))) GROUP BY rt1.c2, t0.c0, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c2, t0.c0, rt1.c0 FROM t0 LEFT OUTER JOIN rt1 ON (+ ((NOT (t0.c93)))) GROUP BY rt1.c2, t0.c0, rt1.c0;
SELECT ALL rt1.c2, t0.c0, rt1.c0 FROM t0 LEFT OUTER JOIN rt1 ON (+ ((NOT (t0.c93)))) GROUP BY rt1.c2, t0.c0, rt1.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c2, t0.c0, rt1.c0 FROM t0 LEFT OUTER JOIN rt1 ON (+ ((NOT (t0.c93)))) GROUP BY rt1.c2, t0.c0, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2, t0.c0, rt1.c0 FROM t0 LEFT OUTER JOIN rt1 ON (+ ((NOT (t0.c93)))) GROUP BY rt1.c2, t0.c0, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c2, t0.c0, rt1.c0 FROM t0 LEFT OUTER JOIN rt1 ON (+ ((NOT (t0.c93)))) GROUP BY rt1.c2, t0.c0, rt1.c0;
SELECT * FROM vt0, t0, v0, rt1;
SELECT * FROM vt0, t0, v0, rt1 WHERE (((CASE WHEN 0X4d492dba THEN v0.c1 ELSE '-133138228' END) NOT NULL)) UNION ALL SELECT * FROM vt0, t0, v0, rt1 WHERE ((NOT (((CASE WHEN 0x4d492dba THEN v0.c1 ELSE '-133138228' END) NOT NULL)))) UNION ALL SELECT * FROM vt0, t0, v0, rt1 WHERE (((((CASE WHEN 0x4d492dba THEN v0.c1 ELSE '-133138228' END) NOT NULL)) ISNULL));
SELECT * FROM vt0, t0, v0, rt1;
SELECT DISTINCT t0.c0, rt1.c3 FROM v0, vt0, rt1, t0;
SELECT DISTINCT t0.c0, rt1.c3 FROM v0, vt0, rt1, t0 WHERE (v0.c2) UNION SELECT DISTINCT t0.c0, rt1.c3 FROM v0, vt0, rt1, t0 WHERE ((NOT (v0.c2))) UNION SELECT DISTINCT t0.c0, rt1.c3 FROM v0, vt0, rt1, t0 NOT INDEXED WHERE (((v0.c2) ISNULL));
SELECT DISTINCT t0.c0, rt1.c3 FROM v0, vt0, rt1, t0;
SELECT ALL rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 NOT INDEXED, t0 WHERE (CAST(CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN 'Gi' WHEN t0.c0 THEN rt1.c2 END AS NUMERIC)) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM rt1, t0 WHERE ((NOT (CAST(CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN 'Gi' WHEN t0.c0 THEN rt1.c2 END AS NUMERIC)))) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM rt1, t0 WHERE (((CAST(CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN 'Gi' WHEN t0.c0 THEN rt1.c2 END AS NUMERIC)) ISNULL)) GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY rt1.c2, rt1.c1;
SELECT ALL t0.c0, t0.c93 FROM t0 GROUP BY t0.c0, t0.c93;
SELECT t0.c0, t0.c93 FROM t0 GROUP BY t0.c0, t0.c93 HAVING GROUP_CONCAT(GROUP_CONCAT(t0.c93)) UNION ALL SELECT t0.c0, t0.c93 FROM t0 GROUP BY t0.c0, t0.c93 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(t0.c93)))) UNION ALL SELECT t0.c0, t0.c93 FROM t0 GROUP BY t0.c0, t0.c93 HAVING ((GROUP_CONCAT(GROUP_CONCAT(t0.c93))) ISNULL);
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS TEXT)) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT (CAST(CAST(vt0.c0 AS BLOB) AS TEXT)))) UNION ALL SELECT * FROM v0, vt0 WHERE (((CAST(CAST(vt0.c0 AS BLOB) AS TEXT)) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0)*(t0.c93))) NOTNULL)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)*(t0.c93))) NOTNULL)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0)*(t0.c93))) NOTNULL)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt1.c3, v0.c2 FROM v0 CROSS JOIN rt1 ON ((rt1.c3) ISNULL) COLLATE BINARY FULL OUTER JOIN vt0 ON ((rt1.c1 COLLATE RTRIM)*(rt1.c2)) GROUP BY rt1.c3, v0.c2;
SELECT ALL rt1.c3, v0.c2 FROM v0 CROSS JOIN rt1 ON ((rt1.c3) ISNULL) COLLATE BINARY FULL OUTER JOIN vt0 ON ((rt1.c1 COLLATE RTRIM)*(rt1.c2)) WHERE ((~ (((x'9348')&(rt1.c3))))) GROUP BY rt1.c3, v0.c2 UNION SELECT rt1.c3, v0.c2 FROM v0 CROSS JOIN rt1 ON ((rt1.c3) ISNULL) COLLATE BINARY FULL OUTER JOIN vt0 ON ((rt1.c1 COLLATE RTRIM)*(rt1.c2)) WHERE ((NOT ((~ (((x'9348')&(rt1.c3))))))) GROUP BY rt1.c3, v0.c2 UNION SELECT rt1.c3, v0.c2 FROM v0 CROSS JOIN rt1 ON ((rt1.c3) ISNULL) COLLATE BINARY FULL OUTER JOIN vt0 ON ((rt1.c1 COLLATE RTRIM)*(rt1.c2)) WHERE ((((~ (((x'9348')&(rt1.c3))))) ISNULL)) GROUP BY rt1.c3, v0.c2;
SELECT ALL rt1.c3, v0.c2 FROM v0 CROSS JOIN rt1 ON ((rt1.c3) ISNULL) COLLATE BINARY FULL OUTER JOIN vt0 ON ((rt1.c1 COLLATE RTRIM)*(rt1.c2)) GROUP BY rt1.c3, v0.c2;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING (- (((((MIN(SUM(v0.c1)))AND(v0.c1)))OR(MIN(v0.c1))))) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT ((- (((((MIN(SUM(v0.c1)))AND(v0.c1)))OR(MIN(v0.c1))))))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING (((- (((((MIN(SUM(v0.c1)))AND(v0.c1)))OR(MIN(v0.c1)))))) ISNULL);
SELECT ALL * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE (t0.c93) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT (t0.c93))) UNION ALL SELECT * FROM t0, v0 WHERE (((t0.c93) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT rt1.c3, t0.c93, rt1.c1, rt1.c2 FROM t0 INNER JOIN rt1 ON CASE WHEN rt1.c0 COLLATE RTRIM THEN (t0.c0 IN ()) WHEN CAST(t0.c93 AS NUMERIC) THEN TYPEOF('eZjwതt{\r') WHEN ((((rt1.c1)AND(rt1.c0)))AND(rt1.c3)) THEN -1347176363 ELSE (((rt1.c1, rt1.c3, t0.c93)) NOT BETWEEN ((t0.c0, rt1.c1, t0.c93)) AND ((rt1.c2, rt1.c3, rt1.c2))) END;
SELECT DISTINCT rt1.c3, t0.c93, rt1.c1, rt1.c2 FROM t0 INNER JOIN rt1 ON CASE WHEN rt1.c0 COLLATE RTRIM THEN (t0.c0 IN ()) WHEN CAST(t0.c93 AS NUMERIC) THEN TYPEOF('eZjwതt{\r') WHEN ((((rt1.c1)AND(rt1.c0)))AND(rt1.c3)) THEN -1347176363 ELSE (((rt1.c1, rt1.c3, t0.c93)) NOT BETWEEN ((t0.c0, rt1.c1, t0.c93)) AND ((rt1.c2, rt1.c3, rt1.c2))) END WHERE (CAST((((t0.c93, rt1.c2, t0.c93)) BETWEEN ((rt1.c3, rt1.c2, rt1.c2)) AND ((t0.c0, t0.c93, '-1116397990'))) AS BLOB)) UNION SELECT DISTINCT rt1.c3, t0.c93, rt1.c1, rt1.c2 FROM t0 INNER JOIN rt1 ON CASE WHEN rt1.c0 COLLATE RTRIM THEN (t0.c0 IN ()) WHEN CAST(t0.c93 AS NUMERIC) THEN TYPEOF('eZjwതt{\r') WHEN ((((rt1.c1)AND(rt1.c0)))AND(rt1.c3)) THEN -1347176363 ELSE (((rt1.c1, rt1.c3, t0.c93)) NOT BETWEEN ((t0.c0, rt1.c1, t0.c93)) AND ((rt1.c2, rt1.c3, rt1.c2))) END WHERE ((NOT (CAST((((t0.c93, rt1.c2, t0.c93)) BETWEEN ((rt1.c3, rt1.c2, rt1.c2)) AND ((t0.c0, t0.c93, '-1116397990'))) AS BLOB)))) UNION SELECT DISTINCT rt1.c3, t0.c93, rt1.c1, rt1.c2 FROM t0 INNER JOIN rt1 ON CASE WHEN rt1.c0 COLLATE RTRIM THEN (t0.c0 IN ()) WHEN CAST(t0.c93 AS NUMERIC) THEN TYPEOF('eZjwതt{\r') WHEN ((((rt1.c1)AND(rt1.c0)))AND(rt1.c3)) THEN -1347176363 ELSE (((rt1.c1, rt1.c3, t0.c93)) NOT BETWEEN ((t0.c0, rt1.c1, t0.c93)) AND ((rt1.c2, rt1.c3, rt1.c2))) END WHERE (((CAST((((t0.c93, rt1.c2, t0.c93)) BETWEEN ((rt1.c3, rt1.c2, rt1.c2)) AND ((t0.c0, t0.c93, '-1116397990'))) AS BLOB)) ISNULL));
SELECT DISTINCT rt1.c3, t0.c93, rt1.c1, rt1.c2 FROM t0 INNER JOIN rt1 ON CASE WHEN rt1.c0 COLLATE RTRIM THEN (t0.c0 IN ()) WHEN CAST(t0.c93 AS NUMERIC) THEN TYPEOF('eZjwതt{\r') WHEN ((((rt1.c1)AND(rt1.c0)))AND(rt1.c3)) THEN -1347176363 ELSE (((rt1.c1, rt1.c3, t0.c93)) NOT BETWEEN ((t0.c0, rt1.c1, t0.c93)) AND ((rt1.c2, rt1.c3, rt1.c2))) END;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c2, vt0.c0, v0.c0, v0.c1 FROM v0, vt0 GROUP BY v0.c2, vt0.c0, v0.c0, v0.c1;
SELECT ALL v0.c2, vt0.c0, v0.c0, v0.c1 FROM v0, vt0 GROUP BY v0.c2, vt0.c0, v0.c0, v0.c1 HAVING AVG(MIN('?^ᎎb!s')) UNION ALL SELECT v0.c2, vt0.c0, v0.c0, v0.c1 FROM v0, vt0 GROUP BY v0.c2, vt0.c0, v0.c0, v0.c1 HAVING (NOT (AVG(MIN('?^ᎎb!s')))) UNION ALL SELECT ALL v0.c2, vt0.c0, v0.c0, v0.c1 FROM v0, vt0 GROUP BY v0.c2, vt0.c0, v0.c0, v0.c1 HAVING ((AVG(MIN('?^ᎎb!s'))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((((CAST(v0.c1 AS INTEGER))OR(((v0.c1)/(v0.c0)))))AND((((x''))>((v0.c2)))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((CAST(v0.c1 AS INTEGER))OR(((v0.c1)/(v0.c0)))))AND((((x''))>((v0.c2)))))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((CAST(v0.c1 AS INTEGER))OR(((v0.c1)/(v0.c0)))))AND((((x''))>((v0.c2)))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0, t0, rt1;
SELECT DISTINCT * FROM v0, t0, rt1 WHERE (((((~ (rt1.c3)), t0.c0, rt1.c2 COLLATE BINARY, (((rt1.c0, rt1.c3, rt1.c3))>=((t0.c93, v0.c1, t0.c93))), (- (rt1.c1))))>(((t0.c0 IN ()), v0.c2 COLLATE NOCASE, (((t0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))), (~ (t0.c93)), CAST(rt1.c1 AS TEXT))))) UNION SELECT DISTINCT * FROM v0, t0, rt1 WHERE ((NOT (((((~ (rt1.c3)), t0.c0, rt1.c2 COLLATE BINARY, (((rt1.c0, rt1.c3, rt1.c3))>=((t0.c93, v0.c1, t0.c93))), (- (rt1.c1))))>(((t0.c0 IN ()), v0.c2 COLLATE NOCASE, (((t0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))), (~ (t0.c93)), CAST(rt1.c1 AS TEXT))))))) UNION SELECT DISTINCT * FROM v0, t0, rt1 WHERE (((((((~ (rt1.c3)), t0.c0, rt1.c2 COLLATE BINARY, (((rt1.c0, rt1.c3, rt1.c3))>=((t0.c93, v0.c1, t0.c93))), (- (rt1.c1))))>(((t0.c0 IN ()), v0.c2 COLLATE NOCASE, (((t0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))), (~ (t0.c93)), CAST(rt1.c1 AS TEXT))))) ISNULL));
SELECT DISTINCT * FROM v0, t0, rt1;
SELECT t0.c93 FROM t0 GROUP BY t0.c93;
SELECT ALL t0.c93 FROM t0 WHERE (((t0.c0 COLLATE RTRIM)AND(((t0.c0)<(t0.c0))))) GROUP BY t0.c93 UNION SELECT t0.c93 FROM t0 WHERE ((NOT (((t0.c0 COLLATE RTRIM)AND(((t0.c0)<(t0.c0))))))) GROUP BY t0.c93 UNION SELECT t0.c93 FROM t0 WHERE (((((t0.c0 COLLATE RTRIM)AND(((t0.c0)<(t0.c0))))) ISNULL)) GROUP BY t0.c93;
SELECT t0.c93 FROM t0 GROUP BY t0.c93;
SELECT rt1.c0, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c3, rt1.c1;
SELECT ALL rt1.c0, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c3, rt1.c1 HAVING TOTAL(CASE WHEN SUM(rt1.c1) THEN rt1.c3 ELSE rt1.c0 END) UNION ALL SELECT rt1.c0, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c3, rt1.c1 HAVING (NOT (TOTAL(CASE WHEN SUM(rt1.c1) THEN rt1.c3 ELSE rt1.c0 END))) UNION ALL SELECT ALL rt1.c0, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c3, rt1.c1 HAVING ((TOTAL(CASE WHEN SUM(rt1.c1) THEN rt1.c3 ELSE rt1.c0 END)) ISNULL);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON (rt1.c1 COLLATE NOCASE IN (CAST(vt0.c0 AS INTEGER)));
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON (rt1.c1 COLLATE NOCASE IN (CAST(vt0.c0 AS INTEGER))) WHERE (CHANGES()) UNION ALL SELECT * FROM vt0 CROSS JOIN rt1 ON (rt1.c1 COLLATE NOCASE IN (CAST(vt0.c0 AS INTEGER))) WHERE ((NOT (CHANGES()))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN rt1 ON (rt1.c1 COLLATE NOCASE IN (CAST(vt0.c0 AS INTEGER))) WHERE (((CHANGES()) ISNULL));
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON (rt1.c1 COLLATE NOCASE IN (CAST(vt0.c0 AS INTEGER)));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON (- (NULL COLLATE NOCASE));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON (- (NULL COLLATE NOCASE)) WHERE (NULL) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON (- (NULL COLLATE NOCASE)) WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON (- (NULL COLLATE NOCASE)) WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON (- (NULL COLLATE NOCASE));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN (((vt0.c0))=((vt0.c0))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) WHEN ((vt0.c0)>(vt0.c0)) THEN CASE ''  WHEN vt0.c0 THEN vt0.c0 END END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE vt0.c0 COLLATE RTRIM  WHEN (((vt0.c0))=((vt0.c0))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) WHEN ((vt0.c0)>(vt0.c0)) THEN CASE ''  WHEN vt0.c0 THEN vt0.c0 END END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE vt0.c0 COLLATE RTRIM  WHEN (((vt0.c0))==((vt0.c0))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) WHEN ((vt0.c0)>(vt0.c0)) THEN CASE ''  WHEN vt0.c0 THEN vt0.c0 END END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING v0.c0 UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING ((v0.c0) ISNULL);
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING v0.c0 UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING ((v0.c0) ISNULL);
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT ALL rt1.c2, vt0.c0, v0.c0, rt1.c1, v0.c2 FROM vt0, rt1 RIGHT OUTER JOIN v0 ON (+ (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))));
SELECT ALL rt1.c2, vt0.c0, v0.c0, rt1.c1, v0.c2 FROM vt0, rt1 RIGHT OUTER JOIN v0 ON (+ (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) WHERE (CAST(CASE rt1.c3  WHEN v0.c2 THEN v0.c0 ELSE v0.c0 END AS TEXT)) UNION ALL SELECT rt1.c2, vt0.c0, v0.c0, rt1.c1, v0.c2 FROM vt0, rt1 RIGHT OUTER JOIN v0 ON (+ (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) WHERE ((NOT (CAST(CASE rt1.c3  WHEN v0.c2 THEN v0.c0 ELSE v0.c0 END AS TEXT)))) UNION ALL SELECT ALL rt1.c2, vt0.c0, v0.c0, rt1.c1, v0.c2 FROM vt0, rt1 RIGHT OUTER JOIN v0 ON (+ (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) WHERE (((CAST(CASE rt1.c3  WHEN v0.c2 THEN v0.c0 ELSE v0.c0 END AS TEXT)) ISNULL));
SELECT ALL rt1.c2, vt0.c0, v0.c0, rt1.c1, v0.c2 FROM vt0, rt1 RIGHT OUTER JOIN v0 ON (+ (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))));
SELECT DISTINCT * FROM v0, rt1;
SELECT DISTINCT * FROM v0, rt1 WHERE ((~ ((v0.c0 IN (v0.c2, rt1.c2, rt1.c0))))) UNION SELECT DISTINCT * FROM v0, rt1 WHERE ((NOT ((~ ((v0.c0 IN (v0.c2, rt1.c2, rt1.c0))))))) UNION SELECT DISTINCT * FROM v0, rt1 WHERE ((((~ ((v0.c0 IN (v0.c2, rt1.c2, rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, rt1;
SELECT t0.c0, t0.c93 FROM t0 GROUP BY t0.c0, t0.c93;
SELECT t0.c0, t0.c93 FROM t0 WHERE (CASE WHEN (((t0.c0)) NOT BETWEEN ((t0.c93)) AND ((t0.c0))) THEN CAST(t0.c0 AS TEXT) WHEN (((t0.c0, t0.c93, '')) NOT BETWEEN ((t0.c0, x'', t0.c0)) AND ((t0.c0, t0.c0, t0.c93))) THEN ((t0.c0) NOTNULL) WHEN (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c93, t0.c93))) THEN (+ (t0.c93)) ELSE CASE t0.c93  WHEN t0.c93 THEN t0.c93 END END) GROUP BY t0.c0, t0.c93 UNION SELECT t0.c0, t0.c93 FROM t0 WHERE ((NOT (CASE WHEN (((t0.c0)) NOT BETWEEN ((t0.c93)) AND ((t0.c0))) THEN CAST(t0.c0 AS TEXT) WHEN (((t0.c0, t0.c93, '')) NOT BETWEEN ((t0.c0, x'', t0.c0)) AND ((t0.c0, t0.c0, t0.c93))) THEN ((t0.c0) NOTNULL) WHEN (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c93, t0.c93))) THEN (+ (t0.c93)) ELSE CASE t0.c93  WHEN t0.c93 THEN t0.c93 END END))) GROUP BY t0.c0, t0.c93 UNION SELECT t0.c0, t0.c93 FROM t0 WHERE (((CASE WHEN (((t0.c0)) NOT BETWEEN ((t0.c93)) AND ((t0.c0))) THEN CAST(t0.c0 AS TEXT) WHEN (((t0.c0, t0.c93, '')) NOT BETWEEN ((t0.c0, x'', t0.c0)) AND ((t0.c0, t0.c0, t0.c93))) THEN ((t0.c0) NOTNULL) WHEN (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c93, t0.c93))) THEN (+ (t0.c93)) ELSE CASE t0.c93  WHEN t0.c93 THEN t0.c93 END END) ISNULL)) GROUP BY t0.c0, t0.c93;
SELECT t0.c0, t0.c93 FROM t0 GROUP BY t0.c0, t0.c93;
SELECT ALL vt0.c0, rt1.c3, rt1.c0, t0.c0, t0.c93 FROM rt1, vt0 LEFT OUTER JOIN t0 ON (((rt1.c2) BETWEEN (rt1.c1) AND ('0.6772631577466278')) IN ((NOT (rt1.c3)), ((vt0.c0)<(rt1.c0)))) GROUP BY vt0.c0, rt1.c3, rt1.c0, t0.c0, t0.c93;
SELECT ALL vt0.c0, rt1.c3, rt1.c0, t0.c0, t0.c93 FROM rt1 NOT INDEXED, vt0 LEFT OUTER JOIN t0 ON (((rt1.c2) BETWEEN (rt1.c1) AND ('0.6772631577466278')) IN ((NOT (rt1.c3)), ((vt0.c0)<(rt1.c0)))) GROUP BY vt0.c0, rt1.c3, rt1.c0, t0.c0, t0.c93 HAVING GROUP_CONCAT(ROUND(TOTAL(t0.c93), rt1.c3)) UNION ALL SELECT vt0.c0, rt1.c3, rt1.c0, t0.c0, t0.c93 FROM rt1, vt0 LEFT OUTER JOIN t0 ON (((rt1.c2) BETWEEN (rt1.c1) AND ('0.6772631577466278')) IN ((NOT (rt1.c3)), ((vt0.c0)<(rt1.c0)))) GROUP BY vt0.c0, rt1.c3, rt1.c0, t0.c0, t0.c93 HAVING (NOT (GROUP_CONCAT(ROUND(TOTAL(t0.c93), rt1.c3)))) UNION ALL SELECT ALL vt0.c0, rt1.c3, rt1.c0, t0.c0, t0.c93 FROM rt1, vt0 LEFT OUTER JOIN t0 ON (((rt1.c2) BETWEEN (rt1.c1) AND ('0.6772631577466278')) IN ((NOT (rt1.c3)), ((vt0.c0)<(rt1.c0)))) GROUP BY vt0.c0, rt1.c3, rt1.c0, t0.c0, t0.c93 HAVING ((GROUP_CONCAT(ROUND(TOTAL(t0.c93), rt1.c3))) ISNULL);
SELECT ALL t0.c0 FROM t0, vt0, rt1, v0;
SELECT ALL t0.c0 FROM t0, vt0, rt1, v0 WHERE (((x'')*(((v0.c2)GLOB(rt1.c3))))) UNION ALL SELECT t0.c0 FROM t0, vt0, rt1, v0 WHERE ((NOT (((x'')*(((v0.c2)GLOB(rt1.c3))))))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0, rt1, v0 WHERE (((((x'')*(((v0.c2)GLOB(rt1.c3))))) ISNULL));
SELECT ALL t0.c0 FROM t0, vt0, rt1, v0;
SELECT DISTINCT vt0.c0, t0.c93 FROM t0, vt0;
SELECT DISTINCT vt0.c0, t0.c93 FROM t0, vt0 WHERE ((NULL IN ())) UNION SELECT DISTINCT vt0.c0, t0.c93 FROM t0, vt0 WHERE ((NOT ((NULL IN ())))) UNION SELECT DISTINCT vt0.c0, t0.c93 FROM t0, vt0 WHERE ((((NULL IN ())) ISNULL));
SELECT DISTINCT vt0.c0, t0.c93 FROM t0, vt0;
SELECT ALL rt1.c3, t0.c93, vt0.c0, rt1.c1, rt1.c0, rt1.c2 FROM t0, rt1, vt0 GROUP BY rt1.c3, t0.c93, vt0.c0, rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c3, t0.c93, vt0.c0, rt1.c1, rt1.c0, rt1.c2 FROM t0, rt1, vt0 WHERE ((((MIN(x'f7bd', t0.c93)))<>(((rt1.c1 IN (rt1.c0)))))) GROUP BY rt1.c3, t0.c93, vt0.c0, rt1.c1, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c3, t0.c93, vt0.c0, rt1.c1, rt1.c0, rt1.c2 FROM t0, rt1, vt0 WHERE ((NOT ((((MIN(x'f7bd', t0.c93)))<>(((rt1.c1 IN (rt1.c0)))))))) GROUP BY rt1.c3, t0.c93, vt0.c0, rt1.c1, rt1.c0, rt1.c2 UNION SELECT rt1.c3, t0.c93, vt0.c0, rt1.c1, rt1.c0, rt1.c2 FROM t0, rt1, vt0 WHERE ((((((MIN(x'f7bd', t0.c93)))<>(((rt1.c1 IN (rt1.c0)))))) ISNULL)) GROUP BY rt1.c3, t0.c93, vt0.c0, rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c3, t0.c93, vt0.c0, rt1.c1, rt1.c0, rt1.c2 FROM t0, rt1, vt0 GROUP BY rt1.c3, t0.c93, vt0.c0, rt1.c1, rt1.c0, rt1.c2;
SELECT rt1.c3, t0.c93, rt1.c0, vt0.c0, t0.c0 FROM vt0, rt1, t0 GROUP BY rt1.c3, t0.c93, rt1.c0, vt0.c0, t0.c0;
SELECT rt1.c3, t0.c93, rt1.c0, vt0.c0, t0.c0 FROM vt0, rt1, t0 GROUP BY rt1.c3, t0.c93, rt1.c0, vt0.c0, t0.c0 HAVING MAX(LIKELIHOOD(SUM(x''), 0.6446760185306278)) UNION ALL SELECT rt1.c3, t0.c93, rt1.c0, vt0.c0, t0.c0 FROM vt0, rt1, t0 GROUP BY rt1.c3, t0.c93, rt1.c0, vt0.c0, t0.c0 HAVING (NOT (MAX(LIKELIHOOD(SUM(x''), 0.6446760185306278)))) UNION ALL SELECT ALL rt1.c3, t0.c93, rt1.c0, vt0.c0, t0.c0 FROM vt0, rt1, t0 GROUP BY rt1.c3, t0.c93, rt1.c0, vt0.c0, t0.c0 HAVING ((MAX(LIKELIHOOD(SUM(x''), 0.6446760185306278))) ISNULL);
SELECT ALL MIN(((LENGTH(t0.c0)) BETWEEN (((t0.c0)||(t0.c93))) AND (t0.c93))) FROM t0;
SELECT * FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c0 IN ())) IS TRUE);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c0 IN ())) IS TRUE) WHERE (((((vt0.c0)IS(t0.c93))) BETWEEN (((vt0.c0)&(t0.c0))) AND (((vt0.c0)>>(t0.c0))))) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c0 IN ())) IS TRUE) WHERE ((NOT (((((vt0.c0)IS(t0.c93))) BETWEEN (((vt0.c0)&(t0.c0))) AND (((vt0.c0)>>(t0.c0))))))) UNION ALL SELECT * FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c0 IN ())) IS TRUE) WHERE (((((((vt0.c0)IS(t0.c93))) BETWEEN (((vt0.c0)&(t0.c0))) AND (((vt0.c0)>>(t0.c0))))) ISNULL));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c0 IN ())) IS TRUE);
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (((((((((rt1.c3)AND(rt1.c0)))OR(rt1.c2)))OR(CASE WHEN t0.c0 THEN rt1.c1 END)))OR((- (t0.c93))))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (((((((((rt1.c3)AND(rt1.c0)))OR(rt1.c2)))OR(CASE WHEN t0.c0 THEN rt1.c1 END)))OR((- (t0.c93))))))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((((((((((rt1.c3)AND(rt1.c0)))OR(rt1.c2)))OR(CASE WHEN t0.c0 THEN rt1.c1 END)))OR((- (t0.c93))))) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT ALL v0.c0, t0.c93, t0.c0, rt1.c2, v0.c2 FROM t0, rt1, v0, vt0 GROUP BY v0.c0, t0.c93, t0.c0, rt1.c2, v0.c2;
SELECT ALL v0.c0, t0.c93, t0.c0, rt1.c2, v0.c2 FROM t0, rt1, v0, vt0 WHERE (CASE WHEN ((v0.c2) BETWEEN (v0.c0) AND (t0.c93)) THEN ((((rt1.c2)AND(v0.c1)))OR(v0.c2)) WHEN CAST(rt1.c3 AS NUMERIC) THEN ((rt1.c0) NOT BETWEEN (t0.c0) AND (rt1.c3)) WHEN rt1.c2 THEN ((rt1.c0) BETWEEN (vt0.c0) AND (t0.c93)) ELSE NULLIF(DISTINCT rt1.c3, v0.c1) END) GROUP BY v0.c0, t0.c93, t0.c0, rt1.c2, v0.c2 UNION SELECT v0.c0, t0.c93, t0.c0, rt1.c2, v0.c2 FROM t0, rt1, v0, vt0 WHERE ((NOT (CASE WHEN ((v0.c2) BETWEEN (v0.c0) AND (t0.c93)) THEN ((((rt1.c2)AND(v0.c1)))OR(v0.c2)) WHEN CAST(rt1.c3 AS NUMERIC) THEN ((rt1.c0) NOT BETWEEN (t0.c0) AND (rt1.c3)) WHEN rt1.c2 THEN ((rt1.c0) BETWEEN (vt0.c0) AND (t0.c93)) ELSE NULLIF(DISTINCT rt1.c3, v0.c1) END))) GROUP BY v0.c0, t0.c93, t0.c0, rt1.c2, v0.c2 UNION SELECT ALL v0.c0, t0.c93, t0.c0, rt1.c2, v0.c2 FROM t0, rt1, v0, vt0 WHERE (((CASE WHEN ((v0.c2) BETWEEN (v0.c0) AND (t0.c93)) THEN ((((rt1.c2)AND(v0.c1)))OR(v0.c2)) WHEN CAST(rt1.c3 AS NUMERIC) THEN ((rt1.c0) NOT BETWEEN (t0.c0) AND (rt1.c3)) WHEN rt1.c2 THEN ((rt1.c0) BETWEEN (vt0.c0) AND (t0.c93)) ELSE NULLIF(DISTINCT rt1.c3, v0.c1) END) ISNULL)) GROUP BY v0.c0, t0.c93, t0.c0, rt1.c2, v0.c2;
SELECT ALL v0.c0, t0.c93, t0.c0, rt1.c2, v0.c2 FROM t0, rt1, v0, vt0 GROUP BY v0.c0, t0.c93, t0.c0, rt1.c2, v0.c2;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((((vt0.c0) NOT NULL)) IS FALSE) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (((((vt0.c0) NOT NULL)) IS FALSE))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((((((vt0.c0) NOT NULL)) IS FALSE)) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((((vt0.c0) NOT NULL)) IS FALSE) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (((((vt0.c0) NOT NULL)) IS FALSE))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((((((vt0.c0) NOT NULL)) IS FALSE)) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT * FROM vt0 FULL OUTER JOIN t0 ON 0.07225078573991517 CROSS JOIN v0 ON CAST(CAST(t0.c93 AS INTEGER) AS INTEGER) FULL OUTER JOIN rt1 ON (((+ (rt1.c1))) BETWEEN (CASE NULL  WHEN rt1.c1 THEN v0.c0 ELSE rt1.c0 END) AND (((rt1.c0) NOT BETWEEN (t0.c0) AND (rt1.c3))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON 0.07225078573991517 CROSS JOIN v0 ON CAST(CAST(t0.c93 AS INTEGER) AS INTEGER) FULL OUTER JOIN rt1 ON (((+ (rt1.c1))) BETWEEN (CASE NULL  WHEN rt1.c1 THEN v0.c0 ELSE rt1.c0 END) AND (((rt1.c0) NOT BETWEEN (t0.c0) AND (rt1.c3)))) WHERE (CAST(((((NULL)OR(v0.c1)))AND(t0.c93)) AS INTEGER)) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN t0 ON 0.07225078573991517 CROSS JOIN v0 ON CAST(CAST(t0.c93 AS INTEGER) AS INTEGER) FULL OUTER JOIN rt1 ON (((+ (rt1.c1))) BETWEEN (CASE NULL  WHEN rt1.c1 THEN v0.c0 ELSE rt1.c0 END) AND (((rt1.c0) NOT BETWEEN (t0.c0) AND (rt1.c3)))) WHERE ((NOT (CAST(((((NULL)OR(v0.c1)))AND(t0.c93)) AS INTEGER)))) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON 0.07225078573991517 CROSS JOIN v0 ON CAST(CAST(t0.c93 AS INTEGER) AS INTEGER) FULL OUTER JOIN rt1 ON (((+ (rt1.c1))) BETWEEN (CASE NULL  WHEN rt1.c1 THEN v0.c0 ELSE rt1.c0 END) AND (((rt1.c0) NOT BETWEEN (t0.c0) AND (rt1.c3)))) WHERE (((CAST(((((NULL)OR(v0.c1)))AND(t0.c93)) AS INTEGER)) ISNULL));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON 0.07225078573991517 CROSS JOIN v0 ON CAST(CAST(t0.c93 AS INTEGER) AS INTEGER) FULL OUTER JOIN rt1 ON (((+ (rt1.c1))) BETWEEN (CASE NULL  WHEN rt1.c1 THEN v0.c0 ELSE rt1.c0 END) AND (((rt1.c0) NOT BETWEEN (t0.c0) AND (rt1.c3))));
SELECT DISTINCT rt1.c0, rt1.c2, vt0.c0, rt1.c1 FROM vt0 CROSS JOIN rt1 ON (((rt1.c2) IS TRUE) IN ());
SELECT DISTINCT rt1.c0, rt1.c2, vt0.c0, rt1.c1 FROM vt0 CROSS JOIN rt1 ON (((rt1.c2) IS TRUE) IN ()) WHERE (x'') UNION SELECT DISTINCT rt1.c0, rt1.c2, vt0.c0, rt1.c1 FROM vt0 CROSS JOIN rt1 ON (((rt1.c2) IS TRUE) IN ()) WHERE ((NOT (x''))) UNION SELECT DISTINCT rt1.c0, rt1.c2, vt0.c0, rt1.c1 FROM vt0 CROSS JOIN rt1 ON (((rt1.c2) IS TRUE) IN ()) WHERE (((x'') ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, vt0.c0, rt1.c1 FROM vt0 CROSS JOIN rt1 ON (((rt1.c2) IS TRUE) IN ());
SELECT v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1;
SELECT ALL v0.c0, v0.c1 FROM v0 WHERE (CAST((- (v0.c0)) AS REAL)) GROUP BY v0.c0, v0.c1 UNION SELECT ALL v0.c0, v0.c1 FROM v0 WHERE ((NOT (CAST((- (v0.c0)) AS REAL)))) GROUP BY v0.c0, v0.c1 UNION SELECT v0.c0, v0.c1 FROM v0 WHERE (((CAST((- (v0.c0)) AS REAL)) ISNULL)) GROUP BY v0.c0, v0.c1;
SELECT v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1;
SELECT ALL rt1.c1, rt1.c2, v0.c0, vt0.c0, v0.c2, v0.c1, rt1.c0, rt1.c3, t0.c0, t0.c93 FROM t0, rt1, v0, vt0 GROUP BY rt1.c1, rt1.c2, v0.c0, vt0.c0, v0.c2, v0.c1, rt1.c0, rt1.c3, t0.c0, t0.c93;
SELECT rt1.c1, rt1.c2, v0.c0, vt0.c0, v0.c2, v0.c1, rt1.c0, rt1.c3, t0.c0, t0.c93 FROM t0, rt1, v0, vt0 GROUP BY rt1.c1, rt1.c2, v0.c0, vt0.c0, v0.c2, v0.c1, rt1.c0, rt1.c3, t0.c0, t0.c93 HAVING 0.7681995054058602 UNION ALL SELECT ALL rt1.c1, rt1.c2, v0.c0, vt0.c0, v0.c2, v0.c1, rt1.c0, rt1.c3, t0.c0, t0.c93 FROM t0, rt1, v0, vt0 GROUP BY rt1.c1, rt1.c2, v0.c0, vt0.c0, v0.c2, v0.c1, rt1.c0, rt1.c3, t0.c0, t0.c93 HAVING (NOT (0.7681995054058602)) UNION ALL SELECT ALL rt1.c1, rt1.c2, v0.c0, vt0.c0, v0.c2, v0.c1, rt1.c0, rt1.c3, t0.c0, t0.c93 FROM t0, rt1, v0, vt0 GROUP BY rt1.c1, rt1.c2, v0.c0, vt0.c0, v0.c2, v0.c1, rt1.c0, rt1.c3, t0.c0, t0.c93 HAVING ((0.7681995054058602) ISNULL);
SELECT ALL rt1.c1, rt1.c2, v0.c0, vt0.c0, v0.c2, v0.c1, rt1.c0, rt1.c3, t0.c0, t0.c93 FROM t0, rt1, v0, vt0 GROUP BY rt1.c1, rt1.c2, v0.c0, vt0.c0, v0.c2, v0.c1, rt1.c0, rt1.c3, t0.c0, t0.c93;
SELECT rt1.c1, rt1.c2, v0.c0, vt0.c0, v0.c2, v0.c1, rt1.c0, rt1.c3, t0.c0, t0.c93 FROM t0, rt1, v0, vt0 GROUP BY rt1.c1, rt1.c2, v0.c0, vt0.c0, v0.c2, v0.c1, rt1.c0, rt1.c3, t0.c0, t0.c93 HAVING 0.7681995054058602 UNION ALL SELECT ALL rt1.c1, rt1.c2, v0.c0, vt0.c0, v0.c2, v0.c1, rt1.c0, rt1.c3, t0.c0, t0.c93 FROM t0, rt1, v0, vt0 GROUP BY rt1.c1, rt1.c2, v0.c0, vt0.c0, v0.c2, v0.c1, rt1.c0, rt1.c3, t0.c0, t0.c93 HAVING (NOT (0.7681995054058602)) UNION ALL SELECT ALL rt1.c1, rt1.c2, v0.c0, vt0.c0, v0.c2, v0.c1, rt1.c0, rt1.c3, t0.c0, t0.c93 FROM t0, rt1, v0, vt0 GROUP BY rt1.c1, rt1.c2, v0.c0, vt0.c0, v0.c2, v0.c1, rt1.c0, rt1.c3, t0.c0, t0.c93 HAVING ((0.7681995054058602) ISNULL);
SELECT ALL rt1.c1, rt1.c2, v0.c0, vt0.c0, v0.c2, v0.c1, rt1.c0, rt1.c3, t0.c0, t0.c93 FROM t0, rt1, v0, vt0 GROUP BY rt1.c1, rt1.c2, v0.c0, vt0.c0, v0.c2, v0.c1, rt1.c0, rt1.c3, t0.c0, t0.c93;
SELECT ALL rt1.c3, rt1.c1, t0.c93, rt1.c0 FROM rt1, t0, vt0;
SELECT ALL rt1.c3, rt1.c1, t0.c93, rt1.c0 FROM rt1, t0, vt0 WHERE (((((rt1.c2) NOTNULL))OR(rt1.c1 COLLATE BINARY))) UNION ALL SELECT ALL rt1.c3, rt1.c1, t0.c93, rt1.c0 FROM rt1, t0, vt0 WHERE ((NOT (((((rt1.c2) NOTNULL))OR(rt1.c1 COLLATE BINARY))))) UNION ALL SELECT rt1.c3, rt1.c1, t0.c93, rt1.c0 FROM rt1, t0, vt0 WHERE (((((((rt1.c2) NOTNULL))OR(rt1.c1 COLLATE BINARY))) ISNULL));
SELECT ALL rt1.c3, rt1.c1, t0.c93, rt1.c0 FROM rt1, t0, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((TRIM(DISTINCT t0.c93))+(CASE t0.c0  WHEN t0.c93 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c93 THEN t0.c0 END))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((TRIM(DISTINCT t0.c93))+(CASE t0.c0  WHEN t0.c93 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c93 THEN t0.c0 END))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((TRIM(DISTINCT t0.c93))+(CASE t0.c0  WHEN t0.c93 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c93 THEN t0.c0 END))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0, rt1.c0, v0.c1, v0.c0, t0.c93, rt1.c1, v0.c2, rt1.c3, vt0.c0 FROM rt1, t0, v0, vt0 GROUP BY t0.c0, rt1.c0, v0.c1, v0.c0, t0.c93, rt1.c1, v0.c2, rt1.c3, vt0.c0;
SELECT ALL t0.c0, rt1.c0, v0.c1, v0.c0, t0.c93, rt1.c1, v0.c2, rt1.c3, vt0.c0 FROM rt1, t0, v0, vt0 WHERE ((((v0.c1) NOTNULL) IN ())) GROUP BY t0.c0, rt1.c0, v0.c1, v0.c0, t0.c93, rt1.c1, v0.c2, rt1.c3, vt0.c0 UNION SELECT ALL t0.c0, rt1.c0, v0.c1, v0.c0, t0.c93, rt1.c1, v0.c2, rt1.c3, vt0.c0 FROM rt1, t0, v0, vt0 WHERE ((NOT ((((v0.c1) NOTNULL) IN ())))) GROUP BY t0.c0, rt1.c0, v0.c1, v0.c0, t0.c93, rt1.c1, v0.c2, rt1.c3, vt0.c0 UNION SELECT ALL t0.c0, rt1.c0, v0.c1, v0.c0, t0.c93, rt1.c1, v0.c2, rt1.c3, vt0.c0 FROM rt1, t0, v0, vt0 WHERE ((((((v0.c1) NOTNULL) IN ())) ISNULL)) GROUP BY t0.c0, rt1.c0, v0.c1, v0.c0, t0.c93, rt1.c1, v0.c2, rt1.c3, vt0.c0;
SELECT t0.c0, rt1.c0, v0.c1, v0.c0, t0.c93, rt1.c1, v0.c2, rt1.c3, vt0.c0 FROM rt1, t0, v0, vt0 GROUP BY t0.c0, rt1.c0, v0.c1, v0.c0, t0.c93, rt1.c1, v0.c2, rt1.c3, vt0.c0;
SELECT ALL rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c3;
SELECT rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c3 HAVING ((rt1.c0)%(COUNT(*))) UNION ALL SELECT ALL rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c3 HAVING (NOT (((rt1.c0)%(COUNT(*))))) UNION ALL SELECT ALL rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c3 HAVING ((((rt1.c0)%(COUNT(*)))) ISNULL);
SELECT ALL rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c3;
SELECT rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c3 HAVING ((rt1.c0)%(COUNT(*))) UNION ALL SELECT ALL rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c3 HAVING (NOT (((rt1.c0)%(COUNT(*))))) UNION ALL SELECT ALL rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c3 HAVING ((((rt1.c0)%(COUNT(*)))) ISNULL);
SELECT ALL rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c3;
SELECT rt1.c2 FROM vt0, t0 NATURAL JOIN rt1;
SELECT ALL rt1.c2 FROM vt0, t0 NATURAL JOIN rt1 WHERE ((~ (((rt1.c1)IS(rt1.c1))))) UNION ALL SELECT ALL rt1.c2 FROM vt0, t0 NATURAL JOIN rt1 WHERE ((NOT ((~ (((rt1.c1)IS(rt1.c1))))))) UNION ALL SELECT ALL rt1.c2 FROM vt0, t0 NATURAL JOIN rt1 WHERE ((((~ (((rt1.c1)IS(rt1.c1))))) ISNULL));
SELECT rt1.c2 FROM vt0, t0 NATURAL JOIN rt1;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON (+ (rt1.c0)) CROSS JOIN rt1 ON ABS((((rt1.c0))=((v0.c0)))) INNER JOIN vt0 ON (((((((t0.c93, v0.c1, rt1.c1)) BETWEEN ((v0.c1, rt1.c1, rt1.c3)) AND ((rt1.c0, rt1.c2, rt1.c0))))OR(MIN('D', x''))))AND('-1868334779'));
SELECT ALL rt1.c2, v0.c1, rt1.c0, t0.c0, rt1.c3, v0.c0, vt0.c0, t0.c93 FROM t0 FULL OUTER JOIN rt1 ON CAST(rt1.c3 COLLATE NOCASE AS BLOB) RIGHT OUTER JOIN vt0 ON ((rt1.c1)>>(t0.c93)) COLLATE BINARY CROSS JOIN v0 ON '283571931' GROUP BY rt1.c2, v0.c1, rt1.c0, t0.c0, rt1.c3, v0.c0, vt0.c0, t0.c93;
SELECT rt1.c2, v0.c1, rt1.c0, t0.c0, rt1.c3, v0.c0, vt0.c0, t0.c93 FROM t0 FULL OUTER JOIN rt1 ON CAST(rt1.c3 COLLATE NOCASE AS BLOB) RIGHT OUTER JOIN vt0 ON ((rt1.c1)>>(t0.c93)) COLLATE BINARY CROSS JOIN v0 ON '283571931' WHERE (((((rt1.c1)OR(v0.c2)))AND(t0.c0)) COLLATE RTRIM COLLATE NOCASE) GROUP BY rt1.c2, v0.c1, rt1.c0, t0.c0, rt1.c3, v0.c0, vt0.c0, t0.c93 UNION SELECT rt1.c2, v0.c1, rt1.c0, t0.c0, rt1.c3, v0.c0, vt0.c0, t0.c93 FROM t0 FULL OUTER JOIN rt1 ON CAST(rt1.c3 COLLATE NOCASE AS BLOB) RIGHT OUTER JOIN vt0 ON ((rt1.c1)>>(t0.c93)) COLLATE BINARY CROSS JOIN v0 ON '283571931' WHERE ((NOT (((((rt1.c1)OR(v0.c2)))AND(t0.c0)) COLLATE RTRIM COLLATE NOCASE))) GROUP BY rt1.c2, v0.c1, rt1.c0, t0.c0, rt1.c3, v0.c0, vt0.c0, t0.c93 UNION SELECT ALL rt1.c2, v0.c1, rt1.c0, t0.c0, rt1.c3, v0.c0, vt0.c0, t0.c93 FROM t0 FULL OUTER JOIN rt1 ON CAST(rt1.c3 COLLATE NOCASE AS BLOB) RIGHT OUTER JOIN vt0 ON ((rt1.c1)>>(t0.c93)) COLLATE BINARY CROSS JOIN v0 ON '283571931' WHERE (((((((rt1.c1)OR(v0.c2)))AND(t0.c0)) COLLATE RTRIM COLLATE NOCASE) ISNULL)) GROUP BY rt1.c2, v0.c1, rt1.c0, t0.c0, rt1.c3, v0.c0, vt0.c0, t0.c93;
SELECT ALL rt1.c2, v0.c1, rt1.c0, t0.c0, rt1.c3, v0.c0, vt0.c0, t0.c93 FROM t0 FULL OUTER JOIN rt1 ON CAST(rt1.c3 COLLATE NOCASE AS BLOB) RIGHT OUTER JOIN vt0 ON ((rt1.c1)>>(t0.c93)) COLLATE BINARY CROSS JOIN v0 ON '283571931' GROUP BY rt1.c2, v0.c1, rt1.c0, t0.c0, rt1.c3, v0.c0, vt0.c0, t0.c93;
SELECT t0.c93, rt1.c0 FROM vt0, t0, rt1, v0 GROUP BY t0.c93, rt1.c0;
SELECT t0.c93, rt1.c0 FROM vt0, t0, rt1, v0 GROUP BY t0.c93, rt1.c0 HAVING AVG(COUNT(rt1.c3)) COLLATE BINARY UNION ALL SELECT ALL t0.c93, rt1.c0 FROM vt0, t0, rt1, v0 GROUP BY t0.c93, rt1.c0 HAVING (NOT (AVG(COUNT(rt1.c3)) COLLATE BINARY)) UNION ALL SELECT t0.c93, rt1.c0 FROM vt0, t0, rt1, v0 GROUP BY t0.c93, rt1.c0 HAVING ((AVG(COUNT(rt1.c3)) COLLATE BINARY) ISNULL);
SELECT SUM(CASE WHEN ((NULL)/(v0.c1)) THEN ((NULL)/(v0.c0)) END) FROM v0 ORDER BY v0.c0  NULLS FIRST;
SELECT ALL * FROM v0, vt0, t0;
SELECT * FROM v0, vt0, t0 WHERE ((('{}') IS TRUE)) UNION ALL SELECT * FROM v0, vt0, t0 WHERE ((NOT ((('{}') IS TRUE)))) UNION ALL SELECT * FROM v0, vt0, t0 WHERE ((((('{}') IS TRUE)) ISNULL));
SELECT ALL * FROM v0, vt0, t0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN t0 WHERE (CASE WHEN ((((t0.c93)AND(vt0.c0)))AND(t0.c93)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) ELSE (((vt0.c0, t0.c0, vt0.c0)) BETWEEN ((t0.c93, t0.c93, vt0.c0)) AND ((t0.c93, t0.c0, x'6976'))) END) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN t0 WHERE ((NOT (CASE WHEN ((((t0.c93)AND(vt0.c0)))AND(t0.c93)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) ELSE (((vt0.c0, t0.c0, vt0.c0)) BETWEEN ((t0.c93, t0.c93, vt0.c0)) AND ((t0.c93, t0.c0, x'6976'))) END))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN t0 WHERE (((CASE WHEN ((((t0.c93)AND(vt0.c0)))AND(t0.c93)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) ELSE (((vt0.c0, t0.c0, vt0.c0)) BETWEEN ((t0.c93, t0.c93, vt0.c0)) AND ((t0.c93, t0.c0, x'6976'))) END) ISNULL));
SELECT DISTINCT * FROM vt0 NATURAL JOIN t0;
SELECT t0.c0, t0.c93, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON (+ (x'' COLLATE NOCASE)) INNER JOIN vt0 ON ((rt1.c3 COLLATE BINARY)IS NOT(0Xffffffffa75990fa)) GROUP BY t0.c0, t0.c93, rt1.c1;
SELECT t0.c0, t0.c93, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON (+ (x'' COLLATE NOCASE)) INNER JOIN vt0 ON ((rt1.c3 COLLATE BINARY)IS NOT(0xffffffffa75990fa)) WHERE (CAST(((rt1.c1)/(rt1.c0)) AS INTEGER)) GROUP BY t0.c0, t0.c93, rt1.c1 UNION SELECT ALL t0.c0, t0.c93, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON (+ (x'' COLLATE NOCASE)) INNER JOIN vt0 ON ((rt1.c3 COLLATE BINARY)IS NOT(0Xffffffffa75990fa)) WHERE ((NOT (CAST(((rt1.c1)/(rt1.c0)) AS INTEGER)))) GROUP BY t0.c0, t0.c93, rt1.c1 UNION SELECT t0.c0, t0.c93, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON (+ (x'' COLLATE NOCASE)) INNER JOIN vt0 ON ((rt1.c3 COLLATE BINARY)IS NOT(0Xffffffffa75990fa)) WHERE (((CAST(((rt1.c1)/(rt1.c0)) AS INTEGER)) ISNULL)) GROUP BY t0.c0, t0.c93, rt1.c1;
SELECT t0.c0, t0.c93, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON (+ (x'' COLLATE NOCASE)) INNER JOIN vt0 ON ((rt1.c3 COLLATE BINARY)IS NOT(0Xffffffffa75990fa)) GROUP BY t0.c0, t0.c93, rt1.c1;
SELECT v0.c0, v0.c1, rt1.c0, vt0.c0 FROM v0, rt1 INNER JOIN vt0 ON (CAST(rt1.c0 AS INTEGER) IN ()) GROUP BY v0.c0, v0.c1, rt1.c0, vt0.c0;
SELECT ALL v0.c0, v0.c1, rt1.c0, vt0.c0 FROM v0, rt1 INNER JOIN vt0 ON (CAST(rt1.c0 AS INTEGER) IN ()) GROUP BY v0.c0, v0.c1, rt1.c0, vt0.c0 HAVING 0xffffffffa2c9f0d1 UNION ALL SELECT v0.c0, v0.c1, rt1.c0, vt0.c0 FROM v0, rt1 INNER JOIN vt0 ON (CAST(rt1.c0 AS INTEGER) IN ()) GROUP BY v0.c0, v0.c1, rt1.c0, vt0.c0 HAVING (NOT (0xffffffffa2c9f0d1)) UNION ALL SELECT v0.c0, v0.c1, rt1.c0, vt0.c0 FROM v0, rt1 INNER JOIN vt0 ON (CAST(rt1.c0 AS INTEGER) IN ()) GROUP BY v0.c0, v0.c1, rt1.c0, vt0.c0 HAVING ((0xffffffffa2c9f0d1) ISNULL);
SELECT v0.c0, v0.c1, rt1.c0, vt0.c0 FROM v0, rt1 INNER JOIN vt0 ON (CAST(rt1.c0 AS INTEGER) IN ()) GROUP BY v0.c0, v0.c1, rt1.c0, vt0.c0;
SELECT ALL v0.c0, v0.c1, rt1.c0, vt0.c0 FROM v0, rt1 INNER JOIN vt0 ON (CAST(rt1.c0 AS INTEGER) IN ()) GROUP BY v0.c0, v0.c1, rt1.c0, vt0.c0 HAVING 0xffffffffa2c9f0d1 UNION ALL SELECT v0.c0, v0.c1, rt1.c0, vt0.c0 FROM v0, rt1 INNER JOIN vt0 ON (CAST(rt1.c0 AS INTEGER) IN ()) GROUP BY v0.c0, v0.c1, rt1.c0, vt0.c0 HAVING (NOT (0xffffffffa2c9f0d1)) UNION ALL SELECT v0.c0, v0.c1, rt1.c0, vt0.c0 FROM v0, rt1 INNER JOIN vt0 ON (CAST(rt1.c0 AS INTEGER) IN ()) GROUP BY v0.c0, v0.c1, rt1.c0, vt0.c0 HAVING ((0xffffffffa2c9f0d1) ISNULL);
SELECT v0.c0, v0.c1, rt1.c0, vt0.c0 FROM v0, rt1 INNER JOIN vt0 ON (CAST(rt1.c0 AS INTEGER) IN ()) GROUP BY v0.c0, v0.c1, rt1.c0, vt0.c0;
SELECT MIN((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c1)))) NOT BETWEEN (((v0.c2) NOTNULL)) AND ((v0.c1 IN ())))) FROM v0;
SELECT ALL t0.c0, v0.c1, v0.c0, v0.c2, vt0.c0, t0.c93 FROM t0, vt0 RIGHT OUTER JOIN v0 ON (((t0.c0)<=(t0.c0)) IN ());
SELECT t0.c0, v0.c1, v0.c0, v0.c2, vt0.c0, t0.c93 FROM t0, vt0 RIGHT OUTER JOIN v0 ON (((t0.c0)<=(t0.c0)) IN ()) WHERE (TYPEOF(DISTINCT (((t0.c93, t0.c0, t0.c93)) NOT BETWEEN ((t0.c0, t0.c93, 0.8095859802485926)) AND ((t0.c93, v0.c0, vt0.c0))))) UNION ALL SELECT t0.c0, v0.c1, v0.c0, v0.c2, vt0.c0, t0.c93 FROM t0, vt0 RIGHT OUTER JOIN v0 ON (((t0.c0)<=(t0.c0)) IN ()) WHERE ((NOT (TYPEOF(DISTINCT (((t0.c93, t0.c0, t0.c93)) NOT BETWEEN ((t0.c0, t0.c93, 0.8095859802485926)) AND ((t0.c93, v0.c0, vt0.c0))))))) UNION ALL SELECT t0.c0, v0.c1, v0.c0, v0.c2, vt0.c0, t0.c93 FROM t0, vt0 RIGHT OUTER JOIN v0 ON (((t0.c0)<=(t0.c0)) IN ()) WHERE (((TYPEOF(DISTINCT (((t0.c93, t0.c0, t0.c93)) NOT BETWEEN ((t0.c0, t0.c93, 0.8095859802485926)) AND ((t0.c93, v0.c0, vt0.c0))))) ISNULL));
SELECT ALL t0.c0, v0.c1, v0.c0, v0.c2, vt0.c0, t0.c93 FROM t0, vt0 RIGHT OUTER JOIN v0 ON (((t0.c0)<=(t0.c0)) IN ());
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((~ (0X221a719c))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((~ (0x221a719c))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((~ (0x221a719c))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c2, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1;
SELECT ALL rt1.c2, rt1.c3, rt1.c1 FROM rt1 WHERE (CASE (((('-1156340752')AND(rt1.c0)))AND('-1199510278'))  WHEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c3)) THEN ((x'') NOT BETWEEN (rt1.c0) AND (rt1.c2)) END) GROUP BY rt1.c2, rt1.c3, rt1.c1 UNION SELECT rt1.c2, rt1.c3, rt1.c1 FROM rt1 WHERE ((NOT (CASE (((('-1156340752')AND(rt1.c0)))AND('-1199510278'))  WHEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c3)) THEN ((x'') NOT BETWEEN (rt1.c0) AND (rt1.c2)) END))) GROUP BY rt1.c2, rt1.c3, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c3, rt1.c1 FROM rt1 WHERE (((CASE (((('-1156340752')AND(rt1.c0)))AND('-1199510278'))  WHEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c3)) THEN ((x'') NOT BETWEEN (rt1.c0) AND (rt1.c2)) END) ISNULL)) GROUP BY rt1.c2, rt1.c3, rt1.c1;
SELECT rt1.c2, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1;
SELECT t0.c0, t0.c93 FROM t0 GROUP BY t0.c0, t0.c93;
SELECT ALL t0.c0, t0.c93 FROM t0 GROUP BY t0.c0, t0.c93 HAVING COUNT(GROUP_CONCAT(MAX(t0.c93))) UNION ALL SELECT ALL t0.c0, t0.c93 FROM t0 GROUP BY t0.c0, t0.c93 HAVING (NOT (COUNT(GROUP_CONCAT(MAX(t0.c93))))) UNION ALL SELECT ALL t0.c0, t0.c93 FROM t0 GROUP BY t0.c0, t0.c93 HAVING ((COUNT(GROUP_CONCAT(MAX(t0.c93)))) ISNULL);
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((CASE WHEN rt1.c1 THEN rt1.c3 WHEN vt0.c0 THEN v0.c2 WHEN v0.c2 THEN rt1.c3 WHEN v0.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 END) NOT BETWEEN (CASE WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c0 END) AND ((NOT (v0.c0)))) INNER JOIN rt1 ON v0.c1;
SELECT DISTINCT vt0.c0, v0.c1 FROM vt0 RIGHT OUTER JOIN v0 ON (0.300204307945218 IN (v0.c1)) COLLATE RTRIM COLLATE RTRIM;
SELECT DISTINCT vt0.c0, v0.c1 FROM vt0 RIGHT OUTER JOIN v0 ON (0.300204307945218 IN (v0.c1)) COLLATE RTRIM COLLATE RTRIM WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) AS REAL)) UNION SELECT DISTINCT vt0.c0, v0.c1 FROM vt0 RIGHT OUTER JOIN v0 ON (0.300204307945218 IN (v0.c1)) COLLATE RTRIM COLLATE RTRIM WHERE ((NOT (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) AS REAL)))) UNION SELECT DISTINCT vt0.c0, v0.c1 FROM vt0 RIGHT OUTER JOIN v0 ON (0.300204307945218 IN (v0.c1)) COLLATE RTRIM COLLATE RTRIM WHERE (((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT vt0.c0, v0.c1 FROM vt0 RIGHT OUTER JOIN v0 ON (0.300204307945218 IN (v0.c1)) COLLATE RTRIM COLLATE RTRIM;
SELECT ALL t0.c93, t0.c0 FROM t0, vt0 GROUP BY t0.c93, t0.c0;
SELECT ALL t0.c93, t0.c0 FROM t0, vt0 WHERE ((((((t0.c93) IS TRUE), (t0.c0 IN ()), ((t0.c93)>(t0.c0)), CAST(t0.c93 AS NUMERIC), (vt0.c0 IN ())))>((CAST(vt0.c0 AS BLOB), (((t0.c0))>((t0.c0))), IFNULL(DISTINCT vt0.c0, vt0.c0), (~ (t0.c93)), ((t0.c0) NOT NULL))))) GROUP BY t0.c93, t0.c0 UNION SELECT t0.c93, t0.c0 FROM t0, vt0 WHERE ((NOT ((((((t0.c93) IS TRUE), (t0.c0 IN ()), ((t0.c93)>(t0.c0)), CAST(t0.c93 AS NUMERIC), (vt0.c0 IN ())))>((CAST(vt0.c0 AS BLOB), (((t0.c0))>((t0.c0))), IFNULL(DISTINCT vt0.c0, vt0.c0), (~ (t0.c93)), ((t0.c0) NOT NULL))))))) GROUP BY t0.c93, t0.c0 UNION SELECT ALL t0.c93, t0.c0 FROM t0, vt0 WHERE ((((((((t0.c93) IS TRUE), (t0.c0 IN ()), ((t0.c93)>(t0.c0)), CAST(t0.c93 AS NUMERIC), (vt0.c0 IN ())))>((CAST(vt0.c0 AS BLOB), (((t0.c0))>((t0.c0))), IFNULL(DISTINCT vt0.c0, vt0.c0), (~ (t0.c93)), ((t0.c0) NOT NULL))))) ISNULL)) GROUP BY t0.c93, t0.c0;
SELECT ALL t0.c93, t0.c0 FROM t0, vt0 GROUP BY t0.c93, t0.c0;
SELECT rt1.c0, rt1.c3, vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1, v0 GROUP BY rt1.c0, rt1.c3, vt0.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c3, vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1, v0 GROUP BY rt1.c0, rt1.c3, vt0.c0, rt1.c1, rt1.c2 HAVING TOTAL(GROUP_CONCAT(v0.c2)) UNION ALL SELECT ALL rt1.c0, rt1.c3, vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1, v0 GROUP BY rt1.c0, rt1.c3, vt0.c0, rt1.c1, rt1.c2 HAVING (NOT (TOTAL(GROUP_CONCAT(v0.c2)))) UNION ALL SELECT rt1.c0, rt1.c3, vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1, v0 GROUP BY rt1.c0, rt1.c3, vt0.c0, rt1.c1, rt1.c2 HAVING ((TOTAL(GROUP_CONCAT(v0.c2))) ISNULL);
SELECT ALL * FROM rt1, v0;
SELECT * FROM rt1, v0 WHERE (CAST(((rt1.c1) BETWEEN (rt1.c3) AND (v0.c2)) AS REAL)) UNION ALL SELECT * FROM rt1, v0 WHERE ((NOT (CAST(((rt1.c1) BETWEEN (rt1.c3) AND (v0.c2)) AS REAL)))) UNION ALL SELECT ALL * FROM rt1, v0 WHERE (((CAST(((rt1.c1) BETWEEN (rt1.c3) AND (v0.c2)) AS REAL)) ISNULL));
SELECT ALL * FROM rt1, v0;
SELECT DISTINCT * FROM vt0, rt1, t0;
SELECT DISTINCT * FROM vt0, rt1, t0 WHERE ((((- (rt1.c0)))AND(HEX(DISTINCT t0.c93)))) UNION SELECT DISTINCT * FROM vt0, rt1, t0 WHERE ((NOT ((((- (rt1.c0)))AND(HEX(DISTINCT t0.c93)))))) UNION SELECT DISTINCT * FROM vt0, rt1, t0 WHERE ((((((- (rt1.c0)))AND(HEX(DISTINCT t0.c93)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1, t0;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 WHERE (rt1.c0) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT (rt1.c0))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE (((rt1.c0) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c3, rt1.c0, v0.c0, v0.c1, t0.c93 FROM rt1, vt0, v0, t0 GROUP BY rt1.c3, rt1.c0, v0.c0, v0.c1, t0.c93;
SELECT ALL rt1.c3, rt1.c0, v0.c0, v0.c1, t0.c93 FROM rt1, vt0, v0, t0 GROUP BY rt1.c3, rt1.c0, v0.c0, v0.c1, t0.c93 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c3, rt1.c0, v0.c0, v0.c1, t0.c93 FROM rt1, vt0, v0, t0 GROUP BY rt1.c3, rt1.c0, v0.c0, v0.c1, t0.c93 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c3, rt1.c0, v0.c0, v0.c1, t0.c93 FROM rt1, vt0, v0, t0 GROUP BY rt1.c3, rt1.c0, v0.c0, v0.c1, t0.c93 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c3, rt1.c0, v0.c0, v0.c1, t0.c93 FROM rt1, vt0, v0, t0 GROUP BY rt1.c3, rt1.c0, v0.c0, v0.c1, t0.c93;
SELECT ALL rt1.c3, rt1.c0, v0.c0, v0.c1, t0.c93 FROM rt1, vt0, v0, t0 GROUP BY rt1.c3, rt1.c0, v0.c0, v0.c1, t0.c93 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c3, rt1.c0, v0.c0, v0.c1, t0.c93 FROM rt1, vt0, v0, t0 GROUP BY rt1.c3, rt1.c0, v0.c0, v0.c1, t0.c93 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c3, rt1.c0, v0.c0, v0.c1, t0.c93 FROM rt1, vt0, v0, t0 GROUP BY rt1.c3, rt1.c0, v0.c0, v0.c1, t0.c93 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c3, rt1.c0, v0.c0, v0.c1, t0.c93 FROM rt1, vt0, v0, t0 GROUP BY rt1.c3, rt1.c0, v0.c0, v0.c1, t0.c93;
SELECT ALL * FROM rt1, t0, v0;
SELECT * FROM rt1, t0, v0 WHERE (((v0.c2 COLLATE BINARY)<>(CAST(rt1.c0 AS REAL)))) UNION ALL SELECT ALL * FROM rt1, t0, v0 WHERE ((NOT (((v0.c2 COLLATE BINARY)!=(CAST(rt1.c0 AS REAL)))))) UNION ALL SELECT ALL * FROM rt1, t0, v0 WHERE (((((v0.c2 COLLATE BINARY)!=(CAST(rt1.c0 AS REAL)))) ISNULL));
SELECT ALL * FROM rt1, t0, v0;
SELECT DISTINCT * FROM rt1, v0;
SELECT DISTINCT * FROM rt1, v0 WHERE ((((v0.c2)) NOT BETWEEN ((((rt1.c0) IS FALSE))) AND ((((((NULL)AND(rt1.c0)))AND(v0.c0)))))) UNION SELECT DISTINCT * FROM rt1, v0 WHERE ((NOT ((((v0.c2)) NOT BETWEEN ((((rt1.c0) IS FALSE))) AND ((((((NULL)AND(rt1.c0)))AND(v0.c0)))))))) UNION SELECT DISTINCT * FROM rt1, v0 WHERE ((((((v0.c2)) NOT BETWEEN ((((rt1.c0) IS FALSE))) AND ((((((NULL)AND(rt1.c0)))AND(v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt1, v0;
SELECT ALL rt1.c3 FROM vt0, rt1, v0 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM vt0, rt1, v0 WHERE (UNLIKELY((NOT (rt1.c2)))) GROUP BY rt1.c3 UNION SELECT rt1.c3 FROM vt0, rt1, v0 WHERE ((NOT (UNLIKELY((NOT (rt1.c2)))))) GROUP BY rt1.c3 UNION SELECT ALL rt1.c3 FROM vt0, rt1, v0 WHERE (((UNLIKELY((NOT (rt1.c2)))) ISNULL)) GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM vt0, rt1, v0 GROUP BY rt1.c3;
SELECT t0.c93, t0.c0 FROM t0 GROUP BY t0.c93, t0.c0;
SELECT t0.c93, t0.c0 FROM t0 GROUP BY t0.c93, t0.c0 HAVING TOTAL(((((((((MIN(t0.c93))OR(GROUP_CONCAT(t0.c0))))AND(COUNT(*))))AND(MAX(t0.c93))))OR(t0.c0))) UNION ALL SELECT t0.c93, t0.c0 FROM t0 GROUP BY t0.c93, t0.c0 HAVING (NOT (TOTAL(((((((((MIN(t0.c93))OR(GROUP_CONCAT(t0.c0))))AND(COUNT(*))))AND(MAX(t0.c93))))OR(t0.c0))))) UNION ALL SELECT t0.c93, t0.c0 FROM t0 GROUP BY t0.c93, t0.c0 HAVING ((TOTAL(((((((((MIN(t0.c93))OR(GROUP_CONCAT(t0.c0))))AND(COUNT(*))))AND(MAX(t0.c93))))OR(t0.c0)))) ISNULL);
SELECT ALL rt1.c1, v0.c1, rt1.c3, v0.c2, v0.c0, t0.c93, rt1.c0 FROM t0, rt1, v0;
SELECT rt1.c1, v0.c1, rt1.c3, v0.c2, v0.c0, t0.c93, rt1.c0 FROM t0, rt1, v0 WHERE (((+ (rt1.c0)) IN ())) UNION ALL SELECT ALL rt1.c1, v0.c1, rt1.c3, v0.c2, v0.c0, t0.c93, rt1.c0 FROM t0, rt1, v0 WHERE ((NOT (((+ (rt1.c0)) IN ())))) UNION ALL SELECT ALL rt1.c1, v0.c1, rt1.c3, v0.c2, v0.c0, t0.c93, rt1.c0 FROM t0, rt1, v0 WHERE (((((+ (rt1.c0)) IN ())) ISNULL));
SELECT ALL rt1.c1, v0.c1, rt1.c3, v0.c2, v0.c0, t0.c93, rt1.c0 FROM t0, rt1, v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE ((CAST(v0.c2 AS INTEGER) IN ())) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT ((CAST(v0.c2 AS INTEGER) IN ())))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((((CAST(v0.c2 AS INTEGER) IN ())) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT v0.c1 FROM t0, v0 FULL OUTER JOIN rt1 ON (((((NULL, v0.c0, t0.c93))!=(('䪢.|5', v0.c2, rt1.c0))))LIKE(((t0.c0)=(rt1.c2)))) GROUP BY v0.c1;
SELECT ALL v0.c1 FROM t0, v0 FULL OUTER JOIN rt1 ON (((((NULL, v0.c0, t0.c93))!=(('䪢.|5', v0.c2, rt1.c0))))LIKE(((t0.c0)==(rt1.c2)))) WHERE (((CAST(rt1.c2 AS INTEGER))<=(rt1.c0 COLLATE NOCASE))) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM t0, v0 FULL OUTER JOIN rt1 ON (((((NULL, v0.c0, t0.c93))<>(('䪢.|5', v0.c2, rt1.c0))))LIKE(((t0.c0)==(rt1.c2)))) WHERE ((NOT (((CAST(rt1.c2 AS INTEGER))<=(rt1.c0 COLLATE NOCASE))))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM t0, v0 FULL OUTER JOIN rt1 ON (((((NULL, v0.c0, t0.c93))<>(('䪢.|5', v0.c2, rt1.c0))))LIKE(((t0.c0)=(rt1.c2)))) WHERE (((((CAST(rt1.c2 AS INTEGER))<=(rt1.c0 COLLATE NOCASE))) ISNULL)) GROUP BY v0.c1;
SELECT v0.c1 FROM t0, v0 FULL OUTER JOIN rt1 ON (((((NULL, v0.c0, t0.c93))!=(('䪢.|5', v0.c2, rt1.c0))))LIKE(((t0.c0)=(rt1.c2)))) GROUP BY v0.c1;
SELECT ALL t0.c93 FROM t0 GROUP BY t0.c93;
SELECT t0.c93 FROM t0 GROUP BY t0.c93 HAVING 0X7559088e UNION ALL SELECT t0.c93 FROM t0 GROUP BY t0.c93 HAVING (NOT (0x7559088e)) UNION ALL SELECT t0.c93 FROM t0 GROUP BY t0.c93 HAVING ((0X7559088e) ISNULL);
SELECT ALL t0.c93 FROM t0 GROUP BY t0.c93;
SELECT t0.c93 FROM t0 GROUP BY t0.c93 HAVING 0X7559088e UNION ALL SELECT t0.c93 FROM t0 GROUP BY t0.c93 HAVING (NOT (0x7559088e)) UNION ALL SELECT t0.c93 FROM t0 GROUP BY t0.c93 HAVING ((0X7559088e) ISNULL);
SELECT ALL t0.c93 FROM t0 GROUP BY t0.c93;
SELECT ALL vt0.c0, rt1.c1, t0.c93, rt1.c0, t0.c0, rt1.c3, v0.c0, rt1.c2, v0.c2 FROM t0 RIGHT OUTER JOIN vt0 ON CASE ((rt1.c1) BETWEEN ('-Y0Uj_') AND (rt1.c2))  WHEN ((rt1.c0)<<(v0.c2)) THEN 0.6118853861483334 ELSE ((t0.c93)<(v0.c1)) END LEFT OUTER JOIN v0 ON v0.c2 LEFT OUTER JOIN rt1 ON (~ (CASE rt1.c3  WHEN v0.c1 THEN rt1.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c1 END));
SELECT DISTINCT rt1.c1, t0.c93, vt0.c0 FROM vt0, rt1, t0;
SELECT DISTINCT rt1.c1, t0.c93, vt0.c0 FROM vt0, rt1, t0 WHERE (x'') UNION SELECT DISTINCT rt1.c1, t0.c93, vt0.c0 FROM vt0, rt1, t0 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt1.c1, t0.c93, vt0.c0 FROM vt0, rt1, t0 NOT INDEXED WHERE (((x'') ISNULL));
SELECT DISTINCT rt1.c1, t0.c93, vt0.c0 FROM vt0, rt1, t0;
SELECT ALL v0.c2, v0.c1, v0.c0, t0.c0, t0.c93 FROM v0, t0 GROUP BY v0.c2, v0.c1, v0.c0, t0.c0, t0.c93;
SELECT ALL v0.c2, v0.c1, v0.c0, t0.c0, t0.c93 FROM v0, t0 WHERE (CASE (((v0.c2))<((v0.c0)))  WHEN CAST(v0.c2 AS NUMERIC) THEN ((((t0.c93)OR(v0.c1)))AND('1076290003')) WHEN v0.c0 THEN (+ (v0.c1)) WHEN ((v0.c2)&(v0.c0)) THEN json(t0.c93) END) GROUP BY v0.c2, v0.c1, v0.c0, t0.c0, t0.c93 UNION SELECT ALL v0.c2, v0.c1, v0.c0, t0.c0, t0.c93 FROM v0, t0 WHERE ((NOT (CASE (((v0.c2))<((v0.c0)))  WHEN CAST(v0.c2 AS NUMERIC) THEN ((((t0.c93)OR(v0.c1)))AND('1076290003')) WHEN v0.c0 THEN (+ (v0.c1)) WHEN ((v0.c2)&(v0.c0)) THEN json(t0.c93) END))) GROUP BY v0.c2, v0.c1, v0.c0, t0.c0, t0.c93 UNION SELECT v0.c2, v0.c1, v0.c0, t0.c0, t0.c93 FROM v0, t0 WHERE (((CASE (((v0.c2))<((v0.c0)))  WHEN CAST(v0.c2 AS NUMERIC) THEN ((((t0.c93)OR(v0.c1)))AND('1076290003')) WHEN v0.c0 THEN (+ (v0.c1)) WHEN ((v0.c2)&(v0.c0)) THEN json(t0.c93) END) ISNULL)) GROUP BY v0.c2, v0.c1, v0.c0, t0.c0, t0.c93;
SELECT ALL v0.c2, v0.c1, v0.c0, t0.c0, t0.c93 FROM v0, t0 GROUP BY v0.c2, v0.c1, v0.c0, t0.c0, t0.c93;
SELECT t0.c0, v0.c1, rt1.c1, t0.c93, v0.c0, v0.c2, rt1.c2, rt1.c3, rt1.c0 FROM v0 FULL OUTER JOIN t0 ON CASE 'eZjwതt{\r'  WHEN ((t0.c93) NOT BETWEEN (v0.c0) AND (rt1.c1)) THEN ((((rt1.c3)AND(1565573313)))AND(rt1.c2)) WHEN x'' THEN CAST(t0.c93 AS NUMERIC) WHEN 0.8100840599192368 THEN ((rt1.c2)AND(rt1.c0)) WHEN ((rt1.c3) NOT BETWEEN (t0.c0) AND (v0.c1)) THEN ((((((((t0.c93)OR(v0.c0)))OR(v0.c2)))OR(rt1.c2)))OR(rt1.c3)) WHEN '0.5538998106079344' THEN NULL END CROSS JOIN rt1 ON UPPER(DISTINCT ((rt1.c2) BETWEEN (rt1.c3) AND (v0.c1))) GROUP BY t0.c0, v0.c1, rt1.c1, t0.c93, v0.c0, v0.c2, rt1.c2, rt1.c3, rt1.c0;
SELECT * FROM vt0, rt1;
SELECT * FROM vt0, rt1 WHERE ((((rt1.c2)) NOT BETWEEN (((rt1.c1 IN ()))) AND ((COALESCE(rt1.c3, NULL))))) UNION ALL SELECT * FROM vt0, rt1 WHERE ((NOT ((((rt1.c2)) NOT BETWEEN (((rt1.c1 IN ()))) AND ((COALESCE(rt1.c3, NULL))))))) UNION ALL SELECT * FROM vt0, rt1 WHERE ((((((rt1.c2)) NOT BETWEEN (((rt1.c1 IN ()))) AND ((COALESCE(rt1.c3, NULL))))) ISNULL));
SELECT * FROM vt0, rt1;
SELECT DISTINCT * FROM rt1, t0, v0, vt0;
SELECT DISTINCT * FROM rt1, t0, v0, vt0 WHERE (((rt1.c2 COLLATE BINARY)&(((v0.c2) NOTNULL)))) UNION SELECT DISTINCT * FROM rt1, t0, v0, vt0 WHERE ((NOT (((rt1.c2 COLLATE BINARY)&(((v0.c2) NOTNULL)))))) UNION SELECT DISTINCT * FROM rt1, t0, v0, vt0 WHERE (((((rt1.c2 COLLATE BINARY)&(((v0.c2) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM rt1, t0, v0, vt0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT v0.c2, v0.c0 FROM v0 WHERE (((((v0.c2)IS(v0.c2)))<<((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) GROUP BY v0.c2, v0.c0 UNION SELECT ALL v0.c2, v0.c0 FROM v0 WHERE ((NOT (((((v0.c2)IS(v0.c2)))<<((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c0)))))))) GROUP BY v0.c2, v0.c0 UNION SELECT ALL v0.c2, v0.c0 FROM v0 WHERE (((((((v0.c2)IS(v0.c2)))<<((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) ISNULL)) GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT t0.c93, t0.c0 FROM t0 GROUP BY t0.c93, t0.c0;
SELECT ALL t0.c93, t0.c0 FROM t0 GROUP BY t0.c93, t0.c0 HAVING AVG(CASE t0.c93  WHEN -1 THEN t0.c0 WHEN t0.c0 THEN AVG(GROUP_CONCAT(SUM(t0.c93))) WHEN t0.c93 THEN t0.c0 ELSE t0.c0 END) UNION ALL SELECT t0.c93, t0.c0 FROM t0 GROUP BY t0.c93, t0.c0 HAVING (NOT (AVG(CASE t0.c93  WHEN -1 THEN t0.c0 WHEN t0.c0 THEN AVG(GROUP_CONCAT(SUM(t0.c93))) WHEN t0.c93 THEN t0.c0 ELSE t0.c0 END))) UNION ALL SELECT t0.c93, t0.c0 FROM t0 GROUP BY t0.c93, t0.c0 HAVING ((AVG(CASE t0.c93  WHEN -1 THEN t0.c0 WHEN t0.c0 THEN AVG(GROUP_CONCAT(SUM(t0.c93))) WHEN t0.c93 THEN t0.c0 ELSE t0.c0 END)) ISNULL);
SELECT ALL rt1.c2 FROM rt1;
SELECT rt1.c2 FROM rt1 WHERE (IFNULL(DISTINCT (rt1.c3 IN ()), (rt1.c0 IN (rt1.c1, rt1.c0)))) UNION ALL SELECT rt1.c2 FROM rt1 WHERE ((NOT (IFNULL(DISTINCT (rt1.c3 IN ()), (rt1.c0 IN (rt1.c1, rt1.c0)))))) UNION ALL SELECT rt1.c2 FROM rt1 WHERE (((IFNULL(DISTINCT (rt1.c3 IN ()), (rt1.c0 IN (rt1.c1, rt1.c0)))) ISNULL));
SELECT ALL rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1, v0;
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1, v0 WHERE (((((CAST(rt1.c3 AS INTEGER))AND((~ (v0.c1)))))AND((rt1.c2 IN (v0.c0, x''))))) UNION SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1, v0 WHERE ((NOT (((((CAST(rt1.c3 AS INTEGER))AND((~ (v0.c1)))))AND((rt1.c2 IN (v0.c0, x''))))))) UNION SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1, v0 WHERE (((((((CAST(rt1.c3 AS INTEGER))AND((~ (v0.c1)))))AND((rt1.c2 IN (v0.c0, x''))))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1, v0;
SELECT ALL rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c3;
SELECT rt1.c0, rt1.c3 FROM rt1 WHERE (((NOT (rt1.c3)) IN ())) GROUP BY rt1.c0, rt1.c3 UNION SELECT ALL rt1.c0, rt1.c3 FROM rt1 WHERE ((NOT (((NOT (rt1.c3)) IN ())))) GROUP BY rt1.c0, rt1.c3 UNION SELECT rt1.c0, rt1.c3 FROM rt1 WHERE (((((NOT (rt1.c3)) IN ())) ISNULL)) GROUP BY rt1.c0, rt1.c3;
SELECT ALL rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c3;
SELECT v0.c0, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, v0.c2, t0.c0;
SELECT v0.c0, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, v0.c2, t0.c0 HAVING ((((COUNT(*))OR(t0.c0)))OR(AVG(t0.c0))) COLLATE NOCASE UNION ALL SELECT ALL v0.c0, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, v0.c2, t0.c0 HAVING (NOT (((((COUNT(*))OR(t0.c0)))OR(AVG(t0.c0))) COLLATE NOCASE)) UNION ALL SELECT v0.c0, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, v0.c2, t0.c0 HAVING ((((((COUNT(*))OR(t0.c0)))OR(AVG(t0.c0))) COLLATE NOCASE) ISNULL);
SELECT v0.c0, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, v0.c2, t0.c0;
SELECT v0.c0, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, v0.c2, t0.c0 HAVING ((((COUNT(*))OR(t0.c0)))OR(AVG(t0.c0))) COLLATE NOCASE UNION ALL SELECT ALL v0.c0, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, v0.c2, t0.c0 HAVING (NOT (((((COUNT(*))OR(t0.c0)))OR(AVG(t0.c0))) COLLATE NOCASE)) UNION ALL SELECT v0.c0, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, v0.c2, t0.c0 HAVING ((((((COUNT(*))OR(t0.c0)))OR(AVG(t0.c0))) COLLATE NOCASE) ISNULL);
SELECT v0.c0, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, v0.c2, t0.c0;
SELECT ALL v0.c2, t0.c93, v0.c0, t0.c0, v0.c1 FROM v0 RIGHT OUTER JOIN t0 ON ((((((v0.c0) ISNULL))AND(x'80fd')))OR(x''));
SELECT ALL v0.c2, t0.c93, v0.c0, t0.c0, v0.c1 FROM v0 RIGHT OUTER JOIN t0 ON ((((((v0.c0) ISNULL))AND(x'80fd')))OR(x'')) WHERE (LOWER(DISTINCT TYPEOF(t0.c93))) UNION ALL SELECT ALL v0.c2, t0.c93, v0.c0, t0.c0, v0.c1 FROM v0 RIGHT OUTER JOIN t0 ON ((((((v0.c0) ISNULL))AND(x'80fd')))OR(x'')) WHERE ((NOT (LOWER(DISTINCT TYPEOF(t0.c93))))) UNION ALL SELECT v0.c2, t0.c93, v0.c0, t0.c0, v0.c1 FROM v0 RIGHT OUTER JOIN t0 ON ((((((v0.c0) ISNULL))AND(x'80fd')))OR(x'')) WHERE (((LOWER(DISTINCT TYPEOF(t0.c93))) ISNULL));
SELECT ALL v0.c2, t0.c93, v0.c0, t0.c0, v0.c1 FROM v0 RIGHT OUTER JOIN t0 ON ((((((v0.c0) ISNULL))AND(x'80fd')))OR(x''));
SELECT DISTINCT vt0.c0 FROM t0, vt0, v0;
SELECT DISTINCT vt0.c0 FROM t0, vt0, v0 WHERE ((- (((vt0.c0)>(v0.c2))))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0, v0 WHERE ((NOT ((- (((vt0.c0)>(v0.c2))))))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0, v0 WHERE ((((- (((vt0.c0)>(v0.c2))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0, vt0, v0;
SELECT v0.c1, rt1.c1, rt1.c3, vt0.c0, v0.c2, rt1.c0, rt1.c2, v0.c0 FROM v0, rt1, vt0 GROUP BY v0.c1, rt1.c1, rt1.c3, vt0.c0, v0.c2, rt1.c0, rt1.c2, v0.c0;
SELECT v0.c1, rt1.c1, rt1.c3, vt0.c0, v0.c2, rt1.c0, rt1.c2, v0.c0 FROM v0, rt1, vt0 WHERE (CASE ((rt1.c3) NOTNULL)  WHEN ((rt1.c3)>>(v0.c0)) THEN ((('-1568097135'))<=((rt1.c3))) ELSE ((vt0.c0) ISNULL) END) GROUP BY v0.c1, rt1.c1, rt1.c3, vt0.c0, v0.c2, rt1.c0, rt1.c2, v0.c0 UNION SELECT v0.c1, rt1.c1, rt1.c3, vt0.c0, v0.c2, rt1.c0, rt1.c2, v0.c0 FROM v0, rt1 NOT INDEXED, vt0 WHERE ((NOT (CASE ((rt1.c3) NOTNULL)  WHEN ((rt1.c3)>>(v0.c0)) THEN ((('-1568097135'))<=((rt1.c3))) ELSE ((vt0.c0) ISNULL) END))) GROUP BY v0.c1, rt1.c1, rt1.c3, vt0.c0, v0.c2, rt1.c0, rt1.c2, v0.c0 UNION SELECT ALL v0.c1, rt1.c1, rt1.c3, vt0.c0, v0.c2, rt1.c0, rt1.c2, v0.c0 FROM v0, rt1, vt0 WHERE (((CASE ((rt1.c3) NOTNULL)  WHEN ((rt1.c3)>>(v0.c0)) THEN ((('-1568097135'))<=((rt1.c3))) ELSE ((vt0.c0) ISNULL) END) ISNULL)) GROUP BY v0.c1, rt1.c1, rt1.c3, vt0.c0, v0.c2, rt1.c0, rt1.c2, v0.c0;
SELECT v0.c1, rt1.c1, rt1.c3, vt0.c0, v0.c2, rt1.c0, rt1.c2, v0.c0 FROM v0, rt1, vt0 GROUP BY v0.c1, rt1.c1, rt1.c3, vt0.c0, v0.c2, rt1.c0, rt1.c2, v0.c0;
SELECT t0.c0, rt1.c1, v0.c1, rt1.c3, rt1.c2, rt1.c0, t0.c93, v0.c2, vt0.c0, v0.c0 FROM t0 INDEXED BY i52, rt1, vt0, v0 GROUP BY t0.c0, rt1.c1, v0.c1, rt1.c3, rt1.c2, rt1.c0, t0.c93, v0.c2, vt0.c0, v0.c0;
SELECT ALL * FROM vt0, v0, t0;
SELECT * FROM vt0, v0, t0 NOT INDEXED WHERE ((((v0.c2 IN ())) ISNULL)) UNION ALL SELECT * FROM vt0, v0, t0 WHERE ((NOT ((((v0.c2 IN ())) ISNULL)))) UNION ALL SELECT ALL * FROM vt0, v0, t0 WHERE ((((((v0.c2 IN ())) ISNULL)) ISNULL));
SELECT ALL * FROM vt0, v0, t0;
SELECT DISTINCT * FROM t0, v0, vt0;
SELECT DISTINCT * FROM t0, v0, vt0 WHERE (('-441147395' IN ())) UNION SELECT DISTINCT * FROM t0, v0, vt0 WHERE ((NOT (('-441147395' IN ())))) UNION SELECT DISTINCT * FROM t0, v0, vt0 WHERE (((('-441147395' IN ())) ISNULL));
SELECT DISTINCT * FROM t0, v0, vt0;
SELECT ALL v0.c0, rt1.c2 FROM rt1, v0 GROUP BY v0.c0, rt1.c2;
SELECT v0.c0, rt1.c2 FROM rt1, v0 WHERE (((((rt1.c2, rt1.c2, v0.c2, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c3, v0.c2, v0.c2, v0.c2, rt1.c2)) AND (('jgQPam}eQ', rt1.c2, rt1.c3, -94254968, v0.c0))) IN ())) GROUP BY v0.c0, rt1.c2 UNION SELECT ALL v0.c0, rt1.c2 FROM rt1, v0 WHERE ((NOT (((((rt1.c2, rt1.c2, v0.c2, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c3, v0.c2, v0.c2, v0.c2, rt1.c2)) AND (('jgQPam}eQ', rt1.c2, rt1.c3, -94254968, v0.c0))) IN ())))) GROUP BY v0.c0, rt1.c2 UNION SELECT ALL v0.c0, rt1.c2 FROM rt1, v0 WHERE (((((((rt1.c2, rt1.c2, v0.c2, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c3, v0.c2, v0.c2, v0.c2, rt1.c2)) AND (('jgQPam}eQ', rt1.c2, rt1.c3, -94254968, v0.c0))) IN ())) ISNULL)) GROUP BY v0.c0, rt1.c2;
SELECT ALL v0.c0, rt1.c2 FROM rt1, v0 GROUP BY v0.c0, rt1.c2;
SELECT vt0.c0, v0.c2, v0.c0 FROM vt0, v0 INDEXED BY i52 GROUP BY vt0.c0, v0.c2, v0.c0;
SELECT MIN(CAST(((v0.c0) NOT BETWEEN (v0.c1) AND (rt1.c1)) AS REAL)) FROM v0, rt1 ORDER BY ((((((rt1.c0)OR(v0.c1)))OR(v0.c2))) BETWEEN ((((rt1.c1)) NOT BETWEEN ((v0.c1)) AND ((rt1.c1)))) AND (CASE 'f]'  WHEN x'' THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN v0.c1 THEN rt1.c3 END)) DESC, TRIM(LIKELY(v0.c2), (v0.c0 IN ())) DESC  NULLS FIRST;
SELECT ALL v0.c0, rt1.c1 FROM vt0, rt1 NATURAL JOIN v0;
SELECT v0.c0, rt1.c1 FROM vt0, rt1 NATURAL JOIN v0 WHERE ('6AY!fl') UNION ALL SELECT ALL v0.c0, rt1.c1 FROM vt0, rt1 NATURAL JOIN v0 WHERE ((NOT ('6AY!fl'))) UNION ALL SELECT ALL v0.c0, rt1.c1 FROM vt0, rt1 NATURAL JOIN v0 WHERE ((('6AY!fl') ISNULL));
SELECT ALL v0.c0, rt1.c1 FROM vt0, rt1 NATURAL JOIN v0;
SELECT DISTINCT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1 WHERE (TYPEOF((NOT (x'')))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT (TYPEOF((NOT (x'')))))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE (((TYPEOF((NOT (x'')))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1;
SELECT ALL t0.c93 FROM v0, t0 GROUP BY t0.c93;
SELECT t0.c93 FROM v0, t0 WHERE (((TRIM(DISTINCT v0.c0, t0.c93)) NOT BETWEEN (((t0.c0)IS NOT(v0.c2))) AND (((t0.c0)IS NOT(t0.c0))))) GROUP BY t0.c93 UNION SELECT t0.c93 FROM v0, t0 WHERE ((NOT (((TRIM(DISTINCT v0.c0, t0.c93)) NOT BETWEEN (((t0.c0)IS NOT(v0.c2))) AND (((t0.c0)IS NOT(t0.c0))))))) GROUP BY t0.c93 UNION SELECT t0.c93 FROM v0, t0 WHERE (((((TRIM(DISTINCT v0.c0, t0.c93)) NOT BETWEEN (((t0.c0)IS NOT(v0.c2))) AND (((t0.c0)IS NOT(t0.c0))))) ISNULL)) GROUP BY t0.c93;
SELECT ALL t0.c93 FROM v0, t0 GROUP BY t0.c93;
SELECT t0.c0, t0.c93 FROM t0 GROUP BY t0.c0, t0.c93;
SELECT ALL t0.c0, t0.c93 FROM t0 GROUP BY t0.c0, t0.c93 HAVING GROUP_CONCAT(TOTAL(t0.c0)) UNION ALL SELECT t0.c0, t0.c93 FROM t0 GROUP BY t0.c0, t0.c93 HAVING (NOT (GROUP_CONCAT(TOTAL(t0.c0)))) UNION ALL SELECT t0.c0, t0.c93 FROM t0 GROUP BY t0.c0, t0.c93 HAVING ((GROUP_CONCAT(TOTAL(t0.c0))) ISNULL);
SELECT ALL TOTAL((((((t0.c0)>>(vt0.c0))))<((CAST(vt0.c0 AS TEXT))))) FROM vt0, t0 ORDER BY CASE WHEN ((t0.c93) BETWEEN (t0.c93) AND (vt0.c0)) THEN NULL END DESC  NULLS LAST;
SELECT ALL v0.c1, v0.c0, rt1.c3, rt1.c0, v0.c2, rt1.c1, rt1.c2 FROM v0, rt1;
SELECT ALL v0.c1, v0.c0, rt1.c3, rt1.c0, v0.c2, rt1.c1, rt1.c2 FROM v0, rt1 WHERE (CASE WHEN ((((v0.c2)OR(rt1.c0)))OR(rt1.c0)) THEN ((rt1.c0)||(rt1.c0)) END) UNION ALL SELECT v0.c1, v0.c0, rt1.c3, rt1.c0, v0.c2, rt1.c1, rt1.c2 FROM v0, rt1 WHERE ((NOT (CASE WHEN ((((v0.c2)OR(rt1.c0)))OR(rt1.c0)) THEN ((rt1.c0)||(rt1.c0)) END))) UNION ALL SELECT v0.c1, v0.c0, rt1.c3, rt1.c0, v0.c2, rt1.c1, rt1.c2 FROM v0, rt1 WHERE (((CASE WHEN ((((v0.c2)OR(rt1.c0)))OR(rt1.c0)) THEN ((rt1.c0)||(rt1.c0)) END) ISNULL));
SELECT ALL v0.c1, v0.c0, rt1.c3, rt1.c0, v0.c2, rt1.c1, rt1.c2 FROM v0, rt1;
SELECT DISTINCT * FROM vt0, v0, rt1, t0 INDEXED BY i52;
SELECT ALL rt1.c0 FROM rt1, vt0 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, vt0 WHERE (((rt1.c3)IS(((((rt1.c3)OR('[fh9')))OR(rt1.c3))))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1, vt0 WHERE ((NOT (((rt1.c3)IS(((((rt1.c3)OR('[fh9')))OR(rt1.c3))))))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1, vt0 WHERE (((((rt1.c3)IS(((((rt1.c3)OR('[fh9')))OR(rt1.c3))))) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, vt0 GROUP BY rt1.c0;
SELECT ALL v0.c0 FROM vt0, t0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 NOT INDEXED, t0, v0 GROUP BY v0.c0 HAVING 0.5321025126727373 UNION ALL SELECT ALL v0.c0 FROM vt0, t0, v0 GROUP BY v0.c0 HAVING (NOT (0.5321025126727373)) UNION ALL SELECT v0.c0 FROM vt0, t0 NOT INDEXED, v0 GROUP BY v0.c0 HAVING ((0.5321025126727373) ISNULL);
SELECT ALL v0.c0 FROM vt0, t0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 NOT INDEXED, t0, v0 GROUP BY v0.c0 HAVING 0.5321025126727373 UNION ALL SELECT ALL v0.c0 FROM vt0, t0, v0 GROUP BY v0.c0 HAVING (NOT (0.5321025126727373)) UNION ALL SELECT v0.c0 FROM vt0, t0 NOT INDEXED, v0 GROUP BY v0.c0 HAVING ((0.5321025126727373) ISNULL);
SELECT ALL v0.c0 FROM vt0, t0, v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(vt0.c0 COLLATE RTRIM)))OR(vt0.c0)))OR(ABS(0.5562715225656356))))OR(((vt0.c0) ISNULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(vt0.c0 COLLATE RTRIM)))OR(vt0.c0)))OR(ABS(0.5562715225656356))))OR(((vt0.c0) ISNULL)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(vt0.c0 COLLATE RTRIM)))OR(vt0.c0)))OR(ABS(0.5562715225656356))))OR(((vt0.c0) ISNULL)))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c3 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c3 FROM rt1 NOT INDEXED WHERE ((((rt1.c3 COLLATE NOCASE))>((((rt1.c2)<<(rt1.c0)))))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c3 FROM rt1 WHERE ((NOT ((((rt1.c3 COLLATE NOCASE))>((((rt1.c2)<<(rt1.c0)))))))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c3 FROM rt1 WHERE ((((((rt1.c3 COLLATE NOCASE))>((((rt1.c2)<<(rt1.c0)))))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c3 FROM rt1;
SELECT ALL t0.c0, v0.c2 FROM v0, t0, rt1 GROUP BY t0.c0, v0.c2;
SELECT ALL t0.c0, v0.c2 FROM v0, t0 NOT INDEXED, rt1 WHERE ((CAST(rt1.c1 AS REAL) IN ())) GROUP BY t0.c0, v0.c2 UNION SELECT t0.c0, v0.c2 FROM v0, t0, rt1 WHERE ((NOT ((CAST(rt1.c1 AS REAL) IN ())))) GROUP BY t0.c0, v0.c2 UNION SELECT t0.c0, v0.c2 FROM v0, t0, rt1 WHERE ((((CAST(rt1.c1 AS REAL) IN ())) ISNULL)) GROUP BY t0.c0, v0.c2;
SELECT ALL t0.c0, v0.c2 FROM v0, t0, rt1 GROUP BY t0.c0, v0.c2;
SELECT rt1.c1 FROM vt0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM vt0, rt1 GROUP BY rt1.c1 HAVING COUNT(AVG(MAX(COUNT(*))) COLLATE BINARY) UNION ALL SELECT rt1.c1 FROM vt0, rt1 GROUP BY rt1.c1 HAVING (NOT (COUNT(AVG(MAX(COUNT(*))) COLLATE BINARY))) UNION ALL SELECT ALL rt1.c1 FROM vt0, rt1 GROUP BY rt1.c1 HAVING ((COUNT(AVG(MAX(COUNT(*))) COLLATE BINARY)) ISNULL);
SELECT ALL * FROM v0, vt0, rt1;
SELECT * FROM v0, vt0, rt1 WHERE (CAST(((-1e500)|(rt1.c0)) AS BLOB)) UNION ALL SELECT ALL * FROM v0, vt0, rt1 NOT INDEXED WHERE ((NOT (CAST(((-1e500)|(rt1.c0)) AS BLOB)))) UNION ALL SELECT * FROM v0, vt0, rt1 WHERE (((CAST(((-1e500)|(rt1.c0)) AS BLOB)) ISNULL));
SELECT ALL * FROM v0, vt0, rt1;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ((((((((((((('1524772167' COLLATE NOCASE)AND(((vt0.c0) NOT NULL))))OR(((((v0.c2)AND(vt0.c0)))OR(v0.c1)))))AND(CASE WHEN v0.c2 THEN vt0.c0 WHEN v0.c2 THEN vt0.c0 WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)))AND(((v0.c2)|('')))))AND((v0.c1 IN ()))))OR(vt0.c0))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT ((((((((((((('1524772167' COLLATE NOCASE)AND(((vt0.c0) NOT NULL))))OR(((((v0.c2)AND(vt0.c0)))OR(v0.c1)))))AND(CASE WHEN v0.c2 THEN vt0.c0 WHEN v0.c2 THEN vt0.c0 WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)))AND(((v0.c2)|('')))))AND((v0.c1 IN ()))))OR(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((((((((((((((('1524772167' COLLATE NOCASE)AND(((vt0.c0) NOT NULL))))OR(((((v0.c2)AND(vt0.c0)))OR(v0.c1)))))AND(CASE WHEN v0.c2 THEN vt0.c0 WHEN v0.c2 THEN vt0.c0 WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)))AND(((v0.c2)|('')))))AND((v0.c1 IN ()))))OR(vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM vt0, v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM vt0, v0 WHERE ((((v0.c2)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((~ (vt0.c0)))))) GROUP BY v0.c2, v0.c1, v0.c0 UNION SELECT v0.c2, v0.c1, v0.c0 FROM vt0, v0 WHERE ((NOT ((((v0.c2)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((~ (vt0.c0)))))))) GROUP BY v0.c2, v0.c1, v0.c0 UNION SELECT ALL v0.c2, v0.c1, v0.c0 FROM vt0, v0 WHERE ((((((v0.c2)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((~ (vt0.c0)))))) ISNULL)) GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM vt0, v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT v0.c0, t0.c0, v0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, v0.c2;
SELECT v0.c0, t0.c0, v0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, v0.c2 HAVING CASE WHEN MIN(t0.c0) THEN MIN(SUM(t0.c93)) ELSE CAST(GROUP_CONCAT(GROUP_CONCAT(v0.c0)) AS TEXT) END UNION ALL SELECT v0.c0, t0.c0, v0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, v0.c2 HAVING (NOT (CASE WHEN MIN(t0.c0) THEN MIN(SUM(t0.c93)) ELSE CAST(GROUP_CONCAT(GROUP_CONCAT(v0.c0)) AS TEXT) END)) UNION ALL SELECT v0.c0, t0.c0, v0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, v0.c2 HAVING ((CASE WHEN MIN(t0.c0) THEN MIN(SUM(t0.c93)) ELSE CAST(GROUP_CONCAT(GROUP_CONCAT(v0.c0)) AS TEXT) END) ISNULL);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON CASE (+ (t0.c0))  WHEN ((vt0.c0)||(t0.c0)) THEN CAST(vt0.c0 AS NUMERIC) END;
SELECT ALL * FROM t0 CROSS JOIN vt0 ON CASE (+ (t0.c0))  WHEN ((vt0.c0)||(t0.c0)) THEN CAST(vt0.c0 AS NUMERIC) END WHERE (CASE WHEN (NOT (t0.c0)) THEN ((vt0.c0)<(t0.c93)) END) UNION ALL SELECT ALL * FROM t0 CROSS JOIN vt0 ON CASE (+ (t0.c0))  WHEN ((vt0.c0)||(t0.c0)) THEN CAST(vt0.c0 AS NUMERIC) END WHERE ((NOT (CASE WHEN (NOT (t0.c0)) THEN ((vt0.c0)<(t0.c93)) END))) UNION ALL SELECT ALL * FROM t0 CROSS JOIN vt0 ON CASE (+ (t0.c0))  WHEN ((vt0.c0)||(t0.c0)) THEN CAST(vt0.c0 AS NUMERIC) END WHERE (((CASE WHEN (NOT (t0.c0)) THEN ((vt0.c0)<(t0.c93)) END) ISNULL));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON CASE (+ (t0.c0))  WHEN ((vt0.c0)||(t0.c0)) THEN CAST(vt0.c0 AS NUMERIC) END;
SELECT DISTINCT t0.c0 FROM vt0, t0, v0 INNER JOIN rt1 ON (((- (t0.c93))) BETWEEN (CASE rt1.c1  WHEN '-61301503' THEN t0.c93 WHEN 0Xfffffffffaaf7258 THEN v0.c0 WHEN rt1.c2 THEN v0.c0 ELSE v0.c2 END) AND ((('-2058638712')<=(t0.c93))));
SELECT DISTINCT t0.c0 FROM vt0, t0, v0 INNER JOIN rt1 ON (((- (t0.c93))) BETWEEN (CASE rt1.c1  WHEN '-61301503' THEN t0.c93 WHEN 0Xfffffffffaaf7258 THEN v0.c0 WHEN rt1.c2 THEN v0.c0 ELSE v0.c2 END) AND ((('-2058638712')<=(t0.c93)))) WHERE (((((v0.c2)OR(v0.c1)))OR('.?LL')) COLLATE BINARY) UNION SELECT DISTINCT t0.c0 FROM vt0, t0, v0 INNER JOIN rt1 ON (((- (t0.c93))) BETWEEN (CASE rt1.c1  WHEN '-61301503' THEN t0.c93 WHEN 0xfffffffffaaf7258 THEN v0.c0 WHEN rt1.c2 THEN v0.c0 ELSE v0.c2 END) AND ((('-2058638712')<=(t0.c93)))) WHERE ((NOT (((((v0.c2)OR(v0.c1)))OR('.?LL')) COLLATE BINARY))) UNION SELECT DISTINCT t0.c0 FROM vt0, t0, v0 INNER JOIN rt1 ON (((- (t0.c93))) BETWEEN (CASE rt1.c1  WHEN '-61301503' THEN t0.c93 WHEN 0Xfffffffffaaf7258 THEN v0.c0 WHEN rt1.c2 THEN v0.c0 ELSE v0.c2 END) AND ((('-2058638712')<=(t0.c93)))) WHERE (((((((v0.c2)OR(v0.c1)))OR('.?LL')) COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c0 FROM vt0, t0, v0 INNER JOIN rt1 ON (((- (t0.c93))) BETWEEN (CASE rt1.c1  WHEN '-61301503' THEN t0.c93 WHEN 0Xfffffffffaaf7258 THEN v0.c0 WHEN rt1.c2 THEN v0.c0 ELSE v0.c2 END) AND ((('-2058638712')<=(t0.c93))));
SELECT vt0.c0, v0.c2, t0.c0, v0.c1 FROM vt0, t0 NOT INDEXED, v0 GROUP BY vt0.c0, v0.c2, t0.c0, v0.c1;
SELECT vt0.c0, v0.c2, t0.c0, v0.c1 FROM vt0, t0, v0 WHERE ((CASE WHEN vt0.c0 THEN t0.c93 ELSE t0.c93 END IN ())) GROUP BY vt0.c0, v0.c2, t0.c0, v0.c1 UNION SELECT vt0.c0, v0.c2, t0.c0, v0.c1 FROM vt0, t0, v0 WHERE ((NOT ((CASE WHEN vt0.c0 THEN t0.c93 ELSE t0.c93 END IN ())))) GROUP BY vt0.c0, v0.c2, t0.c0, v0.c1 UNION SELECT ALL vt0.c0, v0.c2, t0.c0, v0.c1 FROM vt0, t0, v0 WHERE ((((CASE WHEN vt0.c0 THEN t0.c93 ELSE t0.c93 END IN ())) ISNULL)) GROUP BY vt0.c0, v0.c2, t0.c0, v0.c1;
SELECT vt0.c0, v0.c2, t0.c0, v0.c1 FROM vt0, t0 NOT INDEXED, v0 GROUP BY vt0.c0, v0.c2, t0.c0, v0.c1;
SELECT v0.c1, rt1.c0, rt1.c3, v0.c0 FROM rt1, v0 GROUP BY v0.c1, rt1.c0, rt1.c3, v0.c0;
SELECT ALL v0.c1, rt1.c0, rt1.c3, v0.c0 FROM rt1, v0 GROUP BY v0.c1, rt1.c0, rt1.c3, v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c1, rt1.c0, rt1.c3, v0.c0 FROM rt1 NOT INDEXED, v0 GROUP BY v0.c1, rt1.c0, rt1.c3, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c1, rt1.c0, rt1.c3, v0.c0 FROM rt1, v0 GROUP BY v0.c1, rt1.c0, rt1.c3, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c1, rt1.c0, rt1.c3, v0.c0 FROM rt1, v0 GROUP BY v0.c1, rt1.c0, rt1.c3, v0.c0;
SELECT ALL v0.c1, rt1.c0, rt1.c3, v0.c0 FROM rt1, v0 GROUP BY v0.c1, rt1.c0, rt1.c3, v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c1, rt1.c0, rt1.c3, v0.c0 FROM rt1 NOT INDEXED, v0 GROUP BY v0.c1, rt1.c0, rt1.c3, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c1, rt1.c0, rt1.c3, v0.c0 FROM rt1, v0 GROUP BY v0.c1, rt1.c0, rt1.c3, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c1, rt1.c0, rt1.c3, v0.c0 FROM rt1, v0 GROUP BY v0.c1, rt1.c0, rt1.c3, v0.c0;
SELECT TOTAL(rt1.c3) FROM t0, v0, rt1, vt0;
SELECT * FROM rt1, vt0, v0;
SELECT ALL * FROM rt1, vt0, v0 WHERE (MAX(vt0.c0 COLLATE RTRIM, (rt1.c3 IN ()), CAST(vt0.c0 AS REAL), ((((((((rt1.c2)AND(rt1.c2)))AND(NULL)))OR(v0.c2)))OR(v0.c2)))) UNION ALL SELECT * FROM rt1, vt0, v0 WHERE ((NOT (MAX(vt0.c0 COLLATE RTRIM, (rt1.c3 IN ()), CAST(vt0.c0 AS REAL), ((((((((rt1.c2)AND(rt1.c2)))AND(NULL)))OR(v0.c2)))OR(v0.c2)))))) UNION ALL SELECT * FROM rt1, vt0, v0 WHERE (((MAX(vt0.c0 COLLATE RTRIM, (rt1.c3 IN ()), CAST(vt0.c0 AS REAL), ((((((((rt1.c2)AND(rt1.c2)))AND(NULL)))OR(v0.c2)))OR(v0.c2)))) ISNULL));
SELECT * FROM rt1, vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((0.6707518656862523)<<(vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((0.6707518656862523)<<(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((0.6707518656862523)<<(vt0.c0))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t0.c93, v0.c1, vt0.c0, t0.c0, v0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((((((CASE 0.3984108094622375  WHEN t0.c0 THEN v0.c0 ELSE vt0.c0 END)AND(v0.c2 COLLATE RTRIM)))AND((- (v0.c1)))))OR((~ (t0.c0)))))OR(CASE v0.c2  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c93 ELSE v0.c0 END)) FULL OUTER JOIN v0 ON json_type(v0.c0 COLLATE RTRIM) GROUP BY t0.c93, v0.c1, vt0.c0, t0.c0, v0.c0;
SELECT ALL t0.c0, rt1.c0, rt1.c1, vt0.c0, rt1.c2, rt1.c3 FROM rt1, t0 CROSS JOIN vt0 ON ((rt1.c3 COLLATE BINARY) NOTNULL) GROUP BY t0.c0, rt1.c0, rt1.c1, vt0.c0, rt1.c2, rt1.c3;
SELECT ALL t0.c0, rt1.c0, rt1.c1, vt0.c0, rt1.c2, rt1.c3 FROM rt1, t0 CROSS JOIN vt0 ON ((rt1.c3 COLLATE BINARY) NOTNULL) GROUP BY t0.c0, rt1.c0, rt1.c1, vt0.c0, rt1.c2, rt1.c3 HAVING (CASE WHEN t0.c0 THEN MAX(AVG(rt1.c3)) END IN ()) UNION ALL SELECT t0.c0, rt1.c0, rt1.c1, vt0.c0, rt1.c2, rt1.c3 FROM rt1, t0 CROSS JOIN vt0 ON ((rt1.c3 COLLATE BINARY) NOTNULL) GROUP BY t0.c0, rt1.c0, rt1.c1, vt0.c0, rt1.c2, rt1.c3 HAVING (NOT ((CASE WHEN t0.c0 THEN MAX(AVG(rt1.c3)) END IN ()))) UNION ALL SELECT t0.c0, rt1.c0, rt1.c1, vt0.c0, rt1.c2, rt1.c3 FROM rt1, t0 CROSS JOIN vt0 ON ((rt1.c3 COLLATE BINARY) NOTNULL) GROUP BY t0.c0, rt1.c0, rt1.c1, vt0.c0, rt1.c2, rt1.c3 HAVING (((CASE WHEN t0.c0 THEN MAX(AVG(rt1.c3)) END IN ())) ISNULL);
SELECT ALL t0.c0, rt1.c0, rt1.c1, vt0.c0, rt1.c2, rt1.c3 FROM rt1, t0 CROSS JOIN vt0 ON ((rt1.c3 COLLATE BINARY) NOTNULL) GROUP BY t0.c0, rt1.c0, rt1.c1, vt0.c0, rt1.c2, rt1.c3;
SELECT ALL t0.c0, rt1.c0, rt1.c1, vt0.c0, rt1.c2, rt1.c3 FROM rt1, t0 CROSS JOIN vt0 ON ((rt1.c3 COLLATE BINARY) NOTNULL) GROUP BY t0.c0, rt1.c0, rt1.c1, vt0.c0, rt1.c2, rt1.c3 HAVING (CASE WHEN t0.c0 THEN MAX(AVG(rt1.c3)) END IN ()) UNION ALL SELECT t0.c0, rt1.c0, rt1.c1, vt0.c0, rt1.c2, rt1.c3 FROM rt1, t0 CROSS JOIN vt0 ON ((rt1.c3 COLLATE BINARY) NOTNULL) GROUP BY t0.c0, rt1.c0, rt1.c1, vt0.c0, rt1.c2, rt1.c3 HAVING (NOT ((CASE WHEN t0.c0 THEN MAX(AVG(rt1.c3)) END IN ()))) UNION ALL SELECT t0.c0, rt1.c0, rt1.c1, vt0.c0, rt1.c2, rt1.c3 FROM rt1, t0 CROSS JOIN vt0 ON ((rt1.c3 COLLATE BINARY) NOTNULL) GROUP BY t0.c0, rt1.c0, rt1.c1, vt0.c0, rt1.c2, rt1.c3 HAVING (((CASE WHEN t0.c0 THEN MAX(AVG(rt1.c3)) END IN ())) ISNULL);
SELECT ALL t0.c0, rt1.c0, rt1.c1, vt0.c0, rt1.c2, rt1.c3 FROM rt1, t0 CROSS JOIN vt0 ON ((rt1.c3 COLLATE BINARY) NOTNULL) GROUP BY t0.c0, rt1.c0, rt1.c1, vt0.c0, rt1.c2, rt1.c3;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (NULL) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM v0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt1.c1, t0.c0, rt1.c3 FROM t0, rt1, v0, vt0;
SELECT DISTINCT rt1.c1, t0.c0, rt1.c3 FROM t0, rt1, v0, vt0 WHERE ((rt1.c1 IN ()) COLLATE NOCASE) UNION SELECT DISTINCT rt1.c1, t0.c0, rt1.c3 FROM t0, rt1, v0, vt0 WHERE ((NOT ((rt1.c1 IN ()) COLLATE NOCASE))) UNION SELECT DISTINCT rt1.c1, t0.c0, rt1.c3 FROM t0, rt1, v0, vt0 WHERE ((((rt1.c1 IN ()) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt1.c1, t0.c0, rt1.c3 FROM t0, rt1, v0, vt0;
SELECT rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM t0, rt1 WHERE ((((x'') NOT BETWEEN (rt1.c2) AND (rt1.c3)) IN ())) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM t0, rt1 WHERE ((NOT ((((x'') NOT BETWEEN (rt1.c2) AND (rt1.c3)) IN ())))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM t0, rt1 WHERE ((((((x'') NOT BETWEEN (rt1.c2) AND (rt1.c3)) IN ())) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c2, rt1.c1, rt1.c0, v0.c0 FROM v0, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, v0.c0;
SELECT rt1.c2, rt1.c1, rt1.c0, v0.c0 FROM v0, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, v0.c0 HAVING ((MIN(MIN(TOTAL(GROUP_CONCAT(AVG(rt1.c3))))))||(AVG(SUM(COUNT(GROUP_CONCAT(rt1.c3)))))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0, v0.c0 FROM v0, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, v0.c0 HAVING (NOT (((MIN(MIN(TOTAL(GROUP_CONCAT(AVG(rt1.c3))))))||(AVG(SUM(COUNT(GROUP_CONCAT(rt1.c3)))))))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0, v0.c0 FROM v0, rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, v0.c0 HAVING ((((MIN(MIN(TOTAL(GROUP_CONCAT(AVG(rt1.c3))))))||(AVG(SUM(COUNT(GROUP_CONCAT(rt1.c3))))))) ISNULL);
SELECT ALL t0.c93, v0.c1 FROM vt0 INDEXED BY i52, rt1, v0, t0;
SELECT DISTINCT * FROM vt0, rt1 FULL OUTER JOIN t0 ON ((CASE vt0.c0  WHEN t0.c93 THEN rt1.c0 ELSE t0.c93 END)>(((NULL) IS TRUE)));
SELECT DISTINCT * FROM vt0, rt1 FULL OUTER JOIN t0 ON ((CASE vt0.c0  WHEN t0.c93 THEN rt1.c0 ELSE t0.c93 END)>(((NULL) IS TRUE))) WHERE (((((((((t0.c0)OR((- (rt1.c0)))))OR(((rt1.c0) NOTNULL))))OR((('0.8275541577107792') ISNULL))))OR(((t0.c93)GLOB(rt1.c3))))) UNION SELECT DISTINCT * FROM vt0, rt1 FULL OUTER JOIN t0 ON ((CASE vt0.c0  WHEN t0.c93 THEN rt1.c0 ELSE t0.c93 END)>(((NULL) IS TRUE))) WHERE ((NOT (((((((((t0.c0)OR((- (rt1.c0)))))OR(((rt1.c0) NOTNULL))))OR((('0.8275541577107792') ISNULL))))OR(((t0.c93)GLOB(rt1.c3))))))) UNION SELECT DISTINCT * FROM vt0, rt1 FULL OUTER JOIN t0 ON ((CASE vt0.c0  WHEN t0.c93 THEN rt1.c0 ELSE t0.c93 END)>(((NULL) IS TRUE))) WHERE (((((((((((t0.c0)OR((- (rt1.c0)))))OR(((rt1.c0) NOTNULL))))OR((('0.8275541577107792') ISNULL))))OR(((t0.c93)GLOB(rt1.c3))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1 FULL OUTER JOIN t0 ON ((CASE vt0.c0  WHEN t0.c93 THEN rt1.c0 ELSE t0.c93 END)>(((NULL) IS TRUE)));
SELECT t0.c93 FROM t0 GROUP BY t0.c93;
SELECT t0.c93 FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c93)) AND ((t0.c0, t0.c93, t0.c0))) COLLATE NOCASE) GROUP BY t0.c93 UNION SELECT t0.c93 FROM t0 WHERE ((NOT ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c93)) AND ((t0.c0, t0.c93, t0.c0))) COLLATE NOCASE))) GROUP BY t0.c93 UNION SELECT ALL t0.c93 FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c93)) AND ((t0.c0, t0.c93, t0.c0))) COLLATE NOCASE) ISNULL)) GROUP BY t0.c93;
SELECT t0.c93 FROM t0 GROUP BY t0.c93;
SELECT v0.c2 FROM vt0, v0, t0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM vt0, v0, t0 GROUP BY v0.c2 HAVING ((0Xfffffffffaaf7258)IS((MAX(SUM(v0.c2)) IN ()))) UNION ALL SELECT v0.c2 FROM vt0, v0, t0 GROUP BY v0.c2 HAVING (NOT (((0xfffffffffaaf7258)IS((MAX(SUM(v0.c2)) IN ()))))) UNION ALL SELECT v0.c2 FROM vt0, v0, t0 GROUP BY v0.c2 HAVING ((((0xfffffffffaaf7258)IS((MAX(SUM(v0.c2)) IN ())))) ISNULL);
SELECT v0.c2 FROM vt0, v0, t0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM vt0, v0, t0 GROUP BY v0.c2 HAVING ((0Xfffffffffaaf7258)IS((MAX(SUM(v0.c2)) IN ()))) UNION ALL SELECT v0.c2 FROM vt0, v0, t0 GROUP BY v0.c2 HAVING (NOT (((0xfffffffffaaf7258)IS((MAX(SUM(v0.c2)) IN ()))))) UNION ALL SELECT v0.c2 FROM vt0, v0, t0 GROUP BY v0.c2 HAVING ((((0xfffffffffaaf7258)IS((MAX(SUM(v0.c2)) IN ())))) ISNULL);
SELECT v0.c2 FROM vt0, v0, t0 GROUP BY v0.c2;
SELECT ALL MAX(v0.c2) FROM v0, vt0, t0, rt1 ORDER BY (((((rt1.c3)>=(rt1.c1)), rt1.c2, ((rt1.c2)%(vt0.c0))))>((CAST(rt1.c2 AS NUMERIC), ((t0.c93) NOT BETWEEN (rt1.c2) AND (t0.c0)), t0.c93 COLLATE RTRIM))) DESC  NULLS FIRST;
SELECT * FROM t0 FULL OUTER JOIN vt0 ON (t0.c0 IN ()) COLLATE RTRIM;
SELECT * FROM t0 FULL OUTER JOIN vt0 ON (t0.c0 IN ()) COLLATE RTRIM WHERE (CASE (~ (vt0.c0))  WHEN TYPEOF(t0.c93) THEN (((vt0.c0)) NOT BETWEEN (('863625348')) AND ((t0.c0))) ELSE (t0.c93 IN ()) END) UNION ALL SELECT * FROM t0 FULL OUTER JOIN vt0 ON (t0.c0 IN ()) COLLATE RTRIM WHERE ((NOT (CASE (~ (vt0.c0))  WHEN TYPEOF(t0.c93) THEN (((vt0.c0)) NOT BETWEEN (('863625348')) AND ((t0.c0))) ELSE (t0.c93 IN ()) END))) UNION ALL SELECT * FROM t0 FULL OUTER JOIN vt0 ON (t0.c0 IN ()) COLLATE RTRIM WHERE (((CASE (~ (vt0.c0))  WHEN TYPEOF(t0.c93) THEN (((vt0.c0)) NOT BETWEEN (('863625348')) AND ((t0.c0))) ELSE (t0.c93 IN ()) END) ISNULL));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON (t0.c0 IN ()) COLLATE RTRIM;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c3, rt1.c0, t0.c0, t0.c93 FROM rt1 CROSS JOIN t0 ON t0.c93;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c3, rt1.c0, t0.c0, t0.c93 FROM rt1 CROSS JOIN t0 ON t0.c93 WHERE (((((((rt1.c2)+(t0.c0)))OR(((rt1.c1) NOTNULL))))OR((NOT (rt1.c0))))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c3, rt1.c0, t0.c0, t0.c93 FROM rt1 CROSS JOIN t0 ON t0.c93 WHERE ((NOT (((((((rt1.c2)+(t0.c0)))OR(((rt1.c1) NOTNULL))))OR((NOT (rt1.c0))))))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c3, rt1.c0, t0.c0, t0.c93 FROM rt1 CROSS JOIN t0 ON t0.c93 WHERE (((((((((rt1.c2)+(t0.c0)))OR(((rt1.c1) NOTNULL))))OR((NOT (rt1.c0))))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c3, rt1.c0, t0.c0, t0.c93 FROM rt1 CROSS JOIN t0 ON t0.c93;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((+ (((x'') NOT NULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((+ (((x'') NOT NULL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((+ (((x'') NOT NULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c3, rt1.c2, t0.c93, v0.c1, v0.c2, vt0.c0, rt1.c1, t0.c0 FROM rt1, t0 RIGHT OUTER JOIN v0 ON vt0.c0 CROSS JOIN vt0 ON CASE t0.c0  WHEN TRIM(t0.c0, vt0.c0) THEN (('872271535')GLOB(v0.c1)) ELSE CASE vt0.c0  WHEN v0.c1 THEN t0.c93 ELSE rt1.c1 END END GROUP BY rt1.c3, rt1.c2, t0.c93, v0.c1, v0.c2, vt0.c0, rt1.c1, t0.c0;
SELECT ALL t0.c93, v0.c1, t0.c0, rt1.c2, rt1.c3 FROM rt1 FULL OUTER JOIN t0 ON json_remove(((x'e0c4') ISNULL), rt1.c3) FULL OUTER JOIN v0 ON ((0X3379e084)<>(vt0.c0 COLLATE BINARY)) CROSS JOIN vt0 ON ((rt1.c3) NOT BETWEEN ((t0.c0 IN (t0.c93, t0.c0))) AND (((((rt1.c0)AND(v0.c0)))OR(t0.c93))));
SELECT DISTINCT rt1.c1, t0.c93, rt1.c0, rt1.c2, vt0.c0, rt1.c3 FROM rt1, t0, vt0;
SELECT DISTINCT rt1.c1, t0.c93, rt1.c0, rt1.c2, vt0.c0, rt1.c3 FROM rt1, t0, vt0 WHERE (IFNULL(DISTINCT ((t0.c93) NOT NULL), CASE WHEN rt1.c2 THEN t0.c93 WHEN t0.c93 THEN vt0.c0 WHEN rt1.c3 THEN t0.c0 ELSE rt1.c0 END)) UNION SELECT DISTINCT rt1.c1, t0.c93, rt1.c0, rt1.c2, vt0.c0, rt1.c3 FROM rt1, t0, vt0 WHERE ((NOT (IFNULL(DISTINCT ((t0.c93) NOT NULL), CASE WHEN rt1.c2 THEN t0.c93 WHEN t0.c93 THEN vt0.c0 WHEN rt1.c3 THEN t0.c0 ELSE rt1.c0 END)))) UNION SELECT DISTINCT rt1.c1, t0.c93, rt1.c0, rt1.c2, vt0.c0, rt1.c3 FROM rt1, t0, vt0 WHERE (((IFNULL(DISTINCT ((t0.c93) NOT NULL), CASE WHEN rt1.c2 THEN t0.c93 WHEN t0.c93 THEN vt0.c0 WHEN rt1.c3 THEN t0.c0 ELSE rt1.c0 END)) ISNULL));
SELECT DISTINCT rt1.c1, t0.c93, rt1.c0, rt1.c2, vt0.c0, rt1.c3 FROM rt1, t0, vt0;
SELECT ALL v0.c0, rt1.c1, vt0.c0, rt1.c0, rt1.c2, v0.c1, rt1.c3, v0.c2 FROM v0, vt0, rt1 GROUP BY v0.c0, rt1.c1, vt0.c0, rt1.c0, rt1.c2, v0.c1, rt1.c3, v0.c2;
SELECT ALL v0.c0, rt1.c1, vt0.c0, rt1.c0, rt1.c2, v0.c1, rt1.c3, v0.c2 FROM v0, vt0, rt1 WHERE ((((rt1.c3, rt1.c3, rt1.c1)) NOT BETWEEN ((rt1.c0, (NOT (v0.c0)), ((NULL) BETWEEN (v0.c2) AND (v0.c2)))) AND ((((vt0.c0) NOT BETWEEN (v0.c0) AND (0Xfffffffff81078cc)), NULLIF(v0.c1, x'29c3'), (((0.7825453390546914, v0.c1, rt1.c1))!=((vt0.c0, rt1.c1, rt1.c0))))))) GROUP BY v0.c0, rt1.c1, vt0.c0, rt1.c0, rt1.c2, v0.c1, rt1.c3, v0.c2 UNION SELECT ALL v0.c0, rt1.c1, vt0.c0, rt1.c0, rt1.c2, v0.c1, rt1.c3, v0.c2 FROM v0, vt0, rt1 WHERE ((NOT ((((rt1.c3, rt1.c3, rt1.c1)) NOT BETWEEN ((rt1.c0, (NOT (v0.c0)), ((NULL) BETWEEN (v0.c2) AND (v0.c2)))) AND ((((vt0.c0) NOT BETWEEN (v0.c0) AND (0xfffffffff81078cc)), NULLIF(v0.c1, x'29c3'), (((0.7825453390546914, v0.c1, rt1.c1))!=((vt0.c0, rt1.c1, rt1.c0))))))))) GROUP BY v0.c0, rt1.c1, vt0.c0, rt1.c0, rt1.c2, v0.c1, rt1.c3, v0.c2 UNION SELECT ALL v0.c0, rt1.c1, vt0.c0, rt1.c0, rt1.c2, v0.c1, rt1.c3, v0.c2 FROM v0, vt0, rt1 WHERE ((((((rt1.c3, rt1.c3, rt1.c1)) NOT BETWEEN ((rt1.c0, (NOT (v0.c0)), ((NULL) BETWEEN (v0.c2) AND (v0.c2)))) AND ((((vt0.c0) NOT BETWEEN (v0.c0) AND (0xfffffffff81078cc)), NULLIF(v0.c1, x'29c3'), (((0.7825453390546914, v0.c1, rt1.c1))!=((vt0.c0, rt1.c1, rt1.c0))))))) ISNULL)) GROUP BY v0.c0, rt1.c1, vt0.c0, rt1.c0, rt1.c2, v0.c1, rt1.c3, v0.c2;
SELECT ALL v0.c0, rt1.c1, vt0.c0, rt1.c0, rt1.c2, v0.c1, rt1.c3, v0.c2 FROM v0, vt0, rt1 GROUP BY v0.c0, rt1.c1, vt0.c0, rt1.c0, rt1.c2, v0.c1, rt1.c3, v0.c2;
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING CASE WHEN COUNT(MIN(COUNT(*))) THEN COUNT(*) ELSE ((((rt1.c1)AND(SUM(MIN(COUNT(rt1.c0))))))AND(rt1.c0)) END UNION ALL SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (NOT (CASE WHEN COUNT(MIN(COUNT(*))) THEN COUNT(*) ELSE ((((rt1.c1)AND(SUM(MIN(COUNT(rt1.c0))))))AND(rt1.c0)) END)) UNION ALL SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING ((CASE WHEN COUNT(MIN(COUNT(*))) THEN COUNT(*) ELSE ((((rt1.c1)AND(SUM(MIN(COUNT(rt1.c0))))))AND(rt1.c0)) END) ISNULL);
SELECT ALL * FROM rt1, t0, v0, vt0;
SELECT ALL * FROM rt1, t0, v0, vt0 WHERE ((((NULL)) BETWEEN (((((('')OR(v0.c1)))AND(rt1.c3)))) AND ((ROUND(rt1.c2, t0.c0))))) UNION ALL SELECT ALL * FROM rt1, t0, v0, vt0 WHERE ((NOT ((((NULL)) BETWEEN (((((('')OR(v0.c1)))AND(rt1.c3)))) AND ((ROUND(rt1.c2, t0.c0))))))) UNION ALL SELECT * FROM rt1, t0, v0, vt0 WHERE ((((((NULL)) BETWEEN (((((('')OR(v0.c1)))AND(rt1.c3)))) AND ((ROUND(rt1.c2, t0.c0))))) ISNULL));
SELECT ALL * FROM rt1, t0, v0, vt0;
SELECT DISTINCT * FROM t0, v0, rt1, vt0;
SELECT DISTINCT * FROM t0, v0, rt1, vt0 WHERE ((((~ (rt1.c0))) BETWEEN (v0.c1) AND (((((rt1.c2)OR(vt0.c0)))OR(t0.c93))))) UNION SELECT DISTINCT * FROM t0, v0, rt1, vt0 WHERE ((NOT ((((~ (rt1.c0))) BETWEEN (v0.c1) AND (((((rt1.c2)OR(vt0.c0)))OR(t0.c93))))))) UNION SELECT DISTINCT * FROM t0, v0, rt1, vt0 WHERE ((((((~ (rt1.c0))) BETWEEN (v0.c1) AND (((((rt1.c2)OR(vt0.c0)))OR(t0.c93))))) ISNULL));
SELECT DISTINCT * FROM t0, v0, rt1, vt0;
SELECT ALL t0.c0, rt1.c3, t0.c93 FROM t0, rt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c3) NOT NULL) AS NUMERIC) GROUP BY t0.c0, rt1.c3, t0.c93;
SELECT t0.c0, rt1.c3, t0.c93 FROM t0, rt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c3) NOT NULL) AS NUMERIC) WHERE (((((((vt0.c0) IS FALSE))OR('ꪈbj')))AND(((((rt1.c1)OR(0.968038625274837)))OR(rt1.c0))))) GROUP BY t0.c0, rt1.c3, t0.c93 UNION SELECT t0.c0, rt1.c3, t0.c93 FROM t0, rt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c3) NOT NULL) AS NUMERIC) WHERE ((NOT (((((((vt0.c0) IS FALSE))OR('ꪈbj')))AND(((((rt1.c1)OR(0.968038625274837)))OR(rt1.c0))))))) GROUP BY t0.c0, rt1.c3, t0.c93 UNION SELECT ALL t0.c0, rt1.c3, t0.c93 FROM t0, rt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c3) NOT NULL) AS NUMERIC) WHERE (((((((((vt0.c0) IS FALSE))OR('ꪈbj')))AND(((((rt1.c1)OR(0.968038625274837)))OR(rt1.c0))))) ISNULL)) GROUP BY t0.c0, rt1.c3, t0.c93;
SELECT ALL t0.c0, rt1.c3, t0.c93 FROM t0, rt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c3) NOT NULL) AS NUMERIC) GROUP BY t0.c0, rt1.c3, t0.c93;
SELECT rt1.c1, t0.c93, t0.c0 FROM v0, t0, vt0, rt1 GROUP BY rt1.c1, t0.c93, t0.c0;
SELECT rt1.c1, t0.c93, t0.c0 FROM v0, t0, vt0, rt1 GROUP BY rt1.c1, t0.c93, t0.c0 HAVING ((rt1.c2) NOTNULL) UNION ALL SELECT ALL rt1.c1, t0.c93, t0.c0 FROM v0, t0, vt0, rt1 GROUP BY rt1.c1, t0.c93, t0.c0 HAVING (NOT (((rt1.c2) NOTNULL))) UNION ALL SELECT ALL rt1.c1, t0.c93, t0.c0 FROM v0, t0, vt0, rt1 GROUP BY rt1.c1, t0.c93, t0.c0 HAVING ((((rt1.c2) NOTNULL)) ISNULL);
SELECT rt1.c1, t0.c93, t0.c0 FROM v0, t0, vt0, rt1 GROUP BY rt1.c1, t0.c93, t0.c0;
SELECT rt1.c1, t0.c93, t0.c0 FROM v0, t0, vt0, rt1 GROUP BY rt1.c1, t0.c93, t0.c0 HAVING ((rt1.c2) NOTNULL) UNION ALL SELECT ALL rt1.c1, t0.c93, t0.c0 FROM v0, t0, vt0, rt1 GROUP BY rt1.c1, t0.c93, t0.c0 HAVING (NOT (((rt1.c2) NOTNULL))) UNION ALL SELECT ALL rt1.c1, t0.c93, t0.c0 FROM v0, t0, vt0, rt1 GROUP BY rt1.c1, t0.c93, t0.c0 HAVING ((((rt1.c2) NOTNULL)) ISNULL);
SELECT rt1.c1, t0.c93, t0.c0 FROM v0, t0, vt0, rt1 GROUP BY rt1.c1, t0.c93, t0.c0;
SELECT ALL vt0.c0 FROM rt1, vt0 NOT INDEXED;
SELECT ALL vt0.c0 FROM rt1, vt0 WHERE (NULL) UNION ALL SELECT ALL vt0.c0 FROM rt1, vt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL vt0.c0 FROM rt1, vt0 WHERE (((NULL) ISNULL));
SELECT ALL vt0.c0 FROM rt1, vt0 NOT INDEXED;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (TRIM((v0.c1 IN (v0.c1)), CAST(v0.c0 AS INTEGER))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (TRIM((v0.c1 IN (v0.c1)), CAST(v0.c0 AS INTEGER))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((TRIM((v0.c1 IN (v0.c1)), CAST(v0.c0 AS INTEGER))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL v0.c1, rt1.c0, rt1.c3, v0.c0 FROM rt1 FULL OUTER JOIN v0 ON ((x'0309')||(0.7974671521891269)) GROUP BY v0.c1, rt1.c0, rt1.c3, v0.c0;
SELECT v0.c1, rt1.c0, rt1.c3, v0.c0 FROM rt1 FULL OUTER JOIN v0 ON ((x'0309')||(0.7974671521891269)) WHERE ((((((((((~ (v0.c2)))OR((v0.c1 IN (rt1.c3)))))AND(((rt1.c3) NOTNULL))))OR((0X5262aac0 IN ()))))OR((v0.c1 IN ())))) GROUP BY v0.c1, rt1.c0, rt1.c3, v0.c0 UNION SELECT v0.c1, rt1.c0, rt1.c3, v0.c0 FROM rt1 FULL OUTER JOIN v0 ON ((x'0309')||(0.7974671521891269)) WHERE ((NOT ((((((((((~ (v0.c2)))OR((v0.c1 IN (rt1.c3)))))AND(((rt1.c3) NOTNULL))))OR((0x5262aac0 IN ()))))OR((v0.c1 IN ())))))) GROUP BY v0.c1, rt1.c0, rt1.c3, v0.c0 UNION SELECT v0.c1, rt1.c0, rt1.c3, v0.c0 FROM rt1 FULL OUTER JOIN v0 ON ((x'0309')||(0.7974671521891269)) WHERE ((((((((((((~ (v0.c2)))OR((v0.c1 IN (rt1.c3)))))AND(((rt1.c3) NOTNULL))))OR((0x5262aac0 IN ()))))OR((v0.c1 IN ())))) ISNULL)) GROUP BY v0.c1, rt1.c0, rt1.c3, v0.c0;
SELECT ALL v0.c1, rt1.c0, rt1.c3, v0.c0 FROM rt1 FULL OUTER JOIN v0 ON ((x'0309')||(0.7974671521891269)) GROUP BY v0.c1, rt1.c0, rt1.c3, v0.c0;
SELECT t0.c93 FROM t0 RIGHT OUTER JOIN vt0 ON CASE ((t0.c0)%(t0.c0))  WHEN ((((((((((((t0.c0)OR(vt0.c0)))OR(t0.c93)))AND(t0.c93)))AND(vt0.c0)))AND(t0.c93)))OR(t0.c93)) THEN ((vt0.c0) IS FALSE) WHEN ((((x'')OR(t0.c0)))AND(0X76f0bec6)) THEN CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN t0.c93 WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END WHEN t0.c0 THEN (vt0.c0 IN ()) ELSE ((t0.c0) BETWEEN (t0.c93) AND (t0.c93)) END GROUP BY t0.c93;
SELECT ALL t0.c93 FROM t0 RIGHT OUTER JOIN vt0 ON CASE ((t0.c0)%(t0.c0))  WHEN ((((((((((((t0.c0)OR(vt0.c0)))OR(t0.c93)))AND(t0.c93)))AND(vt0.c0)))AND(t0.c93)))OR(t0.c93)) THEN ((vt0.c0) IS FALSE) WHEN ((((x'')OR(t0.c0)))AND(0X76f0bec6)) THEN CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN t0.c93 WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END WHEN t0.c0 THEN (vt0.c0 IN ()) ELSE ((t0.c0) BETWEEN (t0.c93) AND (t0.c93)) END GROUP BY t0.c93 HAVING vt0.c0 UNION ALL SELECT ALL t0.c93 FROM t0 RIGHT OUTER JOIN vt0 ON CASE ((t0.c0)%(t0.c0))  WHEN ((((((((((((t0.c0)OR(vt0.c0)))OR(t0.c93)))AND(t0.c93)))AND(vt0.c0)))AND(t0.c93)))OR(t0.c93)) THEN ((vt0.c0) IS FALSE) WHEN ((((x'')OR(t0.c0)))AND(0x76f0bec6)) THEN CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN t0.c93 WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END WHEN t0.c0 THEN (vt0.c0 IN ()) ELSE ((t0.c0) BETWEEN (t0.c93) AND (t0.c93)) END GROUP BY t0.c93 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL t0.c93 FROM t0 RIGHT OUTER JOIN vt0 ON CASE ((t0.c0)%(t0.c0))  WHEN ((((((((((((t0.c0)OR(vt0.c0)))OR(t0.c93)))AND(t0.c93)))AND(vt0.c0)))AND(t0.c93)))OR(t0.c93)) THEN ((vt0.c0) IS FALSE) WHEN ((((x'')OR(t0.c0)))AND(0X76f0bec6)) THEN CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN t0.c93 WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END WHEN t0.c0 THEN (vt0.c0 IN ()) ELSE ((t0.c0) BETWEEN (t0.c93) AND (t0.c93)) END GROUP BY t0.c93 HAVING ((vt0.c0) ISNULL);
SELECT t0.c93 FROM t0 RIGHT OUTER JOIN vt0 ON CASE ((t0.c0)%(t0.c0))  WHEN ((((((((((((t0.c0)OR(vt0.c0)))OR(t0.c93)))AND(t0.c93)))AND(vt0.c0)))AND(t0.c93)))OR(t0.c93)) THEN ((vt0.c0) IS FALSE) WHEN ((((x'')OR(t0.c0)))AND(0X76f0bec6)) THEN CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN t0.c93 WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END WHEN t0.c0 THEN (vt0.c0 IN ()) ELSE ((t0.c0) BETWEEN (t0.c93) AND (t0.c93)) END GROUP BY t0.c93;
SELECT ALL t0.c93 FROM t0 RIGHT OUTER JOIN vt0 ON CASE ((t0.c0)%(t0.c0))  WHEN ((((((((((((t0.c0)OR(vt0.c0)))OR(t0.c93)))AND(t0.c93)))AND(vt0.c0)))AND(t0.c93)))OR(t0.c93)) THEN ((vt0.c0) IS FALSE) WHEN ((((x'')OR(t0.c0)))AND(0X76f0bec6)) THEN CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN t0.c93 WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END WHEN t0.c0 THEN (vt0.c0 IN ()) ELSE ((t0.c0) BETWEEN (t0.c93) AND (t0.c93)) END GROUP BY t0.c93 HAVING vt0.c0 UNION ALL SELECT ALL t0.c93 FROM t0 RIGHT OUTER JOIN vt0 ON CASE ((t0.c0)%(t0.c0))  WHEN ((((((((((((t0.c0)OR(vt0.c0)))OR(t0.c93)))AND(t0.c93)))AND(vt0.c0)))AND(t0.c93)))OR(t0.c93)) THEN ((vt0.c0) IS FALSE) WHEN ((((x'')OR(t0.c0)))AND(0x76f0bec6)) THEN CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN t0.c93 WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END WHEN t0.c0 THEN (vt0.c0 IN ()) ELSE ((t0.c0) BETWEEN (t0.c93) AND (t0.c93)) END GROUP BY t0.c93 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL t0.c93 FROM t0 RIGHT OUTER JOIN vt0 ON CASE ((t0.c0)%(t0.c0))  WHEN ((((((((((((t0.c0)OR(vt0.c0)))OR(t0.c93)))AND(t0.c93)))AND(vt0.c0)))AND(t0.c93)))OR(t0.c93)) THEN ((vt0.c0) IS FALSE) WHEN ((((x'')OR(t0.c0)))AND(0X76f0bec6)) THEN CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN t0.c93 WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END WHEN t0.c0 THEN (vt0.c0 IN ()) ELSE ((t0.c0) BETWEEN (t0.c93) AND (t0.c93)) END GROUP BY t0.c93 HAVING ((vt0.c0) ISNULL);
SELECT t0.c93 FROM t0 RIGHT OUTER JOIN vt0 ON CASE ((t0.c0)%(t0.c0))  WHEN ((((((((((((t0.c0)OR(vt0.c0)))OR(t0.c93)))AND(t0.c93)))AND(vt0.c0)))AND(t0.c93)))OR(t0.c93)) THEN ((vt0.c0) IS FALSE) WHEN ((((x'')OR(t0.c0)))AND(0X76f0bec6)) THEN CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN t0.c93 WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END WHEN t0.c0 THEN (vt0.c0 IN ()) ELSE ((t0.c0) BETWEEN (t0.c93) AND (t0.c93)) END GROUP BY t0.c93;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN (NOT (vt0.c0)) THEN LIKELIHOOD(vt0.c0, 0.6129225683478026) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE CAST(vt0.c0 AS TEXT)  WHEN (NOT (vt0.c0)) THEN LIKELIHOOD(vt0.c0, 0.6129225683478026) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE CAST(vt0.c0 AS TEXT)  WHEN (NOT (vt0.c0)) THEN LIKELIHOOD(vt0.c0, 0.6129225683478026) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((- ((~ (0.7187283456747223))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((- ((~ (0.7187283456747223))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((- ((~ (0.7187283456747223))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c0, rt1.c2 FROM rt1, vt0, t0 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1, vt0, t0 GROUP BY rt1.c0, rt1.c2 HAVING COUNT(AVG(vt0.c0)) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1, vt0, t0 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (COUNT(AVG(vt0.c0)))) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM rt1, vt0, t0 GROUP BY rt1.c0, rt1.c2 HAVING ((COUNT(AVG(vt0.c0))) ISNULL);
SELECT MAX(CAST(((v0.c1)GLOB(v0.c1)) AS BLOB)) FROM v0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c2 END)GLOB(CASE WHEN vt0.c0 THEN v0.c2 END)) DESC, (((v0.c0, v0.c2, v0.c0)) BETWEEN (((NOT (v0.c0)), ((1942233913) NOT BETWEEN (v0.c1) AND (vt0.c0)), (((vt0.c0))<((v0.c2))))) AND (((((v0.c2))>=((v0.c0))), vt0.c0 COLLATE BINARY, (((v0.c0))>=((v0.c0))))));
SELECT * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (0.2752214079196835) UNION ALL SELECT ALL * FROM vt0, t0 NOT INDEXED WHERE ((NOT (0.2752214079196835))) UNION ALL SELECT * FROM vt0, t0 WHERE (((0.2752214079196835) ISNULL));
SELECT * FROM vt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((t0.c93)<=(t0.c93)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c93)<=(t0.c93)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t0 WHERE (((((t0.c93)<=(t0.c93)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0, t0.c93 FROM t0 RIGHT OUTER JOIN v0 ON CASE CASE t0.c0  WHEN t0.c93 THEN t0.c93 WHEN v0.c1 THEN v0.c2 WHEN t0.c0 THEN v0.c0 ELSE t0.c93 END  WHEN LAST_INSERT_ROWID() THEN rtreenode(t0.c93, v0.c1) WHEN CAST(t0.c93 AS BLOB) THEN (((t0.c0))!=((v0.c2))) WHEN CAST(v0.c1 AS REAL) THEN (((-89165224))>=((v0.c1))) END GROUP BY t0.c0, t0.c93;
SELECT t0.c0, t0.c93 FROM t0 RIGHT OUTER JOIN v0 ON CASE CASE t0.c0  WHEN t0.c93 THEN t0.c93 WHEN v0.c1 THEN v0.c2 WHEN t0.c0 THEN v0.c0 ELSE t0.c93 END  WHEN LAST_INSERT_ROWID() THEN rtreenode(t0.c93, v0.c1) WHEN CAST(t0.c93 AS BLOB) THEN (((t0.c0))!=((v0.c2))) WHEN CAST(v0.c1 AS REAL) THEN (((-89165224))>=((v0.c1))) END WHERE ((((t0.c93)IS(v0.c0)) IN ())) GROUP BY t0.c0, t0.c93 UNION SELECT ALL t0.c0, t0.c93 FROM t0 RIGHT OUTER JOIN v0 ON CASE CASE t0.c0  WHEN t0.c93 THEN t0.c93 WHEN v0.c1 THEN v0.c2 WHEN t0.c0 THEN v0.c0 ELSE t0.c93 END  WHEN LAST_INSERT_ROWID() THEN rtreenode(t0.c93, v0.c1) WHEN CAST(t0.c93 AS BLOB) THEN (((t0.c0))<>((v0.c2))) WHEN CAST(v0.c1 AS REAL) THEN (((-89165224))>=((v0.c1))) END WHERE ((NOT ((((t0.c93)IS(v0.c0)) IN ())))) GROUP BY t0.c0, t0.c93 UNION SELECT ALL t0.c0, t0.c93 FROM t0 RIGHT OUTER JOIN v0 ON CASE CASE t0.c0  WHEN t0.c93 THEN t0.c93 WHEN v0.c1 THEN v0.c2 WHEN t0.c0 THEN v0.c0 ELSE t0.c93 END  WHEN LAST_INSERT_ROWID() THEN rtreenode(t0.c93, v0.c1) WHEN CAST(t0.c93 AS BLOB) THEN (((t0.c0))!=((v0.c2))) WHEN CAST(v0.c1 AS REAL) THEN (((-89165224))>=((v0.c1))) END WHERE ((((((t0.c93)IS(v0.c0)) IN ())) ISNULL)) GROUP BY t0.c0, t0.c93;
SELECT ALL t0.c0, t0.c93 FROM t0 RIGHT OUTER JOIN v0 ON CASE CASE t0.c0  WHEN t0.c93 THEN t0.c93 WHEN v0.c1 THEN v0.c2 WHEN t0.c0 THEN v0.c0 ELSE t0.c93 END  WHEN LAST_INSERT_ROWID() THEN rtreenode(t0.c93, v0.c1) WHEN CAST(t0.c93 AS BLOB) THEN (((t0.c0))!=((v0.c2))) WHEN CAST(v0.c1 AS REAL) THEN (((-89165224))>=((v0.c1))) END GROUP BY t0.c0, t0.c93;
SELECT rt1.c1, v0.c2, v0.c0, rt1.c2, v0.c1 FROM v0, rt1 GROUP BY rt1.c1, v0.c2, v0.c0, rt1.c2, v0.c1;
SELECT ALL rt1.c1, v0.c2, v0.c0, rt1.c2, v0.c1 FROM v0, rt1 GROUP BY rt1.c1, v0.c2, v0.c0, rt1.c2, v0.c1 HAVING ((((COUNT(*))OR(rt1.c2)))AND(((((rt1.c0)AND(v0.c1)))OR(rt1.c1)))) UNION ALL SELECT ALL rt1.c1, v0.c2, v0.c0, rt1.c2, v0.c1 FROM v0, rt1 GROUP BY rt1.c1, v0.c2, v0.c0, rt1.c2, v0.c1 HAVING (NOT (((((COUNT(*))OR(rt1.c2)))AND(((((rt1.c0)AND(v0.c1)))OR(rt1.c1)))))) UNION ALL SELECT ALL rt1.c1, v0.c2, v0.c0, rt1.c2, v0.c1 FROM v0, rt1 GROUP BY rt1.c1, v0.c2, v0.c0, rt1.c2, v0.c1 HAVING ((((((COUNT(*))OR(rt1.c2)))AND(((((rt1.c0)AND(v0.c1)))OR(rt1.c1))))) ISNULL);
SELECT rt1.c1, v0.c2, v0.c0, rt1.c2, v0.c1 FROM v0, rt1 GROUP BY rt1.c1, v0.c2, v0.c0, rt1.c2, v0.c1;
SELECT ALL rt1.c1, v0.c2, v0.c0, rt1.c2, v0.c1 FROM v0, rt1 GROUP BY rt1.c1, v0.c2, v0.c0, rt1.c2, v0.c1 HAVING ((((COUNT(*))OR(rt1.c2)))AND(((((rt1.c0)AND(v0.c1)))OR(rt1.c1)))) UNION ALL SELECT ALL rt1.c1, v0.c2, v0.c0, rt1.c2, v0.c1 FROM v0, rt1 GROUP BY rt1.c1, v0.c2, v0.c0, rt1.c2, v0.c1 HAVING (NOT (((((COUNT(*))OR(rt1.c2)))AND(((((rt1.c0)AND(v0.c1)))OR(rt1.c1)))))) UNION ALL SELECT ALL rt1.c1, v0.c2, v0.c0, rt1.c2, v0.c1 FROM v0, rt1 GROUP BY rt1.c1, v0.c2, v0.c0, rt1.c2, v0.c1 HAVING ((((((COUNT(*))OR(rt1.c2)))AND(((((rt1.c0)AND(v0.c1)))OR(rt1.c1))))) ISNULL);
SELECT rt1.c1, v0.c2, v0.c0, rt1.c2, v0.c1 FROM v0, rt1 GROUP BY rt1.c1, v0.c2, v0.c0, rt1.c2, v0.c1;
SELECT v0.c2, rt1.c3, rt1.c0, v0.c0, v0.c1, vt0.c0 FROM rt1, v0 FULL OUTER JOIN vt0 ON ((((x'')&(vt0.c0)))&(((rt1.c3)*(v0.c2))));
SELECT v0.c2, rt1.c3, rt1.c0, v0.c0, v0.c1, vt0.c0 FROM rt1, v0 FULL OUTER JOIN vt0 ON ((((x'')&(vt0.c0)))&(((rt1.c3)*(v0.c2)))) WHERE (((((((v0.c0)OR(rt1.c2)))AND(v0.c2)))|(rt1.c1))) UNION ALL SELECT v0.c2, rt1.c3, rt1.c0, v0.c0, v0.c1, vt0.c0 FROM rt1, v0 FULL OUTER JOIN vt0 ON ((((x'')&(vt0.c0)))&(((rt1.c3)*(v0.c2)))) WHERE ((NOT (((((((v0.c0)OR(rt1.c2)))AND(v0.c2)))|(rt1.c1))))) UNION ALL SELECT ALL v0.c2, rt1.c3, rt1.c0, v0.c0, v0.c1, vt0.c0 FROM rt1, v0 FULL OUTER JOIN vt0 ON ((((x'')&(vt0.c0)))&(((rt1.c3)*(v0.c2)))) WHERE (((((((((v0.c0)OR(rt1.c2)))AND(v0.c2)))|(rt1.c1))) ISNULL));
SELECT v0.c2, rt1.c3, rt1.c0, v0.c0, v0.c1, vt0.c0 FROM rt1, v0 FULL OUTER JOIN vt0 ON ((((x'')&(vt0.c0)))&(((rt1.c3)*(v0.c2))));
SELECT DISTINCT rt1.c1, rt1.c3, rt1.c0, vt0.c0, rt1.c2 FROM rt1, vt0;
SELECT DISTINCT rt1.c1, rt1.c3, rt1.c0, vt0.c0, rt1.c2 FROM rt1, vt0 WHERE (((+ (rt1.c3)) IN ())) UNION SELECT DISTINCT rt1.c1, rt1.c3, rt1.c0, vt0.c0, rt1.c2 FROM rt1, vt0 WHERE ((NOT (((+ (rt1.c3)) IN ())))) UNION SELECT DISTINCT rt1.c1, rt1.c3, rt1.c0, vt0.c0, rt1.c2 FROM rt1, vt0 WHERE (((((+ (rt1.c3)) IN ())) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c3, rt1.c0, vt0.c0, rt1.c2 FROM rt1, vt0;
SELECT rt1.c1, v0.c1, rt1.c2, rt1.c3, v0.c2 FROM rt1, v0 GROUP BY rt1.c1, v0.c1, rt1.c2, rt1.c3, v0.c2;
SELECT rt1.c1, v0.c1, rt1.c2, rt1.c3, v0.c2 FROM rt1, v0 WHERE (((CASE WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END)GLOB(((0.6324237979660129) IS FALSE)))) GROUP BY rt1.c1, v0.c1, rt1.c2, rt1.c3, v0.c2 UNION SELECT ALL rt1.c1, v0.c1, rt1.c2, rt1.c3, v0.c2 FROM rt1, v0 WHERE ((NOT (((CASE WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END)GLOB(((0.6324237979660129) IS FALSE)))))) GROUP BY rt1.c1, v0.c1, rt1.c2, rt1.c3, v0.c2 UNION SELECT ALL rt1.c1, v0.c1, rt1.c2, rt1.c3, v0.c2 FROM rt1, v0 WHERE (((((CASE WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END)GLOB(((0.6324237979660129) IS FALSE)))) ISNULL)) GROUP BY rt1.c1, v0.c1, rt1.c2, rt1.c3, v0.c2;
SELECT rt1.c1, v0.c1, rt1.c2, rt1.c3, v0.c2 FROM rt1, v0 GROUP BY rt1.c1, v0.c1, rt1.c2, rt1.c3, v0.c2;
SELECT ALL v0.c1, rt1.c3, v0.c2 FROM t0, v0 CROSS JOIN rt1 ON ((CHAR(v0.c0))GLOB(((v0.c0)<(rt1.c1)))) GROUP BY v0.c1, rt1.c3, v0.c2;
SELECT v0.c1, rt1.c3, v0.c2 FROM t0, v0 CROSS JOIN rt1 ON ((CHAR(v0.c0))GLOB(((v0.c0)<(rt1.c1)))) GROUP BY v0.c1, rt1.c3, v0.c2 HAVING MIN((~ (SUM(t0.c93)))) UNION ALL SELECT ALL v0.c1, rt1.c3, v0.c2 FROM t0, v0 CROSS JOIN rt1 ON ((CHAR(v0.c0))GLOB(((v0.c0)<(rt1.c1)))) GROUP BY v0.c1, rt1.c3, v0.c2 HAVING (NOT (MIN((~ (SUM(t0.c93)))))) UNION ALL SELECT v0.c1, rt1.c3, v0.c2 FROM t0, v0 CROSS JOIN rt1 ON ((CHAR(v0.c0))GLOB(((v0.c0)<(rt1.c1)))) GROUP BY v0.c1, rt1.c3, v0.c2 HAVING ((MIN((~ (SUM(t0.c93))))) ISNULL);
SELECT MIN(((((SUBSTR(t0.c93, t0.c93))OR(((vt0.c0)OR(rt1.c0)))))AND((vt0.c0 IN ())))) FROM vt0, t0, rt1 ORDER BY ((CAST(t0.c0 AS REAL)) ISNULL)  NULLS LAST;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN ((((vt0.c0, NULL, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (0.03160996236344704))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ())) NOT BETWEEN ((((vt0.c0, NULL, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (0.03160996236344704))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ())) NOT BETWEEN ((((vt0.c0, NULL, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (0.03160996236344704))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((0.3564010854618346) NOTNULL)) BETWEEN (t0.c0) AND (t0.c93))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((0.3564010854618346) NOTNULL)) BETWEEN (t0.c0) AND (t0.c93))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((0.3564010854618346) NOTNULL)) BETWEEN (t0.c0) AND (t0.c93))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0 COLLATE RTRIM)OR(vt0.c0 COLLATE BINARY)))AND((+ (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR(vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((vt0.c0 COLLATE RTRIM)OR(vt0.c0 COLLATE BINARY)))AND((+ (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0 COLLATE RTRIM)OR(vt0.c0 COLLATE BINARY)))AND((+ (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR(vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c2, t0.c93, t0.c0 FROM vt0, rt1, t0 GROUP BY rt1.c2, t0.c93, t0.c0;
SELECT ALL rt1.c2, t0.c93, t0.c0 FROM vt0, rt1, t0 GROUP BY rt1.c2, t0.c93, t0.c0 HAVING rtreenode(UNLIKELY(DISTINCT rt1.c1), MIN(rt1.c1)) UNION ALL SELECT rt1.c2, t0.c93, t0.c0 FROM vt0, rt1, t0 GROUP BY rt1.c2, t0.c93, t0.c0 HAVING (NOT (rtreenode(UNLIKELY(DISTINCT rt1.c1), MIN(rt1.c1)))) UNION ALL SELECT ALL rt1.c2, t0.c93, t0.c0 FROM vt0, rt1, t0 GROUP BY rt1.c2, t0.c93, t0.c0 HAVING ((rtreenode(UNLIKELY(DISTINCT rt1.c1), MIN(rt1.c1))) ISNULL);
SELECT rt1.c2, t0.c93, t0.c0 FROM vt0, rt1, t0 GROUP BY rt1.c2, t0.c93, t0.c0;
SELECT ALL rt1.c2, t0.c93, t0.c0 FROM vt0, rt1, t0 GROUP BY rt1.c2, t0.c93, t0.c0 HAVING rtreenode(UNLIKELY(DISTINCT rt1.c1), MIN(rt1.c1)) UNION ALL SELECT rt1.c2, t0.c93, t0.c0 FROM vt0, rt1, t0 GROUP BY rt1.c2, t0.c93, t0.c0 HAVING (NOT (rtreenode(UNLIKELY(DISTINCT rt1.c1), MIN(rt1.c1)))) UNION ALL SELECT ALL rt1.c2, t0.c93, t0.c0 FROM vt0, rt1, t0 GROUP BY rt1.c2, t0.c93, t0.c0 HAVING ((rtreenode(UNLIKELY(DISTINCT rt1.c1), MIN(rt1.c1))) ISNULL);
SELECT rt1.c2, t0.c93, t0.c0 FROM vt0, rt1, t0 GROUP BY rt1.c2, t0.c93, t0.c0;
SELECT ALL * FROM v0 FULL OUTER JOIN rt1 ON ((((v0.c2)>=(rt1.c3)))<>(((v0.c2)>=('')))) CROSS JOIN t0 ON (~ ((((rt1.c1))<=((t0.c93)))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt1 ON ((((v0.c2)>=(rt1.c3)))!=(((v0.c2)>=('')))) CROSS JOIN t0 ON (~ ((((rt1.c1))<=((t0.c93))))) WHERE (((((t0.c0)AND(rt1.c0))) NOT BETWEEN (rt1.c3) AND (GLOB(t0.c93, 0.13141333030168723)))) UNION ALL SELECT * FROM v0 FULL OUTER JOIN rt1 ON ((((v0.c2)>=(rt1.c3)))!=(((v0.c2)>=('')))) CROSS JOIN t0 ON (~ ((((rt1.c1))<=((t0.c93))))) WHERE ((NOT (((((t0.c0)AND(rt1.c0))) NOT BETWEEN (rt1.c3) AND (GLOB(t0.c93, 0.13141333030168723)))))) UNION ALL SELECT * FROM v0 FULL OUTER JOIN rt1 ON ((((v0.c2)>=(rt1.c3)))<>(((v0.c2)>=('')))) CROSS JOIN t0 ON (~ ((((rt1.c1))<=((t0.c93))))) WHERE (((((((t0.c0)AND(rt1.c0))) NOT BETWEEN (rt1.c3) AND (GLOB(t0.c93, 0.13141333030168723)))) ISNULL));
SELECT ALL * FROM v0 FULL OUTER JOIN rt1 ON ((((v0.c2)>=(rt1.c3)))<>(((v0.c2)>=('')))) CROSS JOIN t0 ON (~ ((((rt1.c1))<=((t0.c93)))));
SELECT DISTINCT * FROM vt0, v0, rt1, t0;
SELECT DISTINCT * FROM vt0, v0, rt1, t0 WHERE (((v0.c1) NOT BETWEEN (rt1.c1) AND (((rt1.c3)>=('HtN0'))))) UNION SELECT DISTINCT * FROM vt0, v0, rt1, t0 WHERE ((NOT (((v0.c1) NOT BETWEEN (rt1.c1) AND (((rt1.c3)>=('HtN0'))))))) UNION SELECT DISTINCT * FROM vt0, v0, rt1, t0 WHERE (((((v0.c1) NOT BETWEEN (rt1.c1) AND (((rt1.c3)>=('HtN0'))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt1, t0;
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (TRIM(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)*(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (TRIM(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)*(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((TRIM(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)*(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT rt1.c1, v0.c1, rt1.c2, rt1.c0, t0.c93, t0.c0, rt1.c3 FROM v0, rt1, t0 INDEXED BY i52, vt0 GROUP BY rt1.c1, v0.c1, rt1.c2, rt1.c0, t0.c93, t0.c0, rt1.c3;
SELECT * FROM t0 NOT INDEXED, rt1;
SELECT ALL * FROM t0, rt1 WHERE (((NULL)>(((((rt1.c1)AND(t0.c0)))OR(t0.c93))))) UNION ALL SELECT ALL * FROM t0, rt1 WHERE ((NOT (((NULL)>(((((rt1.c1)AND(t0.c0)))OR(t0.c93))))))) UNION ALL SELECT ALL * FROM t0, rt1 WHERE (((((NULL)>(((((rt1.c1)AND(t0.c0)))OR(t0.c93))))) ISNULL));
SELECT * FROM t0 NOT INDEXED, rt1;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ((((((((v0.c0))<((v0.c0))))AND(((v0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)))))AND((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c1)))))) UNION SELECT DISTINCT * FROM vt0, v0 NOT INDEXED WHERE ((NOT ((((((((v0.c0))<((v0.c0))))AND(((v0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)))))AND((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c1)))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((((((((((v0.c0))<((v0.c0))))AND(((v0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)))))AND((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT rt1.c1, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON (- ((- (rt1.c0)))) GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON (- ((- (rt1.c0)))) WHERE (((NOT (rt1.c0)) IN ())) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON (- ((- (rt1.c0)))) WHERE ((NOT (((NOT (rt1.c0)) IN ())))) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON (- ((- (rt1.c0)))) WHERE (((((NOT (rt1.c0)) IN ())) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 RIGHT OUTER JOIN vt0 ON (- ((- (rt1.c0)))) GROUP BY rt1.c1, rt1.c0;
SELECT ALL vt0.c0, t0.c93, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY vt0.c0, t0.c93, t0.c0, v0.c0;
SELECT ALL vt0.c0, t0.c93, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY vt0.c0, t0.c93, t0.c0, v0.c0 HAVING MIN(MIN(GROUP_CONCAT(MAX(MAX(AVG(t0.c93)))))) UNION ALL SELECT vt0.c0, t0.c93, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY vt0.c0, t0.c93, t0.c0, v0.c0 HAVING (NOT (MIN(MIN(GROUP_CONCAT(MAX(MAX(AVG(t0.c93)))))))) UNION ALL SELECT ALL vt0.c0, t0.c93, t0.c0, v0.c0 FROM vt0, v0, t0 GROUP BY vt0.c0, t0.c93, t0.c0, v0.c0 HAVING ((MIN(MIN(GROUP_CONCAT(MAX(MAX(AVG(t0.c93))))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT NULL)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0) NOT NULL)) NOT NULL)))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0) NOT NULL)) NOT NULL)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt1.c3, rt1.c2 FROM t0, vt0, rt1;
SELECT DISTINCT rt1.c3, rt1.c2 FROM t0, vt0, rt1 WHERE (CHAR(rt1.c3)) UNION SELECT DISTINCT rt1.c3, rt1.c2 FROM t0, vt0, rt1 WHERE ((NOT (CHAR(rt1.c3)))) UNION SELECT DISTINCT rt1.c3, rt1.c2 FROM t0, vt0 NOT INDEXED, rt1 WHERE (((CHAR(rt1.c3)) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c2 FROM t0, vt0, rt1;
SELECT t0.c93 FROM v0, vt0, t0 GROUP BY t0.c93;
SELECT ALL t0.c93 FROM v0, vt0, t0 WHERE ((((((((((t0.c93 IN ()))OR((((vt0.c0))<((v0.c1))))))OR((- (vt0.c0)))))OR((((v0.c0)) NOT BETWEEN ((t0.c93)) AND ((t0.c93))))))OR(t0.c0))) GROUP BY t0.c93 UNION SELECT t0.c93 FROM v0, vt0, t0 WHERE ((NOT ((((((((((t0.c93 IN ()))OR((((vt0.c0))<((v0.c1))))))OR((- (vt0.c0)))))OR((((v0.c0)) NOT BETWEEN ((t0.c93)) AND ((t0.c93))))))OR(t0.c0))))) GROUP BY t0.c93 UNION SELECT ALL t0.c93 FROM v0, vt0, t0 WHERE ((((((((((((t0.c93 IN ()))OR((((vt0.c0))<((v0.c1))))))OR((- (vt0.c0)))))OR((((v0.c0)) NOT BETWEEN ((t0.c93)) AND ((t0.c93))))))OR(t0.c0))) ISNULL)) GROUP BY t0.c93;
SELECT t0.c93 FROM v0, vt0, t0 GROUP BY t0.c93;
SELECT t0.c93, rt1.c1 FROM rt1 CROSS JOIN v0 ON CAST((v0.c0 IN (rt1.c2, v0.c1)) AS TEXT) FULL OUTER JOIN t0 ON LIKELY(DISTINCT '-1724423204' COLLATE BINARY) RIGHT OUTER JOIN vt0 ON (((rt1.c0) NOT NULL) IN ()) GROUP BY t0.c93, rt1.c1;
SELECT t0.c93, rt1.c1 FROM rt1 CROSS JOIN v0 ON CAST((v0.c0 IN (rt1.c2, v0.c1)) AS TEXT) FULL OUTER JOIN t0 ON LIKELY(DISTINCT '-1724423204' COLLATE BINARY) RIGHT OUTER JOIN vt0 ON (((rt1.c0) NOT NULL) IN ()) GROUP BY t0.c93, rt1.c1 HAVING COUNT(*) UNION ALL SELECT t0.c93, rt1.c1 FROM rt1 CROSS JOIN v0 ON CAST((v0.c0 IN (rt1.c2, v0.c1)) AS TEXT) FULL OUTER JOIN t0 ON LIKELY(DISTINCT '-1724423204' COLLATE BINARY) RIGHT OUTER JOIN vt0 ON (((rt1.c0) NOT NULL) IN ()) GROUP BY t0.c93, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c93, rt1.c1 FROM rt1 CROSS JOIN v0 ON CAST((v0.c0 IN (rt1.c2, v0.c1)) AS TEXT) FULL OUTER JOIN t0 ON LIKELY(DISTINCT '-1724423204' COLLATE BINARY) RIGHT OUTER JOIN vt0 ON (((rt1.c0) NOT NULL) IN ()) GROUP BY t0.c93, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c93, rt1.c1 FROM rt1 CROSS JOIN v0 ON CAST((v0.c0 IN (rt1.c2, v0.c1)) AS TEXT) FULL OUTER JOIN t0 ON LIKELY(DISTINCT '-1724423204' COLLATE BINARY) RIGHT OUTER JOIN vt0 ON (((rt1.c0) NOT NULL) IN ()) GROUP BY t0.c93, rt1.c1;
SELECT t0.c93, rt1.c1 FROM rt1 CROSS JOIN v0 ON CAST((v0.c0 IN (rt1.c2, v0.c1)) AS TEXT) FULL OUTER JOIN t0 ON LIKELY(DISTINCT '-1724423204' COLLATE BINARY) RIGHT OUTER JOIN vt0 ON (((rt1.c0) NOT NULL) IN ()) GROUP BY t0.c93, rt1.c1 HAVING COUNT(*) UNION ALL SELECT t0.c93, rt1.c1 FROM rt1 CROSS JOIN v0 ON CAST((v0.c0 IN (rt1.c2, v0.c1)) AS TEXT) FULL OUTER JOIN t0 ON LIKELY(DISTINCT '-1724423204' COLLATE BINARY) RIGHT OUTER JOIN vt0 ON (((rt1.c0) NOT NULL) IN ()) GROUP BY t0.c93, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c93, rt1.c1 FROM rt1 CROSS JOIN v0 ON CAST((v0.c0 IN (rt1.c2, v0.c1)) AS TEXT) FULL OUTER JOIN t0 ON LIKELY(DISTINCT '-1724423204' COLLATE BINARY) RIGHT OUTER JOIN vt0 ON (((rt1.c0) NOT NULL) IN ()) GROUP BY t0.c93, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c93, rt1.c1 FROM rt1 CROSS JOIN v0 ON CAST((v0.c0 IN (rt1.c2, v0.c1)) AS TEXT) FULL OUTER JOIN t0 ON LIKELY(DISTINCT '-1724423204' COLLATE BINARY) RIGHT OUTER JOIN vt0 ON (((rt1.c0) NOT NULL) IN ()) GROUP BY t0.c93, rt1.c1;
SELECT ALL TOTAL((((((v0.c0, v0.c1, v0.c0))<>(('-32454479', NULL, t0.c93))))-(((0.3927905814271829) BETWEEN (rt1.c0) AND (rt1.c1))))) FROM vt0, rt1, t0, v0;
SELECT ALL v0.c2, v0.c1, vt0.c0 FROM vt0, t0, v0;
SELECT ALL v0.c2, v0.c1, vt0.c0 FROM vt0, t0, v0 WHERE ((v0.c1 COLLATE NOCASE IN ())) UNION ALL SELECT v0.c2, v0.c1, vt0.c0 FROM vt0, t0, v0 WHERE ((NOT ((v0.c1 COLLATE NOCASE IN ())))) UNION ALL SELECT v0.c2, v0.c1, vt0.c0 FROM vt0, t0, v0 WHERE ((((v0.c1 COLLATE NOCASE IN ())) ISNULL));
SELECT ALL v0.c2, v0.c1, vt0.c0 FROM vt0, t0, v0;
SELECT DISTINCT * FROM t0, vt0, v0, rt1;
SELECT DISTINCT * FROM t0, vt0, v0, rt1 WHERE (HEX(DISTINCT ((v0.c2) NOT BETWEEN (rt1.c1) AND (t0.c0)))) UNION SELECT DISTINCT * FROM t0, vt0, v0, rt1 WHERE ((NOT (HEX(DISTINCT ((v0.c2) NOT BETWEEN (rt1.c1) AND (t0.c0)))))) UNION SELECT DISTINCT * FROM t0, vt0, v0, rt1 WHERE (((HEX(DISTINCT ((v0.c2) NOT BETWEEN (rt1.c1) AND (t0.c0)))) ISNULL));
SELECT DISTINCT * FROM t0, vt0, v0, rt1;
SELECT t0.c0, t0.c93 FROM t0 GROUP BY t0.c0, t0.c93;
SELECT t0.c0, t0.c93 FROM t0 WHERE ((('9<)vt3R')IS NOT(-769242462))) GROUP BY t0.c0, t0.c93 UNION SELECT ALL t0.c0, t0.c93 FROM t0 WHERE ((NOT ((('9<)vt3R')IS NOT(-769242462))))) GROUP BY t0.c0, t0.c93 UNION SELECT t0.c0, t0.c93 FROM t0 WHERE ((((('9<)vt3R')IS NOT(-769242462))) ISNULL)) GROUP BY t0.c0, t0.c93;
SELECT t0.c0, t0.c93 FROM t0 GROUP BY t0.c0, t0.c93;
SELECT rt1.c0, t0.c93, rt1.c3, t0.c0, rt1.c2, rt1.c1, vt0.c0 FROM t0, rt1 CROSS JOIN vt0 ON (((((t0.c0 IN ()))AND('I5')))AND(((((rt1.c0)OR(rt1.c1)))OR(t0.c0)))) CROSS JOIN v0 ON (((NOT (rt1.c2)))LIKE(CASE WHEN rt1.c2 THEN rt1.c2 END)) GROUP BY rt1.c0, t0.c93, rt1.c3, t0.c0, rt1.c2, rt1.c1, vt0.c0;
SELECT ALL rt1.c0, t0.c93, rt1.c3, t0.c0, rt1.c2, rt1.c1, vt0.c0 FROM t0, rt1 CROSS JOIN vt0 ON (((((t0.c0 IN ()))AND('I5')))AND(((((rt1.c0)OR(rt1.c1)))OR(t0.c0)))) CROSS JOIN v0 ON (((NOT (rt1.c2)))LIKE(CASE WHEN rt1.c2 THEN rt1.c2 END)) GROUP BY rt1.c0, t0.c93, rt1.c3, t0.c0, rt1.c2, rt1.c1, vt0.c0 HAVING (AVG(v0.c1) IN ()) UNION ALL SELECT rt1.c0, t0.c93, rt1.c3, t0.c0, rt1.c2, rt1.c1, vt0.c0 FROM t0, rt1 CROSS JOIN vt0 ON (((((t0.c0 IN ()))AND('I5')))AND(((((rt1.c0)OR(rt1.c1)))OR(t0.c0)))) CROSS JOIN v0 ON (((NOT (rt1.c2)))LIKE(CASE WHEN rt1.c2 THEN rt1.c2 END)) GROUP BY rt1.c0, t0.c93, rt1.c3, t0.c0, rt1.c2, rt1.c1, vt0.c0 HAVING (NOT ((AVG(v0.c1) IN ()))) UNION ALL SELECT rt1.c0, t0.c93, rt1.c3, t0.c0, rt1.c2, rt1.c1, vt0.c0 FROM t0, rt1 CROSS JOIN vt0 ON (((((t0.c0 IN ()))AND('I5')))AND(((((rt1.c0)OR(rt1.c1)))OR(t0.c0)))) CROSS JOIN v0 ON (((NOT (rt1.c2)))LIKE(CASE WHEN rt1.c2 THEN rt1.c2 END)) GROUP BY rt1.c0, t0.c93, rt1.c3, t0.c0, rt1.c2, rt1.c1, vt0.c0 HAVING (((AVG(v0.c1) IN ())) ISNULL);
SELECT rt1.c0, t0.c93, rt1.c3, t0.c0, rt1.c2, rt1.c1, vt0.c0 FROM t0, rt1 CROSS JOIN vt0 ON (((((t0.c0 IN ()))AND('I5')))AND(((((rt1.c0)OR(rt1.c1)))OR(t0.c0)))) CROSS JOIN v0 ON (((NOT (rt1.c2)))LIKE(CASE WHEN rt1.c2 THEN rt1.c2 END)) GROUP BY rt1.c0, t0.c93, rt1.c3, t0.c0, rt1.c2, rt1.c1, vt0.c0;
SELECT ALL rt1.c0, t0.c93, rt1.c3, t0.c0, rt1.c2, rt1.c1, vt0.c0 FROM t0, rt1 CROSS JOIN vt0 ON (((((t0.c0 IN ()))AND('I5')))AND(((((rt1.c0)OR(rt1.c1)))OR(t0.c0)))) CROSS JOIN v0 ON (((NOT (rt1.c2)))LIKE(CASE WHEN rt1.c2 THEN rt1.c2 END)) GROUP BY rt1.c0, t0.c93, rt1.c3, t0.c0, rt1.c2, rt1.c1, vt0.c0 HAVING (AVG(v0.c1) IN ()) UNION ALL SELECT rt1.c0, t0.c93, rt1.c3, t0.c0, rt1.c2, rt1.c1, vt0.c0 FROM t0, rt1 CROSS JOIN vt0 ON (((((t0.c0 IN ()))AND('I5')))AND(((((rt1.c0)OR(rt1.c1)))OR(t0.c0)))) CROSS JOIN v0 ON (((NOT (rt1.c2)))LIKE(CASE WHEN rt1.c2 THEN rt1.c2 END)) GROUP BY rt1.c0, t0.c93, rt1.c3, t0.c0, rt1.c2, rt1.c1, vt0.c0 HAVING (NOT ((AVG(v0.c1) IN ()))) UNION ALL SELECT rt1.c0, t0.c93, rt1.c3, t0.c0, rt1.c2, rt1.c1, vt0.c0 FROM t0, rt1 CROSS JOIN vt0 ON (((((t0.c0 IN ()))AND('I5')))AND(((((rt1.c0)OR(rt1.c1)))OR(t0.c0)))) CROSS JOIN v0 ON (((NOT (rt1.c2)))LIKE(CASE WHEN rt1.c2 THEN rt1.c2 END)) GROUP BY rt1.c0, t0.c93, rt1.c3, t0.c0, rt1.c2, rt1.c1, vt0.c0 HAVING (((AVG(v0.c1) IN ())) ISNULL);
SELECT rt1.c0, t0.c93, rt1.c3, t0.c0, rt1.c2, rt1.c1, vt0.c0 FROM t0, rt1 CROSS JOIN vt0 ON (((((t0.c0 IN ()))AND('I5')))AND(((((rt1.c0)OR(rt1.c1)))OR(t0.c0)))) CROSS JOIN v0 ON (((NOT (rt1.c2)))LIKE(CASE WHEN rt1.c2 THEN rt1.c2 END)) GROUP BY rt1.c0, t0.c93, rt1.c3, t0.c0, rt1.c2, rt1.c1, vt0.c0;
SELECT ALL * FROM rt1 CROSS JOIN v0 ON ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0))) NOTNULL) LEFT OUTER JOIN vt0 ON (NOT (CASE rt1.c1  WHEN vt0.c0 THEN -1.868334779E9 WHEN v0.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END));
SELECT ALL * FROM rt1 CROSS JOIN v0 ON ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0))) NOTNULL) LEFT OUTER JOIN vt0 ON (NOT (CASE rt1.c1  WHEN vt0.c0 THEN -1.868334779E9 WHEN v0.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END)) WHERE ((- (((rt1.c0)&('lK'))))) UNION ALL SELECT * FROM rt1 CROSS JOIN v0 ON ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0))) NOTNULL) LEFT OUTER JOIN vt0 ON (NOT (CASE rt1.c1  WHEN vt0.c0 THEN -1.868334779E9 WHEN v0.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END)) WHERE ((NOT ((- (((rt1.c0)&('lK'))))))) UNION ALL SELECT * FROM rt1 CROSS JOIN v0 ON ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0))) NOTNULL) LEFT OUTER JOIN vt0 ON (NOT (CASE rt1.c1  WHEN vt0.c0 THEN -1.868334779E9 WHEN v0.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END)) WHERE ((((- (((rt1.c0)&('lK'))))) ISNULL));
SELECT ALL * FROM rt1 CROSS JOIN v0 ON ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0))) NOTNULL) LEFT OUTER JOIN vt0 ON (NOT (CASE rt1.c1  WHEN vt0.c0 THEN -1.868334779E9 WHEN v0.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE (CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN (vt0.c0 IN ()) THEN vt0.c0 COLLATE NOCASE WHEN UNLIKELY(vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN (-1.563823919E9 IN ()) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN (vt0.c0 IN ()) THEN vt0.c0 COLLATE NOCASE WHEN UNLIKELY(vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN (-1.563823919E9 IN ()) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN (vt0.c0 IN ()) THEN vt0.c0 COLLATE NOCASE WHEN UNLIKELY(vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN (-1.563823919E9 IN ()) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt1.c1, v0.c0, vt0.c0, rt1.c3 FROM v0, vt0, rt1 GROUP BY rt1.c1, v0.c0, vt0.c0, rt1.c3;
SELECT ALL rt1.c1, v0.c0, vt0.c0, rt1.c3 FROM v0, vt0, rt1 WHERE (v0.c0) GROUP BY rt1.c1, v0.c0, vt0.c0, rt1.c3 UNION SELECT ALL rt1.c1, v0.c0, vt0.c0, rt1.c3 FROM v0, vt0, rt1 WHERE ((NOT (v0.c0))) GROUP BY rt1.c1, v0.c0, vt0.c0, rt1.c3 UNION SELECT rt1.c1, v0.c0, vt0.c0, rt1.c3 FROM v0, vt0, rt1 WHERE (((v0.c0) ISNULL)) GROUP BY rt1.c1, v0.c0, vt0.c0, rt1.c3;
SELECT ALL rt1.c1, v0.c0, vt0.c0, rt1.c3 FROM v0, vt0, rt1 GROUP BY rt1.c1, v0.c0, vt0.c0, rt1.c3;
SELECT ALL rt1.c2 FROM rt1, vt0 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1, vt0 GROUP BY rt1.c2 HAVING ((GROUP_CONCAT(COUNT(*)))*(((rt1.c1)LIKE(rt1.c3)))) UNION ALL SELECT rt1.c2 FROM rt1, vt0 GROUP BY rt1.c2 HAVING (NOT (((GROUP_CONCAT(COUNT(*)))*(((rt1.c1)LIKE(rt1.c3)))))) UNION ALL SELECT ALL rt1.c2 FROM rt1, vt0 GROUP BY rt1.c2 HAVING ((((GROUP_CONCAT(COUNT(*)))*(((rt1.c1)LIKE(rt1.c3))))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (0.6151570084895837) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (0.6151570084895837))) UNION ALL SELECT * FROM t0 WHERE (((0.6151570084895837) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT v0.c2 FROM vt0, t0 LEFT OUTER JOIN v0 ON IFNULL(DISTINCT ((((((((t0.c93)OR(t0.c0)))AND(t0.c93)))OR(v0.c2)))AND(vt0.c0)), ((t0.c93)%(v0.c2)));
SELECT DISTINCT v0.c2 FROM vt0, t0 LEFT OUTER JOIN v0 ON IFNULL(DISTINCT ((((((((t0.c93)OR(t0.c0)))AND(t0.c93)))OR(v0.c2)))AND(vt0.c0)), ((t0.c93)%(v0.c2))) WHERE ((((((t0.c0 IN (v0.c2, v0.c2)))OR(x'')))AND(v0.c1 COLLATE BINARY))) UNION SELECT DISTINCT v0.c2 FROM vt0, t0 LEFT OUTER JOIN v0 ON IFNULL(DISTINCT ((((((((t0.c93)OR(t0.c0)))AND(t0.c93)))OR(v0.c2)))AND(vt0.c0)), ((t0.c93)%(v0.c2))) WHERE ((NOT ((((((t0.c0 IN (v0.c2, v0.c2)))OR(x'')))AND(v0.c1 COLLATE BINARY))))) UNION SELECT DISTINCT v0.c2 FROM vt0, t0 LEFT OUTER JOIN v0 ON IFNULL(DISTINCT ((((((((t0.c93)OR(t0.c0)))AND(t0.c93)))OR(v0.c2)))AND(vt0.c0)), ((t0.c93)%(v0.c2))) WHERE ((((((((t0.c0 IN (v0.c2, v0.c2)))OR(x'')))AND(v0.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT v0.c2 FROM vt0, t0 LEFT OUTER JOIN v0 ON IFNULL(DISTINCT ((((((((t0.c93)OR(t0.c0)))AND(t0.c93)))OR(v0.c2)))AND(vt0.c0)), ((t0.c93)%(v0.c2)));
SELECT t0.c93, t0.c0 FROM t0 GROUP BY t0.c93, t0.c0;
SELECT ALL t0.c93, t0.c0 FROM t0 WHERE ((((CAST(0.7259268723879735 AS BLOB)))<=((CAST(t0.c0 AS NUMERIC))))) GROUP BY t0.c93, t0.c0 UNION SELECT t0.c93, t0.c0 FROM t0 WHERE ((NOT ((((CAST(0.7259268723879735 AS BLOB)))<=((CAST(t0.c0 AS NUMERIC))))))) GROUP BY t0.c93, t0.c0 UNION SELECT ALL t0.c93, t0.c0 FROM t0 WHERE ((((((CAST(0.7259268723879735 AS BLOB)))<=((CAST(t0.c0 AS NUMERIC))))) ISNULL)) GROUP BY t0.c93, t0.c0;
SELECT t0.c93, t0.c0 FROM t0 GROUP BY t0.c93, t0.c0;
SELECT ALL v0.c1 FROM rt1, vt0, v0 GROUP BY v0.c1;
SELECT v0.c1 FROM rt1, vt0, v0 GROUP BY v0.c1 HAVING CASE WHEN TOTAL(AVG(rt1.c2)) THEN AVG(vt0.c0) END UNION ALL SELECT ALL v0.c1 FROM rt1, vt0, v0 GROUP BY v0.c1 HAVING (NOT (CASE WHEN TOTAL(AVG(rt1.c2)) THEN AVG(vt0.c0) END)) UNION ALL SELECT v0.c1 FROM rt1, vt0, v0 GROUP BY v0.c1 HAVING ((CASE WHEN TOTAL(AVG(rt1.c2)) THEN AVG(vt0.c0) END) ISNULL);
SELECT rt1.c0, rt1.c3 FROM rt1;
SELECT rt1.c0, rt1.c3 FROM rt1 WHERE (rt1.c3) UNION ALL SELECT ALL rt1.c0, rt1.c3 FROM rt1 WHERE ((NOT (rt1.c3))) UNION ALL SELECT ALL rt1.c0, rt1.c3 FROM rt1 WHERE (((rt1.c3) ISNULL));
SELECT rt1.c0, rt1.c3 FROM rt1;
SELECT DISTINCT * FROM rt1, vt0 INNER JOIN v0 ON ((IFNULL(rt1.c0, rt1.c3))>=(((vt0.c0) NOT NULL))) FULL OUTER JOIN t0 ON (((((rt1.c2)OR(v0.c0)))OR(t0.c0)) IN ());
SELECT DISTINCT * FROM rt1, vt0 INNER JOIN v0 ON ((IFNULL(rt1.c0, rt1.c3))>=(((vt0.c0) NOT NULL))) FULL OUTER JOIN t0 ON (((((rt1.c2)OR(v0.c0)))OR(t0.c0)) IN ()) WHERE ((('lK')-(CAST(rt1.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM rt1, vt0 INNER JOIN v0 ON ((IFNULL(rt1.c0, rt1.c3))>=(((vt0.c0) NOT NULL))) FULL OUTER JOIN t0 ON (((((rt1.c2)OR(v0.c0)))OR(t0.c0)) IN ()) WHERE ((NOT ((('lK')-(CAST(rt1.c0 AS BLOB)))))) UNION SELECT DISTINCT * FROM rt1, vt0 INNER JOIN v0 ON ((IFNULL(rt1.c0, rt1.c3))>=(((vt0.c0) NOT NULL))) FULL OUTER JOIN t0 ON (((((rt1.c2)OR(v0.c0)))OR(t0.c0)) IN ()) WHERE ((((('lK')-(CAST(rt1.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM rt1, vt0 INNER JOIN v0 ON ((IFNULL(rt1.c0, rt1.c3))>=(((vt0.c0) NOT NULL))) FULL OUTER JOIN t0 ON (((((rt1.c2)OR(v0.c0)))OR(t0.c0)) IN ());
SELECT ALL t0.c0, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c1;
SELECT t0.c0, v0.c1 FROM t0, v0 WHERE (CASE WHEN ((t0.c0)-(v0.c2)) THEN CAST(t0.c0 AS INTEGER) END) GROUP BY t0.c0, v0.c1 UNION SELECT t0.c0, v0.c1 FROM t0, v0 NOT INDEXED WHERE ((NOT (CASE WHEN ((t0.c0)-(v0.c2)) THEN CAST(t0.c0 AS INTEGER) END))) GROUP BY t0.c0, v0.c1 UNION SELECT t0.c0, v0.c1 FROM t0, v0 WHERE (((CASE WHEN ((t0.c0)-(v0.c2)) THEN CAST(t0.c0 AS INTEGER) END) ISNULL)) GROUP BY t0.c0, v0.c1;
SELECT ALL t0.c0, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(SUM(TOTAL(GROUP_CONCAT(COUNT(x''))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(SUM(TOTAL(GROUP_CONCAT(COUNT(x''))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(SUM(TOTAL(GROUP_CONCAT(COUNT(x'')))))) ISNULL);
SELECT * FROM rt1, vt0;
SELECT ALL * FROM rt1, vt0 WHERE (CAST((vt0.c0 IN ()) AS REAL)) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((NOT (CAST((vt0.c0 IN ()) AS REAL)))) UNION ALL SELECT * FROM rt1, vt0 WHERE (((CAST((vt0.c0 IN ()) AS REAL)) ISNULL));
SELECT * FROM rt1, vt0;
SELECT DISTINCT * FROM v0, t0 INDEXED BY i52, vt0;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC)) NOTNULL)) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS NUMERIC)) NOTNULL)))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0 WHERE (((((CAST(v0.c0 AS NUMERIC)) NOTNULL)) ISNULL)) GROUP BY v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL rt1.c2, rt1.c0, vt0.c0 FROM rt1, t0 RIGHT OUTER JOIN vt0 ON rt1.c2 GROUP BY rt1.c2, rt1.c0, vt0.c0;
SELECT ALL rt1.c2, rt1.c0, vt0.c0 FROM rt1, t0 RIGHT OUTER JOIN vt0 ON rt1.c2 GROUP BY rt1.c2, rt1.c0, vt0.c0 HAVING (('-769242462')==(MIN(SUM(rt1.c0)))) UNION ALL SELECT rt1.c2, rt1.c0, vt0.c0 FROM rt1, t0 RIGHT OUTER JOIN vt0 ON rt1.c2 GROUP BY rt1.c2, rt1.c0, vt0.c0 HAVING (NOT ((('-769242462')=(MIN(SUM(rt1.c0)))))) UNION ALL SELECT ALL rt1.c2, rt1.c0, vt0.c0 FROM rt1, t0 RIGHT OUTER JOIN vt0 ON rt1.c2 GROUP BY rt1.c2, rt1.c0, vt0.c0 HAVING (((('-769242462')==(MIN(SUM(rt1.c0))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (SQLITE_VERSION()) UNION ALL SELECT * FROM vt0 WHERE ((NOT (SQLITE_VERSION()))) UNION ALL SELECT * FROM vt0 WHERE (((SQLITE_VERSION()) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt1.c2, rt1.c3 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c3 FROM rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c3) AND (NULL)))+((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))))) UNION SELECT DISTINCT rt1.c2, rt1.c3 FROM rt1 WHERE ((NOT (((((rt1.c0) NOT BETWEEN (rt1.c3) AND (NULL)))+((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))))))) UNION SELECT DISTINCT rt1.c2, rt1.c3 FROM rt1 WHERE (((((((rt1.c0) NOT BETWEEN (rt1.c3) AND (NULL)))+((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c3 FROM rt1;
SELECT ALL rt1.c1, rt1.c0, v0.c1 FROM v0, rt1 GROUP BY rt1.c1, rt1.c0, v0.c1;
SELECT rt1.c1, rt1.c0, v0.c1 FROM v0, rt1 WHERE ((((+ (rt1.c0)))>=(((rt1.c0) NOTNULL)))) GROUP BY rt1.c1, rt1.c0, v0.c1 UNION SELECT rt1.c1, rt1.c0, v0.c1 FROM v0, rt1 WHERE ((NOT ((((+ (rt1.c0)))>=(((rt1.c0) NOTNULL)))))) GROUP BY rt1.c1, rt1.c0, v0.c1 UNION SELECT rt1.c1, rt1.c0, v0.c1 FROM v0, rt1 WHERE ((((((+ (rt1.c0)))>=(((rt1.c0) NOTNULL)))) ISNULL)) GROUP BY rt1.c1, rt1.c0, v0.c1;
SELECT ALL rt1.c1, rt1.c0, v0.c1 FROM v0, rt1 GROUP BY rt1.c1, rt1.c0, v0.c1;
SELECT ALL v0.c1, vt0.c0, rt1.c2, rt1.c1, t0.c0 FROM v0, t0, rt1, vt0 GROUP BY v0.c1, vt0.c0, rt1.c2, rt1.c1, t0.c0;
SELECT ALL v0.c1, vt0.c0, rt1.c2, rt1.c1, t0.c0 FROM v0, t0, rt1, vt0 GROUP BY v0.c1, vt0.c0, rt1.c2, rt1.c1, t0.c0 HAVING AVG(AVG(rt1.c1)) UNION ALL SELECT ALL v0.c1, vt0.c0, rt1.c2, rt1.c1, t0.c0 FROM v0, t0, rt1, vt0 GROUP BY v0.c1, vt0.c0, rt1.c2, rt1.c1, t0.c0 HAVING (NOT (AVG(AVG(rt1.c1)))) UNION ALL SELECT ALL v0.c1, vt0.c0, rt1.c2, rt1.c1, t0.c0 FROM v0, t0, rt1, vt0 GROUP BY v0.c1, vt0.c0, rt1.c2, rt1.c1, t0.c0 HAVING ((AVG(AVG(rt1.c1))) ISNULL);
SELECT rt1.c0, rt1.c1, rt1.c2, t0.c0, t0.c93 FROM rt1, t0 NATURAL JOIN vt0;
SELECT ALL rt1.c0, rt1.c1, rt1.c2, t0.c0, t0.c93 FROM rt1, t0 NATURAL JOIN vt0 WHERE (((((rt1.c1)LIKE(t0.c0)))IS(((t0.c93)=(0.2887975580063312))))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2, t0.c0, t0.c93 FROM rt1, t0 NATURAL JOIN vt0 WHERE ((NOT (((((rt1.c1)LIKE(t0.c0)))IS(((t0.c93)=(0.2887975580063312))))))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2, t0.c0, t0.c93 FROM rt1, t0 NATURAL JOIN vt0 WHERE (((((((rt1.c1)LIKE(t0.c0)))IS(((t0.c93)==(0.2887975580063312))))) ISNULL));
SELECT rt1.c0, rt1.c1, rt1.c2, t0.c0, t0.c93 FROM rt1, t0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM rt1, t0, vt0, v0;
SELECT DISTINCT * FROM rt1, t0, vt0, v0 WHERE (((COALESCE(DISTINCT t0.c0, v0.c2)) NOT BETWEEN (CAST(t0.c93 AS TEXT)) AND (v0.c2 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt1, t0, vt0, v0 WHERE ((NOT (((COALESCE(DISTINCT t0.c0, v0.c2)) NOT BETWEEN (CAST(t0.c93 AS TEXT)) AND (v0.c2 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM rt1, t0, vt0, v0 WHERE (((((COALESCE(DISTINCT t0.c0, v0.c2)) NOT BETWEEN (CAST(t0.c93 AS TEXT)) AND (v0.c2 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM rt1, t0, vt0, v0;
SELECT ALL t0.c93 FROM vt0 CROSS JOIN t0 ON ((((vt0.c0) IS TRUE))=(((t0.c0) NOT BETWEEN (t0.c93) AND (t0.c0)))) GROUP BY t0.c93;
SELECT t0.c93 FROM vt0 CROSS JOIN t0 ON ((((vt0.c0) IS TRUE))==(((t0.c0) NOT BETWEEN (t0.c93) AND (t0.c0)))) WHERE ((((NOT (t0.c93)))==(((vt0.c0) BETWEEN (t0.c93) AND (vt0.c0))))) GROUP BY t0.c93 UNION SELECT ALL t0.c93 FROM vt0 CROSS JOIN t0 ON ((((vt0.c0) IS TRUE))==(((t0.c0) NOT BETWEEN (t0.c93) AND (t0.c0)))) WHERE ((NOT ((((NOT (t0.c93)))==(((vt0.c0) BETWEEN (t0.c93) AND (vt0.c0))))))) GROUP BY t0.c93 UNION SELECT ALL t0.c93 FROM vt0 CROSS JOIN t0 ON ((((vt0.c0) IS TRUE))=(((t0.c0) NOT BETWEEN (t0.c93) AND (t0.c0)))) WHERE ((((((NOT (t0.c93)))==(((vt0.c0) BETWEEN (t0.c93) AND (vt0.c0))))) ISNULL)) GROUP BY t0.c93;
SELECT ALL t0.c93 FROM vt0 CROSS JOIN t0 ON ((((vt0.c0) IS TRUE))=(((t0.c0) NOT BETWEEN (t0.c93) AND (t0.c0)))) GROUP BY t0.c93;
SELECT ALL vt0.c0, rt1.c3, v0.c0, rt1.c0 FROM v0, rt1, vt0, t0 GROUP BY vt0.c0, rt1.c3, v0.c0, rt1.c0;
SELECT vt0.c0, rt1.c3, v0.c0, rt1.c0 FROM v0, rt1, vt0, t0 NOT INDEXED GROUP BY vt0.c0, rt1.c3, v0.c0, rt1.c0 HAVING MIN(((t0.c0) BETWEEN (rt1.c1) AND (v0.c1))) UNION ALL SELECT vt0.c0, rt1.c3, v0.c0, rt1.c0 FROM v0, rt1, vt0, t0 GROUP BY vt0.c0, rt1.c3, v0.c0, rt1.c0 HAVING (NOT (MIN(((t0.c0) BETWEEN (rt1.c1) AND (v0.c1))))) UNION ALL SELECT vt0.c0, rt1.c3, v0.c0, rt1.c0 FROM v0, rt1, vt0, t0 GROUP BY vt0.c0, rt1.c3, v0.c0, rt1.c0 HAVING ((MIN(((t0.c0) BETWEEN (rt1.c1) AND (v0.c1)))) ISNULL);
SELECT ALL vt0.c0, rt1.c3, v0.c0, rt1.c0 FROM v0, rt1, vt0, t0 GROUP BY vt0.c0, rt1.c3, v0.c0, rt1.c0;
SELECT vt0.c0, rt1.c3, v0.c0, rt1.c0 FROM v0, rt1, vt0, t0 NOT INDEXED GROUP BY vt0.c0, rt1.c3, v0.c0, rt1.c0 HAVING MIN(((t0.c0) BETWEEN (rt1.c1) AND (v0.c1))) UNION ALL SELECT vt0.c0, rt1.c3, v0.c0, rt1.c0 FROM v0, rt1, vt0, t0 GROUP BY vt0.c0, rt1.c3, v0.c0, rt1.c0 HAVING (NOT (MIN(((t0.c0) BETWEEN (rt1.c1) AND (v0.c1))))) UNION ALL SELECT vt0.c0, rt1.c3, v0.c0, rt1.c0 FROM v0, rt1, vt0, t0 GROUP BY vt0.c0, rt1.c3, v0.c0, rt1.c0 HAVING ((MIN(((t0.c0) BETWEEN (rt1.c1) AND (v0.c1)))) ISNULL);
SELECT ALL vt0.c0, rt1.c3, v0.c0, rt1.c0 FROM v0, rt1, vt0, t0 GROUP BY vt0.c0, rt1.c3, v0.c0, rt1.c0;
SELECT ALL SUM((((t0.c0))==(('e(}G'))) COLLATE NOCASE) FROM v0, rt1, t0, vt0 ORDER BY (((~ (rt1.c3))) BETWEEN (x'ee4be8eb') AND ((('f]') NOT BETWEEN (rt1.c1) AND (v0.c2))))  NULLS LAST;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) ISNULL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) ISNULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) ISNULL)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c2, v0.c1, v0.c1))>((v0.c2, v0.c1, v0.c0))) COLLATE BINARY) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c2, v0.c1, v0.c1))>((v0.c2, v0.c1, v0.c0))) COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c2, v0.c1, v0.c1))>((v0.c2, v0.c1, v0.c0))) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c1, rt1.c2, v0.c0, rt1.c0 FROM rt1, v0 GROUP BY v0.c1, rt1.c2, v0.c0, rt1.c0;
SELECT v0.c1, rt1.c2, v0.c0, rt1.c0 FROM rt1, v0 WHERE (CAST('Gh E' AS REAL)) GROUP BY v0.c1, rt1.c2, v0.c0, rt1.c0 UNION SELECT v0.c1, rt1.c2, v0.c0, rt1.c0 FROM rt1, v0 WHERE ((NOT (CAST('Gh E' AS REAL)))) GROUP BY v0.c1, rt1.c2, v0.c0, rt1.c0 UNION SELECT ALL v0.c1, rt1.c2, v0.c0, rt1.c0 FROM rt1, v0 WHERE (((CAST('Gh E' AS REAL)) ISNULL)) GROUP BY v0.c1, rt1.c2, v0.c0, rt1.c0;
SELECT ALL v0.c1, rt1.c2, v0.c0, rt1.c0 FROM rt1, v0 GROUP BY v0.c1, rt1.c2, v0.c0, rt1.c0;
SELECT ALL v0.c1 FROM vt0, rt1, v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM vt0, rt1, v0 GROUP BY v0.c1 HAVING COUNT(((SUM(MIN(TOTAL(rt1.c3))))LIKE(rt1.c3))) UNION ALL SELECT v0.c1 FROM vt0, rt1, v0 GROUP BY v0.c1 HAVING (NOT (COUNT(((SUM(MIN(TOTAL(rt1.c3))))LIKE(rt1.c3))))) UNION ALL SELECT ALL v0.c1 FROM vt0, rt1, v0 GROUP BY v0.c1 HAVING ((COUNT(((SUM(MIN(TOTAL(rt1.c3))))LIKE(rt1.c3)))) ISNULL);
SELECT t0.c0, v0.c2, vt0.c0, rt1.c3, v0.c0, rt1.c1, rt1.c2 FROM t0, vt0 LEFT OUTER JOIN v0 ON NULL FULL OUTER JOIN rt1 ON ((v0.c2 COLLATE RTRIM) BETWEEN (v0.c2) AND (rt1.c0));
SELECT t0.c0, v0.c2, vt0.c0, rt1.c3, v0.c0, rt1.c1, rt1.c2 FROM t0, vt0 LEFT OUTER JOIN v0 ON NULL FULL OUTER JOIN rt1 ON ((v0.c2 COLLATE RTRIM) BETWEEN (v0.c2) AND (rt1.c0)) WHERE (((((rt1.c1)>=(vt0.c0)))IS(CAST(rt1.c3 AS NUMERIC)))) UNION ALL SELECT ALL t0.c0, v0.c2, vt0.c0, rt1.c3, v0.c0, rt1.c1, rt1.c2 FROM t0, vt0 LEFT OUTER JOIN v0 ON NULL FULL OUTER JOIN rt1 ON ((v0.c2 COLLATE RTRIM) BETWEEN (v0.c2) AND (rt1.c0)) WHERE ((NOT (((((rt1.c1)>=(vt0.c0)))IS(CAST(rt1.c3 AS NUMERIC)))))) UNION ALL SELECT t0.c0, v0.c2, vt0.c0, rt1.c3, v0.c0, rt1.c1, rt1.c2 FROM t0, vt0 LEFT OUTER JOIN v0 ON NULL FULL OUTER JOIN rt1 ON ((v0.c2 COLLATE RTRIM) BETWEEN (v0.c2) AND (rt1.c0)) WHERE (((((((rt1.c1)>=(vt0.c0)))IS(CAST(rt1.c3 AS NUMERIC)))) ISNULL));
SELECT t0.c0, v0.c2, vt0.c0, rt1.c3, v0.c0, rt1.c1, rt1.c2 FROM t0, vt0 LEFT OUTER JOIN v0 ON NULL FULL OUTER JOIN rt1 ON ((v0.c2 COLLATE RTRIM) BETWEEN (v0.c2) AND (rt1.c0));
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE (((CAST(v0.c1 AS NUMERIC)) NOTNULL)) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((NOT (((CAST(v0.c1 AS NUMERIC)) NOTNULL)))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE (((((CAST(v0.c1 AS NUMERIC)) NOTNULL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT ALL rt1.c3, rt1.c0, rt1.c2, t0.c0, rt1.c1 FROM vt0, t0 RIGHT OUTER JOIN rt1 ON ((((t0.c93)||(rt1.c0)))>>(t0.c93 COLLATE BINARY)) GROUP BY rt1.c3, rt1.c0, rt1.c2, t0.c0, rt1.c1;
SELECT rt1.c3, rt1.c0, rt1.c2, t0.c0, rt1.c1 FROM vt0, t0 RIGHT OUTER JOIN rt1 ON ((((t0.c93)||(rt1.c0)))>>(t0.c93 COLLATE BINARY)) WHERE ((((rt1.c2 IN (vt0.c0, t0.c0)))*(((t0.c93)<(NULL))))) GROUP BY rt1.c3, rt1.c0, rt1.c2, t0.c0, rt1.c1 UNION SELECT rt1.c3, rt1.c0, rt1.c2, t0.c0, rt1.c1 FROM vt0, t0 RIGHT OUTER JOIN rt1 ON ((((t0.c93)||(rt1.c0)))>>(t0.c93 COLLATE BINARY)) WHERE ((NOT ((((rt1.c2 IN (vt0.c0, t0.c0)))*(((t0.c93)<(NULL))))))) GROUP BY rt1.c3, rt1.c0, rt1.c2, t0.c0, rt1.c1 UNION SELECT ALL rt1.c3, rt1.c0, rt1.c2, t0.c0, rt1.c1 FROM vt0, t0 RIGHT OUTER JOIN rt1 ON ((((t0.c93)||(rt1.c0)))>>(t0.c93 COLLATE BINARY)) WHERE ((((((rt1.c2 IN (vt0.c0, t0.c0)))*(((t0.c93)<(NULL))))) ISNULL)) GROUP BY rt1.c3, rt1.c0, rt1.c2, t0.c0, rt1.c1;
SELECT ALL rt1.c3, rt1.c0, rt1.c2, t0.c0, rt1.c1 FROM vt0, t0 RIGHT OUTER JOIN rt1 ON ((((t0.c93)||(rt1.c0)))>>(t0.c93 COLLATE BINARY)) GROUP BY rt1.c3, rt1.c0, rt1.c2, t0.c0, rt1.c1;
SELECT t0.c93, vt0.c0 FROM t0, v0 LEFT OUTER JOIN vt0 ON (~ (t0.c0 COLLATE BINARY)) LEFT OUTER JOIN rt1 ON CAST(rt1.c3 COLLATE BINARY AS BLOB) GROUP BY t0.c93, vt0.c0;
SELECT t0.c93, vt0.c0 FROM t0, v0 LEFT OUTER JOIN vt0 ON (~ (t0.c0 COLLATE BINARY)) LEFT OUTER JOIN rt1 ON CAST(rt1.c3 COLLATE BINARY AS BLOB) GROUP BY t0.c93, vt0.c0 HAVING ((AVG(vt0.c0))GLOB(COUNT(*) COLLATE RTRIM)) UNION ALL SELECT t0.c93, vt0.c0 FROM t0, v0 LEFT OUTER JOIN vt0 ON (~ (t0.c0 COLLATE BINARY)) LEFT OUTER JOIN rt1 ON CAST(rt1.c3 COLLATE BINARY AS BLOB) GROUP BY t0.c93, vt0.c0 HAVING (NOT (((AVG(vt0.c0))GLOB(COUNT(*) COLLATE RTRIM)))) UNION ALL SELECT ALL t0.c93, vt0.c0 FROM t0, v0 LEFT OUTER JOIN vt0 ON (~ (t0.c0 COLLATE BINARY)) LEFT OUTER JOIN rt1 ON CAST(rt1.c3 COLLATE BINARY AS BLOB) GROUP BY t0.c93, vt0.c0 HAVING ((((AVG(vt0.c0))GLOB(COUNT(*) COLLATE RTRIM))) ISNULL);
SELECT t0.c93, vt0.c0 FROM t0, v0 LEFT OUTER JOIN vt0 ON (~ (t0.c0 COLLATE BINARY)) LEFT OUTER JOIN rt1 ON CAST(rt1.c3 COLLATE BINARY AS BLOB) GROUP BY t0.c93, vt0.c0;
SELECT t0.c93, vt0.c0 FROM t0, v0 LEFT OUTER JOIN vt0 ON (~ (t0.c0 COLLATE BINARY)) LEFT OUTER JOIN rt1 ON CAST(rt1.c3 COLLATE BINARY AS BLOB) GROUP BY t0.c93, vt0.c0 HAVING ((AVG(vt0.c0))GLOB(COUNT(*) COLLATE RTRIM)) UNION ALL SELECT t0.c93, vt0.c0 FROM t0, v0 LEFT OUTER JOIN vt0 ON (~ (t0.c0 COLLATE BINARY)) LEFT OUTER JOIN rt1 ON CAST(rt1.c3 COLLATE BINARY AS BLOB) GROUP BY t0.c93, vt0.c0 HAVING (NOT (((AVG(vt0.c0))GLOB(COUNT(*) COLLATE RTRIM)))) UNION ALL SELECT ALL t0.c93, vt0.c0 FROM t0, v0 LEFT OUTER JOIN vt0 ON (~ (t0.c0 COLLATE BINARY)) LEFT OUTER JOIN rt1 ON CAST(rt1.c3 COLLATE BINARY AS BLOB) GROUP BY t0.c93, vt0.c0 HAVING ((((AVG(vt0.c0))GLOB(COUNT(*) COLLATE RTRIM))) ISNULL);
SELECT t0.c93, vt0.c0 FROM t0, v0 LEFT OUTER JOIN vt0 ON (~ (t0.c0 COLLATE BINARY)) LEFT OUTER JOIN rt1 ON CAST(rt1.c3 COLLATE BINARY AS BLOB) GROUP BY t0.c93, vt0.c0;
SELECT ALL * FROM rt1, vt0, t0;
SELECT * FROM rt1, vt0, t0 WHERE (((0.30451466372751324) IS FALSE)) UNION ALL SELECT ALL * FROM rt1, vt0, t0 WHERE ((NOT (((0.30451466372751324) IS FALSE)))) UNION ALL SELECT ALL * FROM rt1, vt0, t0 WHERE (((((0.30451466372751324) IS FALSE)) ISNULL));
SELECT ALL * FROM rt1, vt0, t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((~ ((v0.c0 IN ())))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((~ ((v0.c0 IN ())))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((~ ((v0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c93, v0.c0, rt1.c3, rt1.c2, rt1.c0 FROM v0, rt1, t0, vt0 GROUP BY t0.c93, v0.c0, rt1.c3, rt1.c2, rt1.c0;
SELECT t0.c93, v0.c0, rt1.c3, rt1.c2, rt1.c0 FROM v0, rt1, t0, vt0 WHERE ((~ ((((v0.c2, v0.c1, v0.c0)) NOT BETWEEN ((t0.c93, v0.c2, rt1.c3)) AND ((rt1.c2, rt1.c0, rt1.c3)))))) GROUP BY t0.c93, v0.c0, rt1.c3, rt1.c2, rt1.c0 UNION SELECT t0.c93, v0.c0, rt1.c3, rt1.c2, rt1.c0 FROM v0, rt1, t0, vt0 WHERE ((NOT ((~ ((((v0.c2, v0.c1, v0.c0)) NOT BETWEEN ((t0.c93, v0.c2, rt1.c3)) AND ((rt1.c2, rt1.c0, rt1.c3)))))))) GROUP BY t0.c93, v0.c0, rt1.c3, rt1.c2, rt1.c0 UNION SELECT t0.c93, v0.c0, rt1.c3, rt1.c2, rt1.c0 FROM v0, rt1, t0, vt0 WHERE ((((~ ((((v0.c2, v0.c1, v0.c0)) NOT BETWEEN ((t0.c93, v0.c2, rt1.c3)) AND ((rt1.c2, rt1.c0, rt1.c3)))))) ISNULL)) GROUP BY t0.c93, v0.c0, rt1.c3, rt1.c2, rt1.c0;
SELECT t0.c93, v0.c0, rt1.c3, rt1.c2, rt1.c0 FROM v0, rt1, t0, vt0 GROUP BY t0.c93, v0.c0, rt1.c3, rt1.c2, rt1.c0;
SELECT ALL v0.c1 FROM v0, vt0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0, vt0 GROUP BY v0.c1 HAVING ((((v0.c0)AND((((v0.c2, v0.c0, v0.c2))>=((MAX(NULL), v0.c1, v0.c1))))))AND(MIN(v0.c2))) UNION ALL SELECT v0.c1 FROM v0, vt0 GROUP BY v0.c1 HAVING (NOT (((((v0.c0)AND((((v0.c2, v0.c0, v0.c2))>=((MAX(NULL), v0.c1, v0.c1))))))AND(MIN(v0.c2))))) UNION ALL SELECT v0.c1 FROM v0, vt0 NOT INDEXED GROUP BY v0.c1 HAVING ((((((v0.c0)AND((((v0.c2, v0.c0, v0.c2))>=((MAX(NULL), v0.c1, v0.c1))))))AND(MIN(v0.c2)))) ISNULL);
SELECT ALL v0.c1 FROM v0, vt0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0, vt0 GROUP BY v0.c1 HAVING ((((v0.c0)AND((((v0.c2, v0.c0, v0.c2))>=((MAX(NULL), v0.c1, v0.c1))))))AND(MIN(v0.c2))) UNION ALL SELECT v0.c1 FROM v0, vt0 GROUP BY v0.c1 HAVING (NOT (((((v0.c0)AND((((v0.c2, v0.c0, v0.c2))>=((MAX(NULL), v0.c1, v0.c1))))))AND(MIN(v0.c2))))) UNION ALL SELECT v0.c1 FROM v0, vt0 NOT INDEXED GROUP BY v0.c1 HAVING ((((((v0.c0)AND((((v0.c2, v0.c0, v0.c2))>=((MAX(NULL), v0.c1, v0.c1))))))AND(MIN(v0.c2)))) ISNULL);
SELECT ALL v0.c1 FROM v0, vt0 GROUP BY v0.c1;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (v0.c2) ORDER BY CASE v0.c0  WHEN ((((((((v0.c1)OR(v0.c1)))OR(v0.c1)))OR(v0.c2)))AND(v0.c2)) THEN ((v0.c1)>=(v0.c0)) ELSE 0.38600074359450043 END  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((NOT (v0.c2))) ORDER BY CASE v0.c0  WHEN ((((((((v0.c1)OR(v0.c1)))OR(v0.c1)))OR(v0.c2)))AND(v0.c2)) THEN ((v0.c1)>=(v0.c0)) ELSE 0.38600074359450043 END  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((v0.c2) ISNULL)) ORDER BY CASE v0.c0  WHEN ((((((((v0.c1)OR(v0.c1)))OR(v0.c1)))OR(v0.c2)))AND(v0.c2)) THEN ((v0.c1)>=(v0.c0)) ELSE 0.38600074359450043 END  NULLS LAST;
SELECT * FROM v0;
SELECT DISTINCT v0.c2 FROM v0;
SELECT DISTINCT v0.c2 FROM v0 WHERE (((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2)))>=(CASE WHEN v0.c1 THEN v0.c2 END))) UNION SELECT DISTINCT v0.c2 FROM v0 WHERE ((NOT (((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2)))>=(CASE WHEN v0.c1 THEN v0.c2 END))))) UNION SELECT DISTINCT v0.c2 FROM v0 WHERE (((((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2)))>=(CASE WHEN v0.c1 THEN v0.c2 END))) ISNULL));
SELECT DISTINCT v0.c2 FROM v0;
SELECT rt1.c1, v0.c0, v0.c1, rt1.c3, rt1.c2, v0.c2, vt0.c0, rt1.c0 FROM v0 CROSS JOIN rt1 ON (NOT (json(v0.c0))) FULL OUTER JOIN vt0 ON (((rt1.c0, v0.c1, rt1.c1)) BETWEEN (((NOT (vt0.c0)), v0.c0, ((v0.c2)IS(v0.c1)))) AND ((((rt1.c0) NOTNULL), (((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c1))), ((((v0.c0)OR(v0.c2)))OR(rt1.c3))))) GROUP BY rt1.c1, v0.c0, v0.c1, rt1.c3, rt1.c2, v0.c2, vt0.c0, rt1.c0;
SELECT ALL rt1.c1, v0.c0, v0.c1, rt1.c3, rt1.c2, v0.c2, vt0.c0, rt1.c0 FROM v0 CROSS JOIN rt1 ON (NOT (json(v0.c0))) FULL OUTER JOIN vt0 ON (((rt1.c0, v0.c1, rt1.c1)) BETWEEN (((NOT (vt0.c0)), v0.c0, ((v0.c2)IS(v0.c1)))) AND ((((rt1.c0) NOTNULL), (((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c1))), ((((v0.c0)OR(v0.c2)))OR(rt1.c3))))) WHERE ((rt1.c0 IN ())) GROUP BY rt1.c1, v0.c0, v0.c1, rt1.c3, rt1.c2, v0.c2, vt0.c0, rt1.c0 UNION SELECT ALL rt1.c1, v0.c0, v0.c1, rt1.c3, rt1.c2, v0.c2, vt0.c0, rt1.c0 FROM v0 CROSS JOIN rt1 ON (NOT (json(v0.c0))) FULL OUTER JOIN vt0 ON (((rt1.c0, v0.c1, rt1.c1)) BETWEEN (((NOT (vt0.c0)), v0.c0, ((v0.c2)IS(v0.c1)))) AND ((((rt1.c0) NOTNULL), (((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c1))), ((((v0.c0)OR(v0.c2)))OR(rt1.c3))))) WHERE ((NOT ((rt1.c0 IN ())))) GROUP BY rt1.c1, v0.c0, v0.c1, rt1.c3, rt1.c2, v0.c2, vt0.c0, rt1.c0 UNION SELECT rt1.c1, v0.c0, v0.c1, rt1.c3, rt1.c2, v0.c2, vt0.c0, rt1.c0 FROM v0 CROSS JOIN rt1 ON (NOT (json(v0.c0))) FULL OUTER JOIN vt0 ON (((rt1.c0, v0.c1, rt1.c1)) BETWEEN (((NOT (vt0.c0)), v0.c0, ((v0.c2)IS(v0.c1)))) AND ((((rt1.c0) NOTNULL), (((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c1))), ((((v0.c0)OR(v0.c2)))OR(rt1.c3))))) WHERE ((((rt1.c0 IN ())) ISNULL)) GROUP BY rt1.c1, v0.c0, v0.c1, rt1.c3, rt1.c2, v0.c2, vt0.c0, rt1.c0;
SELECT rt1.c1, v0.c0, v0.c1, rt1.c3, rt1.c2, v0.c2, vt0.c0, rt1.c0 FROM v0 CROSS JOIN rt1 ON (NOT (json(v0.c0))) FULL OUTER JOIN vt0 ON (((rt1.c0, v0.c1, rt1.c1)) BETWEEN (((NOT (vt0.c0)), v0.c0, ((v0.c2)IS(v0.c1)))) AND ((((rt1.c0) NOTNULL), (((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c1))), ((((v0.c0)OR(v0.c2)))OR(rt1.c3))))) GROUP BY rt1.c1, v0.c0, v0.c1, rt1.c3, rt1.c2, v0.c2, vt0.c0, rt1.c0;
SELECT vt0.c0, rt1.c0, rt1.c2, rt1.c1, v0.c1, rt1.c3 FROM v0, rt1 NOT INDEXED, t0, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1, v0.c1, rt1.c3;
SELECT ALL vt0.c0, rt1.c0, rt1.c2, rt1.c1, v0.c1, rt1.c3 FROM v0, rt1, t0, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1, v0.c1, rt1.c3 HAVING AVG(rt1.c0) UNION ALL SELECT ALL vt0.c0, rt1.c0, rt1.c2, rt1.c1, v0.c1, rt1.c3 FROM v0, rt1, t0, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1, v0.c1, rt1.c3 HAVING (NOT (AVG(rt1.c0))) UNION ALL SELECT vt0.c0, rt1.c0, rt1.c2, rt1.c1, v0.c1, rt1.c3 FROM v0, rt1, t0, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1, v0.c1, rt1.c3 HAVING ((AVG(rt1.c0)) ISNULL);
SELECT vt0.c0, rt1.c0, rt1.c2, rt1.c1, v0.c1, rt1.c3 FROM v0, rt1 NOT INDEXED, t0, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1, v0.c1, rt1.c3;
SELECT ALL vt0.c0, rt1.c0, rt1.c2, rt1.c1, v0.c1, rt1.c3 FROM v0, rt1, t0, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1, v0.c1, rt1.c3 HAVING AVG(rt1.c0) UNION ALL SELECT ALL vt0.c0, rt1.c0, rt1.c2, rt1.c1, v0.c1, rt1.c3 FROM v0, rt1, t0, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1, v0.c1, rt1.c3 HAVING (NOT (AVG(rt1.c0))) UNION ALL SELECT vt0.c0, rt1.c0, rt1.c2, rt1.c1, v0.c1, rt1.c3 FROM v0, rt1, t0, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1, v0.c1, rt1.c3 HAVING ((AVG(rt1.c0)) ISNULL);
SELECT vt0.c0, rt1.c0, rt1.c2, rt1.c1, v0.c1, rt1.c3 FROM v0, rt1 NOT INDEXED, t0, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c2, rt1.c1, v0.c1, rt1.c3;
SELECT ALL * FROM t0, rt1, v0, vt0;
SELECT ALL * FROM t0, rt1, v0, vt0 WHERE (rt1.c3) UNION ALL SELECT * FROM t0, rt1, v0, vt0 WHERE ((NOT (rt1.c3))) UNION ALL SELECT ALL * FROM t0, rt1, v0, vt0 WHERE (((rt1.c3) ISNULL));
SELECT ALL * FROM t0, rt1, v0, vt0;
SELECT DISTINCT * FROM t0, rt1, vt0, v0;
SELECT DISTINCT * FROM t0, rt1, vt0, v0 WHERE ((((- (rt1.c2))) NOT BETWEEN (((v0.c1) NOT BETWEEN (0x73c86957) AND (v0.c2))) AND (CAST(v0.c0 AS INTEGER)))) UNION SELECT DISTINCT * FROM t0, rt1, vt0, v0 WHERE ((NOT ((((- (rt1.c2))) NOT BETWEEN (((v0.c1) NOT BETWEEN (0x73c86957) AND (v0.c2))) AND (CAST(v0.c0 AS INTEGER)))))) UNION SELECT DISTINCT * FROM t0, rt1, vt0, v0 WHERE ((((((- (rt1.c2))) NOT BETWEEN (((v0.c1) NOT BETWEEN (0X73c86957) AND (v0.c2))) AND (CAST(v0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM t0, rt1, vt0, v0;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 WHERE (((CAST(rt1.c2 AS TEXT)) BETWEEN (CAST(rt1.c0 AS BLOB)) AND (((rt1.c2) BETWEEN (NULL) AND (0x10e6f6db))))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT (((CAST(rt1.c2 AS TEXT)) BETWEEN (CAST(rt1.c0 AS BLOB)) AND (((rt1.c2) BETWEEN (NULL) AND (0X10e6f6db))))))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE (((((CAST(rt1.c2 AS TEXT)) BETWEEN (CAST(rt1.c0 AS BLOB)) AND (((rt1.c2) BETWEEN (NULL) AND (0X10e6f6db))))) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(((((((((SUM(COUNT(COUNT(*))))OR(MAX(t0.c0))))OR(t0.c93)))OR(SUM(SUM(t0.c93)))))AND(GROUP_CONCAT(TOTAL(MAX(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(((((((((SUM(COUNT(COUNT(*))))OR(MAX(t0.c0))))OR(t0.c93)))OR(SUM(SUM(t0.c93)))))AND(GROUP_CONCAT(TOTAL(MAX(t0.c0)))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(((((((((SUM(COUNT(COUNT(*))))OR(MAX(t0.c0))))OR(t0.c93)))OR(SUM(SUM(t0.c93)))))AND(GROUP_CONCAT(TOTAL(MAX(t0.c0))))))) ISNULL);
SELECT v0.c1 FROM v0, t0, vt0;
SELECT v0.c1 FROM v0, t0, vt0 WHERE (v0.c1) UNION ALL SELECT v0.c1 FROM v0, t0, vt0 WHERE ((NOT (v0.c1))) UNION ALL SELECT ALL v0.c1 FROM v0, t0, vt0 WHERE (((v0.c1) ISNULL));
SELECT v0.c1 FROM v0, t0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))%(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS REAL))%(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))%(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT v0.c1, v0.c0 FROM v0 WHERE (CASE ((((((((v0.c1)AND(v0.c1)))OR(v0.c0)))AND(NULL)))OR(v0.c1))  WHEN (- (v0.c0)) THEN (- (x'8f29')) END) GROUP BY v0.c1, v0.c0 UNION SELECT v0.c1, v0.c0 FROM v0 WHERE ((NOT (CASE ((((((((v0.c1)AND(v0.c1)))OR(v0.c0)))AND(NULL)))OR(v0.c1))  WHEN (- (v0.c0)) THEN (- (x'8f29')) END))) GROUP BY v0.c1, v0.c0 UNION SELECT v0.c1, v0.c0 FROM v0 WHERE (((CASE ((((((((v0.c1)AND(v0.c1)))OR(v0.c0)))AND(NULL)))OR(v0.c1))  WHEN (- (v0.c0)) THEN (- (x'8f29')) END) ISNULL)) GROUP BY v0.c1, v0.c0;
SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT rt1.c1, rt1.c2, t0.c93, rt1.c3 FROM t0, vt0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c93, rt1.c3;
SELECT ALL rt1.c1, rt1.c2, t0.c93, rt1.c3 FROM t0, vt0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c93, rt1.c3 HAVING (((TOTAL(SUM(TOTAL(NULL))))) NOT BETWEEN ((MIN(rt1.c0))) AND ((MAX(SUM(rt1.c3))))) UNION ALL SELECT ALL rt1.c1, rt1.c2, t0.c93, rt1.c3 FROM t0, vt0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c93, rt1.c3 HAVING (NOT ((((TOTAL(SUM(TOTAL(NULL))))) NOT BETWEEN ((MIN(rt1.c0))) AND ((MAX(SUM(rt1.c3))))))) UNION ALL SELECT rt1.c1, rt1.c2, t0.c93, rt1.c3 FROM t0, vt0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c93, rt1.c3 HAVING (((((TOTAL(SUM(TOTAL(NULL))))) NOT BETWEEN ((MIN(rt1.c0))) AND ((MAX(SUM(rt1.c3)))))) ISNULL);
SELECT * FROM vt0, t0 FULL OUTER JOIN rt1 ON ((ABS(DISTINCT rt1.c1))GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c3))));
SELECT * FROM vt0, t0 FULL OUTER JOIN rt1 ON ((ABS(DISTINCT rt1.c1))GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c3)))) WHERE ('1538714855') UNION ALL SELECT * FROM vt0, t0 FULL OUTER JOIN rt1 ON ((ABS(DISTINCT rt1.c1))GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c3)))) WHERE ((NOT ('1538714855'))) UNION ALL SELECT * FROM vt0, t0 FULL OUTER JOIN rt1 ON ((ABS(DISTINCT rt1.c1))GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c3)))) WHERE ((('1538714855') ISNULL));
SELECT * FROM vt0, t0 FULL OUTER JOIN rt1 ON ((ABS(DISTINCT rt1.c1))GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c3))));
SELECT DISTINCT * FROM v0, t0 INNER JOIN rt1 ON (CASE WHEN t0.c93 THEN rt1.c3 ELSE t0.c93 END IN ());
SELECT DISTINCT * FROM v0, t0 INNER JOIN rt1 ON (CASE WHEN t0.c93 THEN rt1.c3 ELSE t0.c93 END IN ()) WHERE ((NOT (rt1.c2 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0, t0 INNER JOIN rt1 ON (CASE WHEN t0.c93 THEN rt1.c3 ELSE t0.c93 END IN ()) WHERE ((NOT ((NOT (rt1.c2 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM v0, t0 INNER JOIN rt1 ON (CASE WHEN t0.c93 THEN rt1.c3 ELSE t0.c93 END IN ()) WHERE ((((NOT (rt1.c2 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM v0, t0 INNER JOIN rt1 ON (CASE WHEN t0.c93 THEN rt1.c3 ELSE t0.c93 END IN ());
SELECT v0.c1, rt1.c1, v0.c2, rt1.c0 FROM rt1, v0 GROUP BY v0.c1, rt1.c1, v0.c2, rt1.c0;
SELECT v0.c1, rt1.c1, v0.c2, rt1.c0 FROM rt1, v0 WHERE (CAST(v0.c0 AS REAL)) GROUP BY v0.c1, rt1.c1, v0.c2, rt1.c0 UNION SELECT v0.c1, rt1.c1, v0.c2, rt1.c0 FROM rt1, v0 WHERE ((NOT (CAST(v0.c0 AS REAL)))) GROUP BY v0.c1, rt1.c1, v0.c2, rt1.c0 UNION SELECT v0.c1, rt1.c1, v0.c2, rt1.c0 FROM rt1, v0 WHERE (((CAST(v0.c0 AS REAL)) ISNULL)) GROUP BY v0.c1, rt1.c1, v0.c2, rt1.c0;
SELECT v0.c1, rt1.c1, v0.c2, rt1.c0 FROM rt1, v0 GROUP BY v0.c1, rt1.c1, v0.c2, rt1.c0;
SELECT v0.c2, vt0.c0, t0.c0, rt1.c1, v0.c1, rt1.c2, rt1.c0 FROM rt1, v0 RIGHT OUTER JOIN vt0 ON ((((rt1.c3)>(0.3978050370602182)))>=(CASE WHEN rt1.c2 THEN t0.c0 WHEN rt1.c3 THEN v0.c0 WHEN v0.c2 THEN 0.5885972274582525 WHEN rt1.c0 THEN rt1.c2 WHEN t0.c0 THEN rt1.c3 WHEN v0.c1 THEN v0.c0 WHEN rt1.c0 THEN t0.c93 END)) CROSS JOIN t0 ON CAST(((rt1.c0) NOT NULL) AS TEXT) GROUP BY v0.c2, vt0.c0, t0.c0, rt1.c1, v0.c1, rt1.c2, rt1.c0;
SELECT ALL * FROM vt0, t0, v0, rt1;
SELECT ALL * FROM vt0, t0, v0, rt1 WHERE ((((rt1.c3 IN ())) IS TRUE)) UNION ALL SELECT * FROM vt0, t0, v0, rt1 WHERE ((NOT ((((rt1.c3 IN ())) IS TRUE)))) UNION ALL SELECT * FROM vt0, t0, v0, rt1 WHERE ((((((rt1.c3 IN ())) IS TRUE)) ISNULL));
SELECT ALL * FROM vt0, t0, v0, rt1;
SELECT DISTINCT v0.c0, v0.c1 FROM vt0, v0;
SELECT DISTINCT v0.c0, v0.c1 FROM vt0, v0 WHERE ((((NOT (v0.c1)))IS NOT((((vt0.c0))<((v0.c0)))))) UNION SELECT DISTINCT v0.c0, v0.c1 FROM vt0, v0 WHERE ((NOT ((((NOT (v0.c1)))IS NOT((((vt0.c0))<((v0.c0)))))))) UNION SELECT DISTINCT v0.c0, v0.c1 FROM vt0, v0 WHERE ((((((NOT (v0.c1)))IS NOT((((vt0.c0))<((v0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0, v0.c1 FROM vt0, v0;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (CAST('wQz5' AS INTEGER)) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (CAST('wQz5' AS INTEGER)))) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((CAST('wQz5' AS INTEGER)) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL t0.c93 FROM t0 CROSS JOIN vt0 ON ((((vt0.c0)OR((((t0.c93))<>((t0.c93))))))AND(((((t0.c0)OR(t0.c0)))OR(t0.c0)))) GROUP BY t0.c93;
SELECT ALL t0.c93 FROM t0 CROSS JOIN vt0 ON ((((vt0.c0)OR((((t0.c93))!=((t0.c93))))))AND(((((t0.c0)OR(t0.c0)))OR(t0.c0)))) GROUP BY t0.c93 HAVING ((((((AVG(AVG(MAX(vt0.c0))))GLOB(MAX(vt0.c0))))AND(COUNT(t0.c93))))AND(COUNT(*))) UNION ALL SELECT t0.c93 FROM t0 CROSS JOIN vt0 ON ((((vt0.c0)OR((((t0.c93))!=((t0.c93))))))AND(((((t0.c0)OR(t0.c0)))OR(t0.c0)))) GROUP BY t0.c93 HAVING (NOT (((((((AVG(AVG(MAX(vt0.c0))))GLOB(MAX(vt0.c0))))AND(COUNT(t0.c93))))AND(COUNT(*))))) UNION ALL SELECT ALL t0.c93 FROM t0 CROSS JOIN vt0 ON ((((vt0.c0)OR((((t0.c93))<>((t0.c93))))))AND(((((t0.c0)OR(t0.c0)))OR(t0.c0)))) GROUP BY t0.c93 HAVING ((((((((AVG(AVG(MAX(vt0.c0))))GLOB(MAX(vt0.c0))))AND(COUNT(t0.c93))))AND(COUNT(*)))) ISNULL);
SELECT ALL MIN((QUOTE(rt1.c3) IN ())) FROM t0, vt0, v0, rt1 ORDER BY CAST(rt1.c0 AS INTEGER) COLLATE BINARY ASC, (((0xffffffff85ed6c64)) NOT BETWEEN ((((v0.c0)%(v0.c0)))) AND ((((((rt1.c2)OR(rt1.c0)))AND(rt1.c3)))));
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0)) COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((NOT (vt0.c0)) COLLATE NOCASE))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((NOT (vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((CAST(v0.c1 AS INTEGER))<(((v0.c2)GLOB(v0.c1))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((CAST(v0.c1 AS INTEGER))<(((v0.c2)GLOB(v0.c1))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((CAST(v0.c1 AS INTEGER))<(((v0.c2)GLOB(v0.c1))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c93, t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c93, t0.c0, vt0.c0;
SELECT ALL t0.c93, t0.c0, vt0.c0 FROM vt0, t0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)) GROUP BY t0.c93, t0.c0, vt0.c0 UNION SELECT t0.c93, t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)))) GROUP BY t0.c93, t0.c0, vt0.c0 UNION SELECT ALL t0.c93, t0.c0, vt0.c0 FROM vt0, t0 WHERE (((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)) ISNULL)) GROUP BY t0.c93, t0.c0, vt0.c0;
SELECT t0.c93, t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c93, t0.c0, vt0.c0;
SELECT ALL t0.c0, t0.c93 FROM t0 GROUP BY t0.c0, t0.c93;
SELECT t0.c0, t0.c93 FROM t0 GROUP BY t0.c0, t0.c93 HAVING MAX(MAX(COUNT(t0.c93))) UNION ALL SELECT ALL t0.c0, t0.c93 FROM t0 GROUP BY t0.c0, t0.c93 HAVING (NOT (MAX(MAX(COUNT(t0.c93))))) UNION ALL SELECT ALL t0.c0, t0.c93 FROM t0 GROUP BY t0.c0, t0.c93 HAVING ((MAX(MAX(COUNT(t0.c93)))) ISNULL);
SELECT rt1.c2, rt1.c0, rt1.c1, rt1.c3 FROM rt1;
SELECT rt1.c2, rt1.c0, rt1.c1, rt1.c3 FROM rt1 WHERE ((('')LIKE((((rt1.c1))<>((rt1.c1)))))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1, rt1.c3 FROM rt1 WHERE ((NOT ((('')LIKE((((rt1.c1))<>((rt1.c1)))))))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1, rt1.c3 FROM rt1 WHERE ((((('')LIKE((((rt1.c1))<>((rt1.c1)))))) ISNULL));
SELECT rt1.c2, rt1.c0, rt1.c1, rt1.c3 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c1, v0.c1, v0.c0 FROM v0, t0, vt0 LEFT OUTER JOIN rt1 ON TYPEOF(DISTINCT ((((rt1.c2)AND(rt1.c2)))AND(t0.c93)));
SELECT DISTINCT rt1.c2, rt1.c1, v0.c1, v0.c0 FROM v0, t0, vt0 LEFT OUTER JOIN rt1 ON TYPEOF(DISTINCT ((((rt1.c2)AND(rt1.c2)))AND(t0.c93))) WHERE ((((rt1.c3)) NOT BETWEEN ((((t0.c93)-(rt1.c2)))) AND (((- ('')))))) UNION SELECT DISTINCT rt1.c2, rt1.c1, v0.c1, v0.c0 FROM v0, t0, vt0 LEFT OUTER JOIN rt1 ON TYPEOF(DISTINCT ((((rt1.c2)AND(rt1.c2)))AND(t0.c93))) WHERE ((NOT ((((rt1.c3)) NOT BETWEEN ((((t0.c93)-(rt1.c2)))) AND (((- ('')))))))) UNION SELECT DISTINCT rt1.c2, rt1.c1, v0.c1, v0.c0 FROM v0, t0, vt0 LEFT OUTER JOIN rt1 ON TYPEOF(DISTINCT ((((rt1.c2)AND(rt1.c2)))AND(t0.c93))) WHERE ((((((rt1.c3)) NOT BETWEEN ((((t0.c93)-(rt1.c2)))) AND (((- ('')))))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1, v0.c1, v0.c0 FROM v0, t0, vt0 LEFT OUTER JOIN rt1 ON TYPEOF(DISTINCT ((((rt1.c2)AND(rt1.c2)))AND(t0.c93)));
SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE (0.08569985742157371) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (0.08569985742157371))) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c0 UNION SELECT rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE (((0.08569985742157371) ISNULL)) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c0;
SELECT ALL v0.c1, vt0.c0 FROM t0, v0, rt1 RIGHT OUTER JOIN vt0 ON v0.c2 GROUP BY v0.c1, vt0.c0;
SELECT v0.c1, vt0.c0 FROM t0, v0, rt1 RIGHT OUTER JOIN vt0 ON v0.c2 GROUP BY v0.c1, vt0.c0 HAVING MAX(((COUNT(t0.c93)) BETWEEN (rt1.c3) AND (SUM(rt1.c2)))) UNION ALL SELECT v0.c1, vt0.c0 FROM t0, v0, rt1 RIGHT OUTER JOIN vt0 ON v0.c2 GROUP BY v0.c1, vt0.c0 HAVING (NOT (MAX(((COUNT(t0.c93)) BETWEEN (rt1.c3) AND (SUM(rt1.c2)))))) UNION ALL SELECT v0.c1, vt0.c0 FROM t0, v0, rt1 RIGHT OUTER JOIN vt0 ON v0.c2 GROUP BY v0.c1, vt0.c0 HAVING ((MAX(((COUNT(t0.c93)) BETWEEN (rt1.c3) AND (SUM(rt1.c2))))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((v0.c0)*(v0.c2)) COLLATE BINARY) UNION ALL SELECT * FROM v0 WHERE ((NOT (((v0.c0)*(v0.c2)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM v0 WHERE (((((v0.c0)*(v0.c2)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt1.c0, vt0.c0 FROM vt0, rt1, v0;
SELECT DISTINCT rt1.c0, vt0.c0 FROM vt0, rt1, v0 WHERE ((~ (((0X4eac746d) IS TRUE)))) UNION SELECT DISTINCT rt1.c0, vt0.c0 FROM vt0, rt1, v0 WHERE ((NOT ((~ (((0X4eac746d) IS TRUE)))))) UNION SELECT DISTINCT rt1.c0, vt0.c0 FROM vt0, rt1, v0 WHERE ((((~ (((0X4eac746d) IS TRUE)))) ISNULL));
SELECT DISTINCT rt1.c0, vt0.c0 FROM vt0, rt1, v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((LIKELIHOOD(DISTINCT vt0.c0, 0.25594534210855724) IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((LIKELIHOOD(DISTINCT vt0.c0, 0.25594534210855724) IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((LIKELIHOOD(DISTINCT vt0.c0, 0.25594534210855724) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c3, v0.c2, rt1.c2, vt0.c0, v0.c0 FROM v0, rt1, vt0, t0 GROUP BY rt1.c3, v0.c2, rt1.c2, vt0.c0, v0.c0;
SELECT rt1.c3, v0.c2, rt1.c2, vt0.c0, v0.c0 FROM v0, rt1, vt0, t0 GROUP BY rt1.c3, v0.c2, rt1.c2, vt0.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(rt1.c3))) UNION ALL SELECT ALL rt1.c3, v0.c2, rt1.c2, vt0.c0, v0.c0 FROM v0, rt1, vt0, t0 GROUP BY rt1.c3, v0.c2, rt1.c2, vt0.c0, v0.c0 HAVING (NOT ((NOT (GROUP_CONCAT(rt1.c3))))) UNION ALL SELECT rt1.c3, v0.c2, rt1.c2, vt0.c0, v0.c0 FROM v0, rt1, vt0, t0 GROUP BY rt1.c3, v0.c2, rt1.c2, vt0.c0, v0.c0 HAVING (((NOT (GROUP_CONCAT(rt1.c3)))) ISNULL);
SELECT ALL rt1.c3, v0.c2, rt1.c2, vt0.c0, v0.c0 FROM v0, rt1, vt0, t0 GROUP BY rt1.c3, v0.c2, rt1.c2, vt0.c0, v0.c0;
SELECT rt1.c3, v0.c2, rt1.c2, vt0.c0, v0.c0 FROM v0, rt1, vt0, t0 GROUP BY rt1.c3, v0.c2, rt1.c2, vt0.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(rt1.c3))) UNION ALL SELECT ALL rt1.c3, v0.c2, rt1.c2, vt0.c0, v0.c0 FROM v0, rt1, vt0, t0 GROUP BY rt1.c3, v0.c2, rt1.c2, vt0.c0, v0.c0 HAVING (NOT ((NOT (GROUP_CONCAT(rt1.c3))))) UNION ALL SELECT rt1.c3, v0.c2, rt1.c2, vt0.c0, v0.c0 FROM v0, rt1, vt0, t0 GROUP BY rt1.c3, v0.c2, rt1.c2, vt0.c0, v0.c0 HAVING (((NOT (GROUP_CONCAT(rt1.c3)))) ISNULL);
SELECT ALL rt1.c3, v0.c2, rt1.c2, vt0.c0, v0.c0 FROM v0, rt1, vt0, t0 GROUP BY rt1.c3, v0.c2, rt1.c2, vt0.c0, v0.c0;
SELECT ALL * FROM t0, rt1, v0, vt0;
SELECT * FROM t0, rt1, v0, vt0 WHERE (((((t0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0)))|(rt1.c2))) UNION ALL SELECT ALL * FROM t0, rt1, v0, vt0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0)))|(rt1.c2))))) UNION ALL SELECT * FROM t0, rt1, v0, vt0 WHERE (((((((t0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0)))|(rt1.c2))) ISNULL));
SELECT ALL * FROM t0, rt1, v0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (HEX(DISTINCT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (HEX(DISTINCT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((HEX(DISTINCT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c3;
SELECT rt1.c2, rt1.c3 FROM rt1 WHERE (((UPPER(rt1.c3))!=(UNLIKELY(rt1.c1)))) GROUP BY rt1.c2, rt1.c3 UNION SELECT ALL rt1.c2, rt1.c3 FROM rt1 WHERE ((NOT (((UPPER(rt1.c3))!=(UNLIKELY(rt1.c1)))))) GROUP BY rt1.c2, rt1.c3 UNION SELECT ALL rt1.c2, rt1.c3 FROM rt1 WHERE (((((UPPER(rt1.c3))!=(UNLIKELY(rt1.c1)))) ISNULL)) GROUP BY rt1.c2, rt1.c3;
SELECT rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c2, rt1.c3;
SELECT ALL v0.c1, vt0.c0, rt1.c0, rt1.c2, v0.c2, t0.c93, t0.c0, rt1.c1 FROM t0, rt1, vt0, v0 GROUP BY v0.c1, vt0.c0, rt1.c0, rt1.c2, v0.c2, t0.c93, t0.c0, rt1.c1;
SELECT ALL v0.c1, vt0.c0, rt1.c0, rt1.c2, v0.c2, t0.c93, t0.c0, rt1.c1 FROM t0, rt1, vt0, v0 GROUP BY v0.c1, vt0.c0, rt1.c0, rt1.c2, v0.c2, t0.c93, t0.c0, rt1.c1 HAVING MIN(AVG(COUNT(*))) UNION ALL SELECT v0.c1, vt0.c0, rt1.c0, rt1.c2, v0.c2, t0.c93, t0.c0, rt1.c1 FROM t0, rt1, vt0, v0 GROUP BY v0.c1, vt0.c0, rt1.c0, rt1.c2, v0.c2, t0.c93, t0.c0, rt1.c1 HAVING (NOT (MIN(AVG(COUNT(*))))) UNION ALL SELECT ALL v0.c1, vt0.c0, rt1.c0, rt1.c2, v0.c2, t0.c93, t0.c0, rt1.c1 FROM t0, rt1, vt0, v0 GROUP BY v0.c1, vt0.c0, rt1.c0, rt1.c2, v0.c2, t0.c93, t0.c0, rt1.c1 HAVING ((MIN(AVG(COUNT(*)))) ISNULL);
SELECT ALL rt1.c3, vt0.c0, rt1.c1, t0.c93 FROM t0, vt0, rt1;
SELECT ALL rt1.c3, vt0.c0, rt1.c1, t0.c93 FROM t0, vt0, rt1 WHERE (CASE WHEN (((rt1.c3)) BETWEEN (('0.8095859802485926')) AND ((t0.c93))) THEN ((t0.c93) NOT NULL) END) UNION ALL SELECT ALL rt1.c3, vt0.c0, rt1.c1, t0.c93 FROM t0, vt0, rt1 WHERE ((NOT (CASE WHEN (((rt1.c3)) BETWEEN (('0.8095859802485926')) AND ((t0.c93))) THEN ((t0.c93) NOT NULL) END))) UNION ALL SELECT ALL rt1.c3, vt0.c0, rt1.c1, t0.c93 FROM t0, vt0, rt1 WHERE (((CASE WHEN (((rt1.c3)) BETWEEN (('0.8095859802485926')) AND ((t0.c93))) THEN ((t0.c93) NOT NULL) END) ISNULL));
SELECT ALL rt1.c3, vt0.c0, rt1.c1, t0.c93 FROM t0, vt0, rt1;
SELECT DISTINCT * FROM rt1 NATURAL JOIN v0;
SELECT DISTINCT * FROM rt1 NATURAL JOIN v0 WHERE (((((v0.c2)%(v0.c2))) NOT BETWEEN (((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c0))) AND (v0.c2 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt1 NOT INDEXED NATURAL JOIN v0 WHERE ((NOT (((((v0.c2)%(v0.c2))) NOT BETWEEN (((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c0))) AND (v0.c2 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM rt1 NATURAL JOIN v0 WHERE (((((((v0.c2)%(v0.c2))) NOT BETWEEN (((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c0))) AND (v0.c2 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM rt1 NATURAL JOIN v0;
SELECT rt1.c3, rt1.c0, t0.c0, rt1.c2, vt0.c0, t0.c93, rt1.c1 FROM vt0, rt1 FULL OUTER JOIN t0 ON LOWER(vt0.c0) COLLATE RTRIM GROUP BY rt1.c3, rt1.c0, t0.c0, rt1.c2, vt0.c0, t0.c93, rt1.c1;
SELECT ALL rt1.c3, rt1.c0, t0.c0, rt1.c2, vt0.c0, t0.c93, rt1.c1 FROM vt0, rt1 FULL OUTER JOIN t0 ON LOWER(vt0.c0) COLLATE RTRIM WHERE (vt0.c0 COLLATE BINARY) GROUP BY rt1.c3, rt1.c0, t0.c0, rt1.c2, vt0.c0, t0.c93, rt1.c1 UNION SELECT rt1.c3, rt1.c0, t0.c0, rt1.c2, vt0.c0, t0.c93, rt1.c1 FROM vt0, rt1 FULL OUTER JOIN t0 ON LOWER(vt0.c0) COLLATE RTRIM WHERE ((NOT (vt0.c0 COLLATE BINARY))) GROUP BY rt1.c3, rt1.c0, t0.c0, rt1.c2, vt0.c0, t0.c93, rt1.c1 UNION SELECT ALL rt1.c3, rt1.c0, t0.c0, rt1.c2, vt0.c0, t0.c93, rt1.c1 FROM vt0, rt1 FULL OUTER JOIN t0 ON LOWER(vt0.c0) COLLATE RTRIM WHERE (((vt0.c0 COLLATE BINARY) ISNULL)) GROUP BY rt1.c3, rt1.c0, t0.c0, rt1.c2, vt0.c0, t0.c93, rt1.c1;
SELECT rt1.c3, rt1.c0, t0.c0, rt1.c2, vt0.c0, t0.c93, rt1.c1 FROM vt0, rt1 FULL OUTER JOIN t0 ON LOWER(vt0.c0) COLLATE RTRIM GROUP BY rt1.c3, rt1.c0, t0.c0, rt1.c2, vt0.c0, t0.c93, rt1.c1;
SELECT ALL rt1.c0, rt1.c3, rt1.c2, t0.c93 FROM t0, rt1 GROUP BY rt1.c0, rt1.c3, rt1.c2, t0.c93;
SELECT rt1.c0, rt1.c3, rt1.c2, t0.c93 FROM t0, rt1 GROUP BY rt1.c0, rt1.c3, rt1.c2, t0.c93 HAVING MIN(((((((((MAX(TOTAL(t0.c0)))OR(COUNT(*))))OR(SUM(rt1.c1))))AND(SUM(MAX(MAX(AVG(t0.c93)))))))AND(MAX(t0.c0)))) UNION ALL SELECT ALL rt1.c0, rt1.c3, rt1.c2, t0.c93 FROM t0, rt1 GROUP BY rt1.c0, rt1.c3, rt1.c2, t0.c93 HAVING (NOT (MIN(((((((((MAX(TOTAL(t0.c0)))OR(COUNT(*))))OR(SUM(rt1.c1))))AND(SUM(MAX(MAX(AVG(t0.c93)))))))AND(MAX(t0.c0)))))) UNION ALL SELECT ALL rt1.c0, rt1.c3, rt1.c2, t0.c93 FROM t0, rt1 GROUP BY rt1.c0, rt1.c3, rt1.c2, t0.c93 HAVING ((MIN(((((((((MAX(TOTAL(t0.c0)))OR(COUNT(*))))OR(SUM(rt1.c1))))AND(SUM(MAX(MAX(AVG(t0.c93)))))))AND(MAX(t0.c0))))) ISNULL);
SELECT vt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON (- (((((rt1.c0)OR(rt1.c2)))AND(vt0.c0))));
SELECT vt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON (- (((((rt1.c0)OR(rt1.c2)))AND(vt0.c0)))) WHERE (((((((((((rt1.c3)AND(vt0.c0)))OR(vt0.c0)))OR('452561850')))AND(vt0.c0))) NOT BETWEEN (((rt1.c2)<(rt1.c3))) AND (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON (- (((((rt1.c0)OR(rt1.c2)))AND(vt0.c0)))) WHERE ((NOT (((((((((((rt1.c3)AND(vt0.c0)))OR(vt0.c0)))OR('452561850')))AND(vt0.c0))) NOT BETWEEN (((rt1.c2)<(rt1.c3))) AND (vt0.c0))))) UNION ALL SELECT vt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON (- (((((rt1.c0)OR(rt1.c2)))AND(vt0.c0)))) WHERE (((((((((((((rt1.c3)AND(vt0.c0)))OR(vt0.c0)))OR('452561850')))AND(vt0.c0))) NOT BETWEEN (((rt1.c2)<(rt1.c3))) AND (vt0.c0))) ISNULL));
SELECT vt0.c0 FROM rt1 FULL OUTER JOIN vt0 ON (- (((((rt1.c0)OR(rt1.c2)))AND(vt0.c0))));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (0.6772631577466278) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (0.6772631577466278))) UNION SELECT DISTINCT * FROM t0 WHERE (((0.6772631577466278) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt1.c2, rt1.c1 FROM rt1, t0 NOT INDEXED GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1, t0 WHERE (CAST(((x'')<(rt1.c0)) AS TEXT)) GROUP BY rt1.c2, rt1.c1 UNION SELECT rt1.c2, rt1.c1 FROM rt1, t0 WHERE ((NOT (CAST(((x'')<(rt1.c0)) AS TEXT)))) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM rt1, t0 WHERE (((CAST(((x'')<(rt1.c0)) AS TEXT)) ISNULL)) GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1, t0 NOT INDEXED GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c0, v0.c0, v0.c1, vt0.c0, rt1.c1, rt1.c2, rt1.c3 FROM v0 FULL OUTER JOIN vt0 ON (vt0.c0 IN ()) LEFT OUTER JOIN rt1 ON vt0.c0 GROUP BY rt1.c0, v0.c0, v0.c1, vt0.c0, rt1.c1, rt1.c2, rt1.c3;
SELECT ALL rt1.c0, v0.c0, v0.c1, vt0.c0, rt1.c1, rt1.c2, rt1.c3 FROM v0 FULL OUTER JOIN vt0 ON (vt0.c0 IN ()) LEFT OUTER JOIN rt1 ON vt0.c0 GROUP BY rt1.c0, v0.c0, v0.c1, vt0.c0, rt1.c1, rt1.c2, rt1.c3 HAVING ((MAX(AVG(TOTAL(MIN(v0.c1))))) BETWEEN (GROUP_CONCAT(rt1.c1)) AND (TOTAL(TOTAL(MIN(TOTAL(rt1.c3)))))) UNION ALL SELECT ALL rt1.c0, v0.c0, v0.c1, vt0.c0, rt1.c1, rt1.c2, rt1.c3 FROM v0 FULL OUTER JOIN vt0 ON (vt0.c0 IN ()) LEFT OUTER JOIN rt1 ON vt0.c0 GROUP BY rt1.c0, v0.c0, v0.c1, vt0.c0, rt1.c1, rt1.c2, rt1.c3 HAVING (NOT (((MAX(AVG(TOTAL(MIN(v0.c1))))) BETWEEN (GROUP_CONCAT(rt1.c1)) AND (TOTAL(TOTAL(MIN(TOTAL(rt1.c3)))))))) UNION ALL SELECT rt1.c0, v0.c0, v0.c1, vt0.c0, rt1.c1, rt1.c2, rt1.c3 FROM v0 FULL OUTER JOIN vt0 ON (vt0.c0 IN ()) LEFT OUTER JOIN rt1 ON vt0.c0 GROUP BY rt1.c0, v0.c0, v0.c1, vt0.c0, rt1.c1, rt1.c2, rt1.c3 HAVING ((((MAX(AVG(TOTAL(MIN(v0.c1))))) BETWEEN (GROUP_CONCAT(rt1.c1)) AND (TOTAL(TOTAL(MIN(TOTAL(rt1.c3))))))) ISNULL);
SELECT t0.c93 FROM t0, v0;
SELECT t0.c93 FROM t0, v0 WHERE ((((v0.c1, v0.c1, t0.c0, t0.c0, v0.c1)) NOT BETWEEN ((((v0.c0)/(t0.c0)), TRIM(v0.c0, v0.c1), (((t0.c93, v0.c1, t0.c0))<((v0.c0, v0.c1, t0.c0))), (((('-1324543115')OR(t0.c0)))AND(v0.c1)), COALESCE(DISTINCT v0.c1, v0.c1))) AND ((TIME(v0.c2, t0.c0, t0.c93), ((((((((t0.c93)AND(t0.c93)))AND(-853892244)))OR(t0.c0)))OR(v0.c1)), (((t0.c0, t0.c93, NULL)) NOT BETWEEN ((v0.c0, v0.c1, v0.c1)) AND ((v0.c1, v0.c2, v0.c0))), x'', CAST(t0.c93 AS INTEGER))))) UNION ALL SELECT t0.c93 FROM t0, v0 WHERE ((NOT ((((v0.c1, v0.c1, t0.c0, t0.c0, v0.c1)) NOT BETWEEN ((((v0.c0)/(t0.c0)), TRIM(v0.c0, v0.c1), (((t0.c93, v0.c1, t0.c0))<((v0.c0, v0.c1, t0.c0))), (((('-1324543115')OR(t0.c0)))AND(v0.c1)), COALESCE(DISTINCT v0.c1, v0.c1))) AND ((TIME(v0.c2, t0.c0, t0.c93), ((((((((t0.c93)AND(t0.c93)))AND(-853892244)))OR(t0.c0)))OR(v0.c1)), (((t0.c0, t0.c93, NULL)) NOT BETWEEN ((v0.c0, v0.c1, v0.c1)) AND ((v0.c1, v0.c2, v0.c0))), x'', CAST(t0.c93 AS INTEGER))))))) UNION ALL SELECT ALL t0.c93 FROM t0, v0 WHERE ((((((v0.c1, v0.c1, t0.c0, t0.c0, v0.c1)) NOT BETWEEN ((((v0.c0)/(t0.c0)), TRIM(v0.c0, v0.c1), (((t0.c93, v0.c1, t0.c0))<((v0.c0, v0.c1, t0.c0))), (((('-1324543115')OR(t0.c0)))AND(v0.c1)), COALESCE(DISTINCT v0.c1, v0.c1))) AND ((TIME(v0.c2, t0.c0, t0.c93), ((((((((t0.c93)AND(t0.c93)))AND(-853892244)))OR(t0.c0)))OR(v0.c1)), (((t0.c0, t0.c93, NULL)) NOT BETWEEN ((v0.c0, v0.c1, v0.c1)) AND ((v0.c1, v0.c2, v0.c0))), x'', CAST(t0.c93 AS INTEGER))))) ISNULL));
SELECT t0.c93 FROM t0, v0;
SELECT DISTINCT v0.c0, t0.c93 FROM vt0, t0, v0;
SELECT DISTINCT v0.c0, t0.c93 FROM vt0, t0, v0 WHERE (CASE CAST(v0.c1 AS NUMERIC)  WHEN ((((t0.c0)AND(v0.c1)))AND(t0.c0)) THEN ((t0.c93)|(vt0.c0)) WHEN ((v0.c0) NOTNULL) THEN t0.c0 WHEN ((vt0.c0) NOT NULL) THEN CASE WHEN t0.c93 THEN 0.8498383376624775 END END) UNION SELECT DISTINCT v0.c0, t0.c93 FROM vt0, t0, v0 WHERE ((NOT (CASE CAST(v0.c1 AS NUMERIC)  WHEN ((((t0.c0)AND(v0.c1)))AND(t0.c0)) THEN ((t0.c93)|(vt0.c0)) WHEN ((v0.c0) NOTNULL) THEN t0.c0 WHEN ((vt0.c0) NOT NULL) THEN CASE WHEN t0.c93 THEN 0.8498383376624775 END END))) UNION SELECT DISTINCT v0.c0, t0.c93 FROM vt0, t0, v0 WHERE (((CASE CAST(v0.c1 AS NUMERIC)  WHEN ((((t0.c0)AND(v0.c1)))AND(t0.c0)) THEN ((t0.c93)|(vt0.c0)) WHEN ((v0.c0) NOTNULL) THEN t0.c0 WHEN ((vt0.c0) NOT NULL) THEN CASE WHEN t0.c93 THEN 0.8498383376624775 END END) ISNULL));
SELECT DISTINCT v0.c0, t0.c93 FROM vt0, t0, v0;
SELECT v0.c1 FROM rt1, v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM rt1, v0 WHERE (-1437818074) GROUP BY v0.c1 UNION SELECT v0.c1 FROM rt1, v0 WHERE ((NOT (-1437818074))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM rt1, v0 WHERE (((-1437818074) ISNULL)) GROUP BY v0.c1;
SELECT v0.c1 FROM rt1, v0 GROUP BY v0.c1;
SELECT ALL vt0.c0, rt1.c1 FROM v0, vt0, t0 NATURAL JOIN rt1 GROUP BY vt0.c0, rt1.c1;
SELECT ALL vt0.c0, rt1.c1 FROM v0, vt0, t0 NATURAL JOIN rt1 GROUP BY vt0.c0, rt1.c1 HAVING AVG(TOTAL(t0.c93)) UNION ALL SELECT vt0.c0, rt1.c1 FROM v0, vt0, t0 NATURAL JOIN rt1 GROUP BY vt0.c0, rt1.c1 HAVING (NOT (AVG(TOTAL(t0.c93)))) UNION ALL SELECT vt0.c0, rt1.c1 FROM v0, vt0, t0 NATURAL JOIN rt1 GROUP BY vt0.c0, rt1.c1 HAVING ((AVG(TOTAL(t0.c93))) ISNULL);
SELECT ALL vt0.c0, rt1.c0, v0.c2, rt1.c3, rt1.c2, rt1.c1, v0.c1, v0.c0, t0.c0, t0.c93 FROM v0, t0, vt0, rt1;
SELECT ALL vt0.c0, rt1.c0, v0.c2, rt1.c3, rt1.c2, rt1.c1, v0.c1, v0.c0, t0.c0, t0.c93 FROM v0, t0, vt0, rt1 WHERE ((((UNLIKELY(rt1.c1), 0.18631503674722372, CASE WHEN rt1.c0 THEN v0.c1 ELSE t0.c0 END))!=((((((((((rt1.c0)AND(0.36279431193380907)))AND(rt1.c0)))OR(vt0.c0)))AND(-6.6644884E8)), ((rt1.c3)OR(v0.c1)), CASE WHEN vt0.c0 THEN v0.c1 ELSE rt1.c0 END)))) UNION ALL SELECT vt0.c0, rt1.c0, v0.c2, rt1.c3, rt1.c2, rt1.c1, v0.c1, v0.c0, t0.c0, t0.c93 FROM v0, t0, vt0, rt1 WHERE ((NOT ((((UNLIKELY(rt1.c1), 0.18631503674722372, CASE WHEN rt1.c0 THEN v0.c1 ELSE t0.c0 END))!=((((((((((rt1.c0)AND(0.36279431193380907)))AND(rt1.c0)))OR(vt0.c0)))AND(-6.6644884E8)), ((rt1.c3)OR(v0.c1)), CASE WHEN vt0.c0 THEN v0.c1 ELSE rt1.c0 END)))))) UNION ALL SELECT vt0.c0, rt1.c0, v0.c2, rt1.c3, rt1.c2, rt1.c1, v0.c1, v0.c0, t0.c0, t0.c93 FROM v0, t0, vt0, rt1 WHERE ((((((UNLIKELY(rt1.c1), 0.18631503674722372, CASE WHEN rt1.c0 THEN v0.c1 ELSE t0.c0 END))<>((((((((((rt1.c0)AND(0.36279431193380907)))AND(rt1.c0)))OR(vt0.c0)))AND(-6.6644884E8)), ((rt1.c3)OR(v0.c1)), CASE WHEN vt0.c0 THEN v0.c1 ELSE rt1.c0 END)))) ISNULL));
SELECT ALL vt0.c0, rt1.c0, v0.c2, rt1.c3, rt1.c2, rt1.c1, v0.c1, v0.c0, t0.c0, t0.c93 FROM v0, t0, vt0, rt1;
SELECT DISTINCT * FROM rt1, t0, vt0, v0;
SELECT DISTINCT * FROM rt1, t0, vt0, v0 WHERE ((vt0.c0 IN ()) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt1, t0, vt0, v0 WHERE ((NOT ((vt0.c0 IN ()) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt1, t0, vt0, v0 WHERE ((((vt0.c0 IN ()) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt1, t0, vt0, v0;
SELECT ALL v0.c0, t0.c93, rt1.c3 FROM t0, rt1, v0 GROUP BY v0.c0, t0.c93, rt1.c3;
SELECT ALL v0.c0, t0.c93, rt1.c3 FROM t0, rt1, v0 WHERE ((NOT (34055266))) GROUP BY v0.c0, t0.c93, rt1.c3 UNION SELECT v0.c0, t0.c93, rt1.c3 FROM t0, rt1, v0 WHERE ((NOT ((NOT (34055266))))) GROUP BY v0.c0, t0.c93, rt1.c3 UNION SELECT ALL v0.c0, t0.c93, rt1.c3 FROM t0, rt1, v0 WHERE ((((NOT (34055266))) ISNULL)) GROUP BY v0.c0, t0.c93, rt1.c3;
SELECT ALL v0.c0, t0.c93, rt1.c3 FROM t0, rt1, v0 GROUP BY v0.c0, t0.c93, rt1.c3;
SELECT ALL rt1.c3, v0.c2, t0.c0, rt1.c1, t0.c93, v0.c1 FROM rt1, t0 RIGHT OUTER JOIN v0 ON (('HA^b#D6g[')>=(CASE WHEN rt1.c1 THEN t0.c0 END)) LEFT OUTER JOIN vt0 ON rt1.c3 GROUP BY rt1.c3, v0.c2, t0.c0, rt1.c1, t0.c93, v0.c1;
SELECT ALL rt1.c3, v0.c2, t0.c0, rt1.c1, t0.c93, v0.c1 FROM rt1, t0 RIGHT OUTER JOIN v0 ON (('HA^b#D6g[')>=(CASE WHEN rt1.c1 THEN t0.c0 END)) LEFT OUTER JOIN vt0 ON rt1.c3 GROUP BY rt1.c3, v0.c2, t0.c0, rt1.c1, t0.c93, v0.c1 HAVING TOTAL(MIN(AVG(AVG(AVG('AGVe'))))) UNION ALL SELECT rt1.c3, v0.c2, t0.c0, rt1.c1, t0.c93, v0.c1 FROM rt1, t0 RIGHT OUTER JOIN v0 ON (('HA^b#D6g[')>=(CASE WHEN rt1.c1 THEN t0.c0 END)) LEFT OUTER JOIN vt0 ON rt1.c3 GROUP BY rt1.c3, v0.c2, t0.c0, rt1.c1, t0.c93, v0.c1 HAVING (NOT (TOTAL(MIN(AVG(AVG(AVG('AGVe'))))))) UNION ALL SELECT rt1.c3, v0.c2, t0.c0, rt1.c1, t0.c93, v0.c1 FROM rt1, t0 RIGHT OUTER JOIN v0 ON (('HA^b#D6g[')>=(CASE WHEN rt1.c1 THEN t0.c0 END)) LEFT OUTER JOIN vt0 ON rt1.c3 GROUP BY rt1.c3, v0.c2, t0.c0, rt1.c1, t0.c93, v0.c1 HAVING ((TOTAL(MIN(AVG(AVG(AVG('AGVe')))))) ISNULL);
SELECT ALL t0.c0, v0.c0, v0.c2, t0.c93 FROM t0, vt0 RIGHT OUTER JOIN v0 ON 0.8100840599192368;
SELECT ALL t0.c0, v0.c0, v0.c2, t0.c93 FROM t0, vt0 RIGHT OUTER JOIN v0 ON 0.8100840599192368 WHERE (((CAST(v0.c0 AS REAL)) NOT BETWEEN (((((v0.c1)OR(vt0.c0)))AND(v0.c1))) AND (((((v0.c0)AND('HtN0')))AND(v0.c2))))) UNION ALL SELECT t0.c0, v0.c0, v0.c2, t0.c93 FROM t0, vt0 RIGHT OUTER JOIN v0 ON 0.8100840599192368 WHERE ((NOT (((CAST(v0.c0 AS REAL)) NOT BETWEEN (((((v0.c1)OR(vt0.c0)))AND(v0.c1))) AND (((((v0.c0)AND('HtN0')))AND(v0.c2))))))) UNION ALL SELECT ALL t0.c0, v0.c0, v0.c2, t0.c93 FROM t0, vt0 RIGHT OUTER JOIN v0 ON 0.8100840599192368 WHERE (((((CAST(v0.c0 AS REAL)) NOT BETWEEN (((((v0.c1)OR(vt0.c0)))AND(v0.c1))) AND (((((v0.c0)AND('HtN0')))AND(v0.c2))))) ISNULL));
SELECT ALL t0.c0, v0.c0, v0.c2, t0.c93 FROM t0, vt0 RIGHT OUTER JOIN v0 ON 0.8100840599192368;
SELECT DISTINCT v0.c0, v0.c1, vt0.c0, rt1.c3, rt1.c1, t0.c0 FROM rt1, v0, t0, vt0;
SELECT DISTINCT v0.c0, v0.c1, vt0.c0, rt1.c3, rt1.c1, t0.c0 FROM rt1, v0, t0, vt0 WHERE (CASE WHEN ((vt0.c0)IS(' ')) THEN ((((((((t0.c0)AND(vt0.c0)))OR(x'5d02')))AND(v0.c2)))AND(v0.c0)) END) UNION SELECT DISTINCT v0.c0, v0.c1, vt0.c0, rt1.c3, rt1.c1, t0.c0 FROM rt1, v0, t0, vt0 WHERE ((NOT (CASE WHEN ((vt0.c0)IS(' ')) THEN ((((((((t0.c0)AND(vt0.c0)))OR(x'5d02')))AND(v0.c2)))AND(v0.c0)) END))) UNION SELECT DISTINCT v0.c0, v0.c1, vt0.c0, rt1.c3, rt1.c1, t0.c0 FROM rt1, v0, t0, vt0 WHERE (((CASE WHEN ((vt0.c0)IS(' ')) THEN ((((((((t0.c0)AND(vt0.c0)))OR(x'5d02')))AND(v0.c2)))AND(v0.c0)) END) ISNULL));
SELECT DISTINCT v0.c0, v0.c1, vt0.c0, rt1.c3, rt1.c1, t0.c0 FROM rt1, v0, t0, vt0;
SELECT v0.c0, v0.c1 FROM rt1, v0, vt0 GROUP BY v0.c0, v0.c1;
SELECT ALL v0.c0, v0.c1 FROM rt1, v0, vt0 WHERE (CAST(((v0.c1) IS FALSE) AS NUMERIC)) GROUP BY v0.c0, v0.c1 UNION SELECT v0.c0, v0.c1 FROM rt1, v0, vt0 WHERE ((NOT (CAST(((v0.c1) IS FALSE) AS NUMERIC)))) GROUP BY v0.c0, v0.c1 UNION SELECT ALL v0.c0, v0.c1 FROM rt1, v0, vt0 WHERE (((CAST(((v0.c1) IS FALSE) AS NUMERIC)) ISNULL)) GROUP BY v0.c0, v0.c1;
SELECT v0.c0, v0.c1 FROM rt1, v0, vt0 GROUP BY v0.c0, v0.c1;
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING MAX(MIN(SUM(SUM(x'')))) UNION ALL SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (NOT (MAX(MIN(SUM(SUM(x'')))))) UNION ALL SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING ((MAX(MIN(SUM(SUM(x''))))) ISNULL);
SELECT * FROM rt1, vt0;
SELECT ALL * FROM rt1, vt0 WHERE (CASE CAST(rt1.c3 AS REAL)  WHEN '2130498193' THEN '' ELSE (- (vt0.c0)) END) UNION ALL SELECT * FROM rt1, vt0 WHERE ((NOT (CASE CAST(rt1.c3 AS REAL)  WHEN '2130498193' THEN '' ELSE (- (vt0.c0)) END))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE (((CASE CAST(rt1.c3 AS REAL)  WHEN '2130498193' THEN '' ELSE (- (vt0.c0)) END) ISNULL));
SELECT * FROM rt1, vt0;
SELECT DISTINCT * FROM t0, v0, rt1;
SELECT DISTINCT * FROM t0, v0, rt1 WHERE (COALESCE(DISTINCT (NULL IN (v0.c1)), ((rt1.c3) BETWEEN (x'') AND (v0.c2)))) UNION SELECT DISTINCT * FROM t0, v0, rt1 WHERE ((NOT (COALESCE(DISTINCT (NULL IN (v0.c1)), ((rt1.c3) BETWEEN (x'') AND (v0.c2)))))) UNION SELECT DISTINCT * FROM t0, v0, rt1 WHERE (((COALESCE(DISTINCT (NULL IN (v0.c1)), ((rt1.c3) BETWEEN (x'') AND (v0.c2)))) ISNULL));
SELECT DISTINCT * FROM t0, v0, rt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE x'' END THEN vt0.c0 COLLATE BINARY ELSE (vt0.c0 IN (vt0.c0, vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE x'' END THEN vt0.c0 COLLATE BINARY ELSE (vt0.c0 IN (vt0.c0, vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE x'' END THEN vt0.c0 COLLATE BINARY ELSE (vt0.c0 IN (vt0.c0, vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING GROUP_CONCAT(v0.c1 COLLATE BINARY) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (GROUP_CONCAT(v0.c1 COLLATE BINARY))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((GROUP_CONCAT(v0.c1 COLLATE BINARY)) ISNULL);
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING GROUP_CONCAT(v0.c1 COLLATE BINARY) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (GROUP_CONCAT(v0.c1 COLLATE BINARY))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((GROUP_CONCAT(v0.c1 COLLATE BINARY)) ISNULL);
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((v0.c2 IN (((v0.c0)GLOB(v0.c1))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((v0.c2 IN (((v0.c0)GLOB(v0.c1))))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((v0.c2 IN (((v0.c0)GLOB(v0.c1))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON (((t0.c93)+(t0.c0)) IN (COALESCE(rt1.c1, v0.c1))) CROSS JOIN v0 ON (((vt0.c0) NOT BETWEEN (t0.c93) AND (t0.c0)) IN ()) LEFT OUTER JOIN rt1 ON (~ (((v0.c2)>=(vt0.c0))));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON (((t0.c93)+(t0.c0)) IN (COALESCE(rt1.c1, v0.c1))) CROSS JOIN v0 ON (((vt0.c0) NOT BETWEEN (t0.c93) AND (t0.c0)) IN ()) LEFT OUTER JOIN rt1 ON (~ (((v0.c2)>=(vt0.c0)))) WHERE (((NULLIF(v0.c2, t0.c93))>>(((vt0.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED FULL OUTER JOIN t0 ON (((t0.c93)+(t0.c0)) IN (COALESCE(rt1.c1, v0.c1))) CROSS JOIN v0 ON (((vt0.c0) NOT BETWEEN (t0.c93) AND (t0.c0)) IN ()) LEFT OUTER JOIN rt1 ON (~ (((v0.c2)>=(vt0.c0)))) WHERE ((NOT (((NULLIF(v0.c2, t0.c93))>>(((vt0.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON (((t0.c93)+(t0.c0)) IN (COALESCE(rt1.c1, v0.c1))) CROSS JOIN v0 ON (((vt0.c0) NOT BETWEEN (t0.c93) AND (t0.c0)) IN ()) LEFT OUTER JOIN rt1 ON (~ (((v0.c2)>=(vt0.c0)))) WHERE (((((NULLIF(v0.c2, t0.c93))>>(((vt0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON (((t0.c93)+(t0.c0)) IN (COALESCE(rt1.c1, v0.c1))) CROSS JOIN v0 ON (((vt0.c0) NOT BETWEEN (t0.c93) AND (t0.c0)) IN ()) LEFT OUTER JOIN rt1 ON (~ (((v0.c2)>=(vt0.c0))));
SELECT t0.c0 FROM t0, v0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, v0 WHERE (highlight(CASE WHEN t0.c93 THEN v0.c2 ELSE v0.c1 END, (v0.c0 IN ()), (((v0.c1))<((v0.c1))), t0.c93)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, v0 WHERE ((NOT (highlight(CASE WHEN t0.c93 THEN v0.c2 ELSE v0.c1 END, (v0.c0 IN ()), (((v0.c1))<((v0.c1))), t0.c93)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, v0 WHERE (((highlight(CASE WHEN t0.c93 THEN v0.c2 ELSE v0.c1 END, (v0.c0 IN ()), (((v0.c1))<((v0.c1))), t0.c93)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, v0 GROUP BY t0.c0;
SELECT v0.c0, t0.c0, vt0.c0 FROM vt0, t0, v0 GROUP BY v0.c0, t0.c0, vt0.c0;
SELECT v0.c0, t0.c0, vt0.c0 FROM vt0, t0, v0 GROUP BY v0.c0, t0.c0, vt0.c0 HAVING SUM(COUNT(TOTAL(vt0.c0))) UNION ALL SELECT ALL v0.c0, t0.c0, vt0.c0 FROM vt0, t0, v0 GROUP BY v0.c0, t0.c0, vt0.c0 HAVING (NOT (SUM(COUNT(TOTAL(vt0.c0))))) UNION ALL SELECT ALL v0.c0, t0.c0, vt0.c0 FROM vt0, t0, v0 GROUP BY v0.c0, t0.c0, vt0.c0 HAVING ((SUM(COUNT(TOTAL(vt0.c0)))) ISNULL);
SELECT vt0.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1, vt0;
SELECT vt0.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1, vt0 WHERE ((~ (rt1.c0 COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1, vt0 WHERE ((NOT ((~ (rt1.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL vt0.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1, vt0 WHERE ((((~ (rt1.c0 COLLATE NOCASE))) ISNULL));
SELECT vt0.c0, rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1, vt0;
SELECT DISTINCT t0.c0, v0.c0, v0.c1, v0.c2, t0.c93 FROM v0, t0;
SELECT DISTINCT t0.c0, v0.c0, v0.c1, v0.c2, t0.c93 FROM v0, t0 WHERE (CASE (v0.c2 IN ())  WHEN ((((t0.c93)AND(t0.c93)))OR('1223748666')) THEN UPPER(DISTINCT v0.c1) ELSE ABS(v0.c0) END) UNION SELECT DISTINCT t0.c0, v0.c0, v0.c1, v0.c2, t0.c93 FROM v0, t0 WHERE ((NOT (CASE (v0.c2 IN ())  WHEN ((((t0.c93)AND(t0.c93)))OR('1223748666')) THEN UPPER(DISTINCT v0.c1) ELSE ABS(v0.c0) END))) UNION SELECT DISTINCT t0.c0, v0.c0, v0.c1, v0.c2, t0.c93 FROM v0, t0 WHERE (((CASE (v0.c2 IN ())  WHEN ((((t0.c93)AND(t0.c93)))OR('1223748666')) THEN UPPER(DISTINCT v0.c1) ELSE ABS(v0.c0) END) ISNULL));
SELECT DISTINCT t0.c0, v0.c0, v0.c1, v0.c2, t0.c93 FROM v0, t0;
SELECT ALL t0.c0, t0.c93 FROM t0 GROUP BY t0.c0, t0.c93;
SELECT t0.c0, t0.c93 FROM t0 WHERE ((((((t0.c93 IN ()))OR(t0.c0)))OR(((t0.c0)>>(t0.c0))))) GROUP BY t0.c0, t0.c93 UNION SELECT ALL t0.c0, t0.c93 FROM t0 WHERE ((NOT ((((((t0.c93 IN ()))OR(t0.c0)))OR(((t0.c0)>>(t0.c0))))))) GROUP BY t0.c0, t0.c93 UNION SELECT t0.c0, t0.c93 FROM t0 WHERE ((((((((t0.c93 IN ()))OR(t0.c0)))OR(((t0.c0)>>(t0.c0))))) ISNULL)) GROUP BY t0.c0, t0.c93;
SELECT ALL t0.c0, t0.c93 FROM t0 GROUP BY t0.c0, t0.c93;
SELECT rt1.c2, rt1.c0, t0.c0, rt1.c1, v0.c1, v0.c2, v0.c0, t0.c93, rt1.c3, vt0.c0 FROM vt0, v0, t0, rt1 INDEXED BY i52 GROUP BY rt1.c2, rt1.c0, t0.c0, rt1.c1, v0.c1, v0.c2, v0.c0, t0.c93, rt1.c3, vt0.c0;
SELECT ALL * FROM t0, rt1, vt0;
SELECT ALL * FROM t0, rt1, vt0 WHERE (NULLIF((NOT (rt1.c3)), vt0.c0 COLLATE BINARY)) UNION ALL SELECT * FROM t0, rt1, vt0 WHERE ((NOT (NULLIF((NOT (rt1.c3)), vt0.c0 COLLATE BINARY)))) UNION ALL SELECT ALL * FROM t0, rt1, vt0 WHERE (((NULLIF((NOT (rt1.c3)), vt0.c0 COLLATE BINARY)) ISNULL));
SELECT ALL * FROM t0, rt1, vt0;
SELECT DISTINCT rt1.c2 FROM vt0 FULL OUTER JOIN rt1 ON ((((rt1.c0)OR(((rt1.c2)-(rt1.c0)))))OR((- (rt1.c3))));
SELECT DISTINCT rt1.c2 FROM vt0 FULL OUTER JOIN rt1 ON ((((rt1.c0)OR(((rt1.c2)-(rt1.c0)))))OR((- (rt1.c3)))) WHERE (CASE ''  WHEN (NOT (rt1.c3)) THEN ((rt1.c1)/(NULL)) WHEN MIN(rt1.c2, rt1.c1, rt1.c0, rt1.c2) THEN ((rt1.c2)+(x'1632')) WHEN (vt0.c0 IN ()) THEN (rt1.c0 IN ()) ELSE CAST(rt1.c2 AS TEXT) END) UNION SELECT DISTINCT rt1.c2 FROM vt0 FULL OUTER JOIN rt1 ON ((((rt1.c0)OR(((rt1.c2)-(rt1.c0)))))OR((- (rt1.c3)))) WHERE ((NOT (CASE ''  WHEN (NOT (rt1.c3)) THEN ((rt1.c1)/(NULL)) WHEN MIN(rt1.c2, rt1.c1, rt1.c0, rt1.c2) THEN ((rt1.c2)+(x'1632')) WHEN (vt0.c0 IN ()) THEN (rt1.c0 IN ()) ELSE CAST(rt1.c2 AS TEXT) END))) UNION SELECT DISTINCT rt1.c2 FROM vt0 FULL OUTER JOIN rt1 ON ((((rt1.c0)OR(((rt1.c2)-(rt1.c0)))))OR((- (rt1.c3)))) WHERE (((CASE ''  WHEN (NOT (rt1.c3)) THEN ((rt1.c1)/(NULL)) WHEN MIN(rt1.c2, rt1.c1, rt1.c0, rt1.c2) THEN ((rt1.c2)+(x'1632')) WHEN (vt0.c0 IN ()) THEN (rt1.c0 IN ()) ELSE CAST(rt1.c2 AS TEXT) END) ISNULL));
SELECT DISTINCT rt1.c2 FROM vt0 FULL OUTER JOIN rt1 ON ((((rt1.c0)OR(((rt1.c2)-(rt1.c0)))))OR((- (rt1.c3))));
SELECT ALL t0.c0, t0.c93, v0.c2, v0.c0 FROM t0, vt0, v0 GROUP BY t0.c0, t0.c93, v0.c2, v0.c0;
SELECT ALL t0.c0, t0.c93, v0.c2, v0.c0 FROM t0, vt0, v0 WHERE (((CAST(x'66d364a6' AS TEXT)) NOT BETWEEN (((v0.c2)IS NOT(v0.c0))) AND (((v0.c1) NOT BETWEEN (vt0.c0) AND (t0.c93))))) GROUP BY t0.c0, t0.c93, v0.c2, v0.c0 UNION SELECT ALL t0.c0, t0.c93, v0.c2, v0.c0 FROM t0, vt0, v0 WHERE ((NOT (((CAST(x'66d364a6' AS TEXT)) NOT BETWEEN (((v0.c2)IS NOT(v0.c0))) AND (((v0.c1) NOT BETWEEN (vt0.c0) AND (t0.c93))))))) GROUP BY t0.c0, t0.c93, v0.c2, v0.c0 UNION SELECT ALL t0.c0, t0.c93, v0.c2, v0.c0 FROM t0, vt0, v0 WHERE (((((CAST(x'66d364a6' AS TEXT)) NOT BETWEEN (((v0.c2)IS NOT(v0.c0))) AND (((v0.c1) NOT BETWEEN (vt0.c0) AND (t0.c93))))) ISNULL)) GROUP BY t0.c0, t0.c93, v0.c2, v0.c0;
SELECT ALL t0.c0, t0.c93, v0.c2, v0.c0 FROM t0, vt0, v0 GROUP BY t0.c0, t0.c93, v0.c2, v0.c0;
SELECT t0.c0, rt1.c2, rt1.c1, rt1.c3, t0.c93, rt1.c0 FROM t0 INNER JOIN rt1 ON CAST((~ (rt1.c2)) AS REAL) GROUP BY t0.c0, rt1.c2, rt1.c1, rt1.c3, t0.c93, rt1.c0;
SELECT ALL t0.c0, rt1.c2, rt1.c1, rt1.c3, t0.c93, rt1.c0 FROM t0 INNER JOIN rt1 ON CAST((~ (rt1.c2)) AS REAL) GROUP BY t0.c0, rt1.c2, rt1.c1, rt1.c3, t0.c93, rt1.c0 HAVING TOTAL(rt1.c0) UNION ALL SELECT t0.c0, rt1.c2, rt1.c1, rt1.c3, t0.c93, rt1.c0 FROM t0 INNER JOIN rt1 ON CAST((~ (rt1.c2)) AS REAL) GROUP BY t0.c0, rt1.c2, rt1.c1, rt1.c3, t0.c93, rt1.c0 HAVING (NOT (TOTAL(rt1.c0))) UNION ALL SELECT ALL t0.c0, rt1.c2, rt1.c1, rt1.c3, t0.c93, rt1.c0 FROM t0 INNER JOIN rt1 ON CAST((~ (rt1.c2)) AS REAL) GROUP BY t0.c0, rt1.c2, rt1.c1, rt1.c3, t0.c93, rt1.c0 HAVING ((TOTAL(rt1.c0)) ISNULL);
SELECT t0.c0, rt1.c2, rt1.c1, rt1.c3, t0.c93, rt1.c0 FROM t0 INNER JOIN rt1 ON CAST((~ (rt1.c2)) AS REAL) GROUP BY t0.c0, rt1.c2, rt1.c1, rt1.c3, t0.c93, rt1.c0;
SELECT ALL t0.c0, rt1.c2, rt1.c1, rt1.c3, t0.c93, rt1.c0 FROM t0 INNER JOIN rt1 ON CAST((~ (rt1.c2)) AS REAL) GROUP BY t0.c0, rt1.c2, rt1.c1, rt1.c3, t0.c93, rt1.c0 HAVING TOTAL(rt1.c0) UNION ALL SELECT t0.c0, rt1.c2, rt1.c1, rt1.c3, t0.c93, rt1.c0 FROM t0 INNER JOIN rt1 ON CAST((~ (rt1.c2)) AS REAL) GROUP BY t0.c0, rt1.c2, rt1.c1, rt1.c3, t0.c93, rt1.c0 HAVING (NOT (TOTAL(rt1.c0))) UNION ALL SELECT ALL t0.c0, rt1.c2, rt1.c1, rt1.c3, t0.c93, rt1.c0 FROM t0 INNER JOIN rt1 ON CAST((~ (rt1.c2)) AS REAL) GROUP BY t0.c0, rt1.c2, rt1.c1, rt1.c3, t0.c93, rt1.c0 HAVING ((TOTAL(rt1.c0)) ISNULL);
SELECT t0.c0, rt1.c2, rt1.c1, rt1.c3, t0.c93, rt1.c0 FROM t0 INNER JOIN rt1 ON CAST((~ (rt1.c2)) AS REAL) GROUP BY t0.c0, rt1.c2, rt1.c1, rt1.c3, t0.c93, rt1.c0;
SELECT ALL v0.c2, v0.c1 FROM v0;
SELECT ALL v0.c2, v0.c1 FROM v0 WHERE (CAST(0.18953582242019018 AS NUMERIC)) UNION ALL SELECT v0.c2, v0.c1 FROM v0 WHERE ((NOT (CAST(0.18953582242019018 AS NUMERIC)))) UNION ALL SELECT ALL v0.c2, v0.c1 FROM v0 WHERE (((CAST(0.18953582242019018 AS NUMERIC)) ISNULL));
SELECT ALL v0.c2, v0.c1 FROM v0;
SELECT DISTINCT * FROM v0, vt0, rt1;
SELECT DISTINCT * FROM v0, vt0, rt1 WHERE (NULLIF((((rt1.c1))=((v0.c2))), (~ (v0.c2)))) UNION SELECT DISTINCT * FROM v0, vt0, rt1 WHERE ((NOT (NULLIF((((rt1.c1))=((v0.c2))), (~ (v0.c2)))))) UNION SELECT DISTINCT * FROM v0, vt0, rt1 WHERE (((NULLIF((((rt1.c1))==((v0.c2))), (~ (v0.c2)))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, rt1;
SELECT ALL rt1.c3 FROM t0, rt1 GROUP BY rt1.c3;
SELECT rt1.c3 FROM t0, rt1 WHERE ((CASE rt1.c0  WHEN t0.c0 THEN rt1.c2 WHEN t0.c93 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c3 END IN ())) GROUP BY rt1.c3 UNION SELECT rt1.c3 FROM t0, rt1 WHERE ((NOT ((CASE rt1.c0  WHEN t0.c0 THEN rt1.c2 WHEN t0.c93 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c3 END IN ())))) GROUP BY rt1.c3 UNION SELECT ALL rt1.c3 FROM t0, rt1 WHERE ((((CASE rt1.c0  WHEN t0.c0 THEN rt1.c2 WHEN t0.c93 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c3 END IN ())) ISNULL)) GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM t0, rt1 GROUP BY rt1.c3;
SELECT ALL rt1.c3, t0.c0, rt1.c1, t0.c93, rt1.c0, v0.c2 FROM v0, rt1 INNER JOIN t0 ON (((rt1.c1) NOT BETWEEN (v0.c1) AND (rt1.c3)) IN ((t0.c0 IN ()))) GROUP BY rt1.c3, t0.c0, rt1.c1, t0.c93, rt1.c0, v0.c2;
SELECT rt1.c3, t0.c0, rt1.c1, t0.c93, rt1.c0, v0.c2 FROM v0, rt1 INNER JOIN t0 ON (((rt1.c1) NOT BETWEEN (v0.c1) AND (rt1.c3)) IN ((t0.c0 IN ()))) GROUP BY rt1.c3, t0.c0, rt1.c1, t0.c93, rt1.c0, v0.c2 HAVING ((AVG(AVG(NULL))) NOT BETWEEN (CAST(rt1.c3 AS TEXT)) AND (MAX(GROUP_CONCAT(v0.c2)))) UNION ALL SELECT rt1.c3, t0.c0, rt1.c1, t0.c93, rt1.c0, v0.c2 FROM v0, rt1 INNER JOIN t0 ON (((rt1.c1) NOT BETWEEN (v0.c1) AND (rt1.c3)) IN ((t0.c0 IN ()))) GROUP BY rt1.c3, t0.c0, rt1.c1, t0.c93, rt1.c0, v0.c2 HAVING (NOT (((AVG(AVG(NULL))) NOT BETWEEN (CAST(rt1.c3 AS TEXT)) AND (MAX(GROUP_CONCAT(v0.c2)))))) UNION ALL SELECT ALL rt1.c3, t0.c0, rt1.c1, t0.c93, rt1.c0, v0.c2 FROM v0, rt1 INNER JOIN t0 ON (((rt1.c1) NOT BETWEEN (v0.c1) AND (rt1.c3)) IN ((t0.c0 IN ()))) GROUP BY rt1.c3, t0.c0, rt1.c1, t0.c93, rt1.c0, v0.c2 HAVING ((((AVG(AVG(NULL))) NOT BETWEEN (CAST(rt1.c3 AS TEXT)) AND (MAX(GROUP_CONCAT(v0.c2))))) ISNULL);
SELECT rt1.c2, rt1.c0, t0.c0 FROM rt1, vt0, t0, v0;
SELECT rt1.c2, rt1.c0, t0.c0 FROM rt1, vt0, t0, v0 WHERE (CAST(((v0.c1) ISNULL) AS INTEGER)) UNION ALL SELECT rt1.c2, rt1.c0, t0.c0 FROM rt1, vt0, t0, v0 WHERE ((NOT (CAST(((v0.c1) ISNULL) AS INTEGER)))) UNION ALL SELECT rt1.c2, rt1.c0, t0.c0 FROM rt1, vt0, t0, v0 WHERE (((CAST(((v0.c1) ISNULL) AS INTEGER)) ISNULL));
SELECT rt1.c2, rt1.c0, t0.c0 FROM rt1, vt0, t0, v0;
SELECT DISTINCT t0.c93, rt1.c0, t0.c0, rt1.c1, rt1.c2, rt1.c3 FROM t0, rt1;
SELECT DISTINCT t0.c93, rt1.c0, t0.c0, rt1.c1, rt1.c2, rt1.c3 FROM t0, rt1 WHERE ((((0xffffffffafdf4a94)) BETWEEN ((UPPER(DISTINCT rt1.c1))) AND ((CAST(t0.c0 AS REAL))))) UNION SELECT DISTINCT t0.c93, rt1.c0, t0.c0, rt1.c1, rt1.c2, rt1.c3 FROM t0, rt1 WHERE ((NOT ((((0xffffffffafdf4a94)) BETWEEN ((UPPER(DISTINCT rt1.c1))) AND ((CAST(t0.c0 AS REAL))))))) UNION SELECT DISTINCT t0.c93, rt1.c0, t0.c0, rt1.c1, rt1.c2, rt1.c3 FROM t0, rt1 WHERE ((((((0xffffffffafdf4a94)) BETWEEN ((UPPER(DISTINCT rt1.c1))) AND ((CAST(t0.c0 AS REAL))))) ISNULL));
SELECT DISTINCT t0.c93, rt1.c0, t0.c0, rt1.c1, rt1.c2, rt1.c3 FROM t0, rt1;
SELECT ALL v0.c0 FROM rt1, v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt1, v0, vt0 WHERE ((((((vt0.c0)AND(rt1.c0)))AND(vt0.c0)) IN ())) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM rt1, v0, vt0 WHERE ((NOT ((((((vt0.c0)AND(rt1.c0)))AND(vt0.c0)) IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM rt1, v0, vt0 WHERE ((((((((vt0.c0)AND(rt1.c0)))AND(vt0.c0)) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt1, v0, vt0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((AVG(MAX(vt0.c0)))OR(MIN(vt0.c0))))OR(TOTAL(SUM(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((AVG(MAX(vt0.c0)))OR(MIN(vt0.c0))))OR(TOTAL(SUM(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((AVG(MAX(vt0.c0)))OR(MIN(vt0.c0))))OR(TOTAL(SUM(vt0.c0))))) ISNULL);
SELECT ALL v0.c1, t0.c93, rt1.c3, v0.c2, rt1.c2 FROM v0, rt1 FULL OUTER JOIN t0 ON NULL;
SELECT v0.c1, t0.c93, rt1.c3, v0.c2, rt1.c2 FROM v0, rt1 FULL OUTER JOIN t0 ON NULL WHERE (LENGTH((((rt1.c2))<>((rt1.c3))))) UNION ALL SELECT v0.c1, t0.c93, rt1.c3, v0.c2, rt1.c2 FROM v0, rt1 FULL OUTER JOIN t0 ON NULL WHERE ((NOT (LENGTH((((rt1.c2))!=((rt1.c3))))))) UNION ALL SELECT v0.c1, t0.c93, rt1.c3, v0.c2, rt1.c2 FROM v0, rt1 FULL OUTER JOIN t0 ON NULL WHERE (((LENGTH((((rt1.c2))!=((rt1.c3))))) ISNULL));
SELECT ALL v0.c1, t0.c93, rt1.c3, v0.c2, rt1.c2 FROM v0, rt1 FULL OUTER JOIN t0 ON NULL;
SELECT DISTINCT rt1.c1 FROM vt0 INNER JOIN rt1 ON ((rt1.c0 COLLATE BINARY) NOTNULL);
SELECT DISTINCT rt1.c1 FROM vt0 INNER JOIN rt1 ON ((rt1.c0 COLLATE BINARY) NOTNULL) WHERE ('2086858520' COLLATE RTRIM COLLATE NOCASE) UNION SELECT DISTINCT rt1.c1 FROM vt0 INNER JOIN rt1 ON ((rt1.c0 COLLATE BINARY) NOTNULL) WHERE ((NOT ('2086858520' COLLATE RTRIM COLLATE NOCASE))) UNION SELECT DISTINCT rt1.c1 FROM vt0 INNER JOIN rt1 ON ((rt1.c0 COLLATE BINARY) NOTNULL) WHERE ((('2086858520' COLLATE RTRIM COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt1.c1 FROM vt0 INNER JOIN rt1 ON ((rt1.c0 COLLATE BINARY) NOTNULL);
SELECT ALL v0.c1, rt1.c2, rt1.c1, v0.c0, rt1.c0, vt0.c0, rt1.c3, v0.c2, t0.c0 FROM rt1, t0, v0, vt0 GROUP BY v0.c1, rt1.c2, rt1.c1, v0.c0, rt1.c0, vt0.c0, rt1.c3, v0.c2, t0.c0;
SELECT v0.c1, rt1.c2, rt1.c1, v0.c0, rt1.c0, vt0.c0, rt1.c3, v0.c2, t0.c0 FROM rt1, t0, v0, vt0 WHERE ('-37931352' COLLATE NOCASE) GROUP BY v0.c1, rt1.c2, rt1.c1, v0.c0, rt1.c0, vt0.c0, rt1.c3, v0.c2, t0.c0 UNION SELECT v0.c1, rt1.c2, rt1.c1, v0.c0, rt1.c0, vt0.c0, rt1.c3, v0.c2, t0.c0 FROM rt1, t0, v0, vt0 WHERE ((NOT ('-37931352' COLLATE NOCASE))) GROUP BY v0.c1, rt1.c2, rt1.c1, v0.c0, rt1.c0, vt0.c0, rt1.c3, v0.c2, t0.c0 UNION SELECT v0.c1, rt1.c2, rt1.c1, v0.c0, rt1.c0, vt0.c0, rt1.c3, v0.c2, t0.c0 FROM rt1, t0, v0, vt0 WHERE ((('-37931352' COLLATE NOCASE) ISNULL)) GROUP BY v0.c1, rt1.c2, rt1.c1, v0.c0, rt1.c0, vt0.c0, rt1.c3, v0.c2, t0.c0;
SELECT ALL v0.c1, rt1.c2, rt1.c1, v0.c0, rt1.c0, vt0.c0, rt1.c3, v0.c2, t0.c0 FROM rt1, t0, v0, vt0 GROUP BY v0.c1, rt1.c2, rt1.c1, v0.c0, rt1.c0, vt0.c0, rt1.c3, v0.c2, t0.c0;
SELECT rt1.c0, rt1.c2, t0.c0, rt1.c3, t0.c93 FROM rt1, t0 GROUP BY rt1.c0, rt1.c2, t0.c0, rt1.c3, t0.c93;
SELECT ALL rt1.c0, rt1.c2, t0.c0, rt1.c3, t0.c93 FROM rt1, t0 GROUP BY rt1.c0, rt1.c2, t0.c0, rt1.c3, t0.c93 HAVING CASE WHEN MAX(0.5667277140135435) THEN MAX(rt1.c3) END UNION ALL SELECT ALL rt1.c0, rt1.c2, t0.c0, rt1.c3, t0.c93 FROM rt1, t0 GROUP BY rt1.c0, rt1.c2, t0.c0, rt1.c3, t0.c93 HAVING (NOT (CASE WHEN MAX(0.5667277140135435) THEN MAX(rt1.c3) END)) UNION ALL SELECT rt1.c0, rt1.c2, t0.c0, rt1.c3, t0.c93 FROM rt1, t0 GROUP BY rt1.c0, rt1.c2, t0.c0, rt1.c3, t0.c93 HAVING ((CASE WHEN MAX(0.5667277140135435) THEN MAX(rt1.c3) END) ISNULL);
SELECT rt1.c0, rt1.c2, t0.c0, rt1.c3, t0.c93 FROM rt1, t0 GROUP BY rt1.c0, rt1.c2, t0.c0, rt1.c3, t0.c93;
SELECT ALL rt1.c0, rt1.c2, t0.c0, rt1.c3, t0.c93 FROM rt1, t0 GROUP BY rt1.c0, rt1.c2, t0.c0, rt1.c3, t0.c93 HAVING CASE WHEN MAX(0.5667277140135435) THEN MAX(rt1.c3) END UNION ALL SELECT ALL rt1.c0, rt1.c2, t0.c0, rt1.c3, t0.c93 FROM rt1, t0 GROUP BY rt1.c0, rt1.c2, t0.c0, rt1.c3, t0.c93 HAVING (NOT (CASE WHEN MAX(0.5667277140135435) THEN MAX(rt1.c3) END)) UNION ALL SELECT rt1.c0, rt1.c2, t0.c0, rt1.c3, t0.c93 FROM rt1, t0 GROUP BY rt1.c0, rt1.c2, t0.c0, rt1.c3, t0.c93 HAVING ((CASE WHEN MAX(0.5667277140135435) THEN MAX(rt1.c3) END) ISNULL);
SELECT rt1.c0, rt1.c2, t0.c0, rt1.c3, t0.c93 FROM rt1, t0 GROUP BY rt1.c0, rt1.c2, t0.c0, rt1.c3, t0.c93;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (CASE WHEN ((((((((((((v0.c2)AND(v0.c0)))OR(v0.c2)))AND(v0.c1)))AND(v0.c2)))AND(v0.c1)))OR(v0.c1)) THEN ((((((((v0.c0)AND(v0.c2)))AND(v0.c2)))AND(v0.c1)))OR(v0.c2)) WHEN v0.c0 THEN v0.c0 COLLATE BINARY WHEN '' THEN UNLIKELY(v0.c2) END) UNION ALL SELECT * FROM v0 WHERE ((NOT (CASE WHEN ((((((((((((v0.c2)AND(v0.c0)))OR(v0.c2)))AND(v0.c1)))AND(v0.c2)))AND(v0.c1)))OR(v0.c1)) THEN ((((((((v0.c0)AND(v0.c2)))AND(v0.c2)))AND(v0.c1)))OR(v0.c2)) WHEN v0.c0 THEN v0.c0 COLLATE BINARY WHEN '' THEN UNLIKELY(v0.c2) END))) UNION ALL SELECT ALL * FROM v0 WHERE (((CASE WHEN ((((((((((((v0.c2)AND(v0.c0)))OR(v0.c2)))AND(v0.c1)))AND(v0.c2)))AND(v0.c1)))OR(v0.c1)) THEN ((((((((v0.c0)AND(v0.c2)))AND(v0.c2)))AND(v0.c1)))OR(v0.c2)) WHEN v0.c0 THEN v0.c0 COLLATE BINARY WHEN '' THEN UNLIKELY(v0.c2) END) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0, v0.c2 FROM v0;
SELECT DISTINCT v0.c0, v0.c2 FROM v0 WHERE (((((v0.c2) IS TRUE)) IS FALSE)) UNION SELECT DISTINCT v0.c0, v0.c2 FROM v0 WHERE ((NOT (((((v0.c2) IS TRUE)) IS FALSE)))) UNION SELECT DISTINCT v0.c0, v0.c2 FROM v0 WHERE (((((((v0.c2) IS TRUE)) IS FALSE)) ISNULL));
SELECT DISTINCT v0.c0, v0.c2 FROM v0;
SELECT v0.c0 FROM t0, v0 INNER JOIN vt0 ON CASE ((t0.c0)IS NOT(v0.c2))  WHEN (((t0.c93))=((v0.c0))) THEN t0.c93 WHEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)) THEN t0.c93 WHEN ((v0.c0) ISNULL) THEN CAST(vt0.c0 AS TEXT) WHEN (((v0.c2, v0.c2, t0.c93)) NOT BETWEEN ((vt0.c0, v0.c1, t0.c93)) AND ((t0.c93, vt0.c0, vt0.c0))) THEN (((x'f461f35e'))<=(('1501954039'))) WHEN CASE WHEN x'' THEN t0.c93 ELSE v0.c1 END THEN vt0.c0 END GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, v0 INNER JOIN vt0 ON CASE ((t0.c0)IS NOT(v0.c2))  WHEN (((t0.c93))==((v0.c0))) THEN t0.c93 WHEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)) THEN t0.c93 WHEN ((v0.c0) ISNULL) THEN CAST(vt0.c0 AS TEXT) WHEN (((v0.c2, v0.c2, t0.c93)) NOT BETWEEN ((vt0.c0, v0.c1, t0.c93)) AND ((t0.c93, vt0.c0, vt0.c0))) THEN (((x'f461f35e'))<=(('1501954039'))) WHEN CASE WHEN x'' THEN t0.c93 ELSE v0.c1 END THEN vt0.c0 END WHERE (((CAST(0.28574259975058414 AS NUMERIC)) IS FALSE)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t0, v0 INNER JOIN vt0 ON CASE ((t0.c0)IS NOT(v0.c2))  WHEN (((t0.c93))==((v0.c0))) THEN t0.c93 WHEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)) THEN t0.c93 WHEN ((v0.c0) ISNULL) THEN CAST(vt0.c0 AS TEXT) WHEN (((v0.c2, v0.c2, t0.c93)) NOT BETWEEN ((vt0.c0, v0.c1, t0.c93)) AND ((t0.c93, vt0.c0, vt0.c0))) THEN (((x'f461f35e'))<=(('1501954039'))) WHEN CASE WHEN x'' THEN t0.c93 ELSE v0.c1 END THEN vt0.c0 END WHERE ((NOT (((CAST(0.28574259975058414 AS NUMERIC)) IS FALSE)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t0, v0 INNER JOIN vt0 ON CASE ((t0.c0)IS NOT(v0.c2))  WHEN (((t0.c93))=((v0.c0))) THEN t0.c93 WHEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)) THEN t0.c93 WHEN ((v0.c0) ISNULL) THEN CAST(vt0.c0 AS TEXT) WHEN (((v0.c2, v0.c2, t0.c93)) NOT BETWEEN ((vt0.c0, v0.c1, t0.c93)) AND ((t0.c93, vt0.c0, vt0.c0))) THEN (((x'f461f35e'))<=(('1501954039'))) WHEN CASE WHEN x'' THEN t0.c93 ELSE v0.c1 END THEN vt0.c0 END WHERE (((((CAST(0.28574259975058414 AS NUMERIC)) IS FALSE)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0 INNER JOIN vt0 ON CASE ((t0.c0)IS NOT(v0.c2))  WHEN (((t0.c93))=((v0.c0))) THEN t0.c93 WHEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)) THEN t0.c93 WHEN ((v0.c0) ISNULL) THEN CAST(vt0.c0 AS TEXT) WHEN (((v0.c2, v0.c2, t0.c93)) NOT BETWEEN ((vt0.c0, v0.c1, t0.c93)) AND ((t0.c93, vt0.c0, vt0.c0))) THEN (((x'f461f35e'))<=(('1501954039'))) WHEN CASE WHEN x'' THEN t0.c93 ELSE v0.c1 END THEN vt0.c0 END GROUP BY v0.c0;
SELECT ALL t0.c0, v0.c0, rt1.c3, vt0.c0, rt1.c0, v0.c1, v0.c2, rt1.c2, rt1.c1, t0.c93 FROM t0, vt0, v0, rt1 GROUP BY t0.c0, v0.c0, rt1.c3, vt0.c0, rt1.c0, v0.c1, v0.c2, rt1.c2, rt1.c1, t0.c93;
SELECT ALL t0.c0, v0.c0, rt1.c3, vt0.c0, rt1.c0, v0.c1, v0.c2, rt1.c2, rt1.c1, t0.c93 FROM t0, vt0, v0, rt1 GROUP BY t0.c0, v0.c0, rt1.c3, vt0.c0, rt1.c0, v0.c1, v0.c2, rt1.c2, rt1.c1, t0.c93 HAVING ((((((((((COUNT(*))>>(rt1.c1)))AND((((vt0.c0))>((TOTAL(t0.c0)))))))OR(((vt0.c0) ISNULL))))OR(((((((((SUM(t0.c0))AND(MAX(rt1.c2))))OR(COUNT(0X6dc587f9))))AND(GROUP_CONCAT(SUM(TOTAL(v0.c2))))))AND(TOTAL(COUNT(*)))))))OR((AVG(SUM(MIN(MIN(v0.c0)))) IN ()))) UNION ALL SELECT ALL t0.c0, v0.c0, rt1.c3, vt0.c0, rt1.c0, v0.c1, v0.c2, rt1.c2, rt1.c1, t0.c93 FROM t0, vt0, v0, rt1 GROUP BY t0.c0, v0.c0, rt1.c3, vt0.c0, rt1.c0, v0.c1, v0.c2, rt1.c2, rt1.c1, t0.c93 HAVING (NOT (((((((((((COUNT(*))>>(rt1.c1)))AND((((vt0.c0))>((TOTAL(t0.c0)))))))OR(((vt0.c0) ISNULL))))OR(((((((((SUM(t0.c0))AND(MAX(rt1.c2))))OR(COUNT(0X6dc587f9))))AND(GROUP_CONCAT(SUM(TOTAL(v0.c2))))))AND(TOTAL(COUNT(*)))))))OR((AVG(SUM(MIN(MIN(v0.c0)))) IN ()))))) UNION ALL SELECT t0.c0, v0.c0, rt1.c3, vt0.c0, rt1.c0, v0.c1, v0.c2, rt1.c2, rt1.c1, t0.c93 FROM t0, vt0, v0, rt1 GROUP BY t0.c0, v0.c0, rt1.c3, vt0.c0, rt1.c0, v0.c1, v0.c2, rt1.c2, rt1.c1, t0.c93 HAVING ((((((((((((COUNT(*))>>(rt1.c1)))AND((((vt0.c0))>((TOTAL(t0.c0)))))))OR(((vt0.c0) ISNULL))))OR(((((((((SUM(t0.c0))AND(MAX(rt1.c2))))OR(COUNT(0X6dc587f9))))AND(GROUP_CONCAT(SUM(TOTAL(v0.c2))))))AND(TOTAL(COUNT(*)))))))OR((AVG(SUM(MIN(MIN(v0.c0)))) IN ())))) ISNULL);
SELECT ALL t0.c93 FROM t0;
SELECT ALL t0.c93 FROM t0 WHERE ((((t0.c0 IN (t0.c0)))>=(CASE WHEN t0.c93 THEN '\r(%' ELSE t0.c0 END))) UNION ALL SELECT ALL t0.c93 FROM t0 WHERE ((NOT ((((t0.c0 IN (t0.c0)))>=(CASE WHEN t0.c93 THEN '\r(%' ELSE t0.c0 END))))) UNION ALL SELECT ALL t0.c93 FROM t0 WHERE ((((((t0.c0 IN (t0.c0)))>=(CASE WHEN t0.c93 THEN '\r(%' ELSE t0.c0 END))) ISNULL));
SELECT ALL t0.c93 FROM t0;
SELECT DISTINCT v0.c0 FROM v0 NATURAL JOIN t0;
SELECT DISTINCT v0.c0 FROM v0 NATURAL JOIN t0 WHERE (CAST((((v0.c1))>=((t0.c93))) AS REAL)) UNION SELECT DISTINCT v0.c0 FROM v0 NATURAL JOIN t0 WHERE ((NOT (CAST((((v0.c1))>=((t0.c93))) AS REAL)))) UNION SELECT DISTINCT v0.c0 FROM v0 NATURAL JOIN t0 WHERE (((CAST((((v0.c1))>=((t0.c93))) AS REAL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0 NATURAL JOIN t0;
SELECT v0.c2, v0.c1, v0.c0, t0.c0, rt1.c0, t0.c93, rt1.c3, rt1.c2 FROM t0 LEFT OUTER JOIN rt1 ON (((rt1.c0, rt1.c0, rt1.c2)) NOT BETWEEN (((t0.c93 IN ()), (((rt1.c2))<=((rt1.c2))), (((v0.c2, v0.c2, t0.c93))<>((rt1.c1, rt1.c1, t0.c93))))) AND (((((rt1.c1, t0.c93, t0.c0)) NOT BETWEEN ((v0.c2, rt1.c3, v0.c2)) AND ((v0.c1, v0.c2, rt1.c0))), ((rt1.c1)&(v0.c2)), (- (NULL))))) RIGHT OUTER JOIN v0 ON ((((v0.c0)OR(v0.c1)))IS NOT(CAST(x'' AS INTEGER))) GROUP BY v0.c2, v0.c1, v0.c0, t0.c0, rt1.c0, t0.c93, rt1.c3, rt1.c2;
SELECT ALL rt1.c2, v0.c0, rt1.c3, rt1.c1, t0.c0, v0.c1, t0.c93, rt1.c0, v0.c2 FROM v0, t0, rt1, vt0 GROUP BY rt1.c2, v0.c0, rt1.c3, rt1.c1, t0.c0, v0.c1, t0.c93, rt1.c0, v0.c2;
SELECT ALL rt1.c2, v0.c0, rt1.c3, rt1.c1, t0.c0, v0.c1, t0.c93, rt1.c0, v0.c2 FROM v0, t0, rt1, vt0 GROUP BY rt1.c2, v0.c0, rt1.c3, rt1.c1, t0.c0, v0.c1, t0.c93, rt1.c0, v0.c2 HAVING MAX((GROUP_CONCAT(rt1.c1) IN ())) UNION ALL SELECT rt1.c2, v0.c0, rt1.c3, rt1.c1, t0.c0, v0.c1, t0.c93, rt1.c0, v0.c2 FROM v0, t0, rt1, vt0 GROUP BY rt1.c2, v0.c0, rt1.c3, rt1.c1, t0.c0, v0.c1, t0.c93, rt1.c0, v0.c2 HAVING (NOT (MAX((GROUP_CONCAT(rt1.c1) IN ())))) UNION ALL SELECT rt1.c2, v0.c0, rt1.c3, rt1.c1, t0.c0, v0.c1, t0.c93, rt1.c0, v0.c2 FROM v0, t0, rt1, vt0 GROUP BY rt1.c2, v0.c0, rt1.c3, rt1.c1, t0.c0, v0.c1, t0.c93, rt1.c0, v0.c2 HAVING ((MAX((GROUP_CONCAT(rt1.c1) IN ()))) ISNULL);
SELECT ALL rt1.c2, v0.c0, rt1.c3, rt1.c1, t0.c0, v0.c1, t0.c93, rt1.c0, v0.c2 FROM v0, t0, rt1, vt0 GROUP BY rt1.c2, v0.c0, rt1.c3, rt1.c1, t0.c0, v0.c1, t0.c93, rt1.c0, v0.c2;
SELECT ALL rt1.c2, v0.c0, rt1.c3, rt1.c1, t0.c0, v0.c1, t0.c93, rt1.c0, v0.c2 FROM v0, t0, rt1, vt0 GROUP BY rt1.c2, v0.c0, rt1.c3, rt1.c1, t0.c0, v0.c1, t0.c93, rt1.c0, v0.c2 HAVING MAX((GROUP_CONCAT(rt1.c1) IN ())) UNION ALL SELECT rt1.c2, v0.c0, rt1.c3, rt1.c1, t0.c0, v0.c1, t0.c93, rt1.c0, v0.c2 FROM v0, t0, rt1, vt0 GROUP BY rt1.c2, v0.c0, rt1.c3, rt1.c1, t0.c0, v0.c1, t0.c93, rt1.c0, v0.c2 HAVING (NOT (MAX((GROUP_CONCAT(rt1.c1) IN ())))) UNION ALL SELECT rt1.c2, v0.c0, rt1.c3, rt1.c1, t0.c0, v0.c1, t0.c93, rt1.c0, v0.c2 FROM v0, t0, rt1, vt0 GROUP BY rt1.c2, v0.c0, rt1.c3, rt1.c1, t0.c0, v0.c1, t0.c93, rt1.c0, v0.c2 HAVING ((MAX((GROUP_CONCAT(rt1.c1) IN ()))) ISNULL);
SELECT ALL rt1.c2, v0.c0, rt1.c3, rt1.c1, t0.c0, v0.c1, t0.c93, rt1.c0, v0.c2 FROM v0, t0, rt1, vt0 GROUP BY rt1.c2, v0.c0, rt1.c3, rt1.c1, t0.c0, v0.c1, t0.c93, rt1.c0, v0.c2;
SELECT ALL * FROM vt0, rt1, t0;
SELECT * FROM vt0, rt1, t0 WHERE (((((rt1.c1)%(vt0.c0)))/(((x'') NOT BETWEEN (vt0.c0) AND (t0.c93))))) UNION ALL SELECT * FROM vt0, rt1, t0 WHERE ((NOT (((((rt1.c1)%(vt0.c0)))/(((x'') NOT BETWEEN (vt0.c0) AND (t0.c93))))))) UNION ALL SELECT * FROM vt0, rt1, t0 WHERE (((((((rt1.c1)%(vt0.c0)))/(((x'') NOT BETWEEN (vt0.c0) AND (t0.c93))))) ISNULL));
SELECT ALL * FROM vt0, rt1, t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0) IS FALSE) IN (LOWER(DISTINCT vt0.c0), ((vt0.c0) NOTNULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0) IS FALSE) IN (LOWER(DISTINCT vt0.c0), ((vt0.c0) NOTNULL)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0) IS FALSE) IN (LOWER(DISTINCT vt0.c0), ((vt0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt1.c0, t0.c0, rt1.c3, rt1.c1, t0.c93, vt0.c0 FROM vt0, t0, rt1 GROUP BY rt1.c0, t0.c0, rt1.c3, rt1.c1, t0.c93, vt0.c0;
SELECT rt1.c0, t0.c0, rt1.c3, rt1.c1, t0.c93, vt0.c0 FROM vt0, t0, rt1 WHERE (t0.c93) GROUP BY rt1.c0, t0.c0, rt1.c3, rt1.c1, t0.c93, vt0.c0 UNION SELECT rt1.c0, t0.c0, rt1.c3, rt1.c1, t0.c93, vt0.c0 FROM vt0, t0, rt1 WHERE ((NOT (t0.c93))) GROUP BY rt1.c0, t0.c0, rt1.c3, rt1.c1, t0.c93, vt0.c0 UNION SELECT ALL rt1.c0, t0.c0, rt1.c3, rt1.c1, t0.c93, vt0.c0 FROM vt0, t0, rt1 WHERE (((t0.c93) ISNULL)) GROUP BY rt1.c0, t0.c0, rt1.c3, rt1.c1, t0.c93, vt0.c0;
SELECT ALL rt1.c0, t0.c0, rt1.c3, rt1.c1, t0.c93, vt0.c0 FROM vt0, t0, rt1 GROUP BY rt1.c0, t0.c0, rt1.c3, rt1.c1, t0.c93, vt0.c0;
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING NULL UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING ((NULL) ISNULL);
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING NULL UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING ((NULL) ISNULL);
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT rt1.c2, t0.c93, t0.c0, rt1.c3 FROM rt1, t0;
SELECT rt1.c2, t0.c93, t0.c0, rt1.c3 FROM rt1, t0 WHERE (((rt1.c2 COLLATE NOCASE) IS TRUE)) UNION ALL SELECT rt1.c2, t0.c93, t0.c0, rt1.c3 FROM rt1, t0 WHERE ((NOT (((rt1.c2 COLLATE NOCASE) IS TRUE)))) UNION ALL SELECT rt1.c2, t0.c93, t0.c0, rt1.c3 FROM rt1, t0 WHERE (((((rt1.c2 COLLATE NOCASE) IS TRUE)) ISNULL));
SELECT rt1.c2, t0.c93, t0.c0, rt1.c3 FROM rt1, t0;
SELECT DISTINCT * FROM t0, vt0, v0, rt1;
SELECT DISTINCT * FROM t0 NOT INDEXED, vt0, v0, rt1 WHERE (NULL) UNION SELECT DISTINCT * FROM t0, vt0, v0, rt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM t0, vt0, v0, rt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM t0, vt0, v0, rt1;
SELECT ALL rt1.c0, rt1.c3, t0.c0 FROM rt1, t0 GROUP BY rt1.c0, rt1.c3, t0.c0;
SELECT ALL rt1.c0, rt1.c3, t0.c0 FROM rt1, t0 WHERE (((((rt1.c0)>>(t0.c93)))<>(((rt1.c0) NOT BETWEEN (t0.c0) AND (NULL))))) GROUP BY rt1.c0, rt1.c3, t0.c0 UNION SELECT ALL rt1.c0, rt1.c3, t0.c0 FROM rt1 NOT INDEXED, t0 WHERE ((NOT (((((rt1.c0)>>(t0.c93)))!=(((rt1.c0) NOT BETWEEN (t0.c0) AND (NULL))))))) GROUP BY rt1.c0, rt1.c3, t0.c0 UNION SELECT rt1.c0, rt1.c3, t0.c0 FROM rt1, t0 WHERE (((((((rt1.c0)>>(t0.c93)))<>(((rt1.c0) NOT BETWEEN (t0.c0) AND (NULL))))) ISNULL)) GROUP BY rt1.c0, rt1.c3, t0.c0;
SELECT ALL rt1.c0, rt1.c3, t0.c0 FROM rt1, t0 GROUP BY rt1.c0, rt1.c3, t0.c0;
SELECT ALL rt1.c0, v0.c1, rt1.c1, t0.c93 FROM rt1, v0, t0, vt0 GROUP BY rt1.c0, v0.c1, rt1.c1, t0.c93;
SELECT rt1.c0, v0.c1, rt1.c1, t0.c93 FROM rt1, v0, t0, vt0 GROUP BY rt1.c0, v0.c1, rt1.c1, t0.c93 HAVING CAST(GROUP_CONCAT(v0.c2) AS BLOB) UNION ALL SELECT ALL rt1.c0, v0.c1, rt1.c1, t0.c93 FROM rt1, v0, t0, vt0 GROUP BY rt1.c0, v0.c1, rt1.c1, t0.c93 HAVING (NOT (CAST(GROUP_CONCAT(v0.c2) AS BLOB))) UNION ALL SELECT rt1.c0, v0.c1, rt1.c1, t0.c93 FROM rt1, v0, t0, vt0 GROUP BY rt1.c0, v0.c1, rt1.c1, t0.c93 HAVING ((CAST(GROUP_CONCAT(v0.c2) AS BLOB)) ISNULL);
SELECT ALL rt1.c0, v0.c1, rt1.c1, t0.c93 FROM rt1, v0, t0, vt0 GROUP BY rt1.c0, v0.c1, rt1.c1, t0.c93;
SELECT rt1.c0, v0.c1, rt1.c1, t0.c93 FROM rt1, v0, t0, vt0 GROUP BY rt1.c0, v0.c1, rt1.c1, t0.c93 HAVING CAST(GROUP_CONCAT(v0.c2) AS BLOB) UNION ALL SELECT ALL rt1.c0, v0.c1, rt1.c1, t0.c93 FROM rt1, v0, t0, vt0 GROUP BY rt1.c0, v0.c1, rt1.c1, t0.c93 HAVING (NOT (CAST(GROUP_CONCAT(v0.c2) AS BLOB))) UNION ALL SELECT rt1.c0, v0.c1, rt1.c1, t0.c93 FROM rt1, v0, t0, vt0 GROUP BY rt1.c0, v0.c1, rt1.c1, t0.c93 HAVING ((CAST(GROUP_CONCAT(v0.c2) AS BLOB)) ISNULL);
SELECT ALL rt1.c0, v0.c1, rt1.c1, t0.c93 FROM rt1, v0, t0, vt0 GROUP BY rt1.c0, v0.c1, rt1.c1, t0.c93;
SELECT ALL t0.c93, t0.c0 FROM t0;
SELECT ALL t0.c93, t0.c0 FROM t0 WHERE (t0.c0) UNION ALL SELECT ALL t0.c93, t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL t0.c93, t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT ALL t0.c93, t0.c0 FROM t0;
SELECT DISTINCT * FROM v0, rt1, t0 FULL OUTER JOIN vt0 ON UPPER(DISTINCT 0.9930256953565396);
SELECT DISTINCT * FROM v0, rt1, t0 FULL OUTER JOIN vt0 ON UPPER(DISTINCT 0.9930256953565396) WHERE ((((t0.c93, rt1.c1, v0.c0)) BETWEEN ((STRFTIME(rt1.c3, rt1.c0, vt0.c0, t0.c93, rt1.c1), ((((rt1.c2)OR(v0.c2)))OR(t0.c93)), ((rt1.c3) ISNULL))) AND ((((rt1.c0)<(rt1.c3)), HEX(rt1.c1), ((v0.c0) NOT NULL))))) UNION SELECT DISTINCT * FROM v0, rt1, t0 FULL OUTER JOIN vt0 ON UPPER(DISTINCT 0.9930256953565396) WHERE ((NOT ((((t0.c93, rt1.c1, v0.c0)) BETWEEN ((STRFTIME(rt1.c3, rt1.c0, vt0.c0, t0.c93, rt1.c1), ((((rt1.c2)OR(v0.c2)))OR(t0.c93)), ((rt1.c3) ISNULL))) AND ((((rt1.c0)<(rt1.c3)), HEX(rt1.c1), ((v0.c0) NOT NULL))))))) UNION SELECT DISTINCT * FROM v0, rt1, t0 FULL OUTER JOIN vt0 ON UPPER(DISTINCT 0.9930256953565396) WHERE ((((((t0.c93, rt1.c1, v0.c0)) BETWEEN ((STRFTIME(rt1.c3, rt1.c0, vt0.c0, t0.c93, rt1.c1), ((((rt1.c2)OR(v0.c2)))OR(t0.c93)), ((rt1.c3) ISNULL))) AND ((((rt1.c0)<(rt1.c3)), HEX(rt1.c1), ((v0.c0) NOT NULL))))) ISNULL));
SELECT DISTINCT * FROM v0, rt1, t0 FULL OUTER JOIN vt0 ON UPPER(DISTINCT 0.9930256953565396);
SELECT v0.c2, rt1.c1, rt1.c0, t0.c93 FROM v0 INNER JOIN rt1 ON (((1382197952) BETWEEN (0.17848656582026934) AND (t0.c0)) IN ()) INNER JOIN t0 ON JULIANDAY(CASE WHEN rt1.c3 THEN t0.c0 END, ((t0.c0) ISNULL), LAST_INSERT_ROWID()) LEFT OUTER JOIN vt0 ON ((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((t0.c93))) IN ()) GROUP BY v0.c2, rt1.c1, rt1.c0, t0.c93;
SELECT ALL v0.c2, rt1.c1, rt1.c0, t0.c93 FROM v0 INNER JOIN rt1 ON (((1382197952) BETWEEN (0.17848656582026934) AND (t0.c0)) IN ()) INNER JOIN t0 ON JULIANDAY(CASE WHEN rt1.c3 THEN t0.c0 END, ((t0.c0) ISNULL), LAST_INSERT_ROWID()) LEFT OUTER JOIN vt0 ON ((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((t0.c93))) IN ()) WHERE ((v0.c1 COLLATE NOCASE IN (ABS(vt0.c0)))) GROUP BY v0.c2, rt1.c1, rt1.c0, t0.c93 UNION SELECT v0.c2, rt1.c1, rt1.c0, t0.c93 FROM v0 INNER JOIN rt1 ON (((1382197952) BETWEEN (0.17848656582026934) AND (t0.c0)) IN ()) INNER JOIN t0 ON JULIANDAY(CASE WHEN rt1.c3 THEN t0.c0 END, ((t0.c0) ISNULL), LAST_INSERT_ROWID()) LEFT OUTER JOIN vt0 ON ((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((t0.c93))) IN ()) WHERE ((NOT ((v0.c1 COLLATE NOCASE IN (ABS(vt0.c0)))))) GROUP BY v0.c2, rt1.c1, rt1.c0, t0.c93 UNION SELECT ALL v0.c2, rt1.c1, rt1.c0, t0.c93 FROM v0 INNER JOIN rt1 ON (((1382197952) BETWEEN (0.17848656582026934) AND (t0.c0)) IN ()) INNER JOIN t0 ON JULIANDAY(CASE WHEN rt1.c3 THEN t0.c0 END, ((t0.c0) ISNULL), LAST_INSERT_ROWID()) LEFT OUTER JOIN vt0 ON ((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((t0.c93))) IN ()) WHERE ((((v0.c1 COLLATE NOCASE IN (ABS(vt0.c0)))) ISNULL)) GROUP BY v0.c2, rt1.c1, rt1.c0, t0.c93;
SELECT v0.c2, rt1.c1, rt1.c0, t0.c93 FROM v0 INNER JOIN rt1 ON (((1382197952) BETWEEN (0.17848656582026934) AND (t0.c0)) IN ()) INNER JOIN t0 ON JULIANDAY(CASE WHEN rt1.c3 THEN t0.c0 END, ((t0.c0) ISNULL), LAST_INSERT_ROWID()) LEFT OUTER JOIN vt0 ON ((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((t0.c93))) IN ()) GROUP BY v0.c2, rt1.c1, rt1.c0, t0.c93;
SELECT t0.c93, t0.c0 FROM t0, vt0, v0 GROUP BY t0.c93, t0.c0;
SELECT ALL t0.c93, t0.c0 FROM t0, vt0, v0 GROUP BY t0.c93, t0.c0 HAVING MAX(MIN(COUNT(COUNT(TOTAL(vt0.c0))))) UNION ALL SELECT t0.c93, t0.c0 FROM t0, vt0, v0 GROUP BY t0.c93, t0.c0 HAVING (NOT (MAX(MIN(COUNT(COUNT(TOTAL(vt0.c0))))))) UNION ALL SELECT t0.c93, t0.c0 FROM t0, vt0, v0 GROUP BY t0.c93, t0.c0 HAVING ((MAX(MIN(COUNT(COUNT(TOTAL(vt0.c0)))))) ISNULL);
SELECT * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) IN ())) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) IN ())))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) IN ())) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0, v0.c2, v0.c1 FROM vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0, v0.c2, v0.c1 FROM vt0, v0 WHERE (v0.c2) UNION SELECT DISTINCT v0.c0, vt0.c0, v0.c2, v0.c1 FROM vt0, v0 WHERE ((NOT (v0.c2))) UNION SELECT DISTINCT v0.c0, vt0.c0, v0.c2, v0.c1 FROM vt0, v0 WHERE (((v0.c2) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0, v0.c2, v0.c1 FROM vt0, v0;
SELECT ALL rt1.c2 FROM v0, vt0, rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM v0, vt0, rt1 WHERE (((((((((rt1.c1)OR(rt1.c1)))OR(x'')))OR(((rt1.c1) ISNULL))))AND('0.8498383376624775'))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM v0, vt0, rt1 WHERE ((NOT (((((((((rt1.c1)OR(rt1.c1)))OR(x'')))OR(((rt1.c1) ISNULL))))AND('0.8498383376624775'))))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM v0, vt0, rt1 WHERE (((((((((((rt1.c1)OR(rt1.c1)))OR(x'')))OR(((rt1.c1) ISNULL))))AND('0.8498383376624775'))) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM v0, vt0, rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM vt0, rt1 CROSS JOIN t0 ON (0.8413366236189517 IN ()) GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM vt0, rt1 CROSS JOIN t0 ON (0.8413366236189517 IN ()) GROUP BY rt1.c0, rt1.c2 HAVING CASE WHEN AVG(TOTAL(rt1.c2)) THEN (((rt1.c3)) BETWEEN ((GROUP_CONCAT(MIN(GROUP_CONCAT(COUNT(*)))))) AND ((rt1.c1))) WHEN MAX(GROUP_CONCAT(t0.c93)) THEN COUNT(*) WHEN vt0.c0 COLLATE RTRIM THEN rt1.c2 COLLATE NOCASE ELSE SUM(0.1630406214885849) END UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM vt0, rt1 CROSS JOIN t0 ON (0.8413366236189517 IN ()) GROUP BY rt1.c0, rt1.c2 HAVING (NOT (CASE WHEN AVG(TOTAL(rt1.c2)) THEN (((rt1.c3)) BETWEEN ((GROUP_CONCAT(MIN(GROUP_CONCAT(COUNT(*)))))) AND ((rt1.c1))) WHEN MAX(GROUP_CONCAT(t0.c93)) THEN COUNT(*) WHEN vt0.c0 COLLATE RTRIM THEN rt1.c2 COLLATE NOCASE ELSE SUM(0.1630406214885849) END)) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM vt0, rt1 CROSS JOIN t0 ON (0.8413366236189517 IN ()) GROUP BY rt1.c0, rt1.c2 HAVING ((CASE WHEN AVG(TOTAL(rt1.c2)) THEN (((rt1.c3)) BETWEEN ((GROUP_CONCAT(MIN(GROUP_CONCAT(COUNT(*)))))) AND ((rt1.c1))) WHEN MAX(GROUP_CONCAT(t0.c93)) THEN COUNT(*) WHEN vt0.c0 COLLATE RTRIM THEN rt1.c2 COLLATE NOCASE ELSE SUM(0.1630406214885849) END) ISNULL);
SELECT rt1.c0 FROM rt1 FULL OUTER JOIN v0 ON (((~ (rt1.c2))) ISNULL);
SELECT ALL rt1.c0 FROM rt1 FULL OUTER JOIN v0 ON (((~ (rt1.c2))) ISNULL) WHERE (((CAST(rt1.c3 AS BLOB))%(rt1.c2))) UNION ALL SELECT ALL rt1.c0 FROM rt1 FULL OUTER JOIN v0 ON (((~ (rt1.c2))) ISNULL) WHERE ((NOT (((CAST(rt1.c3 AS BLOB))%(rt1.c2))))) UNION ALL SELECT rt1.c0 FROM rt1 FULL OUTER JOIN v0 ON (((~ (rt1.c2))) ISNULL) WHERE (((((CAST(rt1.c3 AS BLOB))%(rt1.c2))) ISNULL));
SELECT rt1.c0 FROM rt1 FULL OUTER JOIN v0 ON (((~ (rt1.c2))) ISNULL);
SELECT DISTINCT * FROM v0, rt1;
SELECT DISTINCT * FROM v0, rt1 WHERE (((0.277320627333961) NOT BETWEEN (LIKELIHOOD(v0.c0, 0.6444887848855394)) AND (v0.c2 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0, rt1 WHERE ((NOT (((0.277320627333961) NOT BETWEEN (LIKELIHOOD(v0.c0, 0.6444887848855394)) AND (v0.c2 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM v0, rt1 WHERE (((((0.277320627333961) NOT BETWEEN (LIKELIHOOD(v0.c0, 0.6444887848855394)) AND (v0.c2 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM v0, rt1;
SELECT rt1.c3, v0.c0, rt1.c0 FROM vt0, v0, rt1 GROUP BY rt1.c3, v0.c0, rt1.c0;
SELECT ALL rt1.c3, v0.c0, rt1.c0 FROM vt0, v0, rt1 WHERE (0xffffffff815b39f1) GROUP BY rt1.c3, v0.c0, rt1.c0 UNION SELECT ALL rt1.c3, v0.c0, rt1.c0 FROM vt0, v0, rt1 WHERE ((NOT (0xffffffff815b39f1))) GROUP BY rt1.c3, v0.c0, rt1.c0 UNION SELECT ALL rt1.c3, v0.c0, rt1.c0 FROM vt0, v0, rt1 WHERE (((0Xffffffff815b39f1) ISNULL)) GROUP BY rt1.c3, v0.c0, rt1.c0;
SELECT rt1.c3, v0.c0, rt1.c0 FROM vt0, v0, rt1 GROUP BY rt1.c3, v0.c0, rt1.c0;
SELECT t0.c0, rt1.c0 FROM rt1, t0, vt0 GROUP BY t0.c0, rt1.c0;
SELECT t0.c0, rt1.c0 FROM rt1, t0, vt0 GROUP BY t0.c0, rt1.c0 HAVING AVG(((rt1.c0)>>(rt1.c3))) UNION ALL SELECT t0.c0, rt1.c0 FROM rt1, t0, vt0 GROUP BY t0.c0, rt1.c0 HAVING (NOT (AVG(((rt1.c0)>>(rt1.c3))))) UNION ALL SELECT ALL t0.c0, rt1.c0 FROM rt1, t0, vt0 GROUP BY t0.c0, rt1.c0 HAVING ((AVG(((rt1.c0)>>(rt1.c3)))) ISNULL);
SELECT t0.c0, rt1.c0 FROM rt1, t0, vt0 GROUP BY t0.c0, rt1.c0;
SELECT t0.c0, rt1.c0 FROM rt1, t0, vt0 GROUP BY t0.c0, rt1.c0 HAVING AVG(((rt1.c0)>>(rt1.c3))) UNION ALL SELECT t0.c0, rt1.c0 FROM rt1, t0, vt0 GROUP BY t0.c0, rt1.c0 HAVING (NOT (AVG(((rt1.c0)>>(rt1.c3))))) UNION ALL SELECT ALL t0.c0, rt1.c0 FROM rt1, t0, vt0 GROUP BY t0.c0, rt1.c0 HAVING ((AVG(((rt1.c0)>>(rt1.c3)))) ISNULL);
SELECT t0.c0, rt1.c0 FROM rt1, t0, vt0 GROUP BY t0.c0, rt1.c0;
SELECT ALL * FROM vt0, v0, t0, rt1;
SELECT * FROM vt0, v0, t0, rt1 WHERE (((((vt0.c0) IS FALSE))>('0.3564010854618346'))) UNION ALL SELECT ALL * FROM vt0, v0, t0, rt1 WHERE ((NOT (((((vt0.c0) IS FALSE))>('0.3564010854618346'))))) UNION ALL SELECT ALL * FROM vt0, v0, t0, rt1 WHERE (((((((vt0.c0) IS FALSE))>('0.3564010854618346'))) ISNULL));
SELECT ALL * FROM vt0, v0, t0, rt1;
SELECT DISTINCT rt1.c1 FROM t0, v0 LEFT OUTER JOIN rt1 ON (((((0.8690825459127796) BETWEEN (t0.c93) AND (rt1.c1))))>=(((~ (rt1.c0))))) INNER JOIN vt0 ON v0.c2;
SELECT DISTINCT rt1.c1 FROM t0, v0 LEFT OUTER JOIN rt1 ON (((((0.8690825459127796) BETWEEN (t0.c93) AND (rt1.c1))))>=(((~ (rt1.c0))))) INNER JOIN vt0 ON v0.c2 WHERE (CAST(((t0.c0)!=(rt1.c1)) AS BLOB)) UNION SELECT DISTINCT rt1.c1 FROM t0, v0 LEFT OUTER JOIN rt1 ON (((((0.8690825459127796) BETWEEN (t0.c93) AND (rt1.c1))))>=(((~ (rt1.c0))))) INNER JOIN vt0 ON v0.c2 WHERE ((NOT (CAST(((t0.c0)!=(rt1.c1)) AS BLOB)))) UNION SELECT DISTINCT rt1.c1 FROM t0, v0 LEFT OUTER JOIN rt1 ON (((((0.8690825459127796) BETWEEN (t0.c93) AND (rt1.c1))))>=(((~ (rt1.c0))))) INNER JOIN vt0 ON v0.c2 WHERE (((CAST(((t0.c0)!=(rt1.c1)) AS BLOB)) ISNULL));
SELECT DISTINCT rt1.c1 FROM t0, v0 LEFT OUTER JOIN rt1 ON (((((0.8690825459127796) BETWEEN (t0.c93) AND (rt1.c1))))>=(((~ (rt1.c0))))) INNER JOIN vt0 ON v0.c2;
SELECT ALL v0.c0 FROM rt1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM rt1, v0 WHERE (((((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0))) NOT NULL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM rt1, v0 WHERE ((NOT (((((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0))) NOT NULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM rt1, v0 WHERE (((((((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0))) NOT NULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt1, v0 GROUP BY v0.c0;
SELECT ALL v0.c2, rt1.c0, rt1.c3 FROM v0, vt0, rt1 INDEXED BY i52, t0 GROUP BY v0.c2, rt1.c0, rt1.c3;
SELECT t0.c93 FROM v0, t0, rt1, vt0;
SELECT t0.c93 FROM v0, t0, rt1, vt0 WHERE ((((x''))>((((((((((vt0.c0)OR(v0.c1)))AND(rt1.c3)))OR(vt0.c0)))OR(rt1.c1)))))) UNION ALL SELECT t0.c93 FROM v0, t0, rt1, vt0 WHERE ((NOT ((((x''))>((((((((((vt0.c0)OR(v0.c1)))AND(rt1.c3)))OR(vt0.c0)))OR(rt1.c1)))))))) UNION ALL SELECT ALL t0.c93 FROM v0, t0, rt1, vt0 WHERE ((((((x''))>((((((((((vt0.c0)OR(v0.c1)))AND(rt1.c3)))OR(vt0.c0)))OR(rt1.c1)))))) ISNULL));
SELECT t0.c93 FROM v0, t0, rt1, vt0;
SELECT DISTINCT v0.c1, v0.c0 FROM v0;
SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE ((((x''))!=((v0.c2 COLLATE RTRIM)))) UNION SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE ((NOT ((((x''))!=((v0.c2 COLLATE RTRIM)))))) UNION SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE ((((((x''))!=((v0.c2 COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT v0.c1, v0.c0 FROM v0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 WHERE (CAST(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)) AS INTEGER)) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (CAST(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)) AS INTEGER)))) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1 WHERE (((CAST(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)) AS INTEGER)) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL t0.c93 FROM t0 GROUP BY t0.c93;
SELECT t0.c93 FROM t0 GROUP BY t0.c93 HAVING GROUP_CONCAT(MAX(MAX(t0.c0))) COLLATE BINARY UNION ALL SELECT t0.c93 FROM t0 GROUP BY t0.c93 HAVING (NOT (GROUP_CONCAT(MAX(MAX(t0.c0))) COLLATE BINARY)) UNION ALL SELECT t0.c93 FROM t0 GROUP BY t0.c93 HAVING ((GROUP_CONCAT(MAX(MAX(t0.c0))) COLLATE BINARY) ISNULL);
SELECT ALL v0.c0, t0.c93, vt0.c0, v0.c2 FROM v0, t0, vt0;
SELECT ALL v0.c0, t0.c93, vt0.c0, v0.c2 FROM v0, t0, vt0 NOT INDEXED WHERE ((NOT (((vt0.c0)*(v0.c2))))) UNION ALL SELECT v0.c0, t0.c93, vt0.c0, v0.c2 FROM v0, t0, vt0 WHERE ((NOT ((NOT (((vt0.c0)*(v0.c2))))))) UNION ALL SELECT v0.c0, t0.c93, vt0.c0, v0.c2 FROM v0, t0, vt0 WHERE ((((NOT (((vt0.c0)*(v0.c2))))) ISNULL));
SELECT ALL v0.c0, t0.c93, vt0.c0, v0.c2 FROM v0, t0, vt0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE ((+ ((t0.c0 IN ())))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT ((+ ((t0.c0 IN ())))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((((+ ((t0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL rt1.c1, t0.c0, rt1.c2, rt1.c3 FROM rt1, vt0, t0 GROUP BY rt1.c1, t0.c0, rt1.c2, rt1.c3;
SELECT rt1.c1, t0.c0, rt1.c2, rt1.c3 FROM rt1, vt0, t0 WHERE (((rt1.c2)<(vt0.c0))) GROUP BY rt1.c1, t0.c0, rt1.c2, rt1.c3 UNION SELECT rt1.c1, t0.c0, rt1.c2, rt1.c3 FROM rt1, vt0, t0 WHERE ((NOT (((rt1.c2)<(vt0.c0))))) GROUP BY rt1.c1, t0.c0, rt1.c2, rt1.c3 UNION SELECT rt1.c1, t0.c0, rt1.c2, rt1.c3 FROM rt1, vt0, t0 WHERE (((((rt1.c2)<(vt0.c0))) ISNULL)) GROUP BY rt1.c1, t0.c0, rt1.c2, rt1.c3;
SELECT ALL rt1.c1, t0.c0, rt1.c2, rt1.c3 FROM rt1, vt0, t0 GROUP BY rt1.c1, t0.c0, rt1.c2, rt1.c3;
SELECT t0.c93 FROM t0, vt0 GROUP BY t0.c93;
SELECT ALL t0.c93 FROM t0, vt0 GROUP BY t0.c93 HAVING (COUNT(MIN(AVG(TOTAL(COUNT(t0.c0))))) IN ()) UNION ALL SELECT ALL t0.c93 FROM t0, vt0 GROUP BY t0.c93 HAVING (NOT ((COUNT(MIN(AVG(TOTAL(COUNT(t0.c0))))) IN ()))) UNION ALL SELECT t0.c93 FROM t0, vt0 GROUP BY t0.c93 HAVING (((COUNT(MIN(AVG(TOTAL(COUNT(t0.c0))))) IN ())) ISNULL);
SELECT t0.c93 FROM t0, vt0 GROUP BY t0.c93;
SELECT ALL t0.c93 FROM t0, vt0 GROUP BY t0.c93 HAVING (COUNT(MIN(AVG(TOTAL(COUNT(t0.c0))))) IN ()) UNION ALL SELECT ALL t0.c93 FROM t0, vt0 GROUP BY t0.c93 HAVING (NOT ((COUNT(MIN(AVG(TOTAL(COUNT(t0.c0))))) IN ()))) UNION ALL SELECT t0.c93 FROM t0, vt0 GROUP BY t0.c93 HAVING (((COUNT(MIN(AVG(TOTAL(COUNT(t0.c0))))) IN ())) ISNULL);
SELECT t0.c93 FROM t0, vt0 GROUP BY t0.c93;
SELECT ALL * FROM rt1, vt0 LEFT OUTER JOIN t0 ON rtreenode(((rt1.c0) ISNULL), ((0.8666429369458684) NOT BETWEEN (rt1.c1) AND (t0.c0))) FULL OUTER JOIN v0 ON ((((v0.c0)||(v0.c2)))<>(v0.c1));
SELECT * FROM rt1, vt0 LEFT OUTER JOIN t0 ON rtreenode(((rt1.c0) ISNULL), ((0.8666429369458684) NOT BETWEEN (rt1.c1) AND (t0.c0))) FULL OUTER JOIN v0 ON ((((v0.c0)||(v0.c2)))<>(v0.c1)) WHERE ((+ (TRIM('', rt1.c3)))) UNION ALL SELECT * FROM rt1, vt0 LEFT OUTER JOIN t0 ON rtreenode(((rt1.c0) ISNULL), ((0.8666429369458684) NOT BETWEEN (rt1.c1) AND (t0.c0))) FULL OUTER JOIN v0 ON ((((v0.c0)||(v0.c2)))<>(v0.c1)) WHERE ((NOT ((+ (TRIM('', rt1.c3)))))) UNION ALL SELECT ALL * FROM rt1, vt0 LEFT OUTER JOIN t0 ON rtreenode(((rt1.c0) ISNULL), ((0.8666429369458684) NOT BETWEEN (rt1.c1) AND (t0.c0))) FULL OUTER JOIN v0 ON ((((v0.c0)||(v0.c2)))!=(v0.c1)) WHERE ((((+ (TRIM('', rt1.c3)))) ISNULL));
SELECT ALL * FROM rt1, vt0 LEFT OUTER JOIN t0 ON rtreenode(((rt1.c0) ISNULL), ((0.8666429369458684) NOT BETWEEN (rt1.c1) AND (t0.c0))) FULL OUTER JOIN v0 ON ((((v0.c0)||(v0.c2)))<>(v0.c1));
SELECT DISTINCT v0.c2, t0.c93, v0.c0, v0.c1, vt0.c0, t0.c0 FROM vt0, t0, v0;
SELECT DISTINCT v0.c2, t0.c93, v0.c0, v0.c1, vt0.c0, t0.c0 FROM vt0, t0, v0 WHERE (MAX(CAST(v0.c0 AS INTEGER), ((v0.c1)<(t0.c93)))) UNION SELECT DISTINCT v0.c2, t0.c93, v0.c0, v0.c1, vt0.c0, t0.c0 FROM vt0, t0, v0 WHERE ((NOT (MAX(CAST(v0.c0 AS INTEGER), ((v0.c1)<(t0.c93)))))) UNION SELECT DISTINCT v0.c2, t0.c93, v0.c0, v0.c1, vt0.c0, t0.c0 FROM vt0, t0, v0 WHERE (((MAX(CAST(v0.c0 AS INTEGER), ((v0.c1)<(t0.c93)))) ISNULL));
SELECT DISTINCT v0.c2, t0.c93, v0.c0, v0.c1, vt0.c0, t0.c0 FROM vt0, t0, v0;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 WHERE (CAST(CAST(v0.c1 AS NUMERIC) AS NUMERIC)) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0 WHERE ((NOT (CAST(CAST(v0.c1 AS NUMERIC) AS NUMERIC)))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0 WHERE (((CAST(CAST(v0.c1 AS NUMERIC) AS NUMERIC)) ISNULL)) GROUP BY v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT vt0.c0 FROM v0, rt1, vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, rt1, vt0, t0 GROUP BY vt0.c0 HAVING CASE WHEN (NULL IN ()) THEN TYPEOF(COUNT(COUNT(*))) END UNION ALL SELECT vt0.c0 FROM v0, rt1, vt0, t0 GROUP BY vt0.c0 HAVING (NOT (CASE WHEN (NULL IN ()) THEN TYPEOF(COUNT(COUNT(*))) END)) UNION ALL SELECT ALL vt0.c0 FROM v0, rt1, vt0, t0 GROUP BY vt0.c0 HAVING ((CASE WHEN (NULL IN ()) THEN TYPEOF(COUNT(COUNT(*))) END) ISNULL);
SELECT ALL v0.c2 FROM v0;
SELECT v0.c2 FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c2))) ISNULL)) UNION ALL SELECT v0.c2 FROM v0 WHERE ((NOT (((((((v0.c0)AND(v0.c0)))OR(v0.c2))) ISNULL)))) UNION ALL SELECT v0.c2 FROM v0 WHERE (((((((((v0.c0)AND(v0.c0)))OR(v0.c2))) ISNULL)) ISNULL));
SELECT ALL v0.c2 FROM v0;
SELECT DISTINCT t0.c93 FROM t0;
SELECT DISTINCT t0.c93 FROM t0 WHERE (((((t0.c93) IS TRUE))&(t0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT t0.c93 FROM t0 WHERE ((NOT (((((t0.c93) IS TRUE))&(t0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT t0.c93 FROM t0 WHERE (((((((t0.c93) IS TRUE))&(t0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT t0.c93 FROM t0;
SELECT ALL rt1.c0, vt0.c0, v0.c1, t0.c0, rt1.c1 FROM v0, vt0, rt1, t0 GROUP BY rt1.c0, vt0.c0, v0.c1, t0.c0, rt1.c1;
SELECT rt1.c0, vt0.c0, v0.c1, t0.c0, rt1.c1 FROM v0, vt0, rt1, t0 WHERE ((NOT (((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c1))))) GROUP BY rt1.c0, vt0.c0, v0.c1, t0.c0, rt1.c1 UNION SELECT rt1.c0, vt0.c0, v0.c1, t0.c0, rt1.c1 FROM v0, vt0, rt1, t0 WHERE ((NOT ((NOT (((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c1))))))) GROUP BY rt1.c0, vt0.c0, v0.c1, t0.c0, rt1.c1 UNION SELECT ALL rt1.c0, vt0.c0, v0.c1, t0.c0, rt1.c1 FROM v0, vt0, rt1, t0 WHERE ((((NOT (((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c1))))) ISNULL)) GROUP BY rt1.c0, vt0.c0, v0.c1, t0.c0, rt1.c1;
SELECT ALL rt1.c0, vt0.c0, v0.c1, t0.c0, rt1.c1 FROM v0, vt0, rt1, t0 GROUP BY rt1.c0, vt0.c0, v0.c1, t0.c0, rt1.c1;
SELECT t0.c0, vt0.c0, v0.c0, v0.c2, v0.c1, t0.c93 FROM vt0, t0, v0 GROUP BY t0.c0, vt0.c0, v0.c0, v0.c2, v0.c1, t0.c93;
SELECT t0.c0, vt0.c0, v0.c0, v0.c2, v0.c1, t0.c93 FROM vt0, t0, v0 GROUP BY t0.c0, vt0.c0, v0.c0, v0.c2, v0.c1, t0.c93 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, vt0.c0, v0.c0, v0.c2, v0.c1, t0.c93 FROM vt0, t0, v0 GROUP BY t0.c0, vt0.c0, v0.c0, v0.c2, v0.c1, t0.c93 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, vt0.c0, v0.c0, v0.c2, v0.c1, t0.c93 FROM vt0, t0, v0 GROUP BY t0.c0, vt0.c0, v0.c0, v0.c2, v0.c1, t0.c93 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, vt0.c0, v0.c0, v0.c2, v0.c1, t0.c93 FROM vt0, t0, v0 GROUP BY t0.c0, vt0.c0, v0.c0, v0.c2, v0.c1, t0.c93;
SELECT t0.c0, vt0.c0, v0.c0, v0.c2, v0.c1, t0.c93 FROM vt0, t0, v0 GROUP BY t0.c0, vt0.c0, v0.c0, v0.c2, v0.c1, t0.c93 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, vt0.c0, v0.c0, v0.c2, v0.c1, t0.c93 FROM vt0, t0, v0 GROUP BY t0.c0, vt0.c0, v0.c0, v0.c2, v0.c1, t0.c93 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, vt0.c0, v0.c0, v0.c2, v0.c1, t0.c93 FROM vt0, t0, v0 GROUP BY t0.c0, vt0.c0, v0.c0, v0.c2, v0.c1, t0.c93 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, vt0.c0, v0.c0, v0.c2, v0.c1, t0.c93 FROM vt0, t0, v0 GROUP BY t0.c0, vt0.c0, v0.c0, v0.c2, v0.c1, t0.c93;
SELECT ALL vt0.c0, v0.c0, rt1.c2, v0.c2, rt1.c1, rt1.c3 FROM vt0, v0, rt1;
SELECT ALL vt0.c0, v0.c0, rt1.c2, v0.c2, rt1.c1, rt1.c3 FROM vt0, v0, rt1 WHERE (0.19457274294082316) UNION ALL SELECT vt0.c0, v0.c0, rt1.c2, v0.c2, rt1.c1, rt1.c3 FROM vt0, v0, rt1 WHERE ((NOT (0.19457274294082316))) UNION ALL SELECT ALL vt0.c0, v0.c0, rt1.c2, v0.c2, rt1.c1, rt1.c3 FROM vt0, v0, rt1 WHERE (((0.19457274294082316) ISNULL));
SELECT ALL vt0.c0, v0.c0, rt1.c2, v0.c2, rt1.c1, rt1.c3 FROM vt0, v0, rt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((t0.c0 COLLATE BINARY IN (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c93)), ((((((((t0.c93)AND(t0.c93)))OR(t0.c0)))AND(t0.c0)))OR(x''))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((t0.c0 COLLATE BINARY IN (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c93)), ((((((((t0.c93)AND(t0.c93)))OR(t0.c0)))AND(t0.c0)))OR(x''))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((t0.c0 COLLATE BINARY IN (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c93)), ((((((((t0.c93)AND(t0.c93)))OR(t0.c0)))AND(t0.c0)))OR(x''))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE ((t0.c93)>=(x''))  WHEN ((t0.c0)%(t0.c0)) THEN 1.995488966E9 WHEN ((t0.c0) BETWEEN (t0.c93) AND (t0.c0)) THEN ((t0.c93)LIKE(t0.c0)) WHEN 0.747484891360457 THEN ((t0.c0) IS FALSE) END) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE ((t0.c93)>=(x''))  WHEN ((t0.c0)%(t0.c0)) THEN 1.995488966E9 WHEN ((t0.c0) BETWEEN (t0.c93) AND (t0.c0)) THEN ((t0.c93)LIKE(t0.c0)) WHEN 0.747484891360457 THEN ((t0.c0) IS FALSE) END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CASE ((t0.c93)>=(x''))  WHEN ((t0.c0)%(t0.c0)) THEN 1.995488966E9 WHEN ((t0.c0) BETWEEN (t0.c93) AND (t0.c0)) THEN ((t0.c93)LIKE(t0.c0)) WHEN 0.747484891360457 THEN ((t0.c0) IS FALSE) END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c1, rt1.c2, v0.c1, t0.c93, rt1.c3, vt0.c0, t0.c0, v0.c2, rt1.c0 FROM t0, vt0, v0 INNER JOIN rt1 ON ((((((rt1.c0)OR(rt1.c3)))AND(t0.c93)))*(((rt1.c1)-(rt1.c2)))) GROUP BY rt1.c1, rt1.c2, v0.c1, t0.c93, rt1.c3, vt0.c0, t0.c0, v0.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, v0.c1, t0.c93, rt1.c3, vt0.c0, t0.c0, v0.c2, rt1.c0 FROM t0, vt0, v0 INNER JOIN rt1 ON ((((((rt1.c0)OR(rt1.c3)))AND(t0.c93)))*(((rt1.c1)-(rt1.c2)))) GROUP BY rt1.c1, rt1.c2, v0.c1, t0.c93, rt1.c3, vt0.c0, t0.c0, v0.c2, rt1.c0 HAVING (- (((v0.c2) NOT BETWEEN (rt1.c0) AND (t0.c0)))) UNION ALL SELECT rt1.c1, rt1.c2, v0.c1, t0.c93, rt1.c3, vt0.c0, t0.c0, v0.c2, rt1.c0 FROM t0, vt0, v0 INNER JOIN rt1 ON ((((((rt1.c0)OR(rt1.c3)))AND(t0.c93)))*(((rt1.c1)-(rt1.c2)))) GROUP BY rt1.c1, rt1.c2, v0.c1, t0.c93, rt1.c3, vt0.c0, t0.c0, v0.c2, rt1.c0 HAVING (NOT ((- (((v0.c2) NOT BETWEEN (rt1.c0) AND (t0.c0)))))) UNION ALL SELECT ALL rt1.c1, rt1.c2, v0.c1, t0.c93, rt1.c3, vt0.c0, t0.c0, v0.c2, rt1.c0 FROM t0, vt0, v0 INNER JOIN rt1 ON ((((((rt1.c0)OR(rt1.c3)))AND(t0.c93)))*(((rt1.c1)-(rt1.c2)))) GROUP BY rt1.c1, rt1.c2, v0.c1, t0.c93, rt1.c3, vt0.c0, t0.c0, v0.c2, rt1.c0 HAVING (((- (((v0.c2) NOT BETWEEN (rt1.c0) AND (t0.c0))))) ISNULL);
SELECT rt1.c1, rt1.c2, v0.c1, t0.c93, rt1.c3, vt0.c0, t0.c0, v0.c2, rt1.c0 FROM t0, vt0, v0 INNER JOIN rt1 ON ((((((rt1.c0)OR(rt1.c3)))AND(t0.c93)))*(((rt1.c1)-(rt1.c2)))) GROUP BY rt1.c1, rt1.c2, v0.c1, t0.c93, rt1.c3, vt0.c0, t0.c0, v0.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, v0.c1, t0.c93, rt1.c3, vt0.c0, t0.c0, v0.c2, rt1.c0 FROM t0, vt0, v0 INNER JOIN rt1 ON ((((((rt1.c0)OR(rt1.c3)))AND(t0.c93)))*(((rt1.c1)-(rt1.c2)))) GROUP BY rt1.c1, rt1.c2, v0.c1, t0.c93, rt1.c3, vt0.c0, t0.c0, v0.c2, rt1.c0 HAVING (- (((v0.c2) NOT BETWEEN (rt1.c0) AND (t0.c0)))) UNION ALL SELECT rt1.c1, rt1.c2, v0.c1, t0.c93, rt1.c3, vt0.c0, t0.c0, v0.c2, rt1.c0 FROM t0, vt0, v0 INNER JOIN rt1 ON ((((((rt1.c0)OR(rt1.c3)))AND(t0.c93)))*(((rt1.c1)-(rt1.c2)))) GROUP BY rt1.c1, rt1.c2, v0.c1, t0.c93, rt1.c3, vt0.c0, t0.c0, v0.c2, rt1.c0 HAVING (NOT ((- (((v0.c2) NOT BETWEEN (rt1.c0) AND (t0.c0)))))) UNION ALL SELECT ALL rt1.c1, rt1.c2, v0.c1, t0.c93, rt1.c3, vt0.c0, t0.c0, v0.c2, rt1.c0 FROM t0, vt0, v0 INNER JOIN rt1 ON ((((((rt1.c0)OR(rt1.c3)))AND(t0.c93)))*(((rt1.c1)-(rt1.c2)))) GROUP BY rt1.c1, rt1.c2, v0.c1, t0.c93, rt1.c3, vt0.c0, t0.c0, v0.c2, rt1.c0 HAVING (((- (((v0.c2) NOT BETWEEN (rt1.c0) AND (t0.c0))))) ISNULL);
SELECT rt1.c1, rt1.c2, v0.c1, t0.c93, rt1.c3, vt0.c0, t0.c0, v0.c2, rt1.c0 FROM t0, vt0, v0 INNER JOIN rt1 ON ((((((rt1.c0)OR(rt1.c3)))AND(t0.c93)))*(((rt1.c1)-(rt1.c2)))) GROUP BY rt1.c1, rt1.c2, v0.c1, t0.c93, rt1.c3, vt0.c0, t0.c0, v0.c2, rt1.c0;
SELECT ALL * FROM rt1, v0, vt0, t0;
SELECT ALL * FROM rt1, v0, vt0, t0 WHERE ((((vt0.c0)) NOT BETWEEN ((v0.c2)) AND ((CASE v0.c2  WHEN t0.c0 THEN v0.c0 END)))) UNION ALL SELECT * FROM rt1, v0, vt0, t0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((v0.c2)) AND ((CASE v0.c2  WHEN t0.c0 THEN v0.c0 END)))))) UNION ALL SELECT * FROM rt1, v0, vt0, t0 WHERE ((((((vt0.c0)) NOT BETWEEN ((v0.c2)) AND ((CASE v0.c2  WHEN t0.c0 THEN v0.c0 END)))) ISNULL));
SELECT ALL * FROM rt1, v0, vt0, t0;
SELECT DISTINCT v0.c2, v0.c0, rt1.c1, rt1.c3 FROM t0, rt1, v0;
SELECT DISTINCT v0.c2, v0.c0, rt1.c1, rt1.c3 FROM t0, rt1, v0 WHERE ((((((((((- (v0.c0)))AND(((rt1.c2)>>('1968769166')))))OR(CAST(rt1.c1 AS BLOB))))OR(rt1.c3 COLLATE BINARY)))OR(rt1.c0))) UNION SELECT DISTINCT v0.c2, v0.c0, rt1.c1, rt1.c3 FROM t0, rt1 NOT INDEXED, v0 WHERE ((NOT ((((((((((- (v0.c0)))AND(((rt1.c2)>>('1968769166')))))OR(CAST(rt1.c1 AS BLOB))))OR(rt1.c3 COLLATE BINARY)))OR(rt1.c0))))) UNION SELECT DISTINCT v0.c2, v0.c0, rt1.c1, rt1.c3 FROM t0, rt1, v0 WHERE ((((((((((((- (v0.c0)))AND(((rt1.c2)>>('1968769166')))))OR(CAST(rt1.c1 AS BLOB))))OR(rt1.c3 COLLATE BINARY)))OR(rt1.c0))) ISNULL));
SELECT DISTINCT v0.c2, v0.c0, rt1.c1, rt1.c3 FROM t0, rt1, v0;
SELECT ALL v0.c0 FROM t0, v0, rt1 GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0, rt1 WHERE (NULL) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t0, v0, rt1 WHERE ((NOT (NULL))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t0, v0, rt1 WHERE (((NULL) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, v0, rt1 GROUP BY v0.c0;
SELECT ALL rt1.c0, rt1.c1, rt1.c3, vt0.c0, t0.c0 FROM t0, rt1, vt0 INDEXED BY i52 GROUP BY rt1.c0, rt1.c1, rt1.c3, vt0.c0, t0.c0;
SELECT ALL * FROM t0, v0, vt0;
SELECT * FROM t0, v0, vt0 WHERE (CAST(v0.c0 AS REAL) COLLATE BINARY) UNION ALL SELECT * FROM t0, v0, vt0 WHERE ((NOT (CAST(v0.c0 AS REAL) COLLATE BINARY))) UNION ALL SELECT ALL * FROM t0, v0, vt0 WHERE (((CAST(v0.c0 AS REAL) COLLATE BINARY) ISNULL));
SELECT ALL * FROM t0, v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0, rt1.c0, rt1.c3, v0.c1, rt1.c2, rt1.c1, t0.c0 FROM v0, rt1, vt0, t0;
SELECT DISTINCT vt0.c0, v0.c0, rt1.c0, rt1.c3, v0.c1, rt1.c2, rt1.c1, t0.c0 FROM v0, rt1, vt0, t0 WHERE (((x'') NOTNULL)) UNION SELECT DISTINCT vt0.c0, v0.c0, rt1.c0, rt1.c3, v0.c1, rt1.c2, rt1.c1, t0.c0 FROM v0, rt1, vt0, t0 WHERE ((NOT (((x'') NOTNULL)))) UNION SELECT DISTINCT vt0.c0, v0.c0, rt1.c0, rt1.c3, v0.c1, rt1.c2, rt1.c1, t0.c0 FROM v0, rt1, vt0, t0 WHERE (((((x'') NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0, rt1.c0, rt1.c3, v0.c1, rt1.c2, rt1.c1, t0.c0 FROM v0, rt1, vt0, t0;
SELECT rt1.c3, rt1.c1, v0.c2 FROM rt1, vt0, t0, v0 GROUP BY rt1.c3, rt1.c1, v0.c2;
SELECT rt1.c3, rt1.c1, v0.c2 FROM rt1, vt0, t0, v0 WHERE (CASE ((vt0.c0)OR(rt1.c2))  WHEN rt1.c2 THEN (t0.c0 IN (0.15836230636910642, t0.c0)) ELSE (((v0.c0)) BETWEEN ((rt1.c2)) AND ((t0.c0))) END) GROUP BY rt1.c3, rt1.c1, v0.c2 UNION SELECT rt1.c3, rt1.c1, v0.c2 FROM rt1, vt0, t0, v0 WHERE ((NOT (CASE ((vt0.c0)OR(rt1.c2))  WHEN rt1.c2 THEN (t0.c0 IN (0.15836230636910642, t0.c0)) ELSE (((v0.c0)) BETWEEN ((rt1.c2)) AND ((t0.c0))) END))) GROUP BY rt1.c3, rt1.c1, v0.c2 UNION SELECT ALL rt1.c3, rt1.c1, v0.c2 FROM rt1, vt0, t0, v0 WHERE (((CASE ((vt0.c0)OR(rt1.c2))  WHEN rt1.c2 THEN (t0.c0 IN (0.15836230636910642, t0.c0)) ELSE (((v0.c0)) BETWEEN ((rt1.c2)) AND ((t0.c0))) END) ISNULL)) GROUP BY rt1.c3, rt1.c1, v0.c2;
SELECT rt1.c3, rt1.c1, v0.c2 FROM rt1, vt0, t0, v0 GROUP BY rt1.c3, rt1.c1, v0.c2;
SELECT v0.c0, t0.c0, v0.c2 FROM t0, v0 RIGHT OUTER JOIN vt0 ON 0.7259268723879735 GROUP BY v0.c0, t0.c0, v0.c2;
SELECT v0.c0, t0.c0, v0.c2 FROM t0, v0 RIGHT OUTER JOIN vt0 ON 0.7259268723879735 GROUP BY v0.c0, t0.c0, v0.c2 HAVING STRFTIME(COUNT(v0.c2), (+ (vt0.c0)), TOTAL(TOTAL(x''))) UNION ALL SELECT v0.c0, t0.c0, v0.c2 FROM t0, v0 RIGHT OUTER JOIN vt0 ON 0.7259268723879735 GROUP BY v0.c0, t0.c0, v0.c2 HAVING (NOT (STRFTIME(COUNT(v0.c2), (+ (vt0.c0)), TOTAL(TOTAL(x''))))) UNION ALL SELECT v0.c0, t0.c0, v0.c2 FROM t0, v0 RIGHT OUTER JOIN vt0 ON 0.7259268723879735 GROUP BY v0.c0, t0.c0, v0.c2 HAVING ((STRFTIME(COUNT(v0.c2), (+ (vt0.c0)), TOTAL(TOTAL(x'')))) ISNULL);
SELECT ALL * FROM v0, t0, rt1, vt0;
SELECT ALL * FROM v0, t0, rt1, vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM v0, t0, rt1, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM v0, t0, rt1, vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM v0, t0, rt1, vt0;
SELECT DISTINCT vt0.c0, rt1.c0, v0.c2, v0.c0 FROM t0, vt0, rt1, v0;
SELECT DISTINCT vt0.c0, rt1.c0, v0.c2, v0.c0 FROM t0, vt0, rt1, v0 WHERE (rt1.c3) UNION SELECT DISTINCT vt0.c0, rt1.c0, v0.c2, v0.c0 FROM t0, vt0, rt1, v0 WHERE ((NOT (rt1.c3))) UNION SELECT DISTINCT vt0.c0, rt1.c0, v0.c2, v0.c0 FROM t0, vt0, rt1, v0 NOT INDEXED WHERE (((rt1.c3) ISNULL));
SELECT DISTINCT vt0.c0, rt1.c0, v0.c2, v0.c0 FROM t0, vt0, rt1, v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c1, v0.c2, rt1.c2, rt1.c3, v0.c0, rt1.c1, rt1.c0, t0.c93 FROM v0, rt1, t0 GROUP BY v0.c1, v0.c2, rt1.c2, rt1.c3, v0.c0, rt1.c1, rt1.c0, t0.c93;
SELECT ALL v0.c1, v0.c2, rt1.c2, rt1.c3, v0.c0, rt1.c1, rt1.c0, t0.c93 FROM v0, rt1, t0 GROUP BY v0.c1, v0.c2, rt1.c2, rt1.c3, v0.c0, rt1.c1, rt1.c0, t0.c93 HAVING MIN(((AVG(rt1.c1)) BETWEEN (v0.c2) AND (v0.c2))) UNION ALL SELECT v0.c1, v0.c2, rt1.c2, rt1.c3, v0.c0, rt1.c1, rt1.c0, t0.c93 FROM v0, rt1, t0 GROUP BY v0.c1, v0.c2, rt1.c2, rt1.c3, v0.c0, rt1.c1, rt1.c0, t0.c93 HAVING (NOT (MIN(((AVG(rt1.c1)) BETWEEN (v0.c2) AND (v0.c2))))) UNION ALL SELECT ALL v0.c1, v0.c2, rt1.c2, rt1.c3, v0.c0, rt1.c1, rt1.c0, t0.c93 FROM v0, rt1, t0 GROUP BY v0.c1, v0.c2, rt1.c2, rt1.c3, v0.c0, rt1.c1, rt1.c0, t0.c93 HAVING ((MIN(((AVG(rt1.c1)) BETWEEN (v0.c2) AND (v0.c2)))) ISNULL);
SELECT rt1.c0, rt1.c2, v0.c1 FROM t0, vt0 INNER JOIN rt1 ON ((((((((((((rt1.c1)OR(t0.c93)))OR(-1113739087)))AND('1338101398')))OR(rt1.c2 COLLATE NOCASE)))AND(rt1.c1)))OR((~ (rt1.c0)))) CROSS JOIN v0 ON (((((t0.c0)AND(v0.c2)))OR(v0.c1)) IN (CASE WHEN rt1.c0 THEN v0.c2 ELSE v0.c0 END));
SELECT rt1.c0, rt1.c2, v0.c1 FROM t0, vt0 INNER JOIN rt1 ON ((((((((((((rt1.c1)OR(t0.c93)))OR(-1113739087)))AND('1338101398')))OR(rt1.c2 COLLATE NOCASE)))AND(rt1.c1)))OR((~ (rt1.c0)))) CROSS JOIN v0 ON (((((t0.c0)AND(v0.c2)))OR(v0.c1)) IN (CASE WHEN rt1.c0 THEN v0.c2 ELSE v0.c0 END)) WHERE (((((((((((((((v0.c1)>(v0.c1)))AND(CASE rt1.c3  WHEN vt0.c0 THEN rt1.c2 END)))OR((v0.c2 IN ()))))OR((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((v0.c0))))))AND((+ (0.14378790238400352)))))AND(t0.c93)))OR((vt0.c0 IN ())))) UNION ALL SELECT rt1.c0, rt1.c2, v0.c1 FROM t0, vt0 INNER JOIN rt1 ON ((((((((((((rt1.c1)OR(t0.c93)))OR(-1113739087)))AND('1338101398')))OR(rt1.c2 COLLATE NOCASE)))AND(rt1.c1)))OR((~ (rt1.c0)))) CROSS JOIN v0 ON (((((t0.c0)AND(v0.c2)))OR(v0.c1)) IN (CASE WHEN rt1.c0 THEN v0.c2 ELSE v0.c0 END)) WHERE ((NOT (((((((((((((((v0.c1)>(v0.c1)))AND(CASE rt1.c3  WHEN vt0.c0 THEN rt1.c2 END)))OR((v0.c2 IN ()))))OR((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((v0.c0))))))AND((+ (0.14378790238400352)))))AND(t0.c93)))OR((vt0.c0 IN ())))))) UNION ALL SELECT rt1.c0, rt1.c2, v0.c1 FROM t0, vt0 INNER JOIN rt1 ON ((((((((((((rt1.c1)OR(t0.c93)))OR(-1113739087)))AND('1338101398')))OR(rt1.c2 COLLATE NOCASE)))AND(rt1.c1)))OR((~ (rt1.c0)))) CROSS JOIN v0 ON (((((t0.c0)AND(v0.c2)))OR(v0.c1)) IN (CASE WHEN rt1.c0 THEN v0.c2 ELSE v0.c0 END)) WHERE (((((((((((((((((v0.c1)>(v0.c1)))AND(CASE rt1.c3  WHEN vt0.c0 THEN rt1.c2 END)))OR((v0.c2 IN ()))))OR((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((v0.c0))))))AND((+ (0.14378790238400352)))))AND(t0.c93)))OR((vt0.c0 IN ())))) ISNULL));
SELECT rt1.c0, rt1.c2, v0.c1 FROM t0, vt0 INNER JOIN rt1 ON ((((((((((((rt1.c1)OR(t0.c93)))OR(-1113739087)))AND('1338101398')))OR(rt1.c2 COLLATE NOCASE)))AND(rt1.c1)))OR((~ (rt1.c0)))) CROSS JOIN v0 ON (((((t0.c0)AND(v0.c2)))OR(v0.c1)) IN (CASE WHEN rt1.c0 THEN v0.c2 ELSE v0.c0 END));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((~ (v0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((~ (v0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((~ (v0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c93, vt0.c0 FROM t0, vt0 GROUP BY t0.c93, vt0.c0;
SELECT t0.c93, vt0.c0 FROM t0, vt0 WHERE (((((t0.c0)/(t0.c93))) BETWEEN (((vt0.c0)IS NOT(t0.c93))) AND ((- (vt0.c0))))) GROUP BY t0.c93, vt0.c0 UNION SELECT t0.c93, vt0.c0 FROM t0, vt0 WHERE ((NOT (((((t0.c0)/(t0.c93))) BETWEEN (((vt0.c0)IS NOT(t0.c93))) AND ((- (vt0.c0))))))) GROUP BY t0.c93, vt0.c0 UNION SELECT t0.c93, vt0.c0 FROM t0, vt0 WHERE (((((((t0.c0)/(t0.c93))) BETWEEN (((vt0.c0)IS NOT(t0.c93))) AND ((- (vt0.c0))))) ISNULL)) GROUP BY t0.c93, vt0.c0;
SELECT t0.c93, vt0.c0 FROM t0, vt0 GROUP BY t0.c93, vt0.c0;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING MIN(SUM(rt1.c1)) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (MIN(SUM(rt1.c1)))) UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((MIN(SUM(rt1.c1))) ISNULL);
SELECT ALL * FROM vt0 NOT INDEXED, rt1;
SELECT ALL * FROM vt0, rt1 WHERE ((((rt1.c3)) NOT BETWEEN ((rt1.c0 COLLATE RTRIM)) AND ((((rt1.c3) NOT BETWEEN (rt1.c2) AND (vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE ((NOT ((((rt1.c3)) NOT BETWEEN ((rt1.c0 COLLATE RTRIM)) AND ((((rt1.c3) NOT BETWEEN (rt1.c2) AND (vt0.c0)))))))) UNION ALL SELECT ALL * FROM vt0, rt1 WHERE ((((((rt1.c3)) NOT BETWEEN ((rt1.c0 COLLATE RTRIM)) AND ((((rt1.c3) NOT BETWEEN (rt1.c2) AND (vt0.c0)))))) ISNULL));
SELECT ALL * FROM vt0 NOT INDEXED, rt1;
SELECT DISTINCT rt1.c0, vt0.c0, v0.c1, rt1.c3, v0.c2, rt1.c1, t0.c0 FROM rt1, vt0, t0, v0;
SELECT DISTINCT rt1.c0, vt0.c0, v0.c1, rt1.c3, v0.c2, rt1.c1, t0.c0 FROM rt1, vt0, t0, v0 WHERE (CAST(t0.c93 COLLATE BINARY AS BLOB)) UNION SELECT DISTINCT rt1.c0, vt0.c0, v0.c1, rt1.c3, v0.c2, rt1.c1, t0.c0 FROM rt1, vt0, t0, v0 WHERE ((NOT (CAST(t0.c93 COLLATE BINARY AS BLOB)))) UNION SELECT DISTINCT rt1.c0, vt0.c0, v0.c1, rt1.c3, v0.c2, rt1.c1, t0.c0 FROM rt1, vt0, t0, v0 WHERE (((CAST(t0.c93 COLLATE BINARY AS BLOB)) ISNULL));
SELECT DISTINCT rt1.c0, vt0.c0, v0.c1, rt1.c3, v0.c2, rt1.c1, t0.c0 FROM rt1, vt0, t0, v0;
SELECT ALL t0.c0 FROM rt1, t0, vt0, v0 GROUP BY t0.c0;
SELECT t0.c0 FROM rt1, t0, vt0, v0 WHERE (TYPEOF((((rt1.c2)) BETWEEN ((x'')) AND ((v0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM rt1, t0, vt0, v0 WHERE ((NOT (TYPEOF((((rt1.c2)) BETWEEN ((x'')) AND ((v0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM rt1, t0, vt0, v0 WHERE (((TYPEOF((((rt1.c2)) BETWEEN ((x'')) AND ((v0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM rt1, t0, vt0, v0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(TOTAL(t0.c93)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(TOTAL(t0.c93)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(TOTAL(t0.c93))) ISNULL);
SELECT * FROM v0, vt0, rt1;
SELECT ALL * FROM v0, vt0, rt1 WHERE ((((NOT (rt1.c1))) NOT BETWEEN (((rt1.c2)=(v0.c1))) AND (((v0.c2) IS TRUE)))) UNION ALL SELECT * FROM v0, vt0, rt1 WHERE ((NOT ((((NOT (rt1.c1))) NOT BETWEEN (((rt1.c2)==(v0.c1))) AND (((v0.c2) IS TRUE)))))) UNION ALL SELECT ALL * FROM v0, vt0, rt1 WHERE ((((((NOT (rt1.c1))) NOT BETWEEN (((rt1.c2)==(v0.c1))) AND (((v0.c2) IS TRUE)))) ISNULL));
SELECT * FROM v0, vt0, rt1;
SELECT DISTINCT rt1.c0, v0.c2, rt1.c2 FROM vt0, t0 CROSS JOIN rt1 ON CASE WHEN (vt0.c0 IN (v0.c0, v0.c0)) THEN CASE v0.c0  WHEN t0.c0 THEN NULL ELSE v0.c0 END ELSE (- (t0.c93)) END RIGHT OUTER JOIN v0 ON CASE WHEN CAST(rt1.c1 AS REAL) THEN INSTR(rt1.c1, rt1.c0) WHEN 0X2f990e20 THEN ((rt1.c2) NOTNULL) WHEN ((vt0.c0) ISNULL) THEN ((rt1.c1)IS(rt1.c3)) ELSE CAST(rt1.c3 AS REAL) END;
SELECT rt1.c3, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c3, rt1.c1;
SELECT rt1.c3, rt1.c1 FROM rt1, vt0 WHERE (((CASE WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c3 END) NOTNULL)) GROUP BY rt1.c3, rt1.c1 UNION SELECT rt1.c3, rt1.c1 FROM rt1, vt0 WHERE ((NOT (((CASE WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c3 END) NOTNULL)))) GROUP BY rt1.c3, rt1.c1 UNION SELECT rt1.c3, rt1.c1 FROM rt1, vt0 WHERE (((((CASE WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c3 END) NOTNULL)) ISNULL)) GROUP BY rt1.c3, rt1.c1;
SELECT rt1.c3, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c3, rt1.c1;
SELECT ALL rt1.c3, t0.c0, v0.c1, t0.c93, v0.c2, rt1.c0, v0.c0, rt1.c1, rt1.c2 FROM v0, t0, rt1 GROUP BY rt1.c3, t0.c0, v0.c1, t0.c93, v0.c2, rt1.c0, v0.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c3, t0.c0, v0.c1, t0.c93, v0.c2, rt1.c0, v0.c0, rt1.c1, rt1.c2 FROM v0, t0, rt1 GROUP BY rt1.c3, t0.c0, v0.c1, t0.c93, v0.c2, rt1.c0, v0.c0, rt1.c1, rt1.c2 HAVING rt1.c1 UNION ALL SELECT rt1.c3, t0.c0, v0.c1, t0.c93, v0.c2, rt1.c0, v0.c0, rt1.c1, rt1.c2 FROM v0, t0, rt1 GROUP BY rt1.c3, t0.c0, v0.c1, t0.c93, v0.c2, rt1.c0, v0.c0, rt1.c1, rt1.c2 HAVING (NOT (rt1.c1)) UNION ALL SELECT rt1.c3, t0.c0, v0.c1, t0.c93, v0.c2, rt1.c0, v0.c0, rt1.c1, rt1.c2 FROM v0, t0, rt1 GROUP BY rt1.c3, t0.c0, v0.c1, t0.c93, v0.c2, rt1.c0, v0.c0, rt1.c1, rt1.c2 HAVING ((rt1.c1) ISNULL);
SELECT ALL rt1.c3, t0.c0, v0.c1, t0.c93, v0.c2, rt1.c0, v0.c0, rt1.c1, rt1.c2 FROM v0, t0, rt1 GROUP BY rt1.c3, t0.c0, v0.c1, t0.c93, v0.c2, rt1.c0, v0.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c3, t0.c0, v0.c1, t0.c93, v0.c2, rt1.c0, v0.c0, rt1.c1, rt1.c2 FROM v0, t0, rt1 GROUP BY rt1.c3, t0.c0, v0.c1, t0.c93, v0.c2, rt1.c0, v0.c0, rt1.c1, rt1.c2 HAVING rt1.c1 UNION ALL SELECT rt1.c3, t0.c0, v0.c1, t0.c93, v0.c2, rt1.c0, v0.c0, rt1.c1, rt1.c2 FROM v0, t0, rt1 GROUP BY rt1.c3, t0.c0, v0.c1, t0.c93, v0.c2, rt1.c0, v0.c0, rt1.c1, rt1.c2 HAVING (NOT (rt1.c1)) UNION ALL SELECT rt1.c3, t0.c0, v0.c1, t0.c93, v0.c2, rt1.c0, v0.c0, rt1.c1, rt1.c2 FROM v0, t0, rt1 GROUP BY rt1.c3, t0.c0, v0.c1, t0.c93, v0.c2, rt1.c0, v0.c0, rt1.c1, rt1.c2 HAVING ((rt1.c1) ISNULL);
SELECT ALL rt1.c3, t0.c0, v0.c1, t0.c93, v0.c2, rt1.c0, v0.c0, rt1.c1, rt1.c2 FROM v0, t0, rt1 GROUP BY rt1.c3, t0.c0, v0.c1, t0.c93, v0.c2, rt1.c0, v0.c0, rt1.c1, rt1.c2;
SELECT * FROM rt1, t0, v0, vt0;
SELECT ALL * FROM rt1, t0, v0, vt0 WHERE (0X7a767c74) UNION ALL SELECT * FROM rt1, t0, v0, vt0 WHERE ((NOT (0x7a767c74))) UNION ALL SELECT * FROM rt1, t0, v0, vt0 WHERE (((0x7a767c74) ISNULL));
SELECT * FROM rt1, t0, v0, vt0;
SELECT DISTINCT v0.c1, rt1.c2 FROM v0 FULL OUTER JOIN vt0 ON CAST((((v0.c0, v0.c1, v0.c1)) NOT BETWEEN ((v0.c2, rt1.c2, rt1.c3)) AND ((rt1.c3, rt1.c0, rt1.c3))) AS BLOB) LEFT OUTER JOIN rt1 ON 0x62229e1d;
SELECT ALL v0.c1, v0.c0, rt1.c1, v0.c2, rt1.c0, vt0.c0, rt1.c3, rt1.c2 FROM vt0 FULL OUTER JOIN v0 ON CAST(((rt1.c2)==(rt1.c1)) AS TEXT) LEFT OUTER JOIN rt1 ON v0.c0 GROUP BY v0.c1, v0.c0, rt1.c1, v0.c2, rt1.c0, vt0.c0, rt1.c3, rt1.c2;
SELECT vt0.c0, rt1.c1, rt1.c2, v0.c2, t0.c93, v0.c0, t0.c0 FROM t0, vt0, rt1, v0 GROUP BY vt0.c0, rt1.c1, rt1.c2, v0.c2, t0.c93, v0.c0, t0.c0;
SELECT ALL vt0.c0, rt1.c1, rt1.c2, v0.c2, t0.c93, v0.c0, t0.c0 FROM t0, vt0, rt1, v0 GROUP BY vt0.c0, rt1.c1, rt1.c2, v0.c2, t0.c93, v0.c0, t0.c0 HAVING TOTAL(COUNT(MAX(v0.c2))) UNION ALL SELECT ALL vt0.c0, rt1.c1, rt1.c2, v0.c2, t0.c93, v0.c0, t0.c0 FROM t0, vt0, rt1, v0 GROUP BY vt0.c0, rt1.c1, rt1.c2, v0.c2, t0.c93, v0.c0, t0.c0 HAVING (NOT (TOTAL(COUNT(MAX(v0.c2))))) UNION ALL SELECT vt0.c0, rt1.c1, rt1.c2, v0.c2, t0.c93, v0.c0, t0.c0 FROM t0, vt0, rt1, v0 GROUP BY vt0.c0, rt1.c1, rt1.c2, v0.c2, t0.c93, v0.c0, t0.c0 HAVING ((TOTAL(COUNT(MAX(v0.c2)))) ISNULL);
SELECT ALL rt1.c2, t0.c0, v0.c2, rt1.c3, v0.c0, vt0.c0 FROM rt1, t0, vt0, v0;
SELECT rt1.c2, t0.c0, v0.c2, rt1.c3, v0.c0, vt0.c0 FROM rt1, t0, vt0 NOT INDEXED, v0 WHERE (((((0.7597941225598848)OR(v0.c0)))OR(v0.c0)) COLLATE BINARY) UNION ALL SELECT ALL rt1.c2, t0.c0, v0.c2, rt1.c3, v0.c0, vt0.c0 FROM rt1, t0, vt0, v0 WHERE ((NOT (((((0.7597941225598848)OR(v0.c0)))OR(v0.c0)) COLLATE BINARY))) UNION ALL SELECT rt1.c2, t0.c0, v0.c2, rt1.c3, v0.c0, vt0.c0 FROM rt1, t0, vt0, v0 WHERE (((((((0.7597941225598848)OR(v0.c0)))OR(v0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL rt1.c2, t0.c0, v0.c2, rt1.c3, v0.c0, vt0.c0 FROM rt1, t0, vt0, v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (((v0.c0 COLLATE BINARY)OR(CAST(v0.c2 AS TEXT)))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (((v0.c0 COLLATE BINARY)OR(CAST(v0.c2 AS TEXT)))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((((v0.c0 COLLATE BINARY)OR(CAST(v0.c2 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 WHERE ((~ (UPPER(rt1.c0)))) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT ((~ (UPPER(rt1.c0)))))) GROUP BY rt1.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c0 FROM rt1 WHERE ((((~ (UPPER(rt1.c0)))) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT t0.c93, rt1.c1, rt1.c3, rt1.c0, rt1.c2, t0.c0 FROM rt1, t0 GROUP BY t0.c93, rt1.c1, rt1.c3, rt1.c0, rt1.c2, t0.c0;
SELECT t0.c93, rt1.c1, rt1.c3, rt1.c0, rt1.c2, t0.c0 FROM rt1, t0 GROUP BY t0.c93, rt1.c1, rt1.c3, rt1.c0, rt1.c2, t0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(rt1.c3)) UNION ALL SELECT ALL t0.c93, rt1.c1, rt1.c3, rt1.c0, rt1.c2, t0.c0 FROM rt1, t0 GROUP BY t0.c93, rt1.c1, rt1.c3, rt1.c0, rt1.c2, t0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(rt1.c3)))) UNION ALL SELECT t0.c93, rt1.c1, rt1.c3, rt1.c0, rt1.c2, t0.c0 FROM rt1, t0 GROUP BY t0.c93, rt1.c1, rt1.c3, rt1.c0, rt1.c2, t0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(rt1.c3))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 2001372911 ELSE vt0.c0 END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 2001372911 ELSE vt0.c0 END))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 2001372911 ELSE vt0.c0 END))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt1, vt0, v0, t0;
SELECT DISTINCT * FROM rt1, vt0, v0, t0 WHERE ((((((vt0.c0, rt1.c2, v0.c0))<=((v0.c0, t0.c93, rt1.c0)))) BETWEEN (MAX(rt1.c1, t0.c0)) AND ((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c1)))))) UNION SELECT DISTINCT * FROM rt1, vt0, v0, t0 WHERE ((NOT ((((((vt0.c0, rt1.c2, v0.c0))<=((v0.c0, t0.c93, rt1.c0)))) BETWEEN (MAX(rt1.c1, t0.c0)) AND ((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c1)))))))) UNION SELECT DISTINCT * FROM rt1, vt0, v0, t0 WHERE ((((((((vt0.c0, rt1.c2, v0.c0))<=((v0.c0, t0.c93, rt1.c0)))) BETWEEN (MAX(rt1.c1, t0.c0)) AND ((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c1)))))) ISNULL));
SELECT DISTINCT * FROM rt1, vt0, v0, t0;
SELECT ALL rt1.c0, v0.c2, v0.c0, t0.c0, rt1.c1, t0.c93, v0.c1, vt0.c0 FROM rt1, v0, vt0, t0 GROUP BY rt1.c0, v0.c2, v0.c0, t0.c0, rt1.c1, t0.c93, v0.c1, vt0.c0;
SELECT ALL rt1.c0, v0.c2, v0.c0, t0.c0, rt1.c1, t0.c93, v0.c1, vt0.c0 FROM rt1, v0, vt0, t0 WHERE (((json_quote(rt1.c3)) NOT NULL)) GROUP BY rt1.c0, v0.c2, v0.c0, t0.c0, rt1.c1, t0.c93, v0.c1, vt0.c0 UNION SELECT ALL rt1.c0, v0.c2, v0.c0, t0.c0, rt1.c1, t0.c93, v0.c1, vt0.c0 FROM rt1, v0, vt0, t0 WHERE ((NOT (((json_quote(rt1.c3)) NOT NULL)))) GROUP BY rt1.c0, v0.c2, v0.c0, t0.c0, rt1.c1, t0.c93, v0.c1, vt0.c0 UNION SELECT ALL rt1.c0, v0.c2, v0.c0, t0.c0, rt1.c1, t0.c93, v0.c1, vt0.c0 FROM rt1, v0, vt0, t0 WHERE (((((json_quote(rt1.c3)) NOT NULL)) ISNULL)) GROUP BY rt1.c0, v0.c2, v0.c0, t0.c0, rt1.c1, t0.c93, v0.c1, vt0.c0;
SELECT vt0.c0, v0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c1;
SELECT vt0.c0, v0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, v0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, v0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, v0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c1;
SELECT vt0.c0, v0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, v0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, v0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, v0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c1;
SELECT MIN(CAST(rt1.c0 COLLATE BINARY AS BLOB)) FROM t0, rt1, v0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE TRIM(vt0.c0, vt0.c0)  WHEN ((vt0.c0)>(vt0.c0)) THEN x'' COLLATE RTRIM END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE TRIM(vt0.c0, vt0.c0)  WHEN ((vt0.c0)>(vt0.c0)) THEN x'' COLLATE RTRIM END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE TRIM(vt0.c0, vt0.c0)  WHEN ((vt0.c0)>(vt0.c0)) THEN x'' COLLATE RTRIM END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT t0.c93 FROM rt1, t0;
SELECT DISTINCT t0.c93 FROM rt1, t0 WHERE (((t0.c0 COLLATE NOCASE) NOT NULL)) UNION SELECT DISTINCT t0.c93 FROM rt1, t0 WHERE ((NOT (((t0.c0 COLLATE NOCASE) NOT NULL)))) UNION SELECT DISTINCT t0.c93 FROM rt1, t0 WHERE (((((t0.c0 COLLATE NOCASE) NOT NULL)) ISNULL));
SELECT DISTINCT t0.c93 FROM rt1, t0;
SELECT vt0.c0, t0.c0, t0.c93 FROM vt0, rt1, t0 GROUP BY vt0.c0, t0.c0, t0.c93;
SELECT vt0.c0, t0.c0, t0.c93 FROM vt0, rt1, t0 WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN (((vt0.c0) BETWEEN (rt1.c1) AND (x''))) AND ((vt0.c0 IN ())))) GROUP BY vt0.c0, t0.c0, t0.c93 UNION SELECT vt0.c0, t0.c0, t0.c93 FROM vt0, rt1, t0 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER)) BETWEEN (((vt0.c0) BETWEEN (rt1.c1) AND (x''))) AND ((vt0.c0 IN ())))))) GROUP BY vt0.c0, t0.c0, t0.c93 UNION SELECT ALL vt0.c0, t0.c0, t0.c93 FROM vt0, rt1, t0 WHERE (((((CAST(vt0.c0 AS INTEGER)) BETWEEN (((vt0.c0) BETWEEN (rt1.c1) AND (x''))) AND ((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0, t0.c0, t0.c93;
SELECT vt0.c0, t0.c0, t0.c93 FROM vt0, rt1, t0 GROUP BY vt0.c0, t0.c0, t0.c93;
SELECT ALL v0.c2, v0.c1 FROM t0 FULL OUTER JOIN v0 ON -1e500 GROUP BY v0.c2, v0.c1;
SELECT ALL v0.c2, v0.c1 FROM t0 FULL OUTER JOIN v0 ON -1e500 GROUP BY v0.c2, v0.c1 HAVING ((v0.c1) NOTNULL) COLLATE RTRIM UNION ALL SELECT ALL v0.c2, v0.c1 FROM t0 FULL OUTER JOIN v0 ON -1e500 GROUP BY v0.c2, v0.c1 HAVING (NOT (((v0.c1) NOTNULL) COLLATE RTRIM)) UNION ALL SELECT v0.c2, v0.c1 FROM t0 FULL OUTER JOIN v0 ON -1e500 GROUP BY v0.c2, v0.c1 HAVING ((((v0.c1) NOTNULL) COLLATE RTRIM) ISNULL);
SELECT ALL v0.c2, v0.c1 FROM t0 FULL OUTER JOIN v0 ON -1e500 GROUP BY v0.c2, v0.c1;
SELECT ALL v0.c2, v0.c1 FROM t0 FULL OUTER JOIN v0 ON -1e500 GROUP BY v0.c2, v0.c1 HAVING ((v0.c1) NOTNULL) COLLATE RTRIM UNION ALL SELECT ALL v0.c2, v0.c1 FROM t0 FULL OUTER JOIN v0 ON -1e500 GROUP BY v0.c2, v0.c1 HAVING (NOT (((v0.c1) NOTNULL) COLLATE RTRIM)) UNION ALL SELECT v0.c2, v0.c1 FROM t0 FULL OUTER JOIN v0 ON -1e500 GROUP BY v0.c2, v0.c1 HAVING ((((v0.c1) NOTNULL) COLLATE RTRIM) ISNULL);
SELECT ALL v0.c2, v0.c1 FROM t0 FULL OUTER JOIN v0 ON -1e500 GROUP BY v0.c2, v0.c1;
SELECT ALL t0.c93, t0.c0 FROM t0;
SELECT ALL t0.c93, t0.c0 FROM t0 WHERE (0.3462229999089279) UNION ALL SELECT ALL t0.c93, t0.c0 FROM t0 WHERE ((NOT (0.3462229999089279))) UNION ALL SELECT ALL t0.c93, t0.c0 FROM t0 WHERE (((0.3462229999089279) ISNULL));
SELECT ALL t0.c93, t0.c0 FROM t0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON ((((((((((v0.c2)OR(t0.c93)))OR(x'4844310b')))OR(v0.c1)))OR(v0.c2)))AND(t0.c93 COLLATE NOCASE));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON ((((((((((v0.c2)OR(t0.c93)))OR(x'4844310b')))OR(v0.c1)))OR(v0.c2)))AND(t0.c93 COLLATE NOCASE)) WHERE (CAST((t0.c0 IN ()) AS TEXT)) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON ((((((((((v0.c2)OR(t0.c93)))OR(x'4844310b')))OR(v0.c1)))OR(v0.c2)))AND(t0.c93 COLLATE NOCASE)) WHERE ((NOT (CAST((t0.c0 IN ()) AS TEXT)))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON ((((((((((v0.c2)OR(t0.c93)))OR(x'4844310b')))OR(v0.c1)))OR(v0.c2)))AND(t0.c93 COLLATE NOCASE)) WHERE (((CAST((t0.c0 IN ()) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON ((((((((((v0.c2)OR(t0.c93)))OR(x'4844310b')))OR(v0.c1)))OR(v0.c2)))AND(t0.c93 COLLATE NOCASE));
SELECT ALL v0.c2, t0.c0, v0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c0, vt0.c0, v0.c1, t0.c93 FROM vt0, v0, rt1, t0 GROUP BY v0.c2, t0.c0, v0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c0, vt0.c0, v0.c1, t0.c93;
SELECT ALL v0.c2, t0.c0, v0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c0, vt0.c0, v0.c1, t0.c93 FROM vt0, v0, rt1, t0 WHERE ('-257709095') GROUP BY v0.c2, t0.c0, v0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c0, vt0.c0, v0.c1, t0.c93 UNION SELECT ALL v0.c2, t0.c0, v0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c0, vt0.c0, v0.c1, t0.c93 FROM vt0, v0, rt1, t0 WHERE ((NOT ('-257709095'))) GROUP BY v0.c2, t0.c0, v0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c0, vt0.c0, v0.c1, t0.c93 UNION SELECT ALL v0.c2, t0.c0, v0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c0, vt0.c0, v0.c1, t0.c93 FROM vt0, v0, rt1, t0 WHERE ((('-257709095') ISNULL)) GROUP BY v0.c2, t0.c0, v0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c0, vt0.c0, v0.c1, t0.c93;
SELECT ALL v0.c2, t0.c0, v0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c0, vt0.c0, v0.c1, t0.c93 FROM vt0, v0, rt1, t0 GROUP BY v0.c2, t0.c0, v0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c0, vt0.c0, v0.c1, t0.c93;
SELECT v0.c2, rt1.c0, v0.c1, rt1.c1, rt1.c2, rt1.c3, v0.c0 FROM rt1, vt0 CROSS JOIN t0 ON ((CASE WHEN v0.c2 THEN rt1.c0 ELSE rt1.c2 END) NOTNULL) INNER JOIN v0 ON (((((((((((((vt0.c0)AND(t0.c93)))AND(rt1.c0)))OR(vt0.c0)))AND(t0.c93)))AND(v0.c1)))AND(x'b544')) IN ()) GROUP BY v0.c2, rt1.c0, v0.c1, rt1.c1, rt1.c2, rt1.c3, v0.c0;
SELECT ALL v0.c2, rt1.c0, v0.c1, rt1.c1, rt1.c2, rt1.c3, v0.c0 FROM rt1, vt0 CROSS JOIN t0 ON ((CASE WHEN v0.c2 THEN rt1.c0 ELSE rt1.c2 END) NOTNULL) INNER JOIN v0 ON (((((((((((((vt0.c0)AND(t0.c93)))AND(rt1.c0)))OR(vt0.c0)))AND(t0.c93)))AND(v0.c1)))AND(x'b544')) IN ()) GROUP BY v0.c2, rt1.c0, v0.c1, rt1.c1, rt1.c2, rt1.c3, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c2, rt1.c0, v0.c1, rt1.c1, rt1.c2, rt1.c3, v0.c0 FROM rt1, vt0 CROSS JOIN t0 ON ((CASE WHEN v0.c2 THEN rt1.c0 ELSE rt1.c2 END) NOTNULL) INNER JOIN v0 ON (((((((((((((vt0.c0)AND(t0.c93)))AND(rt1.c0)))OR(vt0.c0)))AND(t0.c93)))AND(v0.c1)))AND(x'b544')) IN ()) GROUP BY v0.c2, rt1.c0, v0.c1, rt1.c1, rt1.c2, rt1.c3, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c2, rt1.c0, v0.c1, rt1.c1, rt1.c2, rt1.c3, v0.c0 FROM rt1, vt0 CROSS JOIN t0 ON ((CASE WHEN v0.c2 THEN rt1.c0 ELSE rt1.c2 END) NOTNULL) INNER JOIN v0 ON (((((((((((((vt0.c0)AND(t0.c93)))AND(rt1.c0)))OR(vt0.c0)))AND(t0.c93)))AND(v0.c1)))AND(x'b544')) IN ()) GROUP BY v0.c2, rt1.c0, v0.c1, rt1.c1, rt1.c2, rt1.c3, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c2, rt1.c0, v0.c1, rt1.c1, rt1.c2, rt1.c3, v0.c0 FROM rt1, vt0 CROSS JOIN t0 ON ((CASE WHEN v0.c2 THEN rt1.c0 ELSE rt1.c2 END) NOTNULL) INNER JOIN v0 ON (((((((((((((vt0.c0)AND(t0.c93)))AND(rt1.c0)))OR(vt0.c0)))AND(t0.c93)))AND(v0.c1)))AND(x'b544')) IN ()) GROUP BY v0.c2, rt1.c0, v0.c1, rt1.c1, rt1.c2, rt1.c3, v0.c0;
SELECT ALL v0.c2, rt1.c0, v0.c1, rt1.c1, rt1.c2, rt1.c3, v0.c0 FROM rt1, vt0 CROSS JOIN t0 ON ((CASE WHEN v0.c2 THEN rt1.c0 ELSE rt1.c2 END) NOTNULL) INNER JOIN v0 ON (((((((((((((vt0.c0)AND(t0.c93)))AND(rt1.c0)))OR(vt0.c0)))AND(t0.c93)))AND(v0.c1)))AND(x'b544')) IN ()) GROUP BY v0.c2, rt1.c0, v0.c1, rt1.c1, rt1.c2, rt1.c3, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c2, rt1.c0, v0.c1, rt1.c1, rt1.c2, rt1.c3, v0.c0 FROM rt1, vt0 CROSS JOIN t0 ON ((CASE WHEN v0.c2 THEN rt1.c0 ELSE rt1.c2 END) NOTNULL) INNER JOIN v0 ON (((((((((((((vt0.c0)AND(t0.c93)))AND(rt1.c0)))OR(vt0.c0)))AND(t0.c93)))AND(v0.c1)))AND(x'b544')) IN ()) GROUP BY v0.c2, rt1.c0, v0.c1, rt1.c1, rt1.c2, rt1.c3, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c2, rt1.c0, v0.c1, rt1.c1, rt1.c2, rt1.c3, v0.c0 FROM rt1, vt0 CROSS JOIN t0 ON ((CASE WHEN v0.c2 THEN rt1.c0 ELSE rt1.c2 END) NOTNULL) INNER JOIN v0 ON (((((((((((((vt0.c0)AND(t0.c93)))AND(rt1.c0)))OR(vt0.c0)))AND(t0.c93)))AND(v0.c1)))AND(x'b544')) IN ()) GROUP BY v0.c2, rt1.c0, v0.c1, rt1.c1, rt1.c2, rt1.c3, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c2, rt1.c0, v0.c1, rt1.c1, rt1.c2, rt1.c3, v0.c0 FROM rt1, vt0 CROSS JOIN t0 ON ((CASE WHEN v0.c2 THEN rt1.c0 ELSE rt1.c2 END) NOTNULL) INNER JOIN v0 ON (((((((((((((vt0.c0)AND(t0.c93)))AND(rt1.c0)))OR(vt0.c0)))AND(t0.c93)))AND(v0.c1)))AND(x'b544')) IN ()) GROUP BY v0.c2, rt1.c0, v0.c1, rt1.c1, rt1.c2, rt1.c3, v0.c0;
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (((((v0.c0))>=((vt0.c0))) IN ())) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT (((((v0.c0))>=((vt0.c0))) IN ())))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c0))>=((vt0.c0))) IN ())) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0, t0;
SELECT DISTINCT * FROM v0, vt0, t0 WHERE (((CAST(v0.c1 AS REAL))=('402884904'))) UNION SELECT DISTINCT * FROM v0, vt0, t0 WHERE ((NOT (((CAST(v0.c1 AS REAL))==('402884904'))))) UNION SELECT DISTINCT * FROM v0, vt0, t0 WHERE (((((CAST(v0.c1 AS REAL))=('402884904'))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, t0;
SELECT ALL v0.c0, t0.c0, t0.c93, v0.c1, v0.c2 FROM vt0, t0 CROSS JOIN v0 ON (((856897073 COLLATE BINARY))>=(((((v0.c1, v0.c0, t0.c93))<=((v0.c2, vt0.c0, v0.c1)))))) GROUP BY v0.c0, t0.c0, t0.c93, v0.c1, v0.c2;
SELECT ALL v0.c0, t0.c0, t0.c93, v0.c1, v0.c2 FROM vt0, t0 CROSS JOIN v0 ON (((856897073 COLLATE BINARY))>=(((((v0.c1, v0.c0, t0.c93))<=((v0.c2, vt0.c0, v0.c1)))))) WHERE ((vt0.c0 IN (((t0.c93) BETWEEN (0.9031785674409586) AND (t0.c0)), (t0.c0 IN (v0.c1))))) GROUP BY v0.c0, t0.c0, t0.c93, v0.c1, v0.c2 UNION SELECT ALL v0.c0, t0.c0, t0.c93, v0.c1, v0.c2 FROM vt0, t0 CROSS JOIN v0 ON (((856897073 COLLATE BINARY))>=(((((v0.c1, v0.c0, t0.c93))<=((v0.c2, vt0.c0, v0.c1)))))) WHERE ((NOT ((vt0.c0 IN (((t0.c93) BETWEEN (0.9031785674409586) AND (t0.c0)), (t0.c0 IN (v0.c1))))))) GROUP BY v0.c0, t0.c0, t0.c93, v0.c1, v0.c2 UNION SELECT ALL v0.c0, t0.c0, t0.c93, v0.c1, v0.c2 FROM vt0, t0 CROSS JOIN v0 ON (((856897073 COLLATE BINARY))>=(((((v0.c1, v0.c0, t0.c93))<=((v0.c2, vt0.c0, v0.c1)))))) WHERE ((((vt0.c0 IN (((t0.c93) BETWEEN (0.9031785674409586) AND (t0.c0)), (t0.c0 IN (v0.c1))))) ISNULL)) GROUP BY v0.c0, t0.c0, t0.c93, v0.c1, v0.c2;
SELECT ALL v0.c0, t0.c0, t0.c93, v0.c1, v0.c2 FROM vt0, t0 CROSS JOIN v0 ON (((856897073 COLLATE BINARY))>=(((((v0.c1, v0.c0, t0.c93))<=((v0.c2, vt0.c0, v0.c1)))))) GROUP BY v0.c0, t0.c0, t0.c93, v0.c1, v0.c2;
SELECT ALL v0.c1, rt1.c3, rt1.c1, rt1.c2, v0.c0, v0.c2, t0.c93, vt0.c0 FROM rt1, v0, t0, vt0 GROUP BY v0.c1, rt1.c3, rt1.c1, rt1.c2, v0.c0, v0.c2, t0.c93, vt0.c0;
SELECT v0.c1, rt1.c3, rt1.c1, rt1.c2, v0.c0, v0.c2, t0.c93, vt0.c0 FROM rt1, v0, t0, vt0 GROUP BY v0.c1, rt1.c3, rt1.c1, rt1.c2, v0.c0, v0.c2, t0.c93, vt0.c0 HAVING ((TOTAL(COUNT(*))) IS FALSE) UNION ALL SELECT ALL v0.c1, rt1.c3, rt1.c1, rt1.c2, v0.c0, v0.c2, t0.c93, vt0.c0 FROM rt1, v0, t0, vt0 GROUP BY v0.c1, rt1.c3, rt1.c1, rt1.c2, v0.c0, v0.c2, t0.c93, vt0.c0 HAVING (NOT (((TOTAL(COUNT(*))) IS FALSE))) UNION ALL SELECT v0.c1, rt1.c3, rt1.c1, rt1.c2, v0.c0, v0.c2, t0.c93, vt0.c0 FROM rt1, v0, t0, vt0 GROUP BY v0.c1, rt1.c3, rt1.c1, rt1.c2, v0.c0, v0.c2, t0.c93, vt0.c0 HAVING ((((TOTAL(COUNT(*))) IS FALSE)) ISNULL);
SELECT ALL t0.c93 FROM t0;
SELECT ALL t0.c93 FROM t0 WHERE (MAX(((t0.c0)=(t0.c93)), x'')) UNION ALL SELECT ALL t0.c93 FROM t0 WHERE ((NOT (MAX(((t0.c0)=(t0.c93)), x'')))) UNION ALL SELECT ALL t0.c93 FROM t0 WHERE (((MAX(((t0.c0)=(t0.c93)), x'')) ISNULL));
SELECT ALL t0.c93 FROM t0;
SELECT DISTINCT * FROM rt1 NOT INDEXED;
SELECT DISTINCT * FROM rt1 WHERE ((- (((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c1))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((- (((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c1))))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((- (((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c1))))) ISNULL));
SELECT DISTINCT * FROM rt1 NOT INDEXED;
SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT ALL v0.c1, v0.c0 FROM v0 WHERE (((((((v0.c1) IS TRUE))AND(((((v0.c2)AND(v0.c1)))AND(v0.c1)))))OR((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c0)))))) GROUP BY v0.c1, v0.c0 UNION SELECT v0.c1, v0.c0 FROM v0 WHERE ((NOT (((((((v0.c1) IS TRUE))AND(((((v0.c2)AND(v0.c1)))AND(v0.c1)))))OR((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c0)))))))) GROUP BY v0.c1, v0.c0 UNION SELECT v0.c1, v0.c0 FROM v0 WHERE (((((((((v0.c1) IS TRUE))AND(((((v0.c2)AND(v0.c1)))AND(v0.c1)))))OR((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c0)))))) ISNULL)) GROUP BY v0.c1, v0.c0;
SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT ALL t0.c93, v0.c0, rt1.c0, vt0.c0, t0.c0 FROM t0, rt1, vt0, v0 GROUP BY t0.c93, v0.c0, rt1.c0, vt0.c0, t0.c0;
SELECT t0.c93, v0.c0, rt1.c0, vt0.c0, t0.c0 FROM t0, rt1, vt0, v0 GROUP BY t0.c93, v0.c0, rt1.c0, vt0.c0, t0.c0 HAVING COUNT(SUM(v0.c1)) UNION ALL SELECT t0.c93, v0.c0, rt1.c0, vt0.c0, t0.c0 FROM t0, rt1, vt0, v0 GROUP BY t0.c93, v0.c0, rt1.c0, vt0.c0, t0.c0 HAVING (NOT (COUNT(SUM(v0.c1)))) UNION ALL SELECT ALL t0.c93, v0.c0, rt1.c0, vt0.c0, t0.c0 FROM t0, rt1, vt0, v0 GROUP BY t0.c93, v0.c0, rt1.c0, vt0.c0, t0.c0 HAVING ((COUNT(SUM(v0.c1))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c0)<>(vt0.c0)) COLLATE NOCASE) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c0)!=(vt0.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((vt0.c0)!=(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT v0.c1, rt1.c2 FROM v0 INNER JOIN vt0 ON ((CAST(vt0.c0 AS TEXT)) IS TRUE) FULL OUTER JOIN rt1 ON ((((((((((((((t0.c93)OR(v0.c1)))OR(t0.c0)))OR(rt1.c3)))AND(vt0.c0)))AND(rt1.c2)))OR(v0.c2))) NOT NULL) RIGHT OUTER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (t0.c93) AND (v0.c1))) BETWEEN (DATETIME(NULL, rt1.c3, rt1.c1)) AND ((rt1.c0 IN ())));
SELECT v0.c1 FROM v0, vt0, t0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0, vt0, t0 WHERE (CASE WHEN ((v0.c1) IS TRUE) THEN t0.c93 COLLATE NOCASE END) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0, vt0, t0 WHERE ((NOT (CASE WHEN ((v0.c1) IS TRUE) THEN t0.c93 COLLATE NOCASE END))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0, vt0, t0 WHERE (((CASE WHEN ((v0.c1) IS TRUE) THEN t0.c93 COLLATE NOCASE END) ISNULL)) GROUP BY v0.c1;
SELECT v0.c1 FROM v0, vt0, t0 GROUP BY v0.c1;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING AVG((- (SUM(MAX(AVG(MIN(MAX(rt1.c0)))))))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING (NOT (AVG((- (SUM(MAX(AVG(MIN(MAX(rt1.c0)))))))))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING ((AVG((- (SUM(MAX(AVG(MIN(MAX(rt1.c0))))))))) ISNULL);
SELECT ALL * FROM vt0 NOT INDEXED, t0, v0;
SELECT ALL * FROM vt0, t0, v0 WHERE (((((v0.c0)IS NOT(v0.c1)))LIKE(t0.c93))) UNION ALL SELECT ALL * FROM vt0, t0, v0 WHERE ((NOT (((((v0.c0)IS NOT(v0.c1)))LIKE(t0.c93))))) UNION ALL SELECT * FROM vt0, t0, v0 WHERE (((((((v0.c0)IS NOT(v0.c1)))LIKE(t0.c93))) ISNULL));
SELECT ALL * FROM vt0 NOT INDEXED, t0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE ((((((((v0.c2)AND(v0.c0)))AND(v0.c1)))AND(v0.c1)))AND(NULL))  WHEN ((v0.c0) IS TRUE) THEN ((v0.c0)IS NOT(v0.c2)) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE ((((((((v0.c2)AND(v0.c0)))AND(v0.c1)))AND(v0.c1)))AND(NULL))  WHEN ((v0.c0) IS TRUE) THEN ((v0.c0)IS NOT(v0.c2)) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE ((((((((v0.c2)AND(v0.c0)))AND(v0.c1)))AND(v0.c1)))AND(NULL))  WHEN ((v0.c0) IS TRUE) THEN ((v0.c0)IS NOT(v0.c2)) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT v0.c1, v0.c0 FROM v0 WHERE (UNLIKELY(((v0.c2)GLOB(v0.c0)))) GROUP BY v0.c1, v0.c0 UNION SELECT ALL v0.c1, v0.c0 FROM v0 WHERE ((NOT (UNLIKELY(((v0.c2)GLOB(v0.c0)))))) GROUP BY v0.c1, v0.c0 UNION SELECT ALL v0.c1, v0.c0 FROM v0 WHERE (((UNLIKELY(((v0.c2)GLOB(v0.c0)))) ISNULL)) GROUP BY v0.c1, v0.c0;
SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT ALL rt1.c3, rt1.c1, rt1.c2 FROM rt1 NATURAL JOIN vt0 GROUP BY rt1.c3, rt1.c1, rt1.c2;
SELECT rt1.c3, rt1.c1, rt1.c2 FROM rt1 NATURAL JOIN vt0 GROUP BY rt1.c3, rt1.c1, rt1.c2 HAVING SUM(GROUP_CONCAT(COUNT(SUM(COUNT(*))))) UNION ALL SELECT ALL rt1.c3, rt1.c1, rt1.c2 FROM rt1 NATURAL JOIN vt0 GROUP BY rt1.c3, rt1.c1, rt1.c2 HAVING (NOT (SUM(GROUP_CONCAT(COUNT(SUM(COUNT(*))))))) UNION ALL SELECT rt1.c3, rt1.c1, rt1.c2 FROM rt1 NATURAL JOIN vt0 GROUP BY rt1.c3, rt1.c1, rt1.c2 HAVING ((SUM(GROUP_CONCAT(COUNT(SUM(COUNT(*)))))) ISNULL);
SELECT ALL * FROM rt1, t0, v0;
SELECT ALL * FROM rt1, t0, v0 WHERE (((CASE rt1.c3  WHEN rt1.c1 THEN v0.c0 ELSE 0.8855725592849285 END) NOT BETWEEN (CASE rt1.c2  WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN rt1.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c0 END) AND ((+ (v0.c0))))) UNION ALL SELECT * FROM rt1, t0, v0 WHERE ((NOT (((CASE rt1.c3  WHEN rt1.c1 THEN v0.c0 ELSE 0.8855725592849285 END) NOT BETWEEN (CASE rt1.c2  WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN rt1.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c0 END) AND ((+ (v0.c0))))))) UNION ALL SELECT ALL * FROM rt1, t0, v0 WHERE (((((CASE rt1.c3  WHEN rt1.c1 THEN v0.c0 ELSE 0.8855725592849285 END) NOT BETWEEN (CASE rt1.c2  WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN rt1.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c0 END) AND ((+ (v0.c0))))) ISNULL));
SELECT ALL * FROM rt1, t0, v0;
SELECT DISTINCT * FROM rt1 FULL OUTER JOIN t0 ON (((~ (vt0.c0))) ISNULL) CROSS JOIN v0 ON rt1.c2 CROSS JOIN vt0 ON ((x'') NOTNULL);
SELECT vt0.c0, rt1.c3, rt1.c0, v0.c1, v0.c0 FROM rt1 FULL OUTER JOIN v0 ON (+ (rt1.c3 COLLATE BINARY)) RIGHT OUTER JOIN vt0 ON CASE ((((rt1.c1)AND(0.05069831073345765)))OR(v0.c2))  WHEN COALESCE(vt0.c0, v0.c0) THEN CASE rt1.c3  WHEN rt1.c1 THEN v0.c0 END WHEN rt1.c3 COLLATE BINARY THEN ((v0.c0)||(rt1.c3)) WHEN COALESCE(DISTINCT rt1.c0, rt1.c0) THEN (((rt1.c1, rt1.c3, 0.46939994309792643))>((rt1.c0, rt1.c0, vt0.c0))) ELSE v0.c1 END GROUP BY vt0.c0, rt1.c3, rt1.c0, v0.c1, v0.c0;
SELECT ALL vt0.c0, rt1.c3, rt1.c0, v0.c1, v0.c0 FROM rt1 FULL OUTER JOIN v0 ON (+ (rt1.c3 COLLATE BINARY)) RIGHT OUTER JOIN vt0 ON CASE ((((rt1.c1)AND(0.05069831073345765)))OR(v0.c2))  WHEN COALESCE(vt0.c0, v0.c0) THEN CASE rt1.c3  WHEN rt1.c1 THEN v0.c0 END WHEN rt1.c3 COLLATE BINARY THEN ((v0.c0)||(rt1.c3)) WHEN COALESCE(DISTINCT rt1.c0, rt1.c0) THEN (((rt1.c1, rt1.c3, 0.46939994309792643))>((rt1.c0, rt1.c0, vt0.c0))) ELSE v0.c1 END WHERE (((rt1.c1 COLLATE NOCASE) NOTNULL)) GROUP BY vt0.c0, rt1.c3, rt1.c0, v0.c1, v0.c0 UNION SELECT vt0.c0, rt1.c3, rt1.c0, v0.c1, v0.c0 FROM rt1 FULL OUTER JOIN v0 ON (+ (rt1.c3 COLLATE BINARY)) RIGHT OUTER JOIN vt0 ON CASE ((((rt1.c1)AND(0.05069831073345765)))OR(v0.c2))  WHEN COALESCE(vt0.c0, v0.c0) THEN CASE rt1.c3  WHEN rt1.c1 THEN v0.c0 END WHEN rt1.c3 COLLATE BINARY THEN ((v0.c0)||(rt1.c3)) WHEN COALESCE(DISTINCT rt1.c0, rt1.c0) THEN (((rt1.c1, rt1.c3, 0.46939994309792643))>((rt1.c0, rt1.c0, vt0.c0))) ELSE v0.c1 END WHERE ((NOT (((rt1.c1 COLLATE NOCASE) NOTNULL)))) GROUP BY vt0.c0, rt1.c3, rt1.c0, v0.c1, v0.c0 UNION SELECT vt0.c0, rt1.c3, rt1.c0, v0.c1, v0.c0 FROM rt1 FULL OUTER JOIN v0 ON (+ (rt1.c3 COLLATE BINARY)) RIGHT OUTER JOIN vt0 ON CASE ((((rt1.c1)AND(0.05069831073345765)))OR(v0.c2))  WHEN COALESCE(vt0.c0, v0.c0) THEN CASE rt1.c3  WHEN rt1.c1 THEN v0.c0 END WHEN rt1.c3 COLLATE BINARY THEN ((v0.c0)||(rt1.c3)) WHEN COALESCE(DISTINCT rt1.c0, rt1.c0) THEN (((rt1.c1, rt1.c3, 0.46939994309792643))>((rt1.c0, rt1.c0, vt0.c0))) ELSE v0.c1 END WHERE (((((rt1.c1 COLLATE NOCASE) NOTNULL)) ISNULL)) GROUP BY vt0.c0, rt1.c3, rt1.c0, v0.c1, v0.c0;
SELECT vt0.c0, rt1.c3, rt1.c0, v0.c1, v0.c0 FROM rt1 FULL OUTER JOIN v0 ON (+ (rt1.c3 COLLATE BINARY)) RIGHT OUTER JOIN vt0 ON CASE ((((rt1.c1)AND(0.05069831073345765)))OR(v0.c2))  WHEN COALESCE(vt0.c0, v0.c0) THEN CASE rt1.c3  WHEN rt1.c1 THEN v0.c0 END WHEN rt1.c3 COLLATE BINARY THEN ((v0.c0)||(rt1.c3)) WHEN COALESCE(DISTINCT rt1.c0, rt1.c0) THEN (((rt1.c1, rt1.c3, 0.46939994309792643))>((rt1.c0, rt1.c0, vt0.c0))) ELSE v0.c1 END GROUP BY vt0.c0, rt1.c3, rt1.c0, v0.c1, v0.c0;
SELECT ALL t0.c0 FROM t0, vt0, rt1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0, rt1 GROUP BY t0.c0 HAVING AVG(TOTAL(MIN(rt1.c3))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0, rt1 GROUP BY t0.c0 HAVING (NOT (AVG(TOTAL(MIN(rt1.c3))))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0, rt1 GROUP BY t0.c0 HAVING ((AVG(TOTAL(MIN(rt1.c3)))) ISNULL);
SELECT MAX(((((((((rt1.c3)AND(rt1.c2)))AND(rt1.c0)))AND(((v0.c1)IS(rt1.c2)))))AND(((rt1.c2) NOT BETWEEN (rt1.c3) AND (v0.c1))))) FROM v0, rt1 ORDER BY (+ (CASE rt1.c3  WHEN rt1.c2 THEN v0.c2 ELSE v0.c0 END)) ASC;
SELECT v0.c2, rt1.c3, rt1.c1, v0.c1, rt1.c0 FROM v0, t0, rt1;
SELECT ALL v0.c2, rt1.c3, rt1.c1, v0.c1, rt1.c0 FROM v0, t0, rt1 WHERE ((rt1.c3 IN ())) UNION ALL SELECT v0.c2, rt1.c3, rt1.c1, v0.c1, rt1.c0 FROM v0, t0, rt1 WHERE ((NOT ((rt1.c3 IN ())))) UNION ALL SELECT v0.c2, rt1.c3, rt1.c1, v0.c1, rt1.c0 FROM v0, t0, rt1 WHERE ((((rt1.c3 IN ())) ISNULL));
SELECT v0.c2, rt1.c3, rt1.c1, v0.c1, rt1.c0 FROM v0, t0, rt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))||(0.32370621972858904))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))||(0.32370621972858904))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))||(0.32370621972858904))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, rt1.c3, t0.c93, rt1.c1, v0.c2 FROM vt0, rt1, t0, v0 GROUP BY vt0.c0, rt1.c3, t0.c93, rt1.c1, v0.c2;
SELECT vt0.c0, rt1.c3, t0.c93, rt1.c1, v0.c2 FROM vt0, rt1, t0, v0 WHERE (((rt1.c3)>>(v0.c0)) COLLATE BINARY) GROUP BY vt0.c0, rt1.c3, t0.c93, rt1.c1, v0.c2 UNION SELECT vt0.c0, rt1.c3, t0.c93, rt1.c1, v0.c2 FROM vt0, rt1, t0, v0 WHERE ((NOT (((rt1.c3)>>(v0.c0)) COLLATE BINARY))) GROUP BY vt0.c0, rt1.c3, t0.c93, rt1.c1, v0.c2 UNION SELECT vt0.c0, rt1.c3, t0.c93, rt1.c1, v0.c2 FROM vt0, rt1, t0, v0 WHERE (((((rt1.c3)>>(v0.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0, rt1.c3, t0.c93, rt1.c1, v0.c2;
SELECT vt0.c0, rt1.c3, t0.c93, rt1.c1, v0.c2 FROM vt0, rt1, t0, v0 GROUP BY vt0.c0, rt1.c3, t0.c93, rt1.c1, v0.c2;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL * FROM vt0, t0, rt1;
SELECT * FROM vt0, t0, rt1 WHERE (CAST(((rt1.c3) NOT BETWEEN (0.1674692537519743) AND (0.29246645298576057)) AS INTEGER)) UNION ALL SELECT ALL * FROM vt0, t0, rt1 WHERE ((NOT (CAST(((rt1.c3) NOT BETWEEN (0.1674692537519743) AND (0.29246645298576057)) AS INTEGER)))) UNION ALL SELECT * FROM vt0, t0, rt1 WHERE (((CAST(((rt1.c3) NOT BETWEEN (0.1674692537519743) AND (0.29246645298576057)) AS INTEGER)) ISNULL));
SELECT ALL * FROM vt0, t0, rt1;
SELECT DISTINCT * FROM v0, rt1, vt0, t0;
SELECT DISTINCT * FROM v0, rt1, vt0, t0 NOT INDEXED WHERE ((('-1156340752' IN ()) IN ((- (v0.c2))))) UNION SELECT DISTINCT * FROM v0, rt1, vt0, t0 WHERE ((NOT ((('-1156340752' IN ()) IN ((- (v0.c2))))))) UNION SELECT DISTINCT * FROM v0, rt1, vt0, t0 WHERE ((((('-1156340752' IN ()) IN ((- (v0.c2))))) ISNULL));
SELECT DISTINCT * FROM v0, rt1, vt0, t0;
SELECT t0.c0, t0.c93 FROM t0 INDEXED BY i52 GROUP BY t0.c0, t0.c93;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING '-1970081513' UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (NOT ('-1970081513')) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (('-1970081513') ISNULL);
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING '-1970081513' UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (NOT ('-1970081513')) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (('-1970081513') ISNULL);
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT * FROM rt1 INDEXED BY i52 FULL OUTER JOIN t0 ON (((NULL, ((t0.c0)==(v0.c0)), CAST(vt0.c0 AS BLOB)))<((t0.c93 COLLATE NOCASE, (rt1.c2 IN ()), ((0.7354660043891829)IS NOT(t0.c93))))) LEFT OUTER JOIN vt0 ON ((((v0.c1) BETWEEN (x'6739') AND (rt1.c1))) NOTNULL) LEFT OUTER JOIN v0 ON ((((((vt0.c0)AND(rt1.c3)))OR(rt1.c2))) BETWEEN ((t0.c93 IN (rt1.c0))) AND ((v0.c1 IN ())));
SELECT DISTINCT v0.c2 FROM v0, rt1;
SELECT DISTINCT v0.c2 FROM v0, rt1 WHERE (x'') UNION SELECT DISTINCT v0.c2 FROM v0, rt1 WHERE ((NOT (x''))) UNION SELECT DISTINCT v0.c2 FROM v0, rt1 WHERE (((x'') ISNULL));
SELECT DISTINCT v0.c2 FROM v0, rt1;
SELECT ALL rt1.c2 FROM t0, rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM t0, rt1 WHERE (((((rt1.c3) BETWEEN (t0.c93) AND (t0.c93))) NOT NULL)) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM t0, rt1 WHERE ((NOT (((((rt1.c3) BETWEEN (t0.c93) AND (t0.c93))) NOT NULL)))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM t0, rt1 WHERE (((((((rt1.c3) BETWEEN (t0.c93) AND (t0.c93))) NOT NULL)) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM t0, rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING GROUP_CONCAT(((((MAX('1867710510'))OR(rt1.c1)))AND(rt1.c2))) UNION ALL SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (NOT (GROUP_CONCAT(((((MAX('1867710510'))OR(rt1.c1)))AND(rt1.c2))))) UNION ALL SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING ((GROUP_CONCAT(((((MAX('1867710510'))OR(rt1.c1)))AND(rt1.c2)))) ISNULL);
SELECT ALL rt1.c0, v0.c1, rt1.c2 FROM t0, v0, vt0 CROSS JOIN rt1 ON ((CAST(rt1.c1 AS TEXT)) BETWEEN (x'ed58c7ae') AND (x'a277f6d5'));
SELECT rt1.c0, v0.c1, rt1.c2 FROM t0, v0, vt0 CROSS JOIN rt1 ON ((CAST(rt1.c1 AS TEXT)) BETWEEN (x'ed58c7ae') AND (x'a277f6d5')) WHERE (CAST(((((((((v0.c1)OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c0)) AS NUMERIC)) UNION ALL SELECT ALL rt1.c0, v0.c1, rt1.c2 FROM t0, v0, vt0 CROSS JOIN rt1 ON ((CAST(rt1.c1 AS TEXT)) BETWEEN (x'ed58c7ae') AND (x'a277f6d5')) WHERE ((NOT (CAST(((((((((v0.c1)OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c0)) AS NUMERIC)))) UNION ALL SELECT ALL rt1.c0, v0.c1, rt1.c2 FROM t0, v0, vt0 CROSS JOIN rt1 ON ((CAST(rt1.c1 AS TEXT)) BETWEEN (x'ed58c7ae') AND (x'a277f6d5')) WHERE (((CAST(((((((((v0.c1)OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c0)) AS NUMERIC)) ISNULL));
SELECT ALL rt1.c0, v0.c1, rt1.c2 FROM t0, v0, vt0 CROSS JOIN rt1 ON ((CAST(rt1.c1 AS TEXT)) BETWEEN (x'ed58c7ae') AND (x'a277f6d5'));
SELECT DISTINCT rt1.c0, vt0.c0, v0.c0, rt1.c3, v0.c1, rt1.c2, t0.c0, v0.c2, t0.c93, rt1.c1 FROM t0, v0, vt0, rt1;
SELECT DISTINCT rt1.c0, vt0.c0, v0.c0, rt1.c3, v0.c1, rt1.c2, t0.c0, v0.c2, t0.c93, rt1.c1 FROM t0, v0, vt0, rt1 WHERE ((((v0.c2)) NOT BETWEEN (('-668431421')) AND ((0.38600074359450043)))) UNION SELECT DISTINCT rt1.c0, vt0.c0, v0.c0, rt1.c3, v0.c1, rt1.c2, t0.c0, v0.c2, t0.c93, rt1.c1 FROM t0, v0, vt0, rt1 WHERE ((NOT ((((v0.c2)) NOT BETWEEN (('-668431421')) AND ((0.38600074359450043)))))) UNION SELECT DISTINCT rt1.c0, vt0.c0, v0.c0, rt1.c3, v0.c1, rt1.c2, t0.c0, v0.c2, t0.c93, rt1.c1 FROM t0, v0, vt0, rt1 WHERE ((((((v0.c2)) NOT BETWEEN (('-668431421')) AND ((0.38600074359450043)))) ISNULL));
SELECT DISTINCT rt1.c0, vt0.c0, v0.c0, rt1.c3, v0.c1, rt1.c2, t0.c0, v0.c2, t0.c93, rt1.c1 FROM t0, v0, vt0, rt1;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE ((((((rt1.c1, rt1.c3, rt1.c3))=((rt1.c3, rt1.c0, NULL))))>(((rt1.c2)|(rt1.c1))))) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT ((((((rt1.c1, rt1.c3, rt1.c3))==((rt1.c3, rt1.c0, NULL))))>(((rt1.c2)|(rt1.c1))))))) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE ((((((((rt1.c1, rt1.c3, rt1.c3))=((rt1.c3, rt1.c0, NULL))))>(((rt1.c2)|(rt1.c1))))) ISNULL)) GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c3, v0.c2, rt1.c2, vt0.c0, rt1.c1, t0.c93, v0.c1, rt1.c0 FROM rt1, t0, v0, vt0 GROUP BY rt1.c3, v0.c2, rt1.c2, vt0.c0, rt1.c1, t0.c93, v0.c1, rt1.c0;
SELECT ALL rt1.c3, v0.c2, rt1.c2, vt0.c0, rt1.c1, t0.c93, v0.c1, rt1.c0 FROM rt1, t0, v0, vt0 GROUP BY rt1.c3, v0.c2, rt1.c2, vt0.c0, rt1.c1, t0.c93, v0.c1, rt1.c0 HAVING ((AVG(GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))))|(AVG(SUM(COUNT(MAX(COUNT(GROUP_CONCAT(GROUP_CONCAT(MAX(SUM(rt1.c1))))))))))) UNION ALL SELECT rt1.c3, v0.c2, rt1.c2, vt0.c0, rt1.c1, t0.c93, v0.c1, rt1.c0 FROM rt1, t0, v0, vt0 GROUP BY rt1.c3, v0.c2, rt1.c2, vt0.c0, rt1.c1, t0.c93, v0.c1, rt1.c0 HAVING (NOT (((AVG(GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))))|(AVG(SUM(COUNT(MAX(COUNT(GROUP_CONCAT(GROUP_CONCAT(MAX(SUM(rt1.c1))))))))))))) UNION ALL SELECT rt1.c3, v0.c2, rt1.c2, vt0.c0, rt1.c1, t0.c93, v0.c1, rt1.c0 FROM rt1, t0, v0, vt0 GROUP BY rt1.c3, v0.c2, rt1.c2, vt0.c0, rt1.c1, t0.c93, v0.c1, rt1.c0 HAVING ((((AVG(GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))))|(AVG(SUM(COUNT(MAX(COUNT(GROUP_CONCAT(GROUP_CONCAT(MAX(SUM(rt1.c1)))))))))))) ISNULL);
SELECT ALL rt1.c2 FROM v0, rt1;
SELECT rt1.c2 FROM v0, rt1 WHERE ((+ (CASE v0.c2  WHEN v0.c2 THEN v0.c1 WHEN rt1.c3 THEN '1008634912' WHEN rt1.c3 THEN rt1.c3 END))) UNION ALL SELECT rt1.c2 FROM v0, rt1 WHERE ((NOT ((+ (CASE v0.c2  WHEN v0.c2 THEN v0.c1 WHEN rt1.c3 THEN '1008634912' WHEN rt1.c3 THEN rt1.c3 END))))) UNION ALL SELECT ALL rt1.c2 FROM v0, rt1 WHERE ((((+ (CASE v0.c2  WHEN v0.c2 THEN v0.c1 WHEN rt1.c3 THEN '1008634912' WHEN rt1.c3 THEN rt1.c3 END))) ISNULL));
SELECT ALL rt1.c2 FROM v0, rt1;
SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN rt1 ON CASE NULL  WHEN t0.c93 COLLATE RTRIM THEN CAST(rt1.c0 AS BLOB) ELSE ((NULL) NOT BETWEEN (rt1.c3) AND (rt1.c0)) END;
SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN rt1 ON CASE NULL  WHEN t0.c93 COLLATE RTRIM THEN CAST(rt1.c0 AS BLOB) ELSE ((NULL) NOT BETWEEN (rt1.c3) AND (rt1.c0)) END WHERE ((((t0.c93 IN ()))>=((rt1.c1 IN ())))) UNION SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN rt1 ON CASE NULL  WHEN t0.c93 COLLATE RTRIM THEN CAST(rt1.c0 AS BLOB) ELSE ((NULL) NOT BETWEEN (rt1.c3) AND (rt1.c0)) END WHERE ((NOT ((((t0.c93 IN ()))>=((rt1.c1 IN ())))))) UNION SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN rt1 ON CASE NULL  WHEN t0.c93 COLLATE RTRIM THEN CAST(rt1.c0 AS BLOB) ELSE ((NULL) NOT BETWEEN (rt1.c3) AND (rt1.c0)) END WHERE ((((((t0.c93 IN ()))>=((rt1.c1 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt0, t0 FULL OUTER JOIN rt1 ON CASE NULL  WHEN t0.c93 COLLATE RTRIM THEN CAST(rt1.c0 AS BLOB) ELSE ((NULL) NOT BETWEEN (rt1.c3) AND (rt1.c0)) END;
SELECT v0.c0, vt0.c0, v0.c2, v0.c1 FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN 0Xc002c90 THEN CASE v0.c2  WHEN vt0.c0 THEN v0.c2 ELSE v0.c0 END END GROUP BY v0.c0, vt0.c0, v0.c2, v0.c1;
SELECT ALL v0.c0, vt0.c0, v0.c2, v0.c1 FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN 0Xc002c90 THEN CASE v0.c2  WHEN vt0.c0 THEN v0.c2 ELSE v0.c0 END END WHERE (((NULL)>>(((((v0.c2)AND(v0.c1)))OR(0.1436057421084096))))) GROUP BY v0.c0, vt0.c0, v0.c2, v0.c1 UNION SELECT v0.c0, vt0.c0, v0.c2, v0.c1 FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN 0xc002c90 THEN CASE v0.c2  WHEN vt0.c0 THEN v0.c2 ELSE v0.c0 END END WHERE ((NOT (((NULL)>>(((((v0.c2)AND(v0.c1)))OR(0.1436057421084096))))))) GROUP BY v0.c0, vt0.c0, v0.c2, v0.c1 UNION SELECT v0.c0, vt0.c0, v0.c2, v0.c1 FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN 0xc002c90 THEN CASE v0.c2  WHEN vt0.c0 THEN v0.c2 ELSE v0.c0 END END WHERE (((((NULL)>>(((((v0.c2)AND(v0.c1)))OR(0.1436057421084096))))) ISNULL)) GROUP BY v0.c0, vt0.c0, v0.c2, v0.c1;
SELECT v0.c0, vt0.c0, v0.c2, v0.c1 FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN 0Xc002c90 THEN CASE v0.c2  WHEN vt0.c0 THEN v0.c2 ELSE v0.c0 END END GROUP BY v0.c0, vt0.c0, v0.c2, v0.c1;
SELECT v0.c2, v0.c1, v0.c0 FROM t0, v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM t0, v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING MIN('+i') UNION ALL SELECT ALL v0.c2, v0.c1, v0.c0 FROM t0, v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (NOT (MIN('+i'))) UNION ALL SELECT ALL v0.c2, v0.c1, v0.c0 FROM t0, v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING ((MIN('+i')) ISNULL);
SELECT v0.c2, v0.c1, v0.c0 FROM t0, v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM t0, v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING MIN('+i') UNION ALL SELECT ALL v0.c2, v0.c1, v0.c0 FROM t0, v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (NOT (MIN('+i'))) UNION ALL SELECT ALL v0.c2, v0.c1, v0.c0 FROM t0, v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING ((MIN('+i')) ISNULL);
SELECT v0.c2, v0.c1, v0.c0 FROM t0, v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL * FROM rt1, t0, vt0, v0;
SELECT ALL * FROM rt1, t0, vt0, v0 WHERE ((((rt1.c3 COLLATE BINARY))<>((((v0.c1) NOT NULL))))) UNION ALL SELECT ALL * FROM rt1, t0, vt0, v0 WHERE ((NOT ((((rt1.c3 COLLATE BINARY))!=((((v0.c1) NOT NULL))))))) UNION ALL SELECT ALL * FROM rt1, t0, vt0, v0 WHERE ((((((rt1.c3 COLLATE BINARY))<>((((v0.c1) NOT NULL))))) ISNULL));
SELECT ALL * FROM rt1, t0, vt0, v0;
SELECT DISTINCT * FROM vt0, t0, rt1, v0;
SELECT DISTINCT * FROM vt0, t0, rt1, v0 WHERE ('1395667307') UNION SELECT DISTINCT * FROM vt0, t0 NOT INDEXED, rt1, v0 WHERE ((NOT ('1395667307'))) UNION SELECT DISTINCT * FROM vt0, t0, rt1, v0 WHERE ((('1395667307') ISNULL));
SELECT DISTINCT * FROM vt0, t0, rt1, v0;
SELECT vt0.c0, t0.c0, v0.c2, v0.c0, t0.c93 FROM v0, t0, vt0 GROUP BY vt0.c0, t0.c0, v0.c2, v0.c0, t0.c93;
SELECT vt0.c0, t0.c0, v0.c2, v0.c0, t0.c93 FROM v0, t0, vt0 WHERE (CASE WHEN LIKELY(t0.c93) THEN (((vt0.c0, v0.c1, t0.c0, t0.c93, NULL))>=((v0.c2, v0.c0, vt0.c0, NULL, t0.c93))) ELSE 0.9153598525142196 END) GROUP BY vt0.c0, t0.c0, v0.c2, v0.c0, t0.c93 UNION SELECT vt0.c0, t0.c0, v0.c2, v0.c0, t0.c93 FROM v0, t0, vt0 WHERE ((NOT (CASE WHEN LIKELY(t0.c93) THEN (((vt0.c0, v0.c1, t0.c0, t0.c93, NULL))>=((v0.c2, v0.c0, vt0.c0, NULL, t0.c93))) ELSE 0.9153598525142196 END))) GROUP BY vt0.c0, t0.c0, v0.c2, v0.c0, t0.c93 UNION SELECT ALL vt0.c0, t0.c0, v0.c2, v0.c0, t0.c93 FROM v0, t0, vt0 WHERE (((CASE WHEN LIKELY(t0.c93) THEN (((vt0.c0, v0.c1, t0.c0, t0.c93, NULL))>=((v0.c2, v0.c0, vt0.c0, NULL, t0.c93))) ELSE 0.9153598525142196 END) ISNULL)) GROUP BY vt0.c0, t0.c0, v0.c2, v0.c0, t0.c93;
SELECT vt0.c0, t0.c0, v0.c2, v0.c0, t0.c93 FROM v0, t0, vt0 GROUP BY vt0.c0, t0.c0, v0.c2, v0.c0, t0.c93;
SELECT rt1.c0, rt1.c3, rt1.c2, v0.c0, t0.c93 FROM rt1, v0, t0, vt0 GROUP BY rt1.c0, rt1.c3, rt1.c2, v0.c0, t0.c93;
SELECT ALL rt1.c0, rt1.c3, rt1.c2, v0.c0, t0.c93 FROM rt1, v0, t0, vt0 GROUP BY rt1.c0, rt1.c3, rt1.c2, v0.c0, t0.c93 HAVING (((v0.c1) BETWEEN (COUNT(AVG(MIN(GROUP_CONCAT(t0.c0))))) AND (MIN(rt1.c0))) IN ()) UNION ALL SELECT rt1.c0, rt1.c3, rt1.c2, v0.c0, t0.c93 FROM rt1, v0, t0, vt0 GROUP BY rt1.c0, rt1.c3, rt1.c2, v0.c0, t0.c93 HAVING (NOT ((((v0.c1) BETWEEN (COUNT(AVG(MIN(GROUP_CONCAT(t0.c0))))) AND (MIN(rt1.c0))) IN ()))) UNION ALL SELECT rt1.c0, rt1.c3, rt1.c2, v0.c0, t0.c93 FROM rt1, v0, t0, vt0 GROUP BY rt1.c0, rt1.c3, rt1.c2, v0.c0, t0.c93 HAVING (((((v0.c1) BETWEEN (COUNT(AVG(MIN(GROUP_CONCAT(t0.c0))))) AND (MIN(rt1.c0))) IN ())) ISNULL);
SELECT rt1.c0, rt1.c3, rt1.c2, v0.c0, t0.c93 FROM rt1, v0, t0, vt0 GROUP BY rt1.c0, rt1.c3, rt1.c2, v0.c0, t0.c93;
SELECT ALL rt1.c0, rt1.c3, rt1.c2, v0.c0, t0.c93 FROM rt1, v0, t0, vt0 GROUP BY rt1.c0, rt1.c3, rt1.c2, v0.c0, t0.c93 HAVING (((v0.c1) BETWEEN (COUNT(AVG(MIN(GROUP_CONCAT(t0.c0))))) AND (MIN(rt1.c0))) IN ()) UNION ALL SELECT rt1.c0, rt1.c3, rt1.c2, v0.c0, t0.c93 FROM rt1, v0, t0, vt0 GROUP BY rt1.c0, rt1.c3, rt1.c2, v0.c0, t0.c93 HAVING (NOT ((((v0.c1) BETWEEN (COUNT(AVG(MIN(GROUP_CONCAT(t0.c0))))) AND (MIN(rt1.c0))) IN ()))) UNION ALL SELECT rt1.c0, rt1.c3, rt1.c2, v0.c0, t0.c93 FROM rt1, v0, t0, vt0 GROUP BY rt1.c0, rt1.c3, rt1.c2, v0.c0, t0.c93 HAVING (((((v0.c1) BETWEEN (COUNT(AVG(MIN(GROUP_CONCAT(t0.c0))))) AND (MIN(rt1.c0))) IN ())) ISNULL);
SELECT rt1.c0, rt1.c3, rt1.c2, v0.c0, t0.c93 FROM rt1, v0, t0, vt0 GROUP BY rt1.c0, rt1.c3, rt1.c2, v0.c0, t0.c93;
SELECT SUM(((CAST(rt1.c2 AS NUMERIC)) BETWEEN ((~ (NULL))) AND ((~ (rt1.c2))))) FROM vt0, rt1 ORDER BY CAST((NOT (rt1.c0)) AS NUMERIC), (((+ (rt1.c3)))>=(vt0.c0)) DESC  NULLS LAST;
SELECT ALL v0.c0, t0.c93, v0.c2 FROM vt0, rt1, t0, v0;
SELECT ALL v0.c0, t0.c93, v0.c2 FROM vt0, rt1, t0, v0 WHERE (((CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 ELSE t0.c0 END)GLOB(((vt0.c0) IS TRUE)))) UNION ALL SELECT v0.c0, t0.c93, v0.c2 FROM vt0, rt1, t0, v0 WHERE ((NOT (((CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 ELSE t0.c0 END)GLOB(((vt0.c0) IS TRUE)))))) UNION ALL SELECT ALL v0.c0, t0.c93, v0.c2 FROM vt0, rt1, t0, v0 WHERE (((((CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 ELSE t0.c0 END)GLOB(((vt0.c0) IS TRUE)))) ISNULL));
SELECT ALL v0.c0, t0.c93, v0.c2 FROM vt0, rt1, t0, v0;
SELECT DISTINCT rt1.c1, v0.c1, v0.c0, rt1.c3, rt1.c0, v0.c2, t0.c0, t0.c93, rt1.c2 FROM rt1, v0, t0;
SELECT DISTINCT rt1.c1, v0.c1, v0.c0, rt1.c3, rt1.c0, v0.c2, t0.c0, t0.c93, rt1.c2 FROM rt1, v0, t0 WHERE (((rt1.c1) BETWEEN (((t0.c0)>(t0.c0))) AND (CASE rt1.c3  WHEN v0.c0 THEN v0.c0 WHEN rt1.c0 THEN t0.c93 WHEN rt1.c1 THEN t0.c93 END))) UNION SELECT DISTINCT rt1.c1, v0.c1, v0.c0, rt1.c3, rt1.c0, v0.c2, t0.c0, t0.c93, rt1.c2 FROM rt1, v0, t0 WHERE ((NOT (((rt1.c1) BETWEEN (((t0.c0)>(t0.c0))) AND (CASE rt1.c3  WHEN v0.c0 THEN v0.c0 WHEN rt1.c0 THEN t0.c93 WHEN rt1.c1 THEN t0.c93 END))))) UNION SELECT DISTINCT rt1.c1, v0.c1, v0.c0, rt1.c3, rt1.c0, v0.c2, t0.c0, t0.c93, rt1.c2 FROM rt1, v0, t0 WHERE (((((rt1.c1) BETWEEN (((t0.c0)>(t0.c0))) AND (CASE rt1.c3  WHEN v0.c0 THEN v0.c0 WHEN rt1.c0 THEN t0.c93 WHEN rt1.c1 THEN t0.c93 END))) ISNULL));
SELECT DISTINCT rt1.c1, v0.c1, v0.c0, rt1.c3, rt1.c0, v0.c2, t0.c0, t0.c93, rt1.c2 FROM rt1, v0, t0;
SELECT ALL t0.c0, vt0.c0, rt1.c3, rt1.c2, t0.c93, rt1.c1, rt1.c0 FROM rt1, vt0 RIGHT OUTER JOIN t0 ON ((((t0.c93)GLOB(rt1.c2))) NOT BETWEEN ('') AND ((+ (rt1.c2)))) GROUP BY t0.c0, vt0.c0, rt1.c3, rt1.c2, t0.c93, rt1.c1, rt1.c0;
SELECT ALL t0.c0, vt0.c0, rt1.c3, rt1.c2, t0.c93, rt1.c1, rt1.c0 FROM rt1, vt0 RIGHT OUTER JOIN t0 ON ((((t0.c93)GLOB(rt1.c2))) NOT BETWEEN ('') AND ((+ (rt1.c2)))) WHERE ((((t0.c93)<=(rt1.c2)) IN ())) GROUP BY t0.c0, vt0.c0, rt1.c3, rt1.c2, t0.c93, rt1.c1, rt1.c0 UNION SELECT ALL t0.c0, vt0.c0, rt1.c3, rt1.c2, t0.c93, rt1.c1, rt1.c0 FROM rt1, vt0 RIGHT OUTER JOIN t0 ON ((((t0.c93)GLOB(rt1.c2))) NOT BETWEEN ('') AND ((+ (rt1.c2)))) WHERE ((NOT ((((t0.c93)<=(rt1.c2)) IN ())))) GROUP BY t0.c0, vt0.c0, rt1.c3, rt1.c2, t0.c93, rt1.c1, rt1.c0 UNION SELECT ALL t0.c0, vt0.c0, rt1.c3, rt1.c2, t0.c93, rt1.c1, rt1.c0 FROM rt1, vt0 RIGHT OUTER JOIN t0 ON ((((t0.c93)GLOB(rt1.c2))) NOT BETWEEN ('') AND ((+ (rt1.c2)))) WHERE ((((((t0.c93)<=(rt1.c2)) IN ())) ISNULL)) GROUP BY t0.c0, vt0.c0, rt1.c3, rt1.c2, t0.c93, rt1.c1, rt1.c0;
SELECT ALL t0.c0, vt0.c0, rt1.c3, rt1.c2, t0.c93, rt1.c1, rt1.c0 FROM rt1, vt0 RIGHT OUTER JOIN t0 ON ((((t0.c93)GLOB(rt1.c2))) NOT BETWEEN ('') AND ((+ (rt1.c2)))) GROUP BY t0.c0, vt0.c0, rt1.c3, rt1.c2, t0.c93, rt1.c1, rt1.c0;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING ((((v0.c0)) NOT BETWEEN ((MAX(v0.c2))) AND ((v0.c1))) IN (CASE WHEN MAX(SUM(GROUP_CONCAT(0.8502377793606378))) THEN TOTAL(v0.c2) WHEN v0.c1 THEN v0.c1 WHEN GROUP_CONCAT(v0.c0) THEN v0.c0 ELSE GROUP_CONCAT(v0.c1) END, MIN(SUM(GROUP_CONCAT(COUNT(GROUP_CONCAT(MAX(v0.c1)))))))) UNION ALL SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING (NOT (((((v0.c0)) NOT BETWEEN ((MAX(v0.c2))) AND ((v0.c1))) IN (CASE WHEN MAX(SUM(GROUP_CONCAT(0.8502377793606378))) THEN TOTAL(v0.c2) WHEN v0.c1 THEN v0.c1 WHEN GROUP_CONCAT(v0.c0) THEN v0.c0 ELSE GROUP_CONCAT(v0.c1) END, MIN(SUM(GROUP_CONCAT(COUNT(GROUP_CONCAT(MAX(v0.c1)))))))))) UNION ALL SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING ((((((v0.c0)) NOT BETWEEN ((MAX(v0.c2))) AND ((v0.c1))) IN (CASE WHEN MAX(SUM(GROUP_CONCAT(0.8502377793606378))) THEN TOTAL(v0.c2) WHEN v0.c1 THEN v0.c1 WHEN GROUP_CONCAT(v0.c0) THEN v0.c0 ELSE GROUP_CONCAT(v0.c1) END, MIN(SUM(GROUP_CONCAT(COUNT(GROUP_CONCAT(MAX(v0.c1))))))))) ISNULL);
SELECT ALL * FROM v0, t0, rt1, vt0;
SELECT ALL * FROM v0, t0, rt1, vt0 WHERE ((((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0)))) IS FALSE)) UNION ALL SELECT ALL * FROM v0, t0, rt1, vt0 WHERE ((NOT ((((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0)))) IS FALSE)))) UNION ALL SELECT ALL * FROM v0, t0, rt1, vt0 WHERE ((((((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0)))) IS FALSE)) ISNULL));
SELECT ALL * FROM v0, t0, rt1, vt0;
SELECT DISTINCT rt1.c2, rt1.c3 FROM rt1, v0, vt0;
SELECT DISTINCT rt1.c2, rt1.c3 FROM rt1, v0, vt0 WHERE (CAST(rt1.c2 AS TEXT) COLLATE BINARY) UNION SELECT DISTINCT rt1.c2, rt1.c3 FROM rt1, v0, vt0 WHERE ((NOT (CAST(rt1.c2 AS TEXT) COLLATE BINARY))) UNION SELECT DISTINCT rt1.c2, rt1.c3 FROM rt1, v0, vt0 WHERE (((CAST(rt1.c2 AS TEXT) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c3 FROM rt1, v0, vt0;
SELECT rt1.c3, v0.c2 FROM v0 CROSS JOIN rt1 ON TYPEOF(((rt1.c0)%(rt1.c0))) GROUP BY rt1.c3, v0.c2;
SELECT rt1.c3, v0.c2 FROM v0 CROSS JOIN rt1 ON TYPEOF(((rt1.c0)%(rt1.c0))) WHERE (v0.c2) GROUP BY rt1.c3, v0.c2 UNION SELECT ALL rt1.c3, v0.c2 FROM v0 CROSS JOIN rt1 ON TYPEOF(((rt1.c0)%(rt1.c0))) WHERE ((NOT (v0.c2))) GROUP BY rt1.c3, v0.c2 UNION SELECT ALL rt1.c3, v0.c2 FROM v0 CROSS JOIN rt1 ON TYPEOF(((rt1.c0)%(rt1.c0))) WHERE (((v0.c2) ISNULL)) GROUP BY rt1.c3, v0.c2;
SELECT rt1.c3, v0.c2 FROM v0 CROSS JOIN rt1 ON TYPEOF(((rt1.c0)%(rt1.c0))) GROUP BY rt1.c3, v0.c2;
SELECT rt1.c1 FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c3)+(rt1.c0)))%(((((((((rt1.c0)OR(rt1.c0)))OR(vt0.c0)))AND(0.8686794321808623)))OR(rt1.c1)))) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c3)+(rt1.c0)))%(((((((((rt1.c0)OR(rt1.c0)))OR(vt0.c0)))AND(0.8686794321808623)))OR(rt1.c1)))) GROUP BY rt1.c1 HAVING MAX(SUM(vt0.c0)) UNION ALL SELECT ALL rt1.c1 FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c3)+(rt1.c0)))%(((((((((rt1.c0)OR(rt1.c0)))OR(vt0.c0)))AND(0.8686794321808623)))OR(rt1.c1)))) GROUP BY rt1.c1 HAVING (NOT (MAX(SUM(vt0.c0)))) UNION ALL SELECT rt1.c1 FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c3)+(rt1.c0)))%(((((((((rt1.c0)OR(rt1.c0)))OR(vt0.c0)))AND(0.8686794321808623)))OR(rt1.c1)))) GROUP BY rt1.c1 HAVING ((MAX(SUM(vt0.c0))) ISNULL);
SELECT ALL * FROM vt0, rt1 FULL OUTER JOIN t0 ON (((- ('1382197952')))*(((rt1.c2)!=(rt1.c0)))) INNER JOIN v0 ON ((((v0.c0) IS TRUE))GLOB((NOT (vt0.c0))));
SELECT ALL * FROM vt0, rt1 FULL OUTER JOIN t0 ON (((- ('1382197952')))*(((rt1.c2)<>(rt1.c0)))) INNER JOIN v0 ON ((((v0.c0) IS TRUE))GLOB((NOT (vt0.c0)))) WHERE (CAST(rt1.c0 COLLATE RTRIM AS NUMERIC)) UNION ALL SELECT * FROM vt0, rt1 FULL OUTER JOIN t0 ON (((- ('1382197952')))*(((rt1.c2)!=(rt1.c0)))) INNER JOIN v0 ON ((((v0.c0) IS TRUE))GLOB((NOT (vt0.c0)))) WHERE ((NOT (CAST(rt1.c0 COLLATE RTRIM AS NUMERIC)))) UNION ALL SELECT * FROM vt0, rt1 FULL OUTER JOIN t0 ON (((- ('1382197952')))*(((rt1.c2)<>(rt1.c0)))) INNER JOIN v0 ON ((((v0.c0) IS TRUE))GLOB((NOT (vt0.c0)))) WHERE (((CAST(rt1.c0 COLLATE RTRIM AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt0, rt1 FULL OUTER JOIN t0 ON (((- ('1382197952')))*(((rt1.c2)!=(rt1.c0)))) INNER JOIN v0 ON ((((v0.c0) IS TRUE))GLOB((NOT (vt0.c0))));
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt0;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE (CASE WHEN (NOT (vt0.c0)) THEN rt1.c1 ELSE (((rt1.c0, rt1.c0, rt1.c1))>((vt0.c0, rt1.c1, rt1.c1))) END) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE ((NOT (CASE WHEN (NOT (vt0.c0)) THEN rt1.c1 ELSE (((rt1.c0, rt1.c0, rt1.c1))>((vt0.c0, rt1.c1, rt1.c1))) END))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE (((CASE WHEN (NOT (vt0.c0)) THEN rt1.c1 ELSE (((rt1.c0, rt1.c0, rt1.c1))>((vt0.c0, rt1.c1, rt1.c1))) END) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt0;
SELECT ALL rt1.c2, rt1.c3 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c3;
SELECT rt1.c2, rt1.c3 FROM vt0, rt1 WHERE (((((rt1.c3)>(rt1.c2)))-(((rt1.c0)<(rt1.c2))))) GROUP BY rt1.c2, rt1.c3 UNION SELECT rt1.c2, rt1.c3 FROM vt0, rt1 WHERE ((NOT (((((rt1.c3)>(rt1.c2)))-(((rt1.c0)<(rt1.c2))))))) GROUP BY rt1.c2, rt1.c3 UNION SELECT rt1.c2, rt1.c3 FROM vt0, rt1 WHERE (((((((rt1.c3)>(rt1.c2)))-(((rt1.c0)<(rt1.c2))))) ISNULL)) GROUP BY rt1.c2, rt1.c3;
SELECT ALL rt1.c2, rt1.c3 FROM vt0, rt1 GROUP BY rt1.c2, rt1.c3;
SELECT ALL rt1.c3, rt1.c2, t0.c0, v0.c1, v0.c2, rt1.c0 FROM v0, vt0, t0, rt1 GROUP BY rt1.c3, rt1.c2, t0.c0, v0.c1, v0.c2, rt1.c0;
SELECT rt1.c3, rt1.c2, t0.c0, v0.c1, v0.c2, rt1.c0 FROM v0, vt0, t0, rt1 GROUP BY rt1.c3, rt1.c2, t0.c0, v0.c1, v0.c2, rt1.c0 HAVING MAX((AVG(COUNT(vt0.c0)) IN ())) UNION ALL SELECT ALL rt1.c3, rt1.c2, t0.c0, v0.c1, v0.c2, rt1.c0 FROM v0, vt0, t0, rt1 GROUP BY rt1.c3, rt1.c2, t0.c0, v0.c1, v0.c2, rt1.c0 HAVING (NOT (MAX((AVG(COUNT(vt0.c0)) IN ())))) UNION ALL SELECT rt1.c3, rt1.c2, t0.c0, v0.c1, v0.c2, rt1.c0 FROM v0, vt0, t0, rt1 GROUP BY rt1.c3, rt1.c2, t0.c0, v0.c1, v0.c2, rt1.c0 HAVING ((MAX((AVG(COUNT(vt0.c0)) IN ()))) ISNULL);
SELECT ALL rt1.c3, rt1.c2, t0.c0, v0.c1, v0.c2, rt1.c0 FROM v0, vt0, t0, rt1 GROUP BY rt1.c3, rt1.c2, t0.c0, v0.c1, v0.c2, rt1.c0;
SELECT rt1.c3, rt1.c2, t0.c0, v0.c1, v0.c2, rt1.c0 FROM v0, vt0, t0, rt1 GROUP BY rt1.c3, rt1.c2, t0.c0, v0.c1, v0.c2, rt1.c0 HAVING MAX((AVG(COUNT(vt0.c0)) IN ())) UNION ALL SELECT ALL rt1.c3, rt1.c2, t0.c0, v0.c1, v0.c2, rt1.c0 FROM v0, vt0, t0, rt1 GROUP BY rt1.c3, rt1.c2, t0.c0, v0.c1, v0.c2, rt1.c0 HAVING (NOT (MAX((AVG(COUNT(vt0.c0)) IN ())))) UNION ALL SELECT rt1.c3, rt1.c2, t0.c0, v0.c1, v0.c2, rt1.c0 FROM v0, vt0, t0, rt1 GROUP BY rt1.c3, rt1.c2, t0.c0, v0.c1, v0.c2, rt1.c0 HAVING ((MAX((AVG(COUNT(vt0.c0)) IN ()))) ISNULL);
SELECT ALL rt1.c3, rt1.c2, t0.c0, v0.c1, v0.c2, rt1.c0 FROM v0, vt0, t0, rt1 GROUP BY rt1.c3, rt1.c2, t0.c0, v0.c1, v0.c2, rt1.c0;
SELECT rt1.c1, rt1.c3, rt1.c2, rt1.c0 FROM vt0, t0 NATURAL JOIN rt1;
SELECT ALL rt1.c1, rt1.c3, rt1.c2, rt1.c0 FROM vt0, t0 NATURAL JOIN rt1 WHERE (((((rt1.c2) NOTNULL)) IS FALSE)) UNION ALL SELECT ALL rt1.c1, rt1.c3, rt1.c2, rt1.c0 FROM vt0, t0 NATURAL JOIN rt1 WHERE ((NOT (((((rt1.c2) NOTNULL)) IS FALSE)))) UNION ALL SELECT ALL rt1.c1, rt1.c3, rt1.c2, rt1.c0 FROM vt0, t0 NATURAL JOIN rt1 WHERE (((((((rt1.c2) NOTNULL)) IS FALSE)) ISNULL));
SELECT rt1.c1, rt1.c3, rt1.c2, rt1.c0 FROM vt0, t0 NATURAL JOIN rt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ('&2o8x*') UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ('&2o8x*'))) UNION SELECT DISTINCT * FROM v0 WHERE ((('&2o8x*') ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt1.c2, rt1.c3, t0.c93, rt1.c0, t0.c0 FROM t0, vt0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c3, t0.c93, rt1.c0, t0.c0;
SELECT ALL rt1.c2, rt1.c3, t0.c93, rt1.c0, t0.c0 FROM t0, vt0 NATURAL JOIN rt1 WHERE (CAST(TYPEOF(DISTINCT t0.c0) AS NUMERIC)) GROUP BY rt1.c2, rt1.c3, t0.c93, rt1.c0, t0.c0 UNION SELECT ALL rt1.c2, rt1.c3, t0.c93, rt1.c0, t0.c0 FROM t0, vt0 NATURAL JOIN rt1 WHERE ((NOT (CAST(TYPEOF(DISTINCT t0.c0) AS NUMERIC)))) GROUP BY rt1.c2, rt1.c3, t0.c93, rt1.c0, t0.c0 UNION SELECT rt1.c2, rt1.c3, t0.c93, rt1.c0, t0.c0 FROM t0, vt0 NATURAL JOIN rt1 WHERE (((CAST(TYPEOF(DISTINCT t0.c0) AS NUMERIC)) ISNULL)) GROUP BY rt1.c2, rt1.c3, t0.c93, rt1.c0, t0.c0;
SELECT ALL rt1.c2, rt1.c3, t0.c93, rt1.c0, t0.c0 FROM t0, vt0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c3, t0.c93, rt1.c0, t0.c0;
SELECT ALL v0.c2, rt1.c2, rt1.c3, rt1.c1, t0.c93, v0.c0, rt1.c0, t0.c0, v0.c1 FROM v0, rt1 NATURAL JOIN t0 GROUP BY v0.c2, rt1.c2, rt1.c3, rt1.c1, t0.c93, v0.c0, rt1.c0, t0.c0, v0.c1;
SELECT ALL v0.c2, rt1.c2, rt1.c3, rt1.c1, t0.c93, v0.c0, rt1.c0, t0.c0, v0.c1 FROM v0, rt1 NATURAL JOIN t0 GROUP BY v0.c2, rt1.c2, rt1.c3, rt1.c1, t0.c93, v0.c0, rt1.c0, t0.c0, v0.c1 HAVING CAST((NOT (rt1.c3)) AS NUMERIC) UNION ALL SELECT ALL v0.c2, rt1.c2, rt1.c3, rt1.c1, t0.c93, v0.c0, rt1.c0, t0.c0, v0.c1 FROM v0, rt1 NATURAL JOIN t0 GROUP BY v0.c2, rt1.c2, rt1.c3, rt1.c1, t0.c93, v0.c0, rt1.c0, t0.c0, v0.c1 HAVING (NOT (CAST((NOT (rt1.c3)) AS NUMERIC))) UNION ALL SELECT v0.c2, rt1.c2, rt1.c3, rt1.c1, t0.c93, v0.c0, rt1.c0, t0.c0, v0.c1 FROM v0, rt1 NATURAL JOIN t0 GROUP BY v0.c2, rt1.c2, rt1.c3, rt1.c1, t0.c93, v0.c0, rt1.c0, t0.c0, v0.c1 HAVING ((CAST((NOT (rt1.c3)) AS NUMERIC)) ISNULL);
SELECT ALL v0.c2, rt1.c2, rt1.c3, rt1.c1, t0.c93, v0.c0, rt1.c0, t0.c0, v0.c1 FROM v0, rt1 NATURAL JOIN t0 GROUP BY v0.c2, rt1.c2, rt1.c3, rt1.c1, t0.c93, v0.c0, rt1.c0, t0.c0, v0.c1;
SELECT ALL v0.c2, rt1.c2, rt1.c3, rt1.c1, t0.c93, v0.c0, rt1.c0, t0.c0, v0.c1 FROM v0, rt1 NATURAL JOIN t0 GROUP BY v0.c2, rt1.c2, rt1.c3, rt1.c1, t0.c93, v0.c0, rt1.c0, t0.c0, v0.c1 HAVING CAST((NOT (rt1.c3)) AS NUMERIC) UNION ALL SELECT ALL v0.c2, rt1.c2, rt1.c3, rt1.c1, t0.c93, v0.c0, rt1.c0, t0.c0, v0.c1 FROM v0, rt1 NATURAL JOIN t0 GROUP BY v0.c2, rt1.c2, rt1.c3, rt1.c1, t0.c93, v0.c0, rt1.c0, t0.c0, v0.c1 HAVING (NOT (CAST((NOT (rt1.c3)) AS NUMERIC))) UNION ALL SELECT v0.c2, rt1.c2, rt1.c3, rt1.c1, t0.c93, v0.c0, rt1.c0, t0.c0, v0.c1 FROM v0, rt1 NATURAL JOIN t0 GROUP BY v0.c2, rt1.c2, rt1.c3, rt1.c1, t0.c93, v0.c0, rt1.c0, t0.c0, v0.c1 HAVING ((CAST((NOT (rt1.c3)) AS NUMERIC)) ISNULL);
SELECT ALL v0.c2, rt1.c2, rt1.c3, rt1.c1, t0.c93, v0.c0, rt1.c0, t0.c0, v0.c1 FROM v0, rt1 NATURAL JOIN t0 GROUP BY v0.c2, rt1.c2, rt1.c3, rt1.c1, t0.c93, v0.c0, rt1.c0, t0.c0, v0.c1;
SELECT ALL rt1.c0, rt1.c3, rt1.c2 FROM rt1;
SELECT ALL rt1.c0, rt1.c3, rt1.c2 FROM rt1 WHERE (((((((rt1.c3)*(rt1.c0)))AND(rt1.c1 COLLATE BINARY)))AND((rt1.c2 IN (rt1.c1))))) UNION ALL SELECT rt1.c0, rt1.c3, rt1.c2 FROM rt1 WHERE ((NOT (((((((rt1.c3)*(rt1.c0)))AND(rt1.c1 COLLATE BINARY)))AND((rt1.c2 IN (rt1.c1))))))) UNION ALL SELECT ALL rt1.c0, rt1.c3, rt1.c2 FROM rt1 WHERE (((((((((rt1.c3)*(rt1.c0)))AND(rt1.c1 COLLATE BINARY)))AND((rt1.c2 IN (rt1.c1))))) ISNULL));
SELECT ALL rt1.c0, rt1.c3, rt1.c2 FROM rt1;
SELECT DISTINCT vt0.c0, v0.c0, v0.c2, t0.c0, v0.c1 FROM rt1, v0, t0, vt0;
SELECT DISTINCT vt0.c0, v0.c0, v0.c2, t0.c0, v0.c1 FROM rt1, v0, t0, vt0 WHERE (((v0.c0) IS TRUE) COLLATE BINARY) UNION SELECT DISTINCT vt0.c0, v0.c0, v0.c2, t0.c0, v0.c1 FROM rt1, v0, t0, vt0 WHERE ((NOT (((v0.c0) IS TRUE) COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0, v0.c0, v0.c2, t0.c0, v0.c1 FROM rt1, v0 NOT INDEXED, t0, vt0 WHERE (((((v0.c0) IS TRUE) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0, v0.c2, t0.c0, v0.c1 FROM rt1, v0, t0, vt0;
SELECT v0.c1, t0.c93, v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (('1310888567') NOT BETWEEN (NULLIF(DISTINCT v0.c1, v0.c0)) AND (((v0.c0) IS FALSE))) GROUP BY v0.c1, t0.c93, v0.c0;
SELECT ALL v0.c1, t0.c93, v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (('1310888567') NOT BETWEEN (NULLIF(DISTINCT v0.c1, v0.c0)) AND (((v0.c0) IS FALSE))) WHERE ((~ (t0.c93)) COLLATE RTRIM) GROUP BY v0.c1, t0.c93, v0.c0 UNION SELECT v0.c1, t0.c93, v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (('1310888567') NOT BETWEEN (NULLIF(DISTINCT v0.c1, v0.c0)) AND (((v0.c0) IS FALSE))) WHERE ((NOT ((~ (t0.c93)) COLLATE RTRIM))) GROUP BY v0.c1, t0.c93, v0.c0 UNION SELECT v0.c1, t0.c93, v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (('1310888567') NOT BETWEEN (NULLIF(DISTINCT v0.c1, v0.c0)) AND (((v0.c0) IS FALSE))) WHERE ((((~ (t0.c93)) COLLATE RTRIM) ISNULL)) GROUP BY v0.c1, t0.c93, v0.c0;
SELECT v0.c1, t0.c93, v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (('1310888567') NOT BETWEEN (NULLIF(DISTINCT v0.c1, v0.c0)) AND (((v0.c0) IS FALSE))) GROUP BY v0.c1, t0.c93, v0.c0;
SELECT ALL v0.c0, rt1.c3, v0.c2 FROM rt1, v0 GROUP BY v0.c0, rt1.c3, v0.c2;
SELECT ALL v0.c0, rt1.c3, v0.c2 FROM rt1, v0 GROUP BY v0.c0, rt1.c3, v0.c2 HAVING SUM(((COUNT(*)) ISNULL)) UNION ALL SELECT v0.c0, rt1.c3, v0.c2 FROM rt1, v0 GROUP BY v0.c0, rt1.c3, v0.c2 HAVING (NOT (SUM(((COUNT(*)) ISNULL)))) UNION ALL SELECT v0.c0, rt1.c3, v0.c2 FROM rt1, v0 GROUP BY v0.c0, rt1.c3, v0.c2 HAVING ((SUM(((COUNT(*)) ISNULL))) ISNULL);
SELECT * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE ((- ((+ (NULL))))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT ((- ((+ (NULL))))))) UNION ALL SELECT * FROM vt0, v0 WHERE ((((- ((+ (NULL))))) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt1.c3, vt0.c0, rt1.c1, rt1.c0, rt1.c2, t0.c0, t0.c93 FROM t0, rt1 NATURAL JOIN vt0 GROUP BY rt1.c3, vt0.c0, rt1.c1, rt1.c0, rt1.c2, t0.c0, t0.c93;
SELECT rt1.c3, vt0.c0, rt1.c1, rt1.c0, rt1.c2, t0.c0, t0.c93 FROM t0, rt1 NATURAL JOIN vt0 WHERE ((((((vt0.c0) NOTNULL), ((vt0.c0)IS(rt1.c2)), rt1.c1 COLLATE RTRIM))!=((UNLIKELY(DISTINCT t0.c93), x'', vt0.c0)))) GROUP BY rt1.c3, vt0.c0, rt1.c1, rt1.c0, rt1.c2, t0.c0, t0.c93 UNION SELECT rt1.c3, vt0.c0, rt1.c1, rt1.c0, rt1.c2, t0.c0, t0.c93 FROM t0, rt1 NATURAL JOIN vt0 WHERE ((NOT ((((((vt0.c0) NOTNULL), ((vt0.c0)IS(rt1.c2)), rt1.c1 COLLATE RTRIM))!=((UNLIKELY(DISTINCT t0.c93), x'', vt0.c0)))))) GROUP BY rt1.c3, vt0.c0, rt1.c1, rt1.c0, rt1.c2, t0.c0, t0.c93 UNION SELECT rt1.c3, vt0.c0, rt1.c1, rt1.c0, rt1.c2, t0.c0, t0.c93 FROM t0, rt1 NATURAL JOIN vt0 WHERE ((((((((vt0.c0) NOTNULL), ((vt0.c0)IS(rt1.c2)), rt1.c1 COLLATE RTRIM))<>((UNLIKELY(DISTINCT t0.c93), x'', vt0.c0)))) ISNULL)) GROUP BY rt1.c3, vt0.c0, rt1.c1, rt1.c0, rt1.c2, t0.c0, t0.c93;
SELECT rt1.c3, vt0.c0, rt1.c1, rt1.c0, rt1.c2, t0.c0, t0.c93 FROM t0, rt1 NATURAL JOIN vt0 GROUP BY rt1.c3, vt0.c0, rt1.c1, rt1.c0, rt1.c2, t0.c0, t0.c93;
SELECT rt1.c1, rt1.c2, vt0.c0 FROM vt0, t0 LEFT OUTER JOIN rt1 ON CASE CAST(rt1.c0 AS REAL)  WHEN ((v0.c1)<=(v0.c1)) THEN ABS(DISTINCT t0.c93) END LEFT OUTER JOIN v0 ON vt0.c0 COLLATE RTRIM GROUP BY rt1.c1, rt1.c2, vt0.c0;
SELECT v0.c2, rt1.c1 FROM vt0, t0, v0, rt1;
SELECT ALL v0.c2, rt1.c1 FROM vt0, t0, v0, rt1 WHERE ((((x''))<(((v0.c2 IN ()))))) UNION ALL SELECT ALL v0.c2, rt1.c1 FROM vt0, t0, v0, rt1 WHERE ((NOT ((((x''))<(((v0.c2 IN ()))))))) UNION ALL SELECT v0.c2, rt1.c1 FROM vt0, t0, v0, rt1 WHERE ((((((x''))<(((v0.c2 IN ()))))) ISNULL));
SELECT v0.c2, rt1.c1 FROM vt0, t0, v0, rt1;
SELECT DISTINCT v0.c0, rt1.c2, rt1.c0, v0.c2, v0.c1 FROM rt1, v0, t0 INNER JOIN vt0 ON ((CASE WHEN rt1.c1 THEN vt0.c0 WHEN v0.c2 THEN rt1.c2 WHEN v0.c1 THEN vt0.c0 END) ISNULL);
SELECT DISTINCT v0.c0, rt1.c2, rt1.c0, v0.c2, v0.c1 FROM rt1, v0, t0 INNER JOIN vt0 ON ((CASE WHEN rt1.c1 THEN vt0.c0 WHEN v0.c2 THEN rt1.c2 WHEN v0.c1 THEN vt0.c0 END) ISNULL) WHERE ((((vt0.c0))=((t0.c0))) COLLATE NOCASE COLLATE BINARY) UNION SELECT DISTINCT v0.c0, rt1.c2, rt1.c0, v0.c2, v0.c1 FROM rt1, v0, t0 INNER JOIN vt0 ON ((CASE WHEN rt1.c1 THEN vt0.c0 WHEN v0.c2 THEN rt1.c2 WHEN v0.c1 THEN vt0.c0 END) ISNULL) WHERE ((NOT ((((vt0.c0))==((t0.c0))) COLLATE NOCASE COLLATE BINARY))) UNION SELECT DISTINCT v0.c0, rt1.c2, rt1.c0, v0.c2, v0.c1 FROM rt1, v0, t0 INNER JOIN vt0 ON ((CASE WHEN rt1.c1 THEN vt0.c0 WHEN v0.c2 THEN rt1.c2 WHEN v0.c1 THEN vt0.c0 END) ISNULL) WHERE ((((((vt0.c0))=((t0.c0))) COLLATE NOCASE COLLATE BINARY) ISNULL));
SELECT DISTINCT v0.c0, rt1.c2, rt1.c0, v0.c2, v0.c1 FROM rt1, v0, t0 INNER JOIN vt0 ON ((CASE WHEN rt1.c1 THEN vt0.c0 WHEN v0.c2 THEN rt1.c2 WHEN v0.c1 THEN vt0.c0 END) ISNULL);
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 WHERE ((- (rt1.c0 COLLATE BINARY))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE ((NOT ((- (rt1.c0 COLLATE BINARY))))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE ((((- (rt1.c0 COLLATE BINARY))) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT vt0.c0, rt1.c1, rt1.c3, rt1.c2, t0.c93 FROM t0, vt0, rt1 GROUP BY vt0.c0, rt1.c1, rt1.c3, rt1.c2, t0.c93;
SELECT vt0.c0, rt1.c1, rt1.c3, rt1.c2, t0.c93 FROM t0, vt0, rt1 GROUP BY vt0.c0, rt1.c1, rt1.c3, rt1.c2, t0.c93 HAVING x'' UNION ALL SELECT vt0.c0, rt1.c1, rt1.c3, rt1.c2, t0.c93 FROM t0, vt0, rt1 GROUP BY vt0.c0, rt1.c1, rt1.c3, rt1.c2, t0.c93 HAVING (NOT (x'')) UNION ALL SELECT ALL vt0.c0, rt1.c1, rt1.c3, rt1.c2, t0.c93 FROM t0, vt0, rt1 GROUP BY vt0.c0, rt1.c1, rt1.c3, rt1.c2, t0.c93 HAVING ((x'') ISNULL);
SELECT vt0.c0, rt1.c1, rt1.c3, rt1.c2, t0.c93 FROM t0, vt0, rt1 GROUP BY vt0.c0, rt1.c1, rt1.c3, rt1.c2, t0.c93;
SELECT vt0.c0, rt1.c1, rt1.c3, rt1.c2, t0.c93 FROM t0, vt0, rt1 GROUP BY vt0.c0, rt1.c1, rt1.c3, rt1.c2, t0.c93 HAVING x'' UNION ALL SELECT vt0.c0, rt1.c1, rt1.c3, rt1.c2, t0.c93 FROM t0, vt0, rt1 GROUP BY vt0.c0, rt1.c1, rt1.c3, rt1.c2, t0.c93 HAVING (NOT (x'')) UNION ALL SELECT ALL vt0.c0, rt1.c1, rt1.c3, rt1.c2, t0.c93 FROM t0, vt0, rt1 GROUP BY vt0.c0, rt1.c1, rt1.c3, rt1.c2, t0.c93 HAVING ((x'') ISNULL);
SELECT vt0.c0, rt1.c1, rt1.c3, rt1.c2, t0.c93 FROM t0, vt0, rt1 GROUP BY vt0.c0, rt1.c1, rt1.c3, rt1.c2, t0.c93;
SELECT ALL * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE ((((((v0.c0)) BETWEEN ((v0.c2)) AND ((v0.c1))))/((- (vt0.c0))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT ((((((v0.c0)) BETWEEN ((v0.c2)) AND ((v0.c1))))/((- (vt0.c0))))))) UNION ALL SELECT * FROM v0 NOT INDEXED, vt0 WHERE ((((((((v0.c0)) BETWEEN ((v0.c2)) AND ((v0.c1))))/((- (vt0.c0))))) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT v0.c2 FROM v0, vt0;
SELECT DISTINCT v0.c2 FROM v0, vt0 WHERE (((v0.c2)<>((~ (vt0.c0))))) UNION SELECT DISTINCT v0.c2 FROM v0, vt0 WHERE ((NOT (((v0.c2)<>((~ (vt0.c0))))))) UNION SELECT DISTINCT v0.c2 FROM v0, vt0 WHERE (((((v0.c2)!=((~ (vt0.c0))))) ISNULL));
SELECT DISTINCT v0.c2 FROM v0, vt0;
SELECT ALL t0.c93, t0.c0 FROM t0 GROUP BY t0.c93, t0.c0;
SELECT t0.c93, t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS TEXT)) IS FALSE)) GROUP BY t0.c93, t0.c0 UNION SELECT t0.c93, t0.c0 FROM t0 WHERE ((NOT (((CAST(t0.c0 AS TEXT)) IS FALSE)))) GROUP BY t0.c93, t0.c0 UNION SELECT t0.c93, t0.c0 FROM t0 WHERE (((((CAST(t0.c0 AS TEXT)) IS FALSE)) ISNULL)) GROUP BY t0.c93, t0.c0;
SELECT ALL t0.c93, t0.c0 FROM t0 GROUP BY t0.c93, t0.c0;
SELECT ALL t0.c0, rt1.c2, rt1.c0 FROM rt1, vt0, t0 GROUP BY t0.c0, rt1.c2, rt1.c0;
SELECT ALL t0.c0, rt1.c2, rt1.c0 FROM rt1, vt0, t0 GROUP BY t0.c0, rt1.c2, rt1.c0 HAVING ((((SUM(MIN(rt1.c1))) NOTNULL))<=(rt1.c3)) UNION ALL SELECT ALL t0.c0, rt1.c2, rt1.c0 FROM rt1, vt0, t0 GROUP BY t0.c0, rt1.c2, rt1.c0 HAVING (NOT (((((SUM(MIN(rt1.c1))) NOTNULL))<=(rt1.c3)))) UNION ALL SELECT t0.c0, rt1.c2, rt1.c0 FROM rt1, vt0, t0 GROUP BY t0.c0, rt1.c2, rt1.c0 HAVING ((((((SUM(MIN(rt1.c1))) NOTNULL))<=(rt1.c3))) ISNULL);
SELECT ALL v0.c1, v0.c2, rt1.c0, v0.c0, rt1.c2, t0.c0, vt0.c0, rt1.c3 FROM v0 INNER JOIN rt1 ON ((((((((((((rt1.c3)OR(rt1.c3)))AND(t0.c93)))AND(t0.c0)))AND(t0.c0)))AND('-1344320876')))OR(((0xffffffffd9fe793d) NOT BETWEEN (v0.c0) AND (v0.c2)))) INNER JOIN vt0 ON (((rt1.c3)&(rt1.c3)) IN ()) CROSS JOIN t0 ON ((((((((((rt1.c1)AND(rt1.c3)))AND(rt1.c2)))OR(v0.c1)))OR(v0.c1)))GLOB(CASE rt1.c0  WHEN t0.c93 THEN t0.c0 END));
SELECT ALL v0.c1, v0.c2, rt1.c0, v0.c0, rt1.c2, t0.c0, vt0.c0, rt1.c3 FROM v0 INNER JOIN rt1 ON ((((((((((((rt1.c3)OR(rt1.c3)))AND(t0.c93)))AND(t0.c0)))AND(t0.c0)))AND('-1344320876')))OR(((0Xffffffffd9fe793d) NOT BETWEEN (v0.c0) AND (v0.c2)))) INNER JOIN vt0 ON (((rt1.c3)&(rt1.c3)) IN ()) CROSS JOIN t0 ON ((((((((((rt1.c1)AND(rt1.c3)))AND(rt1.c2)))OR(v0.c1)))OR(v0.c1)))GLOB(CASE rt1.c0  WHEN t0.c93 THEN t0.c0 END)) WHERE (CASE (((vt0.c0)) BETWEEN ((rt1.c2)) AND ((v0.c2)))  WHEN ((rt1.c1)IS(rt1.c0)) THEN CAST(v0.c1 AS REAL) ELSE ((v0.c0)IS(rt1.c3)) END) UNION ALL SELECT ALL v0.c1, v0.c2, rt1.c0, v0.c0, rt1.c2, t0.c0, vt0.c0, rt1.c3 FROM v0 INNER JOIN rt1 ON ((((((((((((rt1.c3)OR(rt1.c3)))AND(t0.c93)))AND(t0.c0)))AND(t0.c0)))AND('-1344320876')))OR(((0xffffffffd9fe793d) NOT BETWEEN (v0.c0) AND (v0.c2)))) INNER JOIN vt0 ON (((rt1.c3)&(rt1.c3)) IN ()) CROSS JOIN t0 ON ((((((((((rt1.c1)AND(rt1.c3)))AND(rt1.c2)))OR(v0.c1)))OR(v0.c1)))GLOB(CASE rt1.c0  WHEN t0.c93 THEN t0.c0 END)) WHERE ((NOT (CASE (((vt0.c0)) BETWEEN ((rt1.c2)) AND ((v0.c2)))  WHEN ((rt1.c1)IS(rt1.c0)) THEN CAST(v0.c1 AS REAL) ELSE ((v0.c0)IS(rt1.c3)) END))) UNION ALL SELECT ALL v0.c1, v0.c2, rt1.c0, v0.c0, rt1.c2, t0.c0, vt0.c0, rt1.c3 FROM v0 INNER JOIN rt1 ON ((((((((((((rt1.c3)OR(rt1.c3)))AND(t0.c93)))AND(t0.c0)))AND(t0.c0)))AND('-1344320876')))OR(((0xffffffffd9fe793d) NOT BETWEEN (v0.c0) AND (v0.c2)))) INNER JOIN vt0 ON (((rt1.c3)&(rt1.c3)) IN ()) CROSS JOIN t0 ON ((((((((((rt1.c1)AND(rt1.c3)))AND(rt1.c2)))OR(v0.c1)))OR(v0.c1)))GLOB(CASE rt1.c0  WHEN t0.c93 THEN t0.c0 END)) WHERE (((CASE (((vt0.c0)) BETWEEN ((rt1.c2)) AND ((v0.c2)))  WHEN ((rt1.c1)IS(rt1.c0)) THEN CAST(v0.c1 AS REAL) ELSE ((v0.c0)IS(rt1.c3)) END) ISNULL));
SELECT ALL v0.c1, v0.c2, rt1.c0, v0.c0, rt1.c2, t0.c0, vt0.c0, rt1.c3 FROM v0 INNER JOIN rt1 ON ((((((((((((rt1.c3)OR(rt1.c3)))AND(t0.c93)))AND(t0.c0)))AND(t0.c0)))AND('-1344320876')))OR(((0xffffffffd9fe793d) NOT BETWEEN (v0.c0) AND (v0.c2)))) INNER JOIN vt0 ON (((rt1.c3)&(rt1.c3)) IN ()) CROSS JOIN t0 ON ((((((((((rt1.c1)AND(rt1.c3)))AND(rt1.c2)))OR(v0.c1)))OR(v0.c1)))GLOB(CASE rt1.c0  WHEN t0.c93 THEN t0.c0 END));
SELECT DISTINCT rt1.c3, rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c3, rt1.c0, rt1.c1 FROM rt1 WHERE ((((((0.8766920199385435, rt1.c1, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c3)) AND ((rt1.c3, rt1.c3, rt1.c2)))) IS FALSE)) UNION SELECT DISTINCT rt1.c3, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT ((((((0.8766920199385435, rt1.c1, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c3)) AND ((rt1.c3, rt1.c3, rt1.c2)))) IS FALSE)))) UNION SELECT DISTINCT rt1.c3, rt1.c0, rt1.c1 FROM rt1 WHERE ((((((((0.8766920199385435, rt1.c1, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c3)) AND ((rt1.c3, rt1.c3, rt1.c2)))) IS FALSE)) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c0, rt1.c1 FROM rt1;
SELECT ALL t0.c0, vt0.c0, rt1.c2, rt1.c1, v0.c2, v0.c0, rt1.c0, v0.c1, t0.c93, rt1.c3 FROM vt0, t0, rt1, v0 GROUP BY t0.c0, vt0.c0, rt1.c2, rt1.c1, v0.c2, v0.c0, rt1.c0, v0.c1, t0.c93, rt1.c3;
SELECT t0.c0, vt0.c0, rt1.c2, rt1.c1, v0.c2, v0.c0, rt1.c0, v0.c1, t0.c93, rt1.c3 FROM vt0, t0, rt1, v0 WHERE (((((rt1.c3) NOTNULL))!=(SQLITE_SOURCE_ID()))) GROUP BY t0.c0, vt0.c0, rt1.c2, rt1.c1, v0.c2, v0.c0, rt1.c0, v0.c1, t0.c93, rt1.c3 UNION SELECT t0.c0, vt0.c0, rt1.c2, rt1.c1, v0.c2, v0.c0, rt1.c0, v0.c1, t0.c93, rt1.c3 FROM vt0, t0, rt1, v0 WHERE ((NOT (((((rt1.c3) NOTNULL))<>(SQLITE_SOURCE_ID()))))) GROUP BY t0.c0, vt0.c0, rt1.c2, rt1.c1, v0.c2, v0.c0, rt1.c0, v0.c1, t0.c93, rt1.c3 UNION SELECT ALL t0.c0, vt0.c0, rt1.c2, rt1.c1, v0.c2, v0.c0, rt1.c0, v0.c1, t0.c93, rt1.c3 FROM vt0, t0, rt1, v0 WHERE (((((((rt1.c3) NOTNULL))<>(SQLITE_SOURCE_ID()))) ISNULL)) GROUP BY t0.c0, vt0.c0, rt1.c2, rt1.c1, v0.c2, v0.c0, rt1.c0, v0.c1, t0.c93, rt1.c3;
SELECT ALL t0.c0, vt0.c0, rt1.c2, rt1.c1, v0.c2, v0.c0, rt1.c0, v0.c1, t0.c93, rt1.c3 FROM vt0, t0, rt1, v0 GROUP BY t0.c0, vt0.c0, rt1.c2, rt1.c1, v0.c2, v0.c0, rt1.c0, v0.c1, t0.c93, rt1.c3;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT rt1.c0, vt0.c0, rt1.c2, v0.c2, rt1.c3, v0.c1, v0.c0, rt1.c1 FROM rt1, vt0, v0;
SELECT rt1.c0, vt0.c0, rt1.c2, v0.c2, rt1.c3, v0.c1, v0.c0, rt1.c1 FROM rt1, vt0, v0 WHERE (((((rt1.c2) IS TRUE)) IS FALSE)) UNION ALL SELECT ALL rt1.c0, vt0.c0, rt1.c2, v0.c2, rt1.c3, v0.c1, v0.c0, rt1.c1 FROM rt1, vt0, v0 WHERE ((NOT (((((rt1.c2) IS TRUE)) IS FALSE)))) UNION ALL SELECT ALL rt1.c0, vt0.c0, rt1.c2, v0.c2, rt1.c3, v0.c1, v0.c0, rt1.c1 FROM rt1, vt0, v0 WHERE (((((((rt1.c2) IS TRUE)) IS FALSE)) ISNULL));
SELECT rt1.c0, vt0.c0, rt1.c2, v0.c2, rt1.c3, v0.c1, v0.c0, rt1.c1 FROM rt1, vt0, v0;
SELECT DISTINCT * FROM v0, rt1, vt0, t0;
SELECT DISTINCT * FROM v0, rt1, vt0, t0 WHERE (((((v0.c0) NOT NULL))OR(t0.c93))) UNION SELECT DISTINCT * FROM v0, rt1, vt0, t0 WHERE ((NOT (((((v0.c0) NOT NULL))OR(t0.c93))))) UNION SELECT DISTINCT * FROM v0, rt1, vt0, t0 WHERE (((((((v0.c0) NOT NULL))OR(t0.c93))) ISNULL));
SELECT DISTINCT * FROM v0, rt1, vt0, t0;
SELECT vt0.c0, rt1.c2 FROM vt0, t0, rt1 GROUP BY vt0.c0, rt1.c2;
SELECT vt0.c0, rt1.c2 FROM vt0, t0, rt1 WHERE ((('{n') IS FALSE)) GROUP BY vt0.c0, rt1.c2 UNION SELECT ALL vt0.c0, rt1.c2 FROM vt0, t0, rt1 WHERE ((NOT ((('{n') IS FALSE)))) GROUP BY vt0.c0, rt1.c2 UNION SELECT ALL vt0.c0, rt1.c2 FROM vt0, t0, rt1 WHERE ((((('{n') IS FALSE)) ISNULL)) GROUP BY vt0.c0, rt1.c2;
SELECT vt0.c0, rt1.c2 FROM vt0, t0, rt1 GROUP BY vt0.c0, rt1.c2;
SELECT ALL rt1.c1, t0.c93, v0.c2, t0.c0, v0.c0, rt1.c3 FROM vt0, rt1, v0, t0 GROUP BY rt1.c1, t0.c93, v0.c2, t0.c0, v0.c0, rt1.c3;
SELECT ALL rt1.c1, t0.c93, v0.c2, t0.c0, v0.c0, rt1.c3 FROM vt0, rt1, v0, t0 GROUP BY rt1.c1, t0.c93, v0.c2, t0.c0, v0.c0, rt1.c3 HAVING ((TOTAL(MIN(TOTAL(v0.c0))))/(((v0.c2) NOT BETWEEN (SUM(SUM(rt1.c1))) AND (rt1.c3)))) UNION ALL SELECT rt1.c1, t0.c93, v0.c2, t0.c0, v0.c0, rt1.c3 FROM vt0, rt1, v0, t0 GROUP BY rt1.c1, t0.c93, v0.c2, t0.c0, v0.c0, rt1.c3 HAVING (NOT (((TOTAL(MIN(TOTAL(v0.c0))))/(((v0.c2) NOT BETWEEN (SUM(SUM(rt1.c1))) AND (rt1.c3)))))) UNION ALL SELECT rt1.c1, t0.c93, v0.c2, t0.c0, v0.c0, rt1.c3 FROM vt0, rt1, v0, t0 GROUP BY rt1.c1, t0.c93, v0.c2, t0.c0, v0.c0, rt1.c3 HAVING ((((TOTAL(MIN(TOTAL(v0.c0))))/(((v0.c2) NOT BETWEEN (SUM(SUM(rt1.c1))) AND (rt1.c3))))) ISNULL);
SELECT ALL SUM(LIKELY(DISTINCT '-489530018')) FROM rt1;
SELECT rt1.c1, rt1.c3, rt1.c0, rt1.c2, vt0.c0 FROM vt0, rt1;
SELECT rt1.c1, rt1.c3, rt1.c0, rt1.c2, vt0.c0 FROM vt0, rt1 WHERE (((((rt1.c2)*(rt1.c0))) BETWEEN (((rt1.c1)==(rt1.c0))) AND (rt1.c0 COLLATE BINARY))) UNION ALL SELECT ALL rt1.c1, rt1.c3, rt1.c0, rt1.c2, vt0.c0 FROM vt0, rt1 WHERE ((NOT (((((rt1.c2)*(rt1.c0))) BETWEEN (((rt1.c1)=(rt1.c0))) AND (rt1.c0 COLLATE BINARY))))) UNION ALL SELECT ALL rt1.c1, rt1.c3, rt1.c0, rt1.c2, vt0.c0 FROM vt0, rt1 WHERE (((((((rt1.c2)*(rt1.c0))) BETWEEN (((rt1.c1)=(rt1.c0))) AND (rt1.c0 COLLATE BINARY))) ISNULL));
SELECT rt1.c1, rt1.c3, rt1.c0, rt1.c2, vt0.c0 FROM vt0, rt1;
SELECT DISTINCT * FROM v0 INNER JOIN t0 ON ((t0.c0) BETWEEN (t0.c93) AND (rt1.c3)) COLLATE RTRIM FULL OUTER JOIN rt1 ON ((((0.9166310938529012) IS TRUE)) IS TRUE) RIGHT OUTER JOIN vt0 ON t0.c0;
SELECT ALL rt1.c3, vt0.c0, t0.c0 FROM vt0, rt1, t0 GROUP BY rt1.c3, vt0.c0, t0.c0;
SELECT ALL rt1.c3, vt0.c0, t0.c0 FROM vt0, rt1, t0 WHERE (CASE LIKELY(rt1.c2)  WHEN rt1.c1 COLLATE BINARY THEN (~ (t0.c93)) WHEN CASE t0.c93  WHEN vt0.c0 THEN t0.c0 WHEN rt1.c0 THEN t0.c0 WHEN rt1.c2 THEN rt1.c3 END THEN (rt1.c2 IN ()) WHEN ((t0.c0) BETWEEN (t0.c93) AND (t0.c93)) THEN rt1.c0 ELSE json_remove(rt1.c0, x'') END) GROUP BY rt1.c3, vt0.c0, t0.c0 UNION SELECT rt1.c3, vt0.c0, t0.c0 FROM vt0, rt1, t0 WHERE ((NOT (CASE LIKELY(rt1.c2)  WHEN rt1.c1 COLLATE BINARY THEN (~ (t0.c93)) WHEN CASE t0.c93  WHEN vt0.c0 THEN t0.c0 WHEN rt1.c0 THEN t0.c0 WHEN rt1.c2 THEN rt1.c3 END THEN (rt1.c2 IN ()) WHEN ((t0.c0) BETWEEN (t0.c93) AND (t0.c93)) THEN rt1.c0 ELSE json_remove(rt1.c0, x'') END))) GROUP BY rt1.c3, vt0.c0, t0.c0 UNION SELECT ALL rt1.c3, vt0.c0, t0.c0 FROM vt0, rt1, t0 WHERE (((CASE LIKELY(rt1.c2)  WHEN rt1.c1 COLLATE BINARY THEN (~ (t0.c93)) WHEN CASE t0.c93  WHEN vt0.c0 THEN t0.c0 WHEN rt1.c0 THEN t0.c0 WHEN rt1.c2 THEN rt1.c3 END THEN (rt1.c2 IN ()) WHEN ((t0.c0) BETWEEN (t0.c93) AND (t0.c93)) THEN rt1.c0 ELSE json_remove(rt1.c0, x'') END) ISNULL)) GROUP BY rt1.c3, vt0.c0, t0.c0;
SELECT ALL rt1.c3, vt0.c0, t0.c0 FROM vt0, rt1, t0 GROUP BY rt1.c3, vt0.c0, t0.c0;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING ((v0.c0) NOT BETWEEN ((((GROUP_CONCAT(AVG(SUM(v0.c2)))))<((v0.c0)))) AND (MAX(NULL))) UNION ALL SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (NOT (((v0.c0) NOT BETWEEN ((((GROUP_CONCAT(AVG(SUM(v0.c2)))))<((v0.c0)))) AND (MAX(NULL))))) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING ((((v0.c0) NOT BETWEEN ((((GROUP_CONCAT(AVG(SUM(v0.c2)))))<((v0.c0)))) AND (MAX(NULL)))) ISNULL);
SELECT ALL TOTAL(rt1.c1) FROM rt1 ORDER BY (((rt1.c3, rt1.c1, rt1.c1)) BETWEEN ((rt1.c1 COLLATE RTRIM, CAST(rt1.c2 AS NUMERIC), rt1.c1)) AND (('2048315260', CASE rt1.c3  WHEN rt1.c1 THEN NULL ELSE rt1.c3 END, CAST(rt1.c1 AS NUMERIC)))) DESC;
SELECT ALL t0.c93 FROM rt1, t0;
SELECT t0.c93 FROM rt1, t0 WHERE (((CASE WHEN rt1.c0 THEN t0.c93 WHEN t0.c0 THEN '' WHEN rt1.c3 THEN rt1.c2 END)%(((t0.c93)>(rt1.c2))))) UNION ALL SELECT ALL t0.c93 FROM rt1, t0 WHERE ((NOT (((CASE WHEN rt1.c0 THEN t0.c93 WHEN t0.c0 THEN '' WHEN rt1.c3 THEN rt1.c2 END)%(((t0.c93)>(rt1.c2))))))) UNION ALL SELECT t0.c93 FROM rt1, t0 WHERE (((((CASE WHEN rt1.c0 THEN t0.c93 WHEN t0.c0 THEN '' WHEN rt1.c3 THEN rt1.c2 END)%(((t0.c93)>(rt1.c2))))) ISNULL));
SELECT ALL t0.c93 FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 CROSS JOIN v0 ON CASE WHEN (- (NULL)) THEN ((rt1.c1) BETWEEN (v0.c1) AND (t0.c93)) ELSE x'' END;
SELECT DISTINCT * FROM rt1, t0 CROSS JOIN v0 ON CASE WHEN (- (NULL)) THEN ((rt1.c1) BETWEEN (v0.c1) AND (t0.c93)) ELSE x'' END WHERE (CAST(rt1.c0 AS REAL) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt1, t0 CROSS JOIN v0 ON CASE WHEN (- (NULL)) THEN ((rt1.c1) BETWEEN (v0.c1) AND (t0.c93)) ELSE x'' END WHERE ((NOT (CAST(rt1.c0 AS REAL) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt1, t0 CROSS JOIN v0 ON CASE WHEN (- (NULL)) THEN ((rt1.c1) BETWEEN (v0.c1) AND (t0.c93)) ELSE x'' END WHERE (((CAST(rt1.c0 AS REAL) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt1, t0 CROSS JOIN v0 ON CASE WHEN (- (NULL)) THEN ((rt1.c1) BETWEEN (v0.c1) AND (t0.c93)) ELSE x'' END;
SELECT ALL rt1.c2, rt1.c0, t0.c93, vt0.c0, v0.c2 FROM vt0, rt1, t0, v0 GROUP BY rt1.c2, rt1.c0, t0.c93, vt0.c0, v0.c2;
SELECT rt1.c2, rt1.c0, t0.c93, vt0.c0, v0.c2 FROM vt0, rt1, t0, v0 WHERE (CASE WHEN CASE t0.c0  WHEN t0.c93 THEN rt1.c1 WHEN v0.c1 THEN rt1.c3 WHEN v0.c2 THEN vt0.c0 ELSE t0.c0 END THEN ((rt1.c2)OR(v0.c2)) END) GROUP BY rt1.c2, rt1.c0, t0.c93, vt0.c0, v0.c2 UNION SELECT rt1.c2, rt1.c0, t0.c93, vt0.c0, v0.c2 FROM vt0, rt1, t0, v0 WHERE ((NOT (CASE WHEN CASE t0.c0  WHEN t0.c93 THEN rt1.c1 WHEN v0.c1 THEN rt1.c3 WHEN v0.c2 THEN vt0.c0 ELSE t0.c0 END THEN ((rt1.c2)OR(v0.c2)) END))) GROUP BY rt1.c2, rt1.c0, t0.c93, vt0.c0, v0.c2 UNION SELECT rt1.c2, rt1.c0, t0.c93, vt0.c0, v0.c2 FROM vt0, rt1, t0, v0 WHERE (((CASE WHEN CASE t0.c0  WHEN t0.c93 THEN rt1.c1 WHEN v0.c1 THEN rt1.c3 WHEN v0.c2 THEN vt0.c0 ELSE t0.c0 END THEN ((rt1.c2)OR(v0.c2)) END) ISNULL)) GROUP BY rt1.c2, rt1.c0, t0.c93, vt0.c0, v0.c2;
SELECT ALL rt1.c2, rt1.c0, t0.c93, vt0.c0, v0.c2 FROM vt0, rt1, t0, v0 GROUP BY rt1.c2, rt1.c0, t0.c93, vt0.c0, v0.c2;
SELECT ALL vt0.c0, rt1.c0, rt1.c2, t0.c0, rt1.c1 FROM vt0, rt1, t0 GROUP BY vt0.c0, rt1.c0, rt1.c2, t0.c0, rt1.c1;
SELECT ALL vt0.c0, rt1.c0, rt1.c2, t0.c0, rt1.c1 FROM vt0, rt1, t0 GROUP BY vt0.c0, rt1.c0, rt1.c2, t0.c0, rt1.c1 HAVING ((GROUP_CONCAT(COUNT(*))) NOTNULL) COLLATE BINARY COLLATE NOCASE UNION ALL SELECT ALL vt0.c0, rt1.c0, rt1.c2, t0.c0, rt1.c1 FROM vt0, rt1, t0 GROUP BY vt0.c0, rt1.c0, rt1.c2, t0.c0, rt1.c1 HAVING (NOT (((GROUP_CONCAT(COUNT(*))) NOTNULL) COLLATE BINARY COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c0, rt1.c0, rt1.c2, t0.c0, rt1.c1 FROM vt0, rt1, t0 GROUP BY vt0.c0, rt1.c0, rt1.c2, t0.c0, rt1.c1 HAVING ((((GROUP_CONCAT(COUNT(*))) NOTNULL) COLLATE BINARY COLLATE NOCASE) ISNULL);
SELECT MIN(((((((t0.c93)<=(rt1.c0)))OR(v0.c0)))OR(((rt1.c3) IS TRUE)))) FROM rt1, t0, vt0, v0;
SELECT v0.c0, v0.c1, t0.c0 FROM t0 FULL OUTER JOIN v0 ON 3.4055266E7 COLLATE RTRIM;
SELECT ALL v0.c0, v0.c1, t0.c0 FROM t0 FULL OUTER JOIN v0 ON 3.4055266E7 COLLATE RTRIM WHERE (((t0.c93 IN ()) IN (((v0.c1)*(v0.c0))))) UNION ALL SELECT v0.c0, v0.c1, t0.c0 FROM t0 FULL OUTER JOIN v0 ON 3.4055266E7 COLLATE RTRIM WHERE ((NOT (((t0.c93 IN ()) IN (((v0.c1)*(v0.c0))))))) UNION ALL SELECT v0.c0, v0.c1, t0.c0 FROM t0 FULL OUTER JOIN v0 ON 3.4055266E7 COLLATE RTRIM WHERE (((((t0.c93 IN ()) IN (((v0.c1)*(v0.c0))))) ISNULL));
SELECT v0.c0, v0.c1, t0.c0 FROM t0 FULL OUTER JOIN v0 ON 3.4055266E7 COLLATE RTRIM;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (PRINTF(((rt1.c3) ISNULL))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (PRINTF(((rt1.c3) ISNULL))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((PRINTF(((rt1.c3) ISNULL))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT t0.c0, rt1.c3, rt1.c1, t0.c93, rt1.c0 FROM t0, rt1 GROUP BY t0.c0, rt1.c3, rt1.c1, t0.c93, rt1.c0;
SELECT ALL t0.c0, rt1.c3, rt1.c1, t0.c93, rt1.c0 FROM t0, rt1 WHERE (t0.c0) GROUP BY t0.c0, rt1.c3, rt1.c1, t0.c93, rt1.c0 UNION SELECT ALL t0.c0, rt1.c3, rt1.c1, t0.c93, rt1.c0 FROM t0, rt1 WHERE ((NOT (t0.c0))) GROUP BY t0.c0, rt1.c3, rt1.c1, t0.c93, rt1.c0 UNION SELECT ALL t0.c0, rt1.c3, rt1.c1, t0.c93, rt1.c0 FROM t0, rt1 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0, rt1.c3, rt1.c1, t0.c93, rt1.c0;
SELECT t0.c0, rt1.c3, rt1.c1, t0.c93, rt1.c0 FROM t0, rt1 GROUP BY t0.c0, rt1.c3, rt1.c1, t0.c93, rt1.c0;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING v0.c1 UNION ALL SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING (NOT (v0.c1)) UNION ALL SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING ((v0.c1) ISNULL);
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING v0.c1 UNION ALL SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING (NOT (v0.c1)) UNION ALL SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING ((v0.c1) ISNULL);
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT rt1.c3, vt0.c0, rt1.c0, v0.c2 FROM rt1, v0 CROSS JOIN vt0 ON (+ (v0.c1 COLLATE BINARY));
SELECT ALL rt1.c3, vt0.c0, rt1.c0, v0.c2 FROM rt1, v0 CROSS JOIN vt0 ON (+ (v0.c1 COLLATE BINARY)) WHERE (((((rt1.c1)&(v0.c0)))IS NOT((rt1.c2 IN ())))) UNION ALL SELECT rt1.c3, vt0.c0, rt1.c0, v0.c2 FROM rt1, v0 CROSS JOIN vt0 ON (+ (v0.c1 COLLATE BINARY)) WHERE ((NOT (((((rt1.c1)&(v0.c0)))IS NOT((rt1.c2 IN ())))))) UNION ALL SELECT rt1.c3, vt0.c0, rt1.c0, v0.c2 FROM rt1, v0 CROSS JOIN vt0 ON (+ (v0.c1 COLLATE BINARY)) WHERE (((((((rt1.c1)&(v0.c0)))IS NOT((rt1.c2 IN ())))) ISNULL));
SELECT rt1.c3, vt0.c0, rt1.c0, v0.c2 FROM rt1, v0 CROSS JOIN vt0 ON (+ (v0.c1 COLLATE BINARY));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c1) IS TRUE) COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c1) IS TRUE) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c1) IS TRUE) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL t0.c93, v0.c0 FROM v0, t0 GROUP BY t0.c93, v0.c0;
SELECT t0.c93, v0.c0 FROM v0, t0 WHERE ((((((NULL, v0.c0, v0.c0)) NOT BETWEEN ((t0.c93, v0.c2, v0.c1)) AND ((v0.c2, t0.c93, v0.c0)))) NOTNULL)) GROUP BY t0.c93, v0.c0 UNION SELECT ALL t0.c93, v0.c0 FROM v0, t0 WHERE ((NOT ((((((NULL, v0.c0, v0.c0)) NOT BETWEEN ((t0.c93, v0.c2, v0.c1)) AND ((v0.c2, t0.c93, v0.c0)))) NOTNULL)))) GROUP BY t0.c93, v0.c0 UNION SELECT t0.c93, v0.c0 FROM v0, t0 WHERE ((((((((NULL, v0.c0, v0.c0)) NOT BETWEEN ((t0.c93, v0.c2, v0.c1)) AND ((v0.c2, t0.c93, v0.c0)))) NOTNULL)) ISNULL)) GROUP BY t0.c93, v0.c0;
SELECT ALL t0.c93, v0.c0 FROM v0, t0 GROUP BY t0.c93, v0.c0;
SELECT ALL rt1.c0, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c3;
SELECT ALL rt1.c0, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c3 HAVING (((CASE WHEN AVG(GROUP_CONCAT(COUNT(0X45436400))) THEN COUNT(*) ELSE SUM(SUM(rt1.c3)) END))<=((MIN(GROUP_CONCAT(COUNT(COUNT(NULL))))))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c3 HAVING (NOT ((((CASE WHEN AVG(GROUP_CONCAT(COUNT(0X45436400))) THEN COUNT(*) ELSE SUM(SUM(rt1.c3)) END))<=((MIN(GROUP_CONCAT(COUNT(COUNT(NULL))))))))) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c3 HAVING (((((CASE WHEN AVG(GROUP_CONCAT(COUNT(0X45436400))) THEN COUNT(*) ELSE SUM(SUM(rt1.c3)) END))<=((MIN(GROUP_CONCAT(COUNT(COUNT(NULL)))))))) ISNULL);
SELECT ALL rt1.c1, t0.c93, v0.c0, rt1.c0, v0.c2, rt1.c2, rt1.c3, v0.c1 FROM vt0, rt1, v0, t0;
SELECT rt1.c1, t0.c93, v0.c0, rt1.c0, v0.c2, rt1.c2, rt1.c3, v0.c1 FROM vt0, rt1, v0, t0 WHERE (((rt1.c1 COLLATE NOCASE)GLOB((((rt1.c2)) BETWEEN ((vt0.c0)) AND ((rt1.c2)))))) UNION ALL SELECT ALL rt1.c1, t0.c93, v0.c0, rt1.c0, v0.c2, rt1.c2, rt1.c3, v0.c1 FROM vt0, rt1, v0, t0 WHERE ((NOT (((rt1.c1 COLLATE NOCASE)GLOB((((rt1.c2)) BETWEEN ((vt0.c0)) AND ((rt1.c2)))))))) UNION ALL SELECT rt1.c1, t0.c93, v0.c0, rt1.c0, v0.c2, rt1.c2, rt1.c3, v0.c1 FROM vt0, rt1, v0, t0 WHERE (((((rt1.c1 COLLATE NOCASE)GLOB((((rt1.c2)) BETWEEN ((vt0.c0)) AND ((rt1.c2)))))) ISNULL));
SELECT ALL rt1.c1, t0.c93, v0.c0, rt1.c0, v0.c2, rt1.c2, rt1.c3, v0.c1 FROM vt0, rt1, v0, t0;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON (~ ((((t0.c0, t0.c93, -904331675))==((vt0.c0, rt1.c2, v0.c2))))) INNER JOIN rt1 ON (((t0.c93)||(rt1.c0)) IN ()) LEFT OUTER JOIN v0 ON (- (((NULL) NOTNULL)));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON (~ ((((t0.c0, t0.c93, -904331675))=((vt0.c0, rt1.c2, v0.c2))))) INNER JOIN rt1 ON (((t0.c93)||(rt1.c0)) IN ()) LEFT OUTER JOIN v0 ON (- (((NULL) NOTNULL))) WHERE ((((((vt0.c0)AND(t0.c93)))AND(rt1.c0)) IN ((((v0.c1)) BETWEEN ((0.8591615514346748)) AND ((v0.c2)))))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON (~ ((((t0.c0, t0.c93, -904331675))==((vt0.c0, rt1.c2, v0.c2))))) INNER JOIN rt1 ON (((t0.c93)||(rt1.c0)) IN ()) LEFT OUTER JOIN v0 ON (- (((NULL) NOTNULL))) WHERE ((NOT ((((((vt0.c0)AND(t0.c93)))AND(rt1.c0)) IN ((((v0.c1)) BETWEEN ((0.8591615514346748)) AND ((v0.c2)))))))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON (~ ((((t0.c0, t0.c93, -904331675))=((vt0.c0, rt1.c2, v0.c2))))) INNER JOIN rt1 ON (((t0.c93)||(rt1.c0)) IN ()) LEFT OUTER JOIN v0 ON (- (((NULL) NOTNULL))) WHERE ((((((((vt0.c0)AND(t0.c93)))AND(rt1.c0)) IN ((((v0.c1)) BETWEEN ((0.8591615514346748)) AND ((v0.c2)))))) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN t0 ON (~ ((((t0.c0, t0.c93, -904331675))==((vt0.c0, rt1.c2, v0.c2))))) INNER JOIN rt1 ON (((t0.c93)||(rt1.c0)) IN ()) LEFT OUTER JOIN v0 ON (- (((NULL) NOTNULL)));
SELECT ALL t0.c93, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c93, t0.c0;
SELECT t0.c93, t0.c0 FROM t0 NATURAL JOIN vt0 WHERE (((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, t0.c0))) IN ())) GROUP BY t0.c93, t0.c0 UNION SELECT t0.c93, t0.c0 FROM t0 NATURAL JOIN vt0 WHERE ((NOT (((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, t0.c0))) IN ())))) GROUP BY t0.c93, t0.c0 UNION SELECT t0.c93, t0.c0 FROM t0 NATURAL JOIN vt0 WHERE (((((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, t0.c0))) IN ())) ISNULL)) GROUP BY t0.c93, t0.c0;
SELECT ALL t0.c93, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c93, t0.c0;
SELECT ALL rt1.c0, rt1.c2, t0.c0, v0.c0 FROM rt1, vt0, v0, t0 GROUP BY rt1.c0, rt1.c2, t0.c0, v0.c0;
SELECT ALL rt1.c0, rt1.c2, t0.c0, v0.c0 FROM rt1, vt0, v0, t0 GROUP BY rt1.c0, rt1.c2, t0.c0, v0.c0 HAVING TOTAL(MAX(vt0.c0)) UNION ALL SELECT ALL rt1.c0, rt1.c2, t0.c0, v0.c0 FROM rt1, vt0, v0, t0 GROUP BY rt1.c0, rt1.c2, t0.c0, v0.c0 HAVING (NOT (TOTAL(MAX(vt0.c0)))) UNION ALL SELECT rt1.c0, rt1.c2, t0.c0, v0.c0 FROM rt1, vt0, v0, t0 GROUP BY rt1.c0, rt1.c2, t0.c0, v0.c0 HAVING ((TOTAL(MAX(vt0.c0))) ISNULL);
SELECT ALL MIN((('1520677683')<(((rt1.c2) BETWEEN (v0.c1) AND (rt1.c2))))) FROM v0, rt1;
SELECT ALL rt1.c0, rt1.c3, rt1.c2 FROM rt1;
SELECT ALL rt1.c0, rt1.c3, rt1.c2 FROM rt1 WHERE (UPPER(DISTINCT ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)))) UNION ALL SELECT ALL rt1.c0, rt1.c3, rt1.c2 FROM rt1 WHERE ((NOT (UPPER(DISTINCT ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)))))) UNION ALL SELECT ALL rt1.c0, rt1.c3, rt1.c2 FROM rt1 WHERE (((UPPER(DISTINCT ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)))) ISNULL));
SELECT ALL rt1.c0, rt1.c3, rt1.c2 FROM rt1;
SELECT DISTINCT t0.c0, rt1.c1, vt0.c0, rt1.c2, t0.c93, rt1.c3 FROM rt1, vt0 RIGHT OUTER JOIN t0 ON ((rt1.c3 COLLATE NOCASE)>(CAST(rt1.c1 AS REAL)));
SELECT DISTINCT t0.c0, rt1.c1, vt0.c0, rt1.c2, t0.c93, rt1.c3 FROM rt1, vt0 RIGHT OUTER JOIN t0 ON ((rt1.c3 COLLATE NOCASE)>(CAST(rt1.c1 AS REAL))) WHERE (((x'')GLOB((rt1.c2 IN ())))) UNION SELECT DISTINCT t0.c0, rt1.c1, vt0.c0, rt1.c2, t0.c93, rt1.c3 FROM rt1, vt0 RIGHT OUTER JOIN t0 ON ((rt1.c3 COLLATE NOCASE)>(CAST(rt1.c1 AS REAL))) WHERE ((NOT (((x'')GLOB((rt1.c2 IN ())))))) UNION SELECT DISTINCT t0.c0, rt1.c1, vt0.c0, rt1.c2, t0.c93, rt1.c3 FROM rt1, vt0 RIGHT OUTER JOIN t0 ON ((rt1.c3 COLLATE NOCASE)>(CAST(rt1.c1 AS REAL))) WHERE (((((x'')GLOB((rt1.c2 IN ())))) ISNULL));
SELECT DISTINCT t0.c0, rt1.c1, vt0.c0, rt1.c2, t0.c93, rt1.c3 FROM rt1, vt0 RIGHT OUTER JOIN t0 ON ((rt1.c3 COLLATE NOCASE)>(CAST(rt1.c1 AS REAL)));
SELECT ALL t0.c93, t0.c0, v0.c0 FROM v0, rt1, t0 GROUP BY t0.c93, t0.c0, v0.c0;
SELECT ALL t0.c93, t0.c0, v0.c0 FROM v0, rt1, t0 WHERE ((~ ((- (rt1.c1))))) GROUP BY t0.c93, t0.c0, v0.c0 UNION SELECT ALL t0.c93, t0.c0, v0.c0 FROM v0, rt1, t0 WHERE ((NOT ((~ ((- (rt1.c1))))))) GROUP BY t0.c93, t0.c0, v0.c0 UNION SELECT t0.c93, t0.c0, v0.c0 FROM v0, rt1, t0 WHERE ((((~ ((- (rt1.c1))))) ISNULL)) GROUP BY t0.c93, t0.c0, v0.c0;
SELECT ALL t0.c93, t0.c0, v0.c0 FROM v0, rt1, t0 GROUP BY t0.c93, t0.c0, v0.c0;
SELECT rt1.c2, rt1.c1, rt1.c3 FROM rt1 CROSS JOIN v0 ON '456780866' CROSS JOIN vt0 ON (((v0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN ('1542001550') AND (rt1.c1)))) AND ((CASE rt1.c1  WHEN rt1.c0 THEN 0.7389349444948223 WHEN v0.c2 THEN 1008634912 WHEN v0.c0 THEN 1642310868 END))) GROUP BY rt1.c2, rt1.c1, rt1.c3;
SELECT rt1.c2, rt1.c1, rt1.c3 FROM rt1 CROSS JOIN v0 ON '456780866' CROSS JOIN vt0 ON (((v0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN ('1542001550') AND (rt1.c1)))) AND ((CASE rt1.c1  WHEN rt1.c0 THEN 0.7389349444948223 WHEN v0.c2 THEN 1008634912 WHEN v0.c0 THEN 1642310868 END))) GROUP BY rt1.c2, rt1.c1, rt1.c3 HAVING v0.c0 UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c3 FROM rt1 CROSS JOIN v0 ON '456780866' CROSS JOIN vt0 ON (((v0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN ('1542001550') AND (rt1.c1)))) AND ((CASE rt1.c1  WHEN rt1.c0 THEN 0.7389349444948223 WHEN v0.c2 THEN 1008634912 WHEN v0.c0 THEN 1642310868 END))) GROUP BY rt1.c2, rt1.c1, rt1.c3 HAVING (NOT (v0.c0)) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c3 FROM rt1 CROSS JOIN v0 ON '456780866' CROSS JOIN vt0 ON (((v0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN ('1542001550') AND (rt1.c1)))) AND ((CASE rt1.c1  WHEN rt1.c0 THEN 0.7389349444948223 WHEN v0.c2 THEN 1008634912 WHEN v0.c0 THEN 1642310868 END))) GROUP BY rt1.c2, rt1.c1, rt1.c3 HAVING ((v0.c0) ISNULL);
SELECT rt1.c2, rt1.c1, rt1.c3 FROM rt1 CROSS JOIN v0 ON '456780866' CROSS JOIN vt0 ON (((v0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN ('1542001550') AND (rt1.c1)))) AND ((CASE rt1.c1  WHEN rt1.c0 THEN 0.7389349444948223 WHEN v0.c2 THEN 1008634912 WHEN v0.c0 THEN 1642310868 END))) GROUP BY rt1.c2, rt1.c1, rt1.c3;
SELECT rt1.c2, rt1.c1, rt1.c3 FROM rt1 CROSS JOIN v0 ON '456780866' CROSS JOIN vt0 ON (((v0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN ('1542001550') AND (rt1.c1)))) AND ((CASE rt1.c1  WHEN rt1.c0 THEN 0.7389349444948223 WHEN v0.c2 THEN 1008634912 WHEN v0.c0 THEN 1642310868 END))) GROUP BY rt1.c2, rt1.c1, rt1.c3 HAVING v0.c0 UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c3 FROM rt1 CROSS JOIN v0 ON '456780866' CROSS JOIN vt0 ON (((v0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN ('1542001550') AND (rt1.c1)))) AND ((CASE rt1.c1  WHEN rt1.c0 THEN 0.7389349444948223 WHEN v0.c2 THEN 1008634912 WHEN v0.c0 THEN 1642310868 END))) GROUP BY rt1.c2, rt1.c1, rt1.c3 HAVING (NOT (v0.c0)) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c3 FROM rt1 CROSS JOIN v0 ON '456780866' CROSS JOIN vt0 ON (((v0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN ('1542001550') AND (rt1.c1)))) AND ((CASE rt1.c1  WHEN rt1.c0 THEN 0.7389349444948223 WHEN v0.c2 THEN 1008634912 WHEN v0.c0 THEN 1642310868 END))) GROUP BY rt1.c2, rt1.c1, rt1.c3 HAVING ((v0.c0) ISNULL);
SELECT rt1.c2, rt1.c1, rt1.c3 FROM rt1 CROSS JOIN v0 ON '456780866' CROSS JOIN vt0 ON (((v0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN ('1542001550') AND (rt1.c1)))) AND ((CASE rt1.c1  WHEN rt1.c0 THEN 0.7389349444948223 WHEN v0.c2 THEN 1008634912 WHEN v0.c0 THEN 1642310868 END))) GROUP BY rt1.c2, rt1.c1, rt1.c3;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE (((((((NULL, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '1872895967')) AND ((t0.c93, NULL, NULL)))))==((CAST(t0.c93 AS REAL))))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT (((((((NULL, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '1872895967')) AND ((t0.c93, NULL, NULL)))))=((CAST(t0.c93 AS REAL))))))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE (((((((((NULL, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '1872895967')) AND ((t0.c93, NULL, NULL)))))==((CAST(t0.c93 AS REAL))))) ISNULL));
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c93, rt1.c2, t0.c0, rt1.c3, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c93, rt1.c2, t0.c0, rt1.c3, rt1.c0, rt1.c1;
SELECT ALL t0.c93, rt1.c2, t0.c0, rt1.c3, rt1.c0, rt1.c1 FROM t0, rt1 WHERE (SQLITE_VERSION()) GROUP BY t0.c93, rt1.c2, t0.c0, rt1.c3, rt1.c0, rt1.c1 UNION SELECT t0.c93, rt1.c2, t0.c0, rt1.c3, rt1.c0, rt1.c1 FROM t0, rt1 WHERE ((NOT (SQLITE_VERSION()))) GROUP BY t0.c93, rt1.c2, t0.c0, rt1.c3, rt1.c0, rt1.c1 UNION SELECT ALL t0.c93, rt1.c2, t0.c0, rt1.c3, rt1.c0, rt1.c1 FROM t0, rt1 WHERE (((SQLITE_VERSION()) ISNULL)) GROUP BY t0.c93, rt1.c2, t0.c0, rt1.c3, rt1.c0, rt1.c1;
SELECT t0.c93, rt1.c2, t0.c0, rt1.c3, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c93, rt1.c2, t0.c0, rt1.c3, rt1.c0, rt1.c1;
SELECT ALL rt1.c3, t0.c0, rt1.c0, vt0.c0, rt1.c2, t0.c93, rt1.c1 FROM rt1, vt0, t0 GROUP BY rt1.c3, t0.c0, rt1.c0, vt0.c0, rt1.c2, t0.c93, rt1.c1;
SELECT rt1.c3, t0.c0, rt1.c0, vt0.c0, rt1.c2, t0.c93, rt1.c1 FROM rt1, vt0, t0 GROUP BY rt1.c3, t0.c0, rt1.c0, vt0.c0, rt1.c2, t0.c93, rt1.c1 HAVING COUNT(GROUP_CONCAT(GROUP_CONCAT(TOTAL(rt1.c2)))) UNION ALL SELECT ALL rt1.c3, t0.c0, rt1.c0, vt0.c0, rt1.c2, t0.c93, rt1.c1 FROM rt1, vt0, t0 GROUP BY rt1.c3, t0.c0, rt1.c0, vt0.c0, rt1.c2, t0.c93, rt1.c1 HAVING (NOT (COUNT(GROUP_CONCAT(GROUP_CONCAT(TOTAL(rt1.c2)))))) UNION ALL SELECT ALL rt1.c3, t0.c0, rt1.c0, vt0.c0, rt1.c2, t0.c93, rt1.c1 FROM rt1, vt0, t0 GROUP BY rt1.c3, t0.c0, rt1.c0, vt0.c0, rt1.c2, t0.c93, rt1.c1 HAVING ((COUNT(GROUP_CONCAT(GROUP_CONCAT(TOTAL(rt1.c2))))) ISNULL);
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (((+ (rt1.c3)) IN ())) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((+ (rt1.c3)) IN ())))) UNION ALL SELECT * FROM rt1 WHERE (((((+ (rt1.c3)) IN ())) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT v0.c1, rt1.c3, vt0.c0, v0.c2, rt1.c1, t0.c0 FROM rt1, vt0, t0 CROSS JOIN v0 ON ((((((rt1.c2)LIKE(v0.c1)))AND(CAST(rt1.c2 AS TEXT))))OR(CAST(rt1.c2 AS TEXT)));
SELECT DISTINCT v0.c1, rt1.c3, vt0.c0, v0.c2, rt1.c1, t0.c0 FROM rt1, vt0, t0 CROSS JOIN v0 ON ((((((rt1.c2)LIKE(v0.c1)))AND(CAST(rt1.c2 AS TEXT))))OR(CAST(rt1.c2 AS TEXT))) WHERE (CASE WHEN ((((0.6532753088195178)OR(v0.c0)))OR(v0.c2)) THEN ((v0.c1) IS TRUE) ELSE ((t0.c0)>=(v0.c0)) END) UNION SELECT DISTINCT v0.c1, rt1.c3, vt0.c0, v0.c2, rt1.c1, t0.c0 FROM rt1, vt0, t0 CROSS JOIN v0 ON ((((((rt1.c2)LIKE(v0.c1)))AND(CAST(rt1.c2 AS TEXT))))OR(CAST(rt1.c2 AS TEXT))) WHERE ((NOT (CASE WHEN ((((0.6532753088195178)OR(v0.c0)))OR(v0.c2)) THEN ((v0.c1) IS TRUE) ELSE ((t0.c0)>=(v0.c0)) END))) UNION SELECT DISTINCT v0.c1, rt1.c3, vt0.c0, v0.c2, rt1.c1, t0.c0 FROM rt1, vt0 NOT INDEXED, t0 CROSS JOIN v0 ON ((((((rt1.c2)LIKE(v0.c1)))AND(CAST(rt1.c2 AS TEXT))))OR(CAST(rt1.c2 AS TEXT))) WHERE (((CASE WHEN ((((0.6532753088195178)OR(v0.c0)))OR(v0.c2)) THEN ((v0.c1) IS TRUE) ELSE ((t0.c0)>=(v0.c0)) END) ISNULL));
SELECT DISTINCT v0.c1, rt1.c3, vt0.c0, v0.c2, rt1.c1, t0.c0 FROM rt1, vt0, t0 CROSS JOIN v0 ON ((((((rt1.c2)LIKE(v0.c1)))AND(CAST(rt1.c2 AS TEXT))))OR(CAST(rt1.c2 AS TEXT)));
SELECT ALL v0.c2, t0.c93, vt0.c0, t0.c0, rt1.c3 FROM v0, t0, rt1 FULL OUTER JOIN vt0 ON ((v0.c1 IN ()) IN ()) GROUP BY v0.c2, t0.c93, vt0.c0, t0.c0, rt1.c3;
SELECT ALL v0.c2, t0.c93, vt0.c0, t0.c0, rt1.c3 FROM v0, t0, rt1 FULL OUTER JOIN vt0 ON ((v0.c1 IN ()) IN ()) WHERE ((((((rt1.c1) NOT BETWEEN (v0.c0) AND (rt1.c3))))<>(('')))) GROUP BY v0.c2, t0.c93, vt0.c0, t0.c0, rt1.c3 UNION SELECT v0.c2, t0.c93, vt0.c0, t0.c0, rt1.c3 FROM v0, t0, rt1 FULL OUTER JOIN vt0 ON ((v0.c1 IN ()) IN ()) WHERE ((NOT ((((((rt1.c1) NOT BETWEEN (v0.c0) AND (rt1.c3))))!=(('')))))) GROUP BY v0.c2, t0.c93, vt0.c0, t0.c0, rt1.c3 UNION SELECT v0.c2, t0.c93, vt0.c0, t0.c0, rt1.c3 FROM v0, t0, rt1 FULL OUTER JOIN vt0 ON ((v0.c1 IN ()) IN ()) WHERE ((((((((rt1.c1) NOT BETWEEN (v0.c0) AND (rt1.c3))))!=(('')))) ISNULL)) GROUP BY v0.c2, t0.c93, vt0.c0, t0.c0, rt1.c3;
SELECT ALL v0.c2, t0.c93, vt0.c0, t0.c0, rt1.c3 FROM v0, t0, rt1 FULL OUTER JOIN vt0 ON ((v0.c1 IN ()) IN ()) GROUP BY v0.c2, t0.c93, vt0.c0, t0.c0, rt1.c3;
SELECT t0.c93, vt0.c0, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c93, vt0.c0, t0.c0;
SELECT t0.c93, vt0.c0, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c93, vt0.c0, t0.c0 HAVING COALESCE(TOTAL(GROUP_CONCAT(t0.c93)), ((((t0.c0)OR(vt0.c0)))AND(AVG(vt0.c0))), GROUP_CONCAT(t0.c0), CAST(SUM(COUNT(COUNT(*))) AS NUMERIC)) UNION ALL SELECT t0.c93, vt0.c0, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c93, vt0.c0, t0.c0 HAVING (NOT (COALESCE(TOTAL(GROUP_CONCAT(t0.c93)), ((((t0.c0)OR(vt0.c0)))AND(AVG(vt0.c0))), GROUP_CONCAT(t0.c0), CAST(SUM(COUNT(COUNT(*))) AS NUMERIC)))) UNION ALL SELECT ALL t0.c93, vt0.c0, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c93, vt0.c0, t0.c0 HAVING ((COALESCE(TOTAL(GROUP_CONCAT(t0.c93)), ((((t0.c0)OR(vt0.c0)))AND(AVG(vt0.c0))), GROUP_CONCAT(t0.c0), CAST(SUM(COUNT(COUNT(*))) AS NUMERIC))) ISNULL);
SELECT * FROM rt1, vt0;
SELECT ALL * FROM rt1, vt0 WHERE (((('''u'))>=((CAST(rt1.c0 AS TEXT))))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((NOT (((('''u'))>=((CAST(rt1.c0 AS TEXT))))))) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE (((((('''u'))>=((CAST(rt1.c0 AS TEXT))))) ISNULL));
SELECT * FROM rt1, vt0;
SELECT DISTINCT * FROM v0, t0, rt1;
SELECT DISTINCT * FROM v0, t0, rt1 WHERE (((((t0.c0)AND(rt1.c3)))OR(t0.c0)) COLLATE NOCASE COLLATE BINARY) UNION SELECT DISTINCT * FROM v0, t0, rt1 WHERE ((NOT (((((t0.c0)AND(rt1.c3)))OR(t0.c0)) COLLATE NOCASE COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0, t0, rt1 WHERE (((((((t0.c0)AND(rt1.c3)))OR(t0.c0)) COLLATE NOCASE COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0, t0, rt1;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 WHERE (((~ (v0.c0)) IN (((v0.c0)<(v0.c0))))) GROUP BY v0.c0, v0.c1, v0.c2 UNION SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 WHERE ((NOT (((~ (v0.c0)) IN (((v0.c0)<(v0.c0))))))) GROUP BY v0.c0, v0.c1, v0.c2 UNION SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 WHERE (((((~ (v0.c0)) IN (((v0.c0)<(v0.c0))))) ISNULL)) GROUP BY v0.c0, v0.c1, v0.c2;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT ALL t0.c93, rt1.c3, v0.c2, rt1.c1, v0.c1, rt1.c2, t0.c0, v0.c0 FROM rt1 CROSS JOIN v0 ON CAST(((v0.c1)+(v0.c2)) AS NUMERIC) INNER JOIN t0 ON ((((((rt1.c2)-(v0.c2)))AND(((rt1.c3)GLOB(rt1.c2)))))AND((rt1.c0 IN ()))) GROUP BY t0.c93, rt1.c3, v0.c2, rt1.c1, v0.c1, rt1.c2, t0.c0, v0.c0;
SELECT t0.c93, rt1.c3, v0.c2, rt1.c1, v0.c1, rt1.c2, t0.c0, v0.c0 FROM rt1 CROSS JOIN v0 ON CAST(((v0.c1)+(v0.c2)) AS NUMERIC) INNER JOIN t0 ON ((((((rt1.c2)-(v0.c2)))AND(((rt1.c3)GLOB(rt1.c2)))))AND((rt1.c0 IN ()))) GROUP BY t0.c93, rt1.c3, v0.c2, rt1.c1, v0.c1, rt1.c2, t0.c0, v0.c0 HAVING MAX(CAST(rt1.c0 AS INTEGER)) UNION ALL SELECT t0.c93, rt1.c3, v0.c2, rt1.c1, v0.c1, rt1.c2, t0.c0, v0.c0 FROM rt1 CROSS JOIN v0 ON CAST(((v0.c1)+(v0.c2)) AS NUMERIC) INNER JOIN t0 ON ((((((rt1.c2)-(v0.c2)))AND(((rt1.c3)GLOB(rt1.c2)))))AND((rt1.c0 IN ()))) GROUP BY t0.c93, rt1.c3, v0.c2, rt1.c1, v0.c1, rt1.c2, t0.c0, v0.c0 HAVING (NOT (MAX(CAST(rt1.c0 AS INTEGER)))) UNION ALL SELECT t0.c93, rt1.c3, v0.c2, rt1.c1, v0.c1, rt1.c2, t0.c0, v0.c0 FROM rt1 CROSS JOIN v0 ON CAST(((v0.c1)+(v0.c2)) AS NUMERIC) INNER JOIN t0 ON ((((((rt1.c2)-(v0.c2)))AND(((rt1.c3)GLOB(rt1.c2)))))AND((rt1.c0 IN ()))) GROUP BY t0.c93, rt1.c3, v0.c2, rt1.c1, v0.c1, rt1.c2, t0.c0, v0.c0 HAVING ((MAX(CAST(rt1.c0 AS INTEGER))) ISNULL);
SELECT ALL t0.c93, rt1.c3, v0.c2, rt1.c1, v0.c1, rt1.c2, t0.c0, v0.c0 FROM rt1 CROSS JOIN v0 ON CAST(((v0.c1)+(v0.c2)) AS NUMERIC) INNER JOIN t0 ON ((((((rt1.c2)-(v0.c2)))AND(((rt1.c3)GLOB(rt1.c2)))))AND((rt1.c0 IN ()))) GROUP BY t0.c93, rt1.c3, v0.c2, rt1.c1, v0.c1, rt1.c2, t0.c0, v0.c0;
SELECT t0.c93, rt1.c3, v0.c2, rt1.c1, v0.c1, rt1.c2, t0.c0, v0.c0 FROM rt1 CROSS JOIN v0 ON CAST(((v0.c1)+(v0.c2)) AS NUMERIC) INNER JOIN t0 ON ((((((rt1.c2)-(v0.c2)))AND(((rt1.c3)GLOB(rt1.c2)))))AND((rt1.c0 IN ()))) GROUP BY t0.c93, rt1.c3, v0.c2, rt1.c1, v0.c1, rt1.c2, t0.c0, v0.c0 HAVING MAX(CAST(rt1.c0 AS INTEGER)) UNION ALL SELECT t0.c93, rt1.c3, v0.c2, rt1.c1, v0.c1, rt1.c2, t0.c0, v0.c0 FROM rt1 CROSS JOIN v0 ON CAST(((v0.c1)+(v0.c2)) AS NUMERIC) INNER JOIN t0 ON ((((((rt1.c2)-(v0.c2)))AND(((rt1.c3)GLOB(rt1.c2)))))AND((rt1.c0 IN ()))) GROUP BY t0.c93, rt1.c3, v0.c2, rt1.c1, v0.c1, rt1.c2, t0.c0, v0.c0 HAVING (NOT (MAX(CAST(rt1.c0 AS INTEGER)))) UNION ALL SELECT t0.c93, rt1.c3, v0.c2, rt1.c1, v0.c1, rt1.c2, t0.c0, v0.c0 FROM rt1 CROSS JOIN v0 ON CAST(((v0.c1)+(v0.c2)) AS NUMERIC) INNER JOIN t0 ON ((((((rt1.c2)-(v0.c2)))AND(((rt1.c3)GLOB(rt1.c2)))))AND((rt1.c0 IN ()))) GROUP BY t0.c93, rt1.c3, v0.c2, rt1.c1, v0.c1, rt1.c2, t0.c0, v0.c0 HAVING ((MAX(CAST(rt1.c0 AS INTEGER))) ISNULL);
SELECT ALL t0.c93, rt1.c3, v0.c2, rt1.c1, v0.c1, rt1.c2, t0.c0, v0.c0 FROM rt1 CROSS JOIN v0 ON CAST(((v0.c1)+(v0.c2)) AS NUMERIC) INNER JOIN t0 ON ((((((rt1.c2)-(v0.c2)))AND(((rt1.c3)GLOB(rt1.c2)))))AND((rt1.c0 IN ()))) GROUP BY t0.c93, rt1.c3, v0.c2, rt1.c1, v0.c1, rt1.c2, t0.c0, v0.c0;
SELECT MAX(rt1.c2) FROM rt1, v0, t0, vt0;
SELECT rt1.c0, rt1.c1, v0.c1, t0.c0, rt1.c3, rt1.c2, v0.c2, v0.c0 FROM rt1 LEFT OUTER JOIN t0 ON ((((((((CASE rt1.c0  WHEN t0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c0 WHEN rt1.c1 THEN rt1.c3 END)OR((- (v0.c1)))))OR(UNLIKELY(t0.c0))))OR(((1.729796983E9) NOTNULL))))AND((((rt1.c1))!=((t0.c93))))) INNER JOIN v0 ON ((((v0.c1)OR(t0.c93)))AND(rt1.c0)) COLLATE BINARY;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (TRIM(DISTINCT ((rt1.c3)<<(rt1.c2)))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (TRIM(DISTINCT ((rt1.c3)<<(rt1.c2)))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((TRIM(DISTINCT ((rt1.c3)<<(rt1.c2)))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE ((((rt1.c0, 0.017136075825668673, rt1.c1)) BETWEEN (((((rt1.c0, rt1.c3, rt1.c2))<((rt1.c0, rt1.c1, rt1.c2))), ((((rt1.c2)AND(rt1.c2)))OR(rt1.c1)), rt1.c1)) AND ((((NULL) IS FALSE), (rt1.c0 IN ()), rt1.c3)))) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c0 UNION SELECT rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT ((((rt1.c0, 0.017136075825668673, rt1.c1)) BETWEEN (((((rt1.c0, rt1.c3, rt1.c2))<((rt1.c0, rt1.c1, rt1.c2))), ((((rt1.c2)AND(rt1.c2)))OR(rt1.c1)), rt1.c1)) AND ((((NULL) IS FALSE), (rt1.c0 IN ()), rt1.c3)))))) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c0 UNION SELECT rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE ((((((rt1.c0, 0.017136075825668673, rt1.c1)) BETWEEN (((((rt1.c0, rt1.c3, rt1.c2))<((rt1.c0, rt1.c1, rt1.c2))), ((((rt1.c2)AND(rt1.c2)))OR(rt1.c1)), rt1.c1)) AND ((((NULL) IS FALSE), (rt1.c0 IN ()), rt1.c3)))) ISNULL)) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c0;
SELECT t0.c0, rt1.c2, t0.c93, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c2, t0.c93, rt1.c1;
SELECT ALL t0.c0, rt1.c2, t0.c93, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c2, t0.c93, rt1.c1 HAVING MIN(((GROUP_CONCAT(t0.c93)) NOT NULL)) UNION ALL SELECT ALL t0.c0, rt1.c2, t0.c93, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c2, t0.c93, rt1.c1 HAVING (NOT (MIN(((GROUP_CONCAT(t0.c93)) NOT NULL)))) UNION ALL SELECT ALL t0.c0, rt1.c2, t0.c93, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c2, t0.c93, rt1.c1 HAVING ((MIN(((GROUP_CONCAT(t0.c93)) NOT NULL))) ISNULL);
SELECT * FROM t0 INNER JOIN rt1 ON ((LOWER(rt1.c0)) IS TRUE) INNER JOIN v0 ON ((JULIANDAY(x'', rt1.c2, rt1.c0, t0.c93, rt1.c2)) NOT BETWEEN (((v0.c0)LIKE(rt1.c2))) AND (rt1.c3 COLLATE NOCASE));
SELECT * FROM t0 INNER JOIN rt1 ON ((LOWER(rt1.c0)) IS TRUE) INNER JOIN v0 ON ((JULIANDAY(x'', rt1.c2, rt1.c0, t0.c93, rt1.c2)) NOT BETWEEN (((v0.c0)LIKE(rt1.c2))) AND (rt1.c3 COLLATE NOCASE)) WHERE ((((-6.1301503E7))<((CASE WHEN rt1.c1 THEN v0.c1 END)))) UNION ALL SELECT * FROM t0 INNER JOIN rt1 ON ((LOWER(rt1.c0)) IS TRUE) INNER JOIN v0 ON ((JULIANDAY(x'', rt1.c2, rt1.c0, t0.c93, rt1.c2)) NOT BETWEEN (((v0.c0)LIKE(rt1.c2))) AND (rt1.c3 COLLATE NOCASE)) WHERE ((NOT ((((-6.1301503E7))<((CASE WHEN rt1.c1 THEN v0.c1 END)))))) UNION ALL SELECT * FROM t0 INNER JOIN rt1 ON ((LOWER(rt1.c0)) IS TRUE) INNER JOIN v0 ON ((JULIANDAY(x'', rt1.c2, rt1.c0, t0.c93, rt1.c2)) NOT BETWEEN (((v0.c0)LIKE(rt1.c2))) AND (rt1.c3 COLLATE NOCASE)) WHERE ((((((-6.1301503E7))<((CASE WHEN rt1.c1 THEN v0.c1 END)))) ISNULL));
SELECT * FROM t0 INNER JOIN rt1 ON ((LOWER(rt1.c0)) IS TRUE) INNER JOIN v0 ON ((JULIANDAY(x'', rt1.c2, rt1.c0, t0.c93, rt1.c2)) NOT BETWEEN (((v0.c0)LIKE(rt1.c2))) AND (rt1.c3 COLLATE NOCASE));
SELECT DISTINCT rt1.c2, rt1.c1 FROM vt0, rt1;
SELECT DISTINCT rt1.c2, rt1.c1 FROM vt0, rt1 WHERE ((((rt1.c2)) BETWEEN (((((0.8945689090458877))=((vt0.c0))))) AND (((vt0.c0 IN (rt1.c3)))))) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM vt0, rt1 WHERE ((NOT ((((rt1.c2)) BETWEEN (((((0.8945689090458877))==((vt0.c0))))) AND (((vt0.c0 IN (rt1.c3)))))))) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM vt0, rt1 WHERE ((((((rt1.c2)) BETWEEN (((((0.8945689090458877))==((vt0.c0))))) AND (((vt0.c0 IN (rt1.c3)))))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1 FROM vt0, rt1;
SELECT t0.c93, rt1.c1 FROM rt1, t0, v0 GROUP BY t0.c93, rt1.c1;
SELECT ALL t0.c93, rt1.c1 FROM rt1, t0, v0 WHERE ((('') NOT BETWEEN (((t0.c93) NOT BETWEEN (v0.c0) AND (t0.c93))) AND (((rt1.c3) ISNULL)))) GROUP BY t0.c93, rt1.c1 UNION SELECT t0.c93, rt1.c1 FROM rt1, t0, v0 WHERE ((NOT ((('') NOT BETWEEN (((t0.c93) NOT BETWEEN (v0.c0) AND (t0.c93))) AND (((rt1.c3) ISNULL)))))) GROUP BY t0.c93, rt1.c1 UNION SELECT t0.c93, rt1.c1 FROM rt1, t0, v0 WHERE ((((('') NOT BETWEEN (((t0.c93) NOT BETWEEN (v0.c0) AND (t0.c93))) AND (((rt1.c3) ISNULL)))) ISNULL)) GROUP BY t0.c93, rt1.c1;
SELECT t0.c93, rt1.c1 FROM rt1, t0, v0 GROUP BY t0.c93, rt1.c1;
SELECT ALL rt1.c1, rt1.c2, t0.c0, rt1.c0, rt1.c3, t0.c93 FROM vt0, rt1, t0 GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0, rt1.c3, t0.c93;
SELECT rt1.c1, rt1.c2, t0.c0, rt1.c0, rt1.c3, t0.c93 FROM vt0, rt1, t0 GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0, rt1.c3, t0.c93 HAVING 'h' UNION ALL SELECT rt1.c1, rt1.c2, t0.c0, rt1.c0, rt1.c3, t0.c93 FROM vt0, rt1, t0 GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0, rt1.c3, t0.c93 HAVING (NOT ('h')) UNION ALL SELECT ALL rt1.c1, rt1.c2, t0.c0, rt1.c0, rt1.c3, t0.c93 FROM vt0, rt1, t0 GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0, rt1.c3, t0.c93 HAVING (('h') ISNULL);
SELECT ALL rt1.c1, rt1.c2, t0.c0, rt1.c0, rt1.c3, t0.c93 FROM vt0, rt1, t0 GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0, rt1.c3, t0.c93;
SELECT rt1.c1, rt1.c2, t0.c0, rt1.c0, rt1.c3, t0.c93 FROM vt0, rt1, t0 GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0, rt1.c3, t0.c93 HAVING 'h' UNION ALL SELECT rt1.c1, rt1.c2, t0.c0, rt1.c0, rt1.c3, t0.c93 FROM vt0, rt1, t0 GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0, rt1.c3, t0.c93 HAVING (NOT ('h')) UNION ALL SELECT ALL rt1.c1, rt1.c2, t0.c0, rt1.c0, rt1.c3, t0.c93 FROM vt0, rt1, t0 GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0, rt1.c3, t0.c93 HAVING (('h') ISNULL);
SELECT ALL rt1.c1, rt1.c2, t0.c0, rt1.c0, rt1.c3, t0.c93 FROM vt0, rt1, t0 GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0, rt1.c3, t0.c93;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((0.39536331429999494)) AND ((vt0.c0)))) BETWEEN ((((vt0.c0))>((vt0.c0)))) AND (CAST(vt0.c0 AS BLOB)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((((vt0.c0)) BETWEEN ((0.39536331429999494)) AND ((vt0.c0)))) BETWEEN ((((vt0.c0))>((vt0.c0)))) AND (CAST(vt0.c0 AS BLOB)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((0.39536331429999494)) AND ((vt0.c0)))) BETWEEN ((((vt0.c0))>((vt0.c0)))) AND (CAST(vt0.c0 AS BLOB)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt1, v0 FULL OUTER JOIN vt0 ON vt0.c0;
SELECT DISTINCT * FROM rt1, v0 FULL OUTER JOIN vt0 ON vt0.c0 WHERE (CAST(CASE WHEN v0.c1 THEN rt1.c2 END AS REAL)) UNION SELECT DISTINCT * FROM rt1, v0 FULL OUTER JOIN vt0 ON vt0.c0 WHERE ((NOT (CAST(CASE WHEN v0.c1 THEN rt1.c2 END AS REAL)))) UNION SELECT DISTINCT * FROM rt1, v0 FULL OUTER JOIN vt0 ON vt0.c0 WHERE (((CAST(CASE WHEN v0.c1 THEN rt1.c2 END AS REAL)) ISNULL));
SELECT DISTINCT * FROM rt1, v0 FULL OUTER JOIN vt0 ON vt0.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 WHERE ((((((((((((rt1.c3)AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c2)))AND(rt1.c3)), HEX(DISTINCT rt1.c0), CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 END))!=((CASE WHEN rt1.c1 THEN rt1.c2 END, TIME(rt1.c1, rt1.c0, rt1.c0), ((((0xffffffffb01ff83e)OR(rt1.c2)))AND(rt1.c3)))))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE ((NOT ((((((((((((rt1.c3)AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c2)))AND(rt1.c3)), HEX(DISTINCT rt1.c0), CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 END))<>((CASE WHEN rt1.c1 THEN rt1.c2 END, TIME(rt1.c1, rt1.c0, rt1.c0), ((((0Xffffffffb01ff83e)OR(rt1.c2)))AND(rt1.c3)))))))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE ((((((((((((((rt1.c3)AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c2)))AND(rt1.c3)), HEX(DISTINCT rt1.c0), CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 END))<>((CASE WHEN rt1.c1 THEN rt1.c2 END, TIME(rt1.c1, rt1.c0, rt1.c0), ((((0Xffffffffb01ff83e)OR(rt1.c2)))AND(rt1.c3)))))) ISNULL)) GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT t0.c93, t0.c0 FROM t0 GROUP BY t0.c93, t0.c0;
SELECT ALL t0.c93, t0.c0 FROM t0 GROUP BY t0.c93, t0.c0 HAVING (~ (((t0.c0)+(t0.c0)))) UNION ALL SELECT t0.c93, t0.c0 FROM t0 GROUP BY t0.c93, t0.c0 HAVING (NOT ((~ (((t0.c0)+(t0.c0)))))) UNION ALL SELECT ALL t0.c93, t0.c0 FROM t0 GROUP BY t0.c93, t0.c0 HAVING (((~ (((t0.c0)+(t0.c0))))) ISNULL);
SELECT t0.c93, t0.c0 FROM t0 GROUP BY t0.c93, t0.c0;
SELECT ALL t0.c93, t0.c0 FROM t0 GROUP BY t0.c93, t0.c0 HAVING (~ (((t0.c0)+(t0.c0)))) UNION ALL SELECT t0.c93, t0.c0 FROM t0 GROUP BY t0.c93, t0.c0 HAVING (NOT ((~ (((t0.c0)+(t0.c0)))))) UNION ALL SELECT ALL t0.c93, t0.c0 FROM t0 GROUP BY t0.c93, t0.c0 HAVING (((~ (((t0.c0)+(t0.c0))))) ISNULL);
SELECT t0.c93, t0.c0 FROM t0 GROUP BY t0.c93, t0.c0;
SELECT rt1.c3, rt1.c0, t0.c0, rt1.c1 FROM t0 NATURAL JOIN rt1;
SELECT ALL rt1.c3, rt1.c0, t0.c0, rt1.c1 FROM t0 NATURAL JOIN rt1 WHERE ((((((((((rt1.c1)AND(t0.c0)))AND(rt1.c0)))OR(rt1.c0)))AND(t0.c0)) IN (((rt1.c0) ISNULL), (((rt1.c3))<=((rt1.c2)))))) UNION ALL SELECT ALL rt1.c3, rt1.c0, t0.c0, rt1.c1 FROM t0 NATURAL JOIN rt1 WHERE ((NOT ((((((((((rt1.c1)AND(t0.c0)))AND(rt1.c0)))OR(rt1.c0)))AND(t0.c0)) IN (((rt1.c0) ISNULL), (((rt1.c3))<=((rt1.c2)))))))) UNION ALL SELECT rt1.c3, rt1.c0, t0.c0, rt1.c1 FROM t0 NATURAL JOIN rt1 WHERE ((((((((((((rt1.c1)AND(t0.c0)))AND(rt1.c0)))OR(rt1.c0)))AND(t0.c0)) IN (((rt1.c0) ISNULL), (((rt1.c3))<=((rt1.c2)))))) ISNULL));
SELECT rt1.c3, rt1.c0, t0.c0, rt1.c1 FROM t0 NATURAL JOIN rt1;
SELECT DISTINCT * FROM v0, vt0, t0, rt1 NOT INDEXED;
SELECT DISTINCT * FROM v0, vt0, t0, rt1 NOT INDEXED WHERE (((rt1.c2) NOT BETWEEN (((rt1.c0) BETWEEN (v0.c2) AND (v0.c2))) AND (LIKELY(v0.c1)))) UNION SELECT DISTINCT * FROM v0, vt0, t0, rt1 WHERE ((NOT (((rt1.c2) NOT BETWEEN (((rt1.c0) BETWEEN (v0.c2) AND (v0.c2))) AND (LIKELY(v0.c1)))))) UNION SELECT DISTINCT * FROM v0, vt0, t0, rt1 WHERE (((((rt1.c2) NOT BETWEEN (((rt1.c0) BETWEEN (v0.c2) AND (v0.c2))) AND (LIKELY(v0.c1)))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, t0, rt1 NOT INDEXED;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (INSTR(vt0.c0 COLLATE BINARY, ((vt0.c0)==(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (INSTR(vt0.c0 COLLATE BINARY, ((vt0.c0)==(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((INSTR(vt0.c0 COLLATE BINARY, ((vt0.c0)==(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1 NOT INDEXED GROUP BY rt1.c3 HAVING (~ ((GROUP_CONCAT(rt1.c0) IN ()))) UNION ALL SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (NOT ((~ ((GROUP_CONCAT(rt1.c0) IN ()))))) UNION ALL SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (((~ ((GROUP_CONCAT(rt1.c0) IN ())))) ISNULL);
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt1 NOT INDEXED GROUP BY rt1.c3 HAVING (~ ((GROUP_CONCAT(rt1.c0) IN ()))) UNION ALL SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (NOT ((~ ((GROUP_CONCAT(rt1.c0) IN ()))))) UNION ALL SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (((~ ((GROUP_CONCAT(rt1.c0) IN ())))) ISNULL);
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((NOT (x''))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((NOT (x''))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((NOT (x''))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((((NOT ('')))OR(highlight(t0.c93, t0.c93, t0.c93, t0.c0))))OR((t0.c93 IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((((NOT ('')))OR(highlight(t0.c93, t0.c93, t0.c93, t0.c0))))OR((t0.c93 IN ())))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((((NOT ('')))OR(highlight(t0.c93, t0.c93, t0.c93, t0.c0))))OR((t0.c93 IN ())))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL v0.c0, rt1.c1, v0.c2, t0.c0, rt1.c0 FROM vt0 LEFT OUTER JOIN t0 ON CAST(((rt1.c1) NOTNULL) AS BLOB) LEFT OUTER JOIN rt1 ON (+ (x'')) INNER JOIN v0 ON (JULIANDAY(t0.c93, v0.c1, v0.c0) IN (vt0.c0 COLLATE NOCASE)) GROUP BY v0.c0, rt1.c1, v0.c2, t0.c0, rt1.c0;
SELECT v0.c1, vt0.c0, v0.c0, rt1.c3, v0.c2, rt1.c2, t0.c93, t0.c0, rt1.c1, rt1.c0 FROM t0, v0, rt1, vt0 GROUP BY v0.c1, vt0.c0, v0.c0, rt1.c3, v0.c2, rt1.c2, t0.c93, t0.c0, rt1.c1, rt1.c0;
SELECT ALL v0.c1, vt0.c0, v0.c0, rt1.c3, v0.c2, rt1.c2, t0.c93, t0.c0, rt1.c1, rt1.c0 FROM t0, v0, rt1, vt0 GROUP BY v0.c1, vt0.c0, v0.c0, rt1.c3, v0.c2, rt1.c2, t0.c93, t0.c0, rt1.c1, rt1.c0 HAVING CASE WHEN TOTAL(SUM(COUNT(*))) COLLATE BINARY THEN COUNT(t0.c93) WHEN MIN(rt1.c3) THEN (SUM(v0.c2) IN ()) WHEN GROUP_CONCAT(AVG(rt1.c2)) THEN 'U0' END UNION ALL SELECT v0.c1, vt0.c0, v0.c0, rt1.c3, v0.c2, rt1.c2, t0.c93, t0.c0, rt1.c1, rt1.c0 FROM t0, v0, rt1, vt0 GROUP BY v0.c1, vt0.c0, v0.c0, rt1.c3, v0.c2, rt1.c2, t0.c93, t0.c0, rt1.c1, rt1.c0 HAVING (NOT (CASE WHEN TOTAL(SUM(COUNT(*))) COLLATE BINARY THEN COUNT(t0.c93) WHEN MIN(rt1.c3) THEN (SUM(v0.c2) IN ()) WHEN GROUP_CONCAT(AVG(rt1.c2)) THEN 'U0' END)) UNION ALL SELECT ALL v0.c1, vt0.c0, v0.c0, rt1.c3, v0.c2, rt1.c2, t0.c93, t0.c0, rt1.c1, rt1.c0 FROM t0, v0, rt1, vt0 GROUP BY v0.c1, vt0.c0, v0.c0, rt1.c3, v0.c2, rt1.c2, t0.c93, t0.c0, rt1.c1, rt1.c0 HAVING ((CASE WHEN TOTAL(SUM(COUNT(*))) COLLATE BINARY THEN COUNT(t0.c93) WHEN MIN(rt1.c3) THEN (SUM(v0.c2) IN ()) WHEN GROUP_CONCAT(AVG(rt1.c2)) THEN 'U0' END) ISNULL);
SELECT ALL TOTAL(DATETIME(CAST(t0.c0 AS REAL), CAST(vt0.c0 AS BLOB), CASE t0.c93  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM t0, vt0 ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE BINARY DESC  NULLS LAST, (((t0.c93) NOT BETWEEN (t0.c93) AND (t0.c93)) IN (-1051647437 COLLATE RTRIM)) DESC, (((((t0.c93)) NOT BETWEEN ((t0.c93)) AND ((x''))))>>(((t0.c0)%(t0.c93))));
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (LOWER((((t0.c93)) BETWEEN ((t0.c0)) AND ((t0.c0))))) UNION ALL SELECT * FROM t0 WHERE ((NOT (LOWER((((t0.c93)) BETWEEN ((t0.c0)) AND ((t0.c0))))))) UNION ALL SELECT ALL * FROM t0 WHERE (((LOWER((((t0.c93)) BETWEEN ((t0.c0)) AND ((t0.c0))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM rt1, v0;
SELECT DISTINCT * FROM rt1, v0 WHERE ((-330098913 COLLATE NOCASE IN ((~ (v0.c0))))) UNION SELECT DISTINCT * FROM rt1 NOT INDEXED, v0 WHERE ((NOT ((-330098913 COLLATE NOCASE IN ((~ (v0.c0))))))) UNION SELECT DISTINCT * FROM rt1, v0 WHERE ((((-330098913 COLLATE NOCASE IN ((~ (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1, v0;
SELECT ALL v0.c1, rt1.c1, v0.c0, rt1.c2 FROM rt1 NOT INDEXED, vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0)IS(v0.c2)))IS NOT((rt1.c1 IN ()))) RIGHT OUTER JOIN v0 ON ((((((v0.c2) BETWEEN (t0.c93) AND (vt0.c0)))OR(v0.c2 COLLATE BINARY)))AND(vt0.c0 COLLATE NOCASE)) GROUP BY v0.c1, rt1.c1, v0.c0, rt1.c2;
SELECT v0.c0, rt1.c1, rt1.c0, rt1.c3, t0.c0, t0.c93, rt1.c2, v0.c2, v0.c1 FROM rt1, vt0, v0, t0 GROUP BY v0.c0, rt1.c1, rt1.c0, rt1.c3, t0.c0, t0.c93, rt1.c2, v0.c2, v0.c1;
SELECT ALL v0.c0, rt1.c1, rt1.c0, rt1.c3, t0.c0, t0.c93, rt1.c2, v0.c2, v0.c1 FROM rt1, vt0, v0, t0 GROUP BY v0.c0, rt1.c1, rt1.c0, rt1.c3, t0.c0, t0.c93, rt1.c2, v0.c2, v0.c1 HAVING ((COUNT(AVG(vt0.c0)))<<(GROUP_CONCAT(SUM(GROUP_CONCAT(t0.c0))))) UNION ALL SELECT ALL v0.c0, rt1.c1, rt1.c0, rt1.c3, t0.c0, t0.c93, rt1.c2, v0.c2, v0.c1 FROM rt1, vt0, v0, t0 GROUP BY v0.c0, rt1.c1, rt1.c0, rt1.c3, t0.c0, t0.c93, rt1.c2, v0.c2, v0.c1 HAVING (NOT (((COUNT(AVG(vt0.c0)))<<(GROUP_CONCAT(SUM(GROUP_CONCAT(t0.c0))))))) UNION ALL SELECT v0.c0, rt1.c1, rt1.c0, rt1.c3, t0.c0, t0.c93, rt1.c2, v0.c2, v0.c1 FROM rt1, vt0, v0, t0 GROUP BY v0.c0, rt1.c1, rt1.c0, rt1.c3, t0.c0, t0.c93, rt1.c2, v0.c2, v0.c1 HAVING ((((COUNT(AVG(vt0.c0)))<<(GROUP_CONCAT(SUM(GROUP_CONCAT(t0.c0)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT NULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER)) NOT NULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER)) NOT NULL)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0, v0.c1, v0.c2, t0.c0, vt0.c0, t0.c93 FROM v0, vt0, t0;
SELECT DISTINCT v0.c0, v0.c1, v0.c2, t0.c0, vt0.c0, t0.c93 FROM v0, vt0, t0 WHERE (CAST(((x'15aac9de') IS TRUE) AS BLOB)) UNION SELECT DISTINCT v0.c0, v0.c1, v0.c2, t0.c0, vt0.c0, t0.c93 FROM v0, vt0, t0 WHERE ((NOT (CAST(((x'15aac9de') IS TRUE) AS BLOB)))) UNION SELECT DISTINCT v0.c0, v0.c1, v0.c2, t0.c0, vt0.c0, t0.c93 FROM v0, vt0, t0 WHERE (((CAST(((x'15aac9de') IS TRUE) AS BLOB)) ISNULL));
SELECT DISTINCT v0.c0, v0.c1, v0.c2, t0.c0, vt0.c0, t0.c93 FROM v0, vt0, t0;
SELECT ALL v0.c1, vt0.c0, v0.c0, v0.c2, t0.c93, t0.c0 FROM v0, vt0, t0 GROUP BY v0.c1, vt0.c0, v0.c0, v0.c2, t0.c93, t0.c0;
SELECT ALL v0.c1, vt0.c0, v0.c0, v0.c2, t0.c93, t0.c0 FROM v0, vt0, t0 WHERE (((CAST(t0.c93 AS BLOB))+(((t0.c0)LIKE(v0.c0))))) GROUP BY v0.c1, vt0.c0, v0.c0, v0.c2, t0.c93, t0.c0 UNION SELECT v0.c1, vt0.c0, v0.c0, v0.c2, t0.c93, t0.c0 FROM v0, vt0, t0 WHERE ((NOT (((CAST(t0.c93 AS BLOB))+(((t0.c0)LIKE(v0.c0))))))) GROUP BY v0.c1, vt0.c0, v0.c0, v0.c2, t0.c93, t0.c0 UNION SELECT ALL v0.c1, vt0.c0, v0.c0, v0.c2, t0.c93, t0.c0 FROM v0, vt0, t0 WHERE (((((CAST(t0.c93 AS BLOB))+(((t0.c0)LIKE(v0.c0))))) ISNULL)) GROUP BY v0.c1, vt0.c0, v0.c0, v0.c2, t0.c93, t0.c0;
SELECT ALL v0.c1, vt0.c0, v0.c0, v0.c2, t0.c93, t0.c0 FROM v0, vt0, t0 GROUP BY v0.c1, vt0.c0, v0.c0, v0.c2, t0.c93, t0.c0;
SELECT v0.c0, rt1.c2, v0.c2, rt1.c1, t0.c93, rt1.c0, rt1.c3 FROM rt1 CROSS JOIN t0 ON rt1.c3 FULL OUTER JOIN v0 ON CAST(CASE WHEN t0.c93 THEN t0.c93 END AS REAL) GROUP BY v0.c0, rt1.c2, v0.c2, rt1.c1, t0.c93, rt1.c0, rt1.c3;
SELECT ALL v0.c0, rt1.c2, v0.c2, rt1.c1, t0.c93, rt1.c0, rt1.c3 FROM rt1 CROSS JOIN t0 ON rt1.c3 FULL OUTER JOIN v0 ON CAST(CASE WHEN t0.c93 THEN t0.c93 END AS REAL) GROUP BY v0.c0, rt1.c2, v0.c2, rt1.c1, t0.c93, rt1.c0, rt1.c3 HAVING CASE WHEN rt1.c0 THEN MIN(rt1.c3) WHEN rt1.c0 THEN COUNT(AVG(AVG(v0.c2))) WHEN t0.c93 THEN rt1.c3 WHEN x'' THEN rt1.c3 WHEN rt1.c3 THEN COUNT(rt1.c0) ELSE GROUP_CONCAT(t0.c93) END COLLATE RTRIM UNION ALL SELECT ALL v0.c0, rt1.c2, v0.c2, rt1.c1, t0.c93, rt1.c0, rt1.c3 FROM rt1 CROSS JOIN t0 ON rt1.c3 FULL OUTER JOIN v0 ON CAST(CASE WHEN t0.c93 THEN t0.c93 END AS REAL) GROUP BY v0.c0, rt1.c2, v0.c2, rt1.c1, t0.c93, rt1.c0, rt1.c3 HAVING (NOT (CASE WHEN rt1.c0 THEN MIN(rt1.c3) WHEN rt1.c0 THEN COUNT(AVG(AVG(v0.c2))) WHEN t0.c93 THEN rt1.c3 WHEN x'' THEN rt1.c3 WHEN rt1.c3 THEN COUNT(rt1.c0) ELSE GROUP_CONCAT(t0.c93) END COLLATE RTRIM)) UNION ALL SELECT v0.c0, rt1.c2, v0.c2, rt1.c1, t0.c93, rt1.c0, rt1.c3 FROM rt1 CROSS JOIN t0 ON rt1.c3 FULL OUTER JOIN v0 ON CAST(CASE WHEN t0.c93 THEN t0.c93 END AS REAL) GROUP BY v0.c0, rt1.c2, v0.c2, rt1.c1, t0.c93, rt1.c0, rt1.c3 HAVING ((CASE WHEN rt1.c0 THEN MIN(rt1.c3) WHEN rt1.c0 THEN COUNT(AVG(AVG(v0.c2))) WHEN t0.c93 THEN rt1.c3 WHEN x'' THEN rt1.c3 WHEN rt1.c3 THEN COUNT(rt1.c0) ELSE GROUP_CONCAT(t0.c93) END COLLATE RTRIM) ISNULL);
SELECT * FROM v0, rt1, t0;
SELECT * FROM v0, rt1, t0 WHERE (((((v0.c2) NOT NULL))/(TRIM(DISTINCT '-1706824881')))) UNION ALL SELECT ALL * FROM v0, rt1, t0 WHERE ((NOT (((((v0.c2) NOT NULL))/(TRIM(DISTINCT '-1706824881')))))) UNION ALL SELECT * FROM v0, rt1, t0 WHERE (((((((v0.c2) NOT NULL))/(TRIM(DISTINCT '-1706824881')))) ISNULL));
SELECT * FROM v0, rt1, t0;
SELECT DISTINCT v0.c2 FROM v0, rt1, vt0, t0;
SELECT DISTINCT v0.c2 FROM v0, rt1, vt0, t0 WHERE (CASE WHEN (- (v0.c0)) THEN (- (v0.c2)) END) UNION SELECT DISTINCT v0.c2 FROM v0, rt1, vt0, t0 WHERE ((NOT (CASE WHEN (- (v0.c0)) THEN (- (v0.c2)) END))) UNION SELECT DISTINCT v0.c2 FROM v0, rt1, vt0, t0 WHERE (((CASE WHEN (- (v0.c0)) THEN (- (v0.c2)) END) ISNULL));
SELECT DISTINCT v0.c2 FROM v0, rt1, vt0, t0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 WHERE ('0.4952435400406022') GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT v0.c1, v0.c2, v0.c0 FROM v0 WHERE ((NOT ('0.4952435400406022'))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT v0.c1, v0.c2, v0.c0 FROM v0 WHERE ((('0.4952435400406022') ISNULL)) GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL v0.c2, rt1.c3, v0.c0, rt1.c2 FROM v0 CROSS JOIN rt1 ON ((CAST(rt1.c2 AS INTEGER)) IS FALSE) FULL OUTER JOIN vt0 ON (((rt1.c3)) NOT BETWEEN (((v0.c1 IN ()))) AND ((CAST(v0.c1 AS TEXT)))) GROUP BY v0.c2, rt1.c3, v0.c0, rt1.c2;
SELECT v0.c2, rt1.c3, v0.c0, rt1.c2 FROM v0 CROSS JOIN rt1 ON ((CAST(rt1.c2 AS INTEGER)) IS FALSE) FULL OUTER JOIN vt0 ON (((rt1.c3)) NOT BETWEEN (((v0.c1 IN ()))) AND ((CAST(v0.c1 AS TEXT)))) GROUP BY v0.c2, rt1.c3, v0.c0, rt1.c2 HAVING v0.c0 UNION ALL SELECT ALL v0.c2, rt1.c3, v0.c0, rt1.c2 FROM v0 CROSS JOIN rt1 ON ((CAST(rt1.c2 AS INTEGER)) IS FALSE) FULL OUTER JOIN vt0 ON (((rt1.c3)) NOT BETWEEN (((v0.c1 IN ()))) AND ((CAST(v0.c1 AS TEXT)))) GROUP BY v0.c2, rt1.c3, v0.c0, rt1.c2 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c2, rt1.c3, v0.c0, rt1.c2 FROM v0 CROSS JOIN rt1 ON ((CAST(rt1.c2 AS INTEGER)) IS FALSE) FULL OUTER JOIN vt0 ON (((rt1.c3)) NOT BETWEEN (((v0.c1 IN ()))) AND ((CAST(v0.c1 AS TEXT)))) GROUP BY v0.c2, rt1.c3, v0.c0, rt1.c2 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c2, rt1.c3, v0.c0, rt1.c2 FROM v0 CROSS JOIN rt1 ON ((CAST(rt1.c2 AS INTEGER)) IS FALSE) FULL OUTER JOIN vt0 ON (((rt1.c3)) NOT BETWEEN (((v0.c1 IN ()))) AND ((CAST(v0.c1 AS TEXT)))) GROUP BY v0.c2, rt1.c3, v0.c0, rt1.c2;
SELECT v0.c2, rt1.c3, v0.c0, rt1.c2 FROM v0 CROSS JOIN rt1 ON ((CAST(rt1.c2 AS INTEGER)) IS FALSE) FULL OUTER JOIN vt0 ON (((rt1.c3)) NOT BETWEEN (((v0.c1 IN ()))) AND ((CAST(v0.c1 AS TEXT)))) GROUP BY v0.c2, rt1.c3, v0.c0, rt1.c2 HAVING v0.c0 UNION ALL SELECT ALL v0.c2, rt1.c3, v0.c0, rt1.c2 FROM v0 CROSS JOIN rt1 ON ((CAST(rt1.c2 AS INTEGER)) IS FALSE) FULL OUTER JOIN vt0 ON (((rt1.c3)) NOT BETWEEN (((v0.c1 IN ()))) AND ((CAST(v0.c1 AS TEXT)))) GROUP BY v0.c2, rt1.c3, v0.c0, rt1.c2 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c2, rt1.c3, v0.c0, rt1.c2 FROM v0 CROSS JOIN rt1 ON ((CAST(rt1.c2 AS INTEGER)) IS FALSE) FULL OUTER JOIN vt0 ON (((rt1.c3)) NOT BETWEEN (((v0.c1 IN ()))) AND ((CAST(v0.c1 AS TEXT)))) GROUP BY v0.c2, rt1.c3, v0.c0, rt1.c2 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c2, rt1.c3, v0.c0, rt1.c2 FROM v0 CROSS JOIN rt1 ON ((CAST(rt1.c2 AS INTEGER)) IS FALSE) FULL OUTER JOIN vt0 ON (((rt1.c3)) NOT BETWEEN (((v0.c1 IN ()))) AND ((CAST(v0.c1 AS TEXT)))) GROUP BY v0.c2, rt1.c3, v0.c0, rt1.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE (x'6f96' COLLATE RTRIM) UNION ALL SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT (x'6f96' COLLATE RTRIM))) UNION ALL SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE (((x'6f96' COLLATE RTRIM) ISNULL));
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0;
SELECT DISTINCT v0.c2, v0.c0, t0.c0, vt0.c0 FROM vt0, v0 CROSS JOIN t0 ON (+ ((~ (t0.c0))));
SELECT DISTINCT v0.c2, v0.c0, t0.c0, vt0.c0 FROM vt0, v0 CROSS JOIN t0 ON (+ ((~ (t0.c0)))) WHERE (((((t0.c0)LIKE(v0.c0))) IS FALSE)) UNION SELECT DISTINCT v0.c2, v0.c0, t0.c0, vt0.c0 FROM vt0, v0 CROSS JOIN t0 ON (+ ((~ (t0.c0)))) WHERE ((NOT (((((t0.c0)LIKE(v0.c0))) IS FALSE)))) UNION SELECT DISTINCT v0.c2, v0.c0, t0.c0, vt0.c0 FROM vt0, v0 CROSS JOIN t0 ON (+ ((~ (t0.c0)))) WHERE (((((((t0.c0)LIKE(v0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT v0.c2, v0.c0, t0.c0, vt0.c0 FROM vt0, v0 CROSS JOIN t0 ON (+ ((~ (t0.c0))));
SELECT rt1.c2, v0.c1, v0.c2, t0.c0 FROM rt1 FULL OUTER JOIN v0 ON TRIM(((rt1.c3)-(0.5311500050443048))) CROSS JOIN t0 ON NULLIF(CAST(x'' AS NUMERIC), ((((v0.c2)OR(rt1.c3)))AND(NULL))) GROUP BY rt1.c2, v0.c1, v0.c2, t0.c0;
SELECT ALL rt1.c2, v0.c1, v0.c2, t0.c0 FROM rt1 FULL OUTER JOIN v0 ON TRIM(((rt1.c3)-(0.5311500050443048))) CROSS JOIN t0 ON NULLIF(CAST(x'' AS NUMERIC), ((((v0.c2)OR(rt1.c3)))AND(NULL))) WHERE (((((rt1.c3)AND(0.8278689460644149)))OR(t0.c93)) COLLATE NOCASE) GROUP BY rt1.c2, v0.c1, v0.c2, t0.c0 UNION SELECT ALL rt1.c2, v0.c1, v0.c2, t0.c0 FROM rt1 FULL OUTER JOIN v0 ON TRIM(((rt1.c3)-(0.5311500050443048))) CROSS JOIN t0 ON NULLIF(CAST(x'' AS NUMERIC), ((((v0.c2)OR(rt1.c3)))AND(NULL))) WHERE ((NOT (((((rt1.c3)AND(0.8278689460644149)))OR(t0.c93)) COLLATE NOCASE))) GROUP BY rt1.c2, v0.c1, v0.c2, t0.c0 UNION SELECT ALL rt1.c2, v0.c1, v0.c2, t0.c0 FROM rt1 FULL OUTER JOIN v0 ON TRIM(((rt1.c3)-(0.5311500050443048))) CROSS JOIN t0 ON NULLIF(CAST(x'' AS NUMERIC), ((((v0.c2)OR(rt1.c3)))AND(NULL))) WHERE (((((((rt1.c3)AND(0.8278689460644149)))OR(t0.c93)) COLLATE NOCASE) ISNULL)) GROUP BY rt1.c2, v0.c1, v0.c2, t0.c0;
SELECT rt1.c2, v0.c1, v0.c2, t0.c0 FROM rt1 FULL OUTER JOIN v0 ON TRIM(((rt1.c3)-(0.5311500050443048))) CROSS JOIN t0 ON NULLIF(CAST(x'' AS NUMERIC), ((((v0.c2)OR(rt1.c3)))AND(NULL))) GROUP BY rt1.c2, v0.c1, v0.c2, t0.c0;
SELECT ALL rt1.c1, rt1.c0, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c3, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c3, rt1.c2 HAVING ((MIN(rt1.c2)) NOT BETWEEN (GROUP_CONCAT(rt1.c0)) AND (NULL)) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c3, rt1.c2 HAVING (NOT (((MIN(rt1.c2)) NOT BETWEEN (GROUP_CONCAT(rt1.c0)) AND (NULL)))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c3, rt1.c2 HAVING ((((MIN(rt1.c2)) NOT BETWEEN (GROUP_CONCAT(rt1.c0)) AND (NULL))) ISNULL);
SELECT ALL rt1.c1, rt1.c0, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c3, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c3, rt1.c2 HAVING ((MIN(rt1.c2)) NOT BETWEEN (GROUP_CONCAT(rt1.c0)) AND (NULL)) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c3, rt1.c2 HAVING (NOT (((MIN(rt1.c2)) NOT BETWEEN (GROUP_CONCAT(rt1.c0)) AND (NULL)))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c3, rt1.c2 HAVING ((((MIN(rt1.c2)) NOT BETWEEN (GROUP_CONCAT(rt1.c0)) AND (NULL))) ISNULL);
SELECT ALL rt1.c1, rt1.c0, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c3, rt1.c2;
SELECT * FROM rt1, v0;
SELECT * FROM rt1, v0 WHERE ((((- (rt1.c2))) NOTNULL)) UNION ALL SELECT * FROM rt1, v0 WHERE ((NOT ((((- (rt1.c2))) NOTNULL)))) UNION ALL SELECT * FROM rt1, v0 WHERE ((((((- (rt1.c2))) NOTNULL)) ISNULL));
SELECT * FROM rt1, v0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((NOT ((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((NOT ((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE (v0.c1) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT (v0.c1))) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE (((v0.c1) ISNULL)) GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL vt0.c0, rt1.c3, rt1.c0 FROM vt0, t0 RIGHT OUTER JOIN rt1 ON ((CAST('EV' AS NUMERIC))AND(((rt1.c1)/(rt1.c1)))) GROUP BY vt0.c0, rt1.c3, rt1.c0;
SELECT vt0.c0, rt1.c3, rt1.c0 FROM vt0, t0 RIGHT OUTER JOIN rt1 ON ((CAST('EV' AS NUMERIC))AND(((rt1.c1)/(rt1.c1)))) GROUP BY vt0.c0, rt1.c3, rt1.c0 HAVING ((COUNT(*)) BETWEEN ((~ (rt1.c0))) AND (COUNT(*))) UNION ALL SELECT ALL vt0.c0, rt1.c3, rt1.c0 FROM vt0, t0 RIGHT OUTER JOIN rt1 ON ((CAST('EV' AS NUMERIC))AND(((rt1.c1)/(rt1.c1)))) GROUP BY vt0.c0, rt1.c3, rt1.c0 HAVING (NOT (((COUNT(*)) BETWEEN ((~ (rt1.c0))) AND (COUNT(*))))) UNION ALL SELECT vt0.c0, rt1.c3, rt1.c0 FROM vt0, t0 RIGHT OUTER JOIN rt1 ON ((CAST('EV' AS NUMERIC))AND(((rt1.c1)/(rt1.c1)))) GROUP BY vt0.c0, rt1.c3, rt1.c0 HAVING ((((COUNT(*)) BETWEEN ((~ (rt1.c0))) AND (COUNT(*)))) ISNULL);
SELECT ALL vt0.c0, rt1.c3, rt1.c0 FROM vt0, t0 RIGHT OUTER JOIN rt1 ON ((CAST('EV' AS NUMERIC))AND(((rt1.c1)/(rt1.c1)))) GROUP BY vt0.c0, rt1.c3, rt1.c0;
SELECT vt0.c0, rt1.c3, rt1.c0 FROM vt0, t0 RIGHT OUTER JOIN rt1 ON ((CAST('EV' AS NUMERIC))AND(((rt1.c1)/(rt1.c1)))) GROUP BY vt0.c0, rt1.c3, rt1.c0 HAVING ((COUNT(*)) BETWEEN ((~ (rt1.c0))) AND (COUNT(*))) UNION ALL SELECT ALL vt0.c0, rt1.c3, rt1.c0 FROM vt0, t0 RIGHT OUTER JOIN rt1 ON ((CAST('EV' AS NUMERIC))AND(((rt1.c1)/(rt1.c1)))) GROUP BY vt0.c0, rt1.c3, rt1.c0 HAVING (NOT (((COUNT(*)) BETWEEN ((~ (rt1.c0))) AND (COUNT(*))))) UNION ALL SELECT vt0.c0, rt1.c3, rt1.c0 FROM vt0, t0 RIGHT OUTER JOIN rt1 ON ((CAST('EV' AS NUMERIC))AND(((rt1.c1)/(rt1.c1)))) GROUP BY vt0.c0, rt1.c3, rt1.c0 HAVING ((((COUNT(*)) BETWEEN ((~ (rt1.c0))) AND (COUNT(*)))) ISNULL);
SELECT ALL vt0.c0, rt1.c3, rt1.c0 FROM vt0, t0 RIGHT OUTER JOIN rt1 ON ((CAST('EV' AS NUMERIC))AND(((rt1.c1)/(rt1.c1)))) GROUP BY vt0.c0, rt1.c3, rt1.c0;
SELECT ALL * FROM v0, rt1;
SELECT ALL * FROM v0, rt1 WHERE (((((rt1.c3) NOTNULL)) BETWEEN (((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c0)))OR(v0.c0)))AND(rt1.c1))) AND (v0.c2 COLLATE BINARY))) UNION ALL SELECT * FROM v0, rt1 WHERE ((NOT (((((rt1.c3) NOTNULL)) BETWEEN (((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c0)))OR(v0.c0)))AND(rt1.c1))) AND (v0.c2 COLLATE BINARY))))) UNION ALL SELECT * FROM v0, rt1 WHERE (((((((rt1.c3) NOTNULL)) BETWEEN (((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c0)))OR(v0.c0)))AND(rt1.c1))) AND (v0.c2 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM v0, rt1;
SELECT DISTINCT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1 WHERE (CAST(-8.9165224E7 AS TEXT)) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT (CAST(-8.9165224E7 AS TEXT)))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE (((CAST(-8.9165224E7 AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt0, rt1;
SELECT ALL v0.c2, t0.c93, v0.c0, rt1.c2, rt1.c3, v0.c1, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON v0.c2 COLLATE BINARY RIGHT OUTER JOIN rt1 ON (((v0.c2, NULL, 0.5702017909909946)) NOT BETWEEN ((CAST(rt1.c2 AS REAL), NULL, CASE v0.c1  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END)) AND ((CASE WHEN v0.c0 THEN v0.c0 END, ('㤐%IsfK' IN (v0.c2, v0.c0)), '507069863'))) GROUP BY v0.c2, t0.c93, v0.c0, rt1.c2, rt1.c3, v0.c1, t0.c0;
SELECT ALL v0.c2, t0.c93, v0.c0, rt1.c2, rt1.c3, v0.c1, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON v0.c2 COLLATE BINARY RIGHT OUTER JOIN rt1 ON (((v0.c2, NULL, 0.5702017909909946)) NOT BETWEEN ((CAST(rt1.c2 AS REAL), NULL, CASE v0.c1  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END)) AND ((CASE WHEN v0.c0 THEN v0.c0 END, ('㤐%IsfK' IN (v0.c2, v0.c0)), '507069863'))) WHERE (((((CAST(v0.c0 AS TEXT))OR(((v0.c1)IS(t0.c93)))))AND(CAST(rt1.c0 AS INTEGER)))) GROUP BY v0.c2, t0.c93, v0.c0, rt1.c2, rt1.c3, v0.c1, t0.c0 UNION SELECT v0.c2, t0.c93, v0.c0, rt1.c2, rt1.c3, v0.c1, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON v0.c2 COLLATE BINARY RIGHT OUTER JOIN rt1 ON (((v0.c2, NULL, 0.5702017909909946)) NOT BETWEEN ((CAST(rt1.c2 AS REAL), NULL, CASE v0.c1  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END)) AND ((CASE WHEN v0.c0 THEN v0.c0 END, ('㤐%IsfK' IN (v0.c2, v0.c0)), '507069863'))) WHERE ((NOT (((((CAST(v0.c0 AS TEXT))OR(((v0.c1)IS(t0.c93)))))AND(CAST(rt1.c0 AS INTEGER)))))) GROUP BY v0.c2, t0.c93, v0.c0, rt1.c2, rt1.c3, v0.c1, t0.c0 UNION SELECT v0.c2, t0.c93, v0.c0, rt1.c2, rt1.c3, v0.c1, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON v0.c2 COLLATE BINARY RIGHT OUTER JOIN rt1 ON (((v0.c2, NULL, 0.5702017909909946)) NOT BETWEEN ((CAST(rt1.c2 AS REAL), NULL, CASE v0.c1  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END)) AND ((CASE WHEN v0.c0 THEN v0.c0 END, ('㤐%IsfK' IN (v0.c2, v0.c0)), '507069863'))) WHERE (((((((CAST(v0.c0 AS TEXT))OR(((v0.c1)IS(t0.c93)))))AND(CAST(rt1.c0 AS INTEGER)))) ISNULL)) GROUP BY v0.c2, t0.c93, v0.c0, rt1.c2, rt1.c3, v0.c1, t0.c0;
SELECT ALL v0.c2, t0.c93, v0.c0, rt1.c2, rt1.c3, v0.c1, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON v0.c2 COLLATE BINARY RIGHT OUTER JOIN rt1 ON (((v0.c2, NULL, 0.5702017909909946)) NOT BETWEEN ((CAST(rt1.c2 AS REAL), NULL, CASE v0.c1  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END)) AND ((CASE WHEN v0.c0 THEN v0.c0 END, ('㤐%IsfK' IN (v0.c2, v0.c0)), '507069863'))) GROUP BY v0.c2, t0.c93, v0.c0, rt1.c2, rt1.c3, v0.c1, t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM rt1, vt0, v0, t0;
SELECT ALL * FROM rt1, vt0, v0, t0 WHERE (452561850) UNION ALL SELECT ALL * FROM rt1, vt0, v0, t0 WHERE ((NOT (452561850))) UNION ALL SELECT * FROM rt1, vt0, v0, t0 WHERE (((452561850) ISNULL));
SELECT * FROM rt1, vt0, v0, t0;
SELECT DISTINCT * FROM vt0, v0, rt1, t0;
SELECT DISTINCT * FROM vt0, v0, rt1, t0 WHERE (((((v0.c1) IS TRUE)) BETWEEN (CASE WHEN v0.c2 THEN vt0.c0 END) AND ((((rt1.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0)))))) UNION SELECT DISTINCT * FROM vt0, v0, rt1, t0 WHERE ((NOT (((((v0.c1) IS TRUE)) BETWEEN (CASE WHEN v0.c2 THEN vt0.c0 END) AND ((((rt1.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0)))))))) UNION SELECT DISTINCT * FROM vt0, v0, rt1, t0 WHERE (((((((v0.c1) IS TRUE)) BETWEEN (CASE WHEN v0.c2 THEN vt0.c0 END) AND ((((rt1.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt1, t0;
SELECT t0.c93, rt1.c3, rt1.c1, v0.c2, v0.c0, vt0.c0, t0.c0, v0.c1, rt1.c2, rt1.c0 FROM vt0, t0, rt1, v0 GROUP BY t0.c93, rt1.c3, rt1.c1, v0.c2, v0.c0, vt0.c0, t0.c0, v0.c1, rt1.c2, rt1.c0;
SELECT ALL t0.c93, rt1.c3, rt1.c1, v0.c2, v0.c0, vt0.c0, t0.c0, v0.c1, rt1.c2, rt1.c0 FROM vt0, t0, rt1, v0 WHERE ((v0.c1 COLLATE NOCASE IN ())) GROUP BY t0.c93, rt1.c3, rt1.c1, v0.c2, v0.c0, vt0.c0, t0.c0, v0.c1, rt1.c2, rt1.c0 UNION SELECT ALL t0.c93, rt1.c3, rt1.c1, v0.c2, v0.c0, vt0.c0, t0.c0, v0.c1, rt1.c2, rt1.c0 FROM vt0, t0, rt1, v0 WHERE ((NOT ((v0.c1 COLLATE NOCASE IN ())))) GROUP BY t0.c93, rt1.c3, rt1.c1, v0.c2, v0.c0, vt0.c0, t0.c0, v0.c1, rt1.c2, rt1.c0 UNION SELECT t0.c93, rt1.c3, rt1.c1, v0.c2, v0.c0, vt0.c0, t0.c0, v0.c1, rt1.c2, rt1.c0 FROM vt0, t0, rt1, v0 WHERE ((((v0.c1 COLLATE NOCASE IN ())) ISNULL)) GROUP BY t0.c93, rt1.c3, rt1.c1, v0.c2, v0.c0, vt0.c0, t0.c0, v0.c1, rt1.c2, rt1.c0;
SELECT t0.c93, rt1.c3, rt1.c1, v0.c2, v0.c0, vt0.c0, t0.c0, v0.c1, rt1.c2, rt1.c0 FROM vt0, t0, rt1, v0 GROUP BY t0.c93, rt1.c3, rt1.c1, v0.c2, v0.c0, vt0.c0, t0.c0, v0.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c3, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c3, rt1.c0 HAVING x'' UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c3, rt1.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c3, rt1.c0 HAVING ((x'') ISNULL);
SELECT rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c3, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c3, rt1.c0 HAVING x'' UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c3, rt1.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c3, rt1.c0 HAVING ((x'') ISNULL);
SELECT rt1.c1, rt1.c2, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c3, rt1.c0;
SELECT ALL rt1.c1, t0.c0, vt0.c0, t0.c93 FROM rt1, t0, vt0;
SELECT rt1.c1, t0.c0, vt0.c0, t0.c93 FROM rt1, t0, vt0 WHERE ((((rt1.c3) BETWEEN (rt1.c2) AND (t0.c93)) IN (rt1.c1, (((vt0.c0))<=((t0.c93)))))) UNION ALL SELECT rt1.c1, t0.c0, vt0.c0, t0.c93 FROM rt1, t0, vt0 WHERE ((NOT ((((rt1.c3) BETWEEN (rt1.c2) AND (t0.c93)) IN (rt1.c1, (((vt0.c0))<=((t0.c93)))))))) UNION ALL SELECT ALL rt1.c1, t0.c0, vt0.c0, t0.c93 FROM rt1, t0, vt0 WHERE ((((((rt1.c3) BETWEEN (rt1.c2) AND (t0.c93)) IN (rt1.c1, (((vt0.c0))<=((t0.c93)))))) ISNULL));
SELECT ALL rt1.c1, t0.c0, vt0.c0, t0.c93 FROM rt1, t0, vt0;
SELECT DISTINCT v0.c0, v0.c2 FROM rt1, t0, v0, vt0;
SELECT DISTINCT v0.c0, v0.c2 FROM rt1, t0, v0, vt0 WHERE (TRIM(DISTINCT ((((t0.c93)AND('')))OR(rt1.c0)), ((rt1.c2) BETWEEN (v0.c2) AND (t0.c93)))) UNION SELECT DISTINCT v0.c0, v0.c2 FROM rt1, t0, v0, vt0 WHERE ((NOT (TRIM(DISTINCT ((((t0.c93)AND('')))OR(rt1.c0)), ((rt1.c2) BETWEEN (v0.c2) AND (t0.c93)))))) UNION SELECT DISTINCT v0.c0, v0.c2 FROM rt1, t0, v0, vt0 WHERE (((TRIM(DISTINCT ((((t0.c93)AND('')))OR(rt1.c0)), ((rt1.c2) BETWEEN (v0.c2) AND (t0.c93)))) ISNULL));
SELECT DISTINCT v0.c0, v0.c2 FROM rt1, t0, v0, vt0;
SELECT ALL v0.c1, v0.c2 FROM t0, v0 GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM t0, v0 WHERE ((((+ (t0.c93))) NOTNULL)) GROUP BY v0.c1, v0.c2 UNION SELECT v0.c1, v0.c2 FROM t0, v0 WHERE ((NOT ((((+ (t0.c93))) NOTNULL)))) GROUP BY v0.c1, v0.c2 UNION SELECT v0.c1, v0.c2 FROM t0, v0 WHERE ((((((+ (t0.c93))) NOTNULL)) ISNULL)) GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM t0, v0 GROUP BY v0.c1, v0.c2;
SELECT t0.c93, v0.c0, t0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY t0.c93, v0.c0, t0.c0, v0.c2, v0.c1;
SELECT t0.c93, v0.c0, t0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY t0.c93, v0.c0, t0.c0, v0.c2, v0.c1 HAVING (((NULL))==((((GROUP_CONCAT(GROUP_CONCAT(v0.c0)))+(v0.c2))))) UNION ALL SELECT t0.c93, v0.c0, t0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY t0.c93, v0.c0, t0.c0, v0.c2, v0.c1 HAVING (NOT ((((NULL))=((((GROUP_CONCAT(GROUP_CONCAT(v0.c0)))+(v0.c2))))))) UNION ALL SELECT ALL t0.c93, v0.c0, t0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY t0.c93, v0.c0, t0.c0, v0.c2, v0.c1 HAVING (((((NULL))==((((GROUP_CONCAT(GROUP_CONCAT(v0.c0)))+(v0.c2)))))) ISNULL);
SELECT * FROM vt0 NATURAL JOIN rt1;
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE (1275845102) UNION ALL SELECT * FROM vt0 NATURAL JOIN rt1 WHERE ((NOT (1275845102))) UNION ALL SELECT * FROM vt0 NATURAL JOIN rt1 WHERE (((1275845102) ISNULL));
SELECT * FROM vt0 NATURAL JOIN rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((x'') NOT BETWEEN (rt1.c3) AND (rt1.c2))) BETWEEN (((rt1.c1) ISNULL)) AND (x'' COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((x'') NOT BETWEEN (rt1.c3) AND (rt1.c2))) BETWEEN (((rt1.c1) ISNULL)) AND (x'' COLLATE BINARY))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((x'') NOT BETWEEN (rt1.c3) AND (rt1.c2))) BETWEEN (((rt1.c1) ISNULL)) AND (x'' COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(TRIM(DISTINCT v0.c1, v0.c2) AS INTEGER)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(TRIM(DISTINCT v0.c1, v0.c2) AS INTEGER)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST(TRIM(DISTINCT v0.c1, v0.c2) AS INTEGER)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c93 FROM t0 GROUP BY t0.c93;
SELECT ALL t0.c93 FROM t0 GROUP BY t0.c93 HAVING COUNT(*) UNION ALL SELECT ALL t0.c93 FROM t0 GROUP BY t0.c93 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c93 FROM t0 GROUP BY t0.c93 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c93 FROM t0 GROUP BY t0.c93;
SELECT ALL t0.c93 FROM t0 GROUP BY t0.c93 HAVING COUNT(*) UNION ALL SELECT ALL t0.c93 FROM t0 GROUP BY t0.c93 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c93 FROM t0 GROUP BY t0.c93 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c93 FROM t0 GROUP BY t0.c93;
SELECT t0.c93, v0.c2, rt1.c2, vt0.c0 FROM rt1, vt0, v0, t0;
SELECT ALL t0.c93, v0.c2, rt1.c2, vt0.c0 FROM rt1, vt0, v0, t0 WHERE ((- (((t0.c0)|(t0.c93))))) UNION ALL SELECT t0.c93, v0.c2, rt1.c2, vt0.c0 FROM rt1, vt0, v0, t0 WHERE ((NOT ((- (((t0.c0)|(t0.c93))))))) UNION ALL SELECT t0.c93, v0.c2, rt1.c2, vt0.c0 FROM rt1, vt0, v0, t0 WHERE ((((- (((t0.c0)|(t0.c93))))) ISNULL));
SELECT t0.c93, v0.c2, rt1.c2, vt0.c0 FROM rt1, vt0, v0, t0;
SELECT DISTINCT t0.c93, v0.c0, v0.c2, t0.c0, v0.c1 FROM v0, t0;
SELECT DISTINCT t0.c93, v0.c0, v0.c2, t0.c0, v0.c1 FROM v0, t0 WHERE (CASE WHEN (+ (v0.c2)) THEN v0.c2 COLLATE NOCASE WHEN ((v0.c1) NOT BETWEEN (t0.c93) AND (t0.c0)) THEN 0.45603750544507526 WHEN CASE t0.c0  WHEN v0.c0 THEN t0.c0 ELSE v0.c2 END THEN (('466673662')LIKE(t0.c0)) ELSE t0.c0 END) UNION SELECT DISTINCT t0.c93, v0.c0, v0.c2, t0.c0, v0.c1 FROM v0, t0 WHERE ((NOT (CASE WHEN (+ (v0.c2)) THEN v0.c2 COLLATE NOCASE WHEN ((v0.c1) NOT BETWEEN (t0.c93) AND (t0.c0)) THEN 0.45603750544507526 WHEN CASE t0.c0  WHEN v0.c0 THEN t0.c0 ELSE v0.c2 END THEN (('466673662')LIKE(t0.c0)) ELSE t0.c0 END))) UNION SELECT DISTINCT t0.c93, v0.c0, v0.c2, t0.c0, v0.c1 FROM v0, t0 WHERE (((CASE WHEN (+ (v0.c2)) THEN v0.c2 COLLATE NOCASE WHEN ((v0.c1) NOT BETWEEN (t0.c93) AND (t0.c0)) THEN 0.45603750544507526 WHEN CASE t0.c0  WHEN v0.c0 THEN t0.c0 ELSE v0.c2 END THEN (('466673662')LIKE(t0.c0)) ELSE t0.c0 END) ISNULL));
SELECT DISTINCT t0.c93, v0.c0, v0.c2, t0.c0, v0.c1 FROM v0, t0;
