-- Time: 2024/06/10 04:52:48
-- Database: database44
-- Database version: 3.40.0
-- seed value: 1788612344
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1, languageid="lid"); -- 1ms;
PRAGMA mmap_size = -6796474854439719732; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE vt0 SET (c1)=('6债'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '65155'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1103335270); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1241445355);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
PRAGMA ignore_check_constraints = false; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c1=x'36ed' WHERE ((((((vt0.lid)AND(vt0.c1)))AND(vt0.c0)))LIKE(((vt0.c0) ISNULL))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE vt0; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE vt0 SET lid=NULL, c0='1207779459' WHERE (~ (((vt0.c0) IS FALSE))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0(c1) VALUES ('	E'), ('-337372414'), (0.109600702772229); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1 unordered noskipscan'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, lid, c0) VALUES (NULL, 245980679, '-337372414'), (NULL, 0.6122469790274765, ''), (NULL, 1.207779459E9, x'c905'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0='', c1=x'1e6f4bb7' WHERE (((('1e500')AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))OR(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR FAIL vt0 SET (c1)=('1912590699'); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (1207779459, 0.8334269526683319, 0.6122469790274765); -- 0ms;
INSERT OR REPLACE INTO vt0(lid, c0) VALUES ('tc', '1088652907'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-180049431'); -- 0ms;
PRAGMA main.journal_size_limit = 0; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (NULL); -- 1ms;
UPDATE OR IGNORE vt0 SET c1=NULL; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '35193'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -180049431);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE vt0 SET c1='1088652907' WHERE (((- (vt0.lid))) BETWEEN ((+ (vt0.c1))) AND (CAST(vt0.c1 AS BLOB))); -- 1ms;
UPDATE vt0 SET (lid, c1)=('갂(!\nvu1H', x''); -- 1ms;
UPDATE OR IGNORE vt0 SET (lid)=(NULL); -- 0ms;
REINDEX; -- 0ms;
INSERT OR ABORT INTO vt0(lid) VALUES ('1241445355'); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (x'', x'', 1.241445355E9); -- 0ms;
INSERT OR ABORT INTO vt0(lid, c1, c0) VALUES (0.7105206643396782, 0.6122469790274765, NULL); -- 0ms;
PRAGMA temp.reverse_unordered_selects = true; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1835868362,4');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1, c1, c1)=(NULL, '1161173331', 1912590699); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
UPDATE OR IGNORE vt0 SET (lid, c1, c1)=(x'', NULL, NULL) WHERE vt0.lid; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'cb16f4f33b67'), ('&m祚Q.XuW%'), (0.034642643668655104); -- 0ms;
PRAGMA temp.legacy_file_format; -- 0ms;
END; -- 0ms;
REINDEX BINARY; -- 0ms;
DELETE FROM vt0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '52994'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0(c1, c0) VALUES (x'', 0.109600702772229), (0.8900666263063943, ''), ('-1771921155', 0.10007890348524928); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(NULL); -- 0ms;
UPDATE OR FAIL vt0 SET lid=0.1239730238074307; -- 1ms;
PRAGMA optimize; -- 0ms;
INSERT OR IGNORE INTO vt0(c1, lid) VALUES ('', ''); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES ('-337372414', 0.7787137691602932, 'ZL4'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL, x'', 'dS? ꩶU['), (0Xffffffffebe41b02, x'd3d0', 'xF'), ('-1805223590', -3.76591358E8, x''); -- 0ms;
INSERT OR ABORT INTO vt0(c0, lid, c1) VALUES (0.1239730238074307, x'', 0.1131681852684695), ('-1805223590', NULL, 0.2601676610266417), (0xfffffffff175aa76, 0.9445955809667834, 'ZL4'); -- 0ms;
UPDATE OR ABORT vt0 SET lid=0.7881109995134044 WHERE (('}2')>=(((vt0.c0) NOTNULL))); -- 0ms;
PRAGMA temp.optimize; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(1749047093) WHERE x''; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
INSERT OR REPLACE INTO vt0(lid) VALUES (0.2601676610266417); -- 1ms;
UPDATE vt0 SET c1='-623810234', c1='490426426'; -- 0ms;
END TRANSACTION; -- 5ms;
PRAGMA automatic_index; -- 0ms;
UPDATE OR FAIL rt0 SET (c2)=(NULL) WHERE rt0.c0 COLLATE NOCASE; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'', '虫 u', 0.9082180609211188); -- 0ms;
INSERT OR FAIL INTO rt0(c0) VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO rt0(c2) VALUES ('1869337921'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(''); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1329301977'); -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
UPDATE OR REPLACE rt0 SET (c0)=('') WHERE CAST(rt0.c2 AS TEXT); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1329301977,2');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1357336955,13');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE ((0.25855376769852056 IN ())) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((0.25855376769852056 IN ())))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((((0.25855376769852056 IN ())) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)IS(((x'9b2b')>=(x'56bb'))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE NOCASE)IS(((x'9b2b')>=(x'56bb'))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((rt0.c1 COLLATE NOCASE)IS(((x'9b2b')>=(x'56bb'))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt0.c1, vt0.c0, rt0.c2, vt0.lid, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c2, vt0.lid, rt0.c1, rt0.c0;
SELECT ALL vt0.c1, vt0.c0, rt0.c2, vt0.lid, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c2, vt0.lid, rt0.c1, rt0.c0 HAVING ((((GROUP_CONCAT(rt0.c2))OR(vt0.c0)))OR(GROUP_CONCAT(AVG(rt0.c2)))) COLLATE NOCASE UNION ALL SELECT ALL vt0.c1, vt0.c0, rt0.c2, vt0.lid, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c2, vt0.lid, rt0.c1, rt0.c0 HAVING (NOT (((((GROUP_CONCAT(rt0.c2))OR(vt0.c0)))OR(GROUP_CONCAT(AVG(rt0.c2)))) COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c1, vt0.c0, rt0.c2, vt0.lid, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c2, vt0.lid, rt0.c1, rt0.c0 HAVING ((((((GROUP_CONCAT(rt0.c2))OR(vt0.c0)))OR(GROUP_CONCAT(AVG(rt0.c2)))) COLLATE NOCASE) ISNULL);
SELECT rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE rt0.c1 COLLATE NOCASE  WHEN (((vt0.c0))=((rt0.c2))) THEN (((x'e0f7', vt0.c1, rt0.c1))>=((vt0.lid, rt0.c0, rt0.c0))) END;
SELECT rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE rt0.c1 COLLATE NOCASE  WHEN (((vt0.c0))==((rt0.c2))) THEN (((x'e0f7', vt0.c1, rt0.c1))>=((vt0.lid, rt0.c0, rt0.c0))) END WHERE (rt0.c0) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE rt0.c1 COLLATE NOCASE  WHEN (((vt0.c0))==((rt0.c2))) THEN (((x'e0f7', vt0.c1, rt0.c1))>=((vt0.lid, rt0.c0, rt0.c0))) END WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE rt0.c1 COLLATE NOCASE  WHEN (((vt0.c0))==((rt0.c2))) THEN (((x'e0f7', vt0.c1, rt0.c1))>=((vt0.lid, rt0.c0, rt0.c0))) END WHERE (((rt0.c0) ISNULL));
SELECT rt0.c0, rt0.c2 FROM vt0 INNER JOIN rt0 ON CASE rt0.c1 COLLATE NOCASE  WHEN (((vt0.c0))=((rt0.c2))) THEN (((x'e0f7', vt0.c1, rt0.c1))>=((vt0.lid, rt0.c0, rt0.c0))) END;
SELECT DISTINCT vt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON ABS(DISTINCT ((rt0.c2) NOT NULL));
SELECT DISTINCT vt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON ABS(DISTINCT ((rt0.c2) NOT NULL)) WHERE (((((((rt0.c2) NOT NULL))AND(((vt0.lid) IS TRUE))))AND(NULLIF('Q#l瘧%r', rt0.c2)))) UNION SELECT DISTINCT vt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON ABS(DISTINCT ((rt0.c2) NOT NULL)) WHERE ((NOT (((((((rt0.c2) NOT NULL))AND(((vt0.lid) IS TRUE))))AND(NULLIF('Q#l瘧%r', rt0.c2)))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON ABS(DISTINCT ((rt0.c2) NOT NULL)) WHERE (((((((((rt0.c2) NOT NULL))AND(((vt0.lid) IS TRUE))))AND(NULLIF('Q#l瘧%r', rt0.c2)))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON ABS(DISTINCT ((rt0.c2) NOT NULL));
SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt0.lid FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt0.lid;
SELECT rt0.c0, rt0.c1, vt0.c1, vt0.lid FROM vt0, rt0 WHERE ((((((rt0.c2, vt0.lid, rt0.c1)) BETWEEN ((vt0.lid, rt0.c2, rt0.c0)) AND ((rt0.c1, vt0.c0, rt0.c2)))) BETWEEN (((vt0.c0) NOT NULL)) AND ((((vt0.lid, rt0.c2, vt0.c0))<=((vt0.c0, vt0.c1, vt0.c0)))))) GROUP BY rt0.c0, rt0.c1, vt0.c1, vt0.lid UNION SELECT rt0.c0, rt0.c1, vt0.c1, vt0.lid FROM vt0, rt0 WHERE ((NOT ((((((rt0.c2, vt0.lid, rt0.c1)) BETWEEN ((vt0.lid, rt0.c2, rt0.c0)) AND ((rt0.c1, vt0.c0, rt0.c2)))) BETWEEN (((vt0.c0) NOT NULL)) AND ((((vt0.lid, rt0.c2, vt0.c0))<=((vt0.c0, vt0.c1, vt0.c0)))))))) GROUP BY rt0.c0, rt0.c1, vt0.c1, vt0.lid UNION SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt0.lid FROM vt0, rt0 WHERE ((((((((rt0.c2, vt0.lid, rt0.c1)) BETWEEN ((vt0.lid, rt0.c2, rt0.c0)) AND ((rt0.c1, vt0.c0, rt0.c2)))) BETWEEN (((vt0.c0) NOT NULL)) AND ((((vt0.lid, rt0.c2, vt0.c0))<=((vt0.c0, vt0.c1, vt0.c0)))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt0.c1, vt0.lid;
SELECT ALL rt0.c0, rt0.c1, vt0.c1, vt0.lid FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c1, vt0.lid;
SELECT rt0.c0, vt0.c0, vt0.lid, rt0.c1, rt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, vt0.lid, rt0.c1, rt0.c2, vt0.c1;
SELECT rt0.c0, vt0.c0, vt0.lid, rt0.c1, rt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, vt0.lid, rt0.c1, rt0.c2, vt0.c1 HAVING AVG(CAST(vt0.lid AS REAL)) UNION ALL SELECT rt0.c0, vt0.c0, vt0.lid, rt0.c1, rt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, vt0.lid, rt0.c1, rt0.c2, vt0.c1 HAVING (NOT (AVG(CAST(vt0.lid AS REAL)))) UNION ALL SELECT rt0.c0, vt0.c0, vt0.lid, rt0.c1, rt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, vt0.lid, rt0.c1, rt0.c2, vt0.c1 HAVING ((AVG(CAST(vt0.lid AS REAL))) ISNULL);
SELECT rt0.c0, vt0.c0, vt0.lid, rt0.c1, rt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, vt0.lid, rt0.c1, rt0.c2, vt0.c1;
SELECT rt0.c0, vt0.c0, vt0.lid, rt0.c1, rt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, vt0.lid, rt0.c1, rt0.c2, vt0.c1 HAVING AVG(CAST(vt0.lid AS REAL)) UNION ALL SELECT rt0.c0, vt0.c0, vt0.lid, rt0.c1, rt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, vt0.lid, rt0.c1, rt0.c2, vt0.c1 HAVING (NOT (AVG(CAST(vt0.lid AS REAL)))) UNION ALL SELECT rt0.c0, vt0.c0, vt0.lid, rt0.c1, rt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, vt0.lid, rt0.c1, rt0.c2, vt0.c1 HAVING ((AVG(CAST(vt0.lid AS REAL))) ISNULL);
SELECT rt0.c0, vt0.c0, vt0.lid, rt0.c1, rt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, vt0.lid, rt0.c1, rt0.c2, vt0.c1;
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (((+ (0.15887458397833287)) IN ())) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (((+ (0.15887458397833287)) IN ())))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((((+ (0.15887458397833287)) IN ())) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN '-271352712' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END AS REAL)) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN '-271352712' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END AS REAL)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN '-271352712' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END AS REAL)) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT vt0.lid, rt0.c0, vt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c0, vt0.c1, vt0.c0, rt0.c2;
SELECT vt0.lid, rt0.c0, vt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (CASE WHEN vt0.c0 THEN CASE WHEN rt0.c1 THEN vt0.c0 END WHEN TRIM(rt0.c2) THEN (- (rt0.c2)) WHEN ((rt0.c2)<=(vt0.lid)) THEN (((rt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) ELSE ((((((((rt0.c0)AND('1241445355')))AND(rt0.c2)))AND(rt0.c0)))AND(x'')) END) GROUP BY vt0.lid, rt0.c0, vt0.c1, vt0.c0, rt0.c2 UNION SELECT vt0.lid, rt0.c0, vt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN CASE WHEN rt0.c1 THEN vt0.c0 END WHEN TRIM(rt0.c2) THEN (- (rt0.c2)) WHEN ((rt0.c2)<=(vt0.lid)) THEN (((rt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) ELSE ((((((((rt0.c0)AND('1241445355')))AND(rt0.c2)))AND(rt0.c0)))AND(x'')) END))) GROUP BY vt0.lid, rt0.c0, vt0.c1, vt0.c0, rt0.c2 UNION SELECT ALL vt0.lid, rt0.c0, vt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((CASE WHEN vt0.c0 THEN CASE WHEN rt0.c1 THEN vt0.c0 END WHEN TRIM(rt0.c2) THEN (- (rt0.c2)) WHEN ((rt0.c2)<=(vt0.lid)) THEN (((rt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) ELSE ((((((((rt0.c0)AND('1241445355')))AND(rt0.c2)))AND(rt0.c0)))AND(x'')) END) ISNULL)) GROUP BY vt0.lid, rt0.c0, vt0.c1, vt0.c0, rt0.c2;
SELECT vt0.lid, rt0.c0, vt0.c1, vt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c0, vt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((TOTAL(GROUP_CONCAT(rt0.c2)))%(GROUP_CONCAT(COUNT(x'c974')))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((TOTAL(GROUP_CONCAT(rt0.c2)))%(GROUP_CONCAT(COUNT(x'c974')))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((TOTAL(GROUP_CONCAT(rt0.c2)))%(GROUP_CONCAT(COUNT(x'c974'))))) ISNULL);
SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE (vt0.c1) UNION ALL SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (1955872060) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (1955872060))) UNION SELECT DISTINCT * FROM rt0 WHERE (((1955872060) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c1 FROM rt0 INNER JOIN vt0 ON ((~ (vt0.lid)) IN ()) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM rt0 INNER JOIN vt0 ON ((~ (vt0.lid)) IN ()) WHERE ((((vt0.lid)) NOT BETWEEN (('')) AND ((TRIM(vt0.lid))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM rt0 INNER JOIN vt0 ON ((~ (vt0.lid)) IN ()) WHERE ((NOT ((((vt0.lid)) NOT BETWEEN (('')) AND ((TRIM(vt0.lid))))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM rt0 INNER JOIN vt0 ON ((~ (vt0.lid)) IN ()) WHERE ((((((vt0.lid)) NOT BETWEEN (('')) AND ((TRIM(vt0.lid))))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM rt0 INNER JOIN vt0 ON ((~ (vt0.lid)) IN ()) GROUP BY vt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.lid, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.lid, vt0.c1;
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.lid, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.lid, vt0.c1 HAVING (NOT (COUNT(GROUP_CONCAT(vt0.c1)))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.lid, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.lid, vt0.c1 HAVING (NOT ((NOT (COUNT(GROUP_CONCAT(vt0.c1)))))) UNION ALL SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.lid, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.lid, vt0.c1 HAVING (((NOT (COUNT(GROUP_CONCAT(vt0.c1))))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (((vt0.c0 IN ()) IN (((((vt0.c0)AND(rt0.c2)))AND(rt0.c0))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (((vt0.c0 IN ()) IN (((((vt0.c0)AND(rt0.c2)))AND(rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c0 IN ()) IN (((((vt0.c0)AND(rt0.c2)))AND(rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((vt0.lid)AND(rt0.c1)))OR(rt0.c1)))OR(((rt0.c1)>(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((((vt0.lid)AND(rt0.c1)))OR(rt0.c1)))OR(((rt0.c1)>(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((((vt0.lid)AND(rt0.c1)))OR(rt0.c1)))OR(((rt0.c1)>(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c0)LIKE(rt0.c0)) COLLATE RTRIM) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c0)LIKE(rt0.c0)) COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c0)LIKE(rt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING INSTR(CASE WHEN vt0.lid THEN TOTAL(0.15887458397833287) WHEN COUNT(vt0.c1) THEN COUNT(MAX(MIN(AVG(vt0.c0)))) WHEN AVG(vt0.c1) THEN TOTAL(vt0.lid) ELSE vt0.c0 END, MAX(COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (INSTR(CASE WHEN vt0.lid THEN TOTAL(0.15887458397833287) WHEN COUNT(vt0.c1) THEN COUNT(MAX(MIN(AVG(vt0.c0)))) WHEN AVG(vt0.c1) THEN TOTAL(vt0.lid) ELSE vt0.c0 END, MAX(COUNT(*))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((INSTR(CASE WHEN vt0.lid THEN TOTAL(0.15887458397833287) WHEN COUNT(vt0.c1) THEN COUNT(MAX(MIN(AVG(vt0.c0)))) WHEN AVG(vt0.c1) THEN TOTAL(vt0.lid) ELSE vt0.c0 END, MAX(COUNT(*)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1, 0x40f1ccb2, vt0.lid)) NOT BETWEEN ((0Xffffffff9466795a, ((vt0.c0) IS TRUE), ((vt0.c1)<<(vt0.lid)))) AND (((vt0.c1 IN ()), ((vt0.lid) IS FALSE), ((vt0.c0)IS NOT(vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c1, 0X40f1ccb2, vt0.lid)) NOT BETWEEN ((0xffffffff9466795a, ((vt0.c0) IS TRUE), ((vt0.c1)<<(vt0.lid)))) AND (((vt0.c1 IN ()), ((vt0.lid) IS FALSE), ((vt0.c0)IS NOT(vt0.c0)))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c1, 0X40f1ccb2, vt0.lid)) NOT BETWEEN ((0Xffffffff9466795a, ((vt0.c0) IS TRUE), ((vt0.c1)<<(vt0.lid)))) AND (((vt0.c1 IN ()), ((vt0.lid) IS FALSE), ((vt0.c0)IS NOT(vt0.c0)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0)<(-1553703545)), ((rt0.c1)<<(rt0.c0)), 1.089588402E9))<=((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END, CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, (~ (rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c0)<(-1553703545)), ((rt0.c1)<<(rt0.c0)), 1.089588402E9))<=((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END, CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, (~ (rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c0)<(-1553703545)), ((rt0.c1)<<(rt0.c0)), 1.089588402E9))<=((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END, CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, (~ (rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.lid, vt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, vt0.c1;
SELECT vt0.lid, vt0.c1 FROM vt0, rt0 WHERE (INSTR((rt0.c1 IN ()), ((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) GROUP BY vt0.lid, vt0.c1 UNION SELECT ALL vt0.lid, vt0.c1 FROM vt0, rt0 WHERE ((NOT (INSTR((rt0.c1 IN ()), ((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))) GROUP BY vt0.lid, vt0.c1 UNION SELECT vt0.lid, vt0.c1 FROM vt0, rt0 WHERE (((INSTR((rt0.c1 IN ()), ((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) ISNULL)) GROUP BY vt0.lid, vt0.c1;
SELECT ALL vt0.lid, vt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, vt0.c1;
SELECT rt0.c1, rt0.c0, vt0.c1, vt0.c0, rt0.c2, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0, rt0.c2, vt0.lid;
SELECT rt0.c1, rt0.c0, vt0.c1, vt0.c0, rt0.c2, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0, rt0.c2, vt0.lid HAVING SUM(vt0.c1) COLLATE RTRIM UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c1, vt0.c0, rt0.c2, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0, rt0.c2, vt0.lid HAVING (NOT (SUM(vt0.c1) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c1, vt0.c0, rt0.c2, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0, rt0.c2, vt0.lid HAVING ((SUM(vt0.c1) COLLATE RTRIM) ISNULL);
SELECT rt0.c1, rt0.c0, vt0.c1, vt0.c0, rt0.c2, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0, rt0.c2, vt0.lid;
SELECT rt0.c1, rt0.c0, vt0.c1, vt0.c0, rt0.c2, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0, rt0.c2, vt0.lid HAVING SUM(vt0.c1) COLLATE RTRIM UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c1, vt0.c0, rt0.c2, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0, rt0.c2, vt0.lid HAVING (NOT (SUM(vt0.c1) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt0.c1, vt0.c0, rt0.c2, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0, rt0.c2, vt0.lid HAVING ((SUM(vt0.c1) COLLATE RTRIM) ISNULL);
SELECT rt0.c1, rt0.c0, vt0.c1, vt0.c0, rt0.c2, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c1, vt0.c0, rt0.c2, vt0.lid;
SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE (((((vt0.c0)OR((+ (vt0.c1)))))AND((((vt0.c0, vt0.c1, vt0.lid, vt0.c0, vt0.c1)) BETWEEN ((vt0.lid, NULL, vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.lid, vt0.c0, vt0.lid, vt0.c0)))))) UNION ALL SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)OR((+ (vt0.c1)))))AND((((vt0.c0, vt0.c1, vt0.lid, vt0.c0, vt0.c1)) BETWEEN ((vt0.lid, NULL, vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.lid, vt0.c0, vt0.lid, vt0.c0)))))))) UNION ALL SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE (((((((vt0.c0)OR((+ (vt0.c1)))))AND((((vt0.c0, vt0.c1, vt0.lid, vt0.c0, vt0.c1)) BETWEEN ((vt0.lid, NULL, vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.lid, vt0.c0, vt0.lid, vt0.c0)))))) ISNULL));
SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c2, rt0.c1, vt0.lid, vt0.c0 FROM vt0 NOT INDEXED RIGHT OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY) BETWEEN ((NOT (rt0.c1))) AND (((vt0.c0)LIKE(vt0.c0))));
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c2, rt0.c1, vt0.lid, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY) BETWEEN ((NOT (rt0.c1))) AND (((vt0.c0)LIKE(vt0.c0)))) WHERE (((rt0.c0 COLLATE RTRIM)/(((((vt0.c1)OR(rt0.c1)))AND(vt0.lid))))) UNION SELECT DISTINCT vt0.c1, rt0.c0, rt0.c2, rt0.c1, vt0.lid, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY) BETWEEN ((NOT (rt0.c1))) AND (((vt0.c0)LIKE(vt0.c0)))) WHERE ((NOT (((rt0.c0 COLLATE RTRIM)/(((((vt0.c1)OR(rt0.c1)))AND(vt0.lid))))))) UNION SELECT DISTINCT vt0.c1, rt0.c0, rt0.c2, rt0.c1, vt0.lid, vt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY) BETWEEN ((NOT (rt0.c1))) AND (((vt0.c0)LIKE(vt0.c0)))) WHERE (((((rt0.c0 COLLATE RTRIM)/(((((vt0.c1)OR(rt0.c1)))AND(vt0.lid))))) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c2, rt0.c1, vt0.lid, vt0.c0 FROM vt0 NOT INDEXED RIGHT OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY) BETWEEN ((NOT (rt0.c1))) AND (((vt0.c0)LIKE(vt0.c0))));
SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1;
SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE ((- (vt0.c0 COLLATE RTRIM))) GROUP BY vt0.lid, vt0.c0, vt0.c1 UNION SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((- (vt0.c0 COLLATE RTRIM))))) GROUP BY vt0.lid, vt0.c0, vt0.c1 UNION SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE ((((- (vt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.lid, vt0.c0, vt0.c1;
SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING 1774514979 UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (1774514979)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((1774514979) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING 1774514979 UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (1774514979)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((1774514979) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((- ((('/ 4Uc')<>(rt0.c1))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((- ((('/ 4Uc')<>(rt0.c1))))))) UNION ALL SELECT * FROM rt0 WHERE ((((- ((('/ 4Uc')<>(rt0.c1))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)) IN ('-1357336955'))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)) IN ('-1357336955'))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)) IN ('-1357336955'))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c0;
SELECT vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((((vt0.lid) IS TRUE) IN ())) GROUP BY vt0.c1, vt0.c0, rt0.c0 UNION SELECT vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT ((((vt0.lid) IS TRUE) IN ())))) GROUP BY vt0.c1, vt0.c0, rt0.c0 UNION SELECT vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((((((vt0.lid) IS TRUE) IN ())) ISNULL)) GROUP BY vt0.c1, vt0.c0, rt0.c0;
SELECT ALL vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c0;
SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1;
SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1 HAVING MIN(MIN(COUNT(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1 HAVING (NOT (MIN(MIN(COUNT(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(COUNT(*))))))))) UNION ALL SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1 HAVING ((MIN(MIN(COUNT(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((((NOT (rt0.c1)))*(((vt0.lid) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((NOT (rt0.c1)))*(((vt0.lid) NOT BETWEEN (rt0.c2) AND (rt0.c2))))))) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((((((NOT (rt0.c1)))*(((vt0.lid) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ISNULL));
SELECT ALL rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0 NOT INDEXED, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (CHAR(vt0.c0)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((NOT (CHAR(vt0.c0)))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((NOT (CHAR(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0 NOT INDEXED, vt0;
SELECT vt0.lid FROM vt0, rt0 GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0, rt0 WHERE ('-1841403893') GROUP BY vt0.lid UNION SELECT vt0.lid FROM vt0, rt0 WHERE ((NOT ('-1841403893'))) GROUP BY vt0.lid UNION SELECT vt0.lid FROM vt0, rt0 WHERE ((('-1841403893') ISNULL)) GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0, rt0 GROUP BY vt0.lid;
SELECT vt0.c1, rt0.c2, vt0.lid, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2, vt0.lid, rt0.c1, vt0.c0, rt0.c0;
SELECT vt0.c1, rt0.c2, vt0.lid, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2, vt0.lid, rt0.c1, vt0.c0, rt0.c0 HAVING ((((GROUP_CONCAT(AVG(COUNT(vt0.c0)))) IS FALSE))>>(TOTAL(-936632323))) UNION ALL SELECT vt0.c1, rt0.c2, vt0.lid, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2, vt0.lid, rt0.c1, vt0.c0, rt0.c0 HAVING (NOT (((((GROUP_CONCAT(AVG(COUNT(vt0.c0)))) IS FALSE))>>(TOTAL(-936632323))))) UNION ALL SELECT ALL vt0.c1, rt0.c2, vt0.lid, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2, vt0.lid, rt0.c1, vt0.c0, rt0.c0 HAVING ((((((GROUP_CONCAT(AVG(COUNT(vt0.c0)))) IS FALSE))>>(TOTAL(-936632323)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((CASE WHEN '-1805223590' THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 WHEN vt0.lid THEN vt0.c1 END, CASE WHEN vt0.lid THEN vt0.c1 ELSE vt0.c0 END, vt0.lid COLLATE NOCASE)) AND ((vt0.lid, vt0.c0 COLLATE RTRIM, (vt0.lid IN (vt0.lid)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((CASE WHEN '-1805223590' THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 WHEN vt0.lid THEN vt0.c1 END, CASE WHEN vt0.lid THEN vt0.c1 ELSE vt0.c0 END, vt0.lid COLLATE NOCASE)) AND ((vt0.lid, vt0.c0 COLLATE RTRIM, (vt0.lid IN (vt0.lid)))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((CASE WHEN '-1805223590' THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 WHEN vt0.lid THEN vt0.c1 END, CASE WHEN vt0.lid THEN vt0.c1 ELSE vt0.c0 END, vt0.lid COLLATE NOCASE)) AND ((vt0.lid, vt0.c0 COLLATE RTRIM, (vt0.lid IN (vt0.lid)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.lid, vt0.c1, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT vt0.lid, vt0.c1, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE (CASE vt0.lid COLLATE RTRIM  WHEN (rt0.c2 IN ()) THEN -1.265561842E9 COLLATE BINARY ELSE CAST(vt0.c0 AS BLOB) END) UNION SELECT DISTINCT vt0.lid, vt0.c1, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (CASE vt0.lid COLLATE RTRIM  WHEN (rt0.c2 IN ()) THEN -1.265561842E9 COLLATE BINARY ELSE CAST(vt0.c0 AS BLOB) END))) UNION SELECT DISTINCT vt0.lid, vt0.c1, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((CASE vt0.lid COLLATE RTRIM  WHEN (rt0.c2 IN ()) THEN -1.265561842E9 COLLATE BINARY ELSE CAST(vt0.c0 AS BLOB) END) ISNULL));
SELECT DISTINCT vt0.lid, vt0.c1, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt0, rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (NULL) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (((((+ (rt0.c0))))<=((((vt0.c0)!=(rt0.c1)))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (((((+ (rt0.c0))))<=((((vt0.c0)<>(rt0.c1)))))))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((((((+ (rt0.c0))))<=((((vt0.c0)<>(rt0.c1)))))) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)) AS TEXT)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)) AS TEXT)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.lid, rt0.c2, vt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c2, vt0.c1;
SELECT vt0.lid, rt0.c2, vt0.c1 FROM vt0, rt0 WHERE (((((((((((vt0.c0)&(0.28882373743192813)))OR(rt0.c1 COLLATE BINARY)))OR(vt0.lid COLLATE RTRIM)))AND(CASE rt0.c2  WHEN x'2f6f' THEN rt0.c0 ELSE rt0.c1 END)))AND((NOT (vt0.c0))))) GROUP BY vt0.lid, rt0.c2, vt0.c1 UNION SELECT vt0.lid, rt0.c2, vt0.c1 FROM vt0, rt0 WHERE ((NOT (((((((((((vt0.c0)&(0.28882373743192813)))OR(rt0.c1 COLLATE BINARY)))OR(vt0.lid COLLATE RTRIM)))AND(CASE rt0.c2  WHEN x'2f6f' THEN rt0.c0 ELSE rt0.c1 END)))AND((NOT (vt0.c0))))))) GROUP BY vt0.lid, rt0.c2, vt0.c1 UNION SELECT vt0.lid, rt0.c2, vt0.c1 FROM vt0, rt0 WHERE (((((((((((((vt0.c0)&(0.28882373743192813)))OR(rt0.c1 COLLATE BINARY)))OR(vt0.lid COLLATE RTRIM)))AND(CASE rt0.c2  WHEN x'2f6f' THEN rt0.c0 ELSE rt0.c1 END)))AND((NOT (vt0.c0))))) ISNULL)) GROUP BY vt0.lid, rt0.c2, vt0.c1;
SELECT ALL vt0.lid, rt0.c2, vt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c2, vt0.c1;
SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2 HAVING (((vt0.c0)) BETWEEN ((COUNT(*))) AND ((COUNT(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2 HAVING (NOT ((((vt0.c0)) BETWEEN ((COUNT(*))) AND ((COUNT(rt0.c0)))))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2 HAVING (((((vt0.c0)) BETWEEN ((COUNT(*))) AND ((COUNT(rt0.c0))))) ISNULL);
SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2 HAVING (((vt0.c0)) BETWEEN ((COUNT(*))) AND ((COUNT(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2 HAVING (NOT ((((vt0.c0)) BETWEEN ((COUNT(*))) AND ((COUNT(rt0.c0)))))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2 HAVING (((((vt0.c0)) BETWEEN ((COUNT(*))) AND ((COUNT(rt0.c0))))) ISNULL);
SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c2;
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((vt0.c0)>(vt0.c0)) IN ())) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c0)>(vt0.c0)) IN ())))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((((vt0.c0)>(vt0.c0)) IN ())) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.lid, vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c0)-(x'af1e')))OR((+ (rt0.c0)))))AND((NOT (rt0.c0))));
SELECT DISTINCT vt0.c1, vt0.lid, vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c0)-(x'af1e')))OR((+ (rt0.c0)))))AND((NOT (rt0.c0)))) WHERE (CASE WHEN UPPER(DISTINCT rt0.c0) THEN 0.6995000829047416 WHEN json_patch(vt0.c0, vt0.c0) THEN ((vt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.lid)) WHEN vt0.lid THEN ((rt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) END) UNION SELECT DISTINCT vt0.c1, vt0.lid, vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c0)-(x'af1e')))OR((+ (rt0.c0)))))AND((NOT (rt0.c0)))) WHERE ((NOT (CASE WHEN UPPER(DISTINCT rt0.c0) THEN 0.6995000829047416 WHEN json_patch(vt0.c0, vt0.c0) THEN ((vt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.lid)) WHEN vt0.lid THEN ((rt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) END))) UNION SELECT DISTINCT vt0.c1, vt0.lid, vt0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c0)-(x'af1e')))OR((+ (rt0.c0)))))AND((NOT (rt0.c0)))) WHERE (((CASE WHEN UPPER(DISTINCT rt0.c0) THEN 0.6995000829047416 WHEN json_patch(vt0.c0, vt0.c0) THEN ((vt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.lid)) WHEN vt0.lid THEN ((rt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) END) ISNULL));
SELECT ALL vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid;
SELECT vt0.c0, vt0.lid FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))==(0.7579510482185627))) GROUP BY vt0.c0, vt0.lid UNION SELECT vt0.c0, vt0.lid FROM vt0 WHERE ((NOT (((CAST(vt0.c1 AS NUMERIC))=(0.7579510482185627))))) GROUP BY vt0.c0, vt0.lid UNION SELECT vt0.c0, vt0.lid FROM vt0 WHERE (((((CAST(vt0.c1 AS NUMERIC))==(0.7579510482185627))) ISNULL)) GROUP BY vt0.c0, vt0.lid;
SELECT ALL vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE ((('}2') NOT BETWEEN ((((rt0.c2))>=((rt0.c0)))) AND ((~ (rt0.c1))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT ((('}2') NOT BETWEEN ((((rt0.c2))>=((rt0.c0)))) AND ((~ (rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((((('}2') NOT BETWEEN ((((rt0.c2))>=((rt0.c0)))) AND ((~ (rt0.c1))))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1, rt0.c0, rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((rt0.c1)AND(((vt0.lid)+(vt0.c1)))))AND(((rt0.c1) IS FALSE))))AND(((vt0.lid) NOT BETWEEN (vt0.c0) AND (0.6933088258766693)))))AND((vt0.c1 IN ())));
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1, rt0.c0, rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((rt0.c1)AND(((vt0.lid)+(vt0.c1)))))AND(((rt0.c1) IS FALSE))))AND(((vt0.lid) NOT BETWEEN (vt0.c0) AND (0.6933088258766693)))))AND((vt0.c1 IN ()))) WHERE (INSTR(vt0.c0, (rt0.c2 IN ()))) UNION SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1, rt0.c0, rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((rt0.c1)AND(((vt0.lid)+(vt0.c1)))))AND(((rt0.c1) IS FALSE))))AND(((vt0.lid) NOT BETWEEN (vt0.c0) AND (0.6933088258766693)))))AND((vt0.c1 IN ()))) WHERE ((NOT (INSTR(vt0.c0, (rt0.c2 IN ()))))) UNION SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1, rt0.c0, rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((rt0.c1)AND(((vt0.lid)+(vt0.c1)))))AND(((rt0.c1) IS FALSE))))AND(((vt0.lid) NOT BETWEEN (vt0.c0) AND (0.6933088258766693)))))AND((vt0.c1 IN ()))) WHERE (((INSTR(vt0.c0, (rt0.c2 IN ()))) ISNULL));
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1, rt0.c0, rt0.c2, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((rt0.c1)AND(((vt0.lid)+(vt0.c1)))))AND(((rt0.c1) IS FALSE))))AND(((vt0.lid) NOT BETWEEN (vt0.c0) AND (0.6933088258766693)))))AND((vt0.c1 IN ())));
SELECT ALL vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid;
SELECT ALL vt0.c1, vt0.lid FROM vt0 WHERE ((+ ((vt0.c1 IN ())))) GROUP BY vt0.c1, vt0.lid UNION SELECT ALL vt0.c1, vt0.lid FROM vt0 WHERE ((NOT ((+ ((vt0.c1 IN ())))))) GROUP BY vt0.c1, vt0.lid UNION SELECT ALL vt0.c1, vt0.lid FROM vt0 WHERE ((((+ ((vt0.c1 IN ())))) ISNULL)) GROUP BY vt0.c1, vt0.lid;
SELECT ALL vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING CASE WHEN (((TOTAL(vt0.c0), TOTAL(MAX(MAX(COUNT(vt0.c0)))), AVG(vt0.lid)))>((GROUP_CONCAT(vt0.c0), AVG(vt0.c1), COUNT(vt0.c1)))) THEN ((((vt0.lid)OR(COUNT(AVG(MAX(vt0.c1))))))AND(MAX(COUNT(vt0.lid)))) WHEN CAST(vt0.c1 AS INTEGER) THEN json_extract(MIN(vt0.lid), COUNT(TOTAL(COUNT(GROUP_CONCAT(COUNT(*)))))) WHEN CAST(SUM(vt0.c1) AS TEXT) THEN AVG(GROUP_CONCAT(COUNT(vt0.lid))) ELSE AVG(COUNT(*)) END UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (CASE WHEN (((TOTAL(vt0.c0), TOTAL(MAX(MAX(COUNT(vt0.c0)))), AVG(vt0.lid)))>((GROUP_CONCAT(vt0.c0), AVG(vt0.c1), COUNT(vt0.c1)))) THEN ((((vt0.lid)OR(COUNT(AVG(MAX(vt0.c1))))))AND(MAX(COUNT(vt0.lid)))) WHEN CAST(vt0.c1 AS INTEGER) THEN json_extract(MIN(vt0.lid), COUNT(TOTAL(COUNT(GROUP_CONCAT(COUNT(*)))))) WHEN CAST(SUM(vt0.c1) AS TEXT) THEN AVG(GROUP_CONCAT(COUNT(vt0.lid))) ELSE AVG(COUNT(*)) END)) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((CASE WHEN (((TOTAL(vt0.c0), TOTAL(MAX(MAX(COUNT(vt0.c0)))), AVG(vt0.lid)))>((GROUP_CONCAT(vt0.c0), AVG(vt0.c1), COUNT(vt0.c1)))) THEN ((((vt0.lid)OR(COUNT(AVG(MAX(vt0.c1))))))AND(MAX(COUNT(vt0.lid)))) WHEN CAST(vt0.c1 AS INTEGER) THEN json_extract(MIN(vt0.lid), COUNT(TOTAL(COUNT(GROUP_CONCAT(COUNT(*)))))) WHEN CAST(SUM(vt0.c1) AS TEXT) THEN AVG(GROUP_CONCAT(COUNT(vt0.lid))) ELSE AVG(COUNT(*)) END) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.lid) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.lid))) UNION ALL SELECT ALL * FROM vt0 WHERE (((vt0.lid) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN (vt0.c1, (vt0.lid IN (vt0.c0, vt0.lid, vt0.c1))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((CAST(vt0.c0 AS INTEGER) IN (vt0.c1, (vt0.lid IN (vt0.c0, vt0.lid, vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((CAST(vt0.c0 AS INTEGER) IN (vt0.c1, (vt0.lid IN (vt0.c0, vt0.lid, vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c1, vt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c2 FROM vt0 NOT INDEXED, rt0 WHERE (((CAST(rt0.c0 AS REAL))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) GROUP BY rt0.c1, vt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c2 UNION SELECT rt0.c1, vt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((CAST(rt0.c0 AS REAL))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))))) GROUP BY rt0.c1, vt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c2 UNION SELECT rt0.c1, vt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((((CAST(rt0.c0 AS REAL))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c1, vt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(GROUP_CONCAT(MIN(AVG(vt0.c0))) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(GROUP_CONCAT(MIN(AVG(vt0.c0))) COLLATE RTRIM))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(GROUP_CONCAT(MIN(AVG(vt0.c0))) COLLATE RTRIM)) ISNULL);
SELECT ALL SUM(CASE vt0.c1 COLLATE NOCASE  WHEN ((vt0.lid)IS NOT(rt0.c0)) THEN ((NULL)&(vt0.lid)) ELSE CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 END END) FROM vt0, rt0;
SELECT vt0.lid, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0;
SELECT ALL vt0.lid, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((((vt0.lid, rt0.c0, rt0.c1)) BETWEEN ((((rt0.c1)LIKE(vt0.c1)), ((vt0.lid) IS TRUE), rt0.c1 COLLATE RTRIM)) AND (((((vt0.lid))>((vt0.lid))), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)), ((x'') NOT NULL))))) UNION ALL SELECT ALL vt0.lid, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT ((((vt0.lid, rt0.c0, rt0.c1)) BETWEEN ((((rt0.c1)LIKE(vt0.c1)), ((vt0.lid) IS TRUE), rt0.c1 COLLATE RTRIM)) AND (((((vt0.lid))>((vt0.lid))), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)), ((x'') NOT NULL))))))) UNION ALL SELECT vt0.lid, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((((((vt0.lid, rt0.c0, rt0.c1)) BETWEEN ((((rt0.c1)LIKE(vt0.c1)), ((vt0.lid) IS TRUE), rt0.c1 COLLATE RTRIM)) AND (((((vt0.lid))>((vt0.lid))), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)), ((x'') NOT NULL))))) ISNULL));
SELECT vt0.lid, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, vt0.c1, rt0.c0, rt0.c1, vt0.lid FROM vt0, rt0;
SELECT DISTINCT vt0.c0, vt0.c1, rt0.c0, rt0.c1, vt0.lid FROM vt0, rt0 WHERE (((((rt0.c0) BETWEEN (x'') AND (rt0.c1)))-(CAST(vt0.lid AS TEXT)))) UNION SELECT DISTINCT vt0.c0, vt0.c1, rt0.c0, rt0.c1, vt0.lid FROM vt0, rt0 WHERE ((NOT (((((rt0.c0) BETWEEN (x'') AND (rt0.c1)))-(CAST(vt0.lid AS TEXT)))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, rt0.c0, rt0.c1, vt0.lid FROM vt0, rt0 WHERE (((((((rt0.c0) BETWEEN (x'') AND (rt0.c1)))-(CAST(vt0.lid AS TEXT)))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, rt0.c0, rt0.c1, vt0.lid FROM vt0, rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c2 IN ()))OR(((rt0.c1)IS(rt0.c2)))))AND(rt0.c1))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c2 IN ()))OR(((rt0.c1)IS(rt0.c2)))))AND(rt0.c1))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((rt0.c2 IN ()))OR(((rt0.c1)IS(rt0.c2)))))AND(rt0.c1))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.lid, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.lid, rt0.c0;
SELECT ALL vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.lid, rt0.c0 FROM vt0, rt0 NOT INDEXED GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.lid, rt0.c0 HAVING CAST(GROUP_CONCAT(rt0.c2) AS BLOB) UNION ALL SELECT vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.lid, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.lid, rt0.c0 HAVING (NOT (CAST(GROUP_CONCAT(rt0.c2) AS BLOB))) UNION ALL SELECT vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.lid, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.lid, rt0.c0 HAVING ((CAST(GROUP_CONCAT(rt0.c2) AS BLOB)) ISNULL);
SELECT ALL vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.lid, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.lid, rt0.c0;
SELECT ALL vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.lid, rt0.c0 FROM vt0, rt0 NOT INDEXED GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.lid, rt0.c0 HAVING CAST(GROUP_CONCAT(rt0.c2) AS BLOB) UNION ALL SELECT vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.lid, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.lid, rt0.c0 HAVING (NOT (CAST(GROUP_CONCAT(rt0.c2) AS BLOB))) UNION ALL SELECT vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.lid, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.lid, rt0.c0 HAVING ((CAST(GROUP_CONCAT(rt0.c2) AS BLOB)) ISNULL);
SELECT ALL vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.lid, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.lid, rt0.c0;
SELECT ALL SUM(rt0.c2) FROM rt0 ORDER BY ((((('-243946890')!=(rt0.c0))))>((CAST(rt0.c2 AS NUMERIC)))) DESC, CAST(((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(x'')))AND(rt0.c0)) AS INTEGER) ASC;
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE ((- ((- (vt0.c1))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT ((- ((- (vt0.c1))))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((((- ((- (vt0.c1))))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (IFNULL(191914466, '1887163797') COLLATE BINARY) UNION SELECT DISTINCT vt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (IFNULL(191914466, '1887163797') COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((IFNULL(191914466, '1887163797') COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2 FROM vt0, rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c0)<<(rt0.c2)))) AND ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((((rt0.c0)<<(rt0.c2)))) AND ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((((rt0.c0)<<(rt0.c2)))) AND ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)LIKE(CASE rt0.c1  WHEN '-1970440717' THEN rt0.c1 ELSE rt0.c0 END))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE BINARY)LIKE(CASE rt0.c1  WHEN '-1970440717' THEN rt0.c1 ELSE rt0.c0 END))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c2 COLLATE BINARY)LIKE(CASE rt0.c1  WHEN '-1970440717' THEN rt0.c1 ELSE rt0.c0 END))) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((rt0.c2) IS FALSE)) NOT BETWEEN ((vt0.lid IN (rt0.c2))) AND (((((((((((((x'2d94')AND(vt0.c0)))AND(vt0.lid)))OR(vt0.lid)))OR(vt0.c1)))OR(rt0.c2)))AND(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((rt0.c2) IS FALSE)) NOT BETWEEN ((vt0.lid IN (rt0.c2))) AND (((((((((((((x'2d94')AND(vt0.c0)))AND(vt0.lid)))OR(vt0.lid)))OR(vt0.c1)))OR(rt0.c2)))AND(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((rt0.c2) IS FALSE)) NOT BETWEEN ((vt0.lid IN (rt0.c2))) AND (((((((((((((x'2d94')AND(vt0.c0)))AND(vt0.lid)))OR(vt0.lid)))OR(vt0.c1)))OR(rt0.c2)))AND(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt0.lid, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1;
SELECT ALL vt0.lid, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1 FROM vt0, rt0 WHERE (vt0.c0 COLLATE NOCASE COLLATE NOCASE) GROUP BY vt0.lid, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1 UNION SELECT ALL vt0.lid, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((NOT (vt0.c0 COLLATE NOCASE COLLATE NOCASE))) GROUP BY vt0.lid, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1 UNION SELECT ALL vt0.lid, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1 FROM vt0, rt0 WHERE (((vt0.c0 COLLATE NOCASE COLLATE NOCASE) ISNULL)) GROUP BY vt0.lid, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1;
SELECT ALL vt0.lid, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1;
SELECT rt0.c2, vt0.lid, rt0.c1 FROM vt0 CROSS JOIN rt0 ON rt0.c2 GROUP BY rt0.c2, vt0.lid, rt0.c1;
SELECT rt0.c2, vt0.lid, rt0.c1 FROM vt0 CROSS JOIN rt0 ON rt0.c2 GROUP BY rt0.c2, vt0.lid, rt0.c1 HAVING MIN(COUNT(SUM(rt0.c1))) UNION ALL SELECT rt0.c2, vt0.lid, rt0.c1 FROM vt0 CROSS JOIN rt0 ON rt0.c2 GROUP BY rt0.c2, vt0.lid, rt0.c1 HAVING (NOT (MIN(COUNT(SUM(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, vt0.lid, rt0.c1 FROM vt0 CROSS JOIN rt0 ON rt0.c2 GROUP BY rt0.c2, vt0.lid, rt0.c1 HAVING ((MIN(COUNT(SUM(rt0.c1)))) ISNULL);
SELECT vt0.lid, vt0.c1, rt0.c1 FROM vt0, rt0;
SELECT vt0.lid, vt0.c1, rt0.c1 FROM vt0, rt0 WHERE (vt0.lid) UNION ALL SELECT vt0.lid, vt0.c1, rt0.c1 FROM vt0, rt0 WHERE ((NOT (vt0.lid))) UNION ALL SELECT vt0.lid, vt0.c1, rt0.c1 FROM vt0, rt0 WHERE (((vt0.lid) ISNULL));
SELECT vt0.lid, vt0.c1, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1 IN ())) IS TRUE)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c1 IN ())) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1 IN ())) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 NOT INDEXED WHERE ((rt0.c2 IN ()) COLLATE NOCASE) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((rt0.c2 IN ()) COLLATE NOCASE))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c2 IN ()) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT vt0.c1, rt0.c0, rt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c1, rt0.c0, rt0.c1, vt0.c0;
SELECT vt0.c1, rt0.c0, rt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c1, rt0.c0, rt0.c1, vt0.c0 HAVING 0.6571897820146293 UNION ALL SELECT vt0.c1, rt0.c0, rt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c1, rt0.c0, rt0.c1, vt0.c0 HAVING (NOT (0.6571897820146293)) UNION ALL SELECT vt0.c1, rt0.c0, rt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c1, rt0.c0, rt0.c1, vt0.c0 HAVING ((0.6571897820146293) ISNULL);
SELECT vt0.c1, rt0.c0, rt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c1, rt0.c0, rt0.c1, vt0.c0;
SELECT vt0.c1, rt0.c0, rt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c1, rt0.c0, rt0.c1, vt0.c0 HAVING 0.6571897820146293 UNION ALL SELECT vt0.c1, rt0.c0, rt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c1, rt0.c0, rt0.c1, vt0.c0 HAVING (NOT (0.6571897820146293)) UNION ALL SELECT vt0.c1, rt0.c0, rt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c1, rt0.c0, rt0.c1, vt0.c0 HAVING ((0.6571897820146293) ISNULL);
SELECT vt0.c1, rt0.c0, rt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c1, rt0.c0, rt0.c1, vt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c2)>=(((rt0.c0) IS FALSE)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c2)>=(((rt0.c0) IS FALSE)))))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c2)>=(((rt0.c0) IS FALSE)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt0.lid FROM rt0, vt0;
SELECT DISTINCT vt0.lid FROM rt0, vt0 WHERE (CASE ((((rt0.c1)AND(rt0.c2)))OR(vt0.c0))  WHEN ((((rt0.c2)OR(vt0.c0)))OR(rt0.c0)) THEN CASE vt0.lid  WHEN rt0.c2 THEN rt0.c1 END WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.lid WHEN rt0.c0 THEN vt0.lid END THEN IFNULL(DISTINCT vt0.c1, rt0.c2) WHEN (rt0.c2 IN ()) THEN (((rt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c1))) END) UNION SELECT DISTINCT vt0.lid FROM rt0, vt0 WHERE ((NOT (CASE ((((rt0.c1)AND(rt0.c2)))OR(vt0.c0))  WHEN ((((rt0.c2)OR(vt0.c0)))OR(rt0.c0)) THEN CASE vt0.lid  WHEN rt0.c2 THEN rt0.c1 END WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.lid WHEN rt0.c0 THEN vt0.lid END THEN IFNULL(DISTINCT vt0.c1, rt0.c2) WHEN (rt0.c2 IN ()) THEN (((rt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c1))) END))) UNION SELECT DISTINCT vt0.lid FROM rt0, vt0 WHERE (((CASE ((((rt0.c1)AND(rt0.c2)))OR(vt0.c0))  WHEN ((((rt0.c2)OR(vt0.c0)))OR(rt0.c0)) THEN CASE vt0.lid  WHEN rt0.c2 THEN rt0.c1 END WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.lid WHEN rt0.c0 THEN vt0.lid END THEN IFNULL(DISTINCT vt0.c1, rt0.c2) WHEN (rt0.c2 IN ()) THEN (((rt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c1))) END) ISNULL));
SELECT DISTINCT vt0.lid FROM rt0, vt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END IN (CAST(rt0.c2 AS REAL), SQLITE_SOURCE_ID()))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END IN (CAST(rt0.c2 AS REAL), SQLITE_SOURCE_ID()))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END IN (CAST(rt0.c2 AS REAL), SQLITE_SOURCE_ID()))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c0, vt0.lid, rt0.c2, vt0.c1, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.lid, rt0.c2, vt0.c1, vt0.c0, rt0.c1;
SELECT ALL rt0.c0, vt0.lid, rt0.c2, vt0.c1, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.lid, rt0.c2, vt0.c1, vt0.c0, rt0.c1 HAVING TOTAL(((((TOTAL(0.754693134771921))AND(rt0.c0)))AND(AVG(vt0.c1)))) UNION ALL SELECT rt0.c0, vt0.lid, rt0.c2, vt0.c1, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.lid, rt0.c2, vt0.c1, vt0.c0, rt0.c1 HAVING (NOT (TOTAL(((((TOTAL(0.754693134771921))AND(rt0.c0)))AND(AVG(vt0.c1)))))) UNION ALL SELECT ALL rt0.c0, vt0.lid, rt0.c2, vt0.c1, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.lid, rt0.c2, vt0.c1, vt0.c0, rt0.c1 HAVING ((TOTAL(((((TOTAL(0.754693134771921))AND(rt0.c0)))AND(AVG(vt0.c1))))) ISNULL);
SELECT ALL SUM((((rt0.c2)) NOT BETWEEN (((((((((((((('')OR(vt0.lid)))OR(vt0.c0)))OR(vt0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))) AND ((CASE WHEN vt0.c1 THEN rt0.c2 END)))) FROM rt0, vt0;
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE ((((vt0.c1) NOTNULL) IN ())) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT ((((vt0.c1) NOTNULL) IN ())))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((((((vt0.c1) NOTNULL) IN ())) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((ABS(DISTINCT vt0.c0)) BETWEEN (((vt0.c1) IS TRUE)) AND ((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN (('', vt0.c0, vt0.lid)) AND ((vt0.lid, vt0.lid, vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((ABS(DISTINCT vt0.c0)) BETWEEN (((vt0.c1) IS TRUE)) AND ((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN (('', vt0.c0, vt0.lid)) AND ((vt0.lid, vt0.lid, vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((ABS(DISTINCT vt0.c0)) BETWEEN (((vt0.c1) IS TRUE)) AND ((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN (('', vt0.c0, vt0.lid)) AND ((vt0.lid, vt0.lid, vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt0.lid FROM rt0, vt0 GROUP BY vt0.c0, vt0.lid;
SELECT ALL vt0.c0, vt0.lid FROM rt0, vt0 WHERE (rt0.c0) GROUP BY vt0.c0, vt0.lid UNION SELECT ALL vt0.c0, vt0.lid FROM rt0, vt0 WHERE ((NOT (rt0.c0))) GROUP BY vt0.c0, vt0.lid UNION SELECT ALL vt0.c0, vt0.lid FROM rt0, vt0 WHERE (((rt0.c0) ISNULL)) GROUP BY vt0.c0, vt0.lid;
SELECT ALL vt0.c0, vt0.lid FROM rt0, vt0 GROUP BY vt0.c0, vt0.lid;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MAX(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ((NOT (MAX(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (((NOT (MAX(rt0.c1)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MAX(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ((NOT (MAX(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (((NOT (MAX(rt0.c1)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.lid, rt0.c0 FROM vt0, rt0;
SELECT ALL vt0.lid, rt0.c0 FROM vt0, rt0 WHERE (((((((((((((CASE rt0.c2  WHEN vt0.lid THEN vt0.c0 ELSE rt0.c0 END)OR(((vt0.c0) ISNULL))))OR(LOWER(vt0.c0))))AND((+ (rt0.c2)))))OR(vt0.lid)))AND(((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))))OR((((vt0.c0))==((vt0.c0)))))) UNION ALL SELECT ALL vt0.lid, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((((((((((((CASE rt0.c2  WHEN vt0.lid THEN vt0.c0 ELSE rt0.c0 END)OR(((vt0.c0) ISNULL))))OR(LOWER(vt0.c0))))AND((+ (rt0.c2)))))OR(vt0.lid)))AND(((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))))OR((((vt0.c0))==((vt0.c0)))))))) UNION ALL SELECT vt0.lid, rt0.c0 FROM vt0, rt0 WHERE (((((((((((((((CASE rt0.c2  WHEN vt0.lid THEN vt0.c0 ELSE rt0.c0 END)OR(((vt0.c0) ISNULL))))OR(LOWER(vt0.c0))))AND((+ (rt0.c2)))))OR(vt0.lid)))AND(((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))))OR((((vt0.c0))=((vt0.c0)))))) ISNULL));
SELECT vt0.lid, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0;
SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.lid, vt0.c0, vt0.c1))>=((vt0.lid, vt0.c0, vt0.c1))) IN (((((vt0.c0)AND(vt0.lid)))AND(vt0.lid)), x''))) GROUP BY vt0.lid, vt0.c1, vt0.c0 UNION SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.lid, vt0.c0, vt0.c1))>=((vt0.lid, vt0.c0, vt0.c1))) IN (((((vt0.c0)AND(vt0.lid)))AND(vt0.lid)), x''))))) GROUP BY vt0.lid, vt0.c1, vt0.c0 UNION SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.lid, vt0.c0, vt0.c1))>=((vt0.lid, vt0.c0, vt0.c1))) IN (((((vt0.c0)AND(vt0.lid)))AND(vt0.lid)), x''))) ISNULL)) GROUP BY vt0.lid, vt0.c1, vt0.c0;
SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0;
SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING ((MIN(SUM(vt0.c0)))/(AVG(COUNT(*)))) UNION ALL SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING (NOT (((MIN(SUM(vt0.c0)))/(AVG(COUNT(*)))))) UNION ALL SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING ((((MIN(SUM(vt0.c0)))/(AVG(COUNT(*))))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (((((CAST(rt0.c0 AS REAL))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.lid)))))OR(CAST(rt0.c2 AS TEXT)))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (((((CAST(rt0.c0 AS REAL))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.lid)))))OR(CAST(rt0.c2 AS TEXT)))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((((((CAST(rt0.c0 AS REAL))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.lid)))))OR(CAST(rt0.c2 AS TEXT)))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ('a m6+x') UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT ('a m6+x'))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((('a m6+x') ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c1, vt0.c1, vt0.lid, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1, vt0.lid, rt0.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, vt0.c1, vt0.lid, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (CASE WHEN (~ (rt0.c0)) THEN ((rt0.c0) NOTNULL) ELSE 1117124160 COLLATE BINARY END) GROUP BY rt0.c1, vt0.c1, vt0.lid, rt0.c0, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c1, vt0.c1, vt0.lid, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT (CASE WHEN (~ (rt0.c0)) THEN ((rt0.c0) NOTNULL) ELSE 1117124160 COLLATE BINARY END))) GROUP BY rt0.c1, vt0.c1, vt0.lid, rt0.c0, rt0.c2, vt0.c0 UNION SELECT rt0.c1, vt0.c1, vt0.lid, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE (((CASE WHEN (~ (rt0.c0)) THEN ((rt0.c0) NOTNULL) ELSE 1117124160 COLLATE BINARY END) ISNULL)) GROUP BY rt0.c1, vt0.c1, vt0.lid, rt0.c0, rt0.c2, vt0.c0;
SELECT rt0.c1, vt0.c1, vt0.lid, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1, vt0.lid, rt0.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MAX(MAX(COUNT(AVG(rt0.c2)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MAX(MAX(COUNT(AVG(rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MAX(MAX(COUNT(AVG(rt0.c2))))) ISNULL);
SELECT rt0.c0, vt0.c1, vt0.lid, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT rt0.c0, vt0.c1, vt0.lid, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((rt0.c1 IN ())) UNION ALL SELECT ALL rt0.c0, vt0.c1, vt0.lid, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((rt0.c1 IN ())))) UNION ALL SELECT rt0.c0, vt0.c1, vt0.lid, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((rt0.c1 IN ())) ISNULL));
SELECT rt0.c0, vt0.c1, vt0.lid, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))<=(CASE vt0.lid  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN x'' WHEN vt0.c0 THEN vt0.lid ELSE vt0.lid END))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))<=(CASE vt0.lid  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN x'' WHEN vt0.c0 THEN vt0.lid ELSE vt0.lid END))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))<=(CASE vt0.lid  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN x'' WHEN vt0.c0 THEN vt0.lid ELSE vt0.lid END))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((LIKELY(rt0.c2), COALESCE(rt0.c2, rt0.c0), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((((rt0.c2)IS(rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, ((x'1922') BETWEEN (rt0.c0) AND (rt0.c2)))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((LIKELY(rt0.c2), COALESCE(rt0.c2, rt0.c0), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((((rt0.c2)IS(rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, ((x'1922') BETWEEN (rt0.c0) AND (rt0.c2)))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((LIKELY(rt0.c2), COALESCE(rt0.c2, rt0.c0), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((((rt0.c2)IS(rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, ((x'1922') BETWEEN (rt0.c0) AND (rt0.c2)))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING MIN(rt0.c1) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MIN(rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((MIN(rt0.c1)) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING MIN(rt0.c1) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MIN(rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((MIN(rt0.c1)) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))AND(CASE vt0.c1  WHEN vt0.c1 THEN 0Xfffffffff21c7b74 END)))OR(((vt0.c0)<<(vt0.c1))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT (((((((vt0.c0)AND(vt0.c1)))AND(CASE vt0.c1  WHEN vt0.c1 THEN 0Xfffffffff21c7b74 END)))OR(((vt0.c0)<<(vt0.c1))))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c1)))AND(CASE vt0.c1  WHEN vt0.c1 THEN 0Xfffffffff21c7b74 END)))OR(((vt0.c0)<<(vt0.c1))))) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((~ (((rt0.c1)/(''))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((~ (((rt0.c1)/(''))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((~ (((rt0.c1)/(''))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL vt0.c0, rt0.c1, vt0.lid, rt0.c2, vt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt0.lid, rt0.c2, vt0.c1, rt0.c0;
SELECT vt0.c0, rt0.c1, vt0.lid, rt0.c2, vt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((((rt0.c0 IN (rt0.c2))) BETWEEN ((vt0.lid IN (rt0.c0, rt0.c2))) AND (((((((((rt0.c1)OR(vt0.lid)))OR(vt0.c1)))OR(vt0.lid)))AND(rt0.c0))))) GROUP BY vt0.c0, rt0.c1, vt0.lid, rt0.c2, vt0.c1, rt0.c0 UNION SELECT vt0.c0, rt0.c1, vt0.lid, rt0.c2, vt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT ((((rt0.c0 IN (rt0.c2))) BETWEEN ((vt0.lid IN (rt0.c0, rt0.c2))) AND (((((((((rt0.c1)OR(vt0.lid)))OR(vt0.c1)))OR(vt0.lid)))AND(rt0.c0))))))) GROUP BY vt0.c0, rt0.c1, vt0.lid, rt0.c2, vt0.c1, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c1, vt0.lid, rt0.c2, vt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((((((rt0.c0 IN (rt0.c2))) BETWEEN ((vt0.lid IN (rt0.c0, rt0.c2))) AND (((((((((rt0.c1)OR(vt0.lid)))OR(vt0.c1)))OR(vt0.lid)))AND(rt0.c0))))) ISNULL)) GROUP BY vt0.c0, rt0.c1, vt0.lid, rt0.c2, vt0.c1, rt0.c0;
SELECT ALL vt0.c0, rt0.c1, vt0.lid, rt0.c2, vt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt0.lid, rt0.c2, vt0.c1, rt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (~ (AVG(MIN(SUM(vt0.c1))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ((~ (AVG(MIN(SUM(vt0.c1))))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((~ (AVG(MIN(SUM(vt0.c1)))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((((((CASE WHEN vt0.lid THEN vt0.c0 END)AND((+ (0.08552549609891547)))))AND('pW]I纭')))AND(((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(vt0.lid))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((((((CASE WHEN vt0.lid THEN vt0.c0 END)AND((+ (0.08552549609891547)))))AND('pW]I纭')))AND(((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(vt0.lid))))) UNION ALL SELECT * FROM vt0 WHERE (((((((((((CASE WHEN vt0.lid THEN vt0.c0 END)AND((+ (0.08552549609891547)))))AND('pW]I纭')))AND(((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(vt0.lid))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((vt0.c0)LIKE(vt0.lid))))<((((((((((rt0.c2)OR(vt0.lid)))OR(vt0.lid)))AND(rt0.c2)))AND(vt0.c1)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((((((vt0.c0)LIKE(vt0.lid))))<((((((((((rt0.c2)OR(vt0.lid)))OR(vt0.lid)))AND(rt0.c2)))AND(vt0.c1)))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((((vt0.c0)LIKE(vt0.lid))))<((((((((((rt0.c2)OR(vt0.lid)))OR(vt0.lid)))AND(rt0.c2)))AND(vt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) ISNULL)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) ISNULL)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING AVG(rt0.c0) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (AVG(rt0.c0))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((AVG(rt0.c0)) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING AVG(rt0.c0) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (AVG(rt0.c0))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((AVG(rt0.c0)) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.lid) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.lid))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.lid) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE (((vt0.lid)<<(((vt0.c0)<=(0.6514996690867458))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE ((NOT (((vt0.lid)<<(((vt0.c0)<=(0.6514996690867458))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE (((((vt0.lid)<<(((vt0.c0)<=(0.6514996690867458))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, vt0.lid FROM vt0;
SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid;
SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c0, vt0.c1, vt0.lid UNION SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c0, vt0.c1, vt0.lid UNION SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt0.lid;
SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid;
SELECT vt0.c1, rt0.c1, vt0.lid, rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c1, vt0.lid, rt0.c2, vt0.c0, rt0.c0;
SELECT ALL vt0.c1, rt0.c1, vt0.lid, rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c1, vt0.lid, rt0.c2, vt0.c0, rt0.c0 HAVING CAST(SUM(TOTAL(TOTAL(rt0.c1))) AS NUMERIC) UNION ALL SELECT vt0.c1, rt0.c1, vt0.lid, rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c1, vt0.lid, rt0.c2, vt0.c0, rt0.c0 HAVING (NOT (CAST(SUM(TOTAL(TOTAL(rt0.c1))) AS NUMERIC))) UNION ALL SELECT ALL vt0.c1, rt0.c1, vt0.lid, rt0.c2, vt0.c0, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c1, vt0.lid, rt0.c2, vt0.c0, rt0.c0 HAVING ((CAST(SUM(TOTAL(TOTAL(rt0.c1))) AS NUMERIC)) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(CASE vt0.c1  WHEN vt0.lid THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 END)))AND(((vt0.lid) ISNULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(CASE vt0.c1  WHEN vt0.lid THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 END)))AND(((vt0.lid) ISNULL)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(CASE vt0.c1  WHEN vt0.lid THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 END)))AND(((vt0.lid) ISNULL)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((0.8060446814968442) NOT BETWEEN (vt0.c0) AND (vt0.c1)))IS(((vt0.c0)OR(vt0.c1))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((0.8060446814968442) NOT BETWEEN (vt0.c0) AND (vt0.c1)))IS(((vt0.c0)OR(vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((0.8060446814968442) NOT BETWEEN (vt0.c0) AND (vt0.c1)))IS(((vt0.c0)OR(vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((x'')LIKE(vt0.lid))) NOT NULL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((x'')LIKE(vt0.lid))) NOT NULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((x'')LIKE(vt0.lid))) NOT NULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING x'' COLLATE RTRIM UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (x'' COLLATE RTRIM)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((x'' COLLATE RTRIM) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING x'' COLLATE RTRIM UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (x'' COLLATE RTRIM)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((x'' COLLATE RTRIM) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (((((vt0.lid)IS(vt0.lid)))IS NOT(CAST(rt0.c0 AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((((vt0.lid)IS(vt0.lid)))IS NOT(CAST(rt0.c0 AS NUMERIC)))))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((((((vt0.lid)IS(vt0.lid)))IS NOT(CAST(rt0.c0 AS NUMERIC)))) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT vt0.c1, vt0.lid, vt0.c0, rt0.c0, rt0.c1 FROM rt0 INNER JOIN vt0 ON CAST(((rt0.c2)GLOB(vt0.lid)) AS BLOB);
SELECT DISTINCT vt0.c1, vt0.lid, vt0.c0, rt0.c0, rt0.c1 FROM rt0 INNER JOIN vt0 ON CAST(((rt0.c2)GLOB(vt0.lid)) AS BLOB) WHERE ((((x'')>(vt0.lid)) IN ())) UNION SELECT DISTINCT vt0.c1, vt0.lid, vt0.c0, rt0.c0, rt0.c1 FROM rt0 INNER JOIN vt0 ON CAST(((rt0.c2)GLOB(vt0.lid)) AS BLOB) WHERE ((NOT ((((x'')>(vt0.lid)) IN ())))) UNION SELECT DISTINCT vt0.c1, vt0.lid, vt0.c0, rt0.c0, rt0.c1 FROM rt0 INNER JOIN vt0 ON CAST(((rt0.c2)GLOB(vt0.lid)) AS BLOB) WHERE ((((((x'')>(vt0.lid)) IN ())) ISNULL));
SELECT DISTINCT vt0.c1, vt0.lid, vt0.c0, rt0.c0, rt0.c1 FROM rt0 INNER JOIN vt0 ON CAST(((rt0.c2)GLOB(vt0.lid)) AS BLOB);
SELECT ALL rt0.c1, vt0.lid, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.lid, rt0.c2;
SELECT rt0.c1, vt0.lid, rt0.c2 FROM vt0, rt0 WHERE ((((rt0.c2 IN (vt0.c1, vt0.c0)))<(rt0.c0 COLLATE BINARY))) GROUP BY rt0.c1, vt0.lid, rt0.c2 UNION SELECT ALL rt0.c1, vt0.lid, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((rt0.c2 IN (vt0.c1, vt0.c0)))<(rt0.c0 COLLATE BINARY))))) GROUP BY rt0.c1, vt0.lid, rt0.c2 UNION SELECT rt0.c1, vt0.lid, rt0.c2 FROM vt0, rt0 WHERE ((((((rt0.c2 IN (vt0.c1, vt0.c0)))<(rt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c1, vt0.lid, rt0.c2;
SELECT ALL rt0.c1, vt0.lid, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.lid, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(((vt0.c0) BETWEEN (COUNT(*)) AND (MIN(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(((vt0.c0) BETWEEN (COUNT(*)) AND (MIN(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(((vt0.c0) BETWEEN (COUNT(*)) AND (MIN(vt0.c0))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((NULL) NOT NULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((NULL) NOT NULL)))) UNION ALL SELECT * FROM rt0 WHERE (((((NULL) NOT NULL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((CAST(rt0.c0 AS NUMERIC)) ISNULL)) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((CAST(rt0.c0 AS NUMERIC)) ISNULL)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((CAST(rt0.c0 AS NUMERIC)) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt0.lid, rt0.c2, vt0.c1, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c2, vt0.c1, rt0.c0, rt0.c1;
SELECT ALL vt0.lid, rt0.c2, vt0.c1, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (rt0.c0) GROUP BY vt0.lid, rt0.c2, vt0.c1, rt0.c0, rt0.c1 UNION SELECT vt0.lid, rt0.c2, vt0.c1, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (rt0.c0))) GROUP BY vt0.lid, rt0.c2, vt0.c1, rt0.c0, rt0.c1 UNION SELECT ALL vt0.lid, rt0.c2, vt0.c1, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY vt0.lid, rt0.c2, vt0.c1, rt0.c0, rt0.c1;
SELECT ALL vt0.lid, rt0.c2, vt0.c1, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c2, vt0.c1, rt0.c0, rt0.c1;
SELECT ALL rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (vt0.c1 IN ()) COLLATE BINARY GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (vt0.c1 IN ()) COLLATE BINARY GROUP BY rt0.c0 HAVING (((((((0.9299884259829116)) NOT BETWEEN ((COUNT(*))) AND ((COUNT(*)))))OR(CASE AVG(vt0.c1)  WHEN GROUP_CONCAT(SUM(COUNT(SUM(MAX(MIN(NULL)))))) THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.lid THEN MIN(MIN(AVG(vt0.c1))) END)))OR(MAX(AVG(GROUP_CONCAT(x'a9e6'))))) UNION ALL SELECT ALL rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (vt0.c1 IN ()) COLLATE BINARY GROUP BY rt0.c0 HAVING (NOT ((((((((0.9299884259829116)) NOT BETWEEN ((COUNT(*))) AND ((COUNT(*)))))OR(CASE AVG(vt0.c1)  WHEN GROUP_CONCAT(SUM(COUNT(SUM(MAX(MIN(NULL)))))) THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.lid THEN MIN(MIN(AVG(vt0.c1))) END)))OR(MAX(AVG(GROUP_CONCAT(x'a9e6'))))))) UNION ALL SELECT rt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (vt0.c1 IN ()) COLLATE BINARY GROUP BY rt0.c0 HAVING (((((((((0.9299884259829116)) NOT BETWEEN ((COUNT(*))) AND ((COUNT(*)))))OR(CASE AVG(vt0.c1)  WHEN GROUP_CONCAT(SUM(COUNT(SUM(MAX(MIN(NULL)))))) THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.lid THEN MIN(MIN(AVG(vt0.c1))) END)))OR(MAX(AVG(GROUP_CONCAT(x'a9e6')))))) ISNULL);
SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE (vt0.lid) UNION ALL SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (vt0.lid))) UNION ALL SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.lid) ISNULL));
SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c0, vt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((((((vt0.c1)|(rt0.c1)))OR(CHANGES())))AND(NULLIF(vt0.lid, 0.1795080540517947))) GROUP BY rt0.c0, vt0.c1, vt0.c0;
SELECT rt0.c0, vt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((((((vt0.c1)|(rt0.c1)))OR(CHANGES())))AND(NULLIF(vt0.lid, 0.1795080540517947))) WHERE (UPPER(CAST(rt0.c0 AS INTEGER))) GROUP BY rt0.c0, vt0.c1, vt0.c0 UNION SELECT rt0.c0, vt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((((((vt0.c1)|(rt0.c1)))OR(CHANGES())))AND(NULLIF(vt0.lid, 0.1795080540517947))) WHERE ((NOT (UPPER(CAST(rt0.c0 AS INTEGER))))) GROUP BY rt0.c0, vt0.c1, vt0.c0 UNION SELECT rt0.c0, vt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((((((vt0.c1)|(rt0.c1)))OR(CHANGES())))AND(NULLIF(vt0.lid, 0.1795080540517947))) WHERE (((UPPER(CAST(rt0.c0 AS INTEGER))) ISNULL)) GROUP BY rt0.c0, vt0.c1, vt0.c0;
SELECT rt0.c0, vt0.c1, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((((((vt0.c1)|(rt0.c1)))OR(CHANGES())))AND(NULLIF(vt0.lid, 0.1795080540517947))) GROUP BY rt0.c0, vt0.c1, vt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING COUNT(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (COUNT(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((COUNT(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING COUNT(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (COUNT(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((COUNT(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))GLOB((((rt0.c2, rt0.c0, rt0.c1))<=((rt0.c2, rt0.c2, rt0.c1)))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS NUMERIC))GLOB((((rt0.c2, rt0.c0, rt0.c1))<=((rt0.c2, rt0.c2, rt0.c1)))))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((CAST(rt0.c1 AS NUMERIC))GLOB((((rt0.c2, rt0.c0, rt0.c1))<=((rt0.c2, rt0.c2, rt0.c1)))))) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE (((CASE WHEN vt0.lid THEN vt0.c0 WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.c1 END) NOT NULL)) UNION SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((CASE WHEN vt0.lid THEN vt0.c0 WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.c1 END) NOT NULL)))) UNION SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE (((((CASE WHEN vt0.lid THEN vt0.c0 WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.c1 END) NOT NULL)) ISNULL));
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (0.963197028204012 COLLATE RTRIM) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (0.963197028204012 COLLATE RTRIM))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((0.963197028204012 COLLATE RTRIM) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT rt0.c1, vt0.lid, rt0.c2, rt0.c0, vt0.c0, vt0.c1 FROM vt0 INNER JOIN rt0 ON x'' GROUP BY rt0.c1, vt0.lid, rt0.c2, rt0.c0, vt0.c0, vt0.c1;
SELECT ALL rt0.c1, vt0.lid, rt0.c2, rt0.c0, vt0.c0, vt0.c1 FROM vt0 INNER JOIN rt0 ON x'' GROUP BY rt0.c1, vt0.lid, rt0.c2, rt0.c0, vt0.c0, vt0.c1 HAVING (~ (MAX(vt0.c0))) UNION ALL SELECT ALL rt0.c1, vt0.lid, rt0.c2, rt0.c0, vt0.c0, vt0.c1 FROM vt0 INNER JOIN rt0 ON x'' GROUP BY rt0.c1, vt0.lid, rt0.c2, rt0.c0, vt0.c0, vt0.c1 HAVING (NOT ((~ (MAX(vt0.c0))))) UNION ALL SELECT ALL rt0.c1, vt0.lid, rt0.c2, rt0.c0, vt0.c0, vt0.c1 FROM vt0 INNER JOIN rt0 ON x'' GROUP BY rt0.c1, vt0.lid, rt0.c2, rt0.c0, vt0.c0, vt0.c1 HAVING (((~ (MAX(vt0.c0)))) ISNULL);
SELECT rt0.c1, vt0.lid, rt0.c2, rt0.c0, vt0.c0, vt0.c1 FROM vt0 INNER JOIN rt0 ON x'' GROUP BY rt0.c1, vt0.lid, rt0.c2, rt0.c0, vt0.c0, vt0.c1;
SELECT ALL rt0.c1, vt0.lid, rt0.c2, rt0.c0, vt0.c0, vt0.c1 FROM vt0 INNER JOIN rt0 ON x'' GROUP BY rt0.c1, vt0.lid, rt0.c2, rt0.c0, vt0.c0, vt0.c1 HAVING (~ (MAX(vt0.c0))) UNION ALL SELECT ALL rt0.c1, vt0.lid, rt0.c2, rt0.c0, vt0.c0, vt0.c1 FROM vt0 INNER JOIN rt0 ON x'' GROUP BY rt0.c1, vt0.lid, rt0.c2, rt0.c0, vt0.c0, vt0.c1 HAVING (NOT ((~ (MAX(vt0.c0))))) UNION ALL SELECT ALL rt0.c1, vt0.lid, rt0.c2, rt0.c0, vt0.c0, vt0.c1 FROM vt0 INNER JOIN rt0 ON x'' GROUP BY rt0.c1, vt0.lid, rt0.c2, rt0.c0, vt0.c0, vt0.c1 HAVING (((~ (MAX(vt0.c0)))) ISNULL);
SELECT rt0.c1, vt0.lid, rt0.c2, rt0.c0, vt0.c0, vt0.c1 FROM vt0 INNER JOIN rt0 ON x'' GROUP BY rt0.c1, vt0.lid, rt0.c2, rt0.c0, vt0.c0, vt0.c1;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (LOWER((vt0.c1 IN (vt0.c1)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (LOWER((vt0.c1 IN (vt0.c1)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((LOWER((vt0.c1 IN (vt0.c1)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid;
SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0 WHERE (0.786725514662294) GROUP BY vt0.c0, vt0.c1, vt0.lid UNION SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0 WHERE ((NOT (0.786725514662294))) GROUP BY vt0.c0, vt0.c1, vt0.lid UNION SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0 WHERE (((0.786725514662294) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt0.lid;
SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid;
SELECT rt0.c2, rt0.c0, vt0.c1, vt0.lid, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1, vt0.lid, rt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c0, vt0.c1, vt0.lid, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1, vt0.lid, rt0.c1, vt0.c0 HAVING ((CAST(NULL AS REAL)) IS TRUE) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c1, vt0.lid, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1, vt0.lid, rt0.c1, vt0.c0 HAVING (NOT (((CAST(NULL AS REAL)) IS TRUE))) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c1, vt0.lid, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1, vt0.lid, rt0.c1, vt0.c0 HAVING ((((CAST(NULL AS REAL)) IS TRUE)) ISNULL);
SELECT rt0.c2, rt0.c0, vt0.c1, vt0.lid, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1, vt0.lid, rt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c0, vt0.c1, vt0.lid, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1, vt0.lid, rt0.c1, vt0.c0 HAVING ((CAST(NULL AS REAL)) IS TRUE) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c1, vt0.lid, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1, vt0.lid, rt0.c1, vt0.c0 HAVING (NOT (((CAST(NULL AS REAL)) IS TRUE))) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c1, vt0.lid, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1, vt0.lid, rt0.c1, vt0.c0 HAVING ((((CAST(NULL AS REAL)) IS TRUE)) ISNULL);
SELECT rt0.c2, rt0.c0, vt0.c1, vt0.lid, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1, vt0.lid, rt0.c1, vt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c2 COLLATE RTRIM)OR((~ (rt0.c0)))))AND(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2 COLLATE RTRIM)OR((~ (rt0.c0)))))AND(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c2 COLLATE RTRIM)OR((~ (rt0.c0)))))AND(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)OR(((vt0.c0)/(vt0.lid))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE)OR(((vt0.c0)/(vt0.lid))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)OR(((vt0.c0)/(vt0.lid))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((CASE WHEN 0.4021296737090537 THEN rt0.c1 END) IS FALSE)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((CASE WHEN 0.4021296737090537 THEN rt0.c1 END) IS FALSE)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((CASE WHEN 0.4021296737090537 THEN rt0.c1 END) IS FALSE)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING GROUP_CONCAT(TOTAL(SUM(TOTAL(rt0.c1)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(TOTAL(SUM(TOTAL(rt0.c1)))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(TOTAL(SUM(TOTAL(rt0.c1))))) ISNULL);
SELECT vt0.c0, vt0.lid FROM vt0;
SELECT vt0.c0, vt0.lid FROM vt0 WHERE ((CAST(vt0.lid AS NUMERIC) IN (CASE vt0.c0  WHEN vt0.lid THEN x'' END))) UNION ALL SELECT vt0.c0, vt0.lid FROM vt0 WHERE ((NOT ((CAST(vt0.lid AS NUMERIC) IN (CASE vt0.c0  WHEN vt0.lid THEN x'' END))))) UNION ALL SELECT vt0.c0, vt0.lid FROM vt0 WHERE ((((CAST(vt0.lid AS NUMERIC) IN (CASE vt0.c0  WHEN vt0.lid THEN x'' END))) ISNULL));
SELECT vt0.c0, vt0.lid FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.lid END COLLATE NOCASE) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.lid END COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.lid END COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.lid) BETWEEN (NULL) AND (0.43096212515460386))) ISNULL)) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.lid) BETWEEN (NULL) AND (0.43096212515460386))) ISNULL)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.lid) BETWEEN (NULL) AND (0.43096212515460386))) ISNULL)) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING CAST((x'' IN ()) AS NUMERIC) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (CAST((x'' IN ()) AS NUMERIC))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((CAST((x'' IN ()) AS NUMERIC)) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING CAST((x'' IN ()) AS NUMERIC) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (CAST((x'' IN ()) AS NUMERIC))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((CAST((x'' IN ()) AS NUMERIC)) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT vt0.c1, vt0.lid, rt0.c2, rt0.c1, rt0.c0 FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT vt0.c1, vt0.lid, rt0.c2, rt0.c1, rt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE (((((((rt0.c1) NOT NULL))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.lid)))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c1))))) UNION SELECT DISTINCT vt0.c1, vt0.lid, rt0.c2, rt0.c1, rt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (((((((rt0.c1) NOT NULL))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.lid)))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c1))))))) UNION SELECT DISTINCT vt0.c1, vt0.lid, rt0.c2, rt0.c1, rt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE (((((((((rt0.c1) NOT NULL))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.lid)))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.lid, rt0.c2, rt0.c1, rt0.c0 FROM vt0 NATURAL JOIN rt0;
SELECT rt0.c1, rt0.c0, vt0.c1, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN (vt0.c1 IN ()) THEN ((vt0.lid)!=(vt0.c0)) ELSE ((rt0.c0)|(rt0.c1)) END GROUP BY rt0.c1, rt0.c0, vt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c0, vt0.c1, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN (vt0.c1 IN ()) THEN ((vt0.lid)!=(vt0.c0)) ELSE ((rt0.c0)|(rt0.c1)) END WHERE (CASE WHEN (((vt0.c0)) BETWEEN ((rt0.c2)) AND (('490426426'))) THEN TRIM(rt0.c2, vt0.c1) ELSE CASE WHEN vt0.lid THEN rt0.c1 END END) GROUP BY rt0.c1, rt0.c0, vt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c0, vt0.c1, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN (vt0.c1 IN ()) THEN ((vt0.lid)!=(vt0.c0)) ELSE ((rt0.c0)|(rt0.c1)) END WHERE ((NOT (CASE WHEN (((vt0.c0)) BETWEEN ((rt0.c2)) AND (('490426426'))) THEN TRIM(rt0.c2, vt0.c1) ELSE CASE WHEN vt0.lid THEN rt0.c1 END END))) GROUP BY rt0.c1, rt0.c0, vt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c0, vt0.c1, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN (vt0.c1 IN ()) THEN ((vt0.lid)!=(vt0.c0)) ELSE ((rt0.c0)|(rt0.c1)) END WHERE (((CASE WHEN (((vt0.c0)) BETWEEN ((rt0.c2)) AND (('490426426'))) THEN TRIM(rt0.c2, vt0.c1) ELSE CASE WHEN vt0.lid THEN rt0.c1 END END) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c0, vt0.c1, rt0.c2 FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN (vt0.c1 IN ()) THEN ((vt0.lid)!=(vt0.c0)) ELSE ((rt0.c0)|(rt0.c1)) END GROUP BY rt0.c1, rt0.c0, vt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, vt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, rt0.c2, rt0.c1 HAVING GROUP_CONCAT(((MIN('374617966'))||(AVG(TOTAL(MAX(AVG(vt0.c1))))))) UNION ALL SELECT rt0.c0, vt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, rt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT(((MIN('374617966'))||(AVG(TOTAL(MAX(AVG(vt0.c1))))))))) UNION ALL SELECT ALL rt0.c0, vt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, rt0.c2, rt0.c1 HAVING ((GROUP_CONCAT(((MIN('374617966'))||(AVG(TOTAL(MAX(AVG(vt0.c1)))))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) COLLATE BINARY) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) COLLATE BINARY))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) COLLATE BINARY) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM vt0 NOT INDEXED, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (CHAR(CAST(0.5085109094295659 AS BLOB))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (CHAR(CAST(0.5085109094295659 AS BLOB))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((CHAR(CAST(0.5085109094295659 AS BLOB))) ISNULL));
SELECT DISTINCT * FROM vt0 NOT INDEXED, rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END AS NUMERIC)) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END AS NUMERIC)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END AS NUMERIC)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING rt0.c1 COLLATE RTRIM UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (rt0.c1 COLLATE RTRIM)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((rt0.c1 COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING rt0.c1 COLLATE RTRIM UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (rt0.c1 COLLATE RTRIM)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((rt0.c1 COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE ((CASE rt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END IN ())) UNION ALL SELECT ALL * FROM rt0, vt0 NOT INDEXED WHERE ((NOT ((CASE rt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END IN ())))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((((CASE rt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END IN ())) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c2, vt0.c1, rt0.c1, vt0.lid FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c2, vt0.c1, rt0.c1, vt0.lid FROM vt0, rt0 WHERE ((((((((((((vt0.c0))!=((rt0.c2))))OR(vt0.lid)))OR(CASE WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)))AND((((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))AND((- (rt0.c2))))) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c2, vt0.c1, rt0.c1, vt0.lid FROM vt0, rt0 WHERE ((NOT ((((((((((((vt0.c0))<>((rt0.c2))))OR(vt0.lid)))OR(CASE WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)))AND((((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))AND((- (rt0.c2))))))) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c2, vt0.c1, rt0.c1, vt0.lid FROM vt0, rt0 NOT INDEXED WHERE ((((((((((((((vt0.c0))!=((rt0.c2))))OR(vt0.lid)))OR(CASE WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)))AND((((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))AND((- (rt0.c2))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c2, vt0.c1, rt0.c1, vt0.lid FROM vt0, rt0;
SELECT ALL vt0.c1, vt0.c0, vt0.lid, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid, rt0.c0;
SELECT vt0.c1, vt0.c0, vt0.lid, rt0.c0 FROM rt0, vt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY) GROUP BY vt0.c1, vt0.c0, vt0.lid, rt0.c0 UNION SELECT vt0.c1, vt0.c0, vt0.lid, rt0.c0 FROM rt0, vt0 WHERE ((NOT ((rt0.c2 IN ()) COLLATE BINARY))) GROUP BY vt0.c1, vt0.c0, vt0.lid, rt0.c0 UNION SELECT ALL vt0.c1, vt0.c0, vt0.lid, rt0.c0 FROM rt0, vt0 WHERE ((((rt0.c2 IN ()) COLLATE BINARY) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt0.lid, rt0.c0;
SELECT ALL vt0.c1, vt0.c0, vt0.lid, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid, rt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (+ ((rt0.c0 IN (rt0.c2, vt0.c1)))) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (+ ((rt0.c0 IN (rt0.c2, vt0.c1)))) GROUP BY rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (+ ((rt0.c0 IN (rt0.c2, vt0.c1)))) GROUP BY rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (+ ((rt0.c0 IN (rt0.c2, vt0.c1)))) GROUP BY rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (+ ((rt0.c0 IN (rt0.c2, vt0.c1)))) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (+ ((rt0.c0 IN (rt0.c2, vt0.c1)))) GROUP BY rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (+ ((rt0.c0 IN (rt0.c2, vt0.c1)))) GROUP BY rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (+ ((rt0.c0 IN (rt0.c2, vt0.c1)))) GROUP BY rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (+ ((rt0.c0 IN (rt0.c2, vt0.c1)))) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, vt0.lid, rt0.c2, rt0.c1 FROM vt0, rt0;
SELECT ALL rt0.c0, vt0.c0, vt0.lid, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((((((((rt0.c1)OR(vt0.c0)))AND(0xffffffff9e0c15ed)))OR(rt0.c0)))OR(vt0.c0)) COLLATE BINARY) UNION ALL SELECT ALL rt0.c0, vt0.c0, vt0.lid, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((((((((rt0.c1)OR(vt0.c0)))AND(0xffffffff9e0c15ed)))OR(rt0.c0)))OR(vt0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c0, vt0.c0, vt0.lid, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((((((((((rt0.c1)OR(vt0.c0)))AND(0xffffffff9e0c15ed)))OR(rt0.c0)))OR(vt0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL rt0.c0, vt0.c0, vt0.lid, rt0.c2, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.lid))))LIKE(vt0.lid COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.lid))))LIKE(vt0.lid COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.lid))))LIKE(vt0.lid COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.lid FROM vt0, rt0 GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0, rt0 WHERE (CASE CAST(vt0.c0 AS INTEGER)  WHEN (~ (rt0.c2)) THEN vt0.c1 WHEN 'oCK' COLLATE RTRIM THEN (((vt0.lid)) NOT BETWEEN ((vt0.c1)) AND ((vt0.lid))) WHEN '' COLLATE RTRIM THEN vt0.lid COLLATE BINARY ELSE CAST(x'' AS INTEGER) END) GROUP BY vt0.lid UNION SELECT ALL vt0.lid FROM vt0, rt0 WHERE ((NOT (CASE CAST(vt0.c0 AS INTEGER)  WHEN (~ (rt0.c2)) THEN vt0.c1 WHEN 'oCK' COLLATE RTRIM THEN (((vt0.lid)) NOT BETWEEN ((vt0.c1)) AND ((vt0.lid))) WHEN '' COLLATE RTRIM THEN vt0.lid COLLATE BINARY ELSE CAST(x'' AS INTEGER) END))) GROUP BY vt0.lid UNION SELECT vt0.lid FROM vt0, rt0 WHERE (((CASE CAST(vt0.c0 AS INTEGER)  WHEN (~ (rt0.c2)) THEN vt0.c1 WHEN 'oCK' COLLATE RTRIM THEN (((vt0.lid)) NOT BETWEEN ((vt0.c1)) AND ((vt0.lid))) WHEN '' COLLATE RTRIM THEN vt0.lid COLLATE BINARY ELSE CAST(x'' AS INTEGER) END) ISNULL)) GROUP BY vt0.lid;
SELECT ALL vt0.lid FROM vt0, rt0 GROUP BY vt0.lid;
SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid;
SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid HAVING (((AVG(COUNT(*)))<=(COUNT(vt0.c1))) IN ()) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid HAVING (NOT ((((AVG(COUNT(*)))<=(COUNT(vt0.c1))) IN ()))) UNION ALL SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid HAVING (((((AVG(COUNT(*)))<=(COUNT(vt0.c1))) IN ())) ISNULL);
SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid;
SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid HAVING (((AVG(COUNT(*)))<=(COUNT(vt0.c1))) IN ()) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid HAVING (NOT ((((AVG(COUNT(*)))<=(COUNT(vt0.c1))) IN ()))) UNION ALL SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid HAVING (((((AVG(COUNT(*)))<=(COUNT(vt0.c1))) IN ())) ISNULL);
SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c1) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c1, vt0.c1, vt0.lid, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c1, vt0.c1, vt0.lid, rt0.c0 FROM vt0, rt0 WHERE ((((~ (vt0.lid)))<>(''))) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c1, vt0.c1, vt0.lid, rt0.c0 FROM vt0, rt0 WHERE ((NOT ((((~ (vt0.lid)))!=(''))))) UNION SELECT DISTINCT rt0.c2, vt0.c0, rt0.c1, vt0.c1, vt0.lid, rt0.c0 FROM vt0, rt0 WHERE ((((((~ (vt0.lid)))!=(''))) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c0, rt0.c1, vt0.c1, vt0.lid, rt0.c0 FROM vt0, rt0;
SELECT ALL vt0.c1, rt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON CASE CAST(vt0.c1 AS BLOB)  WHEN ((rt0.c0)LIKE(rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END END GROUP BY vt0.c1, rt0.c0, rt0.c1;
SELECT vt0.c1, rt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON CASE CAST(vt0.c1 AS BLOB)  WHEN ((rt0.c0)LIKE(rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END END WHERE (CAST((- (rt0.c0)) AS INTEGER)) GROUP BY vt0.c1, rt0.c0, rt0.c1 UNION SELECT ALL vt0.c1, rt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON CASE CAST(vt0.c1 AS BLOB)  WHEN ((rt0.c0)LIKE(rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END END WHERE ((NOT (CAST((- (rt0.c0)) AS INTEGER)))) GROUP BY vt0.c1, rt0.c0, rt0.c1 UNION SELECT ALL vt0.c1, rt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON CASE CAST(vt0.c1 AS BLOB)  WHEN ((rt0.c0)LIKE(rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END END WHERE (((CAST((- (rt0.c0)) AS INTEGER)) ISNULL)) GROUP BY vt0.c1, rt0.c0, rt0.c1;
SELECT ALL vt0.c1, rt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON CASE CAST(vt0.c1 AS BLOB)  WHEN ((rt0.c0)LIKE(rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END END GROUP BY vt0.c1, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, vt0.c0 FROM rt0 INNER JOIN vt0 ON (((((((vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.lid))<=((vt0.lid, rt0.c0, vt0.lid, rt0.c0, vt0.c1))))OR((+ (rt0.c0)))))OR(((((((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))) GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT rt0.c2, rt0.c0, vt0.c0 FROM rt0 INNER JOIN vt0 ON (((((((vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.lid))<=((vt0.lid, rt0.c0, vt0.lid, rt0.c0, vt0.c1))))OR((+ (rt0.c0)))))OR(((((((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))) GROUP BY rt0.c2, rt0.c0, vt0.c0 HAVING NULLIF(DISTINCT AVG(vt0.c0), ((((rt0.c0)OR(SUM(vt0.lid))))OR(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c0 FROM rt0 INNER JOIN vt0 ON (((((((vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.lid))<=((vt0.lid, rt0.c0, vt0.lid, rt0.c0, vt0.c1))))OR((+ (rt0.c0)))))OR(((((((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))) GROUP BY rt0.c2, rt0.c0, vt0.c0 HAVING (NOT (NULLIF(DISTINCT AVG(vt0.c0), ((((rt0.c0)OR(SUM(vt0.lid))))OR(rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c0 FROM rt0 INNER JOIN vt0 ON (((((((vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.lid))<=((vt0.lid, rt0.c0, vt0.lid, rt0.c0, vt0.c1))))OR((+ (rt0.c0)))))OR(((((((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))) GROUP BY rt0.c2, rt0.c0, vt0.c0 HAVING ((NULLIF(DISTINCT AVG(vt0.c0), ((((rt0.c0)OR(SUM(vt0.lid))))OR(rt0.c1)))) ISNULL);
SELECT rt0.c2, rt0.c0, vt0.c0 FROM rt0 INNER JOIN vt0 ON (((((((vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.lid))<=((vt0.lid, rt0.c0, vt0.lid, rt0.c0, vt0.c1))))OR((+ (rt0.c0)))))OR(((((((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))) GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT rt0.c2, rt0.c0, vt0.c0 FROM rt0 INNER JOIN vt0 ON (((((((vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.lid))<=((vt0.lid, rt0.c0, vt0.lid, rt0.c0, vt0.c1))))OR((+ (rt0.c0)))))OR(((((((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))) GROUP BY rt0.c2, rt0.c0, vt0.c0 HAVING NULLIF(DISTINCT AVG(vt0.c0), ((((rt0.c0)OR(SUM(vt0.lid))))OR(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c0 FROM rt0 INNER JOIN vt0 ON (((((((vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.lid))<=((vt0.lid, rt0.c0, vt0.lid, rt0.c0, vt0.c1))))OR((+ (rt0.c0)))))OR(((((((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))) GROUP BY rt0.c2, rt0.c0, vt0.c0 HAVING (NOT (NULLIF(DISTINCT AVG(vt0.c0), ((((rt0.c0)OR(SUM(vt0.lid))))OR(rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c0, vt0.c0 FROM rt0 INNER JOIN vt0 ON (((((((vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.lid))<=((vt0.lid, rt0.c0, vt0.lid, rt0.c0, vt0.c1))))OR((+ (rt0.c0)))))OR(((((((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))) GROUP BY rt0.c2, rt0.c0, vt0.c0 HAVING ((NULLIF(DISTINCT AVG(vt0.c0), ((((rt0.c0)OR(SUM(vt0.lid))))OR(rt0.c1)))) ISNULL);
SELECT rt0.c2, rt0.c0, vt0.c0 FROM rt0 INNER JOIN vt0 ON (((((((vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.lid))<=((vt0.lid, rt0.c0, vt0.lid, rt0.c0, vt0.c1))))OR((+ (rt0.c0)))))OR(((((((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))) GROUP BY rt0.c2, rt0.c0, vt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt0;
SELECT rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((rt0.c0, vt0.c1, vt0.c0))>=((rt0.c0, vt0.lid, rt0.c0))) IN ())) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((rt0.c0, vt0.c1, vt0.c0))>=((rt0.c0, vt0.lid, rt0.c0))) IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((((rt0.c0, vt0.c1, vt0.c0))>=((rt0.c0, vt0.lid, rt0.c0))) IN ())) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (NULLIF(DISTINCT (vt0.c0 IN ()), CASE rt0.c0  WHEN vt0.c0 THEN NULL END)) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (NULLIF(DISTINCT (vt0.c0 IN ()), CASE rt0.c0  WHEN vt0.c0 THEN NULL END)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((NULLIF(DISTINCT (vt0.c0 IN ()), CASE rt0.c0  WHEN vt0.c0 THEN NULL END)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY) GROUP BY vt0.c1, vt0.lid, vt0.c0 UNION SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 IN ()) COLLATE BINARY))) GROUP BY vt0.c1, vt0.lid, vt0.c0 UNION SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ()) COLLATE BINARY) ISNULL)) GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT ALL vt0.c1, rt0.c2, vt0.c0, vt0.lid, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2, vt0.c0, vt0.lid, rt0.c0;
SELECT vt0.c1, rt0.c2, vt0.c0, vt0.lid, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2, vt0.c0, vt0.lid, rt0.c0 HAVING ((COUNT(vt0.c0)) NOT BETWEEN (SUM(COUNT(*))) AND (MIN(rt0.c2))) UNION ALL SELECT ALL vt0.c1, rt0.c2, vt0.c0, vt0.lid, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2, vt0.c0, vt0.lid, rt0.c0 HAVING (NOT (((COUNT(vt0.c0)) NOT BETWEEN (SUM(COUNT(*))) AND (MIN(rt0.c2))))) UNION ALL SELECT vt0.c1, rt0.c2, vt0.c0, vt0.lid, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2, vt0.c0, vt0.lid, rt0.c0 HAVING ((((COUNT(vt0.c0)) NOT BETWEEN (SUM(COUNT(*))) AND (MIN(rt0.c2)))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (vt0.c1) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c1) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c1, vt0.c0, vt0.lid FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c1, vt0.c0, vt0.lid;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c1, vt0.c0, vt0.lid FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c0 WHERE (((UNLIKELY(DISTINCT rt0.c2))AND(((((vt0.c0)AND(vt0.lid)))AND(vt0.c0))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c1, vt0.c0, vt0.lid UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c1, vt0.c0, vt0.lid FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c0 WHERE ((NOT (((UNLIKELY(DISTINCT rt0.c2))AND(((((vt0.c0)AND(vt0.lid)))AND(vt0.c0))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c1, vt0.c0, vt0.lid UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt0.c1, vt0.c0, vt0.lid FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c0 WHERE (((((UNLIKELY(DISTINCT rt0.c2))AND(((((vt0.c0)AND(vt0.lid)))AND(vt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c1, vt0.c0, vt0.lid;
SELECT rt0.c1, rt0.c0, rt0.c2, vt0.c1, vt0.c0, vt0.lid FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt0.c1, vt0.c0, vt0.lid;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.lid, rt0.c2 FROM vt0, rt0;
SELECT vt0.lid, rt0.c2 FROM vt0, rt0 WHERE (((vt0.lid)OR((((rt0.c2))>=((vt0.lid)))))) UNION ALL SELECT vt0.lid, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((vt0.lid)OR((((rt0.c2))>=((vt0.lid)))))))) UNION ALL SELECT vt0.lid, rt0.c2 FROM vt0, rt0 WHERE (((((vt0.lid)OR((((rt0.c2))>=((vt0.lid)))))) ISNULL));
SELECT ALL vt0.lid, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (CAST(((rt0.c2)<<(rt0.c2)) AS REAL)) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST(((rt0.c2)<<(rt0.c2)) AS REAL)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(((rt0.c2)<<(rt0.c2)) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, vt0.lid;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, vt0.lid FROM rt0, vt0 WHERE ((~ (rt0.c2))) GROUP BY rt0.c1, rt0.c0, vt0.c0, vt0.lid UNION SELECT ALL rt0.c1, rt0.c0, vt0.c0, vt0.lid FROM rt0, vt0 WHERE ((NOT ((~ (rt0.c2))))) GROUP BY rt0.c1, rt0.c0, vt0.c0, vt0.lid UNION SELECT ALL rt0.c1, rt0.c0, vt0.c0, vt0.lid FROM rt0, vt0 WHERE ((((~ (rt0.c2))) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt0.c0, vt0.lid;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c0, vt0.lid;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (((CAST(vt0.lid AS NUMERIC))*((rt0.c0 IN ())))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (((CAST(vt0.lid AS NUMERIC))*((rt0.c0 IN ())))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((((CAST(vt0.lid AS NUMERIC))*((rt0.c0 IN ())))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) NOT BETWEEN ((+ ('L[^8'))) AND (CAST(rt0.c1 AS TEXT)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) NOT BETWEEN ((+ ('L[^8'))) AND (CAST(rt0.c1 AS TEXT)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) NOT BETWEEN ((+ ('L[^8'))) AND (CAST(rt0.c1 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c2, vt0.c0, vt0.c1, vt0.lid, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, vt0.c1, vt0.lid, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, vt0.c0, vt0.c1, vt0.lid, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN rt0.c1 WHEN vt0.c1 THEN vt0.lid ELSE rt0.c0 END) BETWEEN (-936632323) AND ((((rt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c0)))))) GROUP BY rt0.c2, vt0.c0, vt0.c1, vt0.lid, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, vt0.c0, vt0.c1, vt0.lid, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN rt0.c1 WHEN vt0.c1 THEN vt0.lid ELSE rt0.c0 END) BETWEEN (-936632323) AND ((((rt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c0)))))))) GROUP BY rt0.c2, vt0.c0, vt0.c1, vt0.lid, rt0.c1, rt0.c0 UNION SELECT rt0.c2, vt0.c0, vt0.c1, vt0.lid, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN rt0.c1 WHEN vt0.c1 THEN vt0.lid ELSE rt0.c0 END) BETWEEN (-936632323) AND ((((rt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c0)))))) ISNULL)) GROUP BY rt0.c2, vt0.c0, vt0.c1, vt0.lid, rt0.c1, rt0.c0;
SELECT rt0.c2, vt0.c0, vt0.c1, vt0.lid, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, vt0.c1, vt0.lid, rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (COUNT(rt0.c1) IN ()) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT ((COUNT(rt0.c1) IN ()))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (((COUNT(rt0.c1) IN ())) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (COUNT(rt0.c1) IN ()) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT ((COUNT(rt0.c1) IN ()))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (((COUNT(rt0.c1) IN ())) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE ((((UNLIKELY(DISTINCT rt0.c0)))>(((((vt0.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c0, vt0.c1))<((rt0.c2, vt0.c0, vt0.c1, vt0.lid, rt0.c2, rt0.c1, rt0.c1))))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT ((((UNLIKELY(DISTINCT rt0.c0)))>(((((vt0.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c0, vt0.c1))<((rt0.c2, vt0.c0, vt0.c1, vt0.lid, rt0.c2, rt0.c1, rt0.c1))))))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((((((UNLIKELY(DISTINCT rt0.c0)))>(((((vt0.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c0, vt0.c1))<((rt0.c2, vt0.c0, vt0.c1, vt0.lid, rt0.c2, rt0.c1, rt0.c1))))))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 CROSS JOIN rt0 ON IFNULL(DISTINCT ((((rt0.c0)AND(vt0.lid)))OR(vt0.c1)), ((vt0.c1) NOT NULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 CROSS JOIN rt0 ON IFNULL(DISTINCT ((((rt0.c0)AND(vt0.lid)))OR(vt0.c1)), ((vt0.c1) NOT NULL)) WHERE (((((((((((((((vt0.c1) IS FALSE))AND(COALESCE(vt0.c1, vt0.c1))))AND(((0.08048706503567238)=(vt0.lid)))))OR(CASE rt0.c0  WHEN rt0.c1 THEN 0Xffffffffd603d2de WHEN vt0.lid THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END)))OR(rt0.c1)))OR((((rt0.c0))!=((vt0.lid))))))AND(((vt0.lid)<>(rt0.c0))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 CROSS JOIN rt0 ON IFNULL(DISTINCT ((((rt0.c0)AND(vt0.lid)))OR(vt0.c1)), ((vt0.c1) NOT NULL)) WHERE ((NOT (((((((((((((((vt0.c1) IS FALSE))AND(COALESCE(vt0.c1, vt0.c1))))AND(((0.08048706503567238)==(vt0.lid)))))OR(CASE rt0.c0  WHEN rt0.c1 THEN 0Xffffffffd603d2de WHEN vt0.lid THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END)))OR(rt0.c1)))OR((((rt0.c0))<>((vt0.lid))))))AND(((vt0.lid)!=(rt0.c0))))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 CROSS JOIN rt0 ON IFNULL(DISTINCT ((((rt0.c0)AND(vt0.lid)))OR(vt0.c1)), ((vt0.c1) NOT NULL)) WHERE (((((((((((((((((vt0.c1) IS FALSE))AND(COALESCE(vt0.c1, vt0.c1))))AND(((0.08048706503567238)=(vt0.lid)))))OR(CASE rt0.c0  WHEN rt0.c1 THEN 0xffffffffd603d2de WHEN vt0.lid THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END)))OR(rt0.c1)))OR((((rt0.c0))!=((vt0.lid))))))AND(((vt0.lid)!=(rt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 CROSS JOIN rt0 ON IFNULL(DISTINCT ((((rt0.c0)AND(vt0.lid)))OR(vt0.c1)), ((vt0.c1) NOT NULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c2 COLLATE RTRIM))<((CAST(rt0.c2 AS INTEGER))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2 COLLATE RTRIM))<((CAST(rt0.c2 AS INTEGER))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c2 COLLATE RTRIM))<((CAST(rt0.c2 AS INTEGER))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.lid, rt0.c0, rt0.c1, vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON (((((((((- (rt0.c1)))OR(((((((((rt0.c2)AND(rt0.c1)))AND(vt0.lid)))OR(vt0.c1)))OR(rt0.c2)))))OR(((((((((vt0.c0)OR(vt0.c1)))AND(rt0.c0)))AND(vt0.lid)))OR(rt0.c0)))))OR(rt0.c0)))OR((- (rt0.c2)))) GROUP BY vt0.lid, rt0.c0, rt0.c1, vt0.c1;
SELECT vt0.lid, rt0.c0, rt0.c1, vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON (((((((((- (rt0.c1)))OR(((((((((rt0.c2)AND(rt0.c1)))AND(vt0.lid)))OR(vt0.c1)))OR(rt0.c2)))))OR(((((((((vt0.c0)OR(vt0.c1)))AND(rt0.c0)))AND(vt0.lid)))OR(rt0.c0)))))OR(rt0.c0)))OR((- (rt0.c2)))) GROUP BY vt0.lid, rt0.c0, rt0.c1, vt0.c1 HAVING COUNT(AVG(COUNT(*))) UNION ALL SELECT ALL vt0.lid, rt0.c0, rt0.c1, vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON (((((((((- (rt0.c1)))OR(((((((((rt0.c2)AND(rt0.c1)))AND(vt0.lid)))OR(vt0.c1)))OR(rt0.c2)))))OR(((((((((vt0.c0)OR(vt0.c1)))AND(rt0.c0)))AND(vt0.lid)))OR(rt0.c0)))))OR(rt0.c0)))OR((- (rt0.c2)))) GROUP BY vt0.lid, rt0.c0, rt0.c1, vt0.c1 HAVING (NOT (COUNT(AVG(COUNT(*))))) UNION ALL SELECT ALL vt0.lid, rt0.c0, rt0.c1, vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON (((((((((- (rt0.c1)))OR(((((((((rt0.c2)AND(rt0.c1)))AND(vt0.lid)))OR(vt0.c1)))OR(rt0.c2)))))OR(((((((((vt0.c0)OR(vt0.c1)))AND(rt0.c0)))AND(vt0.lid)))OR(rt0.c0)))))OR(rt0.c0)))OR((- (rt0.c2)))) GROUP BY vt0.lid, rt0.c0, rt0.c1, vt0.c1 HAVING ((COUNT(AVG(COUNT(*)))) ISNULL);
SELECT SUM(NULL) FROM vt0, rt0;
SELECT vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 WHERE ((RTRIM(0.5536535094509031) IN ())) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((RTRIM(0.5536535094509031) IN ())))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((((RTRIM(0.5536535094509031) IN ())) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((+ (rt0.c0))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((+ (rt0.c0))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((((+ (rt0.c0))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c1, vt0.lid, vt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.lid, vt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c1, vt0.lid, vt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(rt0.c2)))) AND (((- (rt0.c2)))))) GROUP BY rt0.c0, rt0.c1, vt0.lid, vt0.c1, rt0.c2, vt0.c0 UNION SELECT rt0.c0, rt0.c1, vt0.lid, vt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(rt0.c2)))) AND (((- (rt0.c2)))))))) GROUP BY rt0.c0, rt0.c1, vt0.lid, vt0.c1, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c1, vt0.lid, vt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((((((vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(rt0.c2)))) AND (((- (rt0.c2)))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt0.lid, vt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c1, vt0.lid, vt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.lid, vt0.c1, rt0.c2, vt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((rt0.c1) NOT BETWEEN ('虫 u') AND (NULL))) BETWEEN (COUNT(vt0.lid)) AND (((rt0.c1) NOT BETWEEN (COUNT(rt0.c2)) AND (x'')))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((((rt0.c1) NOT BETWEEN ('虫 u') AND (NULL))) BETWEEN (COUNT(vt0.lid)) AND (((rt0.c1) NOT BETWEEN (COUNT(rt0.c2)) AND (x'')))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((((rt0.c1) NOT BETWEEN ('虫 u') AND (NULL))) BETWEEN (COUNT(vt0.lid)) AND (((rt0.c1) NOT BETWEEN (COUNT(rt0.c2)) AND (x''))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((rt0.c1) NOT BETWEEN ('虫 u') AND (NULL))) BETWEEN (COUNT(vt0.lid)) AND (((rt0.c1) NOT BETWEEN (COUNT(rt0.c2)) AND (x'')))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((((rt0.c1) NOT BETWEEN ('虫 u') AND (NULL))) BETWEEN (COUNT(vt0.lid)) AND (((rt0.c1) NOT BETWEEN (COUNT(rt0.c2)) AND (x'')))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((((rt0.c1) NOT BETWEEN ('虫 u') AND (NULL))) BETWEEN (COUNT(vt0.lid)) AND (((rt0.c1) NOT BETWEEN (COUNT(rt0.c2)) AND (x''))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c2)!=(rt0.c2)))&(((vt0.lid)>=(vt0.lid))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (((((rt0.c2)<>(rt0.c2)))&(((vt0.lid)>=(vt0.lid))))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((((((rt0.c2)!=(rt0.c2)))&(((vt0.lid)>=(vt0.lid))))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE (vt0.c1) UNION SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1, rt0.c2, rt0.c0, rt0.c1 FROM rt0 INNER JOIN vt0 ON ((COALESCE(rt0.c2, vt0.c0))GLOB((('?C') BETWEEN (rt0.c2) AND (rt0.c1)))) GROUP BY vt0.c0, vt0.c1, rt0.c2, rt0.c0, rt0.c1;
SELECT vt0.c0, vt0.c1, rt0.c2, rt0.c0, rt0.c1 FROM rt0 INNER JOIN vt0 ON ((COALESCE(rt0.c2, vt0.c0))GLOB((('?C') BETWEEN (rt0.c2) AND (rt0.c1)))) WHERE (0.350653903521719) GROUP BY vt0.c0, vt0.c1, rt0.c2, rt0.c0, rt0.c1 UNION SELECT vt0.c0, vt0.c1, rt0.c2, rt0.c0, rt0.c1 FROM rt0 INNER JOIN vt0 ON ((COALESCE(rt0.c2, vt0.c0))GLOB((('?C') BETWEEN (rt0.c2) AND (rt0.c1)))) WHERE ((NOT (0.350653903521719))) GROUP BY vt0.c0, vt0.c1, rt0.c2, rt0.c0, rt0.c1 UNION SELECT vt0.c0, vt0.c1, rt0.c2, rt0.c0, rt0.c1 FROM rt0 INNER JOIN vt0 ON ((COALESCE(rt0.c2, vt0.c0))GLOB((('?C') BETWEEN (rt0.c2) AND (rt0.c1)))) WHERE (((0.350653903521719) ISNULL)) GROUP BY vt0.c0, vt0.c1, rt0.c2, rt0.c0, rt0.c1;
SELECT vt0.c0, vt0.c1, rt0.c2, rt0.c0, rt0.c1 FROM rt0 INNER JOIN vt0 ON ((COALESCE(rt0.c2, vt0.c0))GLOB((('?C') BETWEEN (rt0.c2) AND (rt0.c1)))) GROUP BY vt0.c0, vt0.c1, rt0.c2, rt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1, vt0.lid, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt0.lid, rt0.c0;
SELECT ALL vt0.c0, rt0.c1, vt0.lid, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt0.lid, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, rt0.c1, vt0.lid, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt0.lid, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, rt0.c1, vt0.lid, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt0.lid, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, rt0.c1, vt0.lid, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt0.lid, rt0.c0;
SELECT ALL vt0.c0, rt0.c1, vt0.lid, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt0.lid, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, rt0.c1, vt0.lid, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt0.lid, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, rt0.c1, vt0.lid, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt0.lid, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, rt0.c1, vt0.lid, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, vt0.lid, rt0.c0;
SELECT ALL SUM(((((vt0.c1 COLLATE BINARY)OR(vt0.c1)))OR(((vt0.lid)*(vt0.lid))))) FROM vt0 ORDER BY (((((vt0.c0)+(x'7dd1'))))!=((CASE WHEN vt0.c0 THEN vt0.lid ELSE vt0.lid END))) ASC  NULLS LAST;
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (CASE (vt0.lid IN (vt0.lid))  WHEN ((((vt0.c1)AND(vt0.lid)))OR(rt0.c1)) THEN (~ (vt0.c1)) ELSE CAST(rt0.c1 AS INTEGER) END) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (CASE (vt0.lid IN (vt0.lid))  WHEN ((((vt0.c1)AND(vt0.lid)))OR(rt0.c1)) THEN (~ (vt0.c1)) ELSE CAST(rt0.c1 AS INTEGER) END))) UNION ALL SELECT * FROM rt0, vt0 NOT INDEXED WHERE (((CASE (vt0.lid IN (vt0.lid))  WHEN ((((vt0.c1)AND(vt0.lid)))OR(rt0.c1)) THEN (~ (vt0.c1)) ELSE CAST(rt0.c1 AS INTEGER) END) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((((vt0.c1) IS TRUE)) IS FALSE)) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((((vt0.c1) IS TRUE)) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((vt0.c1) IS TRUE)) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt0.lid, rt0.c0, rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY vt0.lid, rt0.c0, rt0.c1, vt0.c1;
SELECT ALL vt0.lid, rt0.c0, rt0.c1, vt0.c1 FROM rt0, vt0 WHERE (rt0.c1) GROUP BY vt0.lid, rt0.c0, rt0.c1, vt0.c1 UNION SELECT ALL vt0.lid, rt0.c0, rt0.c1, vt0.c1 FROM rt0, vt0 WHERE ((NOT (rt0.c1))) GROUP BY vt0.lid, rt0.c0, rt0.c1, vt0.c1 UNION SELECT ALL vt0.lid, rt0.c0, rt0.c1, vt0.c1 FROM rt0, vt0 WHERE (((rt0.c1) ISNULL)) GROUP BY vt0.lid, rt0.c0, rt0.c1, vt0.c1;
SELECT vt0.lid, rt0.c0, rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY vt0.lid, rt0.c0, rt0.c1, vt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING COUNT(COUNT(rt0.c0)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(COUNT(rt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(COUNT(rt0.c0))) ISNULL);
SELECT ALL MIN(vt0.lid) FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c1 COLLATE NOCASE)!=(((vt0.lid)!=(NULL))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (((rt0.c1 COLLATE NOCASE)<>(((vt0.lid)!=(NULL))))))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((((rt0.c1 COLLATE NOCASE)!=(((vt0.lid)<>(NULL))))) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.lid))=((vt0.c1)))) BETWEEN (vt0.lid) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.lid))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.lid))=((vt0.c1)))) BETWEEN (vt0.lid) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.lid))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.lid))==((vt0.c1)))) BETWEEN (vt0.lid) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.lid))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.lid, vt0.c1, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (((((((((rt0.c0)AND('-611155647')))OR(rt0.c2)))AND(0.4117415973052223)))AND(rt0.c0)) IN ()) GROUP BY vt0.lid, vt0.c1, rt0.c1;
SELECT ALL vt0.lid, vt0.c1, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (((((((((rt0.c0)AND('-611155647')))OR(rt0.c2)))AND(0.4117415973052223)))AND(rt0.c0)) IN ()) WHERE (CASE WHEN ((vt0.lid)GLOB(0.488592442036925)) THEN NULL END) GROUP BY vt0.lid, vt0.c1, rt0.c1 UNION SELECT ALL vt0.lid, vt0.c1, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (((((((((rt0.c0)AND('-611155647')))OR(rt0.c2)))AND(0.4117415973052223)))AND(rt0.c0)) IN ()) WHERE ((NOT (CASE WHEN ((vt0.lid)GLOB(0.488592442036925)) THEN NULL END))) GROUP BY vt0.lid, vt0.c1, rt0.c1 UNION SELECT vt0.lid, vt0.c1, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (((((((((rt0.c0)AND('-611155647')))OR(rt0.c2)))AND(0.4117415973052223)))AND(rt0.c0)) IN ()) WHERE (((CASE WHEN ((vt0.lid)GLOB(0.488592442036925)) THEN NULL END) ISNULL)) GROUP BY vt0.lid, vt0.c1, rt0.c1;
SELECT vt0.lid, vt0.c1, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (((((((((rt0.c0)AND('-611155647')))OR(rt0.c2)))AND(0.4117415973052223)))AND(rt0.c0)) IN ()) GROUP BY vt0.lid, vt0.c1, rt0.c1;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT ALL vt0.lid FROM vt0 GROUP BY vt0.lid HAVING GROUP_CONCAT((vt0.lid IN (MIN(SUM(GROUP_CONCAT(vt0.c0)))))) UNION ALL SELECT vt0.lid FROM vt0 GROUP BY vt0.lid HAVING (NOT (GROUP_CONCAT((vt0.lid IN (MIN(SUM(GROUP_CONCAT(vt0.c0)))))))) UNION ALL SELECT vt0.lid FROM vt0 GROUP BY vt0.lid HAVING ((GROUP_CONCAT((vt0.lid IN (MIN(SUM(GROUP_CONCAT(vt0.c0))))))) ISNULL);
SELECT vt0.c1, rt0.c1, vt0.lid, rt0.c2 FROM vt0, rt0;
SELECT vt0.c1, rt0.c1, vt0.lid, rt0.c2 FROM vt0, rt0 WHERE ((((vt0.c0)) BETWEEN (((((((((('-1805223590')OR(0X34a86877)))OR('X?')))AND(vt0.c1)))AND(rt0.c0)))) AND ((CASE rt0.c0  WHEN rt0.c2 THEN vt0.lid END)))) UNION ALL SELECT vt0.c1, rt0.c1, vt0.lid, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((vt0.c0)) BETWEEN (((((((((('-1805223590')OR(0x34a86877)))OR('X?')))AND(vt0.c1)))AND(rt0.c0)))) AND ((CASE rt0.c0  WHEN rt0.c2 THEN vt0.lid END)))))) UNION ALL SELECT ALL vt0.c1, rt0.c1, vt0.lid, rt0.c2 FROM vt0, rt0 WHERE ((((((vt0.c0)) BETWEEN (((((((((('-1805223590')OR(0X34a86877)))OR('X?')))AND(vt0.c1)))AND(rt0.c0)))) AND ((CASE rt0.c0  WHEN rt0.c2 THEN vt0.lid END)))) ISNULL));
SELECT vt0.c1, rt0.c1, vt0.lid, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.lid, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((NOT (rt0.c0)))IS((0.10007890348524928 IN (vt0.c0, rt0.c0))));
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.lid, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((NOT (rt0.c0)))IS((0.10007890348524928 IN (vt0.c0, rt0.c0)))) WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.lid, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((NOT (rt0.c0)))IS((0.10007890348524928 IN (vt0.c0, rt0.c0)))) WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.lid, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((NOT (rt0.c0)))IS((0.10007890348524928 IN (vt0.c0, rt0.c0)))) WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.lid, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON (((NOT (rt0.c0)))IS((0.10007890348524928 IN (vt0.c0, rt0.c0))));
SELECT rt0.c0, vt0.c1, vt0.c0, vt0.lid, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1, vt0.c0, vt0.lid, rt0.c1, rt0.c2;
SELECT rt0.c0, vt0.c1, vt0.c0, vt0.lid, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((rt0.c1)OR(rt0.c2)) COLLATE NOCASE) GROUP BY rt0.c0, vt0.c1, vt0.c0, vt0.lid, rt0.c1, rt0.c2 UNION SELECT rt0.c0, vt0.c1, vt0.c0, vt0.lid, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((rt0.c1)OR(rt0.c2)) COLLATE NOCASE))) GROUP BY rt0.c0, vt0.c1, vt0.c0, vt0.lid, rt0.c1, rt0.c2 UNION SELECT rt0.c0, vt0.c1, vt0.c0, vt0.lid, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((((rt0.c1)OR(rt0.c2)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0, vt0.c1, vt0.c0, vt0.lid, rt0.c1, rt0.c2;
SELECT rt0.c0, vt0.c1, vt0.c0, vt0.lid, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1, vt0.c0, vt0.lid, rt0.c1, rt0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(MAX(TOTAL(COUNT(*))) AS NUMERIC) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(MAX(TOTAL(COUNT(*))) AS NUMERIC))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(MAX(TOTAL(COUNT(*))) AS NUMERIC)) ISNULL);
SELECT vt0.c1 FROM rt0, vt0;
SELECT ALL vt0.c1 FROM rt0, vt0 WHERE ((((rt0.c1, vt0.c1, vt0.c0)) BETWEEN (((rt0.c0 IN ()), (((rt0.c0, rt0.c0, vt0.c1)) NOT BETWEEN ((vt0.lid, vt0.lid, vt0.lid)) AND ((rt0.c0, rt0.c0, rt0.c1))), (vt0.lid IN ()))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, ((rt0.c1) NOT BETWEEN ('') AND (rt0.c2)), (NOT (rt0.c1)))))) UNION ALL SELECT ALL vt0.c1 FROM rt0, vt0 WHERE ((NOT ((((rt0.c1, vt0.c1, vt0.c0)) BETWEEN (((rt0.c0 IN ()), (((rt0.c0, rt0.c0, vt0.c1)) NOT BETWEEN ((vt0.lid, vt0.lid, vt0.lid)) AND ((rt0.c0, rt0.c0, rt0.c1))), (vt0.lid IN ()))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, ((rt0.c1) NOT BETWEEN ('') AND (rt0.c2)), (NOT (rt0.c1)))))))) UNION ALL SELECT vt0.c1 FROM rt0, vt0 WHERE ((((((rt0.c1, vt0.c1, vt0.c0)) BETWEEN (((rt0.c0 IN ()), (((rt0.c0, rt0.c0, vt0.c1)) NOT BETWEEN ((vt0.lid, vt0.lid, vt0.lid)) AND ((rt0.c0, rt0.c0, rt0.c1))), (vt0.lid IN ()))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, ((rt0.c1) NOT BETWEEN ('') AND (rt0.c2)), (NOT (rt0.c1)))))) ISNULL));
SELECT vt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ('|6n5D軖') UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ('|6n5D軖'))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((('|6n5D軖') ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL vt0.c1, rt0.c1, rt0.c2, rt0.c0, vt0.lid, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c2, rt0.c0, vt0.lid, vt0.c0;
SELECT vt0.c1, rt0.c1, rt0.c2, rt0.c0, vt0.lid, vt0.c0 FROM vt0, rt0 WHERE (((((CASE WHEN rt0.c2 THEN vt0.lid WHEN 0xffffffffbaa6adee THEN 0.3325161887987068 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)AND(((vt0.lid) ISNULL))))AND(((rt0.c0) ISNULL)))) GROUP BY vt0.c1, rt0.c1, rt0.c2, rt0.c0, vt0.lid, vt0.c0 UNION SELECT vt0.c1, rt0.c1, rt0.c2, rt0.c0, vt0.lid, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((((CASE WHEN rt0.c2 THEN vt0.lid WHEN 0Xffffffffbaa6adee THEN 0.3325161887987068 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)AND(((vt0.lid) ISNULL))))AND(((rt0.c0) ISNULL)))))) GROUP BY vt0.c1, rt0.c1, rt0.c2, rt0.c0, vt0.lid, vt0.c0 UNION SELECT vt0.c1, rt0.c1, rt0.c2, rt0.c0, vt0.lid, vt0.c0 FROM vt0, rt0 WHERE (((((((CASE WHEN rt0.c2 THEN vt0.lid WHEN 0xffffffffbaa6adee THEN 0.3325161887987068 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)AND(((vt0.lid) ISNULL))))AND(((rt0.c0) ISNULL)))) ISNULL)) GROUP BY vt0.c1, rt0.c1, rt0.c2, rt0.c0, vt0.lid, vt0.c0;
SELECT ALL vt0.c1, rt0.c1, rt0.c2, rt0.c0, vt0.lid, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c2, rt0.c0, vt0.lid, vt0.c0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((AVG(MIN(COUNT(TOTAL(SUM(rt0.c1)))))) NOT BETWEEN (((((GROUP_CONCAT(rt0.c2))AND(TOTAL(x''))))OR(MIN(TOTAL(GROUP_CONCAT(GROUP_CONCAT(SUM(rt0.c2)))))))) AND (SUM(rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((AVG(MIN(COUNT(TOTAL(SUM(rt0.c1)))))) NOT BETWEEN (((((GROUP_CONCAT(rt0.c2))AND(TOTAL(x''))))OR(MIN(TOTAL(GROUP_CONCAT(GROUP_CONCAT(SUM(rt0.c2)))))))) AND (SUM(rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((AVG(MIN(COUNT(TOTAL(SUM(rt0.c1)))))) NOT BETWEEN (((((GROUP_CONCAT(rt0.c2))AND(TOTAL(x''))))OR(MIN(TOTAL(GROUP_CONCAT(GROUP_CONCAT(SUM(rt0.c2)))))))) AND (SUM(rt0.c0)))) ISNULL);
SELECT MIN(LIKE(CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE vt0.c1 END, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c1)), '}')) FROM vt0, rt0;
SELECT ALL * FROM rt0 NATURAL JOIN vt0;
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c1) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL * FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c0, vt0.lid, rt0.c2, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, vt0.lid, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((x'')<((rt0.c0 IN ())))) UNION SELECT DISTINCT vt0.c0, vt0.lid, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((x'')<((rt0.c0 IN ())))))) UNION SELECT DISTINCT vt0.c0, vt0.lid, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((((x'')<((rt0.c0 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.lid, rt0.c2, rt0.c0 FROM vt0, rt0;
SELECT vt0.lid, rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY vt0.lid, rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c0;
SELECT vt0.lid, rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (COALESCE(CAST(rt0.c2 AS TEXT), (~ (rt0.c1)))) GROUP BY vt0.lid, rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c0 UNION SELECT ALL vt0.lid, rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((NOT (COALESCE(CAST(rt0.c2 AS TEXT), (~ (rt0.c1)))))) GROUP BY vt0.lid, rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c0 UNION SELECT ALL vt0.lid, rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((COALESCE(CAST(rt0.c2 AS TEXT), (~ (rt0.c1)))) ISNULL)) GROUP BY vt0.lid, rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c0;
SELECT vt0.lid, rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY vt0.lid, rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c1, vt0.c0, vt0.c1, rt0.c0, rt0.c2, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, vt0.c1, rt0.c0, rt0.c2, vt0.lid;
SELECT rt0.c1, vt0.c0, vt0.c1, rt0.c0, rt0.c2, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, vt0.c1, rt0.c0, rt0.c2, vt0.lid HAVING GROUP_CONCAT(rt0.c1) COLLATE RTRIM UNION ALL SELECT rt0.c1, vt0.c0, vt0.c1, rt0.c0, rt0.c2, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, vt0.c1, rt0.c0, rt0.c2, vt0.lid HAVING (NOT (GROUP_CONCAT(rt0.c1) COLLATE RTRIM)) UNION ALL SELECT rt0.c1, vt0.c0, vt0.c1, rt0.c0, rt0.c2, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, vt0.c1, rt0.c0, rt0.c2, vt0.lid HAVING ((GROUP_CONCAT(rt0.c1) COLLATE RTRIM) ISNULL);
SELECT rt0.c1, vt0.c0, vt0.c1, rt0.c0, rt0.c2, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, vt0.c1, rt0.c0, rt0.c2, vt0.lid;
SELECT rt0.c1, vt0.c0, vt0.c1, rt0.c0, rt0.c2, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, vt0.c1, rt0.c0, rt0.c2, vt0.lid HAVING GROUP_CONCAT(rt0.c1) COLLATE RTRIM UNION ALL SELECT rt0.c1, vt0.c0, vt0.c1, rt0.c0, rt0.c2, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, vt0.c1, rt0.c0, rt0.c2, vt0.lid HAVING (NOT (GROUP_CONCAT(rt0.c1) COLLATE RTRIM)) UNION ALL SELECT rt0.c1, vt0.c0, vt0.c1, rt0.c0, rt0.c2, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, vt0.c1, rt0.c0, rt0.c2, vt0.lid HAVING ((GROUP_CONCAT(rt0.c1) COLLATE RTRIM) ISNULL);
SELECT rt0.c1, vt0.c0, vt0.c1, rt0.c0, rt0.c2, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, vt0.c1, rt0.c0, rt0.c2, vt0.lid;
SELECT * FROM rt0 NATURAL JOIN vt0;
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((((rt0.c0)AND((- (vt0.c1)))))AND(ROUND(rt0.c2, rt0.c1)))) UNION ALL SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (((((rt0.c0)AND((- (vt0.c1)))))AND(ROUND(rt0.c2, rt0.c1)))))) UNION ALL SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((((((rt0.c0)AND((- (vt0.c1)))))AND(ROUND(rt0.c2, rt0.c1)))) ISNULL));
SELECT * FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) IN ())) UNION SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) IN ())))) UNION SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) IN ())) ISNULL));
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0;
SELECT ALL rt0.c2, vt0.c1, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, vt0.c1, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST(0.060283811057640246 AS INTEGER)))) GROUP BY rt0.c2, vt0.c1, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, vt0.c1, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT ((NOT (CAST(0.060283811057640246 AS INTEGER)))))) GROUP BY rt0.c2, vt0.c1, rt0.c1, rt0.c0 UNION SELECT rt0.c2, vt0.c1, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((((NOT (CAST(0.060283811057640246 AS INTEGER)))) ISNULL)) GROUP BY rt0.c2, vt0.c1, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, vt0.c1, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, rt0.c0;
SELECT ALL rt0.c0, vt0.c1, vt0.lid, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c1, vt0.lid, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c1, vt0.lid, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c1, vt0.lid, rt0.c1, rt0.c2 HAVING ((((COUNT(*))OR(SUM(COUNT(TOTAL(vt0.c1))))))OR(MAX(GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT ALL rt0.c0, vt0.c1, vt0.lid, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c1, vt0.lid, rt0.c1, rt0.c2 HAVING (NOT (((((COUNT(*))OR(SUM(COUNT(TOTAL(vt0.c1))))))OR(MAX(GROUP_CONCAT(rt0.c2)))))) UNION ALL SELECT rt0.c0, vt0.c1, vt0.lid, rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c1, vt0.lid, rt0.c1, rt0.c2 HAVING ((((((COUNT(*))OR(SUM(COUNT(TOTAL(vt0.c1))))))OR(MAX(GROUP_CONCAT(rt0.c2))))) ISNULL);
SELECT ALL vt0.c1, vt0.c0, rt0.c1, vt0.lid, rt0.c2, rt0.c0 FROM vt0, rt0;
SELECT vt0.c1, vt0.c0, rt0.c1, vt0.lid, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((((rt0.c2)-(vt0.lid)))<<(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0))))) UNION ALL SELECT vt0.c1, vt0.c0, rt0.c1, vt0.lid, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((((rt0.c2)-(vt0.lid)))<<(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0))))))) UNION ALL SELECT vt0.c1, vt0.c0, rt0.c1, vt0.lid, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((((((rt0.c2)-(vt0.lid)))<<(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0))))) ISNULL));
SELECT ALL vt0.c1, vt0.c0, rt0.c1, vt0.lid, rt0.c2, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c1, vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c1, vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((((('2(U_w,.UW')AND(rt0.c1)))*((vt0.lid IN ())))) UNION SELECT DISTINCT vt0.c1, vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((NOT ((((('2(U_w,.UW')AND(rt0.c1)))*((vt0.lid IN ())))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((((((('2(U_w,.UW')AND(rt0.c1)))*((vt0.lid IN ())))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, rt0.c1, rt0.c2, rt0.c0 FROM vt0, rt0;
SELECT vt0.c0, vt0.lid, rt0.c0, rt0.c2, vt0.c1, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, vt0.lid, rt0.c0, rt0.c2, vt0.c1, rt0.c1;
SELECT vt0.c0, vt0.lid, rt0.c0, rt0.c2, vt0.c1, rt0.c1 FROM rt0, vt0 WHERE (((x'')!=(x''))) GROUP BY vt0.c0, vt0.lid, rt0.c0, rt0.c2, vt0.c1, rt0.c1 UNION SELECT ALL vt0.c0, vt0.lid, rt0.c0, rt0.c2, vt0.c1, rt0.c1 FROM rt0, vt0 WHERE ((NOT (((x'')!=(x''))))) GROUP BY vt0.c0, vt0.lid, rt0.c0, rt0.c2, vt0.c1, rt0.c1 UNION SELECT ALL vt0.c0, vt0.lid, rt0.c0, rt0.c2, vt0.c1, rt0.c1 FROM rt0, vt0 WHERE (((((x'')!=(x''))) ISNULL)) GROUP BY vt0.c0, vt0.lid, rt0.c0, rt0.c2, vt0.c1, rt0.c1;
SELECT vt0.c0, vt0.lid, rt0.c0, rt0.c2, vt0.c1, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, vt0.lid, rt0.c0, rt0.c2, vt0.c1, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM vt0 INNER JOIN rt0 ON MIN(((vt0.lid) IS TRUE), UPPER(vt0.c0), ((NULL) NOT BETWEEN (vt0.lid) AND (vt0.lid)), HEX(DISTINCT rt0.c0)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM vt0 INNER JOIN rt0 ON MIN(((vt0.lid) IS TRUE), UPPER(vt0.c0), ((NULL) NOT BETWEEN (vt0.lid) AND (vt0.lid)), HEX(DISTINCT rt0.c0)) GROUP BY rt0.c2, rt0.c1 HAVING TOTAL((((rt0.c2, vt0.lid, rt0.c2)) NOT BETWEEN ((TOTAL(AVG(COUNT(*))), vt0.lid, MAX(rt0.c2))) AND ((vt0.lid, GROUP_CONCAT(rt0.c0), COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM vt0 INNER JOIN rt0 ON MIN(((vt0.lid) IS TRUE), UPPER(vt0.c0), ((NULL) NOT BETWEEN (vt0.lid) AND (vt0.lid)), HEX(DISTINCT rt0.c0)) GROUP BY rt0.c2, rt0.c1 HAVING (NOT (TOTAL((((rt0.c2, vt0.lid, rt0.c2)) NOT BETWEEN ((TOTAL(AVG(COUNT(*))), vt0.lid, MAX(rt0.c2))) AND ((vt0.lid, GROUP_CONCAT(rt0.c0), COUNT(*))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM vt0 INNER JOIN rt0 ON MIN(((vt0.lid) IS TRUE), UPPER(vt0.c0), ((NULL) NOT BETWEEN (vt0.lid) AND (vt0.lid)), HEX(DISTINCT rt0.c0)) GROUP BY rt0.c2, rt0.c1 HAVING ((TOTAL((((rt0.c2, vt0.lid, rt0.c2)) NOT BETWEEN ((TOTAL(AVG(COUNT(*))), vt0.lid, MAX(rt0.c2))) AND ((vt0.lid, GROUP_CONCAT(rt0.c0), COUNT(*)))))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))/(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))/(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))/(rt0.c2))) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((((vt0.c0 IN (vt0.c1))) ISNULL)) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((((vt0.c0 IN (vt0.c1))) ISNULL)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((vt0.c0 IN (vt0.c1))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((((((- (vt0.c1)))OR(((x'b9ed') IS TRUE))))OR((NOT (vt0.lid))))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 UNION SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((((((- (vt0.c1)))OR(((x'b9ed') IS TRUE))))OR((NOT (vt0.lid))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((((((((- (vt0.c1)))OR(((x'b9ed') IS TRUE))))OR((NOT (vt0.lid))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT TOTAL((+ (((x'')>>(-1.387285886E9))))) FROM rt0, vt0;
SELECT rt0.c2, rt0.c0, vt0.lid, vt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c2, rt0.c0, vt0.lid, vt0.c0 FROM rt0, vt0 WHERE (vt0.lid) UNION ALL SELECT rt0.c2, rt0.c0, vt0.lid, vt0.c0 FROM rt0, vt0 WHERE ((NOT (vt0.lid))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.lid, vt0.c0 FROM rt0, vt0 WHERE (((vt0.lid) ISNULL));
SELECT rt0.c2, rt0.c0, vt0.lid, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT ALL vt0.lid, vt0.c0 FROM vt0 WHERE ((((((vt0.c1))!=((vt0.c1))))+((vt0.c0 IN ('-233014412'))))) GROUP BY vt0.lid, vt0.c0 UNION SELECT vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c1))!=((vt0.c1))))+((vt0.c0 IN ('-233014412'))))))) GROUP BY vt0.lid, vt0.c0 UNION SELECT ALL vt0.lid, vt0.c0 FROM vt0 WHERE ((((((((vt0.c1))<>((vt0.c1))))+((vt0.c0 IN ('-233014412'))))) ISNULL)) GROUP BY vt0.lid, vt0.c0;
SELECT vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((TOTAL(vt0.c1)) NOT NULL) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((TOTAL(vt0.c1)) NOT NULL))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((TOTAL(vt0.c1)) NOT NULL)) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((TOTAL(vt0.c1)) NOT NULL) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((TOTAL(vt0.c1)) NOT NULL))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((TOTAL(vt0.c1)) NOT NULL)) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT rt0.c0, vt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c0, vt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((json_array_length(x''))|(((vt0.c1)+(rt0.c0))))) UNION ALL SELECT rt0.c0, vt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((json_array_length(x''))|(((vt0.c1)+(rt0.c0))))))) UNION ALL SELECT ALL rt0.c0, vt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((((json_array_length(x''))|(((vt0.c1)+(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((('-1295748023') ISNULL) IN (((vt0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((('-1295748023') ISNULL) IN (((vt0.c0) NOT NULL)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((('-1295748023') ISNULL) IN (((vt0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 WHERE (vt0.c0) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0, rt0 WHERE ((NOT (vt0.c0))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0, rt0 WHERE (((vt0.c0) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT ALL vt0.c0, rt0.c0, vt0.c1, vt0.lid, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)-(rt0.c2))) NOTNULL) GROUP BY vt0.c0, rt0.c0, vt0.c1, vt0.lid, rt0.c1;
SELECT vt0.c0, rt0.c0, vt0.c1, vt0.lid, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)-(rt0.c2))) NOTNULL) GROUP BY vt0.c0, rt0.c0, vt0.c1, vt0.lid, rt0.c1 HAVING MAX(NULL) UNION ALL SELECT vt0.c0, rt0.c0, vt0.c1, vt0.lid, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)-(rt0.c2))) NOTNULL) GROUP BY vt0.c0, rt0.c0, vt0.c1, vt0.lid, rt0.c1 HAVING (NOT (MAX(NULL))) UNION ALL SELECT vt0.c0, rt0.c0, vt0.c1, vt0.lid, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)-(rt0.c2))) NOTNULL) GROUP BY vt0.c0, rt0.c0, vt0.c1, vt0.lid, rt0.c1 HAVING ((MAX(NULL)) ISNULL);
SELECT ALL vt0.c0, rt0.c0, vt0.c1, vt0.lid, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)-(rt0.c2))) NOTNULL) GROUP BY vt0.c0, rt0.c0, vt0.c1, vt0.lid, rt0.c1;
SELECT vt0.c0, rt0.c0, vt0.c1, vt0.lid, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)-(rt0.c2))) NOTNULL) GROUP BY vt0.c0, rt0.c0, vt0.c1, vt0.lid, rt0.c1 HAVING MAX(NULL) UNION ALL SELECT vt0.c0, rt0.c0, vt0.c1, vt0.lid, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)-(rt0.c2))) NOTNULL) GROUP BY vt0.c0, rt0.c0, vt0.c1, vt0.lid, rt0.c1 HAVING (NOT (MAX(NULL))) UNION ALL SELECT vt0.c0, rt0.c0, vt0.c1, vt0.lid, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)-(rt0.c2))) NOTNULL) GROUP BY vt0.c0, rt0.c0, vt0.c1, vt0.lid, rt0.c1 HAVING ((MAX(NULL)) ISNULL);
SELECT ALL vt0.c0, rt0.c0, vt0.c1, vt0.lid, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)-(rt0.c2))) NOTNULL) GROUP BY vt0.c0, rt0.c0, vt0.c1, vt0.lid, rt0.c1;
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (CASE rt0.c0  WHEN x'' THEN vt0.c1 WHEN rt0.c0 THEN '-713505837' WHEN vt0.c1 THEN vt0.c1 ELSE x'' END))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT ((NOT (CASE rt0.c0  WHEN x'' THEN vt0.c1 WHEN rt0.c0 THEN '-713505837' WHEN vt0.c1 THEN vt0.c1 ELSE x'' END))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((((NOT (CASE rt0.c0  WHEN x'' THEN vt0.c1 WHEN rt0.c0 THEN '-713505837' WHEN vt0.c1 THEN vt0.c1 ELSE x'' END))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0, rt0.c1, vt0.lid, vt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0, rt0.c1, vt0.lid, vt0.c1 FROM rt0, vt0 WHERE (((((0.8185325268301238) NOT BETWEEN (rt0.c2) AND (rt0.c1)))IS NOT((vt0.lid IN ())))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0, rt0.c1, vt0.lid, vt0.c1 FROM rt0, vt0 WHERE ((NOT (((((0.8185325268301238) NOT BETWEEN (rt0.c2) AND (rt0.c1)))IS NOT((vt0.lid IN ())))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0, rt0.c1, vt0.lid, vt0.c1 FROM rt0, vt0 WHERE (((((((0.8185325268301238) NOT BETWEEN (rt0.c2) AND (rt0.c1)))IS NOT((vt0.lid IN ())))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0, rt0.c1, vt0.lid, vt0.c1 FROM rt0, vt0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.lid, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.lid, vt0.c0, vt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.lid, vt0.c0, vt0.c1 FROM rt0, vt0 WHERE (0.2820375571529792) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.lid, vt0.c0, vt0.c1 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.lid, vt0.c0, vt0.c1 FROM rt0, vt0 WHERE ((NOT (0.2820375571529792))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.lid, vt0.c0, vt0.c1 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt0.lid, vt0.c0, vt0.c1 FROM rt0, vt0 WHERE (((0.2820375571529792) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.lid, vt0.c0, vt0.c1;
SELECT rt0.c2, rt0.c1, rt0.c0, vt0.lid, vt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt0.lid, vt0.c0, vt0.c1;
SELECT vt0.lid FROM rt0, vt0 GROUP BY vt0.lid;
SELECT vt0.lid FROM rt0, vt0 GROUP BY vt0.lid HAVING ((MAX(COUNT(*))) NOTNULL) UNION ALL SELECT ALL vt0.lid FROM rt0, vt0 GROUP BY vt0.lid HAVING (NOT (((MAX(COUNT(*))) NOTNULL))) UNION ALL SELECT vt0.lid FROM rt0, vt0 GROUP BY vt0.lid HAVING ((((MAX(COUNT(*))) NOTNULL)) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CAST('2(U_W,.UW' AS NUMERIC)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST('2(U_W,.UW' AS NUMERIC)))) UNION ALL SELECT * FROM vt0 WHERE (((CAST('2(U_W,.UW' AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE ('xECu') UNION SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE ((NOT ('xECu'))) UNION SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE ((('xECu') ISNULL));
SELECT DISTINCT rt0.c2 FROM vt0, rt0;
SELECT vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM rt0, vt0 WHERE (vt0.c1) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM rt0, vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM rt0, vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid;
SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid HAVING (- (AVG(TOTAL(GROUP_CONCAT(MIN(vt0.c1)))))) UNION ALL SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid HAVING (NOT ((- (AVG(TOTAL(GROUP_CONCAT(MIN(vt0.c1)))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid HAVING (((- (AVG(TOTAL(GROUP_CONCAT(MIN(vt0.c1))))))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (ABS(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (ABS(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((ABS(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT vt0.lid, vt0.c0, rt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT vt0.lid, vt0.c0, rt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((rt0.c1 IN ()) IN ())) UNION SELECT DISTINCT vt0.lid, vt0.c0, rt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((rt0.c1 IN ()) IN ())))) UNION SELECT DISTINCT vt0.lid, vt0.c0, rt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((((rt0.c1 IN ()) IN ())) ISNULL));
SELECT DISTINCT vt0.lid, vt0.c0, rt0.c0, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0;
SELECT vt0.lid FROM vt0, rt0 GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0, rt0 WHERE ((((vt0.lid)) BETWEEN (((- (vt0.lid)))) AND (((~ (rt0.c2)))))) GROUP BY vt0.lid UNION SELECT vt0.lid FROM vt0, rt0 WHERE ((NOT ((((vt0.lid)) BETWEEN (((- (vt0.lid)))) AND (((~ (rt0.c2)))))))) GROUP BY vt0.lid UNION SELECT ALL vt0.lid FROM vt0, rt0 WHERE ((((((vt0.lid)) BETWEEN (((- (vt0.lid)))) AND (((~ (rt0.c2)))))) ISNULL)) GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0, rt0 GROUP BY vt0.lid;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 NOT INDEXED GROUP BY vt0.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 NOT INDEXED GROUP BY vt0.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (CAST(rt0.c2 COLLATE RTRIM AS REAL)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST(rt0.c2 COLLATE RTRIM AS REAL)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(rt0.c2 COLLATE RTRIM AS REAL)) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((((((vt0.c0)LIKE(rt0.c1)))AND((+ (vt0.c1)))))OR(((((((((vt0.lid)OR(rt0.c2)))AND(0.3299638763647218)))OR(rt0.c0)))AND(rt0.c0))));
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((((((vt0.c0)LIKE(rt0.c1)))AND((+ (vt0.c1)))))OR(((((((((vt0.lid)OR(rt0.c2)))AND(0.3299638763647218)))OR(rt0.c0)))AND(rt0.c0)))) WHERE (((~ (rt0.c1)) IN ())) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((((((vt0.c0)LIKE(rt0.c1)))AND((+ (vt0.c1)))))OR(((((((((vt0.lid)OR(rt0.c2)))AND(0.3299638763647218)))OR(rt0.c0)))AND(rt0.c0)))) WHERE ((NOT (((~ (rt0.c1)) IN ())))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((((((vt0.c0)LIKE(rt0.c1)))AND((+ (vt0.c1)))))OR(((((((((vt0.lid)OR(rt0.c2)))AND(0.3299638763647218)))OR(rt0.c0)))AND(rt0.c0)))) WHERE (((((~ (rt0.c1)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN vt0 ON ((((((vt0.c0)LIKE(rt0.c1)))AND((+ (vt0.c1)))))OR(((((((((vt0.lid)OR(rt0.c2)))AND(0.3299638763647218)))OR(rt0.c0)))AND(rt0.c0))));
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (CAST(UNLIKELY(DISTINCT rt0.c0) AS INTEGER)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (CAST(UNLIKELY(DISTINCT rt0.c0) AS INTEGER)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((CAST(UNLIKELY(DISTINCT rt0.c0) AS INTEGER)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING 'K2w|kxg' UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ('K2w|kxg')) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (('K2w|kxg') ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING 'K2w|kxg' UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ('K2w|kxg')) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (('K2w|kxg') ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE ((~ (vt0.c1 COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((~ (vt0.c1 COLLATE BINARY))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((((~ (vt0.c1 COLLATE BINARY))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (GLOB(((((((((vt0.lid)AND(-1.643375123E9)))AND(vt0.c0)))OR(vt0.c1)))OR(rt0.c0)), CAST(rt0.c1 AS BLOB))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (GLOB(((((((((vt0.lid)AND(-1.643375123E9)))AND(vt0.c0)))OR(vt0.c1)))OR(rt0.c0)), CAST(rt0.c1 AS BLOB))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((GLOB(((((((((vt0.lid)AND(-1.643375123E9)))AND(vt0.c0)))OR(vt0.c1)))OR(rt0.c0)), CAST(rt0.c1 AS BLOB))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid;
SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0 WHERE ((((vt0.c0 IN ())) IS TRUE)) GROUP BY vt0.c0, vt0.c1, vt0.lid UNION SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0 WHERE ((NOT ((((vt0.c0 IN ())) IS TRUE)))) GROUP BY vt0.c0, vt0.c1, vt0.lid UNION SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0 WHERE ((((((vt0.c0 IN ())) IS TRUE)) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt0.lid;
SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid;
SELECT ALL vt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(HEX(DISTINCT vt0.c1) AS REAL) GROUP BY vt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c2;
SELECT vt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(HEX(DISTINCT vt0.c1) AS REAL) GROUP BY vt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c2 HAVING MAX(COUNT(*)) UNION ALL SELECT vt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(HEX(DISTINCT vt0.c1) AS REAL) GROUP BY vt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c2 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT vt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(HEX(DISTINCT vt0.c1) AS REAL) GROUP BY vt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c2 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT vt0.c0, vt0.lid FROM vt0;
SELECT vt0.c0, vt0.lid FROM vt0 WHERE (CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.lid ELSE x'' END AS NUMERIC)) UNION ALL SELECT ALL vt0.c0, vt0.lid FROM vt0 WHERE ((NOT (CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.lid ELSE x'' END AS NUMERIC)))) UNION ALL SELECT ALL vt0.c0, vt0.lid FROM vt0 WHERE (((CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.lid ELSE x'' END AS NUMERIC)) ISNULL));
SELECT vt0.c0, vt0.lid FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c1) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((NOT (((vt0.c1) IS FALSE)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((NOT (((vt0.c1) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c1, rt0.c2, vt0.c0, vt0.lid, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, vt0.lid, vt0.c1;
SELECT rt0.c1, rt0.c2, vt0.c0, vt0.lid, vt0.c1 FROM vt0, rt0 WHERE (vt0.c1 COLLATE NOCASE) GROUP BY rt0.c1, rt0.c2, vt0.c0, vt0.lid, vt0.c1 UNION SELECT rt0.c1, rt0.c2, vt0.c0, vt0.lid, vt0.c1 FROM vt0, rt0 WHERE ((NOT (vt0.c1 COLLATE NOCASE))) GROUP BY rt0.c1, rt0.c2, vt0.c0, vt0.lid, vt0.c1 UNION SELECT ALL rt0.c1, rt0.c2, vt0.c0, vt0.lid, vt0.c1 FROM vt0, rt0 WHERE (((vt0.c1 COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1, rt0.c2, vt0.c0, vt0.lid, vt0.c1;
SELECT ALL rt0.c1, rt0.c2, vt0.c0, vt0.lid, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c0, vt0.lid, vt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT vt0.c1, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0;
SELECT vt0.c1, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((((((((NULL, rt0.c1, vt0.lid))>((vt0.c1, rt0.c1, rt0.c2))))OR(0.93492461606069)))AND(((vt0.c0)IS NOT(vt0.c0))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT ((((((((NULL, rt0.c1, vt0.lid))>((vt0.c1, rt0.c1, rt0.c2))))OR(0.93492461606069)))AND(((vt0.c0)IS NOT(vt0.c0))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((((((((((NULL, rt0.c1, vt0.lid))>((vt0.c1, rt0.c1, rt0.c2))))OR(0.93492461606069)))AND(((vt0.c0)IS NOT(vt0.c0))))) ISNULL));
SELECT vt0.c1, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)), ((vt0.c1) IS TRUE), ((vt0.lid) IS FALSE))) AND (((vt0.c0 IN (vt0.lid)), vt0.c1, (NULL IN ()))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)), ((vt0.c1) IS TRUE), ((vt0.lid) IS FALSE))) AND (((vt0.c0 IN (vt0.lid)), vt0.c1, (NULL IN ()))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)), ((vt0.c1) IS TRUE), ((vt0.lid) IS FALSE))) AND (((vt0.c0 IN (vt0.lid)), vt0.c1, (NULL IN ()))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.lid)))AND(vt0.c1)))OR(vt0.lid))) NOT NULL) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.lid)))AND(vt0.c1)))OR(vt0.lid))) NOT NULL) WHERE (vt0.lid) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.lid)))AND(vt0.c1)))OR(vt0.lid))) NOT NULL) WHERE ((NOT (vt0.lid))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.lid)))AND(vt0.c1)))OR(vt0.lid))) NOT NULL) WHERE (((vt0.lid) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.lid)))AND(vt0.c1)))OR(vt0.lid))) NOT NULL) GROUP BY rt0.c1;
SELECT ALL vt0.lid, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.lid, rt0.c2, rt0.c0, rt0.c1;
SELECT vt0.lid, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.lid, rt0.c2, rt0.c0, rt0.c1 HAVING MAX(CASE WHEN MIN(4.90426426E8) THEN -7836595 WHEN GROUP_CONCAT(rt0.c0) THEN x'' WHEN GROUP_CONCAT(rt0.c1) THEN vt0.lid END) UNION ALL SELECT vt0.lid, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.lid, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (MAX(CASE WHEN MIN(4.90426426E8) THEN -7836595 WHEN GROUP_CONCAT(rt0.c0) THEN x'' WHEN GROUP_CONCAT(rt0.c1) THEN vt0.lid END))) UNION ALL SELECT vt0.lid, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.lid, rt0.c2, rt0.c0, rt0.c1 HAVING ((MAX(CASE WHEN MIN(4.90426426E8) THEN -7836595 WHEN GROUP_CONCAT(rt0.c0) THEN x'' WHEN GROUP_CONCAT(rt0.c1) THEN vt0.lid END)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, vt0.c1, rt0.c1 FROM vt0, rt0;
SELECT rt0.c2, rt0.c0, vt0.c1, rt0.c1 FROM vt0, rt0 WHERE ('s-wd') UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c1, rt0.c1 FROM vt0, rt0 WHERE ((NOT ('s-wd'))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c1, rt0.c1 FROM vt0 NOT INDEXED, rt0 WHERE ((('s-wd') ISNULL));
SELECT ALL rt0.c2, rt0.c0, vt0.c1, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((((((vt0.c1)/(vt0.c1)))AND(HEX(vt0.c1))))OR('')))AND(((vt0.c1) IS FALSE))))AND(rt0.c2))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((((((((vt0.c1)/(vt0.c1)))AND(HEX(vt0.c1))))OR('')))AND(((vt0.c1) IS FALSE))))AND(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((((((((vt0.c1)/(vt0.c1)))AND(HEX(vt0.c1))))OR('')))AND(((vt0.c1) IS FALSE))))AND(rt0.c2))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c0, vt0.c1, vt0.lid, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c1, vt0.lid, rt0.c2, rt0.c1, vt0.c0;
SELECT ALL rt0.c0, vt0.c1, vt0.lid, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((rt0.c0)<=(rt0.c2)) COLLATE NOCASE) GROUP BY rt0.c0, vt0.c1, vt0.lid, rt0.c2, rt0.c1, vt0.c0 UNION SELECT rt0.c0, vt0.c1, vt0.lid, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((rt0.c0)<=(rt0.c2)) COLLATE NOCASE))) GROUP BY rt0.c0, vt0.c1, vt0.lid, rt0.c2, rt0.c1, vt0.c0 UNION SELECT ALL rt0.c0, vt0.c1, vt0.lid, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((((rt0.c0)<=(rt0.c2)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0, vt0.c1, vt0.lid, rt0.c2, rt0.c1, vt0.c0;
SELECT ALL rt0.c0, vt0.c1, vt0.lid, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c1, vt0.lid, rt0.c2, rt0.c1, vt0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0 IN ())))!=((((((rt0.c1)OR(vt0.lid)))OR(vt0.c0))))) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0 IN ())))<>((((((rt0.c1)OR(vt0.lid)))OR(vt0.c0))))) GROUP BY vt0.c0, vt0.c1 HAVING (((SUM(SUM(COUNT(*))) IN ()))&((- (GROUP_CONCAT(vt0.c1))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0 IN ())))!=((((((rt0.c1)OR(vt0.lid)))OR(vt0.c0))))) GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((((SUM(SUM(COUNT(*))) IN ()))&((- (GROUP_CONCAT(vt0.c1))))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0 IN ())))<>((((((rt0.c1)OR(vt0.lid)))OR(vt0.c0))))) GROUP BY vt0.c0, vt0.c1 HAVING (((((SUM(SUM(COUNT(*))) IN ()))&((- (GROUP_CONCAT(vt0.c1)))))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0 IN ())))!=((((((rt0.c1)OR(vt0.lid)))OR(vt0.c0))))) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0 IN ())))<>((((((rt0.c1)OR(vt0.lid)))OR(vt0.c0))))) GROUP BY vt0.c0, vt0.c1 HAVING (((SUM(SUM(COUNT(*))) IN ()))&((- (GROUP_CONCAT(vt0.c1))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0 IN ())))!=((((((rt0.c1)OR(vt0.lid)))OR(vt0.c0))))) GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((((SUM(SUM(COUNT(*))) IN ()))&((- (GROUP_CONCAT(vt0.c1))))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0 IN ())))<>((((((rt0.c1)OR(vt0.lid)))OR(vt0.c0))))) GROUP BY vt0.c0, vt0.c1 HAVING (((((SUM(SUM(COUNT(*))) IN ()))&((- (GROUP_CONCAT(vt0.c1)))))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0 IN ())))!=((((((rt0.c1)OR(vt0.lid)))OR(vt0.c0))))) GROUP BY vt0.c0, vt0.c1;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END)OR(((rt0.c1) NOT NULL))))AND(rt0.c0))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END)OR(((rt0.c1) NOT NULL))))AND(rt0.c0))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END)OR(((rt0.c1) NOT NULL))))AND(rt0.c0))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0, rt0;
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((((((((((0.5906904777357177)AND(x'')))OR(rt0.c0)))AND(vt0.lid)))AND(x'')) IN ())) UNION SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((NOT ((((((((((0.5906904777357177)AND(x'')))OR(rt0.c0)))AND(vt0.lid)))AND(x'')) IN ())))) UNION SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((((((((((((0.5906904777357177)AND(x'')))OR(rt0.c0)))AND(vt0.lid)))AND(x'')) IN ())) ISNULL));
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0, rt0;
SELECT vt0.c0 FROM rt0 INNER JOIN vt0 ON ((((rt0.c0)%(rt0.c2)))>(((((vt0.c1)OR(rt0.c2)))OR(vt0.lid)))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0 INNER JOIN vt0 ON ((((rt0.c0)%(rt0.c2)))>(((((vt0.c1)OR(rt0.c2)))OR(vt0.lid)))) WHERE (((((+ (vt0.c1))))==((MIN(vt0.c1, rt0.c2, vt0.lid, rt0.c2))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM rt0 INNER JOIN vt0 ON ((((rt0.c0)%(rt0.c2)))>(((((vt0.c1)OR(rt0.c2)))OR(vt0.lid)))) WHERE ((NOT (((((+ (vt0.c1))))=((MIN(vt0.c1, rt0.c2, vt0.lid, rt0.c2))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt0 INNER JOIN vt0 ON ((((rt0.c0)%(rt0.c2)))>(((((vt0.c1)OR(rt0.c2)))OR(vt0.lid)))) WHERE (((((((+ (vt0.c1))))=((MIN(vt0.c1, rt0.c2, vt0.lid, rt0.c2))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0 INNER JOIN vt0 ON ((((rt0.c0)%(rt0.c2)))>(((((vt0.c1)OR(rt0.c2)))OR(vt0.lid)))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING SUM(SUM(AVG(rt0.c2))) UNION ALL SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING (NOT (SUM(SUM(AVG(rt0.c2))))) UNION ALL SELECT vt0.c0 FROM vt0, rt0 GROUP BY vt0.c0 HAVING ((SUM(SUM(AVG(rt0.c2)))) ISNULL);
SELECT ALL rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (json_object(rt0.c1, rt0.c0) COLLATE NOCASE) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (json_object(rt0.c1, rt0.c0) COLLATE NOCASE))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((json_object(rt0.c1, rt0.c0) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c0)AND(rt0.c1))) BETWEEN ((((rt0.c2))<>((rt0.c0)))) AND (QUOTE(rt0.c0)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0)AND(rt0.c1))) BETWEEN ((((rt0.c2))!=((rt0.c0)))) AND (QUOTE(rt0.c0)))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c1))) BETWEEN ((((rt0.c2))!=((rt0.c0)))) AND (QUOTE(rt0.c0)))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid HAVING COUNT(COUNT(MIN(vt0.c0))) UNION ALL SELECT ALL vt0.lid FROM vt0 GROUP BY vt0.lid HAVING (NOT (COUNT(COUNT(MIN(vt0.c0))))) UNION ALL SELECT ALL vt0.lid FROM vt0 GROUP BY vt0.lid HAVING ((COUNT(COUNT(MIN(vt0.c0)))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (CASE WHEN (- (vt0.lid)) THEN ((rt0.c0) IS TRUE) WHEN ((rt0.c1) BETWEEN (vt0.lid) AND (vt0.c1)) THEN (((vt0.lid)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) WHEN ((rt0.c0)|(vt0.c0)) THEN '}2' END) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (CASE WHEN (- (vt0.lid)) THEN ((rt0.c0) IS TRUE) WHEN ((rt0.c1) BETWEEN (vt0.lid) AND (vt0.c1)) THEN (((vt0.lid)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) WHEN ((rt0.c0)|(vt0.c0)) THEN '}2' END))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((CASE WHEN (- (vt0.lid)) THEN ((rt0.c0) IS TRUE) WHEN ((rt0.c1) BETWEEN (vt0.lid) AND (vt0.c1)) THEN (((vt0.lid)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) WHEN ((rt0.c0)|(vt0.c0)) THEN '}2' END) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON ((CASE WHEN '0.25855376769852056' THEN vt0.lid WHEN vt0.lid THEN rt0.c2 WHEN rt0.c0 THEN 0.950678941305148 END)OR((rt0.c2 IN ())));
SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON ((CASE WHEN '0.25855376769852056' THEN vt0.lid WHEN vt0.lid THEN rt0.c2 WHEN rt0.c0 THEN 0.950678941305148 END)OR((rt0.c2 IN ()))) WHERE (((CAST('0.7787137691602932' AS NUMERIC)) NOTNULL)) UNION SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON ((CASE WHEN '0.25855376769852056' THEN vt0.lid WHEN vt0.lid THEN rt0.c2 WHEN rt0.c0 THEN 0.950678941305148 END)OR((rt0.c2 IN ()))) WHERE ((NOT (((CAST('0.7787137691602932' AS NUMERIC)) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON ((CASE WHEN '0.25855376769852056' THEN vt0.lid WHEN vt0.lid THEN rt0.c2 WHEN rt0.c0 THEN 0.950678941305148 END)OR((rt0.c2 IN ()))) WHERE (((((CAST('0.7787137691602932' AS NUMERIC)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON ((CASE WHEN '0.25855376769852056' THEN vt0.lid WHEN vt0.lid THEN rt0.c2 WHEN rt0.c0 THEN 0.950678941305148 END)OR((rt0.c2 IN ())));
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((+ ((rt0.c0 IN ())))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((+ ((rt0.c0 IN ())))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((((+ ((rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL vt0.c0, vt0.lid, rt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.lid, rt0.c0;
SELECT vt0.c0, vt0.lid, rt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.lid, rt0.c0 HAVING GROUP_CONCAT((+ (vt0.c1))) UNION ALL SELECT ALL vt0.c0, vt0.lid, rt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.lid, rt0.c0 HAVING (NOT (GROUP_CONCAT((+ (vt0.c1))))) UNION ALL SELECT vt0.c0, vt0.lid, rt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.lid, rt0.c0 HAVING ((GROUP_CONCAT((+ (vt0.c1)))) ISNULL);
SELECT ALL vt0.c0, vt0.lid, rt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.lid, rt0.c0;
SELECT vt0.c0, vt0.lid, rt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.lid, rt0.c0 HAVING GROUP_CONCAT((+ (vt0.c1))) UNION ALL SELECT ALL vt0.c0, vt0.lid, rt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.lid, rt0.c0 HAVING (NOT (GROUP_CONCAT((+ (vt0.c1))))) UNION ALL SELECT vt0.c0, vt0.lid, rt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.lid, rt0.c0 HAVING ((GROUP_CONCAT((+ (vt0.c1)))) ISNULL);
SELECT ALL vt0.c0, vt0.lid, rt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.lid, rt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (MIN(((((vt0.lid)OR(vt0.c1)))OR(vt0.lid)), ((vt0.c0)GLOB(vt0.c1)), ((vt0.lid)>=(vt0.c1)), ((vt0.c0)>(vt0.lid)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (MIN(((((vt0.lid)OR(vt0.c1)))OR(vt0.lid)), ((vt0.c0)GLOB(vt0.c1)), ((vt0.lid)>=(vt0.c1)), ((vt0.c0)>(vt0.lid)))))) UNION ALL SELECT * FROM vt0 WHERE (((MIN(((((vt0.lid)OR(vt0.c1)))OR(vt0.lid)), ((vt0.c0)GLOB(vt0.c1)), ((vt0.lid)>=(vt0.c1)), ((vt0.c0)>(vt0.lid)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (CASE ((rt0.c1)LIKE(rt0.c1))  WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END THEN HEX(DISTINCT rt0.c2) END) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CASE ((rt0.c1)LIKE(rt0.c1))  WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END THEN HEX(DISTINCT rt0.c2) END))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE ((rt0.c1)LIKE(rt0.c1))  WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END THEN HEX(DISTINCT rt0.c2) END) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid;
SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid HAVING STRFTIME(GROUP_CONCAT(SUM(vt0.c0)), MAX(vt0.lid), GROUP_CONCAT(TOTAL(SUM(MAX(SUM(SUM(AVG(vt0.c0))))))), GROUP_CONCAT(vt0.c0), vt0.c0) UNION ALL SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid HAVING (NOT (STRFTIME(GROUP_CONCAT(SUM(vt0.c0)), MAX(vt0.lid), GROUP_CONCAT(TOTAL(SUM(MAX(SUM(SUM(AVG(vt0.c0))))))), GROUP_CONCAT(vt0.c0), vt0.c0))) UNION ALL SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid HAVING ((STRFTIME(GROUP_CONCAT(SUM(vt0.c0)), MAX(vt0.lid), GROUP_CONCAT(TOTAL(SUM(MAX(SUM(SUM(AVG(vt0.c0))))))), GROUP_CONCAT(vt0.c0), vt0.c0)) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(vt0.lid AS INTEGER)) NOT NULL)) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (((CAST(vt0.lid AS INTEGER)) NOT NULL)))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((((CAST(vt0.lid AS INTEGER)) NOT NULL)) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((NULL) NOT BETWEEN (((rt0.c2)GLOB(rt0.c2))) AND ((((rt0.c1))==((rt0.c1)))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((NULL) NOT BETWEEN (((rt0.c2)GLOB(rt0.c2))) AND ((((rt0.c1))=((rt0.c1)))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((NULL) NOT BETWEEN (((rt0.c2)GLOB(rt0.c2))) AND ((((rt0.c1))=((rt0.c1)))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1;
SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 WHERE (((((((((load_extension(vt0.c1, vt0.lid))AND(vt0.c1)))OR((((vt0.c1, vt0.c0, vt0.lid)) NOT BETWEEN ((vt0.c0, vt0.lid, vt0.lid)) AND ((x'', vt0.c0, vt0.lid))))))AND(CASE WHEN vt0.c1 THEN vt0.lid END)))AND(0.056911841135406926))) GROUP BY vt0.c0, vt0.lid, vt0.c1 UNION SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 WHERE ((NOT (((((((((load_extension(vt0.c1, vt0.lid))AND(vt0.c1)))OR((((vt0.c1, vt0.c0, vt0.lid)) NOT BETWEEN ((vt0.c0, vt0.lid, vt0.lid)) AND ((x'', vt0.c0, vt0.lid))))))AND(CASE WHEN vt0.c1 THEN vt0.lid END)))AND(0.056911841135406926))))) GROUP BY vt0.c0, vt0.lid, vt0.c1 UNION SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 WHERE (((((((((((load_extension(vt0.c1, vt0.lid))AND(vt0.c1)))OR((((vt0.c1, vt0.c0, vt0.lid)) NOT BETWEEN ((vt0.c0, vt0.lid, vt0.lid)) AND ((x'', vt0.c0, vt0.lid))))))AND(CASE WHEN vt0.c1 THEN vt0.lid END)))AND(0.056911841135406926))) ISNULL)) GROUP BY vt0.c0, vt0.lid, vt0.c1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((CASE vt0.c0  WHEN vt0.c1 THEN AVG(vt0.lid) ELSE COUNT(*) END)=(GROUP_CONCAT(AVG(SUM(TOTAL(vt0.c0)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((CASE vt0.c0  WHEN vt0.c1 THEN AVG(vt0.lid) ELSE COUNT(*) END)=(GROUP_CONCAT(AVG(SUM(TOTAL(vt0.c0)))))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((CASE vt0.c0  WHEN vt0.c1 THEN AVG(vt0.lid) ELSE COUNT(*) END)=(GROUP_CONCAT(AVG(SUM(TOTAL(vt0.c0))))))) ISNULL);
SELECT rt0.c0, rt0.c1, vt0.lid FROM rt0 INNER JOIN vt0 ON (((- (vt0.c1))) BETWEEN (vt0.c1) AND (((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0))));
SELECT ALL rt0.c0, rt0.c1, vt0.lid FROM rt0 INNER JOIN vt0 ON (((- (vt0.c1))) BETWEEN (vt0.c1) AND (((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))) WHERE (((NULL) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (rt0.c2 COLLATE BINARY))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.lid FROM rt0 INNER JOIN vt0 ON (((- (vt0.c1))) BETWEEN (vt0.c1) AND (((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))) WHERE ((NOT (((NULL) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (rt0.c2 COLLATE BINARY))))) UNION ALL SELECT rt0.c0, rt0.c1, vt0.lid FROM rt0 INNER JOIN vt0 ON (((- (vt0.c1))) BETWEEN (vt0.c1) AND (((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))) WHERE (((((NULL) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (rt0.c2 COLLATE BINARY))) ISNULL));
SELECT rt0.c0, rt0.c1, vt0.lid FROM rt0 INNER JOIN vt0 ON (((- (vt0.c1))) BETWEEN (vt0.c1) AND (((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0))));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.c1 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 END) NOT NULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.c1 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 END) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CASE WHEN vt0.lid THEN vt0.lid WHEN vt0.c1 THEN vt0.lid WHEN vt0.c1 THEN vt0.c1 END) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c1, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((((CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c1 END)AND(((rt0.c2) ISNULL))))AND((+ (vt0.c0)))) GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((((CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c1 END)AND(((rt0.c2) ISNULL))))AND((+ (vt0.c0)))) WHERE (((((vt0.c0) IS TRUE))%((((vt0.lid)) BETWEEN ((rt0.c1)) AND ((vt0.lid)))))) GROUP BY rt0.c1, vt0.c0 UNION SELECT ALL rt0.c1, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((((CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c1 END)AND(((rt0.c2) ISNULL))))AND((+ (vt0.c0)))) WHERE ((NOT (((((vt0.c0) IS TRUE))%((((vt0.lid)) BETWEEN ((rt0.c1)) AND ((vt0.lid)))))))) GROUP BY rt0.c1, vt0.c0 UNION SELECT rt0.c1, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((((CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c1 END)AND(((rt0.c2) ISNULL))))AND((+ (vt0.c0)))) WHERE (((((((vt0.c0) IS TRUE))%((((vt0.lid)) BETWEEN ((rt0.c1)) AND ((vt0.lid)))))) ISNULL)) GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((((CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c1 END)AND(((rt0.c2) ISNULL))))AND((+ (vt0.c0)))) GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING COUNT(COUNT(*)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL rt0.c1, vt0.lid, vt0.c0 FROM rt0, vt0;
SELECT rt0.c1, vt0.lid, vt0.c0 FROM rt0, vt0 WHERE (((NULLIF(x'', 0.7985467534642358))+(rt0.c2 COLLATE NOCASE))) UNION ALL SELECT rt0.c1, vt0.lid, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((NULLIF(x'', 0.7985467534642358))+(rt0.c2 COLLATE NOCASE))))) UNION ALL SELECT ALL rt0.c1, vt0.lid, vt0.c0 FROM rt0, vt0 WHERE (((((NULLIF(x'', 0.7985467534642358))+(rt0.c2 COLLATE NOCASE))) ISNULL));
SELECT ALL rt0.c1, vt0.lid, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, vt0.lid, rt0.c1, vt0.c0, rt0.c2, vt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, vt0.lid, rt0.c1, vt0.c0, rt0.c2, vt0.c1 FROM vt0, rt0 WHERE (((((rt0.c1)LIKE(vt0.lid)))/(((rt0.c0)OR(''))))) UNION SELECT DISTINCT rt0.c0, vt0.lid, rt0.c1, vt0.c0, rt0.c2, vt0.c1 FROM vt0, rt0 WHERE ((NOT (((((rt0.c1)LIKE(vt0.lid)))/(((rt0.c0)OR(''))))))) UNION SELECT DISTINCT rt0.c0, vt0.lid, rt0.c1, vt0.c0, rt0.c2, vt0.c1 FROM vt0, rt0 WHERE (((((((rt0.c1)LIKE(vt0.lid)))/(((rt0.c0)OR(''))))) ISNULL));
SELECT DISTINCT rt0.c0, vt0.lid, rt0.c1, vt0.c0, rt0.c2, vt0.c1 FROM vt0, rt0;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, rt0 WHERE (((((NOT (rt0.c2))))>(((+ (vt0.lid)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt0, rt0 WHERE ((NOT (((((NOT (rt0.c2))))>(((+ (vt0.lid)))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt0, rt0 WHERE (((((((NOT (rt0.c2))))>(((+ (vt0.lid)))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0 HAVING AVG(((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c0))) UNION ALL SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0 HAVING (NOT (AVG(((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c0))))) UNION ALL SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0 HAVING ((AVG(((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c0)))) ISNULL);
SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0 HAVING AVG(((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c0))) UNION ALL SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0 HAVING (NOT (AVG(((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c0))))) UNION ALL SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0 HAVING ((AVG(((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c0)))) ISNULL);
SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT vt0.c0 FROM vt0, rt0;
SELECT ALL vt0.c0 FROM vt0, rt0 WHERE (((((x'') IS TRUE)) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (CAST(vt0.c0 AS INTEGER)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0 WHERE ((NOT (((((x'') IS TRUE)) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (CAST(vt0.c0 AS INTEGER)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt0 WHERE (((((((x'') IS TRUE)) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (CAST(vt0.c0 AS INTEGER)))) ISNULL));
SELECT vt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 IN ()) COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ()) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL rt0.c1, vt0.c1, vt0.lid, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c1, vt0.lid, vt0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c1, vt0.lid, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE (NULL) GROUP BY rt0.c1, vt0.c1, vt0.lid, vt0.c0, rt0.c0, rt0.c2 UNION SELECT rt0.c1, vt0.c1, vt0.lid, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c1, vt0.c1, vt0.lid, vt0.c0, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, vt0.c1, vt0.lid, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c1, vt0.c1, vt0.lid, vt0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c1, vt0.lid, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c1, vt0.lid, vt0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING AVG(((rt0.c1) BETWEEN (rt0.c0) AND (GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (AVG(((rt0.c1) BETWEEN (rt0.c0) AND (GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((AVG(((rt0.c1) BETWEEN (rt0.c0) AND (GROUP_CONCAT(COUNT(*)))))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (LOWER('')) UNION ALL SELECT * FROM vt0 WHERE ((NOT (LOWER('')))) UNION ALL SELECT ALL * FROM vt0 WHERE (((LOWER('')) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((+ (vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((+ (vt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((+ (vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (CASE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END  WHEN json_patch(rt0.c2, rt0.c0) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) WHEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END WHEN 0.7904942943242994 THEN rt0.c1 ELSE ((rt0.c0) NOT BETWEEN (x'') AND (rt0.c2)) END) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CASE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END  WHEN json_patch(rt0.c2, rt0.c0) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) WHEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END WHEN 0.7904942943242994 THEN rt0.c1 ELSE ((rt0.c0) NOT BETWEEN (x'') AND (rt0.c2)) END))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END  WHEN json_patch(rt0.c2, rt0.c0) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) WHEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END WHEN 0.7904942943242994 THEN rt0.c1 ELSE ((rt0.c0) NOT BETWEEN (x'') AND (rt0.c2)) END) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0 HAVING ((MAX(GROUP_CONCAT(COUNT(MIN(MIN(rt0.c2)))))) IS FALSE) UNION ALL SELECT rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0 HAVING (NOT (((MAX(GROUP_CONCAT(COUNT(MIN(MIN(rt0.c2)))))) IS FALSE))) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0 HAVING ((((MAX(GROUP_CONCAT(COUNT(MIN(MIN(rt0.c2)))))) IS FALSE)) ISNULL);
SELECT ALL vt0.c0, rt0.c2, vt0.c1 FROM rt0 CROSS JOIN vt0 ON (json_patch(rt0.c2, NULL) IN (((rt0.c1) NOT BETWEEN (vt0.c0) AND (NULL))));
SELECT ALL vt0.c0, rt0.c2, vt0.c1 FROM rt0 CROSS JOIN vt0 ON (json_patch(rt0.c2, NULL) IN (((rt0.c1) NOT BETWEEN (vt0.c0) AND (NULL)))) WHERE (rt0.c1) UNION ALL SELECT vt0.c0, rt0.c2, vt0.c1 FROM rt0 CROSS JOIN vt0 ON (json_patch(rt0.c2, NULL) IN (((rt0.c1) NOT BETWEEN (vt0.c0) AND (NULL)))) WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL vt0.c0, rt0.c2, vt0.c1 FROM rt0 CROSS JOIN vt0 ON (json_patch(rt0.c2, NULL) IN (((rt0.c1) NOT BETWEEN (vt0.c0) AND (NULL)))) WHERE (((rt0.c1) ISNULL));
SELECT ALL vt0.c0, rt0.c2, vt0.c1 FROM rt0 CROSS JOIN vt0 ON (json_patch(rt0.c2, NULL) IN (((rt0.c1) NOT BETWEEN (vt0.c0) AND (NULL))));
SELECT DISTINCT vt0.c1, vt0.lid FROM vt0;
SELECT DISTINCT vt0.c1, vt0.lid FROM vt0 WHERE ((((CAST(vt0.lid AS TEXT), (vt0.lid IN (vt0.lid, vt0.c1)), (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<((NULL, ((vt0.lid) NOTNULL), (NOT (vt0.lid)))))) UNION SELECT DISTINCT vt0.c1, vt0.lid FROM vt0 WHERE ((NOT ((((CAST(vt0.lid AS TEXT), (vt0.lid IN (vt0.lid, vt0.c1)), (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<((NULL, ((vt0.lid) NOTNULL), (NOT (vt0.lid)))))))) UNION SELECT DISTINCT vt0.c1, vt0.lid FROM vt0 WHERE ((((((CAST(vt0.lid AS TEXT), (vt0.lid IN (vt0.lid, vt0.c1)), (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<((NULL, ((vt0.lid) NOTNULL), (NOT (vt0.lid)))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.lid FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ('-136901813') GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ('-136901813'))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((('-136901813') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.lid, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.lid, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING rt0.c1 UNION ALL SELECT ALL vt0.lid, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL vt0.lid, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((rt0.c1) ISNULL);
SELECT ALL vt0.lid, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.lid, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING rt0.c1 UNION ALL SELECT ALL vt0.lid, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL vt0.lid, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((rt0.c1) ISNULL);
SELECT ALL vt0.lid, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((vt0.lid) BETWEEN (vt0.lid) AND (vt0.c0)) AS TEXT);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((vt0.lid) BETWEEN (vt0.lid) AND (vt0.c0)) AS TEXT) WHERE ('-1536145670') UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((vt0.lid) BETWEEN (vt0.lid) AND (vt0.c0)) AS TEXT) WHERE ((NOT ('-1536145670'))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((vt0.lid) BETWEEN (vt0.lid) AND (vt0.c0)) AS TEXT) WHERE ((('-1536145670') ISNULL));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((vt0.lid) BETWEEN (vt0.lid) AND (vt0.c0)) AS TEXT);
SELECT DISTINCT vt0.c1, rt0.c1, vt0.lid, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END)AND((((vt0.c0))>=((rt0.c0))))))AND(((vt0.c1)||(vt0.lid))));
SELECT DISTINCT vt0.c1, rt0.c1, vt0.lid, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END)AND((((vt0.c0))>=((rt0.c0))))))AND(((vt0.c1)||(vt0.lid)))) WHERE (((((((vt0.lid)AND(vt0.c0)))AND(vt0.c0)))&(CAST(vt0.c1 AS INTEGER)))) UNION SELECT DISTINCT vt0.c1, rt0.c1, vt0.lid, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END)AND((((vt0.c0))>=((rt0.c0))))))AND(((vt0.c1)||(vt0.lid)))) WHERE ((NOT (((((((vt0.lid)AND(vt0.c0)))AND(vt0.c0)))&(CAST(vt0.c1 AS INTEGER)))))) UNION SELECT DISTINCT vt0.c1, rt0.c1, vt0.lid, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END)AND((((vt0.c0))>=((rt0.c0))))))AND(((vt0.c1)||(vt0.lid)))) WHERE (((((((((vt0.lid)AND(vt0.c0)))AND(vt0.c0)))&(CAST(vt0.c1 AS INTEGER)))) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c1, vt0.lid, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON ((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END)AND((((vt0.c0))>=((rt0.c0))))))AND(((vt0.c1)||(vt0.lid))));
SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c1;
SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0 WHERE (((((rt0.c2)/(rt0.c2))) IS TRUE)) GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c1 UNION SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0 WHERE ((NOT (((((rt0.c2)/(rt0.c2))) IS TRUE)))) GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0 WHERE (((((((rt0.c2)/(rt0.c2))) IS TRUE)) ISNULL)) GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c1;
SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING AVG(COUNT(*)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((rt0.c2) IS TRUE) COLLATE NOCASE;
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((rt0.c2) IS TRUE) COLLATE NOCASE WHERE (UNLIKELY(TRIM(DISTINCT vt0.lid, rt0.c2))) UNION ALL SELECT * FROM vt0 INNER JOIN rt0 ON ((rt0.c2) IS TRUE) COLLATE NOCASE WHERE ((NOT (UNLIKELY(TRIM(DISTINCT vt0.lid, rt0.c2))))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((rt0.c2) IS TRUE) COLLATE NOCASE WHERE (((UNLIKELY(TRIM(DISTINCT vt0.lid, rt0.c2))) ISNULL));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((rt0.c2) IS TRUE) COLLATE NOCASE;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (x'f05e') UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (x'f05e'))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((x'f05e') ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt0.c1, rt0.c1, rt0.c2, vt0.c0, vt0.lid FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c2, vt0.c0, vt0.lid;
SELECT ALL vt0.c1, rt0.c1, rt0.c2, vt0.c0, vt0.lid FROM vt0, rt0 WHERE (CASE WHEN ((vt0.lid) BETWEEN (vt0.lid) AND (vt0.c1)) THEN COALESCE(DISTINCT rt0.c0, vt0.c0) ELSE 0.7733161282335533 END) GROUP BY vt0.c1, rt0.c1, rt0.c2, vt0.c0, vt0.lid UNION SELECT vt0.c1, rt0.c1, rt0.c2, vt0.c0, vt0.lid FROM vt0, rt0 WHERE ((NOT (CASE WHEN ((vt0.lid) BETWEEN (vt0.lid) AND (vt0.c1)) THEN COALESCE(DISTINCT rt0.c0, vt0.c0) ELSE 0.7733161282335533 END))) GROUP BY vt0.c1, rt0.c1, rt0.c2, vt0.c0, vt0.lid UNION SELECT vt0.c1, rt0.c1, rt0.c2, vt0.c0, vt0.lid FROM vt0, rt0 WHERE (((CASE WHEN ((vt0.lid) BETWEEN (vt0.lid) AND (vt0.c1)) THEN COALESCE(DISTINCT rt0.c0, vt0.c0) ELSE 0.7733161282335533 END) ISNULL)) GROUP BY vt0.c1, rt0.c1, rt0.c2, vt0.c0, vt0.lid;
SELECT ALL vt0.c1, rt0.c1, rt0.c2, vt0.c0, vt0.lid FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c2, vt0.c0, vt0.lid;
SELECT vt0.c1, rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt0.lid FROM rt0, vt0 GROUP BY vt0.c1, rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt0.lid;
SELECT vt0.c1, rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt0.lid FROM rt0, vt0 GROUP BY vt0.c1, rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt0.lid HAVING MAX(AVG(rt0.c1)) UNION ALL SELECT ALL vt0.c1, rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt0.lid FROM rt0, vt0 GROUP BY vt0.c1, rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt0.lid HAVING (NOT (MAX(AVG(rt0.c1)))) UNION ALL SELECT ALL vt0.c1, rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt0.lid FROM rt0, vt0 GROUP BY vt0.c1, rt0.c1, vt0.c0, rt0.c2, rt0.c0, vt0.lid HAVING ((MAX(AVG(rt0.c1))) ISNULL);
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE ((((((((((((rt0.c1))<((1912590699))))OR(((rt0.c1)>>(rt0.c0)))))OR((rt0.c2 IN ()))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END)))AND((((NULL))<((rt0.c1)))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT ((((((((((((rt0.c1))<((1912590699))))OR(((rt0.c1)>>(rt0.c0)))))OR((rt0.c2 IN ()))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END)))AND((((NULL))<((rt0.c1)))))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((((((((((((((rt0.c1))<((1912590699))))OR(((rt0.c1)>>(rt0.c0)))))OR((rt0.c2 IN ()))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END)))AND((((NULL))<((rt0.c1)))))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((((~ (vt0.c1))) BETWEEN ((((80145552)) BETWEEN ((vt0.lid)) AND ((rt0.c1)))) AND (((vt0.c0)>=(vt0.lid))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((((~ (vt0.c1))) BETWEEN ((((80145552)) BETWEEN ((vt0.lid)) AND ((rt0.c1)))) AND (((vt0.c0)>=(vt0.lid))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((~ (vt0.c1))) BETWEEN ((((80145552)) BETWEEN ((vt0.lid)) AND ((rt0.c1)))) AND (((vt0.c0)>=(vt0.lid))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (CAST(((NULL)|(rt0.c0)) AS REAL)) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST(((NULL)|(rt0.c0)) AS REAL)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(((NULL)|(rt0.c0)) AS REAL)) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL vt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c1, rt0.c2;
SELECT ALL vt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c1, rt0.c2 HAVING GROUP_CONCAT('1045880687') UNION ALL SELECT vt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT('1045880687'))) UNION ALL SELECT vt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c1, rt0.c2 HAVING ((GROUP_CONCAT('1045880687')) ISNULL);
SELECT ALL vt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c1, rt0.c2;
SELECT ALL vt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c1, rt0.c2 HAVING GROUP_CONCAT('1045880687') UNION ALL SELECT vt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT('1045880687'))) UNION ALL SELECT vt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c1, rt0.c2 HAVING ((GROUP_CONCAT('1045880687')) ISNULL);
SELECT ALL vt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 GROUP BY vt0.c1, rt0.c2;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.lid))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.lid))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.lid))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((vt0.lid)-(rt0.c1)))OR(CASE WHEN rt0.c1 THEN vt0.c0 END));
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((vt0.lid)-(rt0.c1)))OR(CASE WHEN rt0.c1 THEN vt0.c0 END)) WHERE (json_quote(CAST(vt0.lid AS INTEGER))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((vt0.lid)-(rt0.c1)))OR(CASE WHEN rt0.c1 THEN vt0.c0 END)) WHERE ((NOT (json_quote(CAST(vt0.lid AS INTEGER))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((vt0.lid)-(rt0.c1)))OR(CASE WHEN rt0.c1 THEN vt0.c0 END)) WHERE (((json_quote(CAST(vt0.lid AS INTEGER))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((vt0.lid)-(rt0.c1)))OR(CASE WHEN rt0.c1 THEN vt0.c0 END));
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((- ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((- ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((((- ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(((rt0.c1)LIKE(rt0.c1))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(((rt0.c1)LIKE(rt0.c1))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(((rt0.c1)LIKE(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(((rt0.c1)LIKE(rt0.c1))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(((rt0.c1)LIKE(rt0.c1))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(((rt0.c1)LIKE(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT SUM(SQLITE_COMPILEOPTION_USED(rt0.c2 COLLATE NOCASE)) FROM rt0 ORDER BY TRIM(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END) DESC  NULLS LAST;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((((((+ (rt0.c0)))OR(((rt0.c1)/(rt0.c0)))))OR((((NULL))>((rt0.c1))))))AND(rt0.c2)))OR(((rt0.c1)!=(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((((((((+ (rt0.c0)))OR(((rt0.c1)/(rt0.c0)))))OR((((NULL))>((rt0.c1))))))AND(rt0.c2)))OR(((rt0.c1)!=(rt0.c1))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((((((((+ (rt0.c0)))OR(((rt0.c1)/(rt0.c0)))))OR((((NULL))>((rt0.c1))))))AND(rt0.c2)))OR(((rt0.c1)<>(rt0.c1))))) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((NULL)OR((- (rt0.c0)))))OR('2(u_w,.uw'))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((NULL)OR((- (rt0.c0)))))OR('2(u_w,.uw'))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((NULL)OR((- (rt0.c0)))))OR('2(u_w,.uw'))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE ((- (((vt0.c0)>(vt0.c1))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT ((- (((vt0.c0)>(vt0.c1))))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((((- (((vt0.c0)>(vt0.c1))))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0 HAVING CAST(((rt0.c1)*(rt0.c0)) AS BLOB) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (CAST(((rt0.c1)*(rt0.c0)) AS BLOB))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0 HAVING ((CAST(((rt0.c1)*(rt0.c0)) AS BLOB)) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0 HAVING CAST(((rt0.c1)*(rt0.c0)) AS BLOB) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (CAST(((rt0.c1)*(rt0.c0)) AS BLOB))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0 HAVING ((CAST(((rt0.c1)*(rt0.c0)) AS BLOB)) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0;
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (CAST((('1710331778')==(vt0.c1)) AS REAL)) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (CAST((('1710331778')=(vt0.c1)) AS REAL)))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((CAST((('1710331778')==(vt0.c1)) AS REAL)) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c2)=(rt0.c2)))>>((rt0.c1 IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2)=(rt0.c2)))>>((rt0.c1 IN ())))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c2)=(rt0.c2)))>>((rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((CAST(rt0.c1 AS TEXT) IN ())) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((CAST(rt0.c1 AS TEXT) IN ())))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((CAST(rt0.c1 AS TEXT) IN ())) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(CAST(rt0.c0 AS REAL)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(CAST(rt0.c0 AS REAL)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(CAST(rt0.c0 AS REAL))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(CAST(rt0.c0 AS REAL)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(CAST(rt0.c0 AS REAL)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(CAST(rt0.c0 AS REAL))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT vt0.lid FROM vt0;
SELECT vt0.lid FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.lid FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.lid FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.lid FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.lid)))AND(vt0.c1))) IS FALSE)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((vt0.c0)AND(vt0.lid)))AND(vt0.c1))) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.lid)))AND(vt0.c1))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 WHERE ((vt0.lid COLLATE BINARY IN (DATETIME(vt0.lid, vt0.lid, NULL)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0, rt0 WHERE ((NOT ((vt0.lid COLLATE BINARY IN (DATETIME(vt0.lid, vt0.lid, NULL)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0, rt0 WHERE ((((vt0.lid COLLATE BINARY IN (DATETIME(vt0.lid, vt0.lid, NULL)))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0 HAVING ((COUNT(COUNT(*)))!=(((((TOTAL(rt0.c1))OR(vt0.c1)))AND(rt0.c2)))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0 HAVING (NOT (((COUNT(COUNT(*)))!=(((((TOTAL(rt0.c1))OR(vt0.c1)))AND(rt0.c2)))))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0 HAVING ((((COUNT(COUNT(*)))<>(((((TOTAL(rt0.c1))OR(vt0.c1)))AND(rt0.c2))))) ISNULL);
SELECT rt0.c2, vt0.c1, vt0.c0, rt0.c1 FROM vt0, rt0;
SELECT ALL rt0.c2, vt0.c1, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((((((rt0.c0))>=((vt0.lid)))) NOTNULL)) UNION ALL SELECT rt0.c2, vt0.c1, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT ((((((rt0.c0))>=((vt0.lid)))) NOTNULL)))) UNION ALL SELECT rt0.c2, vt0.c1, vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((((((((rt0.c0))>=((vt0.lid)))) NOTNULL)) ISNULL));
SELECT rt0.c2, vt0.c1, vt0.c0, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT vt0.lid, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.lid, vt0.c0 FROM vt0 WHERE ('') UNION SELECT DISTINCT vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT (''))) UNION SELECT DISTINCT vt0.lid, vt0.c0 FROM vt0 WHERE ((('') ISNULL));
SELECT DISTINCT vt0.lid, vt0.c0 FROM vt0;
SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1;
SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((vt0.lid) IS FALSE)) AND (((0.039982601706596066)<(vt0.c1))))) GROUP BY vt0.c0, vt0.lid, vt0.c1 UNION SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ())) NOT BETWEEN (((vt0.lid) IS FALSE)) AND (((0.039982601706596066)<(vt0.c1))))))) GROUP BY vt0.c0, vt0.lid, vt0.c1 UNION SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 WHERE ((((((vt0.c0 IN ())) NOT BETWEEN (((vt0.lid) IS FALSE)) AND (((0.039982601706596066)<(vt0.c1))))) ISNULL)) GROUP BY vt0.c0, vt0.lid, vt0.c1;
SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING AVG(AVG(MAX(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (AVG(AVG(MAX(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((AVG(AVG(MAX(rt0.c1)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE ((((((((0.6342126744288883)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.lid)))AND(vt0.c1))  WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT NULL) ELSE CAST(vt0.lid AS INTEGER) END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE ((((((((0.6342126744288883)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.lid)))AND(vt0.c1))  WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT NULL) ELSE CAST(vt0.lid AS INTEGER) END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE ((((((((0.6342126744288883)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.lid)))AND(vt0.c1))  WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT NULL) ELSE CAST(vt0.lid AS INTEGER) END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c0, vt0.lid FROM vt0, rt0;
SELECT DISTINCT rt0.c0, vt0.lid FROM vt0, rt0 WHERE ('-285840739') UNION SELECT DISTINCT rt0.c0, vt0.lid FROM vt0, rt0 WHERE ((NOT ('-285840739'))) UNION SELECT DISTINCT rt0.c0, vt0.lid FROM vt0, rt0 WHERE ((('-285840739') ISNULL));
SELECT DISTINCT rt0.c0, vt0.lid FROM vt0, rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CAST(x'' AS NUMERIC)) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST(x'' AS NUMERIC)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(x'' AS NUMERIC)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid HAVING (vt0.c1 IN (MAX(SUM(MIN(vt0.lid))))) UNION ALL SELECT vt0.lid FROM vt0 GROUP BY vt0.lid HAVING (NOT ((vt0.c1 IN (MAX(SUM(MIN(vt0.lid))))))) UNION ALL SELECT vt0.lid FROM vt0 NOT INDEXED GROUP BY vt0.lid HAVING (((vt0.c1 IN (MAX(SUM(MIN(vt0.lid)))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((- (rt0.c1))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((- (rt0.c1))))) UNION ALL SELECT ALL * FROM rt0 NOT INDEXED WHERE ((((- (rt0.c1))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0, vt0.lid, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0, vt0.lid, rt0.c2 FROM rt0, vt0 WHERE ((((('574464826')OR(((vt0.c1) IS TRUE))))OR((rt0.c0 IN (vt0.c0, rt0.c2))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0, vt0.lid, rt0.c2 FROM rt0, vt0 WHERE ((NOT ((((('574464826')OR(((vt0.c1) IS TRUE))))OR((rt0.c0 IN (vt0.c0, rt0.c2))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0, vt0.lid, rt0.c2 FROM rt0, vt0 WHERE ((((((('574464826')OR(((vt0.c1) IS TRUE))))OR((rt0.c0 IN (vt0.c0, rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0, vt0.lid, rt0.c2 FROM rt0, vt0;
SELECT ALL rt0.c2, rt0.c1, vt0.c0, vt0.lid, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, vt0.lid, vt0.c1;
SELECT rt0.c2, rt0.c1, vt0.c0, vt0.lid, vt0.c1 FROM rt0, vt0 WHERE (rt0.c2 COLLATE BINARY) GROUP BY rt0.c2, rt0.c1, vt0.c0, vt0.lid, vt0.c1 UNION SELECT rt0.c2, rt0.c1, vt0.c0, vt0.lid, vt0.c1 FROM rt0, vt0 WHERE ((NOT (rt0.c2 COLLATE BINARY))) GROUP BY rt0.c2, rt0.c1, vt0.c0, vt0.lid, vt0.c1 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c0, vt0.lid, vt0.c1 FROM rt0, vt0 WHERE (((rt0.c2 COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt0.c0, vt0.lid, vt0.c1;
SELECT ALL rt0.c2, rt0.c1, vt0.c0, vt0.lid, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, vt0.lid, vt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(SUM(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((NOT (AVG(SUM(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((NOT (AVG(SUM(vt0.c0))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (SQLITE_SOURCE_ID()) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (SQLITE_SOURCE_ID()))) UNION ALL SELECT ALL * FROM rt0 WHERE (((SQLITE_SOURCE_ID()) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt0.lid, rt0.c1 FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT vt0.lid, rt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE (CASE WHEN ((((((((vt0.lid)OR(rt0.c0)))AND(vt0.c1)))AND(rt0.c0)))OR(rt0.c1)) THEN 0.7881109995134044 WHEN ((vt0.c1) NOTNULL) THEN vt0.lid WHEN vt0.c1 THEN ((((((((vt0.c0)OR(vt0.lid)))OR(vt0.c0)))OR(vt0.lid)))OR(vt0.c0)) ELSE ((((rt0.c0)OR(vt0.c1)))OR(rt0.c1)) END) UNION SELECT DISTINCT vt0.lid, rt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (CASE WHEN ((((((((vt0.lid)OR(rt0.c0)))AND(vt0.c1)))AND(rt0.c0)))OR(rt0.c1)) THEN 0.7881109995134044 WHEN ((vt0.c1) NOTNULL) THEN vt0.lid WHEN vt0.c1 THEN ((((((((vt0.c0)OR(vt0.lid)))OR(vt0.c0)))OR(vt0.lid)))OR(vt0.c0)) ELSE ((((rt0.c0)OR(vt0.c1)))OR(rt0.c1)) END))) UNION SELECT DISTINCT vt0.lid, rt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE (((CASE WHEN ((((((((vt0.lid)OR(rt0.c0)))AND(vt0.c1)))AND(rt0.c0)))OR(rt0.c1)) THEN 0.7881109995134044 WHEN ((vt0.c1) NOTNULL) THEN vt0.lid WHEN vt0.c1 THEN ((((((((vt0.c0)OR(vt0.lid)))OR(vt0.c0)))OR(vt0.lid)))OR(vt0.c0)) ELSE ((((rt0.c0)OR(vt0.c1)))OR(rt0.c1)) END) ISNULL));
SELECT DISTINCT vt0.lid, rt0.c1 FROM rt0 NATURAL JOIN vt0;
SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0;
SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE (CASE WHEN x'b57f' THEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) ELSE ((((vt0.c0)AND(0.8690458226441384)))OR(vt0.lid)) END) GROUP BY vt0.lid, vt0.c1, vt0.c0 UNION SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN x'b57f' THEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) ELSE ((((vt0.c0)AND(0.8690458226441384)))OR(vt0.lid)) END))) GROUP BY vt0.lid, vt0.c1, vt0.c0 UNION SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE (((CASE WHEN x'b57f' THEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) ELSE ((((vt0.c0)AND(0.8690458226441384)))OR(vt0.lid)) END) ISNULL)) GROUP BY vt0.lid, vt0.c1, vt0.c0;
SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0;
SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1;
SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING TOTAL((MAX(TOTAL(vt0.c0)) IN ())) UNION ALL SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING (NOT (TOTAL((MAX(TOTAL(vt0.c0)) IN ())))) UNION ALL SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING ((TOTAL((MAX(TOTAL(vt0.c0)) IN ()))) ISNULL);
SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1;
SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING TOTAL((MAX(TOTAL(vt0.c0)) IN ())) UNION ALL SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING (NOT (TOTAL((MAX(TOTAL(vt0.c0)) IN ())))) UNION ALL SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING ((TOTAL((MAX(TOTAL(vt0.c0)) IN ()))) ISNULL);
SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1;
SELECT * FROM rt0 NATURAL JOIN vt0;
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((NOT (0Xffffffffd2006455)) IN (vt0.lid))) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (((NOT (0xffffffffd2006455)) IN (vt0.lid))))) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((((NOT (0Xffffffffd2006455)) IN (vt0.lid))) ISNULL));
SELECT * FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((0.5816586248948277)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((rt0.c2 COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((0.5816586248948277)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((rt0.c2 COLLATE NOCASE)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((0.5816586248948277)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((rt0.c2 COLLATE NOCASE)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid;
SELECT ALL vt0.c0, vt0.lid FROM vt0 WHERE (((((vt0.c1) NOT NULL)) IS FALSE)) GROUP BY vt0.c0, vt0.lid UNION SELECT ALL vt0.c0, vt0.lid FROM vt0 WHERE ((NOT (((((vt0.c1) NOT NULL)) IS FALSE)))) GROUP BY vt0.c0, vt0.lid UNION SELECT vt0.c0, vt0.lid FROM vt0 WHERE (((((((vt0.c1) NOT NULL)) IS FALSE)) ISNULL)) GROUP BY vt0.c0, vt0.lid;
SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid;
SELECT rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, vt0.c1;
SELECT ALL rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, vt0.c1 HAVING (((((((((COUNT(rt0.c1) IN ()))AND(MIN(NULL))))OR(CASE AVG(MAX(SUM(TOTAL(TOTAL(vt0.lid)))))  WHEN MIN('') THEN rt0.c1 WHEN rt0.c2 THEN MAX(rt0.c0) WHEN SUM(AVG(MIN(rt0.c2))) THEN vt0.c0 WHEN TOTAL(rt0.c0) THEN vt0.c1 WHEN SUM(MIN(AVG(vt0.c1))) THEN GROUP_CONCAT(COUNT(*)) ELSE x'' END)))OR(((COUNT(*)) IS FALSE))))AND(MAX(rt0.c1))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, vt0.c1 HAVING (NOT ((((((((((COUNT(rt0.c1) IN ()))AND(MIN(NULL))))OR(CASE AVG(MAX(SUM(TOTAL(TOTAL(vt0.lid)))))  WHEN MIN('') THEN rt0.c1 WHEN rt0.c2 THEN MAX(rt0.c0) WHEN SUM(AVG(MIN(rt0.c2))) THEN vt0.c0 WHEN TOTAL(rt0.c0) THEN vt0.c1 WHEN SUM(MIN(AVG(vt0.c1))) THEN GROUP_CONCAT(COUNT(*)) ELSE x'' END)))OR(((COUNT(*)) IS FALSE))))AND(MAX(rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0, vt0.c1 HAVING (((((((((((COUNT(rt0.c1) IN ()))AND(MIN(NULL))))OR(CASE AVG(MAX(SUM(TOTAL(TOTAL(vt0.lid)))))  WHEN MIN('') THEN rt0.c1 WHEN rt0.c2 THEN MAX(rt0.c0) WHEN SUM(AVG(MIN(rt0.c2))) THEN vt0.c0 WHEN TOTAL(rt0.c0) THEN vt0.c1 WHEN SUM(MIN(AVG(vt0.c1))) THEN GROUP_CONCAT(COUNT(*)) ELSE x'' END)))OR(((COUNT(*)) IS FALSE))))AND(MAX(rt0.c1)))) ISNULL);
SELECT vt0.c0, vt0.lid, rt0.c1 FROM rt0, vt0;
SELECT vt0.c0, vt0.lid, rt0.c1 FROM rt0, vt0 WHERE ((((NOT ('㎏G'))) NOT NULL)) UNION ALL SELECT vt0.c0, vt0.lid, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((((NOT ('㎏G'))) NOT NULL)))) UNION ALL SELECT vt0.c0, vt0.lid, rt0.c1 FROM rt0, vt0 WHERE ((((((NOT ('㎏G'))) NOT NULL)) ISNULL));
SELECT vt0.c0, vt0.lid, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c2  WHEN '-1357336955' THEN '' END) NOT BETWEEN ((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c2  WHEN '-1357336955' THEN '' END) NOT BETWEEN ((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) WHERE ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((((vt0.c0)AND(rt0.c1)))AND(vt0.c0)), '2137525390', rt0.c0 COLLATE NOCASE)) AND (((rt0.c2 IN ()), 0.41140524497080433, ((vt0.c1) IS FALSE))))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c2  WHEN '-1357336955' THEN '' END) NOT BETWEEN ((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) WHERE ((NOT ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((((vt0.c0)AND(rt0.c1)))AND(vt0.c0)), '2137525390', rt0.c0 COLLATE NOCASE)) AND (((rt0.c2 IN ()), 0.41140524497080433, ((vt0.c1) IS FALSE))))))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c2  WHEN '-1357336955' THEN '' END) NOT BETWEEN ((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) WHERE ((((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((((vt0.c0)AND(rt0.c1)))AND(vt0.c0)), '2137525390', rt0.c0 COLLATE NOCASE)) AND (((rt0.c2 IN ()), 0.41140524497080433, ((vt0.c1) IS FALSE))))) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c2  WHEN '-1357336955' THEN '' END) NOT BETWEEN ((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid;
SELECT vt0.c0, vt0.lid FROM vt0 WHERE (((((((vt0.lid)<=('l{?')))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.lid))))))AND(CASE vt0.c0  WHEN vt0.lid THEN vt0.c1 END))) GROUP BY vt0.c0, vt0.lid UNION SELECT ALL vt0.c0, vt0.lid FROM vt0 WHERE ((NOT (((((((vt0.lid)<=('l{?')))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.lid))))))AND(CASE vt0.c0  WHEN vt0.lid THEN vt0.c1 END))))) GROUP BY vt0.c0, vt0.lid UNION SELECT ALL vt0.c0, vt0.lid FROM vt0 WHERE (((((((((vt0.lid)<=('l{?')))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.lid))))))AND(CASE vt0.c0  WHEN vt0.lid THEN vt0.c1 END))) ISNULL)) GROUP BY vt0.c0, vt0.lid;
SELECT vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.lid;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING COUNT(((((rt0.c0)OR(COUNT(*))))AND(MAX(COUNT(*))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (COUNT(((((rt0.c0)OR(COUNT(*))))AND(MAX(COUNT(*))))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT(((((rt0.c0)OR(COUNT(*))))AND(MAX(COUNT(*)))))) ISNULL);
SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE ('-1307006662') UNION ALL SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ('-1307006662'))) UNION ALL SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE ((('-1307006662') ISNULL));
SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (IFNULL(DISTINCT '\nJ5AB\', x'a423')) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT (IFNULL(DISTINCT '\nJ5AB\', x'a423')))) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (((IFNULL(DISTINCT '\nJ5AB\', x'a423')) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c1, vt0.lid, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.lid, rt0.c2;
SELECT rt0.c1, vt0.lid, rt0.c2 FROM vt0, rt0 WHERE (((((((vt0.c1)OR(rt0.c0)))OR(0X158a18e5))) ISNULL)) GROUP BY rt0.c1, vt0.lid, rt0.c2 UNION SELECT rt0.c1, vt0.lid, rt0.c2 FROM vt0, rt0 WHERE ((NOT (((((((vt0.c1)OR(rt0.c0)))OR(0X158a18e5))) ISNULL)))) GROUP BY rt0.c1, vt0.lid, rt0.c2 UNION SELECT rt0.c1, vt0.lid, rt0.c2 FROM vt0, rt0 WHERE (((((((((vt0.c1)OR(rt0.c0)))OR(0x158a18e5))) ISNULL)) ISNULL)) GROUP BY rt0.c1, vt0.lid, rt0.c2;
SELECT ALL rt0.c1, vt0.lid, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.lid, rt0.c2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(MIN(rt0.c2)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(MIN(rt0.c2)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(MIN(rt0.c2))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c1)) BETWEEN (((NOT (vt0.lid)))) AND ((((rt0.c2) NOT BETWEEN (vt0.lid) AND (vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN (((NOT (vt0.lid)))) AND ((((rt0.c2) NOT BETWEEN (vt0.lid) AND (vt0.c0)))))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c1)) BETWEEN (((NOT (vt0.lid)))) AND ((((rt0.c2) NOT BETWEEN (vt0.lid) AND (vt0.c0)))))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT rt0.c1, vt0.c0, vt0.lid FROM rt0, vt0;
SELECT DISTINCT rt0.c1, vt0.c0, vt0.lid FROM rt0, vt0 WHERE (vt0.lid) UNION SELECT DISTINCT rt0.c1, vt0.c0, vt0.lid FROM rt0, vt0 WHERE ((NOT (vt0.lid))) UNION SELECT DISTINCT rt0.c1, vt0.c0, vt0.lid FROM rt0, vt0 WHERE (((vt0.lid) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0, vt0.lid FROM rt0, vt0;
SELECT ALL vt0.lid, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.lid, vt0.c0, rt0.c2;
SELECT ALL vt0.lid, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((CASE WHEN rt0.c2 THEN vt0.c0 END)AND(CAST(rt0.c0 AS REAL))))OR(((x'')AND(vt0.c0))))) GROUP BY vt0.lid, vt0.c0, rt0.c2 UNION SELECT vt0.lid, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((CASE WHEN rt0.c2 THEN vt0.c0 END)AND(CAST(rt0.c0 AS REAL))))OR(((x'')AND(vt0.c0))))))) GROUP BY vt0.lid, vt0.c0, rt0.c2 UNION SELECT ALL vt0.lid, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((((CASE WHEN rt0.c2 THEN vt0.c0 END)AND(CAST(rt0.c0 AS REAL))))OR(((x'')AND(vt0.c0))))) ISNULL)) GROUP BY vt0.lid, vt0.c0, rt0.c2;
SELECT ALL vt0.lid, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.lid, vt0.c0, rt0.c2;
SELECT vt0.c1 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c1 HAVING COUNT(CASE MIN(rt0.c1)  WHEN COUNT(rt0.c2) THEN x'' ELSE SUM(MAX(vt0.c1)) END) UNION ALL SELECT vt0.c1 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(CASE MIN(rt0.c1)  WHEN COUNT(rt0.c2) THEN x'' ELSE SUM(MAX(vt0.c1)) END))) UNION ALL SELECT ALL vt0.c1 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c1 HAVING ((COUNT(CASE MIN(rt0.c1)  WHEN COUNT(rt0.c2) THEN x'' ELSE SUM(MAX(vt0.c1)) END)) ISNULL);
SELECT ALL vt0.lid, vt0.c1 FROM vt0;
SELECT vt0.lid, vt0.c1 FROM vt0 WHERE (((((((((((vt0.lid)AND(vt0.c0)))AND(vt0.lid)))OR(vt0.c1)))AND(vt0.c1))) NOT BETWEEN (((vt0.lid) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.lid)&(vt0.c0))))) UNION ALL SELECT ALL vt0.lid, vt0.c1 FROM vt0 WHERE ((NOT (((((((((((vt0.lid)AND(vt0.c0)))AND(vt0.lid)))OR(vt0.c1)))AND(vt0.c1))) NOT BETWEEN (((vt0.lid) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.lid)&(vt0.c0))))))) UNION ALL SELECT ALL vt0.lid, vt0.c1 FROM vt0 WHERE (((((((((((((vt0.lid)AND(vt0.c0)))AND(vt0.lid)))OR(vt0.c1)))AND(vt0.c1))) NOT BETWEEN (((vt0.lid) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.lid)&(vt0.c0))))) ISNULL));
SELECT ALL vt0.lid, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((x'' IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((x'' IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((x'' IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid;
SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.lid ELSE vt0.lid END THEN CASE WHEN x'' THEN vt0.c1 WHEN -839945155 THEN vt0.c1 WHEN vt0.c1 THEN vt0.lid ELSE vt0.c0 END WHEN (- (vt0.c1)) THEN ((vt0.c1) BETWEEN (vt0.lid) AND (vt0.c0)) WHEN (((vt0.c1, vt0.lid, vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.lid, vt0.lid, vt0.c0, vt0.lid, x'')) AND ((vt0.c1, vt0.c1, vt0.lid, vt0.c1, vt0.c1))) THEN (((vt0.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c1))) END) GROUP BY vt0.c1, vt0.c0, vt0.lid UNION SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE ((NOT (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.lid ELSE vt0.lid END THEN CASE WHEN x'' THEN vt0.c1 WHEN -839945155 THEN vt0.c1 WHEN vt0.c1 THEN vt0.lid ELSE vt0.c0 END WHEN (- (vt0.c1)) THEN ((vt0.c1) BETWEEN (vt0.lid) AND (vt0.c0)) WHEN (((vt0.c1, vt0.lid, vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.lid, vt0.lid, vt0.c0, vt0.lid, x'')) AND ((vt0.c1, vt0.c1, vt0.lid, vt0.c1, vt0.c1))) THEN (((vt0.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c1))) END))) GROUP BY vt0.c1, vt0.c0, vt0.lid UNION SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE (((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.lid ELSE vt0.lid END THEN CASE WHEN x'' THEN vt0.c1 WHEN -839945155 THEN vt0.c1 WHEN vt0.c1 THEN vt0.lid ELSE vt0.c0 END WHEN (- (vt0.c1)) THEN ((vt0.c1) BETWEEN (vt0.lid) AND (vt0.c0)) WHEN (((vt0.c1, vt0.lid, vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.lid, vt0.lid, vt0.c0, vt0.lid, x'')) AND ((vt0.c1, vt0.c1, vt0.lid, vt0.c1, vt0.c1))) THEN (((vt0.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c1))) END) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt0.lid;
SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid;
SELECT vt0.lid, rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1;
SELECT ALL vt0.lid, rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1 HAVING ((COUNT(rt0.c0))>=(TOTAL(vt0.c1))) UNION ALL SELECT vt0.lid, rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1 HAVING (NOT (((COUNT(rt0.c0))>=(TOTAL(vt0.c1))))) UNION ALL SELECT vt0.lid, rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1 HAVING ((((COUNT(rt0.c0))>=(TOTAL(vt0.c1)))) ISNULL);
SELECT vt0.lid, rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1;
SELECT ALL vt0.lid, rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1 HAVING ((COUNT(rt0.c0))>=(TOTAL(vt0.c1))) UNION ALL SELECT vt0.lid, rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1 HAVING (NOT (((COUNT(rt0.c0))>=(TOTAL(vt0.c1))))) UNION ALL SELECT vt0.lid, rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1 HAVING ((((COUNT(rt0.c0))>=(TOTAL(vt0.c1)))) ISNULL);
SELECT vt0.lid, rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1;
SELECT ALL SUM(((CASE NULL  WHEN vt0.c1 THEN 0.5028763495557079 ELSE rt0.c1 END)<<(NULL COLLATE RTRIM))) FROM rt0, vt0;
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (vt0.lid)) COLLATE NOCASE;
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (vt0.lid)) COLLATE NOCASE WHERE (((9.28091862E8) ISNULL)) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (vt0.lid)) COLLATE NOCASE WHERE ((NOT (((9.28091862E8) ISNULL)))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (vt0.lid)) COLLATE NOCASE WHERE (((((9.28091862E8) ISNULL)) ISNULL));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (vt0.lid)) COLLATE NOCASE;
SELECT DISTINCT vt0.c0, vt0.c1 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM rt0, vt0 WHERE ((((~ (0.6410284972780789)))%(NULL))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM rt0, vt0 WHERE ((NOT ((((~ (0.6410284972780789)))%(NULL))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM rt0, vt0 WHERE ((((((~ (0.6410284972780789)))%(NULL))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM rt0, vt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ('.⤍0G') GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ('.⤍0G'))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((('.⤍0G') ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING MIN(rt0.c2 COLLATE NOCASE) UNION ALL SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING (NOT (MIN(rt0.c2 COLLATE NOCASE))) UNION ALL SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING ((MIN(rt0.c2 COLLATE NOCASE)) ISNULL);
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING MIN(rt0.c2 COLLATE NOCASE) UNION ALL SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING (NOT (MIN(rt0.c2 COLLATE NOCASE))) UNION ALL SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING ((MIN(rt0.c2 COLLATE NOCASE)) ISNULL);
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT MAX(((((((rt0.c2) BETWEEN (vt0.lid) AND (rt0.c2)))AND(((x'73b5')<=(vt0.c0)))))OR(((((rt0.c1)AND(vt0.lid)))AND(NULL))))) FROM vt0, rt0 ORDER BY ((((vt0.c0) IS FALSE))<>(CASE WHEN rt0.c2 THEN vt0.c1 ELSE rt0.c1 END)) ASC  NULLS LAST;
SELECT ALL vt0.lid FROM rt0, vt0;
SELECT ALL vt0.lid FROM rt0, vt0 WHERE (1.045880687E9) UNION ALL SELECT ALL vt0.lid FROM rt0, vt0 WHERE ((NOT (1.045880687E9))) UNION ALL SELECT ALL vt0.lid FROM rt0, vt0 WHERE (((1.045880687E9) ISNULL));
SELECT ALL vt0.lid FROM rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN (+ (rt0.c2)) THEN (rt0.c0 IN (0.6088454131744019, rt0.c2, rt0.c2)) ELSE ((rt0.c1)&(rt0.c2)) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN (+ (rt0.c2)) THEN (rt0.c0 IN (0.6088454131744019, rt0.c2, rt0.c2)) ELSE ((rt0.c1)&(rt0.c2)) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN (+ (rt0.c2)) THEN (rt0.c0 IN (0.6088454131744019, rt0.c2, rt0.c2)) ELSE ((rt0.c1)&(rt0.c2)) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c1, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c0;
SELECT ALL vt0.c1, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((((CASE WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c1 END))>=((((rt0.c2)*(vt0.c0)))))) GROUP BY vt0.c1, rt0.c1, rt0.c0 UNION SELECT ALL vt0.c1, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT ((((CASE WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c1 END))>=((((rt0.c2)*(vt0.c0)))))))) GROUP BY vt0.c1, rt0.c1, rt0.c0 UNION SELECT vt0.c1, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((((((CASE WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c1 END))>=((((rt0.c2)*(vt0.c0)))))) ISNULL)) GROUP BY vt0.c1, rt0.c1, rt0.c0;
SELECT ALL vt0.c1, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((((COUNT(*) IN ())))<(((((SUM(MIN(vt0.lid)))) NOT BETWEEN ((MAX(MAX(COUNT(*))))) AND ((SUM(vt0.c1))))))) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT (((((COUNT(*) IN ())))<(((((SUM(MIN(vt0.lid)))) NOT BETWEEN ((MAX(MAX(COUNT(*))))) AND ((SUM(vt0.c1))))))))) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((((((COUNT(*) IN ())))<(((((SUM(MIN(vt0.lid)))) NOT BETWEEN ((MAX(MAX(COUNT(*))))) AND ((SUM(vt0.c1)))))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((('2083591569') NOT BETWEEN (vt0.lid) AND (x'')), (~ (vt0.c0)), ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(NULL)))OR(vt0.c1))))>((CAST(vt0.lid AS NUMERIC), (+ (vt0.c0)), ((NULL)>>(x'0a46')))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((('2083591569') NOT BETWEEN (vt0.lid) AND (x'')), (~ (vt0.c0)), ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(NULL)))OR(vt0.c1))))>((CAST(vt0.lid AS NUMERIC), (+ (vt0.c0)), ((NULL)>>(x'0a46')))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((('2083591569') NOT BETWEEN (vt0.lid) AND (x'')), (~ (vt0.c0)), ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(NULL)))OR(vt0.c1))))>((CAST(vt0.lid AS NUMERIC), (+ (vt0.c0)), ((NULL)>>(x'0a46')))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((((((vt0.lid IN ()))OR(HEX(vt0.lid))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(vt0.lid))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((((((((vt0.lid IN ()))OR(HEX(vt0.lid))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(vt0.lid))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((((((((vt0.lid IN ()))OR(HEX(vt0.lid))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(vt0.lid))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((rt0.c2)OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END)))OR(LIKELIHOOD(rt0.c1, 0.5631026593363357))))OR((rt0.c0 IN (rt0.c0, x'', rt0.c1)))))OR(json_array_length(0.4803506633994492, rt0.c2)))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((((((rt0.c2)OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END)))OR(LIKELIHOOD(rt0.c1, 0.5631026593363357))))OR((rt0.c0 IN (rt0.c0, x'', rt0.c1)))))OR(json_array_length(0.4803506633994492, rt0.c2)))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((((rt0.c2)OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END)))OR(LIKELIHOOD(rt0.c1, 0.5631026593363357))))OR((rt0.c0 IN (rt0.c0, x'', rt0.c1)))))OR(json_array_length(0.4803506633994492, rt0.c2)))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING GROUP_CONCAT(CASE WHEN MIN(SUM(SUM(rt0.c0))) THEN COUNT(*) ELSE MIN(rt0.c2) END) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(CASE WHEN MIN(SUM(SUM(rt0.c0))) THEN COUNT(*) ELSE MIN(rt0.c2) END))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(CASE WHEN MIN(SUM(SUM(rt0.c0))) THEN COUNT(*) ELSE MIN(rt0.c2) END)) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.lid)*(vt0.c0)) AS NUMERIC)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST(((vt0.lid)*(vt0.c0)) AS NUMERIC)))) UNION ALL SELECT * FROM vt0 WHERE (((CAST(((vt0.lid)*(vt0.c0)) AS NUMERIC)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((rt0.c2)<(rt0.c1)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((rt0.c2)<(rt0.c1)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((rt0.c2)<(rt0.c1)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c2))) IN ())) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c2))) IN ())))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c2))) IN ())) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid;
SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid HAVING ((MAX(vt0.lid)) IS TRUE) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid HAVING (NOT (((MAX(vt0.lid)) IS TRUE))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid HAVING ((((MAX(vt0.lid)) IS TRUE)) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid;
SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid HAVING ((MAX(vt0.lid)) IS TRUE) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid HAVING (NOT (((MAX(vt0.lid)) IS TRUE))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid HAVING ((((MAX(vt0.lid)) IS TRUE)) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.lid;
SELECT ALL SUM(((((vt0.c0) ISNULL)) NOTNULL)) FROM vt0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (x'') UNION ALL SELECT * FROM vt0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM vt0 WHERE (((x'') ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((~ (vt0.c0)))>(vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((~ (vt0.c0)))>(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((~ (vt0.c0)))>(vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c0) NOT NULL) IN ())) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0) NOT NULL) IN ())))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c0) NOT NULL) IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((NOT (COUNT(*))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((NOT (COUNT(*)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((NOT (COUNT(*))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((NOT (COUNT(*)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT * FROM rt0 CROSS JOIN vt0 ON json_remove((((rt0.c0))<>((vt0.lid))), (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.lid))));
SELECT DISTINCT rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c0 FROM vt0, rt0 WHERE ((((vt0.lid IN ())) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((rt0.c1)<<(NULL))))) UNION SELECT DISTINCT rt0.c0 FROM vt0, rt0 WHERE ((NOT ((((vt0.lid IN ())) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((rt0.c1)<<(NULL))))))) UNION SELECT DISTINCT rt0.c0 FROM vt0, rt0 WHERE ((((((vt0.lid IN ())) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((rt0.c1)<<(NULL))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM vt0, rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (IFNULL(DISTINCT (rt0.c1 IN ()), (((('1,&_㕨d')OR(rt0.c0)))OR(rt0.c2)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (IFNULL(DISTINCT (rt0.c1 IN ()), (((('1,&_㕨d')OR(rt0.c0)))OR(rt0.c2)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((IFNULL(DISTINCT (rt0.c1 IN ()), (((('1,&_㕨d')OR(rt0.c0)))OR(rt0.c2)))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0;
SELECT rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING ((('')) NOT BETWEEN ((((rt0.c2)<(MIN(MIN(vt0.c1)))))) AND ((((GROUP_CONCAT(MAX(TOTAL(vt0.c1))))%(rt0.c0))))) UNION ALL SELECT rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING (NOT (((('')) NOT BETWEEN ((((rt0.c2)<(MIN(MIN(vt0.c1)))))) AND ((((GROUP_CONCAT(MAX(TOTAL(vt0.c1))))%(rt0.c0))))))) UNION ALL SELECT rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING ((((('')) NOT BETWEEN ((((rt0.c2)<(MIN(MIN(vt0.c1)))))) AND ((((GROUP_CONCAT(MAX(TOTAL(vt0.c1))))%(rt0.c0)))))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (0xffffffff8a8d75f3) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (0xffffffff8a8d75f3))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((0Xffffffff8a8d75f3) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT vt0.lid, vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE (NULL) UNION SELECT DISTINCT vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.lid, vt0.c1, vt0.c0 FROM vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt0.lid, vt0.c1, vt0.c0 FROM vt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))*(rt0.c0 COLLATE NOCASE))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))*(rt0.c0 COLLATE NOCASE))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))*(rt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL vt0.c0, vt0.lid, vt0.c1, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1, rt0.c0, rt0.c1;
SELECT vt0.c0, vt0.lid, vt0.c1, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1, rt0.c0, rt0.c1 HAVING AVG(COUNT(0xffffffffdf0e5edf)) COLLATE BINARY COLLATE NOCASE UNION ALL SELECT vt0.c0, vt0.lid, vt0.c1, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1, rt0.c0, rt0.c1 HAVING (NOT (AVG(COUNT(0Xffffffffdf0e5edf)) COLLATE BINARY COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c0, vt0.lid, vt0.c1, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1, rt0.c0, rt0.c1 HAVING ((AVG(COUNT(0Xffffffffdf0e5edf)) COLLATE BINARY COLLATE NOCASE) ISNULL);
SELECT ALL SUM((((CAST(rt0.c1 AS TEXT), (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), rt0.c1 COLLATE RTRIM))>((NULL, ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)), rt0.c2)))) FROM rt0 ORDER BY ((CAST(rt0.c2 AS REAL)) NOT BETWEEN (((rt0.c2)%(rt0.c1))) AND (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))) ASC;
SELECT rt0.c2, vt0.c0, vt0.c1, rt0.c0, vt0.lid FROM vt0, rt0;
SELECT rt0.c2, vt0.c0, vt0.c1, rt0.c0, vt0.lid FROM vt0, rt0 WHERE (((((vt0.c0) IS FALSE)) IS TRUE)) UNION ALL SELECT rt0.c2, vt0.c0, vt0.c1, rt0.c0, vt0.lid FROM vt0, rt0 WHERE ((NOT (((((vt0.c0) IS FALSE)) IS TRUE)))) UNION ALL SELECT rt0.c2, vt0.c0, vt0.c1, rt0.c0, vt0.lid FROM vt0, rt0 WHERE (((((((vt0.c0) IS FALSE)) IS TRUE)) ISNULL));
SELECT rt0.c2, vt0.c0, vt0.c1, rt0.c0, vt0.lid FROM vt0, rt0;
SELECT DISTINCT rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c0 FROM vt0, rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c0 FROM vt0, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c0 FROM vt0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c0 FROM vt0, rt0;
SELECT ALL vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1;
SELECT ALL vt0.lid, vt0.c1 FROM vt0 NOT INDEXED WHERE (CASE vt0.c1  WHEN (('') NOT BETWEEN ('-919754071') AND (vt0.lid)) THEN x'923c' END) GROUP BY vt0.lid, vt0.c1 UNION SELECT vt0.lid, vt0.c1 FROM vt0 WHERE ((NOT (CASE vt0.c1  WHEN (('') NOT BETWEEN ('-919754071') AND (vt0.lid)) THEN x'923c' END))) GROUP BY vt0.lid, vt0.c1 UNION SELECT ALL vt0.lid, vt0.c1 FROM vt0 WHERE (((CASE vt0.c1  WHEN (('') NOT BETWEEN ('-919754071') AND (vt0.lid)) THEN x'923c' END) ISNULL)) GROUP BY vt0.lid, vt0.c1;
SELECT ALL vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c1;
SELECT rt0.c1, vt0.lid, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.lid, rt0.c2, rt0.c0, vt0.c0;
SELECT rt0.c1, vt0.lid, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.lid, rt0.c2, rt0.c0, vt0.c0 HAVING MAX(SUM(vt0.c1)) UNION ALL SELECT ALL rt0.c1, vt0.lid, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.lid, rt0.c2, rt0.c0, vt0.c0 HAVING (NOT (MAX(SUM(vt0.c1)))) UNION ALL SELECT ALL rt0.c1, vt0.lid, rt0.c2, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.lid, rt0.c2, rt0.c0, vt0.c0 HAVING ((MAX(SUM(vt0.c1))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CHAR(vt0.c1)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CHAR(vt0.c1)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CHAR(vt0.c1)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ('2(U_W,.UW') UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ('2(U_W,.UW'))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((('2(U_W,.UW') ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (CAST(rt0.c0 AS INTEGER)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS INTEGER)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT vt0.c1, rt0.c0, vt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON 'FALSE' GROUP BY vt0.c1, rt0.c0, vt0.c0, rt0.c1;
SELECT vt0.c1, rt0.c0, vt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON 'FALSE' GROUP BY vt0.c1, rt0.c0, vt0.c0, rt0.c1 HAVING ((SUM(COUNT(AVG(COUNT(*))))) NOT BETWEEN ((NOT (COUNT(*)))) AND (((AVG(vt0.c0)) BETWEEN (rt0.c0) AND (MAX(vt0.lid))))) UNION ALL SELECT vt0.c1, rt0.c0, vt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON 'FALSE' GROUP BY vt0.c1, rt0.c0, vt0.c0, rt0.c1 HAVING (NOT (((SUM(COUNT(AVG(COUNT(*))))) NOT BETWEEN ((NOT (COUNT(*)))) AND (((AVG(vt0.c0)) BETWEEN (rt0.c0) AND (MAX(vt0.lid))))))) UNION ALL SELECT ALL vt0.c1, rt0.c0, vt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON 'FALSE' GROUP BY vt0.c1, rt0.c0, vt0.c0, rt0.c1 HAVING ((((SUM(COUNT(AVG(COUNT(*))))) NOT BETWEEN ((NOT (COUNT(*)))) AND (((AVG(vt0.c0)) BETWEEN (rt0.c0) AND (MAX(vt0.lid)))))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(vt0.lid)))<=(0x158a18e5))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (((((((vt0.c0)AND(vt0.c1)))OR(vt0.lid)))<=(0X158a18e5))))) UNION ALL SELECT ALL * FROM rt0, vt0 NOT INDEXED WHERE (((((((((vt0.c0)AND(vt0.c1)))OR(vt0.lid)))<=(0x158a18e5))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((rt0.c2)|(((vt0.c1) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((rt0.c2)|(((vt0.c1) NOTNULL)))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((rt0.c2)|(((vt0.c1) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1;
SELECT vt0.c1, rt0.c1 FROM vt0, rt0 WHERE (((vt0.c0)<(((vt0.lid)>(rt0.c0))))) GROUP BY vt0.c1, rt0.c1 UNION SELECT vt0.c1, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((vt0.c0)<(((vt0.lid)>(rt0.c0))))))) GROUP BY vt0.c1, rt0.c1 UNION SELECT ALL vt0.c1, rt0.c1 FROM vt0, rt0 WHERE (((((vt0.c0)<(((vt0.lid)>(rt0.c0))))) ISNULL)) GROUP BY vt0.c1, rt0.c1;
SELECT vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING CAST(AVG(GROUP_CONCAT(MAX(rt0.c0))) AS NUMERIC) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (CAST(AVG(GROUP_CONCAT(MAX(rt0.c0))) AS NUMERIC))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CAST(AVG(GROUP_CONCAT(MAX(rt0.c0))) AS NUMERIC)) ISNULL);
SELECT ALL MIN(rt0.c0) FROM rt0;
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (IFNULL(rt0.c0, vt0.lid) COLLATE NOCASE) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (IFNULL(rt0.c0, vt0.lid) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((IFNULL(rt0.c0, vt0.lid) COLLATE NOCASE) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT vt0.c0, vt0.lid FROM vt0;
SELECT DISTINCT vt0.c0, vt0.lid FROM vt0 WHERE (CASE WHEN ((vt0.c1) BETWEEN (vt0.lid) AND (vt0.c0)) THEN (- (vt0.lid)) WHEN (((-4.1908671E8, vt0.c1, vt0.c0))<=((vt0.c0, vt0.lid, vt0.c0))) THEN CAST(vt0.lid AS REAL) WHEN ((vt0.c1)%(vt0.lid)) THEN 'I	mI0' END) UNION SELECT DISTINCT vt0.c0, vt0.lid FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c1) BETWEEN (vt0.lid) AND (vt0.c0)) THEN (- (vt0.lid)) WHEN (((-4.1908671E8, vt0.c1, vt0.c0))<=((vt0.c0, vt0.lid, vt0.c0))) THEN CAST(vt0.lid AS REAL) WHEN ((vt0.c1)%(vt0.lid)) THEN 'I	mI0' END))) UNION SELECT DISTINCT vt0.c0, vt0.lid FROM vt0 WHERE (((CASE WHEN ((vt0.c1) BETWEEN (vt0.lid) AND (vt0.c0)) THEN (- (vt0.lid)) WHEN (((-4.1908671E8, vt0.c1, vt0.c0))<=((vt0.c0, vt0.lid, vt0.c0))) THEN CAST(vt0.lid AS REAL) WHEN ((vt0.c1)%(vt0.lid)) THEN 'I	mI0' END) ISNULL));
SELECT DISTINCT vt0.c0, vt0.lid FROM vt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((+ ((~ ('Hlf}'))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((+ ((~ ('Hlf}'))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((+ ((~ ('Hlf}'))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING SUM(TOTAL(rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (SUM(TOTAL(rt0.c1)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((SUM(TOTAL(rt0.c1))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((((((((((UNLIKELY(vt0.lid))AND(vt0.c0)))OR(((vt0.c1) ISNULL))))OR((((vt0.lid, vt0.c1, vt0.lid)) NOT BETWEEN ((vt0.lid, vt0.c1, vt0.lid)) AND ((vt0.lid, vt0.c1, vt0.lid))))))OR(vt0.c1 COLLATE NOCASE)))AND(((vt0.c1)IS(vt0.lid)))))OR(((vt0.c1)<(vt0.c1))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((((((((((UNLIKELY(vt0.lid))AND(vt0.c0)))OR(((vt0.c1) ISNULL))))OR((((vt0.lid, vt0.c1, vt0.lid)) NOT BETWEEN ((vt0.lid, vt0.c1, vt0.lid)) AND ((vt0.lid, vt0.c1, vt0.lid))))))OR(vt0.c1 COLLATE NOCASE)))AND(((vt0.c1)IS(vt0.lid)))))OR(((vt0.c1)<(vt0.c1))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((((((((((UNLIKELY(vt0.lid))AND(vt0.c0)))OR(((vt0.c1) ISNULL))))OR((((vt0.lid, vt0.c1, vt0.lid)) NOT BETWEEN ((vt0.lid, vt0.c1, vt0.lid)) AND ((vt0.lid, vt0.c1, vt0.lid))))))OR(vt0.c1 COLLATE NOCASE)))AND(((vt0.c1)IS(vt0.lid)))))OR(((vt0.c1)<(vt0.c1))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c1)!=(vt0.c0)))OR(CASE WHEN 0.398208841527562 THEN rt0.c0 ELSE rt0.c0 END));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c1)!=(vt0.c0)))OR(CASE WHEN 0.398208841527562 THEN rt0.c0 ELSE rt0.c0 END)) WHERE ((((((~ (vt0.c0)))AND(((vt0.lid)OR(vt0.lid)))))OR(CAST(vt0.c0 AS INTEGER)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c1)!=(vt0.c0)))OR(CASE WHEN 0.398208841527562 THEN rt0.c0 ELSE rt0.c0 END)) WHERE ((NOT ((((((~ (vt0.c0)))AND(((vt0.lid)OR(vt0.lid)))))OR(CAST(vt0.c0 AS INTEGER)))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c1)<>(vt0.c0)))OR(CASE WHEN 0.398208841527562 THEN rt0.c0 ELSE rt0.c0 END)) WHERE ((((((((~ (vt0.c0)))AND(((vt0.lid)OR(vt0.lid)))))OR(CAST(vt0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c1)!=(vt0.c0)))OR(CASE WHEN 0.398208841527562 THEN rt0.c0 ELSE rt0.c0 END));
SELECT vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM rt0, vt0 WHERE ((((((((((((vt0.c0, rt0.c1, vt0.lid)) BETWEEN ((rt0.c0, vt0.lid, vt0.lid)) AND ((rt0.c1, vt0.c1, rt0.c1))))AND(rt0.c2)))AND((~ (vt0.c1)))))OR(((rt0.c2) NOT BETWEEN ('0.350653903521719') AND (rt0.c1)))))OR(rt0.c1 COLLATE NOCASE))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM rt0, vt0 WHERE ((NOT ((((((((((((vt0.c0, rt0.c1, vt0.lid)) BETWEEN ((rt0.c0, vt0.lid, vt0.lid)) AND ((rt0.c1, vt0.c1, rt0.c1))))AND(rt0.c2)))AND((~ (vt0.c1)))))OR(((rt0.c2) NOT BETWEEN ('0.350653903521719') AND (rt0.c1)))))OR(rt0.c1 COLLATE NOCASE))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM rt0, vt0 WHERE ((((((((((((((vt0.c0, rt0.c1, vt0.lid)) BETWEEN ((rt0.c0, vt0.lid, vt0.lid)) AND ((rt0.c1, vt0.c1, rt0.c1))))AND(rt0.c2)))AND((~ (vt0.c1)))))OR(((rt0.c2) NOT BETWEEN ('0.350653903521719') AND (rt0.c1)))))OR(rt0.c1 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((SUM(COUNT(*)), GROUP_CONCAT(AVG(rt0.c1)), MAX(rt0.c0)))<=((GROUP_CONCAT(rt0.c2), rt0.c0, x'ec5d'))) COLLATE RTRIM UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((((SUM(COUNT(*)), GROUP_CONCAT(AVG(rt0.c1)), MAX(rt0.c0)))<=((GROUP_CONCAT(rt0.c2), rt0.c0, x'ec5d'))) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((((SUM(COUNT(*)), GROUP_CONCAT(AVG(rt0.c1)), MAX(rt0.c0)))<=((GROUP_CONCAT(rt0.c2), rt0.c0, x'ec5d'))) COLLATE RTRIM) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((IFNULL(DISTINCT 'Kf', rt0.c2) IN ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), rt0.c1))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((IFNULL(DISTINCT 'Kf', rt0.c2) IN ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), rt0.c1))))) UNION ALL SELECT * FROM rt0 WHERE ((((IFNULL(DISTINCT 'Kf', rt0.c2) IN ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), rt0.c1))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c1 FROM vt0, rt0 WHERE (UNLIKELY(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) UNION SELECT DISTINCT rt0.c1 FROM vt0, rt0 WHERE ((NOT (UNLIKELY(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))) UNION SELECT DISTINCT rt0.c1 FROM vt0, rt0 WHERE (((UNLIKELY(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) ISNULL));
SELECT DISTINCT rt0.c1 FROM vt0, rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (NULL) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING ((((SUM(rt0.c1)) BETWEEN (NULL) AND (GROUP_CONCAT(rt0.c0))))>>(GROUP_CONCAT(SUM(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING (NOT (((((SUM(rt0.c1)) BETWEEN (NULL) AND (GROUP_CONCAT(rt0.c0))))>>(GROUP_CONCAT(SUM(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING ((((((SUM(rt0.c1)) BETWEEN (NULL) AND (GROUP_CONCAT(rt0.c0))))>>(GROUP_CONCAT(SUM(vt0.c0))))) ISNULL);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))), ((rt0.c2)LIKE(vt0.c0)), CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))=((((((rt0.c1)AND(vt0.c0)))OR(vt0.lid)), rt0.c0, CAST(-937537124 AS INTEGER))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))), ((rt0.c2)LIKE(vt0.c0)), CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))=((((((rt0.c1)AND(vt0.c0)))OR(vt0.lid)), rt0.c0, CAST(-937537124 AS INTEGER)))) WHERE (rt0.c2) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))), ((rt0.c2)LIKE(vt0.c0)), CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))=((((((rt0.c1)AND(vt0.c0)))OR(vt0.lid)), rt0.c0, CAST(-937537124 AS INTEGER)))) WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))), ((rt0.c2)LIKE(vt0.c0)), CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))=((((((rt0.c1)AND(vt0.c0)))OR(vt0.lid)), rt0.c0, CAST(-937537124 AS INTEGER)))) WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))), ((rt0.c2)LIKE(vt0.c0)), CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))=((((((rt0.c1)AND(vt0.c0)))OR(vt0.lid)), rt0.c0, CAST(-937537124 AS INTEGER))));
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (CASE WHEN (NOT (NULL)) THEN ((((rt0.c2)OR(0.5816586248948277)))AND(rt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (rt0.c0 IN ()) WHEN rt0.c1 THEN ((vt0.c1)==(vt0.c1)) END) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (CASE WHEN (NOT (NULL)) THEN ((((rt0.c2)OR(0.5816586248948277)))AND(rt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (rt0.c0 IN ()) WHEN rt0.c1 THEN ((vt0.c1)==(vt0.c1)) END))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((CASE WHEN (NOT (NULL)) THEN ((((rt0.c2)OR(0.5816586248948277)))AND(rt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (rt0.c0 IN ()) WHEN rt0.c1 THEN ((vt0.c1)==(vt0.c1)) END) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c0, rt0.c2, vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c2, vt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE ((~ (((vt0.lid)OR(rt0.c1))))) GROUP BY rt0.c0, rt0.c2, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c2, vt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT ((~ (((vt0.lid)OR(rt0.c1))))))) GROUP BY rt0.c0, rt0.c2, vt0.c0 UNION SELECT rt0.c0, rt0.c2, vt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE ((((~ (((vt0.lid)OR(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c2, vt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c2, vt0.c0;
SELECT rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0 HAVING GROUP_CONCAT(SUM(vt0.lid)) UNION ALL SELECT rt0.c2, vt0.c0 FROM vt0 NOT INDEXED, rt0 GROUP BY rt0.c2, vt0.c0 HAVING (NOT (GROUP_CONCAT(SUM(vt0.lid)))) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0 HAVING ((GROUP_CONCAT(SUM(vt0.lid))) ISNULL);
SELECT ALL vt0.lid FROM rt0, vt0;
SELECT vt0.lid FROM rt0, vt0 WHERE (((((rt0.c0) BETWEEN (x'') AND (vt0.c0))) NOTNULL)) UNION ALL SELECT vt0.lid FROM rt0, vt0 WHERE ((NOT (((((rt0.c0) BETWEEN (x'') AND (vt0.c0))) NOTNULL)))) UNION ALL SELECT ALL vt0.lid FROM rt0, vt0 WHERE (((((((rt0.c0) BETWEEN (x'') AND (vt0.c0))) NOTNULL)) ISNULL));
SELECT ALL vt0.lid FROM rt0, vt0;
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE (vt0.lid) UNION SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (vt0.lid))) UNION SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.lid) ISNULL));
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0;
SELECT rt0.c2, vt0.c1, vt0.c0, vt0.lid FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, vt0.c0, vt0.lid;
SELECT ALL rt0.c2, vt0.c1, vt0.c0, vt0.lid FROM rt0, vt0 WHERE ((((((vt0.c1) IS FALSE)))<=((((vt0.lid) BETWEEN (x'') AND (rt0.c1)))))) GROUP BY rt0.c2, vt0.c1, vt0.c0, vt0.lid UNION SELECT rt0.c2, vt0.c1, vt0.c0, vt0.lid FROM rt0, vt0 WHERE ((NOT ((((((vt0.c1) IS FALSE)))<=((((vt0.lid) BETWEEN (x'') AND (rt0.c1)))))))) GROUP BY rt0.c2, vt0.c1, vt0.c0, vt0.lid UNION SELECT ALL rt0.c2, vt0.c1, vt0.c0, vt0.lid FROM rt0, vt0 WHERE ((((((((vt0.c1) IS FALSE)))<=((((vt0.lid) BETWEEN (x'') AND (rt0.c1)))))) ISNULL)) GROUP BY rt0.c2, vt0.c1, vt0.c0, vt0.lid;
SELECT rt0.c2, vt0.c1, vt0.c0, vt0.lid FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, vt0.c0, vt0.lid;
SELECT ALL rt0.c2, rt0.c0, vt0.lid, rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.lid, rt0.c1, vt0.c1;
SELECT ALL rt0.c2, rt0.c0, vt0.lid, rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.lid, rt0.c1, vt0.c1 HAVING SUM(COUNT(SUM(MIN(vt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.lid, rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.lid, rt0.c1, vt0.c1 HAVING (NOT (SUM(COUNT(SUM(MIN(vt0.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.lid, rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, vt0.lid, rt0.c1, vt0.c1 HAVING ((SUM(COUNT(SUM(MIN(vt0.c0))))) ISNULL);
SELECT ALL vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.lid THEN vt0.lid WHEN rt0.c2 THEN rt0.c2 ELSE vt0.lid END IN (((vt0.c1)>>(vt0.lid)), ((((((((rt0.c1)AND(vt0.lid)))OR(vt0.c1)))OR(rt0.c2)))AND(vt0.lid))))) UNION ALL SELECT vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.lid THEN vt0.lid WHEN rt0.c2 THEN rt0.c2 ELSE vt0.lid END IN (((vt0.c1)>>(vt0.lid)), ((((((((rt0.c1)AND(vt0.lid)))OR(vt0.c1)))OR(rt0.c2)))AND(vt0.lid))))))) UNION ALL SELECT ALL vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.lid THEN vt0.lid WHEN rt0.c2 THEN rt0.c2 ELSE vt0.lid END IN (((vt0.c1)>>(vt0.lid)), ((((((((rt0.c1)AND(vt0.lid)))OR(vt0.c1)))OR(rt0.c2)))AND(vt0.lid))))) ISNULL));
SELECT ALL vt0.c1, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2)<=(vt0.c1)) COLLATE NOCASE;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2)<=(vt0.c1)) COLLATE NOCASE WHERE ((((rt0.c1)) NOT BETWEEN ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.lid)))) AND ((CAST(rt0.c0 AS TEXT))))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2)<=(vt0.c1)) COLLATE NOCASE WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.lid)))) AND ((CAST(rt0.c0 AS TEXT))))))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2)<=(vt0.c1)) COLLATE NOCASE WHERE ((((((rt0.c1)) NOT BETWEEN ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.lid)))) AND ((CAST(rt0.c0 AS TEXT))))) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2)<=(vt0.c1)) COLLATE NOCASE;
SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE ((vt0.c1 IN ())) GROUP BY vt0.c1, vt0.lid, vt0.c0 UNION SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c1 IN ())))) GROUP BY vt0.c1, vt0.lid, vt0.c0 UNION SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE ((((vt0.c1 IN ())) ISNULL)) GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT ALL rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(vt0.c1)))OR(rt0.c1))) BETWEEN (x'') AND (((vt0.lid)&(rt0.c0)))) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(vt0.c1)))OR(rt0.c1))) BETWEEN (x'') AND (((vt0.lid)&(rt0.c0)))) GROUP BY rt0.c1 HAVING ((NULL)<<(COUNT(*))) UNION ALL SELECT rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(vt0.c1)))OR(rt0.c1))) BETWEEN (x'') AND (((vt0.lid)&(rt0.c0)))) GROUP BY rt0.c1 HAVING (NOT (((NULL)<<(COUNT(*))))) UNION ALL SELECT rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(vt0.c1)))OR(rt0.c1))) BETWEEN (x'') AND (((vt0.lid)&(rt0.c0)))) GROUP BY rt0.c1 HAVING ((((NULL)<<(COUNT(*)))) ISNULL);
SELECT ALL rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(vt0.c1)))OR(rt0.c1))) BETWEEN (x'') AND (((vt0.lid)&(rt0.c0)))) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(vt0.c1)))OR(rt0.c1))) BETWEEN (x'') AND (((vt0.lid)&(rt0.c0)))) GROUP BY rt0.c1 HAVING ((NULL)<<(COUNT(*))) UNION ALL SELECT rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(vt0.c1)))OR(rt0.c1))) BETWEEN (x'') AND (((vt0.lid)&(rt0.c0)))) GROUP BY rt0.c1 HAVING (NOT (((NULL)<<(COUNT(*))))) UNION ALL SELECT rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(vt0.c1)))OR(rt0.c1))) BETWEEN (x'') AND (((vt0.lid)&(rt0.c0)))) GROUP BY rt0.c1 HAVING ((((NULL)<<(COUNT(*)))) ISNULL);
SELECT ALL rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(vt0.c1)))OR(rt0.c1))) BETWEEN (x'') AND (((vt0.lid)&(rt0.c0)))) GROUP BY rt0.c1;
SELECT ALL MIN((((((((((vt0.c0)AND('')))AND(x'')))AND(vt0.c1)))AND(vt0.c0)) IN ())) FROM vt0 ORDER BY 0.9023251905732885 ASC;
SELECT vt0.c0, vt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON (+ (((rt0.c2) NOT NULL)));
SELECT vt0.c0, vt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON (+ (((rt0.c2) NOT NULL))) WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((((rt0.c0)AND(rt0.c2)))OR(vt0.c1))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON (+ (((rt0.c2) NOT NULL))) WHERE ((NOT (((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((((rt0.c0)AND(rt0.c2)))OR(vt0.c1))))))) UNION ALL SELECT vt0.c0, vt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON (+ (((rt0.c2) NOT NULL))) WHERE (((((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((((rt0.c0)AND(rt0.c2)))OR(vt0.c1))))) ISNULL));
SELECT vt0.c0, vt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON (+ (((rt0.c2) NOT NULL)));
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((((rt0.c2 IN ())) NOT BETWEEN ((((x''))!=((rt0.c2)))) AND ((vt0.c0 IN (rt0.c0))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((((rt0.c2 IN ())) NOT BETWEEN ((((x''))!=((rt0.c2)))) AND ((vt0.c0 IN (rt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((rt0.c2 IN ())) NOT BETWEEN ((((x''))!=((rt0.c2)))) AND ((vt0.c0 IN (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((CAST(vt0.c1 AS REAL) IN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.lid)), ((vt0.lid)*(vt0.lid))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((CAST(vt0.c1 AS REAL) IN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.lid)), ((vt0.lid)*(vt0.lid))))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((CAST(vt0.c1 AS REAL) IN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.lid)), ((vt0.lid)*(vt0.lid))))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING GROUP_CONCAT(COUNT(MIN(SUM(GROUP_CONCAT(MAX(rt0.c2)))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(COUNT(MIN(SUM(GROUP_CONCAT(MAX(rt0.c2)))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(COUNT(MIN(SUM(GROUP_CONCAT(MAX(rt0.c2))))))) ISNULL);
SELECT ALL rt0.c0, vt0.c0, vt0.lid, rt0.c1 FROM rt0, vt0;
SELECT rt0.c0, vt0.c0, vt0.lid, rt0.c1 FROM rt0, vt0 WHERE (CAST(NULL AS REAL)) UNION ALL SELECT ALL rt0.c0, vt0.c0, vt0.lid, rt0.c1 FROM rt0, vt0 WHERE ((NOT (CAST(NULL AS REAL)))) UNION ALL SELECT rt0.c0, vt0.c0, vt0.lid, rt0.c1 FROM rt0, vt0 WHERE (((CAST(NULL AS REAL)) ISNULL));
SELECT ALL rt0.c0, vt0.c0, vt0.lid, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))&(CAST(rt0.c2 AS NUMERIC)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))&(CAST(rt0.c2 AS NUMERIC)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))&(CAST(rt0.c2 AS NUMERIC)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (NULL) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0 HAVING (+ (AVG(TOTAL(vt0.lid)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ((+ (AVG(TOTAL(vt0.lid)))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((+ (AVG(TOTAL(vt0.lid))))) ISNULL);
SELECT ALL vt0.c1 FROM rt0 INNER JOIN vt0 ON (vt0.lid IN ());
SELECT vt0.c1 FROM rt0 INNER JOIN vt0 ON (vt0.lid IN ()) WHERE ((~ (((vt0.lid)&(vt0.c0))))) UNION ALL SELECT vt0.c1 FROM rt0 INNER JOIN vt0 ON (vt0.lid IN ()) WHERE ((NOT ((~ (((vt0.lid)&(vt0.c0))))))) UNION ALL SELECT vt0.c1 FROM rt0 INNER JOIN vt0 ON (vt0.lid IN ()) WHERE ((((~ (((vt0.lid)&(vt0.c0))))) ISNULL));
SELECT ALL vt0.c1 FROM rt0 INNER JOIN vt0 ON (vt0.lid IN ());
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c1, vt0.lid FROM vt0 FULL OUTER JOIN rt0 ON CASE QUOTE(vt0.c1)  WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN ((rt0.c0) NOT BETWEEN (vt0.lid) AND (rt0.c1)) WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN vt0.c1 THEN ((x'') BETWEEN (vt0.lid) AND (rt0.c2)) END;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c1, vt0.lid FROM vt0 FULL OUTER JOIN rt0 ON CASE QUOTE(vt0.c1)  WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN ((rt0.c0) NOT BETWEEN (vt0.lid) AND (rt0.c1)) WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN vt0.c1 THEN ((x'') BETWEEN (vt0.lid) AND (rt0.c2)) END WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND ('-212212874')))IS NOT(CAST(rt0.c1 AS NUMERIC)))) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c1, vt0.lid FROM vt0 FULL OUTER JOIN rt0 ON CASE QUOTE(vt0.c1)  WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN ((rt0.c0) NOT BETWEEN (vt0.lid) AND (rt0.c1)) WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN vt0.c1 THEN ((x'') BETWEEN (vt0.lid) AND (rt0.c2)) END WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c2) AND ('-212212874')))IS NOT(CAST(rt0.c1 AS NUMERIC)))))) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c1, vt0.lid FROM vt0 FULL OUTER JOIN rt0 ON CASE QUOTE(vt0.c1)  WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN ((rt0.c0) NOT BETWEEN (vt0.lid) AND (rt0.c1)) WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN vt0.c1 THEN ((x'') BETWEEN (vt0.lid) AND (rt0.c2)) END WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c2) AND ('-212212874')))IS NOT(CAST(rt0.c1 AS NUMERIC)))) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c1, vt0.lid FROM vt0 FULL OUTER JOIN rt0 ON CASE QUOTE(vt0.c1)  WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN ((rt0.c0) NOT BETWEEN (vt0.lid) AND (rt0.c1)) WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN vt0.c1 THEN ((x'') BETWEEN (vt0.lid) AND (rt0.c2)) END;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ('妇l䞿') GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ('妇l䞿'))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((('妇l䞿') ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, rt0.c2, rt0.c1, vt0.lid, rt0.c0, vt0.c1 FROM vt0 INNER JOIN rt0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(CAST(NULL AS TEXT))) GROUP BY vt0.c0, rt0.c2, rt0.c1, vt0.lid, rt0.c0, vt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, vt0.lid, rt0.c0, vt0.c1 FROM vt0 INNER JOIN rt0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(CAST(NULL AS TEXT))) GROUP BY vt0.c0, rt0.c2, rt0.c1, vt0.lid, rt0.c0, vt0.c1 HAVING '_ქ.' UNION ALL SELECT vt0.c0, rt0.c2, rt0.c1, vt0.lid, rt0.c0, vt0.c1 FROM vt0 INNER JOIN rt0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(CAST(NULL AS TEXT))) GROUP BY vt0.c0, rt0.c2, rt0.c1, vt0.lid, rt0.c0, vt0.c1 HAVING (NOT ('_ქ.')) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c1, vt0.lid, rt0.c0, vt0.c1 FROM vt0 INNER JOIN rt0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(CAST(NULL AS TEXT))) GROUP BY vt0.c0, rt0.c2, rt0.c1, vt0.lid, rt0.c0, vt0.c1 HAVING (('_ქ.') ISNULL);
SELECT vt0.c0, rt0.c2, rt0.c1, vt0.lid, rt0.c0, vt0.c1 FROM vt0 INNER JOIN rt0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(CAST(NULL AS TEXT))) GROUP BY vt0.c0, rt0.c2, rt0.c1, vt0.lid, rt0.c0, vt0.c1;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, vt0.lid, rt0.c0, vt0.c1 FROM vt0 INNER JOIN rt0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(CAST(NULL AS TEXT))) GROUP BY vt0.c0, rt0.c2, rt0.c1, vt0.lid, rt0.c0, vt0.c1 HAVING '_ქ.' UNION ALL SELECT vt0.c0, rt0.c2, rt0.c1, vt0.lid, rt0.c0, vt0.c1 FROM vt0 INNER JOIN rt0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(CAST(NULL AS TEXT))) GROUP BY vt0.c0, rt0.c2, rt0.c1, vt0.lid, rt0.c0, vt0.c1 HAVING (NOT ('_ქ.')) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c1, vt0.lid, rt0.c0, vt0.c1 FROM vt0 INNER JOIN rt0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(CAST(NULL AS TEXT))) GROUP BY vt0.c0, rt0.c2, rt0.c1, vt0.lid, rt0.c0, vt0.c1 HAVING (('_ქ.') ISNULL);
SELECT vt0.c0, rt0.c2, rt0.c1, vt0.lid, rt0.c0, vt0.c1 FROM vt0 INNER JOIN rt0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(CAST(NULL AS TEXT))) GROUP BY vt0.c0, rt0.c2, rt0.c1, vt0.lid, rt0.c0, vt0.c1;
SELECT MIN((((rt0.c2)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.lid END)) AND ((0.634924842384549)))) FROM vt0, rt0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)<<(CASE WHEN rt0.c2 THEN rt0.c1 END))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)<<(CASE WHEN rt0.c2 THEN rt0.c1 END))))) UNION ALL SELECT * FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)<<(CASE WHEN rt0.c2 THEN rt0.c1 END))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c1) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.lid, vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.lid, vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((CAST(vt0.c0 AS REAL))>=((vt0.lid IN ())))) GROUP BY vt0.lid, vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt0.lid, vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((CAST(vt0.c0 AS REAL))>=((vt0.lid IN ())))))) GROUP BY vt0.lid, vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt0.lid, vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((((CAST(vt0.c0 AS REAL))>=((vt0.lid IN ())))) ISNULL)) GROUP BY vt0.lid, vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT vt0.lid, vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((TOTAL(COUNT(GROUP_CONCAT(MAX(COUNT(SUM(rt0.c0)))))))LIKE(rt0.c2))) IS FALSE) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((((TOTAL(COUNT(GROUP_CONCAT(MAX(COUNT(SUM(rt0.c0)))))))LIKE(rt0.c2))) IS FALSE))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((((TOTAL(COUNT(GROUP_CONCAT(MAX(COUNT(SUM(rt0.c0)))))))LIKE(rt0.c2))) IS FALSE)) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (0.6581794495947053) UNION ALL SELECT * FROM rt0 WHERE ((NOT (0.6581794495947053))) UNION ALL SELECT ALL * FROM rt0 WHERE (((0.6581794495947053) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((1191723645))<>((rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((NOT ((((1191723645))<>((rt0.c0)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((NOT ((((1191723645))!=((rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ('-140737119') GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ('-140737119'))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((('-140737119') ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL vt0.c1, rt0.c1, rt0.c2 FROM vt0 CROSS JOIN rt0 ON CASE WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.lid)) ELSE ((rt0.c2) BETWEEN (vt0.lid) AND (vt0.c0)) END GROUP BY vt0.c1, rt0.c1, rt0.c2;
SELECT ALL vt0.c1, rt0.c1, rt0.c2 FROM vt0 CROSS JOIN rt0 ON CASE WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.lid)) ELSE ((rt0.c2) BETWEEN (vt0.lid) AND (vt0.c0)) END GROUP BY vt0.c1, rt0.c1, rt0.c2 HAVING ((vt0.c0 COLLATE NOCASE)IS NOT(COUNT(MAX('')))) UNION ALL SELECT ALL vt0.c1, rt0.c1, rt0.c2 FROM vt0 CROSS JOIN rt0 ON CASE WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.lid)) ELSE ((rt0.c2) BETWEEN (vt0.lid) AND (vt0.c0)) END GROUP BY vt0.c1, rt0.c1, rt0.c2 HAVING (NOT (((vt0.c0 COLLATE NOCASE)IS NOT(COUNT(MAX('')))))) UNION ALL SELECT ALL vt0.c1, rt0.c1, rt0.c2 FROM vt0 CROSS JOIN rt0 ON CASE WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.lid)) ELSE ((rt0.c2) BETWEEN (vt0.lid) AND (vt0.c0)) END GROUP BY vt0.c1, rt0.c1, rt0.c2 HAVING ((((vt0.c0 COLLATE NOCASE)IS NOT(COUNT(MAX(''))))) ISNULL);
SELECT ALL SUM((HEX(vt0.c0) IN ())) FROM vt0;
SELECT rt0.c2, vt0.lid, rt0.c0, vt0.c0, vt0.c1, rt0.c1 FROM rt0, vt0;
SELECT rt0.c2, vt0.lid, rt0.c0, vt0.c0, vt0.c1, rt0.c1 FROM rt0, vt0 WHERE (((((vt0.c1)<<('1654066754')))+(CAST(rt0.c2 AS INTEGER)))) UNION ALL SELECT rt0.c2, vt0.lid, rt0.c0, vt0.c0, vt0.c1, rt0.c1 FROM rt0, vt0 WHERE ((NOT (((((vt0.c1)<<('1654066754')))+(CAST(rt0.c2 AS INTEGER)))))) UNION ALL SELECT ALL rt0.c2, vt0.lid, rt0.c0, vt0.c0, vt0.c1, rt0.c1 FROM rt0, vt0 WHERE (((((((vt0.c1)<<('1654066754')))+(CAST(rt0.c2 AS INTEGER)))) ISNULL));
SELECT rt0.c2, vt0.lid, rt0.c0, vt0.c0, vt0.c1, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE ((vt0.c1)GLOB(vt0.lid))  WHEN ((vt0.c1) BETWEEN (vt0.lid) AND (x'')) THEN 'Q佅' END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c1)GLOB(vt0.lid))  WHEN ((vt0.c1) BETWEEN (vt0.lid) AND (x'')) THEN 'Q佅' END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE ((vt0.c1)GLOB(vt0.lid))  WHEN ((vt0.c1) BETWEEN (vt0.lid) AND (x'')) THEN 'Q佅' END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.lid FROM rt0, vt0 GROUP BY vt0.lid;
SELECT vt0.lid FROM rt0 NOT INDEXED, vt0 WHERE ((((vt0.c0))>=((rt0.c1))) COLLATE RTRIM) GROUP BY vt0.lid UNION SELECT ALL vt0.lid FROM rt0, vt0 WHERE ((NOT ((((vt0.c0))>=((rt0.c1))) COLLATE RTRIM))) GROUP BY vt0.lid UNION SELECT vt0.lid FROM rt0, vt0 WHERE ((((((vt0.c0))>=((rt0.c1))) COLLATE RTRIM) ISNULL)) GROUP BY vt0.lid;
SELECT ALL vt0.lid FROM rt0, vt0 GROUP BY vt0.lid;
SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1;
SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING (((vt0.c1 IN ()))%(CASE WHEN GROUP_CONCAT(TOTAL(vt0.c0)) THEN vt0.lid WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.lid ELSE vt0.lid END)) UNION ALL SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING (NOT ((((vt0.c1 IN ()))%(CASE WHEN GROUP_CONCAT(TOTAL(vt0.c0)) THEN vt0.lid WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.lid ELSE vt0.lid END)))) UNION ALL SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING (((((vt0.c1 IN ()))%(CASE WHEN GROUP_CONCAT(TOTAL(vt0.c0)) THEN vt0.lid WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.lid ELSE vt0.lid END))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((x'83ec')OR((vt0.c0 IN ()))))AND(((-295468315)%(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((x'83ec')OR((vt0.c0 IN ()))))AND(((-295468315)%(vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((x'83ec')OR((vt0.c0 IN ()))))AND(((-295468315)%(vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.lid FROM vt0;
SELECT DISTINCT vt0.lid FROM vt0 WHERE ((vt0.c0 IN (CASE WHEN vt0.lid THEN vt0.c1 ELSE vt0.lid END))) UNION SELECT DISTINCT vt0.lid FROM vt0 WHERE ((NOT ((vt0.c0 IN (CASE WHEN vt0.lid THEN vt0.c1 ELSE vt0.lid END))))) UNION SELECT DISTINCT vt0.lid FROM vt0 WHERE ((((vt0.c0 IN (CASE WHEN vt0.lid THEN vt0.c1 ELSE vt0.lid END))) ISNULL));
SELECT DISTINCT vt0.lid FROM vt0;
SELECT ALL rt0.c1, rt0.c2, vt0.lid, rt0.c0, vt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON UNLIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1))) GROUP BY rt0.c1, rt0.c2, vt0.lid, rt0.c0, vt0.c1, vt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt0.lid, rt0.c0, vt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON UNLIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1))) WHERE (UNLIKELY(DISTINCT ((vt0.c0)>(rt0.c2)))) GROUP BY rt0.c1, rt0.c2, vt0.lid, rt0.c0, vt0.c1, vt0.c0 UNION SELECT rt0.c1, rt0.c2, vt0.lid, rt0.c0, vt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON UNLIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1))) WHERE ((NOT (UNLIKELY(DISTINCT ((vt0.c0)>(rt0.c2)))))) GROUP BY rt0.c1, rt0.c2, vt0.lid, rt0.c0, vt0.c1, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, vt0.lid, rt0.c0, vt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON UNLIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1))) WHERE (((UNLIKELY(DISTINCT ((vt0.c0)>(rt0.c2)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, vt0.lid, rt0.c0, vt0.c1, vt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt0.lid, rt0.c0, vt0.c1, vt0.c0 FROM rt0 CROSS JOIN vt0 ON UNLIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1))) GROUP BY rt0.c1, rt0.c2, vt0.lid, rt0.c0, vt0.c1, vt0.c0;
SELECT ALL vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY GROUP BY vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c2;
SELECT ALL vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY GROUP BY vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY GROUP BY vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY GROUP BY vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY GROUP BY vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c2;
SELECT ALL vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY GROUP BY vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY GROUP BY vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY GROUP BY vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY GROUP BY vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c2;
SELECT MIN(rt0.c0) FROM rt0, vt0;
SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0;
SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE (HEX((((NULL)) BETWEEN ((vt0.lid)) AND ((NULL))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE ((NOT (HEX((((NULL)) BETWEEN ((vt0.lid)) AND ((NULL))))))) UNION ALL SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0 WHERE (((HEX((((NULL)) BETWEEN ((vt0.lid)) AND ((NULL))))) ISNULL));
SELECT vt0.c1, vt0.c0, vt0.lid FROM vt0;
SELECT DISTINCT vt0.c1, rt0.c2, vt0.lid, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c1, rt0.c2, vt0.lid, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((rt0.c1) IS FALSE))&(((vt0.c1)<<(vt0.c0))))) UNION SELECT DISTINCT vt0.c1, rt0.c2, vt0.lid, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((((rt0.c1) IS FALSE))&(((vt0.c1)<<(vt0.c0))))))) UNION SELECT DISTINCT vt0.c1, rt0.c2, vt0.lid, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((((rt0.c1) IS FALSE))&(((vt0.c1)<<(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c2, vt0.lid, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0 WHERE (NULL) GROUP BY vt0.lid UNION SELECT ALL vt0.lid FROM vt0 WHERE ((NOT (NULL))) GROUP BY vt0.lid UNION SELECT vt0.lid FROM vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((TOTAL(MIN(rt0.c0)))>(MAX(AVG(COUNT(*))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((TOTAL(MIN(rt0.c0)))>(MAX(AVG(COUNT(*))))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((TOTAL(MIN(rt0.c0)))>(MAX(AVG(COUNT(*)))))) ISNULL);
SELECT ALL rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT))*(((rt0.c1)&(NULL))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS TEXT))*(((rt0.c1)&(NULL))))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((((CAST(rt0.c2 AS TEXT))*(((rt0.c1)&(NULL))))) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((0.69242954338678)|(rt0.c1))) NOT BETWEEN (rt0.c1) AND ((((rt0.c1, x'edd2', rt0.c1, rt0.c0, rt0.c0))>((rt0.c1, rt0.c0, rt0.c2, NULL, '')))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((0.69242954338678)|(rt0.c1))) NOT BETWEEN (rt0.c1) AND ((((rt0.c1, x'edd2', rt0.c1, rt0.c0, rt0.c0))>((rt0.c1, rt0.c0, rt0.c2, NULL, '')))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((0.69242954338678)|(rt0.c1))) NOT BETWEEN (rt0.c1) AND ((((rt0.c1, x'edd2', rt0.c1, rt0.c0, rt0.c0))>((rt0.c1, rt0.c0, rt0.c2, NULL, '')))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, vt0.c1, vt0.c0, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON rtreenode(((((vt0.c1)AND(rt0.c1)))OR(vt0.lid)), ((rt0.c1) NOT BETWEEN (vt0.c1) AND (0.6750868270568242))) GROUP BY rt0.c2, vt0.c1, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, vt0.c1, vt0.c0, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON rtreenode(((((vt0.c1)AND(rt0.c1)))OR(vt0.lid)), ((rt0.c1) NOT BETWEEN (vt0.c1) AND (0.6750868270568242))) WHERE (CAST(CAST(vt0.lid AS NUMERIC) AS BLOB)) GROUP BY rt0.c2, vt0.c1, vt0.c0, rt0.c1 UNION SELECT rt0.c2, vt0.c1, vt0.c0, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON rtreenode(((((vt0.c1)AND(rt0.c1)))OR(vt0.lid)), ((rt0.c1) NOT BETWEEN (vt0.c1) AND (0.6750868270568242))) WHERE ((NOT (CAST(CAST(vt0.lid AS NUMERIC) AS BLOB)))) GROUP BY rt0.c2, vt0.c1, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, vt0.c1, vt0.c0, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON rtreenode(((((vt0.c1)AND(rt0.c1)))OR(vt0.lid)), ((rt0.c1) NOT BETWEEN (vt0.c1) AND (0.6750868270568242))) WHERE (((CAST(CAST(vt0.lid AS NUMERIC) AS BLOB)) ISNULL)) GROUP BY rt0.c2, vt0.c1, vt0.c0, rt0.c1;
SELECT rt0.c2, vt0.c1, vt0.c0, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON rtreenode(((((vt0.c1)AND(rt0.c1)))OR(vt0.lid)), ((rt0.c1) NOT BETWEEN (vt0.c1) AND (0.6750868270568242))) GROUP BY rt0.c2, vt0.c1, vt0.c0, rt0.c1;
SELECT ALL vt0.lid, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt0 ON (NOT (rt0.c0)) COLLATE BINARY GROUP BY vt0.lid, rt0.c1, rt0.c2;
SELECT ALL vt0.lid, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt0 ON (NOT (rt0.c0)) COLLATE BINARY GROUP BY vt0.lid, rt0.c1, rt0.c2 HAVING 682488656 UNION ALL SELECT vt0.lid, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt0 ON (NOT (rt0.c0)) COLLATE BINARY GROUP BY vt0.lid, rt0.c1, rt0.c2 HAVING (NOT (682488656)) UNION ALL SELECT vt0.lid, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt0 ON (NOT (rt0.c0)) COLLATE BINARY GROUP BY vt0.lid, rt0.c1, rt0.c2 HAVING ((682488656) ISNULL);
SELECT ALL vt0.lid, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt0 ON (NOT (rt0.c0)) COLLATE BINARY GROUP BY vt0.lid, rt0.c1, rt0.c2;
SELECT ALL vt0.lid, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt0 ON (NOT (rt0.c0)) COLLATE BINARY GROUP BY vt0.lid, rt0.c1, rt0.c2 HAVING 682488656 UNION ALL SELECT vt0.lid, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt0 ON (NOT (rt0.c0)) COLLATE BINARY GROUP BY vt0.lid, rt0.c1, rt0.c2 HAVING (NOT (682488656)) UNION ALL SELECT vt0.lid, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt0 ON (NOT (rt0.c0)) COLLATE BINARY GROUP BY vt0.lid, rt0.c1, rt0.c2 HAVING ((682488656) ISNULL);
SELECT ALL vt0.lid, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt0 ON (NOT (rt0.c0)) COLLATE BINARY GROUP BY vt0.lid, rt0.c1, rt0.c2;
SELECT vt0.c1, rt0.c1, vt0.lid FROM vt0, rt0;
SELECT ALL vt0.c1, rt0.c1, vt0.lid FROM vt0, rt0 WHERE (((((rt0.c0)AND((((vt0.c1))<((rt0.c2))))))OR(x''))) UNION ALL SELECT vt0.c1, rt0.c1, vt0.lid FROM vt0, rt0 WHERE ((NOT (((((rt0.c0)AND((((vt0.c1))<((rt0.c2))))))OR(x''))))) UNION ALL SELECT ALL vt0.c1, rt0.c1, vt0.lid FROM vt0, rt0 WHERE (((((((rt0.c0)AND((((vt0.c1))<((rt0.c2))))))OR(x''))) ISNULL));
SELECT vt0.c1, rt0.c1, vt0.lid FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((vt0.c0) NOT NULL)))!=((((vt0.c1) ISNULL))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((((((vt0.c0) NOT NULL)))!=((((vt0.c1) ISNULL))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((((((vt0.c0) NOT NULL)))<>((((vt0.c1) ISNULL))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0 WHERE (((vt0.c1) BETWEEN ('tryyh>|') AND (vt0.c0)) COLLATE RTRIM) GROUP BY vt0.lid UNION SELECT vt0.lid FROM vt0 WHERE ((NOT (((vt0.c1) BETWEEN ('tryyh>|') AND (vt0.c0)) COLLATE RTRIM))) GROUP BY vt0.lid UNION SELECT vt0.lid FROM vt0 WHERE (((((vt0.c1) BETWEEN ('tryyh>|') AND (vt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0;
SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0 HAVING vt0.lid UNION ALL SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0 HAVING (NOT (vt0.lid)) UNION ALL SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0 HAVING ((vt0.lid) ISNULL);
SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0;
SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0 HAVING vt0.lid UNION ALL SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0 HAVING (NOT (vt0.lid)) UNION ALL SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0 HAVING ((vt0.lid) ISNULL);
SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((+ ((+ (rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((+ ((+ (rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE ((((+ ((+ (rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON '-552706337';
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON '-552706337' WHERE ((((vt0.lid IN ())) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c0) NOT BETWEEN (0.12505521782582552) AND (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON '-552706337' WHERE ((NOT ((((vt0.lid IN ())) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c0) NOT BETWEEN (0.12505521782582552) AND (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON '-552706337' WHERE ((((((vt0.lid IN ())) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c0) NOT BETWEEN (0.12505521782582552) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON '-552706337';
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) IS TRUE)) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) IS TRUE)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) IS TRUE)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c2, vt0.c1, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, vt0.c1, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c0, rt0.c1 HAVING json_array(LOWER(''), GROUP_CONCAT(TOTAL(MIN(vt0.lid))), MAX(MAX(-1387285886)), COUNT(rt0.c2)) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c0, rt0.c1 HAVING (NOT (json_array(LOWER(''), GROUP_CONCAT(TOTAL(MIN(vt0.lid))), MAX(MAX(-1387285886)), COUNT(rt0.c2)))) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c0, rt0.c1 HAVING ((json_array(LOWER(''), GROUP_CONCAT(TOTAL(MIN(vt0.lid))), MAX(MAX(-1387285886)), COUNT(rt0.c2))) ISNULL);
SELECT ALL MAX(((((vt0.c1) NOTNULL))>=(((vt0.c0) NOT NULL)))) FROM vt0 ORDER BY (CAST(vt0.c1 AS BLOB) IN (CASE vt0.lid  WHEN x'' THEN vt0.c0 END))  NULLS LAST, CASE WHEN (('2137525390')<<(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.lid END END, ((vt0.lid IN (vt0.c0)) IN ());
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(((x'') NOT NULL) AS BLOB)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(((x'') NOT NULL) AS BLOB)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(((x'') NOT NULL) AS BLOB)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (x'') UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0, rt0 WHERE ((((- (rt0.c2))) NOT NULL)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt0, rt0 WHERE ((NOT ((((- (rt0.c2))) NOT NULL)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt0, rt0 WHERE ((((((- (rt0.c2))) NOT NULL)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(CASE WHEN MAX(rt0.c0) THEN AVG(AVG(-2109285442)) ELSE COUNT(*) END) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(CASE WHEN MAX(rt0.c0) THEN AVG(AVG(-2109285442)) ELSE COUNT(*) END))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(CASE WHEN MAX(rt0.c0) THEN AVG(AVG(-2109285442)) ELSE COUNT(*) END)) ISNULL);
SELECT ALL rt0.c2, vt0.lid, vt0.c1, rt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c2, vt0.lid, vt0.c1, rt0.c0 FROM vt0, rt0 WHERE (rt0.c0) UNION ALL SELECT rt0.c2, vt0.lid, vt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT rt0.c2, vt0.lid, vt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL rt0.c2, vt0.lid, vt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ('妇l䞿') UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ('妇l䞿'))) UNION SELECT DISTINCT * FROM vt0 WHERE ((('妇l䞿') ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((((rt0.c0))=((rt0.c0))))>>(CASE WHEN rt0.c1 THEN rt0.c2 END))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c0))=((rt0.c0))))>>(CASE WHEN rt0.c1 THEN rt0.c2 END))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((((((rt0.c0))==((rt0.c0))))>>(CASE WHEN rt0.c1 THEN rt0.c2 END))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING AVG(TOTAL(MIN(rt0.c2))) UNION ALL SELECT rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING (NOT (AVG(TOTAL(MIN(rt0.c2))))) UNION ALL SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1 HAVING ((AVG(TOTAL(MIN(rt0.c2)))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE '' END, CASE WHEN rt0.c1 THEN rt0.c0 END, (NOT (rt0.c1)), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END, (((rt0.c2))>=((rt0.c1))), rt0.c0, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))<>((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)), (((rt0.c2))=((rt0.c2))), ((((((((rt0.c0)AND(rt0.c0)))AND(-2039677886)))OR(rt0.c2)))OR(rt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND ('-1033783412')), rt0.c2, ((((rt0.c2)OR(rt0.c2)))AND('Jl')), rt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE '' END, CASE WHEN rt0.c1 THEN rt0.c0 END, (NOT (rt0.c1)), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END, (((rt0.c2))>=((rt0.c1))), rt0.c0, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))<>((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)), (((rt0.c2))=((rt0.c2))), ((((((((rt0.c0)AND(rt0.c0)))AND(-2039677886)))OR(rt0.c2)))OR(rt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND ('-1033783412')), rt0.c2, ((((rt0.c2)OR(rt0.c2)))AND('Jl')), rt0.c2)))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE '' END, CASE WHEN rt0.c1 THEN rt0.c0 END, (NOT (rt0.c1)), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END, (((rt0.c2))>=((rt0.c1))), rt0.c0, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))!=((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)), (((rt0.c2))=((rt0.c2))), ((((((((rt0.c0)AND(rt0.c0)))AND(-2039677886)))OR(rt0.c2)))OR(rt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND ('-1033783412')), rt0.c2, ((((rt0.c2)OR(rt0.c2)))AND('Jl')), rt0.c2)))) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((rt0.c0, vt0.c0, rt0.c1))<>((rt0.c1, rt0.c0, vt0.c1))), (rt0.c0 IN ()), ((rt0.c1)OR(rt0.c2))))<((vt0.c0 COLLATE BINARY, ((rt0.c2)GLOB(vt0.c0)), CAST(vt0.lid AS INTEGER))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((((rt0.c0, vt0.c0, rt0.c1))<>((rt0.c1, rt0.c0, vt0.c1))), (rt0.c0 IN ()), ((rt0.c1)OR(rt0.c2))))<((vt0.c0 COLLATE BINARY, ((rt0.c2)GLOB(vt0.c0)), CAST(vt0.lid AS INTEGER))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((((rt0.c0, vt0.c0, rt0.c1))!=((rt0.c1, rt0.c0, vt0.c1))), (rt0.c0 IN ()), ((rt0.c1)OR(rt0.c2))))<((vt0.c0 COLLATE BINARY, ((rt0.c2)GLOB(vt0.c0)), CAST(vt0.lid AS INTEGER))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT vt0.lid, rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT ALL vt0.lid, rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((CAST(vt0.lid AS TEXT))IS((- (rt0.c1))))) GROUP BY vt0.lid, rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0 UNION SELECT ALL vt0.lid, rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((CAST(vt0.lid AS TEXT))IS((- (rt0.c1))))))) GROUP BY vt0.lid, rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0 UNION SELECT vt0.lid, rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((((CAST(vt0.lid AS TEXT))IS((- (rt0.c1))))) ISNULL)) GROUP BY vt0.lid, rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT vt0.lid, rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0;
SELECT ALL rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((rt0.c0)*(vt0.lid)) COLLATE NOCASE GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((rt0.c0)*(vt0.lid)) COLLATE NOCASE GROUP BY rt0.c1 HAVING SUM(GROUP_CONCAT(AVG(vt0.lid))) UNION ALL SELECT ALL rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((rt0.c0)*(vt0.lid)) COLLATE NOCASE GROUP BY rt0.c1 HAVING (NOT (SUM(GROUP_CONCAT(AVG(vt0.lid))))) UNION ALL SELECT ALL rt0.c1 FROM vt0 CROSS JOIN rt0 ON ((rt0.c0)*(vt0.lid)) COLLATE NOCASE GROUP BY rt0.c1 HAVING ((SUM(GROUP_CONCAT(AVG(vt0.lid)))) ISNULL);
SELECT rt0.c2, vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c2, vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c0 FROM rt0, vt0 WHERE (x'') UNION ALL SELECT ALL rt0.c2, vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((NOT (x''))) UNION ALL SELECT rt0.c2, vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c0 FROM rt0, vt0 WHERE (((x'') ISNULL));
SELECT rt0.c2, vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1 IN ())) NOTNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c1 IN ())) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1 IN ())) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR('314999088'))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END) AND ((rt0.c0 IN (rt0.c1))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR('314999088'))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END) AND ((rt0.c0 IN (rt0.c1))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR('314999088'))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END) AND ((rt0.c0 IN (rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt0.lid FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.lid;
SELECT ALL vt0.lid FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.lid HAVING MAX(GROUP_CONCAT(GROUP_CONCAT(vt0.lid))) UNION ALL SELECT vt0.lid FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.lid HAVING (NOT (MAX(GROUP_CONCAT(GROUP_CONCAT(vt0.lid))))) UNION ALL SELECT ALL vt0.lid FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.lid HAVING ((MAX(GROUP_CONCAT(GROUP_CONCAT(vt0.lid)))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((vt0.lid)>>(vt0.c0)) IN ())) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.lid)>>(vt0.c0)) IN ())))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((vt0.lid)>>(vt0.c0)) IN ())) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (UPPER(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (UPPER(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((UPPER(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT vt0.lid, rt0.c0 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c0;
SELECT ALL vt0.lid, rt0.c0 FROM vt0, rt0 WHERE (((UPPER(vt0.lid)) BETWEEN ((+ (vt0.c1))) AND ((((0xffffffff8effcf64)) BETWEEN ((vt0.c1)) AND ((0.2899484657242548)))))) GROUP BY vt0.lid, rt0.c0 UNION SELECT vt0.lid, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((UPPER(vt0.lid)) BETWEEN ((+ (vt0.c1))) AND ((((0xffffffff8effcf64)) BETWEEN ((vt0.c1)) AND ((0.2899484657242548)))))))) GROUP BY vt0.lid, rt0.c0 UNION SELECT vt0.lid, rt0.c0 FROM vt0, rt0 WHERE (((((UPPER(vt0.lid)) BETWEEN ((+ (vt0.c1))) AND ((((0Xffffffff8effcf64)) BETWEEN ((vt0.c1)) AND ((0.2899484657242548)))))) ISNULL)) GROUP BY vt0.lid, rt0.c0;
SELECT vt0.lid, rt0.c0 FROM vt0, rt0 GROUP BY vt0.lid, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((CASE COUNT(*)  WHEN rt0.c2 THEN rt0.c2 WHEN AVG(GROUP_CONCAT(rt0.c2)) THEN MIN(AVG(rt0.c0)) WHEN AVG(TOTAL(COUNT(SUM(rt0.c2)))) THEN COUNT(*) END)=(GROUP_CONCAT(rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((CASE COUNT(*)  WHEN rt0.c2 THEN rt0.c2 WHEN AVG(GROUP_CONCAT(rt0.c2)) THEN MIN(AVG(rt0.c0)) WHEN AVG(TOTAL(COUNT(SUM(rt0.c2)))) THEN COUNT(*) END)=(GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((CASE COUNT(*)  WHEN rt0.c2 THEN rt0.c2 WHEN AVG(GROUP_CONCAT(rt0.c2)) THEN MIN(AVG(rt0.c0)) WHEN AVG(TOTAL(COUNT(SUM(rt0.c2)))) THEN COUNT(*) END)==(GROUP_CONCAT(rt0.c0)))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c1 COLLATE BINARY)>>((rt0.c0 IN ())))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((vt0.c1 COLLATE BINARY)>>((rt0.c0 IN ())))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c1 COLLATE BINARY)>>((rt0.c0 IN ())))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c1, vt0.lid, rt0.c1, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c1, vt0.lid, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((((((((((((0.05260102522270549)AND((rt0.c0 IN ()))))AND((((vt0.c1))<((rt0.c2))))))OR(CAST(rt0.c0 AS INTEGER))))AND((rt0.c1 IN (rt0.c1)))))AND('䢿%')))AND(((rt0.c0)>(vt0.lid))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt0.c1, vt0.lid, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((((((((((((0.05260102522270549)AND((rt0.c0 IN ()))))AND((((vt0.c1))<((rt0.c2))))))OR(CAST(rt0.c0 AS INTEGER))))AND((rt0.c1 IN (rt0.c1)))))AND('䢿%')))AND(((rt0.c0)>(vt0.lid))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt0.c1, vt0.lid, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((((((((((((((0.05260102522270549)AND((rt0.c0 IN ()))))AND((((vt0.c1))<((rt0.c2))))))OR(CAST(rt0.c0 AS INTEGER))))AND((rt0.c1 IN (rt0.c1)))))AND('䢿%')))AND(((rt0.c0)>(vt0.lid))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, vt0.c1, vt0.lid, rt0.c1, vt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (json_type(LIKELY(rt0.c2))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (json_type(LIKELY(rt0.c2))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((json_type(LIKELY(rt0.c2))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1;
SELECT ALL vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING COUNT(((((vt0.c1)AND(vt0.lid)))OR(COUNT(vt0.c0)))) UNION ALL SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING (NOT (COUNT(((((vt0.c1)AND(vt0.lid)))OR(COUNT(vt0.c0)))))) UNION ALL SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING ((COUNT(((((vt0.c1)AND(vt0.lid)))OR(COUNT(vt0.c0))))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE ((((- (vt0.c1)))>((((vt0.c0, rt0.c1, 0.23956965824091225, vt0.c1, vt0.lid))>=(('2029043091', rt0.c2, NULL, rt0.c2, rt0.c2)))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((((- (vt0.c1)))>((((vt0.c0, rt0.c1, 0.23956965824091225, vt0.c1, vt0.lid))>=(('2029043091', rt0.c2, NULL, rt0.c2, rt0.c2)))))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((((((- (vt0.c1)))>((((vt0.c0, rt0.c1, 0.23956965824091225, vt0.c1, vt0.lid))>=(('2029043091', rt0.c2, NULL, rt0.c2, rt0.c2)))))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (x'fa57') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (x'fa57'))) UNION SELECT DISTINCT * FROM rt0 WHERE (((x'fa57') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.lid FROM rt0, vt0 GROUP BY vt0.lid;
SELECT ALL vt0.lid FROM rt0 NOT INDEXED, vt0 WHERE ((NOT (rt0.c1))) GROUP BY vt0.lid UNION SELECT vt0.lid FROM rt0, vt0 WHERE ((NOT ((NOT (rt0.c1))))) GROUP BY vt0.lid UNION SELECT ALL vt0.lid FROM rt0, vt0 WHERE ((((NOT (rt0.c1))) ISNULL)) GROUP BY vt0.lid;
SELECT vt0.lid FROM rt0, vt0 GROUP BY vt0.lid;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c0, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0, vt0.lid;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c0, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0, vt0.lid HAVING (NOT ((((SUM(vt0.lid)))>=((AVG(vt0.c1)))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, vt0.c0, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0, vt0.lid HAVING (NOT ((NOT ((((SUM(vt0.lid)))>=((AVG(vt0.c1)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c0, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0, vt0.lid HAVING (((NOT ((((SUM(vt0.lid)))>=((AVG(vt0.c1))))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c0, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0, vt0.lid;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c0, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0, vt0.lid HAVING (NOT ((((SUM(vt0.lid)))>=((AVG(vt0.c1)))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, vt0.c0, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0, vt0.lid HAVING (NOT ((NOT ((((SUM(vt0.lid)))>=((AVG(vt0.c1)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c0, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0, vt0.lid HAVING (((NOT ((((SUM(vt0.lid)))>=((AVG(vt0.c1))))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c0, vt0.lid FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c0, vt0.lid;
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (CASE WHEN '0.6395147161237812' THEN (('374267057') NOT BETWEEN (rt0.c0) AND (x'')) WHEN (+ (rt0.c0)) THEN rt0.c2 WHEN ((x'')<(rt0.c1)) THEN (~ (rt0.c2)) END) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN '0.6395147161237812' THEN (('374267057') NOT BETWEEN (rt0.c0) AND (x'')) WHEN (+ (rt0.c0)) THEN rt0.c2 WHEN ((x'')<(rt0.c1)) THEN (~ (rt0.c2)) END))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((CASE WHEN '0.6395147161237812' THEN (('374267057') NOT BETWEEN (rt0.c0) AND (x'')) WHEN (+ (rt0.c0)) THEN rt0.c2 WHEN ((x'')<(rt0.c1)) THEN (~ (rt0.c2)) END) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT vt0.c1 FROM vt0, rt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, rt0 WHERE (x'532562391b5f') GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0, rt0 WHERE ((NOT (x'532562391b5f'))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, rt0 WHERE (((x'532562391b5f') ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, rt0 GROUP BY vt0.c1;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (~ (GROUP_CONCAT(rt0.c2))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((~ (GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((~ (GROUP_CONCAT(rt0.c2)))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (~ (GROUP_CONCAT(rt0.c2))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((~ (GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((~ (GROUP_CONCAT(rt0.c2)))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT SUM(CASE WHEN UNICODE(rt0.c1) THEN ((rt0.c2) NOTNULL) ELSE ((rt0.c2) NOTNULL) END) FROM rt0, vt0;
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (CASE ((vt0.c1) BETWEEN (rt0.c0) AND (vt0.c1))  WHEN CASE vt0.c0  WHEN vt0.lid THEN vt0.c1 ELSE rt0.c1 END THEN vt0.c1 COLLATE BINARY END) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (CASE ((vt0.c1) BETWEEN (rt0.c0) AND (vt0.c1))  WHEN CASE vt0.c0  WHEN vt0.lid THEN vt0.c1 ELSE rt0.c1 END THEN vt0.c1 COLLATE BINARY END))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((CASE ((vt0.c1) BETWEEN (rt0.c0) AND (vt0.c1))  WHEN CASE vt0.c0  WHEN vt0.lid THEN vt0.c1 ELSE rt0.c1 END THEN vt0.c1 COLLATE BINARY END) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (NULL) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt0, rt0;
SELECT ALL vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.lid FROM vt0, rt0 GROUP BY vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.lid;
SELECT ALL vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.lid FROM vt0, rt0 WHERE ((x'' IN ())) GROUP BY vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.lid UNION SELECT vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.lid FROM vt0, rt0 WHERE ((NOT ((x'' IN ())))) GROUP BY vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.lid UNION SELECT vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.lid FROM vt0, rt0 WHERE ((((x'' IN ())) ISNULL)) GROUP BY vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.lid;
SELECT ALL vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.lid FROM vt0, rt0 GROUP BY vt0.c1, rt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.lid;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MAX(TOTAL(MIN(SUM(rt0.c0)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MAX(TOTAL(MIN(SUM(rt0.c0)))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MAX(TOTAL(MIN(SUM(rt0.c0))))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE ('') UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (''))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((('') ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (x'806ef197') UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (x'806ef197'))) UNION SELECT DISTINCT * FROM vt0 WHERE (((x'806ef197') ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((0.16214299930974807 IN ())) GROUP BY vt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c2 UNION SELECT vt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT ((0.16214299930974807 IN ())))) GROUP BY vt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c2 UNION SELECT ALL vt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((((0.16214299930974807 IN ())) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0, vt0.lid, rt0.c0, rt0.c2;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING MIN(SUM(MIN(TOTAL(COUNT(GROUP_CONCAT(vt0.c1))))) COLLATE BINARY) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (MIN(SUM(MIN(TOTAL(COUNT(GROUP_CONCAT(vt0.c1))))) COLLATE BINARY))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((MIN(SUM(MIN(TOTAL(COUNT(GROUP_CONCAT(vt0.c1))))) COLLATE BINARY)) ISNULL);
SELECT ALL MAX(((((vt0.lid) NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (COALESCE(vt0.c0, vt0.c0, vt0.c0, x'')) AND ((((vt0.c0)) BETWEEN ((vt0.lid)) AND ((vt0.c1)))))) FROM vt0;
SELECT vt0.c0, rt0.c2, vt0.c1, rt0.c1, vt0.lid, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN '701921404' THEN vt0.c1 END) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (((vt0.c0) IS FALSE)));
SELECT ALL vt0.c0, rt0.c2, vt0.c1, rt0.c1, vt0.lid, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN '701921404' THEN vt0.c1 END) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (((vt0.c0) IS FALSE))) WHERE (((rt0.c1) NOT BETWEEN (((rt0.c0)<(vt0.c1))) AND (vt0.lid))) UNION ALL SELECT vt0.c0, rt0.c2, vt0.c1, rt0.c1, vt0.lid, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN '701921404' THEN vt0.c1 END) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (((vt0.c0) IS FALSE))) WHERE ((NOT (((rt0.c1) NOT BETWEEN (((rt0.c0)<(vt0.c1))) AND (vt0.lid))))) UNION ALL SELECT ALL vt0.c0, rt0.c2, vt0.c1, rt0.c1, vt0.lid, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN '701921404' THEN vt0.c1 END) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (((vt0.c0) IS FALSE))) WHERE (((((rt0.c1) NOT BETWEEN (((rt0.c0)<(vt0.c1))) AND (vt0.lid))) ISNULL));
SELECT vt0.c0, rt0.c2, vt0.c1, rt0.c1, vt0.lid, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN '701921404' THEN vt0.c1 END) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (((vt0.c0) IS FALSE)));
SELECT DISTINCT vt0.lid, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT vt0.lid, rt0.c2 FROM rt0, vt0 WHERE (CAST(((vt0.lid) NOTNULL) AS REAL)) UNION SELECT DISTINCT vt0.lid, rt0.c2 FROM rt0, vt0 WHERE ((NOT (CAST(((vt0.lid) NOTNULL) AS REAL)))) UNION SELECT DISTINCT vt0.lid, rt0.c2 FROM rt0, vt0 WHERE (((CAST(((vt0.lid) NOTNULL) AS REAL)) ISNULL));
SELECT DISTINCT vt0.lid, rt0.c2 FROM rt0, vt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c2 IN (rt0.c1))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c0))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2 IN (rt0.c1))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c0))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c1))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1;
SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING COUNT(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 0xffffffffe599228a WHEN vt0.lid THEN vt0.c1 END) UNION ALL SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING (NOT (COUNT(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 0xffffffffe599228a WHEN vt0.lid THEN vt0.c1 END))) UNION ALL SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING ((COUNT(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 0Xffffffffe599228a WHEN vt0.lid THEN vt0.c1 END)) ISNULL);
SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1;
SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING COUNT(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 0xffffffffe599228a WHEN vt0.lid THEN vt0.c1 END) UNION ALL SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING (NOT (COUNT(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 0xffffffffe599228a WHEN vt0.lid THEN vt0.c1 END))) UNION ALL SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1 HAVING ((COUNT(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 0Xffffffffe599228a WHEN vt0.lid THEN vt0.c1 END)) ISNULL);
SELECT vt0.c0, vt0.lid, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.lid, vt0.c1;
SELECT ALL rt0.c0, rt0.c2, vt0.c1, rt0.c1, vt0.lid FROM vt0, rt0;
SELECT ALL rt0.c0, rt0.c2, vt0.c1, rt0.c1, vt0.lid FROM vt0, rt0 WHERE ((~ (CAST('-1805223590' AS NUMERIC)))) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c1, rt0.c1, vt0.lid FROM vt0, rt0 WHERE ((NOT ((~ (CAST('-1805223590' AS NUMERIC)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt0.c1, rt0.c1, vt0.lid FROM vt0, rt0 WHERE ((((~ (CAST('-1805223590' AS NUMERIC)))) ISNULL));
SELECT ALL rt0.c0, rt0.c2, vt0.c1, rt0.c1, vt0.lid FROM vt0, rt0;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, vt0.lid FROM vt0 LEFT OUTER JOIN rt0 ON (((((((((rt0.c1 IN (vt0.c1)))OR(x'')))AND((- (rt0.c1)))))OR(((((rt0.c2)AND(x'be0f')))AND(rt0.c1)))))OR(((vt0.c0)||(rt0.c0))));
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, vt0.lid FROM vt0 LEFT OUTER JOIN rt0 ON (((((((((rt0.c1 IN (vt0.c1)))OR(x'')))AND((- (rt0.c1)))))OR(((((rt0.c2)AND(x'be0f')))AND(rt0.c1)))))OR(((vt0.c0)||(rt0.c0)))) WHERE (((vt0.c1 COLLATE BINARY)>(CAST(vt0.c1 AS TEXT)))) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, vt0.lid FROM vt0 LEFT OUTER JOIN rt0 ON (((((((((rt0.c1 IN (vt0.c1)))OR(x'')))AND((- (rt0.c1)))))OR(((((rt0.c2)AND(x'be0f')))AND(rt0.c1)))))OR(((vt0.c0)||(rt0.c0)))) WHERE ((NOT (((vt0.c1 COLLATE BINARY)>(CAST(vt0.c1 AS TEXT)))))) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, vt0.lid FROM vt0 LEFT OUTER JOIN rt0 ON (((((((((rt0.c1 IN (vt0.c1)))OR(x'')))AND((- (rt0.c1)))))OR(((((rt0.c2)AND(x'be0f')))AND(rt0.c1)))))OR(((vt0.c0)||(rt0.c0)))) WHERE (((((vt0.c1 COLLATE BINARY)>(CAST(vt0.c1 AS TEXT)))) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, vt0.lid FROM vt0 LEFT OUTER JOIN rt0 ON (((((((((rt0.c1 IN (vt0.c1)))OR(x'')))AND((- (rt0.c1)))))OR(((((rt0.c2)AND(x'be0f')))AND(rt0.c1)))))OR(((vt0.c0)||(rt0.c0))));
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (CASE (rt0.c0 IN ())  WHEN (rt0.c0 IN ()) THEN (rt0.c2 IN ('g*猽G\')) ELSE (((rt0.c1))>=((rt0.c0))) END) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (CASE (rt0.c0 IN ())  WHEN (rt0.c0 IN ()) THEN (rt0.c2 IN ('g*猽G\')) ELSE (((rt0.c1))>=((rt0.c0))) END))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((CASE (rt0.c0 IN ())  WHEN (rt0.c0 IN ()) THEN (rt0.c2 IN ('g*猽G\')) ELSE (((rt0.c1))>=((rt0.c0))) END) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid HAVING (((((TOTAL(vt0.lid))AND(vt0.c1)))OR(vt0.lid)) IN ()) UNION ALL SELECT vt0.lid FROM vt0 GROUP BY vt0.lid HAVING (NOT ((((((TOTAL(vt0.lid))AND(vt0.c1)))OR(vt0.lid)) IN ()))) UNION ALL SELECT vt0.lid FROM vt0 GROUP BY vt0.lid HAVING (((((((TOTAL(vt0.lid))AND(vt0.c1)))OR(vt0.lid)) IN ())) ISNULL);
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid HAVING (((((TOTAL(vt0.lid))AND(vt0.c1)))OR(vt0.lid)) IN ()) UNION ALL SELECT vt0.lid FROM vt0 GROUP BY vt0.lid HAVING (NOT ((((((TOTAL(vt0.lid))AND(vt0.c1)))OR(vt0.lid)) IN ()))) UNION ALL SELECT vt0.lid FROM vt0 GROUP BY vt0.lid HAVING (((((((TOTAL(vt0.lid))AND(vt0.c1)))OR(vt0.lid)) IN ())) ISNULL);
SELECT vt0.lid FROM vt0 GROUP BY vt0.lid;
SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE (MAX((~ (vt0.c1)), CASE WHEN vt0.lid THEN vt0.c0 ELSE vt0.c1 END)) UNION ALL SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE ((NOT (MAX((~ (vt0.c1)), CASE WHEN vt0.lid THEN vt0.c0 ELSE vt0.c1 END)))) UNION ALL SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 WHERE (((MAX((~ (vt0.c1)), CASE WHEN vt0.lid THEN vt0.c0 ELSE vt0.c1 END)) ISNULL));
SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c1, vt0.lid, rt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c1, vt0.lid, rt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0 WHERE (((((((((rt0.c0)AND(((rt0.c1)|(rt0.c2)))))OR(json_valid(rt0.c1))))OR((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND (('-278562650'))))))AND(((vt0.lid)&(vt0.c1))))) UNION SELECT DISTINCT rt0.c1, vt0.lid, rt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (((((((((rt0.c0)AND(((rt0.c1)|(rt0.c2)))))OR(json_valid(rt0.c1))))OR((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND (('-278562650'))))))AND(((vt0.lid)&(vt0.c1))))))) UNION SELECT DISTINCT rt0.c1, vt0.lid, rt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0 WHERE (((((((((((rt0.c0)AND(((rt0.c1)|(rt0.c2)))))OR(json_valid(rt0.c1))))OR((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND (('-278562650'))))))AND(((vt0.lid)&(vt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1, vt0.lid, rt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0;
SELECT ALL vt0.c0, vt0.lid, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, vt0.lid, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt0.c0, vt0.lid, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (rt0.c1) GROUP BY vt0.c0, vt0.lid, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL vt0.c0, vt0.lid, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (rt0.c1))) GROUP BY vt0.c0, vt0.lid, rt0.c1, rt0.c0, rt0.c2 UNION SELECT vt0.c0, vt0.lid, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((rt0.c1) ISNULL)) GROUP BY vt0.c0, vt0.lid, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt0.c0, vt0.lid, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, vt0.lid, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING SUM(((MAX(vt0.c0))&(rt0.c1))) UNION ALL SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(((MAX(vt0.c0))&(rt0.c1))))) UNION ALL SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING ((SUM(((MAX(vt0.c0))&(rt0.c1)))) ISNULL);
SELECT SUM(((rt0.c2) NOT BETWEEN (0.33028168955216586) AND (rt0.c2)) COLLATE BINARY) FROM rt0 ORDER BY rt0.c0 DESC;
SELECT ALL rt0.c2, vt0.c1, vt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c2, vt0.c1, vt0.c0 FROM vt0, rt0 WHERE (CAST(((rt0.c1) IS FALSE) AS INTEGER)) UNION ALL SELECT rt0.c2, vt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST(((rt0.c1) IS FALSE) AS INTEGER)))) UNION ALL SELECT rt0.c2, vt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((CAST(((rt0.c1) IS FALSE) AS INTEGER)) ISNULL));
SELECT ALL rt0.c2, vt0.c1, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (NULLIF(vt0.c0, rt0.c2) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (NULLIF(vt0.c0, rt0.c2) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((NULLIF(vt0.c0, rt0.c2) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((NOT (rt0.c2))) NOT BETWEEN (((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c1))) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((NOT (rt0.c2))) NOT BETWEEN (((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c1))) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((NOT (rt0.c2))) NOT BETWEEN (((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c1))) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT vt0.c1, rt0.c1, vt0.c0, vt0.lid FROM vt0 LEFT OUTER JOIN rt0 ON (((((vt0.c0, rt0.c1, vt0.c1))==((rt0.c0, vt0.c1, vt0.lid))))<>(((vt0.c0)==(rt0.c2)))) GROUP BY vt0.c1, rt0.c1, vt0.c0, vt0.lid;
SELECT ALL vt0.c1, rt0.c1, vt0.c0, vt0.lid FROM vt0 LEFT OUTER JOIN rt0 ON (((((vt0.c0, rt0.c1, vt0.c1))==((rt0.c0, vt0.c1, vt0.lid))))<>(((vt0.c0)==(rt0.c2)))) GROUP BY vt0.c1, rt0.c1, vt0.c0, vt0.lid HAVING ((((CASE WHEN vt0.c0 THEN COUNT(*) ELSE MIN(GROUP_CONCAT(TOTAL(SUM(vt0.lid)))) END)OR(MAX(NULL))))OR(COUNT(vt0.c1))) UNION ALL SELECT ALL vt0.c1, rt0.c1, vt0.c0, vt0.lid FROM vt0 LEFT OUTER JOIN rt0 ON (((((vt0.c0, rt0.c1, vt0.c1))=((rt0.c0, vt0.c1, vt0.lid))))!=(((vt0.c0)==(rt0.c2)))) GROUP BY vt0.c1, rt0.c1, vt0.c0, vt0.lid HAVING (NOT (((((CASE WHEN vt0.c0 THEN COUNT(*) ELSE MIN(GROUP_CONCAT(TOTAL(SUM(vt0.lid)))) END)OR(MAX(NULL))))OR(COUNT(vt0.c1))))) UNION ALL SELECT ALL vt0.c1, rt0.c1, vt0.c0, vt0.lid FROM vt0 LEFT OUTER JOIN rt0 ON (((((vt0.c0, rt0.c1, vt0.c1))=((rt0.c0, vt0.c1, vt0.lid))))!=(((vt0.c0)=(rt0.c2)))) GROUP BY vt0.c1, rt0.c1, vt0.c0, vt0.lid HAVING ((((((CASE WHEN vt0.c0 THEN COUNT(*) ELSE MIN(GROUP_CONCAT(TOTAL(SUM(vt0.lid)))) END)OR(MAX(NULL))))OR(COUNT(vt0.c1)))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)|(((rt0.c2) ISNULL)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE NOCASE)|(((rt0.c2) ISNULL)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0 COLLATE NOCASE)|(((rt0.c2) ISNULL)))) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT vt0.lid, rt0.c2, rt0.c0, vt0.c1, rt0.c1, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.lid, rt0.c2, rt0.c0, vt0.c1, rt0.c1, vt0.c0 FROM vt0 NOT INDEXED, rt0 WHERE (rt0.c0) UNION SELECT DISTINCT vt0.lid, rt0.c2, rt0.c0, vt0.c1, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT vt0.lid, rt0.c2, rt0.c0, vt0.c1, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT vt0.lid, rt0.c2, rt0.c0, vt0.c1, rt0.c1, vt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (ABS(DISTINCT ((rt0.c0)*(rt0.c0)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (ABS(DISTINCT ((rt0.c0)*(rt0.c0)))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((ABS(DISTINCT ((rt0.c0)*(rt0.c0)))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(SUM(TOTAL(SUM(TOTAL(rt0.c1))))))*(COUNT(GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((GROUP_CONCAT(SUM(TOTAL(SUM(TOTAL(rt0.c1))))))*(COUNT(GROUP_CONCAT(rt0.c2)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((GROUP_CONCAT(SUM(TOTAL(SUM(TOTAL(rt0.c1))))))*(COUNT(GROUP_CONCAT(rt0.c2))))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE ((((rt0.c2, rt0.c0, vt0.c0)) NOT BETWEEN (('Gl!?', ((rt0.c1) BETWEEN (NULL) AND (rt0.c1)), ((0.7931943357034267)|(NULL)))) AND (('){纭|qs-r', ((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)), (((vt0.c1))<((rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT ((((rt0.c2, rt0.c0, vt0.c0)) NOT BETWEEN (('Gl!?', ((rt0.c1) BETWEEN (NULL) AND (rt0.c1)), ((0.7931943357034267)|(NULL)))) AND (('){纭|qs-r', ((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)), (((vt0.c1))<((rt0.c1))))))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((((((rt0.c2, rt0.c0, vt0.c0)) NOT BETWEEN (('Gl!?', ((rt0.c1) BETWEEN (NULL) AND (rt0.c1)), ((0.7931943357034267)|(NULL)))) AND (('){纭|qs-r', ((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)), (((vt0.c1))<((rt0.c1))))))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CAST(((rt0.c2)OR(rt0.c1)) AS BLOB)) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST(((rt0.c2)OR(rt0.c1)) AS BLOB)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(((rt0.c2)OR(rt0.c1)) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL vt0.c0, rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c0, vt0.c1;
SELECT vt0.c0, rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0 WHERE (CASE NULL  WHEN (vt0.c1 IN ()) THEN (0.08673440471177862 IN ()) WHEN 'M癰EmV楆T)I' THEN ABS(DISTINCT rt0.c2) WHEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND('O{')))AND(rt0.c1)) THEN (((x'53be'))<((rt0.c0))) END) GROUP BY vt0.c0, rt0.c1, rt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((NOT (CASE NULL  WHEN (vt0.c1 IN ()) THEN (0.08673440471177862 IN ()) WHEN 'M癰EmV楆T)I' THEN ABS(DISTINCT rt0.c2) WHEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND('O{')))AND(rt0.c1)) THEN (((x'53be'))<((rt0.c0))) END))) GROUP BY vt0.c0, rt0.c1, rt0.c0, vt0.c1 UNION SELECT vt0.c0, rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0 WHERE (((CASE NULL  WHEN (vt0.c1 IN ()) THEN (0.08673440471177862 IN ()) WHEN 'M癰EmV楆T)I' THEN ABS(DISTINCT rt0.c2) WHEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND('O{')))AND(rt0.c1)) THEN (((x'53be'))<((rt0.c0))) END) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c0, vt0.c1;
SELECT ALL vt0.c0, rt0.c1, rt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c0, vt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1, vt0.lid, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.lid, vt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.lid, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.lid, vt0.c0 HAVING (((((rt0.c2) NOTNULL), ((COUNT(rt0.c0))<(rt0.c2)), ((SUM(COUNT(vt0.lid))) NOT BETWEEN (SUM(vt0.lid)) AND (rt0.c0))))<=((TOTAL(TOTAL(vt0.c0)), MAX('505967332'), SUM(NULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.lid, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.lid, vt0.c0 HAVING (NOT ((((((rt0.c2) NOTNULL), ((COUNT(rt0.c0))<(rt0.c2)), ((SUM(COUNT(vt0.lid))) NOT BETWEEN (SUM(vt0.lid)) AND (rt0.c0))))<=((TOTAL(TOTAL(vt0.c0)), MAX('505967332'), SUM(NULL)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.lid, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.lid, vt0.c0 HAVING (((((((rt0.c2) NOTNULL), ((COUNT(rt0.c0))<(rt0.c2)), ((SUM(COUNT(vt0.lid))) NOT BETWEEN (SUM(vt0.lid)) AND (rt0.c0))))<=((TOTAL(TOTAL(vt0.c0)), MAX('505967332'), SUM(NULL))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((NULL COLLATE BINARY) IS TRUE)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((NULL COLLATE BINARY) IS TRUE)))) UNION ALL SELECT * FROM vt0 WHERE (((((NULL COLLATE BINARY) IS TRUE)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((((((((x'', rt0.c2, vt0.c1))>(('-641528387', vt0.c1, rt0.c1))))AND(rt0.c0 COLLATE BINARY)))AND(UNLIKELY(rt0.c0))))OR(vt0.lid COLLATE NOCASE)))OR(vt0.lid COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((((((((((((x'', rt0.c2, vt0.c1))>(('-641528387', vt0.c1, rt0.c1))))AND(rt0.c0 COLLATE BINARY)))AND(UNLIKELY(rt0.c0))))OR(vt0.lid COLLATE NOCASE)))OR(vt0.lid COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((((((((((x'', rt0.c2, vt0.c1))>(('-641528387', vt0.c1, rt0.c1))))AND(rt0.c0 COLLATE BINARY)))AND(UNLIKELY(rt0.c0))))OR(vt0.lid COLLATE NOCASE)))OR(vt0.lid COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT vt0.lid, rt0.c0, rt0.c2, vt0.c1, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY vt0.lid, rt0.c0, rt0.c2, vt0.c1, rt0.c1, vt0.c0;
SELECT vt0.lid, rt0.c0, rt0.c2, vt0.c1, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (LOWER(rt0.c0)) GROUP BY vt0.lid, rt0.c0, rt0.c2, vt0.c1, rt0.c1, vt0.c0 UNION SELECT ALL vt0.lid, rt0.c0, rt0.c2, vt0.c1, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT (LOWER(rt0.c0)))) GROUP BY vt0.lid, rt0.c0, rt0.c2, vt0.c1, rt0.c1, vt0.c0 UNION SELECT vt0.lid, rt0.c0, rt0.c2, vt0.c1, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((LOWER(rt0.c0)) ISNULL)) GROUP BY vt0.lid, rt0.c0, rt0.c2, vt0.c1, rt0.c1, vt0.c0;
SELECT vt0.lid, rt0.c0, rt0.c2, vt0.c1, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY vt0.lid, rt0.c0, rt0.c2, vt0.c1, rt0.c1, vt0.c0;
SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1;
SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1 HAVING ((vt0.lid COLLATE RTRIM) ISNULL) UNION ALL SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1 HAVING (NOT (((vt0.lid COLLATE RTRIM) ISNULL))) UNION ALL SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1 HAVING ((((vt0.lid COLLATE RTRIM) ISNULL)) ISNULL);
SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1;
SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1 HAVING ((vt0.lid COLLATE RTRIM) ISNULL) UNION ALL SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1 HAVING (NOT (((vt0.lid COLLATE RTRIM) ISNULL))) UNION ALL SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1 HAVING ((((vt0.lid COLLATE RTRIM) ISNULL)) ISNULL);
SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1;
SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c1, vt0.lid FROM vt0, rt0;
SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c1, vt0.lid FROM vt0, rt0 WHERE (HEX(DISTINCT rt0.c0 COLLATE BINARY)) UNION ALL SELECT rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c1, vt0.lid FROM vt0, rt0 WHERE ((NOT (HEX(DISTINCT rt0.c0 COLLATE BINARY)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c1, vt0.lid FROM vt0, rt0 WHERE (((HEX(DISTINCT rt0.c0 COLLATE BINARY)) ISNULL));
SELECT ALL rt0.c0, rt0.c2, vt0.c0, rt0.c1, vt0.c1, vt0.lid FROM vt0, rt0;
SELECT DISTINCT vt0.lid, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.lid, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((CAST(NULL AS NUMERIC) IN ())) UNION SELECT DISTINCT vt0.lid, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((CAST(NULL AS NUMERIC) IN ())))) UNION SELECT DISTINCT vt0.lid, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((((CAST(NULL AS NUMERIC) IN ())) ISNULL));
SELECT DISTINCT vt0.lid, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT rt0.c1, vt0.c1, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON ((((((NULL) NOT NULL))AND(rt0.c1)))AND(CAST(rt0.c1 AS NUMERIC))) GROUP BY rt0.c1, vt0.c1, rt0.c2;
SELECT ALL rt0.c1, vt0.c1, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON ((((((NULL) NOT NULL))AND(rt0.c1)))AND(CAST(rt0.c1 AS NUMERIC))) WHERE ((((((~ (rt0.c0)))OR((('妇l䞿')%(rt0.c2)))))AND((((rt0.c2, vt0.c1, vt0.lid))<=((vt0.c1, vt0.c1, vt0.lid)))))) GROUP BY rt0.c1, vt0.c1, rt0.c2 UNION SELECT rt0.c1, vt0.c1, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON ((((((NULL) NOT NULL))AND(rt0.c1)))AND(CAST(rt0.c1 AS NUMERIC))) WHERE ((NOT ((((((~ (rt0.c0)))OR((('妇l䞿')%(rt0.c2)))))AND((((rt0.c2, vt0.c1, vt0.lid))<=((vt0.c1, vt0.c1, vt0.lid)))))))) GROUP BY rt0.c1, vt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, vt0.c1, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON ((((((NULL) NOT NULL))AND(rt0.c1)))AND(CAST(rt0.c1 AS NUMERIC))) WHERE ((((((((~ (rt0.c0)))OR((('妇l䞿')%(rt0.c2)))))AND((((rt0.c2, vt0.c1, vt0.lid))<=((vt0.c1, vt0.c1, vt0.lid)))))) ISNULL)) GROUP BY rt0.c1, vt0.c1, rt0.c2;
SELECT rt0.c1, vt0.c1, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON ((((((NULL) NOT NULL))AND(rt0.c1)))AND(CAST(rt0.c1 AS NUMERIC))) GROUP BY rt0.c1, vt0.c1, rt0.c2;
SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0;
SELECT ALL vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0 HAVING MAX(MIN(vt0.c0)) UNION ALL SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0 HAVING (NOT (MAX(MIN(vt0.c0)))) UNION ALL SELECT vt0.lid, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.lid, vt0.c1, vt0.c0 HAVING ((MAX(MIN(vt0.c0))) ISNULL);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((vt0.lid, rt0.c1, rt0.c1, vt0.lid, rt0.c0)) BETWEEN ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)), vt0.c1, ((vt0.c0) NOT BETWEEN (0.957241329732289) AND (vt0.c1)), ((((vt0.c1)AND(rt0.c0)))AND(rt0.c0)), (rt0.c0 IN ()))) AND (((rt0.c0 IN ()), (((vt0.c0, rt0.c0, vt0.c1)) BETWEEN ((x'', vt0.c1, vt0.c0)) AND ((vt0.c0, rt0.c0, rt0.c2))), 'KN', vt0.c1, ((vt0.lid)AND(rt0.c0)))));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((vt0.lid, rt0.c1, rt0.c1, vt0.lid, rt0.c0)) BETWEEN ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)), vt0.c1, ((vt0.c0) NOT BETWEEN (0.957241329732289) AND (vt0.c1)), ((((vt0.c1)AND(rt0.c0)))AND(rt0.c0)), (rt0.c0 IN ()))) AND (((rt0.c0 IN ()), (((vt0.c0, rt0.c0, vt0.c1)) BETWEEN ((x'', vt0.c1, vt0.c0)) AND ((vt0.c0, rt0.c0, rt0.c2))), 'KN', vt0.c1, ((vt0.lid)AND(rt0.c0))))) WHERE (((('')=(-1630258920)) IN (vt0.lid))) UNION ALL SELECT * FROM vt0 INNER JOIN rt0 ON (((vt0.lid, rt0.c1, rt0.c1, vt0.lid, rt0.c0)) BETWEEN ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)), vt0.c1, ((vt0.c0) NOT BETWEEN (0.957241329732289) AND (vt0.c1)), ((((vt0.c1)AND(rt0.c0)))AND(rt0.c0)), (rt0.c0 IN ()))) AND (((rt0.c0 IN ()), (((vt0.c0, rt0.c0, vt0.c1)) BETWEEN ((x'', vt0.c1, vt0.c0)) AND ((vt0.c0, rt0.c0, rt0.c2))), 'KN', vt0.c1, ((vt0.lid)AND(rt0.c0))))) WHERE ((NOT (((('')==(-1630258920)) IN (vt0.lid))))) UNION ALL SELECT * FROM vt0 INNER JOIN rt0 ON (((vt0.lid, rt0.c1, rt0.c1, vt0.lid, rt0.c0)) BETWEEN ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)), vt0.c1, ((vt0.c0) NOT BETWEEN (0.957241329732289) AND (vt0.c1)), ((((vt0.c1)AND(rt0.c0)))AND(rt0.c0)), (rt0.c0 IN ()))) AND (((rt0.c0 IN ()), (((vt0.c0, rt0.c0, vt0.c1)) BETWEEN ((x'', vt0.c1, vt0.c0)) AND ((vt0.c0, rt0.c0, rt0.c2))), 'KN', vt0.c1, ((vt0.lid)AND(rt0.c0))))) WHERE (((((('')==(-1630258920)) IN (vt0.lid))) ISNULL));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((vt0.lid, rt0.c1, rt0.c1, vt0.lid, rt0.c0)) BETWEEN ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)), vt0.c1, ((vt0.c0) NOT BETWEEN (0.957241329732289) AND (vt0.c1)), ((((vt0.c1)AND(rt0.c0)))AND(rt0.c0)), (rt0.c0 IN ()))) AND (((rt0.c0 IN ()), (((vt0.c0, rt0.c0, vt0.c1)) BETWEEN ((x'', vt0.c1, vt0.c0)) AND ((vt0.c0, rt0.c0, rt0.c2))), 'KN', vt0.c1, ((vt0.lid)AND(rt0.c0)))));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (CAST(0.0669705308128763 AS TEXT)) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (CAST(0.0669705308128763 AS TEXT)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((CAST(0.0669705308128763 AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c0, vt0.c1, vt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN ((((vt0.lid)OR(rt0.c0)))) AND ((((0.36508140982074)=(rt0.c2))))) GROUP BY rt0.c0, vt0.c1, vt0.c0, rt0.c1;
SELECT rt0.c0, vt0.c1, vt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN ((((vt0.lid)OR(rt0.c0)))) AND ((((0.36508140982074)=(rt0.c2))))) WHERE (x'aaee') GROUP BY rt0.c0, vt0.c1, vt0.c0, rt0.c1 UNION SELECT rt0.c0, vt0.c1, vt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN ((((vt0.lid)OR(rt0.c0)))) AND ((((0.36508140982074)==(rt0.c2))))) WHERE ((NOT (x'aaee'))) GROUP BY rt0.c0, vt0.c1, vt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, vt0.c1, vt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN ((((vt0.lid)OR(rt0.c0)))) AND ((((0.36508140982074)==(rt0.c2))))) WHERE (((x'aaee') ISNULL)) GROUP BY rt0.c0, vt0.c1, vt0.c0, rt0.c1;
SELECT rt0.c0, vt0.c1, vt0.c0, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN ((((vt0.lid)OR(rt0.c0)))) AND ((((0.36508140982074)=(rt0.c2))))) GROUP BY rt0.c0, vt0.c1, vt0.c0, rt0.c1;
SELECT ALL rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1;
SELECT rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1 HAVING ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))&(rt0.c1)) UNION ALL SELECT rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1 HAVING (NOT (((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))&(rt0.c1)))) UNION ALL SELECT rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1 HAVING ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))&(rt0.c1))) ISNULL);
SELECT ALL rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1;
SELECT rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1 HAVING ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))&(rt0.c1)) UNION ALL SELECT rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1 HAVING (NOT (((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))&(rt0.c1)))) UNION ALL SELECT rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1 HAVING ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))&(rt0.c1))) ISNULL);
SELECT ALL rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1;
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON '){纭|qs-r';
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON '){纭|qs-r' WHERE (((((vt0.c1)-(rt0.c1)))LIKE(rt0.c1 COLLATE BINARY))) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN vt0 ON '){纭|qs-r' WHERE ((NOT (((((vt0.c1)-(rt0.c1)))LIKE(rt0.c1 COLLATE BINARY))))) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN vt0 ON '){纭|qs-r' WHERE (((((((vt0.c1)-(rt0.c1)))LIKE(rt0.c1 COLLATE BINARY))) ISNULL));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON '){纭|qs-r';
SELECT DISTINCT vt0.c1 FROM rt0, vt0;
SELECT DISTINCT vt0.c1 FROM rt0, vt0 WHERE (NULL COLLATE BINARY) UNION SELECT DISTINCT vt0.c1 FROM rt0, vt0 WHERE ((NOT (NULL COLLATE BINARY))) UNION SELECT DISTINCT vt0.c1 FROM rt0, vt0 WHERE (((NULL COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c1 FROM rt0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c2, vt0.lid, vt0.c0, rt0.c1, vt0.c1, rt0.c0 FROM vt0, rt0;
SELECT rt0.c2, vt0.lid, vt0.c0, rt0.c1, vt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((SUBSTR(vt0.lid, rt0.c1)) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END) AND (LIKE(rt0.c0, rt0.c2)))) UNION ALL SELECT ALL rt0.c2, vt0.lid, vt0.c0, rt0.c1, vt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((SUBSTR(vt0.lid, rt0.c1)) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END) AND (LIKE(rt0.c0, rt0.c2)))))) UNION ALL SELECT ALL rt0.c2, vt0.lid, vt0.c0, rt0.c1, vt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((((SUBSTR(vt0.lid, rt0.c1)) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END) AND (LIKE(rt0.c0, rt0.c2)))) ISNULL));
SELECT rt0.c2, vt0.lid, vt0.c0, rt0.c1, vt0.c1, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c1, rt0.c2, vt0.lid, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT vt0.c1, rt0.c2, vt0.lid, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE (((0X74db6ba)&(vt0.c1))) UNION SELECT DISTINCT vt0.c1, rt0.c2, vt0.lid, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((NOT (((0X74db6ba)&(vt0.c1))))) UNION SELECT DISTINCT vt0.c1, rt0.c2, vt0.lid, vt0.c0, rt0.c1, rt0.c0 FROM rt0 NOT INDEXED, vt0 WHERE (((((0X74db6ba)&(vt0.c1))) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c2, vt0.lid, vt0.c0, rt0.c1, rt0.c0 FROM rt0, vt0;
SELECT ALL vt0.lid, vt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, vt0.c1;
SELECT vt0.lid, vt0.c1 FROM vt0, rt0 WHERE ((((rt0.c2 IN (vt0.lid))) NOT BETWEEN (rt0.c1) AND (((0.5536535094509031) BETWEEN (rt0.c2) AND (rt0.c2))))) GROUP BY vt0.lid, vt0.c1 UNION SELECT ALL vt0.lid, vt0.c1 FROM vt0, rt0 WHERE ((NOT ((((rt0.c2 IN (vt0.lid))) NOT BETWEEN (rt0.c1) AND (((0.5536535094509031) BETWEEN (rt0.c2) AND (rt0.c2))))))) GROUP BY vt0.lid, vt0.c1 UNION SELECT ALL vt0.lid, vt0.c1 FROM vt0, rt0 WHERE ((((((rt0.c2 IN (vt0.lid))) NOT BETWEEN (rt0.c1) AND (((0.5536535094509031) BETWEEN (rt0.c2) AND (rt0.c2))))) ISNULL)) GROUP BY vt0.lid, vt0.c1;
SELECT ALL vt0.lid, vt0.c1 FROM vt0, rt0 GROUP BY vt0.lid, vt0.c1;
SELECT ALL rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1, vt0.c0;
SELECT rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1, vt0.c0 HAVING GROUP_CONCAT(rt0.c2) UNION ALL SELECT ALL rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT(rt0.c2))) UNION ALL SELECT ALL rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1, vt0.c0 HAVING ((GROUP_CONCAT(rt0.c2)) ISNULL);
SELECT ALL rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1, vt0.c0;
SELECT rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1, vt0.c0 HAVING GROUP_CONCAT(rt0.c2) UNION ALL SELECT ALL rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT(rt0.c2))) UNION ALL SELECT ALL rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1, vt0.c0 HAVING ((GROUP_CONCAT(rt0.c2)) ISNULL);
SELECT ALL rt0.c0, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1, vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.lid COLLATE BINARY))==((CAST(vt0.lid AS INTEGER))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.lid COLLATE BINARY))==((CAST(vt0.lid AS INTEGER))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.lid COLLATE BINARY))==((CAST(vt0.lid AS INTEGER))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c1, rt0.c2, rt0.c1, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((CAST(vt0.c0 AS TEXT)) ISNULL);
SELECT DISTINCT vt0.c1, rt0.c2, rt0.c1, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((CAST(vt0.c0 AS TEXT)) ISNULL) WHERE (CAST(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)) AS NUMERIC)) UNION SELECT DISTINCT vt0.c1, rt0.c2, rt0.c1, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((CAST(vt0.c0 AS TEXT)) ISNULL) WHERE ((NOT (CAST(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)) AS NUMERIC)))) UNION SELECT DISTINCT vt0.c1, rt0.c2, rt0.c1, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((CAST(vt0.c0 AS TEXT)) ISNULL) WHERE (((CAST(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c2, rt0.c1, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON ((CAST(vt0.c0 AS TEXT)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((((rt0.c0)%(rt0.c0))) IS FALSE)) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0)%(rt0.c0))) IS FALSE)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((((((rt0.c0)%(rt0.c0))) IS FALSE)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid;
SELECT ALL vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid HAVING MAX(GROUP_CONCAT(AVG(vt0.lid))) UNION ALL SELECT ALL vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid HAVING (NOT (MAX(GROUP_CONCAT(AVG(vt0.lid))))) UNION ALL SELECT vt0.c1, vt0.lid FROM vt0 GROUP BY vt0.c1, vt0.lid HAVING ((MAX(GROUP_CONCAT(AVG(vt0.lid)))) ISNULL);
SELECT TOTAL(((((rt0.c0)%(vt0.c1)))%(CASE WHEN vt0.lid THEN rt0.c0 WHEN vt0.lid THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END))) FROM rt0, vt0 ORDER BY (((rt0.c1 IN (vt0.c0)))|(CASE 116882795  WHEN vt0.lid THEN rt0.c0 WHEN rt0.c1 THEN vt0.lid WHEN -1581387231 THEN ']]dVkSs?' END)) ASC;
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c2, vt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c0)) AND ((vt0.c0, '1314559613', rt0.c2))))LIKE(rt0.c2))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((((((rt0.c2, vt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c0)) AND ((vt0.c0, '1314559613', rt0.c2))))LIKE(rt0.c2))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((((((((rt0.c2, vt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c0)) AND ((vt0.c0, '1314559613', rt0.c2))))LIKE(rt0.c2))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.lid, vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1;
SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE ((((((vt0.lid IN ()))OR((((vt0.lid))>=((vt0.c1))))))AND(((vt0.c1) NOT BETWEEN (NULL) AND (vt0.lid))))) GROUP BY vt0.lid, vt0.c0, vt0.c1 UNION SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((((vt0.lid IN ()))OR((((vt0.lid))>=((vt0.c1))))))AND(((vt0.c1) NOT BETWEEN (NULL) AND (vt0.lid))))))) GROUP BY vt0.lid, vt0.c0, vt0.c1 UNION SELECT vt0.lid, vt0.c0, vt0.c1 FROM vt0 WHERE ((((((((vt0.lid IN ()))OR((((vt0.lid))>=((vt0.c1))))))AND(((vt0.c1) NOT BETWEEN (NULL) AND (vt0.lid))))) ISNULL)) GROUP BY vt0.lid, vt0.c0, vt0.c1;
SELECT ALL vt0.lid, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.lid, vt0.c0, vt0.c1;
SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0;
SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0 HAVING ((MIN(MIN(COUNT(*))))-(TOTAL(COUNT(*)))) UNION ALL SELECT vt0.c1, vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0 HAVING (NOT (((MIN(MIN(COUNT(*))))-(TOTAL(COUNT(*)))))) UNION ALL SELECT ALL vt0.c1, vt0.lid, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.lid, vt0.c0 HAVING ((((MIN(MIN(COUNT(*))))-(TOTAL(COUNT(*))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ('7j') UNION ALL SELECT * FROM rt0 WHERE ((NOT ('7j'))) UNION ALL SELECT ALL * FROM rt0 WHERE ((('7j') ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt0.c0, vt0.lid FROM vt0;
SELECT DISTINCT vt0.c0, vt0.lid FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS REAL)) UNION SELECT DISTINCT vt0.c0, vt0.lid FROM vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE NOCASE AS REAL)))) UNION SELECT DISTINCT vt0.c0, vt0.lid FROM vt0 WHERE (((CAST(vt0.c0 COLLATE NOCASE AS REAL)) ISNULL));
SELECT DISTINCT vt0.c0, vt0.lid FROM vt0;
SELECT vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c2;
SELECT vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((((vt0.c0 IN (rt0.c1)))GLOB(((rt0.c0) ISNULL)))) GROUP BY vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c2 UNION SELECT vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((vt0.c0 IN (rt0.c1)))GLOB(((rt0.c0) ISNULL)))))) GROUP BY vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c2 UNION SELECT ALL vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((((((vt0.c0 IN (rt0.c1)))GLOB(((rt0.c0) ISNULL)))) ISNULL)) GROUP BY vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c2;
SELECT vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, vt0.lid, rt0.c1, vt0.c1, rt0.c2;
SELECT vt0.lid, vt0.c0, rt0.c2, rt0.c0, vt0.c1, rt0.c1 FROM rt0, vt0 GROUP BY vt0.lid, vt0.c0, rt0.c2, rt0.c0, vt0.c1, rt0.c1;
SELECT ALL vt0.lid, vt0.c0, rt0.c2, rt0.c0, vt0.c1, rt0.c1 FROM rt0, vt0 GROUP BY vt0.lid, vt0.c0, rt0.c2, rt0.c0, vt0.c1, rt0.c1 HAVING SUM(TOTAL(COUNT(*))) UNION ALL SELECT ALL vt0.lid, vt0.c0, rt0.c2, rt0.c0, vt0.c1, rt0.c1 FROM rt0, vt0 GROUP BY vt0.lid, vt0.c0, rt0.c2, rt0.c0, vt0.c1, rt0.c1 HAVING (NOT (SUM(TOTAL(COUNT(*))))) UNION ALL SELECT vt0.lid, vt0.c0, rt0.c2, rt0.c0, vt0.c1, rt0.c1 FROM rt0, vt0 GROUP BY vt0.lid, vt0.c0, rt0.c2, rt0.c0, vt0.c1, rt0.c1 HAVING ((SUM(TOTAL(COUNT(*)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) AS INTEGER)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) AS INTEGER)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) AS INTEGER)) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE COALESCE(DISTINCT NULL, rt0.c0)  WHEN (rt0.c2 IN (rt0.c2, rt0.c1)) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.27053490303523453)) ELSE ((0Xfffffffffc92b943)<=(rt0.c0)) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE COALESCE(DISTINCT NULL, rt0.c0)  WHEN (rt0.c2 IN (rt0.c2, rt0.c1)) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.27053490303523453)) ELSE ((0xfffffffffc92b943)<=(rt0.c0)) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE COALESCE(DISTINCT NULL, rt0.c0)  WHEN (rt0.c2 IN (rt0.c2, rt0.c1)) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.27053490303523453)) ELSE ((0Xfffffffffc92b943)<=(rt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.lid FROM rt0, vt0 GROUP BY vt0.lid;
SELECT ALL vt0.lid FROM rt0, vt0 WHERE ((~ (((rt0.c2) IS TRUE)))) GROUP BY vt0.lid UNION SELECT vt0.lid FROM rt0, vt0 WHERE ((NOT ((~ (((rt0.c2) IS TRUE)))))) GROUP BY vt0.lid UNION SELECT vt0.lid FROM rt0, vt0 WHERE ((((~ (((rt0.c2) IS TRUE)))) ISNULL)) GROUP BY vt0.lid;
SELECT ALL vt0.lid FROM rt0, vt0 GROUP BY vt0.lid;
