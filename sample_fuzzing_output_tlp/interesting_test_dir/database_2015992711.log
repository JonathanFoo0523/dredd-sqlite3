-- Time: 2024/06/10 07:41:12
-- Database: database11
-- Database version: 3.40.0
-- seed value: 2015992711
PRAGMA cache_size = 50000; -- 13ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 1ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INT NOT NULL UNIQUE , FOREIGN KEY(c0) REFERENCES t0(c0) ON DELETE SET DEFAULT DEFERRABLE); -- 5ms;
REINDEX  t0; -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 INTEGER ); -- 1ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (0.609513263566381); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.609513263566381); -- 0ms;
PRAGMA short_column_names; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 1ms;
INSERT OR FAIL INTO t0(c0) VALUES (x''); -- 7ms;
UPDATE OR IGNORE rt0 SET (c0)=(x''); -- 0ms;
UPDATE t0 SET (c0)=(NULL) WHERE (((t0.c0)) BETWEEN ((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))) AND ((((t0.c0)<(t0.c0))))); -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c3) VALUES ('2', 0.5642697039918539), ('-59844015', '0.5642697039918539'), ('0.5642697039918539', x'5602'), ('j]c2MSR', NULL), ('', -59844015); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA main.stats; -- 0ms;
PRAGMA main.journal_mode; -- 0ms;
INSERT OR REPLACE INTO rt0(c3, c2, c1, c0) VALUES ('', '-59844015', '%!', x''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('0.5642697039918539'); -- 0ms;
VACUUM; -- 1ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c2, c0) VALUES (0.10133263732069175, x'', ''), (NULL, NULL, 0.10133263732069175), (0.9116115571580277, x'', x''); -- 1ms;
REINDEX; -- 1ms;
BEGIN  TRANSACTION; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('1540815837'), (NULL), (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 2ms;
INSERT OR IGNORE INTO t0(c0) VALUES (''); -- 2ms;
INSERT OR REPLACE INTO rt0(c1, c2) VALUES (x'', 0.5530826226661484); -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c0, c1, c3) VALUES (x'66dd', NULL, NULL, 0.554487812811096), (x'', 0xfffffffffc6eda51, NULL, NULL), (0.5871474225112007, x'fb21', x'', NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM rt0 WHERE (((x'', rt0.c0, rt0.c3, rt0.c2, rt0.c1)) NOT BETWEEN (((('1540815837') NOT BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c3 COLLATE NOCASE, CASE WHEN '1540815837' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END, '379752917' COLLATE NOCASE, ((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)))) AND ((((rt0.c2)IS NOT(rt0.c3)), (((('lc-j')OR(rt0.c3)))OR(rt0.c1)), NULL, TYPEOF(DISTINCT 0.9116115571580277), CAST(rt0.c2 AS INTEGER)))); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr2 AFTER INSERT ON t0 WHEN ((CASE WHEN t0.c0 THEN t0.c0 ELSE 'ob' END) NOT BETWEEN ((t0.c0 IN ())) AND (x'')) BEGIN DELETE FROM t0 WHERE ((((t0.c0)|(t0.c0)))>=(((678865412) IS TRUE)));END; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0Xffffffff9f8c5b0d); -- 1ms;
INSERT OR FAIL INTO t0 VALUES ('0.10133263732069175'), (x''), ('j'); -- 1ms;
INSERT OR ABORT INTO t0(c0) VALUES ('2050102545'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES ('-1618191603'); -- 0ms;
PRAGMA main.checkpoint_fullfsync = true; -- 1ms;
REINDEX NOCASE; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
ALTER TABLE t0 ADD COLUMN c67 BLOB; -- 0ms;
REINDEX; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0x16a291d5, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c0) VALUES (x'521835d5', 1537427875, 0Xfffffffffc6eda51); -- 0ms;
INSERT OR FAIL INTO t0(c67) VALUES (NULL), (NULL), (117131719); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c3, c0) VALUES ('2050102545', 0.2573753727076523); -- 0ms;
UPDATE rt0 SET c1=NULL; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c2, c0) VALUES (0.352193650552758, '-1618191603', x''), ('W!A+', 0.189252300773892, '981684122'), ('eYo?', 0.9677360033713057, x''); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (1.540815837E9, NULL, '-500290886', 0.47784343927987405), ('1492935883', NULL, -1618191603, ''), (x'', NULL, NULL, 0X3a834f9a); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.foreign_keys; -- 1ms;
UPDATE OR ABORT t0 SET c0=0.6051476961954044 WHERE ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)OR((((x''))>((t0.c0))))))AND(9.81684122E8 COLLATE RTRIM)); -- 0ms;
UPDATE rt0 SET (c2, c3, c1)=(x'', '75w釕]k.', 0x5ba349a3); -- 0ms;
UPDATE OR FAIL t0 SET c0=x'4b3b'; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0, c0)=('', 0X4124999, x'781e'); -- 4ms;
INSERT OR REPLACE INTO rt0 VALUES (x'', x'd06ff9e4', '6S', 0xfffffffffe6cd28c); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rt0.c3, t0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0;
SELECT rt0.c3, t0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 WHERE (((CAST('%!' AS INTEGER)) IS FALSE)) UNION ALL SELECT ALL rt0.c3, t0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((NOT (((CAST('%!' AS INTEGER)) IS FALSE)))) UNION ALL SELECT rt0.c3, t0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 WHERE (((((CAST('%!' AS INTEGER)) IS FALSE)) ISNULL));
SELECT rt0.c3, t0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 WHERE (((rt0.c2)/(rt0.c2)) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 WHERE ((NOT (((rt0.c2)/(rt0.c2)) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 WHERE (((((rt0.c2)/(rt0.c2)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0;
SELECT t0.c0, rt0.c0, rt0.c2, rt0.c3 FROM rt0, t0 GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c3;
SELECT ALL t0.c0, rt0.c0, rt0.c2, rt0.c3 FROM rt0, t0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))) AND (((rt0.c3)%(rt0.c2))))) GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c3 UNION SELECT ALL t0.c0, rt0.c0, rt0.c2, rt0.c3 FROM rt0, t0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))) AND (((rt0.c3)%(rt0.c2))))))) GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c3 UNION SELECT t0.c0, rt0.c0, rt0.c2, rt0.c3 FROM rt0, t0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))) AND (((rt0.c3)%(rt0.c2))))) ISNULL)) GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c3;
SELECT t0.c0, rt0.c0, rt0.c2, rt0.c3 FROM rt0, t0 GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c3;
SELECT ALL t0.c0 FROM t0, rt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, rt0 GROUP BY t0.c0 HAVING LOWER(MIN(COUNT(*)) COLLATE NOCASE) UNION ALL SELECT ALL t0.c0 FROM t0, rt0 GROUP BY t0.c0 HAVING (NOT (LOWER(MIN(COUNT(*)) COLLATE NOCASE))) UNION ALL SELECT t0.c0 FROM t0, rt0 GROUP BY t0.c0 HAVING ((LOWER(MIN(COUNT(*)) COLLATE NOCASE)) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((('-1618191603')IS NOT(((rt0.c2)IS NOT(rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((('-1618191603')IS NOT(((rt0.c2)IS NOT(rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((('-1618191603')IS NOT(((rt0.c2)IS NOT(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON ((((rt0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE BINARY;
SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON ((((rt0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE BINARY WHERE (rt0.c2) UNION SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON ((((rt0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE BINARY WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON ((((rt0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE BINARY WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON ((((rt0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE BINARY;
SELECT t0.c0 FROM rt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM rt0, t0 WHERE (((t0.c0) NOT BETWEEN (((((0x9de0e95)AND(rt0.c0)))AND(rt0.c3))) AND (''))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM rt0, t0 WHERE ((NOT (((t0.c0) NOT BETWEEN (((((0x9de0e95)AND(rt0.c0)))AND(rt0.c3))) AND (''))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM rt0, t0 WHERE (((((t0.c0) NOT BETWEEN (((((0x9de0e95)AND(rt0.c0)))AND(rt0.c3))) AND (''))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM rt0, t0 GROUP BY t0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING SUM(TOTAL(SUM(AVG(MAX(AVG(TOTAL(MAX(MAX(COUNT(*)))))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (SUM(TOTAL(SUM(AVG(MAX(AVG(TOTAL(MAX(MAX(COUNT(*)))))))))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((SUM(TOTAL(SUM(AVG(MAX(AVG(TOTAL(MAX(MAX(COUNT(*))))))))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM t0 INNER JOIN rt0 ON (((rt0.c3 COLLATE NOCASE))<=(((rt0.c0 IN ()))));
SELECT rt0.c0, rt0.c2, rt0.c3 FROM t0 INNER JOIN rt0 ON (((rt0.c3 COLLATE NOCASE))<=(((rt0.c0 IN ())))) WHERE ('75w釕]k.') UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM t0 INNER JOIN rt0 ON (((rt0.c3 COLLATE NOCASE))<=(((rt0.c0 IN ())))) WHERE ((NOT ('75w釕]k.'))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM t0 INNER JOIN rt0 ON (((rt0.c3 COLLATE NOCASE))<=(((rt0.c0 IN ())))) WHERE ((('75w釕]k.') ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM t0 INNER JOIN rt0 ON (((rt0.c3 COLLATE NOCASE))<=(((rt0.c0 IN ()))));
SELECT DISTINCT rt0.c0 FROM t0, rt0;
SELECT DISTINCT rt0.c0 FROM t0, rt0 WHERE (((((((((((NULL)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))OR(x''))) IS FALSE)) UNION SELECT DISTINCT rt0.c0 FROM t0, rt0 WHERE ((NOT (((((((((((NULL)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))OR(x''))) IS FALSE)))) UNION SELECT DISTINCT rt0.c0 FROM t0, rt0 WHERE (((((((((((((NULL)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))OR(x''))) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c0 FROM t0, rt0;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 WHERE ('') GROUP BY rt0.c3, rt0.c1 UNION SELECT rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (''))) GROUP BY rt0.c3, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c1 FROM rt0 WHERE ((('') ISNULL)) GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (COUNT(*) IN ()) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (COUNT(*) IN ()) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((((((t0.c0)AND(t0.c0)))AND(t0.c0)) IN ())) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0)AND(t0.c0)))AND(t0.c0)) IN ())))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)) IN ())) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (json_valid(NULL COLLATE RTRIM)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (json_valid(NULL COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM t0 WHERE (((json_valid(NULL COLLATE RTRIM)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT t0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 WHERE (((('x&')) BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((CAST(rt0.c1 AS NUMERIC))))) GROUP BY t0.c0, rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL t0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((NOT (((('x&')) BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((CAST(rt0.c1 AS NUMERIC))))))) GROUP BY t0.c0, rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL t0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 WHERE (((((('x&')) BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((CAST(rt0.c1 AS NUMERIC))))) ISNULL)) GROUP BY t0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL t0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING 'YC+' UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ('YC+')) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (('YC+') ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING 'YC+' UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ('YC+')) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (('YC+') ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT SUM(rt0.c3) FROM rt0, t0;
SELECT rt0.c3, rt0.c2, t0.c0 FROM t0, rt0;
SELECT rt0.c3, rt0.c2, t0.c0 FROM t0, rt0 WHERE (((rt0.c0)<>(rt0.c3)) COLLATE BINARY) UNION ALL SELECT ALL rt0.c3, rt0.c2, t0.c0 FROM t0, rt0 WHERE ((NOT (((rt0.c0)!=(rt0.c3)) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c3, rt0.c2, t0.c0 FROM t0, rt0 WHERE (((((rt0.c0)<>(rt0.c3)) COLLATE BINARY) ISNULL));
SELECT rt0.c3, rt0.c2, t0.c0 FROM t0, rt0;
SELECT DISTINCT rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c3 FROM rt0 WHERE (UPPER((x'' IN ()))) UNION SELECT DISTINCT rt0.c3 FROM rt0 WHERE ((NOT (UPPER((x'' IN ()))))) UNION SELECT DISTINCT rt0.c3 FROM rt0 WHERE (((UPPER((x'' IN ()))) ISNULL));
SELECT DISTINCT rt0.c3 FROM rt0;
SELECT rt0.c0, t0.c0 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c0, t0.c0;
SELECT rt0.c0, t0.c0 FROM rt0 NATURAL JOIN t0 WHERE (CAST((rt0.c2 IN (rt0.c2, rt0.c2)) AS TEXT)) GROUP BY rt0.c0, t0.c0 UNION SELECT ALL rt0.c0, t0.c0 FROM rt0 NATURAL JOIN t0 WHERE ((NOT (CAST((rt0.c2 IN (rt0.c2, rt0.c2)) AS TEXT)))) GROUP BY rt0.c0, t0.c0 UNION SELECT rt0.c0, t0.c0 FROM rt0 NATURAL JOIN t0 WHERE (((CAST((rt0.c2 IN (rt0.c2, rt0.c2)) AS TEXT)) ISNULL)) GROUP BY rt0.c0, t0.c0;
SELECT rt0.c0, t0.c0 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c0, t0.c0;
SELECT rt0.c1, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3 HAVING (NOT ('')) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3 HAVING (NOT ((NOT ('')))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3 HAVING (((NOT (''))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3 HAVING (NOT ('')) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3 HAVING (NOT ((NOT ('')))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3 HAVING (((NOT (''))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (x'446e3764') UNION ALL SELECT * FROM rt0 WHERE ((NOT (x'446e3764'))) UNION ALL SELECT ALL * FROM rt0 WHERE (((x'446e3764') ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c0 FROM rt0, t0 WHERE (CAST(LIKELY(t0.c0) AS INTEGER)) UNION SELECT DISTINCT rt0.c0 FROM rt0, t0 WHERE ((NOT (CAST(LIKELY(t0.c0) AS INTEGER)))) UNION SELECT DISTINCT rt0.c0 FROM rt0, t0 WHERE (((CAST(LIKELY(t0.c0) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, t0;
SELECT ALL rt0.c0, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, t0.c0;
SELECT rt0.c0, rt0.c1, t0.c0 FROM t0, rt0 WHERE (((((rt0.c0)>('-828574854'))) NOT NULL)) GROUP BY rt0.c0, rt0.c1, t0.c0 UNION SELECT ALL rt0.c0, rt0.c1, t0.c0 FROM t0, rt0 WHERE ((NOT (((((rt0.c0)>('-828574854'))) NOT NULL)))) GROUP BY rt0.c0, rt0.c1, t0.c0 UNION SELECT ALL rt0.c0, rt0.c1, t0.c0 FROM t0, rt0 WHERE (((((((rt0.c0)>('-828574854'))) NOT NULL)) ISNULL)) GROUP BY rt0.c0, rt0.c1, t0.c0;
SELECT ALL rt0.c0, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, t0.c0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING SUM(SUM(x'')) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (SUM(SUM(x'')))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((SUM(SUM(x''))) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (NULL) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((NULL) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, t0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, t0.c0 FROM rt0, t0 WHERE (((((((rt0.c1)<(rt0.c2)))OR(((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)))))AND(CAST(rt0.c1 AS INTEGER)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, t0.c0 FROM rt0, t0 WHERE ((NOT (((((((rt0.c1)<(rt0.c2)))OR(((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)))))AND(CAST(rt0.c1 AS INTEGER)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, t0.c0 FROM rt0, t0 WHERE (((((((((rt0.c1)<(rt0.c2)))OR(((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)))))AND(CAST(rt0.c1 AS INTEGER)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, t0.c0 FROM rt0, t0;
SELECT ALL rt0.c3, t0.c0, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON '9494018' GROUP BY rt0.c3, t0.c0, rt0.c0;
SELECT rt0.c3, t0.c0, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON '9494018' WHERE (CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END AS NUMERIC)) GROUP BY rt0.c3, t0.c0, rt0.c0 UNION SELECT rt0.c3, t0.c0, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON '9494018' WHERE ((NOT (CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END AS NUMERIC)))) GROUP BY rt0.c3, t0.c0, rt0.c0 UNION SELECT rt0.c3, t0.c0, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON '9494018' WHERE (((CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END AS NUMERIC)) ISNULL)) GROUP BY rt0.c3, t0.c0, rt0.c0;
SELECT ALL rt0.c3, t0.c0, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON '9494018' GROUP BY rt0.c3, t0.c0, rt0.c0;
SELECT rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY rt0.c3, rt0.c2;
SELECT rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY rt0.c3, rt0.c2 HAVING (AVG(AVG(SUM(t0.c0))) IN ()) UNION ALL SELECT ALL rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY rt0.c3, rt0.c2 HAVING (NOT ((AVG(AVG(SUM(t0.c0))) IN ()))) UNION ALL SELECT ALL rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY rt0.c3, rt0.c2 HAVING (((AVG(AVG(SUM(t0.c0))) IN ())) ISNULL);
SELECT rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY rt0.c3, rt0.c2;
SELECT rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY rt0.c3, rt0.c2 HAVING (AVG(AVG(SUM(t0.c0))) IN ()) UNION ALL SELECT ALL rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY rt0.c3, rt0.c2 HAVING (NOT ((AVG(AVG(SUM(t0.c0))) IN ()))) UNION ALL SELECT ALL rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY rt0.c3, rt0.c2 HAVING (((AVG(AVG(SUM(t0.c0))) IN ())) ISNULL);
SELECT rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY rt0.c3, rt0.c2;
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON 0.6186279297074225;
SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON 0.6186279297074225 WHERE (((((('1537427875')<=(t0.c0)), rt0.c0, CASE WHEN t0.c0 THEN rt0.c2 ELSE t0.c0 END))<>(('68307353', '-1089685262', CAST('' AS NUMERIC))))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON 0.6186279297074225 WHERE ((NOT (((((('1537427875')<=(t0.c0)), rt0.c0, CASE WHEN t0.c0 THEN rt0.c2 ELSE t0.c0 END))!=(('68307353', '-1089685262', CAST('' AS NUMERIC))))))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON 0.6186279297074225 WHERE (((((((('1537427875')<=(t0.c0)), rt0.c0, CASE WHEN t0.c0 THEN rt0.c2 ELSE t0.c0 END))<>(('68307353', '-1089685262', CAST('' AS NUMERIC))))) ISNULL));
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON 0.6186279297074225;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((json(rt0.c3))AND(((rt0.c3)+(rt0.c2)))))AND(CAST(rt0.c0 AS REAL))))AND(((rt0.c1)<=(rt0.c1)))))AND(TRIM(rt0.c2, rt0.c0)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((json(rt0.c3))AND(((rt0.c3)+(rt0.c2)))))AND(CAST(rt0.c0 AS REAL))))AND(((rt0.c1)<=(rt0.c1)))))AND(TRIM(rt0.c2, rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((json(rt0.c3))AND(((rt0.c3)+(rt0.c2)))))AND(CAST(rt0.c0 AS REAL))))AND(((rt0.c1)<=(rt0.c1)))))AND(TRIM(rt0.c2, rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) NOT NULL)) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS BLOB)) NOT NULL)))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE (((((CAST(rt0.c0 AS BLOB)) NOT NULL)) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM t0, rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM t0, rt0 GROUP BY rt0.c3 HAVING TOTAL(SUM(rt0.c1)) UNION ALL SELECT ALL rt0.c3 FROM t0, rt0 GROUP BY rt0.c3 HAVING (NOT (TOTAL(SUM(rt0.c1)))) UNION ALL SELECT rt0.c3 FROM t0, rt0 GROUP BY rt0.c3 HAVING ((TOTAL(SUM(rt0.c1))) ISNULL);
SELECT rt0.c2, t0.c0 FROM rt0, t0;
SELECT ALL rt0.c2, t0.c0 FROM rt0, t0 WHERE (((((rt0.c2)OR(rt0.c0)))AND(t0.c0)) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c2, t0.c0 FROM rt0, t0 WHERE ((NOT (((((rt0.c2)OR(rt0.c0)))AND(t0.c0)) COLLATE NOCASE))) UNION ALL SELECT rt0.c2, t0.c0 FROM rt0, t0 WHERE (((((((rt0.c2)OR(rt0.c0)))AND(t0.c0)) COLLATE NOCASE) ISNULL));
SELECT rt0.c2, t0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c2, t0.c0, rt0.c1 FROM rt0, t0;
SELECT DISTINCT rt0.c2, t0.c0, rt0.c1 FROM rt0, t0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c2, t0.c0, rt0.c1 FROM rt0, t0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c2, t0.c0, rt0.c1 FROM rt0, t0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c2, t0.c0, rt0.c1 FROM rt0, t0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM t0, rt0 WHERE (COALESCE(CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END, ((rt0.c2) NOTNULL), (((x'd330')) BETWEEN ((rt0.c3)) AND ((rt0.c0))), CAST(rt0.c2 AS BLOB))) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM t0, rt0 WHERE ((NOT (COALESCE(CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END, ((rt0.c2) NOTNULL), (((x'd330')) BETWEEN ((rt0.c3)) AND ((rt0.c0))), CAST(rt0.c2 AS BLOB))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM t0, rt0 WHERE (((COALESCE(CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END, ((rt0.c2) NOTNULL), (((x'd330')) BETWEEN ((rt0.c3)) AND ((rt0.c0))), CAST(rt0.c2 AS BLOB))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT ALL rt0.c3, rt0.c0 FROM rt0, t0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0, t0 GROUP BY rt0.c3, rt0.c0 HAVING MAX(MAX(x'')) UNION ALL SELECT rt0.c3, rt0.c0 FROM rt0, t0 GROUP BY rt0.c3, rt0.c0 HAVING (NOT (MAX(MAX(x'')))) UNION ALL SELECT rt0.c3, rt0.c0 FROM rt0, t0 GROUP BY rt0.c3, rt0.c0 HAVING ((MAX(MAX(x''))) ISNULL);
SELECT ALL * FROM rt0 NATURAL JOIN t0;
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (((rt0.c0)<>(t0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE ((NOT (((rt0.c0)<>(t0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (((((rt0.c0)!=(t0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 NOT INDEXED WHERE (CASE ((t0.c0) NOT NULL)  WHEN (t0.c0 IN ()) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END ELSE CAST(t0.c0 AS BLOB) END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE ((t0.c0) NOT NULL)  WHEN (t0.c0 IN ()) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END ELSE CAST(t0.c0 AS BLOB) END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE ((t0.c0) NOT NULL)  WHEN (t0.c0 IN ()) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END ELSE CAST(t0.c0 AS BLOB) END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((rt0.c2)>=(MIN(GROUP_CONCAT('0.7955034714884917')))) IN ()) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((((rt0.c2)>=(MIN(GROUP_CONCAT('0.7955034714884917')))) IN ()))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((rt0.c2)>=(MIN(GROUP_CONCAT('0.7955034714884917')))) IN ())) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((rt0.c2)>=(MIN(GROUP_CONCAT('0.7955034714884917')))) IN ()) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((((rt0.c2)>=(MIN(GROUP_CONCAT('0.7955034714884917')))) IN ()))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((rt0.c2)>=(MIN(GROUP_CONCAT('0.7955034714884917')))) IN ())) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL MAX(((117131719) NOTNULL)) FROM t0, rt0 ORDER BY CAST((0x7735e71b IN ()) AS BLOB) DESC;
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((NULL)) AND (((((rt0.c0, rt0.c3, rt0.c2))<=((rt0.c3, rt0.c2, rt0.c2))))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((NULL)) AND (((((rt0.c0, rt0.c3, rt0.c2))<=((rt0.c3, rt0.c2, rt0.c2))))))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((NULL)) AND (((((rt0.c0, rt0.c3, rt0.c2))<=((rt0.c3, rt0.c2, rt0.c2))))))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((((CAST(rt0.c3 AS REAL))AND(((((rt0.c1)AND(rt0.c1)))AND(x'1fb1')))))AND((((rt0.c1))>((rt0.c3)))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((((CAST(rt0.c3 AS REAL))AND(((((rt0.c1)AND(rt0.c1)))AND(x'1fb1')))))AND((((rt0.c1))>((rt0.c3)))))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((((CAST(rt0.c3 AS REAL))AND(((((rt0.c1)AND(rt0.c1)))AND(x'1fb1')))))AND((((rt0.c1))>((rt0.c3)))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST(((t0.c0)*(t0.c0)) AS INTEGER)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(((t0.c0)*(t0.c0)) AS INTEGER)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST(((t0.c0)*(t0.c0)) AS INTEGER)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1 HAVING SUM(COUNT(*)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3, rt0.c1 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON MIN((rt0.c1 IN (rt0.c3)), (rt0.c3 IN (rt0.c3)));
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON MIN((rt0.c1 IN (rt0.c3)), (rt0.c3 IN (rt0.c3))) WHERE ((((+ (rt0.c3)))IS(IFNULL(DISTINCT rt0.c1, rt0.c3)))) UNION ALL SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON MIN((rt0.c1 IN (rt0.c3)), (rt0.c3 IN (rt0.c3))) WHERE ((NOT ((((+ (rt0.c3)))IS(IFNULL(DISTINCT rt0.c1, rt0.c3)))))) UNION ALL SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON MIN((rt0.c1 IN (rt0.c3)), (rt0.c3 IN (rt0.c3))) WHERE ((((((+ (rt0.c3)))IS(IFNULL(DISTINCT rt0.c1, rt0.c3)))) ISNULL));
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON MIN((rt0.c1 IN (rt0.c3)), (rt0.c3 IN (rt0.c3)));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)) IN ())) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)) IN ())))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)) IN ())) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3))))) GROUP BY rt0.c3, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE RTRIM) NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3))))))) GROUP BY rt0.c3, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c0 FROM rt0 WHERE (((((rt0.c1 COLLATE RTRIM) NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3))))) ISNULL)) GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(MIN(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(MIN(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(MIN(t0.c0))) ISNULL);
SELECT rt0.c1 FROM t0, rt0;
SELECT ALL rt0.c1 FROM t0, rt0 WHERE ((((rt0.c2))=(((+ (rt0.c0)))))) UNION ALL SELECT ALL rt0.c1 FROM t0, rt0 WHERE ((NOT ((((rt0.c2))==(((+ (rt0.c0)))))))) UNION ALL SELECT ALL rt0.c1 FROM t0, rt0 WHERE ((((((rt0.c2))=(((+ (rt0.c0)))))) ISNULL));
SELECT rt0.c1 FROM t0, rt0;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c1 FROM rt0, t0;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c1 FROM rt0, t0 WHERE ((((- (rt0.c1)))IS('678865412'))) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c1 FROM rt0, t0 WHERE ((NOT ((((- (rt0.c1)))IS('678865412'))))) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c1 FROM rt0, t0 WHERE ((((((- (rt0.c1)))IS('678865412'))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c1 FROM rt0, t0;
SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3))) NOT BETWEEN ((+ (rt0.c3))) AND (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3))))) GROUP BY rt0.c3, rt0.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3))) NOT BETWEEN ((+ (rt0.c3))) AND (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3))))))) GROUP BY rt0.c3, rt0.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3))) NOT BETWEEN ((+ (rt0.c3))) AND (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3))))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING TOTAL(((rt0.c2) NOT BETWEEN (COUNT(*)) AND (COUNT(*)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (TOTAL(((rt0.c2) NOT BETWEEN (COUNT(*)) AND (COUNT(*)))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((TOTAL(((rt0.c2) NOT BETWEEN (COUNT(*)) AND (COUNT(*))))) ISNULL);
SELECT TOTAL(((t0.c0 COLLATE NOCASE)>=((- (t0.c0))))) FROM t0 ORDER BY CASE LIKELIHOOD(DISTINCT t0.c0, 0.6202777870316722)  WHEN ((((((((t0.c0)AND(t0.c0)))OR(0.2629875905069118)))AND(t0.c0)))OR(t0.c0)) THEN UNICODE(t0.c0) ELSE 'r!j' COLLATE BINARY END  NULLS FIRST;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE ((((rt0.c2)OR(rt0.c0)))AND(rt0.c2))  WHEN ((rt0.c1) NOT NULL) THEN 'y15 ' ELSE TRIM(rt0.c2, rt0.c0) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE ((((rt0.c2)OR(rt0.c0)))AND(rt0.c2))  WHEN ((rt0.c1) NOT NULL) THEN 'y15 ' ELSE TRIM(rt0.c2, rt0.c0) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE ((((rt0.c2)OR(rt0.c0)))AND(rt0.c2))  WHEN ((rt0.c1) NOT NULL) THEN 'y15 ' ELSE TRIM(rt0.c2, rt0.c0) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON LTRIM(((rt0.c1)%(rt0.c2)));
SELECT DISTINCT rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON LTRIM(((rt0.c1)%(rt0.c2))) WHERE (CASE CASE rt0.c0  WHEN t0.c0 THEN rt0.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END  WHEN rt0.c3 THEN (~ (rt0.c2)) WHEN CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END THEN rt0.c1 COLLATE RTRIM WHEN load_extension(rt0.c2, rt0.c2) THEN ((rt0.c2) ISNULL) ELSE ((((rt0.c2)AND(rt0.c3)))OR(rt0.c1)) END) UNION SELECT DISTINCT rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON LTRIM(((rt0.c1)%(rt0.c2))) WHERE ((NOT (CASE CASE rt0.c0  WHEN t0.c0 THEN rt0.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END  WHEN rt0.c3 THEN (~ (rt0.c2)) WHEN CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END THEN rt0.c1 COLLATE RTRIM WHEN load_extension(rt0.c2, rt0.c2) THEN ((rt0.c2) ISNULL) ELSE ((((rt0.c2)AND(rt0.c3)))OR(rt0.c1)) END))) UNION SELECT DISTINCT rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON LTRIM(((rt0.c1)%(rt0.c2))) WHERE (((CASE CASE rt0.c0  WHEN t0.c0 THEN rt0.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END  WHEN rt0.c3 THEN (~ (rt0.c2)) WHEN CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END THEN rt0.c1 COLLATE RTRIM WHEN load_extension(rt0.c2, rt0.c2) THEN ((rt0.c2) ISNULL) ELSE ((((rt0.c2)AND(rt0.c3)))OR(rt0.c1)) END) ISNULL));
SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((((- (rt0.c2))) NOT BETWEEN (rt0.c3) AND (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) GROUP BY rt0.c3, rt0.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((- (rt0.c2))) NOT BETWEEN (rt0.c3) AND (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))))) GROUP BY rt0.c3, rt0.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((- (rt0.c2))) NOT BETWEEN (rt0.c3) AND (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING HEX(DISTINCT (- (t0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (HEX(DISTINCT (- (t0.c0))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((HEX(DISTINCT (- (t0.c0)))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING HEX(DISTINCT (- (t0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (HEX(DISTINCT (- (t0.c0))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((HEX(DISTINCT (- (t0.c0)))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (TOTAL_CHANGES()) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (TOTAL_CHANGES()))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE (CAST(0xffffffffd9e648a0 AS NUMERIC)) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (CAST(0xffffffffd9e648a0 AS NUMERIC)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE (((CAST(0Xffffffffd9e648a0 AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c1 IN ()))AND(((rt0.c1) NOTNULL))))AND(((rt0.c0) IS TRUE)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c1 IN ()))AND(((rt0.c1) NOTNULL))))AND(((rt0.c0) IS TRUE)))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((rt0.c1 IN ()))AND(((rt0.c1) NOTNULL))))AND(((rt0.c0) IS TRUE)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING MIN(MIN(rt0.c2)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MIN(MIN(rt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MIN(MIN(rt0.c2))) ISNULL);
SELECT TOTAL(CAST(t0.c0 AS BLOB)) FROM rt0, t0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((NOT (rt0.c0)) COLLATE RTRIM))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((NOT (rt0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ((((('119336076')OR(((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))))OR(t0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ((((('119336076')OR(((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))))OR(t0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((((((('119336076')OR(((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))))OR(t0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT rt0.c2, rt0.c1 FROM t0 INNER JOIN rt0 ON (('-448369748')-((((rt0.c0, rt0.c0, rt0.c1))>=((rt0.c2, rt0.c0, rt0.c3))))) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM t0 INNER JOIN rt0 ON (('-448369748')-((((rt0.c0, rt0.c0, rt0.c1))>=((rt0.c2, rt0.c0, rt0.c3))))) WHERE (CAST(rt0.c3 COLLATE RTRIM AS TEXT)) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM t0 INNER JOIN rt0 ON (('-448369748')-((((rt0.c0, rt0.c0, rt0.c1))>=((rt0.c2, rt0.c0, rt0.c3))))) WHERE ((NOT (CAST(rt0.c3 COLLATE RTRIM AS TEXT)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM t0 INNER JOIN rt0 ON (('-448369748')-((((rt0.c0, rt0.c0, rt0.c1))>=((rt0.c2, rt0.c0, rt0.c3))))) WHERE (((CAST(rt0.c3 COLLATE RTRIM AS TEXT)) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM t0 INNER JOIN rt0 ON (('-448369748')-((((rt0.c0, rt0.c0, rt0.c1))>=((rt0.c2, rt0.c0, rt0.c3))))) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1;
SELECT rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 HAVING GROUP_CONCAT(((((rt0.c0)OR(t0.c0)))OR(rt0.c1))) UNION ALL SELECT ALL rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(((((rt0.c0)OR(t0.c0)))OR(rt0.c1))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(((((rt0.c0)OR(t0.c0)))OR(rt0.c1)))) ISNULL);
SELECT rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1;
SELECT rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 HAVING GROUP_CONCAT(((((rt0.c0)OR(t0.c0)))OR(rt0.c1))) UNION ALL SELECT ALL rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(((((rt0.c0)OR(t0.c0)))OR(rt0.c1))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(((((rt0.c0)OR(t0.c0)))OR(rt0.c1)))) ISNULL);
SELECT rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1;
SELECT * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE (CAST(x'' COLLATE RTRIM AS TEXT)) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (CAST(x'' COLLATE RTRIM AS TEXT)))) UNION ALL SELECT * FROM rt0, t0 WHERE (((CAST(x'' COLLATE RTRIM AS TEXT)) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (((rt0.c2)<=(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (((rt0.c2)<=(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (((rt0.c2)<=(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((t0.c0 IN (LOWER(t0.c0)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((t0.c0 IN (LOWER(t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((t0.c0 IN (LOWER(t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c2 FROM rt0 CROSS JOIN t0 ON (LIKELIHOOD(DISTINCT rt0.c0, 0.7274748073185903) IN ()) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 CROSS JOIN t0 ON (LIKELIHOOD(DISTINCT rt0.c0, 0.7274748073185903) IN ()) GROUP BY rt0.c2 HAVING (- (MIN(MIN(t0.c0)))) UNION ALL SELECT rt0.c2 FROM rt0 CROSS JOIN t0 ON (LIKELIHOOD(DISTINCT rt0.c0, 0.7274748073185903) IN ()) GROUP BY rt0.c2 HAVING (NOT ((- (MIN(MIN(t0.c0)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 CROSS JOIN t0 ON (LIKELIHOOD(DISTINCT rt0.c0, 0.7274748073185903) IN ()) GROUP BY rt0.c2 HAVING (((- (MIN(MIN(t0.c0))))) ISNULL);
SELECT MAX((CAST(rt0.c0 AS TEXT) IN (CASE rt0.c1  WHEN x'7862' THEN rt0.c2 ELSE rt0.c2 END))) FROM rt0 ORDER BY (- (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3))));
SELECT ALL * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE ((rt0.c3 COLLATE NOCASE IN ())) UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT ((rt0.c3 COLLATE NOCASE IN ())))) UNION ALL SELECT ALL * FROM t0, rt0 NOT INDEXED WHERE ((((rt0.c3 COLLATE NOCASE IN ())) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c3 END)OR((0.0 IN ()))))AND(rt0.c1 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((((CASE WHEN rt0.c2 THEN rt0.c3 END)OR((0.0 IN ()))))AND(rt0.c1 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((((CASE WHEN rt0.c2 THEN rt0.c3 END)OR((0.0 IN ()))))AND(rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT rt0.c3 FROM rt0, t0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0, t0 WHERE ((((t0.c0)IS(rt0.c0)) IN ())) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0, t0 WHERE ((NOT ((((t0.c0)IS(rt0.c0)) IN ())))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0, t0 WHERE ((((((t0.c0)IS(rt0.c0)) IN ())) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, t0 GROUP BY rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING MIN(TOTAL(rt0.c1)) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT (MIN(TOTAL(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING ((MIN(TOTAL(rt0.c1))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (x'd189') UNION ALL SELECT * FROM rt0 WHERE ((NOT (x'd189'))) UNION ALL SELECT * FROM rt0 WHERE (((x'd189') ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((- (t0.c0)) IN ())) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((- (t0.c0)) IN ())))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((- (t0.c0)) IN ())) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE ((t0.c0)<(0xffffffffaca47fc3))  WHEN CAST(t0.c0 AS NUMERIC) THEN HEX(t0.c0) END) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE ((t0.c0)<(0Xffffffffaca47fc3))  WHEN CAST(t0.c0 AS NUMERIC) THEN HEX(t0.c0) END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CASE ((t0.c0)<(0Xffffffffaca47fc3))  WHEN CAST(t0.c0 AS NUMERIC) THEN HEX(t0.c0) END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0 HAVING TOTAL(((rt0.c3)IS NOT(COUNT(SUM(MAX(MAX(rt0.c0))))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0 HAVING (NOT (TOTAL(((rt0.c3)IS NOT(COUNT(SUM(MAX(MAX(rt0.c0))))))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0 HAVING ((TOTAL(((rt0.c3)IS NOT(COUNT(SUM(MAX(MAX(rt0.c0)))))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((CAST(rt0.c3 AS INTEGER) IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((CAST(rt0.c3 AS INTEGER) IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((CAST(rt0.c3 AS INTEGER) IN ())) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ((((rt0.c0)||(rt0.c0)) IN ())) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ((((rt0.c0)||(rt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((((((rt0.c0)||(rt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING CAST(rt0.c0 AS NUMERIC) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING (NOT (CAST(rt0.c0 AS NUMERIC))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING ((CAST(rt0.c0 AS NUMERIC)) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING CAST(rt0.c0 AS NUMERIC) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING (NOT (CAST(rt0.c0 AS NUMERIC))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING ((CAST(rt0.c0 AS NUMERIC)) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (t0.c0) UNION ALL SELECT * FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CASE WHEN t0.c0 THEN ((t0.c0)LIKE(t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CASE WHEN t0.c0 THEN ((t0.c0)LIKE(t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CASE WHEN t0.c0 THEN ((t0.c0)LIKE(t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 NOT INDEXED WHERE ((- (((rt0.c0) NOT NULL)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((- (((rt0.c0) NOT NULL)))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((- (((rt0.c0) NOT NULL)))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c0, rt0.c3, t0.c0 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c2, rt0.c0, rt0.c3, t0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c3, t0.c0 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c2, rt0.c0, rt0.c3, t0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c3, t0.c0 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c2, rt0.c0, rt0.c3, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3, t0.c0 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c2, rt0.c0, rt0.c3, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c3, t0.c0 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c2, rt0.c0, rt0.c3, t0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c3, t0.c0 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c2, rt0.c0, rt0.c3, t0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c3, t0.c0 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c2, rt0.c0, rt0.c3, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3, t0.c0 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c2, rt0.c0, rt0.c3, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c3, t0.c0 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c2, rt0.c0, rt0.c3, t0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CASE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2))  WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE NULL END THEN HEX(rt0.c1) WHEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)) WHEN ((rt0.c2)*(rt0.c2)) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2))  WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE NULL END THEN HEX(rt0.c1) WHEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)) WHEN ((rt0.c2)*(rt0.c2)) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2))  WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE NULL END THEN HEX(rt0.c1) WHEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)) WHEN ((rt0.c2)*(rt0.c2)) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, t0.c0 FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN ABS(t0.c0) THEN TRIM(DISTINCT rt0.c2) WHEN t0.c0 THEN rt0.c0 COLLATE BINARY WHEN 'V*' COLLATE BINARY THEN (((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) WHEN CAST(rt0.c3 AS INTEGER) THEN rt0.c3 COLLATE NOCASE WHEN rt0.c2 THEN ((rt0.c3)>=(rt0.c1)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, t0.c0 FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN ABS(t0.c0) THEN TRIM(DISTINCT rt0.c2) WHEN t0.c0 THEN rt0.c0 COLLATE BINARY WHEN 'V*' COLLATE BINARY THEN (((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) WHEN CAST(rt0.c3 AS INTEGER) THEN rt0.c3 COLLATE NOCASE WHEN rt0.c2 THEN ((rt0.c3)>=(rt0.c1)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END WHERE (((((((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))AND(CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))OR(rt0.c2 COLLATE BINARY)))AND(((rt0.c2) IS TRUE)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, t0.c0 FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN ABS(t0.c0) THEN TRIM(DISTINCT rt0.c2) WHEN t0.c0 THEN rt0.c0 COLLATE BINARY WHEN 'V*' COLLATE BINARY THEN (((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) WHEN CAST(rt0.c3 AS INTEGER) THEN rt0.c3 COLLATE NOCASE WHEN rt0.c2 THEN ((rt0.c3)>=(rt0.c1)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END WHERE ((NOT (((((((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))AND(CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))OR(rt0.c2 COLLATE BINARY)))AND(((rt0.c2) IS TRUE)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, t0.c0 FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN ABS(t0.c0) THEN TRIM(DISTINCT rt0.c2) WHEN t0.c0 THEN rt0.c0 COLLATE BINARY WHEN 'V*' COLLATE BINARY THEN (((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) WHEN CAST(rt0.c3 AS INTEGER) THEN rt0.c3 COLLATE NOCASE WHEN rt0.c2 THEN ((rt0.c3)>=(rt0.c1)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END WHERE (((((((((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))AND(CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))OR(rt0.c2 COLLATE BINARY)))AND(((rt0.c2) IS TRUE)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, t0.c0 FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN ABS(t0.c0) THEN TRIM(DISTINCT rt0.c2) WHEN t0.c0 THEN rt0.c0 COLLATE BINARY WHEN 'V*' COLLATE BINARY THEN (((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) WHEN CAST(rt0.c3 AS INTEGER) THEN rt0.c3 COLLATE NOCASE WHEN rt0.c2 THEN ((rt0.c3)>=(rt0.c1)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((CAST(t0.c0 AS REAL))OR(((t0.c0)<=(t0.c0)))))OR(((t0.c0) ISNULL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((CAST(t0.c0 AS REAL))OR(((t0.c0)<=(t0.c0)))))OR(((t0.c0) ISNULL)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((CAST(t0.c0 AS REAL))OR(((t0.c0)<=(t0.c0)))))OR(((t0.c0) ISNULL)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING TOTAL(((t0.c0) IS FALSE)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (TOTAL(((t0.c0) IS FALSE)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((TOTAL(((t0.c0) IS FALSE))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING TOTAL(((t0.c0) IS FALSE)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (TOTAL(((t0.c0) IS FALSE)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((TOTAL(((t0.c0) IS FALSE))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (CASE t0.c0 COLLATE RTRIM  WHEN CASE WHEN '-831325591' THEN t0.c0 ELSE '' END THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CASE t0.c0 COLLATE RTRIM  WHEN CASE WHEN '-831325591' THEN t0.c0 ELSE '' END THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END))) UNION ALL SELECT ALL * FROM t0 WHERE (((CASE t0.c0 COLLATE RTRIM  WHEN CASE WHEN '-831325591' THEN t0.c0 ELSE '' END THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) BETWEEN (((rt0.c2) IS TRUE)) AND ((+ (rt0.c3))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1) BETWEEN (((rt0.c2) IS TRUE)) AND ((+ (rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (((rt0.c2) IS TRUE)) AND ((+ (rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE (CAST(((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) AS TEXT)) GROUP BY rt0.c2, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (CAST(((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) AS TEXT)))) GROUP BY rt0.c2, rt0.c3, rt0.c1 UNION SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE (((CAST(((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) AS TEXT)) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING MAX(SUM(t0.c0)) COLLATE RTRIM UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MAX(SUM(t0.c0)) COLLATE RTRIM)) UNION ALL SELECT rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MAX(SUM(t0.c0)) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, t0.c0, rt0.c3 FROM t0, rt0;
SELECT rt0.c2, rt0.c1, rt0.c0, t0.c0, rt0.c3 FROM t0, rt0 WHERE (((((rt0.c3)>>(rt0.c3))) NOT NULL)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, t0.c0, rt0.c3 FROM t0, rt0 WHERE ((NOT (((((rt0.c3)>>(rt0.c3))) NOT NULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, t0.c0, rt0.c3 FROM t0 NOT INDEXED, rt0 WHERE (((((((rt0.c3)>>(rt0.c3))) NOT NULL)) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0, t0.c0, rt0.c3 FROM t0, rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0 COLLATE RTRIM) IS TRUE)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c0 COLLATE RTRIM) IS TRUE)))) UNION SELECT DISTINCT * FROM t0 WHERE (((((t0.c0 COLLATE RTRIM) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((rt0.c3)%(COALESCE(rt0.c0, rt0.c0)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c3)%(COALESCE(rt0.c0, rt0.c0)))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((rt0.c3)%(COALESCE(rt0.c0, rt0.c0)))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL_CHANGES() UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL_CHANGES())) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL_CHANGES()) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL_CHANGES() UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL_CHANGES())) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL_CHANGES()) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))<((~ (rt0.c1))))) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))<((~ (rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))<((~ (rt0.c1))))) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0) NOTNULL)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((x'')OR((t0.c0 IN (t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((x'')OR((t0.c0 IN (t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((x'')OR((t0.c0 IN (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 CROSS JOIN t0 ON 'Sw' GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 CROSS JOIN t0 ON 'Sw' GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3 HAVING (GROUP_CONCAT(COUNT(MAX(MAX(TOTAL(rt0.c2))))) IN (0.5193884360028099)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 CROSS JOIN t0 ON 'Sw' GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3 HAVING (NOT ((GROUP_CONCAT(COUNT(MAX(MAX(TOTAL(rt0.c2))))) IN (0.5193884360028099)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 CROSS JOIN t0 ON 'Sw' GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3 HAVING (((GROUP_CONCAT(COUNT(MAX(MAX(TOTAL(rt0.c2))))) IN (0.5193884360028099))) ISNULL);
SELECT rt0.c3, rt0.c0 FROM rt0 NOT INDEXED, t0;
SELECT rt0.c3, rt0.c0 FROM rt0, t0 WHERE (CAST((rt0.c2 IN ()) AS INTEGER)) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0, t0 WHERE ((NOT (CAST((rt0.c2 IN ()) AS INTEGER)))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0, t0 WHERE (((CAST((rt0.c2 IN ()) AS INTEGER)) ISNULL));
SELECT rt0.c3, rt0.c0 FROM rt0 NOT INDEXED, t0;
SELECT DISTINCT rt0.c2 FROM t0, rt0;
SELECT DISTINCT rt0.c2 FROM t0, rt0 WHERE ('-2049865186') UNION SELECT DISTINCT rt0.c2 FROM t0, rt0 WHERE ((NOT ('-2049865186'))) UNION SELECT DISTINCT rt0.c2 FROM t0, rt0 WHERE ((('-2049865186') ISNULL));
SELECT DISTINCT rt0.c2 FROM t0, rt0;
SELECT ALL rt0.c3, rt0.c1, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c3, rt0.c1, t0.c0, rt0.c0;
SELECT rt0.c3, rt0.c1, t0.c0, rt0.c0 FROM rt0, t0 WHERE (((CAST(rt0.c2 AS INTEGER))||(((rt0.c0) IS FALSE)))) GROUP BY rt0.c3, rt0.c1, t0.c0, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c1, t0.c0, rt0.c0 FROM rt0, t0 WHERE ((NOT (((CAST(rt0.c2 AS INTEGER))||(((rt0.c0) IS FALSE)))))) GROUP BY rt0.c3, rt0.c1, t0.c0, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c1, t0.c0, rt0.c0 FROM rt0, t0 WHERE (((((CAST(rt0.c2 AS INTEGER))||(((rt0.c0) IS FALSE)))) ISNULL)) GROUP BY rt0.c3, rt0.c1, t0.c0, rt0.c0;
SELECT ALL rt0.c3, rt0.c1, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c3, rt0.c1, t0.c0, rt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(SUM(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(SUM(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(SUM(t0.c0))) ISNULL);
SELECT * FROM t0 INNER JOIN rt0 ON CAST(NULL AS INTEGER);
SELECT * FROM t0 NOT INDEXED INNER JOIN rt0 ON CAST(NULL AS INTEGER) WHERE (CASE WHEN (((NULL))<>((rt0.c1))) THEN (('')>=(rt0.c2)) END) UNION ALL SELECT * FROM t0 INNER JOIN rt0 ON CAST(NULL AS INTEGER) WHERE ((NOT (CASE WHEN (((NULL))!=((rt0.c1))) THEN (('')>=(rt0.c2)) END))) UNION ALL SELECT ALL * FROM t0 INNER JOIN rt0 ON CAST(NULL AS INTEGER) WHERE (((CASE WHEN (((NULL))<>((rt0.c1))) THEN (('')>=(rt0.c2)) END) ISNULL));
SELECT * FROM t0 INNER JOIN rt0 ON CAST(NULL AS INTEGER);
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((CASE WHEN NULL THEN t0.c0 ELSE t0.c0 END IN ())) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((CASE WHEN NULL THEN t0.c0 ELSE t0.c0 END IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE ((((CASE WHEN NULL THEN t0.c0 ELSE t0.c0 END IN ())) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, t0 WHERE (((CASE rt0.c3  WHEN t0.c0 THEN rt0.c2 END)!=(CAST(rt0.c3 AS REAL)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, t0 WHERE ((NOT (((CASE rt0.c3  WHEN t0.c0 THEN rt0.c2 END)!=(CAST(rt0.c3 AS REAL)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, t0 WHERE (((((CASE rt0.c3  WHEN t0.c0 THEN rt0.c2 END)!=(CAST(rt0.c3 AS REAL)))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING 0.05773460999297941 UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (0.05773460999297941)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((0.05773460999297941) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING 0.05773460999297941 UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (0.05773460999297941)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((0.05773460999297941) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM rt0 INNER JOIN t0 ON rt0.c0;
SELECT * FROM rt0 INNER JOIN t0 ON rt0.c0 WHERE ((('-1110186545')GLOB('-1786793115'))) UNION ALL SELECT * FROM rt0 INNER JOIN t0 ON rt0.c0 WHERE ((NOT ((('-1110186545')GLOB('-1786793115'))))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN t0 ON rt0.c0 WHERE ((((('-1110186545')GLOB('-1786793115'))) ISNULL));
SELECT * FROM rt0 INNER JOIN t0 ON rt0.c0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(0.6051476961954044)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(0.6051476961954044)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(0.6051476961954044)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c3, rt0.c2, t0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, t0.c0, rt0.c1 FROM t0, rt0 WHERE ((+ (CAST(rt0.c2 AS NUMERIC)))) GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c2, t0.c0, rt0.c1 FROM t0, rt0 WHERE ((NOT ((+ (CAST(rt0.c2 AS NUMERIC)))))) GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c1 UNION SELECT rt0.c3, rt0.c2, t0.c0, rt0.c1 FROM t0, rt0 WHERE ((((+ (CAST(rt0.c2 AS NUMERIC)))) ISNULL)) GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c1;
SELECT rt0.c3, rt0.c2, t0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(CASE WHEN AVG(COUNT(t0.c0)) THEN t0.c0 END AS NUMERIC) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(CASE WHEN AVG(COUNT(t0.c0)) THEN t0.c0 END AS NUMERIC))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(CASE WHEN AVG(COUNT(t0.c0)) THEN t0.c0 END AS NUMERIC)) ISNULL);
SELECT ALL * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE (((CAST(t0.c0 AS TEXT)) NOT NULL)) UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT (((CAST(t0.c0 AS TEXT)) NOT NULL)))) UNION ALL SELECT * FROM t0, rt0 WHERE (((((CAST(t0.c0 AS TEXT)) NOT NULL)) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (NULL) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL t0.c0 FROM rt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM rt0, t0 WHERE (NULL) GROUP BY t0.c0 UNION SELECT t0.c0 FROM rt0, t0 WHERE ((NOT (NULL))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM rt0, t0 WHERE (((NULL) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM rt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(GROUP_CONCAT(GROUP_CONCAT(AVG(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(GROUP_CONCAT(GROUP_CONCAT(AVG(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(GROUP_CONCAT(GROUP_CONCAT(AVG(t0.c0))))) ISNULL);
SELECT * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE (ROUND(((t0.c0) IS FALSE), (rt0.c3 IN ()))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (ROUND(((t0.c0) IS FALSE), (rt0.c3 IN ()))))) UNION ALL SELECT * FROM t0, rt0 WHERE (((ROUND(((t0.c0) IS FALSE), (rt0.c3 IN ()))) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1 FROM t0 INNER JOIN rt0 ON CAST(LIKELY(DISTINCT t0.c0) AS INTEGER);
SELECT DISTINCT rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1 FROM t0 INNER JOIN rt0 ON CAST(LIKELY(DISTINCT t0.c0) AS INTEGER) WHERE (rt0.c1 COLLATE BINARY) UNION SELECT DISTINCT rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1 FROM t0 INNER JOIN rt0 ON CAST(LIKELY(DISTINCT t0.c0) AS INTEGER) WHERE ((NOT (rt0.c1 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1 FROM t0 INNER JOIN rt0 ON CAST(LIKELY(DISTINCT t0.c0) AS INTEGER) WHERE (((rt0.c1 COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1 FROM t0 INNER JOIN rt0 ON CAST(LIKELY(DISTINCT t0.c0) AS INTEGER);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CAST(t0.c0 COLLATE NOCASE AS INTEGER)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c0 COLLATE NOCASE AS INTEGER)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CAST(t0.c0 COLLATE NOCASE AS INTEGER)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c1, rt0.c3, t0.c0, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c1, rt0.c3, t0.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c3, t0.c0, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c1, rt0.c3, t0.c0, rt0.c0, rt0.c2 HAVING AVG(rt0.c3) UNION ALL SELECT rt0.c1, rt0.c3, t0.c0, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c1, rt0.c3, t0.c0, rt0.c0, rt0.c2 HAVING (NOT (AVG(rt0.c3))) UNION ALL SELECT ALL rt0.c1, rt0.c3, t0.c0, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c1, rt0.c3, t0.c0, rt0.c0, rt0.c2 HAVING ((AVG(rt0.c3)) ISNULL);
SELECT ALL rt0.c1, rt0.c3, t0.c0, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c1, rt0.c3, t0.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c3, t0.c0, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c1, rt0.c3, t0.c0, rt0.c0, rt0.c2 HAVING AVG(rt0.c3) UNION ALL SELECT rt0.c1, rt0.c3, t0.c0, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c1, rt0.c3, t0.c0, rt0.c0, rt0.c2 HAVING (NOT (AVG(rt0.c3))) UNION ALL SELECT ALL rt0.c1, rt0.c3, t0.c0, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c1, rt0.c3, t0.c0, rt0.c0, rt0.c2 HAVING ((AVG(rt0.c3)) ISNULL);
SELECT ALL rt0.c1, rt0.c3, t0.c0, rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c1, rt0.c3, t0.c0, rt0.c0, rt0.c2;
SELECT ALL SUM(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM) FROM t0, rt0 ORDER BY ((('{)')) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((rt0.c2)));
SELECT ALL * FROM rt0 INNER JOIN t0 ON (((+ (rt0.c0)))AND((- (rt0.c1))));
SELECT ALL * FROM rt0 INNER JOIN t0 ON (((+ (rt0.c0)))AND((- (rt0.c1)))) WHERE (CAST(((rt0.c2) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) UNION ALL SELECT * FROM rt0 INNER JOIN t0 ON (((+ (rt0.c0)))AND((- (rt0.c1)))) WHERE ((NOT (CAST(((rt0.c2) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN t0 ON (((+ (rt0.c0)))AND((- (rt0.c1)))) WHERE (((CAST(((rt0.c2) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ISNULL));
SELECT ALL * FROM rt0 INNER JOIN t0 ON (((+ (rt0.c0)))AND((- (rt0.c1))));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, t0.c0, rt0.c1 FROM rt0 CROSS JOIN t0 ON CASE WHEN x'' COLLATE BINARY THEN (((rt0.c2, rt0.c1, -1110186545)) BETWEEN ((rt0.c0, t0.c0, t0.c0)) AND ((rt0.c0, 0.30444144329760037, rt0.c3))) END;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, t0.c0, rt0.c1 FROM rt0 CROSS JOIN t0 ON CASE WHEN x'' COLLATE BINARY THEN (((rt0.c2, rt0.c1, -1110186545)) BETWEEN ((rt0.c0, t0.c0, t0.c0)) AND ((rt0.c0, 0.30444144329760037, rt0.c3))) END WHERE (((((rt0.c2)IS(rt0.c0))) NOT NULL)) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, t0.c0, rt0.c1 FROM rt0 CROSS JOIN t0 ON CASE WHEN x'' COLLATE BINARY THEN (((rt0.c2, rt0.c1, -1110186545)) BETWEEN ((rt0.c0, t0.c0, t0.c0)) AND ((rt0.c0, 0.30444144329760037, rt0.c3))) END WHERE ((NOT (((((rt0.c2)IS(rt0.c0))) NOT NULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, t0.c0, rt0.c1 FROM rt0 CROSS JOIN t0 ON CASE WHEN x'' COLLATE BINARY THEN (((rt0.c2, rt0.c1, -1110186545)) BETWEEN ((rt0.c0, t0.c0, t0.c0)) AND ((rt0.c0, 0.30444144329760037, rt0.c3))) END WHERE (((((((rt0.c2)IS(rt0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, t0.c0, rt0.c1 FROM rt0 CROSS JOIN t0 ON CASE WHEN x'' COLLATE BINARY THEN (((rt0.c2, rt0.c1, -1110186545)) BETWEEN ((rt0.c0, t0.c0, t0.c0)) AND ((rt0.c0, 0.30444144329760037, rt0.c3))) END;
SELECT ALL rt0.c3, t0.c0, rt0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c3, t0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c3, t0.c0, rt0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE ((((((rt0.c3, rt0.c3, t0.c0))<>((rt0.c1, rt0.c0, t0.c0)))) BETWEEN (((((((((rt0.c3)OR('2000504493')))OR('1979102284')))OR(rt0.c1)))AND(rt0.c2))) AND ((((rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN ((t0.c0, rt0.c2, rt0.c2)) AND ((NULL, rt0.c0, x'c5b6')))))) GROUP BY rt0.c3, t0.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c3, t0.c0, rt0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE ((NOT ((((((rt0.c3, rt0.c3, t0.c0))<>((rt0.c1, rt0.c0, t0.c0)))) BETWEEN (((((((((rt0.c3)OR('2000504493')))OR('1979102284')))OR(rt0.c1)))AND(rt0.c2))) AND ((((rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN ((t0.c0, rt0.c2, rt0.c2)) AND ((NULL, rt0.c0, x'c5b6')))))))) GROUP BY rt0.c3, t0.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c3, t0.c0, rt0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE ((((((((rt0.c3, rt0.c3, t0.c0))<>((rt0.c1, rt0.c0, t0.c0)))) BETWEEN (((((((((rt0.c3)OR('2000504493')))OR('1979102284')))OR(rt0.c1)))AND(rt0.c2))) AND ((((rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN ((t0.c0, rt0.c2, rt0.c2)) AND ((NULL, rt0.c0, x'c5b6')))))) ISNULL)) GROUP BY rt0.c3, t0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, t0.c0, rt0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c3, t0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c1 FROM t0 CROSS JOIN rt0 ON '-2049865186' GROUP BY rt0.c1;
SELECT rt0.c1 FROM t0 CROSS JOIN rt0 ON '-2049865186' GROUP BY rt0.c1 HAVING ((((((((((MAX(rt0.c2)) NOT BETWEEN (TOTAL(rt0.c0)) AND (COUNT(rt0.c1))))OR(x'')))AND(GROUP_CONCAT(rt0.c2))))AND(rt0.c1)))AND(TOTAL(COUNT(*)) COLLATE RTRIM)) UNION ALL SELECT rt0.c1 FROM t0 CROSS JOIN rt0 ON '-2049865186' GROUP BY rt0.c1 HAVING (NOT (((((((((((MAX(rt0.c2)) NOT BETWEEN (TOTAL(rt0.c0)) AND (COUNT(rt0.c1))))OR(x'')))AND(GROUP_CONCAT(rt0.c2))))AND(rt0.c1)))AND(TOTAL(COUNT(*)) COLLATE RTRIM)))) UNION ALL SELECT rt0.c1 FROM t0 CROSS JOIN rt0 ON '-2049865186' GROUP BY rt0.c1 HAVING ((((((((((((MAX(rt0.c2)) NOT BETWEEN (TOTAL(rt0.c0)) AND (COUNT(rt0.c1))))OR(x'')))AND(GROUP_CONCAT(rt0.c2))))AND(rt0.c1)))AND(TOTAL(COUNT(*)) COLLATE RTRIM))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((NOT ((NOT (rt0.c3))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((NOT ((NOT (rt0.c3))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((NOT ((NOT (rt0.c3))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN (((rt0.c0)>(NULL))))) GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE ((NOT (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN (((rt0.c0)>(NULL))))))) GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE (((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN (((rt0.c0)>(NULL))))) ISNULL)) GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE (((rt0.c0)||(rt0.c2))) UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT (((rt0.c0)||(rt0.c2))))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c0)||(rt0.c2))) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c1 FROM rt0, t0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c1 FROM rt0, t0 WHERE (x'') UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c1 FROM rt0, t0 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c1 FROM rt0, t0 WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c1 FROM rt0, t0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, t0.c0 FROM t0, rt0 WHERE ((+ ((((rt0.c3, rt0.c3, rt0.c3, rt0.c1, t0.c0))>((rt0.c1, rt0.c2, rt0.c1, rt0.c3, rt0.c0)))))) GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c0 UNION SELECT rt0.c0, rt0.c1, rt0.c2, t0.c0 FROM t0, rt0 WHERE ((NOT ((+ ((((rt0.c3, rt0.c3, rt0.c3, rt0.c1, t0.c0))>((rt0.c1, rt0.c2, rt0.c1, rt0.c3, rt0.c0)))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c0 UNION SELECT rt0.c0, rt0.c1, rt0.c2, t0.c0 FROM t0, rt0 WHERE ((((+ ((((rt0.c3, rt0.c3, rt0.c3, rt0.c1, t0.c0))>((rt0.c1, rt0.c2, rt0.c1, rt0.c3, rt0.c0)))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c0;
SELECT rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3 HAVING CASE rt0.c2  WHEN MAX(COUNT(*)) THEN AVG(rt0.c0) END COLLATE RTRIM UNION ALL SELECT rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3 HAVING (NOT (CASE rt0.c2  WHEN MAX(COUNT(*)) THEN AVG(rt0.c0) END COLLATE RTRIM)) UNION ALL SELECT rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3 HAVING ((CASE rt0.c2  WHEN MAX(COUNT(*)) THEN AVG(rt0.c0) END COLLATE RTRIM) ISNULL);
SELECT ALL MIN((((rt0.c0 IN ()))OR(rt0.c2 COLLATE RTRIM))) FROM rt0, t0;
SELECT ALL rt0.c3 FROM t0 INNER JOIN rt0 ON ((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c2)))OR((rt0.c3 IN ('-59844015', rt0.c1)))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END));
SELECT rt0.c3 FROM t0 INNER JOIN rt0 ON ((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c2)))OR((rt0.c3 IN ('-59844015', rt0.c1)))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) WHERE ((('?<') BETWEEN ((((-620605249))<=(('920339279')))) AND (rt0.c2))) UNION ALL SELECT ALL rt0.c3 FROM t0 INNER JOIN rt0 ON ((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c2)))OR((rt0.c3 IN ('-59844015', rt0.c1)))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) WHERE ((NOT ((('?<') BETWEEN ((((-620605249))<=(('920339279')))) AND (rt0.c2))))) UNION ALL SELECT ALL rt0.c3 FROM t0 INNER JOIN rt0 ON ((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c2)))OR((rt0.c3 IN ('-59844015', rt0.c1)))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) WHERE ((((('?<') BETWEEN ((((-620605249))<=(('920339279')))) AND (rt0.c2))) ISNULL));
SELECT ALL rt0.c3 FROM t0 INNER JOIN rt0 ON ((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c2)))OR((rt0.c3 IN ('-59844015', rt0.c1)))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0)) BETWEEN ((((t0.c0)-(t0.c0)))) AND ((((x'')&(t0.c0)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c0)) BETWEEN ((((t0.c0)-(t0.c0)))) AND ((((x'')&(t0.c0)))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((((t0.c0)-(t0.c0)))) AND ((((x'')&(t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON SQLITE_VERSION() GROUP BY t0.c0, rt0.c0;
SELECT ALL t0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON SQLITE_VERSION() WHERE (((t0.c0) NOT NULL)) GROUP BY t0.c0, rt0.c0 UNION SELECT t0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON SQLITE_VERSION() WHERE ((NOT (((t0.c0) NOT NULL)))) GROUP BY t0.c0, rt0.c0 UNION SELECT ALL t0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON SQLITE_VERSION() WHERE (((((t0.c0) NOT NULL)) ISNULL)) GROUP BY t0.c0, rt0.c0;
SELECT t0.c0, rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON SQLITE_VERSION() GROUP BY t0.c0, rt0.c0;
SELECT rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1 HAVING TOTAL(TOTAL(COUNT(*))) UNION ALL SELECT rt0.c1 FROM rt0, t0 GROUP BY rt0.c1 HAVING (NOT (TOTAL(TOTAL(COUNT(*))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1 HAVING ((TOTAL(TOTAL(COUNT(*)))) ISNULL);
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 WHERE (t0.c0) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 WHERE (((t0.c0) ISNULL));
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((NULL) NOT BETWEEN (rt0.c2) AND (0.9668339223507374)) COLLATE RTRIM COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((NULL) NOT BETWEEN (rt0.c2) AND (0.9668339223507374)) COLLATE RTRIM COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((NULL) NOT BETWEEN (rt0.c2) AND (0.9668339223507374)) COLLATE RTRIM COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((~ (((t0.c0)%(t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((~ (((t0.c0)%(t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((~ (((t0.c0)%(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, t0.c0, rt0.c3 FROM rt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c0, rt0.c3 FROM rt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c0, rt0.c3 HAVING ((((((((((COUNT(MAX(rt0.c0))) NOT NULL))AND(rt0.c3)))AND(rt0.c2)))AND((rt0.c3 IN ()))))OR(TYPEOF(DISTINCT GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c0, rt0.c3 FROM rt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c0, rt0.c3 HAVING (NOT (((((((((((COUNT(MAX(rt0.c0))) NOT NULL))AND(rt0.c3)))AND(rt0.c2)))AND((rt0.c3 IN ()))))OR(TYPEOF(DISTINCT GROUP_CONCAT(rt0.c2)))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, t0.c0, rt0.c3 FROM rt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c0, rt0.c3 HAVING ((((((((((((COUNT(MAX(rt0.c0))) NOT NULL))AND(rt0.c3)))AND(rt0.c2)))AND((rt0.c3 IN ()))))OR(TYPEOF(DISTINCT GROUP_CONCAT(rt0.c2))))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2, t0.c0, rt0.c3 FROM rt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c0, rt0.c3 FROM rt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c0, rt0.c3 HAVING ((((((((((COUNT(MAX(rt0.c0))) NOT NULL))AND(rt0.c3)))AND(rt0.c2)))AND((rt0.c3 IN ()))))OR(TYPEOF(DISTINCT GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c0, rt0.c3 FROM rt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c0, rt0.c3 HAVING (NOT (((((((((((COUNT(MAX(rt0.c0))) NOT NULL))AND(rt0.c3)))AND(rt0.c2)))AND((rt0.c3 IN ()))))OR(TYPEOF(DISTINCT GROUP_CONCAT(rt0.c2)))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, t0.c0, rt0.c3 FROM rt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c0, rt0.c3 HAVING ((((((((((((COUNT(MAX(rt0.c0))) NOT NULL))AND(rt0.c3)))AND(rt0.c2)))AND((rt0.c3 IN ()))))OR(TYPEOF(DISTINCT GROUP_CONCAT(rt0.c2))))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2, t0.c0, rt0.c3 FROM rt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c0, rt0.c3;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)) IN ((rt0.c0 IN (0.663058455407194))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)) IN ((rt0.c0 IN (0.663058455407194))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)) IN ((rt0.c0 IN (0.663058455407194))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((+ ('1979102284')))AND(((t0.c0)/(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((+ ('1979102284')))AND(((t0.c0)/(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((+ ('1979102284')))AND(((t0.c0)/(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, t0.c0;
SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1, t0.c0 FROM t0, rt0 WHERE (((((((((((((rt0.c3)AND(rt0.c1)))OR(t0.c0)))AND(((rt0.c1) NOT BETWEEN (NULL) AND (t0.c0)))))OR(((rt0.c3) IS TRUE))))AND(rt0.c3 COLLATE RTRIM)))OR((rt0.c3 IN ())))) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, t0.c0 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1, t0.c0 FROM t0, rt0 WHERE ((NOT (((((((((((((rt0.c3)AND(rt0.c1)))OR(t0.c0)))AND(((rt0.c1) NOT BETWEEN (NULL) AND (t0.c0)))))OR(((rt0.c3) IS TRUE))))AND(rt0.c3 COLLATE RTRIM)))OR((rt0.c3 IN ())))))) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, t0.c0 UNION SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1, t0.c0 FROM t0, rt0 WHERE (((((((((((((((rt0.c3)AND(rt0.c1)))OR(t0.c0)))AND(((rt0.c1) NOT BETWEEN (NULL) AND (t0.c0)))))OR(((rt0.c3) IS TRUE))))AND(rt0.c3 COLLATE RTRIM)))OR((rt0.c3 IN ())))) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, t0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1, t0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING SUM(AVG(rt0.c1)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (SUM(AVG(rt0.c1)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((SUM(AVG(rt0.c1))) ISNULL);
SELECT ALL SUM(((((rt0.c2)>(rt0.c1))) NOT NULL)) FROM rt0, t0 ORDER BY (((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 END))==(((NOT (rt0.c0))))) DESC  NULLS FIRST;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((LIKELY(t0.c0))>>(t0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((LIKELY(t0.c0))>>(t0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((LIKELY(t0.c0))>>(t0.c0 COLLATE RTRIM))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON CAST(((t0.c0)|(rt0.c0)) AS REAL);
SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON CAST(((t0.c0)|(rt0.c0)) AS REAL) WHERE ((- (((t0.c0)IS NOT(rt0.c3))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON CAST(((t0.c0)|(rt0.c0)) AS REAL) WHERE ((NOT ((- (((t0.c0)IS NOT(rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON CAST(((t0.c0)|(rt0.c0)) AS REAL) WHERE ((((- (((t0.c0)IS NOT(rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON CAST(((t0.c0)|(rt0.c0)) AS REAL);
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((- ((0.9373916816413969 IN ())))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((NOT ((- ((0.9373916816413969 IN ())))))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((((- ((0.9373916816413969 IN ())))) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, t0.c0;
SELECT ALL rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, t0.c0 HAVING COUNT(((rt0.c2)<(rt0.c3))) UNION ALL SELECT rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, t0.c0 HAVING (NOT (COUNT(((rt0.c2)<(rt0.c3))))) UNION ALL SELECT rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, t0.c0 HAVING ((COUNT(((rt0.c2)<(rt0.c3)))) ISNULL);
SELECT rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, t0.c0;
SELECT ALL rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, t0.c0 HAVING COUNT(((rt0.c2)<(rt0.c3))) UNION ALL SELECT rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, t0.c0 HAVING (NOT (COUNT(((rt0.c2)<(rt0.c3))))) UNION ALL SELECT rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, t0.c0 HAVING ((COUNT(((rt0.c2)<(rt0.c3)))) ISNULL);
SELECT rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, t0.c0;
SELECT MAX((((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN (((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))), rt0.c1, CASE WHEN rt0.c1 THEN rt0.c1 END)) AND (((((rt0.c1))>(('-1152055175'))), CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END, rt0.c2)))) FROM rt0 ORDER BY CAST(((rt0.c0) IS TRUE) AS INTEGER);
SELECT ALL t0.c0, rt0.c2 FROM t0, rt0;
SELECT t0.c0, rt0.c2 FROM t0, rt0 WHERE (CAST(('NlY/g' IN ()) AS BLOB)) UNION ALL SELECT t0.c0, rt0.c2 FROM t0, rt0 WHERE ((NOT (CAST(('NlY/g' IN ()) AS BLOB)))) UNION ALL SELECT t0.c0, rt0.c2 FROM t0, rt0 WHERE (((CAST(('NlY/g' IN ()) AS BLOB)) ISNULL));
SELECT ALL t0.c0, rt0.c2 FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (((CAST(t0.c0 AS INTEGER)) NOT BETWEEN ('V*') AND (((rt0.c1)|(rt0.c1))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (((CAST(t0.c0 AS INTEGER)) NOT BETWEEN ('V*') AND (((rt0.c1)|(rt0.c1))))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((((CAST(t0.c0 AS INTEGER)) NOT BETWEEN ('V*') AND (((rt0.c1)|(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((- (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((- (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((- (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING MAX(json_quote(rt0.c3)) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING (NOT (MAX(json_quote(rt0.c3)))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING ((MAX(json_quote(rt0.c3))) ISNULL);
SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING MAX(json_quote(rt0.c3)) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING (NOT (MAX(json_quote(rt0.c3)))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING ((MAX(json_quote(rt0.c3))) ISNULL);
SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, t0.c0, rt0.c1 FROM rt0, t0;
SELECT ALL rt0.c3, rt0.c0, t0.c0, rt0.c1 FROM rt0, t0 WHERE (-653816129) UNION ALL SELECT ALL rt0.c3, rt0.c0, t0.c0, rt0.c1 FROM rt0, t0 WHERE ((NOT (-653816129))) UNION ALL SELECT rt0.c3, rt0.c0, t0.c0, rt0.c1 FROM rt0, t0 WHERE (((-653816129) ISNULL));
SELECT ALL rt0.c3, rt0.c0, t0.c0, rt0.c1 FROM rt0, t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (0Xb2d491a) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (0Xb2d491a))) UNION SELECT DISTINCT * FROM rt0 WHERE (((0Xb2d491a) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM t0, rt0 WHERE (((((rt0.c2)AND(((((t0.c0)OR(rt0.c3)))AND(t0.c0)))))AND(CASE WHEN x'' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END))) GROUP BY rt0.c2, rt0.c3 UNION SELECT rt0.c2, rt0.c3 FROM t0, rt0 WHERE ((NOT (((((rt0.c2)AND(((((t0.c0)OR(rt0.c3)))AND(t0.c0)))))AND(CASE WHEN x'' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END))))) GROUP BY rt0.c2, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c3 FROM t0, rt0 WHERE (((((((rt0.c2)AND(((((t0.c0)OR(rt0.c3)))AND(t0.c0)))))AND(CASE WHEN x'' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END))) ISNULL)) GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c0, t0.c0, rt0.c3 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c3;
SELECT ALL rt0.c0, t0.c0, rt0.c3 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c3 HAVING CAST(((rt0.c0)<=(SUM(GROUP_CONCAT(GROUP_CONCAT(t0.c0))))) AS TEXT) UNION ALL SELECT rt0.c0, t0.c0, rt0.c3 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c3 HAVING (NOT (CAST(((rt0.c0)<=(SUM(GROUP_CONCAT(GROUP_CONCAT(t0.c0))))) AS TEXT))) UNION ALL SELECT ALL rt0.c0, t0.c0, rt0.c3 FROM rt0 NOT INDEXED, t0 GROUP BY rt0.c0, t0.c0, rt0.c3 HAVING ((CAST(((rt0.c0)<=(SUM(GROUP_CONCAT(GROUP_CONCAT(t0.c0))))) AS TEXT)) ISNULL);
SELECT rt0.c1, t0.c0, rt0.c3, rt0.c2 FROM t0, rt0;
SELECT ALL rt0.c1, t0.c0, rt0.c3, rt0.c2 FROM t0, rt0 WHERE ('Z') UNION ALL SELECT rt0.c1, t0.c0, rt0.c3, rt0.c2 FROM t0, rt0 WHERE ((NOT ('Z'))) UNION ALL SELECT ALL rt0.c1, t0.c0, rt0.c3, rt0.c2 FROM t0, rt0 WHERE ((('Z') ISNULL));
SELECT rt0.c1, t0.c0, rt0.c3, rt0.c2 FROM t0, rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c0 FROM rt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS REAL))IS NOT(((((t0.c0)OR(t0.c0)))AND(t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((CAST(t0.c0 AS REAL))IS NOT(((((t0.c0)OR(t0.c0)))AND(t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((CAST(t0.c0 AS REAL))IS NOT(((((t0.c0)OR(t0.c0)))AND(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3 HAVING MAX(SUM(COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3 HAVING (NOT (MAX(SUM(COUNT(*))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3 HAVING ((MAX(SUM(COUNT(*)))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0;
SELECT rt0.c0, rt0.c2 FROM rt0, t0 WHERE (((rt0.c2) NOT BETWEEN ('-832801721') AND (rt0.c1)) COLLATE RTRIM) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((NOT (((rt0.c2) NOT BETWEEN ('-832801721') AND (rt0.c1)) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0 WHERE (((((rt0.c2) NOT BETWEEN ('-832801721') AND (rt0.c1)) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (CASE ((1.65547669E8) NOT BETWEEN (rt0.c2) AND (rt0.c0))  WHEN CAST(rt0.c2 AS REAL) THEN (~ (rt0.c1)) WHEN CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN x'f1db' THEN 0.10133263732069175 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN ((rt0.c2) IS TRUE) WHEN ((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)) THEN (((rt0.c3))==((rt0.c3))) ELSE ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)) END) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE ((1.65547669E8) NOT BETWEEN (rt0.c2) AND (rt0.c0))  WHEN CAST(rt0.c2 AS REAL) THEN (~ (rt0.c1)) WHEN CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN x'f1db' THEN 0.10133263732069175 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN ((rt0.c2) IS TRUE) WHEN ((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)) THEN (((rt0.c3))==((rt0.c3))) ELSE ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)) END))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE ((1.65547669E8) NOT BETWEEN (rt0.c2) AND (rt0.c0))  WHEN CAST(rt0.c2 AS REAL) THEN (~ (rt0.c1)) WHEN CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN x'f1db' THEN 0.10133263732069175 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN ((rt0.c2) IS TRUE) WHEN ((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)) THEN (((rt0.c3))=((rt0.c3))) ELSE ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)) END) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0 IN ()), ((t0.c0)=(t0.c0)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))<>((t0.c0 COLLATE NOCASE, t0.c0 COLLATE RTRIM, ((t0.c0)OR(t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0 IN ()), ((t0.c0)==(t0.c0)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))<>((t0.c0 COLLATE NOCASE, t0.c0 COLLATE RTRIM, ((t0.c0)OR(t0.c0)))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((t0.c0 IN ()), ((t0.c0)==(t0.c0)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))!=((t0.c0 COLLATE NOCASE, t0.c0 COLLATE RTRIM, ((t0.c0)OR(t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING CASE WHEN (rt0.c0 IN ()) THEN AVG(rt0.c3) WHEN SUM(x'') THEN AVG(rt0.c2) WHEN GROUP_CONCAT(COUNT(rt0.c1)) THEN COUNT(*) ELSE (rt0.c2 IN ()) END UNION ALL SELECT rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING (NOT (CASE WHEN (rt0.c0 IN ()) THEN AVG(rt0.c3) WHEN SUM(x'') THEN AVG(rt0.c2) WHEN GROUP_CONCAT(COUNT(rt0.c1)) THEN COUNT(*) ELSE (rt0.c2 IN ()) END)) UNION ALL SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING ((CASE WHEN (rt0.c0 IN ()) THEN AVG(rt0.c3) WHEN SUM(x'') THEN AVG(rt0.c2) WHEN GROUP_CONCAT(COUNT(rt0.c1)) THEN COUNT(*) ELSE (rt0.c2 IN ()) END) ISNULL);
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON ((((TYPEOF(DISTINCT rt0.c3))AND(rt0.c2)))OR((- (rt0.c1))));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON ((((TYPEOF(DISTINCT rt0.c3))AND(rt0.c2)))OR((- (rt0.c1)))) WHERE (NULL) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON ((((TYPEOF(DISTINCT rt0.c3))AND(rt0.c2)))OR((- (rt0.c1)))) WHERE ((NOT (NULL))) UNION ALL SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((((TYPEOF(DISTINCT rt0.c3))AND(rt0.c2)))OR((- (rt0.c1)))) WHERE (((NULL) ISNULL));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON ((((TYPEOF(DISTINCT rt0.c3))AND(rt0.c2)))OR((- (rt0.c1))));
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ((LOWER(DISTINCT t0.c0) IN ())) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ((LOWER(DISTINCT t0.c0) IN ())))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((((LOWER(DISTINCT t0.c0) IN ())) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT rt0.c3, t0.c0, rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c3, t0.c0, rt0.c2, rt0.c1;
SELECT rt0.c3, t0.c0, rt0.c2, rt0.c1 FROM rt0, t0 WHERE (((((9494018) NOT NULL))>=(x''))) GROUP BY rt0.c3, t0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c3, t0.c0, rt0.c2, rt0.c1 FROM rt0, t0 WHERE ((NOT (((((9494018) NOT NULL))>=(x''))))) GROUP BY rt0.c3, t0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c3, t0.c0, rt0.c2, rt0.c1 FROM rt0, t0 WHERE (((((((9494018) NOT NULL))>=(x''))) ISNULL)) GROUP BY rt0.c3, t0.c0, rt0.c2, rt0.c1;
SELECT rt0.c3, t0.c0, rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c3, t0.c0, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING GROUP_CONCAT((SUM(TOTAL(rt0.c1)) IN ())) UNION ALL SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING (NOT (GROUP_CONCAT((SUM(TOTAL(rt0.c1)) IN ())))) UNION ALL SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING ((GROUP_CONCAT((SUM(TOTAL(rt0.c1)) IN ()))) ISNULL);
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING GROUP_CONCAT((SUM(TOTAL(rt0.c1)) IN ())) UNION ALL SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING (NOT (GROUP_CONCAT((SUM(TOTAL(rt0.c1)) IN ())))) UNION ALL SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING ((GROUP_CONCAT((SUM(TOTAL(rt0.c1)) IN ()))) ISNULL);
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((('0.8979803642060944')IS((t0.c0 IN ())))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((('0.8979803642060944')IS((t0.c0 IN ())))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((('0.8979803642060944')IS((t0.c0 IN ())))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((rt0.c3)IS NOT(0.6798873736464311))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((rt0.c3)IS NOT(0.6798873736464311))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((rt0.c3)IS NOT(0.6798873736464311))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE (rt0.c3) GROUP BY rt0.c0, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (rt0.c3))) GROUP BY rt0.c0, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE (((rt0.c3) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING CAST(rt0.c3 AS BLOB) COLLATE RTRIM UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING (NOT (CAST(rt0.c3 AS BLOB) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING ((CAST(rt0.c3 AS BLOB) COLLATE RTRIM) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING CAST(rt0.c3 AS BLOB) COLLATE RTRIM UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING (NOT (CAST(rt0.c3 AS BLOB) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING ((CAST(rt0.c3 AS BLOB) COLLATE RTRIM) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT ALL MIN(0.101962904988118) FROM rt0, t0 ORDER BY (('Sw') NOT BETWEEN (TRIM(DISTINCT rt0.c1, rt0.c3)) AND ('kQ'));
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0)))|(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((((t0.c0)OR(t0.c0)))AND(t0.c0)))|(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) UNION ALL SELECT * FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))|(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((TIME(rt0.c0, rt0.c2, rt0.c1))||(((rt0.c1) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((TIME(rt0.c0, rt0.c2, rt0.c1))||(((rt0.c1) IS FALSE)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((TIME(rt0.c0, rt0.c2, rt0.c1))||(((rt0.c1) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM t0, rt0 WHERE (json_object(rt0.c0, rt0.c0 COLLATE NOCASE)) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((NOT (json_object(rt0.c0, rt0.c0 COLLATE NOCASE)))) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM t0, rt0 WHERE (((json_object(rt0.c0, rt0.c0 COLLATE NOCASE)) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING SUM(MAX(rt0.c3)) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING (NOT (SUM(MAX(rt0.c3)))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING ((SUM(MAX(rt0.c3))) ISNULL);
SELECT ALL * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE (((((rt0.c3)IS(rt0.c2))) NOT NULL)) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT (((((rt0.c3)IS(rt0.c2))) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((((((rt0.c3)IS(rt0.c2))) NOT NULL)) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((((rt0.c0)AND(0.913071048368938)))AND(rt0.c1)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((((rt0.c0)AND(0.913071048368938)))AND(rt0.c1)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((((rt0.c0)AND(0.913071048368938)))AND(rt0.c1)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (0.9558453766815014) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (0.9558453766815014))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((0.9558453766815014) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(rt0.c2) COLLATE RTRIM UNION ALL SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(rt0.c2) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(rt0.c2) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(rt0.c2) COLLATE RTRIM UNION ALL SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(rt0.c2) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(rt0.c2) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE ((((((rt0.c1, 0.663058455407194, rt0.c2)) BETWEEN ((t0.c0, t0.c0, rt0.c2)) AND ((rt0.c0, x'', rt0.c0))))>>((+ (rt0.c2))))) UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT ((((((rt0.c1, 0.663058455407194, rt0.c2)) BETWEEN ((t0.c0, t0.c0, rt0.c2)) AND ((rt0.c0, x'', rt0.c0))))>>((+ (rt0.c2))))))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((((((((rt0.c1, 0.663058455407194, rt0.c2)) BETWEEN ((t0.c0, t0.c0, rt0.c2)) AND ((rt0.c0, x'', rt0.c0))))>>((+ (rt0.c2))))) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ((((((~ (rt0.c2)))OR(((rt0.c0)AND(rt0.c1)))))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ((((((~ (rt0.c2)))OR(((rt0.c0)AND(rt0.c1)))))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((((((((~ (rt0.c2)))OR(((rt0.c0)AND(rt0.c1)))))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL t0.c0 FROM rt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM rt0, t0 WHERE (((t0.c0) NOT BETWEEN (0.7026814199133425) AND (rt0.c2)) COLLATE RTRIM) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM rt0, t0 WHERE ((NOT (((t0.c0) NOT BETWEEN (0.7026814199133425) AND (rt0.c2)) COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM rt0, t0 WHERE (((((t0.c0) NOT BETWEEN (0.7026814199133425) AND (rt0.c2)) COLLATE RTRIM) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM rt0, t0 GROUP BY t0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING COUNT(0x90de02) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (COUNT(0X90de02))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING ((COUNT(0x90de02)) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING COUNT(0x90de02) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (COUNT(0X90de02))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING ((COUNT(0x90de02)) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((+ (0.32761136345719166))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((+ (0.32761136345719166))))) UNION ALL SELECT * FROM rt0 WHERE ((((+ (0.32761136345719166))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((((rt0.c1 COLLATE BINARY)OR(((rt0.c0)IS(t0.c0)))))AND(INSTR(rt0.c1, rt0.c1)))) UNION SELECT DISTINCT * FROM rt0, t0 NOT INDEXED WHERE ((NOT (((((rt0.c1 COLLATE BINARY)OR(((rt0.c0)IS(t0.c0)))))AND(INSTR(rt0.c1, rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((((rt0.c1 COLLATE BINARY)OR(((rt0.c0)IS(t0.c0)))))AND(INSTR(rt0.c1, rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, t0.c0;
SELECT rt0.c0, t0.c0 FROM t0, rt0 WHERE (rt0.c0) GROUP BY rt0.c0, t0.c0 UNION SELECT rt0.c0, t0.c0 FROM t0, rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c0, t0.c0 UNION SELECT rt0.c0, t0.c0 FROM t0, rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c0, t0.c0;
SELECT rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, t0.c0;
SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3 HAVING ((COUNT(*))%(((rt0.c1)%(MAX(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3 HAVING (NOT (((COUNT(*))%(((rt0.c1)%(MAX(rt0.c1))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3 HAVING ((((COUNT(*))%(((rt0.c1)%(MAX(rt0.c1)))))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3 HAVING ((COUNT(*))%(((rt0.c1)%(MAX(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3 HAVING (NOT (((COUNT(*))%(((rt0.c1)%(MAX(rt0.c1))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3 HAVING ((((COUNT(*))%(((rt0.c1)%(MAX(rt0.c1)))))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3;
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((('0.9373916816413969')>=(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((('0.9373916816413969')>=(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((('0.9373916816413969')>=(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((((rt0.c3)*(rt0.c1)))&(((rt0.c1)/(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((((rt0.c3)*(rt0.c1)))&(((rt0.c1)/(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((((rt0.c3)*(rt0.c1)))&(((rt0.c1)/(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT ALL rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0 FROM t0, rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))<(rt0.c3 COLLATE RTRIM))) GROUP BY rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0 UNION SELECT rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0 FROM t0, rt0 WHERE ((NOT (((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))<(rt0.c3 COLLATE RTRIM))))) GROUP BY rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0 UNION SELECT rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0 FROM t0, rt0 WHERE (((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))<(rt0.c3 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, t0.c0, rt0.c3, rt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3 HAVING (~ (MIN(TOTAL(GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3 HAVING (NOT ((~ (MIN(TOTAL(GROUP_CONCAT(rt0.c2))))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c0, rt0.c3 HAVING (((~ (MIN(TOTAL(GROUP_CONCAT(rt0.c2)))))) ISNULL);
SELECT t0.c0 FROM t0, rt0;
SELECT ALL t0.c0 FROM t0, rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS TEXT)) UNION ALL SELECT t0.c0 FROM t0, rt0 WHERE ((NOT (CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS TEXT)))) UNION ALL SELECT t0.c0 FROM t0, rt0 WHERE (((CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS TEXT)) ISNULL));
SELECT t0.c0 FROM t0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((0.6507958569819006) IS TRUE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((0.6507958569819006) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((0.6507958569819006) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM t0, rt0 WHERE (((rt0.c0)<=((((rt0.c1))<>((rt0.c3)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM t0, rt0 WHERE ((NOT (((rt0.c0)<=((((rt0.c1))!=((rt0.c3)))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM t0, rt0 WHERE (((((rt0.c0)<=((((rt0.c1))!=((rt0.c3)))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT rt0.c0, t0.c0, rt0.c1, rt0.c3 FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c1)) BETWEEN (((~ (rt0.c1)))) AND ((((t0.c0) ISNULL)))) GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c3;
SELECT rt0.c0, t0.c0, rt0.c1, rt0.c3 FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c1)) BETWEEN (((~ (rt0.c1)))) AND ((((t0.c0) ISNULL)))) GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c3 HAVING ((COUNT(rt0.c3))<=(NULL)) UNION ALL SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c3 FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c1)) BETWEEN (((~ (rt0.c1)))) AND ((((t0.c0) ISNULL)))) GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c3 HAVING (NOT (((COUNT(rt0.c3))<=(NULL)))) UNION ALL SELECT rt0.c0, t0.c0, rt0.c1, rt0.c3 FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c1)) BETWEEN (((~ (rt0.c1)))) AND ((((t0.c0) ISNULL)))) GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c3 HAVING ((((COUNT(rt0.c3))<=(NULL))) ISNULL);
SELECT rt0.c0, t0.c0, rt0.c1, rt0.c3 FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c1)) BETWEEN (((~ (rt0.c1)))) AND ((((t0.c0) ISNULL)))) GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c3;
SELECT rt0.c0, t0.c0, rt0.c1, rt0.c3 FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c1)) BETWEEN (((~ (rt0.c1)))) AND ((((t0.c0) ISNULL)))) GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c3 HAVING ((COUNT(rt0.c3))<=(NULL)) UNION ALL SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c3 FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c1)) BETWEEN (((~ (rt0.c1)))) AND ((((t0.c0) ISNULL)))) GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c3 HAVING (NOT (((COUNT(rt0.c3))<=(NULL)))) UNION ALL SELECT rt0.c0, t0.c0, rt0.c1, rt0.c3 FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c1)) BETWEEN (((~ (rt0.c1)))) AND ((((t0.c0) ISNULL)))) GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c3 HAVING ((((COUNT(rt0.c3))<=(NULL))) ISNULL);
SELECT rt0.c0, t0.c0, rt0.c1, rt0.c3 FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c1)) BETWEEN (((~ (rt0.c1)))) AND ((((t0.c0) ISNULL)))) GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0;
SELECT rt0.c0, rt0.c2 FROM rt0, t0 WHERE (((((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2))) NOT BETWEEN ((NULL IN ())) AND (CAST(x'' AS TEXT)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2))) NOT BETWEEN ((NULL IN ())) AND (CAST(x'' AS TEXT)))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, t0 WHERE (((((((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2))) NOT BETWEEN ((NULL IN ())) AND (CAST(x'' AS TEXT)))) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)) BETWEEN ((rt0.c3)) AND (('1430207692'))) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1)) BETWEEN ((rt0.c3)) AND (('1430207692'))) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1)) BETWEEN ((rt0.c3)) AND (('1430207692'))) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (UNLIKELY(DISTINCT ((x'c5a5716c') ISNULL))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (UNLIKELY(DISTINCT ((x'c5a5716c') ISNULL))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((UNLIKELY(DISTINCT ((x'c5a5716c') ISNULL))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(MIN(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(MIN(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(MIN(t0.c0))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END COLLATE RTRIM))) UNION ALL SELECT * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END COLLATE RTRIM) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0 WHERE ((((((rt0.c3))>=((rt0.c3)))) IS TRUE)) UNION SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT ((((((rt0.c3))>=((rt0.c3)))) IS TRUE)))) UNION SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0 WHERE ((((((((rt0.c3))>=((rt0.c3)))) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE (HEX(TRIM(DISTINCT rt0.c0))) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (HEX(TRIM(DISTINCT rt0.c0))))) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE (((HEX(TRIM(DISTINCT rt0.c0))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2 HAVING GROUP_CONCAT(SUM(rt0.c2)) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(SUM(rt0.c2)))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(SUM(rt0.c2))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((~ (CASE t0.c0  WHEN '0.10133263732069175' THEN t0.c0 END))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((~ (CASE t0.c0  WHEN '0.10133263732069175' THEN t0.c0 END))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((~ (CASE t0.c0  WHEN '0.10133263732069175' THEN t0.c0 END))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((CHAR(t0.c0, t0.c0, t0.c0) IN ())) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((CHAR(t0.c0, t0.c0, t0.c0) IN ())))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((CHAR(t0.c0, t0.c0, t0.c0) IN ())) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))*(((rt0.c0) NOT NULL)))) GROUP BY rt0.c0, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))*(((rt0.c0) NOT NULL)))))) GROUP BY rt0.c0, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))*(((rt0.c0) NOT NULL)))) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING 0.11400395097120708 UNION ALL SELECT rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (0.11400395097120708)) UNION ALL SELECT rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((0.11400395097120708) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING 0.11400395097120708 UNION ALL SELECT rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (0.11400395097120708)) UNION ALL SELECT rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((0.11400395097120708) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CASE ((rt0.c2)GLOB(rt0.c1))  WHEN ((rt0.c2)>(rt0.c3)) THEN ((rt0.c0)OR(rt0.c2)) ELSE (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE ((rt0.c2)GLOB(rt0.c1))  WHEN ((rt0.c2)>(rt0.c3)) THEN ((rt0.c0)OR(rt0.c2)) ELSE (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE ((rt0.c2)GLOB(rt0.c1))  WHEN ((rt0.c2)>(rt0.c3)) THEN ((rt0.c0)OR(rt0.c2)) ELSE (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, NULL)) AND ((t0.c0, '''.<x/j~', t0.c0))))||(((((t0.c0)AND(t0.c0)))OR(t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, NULL)) AND ((t0.c0, '''.<x/j~', t0.c0))))||(((((t0.c0)AND(t0.c0)))OR(t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, NULL)) AND ((t0.c0, '''.<x/j~', t0.c0))))||(((((t0.c0)AND(t0.c0)))OR(t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT rt0.c3 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 NATURAL JOIN t0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END AS TEXT)) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 NATURAL JOIN t0 WHERE ((NOT (CAST(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END AS TEXT)))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 NATURAL JOIN t0 WHERE (((CAST(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END AS TEXT)) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c3;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING SUM(((TOTAL(rt0.c1))<<(SUM(rt0.c3)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (SUM(((TOTAL(rt0.c1))<<(SUM(rt0.c3)))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((SUM(((TOTAL(rt0.c1))<<(SUM(rt0.c3))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)+(rt0.c3))) NOT NULL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c1)+(rt0.c3))) NOT NULL)))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c1)+(rt0.c3))) NOT NULL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ((0.9348399943231566 IN ())))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ((NOT ((0.9348399943231566 IN ())))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((((NOT ((0.9348399943231566 IN ())))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 WHERE ((CASE WHEN rt0.c2 THEN x'' WHEN 0.5738758977861098 THEN rt0.c0 WHEN x'' THEN rt0.c0 END IN ())) GROUP BY t0.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 WHERE ((NOT ((CASE WHEN rt0.c2 THEN x'' WHEN 0.5738758977861098 THEN rt0.c0 WHEN x'' THEN rt0.c0 END IN ())))) GROUP BY t0.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 WHERE ((((CASE WHEN rt0.c2 THEN x'' WHEN 0.5738758977861098 THEN rt0.c0 WHEN x'' THEN rt0.c0 END IN ())) ISNULL)) GROUP BY t0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT t0.c0, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL t0.c0, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c3, rt0.c1, rt0.c0 HAVING (((COUNT(*), SUM(GROUP_CONCAT(rt0.c2)), (rt0.c3 IN (rt0.c3, rt0.c0))))>=((CASE WHEN NULL THEN t0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN COUNT(*) THEN GROUP_CONCAT(SUM(t0.c0)) WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END, rt0.c3, GROUP_CONCAT(COUNT(TOTAL(TOTAL(rt0.c1))))))) UNION ALL SELECT ALL t0.c0, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c3, rt0.c1, rt0.c0 HAVING (NOT ((((COUNT(*), SUM(GROUP_CONCAT(rt0.c2)), (rt0.c3 IN (rt0.c3, rt0.c0))))>=((CASE WHEN NULL THEN t0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN COUNT(*) THEN GROUP_CONCAT(SUM(t0.c0)) WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END, rt0.c3, GROUP_CONCAT(COUNT(TOTAL(TOTAL(rt0.c1))))))))) UNION ALL SELECT t0.c0, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c3, rt0.c1, rt0.c0 HAVING (((((COUNT(*), SUM(GROUP_CONCAT(rt0.c2)), (rt0.c3 IN (rt0.c3, rt0.c0))))>=((CASE WHEN NULL THEN t0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN COUNT(*) THEN GROUP_CONCAT(SUM(t0.c0)) WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END, rt0.c3, GROUP_CONCAT(COUNT(TOTAL(TOTAL(rt0.c1)))))))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 INNER JOIN t0 ON ((((0.5062992895009795)OR(t0.c0)))OR(t0.c0 COLLATE RTRIM));
SELECT rt0.c1, rt0.c0 FROM rt0 INNER JOIN t0 ON ((((0.5062992895009795)OR(t0.c0)))OR(t0.c0 COLLATE RTRIM)) WHERE ((NOT (((((rt0.c2)OR(rt0.c2)))AND(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 INNER JOIN t0 ON ((((0.5062992895009795)OR(t0.c0)))OR(t0.c0 COLLATE RTRIM)) WHERE ((NOT ((NOT (((((rt0.c2)OR(rt0.c2)))AND(rt0.c1))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 INNER JOIN t0 ON ((((0.5062992895009795)OR(t0.c0)))OR(t0.c0 COLLATE RTRIM)) WHERE ((((NOT (((((rt0.c2)OR(rt0.c2)))AND(rt0.c1))))) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0 INNER JOIN t0 ON ((((0.5062992895009795)OR(t0.c0)))OR(t0.c0 COLLATE RTRIM));
SELECT DISTINCT rt0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c0 FROM rt0, t0 WHERE ('2') UNION SELECT DISTINCT rt0.c0 FROM rt0, t0 WHERE ((NOT ('2'))) UNION SELECT DISTINCT rt0.c0 FROM rt0, t0 WHERE ((('2') ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, t0;
SELECT ALL t0.c0 FROM rt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM rt0, t0 WHERE (((CAST(rt0.c1 AS TEXT))IS(CAST(t0.c0 AS TEXT)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM rt0, t0 WHERE ((NOT (((CAST(rt0.c1 AS TEXT))IS(CAST(t0.c0 AS TEXT)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM rt0, t0 WHERE (((((CAST(rt0.c1 AS TEXT))IS(CAST(t0.c0 AS TEXT)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM rt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(CAST(t0.c0 AS BLOB) AS TEXT) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(CAST(t0.c0 AS BLOB) AS TEXT))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(CAST(t0.c0 AS BLOB) AS TEXT)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(CAST(t0.c0 AS BLOB) AS TEXT) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(CAST(t0.c0 AS BLOB) AS TEXT))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(CAST(t0.c0 AS BLOB) AS TEXT)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c3) IS FALSE) IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c3) IS FALSE) IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c3) IS FALSE) IN ())) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((NOT (rt0.c1)) IN ((~ (rt0.c1)), ((rt0.c0)>>(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((NOT (rt0.c1)) IN ((~ (rt0.c1)), ((rt0.c0)>>(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((NOT (rt0.c1)) IN ((~ (rt0.c1)), ((rt0.c0)>>(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (IFNULL(DISTINCT (((rt0.c3, rt0.c1, rt0.c3))<>((rt0.c2, rt0.c2, rt0.c2))), rt0.c0 COLLATE RTRIM)) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (IFNULL(DISTINCT (((rt0.c3, rt0.c1, rt0.c3))<>((rt0.c2, rt0.c2, rt0.c2))), rt0.c0 COLLATE RTRIM)))) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((IFNULL(DISTINCT (((rt0.c3, rt0.c1, rt0.c3))<>((rt0.c2, rt0.c2, rt0.c2))), rt0.c0 COLLATE RTRIM)) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c2, t0.c0, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c0, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, t0.c0, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c0, rt0.c3, rt0.c1, rt0.c0 HAVING COUNT(AVG(AVG(rt0.c3))) UNION ALL SELECT ALL rt0.c2, t0.c0, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c0, rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (COUNT(AVG(AVG(rt0.c3))))) UNION ALL SELECT rt0.c2, t0.c0, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c0, rt0.c3, rt0.c1, rt0.c0 HAVING ((COUNT(AVG(AVG(rt0.c3)))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((+ ((- (rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((+ ((- (rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((+ ((- (rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0 WHERE (CAST((~ (rt0.c1)) AS TEXT)) UNION SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (CAST((~ (rt0.c1)) AS TEXT)))) UNION SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0 WHERE (((CAST((~ (rt0.c1)) AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 WHERE ((NOT ((rt0.c1 IN ())))) GROUP BY rt0.c0, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 WHERE ((NOT ((NOT ((rt0.c1 IN ())))))) GROUP BY rt0.c0, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 WHERE ((((NOT ((rt0.c1 IN ())))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0;
SELECT rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0 HAVING MIN(AVG(rt0.c1)) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0 HAVING (NOT (MIN(AVG(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0 HAVING ((MIN(AVG(rt0.c1))) ISNULL);
SELECT MAX(HEX(CAST(rt0.c3 AS TEXT))) FROM rt0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((NULLIF(t0.c0, t0.c0))IS NOT(CAST(t0.c0 AS INTEGER)))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((NULLIF(t0.c0, t0.c0))IS NOT(CAST(t0.c0 AS INTEGER)))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((NULLIF(t0.c0, t0.c0))IS NOT(CAST(t0.c0 AS INTEGER)))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, t0.c0, rt0.c1 FROM rt0, t0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, t0.c0, rt0.c1 FROM rt0, t0 WHERE ('') UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, t0.c0, rt0.c1 FROM rt0, t0 WHERE ((NOT (''))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, t0.c0, rt0.c1 FROM rt0, t0 WHERE ((('') ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, t0.c0, rt0.c1 FROM rt0, t0;
SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c3 FROM t0, rt0 WHERE ((- (((rt0.c3) IS TRUE)))) GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c3 FROM t0, rt0 WHERE ((NOT ((- (((rt0.c3) IS TRUE)))))) GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c3 UNION SELECT rt0.c0, t0.c0, rt0.c1, rt0.c3 FROM t0, rt0 WHERE ((((- (((rt0.c3) IS TRUE)))) ISNULL)) GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c3;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((~ (AVG(t0.c0))))>=(TOTAL(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((~ (AVG(t0.c0))))>=(TOTAL(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((~ (AVG(t0.c0))))>=(TOTAL(t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((~ (AVG(t0.c0))))>=(TOTAL(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((~ (AVG(t0.c0))))>=(TOTAL(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((~ (AVG(t0.c0))))>=(TOTAL(t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (0X25c389ec) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (0x25c389ec))) UNION ALL SELECT ALL * FROM rt0 WHERE (((0x25c389ec) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 INNER JOIN t0 ON ((((rt0.c0) NOT NULL)) NOT NULL);
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 INNER JOIN t0 ON ((((rt0.c0) NOT NULL)) NOT NULL) WHERE ((+ (NULL COLLATE BINARY))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 INNER JOIN t0 ON ((((rt0.c0) NOT NULL)) NOT NULL) WHERE ((NOT ((+ (NULL COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 INNER JOIN t0 ON ((((rt0.c0) NOT NULL)) NOT NULL) WHERE ((((+ (NULL COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 INNER JOIN t0 ON ((((rt0.c0) NOT NULL)) NOT NULL);
SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE (CASE ((rt0.c3) ISNULL)  WHEN ((rt0.c0)-(rt0.c1)) THEN ((rt0.c0)-(rt0.c0)) END) GROUP BY rt0.c2, rt0.c3, rt0.c0 UNION SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (CASE ((rt0.c3) ISNULL)  WHEN ((rt0.c0)-(rt0.c1)) THEN ((rt0.c0)-(rt0.c0)) END))) GROUP BY rt0.c2, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE (((CASE ((rt0.c3) ISNULL)  WHEN ((rt0.c0)-(rt0.c1)) THEN ((rt0.c0)-(rt0.c0)) END) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2 HAVING MAX((MAX(rt0.c2) IN ())) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2 HAVING (NOT (MAX((MAX(rt0.c2) IN ())))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2 HAVING ((MAX((MAX(rt0.c2) IN ()))) ISNULL);
SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2 HAVING MAX((MAX(rt0.c2) IN ())) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2 HAVING (NOT (MAX((MAX(rt0.c2) IN ())))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2 HAVING ((MAX((MAX(rt0.c2) IN ()))) ISNULL);
SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2;
SELECT ALL MIN(((CAST(0.8205072237867301 AS REAL)) BETWEEN (LENGTH(rt0.c0)) AND (((rt0.c1)+(rt0.c1))))) FROM t0, rt0;
SELECT * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE (LIKELIHOOD(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)), 0.03937564488854106)) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (LIKELIHOOD(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)), 0.03937564488854106)))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((LIKELIHOOD(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)), 0.03937564488854106)) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0, t0 WHERE (x'') GROUP BY rt0.c3, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0, t0 WHERE ((NOT (x''))) GROUP BY rt0.c3, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0, t0 WHERE (((x'') ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG((~ (t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG((~ (t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG((~ (t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG((~ (t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG((~ (t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG((~ (t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0, t0;
SELECT rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((((rt0.c0))>=((rt0.c1))) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((NOT ((((rt0.c0))>=((rt0.c1))) COLLATE NOCASE))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((((((rt0.c0))>=((rt0.c1))) COLLATE NOCASE) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE (CAST(((((rt0.c2)AND(rt0.c2)))OR(NULL)) AS REAL)) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (CAST(((((rt0.c2)AND(rt0.c2)))OR(NULL)) AS REAL)))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE (((CAST(((((rt0.c2)AND(rt0.c2)))OR(NULL)) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2 FROM rt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (COALESCE(((((t0.c0)AND(t0.c0)))OR(t0.c0)), (+ (t0.c0)), ((t0.c0) IS FALSE), ((((t0.c0)AND(t0.c0)))OR(t0.c0)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (COALESCE(((((t0.c0)AND(t0.c0)))OR(t0.c0)), (+ (t0.c0)), ((t0.c0) IS FALSE), ((((t0.c0)AND(t0.c0)))OR(t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((COALESCE(((((t0.c0)AND(t0.c0)))OR(t0.c0)), (+ (t0.c0)), ((t0.c0) IS FALSE), ((((t0.c0)AND(t0.c0)))OR(t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(((COUNT(t0.c0))%(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(((COUNT(t0.c0))%(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(((COUNT(t0.c0))%(t0.c0)))) ISNULL);
SELECT t0.c0, rt0.c3, rt0.c1, rt0.c2 FROM t0, rt0;
SELECT t0.c0, rt0.c3, rt0.c1, rt0.c2 FROM t0, rt0 WHERE ((t0.c0 COLLATE RTRIM IN ())) UNION ALL SELECT t0.c0, rt0.c3, rt0.c1, rt0.c2 FROM t0, rt0 WHERE ((NOT ((t0.c0 COLLATE RTRIM IN ())))) UNION ALL SELECT ALL t0.c0, rt0.c3, rt0.c1, rt0.c2 FROM t0, rt0 WHERE ((((t0.c0 COLLATE RTRIM IN ())) ISNULL));
SELECT t0.c0, rt0.c3, rt0.c1, rt0.c2 FROM t0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, t0.c0 FROM t0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, t0.c0 FROM t0, rt0 WHERE (CAST(((rt0.c2) ISNULL) AS NUMERIC)) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, t0.c0 FROM t0, rt0 WHERE ((NOT (CAST(((rt0.c2) ISNULL) AS NUMERIC)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, t0.c0 FROM t0, rt0 WHERE (((CAST(((rt0.c2) ISNULL) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, t0.c0 FROM t0, rt0;
SELECT ALL rt0.c0 FROM rt0, t0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, t0 WHERE (COALESCE(1968917156 COLLATE BINARY, t0.c0, ((rt0.c2)%(rt0.c0)), ((rt0.c3) ISNULL))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, t0 WHERE ((NOT (COALESCE(1968917156 COLLATE BINARY, t0.c0, ((rt0.c2)%(rt0.c0)), ((rt0.c3) ISNULL))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, t0 WHERE (((COALESCE(1968917156 COLLATE BINARY, t0.c0, ((rt0.c2)%(rt0.c0)), ((rt0.c3) ISNULL))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, t0 GROUP BY rt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(AVG('')))>=(SUM(SUM(AVG('뱃)2B'))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((AVG(AVG('')))>=(SUM(SUM(AVG('뱃)2B'))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((AVG(AVG('')))>=(SUM(SUM(AVG('뱃)2B')))))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE (((ABS(DISTINCT rt0.c2)) IS TRUE)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (((ABS(DISTINCT rt0.c2)) IS TRUE)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE (((((ABS(DISTINCT rt0.c2)) IS TRUE)) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((- ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((- ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((- ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c1)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((rt0.c3)<>(t0.c0))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, t0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c1)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((rt0.c3)<>(t0.c0))))) WHERE (((((rt0.c0)AND(rt0.c2)))<(((rt0.c1) NOT NULL)))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, t0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c1)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((rt0.c3)!=(t0.c0))))) WHERE ((NOT (((((rt0.c0)AND(rt0.c2)))<(((rt0.c1) NOT NULL)))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, t0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c1)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((rt0.c3)!=(t0.c0))))) WHERE (((((((rt0.c0)AND(rt0.c2)))<(((rt0.c1) NOT NULL)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, t0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c1)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((rt0.c3)<>(t0.c0))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, t0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING TOTAL((((rt0.c0, rt0.c0, COUNT(*))) BETWEEN ((rt0.c1, rt0.c3, SUM(rt0.c0))) AND ((rt0.c3, rt0.c1, MAX(0.2629875905069118))))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING (NOT (TOTAL((((rt0.c0, rt0.c0, COUNT(*))) BETWEEN ((rt0.c1, rt0.c3, SUM(rt0.c0))) AND ((rt0.c3, rt0.c1, MAX(0.2629875905069118))))))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING ((TOTAL((((rt0.c0, rt0.c0, COUNT(*))) BETWEEN ((rt0.c1, rt0.c3, SUM(rt0.c0))) AND ((rt0.c3, rt0.c1, MAX(0.2629875905069118)))))) ISNULL);
SELECT ALL rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (((CAST(rt0.c3 AS REAL)) BETWEEN ((rt0.c2 IN ())) AND ((rt0.c2 IN (rt0.c1, rt0.c2))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((CAST(rt0.c3 AS REAL)) BETWEEN ((rt0.c2 IN ())) AND ((rt0.c2 IN (rt0.c1, rt0.c2))))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((((CAST(rt0.c3 AS REAL)) BETWEEN ((rt0.c2 IN ())) AND ((rt0.c2 IN (rt0.c1, rt0.c2))))) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON (((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) IS FALSE);
SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON (((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) IS FALSE) WHERE (0.8897109623485753) UNION SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON (((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) IS FALSE) WHERE ((NOT (0.8897109623485753))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON (((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) IS FALSE) WHERE (((0.8897109623485753) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON (((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) IS FALSE);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0) NOT NULL))<=(((t0.c0)>>(t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) NOT NULL))<=(((t0.c0)>>(t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((t0.c0) NOT NULL))<=(((t0.c0)>>(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c3 FROM rt0, t0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0, t0 GROUP BY rt0.c3 HAVING GROUP_CONCAT(((((((((MIN(rt0.c3))OR(x'')))AND(COUNT(*))))OR(MAX(rt0.c0))))OR(rt0.c1))) UNION ALL SELECT rt0.c3 FROM rt0, t0 GROUP BY rt0.c3 HAVING (NOT (GROUP_CONCAT(((((((((MIN(rt0.c3))OR(x'')))AND(COUNT(*))))OR(MAX(rt0.c0))))OR(rt0.c1))))) UNION ALL SELECT ALL rt0.c3 FROM rt0, t0 GROUP BY rt0.c3 HAVING ((GROUP_CONCAT(((((((((MIN(rt0.c3))OR(x'')))AND(COUNT(*))))OR(MAX(rt0.c0))))OR(rt0.c1)))) ISNULL);
SELECT rt0.c3, rt0.c0, rt0.c2, t0.c0 FROM rt0, t0;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, t0.c0 FROM rt0, t0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS REAL)) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2, t0.c0 FROM rt0, t0 WHERE ((NOT (CAST(CAST(rt0.c1 AS BLOB) AS REAL)))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2, t0.c0 FROM rt0, t0 WHERE (((CAST(CAST(rt0.c1 AS BLOB) AS REAL)) ISNULL));
SELECT rt0.c3, rt0.c0, rt0.c2, t0.c0 FROM rt0, t0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (rt0.c3) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON ((t0.c0) ISNULL) COLLATE BINARY GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON ((t0.c0) ISNULL) COLLATE BINARY WHERE (t0.c0) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON ((t0.c0) ISNULL) COLLATE BINARY WHERE ((NOT (t0.c0))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON ((t0.c0) ISNULL) COLLATE BINARY WHERE (((t0.c0) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON ((t0.c0) ISNULL) COLLATE BINARY GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING MIN(TOTAL(rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MIN(TOTAL(rt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MIN(TOTAL(rt0.c1))) ISNULL);
SELECT ALL rt0.c3, t0.c0, rt0.c0 FROM t0, rt0;
SELECT rt0.c3, t0.c0, rt0.c0 FROM t0, rt0 WHERE ((((rt0.c0 IN (x'')))<<(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 END))) UNION ALL SELECT ALL rt0.c3, t0.c0, rt0.c0 FROM t0, rt0 WHERE ((NOT ((((rt0.c0 IN (x'')))<<(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 END))))) UNION ALL SELECT rt0.c3, t0.c0, rt0.c0 FROM t0, rt0 WHERE ((((((rt0.c0 IN (x'')))<<(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 END))) ISNULL));
SELECT ALL rt0.c3, t0.c0, rt0.c0 FROM t0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((CAST(rt0.c3 AS REAL))AND(((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)))))OR((((x'')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((CAST(rt0.c3 AS REAL))AND(((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)))))OR((((x'')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((CAST(rt0.c3 AS REAL))AND(((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)))))OR((((x'')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(NULL AS REAL)) IS TRUE)) GROUP BY rt0.c3, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((CAST(NULL AS REAL)) IS TRUE)))) GROUP BY rt0.c3, rt0.c0, rt0.c2 UNION SELECT rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE (((((CAST(NULL AS REAL)) IS TRUE)) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2;
SELECT rt0.c3 FROM t0 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT ((rt0.c1)IS(rt0.c0))) GROUP BY rt0.c3;
SELECT rt0.c3 FROM t0 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT ((rt0.c1)IS(rt0.c0))) GROUP BY rt0.c3 HAVING ((((GROUP_CONCAT(t0.c0))|(rt0.c3)))IS NOT(COUNT(rt0.c2))) UNION ALL SELECT ALL rt0.c3 FROM t0 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT ((rt0.c1)IS(rt0.c0))) GROUP BY rt0.c3 HAVING (NOT (((((GROUP_CONCAT(t0.c0))|(rt0.c3)))IS NOT(COUNT(rt0.c2))))) UNION ALL SELECT ALL rt0.c3 FROM t0 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT ((rt0.c1)IS(rt0.c0))) GROUP BY rt0.c3 HAVING ((((((GROUP_CONCAT(t0.c0))|(rt0.c3)))IS NOT(COUNT(rt0.c2)))) ISNULL);
SELECT rt0.c3 FROM t0 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT ((rt0.c1)IS(rt0.c0))) GROUP BY rt0.c3;
SELECT rt0.c3 FROM t0 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT ((rt0.c1)IS(rt0.c0))) GROUP BY rt0.c3 HAVING ((((GROUP_CONCAT(t0.c0))|(rt0.c3)))IS NOT(COUNT(rt0.c2))) UNION ALL SELECT ALL rt0.c3 FROM t0 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT ((rt0.c1)IS(rt0.c0))) GROUP BY rt0.c3 HAVING (NOT (((((GROUP_CONCAT(t0.c0))|(rt0.c3)))IS NOT(COUNT(rt0.c2))))) UNION ALL SELECT ALL rt0.c3 FROM t0 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT ((rt0.c1)IS(rt0.c0))) GROUP BY rt0.c3 HAVING ((((((GROUP_CONCAT(t0.c0))|(rt0.c3)))IS NOT(COUNT(rt0.c2)))) ISNULL);
SELECT rt0.c3 FROM t0 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT ((rt0.c1)IS(rt0.c0))) GROUP BY rt0.c3;
SELECT MIN(CASE ((rt0.c1)>=(rt0.c0))  WHEN x'b281' THEN ((rt0.c2) IS FALSE) ELSE rt0.c3 COLLATE NOCASE END) FROM rt0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c0, '-523445330', rt0.c0)) NOT BETWEEN (((rt0.c2 IN ()), rt0.c2, ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))) AND ((TRIM(DISTINCT rt0.c1, rt0.c0), LOWER(rt0.c0), ((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c0, '-523445330', rt0.c0)) NOT BETWEEN (((rt0.c2 IN ()), rt0.c2, ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))) AND ((TRIM(DISTINCT rt0.c1, rt0.c0), LOWER(rt0.c0), ((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c0, '-523445330', rt0.c0)) NOT BETWEEN (((rt0.c2 IN ()), rt0.c2, ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))) AND ((TRIM(DISTINCT rt0.c1, rt0.c0), LOWER(rt0.c0), ((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (NULLIF(DISTINCT ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(x'')))AND(t0.c0)), t0.c0 COLLATE NOCASE)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (NULLIF(DISTINCT ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(x'')))AND(t0.c0)), t0.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM t0 WHERE (((NULLIF(DISTINCT ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(x'')))AND(t0.c0)), t0.c0 COLLATE NOCASE)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c0, rt0.c1, t0.c0 FROM rt0 CROSS JOIN t0 ON (+ ((~ (rt0.c2)))) GROUP BY rt0.c0, rt0.c1, t0.c0;
SELECT rt0.c0, rt0.c1, t0.c0 FROM rt0 CROSS JOIN t0 ON (+ ((~ (rt0.c2)))) WHERE (((MAX(rt0.c0, rt0.c0, rt0.c0, rt0.c1)) IS TRUE)) GROUP BY rt0.c0, rt0.c1, t0.c0 UNION SELECT ALL rt0.c0, rt0.c1, t0.c0 FROM rt0 CROSS JOIN t0 ON (+ ((~ (rt0.c2)))) WHERE ((NOT (((MAX(rt0.c0, rt0.c0, rt0.c0, rt0.c1)) IS TRUE)))) GROUP BY rt0.c0, rt0.c1, t0.c0 UNION SELECT ALL rt0.c0, rt0.c1, t0.c0 FROM rt0 CROSS JOIN t0 ON (+ ((~ (rt0.c2)))) WHERE (((((MAX(rt0.c0, rt0.c0, rt0.c0, rt0.c1)) IS TRUE)) ISNULL)) GROUP BY rt0.c0, rt0.c1, t0.c0;
SELECT rt0.c0, rt0.c1, t0.c0 FROM rt0 CROSS JOIN t0 ON (+ ((~ (rt0.c2)))) GROUP BY rt0.c0, rt0.c1, t0.c0;
SELECT t0.c0, rt0.c0, rt0.c3, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c3, rt0.c1;
SELECT t0.c0, rt0.c0, rt0.c3, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c3, rt0.c1 HAVING TOTAL(t0.c0) UNION ALL SELECT t0.c0, rt0.c0, rt0.c3, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c3, rt0.c1 HAVING (NOT (TOTAL(t0.c0))) UNION ALL SELECT t0.c0, rt0.c0, rt0.c3, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c3, rt0.c1 HAVING ((TOTAL(t0.c0)) ISNULL);
SELECT t0.c0, rt0.c0, rt0.c3, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c3, rt0.c1;
SELECT t0.c0, rt0.c0, rt0.c3, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c3, rt0.c1 HAVING TOTAL(t0.c0) UNION ALL SELECT t0.c0, rt0.c0, rt0.c3, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c3, rt0.c1 HAVING (NOT (TOTAL(t0.c0))) UNION ALL SELECT t0.c0, rt0.c0, rt0.c3, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c3, rt0.c1 HAVING ((TOTAL(t0.c0)) ISNULL);
SELECT t0.c0, rt0.c0, rt0.c3, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c0, rt0.c3, t0.c0 FROM t0, rt0;
SELECT rt0.c0, rt0.c3, t0.c0 FROM t0, rt0 WHERE (((((((rt0.c2)<=('-1134752906')))OR(ABS(t0.c0))))AND((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c3)) AND ((rt0.c3, rt0.c1, t0.c0)))))) UNION ALL SELECT rt0.c0, rt0.c3, t0.c0 FROM t0, rt0 WHERE ((NOT (((((((rt0.c2)<=('-1134752906')))OR(ABS(t0.c0))))AND((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c3)) AND ((rt0.c3, rt0.c1, t0.c0)))))))) UNION ALL SELECT ALL rt0.c0, rt0.c3, t0.c0 FROM t0, rt0 WHERE (((((((((rt0.c2)<=('-1134752906')))OR(ABS(t0.c0))))AND((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c3)) AND ((rt0.c3, rt0.c1, t0.c0)))))) ISNULL));
SELECT rt0.c0, rt0.c3, t0.c0 FROM t0, rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((((((((((t0.c0)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c3))) NOT BETWEEN ('-1773831833') AND (((t0.c0)>=(t0.c0))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((((((((((t0.c0)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c3))) NOT BETWEEN ('-1773831833') AND (((t0.c0)>=(t0.c0))))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((((((((((t0.c0)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c3))) NOT BETWEEN ('-1773831833') AND (((t0.c0)>=(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON ((MIN(rt0.c1, t0.c0, rt0.c0, rt0.c3)) IS TRUE) GROUP BY rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON ((MIN(rt0.c1, t0.c0, rt0.c0, rt0.c3)) IS TRUE) WHERE (rt0.c0) GROUP BY rt0.c3, rt0.c0, rt0.c2 UNION SELECT rt0.c3, rt0.c0, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON ((MIN(rt0.c1, t0.c0, rt0.c0, rt0.c3)) IS TRUE) WHERE ((NOT (rt0.c0))) GROUP BY rt0.c3, rt0.c0, rt0.c2 UNION SELECT rt0.c3, rt0.c0, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON ((MIN(rt0.c1, t0.c0, rt0.c0, rt0.c3)) IS TRUE) WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON ((MIN(rt0.c1, t0.c0, rt0.c0, rt0.c3)) IS TRUE) GROUP BY rt0.c3, rt0.c0, rt0.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(CASE WHEN AVG(t0.c0) THEN MAX(TOTAL(t0.c0)) ELSE t0.c0 END) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(CASE WHEN AVG(t0.c0) THEN MAX(TOTAL(t0.c0)) ELSE t0.c0 END))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(CASE WHEN AVG(t0.c0) THEN MAX(TOTAL(t0.c0)) ELSE t0.c0 END)) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)AND(CAST(rt0.c1 AS INTEGER))))OR(rt0.c0))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c3)AND(CAST(rt0.c1 AS INTEGER))))OR(rt0.c0))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c3)AND(CAST(rt0.c1 AS INTEGER))))OR(rt0.c0))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (((((((((((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c3)))AND(x'fafd')))OR(t0.c0)))AND(rt0.c2)))AND((~ (rt0.c0)))))AND(LIKELY(rt0.c1)))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (((((((((((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c3)))AND(x'fafd')))OR(t0.c0)))AND(rt0.c2)))AND((~ (rt0.c0)))))AND(LIKELY(rt0.c1)))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((((((((((((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c3)))AND(x'fafd')))OR(t0.c0)))AND(rt0.c2)))AND((~ (rt0.c0)))))AND(LIKELY(rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3;
SELECT rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (((rt0.c0)>>(rt0.c3))))) GROUP BY rt0.c0, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT ((NOT (((rt0.c0)>>(rt0.c3))))))) GROUP BY rt0.c0, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c3 FROM rt0 WHERE ((((NOT (((rt0.c0)>>(rt0.c3))))) ISNULL)) GROUP BY rt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3;
SELECT rt0.c2, t0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c1;
SELECT ALL rt0.c2, t0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c1 HAVING NULLIF(((rt0.c3) ISNULL), COUNT(COUNT(AVG(TOTAL(rt0.c3))))) UNION ALL SELECT ALL rt0.c2, t0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c1 HAVING (NOT (NULLIF(((rt0.c3) ISNULL), COUNT(COUNT(AVG(TOTAL(rt0.c3))))))) UNION ALL SELECT ALL rt0.c2, t0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c1 HAVING ((NULLIF(((rt0.c3) ISNULL), COUNT(COUNT(AVG(TOTAL(rt0.c3)))))) ISNULL);
SELECT ALL rt0.c3, rt0.c0, t0.c0 FROM rt0, t0;
SELECT ALL rt0.c3, rt0.c0, t0.c0 FROM rt0, t0 WHERE ((((t0.c0)) BETWEEN ((CAST(rt0.c3 AS NUMERIC))) AND ((CAST(rt0.c0 AS BLOB))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, t0.c0 FROM rt0, t0 WHERE ((NOT ((((t0.c0)) BETWEEN ((CAST(rt0.c3 AS NUMERIC))) AND ((CAST(rt0.c0 AS BLOB))))))) UNION ALL SELECT rt0.c3, rt0.c0, t0.c0 FROM rt0, t0 WHERE ((((((t0.c0)) BETWEEN ((CAST(rt0.c3 AS NUMERIC))) AND ((CAST(rt0.c0 AS BLOB))))) ISNULL));
SELECT ALL rt0.c3, rt0.c0, t0.c0 FROM rt0, t0;
SELECT DISTINCT t0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0, t0;
SELECT DISTINCT t0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0, t0 WHERE (CAST(((rt0.c0) ISNULL) AS NUMERIC)) UNION SELECT DISTINCT t0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0, t0 WHERE ((NOT (CAST(((rt0.c0) ISNULL) AS NUMERIC)))) UNION SELECT DISTINCT t0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0, t0 WHERE (((CAST(((rt0.c0) ISNULL) AS NUMERIC)) ISNULL));
SELECT DISTINCT t0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0, t0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NULLIF(rt0.c0, rt0.c1) IN ())) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((NULLIF(rt0.c0, rt0.c1) IN ())))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((((NULLIF(rt0.c0, rt0.c1) IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3 HAVING (((rt0.c1)) NOT BETWEEN ((TOTAL(rt0.c1))) AND ((((GROUP_CONCAT(rt0.c3))/(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3 HAVING (NOT ((((rt0.c1)) NOT BETWEEN ((TOTAL(rt0.c1))) AND ((((GROUP_CONCAT(rt0.c3))/(rt0.c1))))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3 HAVING (((((rt0.c1)) NOT BETWEEN ((TOTAL(rt0.c1))) AND ((((GROUP_CONCAT(rt0.c3))/(rt0.c1)))))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3 HAVING (((rt0.c1)) NOT BETWEEN ((TOTAL(rt0.c1))) AND ((((GROUP_CONCAT(rt0.c3))/(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3 HAVING (NOT ((((rt0.c1)) NOT BETWEEN ((TOTAL(rt0.c1))) AND ((((GROUP_CONCAT(rt0.c3))/(rt0.c1))))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3 HAVING (((((rt0.c1)) NOT BETWEEN ((TOTAL(rt0.c1))) AND ((((GROUP_CONCAT(rt0.c3))/(rt0.c1)))))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT ALL * FROM t0, rt0;
SELECT ALL * FROM t0, rt0 WHERE (CAST(((rt0.c2)IS(t0.c0)) AS INTEGER)) UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT (CAST(((rt0.c2)IS(t0.c0)) AS INTEGER)))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE (((CAST(((rt0.c2)IS(t0.c0)) AS INTEGER)) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE ((((rt0.c2 IN ())) IS TRUE)) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE ((NOT ((((rt0.c2 IN ())) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2 IN ())) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 WHERE (rt0.c0 COLLATE NOCASE) GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c0 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 WHERE ((NOT (rt0.c0 COLLATE NOCASE))) GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c0 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 WHERE (((rt0.c0 COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c0;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING MIN(TOTAL(GROUP_CONCAT(TOTAL(rt0.c2)))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (MIN(TOTAL(GROUP_CONCAT(TOTAL(rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING ((MIN(TOTAL(GROUP_CONCAT(TOTAL(rt0.c2))))) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (((((((rt0.c3)AND(rt0.c2)))AND(rt0.c3))) ISNULL)) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c3)AND(rt0.c2)))AND(rt0.c3))) ISNULL)))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c3))) ISNULL)) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (CASE LENGTH(rt0.c0)  WHEN ((rt0.c3) IS TRUE) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 END ELSE (- (rt0.c3)) END) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CASE LENGTH(rt0.c0)  WHEN ((rt0.c3) IS TRUE) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 END ELSE (- (rt0.c3)) END))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE LENGTH(rt0.c0)  WHEN ((rt0.c3) IS TRUE) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 END ELSE (- (rt0.c3)) END) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((((t0.c0)<>(rt0.c2)))/(((rt0.c0)>(rt0.c0)))) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2, t0.c0;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((((t0.c0)!=(rt0.c2)))/(((rt0.c0)>(rt0.c0)))) WHERE (rt0.c3) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2, t0.c0 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((((t0.c0)!=(rt0.c2)))/(((rt0.c0)>(rt0.c0)))) WHERE ((NOT (rt0.c3))) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2, t0.c0 UNION SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((((t0.c0)!=(rt0.c2)))/(((rt0.c0)>(rt0.c0)))) WHERE (((rt0.c3) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2, t0.c0;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((((t0.c0)<>(rt0.c2)))/(((rt0.c0)>(rt0.c0)))) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2, t0.c0;
SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0 HAVING TOTAL(((rt0.c3) BETWEEN (MAX(t0.c0)) AND (MAX(rt0.c3)))) UNION ALL SELECT ALL rt0.c0 FROM t0, rt0 GROUP BY rt0.c0 HAVING (NOT (TOTAL(((rt0.c3) BETWEEN (MAX(t0.c0)) AND (MAX(rt0.c3)))))) UNION ALL SELECT rt0.c0 FROM t0, rt0 NOT INDEXED GROUP BY rt0.c0 HAVING ((TOTAL(((rt0.c3) BETWEEN (MAX(t0.c0)) AND (MAX(rt0.c3))))) ISNULL);
SELECT ALL * FROM t0 NATURAL JOIN rt0;
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (TOTAL_CHANGES()) UNION ALL SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE ((NOT (TOTAL_CHANGES()))) UNION ALL SELECT * FROM t0 NATURAL JOIN rt0 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT ALL * FROM t0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((((rt0.c2)AND(TOTAL_CHANGES())))AND((~ (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((((rt0.c2)AND(TOTAL_CHANGES())))AND((~ (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((((rt0.c2)AND(TOTAL_CHANGES())))AND((~ (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 WHERE (CAST(rt0.c2 AS REAL) COLLATE NOCASE) GROUP BY rt0.c3, rt0.c1 UNION SELECT rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (CAST(rt0.c2 AS REAL) COLLATE NOCASE))) GROUP BY rt0.c3, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c1 FROM rt0 WHERE (((CAST(rt0.c2 AS REAL) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(t0.c0)) IS FALSE) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((COUNT(t0.c0)) IS FALSE))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((COUNT(t0.c0)) IS FALSE)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(t0.c0)) IS FALSE) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((COUNT(t0.c0)) IS FALSE))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((COUNT(t0.c0)) IS FALSE)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c1 AS INTEGER) AS NUMERIC)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c1 AS INTEGER) AS NUMERIC)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(CAST(rt0.c1 AS INTEGER) AS NUMERIC)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 WHERE ((~ ((rt0.c2 IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 WHERE ((NOT ((~ ((rt0.c2 IN ())))))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 WHERE ((((~ ((rt0.c2 IN ())))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0;
SELECT rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, t0 WHERE (rt0.c2) GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1 UNION SELECT rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, t0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1 UNION SELECT rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, t0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((0.24091661910445838) IS FALSE)) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((0.24091661910445838) IS FALSE)))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((0.24091661910445838) IS FALSE)) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN t0 WHERE (('-228245458' IN ())) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN t0 WHERE ((NOT (('-228245458' IN ())))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN t0 WHERE (((('-228245458' IN ())) ISNULL));
SELECT DISTINCT * FROM rt0 NATURAL JOIN t0;
SELECT rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN t0 WHERE (rt0.c2) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN t0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN t0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING CAST((NOT (rt0.c1)) AS BLOB) UNION ALL SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING (NOT (CAST((NOT (rt0.c1)) AS BLOB))) UNION ALL SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING ((CAST((NOT (rt0.c1)) AS BLOB)) ISNULL);
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING CAST((NOT (rt0.c1)) AS BLOB) UNION ALL SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING (NOT (CAST((NOT (rt0.c1)) AS BLOB))) UNION ALL SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING ((CAST((NOT (rt0.c1)) AS BLOB)) ISNULL);
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0) IS TRUE))AND(CAST(rt0.c0 AS REAL))))OR(((rt0.c1) ISNULL)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((rt0.c0) IS TRUE))AND(CAST(rt0.c0 AS REAL))))OR(((rt0.c1) ISNULL)))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((rt0.c0) IS TRUE))AND(CAST(rt0.c0 AS REAL))))OR(((rt0.c1) ISNULL)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE ((((NOT (rt0.c1))) IS TRUE)) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT ((((NOT (rt0.c1))) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((((((NOT (rt0.c1))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT rt0.c2, rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, t0.c0;
SELECT rt0.c2, rt0.c0, t0.c0 FROM t0, rt0 WHERE ((- (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN t0.c0 THEN t0.c0 END))) GROUP BY rt0.c2, rt0.c0, t0.c0 UNION SELECT ALL rt0.c2, rt0.c0, t0.c0 FROM t0, rt0 WHERE ((NOT ((- (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN t0.c0 THEN t0.c0 END))))) GROUP BY rt0.c2, rt0.c0, t0.c0 UNION SELECT rt0.c2, rt0.c0, t0.c0 FROM t0, rt0 WHERE ((((- (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN t0.c0 THEN t0.c0 END))) ISNULL)) GROUP BY rt0.c2, rt0.c0, t0.c0;
SELECT rt0.c2, rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, t0.c0;
SELECT ALL rt0.c0, rt0.c3, t0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c3, t0.c0, rt0.c1;
SELECT rt0.c0, rt0.c3, t0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c3, t0.c0, rt0.c1 HAVING MAX(((TOTAL(rt0.c3))+(COUNT(*)))) UNION ALL SELECT rt0.c0, rt0.c3, t0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c3, t0.c0, rt0.c1 HAVING (NOT (MAX(((TOTAL(rt0.c3))+(COUNT(*)))))) UNION ALL SELECT rt0.c0, rt0.c3, t0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c3, t0.c0, rt0.c1 HAVING ((MAX(((TOTAL(rt0.c3))+(COUNT(*))))) ISNULL);
SELECT ALL MAX(CASE ((t0.c0) IS TRUE)  WHEN ((t0.c0)GLOB(t0.c0)) THEN (t0.c0 IN ()) ELSE t0.c0 END) FROM t0 ORDER BY UNLIKELY(DISTINCT t0.c0)  NULLS FIRST, (((t0.c0)) NOT BETWEEN (((((t0.c0))<>((t0.c0))))) AND (((- (t0.c0))))), ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)/(((t0.c0)>(''))))  NULLS LAST;
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0))<>((t0.c0))) IN ())) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0))!=((t0.c0))) IN ())))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((((t0.c0))<>((t0.c0))) IN ())) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (CAST(rt0.c0 COLLATE BINARY AS BLOB)) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (CAST(rt0.c0 COLLATE BINARY AS BLOB)))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((CAST(rt0.c0 COLLATE BINARY AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT ALL t0.c0, rt0.c2, rt0.c3 FROM t0 RIGHT OUTER JOIN rt0 ON (((~ (t0.c0)))<<(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))) GROUP BY t0.c0, rt0.c2, rt0.c3;
SELECT ALL t0.c0, rt0.c2, rt0.c3 FROM t0 RIGHT OUTER JOIN rt0 ON (((~ (t0.c0)))<<(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))) WHERE (x'b835') GROUP BY t0.c0, rt0.c2, rt0.c3 UNION SELECT t0.c0, rt0.c2, rt0.c3 FROM t0 RIGHT OUTER JOIN rt0 ON (((~ (t0.c0)))<<(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))) WHERE ((NOT (x'b835'))) GROUP BY t0.c0, rt0.c2, rt0.c3 UNION SELECT t0.c0, rt0.c2, rt0.c3 FROM t0 RIGHT OUTER JOIN rt0 ON (((~ (t0.c0)))<<(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))) WHERE (((x'b835') ISNULL)) GROUP BY t0.c0, rt0.c2, rt0.c3;
SELECT ALL t0.c0, rt0.c2, rt0.c3 FROM t0 RIGHT OUTER JOIN rt0 ON (((~ (t0.c0)))<<(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))) GROUP BY t0.c0, rt0.c2, rt0.c3;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((COUNT(GROUP_CONCAT(t0.c0)))) NOT BETWEEN ((CAST(TOTAL(t0.c0) AS REAL))) AND ((t0.c0 COLLATE RTRIM))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((COUNT(GROUP_CONCAT(t0.c0)))) NOT BETWEEN ((CAST(TOTAL(t0.c0) AS REAL))) AND ((t0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((COUNT(GROUP_CONCAT(t0.c0)))) NOT BETWEEN ((CAST(TOTAL(t0.c0) AS REAL))) AND ((t0.c0 COLLATE RTRIM)))) ISNULL);
SELECT rt0.c2 FROM t0, rt0;
SELECT rt0.c2 FROM t0, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN 'VD' THEN rt0.c3 ELSE rt0.c1 END) BETWEEN ((NOT (rt0.c0))) AND (CAST(rt0.c1 AS BLOB)))) ORDER BY rt0.c3  NULLS FIRST, 0X7ac7c934 ASC;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0, rt0.c1, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON LIKE(((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c3)))OR(x'3b31')))OR(rt0.c3)), ((rt0.c3) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0, rt0.c1, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON LIKE(((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c3)))OR(x'3b31')))OR(rt0.c3)), ((rt0.c3) ISNULL)) WHERE ((((((-4.48369748E8, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, t0.c0)) AND ((rt0.c0, t0.c0, rt0.c1)))) IS TRUE)) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0, rt0.c1, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON LIKE(((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c3)))OR(x'3b31')))OR(rt0.c3)), ((rt0.c3) ISNULL)) WHERE ((NOT ((((((-4.48369748E8, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, t0.c0)) AND ((rt0.c0, t0.c0, rt0.c1)))) IS TRUE)))) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0, rt0.c1, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON LIKE(((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c3)))OR(x'3b31')))OR(rt0.c3)), ((rt0.c3) ISNULL)) WHERE ((((((((-4.48369748E8, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, t0.c0)) AND ((rt0.c0, t0.c0, rt0.c1)))) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c0, rt0.c1, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON LIKE(((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c3)))OR(x'3b31')))OR(rt0.c3)), ((rt0.c3) ISNULL));
SELECT rt0.c2, rt0.c3 FROM rt0, t0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM rt0, t0 WHERE ((((rt0.c1, rt0.c0, rt0.c3)) NOT BETWEEN ((NULL COLLATE NOCASE, ((rt0.c3)OR(rt0.c0)), CASE rt0.c0  WHEN NULL THEN rt0.c1 END)) AND ((((rt0.c0)AND(rt0.c2)), ((rt0.c0)<<(rt0.c1)), CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 END)))) GROUP BY rt0.c2, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c3 FROM rt0, t0 WHERE ((NOT ((((rt0.c1, rt0.c0, rt0.c3)) NOT BETWEEN ((NULL COLLATE NOCASE, ((rt0.c3)OR(rt0.c0)), CASE rt0.c0  WHEN NULL THEN rt0.c1 END)) AND ((((rt0.c0)AND(rt0.c2)), ((rt0.c0)<<(rt0.c1)), CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 END)))))) GROUP BY rt0.c2, rt0.c3 UNION SELECT rt0.c2, rt0.c3 FROM rt0, t0 WHERE ((((((rt0.c1, rt0.c0, rt0.c3)) NOT BETWEEN ((NULL COLLATE NOCASE, ((rt0.c3)OR(rt0.c0)), CASE rt0.c0  WHEN NULL THEN rt0.c1 END)) AND ((((rt0.c0)AND(rt0.c2)), ((rt0.c0)<<(rt0.c1)), CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 END)))) ISNULL)) GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0, t0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CAST(rt0.c3 AS NUMERIC)) BETWEEN ((GROUP_CONCAT(rt0.c0) IN ())) AND (MAX(rt0.c2, rt0.c2))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((CAST(rt0.c3 AS NUMERIC)) BETWEEN ((GROUP_CONCAT(rt0.c0) IN ())) AND (MAX(rt0.c2, rt0.c2))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((CAST(rt0.c3 AS NUMERIC)) BETWEEN ((GROUP_CONCAT(rt0.c0) IN ())) AND (MAX(rt0.c2, rt0.c2)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CAST(rt0.c3 AS NUMERIC)) BETWEEN ((GROUP_CONCAT(rt0.c0) IN ())) AND (MAX(rt0.c2, rt0.c2))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((CAST(rt0.c3 AS NUMERIC)) BETWEEN ((GROUP_CONCAT(rt0.c0) IN ())) AND (MAX(rt0.c2, rt0.c2))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((CAST(rt0.c3 AS NUMERIC)) BETWEEN ((GROUP_CONCAT(rt0.c0) IN ())) AND (MAX(rt0.c2, rt0.c2)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT MAX((- (rt0.c0))) FROM rt0 ORDER BY (((rt0.c3)) BETWEEN ((((rt0.c3)/(rt0.c2)))) AND (((rt0.c1 IN ())))) ASC  NULLS FIRST;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE BINARY) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CAST(t0.c0 AS INTEGER) COLLATE BINARY))) UNION ALL SELECT * FROM t0 WHERE (((CAST(t0.c0 AS INTEGER) COLLATE BINARY) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c1 AS REAL))OR((+ (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS REAL))OR((+ (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c1 AS REAL))OR((+ (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, t0.c0;
SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2, t0.c0 FROM t0, rt0 WHERE (CAST(rt0.c0 AS BLOB)) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, t0.c0 UNION SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2, t0.c0 FROM t0, rt0 WHERE ((NOT (CAST(rt0.c0 AS BLOB)))) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, t0.c0 UNION SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2, t0.c0 FROM t0, rt0 WHERE (((CAST(rt0.c0 AS BLOB)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, t0.c0;
SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, t0.c0;
SELECT t0.c0, rt0.c3, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c3, rt0.c1;
SELECT t0.c0, rt0.c3, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c3, rt0.c1 HAVING 0.34749993227297604 UNION ALL SELECT t0.c0, rt0.c3, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c3, rt0.c1 HAVING (NOT (0.34749993227297604)) UNION ALL SELECT t0.c0, rt0.c3, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c3, rt0.c1 HAVING ((0.34749993227297604) ISNULL);
SELECT t0.c0, rt0.c3, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c3, rt0.c1;
SELECT t0.c0, rt0.c3, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c3, rt0.c1 HAVING 0.34749993227297604 UNION ALL SELECT t0.c0, rt0.c3, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c3, rt0.c1 HAVING (NOT (0.34749993227297604)) UNION ALL SELECT t0.c0, rt0.c3, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c3, rt0.c1 HAVING ((0.34749993227297604) ISNULL);
SELECT t0.c0, rt0.c3, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c3, rt0.c1;
SELECT * FROM t0, rt0;
SELECT ALL * FROM t0, rt0 WHERE ((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((HEX(NULL))))) UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((HEX(NULL))))))) UNION ALL SELECT * FROM t0, rt0 WHERE ((((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((HEX(NULL))))) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt0.c3, rt0.c1, t0.c0, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c3, rt0.c1, t0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, t0.c0, rt0.c0, rt0.c2 FROM rt0, t0 WHERE (((((rt0.c3) IS FALSE))<(((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0))))) GROUP BY rt0.c3, rt0.c1, t0.c0, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c1, t0.c0, rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((NOT (((((rt0.c3) IS FALSE))<(((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0))))))) GROUP BY rt0.c3, rt0.c1, t0.c0, rt0.c0, rt0.c2 UNION SELECT rt0.c3, rt0.c1, t0.c0, rt0.c0, rt0.c2 FROM rt0, t0 WHERE (((((((rt0.c3) IS FALSE))<(((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0))))) ISNULL)) GROUP BY rt0.c3, rt0.c1, t0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, t0.c0, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c3, rt0.c1, t0.c0, rt0.c0, rt0.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(CASE t0.c0  WHEN t0.c0 THEN TOTAL(SUM(AVG(AVG(TOTAL(t0.c0))))) WHEN t0.c0 THEN MIN(SUM(t0.c0)) WHEN TOTAL(t0.c0) THEN MIN(t0.c0) ELSE t0.c0 END) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(CASE t0.c0  WHEN t0.c0 THEN TOTAL(SUM(AVG(AVG(TOTAL(t0.c0))))) WHEN t0.c0 THEN MIN(SUM(t0.c0)) WHEN TOTAL(t0.c0) THEN MIN(t0.c0) ELSE t0.c0 END))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(CASE t0.c0  WHEN t0.c0 THEN TOTAL(SUM(AVG(AVG(TOTAL(t0.c0))))) WHEN t0.c0 THEN MIN(SUM(t0.c0)) WHEN TOTAL(t0.c0) THEN MIN(t0.c0) ELSE t0.c0 END)) ISNULL);
SELECT ALL t0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0, t0;
SELECT ALL t0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((NOT ((NOT (rt0.c0))))) UNION ALL SELECT t0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((NOT ((NOT ((NOT (rt0.c0))))))) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((((NOT ((NOT (rt0.c0))))) ISNULL));
SELECT ALL t0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0, t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM)AND(-6.53816129E8)))AND(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0 COLLATE RTRIM)AND(-6.53816129E8)))AND(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0 COLLATE RTRIM)AND(-6.53816129E8)))AND(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 HAVING AVG((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))) UNION ALL SELECT ALL rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 HAVING (NOT (AVG((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 HAVING ((AVG((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))) ISNULL);
SELECT ALL rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 HAVING AVG((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))) UNION ALL SELECT ALL rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 HAVING (NOT (AVG((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 HAVING ((AVG((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))) ISNULL);
SELECT ALL rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c3, rt0.c2, t0.c0, rt0.c0, rt0.c1;
SELECT MAX(CAST(((rt0.c1)IS(rt0.c1)) AS NUMERIC)) FROM rt0;
SELECT * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE (((0.11400395097120708)/(json_object(t0.c0, rt0.c0)))) UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT (((0.11400395097120708)/(json_object(t0.c0, rt0.c0)))))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE (((((0.11400395097120708)/(json_object(t0.c0, rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (CAST((- (rt0.c2)) AS INTEGER)) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (CAST((- (rt0.c2)) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((CAST((- (rt0.c2)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((~ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((~ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((~ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(((((((((TOTAL(t0.c0))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(GROUP_CONCAT(SUM(TOTAL(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(((((((((TOTAL(t0.c0))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(GROUP_CONCAT(SUM(TOTAL(t0.c0)))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(((((((((TOTAL(t0.c0))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(GROUP_CONCAT(SUM(TOTAL(t0.c0))))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (((rt0.c2)GLOB(rt0.c3))) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (((rt0.c2)GLOB(rt0.c3))) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (((rt0.c2)GLOB(rt0.c3))) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((t0.c0 IN ())) BETWEEN (CAST(t0.c0 AS REAL)) AND (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0 IN ())) BETWEEN (CAST(t0.c0 AS REAL)) AND (t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0 IN ())) BETWEEN (CAST(t0.c0 AS REAL)) AND (t0.c0))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (json_object(((t0.c0) NOTNULL), t0.c0 COLLATE BINARY, MAX(t0.c0, t0.c0), (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (json_object(((t0.c0) NOTNULL), t0.c0 COLLATE BINARY, MAX(t0.c0, t0.c0), (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((json_object(((t0.c0) NOTNULL), t0.c0 COLLATE BINARY, MAX(t0.c0, t0.c0), (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(COUNT(*))) NOT NULL) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((TOTAL(COUNT(*))) NOT NULL))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((TOTAL(COUNT(*))) NOT NULL)) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((CAST(t0.c0 AS REAL))IS(t0.c0))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((CAST(t0.c0 AS REAL))IS(t0.c0))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((CAST(t0.c0 AS REAL))IS(t0.c0))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(t0.c0 AS REAL)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(t0.c0 AS REAL)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS REAL)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE WHEN ((t0.c0)*(t0.c0)) THEN ((t0.c0) NOTNULL) END) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE WHEN ((t0.c0)*(t0.c0)) THEN ((t0.c0) NOTNULL) END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CASE WHEN ((t0.c0)*(t0.c0)) THEN ((t0.c0) NOTNULL) END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, t0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, t0.c0 HAVING AVG((((rt0.c2))=((COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, t0.c0 HAVING (NOT (AVG((((rt0.c2))=((COUNT(*))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, t0.c0 HAVING ((AVG((((rt0.c2))==((COUNT(*)))))) ISNULL);
SELECT ALL rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c0))) BETWEEN (CAST(0.9833530470591616 AS TEXT)) AND ((NOT (rt0.c3))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c0))) BETWEEN (CAST(0.9833530470591616 AS TEXT)) AND ((NOT (rt0.c3))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c0))) BETWEEN (CAST(0.9833530470591616 AS TEXT)) AND ((NOT (rt0.c3))))) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE (rt0.c3) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2 FROM rt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0) NOTNULL))AND((t0.c0 IN (t0.c0, t0.c0, t0.c0)))))AND(CAST(t0.c0 AS TEXT)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((((t0.c0) NOTNULL))AND((t0.c0 IN (t0.c0, t0.c0, t0.c0)))))AND(CAST(t0.c0 AS TEXT)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((((t0.c0) NOTNULL))AND((t0.c0 IN (t0.c0, t0.c0, t0.c0)))))AND(CAST(t0.c0 AS TEXT)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING GROUP_CONCAT(COUNT(rt0.c0)) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (GROUP_CONCAT(COUNT(rt0.c0)))) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((GROUP_CONCAT(COUNT(rt0.c0))) ISNULL);
SELECT ALL SUM(IFNULL((((t0.c0))<((rt0.c0))), (((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c2, '610968821'))))) FROM t0, rt0 ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT ALL * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE ((((CAST(rt0.c1 AS NUMERIC)))>(('9ii.2')))) UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT ((((CAST(rt0.c1 AS NUMERIC)))>(('9ii.2')))))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((((((CAST(rt0.c1 AS NUMERIC)))>(('9ii.2')))) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT * FROM rt0 NOT INDEXED, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE ((+ (((t0.c0)IS NOT(rt0.c3))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT ((+ (((t0.c0)IS NOT(rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((((+ (((t0.c0)IS NOT(rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt0 NOT INDEXED, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((0X213c93ec) BETWEEN (((t0.c0) ISNULL)) AND ((((t0.c0))!=((t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((0x213c93ec) BETWEEN (((t0.c0) ISNULL)) AND ((((t0.c0))<>((t0.c0)))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((0X213c93ec) BETWEEN (((t0.c0) ISNULL)) AND ((((t0.c0))<>((t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(CASE WHEN t0.c0 THEN t0.c0 END) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(CASE WHEN t0.c0 THEN t0.c0 END))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(CASE WHEN t0.c0 THEN t0.c0 END)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(CASE WHEN t0.c0 THEN t0.c0 END) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(CASE WHEN t0.c0 THEN t0.c0 END))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(CASE WHEN t0.c0 THEN t0.c0 END)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((t0.c0) BETWEEN ((+ (t0.c0))) AND ((t0.c0 IN (t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((t0.c0) BETWEEN ((+ (t0.c0))) AND ((t0.c0 IN (t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((t0.c0) BETWEEN ((+ (t0.c0))) AND ((t0.c0 IN (t0.c0))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) IS FALSE))||(LAST_INSERT_ROWID()))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1) IS FALSE))||(LAST_INSERT_ROWID()))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1) IS FALSE))||(LAST_INSERT_ROWID()))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c3, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c0, rt0.c3, rt0.c1 FROM rt0, t0 WHERE (CASE WHEN (+ (0xffffffffa05a0340)) THEN (+ (rt0.c3)) END) GROUP BY rt0.c0, rt0.c3, rt0.c1 UNION SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0, t0 NOT INDEXED WHERE ((NOT (CASE WHEN (+ (0Xffffffffa05a0340)) THEN (+ (rt0.c3)) END))) GROUP BY rt0.c0, rt0.c3, rt0.c1 UNION SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0, t0 WHERE (((CASE WHEN (+ (0xffffffffa05a0340)) THEN (+ (rt0.c3)) END) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c0, rt0.c3, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c3, rt0.c1, t0.c0;
SELECT ALL rt0.c3, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c3, rt0.c1, t0.c0 HAVING CASE (((MAX(rt0.c3), MAX(rt0.c0), rt0.c2, MIN(rt0.c1), rt0.c2)) NOT BETWEEN ((AVG(rt0.c3), COUNT(*), rt0.c0, SUM(rt0.c2), '-1927549573')) AND ((COUNT(*), MAX(rt0.c3), x'c4a0', GROUP_CONCAT(rt0.c0), rt0.c0)))  WHEN CAST(rt0.c2 AS NUMERIC) THEN COUNT(*) WHEN AVG(SUM(TOTAL(COUNT(*)))) THEN GROUP_CONCAT(MIN(AVG(x''))) WHEN NULL THEN AVG(SUM(x'65c6')) ELSE MIN(MIN(rt0.c3)) END UNION ALL SELECT rt0.c3, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c3, rt0.c1, t0.c0 HAVING (NOT (CASE (((MAX(rt0.c3), MAX(rt0.c0), rt0.c2, MIN(rt0.c1), rt0.c2)) NOT BETWEEN ((AVG(rt0.c3), COUNT(*), rt0.c0, SUM(rt0.c2), '-1927549573')) AND ((COUNT(*), MAX(rt0.c3), x'c4a0', GROUP_CONCAT(rt0.c0), rt0.c0)))  WHEN CAST(rt0.c2 AS NUMERIC) THEN COUNT(*) WHEN AVG(SUM(TOTAL(COUNT(*)))) THEN GROUP_CONCAT(MIN(AVG(x''))) WHEN NULL THEN AVG(SUM(x'65c6')) ELSE MIN(MIN(rt0.c3)) END)) UNION ALL SELECT ALL rt0.c3, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c3, rt0.c1, t0.c0 HAVING ((CASE (((MAX(rt0.c3), MAX(rt0.c0), rt0.c2, MIN(rt0.c1), rt0.c2)) NOT BETWEEN ((AVG(rt0.c3), COUNT(*), rt0.c0, SUM(rt0.c2), '-1927549573')) AND ((COUNT(*), MAX(rt0.c3), x'c4a0', GROUP_CONCAT(rt0.c0), rt0.c0)))  WHEN CAST(rt0.c2 AS NUMERIC) THEN COUNT(*) WHEN AVG(SUM(TOTAL(COUNT(*)))) THEN GROUP_CONCAT(MIN(AVG(x''))) WHEN NULL THEN AVG(SUM(x'65c6')) ELSE MIN(MIN(rt0.c3)) END) ISNULL);
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (((x'8f5f') NOT NULL)) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (((x'8f5f') NOT NULL)))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((((x'8f5f') NOT NULL)) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CAST(0X25ef3a4b AS BLOB)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CAST(0X25ef3a4b AS BLOB)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CAST(0x25ef3a4b AS BLOB)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))AND(((rt0.c0)>(rt0.c0)))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3))))) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))AND(((rt0.c0)>(rt0.c0)))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3))))))) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))AND(((rt0.c0)>(rt0.c0)))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3))))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(CAST(GROUP_CONCAT(t0.c0) AS NUMERIC)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(CAST(GROUP_CONCAT(t0.c0) AS NUMERIC)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(CAST(GROUP_CONCAT(t0.c0) AS NUMERIC))) ISNULL);
SELECT MAX(((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3))) BETWEEN (0.030218880560646255 COLLATE RTRIM) AND (CAST(rt0.c0 AS REAL)))) FROM rt0 ORDER BY ((((CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END)OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)))OR((NOT (rt0.c0)))) ASC  NULLS LAST, ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))) BETWEEN (((((rt0.c0)OR(rt0.c3)))AND(rt0.c2))) AND (((((rt0.c3)AND(rt0.c0)))AND(0.8897109623485753))))  NULLS LAST;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CHANGES()) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CHANGES()))) UNION ALL SELECT * FROM rt0 WHERE (((CHANGES()) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (0Xffffffffbdd3e5cf) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (0xffffffffbdd3e5cf))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((0xffffffffbdd3e5cf) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE WHEN CAST(t0.c0 AS TEXT) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE WHEN CAST(t0.c0 AS TEXT) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CASE WHEN CAST(t0.c0 AS TEXT) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1 HAVING GROUP_CONCAT(MAX(SUM(rt0.c2))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1 HAVING (NOT (GROUP_CONCAT(MAX(SUM(rt0.c2))))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1 HAVING ((GROUP_CONCAT(MAX(SUM(rt0.c2)))) ISNULL);
SELECT ALL * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE (((((- ('X8<-%LOt(')), ((rt0.c2)<<(rt0.c1)), ((((((((rt0.c3)AND(t0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c3))))<>((((rt0.c2)|(rt0.c1)), IFNULL(t0.c0, rt0.c2), CAST(rt0.c1 AS BLOB))))) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (((((- ('X8<-%LOt(')), ((rt0.c2)<<(rt0.c1)), ((((((((rt0.c3)AND(t0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c3))))<>((((rt0.c2)|(rt0.c1)), IFNULL(t0.c0, rt0.c2), CAST(rt0.c1 AS BLOB))))))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((((((- ('X8<-%LOt(')), ((rt0.c2)<<(rt0.c1)), ((((((((rt0.c3)AND(t0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c3))))<>((((rt0.c2)|(rt0.c1)), IFNULL(t0.c0, rt0.c2), CAST(rt0.c1 AS BLOB))))) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((rt0.c3 COLLATE RTRIM IN (CAST(rt0.c0 AS REAL)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT ((rt0.c3 COLLATE RTRIM IN (CAST(rt0.c0 AS REAL)))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((rt0.c3 COLLATE RTRIM IN (CAST(rt0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT t0.c0 FROM t0, rt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, rt0 WHERE ('610968821') GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, rt0 WHERE ((NOT ('610968821'))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, rt0 WHERE ((('610968821') ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, rt0 GROUP BY t0.c0;
SELECT rt0.c3, rt0.c2, t0.c0 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c3, rt0.c2, t0.c0;
SELECT ALL rt0.c3, rt0.c2, t0.c0 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c3, rt0.c2, t0.c0 HAVING TOTAL(MAX(t0.c0)) UNION ALL SELECT rt0.c3, rt0.c2, t0.c0 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c3, rt0.c2, t0.c0 HAVING (NOT (TOTAL(MAX(t0.c0)))) UNION ALL SELECT rt0.c3, rt0.c2, t0.c0 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c3, rt0.c2, t0.c0 HAVING ((TOTAL(MAX(t0.c0))) ISNULL);
SELECT ALL MAX((NOT ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((NULL)))))) FROM t0, rt0 ORDER BY CASE WHEN ((rt0.c0)>(t0.c0)) THEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) ELSE ((rt0.c2)>=(rt0.c1)) END ASC  NULLS LAST, ((rt0.c1 COLLATE RTRIM)=(t0.c0 COLLATE RTRIM)) DESC;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c3) ISNULL) IN (1424115292))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c3) ISNULL) IN (1424115292))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c3) ISNULL) IN (1424115292))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((0xffffffff88c9bb18)<=(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((0xffffffff88c9bb18)<=(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((0Xffffffff88c9bb18)<=(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c3, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2;
SELECT rt0.c3, rt0.c0, rt0.c2 FROM t0, rt0 WHERE (((CASE t0.c0  WHEN rt0.c2 THEN t0.c0 END)IS(((rt0.c0)%(t0.c0))))) GROUP BY rt0.c3, rt0.c0, rt0.c2 UNION SELECT rt0.c3, rt0.c0, rt0.c2 FROM t0, rt0 WHERE ((NOT (((CASE t0.c0  WHEN rt0.c2 THEN t0.c0 END)IS(((rt0.c0)%(t0.c0))))))) GROUP BY rt0.c3, rt0.c0, rt0.c2 UNION SELECT rt0.c3, rt0.c0, rt0.c2 FROM t0, rt0 WHERE (((((CASE t0.c0  WHEN rt0.c2 THEN t0.c0 END)IS(((rt0.c0)%(t0.c0))))) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c2;
SELECT rt0.c3, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2;
SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c1, t0.c0, rt0.c3, rt0.c2, rt0.c0 FROM t0, rt0;
SELECT rt0.c1, t0.c0, rt0.c3, rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((rt0.c3 IN ()) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c1, t0.c0, rt0.c3, rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((NOT ((rt0.c3 IN ()) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c1, t0.c0, rt0.c3, rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((((rt0.c3 IN ()) COLLATE RTRIM) ISNULL));
SELECT rt0.c1, t0.c0, rt0.c3, rt0.c2, rt0.c0 FROM t0, rt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((((NULL)OR(t0.c0 COLLATE RTRIM)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(t0.c0 COLLATE NOCASE)))AND(CHANGES()))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((((((NULL)OR(t0.c0 COLLATE RTRIM)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(t0.c0 COLLATE NOCASE)))AND(CHANGES()))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((((((NULL)OR(t0.c0 COLLATE RTRIM)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(t0.c0 COLLATE NOCASE)))AND(CHANGES()))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE BINARY) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE BINARY))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE BINARY) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(COUNT(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(COUNT(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(COUNT(t0.c0))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c0) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (CASE ((rt0.c2)LIKE(rt0.c1))  WHEN (((rt0.c2, rt0.c1, rt0.c1))<>((rt0.c2, t0.c0, t0.c0))) THEN CASE WHEN rt0.c1 THEN t0.c0 END ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) END) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (CASE ((rt0.c2)LIKE(rt0.c1))  WHEN (((rt0.c2, rt0.c1, rt0.c1))<>((rt0.c2, t0.c0, t0.c0))) THEN CASE WHEN rt0.c1 THEN t0.c0 END ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) END))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((CASE ((rt0.c2)LIKE(rt0.c1))  WHEN (((rt0.c2, rt0.c1, rt0.c1))!=((rt0.c2, t0.c0, t0.c0))) THEN CASE WHEN rt0.c1 THEN t0.c0 END ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c3 FROM t0, rt0 WHERE (((((((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)OR((((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))))))AND((rt0.c0 IN (0x1dc7f33d)))))OR((NOT (rt0.c3)))))OR(NULL))) GROUP BY rt0.c1, rt0.c3 UNION SELECT rt0.c1, rt0.c3 FROM t0, rt0 WHERE ((NOT (((((((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)OR((((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))))))AND((rt0.c0 IN (0x1dc7f33d)))))OR((NOT (rt0.c3)))))OR(NULL))))) GROUP BY rt0.c1, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c3 FROM t0, rt0 WHERE (((((((((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)OR((((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))))))AND((rt0.c0 IN (0x1dc7f33d)))))OR((NOT (rt0.c3)))))OR(NULL))) ISNULL)) GROUP BY rt0.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0 HAVING COUNT(MIN(GROUP_CONCAT(TOTAL(COUNT(rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(MIN(GROUP_CONCAT(TOTAL(COUNT(rt0.c2))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(MIN(GROUP_CONCAT(TOTAL(COUNT(rt0.c2)))))) ISNULL);
SELECT ALL rt0.c2 FROM t0, rt0;
SELECT rt0.c2 FROM t0, rt0 WHERE (UPPER(((rt0.c0)OR(rt0.c1)))) UNION ALL SELECT rt0.c2 FROM t0, rt0 WHERE ((NOT (UPPER(((rt0.c0)OR(rt0.c1)))))) UNION ALL SELECT rt0.c2 FROM t0, rt0 WHERE (((UPPER(((rt0.c0)OR(rt0.c1)))) ISNULL));
SELECT ALL rt0.c2 FROM t0, rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE ((- (0.3521856312740058))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT ((- (0.3521856312740058))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((((- (0.3521856312740058))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0, t0 GROUP BY rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c0 FROM rt0, t0 WHERE (CASE CAST(rt0.c1 AS INTEGER)  WHEN rt0.c3 THEN (((t0.c0))==((rt0.c0))) WHEN CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN t0.c0 THEN rt0.c0 END THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((x''))) WHEN (rt0.c1 IN (rt0.c0)) THEN ((rt0.c0) NOT BETWEEN (t0.c0) AND (1241028070)) END) GROUP BY rt0.c3, rt0.c0 UNION SELECT rt0.c3, rt0.c0 FROM rt0, t0 WHERE ((NOT (CASE CAST(rt0.c1 AS INTEGER)  WHEN rt0.c3 THEN (((t0.c0))=((rt0.c0))) WHEN CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN t0.c0 THEN rt0.c0 END THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((x''))) WHEN (rt0.c1 IN (rt0.c0)) THEN ((rt0.c0) NOT BETWEEN (t0.c0) AND (1241028070)) END))) GROUP BY rt0.c3, rt0.c0 UNION SELECT rt0.c3, rt0.c0 FROM rt0, t0 WHERE (((CASE CAST(rt0.c1 AS INTEGER)  WHEN rt0.c3 THEN (((t0.c0))==((rt0.c0))) WHEN CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN t0.c0 THEN rt0.c0 END THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((x''))) WHEN (rt0.c1 IN (rt0.c0)) THEN ((rt0.c0) NOT BETWEEN (t0.c0) AND (1241028070)) END) ISNULL)) GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0, t0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL t0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN t0 ON NULL GROUP BY t0.c0, rt0.c3, rt0.c2, rt0.c0;
SELECT ALL t0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN t0 ON NULL GROUP BY t0.c0, rt0.c3, rt0.c2, rt0.c0 HAVING CAST((t0.c0 IN (SUM(SUM(SUM(rt0.c1))), COUNT(*))) AS NUMERIC) UNION ALL SELECT t0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN t0 ON NULL GROUP BY t0.c0, rt0.c3, rt0.c2, rt0.c0 HAVING (NOT (CAST((t0.c0 IN (SUM(SUM(SUM(rt0.c1))), COUNT(*))) AS NUMERIC))) UNION ALL SELECT t0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0 CROSS JOIN t0 ON NULL GROUP BY t0.c0, rt0.c3, rt0.c2, rt0.c0 HAVING ((CAST((t0.c0 IN (SUM(SUM(SUM(rt0.c1))), COUNT(*))) AS NUMERIC)) ISNULL);
SELECT rt0.c1, t0.c0, rt0.c0, rt0.c3, rt0.c2 FROM rt0, t0;
SELECT rt0.c1, t0.c0, rt0.c0, rt0.c3, rt0.c2 FROM rt0, t0 WHERE (('toU儒cuxj' IN ())) UNION ALL SELECT rt0.c1, t0.c0, rt0.c0, rt0.c3, rt0.c2 FROM rt0, t0 WHERE ((NOT (('toU儒cuxj' IN ())))) UNION ALL SELECT rt0.c1, t0.c0, rt0.c0, rt0.c3, rt0.c2 FROM rt0, t0 WHERE (((('toU儒cuxj' IN ())) ISNULL));
SELECT rt0.c1, t0.c0, rt0.c0, rt0.c3, rt0.c2 FROM rt0, t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (LIKELIHOOD((((t0.c0))!=((t0.c0))), 0.5436270328026812)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (LIKELIHOOD((((t0.c0))<>((t0.c0))), 0.5436270328026812)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((LIKELIHOOD((((t0.c0))!=((t0.c0))), 0.5436270328026812)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2 HAVING AVG(MAX(rt0.c0)) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (AVG(MAX(rt0.c0)))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2 HAVING ((AVG(MAX(rt0.c0))) ISNULL);
SELECT ALL MAX((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c0)) IN ((('-1257526960') NOTNULL), ((rt0.c1) ISNULL)))) FROM t0, rt0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((json_quote(rt0.c1)) IS FALSE)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((json_quote(rt0.c1)) IS FALSE)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((json_quote(rt0.c1)) IS FALSE)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS INTEGER) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE WHEN t0.c0 THEN ((t0.c0) BETWEEN (t0.c0) AND ('')) ELSE (('-2049865186')/(t0.c0)) END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CASE WHEN t0.c0 THEN ((t0.c0) BETWEEN (t0.c0) AND ('')) ELSE (('-2049865186')/(t0.c0)) END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CASE WHEN t0.c0 THEN ((t0.c0) BETWEEN (t0.c0) AND ('')) ELSE (('-2049865186')/(t0.c0)) END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING MIN(SUM(rt0.c3)) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (MIN(SUM(rt0.c3)))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((MIN(SUM(rt0.c3))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c1 IN (rt0.c1)) AS TEXT)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST((rt0.c1 IN (rt0.c1)) AS TEXT)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST((rt0.c1 IN (rt0.c1)) AS TEXT)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c1) IS FALSE) IN (HEX(DISTINCT rt0.c2)));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c1) IS FALSE) IN (HEX(DISTINCT rt0.c2))) WHERE (0xffffffffcf6ff019) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c1) IS FALSE) IN (HEX(DISTINCT rt0.c2))) WHERE ((NOT (0xffffffffcf6ff019))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c1) IS FALSE) IN (HEX(DISTINCT rt0.c2))) WHERE (((0xffffffffcf6ff019) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c1) IS FALSE) IN (HEX(DISTINCT rt0.c2)));
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (0x39df4de3) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (0x39df4de3))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((0x39df4de3) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(TOTAL(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(TOTAL(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(TOTAL(t0.c0))) ISNULL);
SELECT ALL rt0.c2, t0.c0, rt0.c0, rt0.c3, rt0.c1 FROM t0, rt0;
SELECT ALL rt0.c2, t0.c0, rt0.c0, rt0.c3, rt0.c1 FROM t0, rt0 WHERE (((1.540815837E9)AND('761211833'))) UNION ALL SELECT rt0.c2, t0.c0, rt0.c0, rt0.c3, rt0.c1 FROM t0, rt0 WHERE ((NOT (((1.540815837E9)AND('761211833'))))) UNION ALL SELECT ALL rt0.c2, t0.c0, rt0.c0, rt0.c3, rt0.c1 FROM t0, rt0 WHERE (((((1.540815837E9)AND('761211833'))) ISNULL));
SELECT ALL rt0.c2, t0.c0, rt0.c0, rt0.c3, rt0.c1 FROM t0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((- (((((rt0.c1)OR(rt0.c2)))OR(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((- (((((rt0.c1)OR(rt0.c2)))OR(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((- (((((rt0.c1)OR(rt0.c2)))OR(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (0.3891995593586606) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (0.3891995593586606))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((0.3891995593586606) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, t0.c0;
SELECT rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, t0.c0;
SELECT rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, t0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((CAST(rt0.c2 AS REAL) IN ())) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((CAST(rt0.c2 AS REAL) IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((((CAST(rt0.c2 AS REAL) IN ())) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c3, t0.c0, rt0.c2, rt0.c1, rt0.c0 FROM t0, rt0;
SELECT DISTINCT rt0.c3, t0.c0, rt0.c2, rt0.c1, rt0.c0 FROM t0, rt0 NOT INDEXED WHERE (CASE 0.9123407716155812  WHEN ABS(rt0.c0) THEN ((rt0.c1)AND(rt0.c2)) WHEN ((rt0.c0) ISNULL) THEN (((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((t0.c0, rt0.c3, 3.79752917E8)) AND ((rt0.c0, t0.c0, rt0.c3))) WHEN CAST(rt0.c2 AS INTEGER) THEN rt0.c1 COLLATE RTRIM WHEN (((rt0.c3))<((rt0.c2))) THEN rt0.c0 WHEN ((rt0.c0) ISNULL) THEN t0.c0 ELSE ((((rt0.c1)OR(x'38d6')))OR(rt0.c3)) END) UNION SELECT DISTINCT rt0.c3, t0.c0, rt0.c2, rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((NOT (CASE 0.9123407716155812  WHEN ABS(rt0.c0) THEN ((rt0.c1)AND(rt0.c2)) WHEN ((rt0.c0) ISNULL) THEN (((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((t0.c0, rt0.c3, 3.79752917E8)) AND ((rt0.c0, t0.c0, rt0.c3))) WHEN CAST(rt0.c2 AS INTEGER) THEN rt0.c1 COLLATE RTRIM WHEN (((rt0.c3))<((rt0.c2))) THEN rt0.c0 WHEN ((rt0.c0) ISNULL) THEN t0.c0 ELSE ((((rt0.c1)OR(x'38d6')))OR(rt0.c3)) END))) UNION SELECT DISTINCT rt0.c3, t0.c0, rt0.c2, rt0.c1, rt0.c0 FROM t0, rt0 WHERE (((CASE 0.9123407716155812  WHEN ABS(rt0.c0) THEN ((rt0.c1)AND(rt0.c2)) WHEN ((rt0.c0) ISNULL) THEN (((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((t0.c0, rt0.c3, 3.79752917E8)) AND ((rt0.c0, t0.c0, rt0.c3))) WHEN CAST(rt0.c2 AS INTEGER) THEN rt0.c1 COLLATE RTRIM WHEN (((rt0.c3))<((rt0.c2))) THEN rt0.c0 WHEN ((rt0.c0) ISNULL) THEN t0.c0 ELSE ((((rt0.c1)OR(x'38d6')))OR(rt0.c3)) END) ISNULL));
SELECT DISTINCT rt0.c3, t0.c0, rt0.c2, rt0.c1, rt0.c0 FROM t0, rt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0))<=((t0.c0))) IN ())) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0))<=((t0.c0))) IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0))<=((t0.c0))) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING AVG(rt0.c2 COLLATE BINARY) UNION ALL SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING (NOT (AVG(rt0.c2 COLLATE BINARY))) UNION ALL SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING ((AVG(rt0.c2 COLLATE BINARY)) ISNULL);
SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING AVG(rt0.c2 COLLATE BINARY) UNION ALL SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING (NOT (AVG(rt0.c2 COLLATE BINARY))) UNION ALL SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING ((AVG(rt0.c2 COLLATE BINARY)) ISNULL);
SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE RTRIM) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c0 AS INTEGER) COLLATE RTRIM))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS INTEGER) COLLATE RTRIM) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0, rt0;
SELECT DISTINCT t0.c0 FROM t0, rt0 WHERE ((((rt0.c2 IN (rt0.c0)))<(rt0.c3))) UNION SELECT DISTINCT t0.c0 FROM t0, rt0 WHERE ((NOT ((((rt0.c2 IN (rt0.c0)))<(rt0.c3))))) UNION SELECT DISTINCT t0.c0 FROM t0, rt0 WHERE ((((((rt0.c2 IN (rt0.c0)))<(rt0.c3))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, rt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((- (CASE WHEN t0.c0 THEN t0.c0 ELSE NULL END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((- (CASE WHEN t0.c0 THEN t0.c0 ELSE NULL END))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((- (CASE WHEN t0.c0 THEN t0.c0 ELSE NULL END))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT t0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT t0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c1 FROM rt0, t0;
SELECT ALL rt0.c1 FROM rt0, t0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c3 ELSE '' END)||(t0.c0))) UNION ALL SELECT rt0.c1 FROM rt0, t0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN rt0.c3 ELSE '' END)||(t0.c0))))) UNION ALL SELECT rt0.c1 FROM rt0, t0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c3 ELSE '' END)||(t0.c0))) ISNULL));
SELECT rt0.c1 FROM rt0, t0;
SELECT DISTINCT t0.c0, rt0.c3 FROM rt0 CROSS JOIN t0 ON (NOT ('-1415803265')) COLLATE NOCASE COLLATE NOCASE;
SELECT DISTINCT t0.c0, rt0.c3 FROM rt0 CROSS JOIN t0 ON (NOT ('-1415803265')) COLLATE NOCASE COLLATE NOCASE WHERE (((rt0.c0) NOT BETWEEN (json_array_length(t0.c0)) AND (0X7ac7c934))) UNION SELECT DISTINCT t0.c0, rt0.c3 FROM rt0 CROSS JOIN t0 ON (NOT ('-1415803265')) COLLATE NOCASE COLLATE NOCASE WHERE ((NOT (((rt0.c0) NOT BETWEEN (json_array_length(t0.c0)) AND (0x7ac7c934))))) UNION SELECT DISTINCT t0.c0, rt0.c3 FROM rt0 CROSS JOIN t0 ON (NOT ('-1415803265')) COLLATE NOCASE COLLATE NOCASE WHERE (((((rt0.c0) NOT BETWEEN (json_array_length(t0.c0)) AND (0x7ac7c934))) ISNULL));
SELECT DISTINCT t0.c0, rt0.c3 FROM rt0 CROSS JOIN t0 ON (NOT ('-1415803265')) COLLATE NOCASE COLLATE NOCASE;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST((t0.c0 IN (t0.c0)) AS BLOB)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST((t0.c0 IN (t0.c0)) AS BLOB)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST((t0.c0 IN (t0.c0)) AS BLOB)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3;
SELECT t0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3 HAVING GROUP_CONCAT(SUM(rt0.c2)) UNION ALL SELECT t0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3 HAVING (NOT (GROUP_CONCAT(SUM(rt0.c2)))) UNION ALL SELECT t0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c3 HAVING ((GROUP_CONCAT(SUM(rt0.c2))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((((rt0.c3, rt0.c1, rt0.c3)) BETWEEN ((rt0.c2, rt0.c3, rt0.c3)) AND (('1913002357', rt0.c0, rt0.c3)))) ISNULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((((rt0.c3, rt0.c1, rt0.c3)) BETWEEN ((rt0.c2, rt0.c3, rt0.c3)) AND (('1913002357', rt0.c0, rt0.c3)))) ISNULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((((rt0.c3, rt0.c1, rt0.c3)) BETWEEN ((rt0.c2, rt0.c3, rt0.c3)) AND (('1913002357', rt0.c0, rt0.c3)))) ISNULL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((t0.c0 IN ()))OR(((t0.c0) IS FALSE)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0 IN ()))OR(((t0.c0) IS FALSE)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0 IN ()))OR(((t0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (HEX(((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (HEX(((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((HEX(((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MAX('㳥J') UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MAX('㳥J'))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MAX('㳥J')) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MAX('㳥J') UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MAX('㳥J'))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MAX('㳥J')) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE (t0.c0) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE (((t0.c0) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((t0.c0, ((t0.c0)<(t0.c0)), CAST(t0.c0 AS NUMERIC)))>((t0.c0 COLLATE BINARY, t0.c0, ((t0.c0)<(t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0, ((t0.c0)<(t0.c0)), CAST(t0.c0 AS NUMERIC)))>((t0.c0 COLLATE BINARY, t0.c0, ((t0.c0)<(t0.c0)))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0, ((t0.c0)<(t0.c0)), CAST(t0.c0 AS NUMERIC)))>((t0.c0 COLLATE BINARY, t0.c0, ((t0.c0)<(t0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0, rt0.c0, rt0.c1, rt0.c3 FROM rt0 CROSS JOIN t0 ON ((((((rt0.c3))<((t0.c0)))))==((CAST(t0.c0 AS INTEGER)))) GROUP BY t0.c0, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL t0.c0, rt0.c0, rt0.c1, rt0.c3 FROM rt0 CROSS JOIN t0 ON ((((((rt0.c3))<((t0.c0)))))==((CAST(t0.c0 AS INTEGER)))) WHERE (rt0.c3) GROUP BY t0.c0, rt0.c0, rt0.c1, rt0.c3 UNION SELECT t0.c0, rt0.c0, rt0.c1, rt0.c3 FROM rt0 CROSS JOIN t0 ON ((((((rt0.c3))<((t0.c0)))))=((CAST(t0.c0 AS INTEGER)))) WHERE ((NOT (rt0.c3))) GROUP BY t0.c0, rt0.c0, rt0.c1, rt0.c3 UNION SELECT t0.c0, rt0.c0, rt0.c1, rt0.c3 FROM rt0 CROSS JOIN t0 ON ((((((rt0.c3))<((t0.c0)))))==((CAST(t0.c0 AS INTEGER)))) WHERE (((rt0.c3) ISNULL)) GROUP BY t0.c0, rt0.c0, rt0.c1, rt0.c3;
SELECT t0.c0, rt0.c0, rt0.c1, rt0.c3 FROM rt0 CROSS JOIN t0 ON ((((((rt0.c3))<((t0.c0)))))==((CAST(t0.c0 AS INTEGER)))) GROUP BY t0.c0, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE (LIKELY(x'' COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (LIKELY(x'' COLLATE NOCASE)))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE (((LIKELY(x'' COLLATE NOCASE)) ISNULL));
SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0 IN (t0.c0, t0.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c0 IN (t0.c0, t0.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0 IN (t0.c0, t0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c3 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c3;
SELECT rt0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c3 FROM rt0, t0 WHERE (((t0.c0)<=(json_array_length('-1686443360', rt0.c1)))) GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c3 FROM rt0, t0 WHERE ((NOT (((t0.c0)<=(json_array_length('-1686443360', rt0.c1)))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c3 FROM rt0, t0 WHERE (((((t0.c0)<=(json_array_length('-1686443360', rt0.c1)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c3;
SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING SUM((SUM(SUM(MIN('-444214338'))) IN (rt0.c1))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (SUM((SUM(SUM(MIN('-444214338'))) IN (rt0.c1))))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING ((SUM((SUM(SUM(MIN('-444214338'))) IN (rt0.c1)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE (IFNULL(0xffffffffe6fe3504, ((rt0.c1)OR(rt0.c2)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (IFNULL(0xffffffffe6fe3504, ((rt0.c1)OR(rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE (((IFNULL(0xffffffffe6fe3504, ((rt0.c1)OR(rt0.c2)))) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (DATETIME(((((t0.c0)OR(0Xffffffffba5b2ce3)))OR(t0.c0)), t0.c0, (~ (t0.c0)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (DATETIME(((((t0.c0)OR(0Xffffffffba5b2ce3)))OR(t0.c0)), t0.c0, (~ (t0.c0)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((DATETIME(((((t0.c0)OR(0Xffffffffba5b2ce3)))OR(t0.c0)), t0.c0, (~ (t0.c0)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c1, rt0.c3, t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c3, t0.c0, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c3, t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 WHERE (CASE WHEN ((rt0.c2)<=(rt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c2 END END) GROUP BY rt0.c1, rt0.c3, t0.c0, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c3, t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((NOT (CASE WHEN ((rt0.c2)<=(rt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c2 END END))) GROUP BY rt0.c1, rt0.c3, t0.c0, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c3, t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 WHERE (((CASE WHEN ((rt0.c2)<=(rt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c2 END END) ISNULL)) GROUP BY rt0.c1, rt0.c3, t0.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c3, t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c3, t0.c0, rt0.c2, rt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT((~ (MAX(SUM(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT((~ (MAX(SUM(t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT((~ (MAX(SUM(t0.c0)))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c0 COLLATE RTRIM THEN (rt0.c2 IN ()) WHEN (NOT (rt0.c1)) THEN ((rt0.c0) IS FALSE) WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c2))<>(('t䷣>7'))) ELSE ((rt0.c1)IS NOT(rt0.c0)) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN rt0.c0 COLLATE RTRIM THEN (rt0.c2 IN ()) WHEN (NOT (rt0.c1)) THEN ((rt0.c0) IS FALSE) WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c2))!=(('t䷣>7'))) ELSE ((rt0.c1)IS NOT(rt0.c0)) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c0 COLLATE RTRIM THEN (rt0.c2 IN ()) WHEN (NOT (rt0.c1)) THEN ((rt0.c0) IS FALSE) WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c2))<>(('t䷣>7'))) ELSE ((rt0.c1)IS NOT(rt0.c0)) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT t0.c0, rt0.c3 FROM t0, rt0;
SELECT DISTINCT t0.c0, rt0.c3 FROM t0, rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c1 THEN 0.6060035712987086 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN t0.c0 END  WHEN (rt0.c0 IN ()) THEN CASE 0X5263a187  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END ELSE (- (rt0.c3)) END) UNION SELECT DISTINCT t0.c0, rt0.c3 FROM t0, rt0 WHERE ((NOT (CASE CASE rt0.c0  WHEN rt0.c1 THEN 0.6060035712987086 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN t0.c0 END  WHEN (rt0.c0 IN ()) THEN CASE 0x5263a187  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END ELSE (- (rt0.c3)) END))) UNION SELECT DISTINCT t0.c0, rt0.c3 FROM t0, rt0 WHERE (((CASE CASE rt0.c0  WHEN rt0.c1 THEN 0.6060035712987086 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN t0.c0 END  WHEN (rt0.c0 IN ()) THEN CASE 0x5263a187  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END ELSE (- (rt0.c3)) END) ISNULL));
SELECT DISTINCT t0.c0, rt0.c3 FROM t0, rt0;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 WHERE (x'') GROUP BY rt0.c3, rt0.c1 UNION SELECT rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c3, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c1 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3 HAVING SUM(((COUNT(AVG(SUM(rt0.c1)))) BETWEEN (COUNT(SUM(rt0.c3))) AND (rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3 HAVING (NOT (SUM(((COUNT(AVG(SUM(rt0.c1)))) BETWEEN (COUNT(SUM(rt0.c3))) AND (rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3 HAVING ((SUM(((COUNT(AVG(SUM(rt0.c1)))) BETWEEN (COUNT(SUM(rt0.c3))) AND (rt0.c0)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((- (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((- (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3))))))) UNION ALL SELECT * FROM rt0 WHERE ((((- (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c3 FROM t0 INNER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))) BETWEEN ((('嬧''D') IS FALSE)) AND (rt0.c2 COLLATE RTRIM));
SELECT DISTINCT rt0.c3 FROM t0 INNER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))) BETWEEN ((('嬧''D') IS FALSE)) AND (rt0.c2 COLLATE RTRIM)) WHERE (((((rt0.c2)AND(rt0.c2))) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c1)*(t0.c0))))) UNION SELECT DISTINCT rt0.c3 FROM t0 INNER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))) BETWEEN ((('嬧''D') IS FALSE)) AND (rt0.c2 COLLATE RTRIM)) WHERE ((NOT (((((rt0.c2)AND(rt0.c2))) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c1)*(t0.c0))))))) UNION SELECT DISTINCT rt0.c3 FROM t0 INNER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))) BETWEEN ((('嬧''D') IS FALSE)) AND (rt0.c2 COLLATE RTRIM)) WHERE (((((((rt0.c2)AND(rt0.c2))) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c1)*(t0.c0))))) ISNULL));
SELECT DISTINCT rt0.c3 FROM t0 INNER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))) BETWEEN ((('嬧''D') IS FALSE)) AND (rt0.c2 COLLATE RTRIM));
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CASE t0.c0 COLLATE BINARY  WHEN (t0.c0 IN ()) THEN (t0.c0 IN (t0.c0, t0.c0, t0.c0)) ELSE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR('-⒓')))OR(t0.c0)) END) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE t0.c0 COLLATE BINARY  WHEN (t0.c0 IN ()) THEN (t0.c0 IN (t0.c0, t0.c0, t0.c0)) ELSE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR('-⒓')))OR(t0.c0)) END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CASE t0.c0 COLLATE BINARY  WHEN (t0.c0 IN ()) THEN (t0.c0 IN (t0.c0, t0.c0, t0.c0)) ELSE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR('-⒓')))OR(t0.c0)) END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(GROUP_CONCAT(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(GROUP_CONCAT(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(GROUP_CONCAT(t0.c0))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (0.9765323701608807) UNION ALL SELECT * FROM t0 WHERE ((NOT (0.9765323701608807))) UNION ALL SELECT * FROM t0 WHERE (((0.9765323701608807) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, t0.c0 FROM rt0, t0;
SELECT rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 WHERE (((json_array('-', rt0.c3, t0.c0, rt0.c3))%((rt0.c0 IN ())))) UNION ALL SELECT rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 WHERE ((NOT (((json_array('-', rt0.c3, t0.c0, rt0.c3))%((rt0.c0 IN ())))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 WHERE (((((json_array('-', rt0.c3, t0.c0, rt0.c3))%((rt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (NULL) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST(((t0.c0)>>(t0.c0)) AS BLOB)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(((t0.c0)>>(t0.c0)) AS BLOB)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CAST(((t0.c0)>>(t0.c0)) AS BLOB)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING SUM(TOTAL(SUM(rt0.c3))) UNION ALL SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING (NOT (SUM(TOTAL(SUM(rt0.c3))))) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING ((SUM(TOTAL(SUM(rt0.c3)))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c3 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE (PRINTF((rt0.c3 IN (rt0.c3)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (PRINTF((rt0.c3 IN (rt0.c3)))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE (((PRINTF((rt0.c3 IN (rt0.c3)))) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT t0.c0, rt0.c0 FROM rt0, t0;
SELECT DISTINCT t0.c0, rt0.c0 FROM rt0, t0 WHERE ((((((rt0.c3, rt0.c2, rt0.c1))>((rt0.c1, '935299370', rt0.c1))))AND(((rt0.c3)/(rt0.c0))))) UNION SELECT DISTINCT t0.c0, rt0.c0 FROM rt0, t0 WHERE ((NOT ((((((rt0.c3, rt0.c2, rt0.c1))>((rt0.c1, '935299370', rt0.c1))))AND(((rt0.c3)/(rt0.c0))))))) UNION SELECT DISTINCT t0.c0, rt0.c0 FROM rt0, t0 WHERE ((((((((rt0.c3, rt0.c2, rt0.c1))>((rt0.c1, '935299370', rt0.c1))))AND(((rt0.c3)/(rt0.c0))))) ISNULL));
SELECT DISTINCT t0.c0, rt0.c0 FROM rt0, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((+ (t0.c0 COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((+ (t0.c0 COLLATE NOCASE))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((+ (t0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c3, t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON (((NOT (rt0.c3)))<=(((rt0.c2)OR(rt0.c1)))) GROUP BY rt0.c3, t0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON (((NOT (rt0.c3)))<=(((rt0.c2)OR(rt0.c1)))) GROUP BY rt0.c3, t0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING COUNT(((GROUP_CONCAT(SUM(t0.c0)))/(rt0.c0))) UNION ALL SELECT ALL rt0.c3, t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON (((NOT (rt0.c3)))<=(((rt0.c2)OR(rt0.c1)))) GROUP BY rt0.c3, t0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (COUNT(((GROUP_CONCAT(SUM(t0.c0)))/(rt0.c0))))) UNION ALL SELECT rt0.c3, t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON (((NOT (rt0.c3)))<=(((rt0.c2)OR(rt0.c1)))) GROUP BY rt0.c3, t0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((COUNT(((GROUP_CONCAT(SUM(t0.c0)))/(rt0.c0)))) ISNULL);
SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON CAST((rt0.c2 IN ()) AS INTEGER);
SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON CAST((rt0.c2 IN ()) AS INTEGER) WHERE (((CAST(rt0.c0 AS INTEGER)) NOTNULL)) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON CAST((rt0.c2 IN ()) AS INTEGER) WHERE ((NOT (((CAST(rt0.c0 AS INTEGER)) NOTNULL)))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON CAST((rt0.c2 IN ()) AS INTEGER) WHERE (((((CAST(rt0.c0 AS INTEGER)) NOTNULL)) ISNULL));
SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON CAST((rt0.c2 IN ()) AS INTEGER);
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (CAST(NULL AS REAL) COLLATE BINARY) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (CAST(NULL AS REAL) COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((CAST(NULL AS REAL) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((+ (((rt0.c3)>=(rt0.c2))))) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((NOT ((+ (((rt0.c3)>=(rt0.c2))))))) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((((+ (((rt0.c3)>=(rt0.c2))))) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING GROUP_CONCAT(((COUNT(*)) NOT NULL)) UNION ALL SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING (NOT (GROUP_CONCAT(((COUNT(*)) NOT NULL)))) UNION ALL SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING ((GROUP_CONCAT(((COUNT(*)) NOT NULL))) ISNULL);
SELECT t0.c0, rt0.c1, rt0.c0 FROM t0, rt0;
SELECT t0.c0, rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((((((rt0.c3) IS TRUE)))<=((NULL)))) UNION ALL SELECT t0.c0, rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((NOT ((((((rt0.c3) IS TRUE)))<=((NULL)))))) UNION ALL SELECT t0.c0, rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((((((((rt0.c3) IS TRUE)))<=((NULL)))) ISNULL));
SELECT t0.c0, rt0.c1, rt0.c0 FROM t0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CAST(t0.c0 COLLATE BINARY AS TEXT)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c0 COLLATE BINARY AS TEXT)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CAST(t0.c0 COLLATE BINARY AS TEXT)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(TOTAL(COUNT(MAX(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(TOTAL(COUNT(MAX(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(TOTAL(COUNT(MAX(t0.c0))))) ISNULL);
SELECT ALL rt0.c1, rt0.c3, rt0.c2, t0.c0, rt0.c0 FROM t0, rt0;
SELECT rt0.c1, rt0.c3, rt0.c2, t0.c0, rt0.c0 FROM t0, rt0 WHERE (((((((((((rt0.c0)||(rt0.c0)))AND(((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))))AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))))OR(CASE WHEN rt0.c3 THEN rt0.c0 WHEN x'b889' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)))OR(((rt0.c3)<(0x4332d4c1))))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2, t0.c0, rt0.c0 FROM t0, rt0 WHERE ((NOT (((((((((((rt0.c0)||(rt0.c0)))AND(((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))))AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))))OR(CASE WHEN rt0.c3 THEN rt0.c0 WHEN x'b889' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)))OR(((rt0.c3)<(0x4332d4c1))))))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2, t0.c0, rt0.c0 FROM t0, rt0 WHERE (((((((((((((rt0.c0)||(rt0.c0)))AND(((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))))AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))))OR(CASE WHEN rt0.c3 THEN rt0.c0 WHEN x'b889' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)))OR(((rt0.c3)<(0X4332d4c1))))) ISNULL));
SELECT ALL rt0.c1, rt0.c3, rt0.c2, t0.c0, rt0.c0 FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ((((t0.c0 IN ())) BETWEEN (CAST(x'' AS BLOB)) AND (highlight(rt0.c0, rt0.c3, t0.c0, rt0.c1)))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ((((t0.c0 IN ())) BETWEEN (CAST(x'' AS BLOB)) AND (highlight(rt0.c0, rt0.c3, t0.c0, rt0.c1)))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((((((t0.c0 IN ())) BETWEEN (CAST(x'' AS BLOB)) AND (highlight(rt0.c0, rt0.c3, t0.c0, rt0.c1)))) ISNULL));
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0)) BETWEEN ((((t0.c0) IS FALSE))) AND (((((('-1618191603')AND(t0.c0)))OR(x'')))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) BETWEEN ((((t0.c0) IS FALSE))) AND (((((('-1618191603')AND(t0.c0)))OR(x'')))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((t0.c0)) BETWEEN ((((t0.c0) IS FALSE))) AND (((((('-1618191603')AND(t0.c0)))OR(x'')))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c3;
SELECT ALL t0.c0, rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c3 HAVING CAST(((((rt0.c2)AND(rt0.c3)))AND(TOTAL(rt0.c0))) AS NUMERIC) UNION ALL SELECT ALL t0.c0, rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c3 HAVING (NOT (CAST(((((rt0.c2)AND(rt0.c3)))AND(TOTAL(rt0.c0))) AS NUMERIC))) UNION ALL SELECT t0.c0, rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c3 HAVING ((CAST(((((rt0.c2)AND(rt0.c3)))AND(TOTAL(rt0.c0))) AS NUMERIC)) ISNULL);
SELECT t0.c0, rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c3;
SELECT ALL t0.c0, rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c3 HAVING CAST(((((rt0.c2)AND(rt0.c3)))AND(TOTAL(rt0.c0))) AS NUMERIC) UNION ALL SELECT ALL t0.c0, rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c3 HAVING (NOT (CAST(((((rt0.c2)AND(rt0.c3)))AND(TOTAL(rt0.c0))) AS NUMERIC))) UNION ALL SELECT t0.c0, rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c3 HAVING ((CAST(((((rt0.c2)AND(rt0.c3)))AND(TOTAL(rt0.c0))) AS NUMERIC)) ISNULL);
SELECT t0.c0, rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c3;
SELECT MIN((((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ('', LIKE(t0.c0, t0.c0)))) FROM t0 ORDER BY (((x'9247' IN (t0.c0)))IS NOT(x''))  NULLS LAST, (((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0))) COLLATE NOCASE, CASE '2O,5^4m'  WHEN ((t0.c0)IS(t0.c0)) THEN t0.c0 COLLATE BINARY WHEN load_extension(t0.c0, t0.c0) THEN ((t0.c0)IS(t0.c0)) WHEN (+ (t0.c0)) THEN t0.c0 END DESC;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CASE WHEN ((t0.c0) IS TRUE) THEN DATETIME(t0.c0, t0.c0, t0.c0) WHEN ((t0.c0) NOTNULL) THEN CASE t0.c0  WHEN NULL THEN t0.c0 END WHEN ((t0.c0)AND(t0.c0)) THEN ((t0.c0) NOT NULL) ELSE ((t0.c0) ISNULL) END) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CASE WHEN ((t0.c0) IS TRUE) THEN DATETIME(t0.c0, t0.c0, t0.c0) WHEN ((t0.c0) NOTNULL) THEN CASE t0.c0  WHEN NULL THEN t0.c0 END WHEN ((t0.c0)AND(t0.c0)) THEN ((t0.c0) NOT NULL) ELSE ((t0.c0) ISNULL) END))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CASE WHEN ((t0.c0) IS TRUE) THEN DATETIME(t0.c0, t0.c0, t0.c0) WHEN ((t0.c0) NOTNULL) THEN CASE t0.c0  WHEN NULL THEN t0.c0 END WHEN ((t0.c0)AND(t0.c0)) THEN ((t0.c0) NOT NULL) ELSE ((t0.c0) ISNULL) END) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM t0, rt0 WHERE (CASE (NOT (rt0.c3))  WHEN CAST(rt0.c3 AS INTEGER) THEN (rt0.c1 IN (rt0.c1)) ELSE (+ (rt0.c2)) END) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM t0, rt0 WHERE ((NOT (CASE (NOT (rt0.c3))  WHEN CAST(rt0.c3 AS INTEGER) THEN (rt0.c1 IN (rt0.c1)) ELSE (+ (rt0.c2)) END))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM t0, rt0 WHERE (((CASE (NOT (rt0.c3))  WHEN CAST(rt0.c3 AS INTEGER) THEN (rt0.c1 IN (rt0.c1)) ELSE (+ (rt0.c2)) END) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c3;
SELECT rt0.c0, t0.c0, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c3 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c3 FROM t0 NOT INDEXED, rt0 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c3 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c3 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c3;
SELECT rt0.c0, t0.c0, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c3 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c3 FROM t0 NOT INDEXED, rt0 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c3 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c3 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c3;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (CASE COALESCE(t0.c0, t0.c0)  WHEN (t0.c0 IN ()) THEN t0.c0 ELSE t0.c0 COLLATE NOCASE END) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE COALESCE(t0.c0, t0.c0)  WHEN (t0.c0 IN ()) THEN t0.c0 ELSE t0.c0 COLLATE NOCASE END))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((CASE COALESCE(t0.c0, t0.c0)  WHEN (t0.c0 IN ()) THEN t0.c0 ELSE t0.c0 COLLATE NOCASE END) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, t0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, t0 WHERE (((((rt0.c3)+(rt0.c0)))>>((rt0.c2 IN (rt0.c3, rt0.c2))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, t0 WHERE ((NOT (((((rt0.c3)+(rt0.c0)))>>((rt0.c2 IN (rt0.c3, rt0.c2))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, t0 WHERE (((((((rt0.c3)+(rt0.c0)))>>((rt0.c2 IN (rt0.c3, rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, t0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c0)))<=(CASE WHEN rt0.c2 THEN rt0.c2 END))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c0)))<=(CASE WHEN rt0.c2 THEN rt0.c2 END))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c0)))<=(CASE WHEN rt0.c2 THEN rt0.c2 END))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2;
SELECT ALL t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2 HAVING GROUP_CONCAT(GROUP_CONCAT(rt0.c0) COLLATE BINARY) UNION ALL SELECT t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(rt0.c0) COLLATE BINARY))) UNION ALL SELECT t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(GROUP_CONCAT(rt0.c0) COLLATE BINARY)) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c3 IN ())) NOT BETWEEN ('bm') AND (((rt0.c2)LIKE(rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c3 IN ())) NOT BETWEEN ('bm') AND (((rt0.c2)LIKE(rt0.c1))))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c3 IN ())) NOT BETWEEN ('bm') AND (((rt0.c2)LIKE(rt0.c1))))) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST('\K' COLLATE RTRIM AS INTEGER)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST('\K' COLLATE RTRIM AS INTEGER)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST('\K' COLLATE RTRIM AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c3 FROM rt0, t0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, t0 WHERE (((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (CASE rt0.c3  WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c2 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (TRIM(t0.c0)))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0, t0 WHERE ((NOT (((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (CASE rt0.c3  WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c2 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (TRIM(t0.c0)))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0, t0 WHERE (((((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (CASE rt0.c3  WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c2 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (TRIM(t0.c0)))) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, t0 GROUP BY rt0.c3;
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING GROUP_CONCAT(((GROUP_CONCAT(TOTAL(rt0.c1))) ISNULL)) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING (NOT (GROUP_CONCAT(((GROUP_CONCAT(TOTAL(rt0.c1))) ISNULL)))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING ((GROUP_CONCAT(((GROUP_CONCAT(TOTAL(rt0.c1))) ISNULL))) ISNULL);
SELECT t0.c0, rt0.c1, rt0.c3 FROM t0, rt0;
SELECT t0.c0, rt0.c1, rt0.c3 FROM t0, rt0 WHERE (((1157709365)||(CASE WHEN rt0.c3 THEN rt0.c0 ELSE '557618156' END))) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c3 FROM t0, rt0 NOT INDEXED WHERE ((NOT (((1157709365)||(CASE WHEN rt0.c3 THEN rt0.c0 ELSE '557618156' END))))) UNION ALL SELECT t0.c0, rt0.c1, rt0.c3 FROM t0, rt0 WHERE (((((1157709365)||(CASE WHEN rt0.c3 THEN rt0.c0 ELSE '557618156' END))) ISNULL));
SELECT t0.c0, rt0.c1, rt0.c3 FROM t0, rt0;
SELECT DISTINCT t0.c0, rt0.c2, rt0.c1 FROM t0, rt0;
SELECT DISTINCT t0.c0, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((((((rt0.c2)>=(t0.c0))))>=((((rt0.c3)<<(rt0.c0)))))) UNION SELECT DISTINCT t0.c0, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((NOT ((((((rt0.c2)>=(t0.c0))))>=((((rt0.c3)<<(rt0.c0)))))))) UNION SELECT DISTINCT t0.c0, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((((((((rt0.c2)>=(t0.c0))))>=((((rt0.c3)<<(rt0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0, rt0.c2, rt0.c1 FROM t0, rt0;
SELECT rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c2;
SELECT rt0.c1, t0.c0, rt0.c2 FROM t0 NOT INDEXED, rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS BLOB)) GROUP BY rt0.c1, t0.c0, rt0.c2 UNION SELECT rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 WHERE ((NOT (CAST(rt0.c0 COLLATE BINARY AS BLOB)))) GROUP BY rt0.c1, t0.c0, rt0.c2 UNION SELECT rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 WHERE (((CAST(rt0.c0 COLLATE BINARY AS BLOB)) ISNULL)) GROUP BY rt0.c1, t0.c0, rt0.c2;
SELECT rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c2;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING NULL UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING NULL UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON ((~ (rt0.c1)) IN ());
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON ((~ (rt0.c1)) IN ()) WHERE ((- (rt0.c2))) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN t0 ON ((~ (rt0.c1)) IN ()) WHERE ((NOT ((- (rt0.c2))))) UNION ALL SELECT * FROM rt0 NOT INDEXED LEFT OUTER JOIN t0 ON ((~ (rt0.c1)) IN ()) WHERE ((((- (rt0.c2))) ISNULL));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON ((~ (rt0.c1)) IN ());
SELECT DISTINCT t0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0;
SELECT DISTINCT t0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 WHERE (((rt0.c3 COLLATE NOCASE) NOTNULL)) UNION SELECT DISTINCT t0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 WHERE ((NOT (((rt0.c3 COLLATE NOCASE) NOTNULL)))) UNION SELECT DISTINCT t0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 WHERE (((((rt0.c3 COLLATE NOCASE) NOTNULL)) ISNULL));
SELECT DISTINCT t0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((x'')|(t0.c0))) NOT BETWEEN (x'8a17') AND ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, 0Xffffffffb038bc43, t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((x'')|(t0.c0))) NOT BETWEEN (x'8a17') AND ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, 0xffffffffb038bc43, t0.c0)))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((x'')|(t0.c0))) NOT BETWEEN (x'8a17') AND ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, 0xffffffffb038bc43, t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0)==(t0.c0)))GLOB(CHAR(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)=(t0.c0)))GLOB(CHAR(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((((t0.c0)=(t0.c0)))GLOB(CHAR(t0.c0)))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN t0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN t0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN t0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0 NATURAL JOIN t0;
SELECT rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, t0 WHERE (CAST(((rt0.c3)|(x'')) AS TEXT)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, t0 WHERE ((NOT (CAST(((rt0.c3)|(x'')) AS TEXT)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, t0 WHERE (((CAST(((rt0.c3)|(x'')) AS TEXT)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT t0.c0 FROM rt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM rt0, t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM rt0, t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM rt0, t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM rt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM rt0, t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM rt0, t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM rt0, t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM rt0, t0 GROUP BY t0.c0;
SELECT ALL rt0.c0, rt0.c3 FROM rt0;
SELECT rt0.c0, rt0.c3 FROM rt0 WHERE ((('-1338459069')==(rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT ((('-1338459069')=(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c3 FROM rt0 WHERE ((((('-1338459069')==(rt0.c1))) ISNULL));
SELECT ALL rt0.c0, rt0.c3 FROM rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ((((((+ (rt0.c2)))AND((~ (rt0.c3)))))AND(((rt0.c2)AND(t0.c0))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ((((((+ (rt0.c2)))AND((~ (rt0.c3)))))AND(((rt0.c2)AND(t0.c0))))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((((((((+ (rt0.c2)))AND((~ (rt0.c3)))))AND(((rt0.c2)AND(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt0.c3 FROM rt0, t0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, t0 WHERE (rt0.c3) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0, t0 WHERE ((NOT (rt0.c3))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0, t0 WHERE (((rt0.c3) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0, t0 GROUP BY rt0.c3;
SELECT t0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c1;
SELECT ALL t0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c1 HAVING CAST(((((((((rt0.c1)AND(AVG(rt0.c3))))AND(t0.c0)))AND(rt0.c3)))OR(t0.c0)) AS REAL) UNION ALL SELECT ALL t0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c1 HAVING (NOT (CAST(((((((((rt0.c1)AND(AVG(rt0.c3))))AND(t0.c0)))AND(rt0.c3)))OR(t0.c0)) AS REAL))) UNION ALL SELECT t0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c1 HAVING ((CAST(((((((((rt0.c1)AND(AVG(rt0.c3))))AND(t0.c0)))AND(rt0.c3)))OR(t0.c0)) AS REAL)) ISNULL);
SELECT t0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c1;
SELECT ALL t0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c1 HAVING CAST(((((((((rt0.c1)AND(AVG(rt0.c3))))AND(t0.c0)))AND(rt0.c3)))OR(t0.c0)) AS REAL) UNION ALL SELECT ALL t0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c1 HAVING (NOT (CAST(((((((((rt0.c1)AND(AVG(rt0.c3))))AND(t0.c0)))AND(rt0.c3)))OR(t0.c0)) AS REAL))) UNION ALL SELECT t0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c1 HAVING ((CAST(((((((((rt0.c1)AND(AVG(rt0.c3))))AND(t0.c0)))AND(rt0.c3)))OR(t0.c0)) AS REAL)) ISNULL);
SELECT t0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c1;
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((NOT (1001103337))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((NOT (1001103337))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((NOT (1001103337))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (TRIM(((rt0.c0)/(rt0.c3)), (((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (TRIM(((rt0.c0)/(rt0.c3)), (((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((TRIM(((rt0.c0)/(rt0.c3)), (((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT ALL t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2;
SELECT t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE ((((rt0.c3 IN (2039744743))) ISNULL)) GROUP BY t0.c0, rt0.c1, rt0.c2 UNION SELECT t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE ((NOT ((((rt0.c3 IN (2039744743))) ISNULL)))) GROUP BY t0.c0, rt0.c1, rt0.c2 UNION SELECT t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE ((((((rt0.c3 IN (2039744743))) ISNULL)) ISNULL)) GROUP BY t0.c0, rt0.c1, rt0.c2;
SELECT ALL t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0 HAVING NULL UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0 HAVING NULL UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c3)>>(rt0.c0)) COLLATE RTRIM) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c3)>>(rt0.c0)) COLLATE RTRIM))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c3)>>(rt0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ((~ ((~ (rt0.c0))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ((~ ((~ (rt0.c0))))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((((~ ((~ (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, t0 WHERE ((((rt0.c1)%(rt0.c2)) IN ())) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, t0 WHERE ((NOT ((((rt0.c1)%(rt0.c2)) IN ())))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, t0 WHERE ((((((rt0.c1)%(rt0.c2)) IN ())) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT t0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL t0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING GROUP_CONCAT(((AVG(rt0.c3)) IS FALSE)) UNION ALL SELECT ALL t0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (GROUP_CONCAT(((AVG(rt0.c3)) IS FALSE)))) UNION ALL SELECT t0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((GROUP_CONCAT(((AVG(rt0.c3)) IS FALSE))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))==((t0.c0 IN ())))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))=((t0.c0 IN ())))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))=((t0.c0 IN ())))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (((((((rt0.c1)AND(rt0.c1)))OR(LIKELY(DISTINCT t0.c0))))AND(CAST(rt0.c2 AS INTEGER)))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (((((((rt0.c1)AND(rt0.c1)))OR(LIKELY(DISTINCT t0.c0))))AND(CAST(rt0.c2 AS INTEGER)))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((((((((rt0.c1)AND(rt0.c1)))OR(LIKELY(DISTINCT t0.c0))))AND(CAST(rt0.c2 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3, t0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3, t0.c0 FROM t0, rt0 WHERE (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END COLLATE RTRIM) GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3, t0.c0 UNION SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3, t0.c0 FROM t0, rt0 WHERE ((NOT (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END COLLATE RTRIM))) GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3, t0.c0 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3, t0.c0 FROM t0, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3, t0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3, t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(COALESCE(DISTINCT MAX(t0.c0), t0.c0, t0.c0, t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(COALESCE(DISTINCT MAX(t0.c0), t0.c0, t0.c0, t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(COALESCE(DISTINCT MAX(t0.c0), t0.c0, t0.c0, t0.c0))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((((t0.c0))!=((t0.c0))) COLLATE RTRIM) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((t0.c0))<>((t0.c0))) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((t0.c0))<>((t0.c0))) COLLATE RTRIM) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((~ (CASE -620605249  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((~ (CASE -620605249  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((~ (CASE -620605249  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0 COLLATE NOCASE)AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 NOT INDEXED WHERE ((NOT (((((t0.c0 COLLATE NOCASE)AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((t0.c0 COLLATE NOCASE)AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(AVG(MIN(2052609200)))) NOTNULL) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((TOTAL(AVG(MIN(2052609200)))) NOTNULL))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((TOTAL(AVG(MIN(2052609200)))) NOTNULL)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((- ((~ (''))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT ((- ((~ (''))))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((((- ((~ (''))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ((+ ((- (t0.c0))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ((+ ((- (t0.c0))))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((((+ ((- (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((TOTAL_CHANGES())AND(CAST(x'' AS BLOB))))AND((t0.c0 IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((TOTAL_CHANGES())AND(CAST(x'' AS BLOB))))AND((t0.c0 IN ())))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((TOTAL_CHANGES())AND(CAST(x'' AS BLOB))))AND((t0.c0 IN ())))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)>=(t0.c0)) AS INTEGER)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CAST(((t0.c0)>=(t0.c0)) AS INTEGER)))) UNION ALL SELECT ALL * FROM t0 WHERE (((CAST(((t0.c0)>=(t0.c0)) AS INTEGER)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((~ (CAST('k蟈' AS BLOB)))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((~ (CAST('k蟈' AS BLOB)))))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((((~ (CAST('k蟈' AS BLOB)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM t0, rt0 WHERE (CAST(UNLIKELY(DISTINCT rt0.c1) AS BLOB)) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((NOT (CAST(UNLIKELY(DISTINCT rt0.c1) AS BLOB)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM t0, rt0 WHERE (((CAST(UNLIKELY(DISTINCT rt0.c1) AS BLOB)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM rt0 NOT INDEXED, t0 GROUP BY rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0 HAVING TOTAL(x'') UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0 HAVING (NOT (TOTAL(x''))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0 HAVING ((TOTAL(x'')) ISNULL);
SELECT rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM rt0 NOT INDEXED, t0 GROUP BY rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0 HAVING TOTAL(x'') UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0 HAVING (NOT (TOTAL(x''))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0 HAVING ((TOTAL(x'')) ISNULL);
SELECT rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM rt0 NOT INDEXED, t0 GROUP BY rt0.c3, rt0.c1, rt0.c2, t0.c0, rt0.c0;
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0 COLLATE RTRIM)AND(((t0.c0)*(t0.c0)))))AND((((t0.c0))<=((t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0 COLLATE RTRIM)AND(((t0.c0)*(t0.c0)))))AND((((t0.c0))<=((t0.c0)))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((((t0.c0 COLLATE RTRIM)AND(((t0.c0)*(t0.c0)))))AND((((t0.c0))<=((t0.c0)))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (json_quote(NULL)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (json_quote(NULL)))) UNION SELECT DISTINCT * FROM t0 WHERE (((json_quote(NULL)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((- ((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((- ((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((((- ((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL t0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM t0, rt0 NOT INDEXED GROUP BY t0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT t0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING COUNT((((TOTAL(MAX(TOTAL(rt0.c3)))))>((rt0.c0)))) UNION ALL SELECT t0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (COUNT((((TOTAL(MAX(TOTAL(rt0.c3)))))>((rt0.c0)))))) UNION ALL SELECT t0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING ((COUNT((((TOTAL(MAX(TOTAL(rt0.c3)))))>((rt0.c0))))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0))) IS TRUE)) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)IS NOT(t0.c0))) IS TRUE)))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((((t0.c0)IS NOT(t0.c0))) IS TRUE)) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, t0.c0, rt0.c1 FROM t0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, t0.c0, rt0.c1 FROM t0, rt0 WHERE ((((rt0.c1)=(rt0.c3)) IN ())) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, t0.c0, rt0.c1 FROM t0, rt0 WHERE ((NOT ((((rt0.c1)=(rt0.c3)) IN ())))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, t0.c0, rt0.c1 FROM t0 NOT INDEXED, rt0 WHERE ((((((rt0.c1)==(rt0.c3)) IN ())) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, t0.c0, rt0.c1 FROM t0, rt0;
SELECT ALL t0.c0, rt0.c0, rt0.c3 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c3;
SELECT t0.c0, rt0.c0, rt0.c3 FROM t0, rt0 WHERE (UNLIKELY(rt0.c1) COLLATE RTRIM) GROUP BY t0.c0, rt0.c0, rt0.c3 UNION SELECT ALL t0.c0, rt0.c0, rt0.c3 FROM t0, rt0 WHERE ((NOT (UNLIKELY(rt0.c1) COLLATE RTRIM))) GROUP BY t0.c0, rt0.c0, rt0.c3 UNION SELECT t0.c0, rt0.c0, rt0.c3 FROM t0, rt0 WHERE (((UNLIKELY(rt0.c1) COLLATE RTRIM) ISNULL)) GROUP BY t0.c0, rt0.c0, rt0.c3;
SELECT ALL t0.c0, rt0.c0, rt0.c3 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c3;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CASE (((GROUP_CONCAT(t0.c0), MAX(t0.c0), t0.c0))<=((t0.c0, t0.c0, SUM(TOTAL(t0.c0)))))  WHEN CAST(t0.c0 AS NUMERIC) THEN ((('913694655', COUNT(COUNT(*)), 0.9832821906508735)) NOT BETWEEN ((t0.c0, t0.c0, COUNT(*))) AND ((t0.c0, t0.c0, TOTAL(t0.c0)))) END UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CASE (((GROUP_CONCAT(t0.c0), MAX(t0.c0), t0.c0))<=((t0.c0, t0.c0, SUM(TOTAL(t0.c0)))))  WHEN CAST(t0.c0 AS NUMERIC) THEN ((('913694655', COUNT(COUNT(*)), 0.9832821906508735)) NOT BETWEEN ((t0.c0, t0.c0, COUNT(*))) AND ((t0.c0, t0.c0, TOTAL(t0.c0)))) END)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE (((GROUP_CONCAT(t0.c0), MAX(t0.c0), t0.c0))<=((t0.c0, t0.c0, SUM(TOTAL(t0.c0)))))  WHEN CAST(t0.c0 AS NUMERIC) THEN ((('913694655', COUNT(COUNT(*)), 0.9832821906508735)) NOT BETWEEN ((t0.c0, t0.c0, COUNT(*))) AND ((t0.c0, t0.c0, TOTAL(t0.c0)))) END) ISNULL);
SELECT MIN('') FROM rt0, t0;
SELECT * FROM t0, rt0;
SELECT ALL * FROM t0, rt0 WHERE (UPPER(((rt0.c1)<=(x'8c02')))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (UPPER(((rt0.c1)<=(x'8c02')))))) UNION ALL SELECT * FROM t0, rt0 WHERE (((UPPER(((rt0.c1)<=(x'8c02')))) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT rt0.c3 FROM rt0, t0;
SELECT DISTINCT rt0.c3 FROM rt0, t0 WHERE ((CAST(rt0.c2 AS TEXT) IN ())) UNION SELECT DISTINCT rt0.c3 FROM rt0, t0 WHERE ((NOT ((CAST(rt0.c2 AS TEXT) IN ())))) UNION SELECT DISTINCT rt0.c3 FROM rt0, t0 WHERE ((((CAST(rt0.c2 AS TEXT) IN ())) ISNULL));
SELECT DISTINCT rt0.c3 FROM rt0, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((- (((t0.c0)-(t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((- (((t0.c0)-(t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((- (((t0.c0)-(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c2, t0.c0 FROM t0 CROSS JOIN rt0 ON ((((HEX(DISTINCT rt0.c3))OR(t0.c0 COLLATE BINARY)))OR((((rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, t0.c0)) AND ((rt0.c2, rt0.c3, rt0.c2))))) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2, t0.c0;
SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2, t0.c0 FROM t0 CROSS JOIN rt0 ON ((((HEX(DISTINCT rt0.c3))OR(t0.c0 COLLATE BINARY)))OR((((rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, t0.c0)) AND ((rt0.c2, rt0.c3, rt0.c2))))) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2, t0.c0 HAVING rt0.c3 UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2, t0.c0 FROM t0 CROSS JOIN rt0 ON ((((HEX(DISTINCT rt0.c3))OR(t0.c0 COLLATE BINARY)))OR((((rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, t0.c0)) AND ((rt0.c2, rt0.c3, rt0.c2))))) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2, t0.c0 HAVING (NOT (rt0.c3)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2, t0.c0 FROM t0 CROSS JOIN rt0 ON ((((HEX(DISTINCT rt0.c3))OR(t0.c0 COLLATE BINARY)))OR((((rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, t0.c0)) AND ((rt0.c2, rt0.c3, rt0.c2))))) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2, t0.c0 HAVING ((rt0.c3) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c2, t0.c0 FROM t0 CROSS JOIN rt0 ON ((((HEX(DISTINCT rt0.c3))OR(t0.c0 COLLATE BINARY)))OR((((rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, t0.c0)) AND ((rt0.c2, rt0.c3, rt0.c2))))) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2, t0.c0;
SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2, t0.c0 FROM t0 CROSS JOIN rt0 ON ((((HEX(DISTINCT rt0.c3))OR(t0.c0 COLLATE BINARY)))OR((((rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, t0.c0)) AND ((rt0.c2, rt0.c3, rt0.c2))))) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2, t0.c0 HAVING rt0.c3 UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2, t0.c0 FROM t0 CROSS JOIN rt0 ON ((((HEX(DISTINCT rt0.c3))OR(t0.c0 COLLATE BINARY)))OR((((rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, t0.c0)) AND ((rt0.c2, rt0.c3, rt0.c2))))) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2, t0.c0 HAVING (NOT (rt0.c3)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2, t0.c0 FROM t0 CROSS JOIN rt0 ON ((((HEX(DISTINCT rt0.c3))OR(t0.c0 COLLATE BINARY)))OR((((rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, t0.c0)) AND ((rt0.c2, rt0.c3, rt0.c2))))) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2, t0.c0 HAVING ((rt0.c3) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c2, t0.c0 FROM t0 CROSS JOIN rt0 ON ((((HEX(DISTINCT rt0.c3))OR(t0.c0 COLLATE BINARY)))OR((((rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, t0.c0)) AND ((rt0.c2, rt0.c3, rt0.c2))))) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2, t0.c0;
SELECT ALL * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE ((NULLIF(t0.c0, 0.5286411911325355) IN ())) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT ((NULLIF(t0.c0, 0.5286411911325355) IN ())))) UNION ALL SELECT * FROM rt0, t0 WHERE ((((NULLIF(t0.c0, 0.5286411911325355) IN ())) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((('0.9668339223507374')AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((('0.9668339223507374')AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((('0.9668339223507374')AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c3 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c3 WHERE (((((rt0.c0)AND(rt0.c1)))OR(rt0.c3)) COLLATE NOCASE) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c3 WHERE ((NOT (((((rt0.c0)AND(rt0.c1)))OR(rt0.c3)) COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c3 WHERE (((((((rt0.c0)AND(rt0.c1)))OR(rt0.c3)) COLLATE NOCASE) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c3 GROUP BY t0.c0;
SELECT ALL t0.c0, rt0.c3 FROM rt0, t0 GROUP BY t0.c0, rt0.c3;
SELECT ALL t0.c0, rt0.c3 FROM rt0, t0 GROUP BY t0.c0, rt0.c3 HAVING TOTAL(((t0.c0)%(TOTAL(rt0.c1)))) UNION ALL SELECT ALL t0.c0, rt0.c3 FROM rt0, t0 GROUP BY t0.c0, rt0.c3 HAVING (NOT (TOTAL(((t0.c0)%(TOTAL(rt0.c1)))))) UNION ALL SELECT t0.c0, rt0.c3 FROM rt0, t0 GROUP BY t0.c0, rt0.c3 HAVING ((TOTAL(((t0.c0)%(TOTAL(rt0.c1))))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((t0.c0) NOT NULL)) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((t0.c0) NOT NULL)))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((t0.c0) NOT NULL)) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c3 FROM rt0, t0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM rt0, t0 WHERE (((TRIM(rt0.c2, NULL))<=(((rt0.c0)=(rt0.c0))))) GROUP BY rt0.c2, rt0.c3 UNION SELECT rt0.c2, rt0.c3 FROM rt0, t0 WHERE ((NOT (((TRIM(rt0.c2, NULL))<=(((rt0.c0)=(rt0.c0))))))) GROUP BY rt0.c2, rt0.c3 UNION SELECT rt0.c2, rt0.c3 FROM rt0, t0 WHERE (((((TRIM(rt0.c2, NULL))<=(((rt0.c0)=(rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0, t0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3 HAVING AVG(((t0.c0) ISNULL)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3 HAVING (NOT (AVG(((t0.c0) ISNULL)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3 HAVING ((AVG(((t0.c0) ISNULL))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3 HAVING AVG(((t0.c0) ISNULL)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3 HAVING (NOT (AVG(((t0.c0) ISNULL)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3 HAVING ((AVG(((t0.c0) ISNULL))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3;
SELECT ALL * FROM t0 NATURAL JOIN rt0;
SELECT * FROM t0 NATURAL JOIN rt0 WHERE (CAST(TYPEOF(DISTINCT t0.c0) AS BLOB)) UNION ALL SELECT * FROM t0 NATURAL JOIN rt0 WHERE ((NOT (CAST(TYPEOF(DISTINCT t0.c0) AS BLOB)))) UNION ALL SELECT * FROM t0 NATURAL JOIN rt0 WHERE (((CAST(TYPEOF(DISTINCT t0.c0) AS BLOB)) ISNULL));
SELECT ALL * FROM t0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1))) NOTNULL)) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1))) NOTNULL)))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1))) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c3 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c3 FROM rt0, t0 WHERE (((((rt0.c1)&(rt0.c2)))+((rt0.c2 IN ())))) GROUP BY rt0.c2, rt0.c1, rt0.c3 UNION SELECT rt0.c2, rt0.c1, rt0.c3 FROM rt0, t0 WHERE ((NOT (((((rt0.c1)&(rt0.c2)))+((rt0.c2 IN ())))))) GROUP BY rt0.c2, rt0.c1, rt0.c3 UNION SELECT rt0.c2, rt0.c1, rt0.c3 FROM rt0, t0 WHERE (((((((rt0.c1)&(rt0.c2)))+((rt0.c2 IN ())))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c3 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3, t0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c3, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3, t0.c0 HAVING CASE WHEN TOTAL(SUM(rt0.c2)) THEN rt0.c1 COLLATE RTRIM WHEN MAX(TOTAL(rt0.c1)) THEN t0.c0 WHEN (rt0.c3 IN (SUM(GROUP_CONCAT(rt0.c1)))) THEN COUNT(AVG(SUM(rt0.c2))) WHEN ((((t0.c0)AND(rt0.c2)))AND(rt0.c2)) THEN COUNT(t0.c0) WHEN TOTAL(AVG(MIN(t0.c0))) COLLATE NOCASE THEN GROUP_CONCAT(MIN(COUNT(rt0.c2))) ELSE ((rt0.c2) NOT BETWEEN (TOTAL(rt0.c1)) AND (rt0.c3)) END UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c3, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3, t0.c0 HAVING (NOT (CASE WHEN TOTAL(SUM(rt0.c2)) THEN rt0.c1 COLLATE RTRIM WHEN MAX(TOTAL(rt0.c1)) THEN t0.c0 WHEN (rt0.c3 IN (SUM(GROUP_CONCAT(rt0.c1)))) THEN COUNT(AVG(SUM(rt0.c2))) WHEN ((((t0.c0)AND(rt0.c2)))AND(rt0.c2)) THEN COUNT(t0.c0) WHEN TOTAL(AVG(MIN(t0.c0))) COLLATE NOCASE THEN GROUP_CONCAT(MIN(COUNT(rt0.c2))) ELSE ((rt0.c2) NOT BETWEEN (TOTAL(rt0.c1)) AND (rt0.c3)) END)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c3, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3, t0.c0 HAVING ((CASE WHEN TOTAL(SUM(rt0.c2)) THEN rt0.c1 COLLATE RTRIM WHEN MAX(TOTAL(rt0.c1)) THEN t0.c0 WHEN (rt0.c3 IN (SUM(GROUP_CONCAT(rt0.c1)))) THEN COUNT(AVG(SUM(rt0.c2))) WHEN ((((t0.c0)AND(rt0.c2)))AND(rt0.c2)) THEN COUNT(t0.c0) WHEN TOTAL(AVG(MIN(t0.c0))) COLLATE NOCASE THEN GROUP_CONCAT(MIN(COUNT(rt0.c2))) ELSE ((rt0.c2) NOT BETWEEN (TOTAL(rt0.c1)) AND (rt0.c3)) END) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1, t0.c0 FROM rt0 CROSS JOIN t0 ON (((rt0.c3 IN ())) NOT BETWEEN (((x'')>>(rt0.c3))) AND (CAST(rt0.c1 AS BLOB)));
SELECT ALL rt0.c0, rt0.c2, rt0.c1, t0.c0 FROM rt0 CROSS JOIN t0 ON (((rt0.c3 IN ())) NOT BETWEEN (((x'')>>(rt0.c3))) AND (CAST(rt0.c1 AS BLOB))) WHERE ((~ (CAST(rt0.c1 AS INTEGER)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, t0.c0 FROM rt0 CROSS JOIN t0 ON (((rt0.c3 IN ())) NOT BETWEEN (((x'')>>(rt0.c3))) AND (CAST(rt0.c1 AS BLOB))) WHERE ((NOT ((~ (CAST(rt0.c1 AS INTEGER)))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, t0.c0 FROM rt0 CROSS JOIN t0 ON (((rt0.c3 IN ())) NOT BETWEEN (((x'')>>(rt0.c3))) AND (CAST(rt0.c1 AS BLOB))) WHERE ((((~ (CAST(rt0.c1 AS INTEGER)))) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1, t0.c0 FROM rt0 CROSS JOIN t0 ON (((rt0.c3 IN ())) NOT BETWEEN (((x'')>>(rt0.c3))) AND (CAST(rt0.c1 AS BLOB)));
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (((MAX(t0.c0, rt0.c2))IS(((((rt0.c1)AND(rt0.c1)))AND(t0.c0))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (((MAX(t0.c0, rt0.c2))IS(((((rt0.c1)AND(rt0.c1)))AND(t0.c0))))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((((MAX(t0.c0, rt0.c2))IS(((((rt0.c1)AND(rt0.c1)))AND(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt0.c1, t0.c0, rt0.c0, rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, t0.c0, rt0.c0, rt0.c3, rt0.c2 FROM t0, rt0 WHERE (rt0.c3) GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c3, rt0.c2 UNION SELECT rt0.c1, t0.c0, rt0.c0, rt0.c3, rt0.c2 FROM t0, rt0 WHERE ((NOT (rt0.c3))) GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c1, t0.c0, rt0.c0, rt0.c3, rt0.c2 FROM t0, rt0 WHERE (((rt0.c3) ISNULL)) GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, t0.c0, rt0.c0, rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c3, rt0.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(MAX(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(MAX(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(MAX(t0.c0))) ISNULL);
SELECT SUM((rt0.c3 COLLATE RTRIM IN (((rt0.c1)>=(rt0.c3)), ((rt0.c1)AND(rt0.c2))))) FROM rt0 ORDER BY rt0.c2  NULLS FIRST, (((x'')) NOT BETWEEN ((((rt0.c1) NOT NULL))) AND ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 END))) DESC  NULLS FIRST, ((((rt0.c2 COLLATE NOCASE)OR(rt0.c0)))AND(((rt0.c3)>(rt0.c2))))  NULLS LAST;
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, '-197583478', t0.c0))) COLLATE RTRIM COLLATE BINARY) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, '-197583478', t0.c0))) COLLATE RTRIM COLLATE BINARY))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, '-197583478', t0.c0))) COLLATE RTRIM COLLATE BINARY) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0, rt0.c2 FROM rt0, t0;
SELECT DISTINCT t0.c0, rt0.c2 FROM rt0, t0 WHERE (((((((((((t0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c3))) NOT NULL)) UNION SELECT DISTINCT t0.c0, rt0.c2 FROM rt0, t0 WHERE ((NOT (((((((((((t0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c3))) NOT NULL)))) UNION SELECT DISTINCT t0.c0, rt0.c2 FROM rt0, t0 WHERE (((((((((((((t0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c3))) NOT NULL)) ISNULL));
SELECT DISTINCT t0.c0, rt0.c2 FROM rt0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((NOT (NULL))) IS FALSE)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((NOT (NULL))) IS FALSE)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((NOT (NULL))) IS FALSE)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0;
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 WHERE (-2.038168267E9) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((NOT (-2.038168267E9))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 WHERE (((-2.038168267E9) ISNULL));
SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0;
SELECT DISTINCT t0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM t0, rt0;
SELECT DISTINCT t0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM t0, rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT t0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM t0, rt0 WHERE ((NOT ((NOT (x''))))) UNION SELECT DISTINCT t0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM t0, rt0 WHERE ((((NOT (x''))) ISNULL));
SELECT DISTINCT t0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM t0, rt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST(((t0.c0)&(t0.c0)) AS REAL)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(((t0.c0)&(t0.c0)) AS REAL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CAST(((t0.c0)&(t0.c0)) AS REAL)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING ((LIKELIHOOD(rt0.c3, 0.780830051205206)) BETWEEN (((SUM(t0.c0))<<('1244820142'))) AND (CASE WHEN rt0.c2 THEN rt0.c2 END)) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING (NOT (((LIKELIHOOD(rt0.c3, 0.780830051205206)) BETWEEN (((SUM(t0.c0))<<('1244820142'))) AND (CASE WHEN rt0.c2 THEN rt0.c2 END)))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING ((((LIKELIHOOD(rt0.c3, 0.780830051205206)) BETWEEN (((SUM(t0.c0))<<('1244820142'))) AND (CASE WHEN rt0.c2 THEN rt0.c2 END))) ISNULL);
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING ((LIKELIHOOD(rt0.c3, 0.780830051205206)) BETWEEN (((SUM(t0.c0))<<('1244820142'))) AND (CASE WHEN rt0.c2 THEN rt0.c2 END)) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING (NOT (((LIKELIHOOD(rt0.c3, 0.780830051205206)) BETWEEN (((SUM(t0.c0))<<('1244820142'))) AND (CASE WHEN rt0.c2 THEN rt0.c2 END)))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING ((((LIKELIHOOD(rt0.c3, 0.780830051205206)) BETWEEN (((SUM(t0.c0))<<('1244820142'))) AND (CASE WHEN rt0.c2 THEN rt0.c2 END))) ISNULL);
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (CASE (rt0.c3 IN (rt0.c2))  WHEN CAST(rt0.c0 AS NUMERIC) THEN ((rt0.c3) ISNULL) END) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (CASE (rt0.c3 IN (rt0.c2))  WHEN CAST(rt0.c0 AS NUMERIC) THEN ((rt0.c3) ISNULL) END))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((CASE (rt0.c3 IN (rt0.c2))  WHEN CAST(rt0.c0 AS NUMERIC) THEN ((rt0.c3) ISNULL) END) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((- ((((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c3)) AND ((rt0.c2, '9R', rt0.c3)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((- ((((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c3)) AND ((rt0.c2, '9R', rt0.c3)))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((- ((((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c3)) AND ((rt0.c2, '9R', rt0.c3)))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, t0.c0, rt0.c0 FROM t0 CROSS JOIN rt0 ON (((x'', t0.c0, rt0.c1)) BETWEEN (((((rt0.c1))!=((rt0.c1))), rt0.c1 COLLATE RTRIM, '603329561')) AND ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 END, rt0.c3, '1489984471'))) GROUP BY rt0.c1, rt0.c2, rt0.c3, t0.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, t0.c0, rt0.c0 FROM t0 CROSS JOIN rt0 ON (((x'', t0.c0, rt0.c1)) BETWEEN (((((rt0.c1))!=((rt0.c1))), rt0.c1 COLLATE RTRIM, '603329561')) AND ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 END, rt0.c3, '1489984471'))) WHERE (CASE WHEN rt0.c3 THEN t0.c0 ELSE t0.c0 END COLLATE RTRIM) GROUP BY rt0.c1, rt0.c2, rt0.c3, t0.c0, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c3, t0.c0, rt0.c0 FROM t0 CROSS JOIN rt0 ON (((x'', t0.c0, rt0.c1)) BETWEEN (((((rt0.c1))<>((rt0.c1))), rt0.c1 COLLATE RTRIM, '603329561')) AND ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 END, rt0.c3, '1489984471'))) WHERE ((NOT (CASE WHEN rt0.c3 THEN t0.c0 ELSE t0.c0 END COLLATE RTRIM))) GROUP BY rt0.c1, rt0.c2, rt0.c3, t0.c0, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c3, t0.c0, rt0.c0 FROM t0 CROSS JOIN rt0 ON (((x'', t0.c0, rt0.c1)) BETWEEN (((((rt0.c1))!=((rt0.c1))), rt0.c1 COLLATE RTRIM, '603329561')) AND ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 END, rt0.c3, '1489984471'))) WHERE (((CASE WHEN rt0.c3 THEN t0.c0 ELSE t0.c0 END COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c3, t0.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, t0.c0, rt0.c0 FROM t0 CROSS JOIN rt0 ON (((x'', t0.c0, rt0.c1)) BETWEEN (((((rt0.c1))!=((rt0.c1))), rt0.c1 COLLATE RTRIM, '603329561')) AND ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 END, rt0.c3, '1489984471'))) GROUP BY rt0.c1, rt0.c2, rt0.c3, t0.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c3, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c3, t0.c0;
SELECT rt0.c1, rt0.c3, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c3, t0.c0 HAVING SUM(rt0.c1) UNION ALL SELECT ALL rt0.c1, rt0.c3, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c3, t0.c0 HAVING (NOT (SUM(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c3, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c3, t0.c0 HAVING ((SUM(rt0.c1)) ISNULL);
SELECT ALL rt0.c1, rt0.c3, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c3, t0.c0;
SELECT rt0.c1, rt0.c3, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c3, t0.c0 HAVING SUM(rt0.c1) UNION ALL SELECT ALL rt0.c1, rt0.c3, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c3, t0.c0 HAVING (NOT (SUM(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c3, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c3, t0.c0 HAVING ((SUM(rt0.c1)) ISNULL);
SELECT ALL rt0.c1, rt0.c3, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c3, t0.c0;
SELECT * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)))LIKE((NOT (rt0.c3))))) UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT (((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)))LIKE((NOT (rt0.c3))))))) UNION ALL SELECT * FROM t0, rt0 WHERE (((((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)))LIKE((NOT (rt0.c3))))) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END) NOTNULL)) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))  WHEN ((t0.c0) IS TRUE) THEN x'' END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CASE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))  WHEN ((t0.c0) IS TRUE) THEN x'' END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CASE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))  WHEN ((t0.c0) IS TRUE) THEN x'' END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, rt0.c2, rt0.c3 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c3;
SELECT ALL t0.c0, rt0.c2, rt0.c3 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c3 HAVING ((rt0.c0) BETWEEN (rt0.c2) AND (t0.c0)) COLLATE BINARY UNION ALL SELECT ALL t0.c0, rt0.c2, rt0.c3 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c3 HAVING (NOT (((rt0.c0) BETWEEN (rt0.c2) AND (t0.c0)) COLLATE BINARY)) UNION ALL SELECT ALL t0.c0, rt0.c2, rt0.c3 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c3 HAVING ((((rt0.c0) BETWEEN (rt0.c2) AND (t0.c0)) COLLATE BINARY) ISNULL);
SELECT t0.c0, rt0.c2, rt0.c3 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c3;
SELECT ALL t0.c0, rt0.c2, rt0.c3 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c3 HAVING ((rt0.c0) BETWEEN (rt0.c2) AND (t0.c0)) COLLATE BINARY UNION ALL SELECT ALL t0.c0, rt0.c2, rt0.c3 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c3 HAVING (NOT (((rt0.c0) BETWEEN (rt0.c2) AND (t0.c0)) COLLATE BINARY)) UNION ALL SELECT ALL t0.c0, rt0.c2, rt0.c3 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c3 HAVING ((((rt0.c0) BETWEEN (rt0.c2) AND (t0.c0)) COLLATE BINARY) ISNULL);
SELECT t0.c0, rt0.c2, rt0.c3 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c3;
SELECT ALL MAX((- ((t0.c0 IN ())))) FROM t0 ORDER BY t0.c0, ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))<=(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '{' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ASC  NULLS LAST;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM t0 INNER JOIN rt0 ON CAST(((rt0.c0)GLOB(t0.c0)) AS REAL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM t0 INNER JOIN rt0 ON CAST(((rt0.c0)GLOB(t0.c0)) AS REAL) WHERE (((((((((HEX(1716621255))AND(((rt0.c1)&(rt0.c3)))))OR(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 END)))AND(rt0.c1 COLLATE RTRIM))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM t0 INNER JOIN rt0 ON CAST(((rt0.c0)GLOB(t0.c0)) AS REAL) WHERE ((NOT (((((((((HEX(1716621255))AND(((rt0.c1)&(rt0.c3)))))OR(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 END)))AND(rt0.c1 COLLATE RTRIM))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM t0 INNER JOIN rt0 ON CAST(((rt0.c0)GLOB(t0.c0)) AS REAL) WHERE (((((((((((HEX(1716621255))AND(((rt0.c1)&(rt0.c3)))))OR(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 END)))AND(rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM t0 INNER JOIN rt0 ON CAST(((rt0.c0)GLOB(t0.c0)) AS REAL);
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0)))-(((rt0.c3)&(rt0.c2))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0)))-(((rt0.c3)&(rt0.c2))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0)))-(((rt0.c3)&(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, t0.c0, rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, t0.c0, rt0.c3, rt0.c2;
SELECT rt0.c0, rt0.c1, t0.c0, rt0.c3, rt0.c2 FROM t0, rt0 WHERE (((rt0.c1)IS(((0Xffffffffbc18f32c)>(NULL))))) GROUP BY rt0.c0, rt0.c1, t0.c0, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, t0.c0, rt0.c3, rt0.c2 FROM t0, rt0 WHERE ((NOT (((rt0.c1)IS(((0xffffffffbc18f32c)>(NULL))))))) GROUP BY rt0.c0, rt0.c1, t0.c0, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, t0.c0, rt0.c3, rt0.c2 FROM t0, rt0 WHERE (((((rt0.c1)IS(((0xffffffffbc18f32c)>(NULL))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, t0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, t0.c0, rt0.c3, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, t0.c0, rt0.c3, rt0.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(TOTAL(COUNT(AVG(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(TOTAL(COUNT(AVG(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(TOTAL(COUNT(AVG(t0.c0))))) ISNULL);
SELECT t0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM t0, rt0;
SELECT t0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((((t0.c0)<>('2059913524')) IN ())) UNION ALL SELECT t0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((NOT ((((t0.c0)<>('2059913524')) IN ())))) UNION ALL SELECT ALL t0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((((((t0.c0)<>('2059913524')) IN ())) ISNULL));
SELECT t0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (((((((rt0.c3)OR(t0.c0)))AND(rt0.c0)))<=(NULLIF(DISTINCT rt0.c3, rt0.c1)))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (((((((rt0.c3)OR(t0.c0)))AND(rt0.c0)))<=(NULLIF(DISTINCT rt0.c3, rt0.c1)))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((((((((rt0.c3)OR(t0.c0)))AND(rt0.c0)))<=(NULLIF(DISTINCT rt0.c3, rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0, t0 WHERE ((((- (rt0.c3)))<=(((((0X2737d924)OR(rt0.c3)))OR(t0.c0))))) GROUP BY rt0.c1, rt0.c3, rt0.c2 UNION SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0, t0 WHERE ((NOT ((((- (rt0.c3)))<=(((((0x2737d924)OR(rt0.c3)))OR(t0.c0))))))) GROUP BY rt0.c1, rt0.c3, rt0.c2 UNION SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0, t0 WHERE ((((((- (rt0.c3)))<=(((((0x2737d924)OR(rt0.c3)))OR(t0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((((((~ (rt0.c2)))AND(UNLIKELY(DISTINCT rt0.c2))))OR(rt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((NOT ((((((~ (rt0.c2)))AND(UNLIKELY(DISTINCT rt0.c2))))OR(rt0.c0 COLLATE NOCASE))))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((((((((~ (rt0.c2)))AND(UNLIKELY(DISTINCT rt0.c2))))OR(rt0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((- (rt0.c0)))OR(GLOB(rt0.c2, rt0.c1)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((- (rt0.c0)))OR(GLOB(rt0.c2, rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((- (rt0.c0)))OR(GLOB(rt0.c2, rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c3, rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c3, rt0.c0, t0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE (LIKELIHOOD((rt0.c3 IN (rt0.c3)), 0.11608286793961375)) GROUP BY rt0.c3, rt0.c0, t0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c3, rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE ((NOT (LIKELIHOOD((rt0.c3 IN (rt0.c3)), 0.11608286793961375)))) GROUP BY rt0.c3, rt0.c0, t0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c3, rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE (((LIKELIHOOD((rt0.c3 IN (rt0.c3)), 0.11608286793961375)) ISNULL)) GROUP BY rt0.c3, rt0.c0, t0.c0, rt0.c1, rt0.c2;
SELECT rt0.c3, rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c3, rt0.c0, t0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING ((LIKELIHOOD(DISTINCT rt0.c0, 0.27726758662762196))<(AVG(AVG(rt0.c1)))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (((LIKELIHOOD(DISTINCT rt0.c0, 0.27726758662762196))<(AVG(AVG(rt0.c1)))))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING ((((LIKELIHOOD(DISTINCT rt0.c0, 0.27726758662762196))<(AVG(AVG(rt0.c1))))) ISNULL);
SELECT * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE (((((NULL)AND(((rt0.c2)>>(rt0.c0)))))OR(ABS(DISTINCT rt0.c1)))) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (((((NULL)AND(((rt0.c2)>>(rt0.c0)))))OR(ABS(DISTINCT rt0.c1)))))) UNION ALL SELECT * FROM rt0, t0 WHERE (((((((NULL)AND(((rt0.c2)>>(rt0.c0)))))OR(ABS(DISTINCT rt0.c1)))) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (((rt0.c1)GLOB(rt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (((rt0.c1)GLOB(rt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((((rt0.c1)GLOB(rt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM t0, rt0 WHERE (((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c0)))AND(((((rt0.c2)OR(t0.c0)))OR(0.965060379754133)))))AND(((rt0.c2)-(rt0.c3))))) GROUP BY rt0.c3, rt0.c0, rt0.c2 UNION SELECT rt0.c3, rt0.c0, rt0.c2 FROM t0, rt0 WHERE ((NOT (((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c0)))AND(((((rt0.c2)OR(t0.c0)))OR(0.965060379754133)))))AND(((rt0.c2)-(rt0.c3))))))) GROUP BY rt0.c3, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM t0, rt0 WHERE (((((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c0)))AND(((((rt0.c2)OR(t0.c0)))OR(0.965060379754133)))))AND(((rt0.c2)-(rt0.c3))))) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2;
SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0 HAVING CASE WHEN ((COUNT(rt0.c1)) BETWEEN (rt0.c0) AND (AVG(MIN(t0.c0)))) THEN (+ (GROUP_CONCAT(COUNT(rt0.c2)))) WHEN SUM(NULL) THEN TOTAL(COUNT(*)) WHEN ((((SUM(rt0.c0))AND('')))OR(MAX(MAX(rt0.c3)))) THEN rt0.c0 END UNION ALL SELECT ALL rt0.c0 FROM rt0, t0 GROUP BY rt0.c0 HAVING (NOT (CASE WHEN ((COUNT(rt0.c1)) BETWEEN (rt0.c0) AND (AVG(MIN(t0.c0)))) THEN (+ (GROUP_CONCAT(COUNT(rt0.c2)))) WHEN SUM(NULL) THEN TOTAL(COUNT(*)) WHEN ((((SUM(rt0.c0))AND('')))OR(MAX(MAX(rt0.c3)))) THEN rt0.c0 END)) UNION ALL SELECT ALL rt0.c0 FROM rt0, t0 GROUP BY rt0.c0 HAVING ((CASE WHEN ((COUNT(rt0.c1)) BETWEEN (rt0.c0) AND (AVG(MIN(t0.c0)))) THEN (+ (GROUP_CONCAT(COUNT(rt0.c2)))) WHEN SUM(NULL) THEN TOTAL(COUNT(*)) WHEN ((((SUM(rt0.c0))AND('')))OR(MAX(MAX(rt0.c3)))) THEN rt0.c0 END) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((((((t0.c0) IS FALSE), ((((t0.c0)OR(t0.c0)))AND(t0.c0)), NULL))<((0.6345607293942439, 0Xffffffffce72fa69, (((t0.c0))=((t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0) IS FALSE), ((((t0.c0)OR(t0.c0)))AND(t0.c0)), NULL))<((0.6345607293942439, 0xffffffffce72fa69, (((t0.c0))==((t0.c0))))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((((((t0.c0) IS FALSE), ((((t0.c0)OR(t0.c0)))AND(t0.c0)), NULL))<((0.6345607293942439, 0xffffffffce72fa69, (((t0.c0))==((t0.c0))))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0 WHERE (CASE WHEN (((rt0.c0))<((x''))) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)) ELSE rt0.c3 END) UNION SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN (((rt0.c0))<((x''))) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)) ELSE rt0.c3 END))) UNION SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0 WHERE (((CASE WHEN (((rt0.c0))<((x''))) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)) ELSE rt0.c3 END) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0;
