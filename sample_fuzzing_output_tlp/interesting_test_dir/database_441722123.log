-- Time: 2024/06/11 18:30:41
-- Database: database23
-- Database version: 3.40.0
-- seed value: 441722123
PRAGMA cache_size = 50000; -- 12ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
END; -- 4ms;
INSERT OR REPLACE INTO rt0(c0, c2, c1) VALUES (NULL, 0.2998629654591287, 0.06035877397736755), (1285075149, '-960905248', '0.06035877397736755'), ('1130532845', NULL, 0.06035877397736755); -- 1ms;
INSERT OR IGNORE INTO rt0 VALUES ('ﮦ4', 0xffffffffc6b9bfe0, '0'); -- 0ms;
ROLLBACK TRANSACTION; -- 2ms;
ROLLBACK TRANSACTION; -- 1ms;
REINDEX; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.secure_delete = FAST; -- 0ms;
INSERT OR REPLACE INTO rt0(c1) VALUES (0xffffffffc5cae6ba), ('842686731'), (x''); -- 5ms;
INSERT OR ROLLBACK INTO rt0(c2, c1) VALUES (0.7510284245631679, 0.3114491065738625); -- 5ms;
UPDATE rt1 SET (c1, c0)=('1556295521', 0Xffffffffbdccf66d); -- 0ms;
INSERT OR FAIL INTO rt0 VALUES (NULL, '', 'Lq''鏲M駷5'), (x'', -2033991422, 'qX9I6s'), ('-813805575', NULL, NULL); -- 1ms;
INSERT OR REPLACE INTO rt1(c1, c2, c0) VALUES (-1.7976931348623157E308, NULL, 1285075149); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1) VALUES (0xffffffffc6b9bfe0, x'c6fd'); -- 1ms;
END; -- 0ms;
REINDEX  rt1; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c0, c2) VALUES (NULL, NULL, ((CASE WHEN '' THEN NULL WHEN NULL THEN '842686731' WHEN 0.62906758661498 THEN NULL END)+(((786789005) BETWEEN (NULL) AND (0.35253899901118213))))); -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c0) VALUES (1130532845, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES ('1285075149'); -- 0ms;
ANALYZE sqlite_master; -- 2ms;
PRAGMA temp.locking_mode; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.cell_size_check = false; -- 0ms;
PRAGMA journal_mode = PERSIST; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=0.4312176079743224 WHERE CASE WHEN ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)) THEN ROUND(x'', rt0.c0) WHEN TYPEOF(rt0.c2) THEN ((('A~')) BETWEEN ((rt0.c0)) AND ((rt0.c1))) WHEN (((rt0.c1))=((rt0.c0))) THEN ((rt0.c2) IS FALSE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1091328336'); -- 0ms;
ANALYZE; -- 2ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 4ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt1(c0) VALUES ('-2033991422'); -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (x''); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c0='1285075149'; -- 4ms;
INSERT OR FAIL INTO rt1(c2, c0) VALUES (NULL, NULL), (-1951400777, 0.5544118564435041), ('+g', x'4725'); -- 8ms;
INSERT OR REPLACE INTO rt0(c2) VALUES ('-1951400777'), (NULL), ('0.4312176079743224'); -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES (0.06035877397736755); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA checkpoint_fullfsync = true; -- 1ms;
DROP TABLE rt0; -- 0ms;
ANALYZE rt1; -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA busy_timeout = 10000; -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (x'', 'kK\U섂#5O2', x'8616'); -- 0ms;
PRAGMA main.legacy_file_format = true; -- 0ms;
REINDEX  rt1; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c0) VALUES (x'cd4f', 0xffffffffb4f5cbe2); -- 1ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO rt1(c2, c0) VALUES ('KO[狐Sf', 56042927), ('1556295521', -2033991422), (0.03155607513411407, -792253613); -- 0ms;
INSERT OR ABORT INTO rt1(c0) VALUES (0.7791217733757025); -- 1ms;
INSERT OR REPLACE INTO rt1(c2) VALUES (NULL); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR FAIL rt1 SET c2='56042927'; -- 0ms;
INSERT OR FAIL INTO rt1(c1) VALUES (x''), (x'b1d8abda'), (0.23646611007110774); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c2) VALUES (418092018, '870685175'); -- 0ms;
ROLLBACK TRANSACTION; -- 2ms;
INSERT OR REPLACE INTO rt1(c2) VALUES (0X79953805); -- 0ms;
PRAGMA main.short_column_names; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c1) VALUES (1.556295521E9, 0.26957846405339136); -- 12ms;
PRAGMA secure_delete = false; -- 0ms;
VACUUM; -- 1ms;
PRAGMA temp.short_column_names = true; -- 0ms;
PRAGMA main.cache_spill = true; -- 0ms;
PRAGMA checkpoint_fullfsync = false; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
END; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ANALYZE; -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 INT ); -- 0ms;
UPDATE OR FAIL rt1 SET (c2)=('1285075149') WHERE ((CAST(rt1.c1 AS INTEGER)) NOT BETWEEN ((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) AND (((x'')>(rt1.c1)))); -- 1ms;
END TRANSACTION; -- 0ms;
PRAGMA temp.threads; -- 0ms;
UPDATE OR FAIL t0 SET c0=x'cb83c84f' WHERE ((((((((((t0.c0)GLOB(t0.c0)))OR(((t0.c0) NOT NULL))))AND(CAST(t0.c0 AS INTEGER))))AND((((t0.c0))<((t0.c0))))))OR(CAST(t0.c0 AS NUMERIC))); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM t0, rt1;
SELECT ALL * FROM t0, rt1 WHERE ('0.4312176079743224') UNION ALL SELECT * FROM t0, rt1 WHERE ((NOT ('0.4312176079743224'))) UNION ALL SELECT ALL * FROM t0, rt1 WHERE ((('0.4312176079743224') ISNULL));
SELECT ALL * FROM t0, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (rt1.c0) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (rt1.c0))) UNION SELECT DISTINCT * FROM rt1 WHERE (((rt1.c0) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT t0.c0 FROM t0, rt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, rt1 WHERE (((t0.c0) NOTNULL)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, rt1 WHERE ((NOT (((t0.c0) NOTNULL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, rt1 WHERE (((((t0.c0) NOTNULL)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, rt1 GROUP BY t0.c0;
SELECT t0.c0 FROM rt1 FULL OUTER JOIN t0 ON NULL GROUP BY t0.c0;
SELECT ALL t0.c0 FROM rt1 FULL OUTER JOIN t0 ON NULL GROUP BY t0.c0 HAVING ((((MIN(rt1.c1))|(GROUP_CONCAT(TOTAL(SUM(GROUP_CONCAT(rt1.c0))))))) NOT BETWEEN (MAX(rt1.c2)) AND (rt1.c2)) UNION ALL SELECT t0.c0 FROM rt1 FULL OUTER JOIN t0 ON NULL GROUP BY t0.c0 HAVING (NOT (((((MIN(rt1.c1))|(GROUP_CONCAT(TOTAL(SUM(GROUP_CONCAT(rt1.c0))))))) NOT BETWEEN (MAX(rt1.c2)) AND (rt1.c2)))) UNION ALL SELECT ALL t0.c0 FROM rt1 FULL OUTER JOIN t0 ON NULL GROUP BY t0.c0 HAVING ((((((MIN(rt1.c1))|(GROUP_CONCAT(TOTAL(SUM(GROUP_CONCAT(rt1.c0))))))) NOT BETWEEN (MAX(rt1.c2)) AND (rt1.c2))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((((+ (t0.c0))) BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (CASE 'r\''U俹L'  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((+ (t0.c0))) BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (CASE 'r\''U俹L'  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) UNION ALL SELECT * FROM t0 WHERE ((((((+ (t0.c0))) BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (CASE 'r\''U俹L'  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c1)*(rt1.c0))) NOT BETWEEN (((rt1.c1) NOT NULL)) AND ((((x'')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((rt1.c1)*(rt1.c0))) NOT BETWEEN (((rt1.c1) NOT NULL)) AND ((((x'')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c1)*(rt1.c0))) NOT BETWEEN (((rt1.c1) NOT NULL)) AND ((((x'')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 WHERE (CAST(HEX(DISTINCT rt1.c0) AS NUMERIC)) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE ((NOT (CAST(HEX(DISTINCT rt1.c0) AS NUMERIC)))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE (((CAST(HEX(DISTINCT rt1.c0) AS NUMERIC)) ISNULL)) GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, t0 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, t0 GROUP BY rt1.c0 HAVING TOTAL(rtreenode(rt1.c1, t0.c0)) UNION ALL SELECT rt1.c0 FROM rt1, t0 GROUP BY rt1.c0 HAVING (NOT (TOTAL(rtreenode(rt1.c1, t0.c0)))) UNION ALL SELECT ALL rt1.c0 FROM rt1, t0 GROUP BY rt1.c0 HAVING ((TOTAL(rtreenode(rt1.c1, t0.c0))) ISNULL);
SELECT ALL rt1.c0 FROM rt1, t0 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, t0 GROUP BY rt1.c0 HAVING TOTAL(rtreenode(rt1.c1, t0.c0)) UNION ALL SELECT rt1.c0 FROM rt1, t0 GROUP BY rt1.c0 HAVING (NOT (TOTAL(rtreenode(rt1.c1, t0.c0)))) UNION ALL SELECT ALL rt1.c0 FROM rt1, t0 GROUP BY rt1.c0 HAVING ((TOTAL(rtreenode(rt1.c1, t0.c0))) ISNULL);
SELECT ALL rt1.c0 FROM rt1, t0 GROUP BY rt1.c0;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) ISNULL)) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) ISNULL)))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) ISNULL)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ('SQ0') UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ('SQ0'))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((('SQ0') ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((((rt1.c0, rt1.c1, rt1.c1)) BETWEEN ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 END, (rt1.c1 IN ()), (((rt1.c2, rt1.c2, rt1.c0, rt1.c1, rt1.c2))<>((rt1.c1, rt1.c0, rt1.c1, rt1.c2, rt1.c2))))) AND ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 END, ((((rt1.c2)AND(rt1.c1)))OR(rt1.c1)), (NOT (rt1.c2)))))) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT ((((rt1.c0, rt1.c1, rt1.c1)) BETWEEN ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 END, (rt1.c1 IN ()), (((rt1.c2, rt1.c2, rt1.c0, rt1.c1, rt1.c2))<>((rt1.c1, rt1.c0, rt1.c1, rt1.c2, rt1.c2))))) AND ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 END, ((((rt1.c2)AND(rt1.c1)))OR(rt1.c1)), (NOT (rt1.c2)))))))) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((((((rt1.c0, rt1.c1, rt1.c1)) BETWEEN ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 END, (rt1.c1 IN ()), (((rt1.c2, rt1.c2, rt1.c0, rt1.c1, rt1.c2))<>((rt1.c1, rt1.c0, rt1.c1, rt1.c2, rt1.c2))))) AND ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 END, ((((rt1.c2)AND(rt1.c1)))OR(rt1.c1)), (NOT (rt1.c2)))))) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, t0.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, t0.c0 HAVING (((('405748963')OR(((rt1.c1)>(TOTAL(rt1.c0))))))AND(COUNT(*))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, t0.c0 HAVING (NOT ((((('405748963')OR(((rt1.c1)>(TOTAL(rt1.c0))))))AND(COUNT(*))))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, t0.c0 HAVING (((((('405748963')OR(((rt1.c1)>(TOTAL(rt1.c0))))))AND(COUNT(*)))) ISNULL);
SELECT rt1.c1, rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, t0.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, t0.c0 HAVING (((('405748963')OR(((rt1.c1)>(TOTAL(rt1.c0))))))AND(COUNT(*))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, t0.c0 HAVING (NOT ((((('405748963')OR(((rt1.c1)>(TOTAL(rt1.c0))))))AND(COUNT(*))))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, t0.c0 HAVING (((((('405748963')OR(((rt1.c1)>(TOTAL(rt1.c0))))))AND(COUNT(*)))) ISNULL);
SELECT rt1.c1, rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, t0.c0;
SELECT ALL rt1.c1, t0.c0, rt1.c0, rt1.c2 FROM t0, rt1;
SELECT ALL rt1.c1, t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 WHERE (INSTR(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)), t0.c0)) UNION ALL SELECT ALL rt1.c1, t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 WHERE ((NOT (INSTR(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)), t0.c0)))) UNION ALL SELECT rt1.c1, t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 WHERE (((INSTR(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)), t0.c0)) ISNULL));
SELECT ALL rt1.c1, t0.c0, rt1.c0, rt1.c2 FROM t0, rt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((PRINTF(0.12778985892220351, t0.c0, t0.c0))%(((t0.c0)>=(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((PRINTF(0.12778985892220351, t0.c0, t0.c0))%(((t0.c0)>=(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((PRINTF(0.12778985892220351, t0.c0, t0.c0))%(((t0.c0)>=(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((t0.c0 IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((NOT ((t0.c0 IN ())))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((NOT ((t0.c0 IN ())))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c1, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2 HAVING ((MAX(TOTAL(AVG(GROUP_CONCAT(rt1.c0))))) NOT NULL) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2 HAVING (NOT (((MAX(TOTAL(AVG(GROUP_CONCAT(rt1.c0))))) NOT NULL))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 NOT INDEXED, t0 GROUP BY rt1.c1, rt1.c2 HAVING ((((MAX(TOTAL(AVG(GROUP_CONCAT(rt1.c0))))) NOT NULL)) ISNULL);
SELECT * FROM t0 RIGHT OUTER JOIN rt1 ON x'';
SELECT * FROM t0 RIGHT OUTER JOIN rt1 ON x'' WHERE ((- (((t0.c0)|(rt1.c2))))) UNION ALL SELECT * FROM t0 RIGHT OUTER JOIN rt1 ON x'' WHERE ((NOT ((- (((t0.c0)|(rt1.c2))))))) UNION ALL SELECT * FROM t0 RIGHT OUTER JOIN rt1 ON x'' WHERE ((((- (((t0.c0)|(rt1.c2))))) ISNULL));
SELECT * FROM t0 RIGHT OUTER JOIN rt1 ON x'';
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS TRUE)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS TRUE)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS TRUE)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT rt1.c1, t0.c0, rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY rt1.c1, t0.c0, rt1.c2, rt1.c0;
SELECT rt1.c1, t0.c0, rt1.c2, rt1.c0 FROM t0, rt1 WHERE ((NOT (rt1.c2))) GROUP BY rt1.c1, t0.c0, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, t0.c0, rt1.c2, rt1.c0 FROM t0, rt1 WHERE ((NOT ((NOT (rt1.c2))))) GROUP BY rt1.c1, t0.c0, rt1.c2, rt1.c0 UNION SELECT rt1.c1, t0.c0, rt1.c2, rt1.c0 FROM t0, rt1 WHERE ((((NOT (rt1.c2))) ISNULL)) GROUP BY rt1.c1, t0.c0, rt1.c2, rt1.c0;
SELECT rt1.c1, t0.c0, rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY rt1.c1, t0.c0, rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING COUNT(*) COLLATE NOCASE UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (COUNT(*) COLLATE NOCASE)) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((COUNT(*) COLLATE NOCASE) ISNULL);
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING COUNT(*) COLLATE NOCASE UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (COUNT(*) COLLATE NOCASE)) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((COUNT(*) COLLATE NOCASE) ISNULL);
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT SUM(((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c0 COLLATE BINARY))) FROM t0, rt1 ORDER BY (((+ (rt1.c0)))>=(x''))  NULLS FIRST;
SELECT * FROM rt1, t0;
SELECT ALL * FROM rt1, t0 WHERE (rt1.c0) UNION ALL SELECT * FROM rt1, t0 WHERE ((NOT (rt1.c0))) UNION ALL SELECT ALL * FROM rt1, t0 WHERE (((rt1.c0) ISNULL));
SELECT * FROM rt1, t0;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (CAST((~ (rt1.c1)) AS REAL)) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (CAST((~ (rt1.c1)) AS REAL)))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((CAST((~ (rt1.c1)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((+ (((rt1.c0)-(rt1.c0))))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT ((+ (((rt1.c0)-(rt1.c0))))))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((((+ (((rt1.c0)-(rt1.c0))))) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (((((rt1.c1))<((MAX(TOTAL(rt1.c1))))))AND(COUNT(COUNT(*)))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (NOT ((((((rt1.c1))<((MAX(TOTAL(rt1.c1))))))AND(COUNT(COUNT(*)))))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (((((((rt1.c1))<((MAX(TOTAL(rt1.c1))))))AND(COUNT(COUNT(*))))) ISNULL);
SELECT rt1.c2, rt1.c1, t0.c0 FROM rt1 RIGHT OUTER JOIN t0 ON rt1.c0;
SELECT rt1.c2, rt1.c1, t0.c0 FROM rt1 RIGHT OUTER JOIN t0 ON rt1.c0 WHERE (((((t0.c0) NOT BETWEEN (rt1.c2) AND (t0.c0)))*(rt1.c1))) UNION ALL SELECT ALL rt1.c2, rt1.c1, t0.c0 FROM rt1 RIGHT OUTER JOIN t0 ON rt1.c0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (rt1.c2) AND (t0.c0)))*(rt1.c1))))) UNION ALL SELECT rt1.c2, rt1.c1, t0.c0 FROM rt1 RIGHT OUTER JOIN t0 ON rt1.c0 WHERE (((((((t0.c0) NOT BETWEEN (rt1.c2) AND (t0.c0)))*(rt1.c1))) ISNULL));
SELECT rt1.c2, rt1.c1, t0.c0 FROM rt1 RIGHT OUTER JOIN t0 ON rt1.c0;
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c2 FROM rt1 WHERE (rt1.c1) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((rt1.c2) NOT BETWEEN (((0.1935146178198336)||(rt1.c0))) AND (-2098642107))) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (((rt1.c2) NOT BETWEEN (((0.1935146178198336)||(rt1.c0))) AND (-2098642107))))) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (((0.1935146178198336)||(rt1.c0))) AND (-2098642107))) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT rt1.c0 FROM t0 RIGHT OUTER JOIN rt1 ON (((((+ (rt1.c1)))AND('1691370171')))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN rt1.c1 THEN x'' WHEN t0.c0 THEN rt1.c0 END)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM t0 RIGHT OUTER JOIN rt1 ON (((((+ (rt1.c1)))AND('1691370171')))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN rt1.c1 THEN x'' WHEN t0.c0 THEN rt1.c0 END)) GROUP BY rt1.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT rt1.c0 FROM t0 RIGHT OUTER JOIN rt1 ON (((((+ (rt1.c1)))AND('1691370171')))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN rt1.c1 THEN x'' WHEN t0.c0 THEN rt1.c0 END)) GROUP BY rt1.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT rt1.c0 FROM t0 RIGHT OUTER JOIN rt1 ON (((((+ (rt1.c1)))AND('1691370171')))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN rt1.c1 THEN x'' WHEN t0.c0 THEN rt1.c0 END)) GROUP BY rt1.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL rt1.c2, rt1.c0, rt1.c1, t0.c0 FROM t0, rt1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1, t0.c0 FROM t0, rt1 WHERE (((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)) COLLATE NOCASE) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1, t0.c0 FROM t0, rt1 WHERE ((NOT (((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1, t0.c0 FROM t0, rt1 WHERE (((((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL rt1.c2, rt1.c0, rt1.c1, t0.c0 FROM t0, rt1;
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE ((CAST(rt1.c2 AS INTEGER) IN (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT ((CAST(rt1.c2 AS INTEGER) IN (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2))))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((((CAST(rt1.c2 AS INTEGER) IN (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 WHERE (NULL) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE ((NOT (NULL))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE (((NULL) ISNULL)) GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING AVG(AVG(0.302346953473862)) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (AVG(AVG(0.302346953473862)))) UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((AVG(AVG(0.302346953473862))) ISNULL);
SELECT rt1.c2, rt1.c0 FROM t0, rt1;
SELECT ALL rt1.c2, rt1.c0 FROM t0, rt1 WHERE (((CASE t0.c0  WHEN rt1.c1 THEN rt1.c1 ELSE NULL END)>>((~ (rt1.c2))))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM t0, rt1 WHERE ((NOT (((CASE t0.c0  WHEN rt1.c1 THEN rt1.c1 ELSE NULL END)>>((~ (rt1.c2))))))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM t0, rt1 WHERE (((((CASE t0.c0  WHEN rt1.c1 THEN rt1.c1 ELSE NULL END)>>((~ (rt1.c2))))) ISNULL));
SELECT rt1.c2, rt1.c0 FROM t0, rt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM t0, rt1 WHERE (rt1.c2) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM t0, rt1 WHERE ((NOT (rt1.c2))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM t0, rt1 WHERE (((rt1.c2) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(MAX(AVG(t0.c0)) AS INTEGER) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(MAX(AVG(t0.c0)) AS INTEGER))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(MAX(AVG(t0.c0)) AS INTEGER)) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (LIKELIHOOD(DISTINCT (- (t0.c0)), 0.4817321072806815)) UNION ALL SELECT * FROM t0 WHERE ((NOT (LIKELIHOOD(DISTINCT (- (t0.c0)), 0.4817321072806815)))) UNION ALL SELECT * FROM t0 WHERE (((LIKELIHOOD(DISTINCT (- (t0.c0)), 0.4817321072806815)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN t0 ON (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))<=((rt1.c1)));
SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN t0 ON (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))<=((rt1.c1))) WHERE (((((((t0.c0, t0.c0, rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c1, rt1.c1)) AND ((t0.c0, rt1.c0, t0.c0)))))>=((((rt1.c2) NOTNULL))))) UNION SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN t0 ON (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))<=((rt1.c1))) WHERE ((NOT (((((((t0.c0, t0.c0, rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c1, rt1.c1)) AND ((t0.c0, rt1.c0, t0.c0)))))>=((((rt1.c2) NOTNULL))))))) UNION SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN t0 ON (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))<=((rt1.c1))) WHERE (((((((((t0.c0, t0.c0, rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c1, rt1.c1)) AND ((t0.c0, rt1.c0, t0.c0)))))>=((((rt1.c2) NOTNULL))))) ISNULL));
SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN t0 ON (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))<=((rt1.c1)));
SELECT ALL rt1.c0, rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c0, rt1.c2, t0.c0;
SELECT ALL rt1.c0, rt1.c2, t0.c0 FROM rt1, t0 WHERE (rt1.c2) GROUP BY rt1.c0, rt1.c2, t0.c0 UNION SELECT rt1.c0, rt1.c2, t0.c0 FROM rt1, t0 WHERE ((NOT (rt1.c2))) GROUP BY rt1.c0, rt1.c2, t0.c0 UNION SELECT ALL rt1.c0, rt1.c2, t0.c0 FROM rt1, t0 WHERE (((rt1.c2) ISNULL)) GROUP BY rt1.c0, rt1.c2, t0.c0;
SELECT ALL rt1.c0, rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c0, rt1.c2, t0.c0;
SELECT ALL rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0;
SELECT rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0 HAVING ((t0.c0)AND(((((rt1.c1)AND(SUM(COUNT(rt1.c0)))))AND(MIN(GROUP_CONCAT(SUM(AVG(rt1.c2)))))))) UNION ALL SELECT rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0 HAVING (NOT (((t0.c0)AND(((((rt1.c1)AND(SUM(COUNT(rt1.c0)))))AND(MIN(GROUP_CONCAT(SUM(AVG(rt1.c2)))))))))) UNION ALL SELECT rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0 HAVING ((((t0.c0)AND(((((rt1.c1)AND(SUM(COUNT(rt1.c0)))))AND(MIN(GROUP_CONCAT(SUM(AVG(rt1.c2))))))))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 NOT INDEXED WHERE (LIKELY(DISTINCT t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (LIKELY(DISTINCT t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((LIKELY(DISTINCT t0.c0)) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((t0.c0)=(rt1.c2)))*(((((rt1.c0)OR(rt1.c0)))OR(t0.c0))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT (((((t0.c0)==(rt1.c2)))*(((((rt1.c0)OR(rt1.c0)))OR(t0.c0))))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE (((((((t0.c0)==(rt1.c2)))*(((((rt1.c0)OR(rt1.c0)))OR(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT rt1.c2, rt1.c0 FROM t0 CROSS JOIN rt1 ON CAST(rt1.c0 COLLATE RTRIM AS REAL) GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM t0 CROSS JOIN rt1 ON CAST(rt1.c0 COLLATE RTRIM AS REAL) WHERE (((rt1.c2) NOT NULL) COLLATE RTRIM) GROUP BY rt1.c2, rt1.c0 UNION SELECT rt1.c2, rt1.c0 FROM t0 CROSS JOIN rt1 ON CAST(rt1.c0 COLLATE RTRIM AS REAL) WHERE ((NOT (((rt1.c2) NOT NULL) COLLATE RTRIM))) GROUP BY rt1.c2, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c0 FROM t0 CROSS JOIN rt1 ON CAST(rt1.c0 COLLATE RTRIM AS REAL) WHERE (((((rt1.c2) NOT NULL) COLLATE RTRIM) ISNULL)) GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM t0 CROSS JOIN rt1 ON CAST(rt1.c0 COLLATE RTRIM AS REAL) GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1, t0 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c0 FROM rt1, t0;
SELECT ALL rt1.c0 FROM rt1, t0 WHERE (CASE WHEN (NOT (t0.c0)) THEN x'' WHEN (NOT (t0.c0)) THEN rt1.c1 WHEN CAST(rt1.c2 AS INTEGER) THEN ((rt1.c1)|(rt1.c2)) ELSE rt1.c0 COLLATE NOCASE END) UNION ALL SELECT rt1.c0 FROM rt1, t0 WHERE ((NOT (CASE WHEN (NOT (t0.c0)) THEN x'' WHEN (NOT (t0.c0)) THEN rt1.c1 WHEN CAST(rt1.c2 AS INTEGER) THEN ((rt1.c1)|(rt1.c2)) ELSE rt1.c0 COLLATE NOCASE END))) UNION ALL SELECT rt1.c0 FROM rt1, t0 WHERE (((CASE WHEN (NOT (t0.c0)) THEN x'' WHEN (NOT (t0.c0)) THEN rt1.c1 WHEN CAST(rt1.c2 AS INTEGER) THEN ((rt1.c1)|(rt1.c2)) ELSE rt1.c0 COLLATE NOCASE END) ISNULL));
SELECT rt1.c0 FROM rt1, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE ((t0.c0)GLOB(t0.c0))  WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c0)|(t0.c0)) WHEN ((('-1387692529')) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN CAST(t0.c0 AS NUMERIC) WHEN ((t0.c0) IS TRUE) THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) ELSE (t0.c0 IN ()) END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE ((t0.c0)GLOB(t0.c0))  WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c0)|(t0.c0)) WHEN ((('-1387692529')) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN CAST(t0.c0 AS NUMERIC) WHEN ((t0.c0) IS TRUE) THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) ELSE (t0.c0 IN ()) END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE ((t0.c0)GLOB(t0.c0))  WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c0)|(t0.c0)) WHEN ((('-1387692529')) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN CAST(t0.c0 AS NUMERIC) WHEN ((t0.c0) IS TRUE) THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) ELSE (t0.c0 IN ()) END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CAST(((t0.c0) IS TRUE) AS BLOB)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(((t0.c0) IS TRUE) AS BLOB)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST(((t0.c0) IS TRUE) AS BLOB)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING rt1.c2 UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT (rt1.c2)) UNION ALL SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((rt1.c2) ISNULL);
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING rt1.c2 UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT (rt1.c2)) UNION ALL SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((rt1.c2) ISNULL);
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((t0.c0)&(t0.c0)) COLLATE BINARY) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((t0.c0)&(t0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0)&(t0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (rt1.c1) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt1.c0, rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c0, rt1.c2, t0.c0;
SELECT rt1.c0, rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c0, rt1.c2, t0.c0 HAVING LIKE(MAX(AVG(AVG(SUM(COUNT(rt1.c0))))), (~ (rt1.c1))) UNION ALL SELECT ALL rt1.c0, rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c0, rt1.c2, t0.c0 HAVING (NOT (LIKE(MAX(AVG(AVG(SUM(COUNT(rt1.c0))))), (~ (rt1.c1))))) UNION ALL SELECT ALL rt1.c0, rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c0, rt1.c2, t0.c0 HAVING ((LIKE(MAX(AVG(AVG(SUM(COUNT(rt1.c0))))), (~ (rt1.c1)))) ISNULL);
SELECT t0.c0, rt1.c2 FROM rt1, t0;
SELECT t0.c0, rt1.c2 FROM rt1, t0 WHERE ('') UNION ALL SELECT ALL t0.c0, rt1.c2 FROM rt1, t0 WHERE ((NOT (''))) UNION ALL SELECT t0.c0, rt1.c2 FROM rt1, t0 WHERE ((('') ISNULL));
SELECT t0.c0, rt1.c2 FROM rt1, t0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((NOT (rt1.c2)) IN ())) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((NOT (rt1.c2)) IN ())))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((NOT (rt1.c2)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0)OR(t0.c0)))OR(t0.c0)) COLLATE BINARY) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)OR(t0.c0)))OR(t0.c0)) COLLATE BINARY))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))OR(t0.c0)) COLLATE BINARY) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING MAX(MIN(TOTAL(COUNT(*)))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (MAX(MIN(TOTAL(COUNT(*)))))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((MAX(MIN(TOTAL(COUNT(*))))) ISNULL);
SELECT rt1.c2 FROM t0, rt1;
SELECT ALL rt1.c2 FROM t0, rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))&(((rt1.c0)<=(rt1.c2))))) UNION ALL SELECT ALL rt1.c2 FROM t0 NOT INDEXED, rt1 WHERE ((NOT (((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))&(((rt1.c0)<=(rt1.c2))))))) UNION ALL SELECT ALL rt1.c2 FROM t0, rt1 WHERE (((((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))&(((rt1.c0)<=(rt1.c2))))) ISNULL));
SELECT rt1.c2 FROM t0, rt1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (LENGTH(((((t0.c0)OR(t0.c0)))OR(t0.c0)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (LENGTH(((((t0.c0)OR(t0.c0)))OR(t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((LENGTH(((((t0.c0)OR(t0.c0)))OR(t0.c0)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT rt1.c0, t0.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, t0.c0, rt1.c2;
SELECT rt1.c0, t0.c0, rt1.c2 FROM t0, rt1 WHERE (((((((rt1.c2)<=(rt1.c0)))AND(0Xffffffff9a2823d5)))OR((((rt1.c1))!=((rt1.c0)))))) GROUP BY rt1.c0, t0.c0, rt1.c2 UNION SELECT ALL rt1.c0, t0.c0, rt1.c2 FROM t0, rt1 WHERE ((NOT (((((((rt1.c2)<=(rt1.c0)))AND(0xffffffff9a2823d5)))OR((((rt1.c1))<>((rt1.c0)))))))) GROUP BY rt1.c0, t0.c0, rt1.c2 UNION SELECT rt1.c0, t0.c0, rt1.c2 FROM t0, rt1 WHERE (((((((((rt1.c2)<=(rt1.c0)))AND(0Xffffffff9a2823d5)))OR((((rt1.c1))<>((rt1.c0)))))) ISNULL)) GROUP BY rt1.c0, t0.c0, rt1.c2;
SELECT rt1.c0, t0.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, t0.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, t0.c0;
SELECT rt1.c1, rt1.c0, rt1.c2, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, t0.c0 HAVING CASE WHEN MAX(COUNT(COUNT(t0.c0))) THEN COUNT(TOTAL(t0.c0)) COLLATE RTRIM WHEN MIN(TOTAL(t0.c0)) THEN COUNT(MAX(rt1.c1)) WHEN ((SUM(rt1.c1)) IS FALSE) THEN MAX(MAX(AVG(SUM(rt1.c0)))) ELSE GROUP_CONCAT(GROUP_CONCAT(rt1.c2)) END UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, t0.c0 HAVING (NOT (CASE WHEN MAX(COUNT(COUNT(t0.c0))) THEN COUNT(TOTAL(t0.c0)) COLLATE RTRIM WHEN MIN(TOTAL(t0.c0)) THEN COUNT(MAX(rt1.c1)) WHEN ((SUM(rt1.c1)) IS FALSE) THEN MAX(MAX(AVG(SUM(rt1.c0)))) ELSE GROUP_CONCAT(GROUP_CONCAT(rt1.c2)) END)) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2, t0.c0 FROM t0, rt1 NOT INDEXED GROUP BY rt1.c1, rt1.c0, rt1.c2, t0.c0 HAVING ((CASE WHEN MAX(COUNT(COUNT(t0.c0))) THEN COUNT(TOTAL(t0.c0)) COLLATE RTRIM WHEN MIN(TOTAL(t0.c0)) THEN COUNT(MAX(rt1.c1)) WHEN ((SUM(rt1.c1)) IS FALSE) THEN MAX(MAX(AVG(SUM(rt1.c0)))) ELSE GROUP_CONCAT(GROUP_CONCAT(rt1.c2)) END) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((((t0.c0 IN (t0.c0)))!=(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((t0.c0 IN (t0.c0)))<>(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))))) UNION ALL SELECT * FROM t0 WHERE ((((((t0.c0 IN (t0.c0)))!=(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ('#/W?x5ꍻ') UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ('#/W?x5ꍻ'))) UNION SELECT DISTINCT * FROM t0 WHERE ((('#/W?x5ꍻ') ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (STRFTIME(rt1.c0 COLLATE NOCASE, ((rt1.c1)IS NOT(rt1.c1)), (((rt1.c2))<((rt1.c0))), (rt1.c0 IN ()), CAST(rt1.c0 AS TEXT))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (STRFTIME(rt1.c0 COLLATE NOCASE, ((rt1.c1)IS NOT(rt1.c1)), (((rt1.c2))<((rt1.c0))), (rt1.c0 IN ()), CAST(rt1.c0 AS TEXT))))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE (((STRFTIME(rt1.c0 COLLATE NOCASE, ((rt1.c1)IS NOT(rt1.c1)), (((rt1.c2))<((rt1.c0))), (rt1.c0 IN ()), CAST(rt1.c0 AS TEXT))) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1 FROM rt1 FULL OUTER JOIN t0 ON x'' GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 FULL OUTER JOIN t0 ON x'' GROUP BY rt1.c1 HAVING GROUP_CONCAT(MIN(SUM(rt1.c1))) UNION ALL SELECT rt1.c1 FROM rt1 FULL OUTER JOIN t0 ON x'' GROUP BY rt1.c1 HAVING (NOT (GROUP_CONCAT(MIN(SUM(rt1.c1))))) UNION ALL SELECT ALL rt1.c1 FROM rt1 FULL OUTER JOIN t0 ON x'' GROUP BY rt1.c1 HAVING ((GROUP_CONCAT(MIN(SUM(rt1.c1)))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (NULL) UNION ALL SELECT * FROM t0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM t0 WHERE (((NULL) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CASE t0.c0  WHEN ((t0.c0)/(t0.c0)) THEN ((t0.c0)>(t0.c0)) WHEN 0.9091945444814982 THEN (t0.c0 IN (t0.c0, t0.c0)) WHEN ((t0.c0) IS FALSE) THEN (((t0.c0))==((t0.c0))) ELSE (+ (t0.c0)) END) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CASE t0.c0  WHEN ((t0.c0)/(t0.c0)) THEN ((t0.c0)>(t0.c0)) WHEN 0.9091945444814982 THEN (t0.c0 IN (t0.c0, t0.c0)) WHEN ((t0.c0) IS FALSE) THEN (((t0.c0))==((t0.c0))) ELSE (+ (t0.c0)) END))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CASE t0.c0  WHEN ((t0.c0)/(t0.c0)) THEN ((t0.c0)>(t0.c0)) WHEN 0.9091945444814982 THEN (t0.c0 IN (t0.c0, t0.c0)) WHEN ((t0.c0) IS FALSE) THEN (((t0.c0))==((t0.c0))) ELSE (+ (t0.c0)) END) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM t0 NOT INDEXED, rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM t0, rt1 WHERE (((((t0.c0)OR((rt1.c2 IN (rt1.c1)))))OR((~ (rt1.c2))))) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM t0, rt1 WHERE ((NOT (((((t0.c0)OR((rt1.c2 IN (rt1.c1)))))OR((~ (rt1.c2))))))) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT rt1.c0, rt1.c2, rt1.c1 FROM t0, rt1 WHERE (((((((t0.c0)OR((rt1.c2 IN (rt1.c1)))))OR((~ (rt1.c2))))) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM t0 NOT INDEXED, rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c2 FROM rt1 NOT INDEXED GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING '*e' UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT ('*e')) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (('*e') ISNULL);
SELECT ALL rt1.c2 FROM rt1 NOT INDEXED GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING '*e' UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT ('*e')) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (('*e') ISNULL);
SELECT ALL rt1.c2 FROM rt1 NOT INDEXED GROUP BY rt1.c2;
SELECT ALL rt1.c2, rt1.c1, rt1.c0, t0.c0 FROM rt1, t0;
SELECT rt1.c2, rt1.c1, rt1.c0, t0.c0 FROM rt1, t0 WHERE (NULL) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0, t0.c0 FROM rt1, t0 WHERE ((NOT (NULL))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0, t0.c0 FROM rt1, t0 WHERE (((NULL) ISNULL));
SELECT ALL rt1.c2, rt1.c1, rt1.c0, t0.c0 FROM rt1, t0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((('0.06035877397736755') NOTNULL) IN (((rt1.c0)<<(rt1.c2)), ((((rt1.c2)AND(rt1.c0)))AND(rt1.c0))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((('0.06035877397736755') NOTNULL) IN (((rt1.c0)<<(rt1.c2)), ((((rt1.c2)AND(rt1.c0)))AND(rt1.c0))))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((('0.06035877397736755') NOTNULL) IN (((rt1.c0)<<(rt1.c2)), ((((rt1.c2)AND(rt1.c0)))AND(rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((((((t0.c0))<=((t0.c0))))OR(NULL COLLATE BINARY)))AND(('愋c' IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((((((t0.c0))<=((t0.c0))))OR(NULL COLLATE BINARY)))AND(('愋c' IN ())))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((((((t0.c0))<=((t0.c0))))OR(NULL COLLATE BINARY)))AND(('愋c' IN ())))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(TOTAL(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(TOTAL(t0.c0))) ISNULL);
SELECT ALL * FROM t0, rt1;
SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN '+g' THEN (- (rt1.c2)) ELSE t0.c0 COLLATE NOCASE END) UNION ALL SELECT * FROM t0, rt1 WHERE ((NOT (CASE WHEN '+g' THEN (- (rt1.c2)) ELSE t0.c0 COLLATE NOCASE END))) UNION ALL SELECT ALL * FROM t0, rt1 WHERE (((CASE WHEN '+g' THEN (- (rt1.c2)) ELSE t0.c0 COLLATE NOCASE END) ISNULL));
SELECT ALL * FROM t0, rt1;
SELECT DISTINCT rt1.c2, rt1.c0, t0.c0 FROM t0 CROSS JOIN rt1 ON CASE ((((t0.c0)OR(rt1.c0)))AND(rt1.c2))  WHEN CAST(rt1.c0 AS TEXT) THEN CASE WHEN rt1.c0 THEN rt1.c0 END END;
SELECT DISTINCT rt1.c2, rt1.c0, t0.c0 FROM t0 CROSS JOIN rt1 ON CASE ((((t0.c0)OR(rt1.c0)))AND(rt1.c2))  WHEN CAST(rt1.c0 AS TEXT) THEN CASE WHEN rt1.c0 THEN rt1.c0 END END WHERE (CASE WHEN ((((t0.c0)AND(t0.c0)))AND(rt1.c0)) THEN (rt1.c0 IN ()) WHEN ((t0.c0)<>(rt1.c0)) THEN (rt1.c1 IN ()) WHEN (NOT (-9.76558406E8)) THEN (~ (rt1.c1)) END) UNION SELECT DISTINCT rt1.c2, rt1.c0, t0.c0 FROM t0 CROSS JOIN rt1 ON CASE ((((t0.c0)OR(rt1.c0)))AND(rt1.c2))  WHEN CAST(rt1.c0 AS TEXT) THEN CASE WHEN rt1.c0 THEN rt1.c0 END END WHERE ((NOT (CASE WHEN ((((t0.c0)AND(t0.c0)))AND(rt1.c0)) THEN (rt1.c0 IN ()) WHEN ((t0.c0)<>(rt1.c0)) THEN (rt1.c1 IN ()) WHEN (NOT (-9.76558406E8)) THEN (~ (rt1.c1)) END))) UNION SELECT DISTINCT rt1.c2, rt1.c0, t0.c0 FROM t0 CROSS JOIN rt1 ON CASE ((((t0.c0)OR(rt1.c0)))AND(rt1.c2))  WHEN CAST(rt1.c0 AS TEXT) THEN CASE WHEN rt1.c0 THEN rt1.c0 END END WHERE (((CASE WHEN ((((t0.c0)AND(t0.c0)))AND(rt1.c0)) THEN (rt1.c0 IN ()) WHEN ((t0.c0)!=(rt1.c0)) THEN (rt1.c1 IN ()) WHEN (NOT (-9.76558406E8)) THEN (~ (rt1.c1)) END) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0, t0.c0 FROM t0 CROSS JOIN rt1 ON CASE ((((t0.c0)OR(rt1.c0)))AND(rt1.c2))  WHEN CAST(rt1.c0 AS TEXT) THEN CASE WHEN rt1.c0 THEN rt1.c0 END END;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((CAST(t0.c0 AS INTEGER)))>((CASE t0.c0  WHEN t0.c0 THEN 'PC%h' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((CAST(t0.c0 AS INTEGER)))>((CASE t0.c0  WHEN t0.c0 THEN 'PC%h' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 NOT INDEXED WHERE ((((((CAST(t0.c0 AS INTEGER)))>((CASE t0.c0  WHEN t0.c0 THEN 'PC%h' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((TOTAL(SUM(AVG(SUM(t0.c0))))))>=((NULLIF(COUNT(MIN(COUNT(t0.c0))), SUM(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((TOTAL(SUM(AVG(SUM(t0.c0))))))>=((NULLIF(COUNT(MIN(COUNT(t0.c0))), SUM(t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((TOTAL(SUM(AVG(SUM(t0.c0))))))>=((NULLIF(COUNT(MIN(COUNT(t0.c0))), SUM(t0.c0)))))) ISNULL);
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((((((((rt1.c1, rt1.c0, rt1.c1))<>((rt1.c1, rt1.c2, rt1.c0))))OR(CAST(rt1.c0 AS REAL))))OR(CASE WHEN rt1.c2 THEN rt1.c1 END))) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((((((((rt1.c1, rt1.c0, rt1.c1))<>((rt1.c1, rt1.c2, rt1.c0))))OR(CAST(rt1.c0 AS REAL))))OR(CASE WHEN rt1.c2 THEN rt1.c1 END))))) UNION ALL SELECT * FROM rt1 WHERE ((((((((((rt1.c1, rt1.c0, rt1.c1))!=((rt1.c1, rt1.c2, rt1.c0))))OR(CAST(rt1.c0 AS REAL))))OR(CASE WHEN rt1.c2 THEN rt1.c1 END))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1, t0;
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1, t0 WHERE (rt1.c1) UNION SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1, t0 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1, t0 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1, t0;
SELECT t0.c0 FROM t0, rt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, rt1 NOT INDEXED WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, rt1 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, rt1 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, rt1 GROUP BY t0.c0;
SELECT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT ALL t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c1, rt1.c0 HAVING 0xffffffffa99a3c4f UNION ALL SELECT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (0Xffffffffa99a3c4f)) UNION ALL SELECT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c1, rt1.c0 HAVING ((0Xffffffffa99a3c4f) ISNULL);
SELECT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT ALL t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c1, rt1.c0 HAVING 0xffffffffa99a3c4f UNION ALL SELECT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (0Xffffffffa99a3c4f)) UNION ALL SELECT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c1, rt1.c0 HAVING ((0Xffffffffa99a3c4f) ISNULL);
SELECT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c0, t0.c0, rt1.c2, rt1.c1 FROM t0, rt1;
SELECT rt1.c0, t0.c0, rt1.c2, rt1.c1 FROM t0, rt1 WHERE ((('2039822341') BETWEEN ((('-1305906070') BETWEEN (rt1.c2) AND (t0.c0))) AND (((rt1.c1)>=(x''))))) UNION ALL SELECT ALL rt1.c0, t0.c0, rt1.c2, rt1.c1 FROM t0, rt1 WHERE ((NOT ((('2039822341') BETWEEN ((('-1305906070') BETWEEN (rt1.c2) AND (t0.c0))) AND (((rt1.c1)>=(x''))))))) UNION ALL SELECT rt1.c0, t0.c0, rt1.c2, rt1.c1 FROM t0, rt1 WHERE ((((('2039822341') BETWEEN ((('-1305906070') BETWEEN (rt1.c2) AND (t0.c0))) AND (((rt1.c1)>=(x''))))) ISNULL));
SELECT ALL rt1.c0, t0.c0, rt1.c2, rt1.c1 FROM t0, rt1;
SELECT DISTINCT rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c0 FROM rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))*((((rt1.c0))>=((rt1.c0)))))) UNION SELECT DISTINCT rt1.c0 FROM rt1 WHERE ((NOT (((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))*((((rt1.c0))>=((rt1.c0)))))))) UNION SELECT DISTINCT rt1.c0 FROM rt1 WHERE (((((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))*((((rt1.c0))>=((rt1.c0)))))) ISNULL));
SELECT DISTINCT rt1.c0 FROM rt1;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM t0 NATURAL JOIN rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM t0 NATURAL JOIN rt1 WHERE (((((rt1.c0)!=(rt1.c1))) NOT NULL)) GROUP BY rt1.c0, rt1.c1, rt1.c2 UNION SELECT rt1.c0, rt1.c1, rt1.c2 FROM t0 NATURAL JOIN rt1 WHERE ((NOT (((((rt1.c0)<>(rt1.c1))) NOT NULL)))) GROUP BY rt1.c0, rt1.c1, rt1.c2 UNION SELECT rt1.c0, rt1.c1, rt1.c2 FROM t0 NATURAL JOIN rt1 WHERE (((((((rt1.c0)<>(rt1.c1))) NOT NULL)) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM t0 NATURAL JOIN rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY rt1.c2, rt1.c1 HAVING MAX(LOWER(DISTINCT GROUP_CONCAT(rt1.c0))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (MAX(LOWER(DISTINCT GROUP_CONCAT(rt1.c0))))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY rt1.c2, rt1.c1 HAVING ((MAX(LOWER(DISTINCT GROUP_CONCAT(rt1.c0)))) ISNULL);
SELECT * FROM rt1 NATURAL JOIN t0;
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (((((rt1.c1)IS(rt1.c2))) ISNULL)) UNION ALL SELECT ALL * FROM rt1 NATURAL JOIN t0 WHERE ((NOT (((((rt1.c1)IS(rt1.c2))) ISNULL)))) UNION ALL SELECT ALL * FROM rt1 NATURAL JOIN t0 WHERE (((((((rt1.c1)IS(rt1.c2))) ISNULL)) ISNULL));
SELECT * FROM rt1 NATURAL JOIN t0;
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((t0.c0)AND(rt1.c2)))*(0xffffffff8bdd33ae))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT (((((t0.c0)AND(rt1.c2)))*(0xffffffff8bdd33ae))))) UNION SELECT DISTINCT * FROM rt1 NOT INDEXED, t0 WHERE (((((((t0.c0)AND(rt1.c2)))*(0Xffffffff8bdd33ae))) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM t0, rt1 WHERE (((((rt1.c2) BETWEEN (t0.c0) AND (rt1.c2)))>>(((rt1.c1) BETWEEN (rt1.c2) AND (NULL))))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM t0, rt1 WHERE ((NOT (((((rt1.c2) BETWEEN (t0.c0) AND (rt1.c2)))>>(((rt1.c1) BETWEEN (rt1.c2) AND (NULL))))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM t0, rt1 WHERE (((((((rt1.c2) BETWEEN (t0.c0) AND (rt1.c2)))>>(((rt1.c1) BETWEEN (rt1.c2) AND (NULL))))) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((((rt1.c1)<(rt1.c2)))<(COUNT(*))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (((((rt1.c1)<(rt1.c2)))<(COUNT(*))))) UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((((((rt1.c1)<(rt1.c2)))<(COUNT(*)))) ISNULL);
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((((rt1.c1)<(rt1.c2)))<(COUNT(*))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (((((rt1.c1)<(rt1.c2)))<(COUNT(*))))) UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((((((rt1.c1)<(rt1.c2)))<(COUNT(*)))) ISNULL);
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE (((rt1.c2 COLLATE RTRIM) NOT BETWEEN ((rt1.c0 IN ())) AND (((((rt1.c1)OR(rt1.c0)))AND(rt1.c0))))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (((rt1.c2 COLLATE RTRIM) NOT BETWEEN ((rt1.c0 IN ())) AND (((((rt1.c1)OR(rt1.c0)))AND(rt1.c0))))))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE (((((rt1.c2 COLLATE RTRIM) NOT BETWEEN ((rt1.c0 IN ())) AND (((((rt1.c1)OR(rt1.c0)))AND(rt1.c0))))) ISNULL));
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1, t0;
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1, t0 WHERE ((((rt1.c0))<=((t0.c0))) COLLATE NOCASE) UNION SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1, t0 WHERE ((NOT ((((rt1.c0))<=((t0.c0))) COLLATE NOCASE))) UNION SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1, t0 WHERE ((((((rt1.c0))<=((t0.c0))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((NULLIF(t0.c0, t0.c0))OR(0x7553ef7c)))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((NULLIF(t0.c0, t0.c0))OR(0x7553ef7c)))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((NULLIF(t0.c0, t0.c0))OR(0X7553ef7c)))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(MIN(AVG(COUNT(MAX(NULL))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(MIN(AVG(COUNT(MAX(NULL))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(MIN(AVG(COUNT(MAX(NULL)))))) ISNULL);
SELECT ALL * FROM rt1, t0;
SELECT * FROM rt1, t0 WHERE ((ABS(rt1.c1) IN ())) UNION ALL SELECT * FROM rt1, t0 WHERE ((NOT ((ABS(rt1.c1) IN ())))) UNION ALL SELECT * FROM rt1, t0 WHERE ((((ABS(rt1.c1) IN ())) ISNULL));
SELECT ALL * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE (0.5572226072664286) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT (0.5572226072664286))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE (((0.5572226072664286) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ('') GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (''))) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((('') ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING '405748963' UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ('405748963')) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (('405748963') ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING '405748963' UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ('405748963')) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (('405748963') ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, rt1.c0 FROM rt1, t0;
SELECT t0.c0, rt1.c0 FROM rt1, t0 WHERE ((((((rt1.c2) NOT NULL)))<=((t0.c0)))) UNION ALL SELECT t0.c0, rt1.c0 FROM rt1, t0 WHERE ((NOT ((((((rt1.c2) NOT NULL)))<=((t0.c0)))))) UNION ALL SELECT t0.c0, rt1.c0 FROM rt1, t0 WHERE ((((((((rt1.c2) NOT NULL)))<=((t0.c0)))) ISNULL));
SELECT t0.c0, rt1.c0 FROM rt1, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 END IN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((CASE WHEN t0.c0 THEN t0.c0 END IN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((CASE WHEN t0.c0 THEN t0.c0 END IN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((- (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((- (t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((- (t0.c0))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING SUM(MAX(rt1.c2)) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (SUM(MAX(rt1.c2)))) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((SUM(MAX(rt1.c2))) ISNULL);
SELECT t0.c0 FROM t0, rt1;
SELECT t0.c0 FROM t0, rt1 WHERE (rt1.c2) UNION ALL SELECT ALL t0.c0 FROM t0, rt1 WHERE ((NOT (rt1.c2))) UNION ALL SELECT ALL t0.c0 FROM t0, rt1 WHERE (((rt1.c2) ISNULL));
SELECT t0.c0 FROM t0, rt1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (t0.c0 COLLATE BINARY) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (t0.c0 COLLATE BINARY))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0 COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 WHERE (LOWER(600071449)) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 WHERE ((NOT (LOWER(600071449)))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 WHERE (((LOWER(600071449)) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c2;
SELECT t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING COUNT(*) UNION ALL SELECT t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c2;
SELECT t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING COUNT(*) UNION ALL SELECT t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1 CROSS JOIN t0 ON ((((rt1.c2)OR(CAST(rt1.c1 AS NUMERIC))))AND(TYPEOF(rt1.c0)));
SELECT ALL rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1 CROSS JOIN t0 ON ((((rt1.c2)OR(CAST(rt1.c1 AS NUMERIC))))AND(TYPEOF(rt1.c0))) WHERE (((CASE rt1.c2  WHEN x'' THEN NULL END) NOT NULL)) UNION ALL SELECT rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1 CROSS JOIN t0 ON ((((rt1.c2)OR(CAST(rt1.c1 AS NUMERIC))))AND(TYPEOF(rt1.c0))) WHERE ((NOT (((CASE rt1.c2  WHEN x'' THEN NULL END) NOT NULL)))) UNION ALL SELECT ALL rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1 CROSS JOIN t0 ON ((((rt1.c2)OR(CAST(rt1.c1 AS NUMERIC))))AND(TYPEOF(rt1.c0))) WHERE (((((CASE rt1.c2  WHEN x'' THEN NULL END) NOT NULL)) ISNULL));
SELECT ALL rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1 CROSS JOIN t0 ON ((((rt1.c2)OR(CAST(rt1.c1 AS NUMERIC))))AND(TYPEOF(rt1.c0)));
SELECT DISTINCT rt1.c1, rt1.c0 FROM t0, rt1;
SELECT DISTINCT rt1.c1, rt1.c0 FROM t0, rt1 WHERE (CAST('' AS REAL) COLLATE RTRIM) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM t0, rt1 WHERE ((NOT (CAST('' AS REAL) COLLATE RTRIM))) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM t0, rt1 WHERE (((CAST('' AS REAL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0 FROM t0, rt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (COUNT(*) IN ()) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (COUNT(*) IN ()) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL * FROM rt1, t0;
SELECT * FROM rt1, t0 WHERE (((NULL) NOT BETWEEN (((x'e6e4')%(rt1.c1))) AND (((t0.c0) IS FALSE)))) UNION ALL SELECT * FROM rt1, t0 WHERE ((NOT (((NULL) NOT BETWEEN (((x'e6e4')%(rt1.c1))) AND (((t0.c0) IS FALSE)))))) UNION ALL SELECT ALL * FROM rt1, t0 WHERE (((((NULL) NOT BETWEEN (((x'e6e4')%(rt1.c1))) AND (((t0.c0) IS FALSE)))) ISNULL));
SELECT ALL * FROM rt1, t0;
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c2 FROM rt1 WHERE (rt1.c2) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (CAST((NULL IN ()) AS BLOB)) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (CAST((NULL IN ()) AS BLOB)))) GROUP BY rt1.c2, rt1.c1, rt1.c0 UNION SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (((CAST((NULL IN ()) AS BLOB)) ISNULL)) GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING rt1.c1 UNION ALL SELECT rt1.c2, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (rt1.c1)) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((rt1.c1) ISNULL);
SELECT ALL rt1.c2, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING rt1.c1 UNION ALL SELECT rt1.c2, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (rt1.c1)) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((rt1.c1) ISNULL);
SELECT ALL rt1.c2, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL SUM((NOT (((t0.c0)IS NOT('-Tb3P!'))))) FROM t0;
SELECT rt1.c2, rt1.c0 FROM t0, rt1;
SELECT ALL rt1.c2, rt1.c0 FROM t0, rt1 WHERE ((+ (SUBSTR(rt1.c1, t0.c0)))) UNION ALL SELECT rt1.c2, rt1.c0 FROM t0, rt1 WHERE ((NOT ((+ (SUBSTR(rt1.c1, t0.c0)))))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM t0, rt1 WHERE ((((+ (SUBSTR(rt1.c1, t0.c0)))) ISNULL));
SELECT rt1.c2, rt1.c0 FROM t0, rt1;
SELECT DISTINCT rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM rt1, t0;
SELECT DISTINCT rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM rt1, t0 WHERE ((((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))AND(rt1.c2)))AND(((rt1.c0)OR(t0.c0))))) UNION SELECT DISTINCT rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM rt1, t0 WHERE ((NOT ((((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))AND(rt1.c2)))AND(((rt1.c0)OR(t0.c0))))))) UNION SELECT DISTINCT rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM rt1, t0 WHERE ((((((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))AND(rt1.c2)))AND(((rt1.c0)OR(t0.c0))))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM rt1, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CASE ((t0.c0)%(t0.c0))  WHEN (t0.c0 IN ()) THEN (('467334851') ISNULL) END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CASE ((t0.c0)%(t0.c0))  WHEN (t0.c0 IN ()) THEN (('467334851') ISNULL) END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CASE ((t0.c0)%(t0.c0))  WHEN (t0.c0 IN ()) THEN (('467334851') ISNULL) END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1 HAVING rt1.c1 UNION ALL SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1 HAVING (NOT (rt1.c1)) UNION ALL SELECT rt1.c1 FROM t0, rt1 GROUP BY rt1.c1 HAVING ((rt1.c1) ISNULL);
SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1 HAVING rt1.c1 UNION ALL SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1 HAVING (NOT (rt1.c1)) UNION ALL SELECT rt1.c1 FROM t0, rt1 GROUP BY rt1.c1 HAVING ((rt1.c1) ISNULL);
SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT rt1.c2, rt1.c0, t0.c0, rt1.c1 FROM t0, rt1;
SELECT rt1.c2, rt1.c0, t0.c0, rt1.c1 FROM t0, rt1 WHERE (0Xffffffffb2b35c14) UNION ALL SELECT rt1.c2, rt1.c0, t0.c0, rt1.c1 FROM t0, rt1 WHERE ((NOT (0Xffffffffb2b35c14))) UNION ALL SELECT ALL rt1.c2, rt1.c0, t0.c0, rt1.c1 FROM t0, rt1 WHERE (((0Xffffffffb2b35c14) ISNULL));
SELECT rt1.c2, rt1.c0, t0.c0, rt1.c1 FROM t0, rt1;
SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1 CROSS JOIN t0 ON ((rt1.c1 COLLATE RTRIM)>>(CAST(rt1.c2 AS BLOB)));
SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1 CROSS JOIN t0 ON ((rt1.c1 COLLATE RTRIM)>>(CAST(rt1.c2 AS BLOB))) WHERE (rt1.c2) UNION SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1 CROSS JOIN t0 ON ((rt1.c1 COLLATE RTRIM)>>(CAST(rt1.c2 AS BLOB))) WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1 CROSS JOIN t0 ON ((rt1.c1 COLLATE RTRIM)>>(CAST(rt1.c2 AS BLOB))) WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1 FROM rt1 CROSS JOIN t0 ON ((rt1.c1 COLLATE RTRIM)>>(CAST(rt1.c2 AS BLOB)));
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (0.7288502695571283) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (0.7288502695571283) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (0.7288502695571283) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN t0 ON ((((rt1.c0))<=((-1097806651))) IN ()) GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN t0 ON ((((rt1.c0))<=((-1097806651))) IN ()) GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2 HAVING CAST(((GROUP_CONCAT(t0.c0))/(COUNT(*))) AS NUMERIC) UNION ALL SELECT ALL rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN t0 ON ((((rt1.c0))<=((-1097806651))) IN ()) GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2 HAVING (NOT (CAST(((GROUP_CONCAT(t0.c0))/(COUNT(*))) AS NUMERIC))) UNION ALL SELECT ALL rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN t0 ON ((((rt1.c0))<=((-1097806651))) IN ()) GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2 HAVING ((CAST(((GROUP_CONCAT(t0.c0))/(COUNT(*))) AS NUMERIC)) ISNULL);
SELECT ALL rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN t0 ON ((((rt1.c0))<=((-1097806651))) IN ()) GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN t0 ON ((((rt1.c0))<=((-1097806651))) IN ()) GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2 HAVING CAST(((GROUP_CONCAT(t0.c0))/(COUNT(*))) AS NUMERIC) UNION ALL SELECT ALL rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN t0 ON ((((rt1.c0))<=((-1097806651))) IN ()) GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2 HAVING (NOT (CAST(((GROUP_CONCAT(t0.c0))/(COUNT(*))) AS NUMERIC))) UNION ALL SELECT ALL rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN t0 ON ((((rt1.c0))<=((-1097806651))) IN ()) GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2 HAVING ((CAST(((GROUP_CONCAT(t0.c0))/(COUNT(*))) AS NUMERIC)) ISNULL);
SELECT ALL rt1.c0, rt1.c1, t0.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN t0 ON ((((rt1.c0))<=((-1097806651))) IN ()) GROUP BY rt1.c0, rt1.c1, t0.c0, rt1.c2;
SELECT * FROM t0, rt1;
SELECT ALL * FROM t0, rt1 WHERE ((((~ (rt1.c0)))<=(((rt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0))))) UNION ALL SELECT * FROM t0, rt1 WHERE ((NOT ((((~ (rt1.c0)))<=(((rt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0))))))) UNION ALL SELECT * FROM t0, rt1 WHERE ((((((~ (rt1.c0)))<=(((rt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT * FROM t0, rt1;
SELECT DISTINCT rt1.c2, rt1.c0, t0.c0, rt1.c1 FROM t0 INNER JOIN rt1 ON (+ ((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))));
SELECT DISTINCT rt1.c2, rt1.c0, t0.c0, rt1.c1 FROM t0 INNER JOIN rt1 ON (+ ((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))) WHERE ((+ (((((((((rt1.c1)AND(rt1.c0)))OR(NULL)))AND(rt1.c1)))AND(rt1.c2))))) UNION SELECT DISTINCT rt1.c2, rt1.c0, t0.c0, rt1.c1 FROM t0 INNER JOIN rt1 ON (+ ((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))) WHERE ((NOT ((+ (((((((((rt1.c1)AND(rt1.c0)))OR(NULL)))AND(rt1.c1)))AND(rt1.c2))))))) UNION SELECT DISTINCT rt1.c2, rt1.c0, t0.c0, rt1.c1 FROM t0 INNER JOIN rt1 ON (+ ((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))) WHERE ((((+ (((((((((rt1.c1)AND(rt1.c0)))OR(NULL)))AND(rt1.c1)))AND(rt1.c2))))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c0, t0.c0, rt1.c1 FROM t0 INNER JOIN rt1 ON (+ ((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))));
SELECT rt1.c2, t0.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c2, t0.c0, rt1.c1;
SELECT rt1.c2, t0.c0, rt1.c1 FROM rt1, t0 WHERE (NULL) GROUP BY rt1.c2, t0.c0, rt1.c1 UNION SELECT ALL rt1.c2, t0.c0, rt1.c1 FROM rt1 NOT INDEXED, t0 WHERE ((NOT (NULL))) GROUP BY rt1.c2, t0.c0, rt1.c1 UNION SELECT rt1.c2, t0.c0, rt1.c1 FROM rt1, t0 WHERE (((NULL) ISNULL)) GROUP BY rt1.c2, t0.c0, rt1.c1;
SELECT rt1.c2, t0.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c2, t0.c0, rt1.c1;
SELECT ALL rt1.c0 FROM t0, rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM t0 NOT INDEXED, rt1 GROUP BY rt1.c0 HAVING ((((rt1.c0))!=((rt1.c2))) IN ()) UNION ALL SELECT ALL rt1.c0 FROM t0, rt1 GROUP BY rt1.c0 HAVING (NOT (((((rt1.c0))<>((rt1.c2))) IN ()))) UNION ALL SELECT ALL rt1.c0 FROM t0, rt1 GROUP BY rt1.c0 HAVING ((((((rt1.c0))<>((rt1.c2))) IN ())) ISNULL);
SELECT ALL rt1.c0 FROM t0, rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM t0 NOT INDEXED, rt1 GROUP BY rt1.c0 HAVING ((((rt1.c0))!=((rt1.c2))) IN ()) UNION ALL SELECT ALL rt1.c0 FROM t0, rt1 GROUP BY rt1.c0 HAVING (NOT (((((rt1.c0))<>((rt1.c2))) IN ()))) UNION ALL SELECT ALL rt1.c0 FROM t0, rt1 GROUP BY rt1.c0 HAVING ((((((rt1.c0))<>((rt1.c2))) IN ())) ISNULL);
SELECT ALL rt1.c0 FROM t0, rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c1 FROM rt1;
SELECT rt1.c1 FROM rt1 WHERE (CASE WHEN CAST(rt1.c0 AS REAL) THEN (rt1.c2 IN (rt1.c0)) ELSE CAST(rt1.c1 AS NUMERIC) END) UNION ALL SELECT rt1.c1 FROM rt1 WHERE ((NOT (CASE WHEN CAST(rt1.c0 AS REAL) THEN (rt1.c2 IN (rt1.c0)) ELSE CAST(rt1.c1 AS NUMERIC) END))) UNION ALL SELECT ALL rt1.c1 FROM rt1 WHERE (((CASE WHEN CAST(rt1.c0 AS REAL) THEN (rt1.c2 IN (rt1.c0)) ELSE CAST(rt1.c1 AS NUMERIC) END) ISNULL));
SELECT ALL rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2, t0.c0 FROM rt1, t0;
SELECT DISTINCT rt1.c1, rt1.c2, t0.c0 FROM rt1, t0 WHERE ('-1718472886' COLLATE NOCASE) UNION SELECT DISTINCT rt1.c1, rt1.c2, t0.c0 FROM rt1, t0 WHERE ((NOT ('-1718472886' COLLATE NOCASE))) UNION SELECT DISTINCT rt1.c1, rt1.c2, t0.c0 FROM rt1, t0 WHERE ((('-1718472886' COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, t0.c0 FROM rt1, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((0.7139200613105599)) AND ((t0.c0 COLLATE BINARY)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((0.7139200613105599)) AND ((t0.c0 COLLATE BINARY)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((0.7139200613105599)) AND ((t0.c0 COLLATE BINARY)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL MAX((((((rt1.c0) IS TRUE)))<>((((rt1.c1) IS FALSE))))) FROM t0, rt1;
SELECT rt1.c0 FROM rt1;
SELECT ALL rt1.c0 FROM rt1 WHERE (rt1.c0) UNION ALL SELECT rt1.c0 FROM rt1 WHERE ((NOT (rt1.c0))) UNION ALL SELECT rt1.c0 FROM rt1 WHERE (((rt1.c0) ISNULL));
SELECT rt1.c0 FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c2) NOTNULL))>=((rt1.c1 IN (rt1.c2, rt1.c2))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((rt1.c2) NOTNULL))>=((rt1.c1 IN (rt1.c2, rt1.c2))))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c2) NOTNULL))>=((rt1.c1 IN (rt1.c2, rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((t0.c0) IS FALSE)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((NOT (((t0.c0) IS FALSE)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((NOT (((t0.c0) IS FALSE)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING CASE WHEN x'82982f2e' THEN SUM(MIN(TOTAL(x''))) WHEN (- (AVG(AVG(AVG(COUNT(*)))))) THEN COUNT(rt1.c1) WHEN MAX(COUNT(rt1.c1)) THEN ((rt1.c0)<>(TOTAL(AVG(GROUP_CONCAT(rt1.c1))))) ELSE CAST(rt1.c0 AS NUMERIC) END UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING (NOT (CASE WHEN x'82982f2e' THEN SUM(MIN(TOTAL(x''))) WHEN (- (AVG(AVG(AVG(COUNT(*)))))) THEN COUNT(rt1.c1) WHEN MAX(COUNT(rt1.c1)) THEN ((rt1.c0)<>(TOTAL(AVG(GROUP_CONCAT(rt1.c1))))) ELSE CAST(rt1.c0 AS NUMERIC) END)) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0 HAVING ((CASE WHEN x'82982f2e' THEN SUM(MIN(TOTAL(x''))) WHEN (- (AVG(AVG(AVG(COUNT(*)))))) THEN COUNT(rt1.c1) WHEN MAX(COUNT(rt1.c1)) THEN ((rt1.c0)<>(TOTAL(AVG(GROUP_CONCAT(rt1.c1))))) ELSE CAST(rt1.c0 AS NUMERIC) END) ISNULL);
SELECT ALL * FROM t0, rt1;
SELECT * FROM t0, rt1 WHERE (((CAST(rt1.c1 AS TEXT))<(((rt1.c2) ISNULL)))) UNION ALL SELECT * FROM t0, rt1 WHERE ((NOT (((CAST(rt1.c1 AS TEXT))<(((rt1.c2) ISNULL)))))) UNION ALL SELECT ALL * FROM t0, rt1 WHERE (((((CAST(rt1.c1 AS TEXT))<(((rt1.c2) ISNULL)))) ISNULL));
SELECT ALL * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (((((rt1.c1 COLLATE BINARY)OR((rt1.c0 IN ()))))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE rt1.c0 END))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (((((rt1.c1 COLLATE BINARY)OR((rt1.c0 IN ()))))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE rt1.c0 END))))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((((((rt1.c1 COLLATE BINARY)OR((rt1.c0 IN ()))))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE rt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 WHERE (((((((((((t0.c0)OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2))) NOT BETWEEN ((((rt1.c0))>((t0.c0)))) AND (CAST(rt1.c2 AS INTEGER)))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 WHERE ((NOT (((((((((((t0.c0)OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2))) NOT BETWEEN ((((rt1.c0))>((t0.c0)))) AND (CAST(rt1.c2 AS INTEGER)))))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 WHERE (((((((((((((t0.c0)OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2))) NOT BETWEEN ((((rt1.c0))>((t0.c0)))) AND (CAST(rt1.c2 AS INTEGER)))) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING GROUP_CONCAT(CAST(GROUP_CONCAT(rt1.c1) AS TEXT)) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING (NOT (GROUP_CONCAT(CAST(GROUP_CONCAT(rt1.c1) AS TEXT)))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING ((GROUP_CONCAT(CAST(GROUP_CONCAT(rt1.c1) AS TEXT))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ()))<>(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((t0.c0 IN ()))!=(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) UNION ALL SELECT * FROM t0 WHERE ((((((t0.c0 IN ()))!=(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((~ (t0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((~ (t0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((~ (t0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 WHERE (((0.9091945444814982)%(((rt1.c1)>>(NULL))))) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (((0.9091945444814982)%(((rt1.c1)>>(NULL))))))) GROUP BY rt1.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c0 FROM rt1 WHERE (((((0.9091945444814982)%(((rt1.c1)>>(NULL))))) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c1, t0.c0, rt1.c2;
SELECT ALL rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c1, t0.c0, rt1.c2 HAVING (+ (GROUP_CONCAT(rt1.c2))) UNION ALL SELECT ALL rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c1, t0.c0, rt1.c2 HAVING (NOT ((+ (GROUP_CONCAT(rt1.c2))))) UNION ALL SELECT rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c1, t0.c0, rt1.c2 HAVING (((+ (GROUP_CONCAT(rt1.c2)))) ISNULL);
SELECT rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c1, t0.c0, rt1.c2;
SELECT ALL rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c1, t0.c0, rt1.c2 HAVING (+ (GROUP_CONCAT(rt1.c2))) UNION ALL SELECT ALL rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c1, t0.c0, rt1.c2 HAVING (NOT ((+ (GROUP_CONCAT(rt1.c2))))) UNION ALL SELECT rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c1, t0.c0, rt1.c2 HAVING (((+ (GROUP_CONCAT(rt1.c2)))) ISNULL);
SELECT rt1.c1, t0.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c1, t0.c0, rt1.c2;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (CAST(t0.c0 AS NUMERIC) COLLATE NOCASE) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c0 AS NUMERIC) COLLATE NOCASE))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC) COLLATE NOCASE) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT ((t0.c0 IN ())))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT ((NOT ((t0.c0 IN ())))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((((NOT ((t0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (CAST(((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)) AS BLOB)) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (CAST(((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)) AS BLOB)))) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((CAST(((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)) AS BLOB)) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0 FROM t0 NOT INDEXED INNER JOIN rt1 ON ((((t0.c0) NOT BETWEEN (x'') AND (rt1.c0))) BETWEEN (((rt1.c1)>>(rt1.c2))) AND ('r\''U俹L')) GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM t0 INNER JOIN rt1 ON ((((t0.c0) NOT BETWEEN (x'') AND (rt1.c0))) BETWEEN (((rt1.c1)>>(rt1.c2))) AND ('r\''U俹L')) GROUP BY rt1.c1, rt1.c0 HAVING MAX(x'') UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM t0 INNER JOIN rt1 ON ((((t0.c0) NOT BETWEEN (x'') AND (rt1.c0))) BETWEEN (((rt1.c1)>>(rt1.c2))) AND ('r\''U俹L')) GROUP BY rt1.c1, rt1.c0 HAVING (NOT (MAX(x''))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM t0 INNER JOIN rt1 ON ((((t0.c0) NOT BETWEEN (x'') AND (rt1.c0))) BETWEEN (((rt1.c1)>>(rt1.c2))) AND ('r\''U俹L')) GROUP BY rt1.c1, rt1.c0 HAVING ((MAX(x'')) ISNULL);
SELECT ALL rt1.c1, rt1.c0 FROM t0 NOT INDEXED INNER JOIN rt1 ON ((((t0.c0) NOT BETWEEN (x'') AND (rt1.c0))) BETWEEN (((rt1.c1)>>(rt1.c2))) AND ('r\''U俹L')) GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM t0 INNER JOIN rt1 ON ((((t0.c0) NOT BETWEEN (x'') AND (rt1.c0))) BETWEEN (((rt1.c1)>>(rt1.c2))) AND ('r\''U俹L')) GROUP BY rt1.c1, rt1.c0 HAVING MAX(x'') UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM t0 INNER JOIN rt1 ON ((((t0.c0) NOT BETWEEN (x'') AND (rt1.c0))) BETWEEN (((rt1.c1)>>(rt1.c2))) AND ('r\''U俹L')) GROUP BY rt1.c1, rt1.c0 HAVING (NOT (MAX(x''))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM t0 INNER JOIN rt1 ON ((((t0.c0) NOT BETWEEN (x'') AND (rt1.c0))) BETWEEN (((rt1.c1)>>(rt1.c2))) AND ('r\''U俹L')) GROUP BY rt1.c1, rt1.c0 HAVING ((MAX(x'')) ISNULL);
SELECT ALL rt1.c1, rt1.c0 FROM t0 NOT INDEXED INNER JOIN rt1 ON ((((t0.c0) NOT BETWEEN (x'') AND (rt1.c0))) BETWEEN (((rt1.c1)>>(rt1.c2))) AND ('r\''U俹L')) GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c2 FROM rt1;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE (LOWER(DISTINCT (((rt1.c1))=((rt1.c2))))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (LOWER(DISTINCT (((rt1.c1))=((rt1.c2))))))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 WHERE (((LOWER(DISTINCT (((rt1.c1))=((rt1.c2))))) ISNULL));
SELECT ALL rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE ((load_extension(t0.c0, rt1.c1) IN (CAST(x'' AS TEXT)))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT ((load_extension(t0.c0, rt1.c1) IN (CAST(x'' AS TEXT)))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((((load_extension(t0.c0, rt1.c1) IN (CAST(x'' AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS BLOB))LIKE(((t0.c0)OR(t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((CAST(t0.c0 AS BLOB))LIKE(((t0.c0)OR(t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((CAST(t0.c0 AS BLOB))LIKE(((t0.c0)OR(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt1.c1, rt1.c0, t0.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN t0 ON t0.c0 COLLATE RTRIM GROUP BY rt1.c1, rt1.c0, t0.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, t0.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN t0 ON t0.c0 COLLATE RTRIM GROUP BY rt1.c1, rt1.c0, t0.c0, rt1.c2 HAVING CASE SUM(COUNT(rt1.c0))  WHEN 0.8010064346576973 THEN COUNT(*) ELSE COUNT(t0.c0) END UNION ALL SELECT rt1.c1, rt1.c0, t0.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN t0 ON t0.c0 COLLATE RTRIM GROUP BY rt1.c1, rt1.c0, t0.c0, rt1.c2 HAVING (NOT (CASE SUM(COUNT(rt1.c0))  WHEN 0.8010064346576973 THEN COUNT(*) ELSE COUNT(t0.c0) END)) UNION ALL SELECT rt1.c1, rt1.c0, t0.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN t0 ON t0.c0 COLLATE RTRIM GROUP BY rt1.c1, rt1.c0, t0.c0, rt1.c2 HAVING ((CASE SUM(COUNT(rt1.c0))  WHEN 0.8010064346576973 THEN COUNT(*) ELSE COUNT(t0.c0) END) ISNULL);
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((x'') NOT BETWEEN (((rt1.c1) NOT NULL)) AND ((((rt1.c2))<((rt1.c2)))))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (((x'') NOT BETWEEN (((rt1.c1) NOT NULL)) AND ((((rt1.c2))<((rt1.c2)))))))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((((x'') NOT BETWEEN (((rt1.c1) NOT NULL)) AND ((((rt1.c2))<((rt1.c2)))))) ISNULL));
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0 FROM t0 CROSS JOIN rt1 ON (+ (GLOB(rt1.c0, rt1.c1)));
SELECT DISTINCT rt1.c1, rt1.c0 FROM t0 CROSS JOIN rt1 ON (+ (GLOB(rt1.c0, rt1.c1))) WHERE (((CASE rt1.c1  WHEN rt1.c2 THEN -362742874 WHEN rt1.c0 THEN t0.c0 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)*((((rt1.c1, rt1.c0, rt1.c0))<((rt1.c2, rt1.c2, rt1.c2)))))) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM t0 CROSS JOIN rt1 ON (+ (GLOB(rt1.c0, rt1.c1))) WHERE ((NOT (((CASE rt1.c1  WHEN rt1.c2 THEN -362742874 WHEN rt1.c0 THEN t0.c0 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)*((((rt1.c1, rt1.c0, rt1.c0))<((rt1.c2, rt1.c2, rt1.c2)))))))) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM t0 CROSS JOIN rt1 ON (+ (GLOB(rt1.c0, rt1.c1))) WHERE (((((CASE rt1.c1  WHEN rt1.c2 THEN -362742874 WHEN rt1.c0 THEN t0.c0 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)*((((rt1.c1, rt1.c0, rt1.c0))<((rt1.c2, rt1.c2, rt1.c2)))))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0 FROM t0 CROSS JOIN rt1 ON (+ (GLOB(rt1.c0, rt1.c1)));
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS BLOB)) BETWEEN (((t0.c0) IS TRUE)) AND (CASE WHEN t0.c0 THEN '{me}B' END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((CAST(t0.c0 AS BLOB)) BETWEEN (((t0.c0) IS TRUE)) AND (CASE WHEN t0.c0 THEN '{me}B' END))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((CAST(t0.c0 AS BLOB)) BETWEEN (((t0.c0) IS TRUE)) AND (CASE WHEN t0.c0 THEN '{me}B' END))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))>>(((t0.c0)IS NOT(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))>>(((t0.c0)IS NOT(t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))>>(((t0.c0)IS NOT(t0.c0))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((CAST(t0.c0 AS INTEGER)))==(((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((CAST(t0.c0 AS INTEGER)))==(((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((CAST(t0.c0 AS INTEGER)))==(((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((((((rt1.c1) ISNULL), ((((((((NULL)OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)), (~ (rt1.c0))))<>((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)), CASE WHEN rt1.c1 THEN rt1.c2 END, ('1365638417' IN ()))))) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT ((((((rt1.c1) ISNULL), ((((((((NULL)OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)), (~ (rt1.c0))))<>((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)), CASE WHEN rt1.c1 THEN rt1.c2 END, ('1365638417' IN ()))))))) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((((((((rt1.c1) ISNULL), ((((((((NULL)OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)), (~ (rt1.c0))))!=((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)), CASE WHEN rt1.c1 THEN rt1.c2 END, ('1365638417' IN ()))))) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c0 HAVING MAX(AVG(rt1.c1)) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (MAX(AVG(rt1.c1)))) UNION ALL SELECT rt1.c1, rt1.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((MAX(AVG(rt1.c1))) ISNULL);
SELECT ALL SUM(CASE ((t0.c0)<=(t0.c0))  WHEN (t0.c0 IN (t0.c0)) THEN json_patch(t0.c0, t0.c0) END) FROM t0;
SELECT ALL rt1.c2 FROM rt1;
SELECT rt1.c2 FROM rt1 WHERE (((rt1.c1 COLLATE RTRIM)|(0.5544118564435041))) UNION ALL SELECT rt1.c2 FROM rt1 WHERE ((NOT (((rt1.c1 COLLATE RTRIM)|(0.5544118564435041))))) UNION ALL SELECT ALL rt1.c2 FROM rt1 WHERE (((((rt1.c1 COLLATE RTRIM)|(0.5544118564435041))) ISNULL));
SELECT ALL rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, t0.c0 FROM rt1, t0;
SELECT DISTINCT rt1.c1, t0.c0 FROM rt1, t0 WHERE (rt1.c1) UNION SELECT DISTINCT rt1.c1, t0.c0 FROM rt1, t0 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT rt1.c1, t0.c0 FROM rt1, t0 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT rt1.c1, t0.c0 FROM rt1, t0;
SELECT ALL rt1.c1 FROM rt1 INNER JOIN t0 ON (((rt1.c0, rt1.c2, rt1.c2)) NOT BETWEEN (((((rt1.c2))!=((NULL))), 0.36939034672089177, (~ (rt1.c1)))) AND (((t0.c0 IN (rt1.c1, rt1.c2)), t0.c0, ((((t0.c0)AND(rt1.c0)))AND(rt1.c0))))) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 INNER JOIN t0 ON (((rt1.c0, rt1.c2, rt1.c2)) NOT BETWEEN (((((rt1.c2))<>((NULL))), 0.36939034672089177, (~ (rt1.c1)))) AND (((t0.c0 IN (rt1.c1, rt1.c2)), t0.c0, ((((t0.c0)AND(rt1.c0)))AND(rt1.c0))))) WHERE (((CAST(rt1.c0 AS NUMERIC)) BETWEEN (((t0.c0) NOTNULL)) AND (((((((((t0.c0)OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)))AND(t0.c0))))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 INNER JOIN t0 ON (((rt1.c0, rt1.c2, rt1.c2)) NOT BETWEEN (((((rt1.c2))<>((NULL))), 0.36939034672089177, (~ (rt1.c1)))) AND (((t0.c0 IN (rt1.c1, rt1.c2)), t0.c0, ((((t0.c0)AND(rt1.c0)))AND(rt1.c0))))) WHERE ((NOT (((CAST(rt1.c0 AS NUMERIC)) BETWEEN (((t0.c0) NOTNULL)) AND (((((((((t0.c0)OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)))AND(t0.c0))))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 INNER JOIN t0 ON (((rt1.c0, rt1.c2, rt1.c2)) NOT BETWEEN (((((rt1.c2))<>((NULL))), 0.36939034672089177, (~ (rt1.c1)))) AND (((t0.c0 IN (rt1.c1, rt1.c2)), t0.c0, ((((t0.c0)AND(rt1.c0)))AND(rt1.c0))))) WHERE (((((CAST(rt1.c0 AS NUMERIC)) BETWEEN (((t0.c0) NOTNULL)) AND (((((((((t0.c0)OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)))AND(t0.c0))))) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 INNER JOIN t0 ON (((rt1.c0, rt1.c2, rt1.c2)) NOT BETWEEN (((((rt1.c2))!=((NULL))), 0.36939034672089177, (~ (rt1.c1)))) AND (((t0.c0 IN (rt1.c1, rt1.c2)), t0.c0, ((((t0.c0)AND(rt1.c0)))AND(rt1.c0))))) GROUP BY rt1.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(MAX(t0.c0))) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((COUNT(MAX(t0.c0))) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((COUNT(MAX(t0.c0))) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) ISNULL);
SELECT rt1.c2 FROM rt1;
SELECT ALL rt1.c2 FROM rt1 WHERE (CAST(rt1.c2 AS NUMERIC) COLLATE BINARY) UNION ALL SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT (CAST(rt1.c2 AS NUMERIC) COLLATE BINARY))) UNION ALL SELECT rt1.c2 FROM rt1 WHERE (((CAST(rt1.c2 AS NUMERIC) COLLATE BINARY) ISNULL));
SELECT rt1.c2 FROM rt1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0)>>((+ (t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((t0.c0)>>((+ (t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0)>>((+ (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((((- (t0.c0)))AND(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))))OR(((t0.c0) IS FALSE)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((((- (t0.c0)))AND(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))))OR(((t0.c0) IS FALSE)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((((- (t0.c0)))AND(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))))OR(((t0.c0) IS FALSE)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL * FROM t0, rt1;
SELECT ALL * FROM t0, rt1 WHERE (0.07507436664682354) UNION ALL SELECT ALL * FROM t0, rt1 WHERE ((NOT (0.07507436664682354))) UNION ALL SELECT * FROM t0, rt1 WHERE (((0.07507436664682354) ISNULL));
SELECT ALL * FROM t0, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CAST((rt1.c1 IN (rt1.c0, rt1.c2)) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CAST((rt1.c1 IN (rt1.c0, rt1.c2)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CAST((rt1.c1 IN (rt1.c0, rt1.c2)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE 'lq''鏲m駷5' END) NOT NULL)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((CASE WHEN t0.c0 THEN t0.c0 ELSE 'lq''鏲m駷5' END) NOT NULL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 ELSE 'lq''鏲m駷5' END) NOT NULL)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt1.c0, rt1.c1 FROM t0 INNER JOIN rt1 ON (((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((x''))))+(((rt1.c2)<(rt1.c0)))) GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM t0 INNER JOIN rt1 ON (((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((x''))))+(((rt1.c2)<(rt1.c0)))) GROUP BY rt1.c0, rt1.c1 HAVING COUNT(((((rt1.c2)OR(t0.c0)))OR(GROUP_CONCAT(MAX(rt1.c1))))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM t0 INNER JOIN rt1 ON (((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((x''))))+(((rt1.c2)<(rt1.c0)))) GROUP BY rt1.c0, rt1.c1 HAVING (NOT (COUNT(((((rt1.c2)OR(t0.c0)))OR(GROUP_CONCAT(MAX(rt1.c1))))))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM t0 INNER JOIN rt1 ON (((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((x''))))+(((rt1.c2)<(rt1.c0)))) GROUP BY rt1.c0, rt1.c1 HAVING ((COUNT(((((rt1.c2)OR(t0.c0)))OR(GROUP_CONCAT(MAX(rt1.c1)))))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((((((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)), PRINTF(t0.c0), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c0)OR(t0.c0)))AND('1757370706')), t0.c0))>=((x'', NULLIF(t0.c0, t0.c0), CASE WHEN t0.c0 THEN NULL END, (t0.c0 IN ()), (t0.c0 IN ()))))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)), PRINTF(t0.c0), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c0)OR(t0.c0)))AND('1757370706')), t0.c0))>=((x'', NULLIF(t0.c0, t0.c0), CASE WHEN t0.c0 THEN NULL END, (t0.c0 IN ()), (t0.c0 IN ()))))))) UNION ALL SELECT * FROM t0 WHERE ((((((((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)), PRINTF(t0.c0), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c0)OR(t0.c0)))AND('1757370706')), t0.c0))>=((x'', NULLIF(t0.c0, t0.c0), CASE WHEN t0.c0 THEN NULL END, (t0.c0 IN ()), (t0.c0 IN ()))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (CASE '4u3.4\4'  WHEN (+ (t0.c0)) THEN (+ (rt1.c0)) WHEN t0.c0 THEN t0.c0 COLLATE NOCASE WHEN rt1.c1 THEN 0.6017755001906934 END) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (CASE '4u3.4\4'  WHEN (+ (t0.c0)) THEN (+ (rt1.c0)) WHEN t0.c0 THEN t0.c0 COLLATE NOCASE WHEN rt1.c1 THEN 0.6017755001906934 END))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((CASE '4u3.4\4'  WHEN (+ (t0.c0)) THEN (+ (rt1.c0)) WHEN t0.c0 THEN t0.c0 COLLATE NOCASE WHEN rt1.c1 THEN 0.6017755001906934 END) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 WHERE (CASE NULL  WHEN ((rt1.c0)<=(rt1.c1)) THEN ((((((((0.021575474775570314)OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c0)) ELSE ((rt1.c0)-(rt1.c0)) END) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE ((NOT (CASE NULL  WHEN ((rt1.c0)<=(rt1.c1)) THEN ((((((((0.021575474775570314)OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c0)) ELSE ((rt1.c0)-(rt1.c0)) END))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE (((CASE NULL  WHEN ((rt1.c0)<=(rt1.c1)) THEN ((((((((0.021575474775570314)OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c0)) ELSE ((rt1.c0)-(rt1.c0)) END) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2, rt1.c0, rt1.c1, t0.c0 FROM t0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1, t0.c0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1, t0.c0 FROM t0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1, t0.c0 HAVING COUNT(MIN(rt1.c2) COLLATE BINARY) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1, t0.c0 FROM t0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1, t0.c0 HAVING (NOT (COUNT(MIN(rt1.c2) COLLATE BINARY))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1, t0.c0 FROM t0 NATURAL JOIN rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1, t0.c0 HAVING ((COUNT(MIN(rt1.c2) COLLATE BINARY)) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((((t0.c0) NOT NULL) IN (DATETIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0), t0.c0 COLLATE NOCASE))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((t0.c0) NOT NULL) IN (DATETIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0), t0.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((t0.c0) NOT NULL) IN (DATETIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0), t0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (CASE WHEN ((rt1.c2) IS FALSE) THEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)) ELSE IFNULL(DISTINCT rt1.c1, rt1.c1) END) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (CASE WHEN ((rt1.c2) IS FALSE) THEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)) ELSE IFNULL(DISTINCT rt1.c1, rt1.c1) END))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (((CASE WHEN ((rt1.c2) IS FALSE) THEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)) ELSE IFNULL(DISTINCT rt1.c1, rt1.c1) END) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 RIGHT OUTER JOIN t0 ON (~ (HEX(DISTINCT rt1.c0))) GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 RIGHT OUTER JOIN t0 ON (~ (HEX(DISTINCT rt1.c0))) WHERE (rt1.c0) GROUP BY rt1.c2, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 RIGHT OUTER JOIN t0 ON (~ (HEX(DISTINCT rt1.c0))) WHERE ((NOT (rt1.c0))) GROUP BY rt1.c2, rt1.c0, rt1.c1 UNION SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 RIGHT OUTER JOIN t0 ON (~ (HEX(DISTINCT rt1.c0))) WHERE (((rt1.c0) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 RIGHT OUTER JOIN t0 ON (~ (HEX(DISTINCT rt1.c0))) GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2 FROM rt1, t0 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1, t0 GROUP BY rt1.c2 HAVING AVG(GROUP_CONCAT(rt1.c1)) UNION ALL SELECT ALL rt1.c2 FROM rt1, t0 GROUP BY rt1.c2 HAVING (NOT (AVG(GROUP_CONCAT(rt1.c1)))) UNION ALL SELECT ALL rt1.c2 FROM rt1, t0 GROUP BY rt1.c2 HAVING ((AVG(GROUP_CONCAT(rt1.c1))) ISNULL);
SELECT SUM('') FROM rt1;
SELECT ALL rt1.c1 FROM rt1, t0;
SELECT ALL rt1.c1 FROM rt1, t0 WHERE ((rt1.c1 COLLATE NOCASE IN ())) UNION ALL SELECT rt1.c1 FROM rt1, t0 NOT INDEXED WHERE ((NOT ((rt1.c1 COLLATE NOCASE IN ())))) UNION ALL SELECT ALL rt1.c1 FROM rt1, t0 WHERE ((((rt1.c1 COLLATE NOCASE IN ())) ISNULL));
SELECT ALL rt1.c1 FROM rt1, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT rt1.c0, rt1.c1, t0.c0 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, t0.c0;
SELECT rt1.c0, rt1.c1, t0.c0 FROM t0, rt1 WHERE (((((((rt1.c1)<<(rt1.c0)))OR(((((rt1.c0)OR(rt1.c1)))OR(rt1.c1)))))OR(((((rt1.c1)OR(rt1.c2)))AND(t0.c0))))) GROUP BY rt1.c0, rt1.c1, t0.c0 UNION SELECT ALL rt1.c0, rt1.c1, t0.c0 FROM t0, rt1 WHERE ((NOT (((((((rt1.c1)<<(rt1.c0)))OR(((((rt1.c0)OR(rt1.c1)))OR(rt1.c1)))))OR(((((rt1.c1)OR(rt1.c2)))AND(t0.c0))))))) GROUP BY rt1.c0, rt1.c1, t0.c0 UNION SELECT rt1.c0, rt1.c1, t0.c0 FROM t0, rt1 NOT INDEXED WHERE (((((((((rt1.c1)<<(rt1.c0)))OR(((((rt1.c0)OR(rt1.c1)))OR(rt1.c1)))))OR(((((rt1.c1)OR(rt1.c2)))AND(t0.c0))))) ISNULL)) GROUP BY rt1.c0, rt1.c1, t0.c0;
SELECT rt1.c0, rt1.c1, t0.c0 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, t0.c0;
SELECT ALL rt1.c2, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING json_insert(t0.c0 COLLATE RTRIM, GROUP_CONCAT(MAX(NULL)), MAX(t0.c0)) UNION ALL SELECT rt1.c2, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (json_insert(t0.c0 COLLATE RTRIM, GROUP_CONCAT(MAX(NULL)), MAX(t0.c0)))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((json_insert(t0.c0 COLLATE RTRIM, GROUP_CONCAT(MAX(NULL)), MAX(t0.c0))) ISNULL);
SELECT ALL * FROM rt1, t0;
SELECT ALL * FROM rt1, t0 WHERE ((((~ (rt1.c0))) NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c1 END) AND (((((t0.c0)AND(rt1.c1)))OR(rt1.c0))))) UNION ALL SELECT ALL * FROM rt1, t0 WHERE ((NOT ((((~ (rt1.c0))) NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c1 END) AND (((((t0.c0)AND(rt1.c1)))OR(rt1.c0))))))) UNION ALL SELECT * FROM rt1, t0 WHERE ((((((~ (rt1.c0))) NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c1 END) AND (((((t0.c0)AND(rt1.c1)))OR(rt1.c0))))) ISNULL));
SELECT ALL * FROM rt1, t0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (rt1.c1) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT * FROM rt1 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c1, t0.c0 FROM t0 NATURAL JOIN rt1 GROUP BY rt1.c1, t0.c0;
SELECT rt1.c1, t0.c0 FROM t0 NATURAL JOIN rt1 WHERE (((((CAST(t0.c0 AS BLOB))AND(CASE WHEN rt1.c2 THEN t0.c0 END)))OR(t0.c0 COLLATE BINARY))) GROUP BY rt1.c1, t0.c0 UNION SELECT rt1.c1, t0.c0 FROM t0 NATURAL JOIN rt1 WHERE ((NOT (((((CAST(t0.c0 AS BLOB))AND(CASE WHEN rt1.c2 THEN t0.c0 END)))OR(t0.c0 COLLATE BINARY))))) GROUP BY rt1.c1, t0.c0 UNION SELECT ALL rt1.c1, t0.c0 FROM t0 NATURAL JOIN rt1 WHERE (((((((CAST(t0.c0 AS BLOB))AND(CASE WHEN rt1.c2 THEN t0.c0 END)))OR(t0.c0 COLLATE BINARY))) ISNULL)) GROUP BY rt1.c1, t0.c0;
SELECT rt1.c1, t0.c0 FROM t0 NATURAL JOIN rt1 GROUP BY rt1.c1, t0.c0;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((rt1.c0) NOT NULL) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (((rt1.c0) NOT NULL))) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((((rt1.c0) NOT NULL)) ISNULL);
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((rt1.c0) NOT NULL) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (((rt1.c0) NOT NULL))) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((((rt1.c0) NOT NULL)) ISNULL);
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL t0.c0, rt1.c2 FROM rt1, t0;
SELECT t0.c0, rt1.c2 FROM rt1, t0 WHERE (UNLIKELY(CASE rt1.c2  WHEN NULL THEN rt1.c2 END)) UNION ALL SELECT t0.c0, rt1.c2 FROM rt1, t0 WHERE ((NOT (UNLIKELY(CASE rt1.c2  WHEN NULL THEN rt1.c2 END)))) UNION ALL SELECT t0.c0, rt1.c2 FROM rt1, t0 WHERE (((UNLIKELY(CASE rt1.c2  WHEN NULL THEN rt1.c2 END)) ISNULL));
SELECT ALL t0.c0, rt1.c2 FROM rt1, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)+(((t0.c0)GLOB(t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)+(((t0.c0)GLOB(t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)+(((t0.c0)GLOB(t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (TOTAL_CHANGES()) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (TOTAL_CHANGES()))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((TOTAL_CHANGES()) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING MIN(((rt1.c1) IS FALSE)) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (MIN(((rt1.c1) IS FALSE)))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING ((MIN(((rt1.c1) IS FALSE))) ISNULL);
SELECT rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING MIN(((rt1.c1) IS FALSE)) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (MIN(((rt1.c1) IS FALSE)))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING ((MIN(((rt1.c1) IS FALSE))) ISNULL);
SELECT rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT * FROM t0, rt1;
SELECT * FROM t0, rt1 WHERE ((((rt1.c2)IS NOT(rt1.c1)) IN ())) UNION ALL SELECT ALL * FROM t0, rt1 WHERE ((NOT ((((rt1.c2)IS NOT(rt1.c1)) IN ())))) UNION ALL SELECT * FROM t0, rt1 WHERE ((((((rt1.c2)IS NOT(rt1.c1)) IN ())) ISNULL));
SELECT * FROM t0, rt1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 NOT INDEXED WHERE (json_quote(((t0.c0) ISNULL))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (json_quote(((t0.c0) ISNULL))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((json_quote(((t0.c0) ISNULL))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c2, rt1.c1;
SELECT ALL t0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, t0 WHERE (rt1.c2) GROUP BY t0.c0, rt1.c0, rt1.c2, rt1.c1 UNION SELECT t0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, t0 WHERE ((NOT (rt1.c2))) GROUP BY t0.c0, rt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL t0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1 NOT INDEXED, t0 WHERE (((rt1.c2) ISNULL)) GROUP BY t0.c0, rt1.c0, rt1.c2, rt1.c1;
SELECT t0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON ((NULLIF(t0.c0, rt1.c1))<=((rt1.c1 IN (rt1.c1)))) GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON ((NULLIF(t0.c0, rt1.c1))<=((rt1.c1 IN (rt1.c1)))) GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING COUNT(*) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON ((NULLIF(t0.c0, rt1.c1))<=((rt1.c1 IN (rt1.c1)))) GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON ((NULLIF(t0.c0, rt1.c1))<=((rt1.c1 IN (rt1.c1)))) GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON ((NULLIF(t0.c0, rt1.c1))<=((rt1.c1 IN (rt1.c1)))) GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON ((NULLIF(t0.c0, rt1.c1))<=((rt1.c1 IN (rt1.c1)))) GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING COUNT(*) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON ((NULLIF(t0.c0, rt1.c1))<=((rt1.c1 IN (rt1.c1)))) GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON ((NULLIF(t0.c0, rt1.c1))<=((rt1.c1 IN (rt1.c1)))) GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON ((NULLIF(t0.c0, rt1.c1))<=((rt1.c1 IN (rt1.c1)))) GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT TOTAL((((NULL)) NOT BETWEEN ((0.8939844687114027)) AND (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))) FROM t0 ORDER BY (NOT ((t0.c0 IN ()))) DESC;
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((((('Fnfg(FVUQ')OR((NOT (rt1.c0)))))OR(CASE WHEN rt1.c0 THEN rt1.c1 END))) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((((('Fnfg(FVUQ')OR((NOT (rt1.c0)))))OR(CASE WHEN rt1.c0 THEN rt1.c1 END))))) UNION ALL SELECT * FROM rt1 WHERE ((((((('Fnfg(FVUQ')OR((NOT (rt1.c0)))))OR(CASE WHEN rt1.c0 THEN rt1.c1 END))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((NULL IN (0.12778985892220351))) NOT BETWEEN (((t0.c0)>(t0.c0))) AND ((((t0.c0, t0.c0, NULL)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((NULL IN (0.12778985892220351))) NOT BETWEEN (((t0.c0)>(t0.c0))) AND ((((t0.c0, t0.c0, NULL)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((NULL IN (0.12778985892220351))) NOT BETWEEN (((t0.c0)>(t0.c0))) AND ((((t0.c0, t0.c0, NULL)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE BINARY) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c0 AS INTEGER) COLLATE BINARY))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS INTEGER) COLLATE BINARY) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1 HAVING (((((AVG('-2093925733'))) NOT BETWEEN ((rt1.c0)) AND ((TOTAL(COUNT(COUNT(*)))))))!=(json_object(rt1.c1, rt1.c2, COUNT(*), TOTAL(AVG(COUNT(*)))))) UNION ALL SELECT rt1.c1 FROM t0, rt1 GROUP BY rt1.c1 HAVING (NOT ((((((AVG('-2093925733'))) NOT BETWEEN ((rt1.c0)) AND ((TOTAL(COUNT(COUNT(*)))))))!=(json_object(rt1.c1, rt1.c2, COUNT(*), TOTAL(AVG(COUNT(*)))))))) UNION ALL SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1 HAVING (((((((AVG('-2093925733'))) NOT BETWEEN ((rt1.c0)) AND ((TOTAL(COUNT(COUNT(*)))))))!=(json_object(rt1.c1, rt1.c2, COUNT(*), TOTAL(AVG(COUNT(*))))))) ISNULL);
SELECT * FROM rt1 RIGHT OUTER JOIN t0 ON ((((((((((rt1.c0)OR(x'f949')))AND(rt1.c1)))OR('')))OR(rt1.c0))) BETWEEN (UNLIKELY(t0.c0)) AND ('{me}B'));
SELECT * FROM rt1 RIGHT OUTER JOIN t0 ON ((((((((((rt1.c0)OR(x'f949')))AND(rt1.c1)))OR('')))OR(rt1.c0))) BETWEEN (UNLIKELY(t0.c0)) AND ('{me}B')) WHERE (NULL) UNION ALL SELECT * FROM rt1 RIGHT OUTER JOIN t0 ON ((((((((((rt1.c0)OR(x'f949')))AND(rt1.c1)))OR('')))OR(rt1.c0))) BETWEEN (UNLIKELY(t0.c0)) AND ('{me}B')) WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM rt1 RIGHT OUTER JOIN t0 ON ((((((((((rt1.c0)OR(x'f949')))AND(rt1.c1)))OR('')))OR(rt1.c0))) BETWEEN (UNLIKELY(t0.c0)) AND ('{me}B')) WHERE (((NULL) ISNULL));
SELECT * FROM rt1 RIGHT OUTER JOIN t0 ON ((((((((((rt1.c0)OR(x'f949')))AND(rt1.c1)))OR('')))OR(rt1.c0))) BETWEEN (UNLIKELY(t0.c0)) AND ('{me}B'));
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (rt1.c1) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 WHERE ((((((rt1.c2)|(rt1.c2)), (rt1.c0 IN ()), ((x'1e14') NOTNULL)))>((((rt1.c1)IS NOT(rt1.c2)), ((rt1.c1) IS FALSE), (((rt1.c1, rt1.c2, rt1.c0))==(('2凝%', rt1.c1, rt1.c1))))))) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT ((((((rt1.c2)|(rt1.c2)), (rt1.c0 IN ()), ((x'1e14') NOTNULL)))>((((rt1.c1)IS NOT(rt1.c2)), ((rt1.c1) IS FALSE), (((rt1.c1, rt1.c2, rt1.c0))==(('2凝%', rt1.c1, rt1.c1))))))))) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE ((((((((rt1.c2)|(rt1.c2)), (rt1.c0 IN ()), ((x'1e14') NOTNULL)))>((((rt1.c1)IS NOT(rt1.c2)), ((rt1.c1) IS FALSE), (((rt1.c1, rt1.c2, rt1.c0))==(('2凝%', rt1.c1, rt1.c1))))))) ISNULL)) GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM t0, rt1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM t0, rt1 WHERE (((((((((((((((t0.c0)AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))OR(t0.c0)))AND(rt1.c0)))OR(rt1.c0)))<>(((0.02660982636957787)&(rt1.c0))))) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1 FROM t0, rt1 WHERE ((NOT (((((((((((((((t0.c0)AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))OR(t0.c0)))AND(rt1.c0)))OR(rt1.c0)))!=(((0.02660982636957787)&(rt1.c0))))))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM t0, rt1 WHERE (((((((((((((((((t0.c0)AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))OR(t0.c0)))AND(rt1.c0)))OR(rt1.c0)))!=(((0.02660982636957787)&(rt1.c0))))) ISNULL));
SELECT rt1.c0, rt1.c2, rt1.c1 FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (((rt1.c1 COLLATE NOCASE) BETWEEN (((((x'')AND(t0.c0)))AND(rt1.c0))) AND (((t0.c0)AND(rt1.c2))))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (((rt1.c1 COLLATE NOCASE) BETWEEN (((((x'')AND(t0.c0)))AND(rt1.c0))) AND (((t0.c0)AND(rt1.c2))))))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((((rt1.c1 COLLATE NOCASE) BETWEEN (((((x'')AND(t0.c0)))AND(rt1.c0))) AND (((t0.c0)AND(rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT t0.c0, rt1.c1, rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c1, rt1.c0, rt1.c2;
SELECT t0.c0, rt1.c1, rt1.c0, rt1.c2 FROM t0, rt1 WHERE (CASE WHEN (((rt1.c1, rt1.c1, rt1.c2))=(('QG.9Evt-', rt1.c1, t0.c0))) THEN ((((((((((((rt1.c1)AND(t0.c0)))AND(t0.c0)))AND(rt1.c0)))OR(NULL)))OR(rt1.c0)))AND(rt1.c0)) END) GROUP BY t0.c0, rt1.c1, rt1.c0, rt1.c2 UNION SELECT t0.c0, rt1.c1, rt1.c0, rt1.c2 FROM t0, rt1 WHERE ((NOT (CASE WHEN (((rt1.c1, rt1.c1, rt1.c2))==(('QG.9Evt-', rt1.c1, t0.c0))) THEN ((((((((((((rt1.c1)AND(t0.c0)))AND(t0.c0)))AND(rt1.c0)))OR(NULL)))OR(rt1.c0)))AND(rt1.c0)) END))) GROUP BY t0.c0, rt1.c1, rt1.c0, rt1.c2 UNION SELECT ALL t0.c0, rt1.c1, rt1.c0, rt1.c2 FROM t0, rt1 WHERE (((CASE WHEN (((rt1.c1, rt1.c1, rt1.c2))==(('QG.9Evt-', rt1.c1, t0.c0))) THEN ((((((((((((rt1.c1)AND(t0.c0)))AND(t0.c0)))AND(rt1.c0)))OR(NULL)))OR(rt1.c0)))AND(rt1.c0)) END) ISNULL)) GROUP BY t0.c0, rt1.c1, rt1.c0, rt1.c2;
SELECT t0.c0, rt1.c1, rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c1, rt1.c0, rt1.c2;
SELECT ALL t0.c0 FROM t0, rt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, rt1 GROUP BY t0.c0 HAVING json_insert(MIN(MAX(TOTAL(GROUP_CONCAT(MIN(x''))))), MIN(x''), AVG(t0.c0)) UNION ALL SELECT t0.c0 FROM t0, rt1 GROUP BY t0.c0 HAVING (NOT (json_insert(MIN(MAX(TOTAL(GROUP_CONCAT(MIN(x''))))), MIN(x''), AVG(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0, rt1 GROUP BY t0.c0 HAVING ((json_insert(MIN(MAX(TOTAL(GROUP_CONCAT(MIN(x''))))), MIN(x''), AVG(t0.c0))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((t0.c0 IN ())) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((t0.c0 IN ())))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((t0.c0 IN ())) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ('h}#1rmﴩ' COLLATE RTRIM) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT ('h}#1rmﴩ' COLLATE RTRIM))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((('h}#1rmﴩ' COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM t0, rt1 WHERE (CAST(((((rt1.c1)OR(rt1.c1)))OR(t0.c0)) AS TEXT)) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM t0, rt1 WHERE ((NOT (CAST(((((rt1.c1)OR(rt1.c1)))OR(t0.c0)) AS TEXT)))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM t0, rt1 WHERE (((CAST(((((rt1.c1)OR(rt1.c1)))OR(t0.c0)) AS TEXT)) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING AVG(((rt1.c0) IS TRUE)) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (AVG(((rt1.c0) IS TRUE)))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((AVG(((rt1.c0) IS TRUE))) ISNULL);
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING AVG(((rt1.c0) IS TRUE)) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (AVG(((rt1.c0) IS TRUE)))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((AVG(((rt1.c0) IS TRUE))) ISNULL);
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE ('1258270851') UNION ALL SELECT * FROM rt1 WHERE ((NOT ('1258270851'))) UNION ALL SELECT ALL * FROM rt1 WHERE ((('1258270851') ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT t0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, t0;
SELECT DISTINCT t0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, t0 WHERE (((((((t0.c0) NOTNULL))AND(((((rt1.c0)AND(rt1.c2)))OR(t0.c0)))))OR(((rt1.c1)IS NOT(rt1.c1))))) UNION SELECT DISTINCT t0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, t0 WHERE ((NOT (((((((t0.c0) NOTNULL))AND(((((rt1.c0)AND(rt1.c2)))OR(t0.c0)))))OR(((rt1.c1)IS NOT(rt1.c1))))))) UNION SELECT DISTINCT t0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, t0 WHERE (((((((((t0.c0) NOTNULL))AND(((((rt1.c0)AND(rt1.c2)))OR(t0.c0)))))OR(((rt1.c1)IS NOT(rt1.c1))))) ISNULL));
SELECT DISTINCT t0.c0, rt1.c0, rt1.c2, rt1.c1 FROM rt1, t0;
SELECT ALL rt1.c1, rt1.c0, rt1.c2, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, t0.c0;
SELECT ALL rt1.c1, rt1.c0, rt1.c2, t0.c0 FROM t0, rt1 WHERE (((ABS(rt1.c2)) BETWEEN (((t0.c0)AND(rt1.c2))) AND (rt1.c1 COLLATE BINARY))) GROUP BY rt1.c1, rt1.c0, rt1.c2, t0.c0 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c2, t0.c0 FROM t0, rt1 WHERE ((NOT (((ABS(rt1.c2)) BETWEEN (((t0.c0)AND(rt1.c2))) AND (rt1.c1 COLLATE BINARY))))) GROUP BY rt1.c1, rt1.c0, rt1.c2, t0.c0 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c2, t0.c0 FROM t0, rt1 WHERE (((((ABS(rt1.c2)) BETWEEN (((t0.c0)AND(rt1.c2))) AND (rt1.c1 COLLATE BINARY))) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c2, t0.c0;
SELECT ALL rt1.c1, rt1.c0, rt1.c2, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2, t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM rt1, t0 NOT INDEXED;
SELECT * FROM rt1, t0 WHERE (((((rt1.c2) BETWEEN (t0.c0) AND (rt1.c1)))IS(((((rt1.c0)AND(rt1.c2)))AND(rt1.c0))))) UNION ALL SELECT ALL * FROM rt1, t0 WHERE ((NOT (((((rt1.c2) BETWEEN (t0.c0) AND (rt1.c1)))IS(((((rt1.c0)AND(rt1.c2)))AND(rt1.c0))))))) UNION ALL SELECT ALL * FROM rt1, t0 WHERE (((((((rt1.c2) BETWEEN (t0.c0) AND (rt1.c1)))IS(((((rt1.c0)AND(rt1.c2)))AND(rt1.c0))))) ISNULL));
SELECT ALL * FROM rt1, t0 NOT INDEXED;
SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON (((('') IS TRUE)) NOT NULL);
SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON (((('') IS TRUE)) NOT NULL) WHERE (((t0.c0) BETWEEN (CASE rt1.c0  WHEN t0.c0 THEN rt1.c1 WHEN 0.5896654690896682 THEN rt1.c2 WHEN rt1.c0 THEN t0.c0 END) AND (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) UNION SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON (((('') IS TRUE)) NOT NULL) WHERE ((NOT (((t0.c0) BETWEEN (CASE rt1.c0  WHEN t0.c0 THEN rt1.c1 WHEN 0.5896654690896682 THEN rt1.c2 WHEN rt1.c0 THEN t0.c0 END) AND (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0))))))) UNION SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON (((('') IS TRUE)) NOT NULL) WHERE (((((t0.c0) BETWEEN (CASE rt1.c0  WHEN t0.c0 THEN rt1.c1 WHEN 0.5896654690896682 THEN rt1.c2 WHEN rt1.c0 THEN t0.c0 END) AND (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1 INNER JOIN t0 ON (((('') IS TRUE)) NOT NULL);
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ('-760974442' COLLATE RTRIM) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT ('-760974442' COLLATE RTRIM))) GROUP BY rt1.c1, rt1.c2, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((('-760974442' COLLATE RTRIM) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(SUM(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(SUM(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(SUM(t0.c0))) ISNULL);
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1, t0;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1, t0 WHERE ((((rt1.c0, t0.c0, rt1.c0)) NOT BETWEEN ((rt1.c0, (- (rt1.c2)), CAST(rt1.c2 AS NUMERIC))) AND ((((rt1.c2)%(rt1.c1)), rt1.c1, ((t0.c0)=(rt1.c1)))))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1, t0 WHERE ((NOT ((((rt1.c0, t0.c0, rt1.c0)) NOT BETWEEN ((rt1.c0, (- (rt1.c2)), CAST(rt1.c2 AS NUMERIC))) AND ((((rt1.c2)%(rt1.c1)), rt1.c1, ((t0.c0)==(rt1.c1)))))))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1, t0 WHERE ((((((rt1.c0, t0.c0, rt1.c0)) NOT BETWEEN ((rt1.c0, (- (rt1.c2)), CAST(rt1.c2 AS NUMERIC))) AND ((((rt1.c2)%(rt1.c1)), rt1.c1, ((t0.c0)=(rt1.c1)))))) ISNULL));
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1, t0;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (((CAST(rt1.c2 AS INTEGER)) NOTNULL)) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (((CAST(rt1.c2 AS INTEGER)) NOTNULL)))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((((CAST(rt1.c2 AS INTEGER)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CASE WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN t0.c0 COLLATE RTRIM END) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN t0.c0 COLLATE RTRIM END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CASE WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN t0.c0 COLLATE RTRIM END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1;
SELECT ALL t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1 HAVING 'sx' UNION ALL SELECT ALL t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1 HAVING (NOT ('sx')) UNION ALL SELECT ALL t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1 HAVING (('sx') ISNULL);
SELECT t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1;
SELECT ALL t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1 HAVING 'sx' UNION ALL SELECT ALL t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1 HAVING (NOT ('sx')) UNION ALL SELECT ALL t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1 HAVING (('sx') ISNULL);
SELECT t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1;
SELECT rt1.c1 FROM t0, rt1;
SELECT rt1.c1 FROM t0, rt1 WHERE (((((((((((t0.c0)AND(rt1.c2)))OR((((t0.c0)) BETWEEN (('0.2089023717177182')) AND ((rt1.c0))))))OR((rt1.c2 IN (rt1.c0, rt1.c1)))))AND((~ (rt1.c0)))))AND(((rt1.c1)>>(rt1.c2))))) UNION ALL SELECT rt1.c1 FROM t0, rt1 WHERE ((NOT (((((((((((t0.c0)AND(rt1.c2)))OR((((t0.c0)) BETWEEN (('0.2089023717177182')) AND ((rt1.c0))))))OR((rt1.c2 IN (rt1.c0, rt1.c1)))))AND((~ (rt1.c0)))))AND(((rt1.c1)>>(rt1.c2))))))) UNION ALL SELECT ALL rt1.c1 FROM t0, rt1 WHERE (((((((((((((t0.c0)AND(rt1.c2)))OR((((t0.c0)) BETWEEN (('0.2089023717177182')) AND ((rt1.c0))))))OR((rt1.c2 IN (rt1.c0, rt1.c1)))))AND((~ (rt1.c0)))))AND(((rt1.c1)>>(rt1.c2))))) ISNULL));
SELECT rt1.c1 FROM t0, rt1;
SELECT DISTINCT rt1.c2 FROM t0, rt1;
SELECT DISTINCT rt1.c2 FROM t0, rt1 WHERE ((NOT (((t0.c0) IS FALSE)))) UNION SELECT DISTINCT rt1.c2 FROM t0, rt1 WHERE ((NOT ((NOT (((t0.c0) IS FALSE)))))) UNION SELECT DISTINCT rt1.c2 FROM t0, rt1 WHERE ((((NOT (((t0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT rt1.c2 FROM t0, rt1;
SELECT t0.c0 FROM t0, rt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, rt1 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, rt1 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, rt1 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, rt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((t0.c0)>>(COUNT(*))) IN ()) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((t0.c0)>>(COUNT(*))) IN ()))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((t0.c0)>>(COUNT(*))) IN ())) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((t0.c0)>>(COUNT(*))) IN ()) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((t0.c0)>>(COUNT(*))) IN ()))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((t0.c0)>>(COUNT(*))) IN ())) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (NULL) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((NULL) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (ABS((((rt1.c1, rt1.c2, NULL))<=((rt1.c1, rt1.c1, NULL))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (ABS((((rt1.c1, rt1.c2, NULL))<=((rt1.c1, rt1.c1, NULL))))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((ABS((((rt1.c1, rt1.c2, NULL))<=((rt1.c1, rt1.c1, NULL))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL t0.c0 FROM t0, rt1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, rt1 WHERE (CASE WHEN ((rt1.c0)<(rt1.c0)) THEN '' END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, rt1 WHERE ((NOT (CASE WHEN ((rt1.c0)<(rt1.c0)) THEN '' END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, rt1 WHERE (((CASE WHEN ((rt1.c0)<(rt1.c0)) THEN '' END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, rt1 GROUP BY t0.c0;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING COUNT(SUM(rt1.c2)) UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (COUNT(SUM(rt1.c2)))) UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((COUNT(SUM(rt1.c2))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((('') NOT BETWEEN (((t0.c0)AND(t0.c0))) AND (((t0.c0)&(NULL))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((('') NOT BETWEEN (((t0.c0)AND(t0.c0))) AND (((t0.c0)&(NULL))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((('') NOT BETWEEN (((t0.c0)AND(t0.c0))) AND (((t0.c0)&(NULL))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0) IS TRUE)) NOT NULL)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) IS TRUE)) NOT NULL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0) IS TRUE)) NOT NULL)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (CAST(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS INTEGER)) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS INTEGER)))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((CAST(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS INTEGER)) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN x'' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.963644791651774 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)<<(CAST(t0.c0 AS REAL)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((CASE WHEN x'' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.963644791651774 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)<<(CAST(t0.c0 AS REAL)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((CASE WHEN x'' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.963644791651774 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)<<(CAST(t0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt1.c1 FROM rt1 CROSS JOIN t0 ON ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)) COLLATE BINARY GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 CROSS JOIN t0 ON ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)) COLLATE BINARY WHERE (CASE CAST(rt1.c2 AS BLOB)  WHEN CASE WHEN rt1.c2 THEN rt1.c1 END THEN CAST(t0.c0 AS NUMERIC) END) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 CROSS JOIN t0 ON ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)) COLLATE BINARY WHERE ((NOT (CASE CAST(rt1.c2 AS BLOB)  WHEN CASE WHEN rt1.c2 THEN rt1.c1 END THEN CAST(t0.c0 AS NUMERIC) END))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 CROSS JOIN t0 ON ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)) COLLATE BINARY WHERE (((CASE CAST(rt1.c2 AS BLOB)  WHEN CASE WHEN rt1.c2 THEN rt1.c1 END THEN CAST(t0.c0 AS NUMERIC) END) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 CROSS JOIN t0 ON ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)) COLLATE BINARY GROUP BY rt1.c1;
SELECT ALL rt1.c0, t0.c0, rt1.c1 FROM rt1 CROSS JOIN t0 ON ABS(rt1.c1) GROUP BY rt1.c0, t0.c0, rt1.c1;
SELECT ALL rt1.c0, t0.c0, rt1.c1 FROM rt1 CROSS JOIN t0 ON ABS(rt1.c1) GROUP BY rt1.c0, t0.c0, rt1.c1 HAVING TOTAL(GROUP_CONCAT(rt1.c2)) UNION ALL SELECT ALL rt1.c0, t0.c0, rt1.c1 FROM rt1 CROSS JOIN t0 ON ABS(rt1.c1) GROUP BY rt1.c0, t0.c0, rt1.c1 HAVING (NOT (TOTAL(GROUP_CONCAT(rt1.c2)))) UNION ALL SELECT rt1.c0, t0.c0, rt1.c1 FROM rt1 CROSS JOIN t0 ON ABS(rt1.c1) GROUP BY rt1.c0, t0.c0, rt1.c1 HAVING ((TOTAL(GROUP_CONCAT(rt1.c2))) ISNULL);
SELECT rt1.c2, rt1.c1 FROM rt1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 WHERE ((((((rt1.c0))>((rt1.c1))))>(((rt1.c2)*(rt1.c0))))) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT ((((((rt1.c0))>((rt1.c1))))>(((rt1.c2)*(rt1.c0))))))) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1 WHERE ((((((((rt1.c0))>((rt1.c1))))>(((rt1.c2)*(rt1.c0))))) ISNULL));
SELECT rt1.c2, rt1.c1 FROM rt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)LIKE(0.23509731313169735)))IS(((t0.c0)-(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0)LIKE(0.23509731313169735)))IS(((t0.c0)-(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)LIKE(0.23509731313169735)))IS(((t0.c0)-(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0, rt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, rt1 WHERE (((x'')OR(CASE WHEN rt1.c1 THEN t0.c0 END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, rt1 WHERE ((NOT (((x'')OR(CASE WHEN rt1.c1 THEN t0.c0 END))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, rt1 WHERE (((((x'')OR(CASE WHEN rt1.c1 THEN t0.c0 END))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, rt1 GROUP BY t0.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c0 HAVING ((MAX(MIN(GROUP_CONCAT(MAX(SUM(rt1.c0)))))) IS TRUE) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (((MAX(MIN(GROUP_CONCAT(MAX(SUM(rt1.c0)))))) IS TRUE))) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c0 HAVING ((((MAX(MIN(GROUP_CONCAT(MAX(SUM(rt1.c0)))))) IS TRUE)) ISNULL);
SELECT MAX(rt1.c0) FROM rt1 ORDER BY ((CAST(rt1.c1 AS REAL)) NOT NULL), IFNULL(DISTINCT (rt1.c0 IN (rt1.c1, rt1.c0)), (- (rt1.c2)));
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c2 AS INTEGER)) NOTNULL)) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((CAST(rt1.c2 AS INTEGER)) NOTNULL)))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((CAST(rt1.c2 AS INTEGER)) NOTNULL)) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE (MIN(rt1.c1, ((rt1.c1)==(rt1.c0)), t0.c0 COLLATE RTRIM, t0.c0)) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT (MIN(rt1.c1, ((rt1.c1)=(rt1.c0)), t0.c0 COLLATE RTRIM, t0.c0)))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE (((MIN(rt1.c1, ((rt1.c1)=(rt1.c0)), t0.c0 COLLATE RTRIM, t0.c0)) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM t0, rt1 WHERE (((((rt1.c2, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c1)) AND ((rt1.c2, rt1.c1, rt1.c1))) IN ())) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM t0, rt1 WHERE ((NOT (((((rt1.c2, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c1)) AND ((rt1.c2, rt1.c1, rt1.c1))) IN ())))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM t0, rt1 WHERE (((((((rt1.c2, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c1)) AND ((rt1.c2, rt1.c1, rt1.c1))) IN ())) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(((COUNT(*)) IS TRUE)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(((COUNT(*)) IS TRUE)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(((COUNT(*)) IS TRUE))) ISNULL);
SELECT TOTAL(((((rt1.c2)AND(NULLIF(rt1.c2, rt1.c0))))OR(((rt1.c1)-(rt1.c2))))) FROM t0, rt1 ORDER BY ((((rt1.c2)OR(rt1.c1)))<>(t0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((t0.c0) IS FALSE)))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((NOT (((t0.c0) IS FALSE)))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((NOT (((t0.c0) IS FALSE)))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT rt1.c2 FROM t0, rt1;
SELECT DISTINCT rt1.c2 FROM t0, rt1 WHERE ((+ (t0.c0))) UNION SELECT DISTINCT rt1.c2 FROM t0, rt1 WHERE ((NOT ((+ (t0.c0))))) UNION SELECT DISTINCT rt1.c2 FROM t0, rt1 WHERE ((((+ (t0.c0))) ISNULL));
SELECT DISTINCT rt1.c2 FROM t0, rt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CASE (NOT (x'315a'))  WHEN (t0.c0 IN ()) THEN CAST(t0.c0 AS NUMERIC) END) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE (NOT (x'315a'))  WHEN (t0.c0 IN ()) THEN CAST(t0.c0 AS NUMERIC) END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CASE (NOT (x'315a'))  WHEN (t0.c0 IN ()) THEN CAST(t0.c0 AS NUMERIC) END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c2 FROM t0, rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM t0, rt1 GROUP BY rt1.c2 HAVING LIKELIHOOD(TOTAL(COUNT(rt1.c0)), 0.003504058144350952) UNION ALL SELECT rt1.c2 FROM t0, rt1 GROUP BY rt1.c2 HAVING (NOT (LIKELIHOOD(TOTAL(COUNT(rt1.c0)), 0.003504058144350952))) UNION ALL SELECT rt1.c2 FROM t0, rt1 GROUP BY rt1.c2 HAVING ((LIKELIHOOD(TOTAL(COUNT(rt1.c0)), 0.003504058144350952)) ISNULL);
SELECT ALL * FROM t0, rt1;
SELECT ALL * FROM t0, rt1 WHERE ((- (((rt1.c2)GLOB(rt1.c2))))) UNION ALL SELECT ALL * FROM t0, rt1 WHERE ((NOT ((- (((rt1.c2)GLOB(rt1.c2))))))) UNION ALL SELECT * FROM t0, rt1 WHERE ((((- (((rt1.c2)GLOB(rt1.c2))))) ISNULL));
SELECT ALL * FROM t0, rt1;
SELECT DISTINCT rt1.c2, rt1.c1 FROM t0, rt1;
SELECT DISTINCT rt1.c2, rt1.c1 FROM t0, rt1 WHERE (CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) AS TEXT)) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM t0, rt1 WHERE ((NOT (CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) AS TEXT)))) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM t0, rt1 WHERE (((CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) AS TEXT)) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1 FROM t0, rt1;
SELECT ALL t0.c0 FROM t0, rt1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, rt1 WHERE (((CAST(NULL AS NUMERIC))IS(((rt1.c0)IS(rt1.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, rt1 WHERE ((NOT (((CAST(NULL AS NUMERIC))IS(((rt1.c0)IS(rt1.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, rt1 WHERE (((((CAST(NULL AS NUMERIC))IS(((rt1.c0)IS(rt1.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, rt1 GROUP BY t0.c0;
SELECT rt1.c1 FROM rt1, t0 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1, t0 GROUP BY rt1.c1 HAVING (((CAST(rt1.c0 AS BLOB), CAST(COUNT(rt1.c1) AS NUMERIC), LIKELIHOOD(GROUP_CONCAT('l{s嵕}_鏲f'), 0.25137364193358336)))>=((GROUP_CONCAT(MAX(TOTAL(GROUP_CONCAT(rt1.c0)))), LIKELY(DISTINCT t0.c0), '565609447' COLLATE NOCASE))) UNION ALL SELECT rt1.c1 FROM rt1, t0 GROUP BY rt1.c1 HAVING (NOT ((((CAST(rt1.c0 AS BLOB), CAST(COUNT(rt1.c1) AS NUMERIC), LIKELIHOOD(GROUP_CONCAT('l{s嵕}_鏲f'), 0.25137364193358336)))>=((GROUP_CONCAT(MAX(TOTAL(GROUP_CONCAT(rt1.c0)))), LIKELY(DISTINCT t0.c0), '565609447' COLLATE NOCASE))))) UNION ALL SELECT ALL rt1.c1 FROM rt1, t0 GROUP BY rt1.c1 HAVING (((((CAST(rt1.c0 AS BLOB), CAST(COUNT(rt1.c1) AS NUMERIC), LIKELIHOOD(GROUP_CONCAT('l{s嵕}_鏲f'), 0.25137364193358336)))>=((GROUP_CONCAT(MAX(TOTAL(GROUP_CONCAT(rt1.c0)))), LIKELY(DISTINCT t0.c0), '565609447' COLLATE NOCASE)))) ISNULL);
SELECT ALL rt1.c0, rt1.c2 FROM rt1;
SELECT rt1.c0, rt1.c2 FROM rt1 WHERE (((x'')<=(rt1.c1)) COLLATE RTRIM) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (((x'')<=(rt1.c1)) COLLATE RTRIM))) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 WHERE (((((x'')<=(rt1.c1)) COLLATE RTRIM) ISNULL));
SELECT ALL rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((+ (CAST(t0.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((+ (CAST(t0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((+ (CAST(t0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CAST(t0.c0 AS REAL)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c0 AS REAL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS REAL)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c0;
SELECT ALL t0.c0, rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c0 HAVING MAX(rt1.c0) UNION ALL SELECT ALL t0.c0, rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c0 HAVING (NOT (MAX(rt1.c0))) UNION ALL SELECT ALL t0.c0, rt1.c2, rt1.c0 FROM t0 NOT INDEXED, rt1 GROUP BY t0.c0, rt1.c2, rt1.c0 HAVING ((MAX(rt1.c0)) ISNULL);
SELECT ALL t0.c0, rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c0;
SELECT ALL t0.c0, rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c0 HAVING MAX(rt1.c0) UNION ALL SELECT ALL t0.c0, rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c0 HAVING (NOT (MAX(rt1.c0))) UNION ALL SELECT ALL t0.c0, rt1.c2, rt1.c0 FROM t0 NOT INDEXED, rt1 GROUP BY t0.c0, rt1.c2, rt1.c0 HAVING ((MAX(rt1.c0)) ISNULL);
SELECT ALL t0.c0, rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY t0.c0, rt1.c2, rt1.c0;
SELECT ALL rt1.c1 FROM t0, rt1;
SELECT ALL rt1.c1 FROM t0, rt1 WHERE (((rt1.c1 COLLATE RTRIM) IS TRUE)) UNION ALL SELECT ALL rt1.c1 FROM t0, rt1 WHERE ((NOT (((rt1.c1 COLLATE RTRIM) IS TRUE)))) UNION ALL SELECT rt1.c1 FROM t0, rt1 WHERE (((((rt1.c1 COLLATE RTRIM) IS TRUE)) ISNULL));
SELECT ALL rt1.c1 FROM t0, rt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0 IN ()))AND(((NULL) ISNULL))))AND('.tJf,&u/' COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((((t0.c0 IN ()))AND(((NULL) ISNULL))))AND('.tJf,&u/' COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c0 IN ()))AND(((NULL) ISNULL))))AND('.tJf,&u/' COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt1.c0 FROM t0, rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM t0, rt1 WHERE (CAST(CASE rt1.c0  WHEN t0.c0 THEN rt1.c2 END AS INTEGER)) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM t0, rt1 WHERE ((NOT (CAST(CASE rt1.c0  WHEN t0.c0 THEN rt1.c2 END AS INTEGER)))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM t0, rt1 WHERE (((CAST(CASE rt1.c0  WHEN t0.c0 THEN rt1.c2 END AS INTEGER)) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM t0, rt1 GROUP BY rt1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING '' UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ('')) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (('') ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING '' UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ('')) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (('') ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((((t0.c0 IN (t0.c0))) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((t0.c0 IN (t0.c0))) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) UNION ALL SELECT ALL * FROM t0 NOT INDEXED WHERE ((((((t0.c0 IN (t0.c0))) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0, rt1.c1, rt1.c2, rt1.c0 FROM t0, rt1;
SELECT DISTINCT t0.c0, rt1.c1, rt1.c2, rt1.c0 FROM t0, rt1 WHERE ((((((t0.c0 IN ()))AND(rt1.c2 COLLATE RTRIM)))OR((((rt1.c0))>((rt1.c0)))))) UNION SELECT DISTINCT t0.c0, rt1.c1, rt1.c2, rt1.c0 FROM t0, rt1 WHERE ((NOT ((((((t0.c0 IN ()))AND(rt1.c2 COLLATE RTRIM)))OR((((rt1.c0))>((rt1.c0)))))))) UNION SELECT DISTINCT t0.c0, rt1.c1, rt1.c2, rt1.c0 FROM t0, rt1 WHERE ((((((((t0.c0 IN ()))AND(rt1.c2 COLLATE RTRIM)))OR((((rt1.c0))>((rt1.c0)))))) ISNULL));
SELECT DISTINCT t0.c0, rt1.c1, rt1.c2, rt1.c0 FROM t0, rt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR('1271008712')))OR(t0.c0)))AND(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(NULL)))AND((NOT (t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR('1271008712')))OR(t0.c0)))AND(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(NULL)))AND((NOT (t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR('1271008712')))OR(t0.c0)))AND(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(NULL)))AND((NOT (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt1.c2, t0.c0 FROM rt1 LEFT OUTER JOIN t0 ON LIKELY(DISTINCT TYPEOF(DISTINCT rt1.c1)) GROUP BY rt1.c2, t0.c0;
SELECT ALL rt1.c2, t0.c0 FROM rt1 LEFT OUTER JOIN t0 ON LIKELY(DISTINCT TYPEOF(DISTINCT rt1.c1)) GROUP BY rt1.c2, t0.c0 HAVING (((NOT (rt1.c0))) NOT NULL) UNION ALL SELECT ALL rt1.c2, t0.c0 FROM rt1 LEFT OUTER JOIN t0 ON LIKELY(DISTINCT TYPEOF(DISTINCT rt1.c1)) GROUP BY rt1.c2, t0.c0 HAVING (NOT ((((NOT (rt1.c0))) NOT NULL))) UNION ALL SELECT rt1.c2, t0.c0 FROM rt1 LEFT OUTER JOIN t0 ON LIKELY(DISTINCT TYPEOF(DISTINCT rt1.c1)) GROUP BY rt1.c2, t0.c0 HAVING (((((NOT (rt1.c0))) NOT NULL)) ISNULL);
SELECT ALL rt1.c2, t0.c0 FROM rt1 LEFT OUTER JOIN t0 ON LIKELY(DISTINCT TYPEOF(DISTINCT rt1.c1)) GROUP BY rt1.c2, t0.c0;
SELECT ALL rt1.c2, t0.c0 FROM rt1 LEFT OUTER JOIN t0 ON LIKELY(DISTINCT TYPEOF(DISTINCT rt1.c1)) GROUP BY rt1.c2, t0.c0 HAVING (((NOT (rt1.c0))) NOT NULL) UNION ALL SELECT ALL rt1.c2, t0.c0 FROM rt1 LEFT OUTER JOIN t0 ON LIKELY(DISTINCT TYPEOF(DISTINCT rt1.c1)) GROUP BY rt1.c2, t0.c0 HAVING (NOT ((((NOT (rt1.c0))) NOT NULL))) UNION ALL SELECT rt1.c2, t0.c0 FROM rt1 LEFT OUTER JOIN t0 ON LIKELY(DISTINCT TYPEOF(DISTINCT rt1.c1)) GROUP BY rt1.c2, t0.c0 HAVING (((((NOT (rt1.c0))) NOT NULL)) ISNULL);
SELECT ALL rt1.c2, t0.c0 FROM rt1 LEFT OUTER JOIN t0 ON LIKELY(DISTINCT TYPEOF(DISTINCT rt1.c1)) GROUP BY rt1.c2, t0.c0;
SELECT ALL rt1.c2 FROM rt1, t0;
SELECT rt1.c2 FROM rt1, t0 WHERE (((((((rt1.c1)AND(NULL)))OR(rt1.c1)))||((+ (rt1.c0))))) UNION ALL SELECT ALL rt1.c2 FROM rt1, t0 WHERE ((NOT (((((((rt1.c1)AND(NULL)))OR(rt1.c1)))||((+ (rt1.c0))))))) UNION ALL SELECT rt1.c2 FROM rt1, t0 WHERE (((((((((rt1.c1)AND(NULL)))OR(rt1.c1)))||((+ (rt1.c0))))) ISNULL));
SELECT ALL rt1.c2 FROM rt1, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((json_insert(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))<=((((t0.c0)GLOB(t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((json_insert(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))<=((((t0.c0)GLOB(t0.c0)))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((json_insert(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))<=((((t0.c0)GLOB(t0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt1.c1 FROM rt1 LEFT OUTER JOIN t0 ON (((((~ ('-1654645221')))OR(((rt1.c0) BETWEEN (rt1.c1) AND (t0.c0)))))AND(rt1.c1 COLLATE NOCASE)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 LEFT OUTER JOIN t0 ON (((((~ ('-1654645221')))OR(((rt1.c0) BETWEEN (rt1.c1) AND (t0.c0)))))AND(rt1.c1 COLLATE NOCASE)) WHERE ((((t0.c0, rt1.c2, rt1.c2)) BETWEEN (((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c0))), CASE WHEN '-327922655' THEN rt1.c2 END, t0.c0)) AND (((((t0.c0))>=((rt1.c0))), (((t0.c0, rt1.c0, rt1.c2))==((0.050216934807083, t0.c0, t0.c0))), CAST(t0.c0 AS INTEGER))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 LEFT OUTER JOIN t0 ON (((((~ ('-1654645221')))OR(((rt1.c0) BETWEEN (rt1.c1) AND (t0.c0)))))AND(rt1.c1 COLLATE NOCASE)) WHERE ((NOT ((((t0.c0, rt1.c2, rt1.c2)) BETWEEN (((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c0))), CASE WHEN '-327922655' THEN rt1.c2 END, t0.c0)) AND (((((t0.c0))>=((rt1.c0))), (((t0.c0, rt1.c0, rt1.c2))==((0.050216934807083, t0.c0, t0.c0))), CAST(t0.c0 AS INTEGER))))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 LEFT OUTER JOIN t0 ON (((((~ ('-1654645221')))OR(((rt1.c0) BETWEEN (rt1.c1) AND (t0.c0)))))AND(rt1.c1 COLLATE NOCASE)) WHERE ((((((t0.c0, rt1.c2, rt1.c2)) BETWEEN (((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c0))), CASE WHEN '-327922655' THEN rt1.c2 END, t0.c0)) AND (((((t0.c0))>=((rt1.c0))), (((t0.c0, rt1.c0, rt1.c2))=((0.050216934807083, t0.c0, t0.c0))), CAST(t0.c0 AS INTEGER))))) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 LEFT OUTER JOIN t0 ON (((((~ ('-1654645221')))OR(((rt1.c0) BETWEEN (rt1.c1) AND (t0.c0)))))AND(rt1.c1 COLLATE NOCASE)) GROUP BY rt1.c1;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING COUNT(CASE AVG(SUM(AVG(rt1.c1)))  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN MAX(rt1.c1) THEN rt1.c2 END) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (COUNT(CASE AVG(SUM(AVG(rt1.c1)))  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN MAX(rt1.c1) THEN rt1.c2 END))) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((COUNT(CASE AVG(SUM(AVG(rt1.c1)))  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN MAX(rt1.c1) THEN rt1.c2 END)) ISNULL);
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE (((((rt1.c0)AND(rt1.c0)))OR(0xffffffffbe90ccc5)) COLLATE RTRIM) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (((((rt1.c0)AND(rt1.c0)))OR(0Xffffffffbe90ccc5)) COLLATE RTRIM))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE (((((((rt1.c0)AND(rt1.c0)))OR(0Xffffffffbe90ccc5)) COLLATE RTRIM) ISNULL));
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((rt1.c1) IS FALSE) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((rt1.c1) IS FALSE) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c1) IS FALSE) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c2 FROM rt1, t0 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1, t0 WHERE (((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 END) NOT BETWEEN ((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))) AND (rt1.c1 COLLATE BINARY))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1, t0 WHERE ((NOT (((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 END) NOT BETWEEN ((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))) AND (rt1.c1 COLLATE BINARY))))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1, t0 WHERE (((((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 END) NOT BETWEEN ((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))) AND (rt1.c1 COLLATE BINARY))) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1, t0 GROUP BY rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING AVG(((((((((COUNT(*))OR(GROUP_CONCAT(AVG(MAX('1566929539'))))))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c1))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING (NOT (AVG(((((((((COUNT(*))OR(GROUP_CONCAT(AVG(MAX('1566929539'))))))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c1))))) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING ((AVG(((((((((COUNT(*))OR(GROUP_CONCAT(AVG(MAX('1566929539'))))))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c1)))) ISNULL);
SELECT ALL * FROM rt1, t0;
SELECT ALL * FROM rt1, t0 WHERE (x'') UNION ALL SELECT * FROM rt1, t0 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM rt1, t0 WHERE (((x'') ISNULL));
SELECT ALL * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE ((((t0.c0)IS(rt1.c1)) IN (CASE rt1.c0  WHEN t0.c0 THEN rt1.c2 ELSE '93329934' END))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT ((((t0.c0)IS(rt1.c1)) IN (CASE rt1.c0  WHEN t0.c0 THEN rt1.c2 ELSE '93329934' END))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((((((t0.c0)IS(rt1.c1)) IN (CASE rt1.c0  WHEN t0.c0 THEN rt1.c2 ELSE '93329934' END))) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((((rt1.c2) BETWEEN (COUNT(*)) AND (rt1.c2)))>(MIN(rt1.c1))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (((((rt1.c2) BETWEEN (COUNT(*)) AND (rt1.c2)))>(MIN(rt1.c1))))) UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((((((rt1.c2) BETWEEN (COUNT(*)) AND (rt1.c2)))>(MIN(rt1.c1)))) ISNULL);
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((((rt1.c2) BETWEEN (COUNT(*)) AND (rt1.c2)))>(MIN(rt1.c1))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (((((rt1.c2) BETWEEN (COUNT(*)) AND (rt1.c2)))>(MIN(rt1.c1))))) UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((((((rt1.c2) BETWEEN (COUNT(*)) AND (rt1.c2)))>(MIN(rt1.c1)))) ISNULL);
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((CAST(t0.c0 AS INTEGER)) IS TRUE)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((CAST(t0.c0 AS INTEGER)) IS TRUE)))) UNION ALL SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS INTEGER)) IS TRUE)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c0 FROM rt1 WHERE ((~ ((+ (rt1.c1))))) UNION SELECT DISTINCT rt1.c0 FROM rt1 WHERE ((NOT ((~ ((+ (rt1.c1))))))) UNION SELECT DISTINCT rt1.c0 FROM rt1 WHERE ((((~ ((+ (rt1.c1))))) ISNULL));
SELECT DISTINCT rt1.c0 FROM rt1;
SELECT t0.c0 FROM rt1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM rt1, t0 WHERE (x'') GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM rt1, t0 WHERE ((NOT (x''))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM rt1, t0 WHERE (((x'') ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM rt1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(((SUM(t0.c0)) IS TRUE)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(((SUM(t0.c0)) IS TRUE)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(((SUM(t0.c0)) IS TRUE))) ISNULL);
SELECT rt1.c2, t0.c0, rt1.c1, rt1.c0 FROM rt1 CROSS JOIN t0 ON (((t0.c0 IN ()))LIKE(CAST(t0.c0 AS TEXT)));
SELECT rt1.c2, t0.c0, rt1.c1, rt1.c0 FROM rt1 CROSS JOIN t0 ON (((t0.c0 IN ()))LIKE(CAST(t0.c0 AS TEXT))) WHERE ((t0.c0 COLLATE BINARY IN ())) UNION ALL SELECT ALL rt1.c2, t0.c0, rt1.c1, rt1.c0 FROM rt1 CROSS JOIN t0 ON (((t0.c0 IN ()))LIKE(CAST(t0.c0 AS TEXT))) WHERE ((NOT ((t0.c0 COLLATE BINARY IN ())))) UNION ALL SELECT rt1.c2, t0.c0, rt1.c1, rt1.c0 FROM rt1 CROSS JOIN t0 ON (((t0.c0 IN ()))LIKE(CAST(t0.c0 AS TEXT))) WHERE ((((t0.c0 COLLATE BINARY IN ())) ISNULL));
SELECT rt1.c2, t0.c0, rt1.c1, rt1.c0 FROM rt1 CROSS JOIN t0 ON (((t0.c0 IN ()))LIKE(CAST(t0.c0 AS TEXT)));
SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON CASE ((((rt1.c1)AND(rt1.c0)))AND(rt1.c1))  WHEN (rt1.c2 IN (rt1.c1)) THEN '-842522727' WHEN SQLITE_SOURCE_ID() THEN ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)) WHEN rt1.c1 COLLATE BINARY THEN (((t0.c0))<((t0.c0))) END;
SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON CASE ((((rt1.c1)AND(rt1.c0)))AND(rt1.c1))  WHEN (rt1.c2 IN (rt1.c1)) THEN '-842522727' WHEN SQLITE_SOURCE_ID() THEN ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)) WHEN rt1.c1 COLLATE BINARY THEN (((t0.c0))<((t0.c0))) END WHERE (((CASE WHEN 884487220 THEN '' ELSE rt1.c2 END)OR(('게ox푒-\nu' IN ('1629116454'))))) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON CASE ((((rt1.c1)AND(rt1.c0)))AND(rt1.c1))  WHEN (rt1.c2 IN (rt1.c1)) THEN '-842522727' WHEN SQLITE_SOURCE_ID() THEN ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)) WHEN rt1.c1 COLLATE BINARY THEN (((t0.c0))<((t0.c0))) END WHERE ((NOT (((CASE WHEN 884487220 THEN '' ELSE rt1.c2 END)OR(('게ox푒-\nu' IN ('1629116454'))))))) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON CASE ((((rt1.c1)AND(rt1.c0)))AND(rt1.c1))  WHEN (rt1.c2 IN (rt1.c1)) THEN '-842522727' WHEN SQLITE_SOURCE_ID() THEN ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)) WHEN rt1.c1 COLLATE BINARY THEN (((t0.c0))<((t0.c0))) END WHERE (((((CASE WHEN 884487220 THEN '' ELSE rt1.c2 END)OR(('게ox푒-\nu' IN ('1629116454'))))) ISNULL));
SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON CASE ((((rt1.c1)AND(rt1.c0)))AND(rt1.c1))  WHEN (rt1.c2 IN (rt1.c1)) THEN '-842522727' WHEN SQLITE_SOURCE_ID() THEN ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)) WHEN rt1.c1 COLLATE BINARY THEN (((t0.c0))<((t0.c0))) END;
SELECT ALL rt1.c2 FROM t0 NOT INDEXED, rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM t0, rt1 WHERE (((CAST(rt1.c1 AS TEXT))<(((rt1.c0)&(rt1.c1))))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM t0, rt1 WHERE ((NOT (((CAST(rt1.c1 AS TEXT))<(((rt1.c0)&(rt1.c1))))))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM t0, rt1 WHERE (((((CAST(rt1.c1 AS TEXT))<(((rt1.c0)&(rt1.c1))))) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM t0 NOT INDEXED, rt1 GROUP BY rt1.c2;
SELECT rt1.c0 FROM t0 FULL OUTER JOIN rt1 ON CAST(((rt1.c1)>>(rt1.c1)) AS TEXT) GROUP BY rt1.c0;
SELECT rt1.c0 FROM t0 FULL OUTER JOIN rt1 ON CAST(((rt1.c1)>>(rt1.c1)) AS TEXT) GROUP BY rt1.c0 HAVING GROUP_CONCAT(((rt1.c1) BETWEEN (MIN(COUNT(*))) AND (MIN(MAX(rt1.c2))))) UNION ALL SELECT rt1.c0 FROM t0 FULL OUTER JOIN rt1 ON CAST(((rt1.c1)>>(rt1.c1)) AS TEXT) GROUP BY rt1.c0 HAVING (NOT (GROUP_CONCAT(((rt1.c1) BETWEEN (MIN(COUNT(*))) AND (MIN(MAX(rt1.c2))))))) UNION ALL SELECT rt1.c0 FROM t0 FULL OUTER JOIN rt1 ON CAST(((rt1.c1)>>(rt1.c1)) AS TEXT) GROUP BY rt1.c0 HAVING ((GROUP_CONCAT(((rt1.c1) BETWEEN (MIN(COUNT(*))) AND (MIN(MAX(rt1.c2)))))) ISNULL);
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (((rt1.c2 COLLATE NOCASE) NOT NULL)) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((rt1.c2 COLLATE NOCASE) NOT NULL)))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((rt1.c2 COLLATE NOCASE) NOT NULL)) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c0, t0.c0 FROM rt1, t0;
SELECT DISTINCT rt1.c0, t0.c0 FROM rt1, t0 WHERE ((((rt1.c0, rt1.c1, 0.7737839120133075)) BETWEEN ((rt1.c1, CAST(rt1.c1 AS REAL), CASE WHEN rt1.c2 THEN t0.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN t0.c0 END)) AND ((IFNULL(DISTINCT t0.c0, rt1.c1), CAST(rt1.c2 AS REAL), NULL)))) UNION SELECT DISTINCT rt1.c0, t0.c0 FROM rt1, t0 WHERE ((NOT ((((rt1.c0, rt1.c1, 0.7737839120133075)) BETWEEN ((rt1.c1, CAST(rt1.c1 AS REAL), CASE WHEN rt1.c2 THEN t0.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN t0.c0 END)) AND ((IFNULL(DISTINCT t0.c0, rt1.c1), CAST(rt1.c2 AS REAL), NULL)))))) UNION SELECT DISTINCT rt1.c0, t0.c0 FROM rt1, t0 WHERE ((((((rt1.c0, rt1.c1, 0.7737839120133075)) BETWEEN ((rt1.c1, CAST(rt1.c1 AS REAL), CASE WHEN rt1.c2 THEN t0.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN t0.c0 END)) AND ((IFNULL(DISTINCT t0.c0, rt1.c1), CAST(rt1.c2 AS REAL), NULL)))) ISNULL));
SELECT DISTINCT rt1.c0, t0.c0 FROM rt1, t0;
SELECT rt1.c2 FROM rt1, t0 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1, t0 WHERE ('-1258959902') GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1, t0 WHERE ((NOT ('-1258959902'))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1, t0 WHERE ((('-1258959902') ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1, t0 GROUP BY rt1.c2;
SELECT rt1.c2, t0.c0, rt1.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0, rt1.c0;
SELECT ALL rt1.c2, t0.c0, rt1.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0, rt1.c0 HAVING ((MAX(COUNT(*))) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((COUNT(*))%(rt1.c0)))) UNION ALL SELECT ALL rt1.c2, t0.c0, rt1.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0, rt1.c0 HAVING (NOT (((MAX(COUNT(*))) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((COUNT(*))%(rt1.c0)))))) UNION ALL SELECT ALL rt1.c2, t0.c0, rt1.c0 FROM rt1, t0 GROUP BY rt1.c2, t0.c0, rt1.c0 HAVING ((((MAX(COUNT(*))) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((COUNT(*))%(rt1.c0))))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0 IN (t0.c0))) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND ('恖j*aW鯈8'))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0 IN (t0.c0))) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND ('恖j*aW鯈8'))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0 IN (t0.c0))) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND ('恖j*aW鯈8'))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND (('')))) NOT NULL)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0)) BETWEEN ((t0.c0)) AND (('')))) NOT NULL)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((((t0.c0)) BETWEEN ((t0.c0)) AND (('')))) NOT NULL)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT rt1.c1, rt1.c0, t0.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c1, rt1.c0, t0.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, t0.c0, rt1.c2 FROM t0, rt1 WHERE (CHANGES()) GROUP BY rt1.c1, rt1.c0, t0.c0, rt1.c2 UNION SELECT rt1.c1, rt1.c0, t0.c0, rt1.c2 FROM t0, rt1 WHERE ((NOT (CHANGES()))) GROUP BY rt1.c1, rt1.c0, t0.c0, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c0, t0.c0, rt1.c2 FROM t0, rt1 WHERE (((CHANGES()) ISNULL)) GROUP BY rt1.c1, rt1.c0, t0.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, t0.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c1, rt1.c0, t0.c0, rt1.c2;
SELECT ALL t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c2;
SELECT t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c2 HAVING ((NULL)LIKE(rt1.c1)) COLLATE NOCASE UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c2 HAVING (NOT (((NULL)LIKE(rt1.c1)) COLLATE NOCASE)) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c2 HAVING ((((NULL)LIKE(rt1.c1)) COLLATE NOCASE) ISNULL);
SELECT ALL t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c2;
SELECT t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c2 HAVING ((NULL)LIKE(rt1.c1)) COLLATE NOCASE UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c2 HAVING (NOT (((NULL)LIKE(rt1.c1)) COLLATE NOCASE)) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c2 HAVING ((((NULL)LIKE(rt1.c1)) COLLATE NOCASE) ISNULL);
SELECT ALL t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c2;
SELECT rt1.c1 FROM rt1 FULL OUTER JOIN t0 ON rt1.c1;
SELECT rt1.c1 FROM rt1 FULL OUTER JOIN t0 ON rt1.c1 WHERE (rt1.c2) UNION ALL SELECT rt1.c1 FROM rt1 FULL OUTER JOIN t0 ON rt1.c1 WHERE ((NOT (rt1.c2))) UNION ALL SELECT rt1.c1 FROM rt1 FULL OUTER JOIN t0 ON rt1.c1 WHERE (((rt1.c2) ISNULL));
SELECT rt1.c1 FROM rt1 FULL OUTER JOIN t0 ON rt1.c1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)))&(((rt1.c0)+(rt1.c0))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)))&(((rt1.c0)+(rt1.c0))))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)))&(((rt1.c0)+(rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((((t0.c0)OR(t0.c0)))AND(t0.c0)), (- (t0.c0)), ((0.2797860382257763) BETWEEN (t0.c0) AND (t0.c0)))) AND (((NOT (t0.c0)), CAST(t0.c0 AS REAL), CAST(t0.c0 AS TEXT))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((((t0.c0)OR(t0.c0)))AND(t0.c0)), (- (t0.c0)), ((0.2797860382257763) BETWEEN (t0.c0) AND (t0.c0)))) AND (((NOT (t0.c0)), CAST(t0.c0 AS REAL), CAST(t0.c0 AS TEXT))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((((t0.c0)OR(t0.c0)))AND(t0.c0)), (- (t0.c0)), ((0.2797860382257763) BETWEEN (t0.c0) AND (t0.c0)))) AND (((NOT (t0.c0)), CAST(t0.c0 AS REAL), CAST(t0.c0 AS TEXT))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c1, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2 HAVING TOTAL(((((((((TOTAL(MAX(GROUP_CONCAT(COUNT('')))))AND(786789005)))AND(rt1.c2)))OR(MIN(rt1.c1))))AND(rt1.c1))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2 HAVING (NOT (TOTAL(((((((((TOTAL(MAX(GROUP_CONCAT(COUNT('')))))AND(786789005)))AND(rt1.c2)))OR(MIN(rt1.c1))))AND(rt1.c1))))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2 HAVING ((TOTAL(((((((((TOTAL(MAX(GROUP_CONCAT(COUNT('')))))AND(786789005)))AND(rt1.c2)))OR(MIN(rt1.c1))))AND(rt1.c1)))) ISNULL);
SELECT * FROM rt1, t0;
SELECT * FROM rt1, t0 WHERE ((- (rt1.c2 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt1, t0 WHERE ((NOT ((- (rt1.c2 COLLATE RTRIM))))) UNION ALL SELECT * FROM rt1, t0 WHERE ((((- (rt1.c2 COLLATE RTRIM))) ISNULL));
SELECT * FROM rt1, t0;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (x'b52c') UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (x'b52c'))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((x'b52c') ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT t0.c0, rt1.c0 FROM rt1, t0 GROUP BY t0.c0, rt1.c0;
SELECT ALL t0.c0, rt1.c0 FROM rt1, t0 WHERE ((rt1.c2 COLLATE BINARY IN ())) GROUP BY t0.c0, rt1.c0 UNION SELECT t0.c0, rt1.c0 FROM rt1, t0 WHERE ((NOT ((rt1.c2 COLLATE BINARY IN ())))) GROUP BY t0.c0, rt1.c0 UNION SELECT ALL t0.c0, rt1.c0 FROM rt1, t0 WHERE ((((rt1.c2 COLLATE BINARY IN ())) ISNULL)) GROUP BY t0.c0, rt1.c0;
SELECT t0.c0, rt1.c0 FROM rt1, t0 GROUP BY t0.c0, rt1.c0;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING ((ABS(TOTAL(rt1.c0))) BETWEEN ((+ (rt1.c1))) AND (CAST(SUM(rt1.c2) AS REAL))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING (NOT (((ABS(TOTAL(rt1.c0))) BETWEEN ((+ (rt1.c1))) AND (CAST(SUM(rt1.c2) AS REAL))))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING ((((ABS(TOTAL(rt1.c0))) BETWEEN ((+ (rt1.c1))) AND (CAST(SUM(rt1.c2) AS REAL)))) ISNULL);
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING ((ABS(TOTAL(rt1.c0))) BETWEEN ((+ (rt1.c1))) AND (CAST(SUM(rt1.c2) AS REAL))) UNION ALL SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING (NOT (((ABS(TOTAL(rt1.c0))) BETWEEN ((+ (rt1.c1))) AND (CAST(SUM(rt1.c2) AS REAL))))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2 HAVING ((((ABS(TOTAL(rt1.c0))) BETWEEN ((+ (rt1.c1))) AND (CAST(SUM(rt1.c2) AS REAL)))) ISNULL);
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL * FROM rt1, t0;
SELECT ALL * FROM rt1, t0 WHERE (CASE WHEN ((t0.c0) IS FALSE) THEN ((t0.c0) BETWEEN (rt1.c2) AND (rt1.c2)) END) UNION ALL SELECT * FROM rt1, t0 WHERE ((NOT (CASE WHEN ((t0.c0) IS FALSE) THEN ((t0.c0) BETWEEN (rt1.c2) AND (rt1.c2)) END))) UNION ALL SELECT * FROM rt1, t0 WHERE (((CASE WHEN ((t0.c0) IS FALSE) THEN ((t0.c0) BETWEEN (rt1.c2) AND (rt1.c2)) END) ISNULL));
SELECT ALL * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE (-1718472886) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT (-1718472886))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE (((-1718472886) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT rt1.c2, rt1.c1 FROM rt1 INNER JOIN t0 ON ((UPPER(DISTINCT t0.c0)) NOT BETWEEN (((((t0.c0)AND(rt1.c1)))AND(t0.c0))) AND ((~ (t0.c0)))) GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 INNER JOIN t0 ON ((UPPER(DISTINCT t0.c0)) NOT BETWEEN (((((t0.c0)AND(rt1.c1)))AND(t0.c0))) AND ((~ (t0.c0)))) WHERE ((((rt1.c1 IN ())) NOT NULL)) GROUP BY rt1.c2, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c1 FROM rt1 INNER JOIN t0 ON ((UPPER(DISTINCT t0.c0)) NOT BETWEEN (((((t0.c0)AND(rt1.c1)))AND(t0.c0))) AND ((~ (t0.c0)))) WHERE ((NOT ((((rt1.c1 IN ())) NOT NULL)))) GROUP BY rt1.c2, rt1.c1 UNION SELECT rt1.c2, rt1.c1 FROM rt1 INNER JOIN t0 ON ((UPPER(DISTINCT t0.c0)) NOT BETWEEN (((((t0.c0)AND(rt1.c1)))AND(t0.c0))) AND ((~ (t0.c0)))) WHERE ((((((rt1.c1 IN ())) NOT NULL)) ISNULL)) GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 INNER JOIN t0 ON ((UPPER(DISTINCT t0.c0)) NOT BETWEEN (((((t0.c0)AND(rt1.c1)))AND(t0.c0))) AND ((~ (t0.c0)))) GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING SUM(AVG(rt1.c1)) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (SUM(AVG(rt1.c1)))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((SUM(AVG(rt1.c1))) ISNULL);
SELECT t0.c0 FROM t0 FULL OUTER JOIN rt1 ON ((CASE WHEN rt1.c0 THEN t0.c0 END)==((~ (t0.c0))));
SELECT ALL t0.c0 FROM t0 FULL OUTER JOIN rt1 ON ((CASE WHEN rt1.c0 THEN t0.c0 END)==((~ (t0.c0)))) WHERE ((((rt1.c0)IS(t0.c0)) IN ())) UNION ALL SELECT t0.c0 FROM t0 FULL OUTER JOIN rt1 ON ((CASE WHEN rt1.c0 THEN t0.c0 END)=((~ (t0.c0)))) WHERE ((NOT ((((rt1.c0)IS(t0.c0)) IN ())))) UNION ALL SELECT ALL t0.c0 FROM t0 FULL OUTER JOIN rt1 ON ((CASE WHEN rt1.c0 THEN t0.c0 END)==((~ (t0.c0)))) WHERE ((((((rt1.c0)IS(t0.c0)) IN ())) ISNULL));
SELECT t0.c0 FROM t0 FULL OUTER JOIN rt1 ON ((CASE WHEN rt1.c0 THEN t0.c0 END)==((~ (t0.c0))));
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE (x'') UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((NULL)GLOB(t0.c0)))>>(TRIM(DISTINCT t0.c0, t0.c0)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((NULL)GLOB(t0.c0)))>>(TRIM(DISTINCT t0.c0, t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((NULL)GLOB(t0.c0)))>>(TRIM(DISTINCT t0.c0, t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((t0.c0) NOT NULL)) BETWEEN (TOTAL(MAX(t0.c0))) AND (((((((((t0.c0)AND(0.2614629704969217)))OR(AVG(MAX(COUNT(*))))))AND(MIN(AVG(GROUP_CONCAT(t0.c0))))))OR(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((t0.c0) NOT NULL)) BETWEEN (TOTAL(MAX(t0.c0))) AND (((((((((t0.c0)AND(0.2614629704969217)))OR(AVG(MAX(COUNT(*))))))AND(MIN(AVG(GROUP_CONCAT(t0.c0))))))OR(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((t0.c0) NOT NULL)) BETWEEN (TOTAL(MAX(t0.c0))) AND (((((((((t0.c0)AND(0.2614629704969217)))OR(AVG(MAX(COUNT(*))))))AND(MIN(AVG(GROUP_CONCAT(t0.c0))))))OR(t0.c0))))) ISNULL);
SELECT * FROM rt1, t0;
SELECT * FROM rt1, t0 WHERE (((t0.c0) NOT BETWEEN (((t0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))) AND (CAST(t0.c0 AS INTEGER)))) UNION ALL SELECT ALL * FROM rt1, t0 WHERE ((NOT (((t0.c0) NOT BETWEEN (((t0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))) AND (CAST(t0.c0 AS INTEGER)))))) UNION ALL SELECT * FROM rt1, t0 WHERE (((((t0.c0) NOT BETWEEN (((t0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))) AND (CAST(t0.c0 AS INTEGER)))) ISNULL));
SELECT * FROM rt1, t0;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (((((rt1.c0)>>(rt1.c1))) IS TRUE)) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (((((rt1.c0)>>(rt1.c1))) IS TRUE)))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((((((rt1.c0)>>(rt1.c1))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE (COALESCE((rt1.c1 IN ()), rt1.c1)) GROUP BY rt1.c2, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (COALESCE((rt1.c1 IN ()), rt1.c1)))) GROUP BY rt1.c2, rt1.c0 UNION SELECT rt1.c2, rt1.c0 FROM rt1 WHERE (((COALESCE((rt1.c1 IN ()), rt1.c1)) ISNULL)) GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((rt1.c1 COLLATE BINARY)|(SUM(rt1.c1))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (((rt1.c1 COLLATE BINARY)|(SUM(rt1.c1))))) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((((rt1.c1 COLLATE BINARY)|(SUM(rt1.c1)))) ISNULL);
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((rt1.c1 COLLATE BINARY)|(SUM(rt1.c1))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (((rt1.c1 COLLATE BINARY)|(SUM(rt1.c1))))) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((((rt1.c1 COLLATE BINARY)|(SUM(rt1.c1)))) ISNULL);
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c0, t0.c0 FROM rt1, t0;
SELECT ALL rt1.c0, t0.c0 FROM rt1, t0 WHERE (((((rt1.c1)LIKE(rt1.c2)))*(((rt1.c0)+(t0.c0))))) UNION ALL SELECT rt1.c0, t0.c0 FROM rt1, t0 WHERE ((NOT (((((rt1.c1)LIKE(rt1.c2)))*(((rt1.c0)+(t0.c0))))))) UNION ALL SELECT rt1.c0, t0.c0 FROM rt1, t0 WHERE (((((((rt1.c1)LIKE(rt1.c2)))*(((rt1.c0)+(t0.c0))))) ISNULL));
SELECT rt1.c0, t0.c0 FROM rt1, t0;
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1, t0;
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1, t0 WHERE (((CAST(rt1.c0 AS INTEGER)) BETWEEN (CAST(rt1.c2 AS NUMERIC)) AND (((rt1.c0)+(rt1.c2))))) UNION SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1, t0 WHERE ((NOT (((CAST(rt1.c0 AS INTEGER)) BETWEEN (CAST(rt1.c2 AS NUMERIC)) AND (((rt1.c0)+(rt1.c2))))))) UNION SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1, t0 WHERE (((((CAST(rt1.c0 AS INTEGER)) BETWEEN (CAST(rt1.c2 AS NUMERIC)) AND (((rt1.c0)+(rt1.c2))))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM rt1 NOT INDEXED, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM rt1, t0 GROUP BY t0.c0 HAVING ((((COUNT(t0.c0))OR(GROUP_CONCAT(t0.c0))))OR(GROUP_CONCAT(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM rt1, t0 GROUP BY t0.c0 HAVING (NOT (((((COUNT(t0.c0))OR(GROUP_CONCAT(t0.c0))))OR(GROUP_CONCAT(t0.c0))))) UNION ALL SELECT t0.c0 FROM rt1, t0 GROUP BY t0.c0 HAVING ((((((COUNT(t0.c0))OR(GROUP_CONCAT(t0.c0))))OR(GROUP_CONCAT(t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM rt1 NOT INDEXED, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM rt1, t0 GROUP BY t0.c0 HAVING ((((COUNT(t0.c0))OR(GROUP_CONCAT(t0.c0))))OR(GROUP_CONCAT(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM rt1, t0 GROUP BY t0.c0 HAVING (NOT (((((COUNT(t0.c0))OR(GROUP_CONCAT(t0.c0))))OR(GROUP_CONCAT(t0.c0))))) UNION ALL SELECT t0.c0 FROM rt1, t0 GROUP BY t0.c0 HAVING ((((((COUNT(t0.c0))OR(GROUP_CONCAT(t0.c0))))OR(GROUP_CONCAT(t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM rt1 NOT INDEXED, t0 GROUP BY t0.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 NOT INDEXED WHERE ((((rt1.c0)) NOT BETWEEN ((((rt1.c0)-(rt1.c2)))) AND ((rt1.c0)))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT ((((rt1.c0)) NOT BETWEEN ((((rt1.c0)-(rt1.c2)))) AND ((rt1.c0)))))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE ((((((rt1.c0)) NOT BETWEEN ((((rt1.c0)-(rt1.c2)))) AND ((rt1.c0)))) ISNULL));
SELECT ALL rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c1 IN ()))AND(SUBSTR(rt1.c0, rt1.c0))))AND(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((((rt1.c1 IN ()))AND(SUBSTR(rt1.c0, rt1.c0))))AND(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((((rt1.c1 IN ()))AND(SUBSTR(rt1.c0, rt1.c0))))AND(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 WHERE ((+ (rt1.c1 COLLATE NOCASE))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT ((+ (rt1.c1 COLLATE NOCASE))))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE ((((+ (rt1.c1 COLLATE NOCASE))) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c0 FROM rt1, t0 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, t0 GROUP BY rt1.c0 HAVING MIN(MIN(rt1.c0)) UNION ALL SELECT ALL rt1.c0 FROM rt1, t0 GROUP BY rt1.c0 HAVING (NOT (MIN(MIN(rt1.c0)))) UNION ALL SELECT rt1.c0 FROM rt1, t0 GROUP BY rt1.c0 HAVING ((MIN(MIN(rt1.c0))) ISNULL);
SELECT ALL SUM(((((rt1.c2) BETWEEN ('-1133847627') AND (rt1.c2)))<=(json_array_length(-9.76558406E8, rt1.c1)))) FROM rt1, t0;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((((t0.c0 COLLATE NOCASE)OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(NULL))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((t0.c0 COLLATE NOCASE)OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(NULL))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((t0.c0 COLLATE NOCASE)OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(NULL))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c2 FROM rt1 WHERE (UPPER(rt1.c1) COLLATE BINARY) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE ((NOT (UPPER(rt1.c1) COLLATE BINARY))) UNION SELECT DISTINCT rt1.c2 FROM rt1 WHERE (((UPPER(rt1.c1) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt1.c2 FROM rt1;
SELECT t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1;
SELECT ALL t0.c0, rt1.c1 FROM t0, rt1 WHERE (((((((((((t0.c0)||(t0.c0)))AND(TRIM(rt1.c0, rt1.c2))))OR((t0.c0 IN (rt1.c0)))))OR(CAST(rt1.c0 AS REAL))))OR(((rt1.c2) NOT NULL)))) GROUP BY t0.c0, rt1.c1 UNION SELECT t0.c0, rt1.c1 FROM t0, rt1 WHERE ((NOT (((((((((((t0.c0)||(t0.c0)))AND(TRIM(rt1.c0, rt1.c2))))OR((t0.c0 IN (rt1.c0)))))OR(CAST(rt1.c0 AS REAL))))OR(((rt1.c2) NOT NULL)))))) GROUP BY t0.c0, rt1.c1 UNION SELECT t0.c0, rt1.c1 FROM t0, rt1 WHERE (((((((((((((t0.c0)||(t0.c0)))AND(TRIM(rt1.c0, rt1.c2))))OR((t0.c0 IN (rt1.c0)))))OR(CAST(rt1.c0 AS REAL))))OR(((rt1.c2) NOT NULL)))) ISNULL)) GROUP BY t0.c0, rt1.c1;
SELECT t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((MAX(rt1.c0)) NOT BETWEEN (rt1.c1) AND (AVG(rt1.c2))) UNION ALL SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT (((MAX(rt1.c0)) NOT BETWEEN (rt1.c1) AND (AVG(rt1.c2))))) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((((MAX(rt1.c0)) NOT BETWEEN (rt1.c1) AND (AVG(rt1.c2)))) ISNULL);
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((MAX(rt1.c0)) NOT BETWEEN (rt1.c1) AND (AVG(rt1.c2))) UNION ALL SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING (NOT (((MAX(rt1.c0)) NOT BETWEEN (rt1.c1) AND (AVG(rt1.c2))))) UNION ALL SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0 HAVING ((((MAX(rt1.c0)) NOT BETWEEN (rt1.c1) AND (AVG(rt1.c2)))) ISNULL);
SELECT rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0, t0.c0, rt1.c1, rt1.c2 FROM t0 NOT INDEXED, rt1;
SELECT ALL rt1.c0, t0.c0, rt1.c1, rt1.c2 FROM t0, rt1 WHERE (t0.c0) UNION ALL SELECT ALL rt1.c0, t0.c0, rt1.c1, rt1.c2 FROM t0, rt1 WHERE ((NOT (t0.c0))) UNION ALL SELECT rt1.c0, t0.c0, rt1.c1, rt1.c2 FROM t0, rt1 WHERE (((t0.c0) ISNULL));
SELECT rt1.c0, t0.c0, rt1.c1, rt1.c2 FROM t0 NOT INDEXED, rt1;
SELECT DISTINCT rt1.c2 FROM t0, rt1;
SELECT DISTINCT rt1.c2 FROM t0, rt1 WHERE (t0.c0) UNION SELECT DISTINCT rt1.c2 FROM t0, rt1 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT rt1.c2 FROM t0, rt1 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT rt1.c2 FROM t0, rt1;
SELECT ALL rt1.c1, rt1.c2 FROM t0 LEFT OUTER JOIN rt1 ON (((((t0.c0, rt1.c1, rt1.c2))<((rt1.c0, rt1.c2, t0.c0)))) NOT NULL) GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM t0 LEFT OUTER JOIN rt1 ON (((((t0.c0, rt1.c1, rt1.c2))<((rt1.c0, rt1.c2, t0.c0)))) NOT NULL) WHERE (((((rt1.c2)AND((~ (rt1.c2)))))AND(((rt1.c1)&(rt1.c2))))) GROUP BY rt1.c1, rt1.c2 UNION SELECT rt1.c1, rt1.c2 FROM t0 LEFT OUTER JOIN rt1 ON (((((t0.c0, rt1.c1, rt1.c2))<((rt1.c0, rt1.c2, t0.c0)))) NOT NULL) WHERE ((NOT (((((rt1.c2)AND((~ (rt1.c2)))))AND(((rt1.c1)&(rt1.c2))))))) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM t0 LEFT OUTER JOIN rt1 ON (((((t0.c0, rt1.c1, rt1.c2))<((rt1.c0, rt1.c2, t0.c0)))) NOT NULL) WHERE (((((((rt1.c2)AND((~ (rt1.c2)))))AND(((rt1.c1)&(rt1.c2))))) ISNULL)) GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM t0 LEFT OUTER JOIN rt1 ON (((((t0.c0, rt1.c1, rt1.c2))<((rt1.c0, rt1.c2, t0.c0)))) NOT NULL) GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 FULL OUTER JOIN t0 ON TRIM(DISTINCT t0.c0, (+ (rt1.c0))) GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 FULL OUTER JOIN t0 ON TRIM(DISTINCT t0.c0, (+ (rt1.c0))) GROUP BY rt1.c0, rt1.c1 HAVING (((MAX(TOTAL(TOTAL(t0.c0))))) NOT BETWEEN ((COUNT(*))) AND ((COUNT(t0.c0)))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 FULL OUTER JOIN t0 ON TRIM(DISTINCT t0.c0, (+ (rt1.c0))) GROUP BY rt1.c0, rt1.c1 HAVING (NOT ((((MAX(TOTAL(TOTAL(t0.c0))))) NOT BETWEEN ((COUNT(*))) AND ((COUNT(t0.c0)))))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 FULL OUTER JOIN t0 ON TRIM(DISTINCT t0.c0, (+ (rt1.c0))) GROUP BY rt1.c0, rt1.c1 HAVING (((((MAX(TOTAL(TOTAL(t0.c0))))) NOT BETWEEN ((COUNT(*))) AND ((COUNT(t0.c0))))) ISNULL);
SELECT MAX(CASE ((((t0.c0)OR(rt1.c0)))AND(rt1.c1))  WHEN ((t0.c0)<(0.6856425775528528)) THEN TRIM(rt1.c0, rt1.c0) END) FROM t0, rt1 ORDER BY (~ ((+ (rt1.c1)))) ASC;
SELECT ALL t0.c0, rt1.c2, rt1.c1 FROM rt1 INNER JOIN t0 ON ((NULL COLLATE RTRIM)<(x'' COLLATE NOCASE));
SELECT ALL t0.c0, rt1.c2, rt1.c1 FROM rt1 NOT INDEXED INNER JOIN t0 ON ((NULL COLLATE RTRIM)<(x'' COLLATE NOCASE)) WHERE (DATE(((rt1.c2)/(0.7308307999472942)), ((t0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)), rt1.c0)) UNION ALL SELECT t0.c0, rt1.c2, rt1.c1 FROM rt1 INNER JOIN t0 ON ((NULL COLLATE RTRIM)<(x'' COLLATE NOCASE)) WHERE ((NOT (DATE(((rt1.c2)/(0.7308307999472942)), ((t0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)), rt1.c0)))) UNION ALL SELECT t0.c0, rt1.c2, rt1.c1 FROM rt1 INNER JOIN t0 ON ((NULL COLLATE RTRIM)<(x'' COLLATE NOCASE)) WHERE (((DATE(((rt1.c2)/(0.7308307999472942)), ((t0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)), rt1.c0)) ISNULL));
SELECT ALL t0.c0, rt1.c2, rt1.c1 FROM rt1 INNER JOIN t0 ON ((NULL COLLATE RTRIM)<(x'' COLLATE NOCASE));
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (rt1.c0) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (rt1.c0))) UNION SELECT DISTINCT * FROM rt1 WHERE (((rt1.c0) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ('') GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (''))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((('') ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, rt1.c0 FROM rt1, t0 GROUP BY t0.c0, rt1.c0;
SELECT ALL t0.c0, rt1.c0 FROM rt1, t0 GROUP BY t0.c0, rt1.c0 HAVING MIN(MAX(t0.c0)) UNION ALL SELECT ALL t0.c0, rt1.c0 FROM rt1, t0 GROUP BY t0.c0, rt1.c0 HAVING (NOT (MIN(MAX(t0.c0)))) UNION ALL SELECT t0.c0, rt1.c0 FROM rt1, t0 GROUP BY t0.c0, rt1.c0 HAVING ((MIN(MAX(t0.c0))) ISNULL);
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 WHERE (((((CAST(rt1.c2 AS BLOB))OR(((rt1.c1) ISNULL))))AND(CAST(rt1.c1 AS REAL)))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 WHERE ((NOT (((((CAST(rt1.c2 AS BLOB))OR(((rt1.c1) ISNULL))))AND(CAST(rt1.c1 AS REAL)))))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1 WHERE (((((((CAST(rt1.c2 AS BLOB))OR(((rt1.c1) ISNULL))))AND(CAST(rt1.c1 AS REAL)))) ISNULL));
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM t0, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 NOT INDEXED WHERE (CASE ((x'')&(rt1.c0))  WHEN TRIM('0.9025434254697372', rt1.c0) THEN ((rt1.c1) IS FALSE) END) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CASE ((x'')&(rt1.c0))  WHEN TRIM('0.9025434254697372', rt1.c0) THEN ((rt1.c1) IS FALSE) END))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CASE ((x'')&(rt1.c0))  WHEN TRIM('0.9025434254697372', rt1.c0) THEN ((rt1.c1) IS FALSE) END) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING (+ (((COUNT(*))>>(SUM(COUNT(GROUP_CONCAT(COUNT(*)))))))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING (NOT ((+ (((COUNT(*))>>(SUM(COUNT(GROUP_CONCAT(COUNT(*)))))))))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2 HAVING (((+ (((COUNT(*))>>(SUM(COUNT(GROUP_CONCAT(COUNT(*))))))))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (TRIM(DISTINCT CAST(t0.c0 AS TEXT))) UNION ALL SELECT * FROM t0 WHERE ((NOT (TRIM(DISTINCT CAST(t0.c0 AS TEXT))))) UNION ALL SELECT * FROM t0 WHERE (((TRIM(DISTINCT CAST(t0.c0 AS TEXT))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE (((((rt1.c0) NOTNULL)) ISNULL)) UNION SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (((((rt1.c0) NOTNULL)) ISNULL)))) UNION SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE (((((((rt1.c0) NOTNULL)) ISNULL)) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1;
SELECT rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM t0, rt1 WHERE (((rt1.c0)%(t0.c0)) COLLATE BINARY) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM t0, rt1 WHERE ((NOT (((rt1.c0)%(t0.c0)) COLLATE BINARY))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM t0, rt1 WHERE (((((rt1.c0)%(t0.c0)) COLLATE BINARY) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING load_extension(MIN(t0.c0), ((((AVG(t0.c0))OR(SUM(GROUP_CONCAT(t0.c0)))))AND(COUNT(*)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (load_extension(MIN(t0.c0), ((((AVG(t0.c0))OR(SUM(GROUP_CONCAT(t0.c0)))))AND(COUNT(*)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((load_extension(MIN(t0.c0), ((((AVG(t0.c0))OR(SUM(GROUP_CONCAT(t0.c0)))))AND(COUNT(*))))) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE ((((rt1.c1 IN (NULL))) ISNULL)) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((((rt1.c1 IN (NULL))) ISNULL)))) UNION ALL SELECT * FROM rt1 WHERE ((((((rt1.c1 IN (NULL))) ISNULL)) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c1 FROM rt1 WHERE (((TRIM(DISTINCT rt1.c1)) BETWEEN (rt1.c0) AND (rt1.c0 COLLATE NOCASE))) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE ((NOT (((TRIM(DISTINCT rt1.c1)) BETWEEN (rt1.c0) AND (rt1.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE (((((TRIM(DISTINCT rt1.c1)) BETWEEN (rt1.c0) AND (rt1.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c0))))) GROUP BY rt1.c1, rt1.c2 UNION SELECT rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT ((NOT (((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c0))))))) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE ((((NOT (((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c0))))) ISNULL)) GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL t0.c0, rt1.c2 FROM rt1 LEFT OUTER JOIN t0 ON (((((rt1.c1))<((rt1.c2)))) NOT NULL) GROUP BY t0.c0, rt1.c2;
SELECT ALL t0.c0, rt1.c2 FROM rt1 LEFT OUTER JOIN t0 ON (((((rt1.c1))<((rt1.c2)))) NOT NULL) GROUP BY t0.c0, rt1.c2 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT t0.c0, rt1.c2 FROM rt1 LEFT OUTER JOIN t0 ON (((((rt1.c1))<((rt1.c2)))) NOT NULL) GROUP BY t0.c0, rt1.c2 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL t0.c0, rt1.c2 FROM rt1 LEFT OUTER JOIN t0 ON (((((rt1.c1))<((rt1.c2)))) NOT NULL) GROUP BY t0.c0, rt1.c2 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT rt1.c1 FROM rt1;
SELECT ALL rt1.c1 FROM rt1 WHERE (((((0.0060267931747575165) IS TRUE)) BETWEEN ((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))) AND (rt1.c2))) UNION ALL SELECT rt1.c1 FROM rt1 WHERE ((NOT (((((0.0060267931747575165) IS TRUE)) BETWEEN ((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))) AND (rt1.c2))))) UNION ALL SELECT rt1.c1 FROM rt1 WHERE (((((((0.0060267931747575165) IS TRUE)) BETWEEN ((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))) AND (rt1.c2))) ISNULL));
SELECT rt1.c1 FROM rt1;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 NOT INDEXED WHERE (rt1.c2) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END)LIKE((t0.c0 IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((CASE WHEN t0.c0 THEN t0.c0 END)LIKE((t0.c0 IN ())))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 END)LIKE((t0.c0 IN ())))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c2;
SELECT ALL t0.c0, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c2 HAVING (COUNT(rt1.c1) IN ()) UNION ALL SELECT t0.c0, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c2 HAVING (NOT ((COUNT(rt1.c1) IN ()))) UNION ALL SELECT t0.c0, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c2 HAVING (((COUNT(rt1.c1) IN ())) ISNULL);
SELECT t0.c0, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c2;
SELECT ALL t0.c0, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c2 HAVING (COUNT(rt1.c1) IN ()) UNION ALL SELECT t0.c0, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c2 HAVING (NOT ((COUNT(rt1.c1) IN ()))) UNION ALL SELECT t0.c0, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c2 HAVING (((COUNT(rt1.c1) IN ())) ISNULL);
SELECT t0.c0, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c0, rt1.c0, rt1.c2;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (CASE (~ (t0.c0))  WHEN TRIM(DISTINCT NULL) THEN ((t0.c0)AND(t0.c0)) END) UNION ALL SELECT * FROM t0 WHERE ((NOT (CASE (~ (t0.c0))  WHEN TRIM(DISTINCT NULL) THEN ((t0.c0)AND(t0.c0)) END))) UNION ALL SELECT * FROM t0 WHERE (((CASE (~ (t0.c0))  WHEN TRIM(DISTINCT NULL) THEN ((t0.c0)AND(t0.c0)) END) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0, t0.c0 FROM t0, rt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0, t0.c0 FROM t0, rt1 WHERE (((rt1.c0 COLLATE RTRIM) NOT BETWEEN ((- (t0.c0))) AND (((t0.c0) ISNULL)))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0, t0.c0 FROM t0, rt1 WHERE ((NOT (((rt1.c0 COLLATE RTRIM) NOT BETWEEN ((- (t0.c0))) AND (((t0.c0) ISNULL)))))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0, t0.c0 FROM t0, rt1 WHERE (((((rt1.c0 COLLATE RTRIM) NOT BETWEEN ((- (t0.c0))) AND (((t0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c0, t0.c0 FROM t0, rt1;
SELECT rt1.c1, rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2, t0.c0;
SELECT rt1.c1, rt1.c2, t0.c0 FROM rt1, t0 WHERE (rt1.c2) GROUP BY rt1.c1, rt1.c2, t0.c0 UNION SELECT ALL rt1.c1, rt1.c2, t0.c0 FROM rt1, t0 WHERE ((NOT (rt1.c2))) GROUP BY rt1.c1, rt1.c2, t0.c0 UNION SELECT ALL rt1.c1, rt1.c2, t0.c0 FROM rt1, t0 WHERE (((rt1.c2) ISNULL)) GROUP BY rt1.c1, rt1.c2, t0.c0;
SELECT rt1.c1, rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2, t0.c0;
SELECT ALL rt1.c1, t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c1, t0.c0, rt1.c0, rt1.c2;
SELECT rt1.c1, t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c1, t0.c0, rt1.c0, rt1.c2 HAVING COUNT(*) UNION ALL SELECT rt1.c1, t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c1, t0.c0, rt1.c0, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c1, t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c1, t0.c0, rt1.c0, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c1, t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c1, t0.c0, rt1.c0, rt1.c2;
SELECT rt1.c1, t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c1, t0.c0, rt1.c0, rt1.c2 HAVING COUNT(*) UNION ALL SELECT rt1.c1, t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c1, t0.c0, rt1.c0, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c1, t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c1, t0.c0, rt1.c0, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c1, t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY rt1.c1, t0.c0, rt1.c0, rt1.c2;
SELECT t0.c0 FROM t0, rt1;
SELECT ALL t0.c0 FROM t0, rt1 WHERE (CASE WHEN (~ (rt1.c1)) THEN (((rt1.c1))>((-1914005))) WHEN ((rt1.c2)<=(rt1.c1)) THEN ((rt1.c1)-(0Xffffffffa2ab3671)) WHEN rt1.c0 COLLATE BINARY THEN (rt1.c0 IN (0xffffffff99aa3dc2)) END) UNION ALL SELECT t0.c0 FROM t0, rt1 WHERE ((NOT (CASE WHEN (~ (rt1.c1)) THEN (((rt1.c1))>((-1914005))) WHEN ((rt1.c2)<=(rt1.c1)) THEN ((rt1.c1)-(0Xffffffffa2ab3671)) WHEN rt1.c0 COLLATE BINARY THEN (rt1.c0 IN (0xffffffff99aa3dc2)) END))) UNION ALL SELECT t0.c0 FROM t0, rt1 WHERE (((CASE WHEN (~ (rt1.c1)) THEN (((rt1.c1))>((-1914005))) WHEN ((rt1.c2)<=(rt1.c1)) THEN ((rt1.c1)-(0xffffffffa2ab3671)) WHEN rt1.c0 COLLATE BINARY THEN (rt1.c0 IN (0Xffffffff99aa3dc2)) END) ISNULL));
SELECT t0.c0 FROM t0, rt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)AND(t0.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (x'') AND (t0.c0))) AND (t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0)AND(t0.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (x'') AND (t0.c0))) AND (t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)AND(t0.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (x'') AND (t0.c0))) AND (t0.c0))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 WHERE ((((rt1.c0 IN ()))>=(((rt1.c0) NOT NULL)))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE ((NOT ((((rt1.c0 IN ()))>=(((rt1.c0) NOT NULL)))))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE ((((((rt1.c0 IN ()))>=(((rt1.c0) NOT NULL)))) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM t0 RIGHT OUTER JOIN rt1 ON ((((rt1.c0) ISNULL)) NOT BETWEEN (((rt1.c0)AND(''))) AND (((rt1.c1)LIKE(rt1.c1)))) GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM t0 RIGHT OUTER JOIN rt1 ON ((((rt1.c0) ISNULL)) NOT BETWEEN (((rt1.c0)AND(''))) AND (((rt1.c1)LIKE(rt1.c1)))) GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1 HAVING TOTAL(rt1.c2) UNION ALL SELECT ALL rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM t0 RIGHT OUTER JOIN rt1 ON ((((rt1.c0) ISNULL)) NOT BETWEEN (((rt1.c0)AND(''))) AND (((rt1.c1)LIKE(rt1.c1)))) GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1 HAVING (NOT (TOTAL(rt1.c2))) UNION ALL SELECT ALL rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM t0 RIGHT OUTER JOIN rt1 ON ((((rt1.c0) ISNULL)) NOT BETWEEN (((rt1.c0)AND(''))) AND (((rt1.c1)LIKE(rt1.c1)))) GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1 HAVING ((TOTAL(rt1.c2)) ISNULL);
SELECT rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM t0 RIGHT OUTER JOIN rt1 ON ((((rt1.c0) ISNULL)) NOT BETWEEN (((rt1.c0)AND(''))) AND (((rt1.c1)LIKE(rt1.c1)))) GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM t0 RIGHT OUTER JOIN rt1 ON ((((rt1.c0) ISNULL)) NOT BETWEEN (((rt1.c0)AND(''))) AND (((rt1.c1)LIKE(rt1.c1)))) GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1 HAVING TOTAL(rt1.c2) UNION ALL SELECT ALL rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM t0 RIGHT OUTER JOIN rt1 ON ((((rt1.c0) ISNULL)) NOT BETWEEN (((rt1.c0)AND(''))) AND (((rt1.c1)LIKE(rt1.c1)))) GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1 HAVING (NOT (TOTAL(rt1.c2))) UNION ALL SELECT ALL rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM t0 RIGHT OUTER JOIN rt1 ON ((((rt1.c0) ISNULL)) NOT BETWEEN (((rt1.c0)AND(''))) AND (((rt1.c1)LIKE(rt1.c1)))) GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1 HAVING ((TOTAL(rt1.c2)) ISNULL);
SELECT rt1.c2, t0.c0, rt1.c0, rt1.c1 FROM t0 RIGHT OUTER JOIN rt1 ON ((((rt1.c0) ISNULL)) NOT BETWEEN (((rt1.c0)AND(''))) AND (((rt1.c1)LIKE(rt1.c1)))) GROUP BY rt1.c2, t0.c0, rt1.c0, rt1.c1;
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE ((~ (((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)))OR(rt1.c1)))OR(rt1.c0))))) ORDER BY ((((rt1.c2) IS TRUE)) NOT BETWEEN ((NOT (rt1.c1))) AND (rt1.c0));
SELECT * FROM rt1 WHERE ((NOT ((~ (((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)))OR(rt1.c1)))OR(rt1.c0))))))) ORDER BY ((((rt1.c2) IS TRUE)) NOT BETWEEN ((NOT (rt1.c1))) AND (rt1.c0));
SELECT * FROM rt1 WHERE ((((~ (((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)))OR(rt1.c1)))OR(rt1.c0))))) ISNULL)) ORDER BY ((((rt1.c2) IS TRUE)) NOT BETWEEN ((NOT (rt1.c1))) AND (rt1.c0));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1 WHERE (((((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 END)OR(CAST(rt1.c1 AS BLOB))))AND(((((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c2))))) UNION SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (((((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 END)OR(CAST(rt1.c1 AS BLOB))))AND(((((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c2))))))) UNION SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1 WHERE (((((((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 END)OR(CAST(rt1.c1 AS BLOB))))AND(((((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c2))))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2 FROM rt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((t0.c0) IS TRUE) COLLATE BINARY) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((t0.c0) IS TRUE) COLLATE BINARY))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0) IS TRUE) COLLATE BINARY) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(SUM(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(SUM(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(SUM(t0.c0))) ISNULL);
SELECT rt1.c2, rt1.c0 FROM rt1, t0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1, t0 WHERE ((((- (rt1.c0)))IS NOT(((rt1.c0)||(rt1.c1))))) UNION ALL SELECT rt1.c2, rt1.c0 FROM rt1, t0 WHERE ((NOT ((((- (rt1.c0)))IS NOT(((rt1.c0)||(rt1.c1))))))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM rt1, t0 WHERE ((((((- (rt1.c0)))IS NOT(((rt1.c0)||(rt1.c1))))) ISNULL));
SELECT rt1.c2, rt1.c0 FROM rt1, t0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (rt1.c1) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT * FROM rt1 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM t0 INNER JOIN rt1 ON (((rt1.c0)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN rt1.c0 ELSE t0.c0 END)) AND ((((NULL) BETWEEN (t0.c0) AND (rt1.c2))))) GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM t0 NOT INDEXED INNER JOIN rt1 ON (((rt1.c0)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN rt1.c0 ELSE t0.c0 END)) AND ((((NULL) BETWEEN (t0.c0) AND (rt1.c2))))) WHERE (CAST(((rt1.c0)IS(t0.c0)) AS BLOB)) GROUP BY rt1.c2, rt1.c0, rt1.c1 UNION SELECT rt1.c2, rt1.c0, rt1.c1 FROM t0 INNER JOIN rt1 ON (((rt1.c0)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN rt1.c0 ELSE t0.c0 END)) AND ((((NULL) BETWEEN (t0.c0) AND (rt1.c2))))) WHERE ((NOT (CAST(((rt1.c0)IS(t0.c0)) AS BLOB)))) GROUP BY rt1.c2, rt1.c0, rt1.c1 UNION SELECT rt1.c2, rt1.c0, rt1.c1 FROM t0 INNER JOIN rt1 ON (((rt1.c0)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN rt1.c0 ELSE t0.c0 END)) AND ((((NULL) BETWEEN (t0.c0) AND (rt1.c2))))) WHERE (((CAST(((rt1.c0)IS(t0.c0)) AS BLOB)) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM t0 INNER JOIN rt1 ON (((rt1.c0)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN rt1.c0 ELSE t0.c0 END)) AND ((((NULL) BETWEEN (t0.c0) AND (rt1.c2))))) GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING SUM(COUNT(*)) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL rt1.c2, t0.c0 FROM t0, rt1;
SELECT ALL rt1.c2, t0.c0 FROM t0, rt1 WHERE (CASE WHEN ((rt1.c2) ISNULL) THEN (NOT ('>')) ELSE NULL END) UNION ALL SELECT ALL rt1.c2, t0.c0 FROM t0, rt1 WHERE ((NOT (CASE WHEN ((rt1.c2) ISNULL) THEN (NOT ('>')) ELSE NULL END))) UNION ALL SELECT ALL rt1.c2, t0.c0 FROM t0, rt1 WHERE (((CASE WHEN ((rt1.c2) ISNULL) THEN (NOT ('>')) ELSE NULL END) ISNULL));
SELECT ALL rt1.c2, t0.c0 FROM t0, rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c2, rt1.c2, rt1.c1)) NOT BETWEEN (((+ (rt1.c0)), rt1.c0 COLLATE BINARY, rt1.c1)) AND ((((((rt1.c1)AND(rt1.c0)))AND(rt1.c0)), (rt1.c2 IN ()), CAST(rt1.c1 AS INTEGER))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((rt1.c2, rt1.c2, rt1.c1)) NOT BETWEEN (((+ (rt1.c0)), rt1.c0 COLLATE BINARY, rt1.c1)) AND ((((((rt1.c1)AND(rt1.c0)))AND(rt1.c0)), (rt1.c2 IN ()), CAST(rt1.c1 AS INTEGER))))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c2, rt1.c2, rt1.c1)) NOT BETWEEN (((+ (rt1.c0)), rt1.c0 COLLATE BINARY, rt1.c1)) AND ((((((rt1.c1)AND(rt1.c0)))AND(rt1.c0)), (rt1.c2 IN ()), CAST(rt1.c1 AS INTEGER))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c1, rt1.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1, t0 WHERE ((NOT (HEX(0.5909659912550203)))) GROUP BY rt1.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c0 FROM rt1, t0 WHERE ((NOT ((NOT (HEX(0.5909659912550203)))))) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1, t0 WHERE ((((NOT (HEX(0.5909659912550203)))) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING COUNT(CAST(TOTAL(rt1.c1) AS TEXT)) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (COUNT(CAST(TOTAL(rt1.c1) AS TEXT)))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((COUNT(CAST(TOTAL(rt1.c1) AS TEXT))) ISNULL);
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 WHERE ('596776411') UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 WHERE ((NOT ('596776411'))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 WHERE ((('596776411') ISNULL));
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((NULL) NOTNULL)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((NULL) NOTNULL)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((NULL) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0)AND(NULL)))AND(t0.c0)) COLLATE BINARY) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)AND(NULL)))AND(t0.c0)) COLLATE BINARY))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((t0.c0)AND(NULL)))AND(t0.c0)) COLLATE BINARY) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0;
SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((COUNT(rt1.c2)) BETWEEN (((((MAX(rt1.c2))AND(TOTAL(SUM(AVG(rt1.c0))))))AND(MIN(rt1.c0)))) AND (MAX(rt1.c1))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING (NOT (((COUNT(rt1.c2)) BETWEEN (((((MAX(rt1.c2))AND(TOTAL(SUM(AVG(rt1.c0))))))AND(MIN(rt1.c0)))) AND (MAX(rt1.c1))))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0 HAVING ((((COUNT(rt1.c2)) BETWEEN (((((MAX(rt1.c2))AND(TOTAL(SUM(AVG(rt1.c0))))))AND(MIN(rt1.c0)))) AND (MAX(rt1.c1)))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))*((NOT (t0.c0))))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))*((NOT (t0.c0))))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))*((NOT (t0.c0))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ('0.23509731313169735' COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ('0.23509731313169735' COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt1 WHERE ((('0.23509731313169735' COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END)IS NOT((~ (rt1.c1))))) GROUP BY rt1.c2, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END)IS NOT((~ (rt1.c1))))))) GROUP BY rt1.c2, rt1.c0, rt1.c1 UNION SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END)IS NOT((~ (rt1.c1))))) ISNULL)) GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2 HAVING TOTAL(GROUP_CONCAT(rt1.c0)) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2 HAVING (NOT (TOTAL(GROUP_CONCAT(rt1.c0)))) UNION ALL SELECT ALL rt1.c1, rt1.c2 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2 HAVING ((TOTAL(GROUP_CONCAT(rt1.c0))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((CAST(t0.c0 AS REAL)) BETWEEN ((((t0.c0))==((t0.c0)))) AND (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE '-1177352131' END))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((CAST(t0.c0 AS REAL)) BETWEEN ((((t0.c0))==((t0.c0)))) AND (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE '-1177352131' END))))) UNION ALL SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS REAL)) BETWEEN ((((t0.c0))=((t0.c0)))) AND (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE '-1177352131' END))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((NOT (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((NOT (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt1.c1, t0.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, t0.c0, rt1.c2;
SELECT ALL rt1.c1, t0.c0, rt1.c2 FROM rt1, t0 WHERE ((((t0.c0) NOT BETWEEN (t0.c0) AND (rt1.c1)) IN ())) GROUP BY rt1.c1, t0.c0, rt1.c2 UNION SELECT rt1.c1, t0.c0, rt1.c2 FROM rt1, t0 WHERE ((NOT ((((t0.c0) NOT BETWEEN (t0.c0) AND (rt1.c1)) IN ())))) GROUP BY rt1.c1, t0.c0, rt1.c2 UNION SELECT ALL rt1.c1, t0.c0, rt1.c2 FROM rt1, t0 WHERE ((((((t0.c0) NOT BETWEEN (t0.c0) AND (rt1.c1)) IN ())) ISNULL)) GROUP BY rt1.c1, t0.c0, rt1.c2;
SELECT ALL rt1.c1, t0.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, t0.c0, rt1.c2;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING COUNT(*) UNION ALL SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING COUNT(*) UNION ALL SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL t0.c0, rt1.c0 FROM rt1, t0;
SELECT ALL t0.c0, rt1.c0 FROM rt1, t0 WHERE (SQLITE_VERSION()) UNION ALL SELECT t0.c0, rt1.c0 FROM rt1, t0 WHERE ((NOT (SQLITE_VERSION()))) UNION ALL SELECT t0.c0, rt1.c0 FROM rt1, t0 WHERE (((SQLITE_VERSION()) ISNULL));
SELECT ALL t0.c0, rt1.c0 FROM rt1, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS REAL)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS REAL)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING rt1.c2 UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (rt1.c2)) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((rt1.c2) ISNULL);
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING rt1.c2 UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING (NOT (rt1.c2)) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2 HAVING ((rt1.c2) ISNULL);
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE (rt1.c1) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (NULL) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (NULL))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((NULL) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(GROUP_CONCAT(TOTAL(MIN(COUNT(t0.c0))))) COLLATE BINARY UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(GROUP_CONCAT(TOTAL(MIN(COUNT(t0.c0))))) COLLATE BINARY)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(GROUP_CONCAT(TOTAL(MIN(COUNT(t0.c0))))) COLLATE BINARY) ISNULL);
SELECT ALL * FROM t0 NOT INDEXED;
SELECT ALL * FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR((t0.c0 IN (t0.c0)))))AND(t0.c0))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR((t0.c0 IN (t0.c0)))))AND(t0.c0))))) UNION ALL SELECT * FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR((t0.c0 IN (t0.c0)))))AND(t0.c0))) ISNULL));
SELECT ALL * FROM t0 NOT INDEXED;
SELECT DISTINCT t0.c0, rt1.c1 FROM rt1, t0;
SELECT DISTINCT t0.c0, rt1.c1 FROM rt1, t0 WHERE ((UNLIKELY(rt1.c0) IN ())) UNION SELECT DISTINCT t0.c0, rt1.c1 FROM rt1, t0 WHERE ((NOT ((UNLIKELY(rt1.c0) IN ())))) UNION SELECT DISTINCT t0.c0, rt1.c1 FROM rt1, t0 WHERE ((((UNLIKELY(rt1.c0) IN ())) ISNULL));
SELECT DISTINCT t0.c0, rt1.c1 FROM rt1, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0 IN ()) IN ())) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((t0.c0 IN ()) IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0 IN ()) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0 HAVING AVG(MAX(COUNT(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(MAX(COUNT(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(MAX(COUNT(t0.c0)))) ISNULL);
SELECT * FROM rt1, t0;
SELECT * FROM rt1, t0 WHERE (((((rt1.c1)!=(rt1.c1))) IS FALSE)) UNION ALL SELECT * FROM rt1, t0 WHERE ((NOT (((((rt1.c1)!=(rt1.c1))) IS FALSE)))) UNION ALL SELECT ALL * FROM rt1, t0 WHERE (((((((rt1.c1)<>(rt1.c1))) IS FALSE)) ISNULL));
SELECT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c0 IN ())) IS FALSE)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((rt1.c0 IN ())) IS FALSE)))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c0 IN ())) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((- ((t0.c0 IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((- ((t0.c0 IN ())))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((- ((t0.c0 IN ())))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((t0.c0)OR(t0.c0)))AND(MIN('-525316985'))))AND(t0.c0 COLLATE BINARY)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((((t0.c0)OR(t0.c0)))AND(MIN('-525316985'))))AND(t0.c0 COLLATE BINARY)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((((t0.c0)OR(t0.c0)))AND(MIN('-525316985'))))AND(t0.c0 COLLATE BINARY))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((t0.c0)OR(t0.c0)))AND(MIN('-525316985'))))AND(t0.c0 COLLATE BINARY)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((((t0.c0)OR(t0.c0)))AND(MIN('-525316985'))))AND(t0.c0 COLLATE BINARY)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((((t0.c0)OR(t0.c0)))AND(MIN('-525316985'))))AND(t0.c0 COLLATE BINARY))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((((rt1.c2 IN ())) NOT NULL)) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT ((((rt1.c2 IN ())) NOT NULL)))) UNION ALL SELECT ALL * FROM rt1 WHERE ((((((rt1.c2 IN ())) NOT NULL)) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 WHERE ((((0.23509731313169735, x'bcce', rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c1)) AND ((rt1.c1, rt1.c1, rt1.c0))) COLLATE NOCASE) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE ((NOT ((((0.23509731313169735, x'bcce', rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c1)) AND ((rt1.c1, rt1.c1, rt1.c0))) COLLATE NOCASE))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE ((((((0.23509731313169735, x'bcce', rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c1)) AND ((rt1.c1, rt1.c1, rt1.c0))) COLLATE NOCASE) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING AVG(((((((((COUNT(*))AND(rt1.c0)))OR(rt1.c1)))OR(AVG(SUM(rt1.c1)))))AND(0.3375278836928105))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (AVG(((((((((COUNT(*))AND(rt1.c0)))OR(rt1.c1)))OR(AVG(SUM(rt1.c1)))))AND(0.3375278836928105))))) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((AVG(((((((((COUNT(*))AND(rt1.c0)))OR(rt1.c1)))OR(AVG(SUM(rt1.c1)))))AND(0.3375278836928105)))) ISNULL);
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((((- (rt1.c1))) NOT BETWEEN (((rt1.c0) ISNULL)) AND (rt1.c0 COLLATE BINARY))) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((((- (rt1.c1))) NOT BETWEEN (((rt1.c0) ISNULL)) AND (rt1.c0 COLLATE BINARY))))) UNION ALL SELECT * FROM rt1 WHERE ((((((- (rt1.c1))) NOT BETWEEN (((rt1.c0) ISNULL)) AND (rt1.c0 COLLATE BINARY))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE ((((('w4ym*fs9') NOT BETWEEN (t0.c0) AND (rt1.c2)))IS NOT(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT ((((('w4ym*fs9') NOT BETWEEN (t0.c0) AND (rt1.c2)))IS NOT(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((((((('w4ym*fs9') NOT BETWEEN (t0.c0) AND (rt1.c2)))IS NOT(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((~ (((t0.c0)||(t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 NOT INDEXED WHERE ((NOT ((~ (((t0.c0)||(t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((~ (((t0.c0)||(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(SUM(t0.c0) AS REAL) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(SUM(t0.c0) AS REAL))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(SUM(t0.c0) AS REAL)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(SUM(t0.c0) AS REAL) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(SUM(t0.c0) AS REAL))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(SUM(t0.c0) AS REAL)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM t0, rt1;
SELECT ALL * FROM t0, rt1 WHERE (((((rt1.c0)|('i')))>(((rt1.c2)%(rt1.c2))))) UNION ALL SELECT * FROM t0, rt1 WHERE ((NOT (((((rt1.c0)|('i')))>(((rt1.c2)%(rt1.c2))))))) UNION ALL SELECT * FROM t0, rt1 WHERE (((((((rt1.c0)|('i')))>(((rt1.c2)%(rt1.c2))))) ISNULL));
SELECT ALL * FROM t0, rt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((((0.3042722056687125)OR(t0.c0)))OR(t0.c0)))IS NOT(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((((0.3042722056687125)OR(t0.c0)))OR(t0.c0)))IS NOT(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((((0.3042722056687125)OR(t0.c0)))OR(t0.c0)))IS NOT(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c2;
SELECT t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 WHERE (((0.5479420288304244) BETWEEN ((((t0.c0, rt1.c2, rt1.c1))>((t0.c0, rt1.c2, rt1.c2)))) AND (((rt1.c2) ISNULL)))) GROUP BY t0.c0, rt1.c0, rt1.c2 UNION SELECT t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 WHERE ((NOT (((0.5479420288304244) BETWEEN ((((t0.c0, rt1.c2, rt1.c1))>((t0.c0, rt1.c2, rt1.c2)))) AND (((rt1.c2) ISNULL)))))) GROUP BY t0.c0, rt1.c0, rt1.c2 UNION SELECT ALL t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 WHERE (((((0.5479420288304244) BETWEEN ((((t0.c0, rt1.c2, rt1.c1))>((t0.c0, rt1.c2, rt1.c2)))) AND (((rt1.c2) ISNULL)))) ISNULL)) GROUP BY t0.c0, rt1.c0, rt1.c2;
SELECT t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c2;
SELECT rt1.c0 FROM t0, rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM t0, rt1 GROUP BY rt1.c0 HAVING (MAX(rt1.c2) IN (((((((((AVG(rt1.c2))OR(SUM(GROUP_CONCAT(t0.c0)))))OR(COUNT(GROUP_CONCAT(SUM(MAX(rt1.c2)))))))AND(rt1.c2)))AND(MAX(t0.c0))), SUM(rt1.c0))) UNION ALL SELECT rt1.c0 FROM t0, rt1 GROUP BY rt1.c0 HAVING (NOT ((MAX(rt1.c2) IN (((((((((AVG(rt1.c2))OR(SUM(GROUP_CONCAT(t0.c0)))))OR(COUNT(GROUP_CONCAT(SUM(MAX(rt1.c2)))))))AND(rt1.c2)))AND(MAX(t0.c0))), SUM(rt1.c0))))) UNION ALL SELECT rt1.c0 FROM t0, rt1 GROUP BY rt1.c0 HAVING (((MAX(rt1.c2) IN (((((((((AVG(rt1.c2))OR(SUM(GROUP_CONCAT(t0.c0)))))OR(COUNT(GROUP_CONCAT(SUM(MAX(rt1.c2)))))))AND(rt1.c2)))AND(MAX(t0.c0))), SUM(rt1.c0)))) ISNULL);
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((~ ('-1718472886')) IN ())) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (((~ ('-1718472886')) IN ())))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((((~ ('-1718472886')) IN ())) ISNULL));
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c0 COLLATE RTRIM))>=((rt1.c0)))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((rt1.c0 COLLATE RTRIM))>=((rt1.c0)))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c0 COLLATE RTRIM))>=((rt1.c0)))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE (CASE WHEN CAST(rt1.c0 AS NUMERIC) THEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)) END) GROUP BY rt1.c2, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (CASE WHEN CAST(rt1.c0 AS NUMERIC) THEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)) END))) GROUP BY rt1.c2, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE (((CASE WHEN CAST(rt1.c0 AS NUMERIC) THEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)) END) ISNULL)) GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1 INNER JOIN t0 ON (((~ (rt1.c2)))>=(CAST(rt1.c2 AS BLOB))) GROUP BY t0.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1 INNER JOIN t0 ON (((~ (rt1.c2)))>=(CAST(rt1.c2 AS BLOB))) GROUP BY t0.c0, rt1.c2, rt1.c1, rt1.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT ALL t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1 INNER JOIN t0 ON (((~ (rt1.c2)))>=(CAST(rt1.c2 AS BLOB))) GROUP BY t0.c0, rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT t0.c0, rt1.c2, rt1.c1, rt1.c0 FROM rt1 INNER JOIN t0 ON (((~ (rt1.c2)))>=(CAST(rt1.c2 AS BLOB))) GROUP BY t0.c0, rt1.c2, rt1.c1, rt1.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT MAX((((rt1.c1, rt1.c1, rt1.c1)) NOT BETWEEN (((+ (rt1.c0)), CAST(rt1.c0 AS INTEGER), ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)))) AND ((((rt1.c0)>=(rt1.c2)), ((((rt1.c2)AND(rt1.c0)))AND(rt1.c0)), CASE WHEN rt1.c0 THEN rt1.c2 END)))) FROM rt1 ORDER BY TRIM((+ (rt1.c0)), ((rt1.c2) IS FALSE))  NULLS LAST, ((((rt1.c2) ISNULL)) NOTNULL)  NULLS LAST;
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0))) NOT BETWEEN (((t0.c0)>=(t0.c0))) AND (((t0.c0)AND(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((((t0.c0)OR(t0.c0)))AND(t0.c0))) NOT BETWEEN (((t0.c0)>=(t0.c0))) AND (((t0.c0)AND(t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))AND(t0.c0))) NOT BETWEEN (((t0.c0)>=(t0.c0))) AND (((t0.c0)AND(t0.c0))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((t0.c0))<>((((t0.c0)|(t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0))!=((((t0.c0)|(t0.c0)))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0))!=((((t0.c0)|(t0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 WHERE ((((rt1.c0, rt1.c1, rt1.c1)) NOT BETWEEN ((((rt1.c1)-(rt1.c2)), rt1.c1, (~ (rt1.c0)))) AND (((((rt1.c0, rt1.c2, rt1.c0))>((rt1.c1, rt1.c1, rt1.c2))), ((rt1.c0)OR(rt1.c0)), ((rt1.c1) NOTNULL))))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE ((NOT ((((rt1.c0, rt1.c1, rt1.c1)) NOT BETWEEN ((((rt1.c1)-(rt1.c2)), rt1.c1, (~ (rt1.c0)))) AND (((((rt1.c0, rt1.c2, rt1.c0))>((rt1.c1, rt1.c1, rt1.c2))), ((rt1.c0)OR(rt1.c0)), ((rt1.c1) NOTNULL))))))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE ((((((rt1.c0, rt1.c1, rt1.c1)) NOT BETWEEN ((((rt1.c1)-(rt1.c2)), rt1.c1, (~ (rt1.c0)))) AND (((((rt1.c0, rt1.c2, rt1.c0))>((rt1.c1, rt1.c1, rt1.c2))), ((rt1.c0)OR(rt1.c0)), ((rt1.c1) NOTNULL))))) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING SUM(MIN(rt1.c1)) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (SUM(MIN(rt1.c1)))) UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((SUM(MIN(rt1.c1))) ISNULL);
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 NOT INDEXED WHERE (((CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN 0.8397200895328412 WHEN rt1.c1 THEN rt1.c1 END) NOT NULL)) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (((CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN 0.8397200895328412 WHEN rt1.c1 THEN rt1.c1 END) NOT NULL)))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((((CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN 0.8397200895328412 WHEN rt1.c1 THEN rt1.c1 END) NOT NULL)) ISNULL));
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c0 FROM rt1 WHERE ((('1336721351' COLLATE RTRIM)<<(rt1.c0))) UNION SELECT DISTINCT rt1.c0 FROM rt1 WHERE ((NOT ((('1336721351' COLLATE RTRIM)<<(rt1.c0))))) UNION SELECT DISTINCT rt1.c0 FROM rt1 WHERE ((((('1336721351' COLLATE RTRIM)<<(rt1.c0))) ISNULL));
SELECT DISTINCT rt1.c0 FROM rt1;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2))) NOT BETWEEN (((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c0))) AND (((rt1.c0)OR('_K'))))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE ((NOT (((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2))) NOT BETWEEN (((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c0))) AND (((rt1.c0)OR('_K'))))))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE (((((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2))) NOT BETWEEN (((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c0))) AND (((rt1.c0)OR('_K'))))) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(((MAX(t0.c0))AND(t0.c0)) AS NUMERIC) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(((MAX(t0.c0))AND(t0.c0)) AS NUMERIC))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(((MAX(t0.c0))AND(t0.c0)) AS NUMERIC)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(((MAX(t0.c0))AND(t0.c0)) AS NUMERIC) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(((MAX(t0.c0))AND(t0.c0)) AS NUMERIC))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(((MAX(t0.c0))AND(t0.c0)) AS NUMERIC)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS NUMERIC)) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS NUMERIC)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((CAST(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) AS NUMERIC)) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (CAST(CAST(rt1.c2 AS BLOB) AS INTEGER)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (CAST(CAST(rt1.c2 AS BLOB) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((CAST(CAST(rt1.c2 AS BLOB) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((((((((t0.c0)OR(0.24386044141189167)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))>>((((x'c811')) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((((((((t0.c0)OR(0.24386044141189167)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))>>((((x'c811')) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((((((((t0.c0)OR(0.24386044141189167)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))>>((((x'c811')) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c1, rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, t0.c0;
SELECT rt1.c1, rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, t0.c0 HAVING SUM(CHANGES()) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, t0.c0 HAVING (NOT (SUM(CHANGES()))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, t0.c0 HAVING ((SUM(CHANGES())) ISNULL);
SELECT rt1.c1, rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, t0.c0;
SELECT rt1.c1, rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, t0.c0 HAVING SUM(CHANGES()) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, t0.c0 HAVING (NOT (SUM(CHANGES()))) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, t0.c0 HAVING ((SUM(CHANGES())) ISNULL);
SELECT rt1.c1, rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, t0.c0;
SELECT t0.c0 FROM t0 FULL OUTER JOIN rt1 ON (((rt1.c0, rt1.c0, t0.c0)) NOT BETWEEN (((((t0.c0, rt1.c1, rt1.c0))<>((rt1.c1, rt1.c0, rt1.c2))), CASE WHEN rt1.c1 THEN t0.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END, rt1.c0 COLLATE RTRIM)) AND ((rt1.c2 COLLATE RTRIM, ((t0.c0) BETWEEN (rt1.c1) AND (rt1.c0)), ((rt1.c1)/(rt1.c1)))));
SELECT ALL t0.c0 FROM t0 FULL OUTER JOIN rt1 ON (((rt1.c0, rt1.c0, t0.c0)) NOT BETWEEN (((((t0.c0, rt1.c1, rt1.c0))!=((rt1.c1, rt1.c0, rt1.c2))), CASE WHEN rt1.c1 THEN t0.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END, rt1.c0 COLLATE RTRIM)) AND ((rt1.c2 COLLATE RTRIM, ((t0.c0) BETWEEN (rt1.c1) AND (rt1.c0)), ((rt1.c1)/(rt1.c1))))) WHERE (((((t0.c0)LIKE(rt1.c1)))<<(SUBSTR(rt1.c2, t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 FULL OUTER JOIN rt1 ON (((rt1.c0, rt1.c0, t0.c0)) NOT BETWEEN (((((t0.c0, rt1.c1, rt1.c0))!=((rt1.c1, rt1.c0, rt1.c2))), CASE WHEN rt1.c1 THEN t0.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END, rt1.c0 COLLATE RTRIM)) AND ((rt1.c2 COLLATE RTRIM, ((t0.c0) BETWEEN (rt1.c1) AND (rt1.c0)), ((rt1.c1)/(rt1.c1))))) WHERE ((NOT (((((t0.c0)LIKE(rt1.c1)))<<(SUBSTR(rt1.c2, t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 FULL OUTER JOIN rt1 ON (((rt1.c0, rt1.c0, t0.c0)) NOT BETWEEN (((((t0.c0, rt1.c1, rt1.c0))<>((rt1.c1, rt1.c0, rt1.c2))), CASE WHEN rt1.c1 THEN t0.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END, rt1.c0 COLLATE RTRIM)) AND ((rt1.c2 COLLATE RTRIM, ((t0.c0) BETWEEN (rt1.c1) AND (rt1.c0)), ((rt1.c1)/(rt1.c1))))) WHERE (((((((t0.c0)LIKE(rt1.c1)))<<(SUBSTR(rt1.c2, t0.c0)))) ISNULL));
SELECT t0.c0 FROM t0 FULL OUTER JOIN rt1 ON (((rt1.c0, rt1.c0, t0.c0)) NOT BETWEEN (((((t0.c0, rt1.c1, rt1.c0))<>((rt1.c1, rt1.c0, rt1.c2))), CASE WHEN rt1.c1 THEN t0.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END, rt1.c0 COLLATE RTRIM)) AND ((rt1.c2 COLLATE RTRIM, ((t0.c0) BETWEEN (rt1.c1) AND (rt1.c0)), ((rt1.c1)/(rt1.c1)))));
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE (CASE WHEN rt1.c2 COLLATE RTRIM THEN CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END END) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (CASE WHEN rt1.c2 COLLATE RTRIM THEN CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END END))) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE (((CASE WHEN rt1.c2 COLLATE RTRIM THEN CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END END) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1;
SELECT t0.c0 FROM t0 CROSS JOIN rt1 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (0.6526852093585979))) NOT NULL) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 CROSS JOIN rt1 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (0.6526852093585979))) NOT NULL) WHERE ((((rt1.c1 IN ()))IS NOT(((rt1.c0) ISNULL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 CROSS JOIN rt1 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (0.6526852093585979))) NOT NULL) WHERE ((NOT ((((rt1.c1 IN ()))IS NOT(((rt1.c0) ISNULL)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 CROSS JOIN rt1 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (0.6526852093585979))) NOT NULL) WHERE ((((((rt1.c1 IN ()))IS NOT(((rt1.c0) ISNULL)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 CROSS JOIN rt1 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (0.6526852093585979))) NOT NULL) GROUP BY t0.c0;
SELECT rt1.c1, t0.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, t0.c0, rt1.c2;
SELECT ALL rt1.c1, t0.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, t0.c0, rt1.c2 HAVING (NOT (SUM(0xffffffffcc83c123))) UNION ALL SELECT rt1.c1, t0.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, t0.c0, rt1.c2 HAVING (NOT ((NOT (SUM(0Xffffffffcc83c123))))) UNION ALL SELECT rt1.c1, t0.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, t0.c0, rt1.c2 HAVING (((NOT (SUM(0Xffffffffcc83c123)))) ISNULL);
SELECT rt1.c1, t0.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, t0.c0, rt1.c2;
SELECT ALL rt1.c1, t0.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, t0.c0, rt1.c2 HAVING (NOT (SUM(0xffffffffcc83c123))) UNION ALL SELECT rt1.c1, t0.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, t0.c0, rt1.c2 HAVING (NOT ((NOT (SUM(0Xffffffffcc83c123))))) UNION ALL SELECT rt1.c1, t0.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, t0.c0, rt1.c2 HAVING (((NOT (SUM(0Xffffffffcc83c123)))) ISNULL);
SELECT rt1.c1, t0.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c1, t0.c0, rt1.c2;
SELECT * FROM rt1, t0;
SELECT ALL * FROM rt1, t0 WHERE (CASE WHEN (~ (t0.c0)) THEN rt1.c2 ELSE (rt1.c2 IN ()) END) UNION ALL SELECT ALL * FROM rt1, t0 WHERE ((NOT (CASE WHEN (~ (t0.c0)) THEN rt1.c2 ELSE (rt1.c2 IN ()) END))) UNION ALL SELECT * FROM rt1, t0 WHERE (((CASE WHEN (~ (t0.c0)) THEN rt1.c2 ELSE (rt1.c2 IN ()) END) ISNULL));
SELECT * FROM rt1, t0;
SELECT DISTINCT rt1.c0 FROM rt1, t0;
SELECT DISTINCT rt1.c0 FROM rt1, t0 WHERE (((((t0.c0) ISNULL)) BETWEEN (((((rt1.c1)OR(rt1.c0)))AND('-73298698'))) AND (((rt1.c2)OR(0xffffffffb52e1584))))) UNION SELECT DISTINCT rt1.c0 FROM rt1, t0 WHERE ((NOT (((((t0.c0) ISNULL)) BETWEEN (((((rt1.c1)OR(rt1.c0)))AND('-73298698'))) AND (((rt1.c2)OR(0xffffffffb52e1584))))))) UNION SELECT DISTINCT rt1.c0 FROM rt1, t0 WHERE (((((((t0.c0) ISNULL)) BETWEEN (((((rt1.c1)OR(rt1.c0)))AND('-73298698'))) AND (((rt1.c2)OR(0Xffffffffb52e1584))))) ISNULL));
SELECT DISTINCT rt1.c0 FROM rt1, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0 IN ()))||((t0.c0 IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0 IN ()))||((t0.c0 IN ())))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((t0.c0 IN ()))||((t0.c0 IN ())))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1;
SELECT ALL t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1 HAVING COUNT(rt1.c2) UNION ALL SELECT ALL t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1 HAVING (NOT (COUNT(rt1.c2))) UNION ALL SELECT ALL t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1 HAVING ((COUNT(rt1.c2)) ISNULL);
SELECT t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1;
SELECT ALL t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1 HAVING COUNT(rt1.c2) UNION ALL SELECT ALL t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1 HAVING (NOT (COUNT(rt1.c2))) UNION ALL SELECT ALL t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1 HAVING ((COUNT(rt1.c2)) ISNULL);
SELECT t0.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c1;
SELECT rt1.c2 FROM rt1;
SELECT rt1.c2 FROM rt1 WHERE (((((rt1.c2 IN ())))<=((rt1.c1 COLLATE BINARY)))) UNION ALL SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT (((((rt1.c2 IN ())))<=((rt1.c1 COLLATE BINARY)))))) UNION ALL SELECT ALL rt1.c2 FROM rt1 WHERE (((((((rt1.c2 IN ())))<=((rt1.c1 COLLATE BINARY)))) ISNULL));
SELECT rt1.c2 FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((+ (((rt1.c0)|(rt1.c0))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((+ (((rt1.c0)|(rt1.c0))))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((+ (((rt1.c0)|(rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE (((((rt1.c2) NOTNULL)) NOT BETWEEN (CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END) AND (CAST(rt1.c0 AS REAL)))) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (((((rt1.c2) NOTNULL)) NOT BETWEEN (CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END) AND (CAST(rt1.c0 AS REAL)))))) GROUP BY rt1.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c2 FROM rt1 WHERE (((((((rt1.c2) NOTNULL)) NOT BETWEEN (CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END) AND (CAST(rt1.c0 AS REAL)))) ISNULL)) GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(AVG(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(AVG(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(AVG(t0.c0))) ISNULL);
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM t0 RIGHT OUTER JOIN rt1 ON (~ (rt1.c2 COLLATE BINARY));
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM t0 RIGHT OUTER JOIN rt1 ON (~ (rt1.c2 COLLATE BINARY)) WHERE (rt1.c1 COLLATE BINARY) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM t0 RIGHT OUTER JOIN rt1 ON (~ (rt1.c2 COLLATE BINARY)) WHERE ((NOT (rt1.c1 COLLATE BINARY))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM t0 NOT INDEXED RIGHT OUTER JOIN rt1 ON (~ (rt1.c2 COLLATE BINARY)) WHERE (((rt1.c1 COLLATE BINARY) ISNULL));
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM t0 RIGHT OUTER JOIN rt1 ON (~ (rt1.c2 COLLATE BINARY));
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c1 FROM rt1 WHERE (((((((((CAST(rt1.c1 AS TEXT))AND(((rt1.c2)IS NOT(rt1.c2)))))AND(0.04599766099182101)))AND((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))))))OR(((rt1.c0)LIKE(x''))))) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE ((NOT (((((((((CAST(rt1.c1 AS TEXT))AND(((rt1.c2)IS NOT(rt1.c2)))))AND(0.04599766099182101)))AND((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))))))OR(((rt1.c0)LIKE(x''))))))) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE (((((((((((CAST(rt1.c1 AS TEXT))AND(((rt1.c2)IS NOT(rt1.c2)))))AND(0.04599766099182101)))AND((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))))))OR(((rt1.c0)LIKE(x''))))) ISNULL));
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT rt1.c2 FROM rt1, t0 GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1, t0 WHERE (((((rt1.c2) IS TRUE)) NOT NULL)) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1, t0 WHERE ((NOT (((((rt1.c2) IS TRUE)) NOT NULL)))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1, t0 WHERE (((((((rt1.c2) IS TRUE)) NOT NULL)) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1, t0 GROUP BY rt1.c2;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING MAX(UPPER(DISTINCT COUNT(TOTAL(rt1.c0)))) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (MAX(UPPER(DISTINCT COUNT(TOTAL(rt1.c0)))))) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((MAX(UPPER(DISTINCT COUNT(TOTAL(rt1.c0))))) ISNULL);
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((- (((rt1.c2)!=(rt1.c2))))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT ((- (((rt1.c2)<>(rt1.c2))))))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((((- (((rt1.c2)!=(rt1.c2))))) ISNULL));
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT * FROM rt1 NATURAL JOIN t0;
SELECT DISTINCT * FROM rt1 NATURAL JOIN t0 WHERE ((rt1.c2 COLLATE BINARY IN (rt1.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt1 NATURAL JOIN t0 WHERE ((NOT ((rt1.c2 COLLATE BINARY IN (rt1.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM rt1 NATURAL JOIN t0 WHERE ((((rt1.c2 COLLATE BINARY IN (rt1.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM rt1 NATURAL JOIN t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0)LIKE(t0.c0)) IN ())) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)LIKE(t0.c0)) IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((t0.c0)LIKE(t0.c0)) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING GROUP_CONCAT(SUM(AVG(rt1.c2))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT (GROUP_CONCAT(SUM(AVG(rt1.c2))))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING ((GROUP_CONCAT(SUM(AVG(rt1.c2)))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (0.03155607513411407) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (0.03155607513411407))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((0.03155607513411407) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT rt1.c1, rt1.c0, t0.c0 FROM t0 FULL OUTER JOIN rt1 ON (~ (CASE rt1.c2  WHEN rt1.c0 THEN t0.c0 END));
SELECT DISTINCT rt1.c1, rt1.c0, t0.c0 FROM t0 FULL OUTER JOIN rt1 ON (~ (CASE rt1.c2  WHEN rt1.c0 THEN t0.c0 END)) WHERE ((- (0.6467764939178257))) UNION SELECT DISTINCT rt1.c1, rt1.c0, t0.c0 FROM t0 FULL OUTER JOIN rt1 ON (~ (CASE rt1.c2  WHEN rt1.c0 THEN t0.c0 END)) WHERE ((NOT ((- (0.6467764939178257))))) UNION SELECT DISTINCT rt1.c1, rt1.c0, t0.c0 FROM t0 FULL OUTER JOIN rt1 ON (~ (CASE rt1.c2  WHEN rt1.c0 THEN t0.c0 END)) WHERE ((((- (0.6467764939178257))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, t0.c0 FROM t0 FULL OUTER JOIN rt1 ON (~ (CASE rt1.c2  WHEN rt1.c0 THEN t0.c0 END));
SELECT t0.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 GROUP BY t0.c0, rt1.c1, rt1.c2, rt1.c0;
SELECT t0.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 WHERE (t0.c0) GROUP BY t0.c0, rt1.c1, rt1.c2, rt1.c0 UNION SELECT t0.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0, rt1.c1, rt1.c2, rt1.c0 UNION SELECT t0.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0, rt1.c1, rt1.c2, rt1.c0;
SELECT t0.c0, rt1.c1, rt1.c2, rt1.c0 FROM rt1, t0 GROUP BY t0.c0, rt1.c1, rt1.c2, rt1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE ((((((rt1.c0)+(rt1.c2)), ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)), (((rt1.c0))<((rt1.c0)))))<((((rt1.c2)IS(rt1.c0)), rt1.c0, INSTR(rt1.c0, NULL))))) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((((((rt1.c0)+(rt1.c2)), ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)), (((rt1.c0))<((rt1.c0)))))<((((rt1.c2)IS(rt1.c0)), rt1.c0, INSTR(rt1.c0, NULL))))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((((((((rt1.c0)+(rt1.c2)), ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)), (((rt1.c0))<((rt1.c0)))))<((((rt1.c2)IS(rt1.c0)), rt1.c0, INSTR(rt1.c0, NULL))))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c1, t0.c0 FROM t0, rt1;
SELECT DISTINCT rt1.c1, t0.c0 FROM t0, rt1 WHERE (((((t0.c0)/(rt1.c0)))-(((rt1.c0) NOT NULL)))) UNION SELECT DISTINCT rt1.c1, t0.c0 FROM t0, rt1 WHERE ((NOT (((((t0.c0)/(rt1.c0)))-(((rt1.c0) NOT NULL)))))) UNION SELECT DISTINCT rt1.c1, t0.c0 FROM t0, rt1 WHERE (((((((t0.c0)/(rt1.c0)))-(((rt1.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT rt1.c1, t0.c0 FROM t0, rt1;
SELECT ALL t0.c0 FROM rt1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM rt1, t0 WHERE ((((rt1.c1 COLLATE BINARY))>=((NULL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM rt1, t0 WHERE ((NOT ((((rt1.c1 COLLATE BINARY))>=((NULL)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM rt1, t0 WHERE ((((((rt1.c1 COLLATE BINARY))>=((NULL)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM rt1, t0 GROUP BY t0.c0;
SELECT rt1.c2 FROM t0 RIGHT OUTER JOIN rt1 ON CASE WHEN ((0.7344485347378656) BETWEEN (rt1.c0) AND (t0.c0)) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((t0.c0))) END GROUP BY rt1.c2;
SELECT rt1.c2 FROM t0 RIGHT OUTER JOIN rt1 ON CASE WHEN ((0.7344485347378656) BETWEEN (rt1.c0) AND (t0.c0)) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((t0.c0))) END GROUP BY rt1.c2 HAVING GROUP_CONCAT(COUNT(rt1.c0)) UNION ALL SELECT rt1.c2 FROM t0 RIGHT OUTER JOIN rt1 ON CASE WHEN ((0.7344485347378656) BETWEEN (rt1.c0) AND (t0.c0)) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((t0.c0))) END GROUP BY rt1.c2 HAVING (NOT (GROUP_CONCAT(COUNT(rt1.c0)))) UNION ALL SELECT ALL rt1.c2 FROM t0 RIGHT OUTER JOIN rt1 ON CASE WHEN ((0.7344485347378656) BETWEEN (rt1.c0) AND (t0.c0)) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((t0.c0))) END GROUP BY rt1.c2 HAVING ((GROUP_CONCAT(COUNT(rt1.c0))) ISNULL);
SELECT ALL rt1.c0, t0.c0, rt1.c1 FROM t0, rt1;
SELECT rt1.c0, t0.c0, rt1.c1 FROM t0, rt1 WHERE ((- (((rt1.c0) NOT BETWEEN (rt1.c0) AND (t0.c0))))) UNION ALL SELECT rt1.c0, t0.c0, rt1.c1 FROM t0, rt1 WHERE ((NOT ((- (((rt1.c0) NOT BETWEEN (rt1.c0) AND (t0.c0))))))) UNION ALL SELECT ALL rt1.c0, t0.c0, rt1.c1 FROM t0, rt1 WHERE ((((- (((rt1.c0) NOT BETWEEN (rt1.c0) AND (t0.c0))))) ISNULL));
SELECT ALL rt1.c0, t0.c0, rt1.c1 FROM t0, rt1;
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE ((((((t0.c0, rt1.c1, rt1.c1))==((rt1.c1, t0.c0, x'')))) NOT BETWEEN ('	2') AND ((- (t0.c0))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT ((((((t0.c0, rt1.c1, rt1.c1))==((rt1.c1, t0.c0, x'')))) NOT BETWEEN ('	2') AND ((- (t0.c0))))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((((((((t0.c0, rt1.c1, rt1.c1))==((rt1.c1, t0.c0, x'')))) NOT BETWEEN ('	2') AND ((- (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1 WHERE (json_valid((((rt1.c2))>((rt1.c0))))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE ((NOT (json_valid((((rt1.c2))>((rt1.c0))))))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE (((json_valid((((rt1.c2))>((rt1.c0))))) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (((~ (SUM(rt1.c0)))) IS FALSE) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT ((((~ (SUM(rt1.c0)))) IS FALSE))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (((((~ (SUM(rt1.c0)))) IS FALSE)) ISNULL);
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (((~ (SUM(rt1.c0)))) IS FALSE) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT ((((~ (SUM(rt1.c0)))) IS FALSE))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (((((~ (SUM(rt1.c0)))) IS FALSE)) ISNULL);
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c2) ISNULL) AS NUMERIC)) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (CAST(((rt1.c2) ISNULL) AS NUMERIC)))) UNION ALL SELECT ALL * FROM rt1 WHERE (((CAST(((rt1.c2) ISNULL) AS NUMERIC)) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c1 FROM t0, rt1;
SELECT DISTINCT rt1.c0, rt1.c1 FROM t0, rt1 WHERE ((((((rt1.c2)AND(rt1.c2)))AND(rt1.c0)) IN (((rt1.c0)<=(rt1.c2))))) UNION SELECT DISTINCT rt1.c0, rt1.c1 FROM t0, rt1 WHERE ((NOT ((((((rt1.c2)AND(rt1.c2)))AND(rt1.c0)) IN (((rt1.c0)<=(rt1.c2))))))) UNION SELECT DISTINCT rt1.c0, rt1.c1 FROM t0, rt1 WHERE ((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c0)) IN (((rt1.c0)<=(rt1.c2))))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1 FROM t0, rt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST((('')==(t0.c0)) AS REAL)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST((('')=(t0.c0)) AS REAL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CAST((('')==(t0.c0)) AS REAL)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING (((rt1.c1, MAX(GROUP_CONCAT(rt1.c0)), rt1.c1)) NOT BETWEEN ((SUM(TOTAL(MIN(0.08666579234820426))), COUNT(*), (rt1.c2 IN ()))) AND (((((MIN(MIN(COUNT(COUNT(TOTAL('0.26957846405339136'))))), rt1.c2, GROUP_CONCAT(rt1.c1)))<=((rt1.c2, rt1.c0, COUNT(*)))), (TOTAL(rt1.c1) IN ()), ((TOTAL(x''))<<(MAX(rt1.c0)))))) UNION ALL SELECT rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT ((((rt1.c1, MAX(GROUP_CONCAT(rt1.c0)), rt1.c1)) NOT BETWEEN ((SUM(TOTAL(MIN(0.08666579234820426))), COUNT(*), (rt1.c2 IN ()))) AND (((((MIN(MIN(COUNT(COUNT(TOTAL('0.26957846405339136'))))), rt1.c2, GROUP_CONCAT(rt1.c1)))<=((rt1.c2, rt1.c0, COUNT(*)))), (TOTAL(rt1.c1) IN ()), ((TOTAL(x''))<<(MAX(rt1.c0)))))))) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c1 HAVING (((((rt1.c1, MAX(GROUP_CONCAT(rt1.c0)), rt1.c1)) NOT BETWEEN ((SUM(TOTAL(MIN(0.08666579234820426))), COUNT(*), (rt1.c2 IN ()))) AND (((((MIN(MIN(COUNT(COUNT(TOTAL('0.26957846405339136'))))), rt1.c2, GROUP_CONCAT(rt1.c1)))<=((rt1.c2, rt1.c0, COUNT(*)))), (TOTAL(rt1.c1) IN ()), ((TOTAL(x''))<<(MAX(rt1.c0))))))) ISNULL);
SELECT ALL MIN(NULL) FROM rt1 ORDER BY rt1.c0 COLLATE RTRIM DESC;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END) IS FALSE)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((CASE WHEN t0.c0 THEN t0.c0 END) IS FALSE)))) UNION ALL SELECT ALL * FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 END) IS FALSE)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0 CROSS JOIN rt1 ON (CASE t0.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END IN (x'b78f' COLLATE NOCASE, (((rt1.c1, rt1.c1, t0.c0, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c2, rt1.c0, 0.4735641462340765)) AND ((rt1.c1, t0.c0, 0.05033783334781483, t0.c0, NULL))), ((rt1.c0) IS FALSE)));
SELECT DISTINCT * FROM t0 CROSS JOIN rt1 ON (CASE t0.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END IN (x'b78f' COLLATE NOCASE, (((rt1.c1, rt1.c1, t0.c0, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c2, rt1.c0, 0.4735641462340765)) AND ((rt1.c1, t0.c0, 0.05033783334781483, t0.c0, NULL))), ((rt1.c0) IS FALSE))) WHERE (((rt1.c2 COLLATE BINARY)<(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN rt1 ON (CASE t0.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END IN (x'b78f' COLLATE NOCASE, (((rt1.c1, rt1.c1, t0.c0, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c2, rt1.c0, 0.4735641462340765)) AND ((rt1.c1, t0.c0, 0.05033783334781483, t0.c0, NULL))), ((rt1.c0) IS FALSE))) WHERE ((NOT (((rt1.c2 COLLATE BINARY)<(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))))))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN rt1 ON (CASE t0.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END IN (x'b78f' COLLATE NOCASE, (((rt1.c1, rt1.c1, t0.c0, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c2, rt1.c0, 0.4735641462340765)) AND ((rt1.c1, t0.c0, 0.05033783334781483, t0.c0, NULL))), ((rt1.c0) IS FALSE))) WHERE (((((rt1.c2 COLLATE BINARY)<(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))))) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN rt1 ON (CASE t0.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END IN (x'b78f' COLLATE NOCASE, (((rt1.c1, rt1.c1, t0.c0, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c2, rt1.c0, 0.4735641462340765)) AND ((rt1.c1, t0.c0, 0.05033783334781483, t0.c0, NULL))), ((rt1.c0) IS FALSE)));
SELECT ALL t0.c0, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c1;
SELECT ALL t0.c0, rt1.c1 FROM rt1, t0 WHERE (((((((NULL))<((rt1.c0)))))>((((rt1.c2)*(rt1.c0)))))) GROUP BY t0.c0, rt1.c1 UNION SELECT ALL t0.c0, rt1.c1 FROM rt1, t0 WHERE ((NOT (((((((NULL))<((rt1.c0)))))>((((rt1.c2)*(rt1.c0)))))))) GROUP BY t0.c0, rt1.c1 UNION SELECT t0.c0, rt1.c1 FROM rt1, t0 WHERE (((((((((NULL))<((rt1.c0)))))>((((rt1.c2)*(rt1.c0)))))) ISNULL)) GROUP BY t0.c0, rt1.c1;
SELECT ALL t0.c0, rt1.c1 FROM rt1, t0 GROUP BY t0.c0, rt1.c1;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING COUNT(TOTAL(MAX(x''))) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (COUNT(TOTAL(MAX(x''))))) UNION ALL SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((COUNT(TOTAL(MAX(x'')))) ISNULL);
SELECT * FROM rt1, t0;
SELECT * FROM rt1, t0 WHERE (((STRFTIME(rt1.c2, t0.c0, rt1.c0)) BETWEEN ((+ (rt1.c0))) AND ((((t0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c1)))))) UNION ALL SELECT ALL * FROM rt1, t0 WHERE ((NOT (((STRFTIME(rt1.c2, t0.c0, rt1.c0)) BETWEEN ((+ (rt1.c0))) AND ((((t0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c1)))))))) UNION ALL SELECT ALL * FROM rt1, t0 WHERE (((((STRFTIME(rt1.c2, t0.c0, rt1.c0)) BETWEEN ((+ (rt1.c0))) AND ((((t0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c1)))))) ISNULL));
SELECT * FROM rt1, t0;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE ((((((rt1.c0))<((rt1.c1)))) NOT BETWEEN (((((rt1.c2)OR(rt1.c0)))AND('991450331'))) AND ((((rt1.c1, rt1.c1, rt1.c0))>((rt1.c1, NULL, t0.c0)))))) UNION SELECT DISTINCT * FROM t0 NOT INDEXED, rt1 WHERE ((NOT ((((((rt1.c0))<((rt1.c1)))) NOT BETWEEN (((((rt1.c2)OR(rt1.c0)))AND('991450331'))) AND ((((rt1.c1, rt1.c1, rt1.c0))>((rt1.c1, NULL, t0.c0)))))))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((((((((rt1.c0))<((rt1.c1)))) NOT BETWEEN (((((rt1.c2)OR(rt1.c0)))AND('991450331'))) AND ((((rt1.c1, rt1.c1, rt1.c0))>((rt1.c1, NULL, t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT ALL rt1.c2 FROM rt1, t0 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1, t0 WHERE (CAST(NULL AS REAL)) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1, t0 WHERE ((NOT (CAST(NULL AS REAL)))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1, t0 WHERE (((CAST(NULL AS REAL)) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1, t0 GROUP BY rt1.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((MAX(COUNT(*)), ((t0.c0)<(t0.c0)), (~ (t0.c0))))<=((SUM(COUNT(*)), COUNT(*), (((TOTAL(GROUP_CONCAT(t0.c0)))) BETWEEN ((t0.c0)) AND ((t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((MAX(COUNT(*)), ((t0.c0)<(t0.c0)), (~ (t0.c0))))<=((SUM(COUNT(*)), COUNT(*), (((TOTAL(GROUP_CONCAT(t0.c0)))) BETWEEN ((t0.c0)) AND ((t0.c0)))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((MAX(COUNT(*)), ((t0.c0)<(t0.c0)), (~ (t0.c0))))<=((SUM(COUNT(*)), COUNT(*), (((TOTAL(GROUP_CONCAT(t0.c0)))) BETWEEN ((t0.c0)) AND ((t0.c0))))))) ISNULL);
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (rt1.c1) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (rt1.c1))) UNION ALL SELECT ALL * FROM rt1 WHERE (((rt1.c1) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c1 FROM rt1 WHERE (((((((rt1.c2) IS TRUE))OR(NULL)))AND((((rt1.c1))>=((rt1.c0)))))) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE ((NOT (((((((rt1.c2) IS TRUE))OR(NULL)))AND((((rt1.c1))>=((rt1.c0)))))))) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE (((((((((rt1.c2) IS TRUE))OR(NULL)))AND((((rt1.c1))>=((rt1.c0)))))) ISNULL));
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT ALL t0.c0, rt1.c0 FROM rt1, t0 GROUP BY t0.c0, rt1.c0;
SELECT t0.c0, rt1.c0 FROM rt1, t0 WHERE (LTRIM(CAST(t0.c0 AS TEXT))) GROUP BY t0.c0, rt1.c0 UNION SELECT t0.c0, rt1.c0 FROM rt1, t0 WHERE ((NOT (LTRIM(CAST(t0.c0 AS TEXT))))) GROUP BY t0.c0, rt1.c0 UNION SELECT ALL t0.c0, rt1.c0 FROM rt1, t0 WHERE (((LTRIM(CAST(t0.c0 AS TEXT))) ISNULL)) GROUP BY t0.c0, rt1.c0;
SELECT ALL t0.c0, rt1.c0 FROM rt1, t0 GROUP BY t0.c0, rt1.c0;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING TOTAL(LIKELY(SUM(COUNT(rt1.c0)))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (TOTAL(LIKELY(SUM(COUNT(rt1.c0)))))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING ((TOTAL(LIKELY(SUM(COUNT(rt1.c0))))) ISNULL);
SELECT ALL rt1.c0, t0.c0, rt1.c2 FROM t0 NOT INDEXED, rt1;
SELECT rt1.c0, t0.c0, rt1.c2 FROM t0, rt1 WHERE ((((t0.c0, t0.c0, rt1.c2)) BETWEEN ((CAST(rt1.c1 AS TEXT), CAST(rt1.c2 AS INTEGER), t0.c0)) AND (((((rt1.c2))<((rt1.c0))), ((rt1.c2) NOT BETWEEN (rt1.c1) AND (t0.c0)), (((0.4108129269424783)) BETWEEN ((rt1.c2)) AND ((rt1.c0))))))) UNION ALL SELECT rt1.c0, t0.c0, rt1.c2 FROM t0, rt1 WHERE ((NOT ((((t0.c0, t0.c0, rt1.c2)) BETWEEN ((CAST(rt1.c1 AS TEXT), CAST(rt1.c2 AS INTEGER), t0.c0)) AND (((((rt1.c2))<((rt1.c0))), ((rt1.c2) NOT BETWEEN (rt1.c1) AND (t0.c0)), (((0.4108129269424783)) BETWEEN ((rt1.c2)) AND ((rt1.c0))))))))) UNION ALL SELECT rt1.c0, t0.c0, rt1.c2 FROM t0, rt1 WHERE ((((((t0.c0, t0.c0, rt1.c2)) BETWEEN ((CAST(rt1.c1 AS TEXT), CAST(rt1.c2 AS INTEGER), t0.c0)) AND (((((rt1.c2))<((rt1.c0))), ((rt1.c2) NOT BETWEEN (rt1.c1) AND (t0.c0)), (((0.4108129269424783)) BETWEEN ((rt1.c2)) AND ((rt1.c0))))))) ISNULL));
SELECT ALL rt1.c0, t0.c0, rt1.c2 FROM t0 NOT INDEXED, rt1;
SELECT DISTINCT rt1.c0, t0.c0 FROM rt1 NATURAL JOIN t0;
SELECT DISTINCT rt1.c0, t0.c0 FROM rt1 NATURAL JOIN t0 WHERE (rt1.c2) UNION SELECT DISTINCT rt1.c0, t0.c0 FROM rt1 NATURAL JOIN t0 WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT rt1.c0, t0.c0 FROM rt1 NATURAL JOIN t0 WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT rt1.c0, t0.c0 FROM rt1 NATURAL JOIN t0;
SELECT ALL rt1.c1, t0.c0 FROM rt1 FULL OUTER JOIN t0 ON rt1.c2 GROUP BY rt1.c1, t0.c0;
SELECT rt1.c1, t0.c0 FROM rt1 FULL OUTER JOIN t0 ON rt1.c2 WHERE ((((+ (rt1.c0)))<>(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))))) GROUP BY rt1.c1, t0.c0 UNION SELECT rt1.c1, t0.c0 FROM rt1 FULL OUTER JOIN t0 ON rt1.c2 WHERE ((NOT ((((+ (rt1.c0)))!=(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))))))) GROUP BY rt1.c1, t0.c0 UNION SELECT ALL rt1.c1, t0.c0 FROM rt1 FULL OUTER JOIN t0 ON rt1.c2 WHERE ((((((+ (rt1.c0)))<>(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))))) ISNULL)) GROUP BY rt1.c1, t0.c0;
SELECT ALL rt1.c1, t0.c0 FROM rt1 FULL OUTER JOIN t0 ON rt1.c2 GROUP BY rt1.c1, t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) BETWEEN (GROUP_CONCAT(t0.c0)) AND (((((x'')AND(t0.c0)))AND(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((COUNT(*)) BETWEEN (GROUP_CONCAT(t0.c0)) AND (((((x'')AND(t0.c0)))AND(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((COUNT(*)) BETWEEN (GROUP_CONCAT(t0.c0)) AND (((((x'')AND(t0.c0)))AND(t0.c0))))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) BETWEEN (GROUP_CONCAT(t0.c0)) AND (((((x'')AND(t0.c0)))AND(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((COUNT(*)) BETWEEN (GROUP_CONCAT(t0.c0)) AND (((((x'')AND(t0.c0)))AND(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((COUNT(*)) BETWEEN (GROUP_CONCAT(t0.c0)) AND (((((x'')AND(t0.c0)))AND(t0.c0))))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE ((((NOT (rt1.c1))) NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c1 END) AND (rt1.c0))) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((((NOT (rt1.c1))) NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c1 END) AND (rt1.c0))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((((((NOT (rt1.c1))) NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c1 END) AND (rt1.c0))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE (CASE WHEN ((t0.c0) BETWEEN ('') AND (rt1.c0)) THEN rt1.c0 ELSE ((t0.c0) BETWEEN (rt1.c2) AND (rt1.c1)) END) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT (CASE WHEN ((t0.c0) BETWEEN ('') AND (rt1.c0)) THEN rt1.c0 ELSE ((t0.c0) BETWEEN (rt1.c2) AND (rt1.c1)) END))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE (((CASE WHEN ((t0.c0) BETWEEN ('') AND (rt1.c0)) THEN rt1.c0 ELSE ((t0.c0) BETWEEN (rt1.c2) AND (rt1.c1)) END) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT rt1.c1, rt1.c2, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c0;
SELECT ALL rt1.c1, rt1.c2, t0.c0 FROM t0, rt1 WHERE (CAST(CAST(rt1.c0 AS BLOB) AS BLOB)) GROUP BY rt1.c1, rt1.c2, t0.c0 UNION SELECT ALL rt1.c1, rt1.c2, t0.c0 FROM t0, rt1 WHERE ((NOT (CAST(CAST(rt1.c0 AS BLOB) AS BLOB)))) GROUP BY rt1.c1, rt1.c2, t0.c0 UNION SELECT ALL rt1.c1, rt1.c2, t0.c0 FROM t0, rt1 WHERE (((CAST(CAST(rt1.c0 AS BLOB) AS BLOB)) ISNULL)) GROUP BY rt1.c1, rt1.c2, t0.c0;
SELECT rt1.c1, rt1.c2, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG((((SUM(t0.c0)))<=((COUNT(GROUP_CONCAT('-1636648843')))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG((((SUM(t0.c0)))<=((COUNT(GROUP_CONCAT('-1636648843')))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG((((SUM(t0.c0)))<=((COUNT(GROUP_CONCAT('-1636648843'))))))) ISNULL);
SELECT * FROM rt1 INNER JOIN t0 ON (((((- ('-513633826')))AND(((((rt1.c0)AND(rt1.c2)))OR(t0.c0)))))OR((~ (NULL))));
SELECT * FROM rt1 INNER JOIN t0 ON (((((- ('-513633826')))AND(((((rt1.c0)AND(rt1.c2)))OR(t0.c0)))))OR((~ (NULL)))) WHERE (((((t0.c0) IS TRUE)) BETWEEN ((rt1.c2 IN ())) AND (CAST(rt1.c2 AS BLOB)))) UNION ALL SELECT * FROM rt1 INNER JOIN t0 ON (((((- ('-513633826')))AND(((((rt1.c0)AND(rt1.c2)))OR(t0.c0)))))OR((~ (NULL)))) WHERE ((NOT (((((t0.c0) IS TRUE)) BETWEEN ((rt1.c2 IN ())) AND (CAST(rt1.c2 AS BLOB)))))) UNION ALL SELECT * FROM rt1 INNER JOIN t0 ON (((((- ('-513633826')))AND(((((rt1.c0)AND(rt1.c2)))OR(t0.c0)))))OR((~ (NULL)))) WHERE (((((((t0.c0) IS TRUE)) BETWEEN ((rt1.c2 IN ())) AND (CAST(rt1.c2 AS BLOB)))) ISNULL));
SELECT * FROM rt1 INNER JOIN t0 ON (((((- ('-513633826')))AND(((((rt1.c0)AND(rt1.c2)))OR(t0.c0)))))OR((~ (NULL))));
SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON t0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE;
SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON t0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE WHERE (CASE WHEN CAST(rt1.c2 AS INTEGER) THEN ((((rt1.c2)AND(rt1.c2)))AND(rt1.c2)) WHEN 0.02287278435182083 THEN ((rt1.c1)%(t0.c0)) WHEN (+ (rt1.c0)) THEN ((rt1.c1)+(rt1.c2)) ELSE (rt1.c0 IN ()) END) UNION SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON t0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE WHERE ((NOT (CASE WHEN CAST(rt1.c2 AS INTEGER) THEN ((((rt1.c2)AND(rt1.c2)))AND(rt1.c2)) WHEN 0.02287278435182083 THEN ((rt1.c1)%(t0.c0)) WHEN (+ (rt1.c0)) THEN ((rt1.c1)+(rt1.c2)) ELSE (rt1.c0 IN ()) END))) UNION SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON t0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE WHERE (((CASE WHEN CAST(rt1.c2 AS INTEGER) THEN ((((rt1.c2)AND(rt1.c2)))AND(rt1.c2)) WHEN 0.02287278435182083 THEN ((rt1.c1)%(t0.c0)) WHEN (+ (rt1.c0)) THEN ((rt1.c1)+(rt1.c2)) ELSE (rt1.c0 IN ()) END) ISNULL));
SELECT DISTINCT * FROM t0 INNER JOIN rt1 ON t0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 WHERE ((((((rt1.c2, rt1.c1, rt1.c2)) NOT BETWEEN ((rt1.c1, rt1.c1, rt1.c0)) AND ((rt1.c0, rt1.c2, rt1.c0))))<(rt1.c0))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE ((NOT ((((((rt1.c2, rt1.c1, rt1.c2)) NOT BETWEEN ((rt1.c1, rt1.c1, rt1.c0)) AND ((rt1.c0, rt1.c2, rt1.c0))))<(rt1.c0))))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 WHERE ((((((((rt1.c2, rt1.c1, rt1.c2)) NOT BETWEEN ((rt1.c1, rt1.c1, rt1.c0)) AND ((rt1.c0, rt1.c2, rt1.c0))))<(rt1.c0))) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT rt1.c2 FROM t0 INNER JOIN rt1 ON ((((t0.c0 IN (rt1.c2))))<((CASE WHEN rt1.c0 THEN rt1.c2 END))) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM t0 INNER JOIN rt1 ON ((((t0.c0 IN (rt1.c2))))<((CASE WHEN rt1.c0 THEN rt1.c2 END))) GROUP BY rt1.c2 HAVING ((~ (COUNT(*))) IN ()) UNION ALL SELECT ALL rt1.c2 FROM t0 INNER JOIN rt1 ON ((((t0.c0 IN (rt1.c2))))<((CASE WHEN rt1.c0 THEN rt1.c2 END))) GROUP BY rt1.c2 HAVING (NOT (((~ (COUNT(*))) IN ()))) UNION ALL SELECT rt1.c2 FROM t0 INNER JOIN rt1 ON ((((t0.c0 IN (rt1.c2))))<((CASE WHEN rt1.c0 THEN rt1.c2 END))) GROUP BY rt1.c2 HAVING ((((~ (COUNT(*))) IN ())) ISNULL);
SELECT rt1.c2 FROM t0 INNER JOIN rt1 ON ((((t0.c0 IN (rt1.c2))))<((CASE WHEN rt1.c0 THEN rt1.c2 END))) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM t0 INNER JOIN rt1 ON ((((t0.c0 IN (rt1.c2))))<((CASE WHEN rt1.c0 THEN rt1.c2 END))) GROUP BY rt1.c2 HAVING ((~ (COUNT(*))) IN ()) UNION ALL SELECT ALL rt1.c2 FROM t0 INNER JOIN rt1 ON ((((t0.c0 IN (rt1.c2))))<((CASE WHEN rt1.c0 THEN rt1.c2 END))) GROUP BY rt1.c2 HAVING (NOT (((~ (COUNT(*))) IN ()))) UNION ALL SELECT rt1.c2 FROM t0 INNER JOIN rt1 ON ((((t0.c0 IN (rt1.c2))))<((CASE WHEN rt1.c0 THEN rt1.c2 END))) GROUP BY rt1.c2 HAVING ((((~ (COUNT(*))) IN ())) ISNULL);
SELECT rt1.c2 FROM t0 INNER JOIN rt1 ON ((((t0.c0 IN (rt1.c2))))<((CASE WHEN rt1.c0 THEN rt1.c2 END))) GROUP BY rt1.c2;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((((((t0.c0)*(t0.c0)), ((t0.c0)=(t0.c0)), (((t0.c0))<=((t0.c0)))))>((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, NULL, (((t0.c0))=((t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0)*(t0.c0)), ((t0.c0)=(t0.c0)), (((t0.c0))<=((t0.c0)))))>((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, NULL, (((t0.c0))==((t0.c0))))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((((t0.c0)*(t0.c0)), ((t0.c0)==(t0.c0)), (((t0.c0))<=((t0.c0)))))>((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, NULL, (((t0.c0))==((t0.c0))))))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((TRIM(DISTINCT rt1.c2, rt1.c0)) ISNULL)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((TRIM(DISTINCT rt1.c2, rt1.c0)) ISNULL)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((TRIM(DISTINCT rt1.c2, rt1.c0)) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 WHERE (rt1.c0) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (rt1.c0))) GROUP BY rt1.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c0 FROM rt1 WHERE (((rt1.c0) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c0 FROM rt1, t0 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1, t0 GROUP BY rt1.c0 HAVING CAST(((((GROUP_CONCAT(AVG(rt1.c0)))AND(TOTAL(rt1.c2))))OR(t0.c0)) AS INTEGER) UNION ALL SELECT rt1.c0 FROM rt1, t0 GROUP BY rt1.c0 HAVING (NOT (CAST(((((GROUP_CONCAT(AVG(rt1.c0)))AND(TOTAL(rt1.c2))))OR(t0.c0)) AS INTEGER))) UNION ALL SELECT ALL rt1.c0 FROM rt1, t0 GROUP BY rt1.c0 HAVING ((CAST(((((GROUP_CONCAT(AVG(rt1.c0)))AND(TOTAL(rt1.c2))))OR(t0.c0)) AS INTEGER)) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((+ (((t0.c0) NOTNULL)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((+ (((t0.c0) NOTNULL)))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((+ (((t0.c0) NOTNULL)))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT rt1.c2, rt1.c1 FROM t0, rt1;
SELECT DISTINCT rt1.c2, rt1.c1 FROM t0, rt1 WHERE (((((t0.c0)|(rt1.c2)))-(((rt1.c1)/(rt1.c2))))) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM t0, rt1 WHERE ((NOT (((((t0.c0)|(rt1.c2)))-(((rt1.c1)/(rt1.c2))))))) UNION SELECT DISTINCT rt1.c2, rt1.c1 FROM t0, rt1 WHERE (((((((t0.c0)|(rt1.c2)))-(((rt1.c1)/(rt1.c2))))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1 FROM t0, rt1;
SELECT ALL rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON ((((t0.c0) BETWEEN (t0.c0) AND (rt1.c1))) BETWEEN (((t0.c0)|(rt1.c2))) AND (((rt1.c0) NOTNULL))) GROUP BY rt1.c1;
SELECT rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON ((((t0.c0) BETWEEN (t0.c0) AND (rt1.c1))) BETWEEN (((t0.c0)|(rt1.c2))) AND (((rt1.c0) NOTNULL))) WHERE (rt1.c0) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON ((((t0.c0) BETWEEN (t0.c0) AND (rt1.c1))) BETWEEN (((t0.c0)|(rt1.c2))) AND (((rt1.c0) NOTNULL))) WHERE ((NOT (rt1.c0))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON ((((t0.c0) BETWEEN (t0.c0) AND (rt1.c1))) BETWEEN (((t0.c0)|(rt1.c2))) AND (((rt1.c0) NOTNULL))) WHERE (((rt1.c0) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM t0 FULL OUTER JOIN rt1 ON ((((t0.c0) BETWEEN (t0.c0) AND (rt1.c1))) BETWEEN (((t0.c0)|(rt1.c2))) AND (((rt1.c0) NOTNULL))) GROUP BY rt1.c1;
SELECT ALL rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2, rt1.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0;
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((((rt1.c0 IN ()))==(rt1.c2 COLLATE BINARY))) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((((rt1.c0 IN ()))==(rt1.c2 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((((((rt1.c0 IN ()))==(rt1.c2 COLLATE BINARY))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (IFNULL(CAST(t0.c0 AS TEXT), 0.5627660478572134)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (IFNULL(CAST(t0.c0 AS TEXT), 0.5627660478572134)))) UNION SELECT DISTINCT * FROM t0 WHERE (((IFNULL(CAST(t0.c0 AS TEXT), 0.5627660478572134)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt1.c1 FROM t0, rt1 NOT INDEXED GROUP BY rt1.c1;
SELECT rt1.c1 FROM t0, rt1 WHERE (((rt1.c2 COLLATE RTRIM) NOT NULL)) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM t0, rt1 WHERE ((NOT (((rt1.c2 COLLATE RTRIM) NOT NULL)))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM t0, rt1 WHERE (((((rt1.c2 COLLATE RTRIM) NOT NULL)) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM t0, rt1 NOT INDEXED GROUP BY rt1.c1;
SELECT ALL rt1.c0, t0.c0, rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, t0.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, t0.c0, rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, t0.c0, rt1.c2, rt1.c1 HAVING MIN(TOTAL(SUM(t0.c0))) UNION ALL SELECT ALL rt1.c0, t0.c0, rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, t0.c0, rt1.c2, rt1.c1 HAVING (NOT (MIN(TOTAL(SUM(t0.c0))))) UNION ALL SELECT rt1.c0, t0.c0, rt1.c2, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, t0.c0, rt1.c2, rt1.c1 HAVING ((MIN(TOTAL(SUM(t0.c0)))) ISNULL);
SELECT MIN(((((t0.c0) IS FALSE)) NOTNULL)) FROM t0 ORDER BY CAST(((t0.c0) NOT NULL) AS TEXT) DESC  NULLS FIRST, CASE WHEN t0.c0 THEN 0.975160949529417 WHEN -1468463163 THEN t0.c0 COLLATE BINARY WHEN CAST(t0.c0 AS INTEGER) THEN (- (t0.c0)) ELSE ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) END DESC;
SELECT ALL * FROM rt1, t0;
SELECT ALL * FROM rt1, t0 WHERE (((((((rt1.c2)AND(t0.c0)))AND(rt1.c1)))-((rt1.c1 IN (rt1.c0))))) UNION ALL SELECT ALL * FROM rt1, t0 WHERE ((NOT (((((((rt1.c2)AND(t0.c0)))AND(rt1.c1)))-((rt1.c1 IN (rt1.c0))))))) UNION ALL SELECT ALL * FROM rt1, t0 WHERE (((((((((rt1.c2)AND(t0.c0)))AND(rt1.c1)))-((rt1.c1 IN (rt1.c0))))) ISNULL));
SELECT ALL * FROM rt1, t0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (rt1.c1) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT * FROM rt1 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c1 FROM t0 RIGHT OUTER JOIN rt1 ON '-715367437' GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM t0 RIGHT OUTER JOIN rt1 ON '-715367437' WHERE (COALESCE(DISTINCT 'l{s嵕}_鏲f', UNICODE(rt1.c2))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM t0 RIGHT OUTER JOIN rt1 ON '-715367437' WHERE ((NOT (COALESCE(DISTINCT 'l{s嵕}_鏲f', UNICODE(rt1.c2))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM t0 RIGHT OUTER JOIN rt1 ON '-715367437' WHERE (((COALESCE(DISTINCT 'l{s嵕}_鏲f', UNICODE(rt1.c2))) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM t0 RIGHT OUTER JOIN rt1 ON '-715367437' GROUP BY rt1.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(MAX(GROUP_CONCAT(MAX(COUNT(MIN(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(MAX(GROUP_CONCAT(MAX(COUNT(MIN(t0.c0)))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(MAX(GROUP_CONCAT(MAX(COUNT(MIN(t0.c0))))))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ()))<>(((t0.c0)<(t0.c0))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((t0.c0 IN ()))!=(((t0.c0)<(t0.c0))))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((t0.c0 IN ()))!=(((t0.c0)<(t0.c0))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c1 FROM rt1 WHERE (UPPER(DISTINCT (- (rt1.c1)))) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE ((NOT (UPPER(DISTINCT (- (rt1.c1)))))) UNION SELECT DISTINCT rt1.c1 FROM rt1 WHERE (((UPPER(DISTINCT (- (rt1.c1)))) ISNULL));
SELECT DISTINCT rt1.c1 FROM rt1;
SELECT rt1.c1 FROM rt1, t0 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1, t0 WHERE (CASE WHEN t0.c0 THEN rt1.c0 END COLLATE NOCASE COLLATE NOCASE) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1, t0 WHERE ((NOT (CASE WHEN t0.c0 THEN rt1.c0 END COLLATE NOCASE COLLATE NOCASE))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1, t0 WHERE (((CASE WHEN t0.c0 THEN rt1.c0 END COLLATE NOCASE COLLATE NOCASE) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1, t0 GROUP BY rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING MIN(NULL) UNION ALL SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (MIN(NULL))) UNION ALL SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((MIN(NULL)) ISNULL);
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING MIN(NULL) UNION ALL SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (MIN(NULL))) UNION ALL SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((MIN(NULL)) ISNULL);
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT * FROM rt1, t0;
SELECT ALL * FROM rt1, t0 WHERE (((((((rt1.c0)AND(rt1.c1)))AND(t0.c0))) NOT NULL)) UNION ALL SELECT * FROM rt1, t0 WHERE ((NOT (((((((rt1.c0)AND(rt1.c1)))AND(t0.c0))) NOT NULL)))) UNION ALL SELECT ALL * FROM rt1, t0 WHERE (((((((((rt1.c0)AND(rt1.c1)))AND(t0.c0))) NOT NULL)) ISNULL));
SELECT * FROM rt1, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(((t0.c0)<>(t0.c0)) AS NUMERIC)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(((t0.c0)<>(t0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(((t0.c0)<>(t0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0)==(t0.c0)) IN ())) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)=(t0.c0)) IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((t0.c0)==(t0.c0)) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING TOTAL(COUNT(rt1.c0)) UNION ALL SELECT rt1.c1 FROM rt1 NOT INDEXED GROUP BY rt1.c1 HAVING (NOT (TOTAL(COUNT(rt1.c0)))) UNION ALL SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((TOTAL(COUNT(rt1.c0))) ISNULL);
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (x'') UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (x''))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM rt1 WHERE (((x'') ISNULL));
SELECT rt1.c2, rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((t0.c0 IN ()))%(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0 IN ()))%(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0 IN ()))%(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((- (((t0.c0) ISNULL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((- (((t0.c0) ISNULL)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((- (((t0.c0) ISNULL)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(MAX(SUM(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(MAX(SUM(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(MAX(SUM(t0.c0)))) ISNULL);
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (LIKELY(DISTINCT ((rt1.c0) NOTNULL))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (LIKELY(DISTINCT ((rt1.c0) NOTNULL))))) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((LIKELY(DISTINCT ((rt1.c0) NOTNULL))) ISNULL));
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE (rt1.c1) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE (((rt1.c1) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1;
SELECT t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 WHERE (((((t0.c0) NOT NULL)) ISNULL)) GROUP BY t0.c0, rt1.c0, rt1.c1 UNION SELECT t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 WHERE ((NOT (((((t0.c0) NOT NULL)) ISNULL)))) GROUP BY t0.c0, rt1.c0, rt1.c1 UNION SELECT ALL t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 WHERE (((((((t0.c0) NOT NULL)) ISNULL)) ISNULL)) GROUP BY t0.c0, rt1.c0, rt1.c1;
SELECT t0.c0, rt1.c0, rt1.c1 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING MAX(COUNT(*)) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL t0.c0, rt1.c1, rt1.c0 FROM rt1, t0;
SELECT ALL t0.c0, rt1.c1, rt1.c0 FROM rt1, t0 WHERE (rt1.c0) UNION ALL SELECT t0.c0, rt1.c1, rt1.c0 FROM rt1, t0 WHERE ((NOT (rt1.c0))) UNION ALL SELECT t0.c0, rt1.c1, rt1.c0 FROM rt1, t0 WHERE (((rt1.c0) ISNULL));
SELECT ALL t0.c0, rt1.c1, rt1.c0 FROM rt1, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((IFNULL(DISTINCT t0.c0, x'') IN ())) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((IFNULL(DISTINCT t0.c0, x'') IN ())))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((IFNULL(DISTINCT t0.c0, x'') IN ())) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM rt1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM rt1, t0 WHERE ((((((rt1.c2)OR(rt1.c2)))AND(t0.c0)) IN ())) GROUP BY t0.c0 UNION SELECT t0.c0 FROM rt1, t0 WHERE ((NOT ((((((rt1.c2)OR(rt1.c2)))AND(t0.c0)) IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM rt1, t0 WHERE ((((((((rt1.c2)OR(rt1.c2)))AND(t0.c0)) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM rt1, t0 GROUP BY t0.c0;
SELECT rt1.c0, rt1.c1, t0.c0 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, t0.c0;
SELECT rt1.c0, rt1.c1, t0.c0 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, t0.c0 HAVING SUM(SUBSTR(rt1.c0, rt1.c1)) UNION ALL SELECT rt1.c0, rt1.c1, t0.c0 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, t0.c0 HAVING (NOT (SUM(SUBSTR(rt1.c0, rt1.c1)))) UNION ALL SELECT ALL rt1.c0, rt1.c1, t0.c0 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, t0.c0 HAVING ((SUM(SUBSTR(rt1.c0, rt1.c1))) ISNULL);
SELECT rt1.c0, rt1.c1, t0.c0 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, t0.c0;
SELECT rt1.c0, rt1.c1, t0.c0 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, t0.c0 HAVING SUM(SUBSTR(rt1.c0, rt1.c1)) UNION ALL SELECT rt1.c0, rt1.c1, t0.c0 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, t0.c0 HAVING (NOT (SUM(SUBSTR(rt1.c0, rt1.c1)))) UNION ALL SELECT ALL rt1.c0, rt1.c1, t0.c0 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, t0.c0 HAVING ((SUM(SUBSTR(rt1.c0, rt1.c1))) ISNULL);
SELECT rt1.c0, rt1.c1, t0.c0 FROM t0, rt1 GROUP BY rt1.c0, rt1.c1, t0.c0;
SELECT ALL * FROM rt1, t0;
SELECT * FROM rt1, t0 WHERE (((t0.c0)OR((+ (t0.c0))))) UNION ALL SELECT * FROM rt1, t0 WHERE ((NOT (((t0.c0)OR((+ (t0.c0))))))) UNION ALL SELECT * FROM rt1, t0 WHERE (((((t0.c0)OR((+ (t0.c0))))) ISNULL));
SELECT ALL * FROM rt1, t0;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (((((rt1.c0)AND(t0.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (((((rt1.c0)AND(t0.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((((((rt1.c0)AND(t0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT rt1.c1, rt1.c2, rt1.c0, t0.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2, rt1.c0, t0.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0, t0.c0 FROM rt1, t0 WHERE (((t0.c0 COLLATE BINARY)GLOB((((rt1.c2, rt1.c2, t0.c0)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c0)) AND ((x'', x'', rt1.c0)))))) GROUP BY rt1.c1, rt1.c2, rt1.c0, t0.c0 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0, t0.c0 FROM rt1, t0 WHERE ((NOT (((t0.c0 COLLATE BINARY)GLOB((((rt1.c2, rt1.c2, t0.c0)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c0)) AND ((x'', x'', rt1.c0)))))))) GROUP BY rt1.c1, rt1.c2, rt1.c0, t0.c0 UNION SELECT rt1.c1, rt1.c2, rt1.c0, t0.c0 FROM rt1, t0 WHERE (((((t0.c0 COLLATE BINARY)GLOB((((rt1.c2, rt1.c2, t0.c0)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c0)) AND ((x'', x'', rt1.c0)))))) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0, t0.c0;
SELECT rt1.c1, rt1.c2, rt1.c0, t0.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2, rt1.c0, t0.c0;
SELECT rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0 HAVING ((rt1.c2)||(COUNT(*))) UNION ALL SELECT rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0 HAVING (NOT (((rt1.c2)||(COUNT(*))))) UNION ALL SELECT ALL rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0 HAVING ((((rt1.c2)||(COUNT(*)))) ISNULL);
SELECT rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0;
SELECT ALL rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0 HAVING ((rt1.c2)||(COUNT(*))) UNION ALL SELECT rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0 HAVING (NOT (((rt1.c2)||(COUNT(*))))) UNION ALL SELECT ALL rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0 HAVING ((((rt1.c2)||(COUNT(*)))) ISNULL);
SELECT rt1.c1, rt1.c2, t0.c0, rt1.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c0, rt1.c0;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1, t0;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1, t0 WHERE (((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)) COLLATE BINARY) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1, t0 WHERE ((NOT (((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)) COLLATE BINARY))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1, t0 WHERE (((((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)) COLLATE BINARY) ISNULL));
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE (((((((((COALESCE(rt1.c0, rt1.c1, rt1.c2, rt1.c2))AND(CASE WHEN rt1.c2 THEN rt1.c2 END)))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c1))))))OR(t0.c0)))OR('	'))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT (((((((((COALESCE(rt1.c0, rt1.c1, rt1.c2, rt1.c2))AND(CASE WHEN rt1.c2 THEN rt1.c2 END)))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c1))))))OR(t0.c0)))OR('	'))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE (((((((((((COALESCE(rt1.c0, rt1.c1, rt1.c2, rt1.c2))AND(CASE WHEN rt1.c2 THEN rt1.c2 END)))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c1))))))OR(t0.c0)))OR('	'))) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT ALL t0.c0, rt1.c1 FROM rt1 FULL OUTER JOIN t0 ON ((CAST(rt1.c1 AS REAL))>(rt1.c1)) GROUP BY t0.c0, rt1.c1;
SELECT ALL t0.c0, rt1.c1 FROM rt1 FULL OUTER JOIN t0 ON ((CAST(rt1.c1 AS REAL))>(rt1.c1)) WHERE ((((((((((rt1.c2 IN ()))OR(CAST(rt1.c1 AS NUMERIC))))OR((NOT (rt1.c0)))))AND(((rt1.c0)<(t0.c0)))))AND(((((rt1.c1)AND(rt1.c1)))AND(rt1.c0))))) GROUP BY t0.c0, rt1.c1 UNION SELECT ALL t0.c0, rt1.c1 FROM rt1 FULL OUTER JOIN t0 ON ((CAST(rt1.c1 AS REAL))>(rt1.c1)) WHERE ((NOT ((((((((((rt1.c2 IN ()))OR(CAST(rt1.c1 AS NUMERIC))))OR((NOT (rt1.c0)))))AND(((rt1.c0)<(t0.c0)))))AND(((((rt1.c1)AND(rt1.c1)))AND(rt1.c0))))))) GROUP BY t0.c0, rt1.c1 UNION SELECT t0.c0, rt1.c1 FROM rt1 FULL OUTER JOIN t0 ON ((CAST(rt1.c1 AS REAL))>(rt1.c1)) WHERE ((((((((((((rt1.c2 IN ()))OR(CAST(rt1.c1 AS NUMERIC))))OR((NOT (rt1.c0)))))AND(((rt1.c0)<(t0.c0)))))AND(((((rt1.c1)AND(rt1.c1)))AND(rt1.c0))))) ISNULL)) GROUP BY t0.c0, rt1.c1;
SELECT ALL t0.c0, rt1.c1 FROM rt1 FULL OUTER JOIN t0 ON ((CAST(rt1.c1 AS REAL))>(rt1.c1)) GROUP BY t0.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, rt1.c1 HAVING SUM(((rt1.c0)|(AVG(rt1.c2)))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (SUM(((rt1.c0)|(AVG(rt1.c2)))))) UNION ALL SELECT rt1.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c0, rt1.c1 HAVING ((SUM(((rt1.c0)|(AVG(rt1.c2))))) ISNULL);
SELECT ALL rt1.c0 FROM rt1, t0;
SELECT rt1.c0 FROM rt1, t0 WHERE (((((rt1.c1) ISNULL)) ISNULL)) ORDER BY (NOT (((x'') NOT NULL))) ASC  NULLS FIRST;
SELECT rt1.c0 FROM rt1, t0 WHERE ((NOT (((((rt1.c1) ISNULL)) ISNULL)))) ORDER BY (NOT (((x'') NOT NULL))) ASC  NULLS FIRST;
SELECT rt1.c0 FROM rt1, t0 WHERE (((((((rt1.c1) ISNULL)) ISNULL)) ISNULL)) ORDER BY (NOT (((x'') NOT NULL))) ASC  NULLS FIRST;
SELECT ALL rt1.c0 FROM rt1, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((- (t0.c0)) IN ())) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((- (t0.c0)) IN ())))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((- (t0.c0)) IN ())) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT rt1.c2, rt1.c1, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1, t0.c0;
SELECT ALL rt1.c2, rt1.c1, t0.c0 FROM t0, rt1 WHERE (CAST((~ (t0.c0)) AS BLOB)) GROUP BY rt1.c2, rt1.c1, t0.c0 UNION SELECT rt1.c2, rt1.c1, t0.c0 FROM t0, rt1 WHERE ((NOT (CAST((~ (t0.c0)) AS BLOB)))) GROUP BY rt1.c2, rt1.c1, t0.c0 UNION SELECT rt1.c2, rt1.c1, t0.c0 FROM t0, rt1 WHERE (((CAST((~ (t0.c0)) AS BLOB)) ISNULL)) GROUP BY rt1.c2, rt1.c1, t0.c0;
SELECT rt1.c2, rt1.c1, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c1, t0.c0;
SELECT rt1.c2, t0.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c2, t0.c0, rt1.c1;
SELECT rt1.c2, t0.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c2, t0.c0, rt1.c1 HAVING TOTAL(((COUNT(*)) IS FALSE)) UNION ALL SELECT rt1.c2, t0.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c2, t0.c0, rt1.c1 HAVING (NOT (TOTAL(((COUNT(*)) IS FALSE)))) UNION ALL SELECT ALL rt1.c2, t0.c0, rt1.c1 FROM rt1, t0 GROUP BY rt1.c2, t0.c0, rt1.c1 HAVING ((TOTAL(((COUNT(*)) IS FALSE))) ISNULL);
SELECT ALL * FROM t0, rt1;
SELECT ALL * FROM t0, rt1 WHERE ((('i') ISNULL)) UNION ALL SELECT * FROM t0, rt1 WHERE ((NOT ((('i') ISNULL)))) UNION ALL SELECT * FROM t0, rt1 WHERE ((((('i') ISNULL)) ISNULL));
SELECT ALL * FROM t0, rt1;
SELECT DISTINCT rt1.c0 FROM rt1, t0;
SELECT DISTINCT rt1.c0 FROM rt1, t0 WHERE (LTRIM(CAST(rt1.c0 AS REAL), CAST(rt1.c0 AS NUMERIC))) UNION SELECT DISTINCT rt1.c0 FROM rt1, t0 WHERE ((NOT (LTRIM(CAST(rt1.c0 AS REAL), CAST(rt1.c0 AS NUMERIC))))) UNION SELECT DISTINCT rt1.c0 FROM rt1, t0 WHERE (((LTRIM(CAST(rt1.c0 AS REAL), CAST(rt1.c0 AS NUMERIC))) ISNULL));
SELECT DISTINCT rt1.c0 FROM rt1, t0;
SELECT ALL t0.c0, rt1.c0 FROM t0 INNER JOIN rt1 ON ((rt1.c2) IS FALSE) COLLATE BINARY GROUP BY t0.c0, rt1.c0;
SELECT ALL t0.c0, rt1.c0 FROM t0 INNER JOIN rt1 ON ((rt1.c2) IS FALSE) COLLATE BINARY WHERE (((rt1.c0 IN (0.3978543622538533, rt1.c2)) IN ())) GROUP BY t0.c0, rt1.c0 UNION SELECT t0.c0, rt1.c0 FROM t0 INNER JOIN rt1 ON ((rt1.c2) IS FALSE) COLLATE BINARY WHERE ((NOT (((rt1.c0 IN (0.3978543622538533, rt1.c2)) IN ())))) GROUP BY t0.c0, rt1.c0 UNION SELECT ALL t0.c0, rt1.c0 FROM t0 INNER JOIN rt1 ON ((rt1.c2) IS FALSE) COLLATE BINARY WHERE (((((rt1.c0 IN (0.3978543622538533, rt1.c2)) IN ())) ISNULL)) GROUP BY t0.c0, rt1.c0;
SELECT ALL t0.c0, rt1.c0 FROM t0 INNER JOIN rt1 ON ((rt1.c2) IS FALSE) COLLATE BINARY GROUP BY t0.c0, rt1.c0;
SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c0;
SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c0 HAVING CAST((((rt1.c2))<((rt1.c2))) AS BLOB) UNION ALL SELECT rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c0 HAVING (NOT (CAST((((rt1.c2))<((rt1.c2))) AS BLOB))) UNION ALL SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c0 HAVING ((CAST((((rt1.c2))<((rt1.c2))) AS BLOB)) ISNULL);
SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c0;
SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c0 HAVING CAST((((rt1.c2))<((rt1.c2))) AS BLOB) UNION ALL SELECT rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c0 HAVING (NOT (CAST((((rt1.c2))<((rt1.c2))) AS BLOB))) UNION ALL SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c0 HAVING ((CAST((((rt1.c2))<((rt1.c2))) AS BLOB)) ISNULL);
SELECT ALL rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c0;
SELECT ALL SUM(CAST(((rt1.c1)/(t0.c0)) AS INTEGER)) FROM rt1, t0 ORDER BY '0.1369847404578859'  NULLS FIRST;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (t0.c0) UNION ALL SELECT * FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN t0 ON (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) COLLATE RTRIM;
SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN t0 ON (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) COLLATE RTRIM WHERE ((('')!=((~ (x''))))) UNION SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN t0 ON (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) COLLATE RTRIM WHERE ((NOT ((('')<>((~ (x''))))))) UNION SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN t0 ON (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) COLLATE RTRIM WHERE ((((('')<>((~ (x''))))) ISNULL));
SELECT DISTINCT * FROM rt1 LEFT OUTER JOIN t0 ON (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) COLLATE RTRIM;
SELECT rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM t0, rt1 WHERE ((HEX(t0.c0) IN ())) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM t0, rt1 WHERE ((NOT ((HEX(t0.c0) IN ())))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM t0, rt1 WHERE ((((HEX(t0.c0) IN ())) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c2;
SELECT ALL t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c2 HAVING ((((((((AVG(rt1.c1))OR((((rt1.c0))<=((MIN(COUNT(*))))))))OR(SUM(rt1.c0))))AND(COUNT(t0.c0) COLLATE BINARY)))AND(MAX(COUNT(rt1.c0)))) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c2 HAVING (NOT (((((((((AVG(rt1.c1))OR((((rt1.c0))<=((MIN(COUNT(*))))))))OR(SUM(rt1.c0))))AND(COUNT(t0.c0) COLLATE BINARY)))AND(MAX(COUNT(rt1.c0)))))) UNION ALL SELECT ALL t0.c0, rt1.c0, rt1.c2 FROM t0, rt1 GROUP BY t0.c0, rt1.c0, rt1.c2 HAVING ((((((((((AVG(rt1.c1))OR((((rt1.c0))<=((MIN(COUNT(*))))))))OR(SUM(rt1.c0))))AND(COUNT(t0.c0) COLLATE BINARY)))AND(MAX(COUNT(rt1.c0))))) ISNULL);
SELECT MIN((((rt1.c2, t0.c0, rt1.c2, rt1.c2, rt1.c1)) BETWEEN ((((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)), (rt1.c2 IN ()), (t0.c0 IN (rt1.c1)), ((x'') IS TRUE), (NOT (rt1.c0)))) AND ((((rt1.c1)==(x'')), CASE WHEN rt1.c0 THEN t0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN t0.c0 ELSE rt1.c2 END, ((t0.c0) BETWEEN (rt1.c2) AND (rt1.c0)), (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))), t0.c0)))) FROM t0, rt1;
SELECT t0.c0, rt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN t0 ON (((NOT (NULL)))>>(t0.c0 COLLATE BINARY));
SELECT ALL t0.c0, rt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN t0 ON (((NOT (NULL)))>>(t0.c0 COLLATE BINARY)) WHERE (CASE WHEN (- (rt1.c2)) THEN rt1.c1 COLLATE NOCASE ELSE (rt1.c1 IN ()) END) UNION ALL SELECT t0.c0, rt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN t0 ON (((NOT (NULL)))>>(t0.c0 COLLATE BINARY)) WHERE ((NOT (CASE WHEN (- (rt1.c2)) THEN rt1.c1 COLLATE NOCASE ELSE (rt1.c1 IN ()) END))) UNION ALL SELECT t0.c0, rt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN t0 ON (((NOT (NULL)))>>(t0.c0 COLLATE BINARY)) WHERE (((CASE WHEN (- (rt1.c2)) THEN rt1.c1 COLLATE NOCASE ELSE (rt1.c1 IN ()) END) ISNULL));
SELECT t0.c0, rt1.c0, rt1.c1 FROM rt1 LEFT OUTER JOIN t0 ON (((NOT (NULL)))>>(t0.c0 COLLATE BINARY));
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (CASE CAST(t0.c0 AS TEXT)  WHEN ((((0.4775946548160813)AND(t0.c0)))OR(rt1.c1)) THEN HEX(DISTINCT rt1.c0) ELSE CASE t0.c0  WHEN t0.c0 THEN rt1.c2 ELSE rt1.c0 END END) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (CASE CAST(t0.c0 AS TEXT)  WHEN ((((0.4775946548160813)AND(t0.c0)))OR(rt1.c1)) THEN HEX(DISTINCT rt1.c0) ELSE CASE t0.c0  WHEN t0.c0 THEN rt1.c2 ELSE rt1.c0 END END))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((CASE CAST(t0.c0 AS TEXT)  WHEN ((((0.4775946548160813)AND(t0.c0)))OR(rt1.c1)) THEN HEX(DISTINCT rt1.c0) ELSE CASE t0.c0  WHEN t0.c0 THEN rt1.c2 ELSE rt1.c0 END END) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 WHERE (CAST(((rt1.c2)=(rt1.c1)) AS TEXT)) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE ((NOT (CAST(((rt1.c2)==(rt1.c1)) AS TEXT)))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE (((CAST(((rt1.c2)=(rt1.c1)) AS TEXT)) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(t0.c0))AND(SUM(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((AVG(t0.c0))AND(SUM(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((AVG(t0.c0))AND(SUM(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(t0.c0))AND(SUM(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((AVG(t0.c0))AND(SUM(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((AVG(t0.c0))AND(SUM(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM rt1 INNER JOIN t0 ON (((((((t0.c0)AND(rt1.c0)))OR(rt1.c1))))<(((rt1.c2 IN ()))));
SELECT * FROM rt1 INNER JOIN t0 ON (((((((t0.c0)AND(rt1.c0)))OR(rt1.c1))))<(((rt1.c2 IN ())))) WHERE (LOWER(((NULL) BETWEEN (rt1.c0) AND (rt1.c2)))) UNION ALL SELECT * FROM rt1 INNER JOIN t0 ON (((((((t0.c0)AND(rt1.c0)))OR(rt1.c1))))<(((rt1.c2 IN ())))) WHERE ((NOT (LOWER(((NULL) BETWEEN (rt1.c0) AND (rt1.c2)))))) UNION ALL SELECT * FROM rt1 INNER JOIN t0 ON (((((((t0.c0)AND(rt1.c0)))OR(rt1.c1))))<(((rt1.c2 IN ())))) WHERE (((LOWER(((NULL) BETWEEN (rt1.c0) AND (rt1.c2)))) ISNULL));
SELECT ALL * FROM rt1 INNER JOIN t0 ON (((((((t0.c0)AND(rt1.c0)))OR(rt1.c1))))<(((rt1.c2 IN ()))));
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0)=(t0.c0)))||(CAST(t0.c0 AS REAL)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)==(t0.c0)))||(CAST(t0.c0 AS REAL)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0)==(t0.c0)))||(CAST(t0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1, t0 WHERE (((rt1.c1 COLLATE BINARY) IS TRUE)) GROUP BY rt1.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c2 FROM rt1, t0 WHERE ((NOT (((rt1.c1 COLLATE BINARY) IS TRUE)))) GROUP BY rt1.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c2 FROM rt1, t0 WHERE (((((rt1.c1 COLLATE BINARY) IS TRUE)) ISNULL)) GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, t0.c0;
SELECT ALL rt1.c1, rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, t0.c0 HAVING MIN(COUNT(rt1.c0)) UNION ALL SELECT ALL rt1.c1, rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, t0.c0 HAVING (NOT (MIN(COUNT(rt1.c0)))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, t0.c0 HAVING ((MIN(COUNT(rt1.c0))) ISNULL);
SELECT ALL rt1.c2 FROM rt1;
SELECT rt1.c2 FROM rt1 WHERE ('-1184027474') UNION ALL SELECT rt1.c2 FROM rt1 WHERE ((NOT ('-1184027474'))) UNION ALL SELECT ALL rt1.c2 FROM rt1 WHERE ((('-1184027474') ISNULL));
SELECT ALL rt1.c2 FROM rt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)>>(t0.c0)))AND(((t0.c0) IS TRUE)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0)>>(t0.c0)))AND(((t0.c0) IS TRUE)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)>>(t0.c0)))AND(((t0.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 NOT INDEXED WHERE (CASE NULL  WHEN (t0.c0 IN ()) THEN NULL END) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE NULL  WHEN (t0.c0 IN ()) THEN NULL END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CASE NULL  WHEN (t0.c0 IN ()) THEN NULL END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((SUM(AVG(COUNT(rt1.c2))))<((+ (COUNT(MIN(rt1.c1)))))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT (((SUM(AVG(COUNT(rt1.c2))))<((+ (COUNT(MIN(rt1.c1)))))))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((((SUM(AVG(COUNT(rt1.c2))))<((+ (COUNT(MIN(rt1.c1))))))) ISNULL);
SELECT t0.c0, rt1.c2 FROM rt1 NATURAL JOIN t0;
SELECT ALL t0.c0, rt1.c2 FROM rt1 NATURAL JOIN t0 WHERE (rt1.c0) UNION ALL SELECT ALL t0.c0, rt1.c2 FROM rt1 NATURAL JOIN t0 WHERE ((NOT (rt1.c0))) UNION ALL SELECT ALL t0.c0, rt1.c2 FROM rt1 NATURAL JOIN t0 WHERE (((rt1.c0) ISNULL));
SELECT t0.c0, rt1.c2 FROM rt1 NATURAL JOIN t0;
SELECT DISTINCT rt1.c2, t0.c0 FROM t0, rt1;
SELECT DISTINCT rt1.c2, t0.c0 FROM t0, rt1 WHERE (((rt1.c0) IS TRUE)) UNION SELECT DISTINCT rt1.c2, t0.c0 FROM t0, rt1 WHERE ((NOT (((rt1.c0) IS TRUE)))) UNION SELECT DISTINCT rt1.c2, t0.c0 FROM t0, rt1 WHERE (((((rt1.c0) IS TRUE)) ISNULL));
SELECT DISTINCT rt1.c2, t0.c0 FROM t0, rt1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN (((rt1.c2 IN ()))) AND ((((rt1.c0) IS FALSE))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE ((NOT ((((rt1.c1)) NOT BETWEEN (((rt1.c2 IN ()))) AND ((((rt1.c0) IS FALSE))))))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE ((((((rt1.c1)) NOT BETWEEN (((rt1.c2 IN ()))) AND ((((rt1.c0) IS FALSE))))) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING COUNT(LENGTH(COUNT(AVG(rt1.c2)))) UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING (NOT (COUNT(LENGTH(COUNT(AVG(rt1.c2)))))) UNION ALL SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1 HAVING ((COUNT(LENGTH(COUNT(AVG(rt1.c2))))) ISNULL);
SELECT * FROM rt1, t0;
SELECT * FROM rt1, t0 WHERE (((((((rt1.c0) IS FALSE))AND(((((rt1.c1)AND(rt1.c0)))AND(rt1.c1)))))AND(LTRIM(t0.c0)))) UNION ALL SELECT * FROM rt1, t0 WHERE ((NOT (((((((rt1.c0) IS FALSE))AND(((((rt1.c1)AND(rt1.c0)))AND(rt1.c1)))))AND(LTRIM(t0.c0)))))) UNION ALL SELECT ALL * FROM rt1, t0 WHERE (((((((((rt1.c0) IS FALSE))AND(((((rt1.c1)AND(rt1.c0)))AND(rt1.c1)))))AND(LTRIM(t0.c0)))) ISNULL));
SELECT * FROM rt1, t0;
SELECT DISTINCT * FROM t0, rt1;
SELECT DISTINCT * FROM t0, rt1 WHERE (CAST(UPPER(DISTINCT rt1.c0) AS REAL)) UNION SELECT DISTINCT * FROM t0, rt1 WHERE ((NOT (CAST(UPPER(DISTINCT rt1.c0) AS REAL)))) UNION SELECT DISTINCT * FROM t0, rt1 WHERE (((CAST(UPPER(DISTINCT rt1.c0) AS REAL)) ISNULL));
SELECT DISTINCT * FROM t0, rt1;
SELECT rt1.c0 FROM rt1, t0 GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1, t0 WHERE (((((((rt1.c1)<=(rt1.c2)))AND(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))))OR(UNICODE(x'51e6')))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1, t0 WHERE ((NOT (((((((rt1.c1)<=(rt1.c2)))AND(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))))OR(UNICODE(x'51e6')))))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1, t0 WHERE (((((((((rt1.c1)<=(rt1.c2)))AND(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))))OR(UNICODE(x'51e6')))) ISNULL)) GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1, t0 GROUP BY rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING MIN(MAX(GROUP_CONCAT(COUNT(AVG(rt1.c2))))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (MIN(MAX(GROUP_CONCAT(COUNT(AVG(rt1.c2))))))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((MIN(MAX(GROUP_CONCAT(COUNT(AVG(rt1.c2)))))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((t0.c0 IN ()) COLLATE RTRIM) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((t0.c0 IN ()) COLLATE RTRIM))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((t0.c0 IN ()) COLLATE RTRIM) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0) NOTNULL))AND((t0.c0 IN (t0.c0)))))OR((t0.c0 IN ())))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((((t0.c0) NOTNULL))AND((t0.c0 IN (t0.c0)))))OR((t0.c0 IN ())))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((((t0.c0) NOTNULL))AND((t0.c0 IN (t0.c0)))))OR((t0.c0 IN ())))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM t0, rt1 WHERE ((((rt1.c0, t0.c0, t0.c0)) BETWEEN ((rt1.c2, rt1.c0, t0.c0)) AND ((t0.c0, rt1.c1, rt1.c0))) COLLATE RTRIM) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM t0, rt1 WHERE ((NOT ((((rt1.c0, t0.c0, t0.c0)) BETWEEN ((rt1.c2, rt1.c0, t0.c0)) AND ((t0.c0, rt1.c1, rt1.c0))) COLLATE RTRIM))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM t0, rt1 WHERE ((((((rt1.c0, t0.c0, t0.c0)) BETWEEN ((rt1.c2, rt1.c0, t0.c0)) AND ((t0.c0, rt1.c1, rt1.c0))) COLLATE RTRIM) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) IS FALSE) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((COUNT(*)) IS FALSE))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((COUNT(*)) IS FALSE)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) IS FALSE) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((COUNT(*)) IS FALSE))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((COUNT(*)) IS FALSE)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (NULL) UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE (((NULL) ISNULL));
SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1;
SELECT DISTINCT * FROM rt1, t0;
SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT (COALESCE(rt1.c0, rt1.c1)))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT ((NOT (COALESCE(rt1.c0, rt1.c1)))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((((NOT (COALESCE(rt1.c0, rt1.c1)))) ISNULL));
SELECT DISTINCT * FROM rt1, t0;
SELECT rt1.c2 FROM rt1 FULL OUTER JOIN t0 ON 'V' GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 FULL OUTER JOIN t0 ON 'V' WHERE (((((((((t0.c0 COLLATE RTRIM)OR((- (rt1.c0)))))OR(t0.c0)))OR((~ ('u*A5&rQ')))))OR(CASE rt1.c2  WHEN '921-863-1532T81-50000075:1868--316752888902182112T-3648727985792596964Tyȼ8' THEN rt1.c1 ELSE rt1.c1 END))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 FULL OUTER JOIN t0 ON 'V' WHERE ((NOT (((((((((t0.c0 COLLATE RTRIM)OR((- (rt1.c0)))))OR(t0.c0)))OR((~ ('u*A5&rQ')))))OR(CASE rt1.c2  WHEN '921-863-1532T81-50000075:1868--316752888902182112T-3648727985792596964Tyȼ8' THEN rt1.c1 ELSE rt1.c1 END))))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 FULL OUTER JOIN t0 ON 'V' WHERE (((((((((((t0.c0 COLLATE RTRIM)OR((- (rt1.c0)))))OR(t0.c0)))OR((~ ('u*A5&rQ')))))OR(CASE rt1.c2  WHEN '921-863-1532T81-50000075:1868--316752888902182112T-3648727985792596964Tyȼ8' THEN rt1.c1 ELSE rt1.c1 END))) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 FULL OUTER JOIN t0 ON 'V' GROUP BY rt1.c2;
SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1 HAVING AVG((((MIN(rt1.c2))) NOT BETWEEN ((TOTAL(rt1.c1))) AND ((COUNT(MIN(rt1.c1)))))) UNION ALL SELECT ALL rt1.c1 FROM t0, rt1 GROUP BY rt1.c1 HAVING (NOT (AVG((((MIN(rt1.c2))) NOT BETWEEN ((TOTAL(rt1.c1))) AND ((COUNT(MIN(rt1.c1)))))))) UNION ALL SELECT rt1.c1 FROM t0, rt1 GROUP BY rt1.c1 HAVING ((AVG((((MIN(rt1.c2))) NOT BETWEEN ((TOTAL(rt1.c1))) AND ((COUNT(MIN(rt1.c1))))))) ISNULL);
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (((((rt1.c2)|(rt1.c0)))%((rt1.c0 IN (rt1.c0))))) UNION ALL SELECT * FROM rt1 WHERE ((NOT (((((rt1.c2)|(rt1.c0)))%((rt1.c0 IN (rt1.c0))))))) UNION ALL SELECT * FROM rt1 WHERE (((((((rt1.c2)|(rt1.c0)))%((rt1.c0 IN (rt1.c0))))) ISNULL));
SELECT * FROM rt1;
