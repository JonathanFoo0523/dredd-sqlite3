-- Time: 2024/06/09 21:28:12
-- Database: database76
-- Database version: 3.40.0
-- seed value: 96366676
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1 UNINDEXED, c2 UNINDEXED); -- 1ms;
UPDATE OR ABORT vt0 SET c0=0xffffffffa0ad4cb3; -- 0ms;
UPDATE OR FAIL vt0 SET (c1, c2)=('t1V', NULL) WHERE vt0.c1; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1882420074);\n; -- 0ms;
ANALYZE temp; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE vt0 SET (c2)=('s*5ש訫M'); -- 0ms;
PRAGMA stats; -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c0) VALUES (0.9219208605850613, x''), ('qQ녑I-%WG', 0.09003454381612686), (-1599255373, 306227030); -- 5ms;
COMMIT; -- 0ms;
UPDATE OR REPLACE vt0 SET c0=NULL WHERE ((((((((((((CASE WHEN vt0.c2 THEN vt0.c1 END)AND('6328310066685896899 392 78038523320420101 7882772528420161990 ' COLLATE BINARY)))AND(((vt0.c1) NOTNULL))))OR((vt0.c1 IN ()))))OR((vt0.c2 IN ()))))AND(vt0.c2 COLLATE RTRIM)))AND((vt0.c1 IN ()))); -- 0ms;
VACUUM main; -- 1ms;
ANALYZE main; -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c2, c0) VALUES (0.9219208605850613, 0.883953193695185); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c1)=(x'd033', '365704693'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c2)=(x'') WHERE (NOT (0.7861278998534611)); -- 0ms;
UPDATE OR IGNORE vt0 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE vt0 SET (c2)=(-524480951); -- 0ms;
PRAGMA cache_size; -- 0ms;
UPDATE vt0 SET c0='0.883953193695185', c2=x'8da2' WHERE (((vt0.c1)) BETWEEN ((TYPEOF(vt0.c2))) AND ((((NULL) ISNULL)))); -- 0ms;
UPDATE OR IGNORE vt0 SET (c2)=(0.06393011968791074); -- 0ms;
PRAGMA main.legacy_file_format = true; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA temp.defer_foreign_keys = false; -- 1ms;
PRAGMA incremental_vacuum(5947071); -- 0ms;
ANALYZE; -- 0ms;
REINDEX BINARY; -- 0ms;
REINDEX NOCASE; -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
REINDEX RTRIM; -- 1ms;
UPDATE OR IGNORE vt0 SET (c2, c0, c2)=('2058992996', NULL, 0.11408251384336954) WHERE CASE ((vt0.c2)>>(0.9219208605850613))  WHEN vt0.c1 THEN (vt0.c0 IN ()) END; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='21617365' WHERE ('21617365' IN ()); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.busy_timeout; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
REINDEX NOCASE; -- 0ms;
UPDATE OR FAIL vt0 SET c2='K+'; -- 0ms;
UPDATE OR ABORT vt0 SET (c1)=(0.7646830409155106); -- 0ms;
PRAGMA temp.stats; -- 0ms;
CREATE TEMPORARY VIEW v0(c0) AS SELECT DISTINCT DENSE_RANK() OVER () FROM vt1, vt0 WHERE ((((((0.43653429972213864)AND(0.24689852952482927)))OR('Cmz')) IN (((0x7ab9bd64) BETWEEN ('-157791053') AND ('1914765699'))))); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=('Y+w_') WHERE 0.22422302924308102; -- 1ms;
PRAGMA busy_timeout = 0; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('~U8l廕4Sr.'), (NULL), ('t i3U!egR'), (x''), (NULL); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 TEXT ); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x'99e4f5c3' WHERE vt1.c0 COLLATE BINARY; -- 0ms;
PRAGMA main.auto_vacuum = FULL; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -665746156);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c0) VALUES ('tMꭥLQ2', '-854391319', x''); -- 0ms;
PRAGMA auto_vacuum = NONE; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1442727468);\n; -- 0ms;
UPDATE vt0 SET c2=0.22422302924308102 WHERE ''; -- 0ms;
PRAGMA wal_autocheckpoint = -3848875159546990545; -- 0ms;
REINDEX BINARY; -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=11'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA main.short_column_names; -- 5ms;
PRAGMA main.wal_autocheckpoint = 4165945726197870146; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ANALYZE; -- 0ms;
UPDATE vt1 SET c0=x'' WHERE ((- (vt1.c0)) IN ()); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
END; -- 0ms;
DROP TABLE IF EXISTS rt0; -- 1ms;
END; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1020938593); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (''); -- 1ms;
COMMIT; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt1, v0;
SELECT ALL * FROM vt1, v0 WHERE ('') UNION ALL SELECT * FROM vt1, v0 WHERE ((NOT (''))) UNION ALL SELECT ALL * FROM vt1, v0 WHERE ((('') ISNULL));
SELECT ALL * FROM vt1, v0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) NOTNULL) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((vt1.c0) NOTNULL) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) NOTNULL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((0xffffffff939d87aa) NOT NULL) COLLATE NOCASE) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((0Xffffffff939d87aa) NOT NULL) COLLATE NOCASE))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((0Xffffffff939d87aa) NOT NULL) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT vt1.c0, v0.c0 FROM v0 NOT INDEXED, vt1 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING (((SQLITE_VERSION()))<>(((((v0.c0, '', COUNT(v0.c0)))>=((v0.c0, MAX(TOTAL(vt1.c0)), v0.c0)))))) UNION ALL SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING (NOT ((((SQLITE_VERSION()))!=(((((v0.c0, '', COUNT(v0.c0)))>=((v0.c0, MAX(TOTAL(vt1.c0)), v0.c0)))))))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING (((((SQLITE_VERSION()))!=(((((v0.c0, '', COUNT(v0.c0)))>=((v0.c0, MAX(TOTAL(vt1.c0)), v0.c0))))))) ISNULL);
SELECT ALL * FROM vt1, vt0, v0;
SELECT * FROM vt1, vt0, v0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM vt1, vt0, v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM vt1, vt0, v0 WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM vt1, vt0, v0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0)%(0.549715445748883)) IN ())) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)%(0.549715445748883)) IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)%(0.549715445748883)) IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) NOTNULL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0) NOTNULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) NOTNULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.c0, v0.c0, vt0.c2 FROM vt1, v0, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0, v0.c0, vt0.c2;
SELECT vt0.c1, vt1.c0, vt0.c0, v0.c0, vt0.c2 FROM vt1, v0, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0, v0.c0, vt0.c2 HAVING COUNT((((vt0.c0)) NOT BETWEEN ((AVG(vt0.c2))) AND ((vt0.c2)))) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0, v0.c0, vt0.c2 FROM vt1, v0, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0, v0.c0, vt0.c2 HAVING (NOT (COUNT((((vt0.c0)) NOT BETWEEN ((AVG(vt0.c2))) AND ((vt0.c2)))))) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt0.c0, v0.c0, vt0.c2 FROM vt1, v0, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0, v0.c0, vt0.c2 HAVING ((COUNT((((vt0.c0)) NOT BETWEEN ((AVG(vt0.c2))) AND ((vt0.c2))))) ISNULL);
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM vt0 INNER JOIN v0 ON (((((v0.c0))<((vt0.c1)))) ISNULL);
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM vt0 INNER JOIN v0 ON (((((v0.c0))<((vt0.c1)))) ISNULL) WHERE (((v0.c0 COLLATE BINARY) ISNULL)) UNION ALL SELECT vt0.c0, v0.c0, vt0.c1 FROM vt0 INNER JOIN v0 ON (((((v0.c0))<((vt0.c1)))) ISNULL) WHERE ((NOT (((v0.c0 COLLATE BINARY) ISNULL)))) UNION ALL SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM vt0 INNER JOIN v0 ON (((((v0.c0))<((vt0.c1)))) ISNULL) WHERE (((((v0.c0 COLLATE BINARY) ISNULL)) ISNULL));
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM vt0 INNER JOIN v0 ON (((((v0.c0))<((vt0.c1)))) ISNULL);
SELECT DISTINCT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, v0 WHERE (((CASE WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 END) NOTNULL)) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((NOT (((CASE WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 END) NOTNULL)))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE (((((CASE WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 END) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt1, v0;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 WHERE ((((vt0.c2)) NOT BETWEEN ((((((((((vt0.c1)AND(NULL)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))) AND ((((vt0.c1) IS FALSE))))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0 NOT INDEXED WHERE ((NOT ((((vt0.c2)) NOT BETWEEN ((((((((((vt0.c1)AND(NULL)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))) AND ((((vt0.c1) IS FALSE))))))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0 WHERE ((((((vt0.c2)) NOT BETWEEN ((((((((((vt0.c1)AND(NULL)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))) AND ((((vt0.c1) IS FALSE))))) ISNULL)) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT vt0.c2, vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c2, vt0.c1, vt0.c0, v0.c0;
SELECT vt0.c2, vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c2, vt0.c1, vt0.c0, v0.c0 HAVING (- (GROUP_CONCAT(MIN(vt0.c2)))) UNION ALL SELECT ALL vt0.c2, vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c2, vt0.c1, vt0.c0, v0.c0 HAVING (NOT ((- (GROUP_CONCAT(MIN(vt0.c2)))))) UNION ALL SELECT vt0.c2, vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c2, vt0.c1, vt0.c0, v0.c0 HAVING (((- (GROUP_CONCAT(MIN(vt0.c2))))) ISNULL);
SELECT vt0.c1 FROM v0 LEFT OUTER JOIN vt1 ON CASE vt0.c2 COLLATE RTRIM  WHEN vt0.c1 COLLATE RTRIM THEN ((0.951957876723399)>=(vt0.c2)) WHEN ((vt0.c1)IS(vt0.c2)) THEN (vt0.c2 IN ()) WHEN CAST(0.960955651639576 AS REAL) THEN ((vt1.c0)-(vt0.c2)) END RIGHT OUTER JOIN vt0 ON CAST(vt0.c2 AS BLOB);
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((LIKELY(vt1.c0))GLOB(CAST(vt0.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (((LIKELY(vt1.c0))GLOB(CAST(vt0.c0 AS BLOB)))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((((LIKELY(vt1.c0))GLOB(CAST(vt0.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c1, v0.c0, vt1.c0, vt0.c2, vt0.c0 FROM vt1 CROSS JOIN v0 ON ((((vt0.c2)IS(vt0.c2))) NOT NULL) FULL OUTER JOIN vt0 ON ((CAST(v0.c0 AS NUMERIC))<=(((vt0.c2)||(vt0.c1)))) GROUP BY vt0.c1, v0.c0, vt1.c0, vt0.c2, vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (~ (CAST(0.18097298349130608 AS NUMERIC))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((~ (CAST(0.18097298349130608 AS NUMERIC))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((~ (CAST(0.18097298349130608 AS NUMERIC)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (~ (CAST(0.18097298349130608 AS NUMERIC))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((~ (CAST(0.18097298349130608 AS NUMERIC))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((~ (CAST(0.18097298349130608 AS NUMERIC)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT vt0.c2, v0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, v0;
SELECT DISTINCT vt0.c2, v0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE ((NOT (vt0.c2)) COLLATE NOCASE) UNION SELECT DISTINCT vt0.c2, v0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE ((NOT ((NOT (vt0.c2)) COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c2, v0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE ((((NOT (vt0.c2)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c2, v0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, v0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (((('', vt0.c1, vt0.c0, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c2) ISNULL), JULIANDAY(vt0.c1, '-136826498', vt0.c0), ((vt0.c0)%(vt0.c0)), vt0.c1 COLLATE BINARY)) AND ((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)), (~ (vt0.c0)), ((vt0.c2)LIKE(vt0.c1)), ((((((((vt0.c2)OR(x'')))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c1)), CAST(vt0.c1 AS REAL))))) GROUP BY vt0.c2, vt0.c1, vt0.c0 UNION SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((('', vt0.c1, vt0.c0, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c2) ISNULL), JULIANDAY(vt0.c1, '-136826498', vt0.c0), ((vt0.c0)%(vt0.c0)), vt0.c1 COLLATE BINARY)) AND ((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)), (~ (vt0.c0)), ((vt0.c2)LIKE(vt0.c1)), ((((((((vt0.c2)OR(x'')))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c1)), CAST(vt0.c1 AS REAL))))))) GROUP BY vt0.c2, vt0.c1, vt0.c0 UNION SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (((((('', vt0.c1, vt0.c0, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c2) ISNULL), JULIANDAY(vt0.c1, '-136826498', vt0.c0), ((vt0.c0)%(vt0.c0)), vt0.c1 COLLATE BINARY)) AND ((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)), (~ (vt0.c0)), ((vt0.c2)LIKE(vt0.c1)), ((((((((vt0.c2)OR(x'')))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c1)), CAST(vt0.c1 AS REAL))))) ISNULL)) GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TYPEOF((COUNT(*) IN ())) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TYPEOF((COUNT(*) IN ())))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TYPEOF((COUNT(*) IN ()))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TYPEOF((COUNT(*) IN ())) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TYPEOF((COUNT(*) IN ())))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TYPEOF((COUNT(*) IN ()))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT SUM(-1.57791053E8) FROM vt1, v0 ORDER BY (+ (v0.c0 COLLATE RTRIM));
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c2)<=(vt0.c0)))<=(((vt0.c0)<>(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c2)<=(vt0.c0)))<=(((vt0.c0)<>(vt0.c0))))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c2)<=(vt0.c0)))<=(((vt0.c0)<>(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, v0.c0, vt0.c1, vt0.c2 FROM v0, vt0, vt1;
SELECT DISTINCT vt0.c0, v0.c0, vt0.c1, vt0.c2 FROM v0, vt0, vt1 WHERE (((((((vt0.c2)AND(vt0.c1)))OR(vt1.c0)))>=(((((v0.c0)OR(x'')))OR(vt1.c0))))) UNION SELECT DISTINCT vt0.c0, v0.c0, vt0.c1, vt0.c2 FROM v0, vt0, vt1 WHERE ((NOT (((((((vt0.c2)AND(vt0.c1)))OR(vt1.c0)))>=(((((v0.c0)OR(x'')))OR(vt1.c0))))))) UNION SELECT DISTINCT vt0.c0, v0.c0, vt0.c1, vt0.c2 FROM v0, vt0, vt1 WHERE (((((((((vt0.c2)AND(vt0.c1)))OR(vt1.c0)))>=(((((v0.c0)OR(x'')))OR(vt1.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0, vt0.c1, vt0.c2 FROM v0, vt0, vt1;
SELECT ALL vt0.c0, v0.c0, vt0.c2 FROM vt0, vt1, v0 GROUP BY vt0.c0, v0.c0, vt0.c2;
SELECT vt0.c0, v0.c0, vt0.c2 FROM vt0, vt1, v0 WHERE (vt0.c2) GROUP BY vt0.c0, v0.c0, vt0.c2 UNION SELECT ALL vt0.c0, v0.c0, vt0.c2 FROM vt0, vt1, v0 WHERE ((NOT (vt0.c2))) GROUP BY vt0.c0, v0.c0, vt0.c2 UNION SELECT ALL vt0.c0, v0.c0, vt0.c2 FROM vt0, vt1, v0 WHERE (((vt0.c2) ISNULL)) GROUP BY vt0.c0, v0.c0, vt0.c2;
SELECT ALL vt0.c0, v0.c0, vt0.c2 FROM vt0, vt1, v0 GROUP BY vt0.c0, v0.c0, vt0.c2;
SELECT ALL vt0.c2, vt1.c0 FROM vt1 INNER JOIN vt0 ON (((((vt0.c0))=((vt0.c0)))) IS FALSE) FULL OUTER JOIN v0 ON json_quote(CAST(v0.c0 AS NUMERIC)) GROUP BY vt0.c2, vt1.c0;
SELECT ALL vt0.c2, vt1.c0 FROM vt1 INNER JOIN vt0 ON (((((vt0.c0))=((vt0.c0)))) IS FALSE) FULL OUTER JOIN v0 ON json_quote(CAST(v0.c0 AS NUMERIC)) GROUP BY vt0.c2, vt1.c0 HAVING MIN(SUM(vt0.c1)) UNION ALL SELECT ALL vt0.c2, vt1.c0 FROM vt1 INNER JOIN vt0 ON (((((vt0.c0))==((vt0.c0)))) IS FALSE) FULL OUTER JOIN v0 ON json_quote(CAST(v0.c0 AS NUMERIC)) GROUP BY vt0.c2, vt1.c0 HAVING (NOT (MIN(SUM(vt0.c1)))) UNION ALL SELECT vt0.c2, vt1.c0 FROM vt1 INNER JOIN vt0 ON (((((vt0.c0))=((vt0.c0)))) IS FALSE) FULL OUTER JOIN v0 ON json_quote(CAST(v0.c0 AS NUMERIC)) GROUP BY vt0.c2, vt1.c0 HAVING ((MIN(SUM(vt0.c1))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (CAST((vt0.c2 IN (vt0.c2, vt0.c1)) AS INTEGER)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CAST((vt0.c2 IN (vt0.c2, vt0.c1)) AS INTEGER)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST((vt0.c2 IN (vt0.c2, vt0.c1)) AS INTEGER)) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE (CAST(vt0.c2 AS INTEGER) COLLATE BINARY) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((NOT (CAST(vt0.c2 AS INTEGER) COLLATE BINARY))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE (((CAST(vt0.c2 AS INTEGER) COLLATE BINARY) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (CAST(CAST('-1319342446' AS NUMERIC) AS INTEGER)) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (CAST(CAST('-1319342446' AS NUMERIC) AS INTEGER)))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((CAST(CAST('-1319342446' AS NUMERIC) AS INTEGER)) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL v0.c0, vt0.c0, vt0.c2 FROM vt0, v0, vt1 GROUP BY v0.c0, vt0.c0, vt0.c2;
SELECT v0.c0, vt0.c0, vt0.c2 FROM vt0, v0, vt1 GROUP BY v0.c0, vt0.c0, vt0.c2 HAVING TOTAL(GROUP_CONCAT(COUNT(*))) UNION ALL SELECT v0.c0, vt0.c0, vt0.c2 FROM vt0, v0, vt1 GROUP BY v0.c0, vt0.c0, vt0.c2 HAVING (NOT (TOTAL(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt0.c2 FROM vt0, v0, vt1 GROUP BY v0.c0, vt0.c0, vt0.c2 HAVING ((TOTAL(GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT * FROM vt0, v0, vt1;
SELECT ALL * FROM vt0, v0, vt1 WHERE (vt0.c1) UNION ALL SELECT * FROM vt0, v0, vt1 NOT INDEXED WHERE ((NOT (vt0.c1))) UNION ALL SELECT * FROM vt0, v0, vt1 WHERE (((vt0.c1) ISNULL));
SELECT * FROM vt0, v0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c2)) NOT BETWEEN ((((vt0.c2) ISNULL))) AND (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c2)) NOT BETWEEN ((((vt0.c2) ISNULL))) AND (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c2)) NOT BETWEEN ((((vt0.c2) ISNULL))) AND (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(((vt0.c2) IS TRUE) AS TEXT)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c2) IS TRUE) AS TEXT)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c2) IS TRUE) AS TEXT)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((((vt0.c2)<<(COUNT(COUNT(vt0.c1)))))OR((- (SUM(vt0.c2))))))AND(SUM(TOTAL(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((((((vt0.c2)<<(COUNT(COUNT(vt0.c1)))))OR((- (SUM(vt0.c2))))))AND(SUM(TOTAL(vt0.c0)))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((((((vt0.c2)<<(COUNT(COUNT(vt0.c1)))))OR((- (SUM(vt0.c2))))))AND(SUM(TOTAL(vt0.c0))))) ISNULL);
SELECT ALL v0.c0, vt0.c2, vt0.c0, vt1.c0 FROM v0, vt1, vt0;
SELECT v0.c0, vt0.c2, vt0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE (((((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt1.c0))) ISNULL)) UNION ALL SELECT v0.c0, vt0.c2, vt0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE ((NOT (((((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt1.c0))) ISNULL)))) UNION ALL SELECT v0.c0, vt0.c2, vt0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE (((((((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt1.c0))) ISNULL)) ISNULL));
SELECT ALL v0.c0, vt0.c2, vt0.c0, vt1.c0 FROM v0, vt1, vt0;
SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON TRIM(DISTINCT x'', json(vt0.c0));
SELECT vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, vt1 WHERE (((TYPEOF(DISTINCT vt0.c0)) IS FALSE)) GROUP BY vt1.c0, vt0.c2, vt0.c1, vt0.c0 UNION SELECT vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, vt1 WHERE ((NOT (((TYPEOF(DISTINCT vt0.c0)) IS FALSE)))) GROUP BY vt1.c0, vt0.c2, vt0.c1, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, vt1 WHERE (((((TYPEOF(DISTINCT vt0.c0)) IS FALSE)) ISNULL)) GROUP BY vt1.c0, vt0.c2, vt0.c1, vt0.c0;
SELECT vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c2, vt0.c1, vt0.c0;
SELECT vt0.c1, v0.c0, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0;
SELECT vt0.c1, v0.c0, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0 HAVING (- (AVG(GROUP_CONCAT(vt0.c2)))) UNION ALL SELECT ALL vt0.c1, v0.c0, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0 HAVING (NOT ((- (AVG(GROUP_CONCAT(vt0.c2)))))) UNION ALL SELECT vt0.c1, v0.c0, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0 HAVING (((- (AVG(GROUP_CONCAT(vt0.c2))))) ISNULL);
SELECT ALL * FROM v0 FULL OUTER JOIN vt1 ON (((NOT (vt0.c2)))>=(((((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)))OR(x'')))OR(v0.c0)))) RIGHT OUTER JOIN vt0 ON ((((vt1.c0)=(v0.c0)))<((('1882420074')|(vt1.c0))));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON (NOT (CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON (NOT (CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END)) WHERE ('D-93Br') UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON (NOT (CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END)) WHERE ((NOT ('D-93Br'))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON (NOT (CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END)) WHERE ((('D-93Br') ISNULL));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON (NOT (CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((+ (v0.c0)))||(((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(x'')))OR(v0.c0)))AND(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((+ (v0.c0)))||(((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(x'')))OR(v0.c0)))AND(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 NOT INDEXED WHERE ((((((+ (v0.c0)))||(((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(x'')))OR(v0.c0)))AND(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c1, vt1.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt1.c0, v0.c0;
SELECT ALL vt0.c1, vt1.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt1.c0, v0.c0 HAVING (SUM(vt1.c0) IN ()) UNION ALL SELECT vt0.c1, vt1.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt1.c0, v0.c0 HAVING (NOT ((SUM(vt1.c0) IN ()))) UNION ALL SELECT ALL vt0.c1, vt1.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt1.c0, v0.c0 HAVING (((SUM(vt1.c0) IN ())) ISNULL);
SELECT vt0.c1, vt1.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt1.c0, v0.c0;
SELECT ALL vt0.c1, vt1.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt1.c0, v0.c0 HAVING (SUM(vt1.c0) IN ()) UNION ALL SELECT vt0.c1, vt1.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt1.c0, v0.c0 HAVING (NOT ((SUM(vt1.c0) IN ()))) UNION ALL SELECT ALL vt0.c1, vt1.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt1.c0, v0.c0 HAVING (((SUM(vt1.c0) IN ())) ISNULL);
SELECT vt0.c1, vt1.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt1.c0, v0.c0;
SELECT MIN(vt0.c0) FROM vt1, v0, vt0 ORDER BY ((vt0.c2)+(vt0.c0));
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ('D-93Br') UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ('D-93Br'))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((('D-93Br') ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON ((((vt0.c2) NOTNULL)) NOT BETWEEN (TYPEOF(v0.c0)) AND (((vt0.c2)IS(vt0.c1))));
SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON ((((vt0.c2) NOTNULL)) NOT BETWEEN (TYPEOF(v0.c0)) AND (((vt0.c2)IS(vt0.c1)))) WHERE (((json_quote(vt0.c2))>(vt0.c1))) UNION SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON ((((vt0.c2) NOTNULL)) NOT BETWEEN (TYPEOF(v0.c0)) AND (((vt0.c2)IS(vt0.c1)))) WHERE ((NOT (((json_quote(vt0.c2))>(vt0.c1))))) UNION SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON ((((vt0.c2) NOTNULL)) NOT BETWEEN (TYPEOF(v0.c0)) AND (((vt0.c2)IS(vt0.c1)))) WHERE (((((json_quote(vt0.c2))>(vt0.c1))) ISNULL));
SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON ((((vt0.c2) NOTNULL)) NOT BETWEEN (TYPEOF(v0.c0)) AND (((vt0.c2)IS(vt0.c1))));
SELECT vt0.c1 FROM vt0, v0 NATURAL JOIN vt1 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, v0 NATURAL JOIN vt1 WHERE (((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0))) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, v0 NATURAL JOIN vt1 WHERE ((NOT (((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0))) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, v0 NATURAL JOIN vt1 WHERE (((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0))) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, v0 NATURAL JOIN vt1 GROUP BY vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.c2, v0.c0, vt0.c1 FROM vt0, vt1 CROSS JOIN v0 ON CHAR(vt1.c0 COLLATE RTRIM) GROUP BY vt1.c0, vt0.c0, vt0.c2, v0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.c2, v0.c0, vt0.c1 FROM vt0, vt1 CROSS JOIN v0 ON CHAR(vt1.c0 COLLATE RTRIM) GROUP BY vt1.c0, vt0.c0, vt0.c2, v0.c0, vt0.c1 HAVING ((GROUP_CONCAT(vt1.c0))<>(GROUP_CONCAT(TOTAL(COUNT(COUNT(TOTAL(AVG(GROUP_CONCAT(AVG(TOTAL('{+'))))))))))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.c2, v0.c0, vt0.c1 FROM vt0, vt1 CROSS JOIN v0 ON CHAR(vt1.c0 COLLATE RTRIM) GROUP BY vt1.c0, vt0.c0, vt0.c2, v0.c0, vt0.c1 HAVING (NOT (((GROUP_CONCAT(vt1.c0))!=(GROUP_CONCAT(TOTAL(COUNT(COUNT(TOTAL(AVG(GROUP_CONCAT(AVG(TOTAL('{+'))))))))))))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.c2, v0.c0, vt0.c1 FROM vt0, vt1 CROSS JOIN v0 ON CHAR(vt1.c0 COLLATE RTRIM) GROUP BY vt1.c0, vt0.c0, vt0.c2, v0.c0, vt0.c1 HAVING ((((GROUP_CONCAT(vt1.c0))<>(GROUP_CONCAT(TOTAL(COUNT(COUNT(TOTAL(AVG(GROUP_CONCAT(AVG(TOTAL('{+')))))))))))) ISNULL);
SELECT ALL * FROM vt0, v0, vt1;
SELECT * FROM vt0, v0, vt1 WHERE (((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN v0.c0 WHEN vt0.c1 THEN vt1.c0 END)OR(vt0.c2 COLLATE BINARY))) UNION ALL SELECT * FROM vt0, v0, vt1 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN v0.c0 WHEN vt0.c1 THEN vt1.c0 END)OR(vt0.c2 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM vt0, v0, vt1 WHERE (((((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN v0.c0 WHEN vt0.c1 THEN vt1.c0 END)OR(vt0.c2 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM vt0, v0, vt1;
SELECT DISTINCT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, v0 WHERE (((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))*(IFNULL(DISTINCT v0.c0, vt1.c0)))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))*(IFNULL(DISTINCT v0.c0, vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE (((((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))*(IFNULL(DISTINCT v0.c0, vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1, v0;
SELECT ALL vt0.c2, v0.c0, vt0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c2, v0.c0, vt0.c0;
SELECT vt0.c2, v0.c0, vt0.c0 FROM v0, vt1, vt0 WHERE ((NOT ((((v0.c0))>((v0.c0)))))) GROUP BY vt0.c2, v0.c0, vt0.c0 UNION SELECT vt0.c2, v0.c0, vt0.c0 FROM v0, vt1, vt0 WHERE ((NOT ((NOT ((((v0.c0))>((v0.c0)))))))) GROUP BY vt0.c2, v0.c0, vt0.c0 UNION SELECT ALL vt0.c2, v0.c0, vt0.c0 FROM v0, vt1, vt0 WHERE ((((NOT ((((v0.c0))>((v0.c0)))))) ISNULL)) GROUP BY vt0.c2, v0.c0, vt0.c0;
SELECT ALL vt0.c2, v0.c0, vt0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c2, v0.c0, vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((NOT (COUNT(COUNT(*)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((NOT (COUNT(COUNT(*))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN ((vt1.c0) ISNULL) ELSE vt1.c0 END) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CASE WHEN vt1.c0 COLLATE NOCASE THEN ((vt1.c0) ISNULL) ELSE vt1.c0 END))) UNION ALL SELECT * FROM vt1 WHERE (((CASE WHEN vt1.c0 COLLATE NOCASE THEN ((vt1.c0) ISNULL) ELSE vt1.c0 END) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) COLLATE BINARY RIGHT OUTER JOIN v0 ON CAST(CASE -1.818392662E9  WHEN vt0.c1 THEN vt0.c2 END AS REAL);
SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0 WHERE (((((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c0))) BETWEEN (((vt0.c0) NOT NULL)) AND ((~ (vt0.c0))))) GROUP BY vt0.c2, vt0.c0 UNION SELECT ALL vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c0))) BETWEEN (((vt0.c0) NOT NULL)) AND ((~ (vt0.c0))))))) GROUP BY vt0.c2, vt0.c0 UNION SELECT vt0.c2, vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c0))) BETWEEN (((vt0.c0) NOT NULL)) AND ((~ (vt0.c0))))) ISNULL)) GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (((vt1.c0) BETWEEN (vt0.c2) AND (NULL)) IN ()) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT ((((vt1.c0) BETWEEN (vt0.c2) AND (NULL)) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (((((vt1.c0) BETWEEN (vt0.c2) AND (NULL)) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (((vt1.c0) BETWEEN (vt0.c2) AND (NULL)) IN ()) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT ((((vt1.c0) BETWEEN (vt0.c2) AND (NULL)) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (((((vt1.c0) BETWEEN (vt0.c2) AND (NULL)) IN ())) ISNULL);
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON (((+ ('1522033719'))) BETWEEN (((vt0.c2) BETWEEN (vt1.c0) AND (vt0.c0))) AND ((vt1.c0 IN (v0.c0)))) CROSS JOIN vt1 ON ((((LIKELY(DISTINCT vt0.c1))AND(((vt0.c1) IS FALSE))))AND(vt0.c1));
SELECT DISTINCT vt0.c2, vt0.c1, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c2, vt0.c1, vt1.c0 FROM vt0, vt1 WHERE (((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt1.c0 END) NOT BETWEEN (((vt0.c2)>=(vt1.c0))) AND ((vt0.c0 IN ())))) UNION SELECT DISTINCT vt0.c2, vt0.c1, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt1.c0 END) NOT BETWEEN (((vt0.c2)>=(vt1.c0))) AND ((vt0.c0 IN ())))))) UNION SELECT DISTINCT vt0.c2, vt0.c1, vt1.c0 FROM vt0, vt1 WHERE (((((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt1.c0 END) NOT BETWEEN (((vt0.c2)>=(vt1.c0))) AND ((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c1, vt1.c0 FROM vt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(QUOTE(vt1.c0) AS REAL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(QUOTE(vt1.c0) AS REAL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CAST(QUOTE(vt1.c0) AS REAL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT v0.c0 FROM v0 FULL OUTER JOIN vt0 ON vt0.c2 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 FULL OUTER JOIN vt0 ON vt0.c2 GROUP BY v0.c0 HAVING GROUP_CONCAT(((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 FULL OUTER JOIN vt0 ON vt0.c2 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 FULL OUTER JOIN vt0 ON vt0.c2 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 FULL OUTER JOIN vt0 ON vt0.c2 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 FULL OUTER JOIN vt0 ON vt0.c2 GROUP BY v0.c0 HAVING GROUP_CONCAT(((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 FULL OUTER JOIN vt0 ON vt0.c2 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 FULL OUTER JOIN vt0 ON vt0.c2 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 FULL OUTER JOIN vt0 ON vt0.c2 GROUP BY v0.c0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0;
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE COLLATE NOCASE) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE COLLATE NOCASE))) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE COLLATE NOCASE) ISNULL));
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (CASE WHEN ((vt0.c1)IS NOT(v0.c0)) THEN ((v0.c0)*(vt0.c1)) ELSE ((v0.c0)LIKE(v0.c0)) END) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (CASE WHEN ((vt0.c1)IS NOT(v0.c0)) THEN ((v0.c0)*(vt0.c1)) ELSE ((v0.c0)LIKE(v0.c0)) END))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((CASE WHEN ((vt0.c1)IS NOT(v0.c0)) THEN ((v0.c0)*(vt0.c1)) ELSE ((v0.c0)LIKE(v0.c0)) END) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, vt1 GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, vt1 WHERE (CAST(CASE vt1.c0  WHEN vt0.c2 THEN v0.c0 ELSE v0.c0 END AS INTEGER)) GROUP BY v0.c0, vt0.c0, vt0.c1 UNION SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, vt1 WHERE ((NOT (CAST(CASE vt1.c0  WHEN vt0.c2 THEN v0.c0 ELSE v0.c0 END AS INTEGER)))) GROUP BY v0.c0, vt0.c0, vt0.c1 UNION SELECT v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, vt1 WHERE (((CAST(CASE vt1.c0  WHEN vt0.c2 THEN v0.c0 ELSE v0.c0 END AS INTEGER)) ISNULL)) GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, vt1 GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING COUNT(vt1.c0) COLLATE NOCASE UNION ALL SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING (NOT (COUNT(vt1.c0) COLLATE NOCASE)) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING ((COUNT(vt1.c0) COLLATE NOCASE) ISNULL);
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING COUNT(vt1.c0) COLLATE NOCASE UNION ALL SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING (NOT (COUNT(vt1.c0) COLLATE NOCASE)) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING ((COUNT(vt1.c0) COLLATE NOCASE) ISNULL);
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT vt0.c1, v0.c0, vt1.c0, vt0.c2 FROM vt0, v0, vt1;
SELECT ALL vt0.c1, v0.c0, vt1.c0, vt0.c2 FROM vt0, v0, vt1 WHERE (0.5253267913237881) UNION ALL SELECT ALL vt0.c1, v0.c0, vt1.c0, vt0.c2 FROM vt0, v0 NOT INDEXED, vt1 WHERE ((NOT (0.5253267913237881))) UNION ALL SELECT ALL vt0.c1, v0.c0, vt1.c0, vt0.c2 FROM vt0, v0, vt1 WHERE (((0.5253267913237881) ISNULL));
SELECT vt0.c1, v0.c0, vt1.c0, vt0.c2 FROM vt0, v0, vt1;
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND ('-819588295'))))) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((NOT ((NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND ('-819588295'))))))) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((((NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND ('-819588295'))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT ALL vt1.c0, vt0.c0, vt0.c1, vt0.c2, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1, vt0.c2, v0.c0;
SELECT ALL vt1.c0, vt0.c0, vt0.c1, vt0.c2, v0.c0 FROM vt1, v0, vt0 WHERE (json_extract(((vt1.c0)GLOB(vt0.c2)), (((vt1.c0)) BETWEEN ((vt0.c2)) AND ((NULL))), vt1.c0, CAST(vt0.c2 AS REAL))) GROUP BY vt1.c0, vt0.c0, vt0.c1, vt0.c2, v0.c0 UNION SELECT vt1.c0, vt0.c0, vt0.c1, vt0.c2, v0.c0 FROM vt1, v0, vt0 WHERE ((NOT (json_extract(((vt1.c0)GLOB(vt0.c2)), (((vt1.c0)) BETWEEN ((vt0.c2)) AND ((NULL))), vt1.c0, CAST(vt0.c2 AS REAL))))) GROUP BY vt1.c0, vt0.c0, vt0.c1, vt0.c2, v0.c0 UNION SELECT vt1.c0, vt0.c0, vt0.c1, vt0.c2, v0.c0 FROM vt1, v0, vt0 WHERE (((json_extract(((vt1.c0)GLOB(vt0.c2)), (((vt1.c0)) BETWEEN ((vt0.c2)) AND ((NULL))), vt1.c0, CAST(vt0.c2 AS REAL))) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt0.c1, vt0.c2, v0.c0;
SELECT ALL vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt1.c0;
SELECT ALL vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt1.c0 HAVING COUNT(517054479) COLLATE RTRIM UNION ALL SELECT ALL vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt1.c0 HAVING (NOT (COUNT(517054479) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt1.c0 HAVING ((COUNT(517054479) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt1.c0;
SELECT ALL vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt1.c0 HAVING COUNT(517054479) COLLATE RTRIM UNION ALL SELECT ALL vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt1.c0 HAVING (NOT (COUNT(517054479) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt1.c0 HAVING ((COUNT(517054479) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c2, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt1.c0;
SELECT ALL MAX(((((v0.c0)AND(((v0.c0) IS FALSE))))OR((vt1.c0 IN ())))) FROM v0, vt1 ORDER BY (((- (vt1.c0))) NOTNULL) DESC  NULLS LAST;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CASE ((vt0.c2)>(vt0.c2))  WHEN CAST('kQq' AS INTEGER) THEN vt0.c1 COLLATE RTRIM WHEN vt0.c1 THEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) WHEN vt0.c0 COLLATE BINARY THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END WHEN CAST(vt0.c1 AS INTEGER) THEN TRIM(NULL, vt0.c2) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN CAST(vt0.c2 AS REAL) END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE ((vt0.c2)>(vt0.c2))  WHEN CAST('kQq' AS INTEGER) THEN vt0.c1 COLLATE RTRIM WHEN vt0.c1 THEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) WHEN vt0.c0 COLLATE BINARY THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END WHEN CAST(vt0.c1 AS INTEGER) THEN TRIM(NULL, vt0.c2) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN CAST(vt0.c2 AS REAL) END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE ((vt0.c2)>(vt0.c2))  WHEN CAST('kQq' AS INTEGER) THEN vt0.c1 COLLATE RTRIM WHEN vt0.c1 THEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) WHEN vt0.c0 COLLATE BINARY THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END WHEN CAST(vt0.c1 AS INTEGER) THEN TRIM(NULL, vt0.c2) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN CAST(vt0.c2 AS REAL) END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((~ (0.9684373687396969))) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((NOT ((~ (0.9684373687396969))))) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((((~ (0.9684373687396969))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 WHERE ((((((vt1.c0)AND(v0.c0)))AND(v0.c0)) IN ())) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM v0, vt1 WHERE ((NOT ((((((vt1.c0)AND(v0.c0)))AND(v0.c0)) IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM v0, vt1 WHERE ((((((((vt1.c0)AND(v0.c0)))AND(v0.c0)) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT ALL v0.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt0.c1, vt0.c2;
SELECT v0.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt0.c1, vt0.c2 HAVING (~ (SUM(v0.c0))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt0.c1, vt0.c2 HAVING (NOT ((~ (SUM(v0.c0))))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt0.c1, vt0.c2 HAVING (((~ (SUM(v0.c0)))) ISNULL);
SELECT ALL v0.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt0.c1, vt0.c2;
SELECT v0.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt0.c1, vt0.c2 HAVING (~ (SUM(v0.c0))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt0.c1, vt0.c2 HAVING (NOT ((~ (SUM(v0.c0))))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt0.c1, vt0.c2 HAVING (((~ (SUM(v0.c0)))) ISNULL);
SELECT ALL v0.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt0.c1, vt0.c2;
SELECT vt1.c0, vt0.c2 FROM vt0 NATURAL JOIN vt1;
SELECT vt1.c0, vt0.c2 FROM vt0 NATURAL JOIN vt1 WHERE (CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END) UNION ALL SELECT vt1.c0, vt0.c2 FROM vt0 NATURAL JOIN vt1 WHERE ((NOT (CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END))) UNION ALL SELECT vt1.c0, vt0.c2 FROM vt0 NATURAL JOIN vt1 WHERE (((CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END) ISNULL));
SELECT vt1.c0, vt0.c2 FROM vt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, v0 WHERE ('1137404929') UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((NOT ('1137404929'))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((('1137404929') ISNULL));
SELECT DISTINCT * FROM vt1, v0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((NULL IN ())) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((NULL IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((NULL IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING CASE ((vt0.c2) NOT BETWEEN (MAX(v0.c0)) AND (v0.c0))  WHEN MAX('306227030') THEN vt0.c1 WHEN ((GROUP_CONCAT(vt0.c0))/(SUM(TOTAL(NULL)))) THEN x'b9f0' WHEN (((vt0.c0, MIN(GROUP_CONCAT(GROUP_CONCAT(vt0.c2))), vt0.c0))!=((vt0.c0, v0.c0, vt0.c1))) THEN GROUP_CONCAT(AVG(GROUP_CONCAT(vt0.c0))) ELSE MAX(vt0.c0) END UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING (NOT (CASE ((vt0.c2) NOT BETWEEN (MAX(v0.c0)) AND (v0.c0))  WHEN MAX('306227030') THEN vt0.c1 WHEN ((GROUP_CONCAT(vt0.c0))/(SUM(TOTAL(NULL)))) THEN x'b9f0' WHEN (((vt0.c0, MIN(GROUP_CONCAT(GROUP_CONCAT(vt0.c2))), vt0.c0))<>((vt0.c0, v0.c0, vt0.c1))) THEN GROUP_CONCAT(AVG(GROUP_CONCAT(vt0.c0))) ELSE MAX(vt0.c0) END)) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING ((CASE ((vt0.c2) NOT BETWEEN (MAX(v0.c0)) AND (v0.c0))  WHEN MAX('306227030') THEN vt0.c1 WHEN ((GROUP_CONCAT(vt0.c0))/(SUM(TOTAL(NULL)))) THEN x'b9f0' WHEN (((vt0.c0, MIN(GROUP_CONCAT(GROUP_CONCAT(vt0.c2))), vt0.c0))!=((vt0.c0, v0.c0, vt0.c1))) THEN GROUP_CONCAT(AVG(GROUP_CONCAT(vt0.c0))) ELSE MAX(vt0.c0) END) ISNULL);
SELECT v0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, v0;
SELECT v0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, v0 WHERE ((- (x''))) UNION ALL SELECT ALL v0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, v0 WHERE ((NOT ((- (x''))))) UNION ALL SELECT ALL v0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, v0 WHERE ((((- (x''))) ISNULL));
SELECT v0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (CASE CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt1.c0 END  WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (3.65704693E8)) THEN ((vt1.c0) IS FALSE) WHEN ((vt0.c1)IS(vt1.c0)) THEN vt0.c0 WHEN ((vt0.c1)>>(vt1.c0)) THEN CAST(vt0.c0 AS INTEGER) ELSE TRIM(NULL, vt1.c0) END) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((NOT (CASE CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt1.c0 END  WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (3.65704693E8)) THEN ((vt1.c0) IS FALSE) WHEN ((vt0.c1)IS(vt1.c0)) THEN vt0.c0 WHEN ((vt0.c1)>>(vt1.c0)) THEN CAST(vt0.c0 AS INTEGER) ELSE TRIM(NULL, vt1.c0) END))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (((CASE CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt1.c0 END  WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (3.65704693E8)) THEN ((vt1.c0) IS FALSE) WHEN ((vt0.c1)IS(vt1.c0)) THEN vt0.c0 WHEN ((vt0.c1)>>(vt1.c0)) THEN CAST(vt0.c0 AS INTEGER) ELSE TRIM(NULL, vt1.c0) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT vt0.c2, vt0.c1 FROM v0, vt1, vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM v0, vt1, vt0 WHERE ('') GROUP BY vt0.c2, vt0.c1 UNION SELECT vt0.c2, vt0.c1 FROM v0, vt1, vt0 WHERE ((NOT (''))) GROUP BY vt0.c2, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c1 FROM v0, vt1, vt0 WHERE ((('') ISNULL)) GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM v0, vt1, vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt0 LEFT OUTER JOIN vt1 ON CASE ((vt0.c2) NOT BETWEEN (-1009751910) AND (vt0.c0))  WHEN ((vt0.c0)%(vt0.c1)) THEN ((((vt0.c2)OR(vt0.c1)))AND(vt1.c0)) END GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt0 LEFT OUTER JOIN vt1 ON CASE ((vt0.c2) NOT BETWEEN (-1009751910) AND (vt0.c0))  WHEN ((vt0.c0)%(vt0.c1)) THEN ((((vt0.c2)OR(vt0.c1)))AND(vt1.c0)) END GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2 HAVING SUM(TOTAL(TOTAL(TOTAL(vt1.c0)))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt0 LEFT OUTER JOIN vt1 ON CASE ((vt0.c2) NOT BETWEEN (-1009751910) AND (vt0.c0))  WHEN ((vt0.c0)%(vt0.c1)) THEN ((((vt0.c2)OR(vt0.c1)))AND(vt1.c0)) END GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2 HAVING (NOT (SUM(TOTAL(TOTAL(TOTAL(vt1.c0)))))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c1, vt0.c2 FROM vt0 LEFT OUTER JOIN vt1 ON CASE ((vt0.c2) NOT BETWEEN (-1009751910) AND (vt0.c0))  WHEN ((vt0.c0)%(vt0.c1)) THEN ((((vt0.c2)OR(vt0.c1)))AND(vt1.c0)) END GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2 HAVING ((SUM(TOTAL(TOTAL(TOTAL(vt1.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, vt1, v0;
SELECT ALL vt0.c0 FROM vt0, vt1, v0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0))) END) UNION ALL SELECT vt0.c0 FROM vt0, vt1, v0 WHERE ((NOT (CASE WHEN (vt0.c0 IN ()) THEN (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0))) END))) UNION ALL SELECT vt0.c0 FROM vt0, vt1, v0 WHERE (((CASE WHEN (vt0.c0 IN ()) THEN (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0))) END) ISNULL));
SELECT ALL vt0.c0 FROM vt0, vt1, v0;
SELECT DISTINCT vt0.c1, vt1.c0 FROM v0 INNER JOIN vt1 ON ((v0.c0 IN ()) IN ()) FULL OUTER JOIN vt0 ON (((vt0.c1) NOTNULL) IN ());
SELECT DISTINCT vt0.c1, vt1.c0 FROM v0 INNER JOIN vt1 ON ((v0.c0 IN ()) IN ()) FULL OUTER JOIN vt0 ON (((vt0.c1) NOTNULL) IN ()) WHERE ('' COLLATE BINARY) UNION SELECT DISTINCT vt0.c1, vt1.c0 FROM v0 INNER JOIN vt1 ON ((v0.c0 IN ()) IN ()) FULL OUTER JOIN vt0 ON (((vt0.c1) NOTNULL) IN ()) WHERE ((NOT ('' COLLATE BINARY))) UNION SELECT DISTINCT vt0.c1, vt1.c0 FROM v0 INNER JOIN vt1 ON ((v0.c0 IN ()) IN ()) FULL OUTER JOIN vt0 ON (((vt0.c1) NOTNULL) IN ()) WHERE ((('' COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c1, vt1.c0 FROM v0 INNER JOIN vt1 ON ((v0.c0 IN ()) IN ()) FULL OUTER JOIN vt0 ON (((vt0.c1) NOTNULL) IN ());
SELECT ALL v0.c0, vt1.c0, vt0.c2, vt0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0, vt0.c2, vt0.c0;
SELECT ALL v0.c0, vt1.c0, vt0.c2, vt0.c0 FROM vt0, vt1, v0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) GROUP BY v0.c0, vt1.c0, vt0.c2, vt0.c0 UNION SELECT v0.c0, vt1.c0, vt0.c2, vt0.c0 FROM vt0, vt1, v0 WHERE ((NOT ((vt0.c0 IN ()) COLLATE RTRIM))) GROUP BY v0.c0, vt1.c0, vt0.c2, vt0.c0 UNION SELECT v0.c0, vt1.c0, vt0.c2, vt0.c0 FROM vt0, vt1, v0 WHERE ((((vt0.c0 IN ()) COLLATE RTRIM) ISNULL)) GROUP BY v0.c0, vt1.c0, vt0.c2, vt0.c0;
SELECT ALL v0.c0, vt1.c0, vt0.c2, vt0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0, vt0.c2, vt0.c0;
SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c0 HAVING '0.960955651639576' UNION ALL SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c0 HAVING (NOT ('0.960955651639576')) UNION ALL SELECT v0.c0, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c0 HAVING (('0.960955651639576') ISNULL);
SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c0 HAVING '0.960955651639576' UNION ALL SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c0 HAVING (NOT ('0.960955651639576')) UNION ALL SELECT v0.c0, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c0 HAVING (('0.960955651639576') ISNULL);
SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CASE ((0.49886133218009865)*(vt0.c0))  WHEN ((((((((vt0.c2)AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c1 ELSE ((((vt0.c2)OR(vt0.c0)))OR(vt0.c2)) END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE ((0.49886133218009865)*(vt0.c0))  WHEN ((((((((vt0.c2)AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c1 ELSE ((((vt0.c2)OR(vt0.c0)))OR(vt0.c2)) END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE ((0.49886133218009865)*(vt0.c0))  WHEN ((((((((vt0.c2)AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c1 ELSE ((((vt0.c2)OR(vt0.c0)))OR(vt0.c2)) END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)/(vt1.c0)))=(CAST(vt1.c0 AS REAL)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0)/(vt1.c0)))=(CAST(vt1.c0 AS REAL)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)/(vt1.c0)))==(CAST(vt1.c0 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c2, v0.c0, vt0.c1 FROM vt0, v0 FULL OUTER JOIN vt1 ON CASE json_array(v0.c0, vt0.c1)  WHEN ((vt1.c0)*('0.22019270403561853')) THEN ABS(vt0.c1) END GROUP BY vt0.c2, v0.c0, vt0.c1;
SELECT ALL vt0.c2, v0.c0, vt0.c1 FROM vt0, v0 FULL OUTER JOIN vt1 ON CASE json_array(v0.c0, vt0.c1)  WHEN ((vt1.c0)*('0.22019270403561853')) THEN ABS(vt0.c1) END WHERE (((((vt1.c0, vt1.c0, vt0.c2))<((vt1.c0, v0.c0, vt0.c2))) IN ())) GROUP BY vt0.c2, v0.c0, vt0.c1 UNION SELECT ALL vt0.c2, v0.c0, vt0.c1 FROM vt0, v0 FULL OUTER JOIN vt1 ON CASE json_array(v0.c0, vt0.c1)  WHEN ((vt1.c0)*('0.22019270403561853')) THEN ABS(vt0.c1) END WHERE ((NOT (((((vt1.c0, vt1.c0, vt0.c2))<((vt1.c0, v0.c0, vt0.c2))) IN ())))) GROUP BY vt0.c2, v0.c0, vt0.c1 UNION SELECT vt0.c2, v0.c0, vt0.c1 FROM vt0, v0 FULL OUTER JOIN vt1 ON CASE json_array(v0.c0, vt0.c1)  WHEN ((vt1.c0)*('0.22019270403561853')) THEN ABS(vt0.c1) END WHERE (((((((vt1.c0, vt1.c0, vt0.c2))<((vt1.c0, v0.c0, vt0.c2))) IN ())) ISNULL)) GROUP BY vt0.c2, v0.c0, vt0.c1;
SELECT ALL vt0.c2, v0.c0, vt0.c1 FROM vt0, v0 FULL OUTER JOIN vt1 ON CASE json_array(v0.c0, vt0.c1)  WHEN ((vt1.c0)*('0.22019270403561853')) THEN ABS(vt0.c1) END GROUP BY vt0.c2, v0.c0, vt0.c1;
SELECT vt1.c0, v0.c0, vt0.c1 FROM v0, vt1, vt0 GROUP BY vt1.c0, v0.c0, vt0.c1;
SELECT ALL vt1.c0, v0.c0, vt0.c1 FROM v0, vt1, vt0 GROUP BY vt1.c0, v0.c0, vt0.c1 HAVING (((NOT (COUNT(*))))>>(((((COUNT(*))AND(COUNT(MAX(SUM(vt0.c1))))))OR(MIN(COUNT(v0.c0)))))) UNION ALL SELECT ALL vt1.c0, v0.c0, vt0.c1 FROM v0, vt1, vt0 GROUP BY vt1.c0, v0.c0, vt0.c1 HAVING (NOT ((((NOT (COUNT(*))))>>(((((COUNT(*))AND(COUNT(MAX(SUM(vt0.c1))))))OR(MIN(COUNT(v0.c0)))))))) UNION ALL SELECT ALL vt1.c0, v0.c0, vt0.c1 FROM v0, vt1, vt0 GROUP BY vt1.c0, v0.c0, vt0.c1 HAVING (((((NOT (COUNT(*))))>>(((((COUNT(*))AND(COUNT(MAX(SUM(vt0.c1))))))OR(MIN(COUNT(v0.c0))))))) ISNULL);
SELECT ALL MAX((vt1.c0 COLLATE RTRIM IN ())) FROM v0, vt0, vt1 ORDER BY ((CASE WHEN vt0.c2 THEN vt0.c0 ELSE 0.5810620932378321 END) ISNULL);
SELECT * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c0, vt0.c2, v0.c0)) BETWEEN (((vt0.c2 IN ()), ((vt0.c0) IS FALSE), CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c2 THEN v0.c0 ELSE vt0.c1 END)) AND (((((v0.c0))>((vt0.c2))), (NOT (v0.c0)), ((v0.c0)IS NOT(vt0.c0)))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT ((((v0.c0, vt0.c2, v0.c0)) BETWEEN (((vt0.c2 IN ()), ((vt0.c0) IS FALSE), CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c2 THEN v0.c0 ELSE vt0.c1 END)) AND (((((v0.c0))>((vt0.c2))), (NOT (v0.c0)), ((v0.c0)IS NOT(vt0.c0)))))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((((((v0.c0, vt0.c2, v0.c0)) BETWEEN (((vt0.c2 IN ()), ((vt0.c0) IS FALSE), CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c2 THEN v0.c0 ELSE vt0.c1 END)) AND (((((v0.c0))>((vt0.c2))), (NOT (v0.c0)), ((v0.c0)IS NOT(vt0.c0)))))) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0, vt0.c2, vt0.c1, vt1.c0 FROM vt1 CROSS JOIN vt0 ON CASE ((vt0.c1)=(v0.c0))  WHEN (v0.c0 IN ()) THEN (((vt1.c0, vt0.c1, '-1207372531'))>=(('-1049156854', vt0.c2, vt0.c0))) WHEN '1205266745' THEN 0.9219208605850613 WHEN ((((vt1.c0)AND(vt0.c1)))OR(vt0.c2)) THEN x'' END RIGHT OUTER JOIN v0 ON (((vt1.c0) IS FALSE) IN ());
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((('巗Z', v0.c0, v0.c0))>((v0.c0, v0.c0, '-1818392662')))))=(('')))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((((('巗Z', v0.c0, v0.c0))>((v0.c0, v0.c0, '-1818392662')))))=(('')))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((((('巗Z', v0.c0, v0.c0))>((v0.c0, v0.c0, '-1818392662')))))==(('')))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 FULL OUTER JOIN v0 ON (((+ (vt0.c0)))||(vt0.c2)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 FULL OUTER JOIN v0 ON (((+ (vt0.c0)))||(vt0.c2)) GROUP BY vt0.c0 HAVING TOTAL(AVG(vt0.c1)) UNION ALL SELECT vt0.c0 FROM vt1, vt0 FULL OUTER JOIN v0 ON (((+ (vt0.c0)))||(vt0.c2)) GROUP BY vt0.c0 HAVING (NOT (TOTAL(AVG(vt0.c1)))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 FULL OUTER JOIN v0 ON (((+ (vt0.c0)))||(vt0.c2)) GROUP BY vt0.c0 HAVING ((TOTAL(AVG(vt0.c1))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (TRIM(((((v0.c0)AND(v0.c0)))OR(v0.c0)))) UNION ALL SELECT * FROM v0 WHERE ((NOT (TRIM(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))) UNION ALL SELECT * FROM v0 WHERE (((TRIM(((((v0.c0)AND(v0.c0)))OR(v0.c0)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt1, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt1, vt0 WHERE (vt0.c2) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt1, vt0 WHERE ((NOT (vt0.c2))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt1, vt0 WHERE (((vt0.c2) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt1, vt0;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c0, vt0.c2, vt0.c1, vt0.c1)) NOT BETWEEN (((((vt1.c0, vt0.c2, vt0.c2)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c1)) AND ((vt0.c0, '', vt0.c2))), '0.5253267913237881', CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END, vt0.c0, CASE vt0.c1  WHEN vt0.c1 THEN x'' ELSE vt0.c0 END)) AND ((((vt1.c0)LIKE(vt0.c0)), vt0.c1 COLLATE RTRIM, (vt1.c0 IN (vt0.c0)), vt0.c1 COLLATE RTRIM, ((vt1.c0) ISNULL))))) GROUP BY vt0.c0, vt0.c1, vt0.c2 UNION SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0, vt1 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c2, vt0.c1, vt0.c1)) NOT BETWEEN (((((vt1.c0, vt0.c2, vt0.c2)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c1)) AND ((vt0.c0, '', vt0.c2))), '0.5253267913237881', CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END, vt0.c0, CASE vt0.c1  WHEN vt0.c1 THEN x'' ELSE vt0.c0 END)) AND ((((vt1.c0)LIKE(vt0.c0)), vt0.c1 COLLATE RTRIM, (vt1.c0 IN (vt0.c0)), vt0.c1 COLLATE RTRIM, ((vt1.c0) ISNULL))))))) GROUP BY vt0.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0, vt1 WHERE ((((((vt0.c0, vt0.c0, vt0.c2, vt0.c1, vt0.c1)) NOT BETWEEN (((((vt1.c0, vt0.c2, vt0.c2)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c1)) AND ((vt0.c0, '', vt0.c2))), '0.5253267913237881', CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END, vt0.c0, CASE vt0.c1  WHEN vt0.c1 THEN x'' ELSE vt0.c0 END)) AND ((((vt1.c0)LIKE(vt0.c0)), vt0.c1 COLLATE RTRIM, (vt1.c0 IN (vt0.c0)), vt0.c1 COLLATE RTRIM, ((vt1.c0) ISNULL))))) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT v0.c0 FROM v0 CROSS JOIN vt1 ON 0.5321875503900857 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 CROSS JOIN vt1 ON 0.5321875503900857 GROUP BY v0.c0 HAVING TOTAL(TOTAL(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 CROSS JOIN vt1 ON 0.5321875503900857 GROUP BY v0.c0 HAVING (NOT (TOTAL(TOTAL(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 CROSS JOIN vt1 ON 0.5321875503900857 GROUP BY v0.c0 HAVING ((TOTAL(TOTAL(v0.c0))) ISNULL);
SELECT ALL TOTAL(((((x'')/(vt1.c0))) NOTNULL)) FROM v0, vt0, vt1;
SELECT vt0.c0, vt0.c2 FROM vt0, v0 NOT INDEXED, vt1;
SELECT ALL vt0.c0, vt0.c2 FROM vt0, v0, vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN (~ (vt1.c0)) END) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0, v0, vt1 WHERE ((NOT (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN (~ (vt1.c0)) END))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0, v0, vt1 WHERE (((CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN (~ (vt1.c0)) END) ISNULL));
SELECT vt0.c0, vt0.c2 FROM vt0, v0 NOT INDEXED, vt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (LTRIM(0x3ed96c61)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((NOT (LTRIM(0x3ed96c61)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((NOT (LTRIM(0x3ed96c61)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE BINARY)OR(vt1.c0)))OR(356978616))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0 COLLATE BINARY)OR(vt1.c0)))OR(356978616))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0 COLLATE BINARY)OR(vt1.c0)))OR(356978616))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((COUNT(*))*(COUNT(COUNT(*)))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 NOT INDEXED GROUP BY v0.c0 HAVING (NOT (((COUNT(*))*(COUNT(COUNT(*)))))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((((COUNT(*))*(COUNT(COUNT(*))))) ISNULL);
SELECT ALL * FROM vt1, v0, vt0;
SELECT * FROM vt1, v0, vt0 WHERE (vt0.c2 COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt1, v0, vt0 WHERE ((NOT (vt0.c2 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt1, v0, vt0 WHERE (((vt0.c2 COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt0, vt1, v0;
SELECT DISTINCT * FROM vt0, vt1, v0 WHERE ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), (- (vt0.c1)), (- (v0.c0))))>=((vt0.c0 COLLATE BINARY, (vt0.c1 IN ()), (((vt0.c0))>((vt0.c2))))))) UNION SELECT DISTINCT * FROM vt0, vt1, v0 WHERE ((NOT ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), (- (vt0.c1)), (- (v0.c0))))>=((vt0.c0 COLLATE BINARY, (vt0.c1 IN ()), (((vt0.c0))>((vt0.c2))))))))) UNION SELECT DISTINCT * FROM vt0, vt1, v0 WHERE ((((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), (- (vt0.c1)), (- (v0.c0))))>=((vt0.c0 COLLATE BINARY, (vt0.c1 IN ()), (((vt0.c0))>((vt0.c2))))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, v0;
SELECT vt0.c0, vt0.c2 FROM vt1 FULL OUTER JOIN vt0 ON ((json_array(vt0.c2, vt1.c0))*(((v0.c0)-(vt0.c0)))) CROSS JOIN v0 ON CASE vt0.c2  WHEN ((vt0.c0)OR(vt0.c2)) THEN NULL ELSE (((''))==((v0.c0))) END GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c2, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1, vt1.c0;
SELECT vt0.c2, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c2, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1, vt1.c0;
SELECT vt0.c2, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c2, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1, vt1.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 WHERE (v0.c0) UNION ALL SELECT vt1.c0, v0.c0 FROM v0, vt1 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 WHERE (((v0.c0) ISNULL));
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt0 RIGHT OUTER JOIN vt1 ON ((((CASE x''  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)AND(((((vt0.c1)OR(0xffffffffcd1305e9)))AND(v0.c0)))))AND(((vt1.c0) NOT NULL)));
SELECT DISTINCT * FROM v0, vt0 RIGHT OUTER JOIN vt1 ON ((((CASE x''  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)AND(((((vt0.c1)OR(0Xffffffffcd1305e9)))AND(v0.c0)))))AND(((vt1.c0) NOT NULL))) WHERE (NULL) UNION SELECT DISTINCT * FROM v0, vt0 RIGHT OUTER JOIN vt1 ON ((((CASE x''  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)AND(((((vt0.c1)OR(0Xffffffffcd1305e9)))AND(v0.c0)))))AND(((vt1.c0) NOT NULL))) WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM v0, vt0 RIGHT OUTER JOIN vt1 ON ((((CASE x''  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)AND(((((vt0.c1)OR(0xffffffffcd1305e9)))AND(v0.c0)))))AND(((vt1.c0) NOT NULL))) WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM v0, vt0 RIGHT OUTER JOIN vt1 ON ((((CASE x''  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)AND(((((vt0.c1)OR(0xffffffffcd1305e9)))AND(v0.c0)))))AND(((vt1.c0) NOT NULL)));
SELECT ALL v0.c0, vt0.c0, vt0.c2, vt0.c1 FROM v0, vt0 GROUP BY v0.c0, vt0.c0, vt0.c2, vt0.c1;
SELECT ALL v0.c0, vt0.c0, vt0.c2, vt0.c1 FROM v0, vt0 WHERE (((v0.c0 COLLATE RTRIM) NOTNULL)) GROUP BY v0.c0, vt0.c0, vt0.c2, vt0.c1 UNION SELECT v0.c0, vt0.c0, vt0.c2, vt0.c1 FROM v0, vt0 WHERE ((NOT (((v0.c0 COLLATE RTRIM) NOTNULL)))) GROUP BY v0.c0, vt0.c0, vt0.c2, vt0.c1 UNION SELECT ALL v0.c0, vt0.c0, vt0.c2, vt0.c1 FROM v0, vt0 WHERE (((((v0.c0 COLLATE RTRIM) NOTNULL)) ISNULL)) GROUP BY v0.c0, vt0.c0, vt0.c2, vt0.c1;
SELECT ALL v0.c0, vt0.c0, vt0.c2, vt0.c1 FROM v0, vt0 GROUP BY v0.c0, vt0.c0, vt0.c2, vt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (~ (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((~ (COUNT(*))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((~ (COUNT(*)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (~ (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((~ (COUNT(*))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((~ (COUNT(*)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT TOTAL(IFNULL(((((((((vt0.c1)OR(0.687973048150844)))AND(vt1.c0)))OR(vt0.c2)))AND(vt0.c1)), 0.6359264250845008)) FROM vt0, vt1;
SELECT ALL vt0.c0 FROM vt1 NOT INDEXED NATURAL JOIN vt0;
SELECT vt0.c0 FROM vt1 NATURAL JOIN vt0 WHERE ('ub[WfE^') UNION ALL SELECT ALL vt0.c0 FROM vt1 NATURAL JOIN vt0 WHERE ((NOT ('ub[WfE^'))) UNION ALL SELECT ALL vt0.c0 FROM vt1 NATURAL JOIN vt0 WHERE ((('ub[WfE^') ISNULL));
SELECT ALL vt0.c0 FROM vt1 NOT INDEXED NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt0, vt1, v0;
SELECT DISTINCT * FROM vt0, vt1, v0 WHERE ((((('-1049156854')*(vt0.c2))) BETWEEN (((v0.c0) BETWEEN (vt0.c2) AND (vt0.c1))) AND (NULL))) UNION SELECT DISTINCT * FROM vt0, vt1, v0 NOT INDEXED WHERE ((NOT ((((('-1049156854')*(vt0.c2))) BETWEEN (((v0.c0) BETWEEN (vt0.c2) AND (vt0.c1))) AND (NULL))))) UNION SELECT DISTINCT * FROM vt0, vt1, v0 WHERE ((((((('-1049156854')*(vt0.c2))) BETWEEN (((v0.c0) BETWEEN (vt0.c2) AND (vt0.c1))) AND (NULL))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, v0;
SELECT v0.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN (- (v0.c0)) THEN LIKELIHOOD(vt0.c0, 0.2671120993099494) ELSE (NULL IN ()) END CROSS JOIN vt1 ON (((+ (vt1.c0)))IS(vt0.c1)) GROUP BY v0.c0, vt0.c0, vt0.c2, vt0.c1;
SELECT v0.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN (- (v0.c0)) THEN LIKELIHOOD(vt0.c0, 0.2671120993099494) ELSE (NULL IN ()) END CROSS JOIN vt1 ON (((+ (vt1.c0)))IS(vt0.c1)) WHERE (((MAX(v0.c0, vt0.c2)) IS TRUE)) GROUP BY v0.c0, vt0.c0, vt0.c2, vt0.c1 UNION SELECT v0.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN (- (v0.c0)) THEN LIKELIHOOD(vt0.c0, 0.2671120993099494) ELSE (NULL IN ()) END CROSS JOIN vt1 ON (((+ (vt1.c0)))IS(vt0.c1)) WHERE ((NOT (((MAX(v0.c0, vt0.c2)) IS TRUE)))) GROUP BY v0.c0, vt0.c0, vt0.c2, vt0.c1 UNION SELECT v0.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN (- (v0.c0)) THEN LIKELIHOOD(vt0.c0, 0.2671120993099494) ELSE (NULL IN ()) END CROSS JOIN vt1 ON (((+ (vt1.c0)))IS(vt0.c1)) WHERE (((((MAX(v0.c0, vt0.c2)) IS TRUE)) ISNULL)) GROUP BY v0.c0, vt0.c0, vt0.c2, vt0.c1;
SELECT v0.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN (- (v0.c0)) THEN LIKELIHOOD(vt0.c0, 0.2671120993099494) ELSE (NULL IN ()) END CROSS JOIN vt1 ON (((+ (vt1.c0)))IS(vt0.c1)) GROUP BY v0.c0, vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt0.c1 HAVING ((COUNT(MIN(MAX(vt0.c1))))<=(0Xffffffff83298783)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((COUNT(MIN(MAX(vt0.c1))))<=(0Xffffffff83298783)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt0.c1 HAVING ((((COUNT(MIN(MAX(vt0.c1))))<=(0Xffffffff83298783))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((vt0.c2 IN (vt0.c1)) COLLATE NOCASE COLLATE BINARY) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((vt0.c2 IN (vt0.c1)) COLLATE NOCASE COLLATE BINARY))) UNION ALL SELECT * FROM vt0 WHERE ((((vt0.c2 IN (vt0.c1)) COLLATE NOCASE COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (1504194973) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (1504194973))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((1504194973) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 WHERE ((NOT ((NOT (vt1.c0))))) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM v0, vt1 WHERE ((NOT ((NOT ((NOT (vt1.c0))))))) GROUP BY vt1.c0, v0.c0 UNION SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 WHERE ((((NOT ((NOT (vt1.c0))))) ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (~ (AVG(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (NOT ((~ (AVG(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (((~ (AVG(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (~ (AVG(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (NOT ((~ (AVG(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (((~ (AVG(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0;
SELECT vt1.c0 FROM vt1, v0 WHERE (((vt1.c0) NOTNULL)) UNION ALL SELECT vt1.c0 FROM vt1, v0 WHERE ((NOT (((vt1.c0) NOTNULL)))) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 WHERE (((((vt1.c0) NOTNULL)) ISNULL));
SELECT vt1.c0 FROM vt1, v0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CASE WHEN ((vt0.c0)<>(vt0.c2)) THEN (vt0.c1 IN ()) END) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (CASE WHEN ((vt0.c0)!=(vt0.c2)) THEN (vt0.c1 IN ()) END))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((CASE WHEN ((vt0.c0)!=(vt0.c2)) THEN (vt0.c1 IN ()) END) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM v0, vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM v0, vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (~ (((COUNT(v0.c0)) BETWEEN (COUNT(*)) AND (v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((~ (((COUNT(v0.c0)) BETWEEN (COUNT(*)) AND (v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((~ (((COUNT(v0.c0)) BETWEEN (COUNT(*)) AND (v0.c0))))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (~ (((COUNT(v0.c0)) BETWEEN (COUNT(*)) AND (v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((~ (((COUNT(v0.c0)) BETWEEN (COUNT(*)) AND (v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((~ (((COUNT(v0.c0)) BETWEEN (COUNT(*)) AND (v0.c0))))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c1, vt0.c0, vt0.c2, vt1.c0 FROM vt1 NOT INDEXED, vt0, v0;
SELECT vt0.c1, vt0.c0, vt0.c2, vt1.c0 FROM vt1, vt0, v0 WHERE (((((((((vt0.c1)AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(vt1.c0)) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2, vt1.c0 FROM vt1, vt0, v0 WHERE ((NOT (((((((((vt0.c1)AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(vt1.c0)) COLLATE RTRIM))) UNION ALL SELECT vt0.c1, vt0.c0, vt0.c2, vt1.c0 FROM vt1, vt0, v0 WHERE (((((((((((vt0.c1)AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT vt0.c1, vt0.c0, vt0.c2, vt1.c0 FROM vt1 NOT INDEXED, vt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((2.1617365E7 IN ())) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((2.1617365E7 IN ())))) UNION SELECT DISTINCT * FROM v0 WHERE ((((2.1617365E7 IN ())) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM v0, vt1 WHERE (CASE ((vt1.c0) IS TRUE)  WHEN ((v0.c0)<>(v0.c0)) THEN '' COLLATE NOCASE END) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 WHERE ((NOT (CASE ((vt1.c0) IS TRUE)  WHEN ((v0.c0)!=(v0.c0)) THEN '' COLLATE NOCASE END))) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM v0 NOT INDEXED, vt1 WHERE (((CASE ((vt1.c0) IS TRUE)  WHEN ((v0.c0)!=(v0.c0)) THEN '' COLLATE NOCASE END) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c0;
SELECT ALL vt0.c2, vt0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c2, vt0.c1, v0.c0;
SELECT vt0.c2, vt0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c2, vt0.c1, v0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c2, vt0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c2, vt0.c1, v0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c2, vt0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c2, vt0.c1, v0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c2, vt0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c2, vt0.c1, v0.c0;
SELECT vt0.c2, vt0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c2, vt0.c1, v0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c2, vt0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c2, vt0.c1, v0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c2, vt0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c2, vt0.c1, v0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt0.c2, vt0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c2, vt0.c1, v0.c0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((v0.c0) IS TRUE) COLLATE NOCASE) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((v0.c0) IS TRUE) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM v0 WHERE (((((v0.c0) IS TRUE) COLLATE NOCASE) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT vt0.c2 FROM vt1, vt0;
SELECT DISTINCT vt0.c2 FROM vt1, vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (-1964107808)) AS INTEGER)) UNION SELECT DISTINCT vt0.c2 FROM vt1, vt0 WHERE ((NOT (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (-1964107808)) AS INTEGER)))) UNION SELECT DISTINCT vt0.c2 FROM vt1, vt0 WHERE (((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (-1964107808)) AS INTEGER)) ISNULL));
SELECT DISTINCT vt0.c2 FROM vt1, vt0;
SELECT ALL vt0.c2, v0.c0, vt0.c0 FROM v0, vt0 GROUP BY vt0.c2, v0.c0, vt0.c0;
SELECT vt0.c2, v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((- (x''))) ISNULL)) GROUP BY vt0.c2, v0.c0, vt0.c0 UNION SELECT vt0.c2, v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT ((((- (x''))) ISNULL)))) GROUP BY vt0.c2, v0.c0, vt0.c0 UNION SELECT ALL vt0.c2, v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((((- (x''))) ISNULL)) ISNULL)) GROUP BY vt0.c2, v0.c0, vt0.c0;
SELECT ALL vt0.c2, v0.c0, vt0.c0 FROM v0, vt0 GROUP BY vt0.c2, v0.c0, vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (+ ((v0.c0 IN (v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((+ ((v0.c0 IN (v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((+ ((v0.c0 IN (v0.c0))))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (+ ((v0.c0 IN (v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((+ ((v0.c0 IN (v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((+ ((v0.c0 IN (v0.c0))))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE ((vt1.c0 IN ((~ (vt1.c0))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((vt1.c0 IN ((~ (vt1.c0))))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0 IN ((~ (vt1.c0))))) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0) IS FALSE))OR(((vt1.c0) NOT NULL))))AND(CASE WHEN 1657828595 THEN vt1.c0 ELSE vt1.c0 END))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((vt1.c0) IS FALSE))OR(((vt1.c0) NOT NULL))))AND(CASE WHEN 1657828595 THEN vt1.c0 ELSE vt1.c0 END))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c0) IS FALSE))OR(((vt1.c0) NOT NULL))))AND(CASE WHEN 1657828595 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt1, v0, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt1, v0, vt0 WHERE (((0.9323584889650842) NOTNULL)) GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2 UNION SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt1, v0, vt0 WHERE ((NOT (((0.9323584889650842) NOTNULL)))) GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2 UNION SELECT vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt1, v0, vt0 WHERE (((((0.9323584889650842) NOTNULL)) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt1, v0, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2;
SELECT vt1.c0, v0.c0, vt0.c1, vt0.c0 FROM vt1 CROSS JOIN v0 ON ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))>>(TRIM(v0.c0))) RIGHT OUTER JOIN vt0 ON CASE WHEN ((NULL)>(vt0.c0)) THEN (vt0.c1 IN (vt0.c2, vt0.c2)) WHEN vt0.c2 COLLATE BINARY THEN (vt1.c0 IN (vt1.c0, vt0.c2)) WHEN ((vt0.c1)||(vt0.c1)) THEN ((vt0.c0)AND(v0.c0)) ELSE vt0.c2 END GROUP BY vt1.c0, v0.c0, vt0.c1, vt0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CASE MIN(v0.c0, x'', v0.c0, v0.c0)  WHEN ((v0.c0)<=(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN NULL WHEN NULL THEN IFNULL(DISTINCT v0.c0, v0.c0) ELSE ((v0.c0)/(v0.c0)) END) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CASE MIN(v0.c0, x'', v0.c0, v0.c0)  WHEN ((v0.c0)<=(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN NULL WHEN NULL THEN IFNULL(DISTINCT v0.c0, v0.c0) ELSE ((v0.c0)/(v0.c0)) END))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CASE MIN(v0.c0, x'', v0.c0, v0.c0)  WHEN ((v0.c0)<=(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN NULL WHEN NULL THEN IFNULL(DISTINCT v0.c0, v0.c0) ELSE ((v0.c0)/(v0.c0)) END) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt1, v0, vt0 WHERE (((NULL) NOTNULL)) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((NOT (((NULL) NOTNULL)))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE (((((NULL) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) NOT NULL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) NOT NULL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) NOT NULL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt0.c1, v0.c0, vt0.c0, vt0.c2 FROM vt1 RIGHT OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN ((((v0.c0) IS TRUE))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))))) INNER JOIN vt0 ON PRINTF(vt0.c1, (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0 COLLATE BINARY) GROUP BY vt1.c0, vt0.c1, v0.c0, vt0.c0, vt0.c2;
SELECT ALL vt1.c0 FROM vt1, vt0, v0;
SELECT vt1.c0 FROM vt1, vt0, v0 WHERE (CASE 0.9684373687396969  WHEN (((vt0.c0))<=((vt0.c2))) THEN v0.c0 COLLATE RTRIM WHEN '-239670685' THEN vt1.c0 COLLATE RTRIM WHEN ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)) THEN vt0.c1 ELSE (((vt0.c0))>((vt1.c0))) END) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0, v0 WHERE ((NOT (CASE 0.9684373687396969  WHEN (((vt0.c0))<=((vt0.c2))) THEN v0.c0 COLLATE RTRIM WHEN '-239670685' THEN vt1.c0 COLLATE RTRIM WHEN ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)) THEN vt0.c1 ELSE (((vt0.c0))>((vt1.c0))) END))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0, v0 WHERE (((CASE 0.9684373687396969  WHEN (((vt0.c0))<=((vt0.c2))) THEN v0.c0 COLLATE RTRIM WHEN '-239670685' THEN vt1.c0 COLLATE RTRIM WHEN ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)) THEN vt0.c1 ELSE (((vt0.c0))>((vt1.c0))) END) ISNULL));
SELECT ALL vt1.c0 FROM vt1, vt0, v0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (vt1.c0 COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0 COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE (((((vt1.c0) IS TRUE)) NOT BETWEEN ((NOT (vt1.c0))) AND ((vt0.c1 IN ())))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE ((NOT (((((vt1.c0) IS TRUE)) NOT BETWEEN ((NOT (vt1.c0))) AND ((vt0.c1 IN ())))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE (((((((vt1.c0) IS TRUE)) NOT BETWEEN ((NOT (vt1.c0))) AND ((vt0.c1 IN ())))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 LEFT OUTER JOIN v0 ON CAST(((vt0.c0)|(vt0.c1)) AS INTEGER) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 LEFT OUTER JOIN v0 ON CAST(((vt0.c0)|(vt0.c1)) AS INTEGER) GROUP BY vt1.c0 HAVING TOTAL(((v0.c0) BETWEEN (vt0.c2) AND (v0.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 LEFT OUTER JOIN v0 ON CAST(((vt0.c0)|(vt0.c1)) AS INTEGER) GROUP BY vt1.c0 HAVING (NOT (TOTAL(((v0.c0) BETWEEN (vt0.c2) AND (v0.c0))))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 LEFT OUTER JOIN v0 ON CAST(((vt0.c0)|(vt0.c1)) AS INTEGER) GROUP BY vt1.c0 HAVING ((TOTAL(((v0.c0) BETWEEN (vt0.c2) AND (v0.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt0 LEFT OUTER JOIN v0 ON CAST(((vt0.c0)|(vt0.c1)) AS INTEGER) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 LEFT OUTER JOIN v0 ON CAST(((vt0.c0)|(vt0.c1)) AS INTEGER) GROUP BY vt1.c0 HAVING TOTAL(((v0.c0) BETWEEN (vt0.c2) AND (v0.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 LEFT OUTER JOIN v0 ON CAST(((vt0.c0)|(vt0.c1)) AS INTEGER) GROUP BY vt1.c0 HAVING (NOT (TOTAL(((v0.c0) BETWEEN (vt0.c2) AND (v0.c0))))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 LEFT OUTER JOIN v0 ON CAST(((vt0.c0)|(vt0.c1)) AS INTEGER) GROUP BY vt1.c0 HAVING ((TOTAL(((v0.c0) BETWEEN (vt0.c2) AND (v0.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt0 LEFT OUTER JOIN v0 ON CAST(((vt0.c0)|(vt0.c1)) AS INTEGER) GROUP BY vt1.c0;
SELECT ALL * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE (HEX(vt0.c0) COLLATE NOCASE) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT (HEX(vt0.c0) COLLATE NOCASE))) UNION ALL SELECT * FROM vt0, v0 WHERE (((HEX(vt0.c0) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT * FROM v0, vt0, vt1;
SELECT DISTINCT * FROM v0, vt0, vt1 WHERE (CASE vt1.c0 COLLATE RTRIM  WHEN vt0.c1 THEN NULL WHEN ((vt1.c0)|(1522033719)) THEN CAST(vt0.c1 AS NUMERIC) WHEN (((vt0.c0, vt0.c2, v0.c0))!=((NULL, vt0.c2, vt0.c2))) THEN CASE vt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN 0.49886133218009865 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END END) UNION SELECT DISTINCT * FROM v0, vt0, vt1 WHERE ((NOT (CASE vt1.c0 COLLATE RTRIM  WHEN vt0.c1 THEN NULL WHEN ((vt1.c0)|(1522033719)) THEN CAST(vt0.c1 AS NUMERIC) WHEN (((vt0.c0, vt0.c2, v0.c0))<>((NULL, vt0.c2, vt0.c2))) THEN CASE vt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN 0.49886133218009865 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END END))) UNION SELECT DISTINCT * FROM v0, vt0, vt1 WHERE (((CASE vt1.c0 COLLATE RTRIM  WHEN vt0.c1 THEN NULL WHEN ((vt1.c0)|(1522033719)) THEN CAST(vt0.c1 AS NUMERIC) WHEN (((vt0.c0, vt0.c2, v0.c0))<>((NULL, vt0.c2, vt0.c2))) THEN CASE vt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN 0.49886133218009865 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END END) ISNULL));
SELECT DISTINCT * FROM v0, vt0, vt1;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 NOT INDEXED GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (vt0.c2 COLLATE NOCASE))) GROUP BY vt0.c2, vt0.c0, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((NOT (vt0.c2 COLLATE NOCASE))))) GROUP BY vt0.c2, vt0.c0, vt0.c1 UNION SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE ((((NOT (vt0.c2 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 NOT INDEXED GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt0.c2, vt0.c0 HAVING SUM(AVG(TOTAL(v0.c0))) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt0.c2, vt0.c0 HAVING (NOT (SUM(AVG(TOTAL(v0.c0))))) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt0.c2, vt0.c0 HAVING ((SUM(AVG(TOTAL(v0.c0)))) ISNULL);
SELECT ALL * FROM v0, vt1, vt0;
SELECT ALL * FROM v0, vt1, vt0 WHERE (CASE (v0.c0 IN (vt0.c1))  WHEN vt1.c0 COLLATE BINARY THEN ((v0.c0)+(v0.c0)) WHEN (vt0.c1 IN (vt1.c0)) THEN ((v0.c0) NOT NULL) WHEN v0.c0 THEN CAST(vt0.c0 AS BLOB) END) UNION ALL SELECT ALL * FROM v0, vt1, vt0 WHERE ((NOT (CASE (v0.c0 IN (vt0.c1))  WHEN vt1.c0 COLLATE BINARY THEN ((v0.c0)+(v0.c0)) WHEN (vt0.c1 IN (vt1.c0)) THEN ((v0.c0) NOT NULL) WHEN v0.c0 THEN CAST(vt0.c0 AS BLOB) END))) UNION ALL SELECT ALL * FROM v0, vt1, vt0 WHERE (((CASE (v0.c0 IN (vt0.c1))  WHEN vt1.c0 COLLATE BINARY THEN ((v0.c0)+(v0.c0)) WHEN (vt0.c1 IN (vt1.c0)) THEN ((v0.c0) NOT NULL) WHEN v0.c0 THEN CAST(vt0.c0 AS BLOB) END) ISNULL));
SELECT ALL * FROM v0, vt1, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((~ ((((vt1.c0, '8>,藭	T', vt1.c0))<=((x'', vt1.c0, vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((~ ((((vt1.c0, '8>,藭	T', vt1.c0))<=((x'', vt1.c0, vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((~ ((((vt1.c0, '8>,藭	T', vt1.c0))<=((x'', vt1.c0, vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c1, vt0.c2, vt0.c0 FROM v0, vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT vt0.c1, vt0.c2, vt0.c0 FROM v0, vt0 WHERE ((((HEX(DISTINCT vt0.c1), vt0.c2, ((v0.c0)&(vt0.c2))))==((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c2)), x'', vt0.c2)))) GROUP BY vt0.c1, vt0.c2, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM v0, vt0 WHERE ((NOT ((((HEX(DISTINCT vt0.c1), vt0.c2, ((v0.c0)&(vt0.c2))))==((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c2)), x'', vt0.c2)))))) GROUP BY vt0.c1, vt0.c2, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM v0, vt0 WHERE ((((((HEX(DISTINCT vt0.c1), vt0.c2, ((v0.c0)&(vt0.c2))))==((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c2)), x'', vt0.c2)))) ISNULL)) GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT vt0.c1, vt0.c2, vt0.c0 FROM v0, vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT ALL vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2;
SELECT vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2 HAVING TOTAL(CASE SUM(vt1.c0)  WHEN vt0.c1 THEN vt0.c2 WHEN MAX(COUNT(*)) THEN MIN(MIN(vt0.c2)) WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 ELSE COUNT(*) END) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2 HAVING (NOT (TOTAL(CASE SUM(vt1.c0)  WHEN vt0.c1 THEN vt0.c2 WHEN MAX(COUNT(*)) THEN MIN(MIN(vt0.c2)) WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 ELSE COUNT(*) END))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c2 HAVING ((TOTAL(CASE SUM(vt1.c0)  WHEN vt0.c1 THEN vt0.c2 WHEN MAX(COUNT(*)) THEN MIN(MIN(vt0.c2)) WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 ELSE COUNT(*) END)) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) IS TRUE)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS NUMERIC)) IS TRUE)))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((CAST(vt1.c0 AS NUMERIC)) IS TRUE)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT v0.c0, vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt1, vt0, v0;
SELECT DISTINCT v0.c0, vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt1, vt0, v0 WHERE ((((~ (vt1.c0)))GLOB(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END))) UNION SELECT DISTINCT v0.c0, vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt1, vt0, v0 WHERE ((NOT ((((~ (vt1.c0)))GLOB(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END))))) UNION SELECT DISTINCT v0.c0, vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt1, vt0, v0 WHERE ((((((~ (vt1.c0)))GLOB(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END))) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt1, vt0, v0;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0)<>(vt0.c1))) NOT BETWEEN (((vt0.c1)<=(vt0.c2))) AND (vt0.c1 COLLATE NOCASE)) GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0)<>(vt0.c1))) NOT BETWEEN (((vt0.c1)<=(vt0.c2))) AND (vt0.c1 COLLATE NOCASE)) WHERE (((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)) COLLATE BINARY) GROUP BY vt0.c0, vt0.c2, vt0.c1 UNION SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0)<>(vt0.c1))) NOT BETWEEN (((vt0.c1)<=(vt0.c2))) AND (vt0.c1 COLLATE NOCASE)) WHERE ((NOT (((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)) COLLATE BINARY))) GROUP BY vt0.c0, vt0.c2, vt0.c1 UNION SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0)!=(vt0.c1))) NOT BETWEEN (((vt0.c1)<=(vt0.c2))) AND (vt0.c1 COLLATE NOCASE)) WHERE (((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0)<>(vt0.c1))) NOT BETWEEN (((vt0.c1)<=(vt0.c2))) AND (vt0.c1 COLLATE NOCASE)) GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c1, vt1.c0, v0.c0, vt0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c1, vt1.c0, v0.c0, vt0.c0;
SELECT ALL vt0.c1, vt1.c0, v0.c0, vt0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c1, vt1.c0, v0.c0, vt0.c0 HAVING AVG(AVG(AVG(AVG(AVG(COUNT(*)))))) UNION ALL SELECT ALL vt0.c1, vt1.c0, v0.c0, vt0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c1, vt1.c0, v0.c0, vt0.c0 HAVING (NOT (AVG(AVG(AVG(AVG(AVG(COUNT(*)))))))) UNION ALL SELECT ALL vt0.c1, vt1.c0, v0.c0, vt0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c1, vt1.c0, v0.c0, vt0.c0 HAVING ((AVG(AVG(AVG(AVG(AVG(COUNT(*))))))) ISNULL);
SELECT * FROM v0, vt1;
SELECT * FROM v0, vt1 WHERE (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM v0, vt1 WHERE ((NOT (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM))) UNION ALL SELECT * FROM v0, vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT * FROM v0, vt1;
SELECT DISTINCT vt0.c1, vt0.c0, vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE (x'30a8') UNION SELECT DISTINCT vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT (x'30a8'))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE (((x'30a8') ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, vt0.c2 FROM vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (x'') GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (x''))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((x'') ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(vt1.c0)) NOTNULL) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((MIN(vt1.c0)) NOTNULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MIN(vt1.c0)) NOTNULL)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(vt1.c0)) NOTNULL) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((MIN(vt1.c0)) NOTNULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MIN(vt1.c0)) NOTNULL)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM v0, vt1, vt0;
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM v0, vt1, vt0 WHERE (CAST('' AS BLOB)) UNION ALL SELECT vt0.c0, v0.c0, vt0.c1 FROM v0, vt1, vt0 WHERE ((NOT (CAST('' AS BLOB)))) UNION ALL SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM v0, vt1, vt0 WHERE (((CAST('' AS BLOB)) ISNULL));
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM v0, vt1, vt0;
SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1;
SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1 WHERE (LIKELY((vt1.c0 IN (v0.c0)))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1 WHERE ((NOT (LIKELY((vt1.c0 IN (v0.c0)))))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1 WHERE (((LIKELY((vt1.c0 IN (v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1;
SELECT ALL vt0.c2 FROM vt1, vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt1, vt0 WHERE (0.9080671437320642) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt1, vt0 WHERE ((NOT (0.9080671437320642))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt1, vt0 WHERE (((0.9080671437320642) ISNULL)) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt1, vt0 GROUP BY vt0.c2;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING COUNT(SUM(vt0.c2)) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(SUM(vt0.c2)))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((COUNT(SUM(vt0.c2))) ISNULL);
SELECT vt0.c1, vt0.c2 FROM v0, vt0;
SELECT vt0.c1, vt0.c2 FROM v0, vt0 WHERE ((~ (((vt0.c2)-(vt0.c0))))) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM v0, vt0 WHERE ((NOT ((~ (((vt0.c2)-(vt0.c0))))))) UNION ALL SELECT vt0.c1, vt0.c2 FROM v0, vt0 WHERE ((((~ (((vt0.c2)-(vt0.c0))))) ISNULL));
SELECT vt0.c1, vt0.c2 FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0)IS NOT(v0.c0))))<>((v0.c0)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0)IS NOT(v0.c0))))<>((v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((((v0.c0)IS NOT(v0.c0))))!=((v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 WHERE (CASE WHEN '81896858' THEN ((vt0.c1) NOTNULL) END) GROUP BY vt1.c0, vt0.c1, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 WHERE ((NOT (CASE WHEN '81896858' THEN ((vt0.c1) NOTNULL) END))) GROUP BY vt1.c0, vt0.c1, vt0.c0 UNION SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 WHERE (((CASE WHEN '81896858' THEN ((vt0.c1) NOTNULL) END) ISNULL)) GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(SUM(MAX(GROUP_CONCAT(AVG(TOTAL(x'')))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(SUM(MAX(GROUP_CONCAT(AVG(TOTAL(x'')))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(SUM(MAX(GROUP_CONCAT(AVG(TOTAL(x''))))))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0)!=(NULL))) UNION ALL SELECT vt1.c0 FROM vt1 NOT INDEXED WHERE ((NOT (((vt1.c0)<>(NULL))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)<>(NULL))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM v0, vt1, vt0;
SELECT DISTINCT * FROM v0, vt1, vt0 WHERE (CAST(HEX(DISTINCT v0.c0) AS INTEGER)) UNION SELECT DISTINCT * FROM v0, vt1, vt0 WHERE ((NOT (CAST(HEX(DISTINCT v0.c0) AS INTEGER)))) UNION SELECT DISTINCT * FROM v0, vt1, vt0 WHERE (((CAST(HEX(DISTINCT v0.c0) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM v0, vt1, vt0;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 WHERE ((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c2)) IN (vt0.c2 COLLATE NOCASE))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0 WHERE ((NOT ((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c2)) IN (vt0.c2 COLLATE NOCASE))))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0 WHERE ((((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c2)) IN (vt0.c2 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT vt0.c1, v0.c0, vt0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0, vt0.c2;
SELECT vt0.c1, v0.c0, vt0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0, vt0.c2 HAVING TOTAL(NULL) UNION ALL SELECT vt0.c1, v0.c0, vt0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0, vt0.c2 HAVING (NOT (TOTAL(NULL))) UNION ALL SELECT vt0.c1, v0.c0, vt0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0, vt0.c2 HAVING ((TOTAL(NULL)) ISNULL);
SELECT vt0.c1, v0.c0, vt0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0, vt0.c2;
SELECT vt0.c1, v0.c0, vt0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0, vt0.c2 HAVING TOTAL(NULL) UNION ALL SELECT vt0.c1, v0.c0, vt0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0, vt0.c2 HAVING (NOT (TOTAL(NULL))) UNION ALL SELECT vt0.c1, v0.c0, vt0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0, vt0.c2 HAVING ((TOTAL(NULL)) ISNULL);
SELECT vt0.c1, v0.c0, vt0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0, vt0.c2;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))<>(((vt0.c2)AND(x''))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0)AND(vt0.c0)))<>(((vt0.c2)AND(x''))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))<>(((vt0.c2)AND(x''))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)), CAST(vt1.c0 AS TEXT), 0.09003454381612686, CAST(vt1.c0 AS NUMERIC), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), CAST(vt1.c0 AS NUMERIC), NULL, ((vt1.c0)/(0.053355974224910674)), ABS(DISTINCT vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)), CAST(vt1.c0 AS TEXT), 0.09003454381612686, CAST(vt1.c0 AS NUMERIC), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), CAST(vt1.c0 AS NUMERIC), NULL, ((vt1.c0)/(0.053355974224910674)), ABS(DISTINCT vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 NOT INDEXED WHERE ((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)), CAST(vt1.c0 AS TEXT), 0.09003454381612686, CAST(vt1.c0 AS NUMERIC), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), CAST(vt1.c0 AS NUMERIC), NULL, ((vt1.c0)/(0.053355974224910674)), ABS(DISTINCT vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0, vt1 WHERE ((- (((vt0.c0)|(vt1.c0))))) GROUP BY vt0.c0, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c2 FROM vt0, vt1 WHERE ((NOT ((- (((vt0.c0)|(vt1.c0))))))) GROUP BY vt0.c0, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c2 FROM vt0, vt1 WHERE ((((- (((vt0.c0)|(vt1.c0))))) ISNULL)) GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(CAST(MIN(vt1.c0) AS BLOB)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(CAST(MIN(vt1.c0) AS BLOB)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(CAST(MIN(vt1.c0) AS BLOB))) ISNULL);
SELECT ALL * FROM vt1, vt0, v0;
SELECT ALL * FROM vt1, vt0, v0 WHERE ((((vt0.c2)) NOT BETWEEN ((vt0.c1 COLLATE RTRIM)) AND ((((vt0.c2)LIKE(NULL)))))) UNION ALL SELECT ALL * FROM vt1, vt0, v0 WHERE ((NOT ((((vt0.c2)) NOT BETWEEN ((vt0.c1 COLLATE RTRIM)) AND ((((vt0.c2)LIKE(NULL)))))))) UNION ALL SELECT ALL * FROM vt1, vt0, v0 WHERE ((((((vt0.c2)) NOT BETWEEN ((vt0.c1 COLLATE RTRIM)) AND ((((vt0.c2)LIKE(NULL)))))) ISNULL));
SELECT ALL * FROM vt1, vt0, v0;
SELECT DISTINCT * FROM v0, vt1 CROSS JOIN vt0 ON (~ ((~ (vt0.c0))));
SELECT DISTINCT * FROM v0, vt1 CROSS JOIN vt0 ON (~ ((~ (vt0.c0)))) WHERE (CHAR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))) UNION SELECT DISTINCT * FROM v0, vt1 CROSS JOIN vt0 ON (~ ((~ (vt0.c0)))) WHERE ((NOT (CHAR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))) UNION SELECT DISTINCT * FROM v0, vt1 CROSS JOIN vt0 ON (~ ((~ (vt0.c0)))) WHERE (((CHAR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0, vt1 CROSS JOIN vt0 ON (~ ((~ (vt0.c0))));
SELECT vt0.c1, vt0.c2, vt1.c0, vt0.c0, v0.c0 FROM vt1, v0 LEFT OUTER JOIN vt0 ON NULL GROUP BY vt0.c1, vt0.c2, vt1.c0, vt0.c0, v0.c0;
SELECT ALL vt0.c1, vt0.c2, vt1.c0, vt0.c0, v0.c0 FROM vt1, v0 LEFT OUTER JOIN vt0 ON NULL WHERE (((((((((vt1.c0)OR(LIKELIHOOD(vt1.c0, 0.25430612170301126))))OR(((vt1.c0)/(vt0.c2)))))AND(((vt0.c2)OR(vt0.c0)))))OR(((vt0.c1) IS FALSE)))) GROUP BY vt0.c1, vt0.c2, vt1.c0, vt0.c0, v0.c0 UNION SELECT vt0.c1, vt0.c2, vt1.c0, vt0.c0, v0.c0 FROM vt1, v0 LEFT OUTER JOIN vt0 ON NULL WHERE ((NOT (((((((((vt1.c0)OR(LIKELIHOOD(vt1.c0, 0.25430612170301126))))OR(((vt1.c0)/(vt0.c2)))))AND(((vt0.c2)OR(vt0.c0)))))OR(((vt0.c1) IS FALSE)))))) GROUP BY vt0.c1, vt0.c2, vt1.c0, vt0.c0, v0.c0 UNION SELECT ALL vt0.c1, vt0.c2, vt1.c0, vt0.c0, v0.c0 FROM vt1, v0 LEFT OUTER JOIN vt0 ON NULL WHERE (((((((((((vt1.c0)OR(LIKELIHOOD(vt1.c0, 0.25430612170301126))))OR(((vt1.c0)/(vt0.c2)))))AND(((vt0.c2)OR(vt0.c0)))))OR(((vt0.c1) IS FALSE)))) ISNULL)) GROUP BY vt0.c1, vt0.c2, vt1.c0, vt0.c0, v0.c0;
SELECT vt0.c1, vt0.c2, vt1.c0, vt0.c0, v0.c0 FROM vt1, v0 LEFT OUTER JOIN vt0 ON NULL GROUP BY vt0.c1, vt0.c2, vt1.c0, vt0.c0, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(v0.c0) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(v0.c0)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(v0.c0) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(v0.c0)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS TRUE))-(json_extract(vt0.c1, vt0.c2)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0) IS TRUE))-(json_extract(vt0.c1, vt0.c2)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) IS TRUE))-(json_extract(vt0.c1, vt0.c2)))) ISNULL));
SELECT DISTINCT vt0.c2, vt1.c0, v0.c0, vt0.c1, vt0.c0 FROM vt1, v0 LEFT OUTER JOIN vt0 ON (((((v0.c0, vt1.c0, vt0.c2))>=((vt0.c2, vt0.c0, vt1.c0))))OR(((vt1.c0)OR(vt0.c1))));
SELECT DISTINCT vt0.c2, vt1.c0, v0.c0, vt0.c1, vt0.c0 FROM vt1, v0 LEFT OUTER JOIN vt0 ON (((((v0.c0, vt1.c0, vt0.c2))>=((vt0.c2, vt0.c0, vt1.c0))))OR(((vt1.c0)OR(vt0.c1)))) WHERE ((((0.2279439932641717 IN ())) NOT NULL)) UNION SELECT DISTINCT vt0.c2, vt1.c0, v0.c0, vt0.c1, vt0.c0 FROM vt1, v0 LEFT OUTER JOIN vt0 ON (((((v0.c0, vt1.c0, vt0.c2))>=((vt0.c2, vt0.c0, vt1.c0))))OR(((vt1.c0)OR(vt0.c1)))) WHERE ((NOT ((((0.2279439932641717 IN ())) NOT NULL)))) UNION SELECT DISTINCT vt0.c2, vt1.c0, v0.c0, vt0.c1, vt0.c0 FROM vt1, v0 LEFT OUTER JOIN vt0 ON (((((v0.c0, vt1.c0, vt0.c2))>=((vt0.c2, vt0.c0, vt1.c0))))OR(((vt1.c0)OR(vt0.c1)))) WHERE ((((((0.2279439932641717 IN ())) NOT NULL)) ISNULL));
SELECT DISTINCT vt0.c2, vt1.c0, v0.c0, vt0.c1, vt0.c0 FROM vt1, v0 LEFT OUTER JOIN vt0 ON (((((v0.c0, vt1.c0, vt0.c2))>=((vt0.c2, vt0.c0, vt1.c0))))OR(((vt1.c0)OR(vt0.c1))));
SELECT v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (CASE vt1.c0  WHEN v0.c0 THEN x'' ELSE vt1.c0 END IN (v0.c0)) GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (CASE vt1.c0  WHEN v0.c0 THEN x'' ELSE vt1.c0 END IN (v0.c0)) WHERE (((('嶗FN^.y?'))<=((((v0.c0) NOT NULL))))) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (CASE vt1.c0  WHEN v0.c0 THEN x'' ELSE vt1.c0 END IN (v0.c0)) WHERE ((NOT (((('嶗FN^.y?'))<=((((v0.c0) NOT NULL))))))) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (CASE vt1.c0  WHEN v0.c0 THEN x'' ELSE vt1.c0 END IN (v0.c0)) WHERE (((((('嶗FN^.y?'))<=((((v0.c0) NOT NULL))))) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (CASE vt1.c0  WHEN v0.c0 THEN x'' ELSE vt1.c0 END IN (v0.c0)) GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((((((AVG(v0.c0))AND(((v0.c0) NOT NULL))))OR(SUM(v0.c0))))AND(TOTAL(v0.c0))))AND(SUM(v0.c0))))OR(COUNT(GROUP_CONCAT(COUNT(SUM(v0.c0)))))))OR(COUNT(MAX(MIN(GROUP_CONCAT(TOTAL('-587789262'))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((((((((((AVG(v0.c0))AND(((v0.c0) NOT NULL))))OR(SUM(v0.c0))))AND(TOTAL(v0.c0))))AND(SUM(v0.c0))))OR(COUNT(GROUP_CONCAT(COUNT(SUM(v0.c0)))))))OR(COUNT(MAX(MIN(GROUP_CONCAT(TOTAL('-587789262'))))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((((((((AVG(v0.c0))AND(((v0.c0) NOT NULL))))OR(SUM(v0.c0))))AND(TOTAL(v0.c0))))AND(SUM(v0.c0))))OR(COUNT(GROUP_CONCAT(COUNT(SUM(v0.c0)))))))OR(COUNT(MAX(MIN(GROUP_CONCAT(TOTAL('-587789262')))))))) ISNULL);
SELECT * FROM v0, vt0, vt1;
SELECT * FROM v0, vt0, vt1 WHERE ((((((vt0.c2) IS TRUE), v0.c0, CAST(0.927215024022107 AS REAL)))<(((('')>=(v0.c0)), HEX(vt0.c0), CAST(0.5699896034722771 AS REAL))))) UNION ALL SELECT ALL * FROM v0, vt0, vt1 WHERE ((NOT ((((((vt0.c2) IS TRUE), v0.c0, CAST(0.927215024022107 AS REAL)))<(((('')>=(v0.c0)), HEX(vt0.c0), CAST(0.5699896034722771 AS REAL))))))) UNION ALL SELECT * FROM v0, vt0, vt1 WHERE ((((((((vt0.c2) IS TRUE), v0.c0, CAST(0.927215024022107 AS REAL)))<(((('')>=(v0.c0)), HEX(vt0.c0), CAST(0.5699896034722771 AS REAL))))) ISNULL));
SELECT * FROM v0, vt0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (0.11408251384336954) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (0.11408251384336954))) UNION SELECT DISTINCT * FROM vt0 WHERE (((0.11408251384336954) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, vt1 WHERE (NULLIF(((vt0.c1)<(vt1.c0)), CAST(vt0.c2 AS REAL))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, vt1 WHERE ((NOT (NULLIF(((vt0.c1)<(vt1.c0)), CAST(vt0.c2 AS REAL))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0, vt1 WHERE (((NULLIF(((vt0.c1)<(vt1.c0)), CAST(vt0.c2 AS REAL))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT ALL v0.c0 FROM v0, vt0, vt1 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0, vt1 GROUP BY v0.c0 HAVING MIN(CASE WHEN vt0.c2 THEN vt0.c2 END) UNION ALL SELECT ALL v0.c0 FROM v0, vt0, vt1 GROUP BY v0.c0 HAVING (NOT (MIN(CASE WHEN vt0.c2 THEN vt0.c2 END))) UNION ALL SELECT v0.c0 FROM v0, vt0, vt1 GROUP BY v0.c0 HAVING ((MIN(CASE WHEN vt0.c2 THEN vt0.c2 END)) ISNULL);
SELECT ALL v0.c0 FROM v0, vt0, vt1 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0, vt1 GROUP BY v0.c0 HAVING MIN(CASE WHEN vt0.c2 THEN vt0.c2 END) UNION ALL SELECT ALL v0.c0 FROM v0, vt0, vt1 GROUP BY v0.c0 HAVING (NOT (MIN(CASE WHEN vt0.c2 THEN vt0.c2 END))) UNION ALL SELECT v0.c0 FROM v0, vt0, vt1 GROUP BY v0.c0 HAVING ((MIN(CASE WHEN vt0.c2 THEN vt0.c2 END)) ISNULL);
SELECT ALL v0.c0 FROM v0, vt0, vt1 GROUP BY v0.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((vt1.c0 COLLATE RTRIM IN ())) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((vt1.c0 COLLATE RTRIM IN ())))) UNION ALL SELECT * FROM vt1 WHERE ((((vt1.c0 COLLATE RTRIM IN ())) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 WHERE ((((((vt1.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c2, vt1.c0, vt0.c2)) AND ((vt0.c2, vt0.c1, vt0.c1))))-((vt0.c1 IN ())))) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((((vt1.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c2, vt1.c0, vt0.c2)) AND ((vt0.c2, vt0.c1, vt0.c1))))-((vt0.c1 IN ())))))) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 WHERE ((((((((vt1.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c2, vt1.c0, vt0.c2)) AND ((vt0.c2, vt0.c1, vt0.c1))))-((vt0.c1 IN ())))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0;
SELECT vt1.c0 FROM vt1 NATURAL JOIN v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 NATURAL JOIN v0 WHERE ((NULL IN (CAST(vt1.c0 AS TEXT)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN v0 WHERE ((NOT ((NULL IN (CAST(vt1.c0 AS TEXT)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 NATURAL JOIN v0 WHERE ((((NULL IN (CAST(vt1.c0 AS TEXT)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 NATURAL JOIN v0 GROUP BY vt1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(((MIN(v0.c0))LIKE(v0.c0)) AS BLOB) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(((MIN(v0.c0))LIKE(v0.c0)) AS BLOB))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(((MIN(v0.c0))LIKE(v0.c0)) AS BLOB)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(((MIN(v0.c0))LIKE(v0.c0)) AS BLOB) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(((MIN(v0.c0))LIKE(v0.c0)) AS BLOB))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(((MIN(v0.c0))LIKE(v0.c0)) AS BLOB)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((((vt0.c2)) NOT BETWEEN ((TYPEOF(vt0.c0))) AND ((((vt0.c1) BETWEEN (NULL) AND (vt0.c2)))))) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c2)) NOT BETWEEN ((TYPEOF(vt0.c0))) AND ((((vt0.c1) BETWEEN (NULL) AND (vt0.c2)))))))) UNION ALL SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((((((vt0.c2)) NOT BETWEEN ((TYPEOF(vt0.c0))) AND ((((vt0.c1) BETWEEN (NULL) AND (vt0.c2)))))) ISNULL));
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0;
SELECT DISTINCT v0.c0 FROM vt1, v0;
SELECT DISTINCT v0.c0 FROM vt1, v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) BETWEEN ('1495046201') AND (((((v0.c0)OR(vt1.c0)))AND(vt1.c0))))) UNION SELECT DISTINCT v0.c0 FROM vt1, v0 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) BETWEEN ('1495046201') AND (((((v0.c0)OR(vt1.c0)))AND(vt1.c0))))))) UNION SELECT DISTINCT v0.c0 FROM vt1, v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) BETWEEN ('1495046201') AND (((((v0.c0)OR(vt1.c0)))AND(vt1.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM vt1, v0;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0, v0 WHERE (vt0.c2) GROUP BY vt0.c2, vt0.c0, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0, v0 WHERE ((NOT (vt0.c2))) GROUP BY vt0.c2, vt0.c0, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 NOT INDEXED, v0 WHERE (((vt0.c2) ISNULL)) GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(vt1.c0) COLLATE BINARY)IS(AVG(AVG(COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT(vt1.c0) COLLATE BINARY)IS(AVG(AVG(COUNT(*))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(vt1.c0) COLLATE BINARY)IS(AVG(AVG(COUNT(*)))))) ISNULL);
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c2) IS TRUE)) NOT NULL)) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c2) IS TRUE)) NOT NULL)))) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c2) IS TRUE)) NOT NULL)) ISNULL));
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON CAST((((v0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1))>((v0.c0, v0.c0, vt0.c1, 0.8113831989759174, v0.c0))) AS BLOB);
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON CAST((((v0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1))>((v0.c0, v0.c0, vt0.c1, 0.8113831989759174, v0.c0))) AS BLOB) WHERE ((vt0.c2 COLLATE BINARY IN ((('-1319342446')<=(vt0.c2)), (((v0.c0, vt0.c2, vt0.c0)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c2))), ((((vt0.c1)OR(vt0.c0)))OR(v0.c0))))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON CAST((((v0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1))>((v0.c0, v0.c0, vt0.c1, 0.8113831989759174, v0.c0))) AS BLOB) WHERE ((NOT ((vt0.c2 COLLATE BINARY IN ((('-1319342446')<=(vt0.c2)), (((v0.c0, vt0.c2, vt0.c0)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c2))), ((((vt0.c1)OR(vt0.c0)))OR(v0.c0))))))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON CAST((((v0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1))>((v0.c0, v0.c0, vt0.c1, 0.8113831989759174, v0.c0))) AS BLOB) WHERE ((((vt0.c2 COLLATE BINARY IN ((('-1319342446')<=(vt0.c2)), (((v0.c0, vt0.c2, vt0.c0)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c2))), ((((vt0.c1)OR(vt0.c0)))OR(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON CAST((((v0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1))>((v0.c0, v0.c0, vt0.c1, 0.8113831989759174, v0.c0))) AS BLOB);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) ISNULL)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) ISNULL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) ISNULL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0, vt1, v0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0, vt1, v0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING AVG(MIN(COUNT(MIN(GROUP_CONCAT(vt0.c2))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0, vt1, v0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING (NOT (AVG(MIN(COUNT(MIN(GROUP_CONCAT(vt0.c2))))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0, vt1, v0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING ((AVG(MIN(COUNT(MIN(GROUP_CONCAT(vt0.c2)))))) ISNULL);
SELECT TOTAL(v0.c0) FROM vt0, v0 ORDER BY ((((((vt0.c2)*(vt0.c1)))OR(CAST(v0.c0 AS TEXT))))AND(((((vt0.c1)OR(vt0.c2)))AND(vt0.c2))));
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((v0.c0 COLLATE RTRIM IN (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((v0.c0 COLLATE RTRIM IN (((((v0.c0)OR(v0.c0)))OR(v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE ((((v0.c0 COLLATE RTRIM IN (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT vt1.c0 FROM vt1, v0;
SELECT DISTINCT vt1.c0 FROM vt1, v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1, v0 WHERE ((NOT ((NOT (v0.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, v0 WHERE ((((NOT (v0.c0))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, v0;
SELECT ALL v0.c0 FROM vt0, vt1 NATURAL JOIN v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, vt1 NATURAL JOIN v0 WHERE (((((v0.c0)GLOB(vt0.c0))) BETWEEN (CAST('-819588295' AS BLOB)) AND (v0.c0 COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, vt1 NATURAL JOIN v0 WHERE ((NOT (((((v0.c0)GLOB(vt0.c0))) BETWEEN (CAST('-819588295' AS BLOB)) AND (v0.c0 COLLATE NOCASE))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, vt1 NATURAL JOIN v0 WHERE (((((((v0.c0)GLOB(vt0.c0))) BETWEEN (CAST('-819588295' AS BLOB)) AND (v0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, vt1 NATURAL JOIN v0 GROUP BY v0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(NULL) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(NULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(NULL)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(NULL) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(NULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(NULL)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1, vt0 LEFT OUTER JOIN v0 ON (- (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT * FROM vt1, vt0 LEFT OUTER JOIN v0 ON (- (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE (CAST(vt0.c1 COLLATE BINARY AS INTEGER)) UNION ALL SELECT * FROM vt1, vt0 LEFT OUTER JOIN v0 ON (- (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE ((NOT (CAST(vt0.c1 COLLATE BINARY AS INTEGER)))) UNION ALL SELECT * FROM vt1, vt0 LEFT OUTER JOIN v0 ON (- (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE (((CAST(vt0.c1 COLLATE BINARY AS INTEGER)) ISNULL));
SELECT ALL * FROM vt1, vt0 LEFT OUTER JOIN v0 ON (- (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT DISTINCT vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ('-239670685') UNION SELECT DISTINCT vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ('-239670685'))) UNION SELECT DISTINCT vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((('-239670685') ISNULL));
SELECT DISTINCT vt0.c2, vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM v0, vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM v0, vt0 WHERE (((((((vt0.c2)AND(0.19767972612987195)))OR(v0.c0))) NOT NULL)) GROUP BY vt0.c2, vt0.c1, vt0.c0 UNION SELECT vt0.c2, vt0.c1, vt0.c0 FROM v0, vt0 WHERE ((NOT (((((((vt0.c2)AND(0.19767972612987195)))OR(v0.c0))) NOT NULL)))) GROUP BY vt0.c2, vt0.c1, vt0.c0 UNION SELECT vt0.c2, vt0.c1, vt0.c0 FROM v0, vt0 WHERE (((((((((vt0.c2)AND(0.19767972612987195)))OR(v0.c0))) NOT NULL)) ISNULL)) GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM v0, vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c2, vt0.c1, v0.c0 FROM v0, vt0, vt1;
SELECT vt0.c2, vt0.c1, v0.c0 FROM v0, vt0, vt1 WHERE ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)), DATE(v0.c0, vt0.c1, v0.c0, vt0.c0, v0.c0), vt0.c2))!=((INSTR(vt0.c1, vt0.c1), x'', vt0.c2 COLLATE NOCASE)))) UNION ALL SELECT ALL vt0.c2, vt0.c1, v0.c0 FROM v0, vt0, vt1 WHERE ((NOT ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)), DATE(v0.c0, vt0.c1, v0.c0, vt0.c0, v0.c0), vt0.c2))<>((INSTR(vt0.c1, vt0.c1), x'', vt0.c2 COLLATE NOCASE)))))) UNION ALL SELECT vt0.c2, vt0.c1, v0.c0 FROM v0, vt0, vt1 NOT INDEXED WHERE ((((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)), DATE(v0.c0, vt0.c1, v0.c0, vt0.c0, v0.c0), vt0.c2))<>((INSTR(vt0.c1, vt0.c1), x'', vt0.c2 COLLATE NOCASE)))) ISNULL));
SELECT vt0.c2, vt0.c1, v0.c0 FROM v0, vt0, vt1;
SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1 FROM vt1, vt0 WHERE (ABS(DISTINCT vt0.c1) COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1 FROM vt1, vt0 WHERE ((NOT (ABS(DISTINCT vt0.c1) COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1 FROM vt1, vt0 WHERE (((ABS(DISTINCT vt0.c1) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1 FROM vt1, vt0;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 ELSE NULL END)<(CAST(vt0.c0 AS TEXT)))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 ELSE NULL END)<(CAST(vt0.c0 AS TEXT)))))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 ELSE NULL END)<(CAST(vt0.c0 AS TEXT)))) ISNULL)) GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c0, vt0.c2, vt1.c0, v0.c0, vt0.c1 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt0.c2, vt1.c0, v0.c0, vt0.c1;
SELECT vt0.c0, vt0.c2, vt1.c0, v0.c0, vt0.c1 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt0.c2, vt1.c0, v0.c0, vt0.c1 HAVING SUM(GROUP_CONCAT(COUNT(vt1.c0))) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt1.c0, v0.c0, vt0.c1 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt0.c2, vt1.c0, v0.c0, vt0.c1 HAVING (NOT (SUM(GROUP_CONCAT(COUNT(vt1.c0))))) UNION ALL SELECT vt0.c0, vt0.c2, vt1.c0, v0.c0, vt0.c1 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt0.c2, vt1.c0, v0.c0, vt0.c1 HAVING ((SUM(GROUP_CONCAT(COUNT(vt1.c0)))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (LIKELIHOOD(((v0.c0)IS NOT(v0.c0)), 0.14605069626874811)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (LIKELIHOOD(((v0.c0)IS NOT(v0.c0)), 0.14605069626874811)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((LIKELIHOOD(((v0.c0)IS NOT(v0.c0)), 0.14605069626874811)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 FULL OUTER JOIN vt1 ON ((((HEX(DISTINCT vt1.c0))AND(((vt1.c0)GLOB(v0.c0)))))AND(CAST(0X783b2632 AS INTEGER)));
SELECT DISTINCT v0.c0 FROM v0 FULL OUTER JOIN vt1 ON ((((HEX(DISTINCT vt1.c0))AND(((vt1.c0)GLOB(v0.c0)))))AND(CAST(0X783b2632 AS INTEGER))) WHERE (((((vt1.c0)%(v0.c0)))%(((v0.c0)IS(vt1.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 FULL OUTER JOIN vt1 ON ((((HEX(DISTINCT vt1.c0))AND(((vt1.c0)GLOB(v0.c0)))))AND(CAST(0x783b2632 AS INTEGER))) WHERE ((NOT (((((vt1.c0)%(v0.c0)))%(((v0.c0)IS(vt1.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 FULL OUTER JOIN vt1 ON ((((HEX(DISTINCT vt1.c0))AND(((vt1.c0)GLOB(v0.c0)))))AND(CAST(0X783b2632 AS INTEGER))) WHERE (((((((vt1.c0)%(v0.c0)))%(((v0.c0)IS(vt1.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0 FULL OUTER JOIN vt1 ON ((((HEX(DISTINCT vt1.c0))AND(((vt1.c0)GLOB(v0.c0)))))AND(CAST(0X783b2632 AS INTEGER)));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((NOT (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((NOT (v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(MIN(GROUP_CONCAT(MIN(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(MIN(GROUP_CONCAT(MIN(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(MIN(GROUP_CONCAT(MIN(vt1.c0))))) ISNULL);
SELECT ALL TOTAL((+ (vt0.c2))) FROM vt1, vt0, v0 ORDER BY ((vt1.c0)+(0.7646830409155106)) ASC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 FULL OUTER JOIN v0 ON (+ ('788554508')) COLLATE BINARY;
SELECT * FROM vt1, vt0 FULL OUTER JOIN v0 ON (+ ('788554508')) COLLATE BINARY WHERE (LIKELY(DISTINCT (vt0.c1 IN (vt0.c2)))) UNION ALL SELECT * FROM vt1, vt0 FULL OUTER JOIN v0 ON (+ ('788554508')) COLLATE BINARY WHERE ((NOT (LIKELY(DISTINCT (vt0.c1 IN (vt0.c2)))))) UNION ALL SELECT * FROM vt1, vt0 FULL OUTER JOIN v0 ON (+ ('788554508')) COLLATE BINARY WHERE (((LIKELY(DISTINCT (vt0.c1 IN (vt0.c2)))) ISNULL));
SELECT ALL * FROM vt1, vt0 FULL OUTER JOIN v0 ON (+ ('788554508')) COLLATE BINARY;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON (((((vt0.c1)IS NOT(vt0.c0))))<(((+ (vt0.c0))))) CROSS JOIN v0 ON ((CASE vt1.c0  WHEN v0.c0 THEN vt0.c1 END) BETWEEN (0.9461492153204347) AND (((v0.c0) IS FALSE)));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON (((((vt0.c1)IS NOT(vt0.c0))))<(((+ (vt0.c0))))) CROSS JOIN v0 ON ((CASE vt1.c0  WHEN v0.c0 THEN vt0.c1 END) BETWEEN (0.9461492153204347) AND (((v0.c0) IS FALSE))) WHERE ((((((vt1.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c2))<>((vt1.c0, vt0.c1, vt0.c1, vt0.c2, v0.c0)))) BETWEEN (((vt0.c1)%(vt0.c0))) AND (v0.c0))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON (((((vt0.c1)IS NOT(vt0.c0))))<(((+ (vt0.c0))))) CROSS JOIN v0 ON ((CASE vt1.c0  WHEN v0.c0 THEN vt0.c1 END) BETWEEN (0.9461492153204347) AND (((v0.c0) IS FALSE))) WHERE ((NOT ((((((vt1.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c2))!=((vt1.c0, vt0.c1, vt0.c1, vt0.c2, v0.c0)))) BETWEEN (((vt0.c1)%(vt0.c0))) AND (v0.c0))))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON (((((vt0.c1)IS NOT(vt0.c0))))<(((+ (vt0.c0))))) CROSS JOIN v0 ON ((CASE vt1.c0  WHEN v0.c0 THEN vt0.c1 END) BETWEEN (0.9461492153204347) AND (((v0.c0) IS FALSE))) WHERE ((((((((vt1.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c2))!=((vt1.c0, vt0.c1, vt0.c1, vt0.c2, v0.c0)))) BETWEEN (((vt0.c1)%(vt0.c0))) AND (v0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON (((((vt0.c1)IS NOT(vt0.c0))))<(((+ (vt0.c0))))) CROSS JOIN v0 ON ((CASE vt1.c0  WHEN v0.c0 THEN vt0.c1 END) BETWEEN (0.9461492153204347) AND (((v0.c0) IS FALSE)));
SELECT v0.c0, vt1.c0 FROM v0 INNER JOIN vt1 ON COALESCE(vt1.c0 COLLATE RTRIM, ((v0.c0) NOT NULL)) GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM v0 INNER JOIN vt1 ON COALESCE(vt1.c0 COLLATE RTRIM, ((v0.c0) NOT NULL)) WHERE ((~ (((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))))) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM v0 INNER JOIN vt1 ON COALESCE(vt1.c0 COLLATE RTRIM, ((v0.c0) NOT NULL)) WHERE ((NOT ((~ (((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))))))) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM v0 INNER JOIN vt1 ON COALESCE(vt1.c0 COLLATE RTRIM, ((v0.c0) NOT NULL)) WHERE ((((~ (((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM v0 INNER JOIN vt1 ON COALESCE(vt1.c0 COLLATE RTRIM, ((v0.c0) NOT NULL)) GROUP BY v0.c0, vt1.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt0.c0 HAVING TOTAL(COUNT(vt0.c2)) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (TOTAL(COUNT(vt0.c2)))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt0.c0 HAVING ((TOTAL(COUNT(vt0.c2))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0 IN ()))==(v0.c0 COLLATE BINARY))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN ()))==(v0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0 IN ()))=(v0.c0 COLLATE BINARY))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT vt1.c0, v0.c0 FROM v0, vt1;
SELECT DISTINCT vt1.c0, v0.c0 FROM v0, vt1 WHERE (((CAST(vt1.c0 AS INTEGER))IS NOT(CAST(v0.c0 AS NUMERIC)))) UNION SELECT DISTINCT vt1.c0, v0.c0 FROM v0, vt1 WHERE ((NOT (((CAST(vt1.c0 AS INTEGER))IS NOT(CAST(v0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT vt1.c0, v0.c0 FROM v0, vt1 WHERE (((((CAST(vt1.c0 AS INTEGER))IS NOT(CAST(v0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT vt1.c0, v0.c0 FROM v0, vt1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0 COLLATE BINARY)<<(((x'bdfc7c4d') NOT BETWEEN (v0.c0) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE BINARY)<<(((x'bdfc7c4d') NOT BETWEEN (v0.c0) AND (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE BINARY)<<(((x'bdfc7c4d') NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING AVG(GROUP_CONCAT(MAX(NULL))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (AVG(GROUP_CONCAT(MAX(NULL))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((AVG(GROUP_CONCAT(MAX(NULL)))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN ())) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((vt1.c0 IN ())))) UNION ALL SELECT * FROM vt1 WHERE ((((vt1.c0 IN ())) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c2, v0.c0, vt0.c0 FROM v0, vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c2, v0.c0, vt0.c0 FROM v0, vt1, vt0 WHERE ((CAST(vt0.c1 AS INTEGER) IN ())) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt0.c2, v0.c0, vt0.c0 FROM v0, vt1, vt0 WHERE ((NOT ((CAST(vt0.c1 AS INTEGER) IN ())))) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt0.c2, v0.c0, vt0.c0 FROM v0, vt1, vt0 WHERE ((((CAST(vt0.c1 AS INTEGER) IN ())) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c2, v0.c0, vt0.c0 FROM v0, vt1, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((((((v0.c0))<((v0.c0))))AND(v0.c0 COLLATE RTRIM)))OR((((v0.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((((((v0.c0))<((v0.c0))))AND(v0.c0 COLLATE RTRIM)))OR((((v0.c0, v0.c0, v0.c0))!=((v0.c0, v0.c0, v0.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((((((v0.c0))<((v0.c0))))AND(v0.c0 COLLATE RTRIM)))OR((((v0.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (- (MIN(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((- (MIN(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((- (MIN(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (- (MIN(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((- (MIN(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((- (MIN(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON (((HEX(v0.c0)))<=((((vt0.c1) NOT NULL)))) RIGHT OUTER JOIN v0 ON CAST(((vt0.c0)+(NULL)) AS BLOB);
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ((((('e|8')AND(v0.c0 COLLATE RTRIM)))OR((NOT (v0.c0))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT ((((('e|8')AND(v0.c0 COLLATE RTRIM)))OR((NOT (v0.c0))))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((((((('e|8')AND(v0.c0 COLLATE RTRIM)))OR((NOT (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0, v0 WHERE ((((vt0.c2)/(v0.c0)) IN (((vt0.c2)|(v0.c0))))) GROUP BY vt1.c0, vt0.c1, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0, v0 WHERE ((NOT ((((vt0.c2)/(v0.c0)) IN (((vt0.c2)|(v0.c0))))))) GROUP BY vt1.c0, vt0.c1, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0, v0 WHERE ((((((vt0.c2)/(v0.c0)) IN (((vt0.c2)|(v0.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt1, vt0 CROSS JOIN v0 ON ((v0.c0) ISNULL) COLLATE BINARY GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt1, vt0 CROSS JOIN v0 ON ((v0.c0) ISNULL) COLLATE BINARY GROUP BY vt0.c0, vt0.c1 HAVING vt1.c0 UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt1, vt0 CROSS JOIN v0 ON ((v0.c0) ISNULL) COLLATE BINARY GROUP BY vt0.c0, vt0.c1 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt1, vt0 CROSS JOIN v0 ON ((v0.c0) ISNULL) COLLATE BINARY GROUP BY vt0.c0, vt0.c1 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt1, vt0 CROSS JOIN v0 ON ((v0.c0) ISNULL) COLLATE BINARY GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt1, vt0 CROSS JOIN v0 ON ((v0.c0) ISNULL) COLLATE BINARY GROUP BY vt0.c0, vt0.c1 HAVING vt1.c0 UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt1, vt0 CROSS JOIN v0 ON ((v0.c0) ISNULL) COLLATE BINARY GROUP BY vt0.c0, vt0.c1 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt1, vt0 CROSS JOIN v0 ON ((v0.c0) ISNULL) COLLATE BINARY GROUP BY vt0.c0, vt0.c1 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt1, vt0 CROSS JOIN v0 ON ((v0.c0) ISNULL) COLLATE BINARY GROUP BY vt0.c0, vt0.c1;
SELECT v0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN v0 ON (((CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END))>=((((v0.c0)<=(v0.c0)))));
SELECT ALL v0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN v0 ON (((CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END))>=((((v0.c0)<=(v0.c0))))) WHERE (((NOT (v0.c0)) IN ('[]'))) UNION ALL SELECT v0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN v0 ON (((CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END))>=((((v0.c0)<=(v0.c0))))) WHERE ((NOT (((NOT (v0.c0)) IN ('[]'))))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN v0 ON (((CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END))>=((((v0.c0)<=(v0.c0))))) WHERE (((((NOT (v0.c0)) IN ('[]'))) ISNULL));
SELECT v0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN v0 ON (((CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END))>=((((v0.c0)<=(v0.c0)))));
SELECT DISTINCT vt0.c1, vt1.c0, v0.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON CAST((vt0.c2 IN ()) AS TEXT) FULL OUTER JOIN v0 ON LAST_INSERT_ROWID();
SELECT DISTINCT vt0.c1, vt1.c0, v0.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON CAST((vt0.c2 IN ()) AS TEXT) FULL OUTER JOIN v0 ON LAST_INSERT_ROWID() WHERE ((((vt0.c2)==(vt1.c0)) IN (CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN v0.c0 END, ((vt1.c0)|(vt0.c1))))) UNION SELECT DISTINCT vt0.c1, vt1.c0, v0.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON CAST((vt0.c2 IN ()) AS TEXT) FULL OUTER JOIN v0 ON LAST_INSERT_ROWID() WHERE ((NOT ((((vt0.c2)==(vt1.c0)) IN (CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN v0.c0 END, ((vt1.c0)|(vt0.c1))))))) UNION SELECT DISTINCT vt0.c1, vt1.c0, v0.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON CAST((vt0.c2 IN ()) AS TEXT) FULL OUTER JOIN v0 ON LAST_INSERT_ROWID() WHERE ((((((vt0.c2)=(vt1.c0)) IN (CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN v0.c0 END, ((vt1.c0)|(vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c1, vt1.c0, v0.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON CAST((vt0.c2 IN ()) AS TEXT) FULL OUTER JOIN v0 ON LAST_INSERT_ROWID();
SELECT vt1.c0 FROM v0 LEFT OUTER JOIN vt1 ON ((((x'')AND((+ (vt0.c2)))))AND(vt1.c0 COLLATE RTRIM)) RIGHT OUTER JOIN vt0 ON ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END) AND (vt0.c2 COLLATE BINARY)) GROUP BY vt1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(GROUP_CONCAT(v0.c0)))AND((+ (COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((AVG(GROUP_CONCAT(v0.c0)))AND((+ (COUNT(*))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((AVG(GROUP_CONCAT(v0.c0)))AND((+ (COUNT(*)))))) ISNULL);
SELECT * FROM vt0, v0, vt1;
SELECT * FROM vt0, v0, vt1 WHERE (TRIM(DISTINCT x'')) UNION ALL SELECT * FROM vt0, v0, vt1 WHERE ((NOT (TRIM(DISTINCT x'')))) UNION ALL SELECT ALL * FROM vt0, v0, vt1 WHERE (((TRIM(DISTINCT x'')) ISNULL));
SELECT * FROM vt0, v0, vt1;
SELECT DISTINCT vt0.c2, v0.c0, vt1.c0, vt0.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (((vt0.c2 IN ()))<>(((vt1.c0) NOT NULL))) INNER JOIN v0 ON ((((vt1.c0) BETWEEN (vt0.c2) AND (vt0.c1)))<((vt0.c1 IN ())));
SELECT DISTINCT vt0.c2, v0.c0, vt1.c0, vt0.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (((vt0.c2 IN ()))!=(((vt1.c0) NOT NULL))) INNER JOIN v0 ON ((((vt1.c0) BETWEEN (vt0.c2) AND (vt0.c1)))<((vt0.c1 IN ()))) WHERE ((~ ((- (vt1.c0))))) UNION SELECT DISTINCT vt0.c2, v0.c0, vt1.c0, vt0.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (((vt0.c2 IN ()))<>(((vt1.c0) NOT NULL))) INNER JOIN v0 ON ((((vt1.c0) BETWEEN (vt0.c2) AND (vt0.c1)))<((vt0.c1 IN ()))) WHERE ((NOT ((~ ((- (vt1.c0))))))) UNION SELECT DISTINCT vt0.c2, v0.c0, vt1.c0, vt0.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (((vt0.c2 IN ()))!=(((vt1.c0) NOT NULL))) INNER JOIN v0 ON ((((vt1.c0) BETWEEN (vt0.c2) AND (vt0.c1)))<((vt0.c1 IN ()))) WHERE ((((~ ((- (vt1.c0))))) ISNULL));
SELECT DISTINCT vt0.c2, v0.c0, vt1.c0, vt0.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (((vt0.c2 IN ()))<>(((vt1.c0) NOT NULL))) INNER JOIN v0 ON ((((vt1.c0) BETWEEN (vt0.c2) AND (vt0.c1)))<((vt0.c1 IN ())));
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt1, v0 WHERE ((((LIKELIHOOD(0.951957876723399, 0.559865823946821)))>((CAST(NULL AS NUMERIC))))) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM vt1, v0 WHERE ((NOT ((((LIKELIHOOD(0.951957876723399, 0.559865823946821)))>((CAST(NULL AS NUMERIC))))))) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM vt1, v0 WHERE ((((((LIKELIHOOD(0.951957876723399, 0.559865823946821)))>((CAST(NULL AS NUMERIC))))) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING CASE MAX(vt0.c2)  WHEN CASE GROUP_CONCAT(vt0.c1)  WHEN COUNT(AVG(AVG(vt0.c1))) THEN SUM(COUNT(*)) END THEN (((COUNT(SUM(MIN(vt0.c2))), vt0.c2, TOTAL(AVG(COUNT(*))), vt0.c2, vt0.c1))<((vt0.c2, vt0.c2, AVG(vt0.c2), -9223372036854775808, vt0.c2))) WHEN COUNT(COUNT(*)) THEN vt0.c0 WHEN vt0.c2 COLLATE BINARY THEN vt0.c1 END UNION ALL SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING (NOT (CASE MAX(vt0.c2)  WHEN CASE GROUP_CONCAT(vt0.c1)  WHEN COUNT(AVG(AVG(vt0.c1))) THEN SUM(COUNT(*)) END THEN (((COUNT(SUM(MIN(vt0.c2))), vt0.c2, TOTAL(AVG(COUNT(*))), vt0.c2, vt0.c1))<((vt0.c2, vt0.c2, AVG(vt0.c2), -9223372036854775808, vt0.c2))) WHEN COUNT(COUNT(*)) THEN vt0.c0 WHEN vt0.c2 COLLATE BINARY THEN vt0.c1 END)) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING ((CASE MAX(vt0.c2)  WHEN CASE GROUP_CONCAT(vt0.c1)  WHEN COUNT(AVG(AVG(vt0.c1))) THEN SUM(COUNT(*)) END THEN (((COUNT(SUM(MIN(vt0.c2))), vt0.c2, TOTAL(AVG(COUNT(*))), vt0.c2, vt0.c1))<((vt0.c2, vt0.c2, AVG(vt0.c2), -9223372036854775808, vt0.c2))) WHEN COUNT(COUNT(*)) THEN vt0.c0 WHEN vt0.c2 COLLATE BINARY THEN vt0.c1 END) ISNULL);
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE (((vt0.c1)|(vt0.c1)) COLLATE RTRIM) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c1)|(vt0.c1)) COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE (((((vt0.c1)|(vt0.c1)) COLLATE RTRIM) ISNULL));
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, vt1, v0;
SELECT DISTINCT * FROM vt0, vt1, v0 WHERE ((((((vt1.c0)) BETWEEN ((vt0.c2)) AND ((v0.c0))))<<(IFNULL(DISTINCT v0.c0, vt0.c1)))) UNION SELECT DISTINCT * FROM vt0, vt1, v0 WHERE ((NOT ((((((vt1.c0)) BETWEEN ((vt0.c2)) AND ((v0.c0))))<<(IFNULL(DISTINCT v0.c0, vt0.c1)))))) UNION SELECT DISTINCT * FROM vt0, vt1, v0 WHERE ((((((((vt1.c0)) BETWEEN ((vt0.c2)) AND ((v0.c0))))<<(IFNULL(DISTINCT v0.c0, vt0.c1)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, v0;
SELECT vt0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt1, vt0 WHERE (((UPPER(vt0.c1))>(((((vt0.c1)AND(v0.c0)))AND(vt0.c1))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt1, vt0 WHERE ((NOT (((UPPER(vt0.c1))>(((((vt0.c1)AND(v0.c0)))AND(vt0.c1))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt1, vt0 WHERE (((((UPPER(vt0.c1))>(((((vt0.c1)AND(v0.c0)))AND(vt0.c1))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0 HAVING LTRIM((~ (GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0 HAVING (NOT (LTRIM((~ (GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0 HAVING ((LTRIM((~ (GROUP_CONCAT(COUNT(*)))))) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM v0, vt0;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM v0, vt0 WHERE (0.042802862121494756) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM v0, vt0 WHERE ((NOT (0.042802862121494756))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2 FROM v0, vt0 WHERE (((0.042802862121494756) ISNULL));
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM v0, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0 WHERE (x'') GROUP BY vt0.c1, vt0.c0, vt0.c2 UNION SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0 WHERE ((NOT (x''))) GROUP BY vt0.c1, vt0.c0, vt0.c2 UNION SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0 WHERE (((x'') ISNULL)) GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT v0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0 HAVING SUM(SUM(vt0.c2)) UNION ALL SELECT v0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0 HAVING (NOT (SUM(SUM(vt0.c2)))) UNION ALL SELECT v0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0 HAVING ((SUM(SUM(vt0.c2))) ISNULL);
SELECT ALL * FROM v0, vt1, vt0;
SELECT ALL * FROM v0, vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))) AND (((vt0.c2 IN (vt0.c2, vt0.c1)))))) UNION ALL SELECT * FROM v0, vt1, vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))) AND (((vt0.c2 IN (vt0.c2, vt0.c1)))))))) UNION ALL SELECT * FROM v0, vt1, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))) AND (((vt0.c2 IN (vt0.c2, vt0.c1)))))) ISNULL));
SELECT ALL * FROM v0, vt1, vt0;
SELECT DISTINCT v0.c0, vt0.c2 FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c2 FROM v0, vt0 WHERE ((((NOT (vt0.c2))) NOT BETWEEN (CAST(vt0.c2 AS NUMERIC)) AND (vt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT v0.c0, vt0.c2 FROM v0, vt0 WHERE ((NOT ((((NOT (vt0.c2))) NOT BETWEEN (CAST(vt0.c2 AS NUMERIC)) AND (vt0.c2 COLLATE BINARY))))) UNION SELECT DISTINCT v0.c0, vt0.c2 FROM v0, vt0 WHERE ((((((NOT (vt0.c2))) NOT BETWEEN (CAST(vt0.c2 AS NUMERIC)) AND (vt0.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c2 FROM v0, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, vt1.c0, vt0.c1, vt0.c2, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2, v0.c0;
SELECT ALL vt0.c0, vt1.c0, vt0.c1, vt0.c2, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2, v0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c1, vt0.c2, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1, vt0.c2, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, vt1.c0, vt0.c1, vt0.c2, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2, v0.c0;
SELECT ALL vt0.c0, vt1.c0, vt0.c1, vt0.c2, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2, v0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c1, vt0.c2, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1, vt0.c2, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, vt1.c0, vt0.c1, vt0.c2, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2, v0.c0;
SELECT SUM((((((v0.c0 IN (vt1.c0)))AND((- (v0.c0)))))AND(CAST(v0.c0 AS TEXT)))) FROM v0, vt1;
SELECT * FROM v0, vt1;
SELECT ALL * FROM v0, vt1 WHERE (CAST(vt1.c0 AS TEXT) COLLATE RTRIM) UNION ALL SELECT * FROM v0, vt1 WHERE ((NOT (CAST(vt1.c0 AS TEXT) COLLATE RTRIM))) UNION ALL SELECT * FROM v0, vt1 WHERE (((CAST(vt1.c0 AS TEXT) COLLATE RTRIM) ISNULL));
SELECT * FROM v0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM v0, vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM v0, vt0, vt1 WHERE (CASE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))  WHEN CASE WHEN vt0.c0 THEN v0.c0 ELSE vt1.c0 END THEN ((vt0.c2) NOT NULL) ELSE CAST(vt0.c1 AS BLOB) END) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM v0, vt0, vt1 WHERE ((NOT (CASE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))  WHEN CASE WHEN vt0.c0 THEN v0.c0 ELSE vt1.c0 END THEN ((vt0.c2) NOT NULL) ELSE CAST(vt0.c1 AS BLOB) END))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM v0, vt0, vt1 WHERE (((CASE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))  WHEN CASE WHEN vt0.c0 THEN v0.c0 ELSE vt1.c0 END THEN ((vt0.c2) NOT NULL) ELSE CAST(vt0.c1 AS BLOB) END) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM v0, vt0, vt1;
SELECT ALL vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (((- (vt0.c0)))LIKE((- (x'')))) GROUP BY vt1.c0, vt0.c2, vt0.c1, vt0.c0;
SELECT vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (((- (vt0.c0)))LIKE((- (x'')))) WHERE (((((((vt0.c0)IS(vt0.c2)))OR('-1038201395')))OR(vt0.c0 COLLATE RTRIM))) GROUP BY vt1.c0, vt0.c2, vt0.c1, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (((- (vt0.c0)))LIKE((- (x'')))) WHERE ((NOT (((((((vt0.c0)IS(vt0.c2)))OR('-1038201395')))OR(vt0.c0 COLLATE RTRIM))))) GROUP BY vt1.c0, vt0.c2, vt0.c1, vt0.c0 UNION SELECT vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (((- (vt0.c0)))LIKE((- (x'')))) WHERE (((((((((vt0.c0)IS(vt0.c2)))OR('-1038201395')))OR(vt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt1.c0, vt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (((- (vt0.c0)))LIKE((- (x'')))) GROUP BY vt1.c0, vt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) COLLATE NOCASE COLLATE BINARY UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*) COLLATE NOCASE COLLATE BINARY)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*) COLLATE NOCASE COLLATE BINARY) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) COLLATE NOCASE COLLATE BINARY UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*) COLLATE NOCASE COLLATE BINARY)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*) COLLATE NOCASE COLLATE BINARY) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL MIN(v0.c0) FROM v0, vt0, vt1 ORDER BY (((+ ('s*5ש訫M'))) NOT NULL) ASC;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c1) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt1 CROSS JOIN v0 ON (NOT ((((NULL, vt1.c0, v0.c0, vt1.c0, v0.c0))>((vt1.c0, v0.c0, v0.c0, vt1.c0, v0.c0)))));
SELECT DISTINCT * FROM vt1 CROSS JOIN v0 ON (NOT ((((NULL, vt1.c0, v0.c0, vt1.c0, v0.c0))>((vt1.c0, v0.c0, v0.c0, vt1.c0, v0.c0))))) WHERE (((((v0.c0)GLOB(v0.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN v0 ON (NOT ((((NULL, vt1.c0, v0.c0, vt1.c0, v0.c0))>((vt1.c0, v0.c0, v0.c0, vt1.c0, v0.c0))))) WHERE ((NOT (((((v0.c0)GLOB(v0.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN v0 ON (NOT ((((NULL, vt1.c0, v0.c0, vt1.c0, v0.c0))>((vt1.c0, v0.c0, v0.c0, vt1.c0, v0.c0))))) WHERE (((((((v0.c0)GLOB(v0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt1 CROSS JOIN v0 ON (NOT ((((NULL, vt1.c0, v0.c0, vt1.c0, v0.c0))>((vt1.c0, v0.c0, v0.c0, vt1.c0, v0.c0)))));
SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 WHERE ('K+') GROUP BY vt1.c0, v0.c0 UNION SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 WHERE ((NOT ('K+'))) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM v0, vt1 WHERE ((('K+') ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((((CAST(v0.c0 AS REAL))OR((v0.c0 IN ()))))AND(rtreenode(v0.c0, v0.c0)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((CAST(v0.c0 AS REAL))OR((v0.c0 IN ()))))AND(rtreenode(v0.c0, v0.c0)))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((CAST(v0.c0 AS REAL))OR((v0.c0 IN ()))))AND(rtreenode(v0.c0, v0.c0)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST((+ (vt1.c0)) AS INTEGER)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST((+ (vt1.c0)) AS INTEGER)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST((+ (vt1.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON CASE WHEN CAST(vt0.c2 AS TEXT) THEN (('0.951957876723399')||(v0.c0)) END CROSS JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN v0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END)) AND ((1181526316))) GROUP BY vt1.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING CAST(((vt0.c2) NOT BETWEEN (v0.c0) AND (vt0.c2)) AS BLOB) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (CAST(((vt0.c2) NOT BETWEEN (v0.c0) AND (vt0.c2)) AS BLOB))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((CAST(((vt0.c2) NOT BETWEEN (v0.c0) AND (vt0.c2)) AS BLOB)) ISNULL);
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING CAST(((vt0.c2) NOT BETWEEN (v0.c0) AND (vt0.c2)) AS BLOB) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (CAST(((vt0.c2) NOT BETWEEN (v0.c0) AND (vt0.c2)) AS BLOB))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((CAST(((vt0.c2) NOT BETWEEN (v0.c0) AND (vt0.c2)) AS BLOB)) ISNULL);
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT * FROM vt0, v0, vt1;
SELECT * FROM vt0, v0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END)||(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))))) UNION ALL SELECT ALL * FROM vt0, v0, vt1 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt1.c0 END)||(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))))))) UNION ALL SELECT * FROM vt0, v0, vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 END)||(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))))) ISNULL));
SELECT * FROM vt0, v0, vt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE (v0.c0 IN ())  WHEN (v0.c0 IN ()) THEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((0.9250858528786762, v0.c0, v0.c0))) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE (v0.c0 IN ())  WHEN (v0.c0 IN ()) THEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((0.9250858528786762, v0.c0, v0.c0))) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE (v0.c0 IN ())  WHEN (v0.c0 IN ()) THEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((0.9250858528786762, v0.c0, v0.c0))) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((x'e71e')IS NOT(((vt0.c1)|(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((x'e71e')IS NOT(((vt0.c1)|(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((x'e71e')IS NOT(((vt0.c1)|(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0 HAVING MIN((((GROUP_CONCAT(vt1.c0), vt0.c1, AVG(vt1.c0)))<((TOTAL(vt0.c1), COUNT(v0.c0), vt0.c1)))) UNION ALL SELECT ALL vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0 HAVING (NOT (MIN((((GROUP_CONCAT(vt1.c0), vt0.c1, AVG(vt1.c0)))<((TOTAL(vt0.c1), COUNT(v0.c0), vt0.c1)))))) UNION ALL SELECT ALL vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0 HAVING ((MIN((((GROUP_CONCAT(vt1.c0), vt0.c1, AVG(vt1.c0)))<((TOTAL(vt0.c1), COUNT(v0.c0), vt0.c1))))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT vt0.c2, v0.c0 FROM v0, vt0 NATURAL JOIN vt1;
SELECT DISTINCT vt0.c2, v0.c0 FROM v0, vt0 NATURAL JOIN vt1 WHERE (((((vt1.c0)>(vt0.c1))) BETWEEN (CASE vt1.c0  WHEN vt0.c2 THEN vt1.c0 ELSE vt0.c0 END) AND (UPPER(vt0.c2)))) UNION SELECT DISTINCT vt0.c2, v0.c0 FROM v0, vt0 NATURAL JOIN vt1 WHERE ((NOT (((((vt1.c0)>(vt0.c1))) BETWEEN (CASE vt1.c0  WHEN vt0.c2 THEN vt1.c0 ELSE vt0.c0 END) AND (UPPER(vt0.c2)))))) UNION SELECT DISTINCT vt0.c2, v0.c0 FROM v0, vt0 NATURAL JOIN vt1 WHERE (((((((vt1.c0)>(vt0.c1))) BETWEEN (CASE vt1.c0  WHEN vt0.c2 THEN vt1.c0 ELSE vt0.c0 END) AND (UPPER(vt0.c2)))) ISNULL));
SELECT DISTINCT vt0.c2, v0.c0 FROM v0, vt0 NATURAL JOIN vt1;
SELECT ALL vt0.c2, vt0.c0, v0.c0, vt1.c0, vt0.c1 FROM v0, vt1, vt0 GROUP BY vt0.c2, vt0.c0, v0.c0, vt1.c0, vt0.c1;
SELECT vt0.c2, vt0.c0, v0.c0, vt1.c0, vt0.c1 FROM v0, vt1, vt0 WHERE (((vt0.c2) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (CASE WHEN vt0.c2 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN '' THEN vt1.c0 ELSE v0.c0 END))) GROUP BY vt0.c2, vt0.c0, v0.c0, vt1.c0, vt0.c1 UNION SELECT vt0.c2, vt0.c0, v0.c0, vt1.c0, vt0.c1 FROM v0, vt1, vt0 WHERE ((NOT (((vt0.c2) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (CASE WHEN vt0.c2 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN '' THEN vt1.c0 ELSE v0.c0 END))))) GROUP BY vt0.c2, vt0.c0, v0.c0, vt1.c0, vt0.c1 UNION SELECT vt0.c2, vt0.c0, v0.c0, vt1.c0, vt0.c1 FROM v0, vt1, vt0 WHERE (((((vt0.c2) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (CASE WHEN vt0.c2 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN '' THEN vt1.c0 ELSE v0.c0 END))) ISNULL)) GROUP BY vt0.c2, vt0.c0, v0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, v0.c0, vt1.c0, vt0.c1 FROM v0, vt1, vt0 GROUP BY vt0.c2, vt0.c0, v0.c0, vt1.c0, vt0.c1;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0 HAVING SUM(MAX(COUNT(GROUP_CONCAT(MIN(vt0.c0))))) UNION ALL SELECT vt1.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0 HAVING (NOT (SUM(MAX(COUNT(GROUP_CONCAT(MIN(vt0.c0))))))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0 HAVING ((SUM(MAX(COUNT(GROUP_CONCAT(MIN(vt0.c0)))))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (v0.c0) UNION ALL SELECT * FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0, vt0.c1, vt0.c0, vt0.c2 FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c1, vt0.c0, vt0.c2 FROM v0, vt0 WHERE (((v0.c0) BETWEEN (vt0.c2) AND (vt0.c1)) COLLATE BINARY) UNION SELECT DISTINCT v0.c0, vt0.c1, vt0.c0, vt0.c2 FROM v0, vt0 WHERE ((NOT (((v0.c0) BETWEEN (vt0.c2) AND (vt0.c1)) COLLATE BINARY))) UNION SELECT DISTINCT v0.c0, vt0.c1, vt0.c0, vt0.c2 FROM v0, vt0 WHERE (((((v0.c0) BETWEEN (vt0.c2) AND (vt0.c1)) COLLATE BINARY) ISNULL));
SELECT DISTINCT v0.c0, vt0.c1, vt0.c0, vt0.c2 FROM v0, vt0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0 WHERE (((TYPEOF(DISTINCT x''))<((+ (vt0.c0))))) GROUP BY vt0.c2, vt0.c0 UNION SELECT vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT (((TYPEOF(DISTINCT x''))<((+ (vt0.c0))))))) GROUP BY vt0.c2, vt0.c0 UNION SELECT ALL vt0.c2, vt0.c0 FROM vt0 WHERE (((((TYPEOF(DISTINCT x''))<((+ (vt0.c0))))) ISNULL)) GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING CAST(TOTAL(AVG(COUNT(*))) AS INTEGER) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (CAST(TOTAL(AVG(COUNT(*))) AS INTEGER))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((CAST(TOTAL(AVG(COUNT(*))) AS INTEGER)) ISNULL);
SELECT * FROM vt1, vt0 NATURAL JOIN v0;
SELECT * FROM vt1, vt0 NATURAL JOIN v0 WHERE (CAST((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c0))) AS NUMERIC)) UNION ALL SELECT ALL * FROM vt1, vt0 NATURAL JOIN v0 WHERE ((NOT (CAST((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c0))) AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt1, vt0 NATURAL JOIN v0 WHERE (((CAST((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c0))) AS NUMERIC)) ISNULL));
SELECT * FROM vt1, vt0 NATURAL JOIN v0;
SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0 WHERE ('708336003') UNION SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT ('708336003'))) UNION SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0 WHERE ((('708336003') ISNULL));
SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (INSTR(((vt0.c1) IS FALSE), CAST(vt0.c2 AS NUMERIC))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (INSTR(((vt0.c1) IS FALSE), CAST(vt0.c2 AS NUMERIC))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((INSTR(((vt0.c1) IS FALSE), CAST(vt0.c2 AS NUMERIC))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c2, vt1.c0, vt0.c1 FROM vt0, v0, vt1 GROUP BY vt0.c2, vt1.c0, vt0.c1;
SELECT ALL vt0.c2, vt1.c0, vt0.c1 FROM vt0, v0, vt1 GROUP BY vt0.c2, vt1.c0, vt0.c1 HAVING 0.877843438026105 UNION ALL SELECT ALL vt0.c2, vt1.c0, vt0.c1 FROM vt0, v0 NOT INDEXED, vt1 GROUP BY vt0.c2, vt1.c0, vt0.c1 HAVING (NOT (0.877843438026105)) UNION ALL SELECT vt0.c2, vt1.c0, vt0.c1 FROM vt0, v0, vt1 GROUP BY vt0.c2, vt1.c0, vt0.c1 HAVING ((0.877843438026105) ISNULL);
SELECT ALL vt0.c2, vt1.c0, vt0.c1 FROM vt0, v0, vt1 GROUP BY vt0.c2, vt1.c0, vt0.c1;
SELECT ALL vt0.c2, vt1.c0, vt0.c1 FROM vt0, v0, vt1 GROUP BY vt0.c2, vt1.c0, vt0.c1 HAVING 0.877843438026105 UNION ALL SELECT ALL vt0.c2, vt1.c0, vt0.c1 FROM vt0, v0 NOT INDEXED, vt1 GROUP BY vt0.c2, vt1.c0, vt0.c1 HAVING (NOT (0.877843438026105)) UNION ALL SELECT vt0.c2, vt1.c0, vt0.c1 FROM vt0, v0, vt1 GROUP BY vt0.c2, vt1.c0, vt0.c1 HAVING ((0.877843438026105) ISNULL);
SELECT ALL vt0.c2, vt1.c0, vt0.c1 FROM vt0, v0, vt1 GROUP BY vt0.c2, vt1.c0, vt0.c1;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))>((+ (vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS BLOB))>((+ (vt1.c0))))))) UNION ALL SELECT * FROM vt1 WHERE (((((CAST(vt1.c0 AS BLOB))>((+ (vt1.c0))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (((((vt1.c0)|(vt0.c1)))IS NOT(((((vt0.c2)AND(v0.c0)))AND(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE ((NOT (((((vt1.c0)|(vt0.c1)))IS NOT(((((vt0.c2)AND(v0.c0)))AND(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (((((((vt1.c0)|(vt0.c1)))IS NOT(((((vt0.c2)AND(v0.c0)))AND(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT vt0.c0, vt0.c1, v0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt0.c1, v0.c0, vt1.c0;
SELECT vt0.c0, vt0.c1, v0.c0, vt1.c0 FROM vt0, v0, vt1 WHERE (CASE ((vt0.c1) IS TRUE)  WHEN CASE vt0.c1  WHEN v0.c0 THEN v0.c0 END THEN (- (-7.18310292E8)) END) GROUP BY vt0.c0, vt0.c1, v0.c0, vt1.c0 UNION SELECT vt0.c0, vt0.c1, v0.c0, vt1.c0 FROM vt0, v0, vt1 WHERE ((NOT (CASE ((vt0.c1) IS TRUE)  WHEN CASE vt0.c1  WHEN v0.c0 THEN v0.c0 END THEN (- (-7.18310292E8)) END))) GROUP BY vt0.c0, vt0.c1, v0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt0.c1, v0.c0, vt1.c0 FROM vt0, v0, vt1 WHERE (((CASE ((vt0.c1) IS TRUE)  WHEN CASE vt0.c1  WHEN v0.c0 THEN v0.c0 END THEN (- (-7.18310292E8)) END) ISNULL)) GROUP BY vt0.c0, vt0.c1, v0.c0, vt1.c0;
SELECT vt0.c0, vt0.c1, v0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt0.c1, v0.c0, vt1.c0;
SELECT ALL vt1.c0, v0.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt0, v0, vt1 GROUP BY vt1.c0, v0.c0, vt0.c0, vt0.c1, vt0.c2;
SELECT vt1.c0, v0.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt0, v0, vt1 GROUP BY vt1.c0, v0.c0, vt0.c0, vt0.c1, vt0.c2 HAVING CAST(((vt0.c2) BETWEEN (COUNT(TOTAL(MIN(v0.c0)))) AND (vt0.c0)) AS INTEGER) UNION ALL SELECT ALL vt1.c0, v0.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt0, v0, vt1 GROUP BY vt1.c0, v0.c0, vt0.c0, vt0.c1, vt0.c2 HAVING (NOT (CAST(((vt0.c2) BETWEEN (COUNT(TOTAL(MIN(v0.c0)))) AND (vt0.c0)) AS INTEGER))) UNION ALL SELECT ALL vt1.c0, v0.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt0, v0, vt1 GROUP BY vt1.c0, v0.c0, vt0.c0, vt0.c1, vt0.c2 HAVING ((CAST(((vt0.c2) BETWEEN (COUNT(TOTAL(MIN(v0.c0)))) AND (vt0.c0)) AS INTEGER)) ISNULL);
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c1)AND((vt0.c2 IN (v0.c0, vt1.c0)))))OR(((vt0.c2)||('-1758018904')))) CROSS JOIN vt1 ON CAST(((vt1.c0)LIKE(NULL)) AS REAL);
SELECT DISTINCT * FROM vt0, v0 LEFT OUTER JOIN vt1 ON ((NULL)+(CAST(vt0.c1 AS TEXT)));
SELECT DISTINCT * FROM vt0, v0 LEFT OUTER JOIN vt1 ON ((NULL)+(CAST(vt0.c1 AS TEXT))) WHERE (((((vt0.c0)AND(vt0.c2))) IS FALSE)) UNION SELECT DISTINCT * FROM vt0, v0 LEFT OUTER JOIN vt1 ON ((NULL)+(CAST(vt0.c1 AS TEXT))) WHERE ((NOT (((((vt0.c0)AND(vt0.c2))) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0, v0 NOT INDEXED LEFT OUTER JOIN vt1 ON ((NULL)+(CAST(vt0.c1 AS TEXT))) WHERE (((((((vt0.c0)AND(vt0.c2))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt0, v0 LEFT OUTER JOIN vt1 ON ((NULL)+(CAST(vt0.c1 AS TEXT)));
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt1.c0)))AND(v0.c0 COLLATE NOCASE)))AND(CASE vt1.c0  WHEN -3.686641E8 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, v0 WHERE ((NOT (((((((((((((vt1.c0)OR(vt1.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt1.c0)))AND(v0.c0 COLLATE NOCASE)))AND(CASE vt1.c0  WHEN -3.686641E8 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 END))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, v0 WHERE (((((((((((((((vt1.c0)OR(vt1.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt1.c0)))AND(v0.c0 COLLATE NOCASE)))AND(CASE vt1.c0  WHEN -3.686641E8 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 END))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING COUNT(*) COLLATE RTRIM UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING (NOT (COUNT(*) COLLATE RTRIM)) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING ((COUNT(*) COLLATE RTRIM) ISNULL);
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING COUNT(*) COLLATE RTRIM UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING (NOT (COUNT(*) COLLATE RTRIM)) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING ((COUNT(*) COLLATE RTRIM) ISNULL);
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<((((NULL) BETWEEN (v0.c0) AND (v0.c0)))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<((((NULL) BETWEEN (v0.c0) AND (v0.c0)))))))) UNION ALL SELECT * FROM v0 WHERE ((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<((((NULL) BETWEEN (v0.c0) AND (v0.c0)))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((- (vt1.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((- (vt1.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((- (vt1.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt0.c0, vt1.c0, v0.c0, vt0.c1, vt0.c2 FROM vt1, vt0 FULL OUTER JOIN v0 ON (- ((((vt1.c0))!=((vt0.c0))))) GROUP BY vt0.c0, vt1.c0, v0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, vt1.c0, v0.c0, vt0.c1, vt0.c2 FROM vt1, vt0 FULL OUTER JOIN v0 ON (- ((((vt1.c0))<>((vt0.c0))))) WHERE (CAST((((vt0.c1))>=((vt0.c2))) AS BLOB)) GROUP BY vt0.c0, vt1.c0, v0.c0, vt0.c1, vt0.c2 UNION SELECT vt0.c0, vt1.c0, v0.c0, vt0.c1, vt0.c2 FROM vt1, vt0 FULL OUTER JOIN v0 ON (- ((((vt1.c0))<>((vt0.c0))))) WHERE ((NOT (CAST((((vt0.c1))>=((vt0.c2))) AS BLOB)))) GROUP BY vt0.c0, vt1.c0, v0.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt0.c0, vt1.c0, v0.c0, vt0.c1, vt0.c2 FROM vt1, vt0 FULL OUTER JOIN v0 ON (- ((((vt1.c0))!=((vt0.c0))))) WHERE (((CAST((((vt0.c1))>=((vt0.c2))) AS BLOB)) ISNULL)) GROUP BY vt0.c0, vt1.c0, v0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, vt1.c0, v0.c0, vt0.c1, vt0.c2 FROM vt1, vt0 FULL OUTER JOIN v0 ON (- ((((vt1.c0))!=((vt0.c0))))) GROUP BY vt0.c0, vt1.c0, v0.c0, vt0.c1, vt0.c2;
SELECT vt0.c1 FROM v0, vt1, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM v0, vt1, vt0 GROUP BY vt0.c1 HAVING GROUP_CONCAT(COUNT(vt1.c0)) UNION ALL SELECT ALL vt0.c1 FROM v0, vt1, vt0 GROUP BY vt0.c1 HAVING (NOT (GROUP_CONCAT(COUNT(vt1.c0)))) UNION ALL SELECT vt0.c1 FROM v0, vt1, vt0 GROUP BY vt0.c1 HAVING ((GROUP_CONCAT(COUNT(vt1.c0))) ISNULL);
SELECT MAX(CAST(vt0.c1 AS REAL) COLLATE RTRIM) FROM v0, vt0;
SELECT ALL vt0.c1, v0.c0, vt0.c2, vt0.c0 FROM vt0, v0;
SELECT ALL vt0.c1, v0.c0, vt0.c2, vt0.c0 FROM vt0, v0 WHERE ((((v0.c0 IN ())) NOTNULL)) UNION ALL SELECT ALL vt0.c1, v0.c0, vt0.c2, vt0.c0 FROM vt0, v0 WHERE ((NOT ((((v0.c0 IN ())) NOTNULL)))) UNION ALL SELECT ALL vt0.c1, v0.c0, vt0.c2, vt0.c0 FROM vt0, v0 WHERE ((((((v0.c0 IN ())) NOTNULL)) ISNULL));
SELECT ALL vt0.c1, v0.c0, vt0.c2, vt0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, v0 WHERE (((vt1.c0)%((NOT (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((NOT (((vt1.c0)%((NOT (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE (((((vt1.c0)%((NOT (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, v0;
SELECT ALL v0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY v0.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c1 FROM vt1, vt0 NOT INDEXED, v0 WHERE ((((((~ (v0.c0)))OR(vt0.c1 COLLATE BINARY)))AND(v0.c0))) GROUP BY v0.c0, vt0.c1 UNION SELECT ALL v0.c0, vt0.c1 FROM vt1, vt0, v0 WHERE ((NOT ((((((~ (v0.c0)))OR(vt0.c1 COLLATE BINARY)))AND(v0.c0))))) GROUP BY v0.c0, vt0.c1 UNION SELECT ALL v0.c0, vt0.c1 FROM vt1, vt0, v0 WHERE ((((((((~ (v0.c0)))OR(vt0.c1 COLLATE BINARY)))AND(v0.c0))) ISNULL)) GROUP BY v0.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY v0.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c2, vt0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c2, vt0.c1;
SELECT ALL v0.c0, vt0.c2, vt0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c2, vt0.c1 HAVING MIN(COUNT(*)) UNION ALL SELECT v0.c0, vt0.c2, vt0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c2, vt0.c1 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT v0.c0, vt0.c2, vt0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c2, vt0.c1 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN ())) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((vt1.c0 COLLATE BINARY IN ())))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((vt1.c0 COLLATE BINARY IN ())) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (json_insert(((vt1.c0)IS NOT(vt1.c0)), (((vt1.c0))<=((vt1.c0))), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (json_insert(((vt1.c0)IS NOT(vt1.c0)), (((vt1.c0))<=((vt1.c0))), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((json_insert(((vt1.c0)IS NOT(vt1.c0)), (((vt1.c0))<=((vt1.c0))), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) ISNULL));
SELECT ALL vt0.c1, v0.c0, vt0.c2, vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c1, v0.c0, vt0.c2, vt0.c0, vt1.c0;
SELECT vt0.c1, v0.c0, vt0.c2, vt0.c0, vt1.c0 FROM vt0, v0, vt1 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ((~ (vt0.c1))))) GROUP BY vt0.c1, v0.c0, vt0.c2, vt0.c0, vt1.c0 UNION SELECT vt0.c1, v0.c0, vt0.c2, vt0.c0, vt1.c0 FROM vt0, v0, vt1 WHERE ((NOT ((CAST(vt0.c0 AS NUMERIC) IN ((~ (vt0.c1))))))) GROUP BY vt0.c1, v0.c0, vt0.c2, vt0.c0, vt1.c0 UNION SELECT ALL vt0.c1, v0.c0, vt0.c2, vt0.c0, vt1.c0 FROM vt0, v0, vt1 WHERE ((((CAST(vt0.c0 AS NUMERIC) IN ((~ (vt0.c1))))) ISNULL)) GROUP BY vt0.c1, v0.c0, vt0.c2, vt0.c0, vt1.c0;
SELECT ALL vt0.c1, v0.c0, vt0.c2, vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c1, v0.c0, vt0.c2, vt0.c0, vt1.c0;
SELECT vt0.c1, v0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0, vt1.c0;
SELECT vt0.c1, v0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0, vt1.c0 HAVING ((((((((COUNT(v0.c0))OR(((((v0.c0)AND(vt0.c2)))OR(MIN(v0.c0))))))OR(((v0.c0) NOT BETWEEN (vt0.c2) AND (GROUP_CONCAT(vt1.c0))))))AND(TYPEOF(DISTINCT MAX(AVG(GROUP_CONCAT(v0.c0)))))))AND(GROUP_CONCAT(v0.c0))) UNION ALL SELECT ALL vt0.c1, v0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0, vt1.c0 HAVING (NOT (((((((((COUNT(v0.c0))OR(((((v0.c0)AND(vt0.c2)))OR(MIN(v0.c0))))))OR(((v0.c0) NOT BETWEEN (vt0.c2) AND (GROUP_CONCAT(vt1.c0))))))AND(TYPEOF(DISTINCT MAX(AVG(GROUP_CONCAT(v0.c0)))))))AND(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT ALL vt0.c1, v0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0, vt1.c0 HAVING ((((((((((COUNT(v0.c0))OR(((((v0.c0)AND(vt0.c2)))OR(MIN(v0.c0))))))OR(((v0.c0) NOT BETWEEN (vt0.c2) AND (GROUP_CONCAT(vt1.c0))))))AND(TYPEOF(DISTINCT MAX(AVG(GROUP_CONCAT(v0.c0)))))))AND(GROUP_CONCAT(v0.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1, v0;
SELECT vt1.c0 FROM vt1, v0 WHERE (((((v0.c0)AND(v0.c0)))OR(vt1.c0)) COLLATE RTRIM) UNION ALL SELECT vt1.c0 FROM vt1, v0 WHERE ((NOT (((((v0.c0)AND(v0.c0)))OR(vt1.c0)) COLLATE RTRIM))) UNION ALL SELECT vt1.c0 FROM vt1, v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT vt1.c0 FROM vt1, v0;
SELECT DISTINCT v0.c0 FROM vt0, v0 CROSS JOIN vt1 ON (NOT (v0.c0));
SELECT DISTINCT v0.c0 FROM vt0, v0 CROSS JOIN vt1 ON (NOT (v0.c0)) WHERE ((((vt0.c0) NOT BETWEEN ('') AND (vt0.c2)) IN ())) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 CROSS JOIN vt1 ON (NOT (v0.c0)) WHERE ((NOT ((((vt0.c0) NOT BETWEEN ('') AND (vt0.c2)) IN ())))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 CROSS JOIN vt1 ON (NOT (v0.c0)) WHERE ((((((vt0.c0) NOT BETWEEN ('') AND (vt0.c2)) IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0, v0 CROSS JOIN vt1 ON (NOT (v0.c0));
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM vt0 WHERE (((((NULL)OR(((((((((vt0.c0)OR(vt0.c2)))AND(x'')))OR(vt0.c2)))OR(vt0.c1)))))OR(CASE WHEN vt0.c0 THEN vt0.c1 END))) GROUP BY vt0.c2, vt0.c1 UNION SELECT vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (((((NULL)OR(((((((((vt0.c0)OR(vt0.c2)))AND(x'')))OR(vt0.c2)))OR(vt0.c1)))))OR(CASE WHEN vt0.c0 THEN vt0.c1 END))))) GROUP BY vt0.c2, vt0.c1 UNION SELECT vt0.c2, vt0.c1 FROM vt0 WHERE (((((((NULL)OR(((((((((vt0.c0)OR(vt0.c2)))AND(x'')))OR(vt0.c2)))OR(vt0.c1)))))OR(CASE WHEN vt0.c0 THEN vt0.c1 END))) ISNULL)) GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL v0.c0, vt0.c0, vt1.c0, vt0.c2 FROM vt0, v0, vt1 GROUP BY v0.c0, vt0.c0, vt1.c0, vt0.c2;
SELECT ALL v0.c0, vt0.c0, vt1.c0, vt0.c2 FROM vt0, v0, vt1 GROUP BY v0.c0, vt0.c0, vt1.c0, vt0.c2 HAVING MIN(MIN(NULL)) UNION ALL SELECT ALL v0.c0, vt0.c0, vt1.c0, vt0.c2 FROM vt0, v0, vt1 GROUP BY v0.c0, vt0.c0, vt1.c0, vt0.c2 HAVING (NOT (MIN(MIN(NULL)))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt1.c0, vt0.c2 FROM vt0, v0, vt1 GROUP BY v0.c0, vt0.c0, vt1.c0, vt0.c2 HAVING ((MIN(MIN(NULL))) ISNULL);
SELECT ALL vt0.c0, vt0.c2 FROM vt0, vt1;
SELECT vt0.c0, vt0.c2 FROM vt0, vt1 WHERE ((((vt0.c2 IN ())) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)>>(vt0.c2))))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0, vt1 WHERE ((NOT ((((vt0.c2 IN ())) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)>>(vt0.c2))))))) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt0, vt1 WHERE ((((((vt0.c2 IN ())) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)>>(vt0.c2))))) ISNULL));
SELECT ALL vt0.c0, vt0.c2 FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1, v0;
SELECT DISTINCT * FROM vt0, vt1, v0 WHERE (x'7d3d') UNION SELECT DISTINCT * FROM vt0, vt1, v0 WHERE ((NOT (x'7d3d'))) UNION SELECT DISTINCT * FROM vt0, vt1, v0 WHERE (((x'7d3d') ISNULL));
SELECT DISTINCT * FROM vt0, vt1, v0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (json_type(vt1.c0) COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (json_type(vt1.c0) COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((json_type(vt1.c0) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING AVG(((MIN(v0.c0)) BETWEEN (v0.c0) AND (MIN('')))) UNION ALL SELECT v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING (NOT (AVG(((MIN(v0.c0)) BETWEEN (v0.c0) AND (MIN('')))))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING ((AVG(((MIN(v0.c0)) BETWEEN (v0.c0) AND (MIN(''))))) ISNULL);
SELECT * FROM v0, vt1;
SELECT * FROM v0, vt1 WHERE (UNLIKELY(LIKE(vt1.c0, v0.c0))) UNION ALL SELECT * FROM v0, vt1 WHERE ((NOT (UNLIKELY(LIKE(vt1.c0, v0.c0))))) UNION ALL SELECT ALL * FROM v0, vt1 WHERE (((UNLIKELY(LIKE(vt1.c0, v0.c0))) ISNULL));
SELECT * FROM v0, vt1;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0, vt1 WHERE (((((((((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c1)))<<(((((vt0.c1)OR(vt1.c0)))OR(vt0.c1))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0, vt1 WHERE ((NOT (((((((((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c1)))<<(((((vt0.c1)OR(vt1.c0)))OR(vt0.c1))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0, vt1 WHERE (((((((((((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c1)))<<(((((vt0.c1)OR(vt1.c0)))OR(vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0, vt1;
SELECT ALL vt0.c2, vt0.c0, v0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN v0 ON (~ (vt0.c2)) COLLATE NOCASE GROUP BY vt0.c2, vt0.c0, v0.c0, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, v0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN v0 ON (~ (vt0.c2)) COLLATE NOCASE WHERE (UPPER((vt0.c0 IN ()))) GROUP BY vt0.c2, vt0.c0, v0.c0, vt0.c1 UNION SELECT vt0.c2, vt0.c0, v0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN v0 ON (~ (vt0.c2)) COLLATE NOCASE WHERE ((NOT (UPPER((vt0.c0 IN ()))))) GROUP BY vt0.c2, vt0.c0, v0.c0, vt0.c1 UNION SELECT vt0.c2, vt0.c0, v0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN v0 ON (~ (vt0.c2)) COLLATE NOCASE WHERE (((UPPER((vt0.c0 IN ()))) ISNULL)) GROUP BY vt0.c2, vt0.c0, v0.c0, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, v0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN v0 ON (~ (vt0.c2)) COLLATE NOCASE GROUP BY vt0.c2, vt0.c0, v0.c0, vt0.c1;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING SUM(SUM(vt1.c0) COLLATE BINARY) UNION ALL SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING (NOT (SUM(SUM(vt1.c0) COLLATE BINARY))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING ((SUM(SUM(vt1.c0) COLLATE BINARY)) ISNULL);
SELECT * FROM vt1, v0;
SELECT ALL * FROM vt1, v0 WHERE (CASE (+ (v0.c0))  WHEN (((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, v0.c0, vt1.c0))) THEN ((vt1.c0)IS('鄲u')) END) UNION ALL SELECT * FROM vt1, v0 WHERE ((NOT (CASE (+ (v0.c0))  WHEN (((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, v0.c0, vt1.c0))) THEN ((vt1.c0)IS('鄲u')) END))) UNION ALL SELECT * FROM vt1, v0 WHERE (((CASE (+ (v0.c0))  WHEN (((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, v0.c0, vt1.c0))) THEN ((vt1.c0)IS('鄲u')) END) ISNULL));
SELECT * FROM vt1, v0;
SELECT DISTINCT vt0.c1, vt1.c0, vt0.c2 FROM vt1 LEFT OUTER JOIN v0 ON ((((((0.39126943550352067) NOT NULL))AND(((vt0.c1)!=(vt1.c0)))))AND(CAST(vt0.c2 AS INTEGER))) LEFT OUTER JOIN vt0 ON CAST(vt0.c0 COLLATE NOCASE AS INTEGER);
SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(((v0.c0) IS FALSE) AS INTEGER)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0) IS FALSE) AS INTEGER)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST(((v0.c0) IS FALSE) AS INTEGER)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING GROUP_CONCAT(COUNT(COUNT(*))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (GROUP_CONCAT(COUNT(COUNT(*))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((GROUP_CONCAT(COUNT(COUNT(*)))) ISNULL);
SELECT * FROM vt0, vt1, v0;
SELECT ALL * FROM vt0, vt1, v0 WHERE (((CAST(vt0.c1 AS BLOB)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN 0.14667268340162276 END) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT ALL * FROM vt0, vt1, v0 WHERE ((NOT (((CAST(vt0.c1 AS BLOB)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN 0.14667268340162276 END) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0, vt1, v0 WHERE (((((CAST(vt0.c1 AS BLOB)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN 0.14667268340162276 END) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT * FROM vt0, vt1, v0;
SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0 WHERE (((((vt0.c2) ISNULL))<>(0x52e1d399))) UNION SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c2) ISNULL))!=(0X52e1d399))))) UNION SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0 WHERE (((((((vt0.c2) ISNULL))<>(0x52e1d399))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))>>(((vt0.c1) NOT BETWEEN ('>WXK''P1S&') AND (v0.c0))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))>>(((vt0.c1) NOT BETWEEN ('>WXK''P1S&') AND (v0.c0))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))>>(((vt0.c1) NOT BETWEEN ('>WXK''P1S&') AND (v0.c0))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(vt1.c0)) NOT NULL) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((AVG(vt1.c0)) NOT NULL))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((AVG(vt1.c0)) NOT NULL)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(vt1.c0)) NOT NULL) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((AVG(vt1.c0)) NOT NULL))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((AVG(vt1.c0)) NOT NULL)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt1, v0, vt0;
SELECT * FROM vt1, v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((CAST(x'' AS NUMERIC))) AND ((((vt0.c1) ISNULL))))) UNION ALL SELECT * FROM vt1, v0, vt0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((CAST(x'' AS NUMERIC))) AND ((((vt0.c1) ISNULL))))))) UNION ALL SELECT ALL * FROM vt1, v0, vt0 WHERE ((((((v0.c0)) NOT BETWEEN ((CAST(x'' AS NUMERIC))) AND ((((vt0.c1) ISNULL))))) ISNULL));
SELECT * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 WHERE (((((((((((((CAST(v0.c0 AS BLOB))AND(CAST(vt0.c0 AS NUMERIC))))AND(CHANGES())))AND(((vt0.c2)<<(v0.c0)))))OR(CASE vt0.c1  WHEN vt0.c2 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END)))AND(CASE WHEN v0.c0 THEN vt0.c2 END)))OR(x'23b1'))) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 WHERE ((NOT (((((((((((((CAST(v0.c0 AS BLOB))AND(CAST(vt0.c0 AS NUMERIC))))AND(CHANGES())))AND(((vt0.c2)<<(v0.c0)))))OR(CASE vt0.c1  WHEN vt0.c2 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END)))AND(CASE WHEN v0.c0 THEN vt0.c2 END)))OR(x'23b1'))))) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 WHERE (((((((((((((((CAST(v0.c0 AS BLOB))AND(CAST(vt0.c0 AS NUMERIC))))AND(CHANGES())))AND(((vt0.c2)<<(v0.c0)))))OR(CASE vt0.c1  WHEN vt0.c2 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END)))AND(CASE WHEN v0.c0 THEN vt0.c2 END)))OR(x'23b1'))) ISNULL));
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0;
SELECT vt0.c2, vt0.c0 FROM vt0, vt1, v0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0, vt1, v0 WHERE (((((vt0.c1) NOTNULL))|(((0.11969269095261093)-(v0.c0))))) GROUP BY vt0.c2, vt0.c0 UNION SELECT vt0.c2, vt0.c0 FROM vt0, vt1, v0 WHERE ((NOT (((((vt0.c1) NOTNULL))|(((0.11969269095261093)-(v0.c0))))))) GROUP BY vt0.c2, vt0.c0 UNION SELECT vt0.c2, vt0.c0 FROM vt0, vt1, v0 WHERE (((((((vt0.c1) NOTNULL))|(((0.11969269095261093)-(v0.c0))))) ISNULL)) GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0, vt1, v0 GROUP BY vt0.c2, vt0.c0;
SELECT vt1.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0;
SELECT ALL vt0.c1, vt1.c0, v0.c0, vt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c2)||(vt0.c1))) BETWEEN (x'') AND ((((vt0.c2, vt0.c0, vt1.c0))<=((vt1.c0, vt0.c0, vt0.c2))))) FULL OUTER JOIN v0 ON ((vt1.c0) NOT NULL) COLLATE NOCASE;
SELECT ALL vt0.c1, vt1.c0, v0.c0, vt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c2)||(vt0.c1))) BETWEEN (x'') AND ((((vt0.c2, vt0.c0, vt1.c0))<=((vt1.c0, vt0.c0, vt0.c2))))) FULL OUTER JOIN v0 ON ((vt1.c0) NOT NULL) COLLATE NOCASE WHERE ((~ (x'77dd' COLLATE RTRIM))) UNION ALL SELECT vt0.c1, vt1.c0, v0.c0, vt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c2)||(vt0.c1))) BETWEEN (x'') AND ((((vt0.c2, vt0.c0, vt1.c0))<=((vt1.c0, vt0.c0, vt0.c2))))) FULL OUTER JOIN v0 ON ((vt1.c0) NOT NULL) COLLATE NOCASE WHERE ((NOT ((~ (x'77dd' COLLATE RTRIM))))) UNION ALL SELECT vt0.c1, vt1.c0, v0.c0, vt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c2)||(vt0.c1))) BETWEEN (x'') AND ((((vt0.c2, vt0.c0, vt1.c0))<=((vt1.c0, vt0.c0, vt0.c2))))) FULL OUTER JOIN v0 ON ((vt1.c0) NOT NULL) COLLATE NOCASE WHERE ((((~ (x'77dd' COLLATE RTRIM))) ISNULL));
SELECT ALL vt0.c1, vt1.c0, v0.c0, vt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c2)||(vt0.c1))) BETWEEN (x'') AND ((((vt0.c2, vt0.c0, vt1.c0))<=((vt1.c0, vt0.c0, vt0.c2))))) FULL OUTER JOIN v0 ON ((vt1.c0) NOT NULL) COLLATE NOCASE;
SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1;
SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1 WHERE (((vt1.c0 IN ()) IN (v0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1 WHERE ((NOT (((vt1.c0 IN ()) IN (v0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1 WHERE (((((vt1.c0 IN ()) IN (v0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (LIKELIHOOD(((vt1.c0)IS NOT(0.35215058320569015)), 0.5821402378696227)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (LIKELIHOOD(((vt1.c0)IS NOT(0.35215058320569015)), 0.5821402378696227)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((LIKELIHOOD(((vt1.c0)IS NOT(0.35215058320569015)), 0.5821402378696227)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c2 HAVING AVG(AVG(AVG(vt0.c2))) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c2 HAVING (NOT (AVG(AVG(AVG(vt0.c2))))) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c2 HAVING ((AVG(AVG(AVG(vt0.c2)))) ISNULL);
SELECT TOTAL(CAST((~ (vt0.c1)) AS NUMERIC)) FROM vt0, vt1, v0;
SELECT ALL * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((+ (vt0.c0)))OR(((vt1.c0) ISNULL))))OR(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)))))AND((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c2, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c2))))))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c2)))))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT ((((((((((+ (vt0.c0)))OR(((vt1.c0) ISNULL))))OR(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)))))AND((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c2, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c2))))))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c2)))))))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((((((((((((+ (vt0.c0)))OR(((vt1.c0) ISNULL))))OR(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)))))AND((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c2, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c2))))))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c2)))))) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c2, vt0.c0, v0.c0, vt0.c1 FROM vt1, v0, vt0;
SELECT DISTINCT vt1.c0, vt0.c2, vt0.c0, v0.c0, vt0.c1 FROM vt1, v0, vt0 WHERE ((vt1.c0 IN (v0.c0, vt0.c2)) COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0, vt0.c2, vt0.c0, v0.c0, vt0.c1 FROM vt1, v0, vt0 WHERE ((NOT ((vt1.c0 IN (v0.c0, vt0.c2)) COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0, vt0.c2, vt0.c0, v0.c0, vt0.c1 FROM vt1, v0, vt0 WHERE ((((vt1.c0 IN (v0.c0, vt0.c2)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c2, vt0.c0, v0.c0, vt0.c1 FROM vt1, v0, vt0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 WHERE ((((v0.c0, vt1.c0, vt1.c0)) BETWEEN ((((v0.c0)<>(vt1.c0)), TYPEOF(DISTINCT vt1.c0), v0.c0)) AND (('1625798149', ((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)), ((vt1.c0) BETWEEN (0.019015055111683665) AND (vt1.c0)))))) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM vt1, v0 WHERE ((NOT ((((v0.c0, vt1.c0, vt1.c0)) BETWEEN ((((v0.c0)<>(vt1.c0)), TYPEOF(DISTINCT vt1.c0), v0.c0)) AND (('1625798149', ((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)), ((vt1.c0) BETWEEN (0.019015055111683665) AND (vt1.c0)))))))) GROUP BY vt1.c0, v0.c0 UNION SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 WHERE ((((((v0.c0, vt1.c0, vt1.c0)) BETWEEN ((((v0.c0)!=(vt1.c0)), TYPEOF(DISTINCT vt1.c0), v0.c0)) AND (('1625798149', ((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)), ((vt1.c0) BETWEEN (0.019015055111683665) AND (vt1.c0)))))) ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) BETWEEN ((((MAX(COUNT(*)))) NOT BETWEEN ((vt1.c0)) AND ((AVG(AVG(vt1.c0)))))) AND (((vt1.c0)>=(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((vt1.c0) BETWEEN ((((MAX(COUNT(*)))) NOT BETWEEN ((vt1.c0)) AND ((AVG(AVG(vt1.c0)))))) AND (((vt1.c0)>=(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0) BETWEEN ((((MAX(COUNT(*)))) NOT BETWEEN ((vt1.c0)) AND ((AVG(AVG(vt1.c0)))))) AND (((vt1.c0)>=(vt1.c0))))) ISNULL);
SELECT ALL vt0.c1, vt0.c2 FROM vt0, v0;
SELECT ALL vt0.c1, vt0.c2 FROM vt0, v0 WHERE (CAST(UNLIKELY(vt0.c2) AS BLOB)) UNION ALL SELECT vt0.c1, vt0.c2 FROM vt0, v0 WHERE ((NOT (CAST(UNLIKELY(vt0.c2) AS BLOB)))) UNION ALL SELECT vt0.c1, vt0.c2 FROM vt0, v0 WHERE (((CAST(UNLIKELY(vt0.c2) AS BLOB)) ISNULL));
SELECT ALL vt0.c1, vt0.c2 FROM vt0, v0;
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE (((((v0.c0)/(vt1.c0))) NOT BETWEEN (((vt1.c0)/(v0.c0))) AND ((vt1.c0 IN ())))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT (((((v0.c0)/(vt1.c0))) NOT BETWEEN (((vt1.c0)/(v0.c0))) AND ((vt1.c0 IN ())))))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE (((((((v0.c0)/(vt1.c0))) NOT BETWEEN (((vt1.c0)/(v0.c0))) AND ((vt1.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
SELECT v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 WHERE (v0.c0) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM vt1, v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM vt1, v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(SUM(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(SUM(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(SUM(v0.c0))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((NOT (vt1.c0)))/(((vt1.c0) IS TRUE)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((NOT (vt1.c0)))/(((vt1.c0) IS TRUE)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((((NOT (vt1.c0)))/(((vt1.c0) IS TRUE)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (NULL)))OR(((vt0.c1)GLOB(vt0.c2)))))OR(((((((((vt1.c0)OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (NULL)))OR(((vt0.c1)GLOB(vt0.c2)))))OR(((((((((vt1.c0)OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1))))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 NOT INDEXED WHERE (((((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (NULL)))OR(((vt0.c1)GLOB(vt0.c2)))))OR(((((((((vt1.c0)OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE ((((+ (vt0.c1)))<=(vt0.c0))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((((+ (vt0.c1)))<=(vt0.c0))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((((((+ (vt0.c1)))<=(vt0.c0))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING ((((AVG('')) NOT BETWEEN (GROUP_CONCAT(vt0.c0)) AND (MIN(AVG(GROUP_CONCAT(MAX(vt0.c1)))))))GLOB(AVG(MAX(COUNT(*))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING (NOT (((((AVG('')) NOT BETWEEN (GROUP_CONCAT(vt0.c0)) AND (MIN(AVG(GROUP_CONCAT(MAX(vt0.c1)))))))GLOB(AVG(MAX(COUNT(*))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING ((((((AVG('')) NOT BETWEEN (GROUP_CONCAT(vt0.c0)) AND (MIN(AVG(GROUP_CONCAT(MAX(vt0.c1)))))))GLOB(AVG(MAX(COUNT(*)))))) ISNULL);
SELECT v0.c0, vt1.c0 FROM vt1, v0;
SELECT v0.c0, vt1.c0 FROM vt1, v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)OR(((((((((v0.c0)OR(v0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(v0.c0)))))OR(''))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 WHERE ((NOT (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)OR(((((((((v0.c0)OR(v0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(v0.c0)))))OR(''))))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 WHERE (((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)OR(((((((((v0.c0)OR(v0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(v0.c0)))))OR(''))) ISNULL));
SELECT v0.c0, vt1.c0 FROM vt1, v0;
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c2 FROM vt0, v0, vt1;
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c2 FROM vt0, v0, vt1 WHERE (vt0.c0) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt0.c2 FROM vt0, v0, vt1 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt0.c2 FROM vt0, v0, vt1 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c2 FROM vt0, v0, vt1;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0 WHERE (CAST(((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) AS BLOB)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1, v0 WHERE ((NOT (CAST(((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) AS BLOB)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt1, v0 WHERE (((CAST(((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) AS BLOB)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((MAX(COUNT(vt0.c1))) BETWEEN (((MIN(COUNT(*)))*(v0.c0))) AND (LIKELIHOOD(vt0.c1, 0.19438928213161955))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (((MAX(COUNT(vt0.c1))) BETWEEN (((MIN(COUNT(*)))*(v0.c0))) AND (LIKELIHOOD(vt0.c1, 0.19438928213161955))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((((MAX(COUNT(vt0.c1))) BETWEEN (((MIN(COUNT(*)))*(v0.c0))) AND (LIKELIHOOD(vt0.c1, 0.19438928213161955)))) ISNULL);
SELECT ALL v0.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, v0;
SELECT ALL v0.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, v0 WHERE (((vt0.c2) NOT BETWEEN (vt0.c1) AND ('1040638807')) COLLATE NOCASE) UNION ALL SELECT ALL v0.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, v0 WHERE ((NOT (((vt0.c2) NOT BETWEEN (vt0.c1) AND ('1040638807')) COLLATE NOCASE))) UNION ALL SELECT v0.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, v0 WHERE (((((vt0.c2) NOT BETWEEN (vt0.c1) AND ('1040638807')) COLLATE NOCASE) ISNULL));
SELECT ALL v0.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) NOTNULL))LIKE((v0.c0 IN ())))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0) NOTNULL))LIKE((v0.c0 IN ())))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0) NOTNULL))LIKE((v0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c1, v0.c0;
SELECT vt0.c1, v0.c0 FROM v0, vt0 WHERE ((((v0.c0 IN ()))*(x''))) GROUP BY vt0.c1, v0.c0 UNION SELECT ALL vt0.c1, v0.c0 FROM v0, vt0 WHERE ((NOT ((((v0.c0 IN ()))*(x''))))) GROUP BY vt0.c1, v0.c0 UNION SELECT ALL vt0.c1, v0.c0 FROM v0, vt0 WHERE ((((((v0.c0 IN ()))*(x''))) ISNULL)) GROUP BY vt0.c1, v0.c0;
SELECT vt0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c1, v0.c0;
SELECT v0.c0 FROM vt0, v0, vt1 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0, vt1 GROUP BY v0.c0 HAVING AVG(SUM(SUM(COUNT(*)))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0, vt1 GROUP BY v0.c0 HAVING (NOT (AVG(SUM(SUM(COUNT(*)))))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0, vt1 GROUP BY v0.c0 HAVING ((AVG(SUM(SUM(COUNT(*))))) ISNULL);
SELECT ALL vt1.c0, vt0.c0, v0.c0, vt0.c2 FROM vt1, vt0, v0;
SELECT vt1.c0, vt0.c0, v0.c0, vt0.c2 FROM vt1, vt0, v0 WHERE ((((((vt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))))GLOB(((((vt1.c0)AND(vt0.c2)))OR(v0.c0))))) UNION ALL SELECT vt1.c0, vt0.c0, v0.c0, vt0.c2 FROM vt1, vt0, v0 WHERE ((NOT ((((((vt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))))GLOB(((((vt1.c0)AND(vt0.c2)))OR(v0.c0))))))) UNION ALL SELECT ALL vt1.c0, vt0.c0, v0.c0, vt0.c2 FROM vt1, vt0, v0 WHERE ((((((((vt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))))GLOB(((((vt1.c0)AND(vt0.c2)))OR(v0.c0))))) ISNULL));
SELECT ALL vt1.c0, vt0.c0, v0.c0, vt0.c2 FROM vt1, vt0, v0;
SELECT DISTINCT * FROM v0, vt1, vt0;
SELECT DISTINCT * FROM v0, vt1, vt0 WHERE (((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt1.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c2 END)<=(CAST(vt1.c0 AS REAL)))) UNION SELECT DISTINCT * FROM v0 NOT INDEXED, vt1, vt0 WHERE ((NOT (((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt1.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c2 END)<=(CAST(vt1.c0 AS REAL)))))) UNION SELECT DISTINCT * FROM v0, vt1, vt0 WHERE (((((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt1.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c2 END)<=(CAST(vt1.c0 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM v0, vt1, vt0;
SELECT ALL vt0.c1, v0.c0 FROM vt0, v0 RIGHT OUTER JOIN vt1 ON (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), INSTR(vt0.c1, vt0.c1), ((v0.c0) IS FALSE))) AND (((NOT (vt0.c2)), ((vt0.c1)<>(vt0.c2)), ((vt0.c1)<<(vt0.c0))))) GROUP BY vt0.c1, v0.c0;
SELECT vt0.c1, v0.c0 FROM vt0, v0 RIGHT OUTER JOIN vt1 ON (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), INSTR(vt0.c1, vt0.c1), ((v0.c0) IS FALSE))) AND (((NOT (vt0.c2)), ((vt0.c1)<>(vt0.c2)), ((vt0.c1)<<(vt0.c0))))) WHERE ((((~ (vt0.c1))) NOT BETWEEN (UNLIKELY(DISTINCT v0.c0)) AND (CASE vt0.c0  WHEN vt1.c0 THEN '-1319342446' WHEN vt0.c0 THEN 0.2864343223920035 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END))) GROUP BY vt0.c1, v0.c0 UNION SELECT ALL vt0.c1, v0.c0 FROM vt0, v0 RIGHT OUTER JOIN vt1 ON (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), INSTR(vt0.c1, vt0.c1), ((v0.c0) IS FALSE))) AND (((NOT (vt0.c2)), ((vt0.c1)<>(vt0.c2)), ((vt0.c1)<<(vt0.c0))))) WHERE ((NOT ((((~ (vt0.c1))) NOT BETWEEN (UNLIKELY(DISTINCT v0.c0)) AND (CASE vt0.c0  WHEN vt1.c0 THEN '-1319342446' WHEN vt0.c0 THEN 0.2864343223920035 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END))))) GROUP BY vt0.c1, v0.c0 UNION SELECT vt0.c1, v0.c0 FROM vt0, v0 RIGHT OUTER JOIN vt1 ON (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), INSTR(vt0.c1, vt0.c1), ((v0.c0) IS FALSE))) AND (((NOT (vt0.c2)), ((vt0.c1)<>(vt0.c2)), ((vt0.c1)<<(vt0.c0))))) WHERE ((((((~ (vt0.c1))) NOT BETWEEN (UNLIKELY(DISTINCT v0.c0)) AND (CASE vt0.c0  WHEN vt1.c0 THEN '-1319342446' WHEN vt0.c0 THEN 0.2864343223920035 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END))) ISNULL)) GROUP BY vt0.c1, v0.c0;
SELECT ALL vt0.c1, v0.c0 FROM vt0, v0 RIGHT OUTER JOIN vt1 ON (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), INSTR(vt0.c1, vt0.c1), ((v0.c0) IS FALSE))) AND (((NOT (vt0.c2)), ((vt0.c1)<>(vt0.c2)), ((vt0.c1)<<(vt0.c0))))) GROUP BY vt0.c1, v0.c0;
SELECT vt1.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c0, vt0.c1;
SELECT vt1.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c0, vt0.c1 HAVING COUNT(COUNT(TOTAL(-2.055520566E9))) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c0, vt0.c1 HAVING (NOT (COUNT(COUNT(TOTAL(-2.055520566E9))))) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c0, vt0.c1 HAVING ((COUNT(COUNT(TOTAL(-2.055520566E9)))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((- (vt0.c1)))>((- (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((- (vt0.c1)))>((- (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((- (vt0.c1)))>((- (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1, vt0.c0, vt0.c2, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2, vt1.c0;
SELECT vt0.c1, vt0.c0, vt0.c2, vt1.c0 FROM vt1, vt0 WHERE ((~ (((vt0.c0) IS FALSE)))) GROUP BY vt0.c1, vt0.c0, vt0.c2, vt1.c0 UNION SELECT vt0.c1, vt0.c0, vt0.c2, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((~ (((vt0.c0) IS FALSE)))))) GROUP BY vt0.c1, vt0.c0, vt0.c2, vt1.c0 UNION SELECT ALL vt0.c1, vt0.c0, vt0.c2, vt1.c0 FROM vt1, vt0 WHERE ((((~ (((vt0.c0) IS FALSE)))) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt0.c2, vt1.c0;
SELECT vt0.c1, vt0.c0, vt0.c2, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2, vt1.c0;
SELECT vt0.c0, v0.c0, vt1.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt0.c0, v0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, v0.c0, vt1.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt0.c0, v0.c0, vt1.c0, vt0.c1 HAVING ((MAX(TOTAL(GROUP_CONCAT(v0.c0))))&(MAX(vt0.c0))) UNION ALL SELECT ALL vt0.c0, v0.c0, vt1.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt0.c0, v0.c0, vt1.c0, vt0.c1 HAVING (NOT (((MAX(TOTAL(GROUP_CONCAT(v0.c0))))&(MAX(vt0.c0))))) UNION ALL SELECT vt0.c0, v0.c0, vt1.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt0.c0, v0.c0, vt1.c0, vt0.c1 HAVING ((((MAX(TOTAL(GROUP_CONCAT(v0.c0))))&(MAX(vt0.c0)))) ISNULL);
SELECT TOTAL(((vt1.c0 COLLATE NOCASE) ISNULL)) FROM v0, vt1;
SELECT ALL * FROM v0, vt1, vt0;
SELECT ALL * FROM v0, vt1, vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT NULL)) UNION ALL SELECT * FROM v0, vt1, vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY) NOT NULL)))) UNION ALL SELECT * FROM v0, vt1, vt0 WHERE (((((vt0.c0 COLLATE BINARY) NOT NULL)) ISNULL));
SELECT ALL * FROM v0, vt1, vt0;
SELECT DISTINCT v0.c0, vt0.c2, vt0.c1, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((NOT (vt0.c2))) NOTNULL);
SELECT DISTINCT v0.c0, vt0.c2, vt0.c1, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((NOT (vt0.c2))) NOTNULL) WHERE ((((vt0.c2)) NOT BETWEEN ((((vt0.c1) BETWEEN (v0.c0) AND (vt0.c0)))) AND ((vt0.c0)))) UNION SELECT DISTINCT v0.c0, vt0.c2, vt0.c1, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((NOT (vt0.c2))) NOTNULL) WHERE ((NOT ((((vt0.c2)) NOT BETWEEN ((((vt0.c1) BETWEEN (v0.c0) AND (vt0.c0)))) AND ((vt0.c0)))))) UNION SELECT DISTINCT v0.c0, vt0.c2, vt0.c1, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((NOT (vt0.c2))) NOTNULL) WHERE ((((((vt0.c2)) NOT BETWEEN ((((vt0.c1) BETWEEN (v0.c0) AND (vt0.c0)))) AND ((vt0.c0)))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c2, vt0.c1, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((NOT (vt0.c2))) NOTNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)AND('0.0')))OR(v0.c0))) NOTNULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0)AND('0.0')))OR(v0.c0))) NOTNULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((v0.c0)AND('0.0')))OR(v0.c0))) NOTNULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(((MIN(COUNT(*))) NOTNULL)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(((MIN(COUNT(*))) NOTNULL)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(((MIN(COUNT(*))) NOTNULL))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c2 IN ()))AND(CAST(vt0.c1 AS TEXT))))OR(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((((vt0.c2 IN ()))AND(CAST(vt0.c1 AS TEXT))))OR(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((((vt0.c2 IN ()))AND(CAST(vt0.c1 AS TEXT))))OR(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c1, vt1.c0, vt0.c2, vt0.c0, v0.c0 FROM vt0, vt1, v0;
SELECT DISTINCT vt0.c1, vt1.c0, vt0.c2, vt0.c0, v0.c0 FROM vt0, vt1, v0 WHERE ((CAST(vt0.c1 AS NUMERIC) IN ())) UNION SELECT DISTINCT vt0.c1, vt1.c0, vt0.c2, vt0.c0, v0.c0 FROM vt0, vt1, v0 WHERE ((NOT ((CAST(vt0.c1 AS NUMERIC) IN ())))) UNION SELECT DISTINCT vt0.c1, vt1.c0, vt0.c2, vt0.c0, v0.c0 FROM vt0, vt1, v0 WHERE ((((CAST(vt0.c1 AS NUMERIC) IN ())) ISNULL));
SELECT DISTINCT vt0.c1, vt1.c0, vt0.c2, vt0.c0, v0.c0 FROM vt0, vt1, v0;
SELECT v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 WHERE (v0.c0 COLLATE NOCASE) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 WHERE ((NOT (v0.c0 COLLATE NOCASE))) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM vt1, v0 WHERE (((v0.c0 COLLATE NOCASE) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c2 FROM vt0;
SELECT ALL vt0.c2 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c2 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c2 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c2 FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE ((('')GLOB(RTRIM(vt0.c2)))) GROUP BY vt0.c1, vt0.c0, vt0.c2 UNION SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT ((('')GLOB(RTRIM(vt0.c2)))))) GROUP BY vt0.c1, vt0.c0, vt0.c2 UNION SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE ((((('')GLOB(RTRIM(vt0.c2)))) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(SUM(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(SUM(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(SUM(vt1.c0))) ISNULL);
SELECT ALL vt0.c2 FROM vt1, vt0;
SELECT ALL vt0.c2 FROM vt1, vt0 WHERE (((((vt0.c1 IN (vt0.c1))))<((((vt0.c1)>(vt0.c2)))))) UNION ALL SELECT ALL vt0.c2 FROM vt1, vt0 WHERE ((NOT (((((vt0.c1 IN (vt0.c1))))<((((vt0.c1)>(vt0.c2)))))))) UNION ALL SELECT ALL vt0.c2 FROM vt1, vt0 WHERE (((((((vt0.c1 IN (vt0.c1))))<((((vt0.c1)>(vt0.c2)))))) ISNULL));
SELECT ALL vt0.c2 FROM vt1, vt0;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON (CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c2 THEN x'' WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END IN ((vt0.c0 IN ()))) LEFT OUTER JOIN v0 ON ((vt0.c2)<>(highlight(vt0.c1, NULL, vt0.c1, vt1.c0)));
SELECT ALL vt0.c2, vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM vt0, vt1 NATURAL JOIN v0 GROUP BY vt0.c2, vt1.c0, vt0.c0, v0.c0, vt0.c1;
SELECT vt0.c2, vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM vt0, vt1 NATURAL JOIN v0 WHERE (((((vt0.c1)/(v0.c0))) NOT BETWEEN (((vt1.c0)IS NOT(-9223372036854775808))) AND (((vt0.c0)<=(vt0.c0))))) GROUP BY vt0.c2, vt1.c0, vt0.c0, v0.c0, vt0.c1 UNION SELECT ALL vt0.c2, vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM vt0, vt1 NATURAL JOIN v0 WHERE ((NOT (((((vt0.c1)/(v0.c0))) NOT BETWEEN (((vt1.c0)IS NOT(-9223372036854775808))) AND (((vt0.c0)<=(vt0.c0))))))) GROUP BY vt0.c2, vt1.c0, vt0.c0, v0.c0, vt0.c1 UNION SELECT ALL vt0.c2, vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM vt0, vt1 NATURAL JOIN v0 WHERE (((((((vt0.c1)/(v0.c0))) NOT BETWEEN (((vt1.c0)IS NOT(-9223372036854775808))) AND (((vt0.c0)<=(vt0.c0))))) ISNULL)) GROUP BY vt0.c2, vt1.c0, vt0.c0, v0.c0, vt0.c1;
SELECT ALL vt0.c2, vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM vt0, vt1 NATURAL JOIN v0 GROUP BY vt0.c2, vt1.c0, vt0.c0, v0.c0, vt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0, vt1.c0 FROM v0, vt0, vt1;
SELECT ALL vt0.c0, vt1.c0 FROM v0, vt0, vt1 WHERE (((CASE WHEN vt0.c2 THEN vt1.c0 ELSE vt1.c0 END)OR((~ (vt1.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM v0, vt0, vt1 WHERE ((NOT (((CASE WHEN vt0.c2 THEN vt1.c0 ELSE vt1.c0 END)OR((~ (vt1.c0))))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM v0, vt0, vt1 WHERE (((((CASE WHEN vt0.c2 THEN vt1.c0 ELSE vt1.c0 END)OR((~ (vt1.c0))))) ISNULL));
SELECT vt0.c0, vt1.c0 FROM v0, vt0, vt1;
SELECT DISTINCT vt0.c1, v0.c0, vt0.c0 FROM vt0, v0, vt1;
SELECT DISTINCT vt0.c1, v0.c0, vt0.c0 FROM vt0, v0, vt1 WHERE (vt1.c0) UNION SELECT DISTINCT vt0.c1, v0.c0, vt0.c0 FROM vt0, v0, vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt0.c1, v0.c0, vt0.c0 FROM vt0, v0, vt1 NOT INDEXED WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt0.c1, v0.c0, vt0.c0 FROM vt0, v0, vt1;
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))) ISNULL)) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM vt1, v0 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))) ISNULL)))) GROUP BY vt1.c0, v0.c0 UNION SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))) ISNULL)) ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c1, vt0.c0, v0.c0 HAVING ((((TOTAL(v0.c0)) BETWEEN (vt0.c1) AND (MAX(0xffffffffb3a8348e))))|(vt1.c0)) UNION ALL SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c1, vt0.c0, v0.c0 HAVING (NOT (((((TOTAL(v0.c0)) BETWEEN (vt0.c1) AND (MAX(0xffffffffb3a8348e))))|(vt1.c0)))) UNION ALL SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c1, vt0.c0, v0.c0 HAVING ((((((TOTAL(v0.c0)) BETWEEN (vt0.c1) AND (MAX(0xffffffffb3a8348e))))|(vt1.c0))) ISNULL);
SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c1, vt0.c0, v0.c0 HAVING ((((TOTAL(v0.c0)) BETWEEN (vt0.c1) AND (MAX(0xffffffffb3a8348e))))|(vt1.c0)) UNION ALL SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c1, vt0.c0, v0.c0 HAVING (NOT (((((TOTAL(v0.c0)) BETWEEN (vt0.c1) AND (MAX(0xffffffffb3a8348e))))|(vt1.c0)))) UNION ALL SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c1, vt0.c0, v0.c0 HAVING ((((((TOTAL(v0.c0)) BETWEEN (vt0.c1) AND (MAX(0xffffffffb3a8348e))))|(vt1.c0))) ISNULL);
SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT * FROM vt0, v0, vt1;
SELECT * FROM vt0, v0, vt1 WHERE (TYPEOF((NOT (vt0.c0)))) UNION ALL SELECT * FROM vt0, v0, vt1 WHERE ((NOT (TYPEOF((NOT (vt0.c0)))))) UNION ALL SELECT * FROM vt0, v0, vt1 WHERE (((TYPEOF((NOT (vt0.c0)))) ISNULL));
SELECT * FROM vt0, v0, vt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (json_patch(vt1.c0, ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (json_patch(vt1.c0, ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((json_patch(vt1.c0, ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt0.c2, vt0.c0, v0.c0, vt1.c0, vt0.c1 FROM vt1, v0 RIGHT OUTER JOIN vt0 ON 0.32774785822493835 GROUP BY vt0.c2, vt0.c0, v0.c0, vt1.c0, vt0.c1;
SELECT vt0.c2, vt0.c0, v0.c0, vt1.c0, vt0.c1 FROM vt1, v0 RIGHT OUTER JOIN vt0 ON 0.32774785822493835 GROUP BY vt0.c2, vt0.c0, v0.c0, vt1.c0, vt0.c1 HAVING MIN((+ (TOTAL(v0.c0)))) UNION ALL SELECT vt0.c2, vt0.c0, v0.c0, vt1.c0, vt0.c1 FROM vt1, v0 RIGHT OUTER JOIN vt0 ON 0.32774785822493835 GROUP BY vt0.c2, vt0.c0, v0.c0, vt1.c0, vt0.c1 HAVING (NOT (MIN((+ (TOTAL(v0.c0)))))) UNION ALL SELECT vt0.c2, vt0.c0, v0.c0, vt1.c0, vt0.c1 FROM vt1, v0 RIGHT OUTER JOIN vt0 ON 0.32774785822493835 GROUP BY vt0.c2, vt0.c0, v0.c0, vt1.c0, vt0.c1 HAVING ((MIN((+ (TOTAL(v0.c0))))) ISNULL);
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0, v0;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0, v0 WHERE (x'') UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0, v0 WHERE ((NOT (x''))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0, v0 WHERE (((x'') ISNULL));
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0, v0;
SELECT DISTINCT vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON vt1.c0;
SELECT DISTINCT vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON vt1.c0 WHERE (NULL) UNION SELECT DISTINCT vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON vt1.c0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON vt1.c0 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON vt1.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt1, v0, vt0 WHERE ((TRIM(DISTINCT vt0.c0, vt0.c2) IN ())) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt1, v0, vt0 WHERE ((NOT ((TRIM(DISTINCT vt0.c0, vt0.c2) IN ())))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt1, v0, vt0 WHERE ((((TRIM(DISTINCT vt0.c0, vt0.c2) IN ())) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT v0.c0, vt0.c0, vt0.c2 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c0, vt0.c2;
SELECT v0.c0, vt0.c0, vt0.c2 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c0, vt0.c2 HAVING AVG((((vt0.c1, vt0.c1, v0.c0))==((COUNT(NULL), vt0.c0, COUNT(vt0.c1))))) UNION ALL SELECT v0.c0, vt0.c0, vt0.c2 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c0, vt0.c2 HAVING (NOT (AVG((((vt0.c1, vt0.c1, v0.c0))==((COUNT(NULL), vt0.c0, COUNT(vt0.c1))))))) UNION ALL SELECT v0.c0, vt0.c0, vt0.c2 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c0, vt0.c2 HAVING ((AVG((((vt0.c1, vt0.c1, v0.c0))==((COUNT(NULL), vt0.c0, COUNT(vt0.c1)))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CHAR(vt1.c0 COLLATE BINARY, ((vt1.c0) NOT NULL), CAST(NULL AS BLOB))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CHAR(vt1.c0 COLLATE BINARY, ((vt1.c0) NOT NULL), CAST(NULL AS BLOB))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((CHAR(vt1.c0 COLLATE BINARY, ((vt1.c0) NOT NULL), CAST(NULL AS BLOB))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((('-511485315' COLLATE NOCASE) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (x'd0c6f628'))) AND (vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((('-511485315' COLLATE NOCASE) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (x'd0c6f628'))) AND (vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((('-511485315' COLLATE NOCASE) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (x'd0c6f628'))) AND (vt1.c0))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))IS NOT((((vt1.c0))=((vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))IS NOT((((vt1.c0))==((vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))IS NOT((((vt1.c0))==((vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING MAX(COUNT(vt0.c1)) UNION ALL SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING (NOT (MAX(COUNT(vt0.c1)))) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING ((MAX(COUNT(vt0.c1))) ISNULL);
SELECT ALL * FROM vt1, vt0 FULL OUTER JOIN v0 ON CAST(x'' AS BLOB);
SELECT * FROM vt1, vt0 FULL OUTER JOIN v0 ON CAST(x'' AS BLOB) WHERE (((vt1.c0) IS TRUE) COLLATE NOCASE) UNION ALL SELECT * FROM vt1, vt0 FULL OUTER JOIN v0 ON CAST(x'' AS BLOB) WHERE ((NOT (((vt1.c0) IS TRUE) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt1, vt0 FULL OUTER JOIN v0 ON CAST(x'' AS BLOB) WHERE (((((vt1.c0) IS TRUE) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt1, vt0 FULL OUTER JOIN v0 ON CAST(x'' AS BLOB);
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt1.c0, vt0.c2, vt0.c1, v0.c0 FROM v0, vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c2, vt0.c1, v0.c0;
SELECT ALL vt1.c0, vt0.c2, vt0.c1, v0.c0 FROM v0, vt0 NATURAL JOIN vt1 WHERE ((~ (((vt0.c2) BETWEEN (v0.c0) AND (vt0.c2))))) GROUP BY vt1.c0, vt0.c2, vt0.c1, v0.c0 UNION SELECT ALL vt1.c0, vt0.c2, vt0.c1, v0.c0 FROM v0, vt0 NATURAL JOIN vt1 WHERE ((NOT ((~ (((vt0.c2) BETWEEN (v0.c0) AND (vt0.c2))))))) GROUP BY vt1.c0, vt0.c2, vt0.c1, v0.c0 UNION SELECT ALL vt1.c0, vt0.c2, vt0.c1, v0.c0 FROM v0, vt0 NATURAL JOIN vt1 WHERE ((((~ (((vt0.c2) BETWEEN (v0.c0) AND (vt0.c2))))) ISNULL)) GROUP BY vt1.c0, vt0.c2, vt0.c1, v0.c0;
SELECT ALL vt1.c0, vt0.c2, vt0.c1, v0.c0 FROM v0, vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c2, vt0.c1, v0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (- (CAST(MAX(MAX(COUNT(vt1.c0))) AS NUMERIC))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((- (CAST(MAX(MAX(COUNT(vt1.c0))) AS NUMERIC))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((- (CAST(MAX(MAX(COUNT(vt1.c0))) AS NUMERIC)))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt1, v0, vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt1, v0, vt0 WHERE (x'') UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt1, v0, vt0 WHERE ((NOT (x''))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt1, v0, vt0 WHERE (((x'') ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt1, v0, vt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ((('365704693') NOT BETWEEN (CASE x''  WHEN vt0.c2 THEN vt0.c1 END) AND (v0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT ((('365704693') NOT BETWEEN (CASE x''  WHEN vt0.c2 THEN vt0.c1 END) AND (v0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((((('365704693') NOT BETWEEN (CASE x''  WHEN vt0.c2 THEN vt0.c1 END) AND (v0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0 WHERE (((0.15721283178807832) NOT BETWEEN (UNLIKELY(DISTINCT v0.c0)) AND ((v0.c0 IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt1, v0 WHERE ((NOT (((0.15721283178807832) NOT BETWEEN (UNLIKELY(DISTINCT v0.c0)) AND ((v0.c0 IN ())))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1, v0 WHERE (((((0.15721283178807832) NOT BETWEEN (UNLIKELY(DISTINCT v0.c0)) AND ((v0.c0 IN ())))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0, vt1.c0, vt0.c1, vt0.c0 FROM vt0, v0, vt1 GROUP BY v0.c0, vt1.c0, vt0.c1, vt0.c0;
SELECT v0.c0, vt1.c0, vt0.c1, vt0.c0 FROM vt0, v0, vt1 GROUP BY v0.c0, vt1.c0, vt0.c1, vt0.c0 HAVING CASE COUNT(*)  WHEN (vt1.c0 IN (v0.c0, COUNT(vt1.c0))) THEN ((((((((GROUP_CONCAT(vt0.c1))AND(SUM(vt1.c0))))OR(0.21664693568123383)))OR(AVG(vt1.c0))))AND(GROUP_CONCAT(0.9925245214893137))) WHEN (vt0.c0 IN ()) THEN TOTAL(MIN(MAX(TOTAL(vt0.c2)))) WHEN AVG(AVG(v0.c0)) THEN ((v0.c0)<>(COUNT(*))) WHEN ((((vt0.c2)AND(vt0.c2)))AND(AVG(TOTAL(vt0.c2)))) THEN CASE SUM(COUNT(vt0.c1))  WHEN vt1.c0 THEN SUM(MAX(GROUP_CONCAT(v0.c0))) ELSE 0.5312131571033113 END WHEN COUNT(*) THEN MAX(COUNT(MIN(MAX(vt1.c0)))) ELSE TOTAL(vt1.c0) END UNION ALL SELECT v0.c0, vt1.c0, vt0.c1, vt0.c0 FROM vt0, v0, vt1 GROUP BY v0.c0, vt1.c0, vt0.c1, vt0.c0 HAVING (NOT (CASE COUNT(*)  WHEN (vt1.c0 IN (v0.c0, COUNT(vt1.c0))) THEN ((((((((GROUP_CONCAT(vt0.c1))AND(SUM(vt1.c0))))OR(0.21664693568123383)))OR(AVG(vt1.c0))))AND(GROUP_CONCAT(0.9925245214893137))) WHEN (vt0.c0 IN ()) THEN TOTAL(MIN(MAX(TOTAL(vt0.c2)))) WHEN AVG(AVG(v0.c0)) THEN ((v0.c0)<>(COUNT(*))) WHEN ((((vt0.c2)AND(vt0.c2)))AND(AVG(TOTAL(vt0.c2)))) THEN CASE SUM(COUNT(vt0.c1))  WHEN vt1.c0 THEN SUM(MAX(GROUP_CONCAT(v0.c0))) ELSE 0.5312131571033113 END WHEN COUNT(*) THEN MAX(COUNT(MIN(MAX(vt1.c0)))) ELSE TOTAL(vt1.c0) END)) UNION ALL SELECT ALL v0.c0, vt1.c0, vt0.c1, vt0.c0 FROM vt0, v0, vt1 GROUP BY v0.c0, vt1.c0, vt0.c1, vt0.c0 HAVING ((CASE COUNT(*)  WHEN (vt1.c0 IN (v0.c0, COUNT(vt1.c0))) THEN ((((((((GROUP_CONCAT(vt0.c1))AND(SUM(vt1.c0))))OR(0.21664693568123383)))OR(AVG(vt1.c0))))AND(GROUP_CONCAT(0.9925245214893137))) WHEN (vt0.c0 IN ()) THEN TOTAL(MIN(MAX(TOTAL(vt0.c2)))) WHEN AVG(AVG(v0.c0)) THEN ((v0.c0)<>(COUNT(*))) WHEN ((((vt0.c2)AND(vt0.c2)))AND(AVG(TOTAL(vt0.c2)))) THEN CASE SUM(COUNT(vt0.c1))  WHEN vt1.c0 THEN SUM(MAX(GROUP_CONCAT(v0.c0))) ELSE 0.5312131571033113 END WHEN COUNT(*) THEN MAX(COUNT(MIN(MAX(vt1.c0)))) ELSE TOTAL(vt1.c0) END) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (1895741247) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (1895741247))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((1895741247) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c2 FROM vt0 WHERE (CASE vt0.c0  WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END COLLATE RTRIM) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE (((CASE vt0.c0  WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c2 FROM vt0;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT (((vt0.c0) NOT NULL)))) GROUP BY vt0.c1, vt0.c0, vt0.c2 UNION SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT ((NOT (((vt0.c0) NOT NULL)))))) GROUP BY vt0.c1, vt0.c0, vt0.c2 UNION SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE ((((NOT (((vt0.c0) NOT NULL)))) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(MIN(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(MIN(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(MIN(v0.c0))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((((v0.c0)IS NOT(v0.c0))) BETWEEN (((((v0.c0)AND('-239670685')))AND(v0.c0))) AND (((NULL)<=(v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((v0.c0)IS NOT(v0.c0))) BETWEEN (((((v0.c0)AND('-239670685')))AND(v0.c0))) AND (((NULL)<=(v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c0)IS NOT(v0.c0))) BETWEEN (((((v0.c0)AND('-239670685')))AND(v0.c0))) AND (((NULL)<=(v0.c0))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0 WHERE (CASE WHEN ((vt0.c0)<(vt0.c0)) THEN ((((vt0.c1)OR(vt0.c2)))OR(vt0.c0)) ELSE (NOT (0.2571939593995528)) END) UNION SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0)<(vt0.c0)) THEN ((((vt0.c1)OR(vt0.c2)))OR(vt0.c0)) ELSE (NOT (0.2571939593995528)) END))) UNION SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0 WHERE (((CASE WHEN ((vt0.c0)<(vt0.c0)) THEN ((((vt0.c1)OR(vt0.c2)))OR(vt0.c0)) ELSE (NOT (0.2571939593995528)) END) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((NOT (json_type(v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((NOT (json_type(v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((NOT (json_type(v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(AVG(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(AVG(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(AVG(vt1.c0))) ISNULL);
SELECT ALL vt1.c0 FROM vt1, v0;
SELECT ALL vt1.c0 FROM vt1, v0 WHERE (CAST(((v0.c0) IS TRUE) AS NUMERIC)) UNION ALL SELECT vt1.c0 FROM vt1, v0 WHERE ((NOT (CAST(((v0.c0) IS TRUE) AS NUMERIC)))) UNION ALL SELECT vt1.c0 FROM vt1, v0 WHERE (((CAST(((v0.c0) IS TRUE) AS NUMERIC)) ISNULL));
SELECT ALL vt1.c0 FROM vt1, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((NOT (''))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((NOT (''))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((NOT (''))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, vt0.c2 FROM vt1, v0 INNER JOIN vt0 ON ((((v0.c0)OR((NOT (vt0.c0)))))AND(vt1.c0)) GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt1, v0 INNER JOIN vt0 ON ((((v0.c0)OR((NOT (vt0.c0)))))AND(vt1.c0)) WHERE (((((vt0.c2) ISNULL))AND(((v0.c0) IS FALSE)))) GROUP BY vt0.c0, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c2 FROM vt1, v0 INNER JOIN vt0 ON ((((v0.c0)OR((NOT (vt0.c0)))))AND(vt1.c0)) WHERE ((NOT (((((vt0.c2) ISNULL))AND(((v0.c0) IS FALSE)))))) GROUP BY vt0.c0, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c2 FROM vt1, v0 INNER JOIN vt0 ON ((((v0.c0)OR((NOT (vt0.c0)))))AND(vt1.c0)) WHERE (((((((vt0.c2) ISNULL))AND(((v0.c0) IS FALSE)))) ISNULL)) GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt1, v0 INNER JOIN vt0 ON ((((v0.c0)OR((NOT (vt0.c0)))))AND(vt1.c0)) GROUP BY vt0.c0, vt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((((+ (vt0.c0)))OR(((vt0.c1)>=(vt0.c2)))))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND ('1718784379'))));
SELECT * FROM v0 CROSS JOIN vt0 ON (((((+ (vt0.c0)))OR(((vt0.c1)>=(vt0.c2)))))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND ('1718784379')))) WHERE (((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c2))) IN (x'91825805' COLLATE NOCASE))) UNION ALL SELECT * FROM v0 CROSS JOIN vt0 ON (((((+ (vt0.c0)))OR(((vt0.c1)>=(vt0.c2)))))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND ('1718784379')))) WHERE ((NOT (((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c2))) IN (x'91825805' COLLATE NOCASE))))) UNION ALL SELECT * FROM v0 CROSS JOIN vt0 ON (((((+ (vt0.c0)))OR(((vt0.c1)>=(vt0.c2)))))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND ('1718784379')))) WHERE (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c2))) IN (x'91825805' COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((((+ (vt0.c0)))OR(((vt0.c1)>=(vt0.c2)))))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND ('1718784379'))));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END)OR(NULL)))AND((NOT (x''))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END)OR(NULL)))AND((NOT (x''))))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END)OR(NULL)))AND((NOT (x''))))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))>((CAST(v0.c0 AS TEXT))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))>((CAST(v0.c0 AS TEXT))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))>((CAST(v0.c0 AS TEXT))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, vt0.c0, vt0.c2, vt0.c1 FROM v0, vt1, vt0 GROUP BY v0.c0, vt0.c0, vt0.c2, vt0.c1;
SELECT v0.c0, vt0.c0, vt0.c2, vt0.c1 FROM v0, vt1, vt0 GROUP BY v0.c0, vt0.c0, vt0.c2, vt0.c1 HAVING (((vt0.c1)) BETWEEN ((AVG(COUNT(MIN(vt0.c2))) COLLATE NOCASE)) AND ((COUNT(*)))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt0.c2, vt0.c1 FROM v0, vt1, vt0 GROUP BY v0.c0, vt0.c0, vt0.c2, vt0.c1 HAVING (NOT ((((vt0.c1)) BETWEEN ((AVG(COUNT(MIN(vt0.c2))) COLLATE NOCASE)) AND ((COUNT(*)))))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt0.c2, vt0.c1 FROM v0, vt1, vt0 GROUP BY v0.c0, vt0.c0, vt0.c2, vt0.c1 HAVING (((((vt0.c1)) BETWEEN ((AVG(COUNT(MIN(vt0.c2))) COLLATE NOCASE)) AND ((COUNT(*))))) ISNULL);
SELECT * FROM v0, vt1, vt0;
SELECT * FROM v0, vt1, vt0 WHERE ((CAST(vt0.c1 AS TEXT) IN ())) UNION ALL SELECT * FROM v0, vt1, vt0 WHERE ((NOT ((CAST(vt0.c1 AS TEXT) IN ())))) UNION ALL SELECT * FROM v0, vt1, vt0 WHERE ((((CAST(vt0.c1 AS TEXT) IN ())) ISNULL));
SELECT * FROM v0, vt1, vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (LIKELY(DISTINCT CASE vt0.c1  WHEN v0.c0 THEN vt0.c2 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 END)) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((NOT (LIKELY(DISTINCT CASE vt0.c1  WHEN v0.c0 THEN vt0.c2 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 END)))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (((LIKELY(DISTINCT CASE vt0.c1  WHEN v0.c0 THEN vt0.c2 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 END)) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 WHERE (vt1.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT (vt1.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((vt1.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 CROSS JOIN v0 ON ((vt0.c0)=(v0.c0)) COLLATE BINARY GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 CROSS JOIN v0 ON ((vt0.c0)=(v0.c0)) COLLATE BINARY GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING (+ (((vt0.c2)%(SUM(TOTAL(v0.c0)))))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 CROSS JOIN v0 ON ((vt0.c0)==(v0.c0)) COLLATE BINARY GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING (NOT ((+ (((vt0.c2)%(SUM(TOTAL(v0.c0)))))))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 CROSS JOIN v0 ON ((vt0.c0)==(v0.c0)) COLLATE BINARY GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING (((+ (((vt0.c2)%(SUM(TOTAL(v0.c0))))))) ISNULL);
SELECT vt0.c1, vt0.c0, vt0.c2, v0.c0 FROM v0, vt0;
SELECT vt0.c1, vt0.c0, vt0.c2, v0.c0 FROM v0, vt0 WHERE ((((v0.c0) BETWEEN (vt0.c2) AND (vt0.c2)) IN (-1.049156854E9))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2, v0.c0 FROM v0, vt0 WHERE ((NOT ((((v0.c0) BETWEEN (vt0.c2) AND (vt0.c2)) IN (-1.049156854E9))))) UNION ALL SELECT vt0.c1, vt0.c0, vt0.c2, v0.c0 FROM v0, vt0 WHERE ((((((v0.c0) BETWEEN (vt0.c2) AND (vt0.c2)) IN (-1.049156854E9))) ISNULL));
SELECT vt0.c1, vt0.c0, vt0.c2, v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1, v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1, v0.c0 FROM v0, vt0 WHERE (((NULL)||(x''))) UNION SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1, v0.c0 FROM v0, vt0 WHERE ((NOT (((NULL)||(x''))))) UNION SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1, v0.c0 FROM v0 NOT INDEXED, vt0 WHERE (((((NULL)||(x''))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1, v0.c0 FROM v0, vt0;
SELECT ALL v0.c0, vt1.c0, vt0.c2 FROM vt1, vt0, v0 GROUP BY v0.c0, vt1.c0, vt0.c2;
SELECT v0.c0, vt1.c0, vt0.c2 FROM vt1, vt0, v0 WHERE ((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) IN ())) GROUP BY v0.c0, vt1.c0, vt0.c2 UNION SELECT ALL v0.c0, vt1.c0, vt0.c2 FROM vt1, vt0, v0 WHERE ((NOT ((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) IN ())))) GROUP BY v0.c0, vt1.c0, vt0.c2 UNION SELECT v0.c0, vt1.c0, vt0.c2 FROM vt1, vt0, v0 WHERE ((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) IN ())) ISNULL)) GROUP BY v0.c0, vt1.c0, vt0.c2;
SELECT ALL v0.c0, vt1.c0, vt0.c2 FROM vt1, vt0, v0 GROUP BY v0.c0, vt1.c0, vt0.c2;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (json_array_length(((v0.c0)||(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (json_array_length(((v0.c0)||(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((json_array_length(((v0.c0)||(v0.c0)))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ((((- (v0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT ((((- (v0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((((((- (v0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((UNICODE(vt0.c0) IN ())) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((UNICODE(vt0.c0) IN ())))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((UNICODE(vt0.c0) IN ())) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c2 FROM vt0, vt1 CROSS JOIN v0 ON SQLITE_COMPILEOPTION_GET(vt0.c0) GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0, vt1 CROSS JOIN v0 ON SQLITE_COMPILEOPTION_GET(vt0.c0) GROUP BY vt0.c2 HAVING COUNT(*) UNION ALL SELECT vt0.c2 FROM vt0, vt1 CROSS JOIN v0 ON SQLITE_COMPILEOPTION_GET(vt0.c0) GROUP BY vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c2 FROM vt0, vt1 CROSS JOIN v0 ON SQLITE_COMPILEOPTION_GET(vt0.c0) GROUP BY vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c2 FROM vt0, vt1 CROSS JOIN v0 ON SQLITE_COMPILEOPTION_GET(vt0.c0) GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0, vt1 CROSS JOIN v0 ON SQLITE_COMPILEOPTION_GET(vt0.c0) GROUP BY vt0.c2 HAVING COUNT(*) UNION ALL SELECT vt0.c2 FROM vt0, vt1 CROSS JOIN v0 ON SQLITE_COMPILEOPTION_GET(vt0.c0) GROUP BY vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c2 FROM vt0, vt1 CROSS JOIN v0 ON SQLITE_COMPILEOPTION_GET(vt0.c0) GROUP BY vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c2 FROM vt0, vt1 CROSS JOIN v0 ON SQLITE_COMPILEOPTION_GET(vt0.c0) GROUP BY vt0.c2;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0)|(vt1.c0)) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((x''))) END) ORDER BY ((((((vt1.c0))<>((vt1.c0)))))<=((0.15721283178807832))) DESC;
SELECT ALL * FROM vt1 WHERE ((NOT (CASE WHEN ((vt1.c0)|(vt1.c0)) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((x''))) END))) ORDER BY ((((((vt1.c0))!=((vt1.c0)))))<=((0.15721283178807832))) DESC;
SELECT * FROM vt1 WHERE (((CASE WHEN ((vt1.c0)|(vt1.c0)) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((x''))) END) ISNULL)) ORDER BY ((((((vt1.c0))<>((vt1.c0)))))<=((0.15721283178807832))) DESC;
SELECT * FROM vt1;
SELECT DISTINCT vt1.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt1, vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE BINARY) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt1, vt0 WHERE ((NOT (CAST(vt0.c0 AS TEXT) COLLATE BINARY))) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS TEXT) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt1, vt0;
SELECT vt1.c0, vt0.c1, vt0.c2 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c2;
SELECT vt1.c0, vt0.c1, vt0.c2 FROM v0, vt0, vt1 WHERE ((vt1.c0 COLLATE RTRIM IN (((((vt0.c1)OR(x'')))AND(vt0.c1)), ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0))))) GROUP BY vt1.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt1.c0, vt0.c1, vt0.c2 FROM v0, vt0, vt1 WHERE ((NOT ((vt1.c0 COLLATE RTRIM IN (((((vt0.c1)OR(x'')))AND(vt0.c1)), ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0))))))) GROUP BY vt1.c0, vt0.c1, vt0.c2 UNION SELECT vt1.c0, vt0.c1, vt0.c2 FROM v0, vt0, vt1 WHERE ((((vt1.c0 COLLATE RTRIM IN (((((vt0.c1)OR(x'')))AND(vt0.c1)), ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c1, vt0.c2;
SELECT vt1.c0, vt0.c1, vt0.c2 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c2 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c2)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c2) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c2 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c2)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c2) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((x'')<(((vt1.c0)<>(vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((x'')<(((vt1.c0)<>(vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((x'')<(((vt1.c0)!=(vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (COALESCE(vt1.c0, vt1.c0)) AND (-898884777))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (COALESCE(vt1.c0, vt1.c0)) AND (-898884777))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (COALESCE(vt1.c0, vt1.c0)) AND (-898884777))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt0, vt1 WHERE (NULL) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM v0, vt0, vt1 WHERE ((NOT (NULL))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM v0, vt0, vt1 WHERE (((NULL) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(AVG(COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(AVG(COUNT(*))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(AVG(COUNT(*)))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOT NULL)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOT NULL)))) UNION ALL SELECT * FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOT NULL)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((NOT (0.35440537196234734)) IN (((v0.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((NOT (0.35440537196234734)) IN (((v0.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((NOT (0.35440537196234734)) IN (((v0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN ())) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((vt1.c0 COLLATE BINARY IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0 COLLATE BINARY IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(AVG(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(AVG(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(AVG(v0.c0))) ISNULL);
SELECT ALL * FROM v0, vt1 NOT INDEXED, vt0;
SELECT * FROM v0, vt1, vt0 WHERE (((((vt0.c2)>=(vt0.c2)))LIKE(((vt0.c2)&(vt0.c0))))) UNION ALL SELECT ALL * FROM v0, vt1, vt0 WHERE ((NOT (((((vt0.c2)>=(vt0.c2)))LIKE(((vt0.c2)&(vt0.c0))))))) UNION ALL SELECT * FROM v0, vt1, vt0 WHERE (((((((vt0.c2)>=(vt0.c2)))LIKE(((vt0.c2)&(vt0.c0))))) ISNULL));
SELECT ALL * FROM v0, vt1 NOT INDEXED, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 INNER JOIN vt1 ON (((vt0.c2)GLOB(vt0.c1)) IN (((((((((NULL)AND(v0.c0)))OR(v0.c0)))OR(vt1.c0)))AND(vt1.c0)))) INNER JOIN v0 ON CASE WHEN x'' THEN (((vt0.c2))<((vt0.c2))) END GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 INNER JOIN vt1 ON (((vt0.c2)GLOB(vt0.c1)) IN (((((((((NULL)AND(v0.c0)))OR(v0.c0)))OR(vt1.c0)))AND(vt1.c0)))) INNER JOIN v0 ON CASE WHEN x'' THEN (((vt0.c2))<((vt0.c2))) END WHERE (((((((((((((((x'')OR(vt0.c1)))OR(vt0.c1)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(vt0.c1)))<=((NOT (vt0.c2))))) GROUP BY vt0.c0, vt0.c2 UNION SELECT vt0.c0, vt0.c2 FROM vt0 INNER JOIN vt1 ON (((vt0.c2)GLOB(vt0.c1)) IN (((((((((NULL)AND(v0.c0)))OR(v0.c0)))OR(vt1.c0)))AND(vt1.c0)))) INNER JOIN v0 ON CASE WHEN x'' THEN (((vt0.c2))<((vt0.c2))) END WHERE ((NOT (((((((((((((((x'')OR(vt0.c1)))OR(vt0.c1)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(vt0.c1)))<=((NOT (vt0.c2))))))) GROUP BY vt0.c0, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c2 FROM vt0 INNER JOIN vt1 ON (((vt0.c2)GLOB(vt0.c1)) IN (((((((((NULL)AND(v0.c0)))OR(v0.c0)))OR(vt1.c0)))AND(vt1.c0)))) INNER JOIN v0 ON CASE WHEN x'' THEN (((vt0.c2))<((vt0.c2))) END WHERE (((((((((((((((((x'')OR(vt0.c1)))OR(vt0.c1)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(vt0.c1)))<=((NOT (vt0.c2))))) ISNULL)) GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 INNER JOIN vt1 ON (((vt0.c2)GLOB(vt0.c1)) IN (((((((((NULL)AND(v0.c0)))OR(v0.c0)))OR(vt1.c0)))AND(vt1.c0)))) INNER JOIN v0 ON CASE WHEN x'' THEN (((vt0.c2))<((vt0.c2))) END GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING vt0.c2 UNION ALL SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING (NOT (vt0.c2)) UNION ALL SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING ((vt0.c2) ISNULL);
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING vt0.c2 UNION ALL SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING (NOT (vt0.c2)) UNION ALL SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING ((vt0.c2) ISNULL);
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT * FROM v0, vt1;
SELECT ALL * FROM v0, vt1 WHERE ((NOT ((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0)))))) UNION ALL SELECT ALL * FROM v0, vt1 WHERE ((NOT ((NOT ((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0)))))))) UNION ALL SELECT * FROM v0, vt1 WHERE ((((NOT ((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0)))))) ISNULL));
SELECT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 INNER JOIN vt0 ON vt0.c0;
SELECT DISTINCT * FROM v0, vt1 INNER JOIN vt0 ON vt0.c0 WHERE ((- (CASE NULL  WHEN vt0.c0 THEN vt0.c0 END))) UNION SELECT DISTINCT * FROM v0, vt1 INNER JOIN vt0 ON vt0.c0 WHERE ((NOT ((- (CASE NULL  WHEN vt0.c0 THEN vt0.c0 END))))) UNION SELECT DISTINCT * FROM v0, vt1 INNER JOIN vt0 ON vt0.c0 WHERE ((((- (CASE NULL  WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM v0, vt1 INNER JOIN vt0 ON vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, vt1 CROSS JOIN v0 ON ABS(((vt0.c0)||(vt1.c0))) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, vt1 CROSS JOIN v0 ON ABS(((vt0.c0)||(vt1.c0))) WHERE ((((v0.c0)<(vt0.c2)) IN ())) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0, vt1 CROSS JOIN v0 ON ABS(((vt0.c0)||(vt1.c0))) WHERE ((NOT ((((v0.c0)<(vt0.c2)) IN ())))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0, vt1 CROSS JOIN v0 ON ABS(((vt0.c0)||(vt1.c0))) WHERE ((((((v0.c0)<(vt0.c2)) IN ())) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, vt1 CROSS JOIN v0 ON ABS(((vt0.c0)||(vt1.c0))) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c2, v0.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON CAST(vt0.c1 AS TEXT) GROUP BY vt0.c2, v0.c0;
SELECT ALL vt0.c2, v0.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON CAST(vt0.c1 AS TEXT) GROUP BY vt0.c2, v0.c0 HAVING SUM(GROUP_CONCAT(COUNT(v0.c0))) UNION ALL SELECT vt0.c2, v0.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON CAST(vt0.c1 AS TEXT) GROUP BY vt0.c2, v0.c0 HAVING (NOT (SUM(GROUP_CONCAT(COUNT(v0.c0))))) UNION ALL SELECT ALL vt0.c2, v0.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON CAST(vt0.c1 AS TEXT) GROUP BY vt0.c2, v0.c0 HAVING ((SUM(GROUP_CONCAT(COUNT(v0.c0)))) ISNULL);
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE ((vt0.c2 COLLATE BINARY IN ())) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT ((vt0.c2 COLLATE BINARY IN ())))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c2 COLLATE BINARY IN ())) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, v0 WHERE ((((v0.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL))) AND (((vt1.c0 IN ()))))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL))) AND (((vt1.c0 IN ()))))))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((((((v0.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL))) AND (((vt1.c0 IN ()))))) ISNULL));
SELECT DISTINCT * FROM vt1, v0;
SELECT ALL vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt1, vt0 WHERE ((((((((((((((- (vt0.c2)))OR((((vt0.c2, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c2, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c2 ELSE 0X1a1008c6 END)))AND(vt0.c2)))OR(CASE WHEN x'c3b2' THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 END)))OR((- (vt0.c0)))))AND(CAST(vt0.c2 AS REAL)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT ((((((((((((((- (vt0.c2)))OR((((vt0.c2, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c2, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c2 ELSE 0X1a1008c6 END)))AND(vt0.c2)))OR(CASE WHEN x'c3b2' THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 END)))OR((- (vt0.c0)))))AND(CAST(vt0.c2 AS REAL)))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt1, vt0 WHERE ((((((((((((((((- (vt0.c2)))OR((((vt0.c2, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c2, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c2 ELSE 0x1a1008c6 END)))AND(vt0.c2)))OR(CASE WHEN x'c3b2' THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 END)))OR((- (vt0.c0)))))AND(CAST(vt0.c2 AS REAL)))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING CASE MAX(vt1.c0)  WHEN COUNT(*) THEN MIN(v0.c0) COLLATE NOCASE END UNION ALL SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING (NOT (CASE MAX(vt1.c0)  WHEN COUNT(*) THEN MIN(v0.c0) COLLATE NOCASE END)) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING ((CASE MAX(vt1.c0)  WHEN COUNT(*) THEN MIN(v0.c0) COLLATE NOCASE END) ISNULL);
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING CASE MAX(vt1.c0)  WHEN COUNT(*) THEN MIN(v0.c0) COLLATE NOCASE END UNION ALL SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING (NOT (CASE MAX(vt1.c0)  WHEN COUNT(*) THEN MIN(v0.c0) COLLATE NOCASE END)) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING ((CASE MAX(vt1.c0)  WHEN COUNT(*) THEN MIN(v0.c0) COLLATE NOCASE END) ISNULL);
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0 WHERE ((((((vt0.c0))<>((vt0.c1))))=(vt1.c0 COLLATE NOCASE))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0 WHERE ((NOT ((((((vt0.c0))!=((vt0.c1))))=(vt1.c0 COLLATE NOCASE))))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0 WHERE ((((((((vt0.c0))!=((vt0.c1))))=(vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt1, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((((((((~ (vt1.c0)))OR(CAST(vt1.c0 AS TEXT))))OR(vt1.c0 COLLATE NOCASE)))AND(vt1.c0)))AND(((vt1.c0)<(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((((((((~ (vt1.c0)))OR(CAST(vt1.c0 AS TEXT))))OR(vt1.c0 COLLATE NOCASE)))AND(vt1.c0)))AND(((vt1.c0)<(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((((((((~ (vt1.c0)))OR(CAST(vt1.c0 AS TEXT))))OR(vt1.c0 COLLATE NOCASE)))AND(vt1.c0)))AND(((vt1.c0)<(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 WHERE (((((vt1.c0) IS TRUE)) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0)&(vt1.c0))))) GROUP BY vt1.c0, v0.c0 UNION SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 WHERE ((NOT (((((vt1.c0) IS TRUE)) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0)&(vt1.c0))))))) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM v0, vt1 WHERE (((((((vt1.c0) IS TRUE)) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0)&(vt1.c0))))) ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0 HAVING 0.28036909141811917 UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0 HAVING (NOT (0.28036909141811917)) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0 HAVING ((0.28036909141811917) ISNULL);
SELECT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0 HAVING 0.28036909141811917 UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0 HAVING (NOT (0.28036909141811917)) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0 HAVING ((0.28036909141811917) ISNULL);
SELECT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ('-843886263') UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ('-843886263'))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((('-843886263') ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE (((0xffffffffa4b0e22e) NOT NULL)) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT (((0Xffffffffa4b0e22e) NOT NULL)))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE (((((0Xffffffffa4b0e22e) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE)>=(''))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c1 COLLATE NOCASE)>=(''))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((((vt0.c1 COLLATE NOCASE)>=(''))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)||(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE NOCASE)||(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE NOCASE)||(vt1.c0))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ((((('7132761')AND(((((vt0.c1)OR(v0.c0)))AND(v0.c0)))))AND(QUOTE(v0.c0)))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT ((((('7132761')AND(((((vt0.c1)OR(v0.c0)))AND(v0.c0)))))AND(QUOTE(v0.c0)))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((((((('7132761')AND(((((vt0.c1)OR(v0.c0)))AND(v0.c0)))))AND(QUOTE(v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL vt0.c2, vt0.c1, v0.c0, vt0.c0, vt1.c0 FROM vt1, v0, vt0 GROUP BY vt0.c2, vt0.c1, v0.c0, vt0.c0, vt1.c0;
SELECT ALL vt0.c2, vt0.c1, v0.c0, vt0.c0, vt1.c0 FROM vt1, v0, vt0 WHERE (((((CASE WHEN v0.c0 THEN vt0.c1 END)OR((vt0.c0 IN ()))))OR((vt0.c1 IN ('\r4~?'))))) GROUP BY vt0.c2, vt0.c1, v0.c0, vt0.c0, vt1.c0 UNION SELECT ALL vt0.c2, vt0.c1, v0.c0, vt0.c0, vt1.c0 FROM vt1, v0, vt0 WHERE ((NOT (((((CASE WHEN v0.c0 THEN vt0.c1 END)OR((vt0.c0 IN ()))))OR((vt0.c1 IN ('\r4~?'))))))) GROUP BY vt0.c2, vt0.c1, v0.c0, vt0.c0, vt1.c0 UNION SELECT vt0.c2, vt0.c1, v0.c0, vt0.c0, vt1.c0 FROM vt1, v0, vt0 WHERE (((((((CASE WHEN v0.c0 THEN vt0.c1 END)OR((vt0.c0 IN ()))))OR((vt0.c1 IN ('\r4~?'))))) ISNULL)) GROUP BY vt0.c2, vt0.c1, v0.c0, vt0.c0, vt1.c0;
SELECT ALL vt0.c2, vt0.c1, v0.c0, vt0.c0, vt1.c0 FROM vt1, v0, vt0 GROUP BY vt0.c2, vt0.c1, v0.c0, vt0.c0, vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c2 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c2)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c2) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c2 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c2)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c2) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((('')-((v0.c0 IN ())))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((('')-((v0.c0 IN ())))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((('')-((v0.c0 IN ())))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0, vt1.c0, vt0.c2, vt0.c0 FROM v0, vt0, vt1;
SELECT DISTINCT v0.c0, vt1.c0, vt0.c2, vt0.c0 FROM v0, vt0, vt1 WHERE (vt1.c0 COLLATE RTRIM) UNION SELECT DISTINCT v0.c0, vt1.c0, vt0.c2, vt0.c0 FROM v0, vt0, vt1 WHERE ((NOT (vt1.c0 COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0, vt1.c0, vt0.c2, vt0.c0 FROM v0, vt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0, vt0.c2, vt0.c0 FROM v0, vt0, vt1;
SELECT ALL vt0.c1, vt0.c2, vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0)+(vt1.c0)))) GROUP BY vt0.c1, vt0.c2, vt1.c0, vt0.c0;
SELECT vt0.c1, vt0.c2, vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0)+(vt1.c0)))) WHERE (vt0.c1) GROUP BY vt0.c1, vt0.c2, vt1.c0, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c2, vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0)+(vt1.c0)))) WHERE ((NOT (vt0.c1))) GROUP BY vt0.c1, vt0.c2, vt1.c0, vt0.c0 UNION SELECT vt0.c1, vt0.c2, vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0)+(vt1.c0)))) WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c1, vt0.c2, vt1.c0, vt0.c0;
SELECT ALL vt0.c1, vt0.c2, vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0)+(vt1.c0)))) GROUP BY vt0.c1, vt0.c2, vt1.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c1, vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON CAST(((vt0.c1) NOTNULL) AS TEXT) GROUP BY v0.c0, vt0.c1, vt1.c0;
SELECT v0.c0, vt0.c1, vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON CAST(((vt0.c1) NOTNULL) AS TEXT) GROUP BY v0.c0, vt0.c1, vt1.c0 HAVING COUNT(vt0.c2) COLLATE NOCASE UNION ALL SELECT v0.c0, vt0.c1, vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON CAST(((vt0.c1) NOTNULL) AS TEXT) GROUP BY v0.c0, vt0.c1, vt1.c0 HAVING (NOT (COUNT(vt0.c2) COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0, vt0.c1, vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON CAST(((vt0.c1) NOTNULL) AS TEXT) GROUP BY v0.c0, vt0.c1, vt1.c0 HAVING ((COUNT(vt0.c2) COLLATE NOCASE) ISNULL);
SELECT ALL v0.c0, vt0.c1, vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON CAST(((vt0.c1) NOTNULL) AS TEXT) GROUP BY v0.c0, vt0.c1, vt1.c0;
SELECT v0.c0, vt0.c1, vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON CAST(((vt0.c1) NOTNULL) AS TEXT) GROUP BY v0.c0, vt0.c1, vt1.c0 HAVING COUNT(vt0.c2) COLLATE NOCASE UNION ALL SELECT v0.c0, vt0.c1, vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON CAST(((vt0.c1) NOTNULL) AS TEXT) GROUP BY v0.c0, vt0.c1, vt1.c0 HAVING (NOT (COUNT(vt0.c2) COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0, vt0.c1, vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON CAST(((vt0.c1) NOTNULL) AS TEXT) GROUP BY v0.c0, vt0.c1, vt1.c0 HAVING ((COUNT(vt0.c2) COLLATE NOCASE) ISNULL);
SELECT ALL v0.c0, vt0.c1, vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON CAST(((vt0.c1) NOTNULL) AS TEXT) GROUP BY v0.c0, vt0.c1, vt1.c0;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((x'05961698')%(((vt1.c0)>(vt1.c0))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((x'05961698')%(((vt1.c0)>(vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1 NOT INDEXED WHERE (((((x'05961698')%(((vt1.c0)>(vt1.c0))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((- (x''))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((- (x''))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((- (x''))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (((((- (vt0.c0)))AND(CASE 0.5184273156873477  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CASE x''  WHEN vt0.c2 THEN vt0.c1 ELSE vt1.c0 END)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (((((- (vt0.c0)))AND(CASE 0.5184273156873477  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CASE x''  WHEN vt0.c2 THEN vt0.c1 ELSE vt1.c0 END)) WHERE (((((((0.7497836716273146) NOT NULL))OR(((vt1.c0)>(vt0.c0)))))OR(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (((((- (vt0.c0)))AND(CASE 0.5184273156873477  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CASE x''  WHEN vt0.c2 THEN vt0.c1 ELSE vt1.c0 END)) WHERE ((NOT (((((((0.7497836716273146) NOT NULL))OR(((vt1.c0)>(vt0.c0)))))OR(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (((((- (vt0.c0)))AND(CASE 0.5184273156873477  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CASE x''  WHEN vt0.c2 THEN vt0.c1 ELSE vt1.c0 END)) WHERE (((((((((0.7497836716273146) NOT NULL))OR(((vt1.c0)>(vt0.c0)))))OR(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (((((- (vt0.c0)))AND(CASE 0.5184273156873477  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CASE x''  WHEN vt0.c2 THEN vt0.c1 ELSE vt1.c0 END)) GROUP BY vt1.c0;
SELECT ALL v0.c0, vt0.c2, vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c2, vt0.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c2, vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c2, vt0.c0, vt0.c1 HAVING TOTAL(AVG(vt0.c0)) UNION ALL SELECT v0.c0, vt0.c2, vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c2, vt0.c0, vt0.c1 HAVING (NOT (TOTAL(AVG(vt0.c0)))) UNION ALL SELECT ALL v0.c0, vt0.c2, vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c2, vt0.c0, vt0.c1 HAVING ((TOTAL(AVG(vt0.c0))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (NULL) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((NULL) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1 IN ())) IS FALSE)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c1 IN ())) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1 IN ())) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 WHERE (CASE WHEN GLOB(vt0.c2, vt0.c2) THEN CAST(vt0.c2 AS TEXT) WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END THEN vt1.c0 COLLATE BINARY WHEN (~ (vt1.c0)) THEN (((vt0.c0))>=((vt0.c0))) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT (CASE WHEN GLOB(vt0.c2, vt0.c2) THEN CAST(vt0.c2 AS TEXT) WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END THEN vt1.c0 COLLATE BINARY WHEN (~ (vt1.c0)) THEN (((vt0.c0))>=((vt0.c0))) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((CASE WHEN GLOB(vt0.c2, vt0.c2) THEN CAST(vt0.c2 AS TEXT) WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END THEN vt1.c0 COLLATE BINARY WHEN (~ (vt1.c0)) THEN (((vt0.c0))>=((vt0.c0))) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL v0.c0, vt0.c0, vt0.c2, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt0.c2, vt1.c0;
SELECT v0.c0, vt0.c0, vt0.c2, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt0.c2, vt1.c0 HAVING COUNT(((COUNT(*)) BETWEEN (SUM(vt0.c1)) AND (AVG(COUNT(MIN(vt0.c1)))))) UNION ALL SELECT v0.c0, vt0.c0, vt0.c2, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt0.c2, vt1.c0 HAVING (NOT (COUNT(((COUNT(*)) BETWEEN (SUM(vt0.c1)) AND (AVG(COUNT(MIN(vt0.c1)))))))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt0.c2, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt0.c2, vt1.c0 HAVING ((COUNT(((COUNT(*)) BETWEEN (SUM(vt0.c1)) AND (AVG(COUNT(MIN(vt0.c1))))))) ISNULL);
SELECT ALL * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE ((((((vt0.c0 IN ()))AND(CAST(vt0.c1 AS INTEGER))))OR((((vt0.c0, vt0.c0, vt0.c2)) BETWEEN ((0.619383394368912, v0.c0, vt0.c0)) AND ((vt0.c0, v0.c0, vt0.c1)))))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT ((((((vt0.c0 IN ()))AND(CAST(vt0.c1 AS INTEGER))))OR((((vt0.c0, vt0.c0, vt0.c2)) BETWEEN ((0.619383394368912, v0.c0, vt0.c0)) AND ((vt0.c0, v0.c0, vt0.c1)))))))) UNION ALL SELECT * FROM vt0, v0 WHERE ((((((((vt0.c0 IN ()))AND(CAST(vt0.c1 AS INTEGER))))OR((((vt0.c0, vt0.c0, vt0.c2)) BETWEEN ((0.619383394368912, v0.c0, vt0.c0)) AND ((vt0.c0, v0.c0, vt0.c1)))))) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT vt0.c0, vt0.c2, v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0, vt0.c2, v0.c0 FROM v0, vt0 WHERE (((vt0.c1 IN ()) IN ())) UNION SELECT DISTINCT vt0.c0, vt0.c2, v0.c0 FROM v0, vt0 WHERE ((NOT (((vt0.c1 IN ()) IN ())))) UNION SELECT DISTINCT vt0.c0, vt0.c2, v0.c0 FROM v0, vt0 WHERE (((((vt0.c1 IN ()) IN ())) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c2, v0.c0 FROM v0, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<>(((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(0.9989515784782049)))AND(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)!=(((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(0.9989515784782049)))AND(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<>(((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(0.9989515784782049)))AND(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(MIN(SUM(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(MIN(SUM(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(MIN(SUM(vt1.c0)))) ISNULL);
SELECT ALL MAX(CASE WHEN ((vt0.c2)AND(vt0.c0)) THEN 0X5862e872 ELSE ((vt0.c2) NOTNULL) END) FROM vt0 ORDER BY CASE WHEN NULL COLLATE BINARY THEN CAST(vt0.c0 AS NUMERIC) ELSE 0.6351226425009335 END;
SELECT vt0.c0, v0.c0, vt0.c2 FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c1, CAST(vt0.c2 AS BLOB), TYPEOF(DISTINCT vt0.c2)))!=(((vt0.c0 IN ()), v0.c0 COLLATE RTRIM, vt0.c2 COLLATE BINARY))) INNER JOIN v0 ON ((((((vt1.c0)OR(vt0.c1)))AND(vt0.c2)))+(CASE vt0.c0  WHEN v0.c0 THEN vt0.c1 END));
SELECT DISTINCT vt0.c2 FROM vt0, vt1, v0;
SELECT DISTINCT vt0.c2 FROM vt0, vt1, v0 WHERE (CASE (NOT (vt0.c1))  WHEN ((vt1.c0)AND('0.549715445748883')) THEN vt0.c2 COLLATE BINARY ELSE ((vt0.c1)/(vt0.c1)) END) UNION SELECT DISTINCT vt0.c2 FROM vt0, vt1, v0 WHERE ((NOT (CASE (NOT (vt0.c1))  WHEN ((vt1.c0)AND('0.549715445748883')) THEN vt0.c2 COLLATE BINARY ELSE ((vt0.c1)/(vt0.c1)) END))) UNION SELECT DISTINCT vt0.c2 FROM vt0, vt1, v0 NOT INDEXED WHERE (((CASE (NOT (vt0.c1))  WHEN ((vt1.c0)AND('0.549715445748883')) THEN vt0.c2 COLLATE BINARY ELSE ((vt0.c1)/(vt0.c1)) END) ISNULL));
SELECT DISTINCT vt0.c2 FROM vt0, vt1, v0;
SELECT ALL v0.c0, vt0.c0, vt0.c2 FROM vt0, v0 FULL OUTER JOIN vt1 ON ((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) COLLATE BINARY GROUP BY v0.c0, vt0.c0, vt0.c2;
SELECT v0.c0, vt0.c0, vt0.c2 FROM vt0, v0 FULL OUTER JOIN vt1 ON ((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) COLLATE BINARY WHERE (0.06393011968791074) GROUP BY v0.c0, vt0.c0, vt0.c2 UNION SELECT v0.c0, vt0.c0, vt0.c2 FROM vt0, v0 FULL OUTER JOIN vt1 ON ((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) COLLATE BINARY WHERE ((NOT (0.06393011968791074))) GROUP BY v0.c0, vt0.c0, vt0.c2 UNION SELECT v0.c0, vt0.c0, vt0.c2 FROM vt0, v0 FULL OUTER JOIN vt1 ON ((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) COLLATE BINARY WHERE (((0.06393011968791074) ISNULL)) GROUP BY v0.c0, vt0.c0, vt0.c2;
SELECT ALL v0.c0, vt0.c0, vt0.c2 FROM vt0, v0 FULL OUTER JOIN vt1 ON ((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) COLLATE BINARY GROUP BY v0.c0, vt0.c0, vt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0) BETWEEN (AVG(vt1.c0)) AND (0Xb3a9c6d))) BETWEEN (rtreenode(vt1.c0, vt1.c0)) AND ('')) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((vt1.c0) BETWEEN (AVG(vt1.c0)) AND (0xb3a9c6d))) BETWEEN (rtreenode(vt1.c0, vt1.c0)) AND ('')))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c0) BETWEEN (AVG(vt1.c0)) AND (0xb3a9c6d))) BETWEEN (rtreenode(vt1.c0, vt1.c0)) AND (''))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0) BETWEEN (AVG(vt1.c0)) AND (0Xb3a9c6d))) BETWEEN (rtreenode(vt1.c0, vt1.c0)) AND ('')) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((vt1.c0) BETWEEN (AVG(vt1.c0)) AND (0xb3a9c6d))) BETWEEN (rtreenode(vt1.c0, vt1.c0)) AND ('')))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c0) BETWEEN (AVG(vt1.c0)) AND (0xb3a9c6d))) BETWEEN (rtreenode(vt1.c0, vt1.c0)) AND (''))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL SUM((vt0.c2 IN (NULL, vt0.c0)) COLLATE NOCASE) FROM vt1, vt0, v0 ORDER BY vt0.c1 DESC, CAST(((vt0.c2)<<(vt1.c0)) AS NUMERIC);
SELECT ALL vt1.c0, v0.c0, vt0.c1, vt0.c2, vt0.c0 FROM v0, vt0, vt1;
SELECT vt1.c0, v0.c0, vt0.c1, vt0.c2, vt0.c0 FROM v0, vt0, vt1 WHERE (CAST(((v0.c0) NOT BETWEEN ('0.7646830409155106') AND (vt0.c2)) AS INTEGER)) UNION ALL SELECT ALL vt1.c0, v0.c0, vt0.c1, vt0.c2, vt0.c0 FROM v0, vt0, vt1 WHERE ((NOT (CAST(((v0.c0) NOT BETWEEN ('0.7646830409155106') AND (vt0.c2)) AS INTEGER)))) UNION ALL SELECT vt1.c0, v0.c0, vt0.c1, vt0.c2, vt0.c0 FROM v0, vt0 NOT INDEXED, vt1 WHERE (((CAST(((v0.c0) NOT BETWEEN ('0.7646830409155106') AND (vt0.c2)) AS INTEGER)) ISNULL));
SELECT ALL vt1.c0, v0.c0, vt0.c1, vt0.c2, vt0.c0 FROM v0, vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, v0.c0 FROM vt1, v0, vt0;
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, v0.c0 FROM vt1 NOT INDEXED, v0, vt0 WHERE (((vt1.c0)GLOB(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2))))) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE ((NOT (((vt1.c0)GLOB(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2))))))) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE (((((vt1.c0)GLOB(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2))))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, v0.c0 FROM vt1, v0, vt0;
SELECT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM v0, vt0 CROSS JOIN vt1 ON (+ (NULL)) GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM v0, vt0 CROSS JOIN vt1 ON (+ (NULL)) WHERE ((((vt1.c0)OR(vt0.c1)) IN ())) GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0 UNION SELECT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM v0, vt0 CROSS JOIN vt1 ON (+ (NULL)) WHERE ((NOT ((((vt1.c0)OR(vt0.c1)) IN ())))) GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM v0, vt0 CROSS JOIN vt1 ON (+ (NULL)) WHERE ((((((vt1.c0)OR(vt0.c1)) IN ())) ISNULL)) GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0;
SELECT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM v0, vt0 CROSS JOIN vt1 ON (+ (NULL)) GROUP BY vt1.c0, vt0.c1, vt0.c2, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (~ (load_extension(vt0.c0))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ((~ (load_extension(vt0.c0))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((~ (load_extension(vt0.c0)))) ISNULL);
SELECT vt0.c1, vt0.c2 FROM vt0;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 WHERE (((((((((vt0.c0 COLLATE NOCASE)AND((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(((((vt0.c1)AND(vt0.c2)))OR(vt0.c2)))))AND(((((vt0.c2)OR(vt0.c1)))OR(vt0.c2)))))AND('0.8392366777235226'))) ORDER BY CAST((((x''))<=((vt0.c1))) AS BLOB)  NULLS FIRST;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (((((((((vt0.c0 COLLATE NOCASE)AND((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(((((vt0.c1)AND(vt0.c2)))OR(vt0.c2)))))AND(((((vt0.c2)OR(vt0.c1)))OR(vt0.c2)))))AND('0.8392366777235226'))))) ORDER BY CAST((((x''))<=((vt0.c1))) AS BLOB)  NULLS FIRST;
SELECT vt0.c1, vt0.c2 FROM vt0 WHERE (((((((((((vt0.c0 COLLATE NOCASE)AND((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(((((vt0.c1)AND(vt0.c2)))OR(vt0.c2)))))AND(((((vt0.c2)OR(vt0.c1)))OR(vt0.c2)))))AND('0.8392366777235226'))) ISNULL)) ORDER BY CAST((((x''))<=((vt0.c1))) AS BLOB)  NULLS FIRST;
SELECT vt0.c1, vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c2, v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c1, vt0.c2, v0.c0 FROM v0, vt0 WHERE ((((((((((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((''))))AND(0xffffffffa3eb470f)))AND(((vt0.c2) NOT NULL))))OR((((vt0.c2, 0.11969269095261093, v0.c0))<((v0.c0, vt0.c0, vt0.c0))))))AND(((vt0.c1)&(v0.c0))))) UNION SELECT DISTINCT vt0.c1, vt0.c2, v0.c0 FROM v0, vt0 WHERE ((NOT ((((((((((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((''))))AND(0xffffffffa3eb470f)))AND(((vt0.c2) NOT NULL))))OR((((vt0.c2, 0.11969269095261093, v0.c0))<((v0.c0, vt0.c0, vt0.c0))))))AND(((vt0.c1)&(v0.c0))))))) UNION SELECT DISTINCT vt0.c1, vt0.c2, v0.c0 FROM v0, vt0 WHERE ((((((((((((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((''))))AND(0xffffffffa3eb470f)))AND(((vt0.c2) NOT NULL))))OR((((vt0.c2, 0.11969269095261093, v0.c0))<((v0.c0, vt0.c0, vt0.c0))))))AND(((vt0.c1)&(v0.c0))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c2, v0.c0 FROM v0, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CAST((~ (vt1.c0)) AS TEXT)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST((~ (vt1.c0)) AS TEXT)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST((~ (vt1.c0)) AS TEXT)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, vt1.c0, vt0.c2 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c2;
SELECT ALL vt0.c0, vt1.c0, vt0.c2 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c2 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c2 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c2 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, vt1.c0, vt0.c2 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c2;
SELECT ALL vt0.c0, vt1.c0, vt0.c2 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c2 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c2 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c2 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, vt1.c0, vt0.c2 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c2;
SELECT vt1.c0 FROM v0, vt1;
SELECT vt1.c0 FROM v0, vt1 WHERE ((((((v0.c0) IS TRUE)))<((x'')))) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 WHERE ((NOT ((((((v0.c0) IS TRUE)))<((x'')))))) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 WHERE ((((((((v0.c0) IS TRUE)))<((x'')))) ISNULL));
SELECT vt1.c0 FROM v0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE WHEN ((vt1.c0)+(vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN ((vt1.c0)+(vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE WHEN ((vt1.c0)+(vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((x'7e5c', v0.c0, v0.c0, '-1204775859', v0.c0))) IN (v0.c0 COLLATE NOCASE, LTRIM(1.583567656E9, v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((x'7e5c', v0.c0, v0.c0, '-1204775859', v0.c0))) IN (v0.c0 COLLATE NOCASE, LTRIM(1.583567656E9, v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((x'7e5c', v0.c0, v0.c0, '-1204775859', v0.c0))) IN (v0.c0 COLLATE NOCASE, LTRIM(1.583567656E9, v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(GROUP_CONCAT(MAX(COUNT(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(GROUP_CONCAT(MAX(COUNT(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(GROUP_CONCAT(MAX(COUNT(vt1.c0))))) ISNULL);
SELECT vt0.c0, vt0.c1, vt0.c2, v0.c0, vt1.c0 FROM vt1, v0 CROSS JOIN vt0 ON ((vt0.c0)>=(((vt0.c0) NOT NULL)));
SELECT ALL vt0.c0, vt0.c1, vt0.c2, v0.c0, vt1.c0 FROM vt1, v0 CROSS JOIN vt0 ON ((vt0.c0)>=(((vt0.c0) NOT NULL))) WHERE ((vt1.c0 COLLATE NOCASE IN ())) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2, v0.c0, vt1.c0 FROM vt1, v0 CROSS JOIN vt0 ON ((vt0.c0)>=(((vt0.c0) NOT NULL))) WHERE ((NOT ((vt1.c0 COLLATE NOCASE IN ())))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2, v0.c0, vt1.c0 FROM vt1, v0 NOT INDEXED CROSS JOIN vt0 ON ((vt0.c0)>=(((vt0.c0) NOT NULL))) WHERE ((((vt1.c0 COLLATE NOCASE IN ())) ISNULL));
SELECT vt0.c0, vt0.c1, vt0.c2, v0.c0, vt1.c0 FROM vt1, v0 CROSS JOIN vt0 ON ((vt0.c0)>=(((vt0.c0) NOT NULL)));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1) NOTNULL)) BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c2)>(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c1) NOTNULL)) BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c2)>(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c1) NOTNULL)) BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c2)>(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt1 WHERE (((vt1.c0)IS(vt1.c0)) COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM v0, vt1 WHERE ((NOT (((vt1.c0)IS(vt1.c0)) COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM v0, vt1 WHERE (((((vt1.c0)IS(vt1.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0))==(((- (COUNT(*)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0))==(((- (COUNT(*)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0))=(((- (COUNT(*))))))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0))==(((- (COUNT(*)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0))==(((- (COUNT(*)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0))=(((- (COUNT(*))))))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c1 FROM vt0, v0;
SELECT ALL vt0.c1 FROM vt0, v0 WHERE ((((((- (vt0.c2)))AND(CAST('xrc岽' AS TEXT))))OR(TRIM(0.5414039137336805)))) UNION ALL SELECT vt0.c1 FROM vt0, v0 WHERE ((NOT ((((((- (vt0.c2)))AND(CAST('xrc岽' AS TEXT))))OR(TRIM(0.5414039137336805)))))) UNION ALL SELECT vt0.c1 FROM vt0, v0 WHERE ((((((((- (vt0.c2)))AND(CAST('xrc岽' AS TEXT))))OR(TRIM(0.5414039137336805)))) ISNULL));
SELECT ALL vt0.c1 FROM vt0, v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END)<(((vt0.c2) IS FALSE)))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END)<(((vt0.c2) IS FALSE)))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END)<(((vt0.c2) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0))!=((v0.c0)))))>=((((((v0.c0)OR(v0.c0)))AND(v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0))!=((v0.c0)))))>=((((((v0.c0)OR(v0.c0)))AND(v0.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((v0.c0))<>((v0.c0)))))>=((((((v0.c0)OR(v0.c0)))AND(v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c1 HAVING AVG(((vt0.c0)+(v0.c0))) UNION ALL SELECT ALL vt0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c1 HAVING (NOT (AVG(((vt0.c0)+(v0.c0))))) UNION ALL SELECT vt0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c1 HAVING ((AVG(((vt0.c0)+(v0.c0)))) ISNULL);
SELECT ALL vt0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c1 HAVING AVG(((vt0.c0)+(v0.c0))) UNION ALL SELECT ALL vt0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c1 HAVING (NOT (AVG(((vt0.c0)+(v0.c0))))) UNION ALL SELECT vt0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c1 HAVING ((AVG(((vt0.c0)+(v0.c0)))) ISNULL);
SELECT ALL vt0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN v0 ON (((vt0.c2 IN ())) ISNULL);
SELECT ALL vt0.c1 FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN v0 ON (((vt0.c2 IN ())) ISNULL) WHERE (((~ (vt0.c0)) IN (((((vt0.c1)AND(vt0.c0)))OR(v0.c0))))) UNION ALL SELECT ALL vt0.c1 FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN v0 ON (((vt0.c2 IN ())) ISNULL) WHERE ((NOT (((~ (vt0.c0)) IN (((((vt0.c1)AND(vt0.c0)))OR(v0.c0))))))) UNION ALL SELECT vt0.c1 FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN v0 ON (((vt0.c2 IN ())) ISNULL) WHERE (((((~ (vt0.c0)) IN (((((vt0.c1)AND(vt0.c0)))OR(v0.c0))))) ISNULL));
SELECT ALL vt0.c1 FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN v0 ON (((vt0.c2 IN ())) ISNULL);
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN v0 ON (TYPEOF(v0.c0) IN ()) FULL OUTER JOIN vt1 ON ((((v0.c0)|(vt0.c0)))>>(v0.c0));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN v0 ON (TYPEOF(v0.c0) IN ()) FULL OUTER JOIN vt1 ON ((((v0.c0)|(vt0.c0)))>>(v0.c0)) WHERE (CASE WHEN (vt0.c2 IN ()) THEN (- (vt0.c0)) END) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN v0 ON (TYPEOF(v0.c0) IN ()) FULL OUTER JOIN vt1 ON ((((v0.c0)|(vt0.c0)))>>(v0.c0)) WHERE ((NOT (CASE WHEN (vt0.c2 IN ()) THEN (- (vt0.c0)) END))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN v0 ON (TYPEOF(v0.c0) IN ()) FULL OUTER JOIN vt1 ON ((((v0.c0)|(vt0.c0)))>>(v0.c0)) WHERE (((CASE WHEN (vt0.c2 IN ()) THEN (- (vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN v0 ON (TYPEOF(v0.c0) IN ()) FULL OUTER JOIN vt1 ON ((((v0.c0)|(vt0.c0)))>>(v0.c0));
SELECT ALL vt1.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON ((((((((CASE WHEN vt1.c0 THEN v0.c0 END)OR((v0.c0 IN ()))))OR('')))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(v0.c0 COLLATE RTRIM)) GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON ((((((((CASE WHEN vt1.c0 THEN v0.c0 END)OR((v0.c0 IN ()))))OR('')))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(v0.c0 COLLATE RTRIM)) WHERE ((((NULL)) BETWEEN (((vt1.c0 IN ()))) AND ((((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) GROUP BY vt1.c0, v0.c0 UNION SELECT ALL vt1.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON ((((((((CASE WHEN vt1.c0 THEN v0.c0 END)OR((v0.c0 IN ()))))OR('')))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(v0.c0 COLLATE RTRIM)) WHERE ((NOT ((((NULL)) BETWEEN (((vt1.c0 IN ()))) AND ((((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))))) GROUP BY vt1.c0, v0.c0 UNION SELECT ALL vt1.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON ((((((((CASE WHEN vt1.c0 THEN v0.c0 END)OR((v0.c0 IN ()))))OR('')))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(v0.c0 COLLATE RTRIM)) WHERE ((((((NULL)) BETWEEN (((vt1.c0 IN ()))) AND ((((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON ((((((((CASE WHEN vt1.c0 THEN v0.c0 END)OR((v0.c0 IN ()))))OR('')))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(v0.c0 COLLATE RTRIM)) GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(vt1.c0) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(vt1.c0)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(vt1.c0) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(vt1.c0)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT SUM((- ((- (vt0.c2))))) FROM vt0, vt1, v0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c2) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c2))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((vt0.c2) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt1, v0, vt0 WHERE (((vt0.c2 COLLATE NOCASE)GLOB(LIKELY(vt1.c0)))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((NOT (((vt0.c2 COLLATE NOCASE)GLOB(LIKELY(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE (((((vt0.c2 COLLATE NOCASE)GLOB(LIKELY(vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 WHERE (((vt0.c2) ISNULL)) GROUP BY vt0.c1, vt0.c2 UNION SELECT vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (((vt0.c2) ISNULL)))) GROUP BY vt0.c1, vt0.c2 UNION SELECT vt0.c1, vt0.c2 FROM vt0 WHERE (((((vt0.c2) ISNULL)) ISNULL)) GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(v0.c0)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(v0.c0)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0, vt0 NOT INDEXED, vt1;
SELECT ALL * FROM v0, vt0, vt1 WHERE ((('1e500')<<(CASE vt0.c2  WHEN vt0.c1 THEN vt1.c0 ELSE NULL END))) UNION ALL SELECT ALL * FROM v0, vt0, vt1 WHERE ((NOT ((('1e500')<<(CASE vt0.c2  WHEN vt0.c1 THEN vt1.c0 ELSE NULL END))))) UNION ALL SELECT * FROM v0, vt0, vt1 WHERE ((((('1e500')<<(CASE vt0.c2  WHEN vt0.c1 THEN vt1.c0 ELSE NULL END))) ISNULL));
SELECT ALL * FROM v0, vt0 NOT INDEXED, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (DATETIME(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), ((vt1.c0)GLOB(vt1.c0)), vt1.c0 COLLATE BINARY, vt1.c0 COLLATE RTRIM, (vt1.c0 IN ()))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (DATETIME(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), ((vt1.c0)GLOB(vt1.c0)), vt1.c0 COLLATE BINARY, vt1.c0 COLLATE RTRIM, (vt1.c0 IN ()))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((DATETIME(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), ((vt1.c0)GLOB(vt1.c0)), vt1.c0 COLLATE BINARY, vt1.c0 COLLATE RTRIM, (vt1.c0 IN ()))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND(((v0.c0)OR(v0.c0)))))AND(((v0.c0) IS TRUE))))OR((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND(((v0.c0)OR(v0.c0)))))AND(((v0.c0) IS TRUE))))OR((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND(((v0.c0)OR(v0.c0)))))AND(((v0.c0) IS TRUE))))OR((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL vt0.c1, v0.c0, vt0.c0, vt0.c2 FROM v0, vt0;
SELECT vt0.c1, v0.c0, vt0.c0, vt0.c2 FROM v0, vt0 WHERE (((((vt0.c0)!=(v0.c0)))/(((vt0.c0) NOTNULL)))) UNION ALL SELECT vt0.c1, v0.c0, vt0.c0, vt0.c2 FROM v0, vt0 WHERE ((NOT (((((vt0.c0)!=(v0.c0)))/(((vt0.c0) NOTNULL)))))) UNION ALL SELECT vt0.c1, v0.c0, vt0.c0, vt0.c2 FROM v0, vt0 WHERE (((((((vt0.c0)<>(v0.c0)))/(((vt0.c0) NOTNULL)))) ISNULL));
SELECT ALL vt0.c1, v0.c0, vt0.c0, vt0.c2 FROM v0, vt0;
SELECT DISTINCT vt0.c2, vt1.c0, vt0.c0, vt0.c1 FROM vt0 CROSS JOIN vt1 ON (((~ (vt0.c0))) ISNULL);
SELECT DISTINCT vt0.c2, vt1.c0, vt0.c0, vt0.c1 FROM vt0 CROSS JOIN vt1 ON (((~ (vt0.c0))) ISNULL) WHERE (((UNLIKELY(DISTINCT vt0.c1)) NOT BETWEEN (vt0.c0) AND (((vt0.c2) BETWEEN (vt0.c0) AND (vt1.c0))))) UNION SELECT DISTINCT vt0.c2, vt1.c0, vt0.c0, vt0.c1 FROM vt0 CROSS JOIN vt1 ON (((~ (vt0.c0))) ISNULL) WHERE ((NOT (((UNLIKELY(DISTINCT vt0.c1)) NOT BETWEEN (vt0.c0) AND (((vt0.c2) BETWEEN (vt0.c0) AND (vt1.c0))))))) UNION SELECT DISTINCT vt0.c2, vt1.c0, vt0.c0, vt0.c1 FROM vt0 CROSS JOIN vt1 ON (((~ (vt0.c0))) ISNULL) WHERE (((((UNLIKELY(DISTINCT vt0.c1)) NOT BETWEEN (vt0.c0) AND (((vt0.c2) BETWEEN (vt0.c0) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT vt0.c2, vt1.c0, vt0.c0, vt0.c1 FROM vt0 CROSS JOIN vt1 ON (((~ (vt0.c0))) ISNULL);
SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM v0, vt1 WHERE ((((x''))>((((v0.c0)>(v0.c0)))))) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 WHERE ((NOT ((((x''))>((((v0.c0)>(v0.c0)))))))) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 WHERE ((((((x''))>((((v0.c0)>(v0.c0)))))) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT vt0.c2, vt1.c0 FROM vt0 FULL OUTER JOIN v0 ON (((vt0.c0) BETWEEN (vt0.c2) AND (v0.c0)) IN ()) INNER JOIN vt1 ON vt0.c0;
SELECT ALL vt0.c2, vt1.c0 FROM vt0 FULL OUTER JOIN v0 ON (((vt0.c0) BETWEEN (vt0.c2) AND (v0.c0)) IN ()) INNER JOIN vt1 ON vt0.c0 WHERE (UPPER(DISTINCT ((((vt0.c1)AND(vt0.c2)))AND(v0.c0)))) UNION ALL SELECT ALL vt0.c2, vt1.c0 FROM vt0 FULL OUTER JOIN v0 ON (((vt0.c0) BETWEEN (vt0.c2) AND (v0.c0)) IN ()) INNER JOIN vt1 ON vt0.c0 WHERE ((NOT (UPPER(DISTINCT ((((vt0.c1)AND(vt0.c2)))AND(v0.c0)))))) UNION ALL SELECT ALL vt0.c2, vt1.c0 FROM vt0 FULL OUTER JOIN v0 ON (((vt0.c0) BETWEEN (vt0.c2) AND (v0.c0)) IN ()) INNER JOIN vt1 ON vt0.c0 WHERE (((UPPER(DISTINCT ((((vt0.c1)AND(vt0.c2)))AND(v0.c0)))) ISNULL));
SELECT vt0.c2, vt1.c0 FROM vt0 FULL OUTER JOIN v0 ON (((vt0.c0) BETWEEN (vt0.c2) AND (v0.c0)) IN ()) INNER JOIN vt1 ON vt0.c0;
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((((vt0.c1 IN ()))LIKE(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((NOT ((((vt0.c1 IN ()))LIKE(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((((((vt0.c1 IN ()))LIKE(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT ALL vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM vt0, vt1 WHERE (SQLITE_SOURCE_ID()) GROUP BY vt0.c2, vt0.c1 UNION SELECT vt0.c2, vt0.c1 FROM vt0, vt1 WHERE ((NOT (SQLITE_SOURCE_ID()))) GROUP BY vt0.c2, vt0.c1 UNION SELECT vt0.c2, vt0.c1 FROM vt0, vt1 WHERE (((SQLITE_SOURCE_ID()) ISNULL)) GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c1;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING ((MAX(v0.c0)) BETWEEN (((SUM(vt1.c0))%(SUM(-59280799)))) AND (COUNT(*))) UNION ALL SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING (NOT (((MAX(v0.c0)) BETWEEN (((SUM(vt1.c0))%(SUM(-59280799)))) AND (COUNT(*))))) UNION ALL SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING ((((MAX(v0.c0)) BETWEEN (((SUM(vt1.c0))%(SUM(-59280799)))) AND (COUNT(*)))) ISNULL);
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING ((MAX(v0.c0)) BETWEEN (((SUM(vt1.c0))%(SUM(-59280799)))) AND (COUNT(*))) UNION ALL SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING (NOT (((MAX(v0.c0)) BETWEEN (((SUM(vt1.c0))%(SUM(-59280799)))) AND (COUNT(*))))) UNION ALL SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING ((((MAX(v0.c0)) BETWEEN (((SUM(vt1.c0))%(SUM(-59280799)))) AND (COUNT(*)))) ISNULL);
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT v0.c0, vt1.c0 FROM v0, vt1;
SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 WHERE (v0.c0) UNION ALL SELECT v0.c0, vt1.c0 FROM v0, vt1 WHERE ((NOT (v0.c0))) UNION ALL SELECT v0.c0, vt1.c0 FROM v0, vt1 WHERE (((v0.c0) ISNULL));
SELECT v0.c0, vt1.c0 FROM v0, vt1;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 END) AND ((~ (v0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 END) AND ((~ (v0.c0))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 END) AND ((~ (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT vt0.c2, vt0.c0, v0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c2, vt0.c0, v0.c0, vt1.c0;
SELECT vt0.c2, vt0.c0, v0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE (((((vt0.c0) ISNULL)) BETWEEN (((((((((vt0.c0)OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c2))) AND ('-1787619799'))) GROUP BY vt0.c2, vt0.c0, v0.c0, vt1.c0 UNION SELECT ALL vt0.c2, vt0.c0, v0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE ((NOT (((((vt0.c0) ISNULL)) BETWEEN (((((((((vt0.c0)OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c2))) AND ('-1787619799'))))) GROUP BY vt0.c2, vt0.c0, v0.c0, vt1.c0 UNION SELECT ALL vt0.c2, vt0.c0, v0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE (((((((vt0.c0) ISNULL)) BETWEEN (((((((((vt0.c0)OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c2))) AND ('-1787619799'))) ISNULL)) GROUP BY vt0.c2, vt0.c0, v0.c0, vt1.c0;
SELECT vt0.c2, vt0.c0, v0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c2, vt0.c0, v0.c0, vt1.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 CROSS JOIN vt0 ON ((NOT (x'')) IN ()) GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 CROSS JOIN vt0 ON ((NOT (x'')) IN ()) GROUP BY vt1.c0, v0.c0 HAVING MAX(MAX(MIN(v0.c0))) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, v0 CROSS JOIN vt0 ON ((NOT (x'')) IN ()) GROUP BY vt1.c0, v0.c0 HAVING (NOT (MAX(MAX(MIN(v0.c0))))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 CROSS JOIN vt0 ON ((NOT (x'')) IN ()) GROUP BY vt1.c0, v0.c0 HAVING ((MAX(MAX(MIN(v0.c0)))) ISNULL);
SELECT * FROM vt1, v0;
SELECT ALL * FROM vt1, v0 WHERE (CAST(LIKELY(0.21297565553333475) AS REAL)) UNION ALL SELECT ALL * FROM vt1, v0 WHERE ((NOT (CAST(LIKELY(0.21297565553333475) AS REAL)))) UNION ALL SELECT ALL * FROM vt1, v0 WHERE (((CAST(LIKELY(0.21297565553333475) AS REAL)) ISNULL));
SELECT * FROM vt1, v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE WHEN (~ (x'')) THEN v0.c0 ELSE CAST(v0.c0 AS BLOB) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN (~ (x'')) THEN v0.c0 ELSE CAST(v0.c0 AS BLOB) END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CASE WHEN (~ (x'')) THEN v0.c0 ELSE CAST(v0.c0 AS BLOB) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING GROUP_CONCAT(AVG(vt1.c0)) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(AVG(vt1.c0)))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING ((GROUP_CONCAT(AVG(vt1.c0))) ISNULL);
SELECT vt0.c1 FROM vt0, vt1;
SELECT vt0.c1 FROM vt0, vt1 WHERE ((((((((((((((+ (vt0.c2)))OR(1.882420074E9)))OR((~ (vt1.c0)))))OR(((vt0.c2)<>(NULL)))))OR(vt0.c1)))OR((~ (vt0.c2)))))AND(UPPER(DISTINCT vt0.c0)))) UNION ALL SELECT ALL vt0.c1 FROM vt0, vt1 WHERE ((NOT ((((((((((((((+ (vt0.c2)))OR(1.882420074E9)))OR((~ (vt1.c0)))))OR(((vt0.c2)<>(NULL)))))OR(vt0.c1)))OR((~ (vt0.c2)))))AND(UPPER(DISTINCT vt0.c0)))))) UNION ALL SELECT ALL vt0.c1 FROM vt0, vt1 NOT INDEXED WHERE ((((((((((((((((+ (vt0.c2)))OR(1.882420074E9)))OR((~ (vt1.c0)))))OR(((vt0.c2)<>(NULL)))))OR(vt0.c1)))OR((~ (vt0.c2)))))AND(UPPER(DISTINCT vt0.c0)))) ISNULL));
SELECT vt0.c1 FROM vt0, vt1;
SELECT DISTINCT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, v0 WHERE ((((((((v0.c0))<>((v0.c0))))AND((- (vt1.c0)))))OR(LIKE(vt1.c0, v0.c0, '9')))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((NOT ((((((((v0.c0))!=((v0.c0))))AND((- (vt1.c0)))))OR(LIKE(vt1.c0, v0.c0, '9')))))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((((((((((v0.c0))<>((v0.c0))))AND((- (vt1.c0)))))OR(LIKE(vt1.c0, v0.c0, '9')))) ISNULL));
SELECT DISTINCT * FROM vt1, v0;
SELECT vt0.c0, vt0.c2 FROM v0, vt0, vt1 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM v0, vt0, vt1 WHERE (CAST((((vt1.c0))<>((vt1.c0))) AS REAL)) GROUP BY vt0.c0, vt0.c2 UNION SELECT vt0.c0, vt0.c2 FROM v0, vt0, vt1 WHERE ((NOT (CAST((((vt1.c0))<>((vt1.c0))) AS REAL)))) GROUP BY vt0.c0, vt0.c2 UNION SELECT vt0.c0, vt0.c2 FROM v0, vt0, vt1 WHERE (((CAST((((vt1.c0))!=((vt1.c0))) AS REAL)) ISNULL)) GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM v0, vt0, vt1 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2;
SELECT vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2 HAVING CASE WHEN CAST(vt0.c0 AS REAL) THEN MIN(AVG(vt0.c1)) ELSE GROUP_CONCAT(vt1.c0) END UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2 HAVING (NOT (CASE WHEN CAST(vt0.c0 AS REAL) THEN MIN(AVG(vt0.c1)) ELSE GROUP_CONCAT(vt1.c0) END)) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2 HAVING ((CASE WHEN CAST(vt0.c0 AS REAL) THEN MIN(AVG(vt0.c1)) ELSE GROUP_CONCAT(vt1.c0) END) ISNULL);
SELECT ALL MIN(json_patch(v0.c0, v0.c0) COLLATE BINARY) FROM v0;
SELECT v0.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt0, v0;
SELECT ALL v0.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt0, v0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END)||(CAST(vt0.c1 AS NUMERIC)))) UNION ALL SELECT v0.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt0, v0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END)||(CAST(vt0.c1 AS NUMERIC)))))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt0, v0 WHERE (((((CASE vt0.c0  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END)||(CAST(vt0.c1 AS NUMERIC)))) ISNULL));
SELECT v0.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 LEFT OUTER JOIN vt1 ON vt1.c0 COLLATE NOCASE;
SELECT DISTINCT * FROM vt0, v0 LEFT OUTER JOIN vt1 ON vt1.c0 COLLATE NOCASE WHERE ((((vt0.c0 IN (vt0.c1))) NOT BETWEEN (vt0.c0) AND (((((vt0.c1)OR(0.9411480192221754)))OR('xm᏷+|%'))))) UNION SELECT DISTINCT * FROM vt0, v0 LEFT OUTER JOIN vt1 ON vt1.c0 COLLATE NOCASE WHERE ((NOT ((((vt0.c0 IN (vt0.c1))) NOT BETWEEN (vt0.c0) AND (((((vt0.c1)OR(0.9411480192221754)))OR('xm᏷+|%'))))))) UNION SELECT DISTINCT * FROM vt0, v0 LEFT OUTER JOIN vt1 ON vt1.c0 COLLATE NOCASE WHERE ((((((vt0.c0 IN (vt0.c1))) NOT BETWEEN (vt0.c0) AND (((((vt0.c1)OR(0.9411480192221754)))OR('xm᏷+|%'))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0 LEFT OUTER JOIN vt1 ON vt1.c0 COLLATE NOCASE;
SELECT v0.c0, vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0, v0 GROUP BY v0.c0, vt1.c0, vt0.c1, vt0.c0;
SELECT v0.c0, vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0, v0 WHERE (CAST(((vt0.c1)LIKE(vt0.c1)) AS BLOB)) GROUP BY v0.c0, vt1.c0, vt0.c1, vt0.c0 UNION SELECT ALL v0.c0, vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0, v0 WHERE ((NOT (CAST(((vt0.c1)LIKE(vt0.c1)) AS BLOB)))) GROUP BY v0.c0, vt1.c0, vt0.c1, vt0.c0 UNION SELECT ALL v0.c0, vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0, v0 WHERE (((CAST(((vt0.c1)LIKE(vt0.c1)) AS BLOB)) ISNULL)) GROUP BY v0.c0, vt1.c0, vt0.c1, vt0.c0;
SELECT v0.c0, vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0, v0 GROUP BY v0.c0, vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt0.c1, v0.c0, vt0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0, vt0.c2;
SELECT ALL vt0.c1, v0.c0, vt0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0, vt0.c2 HAVING COUNT(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT vt0.c1, v0.c0, vt0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0, vt0.c2 HAVING (NOT (COUNT(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT vt0.c1, v0.c0, vt0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0, vt0.c2 HAVING ((COUNT(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((~ (CAST(vt1.c0 AS NUMERIC)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((~ (CAST(vt1.c0 AS NUMERIC)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((~ (CAST(vt1.c0 AS NUMERIC)))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0 COLLATE NOCASE)AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND((+ (vt1.c0)))))AND((vt1.c0 IN ()))))AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((((((vt1.c0 COLLATE NOCASE)AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND((+ (vt1.c0)))))AND((vt1.c0 IN ()))))AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((((vt1.c0 COLLATE NOCASE)AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND((+ (vt1.c0)))))AND((vt1.c0 IN ()))))AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT v0.c0, vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0, vt0.c1, vt0.c0, vt0.c2;
SELECT v0.c0, vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, vt1, v0 WHERE ((~ (((vt0.c0)LIKE(v0.c0))))) GROUP BY v0.c0, vt1.c0, vt0.c1, vt0.c0, vt0.c2 UNION SELECT ALL v0.c0, vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, vt1, v0 WHERE ((NOT ((~ (((vt0.c0)LIKE(v0.c0))))))) GROUP BY v0.c0, vt1.c0, vt0.c1, vt0.c0, vt0.c2 UNION SELECT v0.c0, vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, vt1, v0 WHERE ((((~ (((vt0.c0)LIKE(v0.c0))))) ISNULL)) GROUP BY v0.c0, vt1.c0, vt0.c1, vt0.c0, vt0.c2;
SELECT v0.c0, vt1.c0, vt0.c1, vt0.c0, vt0.c2 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0, vt0.c1, vt0.c0, vt0.c2;
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0)%(vt1.c0)) IN ())) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)%(vt1.c0)) IN ())))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)%(vt1.c0)) IN ())) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt1, v0, vt0 WHERE (((((((vt0.c2)AND(vt0.c2)))AND('1691100397')))<<((0.41207005015411724 IN ())))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((NOT (((((((vt0.c2)AND(vt0.c2)))AND('1691100397')))<<((0.41207005015411724 IN ())))))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE (((((((((vt0.c2)AND(vt0.c2)))AND('1691100397')))<<((0.41207005015411724 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT vt0.c2, vt0.c0, v0.c0 FROM vt0 INNER JOIN v0 ON (- ((((('1914765699')AND(vt0.c1)))AND(v0.c0)))) GROUP BY vt0.c2, vt0.c0, v0.c0;
SELECT ALL vt0.c2, vt0.c0, v0.c0 FROM vt0 INNER JOIN v0 ON (- ((((('1914765699')AND(vt0.c1)))AND(v0.c0)))) WHERE ((((v0.c0)IS(vt0.c2)) IN ())) GROUP BY vt0.c2, vt0.c0, v0.c0 UNION SELECT ALL vt0.c2, vt0.c0, v0.c0 FROM vt0 INNER JOIN v0 ON (- ((((('1914765699')AND(vt0.c1)))AND(v0.c0)))) WHERE ((NOT ((((v0.c0)IS(vt0.c2)) IN ())))) GROUP BY vt0.c2, vt0.c0, v0.c0 UNION SELECT ALL vt0.c2, vt0.c0, v0.c0 FROM vt0 INNER JOIN v0 ON (- ((((('1914765699')AND(vt0.c1)))AND(v0.c0)))) WHERE ((((((v0.c0)IS(vt0.c2)) IN ())) ISNULL)) GROUP BY vt0.c2, vt0.c0, v0.c0;
SELECT vt0.c2, vt0.c0, v0.c0 FROM vt0 INNER JOIN v0 ON (- ((((('1914765699')AND(vt0.c1)))AND(v0.c0)))) GROUP BY vt0.c2, vt0.c0, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0)<<(MIN(COUNT(*)))))IS NOT(MAX(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((v0.c0)<<(MIN(COUNT(*)))))IS NOT(MAX(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((v0.c0)<<(MIN(COUNT(*)))))IS NOT(MAX(v0.c0)))) ISNULL);
SELECT ALL SUM(CASE ((((vt1.c0)AND(x'')))OR(vt1.c0))  WHEN ((vt1.c0)>=(vt1.c0)) THEN ((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)) END) FROM v0, vt1;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE WHEN (x'aa94' IN ()) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN (x'aa94' IN ()) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE WHEN (x'aa94' IN ()) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM v0, vt0 RIGHT OUTER JOIN vt1 ON ((((NULL)AND(((vt0.c1) NOTNULL))))AND(((v0.c0)<=(vt0.c2))));
SELECT DISTINCT * FROM v0, vt0 RIGHT OUTER JOIN vt1 ON ((((NULL)AND(((vt0.c1) NOTNULL))))AND(((v0.c0)<=(vt0.c2)))) WHERE (((v0.c0) IS TRUE) COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0, vt0 RIGHT OUTER JOIN vt1 ON ((((NULL)AND(((vt0.c1) NOTNULL))))AND(((v0.c0)<=(vt0.c2)))) WHERE ((NOT (((v0.c0) IS TRUE) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0, vt0 RIGHT OUTER JOIN vt1 ON ((((NULL)AND(((vt0.c1) NOTNULL))))AND(((v0.c0)<=(vt0.c2)))) WHERE (((((v0.c0) IS TRUE) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0, vt0 RIGHT OUTER JOIN vt1 ON ((((NULL)AND(((vt0.c1) NOTNULL))))AND(((v0.c0)<=(vt0.c2))));
SELECT vt0.c2, vt0.c1 FROM vt0, v0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM vt0, v0 WHERE (((NULLIF(DISTINCT vt0.c0, v0.c0)) BETWEEN ((~ (v0.c0))) AND (CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))) GROUP BY vt0.c2, vt0.c1 UNION SELECT vt0.c2, vt0.c1 FROM vt0, v0 WHERE ((NOT (((NULLIF(DISTINCT vt0.c0, v0.c0)) BETWEEN ((~ (v0.c0))) AND (CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))))) GROUP BY vt0.c2, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c1 FROM vt0, v0 WHERE (((((NULLIF(DISTINCT vt0.c0, v0.c0)) BETWEEN ((~ (v0.c0))) AND (CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))) ISNULL)) GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM vt0, v0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (~ (GROUP_CONCAT(vt0.c1))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((~ (GROUP_CONCAT(vt0.c1))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((~ (GROUP_CONCAT(vt0.c1)))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (~ (GROUP_CONCAT(vt0.c1))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((~ (GROUP_CONCAT(vt0.c1))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((~ (GROUP_CONCAT(vt0.c1)))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END AS TEXT)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END AS TEXT)))) UNION ALL SELECT * FROM vt0 WHERE (((CAST(CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END AS TEXT)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT v0.c0 FROM vt1, v0;
SELECT DISTINCT v0.c0 FROM vt1, v0 WHERE ((~ ((((v0.c0, 1209902606, v0.c0)) BETWEEN ((v0.c0, v0.c0, vt1.c0)) AND ((vt1.c0, v0.c0, vt1.c0)))))) UNION SELECT DISTINCT v0.c0 FROM vt1, v0 WHERE ((NOT ((~ ((((v0.c0, 1209902606, v0.c0)) BETWEEN ((v0.c0, v0.c0, vt1.c0)) AND ((vt1.c0, v0.c0, vt1.c0)))))))) UNION SELECT DISTINCT v0.c0 FROM vt1, v0 WHERE ((((~ ((((v0.c0, 1209902606, v0.c0)) BETWEEN ((v0.c0, v0.c0, vt1.c0)) AND ((vt1.c0, v0.c0, vt1.c0)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM vt1, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((+ (v0.c0)) COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((+ (v0.c0)) COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((+ (v0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c1, v0.c0 FROM vt0, v0 GROUP BY vt0.c1, v0.c0;
SELECT vt0.c1, v0.c0 FROM vt0, v0 GROUP BY vt0.c1, v0.c0 HAVING MIN(((AVG(vt0.c1))LIKE(vt0.c0))) UNION ALL SELECT vt0.c1, v0.c0 FROM vt0, v0 GROUP BY vt0.c1, v0.c0 HAVING (NOT (MIN(((AVG(vt0.c1))LIKE(vt0.c0))))) UNION ALL SELECT vt0.c1, v0.c0 FROM vt0, v0 GROUP BY vt0.c1, v0.c0 HAVING ((MIN(((AVG(vt0.c1))LIKE(vt0.c0)))) ISNULL);
SELECT ALL vt0.c1, vt0.c2, v0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0;
SELECT vt0.c1, vt0.c2, v0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0 WHERE (((((((vt0.c1)IS NOT(vt0.c0)))OR((((vt0.c2, 0X22b000d7, v0.c0, vt0.c1, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c1, vt0.c1, vt1.c0, vt0.c0)) AND ((vt0.c2, vt1.c0, vt0.c0, v0.c0, v0.c0))))))OR(CAST(vt0.c0 AS NUMERIC)))) UNION ALL SELECT vt0.c1, vt0.c2, v0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0 WHERE ((NOT (((((((vt0.c1)IS NOT(vt0.c0)))OR((((vt0.c2, 0X22b000d7, v0.c0, vt0.c1, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c1, vt0.c1, vt1.c0, vt0.c0)) AND ((vt0.c2, vt1.c0, vt0.c0, v0.c0, v0.c0))))))OR(CAST(vt0.c0 AS NUMERIC)))))) UNION ALL SELECT ALL vt0.c1, vt0.c2, v0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0 WHERE (((((((((vt0.c1)IS NOT(vt0.c0)))OR((((vt0.c2, 0x22b000d7, v0.c0, vt0.c1, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c1, vt0.c1, vt1.c0, vt0.c0)) AND ((vt0.c2, vt1.c0, vt0.c0, v0.c0, v0.c0))))))OR(CAST(vt0.c0 AS NUMERIC)))) ISNULL));
SELECT ALL vt0.c1, vt0.c2, v0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)|('-1022355365')))GLOB(((vt1.c0)>=(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0)|('-1022355365')))GLOB(((vt1.c0)>=(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)|('-1022355365')))GLOB(((vt1.c0)>=(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0, v0.c0, vt0.c2 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0, vt0.c2;
SELECT vt1.c0, v0.c0, vt0.c2 FROM v0, vt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM)&(((vt0.c2) IS TRUE)))) GROUP BY vt1.c0, v0.c0, vt0.c2 UNION SELECT vt1.c0, v0.c0, vt0.c2 FROM v0, vt0, vt1 WHERE ((NOT (((vt1.c0 COLLATE RTRIM)&(((vt0.c2) IS TRUE)))))) GROUP BY vt1.c0, v0.c0, vt0.c2 UNION SELECT vt1.c0, v0.c0, vt0.c2 FROM v0, vt0, vt1 NOT INDEXED WHERE (((((vt1.c0 COLLATE RTRIM)&(((vt0.c2) IS TRUE)))) ISNULL)) GROUP BY vt1.c0, v0.c0, vt0.c2;
SELECT vt1.c0, v0.c0, vt0.c2 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0, vt0.c2;
SELECT v0.c0, vt0.c2, vt0.c1 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c2, vt0.c1;
SELECT v0.c0, vt0.c2, vt0.c1 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c2, vt0.c1 HAVING (((((((((MAX(vt0.c2) IN ()))AND(((vt0.c2) NOT BETWEEN (TOTAL(COUNT(x'4bcf'))) AND ('QꇜW')))))AND((((COUNT(MAX(TOTAL(v0.c0))), v0.c0, vt0.c2))>=((TOTAL(GROUP_CONCAT(COUNT(MAX(COUNT(*))))), 0.9704362874961048, GROUP_CONCAT(MIN(COUNT(COUNT(*))))))))))AND(ABS(DISTINCT AVG(vt0.c2)))))OR(MIN(vt0.c2))) UNION ALL SELECT ALL v0.c0, vt0.c2, vt0.c1 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c2, vt0.c1 HAVING (NOT ((((((((((MAX(vt0.c2) IN ()))AND(((vt0.c2) NOT BETWEEN (TOTAL(COUNT(x'4bcf'))) AND ('QꇜW')))))AND((((COUNT(MAX(TOTAL(v0.c0))), v0.c0, vt0.c2))>=((TOTAL(GROUP_CONCAT(COUNT(MAX(COUNT(*))))), 0.9704362874961048, GROUP_CONCAT(MIN(COUNT(COUNT(*))))))))))AND(ABS(DISTINCT AVG(vt0.c2)))))OR(MIN(vt0.c2))))) UNION ALL SELECT ALL v0.c0, vt0.c2, vt0.c1 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c2, vt0.c1 HAVING (((((((((((MAX(vt0.c2) IN ()))AND(((vt0.c2) NOT BETWEEN (TOTAL(COUNT(x'4bcf'))) AND ('QꇜW')))))AND((((COUNT(MAX(TOTAL(v0.c0))), v0.c0, vt0.c2))>=((TOTAL(GROUP_CONCAT(COUNT(MAX(COUNT(*))))), 0.9704362874961048, GROUP_CONCAT(MIN(COUNT(COUNT(*))))))))))AND(ABS(DISTINCT AVG(vt0.c2)))))OR(MIN(vt0.c2)))) ISNULL);
SELECT v0.c0, vt0.c2, vt0.c1 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c2, vt0.c1;
SELECT v0.c0, vt0.c2, vt0.c1 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c2, vt0.c1 HAVING (((((((((MAX(vt0.c2) IN ()))AND(((vt0.c2) NOT BETWEEN (TOTAL(COUNT(x'4bcf'))) AND ('QꇜW')))))AND((((COUNT(MAX(TOTAL(v0.c0))), v0.c0, vt0.c2))>=((TOTAL(GROUP_CONCAT(COUNT(MAX(COUNT(*))))), 0.9704362874961048, GROUP_CONCAT(MIN(COUNT(COUNT(*))))))))))AND(ABS(DISTINCT AVG(vt0.c2)))))OR(MIN(vt0.c2))) UNION ALL SELECT ALL v0.c0, vt0.c2, vt0.c1 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c2, vt0.c1 HAVING (NOT ((((((((((MAX(vt0.c2) IN ()))AND(((vt0.c2) NOT BETWEEN (TOTAL(COUNT(x'4bcf'))) AND ('QꇜW')))))AND((((COUNT(MAX(TOTAL(v0.c0))), v0.c0, vt0.c2))>=((TOTAL(GROUP_CONCAT(COUNT(MAX(COUNT(*))))), 0.9704362874961048, GROUP_CONCAT(MIN(COUNT(COUNT(*))))))))))AND(ABS(DISTINCT AVG(vt0.c2)))))OR(MIN(vt0.c2))))) UNION ALL SELECT ALL v0.c0, vt0.c2, vt0.c1 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c2, vt0.c1 HAVING (((((((((((MAX(vt0.c2) IN ()))AND(((vt0.c2) NOT BETWEEN (TOTAL(COUNT(x'4bcf'))) AND ('QꇜW')))))AND((((COUNT(MAX(TOTAL(v0.c0))), v0.c0, vt0.c2))>=((TOTAL(GROUP_CONCAT(COUNT(MAX(COUNT(*))))), 0.9704362874961048, GROUP_CONCAT(MIN(COUNT(COUNT(*))))))))))AND(ABS(DISTINCT AVG(vt0.c2)))))OR(MIN(vt0.c2)))) ISNULL);
SELECT v0.c0, vt0.c2, vt0.c1 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c1, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON NULL;
SELECT ALL vt0.c1, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON NULL WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT NULL)) UNION ALL SELECT vt0.c1, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON NULL WHERE ((NOT (((CAST(vt0.c0 AS NUMERIC)) NOT NULL)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON NULL WHERE (((((CAST(vt0.c0 AS NUMERIC)) NOT NULL)) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON NULL;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ()))IS(HEX(vt1.c0)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 IN ()))IS(HEX(vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN ()))IS(HEX(vt1.c0)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c2, vt0.c1, v0.c0, vt0.c0 FROM vt0, v0 GROUP BY vt0.c2, vt0.c1, v0.c0, vt0.c0;
SELECT vt0.c2, vt0.c1, v0.c0, vt0.c0 FROM vt0 NOT INDEXED, v0 WHERE ((((((((((+ (vt0.c0)))AND((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(vt0.c2 COLLATE NOCASE)))AND(vt0.c1 COLLATE RTRIM)))AND((NOT (vt0.c2))))) GROUP BY vt0.c2, vt0.c1, v0.c0, vt0.c0 UNION SELECT vt0.c2, vt0.c1, v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT ((((((((((+ (vt0.c0)))AND((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(vt0.c2 COLLATE NOCASE)))AND(vt0.c1 COLLATE RTRIM)))AND((NOT (vt0.c2))))))) GROUP BY vt0.c2, vt0.c1, v0.c0, vt0.c0 UNION SELECT ALL vt0.c2, vt0.c1, v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((((((((((+ (vt0.c0)))AND((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(vt0.c2 COLLATE NOCASE)))AND(vt0.c1 COLLATE RTRIM)))AND((NOT (vt0.c2))))) ISNULL)) GROUP BY vt0.c2, vt0.c1, v0.c0, vt0.c0;
SELECT vt0.c2, vt0.c1, v0.c0, vt0.c0 FROM vt0, v0 GROUP BY vt0.c2, vt0.c1, v0.c0, vt0.c0;
SELECT ALL v0.c0, vt1.c0, vt0.c2 FROM vt1, vt0, v0 GROUP BY v0.c0, vt1.c0, vt0.c2;
SELECT ALL v0.c0, vt1.c0, vt0.c2 FROM vt1, vt0, v0 GROUP BY v0.c0, vt1.c0, vt0.c2 HAVING COUNT(*) UNION ALL SELECT v0.c0, vt1.c0, vt0.c2 FROM vt1, vt0, v0 GROUP BY v0.c0, vt1.c0, vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, vt1.c0, vt0.c2 FROM vt1, vt0, v0 NOT INDEXED GROUP BY v0.c0, vt1.c0, vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, vt1.c0, vt0.c2 FROM vt1, vt0, v0 GROUP BY v0.c0, vt1.c0, vt0.c2;
SELECT ALL v0.c0, vt1.c0, vt0.c2 FROM vt1, vt0, v0 GROUP BY v0.c0, vt1.c0, vt0.c2 HAVING COUNT(*) UNION ALL SELECT v0.c0, vt1.c0, vt0.c2 FROM vt1, vt0, v0 GROUP BY v0.c0, vt1.c0, vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, vt1.c0, vt0.c2 FROM vt1, vt0, v0 NOT INDEXED GROUP BY v0.c0, vt1.c0, vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, vt1.c0, vt0.c2 FROM vt1, vt0, v0 GROUP BY v0.c0, vt1.c0, vt0.c2;
SELECT SUM(((((vt0.c2)OR(((vt0.c1)<=(vt0.c2)))))AND(vt0.c0 COLLATE RTRIM))) FROM vt0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (NULL) UNION ALL SELECT * FROM vt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM vt0 WHERE (((NULL) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT DISTINCT * FROM vt0, v0, vt1 WHERE (((((v0.c0)|(vt1.c0))) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (vt0.c1 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((NOT (((((v0.c0)|(vt1.c0))) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (vt0.c1 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE (((((((v0.c0)|(vt1.c0))) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (vt0.c1 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT ALL v0.c0, vt0.c2 FROM vt1, vt0 INNER JOIN v0 ON ((((((v0.c0)|(v0.c0)))AND(vt0.c1 COLLATE BINARY)))OR((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) GROUP BY v0.c0, vt0.c2;
SELECT v0.c0, vt0.c2 FROM vt1, vt0 INNER JOIN v0 ON ((((((v0.c0)|(v0.c0)))AND(vt0.c1 COLLATE BINARY)))OR((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) WHERE (((CAST(v0.c0 AS INTEGER)) NOT NULL)) GROUP BY v0.c0, vt0.c2 UNION SELECT v0.c0, vt0.c2 FROM vt1, vt0 INNER JOIN v0 ON ((((((v0.c0)|(v0.c0)))AND(vt0.c1 COLLATE BINARY)))OR((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) WHERE ((NOT (((CAST(v0.c0 AS INTEGER)) NOT NULL)))) GROUP BY v0.c0, vt0.c2 UNION SELECT ALL v0.c0, vt0.c2 FROM vt1, vt0 INNER JOIN v0 ON ((((((v0.c0)|(v0.c0)))AND(vt0.c1 COLLATE BINARY)))OR((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) WHERE (((((CAST(v0.c0 AS INTEGER)) NOT NULL)) ISNULL)) GROUP BY v0.c0, vt0.c2;
SELECT ALL v0.c0, vt0.c2 FROM vt1, vt0 INNER JOIN v0 ON ((((((v0.c0)|(v0.c0)))AND(vt0.c1 COLLATE BINARY)))OR((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) GROUP BY v0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c1 IN ()))-(vt0.c2 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT ((((vt0.c1 IN ()))-(vt0.c2 COLLATE NOCASE))))) UNION ALL SELECT * FROM v0, vt0 WHERE ((((((vt0.c1 IN ()))-(vt0.c2 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (HEX(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '1882420074' ELSE v0.c0 END)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (HEX(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '1882420074' ELSE v0.c0 END)))) UNION SELECT DISTINCT * FROM v0 WHERE (((HEX(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '1882420074' ELSE v0.c0 END)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((((((((x'' IN ()))OR(TRIM(DISTINCT vt1.c0, vt1.c0))))OR(CAST(x'' AS NUMERIC))))OR(TRIM(0.4629410816275704))))AND(vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((((((x'' IN ()))OR(TRIM(DISTINCT vt1.c0, vt1.c0))))OR(CAST(x'' AS NUMERIC))))OR(TRIM(0.4629410816275704))))AND(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((((((x'' IN ()))OR(TRIM(DISTINCT vt1.c0, vt1.c0))))OR(CAST(x'' AS NUMERIC))))OR(TRIM(0.4629410816275704))))AND(vt1.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((AVG(GROUP_CONCAT(MIN(COUNT(*))))) IS TRUE))GLOB(COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((AVG(GROUP_CONCAT(MIN(COUNT(*))))) IS TRUE))GLOB(COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((AVG(GROUP_CONCAT(MIN(COUNT(*))))) IS TRUE))GLOB(COUNT(*)))) ISNULL);
SELECT vt0.c2 FROM vt0;
SELECT ALL vt0.c2 FROM vt0 WHERE ((((- (vt0.c1))) NOT BETWEEN (vt0.c2) AND (vt0.c0))) UNION ALL SELECT ALL vt0.c2 FROM vt0 WHERE ((NOT ((((- (vt0.c1))) NOT BETWEEN (vt0.c2) AND (vt0.c0))))) UNION ALL SELECT vt0.c2 FROM vt0 WHERE ((((((- (vt0.c1))) NOT BETWEEN (vt0.c2) AND (vt0.c0))) ISNULL));
SELECT vt0.c2 FROM vt0;
SELECT DISTINCT * FROM vt1, vt0 INNER JOIN v0 ON v0.c0;
SELECT DISTINCT * FROM vt1, vt0 INNER JOIN v0 ON v0.c0 WHERE (json_array_length(((((vt1.c0)OR(vt0.c1)))AND(v0.c0)))) UNION SELECT DISTINCT * FROM vt1, vt0 INNER JOIN v0 ON v0.c0 WHERE ((NOT (json_array_length(((((vt1.c0)OR(vt0.c1)))AND(v0.c0)))))) UNION SELECT DISTINCT * FROM vt1, vt0 INNER JOIN v0 ON v0.c0 WHERE (((json_array_length(((((vt1.c0)OR(vt0.c1)))AND(v0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0 INNER JOIN v0 ON v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((- (((v0.c0) NOT NULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((- (((v0.c0) NOT NULL)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((- (((v0.c0) NOT NULL)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING (CAST('176215224' AS REAL) IN ()) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING (NOT ((CAST('176215224' AS REAL) IN ()))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING (((CAST('176215224' AS REAL) IN ())) ISNULL);
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING (CAST('176215224' AS REAL) IN ()) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING (NOT ((CAST('176215224' AS REAL) IN ()))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING (((CAST('176215224' AS REAL) IN ())) ISNULL);
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT ALL * FROM vt1, vt0, v0;
SELECT * FROM vt1, vt0, v0 WHERE (((((vt0.c0)*(vt1.c0))) NOT BETWEEN (LTRIM(vt0.c2, vt1.c0)) AND (CASE WHEN x'' THEN v0.c0 ELSE vt0.c1 END))) UNION ALL SELECT * FROM vt1, vt0, v0 WHERE ((NOT (((((vt0.c0)*(vt1.c0))) NOT BETWEEN (LTRIM(vt0.c2, vt1.c0)) AND (CASE WHEN x'' THEN v0.c0 ELSE vt0.c1 END))))) UNION ALL SELECT ALL * FROM vt1, vt0, v0 WHERE (((((((vt0.c0)*(vt1.c0))) NOT BETWEEN (LTRIM(vt0.c2, vt1.c0)) AND (CASE WHEN x'' THEN v0.c0 ELSE vt0.c1 END))) ISNULL));
SELECT ALL * FROM vt1, vt0, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((~ ((vt0.c2 IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((~ ((vt0.c2 IN ())))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((~ ((vt0.c2 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, vt1 FULL OUTER JOIN v0 ON ((((vt1.c0)OR(vt1.c0)))|(((v0.c0)>=(vt0.c1)))) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, vt1 FULL OUTER JOIN v0 ON ((((vt1.c0)OR(vt1.c0)))|(((v0.c0)>=(vt0.c1)))) WHERE (CAST((vt1.c0 IN ()) AS REAL)) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, vt1 FULL OUTER JOIN v0 ON ((((vt1.c0)OR(vt1.c0)))|(((v0.c0)>=(vt0.c1)))) WHERE ((NOT (CAST((vt1.c0 IN ()) AS REAL)))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, vt1 FULL OUTER JOIN v0 ON ((((vt1.c0)OR(vt1.c0)))|(((v0.c0)>=(vt0.c1)))) WHERE (((CAST((vt1.c0 IN ()) AS REAL)) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, vt1 FULL OUTER JOIN v0 ON ((((vt1.c0)OR(vt1.c0)))|(((v0.c0)>=(vt0.c1)))) GROUP BY v0.c0, vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(((AVG(COUNT(MIN(vt1.c0))))|(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(((AVG(COUNT(MIN(vt1.c0))))|(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(((AVG(COUNT(MIN(vt1.c0))))|(vt1.c0)))) ISNULL);
SELECT * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (rtreenode(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)), ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT (rtreenode(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)), ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((rtreenode(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)), ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(CAST(vt1.c0 AS REAL) AS REAL)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(CAST(vt1.c0 AS REAL) AS REAL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(CAST(vt1.c0 AS REAL) AS REAL)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0 WHERE ((((+ (v0.c0)))||(CAST(v0.c0 AS BLOB)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt1, v0 WHERE ((NOT ((((+ (v0.c0)))||(CAST(v0.c0 AS BLOB)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1, v0 WHERE ((((((+ (v0.c0)))||(CAST(v0.c0 AS BLOB)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL vt0.c1, vt0.c2 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c2 HAVING SUM(MAX(MAX(MAX(vt0.c2)))) UNION ALL SELECT vt0.c1, vt0.c2 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c2 HAVING (NOT (SUM(MAX(MAX(MAX(vt0.c2)))))) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c2 HAVING ((SUM(MAX(MAX(MAX(vt0.c2))))) ISNULL);
SELECT vt0.c2 FROM vt0;
SELECT vt0.c2 FROM vt0 WHERE (((((((vt0.c1)OR('87652716')))AND(vt0.c1))) BETWEEN (((x'0f5d')<=(vt0.c0))) AND (CAST(vt0.c0 AS TEXT)))) UNION ALL SELECT ALL vt0.c2 FROM vt0 WHERE ((NOT (((((((vt0.c1)OR('87652716')))AND(vt0.c1))) BETWEEN (((x'0f5d')<=(vt0.c0))) AND (CAST(vt0.c0 AS TEXT)))))) UNION ALL SELECT vt0.c2 FROM vt0 WHERE (((((((((vt0.c1)OR('87652716')))AND(vt0.c1))) BETWEEN (((x'0f5d')<=(vt0.c0))) AND (CAST(vt0.c0 AS TEXT)))) ISNULL));
SELECT vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c0, v0.c0, vt0.c1, vt0.c2 FROM v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0, vt0.c1, vt0.c2 FROM v0, vt0 WHERE ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END IN ())) UNION SELECT DISTINCT vt0.c0, v0.c0, vt0.c1, vt0.c2 FROM v0, vt0 WHERE ((NOT ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END IN ())))) UNION SELECT DISTINCT vt0.c0, v0.c0, vt0.c1, vt0.c2 FROM v0, vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END IN ())) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0, vt0.c1, vt0.c2 FROM v0, vt0;
SELECT vt0.c0, vt0.c1 FROM v0 CROSS JOIN vt1 ON (((x'd7654d71' IN (vt0.c2))) NOTNULL) INNER JOIN vt0 ON LIKE(((vt1.c0) ISNULL), vt0.c2, 'k') GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM v0 CROSS JOIN vt1 ON (((x'd7654d71' IN (vt0.c2))) NOTNULL) INNER JOIN vt0 ON LIKE(((vt1.c0) ISNULL), vt0.c2, 'k') WHERE ((((- (vt0.c1)))AND(((vt0.c2)>>(vt0.c0))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM v0 CROSS JOIN vt1 ON (((x'd7654d71' IN (vt0.c2))) NOTNULL) INNER JOIN vt0 ON LIKE(((vt1.c0) ISNULL), vt0.c2, 'k') WHERE ((NOT ((((- (vt0.c1)))AND(((vt0.c2)>>(vt0.c0))))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM v0 CROSS JOIN vt1 ON (((x'd7654d71' IN (vt0.c2))) NOTNULL) INNER JOIN vt0 ON LIKE(((vt1.c0) ISNULL), vt0.c2, 'k') WHERE ((((((- (vt0.c1)))AND(((vt0.c2)>>(vt0.c0))))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM v0 CROSS JOIN vt1 ON (((x'd7654d71' IN (vt0.c2))) NOTNULL) INNER JOIN vt0 ON LIKE(((vt1.c0) ISNULL), vt0.c2, 'k') GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE WHEN AVG(0Xffffffffcd2c7558) THEN CASE WHEN 0Xffffffffbb2e5e36 THEN vt1.c0 WHEN vt1.c0 THEN GROUP_CONCAT(vt1.c0) WHEN SUM(vt1.c0) THEN SUM(vt1.c0) ELSE vt1.c0 END ELSE COUNT(SUM(vt1.c0)) END UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE WHEN AVG(0xffffffffcd2c7558) THEN CASE WHEN 0Xffffffffbb2e5e36 THEN vt1.c0 WHEN vt1.c0 THEN GROUP_CONCAT(vt1.c0) WHEN SUM(vt1.c0) THEN SUM(vt1.c0) ELSE vt1.c0 END ELSE COUNT(SUM(vt1.c0)) END)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE WHEN AVG(0xffffffffcd2c7558) THEN CASE WHEN 0xffffffffbb2e5e36 THEN vt1.c0 WHEN vt1.c0 THEN GROUP_CONCAT(vt1.c0) WHEN SUM(vt1.c0) THEN SUM(vt1.c0) ELSE vt1.c0 END ELSE COUNT(SUM(vt1.c0)) END) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (CASE WHEN CAST(NULL AS REAL) THEN (((vt1.c0, vt0.c0, vt0.c2))>=((vt0.c0, vt0.c1, vt0.c0))) WHEN (vt0.c1 IN (vt0.c2)) THEN vt1.c0 COLLATE BINARY WHEN (+ (-2.2258217E7)) THEN (((vt0.c2))>((x''))) END) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (CASE WHEN CAST(NULL AS REAL) THEN (((vt1.c0, vt0.c0, vt0.c2))>=((vt0.c0, vt0.c1, vt0.c0))) WHEN (vt0.c1 IN (vt0.c2)) THEN vt1.c0 COLLATE BINARY WHEN (+ (-2.2258217E7)) THEN (((vt0.c2))>((x''))) END))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((CASE WHEN CAST(NULL AS REAL) THEN (((vt1.c0, vt0.c0, vt0.c2))>=((vt0.c0, vt0.c1, vt0.c0))) WHEN (vt0.c1 IN (vt0.c2)) THEN vt1.c0 COLLATE BINARY WHEN (+ (-2.2258217E7)) THEN (((vt0.c2))>((x''))) END) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt0.c0)>(vt0.c2))))>=(((NULL IN ()))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((((((vt0.c0)>(vt0.c2))))>=(((NULL IN ()))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((((vt0.c0)>(vt0.c2))))>=(((NULL IN ()))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt0.c2 FROM vt0, vt1 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c0) NOTNULL) THEN (vt0.c2 IN (vt0.c0)) WHEN ((vt0.c0)AND(vt0.c2)) THEN ((NULL) BETWEEN (vt0.c2) AND (vt1.c0)) WHEN (((vt0.c1))==((vt0.c0))) THEN CAST(vt1.c0 AS TEXT) ELSE ((((((((vt0.c0)OR(vt0.c1)))OR(x'79c7')))AND(vt0.c2)))OR(vt1.c0)) END) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0, vt1 WHERE ((NOT (CASE WHEN ((vt1.c0) NOTNULL) THEN (vt0.c2 IN (vt0.c0)) WHEN ((vt0.c0)AND(vt0.c2)) THEN ((NULL) BETWEEN (vt0.c2) AND (vt1.c0)) WHEN (((vt0.c1))=((vt0.c0))) THEN CAST(vt1.c0 AS TEXT) ELSE ((((((((vt0.c0)OR(vt0.c1)))OR(x'79c7')))AND(vt0.c2)))OR(vt1.c0)) END))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0, vt1 WHERE (((CASE WHEN ((vt1.c0) NOTNULL) THEN (vt0.c2 IN (vt0.c0)) WHEN ((vt0.c0)AND(vt0.c2)) THEN ((NULL) BETWEEN (vt0.c2) AND (vt1.c0)) WHEN (((vt0.c1))==((vt0.c0))) THEN CAST(vt1.c0 AS TEXT) ELSE ((((((((vt0.c0)OR(vt0.c1)))OR(x'79c7')))AND(vt0.c2)))OR(vt1.c0)) END) ISNULL)) GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0, vt1 GROUP BY vt0.c2;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (((- (vt0.c0)))<>(MAX(vt0.c1))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT ((((- (vt0.c0)))!=(MAX(vt0.c1))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (((((- (vt0.c0)))!=(MAX(vt0.c1)))) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (((- (vt0.c0)))<>(MAX(vt0.c1))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT ((((- (vt0.c0)))!=(MAX(vt0.c1))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (((((- (vt0.c0)))!=(MAX(vt0.c1)))) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((+ (UPPER(DISTINCT vt0.c1)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((+ (UPPER(DISTINCT vt0.c1)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((+ (UPPER(DISTINCT vt0.c1)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0 FROM v0, vt0, vt1;
SELECT DISTINCT vt1.c0 FROM v0, vt0, vt1 WHERE ((vt1.c0 IN ())) UNION SELECT DISTINCT vt1.c0 FROM v0, vt0, vt1 WHERE ((NOT ((vt1.c0 IN ())))) UNION SELECT DISTINCT vt1.c0 FROM v0, vt0, vt1 WHERE ((((vt1.c0 IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM v0, vt0, vt1;
SELECT ALL vt0.c2, vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0 FULL OUTER JOIN v0 ON ((((((((((((((vt1.c0)&(vt0.c2)))OR(((vt0.c1) ISNULL))))OR((vt0.c1 IN ('h#')))))AND(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END)))AND(vt0.c0)))AND(((vt0.c1)>>(NULL)))))OR((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0))))) GROUP BY vt0.c2, vt0.c0, vt1.c0, v0.c0;
SELECT vt0.c2, vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0 FULL OUTER JOIN v0 ON ((((((((((((((vt1.c0)&(vt0.c2)))OR(((vt0.c1) ISNULL))))OR((vt0.c1 IN ('h#')))))AND(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END)))AND(vt0.c0)))AND(((vt0.c1)>>(NULL)))))OR((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0))))) WHERE ((CASE WHEN vt0.c0 THEN vt0.c1 END IN ())) GROUP BY vt0.c2, vt0.c0, vt1.c0, v0.c0 UNION SELECT ALL vt0.c2, vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0 FULL OUTER JOIN v0 ON ((((((((((((((vt1.c0)&(vt0.c2)))OR(((vt0.c1) ISNULL))))OR((vt0.c1 IN ('h#')))))AND(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END)))AND(vt0.c0)))AND(((vt0.c1)>>(NULL)))))OR((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0))))) WHERE ((NOT ((CASE WHEN vt0.c0 THEN vt0.c1 END IN ())))) GROUP BY vt0.c2, vt0.c0, vt1.c0, v0.c0 UNION SELECT ALL vt0.c2, vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0 FULL OUTER JOIN v0 ON ((((((((((((((vt1.c0)&(vt0.c2)))OR(((vt0.c1) ISNULL))))OR((vt0.c1 IN ('h#')))))AND(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END)))AND(vt0.c0)))AND(((vt0.c1)>>(NULL)))))OR((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0))))) WHERE ((((CASE WHEN vt0.c0 THEN vt0.c1 END IN ())) ISNULL)) GROUP BY vt0.c2, vt0.c0, vt1.c0, v0.c0;
SELECT ALL vt0.c2, vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0 FULL OUTER JOIN v0 ON ((((((((((((((vt1.c0)&(vt0.c2)))OR(((vt0.c1) ISNULL))))OR((vt0.c1 IN ('h#')))))AND(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END)))AND(vt0.c0)))AND(((vt0.c1)>>(NULL)))))OR((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0))))) GROUP BY vt0.c2, vt0.c0, vt1.c0, v0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c0 HAVING ((((x'') IS FALSE))||(COUNT(TOTAL(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c0 HAVING (NOT (((((x'') IS FALSE))||(COUNT(TOTAL(GROUP_CONCAT(vt0.c0))))))) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c2, vt0.c0 HAVING ((((((x'') IS FALSE))||(COUNT(TOTAL(GROUP_CONCAT(vt0.c0)))))) ISNULL);
SELECT v0.c0, vt0.c2, vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON NULL FULL OUTER JOIN v0 ON CASE WHEN vt0.c1 THEN v0.c0 END COLLATE NOCASE;
SELECT ALL v0.c0, vt0.c2, vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON NULL FULL OUTER JOIN v0 ON CASE WHEN vt0.c1 THEN v0.c0 END COLLATE NOCASE WHERE (CASE ((NULL)+(vt0.c2))  WHEN ((vt0.c1)IS(vt1.c0)) THEN DATE(vt0.c0, v0.c0, vt0.c1) WHEN NULL THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c2) BETWEEN (vt0.c1) AND (v0.c0)) END) UNION ALL SELECT v0.c0, vt0.c2, vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON NULL FULL OUTER JOIN v0 ON CASE WHEN vt0.c1 THEN v0.c0 END COLLATE NOCASE WHERE ((NOT (CASE ((NULL)+(vt0.c2))  WHEN ((vt0.c1)IS(vt1.c0)) THEN DATE(vt0.c0, v0.c0, vt0.c1) WHEN NULL THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c2) BETWEEN (vt0.c1) AND (v0.c0)) END))) UNION ALL SELECT ALL v0.c0, vt0.c2, vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON NULL FULL OUTER JOIN v0 ON CASE WHEN vt0.c1 THEN v0.c0 END COLLATE NOCASE WHERE (((CASE ((NULL)+(vt0.c2))  WHEN ((vt0.c1)IS(vt1.c0)) THEN DATE(vt0.c0, v0.c0, vt0.c1) WHEN NULL THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c2) BETWEEN (vt0.c1) AND (v0.c0)) END) ISNULL));
SELECT v0.c0, vt0.c2, vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON NULL FULL OUTER JOIN v0 ON CASE WHEN vt0.c1 THEN v0.c0 END COLLATE NOCASE;
SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON CASE ((vt0.c2)||(vt0.c1))  WHEN v0.c0 COLLATE RTRIM THEN CAST(vt0.c2 AS TEXT) WHEN (((v0.c0)) BETWEEN ((vt0.c1)) AND ((-7.48660498E8))) THEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) WHEN (v0.c0 IN ()) THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN x'' THEN vt0.c0 ELSE v0.c0 END END;
SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON CASE ((vt0.c2)||(vt0.c1))  WHEN v0.c0 COLLATE RTRIM THEN CAST(vt0.c2 AS TEXT) WHEN (((v0.c0)) BETWEEN ((vt0.c1)) AND ((-7.48660498E8))) THEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) WHEN (v0.c0 IN ()) THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN x'' THEN vt0.c0 ELSE v0.c0 END END WHERE ((((- (v0.c0)))<<(((vt0.c1)>=(vt0.c1))))) UNION SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON CASE ((vt0.c2)||(vt0.c1))  WHEN v0.c0 COLLATE RTRIM THEN CAST(vt0.c2 AS TEXT) WHEN (((v0.c0)) BETWEEN ((vt0.c1)) AND ((-7.48660498E8))) THEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) WHEN (v0.c0 IN ()) THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN x'' THEN vt0.c0 ELSE v0.c0 END END WHERE ((NOT ((((- (v0.c0)))<<(((vt0.c1)>=(vt0.c1))))))) UNION SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON CASE ((vt0.c2)||(vt0.c1))  WHEN v0.c0 COLLATE RTRIM THEN CAST(vt0.c2 AS TEXT) WHEN (((v0.c0)) BETWEEN ((vt0.c1)) AND ((-7.48660498E8))) THEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) WHEN (v0.c0 IN ()) THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN x'' THEN vt0.c0 ELSE v0.c0 END END WHERE ((((((- (v0.c0)))<<(((vt0.c1)>=(vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM v0 INNER JOIN vt0 ON CASE ((vt0.c2)||(vt0.c1))  WHEN v0.c0 COLLATE RTRIM THEN CAST(vt0.c2 AS TEXT) WHEN (((v0.c0)) BETWEEN ((vt0.c1)) AND ((-7.48660498E8))) THEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) WHEN (v0.c0 IN ()) THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN x'' THEN vt0.c0 ELSE v0.c0 END END;
SELECT vt0.c0, vt0.c2 FROM v0, vt0 GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM v0 NOT INDEXED, vt0 WHERE ('R6') GROUP BY vt0.c0, vt0.c2 UNION SELECT vt0.c0, vt0.c2 FROM v0, vt0 WHERE ((NOT ('R6'))) GROUP BY vt0.c0, vt0.c2 UNION SELECT vt0.c0, vt0.c2 FROM v0, vt0 WHERE ((('R6') ISNULL)) GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM v0, vt0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM v0 NOT INDEXED, vt1 GROUP BY vt1.c0, v0.c0 HAVING COUNT(SUM(v0.c0)) UNION ALL SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING (NOT (COUNT(SUM(v0.c0)))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING ((COUNT(SUM(v0.c0))) ISNULL);
SELECT vt0.c0, v0.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt1, v0, vt0;
SELECT vt0.c0, v0.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt1, v0, vt0 WHERE (CAST('F' AS TEXT)) UNION ALL SELECT vt0.c0, v0.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt1, v0, vt0 WHERE ((NOT (CAST('F' AS TEXT)))) UNION ALL SELECT vt0.c0, v0.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt1, v0, vt0 WHERE (((CAST('F' AS TEXT)) ISNULL));
SELECT vt0.c0, v0.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt1, v0, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE ((vt1.c0)>(vt1.c0))  WHEN vt1.c0 COLLATE NOCASE THEN vt1.c0 ELSE ((vt1.c0)==(vt1.c0)) END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE ((vt1.c0)>(vt1.c0))  WHEN vt1.c0 COLLATE NOCASE THEN vt1.c0 ELSE ((vt1.c0)==(vt1.c0)) END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE ((vt1.c0)>(vt1.c0))  WHEN vt1.c0 COLLATE NOCASE THEN vt1.c0 ELSE ((vt1.c0)=(vt1.c0)) END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM vt0, v0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM vt0, v0 NATURAL JOIN vt1 WHERE ((((((((((((((('-587789262')AND(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c2))) IS FALSE)) GROUP BY vt1.c0, vt0.c0, v0.c0 UNION SELECT vt1.c0, vt0.c0, v0.c0 FROM vt0, v0 NATURAL JOIN vt1 WHERE ((NOT ((((((((((((((('-587789262')AND(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c2))) IS FALSE)))) GROUP BY vt1.c0, vt0.c0, v0.c0 UNION SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM vt0, v0 NATURAL JOIN vt1 WHERE ((((((((((((((((('-587789262')AND(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c2))) IS FALSE)) ISNULL)) GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM vt0, v0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c0, v0.c0;
