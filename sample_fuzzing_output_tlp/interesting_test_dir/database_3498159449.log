-- Time: 2024/06/09 20:55:07
-- Database: database49
-- Database version: 3.40.0
-- seed value: 3498159449
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1); -- 1ms;
INSERT OR ROLLBACK INTO vt0(c1) VALUES (x''); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=2118602751,14');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 0); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '43215'); -- 0ms;
UPDATE OR REPLACE vt0 SET (c0)=('2118602751'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE vt0 SET c1='' WHERE 0.9115432957145214; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c1)=(0x42234a08, NULL) WHERE (+ (LIKELY(vt0.c0))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1635905538);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1596102719,5');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-9304065,12');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE vt0; -- 1ms;
INSERT OR FAIL INTO vt0(c0) VALUES (0.981965621823528); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE vt0 SET c1=-1195664811 WHERE CAST((vt0.c0 IN ()) AS INTEGER); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('-9304065'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.981965621823528); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
ANALYZE; -- 2ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '24879'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=''; -- 1ms;
INSERT OR REPLACE INTO vt0(c1) VALUES (x''); -- 0ms;
PRAGMA main.foreign_keys; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL WHERE CASE (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))  WHEN (~ (vt0.c1)) THEN ((vt0.c1)<(vt0.c1)) END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR REPLACE INTO vt0(c1) VALUES (x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 0ms;
REINDEX BINARY; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.9115432957145214, c0=x'', c0=NULL WHERE ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((((vt0.c1)AND(vt0.c1)))OR(vt0.c1))) AND ((+ (vt0.c1)))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=10'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 11); -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR REPLACE vt0 SET (c1)=(0X6181f002) WHERE ((vt0.c1)>>(((vt0.c0) NOTNULL))); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED, prefix = 789); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 238202478); -- 0ms;
END TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(1.109608968E9 AS NUMERIC))-(x'62bd')); -- 0ms;
UPDATE OR ABORT vt1 SET c0=-1238815528 WHERE (((vt1.c0))>((vt1.c0))) COLLATE BINARY; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(x'') WHERE 0X15fc1061; -- 0ms;
UPDATE OR FAIL vt1 SET c0=-1.238815528E9, c0=NULL WHERE CASE (('')IS NOT(vt1.c0))  WHEN vt1.c0 THEN CASE WHEN vt1.c0 THEN vt1.c0 END END; -- 0ms;
UPDATE OR FAIL vt1 SET c0=NULL; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0.4443711221589002), ('368840801'), (''); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 6); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1558579360); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0.9944547585042726, c0=0.9944547585042726 WHERE (vt1.c0 IN ()); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('1182201428'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (0.009006043826275567, x'2ccae722'), (0Xffffffffb8bb9a55, 1182201428), ('', '0.9944547585042726'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 514612913); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES ('*1D>'); -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (x''); -- 1ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT CAST(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)) AS BLOB) FROM vt1, vt0; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '44887'); -- 0ms;
ANALYZE; -- 1ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(vt0.c0 COLLATE RTRIM)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (SQLITE_COMPILEOPTION_USED(vt0.c0 COLLATE RTRIM)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((SQLITE_COMPILEOPTION_USED(vt0.c0 COLLATE RTRIM)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt1, v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0 IN ()) IN ());
SELECT DISTINCT * FROM vt1, v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0 IN ()) IN ()) WHERE (HEX(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) UNION SELECT DISTINCT * FROM vt1, v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0 IN ()) IN ()) WHERE ((NOT (HEX(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1, v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0 IN ()) IN ()) WHERE (((HEX(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1, v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0 IN ()) IN ());
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt0, v0 LEFT OUTER JOIN vt1 ON (((((- (v0.c0)))AND((v0.c0 IN ()))))OR(((vt0.c0) ISNULL))) GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt0, v0 LEFT OUTER JOIN vt1 ON (((((- (v0.c0)))AND((v0.c0 IN ()))))OR(((vt0.c0) ISNULL))) WHERE (CAST(v0.c0 AS BLOB) COLLATE RTRIM COLLATE RTRIM) GROUP BY vt1.c0, vt0.c0, vt0.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt0, v0 LEFT OUTER JOIN vt1 ON (((((- (v0.c0)))AND((v0.c0 IN ()))))OR(((vt0.c0) ISNULL))) WHERE ((NOT (CAST(v0.c0 AS BLOB) COLLATE RTRIM COLLATE RTRIM))) GROUP BY vt1.c0, vt0.c0, vt0.c1 UNION SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt0, v0 LEFT OUTER JOIN vt1 ON (((((- (v0.c0)))AND((v0.c0 IN ()))))OR(((vt0.c0) ISNULL))) WHERE (((CAST(v0.c0 AS BLOB) COLLATE RTRIM COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt0, v0 LEFT OUTER JOIN vt1 ON (((((- (v0.c0)))AND((v0.c0 IN ()))))OR(((vt0.c0) ISNULL))) GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING '1182201428' UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ('1182201428')) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (('1182201428') ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING '1182201428' UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ('1182201428')) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (('1182201428') ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (GLOB(x'7c1d', ((vt1.c0)OR(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (GLOB(x'7c1d', ((vt1.c0)OR(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((GLOB(x'7c1d', ((vt1.c0)OR(vt1.c0)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CASE ((vt0.c0)>=(vt0.c0))  WHEN (((vt0.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))) THEN (vt0.c1 IN ()) END) UNION SELECT DISTINCT * FROM vt1 NOT INDEXED, vt0 WHERE ((NOT (CASE ((vt0.c0)>=(vt0.c0))  WHEN (((vt0.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))) THEN (vt0.c1 IN ()) END))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((CASE ((vt0.c0)>=(vt0.c0))  WHEN (((vt0.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))) THEN (vt0.c1 IN ()) END) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((('')LIKE(v0.c0))) BETWEEN (((v0.c0)-(v0.c0))) AND (json_array_length(v0.c0, v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((('')LIKE(v0.c0))) BETWEEN (((v0.c0)-(v0.c0))) AND (json_array_length(v0.c0, v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((('')LIKE(v0.c0))) BETWEEN (((v0.c0)-(v0.c0))) AND (json_array_length(v0.c0, v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT vt0.c1, v0.c0, vt0.c0, vt1.c0 FROM v0 LEFT OUTER JOIN vt0 ON (- (vt0.c0)) LEFT OUTER JOIN vt1 ON ((((((v0.c0)OR(vt0.c1)))OR(vt0.c1)))||(((NULL) NOT BETWEEN (v0.c0) AND (x'')))) GROUP BY vt0.c1, v0.c0, vt0.c0, vt1.c0;
SELECT ALL vt0.c1, v0.c0, vt0.c0, vt1.c0 FROM v0 LEFT OUTER JOIN vt0 ON (- (vt0.c0)) LEFT OUTER JOIN vt1 ON ((((((v0.c0)OR(vt0.c1)))OR(vt0.c1)))||(((NULL) NOT BETWEEN (v0.c0) AND (x'')))) GROUP BY vt0.c1, v0.c0, vt0.c0, vt1.c0 HAVING (((v0.c0)) BETWEEN ((SUM(MIN(NULL)) COLLATE NOCASE)) AND (((GROUP_CONCAT(TOTAL(AVG(vt0.c1))) IN (MAX(vt0.c1)))))) UNION ALL SELECT ALL vt0.c1, v0.c0, vt0.c0, vt1.c0 FROM v0 LEFT OUTER JOIN vt0 ON (- (vt0.c0)) LEFT OUTER JOIN vt1 ON ((((((v0.c0)OR(vt0.c1)))OR(vt0.c1)))||(((NULL) NOT BETWEEN (v0.c0) AND (x'')))) GROUP BY vt0.c1, v0.c0, vt0.c0, vt1.c0 HAVING (NOT ((((v0.c0)) BETWEEN ((SUM(MIN(NULL)) COLLATE NOCASE)) AND (((GROUP_CONCAT(TOTAL(AVG(vt0.c1))) IN (MAX(vt0.c1)))))))) UNION ALL SELECT ALL vt0.c1, v0.c0, vt0.c0, vt1.c0 FROM v0 LEFT OUTER JOIN vt0 ON (- (vt0.c0)) LEFT OUTER JOIN vt1 ON ((((((v0.c0)OR(vt0.c1)))OR(vt0.c1)))||(((NULL) NOT BETWEEN (v0.c0) AND (x'')))) GROUP BY vt0.c1, v0.c0, vt0.c0, vt1.c0 HAVING (((((v0.c0)) BETWEEN ((SUM(MIN(NULL)) COLLATE NOCASE)) AND (((GROUP_CONCAT(TOTAL(AVG(vt0.c1))) IN (MAX(vt0.c1))))))) ISNULL);
SELECT v0.c0, vt1.c0 FROM vt1, v0;
SELECT v0.c0, vt1.c0 FROM vt1, v0 WHERE (((((vt1.c0)<=(v0.c0))) BETWEEN (LIKELIHOOD(vt1.c0, 0.39859364425815413)) AND (((((vt1.c0)OR(v0.c0)))AND(v0.c0))))) UNION ALL SELECT v0.c0, vt1.c0 FROM vt1, v0 WHERE ((NOT (((((vt1.c0)<=(v0.c0))) BETWEEN (LIKELIHOOD(vt1.c0, 0.39859364425815413)) AND (((((vt1.c0)OR(v0.c0)))AND(v0.c0))))))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 WHERE (((((((vt1.c0)<=(v0.c0))) BETWEEN (LIKELIHOOD(vt1.c0, 0.39859364425815413)) AND (((((vt1.c0)OR(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT v0.c0, vt1.c0 FROM vt1, v0;
SELECT DISTINCT vt1.c0 FROM v0, vt1;
SELECT DISTINCT vt1.c0 FROM v0, vt1 WHERE (NULL) UNION SELECT DISTINCT vt1.c0 FROM v0, vt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt1.c0 FROM v0, vt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt1.c0 FROM v0, vt1;
SELECT vt0.c1, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c0 IN ('菞Y	wP')))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c0 IN ('菞Y	wP')))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE (CASE WHEN vt0.c1 COLLATE RTRIM THEN CAST(vt0.c1 AS TEXT) WHEN x'' THEN ((vt0.c1)<(vt0.c1)) WHEN vt1.c0 THEN (vt0.c0 IN ()) ELSE -1.7976931348623157E308 END) GROUP BY vt0.c1, vt1.c0 UNION SELECT vt0.c1, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c0 IN ('菞Y	wP')))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE ((NOT (CASE WHEN vt0.c1 COLLATE RTRIM THEN CAST(vt0.c1 AS TEXT) WHEN x'' THEN ((vt0.c1)<(vt0.c1)) WHEN vt1.c0 THEN (vt0.c0 IN ()) ELSE -1.7976931348623157E308 END))) GROUP BY vt0.c1, vt1.c0 UNION SELECT vt0.c1, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c0 IN ('菞Y	wP')))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE (((CASE WHEN vt0.c1 COLLATE RTRIM THEN CAST(vt0.c1 AS TEXT) WHEN x'' THEN ((vt0.c1)<(vt0.c1)) WHEN vt1.c0 THEN (vt0.c0 IN ()) ELSE -1.7976931348623157E308 END) ISNULL)) GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c0 IN ('菞Y	wP')))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) GROUP BY vt0.c1, vt1.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(((v0.c0) NOTNULL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(((v0.c0) NOTNULL)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(((v0.c0) NOTNULL))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(((v0.c0) NOTNULL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(((v0.c0) NOTNULL)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(((v0.c0) NOTNULL))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt1.c0 FROM v0, vt1;
SELECT ALL vt1.c0 FROM v0, vt1 NOT INDEXED WHERE ((- ((((vt1.c0)) NOT BETWEEN (('121236803')) AND ((vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 WHERE ((NOT ((- ((((vt1.c0)) NOT BETWEEN (('121236803')) AND ((vt1.c0)))))))) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 WHERE ((((- ((((vt1.c0)) NOT BETWEEN (('121236803')) AND ((vt1.c0)))))) ISNULL));
SELECT vt1.c0 FROM v0, vt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((NULL IN ())) BETWEEN ((('-136610407') ISNULL)) AND (TOTAL_CHANGES()))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((NULL IN ())) BETWEEN ((('-136610407') ISNULL)) AND (TOTAL_CHANGES()))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((NULL IN ())) BETWEEN ((('-136610407') ISNULL)) AND (TOTAL_CHANGES()))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c1, v0.c0 FROM vt0 INNER JOIN v0 ON (NOT (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) GROUP BY vt0.c1, v0.c0;
SELECT vt0.c1, v0.c0 FROM vt0 INNER JOIN v0 ON (NOT (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE (((((vt0.c0)AND((((vt0.c0, v0.c0, vt0.c1))<=((vt0.c0, vt0.c1, vt0.c0))))))AND('\r''URx9D]'))) GROUP BY vt0.c1, v0.c0 UNION SELECT ALL vt0.c1, v0.c0 FROM vt0 INNER JOIN v0 ON (NOT (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE ((NOT (((((vt0.c0)AND((((vt0.c0, v0.c0, vt0.c1))<=((vt0.c0, vt0.c1, vt0.c0))))))AND('\r''URx9D]'))))) GROUP BY vt0.c1, v0.c0 UNION SELECT ALL vt0.c1, v0.c0 FROM vt0 INNER JOIN v0 ON (NOT (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE (((((((vt0.c0)AND((((vt0.c0, v0.c0, vt0.c1))<=((vt0.c0, vt0.c1, vt0.c0))))))AND('\r''URx9D]'))) ISNULL)) GROUP BY vt0.c1, v0.c0;
SELECT vt0.c1, v0.c0 FROM vt0 INNER JOIN v0 ON (NOT (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) GROUP BY vt0.c1, v0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0) BETWEEN (vt1.c0) AND (SUM(vt1.c0)))) BETWEEN (MAX(vt1.c0)) AND (COUNT(MAX(COUNT(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (SUM(vt1.c0)))) BETWEEN (MAX(vt1.c0)) AND (COUNT(MAX(COUNT(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c0) BETWEEN (vt1.c0) AND (SUM(vt1.c0)))) BETWEEN (MAX(vt1.c0)) AND (COUNT(MAX(COUNT(vt1.c0)))))) ISNULL);
SELECT * FROM vt0, v0, vt1;
SELECT * FROM vt0, v0, vt1 WHERE ((((((vt0.c0))=((x'')))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0)IS(vt0.c1))))) UNION ALL SELECT * FROM vt0, v0, vt1 WHERE ((NOT ((((((vt0.c0))=((x'')))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0)IS(vt0.c1))))))) UNION ALL SELECT * FROM vt0, v0, vt1 WHERE ((((((((vt0.c0))=((x'')))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0)IS(vt0.c1))))) ISNULL));
SELECT * FROM vt0, v0, vt1;
SELECT DISTINCT * FROM vt0, vt1, v0;
SELECT DISTINCT * FROM vt0, vt1, v0 WHERE (1.109608968E9) UNION SELECT DISTINCT * FROM vt0, vt1, v0 WHERE ((NOT (1.109608968E9))) UNION SELECT DISTINCT * FROM vt0, vt1, v0 WHERE (((1.109608968E9) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, v0;
SELECT vt0.c1, v0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c1, v0.c0;
SELECT ALL vt0.c1, v0.c0 FROM v0, vt1, vt0 WHERE (0X42234a08) GROUP BY vt0.c1, v0.c0 UNION SELECT ALL vt0.c1, v0.c0 FROM v0, vt1, vt0 WHERE ((NOT (0X42234a08))) GROUP BY vt0.c1, v0.c0 UNION SELECT ALL vt0.c1, v0.c0 FROM v0, vt1, vt0 WHERE (((0X42234a08) ISNULL)) GROUP BY vt0.c1, v0.c0;
SELECT vt0.c1, v0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c1, v0.c0;
SELECT v0.c0, vt0.c0 FROM vt1, v0 INNER JOIN vt0 ON vt1.c0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt1, v0 INNER JOIN vt0 ON vt1.c0 GROUP BY v0.c0, vt0.c0 HAVING (((vt1.c0)) BETWEEN ((TRIM(DISTINCT '{B.', vt1.c0))) AND ((SUM(SUM(TOTAL(MAX(MAX(v0.c0)))))))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt1, v0 INNER JOIN vt0 ON vt1.c0 GROUP BY v0.c0, vt0.c0 HAVING (NOT ((((vt1.c0)) BETWEEN ((TRIM(DISTINCT '{B.', vt1.c0))) AND ((SUM(SUM(TOTAL(MAX(MAX(v0.c0)))))))))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt1, v0 INNER JOIN vt0 ON vt1.c0 GROUP BY v0.c0, vt0.c0 HAVING (((((vt1.c0)) BETWEEN ((TRIM(DISTINCT '{B.', vt1.c0))) AND ((SUM(SUM(TOTAL(MAX(MAX(v0.c0))))))))) ISNULL);
SELECT vt1.c0, vt0.c1, vt0.c0 FROM v0, vt0, vt1;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM v0, vt0, vt1 WHERE (NULL COLLATE NOCASE) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0 FROM v0, vt0, vt1 WHERE ((NOT (NULL COLLATE NOCASE))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0 FROM v0, vt0, vt1 WHERE (((NULL COLLATE NOCASE) ISNULL));
SELECT vt1.c0, vt0.c1, vt0.c0 FROM v0, vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((- (vt1.c0)) COLLATE NOCASE) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((- (vt1.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((- (vt1.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, v0, vt1 WHERE (((((((((CASE WHEN vt0.c1 THEN vt0.c1 END)AND(((('K	A}sb<%D', vt1.c0, vt1.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0, v0.c0, '-982554569'))))))AND(((vt0.c0)IS(vt0.c1)))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1))))))OR(CAST(v0.c0 AS BLOB)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, v0, vt1 WHERE ((NOT (((((((((CASE WHEN vt0.c1 THEN vt0.c1 END)AND(((('K	A}sb<%D', vt1.c0, vt1.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0, v0.c0, '-982554569'))))))AND(((vt0.c0)IS(vt0.c1)))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1))))))OR(CAST(v0.c0 AS BLOB)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, v0, vt1 WHERE (((((((((((CASE WHEN vt0.c1 THEN vt0.c1 END)AND(((('K	A}sb<%D', vt1.c0, vt1.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0, v0.c0, '-982554569'))))))AND(((vt0.c0)IS(vt0.c1)))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1))))))OR(CAST(v0.c0 AS BLOB)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, v0.c0;
SELECT vt1.c0, vt0.c1, vt0.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, v0.c0 HAVING GROUP_CONCAT(TOTAL(vt1.c0)) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(vt1.c0)))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, v0.c0 HAVING ((GROUP_CONCAT(TOTAL(vt1.c0))) ISNULL);
SELECT ALL vt1.c0 FROM vt1, v0;
SELECT ALL vt1.c0 FROM vt1, v0 WHERE ((((vt1.c0, v0.c0, vt1.c0)) BETWEEN ((((((x'')OR(v0.c0)))OR(vt1.c0)), ((vt1.c0)/(v0.c0)), ((((v0.c0)AND(vt1.c0)))OR(v0.c0)))) AND ((TRIM(v0.c0, v0.c0), ((vt1.c0) IS TRUE), vt1.c0 COLLATE RTRIM)))) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 WHERE ((NOT ((((vt1.c0, v0.c0, vt1.c0)) BETWEEN ((((((x'')OR(v0.c0)))OR(vt1.c0)), ((vt1.c0)/(v0.c0)), ((((v0.c0)AND(vt1.c0)))OR(v0.c0)))) AND ((TRIM(v0.c0, v0.c0), ((vt1.c0) IS TRUE), vt1.c0 COLLATE RTRIM)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 WHERE ((((((vt1.c0, v0.c0, vt1.c0)) BETWEEN ((((((x'')OR(v0.c0)))OR(vt1.c0)), ((vt1.c0)/(v0.c0)), ((((v0.c0)AND(vt1.c0)))OR(v0.c0)))) AND ((TRIM(v0.c0, v0.c0), ((vt1.c0) IS TRUE), vt1.c0 COLLATE RTRIM)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (LIKE(v0.c0, ((v0.c0)|(NULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (LIKE(v0.c0, ((v0.c0)|(NULL)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((LIKE(v0.c0, ((v0.c0)|(NULL)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt1.c0, vt0.c0, vt0.c1, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1, v0.c0;
SELECT vt1.c0, vt0.c0, vt0.c1, v0.c0 FROM vt1, v0, vt0 WHERE (CASE ((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))  WHEN ((vt0.c0)<<(x'80bc')) THEN vt1.c0 COLLATE RTRIM END) GROUP BY vt1.c0, vt0.c0, vt0.c1, v0.c0 UNION SELECT ALL vt1.c0, vt0.c0, vt0.c1, v0.c0 FROM vt1, v0, vt0 WHERE ((NOT (CASE ((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))  WHEN ((vt0.c0)<<(x'80bc')) THEN vt1.c0 COLLATE RTRIM END))) GROUP BY vt1.c0, vt0.c0, vt0.c1, v0.c0 UNION SELECT vt1.c0, vt0.c0, vt0.c1, v0.c0 FROM vt1, v0, vt0 WHERE (((CASE ((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))  WHEN ((vt0.c0)<<(x'80bc')) THEN vt1.c0 COLLATE RTRIM END) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt0.c1, v0.c0;
SELECT ALL vt1.c0, vt0.c0, vt0.c1, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1, v0.c0;
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING MIN(AVG(COUNT(COUNT(*)))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING (NOT (MIN(AVG(COUNT(COUNT(*)))))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING ((MIN(AVG(COUNT(COUNT(*))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0))>((vt1.c0))))<=(CAST(NULL AS REAL)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0))>((vt1.c0))))<=(CAST(NULL AS REAL)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0))>((vt1.c0))))<=(CAST(NULL AS REAL)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT v0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1 RIGHT OUTER JOIN v0 ON ((((vt0.c0)<(v0.c0))) ISNULL) CROSS JOIN vt0 ON CASE (((vt1.c0, vt0.c0, vt0.c0))<((vt1.c0, vt0.c1, vt1.c0)))  WHEN v0.c0 COLLATE RTRIM THEN NULL ELSE vt1.c0 COLLATE RTRIM END;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0)|(v0.c0)) COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0)|(v0.c0)) COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0)|(v0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON '' GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON '' GROUP BY vt0.c1, vt0.c0 HAVING SUM(AVG(x'')) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON '' GROUP BY vt0.c1, vt0.c0 HAVING (NOT (SUM(AVG(x'')))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON '' GROUP BY vt0.c1, vt0.c0 HAVING ((SUM(AVG(x''))) ISNULL);
SELECT ALL v0.c0, vt1.c0, vt0.c0 FROM vt0, v0 CROSS JOIN vt1 ON ((((((((LIKELIHOOD(vt0.c0, 0.5221019708461443))OR(vt0.c1)))OR((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))))))AND((NOT (vt0.c1)))))OR(((vt0.c1) NOT NULL)));
SELECT ALL v0.c0, vt1.c0, vt0.c0 FROM vt0, v0 CROSS JOIN vt1 ON ((((((((LIKELIHOOD(vt0.c0, 0.5221019708461443))OR(vt0.c1)))OR((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))))))AND((NOT (vt0.c1)))))OR(((vt0.c1) NOT NULL))) WHERE (((((vt1.c0 IN ())))<(('1635905538')))) UNION ALL SELECT v0.c0, vt1.c0, vt0.c0 FROM vt0, v0 CROSS JOIN vt1 ON ((((((((LIKELIHOOD(vt0.c0, 0.5221019708461443))OR(vt0.c1)))OR((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))))))AND((NOT (vt0.c1)))))OR(((vt0.c1) NOT NULL))) WHERE ((NOT (((((vt1.c0 IN ())))<(('1635905538')))))) UNION ALL SELECT v0.c0, vt1.c0, vt0.c0 FROM vt0, v0 CROSS JOIN vt1 ON ((((((((LIKELIHOOD(vt0.c0, 0.5221019708461443))OR(vt0.c1)))OR((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))))))AND((NOT (vt0.c1)))))OR(((vt0.c1) NOT NULL))) WHERE (((((((vt1.c0 IN ())))<(('1635905538')))) ISNULL));
SELECT ALL v0.c0, vt1.c0, vt0.c0 FROM vt0, v0 CROSS JOIN vt1 ON ((((((((LIKELIHOOD(vt0.c0, 0.5221019708461443))OR(vt0.c1)))OR((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))))))AND((NOT (vt0.c1)))))OR(((vt0.c1) NOT NULL)));
SELECT DISTINCT * FROM vt0, v0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM vt0, v0 NATURAL JOIN vt1 WHERE (CAST(((vt1.c0)&(vt1.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM vt0, v0 NATURAL JOIN vt1 WHERE ((NOT (CAST(((vt1.c0)&(vt1.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM vt0, v0 NATURAL JOIN vt1 WHERE (((CAST(((vt1.c0)&(vt1.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt0, v0 NATURAL JOIN vt1;
SELECT ALL v0.c0 FROM vt0, v0, vt1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0, vt1 WHERE (((('0.981965621823528')>>(vt1.c0)) IN (vt0.c0 COLLATE BINARY, ((vt0.c0)<(v0.c0)), ((vt1.c0)LIKE(vt0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0, vt1 WHERE ((NOT (((('0.981965621823528')>>(vt1.c0)) IN (vt0.c0 COLLATE BINARY, ((vt0.c0)<(v0.c0)), ((vt1.c0)LIKE(vt0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0, vt1 WHERE (((((('0.981965621823528')>>(vt1.c0)) IN (vt0.c0 COLLATE BINARY, ((vt0.c0)<(v0.c0)), ((vt1.c0)LIKE(vt0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0, vt1 GROUP BY v0.c0;
SELECT v0.c0, vt0.c1, vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c1, vt0.c0, vt1.c0;
SELECT ALL v0.c0, vt0.c1, vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c1, vt0.c0, vt1.c0 HAVING (((COUNT(*), SUM(COUNT(v0.c0)), GROUP_CONCAT(AVG(MIN(vt0.c1))))) BETWEEN ((((GROUP_CONCAT(SUM(vt0.c1))) NOT BETWEEN (COUNT(*)) AND (v0.c0)), MIN(v0.c0), MAX(vt0.c0))) AND ((TOTAL(vt0.c1), GROUP_CONCAT(NULL), TOTAL(v0.c0)))) UNION ALL SELECT v0.c0, vt0.c1, vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c1, vt0.c0, vt1.c0 HAVING (NOT ((((COUNT(*), SUM(COUNT(v0.c0)), GROUP_CONCAT(AVG(MIN(vt0.c1))))) BETWEEN ((((GROUP_CONCAT(SUM(vt0.c1))) NOT BETWEEN (COUNT(*)) AND (v0.c0)), MIN(v0.c0), MAX(vt0.c0))) AND ((TOTAL(vt0.c1), GROUP_CONCAT(NULL), TOTAL(v0.c0)))))) UNION ALL SELECT ALL v0.c0, vt0.c1, vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c1, vt0.c0, vt1.c0 HAVING (((((COUNT(*), SUM(COUNT(v0.c0)), GROUP_CONCAT(AVG(MIN(vt0.c1))))) BETWEEN ((((GROUP_CONCAT(SUM(vt0.c1))) NOT BETWEEN (COUNT(*)) AND (v0.c0)), MIN(v0.c0), MAX(vt0.c0))) AND ((TOTAL(vt0.c1), GROUP_CONCAT(NULL), TOTAL(v0.c0))))) ISNULL);
SELECT * FROM vt1, v0, vt0 NOT INDEXED;
SELECT * FROM vt1, v0, vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))) AND (UPPER(DISTINCT vt1.c0)))) UNION ALL SELECT * FROM vt1, v0, vt0 WHERE ((NOT (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))) AND (UPPER(DISTINCT vt1.c0)))))) UNION ALL SELECT ALL * FROM vt1, v0, vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))) AND (UPPER(DISTINCT vt1.c0)))) ISNULL));
SELECT * FROM vt1, v0, vt0 NOT INDEXED;
SELECT DISTINCT vt1.c0, vt0.c0, vt0.c1, v0.c0 FROM vt1 FULL OUTER JOIN vt0 ON v0.c0 CROSS JOIN v0 ON PRINTF((((vt1.c0, v0.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c1, vt1.c0)) AND ((vt0.c1, NULL, vt1.c0))));
SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 WHERE (0.5571068405209066) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 WHERE ((NOT (0.5571068405209066))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 NOT INDEXED, v0 WHERE (((0.5571068405209066) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(vt1.c0)) NOT BETWEEN (MIN(MAX(vt1.c0))) AND (((vt1.c0)-(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((TOTAL(vt1.c0)) NOT BETWEEN (MIN(MAX(vt1.c0))) AND (((vt1.c0)-(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((TOTAL(vt1.c0)) NOT BETWEEN (MIN(MAX(vt1.c0))) AND (((vt1.c0)-(vt1.c0))))) ISNULL);
SELECT TOTAL(CAST(0.6817277335366377 AS BLOB)) FROM vt0, vt1, v0 ORDER BY ((CAST(vt1.c0 AS TEXT))LIKE(CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 ELSE v0.c0 END));
SELECT vt0.c0, vt0.c1 FROM vt1 RIGHT OUTER JOIN v0 ON ((((((((vt0.c0)AND(-3.05822754E8)))AND((vt0.c0 IN ()))))AND(((vt0.c1)&(vt0.c1)))))OR(((((v0.c0)AND(vt1.c0)))AND(vt0.c1)))) LEFT OUTER JOIN vt0 ON (((vt0.c1) NOT NULL) IN ());
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (CAST((~ (vt0.c1)) AS NUMERIC)) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (CAST((~ (vt0.c1)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((CAST((~ (vt0.c1)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT v0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt0, v0, vt1 GROUP BY v0.c0, vt1.c0, vt0.c0, vt0.c1;
SELECT ALL v0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt0, v0, vt1 WHERE ((~ (''))) GROUP BY v0.c0, vt1.c0, vt0.c0, vt0.c1 UNION SELECT ALL v0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt0, v0, vt1 WHERE ((NOT ((~ (''))))) GROUP BY v0.c0, vt1.c0, vt0.c0, vt0.c1 UNION SELECT v0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt0, v0, vt1 WHERE ((((~ (''))) ISNULL)) GROUP BY v0.c0, vt1.c0, vt0.c0, vt0.c1;
SELECT v0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt0, v0, vt1 GROUP BY v0.c0, vt1.c0, vt0.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING MIN(((v0.c0)<<(v0.c0))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (MIN(((v0.c0)<<(v0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((MIN(((v0.c0)<<(v0.c0)))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING MIN(((v0.c0)<<(v0.c0))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (MIN(((v0.c0)<<(v0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((MIN(((v0.c0)<<(v0.c0)))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c1, 0.5272844055353466))LIKE(vt0.c0))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((LIKELIHOOD(DISTINCT vt0.c1, 0.5272844055353466))LIKE(vt0.c0))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((LIKELIHOOD(DISTINCT vt0.c1, 0.5272844055353466))LIKE(vt0.c0))) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt0 ON (NOT ((NOT (vt0.c1)))) FULL OUTER JOIN vt1 ON (NOT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt0 ON (NOT ((NOT (vt0.c1)))) FULL OUTER JOIN vt1 ON (NOT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) WHERE ((- (vt1.c0))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt0 ON (NOT ((NOT (vt0.c1)))) FULL OUTER JOIN vt1 ON (NOT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) WHERE ((NOT ((- (vt1.c0))))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt0 ON (NOT ((NOT (vt0.c1)))) FULL OUTER JOIN vt1 ON (NOT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) WHERE ((((- (vt1.c0))) ISNULL));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt0 ON (NOT ((NOT (vt0.c1)))) FULL OUTER JOIN vt1 ON (NOT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END));
SELECT vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0, v0 WHERE ((((('0.8591899561972273')OR('-2101746626')))AND(NULL))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0, v0 WHERE ((NOT ((((('0.8591899561972273')OR('-2101746626')))AND(NULL))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0, v0 WHERE ((((((('0.8591899561972273')OR('-2101746626')))AND(NULL))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CHANGES() GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CHANGES() GROUP BY vt0.c0 HAVING (((AVG(vt1.c0)))<=((MAX(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CHANGES() GROUP BY vt0.c0 HAVING (NOT ((((AVG(vt1.c0)))<=((MAX(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CHANGES() GROUP BY vt0.c0 HAVING (((((AVG(vt1.c0)))<=((MAX(vt0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CHANGES() GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CHANGES() GROUP BY vt0.c0 HAVING (((AVG(vt1.c0)))<=((MAX(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CHANGES() GROUP BY vt0.c0 HAVING (NOT ((((AVG(vt1.c0)))<=((MAX(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CHANGES() GROUP BY vt0.c0 HAVING (((((AVG(vt1.c0)))<=((MAX(vt0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CHANGES() GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT vt0.c1 FROM vt0 NATURAL JOIN vt1;
SELECT DISTINCT vt0.c1 FROM vt0 NATURAL JOIN vt1 WHERE ((((vt0.c1)) NOT BETWEEN (((vt1.c0 IN (vt1.c0, vt0.c1)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 NATURAL JOIN vt1 WHERE ((NOT ((((vt0.c1)) NOT BETWEEN (((vt1.c0 IN (vt1.c0, vt0.c1)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 NATURAL JOIN vt1 WHERE ((((((vt0.c1)) NOT BETWEEN (((vt1.c0 IN (vt1.c0, vt0.c1)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0 NATURAL JOIN vt1;
SELECT vt0.c0, vt1.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CAST(((vt0.c1)%(v0.c0)) AS REAL) CROSS JOIN vt1 ON (((((vt0.c1) IS FALSE)))>((CASE vt0.c0  WHEN '[]' THEN vt0.c0 END))) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CAST(((vt0.c1)%(v0.c0)) AS REAL) CROSS JOIN vt1 ON (((((vt0.c1) IS FALSE)))>((CASE vt0.c0  WHEN '[]' THEN vt0.c0 END))) WHERE ((((vt1.c0, v0.c0, vt0.c0)) BETWEEN ((TYPEOF(1.182201428E9), ((((((((vt1.c0)OR(vt0.c1)))OR(0.5254740398992399)))OR(x'')))AND(vt0.c0)), (v0.c0 IN ()))) AND (('~\rV\n]W', ((vt1.c0) NOTNULL), NULL)))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CAST(((vt0.c1)%(v0.c0)) AS REAL) CROSS JOIN vt1 ON (((((vt0.c1) IS FALSE)))>((CASE vt0.c0  WHEN '[]' THEN vt0.c0 END))) WHERE ((NOT ((((vt1.c0, v0.c0, vt0.c0)) BETWEEN ((TYPEOF(1.182201428E9), ((((((((vt1.c0)OR(vt0.c1)))OR(0.5254740398992399)))OR(x'')))AND(vt0.c0)), (v0.c0 IN ()))) AND (('~\rV\n]W', ((vt1.c0) NOTNULL), NULL)))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CAST(((vt0.c1)%(v0.c0)) AS REAL) CROSS JOIN vt1 ON (((((vt0.c1) IS FALSE)))>((CASE vt0.c0  WHEN '[]' THEN vt0.c0 END))) WHERE ((((((vt1.c0, v0.c0, vt0.c0)) BETWEEN ((TYPEOF(1.182201428E9), ((((((((vt1.c0)OR(vt0.c1)))OR(0.5254740398992399)))OR(x'')))AND(vt0.c0)), (v0.c0 IN ()))) AND (('~\rV\n]W', ((vt1.c0) NOTNULL), NULL)))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 RIGHT OUTER JOIN v0 ON CAST(((vt0.c1)%(v0.c0)) AS REAL) CROSS JOIN vt1 ON (((((vt0.c1) IS FALSE)))>((CASE vt0.c0  WHEN '[]' THEN vt0.c0 END))) GROUP BY vt0.c0, vt1.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING GROUP_CONCAT(((vt0.c0)AND('>6!_vkPN'))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(((vt0.c0)AND('>6!_vkPN'))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((GROUP_CONCAT(((vt0.c0)AND('>6!_vkPN')))) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING GROUP_CONCAT(((vt0.c0)AND('>6!_vkPN'))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(((vt0.c0)AND('>6!_vkPN'))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((GROUP_CONCAT(((vt0.c0)AND('>6!_vkPN')))) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON ((((vt1.c0)<=(vt0.c0))) NOT NULL) FULL OUTER JOIN vt1 ON ((HEX(DISTINCT vt0.c0)) NOT BETWEEN (((vt1.c0)-(vt0.c0))) AND (((vt1.c0)<>(vt0.c1))));
SELECT DISTINCT vt0.c1 FROM vt1, vt0, v0;
SELECT DISTINCT vt0.c1 FROM vt1, vt0, v0 WHERE (((vt0.c0) IS TRUE)) UNION SELECT DISTINCT vt0.c1 FROM vt1, vt0, v0 WHERE ((NOT (((vt0.c0) IS TRUE)))) UNION SELECT DISTINCT vt0.c1 FROM vt1, vt0, v0 WHERE (((((vt0.c0) IS TRUE)) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt1, vt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((('CVdB') NOT BETWEEN (v0.c0) AND (NULLIF(DISTINCT v0.c0, v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((('CVdB') NOT BETWEEN (v0.c0) AND (NULLIF(DISTINCT v0.c0, v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((('CVdB') NOT BETWEEN (v0.c0) AND (NULLIF(DISTINCT v0.c0, v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(TOTAL(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(TOTAL(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(TOTAL(vt1.c0))) ISNULL);
SELECT ALL * FROM vt1, v0;
SELECT * FROM vt1, v0 WHERE (((v0.c0 COLLATE NOCASE)>>(((v0.c0) NOT NULL)))) UNION ALL SELECT * FROM vt1, v0 WHERE ((NOT (((v0.c0 COLLATE NOCASE)>>(((v0.c0) NOT NULL)))))) UNION ALL SELECT * FROM vt1, v0 WHERE (((((v0.c0 COLLATE NOCASE)>>(((v0.c0) NOT NULL)))) ISNULL));
SELECT ALL * FROM vt1, v0;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN v0 ON NULL;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN v0 ON NULL WHERE ((((+ (x''))) IS TRUE)) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN v0 ON NULL WHERE ((NOT ((((+ (x''))) IS TRUE)))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN v0 ON NULL WHERE ((((((+ (x''))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN v0 ON NULL;
SELECT ALL vt0.c1 FROM vt1 LEFT OUTER JOIN vt0 ON CAST('2084492573' AS INTEGER) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1 LEFT OUTER JOIN vt0 ON CAST('2084492573' AS INTEGER) WHERE ((((CAST(vt0.c1 AS REAL)))<=((((vt1.c0) NOT NULL))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt1 LEFT OUTER JOIN vt0 ON CAST('2084492573' AS INTEGER) WHERE ((NOT ((((CAST(vt0.c1 AS REAL)))<=((((vt1.c0) NOT NULL))))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt1 LEFT OUTER JOIN vt0 ON CAST('2084492573' AS INTEGER) WHERE ((((((CAST(vt0.c1 AS REAL)))<=((((vt1.c0) NOT NULL))))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1 LEFT OUTER JOIN vt0 ON CAST('2084492573' AS INTEGER) GROUP BY vt0.c1;
SELECT ALL v0.c0 FROM vt1 INNER JOIN v0 ON (((NOT (vt1.c0))) NOT BETWEEN (TYPEOF(vt1.c0)) AND (((('0.6264793725117989', v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, '')) AND ((vt1.c0, v0.c0, vt1.c0))))) GROUP BY v0.c0;
SELECT v0.c0 FROM vt1 INNER JOIN v0 ON (((NOT (vt1.c0))) NOT BETWEEN (TYPEOF(vt1.c0)) AND (((('0.6264793725117989', v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, '')) AND ((vt1.c0, v0.c0, vt1.c0))))) GROUP BY v0.c0 HAVING AVG(TOTAL(vt1.c0)) UNION ALL SELECT v0.c0 FROM vt1 INNER JOIN v0 ON (((NOT (vt1.c0))) NOT BETWEEN (TYPEOF(vt1.c0)) AND (((('0.6264793725117989', v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, '')) AND ((vt1.c0, v0.c0, vt1.c0))))) GROUP BY v0.c0 HAVING (NOT (AVG(TOTAL(vt1.c0)))) UNION ALL SELECT v0.c0 FROM vt1 INNER JOIN v0 ON (((NOT (vt1.c0))) NOT BETWEEN (TYPEOF(vt1.c0)) AND (((('0.6264793725117989', v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, '')) AND ((vt1.c0, v0.c0, vt1.c0))))) GROUP BY v0.c0 HAVING ((AVG(TOTAL(vt1.c0))) ISNULL);
SELECT * FROM vt0, v0, vt1;
SELECT ALL * FROM vt0, v0, vt1 WHERE (ABS(vt1.c0) COLLATE BINARY) UNION ALL SELECT * FROM vt0, v0, vt1 WHERE ((NOT (ABS(vt1.c0) COLLATE BINARY))) UNION ALL SELECT * FROM vt0, v0, vt1 WHERE (((ABS(vt1.c0) COLLATE BINARY) ISNULL));
SELECT * FROM vt0, v0, vt1;
SELECT DISTINCT vt0.c1, vt0.c0, v0.c0, vt1.c0 FROM vt1, v0, vt0;
SELECT DISTINCT vt0.c1, vt0.c0, v0.c0, vt1.c0 FROM vt1, v0, vt0 WHERE (((((NULL)OR((vt0.c1 IN (vt0.c1, vt0.c0)))))AND(CAST(vt0.c0 AS BLOB)))) UNION SELECT DISTINCT vt0.c1, vt0.c0, v0.c0, vt1.c0 FROM vt1, v0, vt0 WHERE ((NOT (((((NULL)OR((vt0.c1 IN (vt0.c1, vt0.c0)))))AND(CAST(vt0.c0 AS BLOB)))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, v0.c0, vt1.c0 FROM vt1, v0, vt0 WHERE (((((((NULL)OR((vt0.c1 IN (vt0.c1, vt0.c0)))))AND(CAST(vt0.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, v0.c0, vt1.c0 FROM vt1, v0, vt0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0 WHERE ((NOT (NULL))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1, v0 WHERE ((NOT ((NOT (NULL))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt1, v0 WHERE ((((NOT (NULL))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(MIN(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(MIN(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(MIN(vt1.c0))) ISNULL);
SELECT * FROM vt0, vt1, v0;
SELECT ALL * FROM vt0, vt1, v0 WHERE (((v0.c0)<(vt0.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM vt0, vt1, v0 WHERE ((NOT (((v0.c0)<(vt0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt0, vt1, v0 NOT INDEXED WHERE (((((v0.c0)<(vt0.c0)) COLLATE BINARY) ISNULL));
SELECT * FROM vt0, vt1, v0;
SELECT DISTINCT v0.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt1, v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt1, v0, vt0 WHERE ((((NOT (x'')))<(vt0.c1))) UNION SELECT DISTINCT v0.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt1, v0, vt0 WHERE ((NOT ((((NOT (x'')))<(vt0.c1))))) UNION SELECT DISTINCT v0.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt1, v0, vt0 WHERE ((((((NOT (x'')))<(vt0.c1))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt1, v0, vt0;
SELECT vt0.c0, vt0.c1, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1, v0.c0;
SELECT ALL vt0.c0, vt0.c1, v0.c0 FROM vt0, v0 WHERE ((+ ((((vt0.c0, vt0.c1, v0.c0)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c1)))))) GROUP BY vt0.c0, vt0.c1, v0.c0 UNION SELECT vt0.c0, vt0.c1, v0.c0 FROM vt0, v0 WHERE ((NOT ((+ ((((vt0.c0, vt0.c1, v0.c0)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c1)))))))) GROUP BY vt0.c0, vt0.c1, v0.c0 UNION SELECT vt0.c0, vt0.c1, v0.c0 FROM vt0, v0 WHERE ((((+ ((((vt0.c0, vt0.c1, v0.c0)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c1)))))) ISNULL)) GROUP BY vt0.c0, vt0.c1, v0.c0;
SELECT vt0.c0, vt0.c1, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING LIKELY(DISTINCT MIN(MIN(TOTAL(AVG(NULL))))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (LIKELY(DISTINCT MIN(MIN(TOTAL(AVG(NULL))))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((LIKELY(DISTINCT MIN(MIN(TOTAL(AVG(NULL)))))) ISNULL);
SELECT v0.c0, vt1.c0 FROM v0, vt1;
SELECT v0.c0, vt1.c0 FROM v0, vt1 WHERE (CASE WHEN ((v0.c0)IS NOT(vt1.c0)) THEN '6+)' ELSE CAST(vt1.c0 AS REAL) END) UNION ALL SELECT v0.c0, vt1.c0 FROM v0, vt1 WHERE ((NOT (CASE WHEN ((v0.c0)IS NOT(vt1.c0)) THEN '6+)' ELSE CAST(vt1.c0 AS REAL) END))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 WHERE (((CASE WHEN ((v0.c0)IS NOT(vt1.c0)) THEN '6+)' ELSE CAST(vt1.c0 AS REAL) END) ISNULL));
SELECT v0.c0, vt1.c0 FROM v0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)>>(vt0.c0)))OR(((vt0.c0)AND('-1283905757')))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)>>(vt0.c0)))OR(((vt0.c0)AND('-1283905757')))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)>>(vt0.c0)))OR(((vt0.c0)AND('-1283905757')))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, vt1 WHERE (x'') GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, vt1 WHERE ((NOT (x''))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, vt1 WHERE (((x'') ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt0.c0 HAVING AVG((((COUNT(GROUP_CONCAT(COUNT(*))))) BETWEEN ((MIN(vt1.c0))) AND ((COUNT(*))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (AVG((((COUNT(GROUP_CONCAT(COUNT(*))))) BETWEEN ((MIN(vt1.c0))) AND ((COUNT(*))))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt0.c0 HAVING ((AVG((((COUNT(GROUP_CONCAT(COUNT(*))))) BETWEEN ((MIN(vt1.c0))) AND ((COUNT(*)))))) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (NOT (CASE '586908484'  WHEN vt0.c1 THEN vt1.c0 ELSE 0.5866347143125703 END));
SELECT vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (NOT (CASE '586908484'  WHEN vt0.c1 THEN vt1.c0 ELSE 0.5866347143125703 END)) WHERE (((0.47763210694796987) IS FALSE)) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (NOT (CASE '586908484'  WHEN vt0.c1 THEN vt1.c0 ELSE 0.5866347143125703 END)) WHERE ((NOT (((0.47763210694796987) IS FALSE)))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (NOT (CASE '586908484'  WHEN vt0.c1 THEN vt1.c0 ELSE 0.5866347143125703 END)) WHERE (((((0.47763210694796987) IS FALSE)) ISNULL));
SELECT vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON (NOT (CASE '586908484'  WHEN vt0.c1 THEN vt1.c0 ELSE 0.5866347143125703 END));
SELECT DISTINCT * FROM v0, vt0, vt1;
SELECT DISTINCT * FROM v0, vt0, vt1 WHERE (((CAST(vt0.c0 AS NUMERIC))>>(TYPEOF(vt0.c1)))) UNION SELECT DISTINCT * FROM v0, vt0, vt1 WHERE ((NOT (((CAST(vt0.c0 AS NUMERIC))>>(TYPEOF(vt0.c1)))))) UNION SELECT DISTINCT * FROM v0, vt0, vt1 WHERE (((((CAST(vt0.c0 AS NUMERIC))>>(TYPEOF(vt0.c1)))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, vt1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c0) BETWEEN ((vt0.c1 IN ())) AND ((vt0.c1 IN ())))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0) BETWEEN ((vt0.c1 IN ())) AND ((vt0.c1 IN ())))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c0) BETWEEN ((vt0.c1 IN ())) AND ((vt0.c1 IN ())))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING ((((((((((((AVG(COUNT(vt0.c1)))OR(MAX(vt1.c0))))AND(AVG(vt1.c0))))OR(COUNT(*))))OR(vt1.c0)))AND(GROUP_CONCAT(x''))))OR((+ (SUM(vt0.c1))))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING (NOT (((((((((((((AVG(COUNT(vt0.c1)))OR(MAX(vt1.c0))))AND(AVG(vt1.c0))))OR(COUNT(*))))OR(vt1.c0)))AND(GROUP_CONCAT(x''))))OR((+ (SUM(vt0.c1))))))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING ((((((((((((((AVG(COUNT(vt0.c1)))OR(MAX(vt1.c0))))AND(AVG(vt1.c0))))OR(COUNT(*))))OR(vt1.c0)))AND(GROUP_CONCAT(x''))))OR((+ (SUM(vt0.c1)))))) ISNULL);
SELECT ALL * FROM v0, vt0 NATURAL JOIN vt1;
SELECT ALL * FROM v0, vt0 NATURAL JOIN vt1 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM v0, vt0 NATURAL JOIN vt1 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM v0, vt0 NATURAL JOIN vt1 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM v0, vt0 NATURAL JOIN vt1;
SELECT DISTINCT vt1.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((CAST(vt0.c1 AS BLOB))) AND (((vt1.c0 IN (vt0.c1)))));
SELECT DISTINCT vt1.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((CAST(vt0.c1 AS BLOB))) AND (((vt1.c0 IN (vt0.c1))))) WHERE (CAST(((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)) AS NUMERIC)) UNION SELECT DISTINCT vt1.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((CAST(vt0.c1 AS BLOB))) AND (((vt1.c0 IN (vt0.c1))))) WHERE ((NOT (CAST(((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)) AS NUMERIC)))) UNION SELECT DISTINCT vt1.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((CAST(vt0.c1 AS BLOB))) AND (((vt1.c0 IN (vt0.c1))))) WHERE (((CAST(((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((CAST(vt0.c1 AS BLOB))) AND (((vt1.c0 IN (vt0.c1)))));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c1 FROM v0, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM v0, vt0 GROUP BY vt0.c1 HAVING COUNT(x'') COLLATE BINARY UNION ALL SELECT ALL vt0.c1 FROM v0, vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(x'') COLLATE BINARY)) UNION ALL SELECT vt0.c1 FROM v0, vt0 GROUP BY vt0.c1 HAVING ((COUNT(x'') COLLATE BINARY) ISNULL);
SELECT ALL vt0.c1 FROM v0, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM v0, vt0 GROUP BY vt0.c1 HAVING COUNT(x'') COLLATE BINARY UNION ALL SELECT ALL vt0.c1 FROM v0, vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(x'') COLLATE BINARY)) UNION ALL SELECT vt0.c1 FROM v0, vt0 GROUP BY vt0.c1 HAVING ((COUNT(x'') COLLATE BINARY) ISNULL);
SELECT ALL vt0.c1 FROM v0, vt0 GROUP BY vt0.c1;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (0.7322716165560448) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (0.7322716165560448))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((0.7322716165560448) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((v0.c0 IN ())) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((v0.c0 IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0 IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)!=(-982554569)))<(((v0.c0)<<(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)<>(-982554569)))<(((v0.c0)<<(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)<>(-982554569)))<(((v0.c0)<<(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((SUM(SUM(v0.c0)))AND(x'')))OR(((COUNT(*)) NOT BETWEEN (v0.c0) AND (v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((SUM(SUM(v0.c0)))AND(x'')))OR(((COUNT(*)) NOT BETWEEN (v0.c0) AND (v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((SUM(SUM(v0.c0)))AND(x'')))OR(((COUNT(*)) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL);
SELECT ALL * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (x'') UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((x'') ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((((vt0.c1 IN (vt0.c1, vt0.c0)))OR((+ (vt0.c1)))))AND((((vt0.c1, vt0.c1, vt0.c1, vt0.c0, x''))=((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT ((((((vt0.c1 IN (vt0.c1, vt0.c0)))OR((+ (vt0.c1)))))AND((((vt0.c1, vt0.c1, vt0.c1, vt0.c0, x''))=((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0)))))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((((((vt0.c1 IN (vt0.c1, vt0.c0)))OR((+ (vt0.c1)))))AND((((vt0.c1, vt0.c1, vt0.c1, vt0.c0, x''))==((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1, v0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON UNLIKELY(DISTINCT ((vt0.c1)%(v0.c0))) CROSS JOIN v0 ON NULL GROUP BY vt0.c0, vt0.c1, v0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((NULL)|(AVG(vt0.c1))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (((NULL)|(AVG(vt0.c1))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((((NULL)|(AVG(vt0.c1)))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((NULL)|(AVG(vt0.c1))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (((NULL)|(AVG(vt0.c1))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((((NULL)|(AVG(vt0.c1)))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL * FROM v0, vt1, vt0;
SELECT ALL * FROM v0, vt1, vt0 WHERE ((((NOT (vt0.c0))) IS TRUE)) UNION ALL SELECT ALL * FROM v0, vt1, vt0 WHERE ((NOT ((((NOT (vt0.c0))) IS TRUE)))) UNION ALL SELECT * FROM v0, vt1, vt0 WHERE ((((((NOT (vt0.c0))) IS TRUE)) ISNULL));
SELECT ALL * FROM v0, vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((-9.82554569E8) BETWEEN ((vt1.c0 IN ())) AND ((NOT (x'7007'))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((-9.82554569E8) BETWEEN ((vt1.c0 IN ())) AND ((NOT (x'7007'))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((-9.82554569E8) BETWEEN ((vt1.c0 IN ())) AND ((NOT (x'7007'))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 WHERE ((vt0.c0 IN (CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END))) GROUP BY vt1.c0, vt0.c1, vt0.c0 UNION SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((vt0.c0 IN (CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END))))) GROUP BY vt1.c0, vt0.c1, vt0.c0 UNION SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 WHERE ((((vt0.c0 IN (CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END))) ISNULL)) GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((CASE WHEN NULL THEN v0.c0 ELSE v0.c0 END IN ())) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((CASE WHEN NULL THEN v0.c0 ELSE v0.c0 END IN ())))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((CASE WHEN NULL THEN v0.c0 ELSE v0.c0 END IN ())) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT vt0.c1, vt0.c0, vt1.c0 FROM vt1, v0, vt0;
SELECT DISTINCT vt0.c1, vt0.c0, vt1.c0 FROM vt1, v0, vt0 WHERE (vt0.c1) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt1.c0 FROM vt1, v0, vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt1.c0 FROM vt1, v0, vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, vt1.c0 FROM vt1, v0, vt0;
SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 WHERE ((((NULL)) NOT BETWEEN ((v0.c0 COLLATE BINARY)) AND (('-1195664811')))) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 WHERE ((NOT ((((NULL)) NOT BETWEEN ((v0.c0 COLLATE BINARY)) AND (('-1195664811')))))) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 WHERE ((((((NULL)) NOT BETWEEN ((v0.c0 COLLATE BINARY)) AND (('-1195664811')))) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING COUNT(AVG(MAX(vt0.c1))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (COUNT(AVG(MAX(vt0.c1))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((COUNT(AVG(MAX(vt0.c1)))) ISNULL);
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE ((((v0.c0) ISNULL) IN ())) ORDER BY vt0.c1 COLLATE BINARY ASC  NULLS LAST, ((((v0.c0) BETWEEN (x'625e') AND (v0.c0))) BETWEEN ((((-1113768079))<=((vt0.c1)))) AND (LIKELY(v0.c0))) DESC;
SELECT ALL * FROM vt0, v0 WHERE ((NOT ((((v0.c0) ISNULL) IN ())))) ORDER BY vt0.c1 COLLATE BINARY ASC  NULLS LAST, ((((v0.c0) BETWEEN (x'625e') AND (v0.c0))) BETWEEN ((((-1113768079))<=((vt0.c1)))) AND (LIKELY(v0.c0))) DESC;
SELECT * FROM vt0, v0 WHERE ((((((v0.c0) ISNULL) IN ())) ISNULL)) ORDER BY vt0.c1 COLLATE BINARY ASC  NULLS LAST, ((((v0.c0) BETWEEN (x'625e') AND (v0.c0))) BETWEEN ((((-1113768079))<=((vt0.c1)))) AND (LIKELY(v0.c0))) DESC;
SELECT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((NOT (SQLITE_VERSION()))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((NOT (SQLITE_VERSION()))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((NOT (SQLITE_VERSION()))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((ABS(vt0.c1))<(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((ABS(vt0.c1))<(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((ABS(vt0.c1))<(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING CASE WHEN MAX(TOTAL(MIN(SUM(vt0.c0)))) THEN COUNT(*) END UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c1, vt0.c0 HAVING (NOT (CASE WHEN MAX(TOTAL(MIN(SUM(vt0.c0)))) THEN COUNT(*) END)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((CASE WHEN MAX(TOTAL(MIN(SUM(vt0.c0)))) THEN COUNT(*) END) ISNULL);
SELECT ALL vt0.c1, v0.c0, vt0.c0 FROM vt0, v0, vt1;
SELECT vt0.c1, v0.c0, vt0.c0 FROM vt0, v0, vt1 WHERE (((vt1.c0)<<(json_array(vt1.c0, vt0.c1)))) UNION ALL SELECT ALL vt0.c1, v0.c0, vt0.c0 FROM vt0, v0, vt1 WHERE ((NOT (((vt1.c0)<<(json_array(vt1.c0, vt0.c1)))))) UNION ALL SELECT ALL vt0.c1, v0.c0, vt0.c0 FROM vt0, v0, vt1 WHERE (((((vt1.c0)<<(json_array(vt1.c0, vt0.c1)))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ('1933328718') UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT ('1933328718'))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((('1933328718') ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((v0.c0 IN ())) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((v0.c0 IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((v0.c0 IN ())) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (COUNT(*) IN (COUNT(COUNT(*)), (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((COUNT(*) IN (COUNT(COUNT(*)), (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((COUNT(*) IN (COUNT(COUNT(*)), (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (NULLIF((+ (v0.c0)), v0.c0)) UNION ALL SELECT * FROM v0 WHERE ((NOT (NULLIF((+ (v0.c0)), v0.c0)))) UNION ALL SELECT * FROM v0 WHERE (((NULLIF((+ (v0.c0)), v0.c0)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0, v0.c0 FROM vt0, v0, vt1;
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0, v0.c0 FROM vt0, v0, vt1 WHERE (TYPEOF(((((((((x'da16290d')AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0, v0.c0 FROM vt0, v0, vt1 WHERE ((NOT (TYPEOF(((((((((x'da16290d')AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0, v0.c0 FROM vt0, v0, vt1 WHERE (((TYPEOF(((((((((x'da16290d')AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0, v0.c0 FROM vt0, v0, vt1;
SELECT v0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY v0.c0, vt1.c0, vt0.c0, vt0.c1;
SELECT v0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0, v0 WHERE (CASE WHEN ((NULL)<=(vt1.c0)) THEN ((v0.c0)-(v0.c0)) WHEN x'' THEN (((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1))) WHEN ((vt1.c0)LIKE(vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) GROUP BY v0.c0, vt1.c0, vt0.c0, vt0.c1 UNION SELECT ALL v0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0, v0 WHERE ((NOT (CASE WHEN ((NULL)<=(vt1.c0)) THEN ((v0.c0)-(v0.c0)) WHEN x'' THEN (((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1))) WHEN ((vt1.c0)LIKE(vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END))) GROUP BY v0.c0, vt1.c0, vt0.c0, vt0.c1 UNION SELECT v0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0, v0 WHERE (((CASE WHEN ((NULL)<=(vt1.c0)) THEN ((v0.c0)-(v0.c0)) WHEN x'' THEN (((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1))) WHEN ((vt1.c0)LIKE(vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ISNULL)) GROUP BY v0.c0, vt1.c0, vt0.c0, vt0.c1;
SELECT v0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY v0.c0, vt1.c0, vt0.c0, vt0.c1;
SELECT v0.c0, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON CAST(((0X73c66c3a)&(v0.c0)) AS NUMERIC) GROUP BY v0.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON CAST(((0X73c66c3a)&(v0.c0)) AS NUMERIC) GROUP BY v0.c0, vt0.c1 HAVING TOTAL(COUNT(*)) UNION ALL SELECT v0.c0, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON CAST(((0X73c66c3a)&(v0.c0)) AS NUMERIC) GROUP BY v0.c0, vt0.c1 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT v0.c0, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON CAST(((0x73c66c3a)&(v0.c0)) AS NUMERIC) GROUP BY v0.c0, vt0.c1 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT v0.c0, vt0.c0, vt0.c1 FROM v0, vt0;
SELECT v0.c0, vt0.c0, vt0.c1 FROM v0, vt0 WHERE (CASE WHEN (((vt0.c0))<((v0.c0))) THEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) ELSE (+ (vt0.c0)) END) UNION ALL SELECT v0.c0, vt0.c0, vt0.c1 FROM v0, vt0 WHERE ((NOT (CASE WHEN (((vt0.c0))<((v0.c0))) THEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) ELSE (+ (vt0.c0)) END))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM v0, vt0 WHERE (((CASE WHEN (((vt0.c0))<((v0.c0))) THEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) ELSE (+ (vt0.c0)) END) ISNULL));
SELECT v0.c0, vt0.c0, vt0.c1 FROM v0, vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) IS TRUE)) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c1 COLLATE NOCASE) IS TRUE)))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((vt0.c1 COLLATE NOCASE) IS TRUE)) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL vt0.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))>>((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))>>((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) WHERE ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) IN ((((vt1.c0, vt1.c0, vt0.c1))==((vt0.c0, vt1.c0, vt1.c0)))))) GROUP BY vt0.c1, vt1.c0 UNION SELECT vt0.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))>>((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) WHERE ((NOT ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) IN ((((vt1.c0, vt1.c0, vt0.c1))==((vt0.c0, vt1.c0, vt1.c0)))))))) GROUP BY vt0.c1, vt1.c0 UNION SELECT vt0.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))>>((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) WHERE ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) IN ((((vt1.c0, vt1.c0, vt0.c1))=((vt0.c0, vt1.c0, vt1.c0)))))) ISNULL)) GROUP BY vt0.c1, vt1.c0;
SELECT ALL vt0.c1, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))>>((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, v0, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, v0, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING ((TOTAL(AVG(v0.c0)))%((TOTAL(GROUP_CONCAT(vt0.c0)) IN ()))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt1, v0, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING (NOT (((TOTAL(AVG(v0.c0)))%((TOTAL(GROUP_CONCAT(vt0.c0)) IN ()))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt1, v0, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING ((((TOTAL(AVG(v0.c0)))%((TOTAL(GROUP_CONCAT(vt0.c0)) IN ())))) ISNULL);
SELECT vt1.c0, vt0.c1 FROM v0, vt1, vt0;
SELECT ALL vt1.c0, vt0.c1 FROM v0, vt1, vt0 WHERE (((+ (v0.c0)) IN (((((NULL)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c1)IS NOT(v0.c0))))) UNION ALL SELECT vt1.c0, vt0.c1 FROM v0, vt1, vt0 WHERE ((NOT (((+ (v0.c0)) IN (((((NULL)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c1)IS NOT(v0.c0))))))) UNION ALL SELECT vt1.c0, vt0.c1 FROM v0, vt1, vt0 WHERE (((((+ (v0.c0)) IN (((((NULL)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c1)IS NOT(v0.c0))))) ISNULL));
SELECT vt1.c0, vt0.c1 FROM v0, vt1, vt0;
SELECT DISTINCT v0.c0 FROM vt0, v0, vt1 NOT INDEXED;
SELECT DISTINCT v0.c0 FROM vt0, v0, vt1 WHERE ((((~ (vt0.c0)))||((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0, vt1 WHERE ((NOT ((((~ (vt0.c0)))||((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))))))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0, vt1 WHERE ((((((~ (vt0.c0)))||((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0, v0, vt1 NOT INDEXED;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, vt1 WHERE ((('-587053386')>(vt0.c1))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0, vt1 WHERE ((NOT ((('-587053386')>(vt0.c1))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0, vt1 WHERE ((((('-587053386')>(vt0.c1))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING COUNT(GROUP_CONCAT(TOTAL(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (COUNT(GROUP_CONCAT(TOTAL(COUNT(*)))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((COUNT(GROUP_CONCAT(TOTAL(COUNT(*))))) ISNULL);
SELECT ALL vt0.c0, vt0.c1, v0.c0 FROM vt1, vt0, v0;
SELECT ALL vt0.c0, vt0.c1, v0.c0 FROM vt1, vt0, v0 WHERE (0xffffffffd757aa99) UNION ALL SELECT vt0.c0, vt0.c1, v0.c0 FROM vt1, vt0, v0 WHERE ((NOT (0Xffffffffd757aa99))) UNION ALL SELECT vt0.c0, vt0.c1, v0.c0 FROM vt1, vt0, v0 WHERE (((0xffffffffd757aa99) ISNULL));
SELECT ALL vt0.c0, vt0.c1, v0.c0 FROM vt1, vt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE (((v0.c0)) NOT BETWEEN ((x'')) AND ((v0.c0)))  WHEN CAST(v0.c0 AS NUMERIC) THEN ABS(DISTINCT v0.c0) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE (((v0.c0)) NOT BETWEEN ((x'')) AND ((v0.c0)))  WHEN CAST(v0.c0 AS NUMERIC) THEN ABS(DISTINCT v0.c0) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE (((v0.c0)) NOT BETWEEN ((x'')) AND ((v0.c0)))  WHEN CAST(v0.c0 AS NUMERIC) THEN ABS(DISTINCT v0.c0) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c1, vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c1, vt1.c0, v0.c0;
SELECT ALL vt0.c1, vt1.c0, v0.c0 FROM vt1, v0, vt0 WHERE (((vt0.c0)>>(vt0.c0)) COLLATE BINARY COLLATE BINARY) GROUP BY vt0.c1, vt1.c0, v0.c0 UNION SELECT vt0.c1, vt1.c0, v0.c0 FROM vt1, v0, vt0 WHERE ((NOT (((vt0.c0)>>(vt0.c0)) COLLATE BINARY COLLATE BINARY))) GROUP BY vt0.c1, vt1.c0, v0.c0 UNION SELECT vt0.c1, vt1.c0, v0.c0 FROM vt1, v0, vt0 WHERE (((((vt0.c0)>>(vt0.c0)) COLLATE BINARY COLLATE BINARY) ISNULL)) GROUP BY vt0.c1, vt1.c0, v0.c0;
SELECT vt0.c1, vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c1, vt1.c0, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(0.027771532118831876 AS REAL) UNION ALL SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING (NOT (CAST(0.027771532118831876 AS REAL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(0.027771532118831876 AS REAL)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(0.027771532118831876 AS REAL) UNION ALL SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING (NOT (CAST(0.027771532118831876 AS REAL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(0.027771532118831876 AS REAL)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0, v0.c0, vt0.c1 FROM v0, vt0;
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 WHERE (vt0.c0 COLLATE BINARY COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 WHERE ((NOT (vt0.c0 COLLATE BINARY COLLATE NOCASE))) UNION ALL SELECT vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 WHERE (((vt0.c0 COLLATE BINARY COLLATE NOCASE) ISNULL));
SELECT vt0.c0, v0.c0, vt0.c1 FROM v0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))) NOT BETWEEN (((((v0.c0)AND(v0.c0)))AND(''))) AND (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))) NOT BETWEEN (((((v0.c0)AND(v0.c0)))AND(''))) AND (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))) NOT BETWEEN (((((v0.c0)AND(v0.c0)))AND(''))) AND (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (TYPEOF((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, 0.07059846965944638, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (TYPEOF((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, 0.07059846965944638, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((TYPEOF((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, 0.07059846965944638, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c1 HAVING AVG(SUM(vt0.c1)) UNION ALL SELECT ALL vt0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c1 HAVING (NOT (AVG(SUM(vt0.c1)))) UNION ALL SELECT vt0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c1 HAVING ((AVG(SUM(vt0.c1))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (((v0.c0)>(v0.c0))) AND (((v0.c0)OR(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (((v0.c0)>(v0.c0))) AND (((v0.c0)OR(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (((v0.c0)>(v0.c0))) AND (((v0.c0)OR(v0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN (+ ('')) THEN vt0.c0 COLLATE BINARY ELSE (((vt0.c0))>((vt0.c1))) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN (+ ('')) THEN vt0.c0 COLLATE BINARY ELSE (((vt0.c0))>((vt0.c1))) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN (+ ('')) THEN vt0.c0 COLLATE BINARY ELSE (((vt0.c0))>((vt0.c1))) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) IN ())))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0 HAVING vt0.c0 UNION ALL SELECT vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0 HAVING vt0.c0 UNION ALL SELECT vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0;
SELECT v0.c0 FROM v0, vt1;
SELECT v0.c0 FROM v0, vt1 WHERE (((((((v0.c0)OR(vt1.c0)))AND(v0.c0))) NOTNULL)) UNION ALL SELECT ALL v0.c0 FROM v0, vt1 WHERE ((NOT (((((((v0.c0)OR(vt1.c0)))AND(v0.c0))) NOTNULL)))) UNION ALL SELECT v0.c0 FROM v0, vt1 WHERE (((((((((v0.c0)OR(vt1.c0)))AND(v0.c0))) NOTNULL)) ISNULL));
SELECT v0.c0 FROM v0, vt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)>=(v0.c0)))|(CAST(v0.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0)>=(v0.c0)))|(CAST(v0.c0 AS BLOB)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0)>=(v0.c0)))|(CAST(v0.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON (((((vt1.c0)AND(vt1.c0)))AND(v0.c0)) IN ()) GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON (((((vt1.c0)AND(vt1.c0)))AND(v0.c0)) IN ()) WHERE ((NOT ((v0.c0 IN ())))) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON (((((vt1.c0)AND(vt1.c0)))AND(v0.c0)) IN ()) WHERE ((NOT ((NOT ((v0.c0 IN ())))))) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON (((((vt1.c0)AND(vt1.c0)))AND(v0.c0)) IN ()) WHERE ((((NOT ((v0.c0 IN ())))) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON (((((vt1.c0)AND(vt1.c0)))AND(v0.c0)) IN ()) GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(COUNT(AVG(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(COUNT(AVG(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(COUNT(AVG(v0.c0)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(0.3878038398704664 AS INTEGER)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST(0.3878038398704664 AS INTEGER)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(0.3878038398704664 AS INTEGER)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0, v0.c0 FROM v0, vt0, vt1;
SELECT DISTINCT vt1.c0, v0.c0 FROM v0, vt0, vt1 WHERE (TRIM(DISTINCT vt0.c0) COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0, v0.c0 FROM v0, vt0, vt1 WHERE ((NOT (TRIM(DISTINCT vt0.c0) COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0, v0.c0 FROM v0, vt0, vt1 WHERE (((TRIM(DISTINCT vt0.c0) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0, v0.c0 FROM v0, vt0, vt1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((v0.c0 IN ())) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((v0.c0 IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0 IN ())) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING SUM(AVG(vt1.c0)) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (SUM(AVG(vt1.c0)))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((SUM(AVG(vt1.c0))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((((((0.06936745597029714))<=(('祺?賂'))), ((v0.c0) IS FALSE), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CASE x'b01b'  WHEN v0.c0 THEN v0.c0 END))<((((v0.c0) NOT NULL), (v0.c0 IN ()), ((((v0.c0)AND(v0.c0)))OR('2084492573')), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), v0.c0)))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((((0.06936745597029714))<=(('祺?賂'))), ((v0.c0) IS FALSE), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CASE x'b01b'  WHEN v0.c0 THEN v0.c0 END))<((((v0.c0) NOT NULL), (v0.c0 IN ()), ((((v0.c0)AND(v0.c0)))OR('2084492573')), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), v0.c0)))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((((0.06936745597029714))<=(('祺?賂'))), ((v0.c0) IS FALSE), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CASE x'b01b'  WHEN v0.c0 THEN v0.c0 END))<((((v0.c0) NOT NULL), (v0.c0 IN ()), ((((v0.c0)AND(v0.c0)))OR('2084492573')), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), v0.c0)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0, vt1.c0, vt0.c1, vt0.c0 FROM vt0, v0, vt1;
SELECT DISTINCT v0.c0, vt1.c0, vt0.c1, vt0.c0 FROM vt0, v0, vt1 WHERE (((vt1.c0)<=(((vt0.c1)>=(vt0.c1))))) UNION SELECT DISTINCT v0.c0, vt1.c0, vt0.c1, vt0.c0 FROM vt0, v0, vt1 WHERE ((NOT (((vt1.c0)<=(((vt0.c1)>=(vt0.c1))))))) UNION SELECT DISTINCT v0.c0, vt1.c0, vt0.c1, vt0.c0 FROM vt0, v0, vt1 WHERE (((((vt1.c0)<=(((vt0.c1)>=(vt0.c1))))) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0, vt0.c1, vt0.c0 FROM vt0, v0, vt1;
SELECT ALL vt1.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt0, v0, vt1 WHERE (((((CAST(vt0.c0 AS REAL))AND(CASE 0.9607984389701553  WHEN vt0.c1 THEN v0.c0 END)))AND((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) GROUP BY vt1.c0, v0.c0 UNION SELECT ALL vt1.c0, v0.c0 FROM vt0, v0, vt1 WHERE ((NOT (((((CAST(vt0.c0 AS REAL))AND(CASE 0.9607984389701553  WHEN vt0.c1 THEN v0.c0 END)))AND((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))))) GROUP BY vt1.c0, v0.c0 UNION SELECT ALL vt1.c0, v0.c0 FROM vt0, v0, vt1 WHERE (((((((CAST(vt0.c0 AS REAL))AND(CASE 0.9607984389701553  WHEN vt0.c1 THEN v0.c0 END)))AND((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (~ ((('-425988749') NOT BETWEEN (COUNT(*)) AND (vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT ((~ ((('-425988749') NOT BETWEEN (COUNT(*)) AND (vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (((~ ((('-425988749') NOT BETWEEN (COUNT(*)) AND (vt0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (~ ((('-425988749') NOT BETWEEN (COUNT(*)) AND (vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT ((~ ((('-425988749') NOT BETWEEN (COUNT(*)) AND (vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (((~ ((('-425988749') NOT BETWEEN (COUNT(*)) AND (vt0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE (HEX(DISTINCT JULIANDAY(vt0.c1, NULL, 1.79860665E8))) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT (HEX(DISTINCT JULIANDAY(vt0.c1, NULL, 1.79860665E8))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((HEX(DISTINCT JULIANDAY(vt0.c1, NULL, 1.79860665E8))) ISNULL));
SELECT vt0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((~ ((- (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((~ ((- (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((~ ((- (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, vt0, v0 GROUP BY v0.c0 HAVING MAX((((COUNT(vt0.c0))) BETWEEN ((TOTAL(vt0.c0))) AND ((vt0.c1)))) UNION ALL SELECT v0.c0 FROM vt1, vt0, v0 GROUP BY v0.c0 HAVING (NOT (MAX((((COUNT(vt0.c0))) BETWEEN ((TOTAL(vt0.c0))) AND ((vt0.c1)))))) UNION ALL SELECT v0.c0 FROM vt1, vt0, v0 GROUP BY v0.c0 HAVING ((MAX((((COUNT(vt0.c0))) BETWEEN ((TOTAL(vt0.c0))) AND ((vt0.c1))))) ISNULL);
SELECT SUM((CAST(vt0.c1 AS BLOB) IN ())) FROM vt0, v0;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0))=((vt1.c0))))AND(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))AND(((0X6baded8e) BETWEEN (vt1.c0) AND (vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((((vt1.c0))=((vt1.c0))))AND(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))AND(((0x6baded8e) BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((((((vt1.c0))=((vt1.c0))))AND(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))AND(((0x6baded8e) BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM v0 CROSS JOIN vt1 ON (((x'')) BETWEEN (((((v0.c0))<=((vt1.c0))))) AND ((v0.c0 COLLATE BINARY)));
SELECT DISTINCT * FROM v0 CROSS JOIN vt1 ON (((x'')) BETWEEN (((((v0.c0))<=((vt1.c0))))) AND ((v0.c0 COLLATE BINARY))) WHERE ((((((~ (vt1.c0)))OR(((v0.c0)IS NOT(vt1.c0)))))OR(json_insert(v0.c0, vt1.c0, v0.c0)))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN vt1 ON (((x'')) BETWEEN (((((v0.c0))<=((vt1.c0))))) AND ((v0.c0 COLLATE BINARY))) WHERE ((NOT ((((((~ (vt1.c0)))OR(((v0.c0)IS NOT(vt1.c0)))))OR(json_insert(v0.c0, vt1.c0, v0.c0)))))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN vt1 ON (((x'')) BETWEEN (((((v0.c0))<=((vt1.c0))))) AND ((v0.c0 COLLATE BINARY))) WHERE ((((((((~ (vt1.c0)))OR(((v0.c0)IS NOT(vt1.c0)))))OR(json_insert(v0.c0, vt1.c0, v0.c0)))) ISNULL));
SELECT ALL vt0.c0, vt0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1, v0.c0;
SELECT ALL vt0.c0, vt0.c1, v0.c0 FROM v0, vt0 WHERE (vt0.c1) GROUP BY vt0.c0, vt0.c1, v0.c0 UNION SELECT ALL vt0.c0, vt0.c1, v0.c0 FROM v0, vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c0, vt0.c1, v0.c0 UNION SELECT vt0.c0, vt0.c1, v0.c0 FROM v0, vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c0, vt0.c1, v0.c0;
SELECT ALL vt0.c0, vt0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1, v0.c0;
SELECT ALL vt0.c1, vt1.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1, vt1.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, vt1.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1, vt1.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, vt1.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt1.c0;
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM vt0, v0;
SELECT vt0.c0, v0.c0, vt0.c1 FROM vt0, v0 WHERE (CAST(vt0.c1 AS NUMERIC)) UNION ALL SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM vt0, v0 WHERE ((NOT (CAST(vt0.c1 AS NUMERIC)))) UNION ALL SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM vt0, v0 WHERE (((CAST(vt0.c1 AS NUMERIC)) ISNULL));
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM vt0, v0;
SELECT DISTINCT vt1.c0, vt0.c1 FROM vt0 INNER JOIN vt1 ON CAST(vt1.c0 AS BLOB);
SELECT DISTINCT vt1.c0, vt0.c1 FROM vt0 INNER JOIN vt1 ON CAST(vt1.c0 AS BLOB) WHERE (x'') UNION SELECT DISTINCT vt1.c0, vt0.c1 FROM vt0 INNER JOIN vt1 ON CAST(vt1.c0 AS BLOB) WHERE ((NOT (x''))) UNION SELECT DISTINCT vt1.c0, vt0.c1 FROM vt0 INNER JOIN vt1 ON CAST(vt1.c0 AS BLOB) WHERE (((x'') ISNULL));
SELECT DISTINCT vt1.c0, vt0.c1 FROM vt0 INNER JOIN vt1 ON CAST(vt1.c0 AS BLOB);
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 NOT INDEXED, v0 GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0, v0 WHERE (LIKELIHOOD(vt0.c0, 0.24983695673933526) COLLATE NOCASE) GROUP BY vt1.c0, vt0.c0, vt0.c1 UNION SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0, v0 WHERE ((NOT (LIKELIHOOD(vt0.c0, 0.24983695673933526) COLLATE NOCASE))) GROUP BY vt1.c0, vt0.c0, vt0.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0, v0 WHERE (((LIKELIHOOD(vt0.c0, 0.24983695673933526) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 NOT INDEXED, v0 GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt0.c1 FROM vt0, v0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, v0 GROUP BY vt0.c1 HAVING CASE LIKE(SUM(COUNT(COUNT(*))), v0.c0)  WHEN GROUP_CONCAT(GROUP_CONCAT(0.9539950031304052)) THEN ((AVG(v0.c0)) BETWEEN (MIN(COUNT(v0.c0))) AND (v0.c0)) END UNION ALL SELECT vt0.c1 FROM vt0, v0 GROUP BY vt0.c1 HAVING (NOT (CASE LIKE(SUM(COUNT(COUNT(*))), v0.c0)  WHEN GROUP_CONCAT(GROUP_CONCAT(0.9539950031304052)) THEN ((AVG(v0.c0)) BETWEEN (MIN(COUNT(v0.c0))) AND (v0.c0)) END)) UNION ALL SELECT vt0.c1 FROM vt0, v0 GROUP BY vt0.c1 HAVING ((CASE LIKE(SUM(COUNT(COUNT(*))), v0.c0)  WHEN GROUP_CONCAT(GROUP_CONCAT(0.9539950031304052)) THEN ((AVG(v0.c0)) BETWEEN (MIN(COUNT(v0.c0))) AND (v0.c0)) END) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)<<(vt0.c0)) COLLATE RTRIM) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c0)<<(vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0, v0, vt1;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0, v0, vt1 WHERE (((((vt0.c0)>(vt0.c1))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (v0.c0))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0, v0, vt1 WHERE ((NOT (((((vt0.c0)>(vt0.c1))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (v0.c0))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0, v0, vt1 WHERE (((((((vt0.c0)>(vt0.c1))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (v0.c0))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0, v0, vt1;
SELECT vt1.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt1, vt0 WHERE (vt0.c1) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM v0, vt1, vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM v0, vt1, vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING AVG(CASE COUNT(COUNT(MAX(vt0.c0)))  WHEN MIN(vt0.c0) THEN TOTAL(TOTAL(vt0.c0)) WHEN COUNT(*) THEN COUNT(*) WHEN SUM(vt0.c1) THEN vt0.c0 ELSE TOTAL(MIN(vt0.c1)) END) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (AVG(CASE COUNT(COUNT(MAX(vt0.c0)))  WHEN MIN(vt0.c0) THEN TOTAL(TOTAL(vt0.c0)) WHEN COUNT(*) THEN COUNT(*) WHEN SUM(vt0.c1) THEN vt0.c0 ELSE TOTAL(MIN(vt0.c1)) END))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG(CASE COUNT(COUNT(MAX(vt0.c0)))  WHEN MIN(vt0.c0) THEN TOTAL(TOTAL(vt0.c0)) WHEN COUNT(*) THEN COUNT(*) WHEN SUM(vt0.c1) THEN vt0.c0 ELSE TOTAL(MIN(vt0.c1)) END)) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(v0.c0 AS BLOB) COLLATE BINARY) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(v0.c0 AS BLOB) COLLATE BINARY))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS BLOB) COLLATE BINARY) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (TRIM(DISTINCT ABS(DISTINCT vt0.c0), ((vt0.c1) IS FALSE))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (TRIM(DISTINCT ABS(DISTINCT vt0.c0), ((vt0.c1) IS FALSE))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((TRIM(DISTINCT ABS(DISTINCT vt0.c0), ((vt0.c1) IS FALSE))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 WHERE (NULLIF(MIN(vt0.c1, vt0.c1), (vt0.c0 IN ()))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0, v0 WHERE ((NOT (NULLIF(MIN(vt0.c1, vt0.c1), (vt0.c0 IN ()))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0, v0 WHERE (((NULLIF(MIN(vt0.c1, vt0.c1), (vt0.c0 IN ()))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c1, vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c1, vt0.c0, vt1.c0;
SELECT v0.c0, vt0.c1, vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c1, vt0.c0, vt1.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0, vt0.c1, vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c1, vt0.c0, vt1.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0, vt0.c1, vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c1, vt0.c0, vt1.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0, vt0.c1, vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c1, vt0.c0, vt1.c0;
SELECT v0.c0, vt0.c1, vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c1, vt0.c0, vt1.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0, vt0.c1, vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c1, vt0.c0, vt1.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0, vt0.c1, vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c1, vt0.c0, vt1.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0, vt0.c1, vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c1, vt0.c0, vt1.c0;
SELECT MAX(((((((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))OR(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)))AND((+ (vt0.c0)))))AND(((vt1.c0)&(vt1.c0)))))OR(((vt0.c1)<=(vt0.c0))))) FROM vt1, vt0 ORDER BY NULLIF(DISTINCT CAST(5.86908484E8 AS BLOB), vt0.c1)  NULLS FIRST;
SELECT ALL * FROM vt0, vt1, v0;
SELECT ALL * FROM vt0, vt1, v0 WHERE ((((~ (v0.c0)))GLOB(((vt1.c0) IS TRUE)))) UNION ALL SELECT ALL * FROM vt0, vt1, v0 WHERE ((NOT ((((~ (v0.c0)))GLOB(((vt1.c0) IS TRUE)))))) UNION ALL SELECT * FROM vt0, vt1, v0 WHERE ((((((~ (v0.c0)))GLOB(((vt1.c0) IS TRUE)))) ISNULL));
SELECT ALL * FROM vt0, vt1, v0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((NOT (vt0.c1)) IN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((NOT (vt0.c1)) IN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((NOT (vt0.c1)) IN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT v0.c0, vt0.c1 FROM vt1, vt0 LEFT OUTER JOIN v0 ON LTRIM(LIKELY(DISTINCT vt1.c0), ((vt1.c0)GLOB(vt0.c0))) GROUP BY v0.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c1 FROM vt1, vt0 LEFT OUTER JOIN v0 ON LTRIM(LIKELY(DISTINCT vt1.c0), ((vt1.c0)GLOB(vt0.c0))) WHERE (((vt0.c1)>=(v0.c0)) COLLATE NOCASE) GROUP BY v0.c0, vt0.c1 UNION SELECT v0.c0, vt0.c1 FROM vt1, vt0 LEFT OUTER JOIN v0 ON LTRIM(LIKELY(DISTINCT vt1.c0), ((vt1.c0)GLOB(vt0.c0))) WHERE ((NOT (((vt0.c1)>=(v0.c0)) COLLATE NOCASE))) GROUP BY v0.c0, vt0.c1 UNION SELECT ALL v0.c0, vt0.c1 FROM vt1, vt0 LEFT OUTER JOIN v0 ON LTRIM(LIKELY(DISTINCT vt1.c0), ((vt1.c0)GLOB(vt0.c0))) WHERE (((((vt0.c1)>=(v0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0, vt0.c1;
SELECT v0.c0, vt0.c1 FROM vt1, vt0 LEFT OUTER JOIN v0 ON LTRIM(LIKELY(DISTINCT vt1.c0), ((vt1.c0)GLOB(vt0.c0))) GROUP BY v0.c0, vt0.c1;
SELECT vt1.c0 FROM v0 INNER JOIN vt0 ON (((vt1.c0)LIKE(vt0.c0)) IN (CAST(v0.c0 AS TEXT), ((vt0.c1) BETWEEN (vt0.c0) AND (v0.c0)))) RIGHT OUTER JOIN vt1 ON ((SQLITE_SOURCE_ID()) ISNULL) GROUP BY vt1.c0;
SELECT ALL * FROM vt1, v0, vt0;
SELECT * FROM vt1, v0, vt0 WHERE (((vt0.c1) NOTNULL)) UNION ALL SELECT * FROM vt1, v0, vt0 WHERE ((NOT (((vt0.c1) NOTNULL)))) UNION ALL SELECT * FROM vt1, v0, vt0 WHERE (((((vt0.c1) NOTNULL)) ISNULL));
SELECT ALL * FROM vt1, v0, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON (vt0.c0 IN ());
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON (vt0.c0 IN ()) WHERE (((((((((((vt0.c1)AND(vt0.c0)))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((vt0.c0)<(vt1.c0)))))AND(455858769))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON (vt0.c0 IN ()) WHERE ((NOT (((((((((((vt0.c1)AND(vt0.c0)))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((vt0.c0)<(vt1.c0)))))AND(455858769))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON (vt0.c0 IN ()) WHERE (((((((((((((vt0.c1)AND(vt0.c0)))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((vt0.c0)<(vt1.c0)))))AND(455858769))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON (vt0.c0 IN ());
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST((+ (vt1.c0)) AS INTEGER)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST((+ (vt1.c0)) AS INTEGER)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CAST((+ (vt1.c0)) AS INTEGER)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM vt1 CROSS JOIN vt0 ON ((CASE WHEN vt1.c0 THEN vt0.c1 ELSE v0.c0 END) BETWEEN (CASE WHEN 0.07059846965944638 THEN v0.c0 END) AND (IFNULL(DISTINCT v0.c0, vt0.c1))) FULL OUTER JOIN v0 ON ((((v0.c0)LIKE(vt1.c0)))|(LIKELIHOOD(DISTINCT vt0.c0, 0.5430446973174107))) GROUP BY vt1.c0, vt0.c0, v0.c0, vt0.c1;
SELECT ALL * FROM vt1, v0, vt0;
SELECT * FROM vt1, v0, vt0 WHERE (CASE WHEN NULL THEN (((vt1.c0)) BETWEEN ((vt0.c1)) AND ((v0.c0))) WHEN SQLITE_COMPILEOPTION_USED(vt1.c0) THEN ((vt0.c1)>(NULL)) WHEN ((vt1.c0) BETWEEN (vt0.c1) AND (v0.c0)) THEN CAST(vt0.c0 AS BLOB) ELSE ((v0.c0)GLOB(x'8d59')) END) UNION ALL SELECT ALL * FROM vt1, v0, vt0 WHERE ((NOT (CASE WHEN NULL THEN (((vt1.c0)) BETWEEN ((vt0.c1)) AND ((v0.c0))) WHEN SQLITE_COMPILEOPTION_USED(vt1.c0) THEN ((vt0.c1)>(NULL)) WHEN ((vt1.c0) BETWEEN (vt0.c1) AND (v0.c0)) THEN CAST(vt0.c0 AS BLOB) ELSE ((v0.c0)GLOB(x'8d59')) END))) UNION ALL SELECT * FROM vt1, v0, vt0 WHERE (((CASE WHEN NULL THEN (((vt1.c0)) BETWEEN ((vt0.c1)) AND ((v0.c0))) WHEN SQLITE_COMPILEOPTION_USED(vt1.c0) THEN ((vt0.c1)>(NULL)) WHEN ((vt1.c0) BETWEEN (vt0.c1) AND (v0.c0)) THEN CAST(vt0.c0 AS BLOB) ELSE ((v0.c0)GLOB(x'8d59')) END) ISNULL));
SELECT ALL * FROM vt1, v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt1, v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt1, v0, vt0 WHERE (((('742302717'))>=(((((v0.c0, vt1.c0, vt0.c0))<((v0.c0, vt0.c1, vt0.c0))))))) UNION SELECT DISTINCT v0.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt1, v0, vt0 WHERE ((NOT (((('742302717'))>=(((((v0.c0, vt1.c0, vt0.c0))<((v0.c0, vt0.c1, vt0.c0))))))))) UNION SELECT DISTINCT v0.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt1, v0, vt0 WHERE (((((('742302717'))>=(((((v0.c0, vt1.c0, vt0.c0))<((v0.c0, vt0.c1, vt0.c0))))))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt1, v0, vt0;
SELECT ALL v0.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt1, v0, vt0 GROUP BY v0.c0, vt0.c0, vt0.c1, vt1.c0;
SELECT ALL v0.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt1, v0, vt0 WHERE (((CAST(vt0.c0 AS REAL))==((((NULL, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, x'e8a4')) AND ((NULL, vt0.c1, vt0.c1)))))) GROUP BY v0.c0, vt0.c0, vt0.c1, vt1.c0 UNION SELECT v0.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt1, v0, vt0 WHERE ((NOT (((CAST(vt0.c0 AS REAL))=((((NULL, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, x'e8a4')) AND ((NULL, vt0.c1, vt0.c1)))))))) GROUP BY v0.c0, vt0.c0, vt0.c1, vt1.c0 UNION SELECT ALL v0.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt1, v0, vt0 WHERE (((((CAST(vt0.c0 AS REAL))==((((NULL, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, x'e8a4')) AND ((NULL, vt0.c1, vt0.c1)))))) ISNULL)) GROUP BY v0.c0, vt0.c0, vt0.c1, vt1.c0;
SELECT ALL v0.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt1, v0, vt0 GROUP BY v0.c0, vt0.c0, vt0.c1, vt1.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING (GROUP_CONCAT(SUM(MIN(TOTAL(MAX(vt1.c0))))) IN ()) UNION ALL SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING (NOT ((GROUP_CONCAT(SUM(MIN(TOTAL(MAX(vt1.c0))))) IN ()))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING (((GROUP_CONCAT(SUM(MIN(TOTAL(MAX(vt1.c0))))) IN ())) ISNULL);
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING (GROUP_CONCAT(SUM(MIN(TOTAL(MAX(vt1.c0))))) IN ()) UNION ALL SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING (NOT ((GROUP_CONCAT(SUM(MIN(TOTAL(MAX(vt1.c0))))) IN ()))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING (((GROUP_CONCAT(SUM(MIN(TOTAL(MAX(vt1.c0))))) IN ())) ISNULL);
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((((vt0.c1) NOTNULL), UPPER(vt0.c1), (((vt0.c0))<=((vt0.c0)))))>((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END, (vt0.c1 IN ()), ((vt0.c0)>(vt0.c1)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((((vt0.c1) NOTNULL), UPPER(vt0.c1), (((vt0.c0))<=((vt0.c0)))))>((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END, (vt0.c1 IN ()), ((vt0.c0)>(vt0.c1)))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((((vt0.c1) NOTNULL), UPPER(vt0.c1), (((vt0.c0))<=((vt0.c0)))))>((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END, (vt0.c1 IN ()), ((vt0.c0)>(vt0.c1)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0)) BETWEEN ((v0.c0)) AND ((((x'')%(v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((v0.c0)) AND ((((x'')%(v0.c0)))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((((x'')%(v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c1, v0.c0 FROM vt0, vt1, v0 GROUP BY vt0.c1, v0.c0;
SELECT ALL vt0.c1, v0.c0 FROM vt0, vt1, v0 WHERE (((0.2737086364303787)>=(((vt0.c1)OR(vt0.c0))))) GROUP BY vt0.c1, v0.c0 UNION SELECT vt0.c1, v0.c0 FROM vt0, vt1, v0 WHERE ((NOT (((0.2737086364303787)>=(((vt0.c1)OR(vt0.c0))))))) GROUP BY vt0.c1, v0.c0 UNION SELECT ALL vt0.c1, v0.c0 FROM vt0, vt1, v0 WHERE (((((0.2737086364303787)>=(((vt0.c1)OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c1, v0.c0;
SELECT ALL vt0.c1, v0.c0 FROM vt0, vt1, v0 GROUP BY vt0.c1, v0.c0;
SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT * FROM vt0, vt1, v0;
SELECT ALL * FROM vt0, vt1, v0 WHERE (((vt0.c1) NOT BETWEEN (((vt0.c0)-(v0.c0))) AND ((- (vt0.c1))))) UNION ALL SELECT * FROM vt0, vt1, v0 WHERE ((NOT (((vt0.c1) NOT BETWEEN (((vt0.c0)-(v0.c0))) AND ((- (vt0.c1))))))) UNION ALL SELECT ALL * FROM vt0, vt1, v0 WHERE (((((vt0.c1) NOT BETWEEN (((vt0.c0)-(v0.c0))) AND ((- (vt0.c1))))) ISNULL));
SELECT * FROM vt0, vt1, v0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0)||(vt1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)||(vt1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0)||(vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c1 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON vt0.c0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON vt0.c0 WHERE (((((vt0.c1) NOTNULL)) NOTNULL)) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON vt0.c0 WHERE ((NOT (((((vt0.c1) NOTNULL)) NOTNULL)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON vt0.c0 WHERE (((((((vt0.c1) NOTNULL)) NOTNULL)) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON vt0.c0 GROUP BY vt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((v0.c0)=(v0.c0)))OR(SUM(MIN(TOTAL(v0.c0))))))OR(TYPEOF(COUNT(GROUP_CONCAT(MIN(COUNT(*))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((((v0.c0)=(v0.c0)))OR(SUM(MIN(TOTAL(v0.c0))))))OR(TYPEOF(COUNT(GROUP_CONCAT(MIN(COUNT(*))))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((v0.c0)=(v0.c0)))OR(SUM(MIN(TOTAL(v0.c0))))))OR(TYPEOF(COUNT(GROUP_CONCAT(MIN(COUNT(*)))))))) ISNULL);
SELECT MAX(v0.c0) FROM vt1, v0 ORDER BY (((vt1.c0)<(v0.c0)) IN ()) DESC  NULLS LAST;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((vt0.c0) ISNULL))*(CAST(x'b507' AS TEXT)))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (((((vt0.c0) ISNULL))*(CAST(x'b507' AS TEXT)))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((((vt0.c0) ISNULL))*(CAST(x'b507' AS TEXT)))) ISNULL));
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON vt0.c0;
SELECT DISTINCT vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON vt0.c0 WHERE ('-1925159586') UNION SELECT DISTINCT vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON vt0.c0 WHERE ((NOT ('-1925159586'))) UNION SELECT DISTINCT vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON vt0.c0 WHERE ((('-1925159586') ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON vt0.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((+ (CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 END))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((+ (CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 END))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((+ (CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 END))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt1.c0, v0.c0;
SELECT vt0.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt1.c0, v0.c0 HAVING COUNT(CASE WHEN vt1.c0 THEN v0.c0 ELSE NULL END) UNION ALL SELECT ALL vt0.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt1.c0, v0.c0 HAVING (NOT (COUNT(CASE WHEN vt1.c0 THEN v0.c0 ELSE NULL END))) UNION ALL SELECT ALL vt0.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt1.c0, v0.c0 HAVING ((COUNT(CASE WHEN vt1.c0 THEN v0.c0 ELSE NULL END)) ISNULL);
SELECT vt0.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt1.c0, v0.c0;
SELECT vt0.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt1.c0, v0.c0 HAVING COUNT(CASE WHEN vt1.c0 THEN v0.c0 ELSE NULL END) UNION ALL SELECT ALL vt0.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt1.c0, v0.c0 HAVING (NOT (COUNT(CASE WHEN vt1.c0 THEN v0.c0 ELSE NULL END))) UNION ALL SELECT ALL vt0.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt1.c0, v0.c0 HAVING ((COUNT(CASE WHEN vt1.c0 THEN v0.c0 ELSE NULL END)) ISNULL);
SELECT vt0.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt1.c0, v0.c0;
SELECT vt0.c1 FROM v0 NOT INDEXED, vt0;
SELECT vt0.c1 FROM v0, vt0 WHERE ((~ (((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))))) UNION ALL SELECT ALL vt0.c1 FROM v0, vt0 WHERE ((NOT ((~ (((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))))))) UNION ALL SELECT ALL vt0.c1 FROM v0, vt0 WHERE ((((~ (((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))))) ISNULL));
SELECT vt0.c1 FROM v0 NOT INDEXED, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (x'') UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM vt1 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 WHERE ((v0.c0 COLLATE RTRIM IN (((vt1.c0)>(v0.c0)), (vt1.c0 IN ())))) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM vt1, v0 WHERE ((NOT ((v0.c0 COLLATE RTRIM IN (((vt1.c0)>(v0.c0)), (vt1.c0 IN ())))))) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM vt1, v0 WHERE ((((v0.c0 COLLATE RTRIM IN (((vt1.c0)>(v0.c0)), (vt1.c0 IN ())))) ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT vt0.c0, vt0.c1 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt0.c1 HAVING TOTAL(AVG(vt0.c1)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (TOTAL(AVG(vt0.c1)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((TOTAL(AVG(vt0.c1))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>>(((vt1.c0)AND(vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>>(((vt1.c0)AND(vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>>(((vt1.c0)AND(vt1.c0))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT v0.c0 FROM vt1 NATURAL JOIN v0;
SELECT DISTINCT v0.c0 FROM vt1 NATURAL JOIN v0 WHERE ((((v0.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((- (v0.c0)), ((((((((v0.c0)OR(vt1.c0)))AND(v0.c0)))AND(v0.c0)))OR('')), CASE WHEN vt1.c0 THEN v0.c0 END)) AND ((CAST(vt1.c0 AS NUMERIC), ((v0.c0) IS TRUE), (vt1.c0 IN (v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM vt1 NATURAL JOIN v0 WHERE ((NOT ((((v0.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((- (v0.c0)), ((((((((v0.c0)OR(vt1.c0)))AND(v0.c0)))AND(v0.c0)))OR('')), CASE WHEN vt1.c0 THEN v0.c0 END)) AND ((CAST(vt1.c0 AS NUMERIC), ((v0.c0) IS TRUE), (vt1.c0 IN (v0.c0)))))))) UNION SELECT DISTINCT v0.c0 FROM vt1 NATURAL JOIN v0 WHERE ((((((v0.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((- (v0.c0)), ((((((((v0.c0)OR(vt1.c0)))AND(v0.c0)))AND(v0.c0)))OR('')), CASE WHEN vt1.c0 THEN v0.c0 END)) AND ((CAST(vt1.c0 AS NUMERIC), ((v0.c0) IS TRUE), (vt1.c0 IN (v0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM vt1 NATURAL JOIN v0;
SELECT vt0.c0, v0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON CAST(((v0.c0)GLOB(NULL)) AS TEXT) GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT vt0.c0, v0.c0, vt0.c1 FROM v0 NOT INDEXED LEFT OUTER JOIN vt0 ON CAST(((v0.c0)GLOB(NULL)) AS TEXT) WHERE (0Xffffffffa68da373) GROUP BY vt0.c0, v0.c0, vt0.c1 UNION SELECT vt0.c0, v0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON CAST(((v0.c0)GLOB(NULL)) AS TEXT) WHERE ((NOT (0Xffffffffa68da373))) GROUP BY vt0.c0, v0.c0, vt0.c1 UNION SELECT vt0.c0, v0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON CAST(((v0.c0)GLOB(NULL)) AS TEXT) WHERE (((0Xffffffffa68da373) ISNULL)) GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT vt0.c0, v0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON CAST(((v0.c0)GLOB(NULL)) AS TEXT) GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT ALL vt0.c1 FROM v0, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM v0, vt0 GROUP BY vt0.c1 HAVING ((((((vt0.c0)OR('	')))AND(MAX(GROUP_CONCAT(COUNT(COUNT(v0.c0))))))) NOTNULL) UNION ALL SELECT vt0.c1 FROM v0, vt0 GROUP BY vt0.c1 HAVING (NOT (((((((vt0.c0)OR('	')))AND(MAX(GROUP_CONCAT(COUNT(COUNT(v0.c0))))))) NOTNULL))) UNION ALL SELECT vt0.c1 FROM v0, vt0 GROUP BY vt0.c1 HAVING ((((((((vt0.c0)OR('	')))AND(MAX(GROUP_CONCAT(COUNT(COUNT(v0.c0))))))) NOTNULL)) ISNULL);
SELECT vt0.c1, v0.c0, vt0.c0 FROM vt0, v0;
SELECT vt0.c1, v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))) NOT NULL)) UNION ALL SELECT vt0.c1, v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))) NOT NULL)))) UNION ALL SELECT vt0.c1, v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))) NOT NULL)) ISNULL));
SELECT vt0.c1, v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (((v0.c0 COLLATE RTRIM) IS TRUE)) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE ((NOT (((v0.c0 COLLATE RTRIM) IS TRUE)))) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (((((v0.c0 COLLATE RTRIM) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0 COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0 COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING MIN(SUM(vt0.c0)) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING (NOT (MIN(SUM(vt0.c0)))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING ((MIN(SUM(vt0.c0))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c1) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM v0, vt1, vt0;
SELECT DISTINCT * FROM v0, vt1, vt0 WHERE (vt0.c0 COLLATE BINARY COLLATE BINARY COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0, vt1, vt0 WHERE ((NOT (vt0.c0 COLLATE BINARY COLLATE BINARY COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0, vt1, vt0 WHERE (((vt0.c0 COLLATE BINARY COLLATE BINARY COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0, vt1, vt0;
SELECT ALL v0.c0, vt0.c1 FROM vt0, v0, vt1 GROUP BY v0.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c1 FROM vt0, v0, vt1 WHERE (((((NULLIF(vt0.c0, vt0.c1))OR(vt0.c1)))OR(((v0.c0)LIKE(vt1.c0))))) GROUP BY v0.c0, vt0.c1 UNION SELECT v0.c0, vt0.c1 FROM vt0, v0, vt1 WHERE ((NOT (((((NULLIF(vt0.c0, vt0.c1))OR(vt0.c1)))OR(((v0.c0)LIKE(vt1.c0))))))) GROUP BY v0.c0, vt0.c1 UNION SELECT v0.c0, vt0.c1 FROM vt0, v0, vt1 WHERE (((((((NULLIF(vt0.c0, vt0.c1))OR(vt0.c1)))OR(((v0.c0)LIKE(vt1.c0))))) ISNULL)) GROUP BY v0.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c1 FROM vt0, v0, vt1 GROUP BY v0.c0, vt0.c1;
SELECT v0.c0 FROM vt0, v0 FULL OUTER JOIN vt1 ON x'' GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 FULL OUTER JOIN vt1 ON x'' GROUP BY v0.c0 HAVING SUM(((v0.c0)<<(COUNT(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT v0.c0 FROM vt0, v0 FULL OUTER JOIN vt1 ON x'' GROUP BY v0.c0 HAVING (NOT (SUM(((v0.c0)<<(COUNT(GROUP_CONCAT(COUNT(*)))))))) UNION ALL SELECT v0.c0 FROM vt0, v0 FULL OUTER JOIN vt1 ON x'' GROUP BY v0.c0 HAVING ((SUM(((v0.c0)<<(COUNT(GROUP_CONCAT(COUNT(*))))))) ISNULL);
SELECT ALL v0.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN v0 ON ((TYPEOF(DISTINCT vt1.c0))%(((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))) FULL OUTER JOIN vt0 ON x'';
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (LIKELIHOOD(DISTINCT json_object(vt0.c0, vt0.c0, vt0.c0, vt0.c0), 0.7818649419814552)) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (LIKELIHOOD(DISTINCT json_object(vt0.c0, vt0.c0, vt0.c0, vt0.c0), 0.7818649419814552)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((LIKELIHOOD(DISTINCT json_object(vt0.c0, vt0.c0, vt0.c0, vt0.c0), 0.7818649419814552)) ISNULL));
SELECT ALL vt0.c0, vt0.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt0.c1, vt1.c0, v0.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 WHERE (CASE (vt1.c0 IN (vt1.c0))  WHEN ((vt0.c1) NOT BETWEEN (0.795564629150288) AND (vt0.c1)) THEN (v0.c0 IN ()) END) GROUP BY vt0.c0, vt0.c1, vt1.c0, v0.c0 UNION SELECT ALL vt0.c0, vt0.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 WHERE ((NOT (CASE (vt1.c0 IN (vt1.c0))  WHEN ((vt0.c1) NOT BETWEEN (0.795564629150288) AND (vt0.c1)) THEN (v0.c0 IN ()) END))) GROUP BY vt0.c0, vt0.c1, vt1.c0, v0.c0 UNION SELECT vt0.c0, vt0.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 WHERE (((CASE (vt1.c0 IN (vt1.c0))  WHEN ((vt0.c1) NOT BETWEEN (0.795564629150288) AND (vt0.c1)) THEN (v0.c0 IN ()) END) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt1.c0, v0.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt0.c1, vt1.c0, v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING MIN(AVG(MIN(SUM(MAX(MIN(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (MIN(AVG(MIN(SUM(MAX(MIN(v0.c0)))))))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((MIN(AVG(MIN(SUM(MAX(MIN(v0.c0))))))) ISNULL);
SELECT * FROM vt1, v0, vt0;
SELECT * FROM vt1, v0, vt0 WHERE ('W砞') UNION ALL SELECT ALL * FROM vt1, v0, vt0 WHERE ((NOT ('W砞'))) UNION ALL SELECT ALL * FROM vt1, v0, vt0 WHERE ((('W砞') ISNULL));
SELECT * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (((((vt0.c1)+(vt0.c1)))<=(((v0.c0)/(vt0.c1))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (((((vt0.c1)+(vt0.c1)))<=(((v0.c0)/(vt0.c1))))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((((((vt0.c1)+(vt0.c1)))<=(((v0.c0)/(vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (SQLITE_SOURCE_ID()) GROUP BY vt0.c1, vt1.c0, vt0.c0 UNION SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (SQLITE_SOURCE_ID()))) GROUP BY vt0.c1, vt1.c0, vt0.c0 UNION SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((SQLITE_SOURCE_ID()) ISNULL)) GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING GROUP_CONCAT(((v0.c0)/(SUM(v0.c0)))) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(((v0.c0)/(SUM(v0.c0)))))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING ((GROUP_CONCAT(((v0.c0)/(SUM(v0.c0))))) ISNULL);
SELECT TOTAL(CAST(vt1.c0 COLLATE BINARY AS NUMERIC)) FROM vt1, v0;
SELECT ALL * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT vt0.c1, vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON ((~ (vt0.c1)) IN ());
SELECT DISTINCT vt0.c1, vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON ((~ (vt0.c1)) IN ()) WHERE (CAST((+ (vt0.c1)) AS BLOB)) UNION SELECT DISTINCT vt0.c1, vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON ((~ (vt0.c1)) IN ()) WHERE ((NOT (CAST((+ (vt0.c1)) AS BLOB)))) UNION SELECT DISTINCT vt0.c1, vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON ((~ (vt0.c1)) IN ()) WHERE (((CAST((+ (vt0.c1)) AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c1, vt1.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON ((~ (vt0.c1)) IN ());
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE BINARY)AND(CAST(v0.c0 AS NUMERIC))))AND(v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0 COLLATE BINARY)AND(CAST(v0.c0 AS NUMERIC))))AND(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0 COLLATE BINARY)AND(CAST(v0.c0 AS NUMERIC))))AND(v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c1 FROM vt1 RIGHT OUTER JOIN v0 ON NULL INNER JOIN vt0 ON CAST(((vt0.c0) IS TRUE) AS TEXT) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1 RIGHT OUTER JOIN v0 ON NULL INNER JOIN vt0 ON CAST(((vt0.c0) IS TRUE) AS TEXT) GROUP BY vt0.c1 HAVING MIN(vt1.c0) UNION ALL SELECT vt0.c1 FROM vt1 RIGHT OUTER JOIN v0 ON NULL INNER JOIN vt0 ON CAST(((vt0.c0) IS TRUE) AS TEXT) GROUP BY vt0.c1 HAVING (NOT (MIN(vt1.c0))) UNION ALL SELECT vt0.c1 FROM vt1 RIGHT OUTER JOIN v0 ON NULL INNER JOIN vt0 ON CAST(((vt0.c0) IS TRUE) AS TEXT) GROUP BY vt0.c1 HAVING ((MIN(vt1.c0)) ISNULL);
SELECT vt0.c1 FROM vt1 RIGHT OUTER JOIN v0 ON NULL INNER JOIN vt0 ON CAST(((vt0.c0) IS TRUE) AS TEXT) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1 RIGHT OUTER JOIN v0 ON NULL INNER JOIN vt0 ON CAST(((vt0.c0) IS TRUE) AS TEXT) GROUP BY vt0.c1 HAVING MIN(vt1.c0) UNION ALL SELECT vt0.c1 FROM vt1 RIGHT OUTER JOIN v0 ON NULL INNER JOIN vt0 ON CAST(((vt0.c0) IS TRUE) AS TEXT) GROUP BY vt0.c1 HAVING (NOT (MIN(vt1.c0))) UNION ALL SELECT vt0.c1 FROM vt1 RIGHT OUTER JOIN v0 ON NULL INNER JOIN vt0 ON CAST(((vt0.c0) IS TRUE) AS TEXT) GROUP BY vt0.c1 HAVING ((MIN(vt1.c0)) ISNULL);
SELECT vt0.c1 FROM vt1 RIGHT OUTER JOIN v0 ON NULL INNER JOIN vt0 ON CAST(((vt0.c0) IS TRUE) AS TEXT) GROUP BY vt0.c1;
SELECT ALL vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (~ (((v0.c0) IS TRUE)));
SELECT vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (~ (((v0.c0) IS TRUE))) WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((((v0.c0)>=(v0.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (~ (((v0.c0) IS TRUE))) WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((((v0.c0)>=(v0.c0)))))))) UNION ALL SELECT ALL vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (~ (((v0.c0) IS TRUE))) WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((((v0.c0)>=(v0.c0)))))) ISNULL));
SELECT ALL vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (~ (((v0.c0) IS TRUE)));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((TRIM(DISTINCT vt0.c0))<<('-1637510649'))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((TRIM(DISTINCT vt0.c0))<<('-1637510649'))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((TRIM(DISTINCT vt0.c0))<<('-1637510649'))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt1.c0, vt0.c1, v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON ((((((((((((vt0.c1)OR(v0.c0)))OR(vt0.c1)))OR(0X5b82483d)))OR(v0.c0)))AND((vt0.c0 IN (vt1.c0)))))AND(CASE vt0.c1  WHEN vt0.c1 THEN v0.c0 ELSE v0.c0 END)) INNER JOIN vt0 ON ((vt0.c0) BETWEEN (((v0.c0)<>(v0.c0))) AND (((vt1.c0)+(NULL)))) GROUP BY vt0.c0, vt1.c0, vt0.c1, v0.c0;
SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt1.c0 HAVING (+ (SUM(v0.c0))) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt1.c0 HAVING (NOT ((+ (SUM(v0.c0))))) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt1.c0 HAVING (((+ (SUM(v0.c0)))) ISNULL);
SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt1.c0 HAVING (+ (SUM(v0.c0))) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt1.c0 HAVING (NOT ((+ (SUM(v0.c0))))) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt1.c0 HAVING (((+ (SUM(v0.c0)))) ISNULL);
SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt1.c0;
SELECT ALL MIN(CASE WHEN ((vt1.c0)=(vt0.c0)) THEN ((vt1.c0)||(v0.c0)) ELSE UPPER(v0.c0) END) FROM vt1, v0, vt0 ORDER BY ((vt0.c0)AND(NULL)) ASC;
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE CAST(v0.c0 AS TEXT)  WHEN (((v0.c0))>((v0.c0))) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((x'') NOTNULL) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0) BETWEEN ('-1672604189') AND (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((v0.c0)=(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN (((v0.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0))) ELSE ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE CAST(v0.c0 AS TEXT)  WHEN (((v0.c0))>((v0.c0))) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((x'') NOTNULL) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0) BETWEEN ('-1672604189') AND (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((v0.c0)==(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN (((v0.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0))) ELSE ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE CAST(v0.c0 AS TEXT)  WHEN (((v0.c0))>((v0.c0))) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((x'') NOTNULL) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0) BETWEEN ('-1672604189') AND (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((v0.c0)==(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN (((v0.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0))) ELSE ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)AND(v0.c0 COLLATE NOCASE)))OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(x'7ea6')))OR(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)AND(v0.c0 COLLATE NOCASE)))OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(x'7ea6')))OR(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)AND(v0.c0 COLLATE NOCASE)))OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(x'7ea6')))OR(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0 HAVING AVG(TOTAL(MAX(TOTAL(vt0.c0))) COLLATE BINARY) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (AVG(TOTAL(MAX(TOTAL(vt0.c0))) COLLATE BINARY))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0 HAVING ((AVG(TOTAL(MAX(TOTAL(vt0.c0))) COLLATE BINARY)) ISNULL);
SELECT SUM(vt1.c0) FROM vt1 ORDER BY CASE WHEN COALESCE(DISTINCT vt1.c0, vt1.c0) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) END DESC, (vt1.c0 IN ()) COLLATE RTRIM;
SELECT * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM v0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((ABS(DISTINCT vt1.c0))AND(NULL)))OR(((vt1.c0)GLOB(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((ABS(DISTINCT vt1.c0))AND(NULL)))OR(((vt1.c0)GLOB(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((ABS(DISTINCT vt1.c0))AND(NULL)))OR(((vt1.c0)GLOB(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)|(x'' COLLATE BINARY))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE NOCASE)|(x'' COLLATE BINARY))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE NOCASE)|(x'' COLLATE BINARY))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1 CROSS JOIN vt0 ON (((TRIM(vt0.c0)))<=((CAST(vt0.c1 AS INTEGER)))) GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1 CROSS JOIN vt0 ON (((TRIM(vt0.c0)))<=((CAST(vt0.c1 AS INTEGER)))) GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING vt0.c1 UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1 CROSS JOIN vt0 ON (((TRIM(vt0.c0)))<=((CAST(vt0.c1 AS INTEGER)))) GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING (NOT (vt0.c1)) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt1 CROSS JOIN vt0 ON (((TRIM(vt0.c0)))<=((CAST(vt0.c1 AS INTEGER)))) GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING ((vt0.c1) ISNULL);
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1 CROSS JOIN vt0 ON (((TRIM(vt0.c0)))<=((CAST(vt0.c1 AS INTEGER)))) GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1 CROSS JOIN vt0 ON (((TRIM(vt0.c0)))<=((CAST(vt0.c1 AS INTEGER)))) GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING vt0.c1 UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1 CROSS JOIN vt0 ON (((TRIM(vt0.c0)))<=((CAST(vt0.c1 AS INTEGER)))) GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING (NOT (vt0.c1)) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt1 CROSS JOIN vt0 ON (((TRIM(vt0.c0)))<=((CAST(vt0.c1 AS INTEGER)))) GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING ((vt0.c1) ISNULL);
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1 CROSS JOIN vt0 ON (((TRIM(vt0.c0)))<=((CAST(vt0.c1 AS INTEGER)))) GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT ALL MIN(((((((v0.c0)LIKE(vt1.c0)))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))))))AND(v0.c0 COLLATE RTRIM))) FROM vt1, v0, vt0 ORDER BY ((LIKELY(vt0.c1))GLOB('' COLLATE RTRIM)) ASC;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((~ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((~ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((~ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0, vt0.c1, vt0.c0, vt1.c0 FROM vt1, v0, vt0 GROUP BY v0.c0, vt0.c1, vt0.c0, vt1.c0;
SELECT ALL v0.c0, vt0.c1, vt0.c0, vt1.c0 FROM vt1, v0, vt0 WHERE (CAST((((vt0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))) AS INTEGER)) GROUP BY v0.c0, vt0.c1, vt0.c0, vt1.c0 UNION SELECT v0.c0, vt0.c1, vt0.c0, vt1.c0 FROM vt1, v0, vt0 WHERE ((NOT (CAST((((vt0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))) AS INTEGER)))) GROUP BY v0.c0, vt0.c1, vt0.c0, vt1.c0 UNION SELECT v0.c0, vt0.c1, vt0.c0, vt1.c0 FROM vt1, v0, vt0 WHERE (((CAST((((vt0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))) AS INTEGER)) ISNULL)) GROUP BY v0.c0, vt0.c1, vt0.c0, vt1.c0;
SELECT v0.c0, vt0.c1, vt0.c0, vt1.c0 FROM vt1, v0, vt0 GROUP BY v0.c0, vt0.c1, vt0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL MIN((((vt0.c0))>((((vt0.c0) ISNULL))))) FROM vt0, v0;
SELECT * FROM v0 NATURAL JOIN vt0;
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((((NOT (vt0.c1))) NOT NULL)) UNION ALL SELECT * FROM v0 NATURAL JOIN vt0 WHERE ((NOT ((((NOT (vt0.c1))) NOT NULL)))) UNION ALL SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((((((NOT (vt0.c1))) NOT NULL)) ISNULL));
SELECT * FROM v0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((NOT (v0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((NOT (v0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((NOT (v0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE (((CASE v0.c0  WHEN vt0.c1 THEN vt0.c1 END)&(((v0.c0) NOTNULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE ((NOT (((CASE v0.c0  WHEN vt0.c1 THEN vt0.c1 END)&(((v0.c0) NOTNULL)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE (((((CASE v0.c0  WHEN vt0.c1 THEN vt0.c1 END)&(((v0.c0) NOTNULL)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING vt0.c1 UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING (NOT (vt0.c1)) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING ((vt0.c1) ISNULL);
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING vt0.c1 UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING (NOT (vt0.c1)) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING ((vt0.c1) ISNULL);
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))-((v0.c0 IN ())))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))-((v0.c0 IN ())))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))-((v0.c0 IN ())))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt1, v0, vt0 WHERE (((((((v0.c0)OR(vt1.c0)))AND(vt1.c0)))<=(((v0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((NOT (((((((v0.c0)OR(vt1.c0)))AND(vt1.c0)))<=(((v0.c0) NOT NULL)))))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE (((((((((v0.c0)OR(vt1.c0)))AND(vt1.c0)))<=(((v0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST(vt0.c1 AS REAL)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (CAST('544378250' AS REAL)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((CAST(vt0.c1 AS REAL)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (CAST('544378250' AS REAL)))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((CAST(vt0.c1 AS REAL)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (CAST('544378250' AS REAL)))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(vt1.c0) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(vt1.c0)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(vt1.c0) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(vt1.c0)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((((v0.c0)AND(((v0.c0)-(v0.c0)))))AND(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND(v0.c0)))AND(UNLIKELY(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((((v0.c0)AND(((v0.c0)-(v0.c0)))))AND(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND(v0.c0)))AND(UNLIKELY(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((((((((v0.c0)AND(((v0.c0)-(v0.c0)))))AND(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND(v0.c0)))AND(UNLIKELY(v0.c0)))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT vt0.c0, vt0.c1, v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0, vt0.c1, v0.c0 FROM v0, vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END  WHEN NULL THEN (- (0.10600046019458509)) ELSE (((v0.c0, v0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((v0.c0, 1942383674, vt0.c0))) END) UNION SELECT DISTINCT vt0.c0, vt0.c1, v0.c0 FROM v0, vt0 WHERE ((NOT (CASE CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END  WHEN NULL THEN (- (0.10600046019458509)) ELSE (((v0.c0, v0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((v0.c0, 1942383674, vt0.c0))) END))) UNION SELECT DISTINCT vt0.c0, vt0.c1, v0.c0 FROM v0, vt0 WHERE (((CASE CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END  WHEN NULL THEN (- (0.10600046019458509)) ELSE (((v0.c0, v0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((v0.c0, 1942383674, vt0.c0))) END) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, v0.c0 FROM v0, vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0, v0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))AND(7.053775E7)))OR('a5V쥂Wv'))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0, v0 WHERE ((NOT (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))AND(7.053775E7)))OR('a5V쥂Wv'))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 WHERE (((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))AND(7.053775E7)))OR('a5V쥂Wv'))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c1, vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c1, vt0.c0, v0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c1, vt0.c0, v0.c0, vt1.c0 HAVING SUM(v0.c0) COLLATE BINARY UNION ALL SELECT ALL vt0.c1, vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c1, vt0.c0, v0.c0, vt1.c0 HAVING (NOT (SUM(v0.c0) COLLATE BINARY)) UNION ALL SELECT vt0.c1, vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c1, vt0.c0, v0.c0, vt1.c0 HAVING ((SUM(v0.c0) COLLATE BINARY) ISNULL);
SELECT vt0.c1, vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c1, vt0.c0, v0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c1, vt0.c0, v0.c0, vt1.c0 HAVING SUM(v0.c0) COLLATE BINARY UNION ALL SELECT ALL vt0.c1, vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c1, vt0.c0, v0.c0, vt1.c0 HAVING (NOT (SUM(v0.c0) COLLATE BINARY)) UNION ALL SELECT vt0.c1, vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c1, vt0.c0, v0.c0, vt1.c0 HAVING ((SUM(v0.c0) COLLATE BINARY) ISNULL);
SELECT vt0.c1, vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c1, vt0.c0, v0.c0, vt1.c0;
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS INTEGER))>=((~ (vt0.c0))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (((CAST(vt1.c0 AS INTEGER))>=((~ (vt0.c0))))))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((((CAST(vt1.c0 AS INTEGER))>=((~ (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (CAST(((vt0.c1) IS FALSE) AS BLOB)) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (CAST(((vt0.c1) IS FALSE) AS BLOB)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((CAST(((vt0.c1) IS FALSE) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt1 WHERE (NULL) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt1 WHERE ((NOT (NULL))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt1 WHERE (((NULL) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING MIN(GROUP_CONCAT(vt0.c1)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (MIN(GROUP_CONCAT(vt0.c1)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((MIN(GROUP_CONCAT(vt0.c1))) ISNULL);
SELECT vt0.c1 FROM vt1, vt0;
SELECT ALL vt0.c1 FROM vt1, vt0 WHERE ((((((vt0.c1)OR(vt1.c0)))AND(vt0.c1)) IN ())) UNION ALL SELECT ALL vt0.c1 FROM vt1, vt0 WHERE ((NOT ((((((vt0.c1)OR(vt1.c0)))AND(vt0.c1)) IN ())))) UNION ALL SELECT vt0.c1 FROM vt1, vt0 WHERE ((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c1)) IN ())) ISNULL));
SELECT vt0.c1 FROM vt1, vt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ((((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))))==(((v0.c0) BETWEEN (v0.c0) AND (vt0.c1))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT ((((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))))==(((v0.c0) BETWEEN (v0.c0) AND (vt0.c1))))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((((((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))))=(((v0.c0) BETWEEN (v0.c0) AND (vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT vt1.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1 FROM vt0, vt1, v0 WHERE (CAST((0.12126261121145943 IN ()) AS REAL)) GROUP BY vt1.c0, vt0.c1 UNION SELECT ALL vt1.c0, vt0.c1 FROM vt0, vt1, v0 WHERE ((NOT (CAST((0.12126261121145943 IN ()) AS REAL)))) GROUP BY vt1.c0, vt0.c1 UNION SELECT vt1.c0, vt0.c1 FROM vt0, vt1, v0 WHERE (((CAST((0.12126261121145943 IN ()) AS REAL)) ISNULL)) GROUP BY vt1.c0, vt0.c1;
SELECT vt1.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt0.c1;
SELECT ALL v0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0, vt0.c0, vt0.c1;
SELECT ALL v0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0, vt0.c0, vt0.c1 HAVING AVG(COUNT(v0.c0)) UNION ALL SELECT v0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0, vt0.c0, vt0.c1 HAVING (NOT (AVG(COUNT(v0.c0)))) UNION ALL SELECT v0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0, vt0.c0, vt0.c1 HAVING ((AVG(COUNT(v0.c0))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0) IS TRUE) AS INTEGER)) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0) IS TRUE) AS INTEGER)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0) IS TRUE) AS INTEGER)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (LOWER(ABS(DISTINCT vt0.c1))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (LOWER(ABS(DISTINCT vt0.c1))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((LOWER(ABS(DISTINCT vt0.c1))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (0.3878038398704664) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (0.3878038398704664))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((0.3878038398704664) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((TOTAL(SUM(COUNT(*))) IN ())) BETWEEN (COUNT(SUM(vt0.c1))) AND (((SUM(0x60d6a10c))OR(COUNT(*))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ((((TOTAL(SUM(COUNT(*))) IN ())) BETWEEN (COUNT(SUM(vt0.c1))) AND (((SUM(0X60d6a10c))OR(COUNT(*))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((((TOTAL(SUM(COUNT(*))) IN ())) BETWEEN (COUNT(SUM(vt0.c1))) AND (((SUM(0x60d6a10c))OR(COUNT(*)))))) ISNULL);
SELECT ALL * FROM vt1, v0;
SELECT ALL * FROM vt1, v0 WHERE ((NOT ((((v0.c0))<>(('179860665')))))) UNION ALL SELECT ALL * FROM vt1, v0 WHERE ((NOT ((NOT ((((v0.c0))<>(('179860665')))))))) UNION ALL SELECT ALL * FROM vt1, v0 WHERE ((((NOT ((((v0.c0))<>(('179860665')))))) ISNULL));
SELECT ALL * FROM vt1, v0;
SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON (- (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END));
SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON (- (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)) WHERE (json_array_length(((vt0.c1) BETWEEN (v0.c0) AND (vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON (- (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)) WHERE ((NOT (json_array_length(((vt0.c1) BETWEEN (v0.c0) AND (vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON (- (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)) WHERE (((json_array_length(((vt0.c1) BETWEEN (v0.c0) AND (vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON (- (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END));
SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT vt0.c1, vt0.c0, v0.c0 FROM v0, vt0, vt1 WHERE (UNLIKELY((vt0.c1 IN ()))) GROUP BY vt0.c1, vt0.c0, v0.c0 UNION SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM v0, vt0, vt1 WHERE ((NOT (UNLIKELY((vt0.c1 IN ()))))) GROUP BY vt0.c1, vt0.c0, v0.c0 UNION SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM v0, vt0, vt1 WHERE (((UNLIKELY((vt0.c1 IN ()))) ISNULL)) GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (~ (((((v0.c0)OR(v0.c0)))AND(COUNT(vt0.c1))))) UNION ALL SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (NOT ((~ (((((v0.c0)OR(v0.c0)))AND(COUNT(vt0.c1))))))) UNION ALL SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (((~ (((((v0.c0)OR(v0.c0)))AND(COUNT(vt0.c1)))))) ISNULL);
SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (~ (((((v0.c0)OR(v0.c0)))AND(COUNT(vt0.c1))))) UNION ALL SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (NOT ((~ (((((v0.c0)OR(v0.c0)))AND(COUNT(vt0.c1))))))) UNION ALL SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (((~ (((((v0.c0)OR(v0.c0)))AND(COUNT(vt0.c1)))))) ISNULL);
SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT TOTAL(((((((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(IFNULL(vt1.c0, vt1.c0))))OR(((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR((v0.c0 IN ()))))AND(((v0.c0) IS FALSE))))AND(((x'') NOT BETWEEN (vt1.c0) AND (v0.c0)))))OR(((vt1.c0) NOTNULL)))) FROM vt1, v0;
SELECT ALL vt0.c0, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON ((vt1.c0 COLLATE BINARY)<<((vt0.c1 IN (vt0.c1))));
SELECT ALL vt0.c0, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON ((vt1.c0 COLLATE BINARY)<<((vt0.c1 IN (vt0.c1)))) WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c1)) COLLATE NOCASE) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON ((vt1.c0 COLLATE BINARY)<<((vt0.c1 IN (vt0.c1)))) WHERE ((NOT (((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c1)) COLLATE NOCASE))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON ((vt1.c0 COLLATE BINARY)<<((vt0.c1 IN (vt0.c1)))) WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c1)) COLLATE NOCASE) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON ((vt1.c0 COLLATE BINARY)<<((vt0.c1 IN (vt0.c1))));
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))) NOT BETWEEN (((0.010704817716335246) NOTNULL)) AND (((v0.c0)GLOB(v0.c0))))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))) NOT BETWEEN (((0.010704817716335246) NOTNULL)) AND (((v0.c0)GLOB(v0.c0))))))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))) NOT BETWEEN (((0.010704817716335246) NOTNULL)) AND (((v0.c0)GLOB(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((~ (CASE WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((~ (CASE WHEN vt1.c0 THEN vt1.c0 END))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((~ (CASE WHEN vt1.c0 THEN vt1.c0 END))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT ALL vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT ALL vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1, v0, vt0;
SELECT * FROM vt1, v0, vt0 WHERE (((NULL)>>((vt1.c0 IN (x'8773'))))) UNION ALL SELECT * FROM vt1, v0, vt0 WHERE ((NOT (((NULL)>>((vt1.c0 IN (x'8773'))))))) UNION ALL SELECT * FROM vt1, v0, vt0 WHERE (((((NULL)>>((vt1.c0 IN (x'8773'))))) ISNULL));
SELECT ALL * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt1, vt0 LEFT OUTER JOIN v0 ON 'E,nUT';
SELECT DISTINCT * FROM vt1, vt0 LEFT OUTER JOIN v0 ON 'E,nUT' WHERE (CAST(vt1.c0 AS NUMERIC)) UNION SELECT DISTINCT * FROM vt1, vt0 LEFT OUTER JOIN v0 ON 'E,nUT' WHERE ((NOT (CAST(vt1.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt1, vt0 LEFT OUTER JOIN v0 ON 'E,nUT' WHERE (((CAST(vt1.c0 AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0 LEFT OUTER JOIN v0 ON 'E,nUT';
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND ('6_'))) ISNULL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND ('6_'))) ISNULL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND ('6_'))) ISNULL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, v0 NATURAL JOIN vt0;
SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt1, v0 NATURAL JOIN vt0 WHERE (((((((v0.c0)OR(vt0.c0)))AND(vt1.c0))) NOTNULL)) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt1, v0 NATURAL JOIN vt0 WHERE ((NOT (((((((v0.c0)OR(vt0.c0)))AND(vt1.c0))) NOTNULL)))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, v0 NATURAL JOIN vt0 WHERE (((((((((v0.c0)OR(vt0.c0)))AND(vt1.c0))) NOTNULL)) ISNULL));
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, v0 NATURAL JOIN vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))&(x'86ad'))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))&(x'86ad'))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))&(x'86ad'))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((+ (vt0.c1)))&((vt0.c1 IN ())))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((+ (vt0.c1)))&((vt0.c1 IN ())))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((((+ (vt0.c1)))&((vt0.c1 IN ())))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1, v0.c0, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt0.c1, v0.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, v0.c0, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt0.c1, v0.c0, vt0.c0 HAVING ((v0.c0) NOT BETWEEN (json_type(v0.c0)) AND (COUNT(MAX('-1195664811')))) UNION ALL SELECT ALL vt1.c0, vt0.c1, v0.c0, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt0.c1, v0.c0, vt0.c0 HAVING (NOT (((v0.c0) NOT BETWEEN (json_type(v0.c0)) AND (COUNT(MAX('-1195664811')))))) UNION ALL SELECT vt1.c0, vt0.c1, v0.c0, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt0.c1, v0.c0, vt0.c0 HAVING ((((v0.c0) NOT BETWEEN (json_type(v0.c0)) AND (COUNT(MAX('-1195664811'))))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((((vt1.c0) IS FALSE))>>(vt1.c0 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((vt1.c0) IS FALSE))>>(vt1.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((vt1.c0) IS FALSE))>>(vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ((+ (v0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT ((+ (v0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((((+ (v0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((0.4846093602729099)*(vt0.c0))))>=((vt0.c1)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((((0.4846093602729099)*(vt0.c0))))>=((vt0.c1)))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((((((0.4846093602729099)*(vt0.c0))))>=((vt0.c1)))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((- ((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((- ((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0)))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((- ((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0)))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((UNLIKELY(vt0.c0))AND((vt0.c0 IN ()))))OR(CAST(vt0.c0 AS NUMERIC))))AND((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1))))))AND(TRIM(DISTINCT vt0.c0)));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((UNLIKELY(vt0.c0))AND((vt0.c0 IN ()))))OR(CAST(vt0.c0 AS NUMERIC))))AND((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1))))))AND(TRIM(DISTINCT vt0.c0))) WHERE ((((((v0.c0)OR(vt0.c0)))OR(v0.c0)) IN ())) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((UNLIKELY(vt0.c0))AND((vt0.c0 IN ()))))OR(CAST(vt0.c0 AS NUMERIC))))AND((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1))))))AND(TRIM(DISTINCT vt0.c0))) WHERE ((NOT ((((((v0.c0)OR(vt0.c0)))OR(v0.c0)) IN ())))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((UNLIKELY(vt0.c0))AND((vt0.c0 IN ()))))OR(CAST(vt0.c0 AS NUMERIC))))AND((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1))))))AND(TRIM(DISTINCT vt0.c0))) WHERE ((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((UNLIKELY(vt0.c0))AND((vt0.c0 IN ()))))OR(CAST(vt0.c0 AS NUMERIC))))AND((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1))))))AND(TRIM(DISTINCT vt0.c0)));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (NULL) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (NULL))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((NULL) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt1, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt1, vt0 GROUP BY v0.c0 HAVING TOTAL(MAX(vt1.c0)) UNION ALL SELECT v0.c0 FROM v0, vt1, vt0 GROUP BY v0.c0 HAVING (NOT (TOTAL(MAX(vt1.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0, vt1, vt0 GROUP BY v0.c0 HAVING ((TOTAL(MAX(vt1.c0))) ISNULL);
SELECT ALL * FROM vt0, vt1, v0;
SELECT ALL * FROM vt0, vt1, v0 WHERE ((NOT (((((vt1.c0)OR(v0.c0)))OR(v0.c0))))) UNION ALL SELECT ALL * FROM vt0, vt1 NOT INDEXED, v0 WHERE ((NOT ((NOT (((((vt1.c0)OR(v0.c0)))OR(v0.c0))))))) UNION ALL SELECT * FROM vt0, vt1, v0 WHERE ((((NOT (((((vt1.c0)OR(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT ALL * FROM vt0, vt1, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0)OR(v0.c0)))OR(v0.c0)) IN ())) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0)OR(v0.c0)))OR(v0.c0)) IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)) IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c1, v0.c0;
SELECT ALL vt0.c1, v0.c0 FROM v0, vt0 WHERE (((UPPER(DISTINCT vt0.c0)) NOT BETWEEN ((v0.c0 IN ())) AND (vt0.c1 COLLATE RTRIM))) GROUP BY vt0.c1, v0.c0 UNION SELECT vt0.c1, v0.c0 FROM v0, vt0 WHERE ((NOT (((UPPER(DISTINCT vt0.c0)) NOT BETWEEN ((v0.c0 IN ())) AND (vt0.c1 COLLATE RTRIM))))) GROUP BY vt0.c1, v0.c0 UNION SELECT vt0.c1, v0.c0 FROM v0, vt0 WHERE (((((UPPER(DISTINCT vt0.c0)) NOT BETWEEN ((v0.c0 IN ())) AND (vt0.c1 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c1, v0.c0;
SELECT vt0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c1, v0.c0;
SELECT ALL vt0.c1 FROM vt1, vt0, v0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt1, vt0, v0 GROUP BY vt0.c1 HAVING ((COUNT(*)) NOT NULL) UNION ALL SELECT vt0.c1 FROM vt1, vt0, v0 GROUP BY vt0.c1 HAVING (NOT (((COUNT(*)) NOT NULL))) UNION ALL SELECT ALL vt0.c1 FROM vt1, vt0, v0 GROUP BY vt0.c1 HAVING ((((COUNT(*)) NOT NULL)) ISNULL);
SELECT ALL vt0.c1 FROM vt1, vt0, v0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt1, vt0, v0 GROUP BY vt0.c1 HAVING ((COUNT(*)) NOT NULL) UNION ALL SELECT vt0.c1 FROM vt1, vt0, v0 GROUP BY vt0.c1 HAVING (NOT (((COUNT(*)) NOT NULL))) UNION ALL SELECT ALL vt0.c1 FROM vt1, vt0, v0 GROUP BY vt0.c1 HAVING ((((COUNT(*)) NOT NULL)) ISNULL);
SELECT ALL vt0.c1 FROM vt1, vt0, v0 GROUP BY vt0.c1;
SELECT MAX(x'') FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1, v0, vt0;
SELECT vt1.c0 FROM vt1, v0, vt0 WHERE (0X6239f4be) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0, vt0 WHERE ((NOT (0X6239f4be))) UNION ALL SELECT vt1.c0 FROM vt1, v0, vt0 WHERE (((0X6239f4be) ISNULL));
SELECT ALL vt1.c0 FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)*(vt1.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0)*(vt1.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)*(vt1.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt1 WHERE ((NOT (((vt1.c0)==(vt1.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt1 WHERE ((NOT ((NOT (((vt1.c0)==(vt1.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt1 WHERE ((((NOT (((vt1.c0)=(vt1.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*))*(((((x'1283')AND(SUM(AVG(TOTAL(v0.c0))))))OR(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((COUNT(*))*(((((x'1283')AND(SUM(AVG(TOTAL(v0.c0))))))OR(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((COUNT(*))*(((((x'1283')AND(SUM(AVG(TOTAL(v0.c0))))))OR(v0.c0))))) ISNULL);
SELECT * FROM v0, vt1;
SELECT ALL * FROM v0, vt1 WHERE (((LIKELY(DISTINCT v0.c0)) IS FALSE)) UNION ALL SELECT * FROM v0, vt1 WHERE ((NOT (((LIKELY(DISTINCT v0.c0)) IS FALSE)))) UNION ALL SELECT * FROM v0, vt1 WHERE (((((LIKELY(DISTINCT v0.c0)) IS FALSE)) ISNULL));
SELECT * FROM v0, vt1;
SELECT DISTINCT vt0.c1 FROM v0, vt0;
SELECT DISTINCT vt0.c1 FROM v0, vt0 WHERE (((((((vt0.c0)AND(v0.c0)))OR(vt0.c1))) NOT NULL)) UNION SELECT DISTINCT vt0.c1 FROM v0, vt0 WHERE ((NOT (((((((vt0.c0)AND(v0.c0)))OR(vt0.c1))) NOT NULL)))) UNION SELECT DISTINCT vt0.c1 FROM v0, vt0 WHERE (((((((((vt0.c0)AND(v0.c0)))OR(vt0.c1))) NOT NULL)) ISNULL));
SELECT DISTINCT vt0.c1 FROM v0, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(v0.c0 AS TEXT)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(v0.c0 AS TEXT)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS TEXT)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c1 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(CASE vt0.c1  WHEN x'4cae76d1' THEN '>' ELSE vt0.c1 END AS REAL) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(CASE vt0.c1  WHEN x'4cae76d1' THEN '>' ELSE vt0.c1 END AS REAL) GROUP BY vt0.c1 HAVING ('' IN ((((TOTAL(vt0.c1)))>=((AVG(AVG(COUNT(*)))))), MIN(vt0.c0))) UNION ALL SELECT ALL vt0.c1 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(CASE vt0.c1  WHEN x'4cae76d1' THEN '>' ELSE vt0.c1 END AS REAL) GROUP BY vt0.c1 HAVING (NOT (('' IN ((((TOTAL(vt0.c1)))>=((AVG(AVG(COUNT(*)))))), MIN(vt0.c0))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(CASE vt0.c1  WHEN x'4cae76d1' THEN '>' ELSE vt0.c1 END AS REAL) GROUP BY vt0.c1 HAVING ((('' IN ((((TOTAL(vt0.c1)))>=((AVG(AVG(COUNT(*)))))), MIN(vt0.c0)))) ISNULL);
SELECT vt0.c1 FROM vt1, v0, vt0;
SELECT vt0.c1 FROM vt1, v0, vt0 WHERE ((((((vt1.c0, vt0.c1, v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, vt1.c0, vt0.c0, 0.9260689263837325, v0.c0)) AND ((vt0.c0, v0.c0, '-335905447', vt0.c1, vt0.c0))))>>(((vt0.c1) NOT NULL)))) UNION ALL SELECT ALL vt0.c1 FROM vt1, v0, vt0 WHERE ((NOT ((((((vt1.c0, vt0.c1, v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, vt1.c0, vt0.c0, 0.9260689263837325, v0.c0)) AND ((vt0.c0, v0.c0, '-335905447', vt0.c1, vt0.c0))))>>(((vt0.c1) NOT NULL)))))) UNION ALL SELECT vt0.c1 FROM vt1, v0, vt0 WHERE ((((((((vt1.c0, vt0.c1, v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, vt1.c0, vt0.c0, 0.9260689263837325, v0.c0)) AND ((vt0.c0, v0.c0, '-335905447', vt0.c1, vt0.c0))))>>(((vt0.c1) NOT NULL)))) ISNULL));
SELECT vt0.c1 FROM vt1, v0, vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c0) ISNULL))LIKE(((vt0.c1)GLOB(vt0.c0))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0) ISNULL))LIKE(((vt0.c1)GLOB(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c0) ISNULL))LIKE(((vt0.c1)GLOB(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(vt1.c0))-(MAX(SUM(MIN(AVG(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((MAX(vt1.c0))-(MAX(SUM(MIN(AVG(vt1.c0)))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MAX(vt1.c0))-(MAX(SUM(MIN(AVG(vt1.c0))))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))) NOT NULL)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))) NOT NULL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))) NOT NULL)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((((vt0.c0 IN ()))OR((vt0.c1 IN ()))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((((vt0.c0 IN ()))OR((vt0.c1 IN ()))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((((((vt0.c0 IN ()))OR((vt0.c1 IN ()))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 WHERE (((((((((((vt1.c0)AND(vt1.c0)))OR(v0.c0)))OR(NULL)))AND(vt1.c0))) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((v0.c0) NOTNULL)))) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM vt1, v0 WHERE ((NOT (((((((((((vt1.c0)AND(vt1.c0)))OR(v0.c0)))OR(NULL)))AND(vt1.c0))) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((v0.c0) NOTNULL)))))) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM vt1, v0 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))OR(v0.c0)))OR(NULL)))AND(vt1.c0))) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((v0.c0) NOTNULL)))) ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c0, vt0.c1 HAVING AVG(vt0.c1) COLLATE RTRIM UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (AVG(vt0.c1) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG(vt0.c1) COLLATE RTRIM) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c0, vt0.c1 HAVING AVG(vt0.c1) COLLATE RTRIM UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (AVG(vt0.c1) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG(vt0.c1) COLLATE RTRIM) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))<=((vt1.c0)))) BETWEEN ((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0)))) AND (((vt1.c0)>>(vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((((((vt1.c0))<=((vt1.c0)))) BETWEEN ((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0)))) AND (((vt1.c0)>>(vt1.c0))))))) UNION ALL SELECT * FROM vt1 NOT INDEXED WHERE ((((((((vt1.c0))<=((vt1.c0)))) BETWEEN ((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0)))) AND (((vt1.c0)>>(vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT v0.c0, vt0.c0, vt0.c1 FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0, vt0.c1 FROM v0, vt0 WHERE ((NOT (v0.c0 COLLATE BINARY))) UNION SELECT DISTINCT v0.c0, vt0.c0, vt0.c1 FROM v0, vt0 WHERE ((NOT ((NOT (v0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT v0.c0, vt0.c0, vt0.c1 FROM v0, vt0 WHERE ((((NOT (v0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0, vt0.c1 FROM v0, vt0;
SELECT vt0.c0, vt0.c1, v0.c0 FROM v0 INNER JOIN vt0 ON (NOT ('1539347635')) COLLATE RTRIM GROUP BY vt0.c0, vt0.c1, v0.c0;
SELECT vt0.c0, vt0.c1, v0.c0 FROM v0 INNER JOIN vt0 ON (NOT ('1539347635')) COLLATE RTRIM WHERE (((vt0.c0 COLLATE RTRIM)*(IFNULL(vt0.c1, vt0.c1)))) GROUP BY vt0.c0, vt0.c1, v0.c0 UNION SELECT ALL vt0.c0, vt0.c1, v0.c0 FROM v0 INNER JOIN vt0 ON (NOT ('1539347635')) COLLATE RTRIM WHERE ((NOT (((vt0.c0 COLLATE RTRIM)*(IFNULL(vt0.c1, vt0.c1)))))) GROUP BY vt0.c0, vt0.c1, v0.c0 UNION SELECT vt0.c0, vt0.c1, v0.c0 FROM v0 INNER JOIN vt0 ON (NOT ('1539347635')) COLLATE RTRIM WHERE (((((vt0.c0 COLLATE RTRIM)*(IFNULL(vt0.c1, vt0.c1)))) ISNULL)) GROUP BY vt0.c0, vt0.c1, v0.c0;
SELECT vt0.c0, vt0.c1, v0.c0 FROM v0 INNER JOIN vt0 ON (NOT ('1539347635')) COLLATE RTRIM GROUP BY vt0.c0, vt0.c1, v0.c0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((COUNT(*))>=(vt0.c0))) BETWEEN (vt0.c1) AND (((((((((vt0.c0)OR(vt0.c0)))OR(TOTAL(vt0.c1))))OR(MIN(MAX(vt0.c1)))))OR(vt0.c1)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((((COUNT(*))>=(vt0.c0))) BETWEEN (vt0.c1) AND (((((((((vt0.c0)OR(vt0.c0)))OR(TOTAL(vt0.c1))))OR(MIN(MAX(vt0.c1)))))OR(vt0.c1)))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((((COUNT(*))>=(vt0.c0))) BETWEEN (vt0.c1) AND (((((((((vt0.c0)OR(vt0.c0)))OR(TOTAL(vt0.c1))))OR(MIN(MAX(vt0.c1)))))OR(vt0.c1))))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt1 CROSS JOIN vt0 ON ((x'')<<(vt0.c0));
SELECT vt0.c0, vt0.c1 FROM vt1 CROSS JOIN vt0 ON ((x'')<<(vt0.c0)) WHERE ((((vt1.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND (((((x'')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt1 CROSS JOIN vt0 ON ((x'')<<(vt0.c0)) WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND (((((x'')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt1 CROSS JOIN vt0 ON ((x'')<<(vt0.c0)) WHERE ((((((vt1.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND (((((x'')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt1 CROSS JOIN vt0 ON ((x'')<<(vt0.c0));
SELECT DISTINCT vt0.c1 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON CASE 0Xffffffffeaf25bd4  WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 END;
SELECT DISTINCT vt0.c1 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON CASE 0xffffffffeaf25bd4  WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 END WHERE (((v0.c0)<=(vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT vt0.c1 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON CASE 0xffffffffeaf25bd4  WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 END WHERE ((NOT (((v0.c0)<=(vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c1 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON CASE 0xffffffffeaf25bd4  WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 END WHERE (((((v0.c0)<=(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON CASE 0Xffffffffeaf25bd4  WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 END;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((TYPEOF(vt0.c0)))>=(((((('')AND(vt0.c1)))OR(vt0.c0)))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((TYPEOF(vt0.c0)))>=(((((('')AND(vt0.c1)))OR(vt0.c0)))))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((TYPEOF(vt0.c0)))>=(((((('')AND(vt0.c1)))OR(vt0.c0)))))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT(COUNT(AVG(MIN(SUM(COUNT(vt0.c0)))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(COUNT(AVG(MIN(SUM(COUNT(vt0.c0)))))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(COUNT(AVG(MIN(SUM(COUNT(vt0.c0))))))) ISNULL);
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (x'') UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((x'') ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (MIN(v0.c0 COLLATE RTRIM, LIKELIHOOD(DISTINCT 0.3526410880132158, 0.684355523656066), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (MIN(v0.c0 COLLATE RTRIM, LIKELIHOOD(DISTINCT 0.3526410880132158, 0.684355523656066), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((MIN(v0.c0 COLLATE RTRIM, LIKELIHOOD(DISTINCT 0.3526410880132158, 0.684355523656066), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0)) THEN (((vt0.c1))!=((vt0.c1))) ELSE CASE v0.c0  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END END GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0)) THEN (((vt0.c1))<>((vt0.c1))) ELSE CASE v0.c0  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END END WHERE (((((vt0.c0 IN (x'', vt0.c0)), CASE 1.563486643E9  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, (((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))!=(((- (vt0.c0)), CAST(vt0.c1 AS BLOB), ((vt0.c1)+(0.8646789056459544)))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0)) THEN (((vt0.c1))!=((vt0.c1))) ELSE CASE v0.c0  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END END WHERE ((NOT (((((vt0.c0 IN (x'', vt0.c0)), CASE 1.563486643E9  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, (((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))<>(((- (vt0.c0)), CAST(vt0.c1 AS BLOB), ((vt0.c1)+(0.8646789056459544)))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0)) THEN (((vt0.c1))!=((vt0.c1))) ELSE CASE v0.c0  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END END WHERE (((((((vt0.c0 IN (x'', vt0.c0)), CASE 1.563486643E9  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, (((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))<>(((- (vt0.c0)), CAST(vt0.c1 AS BLOB), ((vt0.c1)+(0.8646789056459544)))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0 INNER JOIN vt0 ON CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0)) THEN (((vt0.c1))!=((vt0.c1))) ELSE CASE v0.c0  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END END GROUP BY v0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- (TOTAL(vt0.c0)))) NOT BETWEEN (MAX(vt0.c1)) AND (((TOTAL(AVG(TOTAL(SUM(SUM(x'')))))) NOT NULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((- (TOTAL(vt0.c0)))) NOT BETWEEN (MAX(vt0.c1)) AND (((TOTAL(AVG(TOTAL(SUM(SUM(x'')))))) NOT NULL))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((- (TOTAL(vt0.c0)))) NOT BETWEEN (MAX(vt0.c1)) AND (((TOTAL(AVG(TOTAL(SUM(SUM(x'')))))) NOT NULL)))) ISNULL);
SELECT ALL MAX(-5.87053386E8 COLLATE RTRIM COLLATE NOCASE) FROM vt1 ORDER BY ((vt1.c0 IN (vt1.c0)) IN ());
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT v0.c0, vt1.c0 FROM vt1 CROSS JOIN v0 ON (((((((((((((v0.c0)AND(vt1.c0)))OR(x'')))OR(vt1.c0)))AND(v0.c0)))AND(vt1.c0)))OR(vt1.c0)) IN ());
SELECT DISTINCT v0.c0, vt1.c0 FROM vt1 CROSS JOIN v0 ON (((((((((((((v0.c0)AND(vt1.c0)))OR(x'')))OR(vt1.c0)))AND(v0.c0)))AND(vt1.c0)))OR(vt1.c0)) IN ()) WHERE (((((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))LIKE(((x'835e')%(v0.c0))))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM vt1 CROSS JOIN v0 ON (((((((((((((v0.c0)AND(vt1.c0)))OR(x'')))OR(vt1.c0)))AND(v0.c0)))AND(vt1.c0)))OR(vt1.c0)) IN ()) WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))LIKE(((x'835e')%(v0.c0))))))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM vt1 CROSS JOIN v0 ON (((((((((((((v0.c0)AND(vt1.c0)))OR(x'')))OR(vt1.c0)))AND(v0.c0)))AND(vt1.c0)))OR(vt1.c0)) IN ()) WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))LIKE(((x'835e')%(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0 FROM vt1 CROSS JOIN v0 ON (((((((((((((v0.c0)AND(vt1.c0)))OR(x'')))OR(vt1.c0)))AND(v0.c0)))AND(vt1.c0)))OR(vt1.c0)) IN ());
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))>(((vt1.c0)+(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))>(((vt1.c0)+(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE (((((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))>(((vt1.c0)+(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING MIN(GROUP_CONCAT(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING (NOT (MIN(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING ((MIN(GROUP_CONCAT(v0.c0))) ISNULL);
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (CASE ((0.27060956616985654) IS TRUE)  WHEN ((vt0.c0)GLOB(vt0.c1)) THEN (NOT (vt0.c1)) END) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT (CASE ((0.27060956616985654) IS TRUE)  WHEN ((vt0.c0)GLOB(vt0.c1)) THEN (NOT (vt0.c1)) END))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE (((CASE ((0.27060956616985654) IS TRUE)  WHEN ((vt0.c0)GLOB(vt0.c1)) THEN (NOT (vt0.c1)) END) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM v0, vt1;
SELECT DISTINCT v0.c0 FROM v0, vt1 WHERE (CASE WHEN x'4e44' THEN (((vt1.c0))==((vt1.c0))) WHEN v0.c0 THEN ((v0.c0)>(v0.c0)) WHEN v0.c0 THEN (vt1.c0 IN ()) ELSE (+ (vt1.c0)) END) UNION SELECT DISTINCT v0.c0 FROM v0, vt1 WHERE ((NOT (CASE WHEN x'4e44' THEN (((vt1.c0))==((vt1.c0))) WHEN v0.c0 THEN ((v0.c0)>(v0.c0)) WHEN v0.c0 THEN (vt1.c0 IN ()) ELSE (+ (vt1.c0)) END))) UNION SELECT DISTINCT v0.c0 FROM v0, vt1 WHERE (((CASE WHEN x'4e44' THEN (((vt1.c0))==((vt1.c0))) WHEN v0.c0 THEN ((v0.c0)>(v0.c0)) WHEN v0.c0 THEN (vt1.c0 IN ()) ELSE (+ (vt1.c0)) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt1, v0 WHERE ((CAST(v0.c0 AS INTEGER) IN ())) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0, vt1, v0 WHERE ((NOT ((CAST(v0.c0 AS INTEGER) IN ())))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt1, v0 WHERE ((((CAST(v0.c0 AS INTEGER) IN ())) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING MIN(MIN(MAX(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(MIN(MAX(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 NOT INDEXED GROUP BY vt0.c0 HAVING ((MIN(MIN(MAX(vt0.c0)))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((('190297231')+(LIKELY(v0.c0)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((('190297231')+(LIKELY(v0.c0)))))) UNION ALL SELECT * FROM v0 WHERE ((((('190297231')+(LIKELY(v0.c0)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt1 ON vt0.c0 CROSS JOIN vt0 ON vt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (v0.c0 COLLATE BINARY) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0 COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 NOT INDEXED WHERE (((v0.c0 COLLATE BINARY) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT vt0.c0, v0.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c0, v0.c0, vt0.c1 HAVING MAX(((((vt0.c0)AND(SUM(vt1.c0))))OR(SUM(vt0.c0)))) UNION ALL SELECT vt0.c0, v0.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c0, v0.c0, vt0.c1 HAVING (NOT (MAX(((((vt0.c0)AND(SUM(vt1.c0))))OR(SUM(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY vt0.c0, v0.c0, vt0.c1 HAVING ((MAX(((((vt0.c0)AND(SUM(vt1.c0))))OR(SUM(vt0.c0))))) ISNULL);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON ((CAST(vt1.c0 AS REAL)) ISNULL) FULL OUTER JOIN vt1 ON (- (x'a221'));
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)) IN ())) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((NOT ((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)) IN ())))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0 WHERE ((((((v0.c0))<>((v0.c0)))) NOT BETWEEN (CASE WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END) AND ((v0.c0 IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt1, v0 WHERE ((NOT ((((((v0.c0))!=((v0.c0)))) NOT BETWEEN (CASE WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END) AND ((v0.c0 IN ())))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1, v0 NOT INDEXED WHERE ((((((((v0.c0))!=((v0.c0)))) NOT BETWEEN (CASE WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END) AND ((v0.c0 IN ())))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CASE ((vt0.c1)<(vt0.c0))  WHEN (- (v0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN v0.c0 THEN v0.c0 COLLATE NOCASE WHEN ((vt1.c0)||(vt0.c0)) THEN ((vt0.c1) BETWEEN (v0.c0) AND (vt1.c0)) END RIGHT OUTER JOIN vt1 ON ((((((0.9607984389701553)OR(vt1.c0)))AND(v0.c0))) BETWEEN (vt0.c0) AND ((vt1.c0 IN (vt1.c0)))) GROUP BY v0.c0;
SELECT ALL vt0.c0, vt1.c0, v0.c0, vt0.c1 FROM vt1, v0 RIGHT OUTER JOIN vt0 ON ((~ (0.11484939777243619)) IN (((((vt0.c1)OR(v0.c0)))OR(1805234186))));
SELECT ALL vt0.c0, vt1.c0, v0.c0, vt0.c1 FROM vt1, v0 RIGHT OUTER JOIN vt0 ON ((~ (0.11484939777243619)) IN (((((vt0.c1)OR(v0.c0)))OR(1805234186)))) WHERE (TRIM(DISTINCT 0.981965621823528)) UNION ALL SELECT vt0.c0, vt1.c0, v0.c0, vt0.c1 FROM vt1, v0 RIGHT OUTER JOIN vt0 ON ((~ (0.11484939777243619)) IN (((((vt0.c1)OR(v0.c0)))OR(1805234186)))) WHERE ((NOT (TRIM(DISTINCT 0.981965621823528)))) UNION ALL SELECT vt0.c0, vt1.c0, v0.c0, vt0.c1 FROM vt1, v0 RIGHT OUTER JOIN vt0 ON ((~ (0.11484939777243619)) IN (((((vt0.c1)OR(v0.c0)))OR(1805234186)))) WHERE (((TRIM(DISTINCT 0.981965621823528)) ISNULL));
SELECT ALL vt0.c0, vt1.c0, v0.c0, vt0.c1 FROM vt1, v0 RIGHT OUTER JOIN vt0 ON ((~ (0.11484939777243619)) IN (((((vt0.c1)OR(v0.c0)))OR(1805234186))));
SELECT DISTINCT v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (((NOT (v0.c0))) NOT BETWEEN (((v0.c0)>(v0.c0))) AND (json(v0.c0)));
SELECT DISTINCT v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (((NOT (v0.c0))) NOT BETWEEN (((v0.c0)>(v0.c0))) AND (json(v0.c0))) WHERE (((((v0.c0) BETWEEN ('') AND (v0.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((v0.c0)*(v0.c0))))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (((NOT (v0.c0))) NOT BETWEEN (((v0.c0)>(v0.c0))) AND (json(v0.c0))) WHERE ((NOT (((((v0.c0) BETWEEN ('') AND (v0.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((v0.c0)*(v0.c0))))))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (((NOT (v0.c0))) NOT BETWEEN (((v0.c0)>(v0.c0))) AND (json(v0.c0))) WHERE (((((((v0.c0) BETWEEN ('') AND (v0.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((v0.c0)*(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (((NOT (v0.c0))) NOT BETWEEN (((v0.c0)>(v0.c0))) AND (json(v0.c0)));
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE WHEN '' THEN LIKELY(vt1.c0) END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN '' THEN LIKELY(vt1.c0) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN '' THEN LIKELY(vt1.c0) END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(HEX(COUNT(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(HEX(COUNT(GROUP_CONCAT(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(HEX(COUNT(GROUP_CONCAT(v0.c0))))) ISNULL);
SELECT ALL * FROM vt0, v0 LEFT OUTER JOIN vt1 ON ((vt0.c1) BETWEEN (CAST(NULL AS NUMERIC)) AND ((+ (vt0.c1))));
SELECT ALL * FROM vt0, v0 LEFT OUTER JOIN vt1 ON ((vt0.c1) BETWEEN (CAST(NULL AS NUMERIC)) AND ((+ (vt0.c1)))) WHERE (LIKELIHOOD(NULL, 0.3201534676281699)) UNION ALL SELECT * FROM vt0, v0 LEFT OUTER JOIN vt1 ON ((vt0.c1) BETWEEN (CAST(NULL AS NUMERIC)) AND ((+ (vt0.c1)))) WHERE ((NOT (LIKELIHOOD(NULL, 0.3201534676281699)))) UNION ALL SELECT ALL * FROM vt0, v0 LEFT OUTER JOIN vt1 ON ((vt0.c1) BETWEEN (CAST(NULL AS NUMERIC)) AND ((+ (vt0.c1)))) WHERE (((LIKELIHOOD(NULL, 0.3201534676281699)) ISNULL));
SELECT ALL * FROM vt0, v0 LEFT OUTER JOIN vt1 ON ((vt0.c1) BETWEEN (CAST(NULL AS NUMERIC)) AND ((+ (vt0.c1))));
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT DISTINCT * FROM vt0, v0, vt1 WHERE (((vt0.c1 COLLATE BINARY)AND(((vt0.c1)>>(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((NOT (((vt0.c1 COLLATE BINARY)AND(((vt0.c1)>>(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE (((((vt0.c1 COLLATE BINARY)AND(((vt0.c1)>>(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY) BETWEEN ((((vt0.c1))>((vt0.c1)))) AND ((vt0.c1 IN (vt0.c1, vt0.c1)))) GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY) BETWEEN ((((vt0.c1))>((vt0.c1)))) AND ((vt0.c1 IN (vt0.c1, vt0.c1)))) WHERE (CASE (- (vt0.c1))  WHEN UPPER(vt0.c0) THEN vt0.c0 COLLATE BINARY WHEN (((('-709005293')AND('-651788425')))OR(vt0.c1)) THEN vt0.c1 COLLATE RTRIM WHEN COALESCE(v0.c0, vt0.c1) THEN ((v0.c0)%(vt0.c0)) ELSE CAST(NULL AS BLOB) END) GROUP BY v0.c0, vt0.c1, vt0.c0 UNION SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY) BETWEEN ((((vt0.c1))>((vt0.c1)))) AND ((vt0.c1 IN (vt0.c1, vt0.c1)))) WHERE ((NOT (CASE (- (vt0.c1))  WHEN UPPER(vt0.c0) THEN vt0.c0 COLLATE BINARY WHEN (((('-709005293')AND('-651788425')))OR(vt0.c1)) THEN vt0.c1 COLLATE RTRIM WHEN COALESCE(v0.c0, vt0.c1) THEN ((v0.c0)%(vt0.c0)) ELSE CAST(NULL AS BLOB) END))) GROUP BY v0.c0, vt0.c1, vt0.c0 UNION SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY) BETWEEN ((((vt0.c1))>((vt0.c1)))) AND ((vt0.c1 IN (vt0.c1, vt0.c1)))) WHERE (((CASE (- (vt0.c1))  WHEN UPPER(vt0.c0) THEN vt0.c0 COLLATE BINARY WHEN (((('-709005293')AND('-651788425')))OR(vt0.c1)) THEN vt0.c1 COLLATE RTRIM WHEN COALESCE(v0.c0, vt0.c1) THEN ((v0.c0)%(vt0.c0)) ELSE CAST(NULL AS BLOB) END) ISNULL)) GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY) BETWEEN ((((vt0.c1))>((vt0.c1)))) AND ((vt0.c1 IN (vt0.c1, vt0.c1)))) GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (~ ((vt0.c1 IN ()))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT ((~ ((vt0.c1 IN ()))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (((~ ((vt0.c1 IN ())))) ISNULL);
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (~ ((vt0.c1 IN ()))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT ((~ ((vt0.c1 IN ()))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (((~ ((vt0.c1 IN ())))) ISNULL);
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0)OR(vt1.c0)) END) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0)OR(vt1.c0)) END))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0)OR(vt1.c0)) END) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.c1, vt0.c0, vt1.c0, v0.c0 FROM v0, vt0 NATURAL JOIN vt1;
SELECT DISTINCT vt0.c1, vt0.c0, vt1.c0, v0.c0 FROM v0, vt0 NATURAL JOIN vt1 WHERE (vt0.c1) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt1.c0, v0.c0 FROM v0, vt0 NATURAL JOIN vt1 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt1.c0, v0.c0 FROM v0, vt0 NATURAL JOIN vt1 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, vt1.c0, v0.c0 FROM v0, vt0 NATURAL JOIN vt1;
SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM v0, vt0 GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT v0.c0, vt0.c0, vt0.c1 FROM v0, vt0 WHERE (((v0.c0) NOTNULL) COLLATE BINARY) GROUP BY v0.c0, vt0.c0, vt0.c1 UNION SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM v0, vt0 WHERE ((NOT (((v0.c0) NOTNULL) COLLATE BINARY))) GROUP BY v0.c0, vt0.c0, vt0.c1 UNION SELECT v0.c0, vt0.c0, vt0.c1 FROM v0, vt0 WHERE (((((v0.c0) NOTNULL) COLLATE BINARY) ISNULL)) GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM v0, vt0 GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT ALL vt1.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 NOT INDEXED, vt0, v0 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(AVG(vt0.c1))) BETWEEN ((('-2069143898')OR(''))) AND (GROUP_CONCAT(MAX(MAX(vt0.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0 HAVING (NOT (((GROUP_CONCAT(AVG(vt0.c1))) BETWEEN ((('-2069143898')OR(''))) AND (GROUP_CONCAT(MAX(MAX(vt0.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0 HAVING ((((GROUP_CONCAT(AVG(vt0.c1))) BETWEEN ((('-2069143898')OR(''))) AND (GROUP_CONCAT(MAX(MAX(vt0.c0)))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt1, v0, vt0 WHERE (((((NOT (vt0.c1))))<((((v0.c0)AND(vt0.c1)))))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((NOT (((((NOT (vt0.c1))))<((((v0.c0)AND(vt0.c1)))))))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE (((((((NOT (vt0.c1))))<((((v0.c0)AND(vt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN v0 ON vt0.c0 LEFT OUTER JOIN vt0 ON (((vt1.c0)GLOB(vt1.c0)) IN ()) GROUP BY vt1.c0;
SELECT vt0.c0, v0.c0 FROM vt0, vt1, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, vt1, v0 GROUP BY vt0.c0, v0.c0 HAVING GROUP_CONCAT(vt0.c1 COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, vt1, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(vt0.c1 COLLATE NOCASE))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, vt1, v0 GROUP BY vt0.c0, v0.c0 HAVING ((GROUP_CONCAT(vt0.c1 COLLATE NOCASE)) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, vt1, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, vt1, v0 GROUP BY vt0.c0, v0.c0 HAVING GROUP_CONCAT(vt0.c1 COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, vt1, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(vt0.c1 COLLATE NOCASE))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, vt1, v0 GROUP BY vt0.c0, v0.c0 HAVING ((GROUP_CONCAT(vt0.c1 COLLATE NOCASE)) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, vt1, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL * FROM vt0, v0 CROSS JOIN vt1 ON (((vt0.c1, v0.c0, vt1.c0)) NOT BETWEEN ((LOWER(vt0.c0), ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)), '')) AND ((vt0.c1 COLLATE NOCASE, v0.c0 COLLATE BINARY, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0, v0 CROSS JOIN vt1 ON (((vt0.c1, v0.c0, vt1.c0)) NOT BETWEEN ((LOWER(vt0.c0), ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)), '')) AND ((vt0.c1 COLLATE NOCASE, v0.c0 COLLATE BINARY, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) WHERE (((((CAST(vt1.c0 AS TEXT))AND(((x'be8b6ad8')!=(vt1.c0)))))AND(vt0.c1 COLLATE BINARY))) UNION ALL SELECT * FROM vt0, v0 CROSS JOIN vt1 ON (((vt0.c1, v0.c0, vt1.c0)) NOT BETWEEN ((LOWER(vt0.c0), ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)), '')) AND ((vt0.c1 COLLATE NOCASE, v0.c0 COLLATE BINARY, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) WHERE ((NOT (((((CAST(vt1.c0 AS TEXT))AND(((x'be8b6ad8')<>(vt1.c0)))))AND(vt0.c1 COLLATE BINARY))))) UNION ALL SELECT * FROM vt0, v0 CROSS JOIN vt1 ON (((vt0.c1, v0.c0, vt1.c0)) NOT BETWEEN ((LOWER(vt0.c0), ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)), '')) AND ((vt0.c1 COLLATE NOCASE, v0.c0 COLLATE BINARY, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) WHERE (((((((CAST(vt1.c0 AS TEXT))AND(((x'be8b6ad8')!=(vt1.c0)))))AND(vt0.c1 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM vt0, v0 CROSS JOIN vt1 ON (((vt0.c1, v0.c0, vt1.c0)) NOT BETWEEN ((LOWER(vt0.c0), ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)), '')) AND ((vt0.c1 COLLATE NOCASE, v0.c0 COLLATE BINARY, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT DISTINCT vt0.c0, vt0.c1, v0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0, vt0.c1, v0.c0 FROM vt0, v0 WHERE ((((((vt0.c0)||(vt0.c1))))<=(((NOT (vt0.c0)))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, v0.c0 FROM vt0, v0 WHERE ((NOT ((((((vt0.c0)||(vt0.c1))))<=(((NOT (vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, v0.c0 FROM vt0, v0 WHERE ((((((((vt0.c0)||(vt0.c1))))<=(((NOT (vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, v0.c0 FROM vt0, v0;
SELECT ALL vt1.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1, v0 WHERE (CAST(((v0.c0) ISNULL) AS NUMERIC)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1, v0 WHERE ((NOT (CAST(((v0.c0) ISNULL) AS NUMERIC)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1, v0 WHERE (((CAST(((v0.c0) ISNULL) AS NUMERIC)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((MAX(AVG(COUNT(*))))>=((~ (AVG(vt0.c1))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((MAX(AVG(COUNT(*))))>=((~ (AVG(vt0.c1))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((MAX(AVG(COUNT(*))))>=((~ (AVG(vt0.c1)))))) ISNULL);
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 WHERE (((CAST(v0.c0 AS INTEGER)) ISNULL)) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 WHERE ((NOT (((CAST(v0.c0 AS INTEGER)) ISNULL)))) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, v0 WHERE (((((CAST(v0.c0 AS INTEGER)) ISNULL)) ISNULL));
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt0, vt1 WHERE (((LTRIM(vt0.c1, vt0.c0)) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (((((vt0.c1)AND(vt0.c1)))AND('Dq'))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM v0, vt0, vt1 WHERE ((NOT (((LTRIM(vt0.c1, vt0.c0)) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (((((vt0.c1)AND(vt0.c1)))AND('Dq'))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM v0, vt0, vt1 WHERE (((((LTRIM(vt0.c1, vt0.c0)) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (((((vt0.c1)AND(vt0.c1)))AND('Dq'))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt0 INNER JOIN vt1 ON (NOT (((vt1.c0)|(vt1.c0)))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt0 INNER JOIN vt1 ON (NOT (((vt1.c0)|(vt1.c0)))) GROUP BY vt1.c0 HAVING (((NULL)!=(GROUP_CONCAT(vt1.c0))) IN ()) UNION ALL SELECT vt1.c0 FROM v0, vt0 INNER JOIN vt1 ON (NOT (((vt1.c0)|(vt1.c0)))) GROUP BY vt1.c0 HAVING (NOT ((((NULL)!=(GROUP_CONCAT(vt1.c0))) IN ()))) UNION ALL SELECT vt1.c0 FROM v0, vt0 INNER JOIN vt1 ON (NOT (((vt1.c0)|(vt1.c0)))) GROUP BY vt1.c0 HAVING (((((NULL)<>(GROUP_CONCAT(vt1.c0))) IN ())) ISNULL);
SELECT vt1.c0 FROM v0, vt0 INNER JOIN vt1 ON (NOT (((vt1.c0)|(vt1.c0)))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt0 INNER JOIN vt1 ON (NOT (((vt1.c0)|(vt1.c0)))) GROUP BY vt1.c0 HAVING (((NULL)!=(GROUP_CONCAT(vt1.c0))) IN ()) UNION ALL SELECT vt1.c0 FROM v0, vt0 INNER JOIN vt1 ON (NOT (((vt1.c0)|(vt1.c0)))) GROUP BY vt1.c0 HAVING (NOT ((((NULL)!=(GROUP_CONCAT(vt1.c0))) IN ()))) UNION ALL SELECT vt1.c0 FROM v0, vt0 INNER JOIN vt1 ON (NOT (((vt1.c0)|(vt1.c0)))) GROUP BY vt1.c0 HAVING (((((NULL)<>(GROUP_CONCAT(vt1.c0))) IN ())) ISNULL);
SELECT vt1.c0 FROM v0, vt0 INNER JOIN vt1 ON (NOT (((vt1.c0)|(vt1.c0)))) GROUP BY vt1.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (json(vt0.c1) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (json(vt0.c1) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 WHERE (((json(vt0.c1) COLLATE RTRIM) ISNULL));
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 WHERE (CAST(((vt0.c1)IS NOT(vt0.c0)) AS REAL)) GROUP BY vt1.c0, vt0.c1, vt0.c0 UNION SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 WHERE ((NOT (CAST(((vt0.c1)IS NOT(vt0.c0)) AS REAL)))) GROUP BY vt1.c0, vt0.c1, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 WHERE (((CAST(((vt0.c1)IS NOT(vt0.c0)) AS REAL)) ISNULL)) GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt0.c0, vt1.c0, v0.c0, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c0)&(vt1.c0)) AS REAL) FULL OUTER JOIN v0 ON vt0.c0 GROUP BY vt0.c0, vt1.c0, v0.c0, vt0.c1;
SELECT vt0.c0, vt1.c0, v0.c0, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c0)&(vt1.c0)) AS REAL) FULL OUTER JOIN v0 ON vt0.c0 GROUP BY vt0.c0, vt1.c0, v0.c0, vt0.c1 HAVING (NOT (((vt1.c0)==(SUM(v0.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c0, v0.c0, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c0)&(vt1.c0)) AS REAL) FULL OUTER JOIN v0 ON vt0.c0 GROUP BY vt0.c0, vt1.c0, v0.c0, vt0.c1 HAVING (NOT ((NOT (((vt1.c0)==(SUM(v0.c0))))))) UNION ALL SELECT vt0.c0, vt1.c0, v0.c0, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c0)&(vt1.c0)) AS REAL) FULL OUTER JOIN v0 ON vt0.c0 GROUP BY vt0.c0, vt1.c0, v0.c0, vt0.c1 HAVING (((NOT (((vt1.c0)==(SUM(v0.c0)))))) ISNULL);
SELECT ALL vt0.c0, vt1.c0, v0.c0, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c0)&(vt1.c0)) AS REAL) FULL OUTER JOIN v0 ON vt0.c0 GROUP BY vt0.c0, vt1.c0, v0.c0, vt0.c1;
SELECT vt0.c0, vt1.c0, v0.c0, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c0)&(vt1.c0)) AS REAL) FULL OUTER JOIN v0 ON vt0.c0 GROUP BY vt0.c0, vt1.c0, v0.c0, vt0.c1 HAVING (NOT (((vt1.c0)==(SUM(v0.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c0, v0.c0, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c0)&(vt1.c0)) AS REAL) FULL OUTER JOIN v0 ON vt0.c0 GROUP BY vt0.c0, vt1.c0, v0.c0, vt0.c1 HAVING (NOT ((NOT (((vt1.c0)==(SUM(v0.c0))))))) UNION ALL SELECT vt0.c0, vt1.c0, v0.c0, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c0)&(vt1.c0)) AS REAL) FULL OUTER JOIN v0 ON vt0.c0 GROUP BY vt0.c0, vt1.c0, v0.c0, vt0.c1 HAVING (((NOT (((vt1.c0)==(SUM(v0.c0)))))) ISNULL);
SELECT ALL vt0.c0, vt1.c0, v0.c0, vt0.c1 FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c0)&(vt1.c0)) AS REAL) FULL OUTER JOIN v0 ON vt0.c0 GROUP BY vt0.c0, vt1.c0, v0.c0, vt0.c1;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)AND(vt0.c0)))OR(NULL))) NOT NULL);
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)AND(vt0.c0)))OR(NULL))) NOT NULL) WHERE (x'') UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)AND(vt0.c0)))OR(NULL))) NOT NULL) WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)AND(vt0.c0)))OR(NULL))) NOT NULL) WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)AND(vt0.c0)))OR(NULL))) NOT NULL);
SELECT v0.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON ((((vt0.c0)!=(vt0.c0)))IS NOT((((v0.c0, v0.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt0.c1))))) LEFT OUTER JOIN vt1 ON (x'7256' IN ()) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON ((((vt0.c0)<>(vt0.c0)))IS NOT((((v0.c0, v0.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt0.c1))))) LEFT OUTER JOIN vt1 ON (x'7256' IN ()) WHERE ((- (((v0.c0)<<(vt1.c0))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON ((((vt0.c0)!=(vt0.c0)))IS NOT((((v0.c0, v0.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt0.c1))))) LEFT OUTER JOIN vt1 ON (x'7256' IN ()) WHERE ((NOT ((- (((v0.c0)<<(vt1.c0))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON ((((vt0.c0)!=(vt0.c0)))IS NOT((((v0.c0, v0.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt0.c1))))) LEFT OUTER JOIN vt1 ON (x'7256' IN ()) WHERE ((((- (((v0.c0)<<(vt1.c0))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON ((((vt0.c0)!=(vt0.c0)))IS NOT((((v0.c0, v0.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt0.c1))))) LEFT OUTER JOIN vt1 ON (x'7256' IN ()) GROUP BY v0.c0, vt0.c0;
SELECT vt1.c0, vt0.c1 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c1 HAVING (((~ (v0.c0))) BETWEEN (COUNT(*)) AND (UPPER(DISTINCT SUM(vt1.c0)))) UNION ALL SELECT vt1.c0, vt0.c1 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c1 HAVING (NOT ((((~ (v0.c0))) BETWEEN (COUNT(*)) AND (UPPER(DISTINCT SUM(vt1.c0)))))) UNION ALL SELECT vt1.c0, vt0.c1 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c1 HAVING (((((~ (v0.c0))) BETWEEN (COUNT(*)) AND (UPPER(DISTINCT SUM(vt1.c0))))) ISNULL);
SELECT vt1.c0, vt0.c1 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c1 HAVING (((~ (v0.c0))) BETWEEN (COUNT(*)) AND (UPPER(DISTINCT SUM(vt1.c0)))) UNION ALL SELECT vt1.c0, vt0.c1 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c1 HAVING (NOT ((((~ (v0.c0))) BETWEEN (COUNT(*)) AND (UPPER(DISTINCT SUM(vt1.c0)))))) UNION ALL SELECT vt1.c0, vt0.c1 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c1 HAVING (((((~ (v0.c0))) BETWEEN (COUNT(*)) AND (UPPER(DISTINCT SUM(vt1.c0))))) ISNULL);
SELECT vt1.c0, vt0.c1 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c1;
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (GLOB(0x6367b371, (~ (vt1.c0)))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (GLOB(0x6367b371, (~ (vt1.c0)))))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((GLOB(0x6367b371, (~ (vt1.c0)))) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((+ ((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((+ ((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0)))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((+ ((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT v0.c0, vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT v0.c0, vt0.c0, vt1.c0 FROM vt0, v0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) GROUP BY v0.c0, vt0.c0, vt1.c0 UNION SELECT v0.c0, vt0.c0, vt1.c0 FROM vt0, v0, vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))))) GROUP BY v0.c0, vt0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt0, v0, vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) ISNULL)) GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT v0.c0, vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1 HAVING AVG(((vt0.c0) NOTNULL)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (AVG(((vt0.c0) NOTNULL)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG(((vt0.c0) NOTNULL))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1 HAVING AVG(((vt0.c0) NOTNULL)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (AVG(((vt0.c0) NOTNULL)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG(((vt0.c0) NOTNULL))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 WHERE ((~ (vt0.c0))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((~ (vt0.c0))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((((~ (vt0.c0))) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1, v0;
SELECT DISTINCT vt1.c0 FROM vt1, v0 WHERE (TRIM((- (v0.c0)))) UNION SELECT DISTINCT vt1.c0 FROM vt1, v0 WHERE ((NOT (TRIM((- (v0.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, v0 WHERE (((TRIM((- (v0.c0)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)*(v0.c0)) IN ())) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)*(v0.c0)) IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)*(v0.c0)) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0 HAVING COUNT(TOTAL(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(TOTAL(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0 HAVING ((COUNT(TOTAL(vt0.c0))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((+ ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((+ ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((+ ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON ((((vt1.c0)*(vt1.c0)))LIKE((NOT ('w\'))));
SELECT DISTINCT v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON ((((vt1.c0)*(vt1.c0)))LIKE((NOT ('w\')))) WHERE (NULL) UNION SELECT DISTINCT v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON ((((vt1.c0)*(vt1.c0)))LIKE((NOT ('w\')))) WHERE ((NOT (NULL))) UNION SELECT DISTINCT v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON ((((vt1.c0)*(vt1.c0)))LIKE((NOT ('w\')))) WHERE (((NULL) ISNULL));
SELECT DISTINCT v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON ((((vt1.c0)*(vt1.c0)))LIKE((NOT ('w\'))));
SELECT v0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE ((+ ((vt0.c1 IN ())))) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM vt1, vt0 NOT INDEXED, v0 WHERE ((NOT ((+ ((vt0.c1 IN ())))))) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE ((((+ ((vt0.c1 IN ())))) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY v0.c0, vt1.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING SUM(AVG(vt0.c1)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (SUM(AVG(vt0.c1)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((SUM(AVG(vt0.c1))) ISNULL);
SELECT MAX(((x'') BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) FROM vt1;
SELECT * FROM vt0 NOT INDEXED;
SELECT * FROM vt0 WHERE ((((((vt0.c1) BETWEEN (NULL) AND (vt0.c0))))>=((CASE WHEN vt0.c0 THEN vt0.c1 END)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((((vt0.c1) BETWEEN (NULL) AND (vt0.c0))))>=((CASE WHEN vt0.c0 THEN vt0.c1 END)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((((vt0.c1) BETWEEN (NULL) AND (vt0.c0))))>=((CASE WHEN vt0.c0 THEN vt0.c1 END)))) ISNULL));
SELECT * FROM vt0 NOT INDEXED;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((TRIM(v0.c0))OR(x'')))OR((vt0.c1 IN ())))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (((((TRIM(v0.c0))OR(x'')))OR((vt0.c1 IN ())))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((((TRIM(v0.c0))OR(x'')))OR((vt0.c1 IN ())))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CHAR(CAST(vt1.c0 AS INTEGER))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CHAR(CAST(vt1.c0 AS INTEGER))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CHAR(CAST(vt1.c0 AS INTEGER))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (((((((SUM(TOTAL(MIN(MIN(v0.c0))))))=((TOTAL(3.81843486E8)))))AND(((COUNT(*)) BETWEEN (AVG(COUNT(COUNT(vt0.c0)))) AND (GROUP_CONCAT(v0.c0))))))OR((((vt0.c1))=((COUNT(TOTAL(COUNT(*)))))))) UNION ALL SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (NOT ((((((((SUM(TOTAL(MIN(MIN(v0.c0))))))=((TOTAL(3.81843486E8)))))AND(((COUNT(*)) BETWEEN (AVG(COUNT(COUNT(vt0.c0)))) AND (GROUP_CONCAT(v0.c0))))))OR((((vt0.c1))=((COUNT(TOTAL(COUNT(*)))))))))) UNION ALL SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (((((((((SUM(TOTAL(MIN(MIN(v0.c0))))))=((TOTAL(3.81843486E8)))))AND(((COUNT(*)) BETWEEN (AVG(COUNT(COUNT(vt0.c0)))) AND (GROUP_CONCAT(v0.c0))))))OR((((vt0.c1))=((COUNT(TOTAL(COUNT(*))))))))) ISNULL);
SELECT vt0.c0, vt1.c0, v0.c0 FROM vt0, vt1 RIGHT OUTER JOIN v0 ON (NOT ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))));
SELECT vt0.c0, vt1.c0, v0.c0 FROM vt0, vt1 RIGHT OUTER JOIN v0 ON (NOT ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) WHERE (CASE (NULL IN ())  WHEN json_type(vt1.c0) THEN json_array(vt0.c1, vt0.c1) END) UNION ALL SELECT vt0.c0, vt1.c0, v0.c0 FROM vt0, vt1 RIGHT OUTER JOIN v0 ON (NOT ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) WHERE ((NOT (CASE (NULL IN ())  WHEN json_type(vt1.c0) THEN json_array(vt0.c1, vt0.c1) END))) UNION ALL SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt0, vt1 RIGHT OUTER JOIN v0 ON (NOT ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) WHERE (((CASE (NULL IN ())  WHEN json_type(vt1.c0) THEN json_array(vt0.c1, vt0.c1) END) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ('') UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (''))) UNION SELECT DISTINCT * FROM vt1 WHERE ((('') ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) ISNULL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) ISNULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) ISNULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(GROUP_CONCAT(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(GROUP_CONCAT(v0.c0))) ISNULL);
SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(CASE WHEN vt0.c1 THEN vt1.c0 END)))OR(((vt0.c1)LIKE(vt0.c0)))))OR(((((vt1.c0)OR(NULL)))AND(vt0.c1)))))OR((NOT (vt1.c0))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(CASE WHEN vt0.c1 THEN vt1.c0 END)))OR(((vt0.c1)LIKE(vt0.c0)))))OR(((((vt1.c0)OR(NULL)))AND(vt0.c1)))))OR((NOT (vt1.c0))))))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((((((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(CASE WHEN vt0.c1 THEN vt1.c0 END)))OR(((vt0.c1)LIKE(vt0.c0)))))OR(((((vt1.c0)OR(NULL)))AND(vt0.c1)))))OR((NOT (vt1.c0))))) ISNULL));
SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE WHEN CAST(vt0.c1 AS INTEGER) THEN vt0.c0 ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN CAST(vt0.c1 AS INTEGER) THEN vt0.c0 ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN CAST(vt0.c1 AS INTEGER) THEN vt0.c0 ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((x'593a')>=(((vt1.c0)<<(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((x'593a')>=(((vt1.c0)<<(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((x'593a')>=(((vt1.c0)<<(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt1 CROSS JOIN vt0 ON (CAST(vt1.c0 AS INTEGER) IN ()) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 CROSS JOIN vt0 ON (CAST(vt1.c0 AS INTEGER) IN ()) GROUP BY vt1.c0 HAVING NULL UNION ALL SELECT vt1.c0 FROM v0, vt1 CROSS JOIN vt0 ON (CAST(vt1.c0 AS INTEGER) IN ()) GROUP BY vt1.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 CROSS JOIN vt0 ON (CAST(vt1.c0 AS INTEGER) IN ()) GROUP BY vt1.c0 HAVING ((NULL) ISNULL);
SELECT vt1.c0 FROM v0, vt1 CROSS JOIN vt0 ON (CAST(vt1.c0 AS INTEGER) IN ()) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 CROSS JOIN vt0 ON (CAST(vt1.c0 AS INTEGER) IN ()) GROUP BY vt1.c0 HAVING NULL UNION ALL SELECT vt1.c0 FROM v0, vt1 CROSS JOIN vt0 ON (CAST(vt1.c0 AS INTEGER) IN ()) GROUP BY vt1.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 CROSS JOIN vt0 ON (CAST(vt1.c0 AS INTEGER) IN ()) GROUP BY vt1.c0 HAVING ((NULL) ISNULL);
SELECT vt1.c0 FROM v0, vt1 CROSS JOIN vt0 ON (CAST(vt1.c0 AS INTEGER) IN ()) GROUP BY vt1.c0;
SELECT * FROM vt1, vt0, v0;
SELECT ALL * FROM vt1, vt0, v0 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 ELSE 0.8327310588425129 END)|(CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END))) UNION ALL SELECT ALL * FROM vt1, vt0, v0 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt0.c0 ELSE 0.8327310588425129 END)|(CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END))))) UNION ALL SELECT * FROM vt1, vt0, v0 WHERE (((((CASE WHEN vt1.c0 THEN vt0.c0 ELSE 0.8327310588425129 END)|(CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT * FROM vt1, vt0, v0;
SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1;
SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1 WHERE ((((((((((((vt1.c0)OR(vt1.c0)))OR(v0.c0)))OR(vt1.c0)))AND(v0.c0))))>=((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(v0.c0)))AND(0.9263250289545233)))OR(v0.c0)))))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1 WHERE ((NOT ((((((((((((vt1.c0)OR(vt1.c0)))OR(v0.c0)))OR(vt1.c0)))AND(v0.c0))))>=((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(v0.c0)))AND(0.9263250289545233)))OR(v0.c0)))))))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1 WHERE ((((((((((((((vt1.c0)OR(vt1.c0)))OR(v0.c0)))OR(vt1.c0)))AND(v0.c0))))>=((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(v0.c0)))AND(0.9263250289545233)))OR(v0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt1 WHERE (CASE CAST(vt1.c0 AS BLOB)  WHEN vt1.c0 THEN CAST(vt1.c0 AS INTEGER) ELSE -651788425 COLLATE BINARY END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM v0, vt1 WHERE ((NOT (CASE CAST(vt1.c0 AS BLOB)  WHEN vt1.c0 THEN CAST(vt1.c0 AS INTEGER) ELSE -651788425 COLLATE BINARY END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM v0, vt1 WHERE (((CASE CAST(vt1.c0 AS BLOB)  WHEN vt1.c0 THEN CAST(vt1.c0 AS INTEGER) ELSE -651788425 COLLATE BINARY END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (TOTAL(COUNT(TOTAL(MAX(vt1.c0)))) IN ()) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((TOTAL(COUNT(TOTAL(MAX(vt1.c0)))) IN ()))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((TOTAL(COUNT(TOTAL(MAX(vt1.c0)))) IN ())) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (TOTAL(COUNT(TOTAL(MAX(vt1.c0)))) IN ()) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((TOTAL(COUNT(TOTAL(MAX(vt1.c0)))) IN ()))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((TOTAL(COUNT(TOTAL(MAX(vt1.c0)))) IN ())) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((vt1.c0)-(vt1.c0))) AND ((~ (vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((vt1.c0)-(vt1.c0))) AND ((~ (vt1.c0))))))) UNION ALL SELECT * FROM vt1 NOT INDEXED WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((vt1.c0)-(vt1.c0))) AND ((~ (vt1.c0))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM v0, vt1, vt0;
SELECT DISTINCT * FROM v0, vt1, vt0 WHERE (((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0, vt1, vt0 WHERE ((NOT (((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0, vt1, vt0 NOT INDEXED WHERE (((((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0, vt1, vt0;
SELECT ALL vt0.c1, v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, v0.c0, vt0.c0;
SELECT ALL vt0.c1, v0.c0, vt0.c0 FROM v0, vt0, vt1 WHERE (((ABS(DISTINCT v0.c0)) NOT NULL)) GROUP BY vt0.c1, v0.c0, vt0.c0 UNION SELECT vt0.c1, v0.c0, vt0.c0 FROM v0, vt0, vt1 WHERE ((NOT (((ABS(DISTINCT v0.c0)) NOT NULL)))) GROUP BY vt0.c1, v0.c0, vt0.c0 UNION SELECT ALL vt0.c1, v0.c0, vt0.c0 FROM v0, vt0, vt1 WHERE (((((ABS(DISTINCT v0.c0)) NOT NULL)) ISNULL)) GROUP BY vt0.c1, v0.c0, vt0.c0;
SELECT ALL vt0.c1, v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, v0.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, v0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0, vt0.c1, v0.c0;
SELECT ALL vt1.c0, vt0.c1, v0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0, vt0.c1, v0.c0 HAVING COUNT(vt0.c0) UNION ALL SELECT ALL vt1.c0, vt0.c1, v0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0, vt0.c1, v0.c0 HAVING (NOT (COUNT(vt0.c0))) UNION ALL SELECT vt1.c0, vt0.c1, v0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0, vt0.c1, v0.c0 HAVING ((COUNT(vt0.c0)) ISNULL);
SELECT ALL vt1.c0, vt0.c1, v0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0, vt0.c1, v0.c0;
SELECT ALL vt1.c0, vt0.c1, v0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0, vt0.c1, v0.c0 HAVING COUNT(vt0.c0) UNION ALL SELECT ALL vt1.c0, vt0.c1, v0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0, vt0.c1, v0.c0 HAVING (NOT (COUNT(vt0.c0))) UNION ALL SELECT vt1.c0, vt0.c1, v0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0, vt0.c1, v0.c0 HAVING ((COUNT(vt0.c0)) ISNULL);
SELECT ALL vt1.c0, vt0.c1, v0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0, vt0.c1, v0.c0;
SELECT * FROM vt1 CROSS JOIN v0 ON ((((vt0.c1)<=(vt0.c0)))||(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END)) INNER JOIN vt0 ON ((v0.c0) NOT BETWEEN (x'7d8f') AND (((vt1.c0)||(v0.c0))));
SELECT ALL * FROM vt1 CROSS JOIN v0 ON ((((vt0.c1)<=(vt0.c0)))||(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END)) INNER JOIN vt0 ON ((v0.c0) NOT BETWEEN (x'7d8f') AND (((vt1.c0)||(v0.c0)))) WHERE ((- (((vt0.c1) ISNULL)))) UNION ALL SELECT * FROM vt1 CROSS JOIN v0 ON ((((vt0.c1)<=(vt0.c0)))||(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END)) INNER JOIN vt0 ON ((v0.c0) NOT BETWEEN (x'7d8f') AND (((vt1.c0)||(v0.c0)))) WHERE ((NOT ((- (((vt0.c1) ISNULL)))))) UNION ALL SELECT * FROM vt1 CROSS JOIN v0 ON ((((vt0.c1)<=(vt0.c0)))||(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END)) INNER JOIN vt0 ON ((v0.c0) NOT BETWEEN (x'7d8f') AND (((vt1.c0)||(v0.c0)))) WHERE ((((- (((vt0.c1) ISNULL)))) ISNULL));
SELECT * FROM vt1 CROSS JOIN v0 ON ((((vt0.c1)<=(vt0.c0)))||(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END)) INNER JOIN vt0 ON ((v0.c0) NOT BETWEEN (x'7d8f') AND (((vt1.c0)||(v0.c0))));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM v0, vt1, vt0 GROUP BY vt1.c0, vt0.c0, v0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM v0, vt1, vt0 WHERE (((((CAST(vt0.c0 AS REAL))AND((vt0.c1 IN (0.7350207306542664, vt0.c0)))))AND(vt0.c0))) GROUP BY vt1.c0, vt0.c0, v0.c0, vt0.c1 UNION SELECT vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM v0, vt1, vt0 WHERE ((NOT (((((CAST(vt0.c0 AS REAL))AND((vt0.c1 IN (0.7350207306542664, vt0.c0)))))AND(vt0.c0))))) GROUP BY vt1.c0, vt0.c0, v0.c0, vt0.c1 UNION SELECT vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM v0, vt1, vt0 WHERE (((((((CAST(vt0.c0 AS REAL))AND((vt0.c1 IN (0.7350207306542664, vt0.c0)))))AND(vt0.c0))) ISNULL)) GROUP BY vt1.c0, vt0.c0, v0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM v0, vt1, vt0 GROUP BY vt1.c0, vt0.c0, v0.c0, vt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(AVG(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(AVG(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(AVG(vt1.c0))) ISNULL);
SELECT * FROM vt1, v0;
SELECT * FROM vt1, v0 WHERE (CAST(((vt1.c0) ISNULL) AS TEXT)) UNION ALL SELECT ALL * FROM vt1, v0 WHERE ((NOT (CAST(((vt1.c0) ISNULL) AS TEXT)))) UNION ALL SELECT * FROM vt1, v0 WHERE (((CAST(((vt1.c0) ISNULL) AS TEXT)) ISNULL));
SELECT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0 COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT ((vt0.c1 IN ())))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT ((NOT ((vt0.c1 IN ())))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((((NOT ((vt0.c1 IN ())))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON (((- (v0.c0)))GLOB(CAST(vt1.c0 AS BLOB))) GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON (((- (v0.c0)))GLOB(CAST(vt1.c0 AS BLOB))) GROUP BY vt1.c0, v0.c0 HAVING (((- (vt1.c0))) IS FALSE) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON (((- (v0.c0)))GLOB(CAST(vt1.c0 AS BLOB))) GROUP BY vt1.c0, v0.c0 HAVING (NOT ((((- (vt1.c0))) IS FALSE))) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON (((- (v0.c0)))GLOB(CAST(vt1.c0 AS BLOB))) GROUP BY vt1.c0, v0.c0 HAVING (((((- (vt1.c0))) IS FALSE)) ISNULL);
SELECT ALL vt1.c0, v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON (((- (v0.c0)))GLOB(CAST(vt1.c0 AS BLOB))) GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON (((- (v0.c0)))GLOB(CAST(vt1.c0 AS BLOB))) GROUP BY vt1.c0, v0.c0 HAVING (((- (vt1.c0))) IS FALSE) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON (((- (v0.c0)))GLOB(CAST(vt1.c0 AS BLOB))) GROUP BY vt1.c0, v0.c0 HAVING (NOT ((((- (vt1.c0))) IS FALSE))) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON (((- (v0.c0)))GLOB(CAST(vt1.c0 AS BLOB))) GROUP BY vt1.c0, v0.c0 HAVING (((((- (vt1.c0))) IS FALSE)) ISNULL);
SELECT ALL vt1.c0, v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON (((- (v0.c0)))GLOB(CAST(vt1.c0 AS BLOB))) GROUP BY vt1.c0, v0.c0;
SELECT ALL v0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1 FULL OUTER JOIN v0 ON ((vt1.c0)&(CAST(vt0.c0 AS TEXT)));
SELECT ALL v0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1 FULL OUTER JOIN v0 ON ((vt1.c0)&(CAST(vt0.c0 AS TEXT))) WHERE (((((v0.c0)*(vt0.c1))) IS TRUE)) UNION ALL SELECT ALL v0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1 FULL OUTER JOIN v0 ON ((vt1.c0)&(CAST(vt0.c0 AS TEXT))) WHERE ((NOT (((((v0.c0)*(vt0.c1))) IS TRUE)))) UNION ALL SELECT ALL v0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1 FULL OUTER JOIN v0 ON ((vt1.c0)&(CAST(vt0.c0 AS TEXT))) WHERE (((((((v0.c0)*(vt0.c1))) IS TRUE)) ISNULL));
SELECT ALL v0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1 FULL OUTER JOIN v0 ON ((vt1.c0)&(CAST(vt0.c0 AS TEXT)));
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((- ((vt1.c0 IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((- ((vt1.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((- ((vt1.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((rtreenode(vt1.c0, x''))<(((vt1.c0)AND(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((rtreenode(vt1.c0, x''))<(((vt1.c0)AND(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((rtreenode(vt1.c0, x''))<(((vt1.c0)AND(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(TOTAL(GROUP_CONCAT(vt0.c1))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(TOTAL(GROUP_CONCAT(vt0.c1))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(TOTAL(GROUP_CONCAT(vt0.c1)))) ISNULL);
SELECT ALL * FROM v0, vt1;
SELECT ALL * FROM v0, vt1 WHERE (((((((vt1.c0, v0.c0, vt1.c0)) NOT BETWEEN ((v0.c0, v0.c0, x'bdfe')) AND ((v0.c0, v0.c0, v0.c0))), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, ((vt1.c0) NOTNULL)))>((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, (((v0.c0, v0.c0, vt1.c0, v0.c0, vt1.c0))<=((vt1.c0, v0.c0, v0.c0, vt1.c0, vt1.c0))), v0.c0)))) UNION ALL SELECT ALL * FROM v0, vt1 WHERE ((NOT (((((((vt1.c0, v0.c0, vt1.c0)) NOT BETWEEN ((v0.c0, v0.c0, x'bdfe')) AND ((v0.c0, v0.c0, v0.c0))), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, ((vt1.c0) NOTNULL)))>((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, (((v0.c0, v0.c0, vt1.c0, v0.c0, vt1.c0))<=((vt1.c0, v0.c0, v0.c0, vt1.c0, vt1.c0))), v0.c0)))))) UNION ALL SELECT ALL * FROM v0, vt1 WHERE (((((((((vt1.c0, v0.c0, vt1.c0)) NOT BETWEEN ((v0.c0, v0.c0, x'bdfe')) AND ((v0.c0, v0.c0, v0.c0))), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, ((vt1.c0) NOTNULL)))>((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, (((v0.c0, v0.c0, vt1.c0, v0.c0, vt1.c0))<=((vt1.c0, v0.c0, v0.c0, vt1.c0, vt1.c0))), v0.c0)))) ISNULL));
SELECT ALL * FROM v0, vt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (0.06473719403501832) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (0.06473719403501832))) UNION SELECT DISTINCT * FROM v0 NOT INDEXED WHERE (((0.06473719403501832) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 WHERE (TRIM(((v0.c0) IS FALSE))) GROUP BY vt1.c0, v0.c0 UNION SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 WHERE ((NOT (TRIM(((v0.c0) IS FALSE))))) GROUP BY vt1.c0, v0.c0 UNION SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 WHERE (((TRIM(((v0.c0) IS FALSE))) ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT vt0.c0, v0.c0, vt1.c0, vt0.c1 FROM v0, vt0, vt1 GROUP BY vt0.c0, v0.c0, vt1.c0, vt0.c1;
SELECT vt0.c0, v0.c0, vt1.c0, vt0.c1 FROM v0, vt0 NOT INDEXED, vt1 GROUP BY vt0.c0, v0.c0, vt1.c0, vt0.c1 HAVING COUNT(((SUM(GROUP_CONCAT(vt0.c0)))IS(vt0.c1))) UNION ALL SELECT ALL vt0.c0, v0.c0, vt1.c0, vt0.c1 FROM v0, vt0, vt1 GROUP BY vt0.c0, v0.c0, vt1.c0, vt0.c1 HAVING (NOT (COUNT(((SUM(GROUP_CONCAT(vt0.c0)))IS(vt0.c1))))) UNION ALL SELECT ALL vt0.c0, v0.c0, vt1.c0, vt0.c1 FROM v0, vt0, vt1 GROUP BY vt0.c0, v0.c0, vt1.c0, vt0.c1 HAVING ((COUNT(((SUM(GROUP_CONCAT(vt0.c0)))IS(vt0.c1)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (COALESCE((vt0.c1 IN ()), CASE NULL  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c0 END)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (COALESCE((vt0.c1 IN ()), CASE NULL  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c0 END)))) UNION ALL SELECT * FROM vt0 WHERE (((COALESCE((vt0.c1 IN ()), CASE NULL  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c0 END)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((+ ((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((+ ((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((+ ((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM v0, vt0 NOT INDEXED, vt1 WHERE ((~ (INSTR(v0.c0, vt0.c0)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM v0, vt0, vt1 WHERE ((NOT ((~ (INSTR(v0.c0, vt0.c0)))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM v0, vt0, vt1 WHERE ((((~ (INSTR(v0.c0, vt0.c0)))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(MIN(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(MIN(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(MIN(vt1.c0))) ISNULL);
SELECT * FROM vt1, v0, vt0;
SELECT ALL * FROM vt1, v0, vt0 WHERE (load_extension(CAST(v0.c0 AS NUMERIC), ((vt0.c0)||(vt0.c0)))) UNION ALL SELECT * FROM vt1, v0, vt0 WHERE ((NOT (load_extension(CAST(v0.c0 AS NUMERIC), ((vt0.c0)||(vt0.c0)))))) UNION ALL SELECT ALL * FROM vt1, v0, vt0 WHERE (((load_extension(CAST(v0.c0 AS NUMERIC), ((vt0.c0)||(vt0.c0)))) ISNULL));
SELECT DISTINCT vt1.c0, v0.c0 FROM vt0, vt1, v0;
SELECT DISTINCT vt1.c0, v0.c0 FROM vt0, vt1, v0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<<(((vt0.c0)OR(vt0.c0))))) UNION SELECT DISTINCT vt1.c0, v0.c0 FROM vt0, vt1, v0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<<(((vt0.c0)OR(vt0.c0))))))) UNION SELECT DISTINCT vt1.c0, v0.c0 FROM vt0, vt1, v0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<<(((vt0.c0)OR(vt0.c0))))) ISNULL));
SELECT DISTINCT vt1.c0, v0.c0 FROM vt0, vt1, v0;
SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN NULL THEN (((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c1, '')) AND ((vt0.c1, vt0.c0, vt0.c1))) END GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN NULL THEN (((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c1, '')) AND ((vt0.c1, vt0.c0, vt0.c1))) END WHERE (586908484) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN NULL THEN (((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c1, '')) AND ((vt0.c1, vt0.c0, vt0.c1))) END WHERE ((NOT (586908484))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN NULL THEN (((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c1, '')) AND ((vt0.c1, vt0.c0, vt0.c1))) END WHERE (((586908484) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN NULL THEN (((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c1, '')) AND ((vt0.c1, vt0.c0, vt0.c1))) END GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (CASE WHEN ((v0.c0)+(v0.c0)) THEN ((v0.c0)>(v0.c0)) WHEN ((v0.c0)%(v0.c0)) THEN ((v0.c0)+(0.16000495473552767)) WHEN ',c~R>' THEN ((v0.c0)AND(v0.c0)) ELSE CAST(v0.c0 AS INTEGER) END) UNION ALL SELECT * FROM v0 WHERE ((NOT (CASE WHEN ((v0.c0)+(v0.c0)) THEN ((v0.c0)>(v0.c0)) WHEN ((v0.c0)%(v0.c0)) THEN ((v0.c0)+(0.16000495473552767)) WHEN ',c~R>' THEN ((v0.c0)AND(v0.c0)) ELSE CAST(v0.c0 AS INTEGER) END))) UNION ALL SELECT * FROM v0 WHERE (((CASE WHEN ((v0.c0)+(v0.c0)) THEN ((v0.c0)>(v0.c0)) WHEN ((v0.c0)%(v0.c0)) THEN ((v0.c0)+(0.16000495473552767)) WHEN ',c~R>' THEN ((v0.c0)AND(v0.c0)) ELSE CAST(v0.c0 AS INTEGER) END) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0 FROM vt1, vt0, v0;
SELECT DISTINCT v0.c0 FROM vt1, vt0, v0 WHERE (((((0.9481247779903503 IN ()), CAST(vt0.c1 AS INTEGER), CAST(vt0.c0 AS BLOB)))>((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)), (+ (vt0.c0)), ((vt0.c0)<=(vt0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM vt1, vt0, v0 NOT INDEXED WHERE ((NOT (((((0.9481247779903503 IN ()), CAST(vt0.c1 AS INTEGER), CAST(vt0.c0 AS BLOB)))>((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)), (+ (vt0.c0)), ((vt0.c0)<=(vt0.c0)))))))) UNION SELECT DISTINCT v0.c0 FROM vt1, vt0, v0 WHERE (((((((0.9481247779903503 IN ()), CAST(vt0.c1 AS INTEGER), CAST(vt0.c0 AS BLOB)))>((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)), (+ (vt0.c0)), ((vt0.c0)<=(vt0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM vt1, vt0, v0;
SELECT vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt0, vt1 WHERE (((((((((((vt0.c1)OR(v0.c0)))AND(vt0.c1)))AND(v0.c0)))OR(vt0.c0)))%(vt0.c1))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM v0, vt0, vt1 WHERE ((NOT (((((((((((vt0.c1)OR(v0.c0)))AND(vt0.c1)))AND(v0.c0)))OR(vt0.c0)))%(vt0.c1))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM v0, vt0, vt1 WHERE (((((((((((((vt0.c1)OR(v0.c0)))AND(vt0.c1)))AND(v0.c0)))OR(vt0.c0)))%(vt0.c1))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((((TOTAL(SUM(COUNT(*))), vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, SUM('1578489122'))))) ISNULL) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((((((TOTAL(SUM(COUNT(*))), vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, SUM('1578489122'))))) ISNULL))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((((((TOTAL(SUM(COUNT(*))), vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, SUM('1578489122'))))) ISNULL)) ISNULL);
SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0 NOT INDEXED, v0, vt1;
SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0, v0, vt1 WHERE ((LIKE(vt0.c0, vt0.c0, '5') IN ((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) UNION ALL SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0, v0, vt1 WHERE ((NOT ((LIKE(vt0.c0, vt0.c0, '5') IN ((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))))) UNION ALL SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0, v0, vt1 WHERE ((((LIKE(vt0.c0, vt0.c0, '5') IN ((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ISNULL));
SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0 NOT INDEXED, v0, vt1;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((((-1639413148)AND(0.3595365399336966)))OR(vt0.c1)))%(CASE vt0.c0  WHEN vt0.c1 THEN NULL END))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((((((-1639413148)AND(0.3595365399336966)))OR(vt0.c1)))%(CASE vt0.c0  WHEN vt0.c1 THEN NULL END))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((((((-1639413148)AND(0.3595365399336966)))OR(vt0.c1)))%(CASE vt0.c0  WHEN vt0.c1 THEN NULL END))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT vt0.c0 FROM vt1 INNER JOIN vt0 ON CAST('-256680693' AS NUMERIC) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1 INNER JOIN vt0 ON CAST('-256680693' AS NUMERIC) WHERE (vt1.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1 INNER JOIN vt0 ON CAST('-256680693' AS NUMERIC) WHERE ((NOT (vt1.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1 INNER JOIN vt0 ON CAST('-256680693' AS NUMERIC) WHERE (((vt1.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 INNER JOIN vt0 ON CAST('-256680693' AS NUMERIC) GROUP BY vt0.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((((CAST(vt0.c1 AS REAL))OR(UPPER(vt1.c0))))AND(vt0.c1 COLLATE BINARY)) LEFT OUTER JOIN vt1 ON (- ((vt1.c0 IN ()))) GROUP BY v0.c0, vt1.c0;
SELECT * FROM v0, vt1, vt0;
SELECT * FROM v0, vt1 NOT INDEXED, vt0 WHERE (((((vt1.c0)+(v0.c0)))>(x''))) UNION ALL SELECT * FROM v0, vt1, vt0 WHERE ((NOT (((((vt1.c0)+(v0.c0)))>(x''))))) UNION ALL SELECT ALL * FROM v0, vt1, vt0 WHERE (((((((vt1.c0)+(v0.c0)))>(x''))) ISNULL));
SELECT * FROM v0, vt1, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)+(NULL)))!=((v0.c0 IN ())))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0)+(NULL)))<>((v0.c0 IN ())))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0)+(NULL)))!=((v0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 FULL OUTER JOIN vt1 ON (((((((((- (x'')))OR(NULL)))OR((NOT (vt1.c0)))))OR(0.5133811278904616)))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(v0.c0)))OR(vt1.c0)))) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 FULL OUTER JOIN vt1 ON (((((((((- (x'')))OR(NULL)))OR((NOT (vt1.c0)))))OR(0.5133811278904616)))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(v0.c0)))OR(vt1.c0)))) WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 FULL OUTER JOIN vt1 ON (((((((((- (x'')))OR(NULL)))OR((NOT (vt1.c0)))))OR(0.5133811278904616)))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(v0.c0)))OR(vt1.c0)))) WHERE ((NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN vt1 ON (((((((((- (x'')))OR(NULL)))OR((NOT (vt1.c0)))))OR(0.5133811278904616)))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(v0.c0)))OR(vt1.c0)))) WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 FULL OUTER JOIN vt1 ON (((((((((- (x'')))OR(NULL)))OR((NOT (vt1.c0)))))OR(0.5133811278904616)))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(v0.c0)))OR(vt1.c0)))) GROUP BY v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, v0.c0 HAVING (((CAST(1.372333983E9 AS TEXT), COUNT(MIN(SUM(COUNT(*)))), ((v0.c0) ISNULL)))<>((AVG(v0.c0) COLLATE BINARY, vt1.c0, GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, v0.c0 HAVING (NOT ((((CAST(1.372333983E9 AS TEXT), COUNT(MIN(SUM(COUNT(*)))), ((v0.c0) ISNULL)))<>((AVG(v0.c0) COLLATE BINARY, vt1.c0, GROUP_CONCAT(vt0.c0)))))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, v0.c0 HAVING (((((CAST(1.372333983E9 AS TEXT), COUNT(MIN(SUM(COUNT(*)))), ((v0.c0) ISNULL)))!=((AVG(v0.c0) COLLATE BINARY, vt1.c0, GROUP_CONCAT(vt0.c0))))) ISNULL);
SELECT ALL * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0)*(v0.c0)) IN ())) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT ((((v0.c0)*(v0.c0)) IN ())))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((((((v0.c0)*(v0.c0)) IN ())) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND (('-1965135163', vt1.c0, vt1.c0)))) AND (x''))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND (('-1965135163', vt1.c0, vt1.c0)))) AND (x''))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND (('-1965135163', vt1.c0, vt1.c0)))) AND (x''))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE ((CASE '-38957886'  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END IN ())) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT ((CASE '-38957886'  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END IN ())))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((((CASE '-38957886'  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END IN ())) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON HEX(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))) LEFT OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS REAL) AS REAL);
SELECT DISTINCT * FROM vt0, vt1 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE NOCASE) IS FALSE);
SELECT DISTINCT * FROM vt0, vt1 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE NOCASE) IS FALSE) WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END)!=(((vt1.c0) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0, vt1 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE NOCASE) IS FALSE) WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt1.c0 END)<>(((vt1.c0) IS TRUE)))))) UNION SELECT DISTINCT * FROM vt0, vt1 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE NOCASE) IS FALSE) WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 END)<>(((vt1.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE NOCASE) IS FALSE);
SELECT ALL vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt1, vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN ((NOT (vt1.c0))) AND (CAST(vt0.c0 AS TEXT)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt1, vt0 WHERE ((NOT ((((- (vt0.c0))) NOT BETWEEN ((NOT (vt1.c0))) AND (CAST(vt0.c0 AS TEXT)))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt1, vt0 WHERE ((((((- (vt0.c0))) NOT BETWEEN ((NOT (vt1.c0))) AND (CAST(vt0.c0 AS TEXT)))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (CASE CAST(vt1.c0 AS NUMERIC)  WHEN vt1.c0 COLLATE NOCASE THEN ((vt1.c0)/(vt1.c0)) ELSE HEX(vt1.c0) END) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CASE CAST(vt1.c0 AS NUMERIC)  WHEN vt1.c0 COLLATE NOCASE THEN ((vt1.c0)/(vt1.c0)) ELSE HEX(vt1.c0) END))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CASE CAST(vt1.c0 AS NUMERIC)  WHEN vt1.c0 COLLATE NOCASE THEN ((vt1.c0)/(vt1.c0)) ELSE HEX(vt1.c0) END) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((0.8579179912050808)) NOT BETWEEN (((((vt0.c1))>((vt0.c1))))) AND ((((vt0.c1)IS(vt0.c0)))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT ((((0.8579179912050808)) NOT BETWEEN (((((vt0.c1))>((vt0.c1))))) AND ((((vt0.c1)IS(vt0.c0)))))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((((0.8579179912050808)) NOT BETWEEN (((((vt0.c1))>((vt0.c1))))) AND ((((vt0.c1)IS(vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON ((((0.39435751457550905)AND(vt1.c0))) NOT BETWEEN (((v0.c0) IS TRUE)) AND ((+ (vt1.c0)))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON ((((0.39435751457550905)AND(vt1.c0))) NOT BETWEEN (((v0.c0) IS TRUE)) AND ((+ (vt1.c0)))) WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END)AND(((vt1.c0) NOTNULL))))AND(((vt1.c0)+(vt1.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON ((((0.39435751457550905)AND(vt1.c0))) NOT BETWEEN (((v0.c0) IS TRUE)) AND ((+ (vt1.c0)))) WHERE ((NOT (((((CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END)AND(((vt1.c0) NOTNULL))))AND(((vt1.c0)+(vt1.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON ((((0.39435751457550905)AND(vt1.c0))) NOT BETWEEN (((v0.c0) IS TRUE)) AND ((+ (vt1.c0)))) WHERE (((((((CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END)AND(((vt1.c0) NOTNULL))))AND(((vt1.c0)+(vt1.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON ((((0.39435751457550905)AND(vt1.c0))) NOT BETWEEN (((v0.c0) IS TRUE)) AND ((+ (vt1.c0)))) GROUP BY v0.c0;
SELECT v0.c0, vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 RIGHT OUTER JOIN v0 ON CASE (((v0.c0, vt0.c0, vt0.c0))!=((vt1.c0, vt0.c1, vt0.c1)))  WHEN v0.c0 THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c0)/(vt1.c0)) THEN 0.6311545218763888 WHEN ((vt0.c1) NOTNULL) THEN v0.c0 COLLATE RTRIM END GROUP BY v0.c0, vt1.c0, vt0.c1, vt0.c0;
SELECT v0.c0, vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 RIGHT OUTER JOIN v0 ON CASE (((v0.c0, vt0.c0, vt0.c0))!=((vt1.c0, vt0.c1, vt0.c1)))  WHEN v0.c0 THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c0)/(vt1.c0)) THEN 0.6311545218763888 WHEN ((vt0.c1) NOTNULL) THEN v0.c0 COLLATE RTRIM END GROUP BY v0.c0, vt1.c0, vt0.c1, vt0.c0 HAVING (NOT (((GROUP_CONCAT(SUM(vt0.c1))) NOT BETWEEN (x'809c') AND (GROUP_CONCAT(SUM(vt0.c0)))))) UNION ALL SELECT v0.c0, vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 RIGHT OUTER JOIN v0 ON CASE (((v0.c0, vt0.c0, vt0.c0))!=((vt1.c0, vt0.c1, vt0.c1)))  WHEN v0.c0 THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c0)/(vt1.c0)) THEN 0.6311545218763888 WHEN ((vt0.c1) NOTNULL) THEN v0.c0 COLLATE RTRIM END GROUP BY v0.c0, vt1.c0, vt0.c1, vt0.c0 HAVING (NOT ((NOT (((GROUP_CONCAT(SUM(vt0.c1))) NOT BETWEEN (x'809c') AND (GROUP_CONCAT(SUM(vt0.c0)))))))) UNION ALL SELECT ALL v0.c0, vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 RIGHT OUTER JOIN v0 ON CASE (((v0.c0, vt0.c0, vt0.c0))!=((vt1.c0, vt0.c1, vt0.c1)))  WHEN v0.c0 THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c0)/(vt1.c0)) THEN 0.6311545218763888 WHEN ((vt0.c1) NOTNULL) THEN v0.c0 COLLATE RTRIM END GROUP BY v0.c0, vt1.c0, vt0.c1, vt0.c0 HAVING (((NOT (((GROUP_CONCAT(SUM(vt0.c1))) NOT BETWEEN (x'809c') AND (GROUP_CONCAT(SUM(vt0.c0))))))) ISNULL);
SELECT ALL vt1.c0, v0.c0, vt0.c0, vt0.c1 FROM v0, vt0 NOT INDEXED, vt1;
SELECT ALL vt1.c0, v0.c0, vt0.c0, vt0.c1 FROM v0, vt0, vt1 WHERE (json_remove(TRIM(DISTINCT 0.06936745597029714), ((((vt0.c1)AND(vt1.c0)))OR(v0.c0)), '-1940853784' COLLATE BINARY, x'', COALESCE(v0.c0, vt1.c0, vt0.c1, vt0.c1), ((vt1.c0) NOTNULL))) UNION ALL SELECT vt1.c0, v0.c0, vt0.c0, vt0.c1 FROM v0, vt0, vt1 WHERE ((NOT (json_remove(TRIM(DISTINCT 0.06936745597029714), ((((vt0.c1)AND(vt1.c0)))OR(v0.c0)), '-1940853784' COLLATE BINARY, x'', COALESCE(v0.c0, vt1.c0, vt0.c1, vt0.c1), ((vt1.c0) NOTNULL))))) UNION ALL SELECT vt1.c0, v0.c0, vt0.c0, vt0.c1 FROM v0, vt0 NOT INDEXED, vt1 WHERE (((json_remove(TRIM(DISTINCT 0.06936745597029714), ((((vt0.c1)AND(vt1.c0)))OR(v0.c0)), '-1940853784' COLLATE BINARY, x'', COALESCE(v0.c0, vt1.c0, vt0.c1, vt0.c1), ((vt1.c0) NOTNULL))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) NOT NULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c1 COLLATE NOCASE) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1 COLLATE NOCASE) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((CAST(v0.c0 AS REAL) IN ())) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((CAST(v0.c0 AS REAL) IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((CAST(v0.c0 AS REAL) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 NOT INDEXED, v0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1 HAVING TOTAL((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (TOTAL((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1 HAVING ((TOTAL((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 NOT INDEXED, v0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1 HAVING TOTAL((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (TOTAL((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1 HAVING ((TOTAL((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 NOT INDEXED, v0 GROUP BY vt0.c0, vt0.c1;
SELECT vt1.c0, v0.c0 FROM v0, vt1;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 WHERE (((CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (((v0.c0) IS TRUE)))) UNION ALL SELECT vt1.c0, v0.c0 FROM v0, vt1 WHERE ((NOT (((CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (((v0.c0) IS TRUE)))))) UNION ALL SELECT vt1.c0, v0.c0 FROM v0, vt1 WHERE (((((CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (((v0.c0) IS TRUE)))) ISNULL));
SELECT vt1.c0, v0.c0 FROM v0, vt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((NULL)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) COLLATE BINARY COLLATE BINARY) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((((((NULL)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) COLLATE BINARY COLLATE BINARY))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((NULL)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) COLLATE BINARY COLLATE BINARY) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE (- (v0.c0))  WHEN v0.c0 THEN (('Dgdb裕,H\') BETWEEN (v0.c0) AND (v0.c0)) WHEN COALESCE(v0.c0, v0.c0) THEN ((v0.c0)>=(v0.c0)) WHEN ((v0.c0)>=(v0.c0)) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE (- (v0.c0))  WHEN v0.c0 THEN (('Dgdb裕,H\') BETWEEN (v0.c0) AND (v0.c0)) WHEN COALESCE(v0.c0, v0.c0) THEN ((v0.c0)>=(v0.c0)) WHEN ((v0.c0)>=(v0.c0)) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE (- (v0.c0))  WHEN v0.c0 THEN (('Dgdb裕,H\') BETWEEN (v0.c0) AND (v0.c0)) WHEN COALESCE(v0.c0, v0.c0) THEN ((v0.c0)>=(v0.c0)) WHEN ((v0.c0)>=(v0.c0)) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((JULIANDAY(vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0))LIKE(((vt0.c1) NOT NULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((JULIANDAY(vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0))LIKE(((vt0.c1) NOT NULL)))))) UNION ALL SELECT * FROM vt0 WHERE (((((JULIANDAY(vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0))LIKE(((vt0.c1) NOT NULL)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c1) NOT NULL) COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c1) NOT NULL) COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c1) NOT NULL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0, vt1 WHERE (((((vt0.c1)||(vt0.c1)))GLOB(CAST(vt1.c0 AS REAL)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0, vt1 WHERE ((NOT (((((vt0.c1)||(vt0.c1)))GLOB(CAST(vt1.c0 AS REAL)))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0, vt1 WHERE (((((((vt0.c1)||(vt0.c1)))GLOB(CAST(vt1.c0 AS REAL)))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((rtreenode(TOTAL(v0.c0), v0.c0)))<=((AVG(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((rtreenode(TOTAL(v0.c0), v0.c0)))<=((AVG(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((rtreenode(TOTAL(v0.c0), v0.c0)))<=((AVG(v0.c0))))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((rtreenode(TOTAL(v0.c0), v0.c0)))<=((AVG(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((rtreenode(TOTAL(v0.c0), v0.c0)))<=((AVG(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((rtreenode(TOTAL(v0.c0), v0.c0)))<=((AVG(v0.c0))))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((vt0.c1 IN ())) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((vt0.c1 IN ())))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((vt0.c1 IN ())) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0, vt1 INNER JOIN v0 ON (((vt0.c0 COLLATE RTRIM, vt0.c0, (((vt0.c1, vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((v0.c0, '7lwd*8UCE', vt0.c0)))))>((v0.c0 COLLATE BINARY, ((vt0.c1) IS FALSE), CAST(vt0.c0 AS NUMERIC))));
SELECT DISTINCT vt0.c1 FROM vt0, vt1 INNER JOIN v0 ON (((vt0.c0 COLLATE RTRIM, vt0.c0, (((vt0.c1, vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((v0.c0, '7lwd*8UCE', vt0.c0)))))>((v0.c0 COLLATE BINARY, ((vt0.c1) IS FALSE), CAST(vt0.c0 AS NUMERIC)))) WHERE ((+ ('潒o8|L3'))) UNION SELECT DISTINCT vt0.c1 FROM vt0, vt1 INNER JOIN v0 ON (((vt0.c0 COLLATE RTRIM, vt0.c0, (((vt0.c1, vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((v0.c0, '7lwd*8UCE', vt0.c0)))))>((v0.c0 COLLATE BINARY, ((vt0.c1) IS FALSE), CAST(vt0.c0 AS NUMERIC)))) WHERE ((NOT ((+ ('潒o8|L3'))))) UNION SELECT DISTINCT vt0.c1 FROM vt0, vt1 INNER JOIN v0 ON (((vt0.c0 COLLATE RTRIM, vt0.c0, (((vt0.c1, vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((v0.c0, '7lwd*8UCE', vt0.c0)))))>((v0.c0 COLLATE BINARY, ((vt0.c1) IS FALSE), CAST(vt0.c0 AS NUMERIC)))) WHERE ((((+ ('潒o8|L3'))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0, vt1 INNER JOIN v0 ON (((vt0.c0 COLLATE RTRIM, vt0.c0, (((vt0.c1, vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((v0.c0, '7lwd*8UCE', vt0.c0)))))>((v0.c0 COLLATE BINARY, ((vt0.c1) IS FALSE), CAST(vt0.c0 AS NUMERIC))));
SELECT vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0;
SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0 WHERE (((vt1.c0 COLLATE RTRIM)==((vt1.c0 IN ())))) GROUP BY vt0.c1, vt1.c0 UNION SELECT vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((vt1.c0 COLLATE RTRIM)==((vt1.c0 IN ())))))) GROUP BY vt0.c1, vt1.c0 UNION SELECT vt0.c1, vt1.c0 FROM vt1, vt0 WHERE (((((vt1.c0 COLLATE RTRIM)==((vt1.c0 IN ())))) ISNULL)) GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*))<=(CASE WHEN v0.c0 THEN v0.c0 WHEN SUM(AVG(v0.c0)) THEN MIN(v0.c0) WHEN GROUP_CONCAT(v0.c0) THEN v0.c0 ELSE v0.c0 END)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((COUNT(*))<=(CASE WHEN v0.c0 THEN v0.c0 WHEN SUM(AVG(v0.c0)) THEN MIN(v0.c0) WHEN GROUP_CONCAT(v0.c0) THEN v0.c0 ELSE v0.c0 END)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((COUNT(*))<=(CASE WHEN v0.c0 THEN v0.c0 WHEN SUM(AVG(v0.c0)) THEN MIN(v0.c0) WHEN GROUP_CONCAT(v0.c0) THEN v0.c0 ELSE v0.c0 END))) ISNULL);
SELECT v0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1, v0;
SELECT v0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1, v0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL)) ORDER BY (((v0.c0)) BETWEEN ((((vt1.c0) IS FALSE))) AND (((((vt1.c0, vt0.c0, v0.c0))<((v0.c0, vt1.c0, v0.c0)))))) ASC;
SELECT ALL v0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1, v0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE) ISNULL)))) ORDER BY (((v0.c0)) BETWEEN ((((vt1.c0) IS FALSE))) AND (((((vt1.c0, vt0.c0, v0.c0))<((v0.c0, vt1.c0, v0.c0)))))) ASC;
SELECT ALL v0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1, v0 WHERE (((((vt0.c0 COLLATE NOCASE) ISNULL)) ISNULL)) ORDER BY (((v0.c0)) BETWEEN ((((vt1.c0) IS FALSE))) AND (((((vt1.c0, vt0.c0, v0.c0))<((v0.c0, vt1.c0, v0.c0)))))) ASC;
SELECT v0.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1, v0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN CAST(vt1.c0 AS BLOB) ELSE x'' END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN CAST(vt1.c0 AS BLOB) ELSE x'' END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN CAST(vt1.c0 AS BLOB) ELSE x'' END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0) NOT NULL)) NOT NULL) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((v0.c0) NOT NULL)) NOT NULL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((v0.c0) NOT NULL)) NOT NULL)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0) NOT NULL)) NOT NULL) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((v0.c0) NOT NULL)) NOT NULL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((v0.c0) NOT NULL)) NOT NULL)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM vt1, v0;
SELECT * FROM vt1, v0 WHERE (v0.c0) UNION ALL SELECT * FROM vt1, v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM vt1, v0 WHERE (((v0.c0) ISNULL));
SELECT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE ((NOT (((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((((0x457a6469))<((0.7350207306542664))))+(((vt1.c0)IS(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((0X457a6469))<((0.7350207306542664))))+(((vt1.c0)IS(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((((0X457a6469))<((0.7350207306542664))))+(((vt1.c0)IS(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(MAX(COUNT(MIN(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(MAX(COUNT(MIN(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(MAX(COUNT(MIN(vt1.c0))))) ISNULL);
SELECT * FROM vt1, v0;
SELECT ALL * FROM vt1, v0 WHERE (CAST((((vt1.c0))<=((vt1.c0))) AS BLOB)) UNION ALL SELECT ALL * FROM vt1, v0 WHERE ((NOT (CAST((((vt1.c0))<=((vt1.c0))) AS BLOB)))) UNION ALL SELECT ALL * FROM vt1, v0 WHERE (((CAST((((vt1.c0))<=((vt1.c0))) AS BLOB)) ISNULL));
SELECT * FROM vt1, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((- (((v0.c0)|(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((- (((v0.c0)|(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((- (((v0.c0)|(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c1, v0.c0;
SELECT vt0.c1, v0.c0 FROM v0, vt0 WHERE ((NOT (((vt0.c0) IS TRUE)))) GROUP BY vt0.c1, v0.c0 UNION SELECT vt0.c1, v0.c0 FROM v0, vt0 WHERE ((NOT ((NOT (((vt0.c0) IS TRUE)))))) GROUP BY vt0.c1, v0.c0 UNION SELECT ALL vt0.c1, v0.c0 FROM v0, vt0 WHERE ((((NOT (((vt0.c0) IS TRUE)))) ISNULL)) GROUP BY vt0.c1, v0.c0;
SELECT vt0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c1, v0.c0;
SELECT v0.c0 FROM vt1, v0 NATURAL JOIN vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0 NATURAL JOIN vt0 GROUP BY v0.c0 HAVING SUM(((AVG(vt0.c0)) IS FALSE)) UNION ALL SELECT ALL v0.c0 FROM vt1, v0 NATURAL JOIN vt0 GROUP BY v0.c0 HAVING (NOT (SUM(((AVG(vt0.c0)) IS FALSE)))) UNION ALL SELECT v0.c0 FROM vt1, v0 NATURAL JOIN vt0 GROUP BY v0.c0 HAVING ((SUM(((AVG(vt0.c0)) IS FALSE))) ISNULL);
SELECT ALL vt1.c0, vt0.c1 FROM vt1, vt0;
SELECT vt1.c0, vt0.c1 FROM vt1, vt0 WHERE (((((((vt0.c1)OR(vt1.c0)))OR(vt1.c0)))<=((NULL IN (vt1.c0))))) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT (((((((vt0.c1)OR(vt1.c0)))OR(vt1.c0)))<=((NULL IN (vt1.c0))))))) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt1, vt0 WHERE (((((((((vt0.c1)OR(vt1.c0)))OR(vt1.c0)))<=((NULL IN (vt1.c0))))) ISNULL));
SELECT ALL vt1.c0, vt0.c1 FROM vt1, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0, vt1;
SELECT DISTINCT v0.c0 FROM v0, vt0, vt1 WHERE (CASE WHEN (+ (vt0.c0)) THEN vt0.c0 COLLATE NOCASE END) UNION SELECT DISTINCT v0.c0 FROM v0, vt0, vt1 WHERE ((NOT (CASE WHEN (+ (vt0.c0)) THEN vt0.c0 COLLATE NOCASE END))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0, vt1 WHERE (((CASE WHEN (+ (vt0.c0)) THEN vt0.c0 COLLATE NOCASE END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt0, vt1;
SELECT vt1.c0, v0.c0, vt0.c1, vt0.c0 FROM vt0, vt1 INNER JOIN v0 ON (((vt0.c0 IN (vt1.c0))) NOT NULL) GROUP BY vt1.c0, v0.c0, vt0.c1, vt0.c0;
SELECT vt1.c0, v0.c0, vt0.c1, vt0.c0 FROM vt0, vt1 INNER JOIN v0 ON (((vt0.c0 IN (vt1.c0))) NOT NULL) WHERE ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN '' THEN v0.c0 END IN ())) GROUP BY vt1.c0, v0.c0, vt0.c1, vt0.c0 UNION SELECT ALL vt1.c0, v0.c0, vt0.c1, vt0.c0 FROM vt0, vt1 INNER JOIN v0 ON (((vt0.c0 IN (vt1.c0))) NOT NULL) WHERE ((NOT ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN '' THEN v0.c0 END IN ())))) GROUP BY vt1.c0, v0.c0, vt0.c1, vt0.c0 UNION SELECT vt1.c0, v0.c0, vt0.c1, vt0.c0 FROM vt0, vt1 INNER JOIN v0 ON (((vt0.c0 IN (vt1.c0))) NOT NULL) WHERE ((((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN '' THEN v0.c0 END IN ())) ISNULL)) GROUP BY vt1.c0, v0.c0, vt0.c1, vt0.c0;
SELECT vt1.c0, v0.c0, vt0.c1, vt0.c0 FROM vt0, vt1 INNER JOIN v0 ON (((vt0.c0 IN (vt1.c0))) NOT NULL) GROUP BY vt1.c0, v0.c0, vt0.c1, vt0.c0;
SELECT ALL v0.c0, vt0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c1 HAVING AVG(GROUP_CONCAT(AVG(v0.c0))) UNION ALL SELECT ALL v0.c0, vt0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c1 HAVING (NOT (AVG(GROUP_CONCAT(AVG(v0.c0))))) UNION ALL SELECT ALL v0.c0, vt0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c1 HAVING ((AVG(GROUP_CONCAT(AVG(v0.c0)))) ISNULL);
SELECT v0.c0 FROM vt1, v0, vt0;
SELECT v0.c0 FROM vt1, v0, vt0 WHERE (CASE (vt0.c0 IN ())  WHEN (~ (vt1.c0)) THEN ((((vt0.c1)AND(0.5298522891086731)))OR(NULL)) ELSE (+ (v0.c0)) END) UNION ALL SELECT ALL v0.c0 FROM vt1, v0, vt0 WHERE ((NOT (CASE (vt0.c0 IN ())  WHEN (~ (vt1.c0)) THEN ((((vt0.c1)AND(0.5298522891086731)))OR(NULL)) ELSE (+ (v0.c0)) END))) UNION ALL SELECT ALL v0.c0 FROM vt1, v0 NOT INDEXED, vt0 WHERE (((CASE (vt0.c0 IN ())  WHEN (~ (vt1.c0)) THEN ((((vt0.c1)AND(0.5298522891086731)))OR(NULL)) ELSE (+ (v0.c0)) END) ISNULL));
SELECT v0.c0 FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN (((vt1.c0)+(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((CAST(vt1.c0 AS TEXT) IN (((vt1.c0)+(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((CAST(vt1.c0 AS TEXT) IN (((vt1.c0)+(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT v0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, vt1, v0 WHERE (CASE WHEN (((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN CAST(vt1.c0 AS INTEGER) ELSE (~ (v0.c0)) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, vt1, v0 WHERE ((NOT (CASE WHEN (((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN CAST(vt1.c0 AS INTEGER) ELSE (~ (v0.c0)) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, vt1, v0 WHERE (((CASE WHEN (((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN CAST(vt1.c0 AS INTEGER) ELSE (~ (v0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(MAX(AVG(x''))) COLLATE RTRIM UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(MAX(AVG(x''))) COLLATE RTRIM)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(MAX(AVG(x''))) COLLATE RTRIM) ISNULL);
SELECT * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (CASE WHEN ((((x'')AND(vt0.c0)))AND(vt1.c0)) THEN vt0.c1 WHEN vt0.c0 THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN (((vt0.c1))<>((vt0.c1))) THEN vt0.c1 COLLATE RTRIM END) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (CASE WHEN ((((x'')AND(vt0.c0)))AND(vt1.c0)) THEN vt0.c1 WHEN vt0.c0 THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN (((vt0.c1))<>((vt0.c1))) THEN vt0.c1 COLLATE RTRIM END))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((CASE WHEN ((((x'')AND(vt0.c0)))AND(vt1.c0)) THEN vt0.c1 WHEN vt0.c0 THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN (((vt0.c1))<>((vt0.c1))) THEN vt0.c1 COLLATE RTRIM END) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON CASE WHEN (((vt0.c0, '1965611699', vt0.c1)) BETWEEN ((vt1.c0, vt1.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) ISNULL) ELSE ((vt1.c0) IS TRUE) END INNER JOIN vt1 ON vt1.c0;
SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON CASE WHEN (((vt0.c0, '1965611699', vt0.c1)) BETWEEN ((vt1.c0, vt1.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) ISNULL) ELSE ((vt1.c0) IS TRUE) END INNER JOIN vt1 ON vt1.c0 WHERE (((CASE v0.c0  WHEN vt1.c0 THEN vt0.c0 END) BETWEEN (vt0.c1) AND (x''))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON CASE WHEN (((vt0.c0, '1965611699', vt0.c1)) BETWEEN ((vt1.c0, vt1.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) ISNULL) ELSE ((vt1.c0) IS TRUE) END INNER JOIN vt1 ON vt1.c0 WHERE ((NOT (((CASE v0.c0  WHEN vt1.c0 THEN vt0.c0 END) BETWEEN (vt0.c1) AND (x''))))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON CASE WHEN (((vt0.c0, '1965611699', vt0.c1)) BETWEEN ((vt1.c0, vt1.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) ISNULL) ELSE ((vt1.c0) IS TRUE) END INNER JOIN vt1 ON vt1.c0 WHERE (((((CASE v0.c0  WHEN vt1.c0 THEN vt0.c0 END) BETWEEN (vt0.c1) AND (x''))) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON CASE WHEN (((vt0.c0, '1965611699', vt0.c1)) BETWEEN ((vt1.c0, vt1.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) ISNULL) ELSE ((vt1.c0) IS TRUE) END INNER JOIN vt1 ON vt1.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0) NOT NULL) COLLATE NOCASE))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c0) NOT NULL) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c1 HAVING ((ABS(MIN(COUNT(*)))) NOT BETWEEN (MAX(v0.c0)) AND ((NOT (vt1.c0)))) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c1 HAVING (NOT (((ABS(MIN(COUNT(*)))) NOT BETWEEN (MAX(v0.c0)) AND ((NOT (vt1.c0)))))) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c1 HAVING ((((ABS(MIN(COUNT(*)))) NOT BETWEEN (MAX(v0.c0)) AND ((NOT (vt1.c0))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c1) IS TRUE) COLLATE RTRIM) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c1) IS TRUE) COLLATE RTRIM))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c1) IS TRUE) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0, vt0.c0, v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON 0.03372222298605121 RIGHT OUTER JOIN vt0 ON load_extension(CAST(v0.c0 AS INTEGER));
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(CASE WHEN '455858769' THEN vt1.c0 ELSE vt1.c0 END AS NUMERIC)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(CASE WHEN '455858769' THEN vt1.c0 ELSE vt1.c0 END AS NUMERIC)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(CASE WHEN '455858769' THEN vt1.c0 ELSE vt1.c0 END AS NUMERIC)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(vt0.c1) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(vt0.c1))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c1)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(vt0.c1) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(vt0.c1))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c1)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL SUM((((~ (NULL)))!=(0.29569007150495974))) FROM v0;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0)OR(vt1.c0)), UPPER(vt1.c0), CAST(vt1.c0 AS NUMERIC))) AND ((vt1.c0, vt1.c0 COLLATE BINARY, (NOT (vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0)OR(vt1.c0)), UPPER(vt1.c0), CAST(vt1.c0 AS NUMERIC))) AND ((vt1.c0, vt1.c0 COLLATE BINARY, (NOT (vt1.c0)))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0)OR(vt1.c0)), UPPER(vt1.c0), CAST(vt1.c0 AS NUMERIC))) AND ((vt1.c0, vt1.c0 COLLATE BINARY, (NOT (vt1.c0)))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0 COLLATE RTRIM))!=((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0 COLLATE RTRIM))!=((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0 COLLATE RTRIM))<>((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt0, vt1, v0 GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt0, vt1, v0 WHERE ((((vt0.c1)) BETWEEN (('-2130695749')) AND ((vt1.c0)))) GROUP BY vt0.c0, vt1.c0, v0.c0 UNION SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt0, vt1, v0 WHERE ((NOT ((((vt0.c1)) BETWEEN (('-2130695749')) AND ((vt1.c0)))))) GROUP BY vt0.c0, vt1.c0, v0.c0 UNION SELECT vt0.c0, vt1.c0, v0.c0 FROM vt0, vt1, v0 WHERE ((((((vt0.c1)) BETWEEN (('-2130695749')) AND ((vt1.c0)))) ISNULL)) GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt0, vt1, v0 GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT vt1.c0, vt0.c1 FROM v0, vt0 INNER JOIN vt1 ON CAST((v0.c0 IN (vt0.c1, v0.c0)) AS REAL) GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1 FROM v0, vt0 INNER JOIN vt1 ON CAST((v0.c0 IN (vt0.c1, v0.c0)) AS REAL) GROUP BY vt1.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt0.c1 FROM v0, vt0 INNER JOIN vt1 ON CAST((v0.c0 IN (vt0.c1, v0.c0)) AS REAL) GROUP BY vt1.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt0.c1 FROM v0, vt0 INNER JOIN vt1 ON CAST((v0.c0 IN (vt0.c1, v0.c0)) AS REAL) GROUP BY vt1.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, vt0.c1 FROM v0, vt0 INNER JOIN vt1 ON CAST((v0.c0 IN (vt0.c1, v0.c0)) AS REAL) GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1 FROM v0, vt0 INNER JOIN vt1 ON CAST((v0.c0 IN (vt0.c1, v0.c0)) AS REAL) GROUP BY vt1.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt0.c1 FROM v0, vt0 INNER JOIN vt1 ON CAST((v0.c0 IN (vt0.c1, v0.c0)) AS REAL) GROUP BY vt1.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt0.c1 FROM v0, vt0 INNER JOIN vt1 ON CAST((v0.c0 IN (vt0.c1, v0.c0)) AS REAL) GROUP BY vt1.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, vt0.c1 FROM v0, vt0 INNER JOIN vt1 ON CAST((v0.c0 IN (vt0.c1, v0.c0)) AS REAL) GROUP BY vt1.c0, vt0.c1;
SELECT v0.c0, vt0.c0, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON v0.c0;
SELECT v0.c0, vt0.c0, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON v0.c0 WHERE ((((((-2.56680693E8)=(vt0.c0))))=(((NOT (v0.c0)))))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON v0.c0 WHERE ((NOT ((((((-2.56680693E8)==(vt0.c0))))==(((NOT (v0.c0)))))))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON v0.c0 WHERE ((((((((-2.56680693E8)==(vt0.c0))))=(((NOT (v0.c0)))))) ISNULL));
SELECT v0.c0, vt0.c0, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON v0.c0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE WHEN ((v0.c0)<<(NULL)) THEN ((v0.c0)<=(v0.c0)) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN ((v0.c0)<<(NULL)) THEN ((v0.c0)<=(v0.c0)) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE WHEN ((v0.c0)<<(NULL)) THEN ((v0.c0)<=(v0.c0)) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE '' END)) AND ((v0.c0))) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE '' END)) AND ((v0.c0))) WHERE ((NOT (vt0.c0 COLLATE NOCASE))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE '' END)) AND ((v0.c0))) WHERE ((NOT ((NOT (vt0.c0 COLLATE NOCASE))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE '' END)) AND ((v0.c0))) WHERE ((((NOT (vt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE '' END)) AND ((v0.c0))) GROUP BY vt0.c1;
SELECT vt0.c1, vt0.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt0.c0, v0.c0 HAVING ((((AVG(v0.c0))AND(MAX(MAX(vt0.c1), AVG(vt1.c0)))))OR(TRIM(COUNT(*)))) UNION ALL SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt0.c0, v0.c0 HAVING (NOT (((((AVG(v0.c0))AND(MAX(MAX(vt0.c1), AVG(vt1.c0)))))OR(TRIM(COUNT(*)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt0.c0, v0.c0 HAVING ((((((AVG(v0.c0))AND(MAX(MAX(vt0.c1), AVG(vt1.c0)))))OR(TRIM(COUNT(*))))) ISNULL);
SELECT vt0.c1, vt0.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt0.c0, v0.c0 HAVING ((((AVG(v0.c0))AND(MAX(MAX(vt0.c1), AVG(vt1.c0)))))OR(TRIM(COUNT(*)))) UNION ALL SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt0.c0, v0.c0 HAVING (NOT (((((AVG(v0.c0))AND(MAX(MAX(vt0.c1), AVG(vt1.c0)))))OR(TRIM(COUNT(*)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt0.c0, v0.c0 HAVING ((((((AVG(v0.c0))AND(MAX(MAX(vt0.c1), AVG(vt1.c0)))))OR(TRIM(COUNT(*))))) ISNULL);
SELECT vt0.c1, vt0.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (vt0.c1) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((+ (v0.c0)))) AND ((((v0.c0) IS FALSE))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN (((+ (v0.c0)))) AND ((((v0.c0) IS FALSE))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN (((+ (v0.c0)))) AND ((((v0.c0) IS FALSE))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0, vt1.c0, vt0.c1 FROM v0, vt1, vt0 GROUP BY v0.c0, vt1.c0, vt0.c1;
SELECT ALL v0.c0, vt1.c0, vt0.c1 FROM v0, vt1, vt0 WHERE (CASE WHEN ((((NULL)AND(vt0.c1)))AND(NULL)) THEN (NOT (vt0.c0)) END) GROUP BY v0.c0, vt1.c0, vt0.c1 UNION SELECT v0.c0, vt1.c0, vt0.c1 FROM v0, vt1, vt0 WHERE ((NOT (CASE WHEN ((((NULL)AND(vt0.c1)))AND(NULL)) THEN (NOT (vt0.c0)) END))) GROUP BY v0.c0, vt1.c0, vt0.c1 UNION SELECT ALL v0.c0, vt1.c0, vt0.c1 FROM v0, vt1, vt0 WHERE (((CASE WHEN ((((NULL)AND(vt0.c1)))AND(NULL)) THEN (NOT (vt0.c0)) END) ISNULL)) GROUP BY v0.c0, vt1.c0, vt0.c1;
SELECT v0.c0, vt1.c0, vt0.c1 FROM v0, vt1, vt0 GROUP BY v0.c0, vt1.c0, vt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((GROUP_CONCAT(GROUP_CONCAT(v0.c0)))OR(COUNT(AVG(v0.c0)))))AND(((TOTAL(v0.c0))<>(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((GROUP_CONCAT(GROUP_CONCAT(v0.c0)))OR(COUNT(AVG(v0.c0)))))AND(((TOTAL(v0.c0))!=(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((GROUP_CONCAT(GROUP_CONCAT(v0.c0)))OR(COUNT(AVG(v0.c0)))))AND(((TOTAL(v0.c0))<>(v0.c0))))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 INNER JOIN vt1 ON MIN(v0.c0 COLLATE NOCASE, NULLIF(vt0.c0, vt1.c0)) LEFT OUTER JOIN v0 ON ((0Xffffffffb6292cd8) IS FALSE);
SELECT vt0.c1, vt0.c0 FROM vt0 INNER JOIN vt1 ON MIN(v0.c0 COLLATE NOCASE, NULLIF(vt0.c0, vt1.c0)) LEFT OUTER JOIN v0 ON ((0xffffffffb6292cd8) IS FALSE) WHERE (0.16281686671954365) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 INNER JOIN vt1 ON MIN(v0.c0 COLLATE NOCASE, NULLIF(vt0.c0, vt1.c0)) LEFT OUTER JOIN v0 ON ((0xffffffffb6292cd8) IS FALSE) WHERE ((NOT (0.16281686671954365))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 INNER JOIN vt1 ON MIN(v0.c0 COLLATE NOCASE, NULLIF(vt0.c0, vt1.c0)) LEFT OUTER JOIN v0 ON ((0Xffffffffb6292cd8) IS FALSE) WHERE (((0.16281686671954365) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt0 INNER JOIN vt1 ON MIN(v0.c0 COLLATE NOCASE, NULLIF(vt0.c0, vt1.c0)) LEFT OUTER JOIN v0 ON ((0Xffffffffb6292cd8) IS FALSE);
SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1;
SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1 WHERE ((ABS(DISTINCT v0.c0) IN ())) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1 WHERE ((NOT ((ABS(DISTINCT v0.c0) IN ())))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1 WHERE ((((ABS(DISTINCT v0.c0) IN ())) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1;
SELECT v0.c0, vt0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c1;
SELECT v0.c0, vt0.c1 FROM vt0, v0 WHERE (((CAST(v0.c0 AS NUMERIC))<=(CASE v0.c0  WHEN v0.c0 THEN vt0.c1 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) GROUP BY v0.c0, vt0.c1 UNION SELECT v0.c0, vt0.c1 FROM vt0, v0 WHERE ((NOT (((CAST(v0.c0 AS NUMERIC))<=(CASE v0.c0  WHEN v0.c0 THEN vt0.c1 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) GROUP BY v0.c0, vt0.c1 UNION SELECT v0.c0, vt0.c1 FROM vt0, v0 WHERE (((((CAST(v0.c0 AS NUMERIC))<=(CASE v0.c0  WHEN v0.c0 THEN vt0.c1 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL)) GROUP BY v0.c0, vt0.c1;
SELECT v0.c0, vt0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT * FROM v0 NOT INDEXED;
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0)IS(v0.c0)) AS NUMERIC)) UNION ALL SELECT * FROM v0 WHERE ((NOT (CAST(((v0.c0)IS(v0.c0)) AS NUMERIC)))) UNION ALL SELECT * FROM v0 WHERE (((CAST(((v0.c0)IS(v0.c0)) AS NUMERIC)) ISNULL));
SELECT * FROM v0 NOT INDEXED;
SELECT DISTINCT vt0.c1 FROM vt0, vt1, v0;
SELECT DISTINCT vt0.c1 FROM vt0, vt1, v0 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN ((v0.c0 IN (vt0.c0))) AND ((vt1.c0 IN ())))) UNION SELECT DISTINCT vt0.c1 FROM vt0, vt1, v0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE) BETWEEN ((v0.c0 IN (vt0.c0))) AND ((vt1.c0 IN ())))))) UNION SELECT DISTINCT vt0.c1 FROM vt0, vt1, v0 WHERE (((((vt0.c0 COLLATE NOCASE) BETWEEN ((v0.c0 IN (vt0.c0))) AND ((vt1.c0 IN ())))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0, vt1, v0;
SELECT v0.c0, vt1.c0 FROM vt1 INNER JOIN v0 ON (NOT (CASE v0.c0  WHEN 'o[p⌁6湯F^' THEN vt1.c0 END)) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt1 INNER JOIN v0 ON (NOT (CASE v0.c0  WHEN 'o[p⌁6湯F^' THEN vt1.c0 END)) WHERE (v0.c0 COLLATE RTRIM) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM vt1 INNER JOIN v0 ON (NOT (CASE v0.c0  WHEN 'o[p⌁6湯F^' THEN vt1.c0 END)) WHERE ((NOT (v0.c0 COLLATE RTRIM))) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM vt1 INNER JOIN v0 ON (NOT (CASE v0.c0  WHEN 'o[p⌁6湯F^' THEN vt1.c0 END)) WHERE (((v0.c0 COLLATE RTRIM) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt1 INNER JOIN v0 ON (NOT (CASE v0.c0  WHEN 'o[p⌁6湯F^' THEN vt1.c0 END)) GROUP BY v0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (MAX(SUM(TOTAL(vt1.c0))) IN ()) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (NOT ((MAX(SUM(TOTAL(vt1.c0))) IN ()))) UNION ALL SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (((MAX(SUM(TOTAL(vt1.c0))) IN ())) ISNULL);
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (MAX(SUM(TOTAL(vt1.c0))) IN ()) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (NOT ((MAX(SUM(TOTAL(vt1.c0))) IN ()))) UNION ALL SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (((MAX(SUM(TOTAL(vt1.c0))) IN ())) ISNULL);
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (CAST((NULL IN ()) AS REAL)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CAST((NULL IN ()) AS REAL)))) UNION ALL SELECT * FROM vt1 WHERE (((CAST((NULL IN ()) AS REAL)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c1)))) AND ((CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 ELSE NULL END)));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c1)))) AND ((CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 ELSE NULL END))) WHERE (((((((vt0.c1) ISNULL))OR((vt0.c0 IN ()))))AND(0.13406432743587782))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c1)))) AND ((CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 ELSE NULL END))) WHERE ((NOT (((((((vt0.c1) ISNULL))OR((vt0.c0 IN ()))))AND(0.13406432743587782))))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c1)))) AND ((CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 ELSE NULL END))) WHERE (((((((((vt0.c1) ISNULL))OR((vt0.c0 IN ()))))AND(0.13406432743587782))) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c1)))) AND ((CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 ELSE NULL END)));
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt0.c1 END  WHEN 0.6627404559902312 THEN (vt0.c1 IN ()) WHEN ((vt0.c0) NOT BETWEEN (NULL) AND ('g-QN7{h*a')) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0)&(vt0.c0)) WHEN (+ (0Xffffffffe526c59d)) THEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END WHEN (((vt0.c1, vt0.c0, vt0.c1))<>((NULL, vt0.c1, vt0.c0))) THEN (vt0.c1 IN ()) END) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (CASE CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt0.c1 END  WHEN 0.6627404559902312 THEN (vt0.c1 IN ()) WHEN ((vt0.c0) NOT BETWEEN (NULL) AND ('g-QN7{h*a')) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0)&(vt0.c0)) WHEN (+ (0Xffffffffe526c59d)) THEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END WHEN (((vt0.c1, vt0.c0, vt0.c1))!=((NULL, vt0.c1, vt0.c0))) THEN (vt0.c1 IN ()) END))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((CASE CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt0.c1 END  WHEN 0.6627404559902312 THEN (vt0.c1 IN ()) WHEN ((vt0.c0) NOT BETWEEN (NULL) AND ('g-QN7{h*a')) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0)&(vt0.c0)) WHEN (+ (0xffffffffe526c59d)) THEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END WHEN (((vt0.c1, vt0.c0, vt0.c1))<>((NULL, vt0.c1, vt0.c0))) THEN (vt0.c1 IN ()) END) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, v0, vt1 NOT INDEXED GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, v0, vt1 GROUP BY vt0.c1 HAVING MIN(COUNT(*)) UNION ALL SELECT vt0.c1 FROM vt0, v0, vt1 GROUP BY vt0.c1 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL vt0.c1 FROM vt0, v0, vt1 GROUP BY vt0.c1 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (NULL) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((NULL) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((((+ (vt0.c1))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((NOT ((((+ (vt0.c1))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((((((+ (vt0.c1))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (CAST(((vt0.c1) IS TRUE) AS NUMERIC)) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (CAST(((vt0.c1) IS TRUE) AS NUMERIC)))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((CAST(((vt0.c1) IS TRUE) AS NUMERIC)) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c0 FROM vt1 INNER JOIN v0 ON CAST(vt0.c1 COLLATE RTRIM AS NUMERIC) LEFT OUTER JOIN vt0 ON LIKE(((v0.c0) NOTNULL), (vt0.c1 IN (vt0.c0, vt0.c0)), '1') GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 INNER JOIN v0 ON CAST(vt0.c1 COLLATE RTRIM AS NUMERIC) LEFT OUTER JOIN vt0 ON LIKE(((v0.c0) NOTNULL), (vt0.c1 IN (vt0.c0, vt0.c0)), '1') GROUP BY vt0.c0 HAVING SUM(COUNT(SUM(AVG(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT vt0.c0 FROM vt1 INNER JOIN v0 ON CAST(vt0.c1 COLLATE RTRIM AS NUMERIC) LEFT OUTER JOIN vt0 ON LIKE(((v0.c0) NOTNULL), (vt0.c1 IN (vt0.c0, vt0.c0)), '1') GROUP BY vt0.c0 HAVING (NOT (SUM(COUNT(SUM(AVG(GROUP_CONCAT(v0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt1 INNER JOIN v0 ON CAST(vt0.c1 COLLATE RTRIM AS NUMERIC) LEFT OUTER JOIN vt0 ON LIKE(((v0.c0) NOTNULL), (vt0.c1 IN (vt0.c0, vt0.c0)), '1') GROUP BY vt0.c0 HAVING ((SUM(COUNT(SUM(AVG(GROUP_CONCAT(v0.c0)))))) ISNULL);
SELECT * FROM v0, vt1, vt0;
SELECT ALL * FROM v0, vt1, vt0 WHERE ((((vt0.c0))<=((vt0.c0))) COLLATE NOCASE) UNION ALL SELECT * FROM v0, vt1, vt0 WHERE ((NOT ((((vt0.c0))<=((vt0.c0))) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM v0, vt1, vt0 WHERE ((((((vt0.c0))<=((vt0.c0))) COLLATE NOCASE) ISNULL));
SELECT * FROM v0, vt1, vt0;
SELECT DISTINCT vt0.c1, v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON UNLIKELY(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)));
SELECT DISTINCT vt0.c1, v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON UNLIKELY(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) WHERE (CAST((~ (vt0.c1)) AS INTEGER)) UNION SELECT DISTINCT vt0.c1, v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON UNLIKELY(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) WHERE ((NOT (CAST((~ (vt0.c1)) AS INTEGER)))) UNION SELECT DISTINCT vt0.c1, v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON UNLIKELY(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) WHERE (((CAST((~ (vt0.c1)) AS INTEGER)) ISNULL));
SELECT DISTINCT vt0.c1, v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON UNLIKELY(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)));
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE ((((v0.c0 IN ()))<=(HEX(vt1.c0)))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE ((NOT ((((v0.c0 IN ()))<=(HEX(vt1.c0)))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE ((((((v0.c0 IN ()))<=(HEX(vt1.c0)))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING CAST(GROUP_CONCAT(MAX(TOTAL(vt1.c0))) AS INTEGER) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(GROUP_CONCAT(MAX(TOTAL(vt1.c0))) AS INTEGER))) UNION ALL SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING ((CAST(GROUP_CONCAT(MAX(TOTAL(vt1.c0))) AS INTEGER)) ISNULL);
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM vt0, v0;
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM vt0, v0 WHERE (((((0.9490069235740386)OR(vt0.c0 COLLATE NOCASE)))AND((~ (v0.c0))))) UNION ALL SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM vt0, v0 WHERE ((NOT (((((0.9490069235740386)OR(vt0.c0 COLLATE NOCASE)))AND((~ (v0.c0))))))) UNION ALL SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM vt0, v0 WHERE (((((((0.9490069235740386)OR(vt0.c0 COLLATE NOCASE)))AND((~ (v0.c0))))) ISNULL));
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM vt0, v0;
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (((vt0.c1)GLOB(vt0.c1)) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE ((NOT (((vt0.c1)GLOB(vt0.c1)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (((((vt0.c1)GLOB(vt0.c1)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT ALL vt1.c0, v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, vt1 GROUP BY vt1.c0, v0.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, vt1 WHERE (vt0.c0) GROUP BY vt1.c0, v0.c0, vt0.c0, vt0.c1 UNION SELECT vt1.c0, v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, vt1 WHERE ((NOT (vt0.c0))) GROUP BY vt1.c0, v0.c0, vt0.c0, vt0.c1 UNION SELECT vt1.c0, v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, vt1 WHERE (((vt0.c0) ISNULL)) GROUP BY vt1.c0, v0.c0, vt0.c0, vt0.c1;
SELECT ALL vt1.c0, v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, vt1 GROUP BY vt1.c0, v0.c0, vt0.c0, vt0.c1;
SELECT ALL v0.c0 FROM v0 CROSS JOIN vt0 ON ((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))OR((((v0.c0, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c0))))))AND((((v0.c0, vt0.c1, vt0.c0))>=((vt0.c0, vt0.c1, vt0.c1))))) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 CROSS JOIN vt0 ON ((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))OR((((v0.c0, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c0))))))AND((((v0.c0, vt0.c1, vt0.c0))>=((vt0.c0, vt0.c1, vt0.c1))))) GROUP BY v0.c0 HAVING COUNT(MAX(vt0.c0)) UNION ALL SELECT v0.c0 FROM v0 CROSS JOIN vt0 ON ((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))OR((((v0.c0, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c0))))))AND((((v0.c0, vt0.c1, vt0.c0))>=((vt0.c0, vt0.c1, vt0.c1))))) GROUP BY v0.c0 HAVING (NOT (COUNT(MAX(vt0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 CROSS JOIN vt0 ON ((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))OR((((v0.c0, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c0))))))AND((((v0.c0, vt0.c1, vt0.c0))>=((vt0.c0, vt0.c1, vt0.c1))))) GROUP BY v0.c0 HAVING ((COUNT(MAX(vt0.c0))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM v0, vt1, vt0;
SELECT ALL vt0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE (((v0.c0) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (v0.c0))) AND ((~ (v0.c0))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE ((NOT (((v0.c0) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (v0.c0))) AND ((~ (v0.c0))))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE (((((v0.c0) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (v0.c0))) AND ((~ (v0.c0))))) ISNULL));
SELECT ALL vt0.c0, vt1.c0 FROM v0, vt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN (((((vt0.c0, vt0.c1, vt0.c1))>((vt0.c0, vt0.c0, vt0.c1))), ((vt0.c1) NOT NULL), 1.367493768E9)) AND ((((vt0.c1)+(vt0.c1)), (vt0.c0 IN (vt0.c1, vt0.c1)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN (((((vt0.c0, vt0.c1, vt0.c1))>((vt0.c0, vt0.c0, vt0.c1))), ((vt0.c1) NOT NULL), 1.367493768E9)) AND ((((vt0.c1)+(vt0.c1)), (vt0.c0 IN (vt0.c1, vt0.c1)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN (((((vt0.c0, vt0.c1, vt0.c1))>((vt0.c0, vt0.c0, vt0.c1))), ((vt0.c1) NOT NULL), 1.367493768E9)) AND ((((vt0.c1)+(vt0.c1)), (vt0.c0 IN (vt0.c1, vt0.c1)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1, vt0 WHERE ((- (((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt1.c0))))) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM v0, vt1, vt0 WHERE ((NOT ((- (((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt1.c0))))))) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM v0, vt1, vt0 WHERE ((((- (((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt1.c0))))) ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0, v0.c0;
SELECT vt0.c0, vt1.c0, vt0.c1, v0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1, v0.c0;
SELECT ALL vt0.c0, vt1.c0, vt0.c1, v0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1, v0.c0 HAVING COUNT((((COUNT(*))) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1, v0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1, v0.c0 HAVING (NOT (COUNT((((COUNT(*))) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1, v0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1, v0.c0 HAVING ((COUNT((((COUNT(*))) NOT BETWEEN ((vt0.c1)) AND ((v0.c0))))) ISNULL);
SELECT ALL vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 WHERE (CASE WHEN (- (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE ((vt0.c1)<>(vt0.c1)) END) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (CASE WHEN (- (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE ((vt0.c1)!=(vt0.c1)) END))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE (((CASE WHEN (- (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE ((vt0.c1)!=(vt0.c1)) END) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt1 NATURAL JOIN v0;
SELECT DISTINCT * FROM vt1 NATURAL JOIN v0 WHERE (((((((vt1.c0)<=(v0.c0)))AND(LIKELIHOOD(v0.c0, 0.8409846264848398))))AND(((((v0.c0)AND(vt1.c0)))OR(0.4019346085560537))))) UNION SELECT DISTINCT * FROM vt1 NATURAL JOIN v0 WHERE ((NOT (((((((vt1.c0)<=(v0.c0)))AND(LIKELIHOOD(v0.c0, 0.8409846264848398))))AND(((((v0.c0)AND(vt1.c0)))OR(0.4019346085560537))))))) UNION SELECT DISTINCT * FROM vt1 NATURAL JOIN v0 WHERE (((((((((vt1.c0)<=(v0.c0)))AND(LIKELIHOOD(v0.c0, 0.8409846264848398))))AND(((((v0.c0)AND(vt1.c0)))OR(0.4019346085560537))))) ISNULL));
SELECT DISTINCT * FROM vt1 NATURAL JOIN v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST(((v0.c0) IS TRUE) AS BLOB)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0) IS TRUE) AS BLOB)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST(((v0.c0) IS TRUE) AS BLOB)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c1 FROM vt0, v0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, v0 GROUP BY vt0.c1 HAVING ((('')OR(v0.c0)) IN ()) UNION ALL SELECT vt0.c1 FROM vt0, v0 GROUP BY vt0.c1 HAVING (NOT (((('')OR(v0.c0)) IN ()))) UNION ALL SELECT ALL vt0.c1 FROM vt0, v0 GROUP BY vt0.c1 HAVING ((((('')OR(v0.c0)) IN ())) ISNULL);
SELECT vt0.c1 FROM vt0, v0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, v0 GROUP BY vt0.c1 HAVING ((('')OR(v0.c0)) IN ()) UNION ALL SELECT vt0.c1 FROM vt0, v0 GROUP BY vt0.c1 HAVING (NOT (((('')OR(v0.c0)) IN ()))) UNION ALL SELECT ALL vt0.c1 FROM vt0, v0 GROUP BY vt0.c1 HAVING ((((('')OR(v0.c0)) IN ())) ISNULL);
SELECT vt0.c1 FROM vt0, v0 GROUP BY vt0.c1;
SELECT ALL vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (((((v0.c0)LIKE(v0.c0)), (((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c0))), (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))<((CASE WHEN NULL THEN vt0.c0 END, CAST(0x1c2e234 AS INTEGER), ''))) INNER JOIN v0 ON (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((x'6c61')));
SELECT DISTINCT v0.c0, vt1.c0 FROM vt0, v0, vt1;
SELECT DISTINCT v0.c0, vt1.c0 FROM vt0, v0, vt1 WHERE (0.03372222298605121) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM vt0, v0, vt1 WHERE ((NOT (0.03372222298605121))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM vt0, v0, vt1 WHERE (((0.03372222298605121) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0 FROM vt0, v0, vt1;
SELECT ALL vt1.c0, vt0.c1, vt0.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0, v0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE (CAST(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER)) GROUP BY vt1.c0, vt0.c1, vt0.c0, v0.c0 UNION SELECT ALL vt1.c0, vt0.c1, vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE ((NOT (CAST(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER)))) GROUP BY vt1.c0, vt0.c1, vt0.c0, v0.c0 UNION SELECT ALL vt1.c0, vt0.c1, vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE (((CAST(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER)) ISNULL)) GROUP BY vt1.c0, vt0.c1, vt0.c0, v0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING x'' UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING ((x'') ISNULL);
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING x'' UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING ((x'') ISNULL);
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, v0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE ((- (CAST('JH#*?d' AS TEXT)))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE ((NOT ((- (CAST('JH#*?d' AS TEXT)))))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE ((((- (CAST('JH#*?d' AS TEXT)))) ISNULL));
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, v0;
SELECT DISTINCT v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON ((vt1.c0 COLLATE BINARY)=(((vt1.c0)>>(''))));
SELECT DISTINCT v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON ((vt1.c0 COLLATE BINARY)==(((vt1.c0)>>('')))) WHERE (CAST(TOTAL_CHANGES() AS REAL)) UNION SELECT DISTINCT v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON ((vt1.c0 COLLATE BINARY)==(((vt1.c0)>>('')))) WHERE ((NOT (CAST(TOTAL_CHANGES() AS REAL)))) UNION SELECT DISTINCT v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON ((vt1.c0 COLLATE BINARY)=(((vt1.c0)>>('')))) WHERE (((CAST(TOTAL_CHANGES() AS REAL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON ((vt1.c0 COLLATE BINARY)=(((vt1.c0)>>(''))));
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt1, v0 WHERE (('1981066872' IN ())) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM vt1, v0 WHERE ((NOT (('1981066872' IN ())))) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM vt1, v0 WHERE (((('1981066872' IN ())) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (~ (((v0.c0)*(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((~ (((v0.c0)*(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((~ (((v0.c0)*(v0.c0))))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (~ (((v0.c0)*(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((~ (((v0.c0)*(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((~ (((v0.c0)*(v0.c0))))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt1.c0 FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (((((vt0.c1)OR(vt0.c1)))<=((vt0.c0 IN (vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((vt0.c1)OR(vt0.c1)))<=((vt0.c0 IN (vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))<=((vt0.c0 IN (vt1.c0))))) ISNULL));
SELECT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (''',') UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (''','))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((''',') ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c1, vt1.c0, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0, v0.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.c0, v0.c0 FROM vt0, v0, vt1 WHERE (TYPEOF(UNLIKELY(DISTINCT vt1.c0))) GROUP BY vt0.c1, vt1.c0, vt0.c0, v0.c0 UNION SELECT ALL vt0.c1, vt1.c0, vt0.c0, v0.c0 FROM vt0, v0, vt1 WHERE ((NOT (TYPEOF(UNLIKELY(DISTINCT vt1.c0))))) GROUP BY vt0.c1, vt1.c0, vt0.c0, v0.c0 UNION SELECT vt0.c1, vt1.c0, vt0.c0, v0.c0 FROM vt0, v0, vt1 WHERE (((TYPEOF(UNLIKELY(DISTINCT vt1.c0))) ISNULL)) GROUP BY vt0.c1, vt1.c0, vt0.c0, v0.c0;
SELECT vt0.c1, vt1.c0, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING GROUP_CONCAT(((SUM(AVG(TOTAL(SUM(v0.c0)))))>(v0.c0))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(((SUM(AVG(TOTAL(SUM(v0.c0)))))>(v0.c0))))) UNION ALL SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING ((GROUP_CONCAT(((SUM(AVG(TOTAL(SUM(v0.c0)))))>(v0.c0)))) ISNULL);
SELECT vt0.c0, vt0.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0;
SELECT vt0.c0, vt0.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 WHERE ((- (((vt1.c0)*(vt1.c0))))) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 WHERE ((NOT ((- (((vt1.c0)*(vt1.c0))))))) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 WHERE ((((- (((vt1.c0)*(vt1.c0))))) ISNULL));
SELECT vt0.c0, vt0.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON UNLIKELY(CAST(vt0.c0 AS TEXT));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON UNLIKELY(CAST(vt0.c0 AS TEXT)) WHERE ((((vt0.c1) IS TRUE) IN ())) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON UNLIKELY(CAST(vt0.c0 AS TEXT)) WHERE ((NOT ((((vt0.c1) IS TRUE) IN ())))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON UNLIKELY(CAST(vt0.c0 AS TEXT)) WHERE ((((((vt0.c1) IS TRUE) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON UNLIKELY(CAST(vt0.c0 AS TEXT));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0)) BETWEEN (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND (((- (vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND (((- (vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) BETWEEN (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND (((- (vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING json_array(MIN(AVG(v0.c0)), (- (GROUP_CONCAT(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (json_array(MIN(AVG(v0.c0)), (- (GROUP_CONCAT(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((json_array(MIN(AVG(v0.c0)), (- (GROUP_CONCAT(v0.c0))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((CASE v0.c0  WHEN '322099755' THEN v0.c0 END)>>(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN '322099755' THEN v0.c0 END)>>(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((CASE v0.c0  WHEN '322099755' THEN v0.c0 END)>>(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((LTRIM(v0.c0)))>=((CAST(v0.c0 AS TEXT))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((LTRIM(v0.c0)))>=((CAST(v0.c0 AS TEXT))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((LTRIM(v0.c0)))>=((CAST(v0.c0 AS TEXT))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c0, v0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM v0, vt0, vt1 WHERE (((((json_quote(vt1.c0))OR(((x'')<=(vt1.c0)))))OR(((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) GROUP BY vt1.c0, vt0.c0, v0.c0, vt0.c1 UNION SELECT vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM v0, vt0, vt1 WHERE ((NOT (((((json_quote(vt1.c0))OR(((x'')<=(vt1.c0)))))OR(((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))))) GROUP BY vt1.c0, vt0.c0, v0.c0, vt0.c1 UNION SELECT vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM v0, vt0, vt1 WHERE (((((((json_quote(vt1.c0))OR(((x'')<=(vt1.c0)))))OR(((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) ISNULL)) GROUP BY vt1.c0, vt0.c0, v0.c0, vt0.c1;
SELECT v0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END) BETWEEN (((((((((((((v0.c0)OR(v0.c0)))AND(0.8778602640910421)))OR(v0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(v0.c0))) AND (((vt1.c0)GLOB(v0.c0)))) GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END) BETWEEN (((((((((((((v0.c0)OR(v0.c0)))AND(0.8778602640910421)))OR(v0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(v0.c0))) AND (((vt1.c0)GLOB(v0.c0)))) GROUP BY v0.c0, vt1.c0 HAVING COUNT(AVG(COUNT(*))) UNION ALL SELECT v0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END) BETWEEN (((((((((((((v0.c0)OR(v0.c0)))AND(0.8778602640910421)))OR(v0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(v0.c0))) AND (((vt1.c0)GLOB(v0.c0)))) GROUP BY v0.c0, vt1.c0 HAVING (NOT (COUNT(AVG(COUNT(*))))) UNION ALL SELECT v0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END) BETWEEN (((((((((((((v0.c0)OR(v0.c0)))AND(0.8778602640910421)))OR(v0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(v0.c0))) AND (((vt1.c0)GLOB(v0.c0)))) GROUP BY v0.c0, vt1.c0 HAVING ((COUNT(AVG(COUNT(*)))) ISNULL);
SELECT vt0.c0, vt0.c1, v0.c0 FROM v0, vt0, vt1;
SELECT ALL vt0.c0, vt0.c1, v0.c0 FROM v0, vt0, vt1 WHERE (vt1.c0) UNION ALL SELECT ALL vt0.c0, vt0.c1, v0.c0 FROM v0 NOT INDEXED, vt0, vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL vt0.c0, vt0.c1, v0.c0 FROM v0, vt0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT vt0.c0, vt0.c1, v0.c0 FROM v0, vt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CASE ((vt1.c0) BETWEEN (NULL) AND (vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0)OR(vt1.c0)) END) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CASE ((vt1.c0) BETWEEN (NULL) AND (vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0)OR(vt1.c0)) END))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CASE ((vt1.c0) BETWEEN (NULL) AND (vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0)OR(vt1.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST((((v0.c0))==((v0.c0))) AS TEXT)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CAST((((v0.c0))==((v0.c0))) AS TEXT)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST((((v0.c0))==((v0.c0))) AS TEXT)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0 HAVING GROUP_CONCAT((('0.010704817716335246')&(AVG(COUNT(*))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT((('0.010704817716335246')&(AVG(COUNT(*))))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((GROUP_CONCAT((('0.010704817716335246')&(AVG(COUNT(*)))))) ISNULL);
SELECT MAX((((('-305822754' IN (NULL))))<((NULLIF(0X71c1096e, vt1.c0))))) FROM vt1, vt0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)AND(v0.c0)))<=(((v0.c0)IS(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)AND(v0.c0)))<=(((v0.c0)IS(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))<=(((v0.c0)IS(v0.c0))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT vt1.c0 FROM vt0, v0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, v0, vt1 WHERE ((+ (((((vt0.c1)OR(vt0.c1)))OR(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, v0, vt1 WHERE ((NOT ((+ (((((vt0.c1)OR(vt0.c1)))OR(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, v0, vt1 WHERE ((((+ (((((vt0.c1)OR(vt0.c1)))OR(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, v0, vt1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (CAST((NOT (vt0.c1)) AS INTEGER)) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CAST((NOT (vt0.c1)) AS INTEGER)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST((NOT (vt0.c1)) AS INTEGER)) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt1.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0 HAVING (((MIN(COUNT(*)), AVG(vt1.c0), ((AVG(v0.c0))GLOB(-917135441))))==((MIN(TOTAL(MAX(v0.c0))), MAX(vt0.c0), TOTAL(TOTAL(MIN(x'')))))) UNION ALL SELECT vt1.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0 HAVING (NOT ((((MIN(COUNT(*)), AVG(vt1.c0), ((AVG(v0.c0))GLOB(-917135441))))=((MIN(TOTAL(MAX(v0.c0))), MAX(vt0.c0), TOTAL(TOTAL(MIN(x'')))))))) UNION ALL SELECT vt1.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0 HAVING (((((MIN(COUNT(*)), AVG(vt1.c0), ((AVG(v0.c0))GLOB(-917135441))))==((MIN(TOTAL(MAX(v0.c0))), MAX(vt0.c0), TOTAL(TOTAL(MIN(x''))))))) ISNULL);
SELECT MAX(CASE WHEN ((v0.c0)+(v0.c0)) THEN NULL END) FROM vt1, vt0, v0 ORDER BY vt1.c0 DESC;
SELECT ALL v0.c0, vt0.c1 FROM vt0, v0;
SELECT ALL v0.c0, vt0.c1 FROM vt0, v0 WHERE ((((NULL, vt0.c0, v0.c0)) BETWEEN ((((v0.c0) ISNULL), vt0.c1, ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((TRIM(DISTINCT vt0.c0, vt0.c1), (vt0.c1 IN ()), CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END)))) UNION ALL SELECT ALL v0.c0, vt0.c1 FROM vt0, v0 WHERE ((NOT ((((NULL, vt0.c0, v0.c0)) BETWEEN ((((v0.c0) ISNULL), vt0.c1, ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((TRIM(DISTINCT vt0.c0, vt0.c1), (vt0.c1 IN ()), CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END)))))) UNION ALL SELECT v0.c0, vt0.c1 FROM vt0, v0 WHERE ((((((NULL, vt0.c0, v0.c0)) BETWEEN ((((v0.c0) ISNULL), vt0.c1, ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((TRIM(DISTINCT vt0.c0, vt0.c1), (vt0.c1 IN ()), CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END)))) ISNULL));
SELECT ALL v0.c0, vt0.c1 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 NOT INDEXED WHERE (((v0.c0 COLLATE BINARY) NOT BETWEEN (((v0.c0) IS FALSE)) AND (NULL))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE BINARY) NOT BETWEEN (((v0.c0) IS FALSE)) AND (NULL))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE BINARY) NOT BETWEEN (((v0.c0) IS FALSE)) AND (NULL))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c0, vt0.c1 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM v0 NATURAL JOIN vt0 WHERE (((HEX(DISTINCT vt0.c1))%(((vt0.c1)||(vt0.c1))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM v0 NATURAL JOIN vt0 WHERE ((NOT (((HEX(DISTINCT vt0.c1))%(((vt0.c1)||(vt0.c1))))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM v0 NATURAL JOIN vt0 WHERE (((((HEX(DISTINCT vt0.c1))%(((vt0.c1)||(vt0.c1))))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((((((((TOTAL(TOTAL(AVG(COUNT(MIN(COUNT(*)))))))OR(MIN(0.7224873685579905))))AND(vt1.c0)))OR(COUNT(*))))AND(MAX(vt0.c0)))) NOT NULL) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((((((((((TOTAL(TOTAL(AVG(COUNT(MIN(COUNT(*)))))))OR(MIN(0.7224873685579905))))AND(vt1.c0)))OR(COUNT(*))))AND(MAX(vt0.c0)))) NOT NULL))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((((((((((TOTAL(TOTAL(AVG(COUNT(MIN(COUNT(*)))))))OR(MIN(0.7224873685579905))))AND(vt1.c0)))OR(COUNT(*))))AND(MAX(vt0.c0)))) NOT NULL)) ISNULL);
SELECT ALL MAX(((vt1.c0 COLLATE BINARY)LIKE(LIKELIHOOD(NULL, 0.719409674562476)))) FROM vt1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0)AND(0xfffffffffdad8cc2)))OR(v0.c0)) IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((v0.c0)AND(0xfffffffffdad8cc2)))OR(v0.c0)) IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((v0.c0)AND(0xfffffffffdad8cc2)))OR(v0.c0)) IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, v0, vt1 WHERE ((v0.c0 IN (vt0.c1, vt0.c0)) COLLATE RTRIM) GROUP BY vt1.c0, vt0.c1, vt0.c0 UNION SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, v0, vt1 WHERE ((NOT ((v0.c0 IN (vt0.c1, vt0.c0)) COLLATE RTRIM))) GROUP BY vt1.c0, vt0.c1, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, v0, vt1 WHERE ((((v0.c0 IN (vt0.c1, vt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING CAST(((v0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) AS TEXT) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (CAST(((v0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) AS TEXT))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((CAST(((v0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) AS TEXT)) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING CAST(((v0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) AS TEXT) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (CAST(((v0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) AS TEXT))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((CAST(((v0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) AS TEXT)) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c1 FROM vt0, v0, vt1;
SELECT vt0.c1 FROM vt0, v0, vt1 WHERE (CASE (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))  WHEN '1504603759' THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN v0.c0 THEN ((v0.c0) ISNULL) WHEN ((vt1.c0)||(vt0.c1)) THEN (- (vt1.c0)) END) UNION ALL SELECT ALL vt0.c1 FROM vt0 NOT INDEXED, v0, vt1 WHERE ((NOT (CASE (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))  WHEN '1504603759' THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN v0.c0 THEN ((v0.c0) ISNULL) WHEN ((vt1.c0)||(vt0.c1)) THEN (- (vt1.c0)) END))) UNION ALL SELECT ALL vt0.c1 FROM vt0, v0, vt1 WHERE (((CASE (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))  WHEN '1504603759' THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN v0.c0 THEN ((v0.c0) ISNULL) WHEN ((vt1.c0)||(vt0.c1)) THEN (- (vt1.c0)) END) ISNULL));
SELECT ALL vt0.c1 FROM vt0, v0, vt1;
SELECT DISTINCT v0.c0, vt0.c1, vt0.c0 FROM v0, vt1, vt0;
SELECT DISTINCT v0.c0, vt0.c1, vt0.c0 FROM v0, vt1, vt0 WHERE ((- ((((vt0.c0)) BETWEEN ((0.6264793725117989)) AND ((vt1.c0)))))) UNION SELECT DISTINCT v0.c0, vt0.c1, vt0.c0 FROM v0, vt1, vt0 WHERE ((NOT ((- ((((vt0.c0)) BETWEEN ((0.6264793725117989)) AND ((vt1.c0)))))))) UNION SELECT DISTINCT v0.c0, vt0.c1, vt0.c0 FROM v0, vt1, vt0 WHERE ((((- ((((vt0.c0)) BETWEEN ((0.6264793725117989)) AND ((vt1.c0)))))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c1, vt0.c0 FROM v0, vt1, vt0;
SELECT ALL vt0.c1, vt0.c0 FROM v0, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM v0, vt0 WHERE (vt0.c0) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM v0, vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM v0, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM v0, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING MAX(((COUNT(*))OR(SUM(v0.c0)))) UNION ALL SELECT vt1.c0, v0.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING (NOT (MAX(((COUNT(*))OR(SUM(v0.c0)))))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING ((MAX(((COUNT(*))OR(SUM(v0.c0))))) ISNULL);
SELECT SUM(((((((v0.c0)OR(vt0.c1)))AND(vt0.c1))) IS FALSE)) FROM v0, vt0 ORDER BY CAST(((NULL)=(vt0.c0)) AS INTEGER) DESC;
SELECT ALL * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE ((((- (v0.c0)))<=(v0.c0))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT ((((- (v0.c0)))<=(v0.c0))))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((((((- (v0.c0)))<=(v0.c0))) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 RIGHT OUTER JOIN v0 ON vt0.c1;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 RIGHT OUTER JOIN v0 ON vt0.c1 WHERE (((((((((((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt1.c0)IS(vt0.c0)))))AND(CAST(v0.c0 AS TEXT))))AND(((NULL)<(vt0.c1)))))AND(((x'')/(v0.c0))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 RIGHT OUTER JOIN v0 ON vt0.c1 WHERE ((NOT (((((((((((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt1.c0)IS(vt0.c0)))))AND(CAST(v0.c0 AS TEXT))))AND(((NULL)<(vt0.c1)))))AND(((x'')/(v0.c0))))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 RIGHT OUTER JOIN v0 ON vt0.c1 WHERE (((((((((((((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt1.c0)IS(vt0.c0)))))AND(CAST(v0.c0 AS TEXT))))AND(((NULL)<(vt0.c1)))))AND(((x'')/(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 RIGHT OUTER JOIN v0 ON vt0.c1;
SELECT vt1.c0, v0.c0, vt0.c1, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, v0.c0, vt0.c1, vt0.c0;
SELECT vt1.c0, v0.c0, vt0.c1, vt0.c0 FROM vt0, v0, vt1 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))>=((v0.c0, vt0.c1, '\v')))) BETWEEN ((- (vt0.c0))) AND (vt1.c0 COLLATE NOCASE))) GROUP BY vt1.c0, v0.c0, vt0.c1, vt0.c0 UNION SELECT vt1.c0, v0.c0, vt0.c1, vt0.c0 FROM vt0, v0, vt1 WHERE ((NOT ((((((vt0.c0, vt0.c0, vt0.c0))>=((v0.c0, vt0.c1, '\v')))) BETWEEN ((- (vt0.c0))) AND (vt1.c0 COLLATE NOCASE))))) GROUP BY vt1.c0, v0.c0, vt0.c1, vt0.c0 UNION SELECT ALL vt1.c0, v0.c0, vt0.c1, vt0.c0 FROM vt0, v0, vt1 WHERE ((((((((vt0.c0, vt0.c0, vt0.c0))>=((v0.c0, vt0.c1, '\v')))) BETWEEN ((- (vt0.c0))) AND (vt1.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt1.c0, v0.c0, vt0.c1, vt0.c0;
SELECT vt1.c0, v0.c0, vt0.c1, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, v0.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING MIN((((v0.c0, v0.c0, vt1.c0)) NOT BETWEEN ((MIN(v0.c0), COUNT(*), MAX(COUNT(*)))) AND ((MAX(AVG(vt1.c0)), vt1.c0, vt1.c0)))) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING (NOT (MIN((((v0.c0, v0.c0, vt1.c0)) NOT BETWEEN ((MIN(v0.c0), COUNT(*), MAX(COUNT(*)))) AND ((MAX(AVG(vt1.c0)), vt1.c0, vt1.c0)))))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING ((MIN((((v0.c0, v0.c0, vt1.c0)) NOT BETWEEN ((MIN(v0.c0), COUNT(*), MAX(COUNT(*)))) AND ((MAX(AVG(vt1.c0)), vt1.c0, vt1.c0))))) ISNULL);
SELECT vt1.c0 FROM vt1, vt0;
SELECT vt1.c0 FROM vt1, vt0 WHERE (((CASE 0.6632323762968737  WHEN vt1.c0 THEN '' ELSE vt0.c0 END)>>((((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT (((CASE 0.6632323762968737  WHEN vt1.c0 THEN '' ELSE vt0.c0 END)>>((((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0)))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (((((CASE 0.6632323762968737  WHEN vt1.c0 THEN '' ELSE vt0.c0 END)>>((((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0)))))) ISNULL));
SELECT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (ABS(DISTINCT (((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c1))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (ABS(DISTINCT (((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c1))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((ABS(DISTINCT (((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c0, v0.c0, vt1.c0, vt0.c1 FROM v0, vt0, vt1 GROUP BY vt0.c0, v0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, v0.c0, vt1.c0, vt0.c1 FROM v0, vt0, vt1 WHERE (((vt1.c0)=(((vt1.c0)AND(vt0.c0))))) GROUP BY vt0.c0, v0.c0, vt1.c0, vt0.c1 UNION SELECT ALL vt0.c0, v0.c0, vt1.c0, vt0.c1 FROM v0, vt0, vt1 WHERE ((NOT (((vt1.c0)==(((vt1.c0)AND(vt0.c0))))))) GROUP BY vt0.c0, v0.c0, vt1.c0, vt0.c1 UNION SELECT vt0.c0, v0.c0, vt1.c0, vt0.c1 FROM v0, vt0, vt1 WHERE (((((vt1.c0)=(((vt1.c0)AND(vt0.c0))))) ISNULL)) GROUP BY vt0.c0, v0.c0, vt1.c0, vt0.c1;
SELECT vt0.c0, v0.c0, vt1.c0, vt0.c1 FROM v0, vt0, vt1 GROUP BY vt0.c0, v0.c0, vt1.c0, vt0.c1;
SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING ((NOT (TOTAL(MIN(AVG(COUNT(v0.c0)))))) IN (MIN(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING (NOT (((NOT (TOTAL(MIN(AVG(COUNT(v0.c0)))))) IN (MIN(v0.c0))))) UNION ALL SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING ((((NOT (TOTAL(MIN(AVG(COUNT(v0.c0)))))) IN (MIN(v0.c0)))) ISNULL);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((((((((vt0.c0)OR(((vt0.c1)|(vt0.c0)))))AND(NULL)))AND(((((vt1.c0)OR(vt0.c0)))OR(v0.c0)))))OR(vt0.c0 COLLATE BINARY)) CROSS JOIN vt1 ON CASE WHEN (('-1539485881')OR(vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE CASE vt0.c1  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END END;
SELECT * FROM vt0 CROSS JOIN v0 ON ((((((((vt0.c0)OR(((vt0.c1)|(vt0.c0)))))AND(NULL)))AND(((((vt1.c0)OR(vt0.c0)))OR(v0.c0)))))OR(vt0.c0 COLLATE BINARY)) CROSS JOIN vt1 ON CASE WHEN (('-1539485881')OR(vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE CASE vt0.c1  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END END WHERE (((ABS(vt0.c0)) NOT NULL)) UNION ALL SELECT * FROM vt0 CROSS JOIN v0 ON ((((((((vt0.c0)OR(((vt0.c1)|(vt0.c0)))))AND(NULL)))AND(((((vt1.c0)OR(vt0.c0)))OR(v0.c0)))))OR(vt0.c0 COLLATE BINARY)) CROSS JOIN vt1 ON CASE WHEN (('-1539485881')OR(vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE CASE vt0.c1  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END END WHERE ((NOT (((ABS(vt0.c0)) NOT NULL)))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((((((((vt0.c0)OR(((vt0.c1)|(vt0.c0)))))AND(NULL)))AND(((((vt1.c0)OR(vt0.c0)))OR(v0.c0)))))OR(vt0.c0 COLLATE BINARY)) CROSS JOIN vt1 ON CASE WHEN (('-1539485881')OR(vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE CASE vt0.c1  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END END WHERE (((((ABS(vt0.c0)) NOT NULL)) ISNULL));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((((((((vt0.c0)OR(((vt0.c1)|(vt0.c0)))))AND(NULL)))AND(((((vt1.c0)OR(vt0.c0)))OR(v0.c0)))))OR(vt0.c0 COLLATE BINARY)) CROSS JOIN vt1 ON CASE WHEN (('-1539485881')OR(vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE CASE vt0.c1  WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END END;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN '\ruAt' END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN CAST(vt0.c0 AS BLOB) THEN '\ruAt' END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN CAST(vt0.c0 AS BLOB) THEN '\ruAt' END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON (('q>') BETWEEN (json(vt1.c0)) AND (vt0.c0)) LEFT OUTER JOIN vt1 ON 'L8(J(' GROUP BY vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING MAX(COUNT(vt0.c0) COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (MAX(COUNT(vt0.c0) COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((MAX(COUNT(vt0.c0) COLLATE NOCASE)) ISNULL);
SELECT vt1.c0, vt0.c1 FROM v0 INNER JOIN vt1 ON ((UNLIKELY(DISTINCT vt1.c0)) BETWEEN (v0.c0 COLLATE RTRIM) AND ((- (vt0.c0)))) CROSS JOIN vt0 ON ((((((v0.c0)OR(vt0.c0)))OR(vt1.c0)))|(TYPEOF(DISTINCT vt0.c1)));
SELECT vt1.c0, vt0.c1 FROM v0 INNER JOIN vt1 ON ((UNLIKELY(DISTINCT vt1.c0)) BETWEEN (v0.c0 COLLATE RTRIM) AND ((- (vt0.c0)))) CROSS JOIN vt0 ON ((((((v0.c0)OR(vt0.c0)))OR(vt1.c0)))|(TYPEOF(DISTINCT vt0.c1))) WHERE (vt0.c1) UNION ALL SELECT vt1.c0, vt0.c1 FROM v0 INNER JOIN vt1 ON ((UNLIKELY(DISTINCT vt1.c0)) BETWEEN (v0.c0 COLLATE RTRIM) AND ((- (vt0.c0)))) CROSS JOIN vt0 ON ((((((v0.c0)OR(vt0.c0)))OR(vt1.c0)))|(TYPEOF(DISTINCT vt0.c1))) WHERE ((NOT (vt0.c1))) UNION ALL SELECT ALL vt1.c0, vt0.c1 FROM v0 INNER JOIN vt1 ON ((UNLIKELY(DISTINCT vt1.c0)) BETWEEN (v0.c0 COLLATE RTRIM) AND ((- (vt0.c0)))) CROSS JOIN vt0 ON ((((((v0.c0)OR(vt0.c0)))OR(vt1.c0)))|(TYPEOF(DISTINCT vt0.c1))) WHERE (((vt0.c1) ISNULL));
SELECT vt1.c0, vt0.c1 FROM v0 INNER JOIN vt1 ON ((UNLIKELY(DISTINCT vt1.c0)) BETWEEN (v0.c0 COLLATE RTRIM) AND ((- (vt0.c0)))) CROSS JOIN vt0 ON ((((((v0.c0)OR(vt0.c0)))OR(vt1.c0)))|(TYPEOF(DISTINCT vt0.c1)));
SELECT DISTINCT * FROM vt1, v0 FULL OUTER JOIN vt0 ON CASE WHEN (- (vt0.c1)) THEN vt0.c0 ELSE 0X7ea980f4 END;
SELECT DISTINCT * FROM vt1, v0 FULL OUTER JOIN vt0 ON CASE WHEN (- (vt0.c1)) THEN vt0.c0 ELSE 0X7ea980f4 END WHERE ((+ ((- (v0.c0))))) UNION SELECT DISTINCT * FROM vt1, v0 FULL OUTER JOIN vt0 ON CASE WHEN (- (vt0.c1)) THEN vt0.c0 ELSE 0X7ea980f4 END WHERE ((NOT ((+ ((- (v0.c0))))))) UNION SELECT DISTINCT * FROM vt1, v0 FULL OUTER JOIN vt0 ON CASE WHEN (- (vt0.c1)) THEN vt0.c0 ELSE 0x7ea980f4 END WHERE ((((+ ((- (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, v0 FULL OUTER JOIN vt0 ON CASE WHEN (- (vt0.c1)) THEN vt0.c0 ELSE 0X7ea980f4 END;
SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0 WHERE (((((vt1.c0) NOT NULL)) BETWEEN ((~ (vt1.c0))) AND (TRIM(DISTINCT vt1.c0, v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt1, v0 WHERE ((NOT (((((vt1.c0) NOT NULL)) BETWEEN ((~ (vt1.c0))) AND (TRIM(DISTINCT vt1.c0, v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1, v0 WHERE (((((((vt1.c0) NOT NULL)) BETWEEN ((~ (vt1.c0))) AND (TRIM(DISTINCT vt1.c0, v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE WHEN (((vt1.c0, vt1.c0, MIN(SUM(vt1.c0)))) BETWEEN ((MAX(COUNT(*)), vt1.c0, COUNT(TOTAL(GROUP_CONCAT(vt1.c0))))) AND ((vt1.c0, SUM(COUNT(*)), vt1.c0))) THEN ((vt1.c0)IS NOT(MAX(SUM(vt1.c0)))) WHEN TOTAL(vt1.c0) THEN ((vt1.c0)/(GROUP_CONCAT(TOTAL(vt1.c0)))) WHEN COUNT(*) THEN (vt1.c0 IN ()) END UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE WHEN (((vt1.c0, vt1.c0, MIN(SUM(vt1.c0)))) BETWEEN ((MAX(COUNT(*)), vt1.c0, COUNT(TOTAL(GROUP_CONCAT(vt1.c0))))) AND ((vt1.c0, SUM(COUNT(*)), vt1.c0))) THEN ((vt1.c0)IS NOT(MAX(SUM(vt1.c0)))) WHEN TOTAL(vt1.c0) THEN ((vt1.c0)/(GROUP_CONCAT(TOTAL(vt1.c0)))) WHEN COUNT(*) THEN (vt1.c0 IN ()) END)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE WHEN (((vt1.c0, vt1.c0, MIN(SUM(vt1.c0)))) BETWEEN ((MAX(COUNT(*)), vt1.c0, COUNT(TOTAL(GROUP_CONCAT(vt1.c0))))) AND ((vt1.c0, SUM(COUNT(*)), vt1.c0))) THEN ((vt1.c0)IS NOT(MAX(SUM(vt1.c0)))) WHEN TOTAL(vt1.c0) THEN ((vt1.c0)/(GROUP_CONCAT(TOTAL(vt1.c0)))) WHEN COUNT(*) THEN (vt1.c0 IN ()) END) ISNULL);
SELECT vt0.c0, vt0.c1, v0.c0 FROM vt0, vt1 RIGHT OUTER JOIN v0 ON ((((((v0.c0)AND(vt0.c1)))OR(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (('⶙HTH' IN ())));
SELECT vt0.c0, vt0.c1, v0.c0 FROM vt0, vt1 RIGHT OUTER JOIN v0 ON ((((((v0.c0)AND(vt0.c1)))OR(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (('⶙HTH' IN ()))) WHERE (CASE WHEN (~ (v0.c0)) THEN CASE vt0.c1  WHEN vt1.c0 THEN 0.23000101457374778 END END) UNION ALL SELECT ALL vt0.c0, vt0.c1, v0.c0 FROM vt0, vt1 RIGHT OUTER JOIN v0 ON ((((((v0.c0)AND(vt0.c1)))OR(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (('⶙HTH' IN ()))) WHERE ((NOT (CASE WHEN (~ (v0.c0)) THEN CASE vt0.c1  WHEN vt1.c0 THEN 0.23000101457374778 END END))) UNION ALL SELECT vt0.c0, vt0.c1, v0.c0 FROM vt0, vt1 RIGHT OUTER JOIN v0 ON ((((((v0.c0)AND(vt0.c1)))OR(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (('⶙HTH' IN ()))) WHERE (((CASE WHEN (~ (v0.c0)) THEN CASE vt0.c1  WHEN vt1.c0 THEN 0.23000101457374778 END END) ISNULL));
SELECT vt0.c0, vt0.c1, v0.c0 FROM vt0, vt1 RIGHT OUTER JOIN v0 ON ((((((v0.c0)AND(vt0.c1)))OR(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (('⶙HTH' IN ())));
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE (CAST(NULL AS INTEGER)) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT (CAST(NULL AS INTEGER)))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE (((CAST(NULL AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((+ (NULL))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((+ (NULL))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((+ (NULL))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON CASE ((((vt0.c0)OR(NULL)))OR(vt0.c1))  WHEN ((vt0.c1)>>(vt0.c1)) THEN ((vt1.c0)%(vt0.c0)) WHEN ('-2069143898' IN ()) THEN 597876165 WHEN ((vt0.c1) NOTNULL) THEN '204599509' END;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON CASE ((((vt0.c0)OR(NULL)))OR(vt0.c1))  WHEN ((vt0.c1)>>(vt0.c1)) THEN ((vt1.c0)%(vt0.c0)) WHEN ('-2069143898' IN ()) THEN 597876165 WHEN ((vt0.c1) NOTNULL) THEN '204599509' END WHERE (((+ (vt0.c1)) IN ())) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON CASE ((((vt0.c0)OR(NULL)))OR(vt0.c1))  WHEN ((vt0.c1)>>(vt0.c1)) THEN ((vt1.c0)%(vt0.c0)) WHEN ('-2069143898' IN ()) THEN 597876165 WHEN ((vt0.c1) NOTNULL) THEN '204599509' END WHERE ((NOT (((+ (vt0.c1)) IN ())))) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON CASE ((((vt0.c0)OR(NULL)))OR(vt0.c1))  WHEN ((vt0.c1)>>(vt0.c1)) THEN ((vt1.c0)%(vt0.c0)) WHEN ('-2069143898' IN ()) THEN 597876165 WHEN ((vt0.c1) NOTNULL) THEN '204599509' END WHERE (((((+ (vt0.c1)) IN ())) ISNULL));
SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON CASE ((((vt0.c0)OR(NULL)))OR(vt0.c1))  WHEN ((vt0.c1)>>(vt0.c1)) THEN ((vt1.c0)%(vt0.c0)) WHEN ('-2069143898' IN ()) THEN 597876165 WHEN ((vt0.c1) NOTNULL) THEN '204599509' END;
SELECT DISTINCT v0.c0 FROM vt0, vt1 LEFT OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((((((((((1.635905538E9)OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(vt1.c0)))) AND ((v0.c0 COLLATE RTRIM)));
SELECT DISTINCT v0.c0 FROM vt0, vt1 LEFT OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((((((((((1.635905538E9)OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(vt1.c0)))) AND ((v0.c0 COLLATE RTRIM))) WHERE (DATE(vt0.c0 COLLATE BINARY, (((vt0.c1))==((vt0.c0))), CAST(vt1.c0 AS INTEGER))) UNION SELECT DISTINCT v0.c0 FROM vt0, vt1 LEFT OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((((((((((1.635905538E9)OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(vt1.c0)))) AND ((v0.c0 COLLATE RTRIM))) WHERE ((NOT (DATE(vt0.c0 COLLATE BINARY, (((vt0.c1))=((vt0.c0))), CAST(vt1.c0 AS INTEGER))))) UNION SELECT DISTINCT v0.c0 FROM vt0, vt1 LEFT OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((((((((((1.635905538E9)OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(vt1.c0)))) AND ((v0.c0 COLLATE RTRIM))) WHERE (((DATE(vt0.c0 COLLATE BINARY, (((vt0.c1))=((vt0.c0))), CAST(vt1.c0 AS INTEGER))) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0, vt1 LEFT OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((((((((((1.635905538E9)OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(vt1.c0)))) AND ((v0.c0 COLLATE RTRIM)));
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (json_remove((((vt1.c0))=((vt1.c0))), ((((vt1.c0)AND(vt1.c0)))AND(x'')))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (json_remove((((vt1.c0))=((vt1.c0))), ((((vt1.c0)AND(vt1.c0)))AND(x'')))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((json_remove((((vt1.c0))==((vt1.c0))), ((((vt1.c0)AND(vt1.c0)))AND(x'')))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0 HAVING AVG(COUNT(COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(COUNT(COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0 HAVING ((AVG(COUNT(COUNT(*)))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE RTRIM) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE RTRIM))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE RTRIM) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) NOTNULL)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS BLOB)) NOTNULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c0 AS BLOB)) NOTNULL)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL v0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON (((v0.c0)||(NULL)) IN (v0.c0 COLLATE NOCASE)) GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON (((v0.c0)||(NULL)) IN (v0.c0 COLLATE NOCASE)) WHERE (((((((((((((CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'3255' THEN 'rb	su,6.' END)AND((((vt1.c0))<=((v0.c0))))))AND((((v0.c0))==((vt1.c0))))))OR((((v0.c0))!=((x''))))))AND(((vt1.c0) NOTNULL))))AND(highlight(v0.c0, v0.c0, vt1.c0, vt1.c0))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))))) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON (((v0.c0)||(NULL)) IN (v0.c0 COLLATE NOCASE)) WHERE ((NOT (((((((((((((CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'3255' THEN 'rb	su,6.' END)AND((((vt1.c0))<=((v0.c0))))))AND((((v0.c0))=((vt1.c0))))))OR((((v0.c0))!=((x''))))))AND(((vt1.c0) NOTNULL))))AND(highlight(v0.c0, v0.c0, vt1.c0, vt1.c0))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))))))) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN v0 ON (((v0.c0)||(NULL)) IN (v0.c0 COLLATE NOCASE)) WHERE (((((((((((((((CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'3255' THEN 'rb	su,6.' END)AND((((vt1.c0))<=((v0.c0))))))AND((((v0.c0))==((vt1.c0))))))OR((((v0.c0))<>((x''))))))AND(((vt1.c0) NOTNULL))))AND(highlight(v0.c0, v0.c0, vt1.c0, vt1.c0))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((v0.c0) NOTNULL), SUM(NULL), GROUP_CONCAT(v0.c0)))>=((MAX(v0.c0), (0.26814008331545747 IN ()), COUNT(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((((v0.c0) NOTNULL), SUM(NULL), GROUP_CONCAT(v0.c0)))>=((MAX(v0.c0), (0.26814008331545747 IN ()), COUNT(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((((v0.c0) NOTNULL), SUM(NULL), GROUP_CONCAT(v0.c0)))>=((MAX(v0.c0), (0.26814008331545747 IN ()), COUNT(v0.c0))))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((v0.c0) NOTNULL), SUM(NULL), GROUP_CONCAT(v0.c0)))>=((MAX(v0.c0), (0.26814008331545747 IN ()), COUNT(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((((v0.c0) NOTNULL), SUM(NULL), GROUP_CONCAT(v0.c0)))>=((MAX(v0.c0), (0.26814008331545747 IN ()), COUNT(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((((v0.c0) NOTNULL), SUM(NULL), GROUP_CONCAT(v0.c0)))>=((MAX(v0.c0), (0.26814008331545747 IN ()), COUNT(v0.c0))))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT MAX(v0.c0) FROM v0, vt1;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (0.8579179912050808) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (0.8579179912050808))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((0.8579179912050808) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((vt0.c1)AND((vt0.c1 IN (vt0.c0, vt0.c1)))))AND((vt0.c0 IN ()))))AND(((vt0.c0) ISNULL))))OR(((vt0.c0)>(vt0.c1))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((((vt0.c1)AND((vt0.c1 IN (vt0.c0, vt0.c1)))))AND((vt0.c0 IN ()))))AND(((vt0.c0) ISNULL))))OR(((vt0.c0)>(vt0.c1))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((((vt0.c1)AND((vt0.c1 IN (vt0.c0, vt0.c1)))))AND((vt0.c0 IN ()))))AND(((vt0.c0) ISNULL))))OR(((vt0.c0)>(vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY v0.c0, vt0.c1;
SELECT v0.c0, vt0.c1 FROM vt1, vt0, v0 WHERE (v0.c0) GROUP BY v0.c0, vt0.c1 UNION SELECT ALL v0.c0, vt0.c1 FROM vt1, vt0, v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0, vt0.c1 UNION SELECT v0.c0, vt0.c1 FROM vt1, vt0, v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY v0.c0, vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING MAX(vt0.c1) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (MAX(vt0.c1))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((MAX(vt0.c1)) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING MAX(vt0.c1) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (MAX(vt0.c1))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((MAX(vt0.c1)) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT SUM((((((v0.c0))=((v0.c0))))LIKE(0.1493141279838761))) FROM v0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (SQLITE_COMPILEOPTION_USED((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c1))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (SQLITE_COMPILEOPTION_USED((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c1))))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((SQLITE_COMPILEOPTION_USED((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c1))))) ISNULL));
SELECT vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt0, vt1 INNER JOIN v0 ON json_object(0.745702232413836, (v0.c0 IN ()));
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON vt1.c0 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON vt1.c0 WHERE (CAST((vt0.c0 IN ()) AS BLOB)) GROUP BY vt0.c1, vt0.c0, vt1.c0 UNION SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON vt1.c0 WHERE ((NOT (CAST((vt0.c0 IN ()) AS BLOB)))) GROUP BY vt0.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON vt1.c0 WHERE (((CAST((vt0.c0 IN ()) AS BLOB)) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON vt1.c0 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1, v0 GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1, v0 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING GROUP_CONCAT(AVG(vt0.c1)) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1, v0 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING (NOT (GROUP_CONCAT(AVG(vt0.c1)))) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1, v0 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING ((GROUP_CONCAT(AVG(vt0.c1))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (v0.c0 COLLATE RTRIM COLLATE RTRIM COLLATE NOCASE) UNION ALL SELECT * FROM v0 WHERE ((NOT (v0.c0 COLLATE RTRIM COLLATE RTRIM COLLATE NOCASE))) UNION ALL SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE RTRIM COLLATE RTRIM COLLATE NOCASE) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0 IN ()))!=(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((vt1.c0 IN ()))<>(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0 IN ()))!=(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
