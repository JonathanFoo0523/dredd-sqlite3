-- Time: 2024/06/09 07:22:10
-- Database: database45
-- Database version: 3.40.0
-- seed value: 899729845
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c1, c0, c2) VALUES (NULL, NULL, 'aX'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (0.9348471157211352), (0.909692951609504), (NULL); -- 0ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0) VALUES ('0.9348471157211352'); -- 2ms;
REINDEX; -- 0ms;
PRAGMA optimize; -- 0ms;
ANALYZE rt0; -- 0ms;
REINDEX; -- 0ms;
PRAGMA locking_mode = EXCLUSIVE; -- 0ms;
INSERT OR FAIL INTO rt0(c0, c2, c1) VALUES ('1,0hz Ey', NULL, 'aX'), (-464946608, x'', NULL), (NULL, NULL, 0.9945869012399822); -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c2) VALUES (0xfffffffff22cb3a3, -2.31951453E8); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c0) VALUES (0.8496618457366588, '-231951453', '0.9945869012399822'); -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
CREATE TABLE t0 (c0 REAL , c1 BLOB , c2 REAL  CHECK ( '')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE t0; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (x'23f3', x''); -- 0ms;
INSERT OR ABORT INTO t0(c2) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (0.7844181472421433, -464946608); -- 0ms;
VACUUM; -- 0ms;
PRAGMA stats; -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
COMMIT; -- 0ms;
PRAGMA application_id = 7541300756420939674; -- 1ms;
ANALYZE temp; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR ABORT INTO t0(c2) VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO t0(c0, c2, c1) VALUES (NULL, x'c9a5', '-464946608'); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c2) VALUES (x'', '?'); -- 0ms;
INSERT OR IGNORE INTO t0(c1) VALUES (-1121668181); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.secure_delete; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
PRAGMA main.threads; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c1 TO c85; -- 0ms;
REINDEX; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i55 ON t0(((((c0)>>(c0)))%(((c0)||(c85)))) COLLATE RTRIM,(c2 IN ()) COLLATE BINARY,CAST(((((((((((((c0)AND(c85)))OR(c85)))AND(c85)))OR(c85)))OR(x'033d')))OR(c0)) AS BLOB)); -- 0ms;
SELECT rtreecheck('rt0'); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
PRAGMA short_column_names; -- 0ms;
ALTER TABLE t0 ADD COLUMN c26 BLOB; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX i11 ON t0(CASE CASE WHEN c0 THEN c0 WHEN c2 THEN c0 WHEN c2 THEN c1 END  WHEN PRINTF(c0) THEN ((c2)IS NOT(c1)) ELSE ((c0)<>(c0)) END COLLATE NOCASE ASC,((((((NULL)OR(c2)))OR(-4.64946608E8)))>(SUBSTR(c1, c1))) COLLATE RTRIM ASC,CASE -1.121668181E9  WHEN json_type(c2) THEN HEX(c0) ELSE (((c0))>=((c0))) END COLLATE BINARY DESC); -- 1ms;
PRAGMA journal_size_limit; -- 0ms;
COMMIT TRANSACTION; -- 1ms;
PRAGMA main.threads = 2751733224580081319; -- 0ms;
CREATE INDEX i75 ON t0((((((((c2)) BETWEEN ((c2)) AND ((c0))))AND(((((c0)AND(c0)))OR(x'fc35')))))AND(((c2)>(c1)))) COLLATE BINARY ASC,(((c2 IN ('1804257045')))|(((c1) ISNULL))) COLLATE BINARY,CASE ((((((((c0)OR(c2)))AND(c1)))OR(c1)))OR(c0))  WHEN ((((c0)AND(c1)))AND(c2)) THEN ((((((((c2)OR(c1)))OR(c0)))AND(c2)))AND(c0)) ELSE ((((c1)OR(c0)))OR(c1)) END COLLATE RTRIM ASC); -- 0ms;
COMMIT; -- 0ms;
DELETE FROM rt0; -- 0ms;
ANALYZE t0; -- 0ms;
PRAGMA auto_vacuum = NONE; -- 0ms;
CREATE UNIQUE INDEX i76 ON t0(((((('')) NOT BETWEEN ((0.8190300529701319)) AND ((c1))))&(((c2) BETWEEN (c2) AND (c0)))) COLLATE RTRIM,CASE CASE c1  WHEN c1 THEN c2 WHEN c1 THEN c0 WHEN c1 THEN c0 ELSE c0 END  WHEN c2 THEN ((c0)AND(c2)) END COLLATE RTRIM DESC,(((c0)) BETWEEN ((CAST(c1 AS INTEGER))) AND ((c1 COLLATE BINARY))) COLLATE NOCASE DESC); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.cache_spill = true; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA cache_spill = -1021524108226908294; -- 0ms;
ANALYZE i76; -- 3ms;
INSERT OR ROLLBACK INTO rt0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('-464946608', x'', '-231951453'); -- 0ms;
PRAGMA main.automatic_index; -- 0ms;
REINDEX i76; -- 0ms;
INSERT OR REPLACE INTO rt0(c0) VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0(c2, c0) VALUES (x'1631d251', NULL); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (x'', '-231951453', ''); -- 0ms;
INSERT OR ABORT INTO rt0(c2, c0, c1) VALUES (NULL, -1024421501, NULL); -- 0ms;
ANALYZE; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR ROLLBACK INTO t0(c1) VALUES (0X23254026), (x''), ('OF^Vlf?'); -- 0ms;
INSERT OR IGNORE INTO t0(c1) VALUES (NULL); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM t0, rt0;
SELECT ALL * FROM t0, rt0 WHERE (x'') UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE (((x'') ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT t0.c0, rt0.c0, rt0.c1, t0.c2, t0.c1 FROM rt0, t0;
SELECT DISTINCT t0.c0, rt0.c0, rt0.c1, t0.c2, t0.c1 FROM rt0, t0 WHERE (rt0.c2) UNION SELECT DISTINCT t0.c0, rt0.c0, rt0.c1, t0.c2, t0.c1 FROM rt0, t0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT t0.c0, rt0.c0, rt0.c1, t0.c2, t0.c1 FROM rt0, t0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT t0.c0, rt0.c0, rt0.c1, t0.c2, t0.c1 FROM rt0, t0;
SELECT ALL t0.c0, t0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, t0.c2, rt0.c0;
SELECT t0.c0, t0.c2, rt0.c0 FROM rt0, t0 WHERE (((rt0.c1) BETWEEN (((((0X54cd6120)AND(t0.c1)))OR(t0.c0))) AND ((NOT (rt0.c1))))) GROUP BY t0.c0, t0.c2, rt0.c0 UNION SELECT t0.c0, t0.c2, rt0.c0 FROM rt0, t0 WHERE ((NOT (((rt0.c1) BETWEEN (((((0X54cd6120)AND(t0.c1)))OR(t0.c0))) AND ((NOT (rt0.c1))))))) GROUP BY t0.c0, t0.c2, rt0.c0 UNION SELECT ALL t0.c0, t0.c2, rt0.c0 FROM rt0, t0 WHERE (((((rt0.c1) BETWEEN (((((0X54cd6120)AND(t0.c1)))OR(t0.c0))) AND ((NOT (rt0.c1))))) ISNULL)) GROUP BY t0.c0, t0.c2, rt0.c0;
SELECT ALL t0.c0, t0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, t0.c2, rt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((COUNT(MAX(MAX(t0.c1))), (((t0.c2))<>((COUNT(t0.c0)))), CASE WHEN MAX(t0.c1) THEN SUM(AVG(t0.c0)) ELSE t0.c1 END))<((TOTAL(t0.c1), NULL, CASE WHEN COUNT(t0.c2) THEN TOTAL(MAX(COUNT(*))) END))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((COUNT(MAX(MAX(t0.c1))), (((t0.c2))<>((COUNT(t0.c0)))), CASE WHEN MAX(t0.c1) THEN SUM(AVG(t0.c0)) ELSE t0.c1 END))<((TOTAL(t0.c1), NULL, CASE WHEN COUNT(t0.c2) THEN TOTAL(MAX(COUNT(*))) END))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((COUNT(MAX(MAX(t0.c1))), (((t0.c2))<>((COUNT(t0.c0)))), CASE WHEN MAX(t0.c1) THEN SUM(AVG(t0.c0)) ELSE t0.c1 END))<((TOTAL(t0.c1), NULL, CASE WHEN COUNT(t0.c2) THEN TOTAL(MAX(COUNT(*))) END)))) ISNULL);
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR('	i')))OR(rt0.c2))) BETWEEN ((rt0.c0 IN ())) AND (CASE WHEN rt0.c2 THEN rt0.c2 END))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR('	i')))OR(rt0.c2))) BETWEEN ((rt0.c0 IN ())) AND (CASE WHEN rt0.c2 THEN rt0.c2 END))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR('	i')))OR(rt0.c2))) BETWEEN ((rt0.c0 IN ())) AND (CASE WHEN rt0.c2 THEN rt0.c2 END))) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (CAST((rt0.c2 IN (t0.c2)) AS TEXT)) UNION SELECT DISTINCT * FROM rt0, t0 NOT INDEXED WHERE ((NOT (CAST((rt0.c2 IN (t0.c2)) AS TEXT)))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((CAST((rt0.c2 IN (t0.c2)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT t0.c1 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0 NATURAL JOIN rt0 WHERE (UPPER(DISTINCT rt0.c1 COLLATE NOCASE)) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 NATURAL JOIN rt0 WHERE ((NOT (UPPER(DISTINCT rt0.c1 COLLATE NOCASE)))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0 NATURAL JOIN rt0 WHERE (((UPPER(DISTINCT rt0.c1 COLLATE NOCASE)) ISNULL)) GROUP BY t0.c1;
SELECT t0.c1 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c1;
SELECT rt0.c0, t0.c2, rt0.c2, t0.c0, rt0.c1, t0.c1 FROM t0 INNER JOIN rt0 ON ((((((rt0.c1)OR(0Xffffffffc2f09183)))OR(t0.c0)))||((((rt0.c0)) BETWEEN ((t0.c1)) AND ((t0.c0))))) GROUP BY rt0.c0, t0.c2, rt0.c2, t0.c0, rt0.c1, t0.c1;
SELECT ALL rt0.c0, t0.c2, rt0.c2, t0.c0, rt0.c1, t0.c1 FROM t0 INNER JOIN rt0 ON ((((((rt0.c1)OR(0xffffffffc2f09183)))OR(t0.c0)))||((((rt0.c0)) BETWEEN ((t0.c1)) AND ((t0.c0))))) GROUP BY rt0.c0, t0.c2, rt0.c2, t0.c0, rt0.c1, t0.c1 HAVING SUM(GROUP_CONCAT(t0.c1)) UNION ALL SELECT ALL rt0.c0, t0.c2, rt0.c2, t0.c0, rt0.c1, t0.c1 FROM t0 INNER JOIN rt0 ON ((((((rt0.c1)OR(0xffffffffc2f09183)))OR(t0.c0)))||((((rt0.c0)) BETWEEN ((t0.c1)) AND ((t0.c0))))) GROUP BY rt0.c0, t0.c2, rt0.c2, t0.c0, rt0.c1, t0.c1 HAVING (NOT (SUM(GROUP_CONCAT(t0.c1)))) UNION ALL SELECT ALL rt0.c0, t0.c2, rt0.c2, t0.c0, rt0.c1, t0.c1 FROM t0 INNER JOIN rt0 ON ((((((rt0.c1)OR(0xffffffffc2f09183)))OR(t0.c0)))||((((rt0.c0)) BETWEEN ((t0.c1)) AND ((t0.c0))))) GROUP BY rt0.c0, t0.c2, rt0.c2, t0.c0, rt0.c1, t0.c1 HAVING ((SUM(GROUP_CONCAT(t0.c1))) ISNULL);
SELECT rt0.c1, t0.c1, t0.c0, t0.c2, rt0.c2, rt0.c0 FROM t0, rt0;
SELECT rt0.c1, t0.c1, t0.c0, t0.c2, rt0.c2, rt0.c0 FROM t0, rt0 WHERE (COALESCE(DISTINCT t0.c2, rt0.c1, rt0.c1, t0.c0) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c1, t0.c1, t0.c0, t0.c2, rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((NOT (COALESCE(DISTINCT t0.c2, rt0.c1, rt0.c1, t0.c0) COLLATE NOCASE))) UNION ALL SELECT rt0.c1, t0.c1, t0.c0, t0.c2, rt0.c2, rt0.c0 FROM t0, rt0 WHERE (((COALESCE(DISTINCT t0.c2, rt0.c1, rt0.c1, t0.c0) COLLATE NOCASE) ISNULL));
SELECT rt0.c1, t0.c1, t0.c0, t0.c2, rt0.c2, rt0.c0 FROM t0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (CASE ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0))  WHEN CAST(rt0.c1 AS BLOB) THEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) ELSE (rt0.c1 IN ()) END) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0))  WHEN CAST(rt0.c1 AS BLOB) THEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) ELSE (rt0.c1 IN ()) END))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0))  WHEN CAST(rt0.c1 AS BLOB) THEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) ELSE (rt0.c1 IN ()) END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE (t0.c2) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT (t0.c2))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((t0.c2) ISNULL)) GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL rt0.c0 FROM rt0, t0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, t0 GROUP BY rt0.c0 HAVING (((t0.c1) NOT BETWEEN (rt0.c1) AND (GROUP_CONCAT(NULL))) IN ()) UNION ALL SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0 HAVING (NOT ((((t0.c1) NOT BETWEEN (rt0.c1) AND (GROUP_CONCAT(NULL))) IN ()))) UNION ALL SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0 HAVING (((((t0.c1) NOT BETWEEN (rt0.c1) AND (GROUP_CONCAT(NULL))) IN ())) ISNULL);
SELECT ALL rt0.c0 FROM rt0, t0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, t0 GROUP BY rt0.c0 HAVING (((t0.c1) NOT BETWEEN (rt0.c1) AND (GROUP_CONCAT(NULL))) IN ()) UNION ALL SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0 HAVING (NOT ((((t0.c1) NOT BETWEEN (rt0.c1) AND (GROUP_CONCAT(NULL))) IN ()))) UNION ALL SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0 HAVING (((((t0.c1) NOT BETWEEN (rt0.c1) AND (GROUP_CONCAT(NULL))) IN ())) ISNULL);
SELECT ALL rt0.c0 FROM rt0, t0 GROUP BY rt0.c0;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (((((t0.c0)OR(t0.c2)))LIKE(CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c0)OR(t0.c2)))LIKE(CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END))))) UNION ALL SELECT * FROM t0 WHERE (((((((t0.c0)OR(t0.c2)))LIKE(CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (NULLIF(DISTINCT x'', CAST(t0.c2 AS BLOB))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (NULLIF(DISTINCT x'', CAST(t0.c2 AS BLOB))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((NULLIF(DISTINCT x'', CAST(t0.c2 AS BLOB))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM t0 WHERE ((+ (LIKELY(DISTINCT '-1420347434')))) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM t0 WHERE ((NOT ((+ (LIKELY(DISTINCT '-1420347434')))))) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM t0 WHERE ((((+ (LIKELY(DISTINCT '-1420347434')))) ISNULL)) GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING COUNT(COUNT(*)) UNION ALL SELECT rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE ((+ (rt0.c1)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT ((+ (rt0.c1)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((((+ (rt0.c1)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT t0.c0, rt0.c1, t0.c2, t0.c1, rt0.c0, rt0.c2 FROM t0 NOT INDEXED, rt0;
SELECT DISTINCT t0.c0, rt0.c1, t0.c2, t0.c1, rt0.c0, rt0.c2 FROM t0, rt0 WHERE (((CAST(t0.c1 AS REAL)) IS FALSE)) UNION SELECT DISTINCT t0.c0, rt0.c1, t0.c2, t0.c1, rt0.c0, rt0.c2 FROM t0, rt0 WHERE ((NOT (((CAST(t0.c1 AS REAL)) IS FALSE)))) UNION SELECT DISTINCT t0.c0, rt0.c1, t0.c2, t0.c1, rt0.c0, rt0.c2 FROM t0, rt0 WHERE (((((CAST(t0.c1 AS REAL)) IS FALSE)) ISNULL));
SELECT DISTINCT t0.c0, rt0.c1, t0.c2, t0.c1, rt0.c0, rt0.c2 FROM t0 NOT INDEXED, rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((((rt0.c0, rt0.c0, x''))>=((NULL, rt0.c1, x''))) COLLATE RTRIM) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0, rt0.c0, x''))>=((NULL, rt0.c1, x''))) COLLATE RTRIM))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((((rt0.c0, rt0.c0, x''))>=((NULL, rt0.c1, x''))) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING NULLIF(MAX(t0.c0), TRIM(-1121668181)) UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (NULLIF(MAX(t0.c0), TRIM(-1121668181)))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((NULLIF(MAX(t0.c0), TRIM(-1121668181))) ISNULL);
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING NULLIF(MAX(t0.c0), TRIM(-1121668181)) UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (NULLIF(MAX(t0.c0), TRIM(-1121668181)))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((NULLIF(MAX(t0.c0), TRIM(-1121668181))) ISNULL);
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL rt0.c2 FROM t0, rt0;
SELECT ALL rt0.c2 FROM t0, rt0 WHERE (CAST(DATETIME(rt0.c0, t0.c1, rt0.c0) AS BLOB)) UNION ALL SELECT ALL rt0.c2 FROM t0, rt0 WHERE ((NOT (CAST(DATETIME(rt0.c0, t0.c1, rt0.c0) AS BLOB)))) UNION ALL SELECT rt0.c2 FROM t0, rt0 WHERE (((CAST(DATETIME(rt0.c0, t0.c1, rt0.c0) AS BLOB)) ISNULL));
SELECT ALL rt0.c2 FROM t0, rt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CASE WHEN t0.c2 THEN ((x'2ce7')-(t0.c2)) WHEN CASE WHEN t0.c1 THEN x'' END THEN ((t0.c2) IS TRUE) WHEN t0.c0 COLLATE NOCASE THEN SQLITE_COMPILEOPTION_USED(t0.c1) ELSE x'' END) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CASE WHEN t0.c2 THEN ((x'2ce7')-(t0.c2)) WHEN CASE WHEN t0.c1 THEN x'' END THEN ((t0.c2) IS TRUE) WHEN t0.c0 COLLATE NOCASE THEN SQLITE_COMPILEOPTION_USED(t0.c1) ELSE x'' END))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CASE WHEN t0.c2 THEN ((x'2ce7')-(t0.c2)) WHEN CASE WHEN t0.c1 THEN x'' END THEN ((t0.c2) IS TRUE) WHEN t0.c0 COLLATE NOCASE THEN SQLITE_COMPILEOPTION_USED(t0.c1) ELSE x'' END) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM rt0, t0 WHERE (rt0.c1) GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM rt0, t0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c0 UNION SELECT rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM rt0, t0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c0;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING COUNT(*) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING COUNT(*) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (t0.c0) UNION ALL SELECT * FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (((t0.c0)-((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, t0.c2, t0.c2)) AND ((rt0.c0, rt0.c2, rt0.c0)))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (((t0.c0)-((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, t0.c2, t0.c2)) AND ((rt0.c0, rt0.c2, rt0.c0)))))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((((t0.c0)-((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, t0.c2, t0.c2)) AND ((rt0.c0, rt0.c2, rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt0.c0, t0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, t0.c2, t0.c0;
SELECT rt0.c0, t0.c2, t0.c0 FROM t0, rt0 WHERE ((((((('0.8130207845517118')OR(rt0.c2)))AND(t0.c1)))>=((~ (t0.c1))))) GROUP BY rt0.c0, t0.c2, t0.c0 UNION SELECT ALL rt0.c0, t0.c2, t0.c0 FROM t0, rt0 WHERE ((NOT ((((((('0.8130207845517118')OR(rt0.c2)))AND(t0.c1)))>=((~ (t0.c1))))))) GROUP BY rt0.c0, t0.c2, t0.c0 UNION SELECT rt0.c0, t0.c2, t0.c0 FROM t0, rt0 WHERE ((((((((('0.8130207845517118')OR(rt0.c2)))AND(t0.c1)))>=((~ (t0.c1))))) ISNULL)) GROUP BY rt0.c0, t0.c2, t0.c0;
SELECT ALL rt0.c0, t0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, t0.c2, t0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MAX(COUNT(MIN(GROUP_CONCAT(COUNT('11')))), rt0.c2))>(COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((MAX(COUNT(MIN(GROUP_CONCAT(COUNT('11')))), rt0.c2))>(COUNT(*))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((MAX(COUNT(MIN(GROUP_CONCAT(COUNT('11')))), rt0.c2))>(COUNT(*)))) ISNULL);
SELECT MAX(((((rt0.c2) NOTNULL))<((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c0)))))) FROM t0, rt0;
SELECT t0.c2, rt0.c2, t0.c0, rt0.c0 FROM rt0, t0;
SELECT ALL t0.c2, rt0.c2, t0.c0, rt0.c0 FROM rt0, t0 WHERE ((NOT (TRIM(rt0.c2, t0.c0)))) UNION ALL SELECT ALL t0.c2, rt0.c2, t0.c0, rt0.c0 FROM rt0, t0 WHERE ((NOT ((NOT (TRIM(rt0.c2, t0.c0)))))) UNION ALL SELECT ALL t0.c2, rt0.c2, t0.c0, rt0.c0 FROM rt0, t0 WHERE ((((NOT (TRIM(rt0.c2, t0.c0)))) ISNULL));
SELECT t0.c2, rt0.c2, t0.c0, rt0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((((rt0.c1) IS TRUE))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 NOT INDEXED WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((((rt0.c1) IS TRUE))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((((rt0.c1) IS TRUE))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL t0.c0, rt0.c0, rt0.c2, t0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c2, t0.c2;
SELECT t0.c0, rt0.c0, rt0.c2, t0.c2 FROM t0, rt0 WHERE ((NOT (((t0.c1)&(t0.c0))))) GROUP BY t0.c0, rt0.c0, rt0.c2, t0.c2 UNION SELECT ALL t0.c0, rt0.c0, rt0.c2, t0.c2 FROM t0, rt0 WHERE ((NOT ((NOT (((t0.c1)&(t0.c0))))))) GROUP BY t0.c0, rt0.c0, rt0.c2, t0.c2 UNION SELECT ALL t0.c0, rt0.c0, rt0.c2, t0.c2 FROM t0, rt0 WHERE ((((NOT (((t0.c1)&(t0.c0))))) ISNULL)) GROUP BY t0.c0, rt0.c0, rt0.c2, t0.c2;
SELECT ALL t0.c0, rt0.c0, rt0.c2, t0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c2, t0.c2;
SELECT ALL t0.c2 FROM t0, rt0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0, rt0 GROUP BY t0.c2 HAVING ((((t0.c0)IS(rt0.c2))) BETWEEN (GROUP_CONCAT(MIN(COUNT(t0.c0)))) AND (((SUM(t0.c0))>(t0.c1)))) UNION ALL SELECT t0.c2 FROM t0, rt0 GROUP BY t0.c2 HAVING (NOT (((((t0.c0)IS(rt0.c2))) BETWEEN (GROUP_CONCAT(MIN(COUNT(t0.c0)))) AND (((SUM(t0.c0))>(t0.c1)))))) UNION ALL SELECT t0.c2 FROM t0, rt0 GROUP BY t0.c2 HAVING ((((((t0.c0)IS(rt0.c2))) BETWEEN (GROUP_CONCAT(MIN(COUNT(t0.c0)))) AND (((SUM(t0.c0))>(t0.c1))))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((DATE(t0.c0, t0.c2, t0.c2, t0.c2, '23520921', t0.c1, -1.7976931348623157E308) IN ())) UNION ALL SELECT * FROM t0 WHERE ((NOT ((DATE(t0.c0, t0.c2, t0.c2, t0.c2, '23520921', t0.c1, -1.7976931348623157E308) IN ())))) UNION ALL SELECT ALL * FROM t0 WHERE ((((DATE(t0.c0, t0.c2, t0.c2, t0.c2, '23520921', t0.c1, -1.7976931348623157E308) IN ())) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t0.c2, rt0.c0, rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY t0.c2, rt0.c0, rt0.c1, t0.c0, rt0.c2;
SELECT t0.c2, rt0.c0, rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 WHERE (x'') GROUP BY t0.c2, rt0.c0, rt0.c1, t0.c0, rt0.c2 UNION SELECT ALL t0.c2, rt0.c0, rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 WHERE ((NOT (x''))) GROUP BY t0.c2, rt0.c0, rt0.c1, t0.c0, rt0.c2 UNION SELECT t0.c2, rt0.c0, rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 WHERE (((x'') ISNULL)) GROUP BY t0.c2, rt0.c0, rt0.c1, t0.c0, rt0.c2;
SELECT t0.c2, rt0.c0, rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY t0.c2, rt0.c0, rt0.c1, t0.c0, rt0.c2;
SELECT ALL rt0.c0 FROM t0 CROSS JOIN rt0 ON ((x'cd3d' COLLATE NOCASE) BETWEEN (NULL) AND (((((((((t0.c0)OR(t0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))) GROUP BY rt0.c0;
SELECT rt0.c0 FROM t0 CROSS JOIN rt0 ON ((x'cd3d' COLLATE NOCASE) BETWEEN (NULL) AND (((((((((t0.c0)OR(t0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))) GROUP BY rt0.c0 HAVING AVG(LIKELY(rt0.c0)) UNION ALL SELECT ALL rt0.c0 FROM t0 CROSS JOIN rt0 ON ((x'cd3d' COLLATE NOCASE) BETWEEN (NULL) AND (((((((((t0.c0)OR(t0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))) GROUP BY rt0.c0 HAVING (NOT (AVG(LIKELY(rt0.c0)))) UNION ALL SELECT rt0.c0 FROM t0 CROSS JOIN rt0 ON ((x'cd3d' COLLATE NOCASE) BETWEEN (NULL) AND (((((((((t0.c0)OR(t0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))) GROUP BY rt0.c0 HAVING ((AVG(LIKELY(rt0.c0))) ISNULL);
SELECT ALL rt0.c0 FROM t0 CROSS JOIN rt0 ON ((x'cd3d' COLLATE NOCASE) BETWEEN (NULL) AND (((((((((t0.c0)OR(t0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))) GROUP BY rt0.c0;
SELECT rt0.c0 FROM t0 CROSS JOIN rt0 ON ((x'cd3d' COLLATE NOCASE) BETWEEN (NULL) AND (((((((((t0.c0)OR(t0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))) GROUP BY rt0.c0 HAVING AVG(LIKELY(rt0.c0)) UNION ALL SELECT ALL rt0.c0 FROM t0 CROSS JOIN rt0 ON ((x'cd3d' COLLATE NOCASE) BETWEEN (NULL) AND (((((((((t0.c0)OR(t0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))) GROUP BY rt0.c0 HAVING (NOT (AVG(LIKELY(rt0.c0)))) UNION ALL SELECT rt0.c0 FROM t0 CROSS JOIN rt0 ON ((x'cd3d' COLLATE NOCASE) BETWEEN (NULL) AND (((((((((t0.c0)OR(t0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))) GROUP BY rt0.c0 HAVING ((AVG(LIKELY(rt0.c0))) ISNULL);
SELECT ALL rt0.c0 FROM t0 CROSS JOIN rt0 ON ((x'cd3d' COLLATE NOCASE) BETWEEN (NULL) AND (((((((((t0.c0)OR(t0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))) GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c2, t0.c0, t0.c2 FROM t0, rt0;
SELECT rt0.c0, rt0.c2, t0.c0, t0.c2 FROM t0, rt0 WHERE (((((rt0.c0)OR(t0.c2))) IS TRUE)) UNION ALL SELECT rt0.c0, rt0.c2, t0.c0, t0.c2 FROM t0, rt0 WHERE ((NOT (((((rt0.c0)OR(t0.c2))) IS TRUE)))) UNION ALL SELECT rt0.c0, rt0.c2, t0.c0, t0.c2 FROM t0, rt0 WHERE (((((((rt0.c0)OR(t0.c2))) IS TRUE)) ISNULL));
SELECT ALL rt0.c0, rt0.c2, t0.c0, t0.c2 FROM t0, rt0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0, rt0.c1, rt0.c0 FROM rt0, t0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0, rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((rt0.c1 IN ()) COLLATE BINARY) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0, rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((NOT ((rt0.c1 IN ()) COLLATE BINARY))) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0, rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((((rt0.c1 IN ()) COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c2, t0.c1, t0.c0, rt0.c1, rt0.c0 FROM rt0, t0;
SELECT ALL t0.c1, t0.c2 FROM rt0, t0 GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM rt0, t0 WHERE ((((t0.c1)) BETWEEN ((((((rt0.c0)OR(0.18038428556197483)))AND(2124571440)))) AND ((CAST(rt0.c1 AS BLOB))))) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM rt0, t0 WHERE ((NOT ((((t0.c1)) BETWEEN ((((((rt0.c0)OR(0.18038428556197483)))AND(2124571440)))) AND ((CAST(rt0.c1 AS BLOB))))))) GROUP BY t0.c1, t0.c2 UNION SELECT t0.c1, t0.c2 FROM rt0, t0 WHERE ((((((t0.c1)) BETWEEN ((((((rt0.c0)OR(0.18038428556197483)))AND(2124571440)))) AND ((CAST(rt0.c1 AS BLOB))))) ISNULL)) GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM rt0, t0 GROUP BY t0.c1, t0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2 HAVING CAST(rt0.c1 AS TEXT) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (CAST(rt0.c1 AS TEXT))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2 HAVING ((CAST(rt0.c1 AS TEXT)) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2 HAVING CAST(rt0.c1 AS TEXT) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (CAST(rt0.c1 AS TEXT))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2 HAVING ((CAST(rt0.c1 AS TEXT)) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((((t0.c2)AND('-1121668181'))) NOT NULL)) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((t0.c2)AND('-1121668181'))) NOT NULL)))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((t0.c2)AND('-1121668181'))) NOT NULL)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt0.c2 FROM rt0, t0;
SELECT DISTINCT rt0.c2 FROM rt0, t0 WHERE (rt0.c1 COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2 FROM rt0, t0 WHERE ((NOT (rt0.c1 COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2 FROM rt0, t0 WHERE (((rt0.c1 COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0, t0;
SELECT ALL t0.c1, rt0.c2, t0.c2, rt0.c0, t0.c0 FROM rt0, t0 GROUP BY t0.c1, rt0.c2, t0.c2, rt0.c0, t0.c0;
SELECT t0.c1, rt0.c2, t0.c2, rt0.c0, t0.c0 FROM rt0, t0 WHERE (((((t0.c0)<=(rt0.c1))) BETWEEN ((((t0.c1))<=((rt0.c1)))) AND ((t0.c2 IN (rt0.c1))))) GROUP BY t0.c1, rt0.c2, t0.c2, rt0.c0, t0.c0 UNION SELECT ALL t0.c1, rt0.c2, t0.c2, rt0.c0, t0.c0 FROM rt0, t0 WHERE ((NOT (((((t0.c0)<=(rt0.c1))) BETWEEN ((((t0.c1))<=((rt0.c1)))) AND ((t0.c2 IN (rt0.c1))))))) GROUP BY t0.c1, rt0.c2, t0.c2, rt0.c0, t0.c0 UNION SELECT ALL t0.c1, rt0.c2, t0.c2, rt0.c0, t0.c0 FROM rt0, t0 WHERE (((((((t0.c0)<=(rt0.c1))) BETWEEN ((((t0.c1))<=((rt0.c1)))) AND ((t0.c2 IN (rt0.c1))))) ISNULL)) GROUP BY t0.c1, rt0.c2, t0.c2, rt0.c0, t0.c0;
SELECT ALL t0.c1, rt0.c2, t0.c2, rt0.c0, t0.c0 FROM rt0, t0 GROUP BY t0.c1, rt0.c2, t0.c2, rt0.c0, t0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c1 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c1 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c1 HAVING t0.c2 UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c1 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c1 HAVING (NOT (t0.c2)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, t0.c1 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c1 HAVING ((t0.c2) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c1 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c1 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c1 HAVING t0.c2 UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c1 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c1 HAVING (NOT (t0.c2)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, t0.c1 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c1 HAVING ((t0.c2) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c1 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c1;
SELECT rt0.c2, t0.c2, rt0.c1 FROM t0, rt0;
SELECT ALL rt0.c2, t0.c2, rt0.c1 FROM t0, rt0 WHERE (t0.c0) UNION ALL SELECT rt0.c2, t0.c2, rt0.c1 FROM t0, rt0 WHERE ((NOT (t0.c0))) UNION ALL SELECT rt0.c2, t0.c2, rt0.c1 FROM t0, rt0 WHERE (((t0.c0) ISNULL));
SELECT rt0.c2, t0.c2, rt0.c1 FROM t0, rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((NULL) NOTNULL)) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((NULL) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((NULL) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN (+ (rt0.c0)) WHEN rt0.c1 THEN (NOT (rt0.c2)) WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)) THEN CAST(rt0.c2 AS TEXT) ELSE (rt0.c0 IN (rt0.c2)) END) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN (+ (rt0.c0)) WHEN rt0.c1 THEN (NOT (rt0.c2)) WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)) THEN CAST(rt0.c2 AS TEXT) ELSE (rt0.c0 IN (rt0.c2)) END))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN (+ (rt0.c0)) WHEN rt0.c1 THEN (NOT (rt0.c2)) WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)) THEN CAST(rt0.c2 AS TEXT) ELSE (rt0.c0 IN (rt0.c2)) END) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING GROUP_CONCAT(NULLIF(t0.c1, rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(NULLIF(t0.c1, rt0.c0)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(NULLIF(t0.c1, rt0.c0))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING GROUP_CONCAT(NULLIF(t0.c1, rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(NULLIF(t0.c1, rt0.c0)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(NULLIF(t0.c1, rt0.c0))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((((((t0.c1)=(t0.c1))))<=(((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((((t0.c1)=(t0.c1))))<=(((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((((t0.c1)==(t0.c1))))<=(((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0, t0.c2 FROM t0, rt0;
SELECT DISTINCT t0.c0, t0.c2 FROM t0, rt0 WHERE (((((rt0.c0) NOTNULL))GLOB(((t0.c0)IS(rt0.c2))))) UNION SELECT DISTINCT t0.c0, t0.c2 FROM t0, rt0 WHERE ((NOT (((((rt0.c0) NOTNULL))GLOB(((t0.c0)IS(rt0.c2))))))) UNION SELECT DISTINCT t0.c0, t0.c2 FROM t0, rt0 WHERE (((((((rt0.c0) NOTNULL))GLOB(((t0.c0)IS(rt0.c2))))) ISNULL));
SELECT DISTINCT t0.c0, t0.c2 FROM t0, rt0;
SELECT rt0.c1, t0.c2, t0.c1 FROM rt0 FULL OUTER JOIN t0 ON ((LOWER(t0.c2))>>((NOT (t0.c0)))) GROUP BY rt0.c1, t0.c2, t0.c1;
SELECT rt0.c1, t0.c2, t0.c1 FROM rt0 FULL OUTER JOIN t0 ON ((LOWER(t0.c2))>>((NOT (t0.c0)))) WHERE (((((((((((t0.c2)GLOB(rt0.c0)))AND(((rt0.c0)+(rt0.c0)))))OR(rt0.c0 COLLATE NOCASE)))AND(CAST(t0.c0 AS INTEGER))))OR(((t0.c2) IS TRUE)))) GROUP BY rt0.c1, t0.c2, t0.c1 UNION SELECT rt0.c1, t0.c2, t0.c1 FROM rt0 FULL OUTER JOIN t0 ON ((LOWER(t0.c2))>>((NOT (t0.c0)))) WHERE ((NOT (((((((((((t0.c2)GLOB(rt0.c0)))AND(((rt0.c0)+(rt0.c0)))))OR(rt0.c0 COLLATE NOCASE)))AND(CAST(t0.c0 AS INTEGER))))OR(((t0.c2) IS TRUE)))))) GROUP BY rt0.c1, t0.c2, t0.c1 UNION SELECT ALL rt0.c1, t0.c2, t0.c1 FROM rt0 FULL OUTER JOIN t0 ON ((LOWER(t0.c2))>>((NOT (t0.c0)))) WHERE (((((((((((((t0.c2)GLOB(rt0.c0)))AND(((rt0.c0)+(rt0.c0)))))OR(rt0.c0 COLLATE NOCASE)))AND(CAST(t0.c0 AS INTEGER))))OR(((t0.c2) IS TRUE)))) ISNULL)) GROUP BY rt0.c1, t0.c2, t0.c1;
SELECT rt0.c1, t0.c2, t0.c1 FROM rt0 FULL OUTER JOIN t0 ON ((LOWER(t0.c2))>>((NOT (t0.c0)))) GROUP BY rt0.c1, t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING SUM(NULLIF(SUM(MAX(AVG(GROUP_CONCAT(MAX(SUM(MAX(t0.c2))))))), MAX(t0.c0))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING (NOT (SUM(NULLIF(SUM(MAX(AVG(GROUP_CONCAT(MAX(SUM(MAX(t0.c2))))))), MAX(t0.c0))))) UNION ALL SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING ((SUM(NULLIF(SUM(MAX(AVG(GROUP_CONCAT(MAX(SUM(MAX(t0.c2))))))), MAX(t0.c0)))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1) IS FALSE))OR('	' COLLATE BINARY)))AND(((((((((0.24656011381646603)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((((rt0.c1) IS FALSE))OR('	' COLLATE BINARY)))AND(((((((((0.24656011381646603)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((rt0.c1) IS FALSE))OR('	' COLLATE BINARY)))AND(((((((((0.24656011381646603)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT ALL rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON (((t0.c2)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((''))) GROUP BY rt0.c1;
SELECT rt0.c1 FROM t0 NOT INDEXED LEFT OUTER JOIN rt0 ON (((t0.c2)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((''))) WHERE (CASE (- ('-671287661'))  WHEN ((t0.c0) IS FALSE) THEN CAST(rt0.c0 AS REAL) WHEN rt0.c2 COLLATE BINARY THEN ('1432728015' IN ()) WHEN ((rt0.c2) NOT NULL) THEN rt0.c1 END) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON (((t0.c2)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((''))) WHERE ((NOT (CASE (- ('-671287661'))  WHEN ((t0.c0) IS FALSE) THEN CAST(rt0.c0 AS REAL) WHEN rt0.c2 COLLATE BINARY THEN ('1432728015' IN ()) WHEN ((rt0.c2) NOT NULL) THEN rt0.c1 END))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON (((t0.c2)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((''))) WHERE (((CASE (- ('-671287661'))  WHEN ((t0.c0) IS FALSE) THEN CAST(rt0.c0 AS REAL) WHEN rt0.c2 COLLATE BINARY THEN ('1432728015' IN ()) WHEN ((rt0.c2) NOT NULL) THEN rt0.c1 END) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON (((t0.c2)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((''))) GROUP BY rt0.c1;
SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2 HAVING (((CASE t0.c1  WHEN NULL THEN MIN(MAX(TOTAL(GROUP_CONCAT(MAX(x'59b2'))))) END))>=(('1191852342'))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2 HAVING (NOT ((((CASE t0.c1  WHEN NULL THEN MIN(MAX(TOTAL(GROUP_CONCAT(MAX(x'59b2'))))) END))>=(('1191852342'))))) UNION ALL SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2 HAVING (((((CASE t0.c1  WHEN NULL THEN MIN(MAX(TOTAL(GROUP_CONCAT(MAX(x'59b2'))))) END))>=(('1191852342')))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE WHEN UNLIKELY(DISTINCT rt0.c0) THEN rt0.c2 COLLATE RTRIM END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE WHEN UNLIKELY(DISTINCT rt0.c0) THEN rt0.c2 COLLATE RTRIM END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN UNLIKELY(DISTINCT rt0.c0) THEN rt0.c2 COLLATE RTRIM END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ((((((rt0.c2))>=((rt0.c2))))+((('YtN|')IS(t0.c1))))) UNION SELECT DISTINCT * FROM t0 NOT INDEXED, rt0 WHERE ((NOT ((((((rt0.c2))>=((rt0.c2))))+((('YtN|')IS(t0.c1))))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((((((((rt0.c2))>=((rt0.c2))))+((('YtN|')IS(t0.c1))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM t0, rt0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((((rt0.c0)||(rt0.c2)))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM t0, rt0 WHERE ((NOT ((((rt0.c0)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((((rt0.c0)||(rt0.c2)))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM t0, rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((((rt0.c0)||(rt0.c2)))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(TOTAL(SUM(t0.c1))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(TOTAL(SUM(t0.c1))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(TOTAL(SUM(t0.c1)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((- (rt0.c0)))-((+ (rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((- (rt0.c0)))-((+ (rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((- (rt0.c0)))-((+ (rt0.c0))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (0.003400842306626628) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (0.003400842306626628))) UNION SELECT DISTINCT * FROM t0 WHERE (((0.003400842306626628) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, t0.c2, t0.c0, t0.c1 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c2, t0.c0, t0.c1;
SELECT rt0.c0, rt0.c1, rt0.c2, t0.c2, t0.c0, t0.c1 FROM t0 NATURAL JOIN rt0 WHERE ((((rt0.c2 IN ())) IS FALSE)) GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c2, t0.c0, t0.c1 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, t0.c2, t0.c0, t0.c1 FROM t0 NATURAL JOIN rt0 WHERE ((NOT ((((rt0.c2 IN ())) IS FALSE)))) GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c2, t0.c0, t0.c1 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, t0.c2, t0.c0, t0.c1 FROM t0 NATURAL JOIN rt0 WHERE ((((((rt0.c2 IN ())) IS FALSE)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c2, t0.c0, t0.c1;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, t0.c2, t0.c0, t0.c1 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, t0.c2, t0.c0, t0.c1;
SELECT t0.c0, rt0.c0, rt0.c1, t0.c1, rt0.c2 FROM rt0, t0 GROUP BY t0.c0, rt0.c0, rt0.c1, t0.c1, rt0.c2;
SELECT t0.c0, rt0.c0, rt0.c1, t0.c1, rt0.c2 FROM rt0, t0 GROUP BY t0.c0, rt0.c0, rt0.c1, t0.c1, rt0.c2 HAVING ((MAX(TOTAL(COUNT(t0.c0))))<(CAST(GROUP_CONCAT(AVG(x'')) AS INTEGER))) UNION ALL SELECT ALL t0.c0, rt0.c0, rt0.c1, t0.c1, rt0.c2 FROM rt0, t0 GROUP BY t0.c0, rt0.c0, rt0.c1, t0.c1, rt0.c2 HAVING (NOT (((MAX(TOTAL(COUNT(t0.c0))))<(CAST(GROUP_CONCAT(AVG(x'')) AS INTEGER))))) UNION ALL SELECT ALL t0.c0, rt0.c0, rt0.c1, t0.c1, rt0.c2 FROM rt0, t0 GROUP BY t0.c0, rt0.c0, rt0.c1, t0.c1, rt0.c2 HAVING ((((MAX(TOTAL(COUNT(t0.c0))))<(CAST(GROUP_CONCAT(AVG(x'')) AS INTEGER)))) ISNULL);
SELECT t0.c1, t0.c0 FROM t0;
SELECT t0.c1, t0.c0 FROM t0 WHERE (UNLIKELY(DISTINCT UPPER(DISTINCT x''))) UNION ALL SELECT t0.c1, t0.c0 FROM t0 WHERE ((NOT (UNLIKELY(DISTINCT UPPER(DISTINCT x''))))) UNION ALL SELECT t0.c1, t0.c0 FROM t0 WHERE (((UNLIKELY(DISTINCT UPPER(DISTINCT x''))) ISNULL));
SELECT t0.c1, t0.c0 FROM t0;
SELECT DISTINCT t0.c0, t0.c2 FROM t0;
SELECT DISTINCT t0.c0, t0.c2 FROM t0 WHERE ((NOT (CASE WHEN 0xffffffffff7259ff THEN t0.c2 ELSE t0.c0 END))) UNION SELECT DISTINCT t0.c0, t0.c2 FROM t0 WHERE ((NOT ((NOT (CASE WHEN 0xffffffffff7259ff THEN t0.c2 ELSE t0.c0 END))))) UNION SELECT DISTINCT t0.c0, t0.c2 FROM t0 WHERE ((((NOT (CASE WHEN 0Xffffffffff7259ff THEN t0.c2 ELSE t0.c0 END))) ISNULL));
SELECT DISTINCT t0.c0, t0.c2 FROM t0;
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 WHERE (LOWER(DISTINCT (+ (t0.c2)))) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM t0 WHERE ((NOT (LOWER(DISTINCT (+ (t0.c2)))))) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM t0 WHERE (((LOWER(DISTINCT (+ (t0.c2)))) ISNULL)) GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT ALL * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE (t0.c0) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM rt0, t0 WHERE (((t0.c0) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 NOT INDEXED;
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((IFNULL(t0.c2, t0.c2))OR(((((t0.c0)OR(t0.c2)))AND(t0.c2))))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT (((IFNULL(t0.c2, t0.c2))OR(((((t0.c0)OR(t0.c2)))AND(t0.c2))))))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((((IFNULL(t0.c2, t0.c2))OR(((((t0.c0)OR(t0.c2)))AND(t0.c2))))) ISNULL));
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 NOT INDEXED;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0, t0 WHERE (0.42885260038669126) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0, t0 WHERE ((NOT (0.42885260038669126))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0, t0 WHERE (((0.42885260038669126) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING TOTAL(COUNT(SUM(rt0.c0))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (TOTAL(COUNT(SUM(rt0.c0))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((TOTAL(COUNT(SUM(rt0.c0)))) ISNULL);
SELECT ALL t0.c2, rt0.c1 FROM t0, rt0;
SELECT t0.c2, rt0.c1 FROM t0, rt0 WHERE (x'') UNION ALL SELECT t0.c2, rt0.c1 FROM t0, rt0 WHERE ((NOT (x''))) UNION ALL SELECT ALL t0.c2, rt0.c1 FROM t0, rt0 WHERE (((x'') ISNULL));
SELECT ALL t0.c2, rt0.c1 FROM t0, rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END IN ())) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END IN ())))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END IN ())) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM t0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM t0, rt0 WHERE (((t0.c1 COLLATE RTRIM) NOTNULL)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM t0, rt0 WHERE ((NOT (((t0.c1 COLLATE RTRIM) NOTNULL)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM t0, rt0 WHERE (((((t0.c1 COLLATE RTRIM) NOTNULL)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM t0, rt0 GROUP BY rt0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING ((((((((((TOTAL(MAX(t0.c1)))AND(t0.c0)))AND(GROUP_CONCAT(TOTAL(MAX(t0.c2))))))AND(t0.c2)))OR(t0.c1))) ISNULL) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING (NOT (((((((((((TOTAL(MAX(t0.c1)))AND(t0.c0)))AND(GROUP_CONCAT(TOTAL(MAX(t0.c2))))))AND(t0.c2)))OR(t0.c1))) ISNULL))) UNION ALL SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING ((((((((((((TOTAL(MAX(t0.c1)))AND(t0.c0)))AND(GROUP_CONCAT(TOTAL(MAX(t0.c2))))))AND(t0.c2)))OR(t0.c1))) ISNULL)) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (CASE WHEN '1432728015' THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(NULL)))OR(rt0.c2)) END) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN '1432728015' THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(NULL)))OR(rt0.c2)) END))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE WHEN '1432728015' THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(NULL)))OR(rt0.c2)) END) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM)OR(((rt0.c2) NOT NULL))))AND(rt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0 COLLATE RTRIM)OR(((rt0.c2) NOT NULL))))AND(rt0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c0 COLLATE RTRIM)OR(((rt0.c2) NOT NULL))))AND(rt0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 WHERE (CAST('8c' AS BLOB) COLLATE RTRIM) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((NOT (CAST('8c' AS BLOB) COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 WHERE (((CAST('8c' AS BLOB) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c0, t0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c1, rt0.c2;
SELECT rt0.c0, t0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c0, t0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, t0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, t0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c1, rt0.c2;
SELECT rt0.c0, t0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c0, t0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, t0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, t0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c1, rt0.c2;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c2) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((((rt0.c0) NOT NULL))||(t0.c1 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((((rt0.c0) NOT NULL))||(t0.c1 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((((rt0.c0) NOT NULL))||(t0.c1 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((NOT (rt0.c0)))%(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((NOT (rt0.c0)))%(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((((((NOT (rt0.c0)))%(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0, t0.c2, rt0.c2 FROM t0 CROSS JOIN rt0 ON (((~ (x'')))/(((t0.c2)||(t0.c0)))) GROUP BY rt0.c0, t0.c2, rt0.c2;
SELECT ALL rt0.c0, t0.c2, rt0.c2 FROM t0 CROSS JOIN rt0 ON (((~ (x'')))/(((t0.c2)||(t0.c0)))) GROUP BY rt0.c0, t0.c2, rt0.c2 HAVING SUM(MAX(MAX(COUNT(*)))) UNION ALL SELECT ALL rt0.c0, t0.c2, rt0.c2 FROM t0 CROSS JOIN rt0 ON (((~ (x'')))/(((t0.c2)||(t0.c0)))) GROUP BY rt0.c0, t0.c2, rt0.c2 HAVING (NOT (SUM(MAX(MAX(COUNT(*)))))) UNION ALL SELECT ALL rt0.c0, t0.c2, rt0.c2 FROM t0 CROSS JOIN rt0 ON (((~ (x'')))/(((t0.c2)||(t0.c0)))) GROUP BY rt0.c0, t0.c2, rt0.c2 HAVING ((SUM(MAX(MAX(COUNT(*))))) ISNULL);
SELECT t0.c2, rt0.c2, rt0.c0 FROM rt0, t0;
SELECT t0.c2, rt0.c2, rt0.c0 FROM rt0, t0 WHERE ((((((rt0.c1)!=(rt0.c1))))>((0.8733671312733613)))) UNION ALL SELECT t0.c2, rt0.c2, rt0.c0 FROM rt0, t0 WHERE ((NOT ((((((rt0.c1)<>(rt0.c1))))>((0.8733671312733613)))))) UNION ALL SELECT t0.c2, rt0.c2, rt0.c0 FROM rt0, t0 WHERE ((((((((rt0.c1)<>(rt0.c1))))>((0.8733671312733613)))) ISNULL));
SELECT t0.c2, rt0.c2, rt0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c0)%(rt0.c1)) IN (CAST(rt0.c0 AS REAL)))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0)%(rt0.c1)) IN (CAST(rt0.c0 AS REAL)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c0)%(rt0.c1)) IN (CAST(rt0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((rt0.c2) NOT NULL))+(CAST(rt0.c0 AS REAL)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2) NOT NULL))+(CAST(rt0.c0 AS REAL)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((((rt0.c2) NOT NULL))+(CAST(rt0.c0 AS REAL)))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, t0.c2, t0.c1, rt0.c1 FROM rt0 CROSS JOIN t0 ON (((rt0.c2)<(rt0.c0)) IN ()) GROUP BY rt0.c2, t0.c2, t0.c1, rt0.c1;
SELECT ALL rt0.c2, t0.c2, t0.c1, rt0.c1 FROM rt0 CROSS JOIN t0 ON (((rt0.c2)<(rt0.c0)) IN ()) GROUP BY rt0.c2, t0.c2, t0.c1, rt0.c1 HAVING ((COUNT(*))>('')) UNION ALL SELECT rt0.c2, t0.c2, t0.c1, rt0.c1 FROM rt0 CROSS JOIN t0 ON (((rt0.c2)<(rt0.c0)) IN ()) GROUP BY rt0.c2, t0.c2, t0.c1, rt0.c1 HAVING (NOT (((COUNT(*))>('')))) UNION ALL SELECT rt0.c2, t0.c2, t0.c1, rt0.c1 FROM rt0 CROSS JOIN t0 ON (((rt0.c2)<(rt0.c0)) IN ()) GROUP BY rt0.c2, t0.c2, t0.c1, rt0.c1 HAVING ((((COUNT(*))>(''))) ISNULL);
SELECT rt0.c2, t0.c2, t0.c1, rt0.c1 FROM rt0 CROSS JOIN t0 ON (((rt0.c2)<(rt0.c0)) IN ()) GROUP BY rt0.c2, t0.c2, t0.c1, rt0.c1;
SELECT ALL rt0.c2, t0.c2, t0.c1, rt0.c1 FROM rt0 CROSS JOIN t0 ON (((rt0.c2)<(rt0.c0)) IN ()) GROUP BY rt0.c2, t0.c2, t0.c1, rt0.c1 HAVING ((COUNT(*))>('')) UNION ALL SELECT rt0.c2, t0.c2, t0.c1, rt0.c1 FROM rt0 CROSS JOIN t0 ON (((rt0.c2)<(rt0.c0)) IN ()) GROUP BY rt0.c2, t0.c2, t0.c1, rt0.c1 HAVING (NOT (((COUNT(*))>('')))) UNION ALL SELECT rt0.c2, t0.c2, t0.c1, rt0.c1 FROM rt0 CROSS JOIN t0 ON (((rt0.c2)<(rt0.c0)) IN ()) GROUP BY rt0.c2, t0.c2, t0.c1, rt0.c1 HAVING ((((COUNT(*))>(''))) ISNULL);
SELECT rt0.c2, t0.c2, t0.c1, rt0.c1 FROM rt0 CROSS JOIN t0 ON (((rt0.c2)<(rt0.c0)) IN ()) GROUP BY rt0.c2, t0.c2, t0.c1, rt0.c1;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((((((((NULL))>((t0.c2))))AND(((((t0.c1)OR(0.9945869012399822)))AND(t0.c0)))))AND((('')OR(t0.c2))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((((((NULL))>((t0.c2))))AND(((((t0.c1)OR(0.9945869012399822)))AND(t0.c0)))))AND((('')OR(t0.c2))))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((((((NULL))>((t0.c2))))AND(((((t0.c1)OR(0.9945869012399822)))AND(t0.c0)))))AND((('')OR(t0.c2))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((((t0.c0) IS FALSE)) NOT BETWEEN (t0.c1) AND (NULL))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((((t0.c0) IS FALSE)) NOT BETWEEN (t0.c1) AND (NULL))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((((t0.c0) IS FALSE)) NOT BETWEEN (t0.c1) AND (NULL))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((((x'3971' IN ()))OR((rt0.c1 IN ()))))OR(rt0.c1 COLLATE RTRIM)))OR((NOT (rt0.c1)))))AND(((rt0.c2) NOTNULL)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((((((((x'3971' IN ()))OR((rt0.c1 IN ()))))OR(rt0.c1 COLLATE RTRIM)))OR((NOT (rt0.c1)))))AND(((rt0.c2) NOTNULL)))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((((((x'3971' IN ()))OR((rt0.c1 IN ()))))OR(rt0.c1 COLLATE RTRIM)))OR((NOT (rt0.c1)))))AND(((rt0.c2) NOTNULL)))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((COALESCE(MAX(''), AVG(rt0.c1)))%(NULL)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((COALESCE(MAX(''), AVG(rt0.c1)))%(NULL)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((COALESCE(MAX(''), AVG(rt0.c1)))%(NULL))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((COALESCE(MAX(''), AVG(rt0.c1)))%(NULL)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((COALESCE(MAX(''), AVG(rt0.c1)))%(NULL)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((COALESCE(MAX(''), AVG(rt0.c1)))%(NULL))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, t0.c2, rt0.c1, t0.c0 FROM rt0, t0;
SELECT rt0.c0, t0.c2, rt0.c1, t0.c0 FROM rt0, t0 WHERE (((((((rt0.c1) NOTNULL))OR(((t0.c0) BETWEEN (rt0.c2) AND (t0.c0)))))OR(((rt0.c1)-(t0.c1))))) UNION ALL SELECT ALL rt0.c0, t0.c2, rt0.c1, t0.c0 FROM rt0, t0 WHERE ((NOT (((((((rt0.c1) NOTNULL))OR(((t0.c0) BETWEEN (rt0.c2) AND (t0.c0)))))OR(((rt0.c1)-(t0.c1))))))) UNION ALL SELECT rt0.c0, t0.c2, rt0.c1, t0.c0 FROM rt0, t0 WHERE (((((((((rt0.c1) NOTNULL))OR(((t0.c0) BETWEEN (rt0.c2) AND (t0.c0)))))OR(((rt0.c1)-(t0.c1))))) ISNULL));
SELECT ALL rt0.c0, t0.c2, rt0.c1, t0.c0 FROM rt0, t0;
SELECT DISTINCT t0.c0, t0.c2, rt0.c1, t0.c1 FROM t0, rt0;
SELECT DISTINCT t0.c0, t0.c2, rt0.c1, t0.c1 FROM t0, rt0 WHERE (TYPEOF(DISTINCT rt0.c1) COLLATE BINARY) UNION SELECT DISTINCT t0.c0, t0.c2, rt0.c1, t0.c1 FROM t0, rt0 WHERE ((NOT (TYPEOF(DISTINCT rt0.c1) COLLATE BINARY))) UNION SELECT DISTINCT t0.c0, t0.c2, rt0.c1, t0.c1 FROM t0, rt0 WHERE (((TYPEOF(DISTINCT rt0.c1) COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c0, t0.c2, rt0.c1, t0.c1 FROM t0, rt0;
SELECT t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((((t0.c0) IS FALSE)) BETWEEN ((NOT (t0.c2))) AND (((((t0.c0)AND(t0.c0)))OR(t0.c2))))) GROUP BY t0.c0, t0.c1, t0.c2 UNION SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT (((((t0.c0) IS FALSE)) BETWEEN ((NOT (t0.c2))) AND (((((t0.c0)AND(t0.c0)))OR(t0.c2))))))) GROUP BY t0.c0, t0.c1, t0.c2 UNION SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((((((t0.c0) IS FALSE)) BETWEEN ((NOT (t0.c2))) AND (((((t0.c0)AND(t0.c0)))OR(t0.c2))))) ISNULL)) GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT ALL rt0.c1 FROM t0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM t0, rt0 GROUP BY rt0.c1 HAVING CASE MIN(rt0.c2)  WHEN TOTAL(TOTAL(AVG(t0.c1))) THEN COUNT(GROUP_CONCAT(COUNT(*))) END UNION ALL SELECT ALL rt0.c1 FROM t0, rt0 GROUP BY rt0.c1 HAVING (NOT (CASE MIN(rt0.c2)  WHEN TOTAL(TOTAL(AVG(t0.c1))) THEN COUNT(GROUP_CONCAT(COUNT(*))) END)) UNION ALL SELECT ALL rt0.c1 FROM t0, rt0 GROUP BY rt0.c1 HAVING ((CASE MIN(rt0.c2)  WHEN TOTAL(TOTAL(AVG(t0.c1))) THEN COUNT(GROUP_CONCAT(COUNT(*))) END) ISNULL);
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE (t0.c2) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((NOT (t0.c2))) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE (((t0.c2) ISNULL));
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(CAST(rt0.c1 AS REAL))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(CAST(rt0.c1 AS REAL))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((SQLITE_COMPILEOPTION_GET(CAST(rt0.c1 AS REAL))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 WHERE (CAST(CAST(t0.c1 AS INTEGER) AS REAL)) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE ((NOT (CAST(CAST(t0.c1 AS INTEGER) AS REAL)))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 WHERE (((CAST(CAST(t0.c1 AS INTEGER) AS REAL)) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c1, t0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c1, t0.c0 HAVING ((COUNT(*)) NOT NULL) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, t0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c1, t0.c0 HAVING (NOT (((COUNT(*)) NOT NULL))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c1, t0.c0 HAVING ((((COUNT(*)) NOT NULL)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c1, t0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c1, t0.c0 HAVING ((COUNT(*)) NOT NULL) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, t0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c1, t0.c0 HAVING (NOT (((COUNT(*)) NOT NULL))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c1, t0.c0 HAVING ((((COUNT(*)) NOT NULL)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c1, t0.c0;
SELECT * FROM t0, rt0;
SELECT ALL * FROM t0, rt0 WHERE (ABS((- (rt0.c0)))) UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT (ABS((- (rt0.c0)))))) UNION ALL SELECT * FROM t0, rt0 WHERE (((ABS((- (rt0.c0)))) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT rt0.c0 FROM t0, rt0;
SELECT DISTINCT rt0.c0 FROM t0, rt0 WHERE ((rt0.c0 IN ()) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c0 FROM t0, rt0 WHERE ((NOT ((rt0.c0 IN ()) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c0 FROM t0, rt0 WHERE ((((rt0.c0 IN ()) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c0 FROM t0, rt0;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c2) AND (t0.c2))) IS FALSE)) GROUP BY t0.c0, t0.c1 UNION SELECT t0.c0, t0.c1 FROM t0 WHERE ((NOT (((((t0.c0) BETWEEN (t0.c2) AND (t0.c2))) IS FALSE)))) GROUP BY t0.c0, t0.c1 UNION SELECT t0.c0, t0.c1 FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c2) AND (t0.c2))) IS FALSE)) ISNULL)) GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT ALL rt0.c2, t0.c0, rt0.c1, t0.c2, t0.c1 FROM rt0, t0 GROUP BY rt0.c2, t0.c0, rt0.c1, t0.c2, t0.c1;
SELECT ALL rt0.c2, t0.c0, rt0.c1, t0.c2, t0.c1 FROM rt0, t0 GROUP BY rt0.c2, t0.c0, rt0.c1, t0.c2, t0.c1 HAVING SUM(CASE MAX(t0.c1)  WHEN rt0.c0 THEN AVG(t0.c2) ELSE AVG(COUNT(*)) END) UNION ALL SELECT rt0.c2, t0.c0, rt0.c1, t0.c2, t0.c1 FROM rt0, t0 GROUP BY rt0.c2, t0.c0, rt0.c1, t0.c2, t0.c1 HAVING (NOT (SUM(CASE MAX(t0.c1)  WHEN rt0.c0 THEN AVG(t0.c2) ELSE AVG(COUNT(*)) END))) UNION ALL SELECT ALL rt0.c2, t0.c0, rt0.c1, t0.c2, t0.c1 FROM rt0, t0 GROUP BY rt0.c2, t0.c0, rt0.c1, t0.c2, t0.c1 HAVING ((SUM(CASE MAX(t0.c1)  WHEN rt0.c0 THEN AVG(t0.c2) ELSE AVG(COUNT(*)) END)) ISNULL);
SELECT ALL * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE (((CASE t0.c0  WHEN t0.c2 THEN NULL END)*(((t0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (((CASE t0.c0  WHEN t0.c2 THEN NULL END)*(((t0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))))) UNION ALL SELECT * FROM rt0, t0 WHERE (((((CASE t0.c0  WHEN t0.c2 THEN NULL END)*(((t0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c1 IN (t0.c0)))<=(CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c1 IN (t0.c0)))<=(CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c1 IN (t0.c0)))<=(CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c1, rt0.c1 FROM t0, rt0 GROUP BY t0.c1, rt0.c1;
SELECT ALL t0.c1, rt0.c1 FROM t0, rt0 WHERE ((((((((rt0.c2))>=((t0.c1))))OR(((rt0.c0) IS FALSE))))OR(t0.c1 COLLATE RTRIM))) GROUP BY t0.c1, rt0.c1 UNION SELECT ALL t0.c1, rt0.c1 FROM t0, rt0 WHERE ((NOT ((((((((rt0.c2))>=((t0.c1))))OR(((rt0.c0) IS FALSE))))OR(t0.c1 COLLATE RTRIM))))) GROUP BY t0.c1, rt0.c1 UNION SELECT ALL t0.c1, rt0.c1 FROM t0, rt0 WHERE ((((((((((rt0.c2))>=((t0.c1))))OR(((rt0.c0) IS FALSE))))OR(t0.c1 COLLATE RTRIM))) ISNULL)) GROUP BY t0.c1, rt0.c1;
SELECT ALL t0.c1, rt0.c1 FROM t0, rt0 GROUP BY t0.c1, rt0.c1;
SELECT rt0.c0, t0.c0, t0.c2, rt0.c1, t0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, t0.c2, rt0.c1, t0.c1, rt0.c2;
SELECT rt0.c0, t0.c0, t0.c2, rt0.c1, t0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, t0.c2, rt0.c1, t0.c1, rt0.c2 HAVING CAST(MAX(t0.c0) AS INTEGER) UNION ALL SELECT rt0.c0, t0.c0, t0.c2, rt0.c1, t0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, t0.c2, rt0.c1, t0.c1, rt0.c2 HAVING (NOT (CAST(MAX(t0.c0) AS INTEGER))) UNION ALL SELECT rt0.c0, t0.c0, t0.c2, rt0.c1, t0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, t0.c2, rt0.c1, t0.c1, rt0.c2 HAVING ((CAST(MAX(t0.c0) AS INTEGER)) ISNULL);
SELECT rt0.c0, t0.c0, t0.c2, rt0.c1, t0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, t0.c2, rt0.c1, t0.c1, rt0.c2;
SELECT rt0.c0, t0.c0, t0.c2, rt0.c1, t0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, t0.c2, rt0.c1, t0.c1, rt0.c2 HAVING CAST(MAX(t0.c0) AS INTEGER) UNION ALL SELECT rt0.c0, t0.c0, t0.c2, rt0.c1, t0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, t0.c2, rt0.c1, t0.c1, rt0.c2 HAVING (NOT (CAST(MAX(t0.c0) AS INTEGER))) UNION ALL SELECT rt0.c0, t0.c0, t0.c2, rt0.c1, t0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, t0.c2, rt0.c1, t0.c1, rt0.c2 HAVING ((CAST(MAX(t0.c0) AS INTEGER)) ISNULL);
SELECT rt0.c0, t0.c0, t0.c2, rt0.c1, t0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, t0.c2, rt0.c1, t0.c1, rt0.c2;
SELECT rt0.c0, t0.c1, t0.c2, rt0.c1, rt0.c2, t0.c0 FROM rt0, t0;
SELECT ALL rt0.c0, t0.c1, t0.c2, rt0.c1, rt0.c2, t0.c0 FROM rt0, t0 WHERE (((rt0.c2)LIKE(rt0.c1 COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c0, t0.c1, t0.c2, rt0.c1, rt0.c2, t0.c0 FROM rt0, t0 WHERE ((NOT (((rt0.c2)LIKE(rt0.c1 COLLATE RTRIM))))) UNION ALL SELECT rt0.c0, t0.c1, t0.c2, rt0.c1, rt0.c2, t0.c0 FROM rt0, t0 WHERE (((((rt0.c2)LIKE(rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT rt0.c0, t0.c1, t0.c2, rt0.c1, rt0.c2, t0.c0 FROM rt0, t0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((((((t0.c2)AND(t0.c2)))OR(t0.c2))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND ('-2076691028'));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((((((t0.c2)AND(t0.c2)))OR(t0.c2))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND ('-2076691028')) WHERE ((+ (((t0.c2) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((((((t0.c2)AND(t0.c2)))OR(t0.c2))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND ('-2076691028')) WHERE ((NOT ((+ (((t0.c2) NOT NULL)))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((((((t0.c2)AND(t0.c2)))OR(t0.c2))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND ('-2076691028')) WHERE ((((+ (((t0.c2) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((((((t0.c2)AND(t0.c2)))OR(t0.c2))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND ('-2076691028'));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))AND(((rt0.c2)AND(rt0.c1))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))AND(((rt0.c2)AND(rt0.c1))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))AND(((rt0.c2)AND(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING GROUP_CONCAT(((AVG(COUNT(*))) BETWEEN (t0.c1) AND (t0.c0))) UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (GROUP_CONCAT(((AVG(COUNT(*))) BETWEEN (t0.c1) AND (t0.c0))))) UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((GROUP_CONCAT(((AVG(COUNT(*))) BETWEEN (t0.c1) AND (t0.c0)))) ISNULL);
SELECT t0.c2, t0.c0, t0.c1 FROM t0;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((CAST(t0.c2 AS REAL))&(((t0.c1)IS NOT(t0.c1))))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT (((CAST(t0.c2 AS REAL))&(((t0.c1)IS NOT(t0.c1))))))) UNION ALL SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((((CAST(t0.c2 AS REAL))&(((t0.c1)IS NOT(t0.c1))))) ISNULL));
SELECT t0.c2, t0.c0, t0.c1 FROM t0;
SELECT DISTINCT t0.c0, t0.c1, t0.c2, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON (((((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND((~ (rt0.c1)))))AND(((-327975941)<(t0.c2))));
SELECT DISTINCT t0.c0, t0.c1, t0.c2, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON (((((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND((~ (rt0.c1)))))AND(((-327975941)<(t0.c2)))) WHERE (((CASE WHEN x'' THEN rt0.c1 WHEN rt0.c1 THEN t0.c2 WHEN NULL THEN t0.c0 ELSE rt0.c2 END)&((((rt0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON (((((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND((~ (rt0.c1)))))AND(((-327975941)<(t0.c2)))) WHERE ((NOT (((CASE WHEN x'' THEN rt0.c1 WHEN rt0.c1 THEN t0.c2 WHEN NULL THEN t0.c0 ELSE rt0.c2 END)&((((rt0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))))))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON (((((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND((~ (rt0.c1)))))AND(((-327975941)<(t0.c2)))) WHERE (((((CASE WHEN x'' THEN rt0.c1 WHEN rt0.c1 THEN t0.c2 WHEN NULL THEN t0.c0 ELSE rt0.c2 END)&((((rt0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))))) ISNULL));
SELECT DISTINCT t0.c0, t0.c1, t0.c2, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON (((((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND((~ (rt0.c1)))))AND(((-327975941)<(t0.c2))));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((((rt0.c2)>(rt0.c1)), (((rt0.c0))>=((rt0.c0))), ((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))) AND ((rt0.c1 COLLATE RTRIM, ((rt0.c1) BETWEEN (NULL) AND (rt0.c0)), ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((((rt0.c2)>(rt0.c1)), (((rt0.c0))>=((rt0.c0))), ((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))) AND ((rt0.c1 COLLATE RTRIM, ((rt0.c1) BETWEEN (NULL) AND (rt0.c0)), ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((((rt0.c2)>(rt0.c1)), (((rt0.c0))>=((rt0.c0))), ((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))) AND ((rt0.c1 COLLATE RTRIM, ((rt0.c1) BETWEEN (NULL) AND (rt0.c0)), ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING ((AVG(t0.c1)) BETWEEN (MAX(SUM(MAX('g')))) AND (COUNT(GROUP_CONCAT(t0.c1)))) UNION ALL SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING (NOT (((AVG(t0.c1)) BETWEEN (MAX(SUM(MAX('g')))) AND (COUNT(GROUP_CONCAT(t0.c1)))))) UNION ALL SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING ((((AVG(t0.c1)) BETWEEN (MAX(SUM(MAX('g')))) AND (COUNT(GROUP_CONCAT(t0.c1))))) ISNULL);
SELECT ALL * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE ('-9283073') UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT ('-9283073'))) UNION ALL SELECT * FROM t0, rt0 WHERE ((('-9283073') ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT t0.c2, rt0.c1, t0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0;
SELECT DISTINCT t0.c2, rt0.c1, t0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 WHERE (CASE WHEN ((((rt0.c2)OR(t0.c2)))OR(t0.c2)) THEN (('P^!BV!V')<<(t0.c0)) WHEN TRIM(t0.c2) THEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)) WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) THEN (~ (rt0.c0)) ELSE ((((rt0.c2)OR(t0.c0)))OR(t0.c1)) END) UNION SELECT DISTINCT t0.c2, rt0.c1, t0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 WHERE ((NOT (CASE WHEN ((((rt0.c2)OR(t0.c2)))OR(t0.c2)) THEN (('P^!BV!V')<<(t0.c0)) WHEN TRIM(t0.c2) THEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)) WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) THEN (~ (rt0.c0)) ELSE ((((rt0.c2)OR(t0.c0)))OR(t0.c1)) END))) UNION SELECT DISTINCT t0.c2, rt0.c1, t0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 WHERE (((CASE WHEN ((((rt0.c2)OR(t0.c2)))OR(t0.c2)) THEN (('P^!BV!V')<<(t0.c0)) WHEN TRIM(t0.c2) THEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)) WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) THEN (~ (rt0.c0)) ELSE ((((rt0.c2)OR(t0.c0)))OR(t0.c1)) END) ISNULL));
SELECT DISTINCT t0.c2, rt0.c1, t0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0;
SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM t0 WHERE (CAST(ABS(DISTINCT t0.c1) AS REAL)) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM t0 WHERE ((NOT (CAST(ABS(DISTINCT t0.c1) AS REAL)))) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM t0 WHERE (((CAST(ABS(DISTINCT t0.c1) AS REAL)) ISNULL)) GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c2, t0.c0, rt0.c0)) BETWEEN ((rt0.c0 COLLATE RTRIM, NULL, ((rt0.c0)GLOB(rt0.c0)))) AND ((((x'')IS NOT(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c1)), ((t0.c2)*(rt0.c0)))))) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT ((((rt0.c2, t0.c0, rt0.c0)) BETWEEN ((rt0.c0 COLLATE RTRIM, NULL, ((rt0.c0)GLOB(rt0.c0)))) AND ((((x'')IS NOT(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c1)), ((t0.c2)*(rt0.c0)))))))) UNION ALL SELECT * FROM rt0, t0 WHERE ((((((rt0.c2, t0.c0, rt0.c0)) BETWEEN ((rt0.c0 COLLATE RTRIM, NULL, ((rt0.c0)GLOB(rt0.c0)))) AND ((((x'')IS NOT(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c1)), ((t0.c2)*(rt0.c0)))))) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((t0.c2) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT ((NOT (((t0.c2) IS TRUE)))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((((NOT (((t0.c2) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0 WHERE (ABS(DISTINCT (((t0.c0))<((t0.c2))))) GROUP BY t0.c1, t0.c0 UNION SELECT t0.c1, t0.c0 FROM t0 WHERE ((NOT (ABS(DISTINCT (((t0.c0))<((t0.c2))))))) GROUP BY t0.c1, t0.c0 UNION SELECT ALL t0.c1, t0.c0 FROM t0 WHERE (((ABS(DISTINCT (((t0.c0))<((t0.c2))))) ISNULL)) GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT t0.c2, rt0.c1 FROM rt0, t0 GROUP BY t0.c2, rt0.c1;
SELECT ALL t0.c2, rt0.c1 FROM rt0, t0 GROUP BY t0.c2, rt0.c1 HAVING MIN(COUNT(*)) UNION ALL SELECT t0.c2, rt0.c1 FROM rt0, t0 GROUP BY t0.c2, rt0.c1 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT t0.c2, rt0.c1 FROM rt0, t0 GROUP BY t0.c2, rt0.c1 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((IFNULL(DISTINCT rt0.c2, rt0.c2))) AND ((rt0.c1 COLLATE NOCASE)))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((IFNULL(DISTINCT rt0.c2, rt0.c2))) AND ((rt0.c1 COLLATE NOCASE)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((IFNULL(DISTINCT rt0.c2, rt0.c2))) AND ((rt0.c1 COLLATE NOCASE)))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE WHEN t0.c1 COLLATE RTRIM THEN CASE t0.c0  WHEN t0.c1 THEN 0.37243457506017197 WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c2 END ELSE (t0.c1 IN (t0.c0)) END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE WHEN t0.c1 COLLATE RTRIM THEN CASE t0.c0  WHEN t0.c1 THEN 0.37243457506017197 WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c2 END ELSE (t0.c1 IN (t0.c0)) END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN t0.c1 COLLATE RTRIM THEN CASE t0.c0  WHEN t0.c1 THEN 0.37243457506017197 WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c2 END ELSE (t0.c1 IN (t0.c0)) END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0, t0.c1, rt0.c1, t0.c2 FROM t0, rt0 GROUP BY t0.c0, t0.c1, rt0.c1, t0.c2;
SELECT ALL t0.c0, t0.c1, rt0.c1, t0.c2 FROM t0, rt0 WHERE (((json_patch(rt0.c2, rt0.c2)) NOT BETWEEN (rt0.c1) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END))) GROUP BY t0.c0, t0.c1, rt0.c1, t0.c2 UNION SELECT ALL t0.c0, t0.c1, rt0.c1, t0.c2 FROM t0, rt0 WHERE ((NOT (((json_patch(rt0.c2, rt0.c2)) NOT BETWEEN (rt0.c1) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END))))) GROUP BY t0.c0, t0.c1, rt0.c1, t0.c2 UNION SELECT ALL t0.c0, t0.c1, rt0.c1, t0.c2 FROM t0, rt0 WHERE (((((json_patch(rt0.c2, rt0.c2)) NOT BETWEEN (rt0.c1) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END))) ISNULL)) GROUP BY t0.c0, t0.c1, rt0.c1, t0.c2;
SELECT ALL t0.c0, t0.c1, rt0.c1, t0.c2 FROM t0, rt0 GROUP BY t0.c0, t0.c1, rt0.c1, t0.c2;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING rt0.c2 UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING rt0.c2 UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT * FROM t0, rt0;
SELECT ALL * FROM t0, rt0 WHERE (((((t0.c1)AND(t0.c2)))OR(t0.c2)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (((((t0.c1)AND(t0.c2)))OR(t0.c2)) COLLATE RTRIM))) UNION ALL SELECT * FROM t0, rt0 WHERE (((((((t0.c1)AND(t0.c2)))OR(t0.c2)) COLLATE RTRIM) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT rt0.c0, t0.c2, rt0.c2, t0.c1 FROM rt0, t0;
SELECT DISTINCT rt0.c0, t0.c2, rt0.c2, t0.c1 FROM rt0, t0 WHERE ((((t0.c0, t0.c2, rt0.c2, rt0.c0, t0.c1)) BETWEEN ((rt0.c0, rt0.c2, t0.c2, t0.c2, '~h|\n~#,')) AND ((rt0.c0, -1.439769155E9, 420484121, t0.c2, t0.c0))) COLLATE BINARY COLLATE BINARY) UNION SELECT DISTINCT rt0.c0, t0.c2, rt0.c2, t0.c1 FROM rt0, t0 NOT INDEXED WHERE ((NOT ((((t0.c0, t0.c2, rt0.c2, rt0.c0, t0.c1)) BETWEEN ((rt0.c0, rt0.c2, t0.c2, t0.c2, '~h|\n~#,')) AND ((rt0.c0, -1.439769155E9, 420484121, t0.c2, t0.c0))) COLLATE BINARY COLLATE BINARY))) UNION SELECT DISTINCT rt0.c0, t0.c2, rt0.c2, t0.c1 FROM rt0, t0 WHERE ((((((t0.c0, t0.c2, rt0.c2, rt0.c0, t0.c1)) BETWEEN ((rt0.c0, rt0.c2, t0.c2, t0.c2, '~h|\n~#,')) AND ((rt0.c0, -1.439769155E9, 420484121, t0.c2, t0.c0))) COLLATE BINARY COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c0, t0.c2, rt0.c2, t0.c1 FROM rt0, t0;
SELECT ALL rt0.c1, rt0.c2, t0.c0, t0.c2 FROM t0 LEFT OUTER JOIN rt0 ON ((((((x'')AND(rt0.c1)))OR(t0.c2)))<('-503645035')) GROUP BY rt0.c1, rt0.c2, t0.c0, t0.c2;
SELECT ALL rt0.c1, rt0.c2, t0.c0, t0.c2 FROM t0 LEFT OUTER JOIN rt0 ON ((((((x'')AND(rt0.c1)))OR(t0.c2)))<('-503645035')) WHERE (CAST(((t0.c0)<=(rt0.c2)) AS TEXT)) GROUP BY rt0.c1, rt0.c2, t0.c0, t0.c2 UNION SELECT ALL rt0.c1, rt0.c2, t0.c0, t0.c2 FROM t0 LEFT OUTER JOIN rt0 ON ((((((x'')AND(rt0.c1)))OR(t0.c2)))<('-503645035')) WHERE ((NOT (CAST(((t0.c0)<=(rt0.c2)) AS TEXT)))) GROUP BY rt0.c1, rt0.c2, t0.c0, t0.c2 UNION SELECT ALL rt0.c1, rt0.c2, t0.c0, t0.c2 FROM t0 LEFT OUTER JOIN rt0 ON ((((((x'')AND(rt0.c1)))OR(t0.c2)))<('-503645035')) WHERE (((CAST(((t0.c0)<=(rt0.c2)) AS TEXT)) ISNULL)) GROUP BY rt0.c1, rt0.c2, t0.c0, t0.c2;
SELECT ALL rt0.c1, rt0.c2, t0.c0, t0.c2 FROM t0 LEFT OUTER JOIN rt0 ON ((((((x'')AND(rt0.c1)))OR(t0.c2)))<('-503645035')) GROUP BY rt0.c1, rt0.c2, t0.c0, t0.c2;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (AVG(rt0.c2) IN ()) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((AVG(rt0.c2) IN ()))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((AVG(rt0.c2) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (AVG(rt0.c2) IN ()) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((AVG(rt0.c2) IN ()))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((AVG(rt0.c2) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL * FROM t0 NATURAL JOIN rt0;
SELECT * FROM t0 NATURAL JOIN rt0 WHERE ((((rt0.c1 IN ())) BETWEEN (((t0.c1) NOT NULL)) AND (((t0.c1)||(rt0.c0))))) UNION ALL SELECT * FROM t0 NATURAL JOIN rt0 WHERE ((NOT ((((rt0.c1 IN ())) BETWEEN (((t0.c1) NOT NULL)) AND (((t0.c1)||(rt0.c0))))))) UNION ALL SELECT * FROM t0 NATURAL JOIN rt0 WHERE ((((((rt0.c1 IN ())) BETWEEN (((t0.c1) NOT NULL)) AND (((t0.c1)||(rt0.c0))))) ISNULL));
SELECT ALL * FROM t0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((+ (CASE WHEN '-10589342' THEN rt0.c0 END))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((+ (CASE WHEN '-10589342' THEN rt0.c0 END))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((+ (CASE WHEN '-10589342' THEN rt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((+ (rt0.c2))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c0)IS NOT(rt0.c1))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((+ (rt0.c2))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c0)IS NOT(rt0.c1))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((+ (rt0.c2))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c0)IS NOT(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1, t0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0, rt0.c1, t0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, t0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0, rt0.c1, t0.c1 HAVING CAST(CASE rt0.c2  WHEN SUM(COUNT(*)) THEN t0.c2 END AS BLOB) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, t0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0, rt0.c1, t0.c1 HAVING (NOT (CAST(CASE rt0.c2  WHEN SUM(COUNT(*)) THEN t0.c2 END AS BLOB))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, t0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0, rt0.c1, t0.c1 HAVING ((CAST(CASE rt0.c2  WHEN SUM(COUNT(*)) THEN t0.c2 END AS BLOB)) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((((((((((((t0.c2)AND(t0.c0)))AND(t0.c0)))OR(((t0.c2)AND(t0.c0)))))OR(UNLIKELY(DISTINCT t0.c1))))OR(((t0.c0)!=(t0.c1)))))AND(((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0))))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((((((((((t0.c2)AND(t0.c0)))AND(t0.c0)))OR(((t0.c2)AND(t0.c0)))))OR(UNLIKELY(DISTINCT t0.c1))))OR(((t0.c0)<>(t0.c1)))))AND(((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0))))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((((((((((t0.c2)AND(t0.c0)))AND(t0.c0)))OR(((t0.c2)AND(t0.c0)))))OR(UNLIKELY(DISTINCT t0.c1))))OR(((t0.c0)!=(t0.c1)))))AND(((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c1, rt0.c0 FROM t0, rt0;
SELECT DISTINCT t0.c1, rt0.c0 FROM t0, rt0 WHERE ((((~ (t0.c1)))>(((t0.c1)<<(t0.c0))))) UNION SELECT DISTINCT t0.c1, rt0.c0 FROM t0, rt0 WHERE ((NOT ((((~ (t0.c1)))>(((t0.c1)<<(t0.c0))))))) UNION SELECT DISTINCT t0.c1, rt0.c0 FROM t0, rt0 WHERE ((((((~ (t0.c1)))>(((t0.c1)<<(t0.c0))))) ISNULL));
SELECT DISTINCT t0.c1, rt0.c0 FROM t0, rt0;
SELECT rt0.c1, rt0.c0, t0.c0, t0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c0, t0.c0, t0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, t0.c0, t0.c1, rt0.c2 FROM rt0, t0 WHERE (CASE WHEN rt0.c2 THEN ((t0.c2)GLOB(t0.c0)) WHEN CAST(rt0.c1 AS REAL) THEN load_extension(rt0.c1) WHEN rt0.c0 THEN (rt0.c0 IN ()) END) GROUP BY rt0.c1, rt0.c0, t0.c0, t0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, t0.c0, t0.c1, rt0.c2 FROM rt0, t0 WHERE ((NOT (CASE WHEN rt0.c2 THEN ((t0.c2)GLOB(t0.c0)) WHEN CAST(rt0.c1 AS REAL) THEN load_extension(rt0.c1) WHEN rt0.c0 THEN (rt0.c0 IN ()) END))) GROUP BY rt0.c1, rt0.c0, t0.c0, t0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c0, t0.c0, t0.c1, rt0.c2 FROM rt0, t0 WHERE (((CASE WHEN rt0.c2 THEN ((t0.c2)GLOB(t0.c0)) WHEN CAST(rt0.c1 AS REAL) THEN load_extension(rt0.c1) WHEN rt0.c0 THEN (rt0.c0 IN ()) END) ISNULL)) GROUP BY rt0.c1, rt0.c0, t0.c0, t0.c1, rt0.c2;
SELECT rt0.c1, rt0.c0, t0.c0, t0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c0, t0.c0, t0.c1, rt0.c2;
SELECT ALL rt0.c1 FROM t0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM t0 NOT INDEXED, rt0 GROUP BY rt0.c1 HAVING SUM(((t0.c2) IS TRUE)) UNION ALL SELECT rt0.c1 FROM t0, rt0 GROUP BY rt0.c1 HAVING (NOT (SUM(((t0.c2) IS TRUE)))) UNION ALL SELECT ALL rt0.c1 FROM t0, rt0 GROUP BY rt0.c1 HAVING ((SUM(((t0.c2) IS TRUE))) ISNULL);
SELECT ALL rt0.c1 FROM t0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM t0 NOT INDEXED, rt0 GROUP BY rt0.c1 HAVING SUM(((t0.c2) IS TRUE)) UNION ALL SELECT rt0.c1 FROM t0, rt0 GROUP BY rt0.c1 HAVING (NOT (SUM(((t0.c2) IS TRUE)))) UNION ALL SELECT ALL rt0.c1 FROM t0, rt0 GROUP BY rt0.c1 HAVING ((SUM(((t0.c2) IS TRUE))) ISNULL);
SELECT ALL rt0.c1 FROM t0, rt0 GROUP BY rt0.c1;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((((CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END))<=(((t0.c0 IN ()))))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END))<=(((t0.c0 IN ()))))))) UNION ALL SELECT * FROM t0 WHERE ((((((CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END))<=(((t0.c0 IN ()))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST((t0.c0 IN ()) AS INTEGER)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST((t0.c0 IN ()) AS INTEGER)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST((t0.c0 IN ()) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c2, rt0.c1, t0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c1;
SELECT ALL rt0.c2, rt0.c1, t0.c1 FROM rt0, t0 WHERE ((((((rt0.c0)&(t0.c0))))<((CAST(t0.c1 AS TEXT))))) GROUP BY rt0.c2, rt0.c1, t0.c1 UNION SELECT rt0.c2, rt0.c1, t0.c1 FROM rt0, t0 WHERE ((NOT ((((((rt0.c0)&(t0.c0))))<((CAST(t0.c1 AS TEXT))))))) GROUP BY rt0.c2, rt0.c1, t0.c1 UNION SELECT ALL rt0.c2, rt0.c1, t0.c1 FROM rt0, t0 WHERE ((((((((rt0.c0)&(t0.c0))))<((CAST(t0.c1 AS TEXT))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, t0.c1;
SELECT ALL rt0.c2, rt0.c1, t0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(t0.c2 AS BLOB)) NOT BETWEEN ((COUNT(t0.c2) IN ())) AND (MAX(AVG(TOTAL(SUM(t0.c1)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((CAST(t0.c2 AS BLOB)) NOT BETWEEN ((COUNT(t0.c2) IN ())) AND (MAX(AVG(TOTAL(SUM(t0.c1)))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((CAST(t0.c2 AS BLOB)) NOT BETWEEN ((COUNT(t0.c2) IN ())) AND (MAX(AVG(TOTAL(SUM(t0.c1))))))) ISNULL);
SELECT t0.c0, rt0.c2, t0.c1 FROM t0 FULL OUTER JOIN rt0 ON (CASE rt0.c2  WHEN t0.c1 THEN t0.c0 END IN ());
SELECT ALL t0.c0, rt0.c2, t0.c1 FROM t0 FULL OUTER JOIN rt0 ON (CASE rt0.c2  WHEN t0.c1 THEN t0.c0 END IN ()) WHERE (((((rt0.c2) ISNULL)) NOT NULL)) UNION ALL SELECT t0.c0, rt0.c2, t0.c1 FROM t0 FULL OUTER JOIN rt0 ON (CASE rt0.c2  WHEN t0.c1 THEN t0.c0 END IN ()) WHERE ((NOT (((((rt0.c2) ISNULL)) NOT NULL)))) UNION ALL SELECT ALL t0.c0, rt0.c2, t0.c1 FROM t0 FULL OUTER JOIN rt0 ON (CASE rt0.c2  WHEN t0.c1 THEN t0.c0 END IN ()) WHERE (((((((rt0.c2) ISNULL)) NOT NULL)) ISNULL));
SELECT t0.c0, rt0.c2, t0.c1 FROM t0 FULL OUTER JOIN rt0 ON (CASE rt0.c2  WHEN t0.c1 THEN t0.c0 END IN ());
SELECT DISTINCT * FROM t0 INDEXED BY i11 INNER JOIN rt0 ON ((((t0.c1)>(rt0.c2)))!=((- (t0.c0))));
SELECT DISTINCT * FROM t0 INDEXED BY i11 INNER JOIN rt0 ON ((((t0.c1)>(rt0.c2)))<>((- (t0.c0)))) WHERE (((LOWER(t0.c0))%((((rt0.c2, t0.c1, t0.c0))==((rt0.c2, t0.c1, t0.c0)))))) UNION SELECT DISTINCT * FROM t0 INDEXED BY i11 INNER JOIN rt0 ON ((((t0.c1)>(rt0.c2)))<>((- (t0.c0)))) WHERE ((NOT (((LOWER(t0.c0))%((((rt0.c2, t0.c1, t0.c0))=((rt0.c2, t0.c1, t0.c0)))))))) UNION SELECT DISTINCT * FROM t0 INDEXED BY i11 INNER JOIN rt0 ON ((((t0.c1)>(rt0.c2)))<>((- (t0.c0)))) WHERE (((((LOWER(t0.c0))%((((rt0.c2, t0.c1, t0.c0))=((rt0.c2, t0.c1, t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0 INDEXED BY i11 INNER JOIN rt0 ON ((((t0.c1)>(rt0.c2)))!=((- (t0.c0))));
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (CASE WHEN ((rt0.c0)-(rt0.c1)) THEN ((rt0.c2) ISNULL) END) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c0)-(rt0.c1)) THEN ((rt0.c2) ISNULL) END))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((CASE WHEN ((rt0.c0)-(rt0.c1)) THEN ((rt0.c2) ISNULL) END) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING AVG(TOTAL(rt0.c0)) COLLATE RTRIM UNION ALL SELECT rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING (NOT (AVG(TOTAL(rt0.c0)) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING ((AVG(TOTAL(rt0.c0)) COLLATE RTRIM) ISNULL);
SELECT * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE ((((rt0.c1) BETWEEN (rt0.c1) AND (NULL)) IN ())) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT ((((rt0.c1) BETWEEN (rt0.c1) AND (NULL)) IN ())))) UNION ALL SELECT * FROM t0, rt0 WHERE ((((((rt0.c1) BETWEEN (rt0.c1) AND (NULL)) IN ())) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT t0.c1, t0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((CASE t0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE 0.3199013082763196 END) NOT NULL);
SELECT DISTINCT t0.c1, t0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((CASE t0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE 0.3199013082763196 END) NOT NULL) WHERE (((((t0.c1)AND(rt0.c2)))AND(NULL)) COLLATE NOCASE) UNION SELECT DISTINCT t0.c1, t0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((CASE t0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE 0.3199013082763196 END) NOT NULL) WHERE ((NOT (((((t0.c1)AND(rt0.c2)))AND(NULL)) COLLATE NOCASE))) UNION SELECT DISTINCT t0.c1, t0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((CASE t0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE 0.3199013082763196 END) NOT NULL) WHERE (((((((t0.c1)AND(rt0.c2)))AND(NULL)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT t0.c1, t0.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((CASE t0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE 0.3199013082763196 END) NOT NULL);
SELECT t0.c2, rt0.c2, rt0.c0, t0.c1, rt0.c1 FROM t0, rt0 INDEXED BY i11 GROUP BY t0.c2, rt0.c2, rt0.c0, t0.c1, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING AVG(IFNULL(rt0.c1, TOTAL(rt0.c0))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (AVG(IFNULL(rt0.c1, TOTAL(rt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((AVG(IFNULL(rt0.c1, TOTAL(rt0.c0)))) ISNULL);
SELECT ALL TOTAL(x'') FROM rt0, t0;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (CAST(((t0.c1)IS NOT(t0.c0)) AS INTEGER)) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(((t0.c1)IS NOT(t0.c0)) AS INTEGER)))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((CAST(((t0.c1)IS NOT(t0.c0)) AS INTEGER)) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT rt0.c1 FROM t0, rt0;
SELECT DISTINCT rt0.c1 FROM t0, rt0 WHERE (((((NOT (rt0.c2))))<((((t0.c2) IS TRUE))))) UNION SELECT DISTINCT rt0.c1 FROM t0, rt0 WHERE ((NOT (((((NOT (rt0.c2))))<((((t0.c2) IS TRUE))))))) UNION SELECT DISTINCT rt0.c1 FROM t0, rt0 WHERE (((((((NOT (rt0.c2))))<((((t0.c2) IS TRUE))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM t0, rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((((rt0.c1) ISNULL) IN ((+ (0.7845460730522774))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1) ISNULL) IN ((+ (0.7845460730522774))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((((((rt0.c1) ISNULL) IN ((+ (0.7845460730522774))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (SQLITE_VERSION() IN ()) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((SQLITE_VERSION() IN ()))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((SQLITE_VERSION() IN ())) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (SQLITE_VERSION() IN ()) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((SQLITE_VERSION() IN ()))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((SQLITE_VERSION() IN ())) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT MAX(((CASE WHEN t0.c0 THEN rt0.c2 END) NOT NULL)) FROM t0, rt0;
SELECT ALL rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN x'7ad6' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END AS BLOB)) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c0 THEN x'7ad6' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END AS BLOB)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((CAST(CASE WHEN rt0.c0 THEN x'7ad6' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END AS BLOB)) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, t0.c1, t0.c2 FROM t0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, t0.c1, t0.c2 FROM t0, rt0 WHERE (((load_extension(t0.c0, t0.c1))=(((((rt0.c2)AND(t0.c1)))OR(rt0.c0))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, t0.c1, t0.c2 FROM t0, rt0 WHERE ((NOT (((load_extension(t0.c0, t0.c1))==(((((rt0.c2)AND(t0.c1)))OR(rt0.c0))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, t0.c1, t0.c2 FROM t0, rt0 WHERE (((((load_extension(t0.c0, t0.c1))=(((((rt0.c2)AND(t0.c1)))OR(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, t0.c1, t0.c2 FROM t0, rt0;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 NOT INDEXED WHERE ((x'' IN ())) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE ((NOT ((x'' IN ())))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 WHERE ((((x'' IN ())) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c1, t0.c2, t0.c0, rt0.c2, rt0.c1, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))||(CAST(t0.c1 AS BLOB))) GROUP BY t0.c1, t0.c2, t0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL t0.c1, t0.c2, t0.c0, rt0.c2, rt0.c1, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))||(CAST(t0.c1 AS BLOB))) GROUP BY t0.c1, t0.c2, t0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((((MAX(rt0.c2))==(SUM(t0.c0)))) BETWEEN (AVG(t0.c2)) AND ((((t0.c2, rt0.c0, SUM(GROUP_CONCAT(t0.c0)), TOTAL(t0.c1), GROUP_CONCAT(rt0.c0)))>=(('-1676102320', t0.c0, COUNT(SUM(t0.c0)), '', rt0.c2))))) UNION ALL SELECT t0.c1, t0.c2, t0.c0, rt0.c2, rt0.c1, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))||(CAST(t0.c1 AS BLOB))) GROUP BY t0.c1, t0.c2, t0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((((MAX(rt0.c2))=(SUM(t0.c0)))) BETWEEN (AVG(t0.c2)) AND ((((t0.c2, rt0.c0, SUM(GROUP_CONCAT(t0.c0)), TOTAL(t0.c1), GROUP_CONCAT(rt0.c0)))>=(('-1676102320', t0.c0, COUNT(SUM(t0.c0)), '', rt0.c2))))))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0, rt0.c2, rt0.c1, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))||(CAST(t0.c1 AS BLOB))) GROUP BY t0.c1, t0.c2, t0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((((((MAX(rt0.c2))=(SUM(t0.c0)))) BETWEEN (AVG(t0.c2)) AND ((((t0.c2, rt0.c0, SUM(GROUP_CONCAT(t0.c0)), TOTAL(t0.c1), GROUP_CONCAT(rt0.c0)))>=(('-1676102320', t0.c0, COUNT(SUM(t0.c0)), '', rt0.c2)))))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((((t0.c2, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c1)>(2.3520921E7)), ((('-1620856301', t0.c0, t0.c2)) NOT BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((t0.c2, t0.c2, t0.c1))), ((t0.c2) IS TRUE))) AND (((((0.30282736611849037)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))), (t0.c0 IN ()), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN '1D' WHEN t0.c0 THEN '-1787784646' WHEN t0.c1 THEN t0.c2 END)))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((t0.c2, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c1)>(2.3520921E7)), ((('-1620856301', t0.c0, t0.c2)) NOT BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((t0.c2, t0.c2, t0.c1))), ((t0.c2) IS TRUE))) AND (((((0.30282736611849037)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))), (t0.c0 IN ()), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN '1D' WHEN t0.c0 THEN '-1787784646' WHEN t0.c1 THEN t0.c2 END)))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((t0.c2, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c1)>(2.3520921E7)), ((('-1620856301', t0.c0, t0.c2)) NOT BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((t0.c2, t0.c2, t0.c1))), ((t0.c2) IS TRUE))) AND (((((0.30282736611849037)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))), (t0.c0 IN ()), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN '1D' WHEN t0.c0 THEN '-1787784646' WHEN t0.c1 THEN t0.c2 END)))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CAST(t0.c0 COLLATE NOCASE AS TEXT)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c0 COLLATE NOCASE AS TEXT)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CAST(t0.c0 COLLATE NOCASE AS TEXT)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)*(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE NOCASE)*(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0 COLLATE NOCASE)*(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING LTRIM(((TOTAL(rt0.c1))GLOB(GROUP_CONCAT('-327975941'))), highlight(rt0.c2, 0xffffffff8093773d, COUNT(*), rt0.c0)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (LTRIM(((TOTAL(rt0.c1))GLOB(GROUP_CONCAT('-327975941'))), highlight(rt0.c2, 0xffffffff8093773d, COUNT(*), rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((LTRIM(((TOTAL(rt0.c1))GLOB(GROUP_CONCAT('-327975941'))), highlight(rt0.c2, 0xffffffff8093773d, COUNT(*), rt0.c0))) ISNULL);
SELECT ALL * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE (COALESCE(DISTINCT ((t0.c2)-(0.9334285736162286)), t0.c2 COLLATE NOCASE)) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT (COALESCE(DISTINCT ((t0.c2)-(0.9334285736162286)), t0.c2 COLLATE NOCASE)))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((COALESCE(DISTINCT ((t0.c2)-(0.9334285736162286)), t0.c2 COLLATE NOCASE)) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((CAST('[]^T,1' AS NUMERIC)))<=((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((CAST('[]^T,1' AS NUMERIC)))<=((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((CAST('[]^T,1' AS NUMERIC)))<=((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, t0 WHERE (0xffffffffccef5471) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, t0 NOT INDEXED WHERE ((NOT (0xffffffffccef5471))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, t0 WHERE (((0Xffffffffccef5471) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING MAX((SUM(COUNT(*)) IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MAX((SUM(COUNT(*)) IN ())))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MAX((SUM(COUNT(*)) IN ()))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING MAX((SUM(COUNT(*)) IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MAX((SUM(COUNT(*)) IN ())))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MAX((SUM(COUNT(*)) IN ()))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN (((((((((t0.c0)AND(t0.c2)))OR(t0.c1)))AND(t0.c2)))AND(t0.c1))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((t0.c0 COLLATE RTRIM IN (((((((((t0.c0)AND(t0.c2)))OR(t0.c1)))AND(t0.c2)))AND(t0.c1))))))) UNION ALL SELECT * FROM t0 WHERE ((((t0.c0 COLLATE RTRIM IN (((((((((t0.c0)AND(t0.c2)))OR(t0.c1)))AND(t0.c2)))AND(t0.c1))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((((((((((((NULLIF(t0.c0, rt0.c0))AND(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)))))AND(COALESCE(DISTINCT rt0.c0, t0.c2))))OR(rt0.c0 COLLATE NOCASE)))OR(((((((((rt0.c1)AND(t0.c0)))AND(t0.c2)))OR(rt0.c0)))AND(rt0.c0)))))OR(((rt0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)))))AND('yhN2'));
SELECT DISTINCT rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((((((((((((NULLIF(t0.c0, rt0.c0))AND(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)))))AND(COALESCE(DISTINCT rt0.c0, t0.c2))))OR(rt0.c0 COLLATE NOCASE)))OR(((((((((rt0.c1)AND(t0.c0)))AND(t0.c2)))OR(rt0.c0)))AND(rt0.c0)))))OR(((rt0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)))))AND('yhN2')) WHERE (((((rt0.c2) NOT NULL)) NOT NULL)) UNION SELECT DISTINCT rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((((((((((((NULLIF(t0.c0, rt0.c0))AND(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)))))AND(COALESCE(DISTINCT rt0.c0, t0.c2))))OR(rt0.c0 COLLATE NOCASE)))OR(((((((((rt0.c1)AND(t0.c0)))AND(t0.c2)))OR(rt0.c0)))AND(rt0.c0)))))OR(((rt0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)))))AND('yhN2')) WHERE ((NOT (((((rt0.c2) NOT NULL)) NOT NULL)))) UNION SELECT DISTINCT rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((((((((((((NULLIF(t0.c0, rt0.c0))AND(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)))))AND(COALESCE(DISTINCT rt0.c0, t0.c2))))OR(rt0.c0 COLLATE NOCASE)))OR(((((((((rt0.c1)AND(t0.c0)))AND(t0.c2)))OR(rt0.c0)))AND(rt0.c0)))))OR(((rt0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)))))AND('yhN2')) WHERE (((((((rt0.c2) NOT NULL)) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((((((((((((NULLIF(t0.c0, rt0.c0))AND(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)))))AND(COALESCE(DISTINCT rt0.c0, t0.c2))))OR(rt0.c0 COLLATE NOCASE)))OR(((((((((rt0.c1)AND(t0.c0)))AND(t0.c2)))OR(rt0.c0)))AND(rt0.c0)))))OR(((rt0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)))))AND('yhN2'));
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((UPPER(rt0.c2))<=('YG{'))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((UPPER(rt0.c2))<=('YG{'))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((UPPER(rt0.c2))<=('YG{'))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0, t0.c1, rt0.c1, t0.c2, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c1, rt0.c1, t0.c2, rt0.c2;
SELECT rt0.c0, t0.c1, rt0.c1, t0.c2, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c1, rt0.c1, t0.c2, rt0.c2 HAVING ((MIN(AVG(COUNT(GROUP_CONCAT(rt0.c2)))))>=(AVG(rt0.c0))) UNION ALL SELECT rt0.c0, t0.c1, rt0.c1, t0.c2, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c1, rt0.c1, t0.c2, rt0.c2 HAVING (NOT (((MIN(AVG(COUNT(GROUP_CONCAT(rt0.c2)))))>=(AVG(rt0.c0))))) UNION ALL SELECT rt0.c0, t0.c1, rt0.c1, t0.c2, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c1, rt0.c1, t0.c2, rt0.c2 HAVING ((((MIN(AVG(COUNT(GROUP_CONCAT(rt0.c2)))))>=(AVG(rt0.c0)))) ISNULL);
SELECT ALL SUM(t0.c1) FROM rt0, t0 ORDER BY (~ (rt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((t0.c2 COLLATE BINARY) NOT NULL)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((t0.c2 COLLATE BINARY) NOT NULL)))) UNION ALL SELECT ALL * FROM t0 WHERE (((((t0.c2 COLLATE BINARY) NOT NULL)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE ((((NOT (0.18038428556197483)))IS NOT(t0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT ((((NOT (0.18038428556197483)))IS NOT(t0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((((((NOT (0.18038428556197483)))IS NOT(t0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT ALL rt0.c2, rt0.c1, t0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, t0.c1, rt0.c0 FROM rt0, t0 WHERE ((rt0.c2 IN ())) GROUP BY rt0.c2, rt0.c1, t0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, t0.c1, rt0.c0 FROM rt0, t0 WHERE ((NOT ((rt0.c2 IN ())))) GROUP BY rt0.c2, rt0.c1, t0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, t0.c1, rt0.c0 FROM rt0, t0 WHERE ((((rt0.c2 IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c1, t0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, t0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c1, rt0.c0;
SELECT ALL t0.c1, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY t0.c1, rt0.c1, t0.c0;
SELECT ALL t0.c1, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY t0.c1, rt0.c1, t0.c0 HAVING (+ (COUNT(t0.c1))) UNION ALL SELECT ALL t0.c1, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY t0.c1, rt0.c1, t0.c0 HAVING (NOT ((+ (COUNT(t0.c1))))) UNION ALL SELECT t0.c1, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY t0.c1, rt0.c1, t0.c0 HAVING (((+ (COUNT(t0.c1)))) ISNULL);
SELECT ALL t0.c1, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY t0.c1, rt0.c1, t0.c0;
SELECT ALL t0.c1, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY t0.c1, rt0.c1, t0.c0 HAVING (+ (COUNT(t0.c1))) UNION ALL SELECT ALL t0.c1, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY t0.c1, rt0.c1, t0.c0 HAVING (NOT ((+ (COUNT(t0.c1))))) UNION ALL SELECT t0.c1, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY t0.c1, rt0.c1, t0.c0 HAVING (((+ (COUNT(t0.c1)))) ISNULL);
SELECT ALL t0.c1, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY t0.c1, rt0.c1, t0.c0;
SELECT * FROM t0 INNER JOIN rt0 ON ((CASE t0.c2  WHEN rt0.c0 THEN 668022477 END) ISNULL);
SELECT * FROM t0 INNER JOIN rt0 ON ((CASE t0.c2  WHEN rt0.c0 THEN 668022477 END) ISNULL) WHERE (((x'203f0d06')=(((t0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))) UNION ALL SELECT * FROM t0 INNER JOIN rt0 ON ((CASE t0.c2  WHEN rt0.c0 THEN 668022477 END) ISNULL) WHERE ((NOT (((x'203f0d06')==(((t0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))))) UNION ALL SELECT ALL * FROM t0 INNER JOIN rt0 ON ((CASE t0.c2  WHEN rt0.c0 THEN 668022477 END) ISNULL) WHERE (((((x'203f0d06')==(((t0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))) ISNULL));
SELECT * FROM t0 INNER JOIN rt0 ON ((CASE t0.c2  WHEN rt0.c0 THEN 668022477 END) ISNULL);
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (CASE CASE WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN t0.c0 ELSE rt0.c0 END  WHEN (t0.c1 IN (rt0.c2)) THEN (('')OR(rt0.c1)) ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)) END) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (CASE CASE WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN t0.c0 ELSE rt0.c0 END  WHEN (t0.c1 IN (rt0.c2)) THEN (('')OR(rt0.c1)) ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)) END))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((CASE CASE WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN t0.c0 ELSE rt0.c0 END  WHEN (t0.c1 IN (rt0.c2)) THEN (('')OR(rt0.c1)) ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)) END) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 WHERE (0.23208818105982265 COLLATE RTRIM) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT t0.c1, t0.c0, t0.c2 FROM t0 WHERE ((NOT (0.23208818105982265 COLLATE RTRIM))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 WHERE (((0.23208818105982265 COLLATE RTRIM) ISNULL)) GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING GROUP_CONCAT(AVG(COUNT(MIN(SUM(SUM(MIN(rt0.c1))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(AVG(COUNT(MIN(SUM(SUM(MIN(rt0.c1))))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(AVG(COUNT(MIN(SUM(SUM(MIN(rt0.c1)))))))) ISNULL);
SELECT SUM(((((((((t0.c1)OR(t0.c0 COLLATE BINARY)))AND(ABS(rt0.c2))))OR((((rt0.c0))>((t0.c1))))))AND('ጻy쭒VrBz' COLLATE RTRIM))) FROM rt0, t0;
SELECT ALL * FROM t0, rt0 NOT INDEXED;
SELECT * FROM t0, rt0 WHERE ('2025485191') UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT ('2025485191'))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((('2025485191') ISNULL));
SELECT ALL * FROM t0, rt0 NOT INDEXED;
SELECT DISTINCT t0.c2, t0.c1, rt0.c2 FROM rt0, t0;
SELECT DISTINCT t0.c2, t0.c1, rt0.c2 FROM rt0, t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c2) AND (rt0.c2))) NOTNULL)) UNION SELECT DISTINCT t0.c2, t0.c1, rt0.c2 FROM rt0, t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t0.c2) AND (rt0.c2))) NOTNULL)))) UNION SELECT DISTINCT t0.c2, t0.c1, rt0.c2 FROM rt0, t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c2) AND (rt0.c2))) NOTNULL)) ISNULL));
SELECT DISTINCT t0.c2, t0.c1, rt0.c2 FROM rt0, t0;
SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t0 WHERE ((((((t0.c2)||(t0.c1))))!=((HEX(DISTINCT rt0.c2))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, t0 WHERE ((NOT ((((((t0.c2)||(t0.c1))))!=((HEX(DISTINCT rt0.c2))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, t0 WHERE ((((((((t0.c2)||(t0.c1))))!=((HEX(DISTINCT rt0.c2))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT ALL t0.c2 FROM t0, rt0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0, rt0 GROUP BY t0.c2 HAVING GROUP_CONCAT(TOTAL(MAX(t0.c1))) UNION ALL SELECT ALL t0.c2 FROM t0, rt0 GROUP BY t0.c2 HAVING (NOT (GROUP_CONCAT(TOTAL(MAX(t0.c1))))) UNION ALL SELECT ALL t0.c2 FROM t0, rt0 GROUP BY t0.c2 HAVING ((GROUP_CONCAT(TOTAL(MAX(t0.c1)))) ISNULL);
SELECT t0.c2, t0.c0, t0.c1 FROM t0;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((((((((t0.c2, t0.c1, t0.c0)) BETWEEN ((t0.c1, t0.c0, t0.c2)) AND ((x'1d1e', t0.c2, t0.c0))))OR(((t0.c0) ISNULL))))OR(((t0.c2)IS(t0.c1))))) UNION ALL SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT ((((((((t0.c2, t0.c1, t0.c0)) BETWEEN ((t0.c1, t0.c0, t0.c2)) AND ((x'1d1e', t0.c2, t0.c0))))OR(((t0.c0) ISNULL))))OR(((t0.c2)IS(t0.c1))))))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((((((((((t0.c2, t0.c1, t0.c0)) BETWEEN ((t0.c1, t0.c0, t0.c2)) AND ((x'1d1e', t0.c2, t0.c0))))OR(((t0.c0) ISNULL))))OR(((t0.c2)IS(t0.c1))))) ISNULL));
SELECT t0.c2, t0.c0, t0.c1 FROM t0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (NULL) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c2, t0.c0, rt0.c0, t0.c1, rt0.c1, t0.c2 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c2, t0.c0, rt0.c0, t0.c1, rt0.c1, t0.c2;
SELECT rt0.c2, t0.c0, rt0.c0, t0.c1, rt0.c1, t0.c2 FROM rt0 NATURAL JOIN t0 WHERE (((((t0.c0)AND(rt0.c2)))AND(t0.c1)) COLLATE RTRIM COLLATE NOCASE) GROUP BY rt0.c2, t0.c0, rt0.c0, t0.c1, rt0.c1, t0.c2 UNION SELECT rt0.c2, t0.c0, rt0.c0, t0.c1, rt0.c1, t0.c2 FROM rt0 NATURAL JOIN t0 WHERE ((NOT (((((t0.c0)AND(rt0.c2)))AND(t0.c1)) COLLATE RTRIM COLLATE NOCASE))) GROUP BY rt0.c2, t0.c0, rt0.c0, t0.c1, rt0.c1, t0.c2 UNION SELECT ALL rt0.c2, t0.c0, rt0.c0, t0.c1, rt0.c1, t0.c2 FROM rt0 NATURAL JOIN t0 WHERE (((((((t0.c0)AND(rt0.c2)))AND(t0.c1)) COLLATE RTRIM COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2, t0.c0, rt0.c0, t0.c1, rt0.c1, t0.c2;
SELECT rt0.c2, t0.c0, rt0.c0, t0.c1, rt0.c1, t0.c2 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c2, t0.c0, rt0.c0, t0.c1, rt0.c1, t0.c2;
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING CAST(((GROUP_CONCAT(t0.c1))>(0X5565b1cf)) AS TEXT) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING (NOT (CAST(((GROUP_CONCAT(t0.c1))>(0X5565b1cf)) AS TEXT))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING ((CAST(((GROUP_CONCAT(t0.c1))>(0x5565b1cf)) AS TEXT)) ISNULL);
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING CAST(((GROUP_CONCAT(t0.c1))>(0X5565b1cf)) AS TEXT) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING (NOT (CAST(((GROUP_CONCAT(t0.c1))>(0X5565b1cf)) AS TEXT))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING ((CAST(((GROUP_CONCAT(t0.c1))>(0x5565b1cf)) AS TEXT)) ISNULL);
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c2 ELSE 1595632981 END))<=((JULIANDAY(rt0.c1, rt0.c1, 0x19101419, rt0.c0, rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((CASE WHEN rt0.c1 THEN rt0.c2 ELSE 1595632981 END))<=((JULIANDAY(rt0.c1, rt0.c1, 0X19101419, rt0.c0, rt0.c0))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((CASE WHEN rt0.c1 THEN rt0.c2 ELSE 1595632981 END))<=((JULIANDAY(rt0.c1, rt0.c1, 0X19101419, rt0.c0, rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE ((((rt0.c0, CHANGES(), ((t0.c2) ISNULL)))>=(('w6K', (- (rt0.c0)), x'')))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT ((((rt0.c0, CHANGES(), ((t0.c2) ISNULL)))>=(('w6K', (- (rt0.c0)), x'')))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((((((rt0.c0, CHANGES(), ((t0.c2) ISNULL)))>=(('w6K', (- (rt0.c0)), x'')))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT t0.c0, rt0.c2, rt0.c1, t0.c2 FROM t0 LEFT OUTER JOIN rt0 ON 0.9417991391390412 GROUP BY t0.c0, rt0.c2, rt0.c1, t0.c2;
SELECT t0.c0, rt0.c2, rt0.c1, t0.c2 FROM t0 LEFT OUTER JOIN rt0 ON 0.9417991391390412 WHERE (CAST(ABS(rt0.c0) AS BLOB)) GROUP BY t0.c0, rt0.c2, rt0.c1, t0.c2 UNION SELECT ALL t0.c0, rt0.c2, rt0.c1, t0.c2 FROM t0 LEFT OUTER JOIN rt0 ON 0.9417991391390412 WHERE ((NOT (CAST(ABS(rt0.c0) AS BLOB)))) GROUP BY t0.c0, rt0.c2, rt0.c1, t0.c2 UNION SELECT t0.c0, rt0.c2, rt0.c1, t0.c2 FROM t0 LEFT OUTER JOIN rt0 ON 0.9417991391390412 WHERE (((CAST(ABS(rt0.c0) AS BLOB)) ISNULL)) GROUP BY t0.c0, rt0.c2, rt0.c1, t0.c2;
SELECT t0.c0, rt0.c2, rt0.c1, t0.c2 FROM t0 LEFT OUTER JOIN rt0 ON 0.9417991391390412 GROUP BY t0.c0, rt0.c2, rt0.c1, t0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING CAST(rt0.c0 AS REAL) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (CAST(rt0.c0 AS REAL))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((CAST(rt0.c0 AS REAL)) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING CAST(rt0.c0 AS REAL) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (CAST(rt0.c0 AS REAL))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((CAST(rt0.c0 AS REAL)) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL t0.c2 FROM t0;
SELECT ALL t0.c2 FROM t0 WHERE ((((t0.c2 IN ()))%(LIKELIHOOD(DISTINCT t0.c2, 0.33487844805667144)))) UNION ALL SELECT ALL t0.c2 FROM t0 WHERE ((NOT ((((t0.c2 IN ()))%(LIKELIHOOD(DISTINCT t0.c2, 0.33487844805667144)))))) UNION ALL SELECT t0.c2 FROM t0 WHERE ((((((t0.c2 IN ()))%(LIKELIHOOD(DISTINCT t0.c2, 0.33487844805667144)))) ISNULL));
SELECT ALL t0.c2 FROM t0;
SELECT DISTINCT rt0.c1, t0.c0, rt0.c0, t0.c1, rt0.c2 FROM rt0, t0;
SELECT DISTINCT rt0.c1, t0.c0, rt0.c0, t0.c1, rt0.c2 FROM rt0, t0 WHERE ((((((t0.c1))>=((x'c2aba10a'))))IS NOT(((t0.c1)||(t0.c0))))) UNION SELECT DISTINCT rt0.c1, t0.c0, rt0.c0, t0.c1, rt0.c2 FROM rt0, t0 WHERE ((NOT ((((((t0.c1))>=((x'c2aba10a'))))IS NOT(((t0.c1)||(t0.c0))))))) UNION SELECT DISTINCT rt0.c1, t0.c0, rt0.c0, t0.c1, rt0.c2 FROM rt0, t0 WHERE ((((((((t0.c1))>=((x'c2aba10a'))))IS NOT(((t0.c1)||(t0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1, t0.c0, rt0.c0, t0.c1, rt0.c2 FROM rt0, t0;
SELECT ALL t0.c2 FROM rt0, t0 GROUP BY t0.c2;
SELECT t0.c2 FROM rt0, t0 WHERE ((NOT (UPPER(DISTINCT t0.c2)))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM rt0, t0 WHERE ((NOT ((NOT (UPPER(DISTINCT t0.c2)))))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM rt0, t0 WHERE ((((NOT (UPPER(DISTINCT t0.c2)))) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM rt0, t0 GROUP BY t0.c2;
SELECT ALL t0.c2, rt0.c1 FROM rt0 NATURAL JOIN t0 GROUP BY t0.c2, rt0.c1;
SELECT ALL t0.c2, rt0.c1 FROM rt0 NATURAL JOIN t0 GROUP BY t0.c2, rt0.c1 HAVING rt0.c2 UNION ALL SELECT t0.c2, rt0.c1 FROM rt0 NATURAL JOIN t0 GROUP BY t0.c2, rt0.c1 HAVING (NOT (rt0.c2)) UNION ALL SELECT t0.c2, rt0.c1 FROM rt0 NATURAL JOIN t0 GROUP BY t0.c2, rt0.c1 HAVING ((rt0.c2) ISNULL);
SELECT ALL t0.c2, rt0.c1 FROM rt0 NATURAL JOIN t0 GROUP BY t0.c2, rt0.c1;
SELECT ALL t0.c2, rt0.c1 FROM rt0 NATURAL JOIN t0 GROUP BY t0.c2, rt0.c1 HAVING rt0.c2 UNION ALL SELECT t0.c2, rt0.c1 FROM rt0 NATURAL JOIN t0 GROUP BY t0.c2, rt0.c1 HAVING (NOT (rt0.c2)) UNION ALL SELECT t0.c2, rt0.c1 FROM rt0 NATURAL JOIN t0 GROUP BY t0.c2, rt0.c1 HAVING ((rt0.c2) ISNULL);
SELECT ALL t0.c2, rt0.c1 FROM rt0 NATURAL JOIN t0 GROUP BY t0.c2, rt0.c1;
SELECT ALL rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (((((((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)OR(((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))))OR(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)))AND(((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (((((((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)OR(((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))))OR(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)))AND(((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((((((((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)OR(((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))))OR(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)))AND(((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))))) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((t0.c1 COLLATE BINARY)=(((t0.c1)LIKE(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c1 COLLATE BINARY)==(((t0.c1)LIKE(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((t0.c1 COLLATE BINARY)==(((t0.c1)LIKE(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c2;
SELECT ALL t0.c0, rt0.c2 FROM t0, rt0 WHERE ('-1932172805') GROUP BY t0.c0, rt0.c2 UNION SELECT t0.c0, rt0.c2 FROM t0, rt0 WHERE ((NOT ('-1932172805'))) GROUP BY t0.c0, rt0.c2 UNION SELECT t0.c0, rt0.c2 FROM t0, rt0 WHERE ((('-1932172805') ISNULL)) GROUP BY t0.c0, rt0.c2;
SELECT t0.c0, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c2;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (((- (t0.c2)))=((- (t0.c2)))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (NOT ((((- (t0.c2)))==((- (t0.c2)))))) UNION ALL SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (((((- (t0.c2)))==((- (t0.c2))))) ISNULL);
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (((- (t0.c2)))=((- (t0.c2)))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (NOT ((((- (t0.c2)))==((- (t0.c2)))))) UNION ALL SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (((((- (t0.c2)))==((- (t0.c2))))) ISNULL);
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (CASE WHEN t0.c2 COLLATE BINARY THEN highlight('6myt', t0.c0, 0.7640871089716247, '-279936737') END) UNION ALL SELECT * FROM t0 WHERE ((NOT (CASE WHEN t0.c2 COLLATE BINARY THEN highlight('6myt', t0.c0, 0.7640871089716247, '-279936737') END))) UNION ALL SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c2 COLLATE BINARY THEN highlight('6myt', t0.c0, 0.7640871089716247, '-279936737') END) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 END)!=(CASE ''  WHEN rt0.c1 THEN NULL END))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c1 END)!=(CASE ''  WHEN rt0.c1 THEN NULL END))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c1 END)<>(CASE ''  WHEN rt0.c1 THEN NULL END))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, t0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c1;
SELECT rt0.c2, t0.c1 FROM t0, rt0 WHERE (((((rt0.c1)>(t0.c0)))OR(rt0.c1))) GROUP BY rt0.c2, t0.c1 UNION SELECT ALL rt0.c2, t0.c1 FROM t0, rt0 WHERE ((NOT (((((rt0.c1)>(t0.c0)))OR(rt0.c1))))) GROUP BY rt0.c2, t0.c1 UNION SELECT ALL rt0.c2, t0.c1 FROM t0, rt0 WHERE (((((((rt0.c1)>(t0.c0)))OR(rt0.c1))) ISNULL)) GROUP BY rt0.c2, t0.c1;
SELECT ALL rt0.c2, t0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c1;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING AVG(CASE COUNT(t0.c0)  WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING (NOT (AVG(CASE COUNT(t0.c0)  WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END))) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING ((AVG(CASE COUNT(t0.c0)  WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END)) ISNULL);
SELECT t0.c1, t0.c2 FROM t0;
SELECT t0.c1, t0.c2 FROM t0 WHERE (((x'')<<(((t0.c2)|(t0.c2))))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0 WHERE ((NOT (((x'')<<(((t0.c2)|(t0.c2))))))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0 WHERE (((((x'')<<(((t0.c2)|(t0.c2))))) ISNULL));
SELECT t0.c1, t0.c2 FROM t0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE ((((((((rt0.c1))<((t0.c0))))OR((- (t0.c0)))))OR(((((t0.c0)AND(t0.c0)))AND(t0.c2))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT ((((((((rt0.c1))<((t0.c0))))OR((- (t0.c0)))))OR(((((t0.c0)AND(t0.c0)))AND(t0.c2))))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((((((((((rt0.c1))<((t0.c0))))OR((- (t0.c0)))))OR(((((t0.c0)AND(t0.c0)))AND(t0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT t0.c2, rt0.c2 FROM t0, rt0 GROUP BY t0.c2, rt0.c2;
SELECT t0.c2, rt0.c2 FROM t0, rt0 WHERE (((((((rt0.c0)>(rt0.c1)))AND((((rt0.c1)) BETWEEN ((t0.c1)) AND ((rt0.c2))))))AND(rt0.c0))) GROUP BY t0.c2, rt0.c2 UNION SELECT t0.c2, rt0.c2 FROM t0, rt0 WHERE ((NOT (((((((rt0.c0)>(rt0.c1)))AND((((rt0.c1)) BETWEEN ((t0.c1)) AND ((rt0.c2))))))AND(rt0.c0))))) GROUP BY t0.c2, rt0.c2 UNION SELECT t0.c2, rt0.c2 FROM t0, rt0 WHERE (((((((((rt0.c0)>(rt0.c1)))AND((((rt0.c1)) BETWEEN ((t0.c1)) AND ((rt0.c2))))))AND(rt0.c0))) ISNULL)) GROUP BY t0.c2, rt0.c2;
SELECT t0.c2, rt0.c2 FROM t0, rt0 GROUP BY t0.c2, rt0.c2;
SELECT rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING COUNT(GROUP_CONCAT(t0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(t0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(GROUP_CONCAT(t0.c1))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, t0.c1, t0.c0, rt0.c2, t0.c2 FROM t0, rt0;
SELECT ALL rt0.c0, rt0.c1, t0.c1, t0.c0, rt0.c2, t0.c2 FROM t0, rt0 WHERE ((((t0.c1)) BETWEEN (((((t0.c0))>=((t0.c1))))) AND ((t0.c0)))) UNION ALL SELECT rt0.c0, rt0.c1, t0.c1, t0.c0, rt0.c2, t0.c2 FROM t0, rt0 WHERE ((NOT ((((t0.c1)) BETWEEN (((((t0.c0))>=((t0.c1))))) AND ((t0.c0)))))) UNION ALL SELECT rt0.c0, rt0.c1, t0.c1, t0.c0, rt0.c2, t0.c2 FROM t0, rt0 WHERE ((((((t0.c1)) BETWEEN (((((t0.c0))>=((t0.c1))))) AND ((t0.c0)))) ISNULL));
SELECT ALL rt0.c0, rt0.c1, t0.c1, t0.c0, rt0.c2, t0.c2 FROM t0, rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c2) IS FALSE)) IS TRUE)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c2) IS FALSE)) IS TRUE)))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c2) IS FALSE)) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((rt0.c0)AND((((rt0.c1, -1.7976931348623157E308, rt0.c0))<=(('', rt0.c0, rt0.c1))))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)))AND(CAST(rt0.c0 AS BLOB))))OR(((rt0.c0)||(rt0.c0))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((((rt0.c0)AND((((rt0.c1, -1.7976931348623157E308, rt0.c0))<=(('', rt0.c0, rt0.c1))))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)))AND(CAST(rt0.c0 AS BLOB))))OR(((rt0.c0)||(rt0.c0))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((((rt0.c0)AND((((rt0.c1, -1.7976931348623157E308, rt0.c0))<=(('', rt0.c0, rt0.c1))))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)))AND(CAST(rt0.c0 AS BLOB))))OR(((rt0.c0)||(rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((- (t0.c2)))) AND ((NULL)))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN (((- (t0.c2)))) AND ((NULL)))))) UNION ALL SELECT * FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN (((- (t0.c2)))) AND ((NULL)))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (CAST((NOT (rt0.c1)) AS INTEGER)) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST((NOT (rt0.c1)) AS INTEGER)))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST((NOT (rt0.c1)) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c0) IS FALSE) COLLATE BINARY) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c0) IS FALSE) COLLATE BINARY))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c0) IS FALSE) COLLATE BINARY) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ('8c') UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ('8c'))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((('8c') ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM t0 INNER JOIN rt0 ON (((t0.c1)) BETWEEN ((0.3209439364847645)) AND ((((rt0.c2)AND(rt0.c0)))));
SELECT DISTINCT * FROM t0 INNER JOIN rt0 ON (((t0.c1)) BETWEEN ((0.3209439364847645)) AND ((((rt0.c2)AND(rt0.c0))))) WHERE (((rt0.c1 COLLATE BINARY)=(TRIM(DISTINCT t0.c2)))) UNION SELECT DISTINCT * FROM t0 INNER JOIN rt0 ON (((t0.c1)) BETWEEN ((0.3209439364847645)) AND ((((rt0.c2)AND(rt0.c0))))) WHERE ((NOT (((rt0.c1 COLLATE BINARY)=(TRIM(DISTINCT t0.c2)))))) UNION SELECT DISTINCT * FROM t0 INNER JOIN rt0 ON (((t0.c1)) BETWEEN ((0.3209439364847645)) AND ((((rt0.c2)AND(rt0.c0))))) WHERE (((((rt0.c1 COLLATE BINARY)=(TRIM(DISTINCT t0.c2)))) ISNULL));
SELECT DISTINCT * FROM t0 INNER JOIN rt0 ON (((t0.c1)) BETWEEN ((0.3209439364847645)) AND ((((rt0.c2)AND(rt0.c0)))));
SELECT rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, t0 WHERE (LAST_INSERT_ROWID()) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((NOT (LAST_INSERT_ROWID()))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0, t0 WHERE (((LAST_INSERT_ROWID()) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c0;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING GROUP_CONCAT(AVG(t0.c1)) UNION ALL SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING (NOT (GROUP_CONCAT(AVG(t0.c1)))) UNION ALL SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING ((GROUP_CONCAT(AVG(t0.c1))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)) COLLATE RTRIM) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)) COLLATE RTRIM))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)) COLLATE RTRIM) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) NOT NULL)) NOT BETWEEN (((rt0.c2) NOTNULL)) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1) NOT NULL)) NOT BETWEEN (((rt0.c2) NOTNULL)) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1) NOT NULL)) NOT BETWEEN (((rt0.c2) NOTNULL)) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 WHERE (NULL) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 WHERE ((NOT (NULL))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 WHERE (((NULL) ISNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL rt0.c2, t0.c1, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c1, t0.c0, rt0.c0;
SELECT rt0.c2, t0.c1, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c1, t0.c0, rt0.c0 HAVING SUM(MAX(SUM(t0.c1))) UNION ALL SELECT rt0.c2, t0.c1, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c1, t0.c0, rt0.c0 HAVING (NOT (SUM(MAX(SUM(t0.c1))))) UNION ALL SELECT ALL rt0.c2, t0.c1, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c1, t0.c0, rt0.c0 HAVING ((SUM(MAX(SUM(t0.c1)))) ISNULL);
SELECT ALL rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (UPPER(DISTINCT ((rt0.c1)>=(rt0.c0)))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (UPPER(DISTINCT ((rt0.c1)>=(rt0.c0)))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((UPPER(DISTINCT ((rt0.c1)>=(rt0.c0)))) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE (- (t0.c2))  WHEN CAST(t0.c1 AS REAL) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))) END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE (- (t0.c2))  WHEN CAST(t0.c1 AS REAL) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))) END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE (- (t0.c2))  WHEN CAST(t0.c1 AS REAL) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))) END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c2, t0.c0, rt0.c0, t0.c1, rt0.c1, t0.c2 FROM rt0 LEFT OUTER JOIN t0 ON ((CAST('_ck>b7' AS REAL)) NOTNULL) GROUP BY rt0.c2, t0.c0, rt0.c0, t0.c1, rt0.c1, t0.c2;
SELECT rt0.c2, t0.c0, rt0.c0, t0.c1, rt0.c1, t0.c2 FROM rt0 LEFT OUTER JOIN t0 ON ((CAST('_ck>b7' AS REAL)) NOTNULL) WHERE (LOWER(((t0.c0)IS NOT(rt0.c0)))) GROUP BY rt0.c2, t0.c0, rt0.c0, t0.c1, rt0.c1, t0.c2 UNION SELECT rt0.c2, t0.c0, rt0.c0, t0.c1, rt0.c1, t0.c2 FROM rt0 LEFT OUTER JOIN t0 ON ((CAST('_ck>b7' AS REAL)) NOTNULL) WHERE ((NOT (LOWER(((t0.c0)IS NOT(rt0.c0)))))) GROUP BY rt0.c2, t0.c0, rt0.c0, t0.c1, rt0.c1, t0.c2 UNION SELECT ALL rt0.c2, t0.c0, rt0.c0, t0.c1, rt0.c1, t0.c2 FROM rt0 LEFT OUTER JOIN t0 ON ((CAST('_ck>b7' AS REAL)) NOTNULL) WHERE (((LOWER(((t0.c0)IS NOT(rt0.c0)))) ISNULL)) GROUP BY rt0.c2, t0.c0, rt0.c0, t0.c1, rt0.c1, t0.c2;
SELECT ALL rt0.c2, t0.c0, rt0.c0, t0.c1, rt0.c1, t0.c2 FROM rt0 LEFT OUTER JOIN t0 ON ((CAST('_ck>b7' AS REAL)) NOTNULL) GROUP BY rt0.c2, t0.c0, rt0.c0, t0.c1, rt0.c1, t0.c2;
SELECT rt0.c2, rt0.c1, t0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c2, rt0.c0;
SELECT rt0.c2, rt0.c1, t0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c2, rt0.c0 HAVING CASE WHEN MIN(MIN(t0.c0)) THEN json_type(GROUP_CONCAT(TOTAL(TOTAL(COUNT(*))))) WHEN AVG(rt0.c1) THEN COUNT(*) WHEN ((GROUP_CONCAT(rt0.c2))!=(t0.c2)) THEN MIN(SUM(COUNT(*))) COLLATE BINARY WHEN (~ (t0.c2)) THEN MAX(GROUP_CONCAT(t0.c1)) WHEN t0.c2 THEN CAST(TOTAL(SUM(rt0.c2)) AS REAL) WHEN COUNT(*) COLLATE NOCASE THEN MIN(COUNT(*)) WHEN '-1420347434' THEN GROUP_CONCAT(MIN(GROUP_CONCAT(SUM(t0.c1)))) ELSE CASE t0.c1  WHEN MAX(TOTAL(TOTAL(AVG(TOTAL(rt0.c2))))) THEN GROUP_CONCAT(TOTAL(MIN(MAX(rt0.c0)))) WHEN MIN(SUM(TOTAL(SUM(0.32537484711010567)))) THEN rt0.c0 WHEN AVG(t0.c0) THEN '-614607882' ELSE t0.c1 END END UNION ALL SELECT ALL rt0.c2, rt0.c1, t0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c2, rt0.c0 HAVING (NOT (CASE WHEN MIN(MIN(t0.c0)) THEN json_type(GROUP_CONCAT(TOTAL(TOTAL(COUNT(*))))) WHEN AVG(rt0.c1) THEN COUNT(*) WHEN ((GROUP_CONCAT(rt0.c2))<>(t0.c2)) THEN MIN(SUM(COUNT(*))) COLLATE BINARY WHEN (~ (t0.c2)) THEN MAX(GROUP_CONCAT(t0.c1)) WHEN t0.c2 THEN CAST(TOTAL(SUM(rt0.c2)) AS REAL) WHEN COUNT(*) COLLATE NOCASE THEN MIN(COUNT(*)) WHEN '-1420347434' THEN GROUP_CONCAT(MIN(GROUP_CONCAT(SUM(t0.c1)))) ELSE CASE t0.c1  WHEN MAX(TOTAL(TOTAL(AVG(TOTAL(rt0.c2))))) THEN GROUP_CONCAT(TOTAL(MIN(MAX(rt0.c0)))) WHEN MIN(SUM(TOTAL(SUM(0.32537484711010567)))) THEN rt0.c0 WHEN AVG(t0.c0) THEN '-614607882' ELSE t0.c1 END END)) UNION ALL SELECT ALL rt0.c2, rt0.c1, t0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c2, rt0.c0 HAVING ((CASE WHEN MIN(MIN(t0.c0)) THEN json_type(GROUP_CONCAT(TOTAL(TOTAL(COUNT(*))))) WHEN AVG(rt0.c1) THEN COUNT(*) WHEN ((GROUP_CONCAT(rt0.c2))!=(t0.c2)) THEN MIN(SUM(COUNT(*))) COLLATE BINARY WHEN (~ (t0.c2)) THEN MAX(GROUP_CONCAT(t0.c1)) WHEN t0.c2 THEN CAST(TOTAL(SUM(rt0.c2)) AS REAL) WHEN COUNT(*) COLLATE NOCASE THEN MIN(COUNT(*)) WHEN '-1420347434' THEN GROUP_CONCAT(MIN(GROUP_CONCAT(SUM(t0.c1)))) ELSE CASE t0.c1  WHEN MAX(TOTAL(TOTAL(AVG(TOTAL(rt0.c2))))) THEN GROUP_CONCAT(TOTAL(MIN(MAX(rt0.c0)))) WHEN MIN(SUM(TOTAL(SUM(0.32537484711010567)))) THEN rt0.c0 WHEN AVG(t0.c0) THEN '-614607882' ELSE t0.c1 END END) ISNULL);
SELECT * FROM t0, rt0;
SELECT ALL * FROM t0, rt0 WHERE (COALESCE(DISTINCT CAST(rt0.c2 AS BLOB), -1.420347434E9)) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (COALESCE(DISTINCT CAST(rt0.c2 AS BLOB), -1.420347434E9)))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE (((COALESCE(DISTINCT CAST(rt0.c2 AS BLOB), -1.420347434E9)) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT rt0.c2 FROM rt0, t0;
SELECT DISTINCT rt0.c2 FROM rt0, t0 WHERE ((((((t0.c2 IN ()))AND(TRIM(rt0.c1))))OR(((t0.c1) NOT NULL)))) UNION SELECT DISTINCT rt0.c2 FROM rt0, t0 WHERE ((NOT ((((((t0.c2 IN ()))AND(TRIM(rt0.c1))))OR(((t0.c1) NOT NULL)))))) UNION SELECT DISTINCT rt0.c2 FROM rt0, t0 WHERE ((((((((t0.c2 IN ()))AND(TRIM(rt0.c1))))OR(((t0.c1) NOT NULL)))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0, t0;
SELECT t0.c2, t0.c1, rt0.c2, rt0.c1, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON NULL GROUP BY t0.c2, t0.c1, rt0.c2, rt0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1, rt0.c2, rt0.c1, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON NULL WHERE ((((((t0.c2)AND(rt0.c1)))AND(t0.c0)) IN ())) GROUP BY t0.c2, t0.c1, rt0.c2, rt0.c1, t0.c0 UNION SELECT t0.c2, t0.c1, rt0.c2, rt0.c1, t0.c0 FROM rt0 NOT INDEXED RIGHT OUTER JOIN t0 ON NULL WHERE ((NOT ((((((t0.c2)AND(rt0.c1)))AND(t0.c0)) IN ())))) GROUP BY t0.c2, t0.c1, rt0.c2, rt0.c1, t0.c0 UNION SELECT ALL t0.c2, t0.c1, rt0.c2, rt0.c1, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON NULL WHERE ((((((((t0.c2)AND(rt0.c1)))AND(t0.c0)) IN ())) ISNULL)) GROUP BY t0.c2, t0.c1, rt0.c2, rt0.c1, t0.c0;
SELECT t0.c2, t0.c1, rt0.c2, rt0.c1, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON NULL GROUP BY t0.c2, t0.c1, rt0.c2, rt0.c1, t0.c0;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING (- (GROUP_CONCAT(t0.c2))) UNION ALL SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING (NOT ((- (GROUP_CONCAT(t0.c2))))) UNION ALL SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING (((- (GROUP_CONCAT(t0.c2)))) ISNULL);
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING (- (GROUP_CONCAT(t0.c2))) UNION ALL SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING (NOT ((- (GROUP_CONCAT(t0.c2))))) UNION ALL SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING (((- (GROUP_CONCAT(t0.c2)))) ISNULL);
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c2, rt0.c2)))+(rt0.c1 COLLATE NOCASE))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c0 IN (rt0.c2, rt0.c2)))+(rt0.c1 COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c0 IN (rt0.c2, rt0.c2)))+(rt0.c1 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (x'') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0 WHERE (CASE (NOT (t0.c2))  WHEN (- (t0.c1)) THEN t0.c1 ELSE (((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))) END) GROUP BY t0.c2, t0.c1 UNION SELECT t0.c2, t0.c1 FROM t0 WHERE ((NOT (CASE (NOT (t0.c2))  WHEN (- (t0.c1)) THEN t0.c1 ELSE (((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))) END))) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM t0 WHERE (((CASE (NOT (t0.c2))  WHEN (- (t0.c1)) THEN t0.c1 ELSE (((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))) END) ISNULL)) GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT ALL rt0.c0 FROM t0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL rt0.c0 FROM t0, rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)|(rt0.c0)))OR((- (rt0.c0)))))OR(rt0.c2 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((((rt0.c0)|(rt0.c0)))OR((- (rt0.c0)))))OR(rt0.c2 COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((rt0.c0)|(rt0.c0)))OR((- (rt0.c0)))))OR(rt0.c2 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (0.10964823401563761) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (0.10964823401563761))) UNION SELECT DISTINCT * FROM rt0 WHERE (((0.10964823401563761) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM t0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM t0, rt0 WHERE (((((t0.c1) ISNULL)) BETWEEN ((~ (t0.c1))) AND ((~ (rt0.c2))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM t0, rt0 WHERE ((NOT (((((t0.c1) ISNULL)) BETWEEN ((~ (t0.c1))) AND ((~ (rt0.c2))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM t0, rt0 WHERE (((((((t0.c1) ISNULL)) BETWEEN ((~ (t0.c1))) AND ((~ (rt0.c2))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM t0, rt0 GROUP BY rt0.c1;
SELECT t0.c1, rt0.c1, t0.c2, rt0.c2 FROM t0, rt0 GROUP BY t0.c1, rt0.c1, t0.c2, rt0.c2;
SELECT ALL t0.c1, rt0.c1, t0.c2, rt0.c2 FROM t0, rt0 GROUP BY t0.c1, rt0.c1, t0.c2, rt0.c2 HAVING ((('K\눓XjSv6' IN ())) IS FALSE) UNION ALL SELECT ALL t0.c1, rt0.c1, t0.c2, rt0.c2 FROM t0, rt0 GROUP BY t0.c1, rt0.c1, t0.c2, rt0.c2 HAVING (NOT (((('K\눓XjSv6' IN ())) IS FALSE))) UNION ALL SELECT ALL t0.c1, rt0.c1, t0.c2, rt0.c2 FROM t0, rt0 GROUP BY t0.c1, rt0.c1, t0.c2, rt0.c2 HAVING ((((('K\눓XjSv6' IN ())) IS FALSE)) ISNULL);
SELECT t0.c1, rt0.c1, t0.c2, rt0.c2 FROM t0, rt0 GROUP BY t0.c1, rt0.c1, t0.c2, rt0.c2;
SELECT ALL t0.c1, rt0.c1, t0.c2, rt0.c2 FROM t0, rt0 GROUP BY t0.c1, rt0.c1, t0.c2, rt0.c2 HAVING ((('K\눓XjSv6' IN ())) IS FALSE) UNION ALL SELECT ALL t0.c1, rt0.c1, t0.c2, rt0.c2 FROM t0, rt0 GROUP BY t0.c1, rt0.c1, t0.c2, rt0.c2 HAVING (NOT (((('K\눓XjSv6' IN ())) IS FALSE))) UNION ALL SELECT ALL t0.c1, rt0.c1, t0.c2, rt0.c2 FROM t0, rt0 GROUP BY t0.c1, rt0.c1, t0.c2, rt0.c2 HAVING ((((('K\눓XjSv6' IN ())) IS FALSE)) ISNULL);
SELECT t0.c1, rt0.c1, t0.c2, rt0.c2 FROM t0, rt0 GROUP BY t0.c1, rt0.c1, t0.c2, rt0.c2;
SELECT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((rt0.c0 IN ()))IS NOT(rt0.c0))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0 IN ()))IS NOT(rt0.c0))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((((((rt0.c0 IN ()))IS NOT(rt0.c0))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT t0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))!=((x'')));
SELECT DISTINCT t0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))<>((x''))) WHERE (((rt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0)) COLLATE BINARY) UNION SELECT DISTINCT t0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))<>((x''))) WHERE ((NOT (((rt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT t0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))<>((x''))) WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))!=((x'')));
SELECT ALL t0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c1;
SELECT t0.c0, rt0.c1 FROM t0, rt0 WHERE (COALESCE(((rt0.c2)OR(t0.c2)), CASE NULL  WHEN rt0.c2 THEN rt0.c1 ELSE t0.c2 END, CAST(t0.c0 AS TEXT), ((t0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) GROUP BY t0.c0, rt0.c1 UNION SELECT ALL t0.c0, rt0.c1 FROM t0, rt0 WHERE ((NOT (COALESCE(((rt0.c2)OR(t0.c2)), CASE NULL  WHEN rt0.c2 THEN rt0.c1 ELSE t0.c2 END, CAST(t0.c0 AS TEXT), ((t0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))) GROUP BY t0.c0, rt0.c1 UNION SELECT t0.c0, rt0.c1 FROM t0, rt0 WHERE (((COALESCE(((rt0.c2)OR(t0.c2)), CASE NULL  WHEN rt0.c2 THEN rt0.c1 ELSE t0.c2 END, CAST(t0.c0 AS TEXT), ((t0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) ISNULL)) GROUP BY t0.c0, rt0.c1;
SELECT ALL t0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c1;
SELECT rt0.c2, t0.c1, rt0.c0 FROM rt0 NOT INDEXED, t0 GROUP BY rt0.c2, t0.c1, rt0.c0;
SELECT ALL rt0.c2, t0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c1, rt0.c0 HAVING CAST(rt0.c2 AS NUMERIC) UNION ALL SELECT ALL rt0.c2, t0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c1, rt0.c0 HAVING (NOT (CAST(rt0.c2 AS NUMERIC))) UNION ALL SELECT ALL rt0.c2, t0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c1, rt0.c0 HAVING ((CAST(rt0.c2 AS NUMERIC)) ISNULL);
SELECT rt0.c2, t0.c1, rt0.c0 FROM rt0 NOT INDEXED, t0 GROUP BY rt0.c2, t0.c1, rt0.c0;
SELECT ALL rt0.c2, t0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c1, rt0.c0 HAVING CAST(rt0.c2 AS NUMERIC) UNION ALL SELECT ALL rt0.c2, t0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c1, rt0.c0 HAVING (NOT (CAST(rt0.c2 AS NUMERIC))) UNION ALL SELECT ALL rt0.c2, t0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c1, rt0.c0 HAVING ((CAST(rt0.c2 AS NUMERIC)) ISNULL);
SELECT rt0.c2, t0.c1, rt0.c0 FROM rt0 NOT INDEXED, t0 GROUP BY rt0.c2, t0.c1, rt0.c0;
SELECT t0.c2 FROM t0, rt0;
SELECT t0.c2 FROM t0, rt0 WHERE (((json_array(rt0.c0, t0.c2, NULL, rt0.c1)) ISNULL)) UNION ALL SELECT ALL t0.c2 FROM t0, rt0 WHERE ((NOT (((json_array(rt0.c0, t0.c2, NULL, rt0.c1)) ISNULL)))) UNION ALL SELECT ALL t0.c2 FROM t0, rt0 WHERE (((((json_array(rt0.c0, t0.c2, NULL, rt0.c1)) ISNULL)) ISNULL));
SELECT t0.c2 FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (x'') UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ('-426710630') GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ('-426710630'))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((('-426710630') ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MAX(CAST(GROUP_CONCAT(SUM(rt0.c0)) AS BLOB)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MAX(CAST(GROUP_CONCAT(SUM(rt0.c0)) AS BLOB)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MAX(CAST(GROUP_CONCAT(SUM(rt0.c0)) AS BLOB))) ISNULL);
SELECT * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE (((((((rt0.c1)OR(0.19276665105297053)))OR('-464946608')))+(((t0.c2)IS(rt0.c1))))) UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT (((((((rt0.c1)OR(0.19276665105297053)))OR('-464946608')))+(((t0.c2)IS(rt0.c1))))))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE (((((((((rt0.c1)OR(0.19276665105297053)))OR('-464946608')))+(((t0.c2)IS(rt0.c1))))) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN SQLITE_VERSION() END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN rt0.c1 THEN SQLITE_VERSION() END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN SQLITE_VERSION() END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (COALESCE(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END, rt0.c2)) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (COALESCE(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END, rt0.c2)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((COALESCE(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END, rt0.c2)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING NULL UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (NOT (NULL)) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING ((NULL) ISNULL);
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING NULL UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (NOT (NULL)) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING ((NULL) ISNULL);
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT rt0.c2, rt0.c0 FROM t0, rt0;
SELECT rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((((rt0.c0)||(t0.c0)) IN (((t0.c0)/(t0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((NOT ((((rt0.c0)||(t0.c0)) IN (((t0.c0)/(t0.c0))))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((((((rt0.c0)||(t0.c0)) IN (((t0.c0)/(t0.c0))))) ISNULL));
SELECT rt0.c2, rt0.c0 FROM t0, rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE ((+ (rt0.c1)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT ((+ (rt0.c1)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((((+ (rt0.c1)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((t0.c2) NOT BETWEEN ((~ (t0.c2))) AND ('654861086'))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT (((t0.c2) NOT BETWEEN ((~ (t0.c2))) AND ('654861086'))))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((((t0.c2) NOT BETWEEN ((~ (t0.c2))) AND ('654861086'))) ISNULL)) GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT rt0.c1, rt0.c0, t0.c2, t0.c1, t0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON (((((rt0.c2)OR(rt0.c0)))OR(t0.c1)) IN ()) GROUP BY rt0.c1, rt0.c0, t0.c2, t0.c1, t0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, t0.c2, t0.c1, t0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON (((((rt0.c2)OR(rt0.c0)))OR(t0.c1)) IN ()) GROUP BY rt0.c1, rt0.c0, t0.c2, t0.c1, t0.c0, rt0.c2 HAVING ((((MIN(rt0.c1))AND(((((((((GROUP_CONCAT(t0.c2))OR(t0.c0)))AND(SUM(t0.c1))))OR(NULL)))AND(TOTAL(TOTAL(rt0.c1)))))))AND(((rt0.c2) NOT NULL))) UNION ALL SELECT ALL rt0.c1, rt0.c0, t0.c2, t0.c1, t0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON (((((rt0.c2)OR(rt0.c0)))OR(t0.c1)) IN ()) GROUP BY rt0.c1, rt0.c0, t0.c2, t0.c1, t0.c0, rt0.c2 HAVING (NOT (((((MIN(rt0.c1))AND(((((((((GROUP_CONCAT(t0.c2))OR(t0.c0)))AND(SUM(t0.c1))))OR(NULL)))AND(TOTAL(TOTAL(rt0.c1)))))))AND(((rt0.c2) NOT NULL))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, t0.c2, t0.c1, t0.c0, rt0.c2 FROM rt0 LEFT OUTER JOIN t0 ON (((((rt0.c2)OR(rt0.c0)))OR(t0.c1)) IN ()) GROUP BY rt0.c1, rt0.c0, t0.c2, t0.c1, t0.c0, rt0.c2 HAVING ((((((MIN(rt0.c1))AND(((((((((GROUP_CONCAT(t0.c2))OR(t0.c0)))AND(SUM(t0.c1))))OR(NULL)))AND(TOTAL(TOTAL(rt0.c1)))))))AND(((rt0.c2) NOT NULL)))) ISNULL);
SELECT * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE (rt0.c1) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT rt0.c2 FROM t0, rt0;
SELECT DISTINCT rt0.c2 FROM t0, rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c2 FROM t0, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c2 FROM t0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c2 FROM t0, rt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST((t0.c2 IN ()) AS BLOB)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CAST((t0.c2 IN ()) AS BLOB)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CAST((t0.c2 IN ()) AS BLOB)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((SUM(rt0.c1)) NOT BETWEEN (json_array_length(rt0.c1)) AND (COUNT(COUNT(*)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((SUM(rt0.c1)) NOT BETWEEN (json_array_length(rt0.c1)) AND (COUNT(COUNT(*)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((SUM(rt0.c1)) NOT BETWEEN (json_array_length(rt0.c1)) AND (COUNT(COUNT(*))))) ISNULL);
SELECT ALL t0.c0, t0.c2 FROM t0;
SELECT ALL t0.c0, t0.c2 FROM t0 WHERE (((((CASE WHEN t0.c2 THEN t0.c0 END)AND(((t0.c1) BETWEEN (t0.c2) AND (t0.c1)))))OR((((0.6412238436503961))>((t0.c1)))))) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 WHERE ((NOT (((((CASE WHEN t0.c2 THEN t0.c0 END)AND(((t0.c1) BETWEEN (t0.c2) AND (t0.c1)))))OR((((0.6412238436503961))>((t0.c1)))))))) UNION ALL SELECT t0.c0, t0.c2 FROM t0 WHERE (((((((CASE WHEN t0.c2 THEN t0.c0 END)AND(((t0.c1) BETWEEN (t0.c2) AND (t0.c1)))))OR((((0.6412238436503961))>((t0.c1)))))) ISNULL));
SELECT ALL t0.c0, t0.c2 FROM t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((2000766814) IS TRUE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((2000766814) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((2000766814) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((((rt0.c1)GLOB(rt0.c1))) ISNULL)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c1)GLOB(rt0.c1))) ISNULL)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((((rt0.c1)GLOB(rt0.c1))) ISNULL)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING SUM(t0.c2) COLLATE NOCASE UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (NOT (SUM(t0.c2) COLLATE NOCASE)) UNION ALL SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING ((SUM(t0.c2) COLLATE NOCASE) ISNULL);
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING SUM(t0.c2) COLLATE NOCASE UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (NOT (SUM(t0.c2) COLLATE NOCASE)) UNION ALL SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING ((SUM(t0.c2) COLLATE NOCASE) ISNULL);
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT ALL rt0.c0, t0.c1, t0.c2, t0.c0 FROM t0, rt0;
SELECT ALL rt0.c0, t0.c1, t0.c2, t0.c0 FROM t0, rt0 WHERE (NULL) UNION ALL SELECT rt0.c0, t0.c1, t0.c2, t0.c0 FROM t0, rt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt0.c0, t0.c1, t0.c2, t0.c0 FROM t0, rt0 WHERE (((NULL) ISNULL));
SELECT ALL rt0.c0, t0.c1, t0.c2, t0.c0 FROM t0, rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c2 AS BLOB))<(CASE WHEN t0.c0 THEN t0.c2 ELSE '-1420347434' END))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((CAST(t0.c2 AS BLOB))<(CASE WHEN t0.c0 THEN t0.c2 ELSE '-1420347434' END))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((CAST(t0.c2 AS BLOB))<(CASE WHEN t0.c0 THEN t0.c2 ELSE '-1420347434' END))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c2, t0.c0 UNION SELECT ALL t0.c2, t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c0, rt0.c0, rt0.c1, t0.c2 FROM rt0 LEFT OUTER JOIN t0 ON ((rt0.c0) IS FALSE) COLLATE BINARY GROUP BY t0.c0, rt0.c0, rt0.c1, t0.c2;
SELECT t0.c0, rt0.c0, rt0.c1, t0.c2 FROM rt0 LEFT OUTER JOIN t0 ON ((rt0.c0) IS FALSE) COLLATE BINARY GROUP BY t0.c0, rt0.c0, rt0.c1, t0.c2 HAVING ((TOTAL(t0.c0))<=(COUNT(TOTAL(AVG(MAX(rt0.c0)))))) UNION ALL SELECT ALL t0.c0, rt0.c0, rt0.c1, t0.c2 FROM rt0 LEFT OUTER JOIN t0 ON ((rt0.c0) IS FALSE) COLLATE BINARY GROUP BY t0.c0, rt0.c0, rt0.c1, t0.c2 HAVING (NOT (((TOTAL(t0.c0))<=(COUNT(TOTAL(AVG(MAX(rt0.c0)))))))) UNION ALL SELECT t0.c0, rt0.c0, rt0.c1, t0.c2 FROM rt0 LEFT OUTER JOIN t0 ON ((rt0.c0) IS FALSE) COLLATE BINARY GROUP BY t0.c0, rt0.c0, rt0.c1, t0.c2 HAVING ((((TOTAL(t0.c0))<=(COUNT(TOTAL(AVG(MAX(rt0.c0))))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((((0.23256966215798291)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), '', ((rt0.c2)==(rt0.c1))))<>((((rt0.c2) IS TRUE), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)), ((rt0.c1) BETWEEN ('0.13514550577071893') AND (NULL)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((0.23256966215798291)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), '', ((rt0.c2)==(rt0.c1))))<>((((rt0.c2) IS TRUE), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)), ((rt0.c1) BETWEEN ('0.13514550577071893') AND (NULL)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((0.23256966215798291)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), '', ((rt0.c2)==(rt0.c1))))!=((((rt0.c2) IS TRUE), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)), ((rt0.c1) BETWEEN ('0.13514550577071893') AND (NULL)))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT t0.c1 FROM t0, rt0;
SELECT DISTINCT t0.c1 FROM t0, rt0 WHERE (IFNULL(CAST(rt0.c0 AS INTEGER), rt0.c0)) UNION SELECT DISTINCT t0.c1 FROM t0, rt0 WHERE ((NOT (IFNULL(CAST(rt0.c0 AS INTEGER), rt0.c0)))) UNION SELECT DISTINCT t0.c1 FROM t0, rt0 WHERE (((IFNULL(CAST(rt0.c0 AS INTEGER), rt0.c0)) ISNULL));
SELECT DISTINCT t0.c1 FROM t0, rt0;
SELECT t0.c2, t0.c1, rt0.c2, rt0.c0, t0.c0 FROM t0 CROSS JOIN rt0 ON CAST(t0.c2 COLLATE RTRIM AS INTEGER) GROUP BY t0.c2, t0.c1, rt0.c2, rt0.c0, t0.c0;
SELECT ALL t0.c2, t0.c1, rt0.c2, rt0.c0, t0.c0 FROM t0 CROSS JOIN rt0 ON CAST(t0.c2 COLLATE RTRIM AS INTEGER) WHERE ((((t0.c0, t0.c2, rt0.c0)) NOT BETWEEN ((CAST('[(?o' AS INTEGER), CASE rt0.c2  WHEN t0.c1 THEN rt0.c2 END, (rt0.c2 IN (t0.c0)))) AND ((LIKELIHOOD(t0.c1, 0.3143199266153641), CASE WHEN t0.c0 THEN t0.c0 END, (- (t0.c0)))))) GROUP BY t0.c2, t0.c1, rt0.c2, rt0.c0, t0.c0 UNION SELECT ALL t0.c2, t0.c1, rt0.c2, rt0.c0, t0.c0 FROM t0 CROSS JOIN rt0 ON CAST(t0.c2 COLLATE RTRIM AS INTEGER) WHERE ((NOT ((((t0.c0, t0.c2, rt0.c0)) NOT BETWEEN ((CAST('[(?o' AS INTEGER), CASE rt0.c2  WHEN t0.c1 THEN rt0.c2 END, (rt0.c2 IN (t0.c0)))) AND ((LIKELIHOOD(t0.c1, 0.3143199266153641), CASE WHEN t0.c0 THEN t0.c0 END, (- (t0.c0)))))))) GROUP BY t0.c2, t0.c1, rt0.c2, rt0.c0, t0.c0 UNION SELECT ALL t0.c2, t0.c1, rt0.c2, rt0.c0, t0.c0 FROM t0 CROSS JOIN rt0 ON CAST(t0.c2 COLLATE RTRIM AS INTEGER) WHERE ((((((t0.c0, t0.c2, rt0.c0)) NOT BETWEEN ((CAST('[(?o' AS INTEGER), CASE rt0.c2  WHEN t0.c1 THEN rt0.c2 END, (rt0.c2 IN (t0.c0)))) AND ((LIKELIHOOD(t0.c1, 0.3143199266153641), CASE WHEN t0.c0 THEN t0.c0 END, (- (t0.c0)))))) ISNULL)) GROUP BY t0.c2, t0.c1, rt0.c2, rt0.c0, t0.c0;
SELECT t0.c2, t0.c1, rt0.c2, rt0.c0, t0.c0 FROM t0 CROSS JOIN rt0 ON CAST(t0.c2 COLLATE RTRIM AS INTEGER) GROUP BY t0.c2, t0.c1, rt0.c2, rt0.c0, t0.c0;
SELECT t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (((t0.c0, 'W,\Q', rt0.c1)) BETWEEN (((rt0.c0 IN (rt0.c1)), (rt0.c2 IN ()), 0.7979534517909129)) AND ((MAX(-2134949258, t0.c2), ((((rt0.c2)AND(t0.c1)))OR(t0.c2)), (((t0.c2))==((t0.c1)))))) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (((t0.c0, 'W,\Q', rt0.c1)) BETWEEN (((rt0.c0 IN (rt0.c1)), (rt0.c2 IN ()), 0.7979534517909129)) AND ((MAX(-2134949258, t0.c2), ((((rt0.c2)AND(t0.c1)))OR(t0.c2)), (((t0.c2))=((t0.c1)))))) GROUP BY t0.c0 HAVING rt0.c1 UNION ALL SELECT t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (((t0.c0, 'W,\Q', rt0.c1)) BETWEEN (((rt0.c0 IN (rt0.c1)), (rt0.c2 IN ()), 0.7979534517909129)) AND ((MAX(-2134949258, t0.c2), ((((rt0.c2)AND(t0.c1)))OR(t0.c2)), (((t0.c2))==((t0.c1)))))) GROUP BY t0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (((t0.c0, 'W,\Q', rt0.c1)) BETWEEN (((rt0.c0 IN (rt0.c1)), (rt0.c2 IN ()), 0.7979534517909129)) AND ((MAX(-2134949258, t0.c2), ((((rt0.c2)AND(t0.c1)))OR(t0.c2)), (((t0.c2))==((t0.c1)))))) GROUP BY t0.c0 HAVING ((rt0.c1) ISNULL);
SELECT t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (((t0.c0, 'W,\Q', rt0.c1)) BETWEEN (((rt0.c0 IN (rt0.c1)), (rt0.c2 IN ()), 0.7979534517909129)) AND ((MAX(-2134949258, t0.c2), ((((rt0.c2)AND(t0.c1)))OR(t0.c2)), (((t0.c2))==((t0.c1)))))) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (((t0.c0, 'W,\Q', rt0.c1)) BETWEEN (((rt0.c0 IN (rt0.c1)), (rt0.c2 IN ()), 0.7979534517909129)) AND ((MAX(-2134949258, t0.c2), ((((rt0.c2)AND(t0.c1)))OR(t0.c2)), (((t0.c2))=((t0.c1)))))) GROUP BY t0.c0 HAVING rt0.c1 UNION ALL SELECT t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (((t0.c0, 'W,\Q', rt0.c1)) BETWEEN (((rt0.c0 IN (rt0.c1)), (rt0.c2 IN ()), 0.7979534517909129)) AND ((MAX(-2134949258, t0.c2), ((((rt0.c2)AND(t0.c1)))OR(t0.c2)), (((t0.c2))==((t0.c1)))))) GROUP BY t0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (((t0.c0, 'W,\Q', rt0.c1)) BETWEEN (((rt0.c0 IN (rt0.c1)), (rt0.c2 IN ()), 0.7979534517909129)) AND ((MAX(-2134949258, t0.c2), ((((rt0.c2)AND(t0.c1)))OR(t0.c2)), (((t0.c2))==((t0.c1)))))) GROUP BY t0.c0 HAVING ((rt0.c1) ISNULL);
SELECT t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (((t0.c0, 'W,\Q', rt0.c1)) BETWEEN (((rt0.c0 IN (rt0.c1)), (rt0.c2 IN ()), 0.7979534517909129)) AND ((MAX(-2134949258, t0.c2), ((((rt0.c2)AND(t0.c1)))OR(t0.c2)), (((t0.c2))==((t0.c1)))))) GROUP BY t0.c0;
SELECT ALL t0.c2 FROM t0;
SELECT t0.c2 FROM t0 WHERE (CASE WHEN CAST(t0.c1 AS REAL) THEN t0.c0 ELSE ((x'') IS FALSE) END) UNION ALL SELECT t0.c2 FROM t0 WHERE ((NOT (CASE WHEN CAST(t0.c1 AS REAL) THEN t0.c0 ELSE ((x'') IS FALSE) END))) UNION ALL SELECT ALL t0.c2 FROM t0 WHERE (((CASE WHEN CAST(t0.c1 AS REAL) THEN t0.c0 ELSE ((x'') IS FALSE) END) ISNULL));
SELECT ALL t0.c2 FROM t0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((rt0.c2 IN (((rt0.c0) IS FALSE)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((rt0.c2 IN (((rt0.c0) IS FALSE)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((rt0.c2 IN (((rt0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (CASE WHEN NULLIF(DISTINCT rt0.c1, rt0.c1) THEN CASE WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE 0.10543289438230252 END WHEN (NOT (rt0.c1)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN ((rt0.c0)>=(x'')) THEN rt0.c1 ELSE ((rt0.c2)/(rt0.c1)) END) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN NULLIF(DISTINCT rt0.c1, rt0.c1) THEN CASE WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE 0.10543289438230252 END WHEN (NOT (rt0.c1)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN ((rt0.c0)>=(x'')) THEN rt0.c1 ELSE ((rt0.c2)/(rt0.c1)) END))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((CASE WHEN NULLIF(DISTINCT rt0.c1, rt0.c1) THEN CASE WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE 0.10543289438230252 END WHEN (NOT (rt0.c1)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN ((rt0.c0)>=(x'')) THEN rt0.c1 ELSE ((rt0.c2)/(rt0.c1)) END) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING rt0.c1 UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING rt0.c1 UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT * FROM t0, rt0;
SELECT ALL * FROM t0, rt0 WHERE (((('1595632981'))=((t0.c0))) COLLATE BINARY) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (((('1595632981'))=((t0.c0))) COLLATE BINARY))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE (((((('1595632981'))==((t0.c0))) COLLATE BINARY) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (json((- (rt0.c1)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (json((- (rt0.c1)))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((json((- (rt0.c1)))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((NULLIF(DISTINCT rt0.c1, rt0.c1))GLOB(LIKELY(rt0.c2)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((NULLIF(DISTINCT rt0.c1, rt0.c1))GLOB(LIKELY(rt0.c2)))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((NULLIF(DISTINCT rt0.c1, rt0.c1))GLOB(LIKELY(rt0.c2)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((MAX(rt0.c2))<<(SUM(GROUP_CONCAT(COUNT(rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (((MAX(rt0.c2))<<(SUM(GROUP_CONCAT(COUNT(rt0.c2))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((MAX(rt0.c2))<<(SUM(GROUP_CONCAT(COUNT(rt0.c2)))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((((((((~ (rt0.c2)))AND(CASE WHEN rt0.c0 THEN rt0.c2 END)))AND(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))))AND((NOT (rt0.c2)))))OR(x''))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((((((~ (rt0.c2)))AND(CASE WHEN rt0.c0 THEN rt0.c2 END)))AND(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))))AND((NOT (rt0.c2)))))OR(x''))))) UNION ALL SELECT * FROM rt0 WHERE ((((((((((((~ (rt0.c2)))AND(CASE WHEN rt0.c0 THEN rt0.c2 END)))AND(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))))AND((NOT (rt0.c2)))))OR(x''))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE ((- (((t0.c1) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT ((- (((t0.c1) IS FALSE)))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((((- (((t0.c1) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c2)<=(rt0.c2))) BETWEEN (x'') AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN x'7988' THEN rt0.c1 WHEN rt0.c0 THEN 0.24053740594760653 END))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2)<=(rt0.c2))) BETWEEN (x'') AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN x'7988' THEN rt0.c1 WHEN rt0.c0 THEN 0.24053740594760653 END))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c2)<=(rt0.c2))) BETWEEN (x'') AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN x'7988' THEN rt0.c1 WHEN rt0.c0 THEN 0.24053740594760653 END))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING COUNT(*) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING COUNT(*) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((((x'7458' IN (t0.c2, '-278604349'))) BETWEEN (NULL) AND (t0.c2))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((x'7458' IN (t0.c2, '-278604349'))) BETWEEN (NULL) AND (t0.c2))))) UNION ALL SELECT * FROM t0 WHERE ((((((x'7458' IN (t0.c2, '-278604349'))) BETWEEN (NULL) AND (t0.c2))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt0.c0, t0.c1, t0.c2 FROM t0, rt0;
SELECT DISTINCT rt0.c0, t0.c1, t0.c2 FROM t0, rt0 WHERE ((NOT (((rt0.c1)%('.-m~mⲁ-j'))))) UNION SELECT DISTINCT rt0.c0, t0.c1, t0.c2 FROM t0, rt0 WHERE ((NOT ((NOT (((rt0.c1)%('.-m~mⲁ-j'))))))) UNION SELECT DISTINCT rt0.c0, t0.c1, t0.c2 FROM t0 NOT INDEXED, rt0 WHERE ((((NOT (((rt0.c1)%('.-m~mⲁ-j'))))) ISNULL));
SELECT DISTINCT rt0.c0, t0.c1, t0.c2 FROM t0, rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c2)IS NOT(rt0.c2)))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))AND(rt0.c2 COLLATE BINARY))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c2)IS NOT(rt0.c2)))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))AND(rt0.c2 COLLATE BINARY))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((rt0.c2)IS NOT(rt0.c2)))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))AND(rt0.c2 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (AVG('-1808672569') IN ()) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((AVG('-1808672569') IN ()))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((AVG('-1808672569') IN ())) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (AVG('-1808672569') IN ()) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((AVG('-1808672569') IN ()))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((AVG('-1808672569') IN ())) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END)/(((rt0.c2)!=(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END)/(((rt0.c2)<>(rt0.c0))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END)/(((rt0.c2)!=(rt0.c0))))) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0, t0;
SELECT DISTINCT rt0.c2 FROM rt0, t0 WHERE ((((((t0.c1) NOTNULL), x'9a98', SUBSTR(t0.c0, rt0.c0), (- (x'')), ((t0.c0)+(t0.c0))))<>((((((t0.c0)AND(rt0.c2)))AND(rt0.c2)), LOWER(t0.c0), ((t0.c1)/(-1780081131)), ((rt0.c0)LIKE(t0.c2)), CASE rt0.c2  WHEN rt0.c1 THEN -1441188247 ELSE t0.c1 END)))) UNION SELECT DISTINCT rt0.c2 FROM rt0, t0 WHERE ((NOT ((((((t0.c1) NOTNULL), x'9a98', SUBSTR(t0.c0, rt0.c0), (- (x'')), ((t0.c0)+(t0.c0))))<>((((((t0.c0)AND(rt0.c2)))AND(rt0.c2)), LOWER(t0.c0), ((t0.c1)/(-1780081131)), ((rt0.c0)LIKE(t0.c2)), CASE rt0.c2  WHEN rt0.c1 THEN -1441188247 ELSE t0.c1 END)))))) UNION SELECT DISTINCT rt0.c2 FROM rt0, t0 WHERE ((((((((t0.c1) NOTNULL), x'9a98', SUBSTR(t0.c0, rt0.c0), (- (x'')), ((t0.c0)+(t0.c0))))<>((((((t0.c0)AND(rt0.c2)))AND(rt0.c2)), LOWER(t0.c0), ((t0.c1)/(-1780081131)), ((rt0.c0)LIKE(t0.c2)), CASE rt0.c2  WHEN rt0.c1 THEN -1441188247 ELSE t0.c1 END)))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0, t0;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c2) AND ('v!j/!\rHw'))) ISNULL)) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT (((((t0.c1) NOT BETWEEN (t0.c2) AND ('v!j/!\rHw'))) ISNULL)))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((((((t0.c1) NOT BETWEEN (t0.c2) AND ('v!j/!\rHw'))) ISNULL)) ISNULL)) GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING NULL UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING NULL UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL SUM((((((+ (rt0.c0)))OR(((rt0.c1)!=(t0.c0)))))AND(((rt0.c0) IS FALSE)))) FROM t0, rt0;
SELECT ALL t0.c0, t0.c1, rt0.c1, rt0.c0, t0.c2, rt0.c2 FROM rt0, t0;
SELECT t0.c0, t0.c1, rt0.c1, rt0.c0, t0.c2, rt0.c2 FROM rt0, t0 WHERE ((((NULL))<=((NULL)))) UNION ALL SELECT ALL t0.c0, t0.c1, rt0.c1, rt0.c0, t0.c2, rt0.c2 FROM rt0, t0 WHERE ((NOT ((((NULL))<=((NULL)))))) UNION ALL SELECT ALL t0.c0, t0.c1, rt0.c1, rt0.c0, t0.c2, rt0.c2 FROM rt0, t0 WHERE ((((((NULL))<=((NULL)))) ISNULL));
SELECT ALL t0.c0, t0.c1, rt0.c1, rt0.c0, t0.c2, rt0.c2 FROM rt0, t0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c1, rt0.c0, rt0.c0)) BETWEEN (((((rt0.c0))<((rt0.c2))), (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), ((rt0.c0) NOT NULL))) AND ((rt0.c0 COLLATE BINARY, LENGTH(rt0.c1), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1, rt0.c0, rt0.c0)) BETWEEN (((((rt0.c0))<((rt0.c2))), (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), ((rt0.c0) NOT NULL))) AND ((rt0.c0 COLLATE BINARY, LENGTH(rt0.c1), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c0)) BETWEEN (((((rt0.c0))<((rt0.c2))), (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), ((rt0.c0) NOT NULL))) AND ((rt0.c0 COLLATE BINARY, LENGTH(rt0.c1), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING MAX(CAST(rt0.c1 AS REAL)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (MAX(CAST(rt0.c1 AS REAL)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((MAX(CAST(rt0.c1 AS REAL))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING MAX(CAST(rt0.c1 AS REAL)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (MAX(CAST(rt0.c1 AS REAL)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((MAX(CAST(rt0.c1 AS REAL))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 NOT INDEXED WHERE (((0.26813466124902374) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (((t0.c1)/(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((0.26813466124902374) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (((t0.c1)/(t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((0.26813466124902374) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (((t0.c1)/(t0.c0))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(CASE WHEN t0.c2 THEN t0.c2 END AS NUMERIC)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(CASE WHEN t0.c2 THEN t0.c2 END AS NUMERIC)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(CASE WHEN t0.c2 THEN t0.c2 END AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((x'41c599a6' COLLATE RTRIM) NOT BETWEEN (rt0.c0) AND (((((rt0.c0)AND(rt0.c0)))OR(rt0.c1))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((x'41c599a6' COLLATE RTRIM) NOT BETWEEN (rt0.c0) AND (((((rt0.c0)AND(rt0.c0)))OR(rt0.c1))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((x'41c599a6' COLLATE RTRIM) NOT BETWEEN (rt0.c0) AND (((((rt0.c0)AND(rt0.c0)))OR(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING AVG(((((((((t0.c0)OR(t0.c0)))OR(AVG(t0.c1))))OR(t0.c0)))OR(TOTAL(SUM(GROUP_CONCAT(MIN(COUNT(t0.c1)))))))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (AVG(((((((((t0.c0)OR(t0.c0)))OR(AVG(t0.c1))))OR(t0.c0)))OR(TOTAL(SUM(GROUP_CONCAT(MIN(COUNT(t0.c1)))))))))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((AVG(((((((((t0.c0)OR(t0.c0)))OR(AVG(t0.c1))))OR(t0.c0)))OR(TOTAL(SUM(GROUP_CONCAT(MIN(COUNT(t0.c1))))))))) ISNULL);
SELECT t0.c1, t0.c2 FROM rt0, t0;
SELECT t0.c1, t0.c2 FROM rt0, t0 WHERE (CASE ((((0.9403424770062402)OR(t0.c0)))AND(t0.c0))  WHEN LIKELY(t0.c0) THEN CAST(t0.c2 AS REAL) END) UNION ALL SELECT t0.c1, t0.c2 FROM rt0, t0 WHERE ((NOT (CASE ((((0.9403424770062402)OR(t0.c0)))AND(t0.c0))  WHEN LIKELY(t0.c0) THEN CAST(t0.c2 AS REAL) END))) UNION ALL SELECT t0.c1, t0.c2 FROM rt0, t0 WHERE (((CASE ((((0.9403424770062402)OR(t0.c0)))AND(t0.c0))  WHEN LIKELY(t0.c0) THEN CAST(t0.c2 AS REAL) END) ISNULL));
SELECT t0.c1, t0.c2 FROM rt0, t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((((rt0.c2)AND('-614607882')))OR(rt0.c1)) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((((rt0.c2)AND('-614607882')))OR(rt0.c1)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((((rt0.c2)AND('-614607882')))OR(rt0.c1)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, t0.c1, t0.c0, t0.c2, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, t0.c1, t0.c0, t0.c2, rt0.c2;
SELECT ALL rt0.c1, t0.c1, t0.c0, t0.c2, rt0.c2 FROM t0, rt0 WHERE ((((MIN(t0.c1, rt0.c0)))>((((rt0.c2) IS TRUE))))) GROUP BY rt0.c1, t0.c1, t0.c0, t0.c2, rt0.c2 UNION SELECT rt0.c1, t0.c1, t0.c0, t0.c2, rt0.c2 FROM t0, rt0 WHERE ((NOT ((((MIN(t0.c1, rt0.c0)))>((((rt0.c2) IS TRUE))))))) GROUP BY rt0.c1, t0.c1, t0.c0, t0.c2, rt0.c2 UNION SELECT rt0.c1, t0.c1, t0.c0, t0.c2, rt0.c2 FROM t0, rt0 WHERE ((((((MIN(t0.c1, rt0.c0)))>((((rt0.c2) IS TRUE))))) ISNULL)) GROUP BY rt0.c1, t0.c1, t0.c0, t0.c2, rt0.c2;
SELECT rt0.c1, t0.c1, t0.c0, t0.c2, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, t0.c1, t0.c0, t0.c2, rt0.c2;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (MIN(MAX(t0.c2)) IN (MIN(t0.c0))) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT ((MIN(MAX(t0.c2)) IN (MIN(t0.c0))))) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (((MIN(MAX(t0.c2)) IN (MIN(t0.c0)))) ISNULL);
SELECT t0.c0, t0.c2, t0.c1 FROM t0;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 WHERE (CASE TRIM(DISTINCT t0.c1)  WHEN CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END THEN ((NULL) NOTNULL) ELSE t0.c1 END) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((NOT (CASE TRIM(DISTINCT t0.c1)  WHEN CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END THEN ((NULL) NOTNULL) ELSE t0.c1 END))) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 WHERE (((CASE TRIM(DISTINCT t0.c1)  WHEN CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END THEN ((NULL) NOTNULL) ELSE t0.c1 END) ISNULL));
SELECT t0.c0, t0.c2, t0.c1 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((CAST(t0.c2 AS BLOB) IN ())) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((CAST(t0.c2 AS BLOB) IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE ((((CAST(t0.c2 AS BLOB) IN ())) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (2.010689529E9) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (2.010689529E9))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((2.010689529E9) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING MAX(MIN(GROUP_CONCAT(COUNT(t0.c0)))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (MAX(MIN(GROUP_CONCAT(COUNT(t0.c0)))))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((MAX(MIN(GROUP_CONCAT(COUNT(t0.c0))))) ISNULL);
SELECT ALL TOTAL(CAST((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) AS INTEGER)) FROM rt0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (LOWER(DISTINCT (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (LOWER(DISTINCT (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE (((LOWER(DISTINCT (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c1)))))=((CAST(t0.c1 AS NUMERIC))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c1)))))==((CAST(t0.c1 AS NUMERIC))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c1)))))==((CAST(t0.c1 AS NUMERIC))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM t0 WHERE (((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)))||(CAST(t0.c0 AS BLOB)))) GROUP BY t0.c0, t0.c2 UNION SELECT ALL t0.c0, t0.c2 FROM t0 WHERE ((NOT (((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)))||(CAST(t0.c0 AS BLOB)))))) GROUP BY t0.c0, t0.c2 UNION SELECT t0.c0, t0.c2 FROM t0 WHERE (((((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)))||(CAST(t0.c0 AS BLOB)))) ISNULL)) GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING rt0.c1 UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING rt0.c1 UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c0)GLOB(rt0.c0)) END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c0)GLOB(rt0.c0)) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c0)GLOB(rt0.c0)) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT t0.c0, rt0.c1, rt0.c2, rt0.c0, t0.c1, t0.c2 FROM t0 CROSS JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((((rt0.c1)AND(t0.c0)))AND(rt0.c1)))) AND (((x'' IN ()))));
SELECT DISTINCT t0.c0, rt0.c1, rt0.c2, rt0.c0, t0.c1, t0.c2 FROM t0 CROSS JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((((rt0.c1)AND(t0.c0)))AND(rt0.c1)))) AND (((x'' IN ())))) WHERE (CAST(t0.c2 AS BLOB)) UNION SELECT DISTINCT t0.c0, rt0.c1, rt0.c2, rt0.c0, t0.c1, t0.c2 FROM t0 CROSS JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((((rt0.c1)AND(t0.c0)))AND(rt0.c1)))) AND (((x'' IN ())))) WHERE ((NOT (CAST(t0.c2 AS BLOB)))) UNION SELECT DISTINCT t0.c0, rt0.c1, rt0.c2, rt0.c0, t0.c1, t0.c2 FROM t0 CROSS JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((((rt0.c1)AND(t0.c0)))AND(rt0.c1)))) AND (((x'' IN ())))) WHERE (((CAST(t0.c2 AS BLOB)) ISNULL));
SELECT DISTINCT t0.c0, rt0.c1, rt0.c2, rt0.c0, t0.c1, t0.c2 FROM t0 CROSS JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((((rt0.c1)AND(t0.c0)))AND(rt0.c1)))) AND (((x'' IN ()))));
SELECT t0.c0, rt0.c2, rt0.c1, t0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c1, t0.c1;
SELECT t0.c0, rt0.c2, rt0.c1, t0.c1 FROM rt0, t0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN NULL END)|(t0.c1))) GROUP BY t0.c0, rt0.c2, rt0.c1, t0.c1 UNION SELECT t0.c0, rt0.c2, rt0.c1, t0.c1 FROM rt0, t0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c2 THEN NULL END)|(t0.c1))))) GROUP BY t0.c0, rt0.c2, rt0.c1, t0.c1 UNION SELECT t0.c0, rt0.c2, rt0.c1, t0.c1 FROM rt0, t0 WHERE (((((CASE rt0.c1  WHEN rt0.c2 THEN NULL END)|(t0.c1))) ISNULL)) GROUP BY t0.c0, rt0.c2, rt0.c1, t0.c1;
SELECT t0.c0, rt0.c2, rt0.c1, t0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c1, t0.c1;
SELECT ALL t0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c2, t0.c2 FROM rt0, t0 GROUP BY t0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c2, t0.c2;
SELECT t0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c2, t0.c2 FROM rt0, t0 GROUP BY t0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c2, t0.c2 HAVING GROUP_CONCAT(x'') UNION ALL SELECT t0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c2, t0.c2 FROM rt0, t0 GROUP BY t0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c2, t0.c2 HAVING (NOT (GROUP_CONCAT(x''))) UNION ALL SELECT ALL t0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c2, t0.c2 FROM rt0, t0 GROUP BY t0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c2, t0.c2 HAVING ((GROUP_CONCAT(x'')) ISNULL);
SELECT ALL t0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c2, t0.c2 FROM rt0, t0 GROUP BY t0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c2, t0.c2;
SELECT t0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c2, t0.c2 FROM rt0, t0 GROUP BY t0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c2, t0.c2 HAVING GROUP_CONCAT(x'') UNION ALL SELECT t0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c2, t0.c2 FROM rt0, t0 GROUP BY t0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c2, t0.c2 HAVING (NOT (GROUP_CONCAT(x''))) UNION ALL SELECT ALL t0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c2, t0.c2 FROM rt0, t0 GROUP BY t0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c2, t0.c2 HAVING ((GROUP_CONCAT(x'')) ISNULL);
SELECT ALL t0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c2, t0.c2 FROM rt0, t0 GROUP BY t0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c2, t0.c2;
SELECT ALL SUM(((UPPER(t0.c0)) BETWEEN ((- (t0.c0))) AND ((((t0.c1, t0.c2, t0.c0)) NOT BETWEEN ((t0.c0, t0.c1, t0.c0)) AND ((t0.c1, t0.c1, t0.c2)))))) FROM t0;
SELECT ALL * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE (1557235168) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT (1557235168))) UNION ALL SELECT * FROM rt0, t0 WHERE (((1557235168) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT rt0.c0, t0.c0, rt0.c2 FROM rt0, t0;
SELECT DISTINCT rt0.c0, t0.c0, rt0.c2 FROM rt0, t0 WHERE (0.038312218716899715) UNION SELECT DISTINCT rt0.c0, t0.c0, rt0.c2 FROM rt0, t0 WHERE ((NOT (0.038312218716899715))) UNION SELECT DISTINCT rt0.c0, t0.c0, rt0.c2 FROM rt0, t0 WHERE (((0.038312218716899715) ISNULL));
SELECT DISTINCT rt0.c0, t0.c0, rt0.c2 FROM rt0, t0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING MIN(CASE rt0.c1  WHEN GROUP_CONCAT(rt0.c2) THEN 0.47416826046917426 END) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MIN(CASE rt0.c1  WHEN GROUP_CONCAT(rt0.c2) THEN 0.47416826046917426 END))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c1 HAVING ((MIN(CASE rt0.c1  WHEN GROUP_CONCAT(rt0.c2) THEN 0.47416826046917426 END)) ISNULL);
SELECT ALL * FROM t0 INNER JOIN rt0 ON (+ (t0.c2 COLLATE BINARY));
SELECT * FROM t0 INNER JOIN rt0 ON (+ (t0.c2 COLLATE BINARY)) WHERE ((((('뼟44k') BETWEEN (t0.c1) AND (rt0.c1))) NOTNULL)) UNION ALL SELECT * FROM t0 INNER JOIN rt0 ON (+ (t0.c2 COLLATE BINARY)) WHERE ((NOT ((((('뼟44k') BETWEEN (t0.c1) AND (rt0.c1))) NOTNULL)))) UNION ALL SELECT ALL * FROM t0 INNER JOIN rt0 ON (+ (t0.c2 COLLATE BINARY)) WHERE ((((((('뼟44k') BETWEEN (t0.c1) AND (rt0.c1))) NOTNULL)) ISNULL));
SELECT ALL * FROM t0 INNER JOIN rt0 ON (+ (t0.c2 COLLATE BINARY));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (UPPER(CAST(rt0.c0 AS TEXT))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (UPPER(CAST(rt0.c0 AS TEXT))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((UPPER(CAST(rt0.c0 AS TEXT))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2, t0.c0, rt0.c1, t0.c1 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2, t0.c0, rt0.c1, t0.c1;
SELECT ALL rt0.c0, rt0.c2, t0.c0, rt0.c1, t0.c1 FROM t0, rt0 WHERE (CASE (rt0.c0 IN (t0.c1))  WHEN ((rt0.c2)IS(rt0.c1)) THEN ((t0.c0)OR(t0.c2)) END) GROUP BY rt0.c0, rt0.c2, t0.c0, rt0.c1, t0.c1 UNION SELECT rt0.c0, rt0.c2, t0.c0, rt0.c1, t0.c1 FROM t0, rt0 WHERE ((NOT (CASE (rt0.c0 IN (t0.c1))  WHEN ((rt0.c2)IS(rt0.c1)) THEN ((t0.c0)OR(t0.c2)) END))) GROUP BY rt0.c0, rt0.c2, t0.c0, rt0.c1, t0.c1 UNION SELECT ALL rt0.c0, rt0.c2, t0.c0, rt0.c1, t0.c1 FROM t0, rt0 WHERE (((CASE (rt0.c0 IN (t0.c1))  WHEN ((rt0.c2)IS(rt0.c1)) THEN ((t0.c0)OR(t0.c2)) END) ISNULL)) GROUP BY rt0.c0, rt0.c2, t0.c0, rt0.c1, t0.c1;
SELECT rt0.c0, rt0.c2, t0.c0, rt0.c1, t0.c1 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2, t0.c0, rt0.c1, t0.c1;
SELECT t0.c2, rt0.c0, t0.c0, t0.c1 FROM t0 INNER JOIN rt0 ON CASE WHEN ((rt0.c1) IS FALSE) THEN CASE rt0.c0  WHEN rt0.c2 THEN t0.c0 END END GROUP BY t0.c2, rt0.c0, t0.c0, t0.c1;
SELECT ALL t0.c2, rt0.c0, t0.c0, t0.c1 FROM t0 INNER JOIN rt0 ON CASE WHEN ((rt0.c1) IS FALSE) THEN CASE rt0.c0  WHEN rt0.c2 THEN t0.c0 END END GROUP BY t0.c2, rt0.c0, t0.c0, t0.c1 HAVING MIN(MIN(rt0.c0)) UNION ALL SELECT ALL t0.c2, rt0.c0, t0.c0, t0.c1 FROM t0 INNER JOIN rt0 ON CASE WHEN ((rt0.c1) IS FALSE) THEN CASE rt0.c0  WHEN rt0.c2 THEN t0.c0 END END GROUP BY t0.c2, rt0.c0, t0.c0, t0.c1 HAVING (NOT (MIN(MIN(rt0.c0)))) UNION ALL SELECT t0.c2, rt0.c0, t0.c0, t0.c1 FROM t0 INNER JOIN rt0 ON CASE WHEN ((rt0.c1) IS FALSE) THEN CASE rt0.c0  WHEN rt0.c2 THEN t0.c0 END END GROUP BY t0.c2, rt0.c0, t0.c0, t0.c1 HAVING ((MIN(MIN(rt0.c0))) ISNULL);
SELECT rt0.c2 FROM t0, rt0 INDEXED BY i76;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2)IS NOT(TRIM(rt0.c1)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c2)IS NOT(TRIM(rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)IS NOT(TRIM(rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((PRINTF(t0.c2))>>(t0.c0 COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((PRINTF(t0.c2))>>(t0.c0 COLLATE NOCASE))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((PRINTF(t0.c2))>>(t0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING MIN(CAST(TOTAL(rt0.c0) AS INTEGER)) UNION ALL SELECT rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING (NOT (MIN(CAST(TOTAL(rt0.c0) AS INTEGER)))) UNION ALL SELECT rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING ((MIN(CAST(TOTAL(rt0.c0) AS INTEGER))) ISNULL);
SELECT ALL SUM((+ (LOWER(0.3403494985777801)))) FROM rt0 ORDER BY (NOT (0.23172959687805572 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE (t0.c2) UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT (t0.c2))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE (((t0.c2) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT t0.c0, rt0.c1, t0.c2 FROM t0 NATURAL JOIN rt0;
SELECT DISTINCT t0.c0, rt0.c1, t0.c2 FROM t0 NATURAL JOIN rt0 WHERE (((((((rt0.c2))=((rt0.c1)))))>=((((((rt0.c2)AND(t0.c1)))OR(t0.c0)))))) UNION SELECT DISTINCT t0.c0, rt0.c1, t0.c2 FROM t0 NATURAL JOIN rt0 WHERE ((NOT (((((((rt0.c2))=((rt0.c1)))))>=((((((rt0.c2)AND(t0.c1)))OR(t0.c0)))))))) UNION SELECT DISTINCT t0.c0, rt0.c1, t0.c2 FROM t0 NATURAL JOIN rt0 WHERE (((((((((rt0.c2))==((rt0.c1)))))>=((((((rt0.c2)AND(t0.c1)))OR(t0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0, rt0.c1, t0.c2 FROM t0 NATURAL JOIN rt0;
SELECT rt0.c2, rt0.c0, t0.c2, t0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON rt0.c0 GROUP BY rt0.c2, rt0.c0, t0.c2, t0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, t0.c2, t0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON rt0.c0 WHERE (((t0.c1)&((+ (rt0.c1))))) GROUP BY rt0.c2, rt0.c0, t0.c2, t0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, t0.c2, t0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON rt0.c0 WHERE ((NOT (((t0.c1)&((+ (rt0.c1))))))) GROUP BY rt0.c2, rt0.c0, t0.c2, t0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, t0.c2, t0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON rt0.c0 WHERE (((((t0.c1)&((+ (rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, t0.c2, t0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, t0.c2, t0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN t0 ON rt0.c0 GROUP BY rt0.c2, rt0.c0, t0.c2, t0.c0, rt0.c1;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING GROUP_CONCAT(MAX(SUM(t0.c1))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (GROUP_CONCAT(MAX(SUM(t0.c1))))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((GROUP_CONCAT(MAX(SUM(t0.c1)))) ISNULL);
SELECT t0.c2 FROM t0;
SELECT ALL t0.c2 FROM t0 WHERE (CAST(t0.c0 AS REAL) COLLATE NOCASE) UNION ALL SELECT ALL t0.c2 FROM t0 WHERE ((NOT (CAST(t0.c0 AS REAL) COLLATE NOCASE))) UNION ALL SELECT t0.c2 FROM t0 WHERE (((CAST(t0.c0 AS REAL) COLLATE NOCASE) ISNULL));
SELECT t0.c2 FROM t0;
SELECT DISTINCT t0.c2, t0.c1, rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM rt0, t0;
SELECT DISTINCT t0.c2, t0.c1, rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM rt0, t0 WHERE (((((rt0.c0)!=(0.7979534517909129))) IS FALSE)) UNION SELECT DISTINCT t0.c2, t0.c1, rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM rt0, t0 WHERE ((NOT (((((rt0.c0)!=(0.7979534517909129))) IS FALSE)))) UNION SELECT DISTINCT t0.c2, t0.c1, rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM rt0, t0 WHERE (((((((rt0.c0)<>(0.7979534517909129))) IS FALSE)) ISNULL));
SELECT DISTINCT t0.c2, t0.c1, rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM rt0, t0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c1)&(rt0.c1)))%(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1)&(rt0.c1)))%(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c1)&(rt0.c1)))%(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((((x'1856')OR(MIN(MAX(AVG(t0.c1))))))OR(t0.c1)) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT (((((x'1856')OR(MIN(MAX(AVG(t0.c1))))))OR(t0.c1)))) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((((((x'1856')OR(MIN(MAX(AVG(t0.c1))))))OR(t0.c1))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 NOT INDEXED WHERE (((t0.c0 COLLATE NOCASE) ISNULL)) UNION ALL SELECT * FROM t0 WHERE ((NOT (((t0.c0 COLLATE NOCASE) ISNULL)))) UNION ALL SELECT ALL * FROM t0 WHERE (((((t0.c0 COLLATE NOCASE) ISNULL)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c1, rt0.c0, rt0.c1 FROM t0, rt0;
SELECT DISTINCT t0.c1, rt0.c0, rt0.c1 FROM t0, rt0 WHERE ((+ (CAST(rt0.c2 AS NUMERIC)))) UNION SELECT DISTINCT t0.c1, rt0.c0, rt0.c1 FROM t0, rt0 WHERE ((NOT ((+ (CAST(rt0.c2 AS NUMERIC)))))) UNION SELECT DISTINCT t0.c1, rt0.c0, rt0.c1 FROM t0, rt0 WHERE ((((+ (CAST(rt0.c2 AS NUMERIC)))) ISNULL));
SELECT DISTINCT t0.c1, rt0.c0, rt0.c1 FROM t0, rt0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0 WHERE (CAST(RTRIM(t0.c2) AS REAL)) GROUP BY t0.c1, t0.c0 UNION SELECT t0.c1, t0.c0 FROM t0 WHERE ((NOT (CAST(RTRIM(t0.c2) AS REAL)))) GROUP BY t0.c1, t0.c0 UNION SELECT ALL t0.c1, t0.c0 FROM t0 WHERE (((CAST(RTRIM(t0.c2) AS REAL)) ISNULL)) GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING MAX(TOTAL(t0.c2)) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (NOT (MAX(TOTAL(t0.c2)))) UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING ((MAX(TOTAL(t0.c2))) ISNULL);
SELECT TOTAL(CAST(json_quote(rt0.c1) AS REAL)) FROM rt0 ORDER BY (-542270944 IN ());
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (t0.c0) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0;
SELECT DISTINCT rt0.c0, t0.c0, rt0.c2, t0.c1, t0.c2 FROM rt0, t0;
SELECT DISTINCT rt0.c0, t0.c0, rt0.c2, t0.c1, t0.c2 FROM rt0, t0 WHERE (json_valid(((t0.c0) NOT BETWEEN (rt0.c2) AND (t0.c1)))) UNION SELECT DISTINCT rt0.c0, t0.c0, rt0.c2, t0.c1, t0.c2 FROM rt0, t0 WHERE ((NOT (json_valid(((t0.c0) NOT BETWEEN (rt0.c2) AND (t0.c1)))))) UNION SELECT DISTINCT rt0.c0, t0.c0, rt0.c2, t0.c1, t0.c2 FROM rt0, t0 WHERE (((json_valid(((t0.c0) NOT BETWEEN (rt0.c2) AND (t0.c1)))) ISNULL));
SELECT DISTINCT rt0.c0, t0.c0, rt0.c2, t0.c1, t0.c2 FROM rt0, t0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((((((rt0.c1, rt0.c2, rt0.c1, rt0.c1, '-464946608'))>=((rt0.c0, rt0.c1, rt0.c0, rt0.c1, rt0.c0))))GLOB(((rt0.c2) IS FALSE)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c1, rt0.c2, rt0.c1, rt0.c1, '-464946608'))>=((rt0.c0, rt0.c1, rt0.c0, rt0.c1, rt0.c0))))GLOB(((rt0.c2) IS FALSE)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((((((((rt0.c1, rt0.c2, rt0.c1, rt0.c1, '-464946608'))>=((rt0.c0, rt0.c1, rt0.c0, rt0.c1, rt0.c0))))GLOB(((rt0.c2) IS FALSE)))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL t0.c2 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c2 HAVING MIN(((t0.c2)*(t0.c1))) UNION ALL SELECT t0.c2 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c2 HAVING (NOT (MIN(((t0.c2)*(t0.c1))))) UNION ALL SELECT t0.c2 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c2 HAVING ((MIN(((t0.c2)*(t0.c1)))) ISNULL);
SELECT ALL t0.c2 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c2 HAVING MIN(((t0.c2)*(t0.c1))) UNION ALL SELECT t0.c2 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c2 HAVING (NOT (MIN(((t0.c2)*(t0.c1))))) UNION ALL SELECT t0.c2 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c2 HAVING ((MIN(((t0.c2)*(t0.c1)))) ISNULL);
SELECT ALL t0.c2 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c2;
SELECT t0.c2, t0.c1 FROM t0;
SELECT t0.c2, t0.c1 FROM t0 WHERE (((((t0.c2))<>((t0.c2))) IN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END))) UNION ALL SELECT ALL t0.c2, t0.c1 FROM t0 WHERE ((NOT (((((t0.c2))<>((t0.c2))) IN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END))))) UNION ALL SELECT ALL t0.c2, t0.c1 FROM t0 WHERE (((((((t0.c2))!=((t0.c2))) IN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END))) ISNULL));
SELECT t0.c2, t0.c1 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((((((((((t0.c2))>=((t0.c0))))OR(((t0.c0) NOTNULL))))AND((- (t0.c1)))))AND(0.3389264239131925)))OR(((t0.c1) BETWEEN (t0.c0) AND (t0.c2))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((((((((((t0.c2))>=((t0.c0))))OR(((t0.c0) NOTNULL))))AND((- (t0.c1)))))AND(0.3389264239131925)))OR(((t0.c1) BETWEEN (t0.c0) AND (t0.c2))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((((((((((t0.c2))>=((t0.c0))))OR(((t0.c0) NOTNULL))))AND((- (t0.c1)))))AND(0.3389264239131925)))OR(((t0.c1) BETWEEN (t0.c0) AND (t0.c2))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 WHERE (CASE WHEN ((((((((t0.c0)AND(NULL)))AND(t0.c2)))AND(t0.c2)))OR(t0.c2)) THEN 0.25000392754267065 ELSE ((t0.c0)>(t0.c0)) END) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE ((NOT (CASE WHEN ((((((((t0.c0)AND(NULL)))AND(t0.c2)))AND(t0.c2)))OR(t0.c2)) THEN 0.25000392754267065 ELSE ((t0.c0)>(t0.c0)) END))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE (((CASE WHEN ((((((((t0.c0)AND(NULL)))AND(t0.c2)))AND(t0.c2)))OR(t0.c2)) THEN 0.25000392754267065 ELSE ((t0.c0)>(t0.c0)) END) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM rt0, t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM rt0, t0 GROUP BY t0.c2 HAVING MAX(COUNT(COUNT(*))) UNION ALL SELECT t0.c2 FROM rt0, t0 GROUP BY t0.c2 HAVING (NOT (MAX(COUNT(COUNT(*))))) UNION ALL SELECT ALL t0.c2 FROM rt0, t0 GROUP BY t0.c2 HAVING ((MAX(COUNT(COUNT(*)))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((CASE rt0.c1  WHEN '' THEN rt0.c2 END IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((CASE rt0.c1  WHEN '' THEN rt0.c2 END IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((((CASE rt0.c1  WHEN '' THEN rt0.c2 END IN ())) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN t0 ON 0X77d8aff9;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN t0 ON 0x77d8aff9 WHERE (((((((((TRIM(DISTINCT rt0.c0, rt0.c2))OR(((t0.c0) NOT NULL))))AND(((rt0.c1)<=(rt0.c0)))))OR((((rt0.c1, rt0.c1, NULL, t0.c1, rt0.c1))>((t0.c0, rt0.c2, t0.c1, t0.c0, t0.c1))))))OR(((x'')IS(t0.c2))))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN t0 ON 0X77d8aff9 WHERE ((NOT (((((((((TRIM(DISTINCT rt0.c0, rt0.c2))OR(((t0.c0) NOT NULL))))AND(((rt0.c1)<=(rt0.c0)))))OR((((rt0.c1, rt0.c1, NULL, t0.c1, rt0.c1))>((t0.c0, rt0.c2, t0.c1, t0.c0, t0.c1))))))OR(((x'')IS(t0.c2))))))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN t0 ON 0X77d8aff9 WHERE (((((((((((TRIM(DISTINCT rt0.c0, rt0.c2))OR(((t0.c0) NOT NULL))))AND(((rt0.c1)<=(rt0.c0)))))OR((((rt0.c1, rt0.c1, NULL, t0.c1, rt0.c1))>((t0.c0, rt0.c2, t0.c1, t0.c0, t0.c1))))))OR(((x'')IS(t0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN t0 ON 0X77d8aff9;
SELECT t0.c2, rt0.c0, rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY t0.c2, rt0.c0, rt0.c1, t0.c0, rt0.c2;
SELECT t0.c2, rt0.c0, rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 WHERE (IFNULL((rt0.c1 IN ()), ((t0.c1)<(t0.c1)))) GROUP BY t0.c2, rt0.c0, rt0.c1, t0.c0, rt0.c2 UNION SELECT t0.c2, rt0.c0, rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 WHERE ((NOT (IFNULL((rt0.c1 IN ()), ((t0.c1)<(t0.c1)))))) GROUP BY t0.c2, rt0.c0, rt0.c1, t0.c0, rt0.c2 UNION SELECT ALL t0.c2, rt0.c0, rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 WHERE (((IFNULL((rt0.c1 IN ()), ((t0.c1)<(t0.c1)))) ISNULL)) GROUP BY t0.c2, rt0.c0, rt0.c1, t0.c0, rt0.c2;
SELECT t0.c2, rt0.c0, rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY t0.c2, rt0.c0, rt0.c1, t0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING 0.4852692729644277 UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (0.4852692729644277)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((0.4852692729644277) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING 0.4852692729644277 UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (0.4852692729644277)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((0.4852692729644277) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL * FROM t0, rt0;
SELECT ALL * FROM t0, rt0 WHERE ((((NOT (rt0.c2))) IS FALSE)) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT ((((NOT (rt0.c2))) IS FALSE)))) UNION ALL SELECT * FROM t0, rt0 WHERE ((((((NOT (rt0.c2))) IS FALSE)) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT t0.c0 FROM rt0 INNER JOIN t0 ON LENGTH(t0.c1) COLLATE NOCASE;
SELECT DISTINCT t0.c0 FROM rt0 INNER JOIN t0 ON LENGTH(t0.c1) COLLATE NOCASE WHERE ((((('#2J8DJU')OR(((rt0.c2)%(rt0.c2)))))AND(CASE NULL  WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN rt0.c1 THEN 0.09626581787484578 ELSE t0.c2 END))) UNION SELECT DISTINCT t0.c0 FROM rt0 INNER JOIN t0 ON LENGTH(t0.c1) COLLATE NOCASE WHERE ((NOT ((((('#2J8DJU')OR(((rt0.c2)%(rt0.c2)))))AND(CASE NULL  WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN rt0.c1 THEN 0.09626581787484578 ELSE t0.c2 END))))) UNION SELECT DISTINCT t0.c0 FROM rt0 INNER JOIN t0 ON LENGTH(t0.c1) COLLATE NOCASE WHERE ((((((('#2J8DJU')OR(((rt0.c2)%(rt0.c2)))))AND(CASE NULL  WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN rt0.c1 THEN 0.09626581787484578 ELSE t0.c2 END))) ISNULL));
SELECT DISTINCT t0.c0 FROM rt0 INNER JOIN t0 ON LENGTH(t0.c1) COLLATE NOCASE;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c1) IS TRUE) COLLATE RTRIM COLLATE NOCASE) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c1) IS TRUE) COLLATE RTRIM COLLATE NOCASE))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c1) IS TRUE) COLLATE RTRIM COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 INDEXED BY i75 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 INDEXED BY i75 GROUP BY t0.c1, t0.c2, t0.c0 HAVING ((AVG(GROUP_CONCAT(t0.c2)))-((((MAX(t0.c2))) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 INDEXED BY i75 GROUP BY t0.c1, t0.c2, t0.c0 HAVING (NOT (((AVG(GROUP_CONCAT(t0.c2)))-((((MAX(t0.c2))) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 INDEXED BY i75 GROUP BY t0.c1, t0.c2, t0.c0 HAVING ((((AVG(GROUP_CONCAT(t0.c2)))-((((MAX(t0.c2))) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))))) ISNULL);
SELECT ALL * FROM rt0, t0;
SELECT * FROM rt0 NOT INDEXED, t0 WHERE (CAST(((rt0.c2)&(t0.c2)) AS BLOB)) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT (CAST(((rt0.c2)&(t0.c2)) AS BLOB)))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((CAST(((rt0.c2)&(t0.c2)) AS BLOB)) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (x'07e0') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (x'07e0'))) UNION SELECT DISTINCT * FROM rt0 WHERE (((x'07e0') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (CASE CAST(rt0.c0 AS TEXT)  WHEN rt0.c0 THEN (- (rt0.c0)) WHEN (~ (rt0.c2)) THEN ((0.6123952322202082)-(rt0.c2)) WHEN rt0.c0 COLLATE BINARY THEN rt0.c1 COLLATE RTRIM ELSE 137612291 END) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE CAST(rt0.c0 AS TEXT)  WHEN rt0.c0 THEN (- (rt0.c0)) WHEN (~ (rt0.c2)) THEN ((0.6123952322202082)-(rt0.c2)) WHEN rt0.c0 COLLATE BINARY THEN rt0.c1 COLLATE RTRIM ELSE 137612291 END))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE CAST(rt0.c0 AS TEXT)  WHEN rt0.c0 THEN (- (rt0.c0)) WHEN (~ (rt0.c2)) THEN ((0.6123952322202082)-(rt0.c2)) WHEN rt0.c0 COLLATE BINARY THEN rt0.c1 COLLATE RTRIM ELSE 137612291 END) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING MIN(CAST(rt0.c0 AS REAL)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MIN(CAST(rt0.c0 AS REAL)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((MIN(CAST(rt0.c0 AS REAL))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING MIN(CAST(rt0.c0 AS REAL)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MIN(CAST(rt0.c0 AS REAL)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((MIN(CAST(rt0.c0 AS REAL))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE (CAST((rt0.c1 IN ()) AS TEXT)) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (CAST((rt0.c1 IN ()) AS TEXT)))) UNION ALL SELECT * FROM rt0, t0 WHERE (((CAST((rt0.c1 IN ()) AS TEXT)) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) NOT BETWEEN (rt0.c0) AND (((rt0.c1) IS FALSE)))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) NOT BETWEEN (rt0.c0) AND (((rt0.c1) IS FALSE)))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) NOT BETWEEN (rt0.c0) AND (((rt0.c1) IS FALSE)))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))+((((NULL, '188158563', rt0.c2)) NOT BETWEEN ((NULL, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c1)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))+((((NULL, '188158563', rt0.c2)) NOT BETWEEN ((NULL, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c1)))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))+((((NULL, '188158563', rt0.c2)) NOT BETWEEN ((NULL, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c1)))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (((MIN(t0.c2))<=(MIN(rt0.c0))) IN ()) UNION ALL SELECT ALL t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((((MIN(t0.c2))<=(MIN(rt0.c0))) IN ()))) UNION ALL SELECT t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (((((MIN(t0.c2))<=(MIN(rt0.c0))) IN ())) ISNULL);
SELECT t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (((MIN(t0.c2))<=(MIN(rt0.c0))) IN ()) UNION ALL SELECT ALL t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((((MIN(t0.c2))<=(MIN(rt0.c0))) IN ()))) UNION ALL SELECT t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (((((MIN(t0.c2))<=(MIN(rt0.c0))) IN ())) ISNULL);
SELECT t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE (((((rt0.c0)<>(t0.c2))) IS TRUE)) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (((((rt0.c0)!=(t0.c2))) IS TRUE)))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((((((rt0.c0)!=(t0.c2))) IS TRUE)) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0;
SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((('䠄D9''cel')&((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((NULL)))))) UNION SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((NOT ((('䠄D9''cel')&((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((NULL)))))))) UNION SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((((('䠄D9''cel')&((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((NULL)))))) ISNULL));
SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0;
SELECT t0.c2, rt0.c1, rt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON CAST((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c0))) AS TEXT) GROUP BY t0.c2, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL t0.c2, rt0.c1, rt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON CAST((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c0))) AS TEXT) WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))==((CASE '1313681252'  WHEN t0.c2 THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c0 END)))) GROUP BY t0.c2, rt0.c1, rt0.c0, rt0.c2 UNION SELECT t0.c2, rt0.c1, rt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON CAST((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c0))) AS TEXT) WHERE ((NOT ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))==((CASE '1313681252'  WHEN t0.c2 THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c0 END)))))) GROUP BY t0.c2, rt0.c1, rt0.c0, rt0.c2 UNION SELECT t0.c2, rt0.c1, rt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON CAST((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c0))) AS TEXT) WHERE ((((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))==((CASE '1313681252'  WHEN t0.c2 THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c0 END)))) ISNULL)) GROUP BY t0.c2, rt0.c1, rt0.c0, rt0.c2;
SELECT t0.c2, rt0.c1, rt0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON CAST((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c0))) AS TEXT) GROUP BY t0.c2, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL t0.c2, t0.c0, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY t0.c2, t0.c0, rt0.c0, rt0.c2;
SELECT ALL t0.c2, t0.c0, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY t0.c2, t0.c0, rt0.c0, rt0.c2 HAVING MIN(SUM(t0.c0)) UNION ALL SELECT t0.c2, t0.c0, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY t0.c2, t0.c0, rt0.c0, rt0.c2 HAVING (NOT (MIN(SUM(t0.c0)))) UNION ALL SELECT ALL t0.c2, t0.c0, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY t0.c2, t0.c0, rt0.c0, rt0.c2 HAVING ((MIN(SUM(t0.c0))) ISNULL);
SELECT MAX(CASE WHEN 175403591 THEN rt0.c2 COLLATE RTRIM WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END WHEN NULLIF(rt0.c1, rt0.c1) THEN rt0.c1 COLLATE NOCASE END) FROM rt0;
SELECT * FROM t0, rt0;
SELECT ALL * FROM t0, rt0 WHERE (DATETIME((rt0.c1 IN (rt0.c2)), CAST(t0.c1 AS BLOB), rt0.c2 COLLATE RTRIM)) UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT (DATETIME((rt0.c1 IN (rt0.c2)), CAST(t0.c1 AS BLOB), rt0.c2 COLLATE RTRIM)))) UNION ALL SELECT * FROM t0, rt0 WHERE (((DATETIME((rt0.c1 IN (rt0.c2)), CAST(t0.c1 AS BLOB), rt0.c2 COLLATE RTRIM)) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 NOT INDEXED;
SELECT DISTINCT * FROM t0, rt0 WHERE ('-431075118') UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ('-431075118'))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((('-431075118') ISNULL));
SELECT DISTINCT * FROM t0, rt0 NOT INDEXED;
SELECT rt0.c2, rt0.c0, t0.c2 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0, t0.c2;
SELECT ALL rt0.c2, rt0.c0, t0.c2 FROM rt0, t0 WHERE ((((t0.c2) NOT NULL) IN ())) GROUP BY rt0.c2, rt0.c0, t0.c2 UNION SELECT rt0.c2, rt0.c0, t0.c2 FROM rt0, t0 WHERE ((NOT ((((t0.c2) NOT NULL) IN ())))) GROUP BY rt0.c2, rt0.c0, t0.c2 UNION SELECT ALL rt0.c2, rt0.c0, t0.c2 FROM rt0, t0 WHERE ((((((t0.c2) NOT NULL) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c0, t0.c2;
SELECT rt0.c2, rt0.c0, t0.c2 FROM rt0, t0 GROUP BY rt0.c2, rt0.c0, t0.c2;
SELECT ALL rt0.c2, rt0.c1, t0.c1, t0.c2, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c1, t0.c2, t0.c0, rt0.c0;
SELECT rt0.c2, rt0.c1, t0.c1, t0.c2, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c1, t0.c2, t0.c0, rt0.c0 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c2, rt0.c1, t0.c1, t0.c2, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c1, t0.c2, t0.c0, rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c2, rt0.c1, t0.c1, t0.c2, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c1, t0.c2, t0.c0, rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c2, rt0.c1, t0.c1, t0.c2, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c1, t0.c2, t0.c0, rt0.c0;
SELECT rt0.c2, rt0.c1, t0.c1, t0.c2, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c1, t0.c2, t0.c0, rt0.c0 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c2, rt0.c1, t0.c1, t0.c2, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c1, t0.c2, t0.c0, rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c2, rt0.c1, t0.c1, t0.c2, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c1, t0.c2, t0.c0, rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c2, rt0.c1, t0.c1, t0.c2, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c1, t0.c2, t0.c0, rt0.c0;
SELECT ALL * FROM t0 INDEXED BY i76, rt0;
SELECT ALL * FROM t0 INDEXED BY i76, rt0 WHERE ((~ (rt0.c1))) UNION ALL SELECT * FROM t0 INDEXED BY i76, rt0 WHERE ((NOT ((~ (rt0.c1))))) UNION ALL SELECT * FROM t0 INDEXED BY i76, rt0 WHERE ((((~ (rt0.c1))) ISNULL));
SELECT ALL * FROM t0 INDEXED BY i76, rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((((rt0.c0) IS TRUE))OR(IFNULL(DISTINCT rt0.c0, rt0.c0))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c0) IS TRUE))OR(IFNULL(DISTINCT rt0.c0, rt0.c0))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 NOT INDEXED WHERE (((((((((rt0.c0) IS TRUE))OR(IFNULL(DISTINCT rt0.c0, rt0.c0))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0 WHERE (t0.c2) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM t0 WHERE ((NOT (t0.c2))) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM t0 WHERE (((t0.c2) ISNULL)) GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2, t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c1, t0.c2, t0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL t0.c1, t0.c2, t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c1, t0.c2, t0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING MIN(NULLIF(DISTINCT SUM(TOTAL(TOTAL(GROUP_CONCAT(rt0.c0)))), COUNT(*))) UNION ALL SELECT t0.c1, t0.c2, t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c1, t0.c2, t0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (MIN(NULLIF(DISTINCT SUM(TOTAL(TOTAL(GROUP_CONCAT(rt0.c0)))), COUNT(*))))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c1, t0.c2, t0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((MIN(NULLIF(DISTINCT SUM(TOTAL(TOTAL(GROUP_CONCAT(rt0.c0)))), COUNT(*)))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((t0.c2 COLLATE BINARY)>>((~ (t0.c1))))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((t0.c2 COLLATE BINARY)>>((~ (t0.c1))))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((t0.c2 COLLATE BINARY)>>((~ (t0.c1))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((rt0.c2 IN (rt0.c2)))>>(rt0.c2))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2 IN (rt0.c2)))>>(rt0.c2))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c2)))>>(rt0.c2))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, t0.c0;
SELECT ALL rt0.c2, t0.c0 FROM t0, rt0 WHERE ((('{}' COLLATE RTRIM)!=(t0.c1))) GROUP BY rt0.c2, t0.c0 UNION SELECT rt0.c2, t0.c0 FROM t0, rt0 WHERE ((NOT ((('{}' COLLATE RTRIM)<>(t0.c1))))) GROUP BY rt0.c2, t0.c0 UNION SELECT ALL rt0.c2, t0.c0 FROM t0, rt0 WHERE ((((('{}' COLLATE RTRIM)!=(t0.c1))) ISNULL)) GROUP BY rt0.c2, t0.c0;
SELECT ALL rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, t0.c0;
SELECT ALL t0.c1, rt0.c1 FROM rt0, t0 GROUP BY t0.c1, rt0.c1;
SELECT ALL t0.c1, rt0.c1 FROM rt0, t0 GROUP BY t0.c1, rt0.c1 HAVING GROUP_CONCAT(TOTAL(COUNT(*))) UNION ALL SELECT t0.c1, rt0.c1 FROM rt0, t0 GROUP BY t0.c1, rt0.c1 HAVING (NOT (GROUP_CONCAT(TOTAL(COUNT(*))))) UNION ALL SELECT ALL t0.c1, rt0.c1 FROM rt0, t0 GROUP BY t0.c1, rt0.c1 HAVING ((GROUP_CONCAT(TOTAL(COUNT(*)))) ISNULL);
SELECT ALL SUM(((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)) COLLATE RTRIM) FROM rt0;
SELECT ALL rt0.c1 FROM rt0, t0;
SELECT ALL rt0.c1 FROM rt0, t0 WHERE (((INSTR(t0.c0, t0.c1)) NOT BETWEEN (((rt0.c0) BETWEEN (t0.c1) AND (t0.c2))) AND (((rt0.c1) BETWEEN (t0.c0) AND (rt0.c0))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, t0 WHERE ((NOT (((INSTR(t0.c0, t0.c1)) NOT BETWEEN (((rt0.c0) BETWEEN (t0.c1) AND (t0.c2))) AND (((rt0.c1) BETWEEN (t0.c0) AND (rt0.c0))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, t0 WHERE (((((INSTR(t0.c0, t0.c1)) NOT BETWEEN (((rt0.c0) BETWEEN (t0.c1) AND (t0.c2))) AND (((rt0.c1) BETWEEN (t0.c0) AND (rt0.c0))))) ISNULL));
SELECT ALL rt0.c1 FROM rt0, t0;
SELECT DISTINCT t0.c0, t0.c1 FROM t0;
SELECT DISTINCT t0.c0, t0.c1 FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c1 COLLATE BINARY, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (((t0.c1))<=((t0.c2))))) AND ((LIKELIHOOD(t0.c1, 0.708660406443857), ((('2︿}+%[', t0.c0, t0.c2))>((t0.c0, '235701878', t0.c0))), ((NULL) IS FALSE))))) UNION SELECT DISTINCT t0.c0, t0.c1 FROM t0 WHERE ((NOT ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c1 COLLATE BINARY, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (((t0.c1))<=((t0.c2))))) AND ((LIKELIHOOD(t0.c1, 0.708660406443857), ((('2︿}+%[', t0.c0, t0.c2))>((t0.c0, '235701878', t0.c0))), ((NULL) IS FALSE))))))) UNION SELECT DISTINCT t0.c0, t0.c1 FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c1 COLLATE BINARY, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (((t0.c1))<=((t0.c2))))) AND ((LIKELIHOOD(t0.c1, 0.708660406443857), ((('2︿}+%[', t0.c0, t0.c2))>((t0.c0, '235701878', t0.c0))), ((NULL) IS FALSE))))) ISNULL));
SELECT DISTINCT t0.c0, t0.c1 FROM t0;
SELECT rt0.c1, t0.c2 FROM rt0 LEFT OUTER JOIN t0 ON x'90e8' GROUP BY rt0.c1, t0.c2;
SELECT ALL rt0.c1, t0.c2 FROM rt0 LEFT OUTER JOIN t0 ON x'90e8' WHERE (((((t0.c2)&(t0.c2)))GLOB(((t0.c0)IS NOT(t0.c2))))) GROUP BY rt0.c1, t0.c2 UNION SELECT rt0.c1, t0.c2 FROM rt0 LEFT OUTER JOIN t0 ON x'90e8' WHERE ((NOT (((((t0.c2)&(t0.c2)))GLOB(((t0.c0)IS NOT(t0.c2))))))) GROUP BY rt0.c1, t0.c2 UNION SELECT ALL rt0.c1, t0.c2 FROM rt0 LEFT OUTER JOIN t0 ON x'90e8' WHERE (((((((t0.c2)&(t0.c2)))GLOB(((t0.c0)IS NOT(t0.c2))))) ISNULL)) GROUP BY rt0.c1, t0.c2;
SELECT rt0.c1, t0.c2 FROM rt0 LEFT OUTER JOIN t0 ON x'90e8' GROUP BY rt0.c1, t0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING CAST(((MIN(rt0.c1))==(rt0.c1)) AS REAL) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (CAST(((MIN(rt0.c1))==(rt0.c1)) AS REAL))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((CAST(((MIN(rt0.c1))=(rt0.c1)) AS REAL)) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING CAST(((MIN(rt0.c1))==(rt0.c1)) AS REAL) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (CAST(((MIN(rt0.c1))==(rt0.c1)) AS REAL))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((CAST(((MIN(rt0.c1))=(rt0.c1)) AS REAL)) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST(rt0.c1 AS NUMERIC)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((NOT (CAST(rt0.c1 AS NUMERIC)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((((NOT (CAST(rt0.c1 AS NUMERIC)))) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((((t0.c1 IN (t0.c2)))IS NOT((('901642798') ISNULL)))) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT ((((t0.c1 IN (t0.c2)))IS NOT((('901642798') ISNULL)))))) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((((((t0.c1 IN (t0.c2)))IS NOT((('901642798') ISNULL)))) ISNULL));
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0;
SELECT t0.c1, rt0.c2, rt0.c0, rt0.c1, t0.c2 FROM t0 FULL OUTER JOIN rt0 ON ((((t0.c0) BETWEEN (t0.c2) AND (t0.c0))) IS TRUE) GROUP BY t0.c1, rt0.c2, rt0.c0, rt0.c1, t0.c2;
SELECT t0.c1, rt0.c2, rt0.c0, rt0.c1, t0.c2 FROM t0 FULL OUTER JOIN rt0 ON ((((t0.c0) BETWEEN (t0.c2) AND (t0.c0))) IS TRUE) WHERE (CASE ((t0.c2) NOT NULL)  WHEN ((rt0.c0)!=(rt0.c0)) THEN (- (2.3520921E7)) ELSE rt0.c2 END) GROUP BY t0.c1, rt0.c2, rt0.c0, rt0.c1, t0.c2 UNION SELECT t0.c1, rt0.c2, rt0.c0, rt0.c1, t0.c2 FROM t0 FULL OUTER JOIN rt0 ON ((((t0.c0) BETWEEN (t0.c2) AND (t0.c0))) IS TRUE) WHERE ((NOT (CASE ((t0.c2) NOT NULL)  WHEN ((rt0.c0)<>(rt0.c0)) THEN (- (2.3520921E7)) ELSE rt0.c2 END))) GROUP BY t0.c1, rt0.c2, rt0.c0, rt0.c1, t0.c2 UNION SELECT ALL t0.c1, rt0.c2, rt0.c0, rt0.c1, t0.c2 FROM t0 FULL OUTER JOIN rt0 ON ((((t0.c0) BETWEEN (t0.c2) AND (t0.c0))) IS TRUE) WHERE (((CASE ((t0.c2) NOT NULL)  WHEN ((rt0.c0)<>(rt0.c0)) THEN (- (2.3520921E7)) ELSE rt0.c2 END) ISNULL)) GROUP BY t0.c1, rt0.c2, rt0.c0, rt0.c1, t0.c2;
SELECT t0.c1, rt0.c2, rt0.c0, rt0.c1, t0.c2 FROM t0 FULL OUTER JOIN rt0 ON ((((t0.c0) BETWEEN (t0.c2) AND (t0.c0))) IS TRUE) GROUP BY t0.c1, rt0.c2, rt0.c0, rt0.c1, t0.c2;
SELECT ALL t0.c2, rt0.c0, t0.c1 FROM t0 NOT INDEXED INNER JOIN rt0 ON ((((rt0.c2)GLOB(t0.c0)))/((t0.c2 IN (t0.c0, rt0.c1)))) GROUP BY t0.c2, rt0.c0, t0.c1;
SELECT ALL t0.c2, rt0.c0, t0.c1 FROM t0 INNER JOIN rt0 ON ((((rt0.c2)GLOB(t0.c0)))/((t0.c2 IN (t0.c0, rt0.c1)))) GROUP BY t0.c2, rt0.c0, t0.c1 HAVING t0.c1 UNION ALL SELECT ALL t0.c2, rt0.c0, t0.c1 FROM t0 INNER JOIN rt0 ON ((((rt0.c2)GLOB(t0.c0)))/((t0.c2 IN (t0.c0, rt0.c1)))) GROUP BY t0.c2, rt0.c0, t0.c1 HAVING (NOT (t0.c1)) UNION ALL SELECT ALL t0.c2, rt0.c0, t0.c1 FROM t0 INNER JOIN rt0 ON ((((rt0.c2)GLOB(t0.c0)))/((t0.c2 IN (t0.c0, rt0.c1)))) GROUP BY t0.c2, rt0.c0, t0.c1 HAVING ((t0.c1) ISNULL);
SELECT ALL t0.c2, rt0.c0, t0.c1 FROM t0 NOT INDEXED INNER JOIN rt0 ON ((((rt0.c2)GLOB(t0.c0)))/((t0.c2 IN (t0.c0, rt0.c1)))) GROUP BY t0.c2, rt0.c0, t0.c1;
SELECT ALL t0.c2, rt0.c0, t0.c1 FROM t0 INNER JOIN rt0 ON ((((rt0.c2)GLOB(t0.c0)))/((t0.c2 IN (t0.c0, rt0.c1)))) GROUP BY t0.c2, rt0.c0, t0.c1 HAVING t0.c1 UNION ALL SELECT ALL t0.c2, rt0.c0, t0.c1 FROM t0 INNER JOIN rt0 ON ((((rt0.c2)GLOB(t0.c0)))/((t0.c2 IN (t0.c0, rt0.c1)))) GROUP BY t0.c2, rt0.c0, t0.c1 HAVING (NOT (t0.c1)) UNION ALL SELECT ALL t0.c2, rt0.c0, t0.c1 FROM t0 INNER JOIN rt0 ON ((((rt0.c2)GLOB(t0.c0)))/((t0.c2 IN (t0.c0, rt0.c1)))) GROUP BY t0.c2, rt0.c0, t0.c1 HAVING ((t0.c1) ISNULL);
SELECT ALL t0.c2, rt0.c0, t0.c1 FROM t0 NOT INDEXED INNER JOIN rt0 ON ((((rt0.c2)GLOB(t0.c0)))/((t0.c2 IN (t0.c0, rt0.c1)))) GROUP BY t0.c2, rt0.c0, t0.c1;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 CROSS JOIN t0 ON ((((t0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c2))) IN ());
SELECT rt0.c1, rt0.c2 FROM rt0 CROSS JOIN t0 ON ((((t0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c2))) IN ()) WHERE ((((((rt0.c1, t0.c0, x'')) NOT BETWEEN ((t0.c2, rt0.c0, rt0.c0)) AND ((t0.c1, t0.c2, rt0.c0))))IS NOT((t0.c1 IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 CROSS JOIN t0 ON ((((t0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c2))) IN ()) WHERE ((NOT ((((((rt0.c1, t0.c0, x'')) NOT BETWEEN ((t0.c2, rt0.c0, rt0.c0)) AND ((t0.c1, t0.c2, rt0.c0))))IS NOT((t0.c1 IN ())))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 CROSS JOIN t0 ON ((((t0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c2))) IN ()) WHERE ((((((((rt0.c1, t0.c0, x'')) NOT BETWEEN ((t0.c2, rt0.c0, rt0.c0)) AND ((t0.c1, t0.c2, rt0.c0))))IS NOT((t0.c1 IN ())))) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM rt0 CROSS JOIN t0 ON ((((t0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c2))) IN ());
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE ((((t0.c0 IN ())) IS TRUE)) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT ((((t0.c0 IN ())) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((((((t0.c0 IN ())) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT t0.c0, t0.c2 FROM t0, rt0 GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0, rt0 WHERE ('-672833653') GROUP BY t0.c0, t0.c2 UNION SELECT ALL t0.c0, t0.c2 FROM t0, rt0 WHERE ((NOT ('-672833653'))) GROUP BY t0.c0, t0.c2 UNION SELECT ALL t0.c0, t0.c2 FROM t0, rt0 WHERE ((('-672833653') ISNULL)) GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0, rt0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, rt0.c1, t0.c1, t0.c2, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c0)||(t0.c1)) IN (COALESCE(t0.c1, rt0.c0, t0.c0, t0.c0))) GROUP BY t0.c0, rt0.c1, t0.c1, t0.c2, rt0.c0;
SELECT ALL t0.c0, rt0.c1, t0.c1, t0.c2, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c0)||(t0.c1)) IN (COALESCE(t0.c1, rt0.c0, t0.c0, t0.c0))) GROUP BY t0.c0, rt0.c1, t0.c1, t0.c2, rt0.c0 HAVING MAX(LIKELY(COUNT(*))) UNION ALL SELECT ALL t0.c0, rt0.c1, t0.c1, t0.c2, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c0)||(t0.c1)) IN (COALESCE(t0.c1, rt0.c0, t0.c0, t0.c0))) GROUP BY t0.c0, rt0.c1, t0.c1, t0.c2, rt0.c0 HAVING (NOT (MAX(LIKELY(COUNT(*))))) UNION ALL SELECT t0.c0, rt0.c1, t0.c1, t0.c2, rt0.c0 FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c0)||(t0.c1)) IN (COALESCE(t0.c1, rt0.c0, t0.c0, t0.c0))) GROUP BY t0.c0, rt0.c1, t0.c1, t0.c2, rt0.c0 HAVING ((MAX(LIKELY(COUNT(*)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (TRIM(DISTINCT CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (TRIM(DISTINCT CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))) UNION ALL SELECT * FROM rt0 WHERE (((TRIM(DISTINCT CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((rt0.c0)!=(rt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c0)<>(rt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((rt0.c0)<>(rt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT t0.c2, rt0.c2, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((+ (rt0.c0)) IN ()) GROUP BY t0.c2, rt0.c2, rt0.c0;
SELECT ALL t0.c2, rt0.c2, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((+ (rt0.c0)) IN ()) WHERE ((rt0.c2 IN (rt0.c2, rt0.c2)) COLLATE RTRIM) GROUP BY t0.c2, rt0.c2, rt0.c0 UNION SELECT ALL t0.c2, rt0.c2, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((+ (rt0.c0)) IN ()) WHERE ((NOT ((rt0.c2 IN (rt0.c2, rt0.c2)) COLLATE RTRIM))) GROUP BY t0.c2, rt0.c2, rt0.c0 UNION SELECT t0.c2, rt0.c2, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((+ (rt0.c0)) IN ()) WHERE ((((rt0.c2 IN (rt0.c2, rt0.c2)) COLLATE RTRIM) ISNULL)) GROUP BY t0.c2, rt0.c2, rt0.c0;
SELECT t0.c2, rt0.c2, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((+ (rt0.c0)) IN ()) GROUP BY t0.c2, rt0.c2, rt0.c0;
SELECT t0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY t0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT t0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY t0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(CASE WHEN t0.c1 THEN TOTAL(SUM(rt0.c2)) WHEN COUNT(*) THEN rt0.c2 WHEN t0.c1 THEN GROUP_CONCAT(t0.c0) WHEN COUNT(AVG(TOTAL(rt0.c0))) THEN TOTAL(GROUP_CONCAT(rt0.c2)) WHEN t0.c2 THEN rt0.c1 END) UNION ALL SELECT ALL t0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY t0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(CASE WHEN t0.c1 THEN TOTAL(SUM(rt0.c2)) WHEN COUNT(*) THEN rt0.c2 WHEN t0.c1 THEN GROUP_CONCAT(t0.c0) WHEN COUNT(AVG(TOTAL(rt0.c0))) THEN TOTAL(GROUP_CONCAT(rt0.c2)) WHEN t0.c2 THEN rt0.c1 END))) UNION ALL SELECT ALL t0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY t0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(CASE WHEN t0.c1 THEN TOTAL(SUM(rt0.c2)) WHEN COUNT(*) THEN rt0.c2 WHEN t0.c1 THEN GROUP_CONCAT(t0.c0) WHEN COUNT(AVG(TOTAL(rt0.c0))) THEN TOTAL(GROUP_CONCAT(rt0.c2)) WHEN t0.c2 THEN rt0.c1 END)) ISNULL);
SELECT ALL t0.c0, rt0.c2, rt0.c0 FROM rt0, t0;
SELECT ALL t0.c0, rt0.c2, rt0.c0 FROM rt0, t0 WHERE ((((((rt0.c0)>=(t0.c1))))!=((rt0.c1)))) UNION ALL SELECT ALL t0.c0, rt0.c2, rt0.c0 FROM rt0, t0 WHERE ((NOT ((((((rt0.c0)>=(t0.c1))))<>((rt0.c1)))))) UNION ALL SELECT ALL t0.c0, rt0.c2, rt0.c0 FROM rt0, t0 WHERE ((((((((rt0.c0)>=(t0.c1))))!=((rt0.c1)))) ISNULL));
SELECT ALL t0.c0, rt0.c2, rt0.c0 FROM rt0, t0;
SELECT DISTINCT t0.c0, t0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON (((t0.c2)) BETWEEN ((((rt0.c2)GLOB(rt0.c0)))) AND ((((rt0.c0) NOT BETWEEN (t0.c2) AND (NULL)))));
SELECT DISTINCT t0.c0, t0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON (((t0.c2)) BETWEEN ((((rt0.c2)GLOB(rt0.c0)))) AND ((((rt0.c0) NOT BETWEEN (t0.c2) AND (NULL))))) WHERE (CAST(t0.c1 COLLATE BINARY AS NUMERIC)) UNION SELECT DISTINCT t0.c0, t0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON (((t0.c2)) BETWEEN ((((rt0.c2)GLOB(rt0.c0)))) AND ((((rt0.c0) NOT BETWEEN (t0.c2) AND (NULL))))) WHERE ((NOT (CAST(t0.c1 COLLATE BINARY AS NUMERIC)))) UNION SELECT DISTINCT t0.c0, t0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON (((t0.c2)) BETWEEN ((((rt0.c2)GLOB(rt0.c0)))) AND ((((rt0.c0) NOT BETWEEN (t0.c2) AND (NULL))))) WHERE (((CAST(t0.c1 COLLATE BINARY AS NUMERIC)) ISNULL));
SELECT DISTINCT t0.c0, t0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON (((t0.c2)) BETWEEN ((((rt0.c2)GLOB(rt0.c0)))) AND ((((rt0.c0) NOT BETWEEN (t0.c2) AND (NULL)))));
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (rt0.c2 COLLATE RTRIM) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2 COLLATE RTRIM))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING GROUP_CONCAT(MIN(rt0.c0)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(MIN(rt0.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(MIN(rt0.c0))) ISNULL);
SELECT * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE (-5.27063167E8) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (-5.27063167E8))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE (((-5.27063167E8) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((+ (rt0.c0)))OR(SQLITE_VERSION())))AND(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(0.3209439364847645)))OR(0.9417991391390412))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((+ (rt0.c0)))OR(SQLITE_VERSION())))AND(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(0.3209439364847645)))OR(0.9417991391390412))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((+ (rt0.c0)))OR(SQLITE_VERSION())))AND(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(0.3209439364847645)))OR(0.9417991391390412))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t0.c0, rt0.c0, t0.c1, t0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, t0.c1, t0.c2;
SELECT ALL t0.c0, rt0.c0, t0.c1, t0.c2 FROM t0, rt0 WHERE (((((((rt0.c0)OR(rt0.c0)))OR(t0.c2)))IS(((t0.c0)>=(t0.c0))))) GROUP BY t0.c0, rt0.c0, t0.c1, t0.c2 UNION SELECT ALL t0.c0, rt0.c0, t0.c1, t0.c2 FROM t0, rt0 WHERE ((NOT (((((((rt0.c0)OR(rt0.c0)))OR(t0.c2)))IS(((t0.c0)>=(t0.c0))))))) GROUP BY t0.c0, rt0.c0, t0.c1, t0.c2 UNION SELECT ALL t0.c0, rt0.c0, t0.c1, t0.c2 FROM t0, rt0 WHERE (((((((((rt0.c0)OR(rt0.c0)))OR(t0.c2)))IS(((t0.c0)>=(t0.c0))))) ISNULL)) GROUP BY t0.c0, rt0.c0, t0.c1, t0.c2;
SELECT t0.c0, rt0.c0, t0.c1, t0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, t0.c1, t0.c2;
SELECT t0.c1 FROM t0, rt0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0, rt0 GROUP BY t0.c1 HAVING json_object((((rt0.c2))==((COUNT(GROUP_CONCAT(t0.c0))))), GROUP_CONCAT(COUNT(*))) UNION ALL SELECT t0.c1 FROM t0, rt0 GROUP BY t0.c1 HAVING (NOT (json_object((((rt0.c2))=((COUNT(GROUP_CONCAT(t0.c0))))), GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT ALL t0.c1 FROM t0, rt0 GROUP BY t0.c1 HAVING ((json_object((((rt0.c2))=((COUNT(GROUP_CONCAT(t0.c0))))), GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER))>=(CHAR(rt0.c0, rt0.c0, rt0.c0)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS INTEGER))>=(CHAR(rt0.c0, rt0.c0, rt0.c0)))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c1 AS INTEGER))>=(CHAR(rt0.c0, rt0.c0, rt0.c0)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((NOT ((rt0.c0 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((NOT ((rt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((NOT ((rt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0 WHERE (((t0.c0)LIKE(t0.c2)) COLLATE BINARY) GROUP BY t0.c1, t0.c0 UNION SELECT t0.c1, t0.c0 FROM t0 WHERE ((NOT (((t0.c0)LIKE(t0.c2)) COLLATE BINARY))) GROUP BY t0.c1, t0.c0 UNION SELECT ALL t0.c1, t0.c0 FROM t0 WHERE (((((t0.c0)LIKE(t0.c2)) COLLATE BINARY) ISNULL)) GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING ((MIN(GROUP_CONCAT(t0.c0))) NOT BETWEEN (COUNT(NULL)) AND (CASE WHEN t0.c1 THEN t0.c2 END)) UNION ALL SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING (NOT (((MIN(GROUP_CONCAT(t0.c0))) NOT BETWEEN (COUNT(NULL)) AND (CASE WHEN t0.c1 THEN t0.c2 END)))) UNION ALL SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING ((((MIN(GROUP_CONCAT(t0.c0))) NOT BETWEEN (COUNT(NULL)) AND (CASE WHEN t0.c1 THEN t0.c2 END))) ISNULL);
SELECT ALL rt0.c2 FROM t0, rt0;
SELECT rt0.c2 FROM t0, rt0 WHERE (((((rt0.c1) NOTNULL))>(CAST(t0.c2 AS TEXT)))) UNION ALL SELECT rt0.c2 FROM t0, rt0 WHERE ((NOT (((((rt0.c1) NOTNULL))>(CAST(t0.c2 AS TEXT)))))) UNION ALL SELECT ALL rt0.c2 FROM t0, rt0 WHERE (((((((rt0.c1) NOTNULL))>(CAST(t0.c2 AS TEXT)))) ISNULL));
SELECT ALL rt0.c2 FROM t0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))-(NULL))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))-(NULL))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))-(NULL))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c1) IS FALSE))||(((rt0.c2)<=(rt0.c0))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1) IS FALSE))||(((rt0.c2)<=(rt0.c0))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c1) IS FALSE))||(((rt0.c2)<=(rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING GROUP_CONCAT(COUNT(COUNT(COUNT(*)))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(COUNT(COUNT(*)))))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING ((GROUP_CONCAT(COUNT(COUNT(COUNT(*))))) ISNULL);
SELECT ALL t0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (((t0.c2))<>((t0.c0))) COLLATE BINARY;
SELECT t0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (((t0.c2))!=((t0.c0))) COLLATE BINARY WHERE (((((t0.c2)>=(rt0.c2))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c1)))))) UNION ALL SELECT ALL t0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (((t0.c2))<>((t0.c0))) COLLATE BINARY WHERE ((NOT (((((t0.c2)>=(rt0.c2))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c1)))))))) UNION ALL SELECT ALL t0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (((t0.c2))!=((t0.c0))) COLLATE BINARY WHERE (((((((t0.c2)>=(rt0.c2))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c1)))))) ISNULL));
SELECT ALL t0.c0, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (((t0.c2))<>((t0.c0))) COLLATE BINARY;
SELECT DISTINCT t0.c1, rt0.c2, t0.c0 FROM t0, rt0;
SELECT DISTINCT t0.c1, rt0.c2, t0.c0 FROM t0, rt0 WHERE ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END IN ())) UNION SELECT DISTINCT t0.c1, rt0.c2, t0.c0 FROM t0, rt0 WHERE ((NOT ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END IN ())))) UNION SELECT DISTINCT t0.c1, rt0.c2, t0.c0 FROM t0, rt0 WHERE ((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END IN ())) ISNULL));
SELECT DISTINCT t0.c1, rt0.c2, t0.c0 FROM t0, rt0;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 WHERE ((((((t0.c0, t0.c1, t0.c0))<((t0.c2, t0.c0, t0.c0))))/((t0.c2 IN ())))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 WHERE ((NOT ((((((t0.c0, t0.c1, t0.c0))<((t0.c2, t0.c0, t0.c0))))/((t0.c2 IN ())))))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0 WHERE ((((((((t0.c0, t0.c1, t0.c0))<((t0.c2, t0.c0, t0.c0))))/((t0.c2 IN ())))) ISNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c2, t0.c0, rt0.c0, rt0.c2 FROM rt0, t0 INDEXED BY i11 GROUP BY t0.c2, t0.c0, rt0.c0, rt0.c2;
SELECT t0.c2, t0.c0, rt0.c0, rt0.c2 FROM rt0, t0 INDEXED BY i11 GROUP BY t0.c2, t0.c0, rt0.c0, rt0.c2 HAVING AVG(rt0.c1) UNION ALL SELECT ALL t0.c2, t0.c0, rt0.c0, rt0.c2 FROM rt0, t0 INDEXED BY i11 GROUP BY t0.c2, t0.c0, rt0.c0, rt0.c2 HAVING (NOT (AVG(rt0.c1))) UNION ALL SELECT ALL t0.c2, t0.c0, rt0.c0, rt0.c2 FROM rt0, t0 INDEXED BY i11 GROUP BY t0.c2, t0.c0, rt0.c0, rt0.c2 HAVING ((AVG(rt0.c1)) ISNULL);
SELECT ALL t0.c2, t0.c0, rt0.c0, rt0.c2 FROM rt0, t0 INDEXED BY i11 GROUP BY t0.c2, t0.c0, rt0.c0, rt0.c2;
SELECT t0.c2, t0.c0, rt0.c0, rt0.c2 FROM rt0, t0 INDEXED BY i11 GROUP BY t0.c2, t0.c0, rt0.c0, rt0.c2 HAVING AVG(rt0.c1) UNION ALL SELECT ALL t0.c2, t0.c0, rt0.c0, rt0.c2 FROM rt0, t0 INDEXED BY i11 GROUP BY t0.c2, t0.c0, rt0.c0, rt0.c2 HAVING (NOT (AVG(rt0.c1))) UNION ALL SELECT ALL t0.c2, t0.c0, rt0.c0, rt0.c2 FROM rt0, t0 INDEXED BY i11 GROUP BY t0.c2, t0.c0, rt0.c0, rt0.c2 HAVING ((AVG(rt0.c1)) ISNULL);
SELECT ALL t0.c2, t0.c0, rt0.c0, rt0.c2 FROM rt0, t0 INDEXED BY i11 GROUP BY t0.c2, t0.c0, rt0.c0, rt0.c2;
SELECT ALL * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE (((((((t0.c0)AND(t0.c1)))AND(rt0.c2))) BETWEEN ((~ (rt0.c1))) AND (CASE WHEN t0.c1 THEN rt0.c2 WHEN rt0.c0 THEN t0.c1 WHEN x'8a3d' THEN rt0.c1 ELSE NULL END))) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (((((((t0.c0)AND(t0.c1)))AND(rt0.c2))) BETWEEN ((~ (rt0.c1))) AND (CASE WHEN t0.c1 THEN rt0.c2 WHEN rt0.c0 THEN t0.c1 WHEN x'8a3d' THEN rt0.c1 ELSE NULL END))))) UNION ALL SELECT * FROM rt0, t0 WHERE (((((((((t0.c0)AND(t0.c1)))AND(rt0.c2))) BETWEEN ((~ (rt0.c1))) AND (CASE WHEN t0.c1 THEN rt0.c2 WHEN rt0.c0 THEN t0.c1 WHEN x'8a3d' THEN rt0.c1 ELSE NULL END))) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON CAST(rt0.c0 AS TEXT) COLLATE BINARY;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON CAST(rt0.c0 AS TEXT) COLLATE BINARY WHERE ('C*]') UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON CAST(rt0.c0 AS TEXT) COLLATE BINARY WHERE ((NOT ('C*]'))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON CAST(rt0.c0 AS TEXT) COLLATE BINARY WHERE ((('C*]') ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON CAST(rt0.c0 AS TEXT) COLLATE BINARY;
SELECT rt0.c0, rt0.c1, t0.c0, t0.c1, rt0.c2 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c0, rt0.c1, t0.c0, t0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, t0.c0, t0.c1, rt0.c2 FROM rt0 NATURAL JOIN t0 WHERE (((x'b067')IS NOT(TRIM('1759710927')))) GROUP BY rt0.c0, rt0.c1, t0.c0, t0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, t0.c0, t0.c1, rt0.c2 FROM rt0 NATURAL JOIN t0 WHERE ((NOT (((x'b067')IS NOT(TRIM('1759710927')))))) GROUP BY rt0.c0, rt0.c1, t0.c0, t0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, t0.c0, t0.c1, rt0.c2 FROM rt0 NATURAL JOIN t0 WHERE (((((x'b067')IS NOT(TRIM('1759710927')))) ISNULL)) GROUP BY rt0.c0, rt0.c1, t0.c0, t0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, t0.c0, t0.c1, rt0.c2 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c0, rt0.c1, t0.c0, t0.c1, rt0.c2;
SELECT t0.c0, rt0.c2, t0.c2, rt0.c1, rt0.c0, t0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, t0.c2, rt0.c1, rt0.c0, t0.c1;
SELECT ALL t0.c0, rt0.c2, t0.c2, rt0.c1, rt0.c0, t0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, t0.c2, rt0.c1, rt0.c0, t0.c1 HAVING SUM(SUM(AVG(rt0.c1))) UNION ALL SELECT ALL t0.c0, rt0.c2, t0.c2, rt0.c1, rt0.c0, t0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, t0.c2, rt0.c1, rt0.c0, t0.c1 HAVING (NOT (SUM(SUM(AVG(rt0.c1))))) UNION ALL SELECT ALL t0.c0, rt0.c2, t0.c2, rt0.c1, rt0.c0, t0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, t0.c2, rt0.c1, rt0.c0, t0.c1 HAVING ((SUM(SUM(AVG(rt0.c1)))) ISNULL);
SELECT ALL t0.c1, t0.c2 FROM t0;
SELECT ALL t0.c1, t0.c2 FROM t0 WHERE ((- (UNLIKELY(t0.c1)))) UNION ALL SELECT t0.c1, t0.c2 FROM t0 WHERE ((NOT ((- (UNLIKELY(t0.c1)))))) UNION ALL SELECT t0.c1, t0.c2 FROM t0 WHERE ((((- (UNLIKELY(t0.c1)))) ISNULL));
SELECT ALL t0.c1, t0.c2 FROM t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (LOWER(((rt0.c1)>=(rt0.c2)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (LOWER(((rt0.c1)>=(rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((LOWER(((rt0.c1)>=(rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((((((((((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))AND(HEX(t0.c1))))OR(((t0.c1) IS TRUE))))OR((NOT (t0.c1)))))AND((((t0.c0))!=((t0.c2)))))) GROUP BY t0.c1, t0.c2, t0.c0 UNION SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((NOT ((((((((((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))AND(HEX(t0.c1))))OR(((t0.c1) IS TRUE))))OR((NOT (t0.c1)))))AND((((t0.c0))<>((t0.c2)))))))) GROUP BY t0.c1, t0.c2, t0.c0 UNION SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((((((((((((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))AND(HEX(t0.c1))))OR(((t0.c1) IS TRUE))))OR((NOT (t0.c1)))))AND((((t0.c0))!=((t0.c2)))))) ISNULL)) GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING MAX(COUNT(*)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL TOTAL((~ (CAST(rt0.c1 AS BLOB)))) FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((((rt0.c2) ISNULL)))) ASC  NULLS LAST;
SELECT * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE (CASE (t0.c1 IN ())  WHEN LIKELIHOOD(DISTINCT t0.c1, 0.8496209542086988) THEN rt0.c1 COLLATE BINARY ELSE 23520921 END) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT (CASE (t0.c1 IN ())  WHEN LIKELIHOOD(DISTINCT t0.c1, 0.8496209542086988) THEN rt0.c1 COLLATE BINARY ELSE 23520921 END))) UNION ALL SELECT * FROM rt0, t0 WHERE (((CASE (t0.c1 IN ())  WHEN LIKELIHOOD(DISTINCT t0.c1, 0.8496209542086988) THEN rt0.c1 COLLATE BINARY ELSE 23520921 END) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT t0.c1, t0.c2, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0;
SELECT DISTINCT t0.c1, t0.c2, rt0.c2, rt0.c0, rt0.c1 FROM t0 NOT INDEXED, rt0 WHERE (((t0.c0)|(x'35e8'))) UNION SELECT DISTINCT t0.c1, t0.c2, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 WHERE ((NOT (((t0.c0)|(x'35e8'))))) UNION SELECT DISTINCT t0.c1, t0.c2, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 WHERE (((((t0.c0)|(x'35e8'))) ISNULL));
SELECT DISTINCT t0.c1, t0.c2, rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (LIKELY(rt0.c1 COLLATE BINARY)) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (LIKELY(rt0.c1 COLLATE BINARY)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((LIKELY(rt0.c1 COLLATE BINARY)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT t0.c1, t0.c2, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY t0.c1, t0.c2, rt0.c1, rt0.c0, rt0.c2;
SELECT t0.c1, t0.c2, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY t0.c1, t0.c2, rt0.c1, rt0.c0, rt0.c2 HAVING AVG(MIN(SUM(rt0.c1))) UNION ALL SELECT t0.c1, t0.c2, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY t0.c1, t0.c2, rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (AVG(MIN(SUM(rt0.c1))))) UNION ALL SELECT t0.c1, t0.c2, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY t0.c1, t0.c2, rt0.c1, rt0.c0, rt0.c2 HAVING ((AVG(MIN(SUM(rt0.c1)))) ISNULL);
SELECT ALL MAX((((t0.c0) IS FALSE) IN (ROUND(rt0.c2, rt0.c1)))) FROM rt0, t0 ORDER BY NULL, (x'' IN ()) ASC  NULLS LAST, (~ (((((t0.c1)AND(rt0.c2)))AND(t0.c2)))) DESC;
SELECT ALL * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE (LOWER(rt0.c2) COLLATE RTRIM) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (LOWER(rt0.c2) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((LOWER(rt0.c2) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((- ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((- ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((- ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (TYPEOF((((rt0.c1))>((rt0.c1))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (TYPEOF((((rt0.c1))>((rt0.c1))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((TYPEOF((((rt0.c1))>((rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c0, t0.c1, t0.c2, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, t0.c1, t0.c2, rt0.c2, t0.c0;
SELECT rt0.c1, rt0.c0, t0.c1, t0.c2, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, t0.c1, t0.c2, rt0.c2, t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c0, t0.c1, t0.c2, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, t0.c1, t0.c2, rt0.c2, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0, t0.c1, t0.c2, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, t0.c1, t0.c2, rt0.c2, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0, t0.c1, t0.c2, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, t0.c1, t0.c2, rt0.c2, t0.c0;
SELECT rt0.c1, rt0.c0, t0.c1, t0.c2, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, t0.c1, t0.c2, rt0.c2, t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c0, t0.c1, t0.c2, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, t0.c1, t0.c2, rt0.c2, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0, t0.c1, t0.c2, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, t0.c1, t0.c2, rt0.c2, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0, t0.c1, t0.c2, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, t0.c1, t0.c2, rt0.c2, t0.c0;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (CAST('766494945' AS REAL)) UNION ALL SELECT * FROM t0 WHERE ((NOT (CAST('766494945' AS REAL)))) UNION ALL SELECT * FROM t0 WHERE (((CAST('766494945' AS REAL)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE ((+ ((NOT (t0.c0))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT ((+ ((NOT (t0.c0))))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((((+ ((NOT (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 NOT INDEXED WHERE (((CAST(rt0.c2 AS NUMERIC)) NOT NULL)) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS NUMERIC)) NOT NULL)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((CAST(rt0.c2 AS NUMERIC)) NOT NULL)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((((((COUNT(SUM(MAX(rt0.c1))))OR(COUNT(*))))AND(SUM(GROUP_CONCAT(TOTAL(rt0.c2))))))OR(TOTAL(rt0.c2))))AND(MAX(COUNT(*)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (((((((((COUNT(SUM(MAX(rt0.c1))))OR(COUNT(*))))AND(SUM(GROUP_CONCAT(TOTAL(rt0.c2))))))OR(TOTAL(rt0.c2))))AND(MAX(COUNT(*)))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((((((((COUNT(SUM(MAX(rt0.c1))))OR(COUNT(*))))AND(SUM(GROUP_CONCAT(TOTAL(rt0.c2))))))OR(TOTAL(rt0.c2))))AND(MAX(COUNT(*))))) ISNULL);
SELECT ALL rt0.c2, t0.c2, t0.c1, rt0.c0, rt0.c1, t0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((NULLIF(DISTINCT t0.c1, t0.c2))+((((t0.c0))==((t0.c1)))));
SELECT ALL rt0.c2, t0.c2, t0.c1, rt0.c0, rt0.c1, t0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((NULLIF(DISTINCT t0.c1, t0.c2))+((((t0.c0))=((t0.c1))))) WHERE (rt0.c2) UNION ALL SELECT ALL rt0.c2, t0.c2, t0.c1, rt0.c0, rt0.c1, t0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((NULLIF(DISTINCT t0.c1, t0.c2))+((((t0.c0))==((t0.c1))))) WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL rt0.c2, t0.c2, t0.c1, rt0.c0, rt0.c1, t0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((NULLIF(DISTINCT t0.c1, t0.c2))+((((t0.c0))=((t0.c1))))) WHERE (((rt0.c2) ISNULL));
SELECT ALL rt0.c2, t0.c2, t0.c1, rt0.c0, rt0.c1, t0.c0 FROM t0 LEFT OUTER JOIN rt0 ON ((NULLIF(DISTINCT t0.c1, t0.c2))+((((t0.c0))==((t0.c1)))));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((SQLITE_VERSION())/((t0.c1 IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((SQLITE_VERSION())/((t0.c1 IN ())))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((SQLITE_VERSION())/((t0.c1 IN ())))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 WHERE (CAST(json_type(t0.c0) AS TEXT)) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE ((NOT (CAST(json_type(t0.c0) AS TEXT)))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 WHERE (((CAST(json_type(t0.c0) AS TEXT)) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING GROUP_CONCAT(TOTAL(MIN(COUNT(*)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(TOTAL(MIN(COUNT(*)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(TOTAL(MIN(COUNT(*))))) ISNULL);
SELECT t0.c0, t0.c2, t0.c1 FROM t0;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((((ABS(t0.c0)))>(((- (t0.c0)))))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((NOT ((((ABS(t0.c0)))>(((- (t0.c0)))))))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((((((ABS(t0.c0)))>(((- (t0.c0)))))) ISNULL));
SELECT t0.c0, t0.c2, t0.c1 FROM t0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (((rt0.c2) IS TRUE) COLLATE BINARY) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (((rt0.c2) IS TRUE) COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((((rt0.c2) IS TRUE) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 WHERE (((((t0.c0)>=(t0.c1))) ISNULL)) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 WHERE ((NOT (((((t0.c0)>=(t0.c1))) ISNULL)))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 WHERE (((((((t0.c0)>=(t0.c1))) ISNULL)) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE (rt0.c0) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((rt0.c0) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((0.045119486643128925) IS TRUE)) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT (((0.045119486643128925) IS TRUE)))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((((0.045119486643128925) IS TRUE)) ISNULL));
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0 WHERE (((CAST(t0.c0 AS BLOB)) NOT BETWEEN ((t0.c1 IN ())) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM t0 WHERE ((NOT (((CAST(t0.c0 AS BLOB)) NOT BETWEEN ((t0.c1 IN ())) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))))) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM t0 WHERE (((((CAST(t0.c0 AS BLOB)) NOT BETWEEN ((t0.c1 IN ())) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) ISNULL)) GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING COUNT((+ (COUNT(*)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (COUNT((+ (COUNT(*)))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((COUNT((+ (COUNT(*))))) ISNULL);
SELECT rt0.c2 FROM t0 CROSS JOIN rt0 ON (- (CAST(NULL AS NUMERIC)));
SELECT rt0.c2 FROM t0 CROSS JOIN rt0 ON (- (CAST(NULL AS NUMERIC))) WHERE (((t0.c0) BETWEEN (((rt0.c2) IS FALSE)) AND (t0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c2 FROM t0 CROSS JOIN rt0 ON (- (CAST(NULL AS NUMERIC))) WHERE ((NOT (((t0.c0) BETWEEN (((rt0.c2) IS FALSE)) AND (t0.c0 COLLATE RTRIM))))) UNION ALL SELECT rt0.c2 FROM t0 CROSS JOIN rt0 ON (- (CAST(NULL AS NUMERIC))) WHERE (((((t0.c0) BETWEEN (((rt0.c2) IS FALSE)) AND (t0.c0 COLLATE RTRIM))) ISNULL));
SELECT rt0.c2 FROM t0 CROSS JOIN rt0 ON (- (CAST(NULL AS NUMERIC)));
SELECT DISTINCT t0.c0, t0.c1 FROM t0;
SELECT DISTINCT t0.c0, t0.c1 FROM t0 WHERE (x'0a68') UNION SELECT DISTINCT t0.c0, t0.c1 FROM t0 WHERE ((NOT (x'0a68'))) UNION SELECT DISTINCT t0.c0, t0.c1 FROM t0 WHERE (((x'0a68') ISNULL));
SELECT DISTINCT t0.c0, t0.c1 FROM t0;
SELECT rt0.c2, t0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, t0.c2, t0.c0;
SELECT ALL rt0.c2, t0.c2, t0.c0 FROM t0, rt0 WHERE (((((CAST(t0.c0 AS BLOB))OR(1462092778)))AND(((rt0.c2) ISNULL)))) GROUP BY rt0.c2, t0.c2, t0.c0 UNION SELECT ALL rt0.c2, t0.c2, t0.c0 FROM t0, rt0 WHERE ((NOT (((((CAST(t0.c0 AS BLOB))OR(1462092778)))AND(((rt0.c2) ISNULL)))))) GROUP BY rt0.c2, t0.c2, t0.c0 UNION SELECT rt0.c2, t0.c2, t0.c0 FROM t0, rt0 WHERE (((((((CAST(t0.c0 AS BLOB))OR(1462092778)))AND(((rt0.c2) ISNULL)))) ISNULL)) GROUP BY rt0.c2, t0.c2, t0.c0;
SELECT rt0.c2, t0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, t0.c2, t0.c0;
SELECT ALL rt0.c1, t0.c0, t0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c0, t0.c2;
SELECT ALL rt0.c1, t0.c0, t0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c0, t0.c2 HAVING (((MIN(0Xac1d07c))) BETWEEN ((SUM(NULL))) AND ((t0.c0))) COLLATE NOCASE UNION ALL SELECT ALL rt0.c1, t0.c0, t0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c0, t0.c2 HAVING (NOT ((((MIN(0Xac1d07c))) BETWEEN ((SUM(NULL))) AND ((t0.c0))) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c1, t0.c0, t0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c0, t0.c2 HAVING (((((MIN(0Xac1d07c))) BETWEEN ((SUM(NULL))) AND ((t0.c0))) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c1, t0.c0, t0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c0, t0.c2;
SELECT ALL rt0.c1, t0.c0, t0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c0, t0.c2 HAVING (((MIN(0Xac1d07c))) BETWEEN ((SUM(NULL))) AND ((t0.c0))) COLLATE NOCASE UNION ALL SELECT ALL rt0.c1, t0.c0, t0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c0, t0.c2 HAVING (NOT ((((MIN(0Xac1d07c))) BETWEEN ((SUM(NULL))) AND ((t0.c0))) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c1, t0.c0, t0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c0, t0.c2 HAVING (((((MIN(0Xac1d07c))) BETWEEN ((SUM(NULL))) AND ((t0.c0))) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c1, t0.c0, t0.c2 FROM rt0, t0 GROUP BY rt0.c1, t0.c0, t0.c2;
SELECT MIN((+ (((rt0.c0)|(rt0.c2))))) FROM rt0 ORDER BY CASE WHEN 0.9672530640695645 THEN CAST(rt0.c0 AS REAL) WHEN CASE rt0.c1  WHEN rt0.c2 THEN '-384964049' END THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END WHEN (rt0.c2 IN ()) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) END  NULLS FIRST;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 WHERE (((t0.c2 COLLATE BINARY) NOT NULL)) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((NOT (((t0.c2 COLLATE BINARY) NOT NULL)))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE (((((t0.c2 COLLATE BINARY) NOT NULL)) ISNULL));
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((COALESCE(DISTINCT rt0.c1, rt0.c0) IN (rt0.c1 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((COALESCE(DISTINCT rt0.c1, rt0.c0) IN (rt0.c1 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((COALESCE(DISTINCT rt0.c1, rt0.c0) IN (rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, t0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c2, rt0.c0;
SELECT rt0.c2, t0.c2, rt0.c0 FROM rt0, t0 WHERE ((~ ((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((t0.c0, rt0.c2, t0.c2)) AND ((t0.c1, t0.c0, t0.c1)))))) GROUP BY rt0.c2, t0.c2, rt0.c0 UNION SELECT rt0.c2, t0.c2, rt0.c0 FROM rt0, t0 WHERE ((NOT ((~ ((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((t0.c0, rt0.c2, t0.c2)) AND ((t0.c1, t0.c0, t0.c1)))))))) GROUP BY rt0.c2, t0.c2, rt0.c0 UNION SELECT rt0.c2, t0.c2, rt0.c0 FROM rt0, t0 WHERE ((((~ ((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((t0.c0, rt0.c2, t0.c2)) AND ((t0.c1, t0.c0, t0.c1)))))) ISNULL)) GROUP BY rt0.c2, t0.c2, rt0.c0;
SELECT rt0.c2, t0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c2, rt0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT t0.c2, rt0.c1 FROM rt0, t0;
SELECT t0.c2, rt0.c1 FROM rt0, t0 WHERE (rt0.c0) UNION ALL SELECT t0.c2, rt0.c1 FROM rt0, t0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL t0.c2, rt0.c1 FROM rt0, t0 WHERE (((rt0.c0) ISNULL));
SELECT t0.c2, rt0.c1 FROM rt0, t0;
SELECT DISTINCT t0.c0 FROM rt0, t0;
SELECT DISTINCT t0.c0 FROM rt0, t0 WHERE ((((rt0.c0)) NOT BETWEEN (((((t0.c0))>((rt0.c1))))) AND ((UNLIKELY(t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM rt0, t0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN (((((t0.c0))>((rt0.c1))))) AND ((UNLIKELY(t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM rt0, t0 WHERE ((((((rt0.c0)) NOT BETWEEN (((((t0.c0))>((rt0.c1))))) AND ((UNLIKELY(t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM rt0, t0;
SELECT ALL t0.c1, rt0.c2, t0.c2, t0.c0, rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY t0.c1, rt0.c2, t0.c2, t0.c0, rt0.c1, rt0.c0;
SELECT t0.c1, rt0.c2, t0.c2, t0.c0, rt0.c1, rt0.c0 FROM t0, rt0 WHERE (((((t0.c2)AND(t0.c2))) IS FALSE)) GROUP BY t0.c1, rt0.c2, t0.c2, t0.c0, rt0.c1, rt0.c0 UNION SELECT ALL t0.c1, rt0.c2, t0.c2, t0.c0, rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((NOT (((((t0.c2)AND(t0.c2))) IS FALSE)))) GROUP BY t0.c1, rt0.c2, t0.c2, t0.c0, rt0.c1, rt0.c0 UNION SELECT ALL t0.c1, rt0.c2, t0.c2, t0.c0, rt0.c1, rt0.c0 FROM t0, rt0 WHERE (((((((t0.c2)AND(t0.c2))) IS FALSE)) ISNULL)) GROUP BY t0.c1, rt0.c2, t0.c2, t0.c0, rt0.c1, rt0.c0;
SELECT ALL t0.c1, rt0.c2, t0.c2, t0.c0, rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY t0.c1, rt0.c2, t0.c2, t0.c0, rt0.c1, rt0.c0;
SELECT ALL t0.c0, rt0.c1, t0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, t0.c1;
SELECT t0.c0, rt0.c1, t0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, t0.c1 HAVING CAST((((AVG(COUNT(MAX(t0.c2))))) NOT BETWEEN ((TOTAL(TOTAL(0.9089185090220879)))) AND ((SUM(AVG(rt0.c1))))) AS INTEGER) UNION ALL SELECT t0.c0, rt0.c1, t0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, t0.c1 HAVING (NOT (CAST((((AVG(COUNT(MAX(t0.c2))))) NOT BETWEEN ((TOTAL(TOTAL(0.9089185090220879)))) AND ((SUM(AVG(rt0.c1))))) AS INTEGER))) UNION ALL SELECT ALL t0.c0, rt0.c1, t0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, t0.c1 HAVING ((CAST((((AVG(COUNT(MAX(t0.c2))))) NOT BETWEEN ((TOTAL(TOTAL(0.9089185090220879)))) AND ((SUM(AVG(rt0.c1))))) AS INTEGER)) ISNULL);
SELECT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 WHERE (NULL) UNION ALL SELECT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT (NULL))) UNION ALL SELECT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((NULL) ISNULL));
SELECT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT DISTINCT t0.c0, rt0.c1, rt0.c0, t0.c1, t0.c2, rt0.c2 FROM t0, rt0;
SELECT DISTINCT t0.c0, rt0.c1, rt0.c0, t0.c1, t0.c2, rt0.c2 FROM t0, rt0 WHERE (((TYPEOF(rt0.c1))>>((((t0.c1, t0.c0, rt0.c2))<=((rt0.c2, t0.c0, '2143953056')))))) UNION SELECT DISTINCT t0.c0, rt0.c1, rt0.c0, t0.c1, t0.c2, rt0.c2 FROM t0, rt0 WHERE ((NOT (((TYPEOF(rt0.c1))>>((((t0.c1, t0.c0, rt0.c2))<=((rt0.c2, t0.c0, '2143953056')))))))) UNION SELECT DISTINCT t0.c0, rt0.c1, rt0.c0, t0.c1, t0.c2, rt0.c2 FROM t0, rt0 WHERE (((((TYPEOF(rt0.c1))>>((((t0.c1, t0.c0, rt0.c2))<=((rt0.c2, t0.c0, '2143953056')))))) ISNULL));
SELECT DISTINCT t0.c0, rt0.c1, rt0.c0, t0.c1, t0.c2, rt0.c2 FROM t0, rt0;
SELECT rt0.c0, t0.c2, t0.c1, rt0.c2, t0.c0 FROM rt0, t0 GROUP BY rt0.c0, t0.c2, t0.c1, rt0.c2, t0.c0;
SELECT ALL rt0.c0, t0.c2, t0.c1, rt0.c2, t0.c0 FROM rt0, t0 WHERE (t0.c0) GROUP BY rt0.c0, t0.c2, t0.c1, rt0.c2, t0.c0 UNION SELECT ALL rt0.c0, t0.c2, t0.c1, rt0.c2, t0.c0 FROM rt0, t0 WHERE ((NOT (t0.c0))) GROUP BY rt0.c0, t0.c2, t0.c1, rt0.c2, t0.c0 UNION SELECT ALL rt0.c0, t0.c2, t0.c1, rt0.c2, t0.c0 FROM rt0, t0 WHERE (((t0.c0) ISNULL)) GROUP BY rt0.c0, t0.c2, t0.c1, rt0.c2, t0.c0;
SELECT rt0.c0, t0.c2, t0.c1, rt0.c2, t0.c0 FROM rt0, t0 GROUP BY rt0.c0, t0.c2, t0.c1, rt0.c2, t0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((TOTAL(rt0.c0))|(TOTAL(rt0.c2))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((TOTAL(rt0.c0))|(TOTAL(rt0.c2))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((TOTAL(rt0.c0))|(TOTAL(rt0.c2)))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((TOTAL(rt0.c0))|(TOTAL(rt0.c2))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((TOTAL(rt0.c0))|(TOTAL(rt0.c2))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((TOTAL(rt0.c0))|(TOTAL(rt0.c2)))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD(((rt0.c1)-(rt0.c0)), 0.433086713020137)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (LIKELIHOOD(((rt0.c1)-(rt0.c0)), 0.433086713020137)))) UNION ALL SELECT * FROM rt0 WHERE (((LIKELIHOOD(((rt0.c1)-(rt0.c0)), 0.433086713020137)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON ((NULL) ISNULL);
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON ((NULL) ISNULL) WHERE (CAST(-1798617084 AS BLOB)) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON ((NULL) ISNULL) WHERE ((NOT (CAST(-1798617084 AS BLOB)))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON ((NULL) ISNULL) WHERE (((CAST(-1798617084 AS BLOB)) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON ((NULL) ISNULL);
SELECT rt0.c0, t0.c1, t0.c0, rt0.c1 FROM t0 INNER JOIN rt0 ON ((rt0.c2)||((rt0.c0 IN ()))) GROUP BY rt0.c0, t0.c1, t0.c0, rt0.c1;
SELECT rt0.c0, t0.c1, t0.c0, rt0.c1 FROM t0 INNER JOIN rt0 ON ((rt0.c2)||((rt0.c0 IN ()))) WHERE (((((t0.c1) NOT BETWEEN (t0.c2) AND (rt0.c2))) NOTNULL)) GROUP BY rt0.c0, t0.c1, t0.c0, rt0.c1 UNION SELECT ALL rt0.c0, t0.c1, t0.c0, rt0.c1 FROM t0 INNER JOIN rt0 ON ((rt0.c2)||((rt0.c0 IN ()))) WHERE ((NOT (((((t0.c1) NOT BETWEEN (t0.c2) AND (rt0.c2))) NOTNULL)))) GROUP BY rt0.c0, t0.c1, t0.c0, rt0.c1 UNION SELECT ALL rt0.c0, t0.c1, t0.c0, rt0.c1 FROM t0 INNER JOIN rt0 ON ((rt0.c2)||((rt0.c0 IN ()))) WHERE (((((((t0.c1) NOT BETWEEN (t0.c2) AND (rt0.c2))) NOTNULL)) ISNULL)) GROUP BY rt0.c0, t0.c1, t0.c0, rt0.c1;
SELECT rt0.c0, t0.c1, t0.c0, rt0.c1 FROM t0 INNER JOIN rt0 ON ((rt0.c2)||((rt0.c0 IN ()))) GROUP BY rt0.c0, t0.c1, t0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, t0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, t0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c1 HAVING ((COUNT(*)) NOTNULL) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, t0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c1 HAVING (NOT (((COUNT(*)) NOTNULL))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, t0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c1 HAVING ((((COUNT(*)) NOTNULL)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, t0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, t0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c1 HAVING ((COUNT(*)) NOTNULL) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, t0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c1 HAVING (NOT (((COUNT(*)) NOTNULL))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, t0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c1 HAVING ((((COUNT(*)) NOTNULL)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, t0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((((t0.c1, t0.c2, t0.c0)) NOT BETWEEN (('lo''xl\', ((t0.c2) IS FALSE), json_object(t0.c2, 0xffffffffdb5dd3f6))) AND ((JULIANDAY(t0.c2, t0.c2, t0.c1), '486393335', ((((t0.c2)AND(t0.c1)))AND(t0.c1)))))) UNION ALL SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT ((((t0.c1, t0.c2, t0.c0)) NOT BETWEEN (('lo''xl\', ((t0.c2) IS FALSE), json_object(t0.c2, 0Xffffffffdb5dd3f6))) AND ((JULIANDAY(t0.c2, t0.c2, t0.c1), '486393335', ((((t0.c2)AND(t0.c1)))AND(t0.c1)))))))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((((((t0.c1, t0.c2, t0.c0)) NOT BETWEEN (('lo''xl\', ((t0.c2) IS FALSE), json_object(t0.c2, 0Xffffffffdb5dd3f6))) AND ((JULIANDAY(t0.c2, t0.c2, t0.c1), '486393335', ((((t0.c2)AND(t0.c1)))AND(t0.c1)))))) ISNULL));
SELECT t0.c2, t0.c0, t0.c1 FROM t0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c1)OR(0.3199013082763196)))AND((- (rt0.c2))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1)OR(0.3199013082763196)))AND((- (rt0.c2))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c1)OR(0.3199013082763196)))AND((- (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 WHERE (((((0.32489992871790674) NOT BETWEEN (t0.c2) AND (t0.c0))) NOT BETWEEN (ABS(DISTINCT t0.c0)) AND ((t0.c1 IN ())))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT t0.c1, t0.c0, t0.c2 FROM t0 WHERE ((NOT (((((0.32489992871790674) NOT BETWEEN (t0.c2) AND (t0.c0))) NOT BETWEEN (ABS(DISTINCT t0.c0)) AND ((t0.c1 IN ())))))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 WHERE (((((((0.32489992871790674) NOT BETWEEN (t0.c2) AND (t0.c0))) NOT BETWEEN (ABS(DISTINCT t0.c0)) AND ((t0.c1 IN ())))) ISNULL)) GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c2, t0.c0, rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY t0.c2, t0.c0, rt0.c1, rt0.c0;
SELECT ALL t0.c2, t0.c0, rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY t0.c2, t0.c0, rt0.c1, rt0.c0 HAVING TOTAL(AVG(GROUP_CONCAT(rt0.c1))) UNION ALL SELECT t0.c2, t0.c0, rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY t0.c2, t0.c0, rt0.c1, rt0.c0 HAVING (NOT (TOTAL(AVG(GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT t0.c2, t0.c0, rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY t0.c2, t0.c0, rt0.c1, rt0.c0 HAVING ((TOTAL(AVG(GROUP_CONCAT(rt0.c1)))) ISNULL);
SELECT ALL * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE (((t0.c1)<<(rt0.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT (((t0.c1)<<(rt0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((((t0.c1)<<(rt0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT rt0.c1 FROM t0, rt0;
SELECT DISTINCT rt0.c1 FROM t0, rt0 WHERE ((+ (((rt0.c0) NOTNULL)))) UNION SELECT DISTINCT rt0.c1 FROM t0, rt0 WHERE ((NOT ((+ (((rt0.c0) NOTNULL)))))) UNION SELECT DISTINCT rt0.c1 FROM t0, rt0 WHERE ((((+ (((rt0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT rt0.c1 FROM t0, rt0;
SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM t0, rt0 WHERE (t0.c2) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM t0, rt0 WHERE ((NOT (t0.c2))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM t0, rt0 WHERE (((t0.c2) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, t0.c1, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c1, rt0.c1;
SELECT ALL rt0.c2, t0.c1, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c1, rt0.c1 HAVING TOTAL(TOTAL(t0.c0)) UNION ALL SELECT rt0.c2, t0.c1, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c1, rt0.c1 HAVING (NOT (TOTAL(TOTAL(t0.c0)))) UNION ALL SELECT ALL rt0.c2, t0.c1, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c1, rt0.c1 HAVING ((TOTAL(TOTAL(t0.c0))) ISNULL);
SELECT * FROM t0 NATURAL JOIN rt0;
SELECT * FROM t0 NATURAL JOIN rt0 WHERE ((((rt0.c1 IN ()))%(t0.c0))) UNION ALL SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE ((NOT ((((rt0.c1 IN ()))%(t0.c0))))) UNION ALL SELECT * FROM t0 NATURAL JOIN rt0 WHERE ((((((rt0.c1 IN ()))%(t0.c0))) ISNULL));
SELECT * FROM t0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (TRIM((((rt0.c0, rt0.c0, rt0.c1))!=((rt0.c0, rt0.c2, rt0.c2))), (rt0.c1 IN ()))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (TRIM((((rt0.c0, rt0.c0, rt0.c1))<>((rt0.c0, rt0.c2, rt0.c2))), (rt0.c1 IN ()))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((TRIM((((rt0.c0, rt0.c0, rt0.c1))!=((rt0.c0, rt0.c2, rt0.c2))), (rt0.c1 IN ()))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, t0 WHERE (((t0.c0 IN ()) IN (t0.c0 COLLATE BINARY, ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((NOT (((t0.c0 IN ()) IN (t0.c0 COLLATE BINARY, ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0, t0 WHERE (((((t0.c0 IN ()) IN (t0.c0 COLLATE BINARY, ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT t0.c2, t0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON (((((rt0.c1) NOTNULL)))==((CASE rt0.c2  WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN rt0.c0 WHEN t0.c2 THEN t0.c1 ELSE '\nᗷ' END)));
SELECT ALL t0.c2, t0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON (((((rt0.c1) NOTNULL)))=((CASE rt0.c2  WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN rt0.c0 WHEN t0.c2 THEN t0.c1 ELSE '\nᗷ' END))) WHERE (t0.c0) UNION ALL SELECT t0.c2, t0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON (((((rt0.c1) NOTNULL)))==((CASE rt0.c2  WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN rt0.c0 WHEN t0.c2 THEN t0.c1 ELSE '\nᗷ' END))) WHERE ((NOT (t0.c0))) UNION ALL SELECT t0.c2, t0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON (((((rt0.c1) NOTNULL)))==((CASE rt0.c2  WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN rt0.c0 WHEN t0.c2 THEN t0.c1 ELSE '\nᗷ' END))) WHERE (((t0.c0) ISNULL));
SELECT t0.c2, t0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON (((((rt0.c1) NOTNULL)))==((CASE rt0.c2  WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN rt0.c0 WHEN t0.c2 THEN t0.c1 ELSE '\nᗷ' END)));
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (NULL) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((('bZ') NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((('bZ') NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ())))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((('bZ') NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((((((((rt0.c1)>=(MAX(rt0.c2))))OR(COUNT(*))))AND((COUNT(rt0.c0) IN ()))))OR(GROUP_CONCAT(rt0.c0) COLLATE NOCASE)))AND(AVG(COUNT(*)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((((((((((rt0.c1)>=(MAX(rt0.c2))))OR(COUNT(*))))AND((COUNT(rt0.c0) IN ()))))OR(GROUP_CONCAT(rt0.c0) COLLATE NOCASE)))AND(AVG(COUNT(*)))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((((((((((rt0.c1)>=(MAX(rt0.c2))))OR(COUNT(*))))AND((COUNT(rt0.c0) IN ()))))OR(GROUP_CONCAT(rt0.c0) COLLATE NOCASE)))AND(AVG(COUNT(*))))) ISNULL);
SELECT * FROM rt0 FULL OUTER JOIN t0 ON NULL;
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON NULL WHERE (((t0.c1) NOT BETWEEN ((rt0.c1 IN ())) AND ((((rt0.c0, rt0.c2, t0.c1)) BETWEEN ((t0.c0, rt0.c1, t0.c1)) AND ((rt0.c2, t0.c1, t0.c2)))))) UNION ALL SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON NULL WHERE ((NOT (((t0.c1) NOT BETWEEN ((rt0.c1 IN ())) AND ((((rt0.c0, rt0.c2, t0.c1)) BETWEEN ((t0.c0, rt0.c1, t0.c1)) AND ((rt0.c2, t0.c1, t0.c2)))))))) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN t0 ON NULL WHERE (((((t0.c1) NOT BETWEEN ((rt0.c1 IN ())) AND ((((rt0.c0, rt0.c2, t0.c1)) BETWEEN ((t0.c0, rt0.c1, t0.c1)) AND ((rt0.c2, t0.c1, t0.c2)))))) ISNULL));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON NULL;
SELECT DISTINCT rt0.c1, t0.c2, rt0.c2, t0.c0, rt0.c0 FROM t0, rt0;
SELECT DISTINCT rt0.c1, t0.c2, rt0.c2, t0.c0, rt0.c0 FROM t0, rt0 WHERE (((((t0.c0)>(t0.c1))) IS TRUE)) UNION SELECT DISTINCT rt0.c1, t0.c2, rt0.c2, t0.c0, rt0.c0 FROM t0, rt0 WHERE ((NOT (((((t0.c0)>(t0.c1))) IS TRUE)))) UNION SELECT DISTINCT rt0.c1, t0.c2, rt0.c2, t0.c0, rt0.c0 FROM t0, rt0 WHERE (((((((t0.c0)>(t0.c1))) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c1, t0.c2, rt0.c2, t0.c0, rt0.c0 FROM t0, rt0;
SELECT ALL rt0.c2, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c2)AND(t0.c0)))AND(t0.c1))) ISNULL) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c2)AND(t0.c0)))AND(t0.c1))) ISNULL) WHERE ((((((t0.c0)) BETWEEN ((t0.c2)) AND (('-1932172805'))))>=((((t0.c2, t0.c0, '')) BETWEEN (('385243240', rt0.c0, rt0.c2)) AND ((rt0.c2, t0.c1, t0.c0)))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c2)AND(t0.c0)))AND(t0.c1))) ISNULL) WHERE ((NOT ((((((t0.c0)) BETWEEN ((t0.c2)) AND (('-1932172805'))))>=((((t0.c2, t0.c0, '')) BETWEEN (('385243240', rt0.c0, rt0.c2)) AND ((rt0.c2, t0.c1, t0.c0)))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c2)AND(t0.c0)))AND(t0.c1))) ISNULL) WHERE ((((((((t0.c0)) BETWEEN ((t0.c2)) AND (('-1932172805'))))>=((((t0.c2, t0.c0, '')) BETWEEN (('385243240', rt0.c0, rt0.c2)) AND ((rt0.c2, t0.c1, t0.c0)))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c2)AND(t0.c0)))AND(t0.c1))) ISNULL) GROUP BY rt0.c2, rt0.c1;
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING (~ (AVG(t0.c1) COLLATE NOCASE)) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING (NOT ((~ (AVG(t0.c1) COLLATE NOCASE)))) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING (((~ (AVG(t0.c1) COLLATE NOCASE))) ISNULL);
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING (~ (AVG(t0.c1) COLLATE NOCASE)) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING (NOT ((~ (AVG(t0.c1) COLLATE NOCASE)))) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING (((~ (AVG(t0.c1) COLLATE NOCASE))) ISNULL);
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT SUM(((((LIKELY(DISTINCT rt0.c2))AND(((((rt0.c1)OR(t0.c1)))AND(rt0.c1)))))AND((((rt0.c0, t0.c2, 0.8278441777476403))>((t0.c2, rt0.c0, x'')))))) FROM rt0, t0 ORDER BY ((CAST(t0.c0 AS REAL))-(((t0.c0) BETWEEN (t0.c2) AND (rt0.c1))))  NULLS FIRST, ((rt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c0)) COLLATE NOCASE DESC, ((((((0.3042948271031697) NOT BETWEEN (t0.c1) AND (rt0.c1)))OR(((rt0.c0)||(rt0.c0)))))OR(json_quote(rt0.c1))) DESC;
SELECT ALL * FROM rt0 INNER JOIN t0 ON (((~ (rt0.c2)))>>(CASE WHEN rt0.c2 THEN t0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END));
SELECT ALL * FROM rt0 INNER JOIN t0 ON (((~ (rt0.c2)))>>(CASE WHEN rt0.c2 THEN t0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END)) WHERE (((NOT (t0.c2)) IN ())) UNION ALL SELECT * FROM rt0 INNER JOIN t0 ON (((~ (rt0.c2)))>>(CASE WHEN rt0.c2 THEN t0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END)) WHERE ((NOT (((NOT (t0.c2)) IN ())))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN t0 ON (((~ (rt0.c2)))>>(CASE WHEN rt0.c2 THEN t0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END)) WHERE (((((NOT (t0.c2)) IN ())) ISNULL));
SELECT ALL * FROM rt0 INNER JOIN t0 ON (((~ (rt0.c2)))>>(CASE WHEN rt0.c2 THEN t0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END));
SELECT DISTINCT rt0.c1, t0.c1, t0.c2 FROM t0, rt0;
SELECT DISTINCT rt0.c1, t0.c1, t0.c2 FROM t0, rt0 WHERE ((CAST('6VC{HH' AS NUMERIC) IN (HEX(rt0.c2), ((t0.c1) NOTNULL)))) UNION SELECT DISTINCT rt0.c1, t0.c1, t0.c2 FROM t0, rt0 WHERE ((NOT ((CAST('6VC{HH' AS NUMERIC) IN (HEX(rt0.c2), ((t0.c1) NOTNULL)))))) UNION SELECT DISTINCT rt0.c1, t0.c1, t0.c2 FROM t0, rt0 WHERE ((((CAST('6VC{HH' AS NUMERIC) IN (HEX(rt0.c2), ((t0.c1) NOTNULL)))) ISNULL));
SELECT DISTINCT rt0.c1, t0.c1, t0.c2 FROM t0, rt0;
SELECT ALL t0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c2, rt0.c0;
SELECT ALL t0.c2, rt0.c0 FROM t0, rt0 WHERE (((((t0.c2))>((t0.c0))) IN (t0.c2))) GROUP BY t0.c2, rt0.c0 UNION SELECT ALL t0.c2, rt0.c0 FROM t0, rt0 WHERE ((NOT (((((t0.c2))>((t0.c0))) IN (t0.c2))))) GROUP BY t0.c2, rt0.c0 UNION SELECT t0.c2, rt0.c0 FROM t0, rt0 WHERE (((((((t0.c2))>((t0.c0))) IN (t0.c2))) ISNULL)) GROUP BY t0.c2, rt0.c0;
SELECT ALL t0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c2, rt0.c0;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING CAST((((t0.c2)) BETWEEN ((MIN(t0.c0))) AND ((TOTAL(SUM(t0.c0))))) AS INTEGER) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING (NOT (CAST((((t0.c2)) BETWEEN ((MIN(t0.c0))) AND ((TOTAL(SUM(t0.c0))))) AS INTEGER))) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING ((CAST((((t0.c2)) BETWEEN ((MIN(t0.c0))) AND ((TOTAL(SUM(t0.c0))))) AS INTEGER)) ISNULL);
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (~ (t0.c0)) COLLATE NOCASE;
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (~ (t0.c0)) COLLATE NOCASE WHERE (CASE CASE WHEN rt0.c0 THEN t0.c2 END  WHEN rt0.c1 COLLATE RTRIM THEN ((t0.c1) NOT NULL) END) UNION ALL SELECT * FROM rt0 CROSS JOIN t0 ON (~ (t0.c0)) COLLATE NOCASE WHERE ((NOT (CASE CASE WHEN rt0.c0 THEN t0.c2 END  WHEN rt0.c1 COLLATE RTRIM THEN ((t0.c1) NOT NULL) END))) UNION ALL SELECT * FROM rt0 CROSS JOIN t0 ON (~ (t0.c0)) COLLATE NOCASE WHERE (((CASE CASE WHEN rt0.c0 THEN t0.c2 END  WHEN rt0.c1 COLLATE RTRIM THEN ((t0.c1) NOT NULL) END) ISNULL));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (~ (t0.c0)) COLLATE NOCASE;
SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0;
SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((NOT (((t0.c2)<=(t0.c1))))) UNION SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((NOT ((NOT (((t0.c2)<=(t0.c1))))))) UNION SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((((NOT (((t0.c2)<=(t0.c1))))) ISNULL));
SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0;
SELECT t0.c2, rt0.c2, t0.c1, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY t0.c2, rt0.c2, t0.c1, t0.c0, rt0.c0;
SELECT ALL t0.c2, rt0.c2, t0.c1, t0.c0, rt0.c0 FROM rt0, t0 WHERE ((~ (((t0.c2) IS FALSE)))) GROUP BY t0.c2, rt0.c2, t0.c1, t0.c0, rt0.c0 UNION SELECT t0.c2, rt0.c2, t0.c1, t0.c0, rt0.c0 FROM rt0, t0 WHERE ((NOT ((~ (((t0.c2) IS FALSE)))))) GROUP BY t0.c2, rt0.c2, t0.c1, t0.c0, rt0.c0 UNION SELECT ALL t0.c2, rt0.c2, t0.c1, t0.c0, rt0.c0 FROM rt0, t0 WHERE ((((~ (((t0.c2) IS FALSE)))) ISNULL)) GROUP BY t0.c2, rt0.c2, t0.c1, t0.c0, rt0.c0;
SELECT t0.c2, rt0.c2, t0.c1, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY t0.c2, rt0.c2, t0.c1, t0.c0, rt0.c0;
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING MIN(((COUNT(AVG(COUNT(*)))) NOTNULL)) UNION ALL SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING (NOT (MIN(((COUNT(AVG(COUNT(*)))) NOTNULL)))) UNION ALL SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING ((MIN(((COUNT(AVG(COUNT(*)))) NOTNULL))) ISNULL);
SELECT ALL MAX((((((NULL)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))&(''))) FROM rt0 ORDER BY ((rt0.c0)=(rt0.c2)) COLLATE RTRIM;
SELECT ALL * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c1)))>=(CAST(rt0.c0 AS INTEGER))), (((rt0.c0 IN ())) NOT NULL) ASC, LIKELIHOOD(DISTINCT CASE WHEN rt0.c1 THEN t0.c2 ELSE t0.c1 END, 0.8743157135736813) ASC;
SELECT ALL * FROM t0, rt0 WHERE ((NOT (rt0.c2))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c1)))>=(CAST(rt0.c0 AS INTEGER))), (((rt0.c0 IN ())) NOT NULL) ASC, LIKELIHOOD(DISTINCT CASE WHEN rt0.c1 THEN t0.c2 ELSE t0.c1 END, 0.8743157135736813) ASC;
SELECT ALL * FROM t0, rt0 WHERE (((rt0.c2) ISNULL)) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c1)))>=(CAST(rt0.c0 AS INTEGER))), (((rt0.c0 IN ())) NOT NULL) ASC, LIKELIHOOD(DISTINCT CASE WHEN rt0.c1 THEN t0.c2 ELSE t0.c1 END, 0.8743157135736813) ASC;
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT t0.c2 FROM t0, rt0;
SELECT DISTINCT t0.c2 FROM t0, rt0 WHERE (4.20484121E8) UNION SELECT DISTINCT t0.c2 FROM t0, rt0 WHERE ((NOT (4.20484121E8))) UNION SELECT DISTINCT t0.c2 FROM t0, rt0 WHERE (((4.20484121E8) ISNULL));
SELECT DISTINCT t0.c2 FROM t0, rt0;
SELECT ALL t0.c0 FROM t0 INDEXED BY i11 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 INDEXED BY i11 WHERE (((t0.c0)*(((t0.c2)==(t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 INDEXED BY i11 WHERE ((NOT (((t0.c0)*(((t0.c2)==(t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 INDEXED BY i11 WHERE (((((t0.c0)*(((t0.c2)=(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 INDEXED BY i11 GROUP BY t0.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING SUM((rt0.c0 IN ())) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (SUM((rt0.c0 IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((SUM((rt0.c0 IN ()))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING SUM((rt0.c0 IN ())) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (SUM((rt0.c0 IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((SUM((rt0.c0 IN ()))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((CAST(rt0.c0 AS INTEGER))OR(CAST(rt0.c1 AS BLOB))))OR((- (rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((CAST(rt0.c0 AS INTEGER))OR(CAST(rt0.c1 AS BLOB))))OR((- (rt0.c0))))))) UNION ALL SELECT * FROM rt0 WHERE (((((((CAST(rt0.c0 AS INTEGER))OR(CAST(rt0.c1 AS BLOB))))OR((- (rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, t0.c0, t0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON (((((t0.c0))<>((rt0.c2))))==((t0.c1 IN ())));
SELECT DISTINCT rt0.c0, t0.c0, t0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON (((((t0.c0))<>((rt0.c2))))=((t0.c1 IN ()))) WHERE (((NULL)%(((((t0.c2)OR(rt0.c1)))AND(rt0.c1))))) UNION SELECT DISTINCT rt0.c0, t0.c0, t0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON (((((t0.c0))!=((rt0.c2))))=((t0.c1 IN ()))) WHERE ((NOT (((NULL)%(((((t0.c2)OR(rt0.c1)))AND(rt0.c1))))))) UNION SELECT DISTINCT rt0.c0, t0.c0, t0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON (((((t0.c0))<>((rt0.c2))))=((t0.c1 IN ()))) WHERE (((((NULL)%(((((t0.c2)OR(rt0.c1)))AND(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c0, t0.c0, t0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON (((((t0.c0))<>((rt0.c2))))==((t0.c1 IN ())));
SELECT rt0.c1, t0.c1, t0.c0, rt0.c0 FROM t0, rt0 INDEXED BY i11 GROUP BY rt0.c1, t0.c1, t0.c0, rt0.c0;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING GROUP_CONCAT(((TOTAL(MIN(AVG(t0.c1))))-(GROUP_CONCAT(MAX(t0.c2))))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING (NOT (GROUP_CONCAT(((TOTAL(MIN(AVG(t0.c1))))-(GROUP_CONCAT(MAX(t0.c2))))))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING ((GROUP_CONCAT(((TOTAL(MIN(AVG(t0.c1))))-(GROUP_CONCAT(MAX(t0.c2)))))) ISNULL);
SELECT ALL SUM(((((((t0.c2)<>(t0.c0)))OR((NOT (t0.c1)))))OR((+ (t0.c1))))) FROM t0 ORDER BY (((t0.c2, t0.c0, t0.c2)) BETWEEN ((((t0.c1) BETWEEN (t0.c1) AND (t0.c0)), ((t0.c2)IS('')), t0.c0)) AND (((t0.c1 IN ()), (+ (t0.c1)), ((0.9361478768520047) NOTNULL)))) DESC  NULLS FIRST, HEX((~ (t0.c2))) ASC  NULLS LAST;
SELECT t0.c2, t0.c0, t0.c1 FROM t0;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((~ (((t0.c0)>=(t0.c2))))) UNION ALL SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT ((~ (((t0.c0)>=(t0.c2))))))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((((~ (((t0.c0)>=(t0.c2))))) ISNULL));
SELECT t0.c2, t0.c0, t0.c1 FROM t0;
SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON MAX(rt0.c1 COLLATE BINARY, (rt0.c2 IN ()));
SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON MAX(rt0.c1 COLLATE BINARY, (rt0.c2 IN ())) WHERE (CAST(LOWER(rt0.c2) AS INTEGER)) UNION SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON MAX(rt0.c1 COLLATE BINARY, (rt0.c2 IN ())) WHERE ((NOT (CAST(LOWER(rt0.c2) AS INTEGER)))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON MAX(rt0.c1 COLLATE BINARY, (rt0.c2 IN ())) WHERE (((CAST(LOWER(rt0.c2) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON MAX(rt0.c1 COLLATE BINARY, (rt0.c2 IN ()));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c2)==(0x641b3e31))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c2)=(0X641b3e31))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c2)=(0X641b3e31))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (((MIN(SUM(t0.c1))))<>((COUNT(*)))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT ((((MIN(SUM(t0.c1))))!=((COUNT(*)))))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (((((MIN(SUM(t0.c1))))<>((COUNT(*))))) ISNULL);
SELECT ALL rt0.c1 FROM rt0, t0;
SELECT ALL rt0.c1 FROM rt0, t0 WHERE (((((t0.c0) ISNULL))>=((((rt0.c1, t0.c2, t0.c2)) BETWEEN ((rt0.c2, t0.c2, t0.c0)) AND ((t0.c0, rt0.c2, t0.c2)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, t0 WHERE ((NOT (((((t0.c0) ISNULL))>=((((rt0.c1, t0.c2, t0.c2)) BETWEEN ((rt0.c2, t0.c2, t0.c0)) AND ((t0.c0, rt0.c2, t0.c2)))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, t0 WHERE (((((((t0.c0) ISNULL))>=((((rt0.c1, t0.c2, t0.c2)) BETWEEN ((rt0.c2, t0.c2, t0.c0)) AND ((t0.c0, rt0.c2, t0.c2)))))) ISNULL));
SELECT ALL rt0.c1 FROM rt0, t0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (LIKELIHOOD(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)), 0.9645634718284436)) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (LIKELIHOOD(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)), 0.9645634718284436)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((LIKELIHOOD(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)), 0.9645634718284436)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 WHERE (((-2.046088063E9) IS FALSE)) GROUP BY t0.c0, t0.c2, t0.c1 UNION SELECT t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((NOT (((-2.046088063E9) IS FALSE)))) GROUP BY t0.c0, t0.c2, t0.c1 UNION SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE (((((-2.046088063E9) IS FALSE)) ISNULL)) GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING GROUP_CONCAT(load_extension(t0.c1)) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT (GROUP_CONCAT(load_extension(t0.c1)))) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((GROUP_CONCAT(load_extension(t0.c1))) ISNULL);
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING GROUP_CONCAT(load_extension(t0.c1)) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT (GROUP_CONCAT(load_extension(t0.c1)))) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((GROUP_CONCAT(load_extension(t0.c1))) ISNULL);
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE ((((CASE WHEN t0.c2 THEN t0.c1 WHEN rt0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN rt0.c1 ELSE rt0.c1 END, (((rt0.c1))<((t0.c0))), 0.1972000786900483))<>((((rt0.c2)<=(rt0.c1)), (+ (t0.c2)), (((t0.c0, rt0.c1, t0.c2))<=((x'', t0.c1, t0.c0))))))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT ((((CASE WHEN t0.c2 THEN t0.c1 WHEN rt0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN rt0.c1 ELSE rt0.c1 END, (((rt0.c1))<((t0.c0))), 0.1972000786900483))<>((((rt0.c2)<=(rt0.c1)), (+ (t0.c2)), (((t0.c0, rt0.c1, t0.c2))<=((x'', t0.c1, t0.c0))))))))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((((((CASE WHEN t0.c2 THEN t0.c1 WHEN rt0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN rt0.c1 ELSE rt0.c1 END, (((rt0.c1))<((t0.c0))), 0.1972000786900483))!=((((rt0.c2)<=(rt0.c1)), (+ (t0.c2)), (((t0.c0, rt0.c1, t0.c2))<=((x'', t0.c1, t0.c0))))))) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((('yhN2') BETWEEN (((((rt0.c0)OR(rt0.c0)))AND(rt0.c0))) AND (CAST(rt0.c0 AS REAL)))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((('yhN2') BETWEEN (((((rt0.c0)OR(rt0.c0)))AND(rt0.c0))) AND (CAST(rt0.c0 AS REAL)))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((('yhN2') BETWEEN (((((rt0.c0)OR(rt0.c0)))AND(rt0.c0))) AND (CAST(rt0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN ((NULL)/(rt0.c1)) END) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN (rt0.c2 IN ()) THEN ((NULL)/(rt0.c1)) END))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE WHEN (rt0.c2 IN ()) THEN ((NULL)/(rt0.c1)) END) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL t0.c1, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c1, rt0.c1, rt0.c2;
SELECT t0.c1, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c1, rt0.c1, rt0.c2 HAVING COUNT(((t0.c1)|(TOTAL(t0.c2)))) UNION ALL SELECT ALL t0.c1, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c1, rt0.c1, rt0.c2 HAVING (NOT (COUNT(((t0.c1)|(TOTAL(t0.c2)))))) UNION ALL SELECT ALL t0.c1, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c1, rt0.c1, rt0.c2 HAVING ((COUNT(((t0.c1)|(TOTAL(t0.c2))))) ISNULL);
SELECT t0.c0, t0.c2, t0.c1 FROM t0;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((t0.c2 IN (t0.c0, t0.c2)) COLLATE NOCASE) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((NOT ((t0.c2 IN (t0.c0, t0.c2)) COLLATE NOCASE))) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((((t0.c2 IN (t0.c0, t0.c2)) COLLATE NOCASE) ISNULL));
SELECT t0.c0, t0.c2, t0.c1 FROM t0;
SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0;
SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0 WHERE (((CASE WHEN t0.c1 THEN t0.c2 END) NOT BETWEEN (CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN '0.9089185090220879' END) AND ((t0.c1 IN ())))) UNION SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((NOT (((CASE WHEN t0.c1 THEN t0.c2 END) NOT BETWEEN (CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN '0.9089185090220879' END) AND ((t0.c1 IN ())))))) UNION SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0 WHERE (((((CASE WHEN t0.c1 THEN t0.c2 END) NOT BETWEEN (CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN '0.9089185090220879' END) AND ((t0.c1 IN ())))) ISNULL));
SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 WHERE ((('')<<(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) GROUP BY t0.c0, t0.c1 UNION SELECT t0.c0, t0.c1 FROM t0 WHERE ((NOT ((('')<<(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) GROUP BY t0.c0, t0.c1 UNION SELECT t0.c0, t0.c1 FROM t0 WHERE ((((('')<<(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL)) GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT ALL rt0.c2, t0.c2, rt0.c0, rt0.c1, t0.c0, t0.c1 FROM rt0, t0 GROUP BY rt0.c2, t0.c2, rt0.c0, rt0.c1, t0.c0, t0.c1;
SELECT ALL rt0.c2, t0.c2, rt0.c0, rt0.c1, t0.c0, t0.c1 FROM rt0, t0 GROUP BY rt0.c2, t0.c2, rt0.c0, rt0.c1, t0.c0, t0.c1 HAVING COUNT(COUNT(*)) UNION ALL SELECT rt0.c2, t0.c2, rt0.c0, rt0.c1, t0.c0, t0.c1 FROM rt0, t0 GROUP BY rt0.c2, t0.c2, rt0.c0, rt0.c1, t0.c0, t0.c1 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT rt0.c2, t0.c2, rt0.c0, rt0.c1, t0.c0, t0.c1 FROM rt0, t0 GROUP BY rt0.c2, t0.c2, rt0.c0, rt0.c1, t0.c0, t0.c1 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT MAX(x'c6d6') FROM rt0, t0 ORDER BY ((CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 END)IS(((rt0.c0) ISNULL)))  NULLS FIRST;
SELECT ALL rt0.c0, rt0.c1, t0.c2, rt0.c2, t0.c1, t0.c0 FROM rt0, t0;
SELECT rt0.c0, rt0.c1, t0.c2, rt0.c2, t0.c1, t0.c0 FROM rt0, t0 WHERE ((+ ((+ (t0.c2))))) UNION ALL SELECT rt0.c0, rt0.c1, t0.c2, rt0.c2, t0.c1, t0.c0 FROM rt0, t0 WHERE ((NOT ((+ ((+ (t0.c2))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, t0.c2, rt0.c2, t0.c1, t0.c0 FROM rt0, t0 WHERE ((((+ ((+ (t0.c2))))) ISNULL));
SELECT ALL rt0.c0, rt0.c1, t0.c2, rt0.c2, t0.c1, t0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c2 FROM rt0 NOT INDEXED;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((rt0.c1)<(rt0.c1))) IS FALSE)) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1)<(rt0.c1))) IS FALSE)))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((((rt0.c1)<(rt0.c1))) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0 NOT INDEXED;
SELECT ALL rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((((((t0.c2)||(t0.c0)))OR(((t0.c0)-(rt0.c2)))))OR('')) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((((((t0.c2)||(t0.c0)))OR(((t0.c0)-(rt0.c2)))))OR('')) WHERE (((((((((((rt0.c0)-(rt0.c1)))AND(CASE t0.c0  WHEN x'' THEN t0.c0 END)))OR(((t0.c0)AND(t0.c2)))))OR((~ (rt0.c2)))))OR(((t0.c1) BETWEEN (t0.c0) AND (t0.c1))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((((((t0.c2)||(t0.c0)))OR(((t0.c0)-(rt0.c2)))))OR('')) WHERE ((NOT (((((((((((rt0.c0)-(rt0.c1)))AND(CASE t0.c0  WHEN x'' THEN t0.c0 END)))OR(((t0.c0)AND(t0.c2)))))OR((~ (rt0.c2)))))OR(((t0.c1) BETWEEN (t0.c0) AND (t0.c1))))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((((((t0.c2)||(t0.c0)))OR(((t0.c0)-(rt0.c2)))))OR('')) WHERE (((((((((((((rt0.c0)-(rt0.c1)))AND(CASE t0.c0  WHEN x'' THEN t0.c0 END)))OR(((t0.c0)AND(t0.c2)))))OR((~ (rt0.c2)))))OR(((t0.c1) BETWEEN (t0.c0) AND (t0.c1))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((((((t0.c2)||(t0.c0)))OR(((t0.c0)-(rt0.c2)))))OR('')) GROUP BY rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING HEX(CASE COUNT(*)  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN COUNT(AVG(MIN(rt0.c2))) WHEN SUM(GROUP_CONCAT(rt0.c1)) THEN rt0.c1 END) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (HEX(CASE COUNT(*)  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN COUNT(AVG(MIN(rt0.c2))) WHEN SUM(GROUP_CONCAT(rt0.c1)) THEN rt0.c1 END))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((HEX(CASE COUNT(*)  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN COUNT(AVG(MIN(rt0.c2))) WHEN SUM(GROUP_CONCAT(rt0.c1)) THEN rt0.c1 END)) ISNULL);
SELECT * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE ((((UPPER(t0.c0)))<=((((rt0.c0) ISNULL))))) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT ((((UPPER(t0.c0)))<=((((rt0.c0) ISNULL))))))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((((((UPPER(t0.c0)))<=((((rt0.c0) ISNULL))))) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (COALESCE(((rt0.c2)<(rt0.c1)), (rt0.c0 IN (rt0.c1, rt0.c2)), TIME(rt0.c1, rt0.c0, rt0.c2), (((((((('0b')AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND('-10589342')))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (COALESCE(((rt0.c2)<(rt0.c1)), (rt0.c0 IN (rt0.c1, rt0.c2)), TIME(rt0.c1, rt0.c0, rt0.c2), (((((((('0b')AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND('-10589342')))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((COALESCE(((rt0.c2)<(rt0.c1)), (rt0.c0 IN (rt0.c1, rt0.c2)), TIME(rt0.c1, rt0.c0, rt0.c2), (((((((('0b')AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND('-10589342')))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, t0.c2 FROM rt0, t0 GROUP BY rt0.c2, t0.c2;
SELECT rt0.c2, t0.c2 FROM rt0, t0 WHERE ((((t0.c1)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)) AND ((t0.c1)))) GROUP BY rt0.c2, t0.c2 UNION SELECT ALL rt0.c2, t0.c2 FROM rt0, t0 WHERE ((NOT ((((t0.c1)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)) AND ((t0.c1)))))) GROUP BY rt0.c2, t0.c2 UNION SELECT rt0.c2, t0.c2 FROM rt0, t0 WHERE ((((((t0.c1)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)) AND ((t0.c1)))) ISNULL)) GROUP BY rt0.c2, t0.c2;
SELECT ALL rt0.c2, t0.c2 FROM rt0, t0 GROUP BY rt0.c2, t0.c2;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING MAX(MIN(GROUP_CONCAT(t0.c1))) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING (NOT (MAX(MIN(GROUP_CONCAT(t0.c1))))) UNION ALL SELECT t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING ((MAX(MIN(GROUP_CONCAT(t0.c1)))) ISNULL);
SELECT * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE (((((t0.c1)GLOB(rt0.c2))) BETWEEN (((((t0.c2)OR(rt0.c1)))OR(rt0.c0))) AND (x'391d'))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (((((t0.c1)GLOB(rt0.c2))) BETWEEN (((((t0.c2)OR(rt0.c1)))OR(rt0.c0))) AND (x'391d'))))) UNION ALL SELECT * FROM t0, rt0 WHERE (((((((t0.c1)GLOB(rt0.c2))) BETWEEN (((((t0.c2)OR(rt0.c1)))OR(rt0.c0))) AND (x'391d'))) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END AS NUMERIC)) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END AS NUMERIC)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((((CASE WHEN t0.c2 THEN t0.c0 END)AND(((t0.c0)/('1202132733')))))AND(((t0.c1) ISNULL)))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT (((((CASE WHEN t0.c2 THEN t0.c0 END)AND(((t0.c0)/('1202132733')))))AND(((t0.c1) ISNULL)))))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((((((CASE WHEN t0.c2 THEN t0.c0 END)AND(((t0.c0)/('1202132733')))))AND(((t0.c1) ISNULL)))) ISNULL)) GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING (CASE x''  WHEN t0.c2 THEN t0.c2 ELSE MAX(SUM(COUNT(MIN(t0.c1)))) END IN ()) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING (NOT ((CASE x''  WHEN t0.c2 THEN t0.c2 ELSE MAX(SUM(COUNT(MIN(t0.c1)))) END IN ()))) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING (((CASE x''  WHEN t0.c2 THEN t0.c2 ELSE MAX(SUM(COUNT(MIN(t0.c1)))) END IN ())) ISNULL);
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING (CASE x''  WHEN t0.c2 THEN t0.c2 ELSE MAX(SUM(COUNT(MIN(t0.c1)))) END IN ()) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING (NOT ((CASE x''  WHEN t0.c2 THEN t0.c2 ELSE MAX(SUM(COUNT(MIN(t0.c1)))) END IN ()))) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING (((CASE x''  WHEN t0.c2 THEN t0.c2 ELSE MAX(SUM(COUNT(MIN(t0.c1)))) END IN ())) ISNULL);
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (NULL) UNION ALL SELECT * FROM t0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM t0 WHERE (((NULL) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE ((((- (rt0.c2)))AND(((rt0.c0)AND(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT ((((- (rt0.c2)))AND(((rt0.c0)AND(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((((((- (rt0.c2)))AND(((rt0.c0)AND(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (CASE (~ (rt0.c2))  WHEN (~ (rt0.c0)) THEN rt0.c0 WHEN ((rt0.c1)GLOB(rt0.c0)) THEN '233687890' WHEN CAST(rt0.c0 AS REAL) THEN ('' IN ()) WHEN ((rt0.c2)OR(rt0.c2)) THEN x'' COLLATE BINARY WHEN -1696988199 THEN ((rt0.c0)GLOB(rt0.c1)) ELSE '0.0029148960081722963' END) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE (~ (rt0.c2))  WHEN (~ (rt0.c0)) THEN rt0.c0 WHEN ((rt0.c1)GLOB(rt0.c0)) THEN '233687890' WHEN CAST(rt0.c0 AS REAL) THEN ('' IN ()) WHEN ((rt0.c2)OR(rt0.c2)) THEN x'' COLLATE BINARY WHEN -1696988199 THEN ((rt0.c0)GLOB(rt0.c1)) ELSE '0.0029148960081722963' END))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE (~ (rt0.c2))  WHEN (~ (rt0.c0)) THEN rt0.c0 WHEN ((rt0.c1)GLOB(rt0.c0)) THEN '233687890' WHEN CAST(rt0.c0 AS REAL) THEN ('' IN ()) WHEN ((rt0.c2)OR(rt0.c2)) THEN x'' COLLATE BINARY WHEN -1696988199 THEN ((rt0.c0)GLOB(rt0.c1)) ELSE '0.0029148960081722963' END) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING TYPEOF(DISTINCT TRIM(DISTINCT t0.c1, SUM(GROUP_CONCAT(AVG(t0.c2))))) UNION ALL SELECT t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING (NOT (TYPEOF(DISTINCT TRIM(DISTINCT t0.c1, SUM(GROUP_CONCAT(AVG(t0.c2))))))) UNION ALL SELECT t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING ((TYPEOF(DISTINCT TRIM(DISTINCT t0.c1, SUM(GROUP_CONCAT(AVG(t0.c2)))))) ISNULL);
SELECT ALL t0.c1 FROM t0;
SELECT t0.c1 FROM t0 WHERE (x'') UNION ALL SELECT t0.c1 FROM t0 WHERE ((NOT (x''))) UNION ALL SELECT ALL t0.c1 FROM t0 WHERE (((x'') ISNULL));
SELECT ALL t0.c1 FROM t0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ('1759710927') UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ('1759710927'))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((('1759710927') ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt0.c0, rt0.c1, t0.c1, rt0.c2, t0.c0, t0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, t0.c1, rt0.c2, t0.c0, t0.c2;
SELECT ALL rt0.c0, rt0.c1, t0.c1, rt0.c2, t0.c0, t0.c2 FROM t0, rt0 WHERE ((((NOT (rt0.c0))) IS FALSE)) GROUP BY rt0.c0, rt0.c1, t0.c1, rt0.c2, t0.c0, t0.c2 UNION SELECT ALL rt0.c0, rt0.c1, t0.c1, rt0.c2, t0.c0, t0.c2 FROM t0, rt0 WHERE ((NOT ((((NOT (rt0.c0))) IS FALSE)))) GROUP BY rt0.c0, rt0.c1, t0.c1, rt0.c2, t0.c0, t0.c2 UNION SELECT rt0.c0, rt0.c1, t0.c1, rt0.c2, t0.c0, t0.c2 FROM t0, rt0 WHERE ((((((NOT (rt0.c0))) IS FALSE)) ISNULL)) GROUP BY rt0.c0, rt0.c1, t0.c1, rt0.c2, t0.c0, t0.c2;
SELECT ALL rt0.c0, rt0.c1, t0.c1, rt0.c2, t0.c0, t0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, t0.c1, rt0.c2, t0.c0, t0.c2;
SELECT t0.c1, t0.c2 FROM t0, rt0 GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM t0, rt0 GROUP BY t0.c1, t0.c2 HAVING COUNT(*) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0, rt0 GROUP BY t0.c1, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0, rt0 GROUP BY t0.c1, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c1, t0.c2 FROM t0, rt0 GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM t0, rt0 GROUP BY t0.c1, t0.c2 HAVING COUNT(*) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0, rt0 GROUP BY t0.c1, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0, rt0 GROUP BY t0.c1, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c1, t0.c2 FROM t0, rt0 GROUP BY t0.c1, t0.c2;
SELECT ALL * FROM t0, rt0;
SELECT ALL * FROM t0, rt0 WHERE (((t0.c0 IN ()) IN ())) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (((t0.c0 IN ()) IN ())))) UNION ALL SELECT * FROM t0, rt0 WHERE (((((t0.c0 IN ()) IN ())) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON ((rt0.c0 COLLATE NOCASE)/(rt0.c1));
SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON ((rt0.c0 COLLATE NOCASE)/(rt0.c1)) WHERE ((- (((t0.c0)>(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON ((rt0.c0 COLLATE NOCASE)/(rt0.c1)) WHERE ((NOT ((- (((t0.c0)>(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON ((rt0.c0 COLLATE NOCASE)/(rt0.c1)) WHERE ((((- (((t0.c0)>(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON ((rt0.c0 COLLATE NOCASE)/(rt0.c1));
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((('-1460948020')<>(rt0.c0)) COLLATE BINARY) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((('-1460948020')!=(rt0.c0)) COLLATE BINARY))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((((('-1460948020')<>(rt0.c0)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT t0.c1, rt0.c1, t0.c2 FROM rt0, t0 GROUP BY t0.c1, rt0.c1, t0.c2;
SELECT t0.c1, rt0.c1, t0.c2 FROM rt0, t0 GROUP BY t0.c1, rt0.c1, t0.c2 HAVING COUNT(AVG(rt0.c2)) UNION ALL SELECT t0.c1, rt0.c1, t0.c2 FROM rt0, t0 GROUP BY t0.c1, rt0.c1, t0.c2 HAVING (NOT (COUNT(AVG(rt0.c2)))) UNION ALL SELECT t0.c1, rt0.c1, t0.c2 FROM rt0, t0 GROUP BY t0.c1, rt0.c1, t0.c2 HAVING ((COUNT(AVG(rt0.c2))) ISNULL);
SELECT ALL * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE (((((x'39ae')AND((t0.c1 IN ()))))OR((('') IS TRUE)))) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (((((x'39ae')AND((t0.c1 IN ()))))OR((('') IS TRUE)))))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((((((x'39ae')AND((t0.c1 IN ()))))OR((('') IS TRUE)))) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (CASE WHEN t0.c2 THEN t0.c2 END) AND (((rt0.c1)<('(0CXxcU'))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (CASE WHEN t0.c2 THEN t0.c2 END) AND (((rt0.c1)<('(0CXxcU'))))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (CASE WHEN t0.c2 THEN t0.c2 END) AND (((rt0.c1)<('(0CXxcU'))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((rt0.c2) IS FALSE)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2) IS FALSE)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((rt0.c2) IS FALSE)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 INDEXED BY i76 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL MIN(CAST(CAST(rt0.c1 AS BLOB) AS TEXT)) FROM rt0;
SELECT rt0.c1, t0.c0, rt0.c2 FROM t0, rt0;
SELECT ALL rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 WHERE (t0.c0) UNION ALL SELECT ALL rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 WHERE (((t0.c0) ISNULL));
SELECT rt0.c1, t0.c0, rt0.c2 FROM t0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, t0.c1, t0.c2, rt0.c2 FROM rt0, t0;
SELECT DISTINCT rt0.c1, rt0.c0, t0.c1, t0.c2, rt0.c2 FROM rt0, t0 WHERE (((t0.c1)*(t0.c0)) COLLATE BINARY) UNION SELECT DISTINCT rt0.c1, rt0.c0, t0.c1, t0.c2, rt0.c2 FROM rt0, t0 WHERE ((NOT (((t0.c1)*(t0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1, rt0.c0, t0.c1, t0.c2, rt0.c2 FROM rt0, t0 WHERE (((((t0.c1)*(t0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, t0.c1, t0.c2, rt0.c2 FROM rt0, t0;
SELECT ALL rt0.c0, t0.c2 FROM t0 CROSS JOIN rt0 ON TYPEOF(((rt0.c2)<=(t0.c2))) GROUP BY rt0.c0, t0.c2;
SELECT rt0.c0, t0.c2 FROM t0 CROSS JOIN rt0 ON TYPEOF(((rt0.c2)<=(t0.c2))) WHERE ((((NOT (rt0.c0)))|(NULLIF(DISTINCT t0.c1, rt0.c2)))) GROUP BY rt0.c0, t0.c2 UNION SELECT ALL rt0.c0, t0.c2 FROM t0 CROSS JOIN rt0 ON TYPEOF(((rt0.c2)<=(t0.c2))) WHERE ((NOT ((((NOT (rt0.c0)))|(NULLIF(DISTINCT t0.c1, rt0.c2)))))) GROUP BY rt0.c0, t0.c2 UNION SELECT rt0.c0, t0.c2 FROM t0 CROSS JOIN rt0 ON TYPEOF(((rt0.c2)<=(t0.c2))) WHERE ((((((NOT (rt0.c0)))|(NULLIF(DISTINCT t0.c1, rt0.c2)))) ISNULL)) GROUP BY rt0.c0, t0.c2;
SELECT ALL rt0.c0, t0.c2 FROM t0 CROSS JOIN rt0 ON TYPEOF(((rt0.c2)<=(t0.c2))) GROUP BY rt0.c0, t0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MAX(rt0.c2) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MAX(rt0.c2))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MAX(rt0.c2)) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MAX(rt0.c2) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MAX(rt0.c2))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MAX(rt0.c2)) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT t0.c0, t0.c1, t0.c2 FROM t0 INDEXED BY i11;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 INDEXED BY i11 WHERE ((+ ((0.05025729454514216 IN ())))) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 INDEXED BY i11 WHERE ((NOT ((+ ((0.05025729454514216 IN ())))))) UNION ALL SELECT t0.c0, t0.c1, t0.c2 FROM t0 INDEXED BY i11 WHERE ((((+ ((0.05025729454514216 IN ())))) ISNULL));
SELECT t0.c0, t0.c1, t0.c2 FROM t0 INDEXED BY i11;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC))>((~ (t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((CAST(t0.c0 AS NUMERIC))>((~ (t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((CAST(t0.c0 AS NUMERIC))>((~ (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c2, rt0.c2, rt0.c0, t0.c0, rt0.c1, t0.c1 FROM t0 INNER JOIN rt0 ON (((- (rt0.c1))) IS FALSE) GROUP BY t0.c2, rt0.c2, rt0.c0, t0.c0, rt0.c1, t0.c1;
SELECT ALL t0.c2, rt0.c2, rt0.c0, t0.c0, rt0.c1, t0.c1 FROM t0 NOT INDEXED INNER JOIN rt0 ON (((- (rt0.c1))) IS FALSE) WHERE (((((- (t0.c2))))<=(((((t0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c1))))))) GROUP BY t0.c2, rt0.c2, rt0.c0, t0.c0, rt0.c1, t0.c1 UNION SELECT ALL t0.c2, rt0.c2, rt0.c0, t0.c0, rt0.c1, t0.c1 FROM t0 INNER JOIN rt0 ON (((- (rt0.c1))) IS FALSE) WHERE ((NOT (((((- (t0.c2))))<=(((((t0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c1))))))))) GROUP BY t0.c2, rt0.c2, rt0.c0, t0.c0, rt0.c1, t0.c1 UNION SELECT ALL t0.c2, rt0.c2, rt0.c0, t0.c0, rt0.c1, t0.c1 FROM t0 INNER JOIN rt0 ON (((- (rt0.c1))) IS FALSE) WHERE (((((((- (t0.c2))))<=(((((t0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c1))))))) ISNULL)) GROUP BY t0.c2, rt0.c2, rt0.c0, t0.c0, rt0.c1, t0.c1;
SELECT ALL t0.c2, rt0.c2, rt0.c0, t0.c0, rt0.c1, t0.c1 FROM t0 INNER JOIN rt0 ON (((- (rt0.c1))) IS FALSE) GROUP BY t0.c2, rt0.c2, rt0.c0, t0.c0, rt0.c1, t0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING AVG(MAX(rt0.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (AVG(MAX(rt0.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((AVG(MAX(rt0.c0))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((COALESCE(rt0.c2, 0.6412238436503961))+(MAX(rt0.c2, rt0.c0)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((COALESCE(rt0.c2, 0.6412238436503961))+(MAX(rt0.c2, rt0.c0)))))) UNION ALL SELECT * FROM rt0 WHERE (((((COALESCE(rt0.c2, 0.6412238436503961))+(MAX(rt0.c2, rt0.c0)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (CASE rt0.c1  WHEN CASE rt0.c1  WHEN NULL THEN rt0.c2 END THEN ((rt0.c0) NOT NULL) WHEN (rt0.c0 IN ()) THEN ((NULL)IS NOT(rt0.c0)) WHEN (- (rt0.c0)) THEN x'' ELSE ((-8.56730511E8) NOT NULL) END) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (CASE rt0.c1  WHEN CASE rt0.c1  WHEN NULL THEN rt0.c2 END THEN ((rt0.c0) NOT NULL) WHEN (rt0.c0 IN ()) THEN ((NULL)IS NOT(rt0.c0)) WHEN (- (rt0.c0)) THEN x'' ELSE ((-8.56730511E8) NOT NULL) END))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((CASE rt0.c1  WHEN CASE rt0.c1  WHEN NULL THEN rt0.c2 END THEN ((rt0.c0) NOT NULL) WHEN (rt0.c0 IN ()) THEN ((NULL)IS NOT(rt0.c0)) WHEN (- (rt0.c0)) THEN x'' ELSE ((-8.56730511E8) NOT NULL) END) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c2)<(rt0.c1)) IN ())) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2)<(rt0.c1)) IN ())))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c2)<(rt0.c1)) IN ())) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (COUNT(rt0.c1) IN ()) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ((COUNT(rt0.c1) IN ()))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (((COUNT(rt0.c1) IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (COUNT(rt0.c1) IN ()) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ((COUNT(rt0.c1) IN ()))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (((COUNT(rt0.c1) IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c2))>((rt0.c0))) IN ())) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2))>((rt0.c0))) IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c2))>((rt0.c0))) IN ())) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((rt0.c2))==((rt0.c1)))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND (CAST(rt0.c1 AS NUMERIC)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c2))==((rt0.c1)))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND (CAST(rt0.c1 AS NUMERIC)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((((rt0.c2))==((rt0.c1)))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND (CAST(rt0.c1 AS NUMERIC)))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE (((((CAST(t0.c1 AS TEXT))OR((t0.c2 IN ()))))AND(((t0.c1)<>(t0.c0))))) GROUP BY t0.c1, t0.c2, t0.c0 UNION SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((NOT (((((CAST(t0.c1 AS TEXT))OR((t0.c2 IN ()))))AND(((t0.c1)<>(t0.c0))))))) GROUP BY t0.c1, t0.c2, t0.c0 UNION SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE (((((((CAST(t0.c1 AS TEXT))OR((t0.c2 IN ()))))AND(((t0.c1)<>(t0.c0))))) ISNULL)) GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL t0.c1 FROM t0, rt0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0, rt0 GROUP BY t0.c1 HAVING AVG(AVG(AVG(t0.c2))) UNION ALL SELECT ALL t0.c1 FROM t0, rt0 GROUP BY t0.c1 HAVING (NOT (AVG(AVG(AVG(t0.c2))))) UNION ALL SELECT ALL t0.c1 FROM t0, rt0 GROUP BY t0.c1 HAVING ((AVG(AVG(AVG(t0.c2)))) ISNULL);
SELECT ALL * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE ((((((((((((((((((0x23e92bdc IN ()))OR(t0.c2)))OR(((((NULL)OR(rt0.c2)))OR(t0.c0)))))AND((~ (rt0.c2)))))OR(((rt0.c1)<<(t0.c1)))))AND(((rt0.c2)IS(rt0.c1)))))OR(((t0.c0)+(t0.c2)))))AND((t0.c1 IN ()))))AND((NOT (rt0.c0))))) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT ((((((((((((((((((0x23e92bdc IN ()))OR(t0.c2)))OR(((((NULL)OR(rt0.c2)))OR(t0.c0)))))AND((~ (rt0.c2)))))OR(((rt0.c1)<<(t0.c1)))))AND(((rt0.c2)IS(rt0.c1)))))OR(((t0.c0)+(t0.c2)))))AND((t0.c1 IN ()))))AND((NOT (rt0.c0))))))) UNION ALL SELECT * FROM rt0, t0 WHERE ((((((((((((((((((((0x23e92bdc IN ()))OR(t0.c2)))OR(((((NULL)OR(rt0.c2)))OR(t0.c0)))))AND((~ (rt0.c2)))))OR(((rt0.c1)<<(t0.c1)))))AND(((rt0.c2)IS(rt0.c1)))))OR(((t0.c0)+(t0.c2)))))AND((t0.c1 IN ()))))AND((NOT (rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0, t0;
