-- Time: 2024/06/09 20:45:19
-- Database: database62
-- Database version: 3.40.0
-- seed value: 3314760262
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 BLOB , +c4 INT ); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 3ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-9150403,15');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c3, c1)=('', x'') WHERE NULLIF(DISTINCT NULL, rt0.c0); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (''), (-9150403.0), (NULL); -- 1ms;
INSERT OR ROLLBACK INTO vt0 VALUES (-9150403); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (x'6f0d', '-9150403', NULL, -9150403.0, 0.7366980160422492), (0xffffffff8beda85b, NULL, 0.411639346174112, ((((NULL)OR('o綕<Y-&')))OR(0xffffffffff74603d)) COLLATE RTRIM, x''), (-1947359141, x'', '+f', '-741610244', x''); -- 1ms;
PRAGMA main.secure_delete = false; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA main.locking_mode; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
UPDATE rt0 SET c2='X?sW_' WHERE (((~ (rt0.c2))) NOTNULL); -- 1ms;
REINDEX NOCASE; -- 0ms;
INSERT OR REPLACE INTO rt0(c4, c1, c3, c2, c0) VALUES (0xffffffffff74603d, NULL, '>K', -9150403.0, x''); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (x'd63d'); -- 0ms;
ANALYZE main; -- 2ms;
UPDATE rt0 SET c4=x'' WHERE ((((((rt0.c4) IS TRUE))OR(IFNULL(rt0.c3, rt0.c3))))AND(LTRIM(rt0.c3))); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.411639346174112); -- 1ms;
UPDATE OR IGNORE rt0 SET (c0)=(x'df3a'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1923390561); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -741610244);\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2113306628); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA temp.threads; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(-458654315) WHERE ((vt0.c0)IS NOT(vt0.c0)); -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES (x'', -1755958752, '2027731246', NULL, NULL), ('*iX&', 'QH', x'', 0X293aafdf, -7.41610244E8), (0.411639346174112, x'', 0x773e7532, '', -1879462783); -- 1ms;
INSERT OR REPLACE INTO rt0(c0) VALUES (NULL), (0.411639346174112), ('0.7366980160422492'); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES ('Ja7'); -- 1ms;
DROP TABLE rt0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL) IS FALSE))); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (0.9679901241525923); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 2ms;
ANALYZE main; -- 1ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (0.8838620453295155); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (''); -- 0ms;
PRAGMA main.application_id = -3025340802752270354; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('TRUE'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 808205889); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '34616'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA main.cache_spill = -1966926180290454819; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.01909589493929964), ('-2062744154'), ('1199253017'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=60254967,11');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '42111'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 959457752); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 268365573); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1774246711,7');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 0ms;
ANALYZE; -- 0ms;
ANALYZE; -- 0ms;
ANALYZE main; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL); -- 1ms;
REINDEX BINARY; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA automatic_index; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0, prefix = 485); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=(0.14228552939139205, 0.9223432127272376) WHERE ((vt1.c0) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(NULL))) AND (COALESCE(DISTINCT vt1.c0, vt1.c0))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1847160282 noskipscan'); -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), ('0.9679901241525923'), (x'94f9'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.7981227075374139); -- 1ms;
PRAGMA main.journal_size_limit; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=11'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA cache_size = -3563761710028424507; -- 0ms;
END TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 1ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (0.4098394942629542), (''), (x'4b9a'); -- 0ms;
CREATE TABLE t0 (c0 INT ); -- 1ms;
CREATE INDEX IF NOT EXISTS i53 ON t0(((((c0)AND(c0))) BETWEEN (((c0)|(c0))) AND (c0 COLLATE NOCASE)) COLLATE NOCASE) WHERE (- (((c0)%(c0)))); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('-741610244') ON CONFLICT DO NOTHING; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x'bfc8'))=((NULL))) AS INTEGER); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM t0, vt1, vt0;
SELECT ALL * FROM t0, vt1, vt0 WHERE (UPPER(((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))) UNION ALL SELECT * FROM t0, vt1, vt0 WHERE ((NOT (UPPER(((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))))) UNION ALL SELECT * FROM t0, vt1, vt0 WHERE (((UPPER(((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))) ISNULL));
SELECT * FROM t0, vt1, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((SQLITE_SOURCE_ID())OR(((t0.c0)%(t0.c0)))))OR(t0.c0))) UNION SELECT DISTINCT * FROM t0 NOT INDEXED WHERE ((NOT (((((SQLITE_SOURCE_ID())OR(((t0.c0)%(t0.c0)))))OR(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((SQLITE_SOURCE_ID())OR(((t0.c0)%(t0.c0)))))OR(t0.c0))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM vt1, t0 INDEXED BY i53, vt0 GROUP BY t0.c0;
SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING ((+ (t0.c0)) IN ()) UNION ALL SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING (NOT (((+ (t0.c0)) IN ()))) UNION ALL SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING ((((+ (t0.c0)) IN ())) ISNULL);
SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING ((+ (t0.c0)) IN ()) UNION ALL SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING (NOT (((+ (t0.c0)) IN ()))) UNION ALL SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING ((((+ (t0.c0)) IN ())) ISNULL);
SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt0, t0 NOT INDEXED, vt1;
SELECT DISTINCT * FROM vt0, t0, vt1 WHERE (CASE CASE WHEN t0.c0 THEN t0.c0 END  WHEN ((t0.c0)LIKE(t0.c0)) THEN x'db0b' END) UNION SELECT DISTINCT * FROM vt0, t0, vt1 WHERE ((NOT (CASE CASE WHEN t0.c0 THEN t0.c0 END  WHEN ((t0.c0)LIKE(t0.c0)) THEN x'db0b' END))) UNION SELECT DISTINCT * FROM vt0, t0, vt1 WHERE (((CASE CASE WHEN t0.c0 THEN t0.c0 END  WHEN ((t0.c0)LIKE(t0.c0)) THEN x'db0b' END) ISNULL));
SELECT DISTINCT * FROM vt0, t0 NOT INDEXED, vt1;
SELECT vt1.c0, t0.c0 FROM vt1 NOT INDEXED LEFT OUTER JOIN t0 ON LIKELY(t0.c0 COLLATE NOCASE) GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt1 LEFT OUTER JOIN t0 ON LIKELY(t0.c0 COLLATE NOCASE) WHERE ((NOT ((((t0.c0))!=(('-1755958752')))))) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM vt1 NOT INDEXED LEFT OUTER JOIN t0 ON LIKELY(t0.c0 COLLATE NOCASE) WHERE ((NOT ((NOT ((((t0.c0))<>(('-1755958752')))))))) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM vt1 LEFT OUTER JOIN t0 ON LIKELY(t0.c0 COLLATE NOCASE) WHERE ((((NOT ((((t0.c0))!=(('-1755958752')))))) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1 NOT INDEXED LEFT OUTER JOIN t0 ON LIKELY(t0.c0 COLLATE NOCASE) GROUP BY vt1.c0, t0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING MIN(((t0.c0) NOT BETWEEN (MIN(TOTAL(COUNT(*)))) AND (t0.c0))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (MIN(((t0.c0) NOT BETWEEN (MIN(TOTAL(COUNT(*)))) AND (t0.c0))))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING ((MIN(((t0.c0) NOT BETWEEN (MIN(TOTAL(COUNT(*)))) AND (t0.c0)))) ISNULL);
SELECT ALL SUM(((((('-1')GLOB(t0.c0)), CASE WHEN t0.c0 THEN vt1.c0 END, CASE WHEN t0.c0 THEN vt1.c0 ELSE vt0.c0 END))>=(('-741610244', x'3029', ((t0.c0)||(vt1.c0)))))) FROM vt0, vt1, t0 ORDER BY ((CASE WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt0.c0 END) IS TRUE);
SELECT t0.c0, vt1.c0 FROM t0 NATURAL JOIN vt1;
SELECT t0.c0, vt1.c0 FROM t0 NATURAL JOIN vt1 WHERE (CAST(x'' AS INTEGER)) UNION ALL SELECT t0.c0, vt1.c0 FROM t0 NATURAL JOIN vt1 WHERE ((NOT (CAST(x'' AS INTEGER)))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0 NATURAL JOIN vt1 WHERE (((CAST(x'' AS INTEGER)) ISNULL));
SELECT t0.c0, vt1.c0 FROM t0 NATURAL JOIN vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1, t0;
SELECT DISTINCT vt1.c0 FROM vt0, vt1, t0 WHERE (((((((('-1027622104', t0.c0, vt1.c0))>=((vt0.c0, t0.c0, t0.c0))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)))))AND(((((((((vt0.c0)OR(0X28807113)))AND(0.9362115824047704)))AND(vt1.c0)))OR(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1, t0 WHERE ((NOT (((((((('-1027622104', t0.c0, vt1.c0))>=((vt0.c0, t0.c0, t0.c0))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)))))AND(((((((((vt0.c0)OR(0X28807113)))AND(0.9362115824047704)))AND(vt1.c0)))OR(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1, t0 WHERE (((((((((('-1027622104', t0.c0, vt1.c0))>=((vt0.c0, t0.c0, t0.c0))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)))))AND(((((((((vt0.c0)OR(0X28807113)))AND(0.9362115824047704)))AND(vt1.c0)))OR(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1, t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (RTRIM((vt0.c0 IN ()))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (RTRIM((vt0.c0 IN ()))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 NOT INDEXED WHERE (((RTRIM((vt0.c0 IN ()))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0 HAVING MIN(((t0.c0)<(vt0.c0))) UNION ALL SELECT t0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0 HAVING (NOT (MIN(((t0.c0)<(vt0.c0))))) UNION ALL SELECT t0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0 HAVING ((MIN(((t0.c0)<(vt0.c0)))) ISNULL);
SELECT t0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0 HAVING MIN(((t0.c0)<(vt0.c0))) UNION ALL SELECT t0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0 HAVING (NOT (MIN(((t0.c0)<(vt0.c0))))) UNION ALL SELECT t0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0 HAVING ((MIN(((t0.c0)<(vt0.c0)))) ISNULL);
SELECT t0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))<=((('0.9362115824047704') NOT NULL)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))<=((('0.9362115824047704') NOT NULL)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))<=((('0.9362115824047704') NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt1.c0 FROM vt1, t0 INNER JOIN vt0 ON (t0.c0 IN ()) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t0 INNER JOIN vt0 ON (t0.c0 IN ()) WHERE (x'7112') GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, t0 INNER JOIN vt0 ON (t0.c0 IN ()) WHERE ((NOT (x'7112'))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, t0 NOT INDEXED INNER JOIN vt0 ON (t0.c0 IN ()) WHERE (((x'7112') ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, t0 INNER JOIN vt0 ON (t0.c0 IN ()) GROUP BY vt1.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0, t0.c0 HAVING ((((t0.c0)/(vt0.c0)))<<(SUM(GROUP_CONCAT(SUM('⎪'))))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (((((t0.c0)/(vt0.c0)))<<(SUM(GROUP_CONCAT(SUM('⎪'))))))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0, t0.c0 HAVING ((((((t0.c0)/(vt0.c0)))<<(SUM(GROUP_CONCAT(SUM('⎪')))))) ISNULL);
SELECT SUM(NULL) FROM t0 ORDER BY (NOT (((((t0.c0)AND(t0.c0)))AND(t0.c0))))  NULLS LAST, t0.c0  NULLS FIRST, (- (((((t0.c0)OR(t0.c0)))OR(t0.c0))));
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((CASE WHEN vt1.c0 THEN 0.07116389841523418 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))==((CAST(vt1.c0 AS TEXT))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((CASE WHEN vt1.c0 THEN 0.07116389841523418 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))==((CAST(vt1.c0 AS TEXT))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((CASE WHEN vt1.c0 THEN 0.07116389841523418 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))==((CAST(vt1.c0 AS TEXT))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL t0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, t0 NOT INDEXED GROUP BY t0.c0, vt0.c0, vt1.c0;
SELECT ALL t0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, t0 WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL)) GROUP BY t0.c0, vt0.c0, vt1.c0 UNION SELECT t0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, t0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM) NOT NULL)))) GROUP BY t0.c0, vt0.c0, vt1.c0 UNION SELECT t0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, t0 WHERE (((((vt0.c0 COLLATE RTRIM) NOT NULL)) ISNULL)) GROUP BY t0.c0, vt0.c0, vt1.c0;
SELECT ALL t0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, t0 NOT INDEXED GROUP BY t0.c0, vt0.c0, vt1.c0;
SELECT t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0 HAVING NULL UNION ALL SELECT t0.c0 FROM vt1, t0, vt0 NOT INDEXED GROUP BY t0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0 HAVING ((NULL) ISNULL);
SELECT t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0 HAVING NULL UNION ALL SELECT t0.c0 FROM vt1, t0, vt0 NOT INDEXED GROUP BY t0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0 HAVING ((NULL) ISNULL);
SELECT t0.c0 FROM vt1, t0, vt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0, vt1;
SELECT ALL t0.c0 FROM t0, vt0, vt1 WHERE (((((t0.c0)/(vt0.c0)))<<(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0, vt1 WHERE ((NOT (((((t0.c0)/(vt0.c0)))<<(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))))) UNION ALL SELECT t0.c0 FROM t0, vt0, vt1 WHERE (((((((t0.c0)/(vt0.c0)))<<(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT t0.c0 FROM t0, vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON vt1.c0;
SELECT DISTINCT * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON vt1.c0 WHERE (((((vt1.c0) IS TRUE))!=(((vt0.c0)LIKE(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON vt1.c0 WHERE ((NOT (((((vt1.c0) IS TRUE))!=(((vt0.c0)LIKE(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON vt1.c0 WHERE (((((((vt1.c0) IS TRUE))!=(((vt0.c0)LIKE(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON vt1.c0;
SELECT t0.c0 FROM t0, vt0, vt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0, vt1 WHERE (((((vt0.c0)GLOB(vt1.c0)))OR(CAST(vt0.c0 AS REAL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt0, vt1 NOT INDEXED WHERE ((NOT (((((vt0.c0)GLOB(vt1.c0)))OR(CAST(vt0.c0 AS REAL)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt0, vt1 WHERE (((((((vt0.c0)GLOB(vt1.c0)))OR(CAST(vt0.c0 AS REAL)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0, vt1 GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING ((MIN(vt1.c0))<=((COUNT(vt1.c0) IN ()))) UNION ALL SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING (NOT (((MIN(vt1.c0))<=((COUNT(vt1.c0) IN ()))))) UNION ALL SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING ((((MIN(vt1.c0))<=((COUNT(vt1.c0) IN ())))) ISNULL);
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING ((MIN(vt1.c0))<=((COUNT(vt1.c0) IN ()))) UNION ALL SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING (NOT (((MIN(vt1.c0))<=((COUNT(vt1.c0) IN ()))))) UNION ALL SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING ((((MIN(vt1.c0))<=((COUNT(vt1.c0) IN ())))) ISNULL);
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT ALL * FROM vt1 NATURAL JOIN t0;
SELECT ALL * FROM vt1 NATURAL JOIN t0 WHERE ((((vt1.c0)) BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 END)) AND ((((t0.c0)LIKE(t0.c0)))))) UNION ALL SELECT ALL * FROM vt1 NATURAL JOIN t0 WHERE ((NOT ((((vt1.c0)) BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 END)) AND ((((t0.c0)LIKE(t0.c0)))))))) UNION ALL SELECT ALL * FROM vt1 NATURAL JOIN t0 WHERE ((((((vt1.c0)) BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 END)) AND ((((t0.c0)LIKE(t0.c0)))))) ISNULL));
SELECT ALL * FROM vt1 NATURAL JOIN t0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE ((((vt0.c0)||(NULL)) IN ())) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT ((((vt0.c0)||(NULL)) IN ())))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((((((vt0.c0)||(NULL)) IN ())) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 WHERE (((t0.c0 COLLATE RTRIM)=(((vt0.c0)*(vt0.c0))))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 WHERE ((NOT (((t0.c0 COLLATE RTRIM)=(((vt0.c0)*(vt0.c0))))))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 WHERE (((((t0.c0 COLLATE RTRIM)==(((vt0.c0)*(vt0.c0))))) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING ((((((((t0.c0)AND(t0.c0)))AND(vt0.c0)))AND(MIN(COUNT(vt0.c0)))))OR(MAX(TOTAL(t0.c0)))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (((((((((t0.c0)AND(t0.c0)))AND(vt0.c0)))AND(MIN(COUNT(vt0.c0)))))OR(MAX(TOTAL(t0.c0)))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING ((((((((((t0.c0)AND(t0.c0)))AND(vt0.c0)))AND(MIN(COUNT(vt0.c0)))))OR(MAX(TOTAL(t0.c0))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((x'25f4')-(vt0.c0))) IS FALSE)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((x'25f4')-(vt0.c0))) IS FALSE)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((x'25f4')-(vt0.c0))) IS FALSE)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((NOT (vt0.c0)))<<(CASE vt1.c0  WHEN '198459928' THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((((NOT (vt0.c0)))<<(CASE vt1.c0  WHEN '198459928' THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((NOT (vt0.c0)))<<(CASE vt1.c0  WHEN '198459928' THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ('s') GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ('s'))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((('s') ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON ((HEX(t0.c0))!=((((t0.c0))>=(('ja7'))))) INNER JOIN t0 ON (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt0.c0 END)) AND ((t0.c0))) GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON ((HEX(t0.c0))<>((((t0.c0))>=(('ja7'))))) INNER JOIN t0 ON (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt0.c0 END)) AND ((t0.c0))) GROUP BY t0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON ((HEX(t0.c0))<>((((t0.c0))>=(('ja7'))))) INNER JOIN t0 ON (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt0.c0 END)) AND ((t0.c0))) GROUP BY t0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON ((HEX(t0.c0))!=((((t0.c0))>=(('ja7'))))) INNER JOIN t0 ON (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt0.c0 END)) AND ((t0.c0))) GROUP BY t0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON ((HEX(t0.c0))!=((((t0.c0))>=(('ja7'))))) INNER JOIN t0 ON (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt0.c0 END)) AND ((t0.c0))) GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON ((HEX(t0.c0))<>((((t0.c0))>=(('ja7'))))) INNER JOIN t0 ON (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt0.c0 END)) AND ((t0.c0))) GROUP BY t0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON ((HEX(t0.c0))<>((((t0.c0))>=(('ja7'))))) INNER JOIN t0 ON (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt0.c0 END)) AND ((t0.c0))) GROUP BY t0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON ((HEX(t0.c0))!=((((t0.c0))>=(('ja7'))))) INNER JOIN t0 ON (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt0.c0 END)) AND ((t0.c0))) GROUP BY t0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON ((HEX(t0.c0))!=((((t0.c0))>=(('ja7'))))) INNER JOIN t0 ON (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt0.c0 END)) AND ((t0.c0))) GROUP BY t0.c0, vt1.c0;
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((t0.c0) BETWEEN (json_array(vt0.c0, 0.280857874591684)) AND (((x'') BETWEEN (t0.c0) AND (t0.c0))));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS NUMERIC)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE ((NOT (CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS NUMERIC)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (((CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS NUMERIC)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, t0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, t0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt1.c0 HAVING GROUP_CONCAT(TOTAL(MAX(vt1.c0))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, t0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(MAX(vt1.c0))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, t0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((GROUP_CONCAT(TOTAL(MAX(vt1.c0)))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((((((NULL) BETWEEN (t0.c0) AND (6.0254967E7))))<((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((((NULL) BETWEEN (t0.c0) AND (6.0254967E7))))<((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))))) UNION ALL SELECT * FROM t0 WHERE ((((((((NULL) BETWEEN (t0.c0) AND (6.0254967E7))))<((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0)||(vt0.c0)) END) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (CASE WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0)||(vt0.c0)) END))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((CASE WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0)||(vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((COUNT(COUNT(vt1.c0))) ISNULL) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (((COUNT(COUNT(vt1.c0))) ISNULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((((COUNT(COUNT(vt1.c0))) ISNULL)) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0 IN ())))=(((vt1.c0 IN ()))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0 IN ())))==(((vt1.c0 IN ()))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0 IN ())))==(((vt1.c0 IN ()))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0)%(vt1.c0)))>=((((vt1.c0))!=((vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)%(vt1.c0)))>=((((vt1.c0))!=((vt1.c0)))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)%(vt1.c0)))>=((((vt1.c0))!=((vt1.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((TOTAL(AVG(AVG(AVG('-1947359141')))))) NOT BETWEEN ((((((t0.c0)OR('R42')))OR(COUNT(*))))) AND ((AVG(COUNT(TOTAL(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((TOTAL(AVG(AVG(AVG('-1947359141')))))) NOT BETWEEN ((((((t0.c0)OR('R42')))OR(COUNT(*))))) AND ((AVG(COUNT(TOTAL(t0.c0)))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((TOTAL(AVG(AVG(AVG('-1947359141')))))) NOT BETWEEN ((((((t0.c0)OR('R42')))OR(COUNT(*))))) AND ((AVG(COUNT(TOTAL(t0.c0))))))) ISNULL);
SELECT * FROM vt1 NATURAL JOIN vt0;
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((((vt0.c0) IS TRUE))LIKE(CAST(vt1.c0 AS REAL)))) UNION ALL SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((NOT (((((vt0.c0) IS TRUE))LIKE(CAST(vt1.c0 AS REAL)))))) UNION ALL SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (((((((vt0.c0) IS TRUE))LIKE(CAST(vt1.c0 AS REAL)))) ISNULL));
SELECT * FROM vt1 NATURAL JOIN vt0;
SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM vt0, t0, vt1;
SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM vt0, t0, vt1 WHERE (((vt0.c0 COLLATE BINARY) IS FALSE)) UNION SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM vt0, t0, vt1 WHERE ((NOT (((vt0.c0 COLLATE BINARY) IS FALSE)))) UNION SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM vt0, t0, vt1 WHERE (((((vt0.c0 COLLATE BINARY) IS FALSE)) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM vt0, t0, vt1;
SELECT ALL t0.c0 FROM t0, vt1 NOT INDEXED, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt1, vt0 WHERE ((+ (vt1.c0 COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt1, vt0 WHERE ((NOT ((+ (vt1.c0 COLLATE NOCASE))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt1, vt0 WHERE ((((+ (vt1.c0 COLLATE NOCASE))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt1 NOT INDEXED, vt0 GROUP BY t0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(AVG(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(AVG(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(AVG(vt1.c0))) ISNULL);
SELECT vt0.c0 FROM vt0, t0;
SELECT vt0.c0 FROM vt0, t0 WHERE ((((t0.c0 IN (vt0.c0))) IS TRUE)) UNION ALL SELECT vt0.c0 FROM vt0, t0 WHERE ((NOT ((((t0.c0 IN (vt0.c0))) IS TRUE)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 WHERE ((((((t0.c0 IN (vt0.c0))) IS TRUE)) ISNULL));
SELECT vt0.c0 FROM vt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN ((NOT (t0.c0))) AND (((NULL)>>(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN ((NOT (t0.c0))) AND (((NULL)>>(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN ((NOT (t0.c0))) AND (((NULL)>>(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 INDEXED BY i53 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING ((((MAX(t0.c0))OR((((t0.c0)) BETWEEN ((TOTAL(MIN(TOTAL(MIN(t0.c0)))))) AND ((COUNT(*)))))))AND(((((t0.c0)AND(vt1.c0)))OR(COUNT(*))))) UNION ALL SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT (((((MAX(t0.c0))OR((((t0.c0)) BETWEEN ((TOTAL(MIN(TOTAL(MIN(t0.c0)))))) AND ((COUNT(*)))))))AND(((((t0.c0)AND(vt1.c0)))OR(COUNT(*))))))) UNION ALL SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING ((((((MAX(t0.c0))OR((((t0.c0)) BETWEEN ((TOTAL(MIN(TOTAL(MIN(t0.c0)))))) AND ((COUNT(*)))))))AND(((((t0.c0)AND(vt1.c0)))OR(COUNT(*)))))) ISNULL);
SELECT ALL t0.c0 FROM vt1, t0, vt0;
SELECT t0.c0 FROM vt1, t0, vt0 WHERE (0.5353859933769826) ORDER BY (((((x'732c6cb0') NOTNULL)))>((((vt1.c0)LIKE(vt0.c0)))));
SELECT ALL t0.c0 FROM vt1, t0, vt0 WHERE ((NOT (0.5353859933769826))) ORDER BY (((((x'732c6cb0') NOTNULL)))>((((vt1.c0)LIKE(vt0.c0)))));
SELECT t0.c0 FROM vt1, t0, vt0 WHERE (((0.5353859933769826) ISNULL)) ORDER BY (((((x'732c6cb0') NOTNULL)))>((((vt1.c0)LIKE(vt0.c0)))));
SELECT ALL t0.c0 FROM vt1, t0, vt0;
SELECT DISTINCT * FROM vt0, vt1, t0;
SELECT DISTINCT * FROM vt0, vt1, t0 WHERE (((((((((((vt1.c0)>=(t0.c0)))OR((+ (t0.c0)))))OR(NULL)))OR(CAST(t0.c0 AS INTEGER))))AND(((vt0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0, vt1, t0 WHERE ((NOT (((((((((((vt1.c0)>=(t0.c0)))OR((+ (t0.c0)))))OR(NULL)))OR(CAST(t0.c0 AS INTEGER))))AND(((vt0.c0) NOT NULL)))))) UNION SELECT DISTINCT * FROM vt0, vt1, t0 WHERE (((((((((((((vt1.c0)>=(t0.c0)))OR((+ (t0.c0)))))OR(NULL)))OR(CAST(t0.c0 AS INTEGER))))AND(((vt0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, t0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE (((((((t0.c0)>(vt0.c0)))OR(t0.c0)))AND(((t0.c0) NOT NULL)))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT (((((((t0.c0)>(vt0.c0)))OR(t0.c0)))AND(((t0.c0) NOT NULL)))))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE (((((((((t0.c0)>(vt0.c0)))OR(t0.c0)))AND(((t0.c0) NOT NULL)))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt1.c0, vt0.c0, t0.c0 FROM vt1, t0, vt0 GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM vt1, t0, vt0 GROUP BY vt1.c0, vt0.c0, t0.c0 HAVING PRINTF(((vt0.c0)||(vt0.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (MIN(TOTAL(GROUP_CONCAT(MAX(vt1.c0)))))), CAST(MAX(MIN(GROUP_CONCAT(MIN(vt0.c0)))) AS NUMERIC)) UNION ALL SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM vt1, t0, vt0 GROUP BY vt1.c0, vt0.c0, t0.c0 HAVING (NOT (PRINTF(((vt0.c0)||(vt0.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (MIN(TOTAL(GROUP_CONCAT(MAX(vt1.c0)))))), CAST(MAX(MIN(GROUP_CONCAT(MIN(vt0.c0)))) AS NUMERIC)))) UNION ALL SELECT vt1.c0, vt0.c0, t0.c0 FROM vt1, t0, vt0 GROUP BY vt1.c0, vt0.c0, t0.c0 HAVING ((PRINTF(((vt0.c0)||(vt0.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (MIN(TOTAL(GROUP_CONCAT(MAX(vt1.c0)))))), CAST(MAX(MIN(GROUP_CONCAT(MIN(vt0.c0)))) AS NUMERIC))) ISNULL);
SELECT TOTAL((vt1.c0 IN ()) COLLATE BINARY) FROM vt0, vt1 ORDER BY (((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)) IN ((((vt1.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0))))) ASC;
SELECT ALL * FROM vt1 INDEXED BY i53;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((NULL) NOT NULL)) BETWEEN (((vt0.c0)+(vt0.c0))) AND (CAST(0.07557210720254537 AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((NULL) NOT NULL)) BETWEEN (((vt0.c0)+(vt0.c0))) AND (CAST(0.07557210720254537 AS NUMERIC)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((NULL) NOT NULL)) BETWEEN (((vt0.c0)+(vt0.c0))) AND (CAST(0.07557210720254537 AS NUMERIC)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING CASE ((vt1.c0)<(vt0.c0))  WHEN ((t0.c0) IS TRUE) THEN ((COUNT(*))IS NOT('7tT')) END UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (CASE ((vt1.c0)<(vt0.c0))  WHEN ((t0.c0) IS TRUE) THEN ((COUNT(*))IS NOT('7tT')) END)) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((CASE ((vt1.c0)<(vt0.c0))  WHEN ((t0.c0) IS TRUE) THEN ((COUNT(*))IS NOT('7tT')) END) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING CASE ((vt1.c0)<(vt0.c0))  WHEN ((t0.c0) IS TRUE) THEN ((COUNT(*))IS NOT('7tT')) END UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (CASE ((vt1.c0)<(vt0.c0))  WHEN ((t0.c0) IS TRUE) THEN ((COUNT(*))IS NOT('7tT')) END)) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((CASE ((vt1.c0)<(vt0.c0))  WHEN ((t0.c0) IS TRUE) THEN ((COUNT(*))IS NOT('7tT')) END) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (t0.c0) UNION ALL SELECT * FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.c0)>>(vt1.c0))) ISNULL)) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((((vt0.c0)>>(vt1.c0))) ISNULL)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((vt0.c0)>>(vt1.c0))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.c0, vt1.c0, t0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT vt0.c0, vt1.c0, t0.c0 FROM vt1, t0, vt0 WHERE ((NOT (CASE WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN vt1.c0 WHEN vt0.c0 THEN x'' WHEN t0.c0 THEN vt1.c0 WHEN 0.9223432127272376 THEN t0.c0 END))) GROUP BY vt0.c0, vt1.c0, t0.c0 UNION SELECT vt0.c0, vt1.c0, t0.c0 FROM vt1, t0, vt0 WHERE ((NOT ((NOT (CASE WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN vt1.c0 WHEN vt0.c0 THEN x'' WHEN t0.c0 THEN vt1.c0 WHEN 0.9223432127272376 THEN t0.c0 END))))) GROUP BY vt0.c0, vt1.c0, t0.c0 UNION SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt1, t0, vt0 WHERE ((((NOT (CASE WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN vt1.c0 WHEN vt0.c0 THEN x'' WHEN t0.c0 THEN vt1.c0 WHEN 0.9223432127272376 THEN t0.c0 END))) ISNULL)) GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT vt0.c0, vt1.c0, t0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(SUM(GROUP_CONCAT(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(SUM(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(SUM(GROUP_CONCAT(vt1.c0)))) ISNULL);
SELECT ALL * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE ((('' COLLATE BINARY)<=(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT ((('' COLLATE BINARY)<=(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END))))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((((('' COLLATE BINARY)<=(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END))) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 WHERE (CAST(NULL AS REAL) COLLATE NOCASE) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0, t0 WHERE ((NOT (CAST(NULL AS REAL) COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 WHERE (((CAST(NULL AS REAL) COLLATE NOCASE) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(COUNT(x'e41d8ad1')) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(COUNT(x'e41d8ad1')))) UNION ALL SELECT vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0 HAVING ((AVG(COUNT(x'e41d8ad1'))) ISNULL);
SELECT * FROM vt1, vt0, t0;
SELECT * FROM vt1, vt0, t0 WHERE (json(x'')) UNION ALL SELECT ALL * FROM vt1, vt0, t0 WHERE ((NOT (json(x'')))) UNION ALL SELECT * FROM vt1, vt0, t0 WHERE (((json(x'')) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1;
SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END AS REAL)) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((NOT (CAST(CASE WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END AS REAL)))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1 WHERE (((CAST(CASE WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END AS REAL)) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 END) IS TRUE)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt0.c0 END) IS TRUE)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt0.c0 END) IS TRUE)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt1.c0, t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY vt1.c0, t0.c0, vt0.c0;
SELECT vt1.c0, t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY vt1.c0, t0.c0, vt0.c0 HAVING ((NOT (vt1.c0)) IN (AVG(x''))) UNION ALL SELECT vt1.c0, t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY vt1.c0, t0.c0, vt0.c0 HAVING (NOT (((NOT (vt1.c0)) IN (AVG(x''))))) UNION ALL SELECT vt1.c0, t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY vt1.c0, t0.c0, vt0.c0 HAVING ((((NOT (vt1.c0)) IN (AVG(x'')))) ISNULL);
SELECT vt1.c0, t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY vt1.c0, t0.c0, vt0.c0;
SELECT vt1.c0, t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY vt1.c0, t0.c0, vt0.c0 HAVING ((NOT (vt1.c0)) IN (AVG(x''))) UNION ALL SELECT vt1.c0, t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY vt1.c0, t0.c0, vt0.c0 HAVING (NOT (((NOT (vt1.c0)) IN (AVG(x''))))) UNION ALL SELECT vt1.c0, t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY vt1.c0, t0.c0, vt0.c0 HAVING ((((NOT (vt1.c0)) IN (AVG(x'')))) ISNULL);
SELECT vt1.c0, t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY vt1.c0, t0.c0, vt0.c0;
SELECT * FROM t0, vt1, vt0;
SELECT * FROM t0, vt1, vt0 WHERE (CASE ((vt1.c0)&(x''))  WHEN 0.31947293686617206 THEN ((vt0.c0)+(vt0.c0)) ELSE (vt1.c0 IN ()) END) UNION ALL SELECT ALL * FROM t0, vt1, vt0 WHERE ((NOT (CASE ((vt1.c0)&(x''))  WHEN 0.31947293686617206 THEN ((vt0.c0)+(vt0.c0)) ELSE (vt1.c0 IN ()) END))) UNION ALL SELECT * FROM t0, vt1, vt0 WHERE (((CASE ((vt1.c0)&(x''))  WHEN 0.31947293686617206 THEN ((vt0.c0)+(vt0.c0)) ELSE (vt1.c0 IN ()) END) ISNULL));
SELECT * FROM t0, vt1, vt0;
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE (MIN(((vt0.c0)OR(vt0.c0)), ((0.7139176302845945)=(t0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((NOT (MIN(((vt0.c0)OR(vt0.c0)), ((0.7139176302845945)=(t0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE (((MIN(((vt0.c0)OR(vt0.c0)), ((0.7139176302845945)=(t0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT ALL vt1.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON (t0.c0 IN ()) LEFT OUTER JOIN vt1 ON t0.c0 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON (t0.c0 IN ()) LEFT OUTER JOIN vt1 ON t0.c0 WHERE (((('1854118296' IN ()))IS(((t0.c0)/(t0.c0))))) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON (t0.c0 IN ()) LEFT OUTER JOIN vt1 ON t0.c0 WHERE ((NOT (((('1854118296' IN ()))IS(((t0.c0)/(t0.c0))))))) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON (t0.c0 IN ()) LEFT OUTER JOIN vt1 ON t0.c0 WHERE (((((('1854118296' IN ()))IS(((t0.c0)/(t0.c0))))) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON (t0.c0 IN ()) LEFT OUTER JOIN vt1 ON t0.c0 GROUP BY vt1.c0, t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((DATETIME(COUNT(t0.c0), COUNT(COUNT(t0.c0)), COUNT(t0.c0)))AND((+ (COUNT(*))))))AND(TOTAL(GROUP_CONCAT(AVG(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((DATETIME(COUNT(t0.c0), COUNT(COUNT(t0.c0)), COUNT(t0.c0)))AND((+ (COUNT(*))))))AND(TOTAL(GROUP_CONCAT(AVG(t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((DATETIME(COUNT(t0.c0), COUNT(COUNT(t0.c0)), COUNT(t0.c0)))AND((+ (COUNT(*))))))AND(TOTAL(GROUP_CONCAT(AVG(t0.c0)))))) ISNULL);
SELECT ALL SUM(NULL) FROM vt1, t0, vt0 ORDER BY t0.c0, ((((0.6664093227854138)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) IN ()), ((((vt1.c0) ISNULL))<((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'6f7c'))))) ASC  NULLS FIRST;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((+ (vt1.c0)) IN ())) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((+ (vt1.c0)) IN ())))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((+ (vt1.c0)) IN ())) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CASE json_remove(t0.c0, -9150403)  WHEN CASE t0.c0  WHEN x'df18' THEN t0.c0 END THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) END) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CASE json_remove(t0.c0, -9150403)  WHEN CASE t0.c0  WHEN x'df18' THEN t0.c0 END THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) END))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CASE json_remove(t0.c0, -9150403)  WHEN CASE t0.c0  WHEN x'df18' THEN t0.c0 END THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) END) ISNULL));
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST(t0.c0 COLLATE BINARY AS REAL)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c0 COLLATE BINARY AS REAL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST(t0.c0 COLLATE BINARY AS REAL)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0 INNER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((((t0.c0, '<a', vt0.c0))<=((vt0.c0, NULL, vt0.c0)))))) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0 INNER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((((t0.c0, '<a', vt0.c0))<=((vt0.c0, NULL, vt0.c0)))))) GROUP BY t0.c0 HAVING TOTAL(((((vt0.c0)OR(COUNT(*))))OR(SUM(vt0.c0)))) UNION ALL SELECT ALL t0.c0 FROM vt0 INNER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((((t0.c0, '<a', vt0.c0))<=((vt0.c0, NULL, vt0.c0)))))) GROUP BY t0.c0 HAVING (NOT (TOTAL(((((vt0.c0)OR(COUNT(*))))OR(SUM(vt0.c0)))))) UNION ALL SELECT t0.c0 FROM vt0 INNER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((((t0.c0, '<a', vt0.c0))<=((vt0.c0, NULL, vt0.c0)))))) GROUP BY t0.c0 HAVING ((TOTAL(((((vt0.c0)OR(COUNT(*))))OR(SUM(vt0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((('J멵WZᇑ>~6', (vt0.c0 IN ()), ((vt0.c0)&(vt0.c0))))<((((vt0.c0)IS(vt1.c0)), vt1.c0 COLLATE RTRIM, SQLITE_VERSION())));
SELECT vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((('J멵WZᇑ>~6', (vt0.c0 IN ()), ((vt0.c0)&(vt0.c0))))<((((vt0.c0)IS(vt1.c0)), vt1.c0 COLLATE RTRIM, SQLITE_VERSION()))) WHERE (((('''y%F57' IN ()))+(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((('J멵WZᇑ>~6', (vt0.c0 IN ()), ((vt0.c0)&(vt0.c0))))<((((vt0.c0)IS(vt1.c0)), vt1.c0 COLLATE RTRIM, SQLITE_VERSION()))) WHERE ((NOT (((('''y%F57' IN ()))+(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((('J멵WZᇑ>~6', (vt0.c0 IN ()), ((vt0.c0)&(vt0.c0))))<((((vt0.c0)IS(vt1.c0)), vt1.c0 COLLATE RTRIM, SQLITE_VERSION()))) WHERE (((((('''y%F57' IN ()))+(vt0.c0))) ISNULL));
SELECT vt0.c0 FROM vt1 CROSS JOIN vt0 ON ((('J멵WZᇑ>~6', (vt0.c0 IN ()), ((vt0.c0)&(vt0.c0))))<((((vt0.c0)IS(vt1.c0)), vt1.c0 COLLATE RTRIM, SQLITE_VERSION())));
SELECT DISTINCT * FROM t0 INDEXED BY i53 FULL OUTER JOIN vt0 ON (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))>((CASE vt0.c0  WHEN t0.c0 THEN t0.c0 END)));
SELECT ALL vt0.c0 FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (CASE WHEN 0.41324338543394357 THEN t0.c0 ELSE 0X4ab95da3 END IN (0.7967449113994214)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (CASE WHEN 0.41324338543394357 THEN t0.c0 ELSE 0X4ab95da3 END IN (0.7967449113994214)) WHERE (x'') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (CASE WHEN 0.41324338543394357 THEN t0.c0 ELSE 0x4ab95da3 END IN (0.7967449113994214)) WHERE ((NOT (x''))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (CASE WHEN 0.41324338543394357 THEN t0.c0 ELSE 0x4ab95da3 END IN (0.7967449113994214)) WHERE (((x'') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (CASE WHEN 0.41324338543394357 THEN t0.c0 ELSE 0X4ab95da3 END IN (0.7967449113994214)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING MAX(vt0.c0) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((MAX(vt0.c0)) ISNULL);
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING MAX(vt0.c0) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((MAX(vt0.c0)) ISNULL);
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE RTRIM) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c0 AS INTEGER) COLLATE RTRIM))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS INTEGER) COLLATE RTRIM) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM vt0, vt1 INNER JOIN t0 ON (NOT (SUBSTR(vt1.c0, vt0.c0)));
SELECT DISTINCT * FROM vt0, vt1 INNER JOIN t0 ON (NOT (SUBSTR(vt1.c0, vt0.c0))) WHERE (((((vt1.c0)<<(vt1.c0)))<(((vt0.c0) BETWEEN (t0.c0) AND (vt1.c0))))) UNION SELECT DISTINCT * FROM vt0, vt1 INNER JOIN t0 ON (NOT (SUBSTR(vt1.c0, vt0.c0))) WHERE ((NOT (((((vt1.c0)<<(vt1.c0)))<(((vt0.c0) BETWEEN (t0.c0) AND (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt0, vt1 INNER JOIN t0 ON (NOT (SUBSTR(vt1.c0, vt0.c0))) WHERE (((((((vt1.c0)<<(vt1.c0)))<(((vt0.c0) BETWEEN (t0.c0) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1 INNER JOIN t0 ON (NOT (SUBSTR(vt1.c0, vt0.c0)));
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 WHERE (((NULL) NOT BETWEEN (vt1.c0) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT (((NULL) NOT BETWEEN (vt1.c0) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE (((((NULL) NOT BETWEEN (vt1.c0) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (((((vt0.c0)) NOT BETWEEN ((MAX(vt0.c0))) AND ((MAX(t0.c0))))) BETWEEN (TOTAL(NULL)) AND (CASE WHEN SUM(COUNT(*)) THEN AVG(t0.c0) WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN AVG(679506195) ELSE vt0.c0 END)) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT ((((((vt0.c0)) NOT BETWEEN ((MAX(vt0.c0))) AND ((MAX(t0.c0))))) BETWEEN (TOTAL(NULL)) AND (CASE WHEN SUM(COUNT(*)) THEN AVG(t0.c0) WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN AVG(679506195) ELSE vt0.c0 END)))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (((((((vt0.c0)) NOT BETWEEN ((MAX(vt0.c0))) AND ((MAX(t0.c0))))) BETWEEN (TOTAL(NULL)) AND (CASE WHEN SUM(COUNT(*)) THEN AVG(t0.c0) WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN AVG(679506195) ELSE vt0.c0 END))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((t0.c0 IN ())) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((t0.c0 IN ())))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((t0.c0 IN ())) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((+ (CASE WHEN t0.c0 THEN t0.c0 END))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((NOT ((+ (CASE WHEN t0.c0 THEN t0.c0 END))))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((((+ (CASE WHEN t0.c0 THEN t0.c0 END))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0, vt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((MAX(x'', t0.c0))/(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((MAX(x'', t0.c0))/(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((MAX(x'', t0.c0))/(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING MAX(AVG(MIN(vt0.c0))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (MAX(AVG(MIN(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((MAX(AVG(MIN(vt0.c0)))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN (('') NOT NULL) ELSE vt1.c0 END) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CASE WHEN vt1.c0 COLLATE NOCASE THEN (('') NOT NULL) ELSE vt1.c0 END))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c0 COLLATE NOCASE THEN (('') NOT NULL) ELSE vt1.c0 END) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0))>((0xfffffffff03b8ab1))))IS NOT('1847160282'))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((vt0.c0))>((0xfffffffff03b8ab1))))IS NOT('1847160282'))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((vt0.c0))>((0xfffffffff03b8ab1))))IS NOT('1847160282'))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0, vt1 WHERE (((CASE t0.c0  WHEN vt1.c0 THEN 0.5728210943649555 ELSE vt1.c0 END)==(((t0.c0)LIKE(vt0.c0))))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM vt0, t0, vt1 WHERE ((NOT (((CASE t0.c0  WHEN vt1.c0 THEN 0.5728210943649555 ELSE vt1.c0 END)==(((t0.c0)LIKE(vt0.c0))))))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM vt0, t0, vt1 WHERE (((((CASE t0.c0  WHEN vt1.c0 THEN 0.5728210943649555 ELSE vt1.c0 END)==(((t0.c0)LIKE(vt0.c0))))) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY t0.c0, vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(((vt1.c0)<(-1.0461428E8))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(((vt1.c0)<(-1.0461428E8))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(((vt1.c0)<(-1.0461428E8)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(((vt1.c0)<(-1.0461428E8))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(((vt1.c0)<(-1.0461428E8))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(((vt1.c0)<(-1.0461428E8)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE ((- (((t0.c0)&(vt1.c0))))) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT ((- (((t0.c0)&(vt1.c0))))))) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((((- (((t0.c0)&(vt1.c0))))) ISNULL));
SELECT t0.c0, vt1.c0 FROM vt1, t0;
SELECT DISTINCT vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((CASE WHEN vt0.c0 THEN t0.c0 ELSE 0.25830158160494066 END)AND(((t0.c0)+(t0.c0)))))AND(vt0.c0 COLLATE RTRIM));
SELECT DISTINCT vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((CASE WHEN vt0.c0 THEN t0.c0 ELSE 0.25830158160494066 END)AND(((t0.c0)+(t0.c0)))))AND(vt0.c0 COLLATE RTRIM)) WHERE (((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))) IN ())) UNION SELECT DISTINCT vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((CASE WHEN vt0.c0 THEN t0.c0 ELSE 0.25830158160494066 END)AND(((t0.c0)+(t0.c0)))))AND(vt0.c0 COLLATE RTRIM)) WHERE ((NOT (((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))) IN ())))) UNION SELECT DISTINCT vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((CASE WHEN vt0.c0 THEN t0.c0 ELSE 0.25830158160494066 END)AND(((t0.c0)+(t0.c0)))))AND(vt0.c0 COLLATE RTRIM)) WHERE (((((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))) IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON ((((CASE WHEN vt0.c0 THEN t0.c0 ELSE 0.25830158160494066 END)AND(((t0.c0)+(t0.c0)))))AND(vt0.c0 COLLATE RTRIM));
SELECT vt0.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON json_array_length((((vt0.c0, t0.c0, vt0.c0))=((t0.c0, t0.c0, vt0.c0))), ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0, t0.c0, vt1.c0 HAVING ((((((vt1.c0)<<(GROUP_CONCAT(MIN(COUNT(*))))))AND(t0.c0)))AND(((((((((((((SUM(t0.c0))OR(vt1.c0)))AND(vt0.c0)))OR(TOTAL(SUM(t0.c0)))))OR(vt0.c0)))AND(COUNT(*))))AND(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM vt0 NOT INDEXED, vt1, t0 GROUP BY vt0.c0, t0.c0, vt1.c0 HAVING (NOT (((((((vt1.c0)<<(GROUP_CONCAT(MIN(COUNT(*))))))AND(t0.c0)))AND(((((((((((((SUM(t0.c0))OR(vt1.c0)))AND(vt0.c0)))OR(TOTAL(SUM(t0.c0)))))OR(vt0.c0)))AND(COUNT(*))))AND(vt0.c0)))))) UNION ALL SELECT vt0.c0, t0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0, t0.c0, vt1.c0 HAVING ((((((((vt1.c0)<<(GROUP_CONCAT(MIN(COUNT(*))))))AND(t0.c0)))AND(((((((((((((SUM(t0.c0))OR(vt1.c0)))AND(vt0.c0)))OR(TOTAL(SUM(t0.c0)))))OR(vt0.c0)))AND(COUNT(*))))AND(vt0.c0))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ('459324021') UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ('459324021'))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((('459324021') ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt1, t0, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, t0, vt0 WHERE ((+ ((((vt1.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt1.c0, t0.c0, t0.c0)) AND ((vt0.c0, NULL, t0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt1 NOT INDEXED, t0, vt0 WHERE ((NOT ((+ ((((vt1.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt1.c0, t0.c0, t0.c0)) AND ((vt0.c0, NULL, t0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt1, t0, vt0 WHERE ((((+ ((((vt1.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt1.c0, t0.c0, t0.c0)) AND ((vt0.c0, NULL, t0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, t0, vt0;
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (('-1127320859')<>((((0Xfffffffff98ff585)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))))) GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (('-1127320859')<>((((0xfffffffff98ff585)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))))) WHERE ((((((((((~ (vt0.c0)))AND((NULL IN ()))))OR(vt0.c0 COLLATE RTRIM)))OR(((vt1.c0) NOTNULL))))AND(x'80672284'))) GROUP BY vt0.c0, t0.c0, vt1.c0 UNION SELECT vt0.c0, t0.c0, vt1.c0 FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (('-1127320859')<>((((0Xfffffffff98ff585)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))))) WHERE ((NOT ((((((((((~ (vt0.c0)))AND((NULL IN ()))))OR(vt0.c0 COLLATE RTRIM)))OR(((vt1.c0) NOTNULL))))AND(x'80672284'))))) GROUP BY vt0.c0, t0.c0, vt1.c0 UNION SELECT vt0.c0, t0.c0, vt1.c0 FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (('-1127320859')!=((((0xfffffffff98ff585)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))))) WHERE ((((((((((((~ (vt0.c0)))AND((NULL IN ()))))OR(vt0.c0 COLLATE RTRIM)))OR(((vt1.c0) NOTNULL))))AND(x'80672284'))) ISNULL)) GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (('-1127320859')<>((((0Xfffffffff98ff585)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))))) GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON vt0.c0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN vt1 ON vt0.c0 GROUP BY vt0.c0 HAVING TOTAL((NOT (vt1.c0))) UNION ALL SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON vt0.c0 GROUP BY vt0.c0 HAVING (NOT (TOTAL((NOT (vt1.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON vt0.c0 GROUP BY vt0.c0 HAVING ((TOTAL((NOT (vt1.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON vt0.c0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN vt1 ON vt0.c0 GROUP BY vt0.c0 HAVING TOTAL((NOT (vt1.c0))) UNION ALL SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON vt0.c0 GROUP BY vt0.c0 HAVING (NOT (TOTAL((NOT (vt1.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON vt0.c0 GROUP BY vt0.c0 HAVING ((TOTAL((NOT (vt1.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 CROSS JOIN vt1 ON vt0.c0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c0)LIKE(CAST(vt0.c0 AS BLOB)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c0)LIKE(CAST(vt0.c0 AS BLOB)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((vt0.c0)LIKE(CAST(vt0.c0 AS BLOB)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt1, vt0, t0;
SELECT DISTINCT * FROM vt1, vt0, t0 WHERE (((0.739914157082377) NOT BETWEEN (((((x'98e7')AND(t0.c0)))OR(vt1.c0))) AND ((1089448112 IN (vt0.c0))))) UNION SELECT DISTINCT * FROM vt1, vt0, t0 WHERE ((NOT (((0.739914157082377) NOT BETWEEN (((((x'98e7')AND(t0.c0)))OR(vt1.c0))) AND ((1089448112 IN (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt1, vt0, t0 WHERE (((((0.739914157082377) NOT BETWEEN (((((x'98e7')AND(t0.c0)))OR(vt1.c0))) AND ((1089448112 IN (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, t0;
SELECT vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()) WHERE ((((vt0.c0) IS TRUE) IN ())) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()) WHERE ((NOT ((((vt0.c0) IS TRUE) IN ())))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()) WHERE ((((((vt0.c0) IS TRUE) IN ())) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()) GROUP BY vt1.c0, vt0.c0;
SELECT t0.c0 FROM t0, vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 GROUP BY t0.c0 HAVING ((MIN(NULL))==(((COUNT(*))<(MIN(MAX(TOTAL(MAX(vt1.c0)))))))) UNION ALL SELECT t0.c0 FROM t0, vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 GROUP BY t0.c0 HAVING (NOT (((MIN(NULL))==(((COUNT(*))<(MIN(MAX(TOTAL(MAX(vt1.c0)))))))))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 GROUP BY t0.c0 HAVING ((((MIN(NULL))==(((COUNT(*))<(MIN(MAX(TOTAL(MAX(vt1.c0))))))))) ISNULL);
SELECT ALL SUM((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) FROM vt1 ORDER BY ((0.6059308059059803)IS(vt1.c0)) COLLATE RTRIM;
SELECT ALL vt0.c0 FROM t0, vt0;
SELECT ALL vt0.c0 FROM t0, vt0 WHERE (((json_extract(vt0.c0, vt0.c0))||(t0.c0))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 WHERE ((NOT (((json_extract(vt0.c0, vt0.c0))||(t0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0 WHERE (((((json_extract(vt0.c0, vt0.c0))||(t0.c0))) ISNULL));
SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt0, vt1;
SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt0, vt1 WHERE ((((((t0.c0, t0.c0, vt0.c0)) BETWEEN ((vt0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, vt1.c0)))) NOT BETWEEN (CASE WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END) AND (vt1.c0 COLLATE BINARY))) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt0, vt1 WHERE ((NOT ((((((t0.c0, t0.c0, vt0.c0)) BETWEEN ((vt0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, vt1.c0)))) NOT BETWEEN (CASE WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END) AND (vt1.c0 COLLATE BINARY))))) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt0, vt1 WHERE ((((((((t0.c0, t0.c0, vt0.c0)) BETWEEN ((vt0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, vt1.c0)))) NOT BETWEEN (CASE WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END) AND (vt1.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt0, vt1;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON (((vt1.c0)!=(2.029961159E9)) IN (CAST(t0.c0 AS INTEGER))) RIGHT OUTER JOIN vt1 ON 0x7f8f504a GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((((SUM(SUM(vt0.c0)))AND(vt0.c0)))OR(SUM(COUNT(SUM(AVG(SUM(vt0.c0))))))))OR(vt0.c0)))AND(MAX(SUM(vt0.c0)))))-(SUM(SUM(MAX(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((((((((SUM(SUM(vt0.c0)))AND(vt0.c0)))OR(SUM(COUNT(SUM(AVG(SUM(vt0.c0))))))))OR(vt0.c0)))AND(MAX(SUM(vt0.c0)))))-(SUM(SUM(MAX(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((((((((SUM(SUM(vt0.c0)))AND(vt0.c0)))OR(SUM(COUNT(SUM(AVG(SUM(vt0.c0))))))))OR(vt0.c0)))AND(MAX(SUM(vt0.c0)))))-(SUM(SUM(MAX(vt0.c0)))))) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((vt1.c0)>(vt1.c0)) ELSE ((vt0.c0)AND(vt1.c0)) END) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((vt1.c0)>(vt1.c0)) ELSE ((vt0.c0)AND(vt1.c0)) END))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((vt1.c0)>(vt1.c0)) ELSE ((vt0.c0)AND(vt1.c0)) END) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((vt0.c0 COLLATE BINARY)LIKE(((vt1.c0)+(vt0.c0))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY)LIKE(((vt1.c0)+(vt0.c0))))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((vt0.c0 COLLATE BINARY)LIKE(((vt1.c0)+(vt0.c0))))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT vt1.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, t0, vt1 WHERE (LIKE(((vt0.c0) BETWEEN (NULL) AND (vt1.c0)), 'hV/lqY,TO')) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, t0, vt1 WHERE ((NOT (LIKE(((vt0.c0) BETWEEN (NULL) AND (vt1.c0)), 'hV/lqY,TO')))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, t0, vt1 WHERE (((LIKE(((vt0.c0) BETWEEN (NULL) AND (vt1.c0)), 'hV/lqY,TO')) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0 HAVING SUM(((COUNT(vt1.c0)) IS TRUE)) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0 HAVING (NOT (SUM(((COUNT(vt1.c0)) IS TRUE)))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0 HAVING ((SUM(((COUNT(vt1.c0)) IS TRUE))) ISNULL);
SELECT ALL * FROM t0, vt1;
SELECT * FROM t0, vt1 WHERE ((((~ (t0.c0))) NOTNULL)) UNION ALL SELECT * FROM t0, vt1 WHERE ((NOT ((((~ (t0.c0))) NOTNULL)))) UNION ALL SELECT ALL * FROM t0, vt1 WHERE ((((((~ (t0.c0))) NOTNULL)) ISNULL));
SELECT ALL * FROM t0, vt1;
SELECT DISTINCT * FROM vt0, t0, vt1;
SELECT DISTINCT * FROM vt0, t0, vt1 WHERE ((((NULL)) NOT BETWEEN ((UNLIKELY(t0.c0))) AND ((CASE t0.c0  WHEN 1929920853 THEN t0.c0 END)))) UNION SELECT DISTINCT * FROM vt0, t0, vt1 WHERE ((NOT ((((NULL)) NOT BETWEEN ((UNLIKELY(t0.c0))) AND ((CASE t0.c0  WHEN 1929920853 THEN t0.c0 END)))))) UNION SELECT DISTINCT * FROM vt0, t0, vt1 WHERE ((((((NULL)) NOT BETWEEN ((UNLIKELY(t0.c0))) AND ((CASE t0.c0  WHEN 1929920853 THEN t0.c0 END)))) ISNULL));
SELECT DISTINCT * FROM vt0, t0, vt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(((t0.c0)=(t0.c0)))))AND(((((t0.c0)OR(t0.c0)))OR(t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(((t0.c0)==(t0.c0)))))AND(((((t0.c0)OR(t0.c0)))OR(t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(((t0.c0)==(t0.c0)))))AND(((((t0.c0)OR(t0.c0)))OR(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING ((((AVG(MIN(t0.c0))) IS TRUE)) NOTNULL) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (((((AVG(MIN(t0.c0))) IS TRUE)) NOTNULL))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING ((((((AVG(MIN(t0.c0))) IS TRUE)) NOTNULL)) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (CAST((((t0.c0, t0.c0, 0.4539584770953905))>((t0.c0, t0.c0, t0.c0))) AS TEXT)) UNION ALL SELECT * FROM t0 WHERE ((NOT (CAST((((t0.c0, t0.c0, 0.4539584770953905))>((t0.c0, t0.c0, t0.c0))) AS TEXT)))) UNION ALL SELECT ALL * FROM t0 WHERE (((CAST((((t0.c0, t0.c0, 0.4539584770953905))>((t0.c0, t0.c0, t0.c0))) AS TEXT)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT vt1.c0 FROM vt0, t0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0 NOT INDEXED, t0, vt1 WHERE (LIKELIHOOD(DISTINCT ((vt0.c0) BETWEEN (t0.c0) AND (x'')), 0.47080281030720694)) UNION SELECT DISTINCT vt1.c0 FROM vt0, t0 NOT INDEXED, vt1 WHERE ((NOT (LIKELIHOOD(DISTINCT ((vt0.c0) BETWEEN (t0.c0) AND (x'')), 0.47080281030720694)))) UNION SELECT DISTINCT vt1.c0 FROM vt0, t0, vt1 WHERE (((LIKELIHOOD(DISTINCT ((vt0.c0) BETWEEN (t0.c0) AND (x'')), 0.47080281030720694)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, t0, vt1;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1, t0 WHERE ('1896058254') GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, vt1, t0 WHERE ((NOT ('1896058254'))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0 NOT INDEXED, vt1, t0 WHERE ((('1896058254') ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL t0.c0 FROM vt1 FULL OUTER JOIN t0 ON NULL GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1 FULL OUTER JOIN t0 ON NULL GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT t0.c0 FROM vt1 FULL OUTER JOIN t0 ON NULL GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c0 FROM vt1 FULL OUTER JOIN t0 ON NULL GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c0 FROM vt1 FULL OUTER JOIN t0 ON NULL GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1 FULL OUTER JOIN t0 ON NULL GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT t0.c0 FROM vt1 FULL OUTER JOIN t0 ON NULL GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c0 FROM vt1 FULL OUTER JOIN t0 ON NULL GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c0 FROM vt1 FULL OUTER JOIN t0 ON NULL GROUP BY t0.c0;
SELECT ALL * FROM t0, vt1, vt0;
SELECT * FROM t0, vt1, vt0 WHERE (0.9774897725829449) UNION ALL SELECT ALL * FROM t0, vt1, vt0 WHERE ((NOT (0.9774897725829449))) UNION ALL SELECT ALL * FROM t0, vt1, vt0 WHERE (((0.9774897725829449) ISNULL));
SELECT ALL * FROM t0, vt1, vt0;
SELECT DISTINCT t0.c0, vt0.c0 FROM t0, vt0;
SELECT DISTINCT t0.c0, vt0.c0 FROM t0, vt0 WHERE (CASE WHEN vt0.c0 THEN ((vt0.c0)AND(t0.c0)) END) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM t0, vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN ((vt0.c0)AND(t0.c0)) END))) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM t0, vt0 WHERE (((CASE WHEN vt0.c0 THEN ((vt0.c0)AND(t0.c0)) END) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0 FROM t0, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS REAL))>>(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS REAL))>>(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c0 AS REAL))>>(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((SQLITE_VERSION())<=(COUNT(vt0.c0))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (((SQLITE_VERSION())<=(COUNT(vt0.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((((SQLITE_VERSION())<=(COUNT(vt0.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((SQLITE_VERSION())<=(COUNT(vt0.c0))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (((SQLITE_VERSION())<=(COUNT(vt0.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((((SQLITE_VERSION())<=(COUNT(vt0.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL * FROM vt1, vt0, t0;
SELECT ALL * FROM vt1, vt0, t0 WHERE (TRIM(DISTINCT (+ (vt1.c0)), CASE WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END)) UNION ALL SELECT ALL * FROM vt1, vt0, t0 WHERE ((NOT (TRIM(DISTINCT (+ (vt1.c0)), CASE WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END)))) UNION ALL SELECT * FROM vt1, vt0, t0 WHERE (((TRIM(DISTINCT (+ (vt1.c0)), CASE WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END)) ISNULL));
SELECT ALL * FROM vt1, vt0, t0;
SELECT DISTINCT vt0.c0, t0.c0, vt1.c0 FROM t0, vt0 FULL OUTER JOIN vt1 ON CASE (((vt0.c0))<((t0.c0)))  WHEN ((t0.c0)>>(0.34541617572167904)) THEN ((vt1.c0)OR(1896058254)) END;
SELECT DISTINCT vt0.c0, t0.c0, vt1.c0 FROM t0, vt0 FULL OUTER JOIN vt1 ON CASE (((vt0.c0))<((t0.c0)))  WHEN ((t0.c0)>>(0.34541617572167904)) THEN ((vt1.c0)OR(1896058254)) END WHERE (((t0.c0 COLLATE RTRIM)!=((((t0.c0))=((vt0.c0)))))) UNION SELECT DISTINCT vt0.c0, t0.c0, vt1.c0 FROM t0, vt0 FULL OUTER JOIN vt1 ON CASE (((vt0.c0))<((t0.c0)))  WHEN ((t0.c0)>>(0.34541617572167904)) THEN ((vt1.c0)OR(1896058254)) END WHERE ((NOT (((t0.c0 COLLATE RTRIM)<>((((t0.c0))=((vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0, t0.c0, vt1.c0 FROM t0, vt0 FULL OUTER JOIN vt1 ON CASE (((vt0.c0))<((t0.c0)))  WHEN ((t0.c0)>>(0.34541617572167904)) THEN ((vt1.c0)OR(1896058254)) END WHERE (((((t0.c0 COLLATE RTRIM)!=((((t0.c0))=((vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0, vt1.c0 FROM t0, vt0 FULL OUTER JOIN vt1 ON CASE (((vt0.c0))<((t0.c0)))  WHEN ((t0.c0)>>(0.34541617572167904)) THEN ((vt1.c0)OR(1896058254)) END;
SELECT vt1.c0 FROM vt1, vt0, t0 INDEXED BY i53 GROUP BY vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING UPPER(DISTINCT GROUP_CONCAT(vt1.c0)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (UPPER(DISTINCT GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((UPPER(DISTINCT GROUP_CONCAT(vt1.c0))) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING UPPER(DISTINCT GROUP_CONCAT(vt1.c0)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (UPPER(DISTINCT GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((UPPER(DISTINCT GROUP_CONCAT(vt1.c0))) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 WHERE ((NOT ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 WHERE ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())) ISNULL));
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(x'7bc2' COLLATE NOCASE)))OR((~ (vt0.c0)))))AND(((vt0.c0) NOTNULL))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((((((((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(x'7bc2' COLLATE NOCASE)))OR((~ (vt0.c0)))))AND(((vt0.c0) NOTNULL))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((((((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(x'7bc2' COLLATE NOCASE)))OR((~ (vt0.c0)))))AND(((vt0.c0) NOTNULL))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE NOCASE AS TEXT)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 COLLATE NOCASE AS TEXT)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1, t0 INDEXED BY i53 GROUP BY vt0.c0;
SELECT * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE (((CAST(vt0.c0 AS INTEGER))>>(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) UNION ALL SELECT * FROM t0, vt0 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER))>>(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))>>(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT vt0.c0, vt1.c0, t0.c0 FROM vt1, vt0, t0;
SELECT DISTINCT vt0.c0, vt1.c0, t0.c0 FROM vt1, vt0, t0 WHERE (((((~ (vt0.c0))))<((((t0.c0)%(t0.c0)))))) UNION SELECT DISTINCT vt0.c0, vt1.c0, t0.c0 FROM vt1, vt0, t0 WHERE ((NOT (((((~ (vt0.c0))))<((((t0.c0)%(t0.c0)))))))) UNION SELECT DISTINCT vt0.c0, vt1.c0, t0.c0 FROM vt1, vt0, t0 WHERE (((((((~ (vt0.c0))))<((((t0.c0)%(t0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, t0.c0 FROM vt1, vt0, t0;
SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt1, vt0 INNER JOIN t0 ON (~ ('2062948855')) GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt1, vt0 INNER JOIN t0 ON (~ ('2062948855')) WHERE (((vt0.c0 COLLATE NOCASE)GLOB(((vt1.c0)|(vt1.c0))))) GROUP BY vt0.c0, vt1.c0, t0.c0 UNION SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt1, vt0 INNER JOIN t0 ON (~ ('2062948855')) WHERE ((NOT (((vt0.c0 COLLATE NOCASE)GLOB(((vt1.c0)|(vt1.c0))))))) GROUP BY vt0.c0, vt1.c0, t0.c0 UNION SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt1, vt0 INNER JOIN t0 ON (~ ('2062948855')) WHERE (((((vt0.c0 COLLATE NOCASE)GLOB(((vt1.c0)|(vt1.c0))))) ISNULL)) GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt1, vt0 INNER JOIN t0 ON (~ ('2062948855')) GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(((AVG(vt1.c0))/(SUM(SUM(AVG(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(((AVG(vt1.c0))/(SUM(SUM(AVG(vt1.c0)))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(((AVG(vt1.c0))/(SUM(SUM(AVG(vt1.c0))))))) ISNULL);
SELECT vt0.c0 FROM vt0, t0, vt1;
SELECT ALL vt0.c0 FROM vt0, t0, vt1 WHERE (CASE WHEN ((t0.c0)%(vt1.c0)) THEN t0.c0 COLLATE RTRIM END) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0, vt1 WHERE ((NOT (CASE WHEN ((t0.c0)%(vt1.c0)) THEN t0.c0 COLLATE RTRIM END))) UNION ALL SELECT vt0.c0 FROM vt0, t0, vt1 WHERE (((CASE WHEN ((t0.c0)%(vt1.c0)) THEN t0.c0 COLLATE RTRIM END) ISNULL));
SELECT vt0.c0 FROM vt0, t0, vt1;
SELECT DISTINCT * FROM vt0, vt1, t0;
SELECT DISTINCT * FROM vt0, vt1, t0 WHERE (((+ (0.2730947018858393)) IN ())) UNION SELECT DISTINCT * FROM vt0, vt1, t0 WHERE ((NOT (((+ (0.2730947018858393)) IN ())))) UNION SELECT DISTINCT * FROM vt0, vt1, t0 WHERE (((((+ (0.2730947018858393)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, NULL, 0.4539584770953905)) AND ((0xffffffffd3cbecfc, t0.c0, x'', t0.c0, t0.c0))))GLOB(CAST(t0.c0 AS TEXT)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, NULL, 0.4539584770953905)) AND ((0Xffffffffd3cbecfc, t0.c0, x'', t0.c0, t0.c0))))GLOB(CAST(t0.c0 AS TEXT)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, NULL, 0.4539584770953905)) AND ((0Xffffffffd3cbecfc, t0.c0, x'', t0.c0, t0.c0))))GLOB(CAST(t0.c0 AS TEXT)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING STRFTIME(-2.062744154E9, t0.c0, AVG(t0.c0)) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 NOT INDEXED GROUP BY t0.c0, vt1.c0 HAVING (NOT (STRFTIME(-2.062744154E9, t0.c0, AVG(t0.c0)))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((STRFTIME(-2.062744154E9, t0.c0, AVG(t0.c0))) ISNULL);
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING STRFTIME(-2.062744154E9, t0.c0, AVG(t0.c0)) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 NOT INDEXED GROUP BY t0.c0, vt1.c0 HAVING (NOT (STRFTIME(-2.062744154E9, t0.c0, AVG(t0.c0)))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((STRFTIME(-2.062744154E9, t0.c0, AVG(t0.c0))) ISNULL);
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL vt0.c0 FROM vt1, vt0, t0 INDEXED BY i53;
SELECT DISTINCT t0.c0 FROM vt1, vt0, t0;
SELECT DISTINCT t0.c0 FROM vt1, vt0, t0 WHERE ((CASE WHEN '-1641285007' THEN vt1.c0 END IN ((t0.c0 IN ())))) UNION SELECT DISTINCT t0.c0 FROM vt1, vt0, t0 WHERE ((NOT ((CASE WHEN '-1641285007' THEN vt1.c0 END IN ((t0.c0 IN ())))))) UNION SELECT DISTINCT t0.c0 FROM vt1, vt0, t0 WHERE ((((CASE WHEN '-1641285007' THEN vt1.c0 END IN ((t0.c0 IN ())))) ISNULL));
SELECT DISTINCT t0.c0 FROM vt1, vt0, t0;
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t0 WHERE (((((t0.c0) NOT NULL)) IS FALSE)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, t0 WHERE ((NOT (((((t0.c0) NOT NULL)) IS FALSE)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, t0 WHERE (((((((t0.c0) NOT NULL)) IS FALSE)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(GROUP_CONCAT(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(GROUP_CONCAT(vt1.c0))) ISNULL);
SELECT vt1.c0, vt0.c0, t0.c0 FROM vt0, t0, vt1;
SELECT vt1.c0, vt0.c0, t0.c0 FROM vt0, t0, vt1 WHERE (((((vt1.c0)%(vt1.c0))) NOTNULL)) UNION ALL SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM vt0, t0, vt1 WHERE ((NOT (((((vt1.c0)%(vt1.c0))) NOTNULL)))) UNION ALL SELECT vt1.c0, vt0.c0, t0.c0 FROM vt0, t0, vt1 WHERE (((((((vt1.c0)%(vt1.c0))) NOTNULL)) ISNULL));
SELECT vt1.c0, vt0.c0, t0.c0 FROM vt0, t0, vt1;
SELECT DISTINCT t0.c0, vt0.c0 FROM vt1 FULL OUTER JOIN t0 ON ((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt1.c0 END) IS FALSE) CROSS JOIN vt0 ON CAST(t0.c0 COLLATE BINARY AS NUMERIC);
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE ((((- (vt1.c0))) NOT BETWEEN (((((-1334671534)AND(vt1.c0)))AND('1118689754'))) AND (PRINTF(t0.c0)))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT ((((- (vt1.c0))) NOT BETWEEN (((((-1334671534)AND(vt1.c0)))AND('1118689754'))) AND (PRINTF(t0.c0)))))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE ((((((- (vt1.c0))) NOT BETWEEN (((((-1334671534)AND(vt1.c0)))AND('1118689754'))) AND (PRINTF(t0.c0)))) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 NATURAL JOIN t0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 NATURAL JOIN t0 GROUP BY vt1.c0, vt0.c0 HAVING CAST(MIN(MIN(t0.c0)) AS REAL) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 NATURAL JOIN t0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (CAST(MIN(MIN(t0.c0)) AS REAL))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 NATURAL JOIN t0 GROUP BY vt1.c0, vt0.c0 HAVING ((CAST(MIN(MIN(t0.c0)) AS REAL)) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE ('yh6Wg[D말4]') UNION ALL SELECT * FROM vt1 WHERE ((NOT ('yh6Wg[D말4]'))) UNION ALL SELECT ALL * FROM vt1 WHERE ((('yh6Wg[D말4]') ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (CASE (~ (vt0.c0))  WHEN vt0.c0 THEN CAST(vt1.c0 AS TEXT) ELSE ((NULL)-(vt0.c0)) END) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (CASE (~ (vt0.c0))  WHEN vt0.c0 THEN CAST(vt1.c0 AS TEXT) ELSE ((NULL)-(vt0.c0)) END))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((CASE (~ (vt0.c0))  WHEN vt0.c0 THEN CAST(vt1.c0 AS TEXT) ELSE ((NULL)-(vt0.c0)) END) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((+ (((t0.c0) NOT BETWEEN (t0.c0) AND (x'e2e6'))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((+ (((t0.c0) NOT BETWEEN (t0.c0) AND (x'e2e6'))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((+ (((t0.c0) NOT BETWEEN (t0.c0) AND (x'e2e6'))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING MAX((~ (COUNT(COUNT(*))))) UNION ALL SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING (NOT (MAX((~ (COUNT(COUNT(*))))))) UNION ALL SELECT vt0.c0, vt1.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING ((MAX((~ (COUNT(COUNT(*)))))) ISNULL);
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON ((((((t0.c0)>>(vt1.c0)))AND((- (vt1.c0)))))AND(vt1.c0)) FULL OUTER JOIN vt0 ON vt0.c0;
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON ((((((t0.c0)>>(vt1.c0)))AND((- (vt1.c0)))))AND(vt1.c0)) FULL OUTER JOIN vt0 ON vt0.c0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM) UNION ALL SELECT ALL * FROM t0 LEFT OUTER JOIN vt1 ON ((((((t0.c0)>>(vt1.c0)))AND((- (vt1.c0)))))AND(vt1.c0)) FULL OUTER JOIN vt0 ON vt0.c0 WHERE ((NOT (CAST(vt0.c0 AS TEXT) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM t0 LEFT OUTER JOIN vt1 ON ((((((t0.c0)>>(vt1.c0)))AND((- (vt1.c0)))))AND(vt1.c0)) FULL OUTER JOIN vt0 ON vt0.c0 WHERE (((CAST(vt0.c0 AS TEXT) COLLATE RTRIM) ISNULL));
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON ((((((t0.c0)>>(vt1.c0)))AND((- (vt1.c0)))))AND(vt1.c0)) FULL OUTER JOIN vt0 ON vt0.c0;
SELECT DISTINCT * FROM vt0, vt1, t0;
SELECT DISTINCT * FROM vt0, vt1, t0 WHERE (((((vt1.c0) NOT NULL)) NOT BETWEEN (t0.c0) AND ((((vt1.c0))>((t0.c0)))))) UNION SELECT DISTINCT * FROM vt0, vt1, t0 WHERE ((NOT (((((vt1.c0) NOT NULL)) NOT BETWEEN (t0.c0) AND ((((vt1.c0))>((t0.c0)))))))) UNION SELECT DISTINCT * FROM vt0, vt1, t0 NOT INDEXED WHERE (((((((vt1.c0) NOT NULL)) NOT BETWEEN (t0.c0) AND ((((vt1.c0))>((t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, t0;
SELECT ALL vt1.c0 FROM vt1, t0, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, t0, vt0 WHERE (CASE 0.16880920176155145 COLLATE BINARY  WHEN ((t0.c0) NOT NULL) THEN ((t0.c0) ISNULL) ELSE IFNULL(vt1.c0, vt1.c0) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, t0, vt0 WHERE ((NOT (CASE 0.16880920176155145 COLLATE BINARY  WHEN ((t0.c0) NOT NULL) THEN ((t0.c0) ISNULL) ELSE IFNULL(vt1.c0, vt1.c0) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, t0, vt0 WHERE (((CASE 0.16880920176155145 COLLATE BINARY  WHEN ((t0.c0) NOT NULL) THEN ((t0.c0) ISNULL) ELSE IFNULL(vt1.c0, vt1.c0) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, t0, vt0 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0 FROM vt1, t0, vt0;
SELECT ALL t0.c0 FROM vt1, t0, vt0 WHERE (CAST(((((t0.c0)OR(t0.c0)))AND(vt1.c0)) AS TEXT)) UNION ALL SELECT t0.c0 FROM vt1, t0, vt0 WHERE ((NOT (CAST(((((t0.c0)OR(t0.c0)))AND(vt1.c0)) AS TEXT)))) UNION ALL SELECT t0.c0 FROM vt1, t0, vt0 WHERE (((CAST(((((t0.c0)OR(t0.c0)))AND(vt1.c0)) AS TEXT)) ISNULL));
SELECT t0.c0 FROM vt1, t0, vt0;
SELECT DISTINCT * FROM t0, vt0, vt1;
SELECT DISTINCT * FROM t0, vt0, vt1 WHERE (((t0.c0 COLLATE NOCASE) NOTNULL)) UNION SELECT DISTINCT * FROM t0, vt0, vt1 WHERE ((NOT (((t0.c0 COLLATE NOCASE) NOTNULL)))) UNION SELECT DISTINCT * FROM t0, vt0, vt1 WHERE (((((t0.c0 COLLATE NOCASE) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM t0, vt0, vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (x'') GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (x''))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((x'') ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST(COUNT(MIN(TOTAL(MAX(vt1.c0)))) AS BLOB) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(COUNT(MIN(TOTAL(MAX(vt1.c0)))) AS BLOB))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST(COUNT(MIN(TOTAL(MAX(vt1.c0)))) AS BLOB)) ISNULL);
SELECT ALL SUM((- (LOWER(t0.c0)))) FROM t0, vt0;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (0.14849152242229602) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (0.14849152242229602))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((0.14849152242229602) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c0, t0.c0, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN t0 ON ((((vt0.c0)AND(((t0.c0)GLOB(t0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))));
SELECT DISTINCT vt0.c0, t0.c0, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN t0 ON ((((vt0.c0)AND(((t0.c0)GLOB(t0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) WHERE ((((+ (vt0.c0))) ISNULL)) UNION SELECT DISTINCT vt0.c0, t0.c0, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN t0 ON ((((vt0.c0)AND(((t0.c0)GLOB(t0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) WHERE ((NOT ((((+ (vt0.c0))) ISNULL)))) UNION SELECT DISTINCT vt0.c0, t0.c0, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN t0 ON ((((vt0.c0)AND(((t0.c0)GLOB(t0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) WHERE ((((((+ (vt0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN t0 ON ((((vt0.c0)AND(((t0.c0)GLOB(t0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))));
SELECT ALL vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON CASE vt0.c0 COLLATE NOCASE  WHEN vt0.c0 COLLATE RTRIM THEN CAST(t0.c0 AS INTEGER) WHEN ((vt1.c0)<>(vt1.c0)) THEN x'edff' WHEN ((((vt1.c0)OR(vt0.c0)))OR(t0.c0)) THEN (- (vt1.c0)) ELSE ((t0.c0)+(vt0.c0)) END LEFT OUTER JOIN t0 ON (SQLITE_VERSION() IN ()) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON CASE vt0.c0 COLLATE NOCASE  WHEN vt0.c0 COLLATE RTRIM THEN CAST(t0.c0 AS INTEGER) WHEN ((vt1.c0)<>(vt1.c0)) THEN x'edff' WHEN ((((vt1.c0)OR(vt0.c0)))OR(t0.c0)) THEN (- (vt1.c0)) ELSE ((t0.c0)+(vt0.c0)) END LEFT OUTER JOIN t0 ON (SQLITE_VERSION() IN ()) WHERE ((((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)*(t0.c0)), (((vt1.c0, vt0.c0, vt1.c0, t0.c0, t0.c0))<((vt1.c0, vt1.c0, t0.c0, vt0.c0, vt1.c0))), CAST(vt1.c0 AS INTEGER))) AND ((((vt0.c0) IS FALSE), (((vt1.c0)) BETWEEN ((t0.c0)) AND ((x''))), (vt1.c0 IN (t0.c0)))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON CASE vt0.c0 COLLATE NOCASE  WHEN vt0.c0 COLLATE RTRIM THEN CAST(t0.c0 AS INTEGER) WHEN ((vt1.c0)<>(vt1.c0)) THEN x'edff' WHEN ((((vt1.c0)OR(vt0.c0)))OR(t0.c0)) THEN (- (vt1.c0)) ELSE ((t0.c0)+(vt0.c0)) END LEFT OUTER JOIN t0 ON (SQLITE_VERSION() IN ()) WHERE ((NOT ((((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)*(t0.c0)), (((vt1.c0, vt0.c0, vt1.c0, t0.c0, t0.c0))<((vt1.c0, vt1.c0, t0.c0, vt0.c0, vt1.c0))), CAST(vt1.c0 AS INTEGER))) AND ((((vt0.c0) IS FALSE), (((vt1.c0)) BETWEEN ((t0.c0)) AND ((x''))), (vt1.c0 IN (t0.c0)))))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON CASE vt0.c0 COLLATE NOCASE  WHEN vt0.c0 COLLATE RTRIM THEN CAST(t0.c0 AS INTEGER) WHEN ((vt1.c0)<>(vt1.c0)) THEN x'edff' WHEN ((((vt1.c0)OR(vt0.c0)))OR(t0.c0)) THEN (- (vt1.c0)) ELSE ((t0.c0)+(vt0.c0)) END LEFT OUTER JOIN t0 ON (SQLITE_VERSION() IN ()) WHERE ((((((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)*(t0.c0)), (((vt1.c0, vt0.c0, vt1.c0, t0.c0, t0.c0))<((vt1.c0, vt1.c0, t0.c0, vt0.c0, vt1.c0))), CAST(vt1.c0 AS INTEGER))) AND ((((vt0.c0) IS FALSE), (((vt1.c0)) BETWEEN ((t0.c0)) AND ((x''))), (vt1.c0 IN (t0.c0)))))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON CASE vt0.c0 COLLATE NOCASE  WHEN vt0.c0 COLLATE RTRIM THEN CAST(t0.c0 AS INTEGER) WHEN ((vt1.c0)<>(vt1.c0)) THEN x'edff' WHEN ((((vt1.c0)OR(vt0.c0)))OR(t0.c0)) THEN (- (vt1.c0)) ELSE ((t0.c0)+(vt0.c0)) END LEFT OUTER JOIN t0 ON (SQLITE_VERSION() IN ()) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt1 CROSS JOIN t0 ON ((((t0.c0)*(vt1.c0)))&((vt1.c0 IN ()))) GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt1 CROSS JOIN t0 ON ((((t0.c0)*(vt1.c0)))&((vt1.c0 IN ()))) GROUP BY vt1.c0, t0.c0 HAVING TOTAL(GROUP_CONCAT(COUNT(vt1.c0))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt1 CROSS JOIN t0 ON ((((t0.c0)*(vt1.c0)))&((vt1.c0 IN ()))) GROUP BY vt1.c0, t0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(COUNT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt1 CROSS JOIN t0 ON ((((t0.c0)*(vt1.c0)))&((vt1.c0 IN ()))) GROUP BY vt1.c0, t0.c0 HAVING ((TOTAL(GROUP_CONCAT(COUNT(vt1.c0)))) ISNULL);
SELECT vt1.c0, t0.c0 FROM vt1 LEFT OUTER JOIN t0 ON (vt1.c0 COLLATE NOCASE IN ());
SELECT vt1.c0, t0.c0 FROM vt1 LEFT OUTER JOIN t0 ON (vt1.c0 COLLATE NOCASE IN ()) WHERE (((((vt1.c0)%(vt1.c0))) NOT NULL)) UNION ALL SELECT vt1.c0, t0.c0 FROM vt1 LEFT OUTER JOIN t0 ON (vt1.c0 COLLATE NOCASE IN ()) WHERE ((NOT (((((vt1.c0)%(vt1.c0))) NOT NULL)))) UNION ALL SELECT vt1.c0, t0.c0 FROM vt1 LEFT OUTER JOIN t0 ON (vt1.c0 COLLATE NOCASE IN ()) WHERE (((((((vt1.c0)%(vt1.c0))) NOT NULL)) ISNULL));
SELECT vt1.c0, t0.c0 FROM vt1 LEFT OUTER JOIN t0 ON (vt1.c0 COLLATE NOCASE IN ());
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((-1.7976931348623157E308)IS NOT(((vt1.c0)IS NOT(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((-1.7976931348623157E308)IS NOT(((vt1.c0)IS NOT(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((-1.7976931348623157E308)IS NOT(((vt1.c0)IS NOT(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 WHERE ((+ (CASE WHEN vt1.c0 THEN vt0.c0 ELSE NULL END))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 WHERE ((NOT ((+ (CASE WHEN vt1.c0 THEN vt0.c0 ELSE NULL END))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 WHERE ((((+ (CASE WHEN vt1.c0 THEN vt0.c0 ELSE NULL END))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 GROUP BY vt1.c0, vt0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING MAX(MIN(t0.c0)) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (MAX(MIN(t0.c0)))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0 HAVING ((MAX(MIN(t0.c0))) ISNULL);
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON CASE WHEN (vt1.c0 IN (t0.c0)) THEN (((t0.c0))==((t0.c0))) ELSE ((vt1.c0)%(t0.c0)) END FULL OUTER JOIN t0 ON ((CAST(vt0.c0 AS BLOB)) NOTNULL);
SELECT DISTINCT * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (((NOT (vt0.c0))) NOT BETWEEN (((vt1.c0)%(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END));
SELECT DISTINCT * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (((NOT (vt0.c0))) NOT BETWEEN (((vt1.c0)%(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) WHERE (CAST(vt0.c0 AS NUMERIC)) UNION SELECT DISTINCT * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (((NOT (vt0.c0))) NOT BETWEEN (((vt1.c0)%(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) WHERE ((NOT (CAST(vt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (((NOT (vt0.c0))) NOT BETWEEN (((vt1.c0)%(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) WHERE (((CAST(vt0.c0 AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (((NOT (vt0.c0))) NOT BETWEEN (((vt1.c0)%(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END));
SELECT ALL t0.c0 FROM vt1, vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, vt0, t0 WHERE ((((t0.c0)>>(vt1.c0)) IN ())) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1, vt0, t0 WHERE ((NOT ((((t0.c0)>>(vt1.c0)) IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt1, vt0, t0 WHERE ((((((t0.c0)>>(vt1.c0)) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, vt0, t0 GROUP BY t0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG((GROUP_CONCAT(vt1.c0) IN (SUM(COUNT(*))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG((GROUP_CONCAT(vt1.c0) IN (SUM(COUNT(*))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG((GROUP_CONCAT(vt1.c0) IN (SUM(COUNT(*)))))) ISNULL);
SELECT * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN ((t0.c0 IN ())) AND (NULL))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT (((((vt0.c0) NOT NULL)) NOT BETWEEN ((t0.c0 IN ())) AND (NULL))))) UNION ALL SELECT * FROM t0, vt0 WHERE (((((((vt0.c0) NOT NULL)) NOT BETWEEN ((t0.c0 IN ())) AND (NULL))) ISNULL));
SELECT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt1, vt0;
SELECT DISTINCT * FROM t0, vt1, vt0 WHERE (CASE WHEN CAST(t0.c0 AS REAL) THEN ((vt1.c0) IS TRUE) END) UNION SELECT DISTINCT * FROM t0, vt1, vt0 WHERE ((NOT (CASE WHEN CAST(t0.c0 AS REAL) THEN ((vt1.c0) IS TRUE) END))) UNION SELECT DISTINCT * FROM t0, vt1, vt0 WHERE (((CASE WHEN CAST(t0.c0 AS REAL) THEN ((vt1.c0) IS TRUE) END) ISNULL));
SELECT DISTINCT * FROM t0, vt1, vt0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((((vt1.c0) NOTNULL))OR((vt0.c0 IN (vt1.c0)))))AND(vt1.c0))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((((vt1.c0) NOTNULL))OR((vt0.c0 IN (vt1.c0)))))AND(vt1.c0))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((((((vt1.c0) NOTNULL))OR((vt0.c0 IN (vt1.c0)))))AND(vt1.c0))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING COUNT(vt0.c0) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (COUNT(vt0.c0))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((COUNT(vt0.c0)) ISNULL);
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING COUNT(vt0.c0) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (COUNT(vt0.c0))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((COUNT(vt0.c0)) ISNULL);
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT * FROM t0, vt1;
SELECT * FROM t0, vt1 WHERE (t0.c0) UNION ALL SELECT * FROM t0, vt1 WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM t0, vt1 WHERE (((t0.c0) ISNULL));
SELECT * FROM t0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (LOWER(DISTINCT vt1.c0)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (LOWER(DISTINCT vt1.c0)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((LOWER(DISTINCT vt1.c0)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL t0.c0, vt1.c0 FROM vt0, t0 FULL OUTER JOIN vt1 ON ((vt0.c0) IS TRUE) COLLATE RTRIM GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt0, t0 FULL OUTER JOIN vt1 ON ((vt0.c0) IS TRUE) COLLATE RTRIM WHERE (((vt1.c0)%(vt1.c0)) COLLATE RTRIM) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM vt0, t0 FULL OUTER JOIN vt1 ON ((vt0.c0) IS TRUE) COLLATE RTRIM WHERE ((NOT (((vt1.c0)%(vt1.c0)) COLLATE RTRIM))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM vt0, t0 FULL OUTER JOIN vt1 ON ((vt0.c0) IS TRUE) COLLATE RTRIM WHERE (((((vt1.c0)%(vt1.c0)) COLLATE RTRIM) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt0, t0 FULL OUTER JOIN vt1 ON ((vt0.c0) IS TRUE) COLLATE RTRIM GROUP BY t0.c0, vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*))>(vt0.c0)))<((~ (vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((COUNT(*))>(vt0.c0)))<((~ (vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((COUNT(*))>(vt0.c0)))<((~ (vt0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*))>(vt0.c0)))<((~ (vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((COUNT(*))>(vt0.c0)))<((~ (vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((COUNT(*))>(vt0.c0)))<((~ (vt0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ('-264533327') UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ('-264533327'))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((('-264533327') ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0, vt0;
SELECT DISTINCT t0.c0 FROM t0, vt0 WHERE (((((t0.c0) NOT NULL))GLOB((~ (vt0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0, vt0 WHERE ((NOT (((((t0.c0) NOT NULL))GLOB((~ (vt0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0, vt0 WHERE (((((((t0.c0) NOT NULL))GLOB((~ (vt0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (('1812255178' IN (((0.2730947018858393)GLOB('1118689754'))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (('1812255178' IN (((0.2730947018858393)GLOB('1118689754'))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((('1812255178' IN (((0.2730947018858393)GLOB('1118689754'))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0 HAVING CASE WHEN TOTAL(x'') THEN MIN(t0.c0, vt1.c0) WHEN ((COUNT(MIN(t0.c0))) NOTNULL) THEN COUNT(TOTAL(AVG(t0.c0))) WHEN TOTAL(SUM(NULL)) THEN (NOT (t0.c0)) END UNION ALL SELECT ALL vt1.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0 HAVING (NOT (CASE WHEN TOTAL(x'') THEN MIN(t0.c0, vt1.c0) WHEN ((COUNT(MIN(t0.c0))) NOTNULL) THEN COUNT(TOTAL(AVG(t0.c0))) WHEN TOTAL(SUM(NULL)) THEN (NOT (t0.c0)) END)) UNION ALL SELECT vt1.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0 HAVING ((CASE WHEN TOTAL(x'') THEN MIN(t0.c0, vt1.c0) WHEN ((COUNT(MIN(t0.c0))) NOTNULL) THEN COUNT(TOTAL(AVG(t0.c0))) WHEN TOTAL(SUM(NULL)) THEN (NOT (t0.c0)) END) ISNULL);
SELECT ALL vt1.c0, t0.c0, vt0.c0 FROM t0, vt1 CROSS JOIN vt0 ON (vt0.c0 COLLATE NOCASE IN ());
SELECT ALL vt1.c0, t0.c0, vt0.c0 FROM t0, vt1 CROSS JOIN vt0 ON (vt0.c0 COLLATE NOCASE IN ()) WHERE (CAST(CAST(t0.c0 AS TEXT) AS TEXT)) UNION ALL SELECT vt1.c0, t0.c0, vt0.c0 FROM t0, vt1 CROSS JOIN vt0 ON (vt0.c0 COLLATE NOCASE IN ()) WHERE ((NOT (CAST(CAST(t0.c0 AS TEXT) AS TEXT)))) UNION ALL SELECT ALL vt1.c0, t0.c0, vt0.c0 FROM t0, vt1 CROSS JOIN vt0 ON (vt0.c0 COLLATE NOCASE IN ()) WHERE (((CAST(CAST(t0.c0 AS TEXT) AS TEXT)) ISNULL));
SELECT ALL vt1.c0, t0.c0, vt0.c0 FROM t0, vt1 CROSS JOIN vt0 ON (vt0.c0 COLLATE NOCASE IN ());
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (x'') AND (vt0.c0)) THEN ((((vt1.c0)OR(NULL)))OR(vt1.c0)) ELSE ((vt0.c0)*(vt1.c0)) END) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (CASE WHEN ((vt1.c0) NOT BETWEEN (x'') AND (vt0.c0)) THEN ((((vt1.c0)OR(NULL)))OR(vt1.c0)) ELSE ((vt0.c0)*(vt1.c0)) END))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((CASE WHEN ((vt1.c0) NOT BETWEEN (x'') AND (vt0.c0)) THEN ((((vt1.c0)OR(NULL)))OR(vt1.c0)) ELSE ((vt0.c0)*(vt1.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((((((((((((vt0.c0)OR('-2055355793')))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ())) NOT BETWEEN (((((((((((((vt0.c0)OR('-2055355793')))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ())) NOT BETWEEN (((((((((((((vt0.c0)OR('-2055355793')))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING MIN(SUM(t0.c0) COLLATE NOCASE) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (MIN(SUM(t0.c0) COLLATE NOCASE))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0 HAVING ((MIN(SUM(t0.c0) COLLATE NOCASE)) ISNULL);
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON CAST((vt1.c0 IN (t0.c0)) AS INTEGER);
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON CAST((vt1.c0 IN (t0.c0)) AS INTEGER) WHERE (MAX(((((t0.c0)OR(vt1.c0)))AND(vt1.c0)), (((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON CAST((vt1.c0 IN (t0.c0)) AS INTEGER) WHERE ((NOT (MAX(((((t0.c0)OR(vt1.c0)))AND(vt1.c0)), (((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))))) UNION ALL SELECT * FROM t0 FULL OUTER JOIN vt1 ON CAST((vt1.c0 IN (t0.c0)) AS INTEGER) WHERE (((MAX(((((t0.c0)OR(vt1.c0)))AND(vt1.c0)), (((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))) ISNULL));
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON CAST((vt1.c0 IN (t0.c0)) AS INTEGER);
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CASE ((t0.c0) NOTNULL)  WHEN ((t0.c0) NOTNULL) THEN t0.c0 COLLATE BINARY ELSE (t0.c0 IN (t0.c0, t0.c0)) END) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CASE ((t0.c0) NOTNULL)  WHEN ((t0.c0) NOTNULL) THEN t0.c0 COLLATE BINARY ELSE (t0.c0 IN (t0.c0, t0.c0)) END))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CASE ((t0.c0) NOTNULL)  WHEN ((t0.c0) NOTNULL) THEN t0.c0 COLLATE BINARY ELSE (t0.c0 IN (t0.c0, t0.c0)) END) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (UNLIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (UNLIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((UNLIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((COUNT(*)) NOT NULL) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (((COUNT(*)) NOT NULL))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((((COUNT(*)) NOT NULL)) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((COUNT(*)) NOT NULL) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (((COUNT(*)) NOT NULL))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((((COUNT(*)) NOT NULL)) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL * FROM vt0, t0, vt1;
SELECT * FROM vt0, t0, vt1 WHERE ((((- (t0.c0))) BETWEEN (vt0.c0) AND (0x612e8321))) UNION ALL SELECT * FROM vt0, t0, vt1 WHERE ((NOT ((((- (t0.c0))) BETWEEN (vt0.c0) AND (0X612e8321))))) UNION ALL SELECT ALL * FROM vt0, t0, vt1 WHERE ((((((- (t0.c0))) BETWEEN (vt0.c0) AND (0X612e8321))) ISNULL));
SELECT ALL * FROM vt0, t0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (LTRIM(((vt0.c0)OR(vt0.c0)), ((vt0.c0) NOT NULL))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (LTRIM(((vt0.c0)OR(vt0.c0)), ((vt0.c0) NOT NULL))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((LTRIM(((vt0.c0)OR(vt0.c0)), ((vt0.c0) NOT NULL))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM vt0, vt1, t0 GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT vt1.c0, vt0.c0, t0.c0 FROM vt0, vt1, t0 WHERE ((((t0.c0)||(vt1.c0)) IN ())) GROUP BY vt1.c0, vt0.c0, t0.c0 UNION SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM vt0, vt1, t0 WHERE ((NOT ((((t0.c0)||(vt1.c0)) IN ())))) GROUP BY vt1.c0, vt0.c0, t0.c0 UNION SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM vt0, vt1, t0 WHERE ((((((t0.c0)||(vt1.c0)) IN ())) ISNULL)) GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM vt0, vt1, t0 GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(0X319913be) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(0x319913be))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(0x319913be)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(0X319913be) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(0x319913be))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(0x319913be)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM vt1, t0, vt0;
SELECT ALL * FROM vt1, t0, vt0 WHERE (x'') UNION ALL SELECT ALL * FROM vt1, t0, vt0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM vt1, t0, vt0 WHERE (((x'') ISNULL));
SELECT * FROM vt1, t0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE (COALESCE((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND (('', vt1.c0, vt0.c0))), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE ((NOT (COALESCE((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND (('', vt1.c0, vt0.c0))), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE (((COALESCE((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND (('', vt1.c0, vt0.c0))), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON (NOT (TYPEOF(vt0.c0))) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON (NOT (TYPEOF(vt0.c0))) WHERE (vt0.c0) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON (NOT (TYPEOF(vt0.c0))) WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON (NOT (TYPEOF(vt0.c0))) WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON (NOT (TYPEOF(vt0.c0))) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING IFNULL(COUNT(*), COUNT(*)) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING (NOT (IFNULL(COUNT(*), COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING ((IFNULL(COUNT(*), COUNT(*))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING IFNULL(COUNT(*), COUNT(*)) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING (NOT (IFNULL(COUNT(*), COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING ((IFNULL(COUNT(*), COUNT(*))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT MIN('a1') FROM vt1, t0;
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0, t0.c0 FROM vt1, t0 FULL OUTER JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN ());
SELECT DISTINCT vt0.c0, vt1.c0, t0.c0 FROM vt1, t0 FULL OUTER JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN ()) WHERE (CAST(LOWER(t0.c0) AS INTEGER)) UNION SELECT DISTINCT vt0.c0, vt1.c0, t0.c0 FROM vt1, t0 FULL OUTER JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN ()) WHERE ((NOT (CAST(LOWER(t0.c0) AS INTEGER)))) UNION SELECT DISTINCT vt0.c0, vt1.c0, t0.c0 FROM vt1, t0 FULL OUTER JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN ()) WHERE (((CAST(LOWER(t0.c0) AS INTEGER)) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, t0.c0 FROM vt1, t0 FULL OUTER JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN ());
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST((~ (vt1.c0)) AS NUMERIC)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST((~ (vt1.c0)) AS NUMERIC)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST((~ (vt1.c0)) AS NUMERIC)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING UNICODE(GROUP_CONCAT(MIN(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING (NOT (UNICODE(GROUP_CONCAT(MIN(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING ((UNICODE(GROUP_CONCAT(MIN(t0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM t0, vt0, vt1;
SELECT ALL vt0.c0 FROM t0, vt0, vt1 WHERE (vt0.c0) UNION ALL SELECT vt0.c0 FROM t0, vt0, vt1 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0, vt1 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c0 FROM t0, vt0, vt1;
SELECT DISTINCT t0.c0 FROM t0, vt1, vt0;
SELECT DISTINCT t0.c0 FROM t0, vt1, vt0 WHERE (((((vt0.c0)<(vt1.c0))) IS TRUE)) UNION SELECT DISTINCT t0.c0 FROM t0, vt1, vt0 WHERE ((NOT (((((vt0.c0)<(vt1.c0))) IS TRUE)))) UNION SELECT DISTINCT t0.c0 FROM t0, vt1, vt0 WHERE (((((((vt0.c0)<(vt1.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, vt1, vt0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 WHERE ((+ (ABS(vt1.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT ((+ (ABS(vt1.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((((+ (ABS(vt1.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN 0.9223432127272376 COLLATE NOCASE THEN ((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)) WHEN CASE '-1127320859'  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (- (vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN CHAR(0.07455311799831876) ELSE ((vt1.c0)&(vt1.c0)) END GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN 0.9223432127272376 COLLATE NOCASE THEN ((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)) WHEN CASE '-1127320859'  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (- (vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN CHAR(0.07455311799831876) ELSE ((vt1.c0)&(vt1.c0)) END GROUP BY vt1.c0, vt0.c0 HAVING MIN(CASE WHEN vt1.c0 THEN vt1.c0 WHEN SUM(vt0.c0) THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN MIN(GROUP_CONCAT(MIN(MIN(COUNT(TOTAL(vt0.c0)))))) THEN vt0.c0 WHEN vt1.c0 THEN x'' END) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN 0.9223432127272376 COLLATE NOCASE THEN ((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)) WHEN CASE '-1127320859'  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (- (vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN CHAR(0.07455311799831876) ELSE ((vt1.c0)&(vt1.c0)) END GROUP BY vt1.c0, vt0.c0 HAVING (NOT (MIN(CASE WHEN vt1.c0 THEN vt1.c0 WHEN SUM(vt0.c0) THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN MIN(GROUP_CONCAT(MIN(MIN(COUNT(TOTAL(vt0.c0)))))) THEN vt0.c0 WHEN vt1.c0 THEN x'' END))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN 0.9223432127272376 COLLATE NOCASE THEN ((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)) WHEN CASE '-1127320859'  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (- (vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN CHAR(0.07455311799831876) ELSE ((vt1.c0)&(vt1.c0)) END GROUP BY vt1.c0, vt0.c0 HAVING ((MIN(CASE WHEN vt1.c0 THEN vt1.c0 WHEN SUM(vt0.c0) THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN MIN(GROUP_CONCAT(MIN(MIN(COUNT(TOTAL(vt0.c0)))))) THEN vt0.c0 WHEN vt1.c0 THEN x'' END)) ISNULL);
SELECT ALL vt0.c0 FROM vt1 RIGHT OUTER JOIN t0 ON HEX(((((')')AND(t0.c0)))AND('a1'))) INNER JOIN vt0 ON (NULL IN ());
SELECT ALL vt0.c0 FROM vt1 RIGHT OUTER JOIN t0 ON HEX(((((')')AND(t0.c0)))AND('a1'))) INNER JOIN vt0 ON (NULL IN ()) WHERE (((t0.c0)%(vt0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt1 RIGHT OUTER JOIN t0 ON HEX(((((')')AND(t0.c0)))AND('a1'))) INNER JOIN vt0 ON (NULL IN ()) WHERE ((NOT (((t0.c0)%(vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0 FROM vt1 RIGHT OUTER JOIN t0 ON HEX(((((')')AND(t0.c0)))AND('a1'))) INNER JOIN vt0 ON (NULL IN ()) WHERE (((((t0.c0)%(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL vt0.c0 FROM vt1 RIGHT OUTER JOIN t0 ON HEX(((((')')AND(t0.c0)))AND('a1'))) INNER JOIN vt0 ON (NULL IN ());
SELECT DISTINCT vt1.c0 FROM t0, vt1;
SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c0 FROM t0, vt1;
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE (t0.c0) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT (t0.c0))) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE (((t0.c0) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT t0.c0, vt1.c0, vt0.c0 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((((((((x'')AND(((vt1.c0)IS NOT(vt0.c0)))))AND(((vt1.c0)-(vt1.c0)))))AND(x'84f5')))OR(((t0.c0)*(t0.c0)))) GROUP BY t0.c0, vt1.c0, vt0.c0;
SELECT t0.c0, vt1.c0, vt0.c0 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((((((((x'')AND(((vt1.c0)IS NOT(vt0.c0)))))AND(((vt1.c0)-(vt1.c0)))))AND(x'84f5')))OR(((t0.c0)*(t0.c0)))) GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING COUNT(LENGTH(AVG('-1755958752'))) UNION ALL SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((((((((x'')AND(((vt1.c0)IS NOT(vt0.c0)))))AND(((vt1.c0)-(vt1.c0)))))AND(x'84f5')))OR(((t0.c0)*(t0.c0)))) GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING (NOT (COUNT(LENGTH(AVG('-1755958752'))))) UNION ALL SELECT t0.c0, vt1.c0, vt0.c0 FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((((((((x'')AND(((vt1.c0)IS NOT(vt0.c0)))))AND(((vt1.c0)-(vt1.c0)))))AND(x'84f5')))OR(((t0.c0)*(t0.c0)))) GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING ((COUNT(LENGTH(AVG('-1755958752')))) ISNULL);
SELECT ALL t0.c0 FROM vt0, t0, vt1;
SELECT ALL t0.c0 FROM vt0, t0, vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))&((+ (vt0.c0))))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0, vt1 WHERE ((NOT ((((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))&((+ (vt0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0, vt1 WHERE ((((((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))&((+ (vt0.c0))))) ISNULL));
SELECT ALL t0.c0 FROM vt0, t0, vt1;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((((vt0.c0)OR(vt0.c0)))AND(t0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((((vt0.c0)OR(vt0.c0)))AND(t0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT vt0.c0, t0.c0, vt1.c0 FROM t0 FULL OUTER JOIN vt1 ON ((TRIM('1574992230')) ISNULL) INNER JOIN vt0 ON CASE (+ (t0.c0))  WHEN ((t0.c0)=(vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) THEN ((((((((t0.c0)OR(t0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)) WHEN json(vt1.c0) THEN ((t0.c0)GLOB(t0.c0)) ELSE LIKELY(DISTINCT vt0.c0) END GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM t0 FULL OUTER JOIN vt1 ON ((TRIM('1574992230')) ISNULL) INNER JOIN vt0 ON CASE (+ (t0.c0))  WHEN ((t0.c0)=(vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) THEN ((((((((t0.c0)OR(t0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)) WHEN json(vt1.c0) THEN ((t0.c0)GLOB(t0.c0)) ELSE LIKELY(DISTINCT vt0.c0) END WHERE (vt0.c0) GROUP BY vt0.c0, t0.c0, vt1.c0 UNION SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM t0 NOT INDEXED FULL OUTER JOIN vt1 ON ((TRIM('1574992230')) ISNULL) INNER JOIN vt0 ON CASE (+ (t0.c0))  WHEN ((t0.c0)==(vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) THEN ((((((((t0.c0)OR(t0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)) WHEN json(vt1.c0) THEN ((t0.c0)GLOB(t0.c0)) ELSE LIKELY(DISTINCT vt0.c0) END WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0, t0.c0, vt1.c0 UNION SELECT vt0.c0, t0.c0, vt1.c0 FROM t0 FULL OUTER JOIN vt1 ON ((TRIM('1574992230')) ISNULL) INNER JOIN vt0 ON CASE (+ (t0.c0))  WHEN ((t0.c0)==(vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) THEN ((((((((t0.c0)OR(t0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)) WHEN json(vt1.c0) THEN ((t0.c0)GLOB(t0.c0)) ELSE LIKELY(DISTINCT vt0.c0) END WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT vt0.c0, t0.c0, vt1.c0 FROM t0 FULL OUTER JOIN vt1 ON ((TRIM('1574992230')) ISNULL) INNER JOIN vt0 ON CASE (+ (t0.c0))  WHEN ((t0.c0)=(vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) THEN ((((((((t0.c0)OR(t0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)) WHEN json(vt1.c0) THEN ((t0.c0)GLOB(t0.c0)) ELSE LIKELY(DISTINCT vt0.c0) END GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT t0.c0, vt0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt0.c0, vt1.c0;
SELECT ALL t0.c0, vt0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt0.c0, vt1.c0 HAVING CAST(COUNT(SUM(MIN(vt1.c0))) AS TEXT) UNION ALL SELECT t0.c0, vt0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt0.c0, vt1.c0 HAVING (NOT (CAST(COUNT(SUM(MIN(vt1.c0))) AS TEXT))) UNION ALL SELECT t0.c0, vt0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY t0.c0, vt0.c0, vt1.c0 HAVING ((CAST(COUNT(SUM(MIN(vt1.c0))) AS TEXT)) ISNULL);
SELECT ALL * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE ((((vt0.c0 IN ()))GLOB((t0.c0 IN (t0.c0))))) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT ((((vt0.c0 IN ()))GLOB((t0.c0 IN (t0.c0))))))) UNION ALL SELECT * FROM vt0, t0 WHERE ((((((vt0.c0 IN ()))GLOB((t0.c0 IN (t0.c0))))) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt1, t0 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c0 FROM vt1, t0 NATURAL JOIN vt0 WHERE (((t0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0)<<(t0.c0))) AND ((+ (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt1, t0 NOT INDEXED NATURAL JOIN vt0 WHERE ((NOT (((t0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0)<<(t0.c0))) AND ((+ (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt1, t0 NATURAL JOIN vt0 WHERE (((((t0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0)<<(t0.c0))) AND ((+ (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, t0 NATURAL JOIN vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, t0 LEFT OUTER JOIN vt0 ON CAST(t0.c0 AS REAL) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, t0 LEFT OUTER JOIN vt0 ON CAST(t0.c0 AS REAL) WHERE ((((- (t0.c0))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (TRIM(DISTINCT t0.c0)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, t0 LEFT OUTER JOIN vt0 ON CAST(t0.c0 AS REAL) WHERE ((NOT ((((- (t0.c0))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (TRIM(DISTINCT t0.c0)))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, t0 LEFT OUTER JOIN vt0 ON CAST(t0.c0 AS REAL) WHERE ((((((- (t0.c0))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (TRIM(DISTINCT t0.c0)))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, t0 LEFT OUTER JOIN vt0 ON CAST(t0.c0 AS REAL) GROUP BY vt1.c0, vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE (NULL) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT (NULL))) UNION ALL SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE (((NULL) ISNULL));
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0 IN (vt1.c0)) IN ())) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((vt1.c0 IN (vt1.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0 IN (vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE (CASE WHEN '-741610244' THEN ((t0.c0)<(vt1.c0)) ELSE ((t0.c0)<=(t0.c0)) END) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT (CASE WHEN '-741610244' THEN ((t0.c0)<(vt1.c0)) ELSE ((t0.c0)<=(t0.c0)) END))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 WHERE (((CASE WHEN '-741610244' THEN ((t0.c0)<(vt1.c0)) ELSE ((t0.c0)<=(t0.c0)) END) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, t0.c0 HAVING AVG((((vt0.c0, MAX(SUM(vt1.c0)), SUM(GROUP_CONCAT(vt1.c0)))) NOT BETWEEN ((vt0.c0, AVG(AVG(MIN(AVG(vt0.c0)))), SUM(t0.c0))) AND ((t0.c0, vt0.c0, t0.c0)))) UNION ALL SELECT vt1.c0, t0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, t0.c0 HAVING (NOT (AVG((((vt0.c0, MAX(SUM(vt1.c0)), SUM(GROUP_CONCAT(vt1.c0)))) NOT BETWEEN ((vt0.c0, AVG(AVG(MIN(AVG(vt0.c0)))), SUM(t0.c0))) AND ((t0.c0, vt0.c0, t0.c0)))))) UNION ALL SELECT vt1.c0, t0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, t0.c0 HAVING ((AVG((((vt0.c0, MAX(SUM(vt1.c0)), SUM(GROUP_CONCAT(vt1.c0)))) NOT BETWEEN ((vt0.c0, AVG(AVG(MIN(AVG(vt0.c0)))), SUM(t0.c0))) AND ((t0.c0, vt0.c0, t0.c0))))) ISNULL);
SELECT vt1.c0 FROM t0, vt1;
SELECT ALL vt1.c0 FROM t0, vt1 WHERE (CAST((- (vt1.c0)) AS BLOB)) UNION ALL SELECT vt1.c0 FROM t0, vt1 WHERE ((NOT (CAST((- (vt1.c0)) AS BLOB)))) UNION ALL SELECT vt1.c0 FROM t0, vt1 WHERE (((CAST((- (vt1.c0)) AS BLOB)) ISNULL));
SELECT vt1.c0 FROM t0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 GROUP BY t0.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((- (vt0.c0)))))OR(1574992230))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((- (vt0.c0)))))OR(1574992230))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((- (vt0.c0)))))OR(1574992230))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM t0, vt1 NATURAL JOIN vt0;
SELECT DISTINCT * FROM t0, vt1 NATURAL JOIN vt0 WHERE (CASE WHEN ((((((((t0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(t0.c0)))AND(vt1.c0)) THEN (- (vt0.c0)) END) UNION SELECT DISTINCT * FROM t0, vt1 NATURAL JOIN vt0 WHERE ((NOT (CASE WHEN ((((((((t0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(t0.c0)))AND(vt1.c0)) THEN (- (vt0.c0)) END))) UNION SELECT DISTINCT * FROM t0, vt1 NATURAL JOIN vt0 WHERE (((CASE WHEN ((((((((t0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(t0.c0)))AND(vt1.c0)) THEN (- (vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM t0, vt1 NATURAL JOIN vt0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE (((((vt0.c0) ISNULL))>((vt0.c0 IN (t0.c0, vt0.c0))))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT (((((vt0.c0) ISNULL))>((vt0.c0 IN (t0.c0, vt0.c0))))))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE (((((((vt0.c0) ISNULL))>((vt0.c0 IN (t0.c0, vt0.c0))))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(SUM(GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))))>((((MAX(vt0.c0), vt0.c0, vt0.c0)) NOT BETWEEN ((GROUP_CONCAT(TOTAL(0.34541617572167904)), MAX(AVG(vt0.c0)), vt0.c0)) AND ((TOTAL(vt0.c0), vt0.c0, MIN(AVG(TOTAL(vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MIN(SUM(GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))))>((((MAX(vt0.c0), vt0.c0, vt0.c0)) NOT BETWEEN ((GROUP_CONCAT(TOTAL(0.34541617572167904)), MAX(AVG(vt0.c0)), vt0.c0)) AND ((TOTAL(vt0.c0), vt0.c0, MIN(AVG(TOTAL(vt0.c0)))))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MIN(SUM(GROUP_CONCAT(GROUP_CONCAT(vt0.c0)))))>((((MAX(vt0.c0), vt0.c0, vt0.c0)) NOT BETWEEN ((GROUP_CONCAT(TOTAL(0.34541617572167904)), MAX(AVG(vt0.c0)), vt0.c0)) AND ((TOTAL(vt0.c0), vt0.c0, MIN(AVG(TOTAL(vt0.c0))))))))) ISNULL);
SELECT * FROM vt0, t0, vt1;
SELECT * FROM vt0, t0, vt1 WHERE (((((((t0.c0) IS TRUE))AND(((((t0.c0)AND(t0.c0)))AND(vt1.c0)))))OR(CAST(vt1.c0 AS BLOB)))) UNION ALL SELECT * FROM vt0, t0, vt1 WHERE ((NOT (((((((t0.c0) IS TRUE))AND(((((t0.c0)AND(t0.c0)))AND(vt1.c0)))))OR(CAST(vt1.c0 AS BLOB)))))) UNION ALL SELECT ALL * FROM vt0, t0, vt1 WHERE (((((((((t0.c0) IS TRUE))AND(((((t0.c0)AND(t0.c0)))AND(vt1.c0)))))OR(CAST(vt1.c0 AS BLOB)))) ISNULL));
SELECT * FROM vt0, t0, vt1;
SELECT DISTINCT * FROM t0, vt0, vt1;
SELECT DISTINCT * FROM t0, vt0, vt1 WHERE (((CAST(vt0.c0 AS INTEGER))IS((((vt1.c0))>(('0.23228774476671799')))))) UNION SELECT DISTINCT * FROM t0, vt0, vt1 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER))IS((((vt1.c0))>(('0.23228774476671799')))))))) UNION SELECT DISTINCT * FROM t0, vt0, vt1 WHERE (((((CAST(vt0.c0 AS INTEGER))IS((((vt1.c0))>(('0.23228774476671799')))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0, vt1;
SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0 WHERE (CASE WHEN (('1504513015')+(t0.c0)) THEN vt1.c0 COLLATE RTRIM WHEN ((vt1.c0)|(vt1.c0)) THEN IFNULL(vt1.c0, t0.c0) WHEN (NOT (vt1.c0)) THEN ((t0.c0)+(t0.c0)) ELSE ((((((((vt1.c0)OR(vt1.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt1, t0 WHERE ((NOT (CASE WHEN (('1504513015')+(t0.c0)) THEN vt1.c0 COLLATE RTRIM WHEN ((vt1.c0)|(vt1.c0)) THEN IFNULL(vt1.c0, t0.c0) WHEN (NOT (vt1.c0)) THEN ((t0.c0)+(t0.c0)) ELSE ((((((((vt1.c0)OR(vt1.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt1, t0 WHERE (((CASE WHEN (('1504513015')+(t0.c0)) THEN vt1.c0 COLLATE RTRIM WHEN ((vt1.c0)|(vt1.c0)) THEN IFNULL(vt1.c0, t0.c0) WHEN (NOT (vt1.c0)) THEN ((t0.c0)+(t0.c0)) ELSE ((((((((vt1.c0)OR(vt1.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT vt1.c0 FROM vt1, t0 FULL OUTER JOIN vt0 ON ((((vt0.c0)OR((((t0.c0))<>((vt1.c0))))))AND(vt1.c0)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t0 FULL OUTER JOIN vt0 ON ((((vt0.c0)OR((((t0.c0))!=((vt1.c0))))))AND(vt1.c0)) GROUP BY vt1.c0 HAVING ((MAX(MIN(t0.c0)))AND(COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1, t0 FULL OUTER JOIN vt0 ON ((((vt0.c0)OR((((t0.c0))!=((vt1.c0))))))AND(vt1.c0)) GROUP BY vt1.c0 HAVING (NOT (((MAX(MIN(t0.c0)))AND(COUNT(*))))) UNION ALL SELECT vt1.c0 FROM vt1, t0 FULL OUTER JOIN vt0 ON ((((vt0.c0)OR((((t0.c0))<>((vt1.c0))))))AND(vt1.c0)) GROUP BY vt1.c0 HAVING ((((MAX(MIN(t0.c0)))AND(COUNT(*)))) ISNULL);
SELECT * FROM t0, vt1, vt0;
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((t0.c0) IS TRUE))OR(CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END))) UNION ALL SELECT * FROM t0, vt1, vt0 WHERE ((NOT (((((t0.c0) IS TRUE))OR(CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END))))) UNION ALL SELECT ALL * FROM t0, vt1, vt0 WHERE (((((((t0.c0) IS TRUE))OR(CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END))) ISNULL));
SELECT * FROM t0, vt1, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((('1639136240') IS TRUE)) NOTNULL)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((('1639136240') IS TRUE)) NOTNULL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((('1639136240') IS TRUE)) NOTNULL)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((t0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0) IS TRUE) ELSE ((vt0.c0)=(vt1.c0)) END INNER JOIN t0 ON (CAST(vt1.c0 AS REAL) IN ()) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((t0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0) IS TRUE) ELSE ((vt0.c0)=(vt1.c0)) END INNER JOIN t0 ON (CAST(vt1.c0 AS REAL) IN ()) GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((t0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0) IS TRUE) ELSE ((vt0.c0)=(vt1.c0)) END INNER JOIN t0 ON (CAST(vt1.c0 AS REAL) IN ()) GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((t0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0) IS TRUE) ELSE ((vt0.c0)==(vt1.c0)) END INNER JOIN t0 ON (CAST(vt1.c0 AS REAL) IN ()) GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((t0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0) IS TRUE) ELSE ((vt0.c0)=(vt1.c0)) END INNER JOIN t0 ON (CAST(vt1.c0 AS REAL) IN ()) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((t0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0) IS TRUE) ELSE ((vt0.c0)=(vt1.c0)) END INNER JOIN t0 ON (CAST(vt1.c0 AS REAL) IN ()) GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((t0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0) IS TRUE) ELSE ((vt0.c0)=(vt1.c0)) END INNER JOIN t0 ON (CAST(vt1.c0 AS REAL) IN ()) GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((t0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0) IS TRUE) ELSE ((vt0.c0)==(vt1.c0)) END INNER JOIN t0 ON (CAST(vt1.c0 AS REAL) IN ()) GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((t0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0) IS TRUE) ELSE ((vt0.c0)=(vt1.c0)) END INNER JOIN t0 ON (CAST(vt1.c0 AS REAL) IN ()) GROUP BY t0.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((((vt1.c0)) NOT BETWEEN ((0.6528610791253336)) AND ((vt1.c0))) IN ())) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((vt1.c0)) NOT BETWEEN ((0.6528610791253336)) AND ((vt1.c0))) IN ())))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)) NOT BETWEEN ((0.6528610791253336)) AND ((vt1.c0))) IN ())) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (((((((vt0.c0))<((t0.c0))), (('')<>(vt0.c0)), load_extension(vt0.c0)))>((x'' COLLATE BINARY, CASE t0.c0  WHEN t0.c0 THEN vt0.c0 END, (~ (t0.c0)))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (((((((vt0.c0))<((t0.c0))), (('')!=(vt0.c0)), load_extension(vt0.c0)))>((x'' COLLATE BINARY, CASE t0.c0  WHEN t0.c0 THEN vt0.c0 END, (~ (t0.c0)))))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((((((((vt0.c0))<((t0.c0))), (('')!=(vt0.c0)), load_extension(vt0.c0)))>((x'' COLLATE BINARY, CASE t0.c0  WHEN t0.c0 THEN vt0.c0 END, (~ (t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT vt1.c0, vt0.c0, t0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT vt1.c0, vt0.c0, t0.c0 FROM t0, vt1, vt0 WHERE ((t0.c0 COLLATE BINARY IN ())) GROUP BY vt1.c0, vt0.c0, t0.c0 UNION SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM t0, vt1, vt0 WHERE ((NOT ((t0.c0 COLLATE BINARY IN ())))) GROUP BY vt1.c0, vt0.c0, t0.c0 UNION SELECT vt1.c0, vt0.c0, t0.c0 FROM t0, vt1, vt0 WHERE ((((t0.c0 COLLATE BINARY IN ())) ISNULL)) GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT vt1.c0, vt0.c0, t0.c0 FROM t0, vt1, vt0 GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CASE COUNT(*)  WHEN GROUP_CONCAT(GROUP_CONCAT(NULL)) THEN MAX(COUNT(*)) ELSE MIN(x'1401') END UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CASE COUNT(*)  WHEN GROUP_CONCAT(GROUP_CONCAT(NULL)) THEN MAX(COUNT(*)) ELSE MIN(x'1401') END)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE COUNT(*)  WHEN GROUP_CONCAT(GROUP_CONCAT(NULL)) THEN MAX(COUNT(*)) ELSE MIN(x'1401') END) ISNULL);
SELECT ALL SUM(TYPEOF(DISTINCT (vt0.c0 IN (vt0.c0, t0.c0)))) FROM t0, vt0;
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON CAST(((vt1.c0) ISNULL) AS NUMERIC);
SELECT * FROM vt1 LEFT OUTER JOIN t0 ON CAST(((vt1.c0) ISNULL) AS NUMERIC) WHERE (CAST(((vt1.c0)==(vt1.c0)) AS BLOB)) UNION ALL SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON CAST(((vt1.c0) ISNULL) AS NUMERIC) WHERE ((NOT (CAST(((vt1.c0)==(vt1.c0)) AS BLOB)))) UNION ALL SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON CAST(((vt1.c0) ISNULL) AS NUMERIC) WHERE (((CAST(((vt1.c0)=(vt1.c0)) AS BLOB)) ISNULL));
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON CAST(((vt1.c0) ISNULL) AS NUMERIC);
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ('-1755958752') UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ('-1755958752'))) UNION SELECT DISTINCT * FROM vt0 WHERE ((('-1755958752') ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN ())) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((vt1.c0 COLLATE BINARY IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0 COLLATE BINARY IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c0, vt0.c0, vt1.c0 FROM vt0, t0, vt1 GROUP BY t0.c0, vt0.c0, vt1.c0;
SELECT t0.c0, vt0.c0, vt1.c0 FROM vt0, t0, vt1 GROUP BY t0.c0, vt0.c0, vt1.c0 HAVING COUNT((((vt0.c0))<((AVG(t0.c0))))) UNION ALL SELECT t0.c0, vt0.c0, vt1.c0 FROM vt0, t0, vt1 GROUP BY t0.c0, vt0.c0, vt1.c0 HAVING (NOT (COUNT((((vt0.c0))<((AVG(t0.c0))))))) UNION ALL SELECT ALL t0.c0, vt0.c0, vt1.c0 FROM vt0, t0, vt1 GROUP BY t0.c0, vt0.c0, vt1.c0 HAVING ((COUNT((((vt0.c0))<((AVG(t0.c0)))))) ISNULL);
SELECT ALL * FROM vt1, vt0, t0;
SELECT ALL * FROM vt1, vt0, t0 WHERE (CAST(((((t0.c0)OR(vt0.c0)))AND('0.01909589493929964')) AS INTEGER)) UNION ALL SELECT * FROM vt1, vt0, t0 WHERE ((NOT (CAST(((((t0.c0)OR(vt0.c0)))AND('0.01909589493929964')) AS INTEGER)))) UNION ALL SELECT * FROM vt1, vt0, t0 WHERE (((CAST(((((t0.c0)OR(vt0.c0)))AND('0.01909589493929964')) AS INTEGER)) ISNULL));
SELECT ALL * FROM vt1, vt0, t0;
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON (- ((t0.c0 IN ())));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON (- ((t0.c0 IN ()))) WHERE (CAST(CAST(t0.c0 AS REAL) AS BLOB)) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON (- ((t0.c0 IN ()))) WHERE ((NOT (CAST(CAST(t0.c0 AS REAL) AS BLOB)))) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON (- ((t0.c0 IN ()))) WHERE (((CAST(CAST(t0.c0 AS REAL) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt0 ON (- ((t0.c0 IN ())));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((AVG(MAX(MAX(AVG(MAX(vt0.c0)))))))))OR(TOTAL(MIN(vt1.c0)))))AND(((MAX(vt0.c0))>(COUNT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((AVG(MAX(MAX(AVG(MAX(vt0.c0)))))))))OR(TOTAL(MIN(vt1.c0)))))AND(((MAX(vt0.c0))>(COUNT(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((AVG(MAX(MAX(AVG(MAX(vt0.c0)))))))))OR(TOTAL(MIN(vt1.c0)))))AND(((MAX(vt0.c0))>(COUNT(vt1.c0)))))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (LIKELIHOOD(((t0.c0)LIKE(t0.c0)), 0.05150396414755476)) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (LIKELIHOOD(((t0.c0)LIKE(t0.c0)), 0.05150396414755476)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((LIKELIHOOD(((t0.c0)LIKE(t0.c0)), 0.05150396414755476)) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0, vt0, vt1;
SELECT DISTINCT * FROM t0, vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END)|(vt1.c0))) UNION SELECT DISTINCT * FROM t0, vt0, vt1 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END)|(vt1.c0))))) UNION SELECT DISTINCT * FROM t0, vt0, vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END)|(vt1.c0))) ISNULL));
SELECT DISTINCT * FROM t0, vt0, vt1;
SELECT ALL vt0.c0 FROM t0, vt1, vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt1, vt0 WHERE ((((+ (t0.c0)))OR(((((NULL)OR(vt1.c0)))OR(t0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt1, vt0 WHERE ((NOT ((((+ (t0.c0)))OR(((((NULL)OR(vt1.c0)))OR(t0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM t0, vt1, vt0 WHERE ((((((+ (t0.c0)))OR(((((NULL)OR(vt1.c0)))OR(t0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt1, vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT vt1.c0 FROM t0 LEFT OUTER JOIN vt1 ON CASE WHEN (('1842837527') IS TRUE) THEN CASE vt1.c0  WHEN t0.c0 THEN '1917544656' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) END GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0 LEFT OUTER JOIN vt1 ON CASE WHEN (('1842837527') IS TRUE) THEN CASE vt1.c0  WHEN t0.c0 THEN '1917544656' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) END GROUP BY vt1.c0 HAVING TOTAL(((((TOTAL(GROUP_CONCAT(TOTAL(TOTAL(GROUP_CONCAT(vt1.c0))))))AND(GROUP_CONCAT(MAX(AVG(t0.c0))))))AND(MIN(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM t0 LEFT OUTER JOIN vt1 ON CASE WHEN (('1842837527') IS TRUE) THEN CASE vt1.c0  WHEN t0.c0 THEN '1917544656' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) END GROUP BY vt1.c0 HAVING (NOT (TOTAL(((((TOTAL(GROUP_CONCAT(TOTAL(TOTAL(GROUP_CONCAT(vt1.c0))))))AND(GROUP_CONCAT(MAX(AVG(t0.c0))))))AND(MIN(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM t0 LEFT OUTER JOIN vt1 ON CASE WHEN (('1842837527') IS TRUE) THEN CASE vt1.c0  WHEN t0.c0 THEN '1917544656' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) END GROUP BY vt1.c0 HAVING ((TOTAL(((((TOTAL(GROUP_CONCAT(TOTAL(TOTAL(GROUP_CONCAT(vt1.c0))))))AND(GROUP_CONCAT(MAX(AVG(t0.c0))))))AND(MIN(vt1.c0))))) ISNULL);
SELECT * FROM t0, vt1;
SELECT ALL * FROM t0, vt1 WHERE ((((t0.c0, t0.c0, vt1.c0)) NOT BETWEEN ((t0.c0 COLLATE BINARY, t0.c0 COLLATE NOCASE, CASE t0.c0  WHEN NULL THEN t0.c0 END)) AND ((((t0.c0)>=(vt1.c0)), t0.c0 COLLATE BINARY, (t0.c0 IN ()))))) UNION ALL SELECT * FROM t0, vt1 WHERE ((NOT ((((t0.c0, t0.c0, vt1.c0)) NOT BETWEEN ((t0.c0 COLLATE BINARY, t0.c0 COLLATE NOCASE, CASE t0.c0  WHEN NULL THEN t0.c0 END)) AND ((((t0.c0)>=(vt1.c0)), t0.c0 COLLATE BINARY, (t0.c0 IN ()))))))) UNION ALL SELECT ALL * FROM t0, vt1 WHERE ((((((t0.c0, t0.c0, vt1.c0)) NOT BETWEEN ((t0.c0 COLLATE BINARY, t0.c0 COLLATE NOCASE, CASE t0.c0  WHEN NULL THEN t0.c0 END)) AND ((((t0.c0)>=(vt1.c0)), t0.c0 COLLATE BINARY, (t0.c0 IN ()))))) ISNULL));
SELECT * FROM t0, vt1;
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE (((((((((t0.c0)OR((((t0.c0))>=((vt1.c0))))))OR(CASE t0.c0  WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END)))OR((t0.c0 IN ()))))OR((((vt1.c0))<((vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT (((((((((t0.c0)OR((((t0.c0))>=((vt1.c0))))))OR(CASE t0.c0  WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END)))OR((t0.c0 IN ()))))OR((((vt1.c0))<((vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE (((((((((((t0.c0)OR((((t0.c0))>=((vt1.c0))))))OR(CASE t0.c0  WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END)))OR((t0.c0 IN ()))))OR((((vt1.c0))<((vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT ((NOT (t0.c0))))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 WHERE ((((NOT (t0.c0))) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((((vt1.c0) IS FALSE))+((~ (vt0.c0)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (((((vt1.c0) IS FALSE))+((~ (vt0.c0)))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((((((vt1.c0) IS FALSE))+((~ (vt0.c0))))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((((vt1.c0) IS FALSE))+((~ (vt0.c0)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (((((vt1.c0) IS FALSE))+((~ (vt0.c0)))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((((((vt1.c0) IS FALSE))+((~ (vt0.c0))))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1, t0;
SELECT vt1.c0 FROM vt0, vt1, t0 WHERE (((((vt1.c0) NOT BETWEEN (t0.c0) AND (0.31947293686617206)))/(((vt1.c0) IS TRUE)))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1, t0 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (t0.c0) AND (0.31947293686617206)))/(((vt1.c0) IS TRUE)))))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1, t0 WHERE (((((((vt1.c0) NOT BETWEEN (t0.c0) AND (0.31947293686617206)))/(((vt1.c0) IS TRUE)))) ISNULL));
SELECT ALL vt1.c0 FROM vt0, vt1, t0;
SELECT DISTINCT t0.c0, vt1.c0, vt0.c0 FROM vt1 CROSS JOIN t0 ON CAST(vt0.c0 AS BLOB) COLLATE BINARY LEFT OUTER JOIN vt0 ON JULIANDAY(-2062744154, ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (NOT (t0.c0)), ((vt0.c0) IS FALSE));
SELECT DISTINCT t0.c0, vt1.c0, vt0.c0 FROM vt1 CROSS JOIN t0 ON CAST(vt0.c0 AS BLOB) COLLATE BINARY LEFT OUTER JOIN vt0 ON JULIANDAY(-2062744154, ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (NOT (t0.c0)), ((vt0.c0) IS FALSE)) WHERE (CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS NUMERIC)) UNION SELECT DISTINCT t0.c0, vt1.c0, vt0.c0 FROM vt1 CROSS JOIN t0 ON CAST(vt0.c0 AS BLOB) COLLATE BINARY LEFT OUTER JOIN vt0 ON JULIANDAY(-2062744154, ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (NOT (t0.c0)), ((vt0.c0) IS FALSE)) WHERE ((NOT (CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS NUMERIC)))) UNION SELECT DISTINCT t0.c0, vt1.c0, vt0.c0 FROM vt1 CROSS JOIN t0 ON CAST(vt0.c0 AS BLOB) COLLATE BINARY LEFT OUTER JOIN vt0 ON JULIANDAY(-2062744154, ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (NOT (t0.c0)), ((vt0.c0) IS FALSE)) WHERE (((CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT t0.c0, vt1.c0, vt0.c0 FROM vt1 CROSS JOIN t0 ON CAST(vt0.c0 AS BLOB) COLLATE BINARY LEFT OUTER JOIN vt0 ON JULIANDAY(-2062744154, ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (NOT (t0.c0)), ((vt0.c0) IS FALSE));
SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM t0 NOT INDEXED, vt0, vt1 GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM t0, vt0, vt1 WHERE (((vt0.c0) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE '䈘-	uFWA\n' END))) GROUP BY vt0.c0, vt1.c0, t0.c0 UNION SELECT vt0.c0, vt1.c0, t0.c0 FROM t0, vt0, vt1 WHERE ((NOT (((vt0.c0) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE '䈘-	uFWA\n' END))))) GROUP BY vt0.c0, vt1.c0, t0.c0 UNION SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM t0, vt0, vt1 WHERE (((((vt0.c0) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE '䈘-	uFWA\n' END))) ISNULL)) GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM t0 NOT INDEXED, vt0, vt1 GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt1.c0 HAVING x'' UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((x'') ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt1.c0 HAVING x'' UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((x'') ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0 FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ('-1401113167') UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT ('-1401113167'))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((('-1401113167') ISNULL));
SELECT ALL vt0.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (((CAST(t0.c0 AS TEXT)) NOT BETWEEN ((t0.c0 IN ())) AND (((vt0.c0) BETWEEN (t0.c0) AND (t0.c0))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (((CAST(t0.c0 AS TEXT)) NOT BETWEEN ((t0.c0 IN ())) AND (((vt0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((((CAST(t0.c0 AS TEXT)) NOT BETWEEN ((t0.c0 IN ())) AND (((vt0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT t0.c0, vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN t0 ON (((+ (vt1.c0))) IS TRUE) RIGHT OUTER JOIN vt1 ON ((((((t0.c0)&(vt0.c0)))AND(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (x'4297')))) GROUP BY t0.c0, vt0.c0, vt1.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING (json_insert(t0.c0, t0.c0, AVG(MIN(MIN(t0.c0)))) IN (vt0.c0, MIN(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING (NOT ((json_insert(t0.c0, t0.c0, AVG(MIN(MIN(t0.c0)))) IN (vt0.c0, MIN(t0.c0))))) UNION ALL SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING (((json_insert(t0.c0, t0.c0, AVG(MIN(MIN(t0.c0)))) IN (vt0.c0, MIN(t0.c0)))) ISNULL);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)<=(t0.c0))) NOT BETWEEN (((t0.c0) IS TRUE)) AND ((((t0.c0))=((vt1.c0)))));
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)<=(t0.c0))) NOT BETWEEN (((t0.c0) IS TRUE)) AND ((((t0.c0))=((vt1.c0))))) WHERE (((vt1.c0 IN ()) IN ())) UNION ALL SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)<=(t0.c0))) NOT BETWEEN (((t0.c0) IS TRUE)) AND ((((t0.c0))==((vt1.c0))))) WHERE ((NOT (((vt1.c0 IN ()) IN ())))) UNION ALL SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)<=(t0.c0))) NOT BETWEEN (((t0.c0) IS TRUE)) AND ((((t0.c0))=((vt1.c0))))) WHERE (((((vt1.c0 IN ()) IN ())) ISNULL));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)<=(t0.c0))) NOT BETWEEN (((t0.c0) IS TRUE)) AND ((((t0.c0))=((vt1.c0)))));
SELECT DISTINCT * FROM vt1, t0, vt0;
SELECT DISTINCT * FROM vt1, t0, vt0 WHERE (json_extract(((((t0.c0)OR(vt1.c0)))AND(vt1.c0)), ((0.6059308059059803)+(vt1.c0)), (t0.c0 IN (x'')), LOWER(t0.c0), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (NOT (vt0.c0)))) UNION SELECT DISTINCT * FROM vt1, t0, vt0 WHERE ((NOT (json_extract(((((t0.c0)OR(vt1.c0)))AND(vt1.c0)), ((0.6059308059059803)+(vt1.c0)), (t0.c0 IN (x'')), LOWER(t0.c0), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (NOT (vt0.c0)))))) UNION SELECT DISTINCT * FROM vt1, t0, vt0 WHERE (((json_extract(((((t0.c0)OR(vt1.c0)))AND(vt1.c0)), ((0.6059308059059803)+(vt1.c0)), (t0.c0 IN (x'')), LOWER(t0.c0), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (NOT (vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1, t0, vt0;
SELECT vt0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE (((vt0.c0 COLLATE NOCASE)<<((+ (vt1.c0))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE)<<((+ (vt1.c0))))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE (((((vt0.c0 COLLATE NOCASE)<<((+ (vt1.c0))))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(vt1.c0) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(vt1.c0)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(vt1.c0) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(vt1.c0)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((- (vt1.c0)))OR(CASE 0.8500618804841319  WHEN vt1.c0 THEN vt1.c0 END))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((((- (vt1.c0)))OR(CASE 0.8500618804841319  WHEN vt1.c0 THEN vt1.c0 END))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((((- (vt1.c0)))OR(CASE 0.8500618804841319  WHEN vt1.c0 THEN vt1.c0 END))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1, vt0;
SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE ((~ (((((((((vt1.c0)AND(t0.c0)))OR(NULL)))AND(t0.c0)))AND(t0.c0))))) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE ((NOT ((~ (((((((((vt1.c0)AND(t0.c0)))OR(NULL)))AND(t0.c0)))AND(t0.c0))))))) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE ((((~ (((((((((vt1.c0)AND(t0.c0)))OR(NULL)))AND(t0.c0)))AND(t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0, vt1.c0 FROM t0, vt1, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((~ (vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((~ (vt0.c0))) AND (vt0.c0 COLLATE NOCASE))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((~ (vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0 FROM vt0, t0, vt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0, vt1 GROUP BY t0.c0 HAVING GROUP_CONCAT(MIN(vt1.c0)) UNION ALL SELECT ALL t0.c0 FROM vt0, t0, vt1 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(MIN(vt1.c0)))) UNION ALL SELECT t0.c0 FROM vt0, t0, vt1 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(MIN(vt1.c0))) ISNULL);
SELECT MIN((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))) NOT BETWEEN ((t0.c0 IN ())) AND (NULL))) FROM t0, vt0;
SELECT ALL * FROM vt1, vt0, t0;
SELECT * FROM vt1, vt0, t0 WHERE ('	\r') UNION ALL SELECT * FROM vt1, vt0, t0 WHERE ((NOT ('	\r'))) UNION ALL SELECT ALL * FROM vt1, vt0, t0 WHERE ((('	\r') ISNULL));
SELECT ALL * FROM vt1, vt0, t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END)||((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 END)||((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 END)||((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOTNULL), vt0.c0 COLLATE RTRIM, ((vt0.c0)OR(vt0.c0)))) AND ((vt0.c0, SUBSTR(vt0.c0, vt0.c0), (((vt0.c0))!=((vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOTNULL), vt0.c0 COLLATE RTRIM, ((vt0.c0)OR(vt0.c0)))) AND ((vt0.c0, SUBSTR(vt0.c0, vt0.c0), (((vt0.c0))!=((vt0.c0))))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOTNULL), vt0.c0 COLLATE RTRIM, ((vt0.c0)OR(vt0.c0)))) AND ((vt0.c0, SUBSTR(vt0.c0, vt0.c0), (((vt0.c0))<>((vt0.c0))))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)<=(vt1.c0)))||((~ (vt1.c0)))) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)<=(vt1.c0)))||((~ (vt1.c0)))) GROUP BY vt0.c0, vt1.c0 HAVING MAX(CAST(vt1.c0 AS NUMERIC)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)<=(vt1.c0)))||((~ (vt1.c0)))) GROUP BY vt0.c0, vt1.c0 HAVING (NOT (MAX(CAST(vt1.c0 AS NUMERIC)))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)<=(vt1.c0)))||((~ (vt1.c0)))) GROUP BY vt0.c0, vt1.c0 HAVING ((MAX(CAST(vt1.c0 AS NUMERIC))) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)<=(vt1.c0)))||((~ (vt1.c0)))) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)<=(vt1.c0)))||((~ (vt1.c0)))) GROUP BY vt0.c0, vt1.c0 HAVING MAX(CAST(vt1.c0 AS NUMERIC)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)<=(vt1.c0)))||((~ (vt1.c0)))) GROUP BY vt0.c0, vt1.c0 HAVING (NOT (MAX(CAST(vt1.c0 AS NUMERIC)))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)<=(vt1.c0)))||((~ (vt1.c0)))) GROUP BY vt0.c0, vt1.c0 HAVING ((MAX(CAST(vt1.c0 AS NUMERIC))) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)<=(vt1.c0)))||((~ (vt1.c0)))) GROUP BY vt0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((((vt1.c0)OR(vt1.c0))) ISNULL);
SELECT ALL t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((((vt1.c0)OR(vt1.c0))) ISNULL) WHERE (CASE WHEN ((vt1.c0)>>('2c5p7h*')) THEN STRFTIME(0.06850722788752783, t0.c0, t0.c0) WHEN ((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) THEN ((((t0.c0)OR(vt1.c0)))AND(t0.c0)) WHEN (t0.c0 IN (t0.c0)) THEN ((t0.c0)<(t0.c0)) ELSE (t0.c0 IN ()) END) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((((vt1.c0)OR(vt1.c0))) ISNULL) WHERE ((NOT (CASE WHEN ((vt1.c0)>>('2c5p7h*')) THEN STRFTIME(0.06850722788752783, t0.c0, t0.c0) WHEN ((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) THEN ((((t0.c0)OR(vt1.c0)))AND(t0.c0)) WHEN (t0.c0 IN (t0.c0)) THEN ((t0.c0)<(t0.c0)) ELSE (t0.c0 IN ()) END))) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((((vt1.c0)OR(vt1.c0))) ISNULL) WHERE (((CASE WHEN ((vt1.c0)>>('2c5p7h*')) THEN STRFTIME(0.06850722788752783, t0.c0, t0.c0) WHEN ((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) THEN ((((t0.c0)OR(vt1.c0)))AND(t0.c0)) WHEN (t0.c0 IN (t0.c0)) THEN ((t0.c0)<(t0.c0)) ELSE (t0.c0 IN ()) END) ISNULL));
SELECT ALL t0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN t0 ON ((((vt1.c0)OR(vt1.c0))) ISNULL);
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t0 WHERE (((((t0.c0)>>(t0.c0))) BETWEEN ('-9150403') AND (((('1089448112', '', t0.c0)) BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, t0.c0, t0.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, t0 WHERE ((NOT (((((t0.c0)>>(t0.c0))) BETWEEN ('-9150403') AND (((('1089448112', '', t0.c0)) BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, t0.c0, t0.c0)))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, t0 WHERE (((((((t0.c0)>>(t0.c0))) BETWEEN ('-9150403') AND (((('1089448112', '', t0.c0)) BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, t0.c0, t0.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING HEX(AVG(TOTAL(''))) UNION ALL SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING (NOT (HEX(AVG(TOTAL(''))))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0 HAVING ((HEX(AVG(TOTAL('')))) ISNULL);
SELECT ALL vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (((UPPER(DISTINCT t0.c0)))>((((vt0.c0) ISNULL))));
SELECT ALL vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (((UPPER(DISTINCT t0.c0)))>((((vt0.c0) ISNULL)))) WHERE (vt0.c0) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (((UPPER(DISTINCT t0.c0)))>((((vt0.c0) ISNULL)))) WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (((UPPER(DISTINCT t0.c0)))>((((vt0.c0) ISNULL)))) WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (((UPPER(DISTINCT t0.c0)))>((((vt0.c0) ISNULL))));
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE NULL END) ISNULL)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE NULL END) ISNULL)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE NULL END) ISNULL)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0 FROM vt0, t0, vt1 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0, vt1 WHERE (((TIME(t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (t0.c0 COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt0, t0, vt1 WHERE ((NOT (((TIME(t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (t0.c0 COLLATE RTRIM))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 NOT INDEXED, vt1 WHERE (((((TIME(t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (t0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0, vt1 GROUP BY t0.c0;
SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING ((((((((TOTAL(t0.c0))OR(TOTAL(AVG(COUNT(*))))))OR(MIN(t0.c0))))OR(GROUP_CONCAT(t0.c0))))AND(MAX(AVG(TOTAL(t0.c0))) COLLATE RTRIM)) UNION ALL SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING (NOT (((((((((TOTAL(t0.c0))OR(TOTAL(AVG(COUNT(*))))))OR(MIN(t0.c0))))OR(GROUP_CONCAT(t0.c0))))AND(MAX(AVG(TOTAL(t0.c0))) COLLATE RTRIM)))) UNION ALL SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING ((((((((((TOTAL(t0.c0))OR(TOTAL(AVG(COUNT(*))))))OR(MIN(t0.c0))))OR(GROUP_CONCAT(t0.c0))))AND(MAX(AVG(TOTAL(t0.c0))) COLLATE RTRIM))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0 IN ()), '', t0.c0))>=((t0.c0, (((t0.c0, t0.c0, t0.c0))==((t0.c0, 0.3032248449540449, t0.c0))), ((t0.c0) IS FALSE))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0 IN ()), '', t0.c0))>=((t0.c0, (((t0.c0, t0.c0, t0.c0))=((t0.c0, 0.3032248449540449, t0.c0))), ((t0.c0) IS FALSE))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0 IN ()), '', t0.c0))>=((t0.c0, (((t0.c0, t0.c0, t0.c0))==((t0.c0, 0.3032248449540449, t0.c0))), ((t0.c0) IS FALSE))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM vt0, vt1, t0;
SELECT DISTINCT * FROM vt0, vt1, t0 WHERE (TRIM(DISTINCT ((t0.c0)<=(vt1.c0)))) UNION SELECT DISTINCT * FROM vt0, vt1, t0 WHERE ((NOT (TRIM(DISTINCT ((t0.c0)<=(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt0, vt1, t0 WHERE (((TRIM(DISTINCT ((t0.c0)<=(vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, t0;
SELECT vt0.c0, t0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0, vt1 WHERE (((vt0.c0)!=(vt1.c0)) COLLATE RTRIM) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0, vt1 WHERE ((NOT (((vt0.c0)!=(vt1.c0)) COLLATE RTRIM))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0, vt1 WHERE (((((vt0.c0)<>(vt1.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(SUM(COUNT(GROUP_CONCAT(GROUP_CONCAT(t0.c0))))) UNION ALL SELECT vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(SUM(COUNT(GROUP_CONCAT(GROUP_CONCAT(t0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(SUM(COUNT(GROUP_CONCAT(GROUP_CONCAT(t0.c0)))))) ISNULL);
SELECT ALL vt0.c0 FROM t0, vt1 LEFT OUTER JOIN vt0 ON TRIM(CASE WHEN vt0.c0 THEN t0.c0 END);
SELECT ALL vt0.c0 FROM t0, vt1 LEFT OUTER JOIN vt0 ON TRIM(CASE WHEN vt0.c0 THEN t0.c0 END) WHERE (CASE WHEN CASE WHEN t0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0xd0768c9 THEN vt1.c0 ELSE 0.3095193299443946 END THEN (vt1.c0 IN ()) WHEN (((t0.c0))=((vt1.c0))) THEN CAST(t0.c0 AS BLOB) WHEN CAST(vt0.c0 AS REAL) THEN HEX(t0.c0) END) UNION ALL SELECT vt0.c0 FROM t0, vt1 LEFT OUTER JOIN vt0 ON TRIM(CASE WHEN vt0.c0 THEN t0.c0 END) WHERE ((NOT (CASE WHEN CASE WHEN t0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0Xd0768c9 THEN vt1.c0 ELSE 0.3095193299443946 END THEN (vt1.c0 IN ()) WHEN (((t0.c0))==((vt1.c0))) THEN CAST(t0.c0 AS BLOB) WHEN CAST(vt0.c0 AS REAL) THEN HEX(t0.c0) END))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt1 LEFT OUTER JOIN vt0 ON TRIM(CASE WHEN vt0.c0 THEN t0.c0 END) WHERE (((CASE WHEN CASE WHEN t0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0Xd0768c9 THEN vt1.c0 ELSE 0.3095193299443946 END THEN (vt1.c0 IN ()) WHEN (((t0.c0))=((vt1.c0))) THEN CAST(t0.c0 AS BLOB) WHEN CAST(vt0.c0 AS REAL) THEN HEX(t0.c0) END) ISNULL));
SELECT ALL vt0.c0 FROM t0, vt1 LEFT OUTER JOIN vt0 ON TRIM(CASE WHEN vt0.c0 THEN t0.c0 END);
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 NOT INDEXED WHERE (UPPER(x'')) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (UPPER(x'')))) UNION SELECT DISTINCT * FROM t0 WHERE (((UPPER(x'')) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0, vt1.c0, t0.c0 FROM vt1, vt0 NATURAL JOIN t0 GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt1, vt0 NATURAL JOIN t0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN ((((t0.c0, vt1.c0, vt0.c0))==((vt1.c0, t0.c0, x'68d4')))) AND ((vt1.c0 IN ())))) GROUP BY vt0.c0, vt1.c0, t0.c0 UNION SELECT vt0.c0, vt1.c0, t0.c0 FROM vt1, vt0 NATURAL JOIN t0 WHERE ((NOT (((((vt0.c0) IS TRUE)) NOT BETWEEN ((((t0.c0, vt1.c0, vt0.c0))=((vt1.c0, t0.c0, x'68d4')))) AND ((vt1.c0 IN ())))))) GROUP BY vt0.c0, vt1.c0, t0.c0 UNION SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt1, vt0 NATURAL JOIN t0 WHERE (((((((vt0.c0) IS TRUE)) NOT BETWEEN ((((t0.c0, vt1.c0, vt0.c0))=((vt1.c0, t0.c0, x'68d4')))) AND ((vt1.c0 IN ())))) ISNULL)) GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT vt0.c0, vt1.c0, t0.c0 FROM vt1, vt0 NATURAL JOIN t0 GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0, vt1.c0 HAVING SUM(vt0.c0) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (SUM(vt0.c0))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0, vt1.c0 HAVING ((SUM(vt0.c0)) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0, vt1.c0 HAVING SUM(vt0.c0) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (SUM(vt0.c0))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0, vt1.c0 HAVING ((SUM(vt0.c0)) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY vt0.c0, vt1.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 WHERE (((((vt0.c0)&(t0.c0)))>((- (vt0.c0))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 WHERE ((NOT (((((vt0.c0)&(t0.c0)))>((- (vt0.c0))))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 WHERE (((((((vt0.c0)&(t0.c0)))>((- (vt0.c0))))) ISNULL));
SELECT t0.c0, vt0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE (IFNULL(vt1.c0, t0.c0) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT (IFNULL(vt1.c0, t0.c0) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE (((IFNULL(vt1.c0, t0.c0) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) IS FALSE))IS NOT(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) IS FALSE))IS NOT(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) IS FALSE))IS NOT(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM vt0, t0, vt1;
SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM vt0, t0, vt1 WHERE ((((- (vt0.c0)))<(highlight(vt0.c0, t0.c0, t0.c0, vt0.c0)))) UNION ALL SELECT vt0.c0, t0.c0, vt1.c0 FROM vt0, t0, vt1 WHERE ((NOT ((((- (vt0.c0)))<(highlight(vt0.c0, t0.c0, t0.c0, vt0.c0)))))) UNION ALL SELECT vt0.c0, t0.c0, vt1.c0 FROM vt0, t0, vt1 WHERE ((((((- (vt0.c0)))<(highlight(vt0.c0, t0.c0, t0.c0, vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE ((+ ((vt0.c0 IN (t0.c0))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT ((+ ((vt0.c0 IN (t0.c0))))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((((+ ((vt0.c0 IN (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((IFNULL(vt0.c0, vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((IFNULL(vt0.c0, vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((IFNULL(vt0.c0, vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (- (((0.3191301048302255)<=(NULL)))) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (- (((0.3191301048302255)<=(NULL)))) GROUP BY t0.c0, vt0.c0 HAVING COUNT((((MIN(vt0.c0)))>((t0.c0)))) UNION ALL SELECT t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (- (((0.3191301048302255)<=(NULL)))) GROUP BY t0.c0, vt0.c0 HAVING (NOT (COUNT((((MIN(vt0.c0)))>((t0.c0)))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON (- (((0.3191301048302255)<=(NULL)))) GROUP BY t0.c0, vt0.c0 HAVING ((COUNT((((MIN(vt0.c0)))>((t0.c0))))) ISNULL);
SELECT * FROM t0, vt0, vt1;
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0))))) UNION ALL SELECT * FROM t0, vt0, vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0))))))) UNION ALL SELECT * FROM t0, vt0, vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0))))) ISNULL));
SELECT * FROM t0, vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1, t0;
SELECT DISTINCT * FROM vt0, vt1, t0 WHERE (MAX((~ (vt1.c0)), ((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)), json_quote(vt0.c0), ((vt0.c0)<(vt0.c0)))) UNION SELECT DISTINCT * FROM vt0, vt1, t0 WHERE ((NOT (MAX((~ (vt1.c0)), ((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)), json_quote(vt0.c0), ((vt0.c0)<(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, vt1, t0 WHERE (((MAX((~ (vt1.c0)), ((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)), json_quote(vt0.c0), ((vt0.c0)<(vt0.c0)))) ISNULL));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((~ (CASE WHEN vt0.c0 THEN vt0.c0 END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((~ (CASE WHEN vt0.c0 THEN vt0.c0 END))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((~ (CASE WHEN vt0.c0 THEN vt0.c0 END))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(SUM(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(SUM(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(SUM(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT * FROM t0, vt1;
SELECT ALL * FROM t0, vt1 WHERE (((((vt1.c0)IS(t0.c0))) IS TRUE)) UNION ALL SELECT * FROM t0, vt1 WHERE ((NOT (((((vt1.c0)IS(t0.c0))) IS TRUE)))) UNION ALL SELECT * FROM t0, vt1 WHERE (((((((vt1.c0)IS(t0.c0))) IS TRUE)) ISNULL));
SELECT * FROM t0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((vt0.c0)=(vt0.c0))) NOT NULL)) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((((vt0.c0)=(vt0.c0))) NOT NULL)))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((((vt0.c0)==(vt0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN 1812255178 THEN vt0.c0 ELSE vt0.c0 END)<<((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CASE WHEN 1812255178 THEN vt0.c0 ELSE vt0.c0 END)<<((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((CASE WHEN 1812255178 THEN vt0.c0 ELSE vt0.c0 END)<<((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((('1929920853', vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0 COLLATE RTRIM, '', -7.51466003E8, CAST(vt1.c0 AS REAL), (- (vt0.c0)))) AND ((CAST(vt1.c0 AS TEXT), (+ (vt1.c0)), ((((vt0.c0)AND('0.1453582659198832')))AND('-1723770766')), vt0.c0, ((((vt0.c0)OR(vt1.c0)))AND(vt1.c0))))) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((('1929920853', vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0 COLLATE RTRIM, '', -7.51466003E8, CAST(vt1.c0 AS REAL), (- (vt0.c0)))) AND ((CAST(vt1.c0 AS TEXT), (+ (vt1.c0)), ((((vt0.c0)AND('0.1453582659198832')))AND('-1723770766')), vt0.c0, ((((vt0.c0)OR(vt1.c0)))AND(vt1.c0))))) GROUP BY vt1.c0, vt0.c0 HAVING GROUP_CONCAT(TOTAL(vt1.c0)) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((('1929920853', vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0 COLLATE RTRIM, '', -7.51466003E8, CAST(vt1.c0 AS REAL), (- (vt0.c0)))) AND ((CAST(vt1.c0 AS TEXT), (+ (vt1.c0)), ((((vt0.c0)AND('0.1453582659198832')))AND('-1723770766')), vt0.c0, ((((vt0.c0)OR(vt1.c0)))AND(vt1.c0))))) GROUP BY vt1.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(vt1.c0)))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((('1929920853', vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0 COLLATE RTRIM, '', -7.51466003E8, CAST(vt1.c0 AS REAL), (- (vt0.c0)))) AND ((CAST(vt1.c0 AS TEXT), (+ (vt1.c0)), ((((vt0.c0)AND('0.1453582659198832')))AND('-1723770766')), vt0.c0, ((((vt0.c0)OR(vt1.c0)))AND(vt1.c0))))) GROUP BY vt1.c0, vt0.c0 HAVING ((GROUP_CONCAT(TOTAL(vt1.c0))) ISNULL);
SELECT * FROM t0, vt1;
SELECT ALL * FROM t0, vt1 WHERE (((t0.c0) IS TRUE)) UNION ALL SELECT * FROM t0, vt1 WHERE ((NOT (((t0.c0) IS TRUE)))) UNION ALL SELECT ALL * FROM t0, vt1 WHERE (((((t0.c0) IS TRUE)) ISNULL));
SELECT * FROM t0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN (x''))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN (x''))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN (x''))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CHANGES()) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CHANGES()))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CHANGES()) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING '-571907834' UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT ('-571907834')) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (('-571907834') ISNULL);
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING '-571907834' UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT ('-571907834')) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (('-571907834') ISNULL);
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON (+ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) RIGHT OUTER JOIN t0 ON ((((vt0.c0)AND(t0.c0 COLLATE BINARY)))AND((NOT (vt0.c0))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON (+ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) RIGHT OUTER JOIN t0 ON ((((vt0.c0)AND(t0.c0 COLLATE BINARY)))AND((NOT (vt0.c0)))) WHERE ((((vt0.c0 IN (vt1.c0))) IS TRUE)) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON (+ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) RIGHT OUTER JOIN t0 ON ((((vt0.c0)AND(t0.c0 COLLATE BINARY)))AND((NOT (vt0.c0)))) WHERE ((NOT ((((vt0.c0 IN (vt1.c0))) IS TRUE)))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON (+ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) RIGHT OUTER JOIN t0 ON ((((vt0.c0)AND(t0.c0 COLLATE BINARY)))AND((NOT (vt0.c0)))) WHERE ((((((vt0.c0 IN (vt1.c0))) IS TRUE)) ISNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON (+ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) RIGHT OUTER JOIN t0 ON ((((vt0.c0)AND(t0.c0 COLLATE BINARY)))AND((NOT (vt0.c0))));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((NOT (0.4581143382259276 COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((NOT (0.4581143382259276 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((NOT (0.4581143382259276 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM t0, vt0, vt1 WHERE (CASE WHEN (- (vt0.c0)) THEN ((vt1.c0) ISNULL) ELSE (((t0.c0, vt1.c0, t0.c0)) BETWEEN ((NULL, t0.c0, t0.c0)) AND ((vt0.c0, '1754477312', t0.c0))) END) GROUP BY vt0.c0, t0.c0, vt1.c0 UNION SELECT vt0.c0, t0.c0, vt1.c0 FROM t0, vt0, vt1 WHERE ((NOT (CASE WHEN (- (vt0.c0)) THEN ((vt1.c0) ISNULL) ELSE (((t0.c0, vt1.c0, t0.c0)) BETWEEN ((NULL, t0.c0, t0.c0)) AND ((vt0.c0, '1754477312', t0.c0))) END))) GROUP BY vt0.c0, t0.c0, vt1.c0 UNION SELECT vt0.c0, t0.c0, vt1.c0 FROM t0, vt0, vt1 WHERE (((CASE WHEN (- (vt0.c0)) THEN ((vt1.c0) ISNULL) ELSE (((t0.c0, vt1.c0, t0.c0)) BETWEEN ((NULL, t0.c0, t0.c0)) AND ((vt0.c0, '1754477312', t0.c0))) END) ISNULL)) GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM t0, vt0, vt1 GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON ((((t0.c0)|(vt1.c0))) NOT NULL) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON ((((t0.c0)|(vt1.c0))) NOT NULL) GROUP BY vt1.c0 HAVING NULL UNION ALL SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON ((((t0.c0)|(vt1.c0))) NOT NULL) GROUP BY vt1.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON ((((t0.c0)|(vt1.c0))) NOT NULL) GROUP BY vt1.c0 HAVING ((NULL) ISNULL);
SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON ((((t0.c0)|(vt1.c0))) NOT NULL) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON ((((t0.c0)|(vt1.c0))) NOT NULL) GROUP BY vt1.c0 HAVING NULL UNION ALL SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON ((((t0.c0)|(vt1.c0))) NOT NULL) GROUP BY vt1.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON ((((t0.c0)|(vt1.c0))) NOT NULL) GROUP BY vt1.c0 HAVING ((NULL) ISNULL);
SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON ((((t0.c0)|(vt1.c0))) NOT NULL) GROUP BY vt1.c0;
SELECT * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (JULIANDAY(((vt0.c0) NOT NULL), '᪆R', CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (JULIANDAY(((vt0.c0) NOT NULL), '᪆R', CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)))) UNION ALL SELECT ALL * FROM vt1, vt0 NOT INDEXED WHERE (((JULIANDAY(((vt0.c0) NOT NULL), '᪆R', CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((+ (vt0.c0)))<<(((x'') NOT NULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((+ (vt0.c0)))<<(((x'') NOT NULL)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((+ (vt0.c0)))<<(((x'') NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t0.c0 FROM t0 LEFT OUTER JOIN vt1 ON CAST(((t0.c0) NOTNULL) AS TEXT) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 LEFT OUTER JOIN vt1 ON CAST(((t0.c0) NOTNULL) AS TEXT) WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<<((('-104754283') BETWEEN (t0.c0) AND (t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 LEFT OUTER JOIN vt1 ON CAST(((t0.c0) NOTNULL) AS TEXT) WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<<((('-104754283') BETWEEN (t0.c0) AND (t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 LEFT OUTER JOIN vt1 ON CAST(((t0.c0) NOTNULL) AS TEXT) WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<<((('-104754283') BETWEEN (t0.c0) AND (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 LEFT OUTER JOIN vt1 ON CAST(((t0.c0) NOTNULL) AS TEXT) GROUP BY t0.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (((GROUP_CONCAT(vt1.c0) IN ()))OR(((GROUP_CONCAT(vt1.c0))=(vt1.c0)))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT ((((GROUP_CONCAT(vt1.c0) IN ()))OR(((GROUP_CONCAT(vt1.c0))==(vt1.c0)))))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (((((GROUP_CONCAT(vt1.c0) IN ()))OR(((GROUP_CONCAT(vt1.c0))==(vt1.c0))))) ISNULL);
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (((GROUP_CONCAT(vt1.c0) IN ()))OR(((GROUP_CONCAT(vt1.c0))=(vt1.c0)))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT ((((GROUP_CONCAT(vt1.c0) IN ()))OR(((GROUP_CONCAT(vt1.c0))==(vt1.c0)))))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (((((GROUP_CONCAT(vt1.c0) IN ()))OR(((GROUP_CONCAT(vt1.c0))==(vt1.c0))))) ISNULL);
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((+ (t0.c0))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((+ (t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((+ (t0.c0))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM vt0, vt1, t0;
SELECT DISTINCT * FROM vt0, vt1, t0 WHERE ('854783253') UNION SELECT DISTINCT * FROM vt0, vt1, t0 WHERE ((NOT ('854783253'))) UNION SELECT DISTINCT * FROM vt0, vt1, t0 WHERE ((('854783253') ISNULL));
SELECT DISTINCT * FROM vt0, vt1, t0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 WHERE ((- ((((vt1.c0))<((vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE ((NOT ((- ((((vt1.c0))<((vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((((- ((((vt1.c0))<((vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING GROUP_CONCAT(MAX(t0.c0)) UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING (NOT (GROUP_CONCAT(MAX(t0.c0)))) UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0 HAVING ((GROUP_CONCAT(MAX(t0.c0))) ISNULL);
SELECT ALL * FROM t0, vt0, vt1;
SELECT * FROM t0, vt0, vt1 WHERE ((((((+ (NULL)))AND(0.5979176782882815 COLLATE BINARY)))OR(((vt1.c0) BETWEEN (t0.c0) AND (t0.c0))))) UNION ALL SELECT ALL * FROM t0, vt0, vt1 WHERE ((NOT ((((((+ (NULL)))AND(0.5979176782882815 COLLATE BINARY)))OR(((vt1.c0) BETWEEN (t0.c0) AND (t0.c0))))))) UNION ALL SELECT ALL * FROM t0, vt0, vt1 WHERE ((((((((+ (NULL)))AND(0.5979176782882815 COLLATE BINARY)))OR(((vt1.c0) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT ALL * FROM t0, vt0, vt1;
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0 NOT INDEXED WHERE (((t0.c0)|(vt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (((t0.c0)|(vt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((t0.c0)|(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0 FROM vt0, t0;
SELECT vt1.c0, t0.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((json_extract(vt1.c0, t0.c0, vt1.c0, vt1.c0), UNICODE(vt1.c0), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND (((t0.c0 IN ()), ((t0.c0)&(t0.c0)), vt0.c0))) CROSS JOIN t0 ON (~ (((((t0.c0)OR(vt1.c0)))AND(vt0.c0)))) GROUP BY vt1.c0, t0.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (- (CHAR(COUNT(*)))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT ((- (CHAR(COUNT(*)))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (((- (CHAR(COUNT(*))))) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (- (CHAR(COUNT(*)))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT ((- (CHAR(COUNT(*)))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (((- (CHAR(COUNT(*))))) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (NULL IN ());
SELECT * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (NULL IN ()) WHERE (NULL) UNION ALL SELECT * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (NULL IN ()) WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (NULL IN ()) WHERE (((NULL) ISNULL));
SELECT ALL * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (NULL IN ());
SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1;
SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((NOT (((t0.c0)<(vt1.c0))))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((NOT ((NOT (((t0.c0)<(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((((NOT (((t0.c0)<(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0 FROM t0, vt1;
SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT vt1.c0, vt0.c0, t0.c0 FROM vt0, t0, vt1 WHERE ((((vt1.c0 IN (vt0.c0)))%(((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))))) GROUP BY vt1.c0, vt0.c0, t0.c0 UNION SELECT vt1.c0, vt0.c0, t0.c0 FROM vt0, t0, vt1 WHERE ((NOT ((((vt1.c0 IN (vt0.c0)))%(((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))))))) GROUP BY vt1.c0, vt0.c0, t0.c0 UNION SELECT vt1.c0, vt0.c0, t0.c0 FROM vt0, t0, vt1 WHERE ((((((vt1.c0 IN (vt0.c0)))%(((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING SQLITE_COMPILEOPTION_GET((((MAX(t0.c0))) BETWEEN ((t0.c0)) AND ((MIN(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SQLITE_COMPILEOPTION_GET((((MAX(t0.c0))) BETWEEN ((t0.c0)) AND ((MIN(t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SQLITE_COMPILEOPTION_GET((((MAX(t0.c0))) BETWEEN ((t0.c0)) AND ((MIN(t0.c0)))))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING SQLITE_COMPILEOPTION_GET((((MAX(t0.c0))) BETWEEN ((t0.c0)) AND ((MIN(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SQLITE_COMPILEOPTION_GET((((MAX(t0.c0))) BETWEEN ((t0.c0)) AND ((MIN(t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SQLITE_COMPILEOPTION_GET((((MAX(t0.c0))) BETWEEN ((t0.c0)) AND ((MIN(t0.c0)))))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (vt0.c0) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM t0, vt0, vt1;
SELECT DISTINCT * FROM t0, vt0, vt1 WHERE (x'') UNION SELECT DISTINCT * FROM t0, vt0, vt1 NOT INDEXED WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM t0, vt0, vt1 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM t0, vt0, vt1;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0 WHERE (json_quote(t0.c0)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM vt1, t0 WHERE ((NOT (json_quote(t0.c0)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt1 NOT INDEXED, t0 WHERE (((json_quote(t0.c0)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0 HAVING (((((MAX(vt0.c0))OR(COUNT(AVG(MAX(AVG(vt0.c0)))))))OR(GROUP_CONCAT(vt0.c0))) IN ()) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT ((((((MAX(vt0.c0))OR(COUNT(AVG(MAX(AVG(vt0.c0)))))))OR(GROUP_CONCAT(vt0.c0))) IN ()))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0 HAVING (((((((MAX(vt0.c0))OR(COUNT(AVG(MAX(AVG(vt0.c0)))))))OR(GROUP_CONCAT(vt0.c0))) IN ())) ISNULL);
SELECT t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0 HAVING (((((MAX(vt0.c0))OR(COUNT(AVG(MAX(AVG(vt0.c0)))))))OR(GROUP_CONCAT(vt0.c0))) IN ()) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0 HAVING (NOT ((((((MAX(vt0.c0))OR(COUNT(AVG(MAX(AVG(vt0.c0)))))))OR(GROUP_CONCAT(vt0.c0))) IN ()))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0 HAVING (((((((MAX(vt0.c0))OR(COUNT(AVG(MAX(AVG(vt0.c0)))))))OR(GROUP_CONCAT(vt0.c0))) IN ())) ISNULL);
SELECT t0.c0, vt0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt0.c0;
SELECT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((vt1.c0)|(vt0.c0)) COLLATE NOCASE INNER JOIN t0 ON (+ (CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((vt1.c0)|(vt0.c0)) COLLATE NOCASE INNER JOIN t0 ON (+ (CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) WHERE ((~ ((((vt1.c0))=((vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((vt1.c0)|(vt0.c0)) COLLATE NOCASE INNER JOIN t0 ON (+ (CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) WHERE ((NOT ((~ ((((vt1.c0))==((vt1.c0)))))))) UNION ALL SELECT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((vt1.c0)|(vt0.c0)) COLLATE NOCASE INNER JOIN t0 ON (+ (CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) WHERE ((((~ ((((vt1.c0))=((vt1.c0)))))) ISNULL));
SELECT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((vt1.c0)|(vt0.c0)) COLLATE NOCASE INNER JOIN t0 ON (+ (CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT DISTINCT * FROM vt0, t0, vt1;
SELECT DISTINCT * FROM vt0, t0, vt1 WHERE (TYPEOF(NULL)) UNION SELECT DISTINCT * FROM vt0, t0 NOT INDEXED, vt1 WHERE ((NOT (TYPEOF(NULL)))) UNION SELECT DISTINCT * FROM vt0, t0, vt1 WHERE (((TYPEOF(NULL)) ISNULL));
SELECT DISTINCT * FROM vt0, t0, vt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 NOT INDEXED WHERE (((((NULL) NOT BETWEEN ('-486637422') AND (t0.c0))) BETWEEN (((t0.c0)&(t0.c0))) AND (((t0.c0)==(t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((NULL) NOT BETWEEN ('-486637422') AND (t0.c0))) BETWEEN (((t0.c0)&(t0.c0))) AND (((t0.c0)=(t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((NULL) NOT BETWEEN ('-486637422') AND (t0.c0))) BETWEEN (((t0.c0)&(t0.c0))) AND (((t0.c0)==(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c0, vt0.c0, t0.c0 FROM vt1, t0, vt0 GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM vt1, t0, vt0 GROUP BY vt1.c0, vt0.c0, t0.c0 HAVING ((SUM(TOTAL(vt1.c0)))&(SUM(x''))) UNION ALL SELECT vt1.c0, vt0.c0, t0.c0 FROM vt1, t0 NOT INDEXED, vt0 GROUP BY vt1.c0, vt0.c0, t0.c0 HAVING (NOT (((SUM(TOTAL(vt1.c0)))&(SUM(x''))))) UNION ALL SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM vt1, t0, vt0 GROUP BY vt1.c0, vt0.c0, t0.c0 HAVING ((((SUM(TOTAL(vt1.c0)))&(SUM(x'')))) ISNULL);
SELECT ALL MIN(CAST(vt0.c0 AS NUMERIC)) FROM vt0 ORDER BY ((vt0.c0)==(vt0.c0)) COLLATE RTRIM ASC  NULLS LAST, ((((((vt0.c0) IS TRUE))AND(vt0.c0 COLLATE RTRIM)))AND((- (vt0.c0)))) ASC  NULLS FIRST;
SELECT * FROM t0 CROSS JOIN vt1 ON CASE ((((vt0.c0)OR(vt0.c0)))AND(vt1.c0))  WHEN CASE WHEN vt1.c0 THEN 0Xffffffff8ff9ac81 ELSE vt0.c0 END THEN ((vt0.c0) NOT NULL) WHEN ((t0.c0)|(NULL)) THEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN ((0.9177455026095519) BETWEEN (vt0.c0) AND (vt1.c0)) THEN (((vt0.c0, t0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c0))) WHEN NULLIF(DISTINCT vt0.c0, NULL) THEN LIKELY(DISTINCT t0.c0) WHEN ((((vt1.c0)OR(vt0.c0)))OR(t0.c0)) THEN ((vt1.c0)<=(t0.c0)) ELSE CAST(vt0.c0 AS TEXT) END LEFT OUTER JOIN vt0 ON (((t0.c0)>(vt1.c0)) IN ());
SELECT * FROM t0 CROSS JOIN vt1 ON CASE ((((vt0.c0)OR(vt0.c0)))AND(vt1.c0))  WHEN CASE WHEN vt1.c0 THEN 0Xffffffff8ff9ac81 ELSE vt0.c0 END THEN ((vt0.c0) NOT NULL) WHEN ((t0.c0)|(NULL)) THEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN ((0.9177455026095519) BETWEEN (vt0.c0) AND (vt1.c0)) THEN (((vt0.c0, t0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c0))) WHEN NULLIF(DISTINCT vt0.c0, NULL) THEN LIKELY(DISTINCT t0.c0) WHEN ((((vt1.c0)OR(vt0.c0)))OR(t0.c0)) THEN ((vt1.c0)<=(t0.c0)) ELSE CAST(vt0.c0 AS TEXT) END LEFT OUTER JOIN vt0 ON (((t0.c0)>(vt1.c0)) IN ()) WHERE ((~ ((vt0.c0 IN ())))) UNION ALL SELECT * FROM t0 CROSS JOIN vt1 ON CASE ((((vt0.c0)OR(vt0.c0)))AND(vt1.c0))  WHEN CASE WHEN vt1.c0 THEN 0Xffffffff8ff9ac81 ELSE vt0.c0 END THEN ((vt0.c0) NOT NULL) WHEN ((t0.c0)|(NULL)) THEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN ((0.9177455026095519) BETWEEN (vt0.c0) AND (vt1.c0)) THEN (((vt0.c0, t0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c0))) WHEN NULLIF(DISTINCT vt0.c0, NULL) THEN LIKELY(DISTINCT t0.c0) WHEN ((((vt1.c0)OR(vt0.c0)))OR(t0.c0)) THEN ((vt1.c0)<=(t0.c0)) ELSE CAST(vt0.c0 AS TEXT) END LEFT OUTER JOIN vt0 ON (((t0.c0)>(vt1.c0)) IN ()) WHERE ((NOT ((~ ((vt0.c0 IN ())))))) UNION ALL SELECT ALL * FROM t0 CROSS JOIN vt1 ON CASE ((((vt0.c0)OR(vt0.c0)))AND(vt1.c0))  WHEN CASE WHEN vt1.c0 THEN 0Xffffffff8ff9ac81 ELSE vt0.c0 END THEN ((vt0.c0) NOT NULL) WHEN ((t0.c0)|(NULL)) THEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN ((0.9177455026095519) BETWEEN (vt0.c0) AND (vt1.c0)) THEN (((vt0.c0, t0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c0))) WHEN NULLIF(DISTINCT vt0.c0, NULL) THEN LIKELY(DISTINCT t0.c0) WHEN ((((vt1.c0)OR(vt0.c0)))OR(t0.c0)) THEN ((vt1.c0)<=(t0.c0)) ELSE CAST(vt0.c0 AS TEXT) END LEFT OUTER JOIN vt0 ON (((t0.c0)>(vt1.c0)) IN ()) WHERE ((((~ ((vt0.c0 IN ())))) ISNULL));
SELECT * FROM t0 CROSS JOIN vt1 ON CASE ((((vt0.c0)OR(vt0.c0)))AND(vt1.c0))  WHEN CASE WHEN vt1.c0 THEN 0Xffffffff8ff9ac81 ELSE vt0.c0 END THEN ((vt0.c0) NOT NULL) WHEN ((t0.c0)|(NULL)) THEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN ((0.9177455026095519) BETWEEN (vt0.c0) AND (vt1.c0)) THEN (((vt0.c0, t0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c0))) WHEN NULLIF(DISTINCT vt0.c0, NULL) THEN LIKELY(DISTINCT t0.c0) WHEN ((((vt1.c0)OR(vt0.c0)))OR(t0.c0)) THEN ((vt1.c0)<=(t0.c0)) ELSE CAST(vt0.c0 AS TEXT) END LEFT OUTER JOIN vt0 ON (((t0.c0)>(vt1.c0)) IN ());
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((('O') NOTNULL) COLLATE NOCASE) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((('O') NOTNULL) COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((('O') NOTNULL) COLLATE NOCASE) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt1.c0 FROM t0, vt0 RIGHT OUTER JOIN vt1 ON ((((((x'')<(vt0.c0)))AND((('-768197774')GLOB(vt1.c0)))))AND(((vt1.c0) NOTNULL))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0, vt0 RIGHT OUTER JOIN vt1 ON ((((((x'')<(vt0.c0)))AND((('-768197774')GLOB(vt1.c0)))))AND(((vt1.c0) NOTNULL))) GROUP BY vt1.c0 HAVING CAST(((COUNT(*)) BETWEEN (GROUP_CONCAT(SUM(vt0.c0))) AND (GROUP_CONCAT(vt0.c0))) AS REAL) UNION ALL SELECT vt1.c0 FROM t0, vt0 RIGHT OUTER JOIN vt1 ON ((((((x'')<(vt0.c0)))AND((('-768197774')GLOB(vt1.c0)))))AND(((vt1.c0) NOTNULL))) GROUP BY vt1.c0 HAVING (NOT (CAST(((COUNT(*)) BETWEEN (GROUP_CONCAT(SUM(vt0.c0))) AND (GROUP_CONCAT(vt0.c0))) AS REAL))) UNION ALL SELECT vt1.c0 FROM t0, vt0 RIGHT OUTER JOIN vt1 ON ((((((x'')<(vt0.c0)))AND((('-768197774')GLOB(vt1.c0)))))AND(((vt1.c0) NOTNULL))) GROUP BY vt1.c0 HAVING ((CAST(((COUNT(*)) BETWEEN (GROUP_CONCAT(SUM(vt0.c0))) AND (GROUP_CONCAT(vt0.c0))) AS REAL)) ISNULL);
SELECT ALL * FROM vt0, vt1 INNER JOIN t0 ON ((((((((vt1.c0 COLLATE NOCASE)OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (0.4417074580606998)))))AND(((vt0.c0) IS FALSE))))AND((NOT (t0.c0)))))OR(((((((((vt1.c0)AND(vt0.c0)))OR(t0.c0)))AND(vt1.c0)))AND(vt0.c0))));
SELECT * FROM vt0, vt1 INNER JOIN t0 ON ((((((((vt1.c0 COLLATE NOCASE)OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (0.4417074580606998)))))AND(((vt0.c0) IS FALSE))))AND((NOT (t0.c0)))))OR(((((((((vt1.c0)AND(vt0.c0)))OR(t0.c0)))AND(vt1.c0)))AND(vt0.c0)))) WHERE (CAST(CAST(t0.c0 AS REAL) AS REAL)) UNION ALL SELECT * FROM vt0, vt1 INNER JOIN t0 ON ((((((((vt1.c0 COLLATE NOCASE)OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (0.4417074580606998)))))AND(((vt0.c0) IS FALSE))))AND((NOT (t0.c0)))))OR(((((((((vt1.c0)AND(vt0.c0)))OR(t0.c0)))AND(vt1.c0)))AND(vt0.c0)))) WHERE ((NOT (CAST(CAST(t0.c0 AS REAL) AS REAL)))) UNION ALL SELECT ALL * FROM vt0, vt1 INNER JOIN t0 ON ((((((((vt1.c0 COLLATE NOCASE)OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (0.4417074580606998)))))AND(((vt0.c0) IS FALSE))))AND((NOT (t0.c0)))))OR(((((((((vt1.c0)AND(vt0.c0)))OR(t0.c0)))AND(vt1.c0)))AND(vt0.c0)))) WHERE (((CAST(CAST(t0.c0 AS REAL) AS REAL)) ISNULL));
SELECT ALL * FROM vt0, vt1 INNER JOIN t0 ON ((((((((vt1.c0 COLLATE NOCASE)OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (0.4417074580606998)))))AND(((vt0.c0) IS FALSE))))AND((NOT (t0.c0)))))OR(((((((((vt1.c0)AND(vt0.c0)))OR(t0.c0)))AND(vt1.c0)))AND(vt0.c0))));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ('-2026762316') UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ('-2026762316'))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((('-2026762316') ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT t0.c0, vt0.c0 FROM vt0 CROSS JOIN t0 ON ((((((((t0.c0)AND(t0.c0)))OR(x'')))OR(t0.c0)))AND(t0.c0)) COLLATE BINARY GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0 CROSS JOIN t0 ON ((((((((t0.c0)AND(t0.c0)))OR(x'')))OR(t0.c0)))AND(t0.c0)) COLLATE BINARY WHERE ((vt0.c0 IN ('-1153384536')) COLLATE NOCASE COLLATE NOCASE) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM vt0 CROSS JOIN t0 ON ((((((((t0.c0)AND(t0.c0)))OR(x'')))OR(t0.c0)))AND(t0.c0)) COLLATE BINARY WHERE ((NOT ((vt0.c0 IN ('-1153384536')) COLLATE NOCASE COLLATE NOCASE))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM vt0 CROSS JOIN t0 ON ((((((((t0.c0)AND(t0.c0)))OR(x'')))OR(t0.c0)))AND(t0.c0)) COLLATE BINARY WHERE ((((vt0.c0 IN ('-1153384536')) COLLATE NOCASE COLLATE NOCASE) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0 CROSS JOIN t0 ON ((((((((t0.c0)AND(t0.c0)))OR(x'')))OR(t0.c0)))AND(t0.c0)) COLLATE BINARY GROUP BY t0.c0, vt0.c0;
SELECT t0.c0 FROM t0, vt0, vt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0, vt1 GROUP BY t0.c0 HAVING ((COUNT(*)) IS TRUE) UNION ALL SELECT ALL t0.c0 FROM t0, vt0, vt1 GROUP BY t0.c0 HAVING (NOT (((COUNT(*)) IS TRUE))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0, vt1 GROUP BY t0.c0 HAVING ((((COUNT(*)) IS TRUE)) ISNULL);
SELECT t0.c0 FROM t0, vt0, vt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0, vt1 GROUP BY t0.c0 HAVING ((COUNT(*)) IS TRUE) UNION ALL SELECT ALL t0.c0 FROM t0, vt0, vt1 GROUP BY t0.c0 HAVING (NOT (((COUNT(*)) IS TRUE))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0, vt1 GROUP BY t0.c0 HAVING ((((COUNT(*)) IS TRUE)) ISNULL);
SELECT t0.c0 FROM t0, vt0, vt1 GROUP BY t0.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1, t0 RIGHT OUTER JOIN vt0 ON 0.22884555741438306 COLLATE NOCASE;
SELECT DISTINCT * FROM vt1, t0 RIGHT OUTER JOIN vt0 ON 0.22884555741438306 COLLATE NOCASE WHERE (CASE ''  WHEN ((x'e63f4347') NOTNULL) THEN CASE WHEN vt1.c0 THEN vt0.c0 END END) UNION SELECT DISTINCT * FROM vt1, t0 RIGHT OUTER JOIN vt0 ON 0.22884555741438306 COLLATE NOCASE WHERE ((NOT (CASE ''  WHEN ((x'e63f4347') NOTNULL) THEN CASE WHEN vt1.c0 THEN vt0.c0 END END))) UNION SELECT DISTINCT * FROM vt1, t0 RIGHT OUTER JOIN vt0 ON 0.22884555741438306 COLLATE NOCASE WHERE (((CASE ''  WHEN ((x'e63f4347') NOTNULL) THEN CASE WHEN vt1.c0 THEN vt0.c0 END END) ISNULL));
SELECT DISTINCT * FROM vt1, t0 RIGHT OUTER JOIN vt0 ON 0.22884555741438306 COLLATE NOCASE;
SELECT vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1 WHERE ((((- (vt0.c0)))-(CAST(vt0.c0 AS TEXT)))) GROUP BY vt1.c0, vt0.c0, t0.c0 UNION SELECT vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1 WHERE ((NOT ((((- (vt0.c0)))-(CAST(vt0.c0 AS TEXT)))))) GROUP BY vt1.c0, vt0.c0, t0.c0 UNION SELECT vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1 WHERE ((((((- (vt0.c0)))-(CAST(vt0.c0 AS TEXT)))) ISNULL)) GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT vt1.c0, vt0.c0, t0.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(SUM(AVG(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(SUM(AVG(GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(SUM(AVG(GROUP_CONCAT(COUNT(*)))))) ISNULL);
SELECT ALL MAX(NULL) FROM vt0, vt1 ORDER BY ((vt1.c0)GLOB((('622W~#_Y') ISNULL)))  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)+('-1153384536')) ASC;
SELECT ALL t0.c0, vt0.c0, vt1.c0 FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))) IS FALSE) LEFT OUTER JOIN vt1 ON highlight(vt1.c0, (((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, t0.c0, t0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))), (vt0.c0 IN (vt0.c0)), vt1.c0);
SELECT DISTINCT vt1.c0, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON TRIM('-1034109384' COLLATE NOCASE) RIGHT OUTER JOIN vt0 ON (~ (t0.c0));
SELECT DISTINCT vt1.c0, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON TRIM('-1034109384' COLLATE NOCASE) RIGHT OUTER JOIN vt0 ON (~ (t0.c0)) WHERE (((CAST(t0.c0 AS TEXT))||((((vt0.c0))=((t0.c0)))))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON TRIM('-1034109384' COLLATE NOCASE) RIGHT OUTER JOIN vt0 ON (~ (t0.c0)) WHERE ((NOT (((CAST(t0.c0 AS TEXT))||((((vt0.c0))==((t0.c0)))))))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON TRIM('-1034109384' COLLATE NOCASE) RIGHT OUTER JOIN vt0 ON (~ (t0.c0)) WHERE (((((CAST(t0.c0 AS TEXT))||((((vt0.c0))==((t0.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0 FROM t0 FULL OUTER JOIN vt1 ON TRIM('-1034109384' COLLATE NOCASE) RIGHT OUTER JOIN vt0 ON (~ (t0.c0));
SELECT ALL vt1.c0, t0.c0 FROM t0, vt0, vt1 INDEXED BY i53 GROUP BY vt1.c0, t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(SUM(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(SUM(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(SUM(t0.c0))) ISNULL);
SELECT ALL * FROM vt0 NOT INDEXED;
SELECT * FROM vt0 WHERE (((0xfffffffffa2b4b40)OR(NULL))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((0Xfffffffffa2b4b40)OR(NULL))))) UNION ALL SELECT * FROM vt0 WHERE (((((0Xfffffffffa2b4b40)OR(NULL))) ISNULL));
SELECT ALL * FROM vt0 NOT INDEXED;
SELECT DISTINCT t0.c0, vt0.c0, vt1.c0 FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((((vt1.c0) NOT NULL)) BETWEEN (vt0.c0) AND ((vt1.c0 IN (vt1.c0))));
SELECT DISTINCT t0.c0, vt0.c0, vt1.c0 FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((((vt1.c0) NOT NULL)) BETWEEN (vt0.c0) AND ((vt1.c0 IN (vt1.c0)))) WHERE ('2142824503') UNION SELECT DISTINCT t0.c0, vt0.c0, vt1.c0 FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((((vt1.c0) NOT NULL)) BETWEEN (vt0.c0) AND ((vt1.c0 IN (vt1.c0)))) WHERE ((NOT ('2142824503'))) UNION SELECT DISTINCT t0.c0, vt0.c0, vt1.c0 FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((((vt1.c0) NOT NULL)) BETWEEN (vt0.c0) AND ((vt1.c0 IN (vt1.c0)))) WHERE ((('2142824503') ISNULL));
SELECT DISTINCT t0.c0, vt0.c0, vt1.c0 FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((((vt1.c0) NOT NULL)) BETWEEN (vt0.c0) AND ((vt1.c0 IN (vt1.c0))));
SELECT vt0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NATURAL JOIN t0 WHERE (((vt0.c0 COLLATE BINARY)-((vt0.c0 IN (vt0.c0, t0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 NATURAL JOIN t0 WHERE ((NOT (((vt0.c0 COLLATE BINARY)-((vt0.c0 IN (vt0.c0, t0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 NATURAL JOIN t0 WHERE (((((vt0.c0 COLLATE BINARY)-((vt0.c0 IN (vt0.c0, t0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING AVG(((((((((COUNT(vt0.c0))AND(MIN(COUNT(*)))))OR(MAX(vt1.c0))))AND(vt0.c0)))AND(vt0.c0))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (AVG(((((((((COUNT(vt0.c0))AND(MIN(COUNT(*)))))OR(MAX(vt1.c0))))AND(vt0.c0)))AND(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((AVG(((((((((COUNT(vt0.c0))AND(MIN(COUNT(*)))))OR(MAX(vt1.c0))))AND(vt0.c0)))AND(vt0.c0)))) ISNULL);
SELECT ALL * FROM t0, vt1, vt0;
SELECT * FROM t0, vt1, vt0 WHERE (((vt1.c0) ISNULL) COLLATE RTRIM COLLATE NOCASE) UNION ALL SELECT ALL * FROM t0, vt1, vt0 WHERE ((NOT (((vt1.c0) ISNULL) COLLATE RTRIM COLLATE NOCASE))) UNION ALL SELECT ALL * FROM t0, vt1, vt0 WHERE (((((vt1.c0) ISNULL) COLLATE RTRIM COLLATE NOCASE) ISNULL));
SELECT ALL * FROM t0, vt1, vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0))>=((t0.c0))) IN ())) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0))>=((t0.c0))) IN ())))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0))>=((t0.c0))) IN ())) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0)+(((t0.c0)IS NOT(t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((t0.c0)+(((t0.c0)IS NOT(t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((t0.c0)+(((t0.c0)IS NOT(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0 HAVING ((TRIM(t0.c0)) IS TRUE) UNION ALL SELECT vt0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0 HAVING (NOT (((TRIM(t0.c0)) IS TRUE))) UNION ALL SELECT vt0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0 HAVING ((((TRIM(t0.c0)) IS TRUE)) ISNULL);
SELECT ALL vt0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0 HAVING ((TRIM(t0.c0)) IS TRUE) UNION ALL SELECT vt0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0 HAVING (NOT (((TRIM(t0.c0)) IS TRUE))) UNION ALL SELECT vt0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0 HAVING ((((TRIM(t0.c0)) IS TRUE)) ISNULL);
SELECT ALL vt0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 NATURAL JOIN t0;
SELECT vt1.c0 FROM vt1 NATURAL JOIN t0 WHERE (((((((0.3139505963340854)OR(NULL)))AND(t0.c0)))>((NOT (0.10564995353579909))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN t0 WHERE ((NOT (((((((0.3139505963340854)OR(NULL)))AND(t0.c0)))>((NOT (0.10564995353579909))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN t0 WHERE (((((((((0.3139505963340854)OR(NULL)))AND(t0.c0)))>((NOT (0.10564995353579909))))) ISNULL));
SELECT vt1.c0 FROM vt1 NATURAL JOIN t0;
SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY;
SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY WHERE (CAST(((NULL) IS FALSE) AS INTEGER)) UNION SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY WHERE ((NOT (CAST(((NULL) IS FALSE) AS INTEGER)))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY WHERE (((CAST(((NULL) IS FALSE) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN vt0 ON ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY;
SELECT vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0) IS TRUE)) NOTNULL) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0) IS TRUE)) NOTNULL) WHERE (CASE WHEN ((487329385)+(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN ((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (((vt1.c0, vt0.c0, vt0.c0))>((vt1.c0, vt1.c0, vt0.c0))) WHEN ((vt1.c0)LIKE(vt0.c0)) THEN CAST('	t' AS INTEGER) END) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0) IS TRUE)) NOTNULL) WHERE ((NOT (CASE WHEN ((487329385)+(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN ((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (((vt1.c0, vt0.c0, vt0.c0))>((vt1.c0, vt1.c0, vt0.c0))) WHEN ((vt1.c0)LIKE(vt0.c0)) THEN CAST('	t' AS INTEGER) END))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0) IS TRUE)) NOTNULL) WHERE (((CASE WHEN ((487329385)+(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN ((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (((vt1.c0, vt0.c0, vt0.c0))>((vt1.c0, vt1.c0, vt0.c0))) WHEN ((vt1.c0)LIKE(vt0.c0)) THEN CAST('	t' AS INTEGER) END) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0) IS TRUE)) NOTNULL) GROUP BY vt1.c0, vt0.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 NATURAL JOIN vt0 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0 NATURAL JOIN vt0 GROUP BY t0.c0, vt1.c0 HAVING ((MIN(TOTAL(t0.c0))) NOTNULL) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM vt1, t0 NATURAL JOIN vt0 GROUP BY t0.c0, vt1.c0 HAVING (NOT (((MIN(TOTAL(t0.c0))) NOTNULL))) UNION ALL SELECT t0.c0, vt1.c0 FROM vt1, t0 NATURAL JOIN vt0 GROUP BY t0.c0, vt1.c0 HAVING ((((MIN(TOTAL(t0.c0))) NOTNULL)) ISNULL);
SELECT ALL MAX(CASE WHEN ((NULL)>=(vt1.c0)) THEN ((vt1.c0) IS TRUE) WHEN (NOT (vt1.c0)) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) WHEN ((806829309) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0)OR(vt1.c0)) WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN (vt1.c0 IN (0.9679901241525923)) WHEN '1151536825' THEN vt1.c0 COLLATE BINARY END) FROM vt1 ORDER BY (CAST(vt1.c0 AS BLOB) IN ((vt1.c0 IN (vt1.c0, vt1.c0)))) ASC;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0;
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 WHERE (((((TYPEOF(DISTINCT vt0.c0))AND((('r42') ISNULL))))OR((~ (t0.c0))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 WHERE ((NOT (((((TYPEOF(DISTINCT vt0.c0))AND((('r42') ISNULL))))OR((~ (t0.c0))))))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 WHERE (((((((TYPEOF(DISTINCT vt0.c0))AND((('r42') ISNULL))))OR((~ (t0.c0))))) ISNULL));
SELECT ALL t0.c0, vt0.c0 FROM t0, vt0;
SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN t0;
SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN t0 WHERE ((((((t0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((t0.c0, t0.c0, x'')) AND ((vt1.c0, vt0.c0, vt0.c0)))) BETWEEN (vt0.c0 COLLATE BINARY) AND ((~ (vt1.c0))))) UNION SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN t0 WHERE ((NOT ((((((t0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((t0.c0, t0.c0, x'')) AND ((vt1.c0, vt0.c0, vt0.c0)))) BETWEEN (vt0.c0 COLLATE BINARY) AND ((~ (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN t0 WHERE ((((((((t0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((t0.c0, t0.c0, x'')) AND ((vt1.c0, vt0.c0, vt0.c0)))) BETWEEN (vt0.c0 COLLATE BINARY) AND ((~ (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN t0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 WHERE (PRINTF('ctI', (- (t0.c0)), (t0.c0 IN (vt1.c0, t0.c0)))) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT (PRINTF('ctI', (- (t0.c0)), (t0.c0 IN (vt1.c0, t0.c0)))))) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM vt1, t0 WHERE (((PRINTF('ctI', (- (t0.c0)), (t0.c0 IN (vt1.c0, t0.c0)))) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 GROUP BY vt1.c0, t0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING ((((t0.c0) ISNULL))<<(SUM(COUNT(*)))) UNION ALL SELECT t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING (NOT (((((t0.c0) ISNULL))<<(SUM(COUNT(*)))))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c0 HAVING ((((((t0.c0) ISNULL))<<(SUM(COUNT(*))))) ISNULL);
SELECT MIN(((((NULL)>(vt1.c0)))<=('Bu>}f*'))) FROM vt1, t0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT NULL)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT NULL)))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT NULL)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((- (0.9774897725829449))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((- (0.9774897725829449))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((- (0.9774897725829449))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END IN ())) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON UPPER(vt0.c0) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON UPPER(vt0.c0) GROUP BY vt1.c0, vt0.c0 HAVING LAST_INSERT_ROWID() UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON UPPER(vt0.c0) GROUP BY vt1.c0, vt0.c0 HAVING (NOT (LAST_INSERT_ROWID())) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON UPPER(vt0.c0) GROUP BY vt1.c0, vt0.c0 HAVING ((LAST_INSERT_ROWID()) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON UPPER(vt0.c0) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON UPPER(vt0.c0) GROUP BY vt1.c0, vt0.c0 HAVING LAST_INSERT_ROWID() UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON UPPER(vt0.c0) GROUP BY vt1.c0, vt0.c0 HAVING (NOT (LAST_INSERT_ROWID())) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON UPPER(vt0.c0) GROUP BY vt1.c0, vt0.c0 HAVING ((LAST_INSERT_ROWID()) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON UPPER(vt0.c0) GROUP BY vt1.c0, vt0.c0;
SELECT ALL t0.c0 FROM vt0, t0;
SELECT ALL t0.c0 FROM vt0, t0 WHERE (((((((vt0.c0)GLOB(vt0.c0)))AND(CASE t0.c0  WHEN 0.213544958536806 THEN vt0.c0 END)))OR(t0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 WHERE ((NOT (((((((vt0.c0)GLOB(vt0.c0)))AND(CASE t0.c0  WHEN 0.213544958536806 THEN vt0.c0 END)))OR(t0.c0 COLLATE NOCASE))))) UNION ALL SELECT t0.c0 FROM vt0, t0 WHERE (((((((((vt0.c0)GLOB(vt0.c0)))AND(CASE t0.c0  WHEN 0.213544958536806 THEN vt0.c0 END)))OR(t0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL t0.c0 FROM vt0, t0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((((((((((((t0.c0)|(t0.c0)))OR((t0.c0 IN (t0.c0, t0.c0)))))OR(((t0.c0)IS(t0.c0)))))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))OR(((t0.c0)>>(t0.c0)))))AND(((t0.c0) ISNULL))))OR((t0.c0 IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((((((((((((t0.c0)|(t0.c0)))OR((t0.c0 IN (t0.c0, t0.c0)))))OR(((t0.c0)IS(t0.c0)))))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))OR(((t0.c0)>>(t0.c0)))))AND(((t0.c0) ISNULL))))OR((t0.c0 IN ())))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((((((((((((t0.c0)|(t0.c0)))OR((t0.c0 IN (t0.c0, t0.c0)))))OR(((t0.c0)IS(t0.c0)))))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))OR(((t0.c0)>>(t0.c0)))))AND(((t0.c0) ISNULL))))OR((t0.c0 IN ())))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (((SUM(COUNT(vt1.c0)) IN (vt0.c0)))>(((((((((AVG(TOTAL(COUNT(GROUP_CONCAT(TOTAL(TOTAL(vt0.c0)))))))OR(AVG(vt0.c0))))OR(t0.c0)))OR(vt1.c0)))AND(COUNT(MAX(vt1.c0)))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT ((((SUM(COUNT(vt1.c0)) IN (vt0.c0)))>(((((((((AVG(TOTAL(COUNT(GROUP_CONCAT(TOTAL(TOTAL(vt0.c0)))))))OR(AVG(vt0.c0))))OR(t0.c0)))OR(vt1.c0)))AND(COUNT(MAX(vt1.c0)))))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (((((SUM(COUNT(vt1.c0)) IN (vt0.c0)))>(((((((((AVG(TOTAL(COUNT(GROUP_CONCAT(TOTAL(TOTAL(vt0.c0)))))))OR(AVG(vt0.c0))))OR(t0.c0)))OR(vt1.c0)))AND(COUNT(MAX(vt1.c0))))))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0)) BETWEEN (((+ (t0.c0)))) AND ((NULLIF(t0.c0, t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) BETWEEN (((+ (t0.c0)))) AND ((NULLIF(t0.c0, t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((((t0.c0)) BETWEEN (((+ (t0.c0)))) AND ((NULLIF(t0.c0, t0.c0))))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (NULL) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT t0.c0, vt0.c0 FROM vt1, vt0 FULL OUTER JOIN t0 ON (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt1, vt0 FULL OUTER JOIN t0 ON (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) WHERE ((((vt1.c0 IN ())) ISNULL)) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM vt1 NOT INDEXED, vt0 FULL OUTER JOIN t0 ON (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) WHERE ((NOT ((((vt1.c0 IN ())) ISNULL)))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM vt1, vt0 FULL OUTER JOIN t0 ON (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) WHERE ((((((vt1.c0 IN ())) ISNULL)) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt1, vt0 FULL OUTER JOIN t0 ON (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) GROUP BY t0.c0, vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG('+f' COLLATE BINARY) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG('+f' COLLATE BINARY))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG('+f' COLLATE BINARY)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG('+f' COLLATE BINARY) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG('+f' COLLATE BINARY))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG('+f' COLLATE BINARY)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM t0, vt1;
SELECT ALL * FROM t0, vt1 WHERE (((((t0.c0) NOT BETWEEN (-568723164) AND (t0.c0))) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND (((vt1.c0)<>(vt1.c0))))) UNION ALL SELECT * FROM t0, vt1 WHERE ((NOT (((((t0.c0) NOT BETWEEN (-568723164) AND (t0.c0))) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND (((vt1.c0)<>(vt1.c0))))))) UNION ALL SELECT * FROM t0, vt1 WHERE (((((((t0.c0) NOT BETWEEN (-568723164) AND (t0.c0))) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND (((vt1.c0)!=(vt1.c0))))) ISNULL));
SELECT * FROM t0, vt1;
SELECT DISTINCT t0.c0, vt0.c0 FROM vt1, t0, vt0;
SELECT DISTINCT t0.c0, vt0.c0 FROM vt1, t0, vt0 WHERE (NULL) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM vt1, t0, vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT t0.c0, vt0.c0 FROM vt1, t0, vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0 FROM vt1, t0, vt0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 WHERE ((((((((((((((((vt0.c0, NULL, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))OR(((vt1.c0)<(vt1.c0)))))OR(CAST(vt1.c0 AS INTEGER))))AND(vt1.c0)))OR(((vt0.c0)<(vt0.c0)))))AND((- (vt1.c0)))))OR(CASE WHEN vt0.c0 THEN vt1.c0 ELSE NULL END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((((((((((((((vt0.c0, NULL, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))OR(((vt1.c0)<(vt1.c0)))))OR(CAST(vt1.c0 AS INTEGER))))AND(vt1.c0)))OR(((vt0.c0)<(vt0.c0)))))AND((- (vt1.c0)))))OR(CASE WHEN vt0.c0 THEN vt1.c0 ELSE NULL END))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((((((((((((((((((vt0.c0, NULL, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))OR(((vt1.c0)<(vt1.c0)))))OR(CAST(vt1.c0 AS INTEGER))))AND(vt1.c0)))OR(((vt0.c0)<(vt0.c0)))))AND((- (vt1.c0)))))OR(CASE WHEN vt0.c0 THEN vt1.c0 ELSE NULL END))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT t0.c0, vt0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN t0 ON ((CAST(vt1.c0 AS TEXT)) IS FALSE) GROUP BY t0.c0, vt0.c0, vt1.c0;
SELECT t0.c0, vt0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN t0 ON ((CAST(vt1.c0 AS TEXT)) IS FALSE) GROUP BY t0.c0, vt0.c0, vt1.c0 HAVING (((COUNT(MIN(t0.c0)) IN ()))AND(((TOTAL(MAX(vt1.c0))) ISNULL))) UNION ALL SELECT t0.c0, vt0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN t0 ON ((CAST(vt1.c0 AS TEXT)) IS FALSE) GROUP BY t0.c0, vt0.c0, vt1.c0 HAVING (NOT ((((COUNT(MIN(t0.c0)) IN ()))AND(((TOTAL(MAX(vt1.c0))) ISNULL))))) UNION ALL SELECT ALL t0.c0, vt0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN t0 ON ((CAST(vt1.c0 AS TEXT)) IS FALSE) GROUP BY t0.c0, vt0.c0, vt1.c0 HAVING (((((COUNT(MIN(t0.c0)) IN ()))AND(((TOTAL(MAX(vt1.c0))) ISNULL)))) ISNULL);
SELECT t0.c0, vt0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN t0 ON ((CAST(vt1.c0 AS TEXT)) IS FALSE) GROUP BY t0.c0, vt0.c0, vt1.c0;
SELECT t0.c0, vt0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN t0 ON ((CAST(vt1.c0 AS TEXT)) IS FALSE) GROUP BY t0.c0, vt0.c0, vt1.c0 HAVING (((COUNT(MIN(t0.c0)) IN ()))AND(((TOTAL(MAX(vt1.c0))) ISNULL))) UNION ALL SELECT t0.c0, vt0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN t0 ON ((CAST(vt1.c0 AS TEXT)) IS FALSE) GROUP BY t0.c0, vt0.c0, vt1.c0 HAVING (NOT ((((COUNT(MIN(t0.c0)) IN ()))AND(((TOTAL(MAX(vt1.c0))) ISNULL))))) UNION ALL SELECT ALL t0.c0, vt0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN t0 ON ((CAST(vt1.c0 AS TEXT)) IS FALSE) GROUP BY t0.c0, vt0.c0, vt1.c0 HAVING (((((COUNT(MIN(t0.c0)) IN ()))AND(((TOTAL(MAX(vt1.c0))) ISNULL)))) ISNULL);
SELECT t0.c0, vt0.c0, vt1.c0 FROM vt0, vt1 CROSS JOIN t0 ON ((CAST(vt1.c0 AS TEXT)) IS FALSE) GROUP BY t0.c0, vt0.c0, vt1.c0;
SELECT * FROM vt1, t0;
SELECT ALL * FROM vt1, t0 WHERE (((((vt1.c0, vt1.c0, NULL)) NOT BETWEEN (('뙸}', t0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ())) UNION ALL SELECT ALL * FROM vt1, t0 WHERE ((NOT (((((vt1.c0, vt1.c0, NULL)) NOT BETWEEN (('뙸}', t0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ())))) UNION ALL SELECT ALL * FROM vt1, t0 WHERE (((((((vt1.c0, vt1.c0, NULL)) NOT BETWEEN (('뙸}', t0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ())) ISNULL));
SELECT * FROM vt1, t0;
SELECT DISTINCT * FROM t0, vt1;
SELECT DISTINCT * FROM t0, vt1 WHERE (1.953847059E9) UNION SELECT DISTINCT * FROM t0, vt1 WHERE ((NOT (1.953847059E9))) UNION SELECT DISTINCT * FROM t0, vt1 WHERE (((1.953847059E9) ISNULL));
SELECT DISTINCT * FROM t0, vt1;
SELECT ALL vt1.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, t0, vt1 WHERE ('2029961159' COLLATE NOCASE) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, t0, vt1 WHERE ((NOT ('2029961159' COLLATE NOCASE))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, t0, vt1 WHERE ((('2029961159' COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0;
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING CASE WHEN COALESCE(vt1.c0, COUNT(*)) THEN (TOTAL(TOTAL(vt1.c0)) IN ()) ELSE CASE WHEN vt1.c0 THEN TOTAL(vt1.c0) END END UNION ALL SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT (CASE WHEN COALESCE(vt1.c0, COUNT(*)) THEN (TOTAL(TOTAL(vt1.c0)) IN ()) ELSE CASE WHEN vt1.c0 THEN TOTAL(vt1.c0) END END)) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING ((CASE WHEN COALESCE(vt1.c0, COUNT(*)) THEN (TOTAL(TOTAL(vt1.c0)) IN ()) ELSE CASE WHEN vt1.c0 THEN TOTAL(vt1.c0) END END) ISNULL);
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING CASE WHEN COALESCE(vt1.c0, COUNT(*)) THEN (TOTAL(TOTAL(vt1.c0)) IN ()) ELSE CASE WHEN vt1.c0 THEN TOTAL(vt1.c0) END END UNION ALL SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT (CASE WHEN COALESCE(vt1.c0, COUNT(*)) THEN (TOTAL(TOTAL(vt1.c0)) IN ()) ELSE CASE WHEN vt1.c0 THEN TOTAL(vt1.c0) END END)) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING ((CASE WHEN COALESCE(vt1.c0, COUNT(*)) THEN (TOTAL(TOTAL(vt1.c0)) IN ()) ELSE CASE WHEN vt1.c0 THEN TOTAL(vt1.c0) END END) ISNULL);
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT vt1.c0 FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((((((NOT (vt0.c0)))AND((NOT (vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER)))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((((NOT (vt0.c0)))AND((NOT (vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 WHERE ((((((((NOT (vt0.c0)))AND((NOT (vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER)))) ISNULL));
SELECT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, t0.c0, vt1.c0 FROM t0, vt1, vt0;
SELECT DISTINCT vt0.c0, t0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE ((NOT (CASE WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT vt0.c0, t0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE ((NOT ((NOT (CASE WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT vt0.c0, t0.c0, vt1.c0 FROM t0, vt1, vt0 WHERE ((((NOT (CASE WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0, vt1.c0 FROM t0, vt1, vt0;
SELECT ALL t0.c0 FROM t0, vt1, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt1 NOT INDEXED, vt0 WHERE (((CAST(t0.c0 AS INTEGER))%('\'))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt1, vt0 WHERE ((NOT (((CAST(t0.c0 AS INTEGER))%('\'))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, vt1, vt0 WHERE (((((CAST(t0.c0 AS INTEGER))%('\'))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt1, vt0 GROUP BY t0.c0;
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING t0.c0 UNION ALL SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 NOT INDEXED, t0 GROUP BY vt1.c0 HAVING ((t0.c0) ISNULL);
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING t0.c0 UNION ALL SELECT ALL vt1.c0 FROM vt1, t0 GROUP BY vt1.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 NOT INDEXED, t0 GROUP BY vt1.c0 HAVING ((t0.c0) ISNULL);
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT vt0.c0, vt1.c0, t0.c0 FROM t0, vt1 NOT INDEXED, vt0;
SELECT vt0.c0, vt1.c0, t0.c0 FROM t0, vt1, vt0 WHERE ((~ (((vt0.c0) NOTNULL)))) UNION ALL SELECT vt0.c0, vt1.c0, t0.c0 FROM t0, vt1, vt0 WHERE ((NOT ((~ (((vt0.c0) NOTNULL)))))) UNION ALL SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM t0, vt1, vt0 WHERE ((((~ (((vt0.c0) NOTNULL)))) ISNULL));
SELECT vt0.c0, vt1.c0, t0.c0 FROM t0, vt1 NOT INDEXED, vt0;
SELECT DISTINCT t0.c0 FROM vt0, vt1, t0;
SELECT DISTINCT t0.c0 FROM vt0, vt1, t0 WHERE (vt0.c0) UNION SELECT DISTINCT t0.c0 FROM vt0, vt1, t0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT t0.c0 FROM vt0, vt1, t0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT t0.c0 FROM vt0, vt1, t0;
SELECT ALL vt1.c0, t0.c0 FROM vt1 FULL OUTER JOIN t0 ON (x'' IN ((((vt1.c0, vt1.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))) GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt1 FULL OUTER JOIN t0 ON (x'' IN ((((vt1.c0, vt1.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))) WHERE (((vt1.c0)>>(vt1.c0)) COLLATE NOCASE) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM vt1 FULL OUTER JOIN t0 ON (x'' IN ((((vt1.c0, vt1.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))) WHERE ((NOT (((vt1.c0)>>(vt1.c0)) COLLATE NOCASE))) GROUP BY vt1.c0, t0.c0 UNION SELECT ALL vt1.c0, t0.c0 FROM vt1 FULL OUTER JOIN t0 ON (x'' IN ((((vt1.c0, vt1.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))) WHERE (((((vt1.c0)>>(vt1.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt1 FULL OUTER JOIN t0 ON (x'' IN ((((vt1.c0, vt1.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))) GROUP BY vt1.c0, t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((t0.c0)) NOT BETWEEN ((((TOTAL(COUNT(*)))IS NOT(COUNT(t0.c0))))) AND ((COUNT(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((t0.c0)) NOT BETWEEN ((((TOTAL(COUNT(*)))IS NOT(COUNT(t0.c0))))) AND ((COUNT(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((t0.c0)) NOT BETWEEN ((((TOTAL(COUNT(*)))IS NOT(COUNT(t0.c0))))) AND ((COUNT(t0.c0))))) ISNULL);
SELECT * FROM vt0, t0 INNER JOIN vt1 ON (((((+ (vt0.c0)))AND(((vt1.c0)-(NULL)))))AND(vt1.c0));
SELECT * FROM vt0, t0 INNER JOIN vt1 ON (((((+ (vt0.c0)))AND(((vt1.c0)-(NULL)))))AND(vt1.c0)) WHERE (((CASE t0.c0  WHEN vt1.c0 THEN t0.c0 ELSE vt0.c0 END) NOT BETWEEN (t0.c0) AND (((t0.c0) ISNULL)))) UNION ALL SELECT ALL * FROM vt0, t0 INNER JOIN vt1 ON (((((+ (vt0.c0)))AND(((vt1.c0)-(NULL)))))AND(vt1.c0)) WHERE ((NOT (((CASE t0.c0  WHEN vt1.c0 THEN t0.c0 ELSE vt0.c0 END) NOT BETWEEN (t0.c0) AND (((t0.c0) ISNULL)))))) UNION ALL SELECT ALL * FROM vt0, t0 INNER JOIN vt1 ON (((((+ (vt0.c0)))AND(((vt1.c0)-(NULL)))))AND(vt1.c0)) WHERE (((((CASE t0.c0  WHEN vt1.c0 THEN t0.c0 ELSE vt0.c0 END) NOT BETWEEN (t0.c0) AND (((t0.c0) ISNULL)))) ISNULL));
SELECT * FROM vt0, t0 INNER JOIN vt1 ON (((((+ (vt0.c0)))AND(((vt1.c0)-(NULL)))))AND(vt1.c0));
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0 NOT INDEXED, vt1 WHERE ((- ((~ (vt0.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((NOT ((- ((~ (vt0.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((((- ((~ (vt0.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT ALL vt0.c0 FROM vt1, vt0, t0 INDEXED BY i53 GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (AVG(COUNT(*)) IN (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((AVG(COUNT(*)) IN (COUNT(*))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((AVG(COUNT(*)) IN (COUNT(*)))) ISNULL);
SELECT ALL * FROM t0, vt0, vt1;
SELECT * FROM t0, vt0, vt1 WHERE (t0.c0) UNION ALL SELECT * FROM t0, vt0, vt1 WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM t0, vt0, vt1 WHERE (((t0.c0) ISNULL));
SELECT ALL * FROM t0, vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((vt1.c0 IN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((vt1.c0 IN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN vt1 ON CAST((vt0.c0 IN ()) AS INTEGER) GROUP BY t0.c0, vt1.c0, vt0.c0;
SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN vt1 ON CAST((vt0.c0 IN ()) AS INTEGER) GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING ((((AVG(t0.c0))AND(TRIM(DISTINCT t0.c0))))AND(GROUP_CONCAT(t0.c0))) UNION ALL SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN vt1 ON CAST((vt0.c0 IN ()) AS INTEGER) GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING (NOT (((((AVG(t0.c0))AND(TRIM(DISTINCT t0.c0))))AND(GROUP_CONCAT(t0.c0))))) UNION ALL SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN vt1 ON CAST((vt0.c0 IN ()) AS INTEGER) GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING ((((((AVG(t0.c0))AND(TRIM(DISTINCT t0.c0))))AND(GROUP_CONCAT(t0.c0)))) ISNULL);
SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN vt1 ON CAST((vt0.c0 IN ()) AS INTEGER) GROUP BY t0.c0, vt1.c0, vt0.c0;
SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN vt1 ON CAST((vt0.c0 IN ()) AS INTEGER) GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING ((((AVG(t0.c0))AND(TRIM(DISTINCT t0.c0))))AND(GROUP_CONCAT(t0.c0))) UNION ALL SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN vt1 ON CAST((vt0.c0 IN ()) AS INTEGER) GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING (NOT (((((AVG(t0.c0))AND(TRIM(DISTINCT t0.c0))))AND(GROUP_CONCAT(t0.c0))))) UNION ALL SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN vt1 ON CAST((vt0.c0 IN ()) AS INTEGER) GROUP BY t0.c0, vt1.c0, vt0.c0 HAVING ((((((AVG(t0.c0))AND(TRIM(DISTINCT t0.c0))))AND(GROUP_CONCAT(t0.c0)))) ISNULL);
SELECT ALL t0.c0, vt1.c0, vt0.c0 FROM t0, vt0 RIGHT OUTER JOIN vt1 ON CAST((vt0.c0 IN ()) AS INTEGER) GROUP BY t0.c0, vt1.c0, vt0.c0;
SELECT ALL MAX(((0.6723123712442971) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0 COLLATE BINARY))) FROM vt1;
SELECT ALL * FROM vt1, vt0, t0;
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((vt0.c0)+(vt1.c0))) BETWEEN (((t0.c0)LIKE(t0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) UNION ALL SELECT * FROM vt1, vt0, t0 WHERE ((NOT (((((vt0.c0)+(vt1.c0))) BETWEEN (((t0.c0)LIKE(t0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))))) UNION ALL SELECT * FROM vt1, vt0, t0 WHERE (((((((vt0.c0)+(vt1.c0))) BETWEEN (((t0.c0)LIKE(t0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ISNULL));
SELECT ALL * FROM vt1, vt0, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0) NOTNULL)))>((((vt1.c0) IS TRUE))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0) NOTNULL)))>((((vt1.c0) IS TRUE))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0) NOTNULL)))>((((vt1.c0) IS TRUE))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING MAX(TOTAL(vt0.c0)) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (MAX(TOTAL(vt0.c0)))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((MAX(TOTAL(vt0.c0))) ISNULL);
SELECT TOTAL(((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (((vt1.c0) NOTNULL)) AND (((vt1.c0)>(vt0.c0))))) FROM vt0, t0, vt1 ORDER BY ABS(NULL) ASC  NULLS LAST;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (t0.c0) UNION ALL SELECT * FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE (LIKELY(t0.c0) COLLATE NOCASE) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (LIKELY(t0.c0) COLLATE NOCASE))) GROUP BY t0.c0, vt0.c0 UNION SELECT t0.c0, vt0.c0 FROM vt0, t0 WHERE (((LIKELY(t0.c0) COLLATE NOCASE) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((((0.029510834257977736) NOT BETWEEN (vt0.c0) AND (vt0.c0))))==((NULL)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((((0.029510834257977736) NOT BETWEEN (vt0.c0) AND (vt0.c0))))==((NULL)))))) UNION ALL SELECT * FROM vt0 NOT INDEXED WHERE ((((((((0.029510834257977736) NOT BETWEEN (vt0.c0) AND (vt0.c0))))=((NULL)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0;
SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((+ (((t0.c0)LIKE(t0.c0))))) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((NOT ((+ (((t0.c0)LIKE(t0.c0))))))) UNION SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0 WHERE ((((+ (((t0.c0)LIKE(t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0, vt1.c0 FROM vt1, t0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((((vt1.c0)) BETWEEN ((t0.c0)) AND ((x'' COLLATE BINARY)))) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((t0.c0)) AND ((x'' COLLATE BINARY)))))) GROUP BY vt1.c0, t0.c0 UNION SELECT vt1.c0, t0.c0 FROM t0, vt1 WHERE ((((((vt1.c0)) BETWEEN ((t0.c0)) AND ((x'' COLLATE BINARY)))) ISNULL)) GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM t0, vt1 GROUP BY vt1.c0, t0.c0;
SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0, t0.c0 HAVING ((CASE WHEN vt1.c0 THEN TOTAL(AVG(SUM(COUNT(t0.c0)))) ELSE vt1.c0 END)*(((MIN(t0.c0))<<(MIN(t0.c0))))) UNION ALL SELECT vt1.c0, vt0.c0, t0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0, t0.c0 HAVING (NOT (((CASE WHEN vt1.c0 THEN TOTAL(AVG(SUM(COUNT(t0.c0)))) ELSE vt1.c0 END)*(((MIN(t0.c0))<<(MIN(t0.c0))))))) UNION ALL SELECT vt1.c0, vt0.c0, t0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0, t0.c0 HAVING ((((CASE WHEN vt1.c0 THEN TOTAL(AVG(SUM(COUNT(t0.c0)))) ELSE vt1.c0 END)*(((MIN(t0.c0))<<(MIN(t0.c0)))))) ISNULL);
SELECT ALL * FROM t0 INNER JOIN vt1 ON (((('-768197774' IN (vt1.c0)), t0.c0 COLLATE BINARY, (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))>=((((t0.c0)LIKE(t0.c0)), ((t0.c0) ISNULL), (t0.c0 IN ()))));
SELECT * FROM t0 INNER JOIN vt1 ON (((('-768197774' IN (vt1.c0)), t0.c0 COLLATE BINARY, (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))>=((((t0.c0)LIKE(t0.c0)), ((t0.c0) ISNULL), (t0.c0 IN ())))) WHERE (((vt1.c0)OR(STRFTIME(vt1.c0, t0.c0, 0.36192109335731837)))) UNION ALL SELECT ALL * FROM t0 INNER JOIN vt1 ON (((('-768197774' IN (vt1.c0)), t0.c0 COLLATE BINARY, (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))>=((((t0.c0)LIKE(t0.c0)), ((t0.c0) ISNULL), (t0.c0 IN ())))) WHERE ((NOT (((vt1.c0)OR(STRFTIME(vt1.c0, t0.c0, 0.36192109335731837)))))) UNION ALL SELECT ALL * FROM t0 INNER JOIN vt1 ON (((('-768197774' IN (vt1.c0)), t0.c0 COLLATE BINARY, (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))>=((((t0.c0)LIKE(t0.c0)), ((t0.c0) ISNULL), (t0.c0 IN ())))) WHERE (((((vt1.c0)OR(STRFTIME(vt1.c0, t0.c0, 0.36192109335731837)))) ISNULL));
SELECT ALL * FROM t0 INNER JOIN vt1 ON (((('-768197774' IN (vt1.c0)), t0.c0 COLLATE BINARY, (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))>=((((t0.c0)LIKE(t0.c0)), ((t0.c0) ISNULL), (t0.c0 IN ()))));
SELECT DISTINCT t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON ((((((((((t0.c0)==(vt1.c0)))OR(t0.c0)))OR(((vt1.c0) NOT NULL))))OR(t0.c0)))AND(CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 END));
SELECT DISTINCT t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON ((((((((((t0.c0)==(vt1.c0)))OR(t0.c0)))OR(((vt1.c0) NOT NULL))))OR(t0.c0)))AND(CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 END)) WHERE (((((vt1.c0))>=(('jmko'))) IN ())) UNION SELECT DISTINCT t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON ((((((((((t0.c0)=(vt1.c0)))OR(t0.c0)))OR(((vt1.c0) NOT NULL))))OR(t0.c0)))AND(CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 END)) WHERE ((NOT (((((vt1.c0))>=(('jmko'))) IN ())))) UNION SELECT DISTINCT t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON ((((((((((t0.c0)=(vt1.c0)))OR(t0.c0)))OR(((vt1.c0) NOT NULL))))OR(t0.c0)))AND(CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 END)) WHERE (((((((vt1.c0))>=(('jmko'))) IN ())) ISNULL));
SELECT DISTINCT t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON ((((((((((t0.c0)==(vt1.c0)))OR(t0.c0)))OR(((vt1.c0) NOT NULL))))OR(t0.c0)))AND(CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 END));
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE (((vt1.c0)LIKE(vt0.c0)) COLLATE RTRIM) GROUP BY vt0.c0, t0.c0, vt1.c0 UNION SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE ((NOT (((vt1.c0)LIKE(vt0.c0)) COLLATE RTRIM))) GROUP BY vt0.c0, t0.c0, vt1.c0 UNION SELECT vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE (((((vt1.c0)LIKE(vt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING 0.4327800603680696 UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (0.4327800603680696)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((0.4327800603680696) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING 0.4327800603680696 UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (0.4327800603680696)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((0.4327800603680696) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((JULIANDAY(t0.c0, t0.c0, t0.c0))%(t0.c0 COLLATE NOCASE))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((JULIANDAY(t0.c0, t0.c0, t0.c0))%(t0.c0 COLLATE NOCASE))))) UNION ALL SELECT * FROM t0 WHERE (((((JULIANDAY(t0.c0, t0.c0, t0.c0))%(t0.c0 COLLATE NOCASE))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM vt0, vt1, t0 GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT vt1.c0, vt0.c0, t0.c0 FROM vt0, vt1, t0 WHERE (((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))) NOT NULL)) GROUP BY vt1.c0, vt0.c0, t0.c0 UNION SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM vt0, vt1, t0 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))) NOT NULL)))) GROUP BY vt1.c0, vt0.c0, t0.c0 UNION SELECT vt1.c0, vt0.c0, t0.c0 FROM vt0, vt1, t0 WHERE (((((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))) NOT NULL)) ISNULL)) GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM vt0, vt1, t0 GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(SUM(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(SUM(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(SUM(vt0.c0))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (0.36192109335731837) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (0.36192109335731837))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((0.36192109335731837) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((TRIM(DISTINCT vt1.c0))OR(vt1.c0)))AND(CASE vt0.c0  WHEN 0.27726556720275464 THEN vt0.c0 ELSE vt1.c0 END))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((((TRIM(DISTINCT vt1.c0))OR(vt1.c0)))AND(CASE vt0.c0  WHEN 0.27726556720275464 THEN vt0.c0 ELSE vt1.c0 END))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((TRIM(DISTINCT vt1.c0))OR(vt1.c0)))AND(CASE vt0.c0  WHEN 0.27726556720275464 THEN vt0.c0 ELSE vt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ('647668762') GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ('647668762'))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((('647668762') ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((CAST(GROUP_CONCAT(t0.c0) AS TEXT))OR(TOTAL(SUM(COUNT(*))))))AND((((t0.c0)) BETWEEN ((SUM(COUNT(AVG(t0.c0))))) AND ((COUNT(*)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((CAST(GROUP_CONCAT(t0.c0) AS TEXT))OR(TOTAL(SUM(COUNT(*))))))AND((((t0.c0)) BETWEEN ((SUM(COUNT(AVG(t0.c0))))) AND ((COUNT(*)))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((CAST(GROUP_CONCAT(t0.c0) AS TEXT))OR(TOTAL(SUM(COUNT(*))))))AND((((t0.c0)) BETWEEN ((SUM(COUNT(AVG(t0.c0))))) AND ((COUNT(*))))))) ISNULL);
SELECT ALL TOTAL(CASE WHEN vt0.c0 COLLATE RTRIM THEN ((vt1.c0)|(vt0.c0)) ELSE LIKELIHOOD(DISTINCT vt0.c0, 0.6368392439506987) END) FROM vt0, vt1;
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (((vt0.c0) ISNULL) COLLATE RTRIM) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (((vt0.c0) ISNULL) COLLATE RTRIM))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((((vt0.c0) ISNULL) COLLATE RTRIM) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt1.c0))!=((vt1.c0))) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((((vt1.c0))!=((vt1.c0))) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((vt1.c0))<>((vt1.c0))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT t0.c0 FROM t0 INNER JOIN vt0 ON ((((vt0.c0)OR(t0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((((((((t0.c0)OR(t0.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))) FULL OUTER JOIN vt1 ON vt0.c0 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (CASE vt0.c0  WHEN TOTAL(vt0.c0) THEN vt0.c0 WHEN NULL THEN AVG(vt0.c0) WHEN vt0.c0 THEN vt0.c0 END IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((CASE vt0.c0  WHEN TOTAL(vt0.c0) THEN vt0.c0 WHEN NULL THEN AVG(vt0.c0) WHEN vt0.c0 THEN vt0.c0 END IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((CASE vt0.c0  WHEN TOTAL(vt0.c0) THEN vt0.c0 WHEN NULL THEN AVG(vt0.c0) WHEN vt0.c0 THEN vt0.c0 END IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (CASE vt0.c0  WHEN TOTAL(vt0.c0) THEN vt0.c0 WHEN NULL THEN AVG(vt0.c0) WHEN vt0.c0 THEN vt0.c0 END IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((CASE vt0.c0  WHEN TOTAL(vt0.c0) THEN vt0.c0 WHEN NULL THEN AVG(vt0.c0) WHEN vt0.c0 THEN vt0.c0 END IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((CASE vt0.c0  WHEN TOTAL(vt0.c0) THEN vt0.c0 WHEN NULL THEN AVG(vt0.c0) WHEN vt0.c0 THEN vt0.c0 END IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CAST(TRIM(vt0.c0) AS NUMERIC);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CAST(TRIM(vt0.c0) AS NUMERIC) WHERE (vt1.c0) UNION ALL SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CAST(TRIM(vt0.c0) AS NUMERIC) WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CAST(TRIM(vt0.c0) AS NUMERIC) WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CAST(TRIM(vt0.c0) AS NUMERIC);
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((- ((('fV/\r') BETWEEN (vt1.c0) AND ('-741610244'))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((- ((('fV/\r') BETWEEN (vt1.c0) AND ('-741610244'))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((- ((('fV/\r') BETWEEN (vt1.c0) AND ('-741610244'))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING CASE WHEN MAX(t0.c0) THEN MAX(vt1.c0) ELSE (~ (vt1.c0)) END UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT (CASE WHEN MAX(t0.c0) THEN MAX(vt1.c0) ELSE (~ (vt1.c0)) END)) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((CASE WHEN MAX(t0.c0) THEN MAX(vt1.c0) ELSE (~ (vt1.c0)) END) ISNULL);
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING CASE WHEN MAX(t0.c0) THEN MAX(vt1.c0) ELSE (~ (vt1.c0)) END UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT (CASE WHEN MAX(t0.c0) THEN MAX(vt1.c0) ELSE (~ (vt1.c0)) END)) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((CASE WHEN MAX(t0.c0) THEN MAX(vt1.c0) ELSE (~ (vt1.c0)) END) ISNULL);
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c0, t0.c0, vt0.c0)) NOT BETWEEN (((+ (vt0.c0)), t0.c0, CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '~7cS' WHEN t0.c0 THEN t0.c0 END)) AND (((+ (t0.c0)), (~ (vt0.c0)), ((vt0.c0)>(vt0.c0)))));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c0, t0.c0, vt0.c0)) NOT BETWEEN (((+ (vt0.c0)), t0.c0, CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '~7cS' WHEN t0.c0 THEN t0.c0 END)) AND (((+ (t0.c0)), (~ (vt0.c0)), ((vt0.c0)>(vt0.c0))))) WHERE (((t0.c0)<(((vt0.c0)IS(t0.c0))))) UNION ALL SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c0, t0.c0, vt0.c0)) NOT BETWEEN (((+ (vt0.c0)), t0.c0, CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '~7cS' WHEN t0.c0 THEN t0.c0 END)) AND (((+ (t0.c0)), (~ (vt0.c0)), ((vt0.c0)>(vt0.c0))))) WHERE ((NOT (((t0.c0)<(((vt0.c0)IS(t0.c0))))))) UNION ALL SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c0, t0.c0, vt0.c0)) NOT BETWEEN (((+ (vt0.c0)), t0.c0, CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '~7cS' WHEN t0.c0 THEN t0.c0 END)) AND (((+ (t0.c0)), (~ (vt0.c0)), ((vt0.c0)>(vt0.c0))))) WHERE (((((t0.c0)<(((vt0.c0)IS(t0.c0))))) ISNULL));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c0, t0.c0, vt0.c0)) NOT BETWEEN (((+ (vt0.c0)), t0.c0, CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '~7cS' WHEN t0.c0 THEN t0.c0 END)) AND (((+ (t0.c0)), (~ (vt0.c0)), ((vt0.c0)>(vt0.c0)))));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0)IS NOT(vt1.c0)) COLLATE BINARY) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)IS NOT(vt1.c0)) COLLATE BINARY))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) WHERE ('1298217377') GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) WHERE ((NOT ('1298217377'))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) WHERE ((('1298217377') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) GROUP BY vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(t0.c0))) ISNULL);
SELECT * FROM vt0 NOT INDEXED, t0, vt1;
SELECT * FROM vt0, t0, vt1 WHERE ('Jy}(ᷫe') UNION ALL SELECT * FROM vt0, t0, vt1 WHERE ((NOT ('Jy}(ᷫe'))) UNION ALL SELECT ALL * FROM vt0 NOT INDEXED, t0, vt1 WHERE ((('Jy}(ᷫe') ISNULL));
SELECT * FROM vt0 NOT INDEXED, t0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)IS(vt0.c0)))OR(('1659595942' IN ()))))AND((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)IS(vt0.c0)))OR(('1659595942' IN ()))))AND((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)IS(vt0.c0)))OR(('1659595942' IN ()))))AND((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0) NOTNULL)))>=((((vt1.c0)/(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0) NOTNULL)))>=((((vt1.c0)/(vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((vt1.c0) NOTNULL)))>=((((vt1.c0)/(vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((t0.c0)) BETWEEN ((((t0.c0) BETWEEN (SUM(t0.c0)) AND (t0.c0)))) AND ((AVG(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((t0.c0)) BETWEEN ((((t0.c0) BETWEEN (SUM(t0.c0)) AND (t0.c0)))) AND ((AVG(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((t0.c0)) BETWEEN ((((t0.c0) BETWEEN (SUM(t0.c0)) AND (t0.c0)))) AND ((AVG(t0.c0))))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((t0.c0)) BETWEEN ((((t0.c0) BETWEEN (SUM(t0.c0)) AND (t0.c0)))) AND ((AVG(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((t0.c0)) BETWEEN ((((t0.c0) BETWEEN (SUM(t0.c0)) AND (t0.c0)))) AND ((AVG(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((t0.c0)) BETWEEN ((((t0.c0) BETWEEN (SUM(t0.c0)) AND (t0.c0)))) AND ((AVG(t0.c0))))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN t0.c0 END)GLOB(x'df19a918339f'));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN t0.c0 END)GLOB(x'df19a918339f')) WHERE (t0.c0) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN t0.c0 END)GLOB(x'df19a918339f')) WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN t0.c0 END)GLOB(x'df19a918339f')) WHERE (((t0.c0) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN t0.c0 END)GLOB(x'df19a918339f'));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON ((0.700300917440887)<<(vt1.c0 COLLATE RTRIM));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON ((0.700300917440887)<<(vt1.c0 COLLATE RTRIM)) WHERE ((((NULL, vt1.c0, vt1.c0)) BETWEEN ((CAST(NULL AS TEXT), ((vt0.c0)LIKE(0Xdb3737d)), CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN '257144429' END)) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt1.c0) NOTNULL), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON ((0.700300917440887)<<(vt1.c0 COLLATE RTRIM)) WHERE ((NOT ((((NULL, vt1.c0, vt1.c0)) BETWEEN ((CAST(NULL AS TEXT), ((vt0.c0)LIKE(0xdb3737d)), CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN '257144429' END)) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt1.c0) NOTNULL), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON ((0.700300917440887)<<(vt1.c0 COLLATE RTRIM)) WHERE ((((((NULL, vt1.c0, vt1.c0)) BETWEEN ((CAST(NULL AS TEXT), ((vt0.c0)LIKE(0Xdb3737d)), CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN '257144429' END)) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt1.c0) NOTNULL), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) ISNULL));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON ((0.700300917440887)<<(vt1.c0 COLLATE RTRIM));
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (json_object(((t0.c0)IS(t0.c0)), ((t0.c0) NOTNULL), ((t0.c0) ISNULL), ((x'') BETWEEN (t0.c0) AND (t0.c0)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (json_object(((t0.c0)IS(t0.c0)), ((t0.c0) NOTNULL), ((t0.c0) ISNULL), ((x'') BETWEEN (t0.c0) AND (t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((json_object(((t0.c0)IS(t0.c0)), ((t0.c0) NOTNULL), ((t0.c0) ISNULL), ((x'') BETWEEN (t0.c0) AND (t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT vt1.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0 HAVING (+ (AVG(0x16c5ce3f))) UNION ALL SELECT ALL vt1.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0 HAVING (NOT ((+ (AVG(0x16c5ce3f))))) UNION ALL SELECT vt1.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0 HAVING (((+ (AVG(0x16c5ce3f)))) ISNULL);
SELECT vt1.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0 HAVING (+ (AVG(0x16c5ce3f))) UNION ALL SELECT ALL vt1.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0 HAVING (NOT ((+ (AVG(0x16c5ce3f))))) UNION ALL SELECT vt1.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0 HAVING (((+ (AVG(0x16c5ce3f)))) ISNULL);
SELECT vt1.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (CAST(vt1.c0 AS BLOB)))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (CAST(vt1.c0 AS BLOB)))))) UNION ALL SELECT * FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (CAST(vt1.c0 AS BLOB)))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.c0 FROM t0 LEFT OUTER JOIN vt1 ON vt1.c0 LEFT OUTER JOIN vt0 ON ((((vt0.c0 COLLATE BINARY)OR((((t0.c0))>((t0.c0))))))AND((t0.c0 IN ())));
SELECT DISTINCT vt0.c0 FROM t0 LEFT OUTER JOIN vt1 ON vt1.c0 LEFT OUTER JOIN vt0 ON ((((vt0.c0 COLLATE BINARY)OR((((t0.c0))>((t0.c0))))))AND((t0.c0 IN ()))) WHERE ('jDC') UNION SELECT DISTINCT vt0.c0 FROM t0 LEFT OUTER JOIN vt1 ON vt1.c0 LEFT OUTER JOIN vt0 ON ((((vt0.c0 COLLATE BINARY)OR((((t0.c0))>((t0.c0))))))AND((t0.c0 IN ()))) WHERE ((NOT ('jDC'))) UNION SELECT DISTINCT vt0.c0 FROM t0 LEFT OUTER JOIN vt1 ON vt1.c0 LEFT OUTER JOIN vt0 ON ((((vt0.c0 COLLATE BINARY)OR((((t0.c0))>((t0.c0))))))AND((t0.c0 IN ()))) WHERE ((('jDC') ISNULL));
SELECT DISTINCT vt0.c0 FROM t0 LEFT OUTER JOIN vt1 ON vt1.c0 LEFT OUTER JOIN vt0 ON ((((vt0.c0 COLLATE BINARY)OR((((t0.c0))>((t0.c0))))))AND((t0.c0 IN ())));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CASE vt0.c0  WHEN 'G/怽tA{94)' THEN CAST(vt0.c0 AS BLOB) WHEN CASE WHEN vt0.c0 THEN 'TQ' ELSE vt0.c0 END THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) WHEN (+ (vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN 'G/怽tA{94)' THEN CAST(vt0.c0 AS BLOB) WHEN CASE WHEN vt0.c0 THEN 'TQ' ELSE vt0.c0 END THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) WHEN (+ (vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 NOT INDEXED WHERE (((CASE vt0.c0  WHEN 'G/怽tA{94)' THEN CAST(vt0.c0 AS BLOB) WHEN CASE WHEN vt0.c0 THEN 'TQ' ELSE vt0.c0 END THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) WHEN (+ (vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0 HAVING ((NOT (AVG(SUM(COUNT(*))))) IN ()) UNION ALL SELECT ALL vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (((NOT (AVG(SUM(COUNT(*))))) IN ()))) UNION ALL SELECT vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0 HAVING ((((NOT (AVG(SUM(COUNT(*))))) IN ())) ISNULL);
SELECT vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0 HAVING ((NOT (AVG(SUM(COUNT(*))))) IN ()) UNION ALL SELECT ALL vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (((NOT (AVG(SUM(COUNT(*))))) IN ()))) UNION ALL SELECT vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0 HAVING ((((NOT (AVG(SUM(COUNT(*))))) IN ())) ISNULL);
SELECT vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((((t0.c0) ISNULL)) BETWEEN (t0.c0) AND (CAST(t0.c0 AS INTEGER)))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c0) ISNULL)) BETWEEN (t0.c0) AND (CAST(t0.c0 AS INTEGER)))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((t0.c0) ISNULL)) BETWEEN (t0.c0) AND (CAST(t0.c0 AS INTEGER)))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE (((t0.c0)||(vt1.c0))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT (((t0.c0)||(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE (((((t0.c0)||(vt1.c0))) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT t0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE (TRIM(vt1.c0) COLLATE RTRIM) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE ((NOT (TRIM(vt1.c0) COLLATE RTRIM))) GROUP BY t0.c0, vt1.c0 UNION SELECT ALL t0.c0, vt1.c0 FROM vt1, t0, vt0 WHERE (((TRIM(vt1.c0) COLLATE RTRIM) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM vt1, t0, vt0 GROUP BY t0.c0, vt1.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING GROUP_CONCAT(MAX(0.9123113444423828)) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (GROUP_CONCAT(MAX(0.9123113444423828)))) UNION ALL SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING ((GROUP_CONCAT(MAX(0.9123113444423828))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0, t0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM vt0, t0 NATURAL JOIN vt1 WHERE (((((vt0.c0))<((t0.c0))) IN ())) UNION SELECT DISTINCT * FROM vt0, t0 NATURAL JOIN vt1 WHERE ((NOT (((((vt0.c0))<((t0.c0))) IN ())))) UNION SELECT DISTINCT * FROM vt0, t0 NATURAL JOIN vt1 WHERE (((((((vt0.c0))<((t0.c0))) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, t0 NATURAL JOIN vt1;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE (((('', ((vt1.c0)%(t0.c0)), ((vt1.c0) ISNULL)))<=((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), '-1367827478', (x'' IN ()))))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE ((NOT (((('', ((vt1.c0)%(t0.c0)), ((vt1.c0) ISNULL)))<=((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), '-1367827478', (x'' IN ()))))))) GROUP BY t0.c0, vt1.c0 UNION SELECT t0.c0, vt1.c0 FROM t0, vt1 WHERE (((((('', ((vt1.c0)%(t0.c0)), ((vt1.c0) ISNULL)))<=((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), '-1367827478', (x'' IN ()))))) ISNULL)) GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING ((((((((SUM(t0.c0))OR(GROUP_CONCAT(COUNT(MAX(t0.c0))))))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(TOTAL(SUM(AVG(vt1.c0))))))AND(UPPER(vt1.c0))) UNION ALL SELECT t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING (NOT (((((((((SUM(t0.c0))OR(GROUP_CONCAT(COUNT(MAX(t0.c0))))))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(TOTAL(SUM(AVG(vt1.c0))))))AND(UPPER(vt1.c0))))) UNION ALL SELECT ALL t0.c0 FROM vt1, t0 GROUP BY t0.c0 HAVING ((((((((((SUM(t0.c0))OR(GROUP_CONCAT(COUNT(MAX(t0.c0))))))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(TOTAL(SUM(AVG(vt1.c0))))))AND(UPPER(vt1.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0, vt1;
SELECT t0.c0 FROM t0, vt1 WHERE ((((t0.c0)IS NOT(t0.c0)) IN ())) ORDER BY (((vt1.c0, t0.c0, '-0.0', t0.c0, t0.c0)) BETWEEN ((TYPEOF(vt1.c0), ((vt1.c0)>=(x'e4ca')), (((vt1.c0, vt1.c0, t0.c0)) NOT BETWEEN ((-1.755958752E9, t0.c0, vt1.c0)) AND ((t0.c0, t0.c0, t0.c0))), x'44e0', ((t0.c0)|(t0.c0)))) AND ((CASE WHEN t0.c0 THEN 0.13800965182995484 END, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN '~7cS' THEN vt1.c0 ELSE vt1.c0 END, NULLIF(DISTINCT t0.c0, t0.c0), ((((vt1.c0)AND(t0.c0)))AND(vt1.c0)), ((t0.c0)||(vt1.c0)))))  NULLS LAST;
SELECT t0.c0 FROM t0, vt1 WHERE ((NOT ((((t0.c0)IS NOT(t0.c0)) IN ())))) ORDER BY (((vt1.c0, t0.c0, '-0.0', t0.c0, t0.c0)) BETWEEN ((TYPEOF(vt1.c0), ((vt1.c0)>=(x'e4ca')), (((vt1.c0, vt1.c0, t0.c0)) NOT BETWEEN ((-1.755958752E9, t0.c0, vt1.c0)) AND ((t0.c0, t0.c0, t0.c0))), x'44e0', ((t0.c0)|(t0.c0)))) AND ((CASE WHEN t0.c0 THEN 0.13800965182995484 END, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN '~7cS' THEN vt1.c0 ELSE vt1.c0 END, NULLIF(DISTINCT t0.c0, t0.c0), ((((vt1.c0)AND(t0.c0)))AND(vt1.c0)), ((t0.c0)||(vt1.c0)))))  NULLS LAST;
SELECT t0.c0 FROM t0, vt1 WHERE ((((((t0.c0)IS NOT(t0.c0)) IN ())) ISNULL)) ORDER BY (((vt1.c0, t0.c0, '-0.0', t0.c0, t0.c0)) BETWEEN ((TYPEOF(vt1.c0), ((vt1.c0)>=(x'e4ca')), (((vt1.c0, vt1.c0, t0.c0)) NOT BETWEEN ((-1.755958752E9, t0.c0, vt1.c0)) AND ((t0.c0, t0.c0, t0.c0))), x'44e0', ((t0.c0)|(t0.c0)))) AND ((CASE WHEN t0.c0 THEN 0.13800965182995484 END, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN '~7cS' THEN vt1.c0 ELSE vt1.c0 END, NULLIF(DISTINCT t0.c0, t0.c0), ((((vt1.c0)AND(t0.c0)))AND(vt1.c0)), ((t0.c0)||(vt1.c0)))))  NULLS LAST;
SELECT ALL t0.c0 FROM t0, vt1;
SELECT DISTINCT * FROM vt0, t0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM vt0, t0 NATURAL JOIN vt1 WHERE ((- (((vt0.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0, t0 NATURAL JOIN vt1 WHERE ((NOT ((- (((vt0.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM vt0, t0 NATURAL JOIN vt1 WHERE ((((- (((vt0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM vt0, t0 NATURAL JOIN vt1;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 WHERE ((~ (1812255178))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE ((NOT ((~ (1812255178))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((((~ (1812255178))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (SUM(x''))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT ((NOT (SUM(x''))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (((NOT (SUM(x'')))) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (SUM(x''))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT ((NOT (SUM(x''))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (((NOT (SUM(x'')))) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((((NOT (t0.c0)))LIKE((((t0.c0))!=((t0.c0)))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((NOT (t0.c0)))LIKE((((t0.c0))!=((t0.c0)))))))) UNION ALL SELECT * FROM t0 WHERE ((((((NOT (t0.c0)))LIKE((((t0.c0))!=((t0.c0)))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ('p{]m\*vr') UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ('p{]m\*vr'))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((('p{]m\*vr') ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((CASE WHEN vt1.c0 THEN x'' END IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT ((CASE WHEN vt1.c0 THEN x'' END IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE ((((CASE WHEN vt1.c0 THEN x'' END IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(AVG(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(AVG(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(AVG(t0.c0))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE (CAST(((t0.c0)*(vt0.c0)) AS REAL)) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE ((NOT (CAST(((t0.c0)*(vt0.c0)) AS REAL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE (((CAST(((t0.c0)*(vt0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)AND(t0.c0)))OR(t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((NOT (((((t0.c0)AND(t0.c0)))OR(t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((NOT (((((t0.c0)AND(t0.c0)))OR(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 NOT INDEXED, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((MIN(vt0.c0)) BETWEEN (GLOB(SUM(vt1.c0), vt0.c0)) AND (vt0.c0)) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (((MIN(vt0.c0)) BETWEEN (GLOB(SUM(vt1.c0), vt0.c0)) AND (vt0.c0)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((((MIN(vt0.c0)) BETWEEN (GLOB(SUM(vt1.c0), vt0.c0)) AND (vt0.c0))) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 NOT INDEXED, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((MIN(vt0.c0)) BETWEEN (GLOB(SUM(vt1.c0), vt0.c0)) AND (vt0.c0)) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (((MIN(vt0.c0)) BETWEEN (GLOB(SUM(vt1.c0), vt0.c0)) AND (vt0.c0)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((((MIN(vt0.c0)) BETWEEN (GLOB(SUM(vt1.c0), vt0.c0)) AND (vt0.c0))) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0 FROM vt1 NATURAL JOIN vt0;
SELECT ALL vt0.c0 FROM vt1 NATURAL JOIN vt0 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS REAL)) UNION ALL SELECT vt0.c0 FROM vt1 NATURAL JOIN vt0 WHERE ((NOT (CAST(CAST(vt1.c0 AS TEXT) AS REAL)))) UNION ALL SELECT vt0.c0 FROM vt1 NATURAL JOIN vt0 WHERE (((CAST(CAST(vt1.c0 AS TEXT) AS REAL)) ISNULL));
SELECT ALL vt0.c0 FROM vt1 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 WHERE ((((- (t0.c0)))+(((t0.c0)>=(t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 WHERE ((NOT ((((- (t0.c0)))+(((t0.c0)>=(t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, t0 WHERE ((((((- (t0.c0)))+(((t0.c0)>=(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0, t0.c0, vt1.c0;
SELECT vt0.c0, t0.c0, vt1.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0, t0.c0, vt1.c0 HAVING COUNT(TOTAL(SUM(MIN(vt1.c0))) COLLATE BINARY) UNION ALL SELECT ALL vt0.c0, t0.c0, vt1.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0, t0.c0, vt1.c0 HAVING (NOT (COUNT(TOTAL(SUM(MIN(vt1.c0))) COLLATE BINARY))) UNION ALL SELECT vt0.c0, t0.c0, vt1.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0, t0.c0, vt1.c0 HAVING ((COUNT(TOTAL(SUM(MIN(vt1.c0))) COLLATE BINARY)) ISNULL);
SELECT ALL TOTAL((+ ('-1434336825'))) FROM vt0, vt1 ORDER BY (+ (x''));
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON 'n{';
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON 'n{' WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM) UNION ALL SELECT vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON 'n{' WHERE ((NOT (((vt0.c0) NOTNULL) COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON 'n{' WHERE (((((vt0.c0) NOTNULL) COLLATE RTRIM) ISNULL));
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON 'n{';
SELECT DISTINCT * FROM vt0, vt1, t0;
SELECT DISTINCT * FROM vt0, vt1, t0 WHERE (((((t0.c0) NOT BETWEEN ('z⋊dj') AND (vt0.c0))) ISNULL)) UNION SELECT DISTINCT * FROM vt0, vt1, t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN ('z⋊dj') AND (vt0.c0))) ISNULL)))) UNION SELECT DISTINCT * FROM vt0, vt1, t0 WHERE (((((((t0.c0) NOT BETWEEN ('z⋊dj') AND (vt0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN -311281786 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN -311281786 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN -311281786 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING MAX(((t0.c0) NOT BETWEEN (MAX(t0.c0)) AND (vt0.c0))) UNION ALL SELECT ALL t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING (NOT (MAX(((t0.c0) NOT BETWEEN (MAX(t0.c0)) AND (vt0.c0))))) UNION ALL SELECT t0.c0 FROM vt0, t0 GROUP BY t0.c0 HAVING ((MAX(((t0.c0) NOT BETWEEN (MAX(t0.c0)) AND (vt0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0) NOT NULL)) BETWEEN (t0.c0 COLLATE BINARY) AND (((t0.c0)%(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) NOT NULL)) BETWEEN (t0.c0 COLLATE BINARY) AND (((t0.c0)%(t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0) NOT NULL)) BETWEEN (t0.c0 COLLATE BINARY) AND (((t0.c0)%(t0.c0))))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) ISNULL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE BINARY) ISNULL)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0 COLLATE BINARY) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt1, vt0 WHERE ((((((t0.c0)OR(vt0.c0)))AND(vt1.c0)) IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt1, vt0 WHERE ((NOT ((((((t0.c0)OR(vt0.c0)))AND(vt1.c0)) IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt1, vt0 WHERE ((((((((t0.c0)OR(vt0.c0)))AND(vt1.c0)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT('1253662115')) IS FALSE) COLLATE RTRIM UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT('1253662115')) IS FALSE) COLLATE RTRIM)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT('1253662115')) IS FALSE) COLLATE RTRIM) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT('1253662115')) IS FALSE) COLLATE RTRIM UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT('1253662115')) IS FALSE) COLLATE RTRIM)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT('1253662115')) IS FALSE) COLLATE RTRIM) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((((t0.c0 IN ()))LIKE(((t0.c0)>>(t0.c0))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((t0.c0 IN ()))LIKE(((t0.c0)>>(t0.c0))))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((t0.c0 IN ()))LIKE(((t0.c0)>>(t0.c0))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (ROUND(0.9436913872052064, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (ROUND(0.9436913872052064, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((ROUND(0.9436913872052064, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON (((+ (vt1.c0))) ISNULL) INNER JOIN vt0 ON LOWER(t0.c0 COLLATE BINARY) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON (((+ (vt1.c0))) ISNULL) INNER JOIN vt0 ON LOWER(t0.c0 COLLATE BINARY) WHERE ((((((t0.c0))<((vt1.c0))))-((vt0.c0 IN ())))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON (((+ (vt1.c0))) ISNULL) INNER JOIN vt0 ON LOWER(t0.c0 COLLATE BINARY) WHERE ((NOT ((((((t0.c0))<((vt1.c0))))-((vt0.c0 IN ())))))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON (((+ (vt1.c0))) ISNULL) INNER JOIN vt0 ON LOWER(t0.c0 COLLATE BINARY) WHERE ((((((((t0.c0))<((vt1.c0))))-((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON (((+ (vt1.c0))) ISNULL) INNER JOIN vt0 ON LOWER(t0.c0 COLLATE BINARY) GROUP BY vt0.c0, t0.c0;
SELECT vt1.c0 FROM t0 INNER JOIN vt1 ON 0Xffffffffec51e96c GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0 INNER JOIN vt1 ON 0Xffffffffec51e96c GROUP BY vt1.c0 HAVING 'zp' UNION ALL SELECT ALL vt1.c0 FROM t0 INNER JOIN vt1 ON 0Xffffffffec51e96c GROUP BY vt1.c0 HAVING (NOT ('zp')) UNION ALL SELECT ALL vt1.c0 FROM t0 INNER JOIN vt1 ON 0Xffffffffec51e96c GROUP BY vt1.c0 HAVING (('zp') ISNULL);
SELECT vt1.c0 FROM t0 INNER JOIN vt1 ON 0Xffffffffec51e96c GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0 INNER JOIN vt1 ON 0Xffffffffec51e96c GROUP BY vt1.c0 HAVING 'zp' UNION ALL SELECT ALL vt1.c0 FROM t0 INNER JOIN vt1 ON 0Xffffffffec51e96c GROUP BY vt1.c0 HAVING (NOT ('zp')) UNION ALL SELECT ALL vt1.c0 FROM t0 INNER JOIN vt1 ON 0Xffffffffec51e96c GROUP BY vt1.c0 HAVING (('zp') ISNULL);
SELECT vt1.c0 FROM t0 INNER JOIN vt1 ON 0Xffffffffec51e96c GROUP BY vt1.c0;
SELECT ALL * FROM t0, vt0;
SELECT ALL * FROM t0, vt0 WHERE (LTRIM(((vt0.c0)<(t0.c0)), UNLIKELY(DISTINCT vt0.c0))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT (LTRIM(((vt0.c0)<(t0.c0)), UNLIKELY(DISTINCT vt0.c0))))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((LTRIM(((vt0.c0)<(t0.c0)), UNLIKELY(DISTINCT vt0.c0))) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((t0.c0)>>(t0.c0)) IN ())) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)>>(t0.c0)) IN ())))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0)>>(t0.c0)) IN ())) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (x'') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (x''))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((x'') ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((COUNT(GROUP_CONCAT(MAX(TOTAL(COUNT(*)))))) BETWEEN (x'') AND ((vt1.c0 IN ()))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT(GROUP_CONCAT(MAX(TOTAL(COUNT(*)))))) BETWEEN (x'') AND ((vt1.c0 IN ()))))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((((COUNT(GROUP_CONCAT(MAX(TOTAL(COUNT(*)))))) BETWEEN (x'') AND ((vt1.c0 IN ())))) ISNULL);
SELECT * FROM vt0, t0, vt1;
SELECT * FROM vt0, t0, vt1 WHERE (((CAST(vt1.c0 AS BLOB))||((t0.c0 IN ())))) UNION ALL SELECT ALL * FROM vt0, t0, vt1 WHERE ((NOT (((CAST(vt1.c0 AS BLOB))||((t0.c0 IN ())))))) UNION ALL SELECT ALL * FROM vt0, t0, vt1 WHERE (((((CAST(vt1.c0 AS BLOB))||((t0.c0 IN ())))) ISNULL));
SELECT * FROM vt0, t0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((NOT (vt0.c0))) IS FALSE)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((NOT (vt0.c0))) IS FALSE)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((NOT (vt0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON ((((t0.c0) IS FALSE)) NOTNULL) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON ((((t0.c0) IS FALSE)) NOTNULL) WHERE (CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC)) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON ((((t0.c0) IS FALSE)) NOTNULL) WHERE ((NOT (CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC)))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON ((((t0.c0) IS FALSE)) NOTNULL) WHERE (((CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON ((((t0.c0) IS FALSE)) NOTNULL) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, vt1.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING SUM(MIN(MIN(t0.c0))) UNION ALL SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING (NOT (SUM(MIN(MIN(t0.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING ((SUM(MIN(MIN(t0.c0)))) ISNULL);
SELECT ALL * FROM vt0, t0, vt1;
SELECT ALL * FROM vt0, t0, vt1 WHERE (CAST((('l')&(vt1.c0)) AS REAL)) UNION ALL SELECT ALL * FROM vt0, t0, vt1 WHERE ((NOT (CAST((('l')&(vt1.c0)) AS REAL)))) UNION ALL SELECT * FROM vt0, t0, vt1 WHERE (((CAST((('l')&(vt1.c0)) AS REAL)) ISNULL));
SELECT ALL * FROM vt0, t0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 INNER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (-0.0)))==(vt1.c0));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 INNER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (-0.0)))=(vt1.c0)) WHERE (ABS(((((((((vt0.c0)OR(t0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 INNER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (-0.0)))=(vt1.c0)) WHERE ((NOT (ABS(((((((((vt0.c0)OR(t0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 INNER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (-0.0)))=(vt1.c0)) WHERE (((ABS(((((((((vt0.c0)OR(t0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 INNER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (-0.0)))==(vt1.c0));
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 WHERE (((NULL)GLOB((((vt0.c0))>=((vt1.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT (((NULL)GLOB((((vt0.c0))>=((vt1.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((((NULL)GLOB((((vt0.c0))>=((vt1.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, t0 LEFT OUTER JOIN vt1 ON (- (((t0.c0) ISNULL))) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, t0 LEFT OUTER JOIN vt1 ON (- (((t0.c0) ISNULL))) GROUP BY vt0.c0, vt1.c0 HAVING CASE SUM(COUNT(vt1.c0))  WHEN ((MIN(TOTAL(COUNT(*)))) IS TRUE) THEN AVG(MIN(vt0.c0)) WHEN (((t0.c0, TOTAL(t0.c0), vt1.c0)) NOT BETWEEN ((COUNT(SUM(MAX(SUM(t0.c0)))), COUNT(MIN(x'')), SUM(vt1.c0))) AND ((GROUP_CONCAT(MIN(vt1.c0)), TOTAL(SUM(COUNT(t0.c0))), MIN(AVG(vt1.c0))))) THEN MAX(vt1.c0) WHEN CASE WHEN GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(t0.c0))) THEN vt1.c0 END THEN NULL END UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, t0 LEFT OUTER JOIN vt1 ON (- (((t0.c0) ISNULL))) GROUP BY vt0.c0, vt1.c0 HAVING (NOT (CASE SUM(COUNT(vt1.c0))  WHEN ((MIN(TOTAL(COUNT(*)))) IS TRUE) THEN AVG(MIN(vt0.c0)) WHEN (((t0.c0, TOTAL(t0.c0), vt1.c0)) NOT BETWEEN ((COUNT(SUM(MAX(SUM(t0.c0)))), COUNT(MIN(x'')), SUM(vt1.c0))) AND ((GROUP_CONCAT(MIN(vt1.c0)), TOTAL(SUM(COUNT(t0.c0))), MIN(AVG(vt1.c0))))) THEN MAX(vt1.c0) WHEN CASE WHEN GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(t0.c0))) THEN vt1.c0 END THEN NULL END)) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, t0 LEFT OUTER JOIN vt1 ON (- (((t0.c0) ISNULL))) GROUP BY vt0.c0, vt1.c0 HAVING ((CASE SUM(COUNT(vt1.c0))  WHEN ((MIN(TOTAL(COUNT(*)))) IS TRUE) THEN AVG(MIN(vt0.c0)) WHEN (((t0.c0, TOTAL(t0.c0), vt1.c0)) NOT BETWEEN ((COUNT(SUM(MAX(SUM(t0.c0)))), COUNT(MIN(x'')), SUM(vt1.c0))) AND ((GROUP_CONCAT(MIN(vt1.c0)), TOTAL(SUM(COUNT(t0.c0))), MIN(AVG(vt1.c0))))) THEN MAX(vt1.c0) WHEN CASE WHEN GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(t0.c0))) THEN vt1.c0 END THEN NULL END) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((vt1.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((vt1.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((((vt1.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))) ISNULL));
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON (NOT ((+ (vt0.c0))));
SELECT DISTINCT vt0.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON (NOT ((+ (vt0.c0)))) WHERE (((CAST(t0.c0 AS REAL)) BETWEEN (LIKELY(DISTINCT vt0.c0)) AND (((vt0.c0)OR(vt0.c0))))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON (NOT ((+ (vt0.c0)))) WHERE ((NOT (((CAST(t0.c0 AS REAL)) BETWEEN (LIKELY(DISTINCT vt0.c0)) AND (((vt0.c0)OR(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON (NOT ((+ (vt0.c0)))) WHERE (((((CAST(t0.c0 AS REAL)) BETWEEN (LIKELY(DISTINCT vt0.c0)) AND (((vt0.c0)OR(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0 FROM t0 CROSS JOIN vt0 ON (NOT ((+ (vt0.c0))));
SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt0, t0, vt1 WHERE (CAST(((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) AS REAL)) GROUP BY vt0.c0, vt1.c0, t0.c0 UNION SELECT vt0.c0, vt1.c0, t0.c0 FROM vt0, t0, vt1 WHERE ((NOT (CAST(((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) AS REAL)))) GROUP BY vt0.c0, vt1.c0, t0.c0 UNION SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt0, t0, vt1 WHERE (((CAST(((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) AS REAL)) ISNULL)) GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING TOTAL(MIN(vt1.c0)) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (TOTAL(MIN(vt1.c0)))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, t0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((TOTAL(MIN(vt1.c0))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON CAST(((t0.c0) IS FALSE) AS REAL);
SELECT vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON CAST(((t0.c0) IS FALSE) AS REAL) WHERE ((- (((vt1.c0)/(x'b375caea'))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON CAST(((t0.c0) IS FALSE) AS REAL) WHERE ((NOT ((- (((vt1.c0)/(x'b375caea'))))))) UNION ALL SELECT vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON CAST(((t0.c0) IS FALSE) AS REAL) WHERE ((((- (((vt1.c0)/(x'b375caea'))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON CAST(((t0.c0) IS FALSE) AS REAL);
SELECT DISTINCT t0.c0 FROM t0, vt0;
SELECT DISTINCT t0.c0 FROM t0, vt0 WHERE (((((t0.c0)-(t0.c0))) NOT BETWEEN (((((t0.c0)AND(t0.c0)))AND(t0.c0))) AND ((t0.c0 IN (t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0, vt0 NOT INDEXED WHERE ((NOT (((((t0.c0)-(t0.c0))) NOT BETWEEN (((((t0.c0)AND(t0.c0)))AND(t0.c0))) AND ((t0.c0 IN (t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0, vt0 WHERE (((((((t0.c0)-(t0.c0))) NOT BETWEEN (((((t0.c0)AND(t0.c0)))AND(t0.c0))) AND ((t0.c0 IN (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, vt0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 WHERE (CASE WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0) NOT NULL) END) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE ((NOT (CASE WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0) NOT NULL) END))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 WHERE (((CASE WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0) NOT NULL) END) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((t0.c0)==(t0.c0)) THEN (t0.c0 IN ()) ELSE ((t0.c0) BETWEEN ('F>') AND (vt0.c0)) END GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((t0.c0)==(t0.c0)) THEN (t0.c0 IN ()) ELSE ((t0.c0) BETWEEN ('F>') AND (vt0.c0)) END GROUP BY t0.c0, vt0.c0 HAVING (COUNT(vt0.c0) COLLATE BINARY IN ()) UNION ALL SELECT t0.c0, vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((t0.c0)==(t0.c0)) THEN (t0.c0 IN ()) ELSE ((t0.c0) BETWEEN ('F>') AND (vt0.c0)) END GROUP BY t0.c0, vt0.c0 HAVING (NOT ((COUNT(vt0.c0) COLLATE BINARY IN ()))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((t0.c0)==(t0.c0)) THEN (t0.c0 IN ()) ELSE ((t0.c0) BETWEEN ('F>') AND (vt0.c0)) END GROUP BY t0.c0, vt0.c0 HAVING (((COUNT(vt0.c0) COLLATE BINARY IN ())) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((t0.c0)==(t0.c0)) THEN (t0.c0 IN ()) ELSE ((t0.c0) BETWEEN ('F>') AND (vt0.c0)) END GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((t0.c0)==(t0.c0)) THEN (t0.c0 IN ()) ELSE ((t0.c0) BETWEEN ('F>') AND (vt0.c0)) END GROUP BY t0.c0, vt0.c0 HAVING (COUNT(vt0.c0) COLLATE BINARY IN ()) UNION ALL SELECT t0.c0, vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((t0.c0)==(t0.c0)) THEN (t0.c0 IN ()) ELSE ((t0.c0) BETWEEN ('F>') AND (vt0.c0)) END GROUP BY t0.c0, vt0.c0 HAVING (NOT ((COUNT(vt0.c0) COLLATE BINARY IN ()))) UNION ALL SELECT ALL t0.c0, vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((t0.c0)==(t0.c0)) THEN (t0.c0 IN ()) ELSE ((t0.c0) BETWEEN ('F>') AND (vt0.c0)) END GROUP BY t0.c0, vt0.c0 HAVING (((COUNT(vt0.c0) COLLATE BINARY IN ())) ISNULL);
SELECT ALL t0.c0, vt0.c0 FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((t0.c0)==(t0.c0)) THEN (t0.c0 IN ()) ELSE ((t0.c0) BETWEEN ('F>') AND (vt0.c0)) END GROUP BY t0.c0, vt0.c0;
SELECT ALL * FROM t0, vt1 INNER JOIN vt0 ON (((t0.c0 IN ()))%(json_type(t0.c0)));
SELECT * FROM t0, vt1 INNER JOIN vt0 ON (((t0.c0 IN ()))%(json_type(t0.c0))) WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE RTRIM) UNION ALL SELECT ALL * FROM t0, vt1 INNER JOIN vt0 ON (((t0.c0 IN ()))%(json_type(t0.c0))) WHERE ((NOT (CAST(vt1.c0 AS NUMERIC) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM t0, vt1 INNER JOIN vt0 ON (((t0.c0 IN ()))%(json_type(t0.c0))) WHERE (((CAST(vt1.c0 AS NUMERIC) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM t0, vt1 INNER JOIN vt0 ON (((t0.c0 IN ()))%(json_type(t0.c0)));
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((((~ (t0.c0))))<=((((vt0.c0) NOT NULL))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((((~ (t0.c0))))<=((((vt0.c0) NOT NULL))))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((((~ (t0.c0))))<=((((vt0.c0) NOT NULL))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, x'013f'))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0)&('-1879462783'))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 NOT INDEXED WHERE ((NOT ((((vt0.c0 IN (vt0.c0, x'013f'))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0)&('-1879462783'))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN (vt0.c0, x'013f'))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0)&('-1879462783'))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 INNER JOIN vt0 ON vt0.c0 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 INNER JOIN vt0 ON vt0.c0 GROUP BY vt1.c0, t0.c0 HAVING (COUNT(*) IN ()) UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, t0 INNER JOIN vt0 ON vt0.c0 GROUP BY vt1.c0, t0.c0 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 INNER JOIN vt0 ON vt0.c0 GROUP BY vt1.c0, t0.c0 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 INNER JOIN vt0 ON vt0.c0 GROUP BY vt1.c0, t0.c0;
SELECT vt1.c0, t0.c0 FROM vt1, t0 INNER JOIN vt0 ON vt0.c0 GROUP BY vt1.c0, t0.c0 HAVING (COUNT(*) IN ()) UNION ALL SELECT vt1.c0, t0.c0 FROM vt1, t0 INNER JOIN vt0 ON vt0.c0 GROUP BY vt1.c0, t0.c0 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 INNER JOIN vt0 ON vt0.c0 GROUP BY vt1.c0, t0.c0 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT ALL vt1.c0, t0.c0 FROM vt1, t0 INNER JOIN vt0 ON vt0.c0 GROUP BY vt1.c0, t0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (UNLIKELY(DISTINCT TRIM(DISTINCT vt0.c0, vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (UNLIKELY(DISTINCT TRIM(DISTINCT vt0.c0, vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((UNLIKELY(DISTINCT TRIM(DISTINCT vt0.c0, vt0.c0))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM vt1 FULL OUTER JOIN t0 ON ((((-768197774) BETWEEN (t0.c0) AND (t0.c0)))LIKE((NOT (t0.c0)))) FULL OUTER JOIN vt0 ON (((t0.c0)) NOT BETWEEN ((((t0.c0) NOTNULL))) AND ((((vt1.c0)*('E+4')))));
SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM vt1 FULL OUTER JOIN t0 ON ((((-768197774) BETWEEN (t0.c0) AND (t0.c0)))LIKE((NOT (t0.c0)))) FULL OUTER JOIN vt0 ON (((t0.c0)) NOT BETWEEN ((((t0.c0) NOTNULL))) AND ((((vt1.c0)*('E+4'))))) WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM vt1 FULL OUTER JOIN t0 ON ((((-768197774) BETWEEN (t0.c0) AND (t0.c0)))LIKE((NOT (t0.c0)))) FULL OUTER JOIN vt0 ON (((t0.c0)) NOT BETWEEN ((((t0.c0) NOTNULL))) AND ((((vt1.c0)*('E+4'))))) WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM vt1 FULL OUTER JOIN t0 ON ((((-768197774) BETWEEN (t0.c0) AND (t0.c0)))LIKE((NOT (t0.c0)))) FULL OUTER JOIN vt0 ON (((t0.c0)) NOT BETWEEN ((((t0.c0) NOTNULL))) AND ((((vt1.c0)*('E+4'))))) WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM vt1 FULL OUTER JOIN t0 ON ((((-768197774) BETWEEN (t0.c0) AND (t0.c0)))LIKE((NOT (t0.c0)))) FULL OUTER JOIN vt0 ON (((t0.c0)) NOT BETWEEN ((((t0.c0) NOTNULL))) AND ((((vt1.c0)*('E+4')))));
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 WHERE (CASE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))  WHEN t0.c0 COLLATE RTRIM THEN 0.6607308054104958 ELSE t0.c0 COLLATE NOCASE END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt0 WHERE ((NOT (CASE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))  WHEN t0.c0 COLLATE RTRIM THEN 0.6607308054104958 ELSE t0.c0 COLLATE NOCASE END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt0 WHERE (((CASE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))  WHEN t0.c0 COLLATE RTRIM THEN 0.6607308054104958 ELSE t0.c0 COLLATE NOCASE END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT vt0.c0, vt1.c0, t0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING CAST(AVG(SUM(SUM(vt0.c0))) AS NUMERIC) UNION ALL SELECT vt0.c0, vt1.c0, t0.c0 FROM vt1, t0, vt0 GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING (NOT (CAST(AVG(SUM(SUM(vt0.c0))) AS NUMERIC))) UNION ALL SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt1, t0 NOT INDEXED, vt0 GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING ((CAST(AVG(SUM(SUM(vt0.c0))) AS NUMERIC)) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (((t0.c0)IS NOT(t0.c0)) COLLATE NOCASE COLLATE NOCASE) UNION ALL SELECT * FROM t0 WHERE ((NOT (((t0.c0)IS NOT(t0.c0)) COLLATE NOCASE COLLATE NOCASE))) UNION ALL SELECT * FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0)) COLLATE NOCASE COLLATE NOCASE) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)<<('.bv<y|潭y')))>=(((t0.c0)%(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0)<<('.bv<y|潭y')))>=(((t0.c0)%(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)<<('.bv<y|潭y')))>=(((t0.c0)%(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0, t0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0, vt1 WHERE (((CAST(vt1.c0 AS REAL))<<(vt0.c0))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM vt0, t0, vt1 WHERE ((NOT (((CAST(vt1.c0 AS REAL))<<(vt0.c0))))) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM vt0, t0, vt1 WHERE (((((CAST(vt1.c0 AS REAL))<<(vt0.c0))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0, t0, vt1 GROUP BY vt0.c0, t0.c0;
SELECT t0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt1.c0 HAVING ((((t0.c0) IS FALSE))<=(MAX(NULL))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt1.c0 HAVING (NOT (((((t0.c0) IS FALSE))<=(MAX(NULL))))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt1.c0 HAVING ((((((t0.c0) IS FALSE))<=(MAX(NULL)))) ISNULL);
SELECT t0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT ALL t0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt1.c0 HAVING ((((t0.c0) IS FALSE))<=(MAX(NULL))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt1.c0 HAVING (NOT (((((t0.c0) IS FALSE))<=(MAX(NULL))))) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt1.c0 HAVING ((((((t0.c0) IS FALSE))<=(MAX(NULL)))) ISNULL);
SELECT t0.c0, vt1.c0 FROM vt0, vt1, t0 GROUP BY t0.c0, vt1.c0;
SELECT * FROM vt0, t0, vt1;
SELECT * FROM vt0, t0, vt1 WHERE (CAST(ABS(t0.c0) AS TEXT)) UNION ALL SELECT * FROM vt0, t0, vt1 WHERE ((NOT (CAST(ABS(t0.c0) AS TEXT)))) UNION ALL SELECT ALL * FROM vt0, t0, vt1 WHERE (((CAST(ABS(t0.c0) AS TEXT)) ISNULL));
SELECT * FROM vt0, t0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.5337085679251049 THEN vt1.c0 END) NOT NULL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.5337085679251049 THEN vt1.c0 END) NOT NULL)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.5337085679251049 THEN vt1.c0 END) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((((vt1.c0) IS TRUE)))>=((vt0.c0 COLLATE NOCASE)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((((vt1.c0) IS TRUE)))>=((vt0.c0 COLLATE NOCASE)))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((((((vt1.c0) IS TRUE)))>=((vt0.c0 COLLATE NOCASE)))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, vt1.c0 FROM t0, vt1 GROUP BY t0.c0, vt1.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0 INDEXED BY i53, t0;
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0;
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE (((CAST(t0.c0 AS TEXT)) IS FALSE)) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE ((NOT (((CAST(t0.c0 AS TEXT)) IS FALSE)))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0 WHERE (((((CAST(t0.c0 AS TEXT)) IS FALSE)) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0 FROM vt1, t0;
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t0 WHERE (NULL) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, t0 WHERE ((NOT (NULL))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, t0 WHERE (((NULL) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, t0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(0.015087772235520047) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(0.015087772235520047))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(0.015087772235520047)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(0.015087772235520047) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(0.015087772235520047))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(0.015087772235520047)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((((((((vt1.c0)AND(vt1.c0)))AND(NULL)))OR(t0.c0)))AND(t0.c0)))-(CAST(t0.c0 AS REAL))) INNER JOIN t0 ON ((((t0.c0)|(vt1.c0)))IS NOT(vt1.c0));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN vt1 ON ((t0.c0)AND((((0.2683560541026062))<((vt0.c0))))) FULL OUTER JOIN vt0 ON CAST(vt0.c0 COLLATE BINARY AS TEXT);
SELECT vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 WHERE (((vt0.c0) IS TRUE)) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 WHERE ((NOT (((vt0.c0) IS TRUE)))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 WHERE (((((vt0.c0) IS TRUE)) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG((t0.c0 IN (t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG((t0.c0 IN (t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG((t0.c0 IN (t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG((t0.c0 IN (t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG((t0.c0 IN (t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG((t0.c0 IN (t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (((vt0.c0 COLLATE BINARY) NOTNULL)) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (((vt0.c0 COLLATE BINARY) NOTNULL)))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((((vt0.c0 COLLATE BINARY) NOTNULL)) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM vt1 CROSS JOIN t0 ON (((NULL) BETWEEN (vt1.c0) AND (vt0.c0)) IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'80d6' THEN t0.c0 END)) CROSS JOIN vt0 ON ((((t0.c0) ISNULL)) NOT NULL);
SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM vt1 CROSS JOIN t0 ON (((NULL) BETWEEN (vt1.c0) AND (vt0.c0)) IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'80d6' THEN t0.c0 END)) CROSS JOIN vt0 ON ((((t0.c0) ISNULL)) NOT NULL) WHERE (vt0.c0) UNION SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM vt1 CROSS JOIN t0 ON (((NULL) BETWEEN (vt1.c0) AND (vt0.c0)) IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'80d6' THEN t0.c0 END)) CROSS JOIN vt0 ON ((((t0.c0) ISNULL)) NOT NULL) WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM vt1 CROSS JOIN t0 ON (((NULL) BETWEEN (vt1.c0) AND (vt0.c0)) IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'80d6' THEN t0.c0 END)) CROSS JOIN vt0 ON ((((t0.c0) ISNULL)) NOT NULL) WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0, vt0.c0 FROM vt1 CROSS JOIN t0 ON (((NULL) BETWEEN (vt1.c0) AND (vt0.c0)) IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'80d6' THEN t0.c0 END)) CROSS JOIN vt0 ON ((((t0.c0) ISNULL)) NOT NULL);
SELECT ALL vt0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0, t0 WHERE (CASE WHEN (NOT (vt1.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) ELSE '6V斬q)\XD' END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0, t0 WHERE ((NOT (CASE WHEN (NOT (vt1.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) ELSE '6V斬q)\XD' END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0, t0 WHERE (((CASE WHEN (NOT (vt1.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) ELSE '6V斬q)\XD' END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(TOTAL(MIN(vt1.c0)) COLLATE RTRIM) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(TOTAL(MIN(vt1.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(TOTAL(MIN(vt1.c0)) COLLATE RTRIM)) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (json_type((('')<(vt0.c0)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (json_type((('')<(vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((json_type((('')<(vt0.c0)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt1.c0, t0.c0 FROM t0 NATURAL JOIN vt1;
SELECT DISTINCT vt1.c0, t0.c0 FROM t0 NATURAL JOIN vt1 WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM t0 NATURAL JOIN vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0, t0.c0 FROM t0 NATURAL JOIN vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c0, t0.c0 FROM t0 NATURAL JOIN vt1;
SELECT ALL vt0.c0, t0.c0 FROM vt1, t0 CROSS JOIN vt0 ON vt1.c0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt1 NOT INDEXED, t0 CROSS JOIN vt0 ON vt1.c0 WHERE (((((vt0.c0)*(vt1.c0)))<(((vt1.c0) NOTNULL)))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt1, t0 CROSS JOIN vt0 ON vt1.c0 WHERE ((NOT (((((vt0.c0)*(vt1.c0)))<(((vt1.c0) NOTNULL)))))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM vt1, t0 CROSS JOIN vt0 ON vt1.c0 WHERE (((((((vt0.c0)*(vt1.c0)))<(((vt1.c0) NOTNULL)))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt1, t0 CROSS JOIN vt0 ON vt1.c0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((COUNT(COUNT(*)))) NOT BETWEEN ((MIN(TOTAL(COUNT(vt1.c0))))) AND ((((vt1.c0) IS FALSE)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((COUNT(COUNT(*)))) NOT BETWEEN ((MIN(TOTAL(COUNT(vt1.c0))))) AND ((((vt1.c0) IS FALSE)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((COUNT(COUNT(*)))) NOT BETWEEN ((MIN(TOTAL(COUNT(vt1.c0))))) AND ((((vt1.c0) IS FALSE))))) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE (((((t0.c0)%(t0.c0))) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((((t0.c0, 0.4581143382259276, t0.c0))>=((vt1.c0, vt1.c0, vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT (((((t0.c0)%(t0.c0))) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((((t0.c0, 0.4581143382259276, t0.c0))>=((vt1.c0, vt1.c0, vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1 NOT INDEXED, t0 WHERE (((((((t0.c0)%(t0.c0))) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((((t0.c0, 0.4581143382259276, t0.c0))>=((vt1.c0, vt1.c0, vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT vt1.c0 FROM vt1, t0, vt0 INDEXED BY i53 GROUP BY vt1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((t0.c0 IN ()))<(MIN(MAX(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((t0.c0 IN ()))<(MIN(MAX(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((t0.c0 IN ()))<(MIN(MAX(t0.c0))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) ELSE vt0.c0 COLLATE NOCASE END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE WHEN (~ (vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) ELSE vt0.c0 COLLATE NOCASE END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE WHEN (~ (vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) ELSE vt0.c0 COLLATE NOCASE END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (((vt0.c0)<>(vt1.c0)) COLLATE BINARY) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT (((vt0.c0)<>(vt1.c0)) COLLATE BINARY))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE (((((vt0.c0)<>(vt1.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt1, t0 INNER JOIN vt0 ON (- (((vt0.c0) ISNULL))) GROUP BY vt0.c0, vt1.c0, t0.c0;
SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt1, t0 INNER JOIN vt0 ON (- (((vt0.c0) ISNULL))) GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING TOTAL(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT ALL vt0.c0, vt1.c0, t0.c0 FROM vt1, t0 INNER JOIN vt0 ON (- (((vt0.c0) ISNULL))) GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT vt0.c0, vt1.c0, t0.c0 FROM vt1, t0 INNER JOIN vt0 ON (- (((vt0.c0) ISNULL))) GROUP BY vt0.c0, vt1.c0, t0.c0 HAVING ((TOTAL(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt1, vt0;
SELECT vt0.c0 FROM vt1, vt0 WHERE (((((vt0.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt0.c0, x''))) IN ())) UNION ALL SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((vt0.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt0.c0, x''))) IN ())))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 WHERE (((((((vt0.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt0.c0, x''))) IN ())) ISNULL));
SELECT ALL vt0.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt0, vt1, t0;
SELECT DISTINCT * FROM vt0, vt1, t0 WHERE (CAST(0.5691233390529802 AS INTEGER)) UNION SELECT DISTINCT * FROM vt0, vt1, t0 WHERE ((NOT (CAST(0.5691233390529802 AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0, vt1, t0 WHERE (((CAST(0.5691233390529802 AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((NULL)) AND (((+ (vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((NULL)) AND (((+ (vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((NULL)) AND (((+ (vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0 HAVING ((((CAST(MAX(COUNT(*)) AS NUMERIC))AND((MIN(GROUP_CONCAT(GROUP_CONCAT(MAX(AVG(GROUP_CONCAT(vt0.c0)))))) IN (COUNT(SUM(SUM(MIN(t0.c0)))))))))OR((AVG(vt0.c0) IN (COUNT(MAX(vt0.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (((((CAST(MAX(COUNT(*)) AS NUMERIC))AND((MIN(GROUP_CONCAT(GROUP_CONCAT(MAX(AVG(GROUP_CONCAT(vt0.c0)))))) IN (COUNT(SUM(SUM(MIN(t0.c0)))))))))OR((AVG(vt0.c0) IN (COUNT(MAX(vt0.c0)))))))) UNION ALL SELECT ALL vt1.c0 FROM t0, vt0, vt1 GROUP BY vt1.c0 HAVING ((((((CAST(MAX(COUNT(*)) AS NUMERIC))AND((MIN(GROUP_CONCAT(GROUP_CONCAT(MAX(AVG(GROUP_CONCAT(vt0.c0)))))) IN (COUNT(SUM(SUM(MIN(t0.c0)))))))))OR((AVG(vt0.c0) IN (COUNT(MAX(vt0.c0))))))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (CAST((~ (t0.c0)) AS INTEGER)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CAST((~ (t0.c0)) AS INTEGER)))) UNION ALL SELECT ALL * FROM t0 WHERE (((CAST((~ (t0.c0)) AS INTEGER)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST((+ (vt1.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST((+ (vt1.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST((+ (vt1.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM t0 INNER JOIN vt1 ON ((((((vt1.c0)AND(t0.c0)))AND(t0.c0)))/(t0.c0)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0 INNER JOIN vt1 ON ((((((vt1.c0)AND(t0.c0)))AND(t0.c0)))/(t0.c0)) WHERE ((((((((vt1.c0))>=((vt1.c0))))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(t0.c0 COLLATE BINARY))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t0 INNER JOIN vt1 ON ((((((vt1.c0)AND(t0.c0)))AND(t0.c0)))/(t0.c0)) WHERE ((NOT ((((((((vt1.c0))>=((vt1.c0))))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(t0.c0 COLLATE BINARY))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM t0 INNER JOIN vt1 ON ((((((vt1.c0)AND(t0.c0)))AND(t0.c0)))/(t0.c0)) WHERE ((((((((((vt1.c0))>=((vt1.c0))))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(t0.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0 INNER JOIN vt1 ON ((((((vt1.c0)AND(t0.c0)))AND(t0.c0)))/(t0.c0)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) NOT BETWEEN (MIN(TOTAL(t0.c0))) AND (((((AVG(GROUP_CONCAT(TOTAL(COUNT(t0.c0)))))OR(SUM(AVG(t0.c0)))))AND(COUNT(MAX(t0.c0)))))) UNION ALL SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT(*)) NOT BETWEEN (MIN(TOTAL(t0.c0))) AND (((((AVG(GROUP_CONCAT(TOTAL(COUNT(t0.c0)))))OR(SUM(AVG(t0.c0)))))AND(COUNT(MAX(t0.c0)))))))) UNION ALL SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING ((((COUNT(*)) NOT BETWEEN (MIN(TOTAL(t0.c0))) AND (((((AVG(GROUP_CONCAT(TOTAL(COUNT(t0.c0)))))OR(SUM(AVG(t0.c0)))))AND(COUNT(MAX(t0.c0))))))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((((((((CAST(NULL AS TEXT))AND(t0.c0)))AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)))))AND(((((t0.c0)OR(t0.c0)))OR(t0.c0)))))AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((((((CAST(NULL AS TEXT))AND(t0.c0)))AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)))))AND(((((t0.c0)OR(t0.c0)))OR(t0.c0)))))AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((((((CAST(NULL AS TEXT))AND(t0.c0)))AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)))))AND(((((t0.c0)OR(t0.c0)))OR(t0.c0)))))AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT vt0.c0, vt1.c0, t0.c0 FROM t0, vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0, t0.c0 FROM t0, vt1, vt0 WHERE (ABS(DISTINCT SUBSTR(t0.c0, vt1.c0))) UNION SELECT DISTINCT vt0.c0, vt1.c0, t0.c0 FROM t0, vt1, vt0 WHERE ((NOT (ABS(DISTINCT SUBSTR(t0.c0, vt1.c0))))) UNION SELECT DISTINCT vt0.c0, vt1.c0, t0.c0 FROM t0, vt1, vt0 WHERE (((ABS(DISTINCT SUBSTR(t0.c0, vt1.c0))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, t0.c0 FROM t0, vt1, vt0;
SELECT vt1.c0, t0.c0, vt0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0, vt0.c0;
SELECT vt1.c0, t0.c0, vt0.c0 FROM vt1, vt0, t0 WHERE (t0.c0) GROUP BY vt1.c0, t0.c0, vt0.c0 UNION SELECT ALL vt1.c0, t0.c0, vt0.c0 FROM vt1, vt0, t0 WHERE ((NOT (t0.c0))) GROUP BY vt1.c0, t0.c0, vt0.c0 UNION SELECT ALL vt1.c0, t0.c0, vt0.c0 FROM vt1, vt0, t0 WHERE (((t0.c0) ISNULL)) GROUP BY vt1.c0, t0.c0, vt0.c0;
SELECT vt1.c0, t0.c0, vt0.c0 FROM vt1, vt0, t0 GROUP BY vt1.c0, t0.c0, vt0.c0;
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING MIN(((t0.c0)>(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT (MIN(((t0.c0)>(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING ((MIN(((t0.c0)>(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING MIN(((t0.c0)>(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING (NOT (MIN(((t0.c0)>(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0 HAVING ((MIN(((t0.c0)>(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0, vt1 GROUP BY t0.c0;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0))) NOT BETWEEN (((t0.c0) ISNULL)) AND (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((((t0.c0)OR(t0.c0)))AND(t0.c0))) NOT BETWEEN (((t0.c0) ISNULL)) AND (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))AND(t0.c0))) NOT BETWEEN (((t0.c0) ISNULL)) AND (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM vt1 INNER JOIN t0 ON ((CASE t0.c0  WHEN x'4d18' THEN vt1.c0 ELSE t0.c0 END) NOTNULL);
SELECT DISTINCT * FROM vt1 INNER JOIN t0 ON ((CASE t0.c0  WHEN x'4d18' THEN vt1.c0 ELSE t0.c0 END) NOTNULL) WHERE (x'') UNION SELECT DISTINCT * FROM vt1 INNER JOIN t0 ON ((CASE t0.c0  WHEN x'4d18' THEN vt1.c0 ELSE t0.c0 END) NOTNULL) WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN t0 ON ((CASE t0.c0  WHEN x'4d18' THEN vt1.c0 ELSE t0.c0 END) NOTNULL) WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN t0 ON ((CASE t0.c0  WHEN x'4d18' THEN vt1.c0 ELSE t0.c0 END) NOTNULL);
SELECT vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt1, vt0 WHERE (((x'')-(CAST(t0.c0 AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt1, vt0 WHERE ((NOT (((x'')-(CAST(t0.c0 AS INTEGER)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt1, vt0 WHERE (((((x'')-(CAST(t0.c0 AS INTEGER)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(CASE WHEN vt0.c0 THEN GROUP_CONCAT(TOTAL(MIN(vt0.c0))) WHEN TOTAL(TOTAL(MAX(vt0.c0))) THEN COUNT(*) WHEN vt0.c0 THEN COUNT(*) WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE TOTAL(GROUP_CONCAT(GROUP_CONCAT(MAX(COUNT(*))))) END) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(CASE WHEN vt0.c0 THEN GROUP_CONCAT(TOTAL(MIN(vt0.c0))) WHEN TOTAL(TOTAL(MAX(vt0.c0))) THEN COUNT(*) WHEN vt0.c0 THEN COUNT(*) WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE TOTAL(GROUP_CONCAT(GROUP_CONCAT(MAX(COUNT(*))))) END))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(CASE WHEN vt0.c0 THEN GROUP_CONCAT(TOTAL(MIN(vt0.c0))) WHEN TOTAL(TOTAL(MAX(vt0.c0))) THEN COUNT(*) WHEN vt0.c0 THEN COUNT(*) WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE TOTAL(GROUP_CONCAT(GROUP_CONCAT(MAX(COUNT(*))))) END)) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ('l') UNION ALL SELECT * FROM vt0 WHERE ((NOT ('l'))) UNION ALL SELECT * FROM vt0 WHERE ((('l') ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (CAST((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) AS INTEGER)) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (CAST((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((CAST((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CAST(-1200840132 AS BLOB)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(-1200840132 AS BLOB)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(-1200840132 AS BLOB)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0))=(COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(vt0.c0))==(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(vt0.c0))==(COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0))=(COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(vt0.c0))==(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(vt0.c0))==(COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0 NOT INDEXED, vt1;
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0 NOT INDEXED, vt1;
SELECT DISTINCT vt0.c0 FROM t0, vt1 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c0 FROM t0, vt1 NATURAL JOIN vt0 WHERE (CASE WHEN ((0.0711341637842332) BETWEEN (t0.c0) AND (vt0.c0)) THEN json_quote(vt0.c0) WHEN ((vt0.c0)==(vt0.c0)) THEN vt1.c0 WHEN NULL THEN CAST(t0.c0 AS TEXT) END) UNION SELECT DISTINCT vt0.c0 FROM t0, vt1 NATURAL JOIN vt0 WHERE ((NOT (CASE WHEN ((0.0711341637842332) BETWEEN (t0.c0) AND (vt0.c0)) THEN json_quote(vt0.c0) WHEN ((vt0.c0)=(vt0.c0)) THEN vt1.c0 WHEN NULL THEN CAST(t0.c0 AS TEXT) END))) UNION SELECT DISTINCT vt0.c0 FROM t0, vt1 NATURAL JOIN vt0 WHERE (((CASE WHEN ((0.0711341637842332) BETWEEN (t0.c0) AND (vt0.c0)) THEN json_quote(vt0.c0) WHEN ((vt0.c0)=(vt0.c0)) THEN vt1.c0 WHEN NULL THEN CAST(t0.c0 AS TEXT) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0, vt1 NATURAL JOIN vt0;
SELECT ALL t0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM vt0 NOT INDEXED, vt1, t0 WHERE (((((t0.c0)AND(t0.c0)))OR(vt1.c0)) COLLATE NOCASE) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, vt1, t0 WHERE ((NOT (((((t0.c0)AND(t0.c0)))OR(vt1.c0)) COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM vt0, vt1, t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(vt1.c0)) COLLATE NOCASE) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM vt0, vt1, t0 GROUP BY t0.c0;
SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING TOTAL(MAX(0.8298083918993401)) UNION ALL SELECT vt1.c0 FROM t0, vt1 NOT INDEXED GROUP BY vt1.c0 HAVING (NOT (TOTAL(MAX(0.8298083918993401)))) UNION ALL SELECT vt1.c0 FROM t0, vt1 GROUP BY vt1.c0 HAVING ((TOTAL(MAX(0.8298083918993401))) ISNULL);
SELECT ALL vt0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)<(vt1.c0)))IS(vt1.c0)) LEFT OUTER JOIN vt0 ON 0.2900495204171547;
SELECT ALL vt0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)<(vt1.c0)))IS(vt1.c0)) LEFT OUTER JOIN vt0 ON 0.2900495204171547 WHERE (((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))LIKE(((vt1.c0)>(t0.c0))))) ORDER BY (~ (t0.c0)) COLLATE BINARY, vt0.c0  NULLS LAST;
SELECT ALL vt0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)<(vt1.c0)))IS(vt1.c0)) LEFT OUTER JOIN vt0 ON 0.2900495204171547 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))LIKE(((vt1.c0)>(t0.c0))))))) ORDER BY (~ (t0.c0)) COLLATE BINARY, vt0.c0  NULLS LAST;
SELECT vt0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)<(vt1.c0)))IS(vt1.c0)) LEFT OUTER JOIN vt0 ON 0.2900495204171547 WHERE (((((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))LIKE(((vt1.c0)>(t0.c0))))) ISNULL)) ORDER BY (~ (t0.c0)) COLLATE BINARY, vt0.c0  NULLS LAST;
SELECT ALL vt0.c0 FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)<(vt1.c0)))IS(vt1.c0)) LEFT OUTER JOIN vt0 ON 0.2900495204171547;
SELECT DISTINCT * FROM vt1, t0;
SELECT DISTINCT * FROM vt1, t0 WHERE (((((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))==(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))==(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) UNION SELECT DISTINCT * FROM vt1, t0 WHERE (((((((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))=(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, t0;
SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM vt1 NOT INDEXED, t0, vt0 GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT vt1.c0, vt0.c0, t0.c0 FROM vt1, t0, vt0 WHERE (((CAST(t0.c0 AS NUMERIC)) NOT BETWEEN (((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) AND (((0.03845673030099417)*(vt1.c0))))) GROUP BY vt1.c0, vt0.c0, t0.c0 UNION SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM vt1, t0, vt0 WHERE ((NOT (((CAST(t0.c0 AS NUMERIC)) NOT BETWEEN (((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) AND (((0.03845673030099417)*(vt1.c0))))))) GROUP BY vt1.c0, vt0.c0, t0.c0 UNION SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM vt1, t0, vt0 WHERE (((((CAST(t0.c0 AS NUMERIC)) NOT BETWEEN (((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) AND (((0.03845673030099417)*(vt1.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT ALL vt1.c0, vt0.c0, t0.c0 FROM vt1 NOT INDEXED, t0, vt0 GROUP BY vt1.c0, vt0.c0, t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(t0.c0 AS NUMERIC) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(t0.c0 AS NUMERIC))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(t0.c0 AS NUMERIC)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(t0.c0 AS NUMERIC) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(t0.c0 AS NUMERIC))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(t0.c0 AS NUMERIC)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE ((+ (vt0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT ((+ (vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((((+ (vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1, t0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1, t0 WHERE (((((vt0.c0)>(t0.c0))) BETWEEN (('ꕌWLh' IN ())) AND ((((0.12238190963795104, vt0.c0, vt1.c0))==((x'', vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1, t0 NOT INDEXED WHERE ((NOT (((((vt0.c0)>(t0.c0))) BETWEEN (('ꕌWLh' IN ())) AND ((((0.12238190963795104, vt0.c0, vt1.c0))=((x'', vt0.c0, vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1, t0 WHERE (((((((vt0.c0)>(t0.c0))) BETWEEN (('ꕌWLh' IN ())) AND ((((0.12238190963795104, vt0.c0, vt1.c0))=((x'', vt0.c0, vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1, t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (0.11688657283619541) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (0.11688657283619541))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((0.11688657283619541) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING SUM(((((((((MIN(AVG(COUNT(COUNT(*)))))OR(TOTAL(t0.c0))))OR(vt0.c0)))AND(t0.c0)))OR(MIN(TOTAL(SUM(AVG(t0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING (NOT (SUM(((((((((MIN(AVG(COUNT(COUNT(*)))))OR(TOTAL(t0.c0))))OR(vt0.c0)))AND(t0.c0)))OR(MIN(TOTAL(SUM(AVG(t0.c0))))))))) UNION ALL SELECT vt0.c0 FROM vt0, t0 GROUP BY vt0.c0 HAVING ((SUM(((((((((MIN(AVG(COUNT(COUNT(*)))))OR(TOTAL(t0.c0))))OR(vt0.c0)))AND(t0.c0)))OR(MIN(TOTAL(SUM(AVG(t0.c0)))))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((NOT (x''))))<((CAST(vt0.c0 AS NUMERIC))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((NOT (x''))))<((CAST(vt0.c0 AS NUMERIC))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((NOT (x''))))<((CAST(vt0.c0 AS NUMERIC))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((- (vt1.c0)) IN ((((vt1.c0))=((vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((- (vt1.c0)) IN ((((vt1.c0))==((vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((- (vt1.c0)) IN ((((vt1.c0))==((vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((+ (t0.c0))) IS TRUE)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((+ (t0.c0))) IS TRUE)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((+ (t0.c0))) IS TRUE)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0 HAVING (GROUP_CONCAT(COUNT(MAX(vt1.c0))) IN ()) UNION ALL SELECT vt0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0 HAVING (NOT ((GROUP_CONCAT(COUNT(MAX(vt1.c0))) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0 HAVING (((GROUP_CONCAT(COUNT(MAX(vt1.c0))) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0 HAVING (GROUP_CONCAT(COUNT(MAX(vt1.c0))) IN ()) UNION ALL SELECT vt0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0 HAVING (NOT ((GROUP_CONCAT(COUNT(MAX(vt1.c0))) IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0 HAVING (((GROUP_CONCAT(COUNT(MAX(vt1.c0))) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt1, vt0, t0 GROUP BY vt0.c0;
