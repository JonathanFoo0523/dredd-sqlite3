-- Time: 2024/06/11 07:31:36
-- Database: database63
-- Database version: 3.40.0
-- seed value: 2113753563
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 0ms;
UPDATE OR FAIL vt0 SET c0=x'8c15' WHERE CAST('' AS TEXT) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.8653561711116527) WHERE ((TYPEOF(vt0.c0)) IS FALSE); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1867956096);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE vt0 SET c0=0.8653561711116527; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (''); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
DELETE FROM vt0 WHERE ((((((((vt0.c0)AND(((vt0.c0)&(vt0.c0)))))AND(((vt0.c0) BETWEEN (-1.867956096E9) AND (vt0.c0)))))OR(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) ISNULL))); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=-1.867956096E9 WHERE UNLIKELY(QUOTE(vt0.c0)); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=(0.191855157818541); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '19006'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED); -- 0ms;
DROP TABLE IF EXISTS vt1; -- 1ms;
UPDATE vt0 SET c0='' WHERE (- (CASE WHEN vt0.c0 THEN vt0.c0 END)); -- 0ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END; -- 0ms;
COMMIT; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (''); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE ((LTRIM(vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (vt0.c0)); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR REPLACE vt0 SET (c0)=(x'0959'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('0.8653561711116527') WHERE ((((vt0.c0)*(vt0.c0))) BETWEEN (((vt0.c0)>(vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)); -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (640340930), (''), ('640340930'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE '3)'; -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (0.9573909094164217); -- 1ms;
REINDEX  vt0; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '55451'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0x43ffcac3); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 425154309);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=12'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'') WHERE (NOT (vt0.c0)) COLLATE RTRIM; -- 3ms;
PRAGMA journal_mode; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2041217790); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '41237'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '45435'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.auto_vacuum; -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 BLOB ); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX  rt0; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.28414046190932474) WHERE ((640340930 COLLATE RTRIM)IS(((1403693845) NOT BETWEEN (vt0.c0) AND (vt0.c0)))); -- 0ms;
PRAGMA stats; -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES ('640340930'), ('-854719255'), (NULL), (NULL), ('680574131'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(x'7bb1') WHERE ((((rt0.c2)GLOB(rt0.c0)))!=((rt0.c3 IN (rt0.c2)))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=-854719255,10');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=680574131,5');\n; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 0 sz=333457556'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='640340930' WHERE NULL; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE vt0 SET (c0)=(x'') WHERE ((CASE vt0.c0  WHEN 0.17138796660895006 THEN vt0.c0 ELSE vt0.c0 END)+((((0.17138796660895006, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))))); -- 1ms;
PRAGMA integrity_check; -- 0ms;
PRAGMA temp.checkpoint_fullfsync = true; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX  rt0; -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1364830545);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=NULL WHERE (('') ISNULL); -- 0ms;
PRAGMA main.busy_timeout; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '1730'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE vt0 SET (c0)=(0.6452547101195216); -- 1ms;
VACUUM temp; -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT ALL CASE WHEN (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))) THEN SUM(rt0.c3) WHEN (+ (rt0.c0)) THEN ((rt0.c0)*(rt0.c1)) WHEN CAST(rt0.c1 AS NUMERIC) THEN ((vt0.c0) IS TRUE) ELSE ((rt0.c2) IS TRUE) END FROM vt0, rt0 WHERE (CASE LIKELIHOOD(DISTINCT 700435880, 0.7764351309462734)  WHEN (('-524721257') IS TRUE) THEN LOWER(NULL) ELSE (('1008639753') NOT NULL) END); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=1'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2092118845 unordered'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(0.16136708454864057); -- 0ms;
PRAGMA main.journal_mode = MEMORY; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '25110'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 473233489); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
CREATE TEMP TABLE t0 (c0 INT , c1 INTEGER , c2 INTEGER ); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=4'); -- 0ms;
UPDATE OR FAIL rt0 SET c3='2068385019'; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'df50') WHERE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY; -- 0ms;
PRAGMA foreign_keys; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=NULL, c2=0.4818175927841526, c0=NULL WHERE (+ (((rt0.c1) IS FALSE))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.optimize; -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '27675'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1436633851); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 11ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA threads = -307224099036042805; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ('1008639753') UNION ALL SELECT * FROM vt0 WHERE ((NOT ('1008639753'))) UNION ALL SELECT ALL * FROM vt0 WHERE ((('1008639753') ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (CASE LOWER(DISTINCT t0.c0)  WHEN vt0.c0 COLLATE NOCASE THEN ((((((((t0.c2)AND(t0.c1)))AND(0.316879078871419)))OR(t0.c2)))AND(t0.c1)) END) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (CASE LOWER(DISTINCT t0.c0)  WHEN vt0.c0 COLLATE NOCASE THEN ((((((((t0.c2)AND(t0.c1)))AND(0.316879078871419)))OR(t0.c2)))AND(t0.c1)) END))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((CASE LOWER(DISTINCT t0.c0)  WHEN vt0.c0 COLLATE NOCASE THEN ((((((((t0.c2)AND(t0.c1)))AND(0.316879078871419)))OR(t0.c2)))AND(t0.c1)) END) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL v0.c0, rt0.c1, t0.c1, rt0.c3, t0.c0, rt0.c2, t0.c2, rt0.c0 FROM v0, rt0, t0 GROUP BY v0.c0, rt0.c1, t0.c1, rt0.c3, t0.c0, rt0.c2, t0.c2, rt0.c0;
SELECT ALL v0.c0, rt0.c1, t0.c1, rt0.c3, t0.c0, rt0.c2, t0.c2, rt0.c0 FROM v0, rt0, t0 WHERE ('' COLLATE BINARY) GROUP BY v0.c0, rt0.c1, t0.c1, rt0.c3, t0.c0, rt0.c2, t0.c2, rt0.c0 UNION SELECT ALL v0.c0, rt0.c1, t0.c1, rt0.c3, t0.c0, rt0.c2, t0.c2, rt0.c0 FROM v0, rt0, t0 WHERE ((NOT ('' COLLATE BINARY))) GROUP BY v0.c0, rt0.c1, t0.c1, rt0.c3, t0.c0, rt0.c2, t0.c2, rt0.c0 UNION SELECT v0.c0, rt0.c1, t0.c1, rt0.c3, t0.c0, rt0.c2, t0.c2, rt0.c0 FROM v0, rt0, t0 WHERE ((('' COLLATE BINARY) ISNULL)) GROUP BY v0.c0, rt0.c1, t0.c1, rt0.c3, t0.c0, rt0.c2, t0.c2, rt0.c0;
SELECT ALL v0.c0, rt0.c1, t0.c1, rt0.c3, t0.c0, rt0.c2, t0.c2, rt0.c0 FROM v0, rt0, t0 GROUP BY v0.c0, rt0.c1, t0.c1, rt0.c3, t0.c0, rt0.c2, t0.c2, rt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING LOWER(SUM(rt0.c2)) UNION ALL SELECT rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING (NOT (LOWER(SUM(rt0.c2)))) UNION ALL SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING ((LOWER(SUM(rt0.c2))) ISNULL);
SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0;
SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING LOWER(SUM(rt0.c2)) UNION ALL SELECT rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING (NOT (LOWER(SUM(rt0.c2)))) UNION ALL SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING ((LOWER(SUM(rt0.c2))) ISNULL);
SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0;
SELECT * FROM v0, t0, rt0;
SELECT * FROM v0, t0, rt0 WHERE (IFNULL(DISTINCT CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c3 THEN rt0.c3 END, t0.c1)) UNION ALL SELECT ALL * FROM v0, t0, rt0 WHERE ((NOT (IFNULL(DISTINCT CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c3 THEN rt0.c3 END, t0.c1)))) UNION ALL SELECT * FROM v0, t0, rt0 WHERE (((IFNULL(DISTINCT CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c3 THEN rt0.c3 END, t0.c1)) ISNULL));
SELECT * FROM v0, t0, rt0;
SELECT DISTINCT * FROM rt0, vt0, v0, t0;
SELECT DISTINCT * FROM rt0, vt0, v0, t0 WHERE (CASE (NOT (rt0.c3))  WHEN ((t0.c2)%(rt0.c2)) THEN (((('')AND(v0.c0)))AND(rt0.c3)) END) UNION SELECT DISTINCT * FROM rt0, vt0, v0, t0 WHERE ((NOT (CASE (NOT (rt0.c3))  WHEN ((t0.c2)%(rt0.c2)) THEN (((('')AND(v0.c0)))AND(rt0.c3)) END))) UNION SELECT DISTINCT * FROM rt0, vt0, v0, t0 WHERE (((CASE (NOT (rt0.c3))  WHEN ((t0.c2)%(rt0.c2)) THEN (((('')AND(v0.c0)))AND(rt0.c3)) END) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, v0, t0;
SELECT ALL rt0.c0 FROM t0, vt0, v0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM t0, vt0, v0, rt0 WHERE ((((t0.c2, rt0.c0, t0.c1)) BETWEEN ((((((vt0.c0)OR(t0.c1)))AND(rt0.c2)), ((rt0.c0)<(t0.c1)), ((t0.c1)/(rt0.c2)))) AND ((CAST(t0.c1 AS INTEGER), ((t0.c1) IS FALSE), (((vt0.c0))<((t0.c2))))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM t0, vt0, v0, rt0 WHERE ((NOT ((((t0.c2, rt0.c0, t0.c1)) BETWEEN ((((((vt0.c0)OR(t0.c1)))AND(rt0.c2)), ((rt0.c0)<(t0.c1)), ((t0.c1)/(rt0.c2)))) AND ((CAST(t0.c1 AS INTEGER), ((t0.c1) IS FALSE), (((vt0.c0))<((t0.c2))))))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM t0, vt0, v0, rt0 WHERE ((((((t0.c2, rt0.c0, t0.c1)) BETWEEN ((((((vt0.c0)OR(t0.c1)))AND(rt0.c2)), ((rt0.c0)<(t0.c1)), ((t0.c1)/(rt0.c2)))) AND ((CAST(t0.c1 AS INTEGER), ((t0.c1) IS FALSE), (((vt0.c0))<((t0.c2))))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM t0, vt0, v0, rt0 GROUP BY rt0.c0;
SELECT t0.c0, t0.c1, v0.c0, t0.c2, vt0.c0 FROM vt0, t0, v0 GROUP BY t0.c0, t0.c1, v0.c0, t0.c2, vt0.c0;
SELECT ALL t0.c0, t0.c1, v0.c0, t0.c2, vt0.c0 FROM vt0, t0, v0 GROUP BY t0.c0, t0.c1, v0.c0, t0.c2, vt0.c0 HAVING ((MAX(MIN(GROUP_CONCAT(SUM(t0.c0)))))AND(SUM(MIN(t0.c1)))) UNION ALL SELECT ALL t0.c0, t0.c1, v0.c0, t0.c2, vt0.c0 FROM vt0, t0, v0 GROUP BY t0.c0, t0.c1, v0.c0, t0.c2, vt0.c0 HAVING (NOT (((MAX(MIN(GROUP_CONCAT(SUM(t0.c0)))))AND(SUM(MIN(t0.c1)))))) UNION ALL SELECT ALL t0.c0, t0.c1, v0.c0, t0.c2, vt0.c0 FROM vt0, t0, v0 GROUP BY t0.c0, t0.c1, v0.c0, t0.c2, vt0.c0 HAVING ((((MAX(MIN(GROUP_CONCAT(SUM(t0.c0)))))AND(SUM(MIN(t0.c1))))) ISNULL);
SELECT t0.c0, t0.c2, t0.c1 FROM t0, vt0, rt0;
SELECT t0.c0, t0.c2, t0.c1 FROM t0, vt0, rt0 WHERE ((NOT ((- (t0.c0))))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0, vt0, rt0 WHERE ((NOT ((NOT ((- (t0.c0))))))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0, vt0, rt0 WHERE ((((NOT ((- (t0.c0))))) ISNULL));
SELECT t0.c0, t0.c2, t0.c1 FROM t0, vt0, rt0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON NULL;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON NULL WHERE ((+ (rt0.c3 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON NULL WHERE ((NOT ((+ (rt0.c3 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON NULL WHERE ((((+ (rt0.c3 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt0 ON NULL;
SELECT t0.c0 FROM v0, rt0 INNER JOIN t0 ON NULL FULL OUTER JOIN vt0 ON (('2089876096')/(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)))) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, rt0 INNER JOIN t0 ON NULL FULL OUTER JOIN vt0 ON (('2089876096')/(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)))) WHERE (x'aef6') GROUP BY t0.c0 UNION SELECT t0.c0 FROM v0, rt0 INNER JOIN t0 ON NULL FULL OUTER JOIN vt0 ON (('2089876096')/(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)))) WHERE ((NOT (x'aef6'))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM v0, rt0 INNER JOIN t0 ON NULL FULL OUTER JOIN vt0 ON (('2089876096')/(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)))) WHERE (((x'aef6') ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM v0, rt0 INNER JOIN t0 ON NULL FULL OUTER JOIN vt0 ON (('2089876096')/(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)))) GROUP BY t0.c0;
SELECT ALL rt0.c0, vt0.c0, rt0.c3, rt0.c2, t0.c2, v0.c0, t0.c0 FROM rt0, v0, vt0, t0 GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c2, t0.c2, v0.c0, t0.c0;
SELECT ALL rt0.c0, vt0.c0, rt0.c3, rt0.c2, t0.c2, v0.c0, t0.c0 FROM rt0, v0, vt0, t0 GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c2, t0.c2, v0.c0, t0.c0 HAVING CASE WHEN COUNT(*) THEN LOWER(t0.c0) ELSE ((((rt0.c2)OR(COUNT(*))))OR(rt0.c1)) END UNION ALL SELECT rt0.c0, vt0.c0, rt0.c3, rt0.c2, t0.c2, v0.c0, t0.c0 FROM rt0, v0, vt0, t0 GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c2, t0.c2, v0.c0, t0.c0 HAVING (NOT (CASE WHEN COUNT(*) THEN LOWER(t0.c0) ELSE ((((rt0.c2)OR(COUNT(*))))OR(rt0.c1)) END)) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c3, rt0.c2, t0.c2, v0.c0, t0.c0 FROM rt0, v0, vt0, t0 GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c2, t0.c2, v0.c0, t0.c0 HAVING ((CASE WHEN COUNT(*) THEN LOWER(t0.c0) ELSE ((((rt0.c2)OR(COUNT(*))))OR(rt0.c1)) END) ISNULL);
SELECT ALL rt0.c0, vt0.c0, rt0.c3, rt0.c2, t0.c2, v0.c0, t0.c0 FROM rt0, v0, vt0, t0 GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c2, t0.c2, v0.c0, t0.c0;
SELECT ALL rt0.c0, vt0.c0, rt0.c3, rt0.c2, t0.c2, v0.c0, t0.c0 FROM rt0, v0, vt0, t0 GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c2, t0.c2, v0.c0, t0.c0 HAVING CASE WHEN COUNT(*) THEN LOWER(t0.c0) ELSE ((((rt0.c2)OR(COUNT(*))))OR(rt0.c1)) END UNION ALL SELECT rt0.c0, vt0.c0, rt0.c3, rt0.c2, t0.c2, v0.c0, t0.c0 FROM rt0, v0, vt0, t0 GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c2, t0.c2, v0.c0, t0.c0 HAVING (NOT (CASE WHEN COUNT(*) THEN LOWER(t0.c0) ELSE ((((rt0.c2)OR(COUNT(*))))OR(rt0.c1)) END)) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c3, rt0.c2, t0.c2, v0.c0, t0.c0 FROM rt0, v0, vt0, t0 GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c2, t0.c2, v0.c0, t0.c0 HAVING ((CASE WHEN COUNT(*) THEN LOWER(t0.c0) ELSE ((((rt0.c2)OR(COUNT(*))))OR(rt0.c1)) END) ISNULL);
SELECT ALL rt0.c0, vt0.c0, rt0.c3, rt0.c2, t0.c2, v0.c0, t0.c0 FROM rt0, v0, vt0, t0 GROUP BY rt0.c0, vt0.c0, rt0.c3, rt0.c2, t0.c2, v0.c0, t0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (json_patch(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)||(vt0.c0)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (json_patch(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)||(vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE (((json_patch(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)||(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM t0, rt0, v0;
SELECT DISTINCT * FROM t0, rt0, v0 WHERE (RTRIM((NOT (rt0.c1)))) UNION SELECT DISTINCT * FROM t0, rt0, v0 WHERE ((NOT (RTRIM((NOT (rt0.c1)))))) UNION SELECT DISTINCT * FROM t0, rt0, v0 WHERE (((RTRIM((NOT (rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM t0, rt0, v0;
SELECT ALL v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS REAL)) ISNULL) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS REAL)) ISNULL) WHERE ((~ (((x'')|(vt0.c0))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS REAL)) ISNULL) WHERE ((NOT ((~ (((x'')|(vt0.c0))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS REAL)) ISNULL) WHERE ((((~ (((x'')|(vt0.c0))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS REAL)) ISNULL) GROUP BY v0.c0, vt0.c0;
SELECT t0.c1, t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON CAST((+ (vt0.c0)) AS INTEGER) GROUP BY t0.c1, t0.c0, vt0.c0;
SELECT t0.c1, t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON CAST((+ (vt0.c0)) AS INTEGER) GROUP BY t0.c1, t0.c0, vt0.c0 HAVING CASE WHEN CASE t0.c0  WHEN t0.c2 THEN t0.c1 END THEN ((((t0.c2)AND(vt0.c0)))AND(t0.c0)) ELSE (SUM(COUNT(GROUP_CONCAT(GROUP_CONCAT(t0.c0)))) IN (t0.c0, vt0.c0, t0.c0)) END UNION ALL SELECT t0.c1, t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON CAST((+ (vt0.c0)) AS INTEGER) GROUP BY t0.c1, t0.c0, vt0.c0 HAVING (NOT (CASE WHEN CASE t0.c0  WHEN t0.c2 THEN t0.c1 END THEN ((((t0.c2)AND(vt0.c0)))AND(t0.c0)) ELSE (SUM(COUNT(GROUP_CONCAT(GROUP_CONCAT(t0.c0)))) IN (t0.c0, vt0.c0, t0.c0)) END)) UNION ALL SELECT ALL t0.c1, t0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN t0 ON CAST((+ (vt0.c0)) AS INTEGER) GROUP BY t0.c1, t0.c0, vt0.c0 HAVING ((CASE WHEN CASE t0.c0  WHEN t0.c2 THEN t0.c1 END THEN ((((t0.c2)AND(vt0.c0)))AND(t0.c0)) ELSE (SUM(COUNT(GROUP_CONCAT(GROUP_CONCAT(t0.c0)))) IN (t0.c0, vt0.c0, t0.c0)) END) ISNULL);
SELECT * FROM rt0 INNER JOIN t0 ON CASE WHEN (((rt0.c3, t0.c2, rt0.c1, t0.c1, v0.c0))>((0.39926013715588304, rt0.c0, rt0.c0, NULL, x'1f25766e'))) THEN ((0.38463556812680577)GLOB(rt0.c3)) END FULL OUTER JOIN v0 ON CASE WHEN HEX(rt0.c3) THEN NULL ELSE CASE rt0.c3  WHEN t0.c0 THEN rt0.c0 ELSE rt0.c2 END END;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ((((rt0.c1 IN ()))IS(((t0.c2)=(rt0.c1))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ((((rt0.c1 IN ()))IS(((t0.c2)==(rt0.c1))))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((((((rt0.c1 IN ()))IS(((t0.c2)==(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((v0.c0 IN ()) COLLATE RTRIM) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((v0.c0 IN ()) COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((v0.c0 IN ()) COLLATE RTRIM) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (((vt0.c0) BETWEEN (COUNT(*)) AND (COUNT(*))) IN ((COUNT(*) IN (COUNT(vt0.c0))))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT ((((vt0.c0) BETWEEN (COUNT(*)) AND (COUNT(*))) IN ((COUNT(*) IN (COUNT(vt0.c0))))))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (((((vt0.c0) BETWEEN (COUNT(*)) AND (COUNT(*))) IN ((COUNT(*) IN (COUNT(vt0.c0)))))) ISNULL);
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (((vt0.c0) BETWEEN (COUNT(*)) AND (COUNT(*))) IN ((COUNT(*) IN (COUNT(vt0.c0))))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT ((((vt0.c0) BETWEEN (COUNT(*)) AND (COUNT(*))) IN ((COUNT(*) IN (COUNT(vt0.c0))))))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (((((vt0.c0) BETWEEN (COUNT(*)) AND (COUNT(*))) IN ((COUNT(*) IN (COUNT(vt0.c0)))))) ISNULL);
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT * FROM t0, vt0 CROSS JOIN v0 ON ((CAST(x'2a5c' AS REAL))>>(CAST(vt0.c0 AS REAL))) CROSS JOIN rt0 ON ((((t0.c2)||(t0.c1)))OR(CAST(rt0.c2 AS REAL)));
SELECT ALL * FROM t0, vt0 CROSS JOIN v0 ON ((CAST(x'2a5c' AS REAL))>>(CAST(vt0.c0 AS REAL))) CROSS JOIN rt0 ON ((((t0.c2)||(t0.c1)))OR(CAST(rt0.c2 AS REAL))) WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 END)OR(rt0.c1))) UNION ALL SELECT * FROM t0, vt0 CROSS JOIN v0 ON ((CAST(x'2a5c' AS REAL))>>(CAST(vt0.c0 AS REAL))) CROSS JOIN rt0 ON ((((t0.c2)||(t0.c1)))OR(CAST(rt0.c2 AS REAL))) WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c1 END)OR(rt0.c1))))) UNION ALL SELECT * FROM t0, vt0 CROSS JOIN v0 ON ((CAST(x'2a5c' AS REAL))>>(CAST(vt0.c0 AS REAL))) CROSS JOIN rt0 ON ((((t0.c2)||(t0.c1)))OR(CAST(rt0.c2 AS REAL))) WHERE (((((CASE WHEN rt0.c2 THEN rt0.c1 END)OR(rt0.c1))) ISNULL));
SELECT * FROM t0, vt0 CROSS JOIN v0 ON ((CAST(x'2a5c' AS REAL))>>(CAST(vt0.c0 AS REAL))) CROSS JOIN rt0 ON ((((t0.c2)||(t0.c1)))OR(CAST(rt0.c2 AS REAL)));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CAST(CAST(rt0.c3 AS INTEGER) AS REAL)) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c3 AS INTEGER) AS REAL)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(CAST(rt0.c3 AS INTEGER) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (UPPER(DISTINCT vt0.c0) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (UPPER(DISTINCT vt0.c0) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((UPPER(DISTINCT vt0.c0) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c3, v0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, v0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, v0.c0, vt0.c0 FROM v0, rt0 NOT INDEXED, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, v0.c0, vt0.c0 HAVING MAX(((v0.c0)/(rt0.c3))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3, v0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, v0.c0, vt0.c0 HAVING (NOT (MAX(((v0.c0)/(rt0.c3))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c3, v0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, v0.c0, vt0.c0 HAVING ((MAX(((v0.c0)/(rt0.c3)))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c3, v0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, v0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, v0.c0, vt0.c0 FROM v0, rt0 NOT INDEXED, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, v0.c0, vt0.c0 HAVING MAX(((v0.c0)/(rt0.c3))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3, v0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, v0.c0, vt0.c0 HAVING (NOT (MAX(((v0.c0)/(rt0.c3))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c3, v0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, v0.c0, vt0.c0 HAVING ((MAX(((v0.c0)/(rt0.c3)))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c3, v0.c0, vt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, v0.c0, vt0.c0;
SELECT ALL MIN(((((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))AND(((t0.c0) NOT BETWEEN (rt0.c1) AND (t0.c1)))))AND((+ (rt0.c1))))) FROM vt0, v0, rt0, t0 ORDER BY ((t0.c2)OR(t0.c1)) COLLATE NOCASE DESC;
SELECT t0.c1 FROM rt0, v0, t0;
SELECT ALL t0.c1 FROM rt0 NOT INDEXED, v0, t0 WHERE (((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0))) IS TRUE)) UNION ALL SELECT t0.c1 FROM rt0, v0, t0 WHERE ((NOT (((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0))) IS TRUE)))) UNION ALL SELECT ALL t0.c1 FROM rt0, v0, t0 WHERE (((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0))) IS TRUE)) ISNULL));
SELECT t0.c1 FROM rt0, v0, t0;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN vt0 ON ((UNLIKELY(DISTINCT t0.c2))*(((vt0.c0)>=(v0.c0)))) FULL OUTER JOIN v0 ON (((((((t0.c0)AND(t0.c0)))AND(t0.c1))))>((((NULL) BETWEEN (t0.c1) AND (vt0.c0)))));
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((v0.c0 COLLATE RTRIM) IS TRUE)) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (((v0.c0 COLLATE RTRIM) IS TRUE)))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 NOT INDEXED WHERE (((((v0.c0 COLLATE RTRIM) IS TRUE)) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING GROUP_CONCAT(((((((((MIN(GROUP_CONCAT(v0.c0)))AND('-524721257')))AND(MIN(v0.c0))))AND(AVG(x''))))OR(rt0.c0))) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(((((((((MIN(GROUP_CONCAT(v0.c0)))AND('-524721257')))AND(MIN(v0.c0))))AND(AVG(x''))))OR(rt0.c0))))) UNION ALL SELECT ALL rt0.c1 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(((((((((MIN(GROUP_CONCAT(v0.c0)))AND('-524721257')))AND(MIN(v0.c0))))AND(AVG(x''))))OR(rt0.c0)))) ISNULL);
SELECT ALL t0.c2, vt0.c0, t0.c1, t0.c0 FROM vt0, t0;
SELECT ALL t0.c2, vt0.c0, t0.c1, t0.c0 FROM vt0, t0 WHERE (((((((t0.c2)AND('')))OR(vt0.c0))) BETWEEN (((t0.c0) NOTNULL)) AND ((((t0.c1, t0.c1, vt0.c0))>((t0.c2, vt0.c0, 0.7364378163745151)))))) UNION ALL SELECT ALL t0.c2, vt0.c0, t0.c1, t0.c0 FROM vt0, t0 WHERE ((NOT (((((((t0.c2)AND('')))OR(vt0.c0))) BETWEEN (((t0.c0) NOTNULL)) AND ((((t0.c1, t0.c1, vt0.c0))>((t0.c2, vt0.c0, 0.7364378163745151)))))))) UNION ALL SELECT t0.c2, vt0.c0, t0.c1, t0.c0 FROM vt0, t0 WHERE (((((((((t0.c2)AND('')))OR(vt0.c0))) BETWEEN (((t0.c0) NOTNULL)) AND ((((t0.c1, t0.c1, vt0.c0))>((t0.c2, vt0.c0, 0.7364378163745151)))))) ISNULL));
SELECT ALL t0.c2, vt0.c0, t0.c1, t0.c0 FROM vt0, t0;
SELECT DISTINCT v0.c0, t0.c0, rt0.c2, t0.c2, rt0.c3 FROM vt0, v0, t0, rt0;
SELECT DISTINCT v0.c0, t0.c0, rt0.c2, t0.c2, rt0.c3 FROM vt0, v0, t0, rt0 WHERE (TYPEOF(DISTINCT ((t0.c0)LIKE(v0.c0)))) UNION SELECT DISTINCT v0.c0, t0.c0, rt0.c2, t0.c2, rt0.c3 FROM vt0, v0, t0, rt0 WHERE ((NOT (TYPEOF(DISTINCT ((t0.c0)LIKE(v0.c0)))))) UNION SELECT DISTINCT v0.c0, t0.c0, rt0.c2, t0.c2, rt0.c3 FROM vt0, v0, t0, rt0 WHERE (((TYPEOF(DISTINCT ((t0.c0)LIKE(v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0, t0.c0, rt0.c2, t0.c2, rt0.c3 FROM vt0, v0, t0, rt0;
SELECT ALL rt0.c2 FROM vt0, rt0, t0, v0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0, t0, v0 WHERE (((CAST(t0.c2 AS TEXT)) ISNULL)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0, rt0, t0, v0 WHERE ((NOT (((CAST(t0.c2 AS TEXT)) ISNULL)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0, rt0, t0, v0 WHERE (((((CAST(t0.c2 AS TEXT)) ISNULL)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0, t0, v0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3 HAVING CASE WHEN (((rt0.c3))>((SUM(COUNT(AVG(TOTAL(MIN(rt0.c1)))))))) THEN MIN(COUNT(*)) END UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3 HAVING (NOT (CASE WHEN (((rt0.c3))>((SUM(COUNT(AVG(TOTAL(MIN(rt0.c1)))))))) THEN MIN(COUNT(*)) END)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3 HAVING ((CASE WHEN (((rt0.c3))>((SUM(COUNT(AVG(TOTAL(MIN(rt0.c1)))))))) THEN MIN(COUNT(*)) END) ISNULL);
SELECT t0.c1, t0.c2 FROM t0, v0, vt0, rt0;
SELECT t0.c1, t0.c2 FROM t0, v0, vt0, rt0 WHERE (((x'48cb') ISNULL)) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0, v0, vt0, rt0 WHERE ((NOT (((x'48cb') ISNULL)))) UNION ALL SELECT t0.c1, t0.c2 FROM t0, v0, vt0, rt0 WHERE (((((x'48cb') ISNULL)) ISNULL));
SELECT t0.c1, t0.c2 FROM t0, v0, vt0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((LOWER(DISTINCT vt0.c0))>(((vt0.c0) ISNULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((LOWER(DISTINCT vt0.c0))>(((vt0.c0) ISNULL)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((LOWER(DISTINCT vt0.c0))>(((vt0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0) ISNULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0) ISNULL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT v0.c0, t0.c1, t0.c2 FROM v0, vt0, t0 GROUP BY v0.c0, t0.c1, t0.c2;
SELECT ALL v0.c0, t0.c1, t0.c2 FROM v0, vt0, t0 GROUP BY v0.c0, t0.c1, t0.c2 HAVING GROUP_CONCAT(CASE WHEN t0.c1 THEN t0.c1 ELSE MAX(GROUP_CONCAT(t0.c1)) END) UNION ALL SELECT ALL v0.c0, t0.c1, t0.c2 FROM v0, vt0, t0 GROUP BY v0.c0, t0.c1, t0.c2 HAVING (NOT (GROUP_CONCAT(CASE WHEN t0.c1 THEN t0.c1 ELSE MAX(GROUP_CONCAT(t0.c1)) END))) UNION ALL SELECT ALL v0.c0, t0.c1, t0.c2 FROM v0, vt0, t0 GROUP BY v0.c0, t0.c1, t0.c2 HAVING ((GROUP_CONCAT(CASE WHEN t0.c1 THEN t0.c1 ELSE MAX(GROUP_CONCAT(t0.c1)) END)) ISNULL);
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c1 IN ()))AND((rt0.c3 IN (rt0.c2)))))AND((NOT (0Xffffffffaea656af))))) ORDER BY (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN (rt0.c2 COLLATE RTRIM)) ASC;
SELECT ALL * FROM rt0, vt0 WHERE ((NOT ((((((rt0.c1 IN ()))AND((rt0.c3 IN (rt0.c2)))))AND((NOT (0xffffffffaea656af))))))) ORDER BY (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN (rt0.c2 COLLATE RTRIM)) ASC;
SELECT ALL * FROM rt0, vt0 WHERE ((((((((rt0.c1 IN ()))AND((rt0.c3 IN (rt0.c2)))))AND((NOT (0xffffffffaea656af))))) ISNULL)) ORDER BY (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN (rt0.c2 COLLATE RTRIM)) ASC;
SELECT * FROM rt0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (LOWER((vt0.c0 IN ()))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (LOWER((vt0.c0 IN ()))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((LOWER((vt0.c0 IN ()))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (QUOTE(rt0.c2)) GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 UNION SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (QUOTE(rt0.c2)))) GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1 UNION SELECT rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((QUOTE(rt0.c2)) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (TOTAL(TOTAL(TOTAL(COUNT(COUNT(COUNT(*)))))) IN ()) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT ((TOTAL(TOTAL(TOTAL(COUNT(COUNT(COUNT(*)))))) IN ()))) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (((TOTAL(TOTAL(TOTAL(COUNT(COUNT(COUNT(*)))))) IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (TOTAL(TOTAL(TOTAL(COUNT(COUNT(COUNT(*)))))) IN ()) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT ((TOTAL(TOTAL(TOTAL(COUNT(COUNT(COUNT(*)))))) IN ()))) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (((TOTAL(TOTAL(TOTAL(COUNT(COUNT(COUNT(*)))))) IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, v0.c0 FROM t0, v0, vt0, rt0;
SELECT rt0.c2, v0.c0 FROM t0, v0, vt0, rt0 WHERE (((rt0.c1 IN (t0.c1, rt0.c2)) IN ())) UNION ALL SELECT ALL rt0.c2, v0.c0 FROM t0, v0, vt0, rt0 WHERE ((NOT (((rt0.c1 IN (t0.c1, rt0.c2)) IN ())))) UNION ALL SELECT ALL rt0.c2, v0.c0 FROM t0, v0, vt0, rt0 WHERE (((((rt0.c1 IN (t0.c1, rt0.c2)) IN ())) ISNULL));
SELECT ALL rt0.c2, v0.c0 FROM t0, v0, vt0, rt0;
SELECT DISTINCT * FROM t0, rt0, v0;
SELECT DISTINCT * FROM t0, rt0, v0 WHERE (CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN x'3796' WHEN v0.c0 THEN rt0.c1 END COLLATE RTRIM) UNION SELECT DISTINCT * FROM t0, rt0, v0 WHERE ((NOT (CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN x'3796' WHEN v0.c0 THEN rt0.c1 END COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t0, rt0, v0 WHERE (((CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN x'3796' WHEN v0.c0 THEN rt0.c1 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM t0, rt0, v0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 NOT INDEXED GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 NOT INDEXED GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(COUNT(vt0.c0)))+(TOTAL(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MAX(COUNT(vt0.c0)))+(TOTAL(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MAX(COUNT(vt0.c0)))+(TOTAL(vt0.c0)))) ISNULL);
SELECT ALL * FROM v0, vt0, t0;
SELECT * FROM v0, vt0, t0 WHERE ((((t0.c0)>(vt0.c0)) IN ())) UNION ALL SELECT * FROM v0, vt0, t0 WHERE ((NOT ((((t0.c0)>(vt0.c0)) IN ())))) UNION ALL SELECT ALL * FROM v0, vt0, t0 WHERE ((((((t0.c0)>(vt0.c0)) IN ())) ISNULL));
SELECT ALL * FROM v0, vt0, t0;
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (((COALESCE(DISTINCT v0.c0, rt0.c2))<=(CAST(vt0.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE ((NOT (((COALESCE(DISTINCT v0.c0, rt0.c2))<=(CAST(vt0.c0 AS BLOB)))))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (((((COALESCE(DISTINCT v0.c0, rt0.c2))<=(CAST(vt0.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT ALL t0.c0, t0.c1, rt0.c3, t0.c2, rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0, t0 GROUP BY t0.c0, t0.c1, rt0.c3, t0.c2, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL t0.c0, t0.c1, rt0.c3, t0.c2, rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0, t0 WHERE ((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((t0.c2, '672415762', rt0.c1)) AND ((rt0.c1, v0.c0, rt0.c1))) COLLATE BINARY) GROUP BY t0.c0, t0.c1, rt0.c3, t0.c2, rt0.c2, rt0.c1, rt0.c0 UNION SELECT t0.c0, t0.c1, rt0.c3, t0.c2, rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0, t0 WHERE ((NOT ((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((t0.c2, '672415762', rt0.c1)) AND ((rt0.c1, v0.c0, rt0.c1))) COLLATE BINARY))) GROUP BY t0.c0, t0.c1, rt0.c3, t0.c2, rt0.c2, rt0.c1, rt0.c0 UNION SELECT t0.c0, t0.c1, rt0.c3, t0.c2, rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0, t0 WHERE ((((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((t0.c2, '672415762', rt0.c1)) AND ((rt0.c1, v0.c0, rt0.c1))) COLLATE BINARY) ISNULL)) GROUP BY t0.c0, t0.c1, rt0.c3, t0.c2, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL t0.c0, t0.c1, rt0.c3, t0.c2, rt0.c2, rt0.c1, rt0.c0 FROM v0, rt0, t0 GROUP BY t0.c0, t0.c1, rt0.c3, t0.c2, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0, v0;
SELECT rt0.c0, rt0.c2 FROM rt0, v0 WHERE (NULL) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT (NULL))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, v0 WHERE (((NULL) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0, t0;
SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0, t0 WHERE ((x'' IN ()) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0, t0 WHERE ((NOT ((x'' IN ()) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0, t0 WHERE ((((x'' IN ()) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0, t0;
SELECT ALL vt0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT vt0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((((CAST(rt0.c0 AS TEXT)))>((CAST(rt0.c3 AS TEXT))))) GROUP BY vt0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 UNION SELECT vt0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((((CAST(rt0.c0 AS TEXT)))>((CAST(rt0.c3 AS TEXT))))))) GROUP BY vt0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((((((CAST(rt0.c0 AS TEXT)))>((CAST(rt0.c3 AS TEXT))))) ISNULL)) GROUP BY vt0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT rt0.c2, t0.c1, rt0.c1, t0.c0, rt0.c3, t0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON NULL GROUP BY rt0.c2, t0.c1, rt0.c1, t0.c0, rt0.c3, t0.c2, rt0.c0;
SELECT ALL rt0.c2, t0.c1, rt0.c1, t0.c0, rt0.c3, t0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON NULL GROUP BY rt0.c2, t0.c1, rt0.c1, t0.c0, rt0.c3, t0.c2, rt0.c0 HAVING COUNT((((t0.c1, AVG(rt0.c3), x'04b5328f')) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c1, COUNT(*), rt0.c0)))) UNION ALL SELECT ALL rt0.c2, t0.c1, rt0.c1, t0.c0, rt0.c3, t0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON NULL GROUP BY rt0.c2, t0.c1, rt0.c1, t0.c0, rt0.c3, t0.c2, rt0.c0 HAVING (NOT (COUNT((((t0.c1, AVG(rt0.c3), x'04b5328f')) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c1, COUNT(*), rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, t0.c1, rt0.c1, t0.c0, rt0.c3, t0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON NULL GROUP BY rt0.c2, t0.c1, rt0.c1, t0.c0, rt0.c3, t0.c2, rt0.c0 HAVING ((COUNT((((t0.c1, AVG(rt0.c3), x'04b5328f')) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c1, COUNT(*), rt0.c0))))) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0, vt0 WHERE (CHAR((rt0.c1 IN ()), ((rt0.c1)-(rt0.c3)), ((rt0.c0) NOT BETWEEN (0.09793690649996822) AND (rt0.c2)))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0, vt0 WHERE ((NOT (CHAR((rt0.c1 IN ()), ((rt0.c1)-(rt0.c3)), ((rt0.c0) NOT BETWEEN (0.09793690649996822) AND (rt0.c2)))))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0, vt0 WHERE (((CHAR((rt0.c1 IN ()), ((rt0.c1)-(rt0.c3)), ((rt0.c0) NOT BETWEEN (0.09793690649996822) AND (rt0.c2)))) ISNULL));
SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT t0.c0, t0.c1 FROM t0;
SELECT DISTINCT t0.c0, t0.c1 FROM t0 WHERE (CASE ((t0.c1) NOTNULL)  WHEN ((x'2011') BETWEEN (t0.c0) AND (t0.c1)) THEN t0.c1 COLLATE BINARY ELSE ((((t0.c2)AND(t0.c0)))AND(t0.c1)) END) UNION SELECT DISTINCT t0.c0, t0.c1 FROM t0 WHERE ((NOT (CASE ((t0.c1) NOTNULL)  WHEN ((x'2011') BETWEEN (t0.c0) AND (t0.c1)) THEN t0.c1 COLLATE BINARY ELSE ((((t0.c2)AND(t0.c0)))AND(t0.c1)) END))) UNION SELECT DISTINCT t0.c0, t0.c1 FROM t0 WHERE (((CASE ((t0.c1) NOTNULL)  WHEN ((x'2011') BETWEEN (t0.c0) AND (t0.c1)) THEN t0.c1 COLLATE BINARY ELSE ((((t0.c2)AND(t0.c0)))AND(t0.c1)) END) ISNULL));
SELECT DISTINCT t0.c0, t0.c1 FROM t0;
SELECT ALL t0.c0 FROM t0, vt0, v0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0, v0 WHERE (((((t0.c2)||(t0.c0)))>>(v0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt0, v0 WHERE ((NOT (((((t0.c2)||(t0.c0)))>>(v0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, vt0, v0 WHERE (((((((t0.c2)||(t0.c0)))>>(v0.c0))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0, v0 GROUP BY t0.c0;
SELECT rt0.c0 FROM rt0, v0 NOT INDEXED, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c0 HAVING (AVG(vt0.c0) IN (((rt0.c3) ISNULL))) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c0 HAVING (NOT ((AVG(vt0.c0) IN (((rt0.c3) ISNULL))))) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c0 HAVING (((AVG(vt0.c0) IN (((rt0.c3) ISNULL)))) ISNULL);
SELECT rt0.c0 FROM rt0, v0 NOT INDEXED, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c0 HAVING (AVG(vt0.c0) IN (((rt0.c3) ISNULL))) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c0 HAVING (NOT ((AVG(vt0.c0) IN (((rt0.c3) ISNULL))))) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c0 HAVING (((AVG(vt0.c0) IN (((rt0.c3) ISNULL)))) ISNULL);
SELECT rt0.c0 FROM rt0, v0 NOT INDEXED, vt0 GROUP BY rt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN 5763154 END AS REAL)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(CASE vt0.c0  WHEN vt0.c0 THEN 5763154 END AS REAL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(CASE vt0.c0  WHEN vt0.c0 THEN 5763154 END AS REAL)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0, v0, rt0;
SELECT DISTINCT * FROM t0, v0, rt0 WHERE (CASE ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0))  WHEN rt0.c0 THEN v0.c0 COLLATE RTRIM END) UNION SELECT DISTINCT * FROM t0, v0, rt0 WHERE ((NOT (CASE ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0))  WHEN rt0.c0 THEN v0.c0 COLLATE RTRIM END))) UNION SELECT DISTINCT * FROM t0, v0, rt0 WHERE (((CASE ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0))  WHEN rt0.c0 THEN v0.c0 COLLATE RTRIM END) ISNULL));
SELECT DISTINCT * FROM t0, v0, rt0;
SELECT ALL t0.c2, t0.c0, rt0.c0, t0.c1, rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY t0.c2, t0.c0, rt0.c0, t0.c1, rt0.c2, rt0.c1;
SELECT t0.c2, t0.c0, rt0.c0, t0.c1, rt0.c2, rt0.c1 FROM t0, rt0 WHERE (((((rt0.c2) ISNULL))!=((((t0.c0, t0.c2, rt0.c1, t0.c1, t0.c1)) NOT BETWEEN ((t0.c0, rt0.c1, t0.c1, 0.5012913109250904, rt0.c0)) AND ((t0.c0, t0.c1, rt0.c3, rt0.c0, t0.c2)))))) GROUP BY t0.c2, t0.c0, rt0.c0, t0.c1, rt0.c2, rt0.c1 UNION SELECT t0.c2, t0.c0, rt0.c0, t0.c1, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((NOT (((((rt0.c2) ISNULL))<>((((t0.c0, t0.c2, rt0.c1, t0.c1, t0.c1)) NOT BETWEEN ((t0.c0, rt0.c1, t0.c1, 0.5012913109250904, rt0.c0)) AND ((t0.c0, t0.c1, rt0.c3, rt0.c0, t0.c2)))))))) GROUP BY t0.c2, t0.c0, rt0.c0, t0.c1, rt0.c2, rt0.c1 UNION SELECT t0.c2, t0.c0, rt0.c0, t0.c1, rt0.c2, rt0.c1 FROM t0, rt0 WHERE (((((((rt0.c2) ISNULL))<>((((t0.c0, t0.c2, rt0.c1, t0.c1, t0.c1)) NOT BETWEEN ((t0.c0, rt0.c1, t0.c1, 0.5012913109250904, rt0.c0)) AND ((t0.c0, t0.c1, rt0.c3, rt0.c0, t0.c2)))))) ISNULL)) GROUP BY t0.c2, t0.c0, rt0.c0, t0.c1, rt0.c2, rt0.c1;
SELECT ALL t0.c2, t0.c0, rt0.c0, t0.c1, rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY t0.c2, t0.c0, rt0.c0, t0.c1, rt0.c2, rt0.c1;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING v0.c0 UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((v0.c0) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING v0.c0 UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((v0.c0) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((NULL IN ()))OR(CASE WHEN vt0.c0 THEN 0.6699847454029775 END)))AND(('916020636' IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((NULL IN ()))OR(CASE WHEN vt0.c0 THEN 0.6699847454029775 END)))AND(('916020636' IN ())))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((((NULL IN ()))OR(CASE WHEN vt0.c0 THEN 0.6699847454029775 END)))AND(('916020636' IN ())))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM)/(CASE WHEN rt0.c1 THEN rt0.c3 END))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE RTRIM)/(CASE WHEN rt0.c1 THEN rt0.c3 END))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM)/(CASE WHEN rt0.c1 THEN rt0.c3 END))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3 FROM rt0;
SELECT ALL t0.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2, t0.c1 FROM rt0, vt0, t0 GROUP BY t0.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2, t0.c1;
SELECT t0.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2, t0.c1 FROM rt0, vt0, t0 WHERE (((t0.c2) ISNULL)) GROUP BY t0.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2, t0.c1 UNION SELECT t0.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2, t0.c1 FROM rt0 NOT INDEXED, vt0, t0 WHERE ((NOT (((t0.c2) ISNULL)))) GROUP BY t0.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2, t0.c1 UNION SELECT t0.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2, t0.c1 FROM rt0, vt0, t0 WHERE (((((t0.c2) ISNULL)) ISNULL)) GROUP BY t0.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2, t0.c1;
SELECT ALL t0.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2, t0.c1 FROM rt0, vt0, t0 GROUP BY t0.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c1, rt0.c2, t0.c1;
SELECT ALL vt0.c0, v0.c0, rt0.c3 FROM rt0, v0, vt0 GROUP BY vt0.c0, v0.c0, rt0.c3;
SELECT ALL vt0.c0, v0.c0, rt0.c3 FROM rt0, v0, vt0 GROUP BY vt0.c0, v0.c0, rt0.c3 HAVING COUNT(CAST(rt0.c2 AS BLOB)) UNION ALL SELECT ALL vt0.c0, v0.c0, rt0.c3 FROM rt0, v0, vt0 GROUP BY vt0.c0, v0.c0, rt0.c3 HAVING (NOT (COUNT(CAST(rt0.c2 AS BLOB)))) UNION ALL SELECT ALL vt0.c0, v0.c0, rt0.c3 FROM rt0, v0, vt0 GROUP BY vt0.c0, v0.c0, rt0.c3 HAVING ((COUNT(CAST(rt0.c2 AS BLOB))) ISNULL);
SELECT ALL vt0.c0, v0.c0, rt0.c3 FROM rt0, v0, vt0 GROUP BY vt0.c0, v0.c0, rt0.c3;
SELECT ALL vt0.c0, v0.c0, rt0.c3 FROM rt0, v0, vt0 GROUP BY vt0.c0, v0.c0, rt0.c3 HAVING COUNT(CAST(rt0.c2 AS BLOB)) UNION ALL SELECT ALL vt0.c0, v0.c0, rt0.c3 FROM rt0, v0, vt0 GROUP BY vt0.c0, v0.c0, rt0.c3 HAVING (NOT (COUNT(CAST(rt0.c2 AS BLOB)))) UNION ALL SELECT ALL vt0.c0, v0.c0, rt0.c3 FROM rt0, v0, vt0 GROUP BY vt0.c0, v0.c0, rt0.c3 HAVING ((COUNT(CAST(rt0.c2 AS BLOB))) ISNULL);
SELECT ALL vt0.c0, v0.c0, rt0.c3 FROM rt0, v0, vt0 GROUP BY vt0.c0, v0.c0, rt0.c3;
SELECT rt0.c2, vt0.c0, t0.c2 FROM v0, rt0 FULL OUTER JOIN t0 ON vt0.c0 RIGHT OUTER JOIN vt0 ON (~ ((+ (t0.c0))));
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE (((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL ELSE v0.c0 END))) UNION SELECT DISTINCT v0.c0 FROM vt0 NOT INDEXED, v0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL ELSE v0.c0 END))))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE (((((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL ELSE v0.c0 END))) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT rt0.c1, rt0.c2, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0;
SELECT ALL rt0.c1, rt0.c2, v0.c0 FROM v0, vt0, rt0 WHERE (CAST(((rt0.c1)|(rt0.c2)) AS BLOB)) GROUP BY rt0.c1, rt0.c2, v0.c0 UNION SELECT ALL rt0.c1, rt0.c2, v0.c0 FROM v0, vt0, rt0 WHERE ((NOT (CAST(((rt0.c1)|(rt0.c2)) AS BLOB)))) GROUP BY rt0.c1, rt0.c2, v0.c0 UNION SELECT rt0.c1, rt0.c2, v0.c0 FROM v0, vt0, rt0 WHERE (((CAST(((rt0.c1)|(rt0.c2)) AS BLOB)) ISNULL)) GROUP BY rt0.c1, rt0.c2, v0.c0;
SELECT rt0.c1, rt0.c2, v0.c0 FROM v0, vt0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0;
SELECT v0.c0 FROM v0, t0, rt0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, t0, rt0, vt0 GROUP BY v0.c0 HAVING TOTAL((((COUNT(COUNT(MIN(t0.c2))), rt0.c3, rt0.c1))<((rt0.c3, t0.c1, COUNT(*))))) UNION ALL SELECT v0.c0 FROM v0, t0, rt0, vt0 GROUP BY v0.c0 HAVING (NOT (TOTAL((((COUNT(COUNT(MIN(t0.c2))), rt0.c3, rt0.c1))<((rt0.c3, t0.c1, COUNT(*))))))) UNION ALL SELECT v0.c0 FROM v0, t0, rt0, vt0 GROUP BY v0.c0 HAVING ((TOTAL((((COUNT(COUNT(MIN(t0.c2))), rt0.c3, rt0.c1))<((rt0.c3, t0.c1, COUNT(*)))))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((((t0.c0)>=(t0.c0)))GLOB((~ (t0.c1))))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((t0.c0)>=(t0.c0)))GLOB((~ (t0.c1))))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((t0.c0)>=(t0.c0)))GLOB((~ (t0.c1))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt0.c3, rt0.c1, t0.c2, vt0.c0, rt0.c0, t0.c1 FROM rt0, vt0 INNER JOIN t0 ON (~ ((((9.16020636E8, rt0.c1, '-1622817873')) NOT BETWEEN ((rt0.c0, t0.c0, '%j')) AND ((t0.c0, rt0.c3, t0.c2)))));
SELECT DISTINCT rt0.c3, rt0.c1, t0.c2, vt0.c0, rt0.c0, t0.c1 FROM rt0, vt0 INNER JOIN t0 ON (~ ((((9.16020636E8, rt0.c1, '-1622817873')) NOT BETWEEN ((rt0.c0, t0.c0, '%j')) AND ((t0.c0, rt0.c3, t0.c2))))) WHERE ((((vt0.c0))<((t0.c0))) COLLATE BINARY) UNION SELECT DISTINCT rt0.c3, rt0.c1, t0.c2, vt0.c0, rt0.c0, t0.c1 FROM rt0, vt0 INNER JOIN t0 ON (~ ((((9.16020636E8, rt0.c1, '-1622817873')) NOT BETWEEN ((rt0.c0, t0.c0, '%j')) AND ((t0.c0, rt0.c3, t0.c2))))) WHERE ((NOT ((((vt0.c0))<((t0.c0))) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c3, rt0.c1, t0.c2, vt0.c0, rt0.c0, t0.c1 FROM rt0, vt0 INNER JOIN t0 ON (~ ((((9.16020636E8, rt0.c1, '-1622817873')) NOT BETWEEN ((rt0.c0, t0.c0, '%j')) AND ((t0.c0, rt0.c3, t0.c2))))) WHERE ((((((vt0.c0))<((t0.c0))) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1, t0.c2, vt0.c0, rt0.c0, t0.c1 FROM rt0, vt0 INNER JOIN t0 ON (~ ((((9.16020636E8, rt0.c1, '-1622817873')) NOT BETWEEN ((rt0.c0, t0.c0, '%j')) AND ((t0.c0, rt0.c3, t0.c2)))));
SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0, v0 WHERE (CASE WHEN v0.c0 THEN rt0.c1 END COLLATE BINARY COLLATE BINARY) GROUP BY rt0.c2, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0, v0 WHERE ((NOT (CASE WHEN v0.c0 THEN rt0.c1 END COLLATE BINARY COLLATE BINARY))) GROUP BY rt0.c2, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0, v0 WHERE (((CASE WHEN v0.c0 THEN rt0.c1 END COLLATE BINARY COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT v0.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM rt0, vt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c1;
SELECT v0.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM rt0, vt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c1 HAVING (((rt0.c1)) NOT BETWEEN ((((MIN(GROUP_CONCAT(0.7530741416426143)))||(rt0.c2)))) AND ((TOTAL(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM rt0, vt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c1 HAVING (NOT ((((rt0.c1)) NOT BETWEEN ((((MIN(GROUP_CONCAT(0.7530741416426143)))||(rt0.c2)))) AND ((TOTAL(GROUP_CONCAT(vt0.c0))))))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c1 FROM rt0, vt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c1 HAVING (((((rt0.c1)) NOT BETWEEN ((((MIN(GROUP_CONCAT(0.7530741416426143)))||(rt0.c2)))) AND ((TOTAL(GROUP_CONCAT(vt0.c0)))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1)))*(((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c0 IN (rt0.c1)))*(((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c0 IN (rt0.c1)))*(((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c0 FROM rt0 WHERE ((((NOT (rt0.c0))) ISNULL)) GROUP BY rt0.c3, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT ((((NOT (rt0.c0))) ISNULL)))) GROUP BY rt0.c3, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c0 FROM rt0 WHERE ((((((NOT (rt0.c0))) ISNULL)) ISNULL)) GROUP BY rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING GROUP_CONCAT((((TOTAL(0x43ffcac3), v0.c0, v0.c0))=((AVG(v0.c0), GROUP_CONCAT(GROUP_CONCAT(v0.c0)), vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT((((TOTAL(0x43ffcac3), v0.c0, v0.c0))=((AVG(v0.c0), GROUP_CONCAT(GROUP_CONCAT(v0.c0)), vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT((((TOTAL(0X43ffcac3), v0.c0, v0.c0))==((AVG(v0.c0), GROUP_CONCAT(GROUP_CONCAT(v0.c0)), vt0.c0))))) ISNULL);
SELECT ALL SUM((((v0.c0 IN ()))GLOB(CAST(v0.c0 AS NUMERIC)))) FROM v0 ORDER BY CAST(CAST(v0.c0 AS TEXT) AS INTEGER);
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c0 IN ()))&(rt0.c3 COLLATE RTRIM))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT ((((rt0.c0 IN ()))&(rt0.c3 COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c0 IN ()))&(rt0.c3 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((((vt0.c0) NOTNULL) IN ())) UNION SELECT DISTINCT vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT ((((vt0.c0) NOTNULL) IN ())))) UNION SELECT DISTINCT vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((((((vt0.c0) NOTNULL) IN ())) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c1 FROM rt0, vt0;
SELECT rt0.c0, rt0.c2, v0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON CAST((0.10229624121677194 IN ()) AS INTEGER) GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c3;
SELECT rt0.c0, rt0.c2, v0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON CAST((0.10229624121677194 IN ()) AS INTEGER) WHERE ((rt0.c0 IN (rt0.c3, rt0.c1)) COLLATE RTRIM) GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON CAST((0.10229624121677194 IN ()) AS INTEGER) WHERE ((NOT ((rt0.c0 IN (rt0.c3, rt0.c1)) COLLATE RTRIM))) GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c2, v0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON CAST((0.10229624121677194 IN ()) AS INTEGER) WHERE ((((rt0.c0 IN (rt0.c3, rt0.c1)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c3;
SELECT rt0.c0, rt0.c2, v0.c0, rt0.c3 FROM rt0 FULL OUTER JOIN v0 ON CAST((0.10229624121677194 IN ()) AS INTEGER) GROUP BY rt0.c0, rt0.c2, v0.c0, rt0.c3;
SELECT ALL rt0.c0, t0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c2;
SELECT ALL rt0.c0, t0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c2 HAVING ((COUNT(*)) BETWEEN (SUM(rt0.c3)) AND (((rt0.c3)>=(MIN(AVG(MAX(AVG(MAX(COUNT(t0.c2)))))))))) UNION ALL SELECT ALL rt0.c0, t0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c2 HAVING (NOT (((COUNT(*)) BETWEEN (SUM(rt0.c3)) AND (((rt0.c3)>=(MIN(AVG(MAX(AVG(MAX(COUNT(t0.c2)))))))))))) UNION ALL SELECT rt0.c0, t0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c2 HAVING ((((COUNT(*)) BETWEEN (SUM(rt0.c3)) AND (((rt0.c3)>=(MIN(AVG(MAX(AVG(MAX(COUNT(t0.c2))))))))))) ISNULL);
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON t0.c2;
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON t0.c2 WHERE ('1857869714') UNION ALL SELECT ALL * FROM v0 RIGHT OUTER JOIN t0 ON t0.c2 WHERE ((NOT ('1857869714'))) UNION ALL SELECT ALL * FROM v0 RIGHT OUTER JOIN t0 ON t0.c2 WHERE ((('1857869714') ISNULL));
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON t0.c2;
SELECT DISTINCT t0.c2, vt0.c0, t0.c0, rt0.c2 FROM rt0, vt0, t0;
SELECT DISTINCT t0.c2, vt0.c0, t0.c0, rt0.c2 FROM rt0, vt0, t0 WHERE (LIKE(0.9132977395783798, '', 'V') COLLATE RTRIM) UNION SELECT DISTINCT t0.c2, vt0.c0, t0.c0, rt0.c2 FROM rt0, vt0, t0 WHERE ((NOT (LIKE(0.9132977395783798, '', 'V') COLLATE RTRIM))) UNION SELECT DISTINCT t0.c2, vt0.c0, t0.c0, rt0.c2 FROM rt0, vt0, t0 WHERE (((LIKE(0.9132977395783798, '', 'V') COLLATE RTRIM) ISNULL));
SELECT DISTINCT t0.c2, vt0.c0, t0.c0, rt0.c2 FROM rt0, vt0, t0;
SELECT t0.c1, rt0.c2 FROM t0, rt0, vt0 GROUP BY t0.c1, rt0.c2;
SELECT t0.c1, rt0.c2 FROM t0, rt0, vt0 WHERE ((((((((((((rt0.c3))>=((t0.c2))))AND((t0.c2 IN ()))))AND(CHAR(rt0.c1))))OR(((t0.c2)*(rt0.c3)))))OR(((rt0.c2)&(t0.c2))))) GROUP BY t0.c1, rt0.c2 UNION SELECT t0.c1, rt0.c2 FROM t0, rt0, vt0 WHERE ((NOT ((((((((((((rt0.c3))>=((t0.c2))))AND((t0.c2 IN ()))))AND(CHAR(rt0.c1))))OR(((t0.c2)*(rt0.c3)))))OR(((rt0.c2)&(t0.c2))))))) GROUP BY t0.c1, rt0.c2 UNION SELECT t0.c1, rt0.c2 FROM t0, rt0, vt0 WHERE ((((((((((((((rt0.c3))>=((t0.c2))))AND((t0.c2 IN ()))))AND(CHAR(rt0.c1))))OR(((t0.c2)*(rt0.c3)))))OR(((rt0.c2)&(t0.c2))))) ISNULL)) GROUP BY t0.c1, rt0.c2;
SELECT t0.c1, rt0.c2 FROM t0, rt0, vt0 GROUP BY t0.c1, rt0.c2;
SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING SUM(MIN(rt0.c3) COLLATE RTRIM) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (SUM(MIN(rt0.c3) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING ((SUM(MIN(rt0.c3) COLLATE RTRIM)) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((x'') BETWEEN (vt0.c0) AND (NULL)) COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((x'') BETWEEN (vt0.c0) AND (NULL)) COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((x'') BETWEEN (vt0.c0) AND (NULL)) COLLATE NOCASE) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0 NOT INDEXED, rt0, vt0;
SELECT DISTINCT * FROM t0, rt0, vt0 WHERE (CAST(NULL AS REAL)) UNION SELECT DISTINCT * FROM t0, rt0, vt0 WHERE ((NOT (CAST(NULL AS REAL)))) UNION SELECT DISTINCT * FROM t0, rt0, vt0 WHERE (((CAST(NULL AS REAL)) ISNULL));
SELECT DISTINCT * FROM t0 NOT INDEXED, rt0, vt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (CASE WHEN '0.16136708454864057' THEN (NOT (0X53aaab15)) END) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN '0.16136708454864057' THEN (NOT (0X53aaab15)) END))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((CASE WHEN '0.16136708454864057' THEN (NOT (0X53aaab15)) END) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0, v0.c0, rt0.c2, t0.c1 FROM t0, v0 LEFT OUTER JOIN rt0 ON CAST(rt0.c2 AS BLOB) GROUP BY rt0.c0, v0.c0, rt0.c2, t0.c1;
SELECT rt0.c0, v0.c0, rt0.c2, t0.c1 FROM t0, v0 LEFT OUTER JOIN rt0 ON CAST(rt0.c2 AS BLOB) GROUP BY rt0.c0, v0.c0, rt0.c2, t0.c1 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c2, t0.c1 FROM t0, v0 LEFT OUTER JOIN rt0 ON CAST(rt0.c2 AS BLOB) GROUP BY rt0.c0, v0.c0, rt0.c2, t0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c0, v0.c0, rt0.c2, t0.c1 FROM t0, v0 LEFT OUTER JOIN rt0 ON CAST(rt0.c2 AS BLOB) GROUP BY rt0.c0, v0.c0, rt0.c2, t0.c1 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c0, v0.c0, rt0.c2, t0.c1 FROM t0, v0 LEFT OUTER JOIN rt0 ON CAST(rt0.c2 AS BLOB) GROUP BY rt0.c0, v0.c0, rt0.c2, t0.c1;
SELECT rt0.c0, v0.c0, rt0.c2, t0.c1 FROM t0, v0 LEFT OUTER JOIN rt0 ON CAST(rt0.c2 AS BLOB) GROUP BY rt0.c0, v0.c0, rt0.c2, t0.c1 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c2, t0.c1 FROM t0, v0 LEFT OUTER JOIN rt0 ON CAST(rt0.c2 AS BLOB) GROUP BY rt0.c0, v0.c0, rt0.c2, t0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c0, v0.c0, rt0.c2, t0.c1 FROM t0, v0 LEFT OUTER JOIN rt0 ON CAST(rt0.c2 AS BLOB) GROUP BY rt0.c0, v0.c0, rt0.c2, t0.c1 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c0, v0.c0, rt0.c2, t0.c1 FROM t0, v0 LEFT OUTER JOIN rt0 ON CAST(rt0.c2 AS BLOB) GROUP BY rt0.c0, v0.c0, rt0.c2, t0.c1;
SELECT ALL * FROM v0, rt0 RIGHT OUTER JOIN vt0 ON (NOT (((rt0.c1)+(v0.c0))));
SELECT * FROM v0, rt0 RIGHT OUTER JOIN vt0 ON (NOT (((rt0.c1)+(v0.c0)))) WHERE ((rt0.c3 IN (v0.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM v0, rt0 RIGHT OUTER JOIN vt0 ON (NOT (((rt0.c1)+(v0.c0)))) WHERE ((NOT ((rt0.c3 IN (v0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM v0, rt0 RIGHT OUTER JOIN vt0 ON (NOT (((rt0.c1)+(v0.c0)))) WHERE ((((rt0.c3 IN (v0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM v0, rt0 RIGHT OUTER JOIN vt0 ON (NOT (((rt0.c1)+(v0.c0))));
SELECT DISTINCT rt0.c1 FROM v0, t0, rt0;
SELECT DISTINCT rt0.c1 FROM v0, t0, rt0 WHERE (CASE CASE t0.c0  WHEN t0.c1 THEN t0.c0 ELSE rt0.c3 END  WHEN ((rt0.c1)<=(t0.c0)) THEN ((rt0.c2)-(rt0.c2)) END) UNION SELECT DISTINCT rt0.c1 FROM v0, t0, rt0 WHERE ((NOT (CASE CASE t0.c0  WHEN t0.c1 THEN t0.c0 ELSE rt0.c3 END  WHEN ((rt0.c1)<=(t0.c0)) THEN ((rt0.c2)-(rt0.c2)) END))) UNION SELECT DISTINCT rt0.c1 FROM v0, t0, rt0 WHERE (((CASE CASE t0.c0  WHEN t0.c1 THEN t0.c0 ELSE rt0.c3 END  WHEN ((rt0.c1)<=(t0.c0)) THEN ((rt0.c2)-(rt0.c2)) END) ISNULL));
SELECT DISTINCT rt0.c1 FROM v0, t0, rt0;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 WHERE (((((rt0.c0)>>(rt0.c2)))>(((((((((rt0.c2)AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c3))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0, rt0 WHERE ((NOT (((((rt0.c0)>>(rt0.c2)))>(((((((((rt0.c2)AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c3))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0, rt0 WHERE (((((((rt0.c0)>>(rt0.c2)))>(((((((((rt0.c2)AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c3))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, rt0 GROUP BY rt0.c2;
SELECT v0.c0, t0.c2, t0.c0 FROM vt0, v0 CROSS JOIN t0 ON (((CASE t0.c2  WHEN NULL THEN NULL WHEN t0.c0 THEN NULL WHEN v0.c0 THEN t0.c1 ELSE t0.c0 END))!=((((((((((vt0.c0)OR(t0.c1)))OR(t0.c2)))OR(vt0.c0)))AND(vt0.c0))))) GROUP BY v0.c0, t0.c2, t0.c0;
SELECT ALL v0.c0, t0.c2, t0.c0 FROM vt0, v0 CROSS JOIN t0 ON (((CASE t0.c2  WHEN NULL THEN NULL WHEN t0.c0 THEN NULL WHEN v0.c0 THEN t0.c1 ELSE t0.c0 END))<>((((((((((vt0.c0)OR(t0.c1)))OR(t0.c2)))OR(vt0.c0)))AND(vt0.c0))))) GROUP BY v0.c0, t0.c2, t0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0, t0.c2, t0.c0 FROM vt0, v0 CROSS JOIN t0 ON (((CASE t0.c2  WHEN NULL THEN NULL WHEN t0.c0 THEN NULL WHEN v0.c0 THEN t0.c1 ELSE t0.c0 END))!=((((((((((vt0.c0)OR(t0.c1)))OR(t0.c2)))OR(vt0.c0)))AND(vt0.c0))))) GROUP BY v0.c0, t0.c2, t0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0, t0.c2, t0.c0 FROM vt0, v0 CROSS JOIN t0 ON (((CASE t0.c2  WHEN NULL THEN NULL WHEN t0.c0 THEN NULL WHEN v0.c0 THEN t0.c1 ELSE t0.c0 END))<>((((((((((vt0.c0)OR(t0.c1)))OR(t0.c2)))OR(vt0.c0)))AND(vt0.c0))))) GROUP BY v0.c0, t0.c2, t0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0, t0.c2, t0.c0 FROM vt0, v0 CROSS JOIN t0 ON (((CASE t0.c2  WHEN NULL THEN NULL WHEN t0.c0 THEN NULL WHEN v0.c0 THEN t0.c1 ELSE t0.c0 END))!=((((((((((vt0.c0)OR(t0.c1)))OR(t0.c2)))OR(vt0.c0)))AND(vt0.c0))))) GROUP BY v0.c0, t0.c2, t0.c0;
SELECT ALL v0.c0, t0.c2, t0.c0 FROM vt0, v0 CROSS JOIN t0 ON (((CASE t0.c2  WHEN NULL THEN NULL WHEN t0.c0 THEN NULL WHEN v0.c0 THEN t0.c1 ELSE t0.c0 END))<>((((((((((vt0.c0)OR(t0.c1)))OR(t0.c2)))OR(vt0.c0)))AND(vt0.c0))))) GROUP BY v0.c0, t0.c2, t0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0, t0.c2, t0.c0 FROM vt0, v0 CROSS JOIN t0 ON (((CASE t0.c2  WHEN NULL THEN NULL WHEN t0.c0 THEN NULL WHEN v0.c0 THEN t0.c1 ELSE t0.c0 END))!=((((((((((vt0.c0)OR(t0.c1)))OR(t0.c2)))OR(vt0.c0)))AND(vt0.c0))))) GROUP BY v0.c0, t0.c2, t0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0, t0.c2, t0.c0 FROM vt0, v0 CROSS JOIN t0 ON (((CASE t0.c2  WHEN NULL THEN NULL WHEN t0.c0 THEN NULL WHEN v0.c0 THEN t0.c1 ELSE t0.c0 END))<>((((((((((vt0.c0)OR(t0.c1)))OR(t0.c2)))OR(vt0.c0)))AND(vt0.c0))))) GROUP BY v0.c0, t0.c2, t0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0, t0.c2, t0.c0 FROM vt0, v0 CROSS JOIN t0 ON (((CASE t0.c2  WHEN NULL THEN NULL WHEN t0.c0 THEN NULL WHEN v0.c0 THEN t0.c1 ELSE t0.c0 END))!=((((((((((vt0.c0)OR(t0.c1)))OR(t0.c2)))OR(vt0.c0)))AND(vt0.c0))))) GROUP BY v0.c0, t0.c2, t0.c0;
SELECT ALL t0.c2, v0.c0 FROM v0, t0 RIGHT OUTER JOIN vt0 ON ((CASE WHEN t0.c0 THEN v0.c0 END)*(NULL)) CROSS JOIN rt0 ON CASE WHEN ((v0.c0) NOT BETWEEN (NULL) AND (t0.c1)) THEN ((0.37984179059413614) NOT BETWEEN (t0.c0) AND (v0.c0)) END;
SELECT ALL t0.c2, v0.c0 FROM v0, t0 RIGHT OUTER JOIN vt0 ON ((CASE WHEN t0.c0 THEN v0.c0 END)*(NULL)) CROSS JOIN rt0 ON CASE WHEN ((v0.c0) NOT BETWEEN (NULL) AND (t0.c1)) THEN ((0.37984179059413614) NOT BETWEEN (t0.c0) AND (v0.c0)) END WHERE (((CASE t0.c0  WHEN rt0.c3 THEN '0.6699847454029775' WHEN rt0.c3 THEN t0.c1 WHEN rt0.c3 THEN rt0.c3 ELSE vt0.c0 END) NOTNULL)) UNION ALL SELECT ALL t0.c2, v0.c0 FROM v0, t0 RIGHT OUTER JOIN vt0 ON ((CASE WHEN t0.c0 THEN v0.c0 END)*(NULL)) CROSS JOIN rt0 ON CASE WHEN ((v0.c0) NOT BETWEEN (NULL) AND (t0.c1)) THEN ((0.37984179059413614) NOT BETWEEN (t0.c0) AND (v0.c0)) END WHERE ((NOT (((CASE t0.c0  WHEN rt0.c3 THEN '0.6699847454029775' WHEN rt0.c3 THEN t0.c1 WHEN rt0.c3 THEN rt0.c3 ELSE vt0.c0 END) NOTNULL)))) UNION ALL SELECT t0.c2, v0.c0 FROM v0, t0 NOT INDEXED RIGHT OUTER JOIN vt0 ON ((CASE WHEN t0.c0 THEN v0.c0 END)*(NULL)) CROSS JOIN rt0 ON CASE WHEN ((v0.c0) NOT BETWEEN (NULL) AND (t0.c1)) THEN ((0.37984179059413614) NOT BETWEEN (t0.c0) AND (v0.c0)) END WHERE (((((CASE t0.c0  WHEN rt0.c3 THEN '0.6699847454029775' WHEN rt0.c3 THEN t0.c1 WHEN rt0.c3 THEN rt0.c3 ELSE vt0.c0 END) NOTNULL)) ISNULL));
SELECT ALL t0.c2, v0.c0 FROM v0, t0 RIGHT OUTER JOIN vt0 ON ((CASE WHEN t0.c0 THEN v0.c0 END)*(NULL)) CROSS JOIN rt0 ON CASE WHEN ((v0.c0) NOT BETWEEN (NULL) AND (t0.c1)) THEN ((0.37984179059413614) NOT BETWEEN (t0.c0) AND (v0.c0)) END;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL t0.c2, t0.c0, t0.c1, v0.c0 FROM v0, t0, rt0 GROUP BY t0.c2, t0.c0, t0.c1, v0.c0;
SELECT t0.c2, t0.c0, t0.c1, v0.c0 FROM v0, t0, rt0 WHERE (TYPEOF(DISTINCT LENGTH(rt0.c0))) GROUP BY t0.c2, t0.c0, t0.c1, v0.c0 UNION SELECT ALL t0.c2, t0.c0, t0.c1, v0.c0 FROM v0, t0, rt0 WHERE ((NOT (TYPEOF(DISTINCT LENGTH(rt0.c0))))) GROUP BY t0.c2, t0.c0, t0.c1, v0.c0 UNION SELECT ALL t0.c2, t0.c0, t0.c1, v0.c0 FROM v0, t0, rt0 WHERE (((TYPEOF(DISTINCT LENGTH(rt0.c0))) ISNULL)) GROUP BY t0.c2, t0.c0, t0.c1, v0.c0;
SELECT ALL t0.c2, t0.c0, t0.c1, v0.c0 FROM v0, t0, rt0 GROUP BY t0.c2, t0.c0, t0.c1, v0.c0;
SELECT ALL v0.c0 FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c0, v0.c0, 0.7421265672430398)) NOT BETWEEN ((x'591c', t0.c2, (~ (t0.c2)))) AND ((t0.c1 COLLATE NOCASE, ((t0.c0) BETWEEN ('-524721257') AND (vt0.c0)), ((t0.c0)LIKE(''))))) FULL OUTER JOIN v0 ON (v0.c0 IN ()) GROUP BY v0.c0;
SELECT * FROM t0 CROSS JOIN vt0 ON (((rt0.c0 IN (NULL, t0.c0)))>>(((x'')>=(rt0.c0)))) INNER JOIN rt0 ON CASE WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN t0.c2 WHEN rt0.c3 THEN '' ELSE vt0.c0 END COLLATE NOCASE;
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (((rt0.c0 IN (NULL, t0.c0)))>>(((x'')>=(rt0.c0)))) INNER JOIN rt0 ON CASE WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN t0.c2 WHEN rt0.c3 THEN '' ELSE vt0.c0 END COLLATE NOCASE WHERE (CAST(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c3)) AS TEXT)) UNION ALL SELECT ALL * FROM t0 CROSS JOIN vt0 ON (((rt0.c0 IN (NULL, t0.c0)))>>(((x'')>=(rt0.c0)))) INNER JOIN rt0 ON CASE WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN t0.c2 WHEN rt0.c3 THEN '' ELSE vt0.c0 END COLLATE NOCASE WHERE ((NOT (CAST(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c3)) AS TEXT)))) UNION ALL SELECT * FROM t0 CROSS JOIN vt0 ON (((rt0.c0 IN (NULL, t0.c0)))>>(((x'')>=(rt0.c0)))) INNER JOIN rt0 ON CASE WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN t0.c2 WHEN rt0.c3 THEN '' ELSE vt0.c0 END COLLATE NOCASE WHERE (((CAST(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c3)) AS TEXT)) ISNULL));
SELECT * FROM t0 CROSS JOIN vt0 ON (((rt0.c0 IN (NULL, t0.c0)))>>(((x'')>=(rt0.c0)))) INNER JOIN rt0 ON CASE WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN t0.c2 WHEN rt0.c3 THEN '' ELSE vt0.c0 END COLLATE NOCASE;
SELECT DISTINCT t0.c1 FROM t0, vt0;
SELECT DISTINCT t0.c1 FROM t0, vt0 WHERE (((((t0.c1) ISNULL))/((((x''))!=((t0.c1)))))) UNION SELECT DISTINCT t0.c1 FROM t0, vt0 WHERE ((NOT (((((t0.c1) ISNULL))/((((x''))<>((t0.c1)))))))) UNION SELECT DISTINCT t0.c1 FROM t0, vt0 WHERE (((((((t0.c1) ISNULL))/((((x''))<>((t0.c1)))))) ISNULL));
SELECT DISTINCT t0.c1 FROM t0, vt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE (((rt0.c2)>=(rt0.c3)) COLLATE BINARY) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2)>=(rt0.c3)) COLLATE BINARY))) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE (((((rt0.c2)>=(rt0.c3)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c2 HAVING TOTAL(AVG(rt0.c3)) UNION ALL SELECT rt0.c1, rt0.c2 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (TOTAL(AVG(rt0.c3)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((TOTAL(AVG(rt0.c3))) ISNULL);
SELECT ALL SUM(CASE WHEN ((((t0.c0)AND(rt0.c1)))AND(rt0.c3)) THEN x'' ELSE ((rt0.c3) BETWEEN (t0.c2) AND (rt0.c0)) END) FROM rt0, v0, t0;
SELECT ALL t0.c2, t0.c1, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0, t0;
SELECT ALL t0.c2, t0.c1, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0, t0 WHERE ((('4#') NOT BETWEEN (t0.c0 COLLATE RTRIM) AND ((((x'f2ed', rt0.c2, rt0.c1))==((rt0.c0, t0.c2, t0.c1)))))) UNION ALL SELECT t0.c2, t0.c1, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0, t0 WHERE ((NOT ((('4#') NOT BETWEEN (t0.c0 COLLATE RTRIM) AND ((((x'f2ed', rt0.c2, rt0.c1))==((rt0.c0, t0.c2, t0.c1)))))))) UNION ALL SELECT t0.c2, t0.c1, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0, t0 WHERE ((((('4#') NOT BETWEEN (t0.c0 COLLATE RTRIM) AND ((((x'f2ed', rt0.c2, rt0.c1))==((rt0.c0, t0.c2, t0.c1)))))) ISNULL));
SELECT ALL t0.c2, t0.c1, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM v0, rt0, t0;
SELECT DISTINCT v0.c0, t0.c1, t0.c0, vt0.c0, t0.c2 FROM t0, vt0, v0;
SELECT DISTINCT v0.c0, t0.c1, t0.c0, vt0.c0, t0.c2 FROM t0, vt0, v0 WHERE (CASE '1296055666'  WHEN (- (t0.c0)) THEN ABS(t0.c0) WHEN ((t0.c2)IS(t0.c1)) THEN TRIM(DISTINCT v0.c0, vt0.c0) WHEN CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN '-118962924' THEN t0.c2 ELSE v0.c0 END THEN ((t0.c2) ISNULL) ELSE LENGTH(t0.c0) END) UNION SELECT DISTINCT v0.c0, t0.c1, t0.c0, vt0.c0, t0.c2 FROM t0, vt0, v0 WHERE ((NOT (CASE '1296055666'  WHEN (- (t0.c0)) THEN ABS(t0.c0) WHEN ((t0.c2)IS(t0.c1)) THEN TRIM(DISTINCT v0.c0, vt0.c0) WHEN CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN '-118962924' THEN t0.c2 ELSE v0.c0 END THEN ((t0.c2) ISNULL) ELSE LENGTH(t0.c0) END))) UNION SELECT DISTINCT v0.c0, t0.c1, t0.c0, vt0.c0, t0.c2 FROM t0, vt0, v0 WHERE (((CASE '1296055666'  WHEN (- (t0.c0)) THEN ABS(t0.c0) WHEN ((t0.c2)IS(t0.c1)) THEN TRIM(DISTINCT v0.c0, vt0.c0) WHEN CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN '-118962924' THEN t0.c2 ELSE v0.c0 END THEN ((t0.c2) ISNULL) ELSE LENGTH(t0.c0) END) ISNULL));
SELECT DISTINCT v0.c0, t0.c1, t0.c0, vt0.c0, t0.c2 FROM t0, vt0, v0;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)))/((((t0.c0, t0.c1, t0.c1)) NOT BETWEEN ((t0.c1, t0.c1, t0.c1)) AND ((t0.c1, t0.c0, t0.c2)))))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)))/((((t0.c0, t0.c1, t0.c1)) NOT BETWEEN ((t0.c1, t0.c1, t0.c1)) AND ((t0.c1, t0.c0, t0.c2)))))))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)))/((((t0.c0, t0.c1, t0.c1)) NOT BETWEEN ((t0.c1, t0.c1, t0.c1)) AND ((t0.c1, t0.c0, t0.c2)))))) ISNULL)) GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT vt0.c0, t0.c1, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c1, t0.c0;
SELECT ALL vt0.c0, t0.c1, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c1, t0.c0 HAVING MIN(COUNT(t0.c0)) UNION ALL SELECT ALL vt0.c0, t0.c1, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c1, t0.c0 HAVING (NOT (MIN(COUNT(t0.c0)))) UNION ALL SELECT vt0.c0, t0.c1, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c1, t0.c0 HAVING ((MIN(COUNT(t0.c0))) ISNULL);
SELECT t0.c1, rt0.c3, t0.c0, rt0.c2, t0.c2 FROM vt0, rt0, t0, v0;
SELECT ALL t0.c1, rt0.c3, t0.c0, rt0.c2, t0.c2 FROM vt0, rt0, t0, v0 WHERE (v0.c0) UNION ALL SELECT t0.c1, rt0.c3, t0.c0, rt0.c2, t0.c2 FROM vt0, rt0 NOT INDEXED, t0, v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL t0.c1, rt0.c3, t0.c0, rt0.c2, t0.c2 FROM vt0, rt0, t0, v0 WHERE (((v0.c0) ISNULL));
SELECT t0.c1, rt0.c3, t0.c0, rt0.c2, t0.c2 FROM vt0, rt0, t0, v0;
SELECT DISTINCT * FROM rt0 NOT INDEXED;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2))!=((rt0.c2)))) IS FALSE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c2))!=((rt0.c2)))) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c2))<>((rt0.c2)))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt0 NOT INDEXED;
SELECT ALL rt0.c0, rt0.c3, t0.c1, rt0.c1, t0.c2, t0.c0, v0.c0, vt0.c0 FROM rt0, t0 LEFT OUTER JOIN vt0 ON CAST((((rt0.c1))<((t0.c0))) AS NUMERIC) LEFT OUTER JOIN v0 ON ((CAST(vt0.c0 AS NUMERIC)) BETWEEN ((('ꬕ#谮^~') NOT BETWEEN (t0.c2) AND (rt0.c0))) AND (rt0.c1)) GROUP BY rt0.c0, rt0.c3, t0.c1, rt0.c1, t0.c2, t0.c0, v0.c0, vt0.c0;
SELECT ALL rt0.c0, rt0.c3, t0.c1, rt0.c1, t0.c2, t0.c0, v0.c0, vt0.c0 FROM rt0, t0 LEFT OUTER JOIN vt0 ON CAST((((rt0.c1))<((t0.c0))) AS NUMERIC) LEFT OUTER JOIN v0 ON ((CAST(vt0.c0 AS NUMERIC)) BETWEEN ((('ꬕ#谮^~') NOT BETWEEN (t0.c2) AND (rt0.c0))) AND (rt0.c1)) WHERE (0.6078868706492817) GROUP BY rt0.c0, rt0.c3, t0.c1, rt0.c1, t0.c2, t0.c0, v0.c0, vt0.c0 UNION SELECT rt0.c0, rt0.c3, t0.c1, rt0.c1, t0.c2, t0.c0, v0.c0, vt0.c0 FROM rt0, t0 LEFT OUTER JOIN vt0 ON CAST((((rt0.c1))<((t0.c0))) AS NUMERIC) LEFT OUTER JOIN v0 ON ((CAST(vt0.c0 AS NUMERIC)) BETWEEN ((('ꬕ#谮^~') NOT BETWEEN (t0.c2) AND (rt0.c0))) AND (rt0.c1)) WHERE ((NOT (0.6078868706492817))) GROUP BY rt0.c0, rt0.c3, t0.c1, rt0.c1, t0.c2, t0.c0, v0.c0, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c3, t0.c1, rt0.c1, t0.c2, t0.c0, v0.c0, vt0.c0 FROM rt0 NOT INDEXED, t0 LEFT OUTER JOIN vt0 ON CAST((((rt0.c1))<((t0.c0))) AS NUMERIC) LEFT OUTER JOIN v0 ON ((CAST(vt0.c0 AS NUMERIC)) BETWEEN ((('ꬕ#谮^~') NOT BETWEEN (t0.c2) AND (rt0.c0))) AND (rt0.c1)) WHERE (((0.6078868706492817) ISNULL)) GROUP BY rt0.c0, rt0.c3, t0.c1, rt0.c1, t0.c2, t0.c0, v0.c0, vt0.c0;
SELECT ALL rt0.c0, rt0.c3, t0.c1, rt0.c1, t0.c2, t0.c0, v0.c0, vt0.c0 FROM rt0, t0 LEFT OUTER JOIN vt0 ON CAST((((rt0.c1))<((t0.c0))) AS NUMERIC) LEFT OUTER JOIN v0 ON ((CAST(vt0.c0 AS NUMERIC)) BETWEEN ((('ꬕ#谮^~') NOT BETWEEN (t0.c2) AND (rt0.c0))) AND (rt0.c1)) GROUP BY rt0.c0, rt0.c3, t0.c1, rt0.c1, t0.c2, t0.c0, v0.c0, vt0.c0;
SELECT ALL t0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c1, t0.c2, rt0.c3 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c1, t0.c2, rt0.c3;
SELECT t0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c1, t0.c2, rt0.c3 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c1, t0.c2, rt0.c3 HAVING (+ (((((rt0.c3)OR(SUM(rt0.c1))))OR(COUNT(*))))) UNION ALL SELECT ALL t0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c1, t0.c2, rt0.c3 FROM t0 NOT INDEXED NATURAL JOIN rt0 GROUP BY t0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c1, t0.c2, rt0.c3 HAVING (NOT ((+ (((((rt0.c3)OR(SUM(rt0.c1))))OR(COUNT(*))))))) UNION ALL SELECT t0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c1, t0.c2, rt0.c3 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c1, t0.c2, rt0.c3 HAVING (((+ (((((rt0.c3)OR(SUM(rt0.c1))))OR(COUNT(*)))))) ISNULL);
SELECT ALL t0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c1, t0.c2, rt0.c3 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c1, t0.c2, rt0.c3;
SELECT t0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c1, t0.c2, rt0.c3 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c1, t0.c2, rt0.c3 HAVING (+ (((((rt0.c3)OR(SUM(rt0.c1))))OR(COUNT(*))))) UNION ALL SELECT ALL t0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c1, t0.c2, rt0.c3 FROM t0 NOT INDEXED NATURAL JOIN rt0 GROUP BY t0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c1, t0.c2, rt0.c3 HAVING (NOT ((+ (((((rt0.c3)OR(SUM(rt0.c1))))OR(COUNT(*))))))) UNION ALL SELECT t0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c1, t0.c2, rt0.c3 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c1, t0.c2, rt0.c3 HAVING (((+ (((((rt0.c3)OR(SUM(rt0.c1))))OR(COUNT(*)))))) ISNULL);
SELECT ALL t0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c1, t0.c2, rt0.c3 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c1, t0.c2, rt0.c3;
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON CAST(CAST(rt0.c0 AS TEXT) AS TEXT) LEFT OUTER JOIN v0 ON (((- (rt0.c1))) NOT BETWEEN ('-47260738') AND (NULL)) FULL OUTER JOIN vt0 ON ((LIKELY(x'')) BETWEEN ((((rt0.c2))<=((t0.c2)))) AND (rt0.c0));
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON CAST(CAST(rt0.c0 AS TEXT) AS TEXT) LEFT OUTER JOIN v0 ON (((- (rt0.c1))) NOT BETWEEN ('-47260738') AND (NULL)) FULL OUTER JOIN vt0 ON ((LIKELY(x'')) BETWEEN ((((rt0.c2))<=((t0.c2)))) AND (rt0.c0)) WHERE (COALESCE(((NULL) NOTNULL), ((rt0.c1) IS FALSE), ((rt0.c2) BETWEEN (t0.c0) AND (t0.c2)), ((NULL)%(t0.c2)), ((vt0.c0)<>(t0.c2)), ((((((((t0.c0)AND(rt0.c3)))AND(t0.c1)))AND(t0.c0)))OR(rt0.c0)))) ORDER BY 0X4c9bb76e ASC  NULLS FIRST, CAST(((rt0.c2)/(t0.c2)) AS NUMERIC) ASC  NULLS FIRST;
SELECT DISTINCT * FROM t0, vt0 INNER JOIN rt0 ON 248713027 INNER JOIN v0 ON ((((CASE 1857869714  WHEN 0.5735847895205272 THEN rt0.c3 ELSE v0.c0 END)OR(t0.c0)))AND(((((rt0.c0)AND(t0.c1)))AND(rt0.c1))));
SELECT DISTINCT * FROM t0, vt0 INNER JOIN rt0 ON 248713027 INNER JOIN v0 ON ((((CASE 1857869714  WHEN 0.5735847895205272 THEN rt0.c3 ELSE v0.c0 END)OR(t0.c0)))AND(((((rt0.c0)AND(t0.c1)))AND(rt0.c1)))) WHERE ((((((((75374106)) NOT BETWEEN (('108122912')) AND ((t0.c2))))OR(((rt0.c3)<<(t0.c2)))))AND(((0.9418340357967637) IS FALSE)))) UNION SELECT DISTINCT * FROM t0, vt0 INNER JOIN rt0 ON 248713027 INNER JOIN v0 ON ((((CASE 1857869714  WHEN 0.5735847895205272 THEN rt0.c3 ELSE v0.c0 END)OR(t0.c0)))AND(((((rt0.c0)AND(t0.c1)))AND(rt0.c1)))) WHERE ((NOT ((((((((75374106)) NOT BETWEEN (('108122912')) AND ((t0.c2))))OR(((rt0.c3)<<(t0.c2)))))AND(((0.9418340357967637) IS FALSE)))))) UNION SELECT DISTINCT * FROM t0, vt0 INNER JOIN rt0 ON 248713027 INNER JOIN v0 ON ((((CASE 1857869714  WHEN 0.5735847895205272 THEN rt0.c3 ELSE v0.c0 END)OR(t0.c0)))AND(((((rt0.c0)AND(t0.c1)))AND(rt0.c1)))) WHERE ((((((((((75374106)) NOT BETWEEN (('108122912')) AND ((t0.c2))))OR(((rt0.c3)<<(t0.c2)))))AND(((0.9418340357967637) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM t0, vt0 INNER JOIN rt0 ON 248713027 INNER JOIN v0 ON ((((CASE 1857869714  WHEN 0.5735847895205272 THEN rt0.c3 ELSE v0.c0 END)OR(t0.c0)))AND(((((rt0.c0)AND(t0.c1)))AND(rt0.c1))));
SELECT ALL t0.c0, t0.c1, t0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0, vt0, t0 GROUP BY t0.c0, t0.c1, t0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL t0.c0, t0.c1, t0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0, vt0, t0 WHERE (UNLIKELY(DISTINCT ((((((((t0.c0)OR(rt0.c0)))OR(t0.c1)))OR(t0.c1)))AND(t0.c2)))) GROUP BY t0.c0, t0.c1, t0.c2, rt0.c3, rt0.c0, rt0.c1 UNION SELECT t0.c0, t0.c1, t0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0, vt0, t0 WHERE ((NOT (UNLIKELY(DISTINCT ((((((((t0.c0)OR(rt0.c0)))OR(t0.c1)))OR(t0.c1)))AND(t0.c2)))))) GROUP BY t0.c0, t0.c1, t0.c2, rt0.c3, rt0.c0, rt0.c1 UNION SELECT ALL t0.c0, t0.c1, t0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0, vt0, t0 WHERE (((UNLIKELY(DISTINCT ((((((((t0.c0)OR(rt0.c0)))OR(t0.c1)))OR(t0.c1)))AND(t0.c2)))) ISNULL)) GROUP BY t0.c0, t0.c1, t0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL t0.c0, t0.c1, t0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0, vt0, t0 GROUP BY t0.c0, t0.c1, t0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT t0.c2, t0.c1, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM t0, v0, rt0 GROUP BY t0.c2, t0.c1, rt0.c3, rt0.c0, rt0.c2, v0.c0;
SELECT ALL t0.c2, t0.c1, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM t0, v0, rt0 GROUP BY t0.c2, t0.c1, rt0.c3, rt0.c0, rt0.c2, v0.c0 HAVING COUNT(1285273454) UNION ALL SELECT t0.c2, t0.c1, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM t0, v0, rt0 GROUP BY t0.c2, t0.c1, rt0.c3, rt0.c0, rt0.c2, v0.c0 HAVING (NOT (COUNT(1285273454))) UNION ALL SELECT ALL t0.c2, t0.c1, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM t0, v0, rt0 GROUP BY t0.c2, t0.c1, rt0.c3, rt0.c0, rt0.c2, v0.c0 HAVING ((COUNT(1285273454)) ISNULL);
SELECT t0.c2, t0.c1, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM t0, v0, rt0 GROUP BY t0.c2, t0.c1, rt0.c3, rt0.c0, rt0.c2, v0.c0;
SELECT ALL t0.c2, t0.c1, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM t0, v0, rt0 GROUP BY t0.c2, t0.c1, rt0.c3, rt0.c0, rt0.c2, v0.c0 HAVING COUNT(1285273454) UNION ALL SELECT t0.c2, t0.c1, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM t0, v0, rt0 GROUP BY t0.c2, t0.c1, rt0.c3, rt0.c0, rt0.c2, v0.c0 HAVING (NOT (COUNT(1285273454))) UNION ALL SELECT ALL t0.c2, t0.c1, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM t0, v0, rt0 GROUP BY t0.c2, t0.c1, rt0.c3, rt0.c0, rt0.c2, v0.c0 HAVING ((COUNT(1285273454)) ISNULL);
SELECT t0.c2, t0.c1, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM t0, v0, rt0 GROUP BY t0.c2, t0.c1, rt0.c3, rt0.c0, rt0.c2, v0.c0;
SELECT ALL * FROM v0, t0, rt0, vt0;
SELECT ALL * FROM v0, t0, rt0, vt0 WHERE ((((rt0.c3))<((rt0.c1))) COLLATE RTRIM) UNION ALL SELECT ALL * FROM v0, t0, rt0, vt0 WHERE ((NOT ((((rt0.c3))<((rt0.c1))) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM v0, t0, rt0, vt0 WHERE ((((((rt0.c3))<((rt0.c1))) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM v0, t0, rt0, vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)))OR(((vt0.c0) ISNULL))))OR(((vt0.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)))OR(((vt0.c0) ISNULL))))OR(((vt0.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)))OR(((vt0.c0) ISNULL))))OR(((vt0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c1, rt0.c2, rt0.c3, v0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, v0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, v0.c0 FROM rt0, v0, vt0 WHERE ((('-944729989') NOT NULL)) GROUP BY rt0.c1, rt0.c2, rt0.c3, v0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c3, v0.c0 FROM rt0, v0, vt0 WHERE ((NOT ((('-944729989') NOT NULL)))) GROUP BY rt0.c1, rt0.c2, rt0.c3, v0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c3, v0.c0 FROM rt0, v0, vt0 WHERE ((((('-944729989') NOT NULL)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c3, v0.c0;
SELECT rt0.c1, rt0.c2, rt0.c3, v0.c0 FROM rt0, v0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, v0.c0;
SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING COUNT((((COUNT(COUNT(*))))==((TOTAL(MIN(rt0.c0)))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (COUNT((((COUNT(COUNT(*))))=((TOTAL(MIN(rt0.c0)))))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING ((COUNT((((COUNT(COUNT(*))))==((TOTAL(MIN(rt0.c0))))))) ISNULL);
SELECT ALL MAX(((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1))) ISNULL)) FROM t0, vt0 ORDER BY (- (((t0.c1)>(t0.c1)))) DESC  NULLS LAST;
SELECT rt0.c2, rt0.c0, t0.c2 FROM rt0, t0, v0;
SELECT ALL rt0.c2, rt0.c0, t0.c2 FROM rt0, t0, v0 WHERE (((((((v0.c0)GLOB(t0.c2)))AND((rt0.c0 IN (v0.c0)))))AND(((rt0.c2)==(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, t0.c2 FROM rt0, t0, v0 WHERE ((NOT (((((((v0.c0)GLOB(t0.c2)))AND((rt0.c0 IN (v0.c0)))))AND(((rt0.c2)==(rt0.c2))))))) UNION ALL SELECT rt0.c2, rt0.c0, t0.c2 FROM rt0, t0, v0 WHERE (((((((((v0.c0)GLOB(t0.c2)))AND((rt0.c0 IN (v0.c0)))))AND(((rt0.c2)==(rt0.c2))))) ISNULL));
SELECT rt0.c2, rt0.c0, t0.c2 FROM rt0, t0, v0;
SELECT DISTINCT t0.c1 FROM rt0, vt0, v0 FULL OUTER JOIN t0 ON ((rt0.c2) ISNULL) COLLATE BINARY;
SELECT DISTINCT t0.c1 FROM rt0, vt0, v0 FULL OUTER JOIN t0 ON ((rt0.c2) ISNULL) COLLATE BINARY WHERE (((((rt0.c3) NOT NULL)) NOT BETWEEN (((rt0.c3)||(rt0.c1))) AND (LIKE(rt0.c3, t0.c2)))) UNION SELECT DISTINCT t0.c1 FROM rt0, vt0, v0 FULL OUTER JOIN t0 ON ((rt0.c2) ISNULL) COLLATE BINARY WHERE ((NOT (((((rt0.c3) NOT NULL)) NOT BETWEEN (((rt0.c3)||(rt0.c1))) AND (LIKE(rt0.c3, t0.c2)))))) UNION SELECT DISTINCT t0.c1 FROM rt0, vt0, v0 FULL OUTER JOIN t0 ON ((rt0.c2) ISNULL) COLLATE BINARY WHERE (((((((rt0.c3) NOT NULL)) NOT BETWEEN (((rt0.c3)||(rt0.c1))) AND (LIKE(rt0.c3, t0.c2)))) ISNULL));
SELECT DISTINCT t0.c1 FROM rt0, vt0, v0 FULL OUTER JOIN t0 ON ((rt0.c2) ISNULL) COLLATE BINARY;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((('677285627'))>((v0.c0))))OR(((v0.c0)<(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((('677285627'))>((v0.c0))))OR(((v0.c0)<(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((('677285627'))>((v0.c0))))OR(((v0.c0)<(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c0, v0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0, t0.c1 FROM t0 INNER JOIN v0 ON CAST(CASE t0.c1  WHEN rt0.c3 THEN t0.c2 WHEN rt0.c1 THEN '743268521' WHEN rt0.c3 THEN v0.c0 END AS BLOB) FULL OUTER JOIN rt0 ON ((CASE v0.c0  WHEN t0.c2 THEN t0.c1 WHEN '*k≪놓mUp' THEN '1140837059' WHEN t0.c0 THEN rt0.c1 ELSE t0.c1 END) NOT NULL) GROUP BY t0.c0, v0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c0, t0.c1;
SELECT ALL vt0.c0, t0.c2 FROM v0, t0, vt0;
SELECT ALL vt0.c0, t0.c2 FROM v0, t0, vt0 WHERE (((((t0.c0)+(vt0.c0))) ISNULL)) UNION ALL SELECT ALL vt0.c0, t0.c2 FROM v0, t0, vt0 WHERE ((NOT (((((t0.c0)+(vt0.c0))) ISNULL)))) UNION ALL SELECT ALL vt0.c0, t0.c2 FROM v0, t0, vt0 WHERE (((((((t0.c0)+(vt0.c0))) ISNULL)) ISNULL));
SELECT ALL vt0.c0, t0.c2 FROM v0, t0, vt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE (CASE WHEN ((rt0.c1)*('W폂>?t6X')) THEN (- (rt0.c0)) END) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c1)*('W폂>?t6X')) THEN (- (rt0.c0)) END))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE (((CASE WHEN ((rt0.c1)*('W폂>?t6X')) THEN (- (rt0.c0)) END) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0;
SELECT t0.c2, t0.c0, vt0.c0, t0.c1, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 CROSS JOIN vt0 ON CAST((+ (t0.c1)) AS TEXT) FULL OUTER JOIN v0 ON (((((rt0.c3, rt0.c3, vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c3)) AND ((rt0.c3, t0.c0, '1223987907')))) NOT NULL) GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1, rt0.c1, rt0.c2, rt0.c0;
SELECT t0.c2, t0.c0, vt0.c0, t0.c1, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 CROSS JOIN vt0 ON CAST((+ (t0.c1)) AS TEXT) FULL OUTER JOIN v0 ON (((((rt0.c3, rt0.c3, vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c3)) AND ((rt0.c3, t0.c0, '1223987907')))) NOT NULL) WHERE ('680574131') GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1, rt0.c1, rt0.c2, rt0.c0 UNION SELECT t0.c2, t0.c0, vt0.c0, t0.c1, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 CROSS JOIN vt0 ON CAST((+ (t0.c1)) AS TEXT) FULL OUTER JOIN v0 ON (((((rt0.c3, rt0.c3, vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c3)) AND ((rt0.c3, t0.c0, '1223987907')))) NOT NULL) WHERE ((NOT ('680574131'))) GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1, rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL t0.c2, t0.c0, vt0.c0, t0.c1, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 CROSS JOIN vt0 ON CAST((+ (t0.c1)) AS TEXT) FULL OUTER JOIN v0 ON (((((rt0.c3, rt0.c3, vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c3)) AND ((rt0.c3, t0.c0, '1223987907')))) NOT NULL) WHERE ((('680574131') ISNULL)) GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1, rt0.c1, rt0.c2, rt0.c0;
SELECT t0.c2, t0.c0, vt0.c0, t0.c1, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 CROSS JOIN vt0 ON CAST((+ (t0.c1)) AS TEXT) FULL OUTER JOIN v0 ON (((((rt0.c3, rt0.c3, vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c3)) AND ((rt0.c3, t0.c0, '1223987907')))) NOT NULL) GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING AVG(((COUNT(*))|(SUM(rt0.c3)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (AVG(((COUNT(*))|(SUM(rt0.c3)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((AVG(((COUNT(*))|(SUM(rt0.c3))))) ISNULL);
SELECT t0.c2 FROM t0;
SELECT t0.c2 FROM t0 WHERE (((((t0.c2)LIKE(t0.c1)))IS(((t0.c0)IS NOT(t0.c2))))) UNION ALL SELECT t0.c2 FROM t0 WHERE ((NOT (((((t0.c2)LIKE(t0.c1)))IS(((t0.c0)IS NOT(t0.c2))))))) UNION ALL SELECT t0.c2 FROM t0 WHERE (((((((t0.c2)LIKE(t0.c1)))IS(((t0.c0)IS NOT(t0.c2))))) ISNULL));
SELECT t0.c2 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((CAST(t0.c0 AS TEXT) IN ())) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((CAST(t0.c0 AS TEXT) IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE ((((CAST(t0.c0 AS TEXT) IN ())) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c1, rt0.c3, t0.c2, t0.c0, v0.c0, rt0.c0, t0.c1, rt0.c2 FROM rt0, t0, v0 GROUP BY rt0.c1, rt0.c3, t0.c2, t0.c0, v0.c0, rt0.c0, t0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, t0.c2, t0.c0, v0.c0, rt0.c0, t0.c1, rt0.c2 FROM rt0, t0, v0 WHERE (CAST(NULL AS REAL)) GROUP BY rt0.c1, rt0.c3, t0.c2, t0.c0, v0.c0, rt0.c0, t0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c3, t0.c2, t0.c0, v0.c0, rt0.c0, t0.c1, rt0.c2 FROM rt0, t0, v0 WHERE ((NOT (CAST(NULL AS REAL)))) GROUP BY rt0.c1, rt0.c3, t0.c2, t0.c0, v0.c0, rt0.c0, t0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c3, t0.c2, t0.c0, v0.c0, rt0.c0, t0.c1, rt0.c2 FROM rt0, t0, v0 WHERE (((CAST(NULL AS REAL)) ISNULL)) GROUP BY rt0.c1, rt0.c3, t0.c2, t0.c0, v0.c0, rt0.c0, t0.c1, rt0.c2;
SELECT rt0.c1, rt0.c3, t0.c2, t0.c0, v0.c0, rt0.c0, t0.c1, rt0.c2 FROM rt0, t0, v0 GROUP BY rt0.c1, rt0.c3, t0.c2, t0.c0, v0.c0, rt0.c0, t0.c1, rt0.c2;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING ((AVG(AVG(t0.c2))) IS TRUE) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0, t0 NOT INDEXED GROUP BY vt0.c0, t0.c0 HAVING (NOT (((AVG(AVG(t0.c2))) IS TRUE))) UNION ALL SELECT vt0.c0, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c0 HAVING ((((AVG(AVG(t0.c2))) IS TRUE)) ISNULL);
SELECT v0.c0, rt0.c1, vt0.c0, rt0.c3, t0.c2 FROM t0, v0, rt0, vt0;
SELECT v0.c0, rt0.c1, vt0.c0, rt0.c3, t0.c2 FROM t0, v0, rt0, vt0 WHERE (CASE WHEN PRINTF(v0.c0, 0.8028716652698511, v0.c0) THEN CASE rt0.c0  WHEN rt0.c3 THEN vt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN t0.c1 THEN rt0.c1 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN NULL ELSE rt0.c3 END ELSE rt0.c2 END) UNION ALL SELECT v0.c0, rt0.c1, vt0.c0, rt0.c3, t0.c2 FROM t0, v0, rt0, vt0 WHERE ((NOT (CASE WHEN PRINTF(v0.c0, 0.8028716652698511, v0.c0) THEN CASE rt0.c0  WHEN rt0.c3 THEN vt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN t0.c1 THEN rt0.c1 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN NULL ELSE rt0.c3 END ELSE rt0.c2 END))) UNION ALL SELECT ALL v0.c0, rt0.c1, vt0.c0, rt0.c3, t0.c2 FROM t0, v0, rt0, vt0 WHERE (((CASE WHEN PRINTF(v0.c0, 0.8028716652698511, v0.c0) THEN CASE rt0.c0  WHEN rt0.c3 THEN vt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN t0.c1 THEN rt0.c1 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN NULL ELSE rt0.c3 END ELSE rt0.c2 END) ISNULL));
SELECT v0.c0, rt0.c1, vt0.c0, rt0.c3, t0.c2 FROM t0, v0, rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((((((vt0.c0) IS FALSE))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE 0.6375443282928465 END)))AND('-1866620599')))AND(vt0.c0)))OR(((((((((vt0.c0)AND(NULL)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((((((vt0.c0) IS FALSE))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE 0.6375443282928465 END)))AND('-1866620599')))AND(vt0.c0)))OR(((((((((vt0.c0)AND(NULL)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((((((vt0.c0) IS FALSE))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE 0.6375443282928465 END)))AND('-1866620599')))AND(vt0.c0)))OR(((((((((vt0.c0)AND(NULL)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS REAL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS REAL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS REAL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE COUNT(*)  WHEN COUNT(*) THEN ROUND(AVG(GROUP_CONCAT(MIN(COUNT(*)))), MIN(COUNT(*))) WHEN COUNT(vt0.c0) THEN (TOTAL(vt0.c0) IN ()) WHEN COUNT(AVG(MIN(vt0.c0))) THEN ((COUNT(vt0.c0)) NOT NULL) END UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE COUNT(*)  WHEN COUNT(*) THEN ROUND(AVG(GROUP_CONCAT(MIN(COUNT(*)))), MIN(COUNT(*))) WHEN COUNT(vt0.c0) THEN (TOTAL(vt0.c0) IN ()) WHEN COUNT(AVG(MIN(vt0.c0))) THEN ((COUNT(vt0.c0)) NOT NULL) END)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE COUNT(*)  WHEN COUNT(*) THEN ROUND(AVG(GROUP_CONCAT(MIN(COUNT(*)))), MIN(COUNT(*))) WHEN COUNT(vt0.c0) THEN (TOTAL(vt0.c0) IN ()) WHEN COUNT(AVG(MIN(vt0.c0))) THEN ((COUNT(vt0.c0)) NOT NULL) END) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((-1.045881424E9)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((-1.045881424E9)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((-1.045881424E9)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT t0.c2, rt0.c3, t0.c0, rt0.c0, rt0.c2, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON ((((rt0.c2)AND(rt0.c0)))OR(t0.c2)) COLLATE NOCASE;
SELECT DISTINCT t0.c2, rt0.c3, t0.c0, rt0.c0, rt0.c2, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON ((((rt0.c2)AND(rt0.c0)))OR(t0.c2)) COLLATE NOCASE WHERE (((((((((((t0.c1) BETWEEN (t0.c2) AND (t0.c2)))OR(((t0.c0) ISNULL))))AND(((rt0.c0) ISNULL))))AND((NOT (rt0.c0)))))AND(((rt0.c0) NOT BETWEEN (0.6420389291110671) AND (rt0.c0))))) UNION SELECT DISTINCT t0.c2, rt0.c3, t0.c0, rt0.c0, rt0.c2, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON ((((rt0.c2)AND(rt0.c0)))OR(t0.c2)) COLLATE NOCASE WHERE ((NOT (((((((((((t0.c1) BETWEEN (t0.c2) AND (t0.c2)))OR(((t0.c0) ISNULL))))AND(((rt0.c0) ISNULL))))AND((NOT (rt0.c0)))))AND(((rt0.c0) NOT BETWEEN (0.6420389291110671) AND (rt0.c0))))))) UNION SELECT DISTINCT t0.c2, rt0.c3, t0.c0, rt0.c0, rt0.c2, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON ((((rt0.c2)AND(rt0.c0)))OR(t0.c2)) COLLATE NOCASE WHERE (((((((((((((t0.c1) BETWEEN (t0.c2) AND (t0.c2)))OR(((t0.c0) ISNULL))))AND(((rt0.c0) ISNULL))))AND((NOT (rt0.c0)))))AND(((rt0.c0) NOT BETWEEN (0.6420389291110671) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT t0.c2, rt0.c3, t0.c0, rt0.c0, rt0.c2, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON ((((rt0.c2)AND(rt0.c0)))OR(t0.c2)) COLLATE NOCASE;
SELECT ALL v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON IFNULL(((vt0.c0)<(v0.c0)), 0.35225975809954335) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON IFNULL(((vt0.c0)<(v0.c0)), 0.35225975809954335) WHERE ((((- (vt0.c0)))IS((('1234321537')||(vt0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON IFNULL(((vt0.c0)<(v0.c0)), 0.35225975809954335) WHERE ((NOT ((((- (vt0.c0)))IS((('1234321537')||(vt0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON IFNULL(((vt0.c0)<(v0.c0)), 0.35225975809954335) WHERE ((((((- (vt0.c0)))IS((('1234321537')||(vt0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON IFNULL(((vt0.c0)<(v0.c0)), 0.35225975809954335) GROUP BY v0.c0;
SELECT ALL rt0.c2, t0.c0, t0.c1, vt0.c0, rt0.c3 FROM t0, vt0, rt0 GROUP BY rt0.c2, t0.c0, t0.c1, vt0.c0, rt0.c3;
SELECT ALL rt0.c2, t0.c0, t0.c1, vt0.c0, rt0.c3 FROM t0, vt0, rt0 GROUP BY rt0.c2, t0.c0, t0.c1, vt0.c0, rt0.c3 HAVING ((SUM(t0.c0))==(COUNT(*))) UNION ALL SELECT ALL rt0.c2, t0.c0, t0.c1, vt0.c0, rt0.c3 FROM t0, vt0, rt0 GROUP BY rt0.c2, t0.c0, t0.c1, vt0.c0, rt0.c3 HAVING (NOT (((SUM(t0.c0))==(COUNT(*))))) UNION ALL SELECT ALL rt0.c2, t0.c0, t0.c1, vt0.c0, rt0.c3 FROM t0, vt0, rt0 GROUP BY rt0.c2, t0.c0, t0.c1, vt0.c0, rt0.c3 HAVING ((((SUM(t0.c0))=(COUNT(*)))) ISNULL);
SELECT ALL rt0.c2, t0.c0, t0.c1, vt0.c0, rt0.c3 FROM t0, vt0, rt0 GROUP BY rt0.c2, t0.c0, t0.c1, vt0.c0, rt0.c3;
SELECT ALL rt0.c2, t0.c0, t0.c1, vt0.c0, rt0.c3 FROM t0, vt0, rt0 GROUP BY rt0.c2, t0.c0, t0.c1, vt0.c0, rt0.c3 HAVING ((SUM(t0.c0))==(COUNT(*))) UNION ALL SELECT ALL rt0.c2, t0.c0, t0.c1, vt0.c0, rt0.c3 FROM t0, vt0, rt0 GROUP BY rt0.c2, t0.c0, t0.c1, vt0.c0, rt0.c3 HAVING (NOT (((SUM(t0.c0))==(COUNT(*))))) UNION ALL SELECT ALL rt0.c2, t0.c0, t0.c1, vt0.c0, rt0.c3 FROM t0, vt0, rt0 GROUP BY rt0.c2, t0.c0, t0.c1, vt0.c0, rt0.c3 HAVING ((((SUM(t0.c0))=(COUNT(*)))) ISNULL);
SELECT ALL rt0.c2, t0.c0, t0.c1, vt0.c0, rt0.c3 FROM t0, vt0, rt0 GROUP BY rt0.c2, t0.c0, t0.c1, vt0.c0, rt0.c3;
SELECT * FROM rt0, vt0, t0;
SELECT ALL * FROM rt0, vt0, t0 WHERE (((rt0.c2)GLOB((NOT (t0.c2))))) UNION ALL SELECT ALL * FROM rt0, vt0, t0 WHERE ((NOT (((rt0.c2)GLOB((NOT (t0.c2))))))) UNION ALL SELECT ALL * FROM rt0, vt0, t0 WHERE (((((rt0.c2)GLOB((NOT (t0.c2))))) ISNULL));
SELECT * FROM rt0, vt0, t0;
SELECT DISTINCT v0.c0, t0.c1, rt0.c2, t0.c0, rt0.c0 FROM t0, rt0, v0;
SELECT DISTINCT v0.c0, t0.c1, rt0.c2, t0.c0, rt0.c0 FROM t0, rt0, v0 WHERE ((((t0.c2)) NOT BETWEEN ((CAST(NULL AS BLOB))) AND ((NULL)))) UNION SELECT DISTINCT v0.c0, t0.c1, rt0.c2, t0.c0, rt0.c0 FROM t0, rt0, v0 WHERE ((NOT ((((t0.c2)) NOT BETWEEN ((CAST(NULL AS BLOB))) AND ((NULL)))))) UNION SELECT DISTINCT v0.c0, t0.c1, rt0.c2, t0.c0, rt0.c0 FROM t0, rt0, v0 WHERE ((((((t0.c2)) NOT BETWEEN ((CAST(NULL AS BLOB))) AND ((NULL)))) ISNULL));
SELECT DISTINCT v0.c0, t0.c1, rt0.c2, t0.c0, rt0.c0 FROM t0, rt0, v0;
SELECT ALL rt0.c0 FROM t0, v0 CROSS JOIN rt0 ON rt0.c2 GROUP BY rt0.c0;
SELECT rt0.c0 FROM t0, v0 CROSS JOIN rt0 ON rt0.c2 WHERE (rt0.c3) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM t0, v0 CROSS JOIN rt0 ON rt0.c2 WHERE ((NOT (rt0.c3))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM t0, v0 CROSS JOIN rt0 ON rt0.c2 WHERE (((rt0.c3) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM t0, v0 CROSS JOIN rt0 ON rt0.c2 GROUP BY rt0.c0;
SELECT ALL t0.c0, vt0.c0, t0.c2, v0.c0, t0.c1 FROM v0, t0, vt0 GROUP BY t0.c0, vt0.c0, t0.c2, v0.c0, t0.c1;
SELECT t0.c0, vt0.c0, t0.c2, v0.c0, t0.c1 FROM v0, t0, vt0 GROUP BY t0.c0, vt0.c0, t0.c2, v0.c0, t0.c1 HAVING CAST(COUNT(t0.c1) AS REAL) UNION ALL SELECT t0.c0, vt0.c0, t0.c2, v0.c0, t0.c1 FROM v0, t0, vt0 GROUP BY t0.c0, vt0.c0, t0.c2, v0.c0, t0.c1 HAVING (NOT (CAST(COUNT(t0.c1) AS REAL))) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c2, v0.c0, t0.c1 FROM v0, t0, vt0 GROUP BY t0.c0, vt0.c0, t0.c2, v0.c0, t0.c1 HAVING ((CAST(COUNT(t0.c1) AS REAL)) ISNULL);
SELECT ALL t0.c0, vt0.c0, t0.c2, v0.c0, t0.c1 FROM v0, t0, vt0 GROUP BY t0.c0, vt0.c0, t0.c2, v0.c0, t0.c1;
SELECT t0.c0, vt0.c0, t0.c2, v0.c0, t0.c1 FROM v0, t0, vt0 GROUP BY t0.c0, vt0.c0, t0.c2, v0.c0, t0.c1 HAVING CAST(COUNT(t0.c1) AS REAL) UNION ALL SELECT t0.c0, vt0.c0, t0.c2, v0.c0, t0.c1 FROM v0, t0, vt0 GROUP BY t0.c0, vt0.c0, t0.c2, v0.c0, t0.c1 HAVING (NOT (CAST(COUNT(t0.c1) AS REAL))) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c2, v0.c0, t0.c1 FROM v0, t0, vt0 GROUP BY t0.c0, vt0.c0, t0.c2, v0.c0, t0.c1 HAVING ((CAST(COUNT(t0.c1) AS REAL)) ISNULL);
SELECT ALL t0.c0, vt0.c0, t0.c2, v0.c0, t0.c1 FROM v0, t0, vt0 GROUP BY t0.c0, vt0.c0, t0.c2, v0.c0, t0.c1;
SELECT ALL MIN(HEX(json_insert(rt0.c0, rt0.c1, t0.c2, rt0.c1, rt0.c1, rt0.c1, t0.c2))) FROM t0, vt0, v0, rt0;
SELECT * FROM rt0, v0, vt0;
SELECT ALL * FROM rt0, v0, vt0 WHERE ('<K') UNION ALL SELECT * FROM rt0, v0, vt0 WHERE ((NOT ('<K'))) UNION ALL SELECT * FROM rt0, v0, vt0 WHERE ((('<K') ISNULL));
SELECT * FROM rt0, v0, vt0;
SELECT DISTINCT * FROM t0, rt0, v0;
SELECT DISTINCT * FROM t0, rt0, v0 WHERE ((((((v0.c0)OR(t0.c0)))OR(rt0.c1)) IN (((((v0.c0)OR(t0.c0)))OR(rt0.c1)), (NOT (t0.c0))))) UNION SELECT DISTINCT * FROM t0, rt0, v0 WHERE ((NOT ((((((v0.c0)OR(t0.c0)))OR(rt0.c1)) IN (((((v0.c0)OR(t0.c0)))OR(rt0.c1)), (NOT (t0.c0))))))) UNION SELECT DISTINCT * FROM t0, rt0, v0 WHERE ((((((((v0.c0)OR(t0.c0)))OR(rt0.c1)) IN (((((v0.c0)OR(t0.c0)))OR(rt0.c1)), (NOT (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0, v0;
SELECT ALL rt0.c0, rt0.c1, t0.c0, vt0.c0, t0.c1, rt0.c3, rt0.c2, t0.c2 FROM rt0, t0, vt0 GROUP BY rt0.c0, rt0.c1, t0.c0, vt0.c0, t0.c1, rt0.c3, rt0.c2, t0.c2;
SELECT rt0.c0, rt0.c1, t0.c0, vt0.c0, t0.c1, rt0.c3, rt0.c2, t0.c2 FROM rt0, t0, vt0 WHERE ((('''F') NOTNULL) COLLATE BINARY) GROUP BY rt0.c0, rt0.c1, t0.c0, vt0.c0, t0.c1, rt0.c3, rt0.c2, t0.c2 UNION SELECT rt0.c0, rt0.c1, t0.c0, vt0.c0, t0.c1, rt0.c3, rt0.c2, t0.c2 FROM rt0, t0, vt0 WHERE ((NOT ((('''F') NOTNULL) COLLATE BINARY))) GROUP BY rt0.c0, rt0.c1, t0.c0, vt0.c0, t0.c1, rt0.c3, rt0.c2, t0.c2 UNION SELECT rt0.c0, rt0.c1, t0.c0, vt0.c0, t0.c1, rt0.c3, rt0.c2, t0.c2 FROM rt0, t0, vt0 WHERE ((((('''F') NOTNULL) COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, rt0.c1, t0.c0, vt0.c0, t0.c1, rt0.c3, rt0.c2, t0.c2;
SELECT ALL rt0.c0, rt0.c1, t0.c0, vt0.c0, t0.c1, rt0.c3, rt0.c2, t0.c2 FROM rt0, t0, vt0 GROUP BY rt0.c0, rt0.c1, t0.c0, vt0.c0, t0.c1, rt0.c3, rt0.c2, t0.c2;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (((SUM(COUNT(*)))) NOT BETWEEN ((COUNT(*))) AND ((MAX(v0.c0)))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT ((((SUM(COUNT(*)))) NOT BETWEEN ((COUNT(*))) AND ((MAX(v0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (((((SUM(COUNT(*)))) NOT BETWEEN ((COUNT(*))) AND ((MAX(v0.c0))))) ISNULL);
SELECT ALL * FROM t0, rt0;
SELECT ALL * FROM t0, rt0 WHERE (((t0.c0) IS TRUE)) UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT (((t0.c0) IS TRUE)))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE (((((t0.c0) IS TRUE)) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (((ABS(NULL))&(SQLITE_SOURCE_ID()))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (((ABS(NULL))&(SQLITE_SOURCE_ID()))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((((ABS(NULL))&(SQLITE_SOURCE_ID()))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL rt0.c1, vt0.c0, t0.c2, rt0.c2, rt0.c3, v0.c0, t0.c0, rt0.c0, t0.c1 FROM t0, vt0, rt0, v0 GROUP BY rt0.c1, vt0.c0, t0.c2, rt0.c2, rt0.c3, v0.c0, t0.c0, rt0.c0, t0.c1;
SELECT rt0.c1, vt0.c0, t0.c2, rt0.c2, rt0.c3, v0.c0, t0.c0, rt0.c0, t0.c1 FROM t0, vt0, rt0, v0 WHERE ((~ ((t0.c2 IN ())))) GROUP BY rt0.c1, vt0.c0, t0.c2, rt0.c2, rt0.c3, v0.c0, t0.c0, rt0.c0, t0.c1 UNION SELECT ALL rt0.c1, vt0.c0, t0.c2, rt0.c2, rt0.c3, v0.c0, t0.c0, rt0.c0, t0.c1 FROM t0, vt0, rt0, v0 WHERE ((NOT ((~ ((t0.c2 IN ())))))) GROUP BY rt0.c1, vt0.c0, t0.c2, rt0.c2, rt0.c3, v0.c0, t0.c0, rt0.c0, t0.c1 UNION SELECT ALL rt0.c1, vt0.c0, t0.c2, rt0.c2, rt0.c3, v0.c0, t0.c0, rt0.c0, t0.c1 FROM t0, vt0, rt0, v0 WHERE ((((~ ((t0.c2 IN ())))) ISNULL)) GROUP BY rt0.c1, vt0.c0, t0.c2, rt0.c2, rt0.c3, v0.c0, t0.c0, rt0.c0, t0.c1;
SELECT ALL rt0.c1, vt0.c0, t0.c2, rt0.c2, rt0.c3, v0.c0, t0.c0, rt0.c0, t0.c1 FROM t0, vt0, rt0, v0 GROUP BY rt0.c1, vt0.c0, t0.c2, rt0.c2, rt0.c3, v0.c0, t0.c0, rt0.c0, t0.c1;
SELECT ALL vt0.c0, rt0.c0 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c0 HAVING (((v0.c0)) NOT BETWEEN ((((AVG(SUM(rt0.c3))) NOT BETWEEN (rt0.c0) AND (MAX(v0.c0))))) AND ((AVG(COUNT(*))))) UNION ALL SELECT vt0.c0, rt0.c0 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c0 HAVING (NOT ((((v0.c0)) NOT BETWEEN ((((AVG(SUM(rt0.c3))) NOT BETWEEN (rt0.c0) AND (MAX(v0.c0))))) AND ((AVG(COUNT(*))))))) UNION ALL SELECT vt0.c0, rt0.c0 FROM v0, vt0, rt0 GROUP BY vt0.c0, rt0.c0 HAVING (((((v0.c0)) NOT BETWEEN ((((AVG(SUM(rt0.c3))) NOT BETWEEN (rt0.c0) AND (MAX(v0.c0))))) AND ((AVG(COUNT(*)))))) ISNULL);
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (CAST((rt0.c1 IN ()) AS TEXT)) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (CAST((rt0.c1 IN ()) AS TEXT)))) UNION ALL SELECT * FROM rt0, v0 WHERE (((CAST((rt0.c1 IN ()) AS TEXT)) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((+ ((+ (v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((+ ((+ (v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((+ ((+ (v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT t0.c1, vt0.c0, rt0.c0, rt0.c3 FROM vt0, t0 CROSS JOIN rt0 ON ((0.787519789839936)%((rt0.c3 IN (rt0.c2, t0.c2, rt0.c2)))) INNER JOIN v0 ON 0.43783945121082835 GROUP BY t0.c1, vt0.c0, rt0.c0, rt0.c3;
SELECT ALL t0.c1, vt0.c0, rt0.c0, rt0.c3 FROM vt0, t0 CROSS JOIN rt0 ON ((0.787519789839936)%((rt0.c3 IN (rt0.c2, t0.c2, rt0.c2)))) INNER JOIN v0 ON 0.43783945121082835 WHERE (((t0.c1) BETWEEN (t0.c1) AND (rt0.c2)) COLLATE RTRIM) GROUP BY t0.c1, vt0.c0, rt0.c0, rt0.c3 UNION SELECT ALL t0.c1, vt0.c0, rt0.c0, rt0.c3 FROM vt0, t0 CROSS JOIN rt0 ON ((0.787519789839936)%((rt0.c3 IN (rt0.c2, t0.c2, rt0.c2)))) INNER JOIN v0 ON 0.43783945121082835 WHERE ((NOT (((t0.c1) BETWEEN (t0.c1) AND (rt0.c2)) COLLATE RTRIM))) GROUP BY t0.c1, vt0.c0, rt0.c0, rt0.c3 UNION SELECT t0.c1, vt0.c0, rt0.c0, rt0.c3 FROM vt0, t0 CROSS JOIN rt0 ON ((0.787519789839936)%((rt0.c3 IN (rt0.c2, t0.c2, rt0.c2)))) INNER JOIN v0 ON 0.43783945121082835 WHERE (((((t0.c1) BETWEEN (t0.c1) AND (rt0.c2)) COLLATE RTRIM) ISNULL)) GROUP BY t0.c1, vt0.c0, rt0.c0, rt0.c3;
SELECT t0.c1, vt0.c0, rt0.c0, rt0.c3 FROM vt0, t0 CROSS JOIN rt0 ON ((0.787519789839936)%((rt0.c3 IN (rt0.c2, t0.c2, rt0.c2)))) INNER JOIN v0 ON 0.43783945121082835 GROUP BY t0.c1, vt0.c0, rt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((rt0.c0)OR((MAX(rt0.c3) IN (TOTAL(rt0.c0))))))AND(COUNT(GROUP_CONCAT(SUM(rt0.c2))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((((rt0.c0)OR((MAX(rt0.c3) IN (TOTAL(rt0.c0))))))AND(COUNT(GROUP_CONCAT(SUM(rt0.c2))))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((((rt0.c0)OR((MAX(rt0.c3) IN (TOTAL(rt0.c0))))))AND(COUNT(GROUP_CONCAT(SUM(rt0.c2)))))) ISNULL);
SELECT TOTAL(CAST(((t0.c0)<<(rt0.c1)) AS REAL)) FROM rt0, t0;
SELECT ALL * FROM t0 INNER JOIN v0 ON (x'' IN (t0.c0 COLLATE BINARY, (~ (v0.c0)), 0.6452547101195216)) CROSS JOIN vt0 ON 0.8359741471696532;
SELECT * FROM t0 INNER JOIN v0 ON (x'' IN (t0.c0 COLLATE BINARY, (~ (v0.c0)), 0.6452547101195216)) CROSS JOIN vt0 ON 0.8359741471696532 WHERE (((((t0.c2)+(v0.c0))) ISNULL)) UNION ALL SELECT * FROM t0 NOT INDEXED INNER JOIN v0 ON (x'' IN (t0.c0 COLLATE BINARY, (~ (v0.c0)), 0.6452547101195216)) CROSS JOIN vt0 ON 0.8359741471696532 WHERE ((NOT (((((t0.c2)+(v0.c0))) ISNULL)))) UNION ALL SELECT ALL * FROM t0 INNER JOIN v0 ON (x'' IN (t0.c0 COLLATE BINARY, (~ (v0.c0)), 0.6452547101195216)) CROSS JOIN vt0 ON 0.8359741471696532 WHERE (((((((t0.c2)+(v0.c0))) ISNULL)) ISNULL));
SELECT ALL * FROM t0 INNER JOIN v0 ON (x'' IN (t0.c0 COLLATE BINARY, (~ (v0.c0)), 0.6452547101195216)) CROSS JOIN vt0 ON 0.8359741471696532;
SELECT DISTINCT v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON (((((rt0.c3))<=((rt0.c3)))) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0) BETWEEN (v0.c0) AND (v0.c0))));
SELECT DISTINCT v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON (((((rt0.c3))<=((rt0.c3)))) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) WHERE (rt0.c3) UNION SELECT DISTINCT v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON (((((rt0.c3))<=((rt0.c3)))) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON (((((rt0.c3))<=((rt0.c3)))) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON (((((rt0.c3))<=((rt0.c3)))) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0) BETWEEN (v0.c0) AND (v0.c0))));
SELECT ALL t0.c0 FROM rt0, t0, v0 GROUP BY t0.c0;
SELECT t0.c0 FROM rt0, t0, v0 WHERE (((rt0.c2)GLOB(((v0.c0)||(v0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM rt0, t0, v0 WHERE ((NOT (((rt0.c2)GLOB(((v0.c0)||(v0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM rt0, t0, v0 WHERE (((((rt0.c2)GLOB(((v0.c0)||(v0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM rt0, t0, v0 GROUP BY t0.c0;
SELECT t0.c1, rt0.c1, rt0.c0, t0.c0, rt0.c2 FROM rt0, t0 RIGHT OUTER JOIN v0 ON 0.2544519214711286 GROUP BY t0.c1, rt0.c1, rt0.c0, t0.c0, rt0.c2;
SELECT t0.c1, rt0.c1, rt0.c0, t0.c0, rt0.c2 FROM rt0, t0 RIGHT OUTER JOIN v0 ON 0.2544519214711286 GROUP BY t0.c1, rt0.c1, rt0.c0, t0.c0, rt0.c2 HAVING SUM((t0.c2 IN ())) UNION ALL SELECT t0.c1, rt0.c1, rt0.c0, t0.c0, rt0.c2 FROM rt0, t0 RIGHT OUTER JOIN v0 ON 0.2544519214711286 GROUP BY t0.c1, rt0.c1, rt0.c0, t0.c0, rt0.c2 HAVING (NOT (SUM((t0.c2 IN ())))) UNION ALL SELECT t0.c1, rt0.c1, rt0.c0, t0.c0, rt0.c2 FROM rt0, t0 RIGHT OUTER JOIN v0 ON 0.2544519214711286 GROUP BY t0.c1, rt0.c1, rt0.c0, t0.c0, rt0.c2 HAVING ((SUM((t0.c2 IN ()))) ISNULL);
SELECT t0.c1, rt0.c1, rt0.c0, t0.c0, rt0.c2 FROM rt0, t0 RIGHT OUTER JOIN v0 ON 0.2544519214711286 GROUP BY t0.c1, rt0.c1, rt0.c0, t0.c0, rt0.c2;
SELECT t0.c1, rt0.c1, rt0.c0, t0.c0, rt0.c2 FROM rt0, t0 RIGHT OUTER JOIN v0 ON 0.2544519214711286 GROUP BY t0.c1, rt0.c1, rt0.c0, t0.c0, rt0.c2 HAVING SUM((t0.c2 IN ())) UNION ALL SELECT t0.c1, rt0.c1, rt0.c0, t0.c0, rt0.c2 FROM rt0, t0 RIGHT OUTER JOIN v0 ON 0.2544519214711286 GROUP BY t0.c1, rt0.c1, rt0.c0, t0.c0, rt0.c2 HAVING (NOT (SUM((t0.c2 IN ())))) UNION ALL SELECT t0.c1, rt0.c1, rt0.c0, t0.c0, rt0.c2 FROM rt0, t0 RIGHT OUTER JOIN v0 ON 0.2544519214711286 GROUP BY t0.c1, rt0.c1, rt0.c0, t0.c0, rt0.c2 HAVING ((SUM((t0.c2 IN ()))) ISNULL);
SELECT t0.c1, rt0.c1, rt0.c0, t0.c0, rt0.c2 FROM rt0, t0 RIGHT OUTER JOIN v0 ON 0.2544519214711286 GROUP BY t0.c1, rt0.c1, rt0.c0, t0.c0, rt0.c2;
SELECT t0.c2, t0.c0, rt0.c2, v0.c0, rt0.c1, t0.c1, rt0.c3, rt0.c0 FROM v0, rt0, t0;
SELECT ALL t0.c2, t0.c0, rt0.c2, v0.c0, rt0.c1, t0.c1, rt0.c3, rt0.c0 FROM v0, rt0, t0 WHERE (t0.c1) UNION ALL SELECT ALL t0.c2, t0.c0, rt0.c2, v0.c0, rt0.c1, t0.c1, rt0.c3, rt0.c0 FROM v0, rt0, t0 WHERE ((NOT (t0.c1))) UNION ALL SELECT ALL t0.c2, t0.c0, rt0.c2, v0.c0, rt0.c1, t0.c1, rt0.c3, rt0.c0 FROM v0, rt0, t0 WHERE (((t0.c1) ISNULL));
SELECT t0.c2, t0.c0, rt0.c2, v0.c0, rt0.c1, t0.c1, rt0.c3, rt0.c0 FROM v0, rt0, t0;
SELECT DISTINCT * FROM vt0, v0 FULL OUTER JOIN t0 ON ((((((rt0.c1)LIKE(t0.c1)))AND(((rt0.c1)*(v0.c0)))))AND(((t0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))) LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE BINARY)*(((v0.c0)>(t0.c2))));
SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, v0 WHERE (0.20585397522913074) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, v0 WHERE ((NOT (0.20585397522913074))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, v0 WHERE (((0.20585397522913074) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT ALL t0.c1, rt0.c0, t0.c2, rt0.c1 FROM t0, v0, rt0 GROUP BY t0.c1, rt0.c0, t0.c2, rt0.c1;
SELECT ALL t0.c1, rt0.c0, t0.c2, rt0.c1 FROM t0, v0, rt0 GROUP BY t0.c1, rt0.c0, t0.c2, rt0.c1 HAVING TOTAL(rt0.c0) UNION ALL SELECT t0.c1, rt0.c0, t0.c2, rt0.c1 FROM t0, v0, rt0 GROUP BY t0.c1, rt0.c0, t0.c2, rt0.c1 HAVING (NOT (TOTAL(rt0.c0))) UNION ALL SELECT t0.c1, rt0.c0, t0.c2, rt0.c1 FROM t0, v0, rt0 GROUP BY t0.c1, rt0.c0, t0.c2, rt0.c1 HAVING ((TOTAL(rt0.c0)) ISNULL);
SELECT ALL t0.c1, rt0.c0, t0.c2, rt0.c1 FROM t0, v0, rt0 GROUP BY t0.c1, rt0.c0, t0.c2, rt0.c1;
SELECT ALL t0.c1, rt0.c0, t0.c2, rt0.c1 FROM t0, v0, rt0 GROUP BY t0.c1, rt0.c0, t0.c2, rt0.c1 HAVING TOTAL(rt0.c0) UNION ALL SELECT t0.c1, rt0.c0, t0.c2, rt0.c1 FROM t0, v0, rt0 GROUP BY t0.c1, rt0.c0, t0.c2, rt0.c1 HAVING (NOT (TOTAL(rt0.c0))) UNION ALL SELECT t0.c1, rt0.c0, t0.c2, rt0.c1 FROM t0, v0, rt0 GROUP BY t0.c1, rt0.c0, t0.c2, rt0.c1 HAVING ((TOTAL(rt0.c0)) ISNULL);
SELECT ALL t0.c1, rt0.c0, t0.c2, rt0.c1 FROM t0, v0, rt0 GROUP BY t0.c1, rt0.c0, t0.c2, rt0.c1;
SELECT MAX(x'') FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((5763154.0, CAST(vt0.c0 AS BLOB), (vt0.c0 IN ()))) AND (((~ (vt0.c0)), CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM rt0, v0, t0;
SELECT ALL * FROM rt0, v0, t0 WHERE ('ꃞTo*#_KTW') UNION ALL SELECT * FROM rt0, v0, t0 WHERE ((NOT ('ꃞTo*#_KTW'))) UNION ALL SELECT * FROM rt0, v0, t0 WHERE ((('ꃞTo*#_KTW') ISNULL));
SELECT ALL * FROM rt0, v0, t0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((CASE WHEN rt0.c0 THEN rt0.c1 END IN ())) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((CASE WHEN rt0.c0 THEN rt0.c1 END IN ())))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((CASE WHEN rt0.c0 THEN rt0.c1 END IN ())) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT t0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c0 FROM rt0, t0, v0, vt0 GROUP BY t0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c0;
SELECT ALL t0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c0 FROM rt0, t0, v0, vt0 WHERE (NULL) GROUP BY t0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c0 UNION SELECT t0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c0 FROM rt0, t0, v0, vt0 WHERE ((NOT (NULL))) GROUP BY t0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c0 UNION SELECT ALL t0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c0 FROM rt0, t0, v0, vt0 WHERE (((NULL) ISNULL)) GROUP BY t0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c0;
SELECT t0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c0 FROM rt0, t0, v0, vt0 GROUP BY t0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c0;
SELECT ALL t0.c1, vt0.c0, rt0.c0, t0.c0, v0.c0 FROM vt0, v0, rt0, t0 GROUP BY t0.c1, vt0.c0, rt0.c0, t0.c0, v0.c0;
SELECT ALL t0.c1, vt0.c0, rt0.c0, t0.c0, v0.c0 FROM vt0, v0, rt0, t0 GROUP BY t0.c1, vt0.c0, rt0.c0, t0.c0, v0.c0 HAVING GROUP_CONCAT(MIN(COUNT(GROUP_CONCAT(TOTAL(t0.c0))))) UNION ALL SELECT t0.c1, vt0.c0, rt0.c0, t0.c0, v0.c0 FROM vt0, v0, rt0, t0 GROUP BY t0.c1, vt0.c0, rt0.c0, t0.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(MIN(COUNT(GROUP_CONCAT(TOTAL(t0.c0))))))) UNION ALL SELECT ALL t0.c1, vt0.c0, rt0.c0, t0.c0, v0.c0 FROM vt0, v0, rt0, t0 GROUP BY t0.c1, vt0.c0, rt0.c0, t0.c0, v0.c0 HAVING ((GROUP_CONCAT(MIN(COUNT(GROUP_CONCAT(TOTAL(t0.c0)))))) ISNULL);
SELECT t0.c1, t0.c0, t0.c2 FROM t0;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 WHERE (CASE (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c0)))  WHEN TYPEOF(t0.c1) THEN ((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)) END) UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM t0 WHERE ((NOT (CASE (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c0)))  WHEN TYPEOF(t0.c1) THEN ((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)) END))) UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM t0 WHERE (((CASE (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c0)))  WHEN TYPEOF(t0.c1) THEN ((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)) END) ISNULL));
SELECT t0.c1, t0.c0, t0.c2 FROM t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c3 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c1, rt0.c3 UNION SELECT rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c1, rt0.c3 UNION SELECT rt0.c1, rt0.c3 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING (SUM(rt0.c0) IN ()) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING (NOT ((SUM(rt0.c0) IN ()))) UNION ALL SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING (((SUM(rt0.c0) IN ())) ISNULL);
SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING (SUM(rt0.c0) IN ()) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING (NOT ((SUM(rt0.c0) IN ()))) UNION ALL SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING (((SUM(rt0.c0) IN ())) ISNULL);
SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, t0.c1, t0.c2, rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM rt0, v0, vt0 NATURAL JOIN t0;
SELECT ALL rt0.c3, t0.c1, t0.c2, rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM rt0, v0, vt0 NATURAL JOIN t0 WHERE (CASE WHEN ((rt0.c1)OR(t0.c0)) THEN ((vt0.c0)<>(0.9635264775341583)) END) UNION ALL SELECT ALL rt0.c3, t0.c1, t0.c2, rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM rt0, v0, vt0 NATURAL JOIN t0 WHERE ((NOT (CASE WHEN ((rt0.c1)OR(t0.c0)) THEN ((vt0.c0)!=(0.9635264775341583)) END))) UNION ALL SELECT rt0.c3, t0.c1, t0.c2, rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM rt0, v0, vt0 NATURAL JOIN t0 WHERE (((CASE WHEN ((rt0.c1)OR(t0.c0)) THEN ((vt0.c0)!=(0.9635264775341583)) END) ISNULL));
SELECT ALL rt0.c3, t0.c1, t0.c2, rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM rt0, v0, vt0 NATURAL JOIN t0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT vt0.c0 FROM t0, vt0, rt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0, vt0, rt0 WHERE ((((rt0.c0)*(rt0.c3)) IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt0, rt0 WHERE ((NOT ((((rt0.c0)*(rt0.c3)) IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM t0, vt0, rt0 WHERE ((((((rt0.c0)*(rt0.c3)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM t0, vt0, rt0 GROUP BY vt0.c0;
SELECT rt0.c3, t0.c1, t0.c0, rt0.c2 FROM v0, t0, rt0 GROUP BY rt0.c3, t0.c1, t0.c0, rt0.c2;
SELECT rt0.c3, t0.c1, t0.c0, rt0.c2 FROM v0, t0, rt0 GROUP BY rt0.c3, t0.c1, t0.c0, rt0.c2 HAVING SUM(v0.c0 COLLATE RTRIM) UNION ALL SELECT rt0.c3, t0.c1, t0.c0, rt0.c2 FROM v0, t0, rt0 GROUP BY rt0.c3, t0.c1, t0.c0, rt0.c2 HAVING (NOT (SUM(v0.c0 COLLATE RTRIM))) UNION ALL SELECT rt0.c3, t0.c1, t0.c0, rt0.c2 FROM v0, t0, rt0 GROUP BY rt0.c3, t0.c1, t0.c0, rt0.c2 HAVING ((SUM(v0.c0 COLLATE RTRIM)) ISNULL);
SELECT rt0.c3, t0.c1, t0.c0, rt0.c2 FROM v0, t0, rt0 GROUP BY rt0.c3, t0.c1, t0.c0, rt0.c2;
SELECT rt0.c3, t0.c1, t0.c0, rt0.c2 FROM v0, t0, rt0 GROUP BY rt0.c3, t0.c1, t0.c0, rt0.c2 HAVING SUM(v0.c0 COLLATE RTRIM) UNION ALL SELECT rt0.c3, t0.c1, t0.c0, rt0.c2 FROM v0, t0, rt0 GROUP BY rt0.c3, t0.c1, t0.c0, rt0.c2 HAVING (NOT (SUM(v0.c0 COLLATE RTRIM))) UNION ALL SELECT rt0.c3, t0.c1, t0.c0, rt0.c2 FROM v0, t0, rt0 GROUP BY rt0.c3, t0.c1, t0.c0, rt0.c2 HAVING ((SUM(v0.c0 COLLATE RTRIM)) ISNULL);
SELECT rt0.c3, t0.c1, t0.c0, rt0.c2 FROM v0, t0, rt0 GROUP BY rt0.c3, t0.c1, t0.c0, rt0.c2;
SELECT * FROM rt0, t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))||(CASE t0.c1  WHEN rt0.c3 THEN t0.c0 END));
SELECT ALL * FROM rt0, t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))||(CASE t0.c1  WHEN rt0.c3 THEN t0.c0 END)) WHERE (CASE vt0.c0  WHEN t0.c0 THEN rt0.c3 END COLLATE NOCASE COLLATE BINARY) UNION ALL SELECT * FROM rt0, t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))||(CASE t0.c1  WHEN rt0.c3 THEN t0.c0 END)) WHERE ((NOT (CASE vt0.c0  WHEN t0.c0 THEN rt0.c3 END COLLATE NOCASE COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0, t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))||(CASE t0.c1  WHEN rt0.c3 THEN t0.c0 END)) WHERE (((CASE vt0.c0  WHEN t0.c0 THEN rt0.c3 END COLLATE NOCASE COLLATE BINARY) ISNULL));
SELECT * FROM rt0, t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))||(CASE t0.c1  WHEN rt0.c3 THEN t0.c0 END));
SELECT DISTINCT t0.c1, rt0.c0 FROM rt0, vt0, t0;
SELECT DISTINCT t0.c1, rt0.c0 FROM rt0, vt0, t0 WHERE ((((x'', rt0.c2, rt0.c1)) NOT BETWEEN ((((((vt0.c0)OR(rt0.c2)))AND(vt0.c0)), (~ (rt0.c0)), CAST(rt0.c2 AS BLOB))) AND ((((t0.c1)GLOB(t0.c1)), (t0.c0 IN ()), (t0.c2 IN ()))))) UNION SELECT DISTINCT t0.c1, rt0.c0 FROM rt0, vt0, t0 WHERE ((NOT ((((x'', rt0.c2, rt0.c1)) NOT BETWEEN ((((((vt0.c0)OR(rt0.c2)))AND(vt0.c0)), (~ (rt0.c0)), CAST(rt0.c2 AS BLOB))) AND ((((t0.c1)GLOB(t0.c1)), (t0.c0 IN ()), (t0.c2 IN ()))))))) UNION SELECT DISTINCT t0.c1, rt0.c0 FROM rt0, vt0, t0 WHERE ((((((x'', rt0.c2, rt0.c1)) NOT BETWEEN ((((((vt0.c0)OR(rt0.c2)))AND(vt0.c0)), (~ (rt0.c0)), CAST(rt0.c2 AS BLOB))) AND ((((t0.c1)GLOB(t0.c1)), (t0.c0 IN ()), (t0.c2 IN ()))))) ISNULL));
SELECT DISTINCT t0.c1, rt0.c0 FROM rt0, vt0, t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((~ (v0.c0)) IN ())) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((~ (v0.c0)) IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((~ (v0.c0)) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1, rt0.c3, vt0.c0 FROM vt0, t0, rt0 LEFT OUTER JOIN v0 ON SQLITE_COMPILEOPTION_USED(((((((((rt0.c3)AND('139383992')))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c1))) GROUP BY rt0.c1, rt0.c3, vt0.c0;
SELECT ALL rt0.c1, rt0.c3, vt0.c0 FROM vt0, t0, rt0 LEFT OUTER JOIN v0 ON SQLITE_COMPILEOPTION_USED(((((((((rt0.c3)AND('139383992')))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c1))) GROUP BY rt0.c1, rt0.c3, vt0.c0 HAVING AVG(MIN(rt0.c2)) COLLATE NOCASE UNION ALL SELECT rt0.c1, rt0.c3, vt0.c0 FROM vt0, t0, rt0 LEFT OUTER JOIN v0 ON SQLITE_COMPILEOPTION_USED(((((((((rt0.c3)AND('139383992')))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c1))) GROUP BY rt0.c1, rt0.c3, vt0.c0 HAVING (NOT (AVG(MIN(rt0.c2)) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c1, rt0.c3, vt0.c0 FROM vt0, t0, rt0 LEFT OUTER JOIN v0 ON SQLITE_COMPILEOPTION_USED(((((((((rt0.c3)AND('139383992')))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c1))) GROUP BY rt0.c1, rt0.c3, vt0.c0 HAVING ((AVG(MIN(rt0.c2)) COLLATE NOCASE) ISNULL);
SELECT vt0.c0 FROM vt0 INNER JOIN v0 ON SQLITE_SOURCE_ID();
SELECT ALL vt0.c0 FROM vt0 INNER JOIN v0 ON SQLITE_SOURCE_ID() WHERE ((((v0.c0)) NOT BETWEEN (('2277791')) AND (((v0.c0 IN ()))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 INNER JOIN v0 ON SQLITE_SOURCE_ID() WHERE ((NOT ((((v0.c0)) NOT BETWEEN (('2277791')) AND (((v0.c0 IN ()))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 INNER JOIN v0 ON SQLITE_SOURCE_ID() WHERE ((((((v0.c0)) NOT BETWEEN (('2277791')) AND (((v0.c0 IN ()))))) ISNULL));
SELECT vt0.c0 FROM vt0 INNER JOIN v0 ON SQLITE_SOURCE_ID();
SELECT DISTINCT v0.c0, t0.c2, t0.c1, vt0.c0 FROM v0, t0 NATURAL JOIN vt0;
SELECT DISTINCT v0.c0, t0.c2, t0.c1, vt0.c0 FROM v0, t0 NATURAL JOIN vt0 WHERE ((((((t0.c2 IN ()))OR((+ (t0.c1)))))OR(t0.c1))) UNION SELECT DISTINCT v0.c0, t0.c2, t0.c1, vt0.c0 FROM v0, t0 NATURAL JOIN vt0 WHERE ((NOT ((((((t0.c2 IN ()))OR((+ (t0.c1)))))OR(t0.c1))))) UNION SELECT DISTINCT v0.c0, t0.c2, t0.c1, vt0.c0 FROM v0, t0 NATURAL JOIN vt0 WHERE ((((((((t0.c2 IN ()))OR((+ (t0.c1)))))OR(t0.c1))) ISNULL));
SELECT DISTINCT v0.c0, t0.c2, t0.c1, vt0.c0 FROM v0, t0 NATURAL JOIN vt0;
SELECT ALL rt0.c1, t0.c1, rt0.c0, t0.c0, t0.c2, v0.c0, rt0.c2 FROM t0, vt0, v0, rt0 GROUP BY rt0.c1, t0.c1, rt0.c0, t0.c0, t0.c2, v0.c0, rt0.c2;
SELECT rt0.c1, t0.c1, rt0.c0, t0.c0, t0.c2, v0.c0, rt0.c2 FROM t0, vt0, v0, rt0 WHERE (((((((((v0.c0)OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))AND(((t0.c0)<=(t0.c0)))))AND(((v0.c0) IS FALSE)))) GROUP BY rt0.c1, t0.c1, rt0.c0, t0.c0, t0.c2, v0.c0, rt0.c2 UNION SELECT ALL rt0.c1, t0.c1, rt0.c0, t0.c0, t0.c2, v0.c0, rt0.c2 FROM t0, vt0, v0, rt0 WHERE ((NOT (((((((((v0.c0)OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))AND(((t0.c0)<=(t0.c0)))))AND(((v0.c0) IS FALSE)))))) GROUP BY rt0.c1, t0.c1, rt0.c0, t0.c0, t0.c2, v0.c0, rt0.c2 UNION SELECT ALL rt0.c1, t0.c1, rt0.c0, t0.c0, t0.c2, v0.c0, rt0.c2 FROM t0, vt0, v0, rt0 WHERE (((((((((((v0.c0)OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))AND(((t0.c0)<=(t0.c0)))))AND(((v0.c0) IS FALSE)))) ISNULL)) GROUP BY rt0.c1, t0.c1, rt0.c0, t0.c0, t0.c2, v0.c0, rt0.c2;
SELECT ALL rt0.c1, t0.c1, rt0.c0, t0.c0, t0.c2, v0.c0, rt0.c2 FROM t0, vt0, v0, rt0 GROUP BY rt0.c1, t0.c1, rt0.c0, t0.c0, t0.c2, v0.c0, rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL vt0.c0, t0.c1, t0.c2, rt0.c0, t0.c0, v0.c0, rt0.c2 FROM vt0, rt0, v0, t0;
SELECT vt0.c0, t0.c1, t0.c2, rt0.c0, t0.c0, v0.c0, rt0.c2 FROM vt0, rt0, v0, t0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN NULL ELSE QUOTE(t0.c2) END) UNION ALL SELECT ALL vt0.c0, t0.c1, t0.c2, rt0.c0, t0.c0, v0.c0, rt0.c2 FROM vt0, rt0, v0, t0 WHERE ((NOT (CASE WHEN vt0.c0 COLLATE BINARY THEN NULL ELSE QUOTE(t0.c2) END))) UNION ALL SELECT vt0.c0, t0.c1, t0.c2, rt0.c0, t0.c0, v0.c0, rt0.c2 FROM vt0, rt0, v0, t0 WHERE (((CASE WHEN vt0.c0 COLLATE BINARY THEN NULL ELSE QUOTE(t0.c2) END) ISNULL));
SELECT ALL vt0.c0, t0.c1, t0.c2, rt0.c0, t0.c0, v0.c0, rt0.c2 FROM vt0, rt0, v0, t0;
SELECT DISTINCT t0.c0, rt0.c3, t0.c1, rt0.c2, rt0.c1, t0.c2 FROM rt0, t0, v0;
SELECT DISTINCT t0.c0, rt0.c3, t0.c1, rt0.c2, rt0.c1, t0.c2 FROM rt0, t0, v0 WHERE ((((rt0.c2)) BETWEEN ((CAST(t0.c2 AS BLOB))) AND ((((t0.c0)GLOB(rt0.c1)))))) UNION SELECT DISTINCT t0.c0, rt0.c3, t0.c1, rt0.c2, rt0.c1, t0.c2 FROM rt0, t0, v0 WHERE ((NOT ((((rt0.c2)) BETWEEN ((CAST(t0.c2 AS BLOB))) AND ((((t0.c0)GLOB(rt0.c1)))))))) UNION SELECT DISTINCT t0.c0, rt0.c3, t0.c1, rt0.c2, rt0.c1, t0.c2 FROM rt0, t0, v0 WHERE ((((((rt0.c2)) BETWEEN ((CAST(t0.c2 AS BLOB))) AND ((((t0.c0)GLOB(rt0.c1)))))) ISNULL));
SELECT DISTINCT t0.c0, rt0.c3, t0.c1, rt0.c2, rt0.c1, t0.c2 FROM rt0, t0, v0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (load_extension(rt0.c2, CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (load_extension(rt0.c2, CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((load_extension(rt0.c2, CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) ISNULL)) GROUP BY rt0.c1;
SELECT t0.c0, t0.c2, rt0.c0, v0.c0 FROM v0, rt0, t0, vt0 GROUP BY t0.c0, t0.c2, rt0.c0, v0.c0;
SELECT ALL t0.c0, t0.c2, rt0.c0, v0.c0 FROM v0, rt0, t0, vt0 GROUP BY t0.c0, t0.c2, rt0.c0, v0.c0 HAVING ((MIN(rt0.c2))&(((NULL)-(rt0.c3)))) UNION ALL SELECT t0.c0, t0.c2, rt0.c0, v0.c0 FROM v0, rt0, t0, vt0 GROUP BY t0.c0, t0.c2, rt0.c0, v0.c0 HAVING (NOT (((MIN(rt0.c2))&(((NULL)-(rt0.c3)))))) UNION ALL SELECT t0.c0, t0.c2, rt0.c0, v0.c0 FROM v0, rt0, t0, vt0 GROUP BY t0.c0, t0.c2, rt0.c0, v0.c0 HAVING ((((MIN(rt0.c2))&(((NULL)-(rt0.c3))))) ISNULL);
SELECT t0.c0, t0.c2, rt0.c0, v0.c0 FROM v0, rt0, t0, vt0 GROUP BY t0.c0, t0.c2, rt0.c0, v0.c0;
SELECT ALL t0.c0, t0.c2, rt0.c0, v0.c0 FROM v0, rt0, t0, vt0 GROUP BY t0.c0, t0.c2, rt0.c0, v0.c0 HAVING ((MIN(rt0.c2))&(((NULL)-(rt0.c3)))) UNION ALL SELECT t0.c0, t0.c2, rt0.c0, v0.c0 FROM v0, rt0, t0, vt0 GROUP BY t0.c0, t0.c2, rt0.c0, v0.c0 HAVING (NOT (((MIN(rt0.c2))&(((NULL)-(rt0.c3)))))) UNION ALL SELECT t0.c0, t0.c2, rt0.c0, v0.c0 FROM v0, rt0, t0, vt0 GROUP BY t0.c0, t0.c2, rt0.c0, v0.c0 HAVING ((((MIN(rt0.c2))&(((NULL)-(rt0.c3))))) ISNULL);
SELECT t0.c0, t0.c2, rt0.c0, v0.c0 FROM v0, rt0, t0, vt0 GROUP BY t0.c0, t0.c2, rt0.c0, v0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (x'b42f') UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (x'b42f'))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((x'b42f') ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0, t0.c2, t0.c1, t0.c0, rt0.c3, v0.c0, rt0.c0 FROM rt0, v0, t0, vt0;
SELECT DISTINCT vt0.c0, t0.c2, t0.c1, t0.c0, rt0.c3, v0.c0, rt0.c0 FROM rt0, v0, t0, vt0 WHERE ((((('677285627')=(rt0.c1))) IS TRUE)) UNION SELECT DISTINCT vt0.c0, t0.c2, t0.c1, t0.c0, rt0.c3, v0.c0, rt0.c0 FROM rt0, v0, t0, vt0 WHERE ((NOT ((((('677285627')=(rt0.c1))) IS TRUE)))) UNION SELECT DISTINCT vt0.c0, t0.c2, t0.c1, t0.c0, rt0.c3, v0.c0, rt0.c0 FROM rt0, v0, t0, vt0 WHERE ((((((('677285627')=(rt0.c1))) IS TRUE)) ISNULL));
SELECT DISTINCT vt0.c0, t0.c2, t0.c1, t0.c0, rt0.c3, v0.c0, rt0.c0 FROM rt0, v0, t0, vt0;
SELECT ALL t0.c1, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM v0, t0 WHERE (((((t0.c0) ISNULL)) IS TRUE)) GROUP BY t0.c1, t0.c2 UNION SELECT t0.c1, t0.c2 FROM v0, t0 WHERE ((NOT (((((t0.c0) ISNULL)) IS TRUE)))) GROUP BY t0.c1, t0.c2 UNION SELECT t0.c1, t0.c2 FROM v0, t0 WHERE (((((((t0.c0) ISNULL)) IS TRUE)) ISNULL)) GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c2;
SELECT ALL v0.c0, t0.c0, t0.c2 FROM v0 LEFT OUTER JOIN t0 ON (((v0.c0 IN (t0.c0)))>((((t0.c0))=((0x45a4279e))))) GROUP BY v0.c0, t0.c0, t0.c2;
SELECT ALL v0.c0, t0.c0, t0.c2 FROM v0 LEFT OUTER JOIN t0 ON (((v0.c0 IN (t0.c0)))>((((t0.c0))=((0X45a4279e))))) GROUP BY v0.c0, t0.c0, t0.c2 HAVING TOTAL(TOTAL(t0.c2)) UNION ALL SELECT v0.c0, t0.c0, t0.c2 FROM v0 LEFT OUTER JOIN t0 ON (((v0.c0 IN (t0.c0)))>((((t0.c0))=((0x45a4279e))))) GROUP BY v0.c0, t0.c0, t0.c2 HAVING (NOT (TOTAL(TOTAL(t0.c2)))) UNION ALL SELECT ALL v0.c0, t0.c0, t0.c2 FROM v0 LEFT OUTER JOIN t0 ON (((v0.c0 IN (t0.c0)))>((((t0.c0))==((0x45a4279e))))) GROUP BY v0.c0, t0.c0, t0.c2 HAVING ((TOTAL(TOTAL(t0.c2))) ISNULL);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((((((NULL)OR(t0.c0)))OR(0.48411507953786836)))%(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN 'V{' WHEN t0.c0 THEN t0.c2 ELSE vt0.c0 END)) INNER JOIN v0 ON 0.25080089366781166 COLLATE BINARY;
SELECT DISTINCT * FROM v0, vt0, rt0, t0;
SELECT DISTINCT * FROM v0, vt0, rt0, t0 WHERE (((((rt0.c2) IS TRUE)) IS FALSE)) UNION SELECT DISTINCT * FROM v0, vt0, rt0, t0 WHERE ((NOT (((((rt0.c2) IS TRUE)) IS FALSE)))) UNION SELECT DISTINCT * FROM v0, vt0, rt0, t0 WHERE (((((((rt0.c2) IS TRUE)) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM v0, vt0, rt0, t0;
SELECT ALL rt0.c0, t0.c2, rt0.c1 FROM v0, vt0, t0, rt0 GROUP BY rt0.c0, t0.c2, rt0.c1;
SELECT ALL rt0.c0, t0.c2, rt0.c1 FROM v0, vt0, t0, rt0 WHERE (((((((((((v0.c0)OR(t0.c1)))AND(rt0.c0)))AND(rt0.c3)))AND(t0.c1))) BETWEEN (x'') AND (((vt0.c0) BETWEEN (t0.c0) AND (rt0.c0))))) GROUP BY rt0.c0, t0.c2, rt0.c1 UNION SELECT ALL rt0.c0, t0.c2, rt0.c1 FROM v0, vt0, t0, rt0 WHERE ((NOT (((((((((((v0.c0)OR(t0.c1)))AND(rt0.c0)))AND(rt0.c3)))AND(t0.c1))) BETWEEN (x'') AND (((vt0.c0) BETWEEN (t0.c0) AND (rt0.c0))))))) GROUP BY rt0.c0, t0.c2, rt0.c1 UNION SELECT rt0.c0, t0.c2, rt0.c1 FROM v0, vt0, t0, rt0 WHERE (((((((((((((v0.c0)OR(t0.c1)))AND(rt0.c0)))AND(rt0.c3)))AND(t0.c1))) BETWEEN (x'') AND (((vt0.c0) BETWEEN (t0.c0) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c0, t0.c2, rt0.c1;
SELECT ALL rt0.c0, t0.c2, rt0.c1 FROM v0, vt0, t0, rt0 GROUP BY rt0.c0, t0.c2, rt0.c1;
SELECT rt0.c2 FROM rt0, t0 INNER JOIN vt0 ON (((0.9469041422214587)) BETWEEN ((((rt0.c2)LIKE(rt0.c3)))) AND (((((t0.c0, t0.c1, t0.c2))=((rt0.c1, rt0.c2, rt0.c3)))))) RIGHT OUTER JOIN v0 ON CAST('' AS TEXT) COLLATE BINARY GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, t0 INNER JOIN vt0 ON (((0.9469041422214587)) BETWEEN ((((rt0.c2)LIKE(rt0.c3)))) AND (((((t0.c0, t0.c1, t0.c2))==((rt0.c1, rt0.c2, rt0.c3)))))) RIGHT OUTER JOIN v0 ON CAST('' AS TEXT) COLLATE BINARY GROUP BY rt0.c2 HAVING TOTAL(((rt0.c2)GLOB(SUM(rt0.c0)))) UNION ALL SELECT ALL rt0.c2 FROM rt0, t0 INNER JOIN vt0 ON (((0.9469041422214587)) BETWEEN ((((rt0.c2)LIKE(rt0.c3)))) AND (((((t0.c0, t0.c1, t0.c2))==((rt0.c1, rt0.c2, rt0.c3)))))) RIGHT OUTER JOIN v0 ON CAST('' AS TEXT) COLLATE BINARY GROUP BY rt0.c2 HAVING (NOT (TOTAL(((rt0.c2)GLOB(SUM(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, t0 INNER JOIN vt0 ON (((0.9469041422214587)) BETWEEN ((((rt0.c2)LIKE(rt0.c3)))) AND (((((t0.c0, t0.c1, t0.c2))==((rt0.c1, rt0.c2, rt0.c3)))))) RIGHT OUTER JOIN v0 ON CAST('' AS TEXT) COLLATE BINARY GROUP BY rt0.c2 HAVING ((TOTAL(((rt0.c2)GLOB(SUM(rt0.c0))))) ISNULL);
SELECT ALL * FROM t0, v0, vt0;
SELECT ALL * FROM t0, v0, vt0 WHERE (((TRIM(v0.c0)) ISNULL)) UNION ALL SELECT * FROM t0, v0, vt0 WHERE ((NOT (((TRIM(v0.c0)) ISNULL)))) UNION ALL SELECT ALL * FROM t0, v0, vt0 WHERE (((((TRIM(v0.c0)) ISNULL)) ISNULL));
SELECT ALL * FROM t0, v0, vt0;
SELECT DISTINCT * FROM vt0, t0, rt0, v0;
SELECT DISTINCT * FROM vt0, t0, rt0, v0 WHERE ((CASE v0.c0  WHEN t0.c2 THEN rt0.c1 ELSE vt0.c0 END IN ())) UNION SELECT DISTINCT * FROM vt0, t0, rt0, v0 WHERE ((NOT ((CASE v0.c0  WHEN t0.c2 THEN rt0.c1 ELSE vt0.c0 END IN ())))) UNION SELECT DISTINCT * FROM vt0, t0, rt0, v0 WHERE ((((CASE v0.c0  WHEN t0.c2 THEN rt0.c1 ELSE vt0.c0 END IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, t0, rt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((v0.c0 IN (v0.c0))) AND (v0.c0 COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((v0.c0 IN (v0.c0))) AND (v0.c0 COLLATE NOCASE))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((v0.c0 IN (v0.c0))) AND (v0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(MIN(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(MIN(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(MIN(vt0.c0))) ISNULL);
SELECT * FROM t0, rt0, v0, vt0;
SELECT * FROM t0, rt0, v0, vt0 WHERE (((((((((rt0.c0)AND(rt0.c2)))OR(x'c86f')))AND(rt0.c3)))OR(((t0.c0) IS TRUE)))) UNION ALL SELECT ALL * FROM t0, rt0, v0, vt0 WHERE ((NOT (((((((((rt0.c0)AND(rt0.c2)))OR(x'c86f')))AND(rt0.c3)))OR(((t0.c0) IS TRUE)))))) UNION ALL SELECT * FROM t0, rt0, v0, vt0 WHERE (((((((((((rt0.c0)AND(rt0.c2)))OR(x'c86f')))AND(rt0.c3)))OR(((t0.c0) IS TRUE)))) ISNULL));
SELECT * FROM t0, rt0, v0, vt0;
SELECT DISTINCT rt0.c3, rt0.c0, t0.c2, rt0.c2 FROM t0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c3, rt0.c0, t0.c2, rt0.c2 FROM t0 NATURAL JOIN rt0 WHERE ((- (((rt0.c3)%(rt0.c1))))) UNION SELECT DISTINCT rt0.c3, rt0.c0, t0.c2, rt0.c2 FROM t0 NATURAL JOIN rt0 WHERE ((NOT ((- (((rt0.c3)%(rt0.c1))))))) UNION SELECT DISTINCT rt0.c3, rt0.c0, t0.c2, rt0.c2 FROM t0 NATURAL JOIN rt0 WHERE ((((- (((rt0.c3)%(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0, t0.c2, rt0.c2 FROM t0 NATURAL JOIN rt0;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM v0, t0 WHERE ((NOT (t0.c1))) GROUP BY t0.c1, t0.c2, t0.c0 UNION SELECT t0.c1, t0.c2, t0.c0 FROM v0, t0 WHERE ((NOT ((NOT (t0.c1))))) GROUP BY t0.c1, t0.c2, t0.c0 UNION SELECT ALL t0.c1, t0.c2, t0.c0 FROM v0, t0 WHERE ((((NOT (t0.c1))) ISNULL)) GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING (NOT (((AVG(vt0.c0)) NOT BETWEEN (AVG(MAX(COUNT(rt0.c3)))) AND (MAX(rt0.c0))))) UNION ALL SELECT rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING (NOT ((NOT (((AVG(vt0.c0)) NOT BETWEEN (AVG(MAX(COUNT(rt0.c3)))) AND (MAX(rt0.c0))))))) UNION ALL SELECT ALL rt0.c0 FROM vt0, rt0 GROUP BY rt0.c0 HAVING (((NOT (((AVG(vt0.c0)) NOT BETWEEN (AVG(MAX(COUNT(rt0.c3)))) AND (MAX(rt0.c0)))))) ISNULL);
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (((NULL))<>((((rt0.c0) BETWEEN (t0.c2) AND (t0.c0))))) FULL OUTER JOIN vt0 ON rt0.c2 COLLATE RTRIM;
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (((NULL))<>((((rt0.c0) BETWEEN (t0.c2) AND (t0.c0))))) FULL OUTER JOIN vt0 ON rt0.c2 COLLATE RTRIM WHERE (CASE ((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (((rt0.c3))==((rt0.c0))) THEN TRIM(vt0.c0) ELSE rt0.c3 END) UNION ALL SELECT * FROM rt0 CROSS JOIN t0 ON (((NULL))!=((((rt0.c0) BETWEEN (t0.c2) AND (t0.c0))))) FULL OUTER JOIN vt0 ON rt0.c2 COLLATE RTRIM WHERE ((NOT (CASE ((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (((rt0.c3))==((rt0.c0))) THEN TRIM(vt0.c0) ELSE rt0.c3 END))) UNION ALL SELECT * FROM rt0 CROSS JOIN t0 ON (((NULL))<>((((rt0.c0) BETWEEN (t0.c2) AND (t0.c0))))) FULL OUTER JOIN vt0 ON rt0.c2 COLLATE RTRIM WHERE (((CASE ((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (((rt0.c3))==((rt0.c0))) THEN TRIM(vt0.c0) ELSE rt0.c3 END) ISNULL));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (((NULL))<>((((rt0.c0) BETWEEN (t0.c2) AND (t0.c0))))) FULL OUTER JOIN vt0 ON rt0.c2 COLLATE RTRIM;
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON rt0.c1;
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON rt0.c1 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON rt0.c1 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON rt0.c1 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON rt0.c1;
SELECT ALL t0.c1, t0.c0, vt0.c0, t0.c2 FROM t0, vt0 GROUP BY t0.c1, t0.c0, vt0.c0, t0.c2;
SELECT t0.c1, t0.c0, vt0.c0, t0.c2 FROM t0, vt0 WHERE (0xffffffffefff53e6) GROUP BY t0.c1, t0.c0, vt0.c0, t0.c2 UNION SELECT t0.c1, t0.c0, vt0.c0, t0.c2 FROM t0, vt0 WHERE ((NOT (0xffffffffefff53e6))) GROUP BY t0.c1, t0.c0, vt0.c0, t0.c2 UNION SELECT t0.c1, t0.c0, vt0.c0, t0.c2 FROM t0, vt0 WHERE (((0xffffffffefff53e6) ISNULL)) GROUP BY t0.c1, t0.c0, vt0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, vt0.c0, t0.c2 FROM t0, vt0 GROUP BY t0.c1, t0.c0, vt0.c0, t0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING MIN(TOTAL(rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MIN(TOTAL(rt0.c1)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MIN(TOTAL(rt0.c1))) ISNULL);
SELECT ALL * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE (((v0.c0) NOT NULL)) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (((v0.c0) NOT NULL)))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE (((((v0.c0) NOT NULL)) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT * FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((((((((((rt0.c2)AND(rt0.c0)))AND(NULL)))OR(t0.c0)))AND(v0.c0))) IS FALSE) FULL OUTER JOIN v0 ON ((((CAST(t0.c0 AS INTEGER))OR(NULL)))AND(CAST(t0.c2 AS NUMERIC)));
SELECT rt0.c2, rt0.c3, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c3, rt0.c0, v0.c0 FROM v0, rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c2)LIKE(rt0.c0)))) AND ((((v0.c0) IS TRUE))))) GROUP BY rt0.c2, rt0.c3, rt0.c0, v0.c0 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c0, v0.c0 FROM v0, rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((((rt0.c2)LIKE(rt0.c0)))) AND ((((v0.c0) IS TRUE))))))) GROUP BY rt0.c2, rt0.c3, rt0.c0, v0.c0 UNION SELECT rt0.c2, rt0.c3, rt0.c0, v0.c0 FROM v0, rt0 NOT INDEXED WHERE ((((((rt0.c1)) BETWEEN ((((rt0.c2)LIKE(rt0.c0)))) AND ((((v0.c0) IS TRUE))))) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c3, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, v0.c0;
SELECT ALL vt0.c0, rt0.c1 FROM vt0, rt0, t0 GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c0, rt0.c1 FROM vt0, rt0, t0 GROUP BY vt0.c0, rt0.c1 HAVING CAST(AVG(COUNT(COUNT(*))) AS INTEGER) UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM vt0, rt0, t0 GROUP BY vt0.c0, rt0.c1 HAVING (NOT (CAST(AVG(COUNT(COUNT(*))) AS INTEGER))) UNION ALL SELECT ALL vt0.c0, rt0.c1 FROM vt0, rt0, t0 GROUP BY vt0.c0, rt0.c1 HAVING ((CAST(AVG(COUNT(COUNT(*))) AS INTEGER)) ISNULL);
SELECT * FROM v0, t0;
SELECT * FROM v0, t0 WHERE (((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (((((t0.c0)OR(t0.c1)))AND(v0.c0))) AND ((t0.c2 IN (t0.c1))))) UNION ALL SELECT * FROM v0, t0 WHERE ((NOT (((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (((((t0.c0)OR(t0.c1)))AND(v0.c0))) AND ((t0.c2 IN (t0.c1))))))) UNION ALL SELECT ALL * FROM v0, t0 WHERE (((((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (((((t0.c0)OR(t0.c1)))AND(v0.c0))) AND ((t0.c2 IN (t0.c1))))) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((~ (((rt0.c1)!=(rt0.c3))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((~ (((rt0.c1)!=(rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((~ (((rt0.c1)!=(rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt0 WHERE (((((+ (rt0.c2)), CAST(vt0.c0 AS TEXT), json_array_length(rt0.c1, rt0.c2)))<=((TRIM(DISTINCT rt0.c3, rt0.c0), UPPER(rt0.c1), ((vt0.c0)IS(rt0.c1)))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((+ (rt0.c2)), CAST(vt0.c0 AS TEXT), json_array_length(rt0.c1, rt0.c2)))<=((TRIM(DISTINCT rt0.c3, rt0.c0), UPPER(rt0.c1), ((vt0.c0)IS(rt0.c1)))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, vt0 WHERE (((((((+ (rt0.c2)), CAST(vt0.c0 AS TEXT), json_array_length(rt0.c1, rt0.c2)))<=((TRIM(DISTINCT rt0.c3, rt0.c0), UPPER(rt0.c1), ((vt0.c0)IS(rt0.c1)))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING TOTAL(GROUP_CONCAT(GROUP_CONCAT(rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (TOTAL(GROUP_CONCAT(GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((TOTAL(GROUP_CONCAT(GROUP_CONCAT(rt0.c1)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((((rt0.c0) NOT BETWEEN ('-845984765') AND (rt0.c1)))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((((rt0.c0) NOT BETWEEN ('-845984765') AND (rt0.c1)))))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((((rt0.c0) NOT BETWEEN ('-845984765') AND (rt0.c1)))))) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0;
SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0 WHERE (CAST(((t0.c2)<<(0.8243934993868213)) AS INTEGER)) UNION SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((NOT (CAST(((t0.c2)<<(0.8243934993868213)) AS INTEGER)))) UNION SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0 WHERE (((CAST(((t0.c2)<<(0.8243934993868213)) AS INTEGER)) ISNULL));
SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0;
SELECT rt0.c1, rt0.c0, rt0.c3, t0.c0, vt0.c0 FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL))-((NOT (vt0.c0)))) RIGHT OUTER JOIN v0 ON CASE ((rt0.c2)IS NOT(rt0.c3))  WHEN CASE WHEN rt0.c1 THEN rt0.c0 END THEN CAST(x'' AS BLOB) WHEN t0.c2 COLLATE NOCASE THEN ((((((((rt0.c0)AND(t0.c1)))AND(rt0.c0)))AND(t0.c1)))AND(vt0.c0)) WHEN (((t0.c0))=((rt0.c3))) THEN (~ (rt0.c3)) WHEN ((vt0.c0)LIKE(t0.c2)) THEN ((rt0.c1)+(rt0.c0)) WHEN (NOT (v0.c0)) THEN ((rt0.c1) NOT NULL) ELSE ((rt0.c2) IS TRUE) END GROUP BY rt0.c1, rt0.c0, rt0.c3, t0.c0, vt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c3, t0.c0, vt0.c0 FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL))-((NOT (vt0.c0)))) RIGHT OUTER JOIN v0 ON CASE ((rt0.c2)IS NOT(rt0.c3))  WHEN CASE WHEN rt0.c1 THEN rt0.c0 END THEN CAST(x'' AS BLOB) WHEN t0.c2 COLLATE NOCASE THEN ((((((((rt0.c0)AND(t0.c1)))AND(rt0.c0)))AND(t0.c1)))AND(vt0.c0)) WHEN (((t0.c0))=((rt0.c3))) THEN (~ (rt0.c3)) WHEN ((vt0.c0)LIKE(t0.c2)) THEN ((rt0.c1)+(rt0.c0)) WHEN (NOT (v0.c0)) THEN ((rt0.c1) NOT NULL) ELSE ((rt0.c2) IS TRUE) END WHERE (CAST(json_type(t0.c0) AS REAL)) GROUP BY rt0.c1, rt0.c0, rt0.c3, t0.c0, vt0.c0 UNION SELECT rt0.c1, rt0.c0, rt0.c3, t0.c0, vt0.c0 FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL))-((NOT (vt0.c0)))) RIGHT OUTER JOIN v0 ON CASE ((rt0.c2)IS NOT(rt0.c3))  WHEN CASE WHEN rt0.c1 THEN rt0.c0 END THEN CAST(x'' AS BLOB) WHEN t0.c2 COLLATE NOCASE THEN ((((((((rt0.c0)AND(t0.c1)))AND(rt0.c0)))AND(t0.c1)))AND(vt0.c0)) WHEN (((t0.c0))=((rt0.c3))) THEN (~ (rt0.c3)) WHEN ((vt0.c0)LIKE(t0.c2)) THEN ((rt0.c1)+(rt0.c0)) WHEN (NOT (v0.c0)) THEN ((rt0.c1) NOT NULL) ELSE ((rt0.c2) IS TRUE) END WHERE ((NOT (CAST(json_type(t0.c0) AS REAL)))) GROUP BY rt0.c1, rt0.c0, rt0.c3, t0.c0, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c3, t0.c0, vt0.c0 FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL))-((NOT (vt0.c0)))) RIGHT OUTER JOIN v0 ON CASE ((rt0.c2)IS NOT(rt0.c3))  WHEN CASE WHEN rt0.c1 THEN rt0.c0 END THEN CAST(x'' AS BLOB) WHEN t0.c2 COLLATE NOCASE THEN ((((((((rt0.c0)AND(t0.c1)))AND(rt0.c0)))AND(t0.c1)))AND(vt0.c0)) WHEN (((t0.c0))==((rt0.c3))) THEN (~ (rt0.c3)) WHEN ((vt0.c0)LIKE(t0.c2)) THEN ((rt0.c1)+(rt0.c0)) WHEN (NOT (v0.c0)) THEN ((rt0.c1) NOT NULL) ELSE ((rt0.c2) IS TRUE) END WHERE (((CAST(json_type(t0.c0) AS REAL)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c3, t0.c0, vt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c3, t0.c0, vt0.c0 FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL))-((NOT (vt0.c0)))) RIGHT OUTER JOIN v0 ON CASE ((rt0.c2)IS NOT(rt0.c3))  WHEN CASE WHEN rt0.c1 THEN rt0.c0 END THEN CAST(x'' AS BLOB) WHEN t0.c2 COLLATE NOCASE THEN ((((((((rt0.c0)AND(t0.c1)))AND(rt0.c0)))AND(t0.c1)))AND(vt0.c0)) WHEN (((t0.c0))=((rt0.c3))) THEN (~ (rt0.c3)) WHEN ((vt0.c0)LIKE(t0.c2)) THEN ((rt0.c1)+(rt0.c0)) WHEN (NOT (v0.c0)) THEN ((rt0.c1) NOT NULL) ELSE ((rt0.c2) IS TRUE) END GROUP BY rt0.c1, rt0.c0, rt0.c3, t0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((vt0.c0 IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((NOT ((vt0.c0 IN ()))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((NOT ((vt0.c0 IN ())))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((vt0.c0 IN ()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((NOT ((vt0.c0 IN ()))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((NOT ((vt0.c0 IN ())))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT MIN(((CAST(rt0.c2 AS BLOB)) NOT BETWEEN ((NOT (rt0.c2))) AND (((t0.c2)||(rt0.c2))))) FROM rt0, t0, v0, vt0;
SELECT ALL vt0.c0, t0.c1, t0.c2, t0.c0 FROM t0 INNER JOIN vt0 ON (~ ((~ (t0.c2))));
SELECT vt0.c0, t0.c1, t0.c2, t0.c0 FROM t0 INNER JOIN vt0 ON (~ ((~ (t0.c2)))) WHERE (((t0.c0)/((- (t0.c1))))) UNION ALL SELECT vt0.c0, t0.c1, t0.c2, t0.c0 FROM t0 INNER JOIN vt0 ON (~ ((~ (t0.c2)))) WHERE ((NOT (((t0.c0)/((- (t0.c1))))))) UNION ALL SELECT vt0.c0, t0.c1, t0.c2, t0.c0 FROM t0 INNER JOIN vt0 ON (~ ((~ (t0.c2)))) WHERE (((((t0.c0)/((- (t0.c1))))) ISNULL));
SELECT ALL vt0.c0, t0.c1, t0.c2, t0.c0 FROM t0 INNER JOIN vt0 ON (~ ((~ (t0.c2))));
SELECT DISTINCT t0.c1, t0.c2, v0.c0 FROM v0, vt0, t0;
SELECT DISTINCT t0.c1, t0.c2, v0.c0 FROM v0, vt0, t0 WHERE (((t0.c0) ISNULL)) UNION SELECT DISTINCT t0.c1, t0.c2, v0.c0 FROM v0, vt0, t0 WHERE ((NOT (((t0.c0) ISNULL)))) UNION SELECT DISTINCT t0.c1, t0.c2, v0.c0 FROM v0, vt0, t0 WHERE (((((t0.c0) ISNULL)) ISNULL));
SELECT DISTINCT t0.c1, t0.c2, v0.c0 FROM v0, vt0, t0;
SELECT ALL rt0.c1, rt0.c0, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c1, rt0.c0, rt0.c3 FROM vt0, rt0 WHERE ((- (((vt0.c0)LIKE(rt0.c3))))) GROUP BY rt0.c1, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c3 FROM vt0, rt0 WHERE ((NOT ((- (((vt0.c0)LIKE(rt0.c3))))))) GROUP BY rt0.c1, rt0.c0, rt0.c3 UNION SELECT rt0.c1, rt0.c0, rt0.c3 FROM vt0, rt0 WHERE ((((- (((vt0.c0)LIKE(rt0.c3))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c0, rt0.c3 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3;
SELECT ALL rt0.c3 FROM vt0, rt0, t0, v0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM vt0, rt0, t0, v0 GROUP BY rt0.c3 HAVING ((CAST(MAX(COUNT(*)) AS TEXT))||(MAX(rt0.c1))) UNION ALL SELECT ALL rt0.c3 FROM vt0, rt0, t0, v0 GROUP BY rt0.c3 HAVING (NOT (((CAST(MAX(COUNT(*)) AS TEXT))||(MAX(rt0.c1))))) UNION ALL SELECT ALL rt0.c3 FROM vt0, rt0, t0, v0 GROUP BY rt0.c3 HAVING ((((CAST(MAX(COUNT(*)) AS TEXT))||(MAX(rt0.c1)))) ISNULL);
SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c3 FROM rt0, v0, vt0;
SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c3 FROM rt0, v0, vt0 WHERE ((- ((rt0.c3 IN ())))) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c3 FROM rt0, v0, vt0 WHERE ((NOT ((- ((rt0.c3 IN ())))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c3 FROM rt0, v0, vt0 WHERE ((((- ((rt0.c3 IN ())))) ISNULL));
SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c0, rt0.c3 FROM rt0, v0, vt0;
SELECT DISTINCT v0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, v0 INNER JOIN vt0 ON (- (NULL));
SELECT DISTINCT v0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, v0 INNER JOIN vt0 ON (- (NULL)) WHERE (rt0.c1) UNION SELECT DISTINCT v0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, v0 INNER JOIN vt0 ON (- (NULL)) WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT v0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, v0 INNER JOIN vt0 ON (- (NULL)) WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT v0.c0, rt0.c3, rt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, v0 INNER JOIN vt0 ON (- (NULL));
SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0 WHERE ((- (((NULL)>(t0.c2))))) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM t0 WHERE ((NOT ((- (((NULL)>(t0.c2))))))) GROUP BY t0.c1, t0.c2 UNION SELECT t0.c1, t0.c2 FROM t0 WHERE ((((- (((NULL)>(t0.c2))))) ISNULL)) GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL((+ (COUNT(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL((+ (COUNT(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL((+ (COUNT(v0.c0))))) ISNULL);
SELECT t0.c1 FROM t0;
SELECT ALL t0.c1 FROM t0 WHERE (((CASE t0.c1  WHEN 1274683155 THEN t0.c1 END) NOT NULL)) UNION ALL SELECT t0.c1 FROM t0 WHERE ((NOT (((CASE t0.c1  WHEN 1274683155 THEN t0.c1 END) NOT NULL)))) UNION ALL SELECT ALL t0.c1 FROM t0 WHERE (((((CASE t0.c1  WHEN 1274683155 THEN t0.c1 END) NOT NULL)) ISNULL));
SELECT t0.c1 FROM t0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT v0.c0, t0.c0, rt0.c0, t0.c2, t0.c1, rt0.c1, rt0.c2, rt0.c3 FROM v0, t0, rt0 GROUP BY v0.c0, t0.c0, rt0.c0, t0.c2, t0.c1, rt0.c1, rt0.c2, rt0.c3;
SELECT ALL v0.c0, t0.c0, rt0.c0, t0.c2, t0.c1, rt0.c1, rt0.c2, rt0.c3 FROM v0, t0, rt0 WHERE (((((rt0.c3)/(rt0.c2))) ISNULL)) GROUP BY v0.c0, t0.c0, rt0.c0, t0.c2, t0.c1, rt0.c1, rt0.c2, rt0.c3 UNION SELECT ALL v0.c0, t0.c0, rt0.c0, t0.c2, t0.c1, rt0.c1, rt0.c2, rt0.c3 FROM v0, t0, rt0 WHERE ((NOT (((((rt0.c3)/(rt0.c2))) ISNULL)))) GROUP BY v0.c0, t0.c0, rt0.c0, t0.c2, t0.c1, rt0.c1, rt0.c2, rt0.c3 UNION SELECT v0.c0, t0.c0, rt0.c0, t0.c2, t0.c1, rt0.c1, rt0.c2, rt0.c3 FROM v0, t0, rt0 WHERE (((((((rt0.c3)/(rt0.c2))) ISNULL)) ISNULL)) GROUP BY v0.c0, t0.c0, rt0.c0, t0.c2, t0.c1, rt0.c1, rt0.c2, rt0.c3;
SELECT v0.c0, t0.c0, rt0.c0, t0.c2, t0.c1, rt0.c1, rt0.c2, rt0.c3 FROM v0, t0, rt0 GROUP BY v0.c0, t0.c0, rt0.c0, t0.c2, t0.c1, rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING '-492704370' UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ('-492704370')) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (('-492704370') ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING '-492704370' UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ('-492704370')) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (('-492704370') ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT MIN((((t0.c2, rt0.c3, v0.c0)) BETWEEN ((((('<sl'))<=((v0.c0))), (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))), rt0.c2 COLLATE RTRIM)) AND ((GLOB(x'', t0.c2), ((rt0.c0)%(v0.c0)), ((rt0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)))))) FROM t0, rt0, vt0, v0;
SELECT ALL * FROM v0, rt0, t0, vt0;
SELECT * FROM v0, rt0, t0, vt0 WHERE ((((vt0.c0)) BETWEEN ((((((t0.c1)AND(t0.c2)))OR(t0.c1)))) AND ((IFNULL(rt0.c2, rt0.c0))))) UNION ALL SELECT * FROM v0, rt0, t0, vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((((t0.c1)AND(t0.c2)))OR(t0.c1)))) AND ((IFNULL(rt0.c2, rt0.c0))))))) UNION ALL SELECT * FROM v0, rt0, t0, vt0 WHERE ((((((vt0.c0)) BETWEEN ((((((t0.c1)AND(t0.c2)))OR(t0.c1)))) AND ((IFNULL(rt0.c2, rt0.c0))))) ISNULL));
SELECT ALL * FROM v0, rt0, t0, vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) IN ())) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) IN ())))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) IN ())) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT rt0.c1, t0.c1, rt0.c2, t0.c0, t0.c2, v0.c0, rt0.c0, rt0.c3, vt0.c0 FROM v0, rt0, vt0, t0 GROUP BY rt0.c1, t0.c1, rt0.c2, t0.c0, t0.c2, v0.c0, rt0.c0, rt0.c3, vt0.c0;
SELECT rt0.c1, t0.c1, rt0.c2, t0.c0, t0.c2, v0.c0, rt0.c0, rt0.c3, vt0.c0 FROM v0, rt0, vt0, t0 WHERE ((((rt0.c0, v0.c0, t0.c2, v0.c0, rt0.c0)) BETWEEN ((t0.c1, ((rt0.c1)<=(vt0.c0)), rt0.c0, ((rt0.c2) BETWEEN (t0.c2) AND (rt0.c2)), ((t0.c0)>=(x'')))) AND (((NOT (rt0.c1)), rt0.c3, TYPEOF(DISTINCT vt0.c0), (t0.c0 IN ()), rt0.c0 COLLATE BINARY)))) GROUP BY rt0.c1, t0.c1, rt0.c2, t0.c0, t0.c2, v0.c0, rt0.c0, rt0.c3, vt0.c0 UNION SELECT rt0.c1, t0.c1, rt0.c2, t0.c0, t0.c2, v0.c0, rt0.c0, rt0.c3, vt0.c0 FROM v0, rt0, vt0, t0 WHERE ((NOT ((((rt0.c0, v0.c0, t0.c2, v0.c0, rt0.c0)) BETWEEN ((t0.c1, ((rt0.c1)<=(vt0.c0)), rt0.c0, ((rt0.c2) BETWEEN (t0.c2) AND (rt0.c2)), ((t0.c0)>=(x'')))) AND (((NOT (rt0.c1)), rt0.c3, TYPEOF(DISTINCT vt0.c0), (t0.c0 IN ()), rt0.c0 COLLATE BINARY)))))) GROUP BY rt0.c1, t0.c1, rt0.c2, t0.c0, t0.c2, v0.c0, rt0.c0, rt0.c3, vt0.c0 UNION SELECT ALL rt0.c1, t0.c1, rt0.c2, t0.c0, t0.c2, v0.c0, rt0.c0, rt0.c3, vt0.c0 FROM v0, rt0, vt0, t0 WHERE ((((((rt0.c0, v0.c0, t0.c2, v0.c0, rt0.c0)) BETWEEN ((t0.c1, ((rt0.c1)<=(vt0.c0)), rt0.c0, ((rt0.c2) BETWEEN (t0.c2) AND (rt0.c2)), ((t0.c0)>=(x'')))) AND (((NOT (rt0.c1)), rt0.c3, TYPEOF(DISTINCT vt0.c0), (t0.c0 IN ()), rt0.c0 COLLATE BINARY)))) ISNULL)) GROUP BY rt0.c1, t0.c1, rt0.c2, t0.c0, t0.c2, v0.c0, rt0.c0, rt0.c3, vt0.c0;
SELECT rt0.c1, t0.c1, rt0.c2, t0.c0, t0.c2, v0.c0, rt0.c0, rt0.c3, vt0.c0 FROM v0, rt0, vt0, t0 GROUP BY rt0.c1, t0.c1, rt0.c2, t0.c0, t0.c2, v0.c0, rt0.c0, rt0.c3, vt0.c0;
SELECT rt0.c2 FROM vt0, t0, rt0, v0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, t0, rt0, v0 GROUP BY rt0.c2 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c2 FROM vt0, t0, rt0, v0 GROUP BY rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c2 FROM vt0, t0, rt0, v0 GROUP BY rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c2 FROM vt0, t0, rt0, v0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, t0, rt0, v0 GROUP BY rt0.c2 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c2 FROM vt0, t0, rt0, v0 GROUP BY rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c2 FROM vt0, t0, rt0, v0 GROUP BY rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c2 FROM vt0, t0, rt0, v0 GROUP BY rt0.c2;
SELECT MAX((NOT (((t0.c0) NOT NULL)))) FROM v0, t0, rt0, vt0 ORDER BY json_patch((rt0.c3 IN ()), CAST(v0.c0 AS INTEGER))  NULLS FIRST;
SELECT * FROM t0 NOT INDEXED;
SELECT * FROM t0 WHERE (ABS(DISTINCT (t0.c0 IN ()))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (ABS(DISTINCT (t0.c0 IN ()))))) UNION ALL SELECT * FROM t0 WHERE (((ABS(DISTINCT (t0.c0 IN ()))) ISNULL));
SELECT * FROM t0 NOT INDEXED;
SELECT DISTINCT rt0.c0, rt0.c3, v0.c0, vt0.c0, t0.c1, rt0.c1, t0.c2 FROM v0, vt0, rt0, t0;
SELECT DISTINCT rt0.c0, rt0.c3, v0.c0, vt0.c0, t0.c1, rt0.c1, t0.c2 FROM v0, vt0, rt0, t0 WHERE (CASE (((t0.c0))!=((NULL)))  WHEN CAST(t0.c2 AS BLOB) THEN CHANGES() ELSE ((0.30390584199588944)/(vt0.c0)) END) UNION SELECT DISTINCT rt0.c0, rt0.c3, v0.c0, vt0.c0, t0.c1, rt0.c1, t0.c2 FROM v0, vt0, rt0, t0 WHERE ((NOT (CASE (((t0.c0))<>((NULL)))  WHEN CAST(t0.c2 AS BLOB) THEN CHANGES() ELSE ((0.30390584199588944)/(vt0.c0)) END))) UNION SELECT DISTINCT rt0.c0, rt0.c3, v0.c0, vt0.c0, t0.c1, rt0.c1, t0.c2 FROM v0, vt0, rt0, t0 WHERE (((CASE (((t0.c0))<>((NULL)))  WHEN CAST(t0.c2 AS BLOB) THEN CHANGES() ELSE ((0.30390584199588944)/(vt0.c0)) END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, v0.c0, vt0.c0, t0.c1, rt0.c1, t0.c2 FROM v0, vt0, rt0, t0;
SELECT ALL v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1;
SELECT ALL v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 WHERE ('2068385019') GROUP BY v0.c0, rt0.c0, rt0.c1 UNION SELECT v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT ('2068385019'))) GROUP BY v0.c0, rt0.c0, rt0.c1 UNION SELECT ALL v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 WHERE ((('2068385019') ISNULL)) GROUP BY v0.c0, rt0.c0, rt0.c1;
SELECT ALL v0.c0, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c0, t0.c2, v0.c0, rt0.c3, rt0.c2, vt0.c0, rt0.c1, t0.c0 FROM t0, v0, rt0, vt0 GROUP BY rt0.c0, t0.c2, v0.c0, rt0.c3, rt0.c2, vt0.c0, rt0.c1, t0.c0;
SELECT ALL rt0.c0, t0.c2, v0.c0, rt0.c3, rt0.c2, vt0.c0, rt0.c1, t0.c0 FROM t0, v0, rt0, vt0 GROUP BY rt0.c0, t0.c2, v0.c0, rt0.c3, rt0.c2, vt0.c0, rt0.c1, t0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL rt0.c0, t0.c2, v0.c0, rt0.c3, rt0.c2, vt0.c0, rt0.c1, t0.c0 FROM t0, v0, rt0, vt0 GROUP BY rt0.c0, t0.c2, v0.c0, rt0.c3, rt0.c2, vt0.c0, rt0.c1, t0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL rt0.c0, t0.c2, v0.c0, rt0.c3, rt0.c2, vt0.c0, rt0.c1, t0.c0 FROM t0, v0, rt0, vt0 GROUP BY rt0.c0, t0.c2, v0.c0, rt0.c3, rt0.c2, vt0.c0, rt0.c1, t0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL t0.c0, t0.c2 FROM t0, vt0;
SELECT ALL t0.c0, t0.c2 FROM t0, vt0 WHERE (CAST(LOWER(t0.c2) AS REAL)) UNION ALL SELECT t0.c0, t0.c2 FROM t0, vt0 WHERE ((NOT (CAST(LOWER(t0.c2) AS REAL)))) UNION ALL SELECT t0.c0, t0.c2 FROM t0, vt0 WHERE (((CAST(LOWER(t0.c2) AS REAL)) ISNULL));
SELECT ALL t0.c0, t0.c2 FROM t0, vt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c1)AND(t0.c2)) IN ())) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c1)AND(t0.c2)) IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c1)AND(t0.c2)) IN ())) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) ISNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) ISNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(0.05112209331175188) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(0.05112209331175188))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(0.05112209331175188)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(0.05112209331175188) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(0.05112209331175188))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(0.05112209331175188)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c3, t0.c1, rt0.c1 FROM rt0, t0 INNER JOIN vt0 ON json_valid(vt0.c0) LEFT OUTER JOIN v0 ON (((((+ (v0.c0)))AND((((' U谮nowPk', t0.c1, rt0.c1)) NOT BETWEEN ((v0.c0, rt0.c0, v0.c0)) AND ((rt0.c0, rt0.c0, v0.c0))))))AND(((t0.c1)<(t0.c0))));
SELECT ALL rt0.c3, t0.c1, rt0.c1 FROM rt0, t0 INNER JOIN vt0 ON json_valid(vt0.c0) LEFT OUTER JOIN v0 ON (((((+ (v0.c0)))AND((((' U谮nowPk', t0.c1, rt0.c1)) NOT BETWEEN ((v0.c0, rt0.c0, v0.c0)) AND ((rt0.c0, rt0.c0, v0.c0))))))AND(((t0.c1)<(t0.c0)))) WHERE (((vt0.c0)>(t0.c2 COLLATE NOCASE))) UNION ALL SELECT rt0.c3, t0.c1, rt0.c1 FROM rt0, t0 INNER JOIN vt0 ON json_valid(vt0.c0) LEFT OUTER JOIN v0 ON (((((+ (v0.c0)))AND((((' U谮nowPk', t0.c1, rt0.c1)) NOT BETWEEN ((v0.c0, rt0.c0, v0.c0)) AND ((rt0.c0, rt0.c0, v0.c0))))))AND(((t0.c1)<(t0.c0)))) WHERE ((NOT (((vt0.c0)>(t0.c2 COLLATE NOCASE))))) UNION ALL SELECT rt0.c3, t0.c1, rt0.c1 FROM rt0, t0 INNER JOIN vt0 ON json_valid(vt0.c0) LEFT OUTER JOIN v0 ON (((((+ (v0.c0)))AND((((' U谮nowPk', t0.c1, rt0.c1)) NOT BETWEEN ((v0.c0, rt0.c0, v0.c0)) AND ((rt0.c0, rt0.c0, v0.c0))))))AND(((t0.c1)<(t0.c0)))) WHERE (((((vt0.c0)>(t0.c2 COLLATE NOCASE))) ISNULL));
SELECT rt0.c3, t0.c1, rt0.c1 FROM rt0, t0 INNER JOIN vt0 ON json_valid(vt0.c0) LEFT OUTER JOIN v0 ON (((((+ (v0.c0)))AND((((' U谮nowPk', t0.c1, rt0.c1)) NOT BETWEEN ((v0.c0, rt0.c0, v0.c0)) AND ((rt0.c0, rt0.c0, v0.c0))))))AND(((t0.c1)<(t0.c0))));
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 WHERE (NULL) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2, v0.c0, rt0.c1 FROM v0, rt0;
SELECT ALL rt0.c0, t0.c2, rt0.c3, rt0.c1, rt0.c2 FROM v0 CROSS JOIN t0 ON (((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1))))<(t0.c2 COLLATE BINARY)) FULL OUTER JOIN rt0 ON ((((x'' IN ())))>=((CASE WHEN rt0.c0 THEN rt0.c3 END))) GROUP BY rt0.c0, t0.c2, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (rt0.c3 COLLATE NOCASE IN (((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, v0.c0;
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (rt0.c3 COLLATE NOCASE IN (((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, v0.c0 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (rt0.c3 COLLATE NOCASE IN (((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, v0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (rt0.c3 COLLATE NOCASE IN (((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, v0.c0 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (rt0.c3 COLLATE NOCASE IN (((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, v0.c0;
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (rt0.c3 COLLATE NOCASE IN (((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, v0.c0 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (rt0.c3 COLLATE NOCASE IN (((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, v0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (rt0.c3 COLLATE NOCASE IN (((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, v0.c0 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (rt0.c3 COLLATE NOCASE IN (((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0, v0.c0;
SELECT v0.c0, rt0.c0, rt0.c2 FROM v0, rt0;
SELECT v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (CASE WHEN (rt0.c3 IN (rt0.c0, rt0.c0)) THEN CAST(rt0.c3 AS TEXT) WHEN rt0.c3 COLLATE NOCASE THEN ((rt0.c0)>>(rt0.c3)) WHEN (+ (rt0.c1)) THEN ((rt0.c0) IS FALSE) ELSE ((rt0.c3)-(rt0.c0)) END) UNION ALL SELECT v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (CASE WHEN (rt0.c3 IN (rt0.c0, rt0.c0)) THEN CAST(rt0.c3 AS TEXT) WHEN rt0.c3 COLLATE NOCASE THEN ((rt0.c0)>>(rt0.c3)) WHEN (+ (rt0.c1)) THEN ((rt0.c0) IS FALSE) ELSE ((rt0.c3)-(rt0.c0)) END))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (((CASE WHEN (rt0.c3 IN (rt0.c0, rt0.c0)) THEN CAST(rt0.c3 AS TEXT) WHEN rt0.c3 COLLATE NOCASE THEN ((rt0.c0)>>(rt0.c3)) WHEN (+ (rt0.c1)) THEN ((rt0.c0) IS FALSE) ELSE ((rt0.c3)-(rt0.c0)) END) ISNULL));
SELECT v0.c0, rt0.c0, rt0.c2 FROM v0, rt0;
SELECT DISTINCT * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON rt0.c3 COLLATE BINARY;
SELECT DISTINCT * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON rt0.c3 COLLATE BINARY WHERE ((((rt0.c1)) NOT BETWEEN ((x'')) AND ((((v0.c0)/(v0.c0)))))) UNION SELECT DISTINCT * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON rt0.c3 COLLATE BINARY WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((x'')) AND ((((v0.c0)/(v0.c0)))))))) UNION SELECT DISTINCT * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON rt0.c3 COLLATE BINARY WHERE ((((((rt0.c1)) NOT BETWEEN ((x'')) AND ((((v0.c0)/(v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON rt0.c3 COLLATE BINARY;
SELECT ALL t0.c2, v0.c0, t0.c0, rt0.c0, rt0.c2, vt0.c0, rt0.c3, rt0.c1 FROM t0 CROSS JOIN v0 ON ((t0.c2 COLLATE BINARY)<=((((rt0.c2, t0.c0, rt0.c1))>((rt0.c3, t0.c0, v0.c0))))) RIGHT OUTER JOIN vt0 ON (((v0.c0 IN ())) BETWEEN (rt0.c2) AND (((((rt0.c1)OR(v0.c0)))OR(rt0.c3)))) INNER JOIN rt0 ON (((t0.c0)&(v0.c0)) IN (CASE WHEN x'' THEN rt0.c0 ELSE v0.c0 END)) GROUP BY t0.c2, v0.c0, t0.c0, rt0.c0, rt0.c2, vt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM t0, v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM t0, v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(TOTAL(t0.c1)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM t0, v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(TOTAL(t0.c1)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM t0, v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(TOTAL(t0.c1))) ISNULL);
SELECT ALL SUM(t0.c1) FROM t0, vt0 ORDER BY (~ (CAST(t0.c2 AS INTEGER))) DESC;
SELECT ALL vt0.c0, v0.c0, t0.c1 FROM vt0, v0, t0;
SELECT ALL vt0.c0, v0.c0, t0.c1 FROM vt0, v0, t0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0, v0.c0, t0.c1 FROM vt0, v0, t0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0, v0.c0, t0.c1 FROM vt0, v0, t0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM) ISNULL));
SELECT ALL vt0.c0, v0.c0, t0.c1 FROM vt0, v0, t0;
SELECT DISTINCT * FROM vt0, v0, t0;
SELECT DISTINCT * FROM vt0, v0, t0 WHERE ('Ir!caK') UNION SELECT DISTINCT * FROM vt0, v0, t0 WHERE ((NOT ('Ir!caK'))) UNION SELECT DISTINCT * FROM vt0, v0, t0 WHERE ((('Ir!caK') ISNULL));
SELECT DISTINCT * FROM vt0, v0, t0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM v0, rt0 WHERE (((v0.c0)AND(rt0.c0)) COLLATE BINARY) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM v0, rt0 WHERE ((NOT (((v0.c0)AND(rt0.c0)) COLLATE BINARY))) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3 UNION SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM v0, rt0 WHERE (((((v0.c0)AND(rt0.c0)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c3;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(((t0.c2)*(0.9418340357967637)) AS INTEGER) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(((t0.c2)*(0.9418340357967637)) AS INTEGER))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(((t0.c2)*(0.9418340357967637)) AS INTEGER)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(((t0.c2)*(0.9418340357967637)) AS INTEGER) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(((t0.c2)*(0.9418340357967637)) AS INTEGER))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(((t0.c2)*(0.9418340357967637)) AS INTEGER)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c2, t0.c0 FROM t0, rt0, vt0;
SELECT rt0.c2, t0.c0 FROM t0, rt0, vt0 WHERE ((((~ (rt0.c0))) ISNULL)) UNION ALL SELECT ALL rt0.c2, t0.c0 FROM t0, rt0, vt0 WHERE ((NOT ((((~ (rt0.c0))) ISNULL)))) UNION ALL SELECT rt0.c2, t0.c0 FROM t0, rt0, vt0 WHERE ((((((~ (rt0.c0))) ISNULL)) ISNULL));
SELECT rt0.c2, t0.c0 FROM t0, rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ('Kzg抵+ꃏc#') UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ('Kzg抵+ꃏc#'))) UNION SELECT DISTINCT * FROM vt0 WHERE ((('Kzg抵+ꃏc#') ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM v0, rt0 WHERE (((((0.7530741416426143)LIKE(rt0.c1))) NOTNULL)) GROUP BY rt0.c2, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c3 FROM v0, rt0 WHERE ((NOT (((((0.7530741416426143)LIKE(rt0.c1))) NOTNULL)))) GROUP BY rt0.c2, rt0.c3 UNION SELECT rt0.c2, rt0.c3 FROM v0, rt0 WHERE (((((((0.7530741416426143)LIKE(rt0.c1))) NOTNULL)) ISNULL)) GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3;
SELECT t0.c1, t0.c2, rt0.c0, t0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t0, vt0, rt0, v0 GROUP BY t0.c1, t0.c2, rt0.c0, t0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT ALL t0.c1, t0.c2, rt0.c0, t0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t0, vt0, rt0, v0 GROUP BY t0.c1, t0.c2, rt0.c0, t0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING AVG((((GROUP_CONCAT(COUNT(rt0.c3))))>=((SUM(MIN(rt0.c0)))))) UNION ALL SELECT t0.c1, t0.c2, rt0.c0, t0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t0, vt0, rt0, v0 GROUP BY t0.c1, t0.c2, rt0.c0, t0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (NOT (AVG((((GROUP_CONCAT(COUNT(rt0.c3))))>=((SUM(MIN(rt0.c0)))))))) UNION ALL SELECT ALL t0.c1, t0.c2, rt0.c0, t0.c0, rt0.c1, rt0.c2, rt0.c3 FROM t0, vt0, rt0, v0 GROUP BY t0.c1, t0.c2, rt0.c0, t0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING ((AVG((((GROUP_CONCAT(COUNT(rt0.c3))))>=((SUM(MIN(rt0.c0))))))) ISNULL);
SELECT ALL vt0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((((x'3e4a')OR(NULL)))OR(rt0.c1)) COLLATE BINARY RIGHT OUTER JOIN v0 ON ((CAST(vt0.c0 AS REAL)) BETWEEN (CASE rt0.c1  WHEN x'09a7' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN 0.724089979281309 THEN NULL ELSE v0.c0 END) AND (((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))));
SELECT ALL vt0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((((x'3e4a')OR(NULL)))OR(rt0.c1)) COLLATE BINARY RIGHT OUTER JOIN v0 ON ((CAST(vt0.c0 AS REAL)) BETWEEN (CASE rt0.c1  WHEN x'09a7' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN 0.724089979281309 THEN NULL ELSE v0.c0 END) AND (((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))) WHERE (((((rt0.c3)%(rt0.c0))) ISNULL)) UNION ALL SELECT ALL vt0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((((x'3e4a')OR(NULL)))OR(rt0.c1)) COLLATE BINARY RIGHT OUTER JOIN v0 ON ((CAST(vt0.c0 AS REAL)) BETWEEN (CASE rt0.c1  WHEN x'09a7' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN 0.724089979281309 THEN NULL ELSE v0.c0 END) AND (((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))) WHERE ((NOT (((((rt0.c3)%(rt0.c0))) ISNULL)))) UNION ALL SELECT vt0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((((x'3e4a')OR(NULL)))OR(rt0.c1)) COLLATE BINARY RIGHT OUTER JOIN v0 ON ((CAST(vt0.c0 AS REAL)) BETWEEN (CASE rt0.c1  WHEN x'09a7' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN 0.724089979281309 THEN NULL ELSE v0.c0 END) AND (((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))) WHERE (((((((rt0.c3)%(rt0.c0))) ISNULL)) ISNULL));
SELECT ALL vt0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON ((((x'3e4a')OR(NULL)))OR(rt0.c1)) COLLATE BINARY RIGHT OUTER JOIN v0 ON ((CAST(vt0.c0 AS REAL)) BETWEEN (CASE rt0.c1  WHEN x'09a7' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN 0.724089979281309 THEN NULL ELSE v0.c0 END) AND (((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))));
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE ((t0.c1 COLLATE NOCASE IN ())) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT ((t0.c1 COLLATE NOCASE IN ())))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((((t0.c1 COLLATE NOCASE IN ())) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT v0.c0 FROM v0 INNER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (v0.c0) AND (CAST(vt0.c0 AS INTEGER))) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 INNER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (v0.c0) AND (CAST(vt0.c0 AS INTEGER))) WHERE (CASE 0.7497883574654531  WHEN (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((v0.c0)<>('')) THEN NULL WHEN ((v0.c0)||(vt0.c0)) THEN (((v0.c0, vt0.c0, vt0.c0))!=((v0.c0, vt0.c0, v0.c0))) ELSE ((vt0.c0)AND(vt0.c0)) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 INNER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (v0.c0) AND (CAST(vt0.c0 AS INTEGER))) WHERE ((NOT (CASE 0.7497883574654531  WHEN (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((v0.c0)<>('')) THEN NULL WHEN ((v0.c0)||(vt0.c0)) THEN (((v0.c0, vt0.c0, vt0.c0))<>((v0.c0, vt0.c0, v0.c0))) ELSE ((vt0.c0)AND(vt0.c0)) END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 INNER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (v0.c0) AND (CAST(vt0.c0 AS INTEGER))) WHERE (((CASE 0.7497883574654531  WHEN (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((v0.c0)!=('')) THEN NULL WHEN ((v0.c0)||(vt0.c0)) THEN (((v0.c0, vt0.c0, vt0.c0))<>((v0.c0, vt0.c0, v0.c0))) ELSE ((vt0.c0)AND(vt0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 INNER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (v0.c0) AND (CAST(vt0.c0 AS INTEGER))) GROUP BY v0.c0;
SELECT rt0.c2 FROM t0, v0, vt0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM t0, v0, vt0, rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(MIN(NULL)) COLLATE NOCASE UNION ALL SELECT ALL rt0.c2 FROM t0, v0, vt0, rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(MIN(NULL)) COLLATE NOCASE)) UNION ALL SELECT rt0.c2 FROM t0, v0, vt0, rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(MIN(NULL)) COLLATE NOCASE) ISNULL);
SELECT ALL * FROM vt0, t0, rt0, v0;
SELECT * FROM vt0, t0, rt0, v0 WHERE (LENGTH(((rt0.c2) NOT BETWEEN (v0.c0) AND (t0.c1)))) UNION ALL SELECT ALL * FROM vt0, t0, rt0, v0 WHERE ((NOT (LENGTH(((rt0.c2) NOT BETWEEN (v0.c0) AND (t0.c1)))))) UNION ALL SELECT ALL * FROM vt0, t0, rt0, v0 WHERE (((LENGTH(((rt0.c2) NOT BETWEEN (v0.c0) AND (t0.c1)))) ISNULL));
SELECT ALL * FROM vt0, t0, rt0, v0;
SELECT DISTINCT t0.c0, t0.c2 FROM t0, v0;
SELECT DISTINCT t0.c0, t0.c2 FROM t0, v0 WHERE (x'') UNION SELECT DISTINCT t0.c0, t0.c2 FROM t0, v0 WHERE ((NOT (x''))) UNION SELECT DISTINCT t0.c0, t0.c2 FROM t0, v0 WHERE (((x'') ISNULL));
SELECT DISTINCT t0.c0, t0.c2 FROM t0, v0;
SELECT ALL rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c0;
SELECT ALL rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 WHERE (((CAST(rt0.c2 AS BLOB)) BETWEEN ((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) AND (0.22058286034937669))) GROUP BY rt0.c0, rt0.c2, v0.c0 UNION SELECT ALL rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 WHERE ((NOT (((CAST(rt0.c2 AS BLOB)) BETWEEN ((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) AND (0.22058286034937669))))) GROUP BY rt0.c0, rt0.c2, v0.c0 UNION SELECT rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 WHERE (((((CAST(rt0.c2 AS BLOB)) BETWEEN ((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) AND (0.22058286034937669))) ISNULL)) GROUP BY rt0.c0, rt0.c2, v0.c0;
SELECT ALL rt0.c0, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN((((v0.c0, SUM(v0.c0), '2092118845')) NOT BETWEEN ((GROUP_CONCAT(MAX(v0.c0)), v0.c0, GROUP_CONCAT(v0.c0))) AND ((SUM(GROUP_CONCAT(v0.c0)), GROUP_CONCAT(COUNT(*)), TOTAL(COUNT(*)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN((((v0.c0, SUM(v0.c0), '2092118845')) NOT BETWEEN ((GROUP_CONCAT(MAX(v0.c0)), v0.c0, GROUP_CONCAT(v0.c0))) AND ((SUM(GROUP_CONCAT(v0.c0)), GROUP_CONCAT(COUNT(*)), TOTAL(COUNT(*)))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN((((v0.c0, SUM(v0.c0), '2092118845')) NOT BETWEEN ((GROUP_CONCAT(MAX(v0.c0)), v0.c0, GROUP_CONCAT(v0.c0))) AND ((SUM(GROUP_CONCAT(v0.c0)), GROUP_CONCAT(COUNT(*)), TOTAL(COUNT(*))))))) ISNULL);
SELECT ALL MAX(((((CASE rt0.c1  WHEN t0.c2 THEN rt0.c0 WHEN 0Xb226f32 THEN t0.c1 WHEN t0.c1 THEN rt0.c2 ELSE rt0.c3 END)OR((((t0.c0))>((rt0.c0))))))OR(((t0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))) FROM rt0, t0, v0;
SELECT ALL * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c0))>=((vt0.c0))) COLLATE NOCASE) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT ((((v0.c0))>=((vt0.c0))) COLLATE NOCASE))) UNION ALL SELECT * FROM v0, vt0 WHERE ((((((v0.c0))>=((vt0.c0))) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT t0.c2, t0.c0 FROM t0, vt0, rt0;
SELECT DISTINCT t0.c2, t0.c0 FROM t0, vt0, rt0 WHERE (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY COLLATE NOCASE) UNION SELECT DISTINCT t0.c2, t0.c0 FROM t0, vt0, rt0 WHERE ((NOT (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY COLLATE NOCASE))) UNION SELECT DISTINCT t0.c2, t0.c0 FROM t0, vt0, rt0 WHERE (((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY COLLATE NOCASE) ISNULL));
SELECT DISTINCT t0.c2, t0.c0 FROM t0, vt0, rt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0)&(((vt0.c0) ISNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)&(((vt0.c0) ISNULL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)&(((vt0.c0) ISNULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1, rt0.c0, v0.c0, rt0.c2, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON CASE WHEN rt0.c3 COLLATE NOCASE THEN (rt0.c0 IN (rt0.c2, rt0.c0)) ELSE ((((v0.c0)AND(rt0.c0)))AND(v0.c0)) END GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2, rt0.c3;
SELECT rt0.c1, rt0.c0, v0.c0, rt0.c2, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON CASE WHEN rt0.c3 COLLATE NOCASE THEN (rt0.c0 IN (rt0.c2, rt0.c0)) ELSE ((((v0.c0)AND(rt0.c0)))AND(v0.c0)) END GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2, rt0.c3 HAVING ((SUM(COUNT(SUM(MIN(rt0.c0)))))IS NOT(-25057473)) UNION ALL SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c2, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON CASE WHEN rt0.c3 COLLATE NOCASE THEN (rt0.c0 IN (rt0.c2, rt0.c0)) ELSE ((((v0.c0)AND(rt0.c0)))AND(v0.c0)) END GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2, rt0.c3 HAVING (NOT (((SUM(COUNT(SUM(MIN(rt0.c0)))))IS NOT(-25057473)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, v0.c0, rt0.c2, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON CASE WHEN rt0.c3 COLLATE NOCASE THEN (rt0.c0 IN (rt0.c2, rt0.c0)) ELSE ((((v0.c0)AND(rt0.c0)))AND(v0.c0)) END GROUP BY rt0.c1, rt0.c0, v0.c0, rt0.c2, rt0.c3 HAVING ((((SUM(COUNT(SUM(MIN(rt0.c0)))))IS NOT(-25057473))) ISNULL);
SELECT vt0.c0, rt0.c3, t0.c1, rt0.c0, rt0.c1 FROM vt0, t0, rt0;
SELECT vt0.c0, rt0.c3, t0.c1, rt0.c0, rt0.c1 FROM vt0, t0, rt0 WHERE ((- (((((rt0.c3)OR(vt0.c0)))AND(rt0.c1))))) UNION ALL SELECT ALL vt0.c0, rt0.c3, t0.c1, rt0.c0, rt0.c1 FROM vt0, t0, rt0 WHERE ((NOT ((- (((((rt0.c3)OR(vt0.c0)))AND(rt0.c1))))))) UNION ALL SELECT vt0.c0, rt0.c3, t0.c1, rt0.c0, rt0.c1 FROM vt0, t0, rt0 WHERE ((((- (((((rt0.c3)OR(vt0.c0)))AND(rt0.c1))))) ISNULL));
SELECT vt0.c0, rt0.c3, t0.c1, rt0.c0, rt0.c1 FROM vt0, t0, rt0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (json((NOT (t0.c2)))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (json((NOT (t0.c2)))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((json((NOT (t0.c2)))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0, t0 WHERE ((~ (rt0.c3))) GROUP BY rt0.c2, rt0.c3, rt0.c0 UNION SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0, t0 WHERE ((NOT ((~ (rt0.c3))))) GROUP BY rt0.c2, rt0.c3, rt0.c0 UNION SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0, t0 WHERE ((((~ (rt0.c3))) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT ALL vt0.c0, rt0.c3, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c3, rt0.c0;
SELECT ALL vt0.c0, rt0.c3, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c3, rt0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(SUM(SUM(rt0.c2)))) UNION ALL SELECT ALL vt0.c0, rt0.c3, rt0.c0 FROM rt0, vt0 NOT INDEXED GROUP BY vt0.c0, rt0.c3, rt0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(SUM(SUM(rt0.c2)))))) UNION ALL SELECT vt0.c0, rt0.c3, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c3, rt0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(SUM(SUM(rt0.c2))))) ISNULL);
SELECT SUM(((0.8158622040017884)-((NOT (vt0.c0))))) FROM vt0;
SELECT ALL vt0.c0, v0.c0, rt0.c2, rt0.c3 FROM rt0, vt0 FULL OUTER JOIN v0 ON ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c3)))||(((rt0.c2)+(rt0.c2))));
SELECT vt0.c0, v0.c0, rt0.c2, rt0.c3 FROM rt0, vt0 FULL OUTER JOIN v0 ON ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c3)))||(((rt0.c2)+(rt0.c2)))) WHERE (rt0.c1) UNION ALL SELECT vt0.c0, v0.c0, rt0.c2, rt0.c3 FROM rt0, vt0 FULL OUTER JOIN v0 ON ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c3)))||(((rt0.c2)+(rt0.c2)))) WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL vt0.c0, v0.c0, rt0.c2, rt0.c3 FROM rt0, vt0 FULL OUTER JOIN v0 ON ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c3)))||(((rt0.c2)+(rt0.c2)))) WHERE (((rt0.c1) ISNULL));
SELECT ALL vt0.c0, v0.c0, rt0.c2, rt0.c3 FROM rt0, vt0 FULL OUTER JOIN v0 ON ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c3)))||(((rt0.c2)+(rt0.c2))));
SELECT DISTINCT v0.c0, t0.c0, t0.c1, t0.c2 FROM v0, t0;
SELECT DISTINCT v0.c0, t0.c0, t0.c1, t0.c2 FROM v0, t0 WHERE (((NULL) NOT BETWEEN ((((t0.c0, t0.c1, t0.c0, t0.c0, x'48c6'))=((v0.c0, t0.c1, '-1180874700', t0.c2, t0.c0)))) AND (HEX(t0.c1)))) UNION SELECT DISTINCT v0.c0, t0.c0, t0.c1, t0.c2 FROM v0, t0 WHERE ((NOT (((NULL) NOT BETWEEN ((((t0.c0, t0.c1, t0.c0, t0.c0, x'48c6'))=((v0.c0, t0.c1, '-1180874700', t0.c2, t0.c0)))) AND (HEX(t0.c1)))))) UNION SELECT DISTINCT v0.c0, t0.c0, t0.c1, t0.c2 FROM v0, t0 WHERE (((((NULL) NOT BETWEEN ((((t0.c0, t0.c1, t0.c0, t0.c0, x'48c6'))=((v0.c0, t0.c1, '-1180874700', t0.c2, t0.c0)))) AND (HEX(t0.c1)))) ISNULL));
SELECT DISTINCT v0.c0, t0.c0, t0.c1, t0.c2 FROM v0, t0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN '-1867956096' ELSE ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN '-1867956096' ELSE ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN '-1867956096' ELSE ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c1, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c0, v0.c0;
SELECT ALL t0.c1, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c0, v0.c0 HAVING TOTAL(SUM(t0.c0)) UNION ALL SELECT ALL t0.c1, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c0, v0.c0 HAVING (NOT (TOTAL(SUM(t0.c0)))) UNION ALL SELECT ALL t0.c1, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c0, v0.c0 HAVING ((TOTAL(SUM(t0.c0))) ISNULL);
SELECT ALL vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON load_extension(v0.c0 COLLATE BINARY);
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (1234321537) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (1234321537))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((1234321537) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0 WHERE (((((t0.c0) NOT NULL)) NOT BETWEEN ('1445945133') AND (((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2))))) GROUP BY t0.c2, t0.c1 UNION SELECT t0.c2, t0.c1 FROM t0 WHERE ((NOT (((((t0.c0) NOT NULL)) NOT BETWEEN ('1445945133') AND (((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2))))))) GROUP BY t0.c2, t0.c1 UNION SELECT t0.c2, t0.c1 FROM t0 WHERE (((((((t0.c0) NOT NULL)) NOT BETWEEN ('1445945133') AND (((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2))))) ISNULL)) GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING COUNT(((MIN(v0.c0))%(TOTAL(SUM(t0.c0))))) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING (NOT (COUNT(((MIN(v0.c0))%(TOTAL(SUM(t0.c0))))))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING ((COUNT(((MIN(v0.c0))%(TOTAL(SUM(t0.c0)))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((1.140837059E9 IN ())))==((((rt0.c3)GLOB(rt0.c0)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((1.140837059E9 IN ())))==((((rt0.c3)GLOB(rt0.c0)))))))) UNION ALL SELECT * FROM rt0 WHERE (((((((1.140837059E9 IN ())))=((((rt0.c3)GLOB(rt0.c0)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (TRIM(NULL)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (TRIM(NULL)))) UNION SELECT DISTINCT * FROM t0 WHERE (((TRIM(NULL)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c1 FROM t0, v0, vt0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0, v0, vt0 WHERE ((NOT (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0, v0, vt0 WHERE ((NOT ((NOT (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0, v0, vt0 WHERE ((((NOT (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ISNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0, v0, vt0 GROUP BY t0.c1;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING t0.c1 UNION ALL SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING (NOT (t0.c1)) UNION ALL SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING ((t0.c1) ISNULL);
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING t0.c1 UNION ALL SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING (NOT (t0.c1)) UNION ALL SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING ((t0.c1) ISNULL);
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT TOTAL(((((vt0.c0 COLLATE RTRIM)OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR((+ (vt0.c0))))) FROM vt0 ORDER BY (((vt0.c0 IN ())) NOTNULL)  NULLS LAST, ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CHANGES()) AND (0.045604969207441726))  NULLS LAST, (((NOT (vt0.c0)))IS NOT('2f'));
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c1 FROM rt0, vt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c1 FROM rt0, vt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c1 FROM rt0, vt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>((((v0.c0))>((v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>((((v0.c0))>((v0.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>((((v0.c0))>((v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, vt0.c0 HAVING COUNT((COUNT(*) IN ())) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, vt0.c0 HAVING (NOT (COUNT((COUNT(*) IN ())))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, vt0.c0 HAVING ((COUNT((COUNT(*) IN ()))) ISNULL);
SELECT ALL rt0.c3, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, vt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, vt0.c0 HAVING COUNT((COUNT(*) IN ())) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, vt0.c0 HAVING (NOT (COUNT((COUNT(*) IN ())))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, vt0.c0 HAVING ((COUNT((COUNT(*) IN ()))) ISNULL);
SELECT ALL rt0.c3, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, vt0.c0;
SELECT t0.c1, t0.c2 FROM t0, rt0, vt0;
SELECT t0.c1, t0.c2 FROM t0, rt0, vt0 WHERE (TOTAL_CHANGES()) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0, rt0, vt0 WHERE ((NOT (TOTAL_CHANGES()))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0, rt0, vt0 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT t0.c1, t0.c2 FROM t0, rt0, vt0;
SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON t0.c2;
SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON t0.c2 WHERE (((rt0.c3)==(rt0.c3)) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON t0.c2 WHERE ((NOT (((rt0.c3)=(rt0.c3)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON t0.c2 WHERE (((((rt0.c3)==(rt0.c3)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON t0.c2;
SELECT ALL rt0.c2, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c2, v0.c0;
SELECT rt0.c2, v0.c0 FROM v0, rt0, vt0 WHERE (x'') GROUP BY rt0.c2, v0.c0 UNION SELECT rt0.c2, v0.c0 FROM v0, rt0, vt0 WHERE ((NOT (x''))) GROUP BY rt0.c2, v0.c0 UNION SELECT rt0.c2, v0.c0 FROM v0, rt0, vt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c2, v0.c0;
SELECT ALL rt0.c2, v0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c2, v0.c0;
SELECT ALL t0.c2, rt0.c1, t0.c1, rt0.c2, rt0.c3, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY t0.c2, rt0.c1, t0.c1, rt0.c2, rt0.c3, t0.c0, rt0.c0;
SELECT t0.c2, rt0.c1, t0.c1, rt0.c2, rt0.c3, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY t0.c2, rt0.c1, t0.c1, rt0.c2, rt0.c3, t0.c0, rt0.c0 HAVING LOWER(DISTINCT MIN(TOTAL(COUNT(GROUP_CONCAT(t0.c1))))) UNION ALL SELECT t0.c2, rt0.c1, t0.c1, rt0.c2, rt0.c3, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY t0.c2, rt0.c1, t0.c1, rt0.c2, rt0.c3, t0.c0, rt0.c0 HAVING (NOT (LOWER(DISTINCT MIN(TOTAL(COUNT(GROUP_CONCAT(t0.c1))))))) UNION ALL SELECT t0.c2, rt0.c1, t0.c1, rt0.c2, rt0.c3, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY t0.c2, rt0.c1, t0.c1, rt0.c2, rt0.c3, t0.c0, rt0.c0 HAVING ((LOWER(DISTINCT MIN(TOTAL(COUNT(GROUP_CONCAT(t0.c1)))))) ISNULL);
SELECT ALL * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (CAST(((((((((t0.c2)OR(t0.c2)))AND(t0.c2)))AND(t0.c1)))AND(t0.c2)) AS INTEGER)) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (CAST(((((((((t0.c2)OR(t0.c2)))AND(t0.c2)))AND(t0.c1)))AND(t0.c2)) AS INTEGER)))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((CAST(((((((((t0.c2)OR(t0.c2)))AND(t0.c2)))AND(t0.c1)))AND(t0.c2)) AS INTEGER)) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT DISTINCT * FROM vt0, v0, rt0 WHERE ((+ (json_array_length(rt0.c0)))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE ((NOT ((+ (json_array_length(rt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE ((((+ (json_array_length(rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT ALL rt0.c0, rt0.c3, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c3, vt0.c0;
SELECT rt0.c0, rt0.c3, vt0.c0 FROM rt0, vt0 WHERE (CASE WHEN x'' THEN ((((rt0.c1)AND(rt0.c3)))OR(vt0.c0)) WHEN CAST(rt0.c0 AS NUMERIC) THEN CAST(rt0.c2 AS TEXT) WHEN ((rt0.c2)*(rt0.c0)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)) ELSE x'' END) GROUP BY rt0.c0, rt0.c3, vt0.c0 UNION SELECT rt0.c0, rt0.c3, vt0.c0 FROM rt0, vt0 WHERE ((NOT (CASE WHEN x'' THEN ((((rt0.c1)AND(rt0.c3)))OR(vt0.c0)) WHEN CAST(rt0.c0 AS NUMERIC) THEN CAST(rt0.c2 AS TEXT) WHEN ((rt0.c2)*(rt0.c0)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)) ELSE x'' END))) GROUP BY rt0.c0, rt0.c3, vt0.c0 UNION SELECT ALL rt0.c0, rt0.c3, vt0.c0 FROM rt0, vt0 WHERE (((CASE WHEN x'' THEN ((((rt0.c1)AND(rt0.c3)))OR(vt0.c0)) WHEN CAST(rt0.c0 AS NUMERIC) THEN CAST(rt0.c2 AS TEXT) WHEN ((rt0.c2)*(rt0.c0)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)) ELSE x'' END) ISNULL)) GROUP BY rt0.c0, rt0.c3, vt0.c0;
SELECT ALL rt0.c0, rt0.c3, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c3, vt0.c0;
SELECT ALL rt0.c0, v0.c0 FROM v0, t0, vt0 CROSS JOIN rt0 ON ((((((t0.c1) BETWEEN (rt0.c0) AND ('1289743646')))OR((((vt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c3))))))AND(((x'') NOT BETWEEN (rt0.c1) AND (rt0.c0)))) GROUP BY rt0.c0, v0.c0;
SELECT ALL rt0.c0, v0.c0 FROM v0, t0, vt0 CROSS JOIN rt0 ON ((((((t0.c1) BETWEEN (rt0.c0) AND ('1289743646')))OR((((vt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c3))))))AND(((x'') NOT BETWEEN (rt0.c1) AND (rt0.c0)))) GROUP BY rt0.c0, v0.c0 HAVING SUM(((((((((v0.c0)OR(rt0.c3)))OR(t0.c2)))OR(rt0.c0)))AND(rt0.c0))) UNION ALL SELECT ALL rt0.c0, v0.c0 FROM v0, t0, vt0 CROSS JOIN rt0 ON ((((((t0.c1) BETWEEN (rt0.c0) AND ('1289743646')))OR((((vt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c3))))))AND(((x'') NOT BETWEEN (rt0.c1) AND (rt0.c0)))) GROUP BY rt0.c0, v0.c0 HAVING (NOT (SUM(((((((((v0.c0)OR(rt0.c3)))OR(t0.c2)))OR(rt0.c0)))AND(rt0.c0))))) UNION ALL SELECT ALL rt0.c0, v0.c0 FROM v0, t0, vt0 CROSS JOIN rt0 ON ((((((t0.c1) BETWEEN (rt0.c0) AND ('1289743646')))OR((((vt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c3))))))AND(((x'') NOT BETWEEN (rt0.c1) AND (rt0.c0)))) GROUP BY rt0.c0, v0.c0 HAVING ((SUM(((((((((v0.c0)OR(rt0.c3)))OR(t0.c2)))OR(rt0.c0)))AND(rt0.c0)))) ISNULL);
SELECT ALL rt0.c0, v0.c0 FROM v0, t0, vt0 CROSS JOIN rt0 ON ((((((t0.c1) BETWEEN (rt0.c0) AND ('1289743646')))OR((((vt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c3))))))AND(((x'') NOT BETWEEN (rt0.c1) AND (rt0.c0)))) GROUP BY rt0.c0, v0.c0;
SELECT ALL rt0.c0, v0.c0 FROM v0, t0, vt0 CROSS JOIN rt0 ON ((((((t0.c1) BETWEEN (rt0.c0) AND ('1289743646')))OR((((vt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c3))))))AND(((x'') NOT BETWEEN (rt0.c1) AND (rt0.c0)))) GROUP BY rt0.c0, v0.c0 HAVING SUM(((((((((v0.c0)OR(rt0.c3)))OR(t0.c2)))OR(rt0.c0)))AND(rt0.c0))) UNION ALL SELECT ALL rt0.c0, v0.c0 FROM v0, t0, vt0 CROSS JOIN rt0 ON ((((((t0.c1) BETWEEN (rt0.c0) AND ('1289743646')))OR((((vt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c3))))))AND(((x'') NOT BETWEEN (rt0.c1) AND (rt0.c0)))) GROUP BY rt0.c0, v0.c0 HAVING (NOT (SUM(((((((((v0.c0)OR(rt0.c3)))OR(t0.c2)))OR(rt0.c0)))AND(rt0.c0))))) UNION ALL SELECT ALL rt0.c0, v0.c0 FROM v0, t0, vt0 CROSS JOIN rt0 ON ((((((t0.c1) BETWEEN (rt0.c0) AND ('1289743646')))OR((((vt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c3))))))AND(((x'') NOT BETWEEN (rt0.c1) AND (rt0.c0)))) GROUP BY rt0.c0, v0.c0 HAVING ((SUM(((((((((v0.c0)OR(rt0.c3)))OR(t0.c2)))OR(rt0.c0)))AND(rt0.c0)))) ISNULL);
SELECT ALL rt0.c0, v0.c0 FROM v0, t0, vt0 CROSS JOIN rt0 ON ((((((t0.c1) BETWEEN (rt0.c0) AND ('1289743646')))OR((((vt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c3))))))AND(((x'') NOT BETWEEN (rt0.c1) AND (rt0.c0)))) GROUP BY rt0.c0, v0.c0;
SELECT ALL MIN(CAST(((t0.c1) ISNULL) AS INTEGER)) FROM vt0, t0, rt0, v0 ORDER BY CASE CAST(t0.c1 AS TEXT)  WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((t0.c2)>>('Wr')) ELSE ((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) END DESC  NULLS LAST;
SELECT ALL * FROM v0, vt0, t0, rt0;
SELECT * FROM v0, vt0, t0, rt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN LIKELIHOOD(v0.c0, 0.7185705249757156) ELSE ((((t0.c0)OR(rt0.c0)))OR(vt0.c0)) END) UNION ALL SELECT * FROM v0, vt0, t0, rt0 WHERE ((NOT (CASE WHEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN LIKELIHOOD(v0.c0, 0.7185705249757156) ELSE ((((t0.c0)OR(rt0.c0)))OR(vt0.c0)) END))) UNION ALL SELECT ALL * FROM v0, vt0, t0, rt0 WHERE (((CASE WHEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN LIKELIHOOD(v0.c0, 0.7185705249757156) ELSE ((((t0.c0)OR(rt0.c0)))OR(vt0.c0)) END) ISNULL));
SELECT ALL * FROM v0, vt0, t0, rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((((+ (vt0.c0))) BETWEEN ((((rt0.c0))>=((vt0.c0)))) AND (((rt0.c3)>=(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((((+ (vt0.c0))) BETWEEN ((((rt0.c0))>=((vt0.c0)))) AND (((rt0.c3)>=(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((+ (vt0.c0))) BETWEEN ((((rt0.c0))>=((vt0.c0)))) AND (((rt0.c3)>=(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c3, v0.c0, rt0.c0, t0.c0, t0.c1, rt0.c2, rt0.c1, vt0.c0 FROM vt0 CROSS JOIN rt0 ON (((((rt0.c0)||(v0.c0))))!=((CAST(t0.c2 AS REAL)))) RIGHT OUTER JOIN t0 ON NULL LEFT OUTER JOIN v0 ON ((((rt0.c2)GLOB(rt0.c2)))>=(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)))) GROUP BY rt0.c3, v0.c0, rt0.c0, t0.c0, t0.c1, rt0.c2, rt0.c1, vt0.c0;
SELECT v0.c0, vt0.c0, rt0.c1, rt0.c3, t0.c2, t0.c0 FROM v0, t0, rt0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c1, rt0.c3, t0.c2, t0.c0;
SELECT v0.c0, vt0.c0, rt0.c1, rt0.c3, t0.c2, t0.c0 FROM v0, t0, rt0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c1, rt0.c3, t0.c2, t0.c0 HAVING (GROUP_CONCAT(vt0.c0) IN ()) UNION ALL SELECT ALL v0.c0, vt0.c0, rt0.c1, rt0.c3, t0.c2, t0.c0 FROM v0, t0, rt0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c1, rt0.c3, t0.c2, t0.c0 HAVING (NOT ((GROUP_CONCAT(vt0.c0) IN ()))) UNION ALL SELECT v0.c0, vt0.c0, rt0.c1, rt0.c3, t0.c2, t0.c0 FROM v0, t0, rt0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c1, rt0.c3, t0.c2, t0.c0 HAVING (((GROUP_CONCAT(vt0.c0) IN ())) ISNULL);
SELECT v0.c0, vt0.c0, rt0.c1, rt0.c3, t0.c2, t0.c0 FROM v0, t0, rt0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c1, rt0.c3, t0.c2, t0.c0;
SELECT v0.c0, vt0.c0, rt0.c1, rt0.c3, t0.c2, t0.c0 FROM v0, t0, rt0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c1, rt0.c3, t0.c2, t0.c0 HAVING (GROUP_CONCAT(vt0.c0) IN ()) UNION ALL SELECT ALL v0.c0, vt0.c0, rt0.c1, rt0.c3, t0.c2, t0.c0 FROM v0, t0, rt0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c1, rt0.c3, t0.c2, t0.c0 HAVING (NOT ((GROUP_CONCAT(vt0.c0) IN ()))) UNION ALL SELECT v0.c0, vt0.c0, rt0.c1, rt0.c3, t0.c2, t0.c0 FROM v0, t0, rt0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c1, rt0.c3, t0.c2, t0.c0 HAVING (((GROUP_CONCAT(vt0.c0) IN ())) ISNULL);
SELECT v0.c0, vt0.c0, rt0.c1, rt0.c3, t0.c2, t0.c0 FROM v0, t0, rt0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c1, rt0.c3, t0.c2, t0.c0;
SELECT ALL MIN(((LIKELY(rt0.c3))|(((((v0.c0)OR(v0.c0)))AND(0.7608707430495575))))) FROM v0, rt0, vt0;
SELECT v0.c0 FROM vt0, v0, t0;
SELECT ALL v0.c0 FROM vt0, v0, t0 WHERE (CASE WHEN (((t0.c2, t0.c2, t0.c0)) NOT BETWEEN ((t0.c2, v0.c0, t0.c2)) AND ((v0.c0, t0.c0, v0.c0))) THEN ((((x'')OR(t0.c1)))OR(vt0.c0)) END) UNION ALL SELECT ALL v0.c0 FROM vt0, v0, t0 WHERE ((NOT (CASE WHEN (((t0.c2, t0.c2, t0.c0)) NOT BETWEEN ((t0.c2, v0.c0, t0.c2)) AND ((v0.c0, t0.c0, v0.c0))) THEN ((((x'')OR(t0.c1)))OR(vt0.c0)) END))) UNION ALL SELECT v0.c0 FROM vt0, v0, t0 WHERE (((CASE WHEN (((t0.c2, t0.c2, t0.c0)) NOT BETWEEN ((t0.c2, v0.c0, t0.c2)) AND ((v0.c0, t0.c0, v0.c0))) THEN ((((x'')OR(t0.c1)))OR(vt0.c0)) END) ISNULL));
SELECT v0.c0 FROM vt0, v0, t0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0)/(v0.c0)) IN ())) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)/(v0.c0)) IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0)/(v0.c0)) IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL t0.c1, t0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM v0, t0 WHERE ((('' IN (t0.c0)) IN (CAST(t0.c0 AS REAL)))) GROUP BY t0.c1, t0.c0 UNION SELECT t0.c1, t0.c0 FROM v0, t0 WHERE ((NOT ((('' IN (t0.c0)) IN (CAST(t0.c0 AS REAL)))))) GROUP BY t0.c1, t0.c0 UNION SELECT t0.c1, t0.c0 FROM v0, t0 WHERE ((((('' IN (t0.c0)) IN (CAST(t0.c0 AS REAL)))) ISNULL)) GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c0;
SELECT ALL rt0.c3, vt0.c0, rt0.c0, rt0.c2, v0.c0 FROM vt0, v0, rt0, t0 GROUP BY rt0.c3, vt0.c0, rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c3, vt0.c0, rt0.c0, rt0.c2, v0.c0 FROM vt0, v0, rt0, t0 GROUP BY rt0.c3, vt0.c0, rt0.c0, rt0.c2, v0.c0 HAVING SUM(rt0.c0 COLLATE NOCASE) UNION ALL SELECT ALL rt0.c3, vt0.c0, rt0.c0, rt0.c2, v0.c0 FROM vt0, v0, rt0, t0 GROUP BY rt0.c3, vt0.c0, rt0.c0, rt0.c2, v0.c0 HAVING (NOT (SUM(rt0.c0 COLLATE NOCASE))) UNION ALL SELECT rt0.c3, vt0.c0, rt0.c0, rt0.c2, v0.c0 FROM vt0, v0, rt0, t0 GROUP BY rt0.c3, vt0.c0, rt0.c0, rt0.c2, v0.c0 HAVING ((SUM(rt0.c0 COLLATE NOCASE)) ISNULL);
SELECT ALL rt0.c3, vt0.c0, rt0.c0, rt0.c2, v0.c0 FROM vt0, v0, rt0, t0 GROUP BY rt0.c3, vt0.c0, rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c3, vt0.c0, rt0.c0, rt0.c2, v0.c0 FROM vt0, v0, rt0, t0 GROUP BY rt0.c3, vt0.c0, rt0.c0, rt0.c2, v0.c0 HAVING SUM(rt0.c0 COLLATE NOCASE) UNION ALL SELECT ALL rt0.c3, vt0.c0, rt0.c0, rt0.c2, v0.c0 FROM vt0, v0, rt0, t0 GROUP BY rt0.c3, vt0.c0, rt0.c0, rt0.c2, v0.c0 HAVING (NOT (SUM(rt0.c0 COLLATE NOCASE))) UNION ALL SELECT rt0.c3, vt0.c0, rt0.c0, rt0.c2, v0.c0 FROM vt0, v0, rt0, t0 GROUP BY rt0.c3, vt0.c0, rt0.c0, rt0.c2, v0.c0 HAVING ((SUM(rt0.c0 COLLATE NOCASE)) ISNULL);
SELECT ALL rt0.c3, vt0.c0, rt0.c0, rt0.c2, v0.c0 FROM vt0, v0, rt0, t0 GROUP BY rt0.c3, vt0.c0, rt0.c0, rt0.c2, v0.c0;
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE ((0x53c7c782 COLLATE RTRIM IN (v0.c0 COLLATE RTRIM, ((v0.c0)OR(v0.c0))))) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT ((0X53c7c782 COLLATE RTRIM IN (v0.c0 COLLATE RTRIM, ((v0.c0)OR(v0.c0))))))) UNION ALL SELECT * FROM vt0, v0 WHERE ((((0X53c7c782 COLLATE RTRIM IN (v0.c0 COLLATE RTRIM, ((v0.c0)OR(v0.c0))))) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((- (t0.c1))) IS TRUE)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((- (t0.c1))) IS TRUE)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((- (t0.c1))) IS TRUE)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0)*(rt0.c0))) NOT BETWEEN (((0x34872119)&(rt0.c2))) AND ((- (rt0.c1))))) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0)*(rt0.c0))) NOT BETWEEN (((0X34872119)&(rt0.c2))) AND ((- (rt0.c1))))))) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c0)*(rt0.c0))) NOT BETWEEN (((0X34872119)&(rt0.c2))) AND ((- (rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL t0.c2, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c2, t0.c0 HAVING MIN(-1246867249) UNION ALL SELECT ALL t0.c2, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c2, t0.c0 HAVING (NOT (MIN(-1246867249))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c2, t0.c0 HAVING ((MIN(-1246867249)) ISNULL);
SELECT ALL t0.c2, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c2, t0.c0 HAVING MIN(-1246867249) UNION ALL SELECT ALL t0.c2, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c2, t0.c0 HAVING (NOT (MIN(-1246867249))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c2, t0.c0 HAVING ((MIN(-1246867249)) ISNULL);
SELECT ALL t0.c2, t0.c0 FROM vt0 NATURAL JOIN t0 GROUP BY t0.c2, t0.c0;
SELECT * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE (TYPEOF(((0.7087611868211022)=(t0.c1)))) UNION ALL SELECT * FROM v0, t0 WHERE ((NOT (TYPEOF(((0.7087611868211022)==(t0.c1)))))) UNION ALL SELECT ALL * FROM v0, t0 WHERE (((TYPEOF(((0.7087611868211022)=(t0.c1)))) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT DISTINCT * FROM vt0, v0, rt0 WHERE (((((rt0.c2)*(rt0.c2)))<>(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE ((NOT (((((rt0.c2)*(rt0.c2)))!=(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))))))) UNION SELECT DISTINCT * FROM vt0, v0, rt0 WHERE (((((((rt0.c2)*(rt0.c2)))!=(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, vt0 WHERE (t0.c2) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, vt0 WHERE ((NOT (t0.c2))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, vt0 WHERE (((t0.c2) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, vt0 GROUP BY t0.c0;
SELECT t0.c2, v0.c0, rt0.c3 FROM v0, rt0, t0 GROUP BY t0.c2, v0.c0, rt0.c3;
SELECT ALL t0.c2, v0.c0, rt0.c3 FROM v0, rt0, t0 GROUP BY t0.c2, v0.c0, rt0.c3 HAVING 0.3503469205979899 UNION ALL SELECT ALL t0.c2, v0.c0, rt0.c3 FROM v0, rt0, t0 NOT INDEXED GROUP BY t0.c2, v0.c0, rt0.c3 HAVING (NOT (0.3503469205979899)) UNION ALL SELECT t0.c2, v0.c0, rt0.c3 FROM v0, rt0, t0 GROUP BY t0.c2, v0.c0, rt0.c3 HAVING ((0.3503469205979899) ISNULL);
SELECT t0.c2, v0.c0, rt0.c3 FROM v0, rt0, t0 GROUP BY t0.c2, v0.c0, rt0.c3;
SELECT ALL t0.c2, v0.c0, rt0.c3 FROM v0, rt0, t0 GROUP BY t0.c2, v0.c0, rt0.c3 HAVING 0.3503469205979899 UNION ALL SELECT ALL t0.c2, v0.c0, rt0.c3 FROM v0, rt0, t0 NOT INDEXED GROUP BY t0.c2, v0.c0, rt0.c3 HAVING (NOT (0.3503469205979899)) UNION ALL SELECT t0.c2, v0.c0, rt0.c3 FROM v0, rt0, t0 GROUP BY t0.c2, v0.c0, rt0.c3 HAVING ((0.3503469205979899) ISNULL);
SELECT t0.c2, v0.c0, rt0.c3 FROM v0, rt0, t0 GROUP BY t0.c2, v0.c0, rt0.c3;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0, v0.c0, t0.c1 FROM v0 INNER JOIN vt0 ON v0.c0 INNER JOIN t0 ON (((((((vt0.c0)OR(v0.c0)))AND(t0.c2))))>=((((v0.c0) NOTNULL))));
SELECT DISTINCT vt0.c0, v0.c0, t0.c1 FROM v0 INNER JOIN vt0 ON v0.c0 INNER JOIN t0 ON (((((((vt0.c0)OR(v0.c0)))AND(t0.c2))))>=((((v0.c0) NOTNULL)))) WHERE (((vt0.c0 COLLATE BINARY)GLOB(CAST(v0.c0 AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0, v0.c0, t0.c1 FROM v0 INNER JOIN vt0 ON v0.c0 INNER JOIN t0 ON (((((((vt0.c0)OR(v0.c0)))AND(t0.c2))))>=((((v0.c0) NOTNULL)))) WHERE ((NOT (((vt0.c0 COLLATE BINARY)GLOB(CAST(v0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT vt0.c0, v0.c0, t0.c1 FROM v0 INNER JOIN vt0 ON v0.c0 INNER JOIN t0 ON (((((((vt0.c0)OR(v0.c0)))AND(t0.c2))))>=((((v0.c0) NOTNULL)))) WHERE (((((vt0.c0 COLLATE BINARY)GLOB(CAST(v0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0, t0.c1 FROM v0 INNER JOIN vt0 ON v0.c0 INNER JOIN t0 ON (((((((vt0.c0)OR(v0.c0)))AND(t0.c2))))>=((((v0.c0) NOTNULL))));
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0, vt0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0, vt0 WHERE ('-1892997748') GROUP BY t0.c0, t0.c2, t0.c1 UNION SELECT t0.c0, t0.c2, t0.c1 FROM t0, vt0 WHERE ((NOT ('-1892997748'))) GROUP BY t0.c0, t0.c2, t0.c1 UNION SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0, vt0 NOT INDEXED WHERE ((('-1892997748') ISNULL)) GROUP BY t0.c0, t0.c2, t0.c1;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0, vt0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((rt0.c2)IS(((rt0.c2)!=(MIN(MAX(rt0.c1)))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((rt0.c2)IS(((rt0.c2)!=(MIN(MAX(rt0.c1)))))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((rt0.c2)IS(((rt0.c2)<>(MIN(MAX(rt0.c1))))))) ISNULL);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON ((((t0.c0)+(t0.c0))) IS TRUE) CROSS JOIN v0 ON x'' FULL OUTER JOIN vt0 ON CAST(((t0.c1)=(rt0.c0)) AS TEXT);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON ((((t0.c0)+(t0.c0))) IS TRUE) CROSS JOIN v0 ON x'' FULL OUTER JOIN vt0 ON CAST(((t0.c1)==(rt0.c0)) AS TEXT) WHERE (((((rt0.c1, t0.c1, vt0.c0))>((x'', t0.c0, v0.c0))) IN ())) UNION ALL SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON ((((t0.c0)+(t0.c0))) IS TRUE) CROSS JOIN v0 ON x'' FULL OUTER JOIN vt0 ON CAST(((t0.c1)==(rt0.c0)) AS TEXT) WHERE ((NOT (((((rt0.c1, t0.c1, vt0.c0))>((x'', t0.c0, v0.c0))) IN ())))) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON ((((t0.c0)+(t0.c0))) IS TRUE) CROSS JOIN v0 ON x'' FULL OUTER JOIN vt0 ON CAST(((t0.c1)=(rt0.c0)) AS TEXT) WHERE (((((((rt0.c1, t0.c1, vt0.c0))>((x'', t0.c0, v0.c0))) IN ())) ISNULL));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON ((((t0.c0)+(t0.c0))) IS TRUE) CROSS JOIN v0 ON x'' FULL OUTER JOIN vt0 ON CAST(((t0.c1)=(rt0.c0)) AS TEXT);
SELECT DISTINCT vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON (~ ((t0.c2 IN (x'')))) FULL OUTER JOIN rt0 ON NULL;
SELECT DISTINCT vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON (~ ((t0.c2 IN (x'')))) FULL OUTER JOIN rt0 ON NULL WHERE (((((t0.c1 COLLATE NOCASE)OR(PRINTF(t0.c0))))AND(((rt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c1))))) UNION SELECT DISTINCT vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON (~ ((t0.c2 IN (x'')))) FULL OUTER JOIN rt0 ON NULL WHERE ((NOT (((((t0.c1 COLLATE NOCASE)OR(PRINTF(t0.c0))))AND(((rt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c1))))))) UNION SELECT DISTINCT vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON (~ ((t0.c2 IN (x'')))) FULL OUTER JOIN rt0 ON NULL WHERE (((((((t0.c1 COLLATE NOCASE)OR(PRINTF(t0.c0))))AND(((rt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM t0 FULL OUTER JOIN vt0 ON (~ ((t0.c2 IN (x'')))) FULL OUTER JOIN rt0 ON NULL;
SELECT v0.c0, t0.c1 FROM v0, rt0 LEFT OUTER JOIN t0 ON x'377c' FULL OUTER JOIN vt0 ON (+ ((v0.c0 IN ()))) GROUP BY v0.c0, t0.c1;
SELECT v0.c0, t0.c1 FROM v0, rt0 LEFT OUTER JOIN t0 ON x'377c' FULL OUTER JOIN vt0 ON (+ ((v0.c0 IN ()))) WHERE ((((CASE WHEN t0.c1 THEN t0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 END))<((rt0.c0)))) GROUP BY v0.c0, t0.c1 UNION SELECT ALL v0.c0, t0.c1 FROM v0, rt0 LEFT OUTER JOIN t0 ON x'377c' FULL OUTER JOIN vt0 ON (+ ((v0.c0 IN ()))) WHERE ((NOT ((((CASE WHEN t0.c1 THEN t0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 END))<((rt0.c0)))))) GROUP BY v0.c0, t0.c1 UNION SELECT ALL v0.c0, t0.c1 FROM v0, rt0 LEFT OUTER JOIN t0 ON x'377c' FULL OUTER JOIN vt0 ON (+ ((v0.c0 IN ()))) WHERE ((((((CASE WHEN t0.c1 THEN t0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 END))<((rt0.c0)))) ISNULL)) GROUP BY v0.c0, t0.c1;
SELECT v0.c0, t0.c1 FROM v0, rt0 LEFT OUTER JOIN t0 ON x'377c' FULL OUTER JOIN vt0 ON (+ ((v0.c0 IN ()))) GROUP BY v0.c0, t0.c1;
SELECT t0.c2, t0.c1, rt0.c0, rt0.c3 FROM t0, rt0, v0, vt0 GROUP BY t0.c2, t0.c1, rt0.c0, rt0.c3;
SELECT ALL t0.c2, t0.c1, rt0.c0, rt0.c3 FROM t0, rt0 NOT INDEXED, v0, vt0 GROUP BY t0.c2, t0.c1, rt0.c0, rt0.c3 HAVING SUM(COUNT(*)) UNION ALL SELECT t0.c2, t0.c1, rt0.c0, rt0.c3 FROM t0, rt0, v0, vt0 GROUP BY t0.c2, t0.c1, rt0.c0, rt0.c3 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL t0.c2, t0.c1, rt0.c0, rt0.c3 FROM t0, rt0, v0, vt0 GROUP BY t0.c2, t0.c1, rt0.c0, rt0.c3 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(vt0.c0)))>=(CAST(vt0.c0 AS INTEGER)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(vt0.c0)))>=(CAST(vt0.c0 AS INTEGER))) WHERE ((~ ((((v0.c0))=((vt0.c0)))))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(vt0.c0)))>=(CAST(vt0.c0 AS INTEGER))) WHERE ((NOT ((~ ((((v0.c0))=((vt0.c0)))))))) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(vt0.c0)))>=(CAST(vt0.c0 AS INTEGER))) WHERE ((((~ ((((v0.c0))==((vt0.c0)))))) ISNULL));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(vt0.c0)))>=(CAST(vt0.c0 AS INTEGER)));
SELECT DISTINCT rt0.c0 FROM v0, rt0 NATURAL JOIN vt0;
SELECT DISTINCT rt0.c0 FROM v0, rt0 NATURAL JOIN vt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)) AS TEXT)) UNION SELECT DISTINCT rt0.c0 FROM v0, rt0 NATURAL JOIN vt0 WHERE ((NOT (CAST(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)) AS TEXT)))) UNION SELECT DISTINCT rt0.c0 FROM v0, rt0 NATURAL JOIN vt0 WHERE (((CAST(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c0 FROM v0, rt0 NATURAL JOIN vt0;
SELECT ALL rt0.c3, t0.c2, t0.c0, t0.c1, v0.c0, rt0.c1 FROM vt0, t0, rt0, v0 GROUP BY rt0.c3, t0.c2, t0.c0, t0.c1, v0.c0, rt0.c1;
SELECT ALL rt0.c3, t0.c2, t0.c0, t0.c1, v0.c0, rt0.c1 FROM vt0, t0, rt0, v0 WHERE (CAST(NULL COLLATE RTRIM AS NUMERIC)) GROUP BY rt0.c3, t0.c2, t0.c0, t0.c1, v0.c0, rt0.c1 UNION SELECT rt0.c3, t0.c2, t0.c0, t0.c1, v0.c0, rt0.c1 FROM vt0, t0, rt0, v0 WHERE ((NOT (CAST(NULL COLLATE RTRIM AS NUMERIC)))) GROUP BY rt0.c3, t0.c2, t0.c0, t0.c1, v0.c0, rt0.c1 UNION SELECT ALL rt0.c3, t0.c2, t0.c0, t0.c1, v0.c0, rt0.c1 FROM vt0, t0, rt0, v0 WHERE (((CAST(NULL COLLATE RTRIM AS NUMERIC)) ISNULL)) GROUP BY rt0.c3, t0.c2, t0.c0, t0.c1, v0.c0, rt0.c1;
SELECT ALL rt0.c3, t0.c2, t0.c0, t0.c1, v0.c0, rt0.c1 FROM vt0, t0, rt0, v0 GROUP BY rt0.c3, t0.c2, t0.c0, t0.c1, v0.c0, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(MIN(x''))) NOTNULL) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((SUM(MIN(x''))) NOTNULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((SUM(MIN(x''))) NOTNULL)) ISNULL);
SELECT MIN(((((vt0.c0)>>(rt0.c0))) ISNULL)) FROM rt0, v0, vt0;
SELECT ALL t0.c1 FROM rt0, t0, v0;
SELECT ALL t0.c1 FROM rt0, t0, v0 WHERE (((CAST(t0.c0 AS TEXT))&(((((t0.c0)AND(v0.c0)))OR(rt0.c1))))) UNION ALL SELECT ALL t0.c1 FROM rt0, t0, v0 WHERE ((NOT (((CAST(t0.c0 AS TEXT))&(((((t0.c0)AND(v0.c0)))OR(rt0.c1))))))) UNION ALL SELECT ALL t0.c1 FROM rt0, t0, v0 WHERE (((((CAST(t0.c0 AS TEXT))&(((((t0.c0)AND(v0.c0)))OR(rt0.c1))))) ISNULL));
SELECT ALL t0.c1 FROM rt0, t0, v0;
SELECT DISTINCT t0.c1, v0.c0, vt0.c0, rt0.c1, t0.c0 FROM rt0, v0, vt0, t0;
SELECT DISTINCT t0.c1, v0.c0, vt0.c0, rt0.c1, t0.c0 FROM rt0, v0, vt0, t0 WHERE ((rt0.c3 COLLATE NOCASE IN (((((((((t0.c0)AND(v0.c0)))AND(rt0.c3)))AND(rt0.c2)))OR(t0.c2)), rt0.c2 COLLATE NOCASE))) UNION SELECT DISTINCT t0.c1, v0.c0, vt0.c0, rt0.c1, t0.c0 FROM rt0, v0, vt0, t0 WHERE ((NOT ((rt0.c3 COLLATE NOCASE IN (((((((((t0.c0)AND(v0.c0)))AND(rt0.c3)))AND(rt0.c2)))OR(t0.c2)), rt0.c2 COLLATE NOCASE))))) UNION SELECT DISTINCT t0.c1, v0.c0, vt0.c0, rt0.c1, t0.c0 FROM rt0, v0, vt0, t0 WHERE ((((rt0.c3 COLLATE NOCASE IN (((((((((t0.c0)AND(v0.c0)))AND(rt0.c3)))AND(rt0.c2)))OR(t0.c2)), rt0.c2 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT t0.c1, v0.c0, vt0.c0, rt0.c1, t0.c0 FROM rt0, v0, vt0, t0;
SELECT ALL vt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c3, rt0.c2;
SELECT ALL vt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0, v0 WHERE (((1891038461)-((('-268479514')GLOB(0.9996899292596891))))) GROUP BY vt0.c0, rt0.c3, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0, v0 WHERE ((NOT (((1891038461)-((('-268479514')GLOB(0.9996899292596891))))))) GROUP BY vt0.c0, rt0.c3, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0, v0 WHERE (((((1891038461)-((('-268479514')GLOB(0.9996899292596891))))) ISNULL)) GROUP BY vt0.c0, rt0.c3, rt0.c2;
SELECT ALL vt0.c0, rt0.c3, rt0.c2 FROM rt0, vt0, v0 GROUP BY vt0.c0, rt0.c3, rt0.c2;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING v0.c0 UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING v0.c0 UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0, vt0, t0;
SELECT DISTINCT * FROM rt0, vt0, t0 WHERE (((((CAST(t0.c1 AS REAL))OR(((vt0.c0)<=(rt0.c0)))))OR(((t0.c0)AND(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, vt0, t0 WHERE ((NOT (((((CAST(t0.c1 AS REAL))OR(((vt0.c0)<=(rt0.c0)))))OR(((t0.c0)AND(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0, vt0 NOT INDEXED, t0 WHERE (((((((CAST(t0.c1 AS REAL))OR(((vt0.c0)<=(rt0.c0)))))OR(((t0.c0)AND(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, t0;
SELECT t0.c1, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, v0.c0;
SELECT ALL t0.c1, t0.c2, v0.c0 FROM v0, t0 WHERE (t0.c0) GROUP BY t0.c1, t0.c2, v0.c0 UNION SELECT ALL t0.c1, t0.c2, v0.c0 FROM v0, t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c1, t0.c2, v0.c0 UNION SELECT t0.c1, t0.c2, v0.c0 FROM v0, t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c1, t0.c2, v0.c0;
SELECT t0.c1, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, v0.c0;
SELECT ALL v0.c0, rt0.c3, vt0.c0, rt0.c1 FROM vt0, t0, rt0, v0 GROUP BY v0.c0, rt0.c3, vt0.c0, rt0.c1;
SELECT ALL v0.c0, rt0.c3, vt0.c0, rt0.c1 FROM vt0, t0, rt0, v0 GROUP BY v0.c0, rt0.c3, vt0.c0, rt0.c1 HAVING SUM(v0.c0 COLLATE BINARY) UNION ALL SELECT ALL v0.c0, rt0.c3, vt0.c0, rt0.c1 FROM vt0, t0, rt0, v0 GROUP BY v0.c0, rt0.c3, vt0.c0, rt0.c1 HAVING (NOT (SUM(v0.c0 COLLATE BINARY))) UNION ALL SELECT ALL v0.c0, rt0.c3, vt0.c0, rt0.c1 FROM vt0, t0, rt0, v0 GROUP BY v0.c0, rt0.c3, vt0.c0, rt0.c1 HAVING ((SUM(v0.c0 COLLATE BINARY)) ISNULL);
SELECT ALL v0.c0, rt0.c3, vt0.c0, rt0.c1 FROM vt0, t0, rt0, v0 GROUP BY v0.c0, rt0.c3, vt0.c0, rt0.c1;
SELECT ALL v0.c0, rt0.c3, vt0.c0, rt0.c1 FROM vt0, t0, rt0, v0 GROUP BY v0.c0, rt0.c3, vt0.c0, rt0.c1 HAVING SUM(v0.c0 COLLATE BINARY) UNION ALL SELECT ALL v0.c0, rt0.c3, vt0.c0, rt0.c1 FROM vt0, t0, rt0, v0 GROUP BY v0.c0, rt0.c3, vt0.c0, rt0.c1 HAVING (NOT (SUM(v0.c0 COLLATE BINARY))) UNION ALL SELECT ALL v0.c0, rt0.c3, vt0.c0, rt0.c1 FROM vt0, t0, rt0, v0 GROUP BY v0.c0, rt0.c3, vt0.c0, rt0.c1 HAVING ((SUM(v0.c0 COLLATE BINARY)) ISNULL);
SELECT ALL v0.c0, rt0.c3, vt0.c0, rt0.c1 FROM vt0, t0, rt0, v0 GROUP BY v0.c0, rt0.c3, vt0.c0, rt0.c1;
SELECT ALL MIN((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ())) FROM v0;
SELECT ALL * FROM rt0, vt0, v0;
SELECT * FROM rt0, vt0, v0 WHERE (json_remove(vt0.c0 COLLATE NOCASE, ((((((((0.38301952830497843)OR(rt0.c2)))AND(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)))) UNION ALL SELECT ALL * FROM rt0, vt0, v0 WHERE ((NOT (json_remove(vt0.c0 COLLATE NOCASE, ((((((((0.38301952830497843)OR(rt0.c2)))AND(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)))))) UNION ALL SELECT ALL * FROM rt0, vt0, v0 WHERE (((json_remove(vt0.c0 COLLATE NOCASE, ((((((((0.38301952830497843)OR(rt0.c2)))AND(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0, v0, t0;
SELECT DISTINCT * FROM rt0, v0, t0 WHERE (load_extension((~ (t0.c0)))) UNION SELECT DISTINCT * FROM rt0, v0, t0 WHERE ((NOT (load_extension((~ (t0.c0)))))) UNION SELECT DISTINCT * FROM rt0, v0, t0 WHERE (((load_extension((~ (t0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0, v0, t0;
SELECT t0.c0, rt0.c3, t0.c1, t0.c2 FROM rt0, vt0, t0, v0 GROUP BY t0.c0, rt0.c3, t0.c1, t0.c2;
SELECT t0.c0, rt0.c3, t0.c1, t0.c2 FROM rt0, vt0, t0, v0 WHERE (((CAST(NULL AS REAL)) BETWEEN ((- (t0.c0))) AND (((NULL)LIKE(vt0.c0))))) GROUP BY t0.c0, rt0.c3, t0.c1, t0.c2 UNION SELECT t0.c0, rt0.c3, t0.c1, t0.c2 FROM rt0, vt0, t0, v0 WHERE ((NOT (((CAST(NULL AS REAL)) BETWEEN ((- (t0.c0))) AND (((NULL)LIKE(vt0.c0))))))) GROUP BY t0.c0, rt0.c3, t0.c1, t0.c2 UNION SELECT t0.c0, rt0.c3, t0.c1, t0.c2 FROM rt0, vt0, t0, v0 WHERE (((((CAST(NULL AS REAL)) BETWEEN ((- (t0.c0))) AND (((NULL)LIKE(vt0.c0))))) ISNULL)) GROUP BY t0.c0, rt0.c3, t0.c1, t0.c2;
SELECT t0.c0, rt0.c3, t0.c1, t0.c2 FROM rt0, vt0, t0, v0 GROUP BY t0.c0, rt0.c3, t0.c1, t0.c2;
SELECT ALL v0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0, vt0, rt0 GROUP BY v0.c0;
SELECT * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (NULLIF(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 END)) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (NULLIF(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 END)))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((NULLIF(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 END)) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0;
SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0 WHERE (((((((t0.c0)OR(t0.c2)))OR(t0.c2))) IS TRUE)) UNION SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((NOT (((((((t0.c0)OR(t0.c2)))OR(t0.c2))) IS TRUE)))) UNION SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0 WHERE (((((((((t0.c0)OR(t0.c2)))OR(t0.c2))) IS TRUE)) ISNULL));
SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0;
SELECT v0.c0, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c2;
SELECT v0.c0, rt0.c2 FROM v0, rt0 WHERE ((((((((rt0.c0))!=((rt0.c2))))AND(CAST(rt0.c3 AS BLOB))))OR(LIKELIHOOD(rt0.c0, 0.5592756985715529)))) GROUP BY v0.c0, rt0.c2 UNION SELECT v0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT ((((((((rt0.c0))<>((rt0.c2))))AND(CAST(rt0.c3 AS BLOB))))OR(LIKELIHOOD(rt0.c0, 0.5592756985715529)))))) GROUP BY v0.c0, rt0.c2 UNION SELECT ALL v0.c0, rt0.c2 FROM v0, rt0 WHERE ((((((((((rt0.c0))!=((rt0.c2))))AND(CAST(rt0.c3 AS BLOB))))OR(LIKELIHOOD(rt0.c0, 0.5592756985715529)))) ISNULL)) GROUP BY v0.c0, rt0.c2;
SELECT v0.c0, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2 HAVING MIN(GROUP_CONCAT(GROUP_CONCAT(SUM(rt0.c2)))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2 HAVING (NOT (MIN(GROUP_CONCAT(GROUP_CONCAT(SUM(rt0.c2)))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2 HAVING ((MIN(GROUP_CONCAT(GROUP_CONCAT(SUM(rt0.c2))))) ISNULL);
SELECT MAX((- (((((vt0.c0)OR(vt0.c0)))OR(t0.c0))))) FROM vt0, t0;
SELECT * FROM rt0, vt0 FULL OUTER JOIN t0 ON (((t0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ((NOT (t0.c1)), NULL));
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t0 ON (((t0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ((NOT (t0.c1)), NULL)) WHERE (CAST(t0.c0 COLLATE NOCASE AS TEXT)) UNION ALL SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t0 ON (((t0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ((NOT (t0.c1)), NULL)) WHERE ((NOT (CAST(t0.c0 COLLATE NOCASE AS TEXT)))) UNION ALL SELECT * FROM rt0, vt0 FULL OUTER JOIN t0 ON (((t0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ((NOT (t0.c1)), NULL)) WHERE (((CAST(t0.c0 COLLATE NOCASE AS TEXT)) ISNULL));
SELECT * FROM rt0, vt0 FULL OUTER JOIN t0 ON (((t0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ((NOT (t0.c1)), NULL));
SELECT DISTINCT * FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((((rt0.c3)>(t0.c0))) ISNULL) RIGHT OUTER JOIN rt0 ON (((rt0.c3)<=(x'1f3a89cf')) IN ((((rt0.c2, rt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, t0.c1)) AND ((rt0.c3, vt0.c0, t0.c2)))));
SELECT v0.c0, t0.c0, rt0.c1, vt0.c0, rt0.c0, t0.c1 FROM rt0, v0, vt0, t0 GROUP BY v0.c0, t0.c0, rt0.c1, vt0.c0, rt0.c0, t0.c1;
SELECT v0.c0, t0.c0, rt0.c1, vt0.c0, rt0.c0, t0.c1 FROM rt0, v0, vt0, t0 WHERE (LIKE(((((((((((((t0.c2)AND(t0.c1)))AND(vt0.c0)))OR(t0.c1)))OR(t0.c1)))OR(t0.c1)))AND(vt0.c0)), (NOT (rt0.c2)))) GROUP BY v0.c0, t0.c0, rt0.c1, vt0.c0, rt0.c0, t0.c1 UNION SELECT ALL v0.c0, t0.c0, rt0.c1, vt0.c0, rt0.c0, t0.c1 FROM rt0, v0, vt0, t0 WHERE ((NOT (LIKE(((((((((((((t0.c2)AND(t0.c1)))AND(vt0.c0)))OR(t0.c1)))OR(t0.c1)))OR(t0.c1)))AND(vt0.c0)), (NOT (rt0.c2)))))) GROUP BY v0.c0, t0.c0, rt0.c1, vt0.c0, rt0.c0, t0.c1 UNION SELECT v0.c0, t0.c0, rt0.c1, vt0.c0, rt0.c0, t0.c1 FROM rt0, v0, vt0, t0 WHERE (((LIKE(((((((((((((t0.c2)AND(t0.c1)))AND(vt0.c0)))OR(t0.c1)))OR(t0.c1)))OR(t0.c1)))AND(vt0.c0)), (NOT (rt0.c2)))) ISNULL)) GROUP BY v0.c0, t0.c0, rt0.c1, vt0.c0, rt0.c0, t0.c1;
SELECT v0.c0, t0.c0, rt0.c1, vt0.c0, rt0.c0, t0.c1 FROM rt0, v0, vt0, t0 GROUP BY v0.c0, t0.c0, rt0.c1, vt0.c0, rt0.c0, t0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(AVG('-870796296') AS TEXT) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(AVG('-870796296') AS TEXT))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(AVG('-870796296') AS TEXT)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(AVG('-870796296') AS TEXT) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(AVG('-870796296') AS TEXT))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(AVG('-870796296') AS TEXT)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM t0, v0, vt0;
SELECT * FROM t0, v0, vt0 WHERE ((((((t0.c1))>((t0.c0)))) NOTNULL)) UNION ALL SELECT ALL * FROM t0, v0, vt0 WHERE ((NOT ((((((t0.c1))>((t0.c0)))) NOTNULL)))) UNION ALL SELECT ALL * FROM t0, v0, vt0 WHERE ((((((((t0.c1))>((t0.c0)))) NOTNULL)) ISNULL));
SELECT ALL * FROM t0, v0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (LOWER((+ (vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (LOWER((+ (vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((LOWER((+ (vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL rt0.c0, v0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0, v0, vt0 GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c0, v0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0, v0, vt0 WHERE (((((((((CASE rt0.c1  WHEN x'3366' THEN rt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)AND(((v0.c0) BETWEEN (vt0.c0) AND (NULL)))))AND(QUOTE(vt0.c0))))OR(0.4563302784965777)))OR(v0.c0))) GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c1, rt0.c2 UNION SELECT rt0.c0, v0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0, v0, vt0 WHERE ((NOT (((((((((CASE rt0.c1  WHEN x'3366' THEN rt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)AND(((v0.c0) BETWEEN (vt0.c0) AND (NULL)))))AND(QUOTE(vt0.c0))))OR(0.4563302784965777)))OR(v0.c0))))) GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c1, rt0.c2 UNION SELECT rt0.c0, v0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0, v0, vt0 WHERE (((((((((((CASE rt0.c1  WHEN x'3366' THEN rt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)AND(((v0.c0) BETWEEN (vt0.c0) AND (NULL)))))AND(QUOTE(vt0.c0))))OR(0.4563302784965777)))OR(v0.c0))) ISNULL)) GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, v0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0, v0, vt0 GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c1, vt0.c0, v0.c0 FROM rt0 CROSS JOIN v0 ON CAST(t0.c0 COLLATE RTRIM AS BLOB) LEFT OUTER JOIN t0 ON (((((('700435880')*(vt0.c0)))OR((((vt0.c0))<=((t0.c1))))))OR(((NULL)/(rt0.c0)))) FULL OUTER JOIN vt0 ON CAST(rt0.c1 COLLATE NOCASE AS BLOB) GROUP BY rt0.c2, rt0.c1, vt0.c0, v0.c0;
SELECT ALL * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM vt0, v0 WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT t0.c2, t0.c0 FROM t0;
SELECT DISTINCT t0.c2, t0.c0 FROM t0 WHERE ((((t0.c0)) BETWEEN (((((t0.c0, t0.c2, t0.c2))<>(('o	', t0.c1, t0.c1))))) AND (('')))) UNION SELECT DISTINCT t0.c2, t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) BETWEEN (((((t0.c0, t0.c2, t0.c2))<>(('o	', t0.c1, t0.c1))))) AND (('')))))) UNION SELECT DISTINCT t0.c2, t0.c0 FROM t0 WHERE ((((((t0.c0)) BETWEEN (((((t0.c0, t0.c2, t0.c2))<>(('o	', t0.c1, t0.c1))))) AND (('')))) ISNULL));
SELECT DISTINCT t0.c2, t0.c0 FROM t0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 WHERE (((CAST(t0.c2 AS INTEGER)) NOT BETWEEN (((t0.c2) NOT NULL)) AND (((t0.c1) NOT NULL)))) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM t0 WHERE ((NOT (((CAST(t0.c2 AS INTEGER)) NOT BETWEEN (((t0.c2) NOT NULL)) AND (((t0.c1) NOT NULL)))))) GROUP BY t0.c2, t0.c0 UNION SELECT ALL t0.c2, t0.c0 FROM t0 WHERE (((((CAST(t0.c2 AS INTEGER)) NOT BETWEEN (((t0.c2) NOT NULL)) AND (((t0.c1) NOT NULL)))) ISNULL)) GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT rt0.c3, t0.c0, vt0.c0, t0.c1, t0.c2, rt0.c2, v0.c0, rt0.c1 FROM vt0, t0, v0 NOT INDEXED, rt0 GROUP BY rt0.c3, t0.c0, vt0.c0, t0.c1, t0.c2, rt0.c2, v0.c0, rt0.c1;
SELECT rt0.c3, t0.c0, vt0.c0, t0.c1, t0.c2, rt0.c2, v0.c0, rt0.c1 FROM vt0, t0, v0, rt0 GROUP BY rt0.c3, t0.c0, vt0.c0, t0.c1, t0.c2, rt0.c2, v0.c0, rt0.c1 HAVING MIN(MAX(AVG(t0.c2))) UNION ALL SELECT ALL rt0.c3, t0.c0, vt0.c0, t0.c1, t0.c2, rt0.c2, v0.c0, rt0.c1 FROM vt0, t0, v0, rt0 GROUP BY rt0.c3, t0.c0, vt0.c0, t0.c1, t0.c2, rt0.c2, v0.c0, rt0.c1 HAVING (NOT (MIN(MAX(AVG(t0.c2))))) UNION ALL SELECT ALL rt0.c3, t0.c0, vt0.c0, t0.c1, t0.c2, rt0.c2, v0.c0, rt0.c1 FROM vt0, t0, v0, rt0 GROUP BY rt0.c3, t0.c0, vt0.c0, t0.c1, t0.c2, rt0.c2, v0.c0, rt0.c1 HAVING ((MIN(MAX(AVG(t0.c2)))) ISNULL);
SELECT t0.c2, v0.c0, rt0.c1, rt0.c0, rt0.c3, t0.c0, t0.c1, rt0.c2 FROM rt0 CROSS JOIN t0 ON (((((NULL)) BETWEEN (('!W')) AND ((t0.c1)))) IS FALSE) RIGHT OUTER JOIN v0 ON ((t0.c1 COLLATE BINARY)/(((rt0.c3) NOT NULL)));
SELECT t0.c2, v0.c0, rt0.c1, rt0.c0, rt0.c3, t0.c0, t0.c1, rt0.c2 FROM rt0 CROSS JOIN t0 ON (((((NULL)) BETWEEN (('!W')) AND ((t0.c1)))) IS FALSE) RIGHT OUTER JOIN v0 ON ((t0.c1 COLLATE BINARY)/(((rt0.c3) NOT NULL))) WHERE (((((rt0.c1)AND(CASE rt0.c3  WHEN t0.c1 THEN rt0.c1 ELSE v0.c0 END)))OR((rt0.c0 IN ())))) UNION ALL SELECT ALL t0.c2, v0.c0, rt0.c1, rt0.c0, rt0.c3, t0.c0, t0.c1, rt0.c2 FROM rt0 CROSS JOIN t0 ON (((((NULL)) BETWEEN (('!W')) AND ((t0.c1)))) IS FALSE) RIGHT OUTER JOIN v0 ON ((t0.c1 COLLATE BINARY)/(((rt0.c3) NOT NULL))) WHERE ((NOT (((((rt0.c1)AND(CASE rt0.c3  WHEN t0.c1 THEN rt0.c1 ELSE v0.c0 END)))OR((rt0.c0 IN ())))))) UNION ALL SELECT ALL t0.c2, v0.c0, rt0.c1, rt0.c0, rt0.c3, t0.c0, t0.c1, rt0.c2 FROM rt0 CROSS JOIN t0 ON (((((NULL)) BETWEEN (('!W')) AND ((t0.c1)))) IS FALSE) RIGHT OUTER JOIN v0 ON ((t0.c1 COLLATE BINARY)/(((rt0.c3) NOT NULL))) WHERE (((((((rt0.c1)AND(CASE rt0.c3  WHEN t0.c1 THEN rt0.c1 ELSE v0.c0 END)))OR((rt0.c0 IN ())))) ISNULL));
SELECT t0.c2, v0.c0, rt0.c1, rt0.c0, rt0.c3, t0.c0, t0.c1, rt0.c2 FROM rt0 CROSS JOIN t0 ON (((((NULL)) BETWEEN (('!W')) AND ((t0.c1)))) IS FALSE) RIGHT OUTER JOIN v0 ON ((t0.c1 COLLATE BINARY)/(((rt0.c3) NOT NULL)));
SELECT DISTINCT rt0.c3, rt0.c1, vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((((((((rt0.c3 IN ()))AND(rt0.c0)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))AND(rt0.c2)))OR(((((rt0.c1)OR(x'')))AND(rt0.c3)))) LEFT OUTER JOIN rt0 ON RTRIM(ABS(v0.c0));
SELECT vt0.c0, rt0.c2, rt0.c3, t0.c2, t0.c0, v0.c0, rt0.c0 FROM t0 CROSS JOIN v0 ON ((rt0.c0)LIKE(CASE WHEN rt0.c1 THEN rt0.c2 ELSE t0.c0 END)) LEFT OUTER JOIN rt0 ON NULL FULL OUTER JOIN vt0 ON json((((x'', v0.c0, rt0.c1))>=((t0.c0, t0.c2, rt0.c3)))) GROUP BY vt0.c0, rt0.c2, rt0.c3, t0.c2, t0.c0, v0.c0, rt0.c0;
SELECT ALL t0.c2, rt0.c3, rt0.c0, t0.c1 FROM rt0, t0 GROUP BY t0.c2, rt0.c3, rt0.c0, t0.c1;
SELECT t0.c2, rt0.c3, rt0.c0, t0.c1 FROM rt0, t0 GROUP BY t0.c2, rt0.c3, rt0.c0, t0.c1 HAVING MIN(CASE rt0.c2  WHEN rt0.c0 THEN TOTAL(MAX(rt0.c3)) WHEN TOTAL(GROUP_CONCAT(GROUP_CONCAT(t0.c0))) THEN rt0.c0 WHEN rt0.c3 THEN t0.c1 ELSE COUNT(*) END) UNION ALL SELECT ALL t0.c2, rt0.c3, rt0.c0, t0.c1 FROM rt0, t0 GROUP BY t0.c2, rt0.c3, rt0.c0, t0.c1 HAVING (NOT (MIN(CASE rt0.c2  WHEN rt0.c0 THEN TOTAL(MAX(rt0.c3)) WHEN TOTAL(GROUP_CONCAT(GROUP_CONCAT(t0.c0))) THEN rt0.c0 WHEN rt0.c3 THEN t0.c1 ELSE COUNT(*) END))) UNION ALL SELECT ALL t0.c2, rt0.c3, rt0.c0, t0.c1 FROM rt0, t0 GROUP BY t0.c2, rt0.c3, rt0.c0, t0.c1 HAVING ((MIN(CASE rt0.c2  WHEN rt0.c0 THEN TOTAL(MAX(rt0.c3)) WHEN TOTAL(GROUP_CONCAT(GROUP_CONCAT(t0.c0))) THEN rt0.c0 WHEN rt0.c3 THEN t0.c1 ELSE COUNT(*) END)) ISNULL);
SELECT ALL vt0.c0 FROM v0 LEFT OUTER JOIN t0 ON ((((((((vt0.c0)AND(t0.c2)))OR(t0.c2)))AND(CAST(t0.c1 AS REAL))))AND(vt0.c0 COLLATE RTRIM)) FULL OUTER JOIN vt0 ON ((t0.c1 COLLATE BINARY) BETWEEN (CAST(t0.c0 AS BLOB)) AND (LIKELIHOOD(DISTINCT t0.c1, 0.03478145859621429)));
SELECT DISTINCT * FROM rt0, vt0, v0, t0;
SELECT DISTINCT * FROM rt0, vt0, v0, t0 WHERE (((((('0.8243934993868213')OR(t0.c2)))OR(t0.c2)) IN ())) UNION SELECT DISTINCT * FROM rt0, vt0, v0, t0 WHERE ((NOT (((((('0.8243934993868213')OR(t0.c2)))OR(t0.c2)) IN ())))) UNION SELECT DISTINCT * FROM rt0, vt0, v0, t0 WHERE (((((((('0.8243934993868213')OR(t0.c2)))OR(t0.c2)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, v0, t0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((rt0.c1)<>(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1)<>(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((rt0.c1)<>(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT * FROM rt0 INNER JOIN t0 ON (((((NULL, t0.c2, rt0.c2))<=((rt0.c1, rt0.c3, rt0.c3))))-('r['));
SELECT ALL * FROM rt0 INNER JOIN t0 ON (((((NULL, t0.c2, rt0.c2))<=((rt0.c1, rt0.c3, rt0.c3))))-('r[')) WHERE (((rt0.c2)<=(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) UNION ALL SELECT * FROM rt0 INNER JOIN t0 ON (((((NULL, t0.c2, rt0.c2))<=((rt0.c1, rt0.c3, rt0.c3))))-('r[')) WHERE ((NOT (((rt0.c2)<=(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0 NOT INDEXED INNER JOIN t0 ON (((((NULL, t0.c2, rt0.c2))<=((rt0.c1, rt0.c3, rt0.c3))))-('r[')) WHERE (((((rt0.c2)<=(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) ISNULL));
SELECT * FROM rt0 INNER JOIN t0 ON (((((NULL, t0.c2, rt0.c2))<=((rt0.c1, rt0.c3, rt0.c3))))-('r['));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((NULL)AND(v0.c0)))OR(v0.c0)) IN ())) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((((NULL)AND(v0.c0)))OR(v0.c0)) IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((((NULL)AND(v0.c0)))OR(v0.c0)) IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT t0.c2, rt0.c2, t0.c0, rt0.c3, rt0.c1, t0.c1 FROM t0, rt0, v0 GROUP BY t0.c2, rt0.c2, t0.c0, rt0.c3, rt0.c1, t0.c1;
SELECT ALL t0.c2, rt0.c2, t0.c0, rt0.c3, rt0.c1, t0.c1 FROM t0, rt0, v0 WHERE (((((rt0.c2) NOT BETWEEN (t0.c1) AND (v0.c0)))=(rt0.c1 COLLATE NOCASE))) GROUP BY t0.c2, rt0.c2, t0.c0, rt0.c3, rt0.c1, t0.c1 UNION SELECT ALL t0.c2, rt0.c2, t0.c0, rt0.c3, rt0.c1, t0.c1 FROM t0, rt0, v0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (t0.c1) AND (v0.c0)))==(rt0.c1 COLLATE NOCASE))))) GROUP BY t0.c2, rt0.c2, t0.c0, rt0.c3, rt0.c1, t0.c1 UNION SELECT t0.c2, rt0.c2, t0.c0, rt0.c3, rt0.c1, t0.c1 FROM t0, rt0, v0 WHERE (((((((rt0.c2) NOT BETWEEN (t0.c1) AND (v0.c0)))=(rt0.c1 COLLATE NOCASE))) ISNULL)) GROUP BY t0.c2, rt0.c2, t0.c0, rt0.c3, rt0.c1, t0.c1;
SELECT t0.c2, rt0.c2, t0.c0, rt0.c3, rt0.c1, t0.c1 FROM t0, rt0, v0 GROUP BY t0.c2, rt0.c2, t0.c0, rt0.c3, rt0.c1, t0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(vt0.c0)) IS FALSE) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((AVG(vt0.c0)) IS FALSE))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((AVG(vt0.c0)) IS FALSE)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(vt0.c0)) IS FALSE) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((AVG(vt0.c0)) IS FALSE))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((AVG(vt0.c0)) IS FALSE)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c1, t0.c2 FROM t0;
SELECT t0.c1, t0.c2 FROM t0 WHERE (((t0.c2)LIKE(((t0.c0)>=(t0.c0))))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0 WHERE ((NOT (((t0.c2)LIKE(((t0.c0)>=(t0.c0))))))) UNION ALL SELECT t0.c1, t0.c2 FROM t0 WHERE (((((t0.c2)LIKE(((t0.c0)>=(t0.c0))))) ISNULL));
SELECT ALL t0.c1, t0.c2 FROM t0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c3, v0.c0, rt0.c2, rt0.c1 FROM v0, vt0, rt0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c3, v0.c0, rt0.c2, rt0.c1 FROM v0, vt0, rt0 WHERE ((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE BINARY) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c3, v0.c0, rt0.c2, rt0.c1 FROM v0, vt0, rt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c3, v0.c0, rt0.c2, rt0.c1 FROM v0, vt0, rt0 WHERE ((((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c3, v0.c0, rt0.c2, rt0.c1 FROM v0, vt0, rt0;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE (CASE '-1364830545'  WHEN ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)) THEN ((t0.c0)GLOB(t0.c2)) END) GROUP BY t0.c0, t0.c2, t0.c1 UNION SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((NOT (CASE '-1364830545'  WHEN ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)) THEN ((t0.c0)GLOB(t0.c2)) END))) GROUP BY t0.c0, t0.c2, t0.c1 UNION SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE (((CASE '-1364830545'  WHEN ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)) THEN ((t0.c0)GLOB(t0.c2)) END) ISNULL)) GROUP BY t0.c0, t0.c2, t0.c1;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT ALL vt0.c0, v0.c0, t0.c2 FROM vt0, v0 CROSS JOIN t0 ON ((NULL)+(TIME(t0.c2, vt0.c0, t0.c2))) GROUP BY vt0.c0, v0.c0, t0.c2;
SELECT ALL vt0.c0, v0.c0, t0.c2 FROM vt0, v0 CROSS JOIN t0 ON ((NULL)+(TIME(t0.c2, vt0.c0, t0.c2))) GROUP BY vt0.c0, v0.c0, t0.c2 HAVING NULLIF(DISTINCT COUNT(*), t0.c2 COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0, v0.c0, t0.c2 FROM vt0, v0 CROSS JOIN t0 ON ((NULL)+(TIME(t0.c2, vt0.c0, t0.c2))) GROUP BY vt0.c0, v0.c0, t0.c2 HAVING (NOT (NULLIF(DISTINCT COUNT(*), t0.c2 COLLATE NOCASE))) UNION ALL SELECT vt0.c0, v0.c0, t0.c2 FROM vt0, v0 CROSS JOIN t0 ON ((NULL)+(TIME(t0.c2, vt0.c0, t0.c2))) GROUP BY vt0.c0, v0.c0, t0.c2 HAVING ((NULLIF(DISTINCT COUNT(*), t0.c2 COLLATE NOCASE)) ISNULL);
SELECT ALL vt0.c0, v0.c0, t0.c2 FROM vt0, v0 CROSS JOIN t0 ON ((NULL)+(TIME(t0.c2, vt0.c0, t0.c2))) GROUP BY vt0.c0, v0.c0, t0.c2;
SELECT ALL vt0.c0, v0.c0, t0.c2 FROM vt0, v0 CROSS JOIN t0 ON ((NULL)+(TIME(t0.c2, vt0.c0, t0.c2))) GROUP BY vt0.c0, v0.c0, t0.c2 HAVING NULLIF(DISTINCT COUNT(*), t0.c2 COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0, v0.c0, t0.c2 FROM vt0, v0 CROSS JOIN t0 ON ((NULL)+(TIME(t0.c2, vt0.c0, t0.c2))) GROUP BY vt0.c0, v0.c0, t0.c2 HAVING (NOT (NULLIF(DISTINCT COUNT(*), t0.c2 COLLATE NOCASE))) UNION ALL SELECT vt0.c0, v0.c0, t0.c2 FROM vt0, v0 CROSS JOIN t0 ON ((NULL)+(TIME(t0.c2, vt0.c0, t0.c2))) GROUP BY vt0.c0, v0.c0, t0.c2 HAVING ((NULLIF(DISTINCT COUNT(*), t0.c2 COLLATE NOCASE)) ISNULL);
SELECT ALL vt0.c0, v0.c0, t0.c2 FROM vt0, v0 CROSS JOIN t0 ON ((NULL)+(TIME(t0.c2, vt0.c0, t0.c2))) GROUP BY vt0.c0, v0.c0, t0.c2;
SELECT ALL * FROM v0, vt0, t0;
SELECT ALL * FROM v0, vt0, t0 WHERE (vt0.c0) UNION ALL SELECT * FROM v0, vt0, t0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM v0, vt0, t0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM v0, vt0, t0;
SELECT DISTINCT t0.c1, rt0.c2, rt0.c1, t0.c0, rt0.c3, v0.c0, vt0.c0, rt0.c0, t0.c2 FROM vt0, rt0, v0, t0;
SELECT DISTINCT t0.c1, rt0.c2, rt0.c1, t0.c0, rt0.c3, v0.c0, vt0.c0, rt0.c0, t0.c2 FROM vt0, rt0, v0, t0 WHERE (((t0.c2) NOT NULL)) UNION SELECT DISTINCT t0.c1, rt0.c2, rt0.c1, t0.c0, rt0.c3, v0.c0, vt0.c0, rt0.c0, t0.c2 FROM vt0, rt0, v0, t0 WHERE ((NOT (((t0.c2) NOT NULL)))) UNION SELECT DISTINCT t0.c1, rt0.c2, rt0.c1, t0.c0, rt0.c3, v0.c0, vt0.c0, rt0.c0, t0.c2 FROM vt0, rt0, v0, t0 WHERE (((((t0.c2) NOT NULL)) ISNULL));
SELECT DISTINCT t0.c1, rt0.c2, rt0.c1, t0.c0, rt0.c3, v0.c0, vt0.c0, rt0.c0, t0.c2 FROM vt0, rt0, v0, t0;
SELECT ALL rt0.c1, v0.c0, t0.c0, rt0.c3, t0.c1, rt0.c0, vt0.c0, t0.c2 FROM t0, rt0, vt0, v0 GROUP BY rt0.c1, v0.c0, t0.c0, rt0.c3, t0.c1, rt0.c0, vt0.c0, t0.c2;
SELECT rt0.c1, v0.c0, t0.c0, rt0.c3, t0.c1, rt0.c0, vt0.c0, t0.c2 FROM t0, rt0, vt0, v0 WHERE ((~ ((rt0.c0 IN (t0.c2))))) GROUP BY rt0.c1, v0.c0, t0.c0, rt0.c3, t0.c1, rt0.c0, vt0.c0, t0.c2 UNION SELECT ALL rt0.c1, v0.c0, t0.c0, rt0.c3, t0.c1, rt0.c0, vt0.c0, t0.c2 FROM t0, rt0, vt0, v0 WHERE ((NOT ((~ ((rt0.c0 IN (t0.c2))))))) GROUP BY rt0.c1, v0.c0, t0.c0, rt0.c3, t0.c1, rt0.c0, vt0.c0, t0.c2 UNION SELECT rt0.c1, v0.c0, t0.c0, rt0.c3, t0.c1, rt0.c0, vt0.c0, t0.c2 FROM t0, rt0, vt0, v0 WHERE ((((~ ((rt0.c0 IN (t0.c2))))) ISNULL)) GROUP BY rt0.c1, v0.c0, t0.c0, rt0.c3, t0.c1, rt0.c0, vt0.c0, t0.c2;
SELECT ALL rt0.c1, v0.c0, t0.c0, rt0.c3, t0.c1, rt0.c0, vt0.c0, t0.c2 FROM t0, rt0, vt0, v0 GROUP BY rt0.c1, v0.c0, t0.c0, rt0.c3, t0.c1, rt0.c0, vt0.c0, t0.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(((t0.c2) BETWEEN (t0.c2) AND (t0.c1))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(((t0.c2) BETWEEN (t0.c2) AND (t0.c1))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(((t0.c2) BETWEEN (t0.c2) AND (t0.c1)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(((t0.c2) BETWEEN (t0.c2) AND (t0.c1))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(((t0.c2) BETWEEN (t0.c2) AND (t0.c1))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(((t0.c2) BETWEEN (t0.c2) AND (t0.c1)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL TOTAL(((((t0.c0)<<(t0.c1))) BETWEEN ('' COLLATE RTRIM) AND (((t0.c2) BETWEEN (t0.c0) AND (t0.c1))))) FROM t0 ORDER BY (NOT ((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))))  NULLS FIRST, (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (CASE t0.c2  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END) AND (('0.11108717220308528' IN ())))  NULLS FIRST;
SELECT ALL * FROM v0, t0, rt0, vt0;
SELECT * FROM v0, t0, rt0, vt0 WHERE ((((((NOT (vt0.c0)))AND(((rt0.c3) ISNULL))))AND((NOT (rt0.c2))))) UNION ALL SELECT ALL * FROM v0, t0, rt0, vt0 WHERE ((NOT ((((((NOT (vt0.c0)))AND(((rt0.c3) ISNULL))))AND((NOT (rt0.c2))))))) UNION ALL SELECT * FROM v0, t0, rt0, vt0 WHERE ((((((((NOT (vt0.c0)))AND(((rt0.c3) ISNULL))))AND((NOT (rt0.c2))))) ISNULL));
SELECT ALL * FROM v0, t0, rt0, vt0;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, t0.c0, rt0.c2 FROM rt0, t0, vt0;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, t0.c0, rt0.c2 FROM rt0, t0, vt0 WHERE ((((t0.c0)) NOT BETWEEN (((- (rt0.c0)))) AND ((((((t0.c1)AND(t0.c2)))AND(NULL)))))) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, t0.c0, rt0.c2 FROM rt0, t0, vt0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN (((- (rt0.c0)))) AND ((((((t0.c1)AND(t0.c2)))AND(NULL)))))))) UNION SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, t0.c0, rt0.c2 FROM rt0, t0, vt0 WHERE ((((((t0.c0)) NOT BETWEEN (((- (rt0.c0)))) AND ((((((t0.c1)AND(t0.c2)))AND(NULL)))))) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c0, t0.c0, rt0.c2 FROM rt0, t0, vt0;
SELECT ALL t0.c2, t0.c1 FROM t0, v0, rt0, vt0 GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0, v0, rt0, vt0 WHERE ((NOT (((((rt0.c1)AND(t0.c2)))AND(vt0.c0))))) GROUP BY t0.c2, t0.c1 UNION SELECT t0.c2, t0.c1 FROM t0, v0, rt0, vt0 WHERE ((NOT ((NOT (((((rt0.c1)AND(t0.c2)))AND(vt0.c0))))))) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM t0, v0, rt0, vt0 WHERE ((((NOT (((((rt0.c1)AND(t0.c2)))AND(vt0.c0))))) ISNULL)) GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM t0, v0, rt0, vt0 GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c0, rt0.c3, rt0.c0, t0.c2, rt0.c1, vt0.c0 FROM rt0, vt0, t0, v0 GROUP BY t0.c0, rt0.c3, rt0.c0, t0.c2, rt0.c1, vt0.c0;
SELECT t0.c0, rt0.c3, rt0.c0, t0.c2, rt0.c1, vt0.c0 FROM rt0, vt0, t0, v0 GROUP BY t0.c0, rt0.c3, rt0.c0, t0.c2, rt0.c1, vt0.c0 HAVING SUM(((AVG(t0.c0)) NOT NULL)) UNION ALL SELECT t0.c0, rt0.c3, rt0.c0, t0.c2, rt0.c1, vt0.c0 FROM rt0, vt0, t0, v0 GROUP BY t0.c0, rt0.c3, rt0.c0, t0.c2, rt0.c1, vt0.c0 HAVING (NOT (SUM(((AVG(t0.c0)) NOT NULL)))) UNION ALL SELECT t0.c0, rt0.c3, rt0.c0, t0.c2, rt0.c1, vt0.c0 FROM rt0, vt0, t0, v0 GROUP BY t0.c0, rt0.c3, rt0.c0, t0.c2, rt0.c1, vt0.c0 HAVING ((SUM(((AVG(t0.c0)) NOT NULL))) ISNULL);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON v0.c0 INNER JOIN v0 ON (((((rt0.c0)&(t0.c1))))=((((rt0.c3)>>(x''))))) FULL OUTER JOIN vt0 ON ((((v0.c0) ISNULL))>>(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ((vt0.c0 IN ())) AND ((NOT (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN ((vt0.c0 IN ())) AND ((NOT (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN ((vt0.c0 IN ())) AND ((NOT (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING AVG(SUM(TOTAL(v0.c0))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0 NOT INDEXED, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (AVG(SUM(TOTAL(v0.c0))))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((AVG(SUM(TOTAL(v0.c0)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (TRIM((((rt0.c3, 0x4c0344a6, rt0.c2, rt0.c0, rt0.c2, rt0.c3, rt0.c3))<=((rt0.c3, rt0.c2, x'', rt0.c0, rt0.c2, rt0.c0, rt0.c2))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (TRIM((((rt0.c3, 0X4c0344a6, rt0.c2, rt0.c0, rt0.c2, rt0.c3, rt0.c3))<=((rt0.c3, rt0.c2, x'', rt0.c0, rt0.c2, rt0.c0, rt0.c2))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((TRIM((((rt0.c3, 0x4c0344a6, rt0.c2, rt0.c0, rt0.c2, rt0.c3, rt0.c3))<=((rt0.c3, rt0.c2, x'', rt0.c0, rt0.c2, rt0.c0, rt0.c2))))) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0, v0, t0, vt0;
SELECT DISTINCT * FROM rt0, v0, t0, vt0 WHERE (CAST(t0.c0 AS REAL) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0, v0, t0, vt0 WHERE ((NOT (CAST(t0.c0 AS REAL) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0, v0, t0, vt0 WHERE (((CAST(t0.c0 AS REAL) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0, v0, t0, vt0;
SELECT rt0.c3, rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c1, vt0.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c3, rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((((((rt0.c0 IN ()))AND(rt0.c0)))OR((rt0.c1 IN ())))) GROUP BY rt0.c3, rt0.c1, vt0.c0, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((NOT ((((((rt0.c0 IN ()))AND(rt0.c0)))OR((rt0.c1 IN ())))))) GROUP BY rt0.c3, rt0.c1, vt0.c0, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((((((((rt0.c0 IN ()))AND(rt0.c0)))OR((rt0.c1 IN ())))) ISNULL)) GROUP BY rt0.c3, rt0.c1, vt0.c0, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, rt0.c1, vt0.c0, rt0.c2, rt0.c0;
SELECT ALL v0.c0, t0.c2, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1;
SELECT ALL v0.c0, t0.c2, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1 HAVING TOTAL(ABS(DISTINCT t0.c0)) UNION ALL SELECT ALL v0.c0, t0.c2, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1 HAVING (NOT (TOTAL(ABS(DISTINCT t0.c0)))) UNION ALL SELECT v0.c0, t0.c2, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1 HAVING ((TOTAL(ABS(DISTINCT t0.c0))) ISNULL);
SELECT ALL v0.c0, t0.c2, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1;
SELECT ALL v0.c0, t0.c2, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1 HAVING TOTAL(ABS(DISTINCT t0.c0)) UNION ALL SELECT ALL v0.c0, t0.c2, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1 HAVING (NOT (TOTAL(ABS(DISTINCT t0.c0)))) UNION ALL SELECT v0.c0, t0.c2, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1 HAVING ((TOTAL(ABS(DISTINCT t0.c0))) ISNULL);
SELECT ALL v0.c0, t0.c2, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((0.970698271128712, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((0.970698271128712, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((0.970698271128712, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM t0, v0 RIGHT OUTER JOIN rt0 ON CASE (+ (v0.c0))  WHEN t0.c0 THEN ((((vt0.c0)AND(t0.c1)))OR(t0.c1)) END LEFT OUTER JOIN vt0 ON ((DATE(t0.c1, rt0.c0, t0.c0, vt0.c0, t0.c0))|(((rt0.c2) ISNULL)));
SELECT rt0.c3, t0.c2, rt0.c1, rt0.c0, rt0.c2, t0.c1, vt0.c0 FROM v0, rt0, vt0, t0 GROUP BY rt0.c3, t0.c2, rt0.c1, rt0.c0, rt0.c2, t0.c1, vt0.c0;
SELECT ALL rt0.c3, t0.c2, rt0.c1, rt0.c0, rt0.c2, t0.c1, vt0.c0 FROM v0 NOT INDEXED, rt0, vt0, t0 WHERE (CAST(((rt0.c2)<>(vt0.c0)) AS NUMERIC)) GROUP BY rt0.c3, t0.c2, rt0.c1, rt0.c0, rt0.c2, t0.c1, vt0.c0 UNION SELECT ALL rt0.c3, t0.c2, rt0.c1, rt0.c0, rt0.c2, t0.c1, vt0.c0 FROM v0, rt0, vt0, t0 WHERE ((NOT (CAST(((rt0.c2)!=(vt0.c0)) AS NUMERIC)))) GROUP BY rt0.c3, t0.c2, rt0.c1, rt0.c0, rt0.c2, t0.c1, vt0.c0 UNION SELECT ALL rt0.c3, t0.c2, rt0.c1, rt0.c0, rt0.c2, t0.c1, vt0.c0 FROM v0, rt0, vt0, t0 WHERE (((CAST(((rt0.c2)<>(vt0.c0)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c3, t0.c2, rt0.c1, rt0.c0, rt0.c2, t0.c1, vt0.c0;
SELECT rt0.c3, t0.c2, rt0.c1, rt0.c0, rt0.c2, t0.c1, vt0.c0 FROM v0, rt0, vt0, t0 GROUP BY rt0.c3, t0.c2, rt0.c1, rt0.c0, rt0.c2, t0.c1, vt0.c0;
SELECT vt0.c0, rt0.c3, t0.c0, rt0.c2, t0.c1, rt0.c1, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) NOT NULL) AS TEXT) INNER JOIN vt0 ON ((TYPEOF(DISTINCT '1707116905'))<>((NOT (t0.c1)))) INNER JOIN v0 ON ((((rt0.c3 COLLATE BINARY)AND(CAST(v0.c0 AS TEXT))))OR(('263319176' IN (v0.c0, t0.c0)))) GROUP BY vt0.c0, rt0.c3, t0.c0, rt0.c2, t0.c1, rt0.c1, rt0.c0;
SELECT ALL vt0.c0, rt0.c3, t0.c0, rt0.c2, t0.c1, rt0.c1, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) NOT NULL) AS TEXT) INNER JOIN vt0 ON ((TYPEOF(DISTINCT '1707116905'))!=((NOT (t0.c1)))) INNER JOIN v0 ON ((((rt0.c3 COLLATE BINARY)AND(CAST(v0.c0 AS TEXT))))OR(('263319176' IN (v0.c0, t0.c0)))) GROUP BY vt0.c0, rt0.c3, t0.c0, rt0.c2, t0.c1, rt0.c1, rt0.c0 HAVING COUNT(GROUP_CONCAT(t0.c0)) UNION ALL SELECT ALL vt0.c0, rt0.c3, t0.c0, rt0.c2, t0.c1, rt0.c1, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) NOT NULL) AS TEXT) INNER JOIN vt0 ON ((TYPEOF(DISTINCT '1707116905'))<>((NOT (t0.c1)))) INNER JOIN v0 ON ((((rt0.c3 COLLATE BINARY)AND(CAST(v0.c0 AS TEXT))))OR(('263319176' IN (v0.c0, t0.c0)))) GROUP BY vt0.c0, rt0.c3, t0.c0, rt0.c2, t0.c1, rt0.c1, rt0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(t0.c0)))) UNION ALL SELECT ALL vt0.c0, rt0.c3, t0.c0, rt0.c2, t0.c1, rt0.c1, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) NOT NULL) AS TEXT) INNER JOIN vt0 ON ((TYPEOF(DISTINCT '1707116905'))!=((NOT (t0.c1)))) INNER JOIN v0 ON ((((rt0.c3 COLLATE BINARY)AND(CAST(v0.c0 AS TEXT))))OR(('263319176' IN (v0.c0, t0.c0)))) GROUP BY vt0.c0, rt0.c3, t0.c0, rt0.c2, t0.c1, rt0.c1, rt0.c0 HAVING ((COUNT(GROUP_CONCAT(t0.c0))) ISNULL);
SELECT MAX(((((('916020636', v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))*(NULL))) FROM v0;
SELECT t0.c1, rt0.c2, t0.c2, t0.c0 FROM rt0 INNER JOIN t0 ON (((t0.c0, t0.c2, t0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, (rt0.c0 IN ()))) AND (((t0.c1 IN ()), ((((rt0.c3)AND(t0.c1)))OR(rt0.c0)), '')));
SELECT t0.c1, rt0.c2, t0.c2, t0.c0 FROM rt0 INNER JOIN t0 ON (((t0.c0, t0.c2, t0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, (rt0.c0 IN ()))) AND (((t0.c1 IN ()), ((((rt0.c3)AND(t0.c1)))OR(rt0.c0)), ''))) WHERE ((((((rt0.c1)*(t0.c0))))<((((0.832937029334289)==(rt0.c0)))))) UNION ALL SELECT t0.c1, rt0.c2, t0.c2, t0.c0 FROM rt0 INNER JOIN t0 ON (((t0.c0, t0.c2, t0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, (rt0.c0 IN ()))) AND (((t0.c1 IN ()), ((((rt0.c3)AND(t0.c1)))OR(rt0.c0)), ''))) WHERE ((NOT ((((((rt0.c1)*(t0.c0))))<((((0.832937029334289)=(rt0.c0)))))))) UNION ALL SELECT ALL t0.c1, rt0.c2, t0.c2, t0.c0 FROM rt0 INNER JOIN t0 ON (((t0.c0, t0.c2, t0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, (rt0.c0 IN ()))) AND (((t0.c1 IN ()), ((((rt0.c3)AND(t0.c1)))OR(rt0.c0)), ''))) WHERE ((((((((rt0.c1)*(t0.c0))))<((((0.832937029334289)=(rt0.c0)))))) ISNULL));
SELECT t0.c1, rt0.c2, t0.c2, t0.c0 FROM rt0 INNER JOIN t0 ON (((t0.c0, t0.c2, t0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, (rt0.c0 IN ()))) AND (((t0.c1 IN ()), ((((rt0.c3)AND(t0.c1)))OR(rt0.c0)), '')));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE ((((((((rt0.c2, vt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c3)) AND ((rt0.c1, NULL, rt0.c1))))OR((vt0.c0 IN (x'')))))AND(((rt0.c2)<(rt0.c3))))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((((((rt0.c2, vt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c3)) AND ((rt0.c1, NULL, rt0.c1))))OR((vt0.c0 IN (x'')))))AND(((rt0.c2)<(rt0.c3))))))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2 FROM vt0, rt0 WHERE ((((((((((rt0.c2, vt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c3)) AND ((rt0.c1, NULL, rt0.c1))))OR((vt0.c0 IN (x'')))))AND(((rt0.c2)<(rt0.c3))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2 FROM vt0, rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM t0, v0 FULL OUTER JOIN rt0 ON ((rt0.c0)%(((rt0.c1)AND(x'')))) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM t0, v0 FULL OUTER JOIN rt0 ON ((rt0.c0)%(((rt0.c1)AND(x'')))) WHERE (UNLIKELY(rt0.c2 COLLATE RTRIM)) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM t0, v0 FULL OUTER JOIN rt0 ON ((rt0.c0)%(((rt0.c1)AND(x'')))) WHERE ((NOT (UNLIKELY(rt0.c2 COLLATE RTRIM)))) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM t0, v0 FULL OUTER JOIN rt0 ON ((rt0.c0)%(((rt0.c1)AND(x'')))) WHERE (((UNLIKELY(rt0.c2 COLLATE RTRIM)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM t0, v0 FULL OUTER JOIN rt0 ON ((rt0.c0)%(((rt0.c1)AND(x'')))) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT ALL v0.c0, rt0.c3, t0.c2, t0.c1, rt0.c0, t0.c0, rt0.c1, rt0.c2, vt0.c0 FROM t0, rt0, vt0 RIGHT OUTER JOIN v0 ON rt0.c2 GROUP BY v0.c0, rt0.c3, t0.c2, t0.c1, rt0.c0, t0.c0, rt0.c1, rt0.c2, vt0.c0;
SELECT ALL v0.c0, rt0.c3, t0.c2, t0.c1, rt0.c0, t0.c0, rt0.c1, rt0.c2, vt0.c0 FROM t0, rt0, vt0 RIGHT OUTER JOIN v0 ON rt0.c2 GROUP BY v0.c0, rt0.c3, t0.c2, t0.c1, rt0.c0, t0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING SUM((+ (TOTAL(MAX(v0.c0))))) UNION ALL SELECT ALL v0.c0, rt0.c3, t0.c2, t0.c1, rt0.c0, t0.c0, rt0.c1, rt0.c2, vt0.c0 FROM t0, rt0, vt0 RIGHT OUTER JOIN v0 ON rt0.c2 GROUP BY v0.c0, rt0.c3, t0.c2, t0.c1, rt0.c0, t0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING (NOT (SUM((+ (TOTAL(MAX(v0.c0))))))) UNION ALL SELECT ALL v0.c0, rt0.c3, t0.c2, t0.c1, rt0.c0, t0.c0, rt0.c1, rt0.c2, vt0.c0 FROM t0, rt0, vt0 RIGHT OUTER JOIN v0 ON rt0.c2 GROUP BY v0.c0, rt0.c3, t0.c2, t0.c1, rt0.c0, t0.c0, rt0.c1, rt0.c2, vt0.c0 HAVING ((SUM((+ (TOTAL(MAX(v0.c0)))))) ISNULL);
SELECT ALL t0.c0, v0.c0 FROM vt0, v0, t0;
SELECT t0.c0, v0.c0 FROM vt0, v0, t0 WHERE (COALESCE(DISTINCT (NOT (0.39926013715588304)), t0.c2)) UNION ALL SELECT t0.c0, v0.c0 FROM vt0, v0, t0 WHERE ((NOT (COALESCE(DISTINCT (NOT (0.39926013715588304)), t0.c2)))) UNION ALL SELECT ALL t0.c0, v0.c0 FROM vt0, v0, t0 WHERE (((COALESCE(DISTINCT (NOT (0.39926013715588304)), t0.c2)) ISNULL));
SELECT ALL t0.c0, v0.c0 FROM vt0, v0, t0;
SELECT DISTINCT * FROM t0, vt0 LEFT OUTER JOIN v0 ON (((((vt0.c0))<=((t0.c0))))LIKE(((rt0.c3)<=(vt0.c0)))) RIGHT OUTER JOIN rt0 ON UNLIKELY(load_extension(rt0.c3));
SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0, t0.c1, t0.c2 FROM vt0, t0 CROSS JOIN rt0 ON ((v0.c0) ISNULL) LEFT OUTER JOIN v0 ON (+ (((t0.c0) NOTNULL))) GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0, t0.c1, t0.c2;
SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0, t0.c1, t0.c2 FROM vt0, t0 CROSS JOIN rt0 ON ((v0.c0) ISNULL) LEFT OUTER JOIN v0 ON (+ (((t0.c0) NOTNULL))) WHERE ((CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END IN (((rt0.c2)>>(t0.c0))))) GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0, t0.c1, t0.c2 UNION SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0, t0.c1, t0.c2 FROM vt0, t0 CROSS JOIN rt0 ON ((v0.c0) ISNULL) LEFT OUTER JOIN v0 ON (+ (((t0.c0) NOTNULL))) WHERE ((NOT ((CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END IN (((rt0.c2)>>(t0.c0))))))) GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0, t0.c1, t0.c2 UNION SELECT ALL rt0.c2, vt0.c0, rt0.c1, rt0.c0, t0.c1, t0.c2 FROM vt0, t0 CROSS JOIN rt0 ON ((v0.c0) ISNULL) LEFT OUTER JOIN v0 ON (+ (((t0.c0) NOTNULL))) WHERE ((((CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END IN (((rt0.c2)>>(t0.c0))))) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0, t0.c1, t0.c2;
SELECT rt0.c2, vt0.c0, rt0.c1, rt0.c0, t0.c1, t0.c2 FROM vt0, t0 CROSS JOIN rt0 ON ((v0.c0) ISNULL) LEFT OUTER JOIN v0 ON (+ (((t0.c0) NOTNULL))) GROUP BY rt0.c2, vt0.c0, rt0.c1, rt0.c0, t0.c1, t0.c2;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM t0, v0, vt0 INNER JOIN rt0 ON ((HEX(t0.c1)) NOT BETWEEN ((~ (t0.c0))) AND (((rt0.c3) NOT BETWEEN ('700435880') AND (t0.c2)))) GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM t0, v0, vt0 INNER JOIN rt0 ON ((HEX(t0.c1)) NOT BETWEEN ((~ (t0.c0))) AND (((rt0.c3) NOT BETWEEN ('700435880') AND (t0.c2)))) GROUP BY rt0.c0, rt0.c1, vt0.c0 HAVING LIKELY(DISTINCT COUNT(*)) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0 FROM t0, v0, vt0 INNER JOIN rt0 ON ((HEX(t0.c1)) NOT BETWEEN ((~ (t0.c0))) AND (((rt0.c3) NOT BETWEEN ('700435880') AND (t0.c2)))) GROUP BY rt0.c0, rt0.c1, vt0.c0 HAVING (NOT (LIKELY(DISTINCT COUNT(*)))) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0 FROM t0, v0, vt0 INNER JOIN rt0 ON ((HEX(t0.c1)) NOT BETWEEN ((~ (t0.c0))) AND (((rt0.c3) NOT BETWEEN ('700435880') AND (t0.c2)))) GROUP BY rt0.c0, rt0.c1, vt0.c0 HAVING ((LIKELY(DISTINCT COUNT(*))) ISNULL);
SELECT rt0.c0, rt0.c1, vt0.c0 FROM t0, v0, vt0 INNER JOIN rt0 ON ((HEX(t0.c1)) NOT BETWEEN ((~ (t0.c0))) AND (((rt0.c3) NOT BETWEEN ('700435880') AND (t0.c2)))) GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM t0, v0, vt0 INNER JOIN rt0 ON ((HEX(t0.c1)) NOT BETWEEN ((~ (t0.c0))) AND (((rt0.c3) NOT BETWEEN ('700435880') AND (t0.c2)))) GROUP BY rt0.c0, rt0.c1, vt0.c0 HAVING LIKELY(DISTINCT COUNT(*)) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0 FROM t0, v0, vt0 INNER JOIN rt0 ON ((HEX(t0.c1)) NOT BETWEEN ((~ (t0.c0))) AND (((rt0.c3) NOT BETWEEN ('700435880') AND (t0.c2)))) GROUP BY rt0.c0, rt0.c1, vt0.c0 HAVING (NOT (LIKELY(DISTINCT COUNT(*)))) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0 FROM t0, v0, vt0 INNER JOIN rt0 ON ((HEX(t0.c1)) NOT BETWEEN ((~ (t0.c0))) AND (((rt0.c3) NOT BETWEEN ('700435880') AND (t0.c2)))) GROUP BY rt0.c0, rt0.c1, vt0.c0 HAVING ((LIKELY(DISTINCT COUNT(*))) ISNULL);
SELECT rt0.c0, rt0.c1, vt0.c0 FROM t0, v0, vt0 INNER JOIN rt0 ON ((HEX(t0.c1)) NOT BETWEEN ((~ (t0.c0))) AND (((rt0.c3) NOT BETWEEN ('700435880') AND (t0.c2)))) GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT ALL t0.c2 FROM t0;
SELECT ALL t0.c2 FROM t0 WHERE ((NOT (((t0.c0) NOT NULL)))) UNION ALL SELECT ALL t0.c2 FROM t0 WHERE ((NOT ((NOT (((t0.c0) NOT NULL)))))) UNION ALL SELECT ALL t0.c2 FROM t0 WHERE ((((NOT (((t0.c0) NOT NULL)))) ISNULL));
SELECT ALL t0.c2 FROM t0;
SELECT DISTINCT t0.c0, rt0.c0, t0.c1, rt0.c1 FROM t0, rt0, v0;
SELECT DISTINCT t0.c0, rt0.c0, t0.c1, rt0.c1 FROM t0, rt0, v0 WHERE ((((((rt0.c2)<>(rt0.c1)), ABS(rt0.c1), (('N>DiḚx6') IS TRUE)))>=((((t0.c1)==(0Xffffffffca777247)), NULL, ((rt0.c2)||(rt0.c2)))))) UNION SELECT DISTINCT t0.c0, rt0.c0, t0.c1, rt0.c1 FROM t0, rt0, v0 WHERE ((NOT ((((((rt0.c2)!=(rt0.c1)), ABS(rt0.c1), (('N>DiḚx6') IS TRUE)))>=((((t0.c1)=(0Xffffffffca777247)), NULL, ((rt0.c2)||(rt0.c2)))))))) UNION SELECT DISTINCT t0.c0, rt0.c0, t0.c1, rt0.c1 FROM t0, rt0, v0 WHERE ((((((((rt0.c2)!=(rt0.c1)), ABS(rt0.c1), (('N>DiḚx6') IS TRUE)))>=((((t0.c1)==(0xffffffffca777247)), NULL, ((rt0.c2)||(rt0.c2)))))) ISNULL));
SELECT DISTINCT t0.c0, rt0.c0, t0.c1, rt0.c1 FROM t0, rt0, v0;
SELECT ALL rt0.c0, t0.c0, rt0.c3, t0.c1 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, rt0.c3, t0.c1;
SELECT rt0.c0, t0.c0, rt0.c3, t0.c1 FROM t0, rt0 WHERE (((((((0.3912279575150187)OR(t0.c1)))OR(rt0.c3)))*(rt0.c0))) GROUP BY rt0.c0, t0.c0, rt0.c3, t0.c1 UNION SELECT rt0.c0, t0.c0, rt0.c3, t0.c1 FROM t0, rt0 WHERE ((NOT (((((((0.3912279575150187)OR(t0.c1)))OR(rt0.c3)))*(rt0.c0))))) GROUP BY rt0.c0, t0.c0, rt0.c3, t0.c1 UNION SELECT rt0.c0, t0.c0, rt0.c3, t0.c1 FROM t0, rt0 WHERE (((((((((0.3912279575150187)OR(t0.c1)))OR(rt0.c3)))*(rt0.c0))) ISNULL)) GROUP BY rt0.c0, t0.c0, rt0.c3, t0.c1;
SELECT ALL rt0.c0, t0.c0, rt0.c3, t0.c1 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, rt0.c3, t0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((NOT (MAX(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((NOT (MAX(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((NOT (MAX(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((NOT (MAX(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM rt0, v0, t0 CROSS JOIN vt0 ON (NOT (((vt0.c0) IS FALSE)));
SELECT * FROM rt0, v0, t0 CROSS JOIN vt0 ON (NOT (((vt0.c0) IS FALSE))) WHERE (((0.5731733469353321) NOTNULL)) UNION ALL SELECT ALL * FROM rt0, v0, t0 CROSS JOIN vt0 ON (NOT (((vt0.c0) IS FALSE))) WHERE ((NOT (((0.5731733469353321) NOTNULL)))) UNION ALL SELECT ALL * FROM rt0, v0, t0 CROSS JOIN vt0 ON (NOT (((vt0.c0) IS FALSE))) WHERE (((((0.5731733469353321) NOTNULL)) ISNULL));
SELECT ALL * FROM rt0, v0, t0 CROSS JOIN vt0 ON (NOT (((vt0.c0) IS FALSE)));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((- (v0.c0)))IS NOT(v0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((- (v0.c0)))IS NOT(v0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((- (v0.c0)))IS NOT(v0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0, t0.c1, t0.c2 FROM v0 LEFT OUTER JOIN t0 ON ((((t0.c2))>((v0.c0))) IN ()) GROUP BY v0.c0, t0.c1, t0.c2;
SELECT ALL v0.c0, t0.c1, t0.c2 FROM v0 LEFT OUTER JOIN t0 ON ((((t0.c2))>((v0.c0))) IN ()) WHERE ('195906409') GROUP BY v0.c0, t0.c1, t0.c2 UNION SELECT v0.c0, t0.c1, t0.c2 FROM v0 LEFT OUTER JOIN t0 ON ((((t0.c2))>((v0.c0))) IN ()) WHERE ((NOT ('195906409'))) GROUP BY v0.c0, t0.c1, t0.c2 UNION SELECT ALL v0.c0, t0.c1, t0.c2 FROM v0 LEFT OUTER JOIN t0 ON ((((t0.c2))>((v0.c0))) IN ()) WHERE ((('195906409') ISNULL)) GROUP BY v0.c0, t0.c1, t0.c2;
SELECT ALL v0.c0, t0.c1, t0.c2 FROM v0 LEFT OUTER JOIN t0 ON ((((t0.c2))>((v0.c0))) IN ()) GROUP BY v0.c0, t0.c1, t0.c2;
SELECT ALL rt0.c3, vt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c3, vt0.c0;
SELECT rt0.c3, vt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c3, vt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c3, vt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c3, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, vt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c3, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, vt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c3, vt0.c0;
SELECT rt0.c3, vt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c3, vt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c3, vt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c3, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, vt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c3, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, vt0.c0 FROM rt0, vt0, v0 GROUP BY rt0.c3, vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)>>(vt0.c0)))AND(((((((((((((vt0.c0)AND(vt0.c0)))AND('')))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR(CAST(vt0.c0 AS REAL)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((((vt0.c0)>>(vt0.c0)))AND(((((((((((((vt0.c0)AND(vt0.c0)))AND('')))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR(CAST(vt0.c0 AS REAL)))))) UNION ALL SELECT ALL * FROM vt0 NOT INDEXED WHERE (((((((((vt0.c0)>>(vt0.c0)))AND(((((((((((((vt0.c0)AND(vt0.c0)))AND('')))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR(CAST(vt0.c0 AS REAL)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON ((((t0.c2) NOT BETWEEN (rt0.c2) AND (NULL)))<((((rt0.c0))<=((t0.c2))))) LEFT OUTER JOIN vt0 ON CAST(((((t0.c2)AND(vt0.c0)))OR(NULL)) AS TEXT);
SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON ((((t0.c2) NOT BETWEEN (rt0.c2) AND (NULL)))<((((rt0.c0))<=((t0.c2))))) LEFT OUTER JOIN vt0 ON CAST(((((t0.c2)AND(vt0.c0)))OR(NULL)) AS TEXT) WHERE (((CAST(t0.c2 AS NUMERIC)) BETWEEN (((t0.c1)+(rt0.c3))) AND (CAST(t0.c1 AS REAL)))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON ((((t0.c2) NOT BETWEEN (rt0.c2) AND (NULL)))<((((rt0.c0))<=((t0.c2))))) LEFT OUTER JOIN vt0 ON CAST(((((t0.c2)AND(vt0.c0)))OR(NULL)) AS TEXT) WHERE ((NOT (((CAST(t0.c2 AS NUMERIC)) BETWEEN (((t0.c1)+(rt0.c3))) AND (CAST(t0.c1 AS REAL)))))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON ((((t0.c2) NOT BETWEEN (rt0.c2) AND (NULL)))<((((rt0.c0))<=((t0.c2))))) LEFT OUTER JOIN vt0 ON CAST(((((t0.c2)AND(vt0.c0)))OR(NULL)) AS TEXT) WHERE (((((CAST(t0.c2 AS NUMERIC)) BETWEEN (((t0.c1)+(rt0.c3))) AND (CAST(t0.c1 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON ((((t0.c2) NOT BETWEEN (rt0.c2) AND (NULL)))<((((rt0.c0))<=((t0.c2))))) LEFT OUTER JOIN vt0 ON CAST(((((t0.c2)AND(vt0.c0)))OR(NULL)) AS TEXT);
SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM vt0, rt0 RIGHT OUTER JOIN t0 ON t0.c1 RIGHT OUTER JOIN v0 ON '-944729989' COLLATE BINARY GROUP BY rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM vt0, rt0 RIGHT OUTER JOIN t0 ON t0.c1 RIGHT OUTER JOIN v0 ON '-944729989' COLLATE BINARY WHERE ((((rt0.c3 IN (rt0.c3)))IS NOT(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2))))) GROUP BY rt0.c2, rt0.c0, rt0.c3 UNION SELECT rt0.c2, rt0.c0, rt0.c3 FROM vt0, rt0 RIGHT OUTER JOIN t0 ON t0.c1 RIGHT OUTER JOIN v0 ON '-944729989' COLLATE BINARY WHERE ((NOT ((((rt0.c3 IN (rt0.c3)))IS NOT(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2))))))) GROUP BY rt0.c2, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM vt0, rt0 RIGHT OUTER JOIN t0 ON t0.c1 RIGHT OUTER JOIN v0 ON '-944729989' COLLATE BINARY WHERE ((((((rt0.c3 IN (rt0.c3)))IS NOT(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM vt0, rt0 RIGHT OUTER JOIN t0 ON t0.c1 RIGHT OUTER JOIN v0 ON '-944729989' COLLATE BINARY GROUP BY rt0.c2, rt0.c0, rt0.c3;
SELECT ALL t0.c1, t0.c0, rt0.c2 FROM rt0, t0, v0 GROUP BY t0.c1, t0.c0, rt0.c2;
SELECT ALL t0.c1, t0.c0, rt0.c2 FROM rt0, t0, v0 GROUP BY t0.c1, t0.c0, rt0.c2 HAVING ((((((((GROUP_CONCAT(TOTAL(SUM(rt0.c0))))OR(((GROUP_CONCAT(AVG(AVG(t0.c1)))) ISNULL))))AND(CASE WHEN rt0.c1 THEN AVG(GROUP_CONCAT(TOTAL(GROUP_CONCAT(MAX(x''))))) END)))AND(0.301355303382429)))OR((+ (MIN(SUM(TOTAL(t0.c2))))))) UNION ALL SELECT ALL t0.c1, t0.c0, rt0.c2 FROM rt0, t0, v0 GROUP BY t0.c1, t0.c0, rt0.c2 HAVING (NOT (((((((((GROUP_CONCAT(TOTAL(SUM(rt0.c0))))OR(((GROUP_CONCAT(AVG(AVG(t0.c1)))) ISNULL))))AND(CASE WHEN rt0.c1 THEN AVG(GROUP_CONCAT(TOTAL(GROUP_CONCAT(MAX(x''))))) END)))AND(0.301355303382429)))OR((+ (MIN(SUM(TOTAL(t0.c2))))))))) UNION ALL SELECT ALL t0.c1, t0.c0, rt0.c2 FROM rt0, t0, v0 GROUP BY t0.c1, t0.c0, rt0.c2 HAVING ((((((((((GROUP_CONCAT(TOTAL(SUM(rt0.c0))))OR(((GROUP_CONCAT(AVG(AVG(t0.c1)))) ISNULL))))AND(CASE WHEN rt0.c1 THEN AVG(GROUP_CONCAT(TOTAL(GROUP_CONCAT(MAX(x''))))) END)))AND(0.301355303382429)))OR((+ (MIN(SUM(TOTAL(t0.c2)))))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON rtreenode(rt0.c2, ((('0.28414046190932474'))=((rt0.c2))));
SELECT rt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON rtreenode(rt0.c2, ((('0.28414046190932474'))==((rt0.c2)))) WHERE (((rt0.c3 COLLATE RTRIM)<<(((rt0.c2)GLOB(rt0.c2))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON rtreenode(rt0.c2, ((('0.28414046190932474'))=((rt0.c2)))) WHERE ((NOT (((rt0.c3 COLLATE RTRIM)<<(((rt0.c2)GLOB(rt0.c2))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON rtreenode(rt0.c2, ((('0.28414046190932474'))==((rt0.c2)))) WHERE (((((rt0.c3 COLLATE RTRIM)<<(((rt0.c2)GLOB(rt0.c2))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON rtreenode(rt0.c2, ((('0.28414046190932474'))=((rt0.c2))));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END AS TEXT)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END AS TEXT)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 NOT INDEXED WHERE (((((((rt0.c3)OR(rt0.c2)))OR(((rt0.c3) ISNULL))))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c3)OR(rt0.c2)))OR(((rt0.c3) ISNULL))))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))))) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE (((((((((rt0.c3)OR(rt0.c2)))OR(((rt0.c3) ISNULL))))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING TOTAL('1242603742') UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (TOTAL('1242603742'))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((TOTAL('1242603742')) ISNULL);
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING TOTAL('1242603742') UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (TOTAL('1242603742'))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((TOTAL('1242603742')) ISNULL);
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL * FROM t0 INNER JOIN rt0 ON SQLITE_COMPILEOPTION_USED(CASE WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN t0.c2 WHEN rt0.c0 THEN t0.c1 END);
SELECT ALL * FROM t0 INNER JOIN rt0 ON SQLITE_COMPILEOPTION_USED(CASE WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN t0.c2 WHEN rt0.c0 THEN t0.c1 END) WHERE (t0.c1) UNION ALL SELECT * FROM t0 INNER JOIN rt0 ON SQLITE_COMPILEOPTION_USED(CASE WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN t0.c2 WHEN rt0.c0 THEN t0.c1 END) WHERE ((NOT (t0.c1))) UNION ALL SELECT ALL * FROM t0 INNER JOIN rt0 ON SQLITE_COMPILEOPTION_USED(CASE WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN t0.c2 WHEN rt0.c0 THEN t0.c1 END) WHERE (((t0.c1) ISNULL));
SELECT ALL * FROM t0 INNER JOIN rt0 ON SQLITE_COMPILEOPTION_USED(CASE WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN t0.c2 WHEN rt0.c0 THEN t0.c1 END);
SELECT DISTINCT * FROM v0, vt0, t0;
SELECT DISTINCT * FROM v0, vt0, t0 WHERE (((((vt0.c0)||(t0.c2)))LIKE(((t0.c2)==(t0.c2))))) UNION SELECT DISTINCT * FROM v0, vt0, t0 WHERE ((NOT (((((vt0.c0)||(t0.c2)))LIKE(((t0.c2)=(t0.c2))))))) UNION SELECT DISTINCT * FROM v0, vt0, t0 WHERE (((((((vt0.c0)||(t0.c2)))LIKE(((t0.c2)==(t0.c2))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, t0;
SELECT t0.c1, vt0.c0, t0.c0, t0.c2 FROM vt0, t0 GROUP BY t0.c1, vt0.c0, t0.c0, t0.c2;
SELECT ALL t0.c1, vt0.c0, t0.c0, t0.c2 FROM vt0, t0 WHERE ((~ (((((t0.c1)OR(vt0.c0)))AND(t0.c2))))) GROUP BY t0.c1, vt0.c0, t0.c0, t0.c2 UNION SELECT ALL t0.c1, vt0.c0, t0.c0, t0.c2 FROM vt0, t0 WHERE ((NOT ((~ (((((t0.c1)OR(vt0.c0)))AND(t0.c2))))))) GROUP BY t0.c1, vt0.c0, t0.c0, t0.c2 UNION SELECT t0.c1, vt0.c0, t0.c0, t0.c2 FROM vt0, t0 WHERE ((((~ (((((t0.c1)OR(vt0.c0)))AND(t0.c2))))) ISNULL)) GROUP BY t0.c1, vt0.c0, t0.c0, t0.c2;
SELECT t0.c1, vt0.c0, t0.c0, t0.c2 FROM vt0, t0 GROUP BY t0.c1, vt0.c0, t0.c0, t0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX((+ (COUNT(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX((+ (COUNT(GROUP_CONCAT(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX((+ (COUNT(GROUP_CONCAT(v0.c0)))))) ISNULL);
SELECT vt0.c0, rt0.c3, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON (((t0.c2 IN ())) NOT BETWEEN (NULLIF(x'', vt0.c0)) AND (((vt0.c0)|(t0.c1)))) CROSS JOIN v0 ON ((CAST(t0.c2 AS REAL)) NOT BETWEEN (((rt0.c1)IS NOT(vt0.c0))) AND ((t0.c1 IN (t0.c2)))) CROSS JOIN vt0 ON (((((t0.c1, t0.c0, rt0.c0)) BETWEEN (('IAR2', 0.10783726435453489, t0.c2)) AND ((rt0.c3, vt0.c0, t0.c2))))<=(((rt0.c2)>(rt0.c3))));
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ((- ((- (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT ((- ((- (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((((- ((- (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL t0.c2, t0.c1, rt0.c1, rt0.c3, rt0.c0 FROM rt0 CROSS JOIN t0 ON LAST_INSERT_ROWID() GROUP BY t0.c2, t0.c1, rt0.c1, rt0.c3, rt0.c0;
SELECT t0.c2, t0.c1, rt0.c1, rt0.c3, rt0.c0 FROM rt0 CROSS JOIN t0 ON LAST_INSERT_ROWID() WHERE (CAST(rt0.c3 COLLATE RTRIM AS REAL)) GROUP BY t0.c2, t0.c1, rt0.c1, rt0.c3, rt0.c0 UNION SELECT t0.c2, t0.c1, rt0.c1, rt0.c3, rt0.c0 FROM rt0 CROSS JOIN t0 ON LAST_INSERT_ROWID() WHERE ((NOT (CAST(rt0.c3 COLLATE RTRIM AS REAL)))) GROUP BY t0.c2, t0.c1, rt0.c1, rt0.c3, rt0.c0 UNION SELECT ALL t0.c2, t0.c1, rt0.c1, rt0.c3, rt0.c0 FROM rt0 CROSS JOIN t0 ON LAST_INSERT_ROWID() WHERE (((CAST(rt0.c3 COLLATE RTRIM AS REAL)) ISNULL)) GROUP BY t0.c2, t0.c1, rt0.c1, rt0.c3, rt0.c0;
SELECT ALL t0.c2, t0.c1, rt0.c1, rt0.c3, rt0.c0 FROM rt0 CROSS JOIN t0 ON LAST_INSERT_ROWID() GROUP BY t0.c2, t0.c1, rt0.c1, rt0.c3, rt0.c0;
SELECT v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c1;
SELECT ALL v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 NOT INDEXED GROUP BY v0.c0, rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(rt0.c1))OR(((SUM(TOTAL(MAX(SUM(x''))))) NOT NULL))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c1 HAVING (NOT (((GROUP_CONCAT(rt0.c1))OR(((SUM(TOTAL(MAX(SUM(x''))))) NOT NULL))))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c1 HAVING ((((GROUP_CONCAT(rt0.c1))OR(((SUM(TOTAL(MAX(SUM(x''))))) NOT NULL)))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((NULLIF(DISTINCT t0.c0, t0.c1)) BETWEEN (((t0.c2)<=('rv'))) AND (t0.c1))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((NULLIF(DISTINCT t0.c0, t0.c1)) BETWEEN (((t0.c2)<=('rv'))) AND (t0.c1))))) UNION ALL SELECT * FROM t0 WHERE (((((NULLIF(DISTINCT t0.c0, t0.c1)) BETWEEN (((t0.c2)<=('rv'))) AND (t0.c1))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, v0.c0 FROM v0, rt0 WHERE ((((v0.c0, rt0.c2, v0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER), (+ (rt0.c2)), (('2089876096')+(rt0.c3)))) AND ((((rt0.c1)!=(rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, 1140837059)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, v0.c0 FROM v0, rt0 WHERE ((NOT ((((v0.c0, rt0.c2, v0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER), (+ (rt0.c2)), (('2089876096')+(rt0.c3)))) AND ((((rt0.c1)!=(rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, 1140837059)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, v0.c0 FROM v0, rt0 WHERE ((((((v0.c0, rt0.c2, v0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER), (+ (rt0.c2)), (('2089876096')+(rt0.c3)))) AND ((((rt0.c1)<>(rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, 1140837059)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, v0.c0 FROM v0, rt0;
SELECT vt0.c0, rt0.c3, v0.c0 FROM vt0, rt0 CROSS JOIN v0 ON rt0.c1 GROUP BY vt0.c0, rt0.c3, v0.c0;
SELECT vt0.c0, rt0.c3, v0.c0 FROM vt0, rt0 CROSS JOIN v0 ON rt0.c1 WHERE (CAST(0.4675524796042383 AS REAL)) GROUP BY vt0.c0, rt0.c3, v0.c0 UNION SELECT ALL vt0.c0, rt0.c3, v0.c0 FROM vt0, rt0 CROSS JOIN v0 ON rt0.c1 WHERE ((NOT (CAST(0.4675524796042383 AS REAL)))) GROUP BY vt0.c0, rt0.c3, v0.c0 UNION SELECT ALL vt0.c0, rt0.c3, v0.c0 FROM vt0, rt0 CROSS JOIN v0 ON rt0.c1 WHERE (((CAST(0.4675524796042383 AS REAL)) ISNULL)) GROUP BY vt0.c0, rt0.c3, v0.c0;
SELECT vt0.c0, rt0.c3, v0.c0 FROM vt0, rt0 CROSS JOIN v0 ON rt0.c1 GROUP BY vt0.c0, rt0.c3, v0.c0;
SELECT vt0.c0, t0.c1 FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((HEX('-1e500')) NOT NULL) GROUP BY vt0.c0, t0.c1;
SELECT ALL vt0.c0, t0.c1 FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((HEX('-1e500')) NOT NULL) GROUP BY vt0.c0, t0.c1 HAVING ((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c0)) COLLATE BINARY UNION ALL SELECT vt0.c0, t0.c1 FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((HEX('-1e500')) NOT NULL) GROUP BY vt0.c0, t0.c1 HAVING (NOT (((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c0)) COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0, t0.c1 FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((HEX('-1e500')) NOT NULL) GROUP BY vt0.c0, t0.c1 HAVING ((((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c0)) COLLATE BINARY) ISNULL);
SELECT vt0.c0, t0.c1 FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((HEX('-1e500')) NOT NULL) GROUP BY vt0.c0, t0.c1;
SELECT ALL vt0.c0, t0.c1 FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((HEX('-1e500')) NOT NULL) GROUP BY vt0.c0, t0.c1 HAVING ((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c0)) COLLATE BINARY UNION ALL SELECT vt0.c0, t0.c1 FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((HEX('-1e500')) NOT NULL) GROUP BY vt0.c0, t0.c1 HAVING (NOT (((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c0)) COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0, t0.c1 FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((HEX('-1e500')) NOT NULL) GROUP BY vt0.c0, t0.c1 HAVING ((((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c0)) COLLATE BINARY) ISNULL);
SELECT vt0.c0, t0.c1 FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((HEX('-1e500')) NOT NULL) GROUP BY vt0.c0, t0.c1;
SELECT rt0.c0, rt0.c2 FROM rt0, vt0;
SELECT rt0.c0, rt0.c2 FROM rt0, vt0 WHERE (x'7b2c') UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (x'7b2c'))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 NOT INDEXED, vt0 WHERE (((x'7b2c') ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c1, t0.c1, v0.c0, t0.c0, t0.c2, rt0.c3 FROM t0, rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c1, t0.c1, v0.c0, t0.c0, t0.c2, rt0.c3 FROM t0, rt0, v0 WHERE ((((t0.c0 IN (0.9418340357967637)))==((+ (rt0.c2))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, t0.c1, v0.c0, t0.c0, t0.c2, rt0.c3 FROM t0, rt0, v0 WHERE ((NOT ((((t0.c0 IN (0.9418340357967637)))==((+ (rt0.c2))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, t0.c1, v0.c0, t0.c0, t0.c2, rt0.c3 FROM t0, rt0, v0 WHERE ((((((t0.c0 IN (0.9418340357967637)))=((+ (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, t0.c1, v0.c0, t0.c0, t0.c2, rt0.c3 FROM t0, rt0, v0;
SELECT rt0.c2, t0.c1, t0.c0, v0.c0, rt0.c3 FROM rt0, v0, vt0, t0 GROUP BY rt0.c2, t0.c1, t0.c0, v0.c0, rt0.c3;
SELECT rt0.c2, t0.c1, t0.c0, v0.c0, rt0.c3 FROM rt0, v0, vt0, t0 WHERE (((((((v0.c0)*(t0.c0)))OR((((t0.c0, rt0.c1, vt0.c0))==((t0.c1, t0.c2, rt0.c2))))))OR((t0.c2 IN ())))) GROUP BY rt0.c2, t0.c1, t0.c0, v0.c0, rt0.c3 UNION SELECT rt0.c2, t0.c1, t0.c0, v0.c0, rt0.c3 FROM rt0, v0 NOT INDEXED, vt0, t0 WHERE ((NOT (((((((v0.c0)*(t0.c0)))OR((((t0.c0, rt0.c1, vt0.c0))==((t0.c1, t0.c2, rt0.c2))))))OR((t0.c2 IN ())))))) GROUP BY rt0.c2, t0.c1, t0.c0, v0.c0, rt0.c3 UNION SELECT ALL rt0.c2, t0.c1, t0.c0, v0.c0, rt0.c3 FROM rt0, v0, vt0, t0 WHERE (((((((((v0.c0)*(t0.c0)))OR((((t0.c0, rt0.c1, vt0.c0))==((t0.c1, t0.c2, rt0.c2))))))OR((t0.c2 IN ())))) ISNULL)) GROUP BY rt0.c2, t0.c1, t0.c0, v0.c0, rt0.c3;
SELECT rt0.c2, t0.c1, t0.c0, v0.c0, rt0.c3 FROM rt0, v0, vt0, t0 GROUP BY rt0.c2, t0.c1, t0.c0, v0.c0, rt0.c3;
SELECT ALL t0.c0, rt0.c3 FROM t0, rt0 INNER JOIN v0 ON rt0.c1 GROUP BY t0.c0, rt0.c3;
SELECT t0.c0, rt0.c3 FROM t0, rt0 INNER JOIN v0 ON rt0.c1 GROUP BY t0.c0, rt0.c3 HAVING ((COUNT(*)) BETWEEN (rt0.c2 COLLATE BINARY) AND (GROUP_CONCAT(MIN('1565752637')))) UNION ALL SELECT ALL t0.c0, rt0.c3 FROM t0, rt0 INNER JOIN v0 ON rt0.c1 GROUP BY t0.c0, rt0.c3 HAVING (NOT (((COUNT(*)) BETWEEN (rt0.c2 COLLATE BINARY) AND (GROUP_CONCAT(MIN('1565752637')))))) UNION ALL SELECT t0.c0, rt0.c3 FROM t0, rt0 INNER JOIN v0 ON rt0.c1 GROUP BY t0.c0, rt0.c3 HAVING ((((COUNT(*)) BETWEEN (rt0.c2 COLLATE BINARY) AND (GROUP_CONCAT(MIN('1565752637'))))) ISNULL);
SELECT ALL * FROM t0, vt0 NATURAL JOIN v0;
SELECT * FROM t0, vt0 NATURAL JOIN v0 WHERE (((vt0.c0) NOT BETWEEN (t0.c1) AND (vt0.c0)) COLLATE BINARY) UNION ALL SELECT * FROM t0, vt0 NATURAL JOIN v0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (t0.c1) AND (vt0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM t0, vt0 NATURAL JOIN v0 WHERE (((((vt0.c0) NOT BETWEEN (t0.c1) AND (vt0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM t0, vt0 NATURAL JOIN v0;
SELECT DISTINCT v0.c0, rt0.c3, vt0.c0 FROM vt0, rt0, v0;
SELECT DISTINCT v0.c0, rt0.c3, vt0.c0 FROM vt0, rt0, v0 WHERE (rt0.c1) UNION SELECT DISTINCT v0.c0, rt0.c3, vt0.c0 FROM vt0, rt0, v0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT v0.c0, rt0.c3, vt0.c0 FROM vt0, rt0 NOT INDEXED, v0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT v0.c0, rt0.c3, vt0.c0 FROM vt0, rt0, v0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0 IN (t0.c2)))OR((- (NULL)))))OR((t0.c1 IN (t0.c1))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0 IN (t0.c2)))OR((- (NULL)))))OR((t0.c1 IN (t0.c1))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((((t0.c0 IN (t0.c2)))OR((- (NULL)))))OR((t0.c1 IN (t0.c1))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t0 GROUP BY v0.c0 HAVING SUM((+ (t0.c1))) UNION ALL SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0 HAVING (NOT (SUM((+ (t0.c1))))) UNION ALL SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0 HAVING ((SUM((+ (t0.c1)))) ISNULL);
SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t0 GROUP BY v0.c0 HAVING SUM((+ (t0.c1))) UNION ALL SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0 HAVING (NOT (SUM((+ (t0.c1))))) UNION ALL SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0 HAVING ((SUM((+ (t0.c1)))) ISNULL);
SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0;
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (((((x'4e88')OR(((rt0.c0)IS NOT(rt0.c1)))))AND((((rt0.c3, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c2, vt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c3, rt0.c2)))))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (((((x'4e88')OR(((rt0.c0)IS NOT(rt0.c1)))))AND((((rt0.c3, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c2, vt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c3, rt0.c2)))))))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((((((x'4e88')OR(((rt0.c0)IS NOT(rt0.c1)))))AND((((rt0.c3, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c2, vt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c3, rt0.c2)))))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT rt0.c0 FROM rt0, vt0, t0;
SELECT DISTINCT rt0.c0 FROM rt0, vt0, t0 WHERE (((((((t0.c0) ISNULL))AND(0.9193983625609612)))AND(((rt0.c2)OR(rt0.c2))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt0, t0 WHERE ((NOT (((((((t0.c0) ISNULL))AND(0.9193983625609612)))AND(((rt0.c2)OR(rt0.c2))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt0, t0 WHERE (((((((((t0.c0) ISNULL))AND(0.9193983625609612)))AND(((rt0.c2)OR(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, vt0, t0;
SELECT t0.c2, t0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0, vt0 WHERE (((NULL) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM t0, vt0 WHERE ((NOT (((NULL) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM))) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM t0, vt0 WHERE (((((NULL) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM rt0, vt0, t0, v0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM rt0, vt0, t0, v0 GROUP BY vt0.c0, t0.c0 HAVING CASE WHEN CASE rt0.c0  WHEN COUNT(TOTAL(MAX(vt0.c0))) THEN COUNT(t0.c1) WHEN COUNT(*) THEN t0.c1 WHEN rt0.c1 THEN AVG(AVG(AVG(TOTAL(rt0.c1)))) WHEN -2036731022 THEN t0.c1 WHEN t0.c1 THEN rt0.c3 END THEN ((t0.c2) NOT NULL) END UNION ALL SELECT vt0.c0, t0.c0 FROM rt0, vt0, t0, v0 GROUP BY vt0.c0, t0.c0 HAVING (NOT (CASE WHEN CASE rt0.c0  WHEN COUNT(TOTAL(MAX(vt0.c0))) THEN COUNT(t0.c1) WHEN COUNT(*) THEN t0.c1 WHEN rt0.c1 THEN AVG(AVG(AVG(TOTAL(rt0.c1)))) WHEN -2036731022 THEN t0.c1 WHEN t0.c1 THEN rt0.c3 END THEN ((t0.c2) NOT NULL) END)) UNION ALL SELECT vt0.c0, t0.c0 FROM rt0, vt0, t0, v0 GROUP BY vt0.c0, t0.c0 HAVING ((CASE WHEN CASE rt0.c0  WHEN COUNT(TOTAL(MAX(vt0.c0))) THEN COUNT(t0.c1) WHEN COUNT(*) THEN t0.c1 WHEN rt0.c1 THEN AVG(AVG(AVG(TOTAL(rt0.c1)))) WHEN -2036731022 THEN t0.c1 WHEN t0.c1 THEN rt0.c3 END THEN ((t0.c2) NOT NULL) END) ISNULL);
SELECT t0.c2, t0.c1, t0.c0 FROM t0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 WHERE (CAST((~ (t0.c1)) AS REAL)) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT (CAST((~ (t0.c1)) AS REAL)))) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (((CAST((~ (t0.c1)) AS REAL)) ISNULL));
SELECT t0.c2, t0.c1, t0.c0 FROM t0;
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT DISTINCT * FROM v0, vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c1))==((rt0.c0))))) AND ((0.7772807734265654)))) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN (((((rt0.c1))==((rt0.c0))))) AND ((0.7772807734265654)))))) UNION SELECT DISTINCT * FROM v0, vt0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN (((((rt0.c1))=((rt0.c0))))) AND ((0.7772807734265654)))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, rt0;
SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0 WHERE (highlight((t0.c1 IN ()), CASE WHEN -674067895 THEN t0.c0 ELSE t0.c1 END, ((((t0.c2)AND(t0.c2)))AND(t0.c0)), t0.c2 COLLATE BINARY)) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM t0 WHERE ((NOT (highlight((t0.c1 IN ()), CASE WHEN -674067895 THEN t0.c0 ELSE t0.c1 END, ((((t0.c2)AND(t0.c2)))AND(t0.c0)), t0.c2 COLLATE BINARY)))) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM t0 WHERE (((highlight((t0.c1 IN ()), CASE WHEN -674067895 THEN t0.c0 ELSE t0.c1 END, ((((t0.c2)AND(t0.c2)))AND(t0.c0)), t0.c2 COLLATE BINARY)) ISNULL)) GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT vt0.c0 FROM t0 CROSS JOIN vt0 ON NULLIF(t0.c2, ((((v0.c0)OR(t0.c2)))OR(vt0.c0))) INNER JOIN v0 ON CASE (((vt0.c0, t0.c0, t0.c2)) BETWEEN ((vt0.c0, v0.c0, t0.c0)) AND ((t0.c2, t0.c2, t0.c2)))  WHEN CASE x'614fdc2b'  WHEN vt0.c0 THEN t0.c2 END THEN ((((((((vt0.c0)OR(t0.c0)))AND(v0.c0)))AND(t0.c1)))OR(t0.c2)) END GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM t0 CROSS JOIN vt0 ON NULLIF(t0.c2, ((((v0.c0)OR(t0.c2)))OR(vt0.c0))) INNER JOIN v0 ON CASE (((vt0.c0, t0.c0, t0.c2)) BETWEEN ((vt0.c0, v0.c0, t0.c0)) AND ((t0.c2, t0.c2, t0.c2)))  WHEN CASE x'614fdc2b'  WHEN vt0.c0 THEN t0.c2 END THEN ((((((((vt0.c0)OR(t0.c0)))AND(v0.c0)))AND(t0.c1)))OR(t0.c2)) END GROUP BY vt0.c0 HAVING ((MAX(MIN(MAX(AVG(t0.c1))))) ISNULL) UNION ALL SELECT ALL vt0.c0 FROM t0 CROSS JOIN vt0 ON NULLIF(t0.c2, ((((v0.c0)OR(t0.c2)))OR(vt0.c0))) INNER JOIN v0 ON CASE (((vt0.c0, t0.c0, t0.c2)) BETWEEN ((vt0.c0, v0.c0, t0.c0)) AND ((t0.c2, t0.c2, t0.c2)))  WHEN CASE x'614fdc2b'  WHEN vt0.c0 THEN t0.c2 END THEN ((((((((vt0.c0)OR(t0.c0)))AND(v0.c0)))AND(t0.c1)))OR(t0.c2)) END GROUP BY vt0.c0 HAVING (NOT (((MAX(MIN(MAX(AVG(t0.c1))))) ISNULL))) UNION ALL SELECT vt0.c0 FROM t0 CROSS JOIN vt0 ON NULLIF(t0.c2, ((((v0.c0)OR(t0.c2)))OR(vt0.c0))) INNER JOIN v0 ON CASE (((vt0.c0, t0.c0, t0.c2)) BETWEEN ((vt0.c0, v0.c0, t0.c0)) AND ((t0.c2, t0.c2, t0.c2)))  WHEN CASE x'614fdc2b'  WHEN vt0.c0 THEN t0.c2 END THEN ((((((((vt0.c0)OR(t0.c0)))AND(v0.c0)))AND(t0.c1)))OR(t0.c2)) END GROUP BY vt0.c0 HAVING ((((MAX(MIN(MAX(AVG(t0.c1))))) ISNULL)) ISNULL);
SELECT ALL MAX(0.0702507283585011) FROM vt0;
SELECT vt0.c0, rt0.c1, v0.c0 FROM t0, v0, rt0, vt0;
SELECT ALL vt0.c0, rt0.c1, v0.c0 FROM t0, v0, rt0, vt0 WHERE (CAST(((v0.c0)<<(t0.c2)) AS TEXT)) UNION ALL SELECT ALL vt0.c0, rt0.c1, v0.c0 FROM t0, v0, rt0, vt0 WHERE ((NOT (CAST(((v0.c0)<<(t0.c2)) AS TEXT)))) UNION ALL SELECT vt0.c0, rt0.c1, v0.c0 FROM t0, v0, rt0, vt0 WHERE (((CAST(((v0.c0)<<(t0.c2)) AS TEXT)) ISNULL));
SELECT vt0.c0, rt0.c1, v0.c0 FROM t0, v0, rt0, vt0;
SELECT DISTINCT * FROM v0 INNER JOIN t0 ON (+ (CAST(t0.c0 AS TEXT)));
SELECT DISTINCT * FROM v0 INNER JOIN t0 ON (+ (CAST(t0.c0 AS TEXT))) WHERE (t0.c2) UNION SELECT DISTINCT * FROM v0 INNER JOIN t0 ON (+ (CAST(t0.c0 AS TEXT))) WHERE ((NOT (t0.c2))) UNION SELECT DISTINCT * FROM v0 INNER JOIN t0 ON (+ (CAST(t0.c0 AS TEXT))) WHERE (((t0.c2) ISNULL));
SELECT DISTINCT * FROM v0 INNER JOIN t0 ON (+ (CAST(t0.c0 AS TEXT)));
SELECT ALL rt0.c1, vt0.c0, t0.c1, t0.c2, t0.c0 FROM rt0 CROSS JOIN t0 ON (((vt0.c0 IN ()))OR(rt0.c3 COLLATE NOCASE)) RIGHT OUTER JOIN vt0 ON ((rt0.c0) NOT BETWEEN (1536514518) AND (((t0.c1) BETWEEN (t0.c2) AND (NULL)))) GROUP BY rt0.c1, vt0.c0, t0.c1, t0.c2, t0.c0;
SELECT rt0.c1, vt0.c0, t0.c1, t0.c2, t0.c0 FROM rt0 CROSS JOIN t0 ON (((vt0.c0 IN ()))OR(rt0.c3 COLLATE NOCASE)) RIGHT OUTER JOIN vt0 ON ((rt0.c0) NOT BETWEEN (1536514518) AND (((t0.c1) BETWEEN (t0.c2) AND (NULL)))) WHERE (((ABS(DISTINCT rt0.c0))IS(((t0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) GROUP BY rt0.c1, vt0.c0, t0.c1, t0.c2, t0.c0 UNION SELECT rt0.c1, vt0.c0, t0.c1, t0.c2, t0.c0 FROM rt0 CROSS JOIN t0 ON (((vt0.c0 IN ()))OR(rt0.c3 COLLATE NOCASE)) RIGHT OUTER JOIN vt0 ON ((rt0.c0) NOT BETWEEN (1536514518) AND (((t0.c1) BETWEEN (t0.c2) AND (NULL)))) WHERE ((NOT (((ABS(DISTINCT rt0.c0))IS(((t0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))))) GROUP BY rt0.c1, vt0.c0, t0.c1, t0.c2, t0.c0 UNION SELECT ALL rt0.c1, vt0.c0, t0.c1, t0.c2, t0.c0 FROM rt0 CROSS JOIN t0 ON (((vt0.c0 IN ()))OR(rt0.c3 COLLATE NOCASE)) RIGHT OUTER JOIN vt0 ON ((rt0.c0) NOT BETWEEN (1536514518) AND (((t0.c1) BETWEEN (t0.c2) AND (NULL)))) WHERE (((((ABS(DISTINCT rt0.c0))IS(((t0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c1, vt0.c0, t0.c1, t0.c2, t0.c0;
SELECT ALL rt0.c1, vt0.c0, t0.c1, t0.c2, t0.c0 FROM rt0 CROSS JOIN t0 ON (((vt0.c0 IN ()))OR(rt0.c3 COLLATE NOCASE)) RIGHT OUTER JOIN vt0 ON ((rt0.c0) NOT BETWEEN (1536514518) AND (((t0.c1) BETWEEN (t0.c2) AND (NULL)))) GROUP BY rt0.c1, vt0.c0, t0.c1, t0.c2, t0.c0;
SELECT ALL v0.c0 FROM vt0, v0 CROSS JOIN t0 ON CASE (t0.c2 IN ())  WHEN CAST(t0.c2 AS TEXT) THEN (- (t0.c1)) WHEN CASE WHEN v0.c0 THEN NULL END THEN json_array(vt0.c0, x'') WHEN CASE WHEN t0.c2 THEN t0.c0 ELSE v0.c0 END THEN ((((t0.c0)OR(t0.c2)))OR(t0.c2)) ELSE (((vt0.c0))<((t0.c1))) END GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 CROSS JOIN t0 ON CASE (t0.c2 IN ())  WHEN CAST(t0.c2 AS TEXT) THEN (- (t0.c1)) WHEN CASE WHEN v0.c0 THEN NULL END THEN json_array(vt0.c0, x'') WHEN CASE WHEN t0.c2 THEN t0.c0 ELSE v0.c0 END THEN ((((t0.c0)OR(t0.c2)))OR(t0.c2)) ELSE (((vt0.c0))<((t0.c1))) END GROUP BY v0.c0 HAVING MAX(COUNT(MAX(MIN(GROUP_CONCAT(TOTAL(MAX(TOTAL(COUNT(v0.c0))))))))) UNION ALL SELECT v0.c0 FROM vt0, v0 CROSS JOIN t0 ON CASE (t0.c2 IN ())  WHEN CAST(t0.c2 AS TEXT) THEN (- (t0.c1)) WHEN CASE WHEN v0.c0 THEN NULL END THEN json_array(vt0.c0, x'') WHEN CASE WHEN t0.c2 THEN t0.c0 ELSE v0.c0 END THEN ((((t0.c0)OR(t0.c2)))OR(t0.c2)) ELSE (((vt0.c0))<((t0.c1))) END GROUP BY v0.c0 HAVING (NOT (MAX(COUNT(MAX(MIN(GROUP_CONCAT(TOTAL(MAX(TOTAL(COUNT(v0.c0))))))))))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 CROSS JOIN t0 ON CASE (t0.c2 IN ())  WHEN CAST(t0.c2 AS TEXT) THEN (- (t0.c1)) WHEN CASE WHEN v0.c0 THEN NULL END THEN json_array(vt0.c0, x'') WHEN CASE WHEN t0.c2 THEN t0.c0 ELSE v0.c0 END THEN ((((t0.c0)OR(t0.c2)))OR(t0.c2)) ELSE (((vt0.c0))<((t0.c1))) END GROUP BY v0.c0 HAVING ((MAX(COUNT(MAX(MIN(GROUP_CONCAT(TOTAL(MAX(TOTAL(COUNT(v0.c0)))))))))) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (CAST(CASE WHEN rt0.c3 THEN rt0.c0 END AS NUMERIC)) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c3 THEN rt0.c0 END AS NUMERIC)))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((CAST(CASE WHEN rt0.c3 THEN rt0.c0 END AS NUMERIC)) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT t0.c0, rt0.c2 FROM t0 RIGHT OUTER JOIN v0 ON CAST(((t0.c2)<=(t0.c2)) AS BLOB) RIGHT OUTER JOIN vt0 ON ((((v0.c0) BETWEEN (v0.c0) AND (0.7022620576459928)))<=(((((vt0.c0)AND(rt0.c2)))OR(v0.c0)))) LEFT OUTER JOIN rt0 ON (((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((t0.c0))))==(((x'')/(rt0.c0))));
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((((t0.c2)) NOT BETWEEN (((((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c1))))) AND ((t0.c2 COLLATE RTRIM)))) GROUP BY t0.c0, t0.c2, t0.c1 UNION SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((NOT ((((t0.c2)) NOT BETWEEN (((((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c1))))) AND ((t0.c2 COLLATE RTRIM)))))) GROUP BY t0.c0, t0.c2, t0.c1 UNION SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((((((t0.c2)) NOT BETWEEN (((((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c1))))) AND ((t0.c2 COLLATE RTRIM)))) ISNULL)) GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT ALL v0.c0, rt0.c2, t0.c2, rt0.c0, rt0.c1, rt0.c3, vt0.c0, t0.c1, t0.c0 FROM rt0, vt0, v0, t0 GROUP BY v0.c0, rt0.c2, t0.c2, rt0.c0, rt0.c1, rt0.c3, vt0.c0, t0.c1, t0.c0;
SELECT v0.c0, rt0.c2, t0.c2, rt0.c0, rt0.c1, rt0.c3, vt0.c0, t0.c1, t0.c0 FROM rt0, vt0, v0, t0 GROUP BY v0.c0, rt0.c2, t0.c2, rt0.c0, rt0.c1, rt0.c3, vt0.c0, t0.c1, t0.c0 HAVING MAX(SUM(MIN(COUNT(t0.c2)))) UNION ALL SELECT v0.c0, rt0.c2, t0.c2, rt0.c0, rt0.c1, rt0.c3, vt0.c0, t0.c1, t0.c0 FROM rt0, vt0, v0, t0 GROUP BY v0.c0, rt0.c2, t0.c2, rt0.c0, rt0.c1, rt0.c3, vt0.c0, t0.c1, t0.c0 HAVING (NOT (MAX(SUM(MIN(COUNT(t0.c2)))))) UNION ALL SELECT v0.c0, rt0.c2, t0.c2, rt0.c0, rt0.c1, rt0.c3, vt0.c0, t0.c1, t0.c0 FROM rt0, vt0, v0, t0 GROUP BY v0.c0, rt0.c2, t0.c2, rt0.c0, rt0.c1, rt0.c3, vt0.c0, t0.c1, t0.c0 HAVING ((MAX(SUM(MIN(COUNT(t0.c2))))) ISNULL);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ('酲ᗉROʊMv9Z' IN ()) COLLATE BINARY;
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ('酲ᗉROʊMv9Z' IN ()) COLLATE BINARY WHERE (HEX(((((((((((((t0.c2)OR(t0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(t0.c0)))OR(t0.c2)))AND(x'')))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ('酲ᗉROʊMv9Z' IN ()) COLLATE BINARY WHERE ((NOT (HEX(((((((((((((t0.c2)OR(t0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(t0.c0)))OR(t0.c2)))AND(x'')))))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ('酲ᗉROʊMv9Z' IN ()) COLLATE BINARY WHERE (((HEX(((((((((((((t0.c2)OR(t0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(t0.c0)))OR(t0.c2)))AND(x'')))) ISNULL));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ('酲ᗉROʊMv9Z' IN ()) COLLATE BINARY;
SELECT DISTINCT t0.c1, rt0.c3, v0.c0, t0.c0, rt0.c1, rt0.c2, t0.c2 FROM vt0, rt0, t0 CROSS JOIN v0 ON json_insert((rt0.c1 IN (rt0.c3, vt0.c0)), COALESCE(DISTINCT rt0.c2, rt0.c1), CAST(t0.c2 AS BLOB));
SELECT DISTINCT t0.c1, rt0.c3, v0.c0, t0.c0, rt0.c1, rt0.c2, t0.c2 FROM vt0, rt0, t0 CROSS JOIN v0 ON json_insert((rt0.c1 IN (rt0.c3, vt0.c0)), COALESCE(DISTINCT rt0.c2, rt0.c1), CAST(t0.c2 AS BLOB)) WHERE ('') UNION SELECT DISTINCT t0.c1, rt0.c3, v0.c0, t0.c0, rt0.c1, rt0.c2, t0.c2 FROM vt0, rt0, t0 CROSS JOIN v0 ON json_insert((rt0.c1 IN (rt0.c3, vt0.c0)), COALESCE(DISTINCT rt0.c2, rt0.c1), CAST(t0.c2 AS BLOB)) WHERE ((NOT (''))) UNION SELECT DISTINCT t0.c1, rt0.c3, v0.c0, t0.c0, rt0.c1, rt0.c2, t0.c2 FROM vt0, rt0, t0 CROSS JOIN v0 ON json_insert((rt0.c1 IN (rt0.c3, vt0.c0)), COALESCE(DISTINCT rt0.c2, rt0.c1), CAST(t0.c2 AS BLOB)) WHERE ((('') ISNULL));
SELECT DISTINCT t0.c1, rt0.c3, v0.c0, t0.c0, rt0.c1, rt0.c2, t0.c2 FROM vt0, rt0, t0 CROSS JOIN v0 ON json_insert((rt0.c1 IN (rt0.c3, vt0.c0)), COALESCE(DISTINCT rt0.c2, rt0.c1), CAST(t0.c2 AS BLOB));
SELECT rt0.c2 FROM rt0, t0, v0, vt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, t0, v0, vt0 WHERE (TYPEOF(((rt0.c0) IS TRUE))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, t0, v0, vt0 WHERE ((NOT (TYPEOF(((rt0.c0) IS TRUE))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, t0, v0, vt0 WHERE (((TYPEOF(((rt0.c0) IS TRUE))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, t0, v0, vt0 GROUP BY rt0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(AVG(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(AVG(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(AVG(vt0.c0))) ISNULL);
SELECT ALL t0.c1, t0.c2 FROM t0;
SELECT t0.c1, t0.c2 FROM t0 WHERE (NULL) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0 WHERE ((NOT (NULL))) UNION ALL SELECT t0.c1, t0.c2 FROM t0 WHERE (((NULL) ISNULL));
SELECT ALL t0.c1, t0.c2 FROM t0;
SELECT DISTINCT v0.c0, rt0.c1 FROM rt0, v0;
SELECT DISTINCT v0.c0, rt0.c1 FROM rt0, v0 WHERE (TYPEOF(CAST(rt0.c3 AS BLOB))) UNION SELECT DISTINCT v0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (TYPEOF(CAST(rt0.c3 AS BLOB))))) UNION SELECT DISTINCT v0.c0, rt0.c1 FROM rt0, v0 WHERE (((TYPEOF(CAST(rt0.c3 AS BLOB))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c1 FROM rt0, v0;
SELECT ALL rt0.c3, rt0.c0, t0.c0, t0.c1, rt0.c2, rt0.c1, t0.c2 FROM rt0, v0, t0 GROUP BY rt0.c3, rt0.c0, t0.c0, t0.c1, rt0.c2, rt0.c1, t0.c2;
SELECT rt0.c3, rt0.c0, t0.c0, t0.c1, rt0.c2, rt0.c1, t0.c2 FROM rt0, v0, t0 WHERE (CASE (~ (t0.c0))  WHEN CASE WHEN '' THEN rt0.c1 ELSE t0.c0 END THEN x'bb24' WHEN CAST('-268479514' AS REAL) THEN ((((rt0.c0)OR(t0.c2)))AND(v0.c0)) WHEN 0.1491655288031778 THEN ((t0.c1)<=(rt0.c3)) ELSE '' END) GROUP BY rt0.c3, rt0.c0, t0.c0, t0.c1, rt0.c2, rt0.c1, t0.c2 UNION SELECT ALL rt0.c3, rt0.c0, t0.c0, t0.c1, rt0.c2, rt0.c1, t0.c2 FROM rt0, v0, t0 WHERE ((NOT (CASE (~ (t0.c0))  WHEN CASE WHEN '' THEN rt0.c1 ELSE t0.c0 END THEN x'bb24' WHEN CAST('-268479514' AS REAL) THEN ((((rt0.c0)OR(t0.c2)))AND(v0.c0)) WHEN 0.1491655288031778 THEN ((t0.c1)<=(rt0.c3)) ELSE '' END))) GROUP BY rt0.c3, rt0.c0, t0.c0, t0.c1, rt0.c2, rt0.c1, t0.c2 UNION SELECT rt0.c3, rt0.c0, t0.c0, t0.c1, rt0.c2, rt0.c1, t0.c2 FROM rt0, v0, t0 WHERE (((CASE (~ (t0.c0))  WHEN CASE WHEN '' THEN rt0.c1 ELSE t0.c0 END THEN x'bb24' WHEN CAST('-268479514' AS REAL) THEN ((((rt0.c0)OR(t0.c2)))AND(v0.c0)) WHEN 0.1491655288031778 THEN ((t0.c1)<=(rt0.c3)) ELSE '' END) ISNULL)) GROUP BY rt0.c3, rt0.c0, t0.c0, t0.c1, rt0.c2, rt0.c1, t0.c2;
SELECT ALL rt0.c3, rt0.c0, t0.c0, t0.c1, rt0.c2, rt0.c1, t0.c2 FROM rt0, v0, t0 GROUP BY rt0.c3, rt0.c0, t0.c0, t0.c1, rt0.c2, rt0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING PRINTF(TOTAL(t0.c1)) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING (NOT (PRINTF(TOTAL(t0.c1)))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING ((PRINTF(TOTAL(t0.c1))) ISNULL);
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING PRINTF(TOTAL(t0.c1)) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING (NOT (PRINTF(TOTAL(t0.c1)))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING ((PRINTF(TOTAL(t0.c1))) ISNULL);
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))IS(rt0.c2))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))IS(rt0.c2))))) UNION ALL SELECT * FROM v0, rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))IS(rt0.c2))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0)))||(CAST(vt0.c0 AS TEXT)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0)))||(CAST(vt0.c0 AS TEXT)))))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE ((((((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0)))||(CAST(vt0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL t0.c0, t0.c2, rt0.c2, t0.c1, rt0.c3, rt0.c1, v0.c0 FROM t0 FULL OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN v0 ON ((((- (v0.c0))))>=((CAST(rt0.c2 AS NUMERIC)))) INNER JOIN rt0 ON CASE WHEN ((rt0.c1)>>(t0.c2)) THEN rt0.c1 ELSE CASE v0.c0  WHEN rt0.c2 THEN t0.c0 WHEN vt0.c0 THEN t0.c2 WHEN 0Xfffffffff5478944 THEN t0.c0 ELSE v0.c0 END END GROUP BY t0.c0, t0.c2, rt0.c2, t0.c1, rt0.c3, rt0.c1, v0.c0;
SELECT ALL t0.c1, rt0.c1, t0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN t0 ON (((- (rt0.c1)))>(rt0.c2)) GROUP BY t0.c1, rt0.c1, t0.c0, rt0.c3;
SELECT t0.c1, rt0.c1, t0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN t0 ON (((- (rt0.c1)))>(rt0.c2)) GROUP BY t0.c1, rt0.c1, t0.c0, rt0.c3 HAVING NULL UNION ALL SELECT t0.c1, rt0.c1, t0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN t0 ON (((- (rt0.c1)))>(rt0.c2)) GROUP BY t0.c1, rt0.c1, t0.c0, rt0.c3 HAVING (NOT (NULL)) UNION ALL SELECT ALL t0.c1, rt0.c1, t0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN t0 ON (((- (rt0.c1)))>(rt0.c2)) GROUP BY t0.c1, rt0.c1, t0.c0, rt0.c3 HAVING ((NULL) ISNULL);
SELECT ALL t0.c1, rt0.c1, t0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN t0 ON (((- (rt0.c1)))>(rt0.c2)) GROUP BY t0.c1, rt0.c1, t0.c0, rt0.c3;
SELECT t0.c1, rt0.c1, t0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN t0 ON (((- (rt0.c1)))>(rt0.c2)) GROUP BY t0.c1, rt0.c1, t0.c0, rt0.c3 HAVING NULL UNION ALL SELECT t0.c1, rt0.c1, t0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN t0 ON (((- (rt0.c1)))>(rt0.c2)) GROUP BY t0.c1, rt0.c1, t0.c0, rt0.c3 HAVING (NOT (NULL)) UNION ALL SELECT ALL t0.c1, rt0.c1, t0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN t0 ON (((- (rt0.c1)))>(rt0.c2)) GROUP BY t0.c1, rt0.c1, t0.c0, rt0.c3 HAVING ((NULL) ISNULL);
SELECT ALL t0.c1, rt0.c1, t0.c0, rt0.c3 FROM rt0 LEFT OUTER JOIN t0 ON (((- (rt0.c1)))>(rt0.c2)) GROUP BY t0.c1, rt0.c1, t0.c0, rt0.c3;
SELECT ALL TOTAL((((((vt0.c0, vt0.c0, t0.c0)) BETWEEN ((rt0.c3, rt0.c2, rt0.c1)) AND ((vt0.c0, t0.c1, v0.c0)))) NOT BETWEEN (((v0.c0)<>(t0.c2))) AND (LTRIM(rt0.c1)))) FROM t0, vt0, rt0, v0 ORDER BY CASE WHEN '' THEN ((rt0.c2)<=(v0.c0)) WHEN ((t0.c0)GLOB(t0.c2)) THEN (rt0.c3 IN ()) WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c3)OR(vt0.c0)) WHEN HEX(0.08155084233609755) THEN IFNULL(DISTINCT rt0.c0, v0.c0) WHEN CASE WHEN t0.c0 THEN t0.c2 END THEN t0.c2 ELSE CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 END END;
SELECT rt0.c1, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((rt0.c2)>(rt0.c0)) COLLATE BINARY;
SELECT rt0.c1, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((rt0.c2)>(rt0.c0)) COLLATE BINARY WHERE ((((((vt0.c0))=((rt0.c1)))) BETWEEN ((('0.22058286034937669') BETWEEN (rt0.c0) AND (rt0.c3))) AND (((rt0.c0) NOTNULL)))) UNION ALL SELECT ALL rt0.c1, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((rt0.c2)>(rt0.c0)) COLLATE BINARY WHERE ((NOT ((((((vt0.c0))=((rt0.c1)))) BETWEEN ((('0.22058286034937669') BETWEEN (rt0.c0) AND (rt0.c3))) AND (((rt0.c0) NOTNULL)))))) UNION ALL SELECT rt0.c1, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((rt0.c2)>(rt0.c0)) COLLATE BINARY WHERE ((((((((vt0.c0))==((rt0.c1)))) BETWEEN ((('0.22058286034937669') BETWEEN (rt0.c0) AND (rt0.c3))) AND (((rt0.c0) NOTNULL)))) ISNULL));
SELECT rt0.c1, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((rt0.c2)>(rt0.c0)) COLLATE BINARY;
SELECT DISTINCT * FROM v0, rt0 NOT INDEXED, vt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM v0, rt0, vt0 NATURAL JOIN t0 WHERE ((((((rt0.c2)) BETWEEN ((t0.c1)) AND ((t0.c0))))AND(0.3961988947991315))) UNION SELECT DISTINCT * FROM v0, rt0, vt0 NATURAL JOIN t0 WHERE ((NOT ((((((rt0.c2)) BETWEEN ((t0.c1)) AND ((t0.c0))))AND(0.3961988947991315))))) UNION SELECT DISTINCT * FROM v0, rt0, vt0 NATURAL JOIN t0 WHERE ((((((((rt0.c2)) BETWEEN ((t0.c1)) AND ((t0.c0))))AND(0.3961988947991315))) ISNULL));
SELECT DISTINCT * FROM v0, rt0 NOT INDEXED, vt0 NATURAL JOIN t0;
SELECT rt0.c3, t0.c0, t0.c2 FROM rt0, t0 GROUP BY rt0.c3, t0.c0, t0.c2;
SELECT rt0.c3, t0.c0, t0.c2 FROM rt0, t0 WHERE ((+ (CAST(t0.c2 AS BLOB)))) GROUP BY rt0.c3, t0.c0, t0.c2 UNION SELECT rt0.c3, t0.c0, t0.c2 FROM rt0, t0 WHERE ((NOT ((+ (CAST(t0.c2 AS BLOB)))))) GROUP BY rt0.c3, t0.c0, t0.c2 UNION SELECT ALL rt0.c3, t0.c0, t0.c2 FROM rt0, t0 WHERE ((((+ (CAST(t0.c2 AS BLOB)))) ISNULL)) GROUP BY rt0.c3, t0.c0, t0.c2;
SELECT rt0.c3, t0.c0, t0.c2 FROM rt0, t0 GROUP BY rt0.c3, t0.c0, t0.c2;
SELECT v0.c0, rt0.c2, t0.c2, rt0.c3, rt0.c0, t0.c0, t0.c1 FROM rt0, v0, t0 GROUP BY v0.c0, rt0.c2, t0.c2, rt0.c3, rt0.c0, t0.c0, t0.c1;
SELECT ALL v0.c0, rt0.c2, t0.c2, rt0.c3, rt0.c0, t0.c0, t0.c1 FROM rt0, v0, t0 GROUP BY v0.c0, rt0.c2, t0.c2, rt0.c3, rt0.c0, t0.c0, t0.c1 HAVING MIN(MIN(rt0.c2)) UNION ALL SELECT ALL v0.c0, rt0.c2, t0.c2, rt0.c3, rt0.c0, t0.c0, t0.c1 FROM rt0, v0, t0 GROUP BY v0.c0, rt0.c2, t0.c2, rt0.c3, rt0.c0, t0.c0, t0.c1 HAVING (NOT (MIN(MIN(rt0.c2)))) UNION ALL SELECT ALL v0.c0, rt0.c2, t0.c2, rt0.c3, rt0.c0, t0.c0, t0.c1 FROM rt0, v0, t0 GROUP BY v0.c0, rt0.c2, t0.c2, rt0.c3, rt0.c0, t0.c0, t0.c1 HAVING ((MIN(MIN(rt0.c2))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0;
SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (NULLIF(DISTINCT t0.c0, t0.c0) COLLATE NOCASE) UNION SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT (NULLIF(DISTINCT t0.c0, t0.c0) COLLATE NOCASE))) UNION SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((NULLIF(DISTINCT t0.c0, t0.c0) COLLATE NOCASE) ISNULL));
SELECT DISTINCT t0.c2, t0.c0, t0.c1 FROM t0;
SELECT ALL t0.c0, t0.c1, rt0.c1, rt0.c2 FROM v0, vt0, t0, rt0 GROUP BY t0.c0, t0.c1, rt0.c1, rt0.c2;
SELECT t0.c0, t0.c1, rt0.c1, rt0.c2 FROM v0, vt0, t0, rt0 WHERE (ABS((- (t0.c2)))) GROUP BY t0.c0, t0.c1, rt0.c1, rt0.c2 UNION SELECT ALL t0.c0, t0.c1, rt0.c1, rt0.c2 FROM v0, vt0, t0, rt0 WHERE ((NOT (ABS((- (t0.c2)))))) GROUP BY t0.c0, t0.c1, rt0.c1, rt0.c2 UNION SELECT t0.c0, t0.c1, rt0.c1, rt0.c2 FROM v0, vt0, t0, rt0 WHERE (((ABS((- (t0.c2)))) ISNULL)) GROUP BY t0.c0, t0.c1, rt0.c1, rt0.c2;
SELECT ALL t0.c0, t0.c1, rt0.c1, rt0.c2 FROM v0, vt0, t0, rt0 GROUP BY t0.c0, t0.c1, rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c3, t0.c2, t0.c1, rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON CASE (((rt0.c0, rt0.c0, rt0.c3))<((rt0.c2, t0.c1, 0xfffffffff82c8da5)))  WHEN ((t0.c2)/(rt0.c0)) THEN (NOT (rt0.c0)) ELSE NULL END GROUP BY rt0.c2, rt0.c3, t0.c2, t0.c1, rt0.c1;
SELECT rt0.c2, rt0.c3, t0.c2, t0.c1, rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON CASE (((rt0.c0, rt0.c0, rt0.c3))<((rt0.c2, t0.c1, 0xfffffffff82c8da5)))  WHEN ((t0.c2)/(rt0.c0)) THEN (NOT (rt0.c0)) ELSE NULL END GROUP BY rt0.c2, rt0.c3, t0.c2, t0.c1, rt0.c1 HAVING (((MAX(t0.c2)))<=((CASE COUNT('0.4991542836420201')  WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN rt0.c1 WHEN t0.c0 THEN t0.c2 ELSE TOTAL(t0.c2) END))) UNION ALL SELECT rt0.c2, rt0.c3, t0.c2, t0.c1, rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON CASE (((rt0.c0, rt0.c0, rt0.c3))<((rt0.c2, t0.c1, 0Xfffffffff82c8da5)))  WHEN ((t0.c2)/(rt0.c0)) THEN (NOT (rt0.c0)) ELSE NULL END GROUP BY rt0.c2, rt0.c3, t0.c2, t0.c1, rt0.c1 HAVING (NOT ((((MAX(t0.c2)))<=((CASE COUNT('0.4991542836420201')  WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN rt0.c1 WHEN t0.c0 THEN t0.c2 ELSE TOTAL(t0.c2) END))))) UNION ALL SELECT ALL rt0.c2, rt0.c3, t0.c2, t0.c1, rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON CASE (((rt0.c0, rt0.c0, rt0.c3))<((rt0.c2, t0.c1, 0Xfffffffff82c8da5)))  WHEN ((t0.c2)/(rt0.c0)) THEN (NOT (rt0.c0)) ELSE NULL END GROUP BY rt0.c2, rt0.c3, t0.c2, t0.c1, rt0.c1 HAVING (((((MAX(t0.c2)))<=((CASE COUNT('0.4991542836420201')  WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN rt0.c1 WHEN t0.c0 THEN t0.c2 ELSE TOTAL(t0.c2) END)))) ISNULL);
SELECT ALL rt0.c2, rt0.c3, t0.c2, t0.c1, rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON CASE (((rt0.c0, rt0.c0, rt0.c3))<((rt0.c2, t0.c1, 0xfffffffff82c8da5)))  WHEN ((t0.c2)/(rt0.c0)) THEN (NOT (rt0.c0)) ELSE NULL END GROUP BY rt0.c2, rt0.c3, t0.c2, t0.c1, rt0.c1;
SELECT rt0.c2, rt0.c3, t0.c2, t0.c1, rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON CASE (((rt0.c0, rt0.c0, rt0.c3))<((rt0.c2, t0.c1, 0xfffffffff82c8da5)))  WHEN ((t0.c2)/(rt0.c0)) THEN (NOT (rt0.c0)) ELSE NULL END GROUP BY rt0.c2, rt0.c3, t0.c2, t0.c1, rt0.c1 HAVING (((MAX(t0.c2)))<=((CASE COUNT('0.4991542836420201')  WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN rt0.c1 WHEN t0.c0 THEN t0.c2 ELSE TOTAL(t0.c2) END))) UNION ALL SELECT rt0.c2, rt0.c3, t0.c2, t0.c1, rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON CASE (((rt0.c0, rt0.c0, rt0.c3))<((rt0.c2, t0.c1, 0Xfffffffff82c8da5)))  WHEN ((t0.c2)/(rt0.c0)) THEN (NOT (rt0.c0)) ELSE NULL END GROUP BY rt0.c2, rt0.c3, t0.c2, t0.c1, rt0.c1 HAVING (NOT ((((MAX(t0.c2)))<=((CASE COUNT('0.4991542836420201')  WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN rt0.c1 WHEN t0.c0 THEN t0.c2 ELSE TOTAL(t0.c2) END))))) UNION ALL SELECT ALL rt0.c2, rt0.c3, t0.c2, t0.c1, rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON CASE (((rt0.c0, rt0.c0, rt0.c3))<((rt0.c2, t0.c1, 0Xfffffffff82c8da5)))  WHEN ((t0.c2)/(rt0.c0)) THEN (NOT (rt0.c0)) ELSE NULL END GROUP BY rt0.c2, rt0.c3, t0.c2, t0.c1, rt0.c1 HAVING (((((MAX(t0.c2)))<=((CASE COUNT('0.4991542836420201')  WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN rt0.c1 WHEN t0.c0 THEN t0.c2 ELSE TOTAL(t0.c2) END)))) ISNULL);
SELECT ALL rt0.c2, rt0.c3, t0.c2, t0.c1, rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON CASE (((rt0.c0, rt0.c0, rt0.c3))<((rt0.c2, t0.c1, 0xfffffffff82c8da5)))  WHEN ((t0.c2)/(rt0.c0)) THEN (NOT (rt0.c0)) ELSE NULL END GROUP BY rt0.c2, rt0.c3, t0.c2, t0.c1, rt0.c1;
SELECT TOTAL(CAST(((((v0.c0)OR(rt0.c0)))AND(rt0.c1)) AS REAL)) FROM v0, rt0 ORDER BY ((CAST(rt0.c3 AS TEXT)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND ((rt0.c1 IN ()))) ASC;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (LTRIM(rt0.c2 COLLATE RTRIM)) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (LTRIM(rt0.c2 COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((LTRIM(rt0.c2 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ('-433010539') GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ('-433010539'))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((('-433010539') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2, t0.c1 FROM vt0, t0, rt0 GROUP BY rt0.c2, t0.c1;
SELECT rt0.c2, t0.c1 FROM vt0, t0, rt0 GROUP BY rt0.c2, t0.c1 HAVING MIN((NOT (NULL))) UNION ALL SELECT ALL rt0.c2, t0.c1 FROM vt0, t0, rt0 GROUP BY rt0.c2, t0.c1 HAVING (NOT (MIN((NOT (NULL))))) UNION ALL SELECT rt0.c2, t0.c1 FROM vt0, t0, rt0 GROUP BY rt0.c2, t0.c1 HAVING ((MIN((NOT (NULL)))) ISNULL);
SELECT rt0.c2, t0.c1 FROM vt0, t0, rt0 GROUP BY rt0.c2, t0.c1;
SELECT rt0.c2, t0.c1 FROM vt0, t0, rt0 GROUP BY rt0.c2, t0.c1 HAVING MIN((NOT (NULL))) UNION ALL SELECT ALL rt0.c2, t0.c1 FROM vt0, t0, rt0 GROUP BY rt0.c2, t0.c1 HAVING (NOT (MIN((NOT (NULL))))) UNION ALL SELECT rt0.c2, t0.c1 FROM vt0, t0, rt0 GROUP BY rt0.c2, t0.c1 HAVING ((MIN((NOT (NULL)))) ISNULL);
SELECT rt0.c2, t0.c1 FROM vt0, t0, rt0 GROUP BY rt0.c2, t0.c1;
SELECT ALL * FROM v0, vt0, t0, rt0;
SELECT ALL * FROM v0, vt0, t0, rt0 NOT INDEXED WHERE (((((t0.c0) NOT NULL)) IS TRUE)) UNION ALL SELECT * FROM v0, vt0, t0, rt0 WHERE ((NOT (((((t0.c0) NOT NULL)) IS TRUE)))) UNION ALL SELECT ALL * FROM v0, vt0, t0, rt0 WHERE (((((((t0.c0) NOT NULL)) IS TRUE)) ISNULL));
SELECT ALL * FROM v0, vt0, t0, rt0;
SELECT DISTINCT * FROM v0, vt0, t0, rt0;
SELECT DISTINCT * FROM v0, vt0, t0, rt0 WHERE (CAST(NULL AS BLOB)) UNION SELECT DISTINCT * FROM v0, vt0, t0, rt0 WHERE ((NOT (CAST(NULL AS BLOB)))) UNION SELECT DISTINCT * FROM v0, vt0, t0, rt0 WHERE (((CAST(NULL AS BLOB)) ISNULL));
SELECT DISTINCT * FROM v0, vt0, t0, rt0;
SELECT ALL v0.c0, vt0.c0, t0.c1 FROM v0, vt0, t0 GROUP BY v0.c0, vt0.c0, t0.c1;
SELECT ALL v0.c0, vt0.c0, t0.c1 FROM v0, vt0, t0 WHERE ((+ (t0.c1)) COLLATE NOCASE) GROUP BY v0.c0, vt0.c0, t0.c1 UNION SELECT v0.c0, vt0.c0, t0.c1 FROM v0, vt0, t0 WHERE ((NOT ((+ (t0.c1)) COLLATE NOCASE))) GROUP BY v0.c0, vt0.c0, t0.c1 UNION SELECT v0.c0, vt0.c0, t0.c1 FROM v0, vt0, t0 WHERE ((((+ (t0.c1)) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0, vt0.c0, t0.c1;
SELECT ALL v0.c0, vt0.c0, t0.c1 FROM v0, vt0, t0 GROUP BY v0.c0, vt0.c0, t0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT TOTAL(x'') FROM vt0, t0, rt0, v0 ORDER BY CAST(SUBSTR(x'', rt0.c1) AS INTEGER)  NULLS LAST;
SELECT ALL t0.c0 FROM t0, vt0;
SELECT ALL t0.c0 FROM t0, vt0 WHERE (((t0.c2) BETWEEN (((t0.c2)&(t0.c2))) AND (t0.c2))) UNION ALL SELECT t0.c0 FROM t0, vt0 WHERE ((NOT (((t0.c2) BETWEEN (((t0.c2)&(t0.c2))) AND (t0.c2))))) UNION ALL SELECT ALL t0.c0 FROM t0, vt0 WHERE (((((t0.c2) BETWEEN (((t0.c2)&(t0.c2))) AND (t0.c2))) ISNULL));
SELECT ALL t0.c0 FROM t0, vt0;
SELECT DISTINCT t0.c0, rt0.c2, rt0.c3, rt0.c1, t0.c2 FROM t0, rt0, v0, vt0;
SELECT DISTINCT t0.c0, rt0.c2, rt0.c3, rt0.c1, t0.c2 FROM t0, rt0, v0, vt0 WHERE ((((v0.c0)) BETWEEN ((x'')) AND ((((rt0.c3)*(vt0.c0)))))) UNION SELECT DISTINCT t0.c0, rt0.c2, rt0.c3, rt0.c1, t0.c2 FROM t0, rt0, v0, vt0 WHERE ((NOT ((((v0.c0)) BETWEEN ((x'')) AND ((((rt0.c3)*(vt0.c0)))))))) UNION SELECT DISTINCT t0.c0, rt0.c2, rt0.c3, rt0.c1, t0.c2 FROM t0, rt0, v0, vt0 WHERE ((((((v0.c0)) BETWEEN ((x'')) AND ((((rt0.c3)*(vt0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0, rt0.c2, rt0.c3, rt0.c1, t0.c2 FROM t0, rt0, v0, vt0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ('-687370802') GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT ('-687370802'))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((('-687370802') ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL vt0.c0, rt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON ((((((((CAST(t0.c2 AS REAL))AND(-1.364830545E9)))AND(((rt0.c0)IS NOT(x'')))))OR(rt0.c1 COLLATE BINARY)))AND(((rt0.c3)|(t0.c2)))) RIGHT OUTER JOIN t0 ON ((vt0.c0 COLLATE BINARY)>=(((('>+', rt0.c1, t0.c2))>(('-89297911', v0.c0, rt0.c0))))) CROSS JOIN rt0 ON CAST(rt0.c0 AS INTEGER) GROUP BY vt0.c0, rt0.c0, v0.c0;
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((CAST(rt0.c2 AS TEXT), ((rt0.c1) BETWEEN (x'7158') AND (rt0.c2)), load_extension(rt0.c2, -61277947)))>=(((((rt0.c0))!=((rt0.c0))), rt0.c1, CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END)))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((CAST(rt0.c2 AS TEXT), ((rt0.c1) BETWEEN (x'7158') AND (rt0.c2)), load_extension(rt0.c2, -61277947)))>=(((((rt0.c0))!=((rt0.c0))), rt0.c1, CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END)))))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((CAST(rt0.c2 AS TEXT), ((rt0.c1) BETWEEN (x'7158') AND (rt0.c2)), load_extension(rt0.c2, -61277947)))>=(((((rt0.c0))<>((rt0.c0))), rt0.c1, CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END)))) ISNULL));
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt0, v0, t0;
SELECT DISTINCT * FROM vt0, v0, t0 WHERE ((((((t0.c2))<=((t0.c0)))) BETWEEN (1.7976931348623157E308) AND ((vt0.c0 IN ('', v0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0, t0 WHERE ((NOT ((((((t0.c2))<=((t0.c0)))) BETWEEN (1.7976931348623157E308) AND ((vt0.c0 IN ('', v0.c0))))))) UNION SELECT DISTINCT * FROM vt0, v0, t0 WHERE ((((((((t0.c2))<=((t0.c0)))) BETWEEN (1.7976931348623157E308) AND ((vt0.c0 IN ('', v0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, t0;
SELECT t0.c1, t0.c0, v0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON ((v0.c0) IS TRUE) GROUP BY t0.c1, t0.c0, v0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, v0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON ((v0.c0) IS TRUE) WHERE (((v0.c0)&(t0.c0)) COLLATE NOCASE) GROUP BY t0.c1, t0.c0, v0.c0, t0.c2 UNION SELECT ALL t0.c1, t0.c0, v0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON ((v0.c0) IS TRUE) WHERE ((NOT (((v0.c0)&(t0.c0)) COLLATE NOCASE))) GROUP BY t0.c1, t0.c0, v0.c0, t0.c2 UNION SELECT ALL t0.c1, t0.c0, v0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON ((v0.c0) IS TRUE) WHERE (((((v0.c0)&(t0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY t0.c1, t0.c0, v0.c0, t0.c2;
SELECT t0.c1, t0.c0, v0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON ((v0.c0) IS TRUE) GROUP BY t0.c1, t0.c0, v0.c0, t0.c2;
SELECT rt0.c2, rt0.c1, t0.c0, rt0.c3, t0.c2, vt0.c0, t0.c1, rt0.c0 FROM vt0, t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c0, rt0.c3, t0.c2, vt0.c0, t0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, t0.c0, rt0.c3, t0.c2, vt0.c0, t0.c1, rt0.c0 FROM vt0, t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c0, rt0.c3, t0.c2, vt0.c0, t0.c1, rt0.c0 HAVING TRIM(MAX(MAX(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c1, t0.c0, rt0.c3, t0.c2, vt0.c0, t0.c1, rt0.c0 FROM vt0, t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c0, rt0.c3, t0.c2, vt0.c0, t0.c1, rt0.c0 HAVING (NOT (TRIM(MAX(MAX(rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c1, t0.c0, rt0.c3, t0.c2, vt0.c0, t0.c1, rt0.c0 FROM vt0, t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c0, rt0.c3, t0.c2, vt0.c0, t0.c1, rt0.c0 HAVING ((TRIM(MAX(MAX(rt0.c2)))) ISNULL);
SELECT t0.c1 FROM t0, rt0;
SELECT t0.c1 FROM t0, rt0 WHERE ((((0.4291629927328793, t0.c0, rt0.c1)) BETWEEN (((- (t0.c1)), CASE WHEN t0.c2 THEN rt0.c0 WHEN t0.c1 THEN x'' WHEN rt0.c2 THEN rt0.c3 END, NULL)) AND (('nUuAfF', (- (rt0.c3)), '')))) UNION ALL SELECT ALL t0.c1 FROM t0, rt0 WHERE ((NOT ((((0.4291629927328793, t0.c0, rt0.c1)) BETWEEN (((- (t0.c1)), CASE WHEN t0.c2 THEN rt0.c0 WHEN t0.c1 THEN x'' WHEN rt0.c2 THEN rt0.c3 END, NULL)) AND (('nUuAfF', (- (rt0.c3)), '')))))) UNION ALL SELECT ALL t0.c1 FROM t0, rt0 WHERE ((((((0.4291629927328793, t0.c0, rt0.c1)) BETWEEN (((- (t0.c1)), CASE WHEN t0.c2 THEN rt0.c0 WHEN t0.c1 THEN x'' WHEN rt0.c2 THEN rt0.c3 END, NULL)) AND (('nUuAfF', (- (rt0.c3)), '')))) ISNULL));
SELECT t0.c1 FROM t0, rt0;
SELECT DISTINCT t0.c2, vt0.c0, rt0.c1, t0.c1 FROM t0, v0, vt0, rt0;
SELECT DISTINCT t0.c2, vt0.c0, rt0.c1, t0.c1 FROM t0, v0, vt0, rt0 WHERE ((((rt0.c3 IN ())) IS TRUE)) UNION SELECT DISTINCT t0.c2, vt0.c0, rt0.c1, t0.c1 FROM t0, v0, vt0, rt0 WHERE ((NOT ((((rt0.c3 IN ())) IS TRUE)))) UNION SELECT DISTINCT t0.c2, vt0.c0, rt0.c1, t0.c1 FROM t0, v0, vt0 NOT INDEXED, rt0 WHERE ((((((rt0.c3 IN ())) IS TRUE)) ISNULL));
SELECT DISTINCT t0.c2, vt0.c0, rt0.c1, t0.c1 FROM t0, v0, vt0, rt0;
SELECT ALL rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM v0, rt0 WHERE ('-1078778096') GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT ('-1078778096'))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((('-1078778096') ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL t0.c0, rt0.c1, rt0.c0 FROM rt0, t0, v0, vt0 GROUP BY t0.c0, rt0.c1, rt0.c0;
SELECT t0.c0, rt0.c1, rt0.c0 FROM rt0, t0, v0, vt0 GROUP BY t0.c0, rt0.c1, rt0.c0 HAVING (- (-1538663120)) UNION ALL SELECT t0.c0, rt0.c1, rt0.c0 FROM rt0, t0, v0, vt0 GROUP BY t0.c0, rt0.c1, rt0.c0 HAVING (NOT ((- (-1538663120)))) UNION ALL SELECT t0.c0, rt0.c1, rt0.c0 FROM rt0, t0, v0, vt0 GROUP BY t0.c0, rt0.c1, rt0.c0 HAVING (((- (-1538663120))) ISNULL);
SELECT ALL t0.c0, rt0.c1, rt0.c0 FROM rt0, t0, v0, vt0 GROUP BY t0.c0, rt0.c1, rt0.c0;
SELECT t0.c0, rt0.c1, rt0.c0 FROM rt0, t0, v0, vt0 GROUP BY t0.c0, rt0.c1, rt0.c0 HAVING (- (-1538663120)) UNION ALL SELECT t0.c0, rt0.c1, rt0.c0 FROM rt0, t0, v0, vt0 GROUP BY t0.c0, rt0.c1, rt0.c0 HAVING (NOT ((- (-1538663120)))) UNION ALL SELECT t0.c0, rt0.c1, rt0.c0 FROM rt0, t0, v0, vt0 GROUP BY t0.c0, rt0.c1, rt0.c0 HAVING (((- (-1538663120))) ISNULL);
SELECT ALL t0.c0, rt0.c1, rt0.c0 FROM rt0, t0, v0, vt0 GROUP BY t0.c0, rt0.c1, rt0.c0;
SELECT ALL * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE (((((rt0.c3) ISNULL))>(((((t0.c1)AND('615416195')))OR(t0.c2))))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (((((rt0.c3) ISNULL))>(((((t0.c1)AND('615416195')))OR(t0.c2))))))) UNION ALL SELECT * FROM t0, rt0 WHERE (((((((rt0.c3) ISNULL))>(((((t0.c1)AND('615416195')))OR(t0.c2))))) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT * FROM vt0, t0, rt0;
SELECT DISTINCT * FROM vt0, t0, rt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (CAST(t0.c1 AS TEXT)) AND (t0.c2 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, t0, rt0 WHERE ((NOT ((((vt0.c0 IN ())) NOT BETWEEN (CAST(t0.c1 AS TEXT)) AND (t0.c2 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0, t0, rt0 WHERE ((((((vt0.c0 IN ())) NOT BETWEEN (CAST(t0.c1 AS TEXT)) AND (t0.c2 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0, t0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0) IS TRUE))+(((v0.c0)&(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) IS TRUE))+(((v0.c0)&(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0) IS TRUE))+(((v0.c0)&(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0 FROM v0, vt0, rt0, t0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM v0, vt0, rt0, t0 GROUP BY rt0.c0 HAVING (((AVG(v0.c0)) NOT BETWEEN (MAX(GROUP_CONCAT(vt0.c0))) AND (0.9182872962193586)) IN ()) UNION ALL SELECT rt0.c0 FROM v0, vt0, rt0, t0 GROUP BY rt0.c0 HAVING (NOT ((((AVG(v0.c0)) NOT BETWEEN (MAX(GROUP_CONCAT(vt0.c0))) AND (0.9182872962193586)) IN ()))) UNION ALL SELECT rt0.c0 FROM v0, vt0, rt0, t0 GROUP BY rt0.c0 HAVING (((((AVG(v0.c0)) NOT BETWEEN (MAX(GROUP_CONCAT(vt0.c0))) AND (0.9182872962193586)) IN ())) ISNULL);
SELECT rt0.c0 FROM v0, vt0, rt0, t0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM v0, vt0, rt0, t0 GROUP BY rt0.c0 HAVING (((AVG(v0.c0)) NOT BETWEEN (MAX(GROUP_CONCAT(vt0.c0))) AND (0.9182872962193586)) IN ()) UNION ALL SELECT rt0.c0 FROM v0, vt0, rt0, t0 GROUP BY rt0.c0 HAVING (NOT ((((AVG(v0.c0)) NOT BETWEEN (MAX(GROUP_CONCAT(vt0.c0))) AND (0.9182872962193586)) IN ()))) UNION ALL SELECT rt0.c0 FROM v0, vt0, rt0, t0 GROUP BY rt0.c0 HAVING (((((AVG(v0.c0)) NOT BETWEEN (MAX(GROUP_CONCAT(vt0.c0))) AND (0.9182872962193586)) IN ())) ISNULL);
SELECT rt0.c0 FROM v0, vt0, rt0, t0 GROUP BY rt0.c0;
SELECT TOTAL((CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) FROM vt0;
SELECT rt0.c1 FROM rt0, vt0 FULL OUTER JOIN t0 ON (((NOT (rt0.c3))) BETWEEN (rt0.c1 COLLATE RTRIM) AND (((((rt0.c1)AND(t0.c1)))OR(t0.c1)))) LEFT OUTER JOIN v0 ON ((((CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END)AND(SQLITE_SOURCE_ID())))OR(((t0.c1)==(t0.c2))));
SELECT rt0.c1 FROM rt0, vt0 FULL OUTER JOIN t0 ON (((NOT (rt0.c3))) BETWEEN (rt0.c1 COLLATE RTRIM) AND (((((rt0.c1)AND(t0.c1)))OR(t0.c1)))) LEFT OUTER JOIN v0 ON ((((CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END)AND(SQLITE_SOURCE_ID())))OR(((t0.c1)==(t0.c2)))) WHERE (t0.c2) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt0 FULL OUTER JOIN t0 ON (((NOT (rt0.c3))) BETWEEN (rt0.c1 COLLATE RTRIM) AND (((((rt0.c1)AND(t0.c1)))OR(t0.c1)))) LEFT OUTER JOIN v0 ON ((((CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END)AND(SQLITE_SOURCE_ID())))OR(((t0.c1)==(t0.c2)))) WHERE ((NOT (t0.c2))) UNION ALL SELECT rt0.c1 FROM rt0, vt0 FULL OUTER JOIN t0 ON (((NOT (rt0.c3))) BETWEEN (rt0.c1 COLLATE RTRIM) AND (((((rt0.c1)AND(t0.c1)))OR(t0.c1)))) LEFT OUTER JOIN v0 ON ((((CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END)AND(SQLITE_SOURCE_ID())))OR(((t0.c1)=(t0.c2)))) WHERE (((t0.c2) ISNULL));
SELECT rt0.c1 FROM rt0, vt0 FULL OUTER JOIN t0 ON (((NOT (rt0.c3))) BETWEEN (rt0.c1 COLLATE RTRIM) AND (((((rt0.c1)AND(t0.c1)))OR(t0.c1)))) LEFT OUTER JOIN v0 ON ((((CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END)AND(SQLITE_SOURCE_ID())))OR(((t0.c1)==(t0.c2))));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0)||('-5285712539837870972 -3005968729859878015:-817946508383221710:-2296700399339601631-1790T-7522183003609877230-1547T1481T1080 gY'))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0)||('-5285712539837870972 -3005968729859878015:-817946508383221710:-2296700399339601631-1790T-7522183003609877230-1547T1481T1080 gY'))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)||('-5285712539837870972 -3005968729859878015:-817946508383221710:-2296700399339601631-1790T-7522183003609877230-1547T1481T1080 gY'))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0, rt0.c0, t0.c1, rt0.c2, rt0.c1, t0.c2, v0.c0, rt0.c3, t0.c0 FROM vt0, v0, t0, rt0 GROUP BY vt0.c0, rt0.c0, t0.c1, rt0.c2, rt0.c1, t0.c2, v0.c0, rt0.c3, t0.c0;
SELECT vt0.c0, rt0.c0, t0.c1, rt0.c2, rt0.c1, t0.c2, v0.c0, rt0.c3, t0.c0 FROM vt0, v0, t0, rt0 WHERE (((((rt0.c2) IS TRUE)) NOT BETWEEN (rt0.c0) AND (CAST(rt0.c1 AS BLOB)))) GROUP BY vt0.c0, rt0.c0, t0.c1, rt0.c2, rt0.c1, t0.c2, v0.c0, rt0.c3, t0.c0 UNION SELECT ALL vt0.c0, rt0.c0, t0.c1, rt0.c2, rt0.c1, t0.c2, v0.c0, rt0.c3, t0.c0 FROM vt0, v0, t0, rt0 WHERE ((NOT (((((rt0.c2) IS TRUE)) NOT BETWEEN (rt0.c0) AND (CAST(rt0.c1 AS BLOB)))))) GROUP BY vt0.c0, rt0.c0, t0.c1, rt0.c2, rt0.c1, t0.c2, v0.c0, rt0.c3, t0.c0 UNION SELECT ALL vt0.c0, rt0.c0, t0.c1, rt0.c2, rt0.c1, t0.c2, v0.c0, rt0.c3, t0.c0 FROM vt0, v0, t0, rt0 WHERE (((((((rt0.c2) IS TRUE)) NOT BETWEEN (rt0.c0) AND (CAST(rt0.c1 AS BLOB)))) ISNULL)) GROUP BY vt0.c0, rt0.c0, t0.c1, rt0.c2, rt0.c1, t0.c2, v0.c0, rt0.c3, t0.c0;
SELECT vt0.c0, rt0.c0, t0.c1, rt0.c2, rt0.c1, t0.c2, v0.c0, rt0.c3, t0.c0 FROM vt0, v0, t0, rt0 GROUP BY vt0.c0, rt0.c0, t0.c1, rt0.c2, rt0.c1, t0.c2, v0.c0, rt0.c3, t0.c0;
SELECT rt0.c1 FROM t0, v0, vt0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM t0, v0, vt0, rt0 GROUP BY rt0.c1 HAVING (('-1642262734') NOT BETWEEN (GROUP_CONCAT(TOTAL(COUNT(t0.c2)))) AND (COUNT(*))) COLLATE RTRIM UNION ALL SELECT rt0.c1 FROM t0, v0, vt0, rt0 GROUP BY rt0.c1 HAVING (NOT ((('-1642262734') NOT BETWEEN (GROUP_CONCAT(TOTAL(COUNT(t0.c2)))) AND (COUNT(*))) COLLATE RTRIM)) UNION ALL SELECT rt0.c1 FROM t0, v0, vt0, rt0 GROUP BY rt0.c1 HAVING (((('-1642262734') NOT BETWEEN (GROUP_CONCAT(TOTAL(COUNT(t0.c2)))) AND (COUNT(*))) COLLATE RTRIM) ISNULL);
SELECT ALL v0.c0 FROM rt0, v0, t0;
SELECT v0.c0 FROM rt0, v0, t0 WHERE (LIKELIHOOD(((t0.c1) NOT BETWEEN (x'') AND (rt0.c2)), 0.22555438154102714)) UNION ALL SELECT ALL v0.c0 FROM rt0, v0, t0 WHERE ((NOT (LIKELIHOOD(((t0.c1) NOT BETWEEN (x'') AND (rt0.c2)), 0.22555438154102714)))) UNION ALL SELECT v0.c0 FROM rt0, v0, t0 WHERE (((LIKELIHOOD(((t0.c1) NOT BETWEEN (x'') AND (rt0.c2)), 0.22555438154102714)) ISNULL));
SELECT ALL v0.c0 FROM rt0, v0, t0;
SELECT DISTINCT t0.c1 FROM t0;
SELECT DISTINCT t0.c1 FROM t0 WHERE (CAST(SQLITE_COMPILEOPTION_GET(t0.c1) AS BLOB)) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE ((NOT (CAST(SQLITE_COMPILEOPTION_GET(t0.c1) AS BLOB)))) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE (((CAST(SQLITE_COMPILEOPTION_GET(t0.c1) AS BLOB)) ISNULL));
SELECT DISTINCT t0.c1 FROM t0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((NOT (((t0.c0)&(t0.c0))))) GROUP BY t0.c1, t0.c2, t0.c0 UNION SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((NOT ((NOT (((t0.c0)&(t0.c0))))))) GROUP BY t0.c1, t0.c2, t0.c0 UNION SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((((NOT (((t0.c0)&(t0.c0))))) ISNULL)) GROUP BY t0.c1, t0.c2, t0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0, v0, t0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0, v0, t0 GROUP BY rt0.c0, rt0.c2 HAVING MAX(TOTAL(v0.c0)) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt0, rt0, v0, t0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MAX(TOTAL(v0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt0, rt0, v0, t0 GROUP BY rt0.c0, rt0.c2 HAVING ((MAX(TOTAL(v0.c0))) ISNULL);
SELECT ALL rt0.c2, v0.c0, rt0.c3, rt0.c0, rt0.c1 FROM rt0, v0;
SELECT ALL rt0.c2, v0.c0, rt0.c3, rt0.c0, rt0.c1 FROM rt0, v0 WHERE (((((((((rt0.c3)AND((((rt0.c3, rt0.c0, rt0.c2))=((rt0.c1, rt0.c3, rt0.c2))))))OR(((rt0.c0)/(rt0.c2)))))OR(v0.c0 COLLATE NOCASE)))AND(rt0.c1 COLLATE RTRIM))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c3, rt0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (((((((((rt0.c3)AND((((rt0.c3, rt0.c0, rt0.c2))==((rt0.c1, rt0.c3, rt0.c2))))))OR(((rt0.c0)/(rt0.c2)))))OR(v0.c0 COLLATE NOCASE)))AND(rt0.c1 COLLATE RTRIM))))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c3, rt0.c0, rt0.c1 FROM rt0, v0 WHERE (((((((((((rt0.c3)AND((((rt0.c3, rt0.c0, rt0.c2))=((rt0.c1, rt0.c3, rt0.c2))))))OR(((rt0.c0)/(rt0.c2)))))OR(v0.c0 COLLATE NOCASE)))AND(rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT ALL rt0.c2, v0.c0, rt0.c3, rt0.c0, rt0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c1, t0.c2, rt0.c3, rt0.c0, v0.c0, t0.c0, t0.c1, rt0.c2 FROM t0, v0, rt0;
SELECT DISTINCT rt0.c1, t0.c2, rt0.c3, rt0.c0, v0.c0, t0.c0, t0.c1, rt0.c2 FROM t0, v0, rt0 WHERE ((((rt0.c2 IN ())) NOT NULL)) UNION SELECT DISTINCT rt0.c1, t0.c2, rt0.c3, rt0.c0, v0.c0, t0.c0, t0.c1, rt0.c2 FROM t0, v0, rt0 WHERE ((NOT ((((rt0.c2 IN ())) NOT NULL)))) UNION SELECT DISTINCT rt0.c1, t0.c2, rt0.c3, rt0.c0, v0.c0, t0.c0, t0.c1, rt0.c2 FROM t0, v0, rt0 WHERE ((((((rt0.c2 IN ())) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c1, t0.c2, rt0.c3, rt0.c0, v0.c0, t0.c0, t0.c1, rt0.c2 FROM t0, v0, rt0;
SELECT ALL rt0.c2, rt0.c1 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON (CAST(rt0.c0 AS BLOB) IN (vt0.c0 COLLATE NOCASE)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON (CAST(rt0.c0 AS BLOB) IN (vt0.c0 COLLATE NOCASE)) WHERE (CASE WHEN v0.c0 THEN vt0.c0 END COLLATE RTRIM) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON (CAST(rt0.c0 AS BLOB) IN (vt0.c0 COLLATE NOCASE)) WHERE ((NOT (CASE WHEN v0.c0 THEN vt0.c0 END COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON (CAST(rt0.c0 AS BLOB) IN (vt0.c0 COLLATE NOCASE)) WHERE (((CASE WHEN v0.c0 THEN vt0.c0 END COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON (CAST(rt0.c0 AS BLOB) IN (vt0.c0 COLLATE NOCASE)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c0, rt0.c2 HAVING AVG(COUNT(*)) UNION ALL SELECT rt0.c1, v0.c0, rt0.c3, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c0, rt0.c2 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c0, rt0.c2 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((((rt0.c0) NOTNULL) IN ())) ORDER BY (((((x'') NOTNULL), vt0.c0, rt0.c0))<((rt0.c1, CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 END, (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) ASC, (((rt0.c2 IN (rt0.c0, rt0.c0))) IS TRUE) ASC  NULLS FIRST, 0.7355676325478172 DESC  NULLS LAST;
SELECT rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((rt0.c0) NOTNULL) IN ())))) ORDER BY (((((x'') NOTNULL), vt0.c0, rt0.c0))<((rt0.c1, CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 END, (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) ASC, (((rt0.c2 IN (rt0.c0, rt0.c0))) IS TRUE) ASC  NULLS FIRST, 0.7355676325478172 DESC  NULLS LAST;
SELECT rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((((((rt0.c0) NOTNULL) IN ())) ISNULL)) ORDER BY (((((x'') NOTNULL), vt0.c0, rt0.c0))<((rt0.c1, CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 END, (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) ASC, (((rt0.c2 IN (rt0.c0, rt0.c0))) IS TRUE) ASC  NULLS FIRST, 0.7355676325478172 DESC  NULLS LAST;
SELECT rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT t0.c1 FROM t0;
SELECT DISTINCT t0.c1 FROM t0 WHERE (CAST(((t0.c0)IS NOT(1.494825508E9)) AS BLOB)) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE ((NOT (CAST(((t0.c0)IS NOT(1.494825508E9)) AS BLOB)))) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE (((CAST(((t0.c0)IS NOT(1.494825508E9)) AS BLOB)) ISNULL));
SELECT DISTINCT t0.c1 FROM t0;
SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c1))>=((rt0.c2))))<<(load_extension(rt0.c3)))) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c1))>=((rt0.c2))))<<(load_extension(rt0.c3)))))) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((((rt0.c1))>=((rt0.c2))))<<(load_extension(rt0.c3)))) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE WHEN COUNT(GROUP_CONCAT(COUNT(MIN(SUM(GROUP_CONCAT(vt0.c0)))))) THEN ((((vt0.c0)OR(vt0.c0)))OR(MIN(vt0.c0))) ELSE ((vt0.c0) ISNULL) END UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE WHEN COUNT(GROUP_CONCAT(COUNT(MIN(SUM(GROUP_CONCAT(vt0.c0)))))) THEN ((((vt0.c0)OR(vt0.c0)))OR(MIN(vt0.c0))) ELSE ((vt0.c0) ISNULL) END)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE WHEN COUNT(GROUP_CONCAT(COUNT(MIN(SUM(GROUP_CONCAT(vt0.c0)))))) THEN ((((vt0.c0)OR(vt0.c0)))OR(MIN(vt0.c0))) ELSE ((vt0.c0) ISNULL) END) ISNULL);
SELECT ALL * FROM t0, v0, rt0 RIGHT OUTER JOIN vt0 ON 0.9535026221260805;
SELECT * FROM t0, v0, rt0 RIGHT OUTER JOIN vt0 ON 0.9535026221260805 WHERE (CAST(t0.c0 AS BLOB)) UNION ALL SELECT ALL * FROM t0, v0, rt0 RIGHT OUTER JOIN vt0 ON 0.9535026221260805 WHERE ((NOT (CAST(t0.c0 AS BLOB)))) UNION ALL SELECT * FROM t0 NOT INDEXED, v0, rt0 RIGHT OUTER JOIN vt0 ON 0.9535026221260805 WHERE (((CAST(t0.c0 AS BLOB)) ISNULL));
SELECT ALL * FROM t0, v0, rt0 RIGHT OUTER JOIN vt0 ON 0.9535026221260805;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0)!=(v0.c0)), v0.c0, ((v0.c0)>=(v0.c0))))=((((v0.c0) BETWEEN (v0.c0) AND (0xffffffffb6b19db4)), (v0.c0 IN ()), (v0.c0 IN ()))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((v0.c0)<>(v0.c0)), v0.c0, ((v0.c0)>=(v0.c0))))=((((v0.c0) BETWEEN (v0.c0) AND (0xffffffffb6b19db4)), (v0.c0 IN ()), (v0.c0 IN ()))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((v0.c0)<>(v0.c0)), v0.c0, ((v0.c0)>=(v0.c0))))==((((v0.c0) BETWEEN (v0.c0) AND (0Xffffffffb6b19db4)), (v0.c0 IN ()), (v0.c0 IN ()))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((NOT (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((NOT (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL t0.c0, rt0.c2 FROM rt0, vt0, v0, t0 GROUP BY t0.c0, rt0.c2;
SELECT ALL t0.c0, rt0.c2 FROM rt0, vt0, v0, t0 GROUP BY t0.c0, rt0.c2 HAVING (((t0.c0)=(MAX(t0.c2))) IN ()) UNION ALL SELECT ALL t0.c0, rt0.c2 FROM rt0, vt0, v0, t0 GROUP BY t0.c0, rt0.c2 HAVING (NOT ((((t0.c0)=(MAX(t0.c2))) IN ()))) UNION ALL SELECT ALL t0.c0, rt0.c2 FROM rt0, vt0, v0, t0 GROUP BY t0.c0, rt0.c2 HAVING (((((t0.c0)==(MAX(t0.c2))) IN ())) ISNULL);
SELECT ALL t0.c0, rt0.c2 FROM rt0, vt0, v0, t0 GROUP BY t0.c0, rt0.c2;
SELECT ALL t0.c0, rt0.c2 FROM rt0, vt0, v0, t0 GROUP BY t0.c0, rt0.c2 HAVING (((t0.c0)=(MAX(t0.c2))) IN ()) UNION ALL SELECT ALL t0.c0, rt0.c2 FROM rt0, vt0, v0, t0 GROUP BY t0.c0, rt0.c2 HAVING (NOT ((((t0.c0)=(MAX(t0.c2))) IN ()))) UNION ALL SELECT ALL t0.c0, rt0.c2 FROM rt0, vt0, v0, t0 GROUP BY t0.c0, rt0.c2 HAVING (((((t0.c0)==(MAX(t0.c2))) IN ())) ISNULL);
SELECT ALL t0.c0, rt0.c2 FROM rt0, vt0, v0, t0 GROUP BY t0.c0, rt0.c2;
SELECT t0.c1, rt0.c0 FROM rt0, t0;
SELECT t0.c1, rt0.c0 FROM rt0, t0 WHERE (CASE WHEN SQLITE_VERSION() THEN (rt0.c1 IN (rt0.c1)) WHEN (rt0.c0 IN ()) THEN (- (rt0.c0)) WHEN LOWER(rt0.c3) THEN 0x285e8efb END) UNION ALL SELECT ALL t0.c1, rt0.c0 FROM rt0, t0 WHERE ((NOT (CASE WHEN SQLITE_VERSION() THEN (rt0.c1 IN (rt0.c1)) WHEN (rt0.c0 IN ()) THEN (- (rt0.c0)) WHEN LOWER(rt0.c3) THEN 0x285e8efb END))) UNION ALL SELECT t0.c1, rt0.c0 FROM rt0, t0 WHERE (((CASE WHEN SQLITE_VERSION() THEN (rt0.c1 IN (rt0.c1)) WHEN (rt0.c0 IN ()) THEN (- (rt0.c0)) WHEN LOWER(rt0.c3) THEN 0x285e8efb END) ISNULL));
SELECT t0.c1, rt0.c0 FROM rt0, t0;
SELECT DISTINCT v0.c0, t0.c1 FROM t0, v0;
SELECT DISTINCT v0.c0, t0.c1 FROM t0, v0 WHERE ((CAST(v0.c0 AS TEXT) IN ())) UNION SELECT DISTINCT v0.c0, t0.c1 FROM t0, v0 WHERE ((NOT ((CAST(v0.c0 AS TEXT) IN ())))) UNION SELECT DISTINCT v0.c0, t0.c1 FROM t0, v0 WHERE ((((CAST(v0.c0 AS TEXT) IN ())) ISNULL));
SELECT DISTINCT v0.c0, t0.c1 FROM t0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0)AND(v0.c0)))OR(v0.c0)) COLLATE RTRIM) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)AND(v0.c0)))OR(v0.c0)) COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((((t0.c2) IS FALSE)) ISNULL) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT (((((t0.c2) IS FALSE)) ISNULL))) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((((((t0.c2) IS FALSE)) ISNULL)) ISNULL);
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((((t0.c2) IS FALSE)) ISNULL) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT (((((t0.c2) IS FALSE)) ISNULL))) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((((((t0.c2) IS FALSE)) ISNULL)) ISNULL);
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL * FROM t0, v0 LEFT OUTER JOIN vt0 ON DATETIME(((rt0.c0)&(t0.c0)), ((t0.c0) NOT NULL), (((t0.c0))>=((t0.c1)))) LEFT OUTER JOIN rt0 ON (((((x'c61b', vt0.c0, vt0.c0)) BETWEEN ((t0.c1, '', t0.c0)) AND ((rt0.c3, rt0.c3, rt0.c3))))OR(NULL));
SELECT DISTINCT * FROM vt0, rt0, t0;
SELECT DISTINCT * FROM vt0, rt0, t0 WHERE (((((TRIM('g8Cx9', rt0.c2))OR(rt0.c2)))OR(((0.6699210493074652)%(rt0.c2))))) UNION SELECT DISTINCT * FROM vt0, rt0, t0 WHERE ((NOT (((((TRIM('g8Cx9', rt0.c2))OR(rt0.c2)))OR(((0.6699210493074652)%(rt0.c2))))))) UNION SELECT DISTINCT * FROM vt0, rt0, t0 WHERE (((((((TRIM('g8Cx9', rt0.c2))OR(rt0.c2)))OR(((0.6699210493074652)%(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, t0;
SELECT t0.c1, v0.c0, rt0.c1, rt0.c0, rt0.c3, t0.c0, t0.c2, rt0.c2 FROM rt0, t0, v0 GROUP BY t0.c1, v0.c0, rt0.c1, rt0.c0, rt0.c3, t0.c0, t0.c2, rt0.c2;
SELECT t0.c1, v0.c0, rt0.c1, rt0.c0, rt0.c3, t0.c0, t0.c2, rt0.c2 FROM rt0, t0, v0 WHERE (NULL) GROUP BY t0.c1, v0.c0, rt0.c1, rt0.c0, rt0.c3, t0.c0, t0.c2, rt0.c2 UNION SELECT ALL t0.c1, v0.c0, rt0.c1, rt0.c0, rt0.c3, t0.c0, t0.c2, rt0.c2 FROM rt0, t0, v0 WHERE ((NOT (NULL))) GROUP BY t0.c1, v0.c0, rt0.c1, rt0.c0, rt0.c3, t0.c0, t0.c2, rt0.c2 UNION SELECT t0.c1, v0.c0, rt0.c1, rt0.c0, rt0.c3, t0.c0, t0.c2, rt0.c2 FROM rt0, t0, v0 WHERE (((NULL) ISNULL)) GROUP BY t0.c1, v0.c0, rt0.c1, rt0.c0, rt0.c3, t0.c0, t0.c2, rt0.c2;
SELECT t0.c1, v0.c0, rt0.c1, rt0.c0, rt0.c3, t0.c0, t0.c2, rt0.c2 FROM rt0, t0, v0 GROUP BY t0.c1, v0.c0, rt0.c1, rt0.c0, rt0.c3, t0.c0, t0.c2, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(((((((((((((SUM(vt0.c0))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(-2053446105)))OR(vt0.c0)))OR(MAX(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(((((((((((((SUM(vt0.c0))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(-2053446105)))OR(vt0.c0)))OR(MAX(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(((((((((((((SUM(vt0.c0))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(-2053446105)))OR(vt0.c0)))OR(MAX(vt0.c0))))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM v0, vt0, rt0 FULL OUTER JOIN t0 ON '-2001502217';
SELECT rt0.c2, rt0.c0 FROM v0, vt0, rt0 FULL OUTER JOIN t0 ON '-2001502217' WHERE (CASE WHEN ((vt0.c0)IS NOT(v0.c0)) THEN ((rt0.c0)<<(t0.c2)) ELSE t0.c0 COLLATE RTRIM END) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM v0, vt0, rt0 FULL OUTER JOIN t0 ON '-2001502217' WHERE ((NOT (CASE WHEN ((vt0.c0)IS NOT(v0.c0)) THEN ((rt0.c0)<<(t0.c2)) ELSE t0.c0 COLLATE RTRIM END))) UNION ALL SELECT rt0.c2, rt0.c0 FROM v0, vt0, rt0 FULL OUTER JOIN t0 ON '-2001502217' WHERE (((CASE WHEN ((vt0.c0)IS NOT(v0.c0)) THEN ((rt0.c0)<<(t0.c2)) ELSE t0.c0 COLLATE RTRIM END) ISNULL));
SELECT rt0.c2, rt0.c0 FROM v0, vt0, rt0 FULL OUTER JOIN t0 ON '-2001502217';
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((t0.c2)AND(((t0.c1) BETWEEN (t0.c1) AND (t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c2)AND(((t0.c1) BETWEEN (t0.c1) AND (t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((t0.c2)AND(((t0.c1) BETWEEN (t0.c1) AND (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS INTEGER)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(CAST(vt0.c0 AS REAL) AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST(CAST(vt0.c0 AS REAL) AS INTEGER)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0, rt0.c3, rt0.c1, t0.c1, rt0.c2 FROM rt0, t0, vt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c1, t0.c1, rt0.c2;
SELECT ALL v0.c0, rt0.c3, rt0.c1, t0.c1, rt0.c2 FROM rt0, t0, vt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c1, t0.c1, rt0.c2 HAVING ((((COUNT(COUNT(COUNT(SUM(AVG(rt0.c2))))))AND(COUNT(rt0.c2))))OR(MAX(MAX(1.39383992E8)))) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c1, t0.c1, rt0.c2 FROM rt0, t0, vt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c1, t0.c1, rt0.c2 HAVING (NOT (((((COUNT(COUNT(COUNT(SUM(AVG(rt0.c2))))))AND(COUNT(rt0.c2))))OR(MAX(MAX(1.39383992E8)))))) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c1, t0.c1, rt0.c2 FROM rt0, t0, vt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c1, t0.c1, rt0.c2 HAVING ((((((COUNT(COUNT(COUNT(SUM(AVG(rt0.c2))))))AND(COUNT(rt0.c2))))OR(MAX(MAX(1.39383992E8))))) ISNULL);
SELECT t0.c2 FROM t0, v0;
SELECT ALL t0.c2 FROM t0, v0 WHERE ((NOT (((t0.c0) IS TRUE)))) UNION ALL SELECT ALL t0.c2 FROM t0, v0 WHERE ((NOT ((NOT (((t0.c0) IS TRUE)))))) UNION ALL SELECT t0.c2 FROM t0, v0 WHERE ((((NOT (((t0.c0) IS TRUE)))) ISNULL));
SELECT t0.c2 FROM t0, v0;
SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON ((rt0.c1)<<((+ (rt0.c2)))) INNER JOIN vt0 ON ((((rt0.c2) IS TRUE))>(rt0.c2));
SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON ((rt0.c1)<<((+ (rt0.c2)))) INNER JOIN vt0 ON ((((rt0.c2) IS TRUE))>(rt0.c2)) WHERE (CASE (((('1730857235')AND(vt0.c0)))AND(rt0.c3))  WHEN (((rt0.c1))<=((-8.45984765E8))) THEN ((rt0.c3) IS FALSE) END) UNION SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON ((rt0.c1)<<((+ (rt0.c2)))) INNER JOIN vt0 ON ((((rt0.c2) IS TRUE))>(rt0.c2)) WHERE ((NOT (CASE (((('1730857235')AND(vt0.c0)))AND(rt0.c3))  WHEN (((rt0.c1))<=((-8.45984765E8))) THEN ((rt0.c3) IS FALSE) END))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON ((rt0.c1)<<((+ (rt0.c2)))) INNER JOIN vt0 ON ((((rt0.c2) IS TRUE))>(rt0.c2)) WHERE (((CASE (((('1730857235')AND(vt0.c0)))AND(rt0.c3))  WHEN (((rt0.c1))<=((-8.45984765E8))) THEN ((rt0.c3) IS FALSE) END) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN v0 ON ((rt0.c1)<<((+ (rt0.c2)))) INNER JOIN vt0 ON ((((rt0.c2) IS TRUE))>(rt0.c2));
SELECT t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM vt0, t0 WHERE (((((t0.c1)LIKE(t0.c1))) NOT BETWEEN (json(NULL)) AND (((t0.c2) BETWEEN (vt0.c0) AND (t0.c0))))) GROUP BY t0.c1, t0.c2 UNION SELECT t0.c1, t0.c2 FROM vt0, t0 WHERE ((NOT (((((t0.c1)LIKE(t0.c1))) NOT BETWEEN (json(NULL)) AND (((t0.c2) BETWEEN (vt0.c0) AND (t0.c0))))))) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM vt0, t0 WHERE (((((((t0.c1)LIKE(t0.c1))) NOT BETWEEN (json(NULL)) AND (((t0.c2) BETWEEN (vt0.c0) AND (t0.c0))))) ISNULL)) GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM vt0, t0 GROUP BY t0.c1, t0.c2;
SELECT rt0.c2, rt0.c0, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON (rt0.c1 COLLATE BINARY IN ()) GROUP BY rt0.c2, rt0.c0, v0.c0;
SELECT ALL rt0.c2, rt0.c0, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON (rt0.c1 COLLATE BINARY IN ()) GROUP BY rt0.c2, rt0.c0, v0.c0 HAVING TOTAL(COUNT(rt0.c0)) UNION ALL SELECT ALL rt0.c2, rt0.c0, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON (rt0.c1 COLLATE BINARY IN ()) GROUP BY rt0.c2, rt0.c0, v0.c0 HAVING (NOT (TOTAL(COUNT(rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c0, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON (rt0.c1 COLLATE BINARY IN ()) GROUP BY rt0.c2, rt0.c0, v0.c0 HAVING ((TOTAL(COUNT(rt0.c0))) ISNULL);
SELECT * FROM vt0 INNER JOIN v0 ON load_extension((~ (vt0.c0)));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON CAST(HEX(DISTINCT rt0.c1) AS REAL) CROSS JOIN t0 ON (((((rt0.c0))<((t0.c2)))) BETWEEN (((((((((((((((((rt0.c0)AND(t0.c1)))AND(rt0.c2)))AND(t0.c1)))AND(t0.c2)))AND(v0.c0)))OR(rt0.c1)))AND(t0.c2)))OR('pJEJx<*'))) AND (((v0.c0)AND(rt0.c3))));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON CAST(HEX(DISTINCT rt0.c1) AS REAL) CROSS JOIN t0 ON (((((rt0.c0))<((t0.c2)))) BETWEEN (((((((((((((((((rt0.c0)AND(t0.c1)))AND(rt0.c2)))AND(t0.c1)))AND(t0.c2)))AND(v0.c0)))OR(rt0.c1)))AND(t0.c2)))OR('pJEJx<*'))) AND (((v0.c0)AND(rt0.c3)))) WHERE (CHAR(((t0.c1)==(t0.c1)))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON CAST(HEX(DISTINCT rt0.c1) AS REAL) CROSS JOIN t0 ON (((((rt0.c0))<((t0.c2)))) BETWEEN (((((((((((((((((rt0.c0)AND(t0.c1)))AND(rt0.c2)))AND(t0.c1)))AND(t0.c2)))AND(v0.c0)))OR(rt0.c1)))AND(t0.c2)))OR('pJEJx<*'))) AND (((v0.c0)AND(rt0.c3)))) WHERE ((NOT (CHAR(((t0.c1)==(t0.c1)))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON CAST(HEX(DISTINCT rt0.c1) AS REAL) CROSS JOIN t0 ON (((((rt0.c0))<((t0.c2)))) BETWEEN (((((((((((((((((rt0.c0)AND(t0.c1)))AND(rt0.c2)))AND(t0.c1)))AND(t0.c2)))AND(v0.c0)))OR(rt0.c1)))AND(t0.c2)))OR('pJEJx<*'))) AND (((v0.c0)AND(rt0.c3)))) WHERE (((CHAR(((t0.c1)==(t0.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON CAST(HEX(DISTINCT rt0.c1) AS REAL) CROSS JOIN t0 ON (((((rt0.c0))<((t0.c2)))) BETWEEN (((((((((((((((((rt0.c0)AND(t0.c1)))AND(rt0.c2)))AND(t0.c1)))AND(t0.c2)))AND(v0.c0)))OR(rt0.c1)))AND(t0.c2)))OR('pJEJx<*'))) AND (((v0.c0)AND(rt0.c3))));
SELECT ALL v0.c0, rt0.c0 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON TYPEOF(DISTINCT NULLIF(DISTINCT rt0.c3, vt0.c0)) GROUP BY v0.c0, rt0.c0;
SELECT ALL v0.c0, rt0.c0 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON TYPEOF(DISTINCT NULLIF(DISTINCT rt0.c3, vt0.c0)) WHERE (((((rt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0))) ISNULL)) GROUP BY v0.c0, rt0.c0 UNION SELECT v0.c0, rt0.c0 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON TYPEOF(DISTINCT NULLIF(DISTINCT rt0.c3, vt0.c0)) WHERE ((NOT (((((rt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0))) ISNULL)))) GROUP BY v0.c0, rt0.c0 UNION SELECT v0.c0, rt0.c0 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON TYPEOF(DISTINCT NULLIF(DISTINCT rt0.c3, vt0.c0)) WHERE (((((((rt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0))) ISNULL)) ISNULL)) GROUP BY v0.c0, rt0.c0;
SELECT ALL v0.c0, rt0.c0 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON TYPEOF(DISTINCT NULLIF(DISTINCT rt0.c3, vt0.c0)) GROUP BY v0.c0, rt0.c0;
SELECT ALL t0.c2, t0.c0, v0.c0, t0.c1, vt0.c0 FROM t0, v0, vt0 GROUP BY t0.c2, t0.c0, v0.c0, t0.c1, vt0.c0;
SELECT ALL t0.c2, t0.c0, v0.c0, t0.c1, vt0.c0 FROM t0, v0, vt0 GROUP BY t0.c2, t0.c0, v0.c0, t0.c1, vt0.c0 HAVING (((NOT (GROUP_CONCAT(t0.c1)))) BETWEEN (TOTAL(MAX(t0.c2))) AND (MIN(AVG(GROUP_CONCAT(AVG(GROUP_CONCAT(MIN(TOTAL(t0.c0))))))))) UNION ALL SELECT t0.c2, t0.c0, v0.c0, t0.c1, vt0.c0 FROM t0 NOT INDEXED, v0, vt0 GROUP BY t0.c2, t0.c0, v0.c0, t0.c1, vt0.c0 HAVING (NOT ((((NOT (GROUP_CONCAT(t0.c1)))) BETWEEN (TOTAL(MAX(t0.c2))) AND (MIN(AVG(GROUP_CONCAT(AVG(GROUP_CONCAT(MIN(TOTAL(t0.c0))))))))))) UNION ALL SELECT t0.c2, t0.c0, v0.c0, t0.c1, vt0.c0 FROM t0, v0, vt0 GROUP BY t0.c2, t0.c0, v0.c0, t0.c1, vt0.c0 HAVING (((((NOT (GROUP_CONCAT(t0.c1)))) BETWEEN (TOTAL(MAX(t0.c2))) AND (MIN(AVG(GROUP_CONCAT(AVG(GROUP_CONCAT(MIN(TOTAL(t0.c0)))))))))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (('108122912' IN ())) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (('108122912' IN ())))) UNION ALL SELECT * FROM t0 WHERE (((('108122912' IN ())) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0 NOT INDEXED RIGHT OUTER JOIN v0 ON ((((t0.c1)AND(CAST(t0.c1 AS INTEGER))))OR(((t0.c2) IS TRUE)));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN v0 ON ((((t0.c1)AND(CAST(t0.c1 AS INTEGER))))OR(((t0.c2) IS TRUE))) WHERE (CAST(t0.c1 AS NUMERIC) COLLATE NOCASE) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN v0 ON ((((t0.c1)AND(CAST(t0.c1 AS INTEGER))))OR(((t0.c2) IS TRUE))) WHERE ((NOT (CAST(t0.c1 AS NUMERIC) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN v0 ON ((((t0.c1)AND(CAST(t0.c1 AS INTEGER))))OR(((t0.c2) IS TRUE))) WHERE (((CAST(t0.c1 AS NUMERIC) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t0 NOT INDEXED RIGHT OUTER JOIN v0 ON ((((t0.c1)AND(CAST(t0.c1 AS INTEGER))))OR(((t0.c2) IS TRUE)));
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0 WHERE ((((t0.c1)) BETWEEN ((((v0.c0) ISNULL))) AND ((DATETIME(t0.c0, t0.c2, t0.c1, v0.c0, v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t0, v0 WHERE ((NOT ((((t0.c1)) BETWEEN ((((v0.c0) ISNULL))) AND ((DATETIME(t0.c0, t0.c2, t0.c1, v0.c0, v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t0, v0 WHERE ((((((t0.c1)) BETWEEN ((((v0.c0) ISNULL))) AND ((DATETIME(t0.c0, t0.c2, t0.c1, v0.c0, v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c2 HAVING ((TOTAL(MAX(TOTAL(v0.c0)))) ISNULL) UNION ALL SELECT ALL rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c2 HAVING (NOT (((TOTAL(MAX(TOTAL(v0.c0)))) ISNULL))) UNION ALL SELECT rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c2 HAVING ((((TOTAL(MAX(TOTAL(v0.c0)))) ISNULL)) ISNULL);
SELECT ALL t0.c2 FROM v0 RIGHT OUTER JOIN t0 ON (CASE WHEN t0.c0 THEN v0.c0 WHEN x'a51c251f' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c2 WHEN v0.c0 THEN v0.c0 END IN ());
SELECT t0.c2 FROM v0 RIGHT OUTER JOIN t0 ON (CASE WHEN t0.c0 THEN v0.c0 WHEN x'a51c251f' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c2 WHEN v0.c0 THEN v0.c0 END IN ()) WHERE (((v0.c0) NOTNULL)) UNION ALL SELECT ALL t0.c2 FROM v0 RIGHT OUTER JOIN t0 ON (CASE WHEN t0.c0 THEN v0.c0 WHEN x'a51c251f' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c2 WHEN v0.c0 THEN v0.c0 END IN ()) WHERE ((NOT (((v0.c0) NOTNULL)))) UNION ALL SELECT ALL t0.c2 FROM v0 RIGHT OUTER JOIN t0 ON (CASE WHEN t0.c0 THEN v0.c0 WHEN x'a51c251f' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c2 WHEN v0.c0 THEN v0.c0 END IN ()) WHERE (((((v0.c0) NOTNULL)) ISNULL));
SELECT ALL t0.c2 FROM v0 RIGHT OUTER JOIN t0 ON (CASE WHEN t0.c0 THEN v0.c0 WHEN x'a51c251f' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c2 WHEN v0.c0 THEN v0.c0 END IN ());
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE (LTRIM(((rt0.c0)>=(rt0.c3)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (LTRIM(((rt0.c0)>=(rt0.c3)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE (((LTRIM(((rt0.c0)>=(rt0.c3)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0;
SELECT ALL t0.c0, rt0.c0, rt0.c2, t0.c2, t0.c1, rt0.c3, v0.c0, rt0.c1 FROM t0, rt0, v0 GROUP BY t0.c0, rt0.c0, rt0.c2, t0.c2, t0.c1, rt0.c3, v0.c0, rt0.c1;
SELECT ALL t0.c0, rt0.c0, rt0.c2, t0.c2, t0.c1, rt0.c3, v0.c0, rt0.c1 FROM t0, rt0, v0 WHERE (((rt0.c0) NOT BETWEEN (v0.c0) AND ('f?')) COLLATE BINARY) GROUP BY t0.c0, rt0.c0, rt0.c2, t0.c2, t0.c1, rt0.c3, v0.c0, rt0.c1 UNION SELECT t0.c0, rt0.c0, rt0.c2, t0.c2, t0.c1, rt0.c3, v0.c0, rt0.c1 FROM t0, rt0, v0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (v0.c0) AND ('f?')) COLLATE BINARY))) GROUP BY t0.c0, rt0.c0, rt0.c2, t0.c2, t0.c1, rt0.c3, v0.c0, rt0.c1 UNION SELECT t0.c0, rt0.c0, rt0.c2, t0.c2, t0.c1, rt0.c3, v0.c0, rt0.c1 FROM t0, rt0, v0 WHERE (((((rt0.c0) NOT BETWEEN (v0.c0) AND ('f?')) COLLATE BINARY) ISNULL)) GROUP BY t0.c0, rt0.c0, rt0.c2, t0.c2, t0.c1, rt0.c3, v0.c0, rt0.c1;
SELECT ALL t0.c0, rt0.c0, rt0.c2, t0.c2, t0.c1, rt0.c3, v0.c0, rt0.c1 FROM t0, rt0, v0 GROUP BY t0.c0, rt0.c0, rt0.c2, t0.c2, t0.c1, rt0.c3, v0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1, t0.c0, vt0.c0, t0.c2 FROM t0, rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c0, vt0.c0, t0.c2;
SELECT rt0.c0, rt0.c2, rt0.c1, t0.c0, vt0.c0, t0.c2 FROM t0, rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c0, vt0.c0, t0.c2 HAVING rt0.c1 UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, t0.c0, vt0.c0, t0.c2 FROM t0, rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c0, vt0.c0, t0.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, t0.c0, vt0.c0, t0.c2 FROM t0, rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c0, vt0.c0, t0.c2 HAVING ((rt0.c1) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1, t0.c0, vt0.c0, t0.c2 FROM t0, rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c0, vt0.c0, t0.c2;
SELECT rt0.c0, rt0.c2, rt0.c1, t0.c0, vt0.c0, t0.c2 FROM t0, rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c0, vt0.c0, t0.c2 HAVING rt0.c1 UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, t0.c0, vt0.c0, t0.c2 FROM t0, rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c0, vt0.c0, t0.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, t0.c0, vt0.c0, t0.c2 FROM t0, rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c0, vt0.c0, t0.c2 HAVING ((rt0.c1) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1, t0.c0, vt0.c0, t0.c2 FROM t0, rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c0, vt0.c0, t0.c2;
SELECT t0.c2, t0.c0, v0.c0, t0.c1 FROM v0 NATURAL JOIN t0;
SELECT t0.c2, t0.c0, v0.c0, t0.c1 FROM v0 NATURAL JOIN t0 WHERE (((((v0.c0)LIKE(t0.c1)))&((+ (t0.c0))))) UNION ALL SELECT ALL t0.c2, t0.c0, v0.c0, t0.c1 FROM v0 NATURAL JOIN t0 WHERE ((NOT (((((v0.c0)LIKE(t0.c1)))&((+ (t0.c0))))))) UNION ALL SELECT t0.c2, t0.c0, v0.c0, t0.c1 FROM v0 NATURAL JOIN t0 WHERE (((((((v0.c0)LIKE(t0.c1)))&((+ (t0.c0))))) ISNULL));
SELECT t0.c2, t0.c0, v0.c0, t0.c1 FROM v0 NATURAL JOIN t0;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN v0 ON (((x'') NOT BETWEEN (0x3c1e9f09) AND (t0.c2)) IN (((vt0.c0) NOT NULL))) LEFT OUTER JOIN vt0 ON (((t0.c1 IN ())) BETWEEN (((((vt0.c0)AND(t0.c1)))AND(t0.c1))) AND (UNLIKELY(v0.c0))) LEFT OUTER JOIN rt0 ON CASE ((t0.c2) NOT BETWEEN (vt0.c0) AND (v0.c0))  WHEN CAST(NULL AS BLOB) THEN CAST(rt0.c1 AS TEXT) END;
SELECT t0.c0, rt0.c0, t0.c2, t0.c1, rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM v0, rt0, t0 GROUP BY t0.c0, rt0.c0, t0.c2, t0.c1, rt0.c2, rt0.c3, rt0.c1, v0.c0;
SELECT t0.c0, rt0.c0, t0.c2, t0.c1, rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM v0, rt0, t0 WHERE (CASE ((t0.c2) ISNULL)  WHEN ((rt0.c1)LIKE(t0.c2)) THEN ((((t0.c1)AND(rt0.c0)))OR(t0.c2)) ELSE CAST('' AS NUMERIC) END) GROUP BY t0.c0, rt0.c0, t0.c2, t0.c1, rt0.c2, rt0.c3, rt0.c1, v0.c0 UNION SELECT ALL t0.c0, rt0.c0, t0.c2, t0.c1, rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM v0, rt0, t0 WHERE ((NOT (CASE ((t0.c2) ISNULL)  WHEN ((rt0.c1)LIKE(t0.c2)) THEN ((((t0.c1)AND(rt0.c0)))OR(t0.c2)) ELSE CAST('' AS NUMERIC) END))) GROUP BY t0.c0, rt0.c0, t0.c2, t0.c1, rt0.c2, rt0.c3, rt0.c1, v0.c0 UNION SELECT ALL t0.c0, rt0.c0, t0.c2, t0.c1, rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM v0, rt0, t0 WHERE (((CASE ((t0.c2) ISNULL)  WHEN ((rt0.c1)LIKE(t0.c2)) THEN ((((t0.c1)AND(rt0.c0)))OR(t0.c2)) ELSE CAST('' AS NUMERIC) END) ISNULL)) GROUP BY t0.c0, rt0.c0, t0.c2, t0.c1, rt0.c2, rt0.c3, rt0.c1, v0.c0;
SELECT t0.c0, rt0.c0, t0.c2, t0.c1, rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM v0, rt0, t0 GROUP BY t0.c0, rt0.c0, t0.c2, t0.c1, rt0.c2, rt0.c3, rt0.c1, v0.c0;
SELECT vt0.c0, rt0.c0, rt0.c3, t0.c0 FROM v0 INNER JOIN t0 ON ((((((vt0.c0)OR(t0.c0)))OR(t0.c2)))IS(((((t0.c2)OR(rt0.c3)))OR(t0.c2)))) LEFT OUTER JOIN rt0 ON ((vt0.c0 COLLATE NOCASE)IS NOT((rt0.c1 IN ()))) RIGHT OUTER JOIN vt0 ON CASE v0.c0  WHEN (((v0.c0))>=((vt0.c0))) THEN t0.c1 END GROUP BY vt0.c0, rt0.c0, rt0.c3, t0.c0;
SELECT t0.c1, t0.c2, vt0.c0 FROM vt0 NATURAL JOIN t0;
SELECT t0.c1, t0.c2, vt0.c0 FROM vt0 NATURAL JOIN t0 WHERE ((((+ (vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c1))) AND ('-1246867249'))) UNION ALL SELECT ALL t0.c1, t0.c2, vt0.c0 FROM vt0 NATURAL JOIN t0 WHERE ((NOT ((((+ (vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c1))) AND ('-1246867249'))))) UNION ALL SELECT ALL t0.c1, t0.c2, vt0.c0 FROM vt0 NATURAL JOIN t0 WHERE ((((((+ (vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c1))) AND ('-1246867249'))) ISNULL));
SELECT t0.c1, t0.c2, vt0.c0 FROM vt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c1)*(rt0.c0))) AND (CAST(rt0.c1 AS BLOB)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c1)*(rt0.c0))) AND (CAST(rt0.c1 AS BLOB)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c1)*(rt0.c0))) AND (CAST(rt0.c1 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (v0.c0) AND ((~ (vt0.c0))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((NOT ((((vt0.c0 IN ())) NOT BETWEEN (v0.c0) AND ((~ (vt0.c0))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((((((vt0.c0 IN ())) NOT BETWEEN (v0.c0) AND ((~ (vt0.c0))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY v0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(AVG(vt0.c0)))OR(CAST(vt0.c0 AS TEXT))))OR(COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((TOTAL(AVG(vt0.c0)))OR(CAST(vt0.c0 AS TEXT))))OR(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((TOTAL(AVG(vt0.c0)))OR(CAST(vt0.c0 AS TEXT))))OR(COUNT(*)))) ISNULL);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((NULL) BETWEEN (((rt0.c0) IS TRUE)) AND (((t0.c1)IS NOT(t0.c0)))) LEFT OUTER JOIN rt0 ON ((CASE vt0.c0  WHEN t0.c2 THEN t0.c1 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END)LIKE(v0.c0)) LEFT OUTER JOIN v0 ON CAST(((rt0.c2)&(rt0.c0)) AS BLOB);
SELECT DISTINCT * FROM v0, rt0, vt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM v0, rt0, vt0 NATURAL JOIN t0 WHERE (UPPER(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 ELSE t0.c2 END)) UNION SELECT DISTINCT * FROM v0, rt0, vt0 NATURAL JOIN t0 WHERE ((NOT (UPPER(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 ELSE t0.c2 END)))) UNION SELECT DISTINCT * FROM v0, rt0, vt0 NATURAL JOIN t0 WHERE (((UPPER(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 ELSE t0.c2 END)) ISNULL));
SELECT DISTINCT * FROM v0, rt0, vt0 NATURAL JOIN t0;
SELECT ALL t0.c1, rt0.c2, t0.c0, v0.c0, rt0.c3, t0.c2, rt0.c1, rt0.c0 FROM v0, t0 NOT INDEXED, rt0 NOT INDEXED GROUP BY t0.c1, rt0.c2, t0.c0, v0.c0, rt0.c3, t0.c2, rt0.c1, rt0.c0;
SELECT t0.c1, rt0.c2, t0.c0, v0.c0, rt0.c3, t0.c2, rt0.c1, rt0.c0 FROM v0, t0, rt0 WHERE (((((rt0.c1)-(rt0.c3))) IS TRUE)) GROUP BY t0.c1, rt0.c2, t0.c0, v0.c0, rt0.c3, t0.c2, rt0.c1, rt0.c0 UNION SELECT ALL t0.c1, rt0.c2, t0.c0, v0.c0, rt0.c3, t0.c2, rt0.c1, rt0.c0 FROM v0, t0, rt0 WHERE ((NOT (((((rt0.c1)-(rt0.c3))) IS TRUE)))) GROUP BY t0.c1, rt0.c2, t0.c0, v0.c0, rt0.c3, t0.c2, rt0.c1, rt0.c0 UNION SELECT t0.c1, rt0.c2, t0.c0, v0.c0, rt0.c3, t0.c2, rt0.c1, rt0.c0 FROM v0, t0, rt0 WHERE (((((((rt0.c1)-(rt0.c3))) IS TRUE)) ISNULL)) GROUP BY t0.c1, rt0.c2, t0.c0, v0.c0, rt0.c3, t0.c2, rt0.c1, rt0.c0;
SELECT ALL t0.c1, rt0.c2, t0.c0, v0.c0, rt0.c3, t0.c2, rt0.c1, rt0.c0 FROM v0, t0 NOT INDEXED, rt0 NOT INDEXED GROUP BY t0.c1, rt0.c2, t0.c0, v0.c0, rt0.c3, t0.c2, rt0.c1, rt0.c0;
SELECT ALL t0.c1, t0.c2, rt0.c3, v0.c0, vt0.c0, t0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0, vt0, v0 GROUP BY t0.c1, t0.c2, rt0.c3, v0.c0, vt0.c0, t0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL t0.c1, t0.c2, rt0.c3, v0.c0, vt0.c0, t0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0, vt0, v0 GROUP BY t0.c1, t0.c2, rt0.c3, v0.c0, vt0.c0, t0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING AVG(MAX(t0.c1)) UNION ALL SELECT t0.c1, t0.c2, rt0.c3, v0.c0, vt0.c0, t0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0, vt0, v0 GROUP BY t0.c1, t0.c2, rt0.c3, v0.c0, vt0.c0, t0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (AVG(MAX(t0.c1)))) UNION ALL SELECT ALL t0.c1, t0.c2, rt0.c3, v0.c0, vt0.c0, t0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0, vt0, v0 GROUP BY t0.c1, t0.c2, rt0.c3, v0.c0, vt0.c0, t0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING ((AVG(MAX(t0.c1))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((DATE(rt0.c1, rt0.c2, rt0.c3)) NOTNULL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((DATE(rt0.c1, rt0.c2, rt0.c3)) NOTNULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((DATE(rt0.c1, rt0.c2, rt0.c3)) NOTNULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT t0.c1 FROM t0;
SELECT DISTINCT t0.c1 FROM t0 WHERE (CASE CAST('&pSS#' AS NUMERIC)  WHEN (((t0.c2, t0.c0, t0.c2)) BETWEEN ((t0.c1, t0.c2, t0.c1)) AND ((t0.c0, t0.c1, t0.c2))) THEN t0.c1 WHEN (+ (t0.c1)) THEN ((t0.c0) NOT NULL) WHEN '' THEN NULLIF(DISTINCT t0.c1, t0.c0) ELSE 5.51595972E8 END) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE ((NOT (CASE CAST('&pSS#' AS NUMERIC)  WHEN (((t0.c2, t0.c0, t0.c2)) BETWEEN ((t0.c1, t0.c2, t0.c1)) AND ((t0.c0, t0.c1, t0.c2))) THEN t0.c1 WHEN (+ (t0.c1)) THEN ((t0.c0) NOT NULL) WHEN '' THEN NULLIF(DISTINCT t0.c1, t0.c0) ELSE 5.51595972E8 END))) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE (((CASE CAST('&pSS#' AS NUMERIC)  WHEN (((t0.c2, t0.c0, t0.c2)) BETWEEN ((t0.c1, t0.c2, t0.c1)) AND ((t0.c0, t0.c1, t0.c2))) THEN t0.c1 WHEN (+ (t0.c1)) THEN ((t0.c0) NOT NULL) WHEN '' THEN NULLIF(DISTINCT t0.c1, t0.c0) ELSE 5.51595972E8 END) ISNULL));
SELECT DISTINCT t0.c1 FROM t0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 WHERE (vt0.c0) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE ((NOT (vt0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0, t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON (- ((((t0.c1))<>((t0.c1))))) GROUP BY v0.c0, t0.c0;
SELECT ALL v0.c0, t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON (- ((((t0.c1))!=((t0.c1))))) GROUP BY v0.c0, t0.c0 HAVING AVG(((((((((MAX(SUM(t0.c1)))OR(v0.c0)))OR(NULL)))OR(NULL)))OR(GROUP_CONCAT(COUNT(MIN(SUM('-2036731022'))))))) UNION ALL SELECT ALL v0.c0, t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON (- ((((t0.c1))<>((t0.c1))))) GROUP BY v0.c0, t0.c0 HAVING (NOT (AVG(((((((((MAX(SUM(t0.c1)))OR(v0.c0)))OR(NULL)))OR(NULL)))OR(GROUP_CONCAT(COUNT(MIN(SUM('-2036731022'))))))))) UNION ALL SELECT v0.c0, t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON (- ((((t0.c1))!=((t0.c1))))) GROUP BY v0.c0, t0.c0 HAVING ((AVG(((((((((MAX(SUM(t0.c1)))OR(v0.c0)))OR(NULL)))OR(NULL)))OR(GROUP_CONCAT(COUNT(MIN(SUM('-2036731022')))))))) ISNULL);
SELECT ALL * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE (((((rt0.c2)<<('')))&(((t0.c0) IS TRUE)))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (((((rt0.c2)<<('')))&(((t0.c0) IS TRUE)))))) UNION ALL SELECT * FROM t0, rt0 WHERE (((((((rt0.c2)<<('')))&(((t0.c0) IS TRUE)))) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, v0.c0, rt0.c0 FROM v0, vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, v0.c0, rt0.c0 FROM v0, vt0, rt0 WHERE (LOWER(DISTINCT rt0.c3) COLLATE BINARY) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, v0.c0, rt0.c0 FROM v0, vt0, rt0 WHERE ((NOT (LOWER(DISTINCT rt0.c3) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, v0.c0, rt0.c0 FROM v0, vt0, rt0 WHERE (((LOWER(DISTINCT rt0.c3) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0, v0.c0, rt0.c0 FROM v0, vt0, rt0;
SELECT rt0.c0, t0.c0, t0.c2 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, t0.c2;
SELECT ALL rt0.c0, t0.c0, t0.c2 FROM t0, rt0 WHERE (((((rt0.c2) IS FALSE))&(((((((((((((rt0.c1)OR('-714857878')))OR(t0.c0)))OR(rt0.c3)))OR(rt0.c0)))AND(t0.c1)))AND(t0.c2))))) GROUP BY rt0.c0, t0.c0, t0.c2 UNION SELECT ALL rt0.c0, t0.c0, t0.c2 FROM t0, rt0 WHERE ((NOT (((((rt0.c2) IS FALSE))&(((((((((((((rt0.c1)OR('-714857878')))OR(t0.c0)))OR(rt0.c3)))OR(rt0.c0)))AND(t0.c1)))AND(t0.c2))))))) GROUP BY rt0.c0, t0.c0, t0.c2 UNION SELECT rt0.c0, t0.c0, t0.c2 FROM t0, rt0 WHERE (((((((rt0.c2) IS FALSE))&(((((((((((((rt0.c1)OR('-714857878')))OR(t0.c0)))OR(rt0.c3)))OR(rt0.c0)))AND(t0.c1)))AND(t0.c2))))) ISNULL)) GROUP BY rt0.c0, t0.c0, t0.c2;
SELECT rt0.c0, t0.c0, t0.c2 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, t0.c2;
SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt0, vt0, v0, t0 GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt0, vt0, v0, t0 GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3 HAVING GROUP_CONCAT(rt0.c1 COLLATE BINARY) UNION ALL SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt0, vt0, v0, t0 GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3 HAVING (NOT (GROUP_CONCAT(rt0.c1 COLLATE BINARY))) UNION ALL SELECT rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt0, vt0, v0, t0 GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3 HAVING ((GROUP_CONCAT(rt0.c1 COLLATE BINARY)) ISNULL);
SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt0, vt0, v0, t0 GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt0, vt0, v0, t0 GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3 HAVING GROUP_CONCAT(rt0.c1 COLLATE BINARY) UNION ALL SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt0, vt0, v0, t0 GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3 HAVING (NOT (GROUP_CONCAT(rt0.c1 COLLATE BINARY))) UNION ALL SELECT rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt0, vt0, v0, t0 GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3 HAVING ((GROUP_CONCAT(rt0.c1 COLLATE BINARY)) ISNULL);
SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3 FROM rt0, vt0, v0, t0 GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c3;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0))==((v0.c0))) IN ())) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0))=((v0.c0))) IN ())))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0))=((v0.c0))) IN ())) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c2, t0.c2, t0.c0, t0.c1 FROM vt0, t0 RIGHT OUTER JOIN rt0 ON t0.c1 CROSS JOIN v0 ON ((((rt0.c3) IS TRUE))<>((rt0.c1 IN ())));
SELECT DISTINCT rt0.c2, t0.c2, t0.c0, t0.c1 FROM vt0, t0 RIGHT OUTER JOIN rt0 ON t0.c1 CROSS JOIN v0 ON ((((rt0.c3) IS TRUE))<>((rt0.c1 IN ()))) WHERE ((CAST(rt0.c2 AS INTEGER) IN ())) UNION SELECT DISTINCT rt0.c2, t0.c2, t0.c0, t0.c1 FROM vt0, t0 RIGHT OUTER JOIN rt0 ON t0.c1 CROSS JOIN v0 ON ((((rt0.c3) IS TRUE))<>((rt0.c1 IN ()))) WHERE ((NOT ((CAST(rt0.c2 AS INTEGER) IN ())))) UNION SELECT DISTINCT rt0.c2, t0.c2, t0.c0, t0.c1 FROM vt0, t0 RIGHT OUTER JOIN rt0 ON t0.c1 CROSS JOIN v0 ON ((((rt0.c3) IS TRUE))!=((rt0.c1 IN ()))) WHERE ((((CAST(rt0.c2 AS INTEGER) IN ())) ISNULL));
SELECT DISTINCT rt0.c2, t0.c2, t0.c0, t0.c1 FROM vt0, t0 RIGHT OUTER JOIN rt0 ON t0.c1 CROSS JOIN v0 ON ((((rt0.c3) IS TRUE))<>((rt0.c1 IN ())));
SELECT rt0.c3, rt0.c1, t0.c1, t0.c0 FROM v0, rt0, vt0, t0 GROUP BY rt0.c3, rt0.c1, t0.c1, t0.c0;
SELECT ALL rt0.c3, rt0.c1, t0.c1, t0.c0 FROM v0, rt0, vt0, t0 WHERE ((((((rt0.c0, t0.c2, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c1, t0.c2)) AND ((vt0.c0, rt0.c0, rt0.c1)))) IS TRUE)) GROUP BY rt0.c3, rt0.c1, t0.c1, t0.c0 UNION SELECT rt0.c3, rt0.c1, t0.c1, t0.c0 FROM v0, rt0, vt0, t0 WHERE ((NOT ((((((rt0.c0, t0.c2, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c1, t0.c2)) AND ((vt0.c0, rt0.c0, rt0.c1)))) IS TRUE)))) GROUP BY rt0.c3, rt0.c1, t0.c1, t0.c0 UNION SELECT rt0.c3, rt0.c1, t0.c1, t0.c0 FROM v0, rt0, vt0, t0 WHERE ((((((((rt0.c0, t0.c2, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c1, t0.c2)) AND ((vt0.c0, rt0.c0, rt0.c1)))) IS TRUE)) ISNULL)) GROUP BY rt0.c3, rt0.c1, t0.c1, t0.c0;
SELECT rt0.c3, rt0.c1, t0.c1, t0.c0 FROM v0, rt0, vt0, t0 GROUP BY rt0.c3, rt0.c1, t0.c1, t0.c0;
SELECT t0.c2 FROM vt0, t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM vt0, t0 GROUP BY t0.c2 HAVING COUNT(SUM(COUNT(*))) UNION ALL SELECT ALL t0.c2 FROM vt0, t0 GROUP BY t0.c2 HAVING (NOT (COUNT(SUM(COUNT(*))))) UNION ALL SELECT t0.c2 FROM vt0, t0 GROUP BY t0.c2 HAVING ((COUNT(SUM(COUNT(*)))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((((vt0.c0) IS FALSE))OR(CAST(vt0.c0 AS NUMERIC))))AND((((vt0.c0, v0.c0, vt0.c0))<=((vt0.c0, v0.c0, vt0.c0)))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (((((((vt0.c0) IS FALSE))OR(CAST(vt0.c0 AS NUMERIC))))AND((((vt0.c0, v0.c0, vt0.c0))<=((vt0.c0, v0.c0, vt0.c0)))))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((((((vt0.c0) IS FALSE))OR(CAST(vt0.c0 AS NUMERIC))))AND((((vt0.c0, v0.c0, vt0.c0))<=((vt0.c0, v0.c0, vt0.c0)))))) ISNULL));
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c0) NOT NULL) INNER JOIN t0 ON CAST((~ (t0.c2)) AS REAL);
SELECT DISTINCT v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c0) NOT NULL) INNER JOIN t0 ON CAST((~ (t0.c2)) AS REAL) WHERE ((((t0.c1)) NOT BETWEEN ((((((((((t0.c1)AND(rt0.c1)))AND(t0.c2)))OR(rt0.c3)))OR(NULL)))) AND ((((rt0.c3) BETWEEN (t0.c0) AND (t0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c0) NOT NULL) INNER JOIN t0 ON CAST((~ (t0.c2)) AS REAL) WHERE ((NOT ((((t0.c1)) NOT BETWEEN ((((((((((t0.c1)AND(rt0.c1)))AND(t0.c2)))OR(rt0.c3)))OR(NULL)))) AND ((((rt0.c3) BETWEEN (t0.c0) AND (t0.c0)))))))) UNION SELECT DISTINCT v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c0) NOT NULL) INNER JOIN t0 ON CAST((~ (t0.c2)) AS REAL) WHERE ((((((t0.c1)) NOT BETWEEN ((((((((((t0.c1)AND(rt0.c1)))AND(t0.c2)))OR(rt0.c3)))OR(NULL)))) AND ((((rt0.c3) BETWEEN (t0.c0) AND (t0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c0) NOT NULL) INNER JOIN t0 ON CAST((~ (t0.c2)) AS REAL);
SELECT t0.c1, t0.c2, v0.c0, vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (NOT ('')) CROSS JOIN t0 ON '-1643343695' GROUP BY t0.c1, t0.c2, v0.c0, vt0.c0, t0.c0;
SELECT t0.c1, t0.c2, v0.c0, vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (NOT ('')) CROSS JOIN t0 ON '-1643343695' WHERE ((((v0.c0)) NOT BETWEEN ((((t0.c0) ISNULL))) AND ((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END)))) GROUP BY t0.c1, t0.c2, v0.c0, vt0.c0, t0.c0 UNION SELECT ALL t0.c1, t0.c2, v0.c0, vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (NOT ('')) CROSS JOIN t0 ON '-1643343695' WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((((t0.c0) ISNULL))) AND ((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END)))))) GROUP BY t0.c1, t0.c2, v0.c0, vt0.c0, t0.c0 UNION SELECT ALL t0.c1, t0.c2, v0.c0, vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (NOT ('')) CROSS JOIN t0 ON '-1643343695' WHERE ((((((v0.c0)) NOT BETWEEN ((((t0.c0) ISNULL))) AND ((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END)))) ISNULL)) GROUP BY t0.c1, t0.c2, v0.c0, vt0.c0, t0.c0;
SELECT t0.c1, t0.c2, v0.c0, vt0.c0, t0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (NOT ('')) CROSS JOIN t0 ON '-1643343695' GROUP BY t0.c1, t0.c2, v0.c0, vt0.c0, t0.c0;
SELECT rt0.c2, t0.c0, rt0.c3, t0.c2, rt0.c0, t0.c1 FROM v0, t0, vt0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c3, t0.c2, rt0.c0, t0.c1;
SELECT rt0.c2, t0.c0, rt0.c3, t0.c2, rt0.c0, t0.c1 FROM v0, t0, vt0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c3, t0.c2, rt0.c0, t0.c1 HAVING (NOT (GROUP_CONCAT(COUNT(SUM(rt0.c1))))) UNION ALL SELECT rt0.c2, t0.c0, rt0.c3, t0.c2, rt0.c0, t0.c1 FROM v0, t0, vt0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c3, t0.c2, rt0.c0, t0.c1 HAVING (NOT ((NOT (GROUP_CONCAT(COUNT(SUM(rt0.c1))))))) UNION ALL SELECT rt0.c2, t0.c0, rt0.c3, t0.c2, rt0.c0, t0.c1 FROM v0, t0, vt0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c3, t0.c2, rt0.c0, t0.c1 HAVING (((NOT (GROUP_CONCAT(COUNT(SUM(rt0.c1)))))) ISNULL);
SELECT ALL t0.c0, rt0.c1, t0.c1, vt0.c0, rt0.c0, v0.c0, t0.c2, rt0.c3, rt0.c2 FROM t0, rt0, v0, vt0;
SELECT ALL t0.c0, rt0.c1, t0.c1, vt0.c0, rt0.c0, v0.c0, t0.c2, rt0.c3, rt0.c2 FROM t0, rt0, v0, vt0 WHERE ((((t0.c0, rt0.c1, '>婢9Glhcu')) BETWEEN ((COALESCE(DISTINCT rt0.c0, t0.c2), (~ (rt0.c0)), ((rt0.c3)<>(rt0.c0)))) AND (('E쎯v1', CAST(t0.c0 AS BLOB), t0.c1 COLLATE RTRIM)))) UNION ALL SELECT t0.c0, rt0.c1, t0.c1, vt0.c0, rt0.c0, v0.c0, t0.c2, rt0.c3, rt0.c2 FROM t0, rt0, v0, vt0 WHERE ((NOT ((((t0.c0, rt0.c1, '>婢9Glhcu')) BETWEEN ((COALESCE(DISTINCT rt0.c0, t0.c2), (~ (rt0.c0)), ((rt0.c3)!=(rt0.c0)))) AND (('E쎯v1', CAST(t0.c0 AS BLOB), t0.c1 COLLATE RTRIM)))))) UNION ALL SELECT ALL t0.c0, rt0.c1, t0.c1, vt0.c0, rt0.c0, v0.c0, t0.c2, rt0.c3, rt0.c2 FROM t0, rt0, v0, vt0 WHERE ((((((t0.c0, rt0.c1, '>婢9Glhcu')) BETWEEN ((COALESCE(DISTINCT rt0.c0, t0.c2), (~ (rt0.c0)), ((rt0.c3)!=(rt0.c0)))) AND (('E쎯v1', CAST(t0.c0 AS BLOB), t0.c1 COLLATE RTRIM)))) ISNULL));
SELECT ALL t0.c0, rt0.c1, t0.c1, vt0.c0, rt0.c0, v0.c0, t0.c2, rt0.c3, rt0.c2 FROM t0, rt0, v0, vt0;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END)==(MAX(0.8567730845164927, rt0.c2, rt0.c2, rt0.c3)))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END)==(MAX(0.8567730845164927, rt0.c2, rt0.c2, rt0.c3)))))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END)=(MAX(0.8567730845164927, rt0.c2, rt0.c2, rt0.c3)))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM rt0, v0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM rt0, v0, vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN rt0.c1 ELSE NULL END))) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM rt0, v0, vt0 WHERE ((NOT ((NOT (CASE WHEN vt0.c0 THEN rt0.c1 ELSE NULL END))))) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM rt0, v0, vt0 WHERE ((((NOT (CASE WHEN vt0.c0 THEN rt0.c1 ELSE NULL END))) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3 FROM rt0, v0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2, rt0.c3;
SELECT t0.c1, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c1, vt0.c0, t0.c0;
SELECT t0.c1, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c1, vt0.c0, t0.c0 HAVING TOTAL(COUNT(MIN(t0.c1))) UNION ALL SELECT t0.c1, vt0.c0, t0.c0 FROM t0, vt0 GROUP BY t0.c1, vt0.c0, t0.c0 HAVING (NOT (TOTAL(COUNT(MIN(t0.c1))))) UNION ALL SELECT ALL t0.c1, vt0.c0, t0.c0 FROM t0, vt0 NOT INDEXED GROUP BY t0.c1, vt0.c0, t0.c0 HAVING ((TOTAL(COUNT(MIN(t0.c1)))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (NULL) AND ('-944729989'))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0 IN ())) BETWEEN (NULL) AND ('-944729989'))))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c0 IN ())) BETWEEN (NULL) AND ('-944729989'))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((((((((((NOT (rt0.c1)))OR(((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN x'' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)))OR(((rt0.c3) ISNULL))))AND((NOT (rt0.c0)))))AND(((('-118962924', x'807a', rt0.c3, '蟑e큠&VU54', rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c3)) AND (('', rt0.c0, rt0.c3, rt0.c1, rt0.c0))))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((((((((((NOT (rt0.c1)))OR(((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN x'' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)))OR(((rt0.c3) ISNULL))))AND((NOT (rt0.c0)))))AND(((('-118962924', x'807a', rt0.c3, '蟑e큠&VU54', rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c3)) AND (('', rt0.c0, rt0.c3, rt0.c1, rt0.c0))))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((((((((((NOT (rt0.c1)))OR(((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN x'' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)))OR(((rt0.c3) ISNULL))))AND((NOT (rt0.c0)))))AND(((('-118962924', x'807a', rt0.c3, '蟑e큠&VU54', rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c3)) AND (('', rt0.c0, rt0.c3, rt0.c1, rt0.c0))))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0, t0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c0, t0.c2, t0.c1;
SELECT v0.c0, t0.c0, t0.c2, t0.c1 FROM t0, v0 WHERE ((((t0.c1)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((TRIM(DISTINCT NULL, t0.c2))))) GROUP BY v0.c0, t0.c0, t0.c2, t0.c1 UNION SELECT v0.c0, t0.c0, t0.c2, t0.c1 FROM t0, v0 WHERE ((NOT ((((t0.c1)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((TRIM(DISTINCT NULL, t0.c2))))))) GROUP BY v0.c0, t0.c0, t0.c2, t0.c1 UNION SELECT ALL v0.c0, t0.c0, t0.c2, t0.c1 FROM t0, v0 WHERE ((((((t0.c1)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((TRIM(DISTINCT NULL, t0.c2))))) ISNULL)) GROUP BY v0.c0, t0.c0, t0.c2, t0.c1;
SELECT ALL v0.c0, t0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c0, t0.c2, t0.c1;
SELECT t0.c2, rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0 FULL OUTER JOIN v0 ON rt0.c1 CROSS JOIN t0 ON CASE WHEN (((rt0.c2)) BETWEEN ((0.41086141482115934)) AND ((t0.c2))) THEN UPPER(DISTINCT rt0.c1) WHEN CASE WHEN t0.c2 THEN rt0.c0 ELSE rt0.c3 END THEN ((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)) WHEN (vt0.c0 IN ()) THEN 186806066 END GROUP BY t0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL t0.c2, rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0 FULL OUTER JOIN v0 ON rt0.c1 CROSS JOIN t0 ON CASE WHEN (((rt0.c2)) BETWEEN ((0.41086141482115934)) AND ((t0.c2))) THEN UPPER(DISTINCT rt0.c1) WHEN CASE WHEN t0.c2 THEN rt0.c0 ELSE rt0.c3 END THEN ((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)) WHEN (vt0.c0 IN ()) THEN 186806066 END GROUP BY t0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c2, rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0 FULL OUTER JOIN v0 ON rt0.c1 CROSS JOIN t0 ON CASE WHEN (((rt0.c2)) BETWEEN ((0.41086141482115934)) AND ((t0.c2))) THEN UPPER(DISTINCT rt0.c1) WHEN CASE WHEN t0.c2 THEN rt0.c0 ELSE rt0.c3 END THEN ((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)) WHEN (vt0.c0 IN ()) THEN 186806066 END GROUP BY t0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2, rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0 FULL OUTER JOIN v0 ON rt0.c1 CROSS JOIN t0 ON CASE WHEN (((rt0.c2)) BETWEEN ((0.41086141482115934)) AND ((t0.c2))) THEN UPPER(DISTINCT rt0.c1) WHEN CASE WHEN t0.c2 THEN rt0.c0 ELSE rt0.c3 END THEN ((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)) WHEN (vt0.c0 IN ()) THEN 186806066 END GROUP BY t0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c2, rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0 FULL OUTER JOIN v0 ON rt0.c1 CROSS JOIN t0 ON CASE WHEN (((rt0.c2)) BETWEEN ((0.41086141482115934)) AND ((t0.c2))) THEN UPPER(DISTINCT rt0.c1) WHEN CASE WHEN t0.c2 THEN rt0.c0 ELSE rt0.c3 END THEN ((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)) WHEN (vt0.c0 IN ()) THEN 186806066 END GROUP BY t0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL t0.c2, rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0 FULL OUTER JOIN v0 ON rt0.c1 CROSS JOIN t0 ON CASE WHEN (((rt0.c2)) BETWEEN ((0.41086141482115934)) AND ((t0.c2))) THEN UPPER(DISTINCT rt0.c1) WHEN CASE WHEN t0.c2 THEN rt0.c0 ELSE rt0.c3 END THEN ((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)) WHEN (vt0.c0 IN ()) THEN 186806066 END GROUP BY t0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c2, rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0 FULL OUTER JOIN v0 ON rt0.c1 CROSS JOIN t0 ON CASE WHEN (((rt0.c2)) BETWEEN ((0.41086141482115934)) AND ((t0.c2))) THEN UPPER(DISTINCT rt0.c1) WHEN CASE WHEN t0.c2 THEN rt0.c0 ELSE rt0.c3 END THEN ((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)) WHEN (vt0.c0 IN ()) THEN 186806066 END GROUP BY t0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2, rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0 FULL OUTER JOIN v0 ON rt0.c1 CROSS JOIN t0 ON CASE WHEN (((rt0.c2)) BETWEEN ((0.41086141482115934)) AND ((t0.c2))) THEN UPPER(DISTINCT rt0.c1) WHEN CASE WHEN t0.c2 THEN rt0.c0 ELSE rt0.c3 END THEN ((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)) WHEN (vt0.c0 IN ()) THEN 186806066 END GROUP BY t0.c2, rt0.c3, rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c2, rt0.c3, rt0.c1, rt0.c0 FROM vt0, rt0 FULL OUTER JOIN v0 ON rt0.c1 CROSS JOIN t0 ON CASE WHEN (((rt0.c2)) BETWEEN ((0.41086141482115934)) AND ((t0.c2))) THEN UPPER(DISTINCT rt0.c1) WHEN CASE WHEN t0.c2 THEN rt0.c0 ELSE rt0.c3 END THEN ((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)) WHEN (vt0.c0 IN ()) THEN 186806066 END GROUP BY t0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0)LIKE(v0.c0))) IS FALSE)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)LIKE(v0.c0))) IS FALSE)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)LIKE(v0.c0))) IS FALSE)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT t0.c2, v0.c0, rt0.c2, vt0.c0, rt0.c1, t0.c0 FROM v0, rt0, vt0, t0;
SELECT DISTINCT t0.c2, v0.c0, rt0.c2, vt0.c0, rt0.c1, t0.c0 FROM v0, rt0, vt0, t0 WHERE ((((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) IN ())) UNION SELECT DISTINCT t0.c2, v0.c0, rt0.c2, vt0.c0, rt0.c1, t0.c0 FROM v0, rt0, vt0, t0 WHERE ((NOT ((((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) IN ())))) UNION SELECT DISTINCT t0.c2, v0.c0, rt0.c2, vt0.c0, rt0.c1, t0.c0 FROM v0, rt0, vt0, t0 WHERE ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) IN ())) ISNULL));
SELECT DISTINCT t0.c2, v0.c0, rt0.c2, vt0.c0, rt0.c1, t0.c0 FROM v0, rt0, vt0, t0;
SELECT ALL rt0.c0, rt0.c1, v0.c0 FROM v0, vt0 LEFT OUTER JOIN rt0 ON ABS(rt0.c3 COLLATE RTRIM) GROUP BY rt0.c0, rt0.c1, v0.c0;
SELECT ALL rt0.c0, rt0.c1, v0.c0 FROM v0, vt0 LEFT OUTER JOIN rt0 ON ABS(rt0.c3 COLLATE RTRIM) WHERE (((((rt0.c0)<=(rt0.c3))) NOT NULL)) GROUP BY rt0.c0, rt0.c1, v0.c0 UNION SELECT ALL rt0.c0, rt0.c1, v0.c0 FROM v0, vt0 LEFT OUTER JOIN rt0 ON ABS(rt0.c3 COLLATE RTRIM) WHERE ((NOT (((((rt0.c0)<=(rt0.c3))) NOT NULL)))) GROUP BY rt0.c0, rt0.c1, v0.c0 UNION SELECT rt0.c0, rt0.c1, v0.c0 FROM v0, vt0 LEFT OUTER JOIN rt0 ON ABS(rt0.c3 COLLATE RTRIM) WHERE (((((((rt0.c0)<=(rt0.c3))) NOT NULL)) ISNULL)) GROUP BY rt0.c0, rt0.c1, v0.c0;
SELECT ALL rt0.c0, rt0.c1, v0.c0 FROM v0, vt0 LEFT OUTER JOIN rt0 ON ABS(rt0.c3 COLLATE RTRIM) GROUP BY rt0.c0, rt0.c1, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING (NOT (SUM(SUM(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((NOT (SUM(SUM(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((NOT (SUM(SUM(v0.c0))))) ISNULL);
SELECT ALL rt0.c3, v0.c0 FROM rt0, v0, t0, vt0;
SELECT ALL rt0.c3, v0.c0 FROM rt0, v0, t0, vt0 WHERE (('9f㊪C' IN ((t0.c2 IN (rt0.c2))))) UNION ALL SELECT ALL rt0.c3, v0.c0 FROM rt0, v0, t0, vt0 WHERE ((NOT (('9f㊪C' IN ((t0.c2 IN (rt0.c2))))))) UNION ALL SELECT rt0.c3, v0.c0 FROM rt0, v0, t0, vt0 WHERE (((('9f㊪C' IN ((t0.c2 IN (rt0.c2))))) ISNULL));
SELECT ALL rt0.c3, v0.c0 FROM rt0, v0, t0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN rt0 ON (+ ((((rt0.c2))<=((NULL)))));
SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN rt0 ON (+ ((((rt0.c2))<=((NULL))))) WHERE ((- (rt0.c2))) UNION SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN rt0 ON (+ ((((rt0.c2))<=((NULL))))) WHERE ((NOT ((- (rt0.c2))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN rt0 ON (+ ((((rt0.c2))<=((NULL))))) WHERE ((((- (rt0.c2))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 CROSS JOIN rt0 ON (+ ((((rt0.c2))<=((NULL)))));
SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0 WHERE (CASE WHEN ((t0.c1)+(t0.c0)) THEN t0.c0 COLLATE NOCASE ELSE t0.c1 END) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM t0 WHERE ((NOT (CASE WHEN ((t0.c1)+(t0.c0)) THEN t0.c0 COLLATE NOCASE ELSE t0.c1 END))) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM t0 WHERE (((CASE WHEN ((t0.c1)+(t0.c0)) THEN t0.c0 COLLATE NOCASE ELSE t0.c1 END) ISNULL)) GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c1, t0.c2, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c1, t0.c2, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL * FROM vt0, v0, t0, rt0;
SELECT ALL * FROM vt0, v0, t0, rt0 WHERE (rt0.c1) UNION ALL SELECT * FROM vt0, v0, t0, rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM vt0, v0, t0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL * FROM vt0, v0, t0, rt0;
SELECT DISTINCT t0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t0, vt0 FULL OUTER JOIN rt0 ON ((((rt0.c3)/(rt0.c2)))||(((((vt0.c0)AND(rt0.c1)))AND(t0.c1))));
SELECT DISTINCT t0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t0, vt0 FULL OUTER JOIN rt0 ON ((((rt0.c3)/(rt0.c2)))||(((((vt0.c0)AND(rt0.c1)))AND(t0.c1)))) WHERE (CAST((~ (0.6236012387347383)) AS TEXT)) UNION SELECT DISTINCT t0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t0, vt0 FULL OUTER JOIN rt0 ON ((((rt0.c3)/(rt0.c2)))||(((((vt0.c0)AND(rt0.c1)))AND(t0.c1)))) WHERE ((NOT (CAST((~ (0.6236012387347383)) AS TEXT)))) UNION SELECT DISTINCT t0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t0, vt0 FULL OUTER JOIN rt0 ON ((((rt0.c3)/(rt0.c2)))||(((((vt0.c0)AND(rt0.c1)))AND(t0.c1)))) WHERE (((CAST((~ (0.6236012387347383)) AS TEXT)) ISNULL));
SELECT DISTINCT t0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t0, vt0 FULL OUTER JOIN rt0 ON ((((rt0.c3)/(rt0.c2)))||(((((vt0.c0)AND(rt0.c1)))AND(t0.c1))));
SELECT rt0.c1, t0.c1, t0.c0 FROM t0, rt0, vt0, v0 GROUP BY rt0.c1, t0.c1, t0.c0;
SELECT rt0.c1, t0.c1, t0.c0 FROM t0, rt0, vt0, v0 WHERE (((((((((((vt0.c0)AND(rt0.c0)))AND(t0.c1)))OR(rt0.c3)))AND(rt0.c2)))<(rt0.c3))) GROUP BY rt0.c1, t0.c1, t0.c0 UNION SELECT rt0.c1, t0.c1, t0.c0 FROM t0, rt0, vt0, v0 WHERE ((NOT (((((((((((vt0.c0)AND(rt0.c0)))AND(t0.c1)))OR(rt0.c3)))AND(rt0.c2)))<(rt0.c3))))) GROUP BY rt0.c1, t0.c1, t0.c0 UNION SELECT rt0.c1, t0.c1, t0.c0 FROM t0, rt0, vt0, v0 WHERE (((((((((((((vt0.c0)AND(rt0.c0)))AND(t0.c1)))OR(rt0.c3)))AND(rt0.c2)))<(rt0.c3))) ISNULL)) GROUP BY rt0.c1, t0.c1, t0.c0;
SELECT rt0.c1, t0.c1, t0.c0 FROM t0, rt0, vt0, v0 GROUP BY rt0.c1, t0.c1, t0.c0;
SELECT ALL rt0.c3, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c1;
SELECT rt0.c3, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c1 HAVING MIN((((COUNT(*))) BETWEEN ((MIN(COUNT(rt0.c0)))) AND ((AVG(COUNT(GROUP_CONCAT(v0.c0))))))) UNION ALL SELECT ALL rt0.c3, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c1 HAVING (NOT (MIN((((COUNT(*))) BETWEEN ((MIN(COUNT(rt0.c0)))) AND ((AVG(COUNT(GROUP_CONCAT(v0.c0))))))))) UNION ALL SELECT rt0.c3, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c0, rt0.c0, rt0.c1 HAVING ((MIN((((COUNT(*))) BETWEEN ((MIN(COUNT(rt0.c0)))) AND ((AVG(COUNT(GROUP_CONCAT(v0.c0)))))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((+ ((((vt0.c0, NULL, 'ꃞto*#_ktw')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((+ ((((vt0.c0, NULL, 'ꃞto*#_ktw')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((+ ((((vt0.c0, NULL, 'ꃞto*#_ktw')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0)))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0, t0.c0, v0.c0, rt0.c1, rt0.c3, t0.c1 FROM v0, t0, vt0, rt0;
SELECT DISTINCT vt0.c0, t0.c0, v0.c0, rt0.c1, rt0.c3, t0.c1 FROM v0, t0, vt0, rt0 WHERE (LIKELY(UPPER(DISTINCT t0.c2))) UNION SELECT DISTINCT vt0.c0, t0.c0, v0.c0, rt0.c1, rt0.c3, t0.c1 FROM v0, t0, vt0, rt0 WHERE ((NOT (LIKELY(UPPER(DISTINCT t0.c2))))) UNION SELECT DISTINCT vt0.c0, t0.c0, v0.c0, rt0.c1, rt0.c3, t0.c1 FROM v0, t0, vt0, rt0 WHERE (((LIKELY(UPPER(DISTINCT t0.c2))) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0, v0.c0, rt0.c1, rt0.c3, t0.c1 FROM v0, t0, vt0, rt0;
